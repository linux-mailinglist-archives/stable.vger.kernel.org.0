Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 73B4C1ED022
	for <lists+stable@lfdr.de>; Wed,  3 Jun 2020 14:48:19 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725943AbgFCMre (ORCPT <rfc822;lists+stable@lfdr.de>);
        Wed, 3 Jun 2020 08:47:34 -0400
Received: from mx2.suse.de ([195.135.220.15]:46494 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725906AbgFCMre (ORCPT <rfc822;stable@vger.kernel.org>);
        Wed, 3 Jun 2020 08:47:34 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx2.suse.de (Postfix) with ESMTP id 8C9F0AE38;
        Wed,  3 Jun 2020 12:47:35 +0000 (UTC)
Date:   Wed, 03 Jun 2020 14:47:31 +0200
Message-ID: <s5hr1uwco4c.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Macpaul Lin <macpaul.lin@mediatek.com>
Cc:     <alsa-devel@alsa-project.org>,
        Mediatek WSD Upstream <wsd_upstream@mediatek.com>,
        <linux-kernel@vger.kernel.org>, <linux-usb@vger.kernel.org>,
        Johan Hovold <johan@kernel.org>, Takashi Iwai <tiwai@suse.com>,
        Hui Wang <hui.wang@canonical.com>,
        Alexander Tsoy <alexander@tsoy.me>,
        <linux-mediatek@lists.infradead.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Macpaul Lin <macpaul.lin@gmail.com>,
        Jaroslav Kysela <perex@perex.cz>,
        Szabolcs =?UTF-8?B?U3rFkWtl?= <szszoke.code@gmail.com>,
        <linux-arm-kernel@lists.infradead.org>, <stable@vger.kernel.org>
Subject: Re: [PATCH] sound: usb: pcm: fix incorrect power state when playing sound after PM_AUTO suspend
In-Reply-To: <1591187964.23525.61.camel@mtkswgap22>
References: <s5hpnahhbz8.wl-tiwai@suse.de>
        <1591153515.23525.50.camel@mtkswgap22>
        <s5heeqwfyti.wl-tiwai@suse.de>
        <s5hblm0fxl0.wl-tiwai@suse.de>
        <s5h367cfsga.wl-tiwai@suse.de>
        <1591187964.23525.61.camel@mtkswgap22>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

On Wed, 03 Jun 2020 14:39:24 +0200,
Macpaul Lin wrote:
> 
> On Wed, 2020-06-03 at 10:45 +0200, Takashi Iwai wrote:
> > On Wed, 03 Jun 2020 08:54:51 +0200,
> > Takashi Iwai wrote:
> > > 
> > > On Wed, 03 Jun 2020 08:28:09 +0200,
> > > Takashi Iwai wrote:
> > > > 
> > > > And, the most suspicious case is the last one,
> > > > chip->num_suspended-intf.  It means that the device has multiple
> > > > USB interfaces and they went to suspend, while the resume isn't
> > > > performed for the all suspended interfaces in return.
> > > 
> > > If this is the cause, a patch like below might help.
> > > It gets/puts the all assigned interfaced instead of only the primary
> > > one.
> > 
> > ... and considering of the problem again, rather the patch below might
> > be the right answer.  Now the driver tries to remember at which state
> > it entered into the system-suspend.  Upon resume, in return, when the
> > state reaches back to that point, set the card state to D0.
> > 
> > The previous patch can be applied on the top, too, and it might be
> > worth to apply both.
> > 
> > Let me know if any of those actually helps.
> > 
> > 
> > Takashi
> 
> Thanks for your response so quickly.
> I've just test this patch since it looks like enough for the issue.

Good to hear!

> This patch worked since the flag system_suspend will be set at the same
> time when power state has been changed. I have 2 interface with the head
> set. But actually the problem happened when primary one is suspended.

Currently the autosuspend is set only to the primary interface; IOW,
the other interfaces will never get autosuspend, and the another
suspend-all-intf patch should improve that situation.  But it won't
fix your actual bug, obviously :)

> So I didn't test the earlier patch "suspend all interface instead of
> only the primary one."

Could you try it one on top of the last patch?  At least I'd like to
see whether it causes any regression.

> Will you resend this patch officially later? I think this solution is
> required to send to stable, too. It's better to have it for other stable
> kernel versions include android's.

Yes, that's a general bug and worth to be merged quickly.
I'm going to submit a proper patch soon later.


thanks,

Takashi


> 
> > ---
> > diff --git a/sound/usb/card.c b/sound/usb/card.c
> > --- a/sound/usb/card.c
> > +++ b/sound/usb/card.c
> > @@ -843,9 +843,6 @@ static int usb_audio_suspend(struct usb_interface *intf, pm_message_t message)
> >  	if (chip == (void *)-1L)
> >  		return 0;
> >  
> > -	chip->autosuspended = !!PMSG_IS_AUTO(message);
> > -	if (!chip->autosuspended)
> > -		snd_power_change_state(chip->card, SNDRV_CTL_POWER_D3hot);
> >  	if (!chip->num_suspended_intf++) {
> >  		list_for_each_entry(as, &chip->pcm_list, list) {
> >  			snd_usb_pcm_suspend(as);
> > @@ -858,6 +855,11 @@ static int usb_audio_suspend(struct usb_interface *intf, pm_message_t message)
> >  			snd_usb_mixer_suspend(mixer);
> >  	}
> >  
> > +	if (!PMSG_IS_AUTO(message) && !chip->system_suspend) {
> > +		snd_power_change_state(chip->card, SNDRV_CTL_POWER_D3hot);
> > +		chip->system_suspend = chip->num_suspended_intf;
> > +	}
> > +
> >  	return 0;
> >  }
> >  
> > @@ -871,10 +873,10 @@ static int __usb_audio_resume(struct usb_interface *intf, bool reset_resume)
> >  
> >  	if (chip == (void *)-1L)
> >  		return 0;
> > -	if (--chip->num_suspended_intf)
> > -		return 0;
> >  
> >  	atomic_inc(&chip->active); /* avoid autopm */
> > +	if (chip->num_suspended_intf > 1)
> > +		goto out;
> >  
> >  	list_for_each_entry(as, &chip->pcm_list, list) {
> >  		err = snd_usb_pcm_resume(as);
> > @@ -896,9 +898,12 @@ static int __usb_audio_resume(struct usb_interface *intf, bool reset_resume)
> >  		snd_usbmidi_resume(p);
> >  	}
> >  
> > -	if (!chip->autosuspended)
> > + out:
> > +	if (chip->num_suspended_intf == chip->system_suspend) {
> >  		snd_power_change_state(chip->card, SNDRV_CTL_POWER_D0);
> > -	chip->autosuspended = 0;
> > +		chip->system_suspend = 0;
> > +	}
> > +	chip->num_suspended_intf--;
> >  
> >  err_out:
> >  	atomic_dec(&chip->active); /* allow autopm after this point */
> > diff --git a/sound/usb/usbaudio.h b/sound/usb/usbaudio.h
> > index 1c892c7f14d7..e0ebfb25fbd5 100644
> > --- a/sound/usb/usbaudio.h
> > +++ b/sound/usb/usbaudio.h
> > @@ -26,7 +26,7 @@ struct snd_usb_audio {
> >  	struct usb_interface *pm_intf;
> >  	u32 usb_id;
> >  	struct mutex mutex;
> > -	unsigned int autosuspended:1;	
> > +	unsigned int system_suspend;
> >  	atomic_t active;
> >  	atomic_t shutdown;
> >  	atomic_t usage_count;
> > 
> > _______________________________________________
> 
> Thank you very much!
> 
> Best regards,
> Macpaul Lin
> 
> 
