Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 8F8FE223F57
	for <lists+stable@lfdr.de>; Fri, 17 Jul 2020 17:18:49 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726691AbgGQPSo (ORCPT <rfc822;lists+stable@lfdr.de>);
        Fri, 17 Jul 2020 11:18:44 -0400
Received: from mail.kernel.org ([198.145.29.99]:44436 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726071AbgGQPSo (ORCPT <rfc822;stable@vger.kernel.org>);
        Fri, 17 Jul 2020 11:18:44 -0400
Received: from localhost (83-86-89-107.cable.dynamic.v4.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id CA702204EA;
        Fri, 17 Jul 2020 15:18:41 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1594999122;
        bh=f1BtxKJaxkXjtdYFh9DQbVUURSaaQKnBnQ/oI8xfcDk=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=vq06lZsj+1EQOKS9xGWyG+EaFbACKC145UCtY5yIj5mOPNqf/XN2JYOteJ9eMx9Rj
         dIoLHk8Y0Z7kJbGq+LeSWS0lFba4jbbO3yQGLRbUIwMwvqGQKaWiXbhq4O3CsX+QrE
         dd1XEHTJ54GhVArVpb630Y71mK3/JzwltRon+/v0=
Date:   Fri, 17 Jul 2020 17:18:33 +0200
From:   Greg KH <gregkh@linuxfoundation.org>
To:     gregory.herrero@oracle.com
Cc:     linux-kernel@vger.kernel.org, rostedt@goodmis.org,
        stable@vger.kernel.org
Subject: Re: [PATCH] recordmcount: only record relocation of type
 R_AARCH64_CALL26 on arm64.
Message-ID: <20200717151833.GA3403494@kroah.com>
References: <20200717143338.19302-1-gregory.herrero@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20200717143338.19302-1-gregory.herrero@oracle.com>
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

On Fri, Jul 17, 2020 at 04:33:38PM +0200, gregory.herrero@oracle.com wrote:
> From: Gregory Herrero <gregory.herrero@oracle.com>
> 
> Currently, if a section has a relocation to '_mcount' symbol, a new
> __mcount_loc entry will be added whatever the relocation type is.
> This is problematic when a relocation to '_mcount' is in the middle of a
> section and is not a call for ftrace use.
> 
> Such relocation could be generated with below code for example:
>     bool is_mcount(unsigned long addr)
>     {
>         return (target == (unsigned long) &_mcount);
>     }
> 
> With this snippet of code, ftrace will try to patch the mcount location
> generated by this code on module load and fail with:
> 
>     Call trace:
>      ftrace_bug+0xa0/0x28c
>      ftrace_process_locs+0x2f4/0x430
>      ftrace_module_init+0x30/0x38
>      load_module+0x14f0/0x1e78
>      __do_sys_finit_module+0x100/0x11c
>      __arm64_sys_finit_module+0x28/0x34
>      el0_svc_common+0x88/0x194
>      el0_svc_handler+0x38/0x8c
>      el0_svc+0x8/0xc
>     ---[ end trace d828d06b36ad9d59 ]---
>     ftrace failed to modify
>     [<ffffa2dbf3a3a41c>] 0xffffa2dbf3a3a41c
>      actual:   66:a9:3c:90
>     Initializing ftrace call sites
>     ftrace record flags: 2000000
>      (0)
>     expected tramp: ffffa2dc6cf66724
> 
> So Limit the relocation type to R_AARCH64_CALL26 as in perl version of
> recordmcount.
> 
> Fixes: ed60453fa8f8 ("ARM: 6511/1: ftrace: add ARM support for C version of recordmcount")
> Signed-off-by: Gregory Herrero <gregory.herrero@oracle.com>
> ---
>  scripts/recordmcount.c | 6 ++++++
>  1 file changed, 6 insertions(+)
> 
> diff --git a/scripts/recordmcount.c b/scripts/recordmcount.c
> index 7225107a9aaf..e59022b3f125 100644
> --- a/scripts/recordmcount.c
> +++ b/scripts/recordmcount.c
> @@ -434,6 +434,11 @@ static int arm_is_fake_mcount(Elf32_Rel const *rp)
>  	return 1;
>  }
>  
> +static int arm64_is_fake_mcount(Elf64_Rel const *rp)
> +{
> +	return ELF64_R_TYPE(w(rp->r_info)) != R_AARCH64_CALL26;
> +}
> +
>  /* 64-bit EM_MIPS has weird ELF64_Rela.r_info.
>   * http://techpubs.sgi.com/library/manuals/4000/007-4658-001/pdf/007-4658-001.pdf
>   * We interpret Table 29 Relocation Operation (Elf64_Rel, Elf64_Rela) [p.40]
> @@ -547,6 +552,7 @@ static int do_file(char const *const fname)
>  		make_nop = make_nop_arm64;
>  		rel_type_nop = R_AARCH64_NONE;
>  		ideal_nop = ideal_nop4_arm64;
> +		is_fake_mcount64 = arm64_is_fake_mcount;
>  		break;
>  	case EM_IA_64:	reltype = R_IA64_IMM64; break;
>  	case EM_MIPS:	/* reltype: e_class    */ break;
> -- 
> 2.27.0
> 

<formletter>

This is not the correct way to submit patches for inclusion in the
stable kernel tree.  Please read:
    https://www.kernel.org/doc/html/latest/process/stable-kernel-rules.html
for how to do this properly.

</formletter>
