Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id D459C5C6CB
	for <lists+stable@lfdr.de>; Tue,  2 Jul 2019 03:52:59 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726830AbfGBBw7 (ORCPT <rfc822;lists+stable@lfdr.de>);
        Mon, 1 Jul 2019 21:52:59 -0400
Received: from shards.monkeyblade.net ([23.128.96.9]:53672 "EHLO
        shards.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726486AbfGBBw6 (ORCPT
        <rfc822;stable@vger.kernel.org>); Mon, 1 Jul 2019 21:52:58 -0400
Received: from localhost (unknown [IPv6:2601:601:9f80:35cd::d71])
        (using TLSv1 with cipher AES256-SHA (256/256 bits))
        (Client did not present a certificate)
        (Authenticated sender: davem-davemloft)
        by shards.monkeyblade.net (Postfix) with ESMTPSA id 265F514DE8846
        for <stable@vger.kernel.org>; Mon,  1 Jul 2019 18:52:56 -0700 (PDT)
Date:   Mon, 01 Jul 2019 18:52:55 -0700 (PDT)
Message-Id: <20190701.185255.2169498414285832961.davem@davemloft.net>
To:     stable@vger.kernel.org
Subject: [PATCHES] Networking
From:   David Miller <davem@davemloft.net>
X-Mailer: Mew version 6.8 on Emacs 26.1
Mime-Version: 1.0
Content-Type: Multipart/Mixed;
 boundary="--Next_Part(Mon_Jul__1_18_52_55_2019_799)--"
Content-Transfer-Encoding: 7bit
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.5.12 (shards.monkeyblade.net [149.20.54.216]); Mon, 01 Jul 2019 18:52:56 -0700 (PDT)
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

----Next_Part(Mon_Jul__1_18_52_55_2019_799)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


Please apply the following bug fixes to v4.19 and v5.1 -stable,
respectively.

Thank you.

----Next_Part(Mon_Jul__1_18_52_55_2019_799)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_419.mbox"

RnJvbSA1ODdkNDU2ZGQxMTUzZDAyNGM5MTQ2ODM3NmU3YTI3NjY2MjY0ZjRjIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBOZWlsIEhvcm1hbiA8bmhvcm1hbkB0dXhkcml2ZXIuY29tPgpE
YXRlOiBUdWUsIDI1IEp1biAyMDE5IDE3OjU3OjQ5IC0wNDAwClN1YmplY3Q6IFtQQVRDSCAwMS8x
M10gYWZfcGFja2V0OiBCbG9jayBleGVjdXRpb24gb2YgdGFza3Mgd2FpdGluZyBmb3IKIHRyYW5z
bWl0IHRvIGNvbXBsZXRlIGluIEFGX1BBQ0tFVAoKWyBVcHN0cmVhbSBjb21taXQgODllZDViNTE5
MDA0YTc3MDZmNTBiNzBmNjExZWRiZDNhYWFjZmYyYyBdCgpXaGVuIGFuIGFwcGxpY2F0aW9uIGlz
IHJ1biB0aGF0OgphKSBTZXRzIGl0cyBzY2hlZHVsZXIgdG8gYmUgU0NIRURfRklGTwphbmQKYikg
T3BlbnMgYSBtZW1vcnkgbWFwcGVkIEFGX1BBQ0tFVCBzb2NrZXQsIGFuZCBzZW5kcyBmcmFtZXMg
d2l0aCB0aGUKTVNHX0RPTlRXQUlUIGZsYWcgY2xlYXJlZCwgaXRzIHBvc3NpYmxlIGZvciB0aGUg
YXBwbGljYXRpb24gdG8gaGFuZwpmb3JldmVyIGluIHRoZSBrZXJuZWwuICBUaGlzIG9jY3VycyBi
ZWNhdXNlIHdoZW4gd2FpdGluZywgdGhlIGNvZGUgaW4KdHBhY2tldF9zbmQgY2FsbHMgc2NoZWR1
bGUsIHdoaWNoIHVuZGVyIG5vcm1hbCBjaXJjdW1zdGFuY2VzIGFsbG93cwpvdGhlciB0YXNrcyB0
byBydW4sIGluY2x1ZGluZyBrc29mdGlycWQsIHdoaWNoIGluIHNvbWUgY2FzZXMgaXMKcmVzcG9u
c2libGUgZm9yIGZyZWVpbmcgdGhlIHRyYW5zbWl0dGVkIHNrYiAod2hpY2ggaW4gQUZfUEFDS0VU
IGNhbGxzIGEKZGVzdHJ1Y3RvciB0aGF0IGZsaXBzIHRoZSBzdGF0dXMgYml0IG9mIHRoZSB0cmFu
c21pdHRlZCBmcmFtZSBiYWNrIHRvCmF2YWlsYWJsZSwgYWxsb3dpbmcgdGhlIHRyYW5zbWl0dGlu
ZyB0YXNrIHRvIGNvbXBsZXRlKS4KCkhvd2V2ZXIsIHdoZW4gdGhlIGNhbGxpbmcgYXBwbGljYXRp
b24gaXMgU0NIRURfRklGTywgaXRzIHByaW9yaXR5IGlzCnN1Y2ggdGhhdCB0aGUgc2NoZWR1bGUg
Y2FsbCBpbW1lZGlhdGVseSBwbGFjZXMgdGhlIHRhc2sgYmFjayBvbiB0aGUgY3B1LApwcmV2ZW50
aW5nIGtzb2Z0aXJxZCBmcm9tIGZyZWVpbmcgdGhlIHNrYiwgd2hpY2ggaW4gdHVybiBwcmV2ZW50
cyB0aGUKdHJhbnNtaXR0aW5nIHRhc2sgZnJvbSBkZXRlY3RpbmcgdGhhdCB0aGUgdHJhbnNtaXNz
aW9uIGlzIGNvbXBsZXRlLgoKV2UgY2FuIGZpeCB0aGlzIGJ5IGNvbnZlcnRpbmcgdGhlIHNjaGVk
dWxlIGNhbGwgdG8gYSBjb21wbGV0aW9uCm1lY2hhbmlzbS4gIEJ5IHVzaW5nIGEgY29tcGxldGlv
biBxdWV1ZSwgd2UgZm9yY2UgdGhlIGNhbGxpbmcgdGFzaywgd2hlbgppdCBkZXRlY3RzIHRoZXJl
IGFyZSBubyBtb3JlIGZyYW1lcyB0byBzZW5kLCB0byBzY2hlZHVsZSBpdHNlbGYgb2ZmIHRoZQpj
cHUgdW50aWwgc3VjaCB0aW1lIGFzIHRoZSBsYXN0IHRyYW5zbWl0dGVkIHNrYiBpcyBmcmVlZCwg
YWxsb3dpbmcKZm9yd2FyZCBwcm9ncmVzcyB0byBiZSBtYWRlLgoKVGVzdGVkIGJ5IG15c2VsZiBh
bmQgdGhlIHJlcG9ydGVyLCB3aXRoIGdvb2QgcmVzdWx0cwoKQ2hhbmdlIE5vdGVzOgoKVjEtPlYy
OgoJRW5oYW5jZSB0aGUgc2xlZXAgbG9naWMgdG8gc3VwcG9ydCBiZWluZyBpbnRlcnJ1cHRpYmxl
IGFuZAphbGxvd2luZyBmb3IgaG9ub3JpbmcgdG8gU0tfU05EVElNRU8gKFdpbGxlbSBkZSBCcnVp
am4pCgpWMi0+VjM6CglSZWFycmFnZSB0aGUgcG9pbnQgYXQgd2hpY2ggd2Ugd2FpdCBmb3IgdGhl
IGNvbXBsZXRpb24gcXVldWUsIHRvCmF2b2lkIG5lZWRpbmcgdG8gY2hlY2sgZm9yIHBoL3NrYiBi
ZWluZyBudWxsIGF0IHRoZSBlbmQgb2YgdGhlIGxvb3AuCkFsc28gbW92ZSB0aGUgY29tcGxldGUg
Y2FsbCB0byB0aGUgc2tiIGRlc3RydWN0b3IgdG8gYXZvaWQgbmVlZGluZyB0bwptb2RpZnkgX19w
YWNrZXRfc2V0X3N0YXR1cy4gIEFsc28gZ2F0ZSBjYWxsaW5nIGNvbXBsZXRlIG9uCnBhY2tldF9y
ZWFkX3BlbmRpbmcgcmV0dXJuaW5nIHplcm8gdG8gYXZvaWQgbXVsdGlwbGUgY2FsbHMgdG8gY29t
cGxldGUuCihXaWxsZW0gZGUgQnJ1aWpuKQoKCU1vdmUgdGltZW8gY29tcHV0YXRpb24gd2l0aGlu
IGxvb3AsIHRvIHJlLWZldGNoIHRoZSBzb2NrZXQKdGltZW91dCBzaW5jZSB3ZSBhbHNvIHVzZSB0
aGUgdGltZW8gdmFyaWFibGUgdG8gcmVjb3JkIHRoZSByZXR1cm4gY29kZQpmcm9tIHRoZSB3YWl0
X2Zvcl9jb21wbGV0ZSBjYWxsIChOZWlsIEhvcm1hbikKClYzLT5WNDoKCVdpbGxlbSBoYXMgcmVx
dWVzdGVkIHRoYXQgdGhlIGNvbnRyb2wgZmxvdyBiZSByZXN0b3JlZCB0byB0aGUKcHJldmlvdXMg
c3RhdGUuICBEb2luZyBzbyBsZXRzIHVzIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3IgdGhlCnBvLT53
YWl0X29uX2NvbXBsZXRlIGZsYWcgdmFyaWFibGUsIGFuZCBsZXRzIHVzIGdldCByaWQgb2YgdGhl
CnBhY2tldF9uZXh0X2ZyYW1lIGZ1bmN0aW9uLCBidXQgaW50cm9kdWNlcyBhbm90aGVyIGNvbXBs
ZXhpdHkuClNwZWNpZmljYWxseSwgYnV0IHVzaW5nIHRoZSBwYWNrZXQgcGVuZGluZyBjb3VudCwg
d2UgY2FuLCBpZiBhbgphcHBsaWNhdGlvbnMgY2FsbHMgc2VuZG1zZyBtdWx0aXBsZSB0aW1lcyB3
aXRoIE1TR19ET05UV0FJVCBzZXQsIGVhY2gKc2V0IG9mIHRyYW5zbWl0dGVkIGZyYW1lcywgd2hl
biBjb21wbGV0ZSwgd2lsbCBjYXVzZQp0cGFja2V0X2Rlc3RydWN0X3NrYiB0byBpc3N1ZSBhIGNv
bXBsZXRlIGNhbGwsIGZvciB3aGljaCB0aGVyZSB3aWxsCm5ldmVyIGJlIGEgd2FpdF9vbl9jb21w
bGV0aW9uIGNhbGwuICBUaGlzIGltYmFsYW5jZSB3aWxsIGxlYWQgdG8gYW55CmZ1dHVyZSBjYWxs
IHRvIHdhaXRfZm9yX2NvbXBsZXRpb24gaGVyZSB0byByZXR1cm4gZWFybHksIHdoZW4gdGhlIGZy
YW1lcwp0aGV5IHNlbnQgbWF5IG5vdCBoYXZlIGNvbXBsZXRlZC4gIFRvIGNvcnJlY3QgdGhpcywg
d2UgbmVlZCB0byByZS1pbml0CnRoZSBjb21wbGV0aW9uIHF1ZXVlIG9uIGV2ZXJ5IGNhbGwgdG8g
dHBhY2tldF9zbmQgYmVmb3JlIHdlIGVudGVyIHRoZQpsb29wIHNvIGFzIHRvIGVuc3VyZSB3ZSB3
YWl0IHByb3Blcmx5IGZvciB0aGUgZnJhbWVzIHdlIHNlbmQgaW4gdGhpcwppdGVyYXRpb24uCgoJ
Q2hhbmdlIHRoZSB0aW1lb3V0IGFuZCBpbnRlcnJ1cHRlZCBnb3RvcyB0byBvdXRfcHV0IHJhdGhl
ciB0aGFuCm91dF9zdGF0dXMgc28gdGhhdCB3ZSBkb24ndCB0cnkgdG8gZnJlZSBhIG5vbi1leGlz
dGFudCBza2IKCUNsZWFuIHVwIHNvbWUgZXh0cmEgbmV3bGluZXMgKFdpbGxlbSBkZSBCcnVpam4p
CgpSZXZpZXdlZC1ieTogV2lsbGVtIGRlIEJydWlqbiA8d2lsbGVtYkBnb29nbGUuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBOZWlsIEhvcm1hbiA8bmhvcm1hbkB0dXhkcml2ZXIuY29tPgpSZXBvcnRlZC1i
eTogTWF0dGVvIENyb2NlIDxtY3JvY2VAcmVkaGF0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQg
Uy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9wYWNrZXQvYWZfcGFja2V0
LmMgfCAyMCArKysrKysrKysrKysrKysrKy0tLQogbmV0L3BhY2tldC9pbnRlcm5hbC5oICB8ICAx
ICsKIDIgZmlsZXMgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9uZXQvcGFja2V0L2FmX3BhY2tldC5jIGIvbmV0L3BhY2tldC9hZl9wYWNrZXQu
YwppbmRleCBkOThmY2Y5MjYxNjYuLjVhZDYxMTE2NTdmOCAxMDA2NDQKLS0tIGEvbmV0L3BhY2tl
dC9hZl9wYWNrZXQuYworKysgYi9uZXQvcGFja2V0L2FmX3BhY2tldC5jCkBAIC0yMzk5LDYgKzIz
OTksOSBAQCBzdGF0aWMgdm9pZCB0cGFja2V0X2Rlc3RydWN0X3NrYihzdHJ1Y3Qgc2tfYnVmZiAq
c2tiKQogCiAJCXRzID0gX19wYWNrZXRfc2V0X3RpbWVzdGFtcChwbywgcGgsIHNrYik7CiAJCV9f
cGFja2V0X3NldF9zdGF0dXMocG8sIHBoLCBUUF9TVEFUVVNfQVZBSUxBQkxFIHwgdHMpOworCisJ
CWlmICghcGFja2V0X3JlYWRfcGVuZGluZygmcG8tPnR4X3JpbmcpKQorCQkJY29tcGxldGUoJnBv
LT5za2JfY29tcGxldGlvbik7CiAJfQogCiAJc29ja193ZnJlZShza2IpOwpAQCAtMjU5NCw3ICsy
NTk3LDcgQEAgc3RhdGljIGludCB0cGFja2V0X3BhcnNlX2hlYWRlcihzdHJ1Y3QgcGFja2V0X3Nv
Y2sgKnBvLCB2b2lkICpmcmFtZSwKIAogc3RhdGljIGludCB0cGFja2V0X3NuZChzdHJ1Y3QgcGFj
a2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiB7Ci0Jc3RydWN0IHNrX2J1ZmYgKnNr
YjsKKwlzdHJ1Y3Qgc2tfYnVmZiAqc2tiID0gTlVMTDsKIAlzdHJ1Y3QgbmV0X2RldmljZSAqZGV2
OwogCXN0cnVjdCB2aXJ0aW9fbmV0X2hkciAqdm5ldF9oZHIgPSBOVUxMOwogCXN0cnVjdCBzb2Nr
Y21fY29va2llIHNvY2tjOwpAQCAtMjYwOSw2ICsyNjEyLDcgQEAgc3RhdGljIGludCB0cGFja2V0
X3NuZChzdHJ1Y3QgcGFja2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiAJaW50IGxl
bl9zdW0gPSAwOwogCWludCBzdGF0dXMgPSBUUF9TVEFUVVNfQVZBSUxBQkxFOwogCWludCBobGVu
LCB0bGVuLCBjb3B5bGVuID0gMDsKKwlsb25nIHRpbWVvID0gMDsKIAogCW11dGV4X2xvY2soJnBv
LT5wZ192ZWNfbG9jayk7CiAKQEAgLTI2NTUsMTIgKzI2NTksMjEgQEAgc3RhdGljIGludCB0cGFj
a2V0X3NuZChzdHJ1Y3QgcGFja2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiAJaWYg
KChzaXplX21heCA+IGRldi0+bXR1ICsgcmVzZXJ2ZSArIFZMQU5fSExFTikgJiYgIXBvLT5oYXNf
dm5ldF9oZHIpCiAJCXNpemVfbWF4ID0gZGV2LT5tdHUgKyByZXNlcnZlICsgVkxBTl9ITEVOOwog
CisJcmVpbml0X2NvbXBsZXRpb24oJnBvLT5za2JfY29tcGxldGlvbik7CisKIAlkbyB7CiAJCXBo
ID0gcGFja2V0X2N1cnJlbnRfZnJhbWUocG8sICZwby0+dHhfcmluZywKIAkJCQkJICBUUF9TVEFU
VVNfU0VORF9SRVFVRVNUKTsKIAkJaWYgKHVubGlrZWx5KHBoID09IE5VTEwpKSB7Ci0JCQlpZiAo
bmVlZF93YWl0ICYmIG5lZWRfcmVzY2hlZCgpKQotCQkJCXNjaGVkdWxlKCk7CisJCQlpZiAobmVl
ZF93YWl0ICYmIHNrYikgeworCQkJCXRpbWVvID0gc29ja19zbmR0aW1lbygmcG8tPnNrLCBtc2ct
Pm1zZ19mbGFncyAmIE1TR19ET05UV0FJVCk7CisJCQkJdGltZW8gPSB3YWl0X2Zvcl9jb21wbGV0
aW9uX2ludGVycnVwdGlibGVfdGltZW91dCgmcG8tPnNrYl9jb21wbGV0aW9uLCB0aW1lbyk7CisJ
CQkJaWYgKHRpbWVvIDw9IDApIHsKKwkJCQkJZXJyID0gIXRpbWVvID8gLUVUSU1FRE9VVCA6IC1F
UkVTVEFSVFNZUzsKKwkJCQkJZ290byBvdXRfcHV0OworCQkJCX0KKwkJCX0KKwkJCS8qIGNoZWNr
IGZvciBhZGRpdGlvbmFsIGZyYW1lcyAqLwogCQkJY29udGludWU7CiAJCX0KIApAQCAtMzIxNiw2
ICszMjI5LDcgQEAgc3RhdGljIGludCBwYWNrZXRfY3JlYXRlKHN0cnVjdCBuZXQgKm5ldCwgc3Ry
dWN0IHNvY2tldCAqc29jaywgaW50IHByb3RvY29sLAogCXNvY2tfaW5pdF9kYXRhKHNvY2ssIHNr
KTsKIAogCXBvID0gcGt0X3NrKHNrKTsKKwlpbml0X2NvbXBsZXRpb24oJnBvLT5za2JfY29tcGxl
dGlvbik7CiAJc2stPnNrX2ZhbWlseSA9IFBGX1BBQ0tFVDsKIAlwby0+bnVtID0gcHJvdG87CiAJ
cG8tPnhtaXQgPSBkZXZfcXVldWVfeG1pdDsKZGlmZiAtLWdpdCBhL25ldC9wYWNrZXQvaW50ZXJu
YWwuaCBiL25ldC9wYWNrZXQvaW50ZXJuYWwuaAppbmRleCAzYmI3YzVmYjNiZmYuLmM3MGEyNzk0
NDU2ZiAxMDA2NDQKLS0tIGEvbmV0L3BhY2tldC9pbnRlcm5hbC5oCisrKyBiL25ldC9wYWNrZXQv
aW50ZXJuYWwuaApAQCAtMTI4LDYgKzEyOCw3IEBAIHN0cnVjdCBwYWNrZXRfc29jayB7CiAJdW5z
aWduZWQgaW50CQl0cF9oZHJsZW47CiAJdW5zaWduZWQgaW50CQl0cF9yZXNlcnZlOwogCXVuc2ln
bmVkIGludAkJdHBfdHN0YW1wOworCXN0cnVjdCBjb21wbGV0aW9uCXNrYl9jb21wbGV0aW9uOwog
CXN0cnVjdCBuZXRfZGV2aWNlIF9fcmN1CSpjYWNoZWRfZGV2OwogCWludAkJCSgqeG1pdCkoc3Ry
dWN0IHNrX2J1ZmYgKnNrYik7CiAJc3RydWN0IHBhY2tldF90eXBlCXByb3RfaG9vayBfX19fY2Fj
aGVsaW5lX2FsaWduZWRfaW5fc21wOwotLSAKMi4yMC4xCgoKRnJvbSBkMmYyMWViYzRiZDI1OWY1
YmVmMTM3NjVkZTBiNDI4OTZiYjhlZDUzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBZ
dWVIYWliaW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkRhdGU6IFdlZCwgMjYgSnVuIDIwMTkg
MTY6MDg6NDQgKzA4MDAKU3ViamVjdDogW1BBVENIIDAyLzEzXSBib25kaW5nOiBBbHdheXMgZW5h
YmxlIHZsYW4gdHggb2ZmbG9hZAoKWyBVcHN0cmVhbSBjb21taXQgMzBkODE3N2U4YWM3NzZkODlk
Mzg3ZmFkNTQ3YWY2YTBmNTk5MjEwZSBdCgpXZSBidWlsZCB2bGFuIG9uIHRvcCBvZiBib25kaW5n
IGludGVyZmFjZSwgd2hpY2ggdmxhbiBvZmZsb2FkCmlzIG9mZiwgYm9uZCBtb2RlIGlzIDgwMi4z
YWQgKExBQ1ApIGFuZCB4bWl0X2hhc2hfcG9saWN5IGlzCkJPTkRfWE1JVF9QT0xJQ1lfRU5DQVAz
NC4KCkJlY2F1c2UgdmxhbiB0eCBvZmZsb2FkIGlzIG9mZiwgdmxhbiB0Y2kgaXMgY2xlYXJlZCBh
bmQgc2tiIHB1c2gKdGhlIHZsYW4gaGVhZGVyIGluIHZhbGlkYXRlX3htaXRfdmxhbigpIHdoaWxl
IHNlbmRpbmcgZnJvbSB2bGFuCmRldmljZXMuIFRoZW4gaW4gYm9uZF94bWl0X2hhc2gsIF9fc2ti
X2Zsb3dfZGlzc2VjdCgpIGZhaWxzIHRvCmdldCBpbmZvcm1hdGlvbiBmcm9tIHByb3RvY29sIGhl
YWRlcnMgZW5jYXBzdWxhdGVkIHdpdGhpbiB2bGFuLApiZWNhdXNlICduaG9mZicgaXMgcG9pbnRz
IHRvIElQIGhlYWRlciwgc28gYm9uZCBoYXNoaW5nIGlzIGJhc2VkCm9uIGxheWVyIDIgaW5mbywg
d2hpY2ggZmFpbHMgdG8gZGlzdHJpYnV0ZSBwYWNrZXRzIGFjcm9zcyBzbGF2ZXMuCgpUaGlzIHBh
dGNoIGFsd2F5cyBlbmFibGUgYm9uZGluZydzIHZsYW4gdHggb2ZmbG9hZCwgcGFzcyB0aGUgdmxh
bgpwYWNrZXRzIHRvIHRoZSBzbGF2ZSBkZXZpY2VzIHdpdGggdmxhbiB0Y2ksIGxldCB0aGVtIHRv
IGhhbmRsZQp2bGFuIGltcGxlbWVudGF0aW9uLgoKRml4ZXM6IDI3ODMzOWE0MmExYiAoImJvbmRp
bmc6IHByb3BvZ2F0ZSB2bGFuX2ZlYXR1cmVzIHRvIGJvbmRpbmcgbWFzdGVyIikKU3VnZ2VzdGVk
LWJ5OiBKaXJpIFBpcmtvIDxqaXJpQHJlc251bGxpLnVzPgpTaWduZWQtb2ZmLWJ5OiBZdWVIYWli
aW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkFja2VkLWJ5OiBKaXJpIFBpcmtvIDxqaXJpQG1l
bGxhbm94LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxv
ZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMgfCAyICstCiAxIGZp
bGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9k
cml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25k
X21haW4uYwppbmRleCAwMzliZWI1ZTBmYTIuLjdlMTYyZmZmMDFhYiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYworKysgYi9kcml2ZXJzL25ldC9ib25kaW5nL2Jv
bmRfbWFpbi5jCkBAIC00MzA3LDEyICs0MzA3LDEyIEBAIHZvaWQgYm9uZF9zZXR1cChzdHJ1Y3Qg
bmV0X2RldmljZSAqYm9uZF9kZXYpCiAJYm9uZF9kZXYtPmZlYXR1cmVzIHw9IE5FVElGX0ZfTkVU
TlNfTE9DQUw7CiAKIAlib25kX2Rldi0+aHdfZmVhdHVyZXMgPSBCT05EX1ZMQU5fRkVBVFVSRVMg
fAotCQkJCU5FVElGX0ZfSFdfVkxBTl9DVEFHX1RYIHwKIAkJCQlORVRJRl9GX0hXX1ZMQU5fQ1RB
R19SWCB8CiAJCQkJTkVUSUZfRl9IV19WTEFOX0NUQUdfRklMVEVSOwogCiAJYm9uZF9kZXYtPmh3
X2ZlYXR1cmVzIHw9IE5FVElGX0ZfR1NPX0VOQ0FQX0FMTCB8IE5FVElGX0ZfR1NPX1VEUF9MNDsK
IAlib25kX2Rldi0+ZmVhdHVyZXMgfD0gYm9uZF9kZXYtPmh3X2ZlYXR1cmVzOworCWJvbmRfZGV2
LT5mZWF0dXJlcyB8PSBORVRJRl9GX0hXX1ZMQU5fQ1RBR19UWCB8IE5FVElGX0ZfSFdfVkxBTl9T
VEFHX1RYOwogfQogCiAvKiBEZXN0cm95IGEgYm9uZGluZyBkZXZpY2UuCi0tIAoyLjIwLjEKCgpG
cm9tIDRjYmI1YWU3OGE1ODgyZjg2ODFiMTY0MjJhMzIzZGJiMjExOWU5ODIgTW9uIFNlcCAxNyAw
MDowMDowMCAyMDAxCkZyb206IFN0ZXBoZW4gU3VyeWFwdXRyYSA8c3N1cnlhZXh0ckBnbWFpbC5j
b20+CkRhdGU6IE1vbiwgMjQgSnVuIDIwMTkgMjA6MTQ6MDYgLTA0MDAKU3ViamVjdDogW1BBVENI
IDAzLzEzXSBpcHY0OiBVc2UgcmV0dXJuIHZhbHVlIG9mIGluZXRfaWlmKCkgZm9yCiBfX3Jhd192
NF9sb29rdXAgaW4gdGhlIHdoaWxlIGxvb3AKClsgVXBzdHJlYW0gY29tbWl0IDM4YzczNTI5ZGUx
M2UxZTEwOTE0ZGU3MDMwYjY1OWEyZjhiMDFjM2IgXQoKSW4gY29tbWl0IDE5ZTRlNzY4MDY0YTgg
KCJpcHY0OiBGaXggcmF3IHNvY2tldCBsb29rdXAgZm9yIGxvY2FsCnRyYWZmaWMiKSwgdGhlIGRp
ZiBhcmd1bWVudCB0byBfX3Jhd192NF9sb29rdXAoKSBpcyBjb21pbmcgZnJvbSB0aGUKcmV0dXJu
ZWQgdmFsdWUgb2YgaW5ldF9paWYoKSBidXQgdGhlIGNoYW5nZSB3YXMgZG9uZSBvbmx5IGZvciB0
aGUgZmlyc3QKbG9va3VwLiBTdWJzZXF1ZW50IGxvb2t1cHMgaW4gdGhlIHdoaWxlIGxvb3Agc3Rp
bGwgdXNlIHNrYi0+ZGV2LT5pZkluZGV4LgoKRml4ZXM6IDE5ZTRlNzY4MDY0YTggKCJpcHY0OiBG
aXggcmF3IHNvY2tldCBsb29rdXAgZm9yIGxvY2FsIHRyYWZmaWMiKQpTaWduZWQtb2ZmLWJ5OiBT
dGVwaGVuIFN1cnlhcHV0cmEgPHNzdXJ5YWV4dHJAZ21haWwuY29tPgpSZXZpZXdlZC1ieTogRGF2
aWQgQWhlcm4gPGRzYWhlcm5AZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2lwdjQvcmF3LmMgfCAyICstCiAxIGZp
bGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9u
ZXQvaXB2NC9yYXcuYyBiL25ldC9pcHY0L3Jhdy5jCmluZGV4IDcxMWE1Yzc1YmQ0Yi4uMjE4MDA5
NzllZDYyIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9yYXcuYworKysgYi9uZXQvaXB2NC9yYXcuYwpA
QCAtMjAyLDcgKzIwMiw3IEBAIHN0YXRpYyBpbnQgcmF3X3Y0X2lucHV0KHN0cnVjdCBza19idWZm
ICpza2IsIGNvbnN0IHN0cnVjdCBpcGhkciAqaXBoLCBpbnQgaGFzaCkKIAkJfQogCQlzayA9IF9f
cmF3X3Y0X2xvb2t1cChuZXQsIHNrX25leHQoc2spLCBpcGgtPnByb3RvY29sLAogCQkJCSAgICAg
aXBoLT5zYWRkciwgaXBoLT5kYWRkciwKLQkJCQkgICAgIHNrYi0+ZGV2LT5pZmluZGV4LCBzZGlm
KTsKKwkJCQkgICAgIGRpZiwgc2RpZik7CiAJfQogb3V0OgogCXJlYWRfdW5sb2NrKCZyYXdfdjRf
aGFzaGluZm8ubG9jayk7Ci0tIAoyLjIwLjEKCgpGcm9tIGYyYjZkNjViODM5NmU4NDg4YzZjMzA5
YmRjMjVmMmFlYWI5NWQ5MDkgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVt
YXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KRGF0ZTogTW9uLCAyNCBKdW4gMjAxOSAwMjozODoy
MCAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggMDQvMTNdIG5ldC9wYWNrZXQ6IGZpeCBtZW1vcnkgbGVh
ayBpbiBwYWNrZXRfc2V0X3JpbmcoKQoKWyBVcHN0cmVhbSBjb21taXQgNTU2NTVlM2QxMTk3ZmZm
MTZhN2EwNTA4OGZiMGU1ZWJhNTBlYWM1NSBdCgpzeXpib3QgZm91bmQgd2UgY2FuIGxlYWsgbWVt
b3J5IGluIHBhY2tldF9zZXRfcmluZygpLCBpZiB1c2VyIGFwcGxpY2F0aW9uCnByb3ZpZGVzIGJ1
Z2d5IHBhcmFtZXRlcnMuCgpGaXhlczogN2Y5NTNhYjJiYTQ2ICgiYWZfcGFja2V0OiBUWF9SSU5H
IHN1cHBvcnQgZm9yIFRQQUNLRVRfVjMiKQpTaWduZWQtb2ZmLWJ5OiBFcmljIER1bWF6ZXQgPGVk
dW1hemV0QGdvb2dsZS5jb20+CkNjOiBTb3dtaW5pIFZhcmFkaGFuIDxzb3dtaW5pLnZhcmFkaGFu
QG9yYWNsZS5jb20+ClJlcG9ydGVkLWJ5OiBzeXpib3QgPHN5emthbGxlckBnb29nbGVncm91cHMu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+
Ci0tLQogbmV0L3BhY2tldC9hZl9wYWNrZXQuYyB8IDMgKystCiAxIGZpbGUgY2hhbmdlZCwgMiBp
bnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3BhY2tldC9hZl9w
YWNrZXQuYyBiL25ldC9wYWNrZXQvYWZfcGFja2V0LmMKaW5kZXggNWFkNjExMTY1N2Y4Li45M2I1
YTQyMDA1ODUgMTAwNjQ0Ci0tLSBhL25ldC9wYWNrZXQvYWZfcGFja2V0LmMKKysrIGIvbmV0L3Bh
Y2tldC9hZl9wYWNrZXQuYwpAQCAtNDMxNiw3ICs0MzE2LDcgQEAgc3RhdGljIGludCBwYWNrZXRf
c2V0X3Jpbmcoc3RydWN0IHNvY2sgKnNrLCB1bmlvbiB0cGFja2V0X3JlcV91ICpyZXFfdSwKIAkJ
CQkgICAgcmVxMy0+dHBfc2l6ZW9mX3ByaXYgfHwKIAkJCQkgICAgcmVxMy0+dHBfZmVhdHVyZV9y
ZXFfd29yZCkgewogCQkJCQllcnIgPSAtRUlOVkFMOwotCQkJCQlnb3RvIG91dDsKKwkJCQkJZ290
byBvdXRfZnJlZV9wZ192ZWM7CiAJCQkJfQogCQkJfQogCQkJYnJlYWs7CkBAIC00MzgwLDYgKzQz
ODAsNyBAQCBzdGF0aWMgaW50IHBhY2tldF9zZXRfcmluZyhzdHJ1Y3Qgc29jayAqc2ssIHVuaW9u
IHRwYWNrZXRfcmVxX3UgKnJlcV91LAogCQkJcHJiX3NodXRkb3duX3JldGlyZV9ibGtfdGltZXIo
cG8sIHJiX3F1ZXVlKTsKIAl9CiAKK291dF9mcmVlX3BnX3ZlYzoKIAlpZiAocGdfdmVjKQogCQlm
cmVlX3BnX3ZlYyhwZ192ZWMsIG9yZGVyLCByZXEtPnRwX2Jsb2NrX25yKTsKIG91dDoKLS0gCjIu
MjAuMQoKCkZyb20gZGI0ZGQ0YjAxNjMyNTAwYTE3NDdmZjhmMmMyMDFiYzA3OTk5NzhlZCBNb24g
U2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogSmluZ1lpIEhvdSA8aG91amluZ3lpNjQ3QGdtYWls
LmNvbT4KRGF0ZTogTW9uLCAxNyBKdW4gMjAxOSAxNDo1NjowNSArMDgwMApTdWJqZWN0OiBbUEFU
Q0ggMDUvMTNdIG5ldDogcmVtb3ZlIGR1cGxpY2F0ZSBmZXRjaCBpbiBzb2NrX2dldHNvY2tvcHQK
ClsgVXBzdHJlYW0gY29tbWl0IGQwYmFlNGEwZTNkOGM1NjkwYTg4NTIwNGQ3ZWIyMzQxYTViNDg4
NGQgXQoKSW4gc29ja19nZXRzb2Nrb3B0KCksICdvcHRsZW4nIGlzIGZldGNoZWQgdGhlIGZpcnN0
IHRpbWUgZnJvbSB1c2Vyc3BhY2UuCidsZW4gPCAwJyBpcyB0aGVuIGNoZWNrZWQuIFRoZW4gaW4g
Y29uZGl0aW9uICdTT19NRU1JTkZPJywgJ29wdGxlbicgaXMKZmV0Y2hlZCB0aGUgc2Vjb25kIHRp
bWUgZnJvbSB1c2Vyc3BhY2UuCgpJZiBjaGFuZ2UgaXQgYmV0d2VlbiB0d28gZmV0Y2hlcyBtYXkg
Y2F1c2Ugc2VjdXJpdHkgcHJvYmxlbXMgb3IgdW5leHBlY3RlZApiZWhhaXZvciwgYW5kIHRoZXJl
IGlzIG5vIHJlYXNvbiB0byBmZXRjaCBpdCBhIHNlY29uZCB0aW1lLgoKVG8gZml4IHRoaXMsIHdl
IG5lZWQgdG8gcmVtb3ZlIHRoZSBzZWNvbmQgZmV0Y2guCgpTaWduZWQtb2ZmLWJ5OiBKaW5nWWkg
SG91IDxob3VqaW5neWk2NDdAZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2NvcmUvc29jay5jIHwgMyAtLS0KIDEg
ZmlsZSBjaGFuZ2VkLCAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NvY2su
YyBiL25ldC9jb3JlL3NvY2suYwppbmRleCBjOTY2OGRjYjVlYjkuLjljMzJlOGViNjRkYSAxMDA2
NDQKLS0tIGEvbmV0L2NvcmUvc29jay5jCisrKyBiL25ldC9jb3JlL3NvY2suYwpAQCAtMTM0OCw5
ICsxMzQ4LDYgQEAgaW50IHNvY2tfZ2V0c29ja29wdChzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBpbnQg
bGV2ZWwsIGludCBvcHRuYW1lLAogCXsKIAkJdTMyIG1lbWluZm9bU0tfTUVNSU5GT19WQVJTXTsK
IAotCQlpZiAoZ2V0X3VzZXIobGVuLCBvcHRsZW4pKQotCQkJcmV0dXJuIC1FRkFVTFQ7Ci0KIAkJ
c2tfZ2V0X21lbWluZm8oc2ssIG1lbWluZm8pOwogCiAJCWxlbiA9IG1pbl90KHVuc2lnbmVkIGlu
dCwgbGVuLCBzaXplb2YobWVtaW5mbykpOwotLSAKMi4yMC4xCgoKRnJvbSBkOWYwYjQxYTQ5Y2Fi
YzMwY2RhZWIwY2Q1M2I2NTQ5NTljN2Y3OGRlIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9t
OiBSb2xhbmQgSGlpIDxyb2xhbmQua2luZy5ndWFuLmhpaUBpbnRlbC5jb20+CkRhdGU6IFdlZCwg
MTkgSnVuIDIwMTkgMjI6MTM6NDggKzA4MDAKU3ViamVjdDogW1BBVENIIDA2LzEzXSBuZXQ6IHN0
bW1hYzogZml4ZWQgbmV3IHN5c3RlbSB0aW1lIHNlY29uZHMgdmFsdWUKIGNhbGN1bGF0aW9uCgpb
IFVwc3RyZWFtIGNvbW1pdCBhMWU1Mzg4YjRkNWZjNzg2ODhlNWU5ZWU2NjQxZjc3OTcyMWQ2Mjkx
IF0KCldoZW4gQUREU1VCIGJpdCBpcyBzZXQsIHRoZSBzeXN0ZW0gdGltZSBzZWNvbmRzIGZpZWxk
IGlzIGNhbGN1bGF0ZWQgYXMKdGhlIGNvbXBsZW1lbnQgb2YgdGhlIHNlY29uZHMgcGFydCBvZiB0
aGUgdXBkYXRlIHZhbHVlLgoKRm9yIGV4YW1wbGUsIGlmIDMuMDAwMDAwMDAxIHNlY29uZHMgbmVl
ZCB0byBiZSBzdWJ0cmFjdGVkIGZyb20gdGhlCnN5c3RlbSB0aW1lLCB0aGlzIGZpZWxkIGlzIGNh
bGN1bGF0ZWQgYXMKMl4zMiAtIDMgPSA0Mjk0OTY3Mjk2IC0gMyA9IDB4MTAwMDAwMDAwIC0gMyA9
IDB4RkZGRkZGRkQKClByZXZpb3VzbHksIHRoZSAweDEwMDAwMDAwMCBpcyBtaXN0YWtlbmx5IHdy
aXR0ZW4gYXMgMTAwMDAwMDAwLgoKVGhpcyBpcyBmdXJ0aGVyIHNpbXBsaWZpZWQgZnJvbQogIHNl
YyA9ICgweDEwMDAwMDAwMFVMTCAtIHNlYyk7CnRvCiAgc2VjID0gLXNlYzsKCkZpeGVzOiBiYTFm
ZmQ3NGRmNzQgKCJzdG1tYWM6IGZpeCBQVFAgc3VwcG9ydCBmb3IgR01BQzQiKQpTaWduZWQtb2Zm
LWJ5OiBSb2xhbmQgSGlpIDxyb2xhbmQua2luZy5ndWFuLmhpaUBpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IE9uZyBCb29uIExlb25nIDxib29uLmxlb25nLm9uZ0BpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IFZvb24gV2VpZmVuZyA8d2VpZmVuZy52b29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0
L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19od3RzdGFtcC5jIHwgMiArLQogMSBmaWxl
IGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMgYi9kcml2
ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1tYWNfaHd0c3RhbXAuYwppbmRleCA4
ZDljYzIxNTdhZmQuLjc0MjMyNjJjZTU5MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMKKysrIGIvZHJpdmVycy9uZXQvZXRo
ZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMKQEAgLTEyMiw3ICsxMjIsNyBA
QCBzdGF0aWMgaW50IGFkanVzdF9zeXN0aW1lKHZvaWQgX19pb21lbSAqaW9hZGRyLCB1MzIgc2Vj
LCB1MzIgbnNlYywKIAkJICogcHJvZ3JhbW1lZCB3aXRoICgyXjMyIOKAkyA8bmV3X3NlY192YWx1
ZT4pCiAJCSAqLwogCQlpZiAoZ21hYzQpCi0JCQlzZWMgPSAoMTAwMDAwMDAwVUxMIC0gc2VjKTsK
KwkJCXNlYyA9IC1zZWM7CiAKIAkJdmFsdWUgPSByZWFkbChpb2FkZHIgKyBQVFBfVENSKTsKIAkJ
aWYgKHZhbHVlICYgUFRQX1RDUl9UU0NUUkxTU1IpCi0tIAoyLjIwLjEKCgpGcm9tIDJmM2Y1MDc0
MWNlMzZkOTE5Yjg2ZmM3ZDE0ZDEzNzI3M2NhNmZmZDggTW9uIFNlcCAxNyAwMDowMDowMCAyMDAx
CkZyb206IFJvbGFuZCBIaWkgPHJvbGFuZC5raW5nLmd1YW4uaGlpQGludGVsLmNvbT4KRGF0ZTog
V2VkLCAxOSBKdW4gMjAxOSAyMjo0MTo0OCArMDgwMApTdWJqZWN0OiBbUEFUQ0ggMDcvMTNdIG5l
dDogc3RtbWFjOiBzZXQgSUMgYml0IHdoZW4gdHJhbnNtaXR0aW5nIGZyYW1lcyB3aXRoCiBIVyB0
aW1lc3RhbXAKClsgVXBzdHJlYW0gY29tbWl0IGQwYmI4MmZkNjAxODM4NjhmNDZjOGNjYzU5NWEz
ZDYxYzMzMzRhMTggXQoKV2hlbiB0cmFuc21pdHRpbmcgY2VydGFpbiBQVFAgZnJhbWVzLCBlLmcu
IFNZTkMgYW5kIERFTEFZX1JFUSwgdGhlClBUUCBkYWVtb24sIGUuZy4gcHRwNGwsIGlzIHBvbGxp
bmcgdGhlIGRyaXZlciBmb3IgdGhlIGZyYW1lIHRyYW5zbWl0CmhhcmR3YXJlIHRpbWVzdGFtcC4g
VGhlIHBvbGxpbmcgd2lsbCBtb3N0IGxpa2VseSB0aW1lb3V0IGlmIHRoZSB0eApjb2FsZXNjZSBp
cyBlbmFibGVkIGR1ZSB0byB0aGUgSW50ZXJydXB0LW9uLUNvbXBsZXRpb24gKElDKSBiaXQgaXMK
bm90IHNldCBpbiB0eCBkZXNjcmlwdG9yIGZvciB0aG9zZSBmcmFtZXMuCgpUaGlzIHBhdGNoIHdp
bGwgaWdub3JlIHRoZSB0eCBjb2FsZXNjZSBwYXJhbWV0ZXIgYW5kIHNldCB0aGUgSUMgYml0Cndo
ZW4gdHJhbnNtaXR0aW5nIFBUUCBmcmFtZXMgd2hpY2ggbmVlZCB0byByZXBvcnQgb3V0IHRoZSBm
cmFtZQp0cmFuc21pdCBoYXJkd2FyZSB0aW1lc3RhbXAgdG8gdXNlciBzcGFjZS4KCkZpeGVzOiBm
NzQ4YmU1MzFkNzAgKCJuZXQ6IHN0bW1hYzogUmV3b3JrIGNvYWxlc2NlIHRpbWVyIGFuZCBmaXgg
bXVsdGktcXVldWUgcmFjZXMiKQpTaWduZWQtb2ZmLWJ5OiBSb2xhbmQgSGlpIDxyb2xhbmQua2lu
Zy5ndWFuLmhpaUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE9uZyBCb29uIExlb25nIDxib29u
Lmxlb25nLm9uZ0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IFZvb24gV2VpZmVuZyA8d2VpZmVu
Zy52b29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBk
YXZlbWxvZnQubmV0PgotLS0KIC4uLi9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFj
X21haW4uYyB8IDIyICsrKysrKysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxNCBpbnNl
cnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9z
dG1pY3JvL3N0bW1hYy9zdG1tYWNfbWFpbi5jCmluZGV4IDQ1ZTY0ZDcxYTkzZi4uNWMxODg3NDYx
NGJhIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1t
YWNfbWFpbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1h
Y19tYWluLmMKQEAgLTI5MzgsMTIgKzI5MzgsMTUgQEAgc3RhdGljIG5ldGRldl90eF90IHN0bW1h
Y190c29feG1pdChzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgbmV0X2RldmljZSAqZGV2KQog
CiAJLyogTWFuYWdlIHR4IG1pdGlnYXRpb24gKi8KIAl0eF9xLT50eF9jb3VudF9mcmFtZXMgKz0g
bmZyYWdzICsgMTsKLQlpZiAocHJpdi0+dHhfY29hbF9mcmFtZXMgPD0gdHhfcS0+dHhfY291bnRf
ZnJhbWVzKSB7CisJaWYgKGxpa2VseShwcml2LT50eF9jb2FsX2ZyYW1lcyA+IHR4X3EtPnR4X2Nv
dW50X2ZyYW1lcykgJiYKKwkgICAgIShwcml2LT5zeW5vcHN5c19pZCA+PSBEV01BQ19DT1JFXzRf
MDAgJiYKKwkgICAgKHNrYl9zaGluZm8oc2tiKS0+dHhfZmxhZ3MgJiBTS0JUWF9IV19UU1RBTVAp
ICYmCisJICAgIHByaXYtPmh3dHNfdHhfZW4pKSB7CisJCXN0bW1hY190eF90aW1lcl9hcm0ocHJp
diwgcXVldWUpOworCX0gZWxzZSB7CisJCXR4X3EtPnR4X2NvdW50X2ZyYW1lcyA9IDA7CiAJCXN0
bW1hY19zZXRfdHhfaWMocHJpdiwgZGVzYyk7CiAJCXByaXYtPnhzdGF0cy50eF9zZXRfaWNfYml0
Kys7Ci0JCXR4X3EtPnR4X2NvdW50X2ZyYW1lcyA9IDA7Ci0JfSBlbHNlIHsKLQkJc3RtbWFjX3R4
X3RpbWVyX2FybShwcml2LCBxdWV1ZSk7CiAJfQogCiAJc2tiX3R4X3RpbWVzdGFtcChza2IpOwpA
QCAtMzE1NywxMiArMzE2MCwxNSBAQCBzdGF0aWMgbmV0ZGV2X3R4X3Qgc3RtbWFjX3htaXQoc3Ry
dWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IG5ldF9kZXZpY2UgKmRldikKIAkgKiBlbGVtZW50IGlu
IGNhc2Ugb2Ygbm8gU0cuCiAJICovCiAJdHhfcS0+dHhfY291bnRfZnJhbWVzICs9IG5mcmFncyAr
IDE7Ci0JaWYgKHByaXYtPnR4X2NvYWxfZnJhbWVzIDw9IHR4X3EtPnR4X2NvdW50X2ZyYW1lcykg
eworCWlmIChsaWtlbHkocHJpdi0+dHhfY29hbF9mcmFtZXMgPiB0eF9xLT50eF9jb3VudF9mcmFt
ZXMpICYmCisJICAgICEocHJpdi0+c3lub3BzeXNfaWQgPj0gRFdNQUNfQ09SRV80XzAwICYmCisJ
ICAgIChza2Jfc2hpbmZvKHNrYiktPnR4X2ZsYWdzICYgU0tCVFhfSFdfVFNUQU1QKSAmJgorCSAg
ICBwcml2LT5od3RzX3R4X2VuKSkgeworCQlzdG1tYWNfdHhfdGltZXJfYXJtKHByaXYsIHF1ZXVl
KTsKKwl9IGVsc2UgeworCQl0eF9xLT50eF9jb3VudF9mcmFtZXMgPSAwOwogCQlzdG1tYWNfc2V0
X3R4X2ljKHByaXYsIGRlc2MpOwogCQlwcml2LT54c3RhdHMudHhfc2V0X2ljX2JpdCsrOwotCQl0
eF9xLT50eF9jb3VudF9mcmFtZXMgPSAwOwotCX0gZWxzZSB7Ci0JCXN0bW1hY190eF90aW1lcl9h
cm0ocHJpdiwgcXVldWUpOwogCX0KIAogCXNrYl90eF90aW1lc3RhbXAoc2tiKTsKLS0gCjIuMjAu
MQoKCkZyb20gOTRkNWVlMzFjNzZhZGUzNzkzODZjMGE2YjVjOWE4MDZhYzg5Njc2ZiBNb24gU2Vw
IDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogPT9VVEYtOD9xP0JqPUMzPUI4cm49MjBNb3JrPz0gPGJq
b3JuQG1vcmsubm8+CkRhdGU6IE1vbiwgMjQgSnVuIDIwMTkgMTg6NDU6MTEgKzAyMDAKU3ViamVj
dDogW1BBVENIIDA4LzEzXSBxbWlfd3dhbjogRml4IG91dC1vZi1ib3VuZHMgcmVhZApNSU1FLVZl
cnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKQ29udGVu
dC1UcmFuc2Zlci1FbmNvZGluZzogOGJpdAoKWyBVcHN0cmVhbSBjb21taXQgOTA0ZDg4ZDc0M2Iw
Yzk0MDkyYzUxMTc5NTVlYWI2OTVkZjgxMDllOCBdCgpUaGUgc3l6Ym90IHJlcG9ydGVkCgogQ2Fs
bCBUcmFjZToKICBfX2R1bXBfc3RhY2sgbGliL2R1bXBfc3RhY2suYzo3NyBbaW5saW5lXQogIGR1
bXBfc3RhY2srMHhjYS8weDEzZSBsaWIvZHVtcF9zdGFjay5jOjExMwogIHByaW50X2FkZHJlc3Nf
ZGVzY3JpcHRpb24rMHg2Ny8weDIzMSBtbS9rYXNhbi9yZXBvcnQuYzoxODgKICBfX2thc2FuX3Jl
cG9ydC5jb2xkKzB4MWEvMHgzMiBtbS9rYXNhbi9yZXBvcnQuYzozMTcKICBrYXNhbl9yZXBvcnQr
MHhlLzB4MjAgbW0va2FzYW4vY29tbW9uLmM6NjE0CiAgcW1pX3d3YW5fcHJvYmUrMHgzNDIvMHgz
NjAgZHJpdmVycy9uZXQvdXNiL3FtaV93d2FuLmM6MTQxNwogIHVzYl9wcm9iZV9pbnRlcmZhY2Ur
MHgzMDUvMHg3YTAgZHJpdmVycy91c2IvY29yZS9kcml2ZXIuYzozNjEKICByZWFsbHlfcHJvYmUr
MHgyODEvMHg2NjAgZHJpdmVycy9iYXNlL2RkLmM6NTA5CiAgZHJpdmVyX3Byb2JlX2RldmljZSsw
eDEwNC8weDIxMCBkcml2ZXJzL2Jhc2UvZGQuYzo2NzAKICBfX2RldmljZV9hdHRhY2hfZHJpdmVy
KzB4MWMyLzB4MjIwIGRyaXZlcnMvYmFzZS9kZC5jOjc3NwogIGJ1c19mb3JfZWFjaF9kcnYrMHgx
NWMvMHgxZTAgZHJpdmVycy9iYXNlL2J1cy5jOjQ1NAoKQ2F1c2VkIGJ5IHRvbyBtYW55IGNvbmZ1
c2luZyBpbmRpcmVjdGlvbnMgYW5kIGNhc3RzLgppZC0+ZHJpdmVyX2luZm8gaXMgYSBwb2ludGVy
IHN0b3JlZCBpbiBhIGxvbmcuICBXZSB3YW50IHRoZQpwb2ludGVyIGhlcmUsIG5vdCB0aGUgYWRk
cmVzcyBvZiBpdC4KClRoYW5rcy10bzogSGlsbGYgRGFudG9uIDxoZGFudG9uQHNpbmEuY29tPgpS
ZXBvcnRlZC1ieTogc3l6Ym90K2I2ODYwNWQ3ZmFkZDIxNTEwZGUxQHN5emthbGxlci5hcHBzcG90
bWFpbC5jb20KQ2M6IEtyaXN0aWFuIEV2ZW5zZW4gPGtyaXN0aWFuLmV2ZW5zZW5AZ21haWwuY29t
PgpGaXhlczogZTRiZjYzNDgyYzMwICgicW1pX3d3YW46IEFkZCBxdWlyayBmb3IgUXVlY3RlbCBk
eW5hbWljIGNvbmZpZyIpClNpZ25lZC1vZmYtYnk6IEJqw7hybiBNb3JrIDxiam9ybkBtb3JrLm5v
PgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0t
LQogZHJpdmVycy9uZXQvdXNiL3FtaV93d2FuLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBp
bnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC91c2Iv
cW1pX3d3YW4uYyBiL2RyaXZlcnMvbmV0L3VzYi9xbWlfd3dhbi5jCmluZGV4IGQ5YTY2OTlhYmU1
OS4uZTY1N2Q4OTQ3MTI1IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC91c2IvcW1pX3d3YW4uYwor
KysgYi9kcml2ZXJzL25ldC91c2IvcW1pX3d3YW4uYwpAQCAtMTQxMiw3ICsxNDEyLDcgQEAgc3Rh
dGljIGludCBxbWlfd3dhbl9wcm9iZShzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZiwKIAkgKiBk
aWZmZXJlbnQuIElnbm9yZSB0aGUgY3VycmVudCBpbnRlcmZhY2UgaWYgdGhlIG51bWJlciBvZiBl
bmRwb2ludHMKIAkgKiBlcXVhbHMgdGhlIG51bWJlciBmb3IgdGhlIGRpYWcgaW50ZXJmYWNlICh0
d28pLgogCSAqLwotCWluZm8gPSAodm9pZCAqKSZpZC0+ZHJpdmVyX2luZm87CisJaW5mbyA9ICh2
b2lkICopaWQtPmRyaXZlcl9pbmZvOwogCiAJaWYgKGluZm8tPmRhdGEgJiBRTUlfV1dBTl9RVUlS
S19RVUVDVEVMX0RZTkNGRykgewogCQlpZiAoZGVzYy0+Yk51bUVuZHBvaW50cyA9PSAyKQotLSAK
Mi4yMC4xCgoKRnJvbSAwNDAyZjZiMjI3NjdjM2JhYWQ1MzRjYjdiNzBmNzc0MGQxOTE1MTY4IE1v
biBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5j
b20+CkRhdGU6IFR1ZSwgMjUgSnVuIDIwMTkgMDA6MjE6NDUgKzA4MDAKU3ViamVjdDogW1BBVENI
IDA5LzEzXSBzY3RwOiBjaGFuZ2UgdG8gaG9sZCBzayBhZnRlciBhdXRoIHNoa2V5IGlzIGNyZWF0
ZWQKIHN1Y2Nlc3NmdWxseQoKWyBVcHN0cmVhbSBjb21taXQgMjViZmY2ZDU0NzhiMmEwMjM2ODA5
NzAxNWI3ZDhlYjcyN2M4N2UxNiBdCgpOb3cgaW4gc2N0cF9lbmRwb2ludF9pbml0KCksIGl0IGhv
bGRzIHRoZSBzayB0aGVuIGNyZWF0ZXMgYXV0aApzaGtleS4gQnV0IHdoZW4gdGhlIGNyZWF0aW9u
IGZhaWxzLCBpdCBkb2Vzbid0IHJlbGVhc2UgdGhlIHNrLAp3aGljaCBjYXVzZXMgYSBzayBkZWZj
bmYgbGVhaywKCkhlcmUgdG8gZml4IGl0IGJ5IG9ubHkgaG9sZGluZyB0aGUgc2sgd2hlbiBhdXRo
IHNoa2V5IGlzIGNyZWF0ZWQKc3VjY2Vzc2Z1bGx5LgoKRml4ZXM6IGEyOWE1YmQ0ZjVjMyAoIltT
Q1RQXTogSW1wbGVtZW50IFNDVFAtQVVUSCBpbml0aWFsaXphdGlvbnMuIikKUmVwb3J0ZWQtYnk6
IHN5emJvdCthZmFiZGEzODkwY2MyZjc2NTA0MUBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tClJl
cG9ydGVkLWJ5OiBzeXpib3QrMjc2Y2ExYzc3YTE5OTc3YzAxMzBAc3l6a2FsbGVyLmFwcHNwb3Rt
YWlsLmNvbQpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkFj
a2VkLWJ5OiBOZWlsIEhvcm1hbiA8bmhvcm1hbkByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBE
YXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3NjdHAvZW5kcG9p
bnRvbGEuYyB8IDggKysrKy0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDQg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3NjdHAvZW5kcG9pbnRvbGEuYyBiL25ldC9z
Y3RwL2VuZHBvaW50b2xhLmMKaW5kZXggNDBjN2ViOTQxYmM5Li5jOTkxMTRlYWY0MmUgMTAwNjQ0
Ci0tLSBhL25ldC9zY3RwL2VuZHBvaW50b2xhLmMKKysrIGIvbmV0L3NjdHAvZW5kcG9pbnRvbGEu
YwpAQCAtMTI2LDEwICsxMjYsNiBAQCBzdGF0aWMgc3RydWN0IHNjdHBfZW5kcG9pbnQgKnNjdHBf
ZW5kcG9pbnRfaW5pdChzdHJ1Y3Qgc2N0cF9lbmRwb2ludCAqZXAsCiAJLyogSW5pdGlhbGl6ZSB0
aGUgYmluZCBhZGRyIGFyZWEgKi8KIAlzY3RwX2JpbmRfYWRkcl9pbml0KCZlcC0+YmFzZS5iaW5k
X2FkZHIsIDApOwogCi0JLyogUmVtZW1iZXIgd2hvIHdlIGFyZSBhdHRhY2hlZCB0by4gICovCi0J
ZXAtPmJhc2Uuc2sgPSBzazsKLQlzb2NrX2hvbGQoZXAtPmJhc2Uuc2spOwotCiAJLyogQ3JlYXRl
IHRoZSBsaXN0cyBvZiBhc3NvY2lhdGlvbnMuICAqLwogCUlOSVRfTElTVF9IRUFEKCZlcC0+YXNv
Y3MpOwogCkBAIC0xNjcsNiArMTYzLDEwIEBAIHN0YXRpYyBzdHJ1Y3Qgc2N0cF9lbmRwb2ludCAq
c2N0cF9lbmRwb2ludF9pbml0KHN0cnVjdCBzY3RwX2VuZHBvaW50ICplcCwKIAllcC0+cHJzY3Rw
X2VuYWJsZSA9IG5ldC0+c2N0cC5wcnNjdHBfZW5hYmxlOwogCWVwLT5yZWNvbmZfZW5hYmxlID0g
bmV0LT5zY3RwLnJlY29uZl9lbmFibGU7CiAKKwkvKiBSZW1lbWJlciB3aG8gd2UgYXJlIGF0dGFj
aGVkIHRvLiAgKi8KKwllcC0+YmFzZS5zayA9IHNrOworCXNvY2tfaG9sZChlcC0+YmFzZS5zayk7
CisKIAlyZXR1cm4gZXA7CiAKIG5vbWVtX2htYWNzOgotLSAKMi4yMC4xCgoKRnJvbSA0MTE5M2Qz
NzNiYjNmZTUwZjk3MzNiOGQzZjlmMmYyYjIwOWQxNGMzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAw
MQpGcm9tOiBZdWVIYWliaW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkRhdGU6IFRodSwgMjcg
SnVuIDIwMTkgMDA6MDM6MzkgKzA4MDAKU3ViamVjdDogW1BBVENIIDEwLzEzXSB0ZWFtOiBBbHdh
eXMgZW5hYmxlIHZsYW4gdHggb2ZmbG9hZAoKWyBVcHN0cmVhbSBjb21taXQgZWU0Mjk3NDIwZDU2
YTAwMzNhODU5M2U4MGIzM2ZjYzkzZmRhODUwOSBdCgpXZSBzaG91bGQgcmF0aGVyIGhhdmUgdmxh
bl90Y2kgZmlsbGVkIGFsbCB0aGUgd2F5IGRvd24KdG8gdGhlIHRyYW5zbWl0dGluZyBuZXRkZXZp
Y2UgYW5kIGxldCBpdCBkbyB0aGUgaHcvc3cKdmxhbiBpbXBsZW1lbnRhdGlvbi4KClN1Z2dlc3Rl
ZC1ieTogSmlyaSBQaXJrbyA8amlyaUByZXNudWxsaS51cz4KU2lnbmVkLW9mZi1ieTogWXVlSGFp
YmluZyA8eXVlaGFpYmluZ0BodWF3ZWkuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQvdGVhbS90ZWFtLmMgfCAy
ICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL25ldC90ZWFtL3RlYW0uYyBiL2RyaXZlcnMvbmV0L3RlYW0vdGVhbS5j
CmluZGV4IDZjNjIzMGI0NGJjZC4uZGMzMGYxMWY0NzY2IDEwMDY0NAotLS0gYS9kcml2ZXJzL25l
dC90ZWFtL3RlYW0uYworKysgYi9kcml2ZXJzL25ldC90ZWFtL3RlYW0uYwpAQCAtMjEzOSwxMiAr
MjEzOSwxMiBAQCBzdGF0aWMgdm9pZCB0ZWFtX3NldHVwKHN0cnVjdCBuZXRfZGV2aWNlICpkZXYp
CiAJZGV2LT5mZWF0dXJlcyB8PSBORVRJRl9GX05FVE5TX0xPQ0FMOwogCiAJZGV2LT5od19mZWF0
dXJlcyA9IFRFQU1fVkxBTl9GRUFUVVJFUyB8Ci0JCQkgICBORVRJRl9GX0hXX1ZMQU5fQ1RBR19U
WCB8CiAJCQkgICBORVRJRl9GX0hXX1ZMQU5fQ1RBR19SWCB8CiAJCQkgICBORVRJRl9GX0hXX1ZM
QU5fQ1RBR19GSUxURVI7CiAKIAlkZXYtPmh3X2ZlYXR1cmVzIHw9IE5FVElGX0ZfR1NPX0VOQ0FQ
X0FMTCB8IE5FVElGX0ZfR1NPX1VEUF9MNDsKIAlkZXYtPmZlYXR1cmVzIHw9IGRldi0+aHdfZmVh
dHVyZXM7CisJZGV2LT5mZWF0dXJlcyB8PSBORVRJRl9GX0hXX1ZMQU5fQ1RBR19UWCB8IE5FVElG
X0ZfSFdfVkxBTl9TVEFHX1RYOwogfQogCiBzdGF0aWMgaW50IHRlYW1fbmV3bGluayhzdHJ1Y3Qg
bmV0ICpzcmNfbmV0LCBzdHJ1Y3QgbmV0X2RldmljZSAqZGV2LAotLSAKMi4yMC4xCgoKRnJvbSBi
OWYyZjAzYTYzMjQ1NjdiZTAyOGJjNjVmMGQzMGI3MjMwM2E2YTRlIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkRhdGU6IFRodSwg
MjAgSnVuIDIwMTkgMTg6Mzk6MjggKzA4MDAKU3ViamVjdDogW1BBVENIIDExLzEzXSB0aXBjOiBj
aGFuZ2UgdG8gdXNlIHJlZ2lzdGVyX3Blcm5ldF9kZXZpY2UKClsgVXBzdHJlYW0gY29tbWl0IGM0
OTJkNGM3NGRkM2Y4NzU1OTg4M2ZmYTBmOTRhOGYxYWUzZmU1ZjUgXQoKVGhpcyBwYXRjaCBpcyB0
byBmaXggYSBkc3QgZGVmY250IGxlYWssIHdoaWNoIGNhbiBiZSByZXByb2R1Y2VkIGJ5IGRvaW5n
OgoKICAjIGlwIG5ldCBhIGM7IGlwIG5ldCBhIHM7IG1vZHByb2JlIHRpcGMKICAjIGlwIG5ldCBl
IHMgaXAgbCBhIG4gZXRoMSB0eXBlIHZldGggcGVlciBuIGV0aDEgbmV0bnMgYwogICMgaXAgbmV0
IGUgYyBpcCBsIHMgbG8gdXA7IGlwIG5ldCBlIGMgaXAgbCBzIGV0aDEgdXAKICAjIGlwIG5ldCBl
IHMgaXAgbCBzIGxvIHVwOyBpcCBuZXQgZSBzIGlwIGwgcyBldGgxIHVwCiAgIyBpcCBuZXQgZSBj
IGlwIGEgYSAxLjEuMS4yLzggZGV2IGV0aDEKICAjIGlwIG5ldCBlIHMgaXAgYSBhIDEuMS4xLjEv
OCBkZXYgZXRoMQogICMgaXAgbmV0IGUgYyB0aXBjIGIgZSBtIHVkcCBuIHUxIGxvY2FsaXAgMS4x
LjEuMgogICMgaXAgbmV0IGUgcyB0aXBjIGIgZSBtIHVkcCBuIHUxIGxvY2FsaXAgMS4xLjEuMQog
ICMgaXAgbmV0IGQgYzsgaXAgbmV0IGQgczsgcm1tb2QgdGlwYwoKYW5kIGl0IHdpbGwgZ2V0IHN0
dWNrIGFuZCBrZWVwIGxvZ2dpbmcgdGhlIGVycm9yOgoKICB1bnJlZ2lzdGVyX25ldGRldmljZTog
d2FpdGluZyBmb3IgbG8gdG8gYmVjb21lIGZyZWUuIFVzYWdlIGNvdW50ID0gMQoKVGhlIGNhdXNl
IGlzIHRoYXQgYSBkc3QgaXMgaGVsZCBieSB0aGUgdWRwIHNvY2sncyBza19yeF9kc3Qgc2V0IG9u
IHVkcCByeApwYXRoIHdpdGggdWRwX2Vhcmx5X2RlbXV4ID09IDEsIGFuZCB0aGlzIGRzdCAoZXZl
bnR1YWxseSBob2xkaW5nIGxvIGRldikKY2FuJ3QgYmUgcmVsZWFzZWQgYXMgYmVhcmVyJ3MgcmVt
b3ZhbCBpbiB0aXBjIHBlcm5ldCAuZXhpdCBoYXBwZW5zIGFmdGVyCmxvIGRldidzIHJlbW92YWws
IGRlZmF1bHRfZGV2aWNlIHBlcm5ldCAuZXhpdC4KCiAiVGhlcmUgYXJlIHR3byBkaXN0aW5jdCB0
eXBlcyBvZiBwZXJuZXRfb3BlcmF0aW9ucyByZWNvZ25pemVkOiBzdWJzeXMgYW5kCiAgZGV2aWNl
LiAgQXQgY3JlYXRpb24gYWxsIHN1YnN5cyBpbml0IGZ1bmN0aW9ucyBhcmUgY2FsbGVkIGJlZm9y
ZSBkZXZpY2UKICBpbml0IGZ1bmN0aW9ucywgYW5kIGF0IGRlc3RydWN0aW9uIGFsbCBkZXZpY2Ug
ZXhpdCBmdW5jdGlvbnMgYXJlIGNhbGxlZAogIGJlZm9yZSBzdWJzeXMgZXhpdCBmdW5jdGlvbi4i
CgpTbyBieSBjYWxsaW5nIHJlZ2lzdGVyX3Blcm5ldF9kZXZpY2UgaW5zdGVhZCB0byByZWdpc3Rl
ciB0aXBjX25ldF9vcHMsIHRoZQpwZXJuZXQgLmV4aXQoKSB3aWxsIGJlIGludm9rZWQgZWFybGll
ciB0aGFuIGxvb3BiYWNrIGRldidzIHJlbW92YWwgd2hlbiBhCm5ldG5zIGlzIGJlaW5nIGRlc3Ry
b3llZCwgYXMgZm91L2d1ZSBkb2VzLgoKTm90ZSB0aGF0IHZ4bGFuIGFuZCBnZW5ldmUgdWRwIHR1
bm5lbHMgZG9uJ3QgaGF2ZSB0aGlzIGlzc3VlLCBhcyB0aGUgdWRwCnNvY2sgaXMgcmVsZWFzZWQg
aW4gdGhlaXIgZGV2aWNlIG5kb19zdG9wKCkuCgpUaGlzIGZpeCBpcyBhbHNvIG5lY2Vzc2FyeSBm
b3IgdGlwYyBkc3RfY2FjaGUsIHdoaWNoIHdpbGwgaG9sZCBkc3RzIG9uIHR4CnBhdGggYW5kIEkg
d2lsbCBpbnRyb2R1Y2UgaW4gbXkgbmV4dCBwYXRjaC4KClJlcG9ydGVkLWJ5OiBMaSBTaHVhbmcg
PHNodWFsaUByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBn
bWFpbC5jb20+CkFja2VkLWJ5OiBKb24gTWFsb3kgPGpvbi5tYWxveUBlcmljc3Nvbi5jb20+ClNp
Z25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBu
ZXQvdGlwYy9jb3JlLmMgfCAxMiArKysrKystLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA2IGluc2Vy
dGlvbnMoKyksIDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3RpcGMvY29yZS5jIGIv
bmV0L3RpcGMvY29yZS5jCmluZGV4IDNlY2NhM2I4OGJmOC4uZWIwZjcwMWY5YmYxIDEwMDY0NAot
LS0gYS9uZXQvdGlwYy9jb3JlLmMKKysrIGIvbmV0L3RpcGMvY29yZS5jCkBAIC0xMzIsNyArMTMy
LDcgQEAgc3RhdGljIGludCBfX2luaXQgdGlwY19pbml0KHZvaWQpCiAJaWYgKGVycikKIAkJZ290
byBvdXRfc3lzY3RsOwogCi0JZXJyID0gcmVnaXN0ZXJfcGVybmV0X3N1YnN5cygmdGlwY19uZXRf
b3BzKTsKKwllcnIgPSByZWdpc3Rlcl9wZXJuZXRfZGV2aWNlKCZ0aXBjX25ldF9vcHMpOwogCWlm
IChlcnIpCiAJCWdvdG8gb3V0X3Blcm5ldDsKIApAQCAtMTQwLDcgKzE0MCw3IEBAIHN0YXRpYyBp
bnQgX19pbml0IHRpcGNfaW5pdCh2b2lkKQogCWlmIChlcnIpCiAJCWdvdG8gb3V0X3NvY2tldDsK
IAotCWVyciA9IHJlZ2lzdGVyX3Blcm5ldF9zdWJzeXMoJnRpcGNfdG9wc3J2X25ldF9vcHMpOwor
CWVyciA9IHJlZ2lzdGVyX3Blcm5ldF9kZXZpY2UoJnRpcGNfdG9wc3J2X25ldF9vcHMpOwogCWlm
IChlcnIpCiAJCWdvdG8gb3V0X3Blcm5ldF90b3BzcnY7CiAKQEAgLTE1MSwxMSArMTUxLDExIEBA
IHN0YXRpYyBpbnQgX19pbml0IHRpcGNfaW5pdCh2b2lkKQogCXByX2luZm8oIlN0YXJ0ZWQgaW4g
c2luZ2xlIG5vZGUgbW9kZVxuIik7CiAJcmV0dXJuIDA7CiBvdXRfYmVhcmVyOgotCXVucmVnaXN0
ZXJfcGVybmV0X3N1YnN5cygmdGlwY190b3BzcnZfbmV0X29wcyk7CisJdW5yZWdpc3Rlcl9wZXJu
ZXRfZGV2aWNlKCZ0aXBjX3RvcHNydl9uZXRfb3BzKTsKIG91dF9wZXJuZXRfdG9wc3J2OgogCXRp
cGNfc29ja2V0X3N0b3AoKTsKIG91dF9zb2NrZXQ6Ci0JdW5yZWdpc3Rlcl9wZXJuZXRfc3Vic3lz
KCZ0aXBjX25ldF9vcHMpOworCXVucmVnaXN0ZXJfcGVybmV0X2RldmljZSgmdGlwY19uZXRfb3Bz
KTsKIG91dF9wZXJuZXQ6CiAJdGlwY191bnJlZ2lzdGVyX3N5c2N0bCgpOwogb3V0X3N5c2N0bDoK
QEAgLTE3MCw5ICsxNzAsOSBAQCBzdGF0aWMgaW50IF9faW5pdCB0aXBjX2luaXQodm9pZCkKIHN0
YXRpYyB2b2lkIF9fZXhpdCB0aXBjX2V4aXQodm9pZCkKIHsKIAl0aXBjX2JlYXJlcl9jbGVhbnVw
KCk7Ci0JdW5yZWdpc3Rlcl9wZXJuZXRfc3Vic3lzKCZ0aXBjX3RvcHNydl9uZXRfb3BzKTsKKwl1
bnJlZ2lzdGVyX3Blcm5ldF9kZXZpY2UoJnRpcGNfdG9wc3J2X25ldF9vcHMpOwogCXRpcGNfc29j
a2V0X3N0b3AoKTsKLQl1bnJlZ2lzdGVyX3Blcm5ldF9zdWJzeXMoJnRpcGNfbmV0X29wcyk7CisJ
dW5yZWdpc3Rlcl9wZXJuZXRfZGV2aWNlKCZ0aXBjX25ldF9vcHMpOwogCXRpcGNfbmV0bGlua19z
dG9wKCk7CiAJdGlwY19uZXRsaW5rX2NvbXBhdF9zdG9wKCk7CiAJdGlwY191bnJlZ2lzdGVyX3N5
c2N0bCgpOwotLSAKMi4yMC4xCgoKRnJvbSBjMjQ5ZmFmYjgzNzM2MmU5OWJiMzQ0Y2FkOGFlMTE3
ZDdkZDY3OThmIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVu
LnhpbkBnbWFpbC5jb20+CkRhdGU6IFR1ZSwgMjUgSnVuIDIwMTkgMDA6Mjg6MTkgKzA4MDAKU3Vi
amVjdDogW1BBVENIIDEyLzEzXSB0aXBjOiBjaGVjayBtc2ctPnJlcSBkYXRhIGxlbiBpbgogdGlw
Y19ubF9jb21wYXRfYmVhcmVyX2Rpc2FibGUKClsgVXBzdHJlYW0gY29tbWl0IDRmMDdiODBjOTcz
MzQ4YTk5YjVkMmEzMjQ3NmEyZTc4NzdlOTRhMDUgXQoKVGhpcyBwYXRjaCBpcyB0byBmaXggYW4g
dW5pbml0LXZhbHVlIGlzc3VlLCByZXBvcnRlZCBieSBzeXpib3Q6CgogIEJVRzogS01TQU46IHVu
aW5pdC12YWx1ZSBpbiBtZW1jaHIrMHhjZS8weDExMCBsaWIvc3RyaW5nLmM6OTgxCiAgQ2FsbCBU
cmFjZToKICAgIF9fZHVtcF9zdGFjayBsaWIvZHVtcF9zdGFjay5jOjc3IFtpbmxpbmVdCiAgICBk
dW1wX3N0YWNrKzB4MTkxLzB4MWYwIGxpYi9kdW1wX3N0YWNrLmM6MTEzCiAgICBrbXNhbl9yZXBv
cnQrMHgxMzAvMHgyYTAgbW0va21zYW4va21zYW4uYzo2MjIKICAgIF9fbXNhbl93YXJuaW5nKzB4
NzUvMHhlMCBtbS9rbXNhbi9rbXNhbl9pbnN0ci5jOjMxMAogICAgbWVtY2hyKzB4Y2UvMHgxMTAg
bGliL3N0cmluZy5jOjk4MQogICAgc3RyaW5nX2lzX3ZhbGlkIG5ldC90aXBjL25ldGxpbmtfY29t
cGF0LmM6MTc2IFtpbmxpbmVdCiAgICB0aXBjX25sX2NvbXBhdF9iZWFyZXJfZGlzYWJsZSsweDJh
MS8weDQ4MCBuZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jOjQ0OQogICAgX190aXBjX25sX2NvbXBh
dF9kb2l0IG5ldC90aXBjL25ldGxpbmtfY29tcGF0LmM6MzI3IFtpbmxpbmVdCiAgICB0aXBjX25s
X2NvbXBhdF9kb2l0KzB4M2FjLzB4YjAwIG5ldC90aXBjL25ldGxpbmtfY29tcGF0LmM6MzYwCiAg
ICB0aXBjX25sX2NvbXBhdF9oYW5kbGUgbmV0L3RpcGMvbmV0bGlua19jb21wYXQuYzoxMTc4IFtp
bmxpbmVdCiAgICB0aXBjX25sX2NvbXBhdF9yZWN2KzB4MWIxYi8weDI3YjAgbmV0L3RpcGMvbmV0
bGlua19jb21wYXQuYzoxMjgxCgpUTFZfR0VUX0RBVEFfTEVOKCkgbWF5IHJldHVybiBhIG5lZ3Rp
dmUgaW50IHZhbHVlLCB3aGljaCB3aWxsIGJlCnVzZWQgYXMgc2l6ZV90IChiZWNvbWluZyBhIGJp
ZyB1bnNpZ25lZCBsb25nKSBwYXNzZWQgaW50byBtZW1jaHIsCmNhdXNlIHRoaXMgaXNzdWUuCgpT
aW1pbGFyIHRvIHdoYXQgaXQgZG9lcyBpbiB0aXBjX25sX2NvbXBhdF9iZWFyZXJfZW5hYmxlKCks
IHRoaXMKZml4IGlzIHRvIHJldHVybiAtRUlOVkFMIHdoZW4gVExWX0dFVF9EQVRBX0xFTigpIGlz
IG5lZ3RpdmUgaW4KdGlwY19ubF9jb21wYXRfYmVhcmVyX2Rpc2FibGUoKSwgYXMgd2VsbCBhcyBp
bgp0aXBjX25sX2NvbXBhdF9saW5rX3N0YXRfZHVtcCgpIGFuZCB0aXBjX25sX2NvbXBhdF9saW5r
X3Jlc2V0X3N0YXRzKCkuCgp2MS0+djI6CiAgLSBhZGQgdGhlIG1pc3NpbmcgRml4ZXMgdGFncyBw
ZXIgRXJpYydzIHJlcXVlc3QuCgpGaXhlczogMDc2MjIxNmMwYWQyICgidGlwYzogZml4IHVuaW5p
dC12YWx1ZSBpbiB0aXBjX25sX2NvbXBhdF9iZWFyZXJfZW5hYmxlIikKRml4ZXM6IDhiNjZmZWU3
ZjhlZSAoInRpcGM6IGZpeCB1bmluaXQtdmFsdWUgaW4gdGlwY19ubF9jb21wYXRfbGlua19yZXNl
dF9zdGF0cyIpClJlcG9ydGVkLWJ5OiBzeXpib3QrMzBlYWE4YmYzOTJmN2ZhZmZmYWZAc3l6a2Fs
bGVyLmFwcHNwb3RtYWlsLmNvbQpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBn
bWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0
Lm5ldD4KLS0tCiBuZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jIHwgMTggKysrKysrKysrKysrKysr
LS0tCiAxIGZpbGUgY2hhbmdlZCwgMTUgaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9uZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jIGIvbmV0L3RpcGMvbmV0bGlua19j
b21wYXQuYwppbmRleCA1ODhkNWFhMTRjNDEuLjg1ZWJiNjc1NjAwYyAxMDA2NDQKLS0tIGEvbmV0
L3RpcGMvbmV0bGlua19jb21wYXQuYworKysgYi9uZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jCkBA
IC00NDUsNyArNDQ1LDExIEBAIHN0YXRpYyBpbnQgdGlwY19ubF9jb21wYXRfYmVhcmVyX2Rpc2Fi
bGUoc3RydWN0IHRpcGNfbmxfY29tcGF0X2NtZF9kb2l0ICpjbWQsCiAJaWYgKCFiZWFyZXIpCiAJ
CXJldHVybiAtRU1TR1NJWkU7CiAKLQlsZW4gPSBtaW5fdChpbnQsIFRMVl9HRVRfREFUQV9MRU4o
bXNnLT5yZXEpLCBUSVBDX01BWF9CRUFSRVJfTkFNRSk7CisJbGVuID0gVExWX0dFVF9EQVRBX0xF
Tihtc2ctPnJlcSk7CisJaWYgKGxlbiA8PSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWxlbiA9
IG1pbl90KGludCwgbGVuLCBUSVBDX01BWF9CRUFSRVJfTkFNRSk7CiAJaWYgKCFzdHJpbmdfaXNf
dmFsaWQobmFtZSwgbGVuKSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKQEAgLTUzNyw3ICs1NDEsMTEg
QEAgc3RhdGljIGludCB0aXBjX25sX2NvbXBhdF9saW5rX3N0YXRfZHVtcChzdHJ1Y3QgdGlwY19u
bF9jb21wYXRfbXNnICptc2csCiAKIAluYW1lID0gKGNoYXIgKilUTFZfREFUQShtc2ctPnJlcSk7
CiAKLQlsZW4gPSBtaW5fdChpbnQsIFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpLCBUSVBDX01B
WF9MSU5LX05BTUUpOworCWxlbiA9IFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpOworCWlmIChs
ZW4gPD0gMCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlsZW4gPSBtaW5fdChpbnQsIGxlbiwgVElQ
Q19NQVhfQkVBUkVSX05BTUUpOwogCWlmICghc3RyaW5nX2lzX3ZhbGlkKG5hbWUsIGxlbikpCiAJ
CXJldHVybiAtRUlOVkFMOwogCkBAIC04MTUsNyArODIzLDExIEBAIHN0YXRpYyBpbnQgdGlwY19u
bF9jb21wYXRfbGlua19yZXNldF9zdGF0cyhzdHJ1Y3QgdGlwY19ubF9jb21wYXRfY21kX2RvaXQg
KmNtZCwKIAlpZiAoIWxpbmspCiAJCXJldHVybiAtRU1TR1NJWkU7CiAKLQlsZW4gPSBtaW5fdChp
bnQsIFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpLCBUSVBDX01BWF9MSU5LX05BTUUpOworCWxl
biA9IFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpOworCWlmIChsZW4gPD0gMCkKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwlsZW4gPSBtaW5fdChpbnQsIGxlbiwgVElQQ19NQVhfQkVBUkVSX05BTUUp
OwogCWlmICghc3RyaW5nX2lzX3ZhbGlkKG5hbWUsIGxlbikpCiAJCXJldHVybiAtRUlOVkFMOwog
Ci0tIAoyLjIwLjEKCgpGcm9tIDM1N2M5YzczMTE0NWQxNGI5NGExYjkzNzBlMGQ3ZDJiYzc4OGIz
YTYgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEZlaSBMaSA8bGlmZWkuc2hpcmxleUBi
eXRlZGFuY2UuY29tPgpEYXRlOiBNb24sIDE3IEp1biAyMDE5IDIxOjI2OjM2ICswODAwClN1Ympl
Y3Q6IFtQQVRDSCAxMy8xM10gdHVuOiB3YWtlIHVwIHdhaXRxdWV1ZXMgYWZ0ZXIgSUZGX1VQIGlz
IHNldAoKWyBVcHN0cmVhbSBjb21taXQgNzJiMzE5ZGMwOGI0OTI0YTI5ZjVlMjU2MGVmNmQ5NjZm
YTU0YzQyOSBdCgpDdXJyZW50bHkgYWZ0ZXIgc2V0dGluZyB0YXAwIGxpbmsgdXAsIHRoZSB0dW4g
Y29kZSB3YWtlcyB0eC9yeCB3YWl0ZWQKcXVldWVzIHVwIGluIHR1bl9uZXRfb3BlbigpIHdoZW4g
Lm5kb19vcGVuKCkgaXMgY2FsbGVkLCBob3dldmVyIHRoZQpJRkZfVVAgZmxhZyBoYXMgbm90IGJl
ZW4gc2V0IHlldC4gSWYgdGhlcmUncyBhbHJlYWR5IGEgd2FpdCBxdWV1ZSwgaXQKd291bGQgZmFp
bCB0byB0cmFuc21pdCB3aGVuIGNoZWNraW5nIHRoZSBJRkZfVVAgZmxhZyBpbiB0dW5fc2VuZG1z
ZygpLgpUaGVuIHRoZSBzYXZpbmcgdmhvc3RfcG9sbF9zdGFydCgpIHdpbGwgYWRkIHRoZSB3cSBp
bnRvIHdxaCB1bnRpbCBpdAppcyB3YWtlbiB1cCBhZ2Fpbi4gQWx0aG91Z2ggdGhpcyB3b3JrcyB3
aGVuIElGRl9VUCBmbGFnIGhhcyBiZWVuIHNldAp3aGVuIHR1bl9jaHJfcG9sbCBkZXRlY3RzOyB0
aGlzIGlzIG5vdCB0cnVlIGlmIElGRl9VUCBmbGFnIGhhcyBub3QKYmVlbiBzZXQgYXQgdGhhdCB0
aW1lLiBTYWRseSB0aGUgbGF0dGVyIGNhc2UgaXMgYSBmYXRhbCBlcnJvciwgYXMKdGhlIHdxIHdp
bGwgbmV2ZXIgYmUgd2FrZW4gdXAgaW4gZnV0dXJlIHVubGVzcyBsYXRlciBtYW51YWxseQpzZXR0
aW5nIGxpbmsgdXAgb24gcHVycG9zZS4KCkZpeCB0aGlzIGJ5IG1vdmluZyB0aGUgd2FrZXVwIHBy
b2Nlc3MgaW50byB0aGUgTkVUREVWX1VQIGV2ZW50Cm5vdGlmeWluZyBwcm9jZXNzLCB0aGlzIG1h
a2VzIHN1cmUgSUZGX1VQIGhhcyBiZWVuIHNldCBiZWZvcmUgYWxsCndhaXRlZCBxdWV1ZXMgYmVl
biB3YWtlbiB1cC4KClNpZ25lZC1vZmYtYnk6IEZlaSBMaSA8bGlmZWkuc2hpcmxleUBieXRlZGFu
Y2UuY29tPgpBY2tlZC1ieTogSmFzb24gV2FuZyA8amFzb3dhbmdAcmVkaGF0LmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZl
cnMvbmV0L3R1bi5jIHwgMTkgKysrKysrKysrLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDkg
aW5zZXJ0aW9ucygrKSwgMTAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQv
dHVuLmMgYi9kcml2ZXJzL25ldC90dW4uYwppbmRleCA3OGQzNGUwMzA2ZTAuLmI2N2ZlZTU2ZWM4
MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvdHVuLmMKKysrIGIvZHJpdmVycy9uZXQvdHVuLmMK
QEAgLTEwMjQsMTggKzEwMjQsOCBAQCBzdGF0aWMgdm9pZCB0dW5fbmV0X3VuaW5pdChzdHJ1Y3Qg
bmV0X2RldmljZSAqZGV2KQogLyogTmV0IGRldmljZSBvcGVuLiAqLwogc3RhdGljIGludCB0dW5f
bmV0X29wZW4oc3RydWN0IG5ldF9kZXZpY2UgKmRldikKIHsKLQlzdHJ1Y3QgdHVuX3N0cnVjdCAq
dHVuID0gbmV0ZGV2X3ByaXYoZGV2KTsKLQlpbnQgaTsKLQogCW5ldGlmX3R4X3N0YXJ0X2FsbF9x
dWV1ZXMoZGV2KTsKIAotCWZvciAoaSA9IDA7IGkgPCB0dW4tPm51bXF1ZXVlczsgaSsrKSB7Ci0J
CXN0cnVjdCB0dW5fZmlsZSAqdGZpbGU7Ci0KLQkJdGZpbGUgPSBydG5sX2RlcmVmZXJlbmNlKHR1
bi0+dGZpbGVzW2ldKTsKLQkJdGZpbGUtPnNvY2tldC5zay0+c2tfd3JpdGVfc3BhY2UodGZpbGUt
PnNvY2tldC5zayk7Ci0JfQotCiAJcmV0dXJuIDA7CiB9CiAKQEAgLTM0NDMsNiArMzQzMyw3IEBA
IHN0YXRpYyBpbnQgdHVuX2RldmljZV9ldmVudChzdHJ1Y3Qgbm90aWZpZXJfYmxvY2sgKnVudXNl
ZCwKIHsKIAlzdHJ1Y3QgbmV0X2RldmljZSAqZGV2ID0gbmV0ZGV2X25vdGlmaWVyX2luZm9fdG9f
ZGV2KHB0cik7CiAJc3RydWN0IHR1bl9zdHJ1Y3QgKnR1biA9IG5ldGRldl9wcml2KGRldik7CisJ
aW50IGk7CiAKIAlpZiAoZGV2LT5ydG5sX2xpbmtfb3BzICE9ICZ0dW5fbGlua19vcHMpCiAJCXJl
dHVybiBOT1RJRllfRE9ORTsKQEAgLTM0NTIsNiArMzQ0MywxNCBAQCBzdGF0aWMgaW50IHR1bl9k
ZXZpY2VfZXZlbnQoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICp1bnVzZWQsCiAJCWlmICh0dW5fcXVl
dWVfcmVzaXplKHR1bikpCiAJCQlyZXR1cm4gTk9USUZZX0JBRDsKIAkJYnJlYWs7CisJY2FzZSBO
RVRERVZfVVA6CisJCWZvciAoaSA9IDA7IGkgPCB0dW4tPm51bXF1ZXVlczsgaSsrKSB7CisJCQlz
dHJ1Y3QgdHVuX2ZpbGUgKnRmaWxlOworCisJCQl0ZmlsZSA9IHJ0bmxfZGVyZWZlcmVuY2UodHVu
LT50ZmlsZXNbaV0pOworCQkJdGZpbGUtPnNvY2tldC5zay0+c2tfd3JpdGVfc3BhY2UodGZpbGUt
PnNvY2tldC5zayk7CisJCX0KKwkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJYnJlYWs7CiAJfQotLSAK
Mi4yMC4xCgo=

----Next_Part(Mon_Jul__1_18_52_55_2019_799)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_51.mbox"

RnJvbSBlM2JiODVkNjk0MDA3NjQ3ZmI0OTRjYzk2MDVlYWYyMThjNTYwZTk3IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBOZWlsIEhvcm1hbiA8bmhvcm1hbkB0dXhkcml2ZXIuY29tPgpE
YXRlOiBUdWUsIDI1IEp1biAyMDE5IDE3OjU3OjQ5IC0wNDAwClN1YmplY3Q6IFtQQVRDSCAwMS8x
NV0gYWZfcGFja2V0OiBCbG9jayBleGVjdXRpb24gb2YgdGFza3Mgd2FpdGluZyBmb3IKIHRyYW5z
bWl0IHRvIGNvbXBsZXRlIGluIEFGX1BBQ0tFVAoKWyBVcHN0cmVhbSBjb21taXQgODllZDViNTE5
MDA0YTc3MDZmNTBiNzBmNjExZWRiZDNhYWFjZmYyYyBdCgpXaGVuIGFuIGFwcGxpY2F0aW9uIGlz
IHJ1biB0aGF0OgphKSBTZXRzIGl0cyBzY2hlZHVsZXIgdG8gYmUgU0NIRURfRklGTwphbmQKYikg
T3BlbnMgYSBtZW1vcnkgbWFwcGVkIEFGX1BBQ0tFVCBzb2NrZXQsIGFuZCBzZW5kcyBmcmFtZXMg
d2l0aCB0aGUKTVNHX0RPTlRXQUlUIGZsYWcgY2xlYXJlZCwgaXRzIHBvc3NpYmxlIGZvciB0aGUg
YXBwbGljYXRpb24gdG8gaGFuZwpmb3JldmVyIGluIHRoZSBrZXJuZWwuICBUaGlzIG9jY3VycyBi
ZWNhdXNlIHdoZW4gd2FpdGluZywgdGhlIGNvZGUgaW4KdHBhY2tldF9zbmQgY2FsbHMgc2NoZWR1
bGUsIHdoaWNoIHVuZGVyIG5vcm1hbCBjaXJjdW1zdGFuY2VzIGFsbG93cwpvdGhlciB0YXNrcyB0
byBydW4sIGluY2x1ZGluZyBrc29mdGlycWQsIHdoaWNoIGluIHNvbWUgY2FzZXMgaXMKcmVzcG9u
c2libGUgZm9yIGZyZWVpbmcgdGhlIHRyYW5zbWl0dGVkIHNrYiAod2hpY2ggaW4gQUZfUEFDS0VU
IGNhbGxzIGEKZGVzdHJ1Y3RvciB0aGF0IGZsaXBzIHRoZSBzdGF0dXMgYml0IG9mIHRoZSB0cmFu
c21pdHRlZCBmcmFtZSBiYWNrIHRvCmF2YWlsYWJsZSwgYWxsb3dpbmcgdGhlIHRyYW5zbWl0dGlu
ZyB0YXNrIHRvIGNvbXBsZXRlKS4KCkhvd2V2ZXIsIHdoZW4gdGhlIGNhbGxpbmcgYXBwbGljYXRp
b24gaXMgU0NIRURfRklGTywgaXRzIHByaW9yaXR5IGlzCnN1Y2ggdGhhdCB0aGUgc2NoZWR1bGUg
Y2FsbCBpbW1lZGlhdGVseSBwbGFjZXMgdGhlIHRhc2sgYmFjayBvbiB0aGUgY3B1LApwcmV2ZW50
aW5nIGtzb2Z0aXJxZCBmcm9tIGZyZWVpbmcgdGhlIHNrYiwgd2hpY2ggaW4gdHVybiBwcmV2ZW50
cyB0aGUKdHJhbnNtaXR0aW5nIHRhc2sgZnJvbSBkZXRlY3RpbmcgdGhhdCB0aGUgdHJhbnNtaXNz
aW9uIGlzIGNvbXBsZXRlLgoKV2UgY2FuIGZpeCB0aGlzIGJ5IGNvbnZlcnRpbmcgdGhlIHNjaGVk
dWxlIGNhbGwgdG8gYSBjb21wbGV0aW9uCm1lY2hhbmlzbS4gIEJ5IHVzaW5nIGEgY29tcGxldGlv
biBxdWV1ZSwgd2UgZm9yY2UgdGhlIGNhbGxpbmcgdGFzaywgd2hlbgppdCBkZXRlY3RzIHRoZXJl
IGFyZSBubyBtb3JlIGZyYW1lcyB0byBzZW5kLCB0byBzY2hlZHVsZSBpdHNlbGYgb2ZmIHRoZQpj
cHUgdW50aWwgc3VjaCB0aW1lIGFzIHRoZSBsYXN0IHRyYW5zbWl0dGVkIHNrYiBpcyBmcmVlZCwg
YWxsb3dpbmcKZm9yd2FyZCBwcm9ncmVzcyB0byBiZSBtYWRlLgoKVGVzdGVkIGJ5IG15c2VsZiBh
bmQgdGhlIHJlcG9ydGVyLCB3aXRoIGdvb2QgcmVzdWx0cwoKQ2hhbmdlIE5vdGVzOgoKVjEtPlYy
OgoJRW5oYW5jZSB0aGUgc2xlZXAgbG9naWMgdG8gc3VwcG9ydCBiZWluZyBpbnRlcnJ1cHRpYmxl
IGFuZAphbGxvd2luZyBmb3IgaG9ub3JpbmcgdG8gU0tfU05EVElNRU8gKFdpbGxlbSBkZSBCcnVp
am4pCgpWMi0+VjM6CglSZWFycmFnZSB0aGUgcG9pbnQgYXQgd2hpY2ggd2Ugd2FpdCBmb3IgdGhl
IGNvbXBsZXRpb24gcXVldWUsIHRvCmF2b2lkIG5lZWRpbmcgdG8gY2hlY2sgZm9yIHBoL3NrYiBi
ZWluZyBudWxsIGF0IHRoZSBlbmQgb2YgdGhlIGxvb3AuCkFsc28gbW92ZSB0aGUgY29tcGxldGUg
Y2FsbCB0byB0aGUgc2tiIGRlc3RydWN0b3IgdG8gYXZvaWQgbmVlZGluZyB0bwptb2RpZnkgX19w
YWNrZXRfc2V0X3N0YXR1cy4gIEFsc28gZ2F0ZSBjYWxsaW5nIGNvbXBsZXRlIG9uCnBhY2tldF9y
ZWFkX3BlbmRpbmcgcmV0dXJuaW5nIHplcm8gdG8gYXZvaWQgbXVsdGlwbGUgY2FsbHMgdG8gY29t
cGxldGUuCihXaWxsZW0gZGUgQnJ1aWpuKQoKCU1vdmUgdGltZW8gY29tcHV0YXRpb24gd2l0aGlu
IGxvb3AsIHRvIHJlLWZldGNoIHRoZSBzb2NrZXQKdGltZW91dCBzaW5jZSB3ZSBhbHNvIHVzZSB0
aGUgdGltZW8gdmFyaWFibGUgdG8gcmVjb3JkIHRoZSByZXR1cm4gY29kZQpmcm9tIHRoZSB3YWl0
X2Zvcl9jb21wbGV0ZSBjYWxsIChOZWlsIEhvcm1hbikKClYzLT5WNDoKCVdpbGxlbSBoYXMgcmVx
dWVzdGVkIHRoYXQgdGhlIGNvbnRyb2wgZmxvdyBiZSByZXN0b3JlZCB0byB0aGUKcHJldmlvdXMg
c3RhdGUuICBEb2luZyBzbyBsZXRzIHVzIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3IgdGhlCnBvLT53
YWl0X29uX2NvbXBsZXRlIGZsYWcgdmFyaWFibGUsIGFuZCBsZXRzIHVzIGdldCByaWQgb2YgdGhl
CnBhY2tldF9uZXh0X2ZyYW1lIGZ1bmN0aW9uLCBidXQgaW50cm9kdWNlcyBhbm90aGVyIGNvbXBs
ZXhpdHkuClNwZWNpZmljYWxseSwgYnV0IHVzaW5nIHRoZSBwYWNrZXQgcGVuZGluZyBjb3VudCwg
d2UgY2FuLCBpZiBhbgphcHBsaWNhdGlvbnMgY2FsbHMgc2VuZG1zZyBtdWx0aXBsZSB0aW1lcyB3
aXRoIE1TR19ET05UV0FJVCBzZXQsIGVhY2gKc2V0IG9mIHRyYW5zbWl0dGVkIGZyYW1lcywgd2hl
biBjb21wbGV0ZSwgd2lsbCBjYXVzZQp0cGFja2V0X2Rlc3RydWN0X3NrYiB0byBpc3N1ZSBhIGNv
bXBsZXRlIGNhbGwsIGZvciB3aGljaCB0aGVyZSB3aWxsCm5ldmVyIGJlIGEgd2FpdF9vbl9jb21w
bGV0aW9uIGNhbGwuICBUaGlzIGltYmFsYW5jZSB3aWxsIGxlYWQgdG8gYW55CmZ1dHVyZSBjYWxs
IHRvIHdhaXRfZm9yX2NvbXBsZXRpb24gaGVyZSB0byByZXR1cm4gZWFybHksIHdoZW4gdGhlIGZy
YW1lcwp0aGV5IHNlbnQgbWF5IG5vdCBoYXZlIGNvbXBsZXRlZC4gIFRvIGNvcnJlY3QgdGhpcywg
d2UgbmVlZCB0byByZS1pbml0CnRoZSBjb21wbGV0aW9uIHF1ZXVlIG9uIGV2ZXJ5IGNhbGwgdG8g
dHBhY2tldF9zbmQgYmVmb3JlIHdlIGVudGVyIHRoZQpsb29wIHNvIGFzIHRvIGVuc3VyZSB3ZSB3
YWl0IHByb3Blcmx5IGZvciB0aGUgZnJhbWVzIHdlIHNlbmQgaW4gdGhpcwppdGVyYXRpb24uCgoJ
Q2hhbmdlIHRoZSB0aW1lb3V0IGFuZCBpbnRlcnJ1cHRlZCBnb3RvcyB0byBvdXRfcHV0IHJhdGhl
ciB0aGFuCm91dF9zdGF0dXMgc28gdGhhdCB3ZSBkb24ndCB0cnkgdG8gZnJlZSBhIG5vbi1leGlz
dGFudCBza2IKCUNsZWFuIHVwIHNvbWUgZXh0cmEgbmV3bGluZXMgKFdpbGxlbSBkZSBCcnVpam4p
CgpSZXZpZXdlZC1ieTogV2lsbGVtIGRlIEJydWlqbiA8d2lsbGVtYkBnb29nbGUuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBOZWlsIEhvcm1hbiA8bmhvcm1hbkB0dXhkcml2ZXIuY29tPgpSZXBvcnRlZC1i
eTogTWF0dGVvIENyb2NlIDxtY3JvY2VAcmVkaGF0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQg
Uy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9wYWNrZXQvYWZfcGFja2V0
LmMgfCAyMCArKysrKysrKysrKysrKysrKy0tLQogbmV0L3BhY2tldC9pbnRlcm5hbC5oICB8ICAx
ICsKIDIgZmlsZXMgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9uZXQvcGFja2V0L2FmX3BhY2tldC5jIGIvbmV0L3BhY2tldC9hZl9wYWNrZXQu
YwppbmRleCA3MWQ1NTQ0MjQzZDIuLjMzODVmNGM2ZWI3NCAxMDA2NDQKLS0tIGEvbmV0L3BhY2tl
dC9hZl9wYWNrZXQuYworKysgYi9uZXQvcGFja2V0L2FmX3BhY2tldC5jCkBAIC0yNDA5LDYgKzI0
MDksOSBAQCBzdGF0aWMgdm9pZCB0cGFja2V0X2Rlc3RydWN0X3NrYihzdHJ1Y3Qgc2tfYnVmZiAq
c2tiKQogCiAJCXRzID0gX19wYWNrZXRfc2V0X3RpbWVzdGFtcChwbywgcGgsIHNrYik7CiAJCV9f
cGFja2V0X3NldF9zdGF0dXMocG8sIHBoLCBUUF9TVEFUVVNfQVZBSUxBQkxFIHwgdHMpOworCisJ
CWlmICghcGFja2V0X3JlYWRfcGVuZGluZygmcG8tPnR4X3JpbmcpKQorCQkJY29tcGxldGUoJnBv
LT5za2JfY29tcGxldGlvbik7CiAJfQogCiAJc29ja193ZnJlZShza2IpOwpAQCAtMjU5Myw3ICsy
NTk2LDcgQEAgc3RhdGljIGludCB0cGFja2V0X3BhcnNlX2hlYWRlcihzdHJ1Y3QgcGFja2V0X3Nv
Y2sgKnBvLCB2b2lkICpmcmFtZSwKIAogc3RhdGljIGludCB0cGFja2V0X3NuZChzdHJ1Y3QgcGFj
a2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiB7Ci0Jc3RydWN0IHNrX2J1ZmYgKnNr
YjsKKwlzdHJ1Y3Qgc2tfYnVmZiAqc2tiID0gTlVMTDsKIAlzdHJ1Y3QgbmV0X2RldmljZSAqZGV2
OwogCXN0cnVjdCB2aXJ0aW9fbmV0X2hkciAqdm5ldF9oZHIgPSBOVUxMOwogCXN0cnVjdCBzb2Nr
Y21fY29va2llIHNvY2tjOwpAQCAtMjYwOCw2ICsyNjExLDcgQEAgc3RhdGljIGludCB0cGFja2V0
X3NuZChzdHJ1Y3QgcGFja2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiAJaW50IGxl
bl9zdW0gPSAwOwogCWludCBzdGF0dXMgPSBUUF9TVEFUVVNfQVZBSUxBQkxFOwogCWludCBobGVu
LCB0bGVuLCBjb3B5bGVuID0gMDsKKwlsb25nIHRpbWVvID0gMDsKIAogCW11dGV4X2xvY2soJnBv
LT5wZ192ZWNfbG9jayk7CiAKQEAgLTI2NTQsMTIgKzI2NTgsMjEgQEAgc3RhdGljIGludCB0cGFj
a2V0X3NuZChzdHJ1Y3QgcGFja2V0X3NvY2sgKnBvLCBzdHJ1Y3QgbXNnaGRyICptc2cpCiAJaWYg
KChzaXplX21heCA+IGRldi0+bXR1ICsgcmVzZXJ2ZSArIFZMQU5fSExFTikgJiYgIXBvLT5oYXNf
dm5ldF9oZHIpCiAJCXNpemVfbWF4ID0gZGV2LT5tdHUgKyByZXNlcnZlICsgVkxBTl9ITEVOOwog
CisJcmVpbml0X2NvbXBsZXRpb24oJnBvLT5za2JfY29tcGxldGlvbik7CisKIAlkbyB7CiAJCXBo
ID0gcGFja2V0X2N1cnJlbnRfZnJhbWUocG8sICZwby0+dHhfcmluZywKIAkJCQkJICBUUF9TVEFU
VVNfU0VORF9SRVFVRVNUKTsKIAkJaWYgKHVubGlrZWx5KHBoID09IE5VTEwpKSB7Ci0JCQlpZiAo
bmVlZF93YWl0ICYmIG5lZWRfcmVzY2hlZCgpKQotCQkJCXNjaGVkdWxlKCk7CisJCQlpZiAobmVl
ZF93YWl0ICYmIHNrYikgeworCQkJCXRpbWVvID0gc29ja19zbmR0aW1lbygmcG8tPnNrLCBtc2ct
Pm1zZ19mbGFncyAmIE1TR19ET05UV0FJVCk7CisJCQkJdGltZW8gPSB3YWl0X2Zvcl9jb21wbGV0
aW9uX2ludGVycnVwdGlibGVfdGltZW91dCgmcG8tPnNrYl9jb21wbGV0aW9uLCB0aW1lbyk7CisJ
CQkJaWYgKHRpbWVvIDw9IDApIHsKKwkJCQkJZXJyID0gIXRpbWVvID8gLUVUSU1FRE9VVCA6IC1F
UkVTVEFSVFNZUzsKKwkJCQkJZ290byBvdXRfcHV0OworCQkJCX0KKwkJCX0KKwkJCS8qIGNoZWNr
IGZvciBhZGRpdGlvbmFsIGZyYW1lcyAqLwogCQkJY29udGludWU7CiAJCX0KIApAQCAtMzIxNSw2
ICszMjI4LDcgQEAgc3RhdGljIGludCBwYWNrZXRfY3JlYXRlKHN0cnVjdCBuZXQgKm5ldCwgc3Ry
dWN0IHNvY2tldCAqc29jaywgaW50IHByb3RvY29sLAogCXNvY2tfaW5pdF9kYXRhKHNvY2ssIHNr
KTsKIAogCXBvID0gcGt0X3NrKHNrKTsKKwlpbml0X2NvbXBsZXRpb24oJnBvLT5za2JfY29tcGxl
dGlvbik7CiAJc2stPnNrX2ZhbWlseSA9IFBGX1BBQ0tFVDsKIAlwby0+bnVtID0gcHJvdG87CiAJ
cG8tPnhtaXQgPSBkZXZfcXVldWVfeG1pdDsKZGlmZiAtLWdpdCBhL25ldC9wYWNrZXQvaW50ZXJu
YWwuaCBiL25ldC9wYWNrZXQvaW50ZXJuYWwuaAppbmRleCAzYmI3YzVmYjNiZmYuLmM3MGEyNzk0
NDU2ZiAxMDA2NDQKLS0tIGEvbmV0L3BhY2tldC9pbnRlcm5hbC5oCisrKyBiL25ldC9wYWNrZXQv
aW50ZXJuYWwuaApAQCAtMTI4LDYgKzEyOCw3IEBAIHN0cnVjdCBwYWNrZXRfc29jayB7CiAJdW5z
aWduZWQgaW50CQl0cF9oZHJsZW47CiAJdW5zaWduZWQgaW50CQl0cF9yZXNlcnZlOwogCXVuc2ln
bmVkIGludAkJdHBfdHN0YW1wOworCXN0cnVjdCBjb21wbGV0aW9uCXNrYl9jb21wbGV0aW9uOwog
CXN0cnVjdCBuZXRfZGV2aWNlIF9fcmN1CSpjYWNoZWRfZGV2OwogCWludAkJCSgqeG1pdCkoc3Ry
dWN0IHNrX2J1ZmYgKnNrYik7CiAJc3RydWN0IHBhY2tldF90eXBlCXByb3RfaG9vayBfX19fY2Fj
aGVsaW5lX2FsaWduZWRfaW5fc21wOwotLSAKMi4yMC4xCgoKRnJvbSA2ZGU0YzgwZjllMWQ0NGEx
OTg2OTdjYjU4OTNkMmMyZWQzZTRlMjQ0IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBZ
dWVIYWliaW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkRhdGU6IFdlZCwgMjYgSnVuIDIwMTkg
MTY6MDg6NDQgKzA4MDAKU3ViamVjdDogW1BBVENIIDAyLzE1XSBib25kaW5nOiBBbHdheXMgZW5h
YmxlIHZsYW4gdHggb2ZmbG9hZAoKWyBVcHN0cmVhbSBjb21taXQgMzBkODE3N2U4YWM3NzZkODlk
Mzg3ZmFkNTQ3YWY2YTBmNTk5MjEwZSBdCgpXZSBidWlsZCB2bGFuIG9uIHRvcCBvZiBib25kaW5n
IGludGVyZmFjZSwgd2hpY2ggdmxhbiBvZmZsb2FkCmlzIG9mZiwgYm9uZCBtb2RlIGlzIDgwMi4z
YWQgKExBQ1ApIGFuZCB4bWl0X2hhc2hfcG9saWN5IGlzCkJPTkRfWE1JVF9QT0xJQ1lfRU5DQVAz
NC4KCkJlY2F1c2UgdmxhbiB0eCBvZmZsb2FkIGlzIG9mZiwgdmxhbiB0Y2kgaXMgY2xlYXJlZCBh
bmQgc2tiIHB1c2gKdGhlIHZsYW4gaGVhZGVyIGluIHZhbGlkYXRlX3htaXRfdmxhbigpIHdoaWxl
IHNlbmRpbmcgZnJvbSB2bGFuCmRldmljZXMuIFRoZW4gaW4gYm9uZF94bWl0X2hhc2gsIF9fc2ti
X2Zsb3dfZGlzc2VjdCgpIGZhaWxzIHRvCmdldCBpbmZvcm1hdGlvbiBmcm9tIHByb3RvY29sIGhl
YWRlcnMgZW5jYXBzdWxhdGVkIHdpdGhpbiB2bGFuLApiZWNhdXNlICduaG9mZicgaXMgcG9pbnRz
IHRvIElQIGhlYWRlciwgc28gYm9uZCBoYXNoaW5nIGlzIGJhc2VkCm9uIGxheWVyIDIgaW5mbywg
d2hpY2ggZmFpbHMgdG8gZGlzdHJpYnV0ZSBwYWNrZXRzIGFjcm9zcyBzbGF2ZXMuCgpUaGlzIHBh
dGNoIGFsd2F5cyBlbmFibGUgYm9uZGluZydzIHZsYW4gdHggb2ZmbG9hZCwgcGFzcyB0aGUgdmxh
bgpwYWNrZXRzIHRvIHRoZSBzbGF2ZSBkZXZpY2VzIHdpdGggdmxhbiB0Y2ksIGxldCB0aGVtIHRv
IGhhbmRsZQp2bGFuIGltcGxlbWVudGF0aW9uLgoKRml4ZXM6IDI3ODMzOWE0MmExYiAoImJvbmRp
bmc6IHByb3BvZ2F0ZSB2bGFuX2ZlYXR1cmVzIHRvIGJvbmRpbmcgbWFzdGVyIikKU3VnZ2VzdGVk
LWJ5OiBKaXJpIFBpcmtvIDxqaXJpQHJlc251bGxpLnVzPgpTaWduZWQtb2ZmLWJ5OiBZdWVIYWli
aW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkFja2VkLWJ5OiBKaXJpIFBpcmtvIDxqaXJpQG1l
bGxhbm94LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxv
ZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMgfCAyICstCiAxIGZp
bGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9k
cml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25k
X21haW4uYwppbmRleCBmOTZlZmEzNjNkMzQuLjU5ZTkxOWI5Mjg3MyAxMDA2NDQKLS0tIGEvZHJp
dmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYworKysgYi9kcml2ZXJzL25ldC9ib25kaW5nL2Jv
bmRfbWFpbi5jCkBAIC00MzIxLDEyICs0MzIxLDEyIEBAIHZvaWQgYm9uZF9zZXR1cChzdHJ1Y3Qg
bmV0X2RldmljZSAqYm9uZF9kZXYpCiAJYm9uZF9kZXYtPmZlYXR1cmVzIHw9IE5FVElGX0ZfTkVU
TlNfTE9DQUw7CiAKIAlib25kX2Rldi0+aHdfZmVhdHVyZXMgPSBCT05EX1ZMQU5fRkVBVFVSRVMg
fAotCQkJCU5FVElGX0ZfSFdfVkxBTl9DVEFHX1RYIHwKIAkJCQlORVRJRl9GX0hXX1ZMQU5fQ1RB
R19SWCB8CiAJCQkJTkVUSUZfRl9IV19WTEFOX0NUQUdfRklMVEVSOwogCiAJYm9uZF9kZXYtPmh3
X2ZlYXR1cmVzIHw9IE5FVElGX0ZfR1NPX0VOQ0FQX0FMTCB8IE5FVElGX0ZfR1NPX1VEUF9MNDsK
IAlib25kX2Rldi0+ZmVhdHVyZXMgfD0gYm9uZF9kZXYtPmh3X2ZlYXR1cmVzOworCWJvbmRfZGV2
LT5mZWF0dXJlcyB8PSBORVRJRl9GX0hXX1ZMQU5fQ1RBR19UWCB8IE5FVElGX0ZfSFdfVkxBTl9T
VEFHX1RYOwogfQogCiAvKiBEZXN0cm95IGEgYm9uZGluZyBkZXZpY2UuCi0tIAoyLjIwLjEKCgpG
cm9tIDY3NmM0MDFiYjcwZjA2YTFiYzY0MjYyNzU0ZDIwZDA3Y2U4ZDIzM2QgTW9uIFNlcCAxNyAw
MDowMDowMCAyMDAxCkZyb206IFN0ZXBoZW4gU3VyeWFwdXRyYSA8c3N1cnlhZXh0ckBnbWFpbC5j
b20+CkRhdGU6IE1vbiwgMjQgSnVuIDIwMTkgMjA6MTQ6MDYgLTA0MDAKU3ViamVjdDogW1BBVENI
IDAzLzE1XSBpcHY0OiBVc2UgcmV0dXJuIHZhbHVlIG9mIGluZXRfaWlmKCkgZm9yCiBfX3Jhd192
NF9sb29rdXAgaW4gdGhlIHdoaWxlIGxvb3AKClsgVXBzdHJlYW0gY29tbWl0IDM4YzczNTI5ZGUx
M2UxZTEwOTE0ZGU3MDMwYjY1OWEyZjhiMDFjM2IgXQoKSW4gY29tbWl0IDE5ZTRlNzY4MDY0YTgg
KCJpcHY0OiBGaXggcmF3IHNvY2tldCBsb29rdXAgZm9yIGxvY2FsCnRyYWZmaWMiKSwgdGhlIGRp
ZiBhcmd1bWVudCB0byBfX3Jhd192NF9sb29rdXAoKSBpcyBjb21pbmcgZnJvbSB0aGUKcmV0dXJu
ZWQgdmFsdWUgb2YgaW5ldF9paWYoKSBidXQgdGhlIGNoYW5nZSB3YXMgZG9uZSBvbmx5IGZvciB0
aGUgZmlyc3QKbG9va3VwLiBTdWJzZXF1ZW50IGxvb2t1cHMgaW4gdGhlIHdoaWxlIGxvb3Agc3Rp
bGwgdXNlIHNrYi0+ZGV2LT5pZkluZGV4LgoKRml4ZXM6IDE5ZTRlNzY4MDY0YTggKCJpcHY0OiBG
aXggcmF3IHNvY2tldCBsb29rdXAgZm9yIGxvY2FsIHRyYWZmaWMiKQpTaWduZWQtb2ZmLWJ5OiBT
dGVwaGVuIFN1cnlhcHV0cmEgPHNzdXJ5YWV4dHJAZ21haWwuY29tPgpSZXZpZXdlZC1ieTogRGF2
aWQgQWhlcm4gPGRzYWhlcm5AZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2lwdjQvcmF3LmMgfCAyICstCiAxIGZp
bGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9u
ZXQvaXB2NC9yYXcuYyBiL25ldC9pcHY0L3Jhdy5jCmluZGV4IGRjOTFjMjdiYjc4OC4uM2Y2ZTk1
Y2IyMWIwIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9yYXcuYworKysgYi9uZXQvaXB2NC9yYXcuYwpA
QCAtMjAxLDcgKzIwMSw3IEBAIHN0YXRpYyBpbnQgcmF3X3Y0X2lucHV0KHN0cnVjdCBza19idWZm
ICpza2IsIGNvbnN0IHN0cnVjdCBpcGhkciAqaXBoLCBpbnQgaGFzaCkKIAkJfQogCQlzayA9IF9f
cmF3X3Y0X2xvb2t1cChuZXQsIHNrX25leHQoc2spLCBpcGgtPnByb3RvY29sLAogCQkJCSAgICAg
aXBoLT5zYWRkciwgaXBoLT5kYWRkciwKLQkJCQkgICAgIHNrYi0+ZGV2LT5pZmluZGV4LCBzZGlm
KTsKKwkJCQkgICAgIGRpZiwgc2RpZik7CiAJfQogb3V0OgogCXJlYWRfdW5sb2NrKCZyYXdfdjRf
aGFzaGluZm8ubG9jayk7Ci0tIAoyLjIwLjEKCgpGcm9tIDdmYjNlZGM3MWUyZjdjZmJiYTRhOGU3
YmNjYmM5N2Y2ZmI0ZjU5YWMgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVt
YXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KRGF0ZTogTW9uLCAyNCBKdW4gMjAxOSAwMjozODoy
MCAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggMDQvMTVdIG5ldC9wYWNrZXQ6IGZpeCBtZW1vcnkgbGVh
ayBpbiBwYWNrZXRfc2V0X3JpbmcoKQoKWyBVcHN0cmVhbSBjb21taXQgNTU2NTVlM2QxMTk3ZmZm
MTZhN2EwNTA4OGZiMGU1ZWJhNTBlYWM1NSBdCgpzeXpib3QgZm91bmQgd2UgY2FuIGxlYWsgbWVt
b3J5IGluIHBhY2tldF9zZXRfcmluZygpLCBpZiB1c2VyIGFwcGxpY2F0aW9uCnByb3ZpZGVzIGJ1
Z2d5IHBhcmFtZXRlcnMuCgpGaXhlczogN2Y5NTNhYjJiYTQ2ICgiYWZfcGFja2V0OiBUWF9SSU5H
IHN1cHBvcnQgZm9yIFRQQUNLRVRfVjMiKQpTaWduZWQtb2ZmLWJ5OiBFcmljIER1bWF6ZXQgPGVk
dW1hemV0QGdvb2dsZS5jb20+CkNjOiBTb3dtaW5pIFZhcmFkaGFuIDxzb3dtaW5pLnZhcmFkaGFu
QG9yYWNsZS5jb20+ClJlcG9ydGVkLWJ5OiBzeXpib3QgPHN5emthbGxlckBnb29nbGVncm91cHMu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+
Ci0tLQogbmV0L3BhY2tldC9hZl9wYWNrZXQuYyB8IDMgKystCiAxIGZpbGUgY2hhbmdlZCwgMiBp
bnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3BhY2tldC9hZl9w
YWNrZXQuYyBiL25ldC9wYWNrZXQvYWZfcGFja2V0LmMKaW5kZXggMzM4NWY0YzZlYjc0Li4yMTgx
NGFjYjg2MmQgMTAwNjQ0Ci0tLSBhL25ldC9wYWNrZXQvYWZfcGFja2V0LmMKKysrIGIvbmV0L3Bh
Y2tldC9hZl9wYWNrZXQuYwpAQCAtNDM0MSw3ICs0MzQxLDcgQEAgc3RhdGljIGludCBwYWNrZXRf
c2V0X3Jpbmcoc3RydWN0IHNvY2sgKnNrLCB1bmlvbiB0cGFja2V0X3JlcV91ICpyZXFfdSwKIAkJ
CQkgICAgcmVxMy0+dHBfc2l6ZW9mX3ByaXYgfHwKIAkJCQkgICAgcmVxMy0+dHBfZmVhdHVyZV9y
ZXFfd29yZCkgewogCQkJCQllcnIgPSAtRUlOVkFMOwotCQkJCQlnb3RvIG91dDsKKwkJCQkJZ290
byBvdXRfZnJlZV9wZ192ZWM7CiAJCQkJfQogCQkJfQogCQkJYnJlYWs7CkBAIC00NDA1LDYgKzQ0
MDUsNyBAQCBzdGF0aWMgaW50IHBhY2tldF9zZXRfcmluZyhzdHJ1Y3Qgc29jayAqc2ssIHVuaW9u
IHRwYWNrZXRfcmVxX3UgKnJlcV91LAogCQkJcHJiX3NodXRkb3duX3JldGlyZV9ibGtfdGltZXIo
cG8sIHJiX3F1ZXVlKTsKIAl9CiAKK291dF9mcmVlX3BnX3ZlYzoKIAlpZiAocGdfdmVjKQogCQlm
cmVlX3BnX3ZlYyhwZ192ZWMsIG9yZGVyLCByZXEtPnRwX2Jsb2NrX25yKTsKIG91dDoKLS0gCjIu
MjAuMQoKCkZyb20gYjdkMWUzNTlkMWMwZWM4MjAwMGFlYWM0N2ZiM2MxZGRkMDk5M2U3NiBNb24g
U2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogSmluZ1lpIEhvdSA8aG91amluZ3lpNjQ3QGdtYWls
LmNvbT4KRGF0ZTogTW9uLCAxNyBKdW4gMjAxOSAxNDo1NjowNSArMDgwMApTdWJqZWN0OiBbUEFU
Q0ggMDUvMTVdIG5ldDogcmVtb3ZlIGR1cGxpY2F0ZSBmZXRjaCBpbiBzb2NrX2dldHNvY2tvcHQK
ClsgVXBzdHJlYW0gY29tbWl0IGQwYmFlNGEwZTNkOGM1NjkwYTg4NTIwNGQ3ZWIyMzQxYTViNDg4
NGQgXQoKSW4gc29ja19nZXRzb2Nrb3B0KCksICdvcHRsZW4nIGlzIGZldGNoZWQgdGhlIGZpcnN0
IHRpbWUgZnJvbSB1c2Vyc3BhY2UuCidsZW4gPCAwJyBpcyB0aGVuIGNoZWNrZWQuIFRoZW4gaW4g
Y29uZGl0aW9uICdTT19NRU1JTkZPJywgJ29wdGxlbicgaXMKZmV0Y2hlZCB0aGUgc2Vjb25kIHRp
bWUgZnJvbSB1c2Vyc3BhY2UuCgpJZiBjaGFuZ2UgaXQgYmV0d2VlbiB0d28gZmV0Y2hlcyBtYXkg
Y2F1c2Ugc2VjdXJpdHkgcHJvYmxlbXMgb3IgdW5leHBlY3RlZApiZWhhaXZvciwgYW5kIHRoZXJl
IGlzIG5vIHJlYXNvbiB0byBmZXRjaCBpdCBhIHNlY29uZCB0aW1lLgoKVG8gZml4IHRoaXMsIHdl
IG5lZWQgdG8gcmVtb3ZlIHRoZSBzZWNvbmQgZmV0Y2guCgpTaWduZWQtb2ZmLWJ5OiBKaW5nWWkg
SG91IDxob3VqaW5neWk2NDdAZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2NvcmUvc29jay5jIHwgMyAtLS0KIDEg
ZmlsZSBjaGFuZ2VkLCAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NvY2su
YyBiL25ldC9jb3JlL3NvY2suYwppbmRleCAwNjc4NzhhMWU0YzUuLjMwYWZiMDcyZWVjZiAxMDA2
NDQKLS0tIGEvbmV0L2NvcmUvc29jay5jCisrKyBiL25ldC9jb3JlL3NvY2suYwpAQCAtMTQ4Miw5
ICsxNDgyLDYgQEAgaW50IHNvY2tfZ2V0c29ja29wdChzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBpbnQg
bGV2ZWwsIGludCBvcHRuYW1lLAogCXsKIAkJdTMyIG1lbWluZm9bU0tfTUVNSU5GT19WQVJTXTsK
IAotCQlpZiAoZ2V0X3VzZXIobGVuLCBvcHRsZW4pKQotCQkJcmV0dXJuIC1FRkFVTFQ7Ci0KIAkJ
c2tfZ2V0X21lbWluZm8oc2ssIG1lbWluZm8pOwogCiAJCWxlbiA9IG1pbl90KHVuc2lnbmVkIGlu
dCwgbGVuLCBzaXplb2YobWVtaW5mbykpOwotLSAKMi4yMC4xCgoKRnJvbSBiMTY3NTAzN2QzNTk0
NzNkNTljZGNmOTcyOTQwYzQzMjMxNDhjOGUzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9t
OiBSb2xhbmQgSGlpIDxyb2xhbmQua2luZy5ndWFuLmhpaUBpbnRlbC5jb20+CkRhdGU6IFdlZCwg
MTkgSnVuIDIwMTkgMjI6MTM6NDggKzA4MDAKU3ViamVjdDogW1BBVENIIDA2LzE1XSBuZXQ6IHN0
bW1hYzogZml4ZWQgbmV3IHN5c3RlbSB0aW1lIHNlY29uZHMgdmFsdWUKIGNhbGN1bGF0aW9uCgpb
IFVwc3RyZWFtIGNvbW1pdCBhMWU1Mzg4YjRkNWZjNzg2ODhlNWU5ZWU2NjQxZjc3OTcyMWQ2Mjkx
IF0KCldoZW4gQUREU1VCIGJpdCBpcyBzZXQsIHRoZSBzeXN0ZW0gdGltZSBzZWNvbmRzIGZpZWxk
IGlzIGNhbGN1bGF0ZWQgYXMKdGhlIGNvbXBsZW1lbnQgb2YgdGhlIHNlY29uZHMgcGFydCBvZiB0
aGUgdXBkYXRlIHZhbHVlLgoKRm9yIGV4YW1wbGUsIGlmIDMuMDAwMDAwMDAxIHNlY29uZHMgbmVl
ZCB0byBiZSBzdWJ0cmFjdGVkIGZyb20gdGhlCnN5c3RlbSB0aW1lLCB0aGlzIGZpZWxkIGlzIGNh
bGN1bGF0ZWQgYXMKMl4zMiAtIDMgPSA0Mjk0OTY3Mjk2IC0gMyA9IDB4MTAwMDAwMDAwIC0gMyA9
IDB4RkZGRkZGRkQKClByZXZpb3VzbHksIHRoZSAweDEwMDAwMDAwMCBpcyBtaXN0YWtlbmx5IHdy
aXR0ZW4gYXMgMTAwMDAwMDAwLgoKVGhpcyBpcyBmdXJ0aGVyIHNpbXBsaWZpZWQgZnJvbQogIHNl
YyA9ICgweDEwMDAwMDAwMFVMTCAtIHNlYyk7CnRvCiAgc2VjID0gLXNlYzsKCkZpeGVzOiBiYTFm
ZmQ3NGRmNzQgKCJzdG1tYWM6IGZpeCBQVFAgc3VwcG9ydCBmb3IgR01BQzQiKQpTaWduZWQtb2Zm
LWJ5OiBSb2xhbmQgSGlpIDxyb2xhbmQua2luZy5ndWFuLmhpaUBpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IE9uZyBCb29uIExlb25nIDxib29uLmxlb25nLm9uZ0BpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IFZvb24gV2VpZmVuZyA8d2VpZmVuZy52b29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0
L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19od3RzdGFtcC5jIHwgMiArLQogMSBmaWxl
IGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMgYi9kcml2
ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1tYWNfaHd0c3RhbXAuYwppbmRleCA4
ZDljYzIxNTdhZmQuLjc0MjMyNjJjZTU5MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMKKysrIGIvZHJpdmVycy9uZXQvZXRo
ZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX2h3dHN0YW1wLmMKQEAgLTEyMiw3ICsxMjIsNyBA
QCBzdGF0aWMgaW50IGFkanVzdF9zeXN0aW1lKHZvaWQgX19pb21lbSAqaW9hZGRyLCB1MzIgc2Vj
LCB1MzIgbnNlYywKIAkJICogcHJvZ3JhbW1lZCB3aXRoICgyXjMyIOKAkyA8bmV3X3NlY192YWx1
ZT4pCiAJCSAqLwogCQlpZiAoZ21hYzQpCi0JCQlzZWMgPSAoMTAwMDAwMDAwVUxMIC0gc2VjKTsK
KwkJCXNlYyA9IC1zZWM7CiAKIAkJdmFsdWUgPSByZWFkbChpb2FkZHIgKyBQVFBfVENSKTsKIAkJ
aWYgKHZhbHVlICYgUFRQX1RDUl9UU0NUUkxTU1IpCi0tIAoyLjIwLjEKCgpGcm9tIGQ3ZmYxZTQy
NTY5Yjk3ODcwZmM0YmQ2NjhlZjNkNWY0NGVlYzJiOTEgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAx
CkZyb206IFJvbGFuZCBIaWkgPHJvbGFuZC5raW5nLmd1YW4uaGlpQGludGVsLmNvbT4KRGF0ZTog
V2VkLCAxOSBKdW4gMjAxOSAyMjo0MTo0OCArMDgwMApTdWJqZWN0OiBbUEFUQ0ggMDcvMTVdIG5l
dDogc3RtbWFjOiBzZXQgSUMgYml0IHdoZW4gdHJhbnNtaXR0aW5nIGZyYW1lcyB3aXRoCiBIVyB0
aW1lc3RhbXAKClsgVXBzdHJlYW0gY29tbWl0IGQwYmI4MmZkNjAxODM4NjhmNDZjOGNjYzU5NWEz
ZDYxYzMzMzRhMTggXQoKV2hlbiB0cmFuc21pdHRpbmcgY2VydGFpbiBQVFAgZnJhbWVzLCBlLmcu
IFNZTkMgYW5kIERFTEFZX1JFUSwgdGhlClBUUCBkYWVtb24sIGUuZy4gcHRwNGwsIGlzIHBvbGxp
bmcgdGhlIGRyaXZlciBmb3IgdGhlIGZyYW1lIHRyYW5zbWl0CmhhcmR3YXJlIHRpbWVzdGFtcC4g
VGhlIHBvbGxpbmcgd2lsbCBtb3N0IGxpa2VseSB0aW1lb3V0IGlmIHRoZSB0eApjb2FsZXNjZSBp
cyBlbmFibGVkIGR1ZSB0byB0aGUgSW50ZXJydXB0LW9uLUNvbXBsZXRpb24gKElDKSBiaXQgaXMK
bm90IHNldCBpbiB0eCBkZXNjcmlwdG9yIGZvciB0aG9zZSBmcmFtZXMuCgpUaGlzIHBhdGNoIHdp
bGwgaWdub3JlIHRoZSB0eCBjb2FsZXNjZSBwYXJhbWV0ZXIgYW5kIHNldCB0aGUgSUMgYml0Cndo
ZW4gdHJhbnNtaXR0aW5nIFBUUCBmcmFtZXMgd2hpY2ggbmVlZCB0byByZXBvcnQgb3V0IHRoZSBm
cmFtZQp0cmFuc21pdCBoYXJkd2FyZSB0aW1lc3RhbXAgdG8gdXNlciBzcGFjZS4KCkZpeGVzOiBm
NzQ4YmU1MzFkNzAgKCJuZXQ6IHN0bW1hYzogUmV3b3JrIGNvYWxlc2NlIHRpbWVyIGFuZCBmaXgg
bXVsdGktcXVldWUgcmFjZXMiKQpTaWduZWQtb2ZmLWJ5OiBSb2xhbmQgSGlpIDxyb2xhbmQua2lu
Zy5ndWFuLmhpaUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE9uZyBCb29uIExlb25nIDxib29u
Lmxlb25nLm9uZ0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IFZvb24gV2VpZmVuZyA8d2VpZmVu
Zy52b29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBk
YXZlbWxvZnQubmV0PgotLS0KIC4uLi9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFj
X21haW4uYyB8IDIyICsrKysrKysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxNCBpbnNl
cnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9z
dG1pY3JvL3N0bW1hYy9zdG1tYWNfbWFpbi5jCmluZGV4IDYzNWQ4OGQ4MjYxMC4uYTYzNDA1NGRj
YjExIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1t
YWNfbWFpbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1h
Y19tYWluLmMKQEAgLTI5NTcsMTIgKzI5NTcsMTUgQEAgc3RhdGljIG5ldGRldl90eF90IHN0bW1h
Y190c29feG1pdChzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgbmV0X2RldmljZSAqZGV2KQog
CiAJLyogTWFuYWdlIHR4IG1pdGlnYXRpb24gKi8KIAl0eF9xLT50eF9jb3VudF9mcmFtZXMgKz0g
bmZyYWdzICsgMTsKLQlpZiAocHJpdi0+dHhfY29hbF9mcmFtZXMgPD0gdHhfcS0+dHhfY291bnRf
ZnJhbWVzKSB7CisJaWYgKGxpa2VseShwcml2LT50eF9jb2FsX2ZyYW1lcyA+IHR4X3EtPnR4X2Nv
dW50X2ZyYW1lcykgJiYKKwkgICAgIShwcml2LT5zeW5vcHN5c19pZCA+PSBEV01BQ19DT1JFXzRf
MDAgJiYKKwkgICAgKHNrYl9zaGluZm8oc2tiKS0+dHhfZmxhZ3MgJiBTS0JUWF9IV19UU1RBTVAp
ICYmCisJICAgIHByaXYtPmh3dHNfdHhfZW4pKSB7CisJCXN0bW1hY190eF90aW1lcl9hcm0ocHJp
diwgcXVldWUpOworCX0gZWxzZSB7CisJCXR4X3EtPnR4X2NvdW50X2ZyYW1lcyA9IDA7CiAJCXN0
bW1hY19zZXRfdHhfaWMocHJpdiwgZGVzYyk7CiAJCXByaXYtPnhzdGF0cy50eF9zZXRfaWNfYml0
Kys7Ci0JCXR4X3EtPnR4X2NvdW50X2ZyYW1lcyA9IDA7Ci0JfSBlbHNlIHsKLQkJc3RtbWFjX3R4
X3RpbWVyX2FybShwcml2LCBxdWV1ZSk7CiAJfQogCiAJc2tiX3R4X3RpbWVzdGFtcChza2IpOwpA
QCAtMzE3NiwxMiArMzE3OSwxNSBAQCBzdGF0aWMgbmV0ZGV2X3R4X3Qgc3RtbWFjX3htaXQoc3Ry
dWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IG5ldF9kZXZpY2UgKmRldikKIAkgKiBlbGVtZW50IGlu
IGNhc2Ugb2Ygbm8gU0cuCiAJICovCiAJdHhfcS0+dHhfY291bnRfZnJhbWVzICs9IG5mcmFncyAr
IDE7Ci0JaWYgKHByaXYtPnR4X2NvYWxfZnJhbWVzIDw9IHR4X3EtPnR4X2NvdW50X2ZyYW1lcykg
eworCWlmIChsaWtlbHkocHJpdi0+dHhfY29hbF9mcmFtZXMgPiB0eF9xLT50eF9jb3VudF9mcmFt
ZXMpICYmCisJICAgICEocHJpdi0+c3lub3BzeXNfaWQgPj0gRFdNQUNfQ09SRV80XzAwICYmCisJ
ICAgIChza2Jfc2hpbmZvKHNrYiktPnR4X2ZsYWdzICYgU0tCVFhfSFdfVFNUQU1QKSAmJgorCSAg
ICBwcml2LT5od3RzX3R4X2VuKSkgeworCQlzdG1tYWNfdHhfdGltZXJfYXJtKHByaXYsIHF1ZXVl
KTsKKwl9IGVsc2UgeworCQl0eF9xLT50eF9jb3VudF9mcmFtZXMgPSAwOwogCQlzdG1tYWNfc2V0
X3R4X2ljKHByaXYsIGRlc2MpOwogCQlwcml2LT54c3RhdHMudHhfc2V0X2ljX2JpdCsrOwotCQl0
eF9xLT50eF9jb3VudF9mcmFtZXMgPSAwOwotCX0gZWxzZSB7Ci0JCXN0bW1hY190eF90aW1lcl9h
cm0ocHJpdiwgcXVldWUpOwogCX0KIAogCXNrYl90eF90aW1lc3RhbXAoc2tiKTsKLS0gCjIuMjAu
MQoKCkZyb20gZmI2YWY4ZDE2YmI4ZTI5NDY4MmU3ZDE0ZTViMGJhMmJmNzVlMGE0YyBNb24gU2Vw
IDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogRGlyayB2YW4gZGVyIE1lcndlIDxkaXJrLnZhbmRlcm1l
cndlQG5ldHJvbm9tZS5jb20+CkRhdGU6IFN1biwgMjMgSnVuIDIwMTkgMjE6MjY6NTggLTA3MDAK
U3ViamVjdDogW1BBVENIIDA4LzE1XSBuZXQvdGxzOiBmaXggcGFnZSBkb3VibGUgZnJlZSBvbiBU
WCBjbGVhbnVwCgpbIFVwc3RyZWFtIGNvbW1pdCA5MzU0NTQ0Y2JjY2Y2OGRhMWIwNDdmOGZiN2I0
NzYzMGUzYzhhNTlkIF0KCldpdGggY29tbWl0IDk0ODUwMjU3Y2YwZiAoInRsczogRml4IHRsc19k
ZXZpY2UgaGFuZGxpbmcgb2YgcGFydGlhbCByZWNvcmRzIikKYSBuZXcgcGF0aCB3YXMgaW50cm9k
dWNlZCB0byBjbGVhbnVwIHBhcnRpYWwgcmVjb3JkcyBkdXJpbmcgc2tfcHJvdG9fY2xvc2UuClRo
aXMgcGF0aCBkb2VzIG5vdCBoYW5kbGUgdGhlIFNXIEtUTFMgdHhfbGlzdCBjbGVhbnVwLgoKVGhp
cyBpcyB1bm5lY2Vzc2FyeSB0aG91Z2ggc2luY2UgdGhlIGZyZWVfcmVzb3VyY2VzIGNhbGxzIGZv
ciBib3RoClNXIGFuZCBvZmZsb2FkIHBhdGhzIHdpbGwgY2xlYW51cCBhIHBhcnRpYWwgcmVjb3Jk
LgoKVGhlIHZpc2libGUgZWZmZWN0IGlzIHRoZSBmb2xsb3dpbmcgd2FybmluZywgYnV0IHRoaXMg
YnVnIGFsc28gY2F1c2VzCmEgcGFnZSBkb3VibGUgZnJlZS4KCiAgICBXQVJOSU5HOiBDUFU6IDcg
UElEOiA0MDAwIGF0IG5ldC9jb3JlL3N0cmVhbS5jOjIwNiBza19zdHJlYW1fa2lsbF9xdWV1ZXMr
MHgxMDMvMHgxMTAKICAgIFJJUDogMDAxMDpza19zdHJlYW1fa2lsbF9xdWV1ZXMrMHgxMDMvMHgx
MTAKICAgIFJTUDogMDAxODpmZmZmYjZkZjg3ZTA3YmQwIEVGTEFHUzogMDAwMTAyMDYKICAgIFJB
WDogMDAwMDAwMDAwMDAwMDAwMCBSQlg6IGZmZmY4YzIxZGI0OTcxYzAgUkNYOiAwMDAwMDAwMDAw
MDAwMDA3CiAgICBSRFg6IGZmZmZmZmZmZmZmZmZmYTAgUlNJOiAwMDAwMDAwMDAwMDAwMDFkIFJE
STogZmZmZjhjMjFkYjQ5NzI3MAogICAgUkJQOiBmZmZmOGMyMWRiNDk3MjcwIFIwODogZmZmZjhj
MjlmNDc0ODYwMCBSMDk6IDAwMDAwMDAxMDAyMDAwMWEKICAgIFIxMDogZmZmZmI2ZGY4N2UwN2Fh
MCBSMTE6IGZmZmZmZmZmOWE0NDU2MDAgUjEyOiAwMDAwMDAwMDAwMDAwMDA3CiAgICBSMTM6IDAw
MDAwMDAwMDAwMDAwMDAgUjE0OiBmZmZmOGMyMWYwM2YyOTAwIFIxNTogZmZmZjhjMjFmMDNiOGRm
MAogICAgQ2FsbCBUcmFjZToKICAgICBpbmV0X2Nza19kZXN0cm95X3NvY2srMHg1NS8weDEwMAog
ICAgIHRjcF9jbG9zZSsweDI1ZC8weDQwMAogICAgID8gdGNwX2NoZWNrX29vbSsweDEyMC8weDEy
MAogICAgIHRsc19za19wcm90b19jbG9zZSsweDEyNy8weDFjMAogICAgIGluZXRfcmVsZWFzZSsw
eDNjLzB4NjAKICAgICBfX3NvY2tfcmVsZWFzZSsweDNkLzB4YjAKICAgICBzb2NrX2Nsb3NlKzB4
MTEvMHgyMAogICAgIF9fZnB1dCsweGQ4LzB4MjEwCiAgICAgdGFza193b3JrX3J1bisweDg0LzB4
YTAKICAgICBkb19leGl0KzB4MmRjLzB4YjkwCiAgICAgPyByZWxlYXNlX3NvY2srMHg0My8weDkw
CiAgICAgZG9fZ3JvdXBfZXhpdCsweDNhLzB4YTAKICAgICBnZXRfc2lnbmFsKzB4Mjk1LzB4NzIw
CiAgICAgZG9fc2lnbmFsKzB4MzYvMHg2MTAKICAgICA/IFNZU0NfcmVjdmZyb20rMHgxMWQvMHgx
MzAKICAgICBleGl0X3RvX3VzZXJtb2RlX2xvb3ArMHg2OS8weGIwCiAgICAgZG9fc3lzY2FsbF82
NCsweDE3My8weDE4MAogICAgIGVudHJ5X1NZU0NBTExfNjRfYWZ0ZXJfaHdmcmFtZSsweDNkLzB4
YTIKICAgIFJJUDogMDAzMzoweDdmZTliOWFiYzEwZAogICAgUlNQOiAwMDJiOjAwMDA3ZmU5YjE5
YTFkNDggRUZMQUdTOiAwMDAwMDI0NiBPUklHX1JBWDogMDAwMDAwMDAwMDAwMDBjYQogICAgUkFY
OiBmZmZmZmZmZmZmZmZmZTAwIFJCWDogMDAwMDAwMDAwMDAwMDAwNiBSQ1g6IDAwMDA3ZmU5Yjlh
YmMxMGQKICAgIFJEWDogMDAwMDAwMDAwMDAwMDAwMiBSU0k6IDAwMDAwMDAwMDAwMDAwODAgUkRJ
OiAwMDAwN2ZlOTQ4MDAzNDMwCiAgICBSQlA6IDAwMDA3ZmU5NDgwMDM0MTAgUjA4OiAwMDAwN2Zl
OTQ4MDAzNDMwIFIwOTogMDAwMDAwMDAwMDAwMDAwMAogICAgUjEwOiAwMDAwMDAwMDAwMDAwMDAw
IFIxMTogMDAwMDAwMDAwMDAwMDI0NiBSMTI6IDAwMDA1NjAzNzM5ZDkwODAKICAgIFIxMzogMDAw
MDdmZTliOWFiOWY5MCBSMTQ6IDAwMDA3ZmU5NDgwMDM0MzAgUjE1OiAwMDAwMDAwMDAwMDAwMDAw
CgpGaXhlczogOTQ4NTAyNTdjZjBmICgidGxzOiBGaXggdGxzX2RldmljZSBoYW5kbGluZyBvZiBw
YXJ0aWFsIHJlY29yZHMiKQpTaWduZWQtb2ZmLWJ5OiBEaXJrIHZhbiBkZXIgTWVyd2UgPGRpcmsu
dmFuZGVybWVyd2VAbmV0cm9ub21lLmNvbT4KU2lnbmVkLW9mZi1ieTogSmFrdWIgS2ljaW5za2kg
PGpha3ViLmtpY2luc2tpQG5ldHJvbm9tZS5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1p
bGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBpbmNsdWRlL25ldC90bHMuaCAgfCAxNSAt
LS0tLS0tLS0tLS0tLS0KIG5ldC90bHMvdGxzX21haW4uYyB8ICAzICsrLQogMiBmaWxlcyBjaGFu
Z2VkLCAyIGluc2VydGlvbnMoKyksIDE2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbmV0L3Rscy5oIGIvaW5jbHVkZS9uZXQvdGxzLmgKaW5kZXggMDUzMDgyZDk4OTA2Li5hNjdh
ZDdkNTZmZjIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbmV0L3Rscy5oCisrKyBiL2luY2x1ZGUvbmV0
L3Rscy5oCkBAIC0zNDcsMjEgKzM0Nyw2IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCB0bHNfaXNfcGFy
dGlhbGx5X3NlbnRfcmVjb3JkKHN0cnVjdCB0bHNfY29udGV4dCAqY3R4KQogCXJldHVybiAhIWN0
eC0+cGFydGlhbGx5X3NlbnRfcmVjb3JkOwogfQogCi1zdGF0aWMgaW5saW5lIGludCB0bHNfY29t
cGxldGVfcGVuZGluZ193b3JrKHN0cnVjdCBzb2NrICpzaywKLQkJCQkJICAgIHN0cnVjdCB0bHNf
Y29udGV4dCAqY3R4LAotCQkJCQkgICAgaW50IGZsYWdzLCBsb25nICp0aW1lbykKLXsKLQlpbnQg
cmMgPSAwOwotCi0JaWYgKHVubGlrZWx5KHNrLT5za193cml0ZV9wZW5kaW5nKSkKLQkJcmMgPSB3
YWl0X29uX3BlbmRpbmdfd3JpdGVyKHNrLCB0aW1lbyk7Ci0KLQlpZiAoIXJjICYmIHRsc19pc19w
YXJ0aWFsbHlfc2VudF9yZWNvcmQoY3R4KSkKLQkJcmMgPSB0bHNfcHVzaF9wYXJ0aWFsX3JlY29y
ZChzaywgY3R4LCBmbGFncyk7Ci0KLQlyZXR1cm4gcmM7Ci19Ci0KIHN0YXRpYyBpbmxpbmUgYm9v
bCB0bHNfaXNfcGVuZGluZ19vcGVuX3JlY29yZChzdHJ1Y3QgdGxzX2NvbnRleHQgKnRsc19jdHgp
CiB7CiAJcmV0dXJuIHRsc19jdHgtPnBlbmRpbmdfb3Blbl9yZWNvcmRfZnJhZ3M7CmRpZmYgLS1n
aXQgYS9uZXQvdGxzL3Rsc19tYWluLmMgYi9uZXQvdGxzL3Rsc19tYWluLmMKaW5kZXggNDc4NjAz
ZjQzOTY0Li5mNGY2MzI4MjQyNDcgMTAwNjQ0Ci0tLSBhL25ldC90bHMvdGxzX21haW4uYworKysg
Yi9uZXQvdGxzL3Rsc19tYWluLmMKQEAgLTI3OSw3ICsyNzksOCBAQCBzdGF0aWMgdm9pZCB0bHNf
c2tfcHJvdG9fY2xvc2Uoc3RydWN0IHNvY2sgKnNrLCBsb25nIHRpbWVvdXQpCiAJCWdvdG8gc2tp
cF90eF9jbGVhbnVwOwogCX0KIAotCWlmICghdGxzX2NvbXBsZXRlX3BlbmRpbmdfd29yayhzaywg
Y3R4LCAwLCAmdGltZW8pKQorCWlmICh1bmxpa2VseShzay0+c2tfd3JpdGVfcGVuZGluZykgJiYK
KwkgICAgIXdhaXRfb25fcGVuZGluZ193cml0ZXIoc2ssICZ0aW1lbykpCiAJCXRsc19oYW5kbGVf
b3Blbl9yZWNvcmQoc2ssIDApOwogCiAJLyogV2UgbmVlZCB0aGVzZSBmb3IgdGxzX3N3X2ZhbGxi
YWNrIGhhbmRsaW5nIG9mIG90aGVyIHBhY2tldHMgKi8KLS0gCjIuMjAuMQoKCkZyb20gNzcwOWNl
ZWIxNTU2ZDdjNTE2NTY1ZGUyMGUzMzY0YzBlMTNkMzQyNCBNb24gU2VwIDE3IDAwOjAwOjAwIDIw
MDEKRnJvbTogPT9VVEYtOD9xP0JqPUMzPUI4cm49MjBNb3JrPz0gPGJqb3JuQG1vcmsubm8+CkRh
dGU6IE1vbiwgMjQgSnVuIDIwMTkgMTg6NDU6MTEgKzAyMDAKU3ViamVjdDogW1BBVENIIDA5LzE1
XSBxbWlfd3dhbjogRml4IG91dC1vZi1ib3VuZHMgcmVhZApNSU1FLVZlcnNpb246IDEuMApDb250
ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKQ29udGVudC1UcmFuc2Zlci1FbmNv
ZGluZzogOGJpdAoKWyBVcHN0cmVhbSBjb21taXQgOTA0ZDg4ZDc0M2IwYzk0MDkyYzUxMTc5NTVl
YWI2OTVkZjgxMDllOCBdCgpUaGUgc3l6Ym90IHJlcG9ydGVkCgogQ2FsbCBUcmFjZToKICBfX2R1
bXBfc3RhY2sgbGliL2R1bXBfc3RhY2suYzo3NyBbaW5saW5lXQogIGR1bXBfc3RhY2srMHhjYS8w
eDEzZSBsaWIvZHVtcF9zdGFjay5jOjExMwogIHByaW50X2FkZHJlc3NfZGVzY3JpcHRpb24rMHg2
Ny8weDIzMSBtbS9rYXNhbi9yZXBvcnQuYzoxODgKICBfX2thc2FuX3JlcG9ydC5jb2xkKzB4MWEv
MHgzMiBtbS9rYXNhbi9yZXBvcnQuYzozMTcKICBrYXNhbl9yZXBvcnQrMHhlLzB4MjAgbW0va2Fz
YW4vY29tbW9uLmM6NjE0CiAgcW1pX3d3YW5fcHJvYmUrMHgzNDIvMHgzNjAgZHJpdmVycy9uZXQv
dXNiL3FtaV93d2FuLmM6MTQxNwogIHVzYl9wcm9iZV9pbnRlcmZhY2UrMHgzMDUvMHg3YTAgZHJp
dmVycy91c2IvY29yZS9kcml2ZXIuYzozNjEKICByZWFsbHlfcHJvYmUrMHgyODEvMHg2NjAgZHJp
dmVycy9iYXNlL2RkLmM6NTA5CiAgZHJpdmVyX3Byb2JlX2RldmljZSsweDEwNC8weDIxMCBkcml2
ZXJzL2Jhc2UvZGQuYzo2NzAKICBfX2RldmljZV9hdHRhY2hfZHJpdmVyKzB4MWMyLzB4MjIwIGRy
aXZlcnMvYmFzZS9kZC5jOjc3NwogIGJ1c19mb3JfZWFjaF9kcnYrMHgxNWMvMHgxZTAgZHJpdmVy
cy9iYXNlL2J1cy5jOjQ1NAoKQ2F1c2VkIGJ5IHRvbyBtYW55IGNvbmZ1c2luZyBpbmRpcmVjdGlv
bnMgYW5kIGNhc3RzLgppZC0+ZHJpdmVyX2luZm8gaXMgYSBwb2ludGVyIHN0b3JlZCBpbiBhIGxv
bmcuICBXZSB3YW50IHRoZQpwb2ludGVyIGhlcmUsIG5vdCB0aGUgYWRkcmVzcyBvZiBpdC4KClRo
YW5rcy10bzogSGlsbGYgRGFudG9uIDxoZGFudG9uQHNpbmEuY29tPgpSZXBvcnRlZC1ieTogc3l6
Ym90K2I2ODYwNWQ3ZmFkZDIxNTEwZGUxQHN5emthbGxlci5hcHBzcG90bWFpbC5jb20KQ2M6IEty
aXN0aWFuIEV2ZW5zZW4gPGtyaXN0aWFuLmV2ZW5zZW5AZ21haWwuY29tPgpGaXhlczogZTRiZjYz
NDgyYzMwICgicW1pX3d3YW46IEFkZCBxdWlyayBmb3IgUXVlY3RlbCBkeW5hbWljIGNvbmZpZyIp
ClNpZ25lZC1vZmYtYnk6IEJqw7hybiBNb3JrIDxiam9ybkBtb3JrLm5vPgpTaWduZWQtb2ZmLWJ5
OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQv
dXNiL3FtaV93d2FuLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEg
ZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC91c2IvcW1pX3d3YW4uYyBiL2Ry
aXZlcnMvbmV0L3VzYi9xbWlfd3dhbi5jCmluZGV4IGQ5YTY2OTlhYmU1OS4uZTY1N2Q4OTQ3MTI1
IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC91c2IvcW1pX3d3YW4uYworKysgYi9kcml2ZXJzL25l
dC91c2IvcW1pX3d3YW4uYwpAQCAtMTQxMiw3ICsxNDEyLDcgQEAgc3RhdGljIGludCBxbWlfd3dh
bl9wcm9iZShzdHJ1Y3QgdXNiX2ludGVyZmFjZSAqaW50ZiwKIAkgKiBkaWZmZXJlbnQuIElnbm9y
ZSB0aGUgY3VycmVudCBpbnRlcmZhY2UgaWYgdGhlIG51bWJlciBvZiBlbmRwb2ludHMKIAkgKiBl
cXVhbHMgdGhlIG51bWJlciBmb3IgdGhlIGRpYWcgaW50ZXJmYWNlICh0d28pLgogCSAqLwotCWlu
Zm8gPSAodm9pZCAqKSZpZC0+ZHJpdmVyX2luZm87CisJaW5mbyA9ICh2b2lkICopaWQtPmRyaXZl
cl9pbmZvOwogCiAJaWYgKGluZm8tPmRhdGEgJiBRTUlfV1dBTl9RVUlSS19RVUVDVEVMX0RZTkNG
RykgewogCQlpZiAoZGVzYy0+Yk51bUVuZHBvaW50cyA9PSAyKQotLSAKMi4yMC4xCgoKRnJvbSAz
MGYyNzhhMWYxYTViOTM4ZDk3MDQ0ZTBiMmM4ODdhYWE0YWExZGQ1IE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkRhdGU6IFR1ZSwg
MjUgSnVuIDIwMTkgMDA6MjE6NDUgKzA4MDAKU3ViamVjdDogW1BBVENIIDEwLzE1XSBzY3RwOiBj
aGFuZ2UgdG8gaG9sZCBzayBhZnRlciBhdXRoIHNoa2V5IGlzIGNyZWF0ZWQKIHN1Y2Nlc3NmdWxs
eQoKWyBVcHN0cmVhbSBjb21taXQgMjViZmY2ZDU0NzhiMmEwMjM2ODA5NzAxNWI3ZDhlYjcyN2M4
N2UxNiBdCgpOb3cgaW4gc2N0cF9lbmRwb2ludF9pbml0KCksIGl0IGhvbGRzIHRoZSBzayB0aGVu
IGNyZWF0ZXMgYXV0aApzaGtleS4gQnV0IHdoZW4gdGhlIGNyZWF0aW9uIGZhaWxzLCBpdCBkb2Vz
bid0IHJlbGVhc2UgdGhlIHNrLAp3aGljaCBjYXVzZXMgYSBzayBkZWZjbmYgbGVhaywKCkhlcmUg
dG8gZml4IGl0IGJ5IG9ubHkgaG9sZGluZyB0aGUgc2sgd2hlbiBhdXRoIHNoa2V5IGlzIGNyZWF0
ZWQKc3VjY2Vzc2Z1bGx5LgoKRml4ZXM6IGEyOWE1YmQ0ZjVjMyAoIltTQ1RQXTogSW1wbGVtZW50
IFNDVFAtQVVUSCBpbml0aWFsaXphdGlvbnMuIikKUmVwb3J0ZWQtYnk6IHN5emJvdCthZmFiZGEz
ODkwY2MyZjc2NTA0MUBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tClJlcG9ydGVkLWJ5OiBzeXpi
b3QrMjc2Y2ExYzc3YTE5OTc3YzAxMzBAc3l6a2FsbGVyLmFwcHNwb3RtYWlsLmNvbQpTaWduZWQt
b2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkFja2VkLWJ5OiBOZWlsIEhv
cm1hbiA8bmhvcm1hbkByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIg
PGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3NjdHAvZW5kcG9pbnRvbGEuYyB8IDggKysr
Ky0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvbmV0L3NjdHAvZW5kcG9pbnRvbGEuYyBiL25ldC9zY3RwL2VuZHBvaW50b2xh
LmMKaW5kZXggMDQ0OGI2OGZjZTc0Li5iY2ZjODFlZTE1M2QgMTAwNjQ0Ci0tLSBhL25ldC9zY3Rw
L2VuZHBvaW50b2xhLmMKKysrIGIvbmV0L3NjdHAvZW5kcG9pbnRvbGEuYwpAQCAtMTMzLDEwICsx
MzMsNiBAQCBzdGF0aWMgc3RydWN0IHNjdHBfZW5kcG9pbnQgKnNjdHBfZW5kcG9pbnRfaW5pdChz
dHJ1Y3Qgc2N0cF9lbmRwb2ludCAqZXAsCiAJLyogSW5pdGlhbGl6ZSB0aGUgYmluZCBhZGRyIGFy
ZWEgKi8KIAlzY3RwX2JpbmRfYWRkcl9pbml0KCZlcC0+YmFzZS5iaW5kX2FkZHIsIDApOwogCi0J
LyogUmVtZW1iZXIgd2hvIHdlIGFyZSBhdHRhY2hlZCB0by4gICovCi0JZXAtPmJhc2Uuc2sgPSBz
azsKLQlzb2NrX2hvbGQoZXAtPmJhc2Uuc2spOwotCiAJLyogQ3JlYXRlIHRoZSBsaXN0cyBvZiBh
c3NvY2lhdGlvbnMuICAqLwogCUlOSVRfTElTVF9IRUFEKCZlcC0+YXNvY3MpOwogCkBAIC0xNjks
NiArMTY1LDEwIEBAIHN0YXRpYyBzdHJ1Y3Qgc2N0cF9lbmRwb2ludCAqc2N0cF9lbmRwb2ludF9p
bml0KHN0cnVjdCBzY3RwX2VuZHBvaW50ICplcCwKIAllcC0+cHJzY3RwX2VuYWJsZSA9IG5ldC0+
c2N0cC5wcnNjdHBfZW5hYmxlOwogCWVwLT5yZWNvbmZfZW5hYmxlID0gbmV0LT5zY3RwLnJlY29u
Zl9lbmFibGU7CiAKKwkvKiBSZW1lbWJlciB3aG8gd2UgYXJlIGF0dGFjaGVkIHRvLiAgKi8KKwll
cC0+YmFzZS5zayA9IHNrOworCXNvY2tfaG9sZChlcC0+YmFzZS5zayk7CisKIAlyZXR1cm4gZXA7
CiAKIG5vbWVtX3Noa2V5OgotLSAKMi4yMC4xCgoKRnJvbSAzOGMyM2M5ZmUwYWU1YzE1Yzk3ZmQx
ZWVhNGFlZTRmZjBhYjE0MzJlIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBZdWVIYWli
aW5nIDx5dWVoYWliaW5nQGh1YXdlaS5jb20+CkRhdGU6IFRodSwgMjcgSnVuIDIwMTkgMDA6MDM6
MzkgKzA4MDAKU3ViamVjdDogW1BBVENIIDExLzE1XSB0ZWFtOiBBbHdheXMgZW5hYmxlIHZsYW4g
dHggb2ZmbG9hZAoKWyBVcHN0cmVhbSBjb21taXQgZWU0Mjk3NDIwZDU2YTAwMzNhODU5M2U4MGIz
M2ZjYzkzZmRhODUwOSBdCgpXZSBzaG91bGQgcmF0aGVyIGhhdmUgdmxhbl90Y2kgZmlsbGVkIGFs
bCB0aGUgd2F5IGRvd24KdG8gdGhlIHRyYW5zbWl0dGluZyBuZXRkZXZpY2UgYW5kIGxldCBpdCBk
byB0aGUgaHcvc3cKdmxhbiBpbXBsZW1lbnRhdGlvbi4KClN1Z2dlc3RlZC1ieTogSmlyaSBQaXJr
byA8amlyaUByZXNudWxsaS51cz4KU2lnbmVkLW9mZi1ieTogWXVlSGFpYmluZyA8eXVlaGFpYmlu
Z0BodWF3ZWkuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVt
bG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQvdGVhbS90ZWFtLmMgfCAyICstCiAxIGZpbGUgY2hh
bmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L25ldC90ZWFtL3RlYW0uYyBiL2RyaXZlcnMvbmV0L3RlYW0vdGVhbS5jCmluZGV4IDE2OTYzZjdh
ODhmNy4uMzUxZjI1ZTFmYzQ4IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC90ZWFtL3RlYW0uYwor
KysgYi9kcml2ZXJzL25ldC90ZWFtL3RlYW0uYwpAQCAtMjEzNSwxMiArMjEzNSwxMiBAQCBzdGF0
aWMgdm9pZCB0ZWFtX3NldHVwKHN0cnVjdCBuZXRfZGV2aWNlICpkZXYpCiAJZGV2LT5mZWF0dXJl
cyB8PSBORVRJRl9GX05FVE5TX0xPQ0FMOwogCiAJZGV2LT5od19mZWF0dXJlcyA9IFRFQU1fVkxB
Tl9GRUFUVVJFUyB8Ci0JCQkgICBORVRJRl9GX0hXX1ZMQU5fQ1RBR19UWCB8CiAJCQkgICBORVRJ
Rl9GX0hXX1ZMQU5fQ1RBR19SWCB8CiAJCQkgICBORVRJRl9GX0hXX1ZMQU5fQ1RBR19GSUxURVI7
CiAKIAlkZXYtPmh3X2ZlYXR1cmVzIHw9IE5FVElGX0ZfR1NPX0VOQ0FQX0FMTCB8IE5FVElGX0Zf
R1NPX1VEUF9MNDsKIAlkZXYtPmZlYXR1cmVzIHw9IGRldi0+aHdfZmVhdHVyZXM7CisJZGV2LT5m
ZWF0dXJlcyB8PSBORVRJRl9GX0hXX1ZMQU5fQ1RBR19UWCB8IE5FVElGX0ZfSFdfVkxBTl9TVEFH
X1RYOwogfQogCiBzdGF0aWMgaW50IHRlYW1fbmV3bGluayhzdHJ1Y3QgbmV0ICpzcmNfbmV0LCBz
dHJ1Y3QgbmV0X2RldmljZSAqZGV2LAotLSAKMi4yMC4xCgoKRnJvbSBiNWU3M2U0NWU4MDY2M2Yw
YzdiYzAxMTk4NTA0NDU2NGUyZGNlOThjIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBY
aW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkRhdGU6IFRodSwgMjAgSnVuIDIwMTkgMTg6
Mzk6MjggKzA4MDAKU3ViamVjdDogW1BBVENIIDEyLzE1XSB0aXBjOiBjaGFuZ2UgdG8gdXNlIHJl
Z2lzdGVyX3Blcm5ldF9kZXZpY2UKClsgVXBzdHJlYW0gY29tbWl0IGM0OTJkNGM3NGRkM2Y4NzU1
OTg4M2ZmYTBmOTRhOGYxYWUzZmU1ZjUgXQoKVGhpcyBwYXRjaCBpcyB0byBmaXggYSBkc3QgZGVm
Y250IGxlYWssIHdoaWNoIGNhbiBiZSByZXByb2R1Y2VkIGJ5IGRvaW5nOgoKICAjIGlwIG5ldCBh
IGM7IGlwIG5ldCBhIHM7IG1vZHByb2JlIHRpcGMKICAjIGlwIG5ldCBlIHMgaXAgbCBhIG4gZXRo
MSB0eXBlIHZldGggcGVlciBuIGV0aDEgbmV0bnMgYwogICMgaXAgbmV0IGUgYyBpcCBsIHMgbG8g
dXA7IGlwIG5ldCBlIGMgaXAgbCBzIGV0aDEgdXAKICAjIGlwIG5ldCBlIHMgaXAgbCBzIGxvIHVw
OyBpcCBuZXQgZSBzIGlwIGwgcyBldGgxIHVwCiAgIyBpcCBuZXQgZSBjIGlwIGEgYSAxLjEuMS4y
LzggZGV2IGV0aDEKICAjIGlwIG5ldCBlIHMgaXAgYSBhIDEuMS4xLjEvOCBkZXYgZXRoMQogICMg
aXAgbmV0IGUgYyB0aXBjIGIgZSBtIHVkcCBuIHUxIGxvY2FsaXAgMS4xLjEuMgogICMgaXAgbmV0
IGUgcyB0aXBjIGIgZSBtIHVkcCBuIHUxIGxvY2FsaXAgMS4xLjEuMQogICMgaXAgbmV0IGQgYzsg
aXAgbmV0IGQgczsgcm1tb2QgdGlwYwoKYW5kIGl0IHdpbGwgZ2V0IHN0dWNrIGFuZCBrZWVwIGxv
Z2dpbmcgdGhlIGVycm9yOgoKICB1bnJlZ2lzdGVyX25ldGRldmljZTogd2FpdGluZyBmb3IgbG8g
dG8gYmVjb21lIGZyZWUuIFVzYWdlIGNvdW50ID0gMQoKVGhlIGNhdXNlIGlzIHRoYXQgYSBkc3Qg
aXMgaGVsZCBieSB0aGUgdWRwIHNvY2sncyBza19yeF9kc3Qgc2V0IG9uIHVkcCByeApwYXRoIHdp
dGggdWRwX2Vhcmx5X2RlbXV4ID09IDEsIGFuZCB0aGlzIGRzdCAoZXZlbnR1YWxseSBob2xkaW5n
IGxvIGRldikKY2FuJ3QgYmUgcmVsZWFzZWQgYXMgYmVhcmVyJ3MgcmVtb3ZhbCBpbiB0aXBjIHBl
cm5ldCAuZXhpdCBoYXBwZW5zIGFmdGVyCmxvIGRldidzIHJlbW92YWwsIGRlZmF1bHRfZGV2aWNl
IHBlcm5ldCAuZXhpdC4KCiAiVGhlcmUgYXJlIHR3byBkaXN0aW5jdCB0eXBlcyBvZiBwZXJuZXRf
b3BlcmF0aW9ucyByZWNvZ25pemVkOiBzdWJzeXMgYW5kCiAgZGV2aWNlLiAgQXQgY3JlYXRpb24g
YWxsIHN1YnN5cyBpbml0IGZ1bmN0aW9ucyBhcmUgY2FsbGVkIGJlZm9yZSBkZXZpY2UKICBpbml0
IGZ1bmN0aW9ucywgYW5kIGF0IGRlc3RydWN0aW9uIGFsbCBkZXZpY2UgZXhpdCBmdW5jdGlvbnMg
YXJlIGNhbGxlZAogIGJlZm9yZSBzdWJzeXMgZXhpdCBmdW5jdGlvbi4iCgpTbyBieSBjYWxsaW5n
IHJlZ2lzdGVyX3Blcm5ldF9kZXZpY2UgaW5zdGVhZCB0byByZWdpc3RlciB0aXBjX25ldF9vcHMs
IHRoZQpwZXJuZXQgLmV4aXQoKSB3aWxsIGJlIGludm9rZWQgZWFybGllciB0aGFuIGxvb3BiYWNr
IGRldidzIHJlbW92YWwgd2hlbiBhCm5ldG5zIGlzIGJlaW5nIGRlc3Ryb3llZCwgYXMgZm91L2d1
ZSBkb2VzLgoKTm90ZSB0aGF0IHZ4bGFuIGFuZCBnZW5ldmUgdWRwIHR1bm5lbHMgZG9uJ3QgaGF2
ZSB0aGlzIGlzc3VlLCBhcyB0aGUgdWRwCnNvY2sgaXMgcmVsZWFzZWQgaW4gdGhlaXIgZGV2aWNl
IG5kb19zdG9wKCkuCgpUaGlzIGZpeCBpcyBhbHNvIG5lY2Vzc2FyeSBmb3IgdGlwYyBkc3RfY2Fj
aGUsIHdoaWNoIHdpbGwgaG9sZCBkc3RzIG9uIHR4CnBhdGggYW5kIEkgd2lsbCBpbnRyb2R1Y2Ug
aW4gbXkgbmV4dCBwYXRjaC4KClJlcG9ydGVkLWJ5OiBMaSBTaHVhbmcgPHNodWFsaUByZWRoYXQu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkFja2Vk
LWJ5OiBKb24gTWFsb3kgPGpvbi5tYWxveUBlcmljc3Nvbi5jb20+ClNpZ25lZC1vZmYtYnk6IERh
dmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQvdGlwYy9jb3JlLmMg
fCAxMiArKysrKystLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA2IGluc2VydGlvbnMoKyksIDYgZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3RpcGMvY29yZS5jIGIvbmV0L3RpcGMvY29yZS5j
CmluZGV4IDNlY2NhM2I4OGJmOC4uZWIwZjcwMWY5YmYxIDEwMDY0NAotLS0gYS9uZXQvdGlwYy9j
b3JlLmMKKysrIGIvbmV0L3RpcGMvY29yZS5jCkBAIC0xMzIsNyArMTMyLDcgQEAgc3RhdGljIGlu
dCBfX2luaXQgdGlwY19pbml0KHZvaWQpCiAJaWYgKGVycikKIAkJZ290byBvdXRfc3lzY3RsOwog
Ci0JZXJyID0gcmVnaXN0ZXJfcGVybmV0X3N1YnN5cygmdGlwY19uZXRfb3BzKTsKKwllcnIgPSBy
ZWdpc3Rlcl9wZXJuZXRfZGV2aWNlKCZ0aXBjX25ldF9vcHMpOwogCWlmIChlcnIpCiAJCWdvdG8g
b3V0X3Blcm5ldDsKIApAQCAtMTQwLDcgKzE0MCw3IEBAIHN0YXRpYyBpbnQgX19pbml0IHRpcGNf
aW5pdCh2b2lkKQogCWlmIChlcnIpCiAJCWdvdG8gb3V0X3NvY2tldDsKIAotCWVyciA9IHJlZ2lz
dGVyX3Blcm5ldF9zdWJzeXMoJnRpcGNfdG9wc3J2X25ldF9vcHMpOworCWVyciA9IHJlZ2lzdGVy
X3Blcm5ldF9kZXZpY2UoJnRpcGNfdG9wc3J2X25ldF9vcHMpOwogCWlmIChlcnIpCiAJCWdvdG8g
b3V0X3Blcm5ldF90b3BzcnY7CiAKQEAgLTE1MSwxMSArMTUxLDExIEBAIHN0YXRpYyBpbnQgX19p
bml0IHRpcGNfaW5pdCh2b2lkKQogCXByX2luZm8oIlN0YXJ0ZWQgaW4gc2luZ2xlIG5vZGUgbW9k
ZVxuIik7CiAJcmV0dXJuIDA7CiBvdXRfYmVhcmVyOgotCXVucmVnaXN0ZXJfcGVybmV0X3N1YnN5
cygmdGlwY190b3BzcnZfbmV0X29wcyk7CisJdW5yZWdpc3Rlcl9wZXJuZXRfZGV2aWNlKCZ0aXBj
X3RvcHNydl9uZXRfb3BzKTsKIG91dF9wZXJuZXRfdG9wc3J2OgogCXRpcGNfc29ja2V0X3N0b3Ao
KTsKIG91dF9zb2NrZXQ6Ci0JdW5yZWdpc3Rlcl9wZXJuZXRfc3Vic3lzKCZ0aXBjX25ldF9vcHMp
OworCXVucmVnaXN0ZXJfcGVybmV0X2RldmljZSgmdGlwY19uZXRfb3BzKTsKIG91dF9wZXJuZXQ6
CiAJdGlwY191bnJlZ2lzdGVyX3N5c2N0bCgpOwogb3V0X3N5c2N0bDoKQEAgLTE3MCw5ICsxNzAs
OSBAQCBzdGF0aWMgaW50IF9faW5pdCB0aXBjX2luaXQodm9pZCkKIHN0YXRpYyB2b2lkIF9fZXhp
dCB0aXBjX2V4aXQodm9pZCkKIHsKIAl0aXBjX2JlYXJlcl9jbGVhbnVwKCk7Ci0JdW5yZWdpc3Rl
cl9wZXJuZXRfc3Vic3lzKCZ0aXBjX3RvcHNydl9uZXRfb3BzKTsKKwl1bnJlZ2lzdGVyX3Blcm5l
dF9kZXZpY2UoJnRpcGNfdG9wc3J2X25ldF9vcHMpOwogCXRpcGNfc29ja2V0X3N0b3AoKTsKLQl1
bnJlZ2lzdGVyX3Blcm5ldF9zdWJzeXMoJnRpcGNfbmV0X29wcyk7CisJdW5yZWdpc3Rlcl9wZXJu
ZXRfZGV2aWNlKCZ0aXBjX25ldF9vcHMpOwogCXRpcGNfbmV0bGlua19zdG9wKCk7CiAJdGlwY19u
ZXRsaW5rX2NvbXBhdF9zdG9wKCk7CiAJdGlwY191bnJlZ2lzdGVyX3N5c2N0bCgpOwotLSAKMi4y
MC4xCgoKRnJvbSAxNjg4NjgyMDU3NzRhZjc1ODljYTcxYWU0NTg2YzI4ZGYzOWNhNWY5IE1vbiBT
ZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+
CkRhdGU6IFR1ZSwgMjUgSnVuIDIwMTkgMDA6Mjg6MTkgKzA4MDAKU3ViamVjdDogW1BBVENIIDEz
LzE1XSB0aXBjOiBjaGVjayBtc2ctPnJlcSBkYXRhIGxlbiBpbgogdGlwY19ubF9jb21wYXRfYmVh
cmVyX2Rpc2FibGUKClsgVXBzdHJlYW0gY29tbWl0IDRmMDdiODBjOTczMzQ4YTk5YjVkMmEzMjQ3
NmEyZTc4NzdlOTRhMDUgXQoKVGhpcyBwYXRjaCBpcyB0byBmaXggYW4gdW5pbml0LXZhbHVlIGlz
c3VlLCByZXBvcnRlZCBieSBzeXpib3Q6CgogIEJVRzogS01TQU46IHVuaW5pdC12YWx1ZSBpbiBt
ZW1jaHIrMHhjZS8weDExMCBsaWIvc3RyaW5nLmM6OTgxCiAgQ2FsbCBUcmFjZToKICAgIF9fZHVt
cF9zdGFjayBsaWIvZHVtcF9zdGFjay5jOjc3IFtpbmxpbmVdCiAgICBkdW1wX3N0YWNrKzB4MTkx
LzB4MWYwIGxpYi9kdW1wX3N0YWNrLmM6MTEzCiAgICBrbXNhbl9yZXBvcnQrMHgxMzAvMHgyYTAg
bW0va21zYW4va21zYW4uYzo2MjIKICAgIF9fbXNhbl93YXJuaW5nKzB4NzUvMHhlMCBtbS9rbXNh
bi9rbXNhbl9pbnN0ci5jOjMxMAogICAgbWVtY2hyKzB4Y2UvMHgxMTAgbGliL3N0cmluZy5jOjk4
MQogICAgc3RyaW5nX2lzX3ZhbGlkIG5ldC90aXBjL25ldGxpbmtfY29tcGF0LmM6MTc2IFtpbmxp
bmVdCiAgICB0aXBjX25sX2NvbXBhdF9iZWFyZXJfZGlzYWJsZSsweDJhMS8weDQ4MCBuZXQvdGlw
Yy9uZXRsaW5rX2NvbXBhdC5jOjQ0OQogICAgX190aXBjX25sX2NvbXBhdF9kb2l0IG5ldC90aXBj
L25ldGxpbmtfY29tcGF0LmM6MzI3IFtpbmxpbmVdCiAgICB0aXBjX25sX2NvbXBhdF9kb2l0KzB4
M2FjLzB4YjAwIG5ldC90aXBjL25ldGxpbmtfY29tcGF0LmM6MzYwCiAgICB0aXBjX25sX2NvbXBh
dF9oYW5kbGUgbmV0L3RpcGMvbmV0bGlua19jb21wYXQuYzoxMTc4IFtpbmxpbmVdCiAgICB0aXBj
X25sX2NvbXBhdF9yZWN2KzB4MWIxYi8weDI3YjAgbmV0L3RpcGMvbmV0bGlua19jb21wYXQuYzox
MjgxCgpUTFZfR0VUX0RBVEFfTEVOKCkgbWF5IHJldHVybiBhIG5lZ3RpdmUgaW50IHZhbHVlLCB3
aGljaCB3aWxsIGJlCnVzZWQgYXMgc2l6ZV90IChiZWNvbWluZyBhIGJpZyB1bnNpZ25lZCBsb25n
KSBwYXNzZWQgaW50byBtZW1jaHIsCmNhdXNlIHRoaXMgaXNzdWUuCgpTaW1pbGFyIHRvIHdoYXQg
aXQgZG9lcyBpbiB0aXBjX25sX2NvbXBhdF9iZWFyZXJfZW5hYmxlKCksIHRoaXMKZml4IGlzIHRv
IHJldHVybiAtRUlOVkFMIHdoZW4gVExWX0dFVF9EQVRBX0xFTigpIGlzIG5lZ3RpdmUgaW4KdGlw
Y19ubF9jb21wYXRfYmVhcmVyX2Rpc2FibGUoKSwgYXMgd2VsbCBhcyBpbgp0aXBjX25sX2NvbXBh
dF9saW5rX3N0YXRfZHVtcCgpIGFuZCB0aXBjX25sX2NvbXBhdF9saW5rX3Jlc2V0X3N0YXRzKCku
Cgp2MS0+djI6CiAgLSBhZGQgdGhlIG1pc3NpbmcgRml4ZXMgdGFncyBwZXIgRXJpYydzIHJlcXVl
c3QuCgpGaXhlczogMDc2MjIxNmMwYWQyICgidGlwYzogZml4IHVuaW5pdC12YWx1ZSBpbiB0aXBj
X25sX2NvbXBhdF9iZWFyZXJfZW5hYmxlIikKRml4ZXM6IDhiNjZmZWU3ZjhlZSAoInRpcGM6IGZp
eCB1bmluaXQtdmFsdWUgaW4gdGlwY19ubF9jb21wYXRfbGlua19yZXNldF9zdGF0cyIpClJlcG9y
dGVkLWJ5OiBzeXpib3QrMzBlYWE4YmYzOTJmN2ZhZmZmYWZAc3l6a2FsbGVyLmFwcHNwb3RtYWls
LmNvbQpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+ClNpZ25l
ZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQv
dGlwYy9uZXRsaW5rX2NvbXBhdC5jIHwgMTggKysrKysrKysrKysrKysrLS0tCiAxIGZpbGUgY2hh
bmdlZCwgMTUgaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQv
dGlwYy9uZXRsaW5rX2NvbXBhdC5jIGIvbmV0L3RpcGMvbmV0bGlua19jb21wYXQuYwppbmRleCAz
NDBhNmU3YzQzYTcuLjg4MzZhZWJkNjE4MCAxMDA2NDQKLS0tIGEvbmV0L3RpcGMvbmV0bGlua19j
b21wYXQuYworKysgYi9uZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jCkBAIC00NDUsNyArNDQ1LDEx
IEBAIHN0YXRpYyBpbnQgdGlwY19ubF9jb21wYXRfYmVhcmVyX2Rpc2FibGUoc3RydWN0IHRpcGNf
bmxfY29tcGF0X2NtZF9kb2l0ICpjbWQsCiAJaWYgKCFiZWFyZXIpCiAJCXJldHVybiAtRU1TR1NJ
WkU7CiAKLQlsZW4gPSBtaW5fdChpbnQsIFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpLCBUSVBD
X01BWF9CRUFSRVJfTkFNRSk7CisJbGVuID0gVExWX0dFVF9EQVRBX0xFTihtc2ctPnJlcSk7CisJ
aWYgKGxlbiA8PSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWxlbiA9IG1pbl90KGludCwgbGVu
LCBUSVBDX01BWF9CRUFSRVJfTkFNRSk7CiAJaWYgKCFzdHJpbmdfaXNfdmFsaWQobmFtZSwgbGVu
KSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKQEAgLTUzNyw3ICs1NDEsMTEgQEAgc3RhdGljIGludCB0
aXBjX25sX2NvbXBhdF9saW5rX3N0YXRfZHVtcChzdHJ1Y3QgdGlwY19ubF9jb21wYXRfbXNnICpt
c2csCiAKIAluYW1lID0gKGNoYXIgKilUTFZfREFUQShtc2ctPnJlcSk7CiAKLQlsZW4gPSBtaW5f
dChpbnQsIFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpLCBUSVBDX01BWF9MSU5LX05BTUUpOwor
CWxlbiA9IFRMVl9HRVRfREFUQV9MRU4obXNnLT5yZXEpOworCWlmIChsZW4gPD0gMCkKKwkJcmV0
dXJuIC1FSU5WQUw7CisKKwlsZW4gPSBtaW5fdChpbnQsIGxlbiwgVElQQ19NQVhfQkVBUkVSX05B
TUUpOwogCWlmICghc3RyaW5nX2lzX3ZhbGlkKG5hbWUsIGxlbikpCiAJCXJldHVybiAtRUlOVkFM
OwogCkBAIC04MTUsNyArODIzLDExIEBAIHN0YXRpYyBpbnQgdGlwY19ubF9jb21wYXRfbGlua19y
ZXNldF9zdGF0cyhzdHJ1Y3QgdGlwY19ubF9jb21wYXRfY21kX2RvaXQgKmNtZCwKIAlpZiAoIWxp
bmspCiAJCXJldHVybiAtRU1TR1NJWkU7CiAKLQlsZW4gPSBtaW5fdChpbnQsIFRMVl9HRVRfREFU
QV9MRU4obXNnLT5yZXEpLCBUSVBDX01BWF9MSU5LX05BTUUpOworCWxlbiA9IFRMVl9HRVRfREFU
QV9MRU4obXNnLT5yZXEpOworCWlmIChsZW4gPD0gMCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwls
ZW4gPSBtaW5fdChpbnQsIGxlbiwgVElQQ19NQVhfQkVBUkVSX05BTUUpOwogCWlmICghc3RyaW5n
X2lzX3ZhbGlkKG5hbWUsIGxlbikpCiAJCXJldHVybiAtRUlOVkFMOwogCi0tIAoyLjIwLjEKCgpG
cm9tIGFlM2I2MmE3OTZjNmMxZGRjMDMxYzk1M2I5ZGMwMGIxNzM2NmUxODggTW9uIFNlcCAxNyAw
MDowMDowMCAyMDAxCkZyb206IEZlaSBMaSA8bGlmZWkuc2hpcmxleUBieXRlZGFuY2UuY29tPgpE
YXRlOiBNb24sIDE3IEp1biAyMDE5IDIxOjI2OjM2ICswODAwClN1YmplY3Q6IFtQQVRDSCAxNC8x
NV0gdHVuOiB3YWtlIHVwIHdhaXRxdWV1ZXMgYWZ0ZXIgSUZGX1VQIGlzIHNldAoKWyBVcHN0cmVh
bSBjb21taXQgNzJiMzE5ZGMwOGI0OTI0YTI5ZjVlMjU2MGVmNmQ5NjZmYTU0YzQyOSBdCgpDdXJy
ZW50bHkgYWZ0ZXIgc2V0dGluZyB0YXAwIGxpbmsgdXAsIHRoZSB0dW4gY29kZSB3YWtlcyB0eC9y
eCB3YWl0ZWQKcXVldWVzIHVwIGluIHR1bl9uZXRfb3BlbigpIHdoZW4gLm5kb19vcGVuKCkgaXMg
Y2FsbGVkLCBob3dldmVyIHRoZQpJRkZfVVAgZmxhZyBoYXMgbm90IGJlZW4gc2V0IHlldC4gSWYg
dGhlcmUncyBhbHJlYWR5IGEgd2FpdCBxdWV1ZSwgaXQKd291bGQgZmFpbCB0byB0cmFuc21pdCB3
aGVuIGNoZWNraW5nIHRoZSBJRkZfVVAgZmxhZyBpbiB0dW5fc2VuZG1zZygpLgpUaGVuIHRoZSBz
YXZpbmcgdmhvc3RfcG9sbF9zdGFydCgpIHdpbGwgYWRkIHRoZSB3cSBpbnRvIHdxaCB1bnRpbCBp
dAppcyB3YWtlbiB1cCBhZ2Fpbi4gQWx0aG91Z2ggdGhpcyB3b3JrcyB3aGVuIElGRl9VUCBmbGFn
IGhhcyBiZWVuIHNldAp3aGVuIHR1bl9jaHJfcG9sbCBkZXRlY3RzOyB0aGlzIGlzIG5vdCB0cnVl
IGlmIElGRl9VUCBmbGFnIGhhcyBub3QKYmVlbiBzZXQgYXQgdGhhdCB0aW1lLiBTYWRseSB0aGUg
bGF0dGVyIGNhc2UgaXMgYSBmYXRhbCBlcnJvciwgYXMKdGhlIHdxIHdpbGwgbmV2ZXIgYmUgd2Fr
ZW4gdXAgaW4gZnV0dXJlIHVubGVzcyBsYXRlciBtYW51YWxseQpzZXR0aW5nIGxpbmsgdXAgb24g
cHVycG9zZS4KCkZpeCB0aGlzIGJ5IG1vdmluZyB0aGUgd2FrZXVwIHByb2Nlc3MgaW50byB0aGUg
TkVUREVWX1VQIGV2ZW50Cm5vdGlmeWluZyBwcm9jZXNzLCB0aGlzIG1ha2VzIHN1cmUgSUZGX1VQ
IGhhcyBiZWVuIHNldCBiZWZvcmUgYWxsCndhaXRlZCBxdWV1ZXMgYmVlbiB3YWtlbiB1cC4KClNp
Z25lZC1vZmYtYnk6IEZlaSBMaSA8bGlmZWkuc2hpcmxleUBieXRlZGFuY2UuY29tPgpBY2tlZC1i
eTogSmFzb24gV2FuZyA8amFzb3dhbmdAcmVkaGF0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQg
Uy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L3R1bi5jIHwg
MTkgKysrKysrKysrLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDkgaW5zZXJ0aW9ucygrKSwg
MTAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvdHVuLmMgYi9kcml2ZXJz
L25ldC90dW4uYwppbmRleCBmNGM5MzNhYzZlZGYuLmQxY2FmYjI5ZWNhOSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9uZXQvdHVuLmMKKysrIGIvZHJpdmVycy9uZXQvdHVuLmMKQEAgLTEwMjQsMTggKzEw
MjQsOCBAQCBzdGF0aWMgdm9pZCB0dW5fbmV0X3VuaW5pdChzdHJ1Y3QgbmV0X2RldmljZSAqZGV2
KQogLyogTmV0IGRldmljZSBvcGVuLiAqLwogc3RhdGljIGludCB0dW5fbmV0X29wZW4oc3RydWN0
IG5ldF9kZXZpY2UgKmRldikKIHsKLQlzdHJ1Y3QgdHVuX3N0cnVjdCAqdHVuID0gbmV0ZGV2X3By
aXYoZGV2KTsKLQlpbnQgaTsKLQogCW5ldGlmX3R4X3N0YXJ0X2FsbF9xdWV1ZXMoZGV2KTsKIAot
CWZvciAoaSA9IDA7IGkgPCB0dW4tPm51bXF1ZXVlczsgaSsrKSB7Ci0JCXN0cnVjdCB0dW5fZmls
ZSAqdGZpbGU7Ci0KLQkJdGZpbGUgPSBydG5sX2RlcmVmZXJlbmNlKHR1bi0+dGZpbGVzW2ldKTsK
LQkJdGZpbGUtPnNvY2tldC5zay0+c2tfd3JpdGVfc3BhY2UodGZpbGUtPnNvY2tldC5zayk7Ci0J
fQotCiAJcmV0dXJuIDA7CiB9CiAKQEAgLTM2MzYsNiArMzYyNiw3IEBAIHN0YXRpYyBpbnQgdHVu
X2RldmljZV9ldmVudChzdHJ1Y3Qgbm90aWZpZXJfYmxvY2sgKnVudXNlZCwKIHsKIAlzdHJ1Y3Qg
bmV0X2RldmljZSAqZGV2ID0gbmV0ZGV2X25vdGlmaWVyX2luZm9fdG9fZGV2KHB0cik7CiAJc3Ry
dWN0IHR1bl9zdHJ1Y3QgKnR1biA9IG5ldGRldl9wcml2KGRldik7CisJaW50IGk7CiAKIAlpZiAo
ZGV2LT5ydG5sX2xpbmtfb3BzICE9ICZ0dW5fbGlua19vcHMpCiAJCXJldHVybiBOT1RJRllfRE9O
RTsKQEAgLTM2NDUsNiArMzYzNiwxNCBAQCBzdGF0aWMgaW50IHR1bl9kZXZpY2VfZXZlbnQoc3Ry
dWN0IG5vdGlmaWVyX2Jsb2NrICp1bnVzZWQsCiAJCWlmICh0dW5fcXVldWVfcmVzaXplKHR1bikp
CiAJCQlyZXR1cm4gTk9USUZZX0JBRDsKIAkJYnJlYWs7CisJY2FzZSBORVRERVZfVVA6CisJCWZv
ciAoaSA9IDA7IGkgPCB0dW4tPm51bXF1ZXVlczsgaSsrKSB7CisJCQlzdHJ1Y3QgdHVuX2ZpbGUg
KnRmaWxlOworCisJCQl0ZmlsZSA9IHJ0bmxfZGVyZWZlcmVuY2UodHVuLT50ZmlsZXNbaV0pOwor
CQkJdGZpbGUtPnNvY2tldC5zay0+c2tfd3JpdGVfc3BhY2UodGZpbGUtPnNvY2tldC5zayk7CisJ
CX0KKwkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJYnJlYWs7CiAJfQotLSAKMi4yMC4xCgoKRnJvbSA4
NGVhZGRhYjllMzBiMTVmZjM3NGUxY2M3N2Q3YzdiZTBiMWQ5ZDQ5IE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBEbWl0cnkgQm9nZGFub3YgPGRtaXRyeS5ib2dkYW5vdkBhcXVhbnRpYS5j
b20+CkRhdGU6IFNhdCwgMjIgSnVuIDIwMTkgMDg6NDY6MzcgKzAwMDAKU3ViamVjdDogW1BBVENI
IDE1LzE1XSBuZXQ6IGFxdWFudGlhOiBmaXggdmxhbnMgbm90IHdvcmtpbmcgb3ZlciBicmlkZ2Vk
CiBuZXR3b3JrCgpbIFVwc3RyZWFtIGNvbW1pdCA0OGRkNzNkMDhkNGRkYTQ3ZWUzMWNjODYxMWZi
MTY4NDBmYzE2ODAzIF0KCkluIGNvbmZpZ3VyYXRpb24gb2YgdmxhbiBvdmVyIGJyaWRnZSBvdmVy
IGFxdWFudGlhIGRldmljZQppdCB3YXMgZm91bmQgdGhhdCB2bGFuIHRhZ2dlZCB0cmFmZmljIGlz
IGRyb3BwZWQgb24gY2hpcC4KClRoZSByZWFzb24gaXMgdGhhdCBicmlkZ2UgZGV2aWNlIGVuYWJs
ZXMgcHJvbWlzYyBtb2RlLApidXQgaW4gYXRsYW50aWMgY2hpcCB2bGFuIGZpbHRlcnMgd2lsbCBz
dGlsbCBhcHBseS4KU28gd2UgaGF2ZSB0byBjb3JlbGxhdGUgcHJvbWlzYyBzZXR0aW5ncyB3aXRo
IHZsYW4gY29uZmlndXJhdGlvbi4KClRoZSBzb2x1dGlvbiBpcyB0byB0cmFjayBpbiBhIHNlcGFy
YXRlIHN0YXRlIHZhcmlhYmxlIHRoZQpuZWVkIG9mIHZsYW4gZm9yY2VkIHByb21pc2MuIEFuZCBh
bHNvIGNvbnNpZGVyIGdlbmVyaWMKcHJvbWlzYyBjb25maWd1cmF0aW9uIHdoZW4gZG9pbmcgdmxh
biBmaWx0ZXIgY29uZmlnLgoKRml4ZXM6IDc5NzVkMmFmZjVhZiAoIm5ldDogYXF1YW50aWE6IGFk
ZCBzdXBwb3J0IG9mIHJ4LXZsYW4tZmlsdGVyIG9mZmxvYWQiKQpTaWduZWQtb2ZmLWJ5OiBEbWl0
cnkgQm9nZGFub3YgPGRtaXRyeS5ib2dkYW5vdkBhcXVhbnRpYS5jb20+ClNpZ25lZC1vZmYtYnk6
IElnb3IgUnVzc2tpa2ggPGlnb3IucnVzc2tpa2hAYXF1YW50aWEuY29tPgpTaWduZWQtb2ZmLWJ5
OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogLi4uL2V0aGVybmV0
L2FxdWFudGlhL2F0bGFudGljL2FxX2ZpbHRlcnMuYyAgIHwgMTAgKysrKysrKystLQogLi4uL25l
dC9ldGhlcm5ldC9hcXVhbnRpYS9hdGxhbnRpYy9hcV9uaWMuYyAgIHwgIDEgKwogLi4uL25ldC9l
dGhlcm5ldC9hcXVhbnRpYS9hdGxhbnRpYy9hcV9uaWMuaCAgIHwgIDEgKwogLi4uL2FxdWFudGlh
L2F0bGFudGljL2h3X2F0bC9od19hdGxfYjAuYyAgICAgIHwgMTkgKysrKysrKysrKysrKy0tLS0t
LQogNCBmaWxlcyBjaGFuZ2VkLCAyMyBpbnNlcnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFudGljL2FxX2ZpbHRl
cnMuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFudGljL2FxX2ZpbHRlcnMu
YwppbmRleCAxOGJjMDM1ZGE4NTAuLjFmZmY0NjJhNDE3NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvYXF1YW50aWEvYXRsYW50aWMvYXFfZmlsdGVycy5jCisrKyBiL2RyaXZlcnMv
bmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFudGljL2FxX2ZpbHRlcnMuYwpAQCAtODQzLDkgKzg0
MywxNCBAQCBpbnQgYXFfZmlsdGVyc192bGFuc191cGRhdGUoc3RydWN0IGFxX25pY19zICphcV9u
aWMpCiAJCXJldHVybiBlcnI7CiAKIAlpZiAoYXFfbmljLT5uZGV2LT5mZWF0dXJlcyAmIE5FVElG
X0ZfSFdfVkxBTl9DVEFHX0ZJTFRFUikgewotCQlpZiAoaHdlaWdodCA8IEFRX1ZMQU5fTUFYX0ZJ
TFRFUlMpCi0JCQllcnIgPSBhcV9od19vcHMtPmh3X2ZpbHRlcl92bGFuX2N0cmwoYXFfaHcsIHRy
dWUpOworCQlpZiAoaHdlaWdodCA8IEFRX1ZMQU5fTUFYX0ZJTFRFUlMgJiYgaHdlaWdodCA+IDAp
IHsKKwkJCWVyciA9IGFxX2h3X29wcy0+aHdfZmlsdGVyX3ZsYW5fY3RybChhcV9odywKKwkJCQkh
KGFxX25pYy0+cGFja2V0X2ZpbHRlciAmIElGRl9QUk9NSVNDKSk7CisJCQlhcV9uaWMtPmFxX25p
Y19jZmcuaXNfdmxhbl9mb3JjZV9wcm9taXNjID0gZmFsc2U7CisJCX0gZWxzZSB7CiAJCS8qIG90
aGVyd2lzZSBsZWZ0IGluIHByb21pc2N1ZSBtb2RlICovCisJCQlhcV9uaWMtPmFxX25pY19jZmcu
aXNfdmxhbl9mb3JjZV9wcm9taXNjID0gdHJ1ZTsKKwkJfQogCX0KIAogCXJldHVybiBlcnI7CkBA
IC04NjYsNiArODcxLDcgQEAgaW50IGFxX2ZpbHRlcnNfdmxhbl9vZmZsb2FkX29mZihzdHJ1Y3Qg
YXFfbmljX3MgKmFxX25pYykKIAlpZiAodW5saWtlbHkoIWFxX2h3X29wcy0+aHdfZmlsdGVyX3Zs
YW5fY3RybCkpCiAJCXJldHVybiAtRU9QTk9UU1VQUDsKIAorCWFxX25pYy0+YXFfbmljX2NmZy5p
c192bGFuX2ZvcmNlX3Byb21pc2MgPSB0cnVlOwogCWVyciA9IGFxX2h3X29wcy0+aHdfZmlsdGVy
X3ZsYW5fY3RybChhcV9odywgZmFsc2UpOwogCWlmIChlcnIpCiAJCXJldHVybiBlcnI7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9hcXVhbnRpYS9hdGxhbnRpYy9hcV9uaWMuYyBi
L2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFudGljL2FxX25pYy5jCmluZGV4IGZm
ODM2Njc0MTBiZC4uNTUwYWJmZTY5NzNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5l
dC9hcXVhbnRpYS9hdGxhbnRpYy9hcV9uaWMuYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9h
cXVhbnRpYS9hdGxhbnRpYy9hcV9uaWMuYwpAQCAtMTE3LDYgKzExNyw3IEBAIHZvaWQgYXFfbmlj
X2NmZ19zdGFydChzdHJ1Y3QgYXFfbmljX3MgKnNlbGYpCiAKIAljZmctPmxpbmtfc3BlZWRfbXNr
ICY9IGNmZy0+YXFfaHdfY2Fwcy0+bGlua19zcGVlZF9tc2s7CiAJY2ZnLT5mZWF0dXJlcyA9IGNm
Zy0+YXFfaHdfY2Fwcy0+aHdfZmVhdHVyZXM7CisJY2ZnLT5pc192bGFuX2ZvcmNlX3Byb21pc2Mg
PSB0cnVlOwogfQogCiBzdGF0aWMgaW50IGFxX25pY191cGRhdGVfbGlua19zdGF0dXMoc3RydWN0
IGFxX25pY19zICpzZWxmKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYXF1YW50
aWEvYXRsYW50aWMvYXFfbmljLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9hcXVhbnRpYS9hdGxh
bnRpYy9hcV9uaWMuaAppbmRleCA4ZTM0YzFlNDliZjIuLjY1ZTY4MWJlOWI1ZCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYXF1YW50aWEvYXRsYW50aWMvYXFfbmljLmgKKysrIGIv
ZHJpdmVycy9uZXQvZXRoZXJuZXQvYXF1YW50aWEvYXRsYW50aWMvYXFfbmljLmgKQEAgLTM2LDYg
KzM2LDcgQEAgc3RydWN0IGFxX25pY19jZmdfcyB7CiAJdTMyIGZsb3dfY29udHJvbDsKIAl1MzIg
bGlua19zcGVlZF9tc2s7CiAJdTMyIHdvbDsKKwlib29sIGlzX3ZsYW5fZm9yY2VfcHJvbWlzYzsK
IAl1MTYgaXNfbWNfbGlzdF9lbmFibGVkOwogCXUxNiBtY19saXN0X2NvdW50OwogCWJvb2wgaXNf
YXV0b25lZzsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFu
dGljL2h3X2F0bC9od19hdGxfYjAuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0
bGFudGljL2h3X2F0bC9od19hdGxfYjAuYwppbmRleCBlYzMwMmZkZmVjNjMuLmE0Y2MwNDc0MTEx
NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYXF1YW50aWEvYXRsYW50aWMvaHdf
YXRsL2h3X2F0bF9iMC5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FxdWFudGlhL2F0bGFu
dGljL2h3X2F0bC9od19hdGxfYjAuYwpAQCAtNzcxLDggKzc3MSwxNSBAQCBzdGF0aWMgaW50IGh3
X2F0bF9iMF9od19wYWNrZXRfZmlsdGVyX3NldChzdHJ1Y3QgYXFfaHdfcyAqc2VsZiwKIAkJCQkJ
ICB1bnNpZ25lZCBpbnQgcGFja2V0X2ZpbHRlcikKIHsKIAl1bnNpZ25lZCBpbnQgaSA9IDBVOwor
CXN0cnVjdCBhcV9uaWNfY2ZnX3MgKmNmZyA9IHNlbGYtPmFxX25pY19jZmc7CisKKwlod19hdGxf
cnBmbDJwcm9taXNjdW91c19tb2RlX2VuX3NldChzZWxmLAorCQkJCQkgICAgSVNfRklMVEVSX0VO
QUJMRUQoSUZGX1BST01JU0MpKTsKKworCWh3X2F0bF9ycGZfdmxhbl9wcm9tX21vZGVfZW5fc2V0
KHNlbGYsCisJCQkJICAgICBJU19GSUxURVJfRU5BQkxFRChJRkZfUFJPTUlTQykgfHwKKwkJCQkg
ICAgIGNmZy0+aXNfdmxhbl9mb3JjZV9wcm9taXNjKTsKIAotCWh3X2F0bF9ycGZsMnByb21pc2N1
b3VzX21vZGVfZW5fc2V0KHNlbGYsIElTX0ZJTFRFUl9FTkFCTEVEKElGRl9QUk9NSVNDKSk7CiAJ
aHdfYXRsX3JwZmwybXVsdGljYXN0X2Zscl9lbl9zZXQoc2VsZiwKIAkJCQkJIElTX0ZJTFRFUl9F
TkFCTEVEKElGRl9BTExNVUxUSSksIDApOwogCkBAIC03ODEsMTMgKzc4OCwxMyBAQCBzdGF0aWMg
aW50IGh3X2F0bF9iMF9od19wYWNrZXRfZmlsdGVyX3NldChzdHJ1Y3QgYXFfaHdfcyAqc2VsZiwK
IAogCWh3X2F0bF9ycGZsMmJyb2FkY2FzdF9lbl9zZXQoc2VsZiwgSVNfRklMVEVSX0VOQUJMRUQo
SUZGX0JST0FEQ0FTVCkpOwogCi0Jc2VsZi0+YXFfbmljX2NmZy0+aXNfbWNfbGlzdF9lbmFibGVk
ID0gSVNfRklMVEVSX0VOQUJMRUQoSUZGX01VTFRJQ0FTVCk7CisJY2ZnLT5pc19tY19saXN0X2Vu
YWJsZWQgPSBJU19GSUxURVJfRU5BQkxFRChJRkZfTVVMVElDQVNUKTsKIAogCWZvciAoaSA9IEhX
X0FUTF9CMF9NQUNfTUlOOyBpIDwgSFdfQVRMX0IwX01BQ19NQVg7ICsraSkKIAkJaHdfYXRsX3Jw
ZmwyX3VjX2Zscl9lbl9zZXQoc2VsZiwKLQkJCQkJICAgKHNlbGYtPmFxX25pY19jZmctPmlzX21j
X2xpc3RfZW5hYmxlZCAmJgotCQkJCSAgICAoaSA8PSBzZWxmLT5hcV9uaWNfY2ZnLT5tY19saXN0
X2NvdW50KSkgPwotCQkJCSAgICAxVSA6IDBVLCBpKTsKKwkJCQkJICAgKGNmZy0+aXNfbWNfbGlz
dF9lbmFibGVkICYmCisJCQkJCSAgICAoaSA8PSBjZmctPm1jX2xpc3RfY291bnQpKSA/CisJCQkJ
CSAgIDFVIDogMFUsIGkpOwogCiAJcmV0dXJuIGFxX2h3X2Vycl9mcm9tX2ZsYWdzKHNlbGYpOwog
fQpAQCAtMTA3OSw3ICsxMDg2LDcgQEAgc3RhdGljIGludCBod19hdGxfYjBfaHdfdmxhbl9zZXQo
c3RydWN0IGFxX2h3X3MgKnNlbGYsCiBzdGF0aWMgaW50IGh3X2F0bF9iMF9od192bGFuX2N0cmwo
c3RydWN0IGFxX2h3X3MgKnNlbGYsIGJvb2wgZW5hYmxlKQogewogCS8qIHNldCBwcm9taXNjIGlu
IGNhc2Ugb2YgZGlzYWJpbmcgdGhlIHZsYW5kIGZpbHRlciAqLwotCWh3X2F0bF9ycGZfdmxhbl9w
cm9tX21vZGVfZW5fc2V0KHNlbGYsICEhIWVuYWJsZSk7CisJaHdfYXRsX3JwZl92bGFuX3Byb21f
bW9kZV9lbl9zZXQoc2VsZiwgIWVuYWJsZSk7CiAKIAlyZXR1cm4gYXFfaHdfZXJyX2Zyb21fZmxh
Z3Moc2VsZik7CiB9Ci0tIAoyLjIwLjEKCg==

----Next_Part(Mon_Jul__1_18_52_55_2019_799)----
