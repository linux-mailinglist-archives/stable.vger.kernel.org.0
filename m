Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id AA7961F5AE1
	for <lists+stable@lfdr.de>; Wed, 10 Jun 2020 19:58:29 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728121AbgFJR62 (ORCPT <rfc822;lists+stable@lfdr.de>);
        Wed, 10 Jun 2020 13:58:28 -0400
Received: from mailgw01.mediatek.com ([210.61.82.183]:55367 "EHLO
        mailgw01.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1726637AbgFJR62 (ORCPT
        <rfc822;stable@vger.kernel.org>); Wed, 10 Jun 2020 13:58:28 -0400
X-UUID: a74da2bba14e427483f10a67a0149b78-20200611
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mediatek.com; s=dk;
        h=MIME-Version:Content-Type:Date:To:From:Subject:Message-ID; bh=zHAlcur1oIN+6LCf9FwVpNyYYfpHjtWo+ELnHiJleVg=;
        b=hIT11amTHUaFZMMK1fQgRQNiPVxpcb5vN3Tbk4ngrmAWsRnjElMVHsOffWGpahRrp7zCilSi9OraCiN0zU40kSXGD0iMwkYqowNG31tt0ah6BNGUdUf3iiY3XTSSOxsSS2dAGCZzk9RrpLkxI9QTJzF9+eUzzekw9456P5g5IPM=;
X-UUID: a74da2bba14e427483f10a67a0149b78-20200611
Received: from mtkcas10.mediatek.inc [(172.21.101.39)] by mailgw01.mediatek.com
        (envelope-from <miles.chen@mediatek.com>)
        (Cellopoint E-mail Firewall v4.1.10 Build 0809 with TLS)
        with ESMTP id 1675297197; Thu, 11 Jun 2020 01:58:21 +0800
Received: from mtkcas08.mediatek.inc (172.21.101.126) by
 mtkmbs08n1.mediatek.inc (172.21.101.55) with Microsoft SMTP Server (TLS) id
 15.0.1497.2; Thu, 11 Jun 2020 01:58:16 +0800
Received: from [172.21.77.33] (172.21.77.33) by mtkcas08.mediatek.inc
 (172.21.101.73) with Microsoft SMTP Server id 15.0.1497.2 via Frontend
 Transport; Thu, 11 Jun 2020 01:58:16 +0800
Message-ID: <1591811900.26208.17.camel@mtkswgap22>
Subject: Suggest make 'user_access_begin()' do 'access_ok()' to stable kernel
From:   Miles Chen <miles.chen@mediatek.com>
To:     <stable@vger.kernel.org>
Date:   Thu, 11 Jun 2020 01:58:20 +0800
Content-Type: multipart/mixed; boundary="=-mcAE5rUqEqycHV/rZMLL"
X-Mailer: Evolution 3.2.3-0ubuntu6 
MIME-Version: 1.0
X-MTK:  N
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

--=-mcAE5rUqEqycHV/rZMLL
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: base64

SGksDQoNCkkgc3VnZ2VzdCB0byBpbmNsdWRlIHRoZSBjb21taXQ6IDU5NGNjMjUxZmRkMCBtYWtl
ICd1c2VyX2FjY2Vzc19iZWdpbigpJw0KZG8gJ2FjY2Vzc19vaygpJyBmb3IgQ1ZFLTIwMTgtMjA2
NjkuDQoNCnN0YWJsZSB2ZXJzaW9uIHRvIGFwcGx5IHRvOiBrZXJuZWwtNC4xNC55IGFuZCBrZXJu
ZWwtNC4xOS55Lg0KDQoNCkZyb20gdGhlIGRpc2N1c3Npb24gYmVsb3csIEkgY2hlY2tlZCB0aGUg
bGF0ZXN0IGtlcm5lbCBhbmQgZm91bmQgdGhhdCB3ZQ0Kc2hvdWxkIGFsc28gYXBwbHkgb3RoZXIg
NCBwYXRjaGVzLiAodG90YWwgNSBwYXRjaGVzKQ0KaHR0cHM6Ly9sa21sLm9yZy9sa21sLzIwMjAv
NS8xMi85NDMNCg0KDQpwYXRjaCBsaXN0Og0KY29tbWl0IGFiMTBhZTFjM2JlZiBsaWI6IFJlZHVj
ZSB1c2VyX2FjY2Vzc19iZWdpbigpIGJvdW5kYXJpZXMgaW4NCnN0cm5jcHlfZnJvbV91c2VyKCkg
YW5kIHN0cm5sZW5fdXNlcigpDQpjb21taXQgNmU2OTNiM2ZmZWNiIHg4NjogdWFjY2VzczogSW5o
aWJpdCBzcGVjdWxhdGlvbiBwYXN0IGFjY2Vzc19vaygpDQppbiB1c2VyX2FjY2Vzc19iZWdpbigp
DQpjb21taXQgOWNiMmZlYjRkMjFkIGFyY2gvb3BlbnJpc2M6IEZpeCBpc3N1ZXMgd2l0aCBhY2Nl
c3Nfb2soKQ0KY29tbWl0IDk0YmQ4YTA1Y2Q0ZCBGaXggJ2FjY2Nlc3Nfb2soKScgb24gYWxwaGEg
YW5kIFNIDQpjb21taXQgNTk0Y2MyNTFmZGQwIG1ha2UgJ3VzZXJfYWNjZXNzX2JlZ2luKCknIGRv
ICdhY2Nlc3Nfb2soKScNCg0KDQpXaGVyZSBvbmx5IGNvbW1pdCA2ZTY5M2IzZmZlY2IgZG9lcyBu
b3QgbmVlZCBiYWNrcG9ydCBtb2RpZmljYXRpb25zLg0KSSBhdHRhY2ggbXkgYmFja3BvcnQgcGF0
Y2hlcyBpbiB0aGlzIGVtYWlsLg0KDQpJIG1lcmdlZCB0aGUgcGF0Y2hlcyB3aXRoIGtlcm5lbC00
LjE5LjEyNyBhbmQga2VybmVsLTQuMTQuMTgzIHdpdGhvdXQNCmNvbmZsaWN0cy4NCkJ1aWxkIHdp
dGggYXJtNjQgZGVmY29uZmlnIGFuZCBib290dXAgb24gYXJtNjQgUUVNVSBlbnZpcm9ubWVudC4N
Cg0KY2hlZXJzLA0KTWlsZXMNCg==

--=-mcAE5rUqEqycHV/rZMLL
Content-Disposition: attachment;
	filename="0001-BACKPORT-make-user_access_begin-do-access_ok.patch"
Content-Type: text/x-patch;
	name="0001-BACKPORT-make-user_access_begin-do-access_ok.patch";
	charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSBhYzM1MWRlOWRkZDg2ZWY3MTdhM2Y4OTIzNmRjNWY2YjJhMTA4Y2M3IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQ0KRnJvbTogTGludXMgVG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5k
YXRpb24ub3JnPg0KRGF0ZTogRnJpLCA0IEphbiAyMDE5IDEyOjU2OjA5IC0wODAwDQpTdWJqZWN0
OiBbUEFUQ0hdIEJBQ0tQT1JUOiBtYWtlICd1c2VyX2FjY2Vzc19iZWdpbigpJyBkbyAnYWNjZXNz
X29rKCknDQoNCnVwc3RyZWFtIGNvbW1pdCA1OTRjYzI1MWZkZDAgKCJtYWtlICd1c2VyX2FjY2Vz
c19iZWdpbigpJyBkbyAnYWNjZXNzX29rKCknIikNCg0KT3JpZ2luYWxseSwgdGhlIHJ1bGUgdXNl
ZCB0byBiZSB0aGF0IHlvdSdkIGhhdmUgdG8gZG8gYWNjZXNzX29rKCkNCnNlcGFyYXRlbHksIGFu
ZCB0aGVuIHVzZXJfYWNjZXNzX2JlZ2luKCkgYmVmb3JlIGFjdHVhbGx5IGRvaW5nIHRoZQ0KZGly
ZWN0IChvcHRpbWl6ZWQpIHVzZXIgYWNjZXNzLg0KDQpCdXQgZXhwZXJpZW5jZSBoYXMgc2hvd24g
dGhhdCBwZW9wbGUgdGhlbiBkZWNpZGUgbm90IHRvIGRvIGFjY2Vzc19vaygpDQphdCBhbGwsIGFu
ZCBpbnN0ZWFkIHJlbHkgb24gaXQgYmVpbmcgaW1wbGllZCBieSBvdGhlciBvcGVyYXRpb25zIG9y
DQpzaW1pbGFyLiAgV2hpY2ggbWFrZXMgaXQgdmVyeSBoYXJkIHRvIHZlcmlmeSB0aGF0IHRoZSBh
Y2Nlc3MgaGFzDQphY3R1YWxseSBiZWVuIHJhbmdlLWNoZWNrZWQuDQoNCklmIHlvdSB1c2UgdGhl
IHVuc2FmZSBkaXJlY3QgdXNlciBhY2Nlc3NlcywgaGFyZHdhcmUgZmVhdHVyZXMgKGVpdGhlcg0K
U01BUCAtIFN1cGVydmlzb3IgTW9kZSBBY2Nlc3MgUHJvdGVjdGlvbiAtIG9uIHg4Niwgb3IgUEFO
IC0gUHJpdmlsZWdlZA0KQWNjZXNzIE5ldmVyIC0gb24gQVJNKSBkbyBmb3JjZSB5b3UgdG8gdXNl
IHVzZXJfYWNjZXNzX2JlZ2luKCkuICBCdXQNCm5vdGhpbmcgcmVhbGx5IGZvcmNlcyB0aGUgcmFu
Z2UgY2hlY2suDQoNCkJ5IHB1dHRpbmcgdGhlIHJhbmdlIGNoZWNrIGludG8gdXNlcl9hY2Nlc3Nf
YmVnaW4oKSwgd2UgYWN0dWFsbHkgZm9yY2UNCnBlb3BsZSB0byBkbyB0aGUgcmlnaHQgdGhpbmcg
KHRtKSwgYW5kIHRoZSByYW5nZSBjaGVjayB2aWxsIGJlIHZpc2libGUNCm5lYXIgdGhlIGFjdHVh
bCBhY2Nlc3Nlcy4gIFdlIGhhdmUgd2F5IHRvbyBsb25nIGEgaGlzdG9yeSBvZiBwZW9wbGUNCnRy
eWluZyB0byBhdm9pZCB0aGVtLg0KDQpCdWc6IDEzNTM2ODIyOA0KQ2hhbmdlLUlkOiBJNGNhMGU0
NTY2ZWEwODBmYTE0OGM1ZTc2OGJiMWEwYjZmNzIwMWMwMQ0KU2lnbmVkLW9mZi1ieTogTGludXMg
VG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5kYXRpb24ub3JnPg0KLS0tDQogYXJjaC94ODYv
aW5jbHVkZS9hc20vdWFjY2Vzcy5oICAgICAgICAgICAgIHwgMTIgKysrKysrKysrKystDQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXhlY2J1ZmZlci5jIHwgMTYgKysrKysrKysrKysr
KystLQ0KIGluY2x1ZGUvbGludXgvdWFjY2Vzcy5oICAgICAgICAgICAgICAgICAgICB8ICAyICst
DQoga2VybmVsL2NvbXBhdC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDYgKystLS0t
DQoga2VybmVsL2V4aXQuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDYgKystLS0t
DQogbGliL3N0cm5jcHlfZnJvbV91c2VyLmMgICAgICAgICAgICAgICAgICAgIHwgIDkgKysrKyst
LS0tDQogbGliL3N0cm5sZW5fdXNlci5jICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDkgKysr
KystLS0tDQogNyBmaWxlcyBjaGFuZ2VkLCA0MCBpbnNlcnRpb25zKCspLCAyMCBkZWxldGlvbnMo
LSkNCg0KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gv
eDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaA0KaW5kZXggNDExMWVkYjMxODhlLi40MTI4ZTZmZGZj
YzQgMTAwNjQ0DQotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmgNCisrKyBiL2Fy
Y2gveDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaA0KQEAgLTcwOSw3ICs3MDksMTcgQEAgZXh0ZXJu
IHN0cnVjdCBtb3ZzbF9tYXNrIHsNCiAgKiBjaGVja2luZyBiZWZvcmUgdXNpbmcgdGhlbSwgYnV0
IHlvdSBoYXZlIHRvIHN1cnJvdW5kIHRoZW0gd2l0aCB0aGUNCiAgKiB1c2VyX2FjY2Vzc19iZWdp
bi9lbmQoKSBwYWlyLg0KICAqLw0KLSNkZWZpbmUgdXNlcl9hY2Nlc3NfYmVnaW4oKQlfX3VhY2Nl
c3NfYmVnaW4oKQ0KK3N0YXRpYyBfX211c3RfY2hlY2sgaW5saW5lIGJvb2wgdXNlcl9hY2Nlc3Nf
YmVnaW4oaW50IHR5cGUsDQorCQkJCQkJICBjb25zdCB2b2lkIF9fdXNlciAqcHRyLA0KKwkJCQkJ
CSAgc2l6ZV90IGxlbikNCit7DQorCWlmICh1bmxpa2VseSghYWNjZXNzX29rKHR5cGUsIHB0ciwg
bGVuKSkpDQorCQlyZXR1cm4gMDsNCisJX191YWNjZXNzX2JlZ2luKCk7DQorCXJldHVybiAxOw0K
K30NCisNCisjZGVmaW5lIHVzZXJfYWNjZXNzX2JlZ2luKGEsIGIsIGMpCXVzZXJfYWNjZXNzX2Jl
Z2luKGEsIGIsIGMpDQogI2RlZmluZSB1c2VyX2FjY2Vzc19lbmQoKQlfX3VhY2Nlc3NfZW5kKCkN
CiANCiAjZGVmaW5lIHVuc2FmZV9wdXRfdXNlcih4LCBwdHIsIGVycl9sYWJlbCkJCQkJCVwNCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9leGVjYnVmZmVyLmMNCmluZGV4IDY3OWJiYWU1
Mjk0NS4uMDQxODhlNTE2OGEyIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW1fZXhlY2J1ZmZlci5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9l
eGVjYnVmZmVyLmMNCkBAIC0xNjAyLDcgKzE2MDIsOSBAQCBzdGF0aWMgaW50IGViX2NvcHlfcmVs
b2NhdGlvbnMoY29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpDQogCQkgKiBoYXBwZW5l
ZCB3ZSB3b3VsZCBtYWtlIHRoZSBtaXN0YWtlIG9mIGFzc3VtaW5nIHRoYXQgdGhlDQogCQkgKiBy
ZWxvY2F0aW9ucyB3ZXJlIHZhbGlkLg0KIAkJICovDQotCQl1c2VyX2FjY2Vzc19iZWdpbigpOw0K
KwkJaWYgKCF1c2VyX2FjY2Vzc19iZWdpbihWRVJJRllfV1JJVEUsIHVyZWxvY3MsIHNpemUpKQ0K
KwkJCWdvdG8gZW5kX3VzZXI7DQorDQogCQlmb3IgKGNvcGllZCA9IDA7IGNvcGllZCA8IG5yZWxv
YzsgY29waWVkKyspDQogCQkJdW5zYWZlX3B1dF91c2VyKC0xLA0KIAkJCQkJJnVyZWxvY3NbY29w
aWVkXS5wcmVzdW1lZF9vZmZzZXQsDQpAQCAtMjYwMSw3ICsyNjAzLDE3IEBAIGk5MTVfZ2VtX2V4
ZWNidWZmZXIyX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsDQogCQl1
bnNpZ25lZCBpbnQgaTsNCiANCiAJCS8qIENvcHkgdGhlIG5ldyBidWZmZXIgb2Zmc2V0cyBiYWNr
IHRvIHRoZSB1c2VyJ3MgZXhlYyBsaXN0LiAqLw0KLQkJdXNlcl9hY2Nlc3NfYmVnaW4oKTsNCisJ
CS8qDQorCQkgKiBOb3RlOiBjb3VudCAqIHNpemVvZigqdXNlcl9leGVjX2xpc3QpIGRvZXMgbm90
IG92ZXJmbG93LA0KKwkJICogYmVjYXVzZSB3ZSBjaGVja2VkICdjb3VudCcgaW4gY2hlY2tfYnVm
ZmVyX2NvdW50KCkuDQorCQkgKg0KKwkJICogQW5kIHRoaXMgcmFuZ2UgYWxyZWFkeSBnb3QgZWZm
ZWN0aXZlbHkgY2hlY2tlZCBlYXJsaWVyDQorCQkgKiB3aGVuIHdlIGRpZCB0aGUgImNvcHlfZnJv
bV91c2VyKCkiIGFib3ZlLg0KKwkJICovDQorCQlpZiAoIXVzZXJfYWNjZXNzX2JlZ2luKFZFUklG
WV9XUklURSwgdXNlcl9leGVjX2xpc3QsDQorCQkJCSAgICAgICBjb3VudCAqIHNpemVvZigqdXNl
cl9leGVjX2xpc3QpKSkNCisJCQlnb3RvIGVuZF91c2VyOw0KKw0KIAkJZm9yIChpID0gMDsgaSA8
IGFyZ3MtPmJ1ZmZlcl9jb3VudDsgaSsrKSB7DQogCQkJaWYgKCEoZXhlYzJfbGlzdFtpXS5vZmZz
ZXQgJiBVUERBVEUpKQ0KIAkJCQljb250aW51ZTsNCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4
L3VhY2Nlc3MuaCBiL2luY2x1ZGUvbGludXgvdWFjY2Vzcy5oDQppbmRleCBlZmU3OWMxY2RkNDcu
LmQ1NWI2OGIxMTNkZSAxMDA2NDQNCi0tLSBhL2luY2x1ZGUvbGludXgvdWFjY2Vzcy5oDQorKysg
Yi9pbmNsdWRlL2xpbnV4L3VhY2Nlc3MuaA0KQEAgLTI2Nyw3ICsyNjcsNyBAQCBleHRlcm4gbG9u
ZyBzdHJuY3B5X2Zyb21fdW5zYWZlKGNoYXIgKmRzdCwgY29uc3Qgdm9pZCAqdW5zYWZlX2FkZHIs
IGxvbmcgY291bnQpOw0KIAlwcm9iZV9rZXJuZWxfcmVhZCgmcmV0dmFsLCBhZGRyLCBzaXplb2Yo
cmV0dmFsKSkNCiANCiAjaWZuZGVmIHVzZXJfYWNjZXNzX2JlZ2luDQotI2RlZmluZSB1c2VyX2Fj
Y2Vzc19iZWdpbigpIGRvIHsgfSB3aGlsZSAoMCkNCisjZGVmaW5lIHVzZXJfYWNjZXNzX2JlZ2lu
KHR5cGUsIHB0ciwgbGVuKSBhY2Nlc3Nfb2sodHlwZSwgcHRyLCBsZW4pDQogI2RlZmluZSB1c2Vy
X2FjY2Vzc19lbmQoKSBkbyB7IH0gd2hpbGUgKDApDQogI2RlZmluZSB1bnNhZmVfZ2V0X3VzZXIo
eCwgcHRyLCBlcnIpIGRvIHsgaWYgKHVubGlrZWx5KF9fZ2V0X3VzZXIoeCwgcHRyKSkpIGdvdG8g
ZXJyOyB9IHdoaWxlICgwKQ0KICNkZWZpbmUgdW5zYWZlX3B1dF91c2VyKHgsIHB0ciwgZXJyKSBk
byB7IGlmICh1bmxpa2VseShfX3B1dF91c2VyKHgsIHB0cikpKSBnb3RvIGVycjsgfSB3aGlsZSAo
MCkNCmRpZmYgLS1naXQgYS9rZXJuZWwvY29tcGF0LmMgYi9rZXJuZWwvY29tcGF0LmMNCmluZGV4
IDhlNDBlZmMyOTI4YS4uZTQ1NDhhOWU5YzUyIDEwMDY0NA0KLS0tIGEva2VybmVsL2NvbXBhdC5j
DQorKysgYi9rZXJuZWwvY29tcGF0LmMNCkBAIC0zNTQsMTAgKzM1NCw5IEBAIGxvbmcgY29tcGF0
X2dldF9iaXRtYXAodW5zaWduZWQgbG9uZyAqbWFzaywgY29uc3QgY29tcGF0X3Vsb25nX3QgX191
c2VyICp1bWFzaywNCiAJYml0bWFwX3NpemUgPSBBTElHTihiaXRtYXBfc2l6ZSwgQklUU19QRVJf
Q09NUEFUX0xPTkcpOw0KIAlucl9jb21wYXRfbG9uZ3MgPSBCSVRTX1RPX0NPTVBBVF9MT05HUyhi
aXRtYXBfc2l6ZSk7DQogDQotCWlmICghYWNjZXNzX29rKFZFUklGWV9SRUFELCB1bWFzaywgYml0
bWFwX3NpemUgLyA4KSkNCisJaWYgKCF1c2VyX2FjY2Vzc19iZWdpbihWRVJJRllfUkVBRCwgdW1h
c2ssIGJpdG1hcF9zaXplIC8gOCkpDQogCQlyZXR1cm4gLUVGQVVMVDsNCiANCi0JdXNlcl9hY2Nl
c3NfYmVnaW4oKTsNCiAJd2hpbGUgKG5yX2NvbXBhdF9sb25ncyA+IDEpIHsNCiAJCWNvbXBhdF91
bG9uZ190IGwxLCBsMjsNCiAJCXVuc2FmZV9nZXRfdXNlcihsMSwgdW1hc2srKywgRWZhdWx0KTsN
CkBAIC0zODQsMTAgKzM4Myw5IEBAIGxvbmcgY29tcGF0X3B1dF9iaXRtYXAoY29tcGF0X3Vsb25n
X3QgX191c2VyICp1bWFzaywgdW5zaWduZWQgbG9uZyAqbWFzaywNCiAJYml0bWFwX3NpemUgPSBB
TElHTihiaXRtYXBfc2l6ZSwgQklUU19QRVJfQ09NUEFUX0xPTkcpOw0KIAlucl9jb21wYXRfbG9u
Z3MgPSBCSVRTX1RPX0NPTVBBVF9MT05HUyhiaXRtYXBfc2l6ZSk7DQogDQotCWlmICghYWNjZXNz
X29rKFZFUklGWV9XUklURSwgdW1hc2ssIGJpdG1hcF9zaXplIC8gOCkpDQorCWlmICghdXNlcl9h
Y2Nlc3NfYmVnaW4oVkVSSUZZX1dSSVRFLCB1bWFzaywgYml0bWFwX3NpemUgLyA4KSkNCiAJCXJl
dHVybiAtRUZBVUxUOw0KIA0KLQl1c2VyX2FjY2Vzc19iZWdpbigpOw0KIAl3aGlsZSAobnJfY29t
cGF0X2xvbmdzID4gMSkgew0KIAkJdW5zaWduZWQgbG9uZyBtID0gKm1hc2srKzsNCiAJCXVuc2Fm
ZV9wdXRfdXNlcigoY29tcGF0X3Vsb25nX3QpbSwgdW1hc2srKywgRWZhdWx0KTsNCmRpZmYgLS1n
aXQgYS9rZXJuZWwvZXhpdC5jIGIva2VybmVsL2V4aXQuYw0KaW5kZXggZTZkOGJhMWNkMmUyLi4y
MTNiYTQ1MWRjYjMgMTAwNjQ0DQotLS0gYS9rZXJuZWwvZXhpdC5jDQorKysgYi9rZXJuZWwvZXhp
dC5jDQpAQCAtMTYxNCwxMCArMTYxNCw5IEBAIFNZU0NBTExfREVGSU5FNSh3YWl0aWQsIGludCwg
d2hpY2gsIHBpZF90LCB1cGlkLCBzdHJ1Y3Qgc2lnaW5mbyBfX3VzZXIgKiwNCiAJaWYgKCFpbmZv
cCkNCiAJCXJldHVybiBlcnI7DQogDQotCWlmICghYWNjZXNzX29rKFZFUklGWV9XUklURSwgaW5m
b3AsIHNpemVvZigqaW5mb3ApKSkNCisJaWYgKCF1c2VyX2FjY2Vzc19iZWdpbihWRVJJRllfV1JJ
VEUsIGluZm9wLCBzaXplb2YoKmluZm9wKSkpDQogCQlyZXR1cm4gLUVGQVVMVDsNCiANCi0JdXNl
cl9hY2Nlc3NfYmVnaW4oKTsNCiAJdW5zYWZlX3B1dF91c2VyKHNpZ25vLCAmaW5mb3AtPnNpX3Np
Z25vLCBFZmF1bHQpOw0KIAl1bnNhZmVfcHV0X3VzZXIoMCwgJmluZm9wLT5zaV9lcnJubywgRWZh
dWx0KTsNCiAJdW5zYWZlX3B1dF91c2VyKGluZm8uY2F1c2UsICZpbmZvcC0+c2lfY29kZSwgRWZh
dWx0KTsNCkBAIC0xNzQyLDEwICsxNzQxLDkgQEAgQ09NUEFUX1NZU0NBTExfREVGSU5FNSh3YWl0
aWQsDQogCWlmICghaW5mb3ApDQogCQlyZXR1cm4gZXJyOw0KIA0KLQlpZiAoIWFjY2Vzc19vayhW
RVJJRllfV1JJVEUsIGluZm9wLCBzaXplb2YoKmluZm9wKSkpDQorCWlmICghdXNlcl9hY2Nlc3Nf
YmVnaW4oVkVSSUZZX1dSSVRFLCBpbmZvcCwgc2l6ZW9mKCppbmZvcCkpKQ0KIAkJcmV0dXJuIC1F
RkFVTFQ7DQogDQotCXVzZXJfYWNjZXNzX2JlZ2luKCk7DQogCXVuc2FmZV9wdXRfdXNlcihzaWdu
bywgJmluZm9wLT5zaV9zaWdubywgRWZhdWx0KTsNCiAJdW5zYWZlX3B1dF91c2VyKDAsICZpbmZv
cC0+c2lfZXJybm8sIEVmYXVsdCk7DQogCXVuc2FmZV9wdXRfdXNlcihpbmZvLmNhdXNlLCAmaW5m
b3AtPnNpX2NvZGUsIEVmYXVsdCk7DQpkaWZmIC0tZ2l0IGEvbGliL3N0cm5jcHlfZnJvbV91c2Vy
LmMgYi9saWIvc3RybmNweV9mcm9tX3VzZXIuYw0KaW5kZXggZTMwNGI1NGM5YzdkLi5iODU3MGEx
MTc3NmQgMTAwNjQ0DQotLS0gYS9saWIvc3RybmNweV9mcm9tX3VzZXIuYw0KKysrIGIvbGliL3N0
cm5jcHlfZnJvbV91c2VyLmMNCkBAIC0xMTUsMTAgKzExNSwxMSBAQCBsb25nIHN0cm5jcHlfZnJv
bV91c2VyKGNoYXIgKmRzdCwgY29uc3QgY2hhciBfX3VzZXIgKnNyYywgbG9uZyBjb3VudCkNCiAN
CiAJCWthc2FuX2NoZWNrX3dyaXRlKGRzdCwgY291bnQpOw0KIAkJY2hlY2tfb2JqZWN0X3NpemUo
ZHN0LCBjb3VudCwgZmFsc2UpOw0KLQkJdXNlcl9hY2Nlc3NfYmVnaW4oKTsNCi0JCXJldHZhbCA9
IGRvX3N0cm5jcHlfZnJvbV91c2VyKGRzdCwgc3JjLCBjb3VudCwgbWF4KTsNCi0JCXVzZXJfYWNj
ZXNzX2VuZCgpOw0KLQkJcmV0dXJuIHJldHZhbDsNCisJCWlmICh1c2VyX2FjY2Vzc19iZWdpbihW
RVJJRllfUkVBRCwgc3JjLCBtYXgpKSB7DQorCQkJcmV0dmFsID0gZG9fc3RybmNweV9mcm9tX3Vz
ZXIoZHN0LCBzcmMsIGNvdW50LCBtYXgpOw0KKwkJCXVzZXJfYWNjZXNzX2VuZCgpOw0KKwkJCXJl
dHVybiByZXR2YWw7DQorCQl9DQogCX0NCiAJcmV0dXJuIC1FRkFVTFQ7DQogfQ0KZGlmZiAtLWdp
dCBhL2xpYi9zdHJubGVuX3VzZXIuYyBiL2xpYi9zdHJubGVuX3VzZXIuYw0KaW5kZXggMTg0Zjgw
ZjdiYWNmLi5mNWZhNWIyNjZlYTIgMTAwNjQ0DQotLS0gYS9saWIvc3Rybmxlbl91c2VyLmMNCisr
KyBiL2xpYi9zdHJubGVuX3VzZXIuYw0KQEAgLTExNCwxMCArMTE0LDExIEBAIGxvbmcgc3Rybmxl
bl91c2VyKGNvbnN0IGNoYXIgX191c2VyICpzdHIsIGxvbmcgY291bnQpDQogCQl1bnNpZ25lZCBs
b25nIG1heCA9IG1heF9hZGRyIC0gc3JjX2FkZHI7DQogCQlsb25nIHJldHZhbDsNCiANCi0JCXVz
ZXJfYWNjZXNzX2JlZ2luKCk7DQotCQlyZXR2YWwgPSBkb19zdHJubGVuX3VzZXIoc3RyLCBjb3Vu
dCwgbWF4KTsNCi0JCXVzZXJfYWNjZXNzX2VuZCgpOw0KLQkJcmV0dXJuIHJldHZhbDsNCisJCWlm
ICh1c2VyX2FjY2Vzc19iZWdpbihWRVJJRllfUkVBRCwgc3RyLCBtYXgpKSB7DQorCQkJcmV0dmFs
ID0gZG9fc3Rybmxlbl91c2VyKHN0ciwgY291bnQsIG1heCk7DQorCQkJdXNlcl9hY2Nlc3NfZW5k
KCk7DQorCQkJcmV0dXJuIHJldHZhbDsNCisJCX0NCiAJfQ0KIAlyZXR1cm4gMDsNCiB9DQotLSAN
CjIuMTguMA0KDQo=

--=-mcAE5rUqEqycHV/rZMLL
Content-Disposition: attachment;
	filename="0002-BACKPORT-Fix-access_ok-on-alpha-and-SH.patch"
Content-Type: text/x-patch;
	name="0002-BACKPORT-Fix-access_ok-on-alpha-and-SH.patch"; charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSA5ZjJiZjk3NWJjNWY4YTliZjg3M2U1YTU1MzRmY2ExYjJlYWRiMDczIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQ0KRnJvbTogTWlsZXMgQ2hlbiA8bWlsZXMuY2hlbkBtZWRpYXRlay5jb20+
DQpEYXRlOiBXZWQsIDEwIEp1biAyMDIwIDIzOjU4OjM3ICswODAwDQpTdWJqZWN0OiBbUEFUQ0hd
IEJBQ0tQT1JUOiBGaXggJ2FjY2Vzc19vaygpJyBvbiBhbHBoYSBhbmQgU0gNCg0KQ29tbWl0IDU5
NGNjMjUxZmRkMCAoIm1ha2UgJ3VzZXJfYWNjZXNzX2JlZ2luKCknIGRvICdhY2Nlc3Nfb2soKSci
KQ0KYnJva2UgYm90aCBhbHBoYSBhbmQgU0ggYm9vdGluZyBpbiBxZW11LCBhcyBub3RpY2VkIGJ5
IEd1ZW50ZXIgUm9lY2suDQoNCkl0IHR1cm5zIG91dCB0aGF0IHRoZSBidWcgd2Fzbid0IGFjdHVh
bGx5IGluIHRoYXQgY29tbWl0IGl0c2VsZiAod2hpY2gNCndvdWxkIGhhdmUgYmVlbiBzdXJwcmlz
aW5nOiBpdCB3YXMgbW9zdGx5IGEgbm8tb3ApLCBidXQgaW4gaG93IHRoZQ0KYWRkaXRpb24gb2Yg
YWNjZXNzX29rKCkgdG8gdGhlIHN0cm5jcHlfZnJvbV91c2VyKCkgYW5kIHN0cm5sZW5fdXNlcigp
DQpmdW5jdGlvbnMgbm93IHRyaWdnZXJlZCB0aGUgY2FzZSB3aGVyZSB0aG9zZSBmdW5jdGlvbnMg
d291bGQgdGVzdCB0aGUNCmFjY2VzcyBvZiB0aGUgdmVyeSBsYXN0IGJ5dGUgb2YgdGhlIHVzZXIg
YWRkcmVzcyBzcGFjZS4NCg0KVGhlIHN0cmluZyBmdW5jdGlvbnMgYWN0dWFsbHkgZGlkIHRoYXQg
dXNlciByYW5nZSB0ZXN0IGJlZm9yZSB0b28sIGJ1dA0KdGhleSBkaWQgaXQgbWFudWFsbHkgYnkg
anVzdCBjb21wYXJpbmcgYWdhaW5zdCB1c2VyX2FkZHJfbWF4KCkuICBCdXQNCndpdGggdXNlcl9h
Y2Nlc3NfYmVnaW4oKSBkb2luZyB0aGUgY2hlY2sgKHVzaW5nICJhY2Nlc3Nfb2soKSIpLCBpdCBu
b3cNCmV4cG9zZWQgcHJvYmxlbXMgaW4gdGhlIGFyY2hpdGVjdHVyZSBpbXBsZW1lbnRhdGlvbnMg
b2YgdGhhdCBmdW5jdGlvbi4NCg0KRm9yIGV4YW1wbGUsIG9uIGFscGhhLCB0aGUgYWNjZXNzX29r
KCkgaGVscGVyIG1hY3JvIGxvb2tlZCBsaWtlIHRoaXM6DQoNCiAgI2RlZmluZSBfX2FjY2Vzc19v
ayhhZGRyLCBzaXplKSBcDQogICAgICAgICgoZ2V0X2ZzKCkuc2VnICYgKGFkZHIgfCBzaXplIHwg
KGFkZHIrc2l6ZSkpKSA9PSAwKQ0KDQphbmQgd2hhdCBpdCBiYXNpY2FsbHkgdGVzdHMgaXMgb2Yg
YW55IG9mIHRoZSBoaWdoIGJpdHMgZ2V0IHNldCAodGhlDQpVU0VSX0RTIG1hc2tpbmcgdmFsdWUg
aXMgMHhmZmZmZmMwMDAwMDAwMDAwKS4NCg0KQW5kIHRoYXQncyBjb21wbGV0ZWx5IHdyb25nIGZv
ciB0aGUgImFkZHIrc2l6ZSIgY2hlY2suICBCZWNhdXNlIGl0J3MNCm9mZi1ieS1vbmUgZm9yIHRo
ZSBjYXNlIHdoZXJlIHdlIGNoZWNrIHRvIHRoZSB2ZXJ5IGVuZCBvZiB0aGUgdXNlcg0KYWRkcmVz
cyBzcGFjZSwgd2hpY2ggaXMgZXhhY3RseSB3aGF0IHRoZSBzdHJuKl91c2VyKCkgZnVuY3Rpb25z
IGRvLg0KDQpXaHk/IEJlY2F1c2UgImFkZHIrc2l6ZSIgd2lsbCBiZSBleGFjdGx5IHRoZSBzaXpl
IG9mIHRoZSBhZGRyZXNzIHNwYWNlLA0Kc28gdHJ5aW5nIHRvIGFjY2VzcyB0aGUgbGFzdCBieXRl
IG9mIHRoZSB1c2VyIGFkZHJlc3Mgc3BhY2Ugd2lsbCBmYWlsDQp0aGUgX19hY2Nlc3Nfb2soKSBj
aGVjaywgZXZlbiB0aG91Z2ggaXQgc2hvdWxkbid0LiAgQXMgYSByZXN1bHQsIHRoZQ0KdXNlciBz
dHJpbmcgYWNjZXNzb3IgZnVuY3Rpb25zIGZhaWxlZCBjb25zaXN0ZW50bHkgLSBiZWNhdXNlIHRo
ZXkNCmxpdGVyYWxseSBkb24ndCBrbm93IGhvdyBsb25nIHRoZSBzdHJpbmcgaXMgZ29pbmcgdG8g
YmUsIGFuZCB0aGUgbWF4DQphY2Nlc3MgaXMgZ29pbmcgdG8gYmUgdGhhdCBsYXN0IGJ5dGUgb2Yg
dGhlIHVzZXIgYWRkcmVzcyBzcGFjZS4NCg0KU2lkZSBub3RlOiB0aGF0IGFscGhhIG1hY3JvIGlz
IGJ1Z2d5IGZvciBhbm90aGVyIHJlYXNvbiB0b28gLSBpdCByZS11c2VzDQp0aGUgYXJndW1lbnRz
IHR3aWNlLg0KDQpBbmQgU0ggaGFzIGFub3RoZXIgdmVyc2lvbiBvZiBhbG1vc3QgdGhlIGV4YWN0
IHNhbWUgYnVnOg0KDQogICNkZWZpbmUgX19hZGRyX29rKGFkZHIpIFwNCiAgICAgICAgKCh1bnNp
Z25lZCBsb25nIF9fZm9yY2UpKGFkZHIpIDwgY3VycmVudF90aHJlYWRfaW5mbygpLT5hZGRyX2xp
bWl0LnNlZykNCg0Kc28gZmFyIHNvIGdvb2Q6IHllcywgYSB1c2VyIGFkZHJlc3MgbXVzdCBiZSBi
ZWxvdyB0aGUgbGltaXQuICBCdXQgdGhlbjoNCg0KICAjZGVmaW5lIF9fYWNjZXNzX29rKGFkZHIs
IHNpemUpICAgICAgICAgXA0KICAgICAgICAoX19hZGRyX29rKChhZGRyKSArIChzaXplKSkpDQoN
CmlzIHdyb25nIHdpdGggdGhlIGV4YWN0IHNhbWUgb2ZmLWJ5LW9uZSBjYXNlOiB0aGUgY2FzZSB3
aGVuICJhZGRyK3NpemUiDQppcyBleGFjdGx5IF9lcXVhbF8gdG8gdGhlIGxpbWl0IGlzIGFjdHVh
bGx5IHBlcmZlY3RseSBmaW5lICh0aGluayAib25lDQpieXRlIGFjY2VzcyBhdCB0aGUgbGFzdCBh
ZGRyZXNzIG9mIHRoZSB1c2VyIGFkZHJlc3Mgc3BhY2UiKQ0KDQpUaGUgU0ggdmVyc2lvbiBpcyBh
Y3R1YWxseSBzZXJpb3VzbHkgYnVnZ3kgaW4gYW5vdGhlciB3YXk6IGl0IGRvZXNuJ3QNCmFjdHVh
bGx5IGNoZWNrIGZvciBvdmVyZmxvdywgZXZlbiB0aG91Z2ggaXQgZGlkIGNvcHkgdGhlIF9jb21t
ZW50XyB0aGF0DQp0YWxrcyBhYm91dCBvdmVyZmxvdy4NCg0KU28gaXQgdHVybnMgb3V0IHRoYXQg
Ym90aCBTSCBhbmQgYWxwaGEgYWN0dWFsbHkgaGF2ZSBjb21wbGV0ZWx5IGJ1Z2d5DQppbXBsZW1l
bnRhdGlvbnMgb2YgYWNjZXNzX29rKCksIGJ1dCB0aGV5IGhhcHBlbmVkIHRvIHdvcmsgaW4gcHJh
Y3RpY2UNCihhbHRob3VnaCB0aGUgU0ggb3ZlcmZsb3cgb25lIGlzIGEgc2VyaW91cyBzZXJpb3Vz
IHNlY3VyaXR5IGJ1Zywgbm90DQp0aGF0IGFueWJvZHkgbGlrZWx5IGNhcmVzIGFib3V0IFNIIHNl
Y3VyaXR5KS4NCg0KVGhpcyBmaXhlcyB0aGUgcHJvYmxlbXMgYnkgdXNpbmcgYSBzaW1pbGFyIG1h
Y3JvIG9uIGJvdGggYWxwaGEgYW5kIFNILg0KSXQgaXNuJ3QgdHJ5aW5nIHRvIGJlIGNsZXZlciwg
dGhlIGVuZCBhZGRyZXNzIGlzIGJhc2VkIG9uIHRoaXMgbG9naWM6DQoNCiAgICAgICAgdW5zaWdu
ZWQgbG9uZyBfX2FvX2VuZCA9IF9fYW9fYSArIF9fYW9fYiAtICEhX19hb19iOw0KDQp3aGljaCBi
YXNpY2FsbHkgc2F5cyAiYWRkIHN0YXJ0IGFuZCBsZW5ndGgsIGFuZCB0aGVuIHN1YnRyYWN0IG9u
ZSB1bmxlc3MNCnRoZSBsZW5ndGggd2FzIHplcm8iLiAgV2UgY2FuJ3Qgc3VidHJhY3Qgb25lIGZv
ciBhIHplcm8gbGVuZ3RoLCBvciB3ZSdkDQpqdXN0IGhpdCBhbiB1bmRlcmZsb3cgaW5zdGVhZC4N
Cg0KRm9yIGEgbG90IG9mIGFjY2Vzc19vaygpIHVzZXJzIHRoZSBsZW5ndGggaXMgYSBjb25zdGFu
dCwgc28gdGhpcyBpc24ndA0KYWN0dWFsbHkgYXMgZXhwZW5zaXZlIGFzIGl0IGluaXRpYWxseSBs
b29rcy4NCg0KUmVwb3J0ZWQtYW5kLXRlc3RlZC1ieTogR3VlbnRlciBSb2VjayA8bGludXhAcm9l
Y2stdXMubmV0Pg0KQ2M6IE1hdHQgVHVybmVyIDxtYXR0c3Q4OEBnbWFpbC5jb20+DQpDYzogWW9z
aGlub3JpIFNhdG8gPHlzYXRvQHVzZXJzLnNvdXJjZWZvcmdlLmpwPg0KU2lnbmVkLW9mZi1ieTog
TGludXMgVG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5kYXRpb24ub3JnPg0KU2lnbmVkLW9m
Zi1ieTogTWlsZXMgQ2hlbiA8bWlsZXMuY2hlbkBtZWRpYXRlay5jb20+DQotLS0NCiBhcmNoL2Fs
cGhhL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCB8IDggKysrKystLS0NCiBhcmNoL3NoL2luY2x1ZGUv
YXNtL3VhY2Nlc3MuaCAgICB8IDcgKysrKystLQ0KIDIgZmlsZXMgY2hhbmdlZCwgMTAgaW5zZXJ0
aW9ucygrKSwgNSBkZWxldGlvbnMoLSkNCg0KZGlmZiAtLWdpdCBhL2FyY2gvYWxwaGEvaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oIGIvYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS91YWNjZXNzLmgNCmluZGV4
IDg3ZDhjNGYwMzA3ZC4uNzI5NTk2N2I1MDI4IDEwMDY0NA0KLS0tIGEvYXJjaC9hbHBoYS9pbmNs
dWRlL2FzbS91YWNjZXNzLmgNCisrKyBiL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vdWFjY2Vzcy5o
DQpAQCAtMzAsMTEgKzMwLDEzIEBADQogICogQWRkcmVzcyB2YWxpZCBpZjoNCiAgKiAgLSAiYWRk
ciIgZG9lc24ndCBoYXZlIGFueSBoaWdoLWJpdHMgc2V0DQogICogIC0gQU5EICJzaXplIiBkb2Vz
bid0IGhhdmUgYW55IGhpZ2gtYml0cyBzZXQNCi0gKiAgLSBBTkQgImFkZHIrc2l6ZSIgZG9lc24n
dCBoYXZlIGFueSBoaWdoLWJpdHMgc2V0DQorICogIC0gQU5EICJhZGRyK3NpemUtKHNpemUgIT0g
MCkiIGRvZXNuJ3QgaGF2ZSBhbnkgaGlnaC1iaXRzIHNldA0KICAqICAtIE9SIHdlIGFyZSBpbiBr
ZXJuZWwgbW9kZS4NCiAgKi8NCi0jZGVmaW5lIF9fYWNjZXNzX29rKGFkZHIsIHNpemUpIFwNCi0J
KChnZXRfZnMoKS5zZWcgJiAoYWRkciB8IHNpemUgfCAoYWRkcitzaXplKSkpID09IDApDQorI2Rl
ZmluZSBfX2FjY2Vzc19vayhhZGRyLCBzaXplKSAoewkJCQlcDQorCXVuc2lnbmVkIGxvbmcgX19h
b19hID0gKGFkZHIpLCBfX2FvX2IgPSAoc2l6ZSk7CQlcDQorCXVuc2lnbmVkIGxvbmcgX19hb19l
bmQgPSBfX2FvX2EgKyBfX2FvX2IgLSAhIV9fYW9fYjsJXA0KKwkoZ2V0X2ZzKCkuc2VnICYgKF9f
YW9fYSB8IF9fYW9fYiB8IF9fYW9fZW5kKSkgPT0gMDsgfSkNCiANCiAjZGVmaW5lIGFjY2Vzc19v
ayh0eXBlLCBhZGRyLCBzaXplKQkJCVwNCiAoewkJCQkJCQlcDQpkaWZmIC0tZ2l0IGEvYXJjaC9z
aC9pbmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL3NoL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaA0K
aW5kZXggMzJlYjU2ZTAwYzExLi42ZTc4MTYzNjBhNzUgMTAwNjQ0DQotLS0gYS9hcmNoL3NoL2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaA0KKysrIGIvYXJjaC9zaC9pbmNsdWRlL2FzbS91YWNjZXNzLmgN
CkBAIC0xNiw4ICsxNiwxMSBAQA0KICAqIHN1bSA6PSBhZGRyICsgc2l6ZTsgIGNhcnJ5PyAtLT4g
ZmxhZyA9IHRydWU7DQogICogaWYgKHN1bSA+PSBhZGRyX2xpbWl0KSBmbGFnID0gdHJ1ZTsNCiAg
Ki8NCi0jZGVmaW5lIF9fYWNjZXNzX29rKGFkZHIsIHNpemUpCQlcDQotCShfX2FkZHJfb2soKGFk
ZHIpICsgKHNpemUpKSkNCisjZGVmaW5lIF9fYWNjZXNzX29rKGFkZHIsIHNpemUpCSh7CQkJCVwN
CisJdW5zaWduZWQgbG9uZyBfX2FvX2EgPSAoYWRkciksIF9fYW9fYiA9IChzaXplKTsJCVwNCisJ
dW5zaWduZWQgbG9uZyBfX2FvX2VuZCA9IF9fYW9fYSArIF9fYW9fYiAtICEhX19hb19iOwlcDQor
CV9fYW9fZW5kID49IF9fYW9fYSAmJiBfX2FkZHJfb2soX19hb19lbmQpOyB9KQ0KKw0KICNkZWZp
bmUgYWNjZXNzX29rKHR5cGUsIGFkZHIsIHNpemUpCVwNCiAJKF9fY2hrX3VzZXJfcHRyKGFkZHIp
LAkJXA0KIAkgX19hY2Nlc3Nfb2soKHVuc2lnbmVkIGxvbmcgX19mb3JjZSkoYWRkciksIChzaXpl
KSkpDQotLSANCjIuMTguMA0KDQo=

--=-mcAE5rUqEqycHV/rZMLL
Content-Disposition: attachment;
	filename="0003-BACKPORT-arch-openrisc-Fix-issues-with-access_ok.patch"
Content-Type: text/x-patch;
	name="0003-BACKPORT-arch-openrisc-Fix-issues-with-access_ok.patch";
	charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSA1ZjliYmFkZmQ5ZWNkNGI2NDBjMjUwNDE2MmU3YzMxOWI3MDRhNzNhIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQ0KRnJvbTogTWlsZXMgQ2hlbiA8bWlsZXMuY2hlbkBtZWRpYXRlay5jb20+
DQpEYXRlOiBUaHUsIDExIEp1biAyMDIwIDAwOjM4OjM4ICswODAwDQpTdWJqZWN0OiBbUEFUQ0hd
IEJBQ0tQT1JUOiBhcmNoL29wZW5yaXNjOiBGaXggaXNzdWVzIHdpdGggYWNjZXNzX29rKCkNCg0K
VGhlIGNvbW1pdCA1OTRjYzI1MWZkZDAgKCJtYWtlICd1c2VyX2FjY2Vzc19iZWdpbigpJyBkbyAn
YWNjZXNzX29rKCknIikNCmV4cG9zZWQgaW5jb3JyZWN0IGltcGxlbWVudGF0aW9ucyBvZiBhY2Nl
c3Nfb2soKSBtYWNybyBpbiBzZXZlcmFsDQphcmNoaXRlY3R1cmVzLiAgVGhpcyBjaGFuZ2UgZml4
ZXMgMiBpc3N1ZXMgZm91bmQgaW4gT3BlblJJU0MuDQoNCk9wZW5SSVNDIHdhcyBub3QgcHJvcGVy
bHkgdXNpbmcgcGFyZW50aGVzaXMgZm9yIGFyZ3VtZW50cyBhbmQgYWxzbyB1c2luZw0KYXJndW1l
bnRzIHR3aWNlLiAgVGhpcyBwYXRjaCBmaXhlcyB0aG9zZSAyIGlzc3Vlcy4NCg0KSSB0ZXN0IGJv
b3RlZCB0aGlzIHBhdGNoIHdpdGggdjUuMC1yYzEgb24gcWVtdSBhbmQgaXQncyB3b3JraW5nIGZp
bmUuDQoNCkNjOiBHdWVudGVyIFJvZWNrIDxsaW51eEByb2Vjay11cy5uZXQ+DQpDYzogTGludXMg
VG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5kYXRpb24ub3JnPg0KUmVwb3J0ZWQtYnk6IExp
bnVzIFRvcnZhbGRzIDx0b3J2YWxkc0BsaW51eC1mb3VuZGF0aW9uLm9yZz4NClNpZ25lZC1vZmYt
Ynk6IFN0YWZmb3JkIEhvcm5lIDxzaG9ybmVAZ21haWwuY29tPg0KU2lnbmVkLW9mZi1ieTogTGlu
dXMgVG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5kYXRpb24ub3JnPg0KU2lnbmVkLW9mZi1i
eTogTWlsZXMgQ2hlbiA8bWlsZXMuY2hlbkBtZWRpYXRlay5jb20+DQotLS0NCiBhcmNoL29wZW5y
aXNjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCB8IDggKysrKysrLS0NCiAxIGZpbGUgY2hhbmdlZCwg
NiBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvYXJjaC9vcGVu
cmlzYy9pbmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3Vh
Y2Nlc3MuaA0KaW5kZXggYmJmNWM3OWNjZTdhLi44YjIwNGNkMWY1MzEgMTAwNjQ0DQotLS0gYS9h
cmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaA0KKysrIGIvYXJjaC9vcGVucmlzYy9p
bmNsdWRlL2FzbS91YWNjZXNzLmgNCkBAIC01OCw4ICs1OCwxMiBAQA0KIC8qIEVuc3VyZSB0aGF0
IGFkZHIgaXMgYmVsb3cgdGFzaydzIGFkZHJfbGltaXQgKi8NCiAjZGVmaW5lIF9fYWRkcl9vayhh
ZGRyKSAoKHVuc2lnbmVkIGxvbmcpIGFkZHIgPCBnZXRfZnMoKSkNCiANCi0jZGVmaW5lIGFjY2Vz
c19vayh0eXBlLCBhZGRyLCBzaXplKSBcDQotCV9fcmFuZ2Vfb2soKHVuc2lnbmVkIGxvbmcpYWRk
ciwgKHVuc2lnbmVkIGxvbmcpc2l6ZSkNCisjZGVmaW5lIGFjY2Vzc19vayh0eXBlLCBhZGRyLCBz
aXplKQkJCQkJCVwNCisoeyAJCQkJCQkJCQlcDQorCXVuc2lnbmVkIGxvbmcgX19hb19hZGRyID0g
KHVuc2lnbmVkIGxvbmcpKGFkZHIpOwkJXA0KKwl1bnNpZ25lZCBsb25nIF9fYW9fc2l6ZSA9ICh1
bnNpZ25lZCBsb25nKShzaXplKTsJCVwNCisJX19yYW5nZV9vayhfX2FvX2FkZHIsIF9fYW9fc2l6
ZSk7CQkJCVwNCit9KQ0KIA0KIC8qDQogICogVGhlc2UgYXJlIHRoZSBtYWluIHNpbmdsZS12YWx1
ZSB0cmFuc2ZlciByb3V0aW5lcy4gIFRoZXkgYXV0b21hdGljYWxseQ0KLS0gDQoyLjE4LjANCg0K

--=-mcAE5rUqEqycHV/rZMLL
Content-Disposition: attachment;
	filename*0="0004-x86-uaccess-Inhibit-speculation-past-access_ok-in-us.pat";
	filename*1="ch"
Content-Type: text/x-patch;
	name="0004-x86-uaccess-Inhibit-speculation-past-access_ok-in-us.patch";
	charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSA2ZTY5M2IzZmZlY2IwYjQ3OGM3MDUwYjQ0YTQ4NDI4NTQxNTRmNzE1IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQ0KRnJvbTogV2lsbCBEZWFjb24gPHdpbGwuZGVhY29uQGFybS5jb20+DQpE
YXRlOiBTYXQsIDE5IEphbiAyMDE5IDIxOjU2OjA1ICswMDAwDQpTdWJqZWN0OiBbUEFUQ0hdIHg4
NjogdWFjY2VzczogSW5oaWJpdCBzcGVjdWxhdGlvbiBwYXN0IGFjY2Vzc19vaygpIGluDQogdXNl
cl9hY2Nlc3NfYmVnaW4oKQ0KDQpDb21taXQgNTk0Y2MyNTFmZGQwICgibWFrZSAndXNlcl9hY2Nl
c3NfYmVnaW4oKScgZG8gJ2FjY2Vzc19vaygpJyIpDQptYWtlcyB0aGUgYWNjZXNzX29rKCkgY2hl
Y2sgcGFydCBvZiB0aGUgdXNlcl9hY2Nlc3NfYmVnaW4oKSBwcmVjZWRpbmcgYQ0Kc2VyaWVzIG9m
ICd1bnNhZmUnIGFjY2Vzc2VzLiAgVGhpcyBoYXMgdGhlIGRlc2lyYWJsZSBlZmZlY3Qgb2YgZW5z
dXJpbmcNCnRoYXQgYWxsICd1bnNhZmUnIGFjY2Vzc2VzIGhhdmUgYmVlbiByYW5nZS1jaGVja2Vk
LCB3aXRob3V0IGhhdmluZyB0bw0KcGljayB0aHJvdWdoIGFsbCBvZiB0aGUgY2FsbHNpdGVzIHRv
IHZlcmlmeSB3aGV0aGVyIHRoZSBhcHByb3ByaWF0ZQ0KY2hlY2tpbmcgaGFzIGJlZW4gbWFkZS4N
Cg0KSG93ZXZlciwgdGhlIGNvbnNvbGlkYXRlZCByYW5nZSBjaGVjayBkb2VzIG5vdCBpbmhpYml0
IHNwZWN1bGF0aW9uLCBzbw0KaXQgaXMgc3RpbGwgdXAgdG8gdGhlIGNhbGxlciB0byBlbnN1cmUg
dGhhdCB0aGV5IGFyZSBub3Qgc3VzY2VwdGlibGUgdG8NCmFueSBzcGVjdWxhdGl2ZSBzaWRlLWNo
YW5uZWwgYXR0YWNrcyBmb3IgdXNlciBhZGRyZXNzZXMgdGhhdCB1bHRpbWF0ZWx5DQpmYWlsIHRo
ZSBhY2Nlc3Nfb2soKSBjaGVjay4NCg0KVGhpcyBpcyBhbiBvdmVyc2lnaHQsIHNvIHVzZSBfX3Vh
Y2Nlc3NfYmVnaW5fbm9zcGVjKCkgdG8gZW5zdXJlIHRoYXQNCnNwZWN1bGF0aW9uIGlzIGluaGli
aXRlZCB1bnRpbCB0aGUgYWNjZXNzX29rKCkgY2hlY2sgaGFzIHBhc3NlZC4NCg0KUmVwb3J0ZWQt
Ynk6IEp1bGllbiBUaGllcnJ5IDxqdWxpZW4udGhpZXJyeUBhcm0uY29tPg0KU2lnbmVkLW9mZi1i
eTogV2lsbCBEZWFjb24gPHdpbGwuZGVhY29uQGFybS5jb20+DQpTaWduZWQtb2ZmLWJ5OiBMaW51
cyBUb3J2YWxkcyA8dG9ydmFsZHNAbGludXgtZm91bmRhdGlvbi5vcmc+DQotLS0NCiBhcmNoL3g4
Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmggfCAyICstDQogMSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0
aW9uKCspLCAxIGRlbGV0aW9uKC0pDQoNCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2Fz
bS91YWNjZXNzLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmgNCmluZGV4IGE3NzQ0
NWQxYjAzNC4uNzgwZjJiNDJjOGVmIDEwMDY0NA0KLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20v
dWFjY2Vzcy5oDQorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmgNCkBAIC03MTEs
NyArNzExLDcgQEAgc3RhdGljIF9fbXVzdF9jaGVjayBpbmxpbmUgYm9vbCB1c2VyX2FjY2Vzc19i
ZWdpbihjb25zdCB2b2lkIF9fdXNlciAqcHRyLCBzaXplX3QNCiB7DQogCWlmICh1bmxpa2VseSgh
YWNjZXNzX29rKHB0cixsZW4pKSkNCiAJCXJldHVybiAwOw0KLQlfX3VhY2Nlc3NfYmVnaW4oKTsN
CisJX191YWNjZXNzX2JlZ2luX25vc3BlYygpOw0KIAlyZXR1cm4gMTsNCiB9DQogI2RlZmluZSB1
c2VyX2FjY2Vzc19iZWdpbihhLGIpCXVzZXJfYWNjZXNzX2JlZ2luKGEsYikNCi0tIA0KMi4xOC4w
DQoNCg==

--=-mcAE5rUqEqycHV/rZMLL
Content-Disposition: attachment;
	filename*0="0005-BACKPORT-lib-Reduce-user_access_begin-boundaries-in.patc";
	filename*1="h"
Content-Type: text/x-patch;
	name="0005-BACKPORT-lib-Reduce-user_access_begin-boundaries-in.patch";
	charset="UTF-8"
Content-Transfer-Encoding: base64

RnJvbSAzMWU2ZDIxM2U5MDFmMWQ0YzI0YzM1OGNkOGFmMGQwZDZkZmY5OTMzIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQ0KRnJvbTogTWlsZXMgQ2hlbiA8bWlsZXMuY2hlbkBtZWRpYXRlay5jb20+
DQpEYXRlOiBUaHUsIDExIEp1biAyMDIwIDAwOjQzOjExICswODAwDQpTdWJqZWN0OiBbUEFUQ0hd
IEJBQ0tQT1JUOiBsaWI6IFJlZHVjZSB1c2VyX2FjY2Vzc19iZWdpbigpIGJvdW5kYXJpZXMgaW4g
DQogc3RybmNweV9mcm9tX3VzZXIoKSBhbmQgc3Rybmxlbl91c2VyKCkNCg0KVGhlIHJhbmdlIHBh
c3NlZCB0byB1c2VyX2FjY2Vzc19iZWdpbigpIGJ5IHN0cm5jcHlfZnJvbV91c2VyKCkgYW5kDQpz
dHJubGVuX3VzZXIoKSBzdGFydHMgYXQgJ3NyYycgYW5kIGdvZXMgdXAgdG8gdGhlIGxpbWl0IG9m
IHVzZXJzcGFjZQ0KYWx0aG91Z2ggcmVhZHMgd2lsbCBiZSBsaW1pdGVkIGJ5IHRoZSAnY291bnQn
IHBhcmFtLg0KDQpPbiAzMiBiaXRzIHBvd2VycGMgKGJvb2szcy8zMikgYWNjZXNzIGhhcyB0byBi
ZSBncmFudGVkIGZvciBlYWNoDQoyNTZNYnl0ZXMgc2VnbWVudCBhbmQgdGhlIGNvc3QgaW5jcmVh
c2VzIHdpdGggdGhlIG51bWJlciBvZiBzZWdtZW50cyB0bw0KdW5sb2NrLg0KDQpMaW1pdCB0aGUg
cmFuZ2Ugd2l0aCAnY291bnQnIHBhcmFtLg0KDQpGaXhlczogNTk0Y2MyNTFmZGQwICgibWFrZSAn
dXNlcl9hY2Nlc3NfYmVnaW4oKScgZG8gJ2FjY2Vzc19vaygpJyIpDQpTaWduZWQtb2ZmLWJ5OiBD
aHJpc3RvcGhlIExlcm95IDxjaHJpc3RvcGhlLmxlcm95QGMtcy5mcj4NClNpZ25lZC1vZmYtYnk6
IExpbnVzIFRvcnZhbGRzIDx0b3J2YWxkc0BsaW51eC1mb3VuZGF0aW9uLm9yZz4NClNpZ25lZC1v
ZmYtYnk6IE1pbGVzIENoZW4gPG1pbGVzLmNoZW5AbWVkaWF0ZWsuY29tPg0KLS0tDQogbGliL3N0
cm5jcHlfZnJvbV91c2VyLmMgfCAxNCArKysrKysrLS0tLS0tLQ0KIGxpYi9zdHJubGVuX3VzZXIu
YyAgICAgIHwgMTQgKysrKysrKy0tLS0tLS0NCiAyIGZpbGVzIGNoYW5nZWQsIDE0IGluc2VydGlv
bnMoKyksIDE0IGRlbGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvbGliL3N0cm5jcHlfZnJvbV91
c2VyLmMgYi9saWIvc3RybmNweV9mcm9tX3VzZXIuYw0KaW5kZXggYjg1NzBhMTE3NzZkLi5mYzVi
MWUyZDk5N2QgMTAwNjQ0DQotLS0gYS9saWIvc3RybmNweV9mcm9tX3VzZXIuYw0KKysrIGIvbGli
L3N0cm5jcHlfZnJvbV91c2VyLmMNCkBAIC0yOSwxMyArMjksNiBAQCBzdGF0aWMgaW5saW5lIGxv
bmcgZG9fc3RybmNweV9mcm9tX3VzZXIoY2hhciAqZHN0LCBjb25zdCBjaGFyIF9fdXNlciAqc3Jj
LA0KIAljb25zdCBzdHJ1Y3Qgd29yZF9hdF9hX3RpbWUgY29uc3RhbnRzID0gV09SRF9BVF9BX1RJ
TUVfQ09OU1RBTlRTOw0KIAl1bnNpZ25lZCBsb25nIHJlcyA9IDA7DQogDQotCS8qDQotCSAqIFRy
dW5jYXRlICdtYXgnIHRvIHRoZSB1c2VyLXNwZWNpZmllZCBsaW1pdCwgc28gdGhhdA0KLQkgKiB3
ZSBvbmx5IGhhdmUgb25lIGxpbWl0IHdlIG5lZWQgdG8gY2hlY2sgaW4gdGhlIGxvb3ANCi0JICov
DQotCWlmIChtYXggPiBjb3VudCkNCi0JCW1heCA9IGNvdW50Ow0KLQ0KIAlpZiAoSVNfVU5BTElH
TkVEKHNyYywgZHN0KSkNCiAJCWdvdG8gYnl0ZV9hdF9hX3RpbWU7DQogDQpAQCAtMTEzLDYgKzEw
NiwxMyBAQCBsb25nIHN0cm5jcHlfZnJvbV91c2VyKGNoYXIgKmRzdCwgY29uc3QgY2hhciBfX3Vz
ZXIgKnNyYywgbG9uZyBjb3VudCkNCiAJCXVuc2lnbmVkIGxvbmcgbWF4ID0gbWF4X2FkZHIgLSBz
cmNfYWRkcjsNCiAJCWxvbmcgcmV0dmFsOw0KIA0KKwkJLyoNCisJCSAqIFRydW5jYXRlICdtYXgn
IHRvIHRoZSB1c2VyLXNwZWNpZmllZCBsaW1pdCwgc28gdGhhdA0KKwkJICogd2Ugb25seSBoYXZl
IG9uZSBsaW1pdCB3ZSBuZWVkIHRvIGNoZWNrIGluIHRoZSBsb29wDQorCQkgKi8NCisJCWlmICht
YXggPiBjb3VudCkNCisJCQltYXggPSBjb3VudDsNCisNCiAJCWthc2FuX2NoZWNrX3dyaXRlKGRz
dCwgY291bnQpOw0KIAkJY2hlY2tfb2JqZWN0X3NpemUoZHN0LCBjb3VudCwgZmFsc2UpOw0KIAkJ
aWYgKHVzZXJfYWNjZXNzX2JlZ2luKFZFUklGWV9SRUFELCBzcmMsIG1heCkpIHsNCmRpZmYgLS1n
aXQgYS9saWIvc3Rybmxlbl91c2VyLmMgYi9saWIvc3Rybmxlbl91c2VyLmMNCmluZGV4IGY1ZmE1
YjI2NmVhMi4uMGJmN2MwNmViZGFkIDEwMDY0NA0KLS0tIGEvbGliL3N0cm5sZW5fdXNlci5jDQor
KysgYi9saWIvc3Rybmxlbl91c2VyLmMNCkBAIC0zMSwxMyArMzEsNiBAQCBzdGF0aWMgaW5saW5l
IGxvbmcgZG9fc3Rybmxlbl91c2VyKGNvbnN0IGNoYXIgX191c2VyICpzcmMsIHVuc2lnbmVkIGxv
bmcgY291bnQsDQogCXVuc2lnbmVkIGxvbmcgYWxpZ24sIHJlcyA9IDA7DQogCXVuc2lnbmVkIGxv
bmcgYzsNCiANCi0JLyoNCi0JICogVHJ1bmNhdGUgJ21heCcgdG8gdGhlIHVzZXItc3BlY2lmaWVk
IGxpbWl0LCBzbyB0aGF0DQotCSAqIHdlIG9ubHkgaGF2ZSBvbmUgbGltaXQgd2UgbmVlZCB0byBj
aGVjayBpbiB0aGUgbG9vcA0KLQkgKi8NCi0JaWYgKG1heCA+IGNvdW50KQ0KLQkJbWF4ID0gY291
bnQ7DQotDQogCS8qDQogCSAqIERvIGV2ZXJ5dGhpbmcgYWxpZ25lZC4gQnV0IHRoYXQgbWVhbnMg
dGhhdCB3ZQ0KIAkgKiBuZWVkIHRvIGFsc28gZXhwYW5kIHRoZSBtYXhpbXVtLi4NCkBAIC0xMTQs
NiArMTA3LDEzIEBAIGxvbmcgc3Rybmxlbl91c2VyKGNvbnN0IGNoYXIgX191c2VyICpzdHIsIGxv
bmcgY291bnQpDQogCQl1bnNpZ25lZCBsb25nIG1heCA9IG1heF9hZGRyIC0gc3JjX2FkZHI7DQog
CQlsb25nIHJldHZhbDsNCiANCisJCS8qDQorCQkgKiBUcnVuY2F0ZSAnbWF4JyB0byB0aGUgdXNl
ci1zcGVjaWZpZWQgbGltaXQsIHNvIHRoYXQNCisJCSAqIHdlIG9ubHkgaGF2ZSBvbmUgbGltaXQg
d2UgbmVlZCB0byBjaGVjayBpbiB0aGUgbG9vcA0KKwkJICovDQorCQlpZiAobWF4ID4gY291bnQp
DQorCQkJbWF4ID0gY291bnQ7DQorDQogCQlpZiAodXNlcl9hY2Nlc3NfYmVnaW4oVkVSSUZZX1JF
QUQsIHN0ciwgbWF4KSkgew0KIAkJCXJldHZhbCA9IGRvX3N0cm5sZW5fdXNlcihzdHIsIGNvdW50
LCBtYXgpOw0KIAkJCXVzZXJfYWNjZXNzX2VuZCgpOw0KLS0gDQoyLjE4LjANCg0K

--=-mcAE5rUqEqycHV/rZMLL--

