Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 128277B9CE
	for <lists+stable@lfdr.de>; Wed, 31 Jul 2019 08:41:47 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726096AbfGaGlq (ORCPT <rfc822;lists+stable@lfdr.de>);
        Wed, 31 Jul 2019 02:41:46 -0400
Received: from mail-eopbgr1310090.outbound.protection.outlook.com ([40.107.131.90]:20864
        "EHLO APC01-SG2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2387458AbfGaGlp (ORCPT <rfc822;stable@vger.kernel.org>);
        Wed, 31 Jul 2019 02:41:45 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=lpKCTox6YhvreKPclMospdyF7nA9YFKYQTrgBqF6FMdydkucNxyHPgEO1NgXCXriWGutdRi8NauGczDMOswwygU9pWNHtr9BnaML5/CysZC1BqV81m5txbKwTLlBcr2M0PcCETIjr4hqTFGZYXtXbOgtX9+iSzl8qDsEmffdNAUileDlD0EXBqNvUL3CHzQ7ucHmJduZGpkNv0E8pXklpc/kCRHNX3mw5gsHREfFvgvlB+yxc9oZ4NATII7yaafNVWVAU8ziuXX+CZhJliNs4HYZ7jA2ejCpotSzBLcuDKh5hpI1nsEDWo77br4YCrea/j2kM56O9Cverd3RDqFm4g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FIFJwDEWXQ2Ml0cT3qIne+zb4T0y/WX7vpN8KDR8QS8=;
 b=Ir3KuRW3oE1B4jYNjCOqozlxr7M/+hOZD0HfVg2PnCvaDRTrn5ci1mcdnahe3+at8C9+R3Q7OE0CK53HopsEKDpdrIqdkS9TidaTIDTi9Rcg9hjnS8CZi1yXhsp3tABwFXBqsJ8JCTSFFgYPskvx9BBTu2WqlR5ZINRGUM3p4fbX7y43jmRn14+aDX8vdyqfzuAWENZiWILegTHvG84bNcPiULO8HZnHYEE/4HQUjt7oKFfoVyTSLnOqu1UoTierk0Wqk2XbiFu8rqsuSsyER+JNNHgAMl0bHjx3kYVgAHlF8xy0bKmvuYyv4Br3deJeVYeTmQgvmd32vDbvRwj1zQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=microsoft.com; dmarc=pass action=none
 header.from=microsoft.com; dkim=pass header.d=microsoft.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FIFJwDEWXQ2Ml0cT3qIne+zb4T0y/WX7vpN8KDR8QS8=;
 b=boBhUXJmSakJxNpXMmjUSRtPISXC8WpJvox7ehrjdn2rPBaEaNeEJER2QF/1jeZPvwNaCYiYSQL8m+9tbwvkL0RRcJsZOo72GZCbHl90R2GlCRYmBZGG+3Pq6W12POJc3RcOw1qmAadsHdk3Z880kgHQ0XwWyYVF7zLulaaBklI=
Received: from PU1P153MB0169.APCP153.PROD.OUTLOOK.COM (10.170.189.13) by
 PU1P153MB0106.APCP153.PROD.OUTLOOK.COM (10.170.188.11) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2157.2; Wed, 31 Jul 2019 06:41:10 +0000
Received: from PU1P153MB0169.APCP153.PROD.OUTLOOK.COM
 ([fe80::d44e:57b7:d8fc:e91c]) by PU1P153MB0169.APCP153.PROD.OUTLOOK.COM
 ([fe80::d44e:57b7:d8fc:e91c%8]) with mapi id 15.20.2157.001; Wed, 31 Jul 2019
 06:41:10 +0000
From:   Dexuan Cui <decui@microsoft.com>
To:     "stable@vger.kernel.org" <stable@vger.kernel.org>
CC:     Sunil Muthuswamy <sunilmut@microsoft.com>,
        "David S. Miller" <davem@davemloft.net>,
        Sasha Levin <sashal@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Stefan Hajnoczi <stefanha@redhat.com>
Subject: Request vsock and hv_sock patches to be backported for linux-5.2.y,
 linux-4.19.y and linux-4.14.y
Thread-Topic: Request vsock and hv_sock patches to be backported for
 linux-5.2.y, linux-4.19.y and linux-4.14.y
Thread-Index: AdVHaAlBhKMGz6x7RwyqqOSVvoXnvQ==
Date:   Wed, 31 Jul 2019 06:41:10 +0000
Message-ID: <PU1P153MB0169AD4EB10548EACCED82C2BFDF0@PU1P153MB0169.APCP153.PROD.OUTLOOK.COM>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
msip_labels: MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_Enabled=True;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_SiteId=72f988bf-86f1-41af-91ab-2d7cd011db47;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_Owner=decui@microsoft.com;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_SetDate=2019-07-31T06:41:08.0195895Z;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_Name=General;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_Application=Microsoft Azure
 Information Protection;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_ActionId=2b46cac3-39fd-4796-9cf5-8dce2bc97bf9;
 MSIP_Label_f42aa342-8706-4288-bd11-ebb85995028c_Extended_MSFT_Method=Automatic
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=decui@microsoft.com; 
x-originating-ip: [2601:600:a280:1760:6d6a:3845:143:65ca]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 64a90eb8-2628-4e24-9e24-08d715821307
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600148)(711020)(4605104)(1401327)(4618075)(2017052603328)(49563074)(7193020);SRVR:PU1P153MB0106;
x-ms-traffictypediagnostic: PU1P153MB0106:|PU1P153MB0106:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <PU1P153MB010673EF488796EB4DB6A20DBFDF0@PU1P153MB0106.APCP153.PROD.OUTLOOK.COM>
x-ms-oob-tlc-oobclassifiers: OLM:10000;
x-forefront-prvs: 011579F31F
x-forefront-antispam-report: SFV:NSPM;SFS:(10019020)(4636009)(346002)(376002)(396003)(39860400002)(136003)(366004)(199004)(189003)(66476007)(66946007)(305945005)(81166006)(8936002)(2351001)(71200400001)(74316002)(4326008)(256004)(2906002)(5024004)(14444005)(8676002)(54906003)(10090500001)(8990500004)(25786009)(316002)(99286004)(1730700003)(22452003)(68736007)(7736002)(6916009)(86362001)(53936002)(71190400001)(81156014)(6116002)(99936001)(55016002)(186003)(7696005)(6506007)(66446008)(10290500003)(486006)(46003)(5640700003)(102836004)(478600001)(52536014)(476003)(33656002)(14454004)(9686003)(2501003)(66556008)(64756008)(76116006)(66616009)(6436002)(5660300002)(72063004)(87944003);DIR:OUT;SFP:1102;SCL:1;SRVR:PU1P153MB0106;H:PU1P153MB0169.APCP153.PROD.OUTLOOK.COM;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: microsoft.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: uDsgkP+JWKtMYlvCiCRSoYKEGjt+Nwpl5OuLNRZrUTTF/RwSX62vdqBZsZWdxMrMe5FCr9iPsbkEeHPXOcuQnuvY94d4wb9NBASBifJY4E8RVgPnTj1/N/dtIXoFLp4uZyhzGhqeHzR2RIGLM5gg4YMhHZcra59kIDp0Vv0cbolvizY0+4INwkf6o5OLUDAXH4pqgaXb15s1OQ1jAeusFDqMdMWP/SafO0ad62l3al/HEUCanuD8mCOkdg7eaGHikrpN4ADaFpZIAZwtMxVbRKYDQokcgSozyKvpV9tabOGQyneS9O+9vlMUA9ekOt+nqba1ZD/MeA0naygJ258mIhqbQWykaKzQbgItyzRu1/5GR152DGMi5CYssawOAKQg77CrtkhJhgq79GXOw3pzMG3Fcd3TXzniCFxE8dttDjY=
Content-Type: multipart/mixed;
        boundary="_002_PU1P153MB0169AD4EB10548EACCED82C2BFDF0PU1P153MB0169APCP_"
MIME-Version: 1.0
X-OriginatorOrg: microsoft.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 64a90eb8-2628-4e24-9e24-08d715821307
X-MS-Exchange-CrossTenant-originalarrivaltime: 31 Jul 2019 06:41:10.1434
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 72f988bf-86f1-41af-91ab-2d7cd011db47
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: z+xgeB3FlQdoci92jroJQT6QU9yFyk6gQvwUX1etToazYuXXaFw6nzH/v/U8LitHM/Tmqgki+EFABiXmeNoQbw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PU1P153MB0106
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

--_002_PU1P153MB0169AD4EB10548EACCED82C2BFDF0PU1P153MB0169APCP_
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

Hi,
Sunil Muthuswamy <sunilmut@microsoft.com> made some important fixes for
hv_sock recently. I and Sunil think it would be great to backport the
fixes to the longterm stable kernels.

Since hv_sock was firstly introduced in v4.14, we only care about
v4.14, v4.19 and v5.2.

For linux-5.2.y (currently it's v5.2.4), only one patch is missing.
The mainline commit ID is:
        d5afa82c977e ("vsock: correct removal of socket from the list")
It can be cleanly cherry-picked from the mainline.


For linux-4.19.y (currently it's v4.19.62), 3 patches are missing.
The mainline commit IDs are:
        cb359b604167 ("hvsock: fix epollout hang from race condition")
        a9eeb998c28d ("hv_sock: Add support for delayed close")
        d5afa82c977e ("vsock: correct removal of socket from the list")
They can be cleanly cherry-picked from the mainline, in the listed order he=
re.
Note: it looks the first commit (cb359b604167) has been queued.


For linux-4.14.y (currently it's v4.14.134), 4 patches are missing.
The mainline commit IDs are:
        cb359b604167 ("hvsock: fix epollout hang from race condition")
        3b4477d2dcf2 ("VSOCK: use TCP state constants for sk_state")
        a9eeb998c28d ("hv_sock: Add support for delayed close")
        d5afa82c977e ("vsock: correct removal of socket from the list")
The third patch (a9eeb998c28d) needs small manual adjustments, and please
use the attached backported patch for it; the other 3 patches can be cleanl=
y
cherry-picked from the mainline, in the listed order here.
Note: it looks the first commit (cb359b604167) has been queued.

Please let me know, if any clarification is needed.

Thanks!
-- Dexuan


--_002_PU1P153MB0169AD4EB10548EACCED82C2BFDF0PU1P153MB0169APCP_
Content-Type: application/octet-stream;
	name="for-v4.14.134-0001-VSOCK-use-TCP-state-constants-for-sk_state.patch"
Content-Description:
 for-v4.14.134-0001-VSOCK-use-TCP-state-constants-for-sk_state.patch
Content-Disposition: attachment;
	filename="for-v4.14.134-0001-VSOCK-use-TCP-state-constants-for-sk_state.patch";
	size=20111; creation-date="Wed, 31 Jul 2019 06:21:42 GMT";
	modification-date="Wed, 31 Jul 2019 06:21:42 GMT"
Content-Transfer-Encoding: base64

RnJvbSA4ZDcwOGZmN2UxY2NjYThmYzAyYTU2MjM0MWNjN2Q3ODY1NTU5NWJkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdGVmYW4gSGFqbm9jemkgPHN0ZWZhbmhhQHJlZGhhdC5jb20+
CkRhdGU6IFRodSwgNSBPY3QgMjAxNyAxNjo0Njo1MiAtMDQwMApTdWJqZWN0OiBbUEFUQ0hdIFZT
T0NLOiB1c2UgVENQIHN0YXRlIGNvbnN0YW50cyBmb3Igc2tfc3RhdGUKClRoZXJlIGFyZSB0d28g
c3RhdGUgZmllbGRzOiBzb2NrZXQtPnN0YXRlIGFuZCBzb2NrLT5za19zdGF0ZS4gIFRoZQpzb2Nr
ZXQtPnN0YXRlIGZpZWxkIHVzZXMgU1NfVU5DT05ORUNURUQsIFNTX0NPTk5FQ1RFRCwgZXRjIHdo
aWxlIHRoZQpzb2NrLT5za19zdGF0ZSB0eXBpY2FsbHkgdXNlcyB2YWx1ZXMgdGhhdCBtYXRjaCBU
Q1Agc3RhdGUgY29uc3RhbnRzCihUQ1BfQ0xPU0UsIFRDUF9FU1RBQkxJU0hFRCkuICBBRl9WU09D
SyBkb2VzIG5vdCBmb2xsb3cgdGhpcyBjb252ZW50aW9uCmFuZCBpbnN0ZWFkIHVzZXMgU1NfKiBj
b25zdGFudHMgZm9yIGJvdGggZmllbGRzLgoKVGhlIHNrX3N0YXRlIGZpZWxkIHdpbGwgYmUgZXhw
b3NlZCB0byB1c2Vyc3BhY2UgdGhyb3VnaCB0aGUgdnNvY2tfZGlhZwppbnRlcmZhY2UgZm9yIHNz
KDgpLCBuZXRzdGF0KDgpLCBhbmQgb3RoZXIgcHJvZ3JhbXMuCgpUaGlzIHBhdGNoIHN3aXRjaGVz
IHNrX3N0YXRlIHRvIFRDUCBzdGF0ZSBjb25zdGFudHMgc28gdGhhdCB0aGUgbWVhbmluZwpvZiB0
aGlzIGZpZWxkIGlzIGNvbnNpc3RlbnQgd2l0aCBvdGhlciBhZGRyZXNzIGZhbWlsaWVzLiAgTm90
IGp1c3QKQUZfSU5FVCBhbmQgQUZfSU5FVDYgdXNlIHRoZSBUQ1AgY29uc3RhbnRzLCBBRl9VTklY
IGFuZCBvdGhlcnMgZG8gdG9vLgoKVGhlIGZvbGxvd2luZyBtYXBwaW5nIHdhcyB1c2VkIHRvIGNv
bnZlcnQgdGhlIGNvZGU6CgogIFNTX0ZSRUUgLT4gVENQX0NMT1NFCiAgU1NfVU5DT05ORUNURUQg
LT4gVENQX0NMT1NFCiAgU1NfQ09OTkVDVElORyAtPiBUQ1BfU1lOX1NFTlQKICBTU19DT05ORUNU
RUQgLT4gVENQX0VTVEFCTElTSEVECiAgU1NfRElTQ09OTkVDVElORyAtPiBUQ1BfQ0xPU0lORwog
IFZTT0NLX1NTX0xJU1RFTiAtPiBUQ1BfTElTVEVOCgpJbiBfX3Zzb2NrX2NyZWF0ZSgpIHRoZSBz
a19zdGF0ZSBpbml0aWFsaXphdGlvbiB3YXMgZHJvcHBlZCBiZWNhdXNlCnNvY2tfaW5pdF9kYXRh
KCkgYWxyZWFkeSBpbml0aWFsaXplcyBza19zdGF0ZSB0byBUQ1BfQ0xPU0UuCgpTaWduZWQtb2Zm
LWJ5OiBTdGVmYW4gSGFqbm9jemkgPHN0ZWZhbmhhQHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6
IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KCkJhY2twb3J0ZWQgZnJvbToK
WyBVcHN0cmVhbSBjb21taXQgM2I0NDc3ZDJkY2YyNzA5ZDBiZTg5ZTJhOGRjZWQzZDBmNGEwMTdm
MiBdCgpBZGp1c3RlZCBuZXQvdm13X3Zzb2NrL2h5cGVydl90cmFuc3BvcnQuYyBzaW5jZSB0aGUg
Y29tbWl0CmI0NTYyY2E3OTI1YSAoImh2X3NvY2s6IGFkZCBsb2NraW5nIGluIHRoZSBvcGVuL2Ns
b3NlL3JlbGVhc2UgY29kZSBwYXRocyIpCmFuZCB0aGUgY29tbWl0CmM5ZDNmZTlkYTA5NCAoIlZT
T0NLOiBmaXggb3V0ZGF0ZWQgc2tfc3RhdGUgdmFsdWUgaW4gaHZzX3JlbGVhc2UoKSIpCndlcmUg
YmFja3BvcnRlZCBiZWZvcmUgM2I0NDc3ZDJkY2YyLgoKU2lnbmVkLW9mZi1ieTogRGV4dWFuIEN1
aSA8ZGVjdWlAbWljcm9zb2Z0LmNvbT4KLS0tCiBpbmNsdWRlL25ldC9hZl92c29jay5oICAgICAg
ICAgICAgICAgICAgICAgICB8ICAzIC0tCiBuZXQvdm13X3Zzb2NrL2FmX3Zzb2NrLmMgICAgICAg
ICAgICAgICAgICAgICB8IDQ2ICsrKysrKysrKysrKy0tLS0tLS0tCiBuZXQvdm13X3Zzb2NrL2h5
cGVydl90cmFuc3BvcnQuYyAgICAgICAgICAgICB8IDEyICsrLS0tCiBuZXQvdm13X3Zzb2NrL3Zp
cnRpb190cmFuc3BvcnQuYyAgICAgICAgICAgICB8ICAyICstCiBuZXQvdm13X3Zzb2NrL3ZpcnRp
b190cmFuc3BvcnRfY29tbW9uLmMgICAgICB8IDIyICsrKysrLS0tLS0KIG5ldC92bXdfdnNvY2sv
dm1jaV90cmFuc3BvcnQuYyAgICAgICAgICAgICAgIHwgMzQgKysrKysrKy0tLS0tLS0tCiBuZXQv
dm13X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0X25vdGlmeS5jICAgICAgICB8ICAyICstCiBuZXQvdm13
X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0X25vdGlmeV9xc3RhdGUuYyB8ICAyICstCiA4IGZpbGVzIGNo
YW5nZWQsIDY0IGluc2VydGlvbnMoKyksIDU5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUvbmV0L2FmX3Zzb2NrLmggYi9pbmNsdWRlL25ldC9hZl92c29jay5oCmluZGV4IDVmYjNm
NjM2MTA5MC4uZDM3NzViNTM3OWU0IDEwMDY0NAotLS0gYS9pbmNsdWRlL25ldC9hZl92c29jay5o
CisrKyBiL2luY2x1ZGUvbmV0L2FmX3Zzb2NrLmgKQEAgLTIyLDkgKzIyLDYgQEAKIAogI2luY2x1
ZGUgInZzb2NrX2FkZHIuaCIKIAotLyogdnNvY2stc3BlY2lmaWMgc29jay0+c2tfc3RhdGUgY29u
c3RhbnRzICovCi0jZGVmaW5lIFZTT0NLX1NTX0xJU1RFTiAyNTUKLQogI2RlZmluZSBMQVNUX1JF
U0VSVkVEX1BPUlQgMTAyMwogCiAjZGVmaW5lIHZzb2NrX3NrKF9fc2spICAgICgoc3RydWN0IHZz
b2NrX3NvY2sgKilfX3NrKQpkaWZmIC0tZ2l0IGEvbmV0L3Ztd192c29jay9hZl92c29jay5jIGIv
bmV0L3Ztd192c29jay9hZl92c29jay5jCmluZGV4IGYyZmQ1NTZjMTIzMy4uOTY5YjQyOGVlODFm
IDEwMDY0NAotLS0gYS9uZXQvdm13X3Zzb2NrL2FmX3Zzb2NrLmMKKysrIGIvbmV0L3Ztd192c29j
ay9hZl92c29jay5jCkBAIC0zNiw3ICszNiw3IEBACiAgKiBub3Qgc3VwcG9ydCBzaW11bHRhbmVv
dXMgY29ubmVjdHMgKHR3byAiY2xpZW50IiBzb2NrZXRzIGNvbm5lY3RpbmcpLgogICoKICAqIC0g
IlNlcnZlciIgc29ja2V0cyBhcmUgcmVmZXJyZWQgdG8gYXMgbGlzdGVuZXIgc29ja2V0cyB0aHJv
dWdob3V0IHRoaXMKLSAqIGltcGxlbWVudGF0aW9uIGJlY2F1c2UgdGhleSBhcmUgaW4gdGhlIFZT
T0NLX1NTX0xJU1RFTiBzdGF0ZS4gIFdoZW4gYQorICogaW1wbGVtZW50YXRpb24gYmVjYXVzZSB0
aGV5IGFyZSBpbiB0aGUgVENQX0xJU1RFTiBzdGF0ZS4gIFdoZW4gYQogICogY29ubmVjdGlvbiBy
ZXF1ZXN0IGlzIHJlY2VpdmVkICh0aGUgc2Vjb25kIGtpbmQgb2Ygc29ja2V0IG1lbnRpb25lZCBh
Ym92ZSksCiAgKiB3ZSBjcmVhdGUgYSBuZXcgc29ja2V0IGFuZCByZWZlciB0byBpdCBhcyBhIHBl
bmRpbmcgc29ja2V0LiAgVGhlc2UgcGVuZGluZwogICogc29ja2V0cyBhcmUgcGxhY2VkIG9uIHRo
ZSBwZW5kaW5nIGNvbm5lY3Rpb24gbGlzdCBvZiB0aGUgbGlzdGVuZXIgc29ja2V0LgpAQCAtODIs
NiArODIsMTUgQEAKICAqIGFyZ3VtZW50LCB3ZSBtdXN0IGVuc3VyZSB0aGUgcmVmZXJlbmNlIGNv
dW50IGlzIGluY3JlYXNlZCB0byBlbnN1cmUgdGhlCiAgKiBzb2NrZXQgaXNuJ3QgZnJlZWQgYmVm
b3JlIHRoZSBmdW5jdGlvbiBpcyBydW47IHRoZSBkZWZlcnJlZCBmdW5jdGlvbiB3aWxsCiAgKiB0
aGVuIGRyb3AgdGhlIHJlZmVyZW5jZS4KKyAqCisgKiAtIHNrLT5za19zdGF0ZSB1c2VzIHRoZSBU
Q1Agc3RhdGUgY29uc3RhbnRzIGJlY2F1c2UgdGhleSBhcmUgd2lkZWx5IHVzZWQgYnkKKyAqIG90
aGVyIGFkZHJlc3MgZmFtaWxpZXMgYW5kIGV4cG9zZWQgdG8gdXNlcnNwYWNlIHRvb2xzIGxpa2Ug
c3MoOCk6CisgKgorICogICBUQ1BfQ0xPU0UgLSB1bmNvbm5lY3RlZAorICogICBUQ1BfU1lOX1NF
TlQgLSBjb25uZWN0aW5nCisgKiAgIFRDUF9FU1RBQkxJU0hFRCAtIGNvbm5lY3RlZAorICogICBU
Q1BfQ0xPU0lORyAtIGRpc2Nvbm5lY3RpbmcKKyAqICAgVENQX0xJU1RFTiAtIGxpc3RlbmluZwog
ICovCiAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgpAQCAtNDg1LDcgKzQ5NCw3IEBAIHN0YXRp
YyB2b2lkIHZzb2NrX3BlbmRpbmdfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJaWYg
KHZzb2NrX2luX2Nvbm5lY3RlZF90YWJsZSh2c2spKQogCQl2c29ja19yZW1vdmVfY29ubmVjdGVk
KHZzayk7CiAKLQlzay0+c2tfc3RhdGUgPSBTU19GUkVFOworCXNrLT5za19zdGF0ZSA9IFRDUF9D
TE9TRTsKIAogb3V0OgogCXJlbGVhc2Vfc29jayhzayk7CkBAIC02MjYsNyArNjM1LDYgQEAgc3Ry
dWN0IHNvY2sgKl9fdnNvY2tfY3JlYXRlKHN0cnVjdCBuZXQgKm5ldCwKIAogCXNrLT5za19kZXN0
cnVjdCA9IHZzb2NrX3NrX2Rlc3RydWN0OwogCXNrLT5za19iYWNrbG9nX3JjdiA9IHZzb2NrX3F1
ZXVlX3Jjdl9za2I7Ci0Jc2stPnNrX3N0YXRlID0gMDsKIAlzb2NrX3Jlc2V0X2ZsYWcoc2ssIFNP
Q0tfRE9ORSk7CiAKIAlJTklUX0xJU1RfSEVBRCgmdnNrLT5ib3VuZF90YWJsZSk7CkBAIC05MDIs
NyArOTEwLDcgQEAgc3RhdGljIHVuc2lnbmVkIGludCB2c29ja19wb2xsKHN0cnVjdCBmaWxlICpm
aWxlLCBzdHJ1Y3Qgc29ja2V0ICpzb2NrLAogCQkvKiBMaXN0ZW5pbmcgc29ja2V0cyB0aGF0IGhh
dmUgY29ubmVjdGlvbnMgaW4gdGhlaXIgYWNjZXB0CiAJCSAqIHF1ZXVlIGNhbiBiZSByZWFkLgog
CQkgKi8KLQkJaWYgKHNrLT5za19zdGF0ZSA9PSBWU09DS19TU19MSVNURU4KKwkJaWYgKHNrLT5z
a19zdGF0ZSA9PSBUQ1BfTElTVEVOCiAJCSAgICAmJiAhdnNvY2tfaXNfYWNjZXB0X3F1ZXVlX2Vt
cHR5KHNrKSkKIAkJCW1hc2sgfD0gUE9MTElOIHwgUE9MTFJETk9STTsKIApAQCAtOTMxLDcgKzkz
OSw3IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgdnNvY2tfcG9sbChzdHJ1Y3QgZmlsZSAqZmlsZSwg
c3RydWN0IHNvY2tldCAqc29jaywKIAkJfQogCiAJCS8qIENvbm5lY3RlZCBzb2NrZXRzIHRoYXQg
Y2FuIHByb2R1Y2UgZGF0YSBjYW4gYmUgd3JpdHRlbi4gKi8KLQkJaWYgKHNrLT5za19zdGF0ZSA9
PSBTU19DT05ORUNURUQpIHsKKwkJaWYgKHNrLT5za19zdGF0ZSA9PSBUQ1BfRVNUQUJMSVNIRUQp
IHsKIAkJCWlmICghKHNrLT5za19zaHV0ZG93biAmIFNFTkRfU0hVVERPV04pKSB7CiAJCQkJYm9v
bCBzcGFjZV9hdmFpbF9ub3cgPSBmYWxzZTsKIAkJCQlpbnQgcmV0ID0gdHJhbnNwb3J0LT5ub3Rp
ZnlfcG9sbF9vdXQoCkBAIC05NTMsNyArOTYxLDcgQEAgc3RhdGljIHVuc2lnbmVkIGludCB2c29j
a19wb2xsKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3Qgc29ja2V0ICpzb2NrLAogCQkgKiBQT0xM
T1VUfFBPTExXUk5PUk0gd2hlbiBwZWVyIGlzIGNsb3NlZCBhbmQgbm90aGluZyB0byByZWFkLAog
CQkgKiBidXQgbG9jYWwgc2VuZCBpcyBub3Qgc2h1dGRvd24uCiAJCSAqLwotCQlpZiAoc2stPnNr
X3N0YXRlID09IFNTX1VOQ09OTkVDVEVEKSB7CisJCWlmIChzay0+c2tfc3RhdGUgPT0gVENQX0NM
T1NFKSB7CiAJCQlpZiAoIShzay0+c2tfc2h1dGRvd24gJiBTRU5EX1NIVVRET1dOKSkKIAkJCQlt
YXNrIHw9IFBPTExPVVQgfCBQT0xMV1JOT1JNOwogCkBAIC0xMTIzLDkgKzExMzEsOSBAQCBzdGF0
aWMgdm9pZCB2c29ja19jb25uZWN0X3RpbWVvdXQoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQog
CXNrID0gc2tfdnNvY2sodnNrKTsKIAogCWxvY2tfc29jayhzayk7Ci0JaWYgKHNrLT5za19zdGF0
ZSA9PSBTU19DT05ORUNUSU5HICYmCisJaWYgKHNrLT5za19zdGF0ZSA9PSBUQ1BfU1lOX1NFTlQg
JiYKIAkgICAgKHNrLT5za19zaHV0ZG93biAhPSBTSFVURE9XTl9NQVNLKSkgewotCQlzay0+c2tf
c3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKKwkJc2stPnNrX3N0YXRlID0gVENQX0NMT1NFOwogCQlz
ay0+c2tfZXJyID0gRVRJTUVET1VUOwogCQlzay0+c2tfZXJyb3JfcmVwb3J0KHNrKTsKIAkJY2Fu
Y2VsID0gMTsKQEAgLTExNzEsNyArMTE3OSw3IEBAIHN0YXRpYyBpbnQgdnNvY2tfc3RyZWFtX2Nv
bm5lY3Qoc3RydWN0IHNvY2tldCAqc29jaywgc3RydWN0IHNvY2thZGRyICphZGRyLAogCQllcnIg
PSAtRUFMUkVBRFk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6Ci0JCWlmICgoc2stPnNrX3N0YXRlID09
IFZTT0NLX1NTX0xJU1RFTikgfHwKKwkJaWYgKChzay0+c2tfc3RhdGUgPT0gVENQX0xJU1RFTikg
fHwKIAkJICAgIHZzb2NrX2FkZHJfY2FzdChhZGRyLCBhZGRyX2xlbiwgJnJlbW90ZV9hZGRyKSAh
PSAwKSB7CiAJCQllcnIgPSAtRUlOVkFMOwogCQkJZ290byBvdXQ7CkBAIC0xMTk0LDcgKzEyMDIs
NyBAQCBzdGF0aWMgaW50IHZzb2NrX3N0cmVhbV9jb25uZWN0KHN0cnVjdCBzb2NrZXQgKnNvY2ss
IHN0cnVjdCBzb2NrYWRkciAqYWRkciwKIAkJaWYgKGVycikKIAkJCWdvdG8gb3V0OwogCi0JCXNr
LT5za19zdGF0ZSA9IFNTX0NPTk5FQ1RJTkc7CisJCXNrLT5za19zdGF0ZSA9IFRDUF9TWU5fU0VO
VDsKIAogCQllcnIgPSB0cmFuc3BvcnQtPmNvbm5lY3QodnNrKTsKIAkJaWYgKGVyciA8IDApCkBA
IC0xMjE0LDcgKzEyMjIsNyBAQCBzdGF0aWMgaW50IHZzb2NrX3N0cmVhbV9jb25uZWN0KHN0cnVj
dCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBzb2NrYWRkciAqYWRkciwKIAl0aW1lb3V0ID0gdnNrLT5j
b25uZWN0X3RpbWVvdXQ7CiAJcHJlcGFyZV90b193YWl0KHNrX3NsZWVwKHNrKSwgJndhaXQsIFRB
U0tfSU5URVJSVVBUSUJMRSk7CiAKLQl3aGlsZSAoc2stPnNrX3N0YXRlICE9IFNTX0NPTk5FQ1RF
RCAmJiBzay0+c2tfZXJyID09IDApIHsKKwl3aGlsZSAoc2stPnNrX3N0YXRlICE9IFRDUF9FU1RB
QkxJU0hFRCAmJiBzay0+c2tfZXJyID09IDApIHsKIAkJaWYgKGZsYWdzICYgT19OT05CTE9DSykg
ewogCQkJLyogSWYgd2UncmUgbm90IGdvaW5nIHRvIGJsb2NrLCB3ZSBzY2hlZHVsZSBhIHRpbWVv
dXQKIAkJCSAqIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIGEgdGltZW91dCBvbiB0aGUgY29ubmVjdGlv
bgpAQCAtMTIzNSwxMyArMTI0MywxMyBAQCBzdGF0aWMgaW50IHZzb2NrX3N0cmVhbV9jb25uZWN0
KHN0cnVjdCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBzb2NrYWRkciAqYWRkciwKIAogCQlpZiAoc2ln
bmFsX3BlbmRpbmcoY3VycmVudCkpIHsKIAkJCWVyciA9IHNvY2tfaW50cl9lcnJubyh0aW1lb3V0
KTsKLQkJCXNrLT5za19zdGF0ZSA9IFNTX1VOQ09OTkVDVEVEOworCQkJc2stPnNrX3N0YXRlID0g
VENQX0NMT1NFOwogCQkJc29jay0+c3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKIAkJCXZzb2NrX3Ry
YW5zcG9ydF9jYW5jZWxfcGt0KHZzayk7CiAJCQlnb3RvIG91dF93YWl0OwogCQl9IGVsc2UgaWYg
KHRpbWVvdXQgPT0gMCkgewogCQkJZXJyID0gLUVUSU1FRE9VVDsKLQkJCXNrLT5za19zdGF0ZSA9
IFNTX1VOQ09OTkVDVEVEOworCQkJc2stPnNrX3N0YXRlID0gVENQX0NMT1NFOwogCQkJc29jay0+
c3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKIAkJCXZzb2NrX3RyYW5zcG9ydF9jYW5jZWxfcGt0KHZz
ayk7CiAJCQlnb3RvIG91dF93YWl0OwpAQCAtMTI1Miw3ICsxMjYwLDcgQEAgc3RhdGljIGludCB2
c29ja19zdHJlYW1fY29ubmVjdChzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBzdHJ1Y3Qgc29ja2FkZHIg
KmFkZHIsCiAKIAlpZiAoc2stPnNrX2VycikgewogCQllcnIgPSAtc2stPnNrX2VycjsKLQkJc2st
PnNrX3N0YXRlID0gU1NfVU5DT05ORUNURUQ7CisJCXNrLT5za19zdGF0ZSA9IFRDUF9DTE9TRTsK
IAkJc29jay0+c3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKIAl9IGVsc2UgewogCQllcnIgPSAwOwpA
QCAtMTI4NSw3ICsxMjkzLDcgQEAgc3RhdGljIGludCB2c29ja19hY2NlcHQoc3RydWN0IHNvY2tl
dCAqc29jaywgc3RydWN0IHNvY2tldCAqbmV3c29jaywgaW50IGZsYWdzLAogCQlnb3RvIG91dDsK
IAl9CiAKLQlpZiAobGlzdGVuZXItPnNrX3N0YXRlICE9IFZTT0NLX1NTX0xJU1RFTikgeworCWlm
IChsaXN0ZW5lci0+c2tfc3RhdGUgIT0gVENQX0xJU1RFTikgewogCQllcnIgPSAtRUlOVkFMOwog
CQlnb3RvIG91dDsKIAl9CkBAIC0xMzc1LDcgKzEzODMsNyBAQCBzdGF0aWMgaW50IHZzb2NrX2xp
c3RlbihzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBpbnQgYmFja2xvZykKIAl9CiAKIAlzay0+c2tfbWF4
X2Fja19iYWNrbG9nID0gYmFja2xvZzsKLQlzay0+c2tfc3RhdGUgPSBWU09DS19TU19MSVNURU47
CisJc2stPnNrX3N0YXRlID0gVENQX0xJU1RFTjsKIAogCWVyciA9IDA7CiAKQEAgLTE1NTUsNyAr
MTU2Myw3IEBAIHN0YXRpYyBpbnQgdnNvY2tfc3RyZWFtX3NlbmRtc2coc3RydWN0IHNvY2tldCAq
c29jaywgc3RydWN0IG1zZ2hkciAqbXNnLAogCiAJLyogQ2FsbGVycyBzaG91bGQgbm90IHByb3Zp
ZGUgYSBkZXN0aW5hdGlvbiB3aXRoIHN0cmVhbSBzb2NrZXRzLiAqLwogCWlmIChtc2ctPm1zZ19u
YW1lbGVuKSB7Ci0JCWVyciA9IHNrLT5za19zdGF0ZSA9PSBTU19DT05ORUNURUQgPyAtRUlTQ09O
TiA6IC1FT1BOT1RTVVBQOworCQllcnIgPSBzay0+c2tfc3RhdGUgPT0gVENQX0VTVEFCTElTSEVE
ID8gLUVJU0NPTk4gOiAtRU9QTk9UU1VQUDsKIAkJZ290byBvdXQ7CiAJfQogCkBAIC0xNTY2LDcg
KzE1NzQsNyBAQCBzdGF0aWMgaW50IHZzb2NrX3N0cmVhbV9zZW5kbXNnKHN0cnVjdCBzb2NrZXQg
KnNvY2ssIHN0cnVjdCBtc2doZHIgKm1zZywKIAkJZ290byBvdXQ7CiAJfQogCi0JaWYgKHNrLT5z
a19zdGF0ZSAhPSBTU19DT05ORUNURUQgfHwKKwlpZiAoc2stPnNrX3N0YXRlICE9IFRDUF9FU1RB
QkxJU0hFRCB8fAogCSAgICAhdnNvY2tfYWRkcl9ib3VuZCgmdnNrLT5sb2NhbF9hZGRyKSkgewog
CQllcnIgPSAtRU5PVENPTk47CiAJCWdvdG8gb3V0OwpAQCAtMTY5MCw3ICsxNjk4LDcgQEAgdnNv
Y2tfc3RyZWFtX3JlY3Ztc2coc3RydWN0IHNvY2tldCAqc29jaywgc3RydWN0IG1zZ2hkciAqbXNn
LCBzaXplX3QgbGVuLAogCiAJbG9ja19zb2NrKHNrKTsKIAotCWlmIChzay0+c2tfc3RhdGUgIT0g
U1NfQ09OTkVDVEVEKSB7CisJaWYgKHNrLT5za19zdGF0ZSAhPSBUQ1BfRVNUQUJMSVNIRUQpIHsK
IAkJLyogUmVjdm1zZyBpcyBzdXBwb3NlZCB0byByZXR1cm4gMCBpZiBhIHBlZXIgcGVyZm9ybXMg
YW4KIAkJICogb3JkZXJseSBzaHV0ZG93bi4gRGlmZmVyZW50aWF0ZSBiZXR3ZWVuIHRoYXQgY2Fz
ZSBhbmQgd2hlbiBhCiAJCSAqIHBlZXIgaGFzIG5vdCBjb25uZWN0ZWQgb3IgYSBsb2NhbCBzaHV0
ZG93biBvY2N1cmVkIHdpdGggdGhlCmRpZmYgLS1naXQgYS9uZXQvdm13X3Zzb2NrL2h5cGVydl90
cmFuc3BvcnQuYyBiL25ldC92bXdfdnNvY2svaHlwZXJ2X3RyYW5zcG9ydC5jCmluZGV4IGFiZTcz
MzQ4M2IyNC4uMmE0Mzc5NjYzZTc1IDEwMDY0NAotLS0gYS9uZXQvdm13X3Zzb2NrL2h5cGVydl90
cmFuc3BvcnQuYworKysgYi9uZXQvdm13X3Zzb2NrL2h5cGVydl90cmFuc3BvcnQuYwpAQCAtMjk3
LDcgKzI5Nyw3IEBAIHN0YXRpYyB2b2lkIGh2c19jbG9zZV9jb25uZWN0aW9uKHN0cnVjdCB2bWJ1
c19jaGFubmVsICpjaGFuKQogCiAJbG9ja19zb2NrKHNrKTsKIAotCXNrLT5za19zdGF0ZSA9IFNT
X1VOQ09OTkVDVEVEOworCXNrLT5za19zdGF0ZSA9IFRDUF9DTE9TRTsKIAlzb2NrX3NldF9mbGFn
KHNrLCBTT0NLX0RPTkUpOwogCXZzay0+cGVlcl9zaHV0ZG93biB8PSBTRU5EX1NIVVRET1dOIHwg
UkNWX1NIVVRET1dOOwogCkBAIC0zMzUsOCArMzM1LDggQEAgc3RhdGljIHZvaWQgaHZzX29wZW5f
Y29ubmVjdGlvbihzdHJ1Y3Qgdm1idXNfY2hhbm5lbCAqY2hhbikKIAogCWxvY2tfc29jayhzayk7
CiAKLQlpZiAoKGNvbm5fZnJvbV9ob3N0ICYmIHNrLT5za19zdGF0ZSAhPSBWU09DS19TU19MSVNU
RU4pIHx8Ci0JICAgICghY29ubl9mcm9tX2hvc3QgJiYgc2stPnNrX3N0YXRlICE9IFNTX0NPTk5F
Q1RJTkcpKQorCWlmICgoY29ubl9mcm9tX2hvc3QgJiYgc2stPnNrX3N0YXRlICE9IFRDUF9MSVNU
RU4pIHx8CisJICAgICghY29ubl9mcm9tX2hvc3QgJiYgc2stPnNrX3N0YXRlICE9IFRDUF9TWU5f
U0VOVCkpCiAJCWdvdG8gb3V0OwogCiAJaWYgKGNvbm5fZnJvbV9ob3N0KSB7CkBAIC0zNDgsNyAr
MzQ4LDcgQEAgc3RhdGljIHZvaWQgaHZzX29wZW5fY29ubmVjdGlvbihzdHJ1Y3Qgdm1idXNfY2hh
bm5lbCAqY2hhbikKIAkJaWYgKCFuZXcpCiAJCQlnb3RvIG91dDsKIAotCQluZXctPnNrX3N0YXRl
ID0gU1NfQ09OTkVDVElORzsKKwkJbmV3LT5za19zdGF0ZSA9IFRDUF9TWU5fU0VOVDsKIAkJdm5l
dyA9IHZzb2NrX3NrKG5ldyk7CiAJCWh2c19uZXcgPSB2bmV3LT50cmFuczsKIAkJaHZzX25ldy0+
Y2hhbiA9IGNoYW47CkBAIC0zODIsNyArMzgyLDcgQEAgc3RhdGljIHZvaWQgaHZzX29wZW5fY29u
bmVjdGlvbihzdHJ1Y3Qgdm1idXNfY2hhbm5lbCAqY2hhbikKIAlodnNfc2V0X2NoYW5uZWxfcGVu
ZGluZ19zZW5kX3NpemUoY2hhbik7CiAKIAlpZiAoY29ubl9mcm9tX2hvc3QpIHsKLQkJbmV3LT5z
a19zdGF0ZSA9IFNTX0NPTk5FQ1RFRDsKKwkJbmV3LT5za19zdGF0ZSA9IFRDUF9FU1RBQkxJU0hF
RDsKIAkJc2stPnNrX2Fja19iYWNrbG9nKys7CiAKIAkJaHZzX2FkZHJfaW5pdCgmdm5ldy0+bG9j
YWxfYWRkciwgaWZfdHlwZSk7CkBAIC0zOTUsNyArMzk1LDcgQEAgc3RhdGljIHZvaWQgaHZzX29w
ZW5fY29ubmVjdGlvbihzdHJ1Y3Qgdm1idXNfY2hhbm5lbCAqY2hhbikKIAogCQl2c29ja19lbnF1
ZXVlX2FjY2VwdChzaywgbmV3KTsKIAl9IGVsc2UgewotCQlzay0+c2tfc3RhdGUgPSBTU19DT05O
RUNURUQ7CisJCXNrLT5za19zdGF0ZSA9IFRDUF9FU1RBQkxJU0hFRDsKIAkJc2stPnNrX3NvY2tl
dC0+c3RhdGUgPSBTU19DT05ORUNURUQ7CiAKIAkJdnNvY2tfaW5zZXJ0X2Nvbm5lY3RlZCh2c29j
a19zayhzaykpOwpkaWZmIC0tZ2l0IGEvbmV0L3Ztd192c29jay92aXJ0aW9fdHJhbnNwb3J0LmMg
Yi9uZXQvdm13X3Zzb2NrL3ZpcnRpb190cmFuc3BvcnQuYwppbmRleCA1ZWJlZWY4YWUzZmEuLjk2
YWIzNDRmMTdiYiAxMDA2NDQKLS0tIGEvbmV0L3Ztd192c29jay92aXJ0aW9fdHJhbnNwb3J0LmMK
KysrIGIvbmV0L3Ztd192c29jay92aXJ0aW9fdHJhbnNwb3J0LmMKQEAgLTQxNyw3ICs0MTcsNyBA
QCBzdGF0aWMgdm9pZCB2aXJ0aW9fdnNvY2tfZXZlbnRfZmlsbChzdHJ1Y3QgdmlydGlvX3Zzb2Nr
ICp2c29jaykKIHN0YXRpYyB2b2lkIHZpcnRpb192c29ja19yZXNldF9zb2NrKHN0cnVjdCBzb2Nr
ICpzaykKIHsKIAlsb2NrX3NvY2soc2spOwotCXNrLT5za19zdGF0ZSA9IFNTX1VOQ09OTkVDVEVE
OworCXNrLT5za19zdGF0ZSA9IFRDUF9DTE9TRTsKIAlzay0+c2tfZXJyID0gRUNPTk5SRVNFVDsK
IAlzay0+c2tfZXJyb3JfcmVwb3J0KHNrKTsKIAlyZWxlYXNlX3NvY2soc2spOwpkaWZmIC0tZ2l0
IGEvbmV0L3Ztd192c29jay92aXJ0aW9fdHJhbnNwb3J0X2NvbW1vbi5jIGIvbmV0L3Ztd192c29j
ay92aXJ0aW9fdHJhbnNwb3J0X2NvbW1vbi5jCmluZGV4IDg0ZDNjMGFhZGQ3My4uZjNmM2QwNmNi
NmQ4IDEwMDY0NAotLS0gYS9uZXQvdm13X3Zzb2NrL3ZpcnRpb190cmFuc3BvcnRfY29tbW9uLmMK
KysrIGIvbmV0L3Ztd192c29jay92aXJ0aW9fdHJhbnNwb3J0X2NvbW1vbi5jCkBAIC03MTYsNyAr
NzE2LDcgQEAgc3RhdGljIHZvaWQgdmlydGlvX3RyYW5zcG9ydF9kb19jbG9zZShzdHJ1Y3QgdnNv
Y2tfc29jayAqdnNrLAogCXNvY2tfc2V0X2ZsYWcoc2ssIFNPQ0tfRE9ORSk7CiAJdnNrLT5wZWVy
X3NodXRkb3duID0gU0hVVERPV05fTUFTSzsKIAlpZiAodnNvY2tfc3RyZWFtX2hhc19kYXRhKHZz
aykgPD0gMCkKLQkJc2stPnNrX3N0YXRlID0gU1NfRElTQ09OTkVDVElORzsKKwkJc2stPnNrX3N0
YXRlID0gVENQX0NMT1NJTkc7CiAJc2stPnNrX3N0YXRlX2NoYW5nZShzayk7CiAKIAlpZiAodnNr
LT5jbG9zZV93b3JrX3NjaGVkdWxlZCAmJgpAQCAtNzU2LDggKzc1Niw4IEBAIHN0YXRpYyBib29s
IHZpcnRpb190cmFuc3BvcnRfY2xvc2Uoc3RydWN0IHZzb2NrX3NvY2sgKnZzaykKIHsKIAlzdHJ1
Y3Qgc29jayAqc2sgPSAmdnNrLT5zazsKIAotCWlmICghKHNrLT5za19zdGF0ZSA9PSBTU19DT05O
RUNURUQgfHwKLQkgICAgICBzay0+c2tfc3RhdGUgPT0gU1NfRElTQ09OTkVDVElORykpCisJaWYg
KCEoc2stPnNrX3N0YXRlID09IFRDUF9FU1RBQkxJU0hFRCB8fAorCSAgICAgIHNrLT5za19zdGF0
ZSA9PSBUQ1BfQ0xPU0lORykpCiAJCXJldHVybiB0cnVlOwogCiAJLyogQWxyZWFkeSByZWNlaXZl
ZCBTSFVURE9XTiBmcm9tIHBlZXIsIHJlcGx5IHdpdGggUlNUICovCkBAIC04MTYsNyArODE2LDcg
QEAgdmlydGlvX3RyYW5zcG9ydF9yZWN2X2Nvbm5lY3Rpbmcoc3RydWN0IHNvY2sgKnNrLAogCiAJ
c3dpdGNoIChsZTE2X3RvX2NwdShwa3QtPmhkci5vcCkpIHsKIAljYXNlIFZJUlRJT19WU09DS19P
UF9SRVNQT05TRToKLQkJc2stPnNrX3N0YXRlID0gU1NfQ09OTkVDVEVEOworCQlzay0+c2tfc3Rh
dGUgPSBUQ1BfRVNUQUJMSVNIRUQ7CiAJCXNrLT5za19zb2NrZXQtPnN0YXRlID0gU1NfQ09OTkVD
VEVEOwogCQl2c29ja19pbnNlcnRfY29ubmVjdGVkKHZzayk7CiAJCXNrLT5za19zdGF0ZV9jaGFu
Z2Uoc2spOwpAQCAtODM2LDcgKzgzNiw3IEBAIHZpcnRpb190cmFuc3BvcnRfcmVjdl9jb25uZWN0
aW5nKHN0cnVjdCBzb2NrICpzaywKIAogZGVzdHJveToKIAl2aXJ0aW9fdHJhbnNwb3J0X3Jlc2V0
KHZzaywgcGt0KTsKLQlzay0+c2tfc3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKKwlzay0+c2tfc3Rh
dGUgPSBUQ1BfQ0xPU0U7CiAJc2stPnNrX2VyciA9IHNrZXJyOwogCXNrLT5za19lcnJvcl9yZXBv
cnQoc2spOwogCXJldHVybiBlcnI7CkBAIC04NzIsNyArODcyLDcgQEAgdmlydGlvX3RyYW5zcG9y
dF9yZWN2X2Nvbm5lY3RlZChzdHJ1Y3Qgc29jayAqc2ssCiAJCQl2c2stPnBlZXJfc2h1dGRvd24g
fD0gU0VORF9TSFVURE9XTjsKIAkJaWYgKHZzay0+cGVlcl9zaHV0ZG93biA9PSBTSFVURE9XTl9N
QVNLICYmCiAJCSAgICB2c29ja19zdHJlYW1faGFzX2RhdGEodnNrKSA8PSAwKQotCQkJc2stPnNr
X3N0YXRlID0gU1NfRElTQ09OTkVDVElORzsKKwkJCXNrLT5za19zdGF0ZSA9IFRDUF9DTE9TSU5H
OwogCQlpZiAobGUzMl90b19jcHUocGt0LT5oZHIuZmxhZ3MpKQogCQkJc2stPnNrX3N0YXRlX2No
YW5nZShzayk7CiAJCWJyZWFrOwpAQCAtOTQzLDcgKzk0Myw3IEBAIHZpcnRpb190cmFuc3BvcnRf
cmVjdl9saXN0ZW4oc3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3QgdmlydGlvX3Zzb2NrX3BrdCAqcGt0
KQogCiAJbG9ja19zb2NrX25lc3RlZChjaGlsZCwgU0lOR0xFX0RFUFRIX05FU1RJTkcpOwogCi0J
Y2hpbGQtPnNrX3N0YXRlID0gU1NfQ09OTkVDVEVEOworCWNoaWxkLT5za19zdGF0ZSA9IFRDUF9F
U1RBQkxJU0hFRDsKIAogCXZjaGlsZCA9IHZzb2NrX3NrKGNoaWxkKTsKIAl2c29ja19hZGRyX2lu
aXQoJnZjaGlsZC0+bG9jYWxfYWRkciwgbGU2NF90b19jcHUocGt0LT5oZHIuZHN0X2NpZCksCkBA
IC0xMDMxLDE4ICsxMDMxLDE4IEBAIHZvaWQgdmlydGlvX3RyYW5zcG9ydF9yZWN2X3BrdChzdHJ1
Y3QgdmlydGlvX3Zzb2NrX3BrdCAqcGt0KQogCQlzay0+c2tfd3JpdGVfc3BhY2Uoc2spOwogCiAJ
c3dpdGNoIChzay0+c2tfc3RhdGUpIHsKLQljYXNlIFZTT0NLX1NTX0xJU1RFTjoKKwljYXNlIFRD
UF9MSVNURU46CiAJCXZpcnRpb190cmFuc3BvcnRfcmVjdl9saXN0ZW4oc2ssIHBrdCk7CiAJCXZp
cnRpb190cmFuc3BvcnRfZnJlZV9wa3QocGt0KTsKIAkJYnJlYWs7Ci0JY2FzZSBTU19DT05ORUNU
SU5HOgorCWNhc2UgVENQX1NZTl9TRU5UOgogCQl2aXJ0aW9fdHJhbnNwb3J0X3JlY3ZfY29ubmVj
dGluZyhzaywgcGt0KTsKIAkJdmlydGlvX3RyYW5zcG9ydF9mcmVlX3BrdChwa3QpOwogCQlicmVh
azsKLQljYXNlIFNTX0NPTk5FQ1RFRDoKKwljYXNlIFRDUF9FU1RBQkxJU0hFRDoKIAkJdmlydGlv
X3RyYW5zcG9ydF9yZWN2X2Nvbm5lY3RlZChzaywgcGt0KTsKIAkJYnJlYWs7Ci0JY2FzZSBTU19E
SVNDT05ORUNUSU5HOgorCWNhc2UgVENQX0NMT1NJTkc6CiAJCXZpcnRpb190cmFuc3BvcnRfcmVj
dl9kaXNjb25uZWN0aW5nKHNrLCBwa3QpOwogCQl2aXJ0aW9fdHJhbnNwb3J0X2ZyZWVfcGt0KHBr
dCk7CiAJCWJyZWFrOwpkaWZmIC0tZ2l0IGEvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9ydC5j
IGIvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9ydC5jCmluZGV4IGFkM2Y0N2E3MTRmMy4uYmE0
Y2IxOGM0YjlhIDEwMDY0NAotLS0gYS9uZXQvdm13X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0LmMKKysr
IGIvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9ydC5jCkBAIC03NzYsNyArNzc2LDcgQEAgc3Rh
dGljIGludCB2bWNpX3RyYW5zcG9ydF9yZWN2X3N0cmVhbV9jYih2b2lkICpkYXRhLCBzdHJ1Y3Qg
dm1jaV9kYXRhZ3JhbSAqZGcpCiAJCS8qIFRoZSBsb2NhbCBjb250ZXh0IElEIG1heSBiZSBvdXQg
b2YgZGF0ZSwgdXBkYXRlIGl0LiAqLwogCQl2c2stPmxvY2FsX2FkZHIuc3ZtX2NpZCA9IGRzdC5z
dm1fY2lkOwogCi0JCWlmIChzay0+c2tfc3RhdGUgPT0gU1NfQ09OTkVDVEVEKQorCQlpZiAoc2st
PnNrX3N0YXRlID09IFRDUF9FU1RBQkxJU0hFRCkKIAkJCXZtY2lfdHJhbnModnNrKS0+bm90aWZ5
X29wcy0+aGFuZGxlX25vdGlmeV9wa3QoCiAJCQkJCXNrLCBwa3QsIHRydWUsICZkc3QsICZzcmMs
CiAJCQkJCSZiaF9wcm9jZXNzX3BrdCk7CkBAIC04MzQsNyArODM0LDkgQEAgc3RhdGljIHZvaWQg
dm1jaV90cmFuc3BvcnRfaGFuZGxlX2RldGFjaChzdHJ1Y3Qgc29jayAqc2spCiAJCSAqIGxlZnQg
aW4gb3VyIGNvbnN1bWUgcXVldWUuCiAJCSAqLwogCQlpZiAodnNvY2tfc3RyZWFtX2hhc19kYXRh
KHZzaykgPD0gMCkgewotCQkJaWYgKHNrLT5za19zdGF0ZSA9PSBTU19DT05ORUNUSU5HKSB7CisJ
CQlzay0+c2tfc3RhdGUgPSBUQ1BfQ0xPU0U7CisKKwkJCWlmIChzay0+c2tfc3RhdGUgPT0gVENQ
X1NZTl9TRU5UKSB7CiAJCQkJLyogVGhlIHBlZXIgbWF5IGRldGFjaCBmcm9tIGEgcXVldWUgcGFp
ciB3aGlsZQogCQkJCSAqIHdlIGFyZSBzdGlsbCBpbiB0aGUgY29ubmVjdGluZyBzdGF0ZSwgaS5l
LiwKIAkJCQkgKiBpZiB0aGUgcGVlciBWTSBpcyBraWxsZWQgYWZ0ZXIgYXR0YWNoaW5nIHRvCkBA
IC04NDMsMTIgKzg0NSwxMCBAQCBzdGF0aWMgdm9pZCB2bWNpX3RyYW5zcG9ydF9oYW5kbGVfZGV0
YWNoKHN0cnVjdCBzb2NrICpzaykKIAkJCQkgKiBldmVudCBsaWtlIGEgcmVzZXQuCiAJCQkJICov
CiAKLQkJCQlzay0+c2tfc3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKIAkJCQlzay0+c2tfZXJyID0g
RUNPTk5SRVNFVDsKIAkJCQlzay0+c2tfZXJyb3JfcmVwb3J0KHNrKTsKIAkJCQlyZXR1cm47CiAJ
CQl9Ci0JCQlzay0+c2tfc3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKIAkJfQogCQlzay0+c2tfc3Rh
dGVfY2hhbmdlKHNrKTsKIAl9CkBAIC05MTYsMTcgKzkxNiwxNyBAQCBzdGF0aWMgdm9pZCB2bWNp
X3RyYW5zcG9ydF9yZWN2X3BrdF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAl2c29j
a19zayhzayktPmxvY2FsX2FkZHIuc3ZtX2NpZCA9IHBrdC0+ZGcuZHN0LmNvbnRleHQ7CiAKIAlz
d2l0Y2ggKHNrLT5za19zdGF0ZSkgewotCWNhc2UgVlNPQ0tfU1NfTElTVEVOOgorCWNhc2UgVENQ
X0xJU1RFTjoKIAkJdm1jaV90cmFuc3BvcnRfcmVjdl9saXN0ZW4oc2ssIHBrdCk7CiAJCWJyZWFr
OwotCWNhc2UgU1NfQ09OTkVDVElORzoKKwljYXNlIFRDUF9TWU5fU0VOVDoKIAkJLyogUHJvY2Vz
c2luZyBvZiBwZW5kaW5nIGNvbm5lY3Rpb25zIGZvciBzZXJ2ZXJzIGdvZXMgdGhyb3VnaAogCQkg
KiB0aGUgbGlzdGVuaW5nIHNvY2tldCwgc28gc2VlIHZtY2lfdHJhbnNwb3J0X3JlY3ZfbGlzdGVu
KCkKIAkJICogZm9yIHRoYXQgcGF0aC4KIAkJICovCiAJCXZtY2lfdHJhbnNwb3J0X3JlY3ZfY29u
bmVjdGluZ19jbGllbnQoc2ssIHBrdCk7CiAJCWJyZWFrOwotCWNhc2UgU1NfQ09OTkVDVEVEOgor
CWNhc2UgVENQX0VTVEFCTElTSEVEOgogCQl2bWNpX3RyYW5zcG9ydF9yZWN2X2Nvbm5lY3RlZChz
aywgcGt0KTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKQEAgLTk3NSw3ICs5NzUsNyBAQCBzdGF0aWMg
aW50IHZtY2lfdHJhbnNwb3J0X3JlY3ZfbGlzdGVuKHN0cnVjdCBzb2NrICpzaywKIAkJdnNvY2tf
c2socGVuZGluZyktPmxvY2FsX2FkZHIuc3ZtX2NpZCA9IHBrdC0+ZGcuZHN0LmNvbnRleHQ7CiAK
IAkJc3dpdGNoIChwZW5kaW5nLT5za19zdGF0ZSkgewotCQljYXNlIFNTX0NPTk5FQ1RJTkc6CisJ
CWNhc2UgVENQX1NZTl9TRU5UOgogCQkJZXJyID0gdm1jaV90cmFuc3BvcnRfcmVjdl9jb25uZWN0
aW5nX3NlcnZlcihzaywKIAkJCQkJCQkJICAgIHBlbmRpbmcsCiAJCQkJCQkJCSAgICBwa3QpOwpA
QCAtMTEwNSw3ICsxMTA1LDcgQEAgc3RhdGljIGludCB2bWNpX3RyYW5zcG9ydF9yZWN2X2xpc3Rl
bihzdHJ1Y3Qgc29jayAqc2ssCiAJdnNvY2tfYWRkX3BlbmRpbmcoc2ssIHBlbmRpbmcpOwogCXNr
LT5za19hY2tfYmFja2xvZysrOwogCi0JcGVuZGluZy0+c2tfc3RhdGUgPSBTU19DT05ORUNUSU5H
OworCXBlbmRpbmctPnNrX3N0YXRlID0gVENQX1NZTl9TRU5UOwogCXZtY2lfdHJhbnModnBlbmRp
bmcpLT5wcm9kdWNlX3NpemUgPQogCQl2bWNpX3RyYW5zKHZwZW5kaW5nKS0+Y29uc3VtZV9zaXpl
ID0gcXBfc2l6ZTsKIAl2bWNpX3RyYW5zKHZwZW5kaW5nKS0+cXVldWVfcGFpcl9zaXplID0gcXBf
c2l6ZTsKQEAgLTEyMjksMTEgKzEyMjksMTEgQEAgdm1jaV90cmFuc3BvcnRfcmVjdl9jb25uZWN0
aW5nX3NlcnZlcihzdHJ1Y3Qgc29jayAqbGlzdGVuZXIsCiAJICogdGhlIHNvY2tldCB3aWxsIGJl
IHZhbGlkIHVudGlsIGl0IGlzIHJlbW92ZWQgZnJvbSB0aGUgcXVldWUuCiAJICoKIAkgKiBJZiB3
ZSBmYWlsIHNlbmRpbmcgdGhlIGF0dGFjaCBiZWxvdywgd2UgcmVtb3ZlIHRoZSBzb2NrZXQgZnJv
bSB0aGUKLQkgKiBjb25uZWN0ZWQgbGlzdCBhbmQgbW92ZSB0aGUgc29ja2V0IHRvIFNTX1VOQ09O
TkVDVEVEIGJlZm9yZQorCSAqIGNvbm5lY3RlZCBsaXN0IGFuZCBtb3ZlIHRoZSBzb2NrZXQgdG8g
VENQX0NMT1NFIGJlZm9yZQogCSAqIHJlbGVhc2luZyB0aGUgbG9jaywgc28gYSBwZW5kaW5nIHNs
b3cgcGF0aCBwcm9jZXNzaW5nIG9mIGFuIGluY29taW5nCiAJICogcGFja2V0IHdpbGwgbm90IHNl
ZSB0aGUgc29ja2V0IGluIHRoZSBjb25uZWN0ZWQgc3RhdGUgaW4gdGhhdCBjYXNlLgogCSAqLwot
CXBlbmRpbmctPnNrX3N0YXRlID0gU1NfQ09OTkVDVEVEOworCXBlbmRpbmctPnNrX3N0YXRlID0g
VENQX0VTVEFCTElTSEVEOwogCiAJdnNvY2tfaW5zZXJ0X2Nvbm5lY3RlZCh2cGVuZGluZyk7CiAK
QEAgLTEyNjQsNyArMTI2NCw3IEBAIHZtY2lfdHJhbnNwb3J0X3JlY3ZfY29ubmVjdGluZ19zZXJ2
ZXIoc3RydWN0IHNvY2sgKmxpc3RlbmVyLAogCiBkZXN0cm95OgogCXBlbmRpbmctPnNrX2VyciA9
IHNrZXJyOwotCXBlbmRpbmctPnNrX3N0YXRlID0gU1NfVU5DT05ORUNURUQ7CisJcGVuZGluZy0+
c2tfc3RhdGUgPSBUQ1BfQ0xPU0U7CiAJLyogQXMgbG9uZyBhcyB3ZSBkcm9wIG91ciByZWZlcmVu
Y2UsIGFsbCBuZWNlc3NhcnkgY2xlYW51cCB3aWxsIGhhbmRsZQogCSAqIHdoZW4gdGhlIGNsZWFu
dXAgZnVuY3Rpb24gZHJvcHMgaXRzIHJlZmVyZW5jZSBhbmQgb3VyIGRlc3RydWN0CiAJICogaW1w
bGVtZW50YXRpb24gaXMgY2FsbGVkLiAgTm90ZSB0aGF0IHNpbmNlIHRoZSBsaXN0ZW4gaGFuZGxl
ciB3aWxsCkBAIC0xMzAyLDcgKzEzMDIsNyBAQCB2bWNpX3RyYW5zcG9ydF9yZWN2X2Nvbm5lY3Rp
bmdfY2xpZW50KHN0cnVjdCBzb2NrICpzaywKIAkJICogYWNjb3VudGluZyAoaXQgY2FuIGFscmVh
ZHkgYmUgZm91bmQgc2luY2UgaXQncyBpbiB0aGUgYm91bmQKIAkJICogdGFibGUpLgogCQkgKi8K
LQkJc2stPnNrX3N0YXRlID0gU1NfQ09OTkVDVEVEOworCQlzay0+c2tfc3RhdGUgPSBUQ1BfRVNU
QUJMSVNIRUQ7CiAJCXNrLT5za19zb2NrZXQtPnN0YXRlID0gU1NfQ09OTkVDVEVEOwogCQl2c29j
a19pbnNlcnRfY29ubmVjdGVkKHZzayk7CiAJCXNrLT5za19zdGF0ZV9jaGFuZ2Uoc2spOwpAQCAt
MTM3MCw3ICsxMzcwLDcgQEAgdm1jaV90cmFuc3BvcnRfcmVjdl9jb25uZWN0aW5nX2NsaWVudChz
dHJ1Y3Qgc29jayAqc2ssCiBkZXN0cm95OgogCXZtY2lfdHJhbnNwb3J0X3NlbmRfcmVzZXQoc2ss
IHBrdCk7CiAKLQlzay0+c2tfc3RhdGUgPSBTU19VTkNPTk5FQ1RFRDsKKwlzay0+c2tfc3RhdGUg
PSBUQ1BfQ0xPU0U7CiAJc2stPnNrX2VyciA9IHNrZXJyOwogCXNrLT5za19lcnJvcl9yZXBvcnQo
c2spOwogCXJldHVybiBlcnI7CkBAIC0xNTU4LDcgKzE1NTgsNyBAQCBzdGF0aWMgaW50IHZtY2lf
dHJhbnNwb3J0X3JlY3ZfY29ubmVjdGVkKHN0cnVjdCBzb2NrICpzaywKIAkJc29ja19zZXRfZmxh
ZyhzaywgU09DS19ET05FKTsKIAkJdnNrLT5wZWVyX3NodXRkb3duID0gU0hVVERPV05fTUFTSzsK
IAkJaWYgKHZzb2NrX3N0cmVhbV9oYXNfZGF0YSh2c2spIDw9IDApCi0JCQlzay0+c2tfc3RhdGUg
PSBTU19ESVNDT05ORUNUSU5HOworCQkJc2stPnNrX3N0YXRlID0gVENQX0NMT1NJTkc7CiAKIAkJ
c2stPnNrX3N0YXRlX2NoYW5nZShzayk7CiAJCWJyZWFrOwpAQCAtMTgyNiw3ICsxODI2LDcgQEAg
c3RhdGljIGludCB2bWNpX3RyYW5zcG9ydF9jb25uZWN0KHN0cnVjdCB2c29ja19zb2NrICp2c2sp
CiAJCWVyciA9IHZtY2lfdHJhbnNwb3J0X3NlbmRfY29ubl9yZXF1ZXN0KAogCQkJc2ssIHZtY2lf
dHJhbnModnNrKS0+cXVldWVfcGFpcl9zaXplKTsKIAkJaWYgKGVyciA8IDApIHsKLQkJCXNrLT5z
a19zdGF0ZSA9IFNTX1VOQ09OTkVDVEVEOworCQkJc2stPnNrX3N0YXRlID0gVENQX0NMT1NFOwog
CQkJcmV0dXJuIGVycjsKIAkJfQogCX0gZWxzZSB7CkBAIC0xODM2LDcgKzE4MzYsNyBAQCBzdGF0
aWMgaW50IHZtY2lfdHJhbnNwb3J0X2Nvbm5lY3Qoc3RydWN0IHZzb2NrX3NvY2sgKnZzaykKIAkJ
CQlzaywgdm1jaV90cmFucyh2c2spLT5xdWV1ZV9wYWlyX3NpemUsCiAJCQkJc3VwcG9ydGVkX3By
b3RvX3ZlcnNpb25zKTsKIAkJaWYgKGVyciA8IDApIHsKLQkJCXNrLT5za19zdGF0ZSA9IFNTX1VO
Q09OTkVDVEVEOworCQkJc2stPnNrX3N0YXRlID0gVENQX0NMT1NFOwogCQkJcmV0dXJuIGVycjsK
IAkJfQogCmRpZmYgLS1naXQgYS9uZXQvdm13X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0X25vdGlmeS5j
IGIvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9ydF9ub3RpZnkuYwppbmRleCAxNDA2ZGI0ZDk3
ZDEuLjQxZmI0MjdmMTUwYSAxMDA2NDQKLS0tIGEvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9y
dF9ub3RpZnkuYworKysgYi9uZXQvdm13X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0X25vdGlmeS5jCkBA
IC0zNTUsNyArMzU1LDcgQEAgdm1jaV90cmFuc3BvcnRfbm90aWZ5X3BrdF9wb2xsX2luKHN0cnVj
dCBzb2NrICpzaywKIAkJICogcXVldWUuIEFzayBmb3Igbm90aWZpY2F0aW9ucyB3aGVuIHRoZXJl
IGlzIHNvbWV0aGluZyB0bwogCQkgKiByZWFkLgogCQkgKi8KLQkJaWYgKHNrLT5za19zdGF0ZSA9
PSBTU19DT05ORUNURUQpIHsKKwkJaWYgKHNrLT5za19zdGF0ZSA9PSBUQ1BfRVNUQUJMSVNIRUQp
IHsKIAkJCWlmICghc2VuZF93YWl0aW5nX3JlYWQoc2ssIDEpKQogCQkJCXJldHVybiAtMTsKIApk
aWZmIC0tZ2l0IGEvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9ydF9ub3RpZnlfcXN0YXRlLmMg
Yi9uZXQvdm13X3Zzb2NrL3ZtY2lfdHJhbnNwb3J0X25vdGlmeV9xc3RhdGUuYwppbmRleCBmM2Ew
YWZjNDYyMDguLjBjYzg0ZjJiYjA1ZSAxMDA2NDQKLS0tIGEvbmV0L3Ztd192c29jay92bWNpX3Ry
YW5zcG9ydF9ub3RpZnlfcXN0YXRlLmMKKysrIGIvbmV0L3Ztd192c29jay92bWNpX3RyYW5zcG9y
dF9ub3RpZnlfcXN0YXRlLmMKQEAgLTE3Niw3ICsxNzYsNyBAQCB2bWNpX3RyYW5zcG9ydF9ub3Rp
ZnlfcGt0X3BvbGxfaW4oc3RydWN0IHNvY2sgKnNrLAogCQkgKiBxdWV1ZS4gQXNrIGZvciBub3Rp
ZmljYXRpb25zIHdoZW4gdGhlcmUgaXMgc29tZXRoaW5nIHRvCiAJCSAqIHJlYWQuCiAJCSAqLwot
CQlpZiAoc2stPnNrX3N0YXRlID09IFNTX0NPTk5FQ1RFRCkKKwkJaWYgKHNrLT5za19zdGF0ZSA9
PSBUQ1BfRVNUQUJMSVNIRUQpCiAJCQl2c29ja19ibG9ja191cGRhdGVfd3JpdGVfd2luZG93KHNr
KTsKIAkJKmRhdGFfcmVhZHlfbm93ID0gZmFsc2U7CiAJfQotLSAKMi4xNy4xCgo=

--_002_PU1P153MB0169AD4EB10548EACCED82C2BFDF0PU1P153MB0169APCP_--
