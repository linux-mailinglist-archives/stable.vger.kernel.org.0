Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 5A2B724C6AC
	for <lists+stable@lfdr.de>; Thu, 20 Aug 2020 22:14:53 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728334AbgHTUOw (ORCPT <rfc822;lists+stable@lfdr.de>);
        Thu, 20 Aug 2020 16:14:52 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:43792 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726908AbgHTUOu (ORCPT
        <rfc822;stable@vger.kernel.org>); Thu, 20 Aug 2020 16:14:50 -0400
Received: from mail-pf1-x430.google.com (mail-pf1-x430.google.com [IPv6:2607:f8b0:4864:20::430])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id DA42BC061385
        for <stable@vger.kernel.org>; Thu, 20 Aug 2020 13:14:49 -0700 (PDT)
Received: by mail-pf1-x430.google.com with SMTP id a79so1583008pfa.8
        for <stable@vger.kernel.org>; Thu, 20 Aug 2020 13:14:49 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:from:date:message-id:subject:to:cc;
        bh=U5FIHiIh+3cj6MBSOC8mcw3eoFBUNAZjEXZsj5AO8oc=;
        b=D++9ItOgYrBqFRUF2moCvt591F4/B7xNa7UTMcjZTFsIcFFmEVq/EuOaa5NXX8CRK2
         G9+BK130gUIRsJmU0jKEWpUeT3XZ7tA2QKmDMuMNOH8BVjYa+ynr24Irk0F25vyYg61o
         +0NFEX6zztuctk2ULFOhkSU6dsoZ8VK3EzVC9d+oT/nyk+3kXfaNo3SzQbjN8vDM6KW4
         dPc4HhVLg3y5VuPWLtjPvecUdK9ZDqgmabb9oxxqwmRkCBYX/8LQ8K2A7TFYyTEAecdz
         HsK+mzUBW6yMQWhp+EyAG/uvkFMVME3dyOwIVZYCRqQL7ZiDo1IljMg3QrNbFWQkimcQ
         aHCA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to:cc;
        bh=U5FIHiIh+3cj6MBSOC8mcw3eoFBUNAZjEXZsj5AO8oc=;
        b=mZmpTEmM4W++4+YnuKuSeJg/c9npSnv9o7201vKTH+KwZZBQ712f8zhpTCZdisLlsF
         85XBGxZHOhDUbMBK33E1skq0YbN1gnggVvI3m/py0uoK/QqoI7/3mAfbnmwFTFutxpZj
         YAe8D8Lf3FAYwhjBUGE+7S2/11TcVfwHr6MBXw+24GJ3icND/WdndPup7aCKLJJdsgiC
         ad7dljEgx8H9Fct6IIPLcUyVqQMi+lysFsdLtqmH3KesUp3cyaTtuFqvBlqs3guwvOGP
         qYcM2rkdTKjbtzN6gpS2i5GRNS0mkR0e+w5U5vK7IjGSAEO86xAT/Bxo/VJ5caoWPx+z
         YnqA==
X-Gm-Message-State: AOAM533sH/NWKsocPUEs2kAgKqV0z5qVxtYqxW1I9Rf7QX91g9iG6f1F
        FqKqd43ObkysCht5ReveO5OrPV3KQGSaOjw0Y6CMnA==
X-Google-Smtp-Source: ABdhPJxDerw0rNUpAqd8h8H7k5PIHMOrJeepxlSuQDSiIL6r8rOp1UNHKK+ZYmR2UeEB0A32cVuWexwQuqiiPm6BAHk=
X-Received: by 2002:a63:4e56:: with SMTP id o22mr297377pgl.381.1597954488969;
 Thu, 20 Aug 2020 13:14:48 -0700 (PDT)
MIME-Version: 1.0
From:   Nick Desaulniers <ndesaulniers@google.com>
Date:   Thu, 20 Aug 2020 13:14:36 -0700
Message-ID: <CAKwvOd=Ko_UHWF-bYotqjPVw=chW_KMUFuBp_o8uOg0wOyHyWA@mail.gmail.com>
Subject: LLVM=1 patches for 5.4
To:     Greg KH <gregkh@linuxfoundation.org>,
        Sasha Levin <sashal@kernel.org>,
        Masahiro Yamada <masahiroy@kernel.org>
Cc:     "# 3.4.x" <stable@vger.kernel.org>,
        clang-built-linux <clang-built-linux@googlegroups.com>,
        Nathan Chancellor <natechancellor@gmail.com>,
        Dmitry Golovin <dima@golovin.in>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Fangrui Song <maskray@google.com>,
        Sedat Dilek <sedat.dilek@gmail.com>,
        Kees Cook <keescook@chromium.org>
Content-Type: multipart/mixed; boundary="000000000000af42ec05ad54c52d"
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

--000000000000af42ec05ad54c52d
Content-Type: text/plain; charset="UTF-8"

Dear stable kernel maintainers,
Please consider the attached mbox file, which contains 9 patches which
cherry pick cleanly onto 5.4:

1. commit fcf1b6a35c16 ("Documentation/llvm: add documentation on
building w/ Clang/LLVM")
2. commit 0f44fbc162b7 ("Documentation/llvm: fix the name of llvm-size")
3. commit 63b903dfebde ("net: wan: wanxl: use allow to pass
CROSS_COMPILE_M68k for rebuilding firmware")
4. commit 734f3719d343 ("net: wan: wanxl: use $(M68KCC) instead of
$(M68KAS) for rebuilding firmware")
5. commit eefb8c124fd9 ("x86/boot: kbuild: allow readelf executable to
be specified")
6. commit 94f7345b7124 ("kbuild: remove PYTHON2 variable")
7. commit aa824e0c962b ("kbuild: remove AS variable")
8. commit 7e20e47c70f8 ("kbuild: replace AS=clang with LLVM_IAS=1")
9. commit a0d1c951ef08 ("kbuild: support LLVM=1 to switch the default
tools to Clang/LLVM")

This series improves/simplifies building kernels with Clang and LLVM
utilities; it will help the various CI systems testing kernels built
with Clang+LLVM utilities (in fact I will be pointing to this, if
accepted, next week at plumbers with those CI system maintainers), and
we will make immediate use of it in Android (see also:
https://android-review.googlesource.com/c/platform/prebuilts/clang/host/linux-x86/+/1405387).
We can always carry it out of tree in Android, but I think the series
is fairly tame, and would prefer not to.

I only particularly care about 5+8+9 (eefb8c124fd9, 7e20e47c70f8, and
a0d1c951ef08), but the rest are required for them to cherry-pick
cleanly.  I don't mind separating those three out, though they won't
be clean cherry-picks at that point.  It might be good to have
Masahiro review the series.  If accepted, I plan to wire up test
coverage of these immediately in
https://github.com/ClangBuiltLinux/continuous-integration/issues/300.

Most of the above landed in v5.7-rc1, with 94f7345b7124 landing in
v5.6-rc1 and eefb8c124fd9 landing in v5.5-rc3.
-- 
Thanks,
~Nick Desaulniers

--000000000000af42ec05ad54c52d
Content-Type: application/octet-stream; name="llvm_1.mbox"
Content-Disposition: attachment; filename="llvm_1.mbox"
Content-Transfer-Encoding: base64
Content-ID: <f_ke38kf2h0>
X-Attachment-Id: f_ke38kf2h0

RnJvbSA1MmRkNWMyYTZjZTc2MDYzZjNkYjcyNzk2OTQwZGU1NjYwYmUzY2E0IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBOaWNrIERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xl
LmNvbT4KRGF0ZTogV2VkLCAyNiBGZWIgMjAyMCAxNToyMzozNiAtMDgwMApTdWJqZWN0OiBbUEFU
Q0ggMS85XSBEb2N1bWVudGF0aW9uL2xsdm06IGFkZCBkb2N1bWVudGF0aW9uIG9uIGJ1aWxkaW5n
IHcvCiBDbGFuZy9MTFZNCgpjb21taXQgZmNmMWI2YTM1YzE2YWM1MDBmYTkwOGE0MDIyMjM4ZTVk
NjY2ZWFiZiB1cHN0cmVhbS4KCmFkZGVkIHRvIGtidWlsZCBkb2N1bWVudGF0aW9uLiBQcm92aWRl
cyBtb3JlIG9mZmljaWFsIGluZm8gb24gYnVpbGRpbmcKa2VybmVscyB3aXRoIENsYW5nIGFuZCBM
TFZNIHRoYW4gb3VyIHdpa2kuCgpTdWdnZXN0ZWQtYnk6IEtlZXMgQ29vayA8a2Vlc2Nvb2tAY2hy
b21pdW0ub3JnPgpSZXZpZXdlZC1ieTogS2VlcyBDb29rIDxrZWVzY29va0BjaHJvbWl1bS5vcmc+
ClJldmlld2VkLWJ5OiBOYXRoYW4gQ2hhbmNlbGxvciA8bmF0ZWNoYW5jZWxsb3JAZ21haWwuY29t
PgpSZXZpZXdlZC1ieTogU2VkYXQgRGlsZWsgPHNlZGF0LmRpbGVrQGdtYWlsLmNvbT4KU2lnbmVk
LW9mZi1ieTogTmljayBEZXNhdWxuaWVycyA8bmRlc2F1bG5pZXJzQGdvb2dsZS5jb20+ClNpZ25l
ZC1vZmYtYnk6IE1hc2FoaXJvIFlhbWFkYSA8bWFzYWhpcm95QGtlcm5lbC5vcmc+Ci0tLQogRG9j
dW1lbnRhdGlvbi9rYnVpbGQvaW5kZXgucnN0IHwgIDEgKwogRG9jdW1lbnRhdGlvbi9rYnVpbGQv
bGx2bS5yc3QgIHwgODAgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogTUFJTlRB
SU5FUlMgICAgICAgICAgICAgICAgICAgIHwgIDEgKwogMyBmaWxlcyBjaGFuZ2VkLCA4MiBpbnNl
cnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgRG9jdW1lbnRhdGlvbi9rYnVpbGQvbGx2bS5y
c3QKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2tidWlsZC9pbmRleC5yc3QgYi9Eb2N1bWVu
dGF0aW9uL2tidWlsZC9pbmRleC5yc3QKaW5kZXggMGYxNDRmYWQ5OWE2Li4zODgyYmQ1Zjc3Mjgg
MTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24va2J1aWxkL2luZGV4LnJzdAorKysgYi9Eb2N1bWVu
dGF0aW9uL2tidWlsZC9pbmRleC5yc3QKQEAgLTE5LDYgKzE5LDcgQEAgS2VybmVsIEJ1aWxkIFN5
c3RlbQogCiAgICAgaXNzdWVzCiAgICAgcmVwcm9kdWNpYmxlLWJ1aWxkcworICAgIGxsdm0KIAog
Li4gb25seTo6ICBzdWJwcm9qZWN0IGFuZCBodG1sCiAKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRp
b24va2J1aWxkL2xsdm0ucnN0IGIvRG9jdW1lbnRhdGlvbi9rYnVpbGQvbGx2bS5yc3QKbmV3IGZp
bGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5kNmM3OWViNGUyM2UKLS0tIC9kZXYv
bnVsbAorKysgYi9Eb2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdApAQCAtMCwwICsxLDgwIEBA
Cis9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KK0J1aWxkaW5nIExpbnV4IHdpdGggQ2xh
bmcvTExWTQorPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CisKK1RoaXMgZG9jdW1lbnQg
Y292ZXJzIGhvdyB0byBidWlsZCB0aGUgTGludXgga2VybmVsIHdpdGggQ2xhbmcgYW5kIExMVk0K
K3V0aWxpdGllcy4KKworQWJvdXQKKy0tLS0tCisKK1RoZSBMaW51eCBrZXJuZWwgaGFzIGFsd2F5
cyB0cmFkaXRpb25hbGx5IGJlZW4gY29tcGlsZWQgd2l0aCBHTlUgdG9vbGNoYWlucworc3VjaCBh
cyBHQ0MgYW5kIGJpbnV0aWxzLiBPbmdvaW5nIHdvcmsgaGFzIGFsbG93ZWQgZm9yIGBDbGFuZwor
PGh0dHBzOi8vY2xhbmcubGx2bS5vcmcvPmBfIGFuZCBgTExWTSA8aHR0cHM6Ly9sbHZtLm9yZy8+
YF8gdXRpbGl0aWVzIHRvIGJlCit1c2VkIGFzIHZpYWJsZSBzdWJzdGl0dXRlcy4gRGlzdHJpYnV0
aW9ucyBzdWNoIGFzIGBBbmRyb2lkCis8aHR0cHM6Ly93d3cuYW5kcm9pZC5jb20vPmBfLCBgQ2hy
b21lT1MKKzxodHRwczovL3d3dy5jaHJvbWl1bS5vcmcvY2hyb21pdW0tb3M+YF8sIGFuZCBgT3Bl
bk1hbmRyaXZhCis8aHR0cHM6Ly93d3cub3Blbm1hbmRyaXZhLm9yZy8+YF8gdXNlIENsYW5nIGJ1
aWx0IGtlcm5lbHMuICBgTExWTSBpcyBhCitjb2xsZWN0aW9uIG9mIHRvb2xjaGFpbiBjb21wb25l
bnRzIGltcGxlbWVudGVkIGluIHRlcm1zIG9mIEMrKyBvYmplY3RzCis8aHR0cHM6Ly93d3cuYW9z
YWJvb2sub3JnL2VuL2xsdm0uaHRtbD5gXy4gQ2xhbmcgaXMgYSBmcm9udC1lbmQgdG8gTExWTSB0
aGF0CitzdXBwb3J0cyBDIGFuZCB0aGUgR05VIEMgZXh0ZW5zaW9ucyByZXF1aXJlZCBieSB0aGUg
a2VybmVsLCBhbmQgaXMgcHJvbm91bmNlZAorImtsYW5nLCIgbm90ICJzZWUtbGFuZy4iCisKK0Ns
YW5nCistLS0tLQorCitUaGUgY29tcGlsZXIgdXNlZCBjYW4gYmUgc3dhcHBlZCBvdXQgdmlhIGBD
Qz1gIGNvbW1hbmQgbGluZSBhcmd1bWVudCB0byBgbWFrZWAuCitgQ0M9YCBzaG91bGQgYmUgc2V0
IHdoZW4gc2VsZWN0aW5nIGEgY29uZmlnIGFuZCBkdXJpbmcgYSBidWlsZC4KKworCW1ha2UgQ0M9
Y2xhbmcgZGVmY29uZmlnCisKKwltYWtlIENDPWNsYW5nCisKK0Nyb3NzIENvbXBpbGluZworLS0t
LS0tLS0tLS0tLS0tCisKK0Egc2luZ2xlIENsYW5nIGNvbXBpbGVyIGJpbmFyeSB3aWxsIHR5cGlj
YWxseSBjb250YWluIGFsbCBzdXBwb3J0ZWQgYmFja2VuZHMsCit3aGljaCBjYW4gaGVscCBzaW1w
bGlmeSBjcm9zcyBjb21waWxpbmcuCisKKwlBUkNIPWFybTY0IENST1NTX0NPTVBJTEU9YWFyY2g2
NC1saW51eC1nbnUtIG1ha2UgQ0M9Y2xhbmcKKworYENST1NTX0NPTVBJTEVgIGlzIG5vdCB1c2Vk
IHRvIHByZWZpeCB0aGUgQ2xhbmcgY29tcGlsZXIgYmluYXJ5LCBpbnN0ZWFkCitgQ1JPU1NfQ09N
UElMRWAgaXMgdXNlZCB0byBzZXQgYSBjb21tYW5kIGxpbmUgZmxhZzogYC0tdGFyZ2V0IDx0cmlw
bGU+YC4gRm9yCitleGFtcGxlOgorCisJY2xhbmcgLS10YXJnZXQgYWFyY2g2NC1saW51eC1nbnUg
Zm9vLmMKKworTExWTSBVdGlsaXRpZXMKKy0tLS0tLS0tLS0tLS0tCisKK0xMVk0gaGFzIHN1YnN0
aXR1dGVzIGZvciBHTlUgYmludXRpbHMgdXRpbGl0aWVzLiBUaGVzZSBjYW4gYmUgaW52b2tlZCBh
cworYWRkaXRpb25hbCBwYXJhbWV0ZXJzIHRvIGBtYWtlYC4KKworCW1ha2UgQ0M9Y2xhbmcgQVM9
Y2xhbmcgTEQ9bGQubGxkIEFSPWxsdm0tYXIgTk09bGx2bS1ubSBTVFJJUD1sbHZtLXN0cmlwIFxc
CisJICBPQkpDT1BZPWxsdm0tb2JqY29weSBPQkpEVU1QPWxsdm0tb2JqZHVtcCBPQkpTSVpFPWxs
dm0tb2Jqc2l6ZSBcXAorCSAgUkVBREVMRj1sbHZtLXJlYWRlbGYgSE9TVENDPWNsYW5nIEhPU1RD
WFg9Y2xhbmcrKyBIT1NUQVI9bGx2bS1hciBcXAorCSAgSE9TVExEPWxkLmxsZAorCitHZXR0aW5n
IEhlbHAKKy0tLS0tLS0tLS0tLQorCistIGBXZWJzaXRlIDxodHRwczovL2NsYW5nYnVpbHRsaW51
eC5naXRodWIuaW8vPmBfCistIGBNYWlsaW5nIExpc3QgPGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5j
b20vZm9ydW0vIyFmb3J1bS9jbGFuZy1idWlsdC1saW51eD5gXzogPGNsYW5nLWJ1aWx0LWxpbnV4
QGdvb2dsZWdyb3Vwcy5jb20+CistIGBJc3N1ZSBUcmFja2VyIDxodHRwczovL2dpdGh1Yi5jb20v
Q2xhbmdCdWlsdExpbnV4L2xpbnV4L2lzc3Vlcz5gXworLSBJUkM6ICNjbGFuZ2J1aWx0bGludXgg
b24gY2hhdC5mcmVlbm9kZS5uZXQKKy0gYFRlbGVncmFtIDxodHRwczovL3QubWUvQ2xhbmdCdWls
dExpbnV4PmBfOiBAQ2xhbmdCdWlsdExpbnV4CistIGBXaWtpIDxodHRwczovL2dpdGh1Yi5jb20v
Q2xhbmdCdWlsdExpbnV4L2xpbnV4L3dpa2k+YF8KKy0gYEJlZ2lubmVyIEJ1Z3MgPGh0dHBzOi8v
Z2l0aHViLmNvbS9DbGFuZ0J1aWx0TGludXgvbGludXgvaXNzdWVzP3E9aXMlM0FvcGVuK2lzJTNB
aXNzdWUrbGFiZWwlM0ElMjJnb29kK2ZpcnN0K2lzc3VlJTIyPmBfCisKK0dldHRpbmcgTExWTQor
LS0tLS0tLS0tLS0tLQorCistIGh0dHA6Ly9yZWxlYXNlcy5sbHZtLm9yZy9kb3dubG9hZC5odG1s
CistIGh0dHBzOi8vZ2l0aHViLmNvbS9sbHZtL2xsdm0tcHJvamVjdAorLSBodHRwczovL2xsdm0u
b3JnL2RvY3MvR2V0dGluZ1N0YXJ0ZWQuaHRtbAorLSBodHRwczovL2xsdm0ub3JnL2RvY3MvQ01h
a2UuaHRtbAorLSBodHRwczovL2FwdC5sbHZtLm9yZy8KKy0gaHR0cHM6Ly93d3cuYXJjaGxpbnV4
Lm9yZy9wYWNrYWdlcy9leHRyYS94ODZfNjQvbGx2bS8KKy0gaHR0cHM6Ly9naXRodWIuY29tL0Ns
YW5nQnVpbHRMaW51eC90Yy1idWlsZAorLSBodHRwczovL2dpdGh1Yi5jb20vQ2xhbmdCdWlsdExp
bnV4L2xpbnV4L3dpa2kvQnVpbGRpbmctQ2xhbmctZnJvbS1zb3VyY2UKKy0gaHR0cHM6Ly9hbmRy
b2lkLmdvb2dsZXNvdXJjZS5jb20vcGxhdGZvcm0vcHJlYnVpbHRzL2NsYW5nL2hvc3QvbGludXgt
eDg2LwpkaWZmIC0tZ2l0IGEvTUFJTlRBSU5FUlMgYi9NQUlOVEFJTkVSUwppbmRleCBmZTZmYTVk
M2E2M2UuLjE0MDcwMDhkZjc0OSAxMDA2NDQKLS0tIGEvTUFJTlRBSU5FUlMKKysrIGIvTUFJTlRB
SU5FUlMKQEAgLTQwMjgsNiArNDAyOCw3IEBAIEI6CWh0dHBzOi8vZ2l0aHViLmNvbS9DbGFuZ0J1
aWx0TGludXgvbGludXgvaXNzdWVzCiBDOglpcmM6Ly9jaGF0LmZyZWVub2RlLm5ldC9jbGFuZ2J1
aWx0bGludXgKIFM6CVN1cHBvcnRlZAogSzoJXGIoP2k6Y2xhbmd8bGx2bSlcYgorRjoJRG9jdW1l
bnRhdGlvbi9rYnVpbGQvbGx2bS5yc3QKIAogQ0xFQU5DQUNIRSBBUEkKIE06CUtvbnJhZCBSemVz
enV0ZWsgV2lsayA8a29ucmFkLndpbGtAb3JhY2xlLmNvbT4KLS0gCjIuMjguMC4yOTcuZzE5NTZm
YThmOGQtZ29vZwoKCkZyb20gMzJmNTA2ZmI0NzZkNTExZGE4MWRjNTUwZDY0ZTQzMGRhMjM3ZGE0
OSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogRmFuZ3J1aSBTb25nIDxtYXNrcmF5QGdv
b2dsZS5jb20+CkRhdGU6IFRodSwgMiBBcHIgMjAyMCAxMDozODo0MiAtMDcwMApTdWJqZWN0OiBb
UEFUQ0ggMi85XSBEb2N1bWVudGF0aW9uL2xsdm06IGZpeCB0aGUgbmFtZSBvZiBsbHZtLXNpemUK
CmNvbW1pdCAwZjQ0ZmJjMTYyYjczN2ZmNjI1MWFlMjQ4MTg0MzkwYWUyMjc5ZmVlIHVwc3RyZWFt
LgoKVGhlIHRvb2wgaXMgY2FsbGVkIGxsdm0tc2l6ZSwgbm90IGxsdm0tb2Jqc2l6ZS4KCkZpeGVz
OiBmY2YxYjZhMzVjMTYgKCJEb2N1bWVudGF0aW9uL2xsdm06IGFkZCBkb2N1bWVudGF0aW9uIG9u
IGJ1aWxkaW5nIHcvIENsYW5nL0xMVk0iKQpTaWduZWQtb2ZmLWJ5OiBGYW5ncnVpIFNvbmcgPG1h
c2tyYXlAZ29vZ2xlLmNvbT4KUmV2aWV3ZWQtYnk6IE5pY2sgRGVzYXVsbmllcnMgPG5kZXNhdWxu
aWVyc0Bnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogTmF0aGFuIENoYW5jZWxsb3IgPG5hdGVjaGFu
Y2VsbG9yQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWFzYWhpcm8gWWFtYWRhIDxtYXNhaGly
b3lAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogTmljayBEZXNhdWxuaWVycyA8bmRlc2F1bG5p
ZXJzQGdvb2dsZS5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi9rYnVpbGQvbGx2bS5yc3QgfCAyICst
CiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdCBiL0RvY3VtZW50YXRpb24va2J1aWxk
L2xsdm0ucnN0CmluZGV4IGQ2Yzc5ZWI0ZTIzZS4uZWVmYmRmYTNlNGQ5IDEwMDY0NAotLS0gYS9E
b2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2tidWlsZC9s
bHZtLnJzdApAQCAtNTEsNyArNTEsNyBAQCBMTFZNIGhhcyBzdWJzdGl0dXRlcyBmb3IgR05VIGJp
bnV0aWxzIHV0aWxpdGllcy4gVGhlc2UgY2FuIGJlIGludm9rZWQgYXMKIGFkZGl0aW9uYWwgcGFy
YW1ldGVycyB0byBgbWFrZWAuCiAKIAltYWtlIENDPWNsYW5nIEFTPWNsYW5nIExEPWxkLmxsZCBB
Uj1sbHZtLWFyIE5NPWxsdm0tbm0gU1RSSVA9bGx2bS1zdHJpcCBcXAotCSAgT0JKQ09QWT1sbHZt
LW9iamNvcHkgT0JKRFVNUD1sbHZtLW9iamR1bXAgT0JKU0laRT1sbHZtLW9ianNpemUgXFwKKwkg
IE9CSkNPUFk9bGx2bS1vYmpjb3B5IE9CSkRVTVA9bGx2bS1vYmpkdW1wIE9CSlNJWkU9bGx2bS1z
aXplIFxcCiAJICBSRUFERUxGPWxsdm0tcmVhZGVsZiBIT1NUQ0M9Y2xhbmcgSE9TVENYWD1jbGFu
ZysrIEhPU1RBUj1sbHZtLWFyIFxcCiAJICBIT1NUTEQ9bGQubGxkCiAKLS0gCjIuMjguMC4yOTcu
ZzE5NTZmYThmOGQtZ29vZwoKCkZyb20gY2EyNThhNDBhMTY3NTEyNGYwYjQyMzgzM2IxYzk4MjFk
N2Y2MDU1ZSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWFzYWhpcm8gWWFtYWRhIDxt
YXNhaGlyb3lAa2VybmVsLm9yZz4KRGF0ZTogVGh1LCAyNiBNYXIgMjAyMCAxNDo1NzoxNSArMDkw
MApTdWJqZWN0OiBbUEFUQ0ggMy85XSBuZXQ6IHdhbjogd2FueGw6IHVzZSBhbGxvdyB0byBwYXNz
IENST1NTX0NPTVBJTEVfTTY4ayBmb3IKIHJlYnVpbGRpbmcgZmlybXdhcmUKCmNvbW1pdCA2M2I5
MDNkZmViZGVhOTJhYTkyYWQzMzdkODQ1MWE2ZmJmZWFiZjlkIHVwc3RyZWFtLgoKQXMgZmFyIGFz
IEkgdW5kZXJzdG9vZCBmcm9tIHRoZSBLY29uZmlnIGhlbHAgdGV4dCwgdGhpcyBidWlsZCBydWxl
IGlzCnVzZWQgdG8gcmVidWlsZCB0aGUgZHJpdmVyIGZpcm13YXJlLCB3aGljaCBydW5zIG9uIGFu
IG9sZCBtNjhrLWJhc2VkCmNoaXAuIFNvLCB5b3UgbmVlZCBtNjhrIHRvb2xzIGZvciB0aGUgZmly
bXdhcmUgcmVidWlsZC4KCndhbnhsLmMgaXMgYSBQQ0kgZHJpdmVyLCBidXQgQ09ORklHX002OEsg
ZG9lcyBub3Qgc2VsZWN0IENPTkZJR19IQVZFX1BDSS4KU28sIHlvdSBjYW5ub3QgZW5hYmxlIENP
TkZJR19XQU5YTF9CVUlMRF9GSVJNV0FSRSBmb3IgQVJDSD1tNjhrLiBJbiBvdGhlcgp3b3Jkcywg
aWZlcSAoJChBUkNIKSxtNjhrKSBpcyBmYWxzZSBoZXJlLgoKSSBhbSBrZWVwaW5nIHRoZSBkZWFk
IGNvZGUgZm9yIG5vdywgYnV0IHJlYnVpbGRpbmcgdGhlIGZpcm13YXJlIHJlcXVpcmVzCidhczY4
aycgYW5kICdsZDY4aycsIHdoaWNoIEkgZG8gbm90IGhhdmUgaW4gaGFuZC4KCkluc3RlYWQsIHRo
ZSBrZXJuZWwub3JnIG02OGsgR0NDIFsxXSBzdWNjZXNzZnVsbHkgYnVpbHQgaXQuCgpBbGxvd2lu
ZyBhIHVzZXIgdG8gcGFzcyBpbiBDUk9TU19DT01QSUxFX002OEs9IGlzIGhhbmRpZXIuCgpbMV0g
aHR0cHM6Ly9taXJyb3JzLmVkZ2Uua2VybmVsLm9yZy9wdWIvdG9vbHMvY3Jvc3N0b29sL2ZpbGVz
L2Jpbi94ODZfNjQvOS4yLjAveDg2XzY0LWdjYy05LjIuMC1ub2xpYmMtbTY4ay1saW51eC50YXIu
eHoKClN1Z2dlc3RlZC1ieTogR2VlcnQgVXl0dGVyaG9ldmVuIDxnZWVydEBsaW51eC1tNjhrLm9y
Zz4KU2lnbmVkLW9mZi1ieTogTWFzYWhpcm8gWWFtYWRhIDxtYXNhaGlyb3lAa2VybmVsLm9yZz4K
U2lnbmVkLW9mZi1ieTogTmljayBEZXNhdWxuaWVycyA8bmRlc2F1bG5pZXJzQGdvb2dsZS5jb20+
Ci0tLQogZHJpdmVycy9uZXQvd2FuL0tjb25maWcgIHwgIDIgKy0KIGRyaXZlcnMvbmV0L3dhbi9N
YWtlZmlsZSB8IDEyICsrKysrKy0tLS0tLQogMiBmaWxlcyBjaGFuZ2VkLCA3IGluc2VydGlvbnMo
KyksIDcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvd2FuL0tjb25maWcg
Yi9kcml2ZXJzL25ldC93YW4vS2NvbmZpZwppbmRleCBkZDFhMTQ3ZjI5NzEuLjA1OGQ3N2QyZTY5
MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvd2FuL0tjb25maWcKKysrIGIvZHJpdmVycy9uZXQv
d2FuL0tjb25maWcKQEAgLTIwMCw3ICsyMDAsNyBAQCBjb25maWcgV0FOWExfQlVJTERfRklSTVdB
UkUKIAlkZXBlbmRzIG9uIFdBTlhMICYmICFQUkVWRU5UX0ZJUk1XQVJFX0JVSUxECiAJaGVscAog
CSAgQWxsb3dzIHlvdSB0byByZWJ1aWxkIGZpcm13YXJlIHJ1biBieSB0aGUgUVVJQ0MgcHJvY2Vz
c29yLgotCSAgSXQgcmVxdWlyZXMgYXM2OGssIGxkNjhrIGFuZCBoZXhkdW1wIHByb2dyYW1zLgor
CSAgSXQgcmVxdWlyZXMgbTY4ayB0b29sY2hhaW5zIGFuZCBoZXhkdW1wIHByb2dyYW1zLgogCiAJ
ICBZb3Ugc2hvdWxkIG5ldmVyIG5lZWQgdGhpcyBvcHRpb24sIHNheSBOLgogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL25ldC93YW4vTWFrZWZpbGUgYi9kcml2ZXJzL25ldC93YW4vTWFrZWZpbGUKaW5k
ZXggNzAxZjVkMmZlM2I2Li45OTUyNzdjNjU3YTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L3dh
bi9NYWtlZmlsZQorKysgYi9kcml2ZXJzL25ldC93YW4vTWFrZWZpbGUKQEAgLTQwLDE3ICs0MCwx
NyBAQCAkKG9iaikvd2FueGwubzoJJChvYmopL3dhbnhsZncuaW5jCiAKIGlmZXEgKCQoQ09ORklH
X1dBTlhMX0JVSUxEX0ZJUk1XQVJFKSx5KQogaWZlcSAoJChBUkNIKSxtNjhrKQotICBBUzY4SyA9
ICQoQVMpCi0gIExENjhLID0gJChMRCkKKyAgTTY4S0FTID0gJChBUykKKyAgTTY4S0xEID0gJChM
RCkKIGVsc2UKLSAgQVM2OEsgPSBhczY4awotICBMRDY4SyA9IGxkNjhrCisgIE02OEtBUyA9ICQo
Q1JPU1NfQ09NUElMRV9NNjhLKWFzCisgIE02OEtMRCA9ICQoQ1JPU1NfQ09NUElMRV9NNjhLKWxk
CiBlbmRpZgogCiBxdWlldF9jbWRfYnVpbGRfd2FueGxmdyA9IEJMRCBGVyAgJEAKICAgICAgIGNt
ZF9idWlsZF93YW54bGZ3ID0gXAotCSQoQ1BQKSAtRF9fQVNTRU1CTFlfXyAtV3AsLU1ELCQoZGVw
ZmlsZSkgLUkkKHNyY3RyZWUpL2luY2x1ZGUvdWFwaSAkPCB8ICQoQVM2OEspIC1tNjgzNjAgLW8g
JChvYmopL3dhbnhsZncubzsgXAotCSQoTEQ2OEspIC0tb2Zvcm1hdCBiaW5hcnkgLVR0ZXh0IDB4
MTAwMCAkKG9iaikvd2FueGxmdy5vIC1vICQob2JqKS93YW54bGZ3LmJpbjsgXAorCSQoQ1BQKSAt
RF9fQVNTRU1CTFlfXyAtV3AsLU1ELCQoZGVwZmlsZSkgLUkkKHNyY3RyZWUpL2luY2x1ZGUvdWFw
aSAkPCB8ICQoTTY4S0FTKSAtbTY4MzYwIC1vICQob2JqKS93YW54bGZ3Lm87IFwKKwkkKE02OEtM
RCkgLS1vZm9ybWF0IGJpbmFyeSAtVHRleHQgMHgxMDAwICQob2JqKS93YW54bGZ3Lm8gLW8gJChv
YmopL3dhbnhsZncuYmluOyBcCiAJaGV4ZHVtcCAtdmUgJyJcbiIgMTYvMSAiMHglMDJYLCInICQo
b2JqKS93YW54bGZ3LmJpbiB8IHNlZCAncy8weCAgLC8vZzsxcy9eL3N0YXRpYyBjb25zdCB1OCBm
aXJtd2FyZVtdPXsvOyQkcy8sJCQvXG59O1xuLycgPiQob2JqKS93YW54bGZ3LmluYzsgXAogCXJt
IC1mICQob2JqKS93YW54bGZ3LmJpbiAkKG9iaikvd2FueGxmdy5vCiAKLS0gCjIuMjguMC4yOTcu
ZzE5NTZmYThmOGQtZ29vZwoKCkZyb20gNzkxZDkyMWU1MjM0ODQxM2Y4NDJjN2UzMzE0ODYxN2U2
OTZjMDJmZSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWFzYWhpcm8gWWFtYWRhIDxt
YXNhaGlyb3lAa2VybmVsLm9yZz4KRGF0ZTogVGh1LCAyNiBNYXIgMjAyMCAxNDo1NzoxNiArMDkw
MApTdWJqZWN0OiBbUEFUQ0ggNC85XSBuZXQ6IHdhbjogd2FueGw6IHVzZSAkKE02OEtDQykgaW5z
dGVhZCBvZiAkKE02OEtBUykgZm9yCiByZWJ1aWxkaW5nIGZpcm13YXJlCgpjb21taXQgNzM0ZjM3
MTlkMzQzOGY5Y2MxODFkNjc0YzMzY2E5NzYyZTkxNDhhMSB1cHN0cmVhbS4KClRoZSBmaXJtd2Fy
ZSBzb3VyY2UsIHdhbnhsZncuUywgaXMgY3VycmVudGx5IGNvbXBpbGVkIGJ5IHRoZSBjb21ibyBv
ZgokKENQUCkgYW5kICQoTTY4S0FTKS4gVGhpcyBpcyBub3Qgd2hhdCB3ZSB1c3VhbGx5IGRvIGZv
ciBjb21waWxpbmcgKi5TCmZpbGVzLiBJbiBmYWN0LCB0aGlzIE1ha2VmaWxlIGlzIHRoZSBvbmx5
IHVzZXIgb2YgJChBUykgaW4gdGhlIGtlcm5lbApidWlsZC4KCkluc3RlYWQgb2YgY29tYmluaW5n
ICQoQ1BQKSBhbmQgKEFTKSBmcm9tIGRpZmZlcmVudCB0b29sIHNldHMsIHVzaW5nCiQoTTY4S0ND
KSBhcyBhbiBhc3NlbWJsZXIgZHJpdmVyIGlzIHNpbXBsZXIsIGFuZCBzYW5lci4KClNpZ25lZC1v
ZmYtYnk6IE1hc2FoaXJvIFlhbWFkYSA8bWFzYWhpcm95QGtlcm5lbC5vcmc+ClNpZ25lZC1vZmYt
Ynk6IE5pY2sgRGVzYXVsbmllcnMgPG5kZXNhdWxuaWVyc0Bnb29nbGUuY29tPgotLS0KIGRyaXZl
cnMvbmV0L3dhbi9NYWtlZmlsZSB8IDYgKysrLS0tCiAxIGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRp
b25zKCspLCAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L3dhbi9NYWtl
ZmlsZSBiL2RyaXZlcnMvbmV0L3dhbi9NYWtlZmlsZQppbmRleCA5OTUyNzdjNjU3YTEuLmNmN2Ew
YTY1YWFlOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvd2FuL01ha2VmaWxlCisrKyBiL2RyaXZl
cnMvbmV0L3dhbi9NYWtlZmlsZQpAQCAtNDAsMTYgKzQwLDE2IEBAICQob2JqKS93YW54bC5vOgkk
KG9iaikvd2FueGxmdy5pbmMKIAogaWZlcSAoJChDT05GSUdfV0FOWExfQlVJTERfRklSTVdBUkUp
LHkpCiBpZmVxICgkKEFSQ0gpLG02OGspCi0gIE02OEtBUyA9ICQoQVMpCisgIE02OEtDQyA9ICQo
Q0MpCiAgIE02OEtMRCA9ICQoTEQpCiBlbHNlCi0gIE02OEtBUyA9ICQoQ1JPU1NfQ09NUElMRV9N
NjhLKWFzCisgIE02OEtDQyA9ICQoQ1JPU1NfQ09NUElMRV9NNjhLKWdjYwogICBNNjhLTEQgPSAk
KENST1NTX0NPTVBJTEVfTTY4SylsZAogZW5kaWYKIAogcXVpZXRfY21kX2J1aWxkX3dhbnhsZncg
PSBCTEQgRlcgICRACiAgICAgICBjbWRfYnVpbGRfd2FueGxmdyA9IFwKLQkkKENQUCkgLURfX0FT
U0VNQkxZX18gLVdwLC1NRCwkKGRlcGZpbGUpIC1JJChzcmN0cmVlKS9pbmNsdWRlL3VhcGkgJDwg
fCAkKE02OEtBUykgLW02ODM2MCAtbyAkKG9iaikvd2FueGxmdy5vOyBcCisJJChNNjhLQ0MpIC1E
X19BU1NFTUJMWV9fIC1XcCwtTUQsJChkZXBmaWxlKSAtSSQoc3JjdHJlZSkvaW5jbHVkZS91YXBp
IC1jIC1vICQob2JqKS93YW54bGZ3Lm8gJDw7IFwKIAkkKE02OEtMRCkgLS1vZm9ybWF0IGJpbmFy
eSAtVHRleHQgMHgxMDAwICQob2JqKS93YW54bGZ3Lm8gLW8gJChvYmopL3dhbnhsZncuYmluOyBc
CiAJaGV4ZHVtcCAtdmUgJyJcbiIgMTYvMSAiMHglMDJYLCInICQob2JqKS93YW54bGZ3LmJpbiB8
IHNlZCAncy8weCAgLC8vZzsxcy9eL3N0YXRpYyBjb25zdCB1OCBmaXJtd2FyZVtdPXsvOyQkcy8s
JCQvXG59O1xuLycgPiQob2JqKS93YW54bGZ3LmluYzsgXAogCXJtIC1mICQob2JqKS93YW54bGZ3
LmJpbiAkKG9iaikvd2FueGxmdy5vCi0tIAoyLjI4LjAuMjk3LmcxOTU2ZmE4ZjhkLWdvb2cKCgpG
cm9tIDk2M2NkYzk0YjczMGQyYTViYThiNWNlYmQ2NTMzN2ExMjQ0MDFjM2QgTW9uIFNlcCAxNyAw
MDowMDowMCAyMDAxCkZyb206IERtaXRyeSBHb2xvdmluIDxkaW1hQGdvbG92aW4uaW4+CkRhdGU6
IFRodSwgNSBEZWMgMjAxOSAwMDo1NDo0MSArMDIwMApTdWJqZWN0OiBbUEFUQ0ggNS85XSB4ODYv
Ym9vdDoga2J1aWxkOiBhbGxvdyByZWFkZWxmIGV4ZWN1dGFibGUgdG8gYmUKIHNwZWNpZmllZAoK
Y29tbWl0IGVlZmI4YzEyNGZkOTY5ZTlhMTc0ZmYyYmVkZmY4NmFhMzA1YTc0MzggdXBzdHJlYW0u
CgpJbnRyb2R1Y2UgYSBuZXcgUkVBREVMRiB2YXJpYWJsZSB0byB0b3AtbGV2ZWwgTWFrZWZpbGUs
IHNvIHRoZSBuYW1lIG9mCnJlYWRlbGYgYmluYXJ5IGNhbiBiZSBzcGVjaWZpZWQuCgpCZWZvcmUg
dGhpcyBjaGFuZ2UgdGhlIG5hbWUgb2YgdGhlIGJpbmFyeSB3YXMgaGFyZGNvZGVkIHRvCiIkKENS
T1NTX0NPTVBJTEUpcmVhZGVsZiIgd2hpY2ggbWlnaHQgbm90IGJlIHByZXNlbnQgZm9yIGV2ZXJ5
CnRvb2xjaGFpbi4KClRoaXMgYWxsb3dzIHRvIGJ1aWxkIHdpdGggTExWTSBPYmplY3QgUmVhZGVy
IGJ5IHVzaW5nIG1ha2UgcGFyYW1ldGVyClJFQURFTEY9bGx2bS1yZWFkZWxmLgoKTGluazogaHR0
cHM6Ly9naXRodWIuY29tL0NsYW5nQnVpbHRMaW51eC9saW51eC9pc3N1ZXMvNzcxClNpZ25lZC1v
ZmYtYnk6IERtaXRyeSBHb2xvdmluIDxkaW1hQGdvbG92aW4uaW4+ClJldmlld2VkLWJ5OiBOaWNr
IERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogTWFz
YWhpcm8gWWFtYWRhIDxtYXNhaGlyb3lAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogTmljayBE
ZXNhdWxuaWVycyA8bmRlc2F1bG5pZXJzQGdvb2dsZS5jb20+Ci0tLQogTWFrZWZpbGUgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgMyArKy0KIGFyY2gveDg2L2Jvb3QvY29tcHJlc3NlZC9NYWtl
ZmlsZSB8IDIgKy0KIDIgZmlsZXMgY2hhbmdlZCwgMyBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL01ha2VmaWxlIGIvTWFrZWZpbGUKaW5kZXggY2M3MmI4NDcyZjI0
Li45NzFlZDdiMDNjNTYgMTAwNjQ0Ci0tLSBhL01ha2VmaWxlCisrKyBiL01ha2VmaWxlCkBAIC00
MTQsNiArNDE0LDcgQEAgU1RSSVAJCT0gJChDUk9TU19DT01QSUxFKXN0cmlwCiBPQkpDT1BZCQk9
ICQoQ1JPU1NfQ09NUElMRSlvYmpjb3B5CiBPQkpEVU1QCQk9ICQoQ1JPU1NfQ09NUElMRSlvYmpk
dW1wCiBPQkpTSVpFCQk9ICQoQ1JPU1NfQ09NUElMRSlzaXplCitSRUFERUxGCQk9ICQoQ1JPU1Nf
Q09NUElMRSlyZWFkZWxmCiBQQUhPTEUJCT0gcGFob2xlCiBMRVgJCT0gZmxleAogWUFDQwkJPSBi
aXNvbgpAQCAtNDcyLDcgKzQ3Myw3IEBAIEdDQ19QTFVHSU5TX0NGTEFHUyA6PQogQ0xBTkdfRkxB
R1MgOj0KIAogZXhwb3J0IEFSQ0ggU1JDQVJDSCBDT05GSUdfU0hFTEwgQkFTSCBIT1NUQ0MgS0JV
SUxEX0hPU1RDRkxBR1MgQ1JPU1NfQ09NUElMRSBBUyBMRCBDQwotZXhwb3J0IENQUCBBUiBOTSBT
VFJJUCBPQkpDT1BZIE9CSkRVTVAgT0JKU0laRSBQQUhPTEUgTEVYIFlBQ0MgQVdLIElOU1RBTExL
RVJORUwKK2V4cG9ydCBDUFAgQVIgTk0gU1RSSVAgT0JKQ09QWSBPQkpEVU1QIE9CSlNJWkUgUkVB
REVMRiBQQUhPTEUgTEVYIFlBQ0MgQVdLIElOU1RBTExLRVJORUwKIGV4cG9ydCBQRVJMIFBZVEhP
TiBQWVRIT04yIFBZVEhPTjMgQ0hFQ0sgQ0hFQ0tGTEFHUyBNQUtFIFVUU19NQUNISU5FIEhPU1RD
WFgKIGV4cG9ydCBLQlVJTERfSE9TVENYWEZMQUdTIEtCVUlMRF9IT1NUTERGTEFHUyBLQlVJTERf
SE9TVExETElCUyBMREZMQUdTX01PRFVMRQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9ib290L2Nv
bXByZXNzZWQvTWFrZWZpbGUgYi9hcmNoL3g4Ni9ib290L2NvbXByZXNzZWQvTWFrZWZpbGUKaW5k
ZXggNmI4NGFmZGQ3NTM4Li45OGFhYzViNGJkYjcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2Jvb3Qv
Y29tcHJlc3NlZC9NYWtlZmlsZQorKysgYi9hcmNoL3g4Ni9ib290L2NvbXByZXNzZWQvTWFrZWZp
bGUKQEAgLTEwMiw3ICsxMDIsNyBAQCB2bWxpbnV4LW9ianMtJChDT05GSUdfRUZJX01JWEVEKSAr
PSAkKG9iaikvZWZpX3RodW5rXyQoQklUUykubwogcXVpZXRfY21kX2NoZWNrX2RhdGFfcmVsID0g
REFUQVJFTCAkQAogZGVmaW5lIGNtZF9jaGVja19kYXRhX3JlbAogCWZvciBvYmogaW4gJChmaWx0
ZXIgJS5vLCReKTsgZG8gXAotCQkke0NST1NTX0NPTVBJTEV9cmVhZGVsZiAtUyAkJG9iaiB8IGdy
ZXAgLXFGIC5yZWwubG9jYWwgJiYgeyBcCisJCSQoUkVBREVMRikgLVMgJCRvYmogfCBncmVwIC1x
RiAucmVsLmxvY2FsICYmIHsgXAogCQkJZWNobyAiZXJyb3I6ICQkb2JqIGhhcyBkYXRhIHJlbG9j
YXRpb25zISIgPiYyOyBcCiAJCQlleGl0IDE7IFwKIAkJfSB8fCB0cnVlOyBcCi0tIAoyLjI4LjAu
Mjk3LmcxOTU2ZmE4ZjhkLWdvb2cKCgpGcm9tIGFjMzlkMmYzYjEzZjY0MGNjZjMzMjFkNzNhODQ4
MmZmNGJjM2FkYmQgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1hc2FoaXJvIFlhbWFk
YSA8bWFzYWhpcm95QGtlcm5lbC5vcmc+CkRhdGU6IE1vbiwgNiBKYW4gMjAyMCAxNzozNjoyOCAr
MDkwMApTdWJqZWN0OiBbUEFUQ0ggNi85XSBrYnVpbGQ6IHJlbW92ZSBQWVRIT04yIHZhcmlhYmxl
Cgpjb21taXQgOTRmNzM0NWI3MTI0MDViNzk2NDdhNmE0YmY4Y2NiZDBkNzhmYTY5ZCB1cHN0cmVh
bS4KClB5dGhvbiAyIGhhcyByZXRpcmVkLiBUaGVyZSBpcyBubyB1c2VyIG9mIHRoaXMgdmFyaWFi
bGUuCgpTaWduZWQtb2ZmLWJ5OiBNYXNhaGlybyBZYW1hZGEgPG1hc2FoaXJveUBrZXJuZWwub3Jn
PgpTaWduZWQtb2ZmLWJ5OiBOaWNrIERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xlLmNv
bT4KLS0tCiBNYWtlZmlsZSB8IDMgKy0tCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyks
IDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvTWFrZWZpbGUgYi9NYWtlZmlsZQppbmRleCA5
NzFlZDdiMDNjNTYuLjlkYjkzODVjMzM1ZCAxMDA2NDQKLS0tIGEvTWFrZWZpbGUKKysrIGIvTWFr
ZWZpbGUKQEAgLTQyMyw3ICs0MjMsNiBAQCBJTlNUQUxMS0VSTkVMICA6PSBpbnN0YWxsa2VybmVs
CiBERVBNT0QJCT0gL3NiaW4vZGVwbW9kCiBQRVJMCQk9IHBlcmwKIFBZVEhPTgkJPSBweXRob24K
LVBZVEhPTjIJCT0gcHl0aG9uMgogUFlUSE9OMwkJPSBweXRob24zCiBDSEVDSwkJPSBzcGFyc2UK
IEJBU0gJCT0gYmFzaApAQCAtNDc0LDcgKzQ3Myw3IEBAIENMQU5HX0ZMQUdTIDo9CiAKIGV4cG9y
dCBBUkNIIFNSQ0FSQ0ggQ09ORklHX1NIRUxMIEJBU0ggSE9TVENDIEtCVUlMRF9IT1NUQ0ZMQUdT
IENST1NTX0NPTVBJTEUgQVMgTEQgQ0MKIGV4cG9ydCBDUFAgQVIgTk0gU1RSSVAgT0JKQ09QWSBP
QkpEVU1QIE9CSlNJWkUgUkVBREVMRiBQQUhPTEUgTEVYIFlBQ0MgQVdLIElOU1RBTExLRVJORUwK
LWV4cG9ydCBQRVJMIFBZVEhPTiBQWVRIT04yIFBZVEhPTjMgQ0hFQ0sgQ0hFQ0tGTEFHUyBNQUtF
IFVUU19NQUNISU5FIEhPU1RDWFgKK2V4cG9ydCBQRVJMIFBZVEhPTiBQWVRIT04zIENIRUNLIENI
RUNLRkxBR1MgTUFLRSBVVFNfTUFDSElORSBIT1NUQ1hYCiBleHBvcnQgS0JVSUxEX0hPU1RDWFhG
TEFHUyBLQlVJTERfSE9TVExERkxBR1MgS0JVSUxEX0hPU1RMRExJQlMgTERGTEFHU19NT0RVTEUK
IAogZXhwb3J0IEtCVUlMRF9DUFBGTEFHUyBOT1NURElOQ19GTEFHUyBMSU5VWElOQ0xVREUgT0JK
Q09QWUZMQUdTIEtCVUlMRF9MREZMQUdTCi0tIAoyLjI4LjAuMjk3LmcxOTU2ZmE4ZjhkLWdvb2cK
CgpGcm9tIGM0NWE4MTVmZjE0YTY4NGViN2Q3MTg3NWE2OTRlYTNlOWIzYmJhZjggTW9uIFNlcCAx
NyAwMDowMDowMCAyMDAxCkZyb206IE1hc2FoaXJvIFlhbWFkYSA8bWFzYWhpcm95QGtlcm5lbC5v
cmc+CkRhdGU6IFRodSwgMjYgTWFyIDIwMjAgMTQ6NTc6MTggKzA5MDAKU3ViamVjdDogW1BBVENI
IDcvOV0ga2J1aWxkOiByZW1vdmUgQVMgdmFyaWFibGUKCmNvbW1pdCBhYTgyNGUwYzk2MmI1MzJk
NTA3M2NiYjQxYjJlZmNkNmY1ZTcyYmFlIHVwc3RyZWFtLgoKQXMgY29tbWl0IDVlZjg3MjYzNmNh
NyAoImtidWlsZDogZ2V0IHJpZCBvZiBtaXNsZWFkaW5nICQoQVMpIGZyb20KZG9jdW1lbnRzIikg
bm90ZWQsIHdlIHJhcmVseSB1c2UgJChBUykgZGlyZWN0bHkgaW4gdGhlIGtlcm5lbCBidWlsZC4K
Ck5vdyB0aGF0IHRoZSBvbmx5L2xhc3QgdXNlciBvZiAkKEFTKSBpbiBkcml2ZXJzL25ldC93YW4v
TWFrZWZpbGUgd2FzCmNvbnZlcnRlZCB0byAkKENDKSwgJChBUykgaXMgbm8gbG9uZ2VyIHVzZWQg
aW4gdGhlIGJ1aWxkIHByb2Nlc3MuCgpZb3UgY2FuIHN0aWxsIHBhc3MgaW4gQVM9Y2xhbmcsIHdo
aWNoIGlzIGp1c3QgYSBzd2l0Y2ggdG8gdHVybiBvbgp0aGUgTExWTSBpbnRlZ3JhdGVkIGFzc2Vt
Ymxlci4KClNpZ25lZC1vZmYtYnk6IE1hc2FoaXJvIFlhbWFkYSA8bWFzYWhpcm95QGtlcm5lbC5v
cmc+ClJldmlld2VkLWJ5OiBOaWNrIERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xlLmNv
bT4KVGVzdGVkLWJ5OiBOaWNrIERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xlLmNvbT4K
UmV2aWV3ZWQtYnk6IE5hdGhhbiBDaGFuY2VsbG9yIDxuYXRlY2hhbmNlbGxvckBnbWFpbC5jb20+
ClNpZ25lZC1vZmYtYnk6IE5pY2sgRGVzYXVsbmllcnMgPG5kZXNhdWxuaWVyc0Bnb29nbGUuY29t
PgotLS0KIE1ha2VmaWxlIHwgNSArKy0tLQogMSBmaWxlIGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygr
KSwgMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9NYWtlZmlsZSBiL01ha2VmaWxlCmluZGV4
IDlkYjkzODVjMzM1ZC4uN2M1ZjA5OTA0YmI1IDEwMDY0NAotLS0gYS9NYWtlZmlsZQorKysgYi9N
YWtlZmlsZQpAQCAtNDA0LDcgKzQwNCw2IEBAIEtCVUlMRF9IT1NUTERGTEFHUyAgOj0gJChIT1NU
X0xGU19MREZMQUdTKSAkKEhPU1RMREZMQUdTKQogS0JVSUxEX0hPU1RMRExJQlMgICA6PSAkKEhP
U1RfTEZTX0xJQlMpICQoSE9TVExETElCUykKIAogIyBNYWtlIHZhcmlhYmxlcyAoQ0MsIGV0Yy4u
LikKLUFTCQk9ICQoQ1JPU1NfQ09NUElMRSlhcwogTEQJCT0gJChDUk9TU19DT01QSUxFKWxkCiBD
QwkJPSAkKENST1NTX0NPTVBJTEUpZ2NjCiBDUFAJCT0gJChDQykgLUUKQEAgLTQ3MSw3ICs0NzAs
NyBAQCBLQlVJTERfTERGTEFHUyA6PQogR0NDX1BMVUdJTlNfQ0ZMQUdTIDo9CiBDTEFOR19GTEFH
UyA6PQogCi1leHBvcnQgQVJDSCBTUkNBUkNIIENPTkZJR19TSEVMTCBCQVNIIEhPU1RDQyBLQlVJ
TERfSE9TVENGTEFHUyBDUk9TU19DT01QSUxFIEFTIExEIENDCitleHBvcnQgQVJDSCBTUkNBUkNI
IENPTkZJR19TSEVMTCBCQVNIIEhPU1RDQyBLQlVJTERfSE9TVENGTEFHUyBDUk9TU19DT01QSUxF
IExEIENDCiBleHBvcnQgQ1BQIEFSIE5NIFNUUklQIE9CSkNPUFkgT0JKRFVNUCBPQkpTSVpFIFJF
QURFTEYgUEFIT0xFIExFWCBZQUNDIEFXSyBJTlNUQUxMS0VSTkVMCiBleHBvcnQgUEVSTCBQWVRI
T04gUFlUSE9OMyBDSEVDSyBDSEVDS0ZMQUdTIE1BS0UgVVRTX01BQ0hJTkUgSE9TVENYWAogZXhw
b3J0IEtCVUlMRF9IT1NUQ1hYRkxBR1MgS0JVSUxEX0hPU1RMREZMQUdTIEtCVUlMRF9IT1NUTERM
SUJTIExERkxBR1NfTU9EVUxFCkBAIC01MzQsNyArNTMzLDcgQEAgZW5kaWYKIGlmbmVxICgkKEdD
Q19UT09MQ0hBSU4pLCkKIENMQU5HX0ZMQUdTCSs9IC0tZ2NjLXRvb2xjaGFpbj0kKEdDQ19UT09M
Q0hBSU4pCiBlbmRpZgotaWZlcSAoJChzaGVsbCAkKEFTKSAtLXZlcnNpb24gMj4mMSB8IGhlYWQg
LW4gMSB8IGdyZXAgY2xhbmcpLCkKK2lmZXEgKCQoaWYgJChBUyksJChzaGVsbCAkKEFTKSAtLXZl
cnNpb24gMj4mMSB8IGhlYWQgLW4gMSB8IGdyZXAgY2xhbmcpKSwpCiBDTEFOR19GTEFHUwkrPSAt
bm8taW50ZWdyYXRlZC1hcwogZW5kaWYKIENMQU5HX0ZMQUdTCSs9IC1XZXJyb3I9dW5rbm93bi13
YXJuaW5nLW9wdGlvbgotLSAKMi4yOC4wLjI5Ny5nMTk1NmZhOGY4ZC1nb29nCgoKRnJvbSA1YTdm
ZDNlOTk2ZjY0MDExNGJiNmNhMjdkNzMwM2Y5MmFmNWU0ODk0IE1vbiBTZXAgMTcgMDA6MDA6MDAg
MjAwMQpGcm9tOiBNYXNhaGlybyBZYW1hZGEgPG1hc2FoaXJveUBrZXJuZWwub3JnPgpEYXRlOiBX
ZWQsIDggQXByIDIwMjAgMTA6MzY6MjIgKzA5MDAKU3ViamVjdDogW1BBVENIIDgvOV0ga2J1aWxk
OiByZXBsYWNlIEFTPWNsYW5nIHdpdGggTExWTV9JQVM9MQoKY29tbWl0IDdlMjBlNDdjNzBmODEw
ZDY3OGQwMjk0MWZhM2M2NzEyMDljNGNhOTcgdXBzdHJlYW0uCgpUaGUgJ0FTJyB2YXJpYWJsZSBp
cyB1bnVzZWQgZm9yIGJ1aWxkaW5nIHRoZSBrZXJuZWwuIE9ubHkgdGhlIHJlbWFpbmluZwp1c2Fn
ZSBpcyB0byB0dXJuIG9uIHRoZSBpbnRlZ3JhdGVkIGFzc2VtYmxlci4gQSBib29sZWFuIGZsYWcg
aXMgYSBiZXR0ZXIKZml0IGZvciB0aGlzIHB1cnBvc2UuCgpBUz1jbGFuZyB3YXMgYWRkZWQgZm9y
IGV4cGVydHMuIFNvLCBJIHJlcGxhY2VkIGl0IHdpdGggTExWTV9JQVM9MSwKYnJlYWtpbmcgdGhl
IGJhY2t3YXJkIGNvbXBhdGliaWxpdHkuCgpTdWdnZXN0ZWQtYnk6IE5pY2sgRGVzYXVsbmllcnMg
PG5kZXNhdWxuaWVyc0Bnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXNhaGlybyBZYW1hZGEg
PG1hc2FoaXJveUBrZXJuZWwub3JnPgpSZXZpZXdlZC1ieTogTmF0aGFuIENoYW5jZWxsb3IgPG5h
dGVjaGFuY2VsbG9yQGdtYWlsLmNvbT4KUmV2aWV3ZWQtYnk6IE5pY2sgRGVzYXVsbmllcnMgPG5k
ZXNhdWxuaWVyc0Bnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBOaWNrIERlc2F1bG5pZXJzIDxu
ZGVzYXVsbmllcnNAZ29vZ2xlLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJz
dCB8IDUgKysrKy0KIE1ha2VmaWxlICAgICAgICAgICAgICAgICAgICAgIHwgMiArLQogMiBmaWxl
cyBjaGFuZ2VkLCA1IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
RG9jdW1lbnRhdGlvbi9rYnVpbGQvbGx2bS5yc3QgYi9Eb2N1bWVudGF0aW9uL2tidWlsZC9sbHZt
LnJzdAppbmRleCBlZWZiZGZhM2U0ZDkuLjQ1MDcwODUzNDg2MCAxMDA2NDQKLS0tIGEvRG9jdW1l
bnRhdGlvbi9rYnVpbGQvbGx2bS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9rYnVpbGQvbGx2bS5y
c3QKQEAgLTUwLDExICs1MCwxNCBAQCBMTFZNIFV0aWxpdGllcwogTExWTSBoYXMgc3Vic3RpdHV0
ZXMgZm9yIEdOVSBiaW51dGlscyB1dGlsaXRpZXMuIFRoZXNlIGNhbiBiZSBpbnZva2VkIGFzCiBh
ZGRpdGlvbmFsIHBhcmFtZXRlcnMgdG8gYG1ha2VgLgogCi0JbWFrZSBDQz1jbGFuZyBBUz1jbGFu
ZyBMRD1sZC5sbGQgQVI9bGx2bS1hciBOTT1sbHZtLW5tIFNUUklQPWxsdm0tc3RyaXAgXFwKKwlt
YWtlIENDPWNsYW5nIExEPWxkLmxsZCBBUj1sbHZtLWFyIE5NPWxsdm0tbm0gU1RSSVA9bGx2bS1z
dHJpcCBcXAogCSAgT0JKQ09QWT1sbHZtLW9iamNvcHkgT0JKRFVNUD1sbHZtLW9iamR1bXAgT0JK
U0laRT1sbHZtLXNpemUgXFwKIAkgIFJFQURFTEY9bGx2bS1yZWFkZWxmIEhPU1RDQz1jbGFuZyBI
T1NUQ1hYPWNsYW5nKysgSE9TVEFSPWxsdm0tYXIgXFwKIAkgIEhPU1RMRD1sZC5sbGQKIAorQ3Vy
cmVudGx5LCB0aGUgaW50ZWdyYXRlZCBhc3NlbWJsZXIgaXMgZGlzYWJsZWQgYnkgZGVmYXVsdC4g
WW91IGNhbiBwYXNzCitgTExWTV9JQVM9MWAgdG8gZW5hYmxlIGl0LgorCiBHZXR0aW5nIEhlbHAK
IC0tLS0tLS0tLS0tLQogCmRpZmYgLS1naXQgYS9NYWtlZmlsZSBiL01ha2VmaWxlCmluZGV4IDdj
NWYwOTkwNGJiNS4uNTUyNjQwYTIyYTBjIDEwMDY0NAotLS0gYS9NYWtlZmlsZQorKysgYi9NYWtl
ZmlsZQpAQCAtNTMzLDcgKzUzMyw3IEBAIGVuZGlmCiBpZm5lcSAoJChHQ0NfVE9PTENIQUlOKSwp
CiBDTEFOR19GTEFHUwkrPSAtLWdjYy10b29sY2hhaW49JChHQ0NfVE9PTENIQUlOKQogZW5kaWYK
LWlmZXEgKCQoaWYgJChBUyksJChzaGVsbCAkKEFTKSAtLXZlcnNpb24gMj4mMSB8IGhlYWQgLW4g
MSB8IGdyZXAgY2xhbmcpKSwpCitpZm5lcSAoJChMTFZNX0lBUyksMSkKIENMQU5HX0ZMQUdTCSs9
IC1uby1pbnRlZ3JhdGVkLWFzCiBlbmRpZgogQ0xBTkdfRkxBR1MJKz0gLVdlcnJvcj11bmtub3du
LXdhcm5pbmctb3B0aW9uCi0tIAoyLjI4LjAuMjk3LmcxOTU2ZmE4ZjhkLWdvb2cKCgpGcm9tIDMy
NTA5ZjkxZTUxNTY5ODQ0MTFjNGY5MDUwMmFhMzI0NDIzNDJlNTAgTW9uIFNlcCAxNyAwMDowMDow
MCAyMDAxCkZyb206IE1hc2FoaXJvIFlhbWFkYSA8bWFzYWhpcm95QGtlcm5lbC5vcmc+CkRhdGU6
IFdlZCwgOCBBcHIgMjAyMCAxMDozNjoyMyArMDkwMApTdWJqZWN0OiBbUEFUQ0ggOS85XSBrYnVp
bGQ6IHN1cHBvcnQgTExWTT0xIHRvIHN3aXRjaCB0aGUgZGVmYXVsdCB0b29scyB0bwogQ2xhbmcv
TExWTQoKY29tbWl0IGEwZDFjOTUxZWYwOGVkMjRmMzUxMjkyNjdlMzU5NWQ4NmY1N2Y1ZDMgdXBz
dHJlYW0uCgpBcyBEb2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdCBpbXBsaWVzLCBidWlsZGlu
ZyB0aGUga2VybmVsIHdpdGggYQpmdWxsIHNldCBvZiBMTFZNIHRvb2xzIGdldHMgdmVyeSB2ZXJi
b3NlIGFuZCB1bndpZWxkeS4KClByb3ZpZGUgYSBzaW5nbGUgc3dpdGNoIExMVk09MSB0byB1c2Ug
Q2xhbmcgYW5kIExMVk0gdG9vbHMgaW5zdGVhZApvZiBHQ0MgYW5kIEJpbnV0aWxzLiBZb3UgY2Fu
IHBhc3MgaXQgZnJvbSB0aGUgY29tbWFuZCBsaW5lIG9yIGFzIGFuCmVudmlyb25tZW50IHZhcmlh
YmxlLgoKUGxlYXNlIG5vdGUgTExWTT0xIGRvZXMgbm90IHR1cm4gb24gdGhlIGludGVncmF0ZWQg
YXNzZW1ibGVyLiBZb3UgbmVlZAp0byBwYXNzIExMVk1fSUFTPTEgdG8gdXNlIGl0LiBXaGVuIHRo
ZSB1cHN0cmVhbSBrZXJuZWwgaXMgcmVhZHkgZm9yIHRoZQppbnRlZ3JhdGVkIGFzc2VtYmxlciwg
SSB0aGluayB3ZSBjYW4gbWFrZSBpdCBkZWZhdWx0LgoKV2UgZGlzY3Vzc2VkIHdoYXQgd2UgbmVl
ZCwgYW5kIHdlIGFncmVlZCB0byBnbyB3aXRoIGEgc2ltcGxlIGJvb2xlYW4KZmxhZyB0aGF0IHN3
aXRjaGVzIGJvdGggdGFyZ2V0IGFuZCBob3N0IHRvb2xzOgoKICBodHRwczovL2xrbWwub3JnL2xr
bWwvMjAyMC8zLzI4LzQ5NAogIGh0dHBzOi8vbGttbC5vcmcvbGttbC8yMDIwLzQvMy80MwoKU29t
ZSBpdGVtcyBkaXNjdXNzZWQsIGJ1dCBub3QgYWRvcHRlZDoKCi0gTExWTV9ESVIKCiAgV2hlbiBt
dWx0aXBsZSB2ZXJzaW9ucyBvZiBMTFZNIGFyZSBpbnN0YWxsZWQsIEkganVzdCB0aG91Z2h0IHN1
cHBvcnRpbmcKICBMTFZNX0RJUj0vcGF0aC90by9teS9sbHZtL2Jpbi8gbWlnaHQgYmUgdXNlZnVs
LgoKICBDQyAgICAgID0gJChMTFZNX0RJUiljbGFuZwogIExEICAgICAgPSAkKExMVk1fRElSKWxk
LmxsZAogICAgLi4uCgogIEhvd2V2ZXIsIHdlIGNhbiBoYW5kbGUgdGhpcyBieSBtb2RpZnlpbmcg
UEFUSC4gU28sIHdlIGRlY2lkZWQgdG8gbm90IGRvCiAgdGhpcy4KCi0gTExWTV9TVUZGSVgKCiAg
U29tZSBkaXN0cmlidXRpb25zIChlLmcuIERlYmlhbikgcGFja2FnZSBzcGVjaWZpYyB2ZXJzaW9u
cyBvZiBMTFZNIHdpdGgKICBuYW1pbmcgY29udmVudGlvbnMgdGhhdCB1c2UgdGhlIHZlcnNpb24g
YXMgYSBzdWZmaXguCgogIENDICAgICAgPSBjbGFuZyQoTExWTV9TVUZGSVgpCiAgTEQgICAgICA9
IGxkLmxsZChMTFZNX1NVRkZJWCkKICAgIC4uLgoKICB3aWxsIGFsbG93IGEgdXNlciB0byBwYXNz
IExMVk1fU1VGRklYPS0xMSB0byB1c2UgY2xhbmctMTEgZXRjLiwKICBidXQgdGhlIHN1ZmZpeGVk
IHZlcnNpb25zIGluIC91c3IvYmluLyBhcmUgc3ltbGlua3MgdG8gYmluYXJpZXMgaW4KICAvdXNy
L2xpYi9sbHZtLSMvYmluLywgc28gdGhpcyBjYW4gYWxzbyBiZSBoYW5kbGVkIGJ5IFBBVEguCgpT
aWduZWQtb2ZmLWJ5OiBNYXNhaGlybyBZYW1hZGEgPG1hc2FoaXJveUBrZXJuZWwub3JnPgpSZXZp
ZXdlZC1ieTogTmF0aGFuIENoYW5jZWxsb3IgPG5hdGVjaGFuY2VsbG9yQGdtYWlsLmNvbT4KVGVz
dGVkLWJ5OiBOYXRoYW4gQ2hhbmNlbGxvciA8bmF0ZWNoYW5jZWxsb3JAZ21haWwuY29tPiAjIGJ1
aWxkClRlc3RlZC1ieTogTmljayBEZXNhdWxuaWVycyA8bmRlc2F1bG5pZXJzQGdvb2dsZS5jb20+
ClJldmlld2VkLWJ5OiBOaWNrIERlc2F1bG5pZXJzIDxuZGVzYXVsbmllcnNAZ29vZ2xlLmNvbT4K
U2lnbmVkLW9mZi1ieTogTmljayBEZXNhdWxuaWVycyA8bmRlc2F1bG5pZXJzQGdvb2dsZS5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi9rYnVpbGQva2J1aWxkLnJzdCB8ICA1ICsrKysrCiBEb2N1bWVu
dGF0aW9uL2tidWlsZC9sbHZtLnJzdCAgIHwgIDggKysrKysrLS0KIE1ha2VmaWxlICAgICAgICAg
ICAgICAgICAgICAgICAgfCAyOSArKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLQogdG9vbHMv
b2JqdG9vbC9NYWtlZmlsZSAgICAgICAgICB8ICA2ICsrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCA0
MCBpbnNlcnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRp
b24va2J1aWxkL2tidWlsZC5yc3QgYi9Eb2N1bWVudGF0aW9uL2tidWlsZC9rYnVpbGQucnN0Cmlu
ZGV4IGYxZTVkY2U4NmFmNy4uODUyY2NjNTUxYmIzIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9u
L2tidWlsZC9rYnVpbGQucnN0CisrKyBiL0RvY3VtZW50YXRpb24va2J1aWxkL2tidWlsZC5yc3QK
QEAgLTI2MiwzICsyNjIsOCBAQCBLQlVJTERfQlVJTERfVVNFUiwgS0JVSUxEX0JVSUxEX0hPU1QK
IFRoZXNlIHR3byB2YXJpYWJsZXMgYWxsb3cgdG8gb3ZlcnJpZGUgdGhlIHVzZXJAaG9zdCBzdHJp
bmcgZGlzcGxheWVkIGR1cmluZwogYm9vdCBhbmQgaW4gL3Byb2MvdmVyc2lvbi4gVGhlIGRlZmF1
bHQgdmFsdWUgaXMgdGhlIG91dHB1dCBvZiB0aGUgY29tbWFuZHMKIHdob2FtaSBhbmQgaG9zdCwg
cmVzcGVjdGl2ZWx5LgorCitMTFZNCistLS0tCitJZiB0aGlzIHZhcmlhYmxlIGlzIHNldCB0byAx
LCBLYnVpbGQgd2lsbCB1c2UgQ2xhbmcgYW5kIExMVk0gdXRpbGl0aWVzIGluc3RlYWQKK29mIEdD
QyBhbmQgR05VIGJpbnV0aWxzIHRvIGJ1aWxkIHRoZSBrZXJuZWwuCmRpZmYgLS1naXQgYS9Eb2N1
bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdCBiL0RvY3VtZW50YXRpb24va2J1aWxkL2xsdm0ucnN0
CmluZGV4IDQ1MDcwODUzNDg2MC4uYzc3NmI2ZWVlOTY5IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0
aW9uL2tidWlsZC9sbHZtLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2tidWlsZC9sbHZtLnJzdApA
QCAtNDcsOCArNDcsMTIgQEAgZXhhbXBsZToKIExMVk0gVXRpbGl0aWVzCiAtLS0tLS0tLS0tLS0t
LQogCi1MTFZNIGhhcyBzdWJzdGl0dXRlcyBmb3IgR05VIGJpbnV0aWxzIHV0aWxpdGllcy4gVGhl
c2UgY2FuIGJlIGludm9rZWQgYXMKLWFkZGl0aW9uYWwgcGFyYW1ldGVycyB0byBgbWFrZWAuCitM
TFZNIGhhcyBzdWJzdGl0dXRlcyBmb3IgR05VIGJpbnV0aWxzIHV0aWxpdGllcy4gS2J1aWxkIHN1
cHBvcnRzIGBMTFZNPTFgCit0byBlbmFibGUgdGhlbS4KKworCW1ha2UgTExWTT0xCisKK1RoZXkg
Y2FuIGJlIGVuYWJsZWQgaW5kaXZpZHVhbGx5LiBUaGUgZnVsbCBsaXN0IG9mIHRoZSBwYXJhbWV0
ZXJzOgogCiAJbWFrZSBDQz1jbGFuZyBMRD1sZC5sbGQgQVI9bGx2bS1hciBOTT1sbHZtLW5tIFNU
UklQPWxsdm0tc3RyaXAgXFwKIAkgIE9CSkNPUFk9bGx2bS1vYmpjb3B5IE9CSkRVTVA9bGx2bS1v
YmpkdW1wIE9CSlNJWkU9bGx2bS1zaXplIFxcCmRpZmYgLS1naXQgYS9NYWtlZmlsZSBiL01ha2Vm
aWxlCmluZGV4IDU1MjY0MGEyMmEwYy4uYTUyMzdkZDg2MWNjIDEwMDY0NAotLS0gYS9NYWtlZmls
ZQorKysgYi9NYWtlZmlsZQpAQCAtMzk0LDggKzM5NCwxMyBAQCBIT1NUX0xGU19DRkxBR1MgOj0g
JChzaGVsbCBnZXRjb25mIExGU19DRkxBR1MgMj4vZGV2L251bGwpCiBIT1NUX0xGU19MREZMQUdT
IDo9ICQoc2hlbGwgZ2V0Y29uZiBMRlNfTERGTEFHUyAyPi9kZXYvbnVsbCkKIEhPU1RfTEZTX0xJ
QlMgOj0gJChzaGVsbCBnZXRjb25mIExGU19MSUJTIDI+L2Rldi9udWxsKQogCi1IT1NUQ0MgICAg
ICAgPSBnY2MKLUhPU1RDWFggICAgICA9IGcrKworaWZuZXEgKCQoTExWTSksKQorSE9TVENDCT0g
Y2xhbmcKK0hPU1RDWFgJPSBjbGFuZysrCitlbHNlCitIT1NUQ0MJPSBnY2MKK0hPU1RDWFgJPSBn
KysKK2VuZGlmCiBLQlVJTERfSE9TVENGTEFHUyAgIDo9IC1XYWxsIC1XbWlzc2luZy1wcm90b3R5
cGVzIC1Xc3RyaWN0LXByb3RvdHlwZXMgLU8yIFwKIAkJLWZvbWl0LWZyYW1lLXBvaW50ZXIgLXN0
ZD1nbnU4OSAkKEhPU1RfTEZTX0NGTEFHUykgXAogCQkkKEhPU1RDRkxBR1MpCkBAIC00MDQsMTYg
KzQwOSwyOCBAQCBLQlVJTERfSE9TVExERkxBR1MgIDo9ICQoSE9TVF9MRlNfTERGTEFHUykgJChI
T1NUTERGTEFHUykKIEtCVUlMRF9IT1NUTERMSUJTICAgOj0gJChIT1NUX0xGU19MSUJTKSAkKEhP
U1RMRExJQlMpCiAKICMgTWFrZSB2YXJpYWJsZXMgKENDLCBldGMuLi4pCi1MRAkJPSAkKENST1NT
X0NPTVBJTEUpbGQKLUNDCQk9ICQoQ1JPU1NfQ09NUElMRSlnY2MKIENQUAkJPSAkKENDKSAtRQor
aWZuZXEgKCQoTExWTSksKQorQ0MJCT0gY2xhbmcKK0xECQk9IGxkLmxsZAorQVIJCT0gbGx2bS1h
cgorTk0JCT0gbGx2bS1ubQorT0JKQ09QWQkJPSBsbHZtLW9iamNvcHkKK09CSkRVTVAJCT0gbGx2
bS1vYmpkdW1wCitSRUFERUxGCQk9IGxsdm0tcmVhZGVsZgorT0JKU0laRQkJPSBsbHZtLXNpemUK
K1NUUklQCQk9IGxsdm0tc3RyaXAKK2Vsc2UKK0NDCQk9ICQoQ1JPU1NfQ09NUElMRSlnY2MKK0xE
CQk9ICQoQ1JPU1NfQ09NUElMRSlsZAogQVIJCT0gJChDUk9TU19DT01QSUxFKWFyCiBOTQkJPSAk
KENST1NTX0NPTVBJTEUpbm0KLVNUUklQCQk9ICQoQ1JPU1NfQ09NUElMRSlzdHJpcAogT0JKQ09Q
WQkJPSAkKENST1NTX0NPTVBJTEUpb2JqY29weQogT0JKRFVNUAkJPSAkKENST1NTX0NPTVBJTEUp
b2JqZHVtcAotT0JKU0laRQkJPSAkKENST1NTX0NPTVBJTEUpc2l6ZQogUkVBREVMRgkJPSAkKENS
T1NTX0NPTVBJTEUpcmVhZGVsZgorT0JKU0laRQkJPSAkKENST1NTX0NPTVBJTEUpc2l6ZQorU1RS
SVAJCT0gJChDUk9TU19DT01QSUxFKXN0cmlwCitlbmRpZgogUEFIT0xFCQk9IHBhaG9sZQogTEVY
CQk9IGZsZXgKIFlBQ0MJCT0gYmlzb24KZGlmZiAtLWdpdCBhL3Rvb2xzL29ianRvb2wvTWFrZWZp
bGUgYi90b29scy9vYmp0b29sL01ha2VmaWxlCmluZGV4IGVlMDhhZWZmMzBhMS4uZjU5MWM0ZDFi
NmZlIDEwMDY0NAotLS0gYS90b29scy9vYmp0b29sL01ha2VmaWxlCisrKyBiL3Rvb2xzL29ianRv
b2wvTWFrZWZpbGUKQEAgLTMsOSArMywxNSBAQCBpbmNsdWRlIC4uL3NjcmlwdHMvTWFrZWZpbGUu
aW5jbHVkZQogaW5jbHVkZSAuLi9zY3JpcHRzL01ha2VmaWxlLmFyY2gKIAogIyBhbHdheXMgdXNl
IHRoZSBob3N0IGNvbXBpbGVyCitpZm5lcSAoJChMTFZNKSwpCitIT1NUQVIJPz0gbGx2bS1hcgor
SE9TVENDCT89IGNsYW5nCitIT1NUTEQJPz0gbGQubGxkCitlbHNlCiBIT1NUQVIJPz0gYXIKIEhP
U1RDQwk/PSBnY2MKIEhPU1RMRAk/PSBsZAorZW5kaWYKIEFSCSA9ICQoSE9TVEFSKQogQ0MJID0g
JChIT1NUQ0MpCiBMRAkgPSAkKEhPU1RMRCkKLS0gCjIuMjguMC4yOTcuZzE5NTZmYThmOGQtZ29v
ZwoK
--000000000000af42ec05ad54c52d--
