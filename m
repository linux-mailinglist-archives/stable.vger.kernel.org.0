Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id C6EDA15D98D
	for <lists+stable@lfdr.de>; Fri, 14 Feb 2020 15:32:33 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729258AbgBNOcc (ORCPT <rfc822;lists+stable@lfdr.de>);
        Fri, 14 Feb 2020 09:32:32 -0500
Received: from mail7.static.mailgun.info ([104.130.122.7]:12234 "EHLO
        mail7.static.mailgun.info" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729386AbgBNOcc (ORCPT
        <rfc822;stable@vger.kernel.org>); Fri, 14 Feb 2020 09:32:32 -0500
X-Greylist: delayed 311 seconds by postgrey-1.27 at vger.kernel.org; Fri, 14 Feb 2020 09:30:43 EST
DKIM-Signature: a=rsa-sha256; v=1; c=relaxed/relaxed; d=mixtli.metztli.it; q=dns/txt;
 s=mx; t=1581690644; h=From: Date: Message-Id: To: Subject:
 Content-Type: MIME-Version: Sender;
 bh=SYPCunj1R62WGhJGcQrm/yJoisDId3dE2taeoHTiPew=; b=izxf7TvyEAW7xtywFjIN6h0wGv6Bv8N9rFgpvYkp3Dr8ojxX2Wi4w5tNkOa8icSKl+uI8UMv
 NHgGG1oyZCCKGCmOjueVrGk4vXvHOQeyTXNEPYhuMh4zze6DUC5+RGIELdEW7/ZdikfBoLG2
 FqVm5pl09nAQKif5oTA9V9z2S4M=
X-Mailgun-Sending-Ip: 104.130.122.7
X-Mailgun-Sid: WyI4ZjgxNyIsICJzdGFibGVAdmdlci5rZXJuZWwub3JnIiwgIjE3YjU0Il0=
Received: from huitzilopochtli.metztli-it.com (99-130-254-3.lightspeed.sntcca.sbcglobal.net [99.130.254.3])
 by mxa.mailgun.org with ESMTP id 5e46addb.7f4ac9c2e078-smtp-out-n01;
 Fri, 14 Feb 2020 14:25:31 -0000 (UTC)
Received: by huitzilopochtli.metztli-it.com (Postfix, from userid 1000)
        id 172F34F93A4E; Fri, 14 Feb 2020 06:25:27 -0800 (PST)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="797284133-1581690327=:13654"
Subject: Re: [PATCH 5.4 00/96] 5.4.20-stable review
To:     <gregkh@linuxfoundation.org>, <linux-kernel@vger.kernel.org>,
        <stable@vger.kernel.org>, <reiserfs-devel@vger.kernel.org>
X-Mailer: mail (GNU Mailutils 3.5)
Message-Id: <20200214142528.172F34F93A4E@huitzilopochtli.metztli-it.com>
Date:   Fri, 14 Feb 2020 06:25:27 -0800 (PST)
From:   Metztli Information Technology <jose.r.r@metztli.com>
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

--797284133-1581690327=:13654
Content-Type: text/plain; charset=UTF-8
Content-Disposition: attachment
Content-Transfer-Encoding: 8bit
Content-ID: <20200214062527.13654.1@huitzilopochtli.metztli-it.com>

On Thu, Feb 13, 2020 at 7:37 AM Greg Kroah-Hartman <gregkh@linuxfoundation.org> wrote:
>
> This is the start of the stable review cycle for the 5.4.20 release.
> There are 96 patches in this series, all will be posted as a response
> to this one.  If anyone has any issues with these being applied, please
> let me know.
Set of patches do not conflict with ensuing successful application of reiser4 patch.

>
> Responses should be made by Sat, 15 Feb 2020 15:16:40 +0000.
> Anything received after that time might be too late.
>
> The whole patch series can be found in one patch at:
>         https://www.kernel.org/pub/linux/kernel/v5.x/stable-review/patch-5.4.20-rc1.gz
> or in the git tree and branch at:
>         git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git linux-5.4.y
> and the diffstat can be found below.
>
> thanks,

reiser4-for-5.4.19-metztli.patch based on:
< https://sourceforge.net/projects/reiser4/files/reiser4-for-linux-5.x/reiser4-for-5.4.17.patch.gz >
applies with --fuzz=0 nicely into linux source 5.4.20 RC2, as well.

uname -a
Linux huitzilopochtli 5.4.0-4+reiser4.0.2-amd64 #1 SMP Debian 5.4.20-1+reiser4.0.2 (2020-02-14) x86_64 GNU/Linux

[snip]

Best Professional Regards.


Jose R R
http://metztli.it
---------------------------------------------------------------------------------------------
Download Metztli Reiser4: Debian Buster w/ Linux 5.4.18 AMD64
---------------------------------------------------------------------------------------------
feats ZSTD compression https://sf.net/projects/metztli-reiser4/
-------------------------------------------------------------------------------------------
Official current Reiser4 resources: https://reiser4.wiki.kernel.org/

--797284133-1581690327=:13654
Content-Type: application/octet-stream; name="reiser4-for-5.4.19-metztli.patch"
Content-Disposition: attachment; filename="reiser4-for-5.4.19-metztli.patch"
Content-Transfer-Encoding: base64
Content-ID: <20200214062527.13654.1@huitzilopochtli.metztli-it.com>

ZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvRG9jdW1lbnRhdGlv
bi9maWxlc3lzdGVtcy9yZWlzZXI0LnR4dCBsaW51eC01LjQuMTcvRG9jdW1lbnRhdGlvbi9maWxl
c3lzdGVtcy9yZWlzZXI0LnR4dAotLS0gbGludXgtNS40LjE3Lm9yaWcvRG9jdW1lbnRhdGlvbi9m
aWxlc3lzdGVtcy9yZWlzZXI0LnR4dAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEw
MAorKysgbGludXgtNS40LjE3L0RvY3VtZW50YXRpb24vZmlsZXN5c3RlbXMvcmVpc2VyNC50eHQJ
MjAyMC0wMi0wNSAyMDo1Mzo0MS40MzgyMjIwNjAgKzAxMDAKQEAgLTAsMCArMSw3NSBAQAorUmVp
c2VyNCBmaWxlc3lzdGVtCis9PT09PT09PT09PT09PT09PT0KK1JlaXNlcjQgaXMgYSBmaWxlIHN5
c3RlbSBiYXNlZCBvbiBkYW5jaW5nIHRyZWUgYWxnb3JpdGhtcywgYW5kIGlzCitkZXNjcmliZWQg
YXQgaHR0cDovL3d3dy5uYW1lc3lzLmNvbQorCisKK1JlZmVyZW5jZXMKKz09PT09PT09PT0KK3dl
YiBwYWdlCQlodHRwOi8vbmFtZXN5cy5jb20vdjQvdjQuaHRtbAorc291cmNlIGNvZGUJCWZ0cDov
L2Z0cC5uYW1lc3lzLmNvbS9wdWIvcmVpc2VyNC1mb3ItMi42LwordXNlcmxhbmQgdG9vbHMJCWZ0
cDovL2Z0cC5uYW1lc3lzLmNvbS9wdWIvcmVpc2VyNHByb2dzLworaW5zdGFsbCBwYWdlCQlodHRw
Oi8vd3d3Lm5hbWVzeXMuY29tL2luc3RhbGxfdjQuaHRtbAorCitDb21waWxlIG9wdGlvbnMKKz09
PT09PT09PT09PT09PQorRW5hYmxlIHJlaXNlcjQgZGVidWcgbW9kZQorICAgICAgIFRoaXMgY2hl
Y2tzIGV2ZXJ5dGhpbmcgaW1hZ2luYWJsZSB3aGlsZSByZWlzZXI0CisgICAgICAgcnVucworCitN
b3VudCBvcHRpb25zCis9PT09PT09PT09PT09Cit0bWdyLmF0b21fbWF4X3NpemU9TgorCUF0b21z
IGNvbnRhaW5pbmcgbW9yZSB0aGFuIE4gYmxvY2tzIHdpbGwgYmUgZm9yY2VkIHRvIGNvbW1pdC4K
KwlOIGlzIGRlY2ltYWwuCisJRGVmYXVsdCBpcyBucl9mcmVlX3BhZ2VjYWNoZV9wYWdlcygpIC8g
MiBhdCBtb3VudCB0aW1lLgorCit0bWdyLmF0b21fbWF4X2FnZT1OCisJQXRvbXMgb2xkZXIgdGhh
biBOIHNlY29uZHMgd2lsbCBiZSBmb3JjZWQgdG8gY29tbWl0LiBOIGlzIGRlY2ltYWwuCisJRGVm
YXVsdCBpcyA2MDAuCisKK3RtZ3IuYXRvbV9tYXhfZmx1c2hlcnM9TgorCUxpbWl0IG9mIGNvbmN1
cnJlbnQgZmx1c2hlcnMgZm9yIG9uZSBhdG9tLiAwIG1lYW5zIG5vIGxpbWl0LgorCURlZmF1bHQg
aXMgMC4KKwordHJlZS5jYmtfY2FjaGUubnJfc2xvdHM9TgorCU51bWJlciBvZiBzbG90cyBpbiB0
aGUgY2JrIGNhY2hlLgorCitmbHVzaC5yZWxvY2F0ZV90aHJlc2hvbGQ9TgorCUlmIGZsdXNoIGZp
bmRzIG1vcmUgdGhhbiBOIGFkamFjZW50IGRpcnR5IGxlYWYtbGV2ZWwgYmxvY2tzIGl0CisJd2ls
bCBmb3JjZSB0aGVtIHRvIGJlIHJlbG9jYXRlZC4KKwlEZWZhdWx0IGlzIDY0LgorCitmbHVzaC5y
ZWxvY2F0ZV9kaXN0YW5jZT1OCisJSWYgZmx1c2ggZmluZHMgY2FuIGZpbmQgYSBibG9jayBhbGxv
Y2F0aW9uIGNsb3NlciB0aGFuIGF0IG1vc3QKKwlOIGZyb20gdGhlIHByZWNlZGVyIGl0IHdpbGwg
cmVsb2NhdGUgdG8gdGhhdCBwb3NpdGlvbi4KKwlEZWZhdWx0IGlzIDY0LgorCitmbHVzaC5zY2Fu
X21heG5vZGVzPU4KKwlUaGUgbWF4aW11bSBudW1iZXIgb2Ygbm9kZXMgdG8gc2NhbiBsZWZ0IG9u
IGEgbGV2ZWwgZHVyaW5nCisJZmx1c2guCisJRGVmYXVsdCBpcyAxMDAwMC4KKworb3B0aW1hbF9p
b19zaXplPU4KKwlQcmVmZXJyZWQgSU8gc2l6ZS4gVGhpcyB2YWx1ZSBpcyB1c2VkIHRvIHNldCBz
dF9ibGtzaXplIG9mCisJc3RydWN0IHN0YXQuCisJRGVmYXVsdCBpcyA2NTUzNi4KKworYnNkZ3Jv
dXBzCisJVHVybiBvbiBCU0Qtc3R5bGUgZ2lkIGFzc2lnbm1lbnQuCisKKzMyYml0dGltZXMKKwlC
eSBkZWZhdWx0IGZpbGUgaW4gcmVpc2VyNCBoYXZlIDY0IGJpdCB0aW1lc3RhbXBzLiBGaWxlcwor
CWNyZWF0ZWQgd2hlbiBmaWxlc3lzdGVtIGlzIG1vdW50ZWQgd2l0aCAzMmJpdHRpbWVzIG1vdW50
CisJb3B0aW9uIHdpbGwgZ2V0IDMyIGJpdCB0aW1lc3RhbXBzLgorCittdGZsdXNoCisJVHVybiBv
ZmYgY29uY3VycmVudCBmbHVzaGluZy4KKworbm9wc2V1ZG8KKwlEaXNhYmxlIHBzZXVkbyBmaWxl
cyBzdXBwb3J0LiBTZWUKKwlodHRwOi8vbmFtZXN5cy5jb20vdjQvcHNldWRvLmh0bWwgZm9yIG1v
cmUgYWJvdXQgcHNldWRvIGZpbGVzLgorCitkb250X2xvYWRfYml0bWFwCisJRG9uJ3QgbG9hZCBh
bGwgYml0bWFwIGJsb2NrcyBhdCBtb3VudCB0aW1lLCBpdCBpcyB1c2VmdWwgZm9yCisJbWFjaGlu
ZXMgd2l0aCB0aW55IFJBTSBhbmQgbGFyZ2UgZGlza3MuCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL0RvY3VtZW50YXRpb24vcHJvY2Vzcy9jaGFuZ2VzLnJzdCBs
aW51eC01LjQuMTcvRG9jdW1lbnRhdGlvbi9wcm9jZXNzL2NoYW5nZXMucnN0Ci0tLSBsaW51eC01
LjQuMTcub3JpZy9Eb2N1bWVudGF0aW9uL3Byb2Nlc3MvY2hhbmdlcy5yc3QJMjAyMC0wMi0wMSAx
MDozNDo1My4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9Eb2N1bWVudGF0aW9uL3By
b2Nlc3MvY2hhbmdlcy5yc3QJMjAyMC0wMi0wNSAyMDo1Mzo0MS40MzgyMjIwNjAgKzAxMDAKQEAg
LTE5NCw2ICsxOTQsMTMgQEAKIHZlcnNpb25zIG9mIGBgbWtyZWlzZXJmc2BgLCBgYHJlc2l6ZV9y
ZWlzZXJmc2BgLCBgYGRlYnVncmVpc2VyZnNgYCBhbmQKIGBgcmVpc2VyZnNja2BgLiBUaGVzZSB1
dGlscyB3b3JrIG9uIGJvdGggaTM4NiBhbmQgYWxwaGEgcGxhdGZvcm1zLgogCitSZWlzZXI0cHJv
Z3MKKy0tLS0tLS0tLS0tLQorCitUaGUgcmVpc2VyNHByb2dzIHBhY2thZ2UgY29udGFpbnMgdXRp
bGl0aWVzIGZvciB0aGUgcmVpc2VyNCBmaWxlIHN5c3RlbS4KK0RldGFpbGVkIGluc3RydWN0aW9u
cyBhcmUgcHJvdmlkZWQgaW4gdGhlIFJFQURNRSBmaWxlIGxvY2F0ZWQgYXQ6Cis8aHR0cHM6Ly9n
aXRodWIuY29tL2Vkd2FyZDYvcmVpc2VyNHByb2dzPi4KKwogWGZzcHJvZ3MKIC0tLS0tLS0tCiAK
QEAgLTM5NSw2ICs0MDIsMTEgQEAKIAogLSA8aHR0cDovL3d3dy5rZXJuZWwub3JnL3B1Yi9saW51
eC91dGlscy9mcy9yZWlzZXJmcy8+CiAKK1JlaXNlcjRwcm9ncworLS0tLS0tLS0tLS0tCisKKy0g
PGh0dHA6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvcmVpc2VyNC8+CisKIFhmc3Byb2dzCiAt
LS0tLS0tLQogCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2Zz
L2ZzLXdyaXRlYmFjay5jIGxpbnV4LTUuNC4xNy9mcy9mcy13cml0ZWJhY2suYwotLS0gbGludXgt
NS40LjE3Lm9yaWcvZnMvZnMtd3JpdGViYWNrLmMJMjAyMC0wMi0wMSAxMDozNDo1My4wMDAwMDAw
MDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9mcy13cml0ZWJhY2suYwkyMDIwLTAyLTA1IDIw
OjUzOjQxLjQzOTIyMjA2OCArMDEwMApAQCAtMzcsMjYgKzM3LDYgQEAKICNkZWZpbmUgTUlOX1dS
SVRFQkFDS19QQUdFUwkoNDA5NlVMID4+IChQQUdFX1NISUZUIC0gMTApKQogCiAvKgotICogUGFz
c2VkIGludG8gd2Jfd3JpdGViYWNrKCksIGVzc2VudGlhbGx5IGEgc3Vic2V0IG9mIHdyaXRlYmFj
a19jb250cm9sCi0gKi8KLXN0cnVjdCB3Yl93cml0ZWJhY2tfd29yayB7Ci0JbG9uZyBucl9wYWdl
czsKLQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiOwotCXVuc2lnbmVkIGxvbmcgKm9sZGVyX3RoYW5f
dGhpczsKLQllbnVtIHdyaXRlYmFja19zeW5jX21vZGVzIHN5bmNfbW9kZTsKLQl1bnNpZ25lZCBp
bnQgdGFnZ2VkX3dyaXRlcGFnZXM6MTsKLQl1bnNpZ25lZCBpbnQgZm9yX2t1cGRhdGU6MTsKLQl1
bnNpZ25lZCBpbnQgcmFuZ2VfY3ljbGljOjE7Ci0JdW5zaWduZWQgaW50IGZvcl9iYWNrZ3JvdW5k
OjE7Ci0JdW5zaWduZWQgaW50IGZvcl9zeW5jOjE7CS8qIHN5bmMoMikgV0JfU1lOQ19BTEwgd3Jp
dGViYWNrICovCi0JdW5zaWduZWQgaW50IGF1dG9fZnJlZToxOwkvKiBmcmVlIG9uIGNvbXBsZXRp
b24gKi8KLQllbnVtIHdiX3JlYXNvbiByZWFzb247CQkvKiB3aHkgd2FzIHdyaXRlYmFjayBpbml0
aWF0ZWQ/ICovCi0KLQlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7CQkvKiBwZW5kaW5nIHdvcmsgbGlz
dCAqLwotCXN0cnVjdCB3Yl9jb21wbGV0aW9uICpkb25lOwkvKiBzZXQgaWYgdGhlIGNhbGxlciB3
YWl0cyAqLwotfTsKLQotLyoKICAqIElmIGFuIGlub2RlIGlzIGNvbnN0YW50bHkgaGF2aW5nIGl0
cyBwYWdlcyBkaXJ0aWVkLCBidXQgdGhlbiB0aGUKICAqIHVwZGF0ZXMgc3RvcCBkaXJ0eXRpbWVf
ZXhwaXJlX2ludGVydmFsIHNlY29uZHMgaW4gdGhlIHBhc3QsIGl0J3MKICAqIHBvc3NpYmxlIGZv
ciB0aGUgd29yc3QgY2FzZSB0aW1lIGJldHdlZW4gd2hlbiBhbiBpbm9kZSBoYXMgaXRzCkBAIC0x
NjIxLDIwICsxNjAxLDEyIEBACiAgKiB1bmxvY2sgYW5kIHJlbG9jayB0aGF0IGZvciBlYWNoIGlu
b2RlIGl0IGVuZHMgdXAgZG9pbmcKICAqIElPIGZvci4KICAqLwotc3RhdGljIGxvbmcgd3JpdGVi
YWNrX3NiX2lub2RlcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAotCQkJCXN0cnVjdCBiZGlfd3Jp
dGViYWNrICp3YiwKLQkJCQlzdHJ1Y3Qgd2Jfd3JpdGViYWNrX3dvcmsgKndvcmspCitsb25nIGdl
bmVyaWNfd3JpdGViYWNrX3NiX2lub2RlcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAorCQkJCSBz
dHJ1Y3QgYmRpX3dyaXRlYmFjayAqd2IsCisJCQkJIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAq
d2JjLAorCQkJCSBzdHJ1Y3Qgd2Jfd3JpdGViYWNrX3dvcmsgKndvcmssCisJCQkJIGJvb2wgZmx1
c2hfYWxsKQogewotCXN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCB3YmMgPSB7Ci0JCS5zeW5jX21v
ZGUJCT0gd29yay0+c3luY19tb2RlLAotCQkudGFnZ2VkX3dyaXRlcGFnZXMJPSB3b3JrLT50YWdn
ZWRfd3JpdGVwYWdlcywKLQkJLmZvcl9rdXBkYXRlCQk9IHdvcmstPmZvcl9rdXBkYXRlLAotCQku
Zm9yX2JhY2tncm91bmQJCT0gd29yay0+Zm9yX2JhY2tncm91bmQsCi0JCS5mb3Jfc3luYwkJPSB3
b3JrLT5mb3Jfc3luYywKLQkJLnJhbmdlX2N5Y2xpYwkJPSB3b3JrLT5yYW5nZV9jeWNsaWMsCi0J
CS5yYW5nZV9zdGFydAkJPSAwLAotCQkucmFuZ2VfZW5kCQk9IExMT05HX01BWCwKLQl9OwogCXVu
c2lnbmVkIGxvbmcgc3RhcnRfdGltZSA9IGppZmZpZXM7CiAJbG9uZyB3cml0ZV9jaHVuazsKIAls
b25nIHdyb3RlID0gMDsgIC8qIGNvdW50IGJvdGggcGFnZXMgYW5kIGlub2RlcyAqLwpAQCAtMTY3
Myw3ICsxNjQ1LDcgQEAKIAkJCXJlZGlydHlfdGFpbChpbm9kZSwgd2IpOwogCQkJY29udGludWU7
CiAJCX0KLQkJaWYgKChpbm9kZS0+aV9zdGF0ZSAmIElfU1lOQykgJiYgd2JjLnN5bmNfbW9kZSAh
PSBXQl9TWU5DX0FMTCkgeworCQlpZiAoKGlub2RlLT5pX3N0YXRlICYgSV9TWU5DKSAmJiB3YmMt
PnN5bmNfbW9kZSAhPSBXQl9TWU5DX0FMTCkgewogCQkJLyoKIAkJCSAqIElmIHRoaXMgaW5vZGUg
aXMgbG9ja2VkIGZvciB3cml0ZWJhY2sgYW5kIHdlIGFyZSBub3QKIAkJCSAqIGRvaW5nIHdyaXRl
YmFjay1mb3ItZGF0YS1pbnRlZ3JpdHksIG1vdmUgaXQgdG8KQEAgLTE3MDMsMjEgKzE2NzUsMjEg
QEAKIAkJCWNvbnRpbnVlOwogCQl9CiAJCWlub2RlLT5pX3N0YXRlIHw9IElfU1lOQzsKLQkJd2Jj
X2F0dGFjaF9hbmRfdW5sb2NrX2lub2RlKCZ3YmMsIGlub2RlKTsKKwkJd2JjX2F0dGFjaF9hbmRf
dW5sb2NrX2lub2RlKHdiYywgaW5vZGUpOwogCiAJCXdyaXRlX2NodW5rID0gd3JpdGViYWNrX2No
dW5rX3NpemUod2IsIHdvcmspOwotCQl3YmMubnJfdG9fd3JpdGUgPSB3cml0ZV9jaHVuazsKLQkJ
d2JjLnBhZ2VzX3NraXBwZWQgPSAwOworCQl3YmMtPm5yX3RvX3dyaXRlID0gd3JpdGVfY2h1bms7
CisJCXdiYy0+cGFnZXNfc2tpcHBlZCA9IDA7CiAKIAkJLyoKIAkJICogV2UgdXNlIElfU1lOQyB0
byBwaW4gdGhlIGlub2RlIGluIG1lbW9yeS4gV2hpbGUgaXQgaXMgc2V0CiAJCSAqIGV2aWN0X2lu
b2RlKCkgd2lsbCB3YWl0IHNvIHRoZSBpbm9kZSBjYW5ub3QgYmUgZnJlZWQuCiAJCSAqLwotCQlf
X3dyaXRlYmFja19zaW5nbGVfaW5vZGUoaW5vZGUsICZ3YmMpOworCQlfX3dyaXRlYmFja19zaW5n
bGVfaW5vZGUoaW5vZGUsIHdiYyk7CiAKLQkJd2JjX2RldGFjaF9pbm9kZSgmd2JjKTsKLQkJd29y
ay0+bnJfcGFnZXMgLT0gd3JpdGVfY2h1bmsgLSB3YmMubnJfdG9fd3JpdGU7Ci0JCXdyb3RlICs9
IHdyaXRlX2NodW5rIC0gd2JjLm5yX3RvX3dyaXRlOworCQl3YmNfZGV0YWNoX2lub2RlKHdiYyk7
CisJCXdvcmstPm5yX3BhZ2VzIC09IHdyaXRlX2NodW5rIC0gd2JjLT5ucl90b193cml0ZTsKKwkJ
d3JvdGUgKz0gd3JpdGVfY2h1bmsgLSB3YmMtPm5yX3RvX3dyaXRlOwogCiAJCWlmIChuZWVkX3Jl
c2NoZWQoKSkgewogCQkJLyoKQEAgLTE3NDAsNyArMTcxMiw3IEBACiAJCXNwaW5fbG9jaygmaW5v
ZGUtPmlfbG9jayk7CiAJCWlmICghKGlub2RlLT5pX3N0YXRlICYgSV9ESVJUWV9BTEwpKQogCQkJ
d3JvdGUrKzsKLQkJcmVxdWV1ZV9pbm9kZShpbm9kZSwgdG1wX3diLCAmd2JjKTsKKwkJcmVxdWV1
ZV9pbm9kZShpbm9kZSwgdG1wX3diLCB3YmMpOwogCQlpbm9kZV9zeW5jX2NvbXBsZXRlKGlub2Rl
KTsKIAkJc3Bpbl91bmxvY2soJmlub2RlLT5pX2xvY2spOwogCkBAIC0xNzU0LDcgKzE3MjYsNyBA
QAogCQkgKiBiYWNrZ3JvdW5kIHRocmVzaG9sZCBhbmQgb3RoZXIgdGVybWluYXRpb24gY29uZGl0
aW9ucy4KIAkJICovCiAJCWlmICh3cm90ZSkgewotCQkJaWYgKHRpbWVfaXNfYmVmb3JlX2ppZmZp
ZXMoc3RhcnRfdGltZSArIEhaIC8gMTBVTCkpCisJCQlpZiAoIWZsdXNoX2FsbCAmJiB0aW1lX2lz
X2JlZm9yZV9qaWZmaWVzKHN0YXJ0X3RpbWUgKyBIWiAvIDEwVUwpKQogCQkJCWJyZWFrOwogCQkJ
aWYgKHdvcmstPm5yX3BhZ2VzIDw9IDApCiAJCQkJYnJlYWs7CkBAIC0xNzYyLDYgKzE3MzQsMjYg
QEAKIAl9CiAJcmV0dXJuIHdyb3RlOwogfQorRVhQT1JUX1NZTUJPTChnZW5lcmljX3dyaXRlYmFj
a19zYl9pbm9kZXMpOworCitsb25nIHdyaXRlYmFja19zYl9pbm9kZXMoc3RydWN0IHN1cGVyX2Js
b2NrICpzYiwKKwkJCSBzdHJ1Y3QgYmRpX3dyaXRlYmFjayAqd2IsCisJCQkgc3RydWN0IHdiX3dy
aXRlYmFja193b3JrICp3b3JrKQoreworCXN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCB3YmMgPSB7
CisJCS5zeW5jX21vZGUJCT0gd29yay0+c3luY19tb2RlLAorCQkudGFnZ2VkX3dyaXRlcGFnZXMJ
PSB3b3JrLT50YWdnZWRfd3JpdGVwYWdlcywKKwkJLmZvcl9rdXBkYXRlCQk9IHdvcmstPmZvcl9r
dXBkYXRlLAorCQkuZm9yX2JhY2tncm91bmQJCT0gd29yay0+Zm9yX2JhY2tncm91bmQsCisJCS5y
YW5nZV9jeWNsaWMJCT0gd29yay0+cmFuZ2VfY3ljbGljLAorCQkucmFuZ2Vfc3RhcnQJCT0gMCwK
KwkJLnJhbmdlX2VuZAkJPSBMTE9OR19NQVgsCisJfTsKKwlpZiAoc2ItPnNfb3AtPndyaXRlYmFj
a19pbm9kZXMpCisJICAgICAgICByZXR1cm4gc2ItPnNfb3AtPndyaXRlYmFja19pbm9kZXMoc2Is
IHdiLCAmd2JjLCB3b3JrLCBmYWxzZSk7CisJZWxzZQorCSAgICAgICAgcmV0dXJuIGdlbmVyaWNf
d3JpdGViYWNrX3NiX2lub2RlcyhzYiwgd2IsICZ3YmMsIHdvcmssIGZhbHNlKTsKK30KIAogc3Rh
dGljIGxvbmcgX193cml0ZWJhY2tfaW5vZGVzX3diKHN0cnVjdCBiZGlfd3JpdGViYWNrICp3YiwK
IAkJCQkgIHN0cnVjdCB3Yl93cml0ZWJhY2tfd29yayAqd29yaykKQEAgLTIwNTQsNiArMjA0Niwz
MSBAQAogfQogCiAvKgorICogVGhpcyBmdW5jdGlvbiBpcyBmb3IgZmlsZSBzeXN0ZW1zIHdoaWNo
IGhhdmUgdGhlaXIKKyAqIG93biBtZWFucyBvZiBwZXJpb2RpY2FsIHdyaXRlLW91dCBvZiBvbGQg
ZGF0YS4KKyAqIE5PVEU6IGlub2RlX2xvY2sgc2hvdWxkIGJlIGhvbGQuCisgKgorICogU2tpcCBh
IHBvcnRpb24gb2YgYl9pbyBpbm9kZXMgd2hpY2ggYmVsb25nIHRvIEBzYgorICogYW5kIGdvIHNl
cXVlbnRpYWxseSBpbiByZXZlcnNlIG9yZGVyLgorICovCit2b2lkIHdyaXRlYmFja19za2lwX3Ni
X2lub2RlcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAorCQkJICAgICAgc3RydWN0IGJkaV93cml0
ZWJhY2sgKndiKQoreworCXdoaWxlICgxKSB7CisJCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisKKwkJ
aWYgKGxpc3RfZW1wdHkoJndiLT5iX2lvKSkKKwkJCWJyZWFrOworCQlpbm9kZSA9IHdiX2lub2Rl
KHdiLT5iX2lvLnByZXYpOworCQlpZiAoc2IgIT0gaW5vZGUtPmlfc2IpCisJCQlicmVhazsKKwkJ
cmVkaXJ0eV90YWlsKGlub2RlLCB3Yik7CisJfQorfQorRVhQT1JUX1NZTUJPTCh3cml0ZWJhY2tf
c2tpcF9zYl9pbm9kZXMpOworCisKKy8qCiAgKiBIYW5kbGUgd3JpdGViYWNrIG9mIGRpcnR5IGRh
dGEgZm9yIHRoZSBkZXZpY2UgYmFja2VkIGJ5IHRoaXMgYmRpLiBBbHNvCiAgKiByZXNjaGVkdWxl
cyBwZXJpb2RpY2FsbHkgYW5kIGRvZXMga3VwZGF0ZWQgc3R5bGUgZmx1c2hpbmcuCiAgKi8KQEAg
LTIwNjQsNyArMjA4MSw3IEBACiAJbG9uZyBwYWdlc193cml0dGVuOwogCglzZXRfd29ya2VyX2Rl
c2MoImZsdXNoLSVzIiwgYmRpX2Rldl9uYW1lKHdiLT5iZGkpKTsKLQljdXJyZW50LT5mbGFncyB8
PSBQRl9TV0FQV1JJVEU7CisJY3VycmVudC0+ZmxhZ3MgfD0gUEZfRkxVU0hFUiB8IFBGX1NXQVBX
UklURTsKIAogCWlmIChsaWtlbHkoIWN1cnJlbnRfaXNfd29ya3F1ZXVlX3Jlc2N1ZXIoKSB8fAog
CQkgICAhdGVzdF9iaXQoV0JfcmVnaXN0ZXJlZCwgJndiLT5zdGF0ZSkpKSB7CmRpZmYgLXVyTiAt
LW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL0tjb25maWcgbGludXgtNS40LjE3
L2ZzL0tjb25maWcKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL0tjb25maWcJMjAyMC0wMi0wMSAx
MDozNDo1My4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9LY29uZmlnCTIwMjAt
MDItMDUgMjA6NTM6NDEuNDQwMjIyMDc2ICswMTAwCkBAIC0zMSw2ICszMSw3IEBACiAJZGVmYXVs
dCB5IGlmIEVYVDRfRlM9eQogCWRlZmF1bHQgbSBpZiBFWFQyX0ZTX1hBVFRSIHx8IEVYVDRfRlMK
IAorc291cmNlICJmcy9yZWlzZXI0L0tjb25maWciCiBzb3VyY2UgImZzL3JlaXNlcmZzL0tjb25m
aWciCiBzb3VyY2UgImZzL2pmcy9LY29uZmlnIgogCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNl
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL01ha2VmaWxlIGxpbnV4LTUuNC4xNy9mcy9NYWtlZmlsZQot
LS0gbGludXgtNS40LjE3Lm9yaWcvZnMvTWFrZWZpbGUJMjAyMC0wMi0wMSAxMDozNDo1My4wMDAw
MDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9NYWtlZmlsZQkyMDIwLTAyLTA1IDIwOjUz
OjQxLjQ0MDIyMjA3NiArMDEwMApAQCAtNjksNiArNjksNyBAQAogIyBEbyBub3QgYWRkIGFueSBm
aWxlc3lzdGVtcyBiZWZvcmUgdGhpcyBsaW5lCiBvYmotJChDT05GSUdfRlNDQUNIRSkJCSs9IGZz
Y2FjaGUvCiBvYmotJChDT05GSUdfUkVJU0VSRlNfRlMpCSs9IHJlaXNlcmZzLworb2JqLSQoQ09O
RklHX1JFSVNFUjRfRlMpICAgICAgICArPSByZWlzZXI0Lwogb2JqLSQoQ09ORklHX0VYVDRfRlMp
CQkrPSBleHQ0LwogIyBXZSBwbGFjZSBleHQ0IGJlZm9yZSBleHQyIHNvIHRoYXQgY2xlYW4gZXh0
MyByb290IGZzJ3MgZG8gTk9UIG1vdW50IHVzaW5nIHRoZQogIyBleHQyIGRyaXZlciwgd2hpY2gg
ZG9lc24ndCBrbm93IGFib3V0IGpvdXJuYWxsaW5nISAgRXhwbGljaXRseSByZXF1ZXN0IGV4dDIK
ZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVhZF93cml0
ZS5jIGxpbnV4LTUuNC4xNy9mcy9yZWFkX3dyaXRlLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2Zz
L3JlYWRfd3JpdGUuYwkyMDIwLTAyLTAxIDEwOjM0OjUzLjAwMDAwMDAwMCArMDEwMAorKysgbGlu
dXgtNS40LjE3L2ZzL3JlYWRfd3JpdGUuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0MTIyMjA4NCAr
MDEwMApAQCAtMjMzLDEyICsyMzMsMTEgQEAKIH0KIEVYUE9SVF9TWU1CT0wobm9fbGxzZWVrKTsK
IAotbG9mZl90IGRlZmF1bHRfbGxzZWVrKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0
LCBpbnQgd2hlbmNlKQorbG9mZl90IGRlZmF1bHRfbGxzZWVrX3VubG9ja2VkKHN0cnVjdCBmaWxl
ICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LCBpbnQgd2hlbmNlKQogewogCXN0cnVjdCBpbm9kZSAqaW5v
ZGUgPSBmaWxlX2lub2RlKGZpbGUpOwogCWxvZmZfdCByZXR2YWw7CiAKLQlpbm9kZV9sb2NrKGlu
b2RlKTsKIAlzd2l0Y2ggKHdoZW5jZSkgewogCQljYXNlIFNFRUtfRU5EOgogCQkJb2Zmc2V0ICs9
IGlfc2l6ZV9yZWFkKGlub2RlKTsKQEAgLTI4Myw5ICsyODIsMTkgQEAKIAkJcmV0dmFsID0gb2Zm
c2V0OwogCX0KIG91dDoKLQlpbm9kZV91bmxvY2soaW5vZGUpOwogCXJldHVybiByZXR2YWw7CiB9
CitFWFBPUlRfU1lNQk9MKGRlZmF1bHRfbGxzZWVrX3VubG9ja2VkKTsKKworbG9mZl90IGRlZmF1
bHRfbGxzZWVrKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LCBpbnQgb3JpZ2luKQor
eworCWxvZmZfdCByZXR2YWw7CisKKwlpbm9kZV9sb2NrKGZpbGVfaW5vZGUoZmlsZSkpOworCXJl
dHZhbCA9IGRlZmF1bHRfbGxzZWVrX3VubG9ja2VkKGZpbGUsIG9mZnNldCwgb3JpZ2luKTsKKwlp
bm9kZV91bmxvY2soZmlsZV9pbm9kZShmaWxlKSk7CisgCXJldHVybiByZXR2YWw7Cit9CiBFWFBP
UlRfU1lNQk9MKGRlZmF1bHRfbGxzZWVrKTsKIAogbG9mZl90IHZmc19sbHNlZWsoc3RydWN0IGZp
bGUgKmZpbGUsIGxvZmZfdCBvZmZzZXQsIGludCB3aGVuY2UpCkBAIC00MDAsNyArNDA5LDcgQEAK
IAkJCQlyZWFkX3dyaXRlID09IFJFQUQgPyBNQVlfUkVBRCA6IE1BWV9XUklURSk7CiB9CiAKLXN0
YXRpYyBzc2l6ZV90IG5ld19zeW5jX3JlYWQoc3RydWN0IGZpbGUgKmZpbHAsIGNoYXIgX191c2Vy
ICpidWYsIHNpemVfdCBsZW4sIGxvZmZfdCAqcHBvcykKK3NzaXplX3QgbmV3X3N5bmNfcmVhZChz
dHJ1Y3QgZmlsZSAqZmlscCwgY2hhciBfX3VzZXIgKmJ1Ziwgc2l6ZV90IGxlbiwgbG9mZl90ICpw
cG9zKQogewogCXN0cnVjdCBpb3ZlYyBpb3YgPSB7IC5pb3ZfYmFzZSA9IGJ1ZiwgLmlvdl9sZW4g
PSBsZW4gfTsKIAlzdHJ1Y3Qga2lvY2Iga2lvY2I7CkBAIC00MTcsNiArNDI2LDcgQEAKIAkJKnBw
b3MgPSBraW9jYi5raV9wb3M7CiAJcmV0dXJuIHJldDsKIH0KK0VYUE9SVF9TWU1CT0wobmV3X3N5
bmNfcmVhZCk7CiAKIHNzaXplX3QgX192ZnNfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBf
X3VzZXIgKmJ1Ziwgc2l6ZV90IGNvdW50LAogCQkgICBsb2ZmX3QgKnBvcykKZGlmZiAtdXJOIC0t
bm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9hc19vcHMuYyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9hc19vcHMuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC9hc19vcHMuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGlu
dXgtNS40LjE3L2ZzL3JlaXNlcjQvYXNfb3BzLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDEyMjIw
ODQgKzAxMDAKQEAgLTAsMCArMSwzNDggQEAKKy8qIENvcHlyaWdodCAyMDAzIGJ5IEhhbnMgUmVp
c2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogSW50ZXJm
YWNlIHRvIFZGUy4gUmVpc2VyNCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMgYXJlIGRlZmluZWQg
aGVyZS4gKi8KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2lu
Y2x1ZGUgImRmb3JtYXQuaCIKKyNpbmNsdWRlICJjb29yZC5oIgorI2luY2x1ZGUgInBsdWdpbi9p
dGVtL2l0ZW0uaCIKKyNpbmNsdWRlICJwbHVnaW4vZmlsZS9maWxlLmgiCisjaW5jbHVkZSAicGx1
Z2luL3NlY3VyaXR5L3Blcm0uaCIKKyNpbmNsdWRlICJwbHVnaW4vZGlza19mb3JtYXQvZGlza19m
b3JtYXQuaCIKKyNpbmNsdWRlICJwbHVnaW4vcGx1Z2luLmgiCisjaW5jbHVkZSAicGx1Z2luL3Bs
dWdpbl9zZXQuaCIKKyNpbmNsdWRlICJwbHVnaW4vb2JqZWN0LmgiCisjaW5jbHVkZSAidHhubWdy
LmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJ6bm9kZS5oIgorI2luY2x1ZGUgImJs
b2NrX2FsbG9jLmgiCisjaW5jbHVkZSAidHJlZS5oIgorI2luY2x1ZGUgInZmc19vcHMuaCIKKyNp
bmNsdWRlICJpbm9kZS5oIgorI2luY2x1ZGUgInBhZ2VfY2FjaGUuaCIKKyNpbmNsdWRlICJrdHhu
bWdyZC5oIgorI2luY2x1ZGUgInN1cGVyLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgorI2luY2x1
ZGUgImVudGQuaCIKKworI2luY2x1ZGUgPGxpbnV4L3Byb2ZpbGUuaD4KKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L21vdW50Lmg+CisjaW5jbHVkZSA8bGludXgvdmZz
Lmg+CisjaW5jbHVkZSA8bGludXgvbW0uaD4KKyNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5o
PgorI2luY2x1ZGUgPGxpbnV4L2RjYWNoZS5oPgorI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KKyNp
bmNsdWRlIDxsaW51eC9wYWdlbWFwLmg+CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1
ZGUgPGxpbnV4L3NlcV9maWxlLmg+CisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUg
PGxpbnV4L21vZHVsZS5oPgorI2luY2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPgorI2luY2x1ZGUg
PGxpbnV4L2JhY2tpbmctZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvc2VjdXJpdHkuaD4KKyNpbmNs
dWRlIDxsaW51eC9taWdyYXRlLmg+CisKKy8qIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyAqLwor
CisvKioKKyAqIHJlaXNlcjRfc2V0X3BhZ2VfZGlydHkgLSBzZXQgZGlydHkgYml0LCB0YWcgaW4g
cGFnZSB0cmVlLCBkaXJ0eSBhY2NvdW50aW5nCisgKiBAcGFnZTogcGFnZSB0byBiZSBkaXJ0aWVk
CisgKgorICogT3BlcmF0aW9uIG9mIHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMuIFRo
aXMgaW1wbGVtZW50YXRpb24gaXMgdXNlZCBieQorICogdW5peCBhbmQgY3J5cHRjb21wcmVzcyBm
aWxlIHBsdWdpbnMuCisgKgorICogVGhpcyBpcyBjYWxsZWQgd2hlbiByZWlzZXI0IHBhZ2UgZ2V0
cyBkaXJ0aWVkIG91dHNpZGUgb2YgcmVpc2VyNCwgZm9yCisgKiBleGFtcGxlLCB3aGVuIGRpcnR5
IGJpdCBpcyBtb3ZlZCBmcm9tIHB0ZSB0byBwaHlzaWNhbCBwYWdlLgorICoKKyAqIFRhZ3MgcGFn
ZSBpbiB0aGUgbWFwcGluZydzIHBhZ2UgdHJlZSB3aXRoIHNwZWNpYWwgdGFnIHNvIHRoYXQgaXQg
aXMgcG9zc2libGUKKyAqIHRvIGRvIGFsbCB0aGUgcmVpc2VyNCBzcGVjaWZpYyB3b3JrIHdydCBk
aXJ0eSBwYWdlcyAoam5vZGUgY3JlYXRpb24sCisgKiBjYXB0dXJpbmcgYnkgYW4gYXRvbSkgbGF0
ZXIgYmVjYXVzZSBpdCBjYW4gbm90IGJlIGRvbmUgaW4gdGhlIGNvbnRleHRzIHdoZXJlCisgKiBz
ZXRfcGFnZV9kaXJ0eSBpcyBjYWxsZWQuCisgKi8KK2ludCByZWlzZXI0X3NldF9wYWdlX2RpcnR5
KHN0cnVjdCBwYWdlICpwYWdlKQoreworCS8qIHRoaXMgcGFnZSBjYW4gYmUgdW5mb3JtYXR0ZWQg
b25seSAqLworCWFzc2VydCgidnMtMTczNCIsIChwYWdlLT5tYXBwaW5nICYmCisJCQkgICBwYWdl
LT5tYXBwaW5nLT5ob3N0ICYmCisJCQkgICByZWlzZXI0X2dldF9zdXBlcl9mYWtlKHBhZ2UtPm1h
cHBpbmctPmhvc3QtPmlfc2IpICE9CisJCQkgICBwYWdlLT5tYXBwaW5nLT5ob3N0ICYmCisJCQkg
ICByZWlzZXI0X2dldF9jY19mYWtlKHBhZ2UtPm1hcHBpbmctPmhvc3QtPmlfc2IpICE9CisJCQkg
ICBwYWdlLT5tYXBwaW5nLT5ob3N0ICYmCisJCQkgICByZWlzZXI0X2dldF9iaXRtYXBfZmFrZShw
YWdlLT5tYXBwaW5nLT5ob3N0LT5pX3NiKSAhPQorCQkJICAgcGFnZS0+bWFwcGluZy0+aG9zdCkp
OworCXJldHVybiBfX3NldF9wYWdlX2RpcnR5X25vYnVmZmVycyhwYWdlKTsKK30KKworLyogLT5p
bnZhbGlkYXRlcGFnZSBtZXRob2QgZm9yIHJlaXNlcjQgKi8KKworLyoKKyAqIHRoaXMgaXMgY2Fs
bGVkIGZvciBlYWNoIHRydW5jYXRlZCBwYWdlIGZyb20KKyAqIHRydW5jYXRlX2lub2RlX3BhZ2Vz
KCktPnRydW5jYXRlX3tjb21wbGV0ZSxwYXJ0aWFsfV9wYWdlKCkuCisgKgorICogQXQgdGhlIG1v
bWVudCBvZiBjYWxsLCBwYWdlIGlzIHVuZGVyIGxvY2ssIGFuZCBvdXRzdGFuZGluZyBpbyAoaWYg
YW55KSBoYXMKKyAqIGNvbXBsZXRlZC4KKyAqLworCisvKioKKyAqIHJlaXNlcjRfaW52YWxpZGF0
ZXBhZ2UKKyAqIEBwYWdlOiBwYWdlIHRvIGludmFsaWRhdGUKKyAqIEBvZmZzZXQ6IHN0YXJ0aW5n
IG9mZnNldCBmb3IgcGFydGlhbCBpbnZhbGlkYXRpb24KKyAqCisgKi8KK3ZvaWQgcmVpc2VyNF9p
bnZhbGlkYXRlcGFnZShzdHJ1Y3QgcGFnZSAqcGFnZSwgdW5zaWduZWQgaW50IG9mZnNldCwgdW5z
aWduZWQgaW50IGxlbmd0aCkKK3sKKwlpbnQgcmV0ID0gMDsKKwlpbnQgcGFydGlhbF9wYWdlID0g
KG9mZnNldCB8fCBsZW5ndGggPCBQQUdFX1NJWkUpOworCXJlaXNlcjRfY29udGV4dCAqY3R4Owor
CXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJam5vZGUgKm5vZGU7CisKKwkvKgorCSAqIFRoaXMgaXMg
Y2FsbGVkIHRvIHRydW5jYXRlIGZpbGUncyBwYWdlLgorCSAqCisJICogT3JpZ2luYWxseSwgcmVp
c2VyNCBpbXBsZW1lbnRlZCB0cnVuY2F0ZSBpbiBhIHN0YW5kYXJkIHdheQorCSAqICh2bXRydW5j
YXRlKCkgY2FsbHMgLT5pbnZhbGlkYXRlcGFnZSgpIG9uIGFsbCB0cnVuY2F0ZWQgcGFnZXMKKwkg
KiBmaXJzdCwgdGhlbiBmaWxlIHN5c3RlbSAtPnRydW5jYXRlKCkgY2FsbC1iYWNrIGlzIGludm9r
ZWQpLgorCSAqCisJICogVGhpcyBsZWFkIHRvIHRoZSBwcm9ibGVtIHdoZW4gLT5pbnZhbGlkYXRl
cGFnZSgpIHdhcyBjYWxsZWQgb24gYQorCSAqIHBhZ2Ugd2l0aCBqbm9kZSB0aGF0IHdhcyBjYXB0
dXJlZCBpbnRvIGF0b20gaW4gQVNUQUdFX1BSRV9DT01NSVQKKwkgKiBwcm9jZXNzLiBUaGF0IGlz
LCB0cnVuY2F0ZSB3YXMgYnlwYXNzaW5nIHRyYW5zYWN0aW9ucy4gVG8gYXZvaWQKKwkgKiB0aGlz
LCB0cnlfY2FwdHVyZV9wYWdlX3RvX2ludmFsaWRhdGUoKSBjYWxsIHdhcyBhZGRlZCBoZXJlLgor
CSAqCisJICogQWZ0ZXIgbWFueSB0cm91YmxlcyB3aXRoIHZtdHJ1bmNhdGUoKSBiYXNlZCB0cnVu
Y2F0ZSAoaW5jbHVkaW5nCisJICogcmFjZXMgd2l0aCBmbHVzaCwgdGFpbCBjb252ZXJzaW9uLCBl
dGMuKSBpdCB3YXMgcmUtd3JpdHRlbiBpbiB0aGUKKwkgKiB0b3AtdG8tYm90dG9tIHN0eWxlOiBp
dGVtcyBhcmUga2lsbGVkIGluIHJlaXNlcjRfY3V0X3RyZWVfb2JqZWN0KCkKKwkgKiBhbmQgcGFn
ZXMgYmVsb25naW5nIHRvIGV4dGVudCBhcmUgaW52YWxpZGF0ZWQgaW4ga2lsbF9ob29rX2V4dGVu
dCgpLgorCSAqIFNvIHByb2JhYmx5IG5vdyBhZGRpdGlvbmFsIGNhbGwgdG8gY2FwdHVyZSBpcyBu
b3QgbmVlZGVkIGhlcmUuCisJICovCisKKwlhc3NlcnQoIm5pa2l0YS0zMTM3IiwgUGFnZUxvY2tl
ZChwYWdlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzEzOCIsICFQYWdlV3JpdGViYWNrKHBhZ2UpKTsK
Kwlpbm9kZSA9IHBhZ2UtPm1hcHBpbmctPmhvc3Q7CisKKwkvKgorCSAqIC0+aW52YWxpZGF0ZXBh
Z2UoKSBzaG91bGQgb25seSBiZSBjYWxsZWQgZm9yIHRoZSB1bmZvcm1hdHRlZAorCSAqIGpub2Rl
cy4gRGVzdHJ1Y3Rpb24gb2YgYWxsIG90aGVyIHR5cGVzIG9mIGpub2RlcyBpcyBwZXJmb3JtZWQK
KwkgKiBzZXBhcmF0ZWx5LiBCdXQsIGR1cmluZyBzb21lIGNvcm5lciBjYXNlcyAobGlrZSBoYW5k
bGluZyBlcnJvcnMKKwkgKiBkdXJpbmcgbW91bnQpIGl0IGlzIHNpbXBsZXIgdG8gbGV0IC0+aW52
YWxpZGF0ZXBhZ2UgdG8gYmUgY2FsbGVkIG9uCisJICogdGhlbS4gQ2hlY2sgZm9yIHRoaXMsIGFu
ZCBkbyBub3RoaW5nLgorCSAqLworCWlmIChyZWlzZXI0X2dldF9zdXBlcl9mYWtlKGlub2RlLT5p
X3NiKSA9PSBpbm9kZSkKKwkJcmV0dXJuOworCWlmIChyZWlzZXI0X2dldF9jY19mYWtlKGlub2Rl
LT5pX3NiKSA9PSBpbm9kZSkKKwkJcmV0dXJuOworCWlmIChyZWlzZXI0X2dldF9iaXRtYXBfZmFr
ZShpbm9kZS0+aV9zYikgPT0gaW5vZGUpCisJCXJldHVybjsKKwlhc3NlcnQoInZzLTE0MjYiLCBQ
YWdlUHJpdmF0ZShwYWdlKSk7CisJYXNzZXJ0KCJ2cy0xNDI3IiwKKwkgICAgICAgcGFnZS0+bWFw
cGluZyA9PSBqbm9kZV9nZXRfbWFwcGluZyhqbm9kZV9ieV9wYWdlKHBhZ2UpKSk7CisJYXNzZXJ0
KCIiLCBqcHJpdmF0ZShwYWdlKSAhPSBOVUxMKTsKKwlhc3NlcnQoIiIsIGVyZ28oaW5vZGVfZmls
ZV9wbHVnaW4oaW5vZGUpICE9CisJCQlmaWxlX3BsdWdpbl9ieV9pZChDUllQVENPTVBSRVNTX0ZJ
TEVfUExVR0lOX0lEKSwKKwkJCW9mZnNldCA9PSAwKSk7CisKKwljdHggPSByZWlzZXI0X2luaXRf
Y29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm47CisKKwlu
b2RlID0ganByaXZhdGUocGFnZSk7CisJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCWlmICghKG5v
ZGUtPnN0YXRlICYgKCgxIDw8IEpOT0RFX0RJUlRZKSB8ICgxIDw8IEpOT0RFX0ZMVVNIX1FVRVVF
RCkgfAorCQkJICAoMSA8PCBKTk9ERV9XUklURUJBQ0spIHwgKDEgPDwgSk5PREVfT1ZSV1IpKSkp
IHsKKwkJLyogdGhlcmUgaXMgbm90IG5lZWQgdG8gY2FwdHVyZSAqLworCQlqcmVmKG5vZGUpOwor
CQlKRl9TRVQobm9kZSwgSk5PREVfSEVBUkRfQkFOU0hFRSk7CisJCXBhZ2VfY2xlYXJfam5vZGUo
cGFnZSwgbm9kZSk7CisJCXJlaXNlcjRfdW5jYXB0dXJlX2pub2RlKG5vZGUpOworCQl1bmhhc2hf
dW5mb3JtYXR0ZWRfam5vZGUobm9kZSk7CisJCWpwdXQobm9kZSk7CisJCXJlaXNlcjRfZXhpdF9j
b250ZXh0KGN0eCk7CisJCXJldHVybjsKKwl9CisJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisK
KwkvKiBjYXB0dXJlIHBhZ2UgYmVpbmcgdHJ1bmNhdGVkLiAqLworCXJldCA9IHRyeV9jYXB0dXJl
X3BhZ2VfdG9faW52YWxpZGF0ZShwYWdlKTsKKwlpZiAocmV0ICE9IDApCisJCXdhcm5pbmcoIm5p
a2l0YS0zMTQxIiwgIkNhbm5vdCBjYXB0dXJlOiAlaSIsIHJldCk7CisKKwlpZiAoIXBhcnRpYWxf
cGFnZSkgeworCQkvKiByZW1vdmUgam5vZGUgZnJvbSB0cmFuc2FjdGlvbiBhbmQgZGV0YWNoIGl0
IGZyb20gcGFnZS4gKi8KKwkJanJlZihub2RlKTsKKwkJSkZfU0VUKG5vZGUsIEpOT0RFX0hFQVJE
X0JBTlNIRUUpOworCQkvKiBwYWdlIGNhbm5vdCBiZSBkZXRhY2hlZCBmcm9tIGpub2RlIGNvbmN1
cnJlbnRseSwgYmVjYXVzZSBpdAorCQkgKiBpcyBsb2NrZWQgKi8KKwkJcmVpc2VyNF91bmNhcHR1
cmVfcGFnZShwYWdlKTsKKworCQkvKiB0aGlzIGRldGFjaGVzIHBhZ2UgZnJvbSBqbm9kZSwgc28g
dGhhdCBqZGVsZXRlIHdpbGwgbm90IHRyeQorCQkgKiB0byBsb2NrIHBhZ2Ugd2hpY2ggaXMgYWxy
ZWFkeSBsb2NrZWQgKi8KKwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCQlwYWdlX2NsZWFyX2pu
b2RlKHBhZ2UsIG5vZGUpOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJdW5oYXNoX3Vu
Zm9ybWF0dGVkX2pub2RlKG5vZGUpOworCisJCWpwdXQobm9kZSk7CisJfQorCisJcmVpc2VyNF9l
eGl0X2NvbnRleHQoY3R4KTsKK30KKworLyogaGVscCBmdW5jdGlvbiBjYWxsZWQgZnJvbSByZWlz
ZXI0X3JlbGVhc2VwYWdlKCkuIEl0IHJldHVybnMgdHJ1ZSBpZiBqbm9kZQorICogY2FuIGJlIGRl
dGFjaGVkIGZyb20gaXRzIHBhZ2UgYW5kIHBhZ2UgcmVsZWFzZWQuICovCitpbnQgam5vZGVfaXNf
cmVsZWFzYWJsZShqbm9kZSAqIG5vZGUvKiBub2RlIHRvIGNoZWNrICovKQoreworCWFzc2VydCgi
bmlraXRhLTI3ODEiLCBub2RlICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUt
Pmd1YXJkKSk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+bG9hZCkpOworCisJLyogaXMg
c29tZSB0aHJlYWQgaXMgY3VycmVudGx5IHVzaW5nIGpub2RlIHBhZ2UsIGxhdGVyIGNhbm5vdCBi
ZQorCSAqIGRldGFjaGVkICovCisJaWYgKGF0b21pY19yZWFkKCZub2RlLT5kX2NvdW50KSAhPSAw
KQorCQlyZXR1cm4gMDsKKworCWFzc2VydCgidnMtMTIxNCIsICFqbm9kZV9pc19sb2FkZWQobm9k
ZSkpOworCisJLyoKKwkgKiBjYW4gb25seSByZWxlYXNlIHBhZ2UgaWYgcmVhbCBibG9jayBudW1i
ZXIgaXMgYXNzaWduZWQgdG8gaXQuIFNpbXBsZQorCSAqIGNoZWNrIGZvciAtPmF0b20gd291bGRu
J3QgZG8sIGJlY2F1c2UgaXQgaXMgcG9zc2libGUgZm9yIG5vZGUgdG8gYmUKKwkgKiBjbGVhbiwg
bm90IGl0IGF0b20geWV0LCBhbmQgc3RpbGwgaGF2aW5nIGZha2UgYmxvY2sgbnVtYmVyLiBGb3IK
KwkgKiBleGFtcGxlLCBub2RlIGp1c3QgY3JlYXRlZCBpbiBqaW5pdF9uZXcoKS4KKwkgKi8KKwlp
ZiAocmVpc2VyNF9ibG9ja25yX2lzX2Zha2Uoam5vZGVfZ2V0X2Jsb2NrKG5vZGUpKSkKKwkJcmV0
dXJuIDA7CisKKwkvKgorCSAqIHBhZ2VzIHByZXBhcmVkIGZvciB3cml0ZSBjYW4gbm90IGJlIHJl
bGVhc2VkIGFueXdheSwgc28gYXZvaWQKKwkgKiBkZXRhY2hpbmcgam5vZGUgZnJvbSB0aGUgcGFn
ZQorCSAqLworCWlmIChKRl9JU1NFVChub2RlLCBKTk9ERV9XUklURV9QUkVQQVJFRCkpCisJCXJl
dHVybiAwOworCisJLyoKKwkgKiBkaXJ0eSBqbm9kZSBjYW5ub3QgYmUgcmVsZWFzZWQuIEl0IGNh
biBob3dldmVyIGJlIHN1Ym1pdHRlZCB0byBkaXNrCisJICogYXMgcGFydCBvZiBlYXJseSBmbHVz
aGluZywgYnV0IG9ubHkgYWZ0ZXIgZ2V0dGluZyBmbHVzaC1wcmVwcGVkLgorCSAqLworCWlmIChK
Rl9JU1NFVChub2RlLCBKTk9ERV9ESVJUWSkpCisJCXJldHVybiAwOworCisJLyogb3ZlcndyaXRl
IHNldCBpcyBvbmx5IHdyaXR0ZW4gYnkgbG9nIHdyaXRlci4gKi8KKwlpZiAoSkZfSVNTRVQobm9k
ZSwgSk5PREVfT1ZSV1IpKQorCQlyZXR1cm4gMDsKKworCS8qIGpub2RlIGlzIGFscmVhZHkgdW5k
ZXIgd3JpdGViYWNrICovCisJaWYgKEpGX0lTU0VUKG5vZGUsIEpOT0RFX1dSSVRFQkFDSykpCisJ
CXJldHVybiAwOworCisJLyogZG9uJ3QgZmx1c2ggYml0bWFwcyBvciBqb3VybmFsIHJlY29yZHMg
Ki8KKwlpZiAoIWpub2RlX2lzX3pub2RlKG5vZGUpICYmICFqbm9kZV9pc191bmZvcm1hdHRlZChu
b2RlKSkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gMTsKK30KKworLyoKKyAqIC0+cmVsZWFzZXBh
Z2UgbWV0aG9kIGZvciByZWlzZXI0CisgKgorICogVGhpcyBpcyBjYWxsZWQgYnkgVk0gc2Nhbm5l
ciB3aGVuIGl0IGNvbWVzIGFjcm9zcyBjbGVhbiBwYWdlLiAgV2hhdCB3ZSBoYXZlCisgKiB0byBk
byBoZXJlIGlzIHRvIGNoZWNrIHdoZXRoZXIgcGFnZSBjYW4gcmVhbGx5IGJlIHJlbGVhc2VkIChm
cmVlZCB0aGF0IGlzKQorICogYW5kIGlmIHNvLCBkZXRhY2ggam5vZGUgZnJvbSBpdCBhbmQgcmVt
b3ZlIHBhZ2UgZnJvbSB0aGUgcGFnZSBjYWNoZS4KKyAqCisgKiBDaGVjayBmb3IgcmVsZWFzYWJp
bGl0eSBpcyBkb25lIGJ5IHJlbGVhc2FibGUoKSBmdW5jdGlvbi4KKyAqLworaW50IHJlaXNlcjRf
cmVsZWFzZXBhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UsIGdmcF90IGdmcCBVTlVTRURfQVJHKQorewor
CWpub2RlICpub2RlOworCisJYXNzZXJ0KCJuaWtpdGEtMjI1NyIsIFBhZ2VQcml2YXRlKHBhZ2Up
KTsKKwlhc3NlcnQoIm5pa2l0YS0yMjU5IiwgUGFnZUxvY2tlZChwYWdlKSk7CisJYXNzZXJ0KCJu
aWtpdGEtMjg5MiIsICFQYWdlV3JpdGViYWNrKHBhZ2UpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDE5
IiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKworCS8qIE5PVEUtTklLSVRBOiB0aGlzIGNhbiBi
ZSBjYWxsZWQgaW4gdGhlIGNvbnRleHQgb2YgcmVpc2VyNCBjYWxsLiBJdAorCSAgIGlzIG5vdCBj
bGVhciB3aGF0IHRvIGRvIGluIHRoaXMgY2FzZS4gQSBsb3Qgb2YgZGVhZGxvY2tzIHNlZW1zIGJl
CisJICAgcG9zc2libGUuICovCisKKwlub2RlID0gam5vZGVfYnlfcGFnZShwYWdlKTsKKwlhc3Nl
cnQoIm5pa2l0YS0yMjU4Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInJlaXNlcjQtNCIsIHBh
Z2UtPm1hcHBpbmcgIT0gTlVMTCk7CisJYXNzZXJ0KCJyZWlzZXI0LTUiLCBwYWdlLT5tYXBwaW5n
LT5ob3N0ICE9IE5VTEwpOworCisJaWYgKFBhZ2VEaXJ0eShwYWdlKSkKKwkJcmV0dXJuIDA7CisK
KwkvKiBleHRyYSBwYWdlIHJlZmVyZW5jZSBpcyB1c2VkIGJ5IHJlaXNlcjQgdG8gcHJvdGVjdAor
CSAqIGpub2RlPC0+cGFnZSBsaW5rIGZyb20gdGhpcyAtPnJlbGVhc2VwYWdlKCkuICovCisJaWYg
KHBhZ2VfY291bnQocGFnZSkgPiAzKQorCQlyZXR1cm4gMDsKKworCS8qIHJlbGVhc2FibGUoKSBu
ZWVkcyBqbm9kZSBsb2NrLCBiZWNhdXNlIGl0IGxvb2tzIGF0IHRoZSBqbm9kZSBmaWVsZHMKKwkg
KiBhbmQgd2UgbmVlZCBqbG9hZF9sb2NrIGhlcmUgdG8gYXZvaWQgcmFjZXMgd2l0aCBqbG9hZCgp
LiAqLworCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwlzcGluX2xvY2soJihub2RlLT5sb2FkKSk7
CisJaWYgKGpub2RlX2lzX3JlbGVhc2FibGUobm9kZSkpIHsKKwkJc3RydWN0IGFkZHJlc3Nfc3Bh
Y2UgKm1hcHBpbmc7CisKKwkJbWFwcGluZyA9IHBhZ2UtPm1hcHBpbmc7CisJCWpyZWYobm9kZSk7
CisJCS8qIHRoZXJlIGlzIG5vIG5lZWQgdG8gc3luY2hyb25pemUgYWdhaW5zdAorCQkgKiBqbm9k
ZV9leHRlbnRfd3JpdGUoKSBoZXJlLCBiZWNhdXNlIHBhZ2VzIHNlZW4gYnkKKwkJICogam5vZGVf
ZXh0ZW50X3dyaXRlKCkgYXJlICFyZWxlYXNhYmxlKCkuICovCisJCXBhZ2VfY2xlYXJfam5vZGUo
cGFnZSwgbm9kZSk7CisJCXNwaW5fdW5sb2NrKCYobm9kZS0+bG9hZCkpOworCQlzcGluX3VubG9j
a19qbm9kZShub2RlKTsKKworCQkvKiB3ZSBhcmUgdW5kZXIgbWVtb3J5IHByZXNzdXJlIHNvIHJl
bGVhc2Ugam5vZGUgYWxzby4gKi8KKwkJanB1dChub2RlKTsKKworCQlyZXR1cm4gMTsKKwl9IGVs
c2UgeworCQlzcGluX3VubG9jaygmKG5vZGUtPmxvYWQpKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUo
bm9kZSk7CisJCWFzc2VydCgibmlraXRhLTMwMjAiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOwor
CQlyZXR1cm4gMDsKKwl9Cit9CisKKyNpZmRlZiBDT05GSUdfTUlHUkFUSU9OCitpbnQgcmVpc2Vy
NF9taWdyYXRlcGFnZShzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywgc3RydWN0IHBhZ2Ug
Km5ld3BhZ2UsCisJCQlzdHJ1Y3QgcGFnZSAqcGFnZSwgZW51bSBtaWdyYXRlX21vZGUgbW9kZSkK
K3sKKwkvKiBUT0RPOiBpbXBsZW1lbnQgbW92YWJsZSBtYXBwaW5nCisJICovCisJcmV0dXJuIC1F
SU87Cit9CisjZW5kaWYgLyogQ09ORklHX01JR1JBVElPTiAqLworCitpbnQgcmVpc2VyNF9yZWFk
cGFnZV9kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IHBhZ2UgKnBhZ2UpCit7CisJ
YXNzZXJ0KCJlZHdhcmQtMTUzMyIsIFBhZ2VMb2NrZWQocGFnZSkpOworCWFzc2VydCgiZWR3YXJk
LTE1MzQiLCAhUGFnZVVwdG9kYXRlKHBhZ2UpKTsKKwlhc3NlcnQoImVkd2FyZC0xNTM1IiwgcGFn
ZS0+bWFwcGluZyAmJiBwYWdlLT5tYXBwaW5nLT5ob3N0KTsKKworCXJldHVybiBpbm9kZV9maWxl
X3BsdWdpbihwYWdlLT5tYXBwaW5nLT5ob3N0KS0+cmVhZHBhZ2UoZmlsZSwgcGFnZSk7Cit9CisK
K2ludCByZWlzZXI0X3JlYWRwYWdlc19kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0
IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgICAgc3RydWN0IGxpc3RfaGVhZCAqcGFn
ZXMsIHVuc2lnbmVkIG5yX3BhZ2VzKQoreworCXJldHVybiBpbm9kZV9maWxlX3BsdWdpbihtYXBw
aW5nLT5ob3N0KS0+cmVhZHBhZ2VzKGZpbGUsIG1hcHBpbmcsCisJCQkJCQkJICAgcGFnZXMsIG5y
X3BhZ2VzKTsKK30KKworaW50IHJlaXNlcjRfd3JpdGVwYWdlc19kaXNwYXRjaChzdHJ1Y3QgYWRk
cmVzc19zcGFjZSAqbWFwcGluZywKKwkJCQlzdHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKndiYykK
K3sKKwlyZXR1cm4gaW5vZGVfZmlsZV9wbHVnaW4obWFwcGluZy0+aG9zdCktPndyaXRlcGFnZXMo
bWFwcGluZywgd2JjKTsKK30KKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlh
YmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIK
KyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAx
MjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5v
cmlnL2ZzL3JlaXNlcjQvYmxvY2tfYWxsb2MuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9ibG9j
a19hbGxvYy5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Jsb2NrX2FsbG9jLmMJ
MTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2Jsb2NrX2FsbG9jLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDIyMjIwOTEgKzAxMDAK
QEAgLTAsMCArMSwxMTc3IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5z
IFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CityZWlzZXI0L1JFQURNRSAqLworCisjaW5j
bHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAicGx1Z2luL3Bs
dWdpbi5oIgorI2luY2x1ZGUgInR4bm1nci5oIgorI2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVk
ZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0cmVlLmgiCisjaW5jbHVkZSAic3VwZXIuaCIK
KyNpbmNsdWRlICJkaXNjYXJkLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkvKiBmb3Ig
X191Pz8gICovCisjaW5jbHVkZSA8bGludXgvZnMuaD4JCS8qIGZvciBzdHJ1Y3Qgc3VwZXJfYmxv
Y2sgICovCisjaW5jbHVkZSA8bGludXgvc3BpbmxvY2suaD4KKworLyogVEhFIFJFSVNFUjQgRElT
SyBTUEFDRSBSRVNFUlZBVElPTiBTQ0hFTUUuICovCisKKy8qIFdlIG5lZWQgdG8gYmUgYWJsZSB0
byByZXNlcnZlIGVub3VnaCBkaXNrIHNwYWNlIHRvIGVuc3VyZSB0aGF0IGFuIGF0b21pYworICAg
b3BlcmF0aW9uIHdpbGwgaGF2ZSBlbm91Z2ggZGlzayBzcGFjZSB0byBmbHVzaCAoc2VlIGZsdXNo
LmMgYW5kCisgICBodHRwOi8vbmFtZXN5cy5jb20vdjQvdjQuaHRtbCkgYW5kIGNvbW1pdCBpdCBv
bmNlIGl0IGlzIHN0YXJ0ZWQuCisKKyAgIEluIG91ciBkZXNpZ24gYSBjYWxsIGZvciByZXNlcnZp
bmcgZGlzayBzcGFjZSBtYXkgZmFpbCBidXQgbm90IGFuIGFjdHVhbAorICAgYmxvY2sgYWxsb2Nh
dGlvbi4KKworICAgQWxsIGZyZWUgYmxvY2tzLCBhbHJlYWR5IGFsbG9jYXRlZCBibG9ja3MsIGFu
ZCBhbGwga2luZHMgb2YgcmVzZXJ2ZWQgYmxvY2tzCisgICBhcmUgY291bnRlZCBpbiBkaWZmZXJl
bnQgcGVyLWZzIGJsb2NrIGNvdW50ZXJzLgorCisgICBBIHJlaXNlcjQgc3VwZXIgYmxvY2sncyBz
ZXQgb2YgYmxvY2sgY291bnRlcnMgY3VycmVudGx5IGlzOgorCisgICBmcmVlIC0tIGZyZWUgYmxv
Y2tzLAorICAgdXNlZCAtLSBhbHJlYWR5IGFsbG9jYXRlZCBibG9ja3MsCisKKyAgIGdyYWJiZWQg
LS0gaW5pdGlhbGx5IHJlc2VydmVkIGZvciBwZXJmb3JtaW5nIGFuIGZzIG9wZXJhdGlvbiwgdGhv
c2UgYmxvY2tzCisJIGFyZSB0YWtlbiBmcm9tIGZyZWUgYmxvY2tzLCB0aGVuIGdyYWJiZWQgZGlz
ayBzcGFjZSBsZWFrcyBmcm9tIGdyYWJiZWQKKwkgYmxvY2tzIGNvdW50ZXIgdG8gb3RoZXIgY291
bnRlcnMgbGlrZSAiZmFrZSBhbGxvY2F0ZWQiLCAiZmx1c2gKKwkgcmVzZXJ2ZWQiLCAidXNlZCIs
IHRoZSByZXN0IG9mIG5vdCB1c2VkIGdyYWJiZWQgc3BhY2UgaXMgcmV0dXJuZWQgdG8KKwkgZnJl
ZSBzcGFjZSBhdCB0aGUgZW5kIG9mIGZzIG9wZXJhdGlvbjsKKworICAgZmFrZSBhbGxvY2F0ZWQg
LS0gY291bnRzIGFsbCBub2RlcyB3aXRob3V0IHJlYWwgZGlzayBibG9jayBudW1iZXJzIGFzc2ln
bmVkLAorCQkgICAgd2UgaGF2ZSBzZXBhcmF0ZSBhY2NvdW50aW5nIGZvciBmb3JtYXR0ZWQgYW5k
IHVuZm9ybWF0dGVkCisJCSAgICBub2RlcyAoZm9yIGVhc2llciBkZWJ1Z2dpbmcpOworCisgICBm
bHVzaCByZXNlcnZlZCAtLSBkaXNrIHNwYWNlIG5lZWRlZCBmb3IgZmx1c2hpbmcgYW5kIGNvbW1p
dHRpbmcgYW4gYXRvbS4KKwkJICAgIEVhY2ggZGlydHkgYWxyZWFkeSBhbGxvY2F0ZWQgYmxvY2sg
Y291bGQgYmUgd3JpdHRlbiBhcyBhCisJCSAgICBwYXJ0IG9mIGF0b20ncyBvdmVyd3JpdGUgc2V0
IG9yIGFzIGEgcGFydCBvZiBhdG9tJ3MKKwkJICAgIHJlbG9jYXRlIHNldC4gIEluIGJvdGggY2Fz
ZSBvbmUgYWRkaXRpb25hbCBibG9jayBpcyBuZWVkZWQsCisJCSAgICBpdCBpcyB1c2VkIGFzIGEg
d2FuZGVyZWQgYmxvY2sgaWYgd2UgZG8gb3ZlcndyaXRlIG9yIGFzIGEKKwkJICAgIG5ldyBsb2Nh
dGlvbiBmb3IgYSByZWxvY2F0ZWQgYmxvY2suCisKKyAgIEluIGFkZGl0aW9uLCBibG9ja3MgaW4g
c29tZSBzdGF0ZXMgYXJlIGNvdW50ZWQgb24gcGVyLXRocmVhZCBhbmQgcGVyLWF0b20KKyAgIGJh
c2lzLiAgQSByZWlzZXI0IGNvbnRleHQgaGFzIGEgY291bnRlciBvZiBibG9ja3MgZ3JhYmJlZCBi
eSB0aGlzIHRyYW5zYWN0aW9uCisgICBhbmQgdGhlIHNiJ3MgZ3JhYmJlZCBibG9ja3MgY291bnRl
ciBpcyBhIHN1bSBvZiBncmFiYmVkIGJsb2NrcyBjb3VudGVyIHZhbHVlcworICAgb2YgZWFjaCBy
ZWlzZXI0IGNvbnRleHQuICBFYWNoIHJlaXNlcjQgYXRvbSBoYXMgYSBjb3VudGVyIG9mICJmbHVz
aCByZXNlcnZlZCIKKyAgIGJsb2Nrcywgd2hpY2ggYXJlIHJlc2VydmVkIGZvciBmbHVzaCBwcm9j
ZXNzaW5nIGFuZCBhdG9tIGNvbW1pdC4gKi8KKworLyogQU4gRVhBTVBMRTogc3VwcG9zZSB3ZSBp
bnNlcnQgbmV3IGl0ZW0gdG8gdGhlIHJlaXNlcjQgdHJlZS4gIFdlIGVzdGltYXRlCisgICBudW1i
ZXIgb2YgYmxvY2tzIHRvIGdyYWIgZm9yIG1vc3QgZXhwZW5zaXZlIGNhc2Ugb2YgYmFsYW5jaW5n
IHdoZW4gdGhlIGxlYWYKKyAgIG5vZGUgd2UgaW5zZXJ0IG5ldyBpdGVtIHRvIGdldHMgc3BsaXQg
YW5kIG5ldyBsZWFmIG5vZGUgaXMgYWxsb2NhdGVkLgorCisgICBTbywgd2UgbmVlZCB0byBncmFi
IGJsb2NrcyBmb3IKKworICAgMSkgb25lIGJsb2NrIGZvciBwb3NzaWJsZSBkaXJ0eWluZyB0aGUg
bm9kZSB3ZSBpbnNlcnQgYW4gaXRlbSB0by4gVGhhdCBibG9jaworICAgICAgd291bGQgYmUgdXNl
ZCBmb3Igbm9kZSByZWxvY2F0aW9uIGF0IGZsdXNoIHRpbWUgb3IgZm9yIGFsbG9jYXRpbmcgb2Yg
YQorICAgICAgd2FuZGVyZWQgb25lLCBpdCBkZXBlbmRzIHdoYXQgd2lsbCBiZSBhIHJlc3VsdCAo
d2hhdCBzZXQsIHJlbG9jYXRlIG9yCisgICAgICBvdmVyd3JpdGUgdGhlIG5vZGUgZ2V0cyBhc3Np
Z25lZCB0bykgb2YgdGhlIG5vZGUgcHJvY2Vzc2luZyBieSB0aGUgZmx1c2gKKyAgICAgIGFsZ29y
aXRobS4KKworICAgMikgb25lIGJsb2NrIGZvciBlaXRoZXIgYWxsb2NhdGluZyBhIG5ldyBub2Rl
LCBvciBkaXJ0eWluZyBvZiByaWdodCBvciBsZWZ0CisgICAgICBjbGVhbiBuZWlnaGJvciwgb25s
eSBvbmUgY2FzZSBtYXkgaGFwcGVuLgorCisgICBWUy1GSVhNRS1IQU5TOiB3aHkgY2FuIG9ubHkg
b25lIGNhc2UgaGFwcGVuPyBJIHdvdWxkIGV4cGVjdCB0byBzZWUgZGlydHlpbmcKKyAgIG9mIGxl
ZnQgbmVpZ2hib3IsIHJpZ2h0IG5laWdoYm9yLCBjdXJyZW50IG5vZGUsIGFuZCBjcmVhdGlvbiBv
ZiBuZXcgbm9kZS4KKyAgIEhhdmUgSSBmb3Jnb3R0ZW4gc29tZXRoaW5nPyAgZW1haWwgbWUuCisK
KyAgIFRoZXNlIGdyYWJiZWQgYmxvY2tzIGFyZSBjb3VudGVkIGluIGJvdGggcmVpc2VyNCBjb250
ZXh0ICJncmFiYmVkIGJsb2NrcyIKKyAgIGNvdW50ZXIgYW5kIGluIHRoZSBmcy13aWRlIG9uZSAo
Ym90aCBjdHgtPmdyYWJiZWRfYmxvY2tzIGFuZAorICAgc2JpbmZvLT5ibG9ja3NfZ3JhYmJlZCBn
ZXQgaW5jcmVtZW50ZWQgYnkgMiksIHNiJ3MgZnJlZSBibG9ja3MgY291bnRlciBpcworICAgZGVj
cmVtZW50ZWQgYnkgMi4KKworICAgU3VwcG9zZSBib3RoIHR3byBibG9ja3Mgd2VyZSBzcGVudCBm
b3IgZGlydHlpbmcgb2YgYW4gYWxyZWFkeSBhbGxvY2F0ZWQgY2xlYW4KKyAgIG5vZGUgKG9uZSBi
bG9jayB3ZW50IGZyb20gImdyYWJiZWQiIHRvICJmbHVzaCByZXNlcnZlZCIpIGFuZCBmb3IgbmV3
IGJsb2NrCisgICBhbGxvY2F0aW5nIChvbmUgYmxvY2sgd2VudCBmcm9tICJncmFiYmVkIiB0byAi
ZmFrZSBhbGxvY2F0ZWQgZm9ybWF0dGVkIikuCisKKyAgIEluc2VydGluZyBvZiBhIGNoaWxkIHBv
aW50ZXIgdG8gdGhlIHBhcmVudCBub2RlIGNhdXNlZCBwYXJlbnQgbm9kZSB0byBiZQorICAgc3Bs
aXQsIHRoZSBiYWxhbmNpbmcgY29kZSB0YWtlcyBjYXJlIGFib3V0IHRoaXMgZ3JhYmJpbmcgbmVj
ZXNzYXJ5IHNwYWNlCisgICBpbW1lZGlhdGVseSBieSBjYWxsaW5nIHJlaXNlcjRfZ3JhYiB3aXRo
IEJBX1JFU0VSVkVEIGZsYWcgc2V0IHdoaWNoIG1lYW5zCisgICAiY2FuIHVzZSB0aGUgNSUgcmVz
ZXJ2ZWQgZGlzayBzcGFjZSIuCisKKyAgIEF0IHRoaXMgbW9tZW50IGluc2VydGlvbiBjb21wbGV0
ZXMgYW5kIGdyYWJiZWQgYmxvY2tzIChpZiB0aGV5IHdlcmUgbm90IHVzZWQpCisgICBzaG91bGQg
YmUgcmV0dXJuZWQgdG8gdGhlIGZyZWUgc3BhY2UgY291bnRlci4KKworICAgSG93ZXZlciB0aGUg
YXRvbSBsaWZlLWN5Y2xlIGlzIG5vdCBjb21wbGV0ZWQuICBUaGUgYXRvbSBoYWQgb25lICJmbHVz
aAorICAgcmVzZXJ2ZWQiIGJsb2NrIGFkZGVkIGJ5IG91ciBpbnNlcnRpb24gYW5kIHRoZSBuZXcg
ZmFrZSBhbGxvY2F0ZWQgbm9kZSBpcworICAgY291bnRlZCBhcyBhICJmYWtlIGFsbG9jYXRlZCBm
b3JtYXR0ZWQiIG9uZS4gIFRoZSBhdG9tIGhhcyB0byBiZSBmdWxseQorICAgcHJvY2Vzc2VkIGJ5
IGZsdXNoIGJlZm9yZSBjb21taXQuICBTdXBwb3NlIHRoYXQgdGhlIGZsdXNoIG1vdmVkIHRoZSBm
aXJzdCwKKyAgIGFscmVhZHkgYWxsb2NhdGVkIG5vZGUgdG8gdGhlIGF0b20ncyBvdmVyd3JpdGUg
bGlzdCwgdGhlIG5ldyBmYWtlIGFsbG9jYXRlZAorICAgbm9kZSwgb2J2aW91c2x5LCB3ZW50IGlu
dG8gdGhlIGF0b20gcmVsb2NhdGUgc2V0LiAgVGhlIHJlaXNlcjQgZmx1c2gKKyAgIGFsbG9jYXRl
cyB0aGUgbmV3IG5vZGUgdXNpbmcgb25lIHVuaXQgZnJvbSAiZmFrZSBhbGxvY2F0ZWQgZm9ybWF0
dGVkIgorICAgY291bnRlciwgdGhlIGxvZyB3cml0ZXIgdXNlcyBvbmUgZnJvbSAiZmx1c2ggcmVz
ZXJ2ZWQiIGZvciB3YW5kZXJlZCBibG9jaworICAgYWxsb2NhdGlvbi4KKworICAgQW5kLCBpdCBp
cyBub3QgdGhlIGVuZC4gIFdoZW4gdGhlIHdhbmRlcmVkIGJsb2NrIGlzIGRlYWxsb2NhdGVkIGFm
dGVyIHRoZQorICAgYXRvbSBnZXRzIGZ1bGx5IHBsYXllZCAoc2VlIHdhbmRlci5jIGZvciB0ZXJt
IGRlc2NyaXB0aW9uKSwgdGhlIGRpc2sgc3BhY2UKKyAgIG9jY3VwaWVkIGZvciBpdCBpcyByZXR1
cm5lZCB0byBmcmVlIGJsb2Nrcy4gKi8KKworLyogQkxPQ0sgTlVNQkVSUyAqLworCisvKiBBbnkg
cmVpc2VyNCBub2RlIGhhcyBhIGJsb2NrIG51bWJlciBhc3NpZ25lZCB0byBpdC4gIFdlIHVzZSB0
aGVzZSBudW1iZXJzIGZvcgorICAgaW5kZXhpbmcgaW4gaGFzaCB0YWJsZXMsIHNvIGlmIGEgYmxv
Y2sgaGFzIG5vdCB5ZXQgYmVlbiBhc3NpZ25lZCBhIGxvY2F0aW9uCisgICBvbiBkaXNrIHdlIG5l
ZWQgdG8gZ2l2ZSBpdCBhIHRlbXBvcmFyeSBmYWtlIGJsb2NrIG51bWJlci4KKworICAgQ3VycmVu
dCBpbXBsZW1lbnRhdGlvbiBvZiByZWlzZXI0IHVzZXMgNjQtYml0IGludGVnZXJzIGZvciBibG9j
ayBudW1iZXJzLiBXZQorICAgdXNlIGhpZ2hlc3QgYml0IGluIDY0LWJpdCBibG9jayBudW1iZXIg
dG8gZGlzdGluZ3Vpc2ggZmFrZSBhbmQgcmVhbCBibG9jaworICAgbnVtYmVycy4gU28sIG9ubHkg
NjMgYml0cyBtYXkgYmUgdXNlZCB0byBhZGRyZXNzaW5nIG9mIHJlYWwgZGV2aWNlCisgICBibG9j
a3MuIFRoYXQgImZha2UiIGJsb2NrIG51bWJlcnMgc3BhY2UgaXMgZGl2aWRlZCBpbnRvIHN1YnNw
YWNlcyBvZiBmYWtlCisgICBibG9jayBudW1iZXJzIGZvciBkYXRhIGJsb2NrcyBhbmQgZm9yIHNo
YWRvdyAod29ya2luZykgYml0bWFwIGJsb2Nrcy4KKworICAgRmFrZSBibG9jayBudW1iZXJzIGZv
ciBkYXRhIGJsb2NrcyBhcmUgZ2VuZXJhdGVkIGJ5IGEgY3ljbGljIGNvdW50ZXIsIHdoaWNoCisg
ICBnZXRzIGluY3JlbWVudGVkIGFmdGVyIGVhY2ggcmVhbCBibG9jayBhbGxvY2F0aW9uLiBXZSBh
c3N1bWUgdGhhdCBpdCBpcworICAgaW1wb3NzaWJsZSB0byBvdmVybG9hZCB0aGlzIGNvdW50ZXIg
ZHVyaW5nIG9uZSB0cmFuc2FjdGlvbiBsaWZlLiAqLworCisvKiBJbml0aWFsaXplIGEgYmxvY2tu
ciBoaW50LiAqLwordm9pZCByZWlzZXI0X2Jsb2NrbnJfaGludF9pbml0KHJlaXNlcjRfYmxvY2tu
cl9oaW50ICogaGludCkKK3sKKwltZW1zZXQoaGludCwgMCwgc2l6ZW9mKHJlaXNlcjRfYmxvY2tu
cl9oaW50KSk7Cit9CisKKy8qIFJlbGVhc2UgYW55IHJlc291cmNlcyBvZiBhIGJsb2NrbnIgaGlu
dC4gKi8KK3ZvaWQgcmVpc2VyNF9ibG9ja25yX2hpbnRfZG9uZShyZWlzZXI0X2Jsb2NrbnJfaGlu
dCAqIGhpbnQgVU5VU0VEX0FSRykKK3sKKy8qIE5vIHJlc291cmNlcyBzaG91bGQgYmUgZnJlZWQg
aW4gY3VycmVudCBibG9ja25yX2hpbnQgaW1wbGVtZW50YXRpb24uICovCit9CisKKy8qIHNlZSBh
Ym92ZSBmb3IgZXhwbGFuYXRpb24gb2YgZmFrZSBibG9jayBudW1iZXIuICAqLworLyogQXVkaXRl
ZCBieTogZ3JlZW4oMjAwMi4wNi4xMSkgKi8KK2ludCByZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZShj
b25zdCByZWlzZXI0X2Jsb2NrX25yICogZGEpCit7CisJLyogVGhlIHJlYXNvbiBmb3Igbm90IHNp
bXBseSByZXR1cm5pbmcgcmVzdWx0IG9mICcmJyBvcGVyYXRpb24gaXMgdGhhdAorCSAgIHdoaWxl
IHJldHVybiB2YWx1ZSBpcyAocG9zc2libHkgMzJiaXQpIGludCwgIHRoZSByZWlzZXI0X2Jsb2Nr
X25yIGlzCisJICAgYXQgbGVhc3QgNjQgYml0cyBsb25nLCBhbmQgaGlnaCBiaXQgKHdoaWNoIGlz
IHRoZSBvbmx5IHBvc3NpYmxlCisJICAgbm9uIHplcm8gYml0IGFmdGVyIHRoZSBtYXNraW5nKSB3
b3VsZCBiZSBzdHJpcHBlZCBvZmYgKi8KKwlyZXR1cm4gKCpkYSAmIFJFSVNFUjRfRkFLRV9CTE9D
S05SX0JJVF9NQVNLKSA/IDEgOiAwOworfQorCisvKiBTdGF0aWMgZnVuY3Rpb25zIGZvciA8cmVp
c2VyNCBzdXBlciBibG9jaz4vPHJlaXNlcjQgY29udGV4dD4gYmxvY2sgY291bnRlcnMKKyAgIGFy
aXRobWV0aWMuIE1vc3RseSwgdGhleSBhcmUgaXNvbGF0ZWQgdG8gbm90IHRvIGNvZGUgc2FtZSBh
c3NlcnRpb25zIGluCisgICBzZXZlcmFsIHBsYWNlcy4gKi8KK3N0YXRpYyB2b2lkIHN1Yl9mcm9t
X2N0eF9ncmFiYmVkKHJlaXNlcjRfY29udGV4dCAqIGN0eCwgX191NjQgY291bnQpCit7CisJQlVH
X09OKGN0eC0+Z3JhYmJlZF9ibG9ja3MgPCBjb3VudCk7CisJYXNzZXJ0KCJ6YW0tNTI3IiwgY3R4
LT5ncmFiYmVkX2Jsb2NrcyA+PSBjb3VudCk7CisJY3R4LT5ncmFiYmVkX2Jsb2NrcyAtPSBjb3Vu
dDsKK30KKworc3RhdGljIHZvaWQgYWRkX3RvX2N0eF9ncmFiYmVkKHJlaXNlcjRfY29udGV4dCAq
IGN0eCwgX191NjQgY291bnQpCit7CisJY3R4LT5ncmFiYmVkX2Jsb2NrcyArPSBjb3VudDsKK30K
Kworc3RhdGljIHZvaWQgc3ViX2Zyb21fc2JfZ3JhYmJlZChyZWlzZXI0X3N1cGVyX2luZm9fZGF0
YSAqIHNiaW5mbywgX191NjQgY291bnQpCit7CisJYXNzZXJ0KCJ6YW0tNTI1Iiwgc2JpbmZvLT5i
bG9ja3NfZ3JhYmJlZCA+PSBjb3VudCk7CisJc2JpbmZvLT5ibG9ja3NfZ3JhYmJlZCAtPSBjb3Vu
dDsKK30KKworLyogRGVjcmVhc2UgdGhlIGNvdW50ZXIgb2YgYmxvY2sgcmVzZXJ2ZWQgZm9yIGZs
dXNoIGluIHN1cGVyIGJsb2NrLiAqLworc3RhdGljIHZvaWQKK3N1Yl9mcm9tX3NiX2ZsdXNoX3Jl
c2VydmVkKHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICogc2JpbmZvLCBfX3U2NCBjb3VudCkKK3sK
Kwlhc3NlcnQoInZwZi0yOTEiLCBzYmluZm8tPmJsb2Nrc19mbHVzaF9yZXNlcnZlZCA+PSBjb3Vu
dCk7CisJc2JpbmZvLT5ibG9ja3NfZmx1c2hfcmVzZXJ2ZWQgLT0gY291bnQ7Cit9CisKK3N0YXRp
YyB2b2lkCitzdWJfZnJvbV9zYl9mYWtlX2FsbG9jYXRlZChyZWlzZXI0X3N1cGVyX2luZm9fZGF0
YSAqIHNiaW5mbywgX191NjQgY291bnQsCisJCQkgICByZWlzZXI0X2JhX2ZsYWdzX3QgZmxhZ3Mp
Cit7CisJaWYgKGZsYWdzICYgQkFfRk9STUFUVEVEKSB7CisJCWFzc2VydCgiemFtLTgwNiIsIHNi
aW5mby0+YmxvY2tzX2Zha2VfYWxsb2NhdGVkID49IGNvdW50KTsKKwkJc2JpbmZvLT5ibG9ja3Nf
ZmFrZV9hbGxvY2F0ZWQgLT0gY291bnQ7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ6YW0tNTI4IiwK
KwkJICAgICAgIHNiaW5mby0+YmxvY2tzX2Zha2VfYWxsb2NhdGVkX3VuZm9ybWF0dGVkID49IGNv
dW50KTsKKwkJc2JpbmZvLT5ibG9ja3NfZmFrZV9hbGxvY2F0ZWRfdW5mb3JtYXR0ZWQgLT0gY291
bnQ7CisJfQorfQorCitzdGF0aWMgdm9pZCBzdWJfZnJvbV9zYl91c2VkKHJlaXNlcjRfc3VwZXJf
aW5mb19kYXRhICogc2JpbmZvLCBfX3U2NCBjb3VudCkKK3sKKwlhc3NlcnQoInphbS01MzAiLAor
CSAgICAgICBzYmluZm8tPmJsb2Nrc191c2VkID49IGNvdW50ICsgc2JpbmZvLT5taW5fYmxvY2tz
X3VzZWQpOworCXNiaW5mby0+YmxvY2tzX3VzZWQgLT0gY291bnQ7Cit9CisKK3N0YXRpYyB2b2lk
CitzdWJfZnJvbV9jbHVzdGVyX3Jlc2VydmVkKHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICogc2Jp
bmZvLCBfX3U2NCBjb3VudCkKK3sKKwlhc3NlcnQoImVkd2FyZC01MDEiLCBzYmluZm8tPmJsb2Nr
c19jbHVzdGVyZWQgPj0gY291bnQpOworCXNiaW5mby0+YmxvY2tzX2NsdXN0ZXJlZCAtPSBjb3Vu
dDsKK30KKworLyogSW5jcmVhc2UgdGhlIGNvdW50ZXIgb2YgYmxvY2sgcmVzZXJ2ZWQgZm9yIGZs
dXNoIGluIGF0b20uICovCitzdGF0aWMgdm9pZCBhZGRfdG9fYXRvbV9mbHVzaF9yZXNlcnZlZF9u
b2xvY2sodHhuX2F0b20gKiBhdG9tLCBfX3UzMiBjb3VudCkKK3sKKwlhc3NlcnQoInphbS03NzIi
LCBhdG9tICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisJ
YXRvbS0+Zmx1c2hfcmVzZXJ2ZWQgKz0gY291bnQ7Cit9CisKKy8qIERlY3JlYXNlIHRoZSBjb3Vu
dGVyIG9mIGJsb2NrIHJlc2VydmVkIGZvciBmbHVzaCBpbiBhdG9tLiAqLworc3RhdGljIHZvaWQg
c3ViX2Zyb21fYXRvbV9mbHVzaF9yZXNlcnZlZF9ub2xvY2sodHhuX2F0b20gKiBhdG9tLCBfX3Uz
MiBjb3VudCkKK3sKKwlhc3NlcnQoInphbS03NzQiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydF9z
cGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisJYXNzZXJ0KCJuaWtpdGEtMjc5MCIsIGF0b20t
PmZsdXNoX3Jlc2VydmVkID49IGNvdW50KTsKKwlhdG9tLT5mbHVzaF9yZXNlcnZlZCAtPSBjb3Vu
dDsKK30KKworLyogc3VwZXIgYmxvY2sgaGFzIDYgY291bnRlcnM6IGZyZWUsIHVzZWQsIGdyYWJi
ZWQsIGZha2UgYWxsb2NhdGVkCisgICAoZm9ybWF0dGVkIGFuZCB1bmZvcm1hdHRlZCkgYW5kIGZs
dXNoIHJlc2VydmVkLiBUaGVpciBzdW0gbXVzdCBiZQorICAgbnVtYmVyIG9mIGJsb2NrcyBvbiBh
IGRldmljZS4gVGhpcyBmdW5jdGlvbiBjaGVja3MgdGhpcyAqLworaW50IHJlaXNlcjRfY2hlY2tf
YmxvY2tfY291bnRlcnMoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlfX3U2
NCBzdW07CisKKwlzdW0gPSByZWlzZXI0X2dyYWJiZWRfYmxvY2tzKHN1cGVyKSArIHJlaXNlcjRf
ZnJlZV9ibG9ja3Moc3VwZXIpICsKKwkgICAgcmVpc2VyNF9kYXRhX2Jsb2NrcyhzdXBlcikgKyBy
ZWlzZXI0X2Zha2VfYWxsb2NhdGVkKHN1cGVyKSArCisJICAgIHJlaXNlcjRfZmFrZV9hbGxvY2F0
ZWRfdW5mb3JtYXR0ZWQoc3VwZXIpICsgcmVpc2VyNF9mbHVzaF9yZXNlcnZlZChzdXBlcikgKwor
CSAgICByZWlzZXI0X2NsdXN0ZXJlZF9ibG9ja3Moc3VwZXIpOworCWlmIChyZWlzZXI0X2Jsb2Nr
X2NvdW50KHN1cGVyKSAhPSBzdW0pIHsKKwkJcHJpbnRrKCJzdXBlciBibG9jayBjb3VudGVyczog
IgorCQkgICAgICAgInVzZWQgJWxsdSwgZnJlZSAlbGx1LCAiCisJCSAgICAgICAiZ3JhYmJlZCAl
bGx1LCBmYWtlIGFsbG9jYXRlZCAoZm9ybWF0ZXRkICVsbHUsIHVuZm9ybWF0dGVkICVsbHUpLCAi
CisJCSAgICAgICAicmVzZXJ2ZWQgJWxsdSwgY2x1c3RlcmVkICVsbHUsIHN1bSAlbGx1LCBtdXN0
IGJlIChibG9jayBjb3VudCkgJWxsdVxuIiwKKwkJICAgICAgICh1bnNpZ25lZCBsb25nIGxvbmcp
cmVpc2VyNF9kYXRhX2Jsb2NrcyhzdXBlciksCisJCSAgICAgICAodW5zaWduZWQgbG9uZyBsb25n
KXJlaXNlcjRfZnJlZV9ibG9ja3Moc3VwZXIpLAorCQkgICAgICAgKHVuc2lnbmVkIGxvbmcgbG9u
ZylyZWlzZXI0X2dyYWJiZWRfYmxvY2tzKHN1cGVyKSwKKwkJICAgICAgICh1bnNpZ25lZCBsb25n
IGxvbmcpcmVpc2VyNF9mYWtlX2FsbG9jYXRlZChzdXBlciksCisJCSAgICAgICAodW5zaWduZWQg
bG9uZyBsb25nKQorCQkgICAgICAgcmVpc2VyNF9mYWtlX2FsbG9jYXRlZF91bmZvcm1hdHRlZChz
dXBlciksCisJCSAgICAgICAodW5zaWduZWQgbG9uZyBsb25nKXJlaXNlcjRfZmx1c2hfcmVzZXJ2
ZWQoc3VwZXIpLAorCQkgICAgICAgKHVuc2lnbmVkIGxvbmcgbG9uZylyZWlzZXI0X2NsdXN0ZXJl
ZF9ibG9ja3Moc3VwZXIpLAorCQkgICAgICAgKHVuc2lnbmVkIGxvbmcgbG9uZylzdW0sCisJCSAg
ICAgICAodW5zaWduZWQgbG9uZyBsb25nKXJlaXNlcjRfYmxvY2tfY291bnQoc3VwZXIpKTsKKwkJ
cmV0dXJuIDA7CisJfQorCXJldHVybiAxOworfQorCisvKiBBZGp1c3QgIndvcmtpbmciIGZyZWUg
YmxvY2tzIGNvdW50ZXIgZm9yIG51bWJlciBvZiBibG9ja3Mgd2UgYXJlIGdvaW5nIHRvCisgICBh
bGxvY2F0ZS4gIFJlY29yZCBudW1iZXIgb2YgZ3JhYmJlZCBibG9ja3MgaW4gZnMtd2lkZSBhbmQg
cGVyLXRocmVhZAorICAgY291bnRlcnMuICBUaGlzIGZ1bmN0aW9uIHNob3VsZCBiZSBjYWxsZWQg
YmVmb3JlIGJpdG1hcCBzY2FubmluZyBvcgorICAgYWxsb2NhdGluZyBmYWtlIGJsb2NrIG51bWJl
cnMKKworICAgQHN1cGVyICAgICAgICAgICAtLSBwb2ludGVyIHRvIHJlaXNlcjQgc3VwZXIgYmxv
Y2s7CisgICBAY291bnQgICAgICAgICAgIC0tIG51bWJlciBvZiBibG9ja3Mgd2UgcmVzZXJ2ZTsK
KworICAgQHJldHVybiAgICAgICAgICAtLSAwIGlmIHN1Y2Nlc3MsICAtRU5PU1BDLCBpZiBhbGwK
KwkJCWZyZWUgYmxvY2tzIGFyZSBwcmVzZXJ2ZWQgb3IgYWxyZWFkeSBhbGxvY2F0ZWQuCisqLwor
CitzdGF0aWMgaW50CityZWlzZXI0X2dyYWIocmVpc2VyNF9jb250ZXh0ICogY3R4LCBfX3U2NCBj
b3VudCwgcmVpc2VyNF9iYV9mbGFnc190IGZsYWdzKQoreworCV9fdTY0IGZyZWVfYmxvY2tzOwor
CWludCByZXQgPSAwLCB1c2VfcmVzZXJ2ZWQgPSBmbGFncyAmIEJBX1JFU0VSVkVEOworCXJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwlhc3NlcnQoInZzLTEyNzYiLCBjdHggPT0g
Z2V0X2N1cnJlbnRfY29udGV4dCgpKTsKKworCS8qIERvIG5vdCBncmFiIGFueXRoaW5nIG9uIHJv
LW1vdW50ZWQgZnMuICovCisJaWYgKHNiX3Jkb25seShjdHgtPnN1cGVyKSkgeworCQljdHgtPmdy
YWJfZW5hYmxlZCA9IDA7CisJCWN0eC0+cm8gPSAxOworCQlyZXR1cm4gMDsKKwl9CisKKwlzYmlu
Zm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShjdHgtPnN1cGVyKTsKKworCXNwaW5fbG9ja19yZWlzZXI0
X3N1cGVyKHNiaW5mbyk7CisKKwlmcmVlX2Jsb2NrcyA9IHNiaW5mby0+YmxvY2tzX2ZyZWU7CisK
KwlpZiAoKHVzZV9yZXNlcnZlZCAmJiBmcmVlX2Jsb2NrcyA8IGNvdW50KSB8fAorCSAgICAoIXVz
ZV9yZXNlcnZlZCAmJiBmcmVlX2Jsb2NrcyA8IGNvdW50ICsgc2JpbmZvLT5ibG9ja3NfcmVzZXJ2
ZWQpKSB7CisJCXJldCA9IFJFVEVSUigtRU5PU1BDKTsKKwkJZ290byB1bmxvY2tfYW5kX3JldDsK
Kwl9CisKKwlhZGRfdG9fY3R4X2dyYWJiZWQoY3R4LCBjb3VudCk7CisKKwlzYmluZm8tPmJsb2Nr
c19ncmFiYmVkICs9IGNvdW50OworCXNiaW5mby0+YmxvY2tzX2ZyZWUgLT0gY291bnQ7CisKKyNp
ZiBSRUlTRVI0X0RFQlVHCisJaWYgKGN0eC0+Z3JhYmJlZF9pbml0aWFsbHkgPT0gMCkKKwkJY3R4
LT5ncmFiYmVkX2luaXRpYWxseSA9IGNvdW50OworI2VuZGlmCisKKwlhc3NlcnQoIm5pa2l0YS0y
OTg2IiwgcmVpc2VyNF9jaGVja19ibG9ja19jb3VudGVycyhjdHgtPnN1cGVyKSk7CisKKwkvKiBk
aXNhYmxlIGdyYWIgc3BhY2UgaW4gY3VycmVudCBjb250ZXh0ICovCisJY3R4LT5ncmFiX2VuYWJs
ZWQgPSAwOworCit1bmxvY2tfYW5kX3JldDoKKwlzcGluX3VubG9ja19yZWlzZXI0X3N1cGVyKHNi
aW5mbyk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgcmVpc2VyNF9ncmFiX3NwYWNlKF9fdTY0
IGNvdW50LCByZWlzZXI0X2JhX2ZsYWdzX3QgZmxhZ3MpCit7CisJaW50IHJldDsKKwlyZWlzZXI0
X2NvbnRleHQgKmN0eDsKKworCWFzc2VydCgibmlraXRhLTI5NjQiLCBlcmdvKGZsYWdzICYgQkFf
Q0FOX0NPTU1JVCwKKwkJCQkgICBsb2NrX3N0YWNrX2lzY2xlYW4oZ2V0X2N1cnJlbnRfbG9ja19z
dGFjaworCQkJCQkJICAgICAgKCkpKSk7CisJY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpOwor
CWlmICghKGZsYWdzICYgQkFfRk9SQ0UpICYmICFpc19ncmFiX2VuYWJsZWQoY3R4KSkKKwkJcmV0
dXJuIDA7CisKKwlyZXQgPSByZWlzZXI0X2dyYWIoY3R4LCBjb3VudCwgZmxhZ3MpOworCWlmIChy
ZXQgPT0gLUVOT1NQQykgeworCisJCS8qIFRyeWluZyB0byBjb21taXQgdGhlIGFsbCB0cmFuc2Fj
dGlvbnMgaWYgQkFfQ0FOX0NPTU1JVCBmbGFnCisJCSAgIHByZXNlbnQgKi8KKwkJaWYgKGZsYWdz
ICYgQkFfQ0FOX0NPTU1JVCkgeworCQkJdHhubWdyX2ZvcmNlX2NvbW1pdF9hbGwoY3R4LT5zdXBl
ciwgMCk7CisJCQljdHgtPmdyYWJfZW5hYmxlZCA9IDE7CisJCQlyZXQgPSByZWlzZXI0X2dyYWIo
Y3R4LCBjb3VudCwgZmxhZ3MpOworCQl9CisJfQorCS8qCisJICogYWxsb2NhdGlvbiBmcm9tIHJl
c2VydmVkIHBvb2wgY2Fubm90IGZhaWwuIFRoaXMgaXMgc2V2ZXJlIGVycm9yLgorCSAqLworCWFz
c2VydCgibmlraXRhLTMwMDUiLCBlcmdvKGZsYWdzICYgQkFfUkVTRVJWRUQsIHJldCA9PSAwKSk7
CisJcmV0dXJuIHJldDsKK30KKworLyoKKyAqIFNQQUNFIFJFU0VSVkVEIEZPUiBVTkxJTksvVFJV
TkNBVEUKKyAqCisgKiBVbmxpbmsgYW5kIHRydW5jYXRlIHJlcXVpcmUgc3BhY2UgaW4gdHJhbnNh
Y3Rpb24gKHRvIHVwZGF0ZSBzdGF0IGRhdGEsIGF0CisgKiBsZWFzdCkuIEJ1dCB3ZSBkb24ndCB3
YW50IHJtKDEpIHRvIGZhaWwgd2l0aCAiTm8gc3BhY2Ugb24gZGV2aWNlIiBlcnJvci4KKyAqCisg
KiBTb2x1dGlvbiBpcyB0byByZXNlcnZlIDUlIG9mIGRpc2sgc3BhY2UgZm9yIHRydW5jYXRlcyBh
bmQKKyAqIHVubGlua3MuIFNwZWNpZmljYWxseSwgbm9ybWFsIHNwYWNlIGdyYWJiaW5nIHJlcXVl
c3RzIGRvbid0IGdyYWIgc3BhY2UgZnJvbQorICogcmVzZXJ2ZWQgYXJlYS4gT25seSByZXF1ZXN0
cyB3aXRoIEJBX1JFU0VSVkVEIGJpdCBpbiBmbGFncyBhcmUgYWxsb3dlZCB0bworICogZHJhaW4g
aXQuIFBlciBzdXBlciBibG9jayBkZWxldGUgbXV0ZXggaXMgdXNlZCB0byBhbGxvdyBvbmx5IG9u
ZQorICogdGhyZWFkIGF0IGEgdGltZSB0byBncmFiIGZyb20gcmVzZXJ2ZWQgYXJlYS4KKyAqCisg
KiBHcmFiYmluZyBmcm9tIHJlc2VydmVkIGFyZWEgc2hvdWxkIGFsd2F5cyBiZSBwZXJmb3JtZWQg
d2l0aCBCQV9DQU5fQ09NTUlUCisgKiBmbGFnLgorICoKKyAqLworCitpbnQgcmVpc2VyNF9ncmFi
X3Jlc2VydmVkKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsCisJCQkgIF9fdTY0IGNvdW50LCBy
ZWlzZXI0X2JhX2ZsYWdzX3QgZmxhZ3MpCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNi
aW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKworCWFzc2VydCgibmlraXRhLTMxNzUi
LCBmbGFncyAmIEJBX0NBTl9DT01NSVQpOworCisJLyogQ2hlY2sgdGhlIGRlbGV0ZSBtdXRleCBh
bHJlYWR5IHRha2VuIGJ5IHVzLCB3ZSBhc3N1bWUgdGhhdAorCSAqIHJlYWRpbmcgb2YgbWFjaGlu
ZSB3b3JkIGlzIGF0b21pYy4gKi8KKwlpZiAoc2JpbmZvLT5kZWxldGVfbXV0ZXhfb3duZXIgPT0g
Y3VycmVudCkgeworCQlpZiAocmVpc2VyNF9ncmFiX3NwYWNlCisJCSAgICAoY291bnQsIChmbGFn
cyB8IEJBX1JFU0VSVkVEKSAmIH5CQV9DQU5fQ09NTUlUKSkgeworCQkJd2FybmluZygiemFtLTEw
MDMiLAorCQkJCSJuZXN0ZWQgY2FsbCBvZiBncmFiX3Jlc2VydmVkIGZhaWxzIGNvdW50PSglbGx1
KSIsCisJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyljb3VudCk7CisJCQlyZWlzZXI0X3JlbGVhc2Vf
cmVzZXJ2ZWQoc3VwZXIpOworCQkJcmV0dXJuIFJFVEVSUigtRU5PU1BDKTsKKwkJfQorCQlyZXR1
cm4gMDsKKwl9CisKKwlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKGNvdW50LCBmbGFncykpIHsKKwkJ
bXV0ZXhfbG9jaygmc2JpbmZvLT5kZWxldGVfbXV0ZXgpOworCQlhc3NlcnQoIm5pa2l0YS0yOTI5
Iiwgc2JpbmZvLT5kZWxldGVfbXV0ZXhfb3duZXIgPT0gTlVMTCk7CisJCXNiaW5mby0+ZGVsZXRl
X211dGV4X293bmVyID0gY3VycmVudDsKKworCQlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKGNvdW50
LCBmbGFncyB8IEJBX1JFU0VSVkVEKSkgeworCQkJd2FybmluZygiemFtLTgzMyIsCisJCQkJInJl
c2VydmVkIHNwYWNlIGlzIG5vdCBlbm91Z2ggKCVsbHUpIiwKKwkJCQkodW5zaWduZWQgbG9uZyBs
b25nKWNvdW50KTsKKwkJCXJlaXNlcjRfcmVsZWFzZV9yZXNlcnZlZChzdXBlcik7CisJCQlyZXR1
cm4gUkVURVJSKC1FTk9TUEMpOworCQl9CisJfQorCXJldHVybiAwOworfQorCit2b2lkIHJlaXNl
cjRfcmVsZWFzZV9yZXNlcnZlZChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKQoreworCXJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICppbmZvOworCisJaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1
cGVyKTsKKwlpZiAoaW5mby0+ZGVsZXRlX211dGV4X293bmVyID09IGN1cnJlbnQpIHsKKwkJaW5m
by0+ZGVsZXRlX211dGV4X293bmVyID0gTlVMTDsKKwkJbXV0ZXhfdW5sb2NrKCZpbmZvLT5kZWxl
dGVfbXV0ZXgpOworCX0KK30KKworc3RhdGljIHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpncmFi
YmVkMmZha2VfYWxsb2NhdGVkX2hlYWQoaW50IGNvdW50KQoreworCXJlaXNlcjRfY29udGV4dCAq
Y3R4OworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwljdHggPSBnZXRfY3Vy
cmVudF9jb250ZXh0KCk7CisJc3ViX2Zyb21fY3R4X2dyYWJiZWQoY3R4LCBjb3VudCk7CisKKwlz
YmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShjdHgtPnN1cGVyKTsKKwlzcGluX2xvY2tfcmVpc2Vy
NF9zdXBlcihzYmluZm8pOworCisJc3ViX2Zyb21fc2JfZ3JhYmJlZChzYmluZm8sIGNvdW50KTsK
KwkvKiByZXR1cm4gc2JpbmZvIGxvY2tlZCAqLworCXJldHVybiBzYmluZm87Cit9CisKKy8qIGlz
IGNhbGxlZCBhZnRlciBAY291bnQgZmFrZSBibG9jayBudW1iZXJzIGFyZSBhbGxvY2F0ZWQgYW5k
IHBvaW50ZXIgdG8KKyAgIHRob3NlIGJsb2NrcyBhcmUgaW5zZXJ0ZWQgaW50byB0cmVlLiAqLwor
c3RhdGljIHZvaWQgZ3JhYmJlZDJmYWtlX2FsbG9jYXRlZF9mb3JtYXR0ZWQodm9pZCkKK3sKKwly
ZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJc2JpbmZvID0gZ3JhYmJlZDJmYWtl
X2FsbG9jYXRlZF9oZWFkKDEpOworCXNiaW5mby0+YmxvY2tzX2Zha2VfYWxsb2NhdGVkKys7CisK
Kwlhc3NlcnQoInZzLTkyMiIsIHJlaXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMocmVpc2VyNF9n
ZXRfY3VycmVudF9zYigpKSk7CisKKwlzcGluX3VubG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7
Cit9CisKKy8qKgorICogZ3JhYmJlZDJmYWtlX2FsbG9jYXRlZF91bmZvcm1hdHRlZAorICogQGNv
dW50OgorICoKKyAqLworc3RhdGljIHZvaWQgZ3JhYmJlZDJmYWtlX2FsbG9jYXRlZF91bmZvcm1h
dHRlZChpbnQgY291bnQpCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbzsKKwor
CXNiaW5mbyA9IGdyYWJiZWQyZmFrZV9hbGxvY2F0ZWRfaGVhZChjb3VudCk7CisJc2JpbmZvLT5i
bG9ja3NfZmFrZV9hbGxvY2F0ZWRfdW5mb3JtYXR0ZWQgKz0gY291bnQ7CisKKwlhc3NlcnQoInZz
LTkyMjEiLCByZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKHJlaXNlcjRfZ2V0X2N1cnJlbnRf
c2IoKSkpOworCisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworfQorCit2b2lk
IGdyYWJiZWQyY2x1c3Rlcl9yZXNlcnZlZChpbnQgY291bnQpCit7CisJcmVpc2VyNF9jb250ZXh0
ICpjdHg7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbzsKKworCWN0eCA9IGdldF9j
dXJyZW50X2NvbnRleHQoKTsKKwlzdWJfZnJvbV9jdHhfZ3JhYmJlZChjdHgsIGNvdW50KTsKKwor
CXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKGN0eC0+c3VwZXIpOworCXNwaW5fbG9ja19yZWlz
ZXI0X3N1cGVyKHNiaW5mbyk7CisKKwlzdWJfZnJvbV9zYl9ncmFiYmVkKHNiaW5mbywgY291bnQp
OworCXNiaW5mby0+YmxvY2tzX2NsdXN0ZXJlZCArPSBjb3VudDsKKworCWFzc2VydCgiZWR3YXJk
LTUwNCIsIHJlaXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMoY3R4LT5zdXBlcikpOworCisJc3Bp
bl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworfQorCit2b2lkIGNsdXN0ZXJfcmVzZXJ2
ZWQyZ3JhYmJlZChpbnQgY291bnQpCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJcmVpc2Vy
NF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbzsKKworCWN0eCA9IGdldF9jdXJyZW50X2NvbnRleHQo
KTsKKworCXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKGN0eC0+c3VwZXIpOworCXNwaW5fbG9j
a19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisKKwlzdWJfZnJvbV9jbHVzdGVyX3Jlc2VydmVkKHNi
aW5mbywgY291bnQpOworCXNiaW5mby0+YmxvY2tzX2dyYWJiZWQgKz0gY291bnQ7CisKKwlhc3Nl
cnQoImVkd2FyZC01MDUiLCByZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKGN0eC0+c3VwZXIp
KTsKKworCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwlhZGRfdG9fY3R4X2dy
YWJiZWQoY3R4LCBjb3VudCk7Cit9CisKK3ZvaWQgY2x1c3Rlcl9yZXNlcnZlZDJmcmVlKGludCBj
b3VudCkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0
YSAqc2JpbmZvOworCisJY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpOworCXNiaW5mbyA9IGdl
dF9zdXBlcl9wcml2YXRlKGN0eC0+c3VwZXIpOworCisJY2x1c3Rlcl9yZXNlcnZlZDJncmFiYmVk
KGNvdW50KTsKKwlncmFiYmVkMmZyZWUoY3R4LCBzYmluZm8sIGNvdW50KTsKK30KKworc3RhdGlj
IERFRklORV9TUElOTE9DSyhmYWtlX2xvY2spOworc3RhdGljIHJlaXNlcjRfYmxvY2tfbnIgZmFr
ZV9nZW4gPSAwOworCisvKioKKyAqIGFzc2lnbl9mYWtlX2Jsb2NrbnIKKyAqIEBibG9ja25yOgor
ICogQGNvdW50OgorICoKKyAqIE9idGFpbiBhIGZha2UgYmxvY2sgbnVtYmVyIGZvciBuZXcgbm9k
ZSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVmZXIgdG8KKyAqIHRoaXMgbmV3bHkgYWxsb2NhdGVk
IG5vZGUgdW50aWwgcmVhbCBhbGxvY2F0aW9uIGlzIGRvbmUuCisgKi8KK3N0YXRpYyB2b2lkIGFz
c2lnbl9mYWtlX2Jsb2NrbnIocmVpc2VyNF9ibG9ja19uciAqYmxvY2tuciwgaW50IGNvdW50KQor
eworCXNwaW5fbG9jaygmZmFrZV9sb2NrKTsKKwkqYmxvY2tuciA9IGZha2VfZ2VuOworCWZha2Vf
Z2VuICs9IGNvdW50OworCXNwaW5fdW5sb2NrKCZmYWtlX2xvY2spOworCisJQlVHX09OKCpibG9j
a25yICYgUkVJU0VSNF9CTE9DS05SX1NUQVRVU19CSVRfTUFTSyk7CisJLyoqYmxvY2tuciAmPSB+
UkVJU0VSNF9CTE9DS05SX1NUQVRVU19CSVRfTUFTSzsqLworCSpibG9ja25yIHw9IFJFSVNFUjRf
VU5BTExPQ0FURURfU1RBVFVTX1ZBTFVFOworCWFzc2VydCgiemFtLTM5NCIsIHpsb29rKGN1cnJl
bnRfdHJlZSwgYmxvY2tucikgPT0gTlVMTCk7Cit9CisKK2ludCBhc3NpZ25fZmFrZV9ibG9ja25y
X2Zvcm1hdHRlZChyZWlzZXI0X2Jsb2NrX25yICogYmxvY2tucikKK3sKKwlhc3NpZ25fZmFrZV9i
bG9ja25yKGJsb2NrbnIsIDEpOworCWdyYWJiZWQyZmFrZV9hbGxvY2F0ZWRfZm9ybWF0dGVkKCk7
CisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogZmFrZV9ibG9ja25yc191bmZvcm1hdHRlZAorICog
QGNvdW50OiBudW1iZXIgb2YgZmFrZSBudW1iZXJzIHRvIGdldAorICoKKyAqIEFsbG9jYXRlcyBA
Y291bnQgZmFrZSBibG9jayBudW1iZXJzIHdoaWNoIHdpbGwgYmUgYXNzaWduZWQgdG8gam5vZGVz
CisgKi8KK3JlaXNlcjRfYmxvY2tfbnIgZmFrZV9ibG9ja25yX3VuZm9ybWF0dGVkKGludCBjb3Vu
dCkKK3sKKwlyZWlzZXI0X2Jsb2NrX25yIGJsb2NrbnI7CisKKwlhc3NpZ25fZmFrZV9ibG9ja25y
KCZibG9ja25yLCBjb3VudCk7CisJZ3JhYmJlZDJmYWtlX2FsbG9jYXRlZF91bmZvcm1hdHRlZChj
b3VudCk7CisKKwlyZXR1cm4gYmxvY2tucjsKK30KKworLyogYWRqdXN0IHNiIGJsb2NrIGNvdW50
ZXJzLCBpZiByZWFsIChvbi1kaXNrKSBibG9jayBhbGxvY2F0aW9uIGltbWVkaWF0ZWx5CisgICBm
b2xsb3dzIGdyYWJiaW5nIG9mIGZyZWUgZGlzayBzcGFjZS4gKi8KK3N0YXRpYyB2b2lkIGdyYWJi
ZWQydXNlZChyZWlzZXI0X2NvbnRleHQgKmN0eCwgcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNi
aW5mbywKKwkJCSBfX3U2NCBjb3VudCkKK3sKKwlzdWJfZnJvbV9jdHhfZ3JhYmJlZChjdHgsIGNv
dW50KTsKKworCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisKKwlzdWJfZnJvbV9z
Yl9ncmFiYmVkKHNiaW5mbywgY291bnQpOworCXNiaW5mby0+YmxvY2tzX3VzZWQgKz0gY291bnQ7
CisKKwlhc3NlcnQoIm5pa2l0YS0yNjc5IiwgcmVpc2VyNF9jaGVja19ibG9ja19jb3VudGVycyhj
dHgtPnN1cGVyKSk7CisKKwlzcGluX3VubG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7Cit9CisK
Ky8qIGFkanVzdCBzYiBibG9jayBjb3VudGVycyB3aGVuIEBjb3VudCB1bmFsbG9jYXRlZCBibG9j
a3MgZ2V0IG1hcHBlZCB0byBkaXNrICovCitzdGF0aWMgdm9pZCBmYWtlX2FsbG9jYXRlZDJ1c2Vk
KHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm8sIF9fdTY0IGNvdW50LAorCQkJCXJlaXNl
cjRfYmFfZmxhZ3NfdCBmbGFncykKK3sKKwlzcGluX2xvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8p
OworCisJc3ViX2Zyb21fc2JfZmFrZV9hbGxvY2F0ZWQoc2JpbmZvLCBjb3VudCwgZmxhZ3MpOwor
CXNiaW5mby0+YmxvY2tzX3VzZWQgKz0gY291bnQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yNjgwIiwK
KwkgICAgICAgcmVpc2VyNF9jaGVja19ibG9ja19jb3VudGVycyhyZWlzZXI0X2dldF9jdXJyZW50
X3NiKCkpKTsKKworCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKK30KKworc3Rh
dGljIHZvaWQgZmx1c2hfcmVzZXJ2ZWQydXNlZCh0eG5fYXRvbSAqIGF0b20sIF9fdTY0IGNvdW50
KQoreworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwlhc3NlcnQoInphbS03
ODciLCBhdG9tICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7
CisKKwlzdWJfZnJvbV9hdG9tX2ZsdXNoX3Jlc2VydmVkX25vbG9jayhhdG9tLCAoX191MzIpIGNv
dW50KTsKKworCXNiaW5mbyA9IGdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUoKTsKKwlzcGluX2xv
Y2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCisJc3ViX2Zyb21fc2JfZmx1c2hfcmVzZXJ2ZWQo
c2JpbmZvLCBjb3VudCk7CisJc2JpbmZvLT5ibG9ja3NfdXNlZCArPSBjb3VudDsKKworCWFzc2Vy
dCgiemFtLTc4OSIsCisJICAgICAgIHJlaXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMocmVpc2Vy
NF9nZXRfY3VycmVudF9zYigpKSk7CisKKwlzcGluX3VubG9ja19yZWlzZXI0X3N1cGVyKHNiaW5m
byk7Cit9CisKKy8qIHVwZGF0ZSB0aGUgcGVyIGZzICBibG9ja25yIGhpbnQgZGVmYXVsdCB2YWx1
ZS4gKi8KK3ZvaWQKK3VwZGF0ZV9ibG9ja25yX2hpbnRfZGVmYXVsdChjb25zdCBzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnMsCisJCQkgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGJsb2NrKQorewor
CXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzKTsK
KworCWFzc2VydCgibmlraXRhLTMzNDIiLCAhcmVpc2VyNF9ibG9ja25yX2lzX2Zha2UoYmxvY2sp
KTsKKworCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisJaWYgKCpibG9jayA8IHNi
aW5mby0+YmxvY2tfY291bnQpIHsKKwkJc2JpbmZvLT5ibG9ja25yX2hpbnRfZGVmYXVsdCA9ICpi
bG9jazsKKwl9IGVsc2UgeworCQl3YXJuaW5nKCJ6YW0tNjc2IiwKKwkJCSJibG9jayBudW1iZXIg
JWxsdSBpcyB0b28gbGFyZ2UgdG8gYmUgdXNlZCBpbiBhIGJsb2NrbnIgaGludFxuIiwKKwkJCSh1
bnNpZ25lZCBsb25nIGxvbmcpKmJsb2NrKTsKKwkJZHVtcF9zdGFjaygpOworCQlERUJVR09OKDEp
OworCX0KKwlzcGluX3VubG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7Cit9CisKKy8qIGdldCBj
dXJyZW50IHZhbHVlIG9mIHRoZSBkZWZhdWx0IGJsb2NrbnIgaGludC4gKi8KK3ZvaWQgZ2V0X2Js
b2NrbnJfaGludF9kZWZhdWx0KHJlaXNlcjRfYmxvY2tfbnIgKiByZXN1bHQpCit7CisJcmVpc2Vy
NF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbyA9IGdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUoKTsK
KworCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisJKnJlc3VsdCA9IHNiaW5mby0+
YmxvY2tucl9oaW50X2RlZmF1bHQ7CisJYXNzZXJ0KCJ6YW0tNjc3IiwgKnJlc3VsdCA8IHNiaW5m
by0+YmxvY2tfY291bnQpOworCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKK30K
KworLyogQWxsb2NhdGUgInJlYWwiIGRpc2sgYmxvY2tzIGJ5IGNhbGxpbmcgYSBwcm9wZXIgc3Bh
Y2UgYWxsb2NhdGlvbiBwbHVnaW4KKyAqIG1ldGhvZC4gQmxvY2tzIGFyZSBhbGxvY2F0ZWQgaW4g
b25lIGNvbnRpZ3VvdXMgZGlzayByZWdpb24uIFRoZSBwbHVnaW4KKyAqIGluZGVwZW5kZW50IHBh
cnQgYWNjb3VudHMgYmxvY2tzIGJ5IHN1YnRyYWN0aW5nIGFsbG9jYXRlZCBhbW91bnQgZnJvbSBn
cmFiYmVkCisgKiBvciBmYWtlIGJsb2NrIGNvdW50ZXIgYW5kIGFkZCB0aGUgc2FtZSBhbW91bnQg
dG8gdGhlIGNvdW50ZXIgb2YgYWxsb2NhdGVkCisgKiBibG9ja3MuCisgKgorICogQGhpbnQgLS0g
YSByZWlzZXI0IGJsb2NrbnIgaGludCBvYmplY3Qgd2hpY2ggY29udGFpbnMgZnVydGhlciBibG9j
aworICogICAgICAgICAgYWxsb2NhdGlvbiBoaW50cyBhbmQgcGFyYW1ldGVycyAoc2VhcmNoIHN0
YXJ0LCBhIHN0YWdlIG9mIGJsb2NrCisgKiAgICAgICAgICB3aGljaCB3aWxsIGJlIG1hcHBlZCB0
byBkaXNrLCBldGMuKSwKKyAqIEBibGsgIC0tIGFuIG91dCBwYXJhbWV0ZXIgZm9yIHRoZSBiZWdp
bm5pbmcgb2YgdGhlIGFsbG9jYXRlZCByZWdpb24sCisgKiBAbGVuICAtLSBpbi9vdXQgcGFyYW1l
dGVyLCBpdCBzaG91bGQgY29udGFpbiB0aGUgbWF4aW11bSBudW1iZXIgb2YgYWxsb2NhdGVkCisg
KiAgICAgICAgICBibG9ja3MsIGFmdGVyIGJsb2NrIGFsbG9jYXRpb24gY29tcGxldGVzLCBpdCBj
b250YWlucyB0aGUgbGVuZ3RoIG9mCisgKiAgICAgICAgICBhbGxvY2F0ZWQgZGlzayByZWdpb24u
CisgKiBAZmxhZ3MgLS0gc2VlIHJlaXNlcjRfYmFfZmxhZ3NfdCBkZXNjcmlwdGlvbi4KKyAqCisg
KiBAcmV0dXJuIC0tIDAgaWYgc3VjY2VzcywgZXJyb3IgY29kZSBvdGhlcndpc2UuCisgKi8KK2lu
dAorcmVpc2VyNF9hbGxvY19ibG9ja3MocmVpc2VyNF9ibG9ja25yX2hpbnQgKiBoaW50LCByZWlz
ZXI0X2Jsb2NrX25yICogYmxrLAorCQkgICAgIHJlaXNlcjRfYmxvY2tfbnIgKiBsZW4sIHJlaXNl
cjRfYmFfZmxhZ3NfdCBmbGFncykKK3sKKwlfX3U2NCBuZWVkZWQgPSAqbGVuOworCXJlaXNlcjRf
Y29udGV4dCAqY3R4OworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisJaW50IHJl
dDsKKworCWFzc2VydCgiemFtLTk4NiIsIGhpbnQgIT0gTlVMTCk7CisKKwljdHggPSBnZXRfY3Vy
cmVudF9jb250ZXh0KCk7CisJc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY3R4LT5zdXBlcik7
CisKKwkvKiBGb3Igd3JpdGUtb3B0aW1pemVkIGRhdGEgd2UgdXNlIGRlZmF1bHQgc2VhcmNoIHN0
YXJ0IHZhbHVlLCB3aGljaCBpcworCSAqIGNsb3NlIHRvIGxhc3Qgd3JpdGUgbG9jYXRpb24uICov
CisJaWYgKGZsYWdzICYgQkFfVVNFX0RFRkFVTFRfU0VBUkNIX1NUQVJUKQorCQlnZXRfYmxvY2tu
cl9oaW50X2RlZmF1bHQoJmhpbnQtPmJsayk7CisKKwkvKiBWSVRBTFk6IGFsbG9jYXRvciBzaG91
bGQgZ3JhYiB0aGlzIGZvciBpbnRlcm5hbC90eC1saXN0cy9zaW1pbGFyCisJICAgb25seS4gKi8K
Ky8qIFZTLUZJWE1FLUhBTlM6IHdoeSBpcyB0aGlzIGNvbW1lbnQgYWJvdmUgYWRkcmVzc2VkIHRv
IHZpdGFseSAoZnJvbSB2aXRhbHkpPyovCisJaWYgKGhpbnQtPmJsb2NrX3N0YWdlID09IEJMT0NL
X05PVF9DT1VOVEVEKSB7CisJCXJldCA9IHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZSgqbGVuLCBm
bGFncyk7CisJCWlmIChyZXQgIT0gMCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJcmV0ID0KKwkg
ICAgc2FfYWxsb2NfYmxvY2tzKHJlaXNlcjRfZ2V0X3NwYWNlX2FsbG9jYXRvcihjdHgtPnN1cGVy
KSwKKwkJCSAgICBoaW50LCAoaW50KW5lZWRlZCwgYmxrLCBsZW4pOworCisJaWYgKCFyZXQpIHsK
KwkJYXNzZXJ0KCJ6YW0tNjgwIiwgKmJsayA8IHJlaXNlcjRfYmxvY2tfY291bnQoY3R4LT5zdXBl
cikpOworCQlhc3NlcnQoInphbS02ODEiLAorCQkgICAgICAgKmJsayArICpsZW4gPD0gcmVpc2Vy
NF9ibG9ja19jb3VudChjdHgtPnN1cGVyKSk7CisKKwkJaWYgKGZsYWdzICYgQkFfUEVSTUFORU5U
KSB7CisJCQkvKiB3ZSBhc3N1bWUgdGhhdCBjdXJyZW50IGF0b20gZXhpc3RzIGF0IHRoaXMgbW9t
ZW50ICovCisJCQl0eG5fYXRvbSAqYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkKCk7CisJ
CQlhdG9tLT5ucl9ibG9ja3NfYWxsb2NhdGVkICs9ICpsZW47CisJCQlzcGluX3VubG9ja19hdG9t
KGF0b20pOworCQl9CisKKwkJc3dpdGNoIChoaW50LT5ibG9ja19zdGFnZSkgeworCQljYXNlIEJM
T0NLX05PVF9DT1VOVEVEOgorCQljYXNlIEJMT0NLX0dSQUJCRUQ6CisJCQlncmFiYmVkMnVzZWQo
Y3R4LCBzYmluZm8sICpsZW4pOworCQkJYnJlYWs7CisJCWNhc2UgQkxPQ0tfVU5BTExPQ0FURUQ6
CisJCQlmYWtlX2FsbG9jYXRlZDJ1c2VkKHNiaW5mbywgKmxlbiwgZmxhZ3MpOworCQkJYnJlYWs7
CisJCWNhc2UgQkxPQ0tfRkxVU0hfUkVTRVJWRUQ6CisJCQl7CisJCQkJdHhuX2F0b20gKmF0b20g
PSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCQkJCWZsdXNoX3Jlc2VydmVkMnVzZWQoYXRv
bSwgKmxlbik7CisJCQkJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwkJCX0KKwkJCWJyZWFrOwor
CQlkZWZhdWx0OgorCQkJaW1wb3NzaWJsZSgiemFtLTUzMSIsICJ3cm9uZyBibG9jayBzdGFnZSIp
OworCQl9CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ6YW0tODIxIiwKKwkJICAgICAgIGVyZ28oaGlu
dC0+bWF4X2Rpc3QgPT0gMAorCQkJICAgICYmICFoaW50LT5iYWNrd2FyZCwgcmV0ICE9IC1FTk9T
UEMpKTsKKwkJaWYgKGhpbnQtPmJsb2NrX3N0YWdlID09IEJMT0NLX05PVF9DT1VOVEVEKQorCQkJ
Z3JhYmJlZDJmcmVlKGN0eCwgc2JpbmZvLCBuZWVkZWQpOworCX0KKworCXJldHVybiByZXQ7Cit9
CisKKy8qKgorICogYXNrIGJsb2NrIGFsbG9jYXRvciBmb3Igc29tZSB1bmZvcm1hdHRlZCBibG9j
a3MKKyAqLwordm9pZCBhbGxvY2F0ZV9ibG9ja3NfdW5mb3JtYXR0ZWQocmVpc2VyNF9ibG9ja25y
X2hpbnQgKnByZWNlZGVyLAorCQkJCSByZWlzZXI0X2Jsb2NrX25yIHdhbnRlZF9jb3VudCwKKwkJ
CQkgcmVpc2VyNF9ibG9ja19uciAqZmlyc3RfYWxsb2NhdGVkLAorCQkJCSByZWlzZXI0X2Jsb2Nr
X25yICphbGxvY2F0ZWQsCisJCQkJIGJsb2NrX3N0YWdlX3QgYmxvY2tfc3RhZ2UpCit7CisJKmFs
bG9jYXRlZCA9IHdhbnRlZF9jb3VudDsKKwlwcmVjZWRlci0+bWF4X2Rpc3QgPSAwOwkvKiBzY2Fu
IHdob2xlIGRpc2ssIGlmIG5lZWRlZCAqLworCisJLyogdGhhdCBudW1iZXIgb2YgYmxvY2tzICh3
YW50ZWRfY291bnQpIGlzIGVpdGhlciBpbiBVTkFMTE9DQVRFRCBvciBpbiBHUkFCQkVEICovCisJ
cHJlY2VkZXItPmJsb2NrX3N0YWdlID0gYmxvY2tfc3RhZ2U7CisKKwkvKiBGSVhNRTogd2UgZG8g
bm90IGhhbmRsZSBlcnJvcnMgaGVyZSBub3cgKi8KKwljaGVja19tZSgidnMtNDIwIiwKKwkJIHJl
aXNlcjRfYWxsb2NfYmxvY2tzKHByZWNlZGVyLCBmaXJzdF9hbGxvY2F0ZWQsIGFsbG9jYXRlZCwK
KwkJCQkgICAgICBCQV9QRVJNQU5FTlQpID09IDApOworCS8qIHVwZGF0ZSBmbHVzaF9wb3MncyBw
cmVjZWRlciB0byBsYXN0IGFsbG9jYXRlZCBibG9jayBudW1iZXIgKi8KKwlwcmVjZWRlci0+Ymxr
ID0gKmZpcnN0X2FsbG9jYXRlZCArICphbGxvY2F0ZWQgLSAxOworfQorCisvKiB1c2VkIC0+IGZh
a2VfYWxsb2NhdGVkIC0+IGdyYWJiZWQgLT4gZnJlZSAqLworCisvKiBhZGp1c3Qgc2IgYmxvY2sg
Y291bnRlcnMgd2hlbiBAY291bnQgdW5hbGxvY2F0ZWQgYmxvY2tzIGdldCB1bm1hcHBlZCBmcm9t
CisgICBkaXNrICovCitzdGF0aWMgdm9pZAordXNlZDJmYWtlX2FsbG9jYXRlZChyZWlzZXI0X3N1
cGVyX2luZm9fZGF0YSAqIHNiaW5mbywgX191NjQgY291bnQsCisJCSAgICBpbnQgZm9ybWF0dGVk
KQoreworCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisKKwlpZiAoZm9ybWF0dGVk
KQorCQlzYmluZm8tPmJsb2Nrc19mYWtlX2FsbG9jYXRlZCArPSBjb3VudDsKKwllbHNlCisJCXNi
aW5mby0+YmxvY2tzX2Zha2VfYWxsb2NhdGVkX3VuZm9ybWF0dGVkICs9IGNvdW50OworCisJc3Vi
X2Zyb21fc2JfdXNlZChzYmluZm8sIGNvdW50KTsKKworCWFzc2VydCgibmlraXRhLTI2ODEiLAor
CSAgICAgICByZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKHJlaXNlcjRfZ2V0X2N1cnJlbnRf
c2IoKSkpOworCisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworfQorCitzdGF0
aWMgdm9pZAordXNlZDJmbHVzaF9yZXNlcnZlZChyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqIHNi
aW5mbywgdHhuX2F0b20gKiBhdG9tLAorCQkgICAgX191NjQgY291bnQsIHJlaXNlcjRfYmFfZmxh
Z3NfdCBmbGFncyBVTlVTRURfQVJHKQoreworCWFzc2VydCgibmlraXRhLTI3OTEiLCBhdG9tICE9
IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisKKwlhZGRfdG9f
YXRvbV9mbHVzaF9yZXNlcnZlZF9ub2xvY2soYXRvbSwgKF9fdTMyKSBjb3VudCk7CisKKwlzcGlu
X2xvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCisJc2JpbmZvLT5ibG9ja3NfZmx1c2hfcmVz
ZXJ2ZWQgKz0gY291bnQ7CisJLyphZGRfdG9fc2JfZmx1c2hfcmVzZXJ2ZWQoc2JpbmZvLCBjb3Vu
dCk7ICovCisJc3ViX2Zyb21fc2JfdXNlZChzYmluZm8sIGNvdW50KTsKKworCWFzc2VydCgibmlr
aXRhLTI2ODEiLAorCSAgICAgICByZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKHJlaXNlcjRf
Z2V0X2N1cnJlbnRfc2IoKSkpOworCisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8p
OworfQorCisvKiBkaXNrIHNwYWNlLCB2aXJ0dWFsbHkgdXNlZCBieSBmYWtlIGJsb2NrIG51bWJl
cnMgaXMgY291bnRlZCBhcyAiZ3JhYmJlZCIKKyAgIGFnYWluLiAqLworc3RhdGljIHZvaWQKK2Zh
a2VfYWxsb2NhdGVkMmdyYWJiZWQocmVpc2VyNF9jb250ZXh0ICogY3R4LCByZWlzZXI0X3N1cGVy
X2luZm9fZGF0YSAqIHNiaW5mbywKKwkJICAgICAgIF9fdTY0IGNvdW50LCByZWlzZXI0X2JhX2Zs
YWdzX3QgZmxhZ3MpCit7CisJYWRkX3RvX2N0eF9ncmFiYmVkKGN0eCwgY291bnQpOworCisJc3Bp
bl9sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKworCWFzc2VydCgibmlraXRhLTI2ODIiLCBy
ZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKGN0eC0+c3VwZXIpKTsKKworCXNiaW5mby0+Ymxv
Y2tzX2dyYWJiZWQgKz0gY291bnQ7CisJc3ViX2Zyb21fc2JfZmFrZV9hbGxvY2F0ZWQoc2JpbmZv
LCBjb3VudCwgZmxhZ3MgJiBCQV9GT1JNQVRURUQpOworCisJYXNzZXJ0KCJuaWtpdGEtMjY4MyIs
IHJlaXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMoY3R4LT5zdXBlcikpOworCisJc3Bpbl91bmxv
Y2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworfQorCit2b2lkIGZha2VfYWxsb2NhdGVkMmZyZWUo
X191NjQgY291bnQsIHJlaXNlcjRfYmFfZmxhZ3NfdCBmbGFncykKK3sKKwlyZWlzZXI0X2NvbnRl
eHQgKmN0eDsKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJY3R4ID0gZ2V0
X2N1cnJlbnRfY29udGV4dCgpOworCXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKGN0eC0+c3Vw
ZXIpOworCisJZmFrZV9hbGxvY2F0ZWQyZ3JhYmJlZChjdHgsIHNiaW5mbywgY291bnQsIGZsYWdz
KTsKKwlncmFiYmVkMmZyZWUoY3R4LCBzYmluZm8sIGNvdW50KTsKK30KKwordm9pZCBncmFiYmVk
MmZyZWVfbWFyayhfX3U2NCBtYXJrKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwljdHggPSBnZXRfY3VycmVudF9jb250ZXh0
KCk7CisJc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY3R4LT5zdXBlcik7CisKKwlhc3NlcnQo
Im5pa2l0YS0zMDA3IiwgKF9fczY0KSBtYXJrID49IDApOworCWFzc2VydCgibmlraXRhLTMwMDYi
LCBjdHgtPmdyYWJiZWRfYmxvY2tzID49IG1hcmspOworCWdyYWJiZWQyZnJlZShjdHgsIHNiaW5m
bywgY3R4LT5ncmFiYmVkX2Jsb2NrcyAtIG1hcmspOworfQorCisvKioKKyAqIGdyYWJiZWQyZnJl
ZSAtIGFkanVzdCBncmFiYmVkIGFuZCBmcmVlIGJsb2NrIGNvdW50ZXJzCisgKiBAY3R4OiBjb250
ZXh0IHRvIHVwZGF0ZSBncmFiYmVkIGJsb2NrIGNvdW50ZXIgb2YKKyAqIEBzYmluZm86IHN1cGVy
IGJsb2NrIHRvIHVwZGF0ZSBncmFiYmVkIGFuZCBmcmVlIGJsb2NrIGNvdW50ZXJzIG9mCisgKiBA
Y291bnQ6IG51bWJlciBvZiBibG9ja3MgdG8gYWRqdXN0IGNvdW50ZXJzIGJ5CisgKgorICogRGVj
cmVhc2VzIGNvbnRleHQncyBhbmQgcGVyIGZpbGVzeXN0ZW0ncyBjb3VudGVycyBvZiBncmFiYmVk
CisgKiBibG9ja3MuIEluY3JlYXNlcyBwZXIgZmlsZXN5c3RlbSdzIGNvdW50ZXIgb2YgZnJlZSBi
bG9ja3MuCisgKi8KK3ZvaWQgZ3JhYmJlZDJmcmVlKHJlaXNlcjRfY29udGV4dCAqY3R4LCByZWlz
ZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvLAorCQkgIF9fdTY0IGNvdW50KQoreworCXN1Yl9m
cm9tX2N0eF9ncmFiYmVkKGN0eCwgY291bnQpOworCisJc3Bpbl9sb2NrX3JlaXNlcjRfc3VwZXIo
c2JpbmZvKTsKKworCXN1Yl9mcm9tX3NiX2dyYWJiZWQoc2JpbmZvLCBjb3VudCk7CisJc2JpbmZv
LT5ibG9ja3NfZnJlZSArPSBjb3VudDsKKwlhc3NlcnQoIm5pa2l0YS0yNjg0IiwgcmVpc2VyNF9j
aGVja19ibG9ja19jb3VudGVycyhjdHgtPnN1cGVyKSk7CisKKwlzcGluX3VubG9ja19yZWlzZXI0
X3N1cGVyKHNiaW5mbyk7Cit9CisKK3ZvaWQgZ3JhYmJlZDJmbHVzaF9yZXNlcnZlZF9ub2xvY2so
dHhuX2F0b20gKiBhdG9tLCBfX3U2NCBjb3VudCkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsK
KwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJYXNzZXJ0KCJ2cy0xMDk1Iiwg
YXRvbSk7CisKKwljdHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisJc2JpbmZvID0gZ2V0X3N1
cGVyX3ByaXZhdGUoY3R4LT5zdXBlcik7CisKKwlzdWJfZnJvbV9jdHhfZ3JhYmJlZChjdHgsIGNv
dW50KTsKKworCWFkZF90b19hdG9tX2ZsdXNoX3Jlc2VydmVkX25vbG9jayhhdG9tLCBjb3VudCk7
CisKKwlzcGluX2xvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCisJc2JpbmZvLT5ibG9ja3Nf
Zmx1c2hfcmVzZXJ2ZWQgKz0gY291bnQ7CisJc3ViX2Zyb21fc2JfZ3JhYmJlZChzYmluZm8sIGNv
dW50KTsKKworCWFzc2VydCgidnBmLTI5MiIsIHJlaXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMo
Y3R4LT5zdXBlcikpOworCisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworfQor
Cit2b2lkIGdyYWJiZWQyZmx1c2hfcmVzZXJ2ZWQoX191NjQgY291bnQpCit7CisJdHhuX2F0b20g
KmF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCisJZ3JhYmJlZDJmbHVzaF9yZXNl
cnZlZF9ub2xvY2soYXRvbSwgY291bnQpOworCisJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKK30K
Kwordm9pZCBmbHVzaF9yZXNlcnZlZDJncmFiYmVkKHR4bl9hdG9tICogYXRvbSwgX191NjQgY291
bnQpCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEg
KnNiaW5mbzsKKworCWFzc2VydCgibmlraXRhLTI3ODgiLCBhdG9tICE9IE5VTEwpOworCWFzc2Vy
dF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisKKwljdHggPSBnZXRfY3VycmVudF9jb250
ZXh0KCk7CisJc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY3R4LT5zdXBlcik7CisKKwlhZGRf
dG9fY3R4X2dyYWJiZWQoY3R4LCBjb3VudCk7CisKKwlzdWJfZnJvbV9hdG9tX2ZsdXNoX3Jlc2Vy
dmVkX25vbG9jayhhdG9tLCAoX191MzIpIGNvdW50KTsKKworCXNwaW5fbG9ja19yZWlzZXI0X3N1
cGVyKHNiaW5mbyk7CisKKwlzYmluZm8tPmJsb2Nrc19ncmFiYmVkICs9IGNvdW50OworCXN1Yl9m
cm9tX3NiX2ZsdXNoX3Jlc2VydmVkKHNiaW5mbywgY291bnQpOworCisJYXNzZXJ0KCJ2cGYtMjky
IiwgcmVpc2VyNF9jaGVja19ibG9ja19jb3VudGVycyhjdHgtPnN1cGVyKSk7CisKKwlzcGluX3Vu
bG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7Cit9CisKKy8qKgorICogYWxsX2dyYWJiZWQyZnJl
ZSAtIHJlbGVhc2VzIGFsbCBibG9ja3MgZ3JhYmJlZCBpbiBjb250ZXh0CisgKgorICogRGVjcmVh
c2VzIGNvbnRleHQncyBhbmQgc3VwZXIgYmxvY2sncyBncmFiYmVkIGJsb2NrIGNvdW50ZXJzIGJ5
IG51bWJlciBvZgorICogYmxvY2tzIGdyYWJiZWQgYnkgY3VycmVudCBjb250ZXh0IGFuZCBpbmNy
ZWFzZXMgc3VwZXIgYmxvY2sncyBmcmVlIGJsb2NrCisgKiBjb3VudGVyIGNvcnJlc3BvbmRpbmds
eS4KKyAqLwordm9pZCBhbGxfZ3JhYmJlZDJmcmVlKHZvaWQpCit7CisJcmVpc2VyNF9jb250ZXh0
ICpjdHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisKKwlncmFiYmVkMmZyZWUoY3R4LCBnZXRf
c3VwZXJfcHJpdmF0ZShjdHgtPnN1cGVyKSwgY3R4LT5ncmFiYmVkX2Jsb2Nrcyk7Cit9CisKKy8q
IGFkanVzdCBzYiBibG9jayBjb3VudGVycyBpZiByZWFsIChvbi1kaXNrKSBibG9ja3MgZG8gbm90
IGJlY29tZSB1bmFsbG9jYXRlZAorICAgYWZ0ZXIgZnJlZWluZywgQGNvdW50IGJsb2NrcyBiZWNv
bWUgImdyYWJiZWQiLiAqLworc3RhdGljIHZvaWQKK3VzZWQyZ3JhYmJlZChyZWlzZXI0X2NvbnRl
eHQgKiBjdHgsIHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICogc2JpbmZvLAorCSAgICAgX191NjQg
Y291bnQpCit7CisJYWRkX3RvX2N0eF9ncmFiYmVkKGN0eCwgY291bnQpOworCisJc3Bpbl9sb2Nr
X3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKworCXNiaW5mby0+YmxvY2tzX2dyYWJiZWQgKz0gY291
bnQ7CisJc3ViX2Zyb21fc2JfdXNlZChzYmluZm8sIGNvdW50KTsKKworCWFzc2VydCgibmlraXRh
LTI2ODUiLCByZWlzZXI0X2NoZWNrX2Jsb2NrX2NvdW50ZXJzKGN0eC0+c3VwZXIpKTsKKworCXNw
aW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKK30KKworLyogdGhpcyB1c2VkIHRvIGJl
IGRvbmUgdGhyb3VnaCB1c2VkMmdyYWJiZWQgYW5kIGdyYWJiZWQyZnJlZSovCitzdGF0aWMgdm9p
ZCB1c2VkMmZyZWUocmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKiBzYmluZm8sIF9fdTY0IGNvdW50
KQoreworCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisKKwlzYmluZm8tPmJsb2Nr
c19mcmVlICs9IGNvdW50OworCXN1Yl9mcm9tX3NiX3VzZWQoc2JpbmZvLCBjb3VudCk7CisKKwlh
c3NlcnQoIm5pa2l0YS0yNjg1IiwKKwkgICAgICAgcmVpc2VyNF9jaGVja19ibG9ja19jb3VudGVy
cyhyZWlzZXI0X2dldF9jdXJyZW50X3NiKCkpKTsKKworCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3Vw
ZXIoc2JpbmZvKTsKK30KKworLyogY2hlY2sgImFsbG9jYXRlZCIgc3RhdGUgb2YgZ2l2ZW4gYmxv
Y2sgcmFuZ2UgKi8KK2ludAorcmVpc2VyNF9jaGVja19ibG9ja3MoY29uc3QgcmVpc2VyNF9ibG9j
a19uciAqIHN0YXJ0LAorCQkgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBsZW4sIGludCBk
ZXNpcmVkKQoreworCXJldHVybiBzYV9jaGVja19ibG9ja3Moc3RhcnQsIGxlbiwgZGVzaXJlZCk7
Cit9CisKKy8qIEJsb2NrcyBkZWFsbG9jYXRpb24gZnVuY3Rpb24gbWF5IGRvIGFuIGFjdHVhbCBk
ZWFsbG9jYXRpb24gdGhyb3VnaCBzcGFjZQorICAgcGx1Z2luIGFsbG9jYXRpb24gb3Igc3RvcmUg
ZGVsZXRlZCBibG9jayBudW1iZXJzIGluIGF0b20ncyBkZWxldGVfc2V0IGRhdGEKKyAgIHN0cnVj
dHVyZSBkZXBlbmQgb24gQGRlZmVyIHBhcmFtZXRlci4gKi8KKworLyogaWYgQkFfREVGRVIgYml0
IGlzIG5vdCB0dXJuZWQgb24sIEB0YXJnZXRfc3RhZ2UgbWVhbnMgdGhlIHN0YWdlIG9mIGJsb2Nr
cworICAgd2hpY2ggd2lsbCBiZSBkZWxldGVkIGZyb20gV09SS0lORyBiaXRtYXAuIFRoZXkgbWln
aHQgYmUganVzdCB1bm1hcHBlZCBmcm9tCisgICBkaXNrLCBvciBmcmVlZCBidXQgZGlzayBzcGFj
ZSBpcyBzdGlsbCBncmFiYmVkIGJ5IGN1cnJlbnQgdGhyZWFkLCBvciB0aGVzZQorICAgYmxvY2tz
IG11c3Qgbm90IGJlIGNvdW50ZWQgaW4gYW55IHJlaXNlcjQgc2IgYmxvY2sgY291bnRlcnMsCisg
ICBzZWUgYmxvY2tfc3RhZ2VfdCBjb21tZW50ICovCisKKy8qIEJBX0ZPUk1BVFRFRCBiaXQgaXMg
b25seSB1c2VkIHdoZW4gQkFfREVGRVIgaW4gbm90IHByZXNlbnQ6IGl0IGlzIHVzZWQgdG8KKyAg
IGRpc3Rpbmd1aXNoIGJsb2NrcyBhbGxvY2F0ZWQgZm9yIHVuZm9ybWF0dGVkIGFuZCBmb3JtYXR0
ZWQgbm9kZXMgKi8KKworaW50CityZWlzZXI0X2RlYWxsb2NfYmxvY2tzKGNvbnN0IHJlaXNlcjRf
YmxvY2tfbnIgKiBzdGFydCwKKwkJICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBsZW4s
CisJCSAgICAgICBibG9ja19zdGFnZV90IHRhcmdldF9zdGFnZSwgcmVpc2VyNF9iYV9mbGFnc190
IGZsYWdzKQoreworCXR4bl9hdG9tICphdG9tID0gTlVMTDsKKwlpbnQgcmV0OworCXJlaXNlcjRf
Y29udGV4dCAqY3R4OworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisJdm9pZCAq
bmV3X2VudHJ5ID0gTlVMTDsKKworCWN0eCA9IGdldF9jdXJyZW50X2NvbnRleHQoKTsKKwlzYmlu
Zm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShjdHgtPnN1cGVyKTsKKworCWlmIChSRUlTRVI0X0RFQlVH
KSB7CisJCWFzc2VydCgiemFtLTQzMSIsICpsZW4gIT0gMCk7CisJCWFzc2VydCgiemFtLTQzMiIs
ICpzdGFydCAhPSAwKTsKKwkJYXNzZXJ0KCJ6YW0tNTU4IiwgIXJlaXNlcjRfYmxvY2tucl9pc19m
YWtlKHN0YXJ0KSk7CisKKwkJc3Bpbl9sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwkJYXNz
ZXJ0KCJ6YW0tNTYyIiwgKnN0YXJ0IDwgc2JpbmZvLT5ibG9ja19jb3VudCk7CisJCXNwaW5fdW5s
b2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwl9CisKKwlpZiAoZmxhZ3MgJiBCQV9ERUZFUikg
eworCQkvKgorCQkgKiBUaGVzZSBibG9ja3Mgd2lsbCBiZSBsYXRlciBkZWFsbG9jYXRlZCBieSBh
cHBseV9kc2V0KCkuCisJCSAqIEl0IGlzIGVxdWl2YWxlbnQgdG8gYSBub24tZGVmZXJyZWQgZGVh
bGxvY2F0aW9uIHdpdGggdGFyZ2V0CisJCSAqIHN0YWdlIEJMT0NLX05PVF9DT1VOVEVELgorCQkg
Ki8KKworCQkvKiBzdG9yZSBkZWxldGVkIGJsb2NrIG51bWJlcnMgaW4gdGhlIGF0b20ncyBkZWZl
cnJlZCBkZWxldGUgc2V0CisJCSAgIGZvciBmdXJ0aGVyIGFjdHVhbCBkZWxldGlvbiAqLworCQlk
byB7CisJCQlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwkJCWFzc2VydCgiemFt
LTQzMCIsIGF0b20gIT0gTlVMTCk7CisKKwkJCXJldCA9IGF0b21fZHNldF9kZWZlcnJlZF9hZGRf
ZXh0ZW50KGF0b20sICZuZXdfZW50cnksIHN0YXJ0LCBsZW4pOworCisJCQlpZiAocmV0ID09IC1F
Tk9NRU0pCisJCQkJcmV0dXJuIHJldDsKKworCQkJLyogVGhpcyBsb29wIG1pZ2h0IHNwaW4gYXQg
bW9zdCB0d28gdGltZXMgKi8KKwkJfSB3aGlsZSAocmV0ID09IC1FX1JFUEVBVCk7CisKKwkJYXNz
ZXJ0KCJ6YW0tNDc3IiwgcmV0ID09IDApOworCQlhc3NlcnQoInphbS00MzMiLCBhdG9tICE9IE5V
TEwpOworCisJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisKKwl9IGVsc2UgeworCQlhc3NlcnQo
InphbS00MjUiLCBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCkgIT0gTlVMTCk7CisJCXNhX2Rl
YWxsb2NfYmxvY2tzKHJlaXNlcjRfZ2V0X3NwYWNlX2FsbG9jYXRvcihjdHgtPnN1cGVyKSwKKwkJ
CQkgICpzdGFydCwgKmxlbik7CisKKwkJaWYgKGZsYWdzICYgQkFfUEVSTUFORU5UKSB7CisJCQkv
KiBUaGVzZSBibG9ja3Mgd2VyZSBjb3VudGVkIGFzIGFsbG9jYXRlZCwgd2UgaGF2ZSB0bworCQkJ
ICogcmV2ZXJ0IGl0IGJhY2sgaWYgYWxsb2NhdGlvbiBpcyBkaXNjYXJkZWQuICovCisJCQl0eG5f
YXRvbSAqYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkKCk7CisJCQlhdG9tLT5ucl9ibG9j
a3NfYWxsb2NhdGVkIC09ICpsZW47CisJCQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQl9CisK
KwkJc3dpdGNoICh0YXJnZXRfc3RhZ2UpIHsKKwkJY2FzZSBCTE9DS19OT1RfQ09VTlRFRDoKKwkJ
CWFzc2VydCgidnMtOTYwIiwgZmxhZ3MgJiBCQV9GT1JNQVRURUQpOworCQkJLyogVklUQUxZOiBU
aGlzIGlzIHdoYXQgd2FzIGdyYWJiZWQgZm9yCisJCQkgICBpbnRlcm5hbC90eC1saXN0cy9zaW1p
bGFyIG9ubHkgKi8KKwkJCXVzZWQyZnJlZShzYmluZm8sICpsZW4pOworCQkJYnJlYWs7CisKKwkJ
Y2FzZSBCTE9DS19HUkFCQkVEOgorCQkJdXNlZDJncmFiYmVkKGN0eCwgc2JpbmZvLCAqbGVuKTsK
KwkJCWJyZWFrOworCisJCWNhc2UgQkxPQ0tfVU5BTExPQ0FURUQ6CisJCQl1c2VkMmZha2VfYWxs
b2NhdGVkKHNiaW5mbywgKmxlbiwgZmxhZ3MgJiBCQV9GT1JNQVRURUQpOworCQkJYnJlYWs7CisK
KwkJY2FzZSBCTE9DS19GTFVTSF9SRVNFUlZFRDp7CisJCQkJdHhuX2F0b20gKmF0b207CisKKwkJ
CQlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwkJCQl1c2VkMmZsdXNoX3Jlc2Vy
dmVkKHNiaW5mbywgYXRvbSwgKmxlbiwKKwkJCQkJCSAgICBmbGFncyAmIEJBX0ZPUk1BVFRFRCk7
CisJCQkJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwkJCQlicmVhazsKKwkJCX0KKwkJZGVmYXVs
dDoKKwkJCWltcG9zc2libGUoInphbS01MzIiLCAid3JvbmcgYmxvY2sgc3RhZ2UiKTsKKwkJfQor
CX0KKworCXJldHVybiAwOworfQorCisvKiB3cmFwcGVycyBmb3IgYmxvY2sgYWxsb2NhdG9yIHBs
dWdpbiBtZXRob2RzICovCitpbnQgcmVpc2VyNF9wcmVfY29tbWl0X2hvb2sodm9pZCkKK3sKKwlh
c3NlcnQoInphbS01MDIiLCBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCkgIT0gTlVMTCk7CisJ
c2FfcHJlX2NvbW1pdF9ob29rKCk7CisJcmV0dXJuIDA7Cit9CisKKy8qIGFuIGFjdG9yIHdoaWNo
IGFwcGxpZXMgZGVsZXRlIHNldCB0byBibG9jayBhbGxvY2F0b3IgZGF0YSAqLworc3RhdGljIGlu
dAorYXBwbHlfZHNldCh0eG5fYXRvbSAqIGF0b20gVU5VU0VEX0FSRywgY29uc3QgcmVpc2VyNF9i
bG9ja19uciAqIGEsCisJICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGIsIHZvaWQgKmRhdGEg
VU5VU0VEX0FSRykKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlyZWlzZXI0X3N1cGVyX2lu
Zm9fZGF0YSAqc2JpbmZvOworCisJX191NjQgbGVuID0gMTsKKworCWN0eCA9IGdldF9jdXJyZW50
X2NvbnRleHQoKTsKKwlzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShjdHgtPnN1cGVyKTsKKwor
CWFzc2VydCgiemFtLTg3NyIsIGF0b20tPnN0YWdlID49IEFTVEFHRV9QUkVfQ09NTUlUKTsKKwlh
c3NlcnQoInphbS01NTIiLCBzYmluZm8gIT0gTlVMTCk7CisKKwlpZiAoYiAhPSBOVUxMKQorCQls
ZW4gPSAqYjsKKworCWlmIChSRUlTRVI0X0RFQlVHKSB7CisJCXNwaW5fbG9ja19yZWlzZXI0X3N1
cGVyKHNiaW5mbyk7CisKKwkJYXNzZXJ0KCJ6YW0tNTU0IiwgKmEgPCByZWlzZXI0X2Jsb2NrX2Nv
dW50KGN0eC0+c3VwZXIpKTsKKwkJYXNzZXJ0KCJ6YW0tNTU1IiwgKmEgKyBsZW4gPD0gcmVpc2Vy
NF9ibG9ja19jb3VudChjdHgtPnN1cGVyKSk7CisKKwkJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBl
cihzYmluZm8pOworCX0KKworCXNhX2RlYWxsb2NfYmxvY2tzKCZzYmluZm8tPnNwYWNlX2FsbG9j
YXRvciwgKmEsIGxlbik7CisJLyogYWRqdXN0IHNiIGJsb2NrIGNvdW50ZXJzICovCisJdXNlZDJm
cmVlKHNiaW5mbywgbGVuKTsKKwlyZXR1cm4gMDsKK30KKwordm9pZCByZWlzZXI0X3Bvc3RfY29t
bWl0X2hvb2sodm9pZCkKK3sKKyNpZmRlZiBSRUlTRVI0X0RFQlVHCisJdHhuX2F0b20gKmF0b207
CisKKwlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwlhc3NlcnQoInphbS00NTIi
LCBhdG9tLT5zdGFnZSA9PSBBU1RBR0VfUE9TVF9DT01NSVQpOworCXNwaW5fdW5sb2NrX2F0b20o
YXRvbSk7CisjZW5kaWYKKworCWFzc2VydCgiemFtLTUwNCIsIGdldF9jdXJyZW50X3N1cGVyX3By
aXZhdGUoKSAhPSBOVUxMKTsKKwlzYV9wb3N0X2NvbW1pdF9ob29rKCk7Cit9CisKK3ZvaWQgcmVp
c2VyNF9wb3N0X3dyaXRlX2JhY2tfaG9vayh2b2lkKQoreworCXN0cnVjdCBsaXN0X2hlYWQgZGlz
Y2FyZGVkX3NldDsKKwl0eG5fYXRvbSAqYXRvbTsKKwlpbnQgcmV0OworCisJLyogcHJvY2VzcyBh
bmQgaXNzdWUgZGlzY2FyZCByZXF1ZXN0cyAqLworCWJsb2NrbnJfbGlzdF9pbml0ICgmZGlzY2Fy
ZGVkX3NldCk7CisJZG8geworCQlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwkJ
cmV0ID0gZGlzY2FyZF9hdG9tKGF0b20sICZkaXNjYXJkZWRfc2V0KTsKKwl9IHdoaWxlIChyZXQg
PT0gLUVfUkVQRUFUKTsKKworCWlmIChyZXQpIHsKKwkJd2FybmluZygiaW50ZWxmeC04IiwgImRp
c2NhcmQgYXRvbSBmYWlsZWQgKCVkKSIsIHJldCk7CisJfQorCisJYXRvbSA9IGdldF9jdXJyZW50
X2F0b21fbG9ja2VkKCk7CisJZGlzY2FyZF9hdG9tX3Bvc3QoYXRvbSwgJmRpc2NhcmRlZF9zZXQp
OworCisJLyogZG8gdGhlIGJsb2NrIGRlYWxsb2NhdGlvbiB3aGljaCB3YXMgZGVmZXJyZWQKKwkg
ICB1bnRpbCBjb21taXQgaXMgZG9uZSAqLworCWF0b21fZHNldF9kZWZlcnJlZF9hcHBseShhdG9t
LCBhcHBseV9kc2V0LCBOVUxMLCAxKTsKKworCWFzc2VydCgiemFtLTUwNCIsIGdldF9jdXJyZW50
X3N1cGVyX3ByaXZhdGUoKSAhPSBOVUxMKTsKKwlzYV9wb3N0X3dyaXRlX2JhY2tfaG9vaygpOwor
fQorCisvKgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksm
UiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0
aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyov
CmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
YmxvY2tfYWxsb2MuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9ibG9ja19hbGxvYy5oCi0tLSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Jsb2NrX2FsbG9jLmgJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Jsb2NrX2Fs
bG9jLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDIyMjIwOTEgKzAxMDAKQEAgLTAsMCArMSwxNzcg
QEAKKy8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292
ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2lmICFkZWZpbmVkKF9fRlNfUkVJU0VSNF9C
TE9DS19BTExPQ19IX18pCisjZGVmaW5lIF9fRlNfUkVJU0VSNF9CTE9DS19BTExPQ19IX18KKwor
I2luY2x1ZGUgImRmb3JtYXQuaCIKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisKKyNpbmNsdWRlIDxs
aW51eC90eXBlcy5oPgkvKiBmb3IgX191Pz8gICovCisjaW5jbHVkZSA8bGludXgvZnMuaD4KKwor
LyogTWFzayB3aGVuIGlzIGFwcGxpZWQgdG8gZ2l2ZW4gYmxvY2sgbnVtYmVyIHNob3dzIGlzIHRo
YXQgYmxvY2sgbnVtYmVyIGlzIGEKKyAgIGZha2Ugb25lICovCisjZGVmaW5lIFJFSVNFUjRfRkFL
RV9CTE9DS05SX0JJVF9NQVNLICAgMHg4MDAwMDAwMDAwMDAwMDAwVUxMCisvKiBNYXNrIHdoaWNo
IGlzb2xhdGVzIGEgdHlwZSBvZiBvYmplY3QgdGhpcyBmYWtlIGJsb2NrIG51bWJlciB3YXMgYXNz
aWduZWQKKyAgIHRvICovCisjZGVmaW5lIFJFSVNFUjRfQkxPQ0tOUl9TVEFUVVNfQklUX01BU0sg
MHhDMDAwMDAwMDAwMDAwMDAwVUxMCisKKy8qcmVzdWx0IGFmdGVyIGFwcGx5aW5nIHRoZSBSRUlT
RVI0X0JMT0NLTlJfU1RBVFVTX0JJVF9NQVNLIHNob3VsZCBiZSBjb21wYXJlZAorICAgYWdhaW5z
dCB0aGVzZSB0d28gdmFsdWVzIHRvIHVuZGVyc3RhbmQgaXMgdGhlIG9iamVjdCB1bmFsbG9jYXRl
ZCBvciBiaXRtYXAKKyAgIHNoYWRvdyBvYmplY3QgKFdPUktJTkcgQklUTUFQIGJsb2NrLCBsb29r
IGF0IHRoZSBwbHVnaW4vc3BhY2UvYml0bWFwLmMpICovCisjZGVmaW5lIFJFSVNFUjRfVU5BTExP
Q0FURURfU1RBVFVTX1ZBTFVFICAgIDB4QzAwMDAwMDAwMDAwMDAwMFVMTAorI2RlZmluZSBSRUlT
RVI0X0JJVE1BUF9CTE9DS1NfU1RBVFVTX1ZBTFVFICAweDgwMDAwMDAwMDAwMDAwMDBVTEwKKwor
Lyogc3BlY2lmaWNhdGlvbiBob3cgYmxvY2sgYWxsb2NhdGlvbiB3YXMgY291bnRlZCBpbiBzYiBi
bG9jayBjb3VudGVycyAqLwordHlwZWRlZiBlbnVtIHsKKwlCTE9DS19OT1RfQ09VTlRFRCA9IDAs
CS8qIHJlaXNlcjQgaGFzIG5vIGluZm8gYWJvdXQgdGhpcyBibG9jayB5ZXQgKi8KKwlCTE9DS19H
UkFCQkVEID0gMSwJLyogZnJlZSBzcGFjZSBncmFiYmVkIGZvciBmdXJ0aGVyIGFsbG9jYXRpb24K
KwkJCQkgICBvZiB0aGlzIGJsb2NrICovCisJQkxPQ0tfRkxVU0hfUkVTRVJWRUQgPSAyLAkvKiBi
bG9jayBpcyByZXNlcnZlZCBmb3IgZmx1c2ggbmVlZHMuICovCisJQkxPQ0tfVU5BTExPQ0FURUQg
PSAzLAkvKiBibG9jayBpcyB1c2VkIGZvciBleGlzdGluZyBpbi1tZW1vcnkgb2JqZWN0CisJCQkJ
ICAgKCB1bmFsbG9jYXRlZCBmb3JtYXR0ZWQgb3IgdW5mb3JtYXR0ZWQKKwkJCQkgICBub2RlKSAq
LworCUJMT0NLX0FMTE9DQVRFRCA9IDQJLyogYmxvY2sgaXMgbWFwcGVkIHRvIGRpc2ssIHJlYWwg
b24tZGlzayBibG9jaworCQkJCSAgIG51bWJlciBhc3NpZ25lZCAqLworfSBibG9ja19zdGFnZV90
OworCisvKiBhIGhpbnQgZm9yIGJsb2NrIGFsbG9jYXRvciAqLworc3RydWN0IHJlaXNlcjRfYmxv
Y2tucl9oaW50IHsKKwkvKiBGSVhNRTogSSB0aGluayB3ZSB3YW50IHRvIGFkZCBhIGxvbmd0ZXJt
IGxvY2sgb24gdGhlIGJpdG1hcCBibG9jaworCSAgIGhlcmUuIFRoaXMgaXMgdG8gcHJldmVudCBq
bm9kZV9mbHVzaCgpIGNhbGxzIGZyb20gaW50ZXJsZWF2aW5nCisJICAgYWxsb2NhdGlvbnMgb24g
dGhlIHNhbWUgYml0bWFwLCBvbmNlIGEgaGludCBpcyBlc3RhYmxpc2hlZC4gKi8KKworCS8qIHNl
YXJjaCBzdGFydCBoaW50ICovCisJcmVpc2VyNF9ibG9ja19uciBibGs7CisJLyogaWYgbm90IHpl
cm8sIGl0IGlzIGEgcmVnaW9uIHNpemUgd2Ugc2VhcmNoIGZvciBmcmVlIGJsb2NrcyBpbiAqLwor
CXJlaXNlcjRfYmxvY2tfbnIgbWF4X2Rpc3Q7CisJLyogbGV2ZWwgZm9yIGFsbG9jYXRpb24sIG1h
eSBiZSB1c2VmdWwgaGF2ZSBicmFuY2gtbGV2ZWwgYW5kIGhpZ2hlcgorCSAgIHdyaXRlLW9wdGlt
aXplZC4gKi8KKwl0cmVlX2xldmVsIGxldmVsOworCS8qIGJsb2NrIGFsbG9jYXRvciBhc3N1bWVz
IHRoYXQgYmxvY2tzLCB3aGljaCB3aWxsIGJlIG1hcHBlZCB0byBkaXNrLAorCSAgIGFyZSBpbiB0
aGlzIHNwZWNpZmllZCBibG9ja19zdGFnZSAqLworCWJsb2NrX3N0YWdlX3QgYmxvY2tfc3RhZ2U7
CisJLyogSWYgZGlyZWN0aW9uID0gMSBhbGxvY2F0ZSBibG9ja3MgaW4gYmFja3dhcmQgZGlyZWN0
aW9uIGZyb20gdGhlIGVuZAorCSAqIG9mIGRpc2sgdG8gdGhlIGJlZ2lubmluZyBvZiBkaXNrLiAg
Ki8KKwl1bnNpZ25lZCBpbnQgYmFja3dhcmQ6MTsKKworfTsKKworLyogVGhlc2UgZmxhZ3MgY29u
dHJvbCBibG9jayBhbGxvY2F0aW9uL2RlYWxsb2NhdGlvbiBiZWhhdmlvciAqLworZW51bSByZWlz
ZXI0X2JhX2ZsYWdzIHsKKwkvKiBkbyBhbGxvY2F0YXRpb25zIGZyb20gcmVzZXJ2ZWQgKDUlKSBh
cmVhICovCisJQkFfUkVTRVJWRUQgPSAoMSA8PCAwKSwKKworCS8qIGJsb2NrIGFsbG9jYXRvciBj
YW4gZG8gY29tbWl0IHRyeWluZyB0byByZWNvdmVyIGZyZWUgc3BhY2UgKi8KKwlCQV9DQU5fQ09N
TUlUID0gKDEgPDwgMSksCisKKwkvKiBpZiBvcGVyYXRpb24gd2lsbCBiZSBhcHBsaWVkIHRvIGZv
cm1hdHRlZCBibG9jayAqLworCUJBX0ZPUk1BVFRFRCA9ICgxIDw8IDIpLAorCisJLyogZGVmZXIg
YWN0dWFsIGJsb2NrIGZyZWVpbmcgdW50aWwgdHJhbnNhY3Rpb24gY29tbWl0ICovCisJQkFfREVG
RVIgPSAoMSA8PCAzKSwKKworCS8qIGFsbG9jYXRlIGJsb2NrcyBmb3IgcGVybWFuZW50IGZzIG9i
amVjdHMgKGZvcm1hdHRlZCBvciB1bmZvcm1hdHRlZCksCisJICAgIG5vdCB3YW5kZXJlZCBvZiBs
b2cgYmxvY2tzICovCisJQkFfUEVSTUFORU5UID0gKDEgPDwgNCksCisKKwkvKiBncmFiIHNwYWNl
IGV2ZW4gaXQgd2FzIGRpc2FibGVkICovCisJQkFfRk9SQ0UgPSAoMSA8PCA1KSwKKworCS8qIHVz
ZSBkZWZhdWx0IHN0YXJ0IHZhbHVlIGZvciBmcmVlIGJsb2NrcyBzZWFyY2guICovCisJQkFfVVNF
X0RFRkFVTFRfU0VBUkNIX1NUQVJUID0gKDEgPDwgNikKK307CisKK3R5cGVkZWYgZW51bSByZWlz
ZXI0X2JhX2ZsYWdzIHJlaXNlcjRfYmFfZmxhZ3NfdDsKKworZXh0ZXJuIHZvaWQgcmVpc2VyNF9i
bG9ja25yX2hpbnRfaW5pdChyZWlzZXI0X2Jsb2NrbnJfaGludCAqIGhpbnQpOworZXh0ZXJuIHZv
aWQgcmVpc2VyNF9ibG9ja25yX2hpbnRfZG9uZShyZWlzZXI0X2Jsb2NrbnJfaGludCAqIGhpbnQp
OworZXh0ZXJuIHZvaWQgdXBkYXRlX2Jsb2NrbnJfaGludF9kZWZhdWx0KGNvbnN0IHN0cnVjdCBz
dXBlcl9ibG9jayAqLAorCQkJCQljb25zdCByZWlzZXI0X2Jsb2NrX25yICopOworZXh0ZXJuIHZv
aWQgZ2V0X2Jsb2NrbnJfaGludF9kZWZhdWx0KHJlaXNlcjRfYmxvY2tfbnIgKik7CisKK2V4dGVy
biByZWlzZXI0X2Jsb2NrX25yIHJlaXNlcjRfZnNfcmVzZXJ2ZWRfc3BhY2Uoc3RydWN0IHN1cGVy
X2Jsb2NrICpzdXBlcik7CisKK2ludCBhc3NpZ25fZmFrZV9ibG9ja25yX2Zvcm1hdHRlZChyZWlz
ZXI0X2Jsb2NrX25yICopOworcmVpc2VyNF9ibG9ja19uciBmYWtlX2Jsb2NrbnJfdW5mb3JtYXR0
ZWQoaW50KTsKKworLyogZnJlZSAtPiBncmFiYmVkIC0+IGZha2VfYWxsb2NhdGVkIC0+IHVzZWQg
Ki8KKworaW50IHJlaXNlcjRfZ3JhYl9zcGFjZShfX3U2NCBjb3VudCwgcmVpc2VyNF9iYV9mbGFn
c190IGZsYWdzKTsKK3ZvaWQgYWxsX2dyYWJiZWQyZnJlZSh2b2lkKTsKK3ZvaWQgZ3JhYmJlZDJm
cmVlKHJlaXNlcjRfY29udGV4dCAqICwgcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKiAsIF9fdTY0
IGNvdW50KTsKK3ZvaWQgZmFrZV9hbGxvY2F0ZWQyZnJlZShfX3U2NCBjb3VudCwgcmVpc2VyNF9i
YV9mbGFnc190IGZsYWdzKTsKK3ZvaWQgZ3JhYmJlZDJmbHVzaF9yZXNlcnZlZF9ub2xvY2sodHhu
X2F0b20gKiBhdG9tLCBfX3U2NCBjb3VudCk7Cit2b2lkIGdyYWJiZWQyZmx1c2hfcmVzZXJ2ZWQo
X191NjQgY291bnQpOworaW50IHJlaXNlcjRfYWxsb2NfYmxvY2tzKHJlaXNlcjRfYmxvY2tucl9o
aW50ICogaGludCwKKwkJCSByZWlzZXI0X2Jsb2NrX25yICogc3RhcnQsCisJCQkgcmVpc2VyNF9i
bG9ja19uciAqIGxlbiwgcmVpc2VyNF9iYV9mbGFnc190IGZsYWdzKTsKK2ludCByZWlzZXI0X2Rl
YWxsb2NfYmxvY2tzKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiwKKwkJCSAgIGNvbnN0IHJlaXNl
cjRfYmxvY2tfbnIgKiwKKwkJCSAgIGJsb2NrX3N0YWdlX3QsIHJlaXNlcjRfYmFfZmxhZ3NfdCBm
bGFncyk7CisKK3N0YXRpYyBpbmxpbmUgaW50IHJlaXNlcjRfYWxsb2NfYmxvY2socmVpc2VyNF9i
bG9ja25yX2hpbnQgKiBoaW50LAorCQkJCSAgICAgIHJlaXNlcjRfYmxvY2tfbnIgKiBzdGFydCwK
KwkJCQkgICAgICByZWlzZXI0X2JhX2ZsYWdzX3QgZmxhZ3MpCit7CisJcmVpc2VyNF9ibG9ja19u
ciBvbmUgPSAxOworCXJldHVybiByZWlzZXI0X2FsbG9jX2Jsb2NrcyhoaW50LCBzdGFydCwgJm9u
ZSwgZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIGludCByZWlzZXI0X2RlYWxsb2NfYmxvY2so
Y29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGJsb2NrLAorCQkJCQlibG9ja19zdGFnZV90IHN0YWdl
LAorCQkJCQlyZWlzZXI0X2JhX2ZsYWdzX3QgZmxhZ3MpCit7CisJY29uc3QgcmVpc2VyNF9ibG9j
a19uciBvbmUgPSAxOworCXJldHVybiByZWlzZXI0X2RlYWxsb2NfYmxvY2tzKGJsb2NrLCAmb25l
LCBzdGFnZSwgZmxhZ3MpOworfQorCisjZGVmaW5lIHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZShj
b3VudCwgZmxhZ3MpCQlcCisJcmVpc2VyNF9ncmFiX3NwYWNlKGNvdW50LCBmbGFncyB8IEJBX0ZP
UkNFKQorCitleHRlcm4gdm9pZCBncmFiYmVkMmZyZWVfbWFyayhfX3U2NCBtYXJrKTsKK2V4dGVy
biBpbnQgcmVpc2VyNF9ncmFiX3Jlc2VydmVkKHN0cnVjdCBzdXBlcl9ibG9jayAqLAorCQkJCSBf
X3U2NCwgcmVpc2VyNF9iYV9mbGFnc190KTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfcmVsZWFzZV9y
ZXNlcnZlZChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKTsKKworLyogZ3JhYmJlZCAtPiBmYWtl
X2FsbG9jYXRlZCAqLworCisvKiBmYWtlX2FsbG9jYXRlZCAtPiB1c2VkICovCisKKy8qIHVzZWQg
LT4gZmFrZV9hbGxvY2F0ZWQgLT4gZ3JhYmJlZCAtPiBmcmVlICovCisKK2V4dGVybiB2b2lkIGZs
dXNoX3Jlc2VydmVkMmdyYWJiZWQodHhuX2F0b20gKiBhdG9tLCBfX3U2NCBjb3VudCk7CisKK2V4
dGVybiBpbnQgcmVpc2VyNF9ibG9ja25yX2lzX2Zha2UoY29uc3QgcmVpc2VyNF9ibG9ja19uciAq
IGRhKTsKKworZXh0ZXJuIHZvaWQgZ3JhYmJlZDJjbHVzdGVyX3Jlc2VydmVkKGludCBjb3VudCk7
CitleHRlcm4gdm9pZCBjbHVzdGVyX3Jlc2VydmVkMmdyYWJiZWQoaW50IGNvdW50KTsKK2V4dGVy
biB2b2lkIGNsdXN0ZXJfcmVzZXJ2ZWQyZnJlZShpbnQgY291bnQpOworCitleHRlcm4gaW50IHJl
aXNlcjRfY2hlY2tfYmxvY2tfY291bnRlcnMoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICopOwor
CisKK2V4dGVybiBpbnQgcmVpc2VyNF9jaGVja19ibG9ja3MoY29uc3QgcmVpc2VyNF9ibG9ja19u
ciAqc3RhcnQsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlaXNlcjRf
YmxvY2tfbnIgKmxlbiwgaW50IGRlc2lyZWQpOworCitzdGF0aWMgaW5saW5lIGludCByZWlzZXI0
X2NoZWNrX2Jsb2NrKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKnN0YXJ0LAorICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgZGVzaXJlZCkKK3sKKwlyZXR1cm4gcmVpc2Vy
NF9jaGVja19ibG9ja3Moc3RhcnQsIE5VTEwsIGRlc2lyZWQpOworfQorCitleHRlcm4gaW50IHJl
aXNlcjRfcHJlX2NvbW1pdF9ob29rKHZvaWQpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9wb3N0X2Nv
bW1pdF9ob29rKHZvaWQpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9wb3N0X3dyaXRlX2JhY2tfaG9v
ayh2b2lkKTsKKworI2VuZGlmCQkJCS8qIF9fRlNfUkVJU0VSNF9CTE9DS19BTExPQ19IX18gKi8K
KworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50
YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0
OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRp
ZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvYmxv
Y2tucmxpc3QuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9ibG9ja25ybGlzdC5jCi0tLSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Jsb2NrbnJsaXN0LmMJMTk3MC0wMS0wMSAwMTowMDow
MC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Jsb2NrbnJsaXN0
LmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDMyMjIwOTkgKzAxMDAKQEAgLTAsMCArMSwzMzYgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIFRoaXMgaXMgYSBibG9jayBs
aXN0IGltcGxlbWVudGF0aW9uLCB1c2VkIHRvIGNyZWF0ZSBvcmRlcmVkIGJsb2NrIHNldHMKKyAg
IChhdCB0aGUgY29zdCBvZiBiZWluZyBsZXNzIG1lbW9yeSBlZmZpY2llbnQgdGhhbiBibG9ja25y
X3NldCkuCisgICBJdCBpcyB1c2VkIGJ5IGRpc2NhcmQgY29kZS4gKi8KKworI2luY2x1ZGUgImRl
YnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorI2luY2x1ZGUgInR4bm1nci5oIgorI2luY2x1
ZGUgImNvbnRleHQuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorCisjaW5jbHVkZSA8bGludXgvc2xh
Yi5oPgorI2luY2x1ZGUgPGxpbnV4L2xpc3Rfc29ydC5oPgorCitzdGF0aWMgc3RydWN0IGttZW1f
Y2FjaGUgKmJsb2NrbnJfbGlzdF9zbGFiID0gTlVMTDsKKworLyoqCisgKiBSZXByZXNlbnRzIGFu
IGV4dGVudCByYW5nZSBbQHN0YXJ0OyBAZW5kKS4KKyAqLworc3RydWN0IGJsb2NrbnJfbGlzdF9l
bnRyeSB7CisJcmVpc2VyNF9ibG9ja19uciBzdGFydCwgbGVuOworCXN0cnVjdCBsaXN0X2hlYWQg
bGluazsKK307CisKKyNkZWZpbmUgYmxvY2tucl9saXN0X2VudHJ5KHB0cikgbGlzdF9lbnRyeShw
dHIsIGJsb2NrbnJfbGlzdF9lbnRyeSwgbGluaykKKworc3RhdGljIHZvaWQgYmxvY2tucl9saXN0
X2VudHJ5X2luaXQoYmxvY2tucl9saXN0X2VudHJ5ICplbnRyeSkKK3sKKwlhc3NlcnQoImludGVs
ZngtMTEiLCBlbnRyeSAhPSBOVUxMKTsKKworCWVudHJ5LT5zdGFydCA9IDA7CisJZW50cnktPmxl
biA9IDA7CisJSU5JVF9MSVNUX0hFQUQoJmVudHJ5LT5saW5rKTsKK30KKworc3RhdGljIGJsb2Nr
bnJfbGlzdF9lbnRyeSAqYmxvY2tucl9saXN0X2VudHJ5X2FsbG9jKHZvaWQpCit7CisJYmxvY2tu
cl9saXN0X2VudHJ5ICplbnRyeTsKKworCWVudHJ5ID0gKGJsb2NrbnJfbGlzdF9lbnRyeSAqKWtt
ZW1fY2FjaGVfYWxsb2MoYmxvY2tucl9saXN0X3NsYWIsCisJICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJ
aWYgKGVudHJ5ID09IE5VTEwpIHsKKwkJcmV0dXJuIE5VTEw7CisJfQorCisJYmxvY2tucl9saXN0
X2VudHJ5X2luaXQoZW50cnkpOworCisJcmV0dXJuIGVudHJ5OworfQorCitzdGF0aWMgdm9pZCBi
bG9ja25yX2xpc3RfZW50cnlfZnJlZShibG9ja25yX2xpc3RfZW50cnkgKmVudHJ5KQoreworCWFz
c2VydCgiaW50ZWxmeC0xMiIsIGVudHJ5ICE9IE5VTEwpOworCisJa21lbV9jYWNoZV9mcmVlKGJs
b2NrbnJfbGlzdF9zbGFiLCBlbnRyeSk7Cit9CisKKy8qKgorICogR2l2ZW4gcmFuZ2VzIEB0byBh
bmQgW0BzdGFydDsgQGVuZCksIGlmIHRoZXkgb3ZlcmxhcCwgdGhlaXIgdW5pb24KKyAqIGlzIGNh
bGN1bGF0ZWQgYW5kIHNhdmVkIGluIEB0by4KKyAqLworc3RhdGljIGludCBibG9ja25yX2xpc3Rf
ZW50cnlfbWVyZ2UoYmxvY2tucl9saXN0X2VudHJ5ICp0bywKKyAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHJlaXNlcjRfYmxvY2tfbnIgc3RhcnQsCisgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICByZWlzZXI0X2Jsb2NrX25yIGxlbikKK3sKKwlyZWlzZXI0X2Js
b2NrX25yIGVuZCwgdG9fZW5kOworCisJYXNzZXJ0KCJpbnRlbGZ4LTEzIiwgdG8gIT0gTlVMTCk7
CisKKwlhc3NlcnQoImludGVsZngtMTYiLCB0by0+bGVuID4gMCk7CisJYXNzZXJ0KCJpbnRlbGZ4
LTE3IiwgbGVuID4gMCk7CisKKwllbmQgPSBzdGFydCArIGxlbjsKKwl0b19lbmQgPSB0by0+c3Rh
cnQgKyB0by0+bGVuOworCisJaWYgKCh0by0+c3RhcnQgPD0gZW5kKSAmJiAoc3RhcnQgPD0gdG9f
ZW5kKSkgeworCQlpZiAoc3RhcnQgPCB0by0+c3RhcnQpIHsKKwkJCXRvLT5zdGFydCA9IHN0YXJ0
OworCQl9CisKKwkJaWYgKGVuZCA+IHRvX2VuZCkgeworCQkJdG9fZW5kID0gZW5kOworCQl9CisK
KwkJdG8tPmxlbiA9IHRvX2VuZCAtIHRvLT5zdGFydDsKKworCQlyZXR1cm4gMDsKKwl9CisKKwly
ZXR1cm4gLTE7Cit9CisKK3N0YXRpYyBpbnQgYmxvY2tucl9saXN0X2VudHJ5X21lcmdlX2VudHJ5
KGJsb2NrbnJfbGlzdF9lbnRyeSAqdG8sCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBibG9ja25yX2xpc3RfZW50cnkgKmZyb20pCit7CisJYXNzZXJ0KCJpbnRlbGZ4
LTE4IiwgZnJvbSAhPSBOVUxMKTsKKworCXJldHVybiBibG9ja25yX2xpc3RfZW50cnlfbWVyZ2Uo
dG8sIGZyb20tPnN0YXJ0LCBmcm9tLT5sZW4pOworfQorCisvKioKKyAqIEEgY29tcGFyaXNvbiBm
dW5jdGlvbiBmb3IgbGlzdF9zb3J0KCkuCisgKgorICogIlRoZSBjb21wYXJpc29uIGZ1bmN0aW9u
IEBjbXAgbXVzdCByZXR1cm4gYSBuZWdhdGl2ZSB2YWx1ZSBpZiBAYQorICogc2hvdWxkIHNvcnQg
YmVmb3JlIEBiLCBhbmQgYSBwb3NpdGl2ZSB2YWx1ZSBpZiBAYSBzaG91bGQgc29ydCBhZnRlcgor
ICogQGIuIElmIEBhIGFuZCBAYiBhcmUgZXF1aXZhbGVudCwgYW5kIHRoZWlyIG9yaWdpbmFsIHJl
bGF0aXZlCisgKiBvcmRlcmluZyBpcyB0byBiZSBwcmVzZXJ2ZWQsIEBjbXAgbXVzdCByZXR1cm4g
MC4iCisgKi8KK3N0YXRpYyBpbnQgYmxvY2tucl9saXN0X2VudHJ5X2NvbXBhcmUodm9pZCogcHJp
diBVTlVTRURfQVJHLAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJ1
Y3QgbGlzdF9oZWFkICphLCBzdHJ1Y3QgbGlzdF9oZWFkICpiKQoreworCWJsb2NrbnJfbGlzdF9l
bnRyeSAqZW50cnlfYSwgKmVudHJ5X2I7CisJcmVpc2VyNF9ibG9ja19uciBlbnRyeV9hX2VuZCwg
ZW50cnlfYl9lbmQ7CisKKwlhc3NlcnQoImludGVsZngtMTkiLCBhICE9IE5VTEwpOworCWFzc2Vy
dCgiaW50ZWxmeC0yMCIsIGIgIT0gTlVMTCk7CisKKwllbnRyeV9hID0gYmxvY2tucl9saXN0X2Vu
dHJ5KGEpOworCWVudHJ5X2IgPSBibG9ja25yX2xpc3RfZW50cnkoYik7CisKKwllbnRyeV9hX2Vu
ZCA9IGVudHJ5X2EtPnN0YXJ0ICsgZW50cnlfYS0+bGVuOworCWVudHJ5X2JfZW5kID0gZW50cnlf
Yi0+c3RhcnQgKyBlbnRyeV9iLT5sZW47CisKKwkvKiBGaXJzdCBzb3J0IGJ5IHN0YXJ0aW5nIGJs
b2NrIG51bWJlcnMuLi4gKi8KKwlpZiAoZW50cnlfYS0+c3RhcnQgPCBlbnRyeV9iLT5zdGFydCkg
eworCQlyZXR1cm4gLTE7CisJfQorCisJaWYgKGVudHJ5X2EtPnN0YXJ0ID4gZW50cnlfYi0+c3Rh
cnQpIHsKKwkJcmV0dXJuIDE7CisJfQorCisJLyoqIFRoZW4gYnkgZW5kaW5nIGJsb2NrIG51bWJl
cnMuCisJICogSWYgQGEgY29udGFpbnMgQGIsIGl0IHdpbGwgYmUgc29ydGVkIGJlZm9yZS4gKi8K
KwlpZiAoZW50cnlfYV9lbmQgPiBlbnRyeV9iX2VuZCkgeworCQlyZXR1cm4gLTE7CisJfQorCisJ
aWYgKGVudHJ5X2FfZW5kIDwgZW50cnlfYl9lbmQpIHsKKwkJcmV0dXJuIDE7CisJfQorCisJcmV0
dXJuIDA7Cit9CisKK2ludCBibG9ja25yX2xpc3RfaW5pdF9zdGF0aWModm9pZCkKK3sKKwlhc3Nl
cnQoImludGVsZngtNTQiLCBibG9ja25yX2xpc3Rfc2xhYiA9PSBOVUxMKTsKKworCWJsb2NrbnJf
bGlzdF9zbGFiID0ga21lbV9jYWNoZV9jcmVhdGUoImJsb2NrbnJfbGlzdF9lbnRyeSIsCisJICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplb2YoYmxvY2tucl9saXN0X2Vu
dHJ5KSwKKwkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAsCisJICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTTEFCX0hXQ0FDSEVfQUxJR04gfAorCSAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU0xBQl9SRUNMQUlNX0FDQ09VTlQs
CisJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOVUxMKTsKKwlpZiAoYmxv
Y2tucl9saXN0X3NsYWIgPT0gTlVMTCkgeworCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCX0K
KworCXJldHVybiAwOworfQorCit2b2lkIGJsb2NrbnJfbGlzdF9kb25lX3N0YXRpYyh2b2lkKQor
eworCWRlc3Ryb3lfcmVpc2VyNF9jYWNoZSgmYmxvY2tucl9saXN0X3NsYWIpOworfQorCit2b2lk
IGJsb2NrbnJfbGlzdF9pbml0KHN0cnVjdCBsaXN0X2hlYWQqIGJsaXN0KQoreworCWFzc2VydCgi
aW50ZWxmeC0yNCIsIGJsaXN0ICE9IE5VTEwpOworCisJSU5JVF9MSVNUX0hFQUQoYmxpc3QpOwor
fQorCit2b2lkIGJsb2NrbnJfbGlzdF9kZXN0cm95KHN0cnVjdCBsaXN0X2hlYWQqIGJsaXN0KQor
eworCXN0cnVjdCBsaXN0X2hlYWQgKnBvcywgKnRtcDsKKwlibG9ja25yX2xpc3RfZW50cnkgKmVu
dHJ5OworCisJYXNzZXJ0KCJpbnRlbGZ4LTI1IiwgYmxpc3QgIT0gTlVMTCk7CisKKwlsaXN0X2Zv
cl9lYWNoX3NhZmUocG9zLCB0bXAsIGJsaXN0KSB7CisJCWVudHJ5ID0gYmxvY2tucl9saXN0X2Vu
dHJ5KHBvcyk7CisJCWxpc3RfZGVsX2luaXQocG9zKTsKKwkJYmxvY2tucl9saXN0X2VudHJ5X2Zy
ZWUoZW50cnkpOworCX0KKworCWFzc2VydCgiaW50ZWxmeC00OCIsIGxpc3RfZW1wdHkoYmxpc3Qp
KTsKK30KKwordm9pZCBibG9ja25yX2xpc3RfbWVyZ2Uoc3RydWN0IGxpc3RfaGVhZCAqZnJvbSwg
c3RydWN0IGxpc3RfaGVhZCAqdG8pCit7CisJYXNzZXJ0KCJpbnRlbGZ4LTI2IiwgZnJvbSAhPSBO
VUxMKTsKKwlhc3NlcnQoImludGVsZngtMjciLCB0byAhPSBOVUxMKTsKKworCWxpc3Rfc3BsaWNl
X3RhaWxfaW5pdChmcm9tLCB0byk7CisKKwlhc3NlcnQoImludGVsZngtNDkiLCBsaXN0X2VtcHR5
KGZyb20pKTsKK30KKwordm9pZCBibG9ja25yX2xpc3Rfc29ydF9hbmRfam9pbihzdHJ1Y3QgbGlz
dF9oZWFkICpibGlzdCkKK3sKKwlzdHJ1Y3QgbGlzdF9oZWFkICpwb3MsICpuZXh0OworCXN0cnVj
dCBibG9ja25yX2xpc3RfZW50cnkgKmVudHJ5LCAqbmV4dF9lbnRyeTsKKworCWFzc2VydCgiaW50
ZWxmeC01MCIsIGJsaXN0ICE9IE5VTEwpOworCisJLyogU3RlcCAxLiBTb3J0IHRoZSBleHRlbnQg
bGlzdC4gKi8KKwlsaXN0X3NvcnQoTlVMTCwgYmxpc3QsIGJsb2NrbnJfbGlzdF9lbnRyeV9jb21w
YXJlKTsKKworCS8qIFN0ZXAgMi4gSm9pbiBhZGphY2VudCBleHRlbnRzIGluIHRoZSBsaXN0LiAq
LworCXBvcyA9IGJsaXN0LT5uZXh0OworCW5leHQgPSBwb3MtPm5leHQ7CisJZW50cnkgPSBibG9j
a25yX2xpc3RfZW50cnkocG9zKTsKKworCWZvciAoOyBuZXh0ICE9IGJsaXN0OyBuZXh0ID0gcG9z
LT5uZXh0KSB7CisJCS8qKiBAbmV4dCBpcyBhIHZhbGlkIG5vZGUgYXQgdGhpcyBwb2ludCAqLwor
CQluZXh0X2VudHJ5ID0gYmxvY2tucl9saXN0X2VudHJ5KG5leHQpOworCisJCS8qKiB0cnkgdG8g
bWVyZ2UgQG5leHQgaW50byBAcG9zICovCisJCWlmICghYmxvY2tucl9saXN0X2VudHJ5X21lcmdl
X2VudHJ5KGVudHJ5LCBuZXh0X2VudHJ5KSkgeworCQkJLyoqIHN1Y2Nlc3NmdWw7IGRlbGV0ZSB0
aGUgQG5leHQgbm9kZS4KKwkJCSAqIG5leHQgbWVyZ2Ugd2lsbCBiZSBhdHRlbXB0ZWQgaW50byB0
aGUgc2FtZSBub2RlLiAqLworCQkJbGlzdF9kZWxfaW5pdChuZXh0KTsKKwkJCWJsb2NrbnJfbGlz
dF9lbnRyeV9mcmVlKG5leHRfZW50cnkpOworCQl9IGVsc2UgeworCQkJLyoqIG90aGVyd2lzZSBh
ZHZhbmNlIEBwb3MuICovCisJCQlwb3MgPSBuZXh0OworCQkJZW50cnkgPSBuZXh0X2VudHJ5Owor
CQl9CisJfQorfQorCitpbnQgYmxvY2tucl9saXN0X2FkZF9leHRlbnQodHhuX2F0b20gKmF0b20s
CisgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RydWN0IGxpc3RfaGVhZCAqYmxpc3QsCisg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tucl9saXN0X2VudHJ5ICoqbmV3X2VudHJ5
LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKnN0
YXJ0LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIg
KmxlbikKK3sKKwlhc3NlcnQoImludGVsZngtMjkiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydCgi
aW50ZWxmeC00MiIsIGF0b21faXNfcHJvdGVjdGVkKGF0b20pKTsKKwlhc3NlcnQoImludGVsZngt
NDMiLCBibGlzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImludGVsZngtMzAiLCBuZXdfZW50cnkgIT0g
TlVMTCk7CisJYXNzZXJ0KCJpbnRlbGZ4LTMxIiwgc3RhcnQgIT0gTlVMTCk7CisJYXNzZXJ0KCJp
bnRlbGZ4LTMyIiwgbGVuICE9IE5VTEwgJiYgKmxlbiA+IDApOworCisJaWYgKCpuZXdfZW50cnkg
PT0gTlVMTCkgeworCQkvKgorCQkgKiBPcHRpbWl6YXRpb246IHRyeSB0byBtZXJnZSBuZXcgZXh0
ZW50IGludG8gdGhlIGxhc3Qgb25lLgorCQkgKi8KKwkJaWYgKCFsaXN0X2VtcHR5KGJsaXN0KSkg
eworCQkJYmxvY2tucl9saXN0X2VudHJ5ICpsYXN0X2VudHJ5OworCQkJbGFzdF9lbnRyeSA9IGJs
b2NrbnJfbGlzdF9lbnRyeShibGlzdC0+cHJldik7CisJCQlpZiAoIWJsb2NrbnJfbGlzdF9lbnRy
eV9tZXJnZShsYXN0X2VudHJ5LCAqc3RhcnQsICpsZW4pKSB7CisJCQkJcmV0dXJuIDA7CisJCQl9
CisJCX0KKworCQkvKgorCQkgKiBPdGhlcndpc2UsIGFsbG9jYXRlIGEgbmV3IGVudHJ5IGFuZCB0
ZWxsIC1FX1JFUEVBVC4KKwkJICogTmV4dCB0aW1lIHdlJ2xsIHRha2UgdGhlIGJyYW5jaCBiZWxv
dy4KKwkJICovCisJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJCSpuZXdfZW50cnkgPSBibG9j
a25yX2xpc3RfZW50cnlfYWxsb2MoKTsKKwkJcmV0dXJuICgqbmV3X2VudHJ5ICE9IE5VTEwpID8g
LUVfUkVQRUFUIDogUkVURVJSKC1FTk9NRU0pOworCX0KKworCS8qCisJICogVGhlIGVudHJ5IGhh
cyBiZWVuIGFsbG9jYXRlZCBiZWZvcmVoYW5kLCBmaWxsIGl0IGFuZCBsaW5rIHRvIHRoZSBsaXN0
LgorCSAqLworCSgqbmV3X2VudHJ5KS0+c3RhcnQgPSAqc3RhcnQ7CisJKCpuZXdfZW50cnkpLT5s
ZW4gPSAqbGVuOworCWxpc3RfYWRkX3RhaWwoJigqbmV3X2VudHJ5KS0+bGluaywgYmxpc3QpOwor
CisJcmV0dXJuIDA7Cit9CisKK2ludCBibG9ja25yX2xpc3RfaXRlcmF0b3IodHhuX2F0b20gKmF0
b20sCisgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cnVjdCBsaXN0X2hlYWQgKmJsaXN0LAor
ICAgICAgICAgICAgICAgICAgICAgICAgICBibG9ja25yX3NldF9hY3Rvcl9mIGFjdG9yLAorICAg
ICAgICAgICAgICAgICAgICAgICAgICB2b2lkICpkYXRhLAorICAgICAgICAgICAgICAgICAgICAg
ICAgICBpbnQgZGVsZXRlKQoreworCXN0cnVjdCBsaXN0X2hlYWQgKnBvczsKKwlibG9ja25yX2xp
c3RfZW50cnkgKmVudHJ5OworCWludCByZXQgPSAwOworCisJYXNzZXJ0KCJpbnRlbGZ4LTQ2Iiwg
Ymxpc3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJpbnRlbGZ4LTQ3IiwgYWN0b3IgIT0gTlVMTCk7CisK
KwlpZiAoZGVsZXRlKSB7CisJCXN0cnVjdCBsaXN0X2hlYWQgKnRtcDsKKworCQlsaXN0X2Zvcl9l
YWNoX3NhZmUocG9zLCB0bXAsIGJsaXN0KSB7CisJCQllbnRyeSA9IGJsb2NrbnJfbGlzdF9lbnRy
eShwb3MpOworCisJCQkvKgorCQkJICogRG8gbm90IGV4aXQsIGRlbGV0ZSBmbGFnIGlzIHNldC4g
SW5zdGVhZCwgb24gdGhlIGZpcnN0IGVycm9yIHdlCisJCQkgKiBkb3duZ3JhZGUgZnJvbSBpdGVy
YXRpbmcgdG8ganVzdCBkZWxldGluZy4KKwkJCSAqLworCQkJaWYgKHJldCA9PSAwKSB7CisJCQkJ
cmV0ID0gYWN0b3IoYXRvbSwgJmVudHJ5LT5zdGFydCwgJmVudHJ5LT5sZW4sIGRhdGEpOworCQkJ
fQorCisJCQlsaXN0X2RlbF9pbml0KHBvcyk7CisJCQlibG9ja25yX2xpc3RfZW50cnlfZnJlZShl
bnRyeSk7CisJCX0KKworCQlhc3NlcnQoImludGVsZngtNDQiLCBsaXN0X2VtcHR5KGJsaXN0KSk7
CisJfSBlbHNlIHsKKwkJbGlzdF9mb3JfZWFjaChwb3MsIGJsaXN0KSB7CisJCQllbnRyeSA9IGJs
b2NrbnJfbGlzdF9lbnRyeShwb3MpOworCisJCQlyZXQgPSBhY3RvcihhdG9tLCAmZW50cnktPnN0
YXJ0LCAmZW50cnktPmxlbiwgZGF0YSk7CisKKwkJCWlmIChyZXQgIT0gMCkgeworCQkJCXJldHVy
biByZXQ7CisJCQl9CisJCX0KKwl9CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBNYWtlIExpbnVz
IGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksm
UiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0
aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyov
CmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
YmxvY2tucnNldC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Jsb2NrbnJzZXQuYwotLS0gbGlu
dXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9ibG9ja25yc2V0LmMJMTk3MC0wMS0wMSAwMTowMDow
MC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Jsb2NrbnJzZXQu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0MzIyMjA5OSArMDEwMApAQCAtMCwwICsxLDM5OSBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorcmVpc2VyNC9SRUFETUUgKi8KKworLyogVGhpcyBmaWxlIGNvbnRhaW5zIGNv
ZGUgZm9yIHZhcmlvdXMgYmxvY2sgbnVtYmVyIHNldHMgdXNlZCBieSB0aGUgYXRvbSB0bworICAg
dHJhY2sgdGhlIGRlbGV0ZWQgc2V0IGFuZCB3YW5kZXJlZCBibG9jayBtYXBwaW5ncy4gKi8KKwor
I2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorI2luY2x1ZGUgInR4bm1n
ci5oIgorI2luY2x1ZGUgImNvbnRleHQuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorCisjaW5jbHVk
ZSA8bGludXgvc2xhYi5oPgorCisvKiBUaGUgcHJvcG9zZWQgZGF0YSBzdHJ1Y3R1cmUgZm9yIHN0
b3JpbmcgdW5vcmRlcmVkIGJsb2NrIG51bWJlciBzZXRzIGlzIGEKKyAgIGxpc3Qgb2YgZWxlbWVu
dHMsIGVhY2ggb2Ygd2hpY2ggY29udGFpbnMgYW4gYXJyYXkgb2YgYmxvY2sgbnVtYmVyIG9yL2Fu
ZAorICAgYXJyYXkgb2YgYmxvY2sgbnVtYmVyIHBhaXJzLiBUaGF0IGVsZW1lbnQgY2FsbGVkIGJs
b2NrbnJfc2V0X2VudHJ5IGlzIHVzZWQKKyAgIHRvIHN0b3JlIGJsb2NrIG51bWJlcnMgZnJvbSB0
aGUgYmVnaW5uaW5nIGFuZCBmb3IgZXh0ZW50cyBmcm9tIHRoZSBlbmQgb2YKKyAgIHRoZSBkYXRh
IGZpZWxkIChjaGFyIGRhdGFbLi4uXSkuIFRoZSAtPm5yX2Jsb2NrcyBhbmQgLT5ucl9wYWlycyBm
aWVsZHMKKyAgIGNvdW50IG51bWJlcnMgb2YgYmxvY2tzIGFuZCBleHRlbnRzLgorCisgICArLS0t
LS0tLS0tLS0tLS0tLS0tLSBibG9ja25yX3NldF9lbnRyeS0+ZGF0YSAtLS0tLS0tLS0tLS0tLS0t
LS0rCisgICB8YmxvY2sxfGJsb2NrMnwgLi4uIDxmcmVlIHNwYWNlPiAuLi4gfHBhaXIzfHBhaXIy
fHBhaXIxfAorICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLSsKKworICAgV2hlbiBjdXJyZW50IGJsb2NrbnJfc2V0X2VudHJ5IGlz
IGZ1bGwsIGFsbG9jYXRlIGEgbmV3IG9uZS4gKi8KKworLyogVXNhZ2UgZXhhbXBsZXM6IGJsb2Nr
bnIgc2V0cyBhcmUgdXNlZCBpbiByZWlzZXI0IGZvciBzdG9yaW5nIGF0b20ncyBkZWxldGUKKyAq
IHNldCAoc2luZ2xlIGJsb2NrcyBhbmQgYmxvY2sgZXh0ZW50cyksIGluIHRoYXQgY2FzZSBibG9j
a25yIHBhaXIgcmVwcmVzZW50IGFuCisgKiBleHRlbnQ7IGF0b20ncyB3YW5kZXJlZCBtYXAgaXMg
YWxzbyBzdG9yZWQgYXMgYSBibG9ja25yIHNldCwgYmxvY2tuciBwYWlycworICogdGhlcmUgcmVw
cmVzZW50IGEgKHJlYWwgYmxvY2spIC0+ICh3YW5kZXJlZCBibG9jaykgbWFwcGluZy4gKi8KKwor
LyogUHJvdGVjdGlvbjogYmxvY2tuciBzZXRzIGJlbG9uZyB0byByZWlzZXI0IGF0b20sIGFuZAor
ICogdGhlaXIgbW9kaWZpY2F0aW9ucyBhcmUgcGVyZm9ybWVkIHdpdGggdGhlIGF0b20gbG9jayBo
ZWxkICovCisKKy8qIFRoZSB0b3RhbCBzaXplIG9mIGEgYmxvY2tucl9zZXRfZW50cnkuICovCisj
ZGVmaW5lIEJMT0NLTlJfU0VUX0VOVFJZX1NJWkUgMTI4CisKKy8qIFRoZSBudW1iZXIgb2YgYmxv
Y2tzIHRoYXQgY2FuIGZpdCB0aGUgYmxvY2tuciBkYXRhIGFyZWEuICovCisjZGVmaW5lIEJMT0NL
TlJfU0VUX0VOVFJJRVNfTlVNQkVSCQlcCisgICAgICAgKChCTE9DS05SX1NFVF9FTlRSWV9TSVpF
IC0JCVwKKwkyICogc2l6ZW9mKHVuc2lnbmVkKSAtCQkJXAorCXNpemVvZihzdHJ1Y3QgbGlzdF9o
ZWFkKSkgLwkJXAorCXNpemVvZihyZWlzZXI0X2Jsb2NrX25yKSkKKworc3RhdGljIHN0cnVjdCBr
bWVtX2NhY2hlICpibG9ja25yX3NldF9zbGFiID0gTlVMTDsKKworLyogQW4gZW50cnkgb2YgdGhl
IGJsb2NrbnJfc2V0ICovCitzdHJ1Y3QgYmxvY2tucl9zZXRfZW50cnkgeworCXVuc2lnbmVkIG5y
X3NpbmdsZXM7CisJdW5zaWduZWQgbnJfcGFpcnM7CisJc3RydWN0IGxpc3RfaGVhZCBsaW5rOwor
CXJlaXNlcjRfYmxvY2tfbnIgZW50cmllc1tCTE9DS05SX1NFVF9FTlRSSUVTX05VTUJFUl07Cit9
OworCisvKiBBIHBhaXIgb2YgYmxvY2tzIGFzIHJlY29yZGVkIGluIHRoZSBibG9ja25yX3NldF9l
bnRyeSBkYXRhLiAqLworc3RydWN0IGJsb2NrbnJfcGFpciB7CisJcmVpc2VyNF9ibG9ja19uciBh
OworCXJlaXNlcjRfYmxvY2tfbnIgYjsKK307CisKKy8qIFJldHVybiB0aGUgbnVtYmVyIG9mIGJs
b2NrbnIgc2xvdHMgYXZhaWxhYmxlIGluIGEgYmxvY2tucl9zZXRfZW50cnkuICovCisvKiBBdWRp
dGVkIGJ5OiBncmVlbigyMDAyLjA2LjExKSAqLworc3RhdGljIHVuc2lnbmVkIGJzZV9hdmFpbChi
bG9ja25yX3NldF9lbnRyeSAqIGJzZSkKK3sKKwl1bnNpZ25lZCB1c2VkID0gYnNlLT5ucl9zaW5n
bGVzICsgMiAqIGJzZS0+bnJfcGFpcnM7CisKKwlhc3NlcnQoImptYWNkLTUwODgiLCBCTE9DS05S
X1NFVF9FTlRSSUVTX05VTUJFUiA+PSB1c2VkKTsKKwljYXNzZXJ0KHNpemVvZihibG9ja25yX3Nl
dF9lbnRyeSkgPT0gQkxPQ0tOUl9TRVRfRU5UUllfU0laRSk7CisKKwlyZXR1cm4gQkxPQ0tOUl9T
RVRfRU5UUklFU19OVU1CRVIgLSB1c2VkOworfQorCisvKiBJbml0aWFsaXplIGEgYmxvY2tucl9z
ZXRfZW50cnkuICovCitzdGF0aWMgdm9pZCBic2VfaW5pdChibG9ja25yX3NldF9lbnRyeSAqYnNl
KQoreworCWJzZS0+bnJfc2luZ2xlcyA9IDA7CisJYnNlLT5ucl9wYWlycyA9IDA7CisJSU5JVF9M
SVNUX0hFQUQoJmJzZS0+bGluayk7Cit9CisKKy8qIEFsbG9jYXRlIGFuZCBpbml0aWFsaXplIGEg
YmxvY2tucl9zZXRfZW50cnkuICovCisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjExKSAq
Lworc3RhdGljIGJsb2NrbnJfc2V0X2VudHJ5ICpic2VfYWxsb2Modm9pZCkKK3sKKwlibG9ja25y
X3NldF9lbnRyeSAqZTsKKworCWlmICgoZSA9IChibG9ja25yX3NldF9lbnRyeSAqKSBrbWVtX2Nh
Y2hlX2FsbG9jKGJsb2NrbnJfc2V0X3NsYWIsCisJCQkJCQkJcmVpc2VyNF9jdHhfZ2ZwX21hc2tf
Z2V0KCkpKSA9PSBOVUxMKQorCQlyZXR1cm4gTlVMTDsKKworCWJzZV9pbml0KGUpOworCisJcmV0
dXJuIGU7Cit9CisKKy8qIEZyZWUgYSBibG9ja25yX3NldF9lbnRyeS4gKi8KKy8qIEF1ZGl0ZWQg
Ynk6IGdyZWVuKDIwMDIuMDYuMTEpICovCitzdGF0aWMgdm9pZCBic2VfZnJlZShibG9ja25yX3Nl
dF9lbnRyeSAqIGJzZSkKK3sKKwlrbWVtX2NhY2hlX2ZyZWUoYmxvY2tucl9zZXRfc2xhYiwgYnNl
KTsKK30KKworLyogQWRkIGEgYmxvY2sgbnVtYmVyIHRvIGEgYmxvY2tucl9zZXRfZW50cnkgKi8K
Ky8qIEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTEpICovCitzdGF0aWMgdm9pZAorYnNlX3B1
dF9zaW5nbGUoYmxvY2tucl9zZXRfZW50cnkgKiBic2UsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIg
KiBibG9jaykKK3sKKwlhc3NlcnQoImptYWNkLTUwOTkiLCBic2VfYXZhaWwoYnNlKSA+PSAxKTsK
KworCWJzZS0+ZW50cmllc1tic2UtPm5yX3NpbmdsZXMrK10gPSAqYmxvY2s7Cit9CisKKy8qIEdl
dCBhIHBhaXIgb2YgYmxvY2sgbnVtYmVycyAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4w
Ni4xMSkgKi8KK3N0YXRpYyBpbmxpbmUgc3RydWN0IGJsb2NrbnJfcGFpciAqYnNlX2dldF9wYWly
KGJsb2NrbnJfc2V0X2VudHJ5ICogYnNlLAorCQkJCQkJdW5zaWduZWQgcG5vKQoreworCWFzc2Vy
dCgiZ3JlZW4tMSIsIEJMT0NLTlJfU0VUX0VOVFJJRVNfTlVNQkVSID49IDIgKiAocG5vICsgMSkp
OworCisJcmV0dXJuIChzdHJ1Y3QgYmxvY2tucl9wYWlyICopIChic2UtPmVudHJpZXMgKworCQkJ
CQlCTE9DS05SX1NFVF9FTlRSSUVTX05VTUJFUiAtCisJCQkJCTIgKiAocG5vICsgMSkpOworfQor
CisvKiBBZGQgYSBwYWlyIG9mIGJsb2NrIG51bWJlcnMgdG8gYSBibG9ja25yX3NldF9lbnRyeSAq
LworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xMSkgKi8KK3N0YXRpYyB2b2lkCitic2Vf
cHV0X3BhaXIoYmxvY2tucl9zZXRfZW50cnkgKiBic2UsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIg
KiBhLAorCSAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGIpCit7CisJc3RydWN0IGJsb2Nr
bnJfcGFpciAqcGFpcjsKKworCWFzc2VydCgiam1hY2QtNTEwMCIsIGJzZV9hdmFpbChic2UpID49
IDIgJiYgYSAhPSBOVUxMICYmIGIgIT0gTlVMTCk7CisKKwlwYWlyID0gYnNlX2dldF9wYWlyKGJz
ZSwgYnNlLT5ucl9wYWlycysrKTsKKworCXBhaXItPmEgPSAqYTsKKwlwYWlyLT5iID0gKmI7Cit9
CisKKy8qIEFkZCBlaXRoZXIgYSBibG9jayBvciBwYWlyIG9mIGJsb2NrcyB0byB0aGUgYmxvY2sg
bnVtYmVyIHNldC4gIFRoZSBmaXJzdAorICAgYmxvY2tuciAoQGEpIG11c3QgYmUgbm9uLU5VTEwu
ICBJZiBAYiBpcyBOVUxMIGEgc2luZ2xlIGJsb2NrbnIgaXMgYWRkZWQsIGlmCisgICBAYiBpcyBu
b24tTlVMTCBhIHBhaXIgaXMgYWRkZWQuICBUaGUgYmxvY2sgbnVtYmVyIHNldCBiZWxvbmdzIHRv
IGF0b20sIGFuZAorICAgdGhlIGNhbGwgaXMgbWFkZSB3aXRoIHRoZSBhdG9tIGxvY2sgaGVsZC4g
IFRoZXJlIG1heSBub3QgYmUgZW5vdWdoIHNwYWNlIGluCisgICB0aGUgY3VycmVudCBibG9ja25y
X3NldF9lbnRyeS4gIElmIG5ld19ic2VwIHBvaW50cyB0byBhIG5vbi1OVUxMCisgICBibG9ja25y
X3NldF9lbnRyeSB0aGVuIGl0IHdpbGwgYmUgYWRkZWQgdG8gdGhlIGJsb2NrbnJfc2V0IGFuZCBu
ZXdfYnNlcAorICAgd2lsbCBiZSBzZXQgdG8gTlVMTC4gIElmIG5ld19ic2VwIGNvbnRhaW5zIE5V
TEwgdGhlbiB0aGUgYXRvbSBsb2NrIHdpbGwgYmUKKyAgIHJlbGVhc2VkIGFuZCBhIG5ldyBic2Ug
d2lsbCBiZSBhbGxvY2F0ZWQgaW4gbmV3X2JzZXAuICBFX1JFUEVBVCB3aWxsIGJlCisgICByZXR1
cm5lZCB3aXRoIHRoZSBhdG9tIHVubG9ja2VkIGZvciB0aGUgb3BlcmF0aW9uIHRvIGJlIHRyaWVk
IGFnYWluLiAgSWYKKyAgIHRoZSBvcGVyYXRpb24gc3VjY2VlZHMsIDAgaXMgcmV0dXJuZWQuICBJ
ZiBuZXdfYnNlcCBpcyBub24tTlVMTCBhbmQgbm90CisgICB1c2VkIGR1cmluZyB0aGUgY2FsbCwg
aXQgd2lsbCBiZSBmcmVlZCBhdXRvbWF0aWNhbGx5LiAqLworc3RhdGljIGludCBibG9ja25yX3Nl
dF9hZGQodHhuX2F0b20gKmF0b20sIHN0cnVjdCBsaXN0X2hlYWQgKmJzZXQsCisJCQkgICBibG9j
a25yX3NldF9lbnRyeSAqKm5ld19ic2VwLCBjb25zdCByZWlzZXI0X2Jsb2NrX25yICphLAorCQkJ
ICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqYikKK3sKKwlibG9ja25yX3NldF9lbnRyeSAqYnNl
OworCXVuc2lnbmVkIGVudHJpZXNfbmVlZGVkOworCisJYXNzZXJ0KCJqbWFjZC01MTAxIiwgYSAh
PSBOVUxMKTsKKworCWVudHJpZXNfbmVlZGVkID0gKGIgPT0gTlVMTCkgPyAxIDogMjsKKwlpZiAo
bGlzdF9lbXB0eShic2V0KSB8fAorCSAgICBic2VfYXZhaWwobGlzdF9lbnRyeShic2V0LT5uZXh0
LCBibG9ja25yX3NldF9lbnRyeSwgbGluaykpIDwgZW50cmllc19uZWVkZWQpIHsKKwkJLyogU2Vl
IGlmIGEgYnNlIHdhcyBwcmV2aW91c2x5IGFsbG9jYXRlZC4gKi8KKwkJaWYgKCpuZXdfYnNlcCA9
PSBOVUxMKSB7CisJCQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQkJKm5ld19ic2VwID0gYnNl
X2FsbG9jKCk7CisJCQlyZXR1cm4gKCpuZXdfYnNlcCAhPSBOVUxMKSA/IC1FX1JFUEVBVCA6CisJ
CQkJUkVURVJSKC1FTk9NRU0pOworCQl9CisKKwkJLyogUHV0IGl0IG9uIHRoZSBoZWFkIG9mIHRo
ZSBsaXN0LiAqLworCQlsaXN0X2FkZCgmKCgqbmV3X2JzZXApLT5saW5rKSwgYnNldCk7CisKKwkJ
Km5ld19ic2VwID0gTlVMTDsKKwl9CisKKwkvKiBBZGQgdGhlIHNpbmdsZSBvciBwYWlyLiAqLwor
CWJzZSA9IGxpc3RfZW50cnkoYnNldC0+bmV4dCwgYmxvY2tucl9zZXRfZW50cnksIGxpbmspOwor
CWlmIChiID09IE5VTEwpIHsKKwkJYnNlX3B1dF9zaW5nbGUoYnNlLCBhKTsKKwl9IGVsc2Ugewor
CQlic2VfcHV0X3BhaXIoYnNlLCBhLCBiKTsKKwl9CisKKwkvKiBJZiBuZXdfYnNlcCBpcyBub24t
TlVMTCB0aGVuIHRoZXJlIHdhcyBhbiBhbGxvY2F0aW9uIHJhY2UsIGZyZWUgdGhpcworCSAgIGNv
cHkuICovCisJaWYgKCpuZXdfYnNlcCAhPSBOVUxMKSB7CisJCWJzZV9mcmVlKCpuZXdfYnNlcCk7
CisJCSpuZXdfYnNlcCA9IE5VTEw7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIEFkZCBhbiBl
eHRlbnQgdG8gdGhlIGJsb2NrIHNldC4gIElmIHRoZSBsZW5ndGggaXMgMSwgaXQgaXMgdHJlYXRl
ZCBhcyBhCisgICBzaW5nbGUgYmxvY2sgKGUuZy4sIHJlaXNlcjRfc2V0X2FkZF9ibG9jaykuICov
CisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjExKSAqLworLyogQXVkaXRvciBub3RlOiBF
bnRpcmUgY2FsbCBjaGFpbiBjYW5ub3QgaG9sZCBhbnkgc3BpbmxvY2tzLCBiZWNhdXNlCisgICBr
bWFsbG9jIG1pZ2h0IHNjaGVkdWxlLiBUaGUgb25seSBleGNlcHRpb24gaXMgYXRvbSBzcGlubG9j
aywgd2hpY2ggaXMKKyAgIHByb3Blcmx5IGZyZWVkLiAqLworaW50CitibG9ja25yX3NldF9hZGRf
ZXh0ZW50KHR4bl9hdG9tICogYXRvbSwKKwkJICAgICAgIHN0cnVjdCBsaXN0X2hlYWQgKmJzZXQs
CisJCSAgICAgICBibG9ja25yX3NldF9lbnRyeSAqKiBuZXdfYnNlcCwKKwkJICAgICAgIGNvbnN0
IHJlaXNlcjRfYmxvY2tfbnIgKiBzdGFydCwKKwkJICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tf
bnIgKiBsZW4pCit7CisJYXNzZXJ0KCJqbWFjZC01MTAyIiwgc3RhcnQgIT0gTlVMTCAmJiBsZW4g
IT0gTlVMTCAmJiAqbGVuID4gMCk7CisJcmV0dXJuIGJsb2NrbnJfc2V0X2FkZChhdG9tLCBic2V0
LCBuZXdfYnNlcCwgc3RhcnQsCisJCQkgICAgICAgKmxlbiA9PSAxID8gTlVMTCA6IGxlbik7Cit9
CisKKy8qIEFkZCBhIGJsb2NrIHBhaXIgdG8gdGhlIGJsb2NrIHNldC4gSXQgYWRkcyBleGFjdGx5
IGEgcGFpciwgd2hpY2ggaXMgY2hlY2tlZAorICogYnkgYW4gYXNzZXJ0aW9uIHRoYXQgYm90aCBh
cmd1bWVudHMgYXJlIG5vdCBudWxsLiovCisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjEx
KSAqLworLyogQXVkaXRvciBub3RlOiBFbnRpcmUgY2FsbCBjaGFpbiBjYW5ub3QgaG9sZCBhbnkg
c3BpbmxvY2tzLCBiZWNhdXNlCisgICBrbWFsbG9jIG1pZ2h0IHNjaGVkdWxlLiBUaGUgb25seSBl
eGNlcHRpb24gaXMgYXRvbSBzcGlubG9jaywgd2hpY2ggaXMKKyAgIHByb3Blcmx5IGZyZWVkLiAq
LworaW50CitibG9ja25yX3NldF9hZGRfcGFpcih0eG5fYXRvbSAqIGF0b20sCisJCSAgICAgc3Ry
dWN0IGxpc3RfaGVhZCAqYnNldCwKKwkJICAgICBibG9ja25yX3NldF9lbnRyeSAqKiBuZXdfYnNl
cCwgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGEsCisJCSAgICAgY29uc3QgcmVpc2VyNF9ibG9j
a19uciAqIGIpCit7CisJYXNzZXJ0KCJqbWFjZC01MTAzIiwgYSAhPSBOVUxMICYmIGIgIT0gTlVM
TCk7CisJcmV0dXJuIGJsb2NrbnJfc2V0X2FkZChhdG9tLCBic2V0LCBuZXdfYnNlcCwgYSwgYik7
Cit9CisKKy8qIEluaXRpYWxpemUgc2xhYiBjYWNoZSBvZiBibG9ja25yX3NldF9lbnRyeSBvYmpl
Y3RzLiAqLworaW50IGJsb2NrbnJfc2V0X2luaXRfc3RhdGljKHZvaWQpCit7CisJYXNzZXJ0KCJp
bnRlbGZ4LTU1IiwgYmxvY2tucl9zZXRfc2xhYiA9PSBOVUxMKTsKKworCWJsb2NrbnJfc2V0X3Ns
YWIgPSBrbWVtX2NhY2hlX2NyZWF0ZSgiYmxvY2tucl9zZXRfZW50cnkiLAorCQkJCQkgICAgIHNp
emVvZihibG9ja25yX3NldF9lbnRyeSksCisJCQkJCSAgICAgMCwKKwkJCQkJICAgICBTTEFCX0hX
Q0FDSEVfQUxJR04gfAorCQkJCQkgICAgIFNMQUJfUkVDTEFJTV9BQ0NPVU5ULAorCQkJCQkgICAg
IE5VTEwpOworCisJaWYgKGJsb2NrbnJfc2V0X3NsYWIgPT0gTlVMTCkgeworCQlyZXR1cm4gUkVU
RVJSKC1FTk9NRU0pOworCX0KKworCXJldHVybiAwOworfQorCisvKiBEZXN0cm95IHNsYWIgY2Fj
aGUgb2YgYmxvY2tucl9zZXRfZW50cnkgb2JqZWN0cy4gKi8KK3ZvaWQgYmxvY2tucl9zZXRfZG9u
ZV9zdGF0aWModm9pZCkKK3sKKwlkZXN0cm95X3JlaXNlcjRfY2FjaGUoJmJsb2NrbnJfc2V0X3Ns
YWIpOworfQorCisvKiBJbml0aWFsaXplIGEgYmxvY2tucl9zZXQuICovCit2b2lkIGJsb2NrbnJf
c2V0X2luaXQoc3RydWN0IGxpc3RfaGVhZCAqYnNldCkKK3sKKwlJTklUX0xJU1RfSEVBRChic2V0
KTsKK30KKworLyogUmVsZWFzZSB0aGUgZW50cmllcyBvZiBhIGJsb2NrbnJfc2V0LiAqLwordm9p
ZCBibG9ja25yX3NldF9kZXN0cm95KHN0cnVjdCBsaXN0X2hlYWQgKmJzZXQpCit7CisJYmxvY2tu
cl9zZXRfZW50cnkgKmJzZTsKKworCXdoaWxlICghbGlzdF9lbXB0eShic2V0KSkgeworCQlic2Ug
PSBsaXN0X2VudHJ5KGJzZXQtPm5leHQsIGJsb2NrbnJfc2V0X2VudHJ5LCBsaW5rKTsKKwkJbGlz
dF9kZWxfaW5pdCgmYnNlLT5saW5rKTsKKwkJYnNlX2ZyZWUoYnNlKTsKKwl9Cit9CisKKy8qIE1l
cmdlIGJsb2NrbnJfc2V0IGVudHJpZXMgb3V0IG9mIEBmcm9tIGludG8gQGludG8uICovCisvKiBB
dWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjExKSAqLworLyogQXVkaXRvciBjb21tZW50czogVGhp
cyBtZXJnZSBkb2VzIG5vdCBrbm93IGlmIG1lcmdlZCBzZXRzIGNvbnRhaW4KKyAgIGJsb2NrcyBw
YWlycyAoQXMgZm9yIHdhbmRlcmVkIHNldHMpIG9yIGV4dGVudHMsIHNvIGl0IGNhbm5vdCByZWFs
bHkgbWVyZ2UKKyAgIG92ZXJsYXBwaW5nIHJhbmdlcyBpZiB0aGVyZSBpcyBzb21lLiBTbyBJIGJl
bGlldmUgaXQgbWF5IGxlYWQgdG8KKyAgIHNvbWUgYmxvY2tzIGJlaW5nIHByZXNlbnRlZCBzZXZl
cmFsIHRpbWVzIGluIG9uZSBibG9ja25yX3NldC4gVG8gaGVscAorICAgZGVidWdnaW5nIHN1Y2gg
cHJvYmxlbXMgaXQgbWlnaHQgaGVscCB0byBjaGVjayBmb3IgZHVwbGljYXRlIGVudHJpZXMgb24K
KyAgIGFjdHVhbCBwcm9jZXNzaW5nIG9mIHRoaXMgc2V0LiBUZXN0aW5nIHRoaXMga2luZCBvZiBz
dHVmZiByaWdodCBoZXJlIGlzCisgICBhbHNvIGNvbXBsaWNhdGVkIGJ5IHRoZSBmYWN0IHRoYXQg
dGhlc2Ugc2V0cyBhcmUgbm90IHNvcnRlZCBhbmQgZ29pbmcKKyAgIHRocm91Z2ggd2hvbGUgc2V0
IG9uIGVhY2ggZWxlbWVudCBhZGRpdGlvbiBpcyBnb2luZyB0byBiZSBDUFUtaGVhdnkgdGFzayAq
Lwordm9pZCBibG9ja25yX3NldF9tZXJnZShzdHJ1Y3QgbGlzdF9oZWFkICpmcm9tLCBzdHJ1Y3Qg
bGlzdF9oZWFkICppbnRvKQoreworCWJsb2NrbnJfc2V0X2VudHJ5ICpic2VfaW50byA9IE5VTEw7
CisKKwkvKiBJZiBAZnJvbSBpcyBlbXB0eSwgbm8gd29yayB0byBwZXJmb3JtLiAqLworCWlmIChs
aXN0X2VtcHR5KGZyb20pKQorCQlyZXR1cm47CisJLyogSWYgQGludG8gaXMgbm90IGVtcHR5LCB0
cnkgbWVyZ2luZyBwYXJ0aWFsLWVudHJpZXMuICovCisJaWYgKCFsaXN0X2VtcHR5KGludG8pKSB7
CisKKwkJLyogTmVpdGhlciBzZXQgaXMgZW1wdHksIHBvcCB0aGUgZnJvbnQgdG8gbWVtYmVycyBh
bmQgdHJ5IHRvCisJCSAgIGNvbWJpbmUgdGhlbS4gKi8KKwkJYmxvY2tucl9zZXRfZW50cnkgKmJz
ZV9mcm9tOworCQl1bnNpZ25lZCBpbnRvX2F2YWlsOworCisJCWJzZV9pbnRvID0gbGlzdF9lbnRy
eShpbnRvLT5uZXh0LCBibG9ja25yX3NldF9lbnRyeSwgbGluayk7CisJCWxpc3RfZGVsX2luaXQo
JmJzZV9pbnRvLT5saW5rKTsKKwkJYnNlX2Zyb20gPSBsaXN0X2VudHJ5KGZyb20tPm5leHQsIGJs
b2NrbnJfc2V0X2VudHJ5LCBsaW5rKTsKKwkJbGlzdF9kZWxfaW5pdCgmYnNlX2Zyb20tPmxpbmsp
OworCisJCS8qIENvbWJpbmUgc2luZ2xlcy4gKi8KKwkJZm9yIChpbnRvX2F2YWlsID0gYnNlX2F2
YWlsKGJzZV9pbnRvKTsKKwkJICAgICBpbnRvX2F2YWlsICE9IDAgJiYgYnNlX2Zyb20tPm5yX3Np
bmdsZXMgIT0gMDsKKwkJICAgICBpbnRvX2F2YWlsIC09IDEpIHsKKwkJCWJzZV9wdXRfc2luZ2xl
KGJzZV9pbnRvLAorCQkJCSAgICAgICAmYnNlX2Zyb20tPmVudHJpZXNbLS1ic2VfZnJvbS0+CisJ
CQkJCQkJICBucl9zaW5nbGVzXSk7CisJCX0KKworCQkvKiBDb21iaW5lIHBhaXJzLiAqLworCQlm
b3IgKDsgaW50b19hdmFpbCA+IDEgJiYgYnNlX2Zyb20tPm5yX3BhaXJzICE9IDA7CisJCSAgICAg
aW50b19hdmFpbCAtPSAyKSB7CisJCQlzdHJ1Y3QgYmxvY2tucl9wYWlyICpwYWlyID0KKwkJCQli
c2VfZ2V0X3BhaXIoYnNlX2Zyb20sIC0tYnNlX2Zyb20tPm5yX3BhaXJzKTsKKwkJCWJzZV9wdXRf
cGFpcihic2VfaW50bywgJnBhaXItPmEsICZwYWlyLT5iKTsKKwkJfQorCisJCS8qIElmIGJzZV9m
cm9tIGlzIGVtcHR5LCBkZWxldGUgaXQgbm93LiAqLworCQlpZiAoYnNlX2F2YWlsKGJzZV9mcm9t
KSA9PSBCTE9DS05SX1NFVF9FTlRSSUVTX05VTUJFUikgeworCQkJYnNlX2ZyZWUoYnNlX2Zyb20p
OworCQl9IGVsc2UgeworCQkJLyogT3RoZXJ3aXNlLCBic2VfaW50byBpcyBmdWxsIG9yIG5lYXJs
eSBmdWxsIChlLmcuLAorCQkJICAgaXQgY291bGQgaGF2ZSBvbmUgc2xvdCBhdmFpbCBhbmQgYnNl
X2Zyb20gaGFzIG9uZQorCQkJICAgcGFpciBsZWZ0KS4gIFB1c2ggaXQgYmFjayBvbnRvIHRoZSBs
aXN0LiAgYnNlX2Zyb20KKwkJCSAgIGJlY29tZXMgYnNlX2ludG8sIHdoaWNoIHdpbGwgYmUgdGhl
IG5ldyBwYXJ0aWFsLiAqLworCQkJbGlzdF9hZGQoJmJzZV9pbnRvLT5saW5rLCBpbnRvKTsKKwkJ
CWJzZV9pbnRvID0gYnNlX2Zyb207CisJCX0KKwl9CisKKwkvKiBTcGxpY2UgbGlzdHMgdG9nZXRo
ZXIuICovCisJbGlzdF9zcGxpY2VfaW5pdChmcm9tLCBpbnRvLT5wcmV2KTsKKworCS8qIEFkZCB0
aGUgcGFydGlhbCBlbnRyeSBiYWNrIHRvIHRoZSBoZWFkIG9mIHRoZSBsaXN0LiAqLworCWlmIChi
c2VfaW50byAhPSBOVUxMKQorCQlsaXN0X2FkZCgmYnNlX2ludG8tPmxpbmssIGludG8pOworfQor
CisvKiBJdGVyYXRlIG92ZXIgYWxsIGJsb2NrbnIgc2V0IGVsZW1lbnRzLiAqLworaW50IGJsb2Nr
bnJfc2V0X2l0ZXJhdG9yKHR4bl9hdG9tICphdG9tLCBzdHJ1Y3QgbGlzdF9oZWFkICpic2V0LAor
CQkJIGJsb2NrbnJfc2V0X2FjdG9yX2YgYWN0b3IsIHZvaWQgKmRhdGEsIGludCBkZWxldGUpCit7
CisKKwlibG9ja25yX3NldF9lbnRyeSAqZW50cnk7CisKKwlhc3NlcnQoInphbS00MjkiLCBhdG9t
ICE9IE5VTEwpOworCWFzc2VydCgiemFtLTQzMCIsIGF0b21faXNfcHJvdGVjdGVkKGF0b20pKTsK
Kwlhc3NlcnQoInphbS00MzEiLCBic2V0ICE9IDApOworCWFzc2VydCgiemFtLTQzMiIsIGFjdG9y
ICE9IE5VTEwpOworCisJZW50cnkgPSBsaXN0X2VudHJ5KGJzZXQtPm5leHQsIGJsb2NrbnJfc2V0
X2VudHJ5LCBsaW5rKTsKKwl3aGlsZSAoYnNldCAhPSAmZW50cnktPmxpbmspIHsKKwkJYmxvY2tu
cl9zZXRfZW50cnkgKnRtcCA9IGxpc3RfZW50cnkoZW50cnktPmxpbmsubmV4dCwgYmxvY2tucl9z
ZXRfZW50cnksIGxpbmspOworCQl1bnNpZ25lZCBpbnQgaTsKKwkJaW50IHJldDsKKworCQlmb3Ig
KGkgPSAwOyBpIDwgZW50cnktPm5yX3NpbmdsZXM7IGkrKykgeworCQkJcmV0ID0gYWN0b3IoYXRv
bSwgJmVudHJ5LT5lbnRyaWVzW2ldLCBOVUxMLCBkYXRhKTsKKworCQkJLyogV2UgY2FuJ3QgYnJl
YWsgYSBsb29wIGlmIGRlbGV0ZSBmbGFnIGlzIHNldC4gKi8KKwkJCWlmIChyZXQgIT0gMCAmJiAh
ZGVsZXRlKQorCQkJCXJldHVybiByZXQ7CisJCX0KKworCQlmb3IgKGkgPSAwOyBpIDwgZW50cnkt
Pm5yX3BhaXJzOyBpKyspIHsKKwkJCXN0cnVjdCBibG9ja25yX3BhaXIgKmFiOworCisJCQlhYiA9
IGJzZV9nZXRfcGFpcihlbnRyeSwgaSk7CisKKwkJCXJldCA9IGFjdG9yKGF0b20sICZhYi0+YSwg
JmFiLT5iLCBkYXRhKTsKKworCQkJaWYgKHJldCAhPSAwICYmICFkZWxldGUpCisJCQkJcmV0dXJu
IHJldDsKKwkJfQorCisJCWlmIChkZWxldGUpIHsKKwkJCWxpc3RfZGVsKCZlbnRyeS0+bGluayk7
CisJCQlic2VfZnJlZShlbnRyeSk7CisJCX0KKworCQllbnRyeSA9IHRtcDsKKwl9CisKKwlyZXR1
cm4gMDsKK30KKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5
bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0
YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVu
ZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9y
ZWlzZXI0L2NhcnJ5LmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvY2FycnkuYwotLS0gbGludXgt
NS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9jYXJyeS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAw
MDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9jYXJyeS5jCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDQ0MjIyMTA3ICswMTAwCkBAIC0wLDAgKzEsMTQwOCBAQAorLyogQ29weXJpZ2h0
IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQor
ICAgcmVpc2VyNC9SRUFETUUgKi8KKy8qIEZ1bmN0aW9ucyB0byAiY2FycnkiIHRyZWUgbW9kaWZp
Y2F0aW9uKHMpIHVwd2FyZC4gKi8KKy8qIFRyZWUgaXMgbW9kaWZpZWQgb25lIGxldmVsIGF0IGEg
dGltZS4gQXMgd2UgbW9kaWZ5IGEgbGV2ZWwgd2UgYWNjdW11bGF0ZSBhCisgICBzZXQgb2YgY2hh
bmdlcyB0aGF0IG5lZWQgdG8gYmUgcHJvcGFnYXRlZCB0byB0aGUgbmV4dCBsZXZlbC4gIFdlIG1h
bmFnZQorICAgbm9kZSBsb2NraW5nIHN1Y2ggdGhhdCBhbnkgc2VhcmNoZXMgdGhhdCBjb2xsaWRl
IHdpdGggY2FycnlpbmcgYXJlCisgICByZXN0YXJ0ZWQsIGZyb20gdGhlIHJvb3QgaWYgbmVjZXNz
YXJ5LgorCisgICBJbnNlcnRpb24gb2YgYSBuZXcgaXRlbSBtYXkgcmVzdWx0IGluIGl0ZW1zIGJl
aW5nIG1vdmVkIGFtb25nIG5vZGVzIGFuZAorICAgdGhpcyByZXF1aXJlcyB0aGUgZGVsaW1pdGlu
ZyBrZXkgdG8gYmUgdXBkYXRlZCBhdCB0aGUgbGVhc3QgY29tbW9uIHBhcmVudAorICAgb2YgdGhl
IG5vZGVzIG1vZGlmaWVkIHRvIHByZXNlcnZlIHNlYXJjaCB0cmVlIGludmFyaWFudHMuIEFsc28s
IGluc2VydGlvbgorICAgbWF5IHJlcXVpcmUgYWxsb2NhdGlvbiBvZiBhIG5ldyBub2RlLiBBIHBv
aW50ZXIgdG8gdGhlIG5ldyBub2RlIGhhcyB0byBiZQorICAgaW5zZXJ0ZWQgaW50byBzb21lIG5v
ZGUgb24gdGhlIHBhcmVudCBsZXZlbCwgZXRjLgorCisgICBUcmVlIGNhcnJ5aW5nIGlzIG1lYW50
IHRvIGJlIGFuYWxvZ291cyB0byBhcml0aG1ldGljIGNhcnJ5aW5nLgorCisgICBBIGNhcnJ5IG9w
ZXJhdGlvbiBpcyBhbHdheXMgYXNzb2NpYXRlZCB3aXRoIHNvbWUgbm9kZSAoJmNhcnJ5X25vZGUp
LgorCisgICBDYXJyeSBwcm9jZXNzIHN0YXJ0cyB3aXRoIHNvbWUgaW5pdGlhbCBzZXQgb2Ygb3Bl
cmF0aW9ucyB0byBiZSBwZXJmb3JtZWQKKyAgIGFuZCBhbiBpbml0aWFsIHNldCBvZiBhbHJlYWR5
IGxvY2tlZCBub2Rlcy4gIE9wZXJhdGlvbnMgYXJlIHBlcmZvcm1lZCBvbmUKKyAgIGJ5IG9uZS4g
UGVyZm9ybWluZyBlYWNoIHNpbmdsZSBvcGVyYXRpb24gaGFzIGZvbGxvd2luZyBwb3NzaWJsZSBl
ZmZlY3RzOgorCisgICAgLSBjb250ZW50IG9mIGNhcnJ5IG5vZGUgYXNzb2NpYXRlZCB3aXRoIG9w
ZXJhdGlvbiBpcyBtb2RpZmllZAorICAgIC0gbmV3IGNhcnJ5IG5vZGVzIGFyZSBsb2NrZWQgYW5k
IGludm9sdmVkIGludG8gY2FycnkgcHJvY2VzcyBvbiB0aGlzIGxldmVsCisgICAgLSBuZXcgY2Fy
cnkgb3BlcmF0aW9ucyBhcmUgcG9zdGVkIHRvIHRoZSBuZXh0IGxldmVsCisKKyAgIEFmdGVyIGFs
bCBjYXJyeSBvcGVyYXRpb25zIG9uIHRoaXMgbGV2ZWwgYXJlIGRvbmUsIHByb2Nlc3MgaXMgcmVw
ZWF0ZWQgZm9yCisgICB0aGUgYWNjdW11bGF0ZWQgc2VxdWVuY2Ugb24gY2Fycnkgb3BlcmF0aW9u
cyBmb3IgdGhlIG5leHQgbGV2ZWwuIFRoaXMKKyAgIHN0YXJ0cyBieSB0cnlpbmcgdG8gbG9jayAo
aW4gbGVmdCB0byByaWdodCBvcmRlcikgYWxsIGNhcnJ5IG5vZGVzCisgICBhc3NvY2lhdGVkIHdp
dGggY2Fycnkgb3BlcmF0aW9ucyBvbiB0aGUgcGFyZW50IGxldmVsLiBBZnRlciB0aGlzLCB3ZSBk
ZWNpZGUKKyAgIHdoZXRoZXIgbW9yZSBub2RlcyBhcmUgcmVxdWlyZWQgb24gdGhlIGxlZnQgb2Yg
YWxyZWFkeSBsb2NrZWQgc2V0LiBJZiBzbywKKyAgIGFsbCBsb2NrcyB0YWtlbiBvbiB0aGUgcGFy
ZW50IGxldmVsIGFyZSByZWxlYXNlZCwgbmV3IGNhcnJ5IG5vZGVzIGFyZQorICAgYWRkZWQsIGFu
ZCBsb2NraW5nIHByb2Nlc3MgcmVwZWF0cy4KKworICAgSXQgbWF5IGhhcHBlbiB0aGF0IGJhbGFu
Y2luZyBwcm9jZXNzIGZhaWxzIG93aW5nIHRvIHVucmVjb3ZlcmFibGUgZXJyb3Igb24KKyAgIHNv
bWUgb2YgdXBwZXIgbGV2ZWxzIG9mIGEgdHJlZSAocG9zc2libGUgY2F1c2VzIGFyZSBpbyBlcnJv
ciwgZmFpbHVyZSB0bworICAgYWxsb2NhdGUgbmV3IG5vZGUsIGV0Yy4pLiBJbiB0aGlzIGNhc2Ug
d2Ugc2hvdWxkIHVubW91bnQgdGhlIGZpbGVzeXN0ZW0sCisgICByZWJvb3RpbmcgaWYgaXQgaXMg
dGhlIHJvb3QsIGFuZCBwb3NzaWJseSBhZHZpc2UgdGhlIHVzZSBvZiBmc2NrLgorCisgICBVU0FH
RToKKworICAgIGludCBzb21lX3RyZWVfb3BlcmF0aW9uKCB6bm9kZSAqbm9kZSwgLi4uICkKKyAg
ICB7CisgICAgICAgLy8gQWxsb2NhdGUgb24gYSBzdGFjayBwb29sIG9mIGNhcnJ5IG9iamVjdHM6
IG9wZXJhdGlvbnMgYW5kIG5vZGVzLgorICAgICAgIC8vIE1vc3QgY2FycnkgcHJvY2Vzc2VzIHdp
bGwgb25seSB0YWtlIG9iamVjdHMgZnJvbSBoZXJlLCB3aXRob3V0CisgICAgICAgLy8gZHluYW1p
YyBhbGxvY2F0aW9uLgorCitJIGZlZWwgdW5lYXN5IGFib3V0IHRoaXMgcG9vbC4gIEl0IGFkZHMg
dG8gY29kZSBjb21wbGV4aXR5LCBJIHVuZGVyc3RhbmQgd2h5IGl0CitleGlzdHMsIGJ1dC4uLi4g
LUhhbnMKKworICAgICAgIGNhcnJ5X3Bvb2wgIHBvb2w7CisgICAgICAgY2FycnlfbGV2ZWwgbG93
ZXN0X2xldmVsOworICAgICAgIGNhcnJ5X29wICAgKm9wOworCisgICAgICAgaW5pdF9jYXJyeV9w
b29sKCAmcG9vbCApOworICAgICAgIGluaXRfY2FycnlfbGV2ZWwoICZsb3dlc3RfbGV2ZWwsICZw
b29sICk7CisKKyAgICAgICAvLyBvcGVyYXRpb24gbWF5IGJlIG9uZSBvZjoKKyAgICAgICAvLyAg
IENPUF9JTlNFUlQgICAgLS0tIGluc2VydCBuZXcgaXRlbSBpbnRvIG5vZGUKKyAgICAgICAvLyAg
IENPUF9DVVQgICAgICAgLS0tIHJlbW92ZSBwYXJ0IG9mIG9yIHdob2xlIG5vZGUKKyAgICAgICAv
LyAgIENPUF9QQVNURSAgICAgLS0tIGluY3JlYXNlIHNpemUgb2YgaXRlbQorICAgICAgIC8vICAg
Q09QX0RFTEVURSAgICAtLS0gZGVsZXRlIHBvaW50ZXIgZnJvbSBwYXJlbnQgbm9kZQorICAgICAg
IC8vICAgQ09QX1VQREFURSAgICAtLS0gdXBkYXRlIGRlbGltaXRpbmcga2V5IGluIGxlYXN0Cisg
ICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBjb21tb24gYW5jZXN0b3Igb2YgdHdvCisKKyAg
ICAgICBvcCA9IHJlaXNlcjRfcG9zdF9jYXJyeSggJmxvd2VzdF9sZXZlbCwgb3BlcmF0aW9uLCBu
b2RlLCAwICk7CisgICAgICAgaWYoIElTX0VSUiggb3AgKSB8fCAoIG9wID09IE5VTEwgKSApIHsK
KwkJaGFuZGxlIGVycm9yCisgICAgICAgfSBlbHNlIHsKKwkvLyBmaWxsIGluIHJlbWFpbmluZyBm
aWVsZHMgaW4gQG9wLCBhY2NvcmRpbmcgdG8gY2FycnkuaDpjYXJyeV9vcAorCQlyZXN1bHQgPSBj
YXJyeSgmbG93ZXN0X2xldmVsLCBOVUxMKTsKKyAgICAgICB9CisgICAgICAgZG9uZV9jYXJyeV9w
b29sKCZwb29sKTsKKyAgICB9CisKKyAgIFdoZW4geW91IGFyZSBpbXBsZW1lbnRpbmcgbm9kZSBw
bHVnaW4gbWV0aG9kIHRoYXQgcGFydGljaXBhdGVzIGluIGNhcnJ5CisgICAoc2hpZnRpbmcsIGlu
c2VydGlvbiwgZGVsZXRpb24sIGV0Yy4pLCBkbyB0aGUgZm9sbG93aW5nOgorCisgICBpbnQgZm9v
X25vZGVfbWV0aG9kKHpub2RlICogbm9kZSwgLi4uLCBjYXJyeV9sZXZlbCAqIHRvZG8pCisgICB7
CisgICAgICAgY2Fycnlfb3AgICAqb3A7CisKKyAgICAgICAuLi4uCisKKwkvLyBub3RlLCB0aGF0
IGxhc3QgYXJndW1lbnQgdG8gcmVpc2VyNF9wb3N0X2NhcnJ5KCkgaXMgbm9uLW51bGwKKwkvLyBo
ZXJlLCBiZWNhdXNlIEBvcCBpcyB0byBiZSBhcHBsaWVkIHRvIHRoZSBwYXJlbnQgb2YgQG5vZGUs
IHJhdGhlcgorCS8vIHRoYW4gdG8gdGhlIEBub2RlIGl0c2VsZiBhcyBpbiB0aGUgcHJldmlvdXMg
Y2FzZS4KKworICAgICAgIG9wID0gbm9kZV9wb3N0X2NhcnJ5KHRvZG8sIG9wZXJhdGlvbiwgbm9k
ZSwgMSk7CisgICAgICAgLy8gZmlsbCBpbiByZW1haW5pbmcgZmllbGRzIGluIEBvcCwgYWNjb3Jk
aW5nIHRvIGNhcnJ5Lmg6Y2Fycnlfb3AKKworICAgICAgIC4uLi4KKworICAgfQorCisgICBCQVRD
SElORzoKKworICAgT25lIG9mIHRoZSBtYWluIGFkdmFudGFnZXMgb2YgbGV2ZWwtYnktbGV2ZWwg
YmFsYW5jaW5nIGltcGxlbWVudGVkIGhlcmUgaXMKKyAgIGFiaWxpdHkgdG8gYmF0Y2ggdXBkYXRl
cyBvbiBhIHBhcmVudCBsZXZlbCBhbmQgdG8gcGVmb3JtIHRoZW0gbW9yZQorICAgZWZmaWNpZW50
bHkgYXMgYSByZXN1bHQuCisKKyAgIERlc2NyaXB0aW9uIFRvIEJlIERvbmUgKFRCRCkuCisKKyAg
IERJRkZJQ1VMVElFUyBBTkQgU1VCVExFIFBPSU5UUzoKKworICAgMS4gY29tcGxleCBwbHVtYmlu
ZyBpcyByZXF1aXJlZCwgYmVjYXVzZToKKworICAgICAgIGEuIGVmZmVjdGl2ZSBhbGxvY2F0aW9u
IHRocm91Z2ggcG9vbHMgaXMgbmVlZGVkCisKKyAgICAgICBiLiB0YXJnZXQgb2Ygb3BlcmF0aW9u
IGlzIG5vdCBleGFjdGx5IGtub3duIHdoZW4gb3BlcmF0aW9uIGlzCisgICAgICAgcG9zdGVkLiBU
aGlzIGlzIHdvcmtlZCBhcm91bmQgdGhyb3VnaCBiaXRmaWVsZHMgaW4gJmNhcnJ5X25vZGUgYW5k
CisgICAgICAgbG9naWMgaW4gbG9ja19jYXJyeV9ub2RlKCkKKworICAgICAgIGMuIG9mIGludGVy
YWN0aW9uIHdpdGggbG9ja2luZyBjb2RlOiBub2RlIHNob3VsZCBiZSBhZGRlZCBpbnRvIHNpYmxp
bmcKKyAgICAgICBsaXN0IHdoZW4gcG9pbnRlciB0byBpdCBpcyBpbnNlcnRlZCBpbnRvIGl0cyBw
YXJlbnQsIHdoaWNoIGlzIHNvbWUgdGltZQorICAgICAgIGFmdGVyIG5vZGUgd2FzIGNyZWF0ZWQu
IEJldHdlZW4gdGhlc2UgbW9tZW50cywgbm9kZSBpcyBzb21ld2hhdCBpbgorICAgICAgIHN1c3Bl
bmRlZCBzdGF0ZSBhbmQgaXMgb25seSByZWdpc3RlcmVkIGluIHRoZSBjYXJyeSBsaXN0cworCisg
ICAgMi4gd2hvbGUgYmFsYW5jaW5nIGxvZ2ljIGlzIGltcGxlbWVudGVkIGhlcmUsIGluIHBhcnRp
Y3VsYXIsIGluc2VydGlvbgorICAgIGxvZ2ljIGlzIGNvZGVkIGluIG1ha2Vfc3BhY2UoKS4KKwor
ICAgIDMuIHNwZWNpYWwgY2FzZXMgbGlrZSBpbnNlcnRpb24gKHJlaXNlcjRfYWRkX3RyZWVfcm9v
dCgpKSBvciBkZWxldGlvbgorICAgIChyZWlzZXI0X2tpbGxfdHJlZV9yb290KCkpIG9mIHRyZWUg
cm9vdCBhbmQgbW9ycGhpbmcgb2YgcGFzdGUgaW50byBpbnNlcnQKKyAgICAoaW5zZXJ0X3Bhc3Rl
KCkpIGhhdmUgdG8gYmUgaGFuZGxlZC4KKworICAgIDQuIHRoZXJlIGlzIG5vbi10cml2aWFsIGlu
dGVyZGVwZW5kZW5jeSBiZXR3ZWVuIGFsbG9jYXRpb24gb2YgbmV3IG5vZGVzCisgICAgYW5kIGFs
bW9zdCBldmVyeXRoaW5nIGVsc2UuIFRoaXMgaXMgbWFpbmx5IGR1ZSB0byB0aGUgKDEuYykgYWJv
dmUuIEkgc2hhbGwKKyAgICB3cml0ZSBhYm91dCB0aGlzIGxhdGVyLgorCisqLworCisjaW5jbHVk
ZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAia2V5LmgiCisjaW5j
bHVkZSAiY29vcmQuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAi
cGx1Z2luL2l0ZW0vZXh0ZW50LmgiCisjaW5jbHVkZSAicGx1Z2luL25vZGUvbm9kZS5oIgorI2lu
Y2x1ZGUgImpub2RlLmgiCisjaW5jbHVkZSAiem5vZGUuaCIKKyNpbmNsdWRlICJ0cmVlX21vZC5o
IgorI2luY2x1ZGUgInRyZWVfd2Fsay5oIgorI2luY2x1ZGUgImJsb2NrX2FsbG9jLmgiCisjaW5j
bHVkZSAicG9vbC5oIgorI2luY2x1ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJjYXJyeS5oIgorI2lu
Y2x1ZGUgImNhcnJ5X29wcy5oIgorI2luY2x1ZGUgInN1cGVyLmgiCisjaW5jbHVkZSAicmVpc2Vy
NC5oIgorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKworLyogbGV2ZWwgbG9ja2luZy91bmxv
Y2tpbmcgKi8KK3N0YXRpYyBpbnQgbG9ja19jYXJyeV9sZXZlbChjYXJyeV9sZXZlbCAqIGxldmVs
KTsKK3N0YXRpYyB2b2lkIHVubG9ja19jYXJyeV9sZXZlbChjYXJyeV9sZXZlbCAqIGxldmVsLCBp
bnQgZmFpbHVyZSk7CitzdGF0aWMgdm9pZCBkb25lX2NhcnJ5X2xldmVsKGNhcnJ5X2xldmVsICog
bGV2ZWwpOworc3RhdGljIHZvaWQgdW5sb2NrX2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBsZXZl
bCwgY2Fycnlfbm9kZSAqIG5vZGUsIGludCBmYWlsKTsKKworaW50IGxvY2tfY2Fycnlfbm9kZShj
YXJyeV9sZXZlbCAqIGxldmVsLCBjYXJyeV9ub2RlICogbm9kZSk7CitpbnQgbG9ja19jYXJyeV9u
b2RlX3RhaWwoY2Fycnlfbm9kZSAqIG5vZGUpOworCisvKiBjYXJyeSBwcm9jZXNzaW5nIHByb3Bl
ciAqLworc3RhdGljIGludCBjYXJyeV9vbl9sZXZlbChjYXJyeV9sZXZlbCAqIGRvaW5nLCBjYXJy
eV9sZXZlbCAqIHRvZG8pOworCitzdGF0aWMgY2Fycnlfb3AgKmFkZF9vcChjYXJyeV9sZXZlbCAq
IGxldmVsLCBwb29sX29yZGVyaW5nIG9yZGVyLAorCQkJY2Fycnlfb3AgKiByZWZlcmVuY2UpOwor
CisvKiBoYW5kbGVycyBmb3IgY2Fycnkgb3BlcmF0aW9ucy4gKi8KKworc3RhdGljIHZvaWQgZmF0
YWxfY2FycnlfZXJyb3IoY2FycnlfbGV2ZWwgKiBkb2luZywgaW50IGVjb2RlKTsKK3N0YXRpYyBp
bnQgYWRkX25ld19yb290KGNhcnJ5X2xldmVsICogbGV2ZWwsIGNhcnJ5X25vZGUgKiBub2RlLCB6
bm9kZSAqIGZha2UpOworCitzdGF0aWMgdm9pZCBwcmludF9sZXZlbChjb25zdCBjaGFyICpwcmVm
aXgsIGNhcnJ5X2xldmVsICogbGV2ZWwpOworCisjaWYgUkVJU0VSNF9ERUJVRwordHlwZWRlZiBl
bnVtIHsKKwlDQVJSWV9UT0RPLAorCUNBUlJZX0RPSU5HCit9IGNhcnJ5X3F1ZXVlX3N0YXRlOwor
c3RhdGljIGludCBjYXJyeV9sZXZlbF9pbnZhcmlhbnQoY2FycnlfbGV2ZWwgKiBsZXZlbCwgY2Fy
cnlfcXVldWVfc3RhdGUgc3RhdGUpOworI2VuZGlmCisKKy8qIG1haW4gZW50cnkgcG9pbnQgZm9y
IHRyZWUgYmFsYW5jaW5nLgorCisgICBUcmVlIGNhcnJ5IHBlcmZvcm1zIG9wZXJhdGlvbnMgZnJv
bSBAZG9pbmcgYW5kIHdoaWxlIGRvaW5nIHNvIGFjY3VtdWxhdGVzCisgICBpbmZvcm1hdGlvbiBh
Ym91dCBvcGVyYXRpb25zIHRvIGJlIHBlcmZvcm1lZCBvbiB0aGUgbmV4dCBsZXZlbCAoImNhcnJp
ZWQiCisgICB0byB0aGUgcGFyZW50IGxldmVsKS4gQ2FycmllZCBvcGVyYXRpb25zIGFyZSBwZXJm
b3JtZWQsIGNhdXNpbmcgcG9zc2libHkKKyAgIG1vcmUgb3BlcmF0aW9ucyB0byBiZSBjYXJyaWVk
IHVwd2FyZCBldGMuIGNhcnJ5KCkgdGFrZXMgY2FyZSBhYm91dAorICAgbG9ja2luZyBhbmQgcGlu
bmluZyB6bm9kZXMgd2hpbGUgb3BlcmF0aW5nIG9uIHRoZW0uCisKKyAgIEZvciB1c2FnZSwgc2Vl
IGNvbW1lbnQgYXQgdGhlIHRvcCBvZiBmcy9yZWlzZXI0L2NhcnJ5LmMKKworKi8KK2ludCByZWlz
ZXI0X2NhcnJ5KGNhcnJ5X2xldmVsICogZG9pbmcgLyogc2V0IG9mIGNhcnJ5IG9wZXJhdGlvbnMg
dG8gYmUKKwkJCQkgICAgICAgKiBwZXJmb3JtZWQgKi8gLAorCQkgIGNhcnJ5X2xldmVsICogZG9u
ZSAgLyogc2V0IG9mIG5vZGVzLCBhbHJlYWR5IHBlcmZvcm1lZAorCQkJCSAgICAgICAqICBhdCB0
aGUgcHJldmlvdXMgbGV2ZWwuCisJCQkJICAgICAgICogTlVMTCBpbiBtb3N0IGNhc2VzICovKQor
eworCWludCByZXN1bHQgPSAwOworCWdmcF90IG9sZF9tYXNrOworCS8qIHF1ZXVlIG9mIG5ldyBy
ZXF1ZXN0cyAqLworCWNhcnJ5X2xldmVsICp0b2RvOworCU9OX0RFQlVHKFNUT1JFX0NPVU5URVJT
KTsKKworCWFzc2VydCgibmlraXRhLTg4OCIsIGRvaW5nICE9IE5VTEwpOworCUJVR19PTihkb25l
ICE9IE5VTEwpOworCisJdG9kbyA9IGRvaW5nICsgMTsKKwlpbml0X2NhcnJ5X2xldmVsKHRvZG8s
IGRvaW5nLT5wb29sKTsKKworCS8qIHF1ZXVlIG9mIHJlcXVlc3RzIHByZWZvcm1lZCBvbiB0aGUg
cHJldmlvdXMgbGV2ZWwgKi8KKwlkb25lID0gdG9kbyArIDE7CisJaW5pdF9jYXJyeV9sZXZlbChk
b25lLCBkb2luZy0+cG9vbCk7CisJLyoKKwkgKiBOT1RFOiBXZSBhcmUgbm90IGFsbG93ZWQgdG8g
ZmFpbCBpbiB0aGUgbG9vcCBiZWxvdy4KKwkgKiBJbmNvbXBsZXRlIGNhcnJ5IChldmVuIGlmIGNh
cnJ5X29uX2xldmVsIGlzIGNvbXBsZXRlKQorCSAqIGNhbiBsZWF2ZSB0aGUgdHJlZSBpbiBhbiBp
bmNvbnNpc3RlbnQgc3RhdGUgKGJyb2tlbgorCSAqIG9yZGVyIG9mIGtleXMgaW4gYSBub2RlLCBl
dGMpLgorCSAqLworCW9sZF9tYXNrID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5nZnBfbWFzazsK
KwlnZXRfY3VycmVudF9jb250ZXh0KCktPmdmcF9tYXNrIHw9IF9fR0ZQX05PRkFJTDsKKworCS8q
IGl0ZXJhdGUgdW50aWwgdGhlcmUgaXMgbm90aGluZyBtb3JlIHRvIGRvICovCisJd2hpbGUgKHJl
c3VsdCA9PSAwICYmIGRvaW5nLT5vcHNfbnVtID4gMCkgeworCQljYXJyeV9sZXZlbCAqdG1wOwor
CisJCS8qIGF0IHRoaXMgcG9pbnQgQGRvbmUgaXMgbG9ja2VkLiAqLworCQkvKiByZXBlYXQgbG9j
ay9kby91bmxvY2sgd2hpbGUKKworCQkgICAoMSkgbG9ja19jYXJyeV9sZXZlbCgpIGZhaWxzIGR1
ZSB0byBkZWFkbG9jayBhdm9pZGFuY2UsIG9yCisKKwkJICAgKDIpIGNhcnJ5X29uX2xldmVsKCkg
ZGVjaWRlcyB0aGF0IG1vcmUgbm9kZXMgaGF2ZSB0bworCQkgICBiZSBpbnZvbHZlZC4KKworCQkg
ICAoMykgc29tZSB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIHdoaWxlIGJhbGFuY2luZyBvbiB0
aGUKKwkJICAgdXBwZXIgbGV2ZWxzLiBJbiB0aGlzIGNhc2UgYWxsIGNoYW5nZXMgYXJlIHJvbGxl
ZCBiYWNrLgorCisJCSAqLworCQl3aGlsZSAoMSkgeworCQkJcmVzdWx0ID0gbG9ja19jYXJyeV9s
ZXZlbChkb2luZyk7CisJCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCQkvKiBwZXJmb3JtIG9wZXJh
dGlvbnMgZnJvbSBAZG9pbmcgYW5kCisJCQkJICAgYWNjdW11bGF0ZSBuZXcgcmVxdWVzdHMgaW4g
QHRvZG8gKi8KKwkJCQlyZXN1bHQgPSBjYXJyeV9vbl9sZXZlbChkb2luZywgdG9kbyk7CisJCQkJ
aWYgKHJlc3VsdCA9PSAwKQorCQkJCQlicmVhazsKKwkJCQllbHNlIGlmIChyZXN1bHQgIT0gLUVf
UkVQRUFUIHx8CisJCQkJCSAhZG9pbmctPnJlc3RhcnRhYmxlKSB7CisJCQkJCXdhcm5pbmcoIm5p
a2l0YS0xMDQzIiwKKwkJCQkJCSJGYXRhbCBlcnJvciBkdXJpbmcgY2Fycnk6ICVpIiwKKwkJCQkJ
CXJlc3VsdCk7CisJCQkJCXByaW50X2xldmVsKCJkb25lIiwgZG9uZSk7CisJCQkJCXByaW50X2xl
dmVsKCJkb2luZyIsIGRvaW5nKTsKKwkJCQkJcHJpbnRfbGV2ZWwoInRvZG8iLCB0b2RvKTsKKwkJ
CQkJLyogZG8gc29tZSByb3VnaCBzdHVmZiBsaWtlIGFib3J0aW5nCisJCQkJCSAgIGFsbCBwZW5k
aW5nIHRyYW5zY3Jhc2hlcyBhbmQgdGh1cworCQkJCQkgICBwdXNoaW5nIHRyZWUgYmFjayB0byB0
aGUgY29uc2lzdGVudAorCQkJCQkgICBzdGF0ZS4gQWx0ZXJuYXR2ZWx5LCBqdXN0IHBhbmljLgor
CQkJCQkgKi8KKwkJCQkJZmF0YWxfY2FycnlfZXJyb3IoZG9pbmcsIHJlc3VsdCk7CisJCQkJCXJl
dHVybiByZXN1bHQ7CisJCQkJfQorCQkJfSBlbHNlIGlmIChyZXN1bHQgIT0gLUVfUkVQRUFUKSB7
CisJCQkJZmF0YWxfY2FycnlfZXJyb3IoZG9pbmcsIHJlc3VsdCk7CisJCQkJcmV0dXJuIHJlc3Vs
dDsKKwkJCX0KKwkJCXVubG9ja19jYXJyeV9sZXZlbChkb2luZywgMSk7CisJCX0KKwkJLyogYXQg
dGhpcyBwb2ludCBAZG9uZSBjYW4gYmUgc2FmZWx5IHVubG9ja2VkICovCisJCWRvbmVfY2Fycnlf
bGV2ZWwoZG9uZSk7CisKKwkJLyogY3ljbGljYWxseSBzaGlmdCBxdWV1ZXMgKi8KKwkJdG1wID0g
ZG9uZTsKKwkJZG9uZSA9IGRvaW5nOworCQlkb2luZyA9IHRvZG87CisJCXRvZG8gPSB0bXA7CisJ
CWluaXRfY2FycnlfbGV2ZWwodG9kbywgZG9pbmctPnBvb2wpOworCisJCS8qIGdpdmUgb3RoZXIg
dGhyZWFkcyBjaGFuY2UgdG8gcnVuICovCisJCXJlaXNlcjRfcHJlZW1wdF9wb2ludCgpOworCX0K
KwlnZXRfY3VycmVudF9jb250ZXh0KCktPmdmcF9tYXNrID0gb2xkX21hc2s7CisJZG9uZV9jYXJy
eV9sZXZlbChkb25lKTsKKworCS8qIGFsbCBjb3VudGVycywgYnV0IHhfcmVmcyBzaG91bGQgcmVt
YWluIHRoZSBzYW1lLiB4X3JlZnMgY2FuIGNoYW5nZQorCSAgIG93aW5nIHRvIHRyYW5zYWN0aW9u
IG1hbmFnZXIgKi8KKwlPTl9ERUJVRyhDSEVDS19DT1VOVEVSUyk7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworLyogcGVyZm9ybSBjYXJyeSBvcGVyYXRpb25zIG9uIGdpdmVuIGxldmVsLgorCisgICBP
cHRpbWl6YXRpb25zIHByb3Bvc2VkIGJ5IHBvb2g6CisKKyAgICgxKSBkb24ndCBsb2NrIGFsbCBu
b2RlcyBmcm9tIHF1ZXVlIGF0IHRoZSBzYW1lIHRpbWUuIExvY2sgbm9kZXMgbGF6aWx5IGFzCisg
ICByZXF1aXJlZDsKKworICAgKDIpIHVubG9jayBub2RlIGlmIHRoZXJlIGFyZSBubyBtb3JlIG9w
ZXJhdGlvbnMgdG8gYmUgcGVyZm9ybWVkIHVwb24gaXQgYW5kCisgICBub2RlIGRpZG4ndCBhZGQg
YW55IG9wZXJhdGlvbiB0byBAdG9kby4gVGhpcyBjYW4gYmUgaW1wbGVtZW50ZWQgYnkKKyAgIGF0
dGFjaGluZyB0byBlYWNoIG5vZGUgdHdvIGNvdW50ZXJzOiBjb3VudGVyIG9mIG9wZXJhaW9ucyB3
b3JraW5nIG9uIHRoaXMKKyAgIG5vZGUgYW5kIGNvdW50ZXIgYW5kIG9wZXJhdGlvbnMgY2Fycmll
ZCB1cHdhcmQgZnJvbSB0aGlzIG5vZGUuCisKKyovCitzdGF0aWMgaW50IGNhcnJ5X29uX2xldmVs
KGNhcnJ5X2xldmVsICogZG9pbmcJLyogcXVldWUgb2YgY2Fycnkgb3BlcmF0aW9ucyB0bworCQkJ
CQkJICogZG8gb24gdGhpcyBsZXZlbCAqLyAsCisJCQkgIGNhcnJ5X2xldmVsICogdG9kbwkvKiBx
dWV1ZSB3aGVyZSBuZXcgY2FycnkKKwkJCQkJCSAqIG9wZXJhdGlvbnMgdG8gYmUgcGVyZm9ybWVk
IG9uCisJCQkJCQkgKiB0aGUgKiBwYXJlbnQgbGV2ZWwgYXJlCisJCQkJCQkgKiBhY2N1bXVsYXRl
ZCBkdXJpbmcgQGRvaW5nCisJCQkJCQkgKiBwcm9jZXNzaW5nLiAqLyApCit7CisJaW50IHJlc3Vs
dDsKKwlpbnQgKCpmKSAoY2Fycnlfb3AgKiwgY2FycnlfbGV2ZWwgKiwgY2FycnlfbGV2ZWwgKik7
CisJY2Fycnlfb3AgKm9wOworCWNhcnJ5X29wICp0bXBfb3A7CisKKwlhc3NlcnQoIm5pa2l0YS0x
MDM0IiwgZG9pbmcgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTAzNSIsIHRvZG8gIT0gTlVM
TCk7CisKKwkvKiBAZG9pbmctPm5vZGVzIGFyZSBsb2NrZWQuICovCisKKwkvKiBUaGlzIGZ1bmN0
aW9uIGNhbiBiZSBzcGxpdCBpbnRvIHR3byBwaGFzZXM6IGFuYWx5c2lzIGFuZCBtb2RpZmljYXRp
b24KKworCSAgIEFuYWx5c2lzIGNhbGN1bGF0ZXMgcHJlY2lzZWx5IHdoYXQgaXRlbXMgc2hvdWxk
IGJlIG1vdmVkIGJldHdlZW4KKwkgICBub2Rlcy4gVGhpcyBpbmZvcm1hdGlvbiBpcyBnYXRoZXJl
ZCBpbiBzb21lIHN0cnVjdHVyZXMgYXR0YWNoZWQgdG8KKwkgICBlYWNoIGNhcnJ5X25vZGUgaW4g
YSBAZG9pbmcgcXVldWUuIEFuYWx5c2lzIGFsc28gZGV0ZXJtaW5lcyB3aGV0aGVyCisJICAgbmV3
IG5vZGVzIGFyZSB0byBiZSBhbGxvY2F0ZWQgZXRjLgorCisJICAgQWZ0ZXIgYW5hbHlzaXMgaXMg
Y29tcGxldGVkLCBhY3R1YWwgbW9kaWZpY2F0aW9uIGlzIHBlcmZvcm1lZC4gSGVyZQorCSAgIHdl
IGNhbiB0YWtlIGFkdmFudGFnZSBvZiAiYmF0Y2ggbW9kaWZpY2F0aW9uIjogaWYgdGhlcmUgYXJl
IHNldmVyYWwKKwkgICBvcGVyYXRpb25zIGFjdGluZyBvbiB0aGUgc2FtZSBub2RlLCBtb2RpZmlj
YXRpb25zIGNhbiBiZSBwZXJmb3JtZWQKKwkgICBtb3JlIGVmZmljaWVudGx5IHdoZW4gYmF0Y2hl
ZCB0b2dldGhlci4KKworCSAgIEFib3ZlIGlzIGFuIG9wdGltaXphdGlvbiBsZWZ0IGZvciB0aGUg
ZnV0dXJlLgorCSAqLworCS8qIEltcG9ydGFudCwgYnV0IGRlbGF5ZWQgb3B0aW1pemF0aW9uOiBp
dCdzIHBvc3NpYmxlIHRvIGJhdGNoCisJICAgb3BlcmF0aW9ucyB0b2dldGhlciBhbmQgcGVyZm9y
bSB0aGVtIG1vcmUgZWZmaWNpZW50bHkgYXMgYQorCSAgIHJlc3VsdC4gRm9yIGV4YW1wbGUsIGRl
bGV0aW9uIG9mIHNldmVyYWwgbmVpZ2hib3JpbmcgaXRlbXMgZnJvbSBhCisJICAgbm9kZSBjYW4g
YmUgY29udmVydGVkIHRvIGEgc2luZ2xlIC0+Y3V0KCkgb3BlcmF0aW9uLgorCisJICAgQmVmb3Jl
IHByb2Nlc3NpbmcgcXVldWUsIGl0IHNob3VsZCBiZSBzY2FubmVkIGFuZCAibWVyZ2VhYmxlIgor
CSAgIG9wZXJhdGlvbnMgbWVyZ2VkLgorCSAqLworCXJlc3VsdCA9IDA7CisJZm9yX2FsbF9vcHMo
ZG9pbmcsIG9wLCB0bXBfb3ApIHsKKwkJY2Fycnlfb3Bjb2RlIG9wY29kZTsKKworCQlhc3NlcnQo
Im5pa2l0YS0xMDQxIiwgb3AgIT0gTlVMTCk7CisJCW9wY29kZSA9IG9wLT5vcDsKKwkJYXNzZXJ0
KCJuaWtpdGEtMTA0MiIsIG9wLT5vcCA8IENPUF9MQVNUX09QKTsKKwkJZiA9IG9wX2Rpc3BhdGNo
X3RhYmxlW29wLT5vcF0uaGFuZGxlcjsKKwkJcmVzdWx0ID0gZihvcCwgZG9pbmcsIHRvZG8pOwor
CQkvKiBsb2NraW5nIGNhbiBmYWlsIHdpdGggLUVfUkVQRUFULiBBbnkgZGlmZmVyZW50IGVycm9y
IGlzIGZhdGFsCisJCSAgIGFuZCB3aWxsIGJlIGhhbmRsZWQgYnkgZmF0YWxfY2FycnlfZXJyb3Io
KSBzbGVkZ2VoYW1tZXIuCisJCSAqLworCQlpZiAocmVzdWx0ICE9IDApCisJCQlicmVhazsKKwl9
CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWNhcnJ5X3BsdWdpbl9pbmZvIGluZm87CisJCWNhcnJ5
X25vZGUgKnNjYW47CisJCWNhcnJ5X25vZGUgKnRtcF9zY2FuOworCisJCWluZm8uZG9pbmcgPSBk
b2luZzsKKwkJaW5mby50b2RvID0gdG9kbzsKKworCQlhc3NlcnQoIm5pa2l0YS0zMDAyIiwKKwkJ
ICAgICAgIGNhcnJ5X2xldmVsX2ludmFyaWFudChkb2luZywgQ0FSUllfRE9JTkcpKTsKKwkJZm9y
X2FsbF9ub2Rlcyhkb2luZywgc2NhbiwgdG1wX3NjYW4pIHsKKwkJCXpub2RlICpub2RlOworCisJ
CQlub2RlID0gcmVpc2VyNF9jYXJyeV9yZWFsKHNjYW4pOworCQkJYXNzZXJ0KCJuaWtpdGEtMjU0
NyIsIG5vZGUgIT0gTlVMTCk7CisJCQlpZiAobm9kZV9pc19lbXB0eShub2RlKSkgeworCQkJCXJl
c3VsdCA9CisJCQkJICAgIG5vZGVfcGx1Z2luX2J5X25vZGUobm9kZSktPgorCQkJCSAgICBwcmVw
YXJlX3JlbW92YWwobm9kZSwgJmluZm8pOworCQkJCWlmIChyZXN1bHQgIT0gMCkKKwkJCQkJYnJl
YWs7CisJCQl9CisJCX0KKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogcG9zdCBjYXJyeSBv
cGVyYXRpb24KKworICAgVGhpcyBpcyBtYWluIGZ1bmN0aW9uIHVzZWQgYnkgZXh0ZXJuYWwgY2Fy
cnkgY2xpZW50czogbm9kZSBsYXlvdXQgcGx1Z2lucworICAgYW5kIHRyZWUgb3BlcmF0aW9ucyB0
byBjcmVhdGUgbmV3IGNhcnJ5IG9wZXJhdGlvbiB0byBiZSBwZXJmb3JtZWQgb24gc29tZQorICAg
bGV2ZWwuCisKKyAgIE5ldyBvcGVyYXRpb24gd2lsbCBiZSBpbmNsdWRlZCBpbiB0aGUgQGxldmVs
IHF1ZXVlLiBUbyBhY3R1YWxseSBwZXJmb3JtIGl0LAorICAgY2FsbCBjYXJyeSggbGV2ZWwsIC4u
LiApLiBUaGlzIGZ1bmN0aW9uIHRha2VzIHdyaXRlIGxvY2sgb24gQG5vZGUuIENhcnJ5CisgICBt
YW5hZ2VzIGFsbCBpdHMgbG9ja3MgYnkgaXRzZWxmLCBkb24ndCB3b3JyeSBhYm91dCB0aGlzLgor
CisgICBUaGlzIGZ1bmN0aW9uIGFkZHMgb3BlcmF0aW9uIGFuZCBub2RlIGF0IHRoZSBlbmQgb2Yg
dGhlIHF1ZXVlLiBJdCBpcyB1cCB0bworICAgY2FsbGVyIHRvIGd1YXJhbnRlZSBwcm9wZXIgb3Jk
ZXJpbmcgb2Ygbm9kZSBxdWV1ZS4KKworKi8KK2NhcnJ5X29wICogcmVpc2VyNF9wb3N0X2NhcnJ5
KGNhcnJ5X2xldmVsICogbGV2ZWwgLyogcXVldWUgd2hlcmUgbmV3IG9wZXJhdGlvbgorCQkJCQkJ
ICAgKiBpcyB0byBiZSBwb3N0ZWQgYXQgKi8gLAorCQkJICAgICAgY2Fycnlfb3Bjb2RlIG9wIC8q
IG9wY29kZSBvZiBvcGVyYXRpb24gKi8gLAorCQkJICAgICAgem5vZGUgKiBub2RlCS8qIG5vZGUg
b24gd2hpY2ggdGhpcyBvcGVyYXRpb24KKwkJCQkJCSAqIHdpbGwgb3BlcmF0ZSAqLyAsCisJCQkg
ICAgICBpbnQgYXBwbHlfdG9fcGFyZW50X3AgLyogd2hldGhlciBvcGVyYXRpb24gd2lsbAorCQkJ
CQkJICAgICAqIG9wZXJhdGUgZGlyZWN0bHkgb24gQG5vZGUKKwkJCQkJCSAgICAgKiBvciBvbiBp
dCBwYXJlbnQuICovKQoreworCWNhcnJ5X29wICpyZXN1bHQ7CisJY2Fycnlfbm9kZSAqY2hpbGQ7
CisKKwlhc3NlcnQoIm5pa2l0YS0xMDQ2IiwgbGV2ZWwgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtMTc4OCIsIHpub2RlX2lzX3dyaXRlX2xvY2tlZChub2RlKSk7CisKKwlyZXN1bHQgPSBhZGRf
b3AobGV2ZWwsIFBPT0xPX0xBU1QsIE5VTEwpOworCWlmIChJU19FUlIocmVzdWx0KSkKKwkJcmV0
dXJuIHJlc3VsdDsKKwljaGlsZCA9IHJlaXNlcjRfYWRkX2NhcnJ5KGxldmVsLCBQT09MT19MQVNU
LCBOVUxMKTsKKwlpZiAoSVNfRVJSKGNoaWxkKSkgeworCQlyZWlzZXI0X3Bvb2xfZnJlZSgmbGV2
ZWwtPnBvb2wtPm9wX3Bvb2wsICZyZXN1bHQtPmhlYWRlcik7CisJCXJldHVybiAoY2Fycnlfb3Ag
KikgY2hpbGQ7CisJfQorCXJlc3VsdC0+bm9kZSA9IGNoaWxkOworCXJlc3VsdC0+b3AgPSBvcDsK
KwljaGlsZC0+cGFyZW50ID0gYXBwbHlfdG9fcGFyZW50X3A7CisJaWYgKFpGX0lTU0VUKG5vZGUs
IEpOT0RFX09SUEhBTikpCisJCWNoaWxkLT5sZWZ0X2JlZm9yZSA9IDE7CisJY2hpbGQtPm5vZGUg
PSBub2RlOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGluaXRpYWxpemUgY2FycnkgcXVldWUg
Ki8KK3ZvaWQgaW5pdF9jYXJyeV9sZXZlbChjYXJyeV9sZXZlbCAqIGxldmVsIC8qIGxldmVsIHRv
IGluaXRpYWxpemUgKi8gLAorCQkgICAgICBjYXJyeV9wb29sICogcG9vbAkvKiBwb29sIEBsZXZl
bCB3aWxsIGFsbG9jYXRlIG9iamVjdHMKKwkJCQkJICogZnJvbSAqLyApCit7CisJYXNzZXJ0KCJu
aWtpdGEtMTA0NSIsIGxldmVsICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTk2NyIsIHBvb2wg
IT0gTlVMTCk7CisKKwltZW1zZXQobGV2ZWwsIDAsIHNpemVvZiAqbGV2ZWwpOworCWxldmVsLT5w
b29sID0gcG9vbDsKKworCUlOSVRfTElTVF9IRUFEKCZsZXZlbC0+bm9kZXMpOworCUlOSVRfTElT
VF9IRUFEKCZsZXZlbC0+b3BzKTsKK30KKworLyogYWxsb2NhdGUgY2FycnkgcG9vbCBhbmQgaW5p
dGlhbGl6ZSBwb29scyB3aXRoaW4gcXVldWUgKi8KK2NhcnJ5X3Bvb2wgKmluaXRfY2FycnlfcG9v
bChpbnQgc2l6ZSkKK3sKKwljYXJyeV9wb29sICpwb29sOworCisJYXNzZXJ0KCIiLCBzaXplID49
IHNpemVvZihjYXJyeV9wb29sKSArIDMgKiBzaXplb2YoY2FycnlfbGV2ZWwpKTsKKwlwb29sID0g
a21hbGxvYyhzaXplLCByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJaWYgKHBvb2wgPT0g
TlVMTCkKKwkJcmV0dXJuIEVSUl9QVFIoUkVURVJSKC1FTk9NRU0pKTsKKworCXJlaXNlcjRfaW5p
dF9wb29sKCZwb29sLT5vcF9wb29sLCBzaXplb2YoY2Fycnlfb3ApLCBDQVJSSUVTX1BPT0xfU0la
RSwKKwkJCSAgKGNoYXIgKilwb29sLT5vcCk7CisJcmVpc2VyNF9pbml0X3Bvb2woJnBvb2wtPm5v
ZGVfcG9vbCwgc2l6ZW9mKGNhcnJ5X25vZGUpLAorCQkJICBOT0RFU19MT0NLRURfUE9PTF9TSVpF
LCAoY2hhciAqKXBvb2wtPm5vZGUpOworCXJldHVybiBwb29sOworfQorCisvKiBmaW5pc2ggd2l0
aCBxdWV1ZSBwb29scyAqLwordm9pZCBkb25lX2NhcnJ5X3Bvb2woY2FycnlfcG9vbCAqIHBvb2wv
KiBwb29sIHRvIGRlc3Ryb3kgKi8pCit7CisJcmVpc2VyNF9kb25lX3Bvb2woJnBvb2wtPm9wX3Bv
b2wpOworCXJlaXNlcjRfZG9uZV9wb29sKCZwb29sLT5ub2RlX3Bvb2wpOworCWtmcmVlKHBvb2wp
OworfQorCisvKiBhZGQgbmV3IGNhcnJ5IG5vZGUgdG8gdGhlIEBsZXZlbC4KKworICAgUmV0dXJu
cyBwb2ludGVyIHRvIHRoZSBuZXcgY2Fycnkgbm9kZSBhbGxvY2F0ZWQgZnJvbSBwb29sLiAgSXQn
cyB1cCB0bworICAgY2FsbGVycyB0byBtYWludGFpbiBwcm9wZXIgb3JkZXIgaW4gdGhlIEBsZXZl
bC4gQXNzdW1wdGlvbiBpcyB0aGF0IGlmIGNhcnJ5CisgICBub2RlcyBvbiBvbmUgbGV2ZWwgYXJl
IGFscmVhZHkgc29ydGVkIGFuZCBtb2RpZmljYXRpb25zIGFyZSBwZXJvZm9ybWVkIGZyb20KKyAg
IGxlZnQgdG8gcmlnaHQsIGNhcnJ5IG5vZGVzIGFkZGVkIG9uIHRoZSBwYXJlbnQgbGV2ZWwgd2ls
bCBiZSBvcmRlcmVkCisgICBhdXRvbWF0aWNhbGx5LiBUbyBjb250cm9sIG9yZGVyaW5nIHVzZSBA
b3JkZXIgYW5kIEByZWZlcmVuY2UgcGFyYW1ldGVycy4KKworKi8KK2NhcnJ5X25vZGUgKnJlaXNl
cjRfYWRkX2NhcnJ5X3NraXAoY2FycnlfbGV2ZWwgKiBsZXZlbAkvKiAmY2FycnlfbGV2ZWwgdG8g
YWRkCisJCQkJCQkJICogbm9kZSB0byAqLyAsCisJCQkJICAgcG9vbF9vcmRlcmluZyBvcmRlcgkv
KiB3aGVyZSB0byBpbnNlcnQ6CisJCQkJCQkJICogYXQgdGhlIGJlZ2lubmluZyBvZgorCQkJCQkJ
CSAqIEBsZXZlbCwKKwkJCQkJCQkgKiBiZWZvcmUgQHJlZmVyZW5jZSwKKwkJCQkJCQkgKiBhZnRl
ciBAcmVmZXJlbmNlLAorCQkJCQkJCSAqIGF0IHRoZSBlbmQgb2YgQGxldmVsCisJCQkJCQkJICov
ICwKKwkJCQkgICBjYXJyeV9ub2RlICogcmVmZXJlbmNlLyogcmVmZXJlbmNlIG5vZGUgZm9yCisJ
CQkJCQkJICAqIGluc2VydGlvbiAqLykKK3sKKwlPTl9ERUJVRyhjYXJyeV9ub2RlICogb3JpZ19y
ZWYgPSByZWZlcmVuY2UpOworCisJaWYgKG9yZGVyID09IFBPT0xPX0JFRk9SRSkgeworCQlyZWZl
cmVuY2UgPSBmaW5kX2xlZnRfY2FycnkocmVmZXJlbmNlLCBsZXZlbCk7CisJCWlmIChyZWZlcmVu
Y2UgPT0gTlVMTCkKKwkJCXJlZmVyZW5jZSA9IGxpc3RfZW50cnkobGV2ZWwtPm5vZGVzLm5leHQs
IGNhcnJ5X25vZGUsCisJCQkJCSAgICAgICBoZWFkZXIubGV2ZWxfbGlua2FnZSk7CisJCWVsc2UK
KwkJCXJlZmVyZW5jZSA9IGxpc3RfZW50cnkocmVmZXJlbmNlLT5oZWFkZXIubGV2ZWxfbGlua2Fn
ZS5uZXh0LAorCQkJCQkgICAgICAgY2Fycnlfbm9kZSwgaGVhZGVyLmxldmVsX2xpbmthZ2UpOwor
CX0gZWxzZSBpZiAob3JkZXIgPT0gUE9PTE9fQUZURVIpIHsKKwkJcmVmZXJlbmNlID0gZmluZF9y
aWdodF9jYXJyeShyZWZlcmVuY2UsIGxldmVsKTsKKwkJaWYgKHJlZmVyZW5jZSA9PSBOVUxMKQor
CQkJcmVmZXJlbmNlID0gbGlzdF9lbnRyeShsZXZlbC0+bm9kZXMucHJldiwgY2Fycnlfbm9kZSwK
KwkJCQkJICAgICAgIGhlYWRlci5sZXZlbF9saW5rYWdlKTsKKwkJZWxzZQorCQkJcmVmZXJlbmNl
ID0gbGlzdF9lbnRyeShyZWZlcmVuY2UtPmhlYWRlci5sZXZlbF9saW5rYWdlLnByZXYsCisJCQkJ
CSAgICAgICBjYXJyeV9ub2RlLCBoZWFkZXIubGV2ZWxfbGlua2FnZSk7CisJfQorCWFzc2VydCgi
bmlraXRhLTIyMDkiLAorCSAgICAgICBlcmdvKG9yaWdfcmVmICE9IE5VTEwsCisJCSAgICByZWlz
ZXI0X2NhcnJ5X3JlYWwocmVmZXJlbmNlKSA9PQorCQkgICAgcmVpc2VyNF9jYXJyeV9yZWFsKG9y
aWdfcmVmKSkpOworCXJldHVybiByZWlzZXI0X2FkZF9jYXJyeShsZXZlbCwgb3JkZXIsIHJlZmVy
ZW5jZSk7Cit9CisKK2NhcnJ5X25vZGUgKnJlaXNlcjRfYWRkX2NhcnJ5KGNhcnJ5X2xldmVsICog
bGV2ZWwsICAgLyogY2FycnlfbGV2ZWwgdG8gYWRkCisJCQkJCQkJbm9kZSB0byAqLworCQkJICAg
ICAgcG9vbF9vcmRlcmluZyBvcmRlciwgICAvKiB3aGVyZSB0byBpbnNlcnQ6CisJCQkJCQkgICAg
ICAqIGF0IHRoZSBiZWdpbm5pbmcgb2YKKwkJCQkJCSAgICAgICogQGxldmVsOworCQkJCQkJICAg
ICAgKiBiZWZvcmUgQHJlZmVyZW5jZTsKKwkJCQkJCSAgICAgICogYWZ0ZXIgQHJlZmVyZW5jZTsK
KwkJCQkJCSAgICAgICogYXQgdGhlIGVuZCBvZiBAbGV2ZWwKKwkJCQkJCSAgICAgICovCisJCQkg
ICAgICBjYXJyeV9ub2RlICogcmVmZXJlbmNlIC8qIHJlZmVyZW5jZSBub2RlIGZvcgorCQkJCQkJ
ICAgICAgKiBpbnNlcnRpb24gKi8pCit7CisJY2Fycnlfbm9kZSAqcmVzdWx0OworCisJcmVzdWx0
ID0KKwkgICAgKGNhcnJ5X25vZGUgKikgcmVpc2VyNF9hZGRfb2JqKCZsZXZlbC0+cG9vbC0+bm9k
ZV9wb29sLAorCQkJCQkgICAmbGV2ZWwtPm5vZGVzLAorCQkJCQkgICBvcmRlciwgJnJlZmVyZW5j
ZS0+aGVhZGVyKTsKKwlpZiAoIUlTX0VSUihyZXN1bHQpICYmIChyZXN1bHQgIT0gTlVMTCkpCisJ
CSsrbGV2ZWwtPm5vZGVzX251bTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIGFkZCBu
ZXcgY2Fycnkgb3BlcmF0aW9uIHRvIHRoZSBAbGV2ZWwuCisgKgorICogUmV0dXJucyBwb2ludGVy
IHRvIHRoZSBuZXcgY2Fycnkgb3BlcmF0aW9ucyBhbGxvY2F0ZWQgZnJvbSBwb29sLiBJdCdzIHVw
IHRvCisgKiBjYWxsZXJzIHRvIG1haW50YWluIHByb3BlciBvcmRlciBpbiB0aGUgQGxldmVsLiBU
byBjb250cm9sIG9yZGVyaW5nIHVzZQorICogQG9yZGVyIGFuZCBAcmVmZXJlbmNlIHBhcmFtZXRl
cnMuCisgKi8KK3N0YXRpYyBjYXJyeV9vcCAqYWRkX29wKGNhcnJ5X2xldmVsICogbGV2ZWwsIC8q
ICZjYXJyeV9sZXZlbCB0byBhZGQgbm9kZSB0byAqLworCQkJcG9vbF9vcmRlcmluZyBvcmRlciwg
Lyogd2hlcmUgdG8gaW5zZXJ0OgorCQkJCQkgICAgICAqIGF0IHRoZSBiZWdpbm5pbmcgb2YgQGxl
dmVsOworCQkJCQkgICAgICAqIGJlZm9yZSBAcmVmZXJlbmNlOworCQkJCQkgICAgICAqIGFmdGVy
IEByZWZlcmVuY2U7CisJCQkJCSAgICAgICogYXQgdGhlIGVuZCBvZiBAbGV2ZWwgKi8KKwkJCWNh
cnJ5X29wICogcmVmZXJlbmNlIC8qIHJlZmVyZW5jZSBub2RlIGZvciBpbnNlcnRpb24gKi8pCit7
CisJY2Fycnlfb3AgKnJlc3VsdDsKKworCXJlc3VsdCA9CisJICAgIChjYXJyeV9vcCAqKSByZWlz
ZXI0X2FkZF9vYmooJmxldmVsLT5wb29sLT5vcF9wb29sLCAmbGV2ZWwtPm9wcywKKwkJCQkJIG9y
ZGVyLCAmcmVmZXJlbmNlLT5oZWFkZXIpOworCWlmICghSVNfRVJSKHJlc3VsdCkgJiYgKHJlc3Vs
dCAhPSBOVUxMKSkKKwkJKytsZXZlbC0+b3BzX251bTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisv
KioKKyAqIFJldHVybiBub2RlIG9uIHRoZSByaWdodCBvZiB3aGljaCBAbm9kZSB3YXMgY3JlYXRl
ZC4KKyAqCisgKiBFYWNoIG5vZGUgaXMgY3JlYXRlZCBvbiB0aGUgcmlnaHQgb2Ygc29tZSBleGlz
dGluZyBub2RlIChvciBpdCBpcyBuZXcgcm9vdCwKKyAqIHdoaWNoIGlzIHNwZWNpYWwgY2FzZSBu
b3QgaGFuZGxlZCBoZXJlKS4KKyAqCisgKiBAbm9kZSBpcyBuZXcgbm9kZSBjcmVhdGVkIG9uIHNv
bWUgbGV2ZWwsIGJ1dCBub3QgeWV0IGluc2VydGVkIGludG8gaXRzCisgKiBwYXJlbnQsIGl0IGhh
cyBjb3JyZXNwb25kaW5nIGJpdCAoSk5PREVfT1JQSEFOKSBzZXQgaW4genN0YXRlLgorICovCitz
dGF0aWMgY2Fycnlfbm9kZSAqZmluZF9iZWdldHRpbmdfYnJvdGhlcihjYXJyeV9ub2RlICogbm9k
ZSwvKiBub2RlIHRvIHN0YXJ0CisJCQkJCQkJCXNlYXJjaCBmcm9tICovCisJCQkJCSAgY2Fycnlf
bGV2ZWwgKiBraW4gVU5VU0VEX0FSRworCQkJCQkgICAgICAgICAgICAgICAgICAgIC8qIGxldmVs
IHRvIHNjYW4gKi8pCit7CisJY2Fycnlfbm9kZSAqc2NhbjsKKworCWFzc2VydCgibmlraXRhLTE2
MTQiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE2MTUiLCBraW4gIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtMTYxNiIsIExPQ0tfQ05UX0dUWihyd19sb2NrZWRfdHJlZSkpOwor
CWFzc2VydCgibmlraXRhLTE2MTkiLCBlcmdvKHJlaXNlcjRfY2FycnlfcmVhbChub2RlKSAhPSBO
VUxMLAorCQkJCSAgIFpGX0lTU0VUKHJlaXNlcjRfY2FycnlfcmVhbChub2RlKSwKKwkJCQkJICAg
IEpOT0RFX09SUEhBTikpKTsKKwlmb3IgKHNjYW4gPSBub2RlOzsKKwkgICAgIHNjYW4gPSBsaXN0
X2VudHJ5KHNjYW4tPmhlYWRlci5sZXZlbF9saW5rYWdlLnByZXYsIGNhcnJ5X25vZGUsCisJCQkg
ICAgICAgaGVhZGVyLmxldmVsX2xpbmthZ2UpKSB7CisJCWFzc2VydCgibmlraXRhLTE2MTciLCAm
a2luLT5ub2RlcyAhPSAmc2Nhbi0+aGVhZGVyLmxldmVsX2xpbmthZ2UpOworCQlpZiAoKHNjYW4t
Pm5vZGUgIT0gbm9kZS0+bm9kZSkgJiYKKwkJICAgICFaRl9JU1NFVChzY2FuLT5ub2RlLCBKTk9E
RV9PUlBIQU4pKSB7CisJCQlhc3NlcnQoIm5pa2l0YS0xNjE4IiwgcmVpc2VyNF9jYXJyeV9yZWFs
KHNjYW4pICE9IE5VTEwpOworCQkJYnJlYWs7CisJCX0KKwl9CisJcmV0dXJuIHNjYW47Cit9CisK
K3N0YXRpYyBjbXBfdAorY2Fycnlfbm9kZV9jbXAoY2FycnlfbGV2ZWwgKiBsZXZlbCwgY2Fycnlf
bm9kZSAqIG4xLCBjYXJyeV9ub2RlICogbjIpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjE5OSIsIG4x
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTIyMDAiLCBuMiAhPSBOVUxMKTsKKworCWlmIChu
MSA9PSBuMikKKwkJcmV0dXJuIEVRVUFMX1RPOworCXdoaWxlICgxKSB7CisJCW4xID0gY2Fycnlf
bm9kZV9uZXh0KG4xKTsKKwkJaWYgKGNhcnJ5X25vZGVfZW5kKGxldmVsLCBuMSkpCisJCQlyZXR1
cm4gR1JFQVRFUl9USEFOOworCQlpZiAobjEgPT0gbjIpCisJCQlyZXR1cm4gTEVTU19USEFOOwor
CX0KKwlpbXBvc3NpYmxlKCJuaWtpdGEtMjIwMSIsICJFbmQgb2YgbGV2ZWwgcmVhY2hlZCIpOwor
fQorCitjYXJyeV9ub2RlICpmaW5kX2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBsZXZlbCwgY29u
c3Qgem5vZGUgKiBub2RlKQoreworCWNhcnJ5X25vZGUgKnNjYW47CisJY2Fycnlfbm9kZSAqdG1w
X3NjYW47CisKKwlhc3NlcnQoIm5pa2l0YS0yMjAyIiwgbGV2ZWwgIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtMjIwMyIsIG5vZGUgIT0gTlVMTCk7CisKKwlmb3JfYWxsX25vZGVzKGxldmVsLCBz
Y2FuLCB0bXBfc2NhbikgeworCQlpZiAocmVpc2VyNF9jYXJyeV9yZWFsKHNjYW4pID09IG5vZGUp
CisJCQlyZXR1cm4gc2NhbjsKKwl9CisJcmV0dXJuIE5VTEw7Cit9CisKK3pub2RlICpyZWlzZXI0
X2NhcnJ5X3JlYWwoY29uc3QgY2Fycnlfbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJuaWtpdGEt
MzA2MSIsIG5vZGUgIT0gTlVMTCk7CisKKwlyZXR1cm4gbm9kZS0+bG9ja19oYW5kbGUubm9kZTsK
K30KKworY2Fycnlfbm9kZSAqaW5zZXJ0X2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBkb2luZywg
Y2FycnlfbGV2ZWwgKiB0b2RvLAorCQkJICAgICAgY29uc3Qgem5vZGUgKiBub2RlKQoreworCWNh
cnJ5X25vZGUgKmJhc2U7CisJY2Fycnlfbm9kZSAqc2NhbjsKKwljYXJyeV9ub2RlICp0bXBfc2Nh
bjsKKwljYXJyeV9ub2RlICpwcm9qOworCisJYmFzZSA9IGZpbmRfY2Fycnlfbm9kZShkb2luZywg
bm9kZSk7CisJYXNzZXJ0KCJuaWtpdGEtMjIwNCIsIGJhc2UgIT0gTlVMTCk7CisKKwlmb3JfYWxs
X25vZGVzKHRvZG8sIHNjYW4sIHRtcF9zY2FuKSB7CisJCXByb2ogPSBmaW5kX2NhcnJ5X25vZGUo
ZG9pbmcsIHNjYW4tPm5vZGUpOworCQlhc3NlcnQoIm5pa2l0YS0yMjA1IiwgcHJvaiAhPSBOVUxM
KTsKKwkJaWYgKGNhcnJ5X25vZGVfY21wKGRvaW5nLCBwcm9qLCBiYXNlKSAhPSBMRVNTX1RIQU4p
CisJCQlicmVhazsKKwl9CisJcmV0dXJuIHNjYW47Cit9CisKK3N0YXRpYyBjYXJyeV9ub2RlICph
ZGRfY2FycnlfYXRwbGFjZShjYXJyeV9sZXZlbCAqIGRvaW5nLCBjYXJyeV9sZXZlbCAqIHRvZG8s
CisJCQkJICAgICB6bm9kZSAqIG5vZGUpCit7CisJY2Fycnlfbm9kZSAqcmVmZXJlbmNlOworCisJ
YXNzZXJ0KCJuaWtpdGEtMjk5NCIsIGRvaW5nICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI5
OTUiLCB0b2RvICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI5OTYiLCBub2RlICE9IE5VTEwp
OworCisJcmVmZXJlbmNlID0gaW5zZXJ0X2NhcnJ5X25vZGUoZG9pbmcsIHRvZG8sIG5vZGUpOwor
CWFzc2VydCgibmlraXRhLTI5OTciLCByZWZlcmVuY2UgIT0gTlVMTCk7CisKKwlyZXR1cm4gcmVp
c2VyNF9hZGRfY2FycnkodG9kbywgUE9PTE9fQkVGT1JFLCByZWZlcmVuY2UpOworfQorCisvKiBs
aWtlIHJlaXNlcjRfcG9zdF9jYXJyeSgpLCBidXQgZGVzaWduZWQgdG8gYmUgY2FsbGVkIGZyb20g
bm9kZSBwbHVnaW4KKyAgIG1ldGhvZHMuIFRoaXMgZnVuY3Rpb24gaXMgZGlmZmVyZW50IGZyb20g
cmVpc2VyNF9wb3N0X2NhcnJ5KCkgaW4gdGhhdCBpdAorICAgZmluZHMgcHJvcGVyIHBsYWNlIHRv
IGluc2VydCBub2RlIGluIHRoZSBxdWV1ZS4gKi8KK2NhcnJ5X29wICpub2RlX3Bvc3RfY2Fycnko
Y2FycnlfcGx1Z2luX2luZm8gKiBpbmZvCS8qIGNhcnJ5IHBhcmFtZXRlcnMKKwkJCQkJCQkgKiBw
YXNzZWQgZG93biB0byBub2RlCisJCQkJCQkJICogcGx1Z2luICovICwKKwkJCSAgY2Fycnlfb3Bj
b2RlIG9wIC8qIG9wY29kZSBvZiBvcGVyYXRpb24gKi8gLAorCQkJICB6bm9kZSAqIG5vZGUJLyog
bm9kZSBvbiB3aGljaCB0aGlzCisJCQkJCSAqIG9wZXJhdGlvbiB3aWxsIG9wZXJhdGUgKi8gLAor
CQkJICBpbnQgYXBwbHlfdG9fcGFyZW50X3AJLyogd2hldGhlciBvcGVyYXRpb24gd2lsbAorCQkJ
CQkJICogb3BlcmF0ZSBkaXJlY3RseSBvbiBAbm9kZQorCQkJCQkJICogb3Igb24gaXQgcGFyZW50
LiAqLyApCit7CisJY2Fycnlfb3AgKnJlc3VsdDsKKwljYXJyeV9ub2RlICpjaGlsZDsKKworCWFz
c2VydCgibmlraXRhLTIyMDciLCBpbmZvICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTIyMDgi
LCBpbmZvLT50b2RvICE9IE5VTEwpOworCisJaWYgKGluZm8tPmRvaW5nID09IE5VTEwpCisJCXJl
dHVybiByZWlzZXI0X3Bvc3RfY2FycnkoaW5mby0+dG9kbywgb3AsIG5vZGUsCisJCQkJCSAgYXBw
bHlfdG9fcGFyZW50X3ApOworCisJcmVzdWx0ID0gYWRkX29wKGluZm8tPnRvZG8sIFBPT0xPX0xB
U1QsIE5VTEwpOworCWlmIChJU19FUlIocmVzdWx0KSkKKwkJcmV0dXJuIHJlc3VsdDsKKwljaGls
ZCA9IGFkZF9jYXJyeV9hdHBsYWNlKGluZm8tPmRvaW5nLCBpbmZvLT50b2RvLCBub2RlKTsKKwlp
ZiAoSVNfRVJSKGNoaWxkKSkgeworCQlyZWlzZXI0X3Bvb2xfZnJlZSgmaW5mby0+dG9kby0+cG9v
bC0+b3BfcG9vbCwgJnJlc3VsdC0+aGVhZGVyKTsKKwkJcmV0dXJuIChjYXJyeV9vcCAqKSBjaGls
ZDsKKwl9CisJcmVzdWx0LT5ub2RlID0gY2hpbGQ7CisJcmVzdWx0LT5vcCA9IG9wOworCWNoaWxk
LT5wYXJlbnQgPSBhcHBseV90b19wYXJlbnRfcDsKKwlpZiAoWkZfSVNTRVQobm9kZSwgSk5PREVf
T1JQSEFOKSkKKwkJY2hpbGQtPmxlZnRfYmVmb3JlID0gMTsKKwljaGlsZC0+bm9kZSA9IG5vZGU7
CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogbG9jayBhbGwgY2Fycnkgbm9kZXMgaW4gQGxldmVs
ICovCitzdGF0aWMgaW50IGxvY2tfY2FycnlfbGV2ZWwoY2FycnlfbGV2ZWwgKiBsZXZlbC8qIGxl
dmVsIHRvIGxvY2sgKi8pCit7CisJaW50IHJlc3VsdDsKKwljYXJyeV9ub2RlICpub2RlOworCWNh
cnJ5X25vZGUgKnRtcF9ub2RlOworCisJYXNzZXJ0KCJuaWtpdGEtODgxIiwgbGV2ZWwgIT0gTlVM
TCk7CisJYXNzZXJ0KCJuaWtpdGEtMjIyOSIsIGNhcnJ5X2xldmVsX2ludmFyaWFudChsZXZlbCwg
Q0FSUllfVE9ETykpOworCisJLyogbG9jayBub2RlcyBmcm9tIGxlZnQgdG8gcmlnaHQgKi8KKwly
ZXN1bHQgPSAwOworCWZvcl9hbGxfbm9kZXMobGV2ZWwsIG5vZGUsIHRtcF9ub2RlKSB7CisJCXJl
c3VsdCA9IGxvY2tfY2Fycnlfbm9kZShsZXZlbCwgbm9kZSk7CisJCWlmIChyZXN1bHQgIT0gMCkK
KwkJCWJyZWFrOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBTeW5jaHJvbml6ZSBkZWxp
bWl0aW5nIGtleXMgYmV0d2VlbiBAbm9kZSBhbmQgaXRzIGxlZnQgbmVpZ2hib3IuCisKKyAgIFRv
IHJlZHVjZSBjb250ZW50aW9uIG9uIGRrIGtleSBhbmQgc2ltcGxpZnkgY2FycnkgY29kZSwgd2Ug
c3luY2hyb25pemUKKyAgIGRlbGltaXRpbmcga2V5cyBvbmx5IHdoZW4gY2FycnkgdWx0aW1hdGVs
eSBsZWF2ZXMgdHJlZSBsZXZlbCAoY2FycnlpbmcKKyAgIGNoYW5nZXMgdXB3YXJkKSBhbmQgdW5s
b2NrcyBub2RlcyBhdCB0aGlzIGxldmVsLgorCisgICBUaGlzIGZ1bmN0aW9uIGZpcnN0IGZpbmRz
IGxlZnQgbmVpZ2hib3Igb2YgQG5vZGUgYW5kIHRoZW4gdXBkYXRlcyBsZWZ0CisgICBuZWlnaGJv
cidzIHJpZ2h0IGRlbGltaXRpbmcga2V5IHRvIGNvbmluY2lkZSB3aXRoIGxlYXN0IGtleSBpbiBA
bm9kZS4KKworKi8KKworT05fREVCVUcoZXh0ZXJuIGF0b21pY190IGRlbGltX2tleV92ZXJzaW9u
OworICAgICkKKworc3RhdGljIHZvaWQgc3luY19ka2V5cyh6bm9kZSAqIHNwb3QvKiBub2RlIHRv
IHVwZGF0ZSAqLykKK3sKKwlyZWlzZXI0X2tleSBwaXZvdDsKKwlyZWlzZXI0X3RyZWUgKnRyZWU7
CisKKwlhc3NlcnQoIm5pa2l0YS0xNjEwIiwgc3BvdCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0xNjEyIiwgTE9DS19DTlRfTklMKHJ3X2xvY2tlZF9kaykpOworCisJdHJlZSA9IHpub2RlX2dl
dF90cmVlKHNwb3QpOworCXJlYWRfbG9ja190cmVlKHRyZWUpOworCXdyaXRlX2xvY2tfZGsodHJl
ZSk7CisKKwlhc3NlcnQoIm5pa2l0YS0yMTkyIiwgem5vZGVfaXNfbG9hZGVkKHNwb3QpKTsKKwor
CS8qIHN5bmMgbGVmdCBkZWxpbWl0aW5nIGtleSBvZiBAc3BvdCB3aXRoIGtleSBpbiBpdHMgbGVm
dG1vc3QgaXRlbSAqLworCWlmIChub2RlX2lzX2VtcHR5KHNwb3QpKQorCQlwaXZvdCA9ICp6bm9k
ZV9nZXRfcmRfa2V5KHNwb3QpOworCWVsc2UKKwkJbGVmdG1vc3Rfa2V5X2luX25vZGUoc3BvdCwg
JnBpdm90KTsKKworCXpub2RlX3NldF9sZF9rZXkoc3BvdCwgJnBpdm90KTsKKworCS8qIHRoZXJl
IGNhbiBiZSBzZXF1ZW5jZSBvZiBlbXB0eSBub2RlcyBwZW5kaW5nIHJlbW92YWwgb24gdGhlIGxl
ZnQgb2YKKwkgICBAc3BvdC4gU2NhbiB0aGVtIGFuZCB1cGRhdGUgdGhlaXIgbGVmdCBhbmQgcmln
aHQgZGVsaW1pdGluZyBrZXlzIHRvCisJICAgbWF0Y2ggbGVmdCBkZWxpbWl0aW5nIGtleSBvZiBA
c3BvdC4gQWxzbywgdXBkYXRlIHJpZ2h0IGRlbGltaXRpbmcKKwkgICBrZXkgb2YgZmlyc3Qgbm9u
LWVtcHR5IGxlZnQgbmVpZ2hib3IuCisJICovCisJd2hpbGUgKDEpIHsKKwkJaWYgKCFaRl9JU1NF
VChzcG90LCBKTk9ERV9MRUZUX0NPTk5FQ1RFRCkpCisJCQlicmVhazsKKworCQlzcG90ID0gc3Bv
dC0+bGVmdDsKKwkJaWYgKHNwb3QgPT0gTlVMTCkKKwkJCWJyZWFrOworCisJCXpub2RlX3NldF9y
ZF9rZXkoc3BvdCwgJnBpdm90KTsKKwkJLyogZG9uJ3Qgc2luayBpbnRvIHRoZSBkb21haW4gb2Yg
YW5vdGhlciBiYWxhbmNpbmcgKi8KKwkJaWYgKCF6bm9kZV9pc193cml0ZV9sb2NrZWQoc3BvdCkp
CisJCQlicmVhazsKKwkJaWYgKFpGX0lTU0VUKHNwb3QsIEpOT0RFX0hFQVJEX0JBTlNIRUUpKQor
CQkJem5vZGVfc2V0X2xkX2tleShzcG90LCAmcGl2b3QpOworCQllbHNlCisJCQlicmVhazsKKwl9
CisKKwl3cml0ZV91bmxvY2tfZGsodHJlZSk7CisJcmVhZF91bmxvY2tfdHJlZSh0cmVlKTsKK30K
KworLyogdW5sb2NrIGFsbCBjYXJyeSBub2RlcyBpbiBAbGV2ZWwgKi8KK3N0YXRpYyB2b2lkIHVu
bG9ja19jYXJyeV9sZXZlbChjYXJyeV9sZXZlbCAqIGxldmVsIC8qIGxldmVsIHRvIHVubG9jayAq
LyAsCisJCQkgICAgICAgaW50IGZhaWx1cmUJLyogdHJ1ZSBpZiB1bmxvY2tpbmcgb3dpbmcgdG8K
KwkJCQkJCSAqIGZhaWx1cmUgKi8gKQoreworCWNhcnJ5X25vZGUgKm5vZGU7CisJY2Fycnlfbm9k
ZSAqdG1wX25vZGU7CisKKwlhc3NlcnQoIm5pa2l0YS04ODkiLCBsZXZlbCAhPSBOVUxMKTsKKwor
CWlmICghZmFpbHVyZSkgeworCQl6bm9kZSAqc3BvdDsKKworCQlzcG90ID0gTlVMTDsKKwkJLyog
dXBkYXRlIGRlbGltaXRpbmcga2V5cyAqLworCQlmb3JfYWxsX25vZGVzKGxldmVsLCBub2RlLCB0
bXBfbm9kZSkgeworCQkJaWYgKHJlaXNlcjRfY2FycnlfcmVhbChub2RlKSAhPSBzcG90KSB7CisJ
CQkJc3BvdCA9IHJlaXNlcjRfY2FycnlfcmVhbChub2RlKTsKKwkJCQlzeW5jX2RrZXlzKHNwb3Qp
OworCQkJfQorCQl9CisJfQorCisJLyogbm9kZXMgY2FuIGJlIHVubG9ja2VkIGluIGFyYml0cmFy
eSBvcmRlci4gIEluIHByZWVtcHRpYmxlCisJICAgZW52aXJvbm1lbnQgaXQncyBiZXR0ZXIgdG8g
dW5sb2NrIGluIHJldmVyc2Ugb3JkZXIgb2YgbG9ja2luZywKKwkgICB0aG91Z2guCisJICovCisJ
Zm9yX2FsbF9ub2Rlc19iYWNrKGxldmVsLCBub2RlLCB0bXBfbm9kZSkgeworCQkvKiBhbGwgYWxs
b2NhdGVkIG5vZGVzIHNob3VsZCBiZSBhbHJlYWR5IGxpbmtlZCB0byB0aGVpcgorCQkgICBwYXJl
bnRzIGF0IHRoaXMgbW9tZW50LiAqLworCQlhc3NlcnQoIm5pa2l0YS0xNjMxIiwKKwkJICAgICAg
IGVyZ28oIWZhaWx1cmUsICFaRl9JU1NFVChyZWlzZXI0X2NhcnJ5X3JlYWwobm9kZSksCisJCQkJ
CQlKTk9ERV9PUlBIQU4pKSk7CisJCU9OX0RFQlVHKGNoZWNrX2RrZXlzKHJlaXNlcjRfY2Fycnlf
cmVhbChub2RlKSkpOworCQl1bmxvY2tfY2Fycnlfbm9kZShsZXZlbCwgbm9kZSwgZmFpbHVyZSk7
CisJfQorCWxldmVsLT5uZXdfcm9vdCA9IE5VTEw7Cit9CisKKy8qIGZpbmlzaCB3aXRoIEBsZXZl
bAorCisgICBVbmxvY2sgbm9kZXMgYW5kIHJlbGVhc2UgYWxsIGFsbG9jYXRlZCByZXNvdXJjZXMg
Ki8KK3N0YXRpYyB2b2lkIGRvbmVfY2FycnlfbGV2ZWwoY2FycnlfbGV2ZWwgKiBsZXZlbC8qIGxl
dmVsIHRvIGZpbmlzaCAqLykKK3sKKwljYXJyeV9ub2RlICpub2RlOworCWNhcnJ5X25vZGUgKnRt
cF9ub2RlOworCWNhcnJ5X29wICpvcDsKKwljYXJyeV9vcCAqdG1wX29wOworCisJYXNzZXJ0KCJu
aWtpdGEtMTA3NiIsIGxldmVsICE9IE5VTEwpOworCisJdW5sb2NrX2NhcnJ5X2xldmVsKGxldmVs
LCAwKTsKKwlmb3JfYWxsX25vZGVzKGxldmVsLCBub2RlLCB0bXBfbm9kZSkgeworCQlhc3NlcnQo
Im5pa2l0YS0yMTEzIiwgbGlzdF9lbXB0eV9jYXJlZnVsKCZub2RlLT5sb2NrX2hhbmRsZS5sb2Nr
c19saW5rKSk7CisJCWFzc2VydCgibmlraXRhLTIxMTQiLCBsaXN0X2VtcHR5X2NhcmVmdWwoJm5v
ZGUtPmxvY2tfaGFuZGxlLm93bmVyc19saW5rKSk7CisJCXJlaXNlcjRfcG9vbF9mcmVlKCZsZXZl
bC0+cG9vbC0+bm9kZV9wb29sLCAmbm9kZS0+aGVhZGVyKTsKKwl9CisJZm9yX2FsbF9vcHMobGV2
ZWwsIG9wLCB0bXBfb3ApCisJICAgIHJlaXNlcjRfcG9vbF9mcmVlKCZsZXZlbC0+cG9vbC0+b3Bf
cG9vbCwgJm9wLT5oZWFkZXIpOworfQorCisvKiBoZWxwZXIgZnVuY3Rpb24gdG8gY29tcGxldGUg
bG9ja2luZyBvZiBjYXJyeSBub2RlCisKKyAgIEZpbmlzaCBsb2NraW5nIG9mIGNhcnJ5IG5vZGUu
IFRoZXJlIGFyZSBzZXZlcmFsIHdheXMgaW4gd2hpY2ggbmV3IGNhcnJ5CisgICBub2RlIGNhbiBi
ZSBhZGRlZCBpbnRvIGNhcnJ5IGxldmVsIGFuZCBsb2NrZWQuIE5vcm1hbCBpcyB0aHJvdWdoCisg
ICBsb2NrX2NhcnJ5X25vZGUoKSwgYnV0IGFsc28gZnJvbSBmaW5kX3tsZWZ0fHJpZ2h0fV9uZWln
aGJvcigpLiBUaGlzCisgICBmdW5jdGlvbiBmYWN0b3JzIG91dCBjb21tb24gZmluYWwgcGFydCBv
ZiBhbGwgbG9ja2luZyBzY2VuYXJpb3MuIEl0CisgICBzdXBwb3NlcyB0aGF0IEBub2RlIC0+IGxv
Y2tfaGFuZGxlIGlzIGxvY2sgaGFuZGxlIGZvciBsb2NrIGp1c3QgdGFrZW4gYW5kCisgICBmaWxs
cyAtPnJlYWxfbm9kZSBmcm9tIHRoaXMgbG9jayBoYW5kbGUuCisKKyovCitpbnQgbG9ja19jYXJy
eV9ub2RlX3RhaWwoY2Fycnlfbm9kZSAqIG5vZGUvKiBub2RlIHRvIGNvbXBsZXRlIGxvY2tpbmcg
b2YgKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtMTA1MiIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtMTE4NyIsIHJlaXNlcjRfY2FycnlfcmVhbChub2RlKSAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS0xMTg4IiwgIW5vZGUtPnVubG9jayk7CisKKwlub2RlLT51bmxvY2sgPSAxOwor
CS8qIExvYWQgbm9kZSBjb250ZW50IGludG8gbWVtb3J5IGFuZCBpbnN0YWxsIG5vZGUgcGx1Z2lu
IGJ5CisJICAgbG9va2luZyBhdCB0aGUgbm9kZSBoZWFkZXIuCisKKwkgICBNb3N0IG9mIHRoZSB0
aW1lIHRoaXMgY2FsbCBpcyBjaGVhcCBiZWNhdXNlIHRoZSBub2RlIGlzCisJICAgYWxyZWFkeSBp
biBtZW1vcnkuCisKKwkgICBDb3JyZXNwb25kaW5nIHpyZWxzZSgpIGlzIGluIHVubG9ja19jYXJy
eV9ub2RlKCkKKwkgKi8KKwlyZXR1cm4gemxvYWQocmVpc2VyNF9jYXJyeV9yZWFsKG5vZGUpKTsK
K30KKworLyogbG9jayBjYXJyeSBub2RlCisKKyAgICJSZXNvbHZlIiBub2RlIHRvIHJlYWwgem5v
ZGUsIGxvY2sgaXQgYW5kIG1hcmsgYXMgbG9ja2VkLgorICAgVGhpcyByZXF1aXJlcyByZWN1cnNp
dmUgbG9ja2luZyBvZiB6bm9kZXMuCisKKyAgIFdoZW4gb3BlcmF0aW9uIGlzIHBvc3RlZCB0byB0
aGUgcGFyZW50IGxldmVsLCBub2RlIGl0IHdpbGwgYmUgYXBwbGllZCB0byBpcworICAgbm90IHll
dCBrbm93bi4gRm9yIGV4YW1wbGUsIHdoZW4gc2hpZnRpbmcgZGF0YSBiZXR3ZWVuIHR3byBub2Rl
cywKKyAgIGRlbGltaXRpbmcgaGFzIHRvIGJlIHVwZGF0ZWQgaW4gcGFyZW50IG9yIHBhcmVudHMg
b2Ygbm9kZXMgaW52b2x2ZWQuIEJ1dAorICAgdGhlaXIgcGFyZW50cyBpcyBub3QgeWV0IGxvY2tl
ZCBhbmQsIG1vcmVvdmVyIHNhaWQgbm9kZXMgY2FuIGJlIHJlcGFyZW50ZWQKKyAgIGJ5IGNvbmN1
cnJlbnQgYmFsYW5jaW5nLgorCisgICBUbyB3b3JrIGFyb3VuZCB0aGlzLCBjYXJyeSBvcGVyYXRp
b24gaXMgYXBwbGllZCB0byBzcGVjaWFsICJjYXJyeSBub2RlIgorICAgcmF0aGVyIHRoYW4gdG8g
dGhlIHpub2RlIGl0c2VsZi4gQ2Fycnkgbm9kZSBjb25zaXN0cyBvZiBzb21lICJiYXNlIiBvcgor
ICAgInJlZmVyZW5jZSIgem5vZGUgYW5kIGZsYWdzIGluZGljYXRpbmcgaG93IHRvIGdldCB0byB0
aGUgdGFyZ2V0IG9mIGNhcnJ5CisgICBvcGVyYXRpb24gKC0+cmVhbF9ub2RlIGZpZWxkIG9mIGNh
cnJ5X25vZGUpIGZyb20gYmFzZS4KKworKi8KK2ludCBsb2NrX2NhcnJ5X25vZGUoY2FycnlfbGV2
ZWwgKiBsZXZlbCAvKiBsZXZlbCBAbm9kZSBpcyBpbiAqLyAsCisJCSAgICBjYXJyeV9ub2RlICog
bm9kZS8qIG5vZGUgdG8gbG9jayAqLykKK3sKKwlpbnQgcmVzdWx0OworCXpub2RlICpyZWZlcmVu
Y2VfcG9pbnQ7CisJbG9ja19oYW5kbGUgbGg7CisJbG9ja19oYW5kbGUgdG1wX2xoOworCXJlaXNl
cjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgibmlraXRhLTg4NyIsIGxldmVsICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTg4MiIsIG5vZGUgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSAwOworCXJl
ZmVyZW5jZV9wb2ludCA9IG5vZGUtPm5vZGU7CisJaW5pdF9saCgmbGgpOworCWluaXRfbGgoJnRt
cF9saCk7CisJaWYgKG5vZGUtPmxlZnRfYmVmb3JlKSB7CisJCS8qIGhhbmRsaW5nIG9mIG5ldyBu
b2RlcywgYWxsb2NhdGVkIG9uIHRoZSBwcmV2aW91cyBsZXZlbDoKKworCQkgICBzb21lIGNhcnJ5
IG9wcyB3ZXJlIHByb3BhYmx5IHBvc3RlZCBmcm9tIHRoZSBuZXcgbm9kZSwgYnV0CisJCSAgIHRo
aXMgbm9kZSBuZWl0aGVyIGhhcyBwYXJlbnQgcG9pbnRlciBzZXQsIG5vciBpcworCQkgICBjb25u
ZWN0ZWQuIFRoaXMgd2lsbCBiZSBkb25lIGluIC0+Y3JlYXRlX2hvb2soKSBmb3IKKwkJICAgaW50
ZXJuYWwgaXRlbS4KKworCQkgICBObyB0aGVuIGxlc3MsIHBhcmVudCBvZiBuZXcgbm9kZSBoYXMg
dG8gYmUgbG9ja2VkLiBUbyBkbworCQkgICB0aGlzLCBmaXJzdCBnbyB0byB0aGUgImxlZnQiIGlu
IHRoZSBjYXJyeSBvcmRlci4gVGhpcworCQkgICBkZXBlbmRzIG9uIHRoZSBkZWNpc2lvbiB0byBh
bHdheXMgYWxsb2NhdGUgbmV3IG5vZGUgb24gdGhlCisJCSAgIHJpZ2h0IG9mIGV4aXN0aW5nIG9u
ZS4KKworCQkgICBMb29wIGhhbmRsZXMgY2FzZSB3aGVuIG11bHRpcGxlIG5vZGVzLCBhbGwgb3Jw
aGFucywgd2VyZQorCQkgICBpbnNlcnRlZC4KKworCQkgICBTdHJpY3RseSBzcGVha2luZywgdGFr
aW5nIHRyZWUgbG9jayBpcyBub3QgbmVjZXNzYXJ5IGhlcmUsCisJCSAgIGJlY2F1c2UgYWxsIG5v
ZGVzIHNjYW5uZWQgYnkgbG9vcCBpbgorCQkgICBmaW5kX2JlZ2V0dGluZ19icm90aGVyKCkgYXJl
IHdyaXRlLWxvY2tlZCBieSB0aGlzIHRocmVhZCwKKwkJICAgYW5kIHRodXMsIHRoZWlyIHNpYmxp
bmcgbGlua2FnZSBjYW5ub3QgY2hhbmdlLgorCisJCSAqLworCQl0cmVlID0gem5vZGVfZ2V0X3Ry
ZWUocmVmZXJlbmNlX3BvaW50KTsKKwkJcmVhZF9sb2NrX3RyZWUodHJlZSk7CisJCXJlZmVyZW5j
ZV9wb2ludCA9IGZpbmRfYmVnZXR0aW5nX2Jyb3RoZXIobm9kZSwgbGV2ZWwpLT5ub2RlOworCQly
ZWFkX3VubG9ja190cmVlKHRyZWUpOworCQlhc3NlcnQoIm5pa2l0YS0xMTg2IiwgcmVmZXJlbmNl
X3BvaW50ICE9IE5VTEwpOworCX0KKwlpZiAobm9kZS0+cGFyZW50ICYmIChyZXN1bHQgPT0gMCkp
IHsKKwkJcmVzdWx0ID0KKwkJICAgIHJlaXNlcjRfZ2V0X3BhcmVudCgmdG1wX2xoLCByZWZlcmVu
Y2VfcG9pbnQsCisJCQkJICAgICAgIFpOT0RFX1dSSVRFX0xPQ0spOworCQlpZiAocmVzdWx0ICE9
IDApIHsKKwkJCTsJLyogbm90aGluZyAqLworCQl9IGVsc2UgaWYgKHpub2RlX2dldF9sZXZlbCh0
bXBfbGgubm9kZSkgPT0gMCkgeworCQkJYXNzZXJ0KCJuaWtpdGEtMTM0NyIsIHpub2RlX2Fib3Zl
X3Jvb3QodG1wX2xoLm5vZGUpKTsKKwkJCXJlc3VsdCA9IGFkZF9uZXdfcm9vdChsZXZlbCwgbm9k
ZSwgdG1wX2xoLm5vZGUpOworCQkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkJcmVmZXJlbmNlX3Bv
aW50ID0gbGV2ZWwtPm5ld19yb290OworCQkJCW1vdmVfbGgoJmxoLCAmbm9kZS0+bG9ja19oYW5k
bGUpOworCQkJfQorCQl9IGVsc2UgaWYgKChsZXZlbC0+bmV3X3Jvb3QgIT0gTlVMTCkKKwkJCSAg
ICYmIChsZXZlbC0+bmV3X3Jvb3QgIT0KKwkJCSAgICAgICB6bm9kZV9wYXJlbnRfbm9sb2NrKHJl
ZmVyZW5jZV9wb2ludCkpKSB7CisJCQkvKiBwYXJlbnQgb2Ygbm9kZSBleGlzdHMsIGJ1dCB0aGlz
IGxldmVsIGFyZWFkeQorCQkJICAgY3JlYXRlZCBkaWZmZXJlbnQgbmV3IHJvb3QsIHNvICovCisJ
CQl3YXJuaW5nKCJuaWtpdGEtMTEwOSIsCisJCQkJLyogaXQgc2hvdWxkIGJlICJyYWRpY2lzIiwg
YnV0IHRyYWRpdGlvbiBpcworCQkJCSAgIHRyYWRpdGlvbi4gIGRvIGJhbnNoZWVzIHJlYWQgbGF0
aW4/ICovCisJCQkJImhvZGllIG5hdHVzIGVzdCByYWRpY2kgZnJhdGVyIik7CisJCQlyZXN1bHQg
PSAtRUlPOworCQl9IGVsc2UgeworCQkJbW92ZV9saCgmbGgsICZ0bXBfbGgpOworCQkJcmVmZXJl
bmNlX3BvaW50ID0gbGgubm9kZTsKKwkJfQorCX0KKwlpZiAobm9kZS0+bGVmdCAmJiAocmVzdWx0
ID09IDApKSB7CisJCWFzc2VydCgibmlraXRhLTExODMiLCBub2RlLT5wYXJlbnQpOworCQlhc3Nl
cnQoIm5pa2l0YS04ODMiLCByZWZlcmVuY2VfcG9pbnQgIT0gTlVMTCk7CisJCXJlc3VsdCA9CisJ
CSAgICByZWlzZXI0X2dldF9sZWZ0X25laWdoYm9yKCZ0bXBfbGgsIHJlZmVyZW5jZV9wb2ludCwK
KwkJCQkJICAgICAgWk5PREVfV1JJVEVfTE9DSywKKwkJCQkJICAgICAgR05fQ0FOX1VTRV9VUFBF
Ul9MRVZFTFMpOworCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCWRvbmVfbGgoJmxoKTsKKwkJCW1v
dmVfbGgoJmxoLCAmdG1wX2xoKTsKKwkJCXJlZmVyZW5jZV9wb2ludCA9IGxoLm5vZGU7CisJCX0K
Kwl9CisJaWYgKCFub2RlLT5wYXJlbnQgJiYgIW5vZGUtPmxlZnQgJiYgIW5vZGUtPmxlZnRfYmVm
b3JlKSB7CisJCXJlc3VsdCA9CisJCSAgICBsb25ndGVybV9sb2NrX3pub2RlKCZsaCwgcmVmZXJl
bmNlX3BvaW50LCBaTk9ERV9XUklURV9MT0NLLAorCQkJCQlaTk9ERV9MT0NLX0hJUFJJKTsKKwl9
CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCW1vdmVfbGgoJm5vZGUtPmxvY2tfaGFuZGxlLCAmbGgp
OworCQlyZXN1bHQgPSBsb2NrX2NhcnJ5X25vZGVfdGFpbChub2RlKTsKKwl9CisJZG9uZV9saCgm
dG1wX2xoKTsKKwlkb25lX2xoKCZsaCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogcmVsZWFz
ZSBhIGxvY2sgb24gJmNhcnJ5X25vZGUuCisKKyAgIFJlbGVhc2UgaWYgbmVjZXNzYXJ5IGxvY2sg
b24gQG5vZGUuIFRoaXMgb3BlYXJpb24gaXMgcGFpciBvZgorICAgbG9ja19jYXJyeV9ub2RlKCkg
YW5kIGlzIGlkZW1wb3RlbnQ6IHlvdSBjYW4gY2FsbCBpdCBtb3JlIHRoYW4gb25jZSBvbiB0aGUK
KyAgIHNhbWUgbm9kZS4KKworKi8KK3N0YXRpYyB2b2lkCit1bmxvY2tfY2Fycnlfbm9kZShjYXJy
eV9sZXZlbCAqIGxldmVsLAorCQkgIGNhcnJ5X25vZGUgKiBub2RlIC8qIG5vZGUgdG8gYmUgcmVs
ZWFzZWQgKi8gLAorCQkgIGludCBmYWlsdXJlCS8qIDAgaWYgbm9kZSBpcyB1bmxvY2tlZCBkdWUK
KwkJCQkgKiB0byBzb21lIGVycm9yICovICkKK3sKKwl6bm9kZSAqcmVhbF9ub2RlOworCisJYXNz
ZXJ0KCJuaWtpdGEtODg0Iiwgbm9kZSAhPSBOVUxMKTsKKworCXJlYWxfbm9kZSA9IHJlaXNlcjRf
Y2FycnlfcmVhbChub2RlKTsKKwkvKiBwYWlyIHRvIHpsb2FkKCkgaW4gbG9ja19jYXJyeV9ub2Rl
X3RhaWwoKSAqLworCXpyZWxzZShyZWFsX25vZGUpOworCWlmIChub2RlLT51bmxvY2sgJiYgKHJl
YWxfbm9kZSAhPSBOVUxMKSkgeworCQlhc3NlcnQoIm5pa2l0YS04OTkiLCByZWFsX25vZGUgPT0g
bm9kZS0+bG9ja19oYW5kbGUubm9kZSk7CisJCWxvbmd0ZXJtX3VubG9ja196bm9kZSgmbm9kZS0+
bG9ja19oYW5kbGUpOworCX0KKwlpZiAoZmFpbHVyZSkgeworCQlpZiAobm9kZS0+ZGVhbGxvY2F0
ZSAmJiAocmVhbF9ub2RlICE9IE5VTEwpKSB7CisJCQkvKiBmcmVlIG5vZGUgaW4gYml0bWFwCisK
KwkJCSAgIFByZXBhcmUgbm9kZSBmb3IgcmVtb3ZhbC4gTGFzdCB6cHV0KCkgd2lsbCBmaW5pc2gK
KwkJCSAgIHdpdGggaXQuCisJCQkgKi8KKwkJCVpGX1NFVChyZWFsX25vZGUsIEpOT0RFX0hFQVJE
X0JBTlNIRUUpOworCQl9CisJCWlmIChub2RlLT5mcmVlKSB7CisJCQlhc3NlcnQoIm5pa2l0YS0y
MTc3IiwKKwkJCSAgICAgICBsaXN0X2VtcHR5X2NhcmVmdWwoJm5vZGUtPmxvY2tfaGFuZGxlLmxv
Y2tzX2xpbmspKTsKKwkJCWFzc2VydCgibmlraXRhLTIxMTIiLAorCQkJICAgICAgIGxpc3RfZW1w
dHlfY2FyZWZ1bCgmbm9kZS0+bG9ja19oYW5kbGUub3duZXJzX2xpbmspKTsKKwkJCXJlaXNlcjRf
cG9vbF9mcmVlKCZsZXZlbC0+cG9vbC0+bm9kZV9wb29sLAorCQkJCQkgICZub2RlLT5oZWFkZXIp
OworCQl9CisJfQorfQorCisvKiBmYXRhbF9jYXJyeV9lcnJvcigpIC0gYWxsLWNhdGNoaW5nIGVy
cm9yIGhhbmRsaW5nIGZ1bmN0aW9uCisKKyAgIEl0IGlzIHBvc3NpYmxlIHRoYXQgY2FycnkgZmFj
ZXMgdW5yZWNvdmVyYWJsZSBlcnJvciwgbGlrZSB1bmFiaWxpdHkgdG8KKyAgIGluc2VydCBwb2lu
dGVyIGF0IHRoZSBpbnRlcm5hbCBsZXZlbC4gT3VyIHNpbXBsZSBzb2x1dGlvbiBpcyBqdXN0IHBh
bmljIGluCisgICB0aGlzIHNpdHVhdGlvbi4gTW9yZSBzb3BoaXN0aWNhdGVkIHRoaW5ncyBsaWtl
IGF0dGVtcHQgdG8gcmVtb3VudAorICAgZmlsZS1zeXN0ZW0gYXMgcmVhZC1vbmx5IGNhbiBiZSBp
bXBsZW1lbnRlZCB3aXRob3V0IG11Y2ggZGlmZmljbHRpZXMuCisKKyAgIEl0IGlzIGJlbGlldmVk
LCB0aGF0OgorCisgICAxLiBpbiBzdGVhZCBvZiBwYW5pY2tpbmcsIGFsbCBjdXJyZW50IHRyYW5z
YWN0aW9ucyBjYW4gYmUgYWJvcnRlZCByb2xsaW5nCisgICBzeXN0ZW0gYmFjayB0byB0aGUgY29u
c2lzdGVudCBzdGF0ZS4KKworVW1tLCBpZiB5b3Ugc2ltcGx5IHBhbmljIHdpdGhvdXQgZG9pbmcg
YW55dGhpbmcgbW9yZSBhdCBhbGwsIHRoZW4gYWxsIGN1cnJlbnQKK3RyYW5zYWN0aW9ucyBhcmUg
YWJvcnRlZCBhbmQgdGhlIHN5c3RlbSBpcyByb2xsZWQgYmFjayB0byBhIGNvbnNpc3RlbnQgc3Rh
dGUsCitieSB2aXJ0dWUgb2YgdGhlIGRlc2lnbiBvZiB0aGUgdHJhbnNhY3Rpb25hbCBtZWNoYW5p
c20uIFdlbGwsIHdhaXQsIGxldCdzIGJlCitwcmVjaXNlLiAgSWYgYW4gaW50ZXJuYWwgbm9kZSBp
cyBjb3JydXB0ZWQgb24gZGlzayBkdWUgdG8gaGFyZHdhcmUgZmFpbHVyZSwKK3RoZW4gdGhlcmUg
bWF5IGJlIG5vIGNvbnNpc3RlbnQgc3RhdGUgdGhhdCBjYW4gYmUgcm9sbGVkIGJhY2sgdG8sIHNv
IGluc3RlYWQKK3dlIHNob3VsZCBzYXkgdGhhdCBpdCB3aWxsIHJvbGxiYWNrIHRoZSB0cmFuc2Fj
dGlvbnMsIHdoaWNoIGJhcnJpbmcgb3RoZXIKK2ZhY3RvcnMgbWVhbnMgcm9sbGluZyBiYWNrIHRv
IGEgY29uc2lzdGVudCBzdGF0ZS4KKworIyBOaWtpdGE6IHRoZXJlIGlzIGEgc3VidGxlIGRpZmZl
cmVuY2UgYmV0d2VlbiBwYW5pYyBhbmQgYWJvcnRpbmcKKyMgdHJhbnNhY3Rpb25zOiBtYWNoaW5l
IGRvZXNuJ3QgcmVib290LiBQcm9jZXNzZXMgYXJlbid0IGtpbGxlZC4gUHJvY2Vzc2VzCisjIGRv
bid0IHVzaW5nIHJlaXNlcjQgKG5vdCB0aGF0IHdlIGNhcmUgYWJvdXQgc3VjaCBwcm9jZXNzZXMp
LCBvciB1c2luZyBvdGhlcgorIyByZWlzZXI0IG1vdW50cyAoYWJvdXQgdGhlbSB3ZSBkbyBjYXJl
KSB3aWxsIHNpbXBseSBjb250aW51ZSB0byBydW4uIFdpdGgKKyMgc29tZSBsdWNrLCBldmVuIGFw
cGxpY2F0aW9uIHVzaW5nIGFib3J0ZWQgZmlsZSBzeXN0ZW0gY2FuIHN1cnZpdmU6IGl0IHdpbGwK
KyMgZ2V0IHNvbWUgZXJyb3IsIGxpa2UgRUJBREYsIGZyb20gZWFjaCBmaWxlIGRlc2NyaXB0b3Ig
b24gZmFpbGVkIGZpbGUgc3lzdGVtLAorIyBidXQgYXBwbGljYXRpb25zIHRoYXQgZG8gY2FyZSBh
Ym91dCB0b2xlcmFuY2Ugd2lsbCBjb3BlIHdpdGggdGhpcyAoc3F1aWQKKyMgd2lsbCkuCisKK0l0
IHdvdWxkIGJlIGEgbmljZSBmZWF0dXJlIHRob3VnaCB0byBzdXBwb3J0IHJvbGxiYWNrIHdpdGhv
dXQgcmVib290aW5nCitmb2xsb3dlZCBieSByZW1vdW50LCBidXQgdGhpcyBjYW4gd2FpdCBmb3Ig
bGF0ZXIgdmVyc2lvbnMuCisKKyAgIDIuIG9uY2UgaXNvbGF0ZWQgdHJhbnNhY3Rpb25zIHdpbGwg
YmUgaW1wbGVtZW50ZWQgaXQgd2lsbCBiZSBwb3NzaWJsZSB0bworICAgcm9sbCBiYWNrIG9mZmVu
ZGluZyB0cmFuc2FjdGlvbi4KKworMi4gaXMgYWRkaXRpb25hbCBjb2RlIGNvbXBsZXhpdHkgb2Yg
aW5jb25zaXN0ZW50IHZhbHVlIChpdCBpbXBsaWVzIHRoYXQgYQorYnJva2VuIHRyZWUgc2hvdWxk
IGJlIGtlcHQgaW4gb3BlcmF0aW9uKSwgc28gd2UgbXVzdCB0aGluayBhYm91dCBpdCBtb3JlCiti
ZWZvcmUgZGVjaWRpbmcgaWYgaXQgc2hvdWxkIGJlIGRvbmUuICAtSGFucworCisqLworc3RhdGlj
IHZvaWQgZmF0YWxfY2FycnlfZXJyb3IoY2FycnlfbGV2ZWwgKiBkb2luZyBVTlVTRURfQVJHCS8q
IGNhcnJ5IGxldmVsCisJCQkJCQkJCSAqIHdoZXJlCisJCQkJCQkJCSAqIHVucmVjb3ZlcmFibGUK
KwkJCQkJCQkJICogZXJyb3IKKwkJCQkJCQkJICogb2NjdXJyZWQgKi8gLAorCQkJICAgICAgaW50
IGVjb2RlLyogZXJyb3IgY29kZSAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0xMjMwIiwgZG9pbmcg
IT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTIzMSIsIGVjb2RlIDwgMCk7CisKKwlyZWlzZXI0
X3BhbmljKCJuaWtpdGEtMTIzMiIsICJDYXJyeSBmYWlsZWQ6ICVpIiwgZWNvZGUpOworfQorCisv
KioKKyAqIEFkZCBuZXcgcm9vdCB0byB0aGUgdHJlZQorICoKKyAqIFRoaXMgZnVuY3Rpb24gaXRz
ZWxmIG9ubHkgbWFuYWdlcyBjaGFuZ2VzIGluIGNhcnJ5IHN0cnVjdHVyZXMgYW5kIGRlbGVnYXRl
cworICogYWxsIGhhcmQgd29yayAoYWxsb2NhdGlvbiBvZiB6bm9kZSBmb3IgbmV3IHJvb3QsIGNo
YW5nZXMgb2YgcGFyZW50IGFuZAorICogc2libGluZyBwb2ludGVycykgdG8gdGhlIHJlaXNlcjRf
YWRkX3RyZWVfcm9vdCgpLgorICoKKyAqIExvY2tpbmc6IG9sZCB0cmVlIHJvb3QgaXMgbG9ja2Vk
IGJ5IGNhcnJ5IGF0IHRoaXMgcG9pbnQuIEZha2Ugem5vZGUgaXMgYWxzbworICogbG9ja2VkLgor
ICovCitzdGF0aWMgaW50IGFkZF9uZXdfcm9vdChjYXJyeV9sZXZlbCAqIGxldmVsLC8qIGNhcnJ5
IGxldmVsIGluIGNvbnRleHQgb2Ygd2hpY2gKKwkJCQkJICAgICAqIG9wZXJhdGlvbiBpcyBwZXJm
b3JtZWQgKi8KKwkJCWNhcnJ5X25vZGUgKiBub2RlLCAgLyogY2Fycnkgbm9kZSBmb3IgZXhpc3Rp
bmcgcm9vdCAqLworCQkJem5vZGUgKiBmYWtlCSAgICAvKiAiZmFrZSIgem5vZGUgYWxyZWFkeSBs
b2NrZWQgYnkKKwkJCQkJICAgICAqIHVzICovKQoreworCWludCByZXN1bHQ7CisKKwlhc3NlcnQo
Im5pa2l0YS0xMTA0IiwgbGV2ZWwgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTEwNSIsIG5v
ZGUgIT0gTlVMTCk7CisKKwlhc3NlcnQoIm5pa2l0YS0xNDAzIiwgem5vZGVfaXNfd3JpdGVfbG9j
a2VkKG5vZGUtPm5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0xNDA0Iiwgem5vZGVfaXNfd3JpdGVf
bG9ja2VkKGZha2UpKTsKKworCS8qIHRyeWluZyB0byBjcmVhdGUgbmV3IHJvb3QuICovCisJLyog
QG5vZGUgaXMgcm9vdCBhbmQgaXQncyBhbHJlYWR5IGxvY2tlZCBieSB1cy4gVGhpcworCSAgIG1l
YW5zIHRoYXQgbm9ib2R5IGVsc2UgY2FuIGJlIHRyeWluZyB0byBhZGQvcmVtb3ZlCisJICAgdHJl
ZSByb290IHJpZ2h0IG5vdy4KKwkgKi8KKwlpZiAobGV2ZWwtPm5ld19yb290ID09IE5VTEwpCisJ
CWxldmVsLT5uZXdfcm9vdCA9IHJlaXNlcjRfYWRkX3RyZWVfcm9vdChub2RlLT5ub2RlLCBmYWtl
KTsKKwlpZiAoIUlTX0VSUihsZXZlbC0+bmV3X3Jvb3QpKSB7CisJCWFzc2VydCgibmlraXRhLTEy
MTAiLCB6bm9kZV9pc19yb290KGxldmVsLT5uZXdfcm9vdCkpOworCQlub2RlLT5kZWFsbG9jYXRl
ID0gMTsKKwkJcmVzdWx0ID0KKwkJICAgIGxvbmd0ZXJtX2xvY2tfem5vZGUoJm5vZGUtPmxvY2tf
aGFuZGxlLCBsZXZlbC0+bmV3X3Jvb3QsCisJCQkJCVpOT0RFX1dSSVRFX0xPQ0ssIFpOT0RFX0xP
Q0tfTE9QUkkpOworCQlpZiAocmVzdWx0ID09IDApCisJCQl6cHV0KGxldmVsLT5uZXdfcm9vdCk7
CisJfSBlbHNlIHsKKwkJcmVzdWx0ID0gUFRSX0VSUihsZXZlbC0+bmV3X3Jvb3QpOworCQlsZXZl
bC0+bmV3X3Jvb3QgPSBOVUxMOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBhbGxvY2F0
ZSBuZXcgem5vZGUgYW5kIGFkZCB0aGUgb3BlcmF0aW9uIHRoYXQgaW5zZXJ0cyB0aGUKKyAgIHBv
aW50ZXIgdG8gaXQgaW50byB0aGUgcGFyZW50IG5vZGUgaW50byB0aGUgdG9kbyBsZXZlbAorCisg
ICBBbGxvY2F0ZSBuZXcgem5vZGUsIGFkZCBpdCBpbnRvIGNhcnJ5IHF1ZXVlIGFuZCBwb3N0IGlu
dG8gQHRvZG8gcXVldWUKKyAgIHJlcXVlc3QgdG8gYWRkIHBvaW50ZXIgdG8gbmV3IG5vZGUgaW50
byBpdHMgcGFyZW50LgorCisgICBUaGlzIGlzIGNhcnJ5IHJlbGF0ZWQgcm91dGluZyB0aGF0IGNh
bGxzIHJlaXNlcjRfbmV3X25vZGUoKSB0byBhbGxvY2F0ZSBuZXcKKyAgIG5vZGUuCisqLworY2Fy
cnlfbm9kZSAqYWRkX25ld196bm9kZSh6bm9kZSAqIGJyb3RoZXIJLyogZXhpc3RpbmcgbGVmdCBu
ZWlnaGJvciBvZiBuZXcKKwkJCQkJCSAqIG5vZGUgKi8gLAorCQkJICBjYXJyeV9ub2RlICogcmVm
CS8qIGNhcnJ5IG5vZGUgYWZ0ZXIgd2hpY2ggbmV3CisJCQkJCQkgKiBjYXJyeSBub2RlIGlzIHRv
IGJlIGluc2VydGVkCisJCQkJCQkgKiBpbnRvIHF1ZXVlLiBUaGlzIGFmZmVjdHMKKwkJCQkJCSAq
IGxvY2tpbmcuICovICwKKwkJCSAgY2FycnlfbGV2ZWwgKiBkb2luZwkvKiBjYXJyeSBxdWV1ZSB3
aGVyZSBuZXcgbm9kZSBpcworCQkJCQkJICogdG8gYmUgYWRkZWQgKi8gLAorCQkJICBjYXJyeV9s
ZXZlbCAqIHRvZG8JLyogY2FycnkgcXVldWUgd2hlcmUgQ09QX0lOU0VSVAorCQkJCQkJICogb3Bl
cmF0aW9uIHRvIGFkZCBwb2ludGVyIHRvCisJCQkJCQkgKiBuZXcgbm9kZSB3aWxsIG5lIGFkZGVk
ICovICkKK3sKKwljYXJyeV9ub2RlICpmcmVzaDsKKwl6bm9kZSAqbmV3X3pub2RlOworCWNhcnJ5
X29wICphZGRfcG9pbnRlcjsKKwljYXJyeV9wbHVnaW5faW5mbyBpbmZvOworCisJYXNzZXJ0KCJu
aWtpdGEtMTA0OCIsIGJyb3RoZXIgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTA0OSIsIHRv
ZG8gIT0gTlVMTCk7CisKKwkvKiBUaGVyZSBpcyBhIGxvdCBvZiBwb3NzaWJsZSB2YXJpYXRpb25z
IGhlcmU6IHRvIHdoYXQgcGFyZW50CisJICAgbmV3IG5vZGUgd2lsbCBiZSBhdHRhY2hlZCBhbmQg
d2hlcmUuIEZvciBzaW1wbGljaXR5LCBhbHdheXMKKwkgICBkbyB0aGUgZm9sbG93aW5nOgorCisJ
ICAgKDEpIG5ldyBub2RlIGFuZCBAYnJvdGhlciB3aWxsIGhhdmUgdGhlIHNhbWUgcGFyZW50Lgor
CisJICAgKDIpIG5ldyBub2RlIGlzIGFkZGVkIG9uIHRoZSByaWdodCBvZiBAYnJvdGhlcgorCisJ
ICovCisKKwlmcmVzaCA9CXJlaXNlcjRfYWRkX2NhcnJ5X3NraXAoZG9pbmcsCisJCQkJICAgICAg
IHJlZiA/IFBPT0xPX0FGVEVSIDogUE9PTE9fTEFTVCwgcmVmKTsKKwlpZiAoSVNfRVJSKGZyZXNo
KSkKKwkJcmV0dXJuIGZyZXNoOworCisJZnJlc2gtPmRlYWxsb2NhdGUgPSAxOworCWZyZXNoLT5m
cmVlID0gMTsKKworCW5ld196bm9kZSA9IHJlaXNlcjRfbmV3X25vZGUoYnJvdGhlciwgem5vZGVf
Z2V0X2xldmVsKGJyb3RoZXIpKTsKKwlpZiAoSVNfRVJSKG5ld196bm9kZSkpCisJCS8qIEBmcmVz
aCB3aWxsIGJlIGRlYWxsb2NhdGVkIGF1dG9tYXRpY2FsbHkgYnkgZXJyb3IKKwkJICAgaGFuZGxp
bmcgY29kZSBpbiB0aGUgY2FsbGVyLiAqLworCQlyZXR1cm4gKGNhcnJ5X25vZGUgKikgbmV3X3pu
b2RlOworCisJLyogbmV3X3pub2RlIHJldHVybmVkIHpub2RlIHdpdGggeF9jb3VudCAxLiBDYWxs
ZXIgaGFzIHRvIGRlY3JlYXNlCisJICAgaXQuIG1ha2Vfc3BhY2UoKSBkb2VzLiAqLworCisJWkZf
U0VUKG5ld196bm9kZSwgSk5PREVfT1JQSEFOKTsKKwlmcmVzaC0+bm9kZSA9IG5ld196bm9kZTsK
KworCXdoaWxlIChaRl9JU1NFVChyZWlzZXI0X2NhcnJ5X3JlYWwocmVmKSwgSk5PREVfT1JQSEFO
KSkgeworCQlyZWYgPSBjYXJyeV9ub2RlX3ByZXYocmVmKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMTYw
NiIsICFjYXJyeV9ub2RlX2VuZChkb2luZywgcmVmKSk7CisJfQorCisJaW5mby50b2RvID0gdG9k
bzsKKwlpbmZvLmRvaW5nID0gZG9pbmc7CisJYWRkX3BvaW50ZXIgPSBub2RlX3Bvc3RfY2Fycnko
JmluZm8sIENPUF9JTlNFUlQsCisJCQkJICAgICAgcmVpc2VyNF9jYXJyeV9yZWFsKHJlZiksIDEp
OworCWlmIChJU19FUlIoYWRkX3BvaW50ZXIpKSB7CisJCS8qIG5vIG5lZWQgdG8gZGVhbGxvY2F0
ZSBAbmV3X3pub2RlIGhlcmU6IGl0IHdpbGwgYmUKKwkJICAgZGVhbGxvY2F0ZWQgZHVyaW5nIGNh
cnJ5IGVycm9yIGhhbmRsaW5nLiAqLworCQlyZXR1cm4gKGNhcnJ5X25vZGUgKikgYWRkX3BvaW50
ZXI7CisJfQorCisJYWRkX3BvaW50ZXItPnUuaW5zZXJ0LnR5cGUgPSBDT1BUX0NISUxEOworCWFk
ZF9wb2ludGVyLT51Lmluc2VydC5jaGlsZCA9IGZyZXNoOworCWFkZF9wb2ludGVyLT51Lmluc2Vy
dC5icm90aGVyID0gYnJvdGhlcjsKKwkvKiBpbml0aWFsbHkgbmV3IG5vZGUgc3Bhd25zIGVtcHR5
IGtleSByYW5nZSAqLworCXdyaXRlX2xvY2tfZGsoem5vZGVfZ2V0X3RyZWUoYnJvdGhlcikpOwor
CXpub2RlX3NldF9sZF9rZXkobmV3X3pub2RlLAorCQkJIHpub2RlX3NldF9yZF9rZXkobmV3X3pu
b2RlLAorCQkJCQkgIHpub2RlX2dldF9yZF9rZXkoYnJvdGhlcikpKTsKKwl3cml0ZV91bmxvY2tf
ZGsoem5vZGVfZ2V0X3RyZWUoYnJvdGhlcikpOworCXJldHVybiBmcmVzaDsKK30KKworLyogREVC
VUdHSU5HIEZVTkNUSU9OUy4KKworICAgUHJvYmFibHkgd2UgYWxzbyBzaG91bGQgbGVhdmUgdGhl
bSBvbiBldmVuIHdoZW4KKyAgIGRlYnVnZ2luZyBpcyB0dXJuZWQgb2ZmIHRvIHByaW50IGR1bXBz
IGF0IGVycm9ycy4KKyovCisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIGludCBjYXJyeV9sZXZl
bF9pbnZhcmlhbnQoY2FycnlfbGV2ZWwgKiBsZXZlbCwgY2FycnlfcXVldWVfc3RhdGUgc3RhdGUp
Cit7CisJY2Fycnlfbm9kZSAqbm9kZTsKKwljYXJyeV9ub2RlICp0bXBfbm9kZTsKKworCWlmIChs
ZXZlbCA9PSBOVUxMKQorCQlyZXR1cm4gMDsKKworCWlmIChsZXZlbC0+dHJhY2tfdHlwZSAhPSAw
ICYmCisJICAgIGxldmVsLT50cmFja190eXBlICE9IENBUlJZX1RSQUNLX05PREUgJiYKKwkgICAg
bGV2ZWwtPnRyYWNrX3R5cGUgIT0gQ0FSUllfVFJBQ0tfQ0hBTkdFKQorCQlyZXR1cm4gMDsKKwor
CS8qIGNoZWNrIHRoYXQgbm9kZXMgYXJlIGluIGFzY2VuZGluZyBvcmRlciAqLworCWZvcl9hbGxf
bm9kZXMobGV2ZWwsIG5vZGUsIHRtcF9ub2RlKSB7CisJCXpub2RlICpsZWZ0OworCQl6bm9kZSAq
cmlnaHQ7CisKKwkJcmVpc2VyNF9rZXkgbGtleTsKKwkJcmVpc2VyNF9rZXkgcmtleTsKKworCQlp
ZiAobm9kZSAhPSBjYXJyeV9ub2RlX2Zyb250KGxldmVsKSkgeworCQkJaWYgKHN0YXRlID09IENB
UlJZX1RPRE8pIHsKKwkJCQlyaWdodCA9IG5vZGUtPm5vZGU7CisJCQkJbGVmdCA9IGNhcnJ5X25v
ZGVfcHJldihub2RlKS0+bm9kZTsKKwkJCX0gZWxzZSB7CisJCQkJcmlnaHQgPSByZWlzZXI0X2Nh
cnJ5X3JlYWwobm9kZSk7CisJCQkJbGVmdCA9IHJlaXNlcjRfY2FycnlfcmVhbChjYXJyeV9ub2Rl
X3ByZXYobm9kZSkpOworCQkJfQorCQkJaWYgKHJpZ2h0ID09IE5VTEwgfHwgbGVmdCA9PSBOVUxM
KQorCQkJCWNvbnRpbnVlOworCQkJaWYgKG5vZGVfaXNfZW1wdHkocmlnaHQpIHx8IG5vZGVfaXNf
ZW1wdHkobGVmdCkpCisJCQkJY29udGludWU7CisJCQlpZiAoIWtleWxlKGxlZnRtb3N0X2tleV9p
bl9ub2RlKGxlZnQsICZsa2V5KSwKKwkJCQkgICBsZWZ0bW9zdF9rZXlfaW5fbm9kZShyaWdodCwg
JnJrZXkpKSkgeworCQkJCXdhcm5pbmcoIiIsICJ3cm9uZyBrZXkgb3JkZXIiKTsKKwkJCQlyZXR1
cm4gMDsKKwkJCX0KKwkJfQorCX0KKwlyZXR1cm4gMTsKK30KKyNlbmRpZgorCisvKiBnZXQgc3lt
Ym9saWMgbmFtZSBmb3IgYm9vbGVhbiAqLworc3RhdGljIGNvbnN0IGNoYXIgKnRmKGludCBib29s
ZWFuLyogdHJ1dGggdmFsdWUgKi8pCit7CisJcmV0dXJuIGJvb2xlYW4gPyAidCIgOiAiZiI7Cit9
CisKKy8qIHN5bWJvbGljIG5hbWUgZm9yIGNhcnJ5IG9wZXJhdGlvbiAqLworc3RhdGljIGNvbnN0
IGNoYXIgKmNhcnJ5X29wX25hbWUoY2Fycnlfb3Bjb2RlIG9wLyogY2Fycnkgb3Bjb2RlICovKQor
eworCXN3aXRjaCAob3ApIHsKKwljYXNlIENPUF9JTlNFUlQ6CisJCXJldHVybiAiQ09QX0lOU0VS
VCI7CisJY2FzZSBDT1BfREVMRVRFOgorCQlyZXR1cm4gIkNPUF9ERUxFVEUiOworCWNhc2UgQ09Q
X0NVVDoKKwkJcmV0dXJuICJDT1BfQ1VUIjsKKwljYXNlIENPUF9QQVNURToKKwkJcmV0dXJuICJD
T1BfUEFTVEUiOworCWNhc2UgQ09QX1VQREFURToKKwkJcmV0dXJuICJDT1BfVVBEQVRFIjsKKwlj
YXNlIENPUF9FWFRFTlQ6CisJCXJldHVybiAiQ09QX0VYVEVOVCI7CisJY2FzZSBDT1BfSU5TRVJU
X0ZMT1c6CisJCXJldHVybiAiQ09QX0lOU0VSVF9GTE9XIjsKKwlkZWZhdWx0OnsKKwkJCS8qIG5v
dCBtdCBzYWZlLCBidXQgd2hvIGNhcmVzPyAqLworCQkJc3RhdGljIGNoYXIgYnVmWzIwXTsKKwor
CQkJc3ByaW50ZihidWYsICJ1bmtub3duIG9wOiAleCIsIG9wKTsKKwkJCXJldHVybiBidWY7CisJ
CX0KKwl9Cit9CisKKy8qIGR1bXAgaW5mb3JtYXRpb24gYWJvdXQgY2Fycnkgbm9kZSAqLworc3Rh
dGljIHZvaWQgcHJpbnRfY2FycnkoY29uc3QgY2hhciAqcHJlZml4IC8qIHByZWZpeCB0byBwcmlu
dCAqLyAsCisJCQljYXJyeV9ub2RlICogbm9kZS8qIG5vZGUgdG8gcHJpbnQgKi8pCit7CisJaWYg
KG5vZGUgPT0gTlVMTCkgeworCQlwcmludGsoIiVzOiBudWxsXG4iLCBwcmVmaXgpOworCQlyZXR1
cm47CisJfQorCXByaW50aworCSAgICAoIiVzOiAlcCBwYXJlbnQ6ICVzLCBsZWZ0OiAlcywgdW5s
b2NrOiAlcywgZnJlZTogJXMsIGRlYWxsb2M6ICVzXG4iLAorCSAgICAgcHJlZml4LCBub2RlLCB0
Zihub2RlLT5wYXJlbnQpLCB0Zihub2RlLT5sZWZ0KSwgdGYobm9kZS0+dW5sb2NrKSwKKwkgICAg
IHRmKG5vZGUtPmZyZWUpLCB0Zihub2RlLT5kZWFsbG9jYXRlKSk7Cit9CisKKy8qIGR1bXAgaW5m
b3JtYXRpb24gYWJvdXQgY2Fycnkgb3BlcmF0aW9uICovCitzdGF0aWMgdm9pZCBwcmludF9vcChj
b25zdCBjaGFyICpwcmVmaXggLyogcHJlZml4IHRvIHByaW50ICovICwKKwkJICAgICBjYXJyeV9v
cCAqIG9wLyogb3BlcmF0aW9uIHRvIHByaW50ICovKQoreworCWlmIChvcCA9PSBOVUxMKSB7CisJ
CXByaW50aygiJXM6IG51bGxcbiIsIHByZWZpeCk7CisJCXJldHVybjsKKwl9CisJcHJpbnRrKCIl
czogJXAgY2Fycnlfb3Bjb2RlOiAlc1xuIiwgcHJlZml4LCBvcCwgY2Fycnlfb3BfbmFtZShvcC0+
b3ApKTsKKwlwcmludF9jYXJyeSgiXHRub2RlIiwgb3AtPm5vZGUpOworCXN3aXRjaCAob3AtPm9w
KSB7CisJY2FzZSBDT1BfSU5TRVJUOgorCWNhc2UgQ09QX1BBU1RFOgorCQlwcmludF9jb29yZCgi
XHRjb29yZCIsCisJCQkgICAgb3AtPnUuaW5zZXJ0LmQgPyBvcC0+dS5pbnNlcnQuZC0+Y29vcmQg
OiBOVUxMLCAwKTsKKwkJcmVpc2VyNF9wcmludF9rZXkoIlx0a2V5IiwKKwkJCQkgIG9wLT51Lmlu
c2VydC5kID8gb3AtPnUuaW5zZXJ0LmQtPmtleSA6IE5VTEwpOworCQlwcmludF9jYXJyeSgiXHRj
aGlsZCIsIG9wLT51Lmluc2VydC5jaGlsZCk7CisJCWJyZWFrOworCWNhc2UgQ09QX0RFTEVURToK
KwkJcHJpbnRfY2FycnkoIlx0Y2hpbGQiLCBvcC0+dS5kZWxldGUuY2hpbGQpOworCQlicmVhazsK
KwljYXNlIENPUF9DVVQ6CisJCWlmIChvcC0+dS5jdXRfb3Jfa2lsbC5pc19jdXQpIHsKKwkJCXBy
aW50X2Nvb3JkKCJcdGZyb20iLAorCQkJCSAgICBvcC0+dS5jdXRfb3Jfa2lsbC51LmtpbGwtPnBh
cmFtcy5mcm9tLCAwKTsKKwkJCXByaW50X2Nvb3JkKCJcdHRvIiwgb3AtPnUuY3V0X29yX2tpbGwu
dS5raWxsLT5wYXJhbXMudG8sCisJCQkJICAgIDApOworCQl9IGVsc2UgeworCQkJcHJpbnRfY29v
cmQoIlx0ZnJvbSIsCisJCQkJICAgIG9wLT51LmN1dF9vcl9raWxsLnUuY3V0LT5wYXJhbXMuZnJv
bSwgMCk7CisJCQlwcmludF9jb29yZCgiXHR0byIsIG9wLT51LmN1dF9vcl9raWxsLnUuY3V0LT5w
YXJhbXMudG8sCisJCQkJICAgIDApOworCQl9CisJCWJyZWFrOworCWNhc2UgQ09QX1VQREFURToK
KwkJcHJpbnRfY2FycnkoIlx0bGVmdCIsIG9wLT51LnVwZGF0ZS5sZWZ0KTsKKwkJYnJlYWs7CisJ
ZGVmYXVsdDoKKwkJLyogZG8gbm90aGluZyAqLworCQlicmVhazsKKwl9Cit9CisKKy8qIGR1bXAg
aW5mb3JtYXRpb24gYWJvdXQgYWxsIG5vZGVzIGFuZCBvcGVyYXRpb25zIGluIGEgQGxldmVsICov
CitzdGF0aWMgdm9pZCBwcmludF9sZXZlbChjb25zdCBjaGFyICpwcmVmaXggLyogcHJlZml4IHRv
IHByaW50ICovICwKKwkJCWNhcnJ5X2xldmVsICogbGV2ZWwvKiBsZXZlbCB0byBwcmludCAqLykK
K3sKKwljYXJyeV9ub2RlICpub2RlOworCWNhcnJ5X25vZGUgKnRtcF9ub2RlOworCWNhcnJ5X29w
ICpvcDsKKwljYXJyeV9vcCAqdG1wX29wOworCisJaWYgKGxldmVsID09IE5VTEwpIHsKKwkJcHJp
bnRrKCIlczogbnVsbFxuIiwgcHJlZml4KTsKKwkJcmV0dXJuOworCX0KKwlwcmludGsoIiVzOiAl
cCwgcmVzdGFydGFibGU6ICVzXG4iLAorCSAgICAgICBwcmVmaXgsIGxldmVsLCB0ZihsZXZlbC0+
cmVzdGFydGFibGUpKTsKKworCWZvcl9hbGxfbm9kZXMobGV2ZWwsIG5vZGUsIHRtcF9ub2RlKQor
CSAgICBwcmludF9jYXJyeSgiXHRjYXJyeSBub2RlIiwgbm9kZSk7CisJZm9yX2FsbF9vcHMobGV2
ZWwsIG9wLCB0bXBfb3ApCisJICAgIHByaW50X29wKCJcdGNhcnJ5IG9wIiwgb3ApOworfQorCisv
KiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlv
bi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgK
KyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEK
KyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvY2FycnkuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9jYXJyeS5oCi0tLSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2NhcnJ5LmgJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2NhcnJ5LmgJMjAyMC0w
Mi0wNSAyMDo1Mzo0MS40NDUyMjIxMTUgKzAxMDAKQEAgLTAsMCArMSw0NDUgQEAKKy8qIENvcHly
aWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQg
YnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIEZ1bmN0aW9ucyBhbmQgZGF0YSB0eXBlcyB0
byAiY2FycnkiIHRyZWUgbW9kaWZpY2F0aW9uKHMpIHVwd2FyZC4KKyAgIFNlZSBmcy9yZWlzZXI0
L2NhcnJ5LmMgZm9yIGRldGFpbHMuICovCisKKyNpZiAhZGVmaW5lZChfX0ZTX1JFSVNFUjRfQ0FS
UllfSF9fKQorI2RlZmluZSBfX0ZTX1JFSVNFUjRfQ0FSUllfSF9fCisKKyNpbmNsdWRlICJmb3J3
YXJkLmgiCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJwb29sLmgiCisjaW5jbHVkZSAi
em5vZGUuaCIKKworI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKKy8qICZjYXJyeV9ub2RlIC0g
ImxvY2F0aW9uIiBvZiBjYXJyeSBub2RlLgorCisgICAibG9jYXRpb24iIG9mIG5vZGUgdGhhdCBp
cyBpbnZvbHZlZCBvciBnb2luZyB0byBiZSBpbnZvbHZlZCBpbnRvCisgICBjYXJyeSBwcm9jZXNz
LiBOb2RlIHdoZXJlIG9wZXJhdGlvbiB3aWxsIGJlIGNhcnJpZWQgdG8gb24gdGhlCisgICBwYXJl
bnQgbGV2ZWwgY2Fubm90IGJlIHJlY29yZGVkIGV4cGxpY2l0bHkuIE9wZXJhdGlvbiB3aWxsIGJl
IGNhcnJpZWQKKyAgIHVzdWFsbHkgdG8gdGhlIHBhcmVudCBvZiBzb21lIG5vZGUgKHdoZXJlIGNo
YW5nZXMgYXJlIHBlcmZvcm1lZCBhdAorICAgdGhlIGN1cnJlbnQgbGV2ZWwpIG9yLCB0byB0aGUg
bGVmdCBuZWlnaGJvciBvZiBpdHMgcGFyZW50LiBCdXQgd2hpbGUKKyAgIG1vZGlmaWNhdGlvbnMg
YXJlIHBlcmZvcm1lZCBhdCB0aGUgY3VycmVudCBsZXZlbCwgcGFyZW50IG1heQorICAgY2hhbmdl
LiBTbywgd2UgaGF2ZSB0byBhbGxvdyBzb21lIGluZGlyZWN0aW9uIChvciwgcG9zaXRldmx5LAor
ICAgZmxleGliaWxpdHkpIGluIGxvY2F0aW5nIGNhcnJ5IG5vZGVzLgorCisqLwordHlwZWRlZiBz
dHJ1Y3QgY2Fycnlfbm9kZSB7CisJLyogcG9vbCBsaW5rYWdlICovCisJc3RydWN0IHJlaXNlcjRf
cG9vbF9oZWFkZXIgaGVhZGVyOworCisJLyogYmFzZSBub2RlIGZyb20gd2hpY2ggcmVhbF9ub2Rl
IGlzIGNhbGN1bGF0ZWQuIFNlZQorCSAgIGZzL3JlaXNlcjQvY2FycnkuYzpsb2NrX2NhcnJ5X25v
ZGUoKS4gKi8KKwl6bm9kZSAqbm9kZTsKKworCS8qIGhvdyB0byBnZXQgLT5yZWFsX25vZGUgKi8K
KwkvKiB0byBnZXQgLT5yZWFsX25vZGUgb2J0YWluIHBhcmVudCBvZiAtPm5vZGUgKi8KKwlfX3Uz
MiBwYXJlbnQ6MTsKKwkvKiB0byBnZXQgLT5yZWFsX25vZGUgb2J0YWluIGxlZnQgbmVpZ2hib3Ig
b2YgcGFyZW50IG9mCisJICAgLT5ub2RlICovCisJX191MzIgbGVmdDoxOworCV9fdTMyIGxlZnRf
YmVmb3JlOjE7CisKKwkvKiBsb2NraW5nICovCisKKwkvKiB0aGlzIG5vZGUgd2FzIGxvY2tlZCBi
eSBjYXJyeSBwcm9jZXNzIGFuZCBzaG91bGQgYmUKKwkgICB1bmxvY2tlZCB3aGVuIGNhcnJ5IGxl
YXZlcyBhIGxldmVsICovCisJX191MzIgdW5sb2NrOjE7CisKKwkvKiBkaXNrIGJsb2NrIGZvciB0
aGlzIG5vZGUgd2FzIGFsbG9jYXRlZCBieSBjYXJyeSBwcm9jZXNzIGFuZAorCSAgIHNob3VsZCBi
ZSBkZWFsbG9jYXRlZCB3aGVuIGNhcnJ5IGxlYXZlcyBhIGxldmVsICovCisJX191MzIgZGVhbGxv
Y2F0ZToxOworCS8qIHRoaXMgY2Fycnkgbm9kZSB3YXMgYWxsb2NhdGVkIGJ5IGNhcnJ5IHByb2Nl
c3MgYW5kIHNob3VsZCBiZQorCSAgIGZyZWVkIHdoZW4gY2FycnkgbGVhdmVzIGEgbGV2ZWwgKi8K
KwlfX3UzMiBmcmVlOjE7CisKKwkvKiB0eXBlIG9mIGxvY2sgd2Ugd2FudCB0byB0YWtlIG9uIHRo
aXMgbm9kZSAqLworCWxvY2tfaGFuZGxlIGxvY2tfaGFuZGxlOworfSBjYXJyeV9ub2RlOworCisv
KiAmY2Fycnlfb3Bjb2RlIC0gZWxlbWVudGFyeSBvcGVyYXRpb25zIHRoYXQgY2FuIGJlIGNhcnJp
ZWQgdXB3YXJkCisKKyAgIE9wZXJhdGlvbnMgdGhhdCBjYXJyeSgpIGNhbiBoYW5kbGUuIFRoaXMg
bGlzdCBpcyBzdXBwb3NlZCB0byBiZQorICAgZXhwYW5kZWQuCisKKyAgIEVhY2ggY2Fycnkgb3Bl
cmF0aW9uIChjb3ApIGlzIGhhbmRsZWQgYnkgYXBwcm9wcmlhdGUgZnVuY3Rpb24gZGVmaW5lZAor
ICAgaW4gZnMvcmVpc2VyNC9jYXJyeS5jLiBGb3IgZXhhbXBsZSBDT1BfSU5TRVJUIGlzIGhhbmRs
ZWQgYnkKKyAgIGZzL3JlaXNlcjQvY2FycnkuYzpjYXJyeV9pbnNlcnQoKSBldGMuIFRoZXNlIGZ1
bmN0aW9ucyBpbiB0dXJuCisgICBjYWxsIHBsdWdpbnMgb2Ygbm9kZXMgYWZmZWN0ZWQgYnkgb3Bl
cmF0aW9uIHRvIG1vZGlmeSBub2RlcycgY29udGVudAorICAgYW5kIHRvIGdhdGhlciBvcGVyYXRp
b25zIHRvIGJlIHBlcmZvcm1lZCBvbiB0aGUgbmV4dCBsZXZlbC4KKworKi8KK3R5cGVkZWYgZW51
bSB7CisJLyogaW5zZXJ0IG5ldyBpdGVtIGludG8gbm9kZS4gKi8KKwlDT1BfSU5TRVJULAorCS8q
IGRlbGV0ZSBwb2ludGVyIGZyb20gcGFyZW50IG5vZGUgKi8KKwlDT1BfREVMRVRFLAorCS8qIHJl
bW92ZSBwYXJ0IG9mIG9yIHdob2xlIG5vZGUuICovCisJQ09QX0NVVCwKKwkvKiBpbmNyZWFzZSBz
aXplIG9mIGl0ZW0uICovCisJQ09QX1BBU1RFLAorCS8qIGluc2VydCBleHRlbnQgKHRoYXQgaXMg
c2VxdWVuY2Ugb2YgdW5mb3JtYXR0ZWQgbm9kZXMpLiAqLworCUNPUF9FWFRFTlQsCisJLyogdXBk
YXRlIGRlbGltaXRpbmcga2V5IGluIGxlYXN0IGNvbW1vbiBhbmNlc3RvciBvZiB0d28KKwkgICBu
b2Rlcy4gVGhpcyBpcyBwZXJmb3JtZWQgd2hlbiBpdGVtcyBhcmUgbW92ZWQgYmV0d2VlbiB0d28K
KwkgICBub2Rlcy4KKwkgKi8KKwlDT1BfVVBEQVRFLAorCS8qIGluc2VydCBmbG93ICovCisJQ09Q
X0lOU0VSVF9GTE9XLAorCUNPUF9MQVNUX09QLAorfSBjYXJyeV9vcGNvZGU7CisKKyNkZWZpbmUg
Q0FSUllfRkxPV19ORVdfTk9ERVNfTElNSVQgMjAKKworLyogbW9kZSAob3Igc3VidHlwZSkgb2Yg
Q09QX3tJTlNFUlR8UEFTVEV9IG9wZXJhdGlvbi4gU3BlY2lmaWVzIGhvdyB0YXJnZXQKKyAgIGl0
ZW0gaXMgZGV0ZXJtaW5lZC4gKi8KK3R5cGVkZWYgZW51bSB7CisJLyogdGFyZ2V0IGl0ZW0gaXMg
b25lIGNvbnRhaW5pbmcgcG9pbnRlciB0byB0aGUgLT5jaGlsZCBub2RlICovCisJQ09QVF9DSElM
RCwKKwkvKiB0YXJnZXQgaXRlbSBpcyBnaXZlbiBleHBsaWNpdGx5IGJ5IEBjb29yZCAqLworCUNP
UFRfSVRFTV9EQVRBLAorCS8qIHRhcmdldCBpdGVtIGlzIGdpdmVuIGJ5IGtleSAqLworCUNPUFRf
S0VZLAorCS8qIHNlZSBpbnNlcnRfcGFzdGVfY29tbW9uKCkgZm9yIG1vcmUgY29tbWVudHMgb24g
dGhpcy4gKi8KKwlDT1BUX1BBU1RFX1JFU1RBUlRFRCwKK30gY29wX2luc2VydF9wb3NfdHlwZTsK
KworLyogZmxhZ3MgdG8gY3V0IGFuZCBkZWxldGUgKi8KK3R5cGVkZWYgZW51bSB7CisJLyogZG9u
J3Qga2lsbCBub2RlIGV2ZW4gaWYgaXQgYmVjYW1lIGNvbXBsZXRlbHkgZW1wdHkgYXMgcmVzdWx0
cyBvZgorCSAqIGN1dC4gVGhpcyBpcyBuZWVkZWQgZm9yIGVvdHRsIGhhbmRsaW5nLiBTZWUgY2Fy
cnlfZXh0ZW50KCkgZm9yCisJICogZGV0YWlscy4gKi8KKwlERUxFVEVfUkVUQUlOX0VNUFRZID0g
KDEgPDwgMCkKK30gY29wX2RlbGV0ZV9mbGFnOworCisvKgorICogY2FycnkoKSBpbXBsZW1lbnRz
ICJsb2NrIGhhbmRsZSB0cmFja2luZyIgZmVhdHVyZS4KKyAqCisgKiBDYWxsZXJzIHN1cHBseSBj
YXJyeSB3aXRoIG5vZGUgd2hlcmUgdG8gcGVyZm9ybSBpbml0aWFsIG9wZXJhdGlvbiBhbmQgbG9j
aworICogaGFuZGxlIG9uIHRoaXMgbm9kZS4gVHJ5aW5nIHRvIG9wdGltaXplIG5vZGUgdXRpbGl6
YXRpb24gY2FycnkgbWF5IGFjdHVhbGx5CisgKiBtb3ZlIGluc2VydGlvbiBwb2ludCB0byBkaWZm
ZXJlbnQgbm9kZS4gQ2FsbGVycyBleHBlY3QgdGhhdCBsb2NrIGhhbmRsZQorICogd2lsbCByZWJl
IHRyYW5zZmVycmVkIHRvIHRoZSBuZXcgbm9kZSBhbHNvLgorICoKKyAqLwordHlwZWRlZiBlbnVt
IHsKKwkvKiB0cmFuc2ZlciBsb2NrIGhhbmRsZSBhbG9uZyB3aXRoIGluc2VydGlvbiBwb2ludCAq
LworCUNBUlJZX1RSQUNLX0NIQU5HRSA9IDEsCisJLyogYWNxdWlyZSBuZXcgbG9jayBoYW5kbGUg
dG8gdGhlIG5vZGUgd2hlcmUgaW5zZXJ0aW9uIHBvaW50IGlzLiBUaGlzCisJICogaXMgdXNlZCB3
aGVuIGNhcnJ5KCkgY2xpZW50IGRvZXNuJ3QgaW5pdGlhbGx5IHBvc3Nlc3MgbG9jayBoYW5kbGUK
KwkgKiBvbiB0aGUgaW5zZXJ0aW9uIHBvaW50IG5vZGUsIGZvciBleGFtcGxlLCBieSBleHRlbnQg
aW5zZXJ0aW9uCisJICogY29kZS4gU2VlIGNhcnJ5X2V4dGVudCgpLiAqLworCUNBUlJZX1RSQUNL
X05PREUgPSAyCit9IGNhcnJ5X3RyYWNrX3R5cGU7CisKKy8qIGRhdGEgc3VwcGxpZWQgdG8gQ09Q
X3tJTlNFUlR8UEFTVEV9IGJ5IGNhbGxlcnMgKi8KK3R5cGVkZWYgc3RydWN0IGNhcnJ5X2luc2Vy
dF9kYXRhIHsKKwkvKiBwb3NpdGlvbiB3aGVyZSBuZXcgaXRlbSBpcyB0byBiZSBpbnNlcnRlZCAq
LworCWNvb3JkX3QgKmNvb3JkOworCS8qIG5ldyBpdGVtIGRlc2NyaXB0aW9uICovCisJcmVpc2Vy
NF9pdGVtX2RhdGEgKiBkYXRhOworCS8qIGtleSBvZiBuZXcgaXRlbSAqLworCWNvbnN0IHJlaXNl
cjRfa2V5ICoga2V5OworfSBjYXJyeV9pbnNlcnRfZGF0YTsKKworLyogY3V0IGFuZCBraWxsIGFy
ZSBzaW1pbGFyLCBzbyBjYXJyeV9jdXRfZGF0YSBhbmQgY2Fycnlfa2lsbF9kYXRhIHNoYXJlIHRo
ZQorICAgYmVsb3cgc3RydWN0dXJlIG9mIHBhcmFtZXRlcnMgKi8KK3N0cnVjdCBjdXRfa2lsbF9w
YXJhbXMgeworCS8qIGNvb3JkIHdoZXJlIGN1dCBzdGFydHMgKGluY2x1c2l2ZSkgKi8KKwljb29y
ZF90ICpmcm9tOworCS8qIGNvb3JkIHdoZXJlIGN1dCBzdG9wcyAoaW5jbHVzaXZlLCB0aGlzIGl0
ZW0vdW5pdCB3aWxsIGFsc28gYmUKKwkgKiBjdXQpICovCisJY29vcmRfdCAqdG87CisJLyogc3Rh
cnRpbmcga2V5LiBUaGlzIGlzIG5lY2Vzc2FyeSB3aGVuIGl0ZW0gYW5kIHVuaXQgcG9zIGRvbid0
CisJICogdW5pcXVlbHkgaWRlbnRpZnkgd2hhdCBwb3J0aW9uIG9yIHRyZWUgdG8gcmVtb3ZlLiBG
b3IgZXhhbXBsZSwgdGhpcworCSAqIGluZGljYXRlcyB3aGF0IHBvcnRpb24gb2YgZXh0ZW50IHVu
aXQgd2lsbCBiZSBhZmZlY3RlZC4gKi8KKwljb25zdCByZWlzZXI0X2tleSAqIGZyb21fa2V5Owor
CS8qIGV4Y2x1c2l2ZSBzdG9wIGtleSAqLworCWNvbnN0IHJlaXNlcjRfa2V5ICogdG9fa2V5Owor
CS8qIGlmIHRoaXMgaXMgbm90IE5VTEwsIHNtYWxsZXN0IGFjdHVhbGx5IHJlbW92ZWQga2V5IGlz
IHN0b3JlZAorCSAqIGhlcmUuICovCisJcmVpc2VyNF9rZXkgKnNtYWxsZXN0X3JlbW92ZWQ7CisJ
Lyoga2lsbF9ub2RlX2NvbnRlbnQoKSAgaXMgY2FsbGVkIGZvciBmaWxlIHRydW5jYXRlICovCisJ
aW50IHRydW5jYXRlOworfTsKKworc3RydWN0IGNhcnJ5X2N1dF9kYXRhIHsKKwlzdHJ1Y3QgY3V0
X2tpbGxfcGFyYW1zIHBhcmFtczsKK307CisKK3N0cnVjdCBjYXJyeV9raWxsX2RhdGEgeworCXN0
cnVjdCBjdXRfa2lsbF9wYXJhbXMgcGFyYW1zOworCS8qIHBhcmFtZXRlciB0byBiZSBwYXNzZWQg
dG8gdGhlIC0+a2lsbF9ob29rKCkgbWV0aG9kIG9mIGl0ZW0KKwkgKiBwbHVnaW4gKi8KKwkvKnZv
aWQgKmlwbHVnX3BhcmFtczsgKi8vKiBGSVhNRTogdW51c2VkIGN1cnJlbnRseSAqLworCS8qIGlm
IG5vdCBOVUxMLS0taW5vZGUgd2hvc2UgaXRlbXMgYXJlIGJlaW5nIHJlbW92ZWQuIFRoaXMgaXMg
bmVlZGVkCisJICogZm9yIC0+a2lsbF9ob29rKCkgb2YgZXh0ZW50IGl0ZW0gdG8gdXBkYXRlIFZN
IHN0cnVjdHVyZXMgd2hlbgorCSAqIHJlbW92aW5nIHBhZ2VzLiAqLworCXN0cnVjdCBpbm9kZSAq
aW5vZGU7CisJLyogc2libGluZyBsaXN0IG1haW50ZW5hbmNlIGlzIGNvbXBsaWNhdGVkIGJ5IGV4
aXN0ZW5jZSBvZiBlb3R0bC4gV2hlbgorCSAqIGVvdHRsIHdob3NlIGxlZnQgYW5kIHJpZ2h0IG5l
aWdoYm9ycyBhcmUgZm9ybWF0dGVkIGxlYXZlcyBpcworCSAqIHJlbW92ZWQsIG9uZSBoYXMgdG8g
Y29ubmVjdCBzYWlkIGxlYXZlcyBpbiB0aGUgc2libGluZyBsaXN0LiBUaGlzCisJICogY2Fubm90
IGJlIGRvbmUgd2hlbiBleHRlbnQgcmVtb3ZhbCBpcyBqdXN0IHN0YXJ0ZWQgYXMgbG9ja2luZyBy
dWxlcworCSAqIHJlcXVpcmUgc2libGluZyBsaXN0IHVwZGF0ZSB0byBoYXBwZW4gYXRvbWljYWxs
eSB3aXRoIHJlbW92YWwgb2YKKwkgKiBleHRlbnQgaXRlbS4gVGhlcmVmb3JlOiAxLiBwb2ludGVy
cyB0byBsZWZ0IGFuZCByaWdodCBuZWlnaGJvcnMKKwkgKiBoYXZlIHRvIGJlIHBhc3NlZCBkb3du
IHRvIHRoZSAtPmtpbGxfaG9vaygpIG9mIGV4dGVudCBpdGVtLCBhbmQKKwkgKiAyLiBzYWlkIG5l
aWdoYm9ycyBoYXZlIHRvIGJlIGxvY2tlZC4gKi8KKwlsb2NrX2hhbmRsZSAqbGVmdDsKKwlsb2Nr
X2hhbmRsZSAqcmlnaHQ7CisJLyogZmxhZ3MgbW9kaWZ5aW5nIGJlaGF2aW9yIG9mIGtpbGwuIEN1
cnJlbnRseSwgaXQgbWF5IGhhdmUKKwkgICBERUxFVEVfUkVUQUlOX0VNUFRZIHNldC4gKi8KKwl1
bnNpZ25lZCBmbGFnczsKKwljaGFyICpidWY7Cit9OworCisvKiAmY2FycnlfdHJlZV9vcCAtIG9w
ZXJhdGlvbiB0byAiY2FycnkiIHVwd2FyZC4KKworICAgRGVzY3JpcHRpb24gb2YgYW4gb3BlcmF0
aW9uIHdlIHdhbnQgdG8gImNhcnJ5IiB0byB0aGUgdXBwZXIgbGV2ZWwgb2YKKyAgIGEgdHJlZTog
ZS5nLCB3aGVuIHdlIGluc2VydCBzb21ldGhpbmcgYW5kIHRoZXJlIGlzIG5vdCBlbm91Z2ggc3Bh
Y2UKKyAgIHdlIGFsbG9jYXRlIGEgbmV3IG5vZGUgYW5kICJjYXJyeSIgdGhlIG9wZXJhdGlvbiBv
ZiBpbnNlcnRpbmcgYQorICAgcG9pbnRlciB0byB0aGUgbmV3IG5vZGUgdG8gdGhlIHVwcGVyIGxl
dmVsLCBvbiByZW1vdmFsIG9mIGVtcHR5IG5vZGUsCisgICB3ZSBjYXJyeSB1cCBvcGVyYXRpb24g
b2YgcmVtb3ZpbmcgYXBwcm9wcmlhdGUgZW50cnkgZnJvbSBwYXJlbnQuCisKKyAgIFRoZXJlIGFy
ZSB0d28gdHlwZXMgb2YgY2Fycnkgb3BzOiB3aGVuIGFkZGluZyBvciBkZWxldGluZyBub2RlIHdl
CisgICBub2RlIGF0IHRoZSBwYXJlbnQgbGV2ZWwgd2hlcmUgYXBwcm9wcmlhdGUgbW9kaWZpY2F0
aW9uIGhhcyB0byBiZQorICAgcGVyZm9ybWVkIGlzIGtub3duIGluIGFkdmFuY2UuIFdoZW4gc2hp
ZnRpbmcgaXRlbXMgYmV0d2VlbiBub2RlcworICAgKHNwbGl0LCBtZXJnZSksIGRlbGltaXRpbmcg
a2V5IHNob3VsZCBiZSBjaGFuZ2VkIGluIHRoZSBsZWFzdCBjb21tb24KKyAgIHBhcmVudCBvZiB0
aGUgbm9kZXMgaW52b2x2ZWQgdGhhdCBpcyBub3Qga25vd24gaW4gYWR2YW5jZS4KKworICAgRm9y
IHRoZSBvcGVyYXRpb25zIG9mIHRoZSBmaXJzdCB0eXBlIHdlIHN0b3JlIGluICZjYXJyeV9vcCBw
b2ludGVyIHRvCisgICB0aGUgJmNhcnJ5X25vZGUgYXQgdGhlIHBhcmVudCBsZXZlbC4gRm9yIHRo
ZSBvcGVyYXRpb24gb2YgdGhlIHNlY29uZAorICAgdHlwZSB3ZSBzdG9yZSAmY2Fycnlfbm9kZSBv
ciBwYXJlbnRzIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBub2RlcworICAgbW9kaWZpZWQgYW5kIGtl
ZXAgdHJhY2sgb2YgdGhlbSB1cHdhcmQgdW50aWwgdGhleSBjb2luY2lkZS4KKworKi8KK3R5cGVk
ZWYgc3RydWN0IGNhcnJ5X29wIHsKKwkvKiBwb29sIGxpbmthZ2UgKi8KKwlzdHJ1Y3QgcmVpc2Vy
NF9wb29sX2hlYWRlciBoZWFkZXI7CisJY2Fycnlfb3Bjb2RlIG9wOworCS8qIG5vZGUgb24gd2hp
Y2ggb3BlcmF0aW9uIGlzIHRvIGJlIHBlcmZvcm1lZDoKKworCSAgIGZvciBpbnNlcnQsIHBhc3Rl
OiBub2RlIHdoZXJlIG5ldyBpdGVtIGlzIHRvIGJlIGluc2VydGVkCisKKwkgICBmb3IgZGVsZXRl
OiBub2RlIHdoZXJlIHBvaW50ZXIgaXMgdG8gYmUgZGVsZXRlZAorCisJICAgZm9yIGN1dDogbm9k
ZSB0byBjdXQgZnJvbQorCisJICAgZm9yIHVwZGF0ZTogbm9kZSB3aGVyZSBkZWxpbWl0aW5nIGtl
eSBpcyB0byBiZSBtb2RpZmllZAorCisJICAgZm9yIG1vZGlmeTogcGFyZW50IG9mIG1vZGlmaWVk
IG5vZGUKKworCSAqLworCWNhcnJ5X25vZGUgKm5vZGU7CisJdW5pb24geworCQlzdHJ1Y3Qgewor
CQkJLyogKHN1Yi0pdHlwZSBvZiBpbnNlcnRpb24vcGFzdGUuIFRha2VuIGZyb20KKwkJCSAgIGNv
cF9pbnNlcnRfcG9zX3R5cGUuICovCisJCQlfX3U4IHR5cGU7CisJCQkvKiB2YXJpb3VzIG9wZXJh
dGlvbiBmbGFncy4gVGFrZW4gZnJvbQorCQkJICAgY29wX2luc2VydF9mbGFnLiAqLworCQkJX191
OCBmbGFnczsKKwkJCWNhcnJ5X2luc2VydF9kYXRhICpkOworCQkJY2Fycnlfbm9kZSAqY2hpbGQ7
CisJCQl6bm9kZSAqYnJvdGhlcjsKKwkJfSBpbnNlcnQsIHBhc3RlLCBleHRlbnQ7CisKKwkJc3Ry
dWN0IHsKKwkJCWludCBpc19jdXQ7CisJCQl1bmlvbiB7CisJCQkJY2Fycnlfa2lsbF9kYXRhICpr
aWxsOworCQkJCWNhcnJ5X2N1dF9kYXRhICpjdXQ7CisJCQl9IHU7CisJCX0gY3V0X29yX2tpbGw7
CisKKwkJc3RydWN0IHsKKwkJCWNhcnJ5X25vZGUgKmxlZnQ7CisJCX0gdXBkYXRlOworCQlzdHJ1
Y3QgeworCQkJLyogY2hhbmdlZCBjaGlsZCAqLworCQkJY2Fycnlfbm9kZSAqY2hpbGQ7CisJCQkv
KiBiaXRtYXNrIG9mIGNoYW5nZXMuIFNlZSAmY29wX21vZGlmeV9mbGFnICovCisJCQlfX3UzMiBm
bGFnOworCQl9IG1vZGlmeTsKKwkJc3RydWN0IHsKKwkJCS8qIGZsYWdzIHRvIGRlbGV0aW9uIG9w
ZXJhdGlvbi4gQXJlIHRha2VuIGZyb20KKwkJCSAgIGNvcF9kZWxldGVfZmxhZyAqLworCQkJX191
MzIgZmxhZ3M7CisJCQkvKiBjaGlsZCB0byBkZWxldGUgZnJvbSBwYXJlbnQuIElmIHRoaXMgaXMK
KwkJCSAgIE5VTEwsIGRlbGV0ZSBvcC0+bm9kZS4gICovCisJCQljYXJyeV9ub2RlICpjaGlsZDsK
KwkJfSBkZWxldGU7CisJCXN0cnVjdCB7CisJCQkvKiB2YXJpb3VzIG9wZXJhdGlvbiBmbGFncy4g
VGFrZW4gZnJvbQorCQkJICAgY29wX2luc2VydF9mbGFnLiAqLworCQkJX191MzIgZmxhZ3M7CisJ
CQlmbG93X3QgKmZsb3c7CisJCQljb29yZF90ICppbnNlcnRfcG9pbnQ7CisJCQlyZWlzZXI0X2l0
ZW1fZGF0YSAqZGF0YTsKKwkJCS8qIGZsb3cgaW5zZXJ0aW9uIGlzIGxpbWl0ZWQgYnkgbnVtYmVy
IG9mIG5ldyBibG9ja3MKKwkJCSAgIGFkZGVkIGluIHRoYXQgb3BlcmF0aW9uIHdoaWNoIGRvIG5v
dCBnZXQgYW55IGRhdGEKKwkJCSAgIGJ1dCBwYXJ0IG9mIGZsb3cuIFRoaXMgbGltaXQgaXMgc2V0
IGJ5IG1hY3JvCisJCQkgICBDQVJSWV9GTE9XX05FV19OT0RFU19MSU1JVC4gVGhpcyBmaWVsZCBz
dG9yZXMgbnVtYmVyCisJCQkgICBvZiBub2RlcyBhZGRlZCBhbHJlYWR5IGR1cmluZyBvbmUgY2Fy
cnlfZmxvdyAqLworCQkJaW50IG5ld19ub2RlczsKKwkJfSBpbnNlcnRfZmxvdzsKKwl9IHU7Cit9
IGNhcnJ5X29wOworCisvKiAmY2Fycnlfb3BfcG9vbCAtIHByZWFsbG9jYXRlZCBwb29sIG9mIGNh
cnJ5IG9wZXJhdGlvbnMsIGFuZCBub2RlcyAqLwordHlwZWRlZiBzdHJ1Y3QgY2FycnlfcG9vbCB7
CisJY2Fycnlfb3Agb3BbQ0FSUklFU19QT09MX1NJWkVdOworCXN0cnVjdCByZWlzZXI0X3Bvb2wg
b3BfcG9vbDsKKwljYXJyeV9ub2RlIG5vZGVbTk9ERVNfTE9DS0VEX1BPT0xfU0laRV07CisJc3Ry
dWN0IHJlaXNlcjRfcG9vbCBub2RlX3Bvb2w7Cit9IGNhcnJ5X3Bvb2w7CisKKy8qICZjYXJyeV90
cmVlX2xldmVsIC0gY2FycnkgcHJvY2VzcyBvbiBnaXZlbiBsZXZlbAorCisgICBEZXNjcmlwdGlv
biBvZiBiYWxhbmNpbmcgcHJvY2VzcyBvbiB0aGUgZ2l2ZW4gbGV2ZWwuCisKKyAgIE5vIG5lZWQg
Zm9yIGxvY2tpbmcgaGVyZSwgYXMgY2FycnlfdHJlZV9sZXZlbCBpcyBlc3NlbnRpYWxseSBwZXIK
KyAgIHRocmVhZCB0aGluZyAoZm9yIG5vdykuCisKKyovCitzdHJ1Y3QgY2FycnlfbGV2ZWwgewor
CS8qIHRoaXMgbGV2ZWwgbWF5IGJlIHJlc3RhcnRlZCAqLworCV9fdTMyIHJlc3RhcnRhYmxlOjE7
CisJLyogbGlzdCBvZiBjYXJyeSBub2RlcyBvbiB0aGlzIGxldmVsLCBvcmRlcmVkIGJ5IGtleSBv
cmRlciAqLworCXN0cnVjdCBsaXN0X2hlYWQgbm9kZXM7CisJc3RydWN0IGxpc3RfaGVhZCBvcHM7
CisJLyogcG9vbCB3aGVyZSBuZXcgb2JqZWN0cyBhcmUgYWxsb2NhdGVkIGZyb20gKi8KKwljYXJy
eV9wb29sICpwb29sOworCWludCBvcHNfbnVtOworCWludCBub2Rlc19udW07CisJLyogbmV3IHJv
b3QgY3JlYXRlZCBvbiB0aGlzIGxldmVsLCBpZiBhbnkgKi8KKwl6bm9kZSAqbmV3X3Jvb3Q7CisJ
LyogVGhpcyBpcyBzZXQgYnkgY2FsbGVyIChpbnNlcnRfYnlfa2V5KCksIHJyZWlzZXI0X2VzaXpl
X2l0ZW0oKSwgZXRjLikKKwkgICB3aGVuIHRoZXkgd2FudCAtPnRyYWNrZWQgdG8gYXV0b21hZ2lj
YWxseSB3YW5kZXIgdG8gdGhlIG5vZGUgd2hlcmUKKwkgICBpbnNlcnRpb24gcG9pbnQgbW92ZWQg
YWZ0ZXIgaW5zZXJ0IG9yIHBhc3RlLgorCSAqLworCWNhcnJ5X3RyYWNrX3R5cGUgdHJhY2tfdHlw
ZTsKKwkvKiBsb2NrIGhhbmRsZSBzdXBwbGllZCBieSB1c2VyIHRoYXQgd2UgYXJlIHRyYWNraW5n
LiBTZWUKKwkgICBhYm92ZS4gKi8KKwlsb2NrX2hhbmRsZSAqdHJhY2tlZDsKK307CisKKy8qIGlu
Zm9ybWF0aW9uIGNhcnJ5IHBhc3NlcyB0byBwbHVnaW4gbWV0aG9kcyB0aGF0IG1heSBhZGQgbmV3
IG9wZXJhdGlvbnMgdG8KKyAgIHRoZSBAdG9kbyBxdWV1ZSAgKi8KK3N0cnVjdCBjYXJyeV9wbHVn
aW5faW5mbyB7CisJY2FycnlfbGV2ZWwgKmRvaW5nOworCWNhcnJ5X2xldmVsICp0b2RvOworfTsK
KworaW50IHJlaXNlcjRfY2FycnkoY2FycnlfbGV2ZWwgKiBkb2luZywgY2FycnlfbGV2ZWwgKiBk
b25lKTsKKworY2Fycnlfbm9kZSAqcmVpc2VyNF9hZGRfY2FycnkoY2FycnlfbGV2ZWwgKiBsZXZl
bCwgcG9vbF9vcmRlcmluZyBvcmRlciwKKwkJCSAgICAgIGNhcnJ5X25vZGUgKiByZWZlcmVuY2Up
OworY2Fycnlfbm9kZSAqcmVpc2VyNF9hZGRfY2Fycnlfc2tpcChjYXJyeV9sZXZlbCAqIGxldmVs
LCBwb29sX29yZGVyaW5nIG9yZGVyLAorCQkJCSAgIGNhcnJ5X25vZGUgKiByZWZlcmVuY2UpOwor
CitleHRlcm4gY2Fycnlfbm9kZSAqaW5zZXJ0X2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBkb2lu
ZywKKwkJCQkgICAgIGNhcnJ5X2xldmVsICogdG9kbywgY29uc3Qgem5vZGUgKiBub2RlKTsKKwor
ZXh0ZXJuIGNhcnJ5X3Bvb2wgKmluaXRfY2FycnlfcG9vbChpbnQpOworZXh0ZXJuIHZvaWQgZG9u
ZV9jYXJyeV9wb29sKGNhcnJ5X3Bvb2wgKiBwb29sKTsKKworZXh0ZXJuIHZvaWQgaW5pdF9jYXJy
eV9sZXZlbChjYXJyeV9sZXZlbCAqIGxldmVsLCBjYXJyeV9wb29sICogcG9vbCk7CisKK2V4dGVy
biBjYXJyeV9vcCAqcmVpc2VyNF9wb3N0X2NhcnJ5KGNhcnJ5X2xldmVsICogbGV2ZWwsIGNhcnJ5
X29wY29kZSBvcCwKKwkJCQkgICAgem5vZGUgKiBub2RlLCBpbnQgYXBwbHlfdG9fcGFyZW50KTsK
K2V4dGVybiBjYXJyeV9vcCAqbm9kZV9wb3N0X2NhcnJ5KGNhcnJ5X3BsdWdpbl9pbmZvICogaW5m
bywgY2Fycnlfb3Bjb2RlIG9wLAorCQkJCSB6bm9kZSAqIG5vZGUsIGludCBhcHBseV90b19wYXJl
bnRfcCk7CisKK2NhcnJ5X25vZGUgKmFkZF9uZXdfem5vZGUoem5vZGUgKiBicm90aGVyLCBjYXJy
eV9ub2RlICogcmVmZXJlbmNlLAorCQkJICBjYXJyeV9sZXZlbCAqIGRvaW5nLCBjYXJyeV9sZXZl
bCAqIHRvZG8pOworCitjYXJyeV9ub2RlICpmaW5kX2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBs
ZXZlbCwgY29uc3Qgem5vZGUgKiBub2RlKTsKKworZXh0ZXJuIHpub2RlICpyZWlzZXI0X2NhcnJ5
X3JlYWwoY29uc3QgY2Fycnlfbm9kZSAqIG5vZGUpOworCisvKiBoZWxwZXIgbWFjcm9zIHRvIGl0
ZXJhdGUgb3ZlciBjYXJyeSBxdWV1ZXMgKi8KKworI2RlZmluZSBjYXJyeV9ub2RlX25leHQobm9k
ZSkJCQkJCQlcCisJbGlzdF9lbnRyeSgobm9kZSktPmhlYWRlci5sZXZlbF9saW5rYWdlLm5leHQs
IGNhcnJ5X25vZGUsCVwKKwkJICAgaGVhZGVyLmxldmVsX2xpbmthZ2UpCisKKyNkZWZpbmUgY2Fy
cnlfbm9kZV9wcmV2KG5vZGUpCQkJCQkJXAorCWxpc3RfZW50cnkoKG5vZGUpLT5oZWFkZXIubGV2
ZWxfbGlua2FnZS5wcmV2LCBjYXJyeV9ub2RlLAlcCisJCSAgIGhlYWRlci5sZXZlbF9saW5rYWdl
KQorCisjZGVmaW5lIGNhcnJ5X25vZGVfZnJvbnQobGV2ZWwpCQkJCQkJXAorCWxpc3RfZW50cnko
KGxldmVsKS0+bm9kZXMubmV4dCwgY2Fycnlfbm9kZSwgaGVhZGVyLmxldmVsX2xpbmthZ2UpCisK
KyNkZWZpbmUgY2Fycnlfbm9kZV9iYWNrKGxldmVsKQkJCQkJCVwKKwlsaXN0X2VudHJ5KChsZXZl
bCktPm5vZGVzLnByZXYsIGNhcnJ5X25vZGUsIGhlYWRlci5sZXZlbF9saW5rYWdlKQorCisjZGVm
aW5lIGNhcnJ5X25vZGVfZW5kKGxldmVsLCBub2RlKQkJCQlcCisJKCYobGV2ZWwpLT5ub2RlcyA9
PSAmKG5vZGUpLT5oZWFkZXIubGV2ZWxfbGlua2FnZSkKKworLyogbWFjcm8gdG8gaXRlcmF0ZSBv
dmVyIGFsbCBvcGVyYXRpb25zIGluIGEgQGxldmVsICovCisjZGVmaW5lIGZvcl9hbGxfb3BzKGxl
dmVsIC8qIGNhcnJ5IGxldmVsIChvZiB0eXBlIGNhcnJ5X2xldmVsICopICovLAkgICAgICAgXAor
CQkgICAgb3AgICAgLyogcG9pbnRlciB0byBjYXJyeSBvcGVyYXRpb24sIG1vZGlmaWVkIGJ5IGxv
b3AgKG9mICBcCisJCQkgICAqIHR5cGUgY2Fycnlfb3AgKikgKi8sCQkJICAgICAgIFwKKwkJICAg
IHRtcCAgIC8qIHBvaW50ZXIgdG8gY2Fycnkgb3BlcmF0aW9uIChvZiB0eXBlIGNhcnJ5X29wICop
LCAgXAorCQkJICAgKiB1c2VkIHRvIG1ha2UgaXRlcmF0b3Igc3RhYmxlIGluIHRoZSBmYWNlIG9m
ICAgICAgIFwKKwkJCSAgICogZGVsZXRpb25zIGZyb20gdGhlIGxldmVsICovICkJCSAgICAgICBc
Citmb3IgKG9wID0gbGlzdF9lbnRyeShsZXZlbC0+b3BzLm5leHQsIGNhcnJ5X29wLCBoZWFkZXIu
bGV2ZWxfbGlua2FnZSksCSAgICAgICBcCisgICAgIHRtcCA9IGxpc3RfZW50cnkob3AtPmhlYWRl
ci5sZXZlbF9saW5rYWdlLm5leHQsIGNhcnJ5X29wLCBoZWFkZXIubGV2ZWxfbGlua2FnZSk7IAlc
CisgICAgICZvcC0+aGVhZGVyLmxldmVsX2xpbmthZ2UgIT0gJmxldmVsLT5vcHM7CQkJCSAgICAg
ICBcCisgICAgIG9wID0gdG1wLAkJCQkJCQkJICAgICAgIFwKKyAgICAgdG1wID0gbGlzdF9lbnRy
eShvcC0+aGVhZGVyLmxldmVsX2xpbmthZ2UubmV4dCwgY2Fycnlfb3AsIGhlYWRlci5sZXZlbF9s
aW5rYWdlKSkKKworI2lmIDAKK2ZvciAob3AgPSAoY2Fycnlfb3AgKikgcG9vbF9sZXZlbF9saXN0
X2Zyb250KCZsZXZlbC0+b3BzKSwJICAgICAgIFwKKyAgICAgdG1wID0gKGNhcnJ5X29wICopIHBv
b2xfbGV2ZWxfbGlzdF9uZXh0KCZvcC0+aGVhZGVyKSA7CSAgICAgICBcCisgICAgICFwb29sX2xl
dmVsX2xpc3RfZW5kKCZsZXZlbC0+b3BzLCAmb3AtPmhlYWRlcikgOwkJICAgICAgIFwKKyAgICAg
b3AgPSB0bXAsIHRtcCA9IChjYXJyeV9vcCAqKSBwb29sX2xldmVsX2xpc3RfbmV4dCgmb3AtPmhl
YWRlcikpCisjZW5kaWYKKworLyogbWFjcm8gdG8gaXRlcmF0ZSBvdmVyIGFsbCBub2RlcyBpbiBh
IEBsZXZlbCAqLwkJCSAgICAgICBcCisjZGVmaW5lIGZvcl9hbGxfbm9kZXMobGV2ZWwgLyogY2Fy
cnkgbGV2ZWwgKG9mIHR5cGUgY2FycnlfbGV2ZWwgKikgKi8sCSAgICAgICBcCisJCSAgICAgIG5v
ZGUgIC8qIHBvaW50ZXIgdG8gY2Fycnkgbm9kZSwgbW9kaWZpZWQgYnkgbG9vcCAob2YgICAgIFwK
KwkJCSAgICAgICogdHlwZSBjYXJyeV9ub2RlICopICovLAkJCSAgICAgICBcCisJCSAgICAgIHRt
cCAgIC8qIHBvaW50ZXIgdG8gY2Fycnkgbm9kZSAob2YgdHlwZSBjYXJyeV9ub2RlICopLCAgIFwK
KwkJCSAgICAgICogdXNlZCB0byBtYWtlIGl0ZXJhdG9yIHN0YWJsZSBpbiB0aGUgZmFjZSBvZiAq
ICBcCisJCQkgICAgICAqIGRlbGV0aW9ucyBmcm9tIHRoZSBsZXZlbCAqLyApCQkgICAgICAgXAor
Zm9yIChub2RlID0gbGlzdF9lbnRyeShsZXZlbC0+bm9kZXMubmV4dCwgY2Fycnlfbm9kZSwgaGVh
ZGVyLmxldmVsX2xpbmthZ2UpLCAgIFwKKyAgICAgdG1wID0gbGlzdF9lbnRyeShub2RlLT5oZWFk
ZXIubGV2ZWxfbGlua2FnZS5uZXh0LCBjYXJyeV9ub2RlLCBoZWFkZXIubGV2ZWxfbGlua2FnZSk7
IFwKKyAgICAgJm5vZGUtPmhlYWRlci5sZXZlbF9saW5rYWdlICE9ICZsZXZlbC0+bm9kZXM7CQkJ
ICAgICAgIFwKKyAgICAgbm9kZSA9IHRtcCwgCQkJCQkJCSAgICAgICBcCisgICAgIHRtcCA9IGxp
c3RfZW50cnkobm9kZS0+aGVhZGVyLmxldmVsX2xpbmthZ2UubmV4dCwgY2Fycnlfbm9kZSwgaGVh
ZGVyLmxldmVsX2xpbmthZ2UpKQorCisjaWYgMAorZm9yIChub2RlID0gY2Fycnlfbm9kZV9mcm9u
dChsZXZlbCksCQkJCQlcCisgICAgIHRtcCA9IGNhcnJ5X25vZGVfbmV4dChub2RlKSA7ICFjYXJy
eV9ub2RlX2VuZChsZXZlbCwgbm9kZSkgOwlcCisgICAgIG5vZGUgPSB0bXAsIHRtcCA9IGNhcnJ5
X25vZGVfbmV4dChub2RlKSkKKyNlbmRpZgorCisvKiBtYWNybyB0byBpdGVyYXRlIG92ZXIgYWxs
IG5vZGVzIGluIGEgQGxldmVsIGluIHJldmVyc2Ugb3JkZXIKKworICAgVGhpcyBpcyB1c2VkLCBi
ZWNhdXNlIG5vZGVzIGFyZSB1bmxvY2tlZCBpbiByZXZlcnNlZCBvcmRlciBvZiBsb2NraW5nICov
CisjZGVmaW5lIGZvcl9hbGxfbm9kZXNfYmFjayhsZXZlbCAvKiBjYXJyeSBsZXZlbCAob2YgdHlw
ZSBjYXJyeV9sZXZlbCAqKSAqLywgICAgXAorCQkJICAgbm9kZSAgLyogcG9pbnRlciB0byBjYXJy
eSBub2RlLCBtb2RpZmllZCBieSBsb29wICAgIFwKKwkJCQkgICAqIChvZiB0eXBlIGNhcnJ5X25v
ZGUgKikgKi8sCQkgICAgICAgXAorCQkJICAgdG1wICAgLyogcG9pbnRlciB0byBjYXJyeSBub2Rl
IChvZiB0eXBlIGNhcnJ5X25vZGUgIFwKKwkJCQkgICAqICopLCB1c2VkIHRvIG1ha2UgaXRlcmF0
b3Igc3RhYmxlIGluIHRoZSAgIFwKKwkJCQkgICAqIGZhY2Ugb2YgZGVsZXRpb25zIGZyb20gdGhl
IGxldmVsICovICkgICAgIFwKK2ZvciAobm9kZSA9IGNhcnJ5X25vZGVfYmFjayhsZXZlbCksCQlc
CisgICAgIHRtcCA9IGNhcnJ5X25vZGVfcHJldihub2RlKSA7ICFjYXJyeV9ub2RlX2VuZChsZXZl
bCwgbm9kZSkgOwlcCisgICAgIG5vZGUgPSB0bXAsIHRtcCA9IGNhcnJ5X25vZGVfcHJldihub2Rl
KSkKKworLyogX19GU19SRUlTRVI0X0NBUlJZX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGlu
dXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdp
ZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9jYXJyeV9vcHMuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9jYXJyeV9vcHMuYwotLS0gbGlu
dXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9jYXJyeV9vcHMuYwkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvY2Fycnlfb3BzLmMJ
MjAyMC0wMi0wNSAyMDo1Mzo0MS40NDYyMjIxMjMgKzAxMDAKQEAgLTAsMCArMSwyMTM2IEBACisv
KiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdv
dmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLworCisvKiBpbXBsZW1lbnRhdGlvbiBvZiBj
YXJyeSBvcGVyYXRpb25zICovCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisjaW5jbHVkZSAiZGVi
dWcuaCIKKyNpbmNsdWRlICJrZXkuaCIKKyNpbmNsdWRlICJjb29yZC5oIgorI2luY2x1ZGUgInBs
dWdpbi9pdGVtL2l0ZW0uaCIKKyNpbmNsdWRlICJwbHVnaW4vbm9kZS9ub2RlLmgiCisjaW5jbHVk
ZSAiam5vZGUuaCIKKyNpbmNsdWRlICJ6bm9kZS5oIgorI2luY2x1ZGUgImJsb2NrX2FsbG9jLmgi
CisjaW5jbHVkZSAidHJlZV93YWxrLmgiCisjaW5jbHVkZSAicG9vbC5oIgorI2luY2x1ZGUgInRy
ZWVfbW9kLmgiCisjaW5jbHVkZSAiY2FycnkuaCIKKyNpbmNsdWRlICJjYXJyeV9vcHMuaCIKKyNp
bmNsdWRlICJ0cmVlLmgiCisjaW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJyZWlzZXI0Lmgi
CisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L2Vyci5oPgorCitz
dGF0aWMgaW50IGNhcnJ5X3NoaWZ0X2RhdGEoc2lkZW9mIHNpZGUsIGNvb3JkX3QgKmluc2VydF9j
b29yZCwgem5vZGUgKiBub2RlLAorCQkJICAgIGNhcnJ5X2xldmVsICogZG9pbmcsIGNhcnJ5X2xl
dmVsICogdG9kbywKKwkJCSAgICB1bnNpZ25lZCBpbnQgaW5jbHVkaW5nX2luc2VydF9jb29yZF9w
KTsKKworZXh0ZXJuIGludCBsb2NrX2NhcnJ5X25vZGUoY2FycnlfbGV2ZWwgKiBsZXZlbCwgY2Fy
cnlfbm9kZSAqIG5vZGUpOworZXh0ZXJuIGludCBsb2NrX2NhcnJ5X25vZGVfdGFpbChjYXJyeV9u
b2RlICogbm9kZSk7CisKKy8qIGZpbmQgbGVmdCBuZWlnaGJvciBvZiBhIGNhcnJ5IG5vZGUKKwor
ICAgTG9vayBmb3IgbGVmdCBuZWlnaGJvciBvZiBAbm9kZSBhbmQgYWRkIGl0IHRvIHRoZSBAZG9p
bmcgcXVldWUuIFNlZQorICAgY29tbWVudHMgaW4gdGhlIGJvZHkuCisKKyovCitzdGF0aWMgY2Fy
cnlfbm9kZSAqZmluZF9sZWZ0X25laWdoYm9yKGNhcnJ5X29wICogb3AJLyogbm9kZSB0byBmaW5k
IGxlZnQKKwkJCQkJCQkgKiBuZWlnaGJvciBvZiAqLyAsCisJCQkJICAgICAgY2FycnlfbGV2ZWwg
KiBkb2luZy8qIGxldmVsIHRvIHNjYW4gKi8pCit7CisJaW50IHJlc3VsdDsKKwljYXJyeV9ub2Rl
ICpub2RlOworCWNhcnJ5X25vZGUgKmxlZnQ7CisJaW50IGZsYWdzOworCXJlaXNlcjRfdHJlZSAq
dHJlZTsKKworCW5vZGUgPSBvcC0+bm9kZTsKKworCXRyZWUgPSBjdXJyZW50X3RyZWU7CisJcmVh
ZF9sb2NrX3RyZWUodHJlZSk7CisJLyogZmlyc3QsIGNoZWNrIHdoZXRoZXIgbGVmdCBuZWlnaGJv
ciBpcyBhbHJlYWR5IGluIGEgQGRvaW5nIHF1ZXVlICovCisJaWYgKHJlaXNlcjRfY2FycnlfcmVh
bChub2RlKS0+bGVmdCAhPSBOVUxMKSB7CisJCS8qIE5PVEU6IHRoZXJlIGlzIGxvY2tpbmcgc3Vi
dGxldHkgaGVyZS4gTG9vayBpbnRvCisJCSAqIGZpbmRfcmlnaHRfbmVpZ2hib3IoKSBmb3IgbW9y
ZSBpbmZvICovCisJCWlmIChmaW5kX2NhcnJ5X25vZGUoZG9pbmcsCisJCQkJICAgIHJlaXNlcjRf
Y2FycnlfcmVhbChub2RlKS0+bGVmdCkgIT0gTlVMTCkgeworCQkJcmVhZF91bmxvY2tfdHJlZSh0
cmVlKTsKKwkJCWxlZnQgPSBub2RlOworCQkJZG8geworCQkJCWxlZnQgPSBsaXN0X2VudHJ5KGxl
ZnQtPmhlYWRlci5sZXZlbF9saW5rYWdlLnByZXYsCisJCQkJCQkgIGNhcnJ5X25vZGUsIGhlYWRl
ci5sZXZlbF9saW5rYWdlKTsKKwkJCQlhc3NlcnQoIm5pa2l0YS0zNDA4IiwgIWNhcnJ5X25vZGVf
ZW5kKGRvaW5nLAorCQkJCQkJCQkgICAgICBsZWZ0KSk7CisJCQl9IHdoaWxlIChyZWlzZXI0X2Nh
cnJ5X3JlYWwobGVmdCkgPT0KKwkJCQkgcmVpc2VyNF9jYXJyeV9yZWFsKG5vZGUpKTsKKwkJCXJl
dHVybiBsZWZ0OworCQl9CisJfQorCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7CisKKwlsZWZ0ID0g
cmVpc2VyNF9hZGRfY2Fycnlfc2tpcChkb2luZywgUE9PTE9fQkVGT1JFLCBub2RlKTsKKwlpZiAo
SVNfRVJSKGxlZnQpKQorCQlyZXR1cm4gbGVmdDsKKworCWxlZnQtPm5vZGUgPSBub2RlLT5ub2Rl
OworCWxlZnQtPmZyZWUgPSAxOworCisJZmxhZ3MgPSBHTl9UUllfTE9DSzsKKwlpZiAoIShvcC0+
dS5pbnNlcnQuZmxhZ3MgJiBDT1BJX0xPQURfTEVGVCkpCisJCWZsYWdzIHw9IEdOX05PX0FMTE9D
OworCisJLyogdGhlbiwgZmVlbGluZyBsdWNreSwgcGVlayBsZWZ0IG5laWdoYm9yIGluIHRoZSBj
YWNoZS4gKi8KKwlyZXN1bHQgPSByZWlzZXI0X2dldF9sZWZ0X25laWdoYm9yKCZsZWZ0LT5sb2Nr
X2hhbmRsZSwKKwkJCQkJICAgcmVpc2VyNF9jYXJyeV9yZWFsKG5vZGUpLAorCQkJCQkgICBaTk9E
RV9XUklURV9MT0NLLCBmbGFncyk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCS8qIG9rLCBub2Rl
IGZvdW5kIGFuZCBsb2NrZWQuICovCisJCXJlc3VsdCA9IGxvY2tfY2Fycnlfbm9kZV90YWlsKGxl
ZnQpOworCQlpZiAocmVzdWx0ICE9IDApCisJCQlsZWZ0ID0gRVJSX1BUUihyZXN1bHQpOworCX0g
ZWxzZSBpZiAocmVzdWx0ID09IC1FX05PX05FSUdIQk9SIHx8IHJlc3VsdCA9PSAtRU5PRU5UKSB7
CisJCS8qIG5vZGUgaXMgbGVmdG1vc3Qgbm9kZSBpbiBhIHRyZWUsIG9yIG5laWdoYm9yIHdhc24n
dCBpbgorCQkgICBjYWNoZSwgb3IgdGhlcmUgaXMgYW4gZXh0ZW50IG9uIHRoZSBsZWZ0LiAqLwor
CQlyZWlzZXI0X3Bvb2xfZnJlZSgmZG9pbmctPnBvb2wtPm5vZGVfcG9vbCwgJmxlZnQtPmhlYWRl
cik7CisJCWxlZnQgPSBOVUxMOworCX0gZWxzZSBpZiAoZG9pbmctPnJlc3RhcnRhYmxlKSB7CisJ
CS8qIGlmIGxlZnQgbmVpZ2hib3IgaXMgbG9ja2VkLCBhbmQgbGV2ZWwgaXMgcmVzdGFydGFibGUs
IGFkZAorCQkgICBuZXcgbm9kZSB0byBAZG9pbmcgYW5kIHJlc3RhcnQuICovCisJCWFzc2VydCgi
bmlraXRhLTkxMyIsIG5vZGUtPnBhcmVudCAhPSAwKTsKKwkJYXNzZXJ0KCJuaWtpdGEtOTE0Iiwg
bm9kZS0+bm9kZSAhPSBOVUxMKTsKKwkJbGVmdC0+bGVmdCA9IDE7CisJCWxlZnQtPmZyZWUgPSAw
OworCQlsZWZ0ID0gRVJSX1BUUigtRV9SRVBFQVQpOworCX0gZWxzZSB7CisJCS8qIGxlZnQgbmVp
Z2hib3IgaXMgbG9ja2VkLCBsZXZlbCBjYW5ub3QgYmUgcmVzdGFydGVkLiBKdXN0CisJCSAgIGln
bm9yZSBsZWZ0IG5laWdoYm9yLiAqLworCQlyZWlzZXI0X3Bvb2xfZnJlZSgmZG9pbmctPnBvb2wt
Pm5vZGVfcG9vbCwgJmxlZnQtPmhlYWRlcik7CisJCWxlZnQgPSBOVUxMOworCX0KKwlyZXR1cm4g
bGVmdDsKK30KKworLyogZmluZCByaWdodCBuZWlnaGJvciBvZiBhIGNhcnJ5IG5vZGUKKworICAg
TG9vayBmb3IgcmlnaHQgbmVpZ2hib3Igb2YgQG5vZGUgYW5kIGFkZCBpdCB0byB0aGUgQGRvaW5n
IHF1ZXVlLiBTZWUKKyAgIGNvbW1lbnRzIGluIHRoZSBib2R5LgorCisqLworc3RhdGljIGNhcnJ5
X25vZGUgKmZpbmRfcmlnaHRfbmVpZ2hib3IoY2Fycnlfb3AgKiBvcAkvKiBub2RlIHRvIGZpbmQg
cmlnaHQKKwkJCQkJCQkgKiBuZWlnaGJvciBvZiAqLyAsCisJCQkJICAgICAgIGNhcnJ5X2xldmVs
ICogZG9pbmcvKiBsZXZlbCB0byBzY2FuICovKQoreworCWludCByZXN1bHQ7CisJY2Fycnlfbm9k
ZSAqbm9kZTsKKwljYXJyeV9ub2RlICpyaWdodDsKKwlsb2NrX2hhbmRsZSBsaDsKKwlpbnQgZmxh
Z3M7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJaW5pdF9saCgmbGgpOworCisJbm9kZSA9IG9w
LT5ub2RlOworCisJdHJlZSA9IGN1cnJlbnRfdHJlZTsKKwlyZWFkX2xvY2tfdHJlZSh0cmVlKTsK
KwkvKiBmaXJzdCwgY2hlY2sgd2hldGhlciByaWdodCBuZWlnaGJvciBpcyBhbHJlYWR5IGluIGEg
QGRvaW5nIHF1ZXVlICovCisJaWYgKHJlaXNlcjRfY2FycnlfcmVhbChub2RlKS0+cmlnaHQgIT0g
TlVMTCkgeworCQkvKgorCQkgKiBUcmVlIGxvY2sgaXMgdGFrZW4gaGVyZSBhbnl3YXksIGJlY2F1
c2UsIGV2ZW4gaWYgX291dGNvbWVfCisJCSAqIG9mIChmaW5kX2NhcnJ5X25vZGUoKSAhPSBOVUxM
KSBkb2Vzbid0IGRlcGVuZHMgb24KKwkJICogY29uY3VycmVudCB1cGRhdGVzIHRvIC0+cmlnaHQs
IGZpbmRfY2Fycnlfbm9kZSgpIGNhbm5vdAorCQkgKiB3b3JrIHdpdGggc2Vjb25kIGFyZ3VtZW50
IE5VTEwuIEhlbmNlLCBmb2xsb3dpbmcgY29tbWVudCBpcworCQkgKiBvZiBoaXN0b3JpYyBpbXBv
cnRhbmNlIG9ubHkuCisJCSAqCisJCSAqIFN1YnRsZToKKwkJICoKKwkJICogUTogd2h5IGRvbid0
IHdlIG5lZWQgdHJlZSBsb2NrIGhlcmUsIGxvb2tpbmcgZm9yIHRoZSByaWdodAorCQkgKiBuZWln
aGJvcj8KKwkJICoKKwkJICogQTogZXZlbiBpZiB2YWx1ZSBvZiBub2RlLT5yZWFsX25vZGUtPnJp
Z2h0IHdlcmUgY2hhbmdlZAorCQkgKiBkdXJpbmcgZmluZF9jYXJyeV9ub2RlKCkgZXhlY3V0aW9u
LCBvdXRjb21lIG9mIGV4ZWN1dGlvbgorCQkgKiB3b3VsZG4ndCBjaGFuZ2UsIGJlY2F1c2UgKGlu
IHNob3J0KSBvdGhlciB0aHJlYWQgY2Fubm90IGFkZAorCQkgKiBlbGVtZW50cyB0byB0aGUgQGRv
aW5nLCBhbmQgaWYgbm9kZS0+cmVhbF9ub2RlLT5yaWdodAorCQkgKiBhbHJlYWR5IHdhcyBpbiBA
ZG9pbmcsIHZhbHVlIG9mIG5vZGUtPnJlYWxfbm9kZS0+cmlnaHQKKwkJICogY291bGRuJ3QgY2hh
bmdlLCBiZWNhdXNlIG5vZGUgY2Fubm90IGJlIGluc2VydGVkIGJldHdlZW4KKwkJICogbG9ja2Vk
IG5laWdoYm9ycy4KKwkJICovCisJCWlmIChmaW5kX2NhcnJ5X25vZGUoZG9pbmcsCisJCQkJICAg
IHJlaXNlcjRfY2FycnlfcmVhbChub2RlKS0+cmlnaHQpICE9IE5VTEwpIHsKKwkJCXJlYWRfdW5s
b2NrX3RyZWUodHJlZSk7CisJCQkvKgorCQkJICogV2hhdCB3ZSBhcmUgZG9pbmcgaGVyZSAodGhp
cyBpcyBhbHNvIGFwcGxpY2FibGUgdG8KKwkJCSAqIHRoZSBmaW5kX2xlZnRfbmVpZ2hib3IoKSku
CisJCQkgKgorCQkJICogdHJlZV93YWxrLmMgY29kZSByZXF1aXJlcyB0aGF0IGluc2VydGlvbiBv
ZiBhCisJCQkgKiBwb2ludGVyIHRvIGEgY2hpbGQsIG1vZGlmaWNhdGlvbiBvZiBwYXJlbnQgcG9p
bnRlcgorCQkJICogaW4gdGhlIGNoaWxkLCBhbmQgaW5zZXJ0aW9uIG9mIHRoZSBjaGlsZCBpbnRv
CisJCQkgKiBzaWJsaW5nIGxpc3QgYXJlIGF0b21pYyAoc2VlCisJCQkgKiBwbHVnaW4vaXRlbS9p
bnRlcm5hbC5jOmNyZWF0ZV9ob29rX2ludGVybmFsKCkpLgorCQkJICoKKwkJCSAqIGNhcnJ5IGFs
bG9jYXRlcyBuZXcgbm9kZSBsb25nIGJlZm9yZSBwb2ludGVyIHRvIGl0CisJCQkgKiBpcyBpbnNl
cnRlZCBpbnRvIHBhcmVudCBhbmQsIGFjdHVhbGx5LCBsb25nIGJlZm9yZQorCQkJICogcGFyZW50
IGlzIGV2ZW4ga25vd24uIFN1Y2ggYWxsb2NhdGVkLWJ1dC1vcnBoYW5lZAorCQkJICogbm9kZXMg
YXJlIG9ubHkgdHJhY2thYmxlIHRocm91Z2ggY2FycnkgbGV2ZWwgbGlzdHMuCisJCQkgKgorCQkJ
ICogU2l0dWF0aW9uIHRoYXQgaXMgaGFuZGxlZCBoZXJlIGlzIGZvbGxvd2luZzogQG5vZGUKKwkJ
CSAqIGhhcyB2YWxpZCAtPnJpZ2h0IHBvaW50ZXIsIGJ1dCB0aGVyZSBpcworCQkJICogYWxsb2Nh
dGVkLWJ1dC1vcnBoYW5lZCBub2RlIGluIHRoZSBjYXJyeSBxdWV1ZSB0aGF0CisJCQkgKiBpcyBs
b2dpY2FsbHkgYmV0d2VlbiBAbm9kZSBhbmQgQG5vZGUtPnJpZ2h0LiBIZXJlCisJCQkgKiB3ZSBh
cmUgc2VhcmNoaW5nIGZvciBpdC4gQ3JpdGljYWwgcG9pbnQgaXMgdGhhdAorCQkJICogdGhpcyBp
cyBvbmx5IHBvc3NpYmxlIGlmIEBub2RlLT5yaWdodCBpcyBhbHNvIGluCisJCQkgKiB0aGUgY2Fy
cnkgcXVldWUgKHRoaXMgaXMgY2hlY2tlZCBhYm92ZSksIGJlY2F1c2UKKwkJCSAqIHRoaXMgaXMg
dGhlIG9ubHkgd2F5IG5ldyBvcnBoYW5lZCBub2RlIGNvdWxkIGJlCisJCQkgKiBpbnNlcnRlZCBi
ZXR3ZWVuIHRoZW0gKGJlZm9yZSBpbnNlcnRpbmcgbmV3IG5vZGUsCisJCQkgKiBtYWtlX3NwYWNl
KCkgZmlyc3QgdHJpZXMgdG8gc2hpZnQgdG8gdGhlIHJpZ2h0LCBzbywKKwkJCSAqIHJpZ2h0IG5l
aWdoYm9yIHdpbGwgYmUgbG9ja2VkIGFuZCBxdWV1ZWQpLgorCQkJICoKKwkJCSAqLworCQkJcmln
aHQgPSBub2RlOworCQkJZG8geworCQkJCXJpZ2h0ID0gbGlzdF9lbnRyeShyaWdodC0+aGVhZGVy
LmxldmVsX2xpbmthZ2UubmV4dCwKKwkJCQkJCSAgIGNhcnJ5X25vZGUsIGhlYWRlci5sZXZlbF9s
aW5rYWdlKTsKKwkJCQlhc3NlcnQoIm5pa2l0YS0zNDA4IiwgIWNhcnJ5X25vZGVfZW5kKGRvaW5n
LAorCQkJCQkJCQkgICAgICByaWdodCkpOworCQkJfSB3aGlsZSAocmVpc2VyNF9jYXJyeV9yZWFs
KHJpZ2h0KSA9PQorCQkJCSByZWlzZXI0X2NhcnJ5X3JlYWwobm9kZSkpOworCQkJcmV0dXJuIHJp
Z2h0OworCQl9CisJfQorCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7CisKKwlmbGFncyA9IEdOX0NB
Tl9VU0VfVVBQRVJfTEVWRUxTOworCWlmICghKG9wLT51Lmluc2VydC5mbGFncyAmIENPUElfTE9B
RF9SSUdIVCkpCisJCWZsYWdzID0gR05fTk9fQUxMT0M7CisKKwkvKiB0aGVuLCB0cnkgdG8gbG9j
ayByaWdodCBuZWlnaGJvciAqLworCWluaXRfbGgoJmxoKTsKKwlyZXN1bHQgPSByZWlzZXI0X2dl
dF9yaWdodF9uZWlnaGJvcigmbGgsCisJCQkJCSAgICByZWlzZXI0X2NhcnJ5X3JlYWwobm9kZSks
CisJCQkJCSAgICBaTk9ERV9XUklURV9MT0NLLCBmbGFncyk7CisJaWYgKHJlc3VsdCA9PSAwKSB7
CisJCS8qIG9rLCBub2RlIGZvdW5kIGFuZCBsb2NrZWQuICovCisJCXJpZ2h0ID0gcmVpc2VyNF9h
ZGRfY2Fycnlfc2tpcChkb2luZywgUE9PTE9fQUZURVIsIG5vZGUpOworCQlpZiAoIUlTX0VSUihy
aWdodCkpIHsKKwkJCXJpZ2h0LT5ub2RlID0gbGgubm9kZTsKKwkJCW1vdmVfbGgoJnJpZ2h0LT5s
b2NrX2hhbmRsZSwgJmxoKTsKKwkJCXJpZ2h0LT5mcmVlID0gMTsKKwkJCXJlc3VsdCA9IGxvY2tf
Y2Fycnlfbm9kZV90YWlsKHJpZ2h0KTsKKwkJCWlmIChyZXN1bHQgIT0gMCkKKwkJCQlyaWdodCA9
IEVSUl9QVFIocmVzdWx0KTsKKwkJfQorCX0gZWxzZSBpZiAoKHJlc3VsdCA9PSAtRV9OT19ORUlH
SEJPUikgfHwgKHJlc3VsdCA9PSAtRU5PRU5UKSkgeworCQkvKiBub2RlIGlzIHJpZ2h0bW9zdCBu
b2RlIGluIGEgdHJlZSwgb3IgbmVpZ2hib3Igd2Fzbid0IGluCisJCSAgIGNhY2hlLCBvciB0aGVy
ZSBpcyBhbiBleHRlbnQgb24gdGhlIHJpZ2h0LiAqLworCQlyaWdodCA9IE5VTEw7CisJfSBlbHNl
CisJCXJpZ2h0ID0gRVJSX1BUUihyZXN1bHQpOworCWRvbmVfbGgoJmxoKTsKKwlyZXR1cm4gcmln
aHQ7Cit9CisKKy8qIGhvdyBtdWNoIGZyZWUgc3BhY2UgaW4gYSBAbm9kZSBpcyBuZWVkZWQgZm9y
IEBvcAorCisgICBIb3cgbXVjaCBzcGFjZSBpbiBAbm9kZSBpcyByZXF1aXJlZCBmb3IgY29tcGxl
dGlvbiBvZiBAb3AsIHdoZXJlIEBvcCBpcworICAgaW5zZXJ0IG9yIHBhc3RlIG9wZXJhdGlvbi4K
KyovCitzdGF0aWMgdW5zaWduZWQgaW50IHNwYWNlX25lZWRlZF9mb3Jfb3Aoem5vZGUgKiBub2Rl
CS8qIHpub2RlIGRhdGEgYXJlCisJCQkJCQkJICogaW5zZXJ0ZWQgb3IKKwkJCQkJCQkgKiBwYXN0
ZWQgaW4gKi8gLAorCQkJCQljYXJyeV9vcCAqIG9wCS8qIGNhcnJ5CisJCQkJCQkJICAgb3BlcmF0
aW9uICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS05MTkiLCBvcCAhPSBOVUxMKTsKKworCXN3aXRj
aCAob3AtPm9wKSB7CisJZGVmYXVsdDoKKwkJaW1wb3NzaWJsZSgibmlraXRhLTE3MDEiLCAiV3Jv
bmcgb3Bjb2RlIik7CisJY2FzZSBDT1BfSU5TRVJUOgorCQlyZXR1cm4gc3BhY2VfbmVlZGVkKG5v
ZGUsIE5VTEwsIG9wLT51Lmluc2VydC5kLT5kYXRhLCAxKTsKKwljYXNlIENPUF9QQVNURToKKwkJ
cmV0dXJuIHNwYWNlX25lZWRlZChub2RlLCBvcC0+dS5pbnNlcnQuZC0+Y29vcmQsCisJCQkJICAg
IG9wLT51Lmluc2VydC5kLT5kYXRhLCAwKTsKKwl9Cit9CisKKy8qIGhvdyBtdWNoIHNwYWNlIGlu
IEBub2RlIGlzIHJlcXVpcmVkIHRvIGluc2VydCBvciBwYXN0ZSBAZGF0YSBhdAorICAgQGNvb3Jk
LiAqLwordW5zaWduZWQgaW50IHNwYWNlX25lZWRlZChjb25zdCB6bm9kZSAqIG5vZGUJLyogbm9k
ZSBkYXRhIGFyZSBpbnNlcnRlZCBvcgorCQkJCQkJICogcGFzdGVkIGluICovICwKKwkJCSAgY29u
c3QgY29vcmRfdCAqY29vcmQJLyogY29vcmQgd2hlcmUgZGF0YSBhcmUKKwkJCQkJCSAqIGluc2Vy
dGVkIG9yIHBhc3RlZAorCQkJCQkJICogYXQgKi8gLAorCQkJICBjb25zdCByZWlzZXI0X2l0ZW1f
ZGF0YSAqIGRhdGEgLyogZGF0YSB0byBpbnNlcnQgb3IKKwkJCQkJCQkgICogcGFzdGUgKi8gLAor
CQkJICBpbnQgaW5zZXJ0aW9uLyogbm9uLTAgaXMgaW5zZXJ0aW5nLCAwLS0tcGFzdGUgKi8pCit7
CisJaW50IHJlc3VsdDsKKwlpdGVtX3BsdWdpbiAqaXBsdWc7CisKKwlhc3NlcnQoIm5pa2l0YS05
MTciLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTkxOCIsIG5vZGVfcGx1Z2luX2J5
X25vZGUobm9kZSkgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2cy0yMzAiLCAhaW5zZXJ0aW9uIHx8IChj
b29yZCA9PSBOVUxMKSk7CisKKwlyZXN1bHQgPSAwOworCWlwbHVnID0gZGF0YS0+aXBsdWc7CisJ
aWYgKGlwbHVnLT5iLmVzdGltYXRlICE9IE5VTEwpIHsKKwkJLyogYXNrIGl0ZW0gcGx1Z2luIGhv
dyBtdWNoIHNwYWNlIGlzIG5lZWRlZCB0byBpbnNlcnQgdGhpcworCQkgICBpdGVtICovCisJCXJl
c3VsdCArPSBpcGx1Zy0+Yi5lc3RpbWF0ZShpbnNlcnRpb24gPyBOVUxMIDogY29vcmQsIGRhdGEp
OworCX0gZWxzZSB7CisJCS8qIHJlYXNvbmFibGUgZGVmYXVsdCAqLworCQlyZXN1bHQgKz0gZGF0
YS0+bGVuZ3RoOworCX0KKwlpZiAoaW5zZXJ0aW9uKSB7CisJCW5vZGVfcGx1Z2luICpucGx1ZzsK
KworCQlucGx1ZyA9IG5vZGUtPm5wbHVnOworCQkvKiBhbmQgYWRkIG5vZGUgb3ZlcmhlYWQgKi8K
KwkJaWYgKG5wbHVnLT5pdGVtX292ZXJoZWFkICE9IE5VTEwpCisJCQlyZXN1bHQgKz0gbnBsdWct
Pml0ZW1fb3ZlcmhlYWQobm9kZSwgTlVMTCk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8q
IGZpbmQgJmNvb3JkIGluIHBhcmVudCB3aGVyZSBwb2ludGVyIHRvIG5ldyBjaGlsZCBpcyB0byBi
ZSBzdG9yZWQuICovCitzdGF0aWMgaW50IGZpbmRfbmV3X2NoaWxkX2Nvb3JkKGNhcnJ5X29wICog
b3AJLyogQ09QX0lOU0VSVCBjYXJyeSBvcGVyYXRpb24gdG8KKwkJCQkJCSAqIGluc2VydCBwb2lu
dGVyIHRvIG5ldworCQkJCQkJICogY2hpbGQgKi8gKQoreworCWludCByZXN1bHQ7CisJem5vZGUg
Km5vZGU7CisJem5vZGUgKmNoaWxkOworCisJYXNzZXJ0KCJuaWtpdGEtOTQxIiwgb3AgIT0gTlVM
TCk7CisJYXNzZXJ0KCJuaWtpdGEtOTQyIiwgb3AtPm9wID09IENPUF9JTlNFUlQpOworCisJbm9k
ZSA9IHJlaXNlcjRfY2FycnlfcmVhbChvcC0+bm9kZSk7CisJYXNzZXJ0KCJuaWtpdGEtOTQzIiwg
bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS05NDQiLCBub2RlX3BsdWdpbl9ieV9ub2Rl
KG5vZGUpICE9IE5VTEwpOworCisJY2hpbGQgPSByZWlzZXI0X2NhcnJ5X3JlYWwob3AtPnUuaW5z
ZXJ0LmNoaWxkKTsKKwlyZXN1bHQgPQorCSAgICBmaW5kX25ld19jaGlsZF9wdHIobm9kZSwgY2hp
bGQsIG9wLT51Lmluc2VydC5icm90aGVyLAorCQkJICAgICAgIG9wLT51Lmluc2VydC5kLT5jb29y
ZCk7CisKKwlidWlsZF9jaGlsZF9wdHJfZGF0YShjaGlsZCwgb3AtPnUuaW5zZXJ0LmQtPmRhdGEp
OworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGFkZGl0aW9uYWwgYW1vdW50IG9mIGZyZWUgc3Bh
Y2UgaW4gQG5vZGUgcmVxdWlyZWQgdG8gY29tcGxldGUgQG9wICovCitzdGF0aWMgaW50IGZyZWVf
c3BhY2Vfc2hvcnRhZ2Uoem5vZGUgKiBub2RlIC8qIG5vZGUgdG8gY2hlY2sgKi8gLAorCQkJICAg
ICAgIGNhcnJ5X29wICogb3AvKiBvcGVyYXRpb24gYmVpbmcgcGVyZm9ybWVkICovKQoreworCWFz
c2VydCgibmlraXRhLTEwNjEiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEwNjIi
LCBvcCAhPSBOVUxMKTsKKworCXN3aXRjaCAob3AtPm9wKSB7CisJZGVmYXVsdDoKKwkJaW1wb3Nz
aWJsZSgibmlraXRhLTE3MDIiLCAiV3Jvbmcgb3Bjb2RlIik7CisJY2FzZSBDT1BfSU5TRVJUOgor
CWNhc2UgQ09QX1BBU1RFOgorCQlyZXR1cm4gc3BhY2VfbmVlZGVkX2Zvcl9vcChub2RlLCBvcCkg
LSB6bm9kZV9mcmVlX3NwYWNlKG5vZGUpOworCWNhc2UgQ09QX0VYVEVOVDoKKwkJLyogd2hlbiBp
bnNlcnRpbmcgZXh0ZW50IHNoaWZ0IGRhdGEgYXJvdW5kIHVudGlsIGluc2VydGlvbgorCQkgICBw
b2ludCBpcyB1dG1vc3QgaW4gdGhlIG5vZGUuICovCisJCWlmIChjb29yZF93cnQob3AtPnUuaW5z
ZXJ0LmQtPmNvb3JkKSA9PSBDT09SRF9JTlNJREUpCisJCQlyZXR1cm4gKzE7CisJCWVsc2UKKwkJ
CXJldHVybiAtMTsKKwl9Cit9CisKKy8qIGhlbHBlciBmdW5jdGlvbjogdXBkYXRlIG5vZGUgcG9p
bnRlciBpbiBvcGVyYXRpb24gYWZ0ZXIgaW5zZXJ0aW9uCisgICBwb2ludCB3YXMgcHJvYmFibHkg
c2hpZnRlZCBpbnRvIEB0YXJnZXQuICovCitzdGF0aWMgem5vZGUgKnN5bmNfb3AoY2Fycnlfb3Ag
KiBvcCwgY2Fycnlfbm9kZSAqIHRhcmdldCkKK3sKKwl6bm9kZSAqaW5zZXJ0aW9uX25vZGU7CisK
KwkvKiByZWdldCBub2RlIGZyb20gY29vcmQ6IHNoaWZ0IG1pZ2h0IG1vdmUgaW5zZXJ0aW9uIGNv
b3JkIHRvCisJICAgdGhlIG5laWdoYm9yICovCisJaW5zZXJ0aW9uX25vZGUgPSBvcC0+dS5pbnNl
cnQuZC0+Y29vcmQtPm5vZGU7CisJLyogaWYgaW5zZXJ0aW9uIHBvaW50IHdhcyBhY3R1YWxseSBt
b3ZlZCBpbnRvIG5ldyBub2RlLAorCSAgIHVwZGF0ZSBjYXJyeSBub2RlIHBvaW50ZXIgaW4gb3Bl
cmF0aW9uLiAqLworCWlmIChpbnNlcnRpb25fbm9kZSAhPSByZWlzZXI0X2NhcnJ5X3JlYWwob3At
Pm5vZGUpKSB7CisJCW9wLT5ub2RlID0gdGFyZ2V0OworCQlhc3NlcnQoIm5pa2l0YS0yNTQwIiwK
KwkJICAgICAgIHJlaXNlcjRfY2FycnlfcmVhbCh0YXJnZXQpID09IGluc2VydGlvbl9ub2RlKTsK
Kwl9CisJYXNzZXJ0KCJuaWtpdGEtMjU0MSIsCisJICAgICAgIHJlaXNlcjRfY2FycnlfcmVhbChv
cC0+bm9kZSkgPT0gb3AtPnUuaW5zZXJ0LmQtPmNvb3JkLT5ub2RlKTsKKwlyZXR1cm4gaW5zZXJ0
aW9uX25vZGU7Cit9CisKKy8qCisgKiBjb21wbGV0ZSBtYWtlX3NwYWNlKCkgY2FsbDogdXBkYXRl
IHRyYWNrZWQgbG9jayBoYW5kbGUgaWYgbmVjZXNzYXJ5LiBTZWUKKyAqIGNvbW1lbnRzIGZvciBm
cy9yZWlzZXI0L2NhcnJ5Lmg6Y2FycnlfdHJhY2tfdHlwZQorICovCitzdGF0aWMgaW50CittYWtl
X3NwYWNlX3RhaWwoY2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBkb2luZywgem5vZGUgKiBv
cmlnX25vZGUpCit7CisJaW50IHJlc3VsdDsKKwljYXJyeV90cmFja190eXBlIHRyYWNraW5nOwor
CXpub2RlICpub2RlOworCisJdHJhY2tpbmcgPSBkb2luZy0+dHJhY2tfdHlwZTsKKwlub2RlID0g
b3AtPnUuaW5zZXJ0LmQtPmNvb3JkLT5ub2RlOworCisJaWYgKHRyYWNraW5nID09IENBUlJZX1RS
QUNLX05PREUgfHwKKwkgICAgKHRyYWNraW5nID09IENBUlJZX1RSQUNLX0NIQU5HRSAmJiBub2Rl
ICE9IG9yaWdfbm9kZSkpIHsKKwkJLyogaW5zZXJ0aW5nIG9yIHBhc3RpbmcgaW50byBub2RlIGRp
ZmZlcmVudCBmcm9tCisJCSAgIG9yaWdpbmFsLiBVcGRhdGUgbG9jayBoYW5kbGUgc3VwcGxpZWQg
YnkgY2FsbGVyLiAqLworCQlhc3NlcnQoIm5pa2l0YS0xNDE3IiwgZG9pbmctPnRyYWNrZWQgIT0g
TlVMTCk7CisJCWRvbmVfbGgoZG9pbmctPnRyYWNrZWQpOworCQlpbml0X2xoKGRvaW5nLT50cmFj
a2VkKTsKKwkJcmVzdWx0ID0gbG9uZ3Rlcm1fbG9ja196bm9kZShkb2luZy0+dHJhY2tlZCwgbm9k
ZSwKKwkJCQkJICAgICBaTk9ERV9XUklURV9MT0NLLAorCQkJCQkgICAgIFpOT0RFX0xPQ0tfSElQ
UkkpOworCX0gZWxzZQorCQlyZXN1bHQgPSAwOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIFRo
aXMgaXMgaW5zZXJ0aW9uIHBvbGljeSBmdW5jdGlvbi4gSXQgc2hpZnRzIGRhdGEgdG8gdGhlIGxl
ZnQgYW5kIHJpZ2h0CisgICBuZWlnaGJvcnMgb2YgaW5zZXJ0aW9uIGNvb3JkIGFuZCBhbGxvY2F0
ZXMgbmV3IG5vZGVzIHVudGlsIHRoZXJlIGlzIGVub3VnaAorICAgZnJlZSBzcGFjZSB0byBjb21w
bGV0ZSBAb3AuCisKKyAgIFNlZSBjb21tZW50cyBpbiB0aGUgYm9keS4KKworICAgQXNzdW1lcyB0
aGF0IHRoZSBub2RlIGZvcm1hdCBmYXZvcnMgaW5zZXJ0aW9ucyBhdCB0aGUgcmlnaHQgZW5kIG9m
IHRoZSBub2RlCisgICBhcyBub2RlNDAgZG9lcy4KKworICAgU2VlIGNhcnJ5X2Zsb3coKSBvbiBk
ZXRhaWwgYWJvdXQgZmxvdyBpbnNlcnRpb24KKyovCitzdGF0aWMgaW50IG1ha2Vfc3BhY2UoY2Fy
cnlfb3AgKiBvcCAvKiBjYXJyeSBvcGVyYXRpb24sIGluc2VydCBvciBwYXN0ZSAqLyAsCisJCSAg
ICAgIGNhcnJ5X2xldmVsICogZG9pbmcgLyogY3VycmVudCBjYXJyeSBxdWV1ZSAqLyAsCisJCSAg
ICAgIGNhcnJ5X2xldmVsICogdG9kby8qIGNhcnJ5IHF1ZXVlIG9uIHRoZSBwYXJlbnQgbGV2ZWwg
Ki8pCit7CisJem5vZGUgKm5vZGU7CisJaW50IHJlc3VsdDsKKwlpbnQgbm90X2Vub3VnaF9zcGFj
ZTsKKwlpbnQgYmxrX2FsbG9jOworCXpub2RlICpvcmlnX25vZGU7CisJX191MzIgZmxhZ3M7CisK
Kwljb29yZF90ICpjb29yZDsKKworCWFzc2VydCgibmlraXRhLTg5MCIsIG9wICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTg5MSIsIHRvZG8gIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtODky
IiwKKwkgICAgICAgb3AtPm9wID09IENPUF9JTlNFUlQgfHwKKwkgICAgICAgb3AtPm9wID09IENP
UF9QQVNURSB8fCBvcC0+b3AgPT0gQ09QX0VYVEVOVCk7CisJYXNzZXJ0KCJuaWtpdGEtMTYwNyIs
CisJICAgICAgIHJlaXNlcjRfY2FycnlfcmVhbChvcC0+bm9kZSkgPT0gb3AtPnUuaW5zZXJ0LmQt
PmNvb3JkLT5ub2RlKTsKKworCWZsYWdzID0gb3AtPnUuaW5zZXJ0LmZsYWdzOworCisJLyogTk9U
RSBjaGVjayB0aGF0IG5ldyBub2RlIGNhbiBvbmx5IGJlIGFsbG9jYXRlZCBhZnRlciBjaGVja2lu
ZyBsZWZ0CisJICogYW5kIHJpZ2h0IG5laWdoYm9ycy4gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIHBy
b3BlciB3b3JrIG9mCisJICogZmluZF97bGVmdCxyaWdodH1fbmVpZ2hib3IoKS4gKi8KKwlhc3Nl
cnQoIm5pa2l0YS0zNDEwIiwgZXJnbyhmbGFncyAmIENPUElfRE9OVF9BTExPQ0FURSwKKwkJCQkg
ICBmbGFncyAmIENPUElfRE9OVF9TSElGVF9MRUZUKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzQxMSIs
IGVyZ28oZmxhZ3MgJiBDT1BJX0RPTlRfQUxMT0NBVEUsCisJCQkJICAgZmxhZ3MgJiBDT1BJX0RP
TlRfU0hJRlRfUklHSFQpKTsKKworCWNvb3JkID0gb3AtPnUuaW5zZXJ0LmQtPmNvb3JkOworCW9y
aWdfbm9kZSA9IG5vZGUgPSBjb29yZC0+bm9kZTsKKworCWFzc2VydCgibmlraXRhLTkwOCIsIG5v
ZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtOTA5Iiwgbm9kZV9wbHVnaW5fYnlfbm9kZShu
b2RlKSAhPSBOVUxMKTsKKworCXJlc3VsdCA9IDA7CisJLyogSWYgdGhlcmUgaXMgbm90IGVub3Vn
aCBzcGFjZSBpbiBhIG5vZGUsIHRyeSB0byBzaGlmdCBzb21ldGhpbmcgdG8KKwkgICB0aGUgbGVm
dCBuZWlnaGJvci4gVGhpcyBpcyBhIGJpdCB0cmlja3ksIGFzIGxvY2tpbmcgdG8gdGhlIGxlZnQg
aXMKKwkgICBsb3cgcHJpb3JpdHkuIFRoaXMgaXMgaGFuZGxlZCBieSByZXN0YXJ0IGxvZ2ljIGlu
IGNhcnJ5KCkuCisJICovCisJbm90X2Vub3VnaF9zcGFjZSA9IGZyZWVfc3BhY2Vfc2hvcnRhZ2Uo
bm9kZSwgb3ApOworCWlmIChub3RfZW5vdWdoX3NwYWNlIDw9IDApCisJCS8qIGl0IGlzIHBvc3Np
YmxlIHRoYXQgY2Fycnkgd2FzIGNhbGxlZCB3aGVuIHRoZXJlIGFjdHVhbGx5CisJCSAgIHdhcyBl
bm91Z2ggc3BhY2UgaW4gdGhlIG5vZGUuIEZvciBleGFtcGxlLCB3aGVuIGluc2VydGluZworCQkg
ICBsZWZ0bW9zdCBpdGVtIHNvIHRoYXQgZGVsaW1pdGluZyBrZXlzIGhhdmUgdG8gYmUgdXBkYXRl
ZC4KKwkJICovCisJCXJldHVybiBtYWtlX3NwYWNlX3RhaWwob3AsIGRvaW5nLCBvcmlnX25vZGUp
OworCWlmICghKGZsYWdzICYgQ09QSV9ET05UX1NISUZUX0xFRlQpKSB7CisJCWNhcnJ5X25vZGUg
KmxlZnQ7CisJCS8qIG1ha2Ugbm90ZSBpbiBzdGF0aXN0aWNzIG9mIGFuIGF0dGVtcHQgdG8gbW92
ZQorCQkgICBzb21ldGhpbmcgaW50byB0aGUgbGVmdCBuZWlnaGJvciAqLworCQlsZWZ0ID0gZmlu
ZF9sZWZ0X25laWdoYm9yKG9wLCBkb2luZyk7CisJCWlmICh1bmxpa2VseShJU19FUlIobGVmdCkp
KSB7CisJCQlpZiAoUFRSX0VSUihsZWZ0KSA9PSAtRV9SRVBFQVQpCisJCQkJcmV0dXJuIC1FX1JF
UEVBVDsKKwkJCWVsc2UgeworCQkJCS8qIHNvbWUgZXJyb3Igb3RoZXIgdGhhbiByZXN0YXJ0IHJl
cXVlc3QKKwkJCQkgICBvY2N1cnJlZC4gVGhpcyBzaG91bGRuJ3QgaGFwcGVuLiBJc3N1ZSBhCisJ
CQkJICAgd2FybmluZyBhbmQgY29udGludWUgYXMgaWYgbGVmdCBuZWlnaGJvcgorCQkJCSAgIHdl
cmVuJ3QgZXhpc3RpbmcuCisJCQkJICovCisJCQkJd2FybmluZygibmlraXRhLTkyNCIsCisJCQkJ
CSJFcnJvciBhY2Nlc3NpbmcgbGVmdCBuZWlnaGJvcjogJWxpIiwKKwkJCQkJUFRSX0VSUihsZWZ0
KSk7CisJCQl9CisJCX0gZWxzZSBpZiAobGVmdCAhPSBOVUxMKSB7CisKKwkJCS8qIHNoaWZ0IGV2
ZXJ5dGhpbmcgcG9zc2libGUgb24gdGhlIGxlZnQgb2YgYW5kCisJCQkgICBpbmNsdWRpbmcgaW5z
ZXJ0aW9uIGNvb3JkIGludG8gdGhlIGxlZnQgbmVpZ2hib3IgKi8KKwkJCXJlc3VsdCA9IGNhcnJ5
X3NoaWZ0X2RhdGEoTEVGVF9TSURFLCBjb29yZCwKKwkJCQkJCSAgcmVpc2VyNF9jYXJyeV9yZWFs
KGxlZnQpLAorCQkJCQkJICBkb2luZywgdG9kbywKKwkJCQkJCSAgZmxhZ3MgJiBDT1BJX0dPX0xF
RlQpOworCisJCQkvKiByZWdldCBub2RlIGZyb20gY29vcmQ6IHNoaWZ0X2xlZnQoKSBtaWdodCBt
b3ZlCisJCQkgICBpbnNlcnRpb24gY29vcmQgdG8gdGhlIGxlZnQgbmVpZ2hib3IgKi8KKwkJCW5v
ZGUgPSBzeW5jX29wKG9wLCBsZWZ0KTsKKworCQkJbm90X2Vub3VnaF9zcGFjZSA9IGZyZWVfc3Bh
Y2Vfc2hvcnRhZ2Uobm9kZSwgb3ApOworCQkJLyogVGhlcmUgaXMgbm90IGVub3VnaCBmcmVlIHNw
YWNlIGluIEBub2RlLCBidXQKKwkJCSAgIG1heSBiZSwgdGhlcmUgaXMgZW5vdWdoIGZyZWUgc3Bh
Y2UgaW4KKwkJCSAgIEBsZWZ0LiBWYXJpb3VzIGJhbGFuY2luZyBkZWNpc2lvbnMgYXJlIHZhbGlk
IGhlcmUuCisJCQkgICBUaGUgc2FtZSBmb3IgdGhlIHNoaWZpdGluZyB0byB0aGUgcmlnaHQuCisJ
CQkgKi8KKwkJfQorCX0KKwkvKiBJZiB0aGVyZSBzdGlsbCBpcyBub3QgZW5vdWdoIHNwYWNlLCBz
aGlmdCB0byB0aGUgcmlnaHQgKi8KKwlpZiAobm90X2Vub3VnaF9zcGFjZSA+IDAgJiYgIShmbGFn
cyAmIENPUElfRE9OVF9TSElGVF9SSUdIVCkpIHsKKwkJY2Fycnlfbm9kZSAqcmlnaHQ7CisKKwkJ
cmlnaHQgPSBmaW5kX3JpZ2h0X25laWdoYm9yKG9wLCBkb2luZyk7CisJCWlmIChJU19FUlIocmln
aHQpKSB7CisJCQl3YXJuaW5nKCJuaWtpdGEtMTA2NSIsCisJCQkJIkVycm9yIGFjY2Vzc2luZyBy
aWdodCBuZWlnaGJvcjogJWxpIiwKKwkJCQlQVFJfRVJSKHJpZ2h0KSk7CisJCX0gZWxzZSBpZiAo
cmlnaHQgIT0gTlVMTCkgeworCQkJLyogbm9kZSBjb250YWluaW5nIGluc2VydGlvbiBwb2ludCwg
YW5kIGl0cyByaWdodAorCQkJICAgbmVpZ2hib3Igbm9kZSBhcmUgd3JpdGUgbG9ja2VkIGJ5IG5v
dy4KKworCQkJICAgc2hpZnQgZXZlcnl0aGluZyBwb3NzaWJsZSBvbiB0aGUgcmlnaHQgb2YgYnV0
CisJCQkgICBleGNsdWRpbmcgaW5zZXJ0aW9uIGNvb3JkIGludG8gdGhlIHJpZ2h0IG5laWdoYm9y
CisJCQkgKi8KKwkJCXJlc3VsdCA9IGNhcnJ5X3NoaWZ0X2RhdGEoUklHSFRfU0lERSwgY29vcmQs
CisJCQkJCQkgIHJlaXNlcjRfY2FycnlfcmVhbChyaWdodCksCisJCQkJCQkgIGRvaW5nLCB0b2Rv
LAorCQkJCQkJICBmbGFncyAmIENPUElfR09fUklHSFQpOworCQkJLyogcmVnZXQgbm9kZSBmcm9t
IGNvb3JkOiBzaGlmdF9yaWdodCgpIG1pZ2h0IG1vdmUKKwkJCSAgIGluc2VydGlvbiBjb29yZCB0
byB0aGUgcmlnaHQgbmVpZ2hib3IgKi8KKwkJCW5vZGUgPSBzeW5jX29wKG9wLCByaWdodCk7CisJ
CQlub3RfZW5vdWdoX3NwYWNlID0gZnJlZV9zcGFjZV9zaG9ydGFnZShub2RlLCBvcCk7CisJCX0K
Kwl9CisJLyogSWYgdGhlcmUgaXMgc3RpbGwgbm90IGVub3VnaCBzcGFjZSwgYWxsb2NhdGUgbmV3
IG5vZGUocykuCisKKwkgICBXZSB0cnkgdG8gYWxsb2NhdGUgbmV3IGJsb2NrcyBpZiBDT1BJX0RP
TlRfQUxMT0NBVEUgaXMgbm90IHNldCBpbgorCSAgIHRoZSBjYXJyeSBvcGVyYXRpb24gZmxhZ3Mg
KGN1cnJlbnRseSB0aGlzIGlzIG5lZWRlZCBkdXJpbmcgZmx1c2gKKwkgICBvbmx5KS4KKwkgKi8K
Kwlmb3IgKGJsa19hbGxvYyA9IDA7CisJICAgICBub3RfZW5vdWdoX3NwYWNlID4gMCAmJiByZXN1
bHQgPT0gMCAmJiBibGtfYWxsb2MgPCAyICYmCisJICAgICAhKGZsYWdzICYgQ09QSV9ET05UX0FM
TE9DQVRFKTsgKytibGtfYWxsb2MpIHsKKwkJY2Fycnlfbm9kZSAqZnJlc2g7CS8qIG5ldyBub2Rl
IHdlIGFyZSBhbGxvY2F0aW5nICovCisJCWNvb3JkX3QgY29vcmRfc2hhZG93OwkvKiByZW1lbWJl
cmVkIGluc2VydGlvbiBwb2ludCBiZWZvcmUKKwkJCQkJICogc2hpZnRpbmcgZGF0YSBpbnRvIG5l
dyBub2RlICovCisJCWNhcnJ5X25vZGUgKm5vZGVfc2hhZG93OwkvKiByZW1lbWJlcmVkIGluc2Vy
dGlvbiBub2RlCisJCQkJCQkgKiBiZWZvcmUgc2hpZnRpbmcgKi8KKwkJdW5zaWduZWQgaW50IGdv
aW50bzsJLyogd2hldGhlciBpbnNlcnRpb24gcG9pbnQgc2hvdWxkIG1vdmUKKwkJCQkJICogaW50
byBuZXdseSBhbGxvY2F0ZWQgbm9kZSAqLworCisJCS8qIGFsbG9jYXRlIG5ldyBub2RlIG9uIHRo
ZSByaWdodCBvZiBAbm9kZS4gWm5vZGUgYW5kIGRpc2sKKwkJICAgZmFrZSBibG9jayBudW1iZXIg
Zm9yIG5ldyBub2RlIGFyZSBhbGxvY2F0ZWQuCisKKwkJICAgYWRkX25ld196bm9kZSgpIHBvc3Rz
IGNhcnJ5IG9wZXJhdGlvbiBDT1BfSU5TRVJUIHdpdGgKKwkJICAgQ09QVF9DSElMRCBvcHRpb24g
dG8gdGhlIHBhcmVudCBsZXZlbCB0byBhZGQKKwkJICAgcG9pbnRlciB0byBuZXdseSBjcmVhdGVk
IG5vZGUgdG8gaXRzIHBhcmVudC4KKworCQkgICBTdWJ0bGUgcG9pbnQ6IGlmIHNldmVyYWwgbmV3
IG5vZGVzIGFyZSByZXF1aXJlZCB0byBjb21wbGV0ZQorCQkgICBpbnNlcnRpb24gb3BlcmF0aW9u
IGF0IHRoaXMgbGV2ZWwsIHRoZXkgd2lsbCBiZSBpbnNlcnRlZAorCQkgICBpbnRvIHRoZWlyIHBh
cmVudHMgaW4gdGhlIG9yZGVyIG9mIGNyZWF0aW9uLCB3aGljaCBtZWFucworCQkgICB0aGF0IEBu
b2RlIHdpbGwgYmUgdmFsaWQgImNvb2tpZSIgYXQgdGhlIHRpbWUgb2YgaW5zZXJ0aW9uLgorCisJ
CSAqLworCQlmcmVzaCA9IGFkZF9uZXdfem5vZGUobm9kZSwgb3AtPm5vZGUsIGRvaW5nLCB0b2Rv
KTsKKwkJaWYgKElTX0VSUihmcmVzaCkpCisJCQlyZXR1cm4gUFRSX0VSUihmcmVzaCk7CisKKwkJ
LyogVHJ5IHRvIHNoaWZ0IGludG8gbmV3IG5vZGUuICovCisJCXJlc3VsdCA9IGxvY2tfY2Fycnlf
bm9kZShkb2luZywgZnJlc2gpOworCQl6cHV0KHJlaXNlcjRfY2FycnlfcmVhbChmcmVzaCkpOwor
CQlpZiAocmVzdWx0ICE9IDApIHsKKwkJCXdhcm5pbmcoIm5pa2l0YS05NDciLAorCQkJCSJDYW5u
b3QgbG9jayBuZXcgbm9kZTogJWkiLCByZXN1bHQpOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQor
CisJCS8qIGJvdGggbm9kZXMgYXJlIHdyaXRlIGxvY2tlZCBieSBub3cuCisKKwkJICAgc2hpZnQg
ZXZlcnl0aGluZyBwb3NzaWJsZSBvbiB0aGUgcmlnaHQgb2YgYW5kCisJCSAgIGluY2x1ZGluZyBp
bnNlcnRpb24gY29vcmQgaW50byB0aGUgcmlnaHQgbmVpZ2hib3IuCisJCSAqLworCQljb29yZF9k
dXAoJmNvb3JkX3NoYWRvdywgb3AtPnUuaW5zZXJ0LmQtPmNvb3JkKTsKKwkJbm9kZV9zaGFkb3cg
PSBvcC0+bm9kZTsKKwkJLyogbW92ZSBpbnNlcnRpb24gcG9pbnQgaW50byBuZXdseSBjcmVhdGVk
IG5vZGUgaWY6CisKKwkJICAgLiBpbnNlcnRpb24gcG9pbnQgaXMgcmlnaHRtb3N0IGluIHRoZSBz
b3VyY2Ugbm9kZSwgb3IKKwkJICAgLiB0aGlzIGlzIG5vdCB0aGUgZmlyc3Qgbm9kZSB3ZSBhcmUg
YWxsb2NhdGluZyBpbiBhIHJvdy4KKwkJICovCisJCWdvaW50byA9CisJCSAgICAoYmxrX2FsbG9j
ID4gMCkgfHwKKwkJICAgIGNvb3JkX2lzX2FmdGVyX3JpZ2h0bW9zdChvcC0+dS5pbnNlcnQuZC0+
Y29vcmQpOworCisJCWlmIChnb2ludG8gJiYKKwkJICAgIG9wLT5vcCA9PSBDT1BfUEFTVEUgJiYK
KwkJICAgIGNvb3JkX2lzX2V4aXN0aW5nX2l0ZW0ob3AtPnUuaW5zZXJ0LmQtPmNvb3JkKSAmJgor
CQkgICAgaXNfc29saWRfaXRlbSgoaXRlbV9wbHVnaW5fYnlfY29vcmQob3AtPnUuaW5zZXJ0LmQt
PmNvb3JkKSkpKSB7CisJCQkvKiBwYXN0ZSBpbnRvIHNvbGlkIChhdG9taWMpIGl0ZW0sIHdoaWNo
IGNhbiBjb250YWluCisJCQkgICBvbmx5IG9uZSB1bml0LCBzbyB3ZSBuZWVkIHRvIHNoaWZ0IGl0
IHJpZ2h0LCB3aGVyZQorCQkJICAgaW5zZXJ0aW9uIHBvaW50IHN1cHBvc2VkIHRvIGJlICovCisK
KwkJCWFzc2VydCgiZWR3YXJkLTE0NDQiLCBvcC0+dS5pbnNlcnQuZC0+ZGF0YS0+aXBsdWcgPT0K
KwkJCSAgICAgICBpdGVtX3BsdWdpbl9ieV9pZChTVEFUSUNfU1RBVF9EQVRBX0lEKSk7CisJCQlh
c3NlcnQoImVkd2FyZC0xNDQ1IiwKKwkJCSAgICAgICBvcC0+dS5pbnNlcnQuZC0+ZGF0YS0+bGVu
Z3RoID4KKwkJCSAgICAgICBub2RlX3BsdWdpbl9ieV9ub2RlKGNvb3JkLT5ub2RlKS0+ZnJlZV9z
cGFjZQorCQkJICAgICAgIChjb29yZC0+bm9kZSkpOworCisJCQlvcC0+dS5pbnNlcnQuZC0+Y29v
cmQtPmJldHdlZW4gPSBCRUZPUkVfVU5JVDsKKwkJfQorCisJCXJlc3VsdCA9IGNhcnJ5X3NoaWZ0
X2RhdGEoUklHSFRfU0lERSwgY29vcmQsCisJCQkJCSAgcmVpc2VyNF9jYXJyeV9yZWFsKGZyZXNo
KSwKKwkJCQkJICBkb2luZywgdG9kbywgZ29pbnRvKTsKKwkJLyogaWYgaW5zZXJ0aW9uIHBvaW50
IHdhcyBhY3R1YWxseSBtb3ZlZCBpbnRvIG5ldyBub2RlLAorCQkgICB1cGRhdGUgY2Fycnkgbm9k
ZSBwb2ludGVyIGluIG9wZXJhdGlvbi4gKi8KKwkJbm9kZSA9IHN5bmNfb3Aob3AsIGZyZXNoKTsK
KwkJbm90X2Vub3VnaF9zcGFjZSA9IGZyZWVfc3BhY2Vfc2hvcnRhZ2Uobm9kZSwgb3ApOworCQlp
ZiAoKG5vdF9lbm91Z2hfc3BhY2UgPiAwKSAmJiAobm9kZSAhPSBjb29yZF9zaGFkb3cubm9kZSkp
IHsKKwkJCS8qIHRoZXJlIGlzIG5vdCBlbm91Z2ggZnJlZSBpbiBuZXcgbm9kZS4gU2hpZnQKKwkJ
CSAgIGluc2VydGlvbiBwb2ludCBiYWNrIHRvIHRoZSBAc2hhZG93X25vZGUgc28gdGhhdAorCQkJ
ICAgbmV4dCBuZXcgbm9kZSB3b3VsZCBiZSBpbnNlcnRlZCBiZXR3ZWVuCisJCQkgICBAc2hhZG93
X25vZGUgYW5kIEBmcmVzaC4KKwkJCSAqLworCQkJY29vcmRfbm9ybWFsaXplKCZjb29yZF9zaGFk
b3cpOworCQkJY29vcmRfZHVwKGNvb3JkLCAmY29vcmRfc2hhZG93KTsKKwkJCW5vZGUgPSBjb29y
ZC0+bm9kZTsKKwkJCW9wLT5ub2RlID0gbm9kZV9zaGFkb3c7CisJCQlpZiAoMSB8fCAoZmxhZ3Mg
JiBDT1BJX1NURVBfQkFDSykpIHsKKwkJCQkvKiBzdGlsbCBub3QgZW5vdWdoIHNwYWNlPyEgTWF5
YmUgdGhlcmUgaXMKKwkJCQkgICBlbm91Z2ggc3BhY2UgaW4gdGhlIHNvdXJjZSBub2RlIChpLmUu
LCBub2RlCisJCQkJICAgZGF0YSBhcmUgbW92ZWQgZnJvbSkgbm93LgorCQkJCSAqLworCQkJCW5v
dF9lbm91Z2hfc3BhY2UgPQorCQkJCSAgICBmcmVlX3NwYWNlX3Nob3J0YWdlKG5vZGUsIG9wKTsK
KwkJCX0KKwkJfQorCX0KKwlpZiAobm90X2Vub3VnaF9zcGFjZSA+IDApIHsKKwkJaWYgKCEoZmxh
Z3MgJiBDT1BJX0RPTlRfQUxMT0NBVEUpKQorCQkJd2FybmluZygibmlraXRhLTk0OCIsICJDYW5u
b3QgaW5zZXJ0IG5ldyBpdGVtIik7CisJCXJlc3VsdCA9IC1FX05PREVfRlVMTDsKKwl9CisJYXNz
ZXJ0KCJuaWtpdGEtMTYyMiIsIGVyZ28ocmVzdWx0ID09IDAsCisJCQkJICByZWlzZXI0X2NhcnJ5
X3JlYWwob3AtPm5vZGUpID09IGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMjYxNiIs
IGNvb3JkID09IG9wLT51Lmluc2VydC5kLT5jb29yZCk7CisJaWYgKHJlc3VsdCA9PSAwKQorCQly
ZXN1bHQgPSBtYWtlX3NwYWNlX3RhaWwob3AsIGRvaW5nLCBvcmlnX25vZGUpOworCXJldHVybiBy
ZXN1bHQ7Cit9CisKKy8qIGluc2VydF9wYXN0ZV9jb21tb24oKSAtIGNvbW1vbiBwYXJ0IG9mIGlu
c2VydCBhbmQgcGFzdGUgb3BlcmF0aW9ucworCisgICBUaGlzIGZ1bmN0aW9uIHBlcmZvcm1zIGNv
bW1vbiBwYXJ0IG9mIENPUF9JTlNFUlQgYW5kIENPUF9QQVNURS4KKworICAgVGhlcmUgYXJlIHR3
byB3YXlzIGluIHdoaWNoIGluc2VydGlvbi9wYXN0ZSBjYW4gYmUgcmVxdWVzdGVkOgorCisgICAg
LiBieSBkaXJlY3RseSBzdXBwbHlpbmcgcmVpc2VyNF9pdGVtX2RhdGEuIEluIHRoaXMgY2FzZSwg
b3AgLT4KKyAgICB1Lmluc2VydC50eXBlIGlzIHNldCB0byBDT1BUX0lURU1fREFUQS4KKworICAg
IC4gYnkgc3VwcGx5aW5nIGNoaWxkIHBvaW50ZXIgdG8gd2hpY2ggaXMgdG8gaW5zZXJ0ZWQgaW50
byBwYXJlbnQuIEluIHRoaXMKKyAgICBjYXNlIG9wIC0+IHUuaW5zZXJ0LnR5cGUgPT0gQ09QVF9D
SElMRC4KKworICAgIC4gYnkgc3VwcGx5aW5nIGtleSBvZiBuZXcgaXRlbS91bml0LiBUaGlzIGlz
IGN1cnJlbnRseSBvbmx5IHVzZWQgZHVyaW5nCisgICAgZXh0ZW50IGluc2VydGlvbgorCisgICBU
aGlzIGlzIHJlcXVpcmVkLCBiZWNhdXNlIHdoZW4gbmV3IG5vZGUgaXMgYWxsb2NhdGVkIHdlIGRv
bid0IGtub3cgYXQgd2hhdAorICAgcG9zaXRpb24gcG9pbnRlciB0byBpdCBpcyB0byBiZSBzdG9y
ZWQgaW4gdGhlIHBhcmVudC4gQWN0dWFsbHksIHdlIGRvbid0CisgICBldmVuIGtub3cgd2hhdCBp
dHMgcGFyZW50IHdpbGwgYmUsIGJlY2F1c2UgcGFyZW50IGNhbiBiZSByZS1iYWxhbmNlZAorICAg
Y29uY3VycmVudGx5IGFuZCBuZXcgbm9kZSByZS1wYXJlbnRlZCwgYW5kIGJlY2F1c2UgcGFyZW50
IGNhbiBiZSBmdWxsIGFuZAorICAgcG9pbnRlciB0byB0aGUgbmV3IG5vZGUgd2lsbCBnbyBpbnRv
IHNvbWUgb3RoZXIgbm9kZS4KKworICAgaW5zZXJ0X3Bhc3RlX2NvbW1vbigpIHJlc29sdmVzIHBv
aW50ZXIgdG8gY2hpbGQgbm9kZSBpbnRvIHBvc2l0aW9uIGluIHRoZQorICAgcGFyZW50IGJ5IGNh
bGxpbmcgZmluZF9uZXdfY2hpbGRfY29vcmQoKSwgdGhhdCBmaWxscworICAgcmVpc2VyNF9pdGVt
X2RhdGEuIEFmdGVyIHRoaXMsIGluc2VydGlvbi9wYXN0ZSBwcm9jZWVkcyB1bmlmb3JtbHkuCisK
KyAgIEFub3RoZXIgY29tcGxpY2F0aW9uIGlzIHdpdGggZmluZGluZyBmcmVlIHNwYWNlIGR1cmlu
ZyBwYXN0aW5nLiBJdCBtYXkKKyAgIGhhcHBlbiB0aGF0IHdoaWxlIHNoaWZ0aW5nIGl0ZW1zIHRv
IHRoZSBuZWlnaGJvcnMgYW5kIG5ld2x5IGFsbG9jYXRlZAorICAgbm9kZXMsIGluc2VydGlvbiBj
b29yZCBjYW4gbm8gbG9uZ2VyIGJlIGluIHRoZSBpdGVtIHdlIHdhbnRlZCB0byBwYXN0ZQorICAg
aW50by4gQXQgdGhpcyBwb2ludCwgcGFzdGUgYmVjb21lcyAobW9ycGhzKSBpbnRvIGluc2VydC4g
TW9yZW92ZXIgZnJlZQorICAgc3BhY2UgYW5hbHlzaXMgaGFzIHRvIGJlIHJlcGVhdGVkLCBiZWNh
dXNlIGFtb3VudCBvZiBzcGFjZSByZXF1aXJlZCBmb3IKKyAgIGluc2VydGlvbiBpcyBkaWZmZXJl
bnQgZnJvbSB0aGF0IG9mIHBhc3RlIChpdGVtIGhlYWRlciBvdmVyaGVhZCwgZXRjKS4KKworICAg
VGhpcyBmdW5jdGlvbiAidW5pZmllcyIgZGlmZmVyZW50IGluc2VydGlvbiBtb2RlcyAoYnkgcmVz
b2x2aW5nIGNoaWxkCisgICBwb2ludGVyIG9yIGtleSBpbnRvIGluc2VydGlvbiBjb29yZCksIGFu
ZCB0aGVuIGNhbGxzIG1ha2Vfc3BhY2UoKSB0byBmcmVlCisgICBlbm91Z2ggc3BhY2UgaW4gdGhl
IG5vZGUgYnkgc2hpZnRpbmcgZGF0YSB0byB0aGUgbGVmdCBhbmQgcmlnaHQgYW5kIGJ5CisgICBh
bGxvY2F0aW5nIG5ldyBub2RlcyBpZiBuZWNlc3NhcnkuIENhcnJ5IG9wZXJhdGlvbiBrbm93cyBh
bW91bnQgb2Ygc3BhY2UKKyAgIHJlcXVpcmVkIGZvciBpdHMgY29tcGxldGlvbi4gQWZ0ZXIgZW5v
dWdoIGZyZWUgc3BhY2UgaXMgb2J0YWluZWQsIGNhbGxlciBvZgorICAgdGhpcyBmdW5jdGlvbiAo
Y2Fycnlfe2luc2VydCxwYXN0ZSxldGMufSkgcGVyZm9ybXMgYWN0dWFsIGluc2VydGlvbi9wYXN0
ZQorICAgYnkgY2FsbGluZyBpdGVtIHBsdWdpbiBtZXRob2QuCisKKyovCitzdGF0aWMgaW50IGlu
c2VydF9wYXN0ZV9jb21tb24oY2Fycnlfb3AgKiBvcAkvKiBjYXJyeSBvcGVyYXRpb24gYmVpbmcK
KwkJCQkJCSAqIHBlcmZvcm1lZCAqLyAsCisJCQkgICAgICAgY2FycnlfbGV2ZWwgKiBkb2luZyAv
KiBjdXJyZW50IGNhcnJ5IGxldmVsICovICwKKwkJCSAgICAgICBjYXJyeV9sZXZlbCAqIHRvZG8g
LyogbmV4dCBjYXJyeSBsZXZlbCAqLyAsCisJCQkgICAgICAgY2FycnlfaW5zZXJ0X2RhdGEgKiBj
ZGF0YQkvKiBwb2ludGVyIHRvCisJCQkJCQkJCSAqIGNkYXRhICovICwKKwkJCSAgICAgICBjb29y
ZF90ICpjb29yZCAvKiBpbnNlcnRpb24vcGFzdGUgY29vcmQgKi8gLAorCQkJICAgICAgIHJlaXNl
cjRfaXRlbV9kYXRhICogZGF0YQkvKiBkYXRhIHRvIGJlCisJCQkJCQkJICogaW5zZXJ0ZWQvcGFz
dGVkICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS05ODEiLCBvcCAhPSBOVUxMKTsKKwlhc3NlcnQo
Im5pa2l0YS05ODAiLCB0b2RvICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTk3OSIsIChvcC0+
b3AgPT0gQ09QX0lOU0VSVCkgfHwgKG9wLT5vcCA9PSBDT1BfUEFTVEUpCisJICAgICAgIHx8IChv
cC0+b3AgPT0gQ09QX0VYVEVOVCkpOworCisJaWYgKG9wLT51Lmluc2VydC50eXBlID09IENPUFRf
UEFTVEVfUkVTVEFSVEVEKSB7CisJCS8qIG5vdGhpbmcgdG8gZG8uIEZhbGwgdGhyb3VnaCB0byBt
YWtlX3NwYWNlKCkuICovCisJCTsKKwl9IGVsc2UgaWYgKG9wLT51Lmluc2VydC50eXBlID09IENP
UFRfS0VZKSB7CisJCW5vZGVfc2VhcmNoX3Jlc3VsdCBpbnRyYV9ub2RlOworCQl6bm9kZSAqbm9k
ZTsKKwkJLyogUHJvYmxlbSB3aXRoIGRvaW5nIGJhdGNoaW5nIGF0IHRoZSBsb3dlc3QgbGV2ZWws
IGlzIHRoYXQKKwkJICAgb3BlcmF0aW9ucyBoZXJlIGFyZSBnaXZlbiBieSBjb29yZHMgd2hlcmUg
bW9kaWZpY2F0aW9uIGlzCisJCSAgIHRvIGJlIHBlcmZvcm1lZCwgYW5kIG9uZSBtb2RpZmljYXRp
b24gY2FuIGludmFsaWRhdGUgY29vcmRzCisJCSAgIG9mIGFsbCBmb2xsb3dpbmcgb3BlcmF0aW9u
cy4KKworCQkgICBTbywgd2UgYXJlIGltcGxlbWVudGluZyB5ZXQgYW5vdGhlciB0eXBlIGZvciBv
cGVyYXRpb24gdGhhdAorCQkgICB3aWxsIHVzZSAodGhlIG9ubHkpICJsb2NhdG9yIiBzdGFibGUg
YWNyb3NzIHNoaWZ0aW5nIG9mCisJCSAgIGRhdGEgYmV0d2VlbiBub2RlcywgZXRjLjoga2V5IChD
T1BUX0tFWSkuCisKKwkJICAgVGhpcyBjbGF1c2UgcmVzb2x2ZXMga2V5IHRvIHRoZSBjb29yZCBp
biB0aGUgbm9kZS4KKworCQkgICBCdXQgbm9kZSBjYW4gY2hhbmdlIGFsc28uIFByb2JhYmx5IHNv
bWUgcGllY2VzIGhhdmUgdG8gYmUKKwkJICAgYWRkZWQgdG8gdGhlIGxvY2tfY2Fycnlfbm9kZSgp
LCB0byBsb2NrIG5vZGUgYnkgaXRzIGtleS4KKworCQkgKi8KKwkJLyogTk9URS1OSUtJVEEgTG9v
a3VwIGJpYXMgaXMgZml4ZWQgdG8gRklORF9FWEFDVC4gQ29tcGxhaW4KKwkJICAgaWYgeW91IG5l
ZWQgc29tZXRoaW5nIGVsc2UuICovCisJCW9wLT51Lmluc2VydC5kLT5jb29yZCA9IGNvb3JkOwor
CQlub2RlID0gcmVpc2VyNF9jYXJyeV9yZWFsKG9wLT5ub2RlKTsKKwkJaW50cmFfbm9kZSA9IG5v
ZGVfcGx1Z2luX2J5X25vZGUobm9kZSktPmxvb2t1cAorCQkgICAgKG5vZGUsIG9wLT51Lmluc2Vy
dC5kLT5rZXksIEZJTkRfRVhBQ1QsCisJCSAgICAgb3AtPnUuaW5zZXJ0LmQtPmNvb3JkKTsKKwkJ
aWYgKChpbnRyYV9ub2RlICE9IE5TX0ZPVU5EKSAmJiAoaW50cmFfbm9kZSAhPSBOU19OT1RfRk9V
TkQpKSB7CisJCQl3YXJuaW5nKCJuaWtpdGEtMTcxNSIsICJJbnRyYSBub2RlIGxvb2t1cCBmYWls
dXJlOiAlaSIsCisJCQkJaW50cmFfbm9kZSk7CisJCQlyZXR1cm4gaW50cmFfbm9kZTsKKwkJfQor
CX0gZWxzZSBpZiAob3AtPnUuaW5zZXJ0LnR5cGUgPT0gQ09QVF9DSElMRCkgeworCQkvKiBpZiB3
ZSBhcmUgYXNrZWQgdG8gaW5zZXJ0IHBvaW50ZXIgdG8gdGhlIGNoaWxkIGludG8KKwkJICAgaW50
ZXJuYWwgbm9kZSwgZmlyc3QgY29udmVydCBwb2ludGVyIHRvIHRoZSBjaGlsZCBpbnRvCisJCSAg
IGNvb3JkIHdpdGhpbiBwYXJlbnQgbm9kZS4KKwkJICovCisJCXpub2RlICpjaGlsZDsKKwkJaW50
IHJlc3VsdDsKKworCQlvcC0+dS5pbnNlcnQuZCA9IGNkYXRhOworCQlvcC0+dS5pbnNlcnQuZC0+
Y29vcmQgPSBjb29yZDsKKwkJb3AtPnUuaW5zZXJ0LmQtPmRhdGEgPSBkYXRhOworCQlvcC0+dS5p
bnNlcnQuZC0+Y29vcmQtPm5vZGUgPSByZWlzZXI0X2NhcnJ5X3JlYWwob3AtPm5vZGUpOworCQly
ZXN1bHQgPSBmaW5kX25ld19jaGlsZF9jb29yZChvcCk7CisJCWNoaWxkID0gcmVpc2VyNF9jYXJy
eV9yZWFsKG9wLT51Lmluc2VydC5jaGlsZCk7CisJCWlmIChyZXN1bHQgIT0gTlNfTk9UX0ZPVU5E
KSB7CisJCQl3YXJuaW5nKCJuaWtpdGEtOTkzIiwKKwkJCQkiQ2Fubm90IGZpbmQgYSBwbGFjZSBm
b3IgY2hpbGQgcG9pbnRlcjogJWkiLAorCQkJCXJlc3VsdCk7CisJCQlyZXR1cm4gcmVzdWx0Owor
CQl9CisJCS8qIFRoaXMgb25seSBoYXBwZW5zIHdoZW4gd2UgZGlkIG11bHRpcGxlIGluc2VydGlv
bnMgYXQKKwkJICAgdGhlIHByZXZpb3VzIGxldmVsLCB0cnlpbmcgdG8gaW5zZXJ0IHNpbmdsZSBp
dGVtIGFuZAorCQkgICBpdCBzbyBoYXBwZW5lZCwgdGhhdCBpbnNlcnRpb24gb2YgcG9pbnRlcnMg
dG8gYWxsIG5ldworCQkgICBub2RlcyBiZWZvcmUgdGhpcyBvbmUgYWxyZWFkeSBjYXVzZWQgcGFy
ZW50IG5vZGUgdG8KKwkJICAgc3BsaXQgKG1heSBiZSBzZXZlcmFsIHRpbWVzKS4KKworCQkgICBJ
IGFtIGdvaW5nIHRvIGNvbWUgdXAgd2l0aCBiZXR0ZXIgc29sdXRpb24uCisKKwkJICAgWW91IGFy
ZSBub3QgZXhwZWN0ZWQgdG8gdW5kZXJzdGFuZCB0aGlzLgorCQkgICAtLSB2NnJvb3QvdXNyL3N5
cy9rZW4vc2xwLmMKKworCQkgICBCYXNpY2FsbHksIHdoYXQgaGFwcGVucyBoZXJlIGlzIHRoZSBm
b2xsb3dpbmc6IGNhcnJ5IGNhbWUKKwkJICAgdG8gdGhlIHBhcmVudCBsZXZlbCBhbmQgaXMgYWJv
dXQgdG8gaW5zZXJ0IGludGVybmFsIGl0ZW0KKwkJICAgcG9pbnRpbmcgdG8gdGhlIGNoaWxkIG5v
ZGUgdGhhdCBpdCBqdXN0IGluc2VydGVkIGluIHRoZQorCQkgICBsZXZlbCBiZWxvdy4gUG9zaXRp
b24gd2hlcmUgaW50ZXJuYWwgaXRlbSBpcyB0byBiZSBpbnNlcnRlZAorCQkgICB3YXMgZm91bmQg
YnkgZmluZF9uZXdfY2hpbGRfY29vcmQoKSBhYm92ZSwgYnV0IG5vZGUgb2YgdGhlCisJCSAgIGN1
cnJlbnQgY2Fycnkgb3BlcmF0aW9uICh0aGF0IGlzLCBwYXJlbnQgbm9kZSBvZiBjaGlsZAorCQkg
ICBpbnNlcnRlZCBvbiB0aGUgcHJldmlvdXMgbGV2ZWwpLCB3YXMgZGV0ZXJtaW5lZCBlYXJsaWVy
IGluCisJCSAgIHRoZSBsb2NrX2NhcnJ5X2xldmVsL2xvY2tfY2Fycnlfbm9kZS4gSXQgY291bGQg
c28gaGFwcGVuCisJCSAgIHRoYXQgb3RoZXIgY2Fycnkgb3BlcmF0aW9ucyBhbHJlYWR5IHBlcmZv
cm1lZCBvbiB0aGUgcGFyZW50CisJCSAgIGxldmVsIGFscmVhZHkgc3BsaXQgcGFyZW50IG5vZGUs
IHNvIHRoYXQgaW5zZXJ0aW9uIHBvaW50CisJCSAgIG1vdmVkIGludG8gYW5vdGhlciBub2RlLiBI
YW5kbGUgdGhpcyBieSBjcmVhdGluZyBuZXcgY2FycnkKKwkJICAgbm9kZSBmb3IgaW5zZXJ0aW9u
IHBvaW50IGlmIG5lY2Vzc2FyeS4KKwkJICovCisJCWlmIChyZWlzZXI0X2NhcnJ5X3JlYWwob3At
Pm5vZGUpICE9CisJCSAgICBvcC0+dS5pbnNlcnQuZC0+Y29vcmQtPm5vZGUpIHsKKwkJCXBvb2xf
b3JkZXJpbmcgZGlyZWN0aW9uOworCQkJem5vZGUgKnoxOworCQkJem5vZGUgKnoyOworCQkJcmVp
c2VyNF9rZXkgazE7CisJCQlyZWlzZXI0X2tleSBrMjsKKworCQkJLyoKKwkJCSAqIGRldGVybWlu
ZSBpbiB3aGF0IGRpcmVjdGlvbiBpbnNlcnRpb24gcG9pbnQKKwkJCSAqIG1vdmVkLiBEbyB0aGlz
IGJ5IGNvbXBhcmluZyBkZWxpbWl0aW5nIGtleXMuCisJCQkgKi8KKwkJCXoxID0gb3AtPnUuaW5z
ZXJ0LmQtPmNvb3JkLT5ub2RlOworCQkJejIgPSByZWlzZXI0X2NhcnJ5X3JlYWwob3AtPm5vZGUp
OworCQkJaWYgKGtleWxlKGxlZnRtb3N0X2tleV9pbl9ub2RlKHoxLCAmazEpLAorCQkJCSAgbGVm
dG1vc3Rfa2V5X2luX25vZGUoejIsICZrMikpKQorCQkJCS8qIGluc2VydGlvbiBwb2ludCBtb3Zl
ZCB0byB0aGUgbGVmdCAqLworCQkJCWRpcmVjdGlvbiA9IFBPT0xPX0JFRk9SRTsKKwkJCWVsc2UK
KwkJCQkvKiBpbnNlcnRpb24gcG9pbnQgbW92ZWQgdG8gdGhlIHJpZ2h0ICovCisJCQkJZGlyZWN0
aW9uID0gUE9PTE9fQUZURVI7CisKKwkJCW9wLT5ub2RlID0gcmVpc2VyNF9hZGRfY2Fycnlfc2tp
cChkb2luZywKKwkJCQkJCQkgIGRpcmVjdGlvbiwgb3AtPm5vZGUpOworCQkJaWYgKElTX0VSUihv
cC0+bm9kZSkpCisJCQkJcmV0dXJuIFBUUl9FUlIob3AtPm5vZGUpOworCQkJb3AtPm5vZGUtPm5v
ZGUgPSBvcC0+dS5pbnNlcnQuZC0+Y29vcmQtPm5vZGU7CisJCQlvcC0+bm9kZS0+ZnJlZSA9IDE7
CisJCQlyZXN1bHQgPSBsb2NrX2NhcnJ5X25vZGUoZG9pbmcsIG9wLT5ub2RlKTsKKwkJCWlmIChy
ZXN1bHQgIT0gMCkKKwkJCQlyZXR1cm4gcmVzdWx0OworCQl9CisKKwkJLyoKKwkJICogc2V0IHVw
IGtleSBvZiBhbiBpdGVtIGJlaW5nIGluc2VydGVkOiB3ZSBhcmUgaW5zZXJ0aW5nCisJCSAqIGlu
dGVybmFsIGl0ZW0gYW5kIGl0cyBrZXkgaXMgKGJ5IHRoZSB2ZXJ5IGRlZmluaXRpb24gb2YKKwkJ
ICogc2VhcmNoIHRyZWUpIGlzIGxlZnRtb3N0IGtleSBpbiB0aGUgY2hpbGQgbm9kZS4KKwkJICov
CisJCXdyaXRlX2xvY2tfZGsoem5vZGVfZ2V0X3RyZWUoY2hpbGQpKTsKKwkJb3AtPnUuaW5zZXJ0
LmQtPmtleSA9IGxlZnRtb3N0X2tleV9pbl9ub2RlKGNoaWxkLAorCQkJCQkJCSAgIHpub2RlX2dl
dF9sZF9rZXkoY2hpbGQpKTsKKwkJd3JpdGVfdW5sb2NrX2RrKHpub2RlX2dldF90cmVlKGNoaWxk
KSk7CisJCW9wLT51Lmluc2VydC5kLT5kYXRhLT5hcmcgPSBvcC0+dS5pbnNlcnQuYnJvdGhlcjsK
Kwl9IGVsc2UgeworCQlhc3NlcnQoInZzLTI0MyIsIG9wLT51Lmluc2VydC5kLT5jb29yZCAhPSBO
VUxMKTsKKwkJb3AtPnUuaW5zZXJ0LmQtPmNvb3JkLT5ub2RlID0gcmVpc2VyNF9jYXJyeV9yZWFs
KG9wLT5ub2RlKTsKKwl9CisKKwkvKiBmaW5kIGZyZWUgc3BhY2UuICovCisJcmV0dXJuIG1ha2Vf
c3BhY2Uob3AsIGRvaW5nLCB0b2RvKTsKK30KKworLyogaGFuZGxlIGNhcnJ5IENPUF9JTlNFUlQg
b3BlcmF0aW9uLgorCisgICBJbnNlcnQgbmV3IGl0ZW0gaW50byBub2RlLiBOZXcgaXRlbSBjYW4g
YmUgZ2l2ZW4gaW4gb25lIG9mIHR3byB3YXlzOgorCisgICAtIGJ5IHBhc3NpbmcgJnRyZWVfY29v
cmQgYW5kICZyZWlzZXI0X2l0ZW1fZGF0YSBhcyBwYXJ0IG9mIEBvcC4gVGhpcyBpcworICAgb25s
eSBhcHBsaWNhYmxlIGF0IHRoZSBsZWFmL3R3aWcgbGV2ZWwuCisKKyAgIC0gYnkgcGFzc2luZyBh
IGNoaWxkIG5vZGUgcG9pbnRlciB0byB3aGljaCBpcyB0byBiZSBpbnNlcnRlZCBieSB0aGlzCisg
ICBvcGVyYXRpb24uCisKKyovCitzdGF0aWMgaW50IGNhcnJ5X2luc2VydChjYXJyeV9vcCAqIG9w
IC8qIG9wZXJhdGlvbiB0byBwZXJmb3JtICovICwKKwkJCWNhcnJ5X2xldmVsICogZG9pbmcJLyog
cXVldWUgb2Ygb3BlcmF0aW9ucyBAb3AKKwkJCQkJCSAqIGlzIHBhcnQgb2YgKi8gLAorCQkJY2Fy
cnlfbGV2ZWwgKiB0b2RvCS8qIHF1ZXVlIHdoZXJlIG5ldyBvcGVyYXRpb25zCisJCQkJCQkgKiBh
cmUgYWNjdW11bGF0ZWQgKi8gKQoreworCXpub2RlICpub2RlOworCWNhcnJ5X2luc2VydF9kYXRh
IGNkYXRhOworCWNvb3JkX3QgY29vcmQ7CisJcmVpc2VyNF9pdGVtX2RhdGEgZGF0YTsKKwljYXJy
eV9wbHVnaW5faW5mbyBpbmZvOworCWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0xMDM2
Iiwgb3AgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTAzNyIsIHRvZG8gIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTAzOCIsIG9wLT5vcCA9PSBDT1BfSU5TRVJUKTsKKworCWNvb3JkX2lu
aXRfemVybygmY29vcmQpOworCisJLyogcGVyZm9ybSBjb21tb24gZnVuY3Rpb25hbGl0eSBvZiBp
bnNlcnQgYW5kIHBhc3RlLiAqLworCXJlc3VsdCA9IGluc2VydF9wYXN0ZV9jb21tb24ob3AsIGRv
aW5nLCB0b2RvLCAmY2RhdGEsICZjb29yZCwgJmRhdGEpOworCWlmIChyZXN1bHQgIT0gMCkKKwkJ
cmV0dXJuIHJlc3VsdDsKKworCW5vZGUgPSBvcC0+dS5pbnNlcnQuZC0+Y29vcmQtPm5vZGU7CisJ
YXNzZXJ0KCJuaWtpdGEtMTAzOSIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTA0
MCIsIG5vZGVfcGx1Z2luX2J5X25vZGUobm9kZSkgIT0gTlVMTCk7CisKKwlhc3NlcnQoIm5pa2l0
YS05NDkiLAorCSAgICAgICBzcGFjZV9uZWVkZWRfZm9yX29wKG5vZGUsIG9wKSA8PSB6bm9kZV9m
cmVlX3NwYWNlKG5vZGUpKTsKKworCS8qIGFzayBub2RlIGxheW91dCB0byBjcmVhdGUgbmV3IGl0
ZW0uICovCisJaW5mby5kb2luZyA9IGRvaW5nOworCWluZm8udG9kbyA9IHRvZG87CisJcmVzdWx0
ID0gbm9kZV9wbHVnaW5fYnlfbm9kZShub2RlKS0+Y3JlYXRlX2l0ZW0KKwkgICAgKG9wLT51Lmlu
c2VydC5kLT5jb29yZCwgb3AtPnUuaW5zZXJ0LmQtPmtleSwgb3AtPnUuaW5zZXJ0LmQtPmRhdGEs
CisJICAgICAmaW5mbyk7CisJZG9pbmctPnJlc3RhcnRhYmxlID0gMDsKKwl6bm9kZV9tYWtlX2Rp
cnR5KG5vZGUpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIEZsb3cgaW5zZXJ0aW9u
IGNvZGUuIENPUF9JTlNFUlRfRkxPVyBpcyBzcGVjaWFsIHRyZWUgb3BlcmF0aW9uIHRoYXQgaXMK
KyAqIHN1cHBsaWVkIHdpdGggYSAiZmxvdyIgKHRoYXQgaXMsIGEgc3RyZWFtIG9mIGRhdGEpIGFu
ZCBpbnNlcnRzIGl0IGludG8gdHJlZQorICogYnkgc2xpY2luZyBpbnRvIG11bHRpcGxlIGl0ZW1z
LgorICovCisKKyNkZWZpbmUgZmxvd19pbnNlcnRfcG9pbnQob3ApICgob3ApLT51Lmluc2VydF9m
bG93Lmluc2VydF9wb2ludCkKKyNkZWZpbmUgZmxvd19pbnNlcnRfZmxvdyhvcCkgKChvcCktPnUu
aW5zZXJ0X2Zsb3cuZmxvdykKKyNkZWZpbmUgZmxvd19pbnNlcnRfZGF0YShvcCkgKChvcCktPnUu
aW5zZXJ0X2Zsb3cuZGF0YSkKKworc3RhdGljIHNpemVfdCBpdGVtX2RhdGFfb3ZlcmhlYWQoY2Fy
cnlfb3AgKiBvcCkKK3sKKwlpZiAoZmxvd19pbnNlcnRfZGF0YShvcCktPmlwbHVnLT5iLmVzdGlt
YXRlID09IE5VTEwpCisJCXJldHVybiAwOworCXJldHVybiAoZmxvd19pbnNlcnRfZGF0YShvcCkt
PmlwbHVnLT5iLgorCQllc3RpbWF0ZShOVUxMIC8qIGVzdGltYXRlIGluc2VydGlvbiAqLyAsIGZs
b3dfaW5zZXJ0X2RhdGEob3ApKSAtCisJCWZsb3dfaW5zZXJ0X2RhdGEob3ApLT5sZW5ndGgpOwor
fQorCisvKiBGSVhNRS1WUzogdGhpcyBpcyBjYWxsZWQgc2V2ZXJhbCB0aW1lcyBkdXJpbmcgb25l
IG1ha2VfZmxvd19mb3JfaW5zZXJ0aW9uCisgICBhbmQgaXQgd2lsbCBhbHdheXMgcmV0dXJuIHRo
ZSBzYW1lIHJlc3VsdC4gU29tZSBvcHRpbWl6YXRpb24gY291bGQgYmUgbWFkZQorICAgYnkgY2Fs
Y3VsYXRpbmcgdGhpcyB2YWx1ZSBvbmNlIGF0IHRoZSBiZWdpbm5pbmcgYW5kIHBhc3NpbmcgaXQg
YXJvdW5kLiBUaGF0CisgICB3b3VsZCByZWR1Y2Ugc29tZSBmbGV4aWJpbGl0eSBpbiBmdXR1cmUg
Y2hhbmdlcworKi8KK3N0YXRpYyBpbnQgY2FuX3Bhc3RlKGNvb3JkX3QgKiwgY29uc3QgcmVpc2Vy
NF9rZXkgKiwgY29uc3QgcmVpc2VyNF9pdGVtX2RhdGEgKik7CitzdGF0aWMgc2l6ZV90IGZsb3df
aW5zZXJ0aW9uX292ZXJoZWFkKGNhcnJ5X29wICogb3ApCit7CisJem5vZGUgKm5vZGU7CisJc2l6
ZV90IGluc2VydGlvbl9vdmVyaGVhZDsKKworCW5vZGUgPSBmbG93X2luc2VydF9wb2ludChvcCkt
Pm5vZGU7CisJaW5zZXJ0aW9uX292ZXJoZWFkID0gMDsKKwlpZiAobm9kZS0+bnBsdWctPml0ZW1f
b3ZlcmhlYWQgJiYKKwkgICAgIWNhbl9wYXN0ZShmbG93X2luc2VydF9wb2ludChvcCksICZmbG93
X2luc2VydF9mbG93KG9wKS0+a2V5LAorCQkgICAgICAgZmxvd19pbnNlcnRfZGF0YShvcCkpKQor
CQlpbnNlcnRpb25fb3ZlcmhlYWQgPQorCQkgICAgbm9kZS0+bnBsdWctPml0ZW1fb3ZlcmhlYWQo
bm9kZSwgTlVMTCkgKworCQkJaXRlbV9kYXRhX292ZXJoZWFkKG9wKTsKKwlyZXR1cm4gaW5zZXJ0
aW9uX292ZXJoZWFkOworfQorCisvKiBob3cgbWFueSBieXRlcyBvZiBmbG93IGRvZXMgZml0IHRv
IHRoZSBub2RlICovCitzdGF0aWMgaW50IHdoYXRfY2FuX2ZpdF9pbnRvX25vZGUoY2Fycnlfb3Ag
KiBvcCkKK3sKKwlzaXplX3QgZnJlZSwgb3ZlcmhlYWQ7CisKKwlvdmVyaGVhZCA9IGZsb3dfaW5z
ZXJ0aW9uX292ZXJoZWFkKG9wKTsKKwlmcmVlID0gem5vZGVfZnJlZV9zcGFjZShmbG93X2luc2Vy
dF9wb2ludChvcCktPm5vZGUpOworCWlmIChmcmVlIDw9IG92ZXJoZWFkKQorCQlyZXR1cm4gMDsK
KwlmcmVlIC09IG92ZXJoZWFkOworCS8qIEZJWE1FOiBmbG93LT5sZW5ndGggaXMgbG9mZl90IG9u
bHkgdG8gbm90IGdldCBvdmVyZmxvd2VkIGluIGNhc2Ugb2YKKwkgICBleHBhbmRpZ24gdHJ1bmNh
dGUgKi8KKwlpZiAoZnJlZSA8IG9wLT51Lmluc2VydF9mbG93LmZsb3ctPmxlbmd0aCkKKwkJcmV0
dXJuIGZyZWU7CisJcmV0dXJuIChpbnQpb3AtPnUuaW5zZXJ0X2Zsb3cuZmxvdy0+bGVuZ3RoOwor
fQorCisvKiBpbiBtYWtlX3NwYWNlX2Zvcl9mbG93X2luc2VydGlvbiB3ZSBuZWVkIHRvIGNoZWNr
IGVpdGhlciB3aGV0aGVyIHdob2xlIGZsb3cKKyAgIGZpdHMgaW50byBhIG5vZGUgb3Igd2hldGhl
ciBtaW5pbWFsIGZyYWN0aW9uIG9mIGZsb3cgZml0cyBpbnRvIGEgbm9kZSAqLworc3RhdGljIGlu
dCBlbm91Z2hfc3BhY2VfZm9yX3dob2xlX2Zsb3coY2Fycnlfb3AgKiBvcCkKK3sKKwlyZXR1cm4g
KHVuc2lnbmVkKXdoYXRfY2FuX2ZpdF9pbnRvX25vZGUob3ApID09CisJICAgIG9wLT51Lmluc2Vy
dF9mbG93LmZsb3ctPmxlbmd0aDsKK30KKworI2RlZmluZSBNSU5fRkxPV19GUkFDVElPTiAxCitz
dGF0aWMgaW50IGVub3VnaF9zcGFjZV9mb3JfbWluX2Zsb3dfZnJhY3Rpb24oY2Fycnlfb3AgKiBv
cCkKK3sKKwkvL2Fzc2VydCgidnMtOTAyIiwgY29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0KGZsb3df
aW5zZXJ0X3BvaW50KG9wKSkpOworCisJcmV0dXJuIHdoYXRfY2FuX2ZpdF9pbnRvX25vZGUob3Ap
ID49IE1JTl9GTE9XX0ZSQUNUSU9OOworfQorCisvKiB0aGlzIHJldHVybnMgMCBpZiBsZWZ0IG5l
aWdoYm9yIHdhcyBvYnRhaW5lZCBzdWNjZXNzZnVsbHkgYW5kIGV2ZXJ5dGhpbmcKKyAgIHVwdG8g
aW5zZXJ0aW9uIHBvaW50IGluY2x1ZGluZyBpdCB3ZXJlIHNoaWZ0ZWQgYW5kIGxlZnQgbmVpZ2hi
b3Igc3RpbGwgaGFzCisgICBzb21lIGZyZWUgc3BhY2UgdG8gcHV0IG1pbmltYWwgZnJhY3Rpb24g
b2YgZmxvdyBpbnRvIGl0ICovCitzdGF0aWMgaW50CittYWtlX3NwYWNlX2J5X3NoaWZ0X2xlZnQo
Y2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBkb2luZywgY2FycnlfbGV2ZWwgKiB0b2RvKQor
eworCWNhcnJ5X25vZGUgKmxlZnQ7CisJem5vZGUgKm9yaWc7CisKKwlsZWZ0ID0gZmluZF9sZWZ0
X25laWdoYm9yKG9wLCBkb2luZyk7CisJaWYgKHVubGlrZWx5KElTX0VSUihsZWZ0KSkpIHsKKwkJ
d2FybmluZygidnMtODk5IiwKKwkJCSJtYWtlX3NwYWNlX2J5X3NoaWZ0X2xlZnQ6ICIKKwkJCSJl
cnJvciBhY2Nlc3NpbmcgbGVmdCBuZWlnaGJvcjogJWxpIiwgUFRSX0VSUihsZWZ0KSk7CisJCXJl
dHVybiAxOworCX0KKwlpZiAobGVmdCA9PSBOVUxMKQorCQkvKiBsZWZ0IG5laWdoYm9yIGVpdGhl
ciBkb2VzIG5vdCBleGlzdCBvciBpcyB1bmZvcm1hdHRlZAorCQkgICBub2RlICovCisJCXJldHVy
biAxOworCisJb3JpZyA9IGZsb3dfaW5zZXJ0X3BvaW50KG9wKS0+bm9kZTsKKwkvKiB0cnkgdG8g
c2hpZnQgY29udGVudCBvZiBub2RlIEBvcmlnIGZyb20gaXRzIGhlYWQgdXB0byBpbnNlcnQgcG9p
bnQKKwkgICBpbmNsdWRpbmcgaW5zZXJ0aW9uIHBvaW50IGludG8gdGhlIGxlZnQgbmVpZ2hib3Ig
Ki8KKwljYXJyeV9zaGlmdF9kYXRhKExFRlRfU0lERSwgZmxvd19pbnNlcnRfcG9pbnQob3ApLAor
CQkJIHJlaXNlcjRfY2FycnlfcmVhbChsZWZ0KSwgZG9pbmcsIHRvZG8sCisJCQkgMS8qIGluY2x1
ZGluZyBpbnNlcnQgcG9pbnQgKi8pOworCWlmIChyZWlzZXI0X2NhcnJ5X3JlYWwobGVmdCkgIT0g
Zmxvd19pbnNlcnRfcG9pbnQob3ApLT5ub2RlKSB7CisJCS8qIGluc2VydGlvbiBwb2ludCBkaWQg
bm90IG1vdmUgKi8KKwkJcmV0dXJuIDE7CisJfQorCisJLyogaW5zZXJ0aW9uIHBvaW50IGlzIHNl
dCBhZnRlciBsYXN0IGl0ZW0gaW4gdGhlIG5vZGUgKi8KKwlhc3NlcnQoInZzLTkwMCIsIGNvb3Jk
X2lzX2FmdGVyX3JpZ2h0bW9zdChmbG93X2luc2VydF9wb2ludChvcCkpKTsKKworCWlmICghZW5v
dWdoX3NwYWNlX2Zvcl9taW5fZmxvd19mcmFjdGlvbihvcCkpIHsKKwkJLyogaW5zZXJ0aW9uIHBv
aW50IG5vZGUgZG9lcyBub3QgaGF2ZSBlbm91Z2ggZnJlZSBzcGFjZSB0byBwdXQKKwkJICAgZXZl
biBtaW5pbWFsIHBvcnRpb24gb2YgZmxvdyBpbnRvIGl0LCB0aGVyZWZvcmUsIG1vdmUKKwkJICAg
aW5zZXJ0aW9uIHBvaW50IGJhY2sgdG8gb3JpZyBub2RlIChiZWZvcmUgZmlyc3QgaXRlbSkgKi8K
KwkJY29vcmRfaW5pdF9iZWZvcmVfZmlyc3RfaXRlbShmbG93X2luc2VydF9wb2ludChvcCksIG9y
aWcpOworCQlyZXR1cm4gMTsKKwl9CisKKwkvKiBwYXJ0IG9mIGZsb3cgaXMgdG8gYmUgd3JpdHRl
biB0byB0aGUgZW5kIG9mIG5vZGUgKi8KKwlvcC0+bm9kZSA9IGxlZnQ7CisJcmV0dXJuIDA7Cit9
CisKKy8qIHRoaXMgcmV0dXJucyAwIGlmIHJpZ2h0IG5laWdoYm9yIHdhcyBvYnRhaW5lZCBzdWNj
ZXNzZnVsbHkgYW5kIGV2ZXJ5dGhpbmcgdG8KKyAgIHRoZSByaWdodCBvZiBpbnNlcnRpb24gcG9p
bnQgd2FzIHNoaWZ0ZWQgdG8gaXQgYW5kIG5vZGUgZ290IGVub3VnaCBmcmVlCisgICBzcGFjZSB0
byBwdXQgbWluaW1hbCBmcmFjdGlvbiBvZiBmbG93IGludG8gaXQgKi8KK3N0YXRpYyBpbnQKK21h
a2Vfc3BhY2VfYnlfc2hpZnRfcmlnaHQoY2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBkb2lu
ZywKKwkJCSAgY2FycnlfbGV2ZWwgKiB0b2RvKQoreworCWNhcnJ5X25vZGUgKnJpZ2h0OworCisJ
cmlnaHQgPSBmaW5kX3JpZ2h0X25laWdoYm9yKG9wLCBkb2luZyk7CisJaWYgKHVubGlrZWx5KElT
X0VSUihyaWdodCkpKSB7CisJCXdhcm5pbmcoIm5pa2l0YS0xMDY1IiwgInNoaWZ0X3JpZ2h0X2V4
Y2x1ZGluZ19pbnNlcnRfcG9pbnQ6ICIKKwkJCSJlcnJvciBhY2Nlc3NpbmcgcmlnaHQgbmVpZ2hi
b3I6ICVsaSIsIFBUUl9FUlIocmlnaHQpKTsKKwkJcmV0dXJuIDE7CisJfQorCWlmIChyaWdodCkg
eworCQkvKiBzaGlmdCBldmVyeXRoaW5nIHBvc3NpYmxlIG9uIHRoZSByaWdodCBvZiBidXQgZXhj
bHVkaW5nCisJCSAgIGluc2VydGlvbiBjb29yZCBpbnRvIHRoZSByaWdodCBuZWlnaGJvciAqLwor
CQljYXJyeV9zaGlmdF9kYXRhKFJJR0hUX1NJREUsIGZsb3dfaW5zZXJ0X3BvaW50KG9wKSwKKwkJ
CQkgcmVpc2VyNF9jYXJyeV9yZWFsKHJpZ2h0KSwgZG9pbmcsIHRvZG8sCisJCQkJIDAvKiBub3Qg
aW5jbHVkaW5nIGluc2VydCBwb2ludCAqLyk7CisJfSBlbHNlIHsKKwkJLyogcmlnaHQgbmVpZ2hi
b3IgZWl0aGVyIGRvZXMgbm90IGV4aXN0IG9yIGlzIHVuZm9ybWF0dGVkCisJCSAgIG5vZGUgKi8K
KwkJOworCX0KKwlpZiAoY29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0KGZsb3dfaW5zZXJ0X3BvaW50
KG9wKSkpIHsKKwkJaWYgKGVub3VnaF9zcGFjZV9mb3JfbWluX2Zsb3dfZnJhY3Rpb24ob3ApKSB7
CisJCQkvKiBwYXJ0IG9mIGZsb3cgaXMgdG8gYmUgd3JpdHRlbiB0byB0aGUgZW5kIG9mIG5vZGUg
Ki8KKwkJCXJldHVybiAwOworCQl9CisJfQorCisJLyogbmV3IG5vZGUgaXMgdG8gYmUgYWRkZWQg
aWYgaW5zZXJ0IHBvaW50IG5vZGUgZGlkIG5vdCBnZXQgZW5vdWdoCisJICAgc3BhY2UgZm9yIHdo
b2xlIGZsb3cgKi8KKwlyZXR1cm4gMTsKK30KKworLyogdGhpcyByZXR1cm5zIDAgd2hlbiBpbnNl
cnQgY29vcmQgaXMgc2V0IGF0IHRoZSBub2RlIGVuZCBhbmQgZnJhY3Rpb24gb2YgZmxvdworICAg
Zml0cyBpbnRvIHRoYXQgbm9kZSAqLworc3RhdGljIGludAorbWFrZV9zcGFjZV9ieV9uZXdfbm9k
ZXMoY2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBkb2luZywgY2FycnlfbGV2ZWwgKiB0b2Rv
KQoreworCWludCByZXN1bHQ7CisJem5vZGUgKm5vZGU7CisJY2Fycnlfbm9kZSAqbmV3OworCisJ
bm9kZSA9IGZsb3dfaW5zZXJ0X3BvaW50KG9wKS0+bm9kZTsKKworCWlmIChvcC0+dS5pbnNlcnRf
Zmxvdy5uZXdfbm9kZXMgPT0gQ0FSUllfRkxPV19ORVdfTk9ERVNfTElNSVQpCisJCXJldHVybiBS
RVRFUlIoLUVfTk9ERV9GVUxMKTsKKwkvKiBhZGQgbmV3IG5vZGUgYWZ0ZXIgaW5zZXJ0IHBvaW50
IG5vZGUgKi8KKwluZXcgPSBhZGRfbmV3X3pub2RlKG5vZGUsIG9wLT5ub2RlLCBkb2luZywgdG9k
byk7CisJaWYgKHVubGlrZWx5KElTX0VSUihuZXcpKSkKKwkJcmV0dXJuIFBUUl9FUlIobmV3KTsK
KwlyZXN1bHQgPSBsb2NrX2NhcnJ5X25vZGUoZG9pbmcsIG5ldyk7CisJenB1dChyZWlzZXI0X2Nh
cnJ5X3JlYWwobmV3KSk7CisJaWYgKHVubGlrZWx5KHJlc3VsdCkpCisJCXJldHVybiByZXN1bHQ7
CisJb3AtPnUuaW5zZXJ0X2Zsb3cubmV3X25vZGVzKys7CisJaWYgKCFjb29yZF9pc19hZnRlcl9y
aWdodG1vc3QoZmxvd19pbnNlcnRfcG9pbnQob3ApKSkgeworCQljYXJyeV9zaGlmdF9kYXRhKFJJ
R0hUX1NJREUsIGZsb3dfaW5zZXJ0X3BvaW50KG9wKSwKKwkJCQkgcmVpc2VyNF9jYXJyeV9yZWFs
KG5ldyksIGRvaW5nLCB0b2RvLAorCQkJCSAwLyogbm90IGluY2x1ZGluZyBpbnNlcnQgcG9pbnQg
Ki8pOworCQlhc3NlcnQoInZzLTkwMSIsCisJCSAgICAgICBjb29yZF9pc19hZnRlcl9yaWdodG1v
c3QoZmxvd19pbnNlcnRfcG9pbnQob3ApKSk7CisKKwkJaWYgKGVub3VnaF9zcGFjZV9mb3JfbWlu
X2Zsb3dfZnJhY3Rpb24ob3ApKQorCQkJcmV0dXJuIDA7CisJCWlmIChvcC0+dS5pbnNlcnRfZmxv
dy5uZXdfbm9kZXMgPT0gQ0FSUllfRkxPV19ORVdfTk9ERVNfTElNSVQpCisJCQlyZXR1cm4gUkVU
RVJSKC1FX05PREVfRlVMTCk7CisKKwkJLyogYWRkIG9uZSBtb3JlIG5ldyBub2RlICovCisJCW5l
dyA9IGFkZF9uZXdfem5vZGUobm9kZSwgb3AtPm5vZGUsIGRvaW5nLCB0b2RvKTsKKwkJaWYgKHVu
bGlrZWx5KElTX0VSUihuZXcpKSkKKwkJCXJldHVybiBQVFJfRVJSKG5ldyk7CisJCXJlc3VsdCA9
IGxvY2tfY2Fycnlfbm9kZShkb2luZywgbmV3KTsKKwkJenB1dChyZWlzZXI0X2NhcnJ5X3JlYWwo
bmV3KSk7CisJCWlmICh1bmxpa2VseShyZXN1bHQpKQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJb3At
PnUuaW5zZXJ0X2Zsb3cubmV3X25vZGVzKys7CisJfQorCisJLyogbW92ZSBpbnNlcnRpb24gcG9p
bnQgdG8gbmV3IG5vZGUgKi8KKwljb29yZF9pbml0X2JlZm9yZV9maXJzdF9pdGVtKGZsb3dfaW5z
ZXJ0X3BvaW50KG9wKSwKKwkJCQkgICAgIHJlaXNlcjRfY2FycnlfcmVhbChuZXcpKTsKKwlvcC0+
bm9kZSA9IG5ldzsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludAorbWFrZV9zcGFjZV9mb3Jf
Zmxvd19pbnNlcnRpb24oY2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBkb2luZywKKwkJCSAg
ICAgIGNhcnJ5X2xldmVsICogdG9kbykKK3sKKwlfX3UzMiBmbGFncyA9IG9wLT51Lmluc2VydF9m
bG93LmZsYWdzOworCisJaWYgKGVub3VnaF9zcGFjZV9mb3Jfd2hvbGVfZmxvdyhvcCkpIHsKKwkJ
Lyogd2hvbGUgZmxvdyBmaXRzIGludG8gaW5zZXJ0IHBvaW50IG5vZGUgKi8KKwkJcmV0dXJuIDA7
CisJfQorCWlmICgoZmxhZ3MgJiBDT1BJX1NXRUVQKSAmJgorCSAgICBlbm91Z2hfc3BhY2VfZm9y
X21pbl9mbG93X2ZyYWN0aW9uKG9wKSkKKwkJLyogdXNlIHRoZSByZXN0IG9mIHNwYWNlIGluIHRo
ZSBjdXJyZW50IG5vZGUgKi8KKwkJcmV0dXJuIDA7CisKKwlpZiAoIShmbGFncyAmIENPUElfRE9O
VF9TSElGVF9MRUZUKQorCSAgICAmJiAobWFrZV9zcGFjZV9ieV9zaGlmdF9sZWZ0KG9wLCBkb2lu
ZywgdG9kbykgPT0gMCkpIHsKKwkJLyogaW5zZXJ0IHBvaW50IGlzIHNoaWZ0ZWQgdG8gbGVmdCBu
ZWlnaGJvciBvZiBvcmlnaW5hbCBpbnNlcnQKKwkJICAgcG9pbnQgbm9kZSBhbmQgaXMgc2V0IGFm
dGVyIGxhc3QgdW5pdCBpbiB0aGF0IG5vZGUuIEl0IGhhcworCQkgICBlbm91Z2ggc3BhY2UgdG8g
Zml0IGF0IGxlYXN0IG1pbmltYWwgZnJhY3Rpb24gb2YgZmxvdy4gKi8KKwkJcmV0dXJuIDA7CisJ
fQorCisJaWYgKGVub3VnaF9zcGFjZV9mb3Jfd2hvbGVfZmxvdyhvcCkpIHsKKwkJLyogd2hvbGUg
ZmxvdyBmaXRzIGludG8gaW5zZXJ0IHBvaW50IG5vZGUgKi8KKwkJcmV0dXJuIDA7CisJfQorCisJ
aWYgKCEoZmxhZ3MgJiBDT1BJX0RPTlRfU0hJRlRfUklHSFQpCisJICAgICYmIChtYWtlX3NwYWNl
X2J5X3NoaWZ0X3JpZ2h0KG9wLCBkb2luZywgdG9kbykgPT0gMCkpIHsKKwkJLyogaW5zZXJ0IHBv
aW50IGlzIHN0aWxsIHNldCB0byB0aGUgc2FtZSBub2RlLCBidXQgdGhlcmUgaXMKKwkJICAgbm90
aGluZyB0byB0aGUgcmlnaHQgb2YgaW5zZXJ0IHBvaW50LiAqLworCQlyZXR1cm4gMDsKKwl9CisK
KwlpZiAoZW5vdWdoX3NwYWNlX2Zvcl93aG9sZV9mbG93KG9wKSkgeworCQkvKiB3aG9sZSBmbG93
IGZpdHMgaW50byBpbnNlcnQgcG9pbnQgbm9kZSAqLworCQlyZXR1cm4gMDsKKwl9CisKKwlyZXR1
cm4gbWFrZV9zcGFjZV9ieV9uZXdfbm9kZXMob3AsIGRvaW5nLCB0b2RvKTsKK30KKworLyogaW1w
bGVtZW50cyBDT1BfSU5TRVJUX0ZMT1cgb3BlcmF0aW9uICovCitzdGF0aWMgaW50CitjYXJyeV9p
bnNlcnRfZmxvdyhjYXJyeV9vcCAqIG9wLCBjYXJyeV9sZXZlbCAqIGRvaW5nLCBjYXJyeV9sZXZl
bCAqIHRvZG8pCit7CisJaW50IHJlc3VsdDsKKwlmbG93X3QgKmY7CisJY29vcmRfdCAqaW5zZXJ0
X3BvaW50OworCW5vZGVfcGx1Z2luICpucGx1ZzsKKwljYXJyeV9wbHVnaW5faW5mbyBpbmZvOwor
CXpub2RlICpvcmlnX25vZGU7CisJbG9ja19oYW5kbGUgKm9yaWdfbGg7CisKKwlmID0gb3AtPnUu
aW5zZXJ0X2Zsb3cuZmxvdzsKKwlyZXN1bHQgPSAwOworCisJLyogY2Fycnkgc3lzdGVtIG5lZWRz
IHRoaXMgdG8gd29yayAqLworCWluZm8uZG9pbmcgPSBkb2luZzsKKwlpbmZvLnRvZG8gPSB0b2Rv
OworCisJb3JpZ19ub2RlID0gZmxvd19pbnNlcnRfcG9pbnQob3ApLT5ub2RlOworCW9yaWdfbGgg
PSBkb2luZy0+dHJhY2tlZDsKKworCXdoaWxlIChmLT5sZW5ndGgpIHsKKwkJcmVzdWx0ID0gbWFr
ZV9zcGFjZV9mb3JfZmxvd19pbnNlcnRpb24ob3AsIGRvaW5nLCB0b2RvKTsKKwkJaWYgKHJlc3Vs
dCkKKwkJCWJyZWFrOworCisJCWluc2VydF9wb2ludCA9IGZsb3dfaW5zZXJ0X3BvaW50KG9wKTsK
KwkJbnBsdWcgPSBub2RlX3BsdWdpbl9ieV9ub2RlKGluc2VydF9wb2ludC0+bm9kZSk7CisKKwkJ
LyogY29tcG9zZSBpdGVtIGRhdGEgZm9yIGluc2VydGlvbi9wYXN0aW5nICovCisJCWZsb3dfaW5z
ZXJ0X2RhdGEob3ApLT5kYXRhID0gZi0+ZGF0YTsKKwkJZmxvd19pbnNlcnRfZGF0YShvcCktPmxl
bmd0aCA9IHdoYXRfY2FuX2ZpdF9pbnRvX25vZGUob3ApOworCisJCWlmIChjYW5fcGFzdGUoaW5z
ZXJ0X3BvaW50LCAmZi0+a2V5LCBmbG93X2luc2VydF9kYXRhKG9wKSkpIHsKKwkJCS8qIGluc2Vy
dCBwb2ludCBpcyBzZXQgdG8gaXRlbSBvZiBmaWxlIHdlIGFyZSB3cml0aW5nIHRvCisJCQkgICBh
bmQgd2UgaGF2ZSB0byBhcHBlbmQgdG8gaXQgKi8KKwkJCWFzc2VydCgidnMtOTAzIiwgaW5zZXJ0
X3BvaW50LT5iZXR3ZWVuID09IEFGVEVSX1VOSVQpOworCQkJbnBsdWctPmNoYW5nZV9pdGVtX3Np
emUoaW5zZXJ0X3BvaW50LAorCQkJCQkJZmxvd19pbnNlcnRfZGF0YShvcCktPmxlbmd0aCk7CisJ
CQlmbG93X2luc2VydF9kYXRhKG9wKS0+aXBsdWctPmIucGFzdGUoaW5zZXJ0X3BvaW50LAorCQkJ
CQkJCSAgICAgZmxvd19pbnNlcnRfZGF0YQorCQkJCQkJCSAgICAgKG9wKSwgJmluZm8pOworCQl9
IGVsc2UgeworCQkJLyogbmV3IGl0ZW0gbXVzdCBiZSBpbnNlcnRlZCAqLworCQkJcG9zX2luX25v
ZGVfdCBuZXdfcG9zOworCQkJZmxvd19pbnNlcnRfZGF0YShvcCktPmxlbmd0aCArPSBpdGVtX2Rh
dGFfb3ZlcmhlYWQob3ApOworCisJCQkvKiBGSVhNRS1WUzogdGhpcyBpcyBiZWNhdXNlIG5vZGU0
MF9jcmVhdGVfaXRlbSBjaGFuZ2VzCisJCQkgICBpbnNlcnRfcG9pbnQgZm9yIG9ic2N1cmUgcmVh
c29ucyAqLworCQkJc3dpdGNoIChpbnNlcnRfcG9pbnQtPmJldHdlZW4pIHsKKwkJCWNhc2UgQUZU
RVJfSVRFTToKKwkJCQluZXdfcG9zID0gaW5zZXJ0X3BvaW50LT5pdGVtX3BvcyArIDE7CisJCQkJ
YnJlYWs7CisJCQljYXNlIEVNUFRZX05PREU6CisJCQkJbmV3X3BvcyA9IDA7CisJCQkJYnJlYWs7
CisJCQljYXNlIEJFRk9SRV9JVEVNOgorCQkJCWFzc2VydCgidnMtOTA1IiwgaW5zZXJ0X3BvaW50
LT5pdGVtX3BvcyA9PSAwKTsKKwkJCQluZXdfcG9zID0gMDsKKwkJCQlicmVhazsKKwkJCWRlZmF1
bHQ6CisJCQkJaW1wb3NzaWJsZSgidnMtOTA2IiwKKwkJCQkJICAgImNhcnJ5X2luc2VydF9mbG93
OiBpbnZhbGlkIGNvb3JkIik7CisJCQkJbmV3X3BvcyA9IDA7CisJCQkJYnJlYWs7CisJCQl9CisK
KwkJCW5wbHVnLT5jcmVhdGVfaXRlbShpbnNlcnRfcG9pbnQsICZmLT5rZXksCisJCQkJCSAgIGZs
b3dfaW5zZXJ0X2RhdGEob3ApLCAmaW5mbyk7CisJCQljb29yZF9zZXRfaXRlbV9wb3MoaW5zZXJ0
X3BvaW50LCBuZXdfcG9zKTsKKwkJfQorCQljb29yZF9pbml0X2FmdGVyX2l0ZW1fZW5kKGluc2Vy
dF9wb2ludCk7CisJCWRvaW5nLT5yZXN0YXJ0YWJsZSA9IDA7CisJCXpub2RlX21ha2VfZGlydHko
aW5zZXJ0X3BvaW50LT5ub2RlKTsKKworCQltb3ZlX2Zsb3dfZm9yd2FyZChmLCAodW5zaWduZWQp
Zmxvd19pbnNlcnRfZGF0YShvcCktPmxlbmd0aCk7CisJfQorCisJaWYgKG9yaWdfbm9kZSAhPSBm
bG93X2luc2VydF9wb2ludChvcCktPm5vZGUpIHsKKwkJLyogbW92ZSBsb2NrIHRvIG5ldyBpbnNl
cnQgcG9pbnQgKi8KKwkJZG9uZV9saChvcmlnX2xoKTsKKwkJaW5pdF9saChvcmlnX2xoKTsKKwkJ
cmVzdWx0ID0KKwkJICAgIGxvbmd0ZXJtX2xvY2tfem5vZGUob3JpZ19saCwgZmxvd19pbnNlcnRf
cG9pbnQob3ApLT5ub2RlLAorCQkJCQlaTk9ERV9XUklURV9MT0NLLCBaTk9ERV9MT0NLX0hJUFJJ
KTsKKwl9CisKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBpbXBsZW1lbnRzIENPUF9ERUxFVEUg
b3BlcmF0aW9uCisKKyAgIFJlbW92ZSBwb2ludGVyIHRvIEBvcCAtPiB1LmRlbGV0ZS5jaGlsZCBm
cm9tIGl0J3MgcGFyZW50LgorCisgICBUaGlzIGZ1bmN0aW9uIGFsc28gaGFuZGxlcyBraWxsaW5n
IG9mIGEgdHJlZSByb290IGlzIGxhc3QgcG9pbnRlciBmcm9tIGl0CisgICB3YXMgcmVtb3ZlZC4g
VGhpcyBpcyBjb21wbGljYXRlZCBieSBvdXIgaGFuZGxpbmcgb2YgInR3aWciIGxldmVsOiByb290
IG9uCisgICB0d2lnIGxldmVsIGlzIG5ldmVyIGtpbGxlZC4KKworKi8KK3N0YXRpYyBpbnQgY2Fy
cnlfZGVsZXRlKGNhcnJ5X29wICogb3AgLyogb3BlcmF0aW9uIHRvIGJlIHBlcmZvcm1lZCAqLyAs
CisJCQljYXJyeV9sZXZlbCAqIGRvaW5nIFVOVVNFRF9BUkcJLyogY3VycmVudCBjYXJyeQorCQkJ
CQkJCSAqIGxldmVsICovICwKKwkJCWNhcnJ5X2xldmVsICogdG9kby8qIG5leHQgY2FycnkgbGV2
ZWwgKi8pCit7CisJaW50IHJlc3VsdDsKKwljb29yZF90IGNvb3JkOworCWNvb3JkX3QgY29vcmQy
OworCXpub2RlICpwYXJlbnQ7CisJem5vZGUgKmNoaWxkOworCWNhcnJ5X3BsdWdpbl9pbmZvIGlu
Zm87CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJLyoKKwkgKiBUaGlzIG9wZXJhdGlvbiBpcyBj
YWxsZWQgdG8gZGVsZXRlIGludGVybmFsIGl0ZW0gcG9pbnRpbmcgdG8gdGhlCisJICogY2hpbGQg
bm9kZSB0aGF0IHdhcyByZW1vdmVkIGJ5IGNhcnJ5IGZyb20gdGhlIHRyZWUgb24gdGhlIHByZXZp
b3VzCisJICogdHJlZSBsZXZlbC4KKwkgKi8KKworCWFzc2VydCgibmlraXRhLTg5MyIsIG9wICE9
IE5VTEwpOworCWFzc2VydCgibmlraXRhLTg5NCIsIHRvZG8gIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtODk1Iiwgb3AtPm9wID09IENPUF9ERUxFVEUpOworCisJY29vcmRfaW5pdF96ZXJvKCZj
b29yZCk7CisJY29vcmRfaW5pdF96ZXJvKCZjb29yZDIpOworCisJcGFyZW50ID0gcmVpc2VyNF9j
YXJyeV9yZWFsKG9wLT5ub2RlKTsKKwljaGlsZCA9IG9wLT51LmRlbGV0ZS5jaGlsZCA/CisJCXJl
aXNlcjRfY2FycnlfcmVhbChvcC0+dS5kZWxldGUuY2hpbGQpIDogb3AtPm5vZGUtPm5vZGU7CisJ
dHJlZSA9IHpub2RlX2dldF90cmVlKGNoaWxkKTsKKwlyZWFkX2xvY2tfdHJlZSh0cmVlKTsKKwor
CS8qCisJICogQHBhcmVudCB3YXMgZGV0ZXJtaW5lZCB3aGVuIGNhcnJ5IGVudGVyZWQgcGFyZW50
IGxldmVsCisJICogKGxvY2tfY2FycnlfbGV2ZWwvbG9ja19jYXJyeV9ub2RlKS4gU2luY2UgdGhl
biwgYWN0dWFsIHBhcmVudCBvZgorCSAqIEBjaGlsZCBub2RlIGNvdWxkIGNoYW5nZSBkdWUgdG8g
b3RoZXIgY2Fycnkgb3BlcmF0aW9ucyBwZXJmb3JtZWQgb24KKwkgKiB0aGUgcGFyZW50IGxldmVs
LiBDaGVjayBmb3IgdGhpcy4KKwkgKi8KKworCWlmICh6bm9kZV9wYXJlbnQoY2hpbGQpICE9IHBh
cmVudCkgeworCQkvKiBOT1RFLU5JS0lUQSBhZGQgc3RhdCBjb3VudGVyIGZvciB0aGlzLiAqLwor
CQlwYXJlbnQgPSB6bm9kZV9wYXJlbnQoY2hpbGQpOworCQlhc3NlcnQoIm5pa2l0YS0yNTgxIiwg
ZmluZF9jYXJyeV9ub2RlKGRvaW5nLCBwYXJlbnQpKTsKKwl9CisJcmVhZF91bmxvY2tfdHJlZSh0
cmVlKTsKKworCWFzc2VydCgibmlraXRhLTEyMTMiLCB6bm9kZV9nZXRfbGV2ZWwocGFyZW50KSA+
IExFQUZfTEVWRUwpOworCisJLyogVHdpZyBsZXZlbCBob3Jyb3JzOiB0cmVlIHNob3VsZCBiZSBv
ZiBoZWlnaHQgYXQgbGVhc3QgMi4gU28sIGxhc3QKKwkgICBwb2ludGVyIGZyb20gdGhlIHJvb3Qg
YXQgdHdpZyBsZXZlbCBpcyBwcmVzZXJ2ZWQgZXZlbiBpZiBjaGlsZCBpcworCSAgIGVtcHR5LiBU
aGlzIGlzIHVnbHksIGJ1dCBzbyBpdCB3YXMgYXJjaGl0ZWN0dXJlZC4KKwkgKi8KKworCWlmICh6
bm9kZV9pc19yb290KHBhcmVudCkgJiYKKwkgICAgem5vZGVfZ2V0X2xldmVsKHBhcmVudCkgPD0g
UkVJU0VSNF9NSU5fVFJFRV9IRUlHSFQgJiYKKwkgICAgbm9kZV9udW1faXRlbXMocGFyZW50KSA9
PSAxKSB7CisJCS8qIERlbGltaXRpbmcga2V5IG1hbmlwdWxhdGlvbnMuICovCisJCXdyaXRlX2xv
Y2tfZGsodHJlZSk7CisJCXpub2RlX3NldF9sZF9rZXkoY2hpbGQsIHpub2RlX3NldF9sZF9rZXko
cGFyZW50LCByZWlzZXI0X21pbl9rZXkoKSkpOworCQl6bm9kZV9zZXRfcmRfa2V5KGNoaWxkLCB6
bm9kZV9zZXRfcmRfa2V5KHBhcmVudCwgcmVpc2VyNF9tYXhfa2V5KCkpKTsKKwkJWkZfU0VUKGNo
aWxkLCBKTk9ERV9ES1NFVCk7CisJCXdyaXRlX3VubG9ja19kayh0cmVlKTsKKworCQkvKiBAY2hp
bGQgZXNjYXBlZCBpbW1pbmVudCBkZWF0aCEgKi8KKwkJWkZfQ0xSKGNoaWxkLCBKTk9ERV9IRUFS
RF9CQU5TSEVFKTsKKwkJcmV0dXJuIDA7CisJfQorCisJLyogY29udmVydCBjaGlsZCBwb2ludGVy
IHRvIHRoZSBjb29yZF90ICovCisJcmVzdWx0ID0gZmluZF9jaGlsZF9wdHIocGFyZW50LCBjaGls
ZCwgJmNvb3JkKTsKKwlpZiAocmVzdWx0ICE9IE5TX0ZPVU5EKSB7CisJCXdhcm5pbmcoIm5pa2l0
YS05OTQiLCAiQ2Fubm90IGZpbmQgY2hpbGQgcG9pbnRlcjogJWkiLCByZXN1bHQpOworCQlwcmlu
dF9jb29yZF9jb250ZW50KCJjb29yZCIsICZjb29yZCk7CisJCXJldHVybiByZXN1bHQ7CisJfQor
CisJY29vcmRfZHVwKCZjb29yZDIsICZjb29yZCk7CisJaW5mby5kb2luZyA9IGRvaW5nOworCWlu
Zm8udG9kbyA9IHRvZG87CisJeworCQkvKgorCQkgKiBBY3R1YWxseSBraWxsIGludGVybmFsIGl0
ZW06IHByZXBhcmUgc3RydWN0dXJlIHdpdGgKKwkJICogYXJndW1lbnRzIGZvciAtPmN1dF9hbmRf
a2lsbCgpIG1ldGhvZC4uLgorCQkgKi8KKworCQlzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhIGtkYXRh
OworCQlrZGF0YS5wYXJhbXMuZnJvbSA9ICZjb29yZDsKKwkJa2RhdGEucGFyYW1zLnRvID0gJmNv
b3JkMjsKKwkJa2RhdGEucGFyYW1zLmZyb21fa2V5ID0gTlVMTDsKKwkJa2RhdGEucGFyYW1zLnRv
X2tleSA9IE5VTEw7CisJCWtkYXRhLnBhcmFtcy5zbWFsbGVzdF9yZW1vdmVkID0gTlVMTDsKKwkJ
a2RhdGEucGFyYW1zLnRydW5jYXRlID0gMTsKKwkJa2RhdGEuZmxhZ3MgPSBvcC0+dS5kZWxldGUu
ZmxhZ3M7CisJCWtkYXRhLmlub2RlID0gTlVMTDsKKwkJa2RhdGEubGVmdCA9IE5VTEw7CisJCWtk
YXRhLnJpZ2h0ID0gTlVMTDsKKwkJa2RhdGEuYnVmID0gTlVMTDsKKwkJLyogLi4uIGFuZCBjYWxs
IGl0LiAqLworCQlyZXN1bHQgPSBub2RlX3BsdWdpbl9ieV9ub2RlKHBhcmVudCktPmN1dF9hbmRf
a2lsbCgma2RhdGEsCisJCQkJCQkJCSAgICZpbmZvKTsKKwl9CisJZG9pbmctPnJlc3RhcnRhYmxl
ID0gMDsKKworCS8qIGNoZWNrIHdoZXRoZXIgcm9vdCBzaG91bGQgYmUga2lsbGVkIHZpb2xlbnRs
eSAqLworCWlmICh6bm9kZV9pc19yb290KHBhcmVudCkgJiYKKwkgICAgLyogZG9uJ3Qga2lsbCBy
b290cyBhdCBhbmQgbG93ZXIgdGhhbiB0d2lnIGxldmVsICovCisJICAgIHpub2RlX2dldF9sZXZl
bChwYXJlbnQpID4gUkVJU0VSNF9NSU5fVFJFRV9IRUlHSFQgJiYKKwkgICAgbm9kZV9udW1faXRl
bXMocGFyZW50KSA9PSAxKQorCQlyZXN1bHQgPSByZWlzZXI0X2tpbGxfdHJlZV9yb290KGNvb3Jk
Lm5vZGUpOworCisJcmV0dXJuIHJlc3VsdCA8IDAgPyByZXN1bHQgOiAwOworfQorCisvKiBpbXBs
ZW1lbnRzIENPUF9DVVQgb3ByYXRpb24KKworICAgQ3V0cyBwYXJ0IG9yIHdob2xlIGNvbnRlbnQg
b2Ygbm9kZS4KKworKi8KK3N0YXRpYyBpbnQgY2FycnlfY3V0KGNhcnJ5X29wICogb3AgLyogb3Bl
cmF0aW9uIHRvIGJlIHBlcmZvcm1lZCAqLyAsCisJCSAgICAgY2FycnlfbGV2ZWwgKiBkb2luZyAv
KiBjdXJyZW50IGNhcnJ5IGxldmVsICovICwKKwkJICAgICBjYXJyeV9sZXZlbCAqIHRvZG8vKiBu
ZXh0IGNhcnJ5IGxldmVsICovKQoreworCWludCByZXN1bHQ7CisJY2FycnlfcGx1Z2luX2luZm8g
aW5mbzsKKwlub2RlX3BsdWdpbiAqbnBsdWc7CisKKwlhc3NlcnQoIm5pa2l0YS04OTYiLCBvcCAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS04OTciLCB0b2RvICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTg5OCIsIG9wLT5vcCA9PSBDT1BfQ1VUKTsKKworCWluZm8uZG9pbmcgPSBkb2luZzsK
KwlpbmZvLnRvZG8gPSB0b2RvOworCisJbnBsdWcgPSBub2RlX3BsdWdpbl9ieV9ub2RlKHJlaXNl
cjRfY2FycnlfcmVhbChvcC0+bm9kZSkpOworCWlmIChvcC0+dS5jdXRfb3Jfa2lsbC5pc19jdXQp
CisJCXJlc3VsdCA9IG5wbHVnLT5jdXQob3AtPnUuY3V0X29yX2tpbGwudS5jdXQsICZpbmZvKTsK
KwllbHNlCisJCXJlc3VsdCA9IG5wbHVnLT5jdXRfYW5kX2tpbGwob3AtPnUuY3V0X29yX2tpbGwu
dS5raWxsLCAmaW5mbyk7CisKKwlkb2luZy0+cmVzdGFydGFibGUgPSAwOworCXJldHVybiByZXN1
bHQgPCAwID8gcmVzdWx0IDogMDsKK30KKworLyogaGVscGVyIGZ1bmN0aW9uIGZvciBjYXJyeV9w
YXN0ZSgpOiByZXR1cm5zIHRydWUgaWYgQG9wIGNhbiBiZSBjb250aW51ZWQgYXMKKyAgIHBhc3Rl
ICAqLworc3RhdGljIGludAorY2FuX3Bhc3RlKGNvb3JkX3QgKmljb29yZCwgY29uc3QgcmVpc2Vy
NF9rZXkgKiBrZXksCisJICBjb25zdCByZWlzZXI0X2l0ZW1fZGF0YSAqIGRhdGEpCit7CisJY29v
cmRfdCBjaXJjYTsKKwlpdGVtX3BsdWdpbiAqbmV3X2lwbHVnOworCWl0ZW1fcGx1Z2luICpvbGRf
aXBsdWc7CisJaW50IHJlc3VsdCA9IDA7CQkvKiB0byBrZWVwIGdjYyBzaHV0ICovCisKKwlhc3Nl
cnQoIiIsIGljb29yZC0+YmV0d2VlbiAhPSBBVF9VTklUKTsKKworCS8qIG9idmlvdXNseSwgb25l
IGNhbm5vdCBwYXN0ZSB3aGVuIG5vZGUgaXMgZW1wdHktLS10aGVyZSBpcyBub3RoaW5nCisJICAg
dG8gcGFzdGUgaW50by4gKi8KKwlpZiAobm9kZV9pc19lbXB0eShpY29vcmQtPm5vZGUpKQorCQly
ZXR1cm4gMDsKKwkvKiBpZiBpbnNlcnRpb24gcG9pbnQgaXMgYXQgdGhlIG1pZGRsZSBvZiB0aGUg
aXRlbSwgdGhlbiBwYXN0ZSAqLworCWlmICghY29vcmRfaXNfYmV0d2Vlbl9pdGVtcyhpY29vcmQp
KQorCQlyZXR1cm4gMTsKKwljb29yZF9kdXAoJmNpcmNhLCBpY29vcmQpOworCWNpcmNhLmJldHdl
ZW4gPSBBVF9VTklUOworCisJb2xkX2lwbHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQoJmNpcmNh
KTsKKwluZXdfaXBsdWcgPSBkYXRhLT5pcGx1ZzsKKworCS8qIGNoZWNrIHdoZXRoZXIgd2UgY2Fu
IHBhc3RlIHRvIHRoZSBpdGVtIEBpY29vcmQgaXMgImF0IiB3aGVuIHdlCisJICAgaWdub3JlIC0+
YmV0d2VlbiBmaWVsZCAqLworCWlmIChvbGRfaXBsdWcgPT0gbmV3X2lwbHVnICYmIGl0ZW1fY2Fu
X2NvbnRhaW5fa2V5KCZjaXJjYSwga2V5LCBkYXRhKSkKKwkJcmVzdWx0ID0gMTsKKwllbHNlIGlm
IChpY29vcmQtPmJldHdlZW4gPT0gQkVGT1JFX1VOSVQKKwkJICAgfHwgaWNvb3JkLT5iZXR3ZWVu
ID09IEJFRk9SRV9JVEVNKSB7CisJCS8qIG90aGVyd2lzZSwgdHJ5IHRvIGdsdWUgdG8gdGhlIGl0
ZW0gYXQgdGhlIGxlZnQsIGlmIGFueSAqLworCQljb29yZF9kdXAoJmNpcmNhLCBpY29vcmQpOwor
CQlpZiAoY29vcmRfc2V0X3RvX2xlZnQoJmNpcmNhKSkgeworCQkJcmVzdWx0ID0gMDsKKwkJCWNv
b3JkX2luaXRfYmVmb3JlX2l0ZW0oaWNvb3JkKTsKKwkJfSBlbHNlIHsKKwkJCW9sZF9pcGx1ZyA9
IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZjaXJjYSk7CisJCQlyZXN1bHQgPSAob2xkX2lwbHVnID09
IG5ld19pcGx1ZykKKwkJCSAgICAmJiBpdGVtX2Nhbl9jb250YWluX2tleShpY29vcmQsIGtleSwg
ZGF0YSk7CisJCQlpZiAocmVzdWx0KSB7CisJCQkJY29vcmRfZHVwKGljb29yZCwgJmNpcmNhKTsK
KwkJCQlpY29vcmQtPmJldHdlZW4gPSBBRlRFUl9VTklUOworCQkJfQorCQl9CisJfSBlbHNlIGlm
IChpY29vcmQtPmJldHdlZW4gPT0gQUZURVJfVU5JVAorCQkgICB8fCBpY29vcmQtPmJldHdlZW4g
PT0gQUZURVJfSVRFTSkgeworCQljb29yZF9kdXAoJmNpcmNhLCBpY29vcmQpOworCQkvKiBvdGhl
cndpc2UsIHRyeSB0byBnbHVlIHRvIHRoZSBpdGVtIGF0IHRoZSByaWdodCwgaWYgYW55ICovCisJ
CWlmIChjb29yZF9zZXRfdG9fcmlnaHQoJmNpcmNhKSkgeworCQkJcmVzdWx0ID0gMDsKKwkJCWNv
b3JkX2luaXRfYWZ0ZXJfaXRlbShpY29vcmQpOworCQl9IGVsc2UgeworCQkJaW50ICgqY2NrKSAo
Y29uc3QgY29vcmRfdCAqLCBjb25zdCByZWlzZXI0X2tleSAqLAorCQkJCSAgICBjb25zdCByZWlz
ZXI0X2l0ZW1fZGF0YSAqKTsKKworCQkJb2xkX2lwbHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQo
JmNpcmNhKTsKKworCQkJY2NrID0gb2xkX2lwbHVnLT5iLmNhbl9jb250YWluX2tleTsKKwkJCWlm
IChjY2sgPT0gTlVMTCkKKwkJCQkvKiBpdGVtIGRvZXNuJ3QgZGVmaW5lIC0+Y2FuX2NvbnRhaW5f
a2V5CisJCQkJICAgbWV0aG9kPyBTbyBpdCBpcyBub3QgZXhwYW5kYWJsZS4gKi8KKwkJCQlyZXN1
bHQgPSAwOworCQkJZWxzZSB7CisJCQkJcmVzdWx0ID0gKG9sZF9pcGx1ZyA9PSBuZXdfaXBsdWcp
CisJCQkJICAgICYmIGNjaygmY2lyY2EgLyppY29vcmQgKi8gLCBrZXksIGRhdGEpOworCQkJCWlm
IChyZXN1bHQpIHsKKwkJCQkJY29vcmRfZHVwKGljb29yZCwgJmNpcmNhKTsKKwkJCQkJaWNvb3Jk
LT5iZXR3ZWVuID0gQkVGT1JFX1VOSVQ7CisJCQkJfQorCQkJfQorCQl9CisJfSBlbHNlCisJCWlt
cG9zc2libGUoIm5pa2l0YS0yNTEzIiwgIk5vdGhpbmcgd29ya3MiKTsKKwlpZiAocmVzdWx0KSB7
CisJCWlmIChpY29vcmQtPmJldHdlZW4gPT0gQkVGT1JFX0lURU0pIHsKKwkJCWFzc2VydCgidnMt
OTEyIiwgaWNvb3JkLT51bml0X3BvcyA9PSAwKTsKKwkJCWljb29yZC0+YmV0d2VlbiA9IEJFRk9S
RV9VTklUOworCQl9IGVsc2UgaWYgKGljb29yZC0+YmV0d2VlbiA9PSBBRlRFUl9JVEVNKSB7CisJ
CQljb29yZF9pbml0X2FmdGVyX2l0ZW1fZW5kKGljb29yZCk7CisJCX0KKwl9CisJcmV0dXJuIHJl
c3VsdDsKK30KKworLyogaW1wbGVtZW50cyBDT1BfUEFTVEUgb3BlcmF0aW9uCisKKyAgIFBhc3Rl
IGRhdGEgaW50byBleGlzdGluZyBpdGVtLiBUaGlzIGlzIGNvbXBsaWNhdGVkIGJ5IHRoZSBmYWN0
IHRoYXQgYWZ0ZXIKKyAgIHdlIHNoaWZ0ZWQgc29tZXRoaW5nIHRvIHRoZSBsZWZ0IG9yIHJpZ2h0
IG5laWdoYm9ycyB0cnlpbmcgdG8gZnJlZSBzb21lCisgICBzcGFjZSwgaXRlbSB3ZSB3ZXJlIHN1
cHBvc2VkIHRvIHBhc3RlIGludG8gY2FuIGJlIGluIGRpZmZlcmVudCBub2RlIHRoYW4KKyAgIGlu
c2VydGlvbiBjb29yZC4gSWYgc28sIHdlIGFyZSBubyBsb25nZXIgZG9pbmcgcGFzdGUsIGJ1dCBp
bnNlcnQuIFNlZQorICAgY29tbWVudHMgaW4gaW5zZXJ0X3Bhc3RlX2NvbW1vbigpLgorCisqLwor
c3RhdGljIGludCBjYXJyeV9wYXN0ZShjYXJyeV9vcCAqIG9wIC8qIG9wZXJhdGlvbiB0byBiZSBw
ZXJmb3JtZWQgKi8gLAorCQkgICAgICAgY2FycnlfbGV2ZWwgKiBkb2luZyBVTlVTRURfQVJHCS8q
IGN1cnJlbnQgY2FycnkKKwkJCQkJCQkgKiBsZXZlbCAqLyAsCisJCSAgICAgICBjYXJyeV9sZXZl
bCAqIHRvZG8vKiBuZXh0IGNhcnJ5IGxldmVsICovKQoreworCXpub2RlICpub2RlOworCWNhcnJ5
X2luc2VydF9kYXRhIGNkYXRhOworCWNvb3JkX3QgZGNvb3JkOworCXJlaXNlcjRfaXRlbV9kYXRh
IGRhdGE7CisJaW50IHJlc3VsdDsKKwlpbnQgcmVhbF9zaXplOworCWl0ZW1fcGx1Z2luICppcGx1
ZzsKKwljYXJyeV9wbHVnaW5faW5mbyBpbmZvOworCWNvb3JkX3QgKmNvb3JkOworCisJYXNzZXJ0
KCJuaWtpdGEtOTgyIiwgb3AgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtOTgzIiwgdG9kbyAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS05ODQiLCBvcC0+b3AgPT0gQ09QX1BBU1RFKTsKKwor
CWNvb3JkX2luaXRfemVybygmZGNvb3JkKTsKKworCXJlc3VsdCA9IGluc2VydF9wYXN0ZV9jb21t
b24ob3AsIGRvaW5nLCB0b2RvLCAmY2RhdGEsICZkY29vcmQsICZkYXRhKTsKKwlpZiAocmVzdWx0
ICE9IDApCisJCXJldHVybiByZXN1bHQ7CisKKwljb29yZCA9IG9wLT51Lmluc2VydC5kLT5jb29y
ZDsKKworCS8qIGhhbmRsZSBjYXNlIHdoZW4gb3AgLT4gdS5pbnNlcnQuY29vcmQgZG9lc24ndCBw
b2ludCB0byB0aGUgaXRlbQorCSAgIG9mIHJlcXVpcmVkIHR5cGUuIHJlc3RhcnQgYXMgaW5zZXJ0
LiAqLworCWlmICghY2FuX3Bhc3RlKGNvb3JkLCBvcC0+dS5pbnNlcnQuZC0+a2V5LCBvcC0+dS5p
bnNlcnQuZC0+ZGF0YSkpIHsKKwkJb3AtPm9wID0gQ09QX0lOU0VSVDsKKwkJb3AtPnUuaW5zZXJ0
LnR5cGUgPSBDT1BUX1BBU1RFX1JFU1RBUlRFRDsKKwkJcmVzdWx0ID0gb3BfZGlzcGF0Y2hfdGFi
bGVbQ09QX0lOU0VSVF0uaGFuZGxlcihvcCwgZG9pbmcsIHRvZG8pOworCisJCXJldHVybiByZXN1
bHQ7CisJfQorCisJbm9kZSA9IGNvb3JkLT5ub2RlOworCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlf
Y29vcmQoY29vcmQpOworCWFzc2VydCgibmlraXRhLTk5MiIsIGlwbHVnICE9IE5VTEwpOworCisJ
YXNzZXJ0KCJuaWtpdGEtOTg1Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS05ODYi
LCBub2RlX3BsdWdpbl9ieV9ub2RlKG5vZGUpICE9IE5VTEwpOworCisJYXNzZXJ0KCJuaWtpdGEt
OTg3IiwKKwkgICAgICAgc3BhY2VfbmVlZGVkX2Zvcl9vcChub2RlLCBvcCkgPD0gem5vZGVfZnJl
ZV9zcGFjZShub2RlKSk7CisKKwlhc3NlcnQoIm5pa2l0YS0xMjg2IiwgY29vcmRfaXNfZXhpc3Rp
bmdfaXRlbShjb29yZCkpOworCisJLyoKKwkgKiBpZiBpdGVtIGlzIGV4cGFuZGVkIGFzIGEgcmVz
dWx0IG9mIHRoaXMgb3BlcmF0aW9uLCB3ZSBzaG91bGQgZmlyc3QKKwkgKiBjaGFuZ2UgaXRlbSBz
aXplLCB0aGFuIGNhbGwgLT5iLnBhc3RlIGl0ZW0gbWV0aG9kLiBJZiBpdGVtIGlzCisJICogc2hy
dW5rLCBpdCBzaG91bGQgYmUgZG9uZSBvdGhlciB3YXkgYXJvdW5kOiBmaXJzdCBjYWxsIC0+Yi5w
YXN0ZQorCSAqIG1ldGhvZCwgdGhlbiByZWR1Y2UgaXRlbSBzaXplLgorCSAqLworCisJcmVhbF9z
aXplID0gc3BhY2VfbmVlZGVkX2Zvcl9vcChub2RlLCBvcCk7CisJaWYgKHJlYWxfc2l6ZSA+IDAp
CisJCW5vZGUtPm5wbHVnLT5jaGFuZ2VfaXRlbV9zaXplKGNvb3JkLCByZWFsX3NpemUpOworCisJ
ZG9pbmctPnJlc3RhcnRhYmxlID0gMDsKKwlpbmZvLmRvaW5nID0gZG9pbmc7CisJaW5mby50b2Rv
ID0gdG9kbzsKKworCXJlc3VsdCA9IGlwbHVnLT5iLnBhc3RlKGNvb3JkLCBvcC0+dS5pbnNlcnQu
ZC0+ZGF0YSwgJmluZm8pOworCisJaWYgKHJlYWxfc2l6ZSA8IDApCisJCW5vZGUtPm5wbHVnLT5j
aGFuZ2VfaXRlbV9zaXplKGNvb3JkLCByZWFsX3NpemUpOworCisJLyogaWYgd2UgcGFzdGVkIGF0
IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGl0ZW0sIHVwZGF0ZSBpdGVtJ3Mga2V5LiAqLworCWlmIChj
b29yZC0+dW5pdF9wb3MgPT0gMCAmJiBjb29yZC0+YmV0d2VlbiAhPSBBRlRFUl9VTklUKQorCQlu
b2RlLT5ucGx1Zy0+dXBkYXRlX2l0ZW1fa2V5KGNvb3JkLCBvcC0+dS5pbnNlcnQuZC0+a2V5LCAm
aW5mbyk7CisKKwl6bm9kZV9tYWtlX2RpcnR5KG5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisK
Ky8qIGhhbmRsZSBjYXJyeSBDT1BfRVhURU5UIG9wZXJhdGlvbi4gKi8KK3N0YXRpYyBpbnQgY2Fy
cnlfZXh0ZW50KGNhcnJ5X29wICogb3AgLyogb3BlcmF0aW9uIHRvIHBlcmZvcm0gKi8gLAorCQkJ
Y2FycnlfbGV2ZWwgKiBkb2luZwkvKiBxdWV1ZSBvZiBvcGVyYXRpb25zIEBvcAorCQkJCQkJICog
aXMgcGFydCBvZiAqLyAsCisJCQljYXJyeV9sZXZlbCAqIHRvZG8JLyogcXVldWUgd2hlcmUgbmV3
IG9wZXJhdGlvbnMKKwkJCQkJCSAqIGFyZSBhY2N1bXVsYXRlZCAqLyApCit7CisJem5vZGUgKm5v
ZGU7CisJY2FycnlfaW5zZXJ0X2RhdGEgY2RhdGE7CisJY29vcmRfdCBjb29yZDsKKwlyZWlzZXI0
X2l0ZW1fZGF0YSBkYXRhOworCWNhcnJ5X29wICpkZWxldGVfZHVtbXk7CisJY2Fycnlfb3AgKmlu
c2VydF9leHRlbnQ7CisJaW50IHJlc3VsdDsKKwljYXJyeV9wbHVnaW5faW5mbyBpbmZvOworCisJ
YXNzZXJ0KCJuaWtpdGEtMTc1MSIsIG9wICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE3NTIi
LCB0b2RvICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE3NTMiLCBvcC0+b3AgPT0gQ09QX0VY
VEVOVCk7CisKKwkvKiBleHRlbnQgaW5zZXJ0aW9uIG92ZXJ2aWV3OgorCisJICAgZXh0ZW50cyBs
aXZlIG9uIHRoZSBUV0lHIExFVkVMLCB3aGljaCBpcyBsZXZlbCBvbmUgYWJvdmUgdGhlIGxlYWYK
KwkgICBvbmUuIFRoaXMgY29tcGxpY2F0ZXMgZXh0ZW50IGluc2VydGlvbiBsb2dpYyBzb21ld2hh
dDogaXQgbWF5CisJICAgaGFwcGVuIChhbmQgZ29pbmcgdG8gaGFwcGVuIGFsbCB0aGUgdGltZSkg
dGhhdCBpbiBsb2dpY2FsIGtleQorCSAgIG9yZGVyaW5nIGV4dGVudCBoYXMgdG8gYmUgcGxhY2Vk
IGJldHdlZW4gaXRlbXMgSTEgYW5kIEkyLCBsb2NhdGVkCisJICAgYXQgdGhlIGxlYWYgbGV2ZWws
IGJ1dCBJMSBhbmQgSTIgYXJlIGluIHRoZSBzYW1lIGZvcm1hdHRlZCBsZWFmCisJICAgbm9kZSBO
MS4gVG8gaW5zZXJ0IGV4dGVudCBvbmUgaGFzIHRvCisKKwkgICAoMSkgcmVhY2ggbm9kZSBOMSBh
bmQgc2hpZnQgZGF0YSBiZXR3ZWVuIE4xLCBpdHMgbmVpZ2hib3JzIGFuZAorCSAgIHBvc3NpYmx5
IG5ld2x5IGFsbG9jYXRlZCBub2RlcyB1bnRpbCBJMSBhbmQgSTIgZmFsbCBpbnRvIGRpZmZlcmVu
dAorCSAgIG5vZGVzLiBTaW5jZSBJMSBhbmQgSTIgYXJlIHN0aWxsIG5laWdoYm9yaW5nIGl0ZW1z
IGluIGxvZ2ljYWwga2V5CisJICAgb3JkZXIsIHRoZXkgd2lsbCBiZSBuZWNlc3NhcnkgdXRtb3N0
IGl0ZW1zIGluIHRoZWlyIHJlc3BlY3RpdmUKKwkgICBub2Rlcy4KKworCSAgICgyKSBBZnRlciB0
aGlzIG5ldyBleHRlbnQgaXRlbSBpcyBpbnNlcnRlZCBpbnRvIG5vZGUgb24gdGhlIHR3aWcKKwkg
ICBsZXZlbC4KKworCSAgIEZvcnR1bmF0ZWx5IHRoaXMgcHJvY2VzcyBjYW4gcmV1c2UgYWxtb3N0
IGFsbCBjb2RlIGZyb20gc3RhbmRhcmQKKwkgICBpbnNlcnRpb24gcHJvY2VkdXJlICh2aXouIG1h
a2Vfc3BhY2UoKSBhbmQgaW5zZXJ0X3Bhc3RlX2NvbW1vbigpKSwKKwkgICBkdWUgdG8gdGhlIGZv
bGxvd2luZyBvYnNlcnZhdGlvbjogbWFrZV9zcGFjZSgpIG9ubHkgc2hpZnRzIGRhdGEgdXAKKwkg
ICB0byBhbmQgZXhjbHVkaW5nIG9yIGluY2x1ZGluZyBpbnNlcnRpb24gcG9pbnQuIEl0IG5ldmVy
CisJICAgIm92ZXItbW92ZXMiIHRocm91Z2ggaW5zZXJ0aW9uIHBvaW50LiBUaHVzLCBvbmUgY2Fu
IHVzZQorCSAgIG1ha2Vfc3BhY2UoKSB0byBwZXJmb3JtIHN0ZXAgKDEpLiBBbGwgcmVxdWlyZWQg
Zm9yIHRoaXMgaXMganVzdCB0bworCSAgIGluc3RydWN0IGZyZWVfc3BhY2Vfc2hvcnRhZ2UoKSB0
byBrZWVwIG1ha2Vfc3BhY2UoKSBzaGlmdGluZyBkYXRhCisJICAgdW50aWwgaW5zZXJ0aW9uIHBv
aW50IGlzIGF0IHRoZSBub2RlIGJvcmRlci4KKworCSAqLworCisJLyogcGVyZm9ybSBjb21tb24g
ZnVuY3Rpb25hbGl0eSBvZiBpbnNlcnQgYW5kIHBhc3RlLiAqLworCXJlc3VsdCA9IGluc2VydF9w
YXN0ZV9jb21tb24ob3AsIGRvaW5nLCB0b2RvLCAmY2RhdGEsICZjb29yZCwgJmRhdGEpOworCWlm
IChyZXN1bHQgIT0gMCkKKwkJcmV0dXJuIHJlc3VsdDsKKworCW5vZGUgPSBvcC0+dS5leHRlbnQu
ZC0+Y29vcmQtPm5vZGU7CisJYXNzZXJ0KCJuaWtpdGEtMTc1NCIsIG5vZGUgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTc1NSIsIG5vZGVfcGx1Z2luX2J5X25vZGUobm9kZSkgIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtMTcwMCIsIGNvb3JkX3dydChvcC0+dS5leHRlbnQuZC0+Y29vcmQp
ICE9IENPT1JEX0lOU0lERSk7CisKKwkvKiBOT1RFLU5JS0lUQSBhZGQgc29tZSBjaGVja3MgaGVy
ZS4gTm90IGFzc2VydGlvbnMsIC1FSU8uIENoZWNrIHRoYXQKKwkgICBleHRlbnQgZml0cyBiZXR3
ZWVuIGl0ZW1zLiAqLworCisJaW5mby5kb2luZyA9IGRvaW5nOworCWluZm8udG9kbyA9IHRvZG87
CisKKwkvKiB0aGVyZSBpcyBhbm90aGVyIGNvbXBsaWNhdGlvbiBkdWUgdG8gcGxhY2VtZW50IG9m
IGV4dGVudHMgb24gdGhlCisJICAgdHdpZyBsZXZlbDogZXh0ZW50cyBhcmUgInJpZ2lkIiBpbiB0
aGUgc2Vuc2UgdGhhdCBrZXktcmFuZ2UKKwkgICBvY2N1cGllZCBieSBleHRlbnQgY2Fubm90IGdy
b3cgaW5kZWZpbml0ZWx5IHRvIHRoZSByaWdodCBhcyBpdCBpcworCSAgIGZvciB0aGUgZm9ybWF0
dGVkIGxlYWYgbm9kZXMuIEJlY2F1c2Ugb2YgdGhpcyB3aGVuIHNlYXJjaCBmaW5kcyB0d28KKwkg
ICBhZGphY2VudCBleHRlbnRzIG9uIHRoZSB0d2lnIGxldmVsLCBpdCBoYXMgdG8gImRyaWxsIiB0
byB0aGUgbGVhZgorCSAgIGxldmVsLCBjcmVhdGluZyBuZXcgbm9kZS4gSGVyZSB3ZSBhcmUgcmVt
b3ZpbmcgdGhpcyBub2RlLgorCSAqLworCWlmIChub2RlX2lzX2VtcHR5KG5vZGUpKSB7CisJCWRl
bGV0ZV9kdW1teSA9IG5vZGVfcG9zdF9jYXJyeSgmaW5mbywgQ09QX0RFTEVURSwgbm9kZSwgMSk7
CisJCWlmIChJU19FUlIoZGVsZXRlX2R1bW15KSkKKwkJCXJldHVybiBQVFJfRVJSKGRlbGV0ZV9k
dW1teSk7CisJCWRlbGV0ZV9kdW1teS0+dS5kZWxldGUuY2hpbGQgPSBOVUxMOworCQlkZWxldGVf
ZHVtbXktPnUuZGVsZXRlLmZsYWdzID0gREVMRVRFX1JFVEFJTl9FTVBUWTsKKwkJWkZfU0VUKG5v
ZGUsIEpOT0RFX0hFQVJEX0JBTlNIRUUpOworCX0KKworCS8qIHByb2NlZWQgd2l0aCBpbnNlcnRp
bmcgZXh0ZW50IGl0ZW0gaW50byBwYXJlbnQuIFdlIGFyZSBkZWZpbml0ZWx5CisJICAgaW5zZXJ0
aW5nIHJhdGhlciB0aGFuIHBhc3RpbmcgaWYgd2UgZ2V0IHRoYXQgZmFyLiAqLworCWluc2VydF9l
eHRlbnQgPSBub2RlX3Bvc3RfY2FycnkoJmluZm8sIENPUF9JTlNFUlQsIG5vZGUsIDEpOworCWlm
IChJU19FUlIoaW5zZXJ0X2V4dGVudCkpCisJCS8qIEBkZWxldGVfZHVtbXkgd2lsbCBiZSBhdXRv
bWF0aWNhbGx5IGRlc3Ryb3llZCBvbiB0aGUgbGV2ZWwKKwkJICAgZXhpdGluZyAgKi8KKwkJcmV0
dXJuIFBUUl9FUlIoaW5zZXJ0X2V4dGVudCk7CisJLyogTk9URS1OSUtJVEEgaW5zZXJ0aW9uIGJ5
IGtleSBpcyBzaW1wbGVzdCBvcHRpb24gaGVyZS4gQW5vdGhlcgorCSAgIHBvc3NpYmlsaXR5IGlz
IHRvIGluc2VydCBvbiB0aGUgbGVmdCBvciByaWdodCBvZiBhbHJlYWR5IGV4aXN0aW5nCisJICAg
aXRlbS4KKwkgKi8KKwlpbnNlcnRfZXh0ZW50LT51Lmluc2VydC50eXBlID0gQ09QVF9LRVk7CisJ
aW5zZXJ0X2V4dGVudC0+dS5pbnNlcnQuZCA9IG9wLT51LmV4dGVudC5kOworCWFzc2VydCgibmlr
aXRhLTE3MTkiLCBvcC0+dS5leHRlbnQuZC0+a2V5ICE9IE5VTEwpOworCWluc2VydF9leHRlbnQt
PnUuaW5zZXJ0LmQtPmRhdGEtPmFyZyA9IG9wLT51LmV4dGVudC5kLT5jb29yZDsKKwlpbnNlcnRf
ZXh0ZW50LT51Lmluc2VydC5mbGFncyA9CisJICAgIHpub2RlX2dldF90cmVlKG5vZGUpLT5jYXJy
eS5uZXdfZXh0ZW50X2ZsYWdzOworCisJLyoKKwkgKiBpZiBjYXJyeSB3YXMgYXNrZWQgdG8gdHJh
Y2sgbG9jayBoYW5kbGUgd2Ugc2hvdWxkIGFjdHVhbGx5IHRyYWNrCisJICogbG9jayBoYW5kbGUg
b24gdGhlIHR3aWcgbm9kZSByYXRoZXIgdGhhbiBvbiB0aGUgbGVhZiB3aGVyZQorCSAqIG9wZXJh
dGlvbiB3YXMgc3RhcnRlZCBmcm9tLiBUcmFuc2ZlciB0cmFja2VkIGxvY2sgaGFuZGxlLgorCSAq
LworCWlmIChkb2luZy0+dHJhY2tfdHlwZSkgeworCQlhc3NlcnQoIm5pa2l0YS0zMjQyIiwgZG9p
bmctPnRyYWNrZWQgIT0gTlVMTCk7CisJCWFzc2VydCgibmlraXRhLTMyNDQiLCB0b2RvLT50cmFj
a2VkID09IE5VTEwpOworCQl0b2RvLT50cmFja2VkID0gZG9pbmctPnRyYWNrZWQ7CisJCXRvZG8t
PnRyYWNrX3R5cGUgPSBDQVJSWV9UUkFDS19OT0RFOworCQlkb2luZy0+dHJhY2tlZCA9IE5VTEw7
CisJCWRvaW5nLT50cmFja190eXBlID0gMDsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworLyogdXBk
YXRlIGtleSBpbiBAcGFyZW50IGJldHdlZW4gcG9pbnRlcnMgdG8gQGxlZnQgYW5kIEByaWdodC4K
KworICAgRmluZCBjb29yZHMgb2YgQGxlZnQgYW5kIEByaWdodCBhbmQgdXBkYXRlIGRlbGltaXRp
bmcga2V5IGJldHdlZW4gdGhlbS4KKyAgIFRoaXMgaXMgaGVscGVyIGZ1bmN0aW9uIGNhbGxlZCBi
eSBjYXJyeV91cGRhdGUoKS4gRmluZHMgcG9zaXRpb24gb2YKKyAgIGludGVybmFsIGl0ZW0gaW52
b2x2ZWQuIFVwZGF0ZXMgaXRlbSBrZXkuIFVwZGF0ZXMgZGVsaW1pdGluZyBrZXlzIG9mIGNoaWxk
CisgICBub2RlcyBpbnZvbHZlZC4KKyovCitzdGF0aWMgaW50IHVwZGF0ZV9kZWxpbWl0aW5nX2tl
eSh6bm9kZSAqIHBhcmVudAkvKiBub2RlIGtleSBpcyB1cGRhdGVkCisJCQkJCQkgKiBpbiAqLyAs
CisJCQkJIHpub2RlICogbGVmdCAvKiBjaGlsZCBvZiBAcGFyZW50ICovICwKKwkJCQkgem5vZGUg
KiByaWdodCAvKiBjaGlsZCBvZiBAcGFyZW50ICovICwKKwkJCQkgY2FycnlfbGV2ZWwgKiBkb2lu
ZwkvKiBjdXJyZW50IGNhcnJ5CisJCQkJCQkJICogbGV2ZWwgKi8gLAorCQkJCSBjYXJyeV9sZXZl
bCAqIHRvZG8JLyogcGFyZW50IGNhcnJ5CisJCQkJCQkJICogbGV2ZWwgKi8gLAorCQkJCSBjb25z
dCBjaGFyICoqZXJyb3JfbXNnCS8qIHBsYWNlIHRvCisJCQkJCQkJICogc3RvcmUgZXJyb3IKKwkJ
CQkJCQkgKiBtZXNzYWdlICovICkKK3sKKwljb29yZF90IGxlZnRfcG9zOworCWNvb3JkX3Qgcmln
aHRfcG9zOworCWludCByZXN1bHQ7CisJcmVpc2VyNF9rZXkgbGRrZXk7CisJY2FycnlfcGx1Z2lu
X2luZm8gaW5mbzsKKworCWFzc2VydCgibmlraXRhLTExNzciLCByaWdodCAhPSBOVUxMKTsKKwkv
KiBmaW5kIHBvc2l0aW9uIG9mIHJpZ2h0IGxlZnQgY2hpbGQgaW4gYSBwYXJlbnQgKi8KKwlyZXN1
bHQgPSBmaW5kX2NoaWxkX3B0cihwYXJlbnQsIHJpZ2h0LCAmcmlnaHRfcG9zKTsKKwlpZiAocmVz
dWx0ICE9IE5TX0ZPVU5EKSB7CisJCSplcnJvcl9tc2cgPSAiQ2Fubm90IGZpbmQgcG9zaXRpb24g
b2YgcmlnaHQgY2hpbGQiOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCWlmICgobGVmdCAhPSBO
VUxMKSAmJiAhY29vcmRfaXNfbGVmdG1vc3RfdW5pdCgmcmlnaHRfcG9zKSkgeworCQkvKiBmaW5k
IHBvc2l0aW9uIG9mIHRoZSBsZWZ0IGNoaWxkIGluIGEgcGFyZW50ICovCisJCXJlc3VsdCA9IGZp
bmRfY2hpbGRfcHRyKHBhcmVudCwgbGVmdCwgJmxlZnRfcG9zKTsKKwkJaWYgKHJlc3VsdCAhPSBO
U19GT1VORCkgeworCQkJKmVycm9yX21zZyA9ICJDYW5ub3QgZmluZCBwb3NpdGlvbiBvZiBsZWZ0
IGNoaWxkIjsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwkJYXNzZXJ0KCJuaWtpdGEtMTM1NSIs
IGxlZnRfcG9zLm5vZGUgIT0gTlVMTCk7CisJfSBlbHNlCisJCWxlZnRfcG9zLm5vZGUgPSBOVUxM
OworCisJLyogY2hlY2sgdGhhdCB0aGV5IGFyZSBzZXBhcmF0ZWQgYnkgZXhhY3RseSBvbmUga2V5
IGFuZCBhcmUgYmFzaWNhbGx5CisJICAgc2FuZSAqLworCWlmIChSRUlTRVI0X0RFQlVHKSB7CisJ
CWlmICgobGVmdF9wb3Mubm9kZSAhPSBOVUxMKQorCQkgICAgJiYgIWNvb3JkX2lzX2V4aXN0aW5n
X3VuaXQoJmxlZnRfcG9zKSkgeworCQkJKmVycm9yX21zZyA9ICJMZWZ0IGNoaWxkIGlzIGJhc3Rh
cmQiOworCQkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwkJfQorCQlpZiAoIWNvb3JkX2lzX2V4aXN0
aW5nX3VuaXQoJnJpZ2h0X3BvcykpIHsKKwkJCSplcnJvcl9tc2cgPSAiUmlnaHQgY2hpbGQgaXMg
YmFzdGFyZCI7CisJCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCQl9CisJCWlmIChsZWZ0X3Bvcy5u
b2RlICE9IE5VTEwgJiYKKwkJICAgICFjb29yZF9hcmVfbmVpZ2hib3JzKCZsZWZ0X3BvcywgJnJp
Z2h0X3BvcykpIHsKKwkJCSplcnJvcl9tc2cgPSAiQ2hpbGRyZW4gYXJlIG5vdCBkaXJlY3Qgc2li
bGluZ3MiOworCQkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwkJfQorCX0KKwkqZXJyb3JfbXNnID0g
TlVMTDsKKworCWluZm8uZG9pbmcgPSBkb2luZzsKKwlpbmZvLnRvZG8gPSB0b2RvOworCisJLyoK
KwkgKiBJZiBjaGlsZCBub2RlIGlzIG5vdCBlbXB0eSwgbmV3IGtleSBvZiBpbnRlcm5hbCBpdGVt
IGlzIGEga2V5IG9mCisJICogbGVmdG1vc3QgaXRlbSBpbiB0aGUgY2hpbGQgbm9kZS4gSWYgdGhl
IGNoaWxkIGlzIGVtcHR5LCB0YWtlIGl0cworCSAqIHJpZ2h0IGRlbGltaXRpbmcga2V5IGFzIGEg
bmV3IGtleSBvZiB0aGUgaW50ZXJuYWwgaXRlbS4gUHJlY2lzZSBrZXkKKwkgKiBpbiB0aGUgbGF0
dGVyIGNhc2UgaXMgbm90IGltcG9ydGFudCBwZXIgc2UsIGJlY2F1c2UgdGhlIGNoaWxkIChhbmQK
KwkgKiB0aGUgaW50ZXJuYWwgaXRlbSkgYXJlIGdvaW5nIHRvIGJlIGtpbGxlZCBzaG9ydGx5IGFu
eXdheSwgYnV0IHdlCisJICogaGF2ZSB0byBwcmVzZXJ2ZSBjb3JyZWN0IG9yZGVyIG9mIGtleXMg
aW4gdGhlIHBhcmVudCBub2RlLgorCSAqLworCisJaWYgKCFaRl9JU1NFVChyaWdodCwgSk5PREVf
SEVBUkRfQkFOU0hFRSkpCisJCWxlZnRtb3N0X2tleV9pbl9ub2RlKHJpZ2h0LCAmbGRrZXkpOwor
CWVsc2UgeworCQlyZWFkX2xvY2tfZGsoem5vZGVfZ2V0X3RyZWUocGFyZW50KSk7CisJCWxka2V5
ID0gKnpub2RlX2dldF9yZF9rZXkocmlnaHQpOworCQlyZWFkX3VubG9ja19kayh6bm9kZV9nZXRf
dHJlZShwYXJlbnQpKTsKKwl9CisJbm9kZV9wbHVnaW5fYnlfbm9kZShwYXJlbnQpLT51cGRhdGVf
aXRlbV9rZXkoJnJpZ2h0X3BvcywgJmxka2V5LCAmaW5mbyk7CisJZG9pbmctPnJlc3RhcnRhYmxl
ID0gMDsKKwl6bm9kZV9tYWtlX2RpcnR5KHBhcmVudCk7CisJcmV0dXJuIDA7Cit9CisKKy8qIGlt
cGxlbWVudHMgQ09QX1VQREFURSBvcHJhdGlvbgorCisgICBVcGRhdGUgZGVsaW1pdGluZyBrZXlz
LgorCisqLworc3RhdGljIGludCBjYXJyeV91cGRhdGUoY2Fycnlfb3AgKiBvcCAvKiBvcGVyYXRp
b24gdG8gYmUgcGVyZm9ybWVkICovICwKKwkJCWNhcnJ5X2xldmVsICogZG9pbmcgLyogY3VycmVu
dCBjYXJyeSBsZXZlbCAqLyAsCisJCQljYXJyeV9sZXZlbCAqIHRvZG8vKiBuZXh0IGNhcnJ5IGxl
dmVsICovKQoreworCWludCByZXN1bHQ7CisJY2Fycnlfbm9kZSAqbWlzc2luZyBVTlVTRURfQVJH
OworCXpub2RlICpsZWZ0OworCXpub2RlICpyaWdodDsKKwljYXJyeV9ub2RlICpsY2hpbGQ7CisJ
Y2Fycnlfbm9kZSAqcmNoaWxkOworCWNvbnN0IGNoYXIgKmVycm9yX21zZzsKKwlyZWlzZXI0X3Ry
ZWUgKnRyZWU7CisKKwkvKgorCSAqIFRoaXMgb3BlcmF0aW9uIGlzIGNhbGxlZCB0byB1cGRhdGUg
a2V5IG9mIGludGVybmFsIGl0ZW0uIFRoaXMgaXMKKwkgKiBuZWNlc3Nhcnkgd2hlbiBjYXJyeSBz
aGlmdGVkIG9mIGN1dCBkYXRhIG9uIHRoZSBjaGlsZAorCSAqIGxldmVsLiBBcmd1bWVudHMgb2Yg
dGhpcyBvcGVyYXRpb24gYXJlOgorCSAqCisJICogICAgIEByaWdodCAtLS0gY2hpbGQgbm9kZS4g
T3BlcmF0aW9uIHNob3VsZCB1cGRhdGUga2V5IG9mIGludGVybmFsCisJICogICAgIGl0ZW0gcG9p
bnRpbmcgdG8gQHJpZ2h0LgorCSAqCisJICogICAgIEBsZWZ0IC0tLSBsZWZ0IG5laWdoYm9yIG9m
IEByaWdodC4gVGhpcyBwYXJhbWV0ZXIgaXMgb3B0aW9uYWwuCisJICovCisKKwlhc3NlcnQoIm5p
a2l0YS05MDIiLCBvcCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS05MDMiLCB0b2RvICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTkwNCIsIG9wLT5vcCA9PSBDT1BfVVBEQVRFKTsKKworCWxj
aGlsZCA9IG9wLT51LnVwZGF0ZS5sZWZ0OworCXJjaGlsZCA9IG9wLT5ub2RlOworCisJaWYgKGxj
aGlsZCAhPSBOVUxMKSB7CisJCWFzc2VydCgibmlraXRhLTEwMDEiLCBsY2hpbGQtPnBhcmVudCk7
CisJCWFzc2VydCgibmlraXRhLTEwMDMiLCAhbGNoaWxkLT5sZWZ0KTsKKwkJbGVmdCA9IHJlaXNl
cjRfY2FycnlfcmVhbChsY2hpbGQpOworCX0gZWxzZQorCQlsZWZ0ID0gTlVMTDsKKworCXRyZWUg
PSB6bm9kZV9nZXRfdHJlZShyY2hpbGQtPm5vZGUpOworCXJlYWRfbG9ja190cmVlKHRyZWUpOwor
CXJpZ2h0ID0gem5vZGVfcGFyZW50KHJjaGlsZC0+bm9kZSk7CisJcmVhZF91bmxvY2tfdHJlZSh0
cmVlKTsKKworCWlmIChyaWdodCAhPSBOVUxMKSB7CisJCXJlc3VsdCA9IHVwZGF0ZV9kZWxpbWl0
aW5nX2tleShyaWdodCwKKwkJCQkJICAgICAgIGxjaGlsZCA/IGxjaGlsZC0+bm9kZSA6IE5VTEws
CisJCQkJCSAgICAgICByY2hpbGQtPm5vZGUsCisJCQkJCSAgICAgICBkb2luZywgdG9kbywgJmVy
cm9yX21zZyk7CisJfSBlbHNlIHsKKwkJZXJyb3JfbXNnID0gIkNhbm5vdCBmaW5kIG5vZGUgdG8g
dXBkYXRlIGtleSBpbiI7CisJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwl9CisJLyogb3BlcmF0
aW9uIHdpbGwgYmUgcmVwb3N0ZWQgdG8gdGhlIG5leHQgbGV2ZWwgYnkgdGhlCisJICAgLT51cGRh
dGVfaXRlbV9rZXkoKSBtZXRob2Qgb2Ygbm9kZSBwbHVnaW4sIGlmIG5lY2Vzc2FyeS4gKi8KKwor
CWlmIChyZXN1bHQgIT0gMCkgeworCQl3YXJuaW5nKCJuaWtpdGEtOTk5IiwgIkVycm9yIHVwZGF0
aW5nIGRlbGltaXRpbmcga2V5OiAlcyAoJWkpIiwKKwkJCWVycm9yX21zZyA/IDogIiIsIHJlc3Vs
dCk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIG1vdmUgaXRlbXMgZnJvbSBAbm9kZSBk
dXJpbmcgY2FycnkgKi8KK3N0YXRpYyBpbnQgY2Fycnlfc2hpZnRfZGF0YShzaWRlb2Ygc2lkZSAv
KiBpbiB3aGF0IGRpcmVjdGlvbiB0byBtb3ZlIGRhdGEgKi8gLAorCQkJICAgIGNvb3JkX3QgKmlu
c2VydF9jb29yZAkvKiBjb29yZCB3aGVyZSBuZXcgaXRlbQorCQkJCQkJCSAqIGlzIHRvIGJlIGlu
c2VydGVkICovLAorCQkJICAgIHpub2RlICogbm9kZSAvKiBub2RlIHdoaWNoIGRhdGEgYXJlIG1v
dmVkIGZyb20gKi8gLAorCQkJICAgIGNhcnJ5X2xldmVsICogZG9pbmcgLyogYWN0aXZlIGNhcnJ5
IHF1ZXVlICovICwKKwkJCSAgICBjYXJyeV9sZXZlbCAqIHRvZG8JLyogY2FycnkgcXVldWUgd2hl
cmUgbmV3CisJCQkJCQkgKiBvcGVyYXRpb25zIGFyZSB0byBiZSBwdXQKKwkJCQkJCSAqIGluICov
ICwKKwkJCSAgICB1bnNpZ25lZCBpbnQgaW5jbHVkaW5nX2luc2VydF9jb29yZF9wCisJCQkJLyog
dHJ1ZSBpZiBAaW5zZXJ0aW9uX2Nvb3JkIGNhbiBiZSBtb3ZlZCAqLyApCit7CisJaW50IHJlc3Vs
dDsKKwl6bm9kZSAqc291cmNlOworCWNhcnJ5X3BsdWdpbl9pbmZvIGluZm87CisJbm9kZV9wbHVn
aW4gKm5wbHVnOworCisJc291cmNlID0gaW5zZXJ0X2Nvb3JkLT5ub2RlOworCisJaW5mby5kb2lu
ZyA9IGRvaW5nOworCWluZm8udG9kbyA9IHRvZG87CisKKwlucGx1ZyA9IG5vZGVfcGx1Z2luX2J5
X25vZGUobm9kZSk7CisJcmVzdWx0ID0gbnBsdWctPnNoaWZ0KGluc2VydF9jb29yZCwgbm9kZSwK
KwkJCSAgICAgIChzaWRlID09IExFRlRfU0lERSkgPyBTSElGVF9MRUZUIDogU0hJRlRfUklHSFQs
IDAsCisJCQkgICAgICAoaW50KWluY2x1ZGluZ19pbnNlcnRfY29vcmRfcCwgJmluZm8pOworCS8q
IHRoZSBvbmx5IGVycm9yIC0+c2hpZnQoKSBtZXRob2Qgb2Ygbm9kZSBwbHVnaW4gY2FuIHJldHVy
biBpcworCSAgIC1FTk9NRU0gZHVlIHRvIGNhcnJ5IG5vZGUvb3BlcmF0aW9uIGFsbG9jYXRpb24u
ICovCisJYXNzZXJ0KCJuaWtpdGEtOTE1IiwgcmVzdWx0ID49IDAgfHwgcmVzdWx0ID09IC1FTk9N
RU0pOworCWlmIChyZXN1bHQgPiAwKSB7CisJCS8qCisJCSAqIGlmIHNvbWUgbnVtYmVyIG9mIGJ5
dGVzIHdhcyBhY3R1YWxseSBzaGlmdGVkLCBtYXJrIG5vZGVzCisJCSAqIGRpcnR5LCBhbmQgY2Fy
cnkgbGV2ZWwgYXMgbm9uLXJlc3RhcnRhYmxlLgorCQkgKi8KKwkJZG9pbmctPnJlc3RhcnRhYmxl
ID0gMDsKKwkJem5vZGVfbWFrZV9kaXJ0eShzb3VyY2UpOworCQl6bm9kZV9tYWtlX2RpcnR5KG5v
ZGUpOworCX0KKworCWFzc2VydCgibmlraXRhLTIwNzciLCBjb29yZF9jaGVjayhpbnNlcnRfY29v
cmQpKTsKKwlyZXR1cm4gMDsKK30KKwordHlwZWRlZiBjYXJyeV9ub2RlICooKmNhcnJ5X2l0ZXJh
dG9yKSAoY2Fycnlfbm9kZSAqIG5vZGUpOworc3RhdGljIGNhcnJ5X25vZGUgKmZpbmRfZGlyX2Nh
cnJ5KGNhcnJ5X25vZGUgKiBub2RlLCBjYXJyeV9sZXZlbCAqIGxldmVsLAorCQkJCSAgY2Fycnlf
aXRlcmF0b3IgaXRlcmF0b3IpOworCitzdGF0aWMgY2Fycnlfbm9kZSAqcG9vbF9sZXZlbF9saXN0
X3ByZXYoY2Fycnlfbm9kZSAqbm9kZSkKK3sKKwlyZXR1cm4gbGlzdF9lbnRyeShub2RlLT5oZWFk
ZXIubGV2ZWxfbGlua2FnZS5wcmV2LCBjYXJyeV9ub2RlLCBoZWFkZXIubGV2ZWxfbGlua2FnZSk7
Cit9CisKKy8qIGxvb2sgZm9yIHRoZSBsZWZ0IG5laWdoYm9yIG9mIGdpdmVuIGNhcnJ5IG5vZGUg
aW4gYSBjYXJyeSBxdWV1ZS4KKworICAgVGhpcyBpcyB1c2VkIGJ5IGZpbmRfbGVmdF9uZWlnaGJv
cigpLCBidXQgSSBhbSBub3Qgc3VyZSB0aGF0IHRoaXMKKyAgIHJlYWxseSBnaXZlcyBhbnkgYWR2
YW50YWdlLiBNb3JlIHN0YXRpc3RpY3MgcmVxdWlyZWQuCisKKyovCitjYXJyeV9ub2RlICpmaW5k
X2xlZnRfY2FycnkoY2Fycnlfbm9kZSAqIG5vZGUJLyogbm9kZSB0byBmaW5kIGxlZnQgbmVpZ2hi
b3IKKwkJCQkJCSAqIG9mICovICwKKwkJCSAgICBjYXJyeV9sZXZlbCAqIGxldmVsLyogbGV2ZWwg
dG8gc2NhbiAqLykKK3sKKwlyZXR1cm4gZmluZF9kaXJfY2Fycnkobm9kZSwgbGV2ZWwsCisJCQkg
ICAgICAoY2FycnlfaXRlcmF0b3IpIHBvb2xfbGV2ZWxfbGlzdF9wcmV2KTsKK30KKworc3RhdGlj
IGNhcnJ5X25vZGUgKnBvb2xfbGV2ZWxfbGlzdF9uZXh0KGNhcnJ5X25vZGUgKm5vZGUpCit7CisJ
cmV0dXJuIGxpc3RfZW50cnkobm9kZS0+aGVhZGVyLmxldmVsX2xpbmthZ2UubmV4dCwgY2Fycnlf
bm9kZSwgaGVhZGVyLmxldmVsX2xpbmthZ2UpOworfQorCisvKiBsb29rIGZvciB0aGUgcmlnaHQg
bmVpZ2hib3Igb2YgZ2l2ZW4gY2Fycnkgbm9kZSBpbiBhCisgICBjYXJyeSBxdWV1ZS4KKworICAg
VGhpcyBpcyB1c2VkIGJ5IGZpbmRfcmlnaHRfbmVpZ2hib3IoKSwgYnV0IEkgYW0gbm90IHN1cmUg
dGhhdCB0aGlzCisgICByZWFsbHkgZ2l2ZXMgYW55IGFkdmFudGFnZS4gTW9yZSBzdGF0aXN0aWNz
IHJlcXVpcmVkLgorCisqLworY2Fycnlfbm9kZSAqZmluZF9yaWdodF9jYXJyeShjYXJyeV9ub2Rl
ICogbm9kZQkvKiBub2RlIHRvIGZpbmQgcmlnaHQgbmVpZ2hib3IKKwkJCQkJCSAqIG9mICovICwK
KwkJCSAgICAgY2FycnlfbGV2ZWwgKiBsZXZlbC8qIGxldmVsIHRvIHNjYW4gKi8pCit7CisJcmV0
dXJuIGZpbmRfZGlyX2NhcnJ5KG5vZGUsIGxldmVsLAorCQkJICAgICAgKGNhcnJ5X2l0ZXJhdG9y
KSBwb29sX2xldmVsX2xpc3RfbmV4dCk7Cit9CisKKy8qIGxvb2sgZm9yIHRoZSBsZWZ0IG9yIHJp
Z2h0IG5laWdoYm9yIG9mIGdpdmVuIGNhcnJ5IG5vZGUgaW4gYSBjYXJyeQorICAgcXVldWUuCisK
KyAgIEhlbHBlciBmdW5jdGlvbiB1c2VkIGJ5IGZpbmRfe2xlZnR8cmlnaHR9X2NhcnJ5KCkuCisq
Lworc3RhdGljIGNhcnJ5X25vZGUgKmZpbmRfZGlyX2NhcnJ5KGNhcnJ5X25vZGUgKiBub2RlCS8q
IG5vZGUgdG8gc3RhcnQKKwkJCQkJCQkgKiBzY2FubmluZyBmcm9tICovICwKKwkJCQkgIGNhcnJ5
X2xldmVsICogbGV2ZWwgLyogbGV2ZWwgdG8gc2NhbiAqLyAsCisJCQkJICBjYXJyeV9pdGVyYXRv
ciBpdGVyYXRvcgkvKiBvcGVyYXRpb24gdG8KKwkJCQkJCQkJICogbW92ZSB0byB0aGUKKwkJCQkJ
CQkJICogbmV4dCBub2RlICovKQoreworCWNhcnJ5X25vZGUgKm5laWdoYm9yOworCisJYXNzZXJ0
KCJuaWtpdGEtMTA1OSIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTA2MCIsIGxl
dmVsICE9IE5VTEwpOworCisJLyogc2NhbiBsaXN0IG9mIGNhcnJ5IG5vZGVzIG9uIHRoaXMgbGlz
dCBkaXItd2FyZCwgc2tpcHBpbmcgYWxsCisJICAgY2Fycnkgbm9kZXMgcmVmZXJlbmNpbmcgdGhl
IHNhbWUgem5vZGUuICovCisJbmVpZ2hib3IgPSBub2RlOworCXdoaWxlICgxKSB7CisJCW5laWdo
Ym9yID0gaXRlcmF0b3IobmVpZ2hib3IpOworCQlpZiAoY2Fycnlfbm9kZV9lbmQobGV2ZWwsIG5l
aWdoYm9yKSkKKwkJCS8qIGxpc3QgaGVhZCBpcyByZWFjaGVkICovCisJCQlyZXR1cm4gTlVMTDsK
KwkJaWYgKHJlaXNlcjRfY2FycnlfcmVhbChuZWlnaGJvcikgIT0gcmVpc2VyNF9jYXJyeV9yZWFs
KG5vZGUpKQorCQkJcmV0dXJuIG5laWdoYm9yOworCX0KK30KKworLyoKKyAqIE1lbW9yeSByZXNl
cnZhdGlvbiBlc3RpbWF0aW9uLgorICoKKyAqIENhcnJ5IHByb2Nlc3MgcHJvY2VlZHMgdGhyb3Vn
aCB0cmVlIGxldmVscyB1cHdhcmRzLiBDYXJyeSBhc3N1bWVzIHRoYXQgaXQKKyAqIHRha2VzIHRy
ZWUgaW4gY29uc2lzdGVudCBzdGF0ZSAoZS5nLiwgdGhhdCBzZWFyY2ggdHJlZSBpbnZhcmlhbnRz
IGhvbGQpLAorICogYW5kIGxlYXZlcyB0cmVlIGNvbnNpc3RlbnQgYWZ0ZXIgaXQgZmluaXNoZXMu
IFRoaXMgbWVhbnMgdGhhdCB3aGVuIHNvbWUKKyAqIGVycm9yIG9jY3VycyBjYXJyeSBjYW5ub3Qg
c2ltcGx5IHJldHVybiBpZiB0aGVyZSBhcmUgcGVuZGluZyBjYXJyeQorICogb3BlcmF0aW9ucy4g
R2VuZXJpYyBzb2x1dGlvbiBmb3IgdGhpcyBwcm9ibGVtIGlzIGNhcnJ5LXVuZG8gZWl0aGVyIGFz
CisgKiB0cmFuc2FjdGlvbiBtYW5hZ2VyIGZlYXR1cmUgKHJlcXVpcmluZyBjaGVja3BvaW50cyBh
bmQgaXNvbGF0aW9uKSwgb3IKKyAqIHRocm91Z2ggc29tZSBjYXJyeSBzcGVjaWZpYyBtZWNoYW5p
c20uCisgKgorICogT3VyIGN1cnJlbnQgYXBwcm9hY2ggaXMgdG8gcGFuaWMgaWYgY2FycnkgaGl0
cyBhbiBlcnJvciB3aGlsZSB0cmVlIGlzCisgKiBpbmNvbnNpc3RlbnQuIFVuZm9ydHVuYXRlbHkg
LUVOT01FTSBjYW4gZWFzaWx5IGJlIHRyaWdnZXJlZC4gVG8gd29yayBhcm91bmQKKyAqIHRoaXMg
Im1lbW9yeSByZXNlcnZhdGlvbiIgbWVjaGFuaXNtIHdhcyBhZGRlZC4KKyAqCisgKiBNZW1vcnkg
cmVzZXJ2YXRpb24gaXMgaW1wbGVtZW50ZWQgYnkgcGVydGhyZWFkLXBhZ2VzLmRpZmYgcGF0Y2gg
ZnJvbQorICogY29yZS1wYXRjaGVzLiBJdHMgQVBJIGlzIGRlZmluZWQgaW4gPGxpbnV4L2dmcC5o
PgorICoKKyAqICAgICBpbnQgIHBlcnRocmVhZF9wYWdlc19yZXNlcnZlKGludCBucnBhZ2VzLCBn
ZnBfdCBnZnApOworICogICAgIHZvaWQgcGVydGhyZWFkX3BhZ2VzX3JlbGVhc2UoaW50IG5ycGFn
ZXMpOworICogICAgIGludCAgcGVydGhyZWFkX3BhZ2VzX2NvdW50KHZvaWQpOworICoKKyAqIGNh
cnJ5IGVzdGltYXRlcyBpdHMgd29yc3QgY2FzZSBtZW1vcnkgcmVxdWlyZW1lbnRzIGF0IHRoZSBl
bnRyeSwgcmVzZXJ2ZWQKKyAqIGVub3VnaCBtZW1vcnksIGFuZCByZWxlYXNlZCB1bnVzZWQgcGFn
ZXMgYmVmb3JlIHJldHVybmluZy4KKyAqCisgKiBDb2RlIGJlbG93IGVzdGltYXRlcyB3b3JzdCBj
YXNlIG1lbW9yeSByZXF1aXJlbWVudHMgZm9yIGEgZ2l2ZW4gY2FycnkKKyAqIHF1ZXVlLiBUaGlz
IGlzIGRvbWUgYnkgc3VtbWluZyB3b3JzdCBjYXNlIG1lbW9yeSByZXF1aXJlbWVudHMgZm9yIGVh
Y2gKKyAqIG9wZXJhdGlvbiBpbiB0aGUgcXVldWUuCisgKgorICovCisKKy8qCisgKiBNZW1vcnkg
bWVtb3J5IHJlcXVpcmVtZW50cyBvZiBtYW55IG9wZXJhdGlvbnMgZGVwZW5kcyBvbiB0aGUgdHJl
ZQorICogaGVpZ2h0LiBGb3IgZXhhbXBsZSwgaXRlbSBpbnNlcnRpb24gcmVxdWlyZXMgbmV3IG5v
ZGUgdG8gYmUgaW5zZXJ0ZWQgYXQKKyAqIGVhY2ggdHJlZSBsZXZlbCBpbiB0aGUgd29yc3QgY2Fz
ZS4gV2hhdCB0cmVlIGhlaWdodCBzaG91bGQgYmUgdXNlZCBmb3IKKyAqIGVzdGltYXRpb24/IEN1
cnJlbnQgdHJlZSBoZWlnaHQgaXMgd3JvbmcsIGJlY2F1c2UgdHJlZSBoZWlnaHQgY2FuIGNoYW5n
ZQorICogYmV0d2VlbiB0aGUgdGltZSB3aGVuIGVzdGltYXRpb24gd2FzIGRvbmUgYW5kIHRoZSB0
aW1lIHdoZW4gb3BlcmF0aW9uIGlzCisgKiBhY3R1YWxseSBwZXJmb3JtZWQuIE1heGltYWwgcG9z
c2libGUgdHJlZSBoZWlnaHQgKFJFSVNFUjRfTUFYX1pUUkVFX0hFSUdIVCkKKyAqIGlzIGFsc28g
bm90IGRlc2lyYWJsZSwgYmVjYXVzZSBpdCB3b3VsZCBsZWFkIHRvIHRoZSBodWdlIG92ZXItZXN0
aW1hdGlvbgorICogYWxsIHRoZSB0aW1lLiBQbGF1c2libGUgc29sdXRpb24gaXMgImNhcHBlZCB0
cmVlIGhlaWdodCI6IGlmIGN1cnJlbnQgdHJlZQorICogaGVpZ2h0IGlzIGxlc3MgdGhhbiBzb21l
IFRSRUVfSEVJR0hUX0NBUCBjb25zdGFudCwgY2FwcGVkIHRyZWUgaGVpZ2h0IGlzCisgKiBUUkVF
X0hFSUdIVF9DQVAsIG90aGVyd2lzZSBpdCdzIGN1cnJlbnQgdHJlZSBoZWlnaHQuIElkZWEgYmVo
aW5kIHRoaXMgaXMKKyAqIHRoYXQgaWYgdHJlZSBoZWlnaHQgaXMgVFJFRV9IRUlHSFRfQ0FQIG9y
IGxhcmdlciwgaXQncyBleHRyZW1lbHkgdW5saWtlbHkKKyAqIHRvIGJlIGluY3JlYXNlZCBldmVu
IG1vcmUgZHVyaW5nIHNob3J0IGludGVydmFsIG9mIHRpbWUuCisgKi8KKyNkZWZpbmUgVFJFRV9I
RUlHSFRfQ0FQICg1KQorCisvKiByZXR1cm4gY2FwcGVkIHRyZWUgaGVpZ2h0IGZvciB0aGUgQHRy
ZWUuIFNlZSBjb21tZW50IGFib3ZlLiAqLworc3RhdGljIGludCBjYXBfdHJlZV9oZWlnaHQocmVp
c2VyNF90cmVlICogdHJlZSkKK3sKKwlyZXR1cm4gbWF4X3QoaW50LCB0cmVlLT5oZWlnaHQsIFRS
RUVfSEVJR0hUX0NBUCk7Cit9CisKKy8qIHJldHVybiBjYXBwZWQgdHJlZSBoZWlnaHQgZm9yIHRo
ZSBjdXJyZW50IHRyZWUuICovCitzdGF0aWMgaW50IGNhcHBlZF9oZWlnaHQodm9pZCkKK3sKKwly
ZXR1cm4gY2FwX3RyZWVfaGVpZ2h0KGN1cnJlbnRfdHJlZSk7Cit9CisKKy8qIHJldHVybiBudW1i
ZXIgb2YgcGFnZXMgcmVxdWlyZWQgdG8gc3RvcmUgZ2l2ZW4gbnVtYmVyIG9mIGJ5dGVzICovCitz
dGF0aWMgaW50IGJ5dGVzX3RvX3BhZ2VzKGludCBieXRlcykKK3sKKwlyZXR1cm4gKGJ5dGVzICsg
UEFHRV9TSVpFIC0gMSkgPj4gUEFHRV9TSElGVDsKK30KKworLyogaG93IG1hbnkgcGFnZXMgYXJl
IHJlcXVpcmVkIHRvIGFsbG9jYXRlIHpub2RlcyBkdXJpbmcgaXRlbSBpbnNlcnRpb24uICovCitz
dGF0aWMgaW50IGNhcnJ5X2VzdGltYXRlX3pub2Rlcyh2b2lkKQoreworCS8qCisJICogTm90ZSwg
dGhhdCB0aGVyZSB3ZSBoYXZlIHNvbWUgcHJvYmxlbSBoZXJlOiB0aGVyZSBpcyBubyB3YXkgdG8K
KwkgKiByZXNlcnZlIHBhZ2VzIHNwZWNpZmljYWxseSBmb3IgdGhlIGdpdmVuIHNsYWIuIFRoaXMg
bWVhbnMgdGhhdAorCSAqIHRoZXNlIHBhZ2VzIGNhbiBiZSBoaWphY2tlZCBmb3Igc29tZSBvdGhl
ciBlbmQuCisJICovCisKKwkvKiBpbiB0aGUgd29yc3QgY2FzZSB3ZSBuZWVkIDMgbmV3IHpub2Rl
IG9uIGVhY2ggdHJlZSBsZXZlbCAqLworCXJldHVybiBieXRlc190b19wYWdlcyhjYXBwZWRfaGVp
Z2h0KCkgKiBzaXplb2Yoem5vZGUpICogMyk7Cit9CisKKy8qCisgKiBob3cgbWFueSBwYWdlcyBh
cmUgcmVxdWlyZWQgdG8gbG9hZCBiaXRtYXBzLiBPbmUgYml0bWFwIHBlciBsZXZlbC4KKyAqLwor
c3RhdGljIGludCBjYXJyeV9lc3RpbWF0ZV9iaXRtYXBzKHZvaWQpCit7CisJaWYgKHJlaXNlcjRf
aXNfc2V0KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSwgUkVJU0VSNF9ET05UX0xPQURfQklUTUFQ
KSkgeworCQlpbnQgYnl0ZXM7CisKKwkJYnl0ZXMgPSBjYXBwZWRfaGVpZ2h0KCkgKiAoMCArCS8q
IGJub2RlIHNob3VsZCBiZSBhZGRlZCwgYnV0CisJCQkJCQkgKiBpdCBpcyBwcml2YXRlIHRvIGJp
dG1hcC5jLAorCQkJCQkJICogc2tpcCBmb3Igbm93LiAqLworCQkJCQkgICAyICogc2l6ZW9mKGpu
b2RlKSk7CisJCQkJCQkvKiB3b3JraW5nIGFuZCBjb21taXQgam5vZGVzICovCisJCXJldHVybiBi
eXRlc190b19wYWdlcyhieXRlcykgKyAyOwkvKiBhbmQgdGhlaXIgY29udGVudHMgKi8KKwl9IGVs
c2UKKwkJLyogYml0bWFwcyB3ZXJlIHByZS1sb2FkZWQgZHVyaW5nIG1vdW50ICovCisJCXJldHVy
biAwOworfQorCisvKiB3b3JzdCBjYXNlIGl0ZW0gaW5zZXJ0aW9uIG1lbW9yeSByZXF1aXJlbWVu
dHMgKi8KK3N0YXRpYyBpbnQgY2FycnlfZXN0aW1hdGVfaW5zZXJ0KGNhcnJ5X29wICogb3AsIGNh
cnJ5X2xldmVsICogbGV2ZWwpCit7CisJcmV0dXJuIGNhcnJ5X2VzdGltYXRlX2JpdG1hcHMoKSAr
IGNhcnJ5X2VzdGltYXRlX3pub2RlcygpICsgMSArCisJCQkJCQkJCS8qIG5ldyBhdG9tICovCisJ
ICAgIGNhcHBlZF9oZWlnaHQoKSArCS8qIG5ldyBibG9jayBvbiBlYWNoIGxldmVsICovCisJICAg
IDEgKwkJLyogYW5kIHBvc3NpYmx5IGV4dHJhIG5ldyBibG9jayBhdCB0aGUgbGVhZiBsZXZlbCAq
LworCSAgICAzOwkJCS8qIGxvYWRpbmcgb2YgbGVhdmVzIGludG8gbWVtb3J5ICovCit9CisKKy8q
IHdvcnN0IGNhc2UgaXRlbSBkZWxldGlvbiBtZW1vcnkgcmVxdWlyZW1lbnRzICovCitzdGF0aWMg
aW50IGNhcnJ5X2VzdGltYXRlX2RlbGV0ZShjYXJyeV9vcCAqIG9wLCBjYXJyeV9sZXZlbCAqIGxl
dmVsKQoreworCXJldHVybiBjYXJyeV9lc3RpbWF0ZV9iaXRtYXBzKCkgKyBjYXJyeV9lc3RpbWF0
ZV96bm9kZXMoKSArIDEgKworCQkJCQkJCQkvKiBuZXcgYXRvbSAqLworCSAgICAzOwkJCS8qIGxv
YWRpbmcgb2YgbGVhdmVzIGludG8gbWVtb3J5ICovCit9CisKKy8qIHdvcnN0IGNhc2UgdHJlZSBj
dXQgbWVtb3J5IHJlcXVpcmVtZW50cyAqLworc3RhdGljIGludCBjYXJyeV9lc3RpbWF0ZV9jdXQo
Y2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwgKiBsZXZlbCkKK3sKKwlyZXR1cm4gY2FycnlfZXN0
aW1hdGVfYml0bWFwcygpICsgY2FycnlfZXN0aW1hdGVfem5vZGVzKCkgKyAxICsKKwkJCQkJCQkJ
LyogbmV3IGF0b20gKi8KKwkgICAgMzsJCQkvKiBsb2FkaW5nIG9mIGxlYXZlcyBpbnRvIG1lbW9y
eSAqLworfQorCisvKiB3b3JzdCBjYXNlIG1lbW9yeSByZXF1aXJlbWVudHMgb2YgcGFzdGluZyBp
bnRvIGl0ZW0gKi8KK3N0YXRpYyBpbnQgY2FycnlfZXN0aW1hdGVfcGFzdGUoY2Fycnlfb3AgKiBv
cCwgY2FycnlfbGV2ZWwgKiBsZXZlbCkKK3sKKwlyZXR1cm4gY2FycnlfZXN0aW1hdGVfYml0bWFw
cygpICsgY2FycnlfZXN0aW1hdGVfem5vZGVzKCkgKyAxICsKKwkJCQkJCQkJLyogbmV3IGF0b20g
Ki8KKwkgICAgY2FwcGVkX2hlaWdodCgpICsJLyogbmV3IGJsb2NrIG9uIGVhY2ggbGV2ZWwgKi8K
KwkgICAgMSArCQkvKiBhbmQgcG9zc2libHkgZXh0cmEgbmV3IGJsb2NrIGF0IHRoZSBsZWFmIGxl
dmVsICovCisJICAgIDM7CQkJLyogbG9hZGluZyBvZiBsZWF2ZXMgaW50byBtZW1vcnkgKi8KK30K
KworLyogd29yc3QgY2FzZSBtZW1vcnkgcmVxdWlyZW1lbnRzIG9mIGV4dGVudCBpbnNlcnRpb24g
Ki8KK3N0YXRpYyBpbnQgY2FycnlfZXN0aW1hdGVfZXh0ZW50KGNhcnJ5X29wICogb3AsIGNhcnJ5
X2xldmVsICogbGV2ZWwpCit7CisJcmV0dXJuIGNhcnJ5X2VzdGltYXRlX2luc2VydChvcCwgbGV2
ZWwpICsJLyogaW5zZXJ0IGV4dGVudCAqLworCSAgICBjYXJyeV9lc3RpbWF0ZV9kZWxldGUob3As
IGxldmVsKTsJLyoga2lsbCBsZWFmICovCit9CisKKy8qIHdvcnN0IGNhc2UgbWVtb3J5IHJlcXVp
cmVtZW50cyBvZiBrZXkgdXBkYXRlICovCitzdGF0aWMgaW50IGNhcnJ5X2VzdGltYXRlX3VwZGF0
ZShjYXJyeV9vcCAqIG9wLCBjYXJyeV9sZXZlbCAqIGxldmVsKQoreworCXJldHVybiAwOworfQor
CisvKiB3b3JzdCBjYXNlIG1lbW9yeSByZXF1aXJlbWVudHMgb2YgZmxvdyBpbnNlcnRpb24gKi8K
K3N0YXRpYyBpbnQgY2FycnlfZXN0aW1hdGVfaW5zZXJ0X2Zsb3coY2Fycnlfb3AgKiBvcCwgY2Fy
cnlfbGV2ZWwgKiBsZXZlbCkKK3sKKwlpbnQgbmV3bm9kZXM7CisKKwluZXdub2RlcyA9IG1pbihi
eXRlc190b19wYWdlcyhvcC0+dS5pbnNlcnRfZmxvdy5mbG93LT5sZW5ndGgpLAorCQkgICAgICAg
Q0FSUllfRkxPV19ORVdfTk9ERVNfTElNSVQpOworCS8qCisJICogcm91Z2hseSBlc3RpbWF0ZSBp
bnNlcnRfZmxvdyBhcyBhIHNlcXVlbmNlIG9mIGluc2VydGlvbnMuCisJICovCisJcmV0dXJuIG5l
d25vZGVzICogY2FycnlfZXN0aW1hdGVfaW5zZXJ0KG9wLCBsZXZlbCk7Cit9CisKKy8qIFRoaXMg
aXMgZGlzcGF0Y2ggdGFibGUgZm9yIGNhcnJ5IG9wZXJhdGlvbnMuIEl0IGNhbiBiZSB0cml2aWFs
bHkKKyAgIGFic3RyYWN0ZWQgaW50byB1c2VmdWwgcGx1Z2luOiB0dW5hYmxlIGJhbGFuY2luZyBw
b2xpY3kgaXMgYSBnb29kCisgICB0aGluZy4gKi8KK2NhcnJ5X29wX2hhbmRsZXIgb3BfZGlzcGF0
Y2hfdGFibGVbQ09QX0xBU1RfT1BdID0geworCVtDT1BfSU5TRVJUXSA9IHsKKwkJCS5oYW5kbGVy
ID0gY2FycnlfaW5zZXJ0LAorCQkJLmVzdGltYXRlID0gY2FycnlfZXN0aW1hdGVfaW5zZXJ0fQor
CSwKKwlbQ09QX0RFTEVURV0gPSB7CisJCQkuaGFuZGxlciA9IGNhcnJ5X2RlbGV0ZSwKKwkJCS5l
c3RpbWF0ZSA9IGNhcnJ5X2VzdGltYXRlX2RlbGV0ZX0KKwksCisJW0NPUF9DVVRdID0geworCQkg
ICAgIC5oYW5kbGVyID0gY2FycnlfY3V0LAorCQkgICAgIC5lc3RpbWF0ZSA9IGNhcnJ5X2VzdGlt
YXRlX2N1dH0KKwksCisJW0NPUF9QQVNURV0gPSB7CisJCSAgICAgICAuaGFuZGxlciA9IGNhcnJ5
X3Bhc3RlLAorCQkgICAgICAgLmVzdGltYXRlID0gY2FycnlfZXN0aW1hdGVfcGFzdGV9CisJLAor
CVtDT1BfRVhURU5UXSA9IHsKKwkJCS5oYW5kbGVyID0gY2FycnlfZXh0ZW50LAorCQkJLmVzdGlt
YXRlID0gY2FycnlfZXN0aW1hdGVfZXh0ZW50fQorCSwKKwlbQ09QX1VQREFURV0gPSB7CisJCQku
aGFuZGxlciA9IGNhcnJ5X3VwZGF0ZSwKKwkJCS5lc3RpbWF0ZSA9IGNhcnJ5X2VzdGltYXRlX3Vw
ZGF0ZX0KKwksCisJW0NPUF9JTlNFUlRfRkxPV10gPSB7CisJCQkgICAgIC5oYW5kbGVyID0gY2Fy
cnlfaW5zZXJ0X2Zsb3csCisJCQkgICAgIC5lc3RpbWF0ZSA9IGNhcnJ5X2VzdGltYXRlX2luc2Vy
dF9mbG93fQorfTsKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoK
KyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMt
YmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAg
IHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2NhcnJ5X29wcy5oIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2NhcnJ5X29wcy5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2NhcnJ5
X29wcy5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC9jYXJyeV9vcHMuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0NjIyMjEyMyAr
MDEwMApAQCAtMCwwICsxLDQzIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBI
YW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLwor
CisvKiBpbXBsZW1lbnRhdGlvbiBvZiBjYXJyeSBvcGVyYXRpb25zLiBTZWUgY2Fycnlfb3BzLmMg
Zm9yIGRldGFpbHMuICovCisKKyNpZiAhZGVmaW5lZChfX0NBUlJZX09QU19IX18pCisjZGVmaW5l
IF9fQ0FSUllfT1BTX0hfXworCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgInpub2Rl
LmgiCisjaW5jbHVkZSAiY2FycnkuaCIKKworLyogY2Fycnkgb3BlcmF0aW9uIGhhbmRsZXJzICov
Cit0eXBlZGVmIHN0cnVjdCBjYXJyeV9vcF9oYW5kbGVyIHsKKwkvKiBwZXJmb3JtIG9wZXJhdGlv
biAqLworCWludCAoKmhhbmRsZXIpIChjYXJyeV9vcCAqIG9wLCBjYXJyeV9sZXZlbCAqIGRvaW5n
LCBjYXJyeV9sZXZlbCAqIHRvZG8pOworCS8qIGVzdGltYXRlIG1lbW9yeSByZXF1aXJlbWVudHMg
Zm9yIEBvcCAqLworCWludCAoKmVzdGltYXRlKSAoY2Fycnlfb3AgKiBvcCwgY2FycnlfbGV2ZWwg
KiBsZXZlbCk7Cit9IGNhcnJ5X29wX2hhbmRsZXI7CisKKy8qIFRoaXMgaXMgZGlzcGF0Y2ggdGFi
bGUgZm9yIGNhcnJ5IG9wZXJhdGlvbnMuIEl0IGNhbiBiZSB0cml2aWFsbHkKKyAgIGFic3RyYWN0
ZWQgaW50byB1c2VmdWwgcGx1Z2luOiB0dW5hYmxlIGJhbGFuY2luZyBwb2xpY3kgaXMgYSBnb29k
CisgICB0aGluZy4gKi8KK2V4dGVybiBjYXJyeV9vcF9oYW5kbGVyIG9wX2Rpc3BhdGNoX3RhYmxl
W0NPUF9MQVNUX09QXTsKKwordW5zaWduZWQgaW50IHNwYWNlX25lZWRlZChjb25zdCB6bm9kZSAq
IG5vZGUsIGNvbnN0IGNvb3JkX3QgKmNvb3JkLAorCQkJICBjb25zdCByZWlzZXI0X2l0ZW1fZGF0
YSAqIGRhdGEsIGludCBpbnNlcnRpbmcpOworZXh0ZXJuIGNhcnJ5X25vZGUgKmZpbmRfbGVmdF9j
YXJyeShjYXJyeV9ub2RlICogbm9kZSwgY2FycnlfbGV2ZWwgKiBsZXZlbCk7CitleHRlcm4gY2Fy
cnlfbm9kZSAqZmluZF9yaWdodF9jYXJyeShjYXJyeV9ub2RlICogbm9kZSwgY2FycnlfbGV2ZWwg
KiBsZXZlbCk7CisKKy8qIF9fQ0FSUllfT1BTX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGlu
dXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdp
ZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9jaGVja3N1bS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2NoZWNrc3VtLmMKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvY2hlY2tzdW0uYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAw
MDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvY2hlY2tzdW0uYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ0NjIyMjEyMyArMDEwMApAQCAtMCwwICsxLDMzIEBACisjaW5jbHVk
ZSA8bGludXgvZXJyLmg+CisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJjaGVja3N1bS5o
IgorCitpbnQgcmVpc2VyNF9pbml0X2NzdW1fdGZtKHN0cnVjdCBjcnlwdG9fc2hhc2ggKip0Zm0p
Cit7CisJc3RydWN0IGNyeXB0b19zaGFzaCAqbmV3X3RmbTsKKworCW5ld190Zm0gPSBjcnlwdG9f
YWxsb2Nfc2hhc2goImNyYzMyYyIsIDAsIDApOworCWlmIChJU19FUlIobmV3X3RmbSkpIHsKKwkJ
d2FybmluZygiaW50ZWxmeC04MSIsICJDb3VsZCBub3QgbG9hZCBjcmMzMmMgZHJpdmVyIik7CisJ
CXJldHVybiBQVFJfRVJSKG5ld190Zm0pOworCX0KKworCSp0Zm0gPSBuZXdfdGZtOworCXJldHVy
biAwOworfQorCit2b2lkIHJlaXNlcjRfZG9uZV9jc3VtX3RmbShzdHJ1Y3QgY3J5cHRvX3NoYXNo
ICp0Zm0pCit7CisJY3J5cHRvX2ZyZWVfc2hhc2godGZtKTsKK30KKworLyoKKyAgIExvY2FsIHZh
cmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJM
QyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1u
OiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJl
ZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2NoZWNrc3VtLmggbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvY2hlY2tzdW0uaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9jaGVja3N1bS5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9jaGVja3N1bS5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDQ2MjIy
MTIzICswMTAwCkBAIC0wLDAgKzEsMzggQEAKKyNpZm5kZWYgX19DSEVDS1NVTV9fCisjZGVmaW5l
IF9fQ0hFQ0tTVU1fXworCisjaW5jbHVkZSA8Y3J5cHRvL2hhc2guaD4KKworaW50IHJlaXNlcjRf
aW5pdF9jc3VtX3RmbShzdHJ1Y3QgY3J5cHRvX3NoYXNoICoqdGZtKTsKK3ZvaWQgcmVpc2VyNF9k
b25lX2NzdW1fdGZtKHN0cnVjdCBjcnlwdG9fc2hhc2ggKnRmbSk7Cit1MzIgc3RhdGljIGlubGlu
ZSByZWlzZXI0X2NyYzMyYyhzdHJ1Y3QgY3J5cHRvX3NoYXNoICp0Zm0sCisJCQkJIHUzMiBjcmMs
IGNvbnN0IHZvaWQgKmFkZHJlc3MsCisJCQkJIHVuc2lnbmVkIGludCBsZW5ndGgpCit7CisJc3Ry
dWN0IHsKKwkJc3RydWN0IHNoYXNoX2Rlc2Mgc2hhc2g7CisJCWNoYXIgY3R4WzRdOworCX0gZGVz
YzsKKwlpbnQgZXJyOworCisJZGVzYy5zaGFzaC50Zm0gPSB0Zm07CisJKih1MzIgKilkZXNjLmN0
eCA9IGNyYzsKKworCWVyciA9IGNyeXB0b19zaGFzaF91cGRhdGUoJmRlc2Muc2hhc2gsIGFkZHJl
c3MsIGxlbmd0aCk7CisJQlVHX09OKGVycik7CisJcmV0dXJuICoodTMyICopZGVzYy5jdHg7Cit9
CisKKyNlbmRpZiAvKiBfX0NIRUNLU1VNX18gKi8KKworLyoKKyAgIExvY2FsIHZhcmlhYmxlczoK
KyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMt
YmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAg
IHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLworCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNl
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvY29udGV4dC5jIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2NvbnRleHQuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9jb250ZXh0
LmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9m
cy9yZWlzZXI0L2NvbnRleHQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0NzIyMjEzMSArMDEwMApA
QCAtMCwwICsxLDI4OCBAQAorLyogQ29weXJpZ2h0IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIs
IGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisvKiBNYW5pcHVsYXRp
b24gb2YgcmVpc2VyNF9jb250ZXh0ICovCisKKy8qCisgKiBnbG9iYWwgY29udGV4dCB1c2VkIGR1
cmluZyBzeXN0ZW0gY2FsbC4gVmFyaWFibGUgb2YgdGhpcyB0eXBlIGlzIGFsbG9jYXRlZAorICog
b24gdGhlIHN0YWNrIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHJlaXNlcjQgcGFydCBvZiB0aGUg
c3lzdGVtIGNhbGwgYW5kCisgKiBwb2ludGVyIHRvIGl0IGlzIHN0b3JlZCBpbiB0aGUgY3VycmVu
dC0+ZnNfY29udGV4dC4gVGhpcyBhbGxvd3MgdXMgdG8gYXZvaWQKKyAqIHBhc3NpbmcgcG9pbnRl
ciB0byBjdXJyZW50IHRyYW5zYWN0aW9uIGFuZCBjdXJyZW50IGxvY2tzdGFjayAoYm90aCBpbgor
ICogb25lLXRvLW9uZSBtYXBwaW5nIHdpdGggdGhyZWFkcykgYWxsIG92ZXIgdGhlIGNhbGwgY2hh
aW4uCisgKgorICogSXQncyBraW5kIG9mIGxpa2UgdGhvc2UgZ2xvYmFsIHZhcmlhYmxlcyB0aGUg
cHJvZiB1c2VkIHRvIHRlbGwgeW91IG5vdCB0bworICogdXNlIGluIENTMSwgZXhjZXB0IHRocmVh
ZCBzcGVjaWZpYy47LSkgTmlraXRhLCB0aGlzIHdhcyBhIGdvb2QgaWRlYS4KKyAqCisgKiBJbiBz
b21lIHNpdHVhdGlvbnMgaXQgaXMgZGVzaXJhYmxlIHRvIGhhdmUgYWJpbGl0eSB0byBlbnRlciBy
ZWlzZXI0X2NvbnRleHQKKyAqIG1vcmUgdGhhbiBvbmNlIGZvciB0aGUgc2FtZSB0aHJlYWQgKG5l
c3RlZCBjb250ZXh0cykuIEZvciBleGFtcGxlLCB0aGVyZQorICogYXJlIHNvbWUgZnVuY3Rpb25z
IHRoYXQgY2FuIGJlIGNhbGxlZCBlaXRoZXIgZGlyZWN0bHkgZnJvbSBWRlMvVk0gb3IgZnJvbQor
ICogYWxyZWFkeSBhY3RpdmUgcmVpc2VyNCBjb250ZXh0ICgtPndyaXRlcGFnZSwgZm9yIGV4YW1w
bGUpLgorICoKKyAqIEluIHN1Y2ggc2l0dWF0aW9ucyAiY2hpbGQiIGNvbnRleHQgYWN0cyBsaWtl
IGR1bW15OiBhbGwgYWN0aXZpdHkgaXMKKyAqIGFjdHVhbGx5IHBlcmZvcm1lZCBpbiB0aGUgdG9w
IGxldmVsIGNvbnRleHQsIGFuZCBnZXRfY3VycmVudF9jb250ZXh0KCkKKyAqIGFsd2F5cyByZXR1
cm5zIHRvcCBsZXZlbCBjb250ZXh0LgorICogT2YgY291cnNlLCByZWlzZXI0X2luaXRfY29udGV4
dCgpL3JlaXNlcjRfZG9uZV9jb250ZXh0KCkgaGF2ZSB0byBiZSBwcm9wZXJseQorICogbmVzdGVk
IGFueSB3YXkuCisgKgorICogTm90ZSB0aGF0IHRoZXJlIGlzIGFuIGltcG9ydGFudCBkaWZmZXJl
bmNlIGJldHdlZW4gcmVpc2VyNCB1c2VzCisgKiAtPmZzX2NvbnRleHQgYW5kIHRoZSB3YXkgb3Ro
ZXIgZmlsZSBzeXN0ZW1zIHVzZSBpdC4gT3RoZXIgZmlsZSBzeXN0ZW1zCisgKiAoZXh0MyBhbmQg
cmVpc2VyZnMpIHVzZSAtPmZzX2NvbnRleHQgb25seSBmb3IgdGhlIGR1cmF0aW9uIG9mIF90cmFu
c2FjdGlvbl8KKyAqICh0aGlzIGlzIHdoeSAtPmZzX2NvbnRleHQgd2FzIGluaXRpYWxseSBjYWxs
ZWQgLT5qb3VybmFsX2luZm8pLiBUaGlzIG1lYW5zLAorICogdGhhdCB3aGVuIGV4dDMgb3IgcmVp
c2VyZnMgZmluZHMgdGhhdCAtPmZzX2NvbnRleHQgaXMgbm90IE5VTEwgb24gdGhlIGVudHJ5Cisg
KiB0byB0aGUgZmlsZSBzeXN0ZW0sIHRoZXkgYXNzdW1lIHRoYXQgc29tZSB0cmFuc2FjdGlvbiBp
cyBhbHJlYWR5IHVuZGVyd2F5LAorICogYW5kIHVzdWFsbHkgYmFpbCBvdXQsIGJlY2F1c2Ugc3Rh
cnRpbmcgbmVzdGVkIHRyYW5zYWN0aW9uIHdvdWxkIG1vc3QgbGlrZWx5CisgKiBsZWFkIHRvIHRo
ZSBkZWFkbG9jay4gVGhpcyBnaXZlcyBmYWxzZSBwb3NpdGl2ZXMgd2l0aCByZWlzZXI0LCBiZWNh
dXNlIHdlCisgKiBzZXQgLT5mc19jb250ZXh0IGJlZm9yZSBzdGFydGluZyB0cmFuc2FjdGlvbi4K
KyAqLworCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2luY2x1ZGUg
ImNvbnRleHQuaCIKKyNpbmNsdWRlICJ2ZnNfb3BzLmgiCS8qIGZvciByZWlzZXI0X3Rocm90dGxl
X3dyaXRlKCkgKi8KKworI2luY2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPiAvKiBmb3IgY3VycmVu
dF9pc19wZGZsdXNoKCkgKi8KKyNpbmNsdWRlIDxsaW51eC9oYXJkaXJxLmg+CisKK3N0YXRpYyB2
b2lkIF9yZWlzZXI0X2luaXRfY29udGV4dChyZWlzZXI0X2NvbnRleHQgKiBjb250ZXh0LAorCQkJ
CSAgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwltZW1zZXQoY29udGV4dCwgMCwgc2l6
ZW9mKCpjb250ZXh0KSk7CisKKwljb250ZXh0LT5zdXBlciA9IHN1cGVyOworCWNvbnRleHQtPm1h
Z2ljID0gY29udGV4dF9tYWdpYzsKKwljb250ZXh0LT5vdXRlciA9IGN1cnJlbnQtPmpvdXJuYWxf
aW5mbzsKKwljdXJyZW50LT5qb3VybmFsX2luZm8gPSAodm9pZCAqKWNvbnRleHQ7CisJY29udGV4
dC0+bnJfY2hpbGRyZW4gPSAwOworCWNvbnRleHQtPmdmcF9tYXNrID0gR0ZQX0tFUk5FTDsKKwor
CWluaXRfbG9ja19zdGFjaygmY29udGV4dC0+c3RhY2spOworCisJcmVpc2VyNF90eG5fYmVnaW4o
Y29udGV4dCk7CisKKwkvKiBpbml0aWFsaXplIGhlYWQgb2YgdGFwIGxpc3QgKi8KKwlJTklUX0xJ
U1RfSEVBRCgmY29udGV4dC0+dGFwcyk7CisjaWYgUkVJU0VSNF9ERUJVRworCWNvbnRleHQtPnRh
c2sgPSBjdXJyZW50OworI2VuZGlmCisJZ3JhYl9zcGFjZV9lbmFibGUoKTsKK30KKworLyogaW5p
dGlhbGl6ZSBjb250ZXh0IGFuZCBiaW5kIGl0IHRvIHRoZSBjdXJyZW50IHRocmVhZAorCisgICBU
aGlzIGZ1bmN0aW9uIHNob3VsZCBiZSBjYWxsZWQgYXQgdGhlIGJlZ2lubmluZyBvZiByZWlzZXI0
IHBhcnQgb2YKKyAgIHN5c2NhbGwuCisqLworcmVpc2VyNF9jb250ZXh0ICogcmVpc2VyNF9pbml0
X2NvbnRleHQoc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlyZWlzZXI0X2NvbnRleHQg
KmNvbnRleHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yNjYyIiwgIWluX2ludGVycnVwdCgpICYmICFp
bl9pcnEoKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzM1NyIsIHN1cGVyICE9IE5VTEwpOworCWFzc2Vy
dCgibmlraXRhLTMzNTgiLCBzdXBlci0+c19vcCA9PSBOVUxMIHx8IGlzX3JlaXNlcjRfc3VwZXIo
c3VwZXIpKTsKKworCWNvbnRleHQgPSBnZXRfY3VycmVudF9jb250ZXh0X2NoZWNrKCk7CisJaWYg
KGNvbnRleHQgJiYgY29udGV4dC0+c3VwZXIgPT0gc3VwZXIpIHsKKwkJY29udGV4dCA9IChyZWlz
ZXI0X2NvbnRleHQgKikgY3VycmVudC0+am91cm5hbF9pbmZvOworCQljb250ZXh0LT5ucl9jaGls
ZHJlbisrOworCQlyZXR1cm4gY29udGV4dDsKKwl9CisKKwljb250ZXh0ID0ga21hbGxvYyhzaXpl
b2YoKmNvbnRleHQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoY29udGV4dCA9PSBOVUxMKQorCQlyZXR1
cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkpOworCisJX3JlaXNlcjRfaW5pdF9jb250ZXh0KGNv
bnRleHQsIHN1cGVyKTsKKwlyZXR1cm4gY29udGV4dDsKK30KKworLyogdGhpcyBpcyB1c2VkIGlu
IHNjYW5fbWdyIHdoaWNoIGlzIGNhbGxlZCB3aXRoIHNwaW5sb2NrIGhlbGQgYW5kIGluCisgICBy
ZWlzZXI0X2ZpbGxfc3VwZXIgbWFnaWMgKi8KK3ZvaWQgaW5pdF9zdGFja19jb250ZXh0KHJlaXNl
cjRfY29udGV4dCAqY29udGV4dCwgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlhc3Nl
cnQoIm5pa2l0YS0yNjYyIiwgIWluX2ludGVycnVwdCgpICYmICFpbl9pcnEoKSk7CisJYXNzZXJ0
KCJuaWtpdGEtMzM1NyIsIHN1cGVyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMzNTgiLCBz
dXBlci0+c19vcCA9PSBOVUxMIHx8IGlzX3JlaXNlcjRfc3VwZXIoc3VwZXIpKTsKKwlhc3NlcnQo
InZzLTEyIiwgIWlzX2luX3JlaXNlcjRfY29udGV4dCgpKTsKKworCV9yZWlzZXI0X2luaXRfY29u
dGV4dChjb250ZXh0LCBzdXBlcik7CisJY29udGV4dC0+b25fc3RhY2sgPSAxOworCXJldHVybjsK
K30KKworLyogY2FzdCBsb2NrIHN0YWNrIGVtYmVkZGVkIGludG8gcmVpc2VyNCBjb250ZXh0IHVw
IHRvIGl0cyBjb250YWluZXIgKi8KK3JlaXNlcjRfY29udGV4dCAqZ2V0X2NvbnRleHRfYnlfbG9j
a19zdGFjayhsb2NrX3N0YWNrICogb3duZXIpCit7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihvd25l
ciwgcmVpc2VyNF9jb250ZXh0LCBzdGFjayk7Cit9CisKKy8qIHRydWUgaWYgdGhlcmUgaXMgYWxy
ZWFkeSBfYW55XyByZWlzZXI0IGNvbnRleHQgZm9yIHRoZSBjdXJyZW50IHRocmVhZCAqLworaW50
IGlzX2luX3JlaXNlcjRfY29udGV4dCh2b2lkKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4Owor
CisJY3R4ID0gY3VycmVudC0+am91cm5hbF9pbmZvOworCXJldHVybiBjdHggIT0gTlVMTCAmJiAo
KHVuc2lnbmVkIGxvbmcpY3R4LT5tYWdpYykgPT0gY29udGV4dF9tYWdpYzsKK30KKworLyoKKyAq
IGNhbGwgYmFsYW5jZSBkaXJ0eSBwYWdlcyBmb3IgdGhlIGN1cnJlbnQgY29udGV4dC4KKyAqCisg
KiBGaWxlIHN5c3RlbSBpcyBleHBlY3RlZCB0byBjYWxsIGJhbGFuY2VfZGlydHlfcGFnZXNfcmF0
ZWxpbWl0ZWQoKSB3aGVuZXZlcgorICogaXQgZGlydGllcyBhIHBhZ2UuIHJlaXNlcjQgZG9lcyB0
aGlzIGZvciB1bmZvcm1hdHRlZCBub2RlcyAodGhhdCBpcywgZHVyaW5nCisgKiB3cml0ZS0tLXRo
aXMgY292ZXJzIHZhc3QgbWFqb3JpdHkgb2YgYWxsIGRpcnR5IHRyYWZmaWMpLCBidXQgd2UgY2Fu
bm90IGRvCisgKiB0aGlzIGltbWVkaWF0ZWx5IHdoZW4gZm9ybWF0dGVkIG5vZGUgaXMgZGlydGll
ZCwgYmVjYXVzZSBsb25nIHRlcm0gbG9jayBpcworICogdXN1YWxseSBoZWxkIGF0IHRoYXQgdGlt
ZS4gVG8gd29yayBhcm91bmQgdGhpcywgZGlydHlpbmcgb2YgZm9ybWF0dGVkIG5vZGUKKyAqIHNp
bXBseSBpbmNyZWFzZXMgLT5ucl9tYXJrZWRfZGlydHkgY291bnRlciBpbiB0aGUgY3VycmVudCBy
ZWlzZXI0CisgKiBjb250ZXh0LiBXaGVuIHdlIGFyZSBhYm91dCB0byBsZWF2ZSB0aGlzIGNvbnRl
eHQsCisgKiBiYWxhbmNlX2RpcnR5X3BhZ2VzX3JhdGVsaW1pdGVkKCkgaXMgY2FsbGVkLCBpZiBu
ZWNlc3NhcnkuCisgKgorICogVGhpcyBpbnRyb2R1Y2VzIGFub3RoZXIgcHJvYmxlbTogc29tZXRp
bWVzIHdlIGRvIG5vdCB3YW50IHRvIHJ1bgorICogYmFsYW5jZV9kaXJ0eV9wYWdlc19yYXRlbGlt
aXRlZCgpIHdoZW4gbGVhdmluZyBhIGNvbnRleHQsIGZvciBleGFtcGxlCisgKiBiZWNhdXNlIHNv
bWUgaW1wb3J0YW50IGxvY2sgKGxpa2UgLT5pX211dGV4IG9uIHRoZSBwYXJlbnQgZGlyZWN0b3J5
KSBpcworICogaGVsZC4gVG8gYWNoaWV2ZSB0aGlzLCAtPm5vYmFsYW5jZSBmbGFnIGNhbiBiZSBz
ZXQgaW4gdGhlIGN1cnJlbnQgY29udGV4dC4KKyAqLworc3RhdGljIHZvaWQgcmVpc2VyNF90aHJv
dHRsZV93cml0ZV9hdChyZWlzZXI0X2NvbnRleHQgKmNvbnRleHQpCit7CisJcmVpc2VyNF9zdXBl
cl9pbmZvX2RhdGEgKnNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKGNvbnRleHQtPnN1cGVyKTsK
KworCS8qCisJICogY2FsbCBiYWxhbmNlX2RpcnR5X3BhZ2VzX3JhdGVsaW1pdGVkKCkgdG8gcHJv
Y2VzcyBmb3JtYXR0ZWQgbm9kZXMKKwkgKiBkaXJ0aWVkIGR1cmluZyB0aGlzIHN5c3RlbSBjYWxs
LiBEbyB0aGF0IG9ubHkgaWYgd2UgYXJlIG5vdCBpbiBtb3VudAorCSAqIGFuZCB0aGVyZSB3ZXJl
IG5vZGVzIGRpcnRpZWQgaW4gdGhpcyBjb250ZXh0IGFuZCB3ZSBhcmUgbm90IGluCisJICogd3Jp
dGVwYWdlICh0byBhdm9pZCBkZWFkbG9jaykgYW5kIG5vdCBpbiBwZGZsdXNoCisJICovCisJaWYg
KHNiaW5mbyAhPSBOVUxMICYmIHNiaW5mby0+ZmFrZSAhPSBOVUxMICYmCisJICAgIGNvbnRleHQt
Pm5yX21hcmtlZF9kaXJ0eSAhPSAwICYmCisJICAgICEoY3VycmVudC0+ZmxhZ3MgJiBQRl9NRU1B
TExPQykgJiYKKwkgICAgIWN1cnJlbnRfaXNfZmx1c2hfYmRfdGFzaygpKQorIAkJcmVpc2VyNF90
aHJvdHRsZV93cml0ZShzYmluZm8tPmZha2UpOworfQorCisvKiByZWxlYXNlIHJlc291cmNlcyBh
c3NvY2lhdGVkIHdpdGggY29udGV4dC4KKworICAgVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgY2Fs
bGVkIGF0IHRoZSBlbmQgb2YgInNlc3Npb24iIHdpdGggcmVpc2VyNCwKKyAgIHR5cGljYWxseSBq
dXN0IGJlZm9yZSBsZWF2aW5nIHJlaXNlcjQgZHJpdmVyIGJhY2sgdG8gVkZTLgorCisgICBUaGlz
IGlzIGdvb2QgcGxhY2UgdG8gcHV0IHNvbWUgZGVndWdnaW5nIGNvbnNpc3RlbmN5IGNoZWNrcywg
bGlrZSB0aGF0CisgICB0aHJlYWQgcmVsZWFzZWQgYWxsIGxvY2tzIGFuZCBjbG9zZWQgdHJhbnNj
cmFzaCBldGMuCisKKyovCitzdGF0aWMgdm9pZCByZWlzZXI0X2RvbmVfY29udGV4dChyZWlzZXI0
X2NvbnRleHQgKiBjb250ZXh0KQorCQkJCS8qIGNvbnRleHQgYmVpbmcgcmVsZWFzZWQgKi8KK3sK
Kwlhc3NlcnQoIm5pa2l0YS04NjAiLCBjb250ZXh0ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTg1OSIsIGNvbnRleHQtPm1hZ2ljID09IGNvbnRleHRfbWFnaWMpOworCWFzc2VydCgidnMtNjQ2
IiwgKHJlaXNlcjRfY29udGV4dCAqKSBjdXJyZW50LT5qb3VybmFsX2luZm8gPT0gY29udGV4dCk7
CisJYXNzZXJ0KCJ6YW0tNjg2IiwgIWluX2ludGVycnVwdCgpICYmICFpbl9pcnEoKSk7CisKKwkv
KiBvbmx5IGRvIGFueXRoaW5nIHdoZW4gbGVhdmluZyB0b3AtbGV2ZWwgcmVpc2VyNCBjb250ZXh0
LiBBbGwgbmVzdGVkCisJICogY29udGV4dHMgYXJlIGp1c3QgZHVtbWllcy4gKi8KKwlpZiAoY29u
dGV4dC0+bnJfY2hpbGRyZW4gPT0gMCkgeworCQlhc3NlcnQoImptYWNkLTY3MyIsIGNvbnRleHQt
PnRyYW5zID09IE5VTEwpOworCQlhc3NlcnQoImptYWNkLTEwMDIiLCBsb2NrX3N0YWNrX2lzY2xl
YW4oJmNvbnRleHQtPnN0YWNrKSk7CisJCWFzc2VydCgibmlraXRhLTE5MzYiLCByZWlzZXI0X25v
X2NvdW50ZXJzX2FyZV9oZWxkKCkpOworCQlhc3NlcnQoIm5pa2l0YS0yNjI2IiwgbGlzdF9lbXB0
eV9jYXJlZnVsKHJlaXNlcjRfdGFwc19saXN0KCkpKTsKKwkJYXNzZXJ0KCJ6YW0tMTAwNCIsIGVy
Z28oZ2V0X3N1cGVyX3ByaXZhdGUoY29udGV4dC0+c3VwZXIpLAorCQkJCQlnZXRfc3VwZXJfcHJp
dmF0ZShjb250ZXh0LT5zdXBlciktPmRlbGV0ZV9tdXRleF9vd25lciAhPQorCQkJCQljdXJyZW50
KSk7CisKKwkJLyogcmVsZWFzZSBhbGwgZ3JhYmJlZCBidXQgYXMgeWV0IHVudXNlZCBibG9ja3Mg
Ki8KKwkJaWYgKGNvbnRleHQtPmdyYWJiZWRfYmxvY2tzICE9IDApCisJCQlhbGxfZ3JhYmJlZDJm
cmVlKCk7CisKKwkJLyoKKwkJICogc3luY2hyb25pemUgYWdhaW5zdCBsb25ndGVybV91bmxvY2tf
em5vZGUoKToKKwkJICogd2FrZV91cF9yZXF1ZXN0b3IoKSB3YWtlcyB1cCByZXF1ZXN0b3JzIHdp
dGhvdXQgaG9sZGluZworCQkgKiB6bG9jayAob3RoZXJ3aXNlIHRoZXkgd2lsbCBpbW1lZGlhdGVs
eSBidW1wIGludG8gdGhhdCBsb2NrCisJCSAqIGFmdGVyIHdha2UgdXAgb24gYW5vdGhlciBDUFUp
LiBUbyB3b3JrIGFyb3VuZCAocmFyZSkKKwkJICogc2l0dWF0aW9uIHdoZXJlIHJlcXVlc3RvciBo
YXMgYmVlbiB3b2tlbiB1cCBhc3luY2hyb25vdXNseQorCQkgKiBhbmQgbWFuYWdlZCB0byBydW4g
dW50aWwgY29tcGxldGlvbiAoYW5kIGRlc3Ryb3kgaXRzCisJCSAqIGNvbnRleHQgYW5kIGxvY2sg
c3RhY2spIGJlZm9yZSB3YWtlX3VwX3JlcXVlc3RvcigpIGNhbGxlZAorCQkgKiB3YWtlX3VwKCkg
b24gaXQsIHdha2VfdXBfcmVxdWVzdG9yKCkgc3luY2hyb25pemUgb24gbG9jaworCQkgKiBzdGFj
ayBzcGluIGxvY2suIEl0IGhhcyBhY3R1YWxseSBiZWVuIG9ic2VydmVkIHRoYXQgc3BpbgorCQkg
KiBsb2NrIF93YXNfIGxvY2tlZCBhdCB0aGlzIHBvaW50LCBiZWNhdXNlCisJCSAqIHdha2VfdXBf
cmVxdWVzdG9yKCkgdG9vayBpbnRlcnJ1cHQuCisJCSAqLworCQlzcGluX2xvY2tfc3RhY2soJmNv
bnRleHQtPnN0YWNrKTsKKwkJc3Bpbl91bmxvY2tfc3RhY2soJmNvbnRleHQtPnN0YWNrKTsKKwor
CQlhc3NlcnQoInphbS02ODQiLCBjb250ZXh0LT5ucl9jaGlsZHJlbiA9PSAwKTsKKwkJLyogcmVz
dG9yZSBvcmlnaW5hbCAtPmZzX2NvbnRleHQgdmFsdWUgKi8KKwkJY3VycmVudC0+am91cm5hbF9p
bmZvID0gY29udGV4dC0+b3V0ZXI7CisJCWlmIChjb250ZXh0LT5vbl9zdGFjayA9PSAwKQorCQkJ
a2ZyZWUoY29udGV4dCk7CisJfSBlbHNlIHsKKwkJY29udGV4dC0+bnJfY2hpbGRyZW4tLTsKKyNp
ZiBSRUlTRVI0X0RFQlVHCisJCWFzc2VydCgiemFtLTY4NSIsIGNvbnRleHQtPm5yX2NoaWxkcmVu
ID49IDApOworI2VuZGlmCisJfQorfQorCisvKgorICogZXhpdCByZWlzZXI0IGNvbnRleHQuIENh
bGwgYmFsYW5jZV9kaXJ0eV9wYWdlc19hdCgpIGlmIG5lY2Vzc2FyeS4gQ2xvc2UKKyAqIHRyYW5z
YWN0aW9uLiBDYWxsIGRvbmVfY29udGV4dCgpIHRvIGRvIGNvbnRleHQgcmVsYXRlZCBib29rLWtl
ZXBpbmcuCisgKi8KK3ZvaWQgcmVpc2VyNF9leGl0X2NvbnRleHQocmVpc2VyNF9jb250ZXh0ICog
Y29udGV4dCkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zMDIxIiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgp
KTsKKworCWlmIChjb250ZXh0LT5ucl9jaGlsZHJlbiA9PSAwKSB7CisJCWlmICghY29udGV4dC0+
bm9iYWxhbmNlKQorCQkJcmVpc2VyNF90aHJvdHRsZV93cml0ZV9hdChjb250ZXh0KTsKKworCQkv
KiBpZiBmaWxlc3lzdGVtIGlzIG1vdW50ZWQgd2l0aCAtbyBzeW5jIG9yIC1vIGRpcnN5bmMgLSBj
b21taXQKKwkJICAgdHJhbnNhY3Rpb24uICBGSVhNRTogVFhOSF9ET05UX0NPTU1JVCBpcyB1c2Vk
IHRvIGF2b2lkCisJCSAgIGNvbW1pdGluZyBvbiBleGl0X2NvbnRleHQgd2hlbiBpbm9kZSBzZW1h
cGhvcmUgaXMgaGVsZCBhbmQKKwkJICAgdG8gaGF2ZSBrdHhubWdyZCB0byBkbyBjb21taXQgaW5z
dGVhZCB0byBnZXQgYmV0dGVyCisJCSAgIGNvbmN1cnJlbnQgZmlsZXN5c3RlbSBhY2Nlc3Nlcy4g
QnV0LCB3aGVuIG9uZSBtb3VudHMgd2l0aCAtbworCQkgICBzeW5jLCBoZSBjYXJlcyBtb3JlIGFi
b3V0IHJlbGlhYmlsaXR5IHRoYW4gYWJvdXQKKwkJICAgcGVyZm9ybWFuY2UuIFNvLCBmb3Igbm93
IHdlIGhhdmUgdGhpcyBzaW1wbGUgbW91bnQgLW8gc3luYworCQkgICBzdXBwb3J0LiAqLworCQlp
ZiAoY29udGV4dC0+c3VwZXItPnNfZmxhZ3MgJiAoU0JfU1lOQ0hST05PVVMgfCBTQl9ESVJTWU5D
KSkgeworCQkJdHhuX2F0b20gKmF0b207CisKKwkJCWF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xv
Y2tlZF9ub2NoZWNrKCk7CisJCQlpZiAoYXRvbSkgeworCQkJCWF0b20tPmZsYWdzIHw9IEFUT01f
Rk9SQ0VfQ09NTUlUOworCQkJCWNvbnRleHQtPnRyYW5zLT5mbGFncyAmPSB+VFhOSF9ET05UX0NP
TU1JVDsKKwkJCQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQkJfQorCQl9CisJCXJlaXNlcjRf
dHhuX2VuZChjb250ZXh0KTsKKwl9CisJcmVpc2VyNF9kb25lX2NvbnRleHQoY29udGV4dCk7Cit9
CisKK3ZvaWQgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfc2V0KHZvaWQpCit7CisJcmVpc2VyNF9jb250
ZXh0ICpjdHg7CisKKwljdHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisJaWYgKGN0eC0+ZW50
ZCA9PSAwICYmCisJICAgIGxpc3RfZW1wdHkoJmN0eC0+c3RhY2subG9ja3MpICYmCisJICAgIGN0
eC0+dHJhbnMtPmF0b20gPT0gTlVMTCkKKwkJY3R4LT5nZnBfbWFzayA9IEdGUF9LRVJORUw7CisJ
ZWxzZQorCQljdHgtPmdmcF9tYXNrID0gR0ZQX05PRlM7Cit9CisKK3ZvaWQgcmVpc2VyNF9jdHhf
Z2ZwX21hc2tfZm9yY2UoZ2ZwX3QgbWFzaykKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlj
dHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisKKwlhc3NlcnQoImVkd2FyZC0xNDU0IiwgY3R4
ICE9IE5VTEwpOworCisJY3R4LT5nZnBfbWFzayA9IG1hc2s7Cit9CisKKy8qCisgKiBMb2NhbCB2
YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICogbW9kZS1uYW1lOiAi
TEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAorICogdGFiLXdpZHRoOiA4CisgKiBmaWxsLWNvbHVt
bjogMTIwCisgKiBzY3JvbGwtc3RlcDogMQorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRl
cmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvY29udGV4dC5oIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L2NvbnRleHQuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9jb250ZXh0LmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L2NvbnRleHQuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0NzIyMjEz
MSArMDEwMApAQCAtMCwwICsxLDIzNSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMs
IDIwMDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9S
RUFETUUgKi8KKworLyogUmVpc2VyNCBjb250ZXh0LiBTZWUgY29udGV4dC5jIGZvciBkZXRhaWxz
LiAqLworCisjaWYgIWRlZmluZWQoIF9fUkVJU0VSNF9DT05URVhUX0hfXyApCisjZGVmaW5lIF9f
UkVJU0VSNF9DT05URVhUX0hfXworCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRl
YnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorI2luY2x1ZGUgInRhcC5oIgorI2luY2x1ZGUg
ImxvY2suaCIKKworI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CS8qIGZvciBfX3U/PyAgKi8KKyNp
bmNsdWRlIDxsaW51eC9mcy5oPgkJLyogZm9yIHN0cnVjdCBzdXBlcl9ibG9jayAgKi8KKyNpbmNs
dWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CS8qIGZvciBz
dHJ1Y3QgdGFza19zdHJ1Y3QgKi8KKworLyogcmVpc2VyNCBwZXItdGhyZWFkIGNvbnRleHQgKi8K
K3N0cnVjdCByZWlzZXI0X2NvbnRleHQgeworCS8qIG1hZ2ljIGNvbnN0YW50LiBGb3IgaWRlbnRp
ZmljYXRpb24gb2YgcmVpc2VyNCBjb250ZXh0cy4gKi8KKwlfX3UzMiBtYWdpYzsKKworCS8qIGN1
cnJlbnQgbG9jayBzdGFjay4gU2VlIGxvY2suW2NoXS4gVGhpcyBpcyB3aGVyZSBsaXN0IG9mIGFs
bAorCSAgIGxvY2tzIHRha2VuIGJ5IGN1cnJlbnQgdGhyZWFkIGlzIGtlcHQuIFRoaXMgaXMgYWxz
byB1c2VkIGluCisJICAgZGVhZGxvY2sgZGV0ZWN0aW9uLiAqLworCWxvY2tfc3RhY2sgc3RhY2s7
CisKKwkvKiBjdXJyZW50IHRyYW5zY3Jhc2guICovCisJdHhuX2hhbmRsZSAqdHJhbnM7CisJLyog
dHJhbnNhY3Rpb24gaGFuZGxlIGVtYmVkZGVkIGludG8gcmVpc2VyNF9jb250ZXh0LiAtPnRyYW5z
IHBvaW50cworCSAqIGhlcmUgYnkgZGVmYXVsdC4gKi8KKwl0eG5faGFuZGxlIHRyYW5zX2luX2N0
eDsKKworCS8qIHN1cGVyIGJsb2NrIHdlIGFyZSB3b3JraW5nIHdpdGguICBUbyBnZXQgdGhlIGN1
cnJlbnQgdHJlZQorCSAgIHVzZSAmZ2V0X3N1cGVyX3ByaXZhdGUgKHJlaXNlcjRfZ2V0X2N1cnJl
bnRfc2IgKCkpLT50cmVlLiAqLworCXN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXI7CisKKwkvKiBw
YXJlbnQgZnMgYWN0aXZhdGlvbiAqLworCXN0cnVjdCBmc19hY3RpdmF0aW9uICpvdXRlcjsKKwor
CS8qIHBlci10aHJlYWQgZ3JhYmJlZCAoZm9yIGZ1cnRoZXIgYWxsb2NhdGlvbikgYmxvY2tzIGNv
dW50ZXIgKi8KKwlyZWlzZXI0X2Jsb2NrX25yIGdyYWJiZWRfYmxvY2tzOworCisJLyogbGlzdCBv
ZiB0YXBzIGN1cnJlbnRseSBtb25pdG9yZWQuIFNlZSB0YXAuYyAqLworCXN0cnVjdCBsaXN0X2hl
YWQgdGFwczsKKworCS8qIGdyYWJiaW5nIHNwYWNlIGlzIGVuYWJsZWQgKi8KKwl1bnNpZ25lZCBp
bnQgZ3JhYl9lbmFibGVkOjE7CisJLyogc2hvdWxkIGJlIHNldCB3aGVuIHdlIGFyZSB3cml0ZSBk
aXJ0eSBub2RlcyB0byBkaXNrIGluIGpub2RlX2ZsdXNoIG9yCisJICogcmVpc2VyNF93cml0ZV9s
b2dzKCkgKi8KKwl1bnNpZ25lZCBpbnQgd3JpdGVvdXRfbW9kZToxOworCS8qIHRydWUsIGlmIGN1
cnJlbnQgdGhyZWFkIGlzIGFuIGVudCB0aHJlYWQgKi8KKwl1bnNpZ25lZCBpbnQgZW50ZDoxOwor
CS8qIHRydWUsIGlmIGJhbGFuY2VfZGlydHlfcGFnZXMoKSBzaG91bGQgbm90IGJlIHJ1biB3aGVu
IGxlYXZpbmcgdGhpcworCSAqIGNvbnRleHQuIFRoaXMgaXMgdXNlZCB0byBhdm9pZCBsZW5ndGhs
eSBiYWxhbmNlX2RpcnR5X3BhZ2VzKCkKKwkgKiBvcGVyYXRpb24gd2hlbiBob2xkaW5nIHNvbWUg
aW1wb3J0YW50IHJlc291cmNlLCBsaWtlIGRpcmVjdG9yeQorCSAqIC0+aV9tdXRleCAqLworCXVu
c2lnbmVkIGludCBub2JhbGFuY2U6MTsKKworCS8qIHRoaXMgYml0IGlzIHVzZWQgb24gcmVpc2Vy
NF9kb25lX2NvbnRleHQgdG8gZGVjaWRlIHdoZXRoZXIgY29udGV4dCBpcworCSAgIGttYWxsb2Mt
ZWQgYW5kIGhhcyB0byBiZSBrZnJlZS1lZCAqLworCXVuc2lnbmVkIGludCBvbl9zdGFjazoxOwor
CS8qIGZpbGUgc3lzdGVtIGlzIHJlYWQtb25seSAqLworCXVuc2lnbmVkIGludCBybzoxOworCisJ
LyogY291bnQgbm9uLXRyaXZpYWwgam5vZGVfc2V0X2RpcnR5KCkgY2FsbHMgKi8KKwl1bnNpZ25l
ZCBsb25nIG5yX21hcmtlZF9kaXJ0eTsKKwkvKgorCSAqIHJlaXNlcjRfd3JpdGViYWNrX2lub2Rl
cyBjYWxscyAodmlhIGdlbmVyaWNfd3JpdGViYWNrX3NiX2lub2RlcykKKwkgKiByZWlzZXI0X3dy
aXRlcGFnZXNfZGlzcGF0Y2ggZm9yIGVhY2ggb2YgZGlydHkgaW5vZGVzLgorCSAqIFJlaXNlcjRf
d3JpdGVwYWdlc19kaXNwYXRjaCBjYXB0dXJlcyBwYWdlcy4gV2hlbiBudW1iZXIgb2YgcGFnZXMK
KwkgKiBjYXB0dXJlZCBpbiBvbmUgcmVpc2VyNF93cml0ZWJhY2tfaW5vZGVzIHJlYWNoZXMgc29t
ZSB0aHJlc2hvbGQgLQorCSAqIHNvbWUgYXRvbXMgZ2V0IGZsdXNoZWQKKwkgKi8KKwlpbnQgbnJf
Y2FwdHVyZWQ7CisJaW50IG5yX2NoaWxkcmVuOwkvKiBudW1iZXIgb2YgY2hpbGQgY29udGV4dHMg
Ki8KKwlzdHJ1Y3QgcGFnZSAqbG9ja2VkX3BhZ2U7IC8qIHBhZ2UgdGhhdCBzaG91bGQgYmUgdW5s
b2NrZWQgaW4KKwkJCQkgICAqIHJlaXNlcjRfZGlydHlfaW5vZGUoKSBiZWZvcmUgdGFraW5nCisJ
CQkJICAgKiBhIGxvbmd0ZXJtIGxvY2sgKHRvIG5vdCB2aW9sYXRlCisJCQkJICAgKiByZWlzZXI0
IGxvY2sgb3JkZXJpbmcpICovCisjaWYgUkVJU0VSNF9ERUJVRworCS8qIGRlYnVnZ2luZyBpbmZv
cm1hdGlvbiBhYm91dCByZWlzZXI0IGxvY2tzIGhlbGQgYnkgdGhlIGN1cnJlbnQKKwkgKiB0aHJl
YWQgKi8KKwlyZWlzZXI0X2xvY2tfY250X2luZm8gbG9ja3M7CisJc3RydWN0IHRhc2tfc3RydWN0
ICp0YXNrOwkvKiBzbyB3ZSBjYW4gZWFzaWx5IGZpbmQgb3duZXIgb2YgdGhlIHN0YWNrICovCisK
KwkvKgorCSAqIGRpc2sgc3BhY2UgZ3JhYmJpbmcgZGVidWdnaW5nIHN1cHBvcnQKKwkgKi8KKwkv
KiBob3cgbWFueSBkaXNrIGJsb2NrcyB3ZXJlIGdyYWJiZWQgYnkgdGhlIGZpcnN0IGNhbGwgdG8K
KwkgKiByZWlzZXI0X2dyYWJfc3BhY2UoKSBpbiB0aGlzIGNvbnRleHQgKi8KKwlyZWlzZXI0X2Js
b2NrX25yIGdyYWJiZWRfaW5pdGlhbGx5OworCisJLyogbGlzdCBvZiBhbGwgdGhyZWFkcyBkb2lu
ZyBmbHVzaCBjdXJyZW50bHkgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGZsdXNoZXJzX2xpbms7CisJ
LyogaW5mb3JtYXRpb24gYWJvdXQgbGFzdCBlcnJvciBlbmNvdW50ZXJlZCBieSByZWlzZXI0ICov
CisJZXJyX3NpdGUgZXJyOworI2VuZGlmCisJdm9pZCAqdnA7CisJZ2ZwX3QgZ2ZwX21hc2s7Cit9
OworCitleHRlcm4gcmVpc2VyNF9jb250ZXh0ICpnZXRfY29udGV4dF9ieV9sb2NrX3N0YWNrKGxv
Y2tfc3RhY2sgKik7CisKKy8qIERlYnVnZ2luZyBoZWxwcy4gKi8KKyNpZiBSRUlTRVI0X0RFQlVH
CitleHRlcm4gdm9pZCBwcmludF9jb250ZXh0cyh2b2lkKTsKKyNlbmRpZgorCisjZGVmaW5lIGN1
cnJlbnRfdHJlZSAoJihnZXRfc3VwZXJfcHJpdmF0ZShyZWlzZXI0X2dldF9jdXJyZW50X3NiKCkp
LT50cmVlKSkKKyNkZWZpbmUgY3VycmVudF9ibG9ja3NpemUgcmVpc2VyNF9nZXRfY3VycmVudF9z
YigpLT5zX2Jsb2Nrc2l6ZQorI2RlZmluZSBjdXJyZW50X2Jsb2Nrc2l6ZV9iaXRzIHJlaXNlcjRf
Z2V0X2N1cnJlbnRfc2IoKS0+c19ibG9ja3NpemVfYml0cworCitleHRlcm4gcmVpc2VyNF9jb250
ZXh0ICpyZWlzZXI0X2luaXRfY29udGV4dChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CitleHRlcm4g
dm9pZCBpbml0X3N0YWNrX2NvbnRleHQocmVpc2VyNF9jb250ZXh0ICosIHN0cnVjdCBzdXBlcl9i
bG9jayAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZXhpdF9jb250ZXh0KHJlaXNlcjRfY29udGV4
dCAqKTsKKworLyogbWFnaWMgY29uc3RhbnQgd2Ugc3RvcmUgaW4gcmVpc2VyNF9jb250ZXh0IGFs
bG9jYXRlZCBhdCB0aGUgc3RhY2suIFVzZWQgdG8KKyAgIGNhdGNoIGFjY2Vzc2VzIHRvIHN0YWxl
ZCBvciB1bmluaXRpYWxpemVkIGNvbnRleHRzLiAqLworI2RlZmluZSBjb250ZXh0X21hZ2ljICgo
X191MzIpIDB4NGIxYjVkMGIpCisKK2V4dGVybiBpbnQgaXNfaW5fcmVpc2VyNF9jb250ZXh0KHZv
aWQpOworCisvKgorICogcmV0dXJuIHJlaXNlcjRfY29udGV4dCBmb3IgdGhlIHRocmVhZCBAdHNr
CisgKi8KK3N0YXRpYyBpbmxpbmUgcmVpc2VyNF9jb250ZXh0ICpnZXRfY29udGV4dChjb25zdCBz
dHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKK3sKKwlhc3NlcnQoInZzLTE2ODIiLAorCSAgICAgICAo
KHJlaXNlcjRfY29udGV4dCAqKSB0c2stPmpvdXJuYWxfaW5mbyktPm1hZ2ljID09IGNvbnRleHRf
bWFnaWMpOworCXJldHVybiAocmVpc2VyNF9jb250ZXh0ICopIHRzay0+am91cm5hbF9pbmZvOwor
fQorCisvKgorICogcmV0dXJuIHJlaXNlcjQgY29udGV4dCBvZiB0aGUgY3VycmVudCB0aHJlYWQs
IG9yIE5VTEwgaWYgdGhlcmUgaXMgbm9uZS4KKyAqLworc3RhdGljIGlubGluZSByZWlzZXI0X2Nv
bnRleHQgKmdldF9jdXJyZW50X2NvbnRleHRfY2hlY2sodm9pZCkKK3sKKwlpZiAoaXNfaW5fcmVp
c2VyNF9jb250ZXh0KCkpCisJCXJldHVybiBnZXRfY29udGV4dChjdXJyZW50KTsKKwllbHNlCisJ
CXJldHVybiBOVUxMOworfQorCitzdGF0aWMgaW5saW5lIHJlaXNlcjRfY29udGV4dCAqZ2V0X2N1
cnJlbnRfY29udGV4dCh2b2lkKTsJLyogX19hdHRyaWJ1dGVfXygoY29uc3QpKTsgKi8KKworLyog
cmV0dXJuIGNvbnRleHQgYXNzb2NpYXRlZCB3aXRoIGN1cnJlbnQgdGhyZWFkICovCitzdGF0aWMg
aW5saW5lIHJlaXNlcjRfY29udGV4dCAqZ2V0X2N1cnJlbnRfY29udGV4dCh2b2lkKQoreworCXJl
dHVybiBnZXRfY29udGV4dChjdXJyZW50KTsKK30KKworc3RhdGljIGlubGluZSBnZnBfdCByZWlz
ZXI0X2N0eF9nZnBfbWFza19nZXQodm9pZCkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwor
CWN0eCA9IGdldF9jdXJyZW50X2NvbnRleHRfY2hlY2soKTsKKwlyZXR1cm4gKGN0eCA9PSBOVUxM
KSA/IEdGUF9LRVJORUwgOiBjdHgtPmdmcF9tYXNrOworfQorCit2b2lkIHJlaXNlcjRfY3R4X2dm
cF9tYXNrX3NldCh2b2lkKTsKK3ZvaWQgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZm9yY2UgKGdmcF90
IG1hc2spOworCisvKgorICogdHJ1ZSBpZiBjdXJyZW50IHRocmVhZCBpcyBpbiB0aGUgd3JpdGUt
b3V0IG1vZGUuIFRocmVhZCBlbnRlcnMgd3JpdGUtb3V0CisgKiBtb2RlIGR1cmluZyBqbm9kZV9m
bHVzaCBhbmQgcmVpc2VyNF93cml0ZV9sb2dzKCkuCisgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGlz
X3dyaXRlb3V0X21vZGUodm9pZCkKK3sKKwlyZXR1cm4gZ2V0X2N1cnJlbnRfY29udGV4dCgpLT53
cml0ZW91dF9tb2RlOworfQorCisvKgorICogZW50ZXIgd3JpdGUtb3V0IG1vZGUKKyAqLworc3Rh
dGljIGlubGluZSB2b2lkIHdyaXRlb3V0X21vZGVfZW5hYmxlKHZvaWQpCit7CisJYXNzZXJ0KCJ6
YW0tOTQxIiwgIWdldF9jdXJyZW50X2NvbnRleHQoKS0+d3JpdGVvdXRfbW9kZSk7CisJZ2V0X2N1
cnJlbnRfY29udGV4dCgpLT53cml0ZW91dF9tb2RlID0gMTsKK30KKworLyoKKyAqIGxlYXZlIHdy
aXRlLW91dCBtb2RlCisgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCB3cml0ZW91dF9tb2RlX2Rpc2Fi
bGUodm9pZCkKK3sKKwlhc3NlcnQoInphbS05NDIiLCBnZXRfY3VycmVudF9jb250ZXh0KCktPndy
aXRlb3V0X21vZGUpOworCWdldF9jdXJyZW50X2NvbnRleHQoKS0+d3JpdGVvdXRfbW9kZSA9IDA7
Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBncmFiX3NwYWNlX2VuYWJsZSh2b2lkKQoreworCWdl
dF9jdXJyZW50X2NvbnRleHQoKS0+Z3JhYl9lbmFibGVkID0gMTsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIGdyYWJfc3BhY2VfZGlzYWJsZSh2b2lkKQoreworCWdldF9jdXJyZW50X2NvbnRleHQo
KS0+Z3JhYl9lbmFibGVkID0gMDsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGdyYWJfc3BhY2Vf
c2V0X2VuYWJsZWQoaW50IGVuYWJsZWQpCit7CisJZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5ncmFi
X2VuYWJsZWQgPSBlbmFibGVkOworfQorCitzdGF0aWMgaW5saW5lIGludCBpc19ncmFiX2VuYWJs
ZWQocmVpc2VyNF9jb250ZXh0ICogY3R4KQoreworCXJldHVybiBjdHgtPmdyYWJfZW5hYmxlZDsK
K30KKworLyogbWFyayB0cmFuc2FjdGlvbiBoYW5kbGUgaW4gQGN0eCBhcyBUWE5IX0RPTlRfQ09N
TUlULCBzbyB0aGF0IG5vIGNvbW1pdCBvcgorICogZmx1c2ggd291bGQgYmUgcGVyZm9ybWVkIHdo
ZW4gaXQgaXMgY2xvc2VkLiBUaGlzIGlzIG5lY2Vzc2FyeSB3aGVuIGhhbmRsZQorICogaGFzIHRv
IGJlIGNsb3NlZCB1bmRlciBzb21lIGNvYXJzZSBzZW1hcGhvcmUsIGxpa2UgaV9tdXRleCBvZgor
ICogZGlyZWN0b3J5LiBDb21taXQgd2lsbCBiZSBwZXJmb3JtZWQgYnkga3R4bm1ncmQuICovCitz
dGF0aWMgaW5saW5lIHZvaWQgY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKHJlaXNlcjRfY29udGV4
dCAqIGNvbnRleHQpCit7CisJY29udGV4dC0+bm9iYWxhbmNlID0gMTsKKwljb250ZXh0LT50cmFu
cy0+ZmxhZ3MgfD0gVFhOSF9ET05UX0NPTU1JVDsKK30KKworLyogX19SRUlTRVI0X0NPTlRFWFRf
SF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxl
czoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAg
IGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAK
KyAgIHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Nvb3JkLmMgbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvY29vcmQuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9jb29yZC5jCTE5
NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVp
c2VyNC9jb29yZC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDQ3MjIyMTMxICswMTAwCkBAIC0wLDAg
KzEsOTI4IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwg
bGljZW5zaW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAi
Zm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorI2lu
Y2x1ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAi
em5vZGUuaCIKKyNpbmNsdWRlICJjb29yZC5oIgorCisvKiBJbnRlcm5hbCBjb25zdHJ1Y3Rvci4g
Ki8KK3N0YXRpYyBpbmxpbmUgdm9pZAorY29vcmRfaW5pdF92YWx1ZXMoY29vcmRfdCAqY29vcmQs
IGNvbnN0IHpub2RlICogbm9kZSwgcG9zX2luX25vZGVfdCBpdGVtX3BvcywKKwkJICBwb3NfaW5f
bm9kZV90IHVuaXRfcG9zLCBiZXR3ZWVuX2VudW0gYmV0d2VlbikKK3sKKwljb29yZC0+bm9kZSA9
ICh6bm9kZSAqKSBub2RlOworCWNvb3JkX3NldF9pdGVtX3Bvcyhjb29yZCwgaXRlbV9wb3MpOwor
CWNvb3JkLT51bml0X3BvcyA9IHVuaXRfcG9zOworCWNvb3JkLT5iZXR3ZWVuID0gYmV0d2VlbjsK
KwlPTl9ERUJVRyhjb29yZC0+cGx1Z192ID0gMCk7CisJT05fREVCVUcoY29vcmQtPmJvZHlfdiA9
IDApOworCisJLypPTl9UUkFDRSAoVFJBQ0VfQ09PUkRTLCAiaW5pdCBjb29yZCAlcCBub2RlICVw
OiAldSAldSAlc1xuIiwgY29vcmQsCisgbm9kZSwgaXRlbV9wb3MsIHVuaXRfcG9zLCBjb29yZF90
d2Vlbl90b3N0cmluZyAoYmV0d2VlbikpOyAqLworfQorCisvKiBhZnRlciBzaGlmdGluZyBvZiBu
b2RlIGNvbnRlbnQsIGNvb3JkIHByZXZpb3VzbHkgc2V0IHByb3Blcmx5IG1heSBiZWNvbWUKKyAg
IGludmFsaWQsIHRyeSB0byAibm9ybWFsaXplIiBpdC4gKi8KK3ZvaWQgY29vcmRfbm9ybWFsaXpl
KGNvb3JkX3QgKmNvb3JkKQoreworCXpub2RlICpub2RlOworCisJbm9kZSA9IGNvb3JkLT5ub2Rl
OworCWFzc2VydCgidnMtNjgzIiwgbm9kZSk7CisKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7
CisKKwlpZiAobm9kZV9pc19lbXB0eShub2RlKSkgeworCQljb29yZF9pbml0X2ZpcnN0X3VuaXQo
Y29vcmQsIG5vZGUpOworCX0gZWxzZSBpZiAoKGNvb3JkLT5iZXR3ZWVuID09IEFGVEVSX0lURU0p
CisJCSAgIHx8IChjb29yZC0+YmV0d2VlbiA9PSBBRlRFUl9VTklUKSkgeworCQlyZXR1cm47CisJ
fSBlbHNlIGlmIChjb29yZC0+aXRlbV9wb3MgPT0gY29vcmRfbnVtX2l0ZW1zKGNvb3JkKQorCQkg
ICAmJiBjb29yZC0+YmV0d2VlbiA9PSBCRUZPUkVfSVRFTSkgeworCQljb29yZF9kZWNfaXRlbV9w
b3MoY29vcmQpOworCQljb29yZC0+YmV0d2VlbiA9IEFGVEVSX0lURU07CisJfSBlbHNlIGlmIChj
b29yZC0+dW5pdF9wb3MgPT0gY29vcmRfbnVtX3VuaXRzKGNvb3JkKQorCQkgICAmJiBjb29yZC0+
YmV0d2VlbiA9PSBCRUZPUkVfVU5JVCkgeworCQljb29yZC0+dW5pdF9wb3MtLTsKKwkJY29vcmQt
PmJldHdlZW4gPSBBRlRFUl9VTklUOworCX0gZWxzZSBpZiAoY29vcmQtPml0ZW1fcG9zID09IGNv
b3JkX251bV9pdGVtcyhjb29yZCkKKwkJICAgJiYgY29vcmQtPnVuaXRfcG9zID09IDAgJiYgY29v
cmQtPmJldHdlZW4gPT0gQkVGT1JFX1VOSVQpIHsKKwkJY29vcmRfZGVjX2l0ZW1fcG9zKGNvb3Jk
KTsKKwkJY29vcmQtPnVuaXRfcG9zID0gMDsKKwkJY29vcmQtPmJldHdlZW4gPSBBRlRFUl9JVEVN
OworCX0KK30KKworLyogQ29weSBhIGNvb3JkaW5hdGUuICovCit2b2lkIGNvb3JkX2R1cChjb29y
ZF90ICpjb29yZCwgY29uc3QgY29vcmRfdCAqb2xkX2Nvb3JkKQoreworCWFzc2VydCgiam1hY2Qt
OTgwMCIsIGNvb3JkX2NoZWNrKG9sZF9jb29yZCkpOworCWNvb3JkX2R1cF9ub2NoZWNrKGNvb3Jk
LCBvbGRfY29vcmQpOworfQorCisvKiBDb3B5IGEgY29vcmRpbmF0ZSB3aXRob3V0IGNoZWNrLiBV
c2VmdWwgd2hlbiBvbGRfY29vcmQtPm5vZGUgaXMgbm90CisgICBsb2FkZWQuIEFzIGluIGNia190
cmVlX2xvb2t1cCAtPiBjb25uZWN0X3pub2RlIC0+IGNvbm5lY3Rfb25lX3NpZGUgKi8KK3ZvaWQg
Y29vcmRfZHVwX25vY2hlY2soY29vcmRfdCAqY29vcmQsIGNvbnN0IGNvb3JkX3QgKm9sZF9jb29y
ZCkKK3sKKwljb29yZC0+bm9kZSA9IG9sZF9jb29yZC0+bm9kZTsKKwljb29yZF9zZXRfaXRlbV9w
b3MoY29vcmQsIG9sZF9jb29yZC0+aXRlbV9wb3MpOworCWNvb3JkLT51bml0X3BvcyA9IG9sZF9j
b29yZC0+dW5pdF9wb3M7CisJY29vcmQtPmJldHdlZW4gPSBvbGRfY29vcmQtPmJldHdlZW47CisJ
Y29vcmQtPmlwbHVnaWQgPSBvbGRfY29vcmQtPmlwbHVnaWQ7CisJT05fREVCVUcoY29vcmQtPnBs
dWdfdiA9IG9sZF9jb29yZC0+cGx1Z192KTsKKwlPTl9ERUJVRyhjb29yZC0+Ym9keV92ID0gb2xk
X2Nvb3JkLT5ib2R5X3YpOworfQorCisvKiBJbml0aWFsaXplIGFuIGludmFsaWQgY29vcmRpbmF0
ZS4gKi8KK3ZvaWQgY29vcmRfaW5pdF9pbnZhbGlkKGNvb3JkX3QgKmNvb3JkLCBjb25zdCB6bm9k
ZSAqIG5vZGUpCit7CisJY29vcmRfaW5pdF92YWx1ZXMoY29vcmQsIG5vZGUsIDAsIDAsIElOVkFM
SURfQ09PUkQpOworfQorCit2b2lkIGNvb3JkX2luaXRfZmlyc3RfdW5pdF9ub2NoZWNrKGNvb3Jk
X3QgKmNvb3JkLCBjb25zdCB6bm9kZSAqIG5vZGUpCit7CisJY29vcmRfaW5pdF92YWx1ZXMoY29v
cmQsIG5vZGUsIDAsIDAsIEFUX1VOSVQpOworfQorCisvKiBJbml0aWFsaXplIGEgY29vcmRpbmF0
ZSB0byBwb2ludCBhdCB0aGUgZmlyc3QgdW5pdCBvZiB0aGUgZmlyc3QgaXRlbS4gSWYgdGhlCisg
ICBub2RlIGlzIGVtcHR5LCBpdCBpcyBwb3NpdGlvbmVkIGF0IHRoZSBFTVBUWV9OT0RFLiAqLwor
dm9pZCBjb29yZF9pbml0X2ZpcnN0X3VuaXQoY29vcmRfdCAqY29vcmQsIGNvbnN0IHpub2RlICog
bm9kZSkKK3sKKwlpbnQgaXNfZW1wdHkgPSBub2RlX2lzX2VtcHR5KG5vZGUpOworCisJY29vcmRf
aW5pdF92YWx1ZXMoY29vcmQsIG5vZGUsIDAsIDAsIChpc19lbXB0eSA/IEVNUFRZX05PREUgOiBB
VF9VTklUKSk7CisKKwlhc3NlcnQoImptYWNkLTk4MDEiLCBjb29yZF9jaGVjayhjb29yZCkpOwor
fQorCisvKiBJbml0aWFsaXplIGEgY29vcmRpbmF0ZSB0byBwb2ludCBhdCB0aGUgbGFzdCB1bml0
IG9mIHRoZSBsYXN0IGl0ZW0uICBJZiB0aGUKKyAgIG5vZGUgaXMgZW1wdHksIGl0IGlzIHBvc2l0
aW9uZWQgYXQgdGhlIEVNUFRZX05PREUuICovCit2b2lkIGNvb3JkX2luaXRfbGFzdF91bml0KGNv
b3JkX3QgKmNvb3JkLCBjb25zdCB6bm9kZSAqIG5vZGUpCit7CisJaW50IGlzX2VtcHR5ID0gbm9k
ZV9pc19lbXB0eShub2RlKTsKKworCWNvb3JkX2luaXRfdmFsdWVzKGNvb3JkLCBub2RlLAorCQkJ
ICAoaXNfZW1wdHkgPyAwIDogbm9kZV9udW1faXRlbXMobm9kZSkgLSAxKSwgMCwKKwkJCSAgKGlz
X2VtcHR5ID8gRU1QVFlfTk9ERSA6IEFUX1VOSVQpKTsKKwlpZiAoIWlzX2VtcHR5KQorCQljb29y
ZC0+dW5pdF9wb3MgPSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKTsKKwlhc3NlcnQoImptYWNk
LTk4MDIiLCBjb29yZF9jaGVjayhjb29yZCkpOworfQorCisvKiBJbml0aWFsaXplIGEgY29vcmRp
bmF0ZSB0byBiZWZvcmUgdGhlIGZpcnN0IGl0ZW0uIElmIHRoZSBub2RlIGlzIGVtcHR5LCBpdCBp
cworICAgcG9zaXRpb25lZCBhdCB0aGUgRU1QVFlfTk9ERS4gKi8KK3ZvaWQgY29vcmRfaW5pdF9i
ZWZvcmVfZmlyc3RfaXRlbShjb29yZF90ICpjb29yZCwgY29uc3Qgem5vZGUgKiBub2RlKQorewor
CWludCBpc19lbXB0eSA9IG5vZGVfaXNfZW1wdHkobm9kZSk7CisKKwljb29yZF9pbml0X3ZhbHVl
cyhjb29yZCwgbm9kZSwgMCwgMCwKKwkJCSAgKGlzX2VtcHR5ID8gRU1QVFlfTk9ERSA6IEJFRk9S
RV9VTklUKSk7CisKKwlhc3NlcnQoImptYWNkLTk4MDMiLCBjb29yZF9jaGVjayhjb29yZCkpOwor
fQorCisvKiBJbml0aWFsaXplIGEgY29vcmRpbmF0ZSB0byBhZnRlciB0aGUgbGFzdCBpdGVtLiBJ
ZiB0aGUgbm9kZSBpcyBlbXB0eSwgaXQgaXMKKyAgIHBvc2l0aW9uZWQgYXQgdGhlIEVNUFRZX05P
REUuICovCit2b2lkIGNvb3JkX2luaXRfYWZ0ZXJfbGFzdF9pdGVtKGNvb3JkX3QgKmNvb3JkLCBj
b25zdCB6bm9kZSAqIG5vZGUpCit7CisJaW50IGlzX2VtcHR5ID0gbm9kZV9pc19lbXB0eShub2Rl
KTsKKworCWNvb3JkX2luaXRfdmFsdWVzKGNvb3JkLCBub2RlLAorCQkJICAoaXNfZW1wdHkgPyAw
IDogbm9kZV9udW1faXRlbXMobm9kZSkgLSAxKSwgMCwKKwkJCSAgKGlzX2VtcHR5ID8gRU1QVFlf
Tk9ERSA6IEFGVEVSX0lURU0pKTsKKworCWFzc2VydCgiam1hY2QtOTgwNCIsIGNvb3JkX2NoZWNr
KGNvb3JkKSk7Cit9CisKKy8qIEluaXRpYWxpemUgYSBjb29yZGluYXRlIHRvIGFmdGVyIGxhc3Qg
dW5pdCBpbiB0aGUgaXRlbS4gQ29vcmQgbXVzdCBiZSBzZXQKKyAgIGFscmVhZHkgdG8gZXhpc3Rp
bmcgaXRlbSAqLwordm9pZCBjb29yZF9pbml0X2FmdGVyX2l0ZW1fZW5kKGNvb3JkX3QgKmNvb3Jk
KQoreworCWNvb3JkLT5iZXR3ZWVuID0gQUZURVJfVU5JVDsKKwljb29yZC0+dW5pdF9wb3MgPSBj
b29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKTsKK30KKworLyogSW5pdGlhbGl6ZSBhIGNvb3JkaW5h
dGUgdG8gYmVmb3JlIHRoZSBpdGVtLiBDb29yZCBtdXN0IGJlIHNldCBhbHJlYWR5IHRvCisgICBl
eGlzdGluZyBpdGVtICovCit2b2lkIGNvb3JkX2luaXRfYmVmb3JlX2l0ZW0oY29vcmRfdCAqY29v
cmQpCit7CisJY29vcmQtPnVuaXRfcG9zID0gMDsKKwljb29yZC0+YmV0d2VlbiA9IEJFRk9SRV9J
VEVNOworfQorCisvKiBJbml0aWFsaXplIGEgY29vcmRpbmF0ZSB0byBhZnRlciB0aGUgaXRlbS4g
Q29vcmQgbXVzdCBiZSBzZXQgYWxyZWFkeSB0bworICAgZXhpc3RpbmcgaXRlbSAqLwordm9pZCBj
b29yZF9pbml0X2FmdGVyX2l0ZW0oY29vcmRfdCAqY29vcmQpCit7CisJY29vcmQtPnVuaXRfcG9z
ID0gMDsKKwljb29yZC0+YmV0d2VlbiA9IEFGVEVSX0lURU07Cit9CisKKy8qIEluaXRpYWxpemUg
YSBjb29yZGluYXRlIGJ5IDBzLiBVc2VkIGluIHBsYWNlcyB3aGVyZSBpbml0X2Nvb3JkIHdhcyB1
c2VkIGFuZAorICAgaXQgd2FzIG5vdCBjbGVhciBob3cgYWN0dWFsbHkgKi8KK3ZvaWQgY29vcmRf
aW5pdF96ZXJvKGNvb3JkX3QgKmNvb3JkKQoreworCW1lbXNldChjb29yZCwgMCwgc2l6ZW9mKCpj
b29yZCkpOworfQorCisvKiBSZXR1cm4gdGhlIG51bWJlciBvZiB1bml0cyBhdCB0aGUgcHJlc2Vu
dCBpdGVtLgorICAgQXNzZXJ0cyBjb29yZF9pc19leGlzdGluZ19pdGVtKCkuICovCit1bnNpZ25l
ZCBjb29yZF9udW1fdW5pdHMoY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJYXNzZXJ0KCJqbWFj
ZC05ODA2IiwgY29vcmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkpOworCisJcmV0dXJuIGl0ZW1f
cGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+Yi5ucl91bml0cyhjb29yZCk7Cit9CisKKy8qIFJldHVy
bnMgdHJ1ZSBpZiB0aGUgY29vcmQgd2FzIGluaXRpYWxpemV3ZCBieSBjb29yZF9pbml0X2ludmFs
aWQgKCkuICovCisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjE1KSAqLworaW50IGNvb3Jk
X2lzX2ludmFsaWQoY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJcmV0dXJuIGNvb3JkLT5iZXR3
ZWVuID09IElOVkFMSURfQ09PUkQ7Cit9CisKKy8qIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29vcmRp
bmF0ZSBpcyBwb3NpdGlvbmVkIGF0IGFuIGV4aXN0aW5nIGl0ZW0sIG5vdCBiZWZvcmUKKyAgIG9y
IGFmdGVyIGFuIGl0ZW0uICBJdCBtYXkgYmUgcGxhY2VkIGF0LCBiZWZvcmUsIG9yIGFmdGVyIGFu
eSB1bml0IHdpdGhpbiB0aGUKKyAgIGl0ZW0sIHdoZXRoZXIgZXhpc3Rpbmcgb3Igbm90LiAqLwor
aW50IGNvb3JkX2lzX2V4aXN0aW5nX2l0ZW0oY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJc3dp
dGNoIChjb29yZC0+YmV0d2VlbikgeworCWNhc2UgRU1QVFlfTk9ERToKKwljYXNlIEJFRk9SRV9J
VEVNOgorCWNhc2UgQUZURVJfSVRFTToKKwljYXNlIElOVkFMSURfQ09PUkQ6CisJCXJldHVybiAw
OworCisJY2FzZSBCRUZPUkVfVU5JVDoKKwljYXNlIEFUX1VOSVQ6CisJY2FzZSBBRlRFUl9VTklU
OgorCQlyZXR1cm4gY29vcmQtPml0ZW1fcG9zIDwgY29vcmRfbnVtX2l0ZW1zKGNvb3JkKTsKKwl9
CisKKwlpbXBvc3NpYmxlKCJqbWFjZC05OTAwIiwgInVucmVhY2hhYmxlIGNvb3JkOiAlcCIsIGNv
b3JkKTsKKwlyZXR1cm4gMDsKK30KKworLyogUmV0dXJucyB0cnVlIGlmIHRoZSBjb29yZGluYXRl
IGlzIHBvc2l0aW9uZWQgYXQgYW4gZXhpc3RpbmcgdW5pdCwgbm90IGJlZm9yZQorICAgb3IgYWZ0
ZXIgYSB1bml0LiAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNSkgKi8KK2ludCBj
b29yZF9pc19leGlzdGluZ191bml0KGNvbnN0IGNvb3JkX3QgKmNvb3JkKQoreworCXN3aXRjaCAo
Y29vcmQtPmJldHdlZW4pIHsKKwljYXNlIEVNUFRZX05PREU6CisJY2FzZSBCRUZPUkVfVU5JVDoK
KwljYXNlIEFGVEVSX1VOSVQ6CisJY2FzZSBCRUZPUkVfSVRFTToKKwljYXNlIEFGVEVSX0lURU06
CisJY2FzZSBJTlZBTElEX0NPT1JEOgorCQlyZXR1cm4gMDsKKworCWNhc2UgQVRfVU5JVDoKKwkJ
cmV0dXJuIChjb29yZC0+aXRlbV9wb3MgPCBjb29yZF9udW1faXRlbXMoY29vcmQpCisJCQkmJiBj
b29yZC0+dW5pdF9wb3MgPCBjb29yZF9udW1fdW5pdHMoY29vcmQpKTsKKwl9CisKKwlpbXBvc3Np
YmxlKCJqbWFjZC05OTAyIiwgInVucmVhY2hhYmxlIik7CisJcmV0dXJuIDA7Cit9CisKKy8qIFJl
dHVybnMgdHJ1ZSBpZiB0aGUgY29vcmRpbmF0ZSBpcyBwb3NpdGlvbmVkIGF0IHRoZSBmaXJzdCB1
bml0IG9mIHRoZSBmaXJzdAorICAgaXRlbS4gTm90IHRydWUgZm9yIGVtcHR5IG5vZGVzIG5vciBj
b29yZGluYXRlcyBwb3NpdGlvbmVkIGJlZm9yZSB0aGUgZmlyc3QKKyAgIGl0ZW0uICovCisvKiBB
dWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjE1KSAqLworaW50IGNvb3JkX2lzX2xlZnRtb3N0X3Vu
aXQoY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJcmV0dXJuIChjb29yZC0+YmV0d2VlbiA9PSBB
VF9VTklUICYmIGNvb3JkLT5pdGVtX3BvcyA9PSAwCisJCSYmIGNvb3JkLT51bml0X3BvcyA9PSAw
KTsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIEZvciBhc3NlcnRpb25zIG9ubHksIGNoZWNr
cyBmb3IgYSB2YWxpZCBjb29yZGluYXRlLiAqLworaW50IGNvb3JkX2NoZWNrKGNvbnN0IGNvb3Jk
X3QgKmNvb3JkKQoreworCWlmIChjb29yZC0+bm9kZSA9PSBOVUxMKQorCQlyZXR1cm4gMDsKKwlp
ZiAoem5vZGVfYWJvdmVfcm9vdChjb29yZC0+bm9kZSkpCisJCXJldHVybiAxOworCisJc3dpdGNo
IChjb29yZC0+YmV0d2VlbikgeworCWRlZmF1bHQ6CisJY2FzZSBJTlZBTElEX0NPT1JEOgorCQly
ZXR1cm4gMDsKKwljYXNlIEVNUFRZX05PREU6CisJCWlmICghbm9kZV9pc19lbXB0eShjb29yZC0+
bm9kZSkpCisJCQlyZXR1cm4gMDsKKwkJcmV0dXJuIGNvb3JkLT5pdGVtX3BvcyA9PSAwICYmIGNv
b3JkLT51bml0X3BvcyA9PSAwOworCisJY2FzZSBCRUZPUkVfVU5JVDoKKwljYXNlIEFGVEVSX1VO
SVQ6CisJCWlmIChub2RlX2lzX2VtcHR5KGNvb3JkLT5ub2RlKSAmJiAoY29vcmQtPml0ZW1fcG9z
ID09IDApCisJCSAgICAmJiAoY29vcmQtPnVuaXRfcG9zID09IDApKQorCQkJcmV0dXJuIDE7CisJ
Y2FzZSBBVF9VTklUOgorCQlicmVhazsKKwljYXNlIEFGVEVSX0lURU06CisJY2FzZSBCRUZPUkVf
SVRFTToKKwkJLyogYmVmb3JlL2FmdGVyIGl0ZW0gc2hvdWxkIG5vdCBzZXQgdW5pdF9wb3MuICov
CisJCWlmIChjb29yZC0+dW5pdF9wb3MgIT0gMCkKKwkJCXJldHVybiAwOworCQlicmVhazsKKwl9
CisKKwlpZiAoY29vcmQtPml0ZW1fcG9zID49IG5vZGVfbnVtX2l0ZW1zKGNvb3JkLT5ub2RlKSkK
KwkJcmV0dXJuIDA7CisKKwkvKiBGSVhNRS1WUzogd2UgYXJlIGdvaW5nIHRvIGNoZWNrIHVuaXRf
cG9zLiBUaGlzIG1ha2VzIG5vIHNlbnNlIHdoZW4KKwkgICBiZXR3ZWVuIGlzIHNldCBlaXRoZXIg
QUZURVJfSVRFTSBvciBCRUZPUkVfSVRFTSAqLworCWlmIChjb29yZC0+YmV0d2VlbiA9PSBBRlRF
Ul9JVEVNIHx8IGNvb3JkLT5iZXR3ZWVuID09IEJFRk9SRV9JVEVNKQorCQlyZXR1cm4gMTsKKwor
CWlmIChjb29yZF9pc19pcGx1Z19zZXQoY29vcmQpICYmCisJICAgIGNvb3JkLT51bml0X3BvcyA+
CisJICAgIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+Yi5ucl91bml0cyhjb29yZCkgLSAx
KQorCQlyZXR1cm4gMDsKKwlyZXR1cm4gMTsKK30KKyNlbmRpZgorCisvKiBBZGp1c3QgY29vcmRp
bmF0ZSBib3VuZGFyaWVzIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgaXRlbXMgcHJpb3IgdG8KKyAg
IGNvb3JkX25leHQvcHJldi4gUmV0dXJucyAxIGlmIHRoZSBuZXcgcG9zaXRpb24gaXMgZG9lcyBu
b3QgZXhpc3QuICovCitzdGF0aWMgaW50IGNvb3JkX2FkanVzdF9pdGVtcyhjb29yZF90ICpjb29y
ZCwgdW5zaWduZWQgaXRlbXMsIGludCBpc19uZXh0KQoreworCS8qIElmIHRoZSBub2RlIGlzIGlu
dmFsaWQsIGxlYXZlIGl0LiAqLworCWlmIChjb29yZC0+YmV0d2VlbiA9PSBJTlZBTElEX0NPT1JE
KQorCQlyZXR1cm4gMTsKKworCS8qIElmIHRoZSBub2RlIGlzIGVtcHR5LCBzZXQgaXQgYXBwcm9w
cmlhdGVseS4gKi8KKwlpZiAoaXRlbXMgPT0gMCkgeworCQljb29yZC0+YmV0d2VlbiA9IEVNUFRZ
X05PREU7CisJCWNvb3JkX3NldF9pdGVtX3Bvcyhjb29yZCwgMCk7CisJCWNvb3JkLT51bml0X3Bv
cyA9IDA7CisJCXJldHVybiAxOworCX0KKworCS8qIElmIGl0IHdhcyBlbXB0eSBhbmQgaXQgbm8g
bG9uZ2VyIGlzLCBzZXQgdG8gQkVGT1JFL0FGVEVSX0lURU0uICovCisJaWYgKGNvb3JkLT5iZXR3
ZWVuID09IEVNUFRZX05PREUpIHsKKwkJY29vcmQtPmJldHdlZW4gPSAoaXNfbmV4dCA/IEJFRk9S
RV9JVEVNIDogQUZURVJfSVRFTSk7CisJCWNvb3JkX3NldF9pdGVtX3Bvcyhjb29yZCwgMCk7CisJ
CWNvb3JkLT51bml0X3BvcyA9IDA7CisJCXJldHVybiAwOworCX0KKworCS8qIElmIHRoZSBpdGVt
X3BvcyBpcyBvdXQtb2YtcmFuZ2UsIHNldCBpdCBhcHByb3ByaWF0bHkuICovCisJaWYgKGNvb3Jk
LT5pdGVtX3BvcyA+PSBpdGVtcykgeworCQljb29yZC0+YmV0d2VlbiA9IEFGVEVSX0lURU07CisJ
CWNvb3JkX3NldF9pdGVtX3Bvcyhjb29yZCwgaXRlbXMgLSAxKTsKKwkJY29vcmQtPnVuaXRfcG9z
ID0gMDsKKwkJLyogSWYgaXNfbmV4dCwgcmV0dXJuIDEgKGNhbid0IGdvIGFueSBmdXJ0aGVyKS4g
Ki8KKwkJcmV0dXJuIGlzX25leHQ7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIEFkdmFuY2Vz
IHRoZSBjb29yZGluYXRlIGJ5IG9uZSB1bml0IHRvIHRoZSByaWdodC4gIElmIGVtcHR5LCBubyBj
aGFuZ2UuICBJZgorICAgY29vcmRfaXNfcmlnaHRtb3N0X3VuaXQsIGFkdmFuY2VzIHRvIEFGVEVS
IFRIRSBMQVNUIElURU0uICBSZXR1cm5zIDAgaWYgbmV3CisgICBwb3NpdGlvbiBpcyBhbiBleGlz
dGluZyB1bml0LiAqLworaW50IGNvb3JkX25leHRfdW5pdChjb29yZF90ICpjb29yZCkKK3sKKwl1
bnNpZ25lZCBpdGVtcyA9IGNvb3JkX251bV9pdGVtcyhjb29yZCk7CisKKwlpZiAoY29vcmRfYWRq
dXN0X2l0ZW1zKGNvb3JkLCBpdGVtcywgMSkgPT0gMSkKKwkJcmV0dXJuIDE7CisKKwlzd2l0Y2gg
KGNvb3JkLT5iZXR3ZWVuKSB7CisJY2FzZSBCRUZPUkVfVU5JVDoKKwkJLyogTm93IGl0IGlzIHBv
c2l0aW9uZWQgYXQgdGhlIHNhbWUgdW5pdC4gKi8KKwkJY29vcmQtPmJldHdlZW4gPSBBVF9VTklU
OworCQlyZXR1cm4gMDsKKworCWNhc2UgQUZURVJfVU5JVDoKKwljYXNlIEFUX1VOSVQ6CisJCS8q
IElmIGl0IHdhcyBhdCBvciBhZnRlciBhIHVuaXQgYW5kIHRoZXJlIGFyZSBtb3JlIHVuaXRzIGlu
IHRoaXMKKwkJICAgaXRlbSwgYWR2YW5jZSB0byB0aGUgbmV4dCBvbmUuICovCisJCWlmIChjb29y
ZC0+dW5pdF9wb3MgPCBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKSkgeworCQkJY29vcmQtPnVu
aXRfcG9zICs9IDE7CisJCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCQlyZXR1cm4gMDsK
KwkJfQorCisJCS8qIE90aGVyd2lzZSwgaXQgaXMgY3Jvc3NpbmcgYW4gaXRlbSBib3VuZGFyeSBh
bmQgdHJlYXRlZCBhcyBpZgorCQkgICBpdCB3YXMgYWZ0ZXIgdGhlIGN1cnJlbnQgaXRlbS4gKi8K
KwkJY29vcmQtPmJldHdlZW4gPSBBRlRFUl9JVEVNOworCQljb29yZC0+dW5pdF9wb3MgPSAwOwor
CQkvKiBGQUxMVEhST1VHSCAqLworCisJY2FzZSBBRlRFUl9JVEVNOgorCQkvKiBDaGVjayBmb3Ig
ZW5kLW9mLW5vZGUuICovCisJCWlmIChjb29yZC0+aXRlbV9wb3MgPT0gaXRlbXMgLSAxKQorCQkJ
cmV0dXJuIDE7CisKKwkJY29vcmRfaW5jX2l0ZW1fcG9zKGNvb3JkKTsKKwkJY29vcmQtPnVuaXRf
cG9zID0gMDsKKwkJY29vcmQtPmJldHdlZW4gPSBBVF9VTklUOworCQlyZXR1cm4gMDsKKworCWNh
c2UgQkVGT1JFX0lURU06CisJCS8qIFRoZSBhZGp1c3RfaXRlbXMgY2hlY2tzIGVuc3VyZSB0aGF0
IHdlIGFyZSB2YWxpZCBoZXJlLiAqLworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQljb29yZC0+
YmV0d2VlbiA9IEFUX1VOSVQ7CisJCXJldHVybiAwOworCisJY2FzZSBJTlZBTElEX0NPT1JEOgor
CWNhc2UgRU1QVFlfTk9ERToKKwkJLyogSGFuZGxlZCBpbiBjb29yZF9hZGp1c3RfaXRlbXMoKS4g
Ki8KKwkJYnJlYWs7CisJfQorCisJaW1wb3NzaWJsZSgiam1hY2QtOTkwMiIsICJ1bnJlYWNoYWJs
ZSIpOworCXJldHVybiAwOworfQorCisvKiBBZHZhbmNlcyB0aGUgY29vcmRpbmF0ZSBieSBvbmUg
aXRlbSB0byB0aGUgcmlnaHQuICBJZiBlbXB0eSwgbm8gY2hhbmdlLiAgSWYKKyAgIGNvb3JkX2lz
X3JpZ2h0bW9zdF91bml0LCBhZHZhbmNlcyB0byBBRlRFUiBUSEUgTEFTVCBJVEVNLiAgUmV0dXJu
cyAwIGlmIG5ldworICAgcG9zaXRpb24gaXMgYW4gZXhpc3RpbmcgaXRlbS4gKi8KK2ludCBjb29y
ZF9uZXh0X2l0ZW0oY29vcmRfdCAqY29vcmQpCit7CisJdW5zaWduZWQgaXRlbXMgPSBjb29yZF9u
dW1faXRlbXMoY29vcmQpOworCisJaWYgKGNvb3JkX2FkanVzdF9pdGVtcyhjb29yZCwgaXRlbXMs
IDEpID09IDEpCisJCXJldHVybiAxOworCisJc3dpdGNoIChjb29yZC0+YmV0d2VlbikgeworCWNh
c2UgQUZURVJfVU5JVDoKKwljYXNlIEFUX1VOSVQ6CisJY2FzZSBCRUZPUkVfVU5JVDoKKwljYXNl
IEFGVEVSX0lURU06CisJCS8qIENoZWNrIGZvciBlbmQtb2Ytbm9kZS4gKi8KKwkJaWYgKGNvb3Jk
LT5pdGVtX3BvcyA9PSBpdGVtcyAtIDEpIHsKKwkJCWNvb3JkLT5iZXR3ZWVuID0gQUZURVJfSVRF
TTsKKwkJCWNvb3JkLT51bml0X3BvcyA9IDA7CisJCQljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7
CisJCQlyZXR1cm4gMTsKKwkJfQorCisJCS8qIEFueXdoZXJlIGluIGFuIGl0ZW0sIGdvIHRvIHRo
ZSBuZXh0IG9uZS4gKi8KKwkJY29vcmQtPmJldHdlZW4gPSBBVF9VTklUOworCQljb29yZF9pbmNf
aXRlbV9wb3MoY29vcmQpOworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQlyZXR1cm4gMDsKKwor
CWNhc2UgQkVGT1JFX0lURU06CisJCS8qIFRoZSBvdXQtb2YtcmFuZ2UgY2hlY2sgZW5zdXJlcyB0
aGF0IHdlIGFyZSB2YWxpZCBoZXJlLiAqLworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQljb29y
ZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCXJldHVybiAwOworCWNhc2UgSU5WQUxJRF9DT09SRDoK
KwljYXNlIEVNUFRZX05PREU6CisJCS8qIEhhbmRsZWQgaW4gY29vcmRfYWRqdXN0X2l0ZW1zKCku
ICovCisJCWJyZWFrOworCX0KKworCWltcG9zc2libGUoImptYWNkLTk5MDMiLCAidW5yZWFjaGFi
bGUiKTsKKwlyZXR1cm4gMDsKK30KKworLyogQWR2YW5jZXMgdGhlIGNvb3JkaW5hdGUgYnkgb25l
IHVuaXQgdG8gdGhlIGxlZnQuICBJZiBlbXB0eSwgbm8gY2hhbmdlLiAgSWYKKyAgIGNvb3JkX2lz
X2xlZnRtb3N0X3VuaXQsIGFkdmFuY2VzIHRvIEJFRk9SRSBUSEUgRklSU1QgSVRFTS4gIFJldHVy
bnMgMCBpZiBuZXcKKyAgIHBvc2l0aW9uIGlzIGFuIGV4aXN0aW5nIHVuaXQuICovCitpbnQgY29v
cmRfcHJldl91bml0KGNvb3JkX3QgKmNvb3JkKQoreworCXVuc2lnbmVkIGl0ZW1zID0gY29vcmRf
bnVtX2l0ZW1zKGNvb3JkKTsKKworCWlmIChjb29yZF9hZGp1c3RfaXRlbXMoY29vcmQsIGl0ZW1z
LCAwKSA9PSAxKQorCQlyZXR1cm4gMTsKKworCXN3aXRjaCAoY29vcmQtPmJldHdlZW4pIHsKKwlj
YXNlIEFUX1VOSVQ6CisJY2FzZSBCRUZPUkVfVU5JVDoKKwkJaWYgKGNvb3JkLT51bml0X3BvcyA+
IDApIHsKKwkJCWNvb3JkLT51bml0X3BvcyAtPSAxOworCQkJY29vcmQtPmJldHdlZW4gPSBBVF9V
TklUOworCQkJcmV0dXJuIDA7CisJCX0KKworCQlpZiAoY29vcmQtPml0ZW1fcG9zID09IDApIHsK
KwkJCWNvb3JkLT5iZXR3ZWVuID0gQkVGT1JFX0lURU07CisJCQlyZXR1cm4gMTsKKwkJfQorCisJ
CWNvb3JkX2RlY19pdGVtX3Bvcyhjb29yZCk7CisJCWNvb3JkLT51bml0X3BvcyA9IGNvb3JkX2xh
c3RfdW5pdF9wb3MoY29vcmQpOworCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCXJldHVy
biAwOworCisJY2FzZSBBRlRFUl9VTklUOgorCQkvKiBXaGF0IGlmIHVuaXRfcG9zIGlzIG91dC1v
Zi1yYW5nZT8gKi8KKwkJYXNzZXJ0KCJqbWFjZC01NDQyIiwKKwkJICAgICAgIGNvb3JkLT51bml0
X3BvcyA8PSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKSk7CisJCWNvb3JkLT5iZXR3ZWVuID0g
QVRfVU5JVDsKKwkJcmV0dXJuIDA7CisKKwljYXNlIEJFRk9SRV9JVEVNOgorCQlpZiAoY29vcmQt
Pml0ZW1fcG9zID09IDApCisJCQlyZXR1cm4gMTsKKworCQljb29yZF9kZWNfaXRlbV9wb3MoY29v
cmQpOworCQkvKiBGQUxMVEhST1VHSCAqLworCisJY2FzZSBBRlRFUl9JVEVNOgorCQljb29yZC0+
YmV0d2VlbiA9IEFUX1VOSVQ7CisJCWNvb3JkLT51bml0X3BvcyA9IGNvb3JkX2xhc3RfdW5pdF9w
b3MoY29vcmQpOworCQlyZXR1cm4gMDsKKworCWNhc2UgSU5WQUxJRF9DT09SRDoKKwljYXNlIEVN
UFRZX05PREU6CisJCWJyZWFrOworCX0KKworCWltcG9zc2libGUoImptYWNkLTk5MDQiLCAidW5y
ZWFjaGFibGUiKTsKKwlyZXR1cm4gMDsKK30KKworLyogQWR2YW5jZXMgdGhlIGNvb3JkaW5hdGUg
Ynkgb25lIGl0ZW0gdG8gdGhlIGxlZnQuICBJZiBlbXB0eSwgbm8gY2hhbmdlLiAgSWYKKyAgIGNv
b3JkX2lzX2xlZnRtb3N0X3VuaXQsIGFkdmFuY2VzIHRvIEJFRk9SRSBUSEUgRklSU1QgSVRFTS4g
IFJldHVybnMgMCBpZiBuZXcKKyAgIHBvc2l0aW9uIGlzIGFuIGV4aXN0aW5nIGl0ZW0uICovCitp
bnQgY29vcmRfcHJldl9pdGVtKGNvb3JkX3QgKmNvb3JkKQoreworCXVuc2lnbmVkIGl0ZW1zID0g
Y29vcmRfbnVtX2l0ZW1zKGNvb3JkKTsKKworCWlmIChjb29yZF9hZGp1c3RfaXRlbXMoY29vcmQs
IGl0ZW1zLCAwKSA9PSAxKQorCQlyZXR1cm4gMTsKKworCXN3aXRjaCAoY29vcmQtPmJldHdlZW4p
IHsKKwljYXNlIEFUX1VOSVQ6CisJY2FzZSBBRlRFUl9VTklUOgorCWNhc2UgQkVGT1JFX1VOSVQ6
CisJY2FzZSBCRUZPUkVfSVRFTToKKworCQlpZiAoY29vcmQtPml0ZW1fcG9zID09IDApIHsKKwkJ
CWNvb3JkLT5iZXR3ZWVuID0gQkVGT1JFX0lURU07CisJCQljb29yZC0+dW5pdF9wb3MgPSAwOwor
CQkJcmV0dXJuIDE7CisJCX0KKworCQljb29yZF9kZWNfaXRlbV9wb3MoY29vcmQpOworCQljb29y
ZC0+dW5pdF9wb3MgPSAwOworCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCXJldHVybiAw
OworCisJY2FzZSBBRlRFUl9JVEVNOgorCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCWNv
b3JkLT51bml0X3BvcyA9IDA7CisJCXJldHVybiAwOworCisJY2FzZSBJTlZBTElEX0NPT1JEOgor
CWNhc2UgRU1QVFlfTk9ERToKKwkJYnJlYWs7CisJfQorCisJaW1wb3NzaWJsZSgiam1hY2QtOTkw
NSIsICJ1bnJlYWNoYWJsZSIpOworCXJldHVybiAwOworfQorCisvKiBDYWxscyBlaXRoZXIgY29v
cmRfaW5pdF9maXJzdF91bml0IG9yIGNvb3JkX2luaXRfbGFzdF91bml0IGRlcGVuZGluZyBvbgor
ICAgc2lkZW9mIGFyZ3VtZW50LiAqLwordm9pZCBjb29yZF9pbml0X3NpZGVvZl91bml0KGNvb3Jk
X3QgKmNvb3JkLCBjb25zdCB6bm9kZSAqIG5vZGUsIHNpZGVvZiBkaXIpCit7CisJYXNzZXJ0KCJq
bWFjZC05ODIxIiwgZGlyID09IExFRlRfU0lERSB8fCBkaXIgPT0gUklHSFRfU0lERSk7CisJaWYg
KGRpciA9PSBMRUZUX1NJREUpIHsKKwkJY29vcmRfaW5pdF9maXJzdF91bml0KGNvb3JkLCBub2Rl
KTsKKwl9IGVsc2UgeworCQljb29yZF9pbml0X2xhc3RfdW5pdChjb29yZCwgbm9kZSk7CisJfQor
fQorCisvKiBDYWxscyBlaXRoZXIgY29vcmRfaXNfYmVmb3JlX2xlZnRtb3N0IG9yIGNvb3JkX2lz
X2FmdGVyX3JpZ2h0bW9zdCBkZXBlbmRpbmcKKyAgIG9uIHNpZGVvZiBhcmd1bWVudC4gKi8KKy8q
IEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTUpICovCitpbnQgY29vcmRfaXNfYWZ0ZXJfc2lk
ZW9mX3VuaXQoY29vcmRfdCAqY29vcmQsIHNpZGVvZiBkaXIpCit7CisJYXNzZXJ0KCJqbWFjZC05
ODIyIiwgZGlyID09IExFRlRfU0lERSB8fCBkaXIgPT0gUklHSFRfU0lERSk7CisJaWYgKGRpciA9
PSBMRUZUX1NJREUpIHsKKwkJcmV0dXJuIGNvb3JkX2lzX2JlZm9yZV9sZWZ0bW9zdChjb29yZCk7
CisJfSBlbHNlIHsKKwkJcmV0dXJuIGNvb3JkX2lzX2FmdGVyX3JpZ2h0bW9zdChjb29yZCk7CisJ
fQorfQorCisvKiBDYWxscyBlaXRoZXIgY29vcmRfbmV4dF91bml0IG9yIGNvb3JkX3ByZXZfdW5p
dCBkZXBlbmRpbmcgb24gc2lkZW9mIGFyZ3VtZW50LgorICovCisvKiBBdWRpdGVkIGJ5OiBncmVl
bigyMDAyLjA2LjE1KSAqLworaW50IGNvb3JkX3NpZGVvZl91bml0KGNvb3JkX3QgKmNvb3JkLCBz
aWRlb2YgZGlyKQoreworCWFzc2VydCgiam1hY2QtOTgyMyIsIGRpciA9PSBMRUZUX1NJREUgfHwg
ZGlyID09IFJJR0hUX1NJREUpOworCWlmIChkaXIgPT0gTEVGVF9TSURFKSB7CisJCXJldHVybiBj
b29yZF9wcmV2X3VuaXQoY29vcmQpOworCX0gZWxzZSB7CisJCXJldHVybiBjb29yZF9uZXh0X3Vu
aXQoY29vcmQpOworCX0KK30KKworI2lmIFJFSVNFUjRfREVCVUcKK2ludCBjb29yZHNfZXF1YWwo
Y29uc3QgY29vcmRfdCAqYzEsIGNvbnN0IGNvb3JkX3QgKmMyKQoreworCWFzc2VydCgibmlraXRh
LTI4NDAiLCBjMSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yODQxIiwgYzIgIT0gTlVMTCk7
CisKKwlyZXR1cm4KKwkgICAgYzEtPm5vZGUgPT0gYzItPm5vZGUgJiYKKwkgICAgYzEtPml0ZW1f
cG9zID09IGMyLT5pdGVtX3BvcyAmJgorCSAgICBjMS0+dW5pdF9wb3MgPT0gYzItPnVuaXRfcG9z
ICYmIGMxLT5iZXR3ZWVuID09IGMyLT5iZXR3ZWVuOworfQorI2VuZGlmICAvKiAgUkVJU0VSNF9E
RUJVRyAgKi8KKworLyogSWYgY29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0IHJldHVybiBOQ09PUkRf
T05fVEhFX1JJR0hULCBpZgorICAgY29vcmRfaXNfYWZ0ZXJfbGVmdG1vc3QgcmV0dXJuIE5DT09S
RF9PTl9USEVfTEVGVCwgb3RoZXJ3aXNlIHJldHVybgorICAgTkNPT1JEX0lOU0lERS4gKi8KKy8q
IEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTUpICovCitjb29yZF93cnRfbm9kZSBjb29yZF93
cnQoY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJaWYgKGNvb3JkX2lzX2JlZm9yZV9sZWZ0bW9z
dChjb29yZCkpCisJCXJldHVybiBDT09SRF9PTl9USEVfTEVGVDsKKworCWlmIChjb29yZF9pc19h
ZnRlcl9yaWdodG1vc3QoY29vcmQpKQorCQlyZXR1cm4gQ09PUkRfT05fVEhFX1JJR0hUOworCisJ
cmV0dXJuIENPT1JEX0lOU0lERTsKK30KKworLyogUmV0dXJucyB0cnVlIGlmIHRoZSBjb29yZGlu
YXRlIGlzIHBvc2l0aW9uZWQgYWZ0ZXIgdGhlIGxhc3QgaXRlbSBvciBhZnRlciB0aGUKKyAgIGxh
c3QgdW5pdCBvZiB0aGUgbGFzdCBpdGVtIG9yIGl0IGlzIGFuIGVtcHR5IG5vZGUuICovCisvKiBB
dWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjE1KSAqLworaW50IGNvb3JkX2lzX2FmdGVyX3JpZ2h0
bW9zdChjb25zdCBjb29yZF90ICpjb29yZCkKK3sKKwlhc3NlcnQoImptYWNkLTczMTMiLCBjb29y
ZF9jaGVjayhjb29yZCkpOworCisJc3dpdGNoIChjb29yZC0+YmV0d2VlbikgeworCWNhc2UgSU5W
QUxJRF9DT09SRDoKKwljYXNlIEFUX1VOSVQ6CisJY2FzZSBCRUZPUkVfVU5JVDoKKwljYXNlIEJF
Rk9SRV9JVEVNOgorCQlyZXR1cm4gMDsKKworCWNhc2UgRU1QVFlfTk9ERToKKwkJcmV0dXJuIDE7
CisKKwljYXNlIEFGVEVSX0lURU06CisJCXJldHVybiAoY29vcmQtPml0ZW1fcG9zID09IG5vZGVf
bnVtX2l0ZW1zKGNvb3JkLT5ub2RlKSAtIDEpOworCisJY2FzZSBBRlRFUl9VTklUOgorCQlyZXR1
cm4gKChjb29yZC0+aXRlbV9wb3MgPT0gbm9kZV9udW1faXRlbXMoY29vcmQtPm5vZGUpIC0gMSkg
JiYKKwkJCWNvb3JkLT51bml0X3BvcyA9PSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKSk7CisJ
fQorCisJaW1wb3NzaWJsZSgiam1hY2QtOTkwOCIsICJ1bnJlYWNoYWJsZSIpOworCXJldHVybiAw
OworfQorCisvKiBSZXR1cm5zIHRydWUgaWYgdGhlIGNvb3JkaW5hdGUgaXMgcG9zaXRpb25lZCBi
ZWZvcmUgdGhlIGZpcnN0IGl0ZW0gb3IgaXQgaXMKKyAgIGFuIGVtcHR5IG5vZGUuICovCitpbnQg
Y29vcmRfaXNfYmVmb3JlX2xlZnRtb3N0KGNvbnN0IGNvb3JkX3QgKmNvb3JkKQoreworCS8qIEZJ
WE1FLVZTOiBjb29yZF9jaGVjayByZXF1aXJlcyBub2RlIHRvIGJlIGxvYWRlZCB3aGVyZWFzIGl0
IGlzIG5vdAorCSAgIG5lY2Vzc2FyeSB0byBjaGVjayBpZiBjb29yZCBpcyBzZXQgYmVmb3JlIGxl
ZnRtb3N0CisJICAgYXNzZXJ0ICgiam1hY2QtNzMxMyIsIGNvb3JkX2NoZWNrIChjb29yZCkpOyAq
LworCXN3aXRjaCAoY29vcmQtPmJldHdlZW4pIHsKKwljYXNlIElOVkFMSURfQ09PUkQ6CisJY2Fz
ZSBBVF9VTklUOgorCWNhc2UgQUZURVJfSVRFTToKKwljYXNlIEFGVEVSX1VOSVQ6CisJCXJldHVy
biAwOworCisJY2FzZSBFTVBUWV9OT0RFOgorCQlyZXR1cm4gMTsKKworCWNhc2UgQkVGT1JFX0lU
RU06CisJY2FzZSBCRUZPUkVfVU5JVDoKKwkJcmV0dXJuIChjb29yZC0+aXRlbV9wb3MgPT0gMCkg
JiYgKGNvb3JkLT51bml0X3BvcyA9PSAwKTsKKwl9CisKKwlpbXBvc3NpYmxlKCJqbWFjZC05OTA4
IiwgInVucmVhY2hhYmxlIik7CisJcmV0dXJuIDA7Cit9CisKKy8qIFJldHVybnMgdHJ1ZSBpZiB0
aGUgY29vcmRpbmF0ZSBpcyBwb3NpdGlvbmVkIGFmdGVyIGEgaXRlbSwgYmVmb3JlIGEgaXRlbSwK
KyAgIGFmdGVyIHRoZSBsYXN0IHVuaXQgb2YgYW4gaXRlbSwgYmVmb3JlIHRoZSBmaXJzdCB1bml0
IG9mIGFuIGl0ZW0sIG9yIGF0IGFuCisgICBlbXB0eSBub2RlLiAqLworLyogQXVkaXRlZCBieTog
Z3JlZW4oMjAwMi4wNi4xNSkgKi8KK2ludCBjb29yZF9pc19iZXR3ZWVuX2l0ZW1zKGNvbnN0IGNv
b3JkX3QgKmNvb3JkKQoreworCWFzc2VydCgiam1hY2QtNzMxMyIsIGNvb3JkX2NoZWNrKGNvb3Jk
KSk7CisKKwlzd2l0Y2ggKGNvb3JkLT5iZXR3ZWVuKSB7CisJY2FzZSBJTlZBTElEX0NPT1JEOgor
CWNhc2UgQVRfVU5JVDoKKwkJcmV0dXJuIDA7CisKKwljYXNlIEFGVEVSX0lURU06CisJY2FzZSBC
RUZPUkVfSVRFTToKKwljYXNlIEVNUFRZX05PREU6CisJCXJldHVybiAxOworCisJY2FzZSBCRUZP
UkVfVU5JVDoKKwkJcmV0dXJuIGNvb3JkLT51bml0X3BvcyA9PSAwOworCisJY2FzZSBBRlRFUl9V
TklUOgorCQlyZXR1cm4gY29vcmQtPnVuaXRfcG9zID09IGNvb3JkX2xhc3RfdW5pdF9wb3MoY29v
cmQpOworCX0KKworCWltcG9zc2libGUoImptYWNkLTk5MDgiLCAidW5yZWFjaGFibGUiKTsKKwly
ZXR1cm4gMDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIFJldHVybnMgdHJ1ZSBpZiB0aGUg
Y29vcmRpbmF0ZXMgYXJlIHBvc2l0aW9uZWQgYXQgYWRqYWNlbnQgdW5pdHMsIHJlZ2FyZGxlc3MK
KyAgIG9mIGJlZm9yZS1hZnRlciBvciBpdGVtIGJvdW5kYXJpZXMuICovCitpbnQgY29vcmRfYXJl
X25laWdoYm9ycyhjb29yZF90ICpjMSwgY29vcmRfdCAqYzIpCit7CisJY29vcmRfdCAqbGVmdDsK
Kwljb29yZF90ICpyaWdodDsKKworCWFzc2VydCgibmlraXRhLTEyNDEiLCBjMSAhPSBOVUxMKTsK
Kwlhc3NlcnQoIm5pa2l0YS0xMjQyIiwgYzIgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTI0
MyIsIGMxLT5ub2RlID09IGMyLT5ub2RlKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjQ0IiwgY29vcmRf
aXNfZXhpc3RpbmdfdW5pdChjMSkpOworCWFzc2VydCgibmlraXRhLTEyNDUiLCBjb29yZF9pc19l
eGlzdGluZ191bml0KGMyKSk7CisKKwlsZWZ0ID0gcmlnaHQgPSBOVUxMOworCXN3aXRjaCAoY29v
cmRfY29tcGFyZShjMSwgYzIpKSB7CisJY2FzZSBDT09SRF9DTVBfT05fTEVGVDoKKwkJbGVmdCA9
IGMxOworCQlyaWdodCA9IGMyOworCQlicmVhazsKKwljYXNlIENPT1JEX0NNUF9PTl9SSUdIVDoK
KwkJbGVmdCA9IGMyOworCQlyaWdodCA9IGMxOworCQlicmVhazsKKwljYXNlIENPT1JEX0NNUF9T
QU1FOgorCQlyZXR1cm4gMDsKKwlkZWZhdWx0OgorCQl3cm9uZ19yZXR1cm5fdmFsdWUoIm5pa2l0
YS0xMjQ2IiwgImNvbXBhcmVfY29vcmRzKCkiKTsKKwl9CisJYXNzZXJ0KCJ2cy03MzEiLCBsZWZ0
ICYmIHJpZ2h0KTsKKwlpZiAobGVmdC0+aXRlbV9wb3MgPT0gcmlnaHQtPml0ZW1fcG9zKSB7CisJ
CXJldHVybiBsZWZ0LT51bml0X3BvcyArIDEgPT0gcmlnaHQtPnVuaXRfcG9zOworCX0gZWxzZSBp
ZiAobGVmdC0+aXRlbV9wb3MgKyAxID09IHJpZ2h0LT5pdGVtX3BvcykgeworCQlyZXR1cm4gKGxl
ZnQtPnVuaXRfcG9zID09IGNvb3JkX2xhc3RfdW5pdF9wb3MobGVmdCkpCisJCSAgICAmJiAocmln
aHQtPnVuaXRfcG9zID09IDApOworCX0gZWxzZSB7CisJCXJldHVybiAwOworCX0KK30KKyNlbmRp
ZiAgLyogIFJFSVNFUjRfREVCVUcgICovCisKKy8qIEFzc3VtaW5nIHR3byBjb29yZGluYXRlcyBh
cmUgcG9zaXRpb25lZCBpbiB0aGUgc2FtZSBub2RlLCByZXR1cm4KKyAgIENPT1JEX0NNUF9PTl9S
SUdIVCwgQ09PUkRfQ01QX09OX0xFRlQsIG9yIENPT1JEX0NNUF9TQU1FIGRlcGVuZGluZyBvbiBj
MSdzCisgICBwb3NpdGlvbiByZWxhdGl2ZSB0byBjMi4gICovCisvKiBBdWRpdGVkIGJ5OiBncmVl
bigyMDAyLjA2LjE1KSAqLworY29vcmRfY21wIGNvb3JkX2NvbXBhcmUoY29vcmRfdCAqYzEsIGNv
b3JkX3QgKmMyKQoreworCWFzc2VydCgidnMtMjA5IiwgYzEtPm5vZGUgPT0gYzItPm5vZGUpOwor
CWFzc2VydCgidnMtMTk0IiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjMSkKKwkgICAgICAgJiYg
Y29vcmRfaXNfZXhpc3RpbmdfdW5pdChjMikpOworCisJaWYgKGMxLT5pdGVtX3BvcyA+IGMyLT5p
dGVtX3BvcykKKwkJcmV0dXJuIENPT1JEX0NNUF9PTl9SSUdIVDsKKwlpZiAoYzEtPml0ZW1fcG9z
IDwgYzItPml0ZW1fcG9zKQorCQlyZXR1cm4gQ09PUkRfQ01QX09OX0xFRlQ7CisJaWYgKGMxLT51
bml0X3BvcyA+IGMyLT51bml0X3BvcykKKwkJcmV0dXJuIENPT1JEX0NNUF9PTl9SSUdIVDsKKwlp
ZiAoYzEtPnVuaXRfcG9zIDwgYzItPnVuaXRfcG9zKQorCQlyZXR1cm4gQ09PUkRfQ01QX09OX0xF
RlQ7CisJcmV0dXJuIENPT1JEX0NNUF9TQU1FOworfQorCisvKiBJZiB0aGUgY29vcmRpbmF0ZSBp
cyBiZXR3ZWVuIGl0ZW1zLCBzaGlmdHMgaXQgdG8gdGhlIHJpZ2h0LiAgUmV0dXJucyAwIG9uCisg
ICBzdWNjZXNzIGFuZCBub24temVybyBpZiB0aGVyZSBpcyBubyBwb3NpdGlvbiB0byB0aGUgcmln
aHQuICovCitpbnQgY29vcmRfc2V0X3RvX3JpZ2h0KGNvb3JkX3QgKmNvb3JkKQoreworCXVuc2ln
bmVkIGl0ZW1zID0gY29vcmRfbnVtX2l0ZW1zKGNvb3JkKTsKKworCWlmIChjb29yZF9hZGp1c3Rf
aXRlbXMoY29vcmQsIGl0ZW1zLCAxKSA9PSAxKQorCQlyZXR1cm4gMTsKKworCXN3aXRjaCAoY29v
cmQtPmJldHdlZW4pIHsKKwljYXNlIEFUX1VOSVQ6CisJCXJldHVybiAwOworCisJY2FzZSBCRUZP
UkVfSVRFTToKKwljYXNlIEJFRk9SRV9VTklUOgorCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7
CisJCXJldHVybiAwOworCisJY2FzZSBBRlRFUl9VTklUOgorCQlpZiAoY29vcmQtPnVuaXRfcG9z
IDwgY29vcmRfbGFzdF91bml0X3Bvcyhjb29yZCkpIHsKKwkJCWNvb3JkLT51bml0X3BvcyArPSAx
OworCQkJY29vcmQtPmJldHdlZW4gPSBBVF9VTklUOworCQkJcmV0dXJuIDA7CisJCX0gZWxzZSB7
CisKKwkJCWNvb3JkLT51bml0X3BvcyA9IDA7CisKKwkJCWlmIChjb29yZC0+aXRlbV9wb3MgPT0g
aXRlbXMgLSAxKSB7CisJCQkJY29vcmQtPmJldHdlZW4gPSBBRlRFUl9JVEVNOworCQkJCXJldHVy
biAxOworCQkJfQorCisJCQljb29yZF9pbmNfaXRlbV9wb3MoY29vcmQpOworCQkJY29vcmQtPmJl
dHdlZW4gPSBBVF9VTklUOworCQkJcmV0dXJuIDA7CisJCX0KKworCWNhc2UgQUZURVJfSVRFTToK
KwkJaWYgKGNvb3JkLT5pdGVtX3BvcyA9PSBpdGVtcyAtIDEpCisJCQlyZXR1cm4gMTsKKworCQlj
b29yZF9pbmNfaXRlbV9wb3MoY29vcmQpOworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQljb29y
ZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCXJldHVybiAwOworCisJY2FzZSBFTVBUWV9OT0RFOgor
CQlyZXR1cm4gMTsKKworCWNhc2UgSU5WQUxJRF9DT09SRDoKKwkJYnJlYWs7CisJfQorCisJaW1w
b3NzaWJsZSgiam1hY2QtOTkyMCIsICJ1bnJlYWNoYWJsZSIpOworCXJldHVybiAwOworfQorCisv
KiBJZiB0aGUgY29vcmRpbmF0ZSBpcyBiZXR3ZWVuIGl0ZW1zLCBzaGlmdHMgaXQgdG8gdGhlIGxl
ZnQuICBSZXR1cm5zIDAgb24KKyAgIHN1Y2Nlc3MgYW5kIG5vbi16ZXJvIGlmIHRoZXJlIGlzIG5v
IHBvc2l0aW9uIHRvIHRoZSBsZWZ0LiAqLworaW50IGNvb3JkX3NldF90b19sZWZ0KGNvb3JkX3Qg
KmNvb3JkKQoreworCXVuc2lnbmVkIGl0ZW1zID0gY29vcmRfbnVtX2l0ZW1zKGNvb3JkKTsKKwor
CWlmIChjb29yZF9hZGp1c3RfaXRlbXMoY29vcmQsIGl0ZW1zLCAwKSA9PSAxKQorCQlyZXR1cm4g
MTsKKworCXN3aXRjaCAoY29vcmQtPmJldHdlZW4pIHsKKwljYXNlIEFUX1VOSVQ6CisJCXJldHVy
biAwOworCisJY2FzZSBBRlRFUl9VTklUOgorCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJ
CXJldHVybiAwOworCisJY2FzZSBBRlRFUl9JVEVNOgorCQljb29yZC0+YmV0d2VlbiA9IEFUX1VO
SVQ7CisJCWNvb3JkLT51bml0X3BvcyA9IGNvb3JkX2xhc3RfdW5pdF9wb3MoY29vcmQpOworCQly
ZXR1cm4gMDsKKworCWNhc2UgQkVGT1JFX1VOSVQ6CisJCWlmIChjb29yZC0+dW5pdF9wb3MgPiAw
KSB7CisJCQljb29yZC0+dW5pdF9wb3MgLT0gMTsKKwkJCWNvb3JkLT5iZXR3ZWVuID0gQVRfVU5J
VDsKKwkJCXJldHVybiAwOworCQl9IGVsc2UgeworCisJCQlpZiAoY29vcmQtPml0ZW1fcG9zID09
IDApIHsKKwkJCQljb29yZC0+YmV0d2VlbiA9IEJFRk9SRV9JVEVNOworCQkJCXJldHVybiAxOwor
CQkJfQorCisJCQljb29yZC0+dW5pdF9wb3MgPSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKTsK
KwkJCWNvb3JkX2RlY19pdGVtX3Bvcyhjb29yZCk7CisJCQljb29yZC0+YmV0d2VlbiA9IEFUX1VO
SVQ7CisJCQlyZXR1cm4gMDsKKwkJfQorCisJY2FzZSBCRUZPUkVfSVRFTToKKwkJaWYgKGNvb3Jk
LT5pdGVtX3BvcyA9PSAwKQorCQkJcmV0dXJuIDE7CisKKwkJY29vcmRfZGVjX2l0ZW1fcG9zKGNv
b3JkKTsKKwkJY29vcmQtPnVuaXRfcG9zID0gY29vcmRfbGFzdF91bml0X3Bvcyhjb29yZCk7CisJ
CWNvb3JkLT5iZXR3ZWVuID0gQVRfVU5JVDsKKwkJcmV0dXJuIDA7CisKKwljYXNlIEVNUFRZX05P
REU6CisJCXJldHVybiAxOworCisJY2FzZSBJTlZBTElEX0NPT1JEOgorCQlicmVhazsKKwl9CisK
KwlpbXBvc3NpYmxlKCJqbWFjZC05OTIwIiwgInVucmVhY2hhYmxlIik7CisJcmV0dXJuIDA7Cit9
CisKK3N0YXRpYyBjb25zdCBjaGFyICpjb29yZF90d2Vlbl90b3N0cmluZyhiZXR3ZWVuX2VudW0g
bikKK3sKKwlzd2l0Y2ggKG4pIHsKKwljYXNlIEJFRk9SRV9VTklUOgorCQlyZXR1cm4gImJlZm9y
ZSB1bml0IjsKKwljYXNlIEJFRk9SRV9JVEVNOgorCQlyZXR1cm4gImJlZm9yZSBpdGVtIjsKKwlj
YXNlIEFUX1VOSVQ6CisJCXJldHVybiAiYXQgdW5pdCI7CisJY2FzZSBBRlRFUl9VTklUOgorCQly
ZXR1cm4gImFmdGVyIHVuaXQiOworCWNhc2UgQUZURVJfSVRFTToKKwkJcmV0dXJuICJhZnRlciBp
dGVtIjsKKwljYXNlIEVNUFRZX05PREU6CisJCXJldHVybiAiZW1wdHkgbm9kZSI7CisJY2FzZSBJ
TlZBTElEX0NPT1JEOgorCQlyZXR1cm4gImludmFsaWQiOworCWRlZmF1bHQ6CisJeworCQlzdGF0
aWMgY2hhciBidWZbMzBdOworCisJCXNwcmludGYoYnVmLCAidW5rbm93bjogJWkiLCBuKTsKKwkJ
cmV0dXJuIGJ1ZjsKKwl9CisJfQorfQorCit2b2lkIHByaW50X2Nvb3JkKGNvbnN0IGNoYXIgKm1l
cywgY29uc3QgY29vcmRfdCAqY29vcmQsIGludCBub2RlKQoreworCWlmIChjb29yZCA9PSBOVUxM
KSB7CisJCXByaW50aygiJXM6IG51bGxcbiIsIG1lcyk7CisJCXJldHVybjsKKwl9CisJcHJpbnRr
KCIlczogaXRlbV9wb3MgPSAlZCwgdW5pdF9wb3MgJWQsIHR3ZWVuPSVzLCBpcGx1Zz0lZFxuIiwK
KwkgICAgICAgbWVzLCBjb29yZC0+aXRlbV9wb3MsIGNvb3JkLT51bml0X3BvcywKKwkgICAgICAg
Y29vcmRfdHdlZW5fdG9zdHJpbmcoY29vcmQtPmJldHdlZW4pLCBjb29yZC0+aXBsdWdpZCk7Cit9
CisKK2ludAoraXRlbV91dG1vc3RfY2hpbGRfcmVhbF9ibG9jayhjb25zdCBjb29yZF90ICpjb29y
ZCwgc2lkZW9mIHNpZGUsCisJCQkgICAgIHJlaXNlcjRfYmxvY2tfbnIgKiBibGspCit7CisJcmV0
dXJuIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+Zi51dG1vc3RfY2hpbGRfcmVhbF9ibG9j
ayhjb29yZCwKKwkJCQkJCQkJICAgICAgc2lkZSwKKwkJCQkJCQkJICAgICAgYmxrKTsKK30KKwor
aW50IGl0ZW1fdXRtb3N0X2NoaWxkKGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBzaWRlb2Ygc2lkZSwg
am5vZGUgKiogY2hpbGQpCit7CisJcmV0dXJuIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+
Zi51dG1vc3RfY2hpbGQoY29vcmQsIHNpZGUsIGNoaWxkKTsKK30KKworLyogQGNvdW50IGJ5dGVz
IG9mIGZsb3cgQGYgZ290IHdyaXR0ZW4sIHVwZGF0ZSBjb3JyZXNwb25kaW5nbHkgZi0+bGVuZ3Ro
LAorICAgZi0+ZGF0YSBhbmQgZi0+a2V5ICovCit2b2lkIG1vdmVfZmxvd19mb3J3YXJkKGZsb3df
dCAqZiwgdW5zaWduZWQgY291bnQpCit7CisJaWYgKGYtPmRhdGEpCisJCWYtPmRhdGEgKz0gY291
bnQ7CisJZi0+bGVuZ3RoIC09IGNvdW50OworCXNldF9rZXlfb2Zmc2V0KCZmLT5rZXksIGdldF9r
ZXlfb2Zmc2V0KCZmLT5rZXkpICsgY291bnQpOworfQorCisvKgorICAgTG9jYWwgdmFyaWFibGVz
OgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAg
Yy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAor
ICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNl
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvY29vcmQuaCBsaW51eC01LjQuMTcvZnMvcmVp
c2VyNC9jb29yZC5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Nvb3JkLmgJMTk3
MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L2Nvb3JkLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDgyMjIxMzggKzAxMDAKQEAgLTAsMCAr
MSwzOTkgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBs
aWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIENvb3JkcyAq
LworCisjaWYgIWRlZmluZWQoX19SRUlTRVI0X0NPT1JEX0hfXykKKyNkZWZpbmUgX19SRUlTRVI0
X0NPT1JEX0hfXworCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisj
aW5jbHVkZSAiZGZvcm1hdC5oIgorI2luY2x1ZGUgImtleS5oIgorCisvKiBpbnNlcnRpb25zIGhh
cHBlbiBiZXR3ZWVuIGNvb3JkcyBpbiB0aGUgdHJlZSwgc28gd2UgbmVlZCBzb21lIG1lYW5zCisg
ICBvZiBzcGVjaWZ5aW5nIHRoZSBzZW5zZSBvZiBiZXR3ZWVubmVzcy4gKi8KK3R5cGVkZWYgZW51
bSB7CisJQkVGT1JFX1VOSVQsIC8qIE5vdGU6IHdlL2luaXRfY29vcmQgZGVwZW5kcyBvbiB0aGlz
IHZhbHVlIGJlaW5nIHplcm8uICovCisJQVRfVU5JVCwKKwlBRlRFUl9VTklULAorCUJFRk9SRV9J
VEVNLAorCUFGVEVSX0lURU0sCisJSU5WQUxJRF9DT09SRCwKKwlFTVBUWV9OT0RFLAorfSBiZXR3
ZWVuX2VudW07CisKKy8qIGxvY2F0aW9uIG9mIGNvb3JkIHcuci50LiBpdHMgbm9kZSAqLwordHlw
ZWRlZiBlbnVtIHsKKwlDT09SRF9PTl9USEVfTEVGVCA9IC0xLAorCUNPT1JEX09OX1RIRV9SSUdI
VCA9ICsxLAorCUNPT1JEX0lOU0lERSA9IDAKK30gY29vcmRfd3J0X25vZGU7CisKK3R5cGVkZWYg
ZW51bSB7CisJQ09PUkRfQ01QX1NBTUUgPSAwLCBDT09SRF9DTVBfT05fTEVGVCA9IC0xLCBDT09S
RF9DTVBfT05fUklHSFQgPSArMQorfSBjb29yZF9jbXA7CisKK3N0cnVjdCBjb29yZCB7CisJLyog
bm9kZSBpbiBhIHRyZWUgKi8KKwkvKiAgMCAqLyB6bm9kZSAqbm9kZTsKKworCS8qIHBvc2l0aW9u
IG9mIGl0ZW0gd2l0aGluIG5vZGUgKi8KKwkvKiAgNCAqLyBwb3NfaW5fbm9kZV90IGl0ZW1fcG9z
OworCS8qIHBvc2l0aW9uIG9mIHVuaXQgd2l0aGluIGl0ZW0gKi8KKwkvKiAgNiAqLyBwb3NfaW5f
bm9kZV90IHVuaXRfcG9zOworCS8qIG9wdGltaXphdGlvbjogcGx1Z2luIG9mIGl0ZW0gaXMgc3Rv
cmVkIGluIGNvb3JkX3QuIFVudGlsIHRoaXMgd2FzCisJICAgaW1wbGVtZW50ZWQsIGl0ZW1fcGx1
Z2luX2J5X2Nvb3JkKCkgd2FzIG1ham9yIENQVSBjb25zdW1lci4gLT5pcGx1Z2lkCisJICAgaXMg
aW52YWxpZGF0ZWQgKHNldCB0byAweGZmKSBvbiBlYWNoIG1vZGlmaWNhdGlvbiBvZiAtPml0ZW1f
cG9zLAorCSAgIGFuZCBhbGwgc3VjaCBtb2RpZmljYXRpb25zIGFyZSBmdW5uZWxlZCB0aHJvdWdo
IGNvb3JkXypfaXRlbV9wb3MoKQorCSAgIGZ1bmN0aW9ucyBiZWxvdy4KKwkgKi8KKwkvKiAgOCAq
LyBjaGFyIGlwbHVnaWQ7CisJLyogcG9zaXRpb24gb2YgY29vcmQgdy5yLnQuIHRvIG5laWdoYm9y
aW5nIGl0ZW1zIGFuZC9vciB1bml0cy4KKwkgICBWYWx1ZXMgYXJlIHRha2VuIGZyb20gJmJldHdl
ZW5fZW51bSBhYm92ZS4KKwkgKi8KKwkvKiAgOSAqLyBjaGFyIGJldHdlZW47CisJLyogcGFkZGlu
Zy4gSXQgd2lsbCBiZSBhZGRlZCBieSB0aGUgY29tcGlsZXIgYW55d2F5IHRvIGNvbmZvcm0gdG8g
dGhlCisJICogQyBsYW5ndWFnZSBhbGlnbm1lbnQgcmVxdWlyZW1lbnRzLiBXZSBrZWVwIGl0IGhl
cmUgdG8gYmUgb24gdGhlCisJICogc2FmZSBzaWRlIGFuZCB0byBoYXZlIGEgY2xlYXIgcGljdHVy
ZSBvZiB0aGUgbWVtb3J5IGxheW91dCBvZiB0aGlzCisJICogc3RydWN0dXJlLiAqLworCS8qIDEw
ICovIF9fdTE2IHBhZDsKKwkvKiAxMiAqLyBpbnQgb2Zmc2V0OworI2lmIFJFSVNFUjRfREVCVUcK
Kwl1bnNpZ25lZCBsb25nIHBsdWdfdjsKKwl1bnNpZ25lZCBsb25nIGJvZHlfdjsKKyNlbmRpZgor
fTsKKworI2RlZmluZSBJTlZBTElEX1BMVUdJRCAgKChjaGFyKSgoMSA8PCA4KSAtIDEpKQorI2Rl
ZmluZSBJTlZBTElEX09GRlNFVCAtMQorCitzdGF0aWMgaW5saW5lIHZvaWQgY29vcmRfY2xlYXJf
aXBsdWcoY29vcmRfdCAqY29vcmQpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjgzNSIsIGNvb3JkICE9
IE5VTEwpOworCWNvb3JkLT5pcGx1Z2lkID0gSU5WQUxJRF9QTFVHSUQ7CisJY29vcmQtPm9mZnNl
dCA9IElOVkFMSURfT0ZGU0VUOworfQorCitzdGF0aWMgaW5saW5lIGludCBjb29yZF9pc19pcGx1
Z19zZXQoY29uc3QgY29vcmRfdCAqY29vcmQpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjgzNiIsIGNv
b3JkICE9IE5VTEwpOworCXJldHVybiBjb29yZC0+aXBsdWdpZCAhPSBJTlZBTElEX1BMVUdJRDsK
K30KKworc3RhdGljIGlubGluZSB2b2lkIGNvb3JkX3NldF9pdGVtX3Bvcyhjb29yZF90ICpjb29y
ZCwgcG9zX2luX25vZGVfdCBwb3MpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjQ3OCIsIGNvb3JkICE9
IE5VTEwpOworCWNvb3JkLT5pdGVtX3BvcyA9IHBvczsKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29y
ZCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBjb29yZF9kZWNfaXRlbV9wb3MoY29vcmRfdCAq
Y29vcmQpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjQ4MCIsIGNvb3JkICE9IE5VTEwpOworCS0tY29v
cmQtPml0ZW1fcG9zOworCWNvb3JkX2NsZWFyX2lwbHVnKGNvb3JkKTsKK30KKworc3RhdGljIGlu
bGluZSB2b2lkIGNvb3JkX2luY19pdGVtX3Bvcyhjb29yZF90ICpjb29yZCkKK3sKKwlhc3NlcnQo
Im5pa2l0YS0yNDgxIiwgY29vcmQgIT0gTlVMTCk7CisJKytjb29yZC0+aXRlbV9wb3M7CisJY29v
cmRfY2xlYXJfaXBsdWcoY29vcmQpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgY29vcmRfYWRk
X2l0ZW1fcG9zKGNvb3JkX3QgKmNvb3JkLCBpbnQgZGVsdGEpCit7CisJYXNzZXJ0KCJuaWtpdGEt
MjQ4MiIsIGNvb3JkICE9IE5VTEwpOworCWNvb3JkLT5pdGVtX3BvcyArPSBkZWx0YTsKKwljb29y
ZF9jbGVhcl9pcGx1Zyhjb29yZCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBjb29yZF9pbnZh
bGlkX2l0ZW1fcG9zKGNvb3JkX3QgKmNvb3JkKQoreworCWFzc2VydCgibmlraXRhLTI4MzIiLCBj
b29yZCAhPSBOVUxMKTsKKwljb29yZC0+aXRlbV9wb3MgPSAodW5zaWduZWQgc2hvcnQpfjA7CisJ
Y29vcmRfY2xlYXJfaXBsdWcoY29vcmQpOworfQorCisvKiBSZXZlcnNlIGEgZGlyZWN0aW9uLiAq
Lworc3RhdGljIGlubGluZSBzaWRlb2Ygc2lkZW9mX3JldmVyc2Uoc2lkZW9mIHNpZGUpCit7CisJ
cmV0dXJuIHNpZGUgPT0gTEVGVF9TSURFID8gUklHSFRfU0lERSA6IExFRlRfU0lERTsKK30KKwor
LyogTk9URTogVGhlcmUgaXMgYSBzb21ld2hhdCBvZGQgbWl4dHVyZSBvZiB0aGUgZm9sbG93aW5n
IG9wcG9zZWQgdGVybXM6CisKKyAgICJmaXJzdCIgYW5kICJsYXN0IgorICAgIm5leHQiIGFuZCAi
cHJldiIKKyAgICJiZWZvcmUiIGFuZCAiYWZ0ZXIiCisgICAibGVmdG1vc3QiIGFuZCAicmlnaHRt
b3N0IgorCisgICBCdXQgSSB0aGluayB0aGUgY2hvc2VuIG5hbWVzIGFyZSBkZWNlbnQgdGhlIHdh
eSB0aGV5IGFyZS4KKyovCisKKy8qIENPT1JEIElOSVRJQUxJWkVSUyAqLworCisvKiBJbml0aWFs
aXplIGFuIGludmFsaWQgY29vcmRpbmF0ZS4gKi8KK2V4dGVybiB2b2lkIGNvb3JkX2luaXRfaW52
YWxpZChjb29yZF90ICpjb29yZCwgY29uc3Qgem5vZGUgKiBub2RlKTsKKworZXh0ZXJuIHZvaWQg
Y29vcmRfaW5pdF9maXJzdF91bml0X25vY2hlY2soY29vcmRfdCAqY29vcmQsIGNvbnN0IHpub2Rl
ICogbm9kZSk7CisKKy8qIEluaXRpYWxpemUgYSBjb29yZGluYXRlIHRvIHBvaW50IGF0IHRoZSBm
aXJzdCB1bml0IG9mIHRoZSBmaXJzdCBpdGVtLiBJZiB0aGUKKyAgIG5vZGUgaXMgZW1wdHksIGl0
IGlzIHBvc2l0aW9uZWQgYXQgdGhlIEVNUFRZX05PREUuICovCitleHRlcm4gdm9pZCBjb29yZF9p
bml0X2ZpcnN0X3VuaXQoY29vcmRfdCAqY29vcmQsIGNvbnN0IHpub2RlICogbm9kZSk7CisKKy8q
IEluaXRpYWxpemUgYSBjb29yZGluYXRlIHRvIHBvaW50IGF0IHRoZSBsYXN0IHVuaXQgb2YgdGhl
IGxhc3QgaXRlbS4gSWYgdGhlCisgICBub2RlIGlzIGVtcHR5LCBpdCBpcyBwb3NpdGlvbmVkIGF0
IHRoZSBFTVBUWV9OT0RFLiAqLworZXh0ZXJuIHZvaWQgY29vcmRfaW5pdF9sYXN0X3VuaXQoY29v
cmRfdCAqY29vcmQsIGNvbnN0IHpub2RlICogbm9kZSk7CisKKy8qIEluaXRpYWxpemUgYSBjb29y
ZGluYXRlIHRvIGJlZm9yZSB0aGUgZmlyc3QgaXRlbS4gSWYgdGhlIG5vZGUgaXMgZW1wdHksIGl0
IGlzCisgICBwb3NpdGlvbmVkIGF0IHRoZSBFTVBUWV9OT0RFLiAqLworZXh0ZXJuIHZvaWQgY29v
cmRfaW5pdF9iZWZvcmVfZmlyc3RfaXRlbShjb29yZF90ICpjb29yZCwgY29uc3Qgem5vZGUgKiBu
b2RlKTsKKworLyogSW5pdGlhbGl6ZSBhIGNvb3JkaW5hdGUgdG8gYWZ0ZXIgdGhlIGxhc3QgaXRl
bS4gSWYgdGhlIG5vZGUgaXMgZW1wdHksIGl0IGlzCisgICBwb3NpdGlvbmVkIGF0IHRoZSBFTVBU
WV9OT0RFLiAqLworZXh0ZXJuIHZvaWQgY29vcmRfaW5pdF9hZnRlcl9sYXN0X2l0ZW0oY29vcmRf
dCAqY29vcmQsIGNvbnN0IHpub2RlICogbm9kZSk7CisKKy8qIEluaXRpYWxpemUgYSBjb29yZGlu
YXRlIHRvIGFmdGVyIGxhc3QgdW5pdCBpbiB0aGUgaXRlbS4gQ29vcmQgbXVzdCBiZSBzZXQKKyAg
IGFscmVhZHkgdG8gZXhpc3RpbmcgaXRlbSAqLwordm9pZCBjb29yZF9pbml0X2FmdGVyX2l0ZW1f
ZW5kKGNvb3JkX3QgKmNvb3JkKTsKKworLyogSW5pdGlhbGl6ZSBhIGNvb3JkaW5hdGUgdG8gYmVm
b3JlIHRoZSBpdGVtLiBDb29yZCBtdXN0IGJlIHNldCBhbHJlYWR5IHRvCisgICBleGlzdGluZyBp
dGVtICovCit2b2lkIGNvb3JkX2luaXRfYmVmb3JlX2l0ZW0oY29vcmRfdCAqKTsKKy8qIEluaXRp
YWxpemUgYSBjb29yZGluYXRlIHRvIGFmdGVyIHRoZSBpdGVtLiBDb29yZCBtdXN0IGJlIHNldCBh
bHJlYWR5IHRvCisgICBleGlzdGluZyBpdGVtICovCit2b2lkIGNvb3JkX2luaXRfYWZ0ZXJfaXRl
bShjb29yZF90ICopOworCisvKiBDYWxscyBlaXRoZXIgY29vcmRfaW5pdF9maXJzdF91bml0IG9y
IGNvb3JkX2luaXRfbGFzdF91bml0IGRlcGVuZGluZyBvbgorICAgc2lkZW9mIGFyZ3VtZW50LiAq
LworZXh0ZXJuIHZvaWQgY29vcmRfaW5pdF9zaWRlb2ZfdW5pdChjb29yZF90ICpjb29yZCwgY29u
c3Qgem5vZGUgKiBub2RlLAorCQkJCSAgIHNpZGVvZiBkaXIpOworCisvKiBJbml0aWFsaXplIGEg
Y29vcmRpbmF0ZSBieSAwcy4gVXNlZCBpbiBwbGFjZXMgd2hlcmUgaW5pdF9jb29yZCB3YXMgdXNl
ZCBhbmQKKyAgIGl0IHdhcyBub3QgY2xlYXIgaG93IGFjdHVhbGx5CisgICBGSVhNRS1WUzogYWRk
ZWQgYnkgdnMgKDIwMDIsIGp1bmUsIDgpICovCitleHRlcm4gdm9pZCBjb29yZF9pbml0X3plcm8o
Y29vcmRfdCAqY29vcmQpOworCisvKiBDT09SRCBNRVRIT0RTICovCisKKy8qIGFmdGVyIHNoaWZ0
aW5nIG9mIG5vZGUgY29udGVudCwgY29vcmQgcHJldmlvdXNseSBzZXQgcHJvcGVybHkgbWF5IGJl
Y29tZQorICAgaW52YWxpZCwgdHJ5IHRvICJub3JtYWxpemUiIGl0LiAqLwordm9pZCBjb29yZF9u
b3JtYWxpemUoY29vcmRfdCAqY29vcmQpOworCisvKiBDb3B5IGEgY29vcmRpbmF0ZS4gKi8KK2V4
dGVybiB2b2lkIGNvb3JkX2R1cChjb29yZF90ICpjb29yZCwgY29uc3QgY29vcmRfdCAqb2xkX2Nv
b3JkKTsKKworLyogQ29weSBhIGNvb3JkaW5hdGUgd2l0aG91dCBjaGVjay4gKi8KK3ZvaWQgY29v
cmRfZHVwX25vY2hlY2soY29vcmRfdCAqY29vcmQsIGNvbnN0IGNvb3JkX3QgKm9sZF9jb29yZCk7
CisKK3Vuc2lnbmVkIGNvb3JkX251bV91bml0cyhjb25zdCBjb29yZF90ICpjb29yZCk7CisKKy8q
IFJldHVybiB0aGUgbGFzdCB2YWxpZCB1bml0IG51bWJlciBhdCB0aGUgcHJlc2VudCBpdGVtIChp
LmUuLAorICAgY29vcmRfbnVtX3VuaXRzKCkgLSAxKS4gKi8KK3N0YXRpYyBpbmxpbmUgdW5zaWdu
ZWQgY29vcmRfbGFzdF91bml0X3Bvcyhjb25zdCBjb29yZF90ICpjb29yZCkKK3sKKwlyZXR1cm4g
Y29vcmRfbnVtX3VuaXRzKGNvb3JkKSAtIDE7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiBG
b3IgYXNzZXJ0aW9ucyBvbmx5LCBjaGVja3MgZm9yIGEgdmFsaWQgY29vcmRpbmF0ZS4gKi8KK2V4
dGVybiBpbnQgY29vcmRfY2hlY2soY29uc3QgY29vcmRfdCAqY29vcmQpOworCitleHRlcm4gdW5z
aWduZWQgbG9uZyB6bm9kZV90aW1lc19sb2NrZWQoY29uc3Qgem5vZGUgKiB6KTsKKworc3RhdGlj
IGlubGluZSB2b2lkIGNvb3JkX3VwZGF0ZV92KGNvb3JkX3QgKmNvb3JkKQoreworCWNvb3JkLT5w
bHVnX3YgPSBjb29yZC0+Ym9keV92ID0gem5vZGVfdGltZXNfbG9ja2VkKGNvb3JkLT5ub2RlKTsK
K30KKyNlbmRpZgorCitleHRlcm4gaW50IGNvb3Jkc19lcXVhbChjb25zdCBjb29yZF90ICpjMSwg
Y29uc3QgY29vcmRfdCAqYzIpOworCitleHRlcm4gdm9pZCBwcmludF9jb29yZChjb25zdCBjaGFy
ICptZXMsIGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBpbnQgcHJpbnRfbm9kZSk7CisKKy8qIElmIGNv
b3JkX2lzX2FmdGVyX3JpZ2h0bW9zdCByZXR1cm4gTkNPT1JEX09OX1RIRV9SSUdIVCwgaWYKKyAg
IGNvb3JkX2lzX2FmdGVyX2xlZnRtb3N0IHJldHVybiBOQ09PUkRfT05fVEhFX0xFRlQsIG90aGVy
d2lzZSByZXR1cm4KKyAgIE5DT09SRF9JTlNJREUuICovCitleHRlcm4gY29vcmRfd3J0X25vZGUg
Y29vcmRfd3J0KGNvbnN0IGNvb3JkX3QgKmNvb3JkKTsKKworLyogUmV0dXJucyB0cnVlIGlmIHRo
ZSBjb29yZGluYXRlcyBhcmUgcG9zaXRpb25lZCBhdCBhZGphY2VudCB1bml0cywgcmVnYXJkbGVz
cworICAgb2YgYmVmb3JlLWFmdGVyIG9yIGl0ZW0gYm91bmRhcmllcy4gKi8KK2V4dGVybiBpbnQg
Y29vcmRfYXJlX25laWdoYm9ycyhjb29yZF90ICpjMSwgY29vcmRfdCAqYzIpOworCisvKiBBc3N1
bWluZyB0d28gY29vcmRpbmF0ZXMgYXJlIHBvc2l0aW9uZWQgaW4gdGhlIHNhbWUgbm9kZSwgcmV0
dXJuCisgICBOQ09PUkRfQ01QX09OX1JJR0hULCBOQ09PUkRfQ01QX09OX0xFRlQsIG9yIE5DT09S
RF9DTVBfU0FNRSBkZXBlbmRpbmcgb24gYzEncworICAgcG9zaXRpb24gcmVsYXRpdmUgdG8gYzIu
ICAqLworZXh0ZXJuIGNvb3JkX2NtcCBjb29yZF9jb21wYXJlKGNvb3JkX3QgKmMxLCBjb29yZF90
ICpjMik7CisKKy8qIENPT1JEIFBSRURJQ0FURVMgKi8KKworLyogUmV0dXJucyB0cnVlIGlmIHRo
ZSBjb29yZCB3YXMgaW5pdGlhbGl6ZXdkIGJ5IGNvb3JkX2luaXRfaW52YWxpZCAoKS4gKi8KK2V4
dGVybiBpbnQgY29vcmRfaXNfaW52YWxpZChjb25zdCBjb29yZF90ICpjb29yZCk7CisKKy8qIFJl
dHVybnMgdHJ1ZSBpZiB0aGUgY29vcmRpbmF0ZSBpcyBwb3NpdGlvbmVkIGF0IGFuIGV4aXN0aW5n
IGl0ZW0sIG5vdCBiZWZvcmUKKyAgIG9yIGFmdGVyIGFuIGl0ZW0uIEl0IG1heSBiZSBwbGFjZWQg
YXQsIGJlZm9yZSwgb3IgYWZ0ZXIgYW55IHVuaXQgd2l0aGluIHRoZQorICAgaXRlbSwgd2hldGhl
ciBleGlzdGluZyBvciBub3QuIElmIHRoaXMgaXMgdHJ1ZSB5b3UgY2FuIGNhbGwgbWV0aG9kcyBv
ZiB0aGUKKyAgIGl0ZW0gcGx1Z2luLiAgKi8KK2V4dGVybiBpbnQgY29vcmRfaXNfZXhpc3Rpbmdf
aXRlbShjb25zdCBjb29yZF90ICpjb29yZCk7CisKKy8qIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29v
cmRpbmF0ZSBpcyBwb3NpdGlvbmVkIGFmdGVyIGEgaXRlbSwgYmVmb3JlIGEgaXRlbSwKKyAgIGFm
dGVyIHRoZSBsYXN0IHVuaXQgb2YgYW4gaXRlbSwgYmVmb3JlIHRoZSBmaXJzdCB1bml0IG9mIGFu
IGl0ZW0sIG9yIGF0IGFuCisgICBlbXB0eSBub2RlLiAqLworZXh0ZXJuIGludCBjb29yZF9pc19i
ZXR3ZWVuX2l0ZW1zKGNvbnN0IGNvb3JkX3QgKmNvb3JkKTsKKworLyogUmV0dXJucyB0cnVlIGlm
IHRoZSBjb29yZGluYXRlIGlzIHBvc2l0aW9uZWQgYXQgYW4gZXhpc3RpbmcgdW5pdCwgbm90IGJl
Zm9yZQorICAgb3IgYWZ0ZXIgYSB1bml0LiAqLworZXh0ZXJuIGludCBjb29yZF9pc19leGlzdGlu
Z191bml0KGNvbnN0IGNvb3JkX3QgKmNvb3JkKTsKKworLyogUmV0dXJucyB0cnVlIGlmIHRoZSBj
b29yZGluYXRlIGlzIHBvc2l0aW9uZWQgYXQgYW4gZW1wdHkgbm9kZS4gKi8KK2V4dGVybiBpbnQg
Y29vcmRfaXNfZW1wdHkoY29uc3QgY29vcmRfdCAqY29vcmQpOworCisvKiBSZXR1cm5zIHRydWUg
aWYgdGhlIGNvb3JkaW5hdGUgaXMgcG9zaXRpb25lZCBhdCB0aGUgZmlyc3QgdW5pdCBvZiB0aGUg
Zmlyc3QKKyAgIGl0ZW0uIE5vdCB0cnVlIGZvciBlbXB0eSBub2RlcyBub3IgY29vcmRpbmF0ZXMg
cG9zaXRpb25lZCBiZWZvcmUgdGhlIGZpcnN0CisgICBpdGVtLiAqLworZXh0ZXJuIGludCBjb29y
ZF9pc19sZWZ0bW9zdF91bml0KGNvbnN0IGNvb3JkX3QgKmNvb3JkKTsKKworLyogUmV0dXJucyB0
cnVlIGlmIHRoZSBjb29yZGluYXRlIGlzIHBvc2l0aW9uZWQgYWZ0ZXIgdGhlIGxhc3QgaXRlbSBv
ciBhZnRlciB0aGUKKyAgIGxhc3QgdW5pdCBvZiB0aGUgbGFzdCBpdGVtIG9yIGl0IGlzIGFuIGVt
cHR5IG5vZGUuICovCitleHRlcm4gaW50IGNvb3JkX2lzX2FmdGVyX3JpZ2h0bW9zdChjb25zdCBj
b29yZF90ICpjb29yZCk7CisKKy8qIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29vcmRpbmF0ZSBpcyBw
b3NpdGlvbmVkIGJlZm9yZSB0aGUgZmlyc3QgaXRlbSBvciBpdCBpcworICAgIGFuIGVtcHR5IG5v
ZGUuICovCitleHRlcm4gaW50IGNvb3JkX2lzX2JlZm9yZV9sZWZ0bW9zdChjb25zdCBjb29yZF90
ICpjb29yZCk7CisKKy8qIENhbGxzIGVpdGhlciBjb29yZF9pc19iZWZvcmVfbGVmdG1vc3Qgb3Ig
Y29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0IGRlcGVuZGluZworICAgb24gc2lkZW9mIGFyZ3VtZW50
LiAqLworZXh0ZXJuIGludCBjb29yZF9pc19hZnRlcl9zaWRlb2ZfdW5pdChjb29yZF90ICpjb29y
ZCwgc2lkZW9mIGRpcik7CisKKy8qIENPT1JEIE1PRElGSUVSUyAqLworCisvKiBBZHZhbmNlcyB0
aGUgY29vcmRpbmF0ZSBieSBvbmUgdW5pdCB0byB0aGUgcmlnaHQuICBJZiBlbXB0eSwgbm8gY2hh
bmdlLiAgSWYKKyAgIGNvb3JkX2lzX3JpZ2h0bW9zdF91bml0LCBhZHZhbmNlcyB0byBBRlRFUiBU
SEUgTEFTVCBJVEVNLiAgUmV0dXJucyAwIGlmIG5ldworICAgcG9zaXRpb24gaXMgYW4gZXhpc3Rp
bmcgdW5pdC4gKi8KK2V4dGVybiBpbnQgY29vcmRfbmV4dF91bml0KGNvb3JkX3QgKmNvb3JkKTsK
KworLyogQWR2YW5jZXMgdGhlIGNvb3JkaW5hdGUgYnkgb25lIGl0ZW0gdG8gdGhlIHJpZ2h0LiAg
SWYgZW1wdHksIG5vIGNoYW5nZS4gIElmCisgICBjb29yZF9pc19yaWdodG1vc3RfdW5pdCwgYWR2
YW5jZXMgdG8gQUZURVIgVEhFIExBU1QgSVRFTS4gIFJldHVybnMgMCBpZiBuZXcKKyAgIHBvc2l0
aW9uIGlzIGFuIGV4aXN0aW5nIGl0ZW0uICovCitleHRlcm4gaW50IGNvb3JkX25leHRfaXRlbShj
b29yZF90ICpjb29yZCk7CisKKy8qIEFkdmFuY2VzIHRoZSBjb29yZGluYXRlIGJ5IG9uZSB1bml0
IHRvIHRoZSBsZWZ0LiAgSWYgZW1wdHksIG5vIGNoYW5nZS4gIElmCisgICBjb29yZF9pc19sZWZ0
bW9zdF91bml0LCBhZHZhbmNlcyB0byBCRUZPUkUgVEhFIEZJUlNUIElURU0uICBSZXR1cm5zIDAg
aWYgbmV3CisgICBwb3NpdGlvbiBpcyBhbiBleGlzdGluZyB1bml0LiAqLworZXh0ZXJuIGludCBj
b29yZF9wcmV2X3VuaXQoY29vcmRfdCAqY29vcmQpOworCisvKiBBZHZhbmNlcyB0aGUgY29vcmRp
bmF0ZSBieSBvbmUgaXRlbSB0byB0aGUgbGVmdC4gIElmIGVtcHR5LCBubyBjaGFuZ2UuIElmCisg
ICBjb29yZF9pc19sZWZ0bW9zdF91bml0LCBhZHZhbmNlcyB0byBCRUZPUkUgVEhFIEZJUlNUIElU
RU0uIFJldHVybnMgMCBpZiBuZXcKKyAgIHBvc2l0aW9uIGlzIGFuIGV4aXN0aW5nIGl0ZW0uICov
CitleHRlcm4gaW50IGNvb3JkX3ByZXZfaXRlbShjb29yZF90ICpjb29yZCk7CisKKy8qIElmIHRo
ZSBjb29yZGluYXRlIGlzIGJldHdlZW4gaXRlbXMsIHNoaWZ0cyBpdCB0byB0aGUgcmlnaHQuICBS
ZXR1cm5zIDAgb24KKyAgIHN1Y2Nlc3MgYW5kIG5vbi16ZXJvIGlmIHRoZXJlIGlzIG5vIHBvc2l0
aW9uIHRvIHRoZSByaWdodC4gKi8KK2V4dGVybiBpbnQgY29vcmRfc2V0X3RvX3JpZ2h0KGNvb3Jk
X3QgKmNvb3JkKTsKKworLyogSWYgdGhlIGNvb3JkaW5hdGUgaXMgYmV0d2VlbiBpdGVtcywgc2hp
ZnRzIGl0IHRvIHRoZSBsZWZ0LiAgUmV0dXJucyAwIG9uCisgICBzdWNjZXNzIGFuZCBub24temVy
byBpZiB0aGVyZSBpcyBubyBwb3NpdGlvbiB0byB0aGUgbGVmdC4gKi8KK2V4dGVybiBpbnQgY29v
cmRfc2V0X3RvX2xlZnQoY29vcmRfdCAqY29vcmQpOworCisvKiBJZiB0aGUgY29vcmRpbmF0ZSBp
cyBhdCBhbiBleGlzdGluZyB1bml0LCBzZXQgdG8gYWZ0ZXIgdGhhdCB1bml0LiAgUmV0dXJucyAw
CisgICBvbiBzdWNjZXNzIGFuZCBub24temVybyBpZiB0aGUgdW5pdCBkaWQgbm90IGV4aXN0LiAq
LworZXh0ZXJuIGludCBjb29yZF9zZXRfYWZ0ZXJfdW5pdChjb29yZF90ICpjb29yZCk7CisKKy8q
IENhbGxzIGVpdGhlciBjb29yZF9uZXh0X3VuaXQgb3IgY29vcmRfcHJldl91bml0IGRlcGVuZGlu
ZyBvbiBzaWRlb2YKKyAgIGFyZ3VtZW50LiAqLworZXh0ZXJuIGludCBjb29yZF9zaWRlb2ZfdW5p
dChjb29yZF90ICpjb29yZCwgc2lkZW9mIGRpcik7CisKKy8qIGl0ZXJhdGUgb3ZlciBhbGwgdW5p
dHMgaW4gQG5vZGUgKi8KKyNkZWZpbmUgZm9yX2FsbF91bml0cyhjb29yZCwgbm9kZSkJCQkJCVwK
Kwlmb3IgKGNvb3JkX2luaXRfYmVmb3JlX2ZpcnN0X2l0ZW0oKGNvb3JkKSwgKG5vZGUpKSA7CQlc
CisJICAgICBjb29yZF9uZXh0X3VuaXQoY29vcmQpID09IDAgOykKKworLyogaXRlcmF0ZSBvdmVy
IGFsbCBpdGVtcyBpbiBAbm9kZSAqLworI2RlZmluZSBmb3JfYWxsX2l0ZW1zKGNvb3JkLCBub2Rl
KQkJCQkJXAorCWZvciAoY29vcmRfaW5pdF9iZWZvcmVfZmlyc3RfaXRlbSgoY29vcmQpLCAobm9k
ZSkpIDsJCVwKKwkgICAgIGNvb3JkX25leHRfaXRlbShjb29yZCkgPT0gMCA7KQorCisvKiBDT09S
RC9JVEVNIE1FVEhPRFMgKi8KKworZXh0ZXJuIGludCBpdGVtX3V0bW9zdF9jaGlsZF9yZWFsX2Js
b2NrKGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBzaWRlb2Ygc2lkZSwKKwkJCQkJcmVpc2VyNF9ibG9j
a19uciAqIGJsayk7CitleHRlcm4gaW50IGl0ZW1fdXRtb3N0X2NoaWxkKGNvbnN0IGNvb3JkX3Qg
KmNvb3JkLCBzaWRlb2Ygc2lkZSwKKwkJCSAgICAgam5vZGUgKiogY2hpbGQpOworCisvKiBhIGZs
b3cgaXMgYSBzZXF1ZW5jZSBvZiBieXRlcyBiZWluZyB3cml0dGVuIHRvIG9yIHJlYWQgZnJvbSB0
aGUgdHJlZS4gIFRoZQorICAgdHJlZSB3aWxsIHNsaWNlIHRoZSBmbG93IGludG8gaXRlbXMgd2hp
bGUgc3RvcmluZyBpdCBpbnRvIG5vZGVzLCBidXQgYWxsIG9mCisgICB0aGF0IGlzIGhpZGRlbiBm
cm9tIGFueXRoaW5nIG91dHNpZGUgdGhlIHRyZWUuICAqLworCitzdHJ1Y3QgZmxvdyB7CisJcmVp
c2VyNF9rZXkga2V5OwkvKiBrZXkgb2Ygc3RhcnQgb2YgZmxvdydzIHNlcXVlbmNlIG9mIGJ5dGVz
ICovCisJbG9mZl90IGxlbmd0aDsJCS8qIGxlbmd0aCBvZiBmbG93J3Mgc2VxdWVuY2Ugb2YgYnl0
ZXMgKi8KKwljaGFyICpkYXRhOwkgICAgICAgIC8qIHN0YXJ0IG9mIGZsb3cncyBzZXF1ZW5jZSBv
ZiBieXRlcyAqLworCWludCB1c2VyOwkJLyogaWYgMSBkYXRhIGlzIHVzZXIgc3BhY2UsIDAgLSBr
ZXJuZWwgc3BhY2UgKi8KKwlyd19vcCBvcDsJCS8qIE5JS0lUQS1GSVhNRS1IQU5TOiBjb21tZW50
IGlzIHdoZXJlPyAgKi8KK307CisKK3ZvaWQgbW92ZV9mbG93X2ZvcndhcmQoZmxvd190ICpmLCB1
bnNpZ25lZCBjb3VudCk7CisKKy8qICZyZWlzZXI0X2l0ZW1fZGF0YSAtIGRlc2NyaXB0aW9uIG9m
IGRhdGEgdG8gYmUgaW5zZXJ0ZWQgb3IgcGFzdGVkCisKKyAgIFE6IGFydGljdWxhdGUgdGhlIHJl
YXNvbnMgZm9yIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhpcyBhbmQgZmxvdy4KKworICAgQTog
QmVjaWRlcyBmbG93IHdlIGluc2VydCBpbnRvIHRyZWUgb3RoZXIgdGhpbmdzOiBzdGF0IGRhdGEs
IGRpcmVjdG9yeQorICAgZW50cnksIGV0Yy4gIFRvIGluc2VydCB0aGVtIGludG8gdHJlZSBvbmUg
aGFzIHRvIHByb3ZpZGUgdGhpcyBzdHJ1Y3R1cmUuIElmCisgICBvbmUgaXMgZ29pbmcgdG8gaW5z
ZXJ0IGZsb3cgLSBoZSBjYW4gdXNlIGluc2VydF9mbG93LCB3aGVyZSB0aGlzIHN0cnVjdHVyZQor
ICAgZG9lcyBub3QgaGF2ZSB0byBiZSBjcmVhdGVkCisqLworc3RydWN0IHJlaXNlcjRfaXRlbV9k
YXRhIHsKKwkvKiBhY3R1YWwgZGF0YSB0byBiZSBpbnNlcnRlZC4gSWYgTlVMTCwgLT5jcmVhdGVf
aXRlbSgpIHdpbGwgbm90CisJICAgZG8geG1lbWNweSBpdHNlbGYsIGxlYXZpbmcgdGhpcyB1cCB0
byB0aGUgY2FsbGVyLiBUaGlzIGNhbgorCSAgIHNhdmUgc29tZSBhbW91bnQgb2YgdW5uZWNlc3Nh
cnkgbWVtb3J5IGNvcHlpbmcsIGZvciBleGFtcGxlLAorCSAgIGR1cmluZyBpbnNlcnRpb24gb2Yg
c3RhdCBkYXRhLgorCisJICovCisJY2hhciAqZGF0YTsKKwkvKiAxIGlmICdjaGFyICogZGF0YScg
Y29udGFpbnMgcG9pbnRlciB0byB1c2VyIHNwYWNlIGFuZCAwIGlmIGl0IGlzCisJICAga2VybmVs
IHNwYWNlICovCisJaW50IHVzZXI7CisJLyogYW1vdW50IG9mIGRhdGEgd2UgYXJlIGdvaW5nIHRv
IGluc2VydCBvciBwYXN0ZSAqLworCWludCBsZW5ndGg7CisJLyogIkFyZyIgaXMgb3BhcXVlIGRh
dGEgdGhhdCBpcyBwYXNzZWQgZG93biB0byB0aGUKKwkgICAtPmNyZWF0ZV9pdGVtKCkgbWV0aG9k
IG9mIG5vZGUgbGF5b3V0LCB3aGljaCBpbiB0dXJuCisJICAgaGFuZHMgaXQgdG8gdGhlIC0+Y3Jl
YXRlX2hvb2soKSBvZiBpdGVtIGJlaW5nIGNyZWF0ZWQuIFRoaXMKKwkgICBhcmcgaXMgY3VycmVu
dGx5IHVzZWQgYnk6CisKKwkgICAuICAtPmNyZWF0ZV9ob29rKCkgb2YgaW50ZXJuYWwgaXRlbQor
CSAgIChmcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2ludGVybmFsLmM6aW50ZXJuYWxfY3JlYXRlX2hv
b2soKSksCisJICAgLiAtPnBhc3RlKCkgbWV0aG9kIG9mIGRpcmVjdG9yeSBpdGVtLgorCSAgIC4g
LT5jcmVhdGVfaG9vaygpIG9mIGV4dGVudCBpdGVtCisKKwkgICBGb3IgaW50ZXJuYWwgaXRlbSwg
dGhpcyBpcyBsZWZ0ICJicm90aGVyIiBvZiBuZXcgbm9kZSBiZWluZworCSAgIGluc2VydGVkIGFu
ZCBpdCBpcyB1c2VkIHRvIGFkZCBuZXcgbm9kZSBpbnRvIHNpYmxpbmcgbGlzdAorCSAgIGFmdGVy
IHBhcmVudCB0byBpdCB3YXMganVzdCBpbnNlcnRlZCBpbnRvIHBhcmVudC4KKworCSAgIFdoaWxl
IC0+YXJnIGRvZXMgbG9vayBzb21ld2hhdCBvZiB1bm5lY2Vzc2FyeSBjb21waWNhdGlvbiwKKwkg
ICBpdCBhY3R1YWxseSBzYXZlcyBhIGxvdCBvZiBoZWFkYWNoZSBpbiBtYW55IHBsYWNlcywgYmVj
YXVzZQorCSAgIGFsbCBkYXRhIG5lY2Vzc2FyeSB0byBpbnNlcnQgb3IgcGFzdGUgbmV3IGRhdGEg
aW50byB0cmVlIGFyZQorCSAgIGNvbGxlY3RlZCBpbiBvbmUgcGxhY2UsIGFuZCB0aGlzIGVsaW1p
bmF0ZXMgYSBsb3Qgb2YgZXh0cmEKKwkgICBhcmd1bWVudCBwYXNzaW5nIGFuZCBzdG9yaW5nIGV2
ZXJ5d2hlcmUuCisKKwkgKi8KKwl2b2lkICphcmc7CisJLyogcGx1Z2luIG9mIGl0ZW0gd2UgYXJl
IGluc2VydGluZyAqLworCWl0ZW1fcGx1Z2luICppcGx1ZzsKK307CisKKy8qIF9fUkVJU0VSNF9D
T09SRF9IX18gKi8KKyNlbmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFy
aWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxD
IgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46
IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZGVidWcuYyBsaW51eC01LjQuMTcv
ZnMvcmVpc2VyNC9kZWJ1Zy5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2RlYnVn
LmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9m
cy9yZWlzZXI0L2RlYnVnLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDgyMjIxMzggKzAxMDAKQEAg
LTAsMCArMSwzMDkgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVp
c2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIERl
YnVnZ2luZyBmYWNpbGl0aWVzLiAqLworCisvKgorICogVGhpcyBmaWxlIGNvbnRhaW5zIGdlbmVy
aWMgZGVidWdnaW5nIGZ1bmN0aW9ucyB1c2VkIGJ5IHJlaXNlcjQuIFJvdWdobHkKKyAqIGZvbGxv
d2luZzoKKyAqCisgKiAgICAgcGFuaWNraW5nOiByZWlzZXI0X2RvX3BhbmljKCksIHJlaXNlcjRf
cHJpbnRfcHJlZml4KCkuCisgKgorICogICAgIGxvY2tpbmc6CisgKiAgICAgcmVpc2VyNF9zY2hl
ZHVsYWJsZSgpLCByZWlzZXI0X2xvY2tfY291bnRlcnMoKSwgcHJpbnRfbG9ja19jb3VudGVycygp
LAorICogICAgIHJlaXNlcjRfbm9fY291bnRlcnNfYXJlX2hlbGQoKSwgcmVpc2VyNF9jb21taXRf
Y2hlY2tfbG9ja3MoKQorICoKKyAqICAgICBlcnJvciBjb2RlIG1vbml0b3JpbmcgKHNlZSBjb21t
ZW50IGJlZm9yZSBSRVRFUlIgbWFjcm8pOgorICogICAgIHJlaXNlcjRfcmV0dXJuX2VycigpLCBy
ZWlzZXI0X3JlcG9ydF9lcnIoKS4KKyAqCisgKiAgICAgc3RhY2sgYmFjay10cmFjaW5nOiBmaWxs
X2JhY2t0cmFjZSgpCisgKgorICogICAgIG1pc2NlbGxhbmVvdXM6IHJlaXNlcjRfcHJlZW1wdF9w
b2ludCgpLCBjYWxsX29uX2VhY2hfYXNzZXJ0KCksCisgKiAgICAgcmVpc2VyNF9kZWJ1Z3RyYXAo
KS4KKyAqCisgKi8KKworI2luY2x1ZGUgInJlaXNlcjQuaCIKKyNpbmNsdWRlICJjb250ZXh0Lmgi
CisjaW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNpbmNsdWRlICJ6bm9k
ZS5oIgorCisjaW5jbHVkZSA8bGludXgvc3lzZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9zbGFiLmg+
CisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9mcy5oPgorI2luY2x1
ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8bGludXgva2FsbHN5bXMuaD4KKyNpbmNs
dWRlIDxsaW51eC92bWFsbG9jLmg+CisjaW5jbHVkZSA8bGludXgvY3R5cGUuaD4KKyNpbmNsdWRl
IDxsaW51eC9zeXNjdGwuaD4KKyNpbmNsdWRlIDxsaW51eC9oYXJkaXJxLmg+CisjaW5jbHVkZSA8
bGludXgvc2NoZWQvc2lnbmFsLmg+ICAvKiBzaWduYWxfcGVuZGluZygpICovCisKKyNpZiAwCisj
aWYgUkVJU0VSNF9ERUJVRworc3RhdGljIHZvaWQgcmVpc2VyNF9yZXBvcnRfZXJyKHZvaWQpOwor
I2Vsc2UKKyNkZWZpbmUgcmVpc2VyNF9yZXBvcnRfZXJyKCkgbm9vcAorI2VuZGlmCisjZW5kaWYg
IC8qICAwICAqLworCisvKgorICogZ2xvYmFsIGJ1ZmZlciB3aGVyZSBtZXNzYWdlIGdpdmVuIHRv
IHJlaXNlcjRfcGFuaWMgaXMgZm9ybWF0dGVkLgorICovCitzdGF0aWMgY2hhciBwYW5pY19idWZb
UkVJU0VSNF9QQU5JQ19NU0dfQlVGRkVSX1NJWkVdOworCisvKgorICogbG9jayBwcm90ZWN0aW5n
IGNvbnNpc3RlbmN5IG9mIHBhbmljX2J1ZiB1bmRlciBjb25jdXJyZW50IHBhbmljcworICovCitz
dGF0aWMgREVGSU5FX1NQSU5MT0NLKHBhbmljX2d1YXJkKTsKKworLyogWW91ciBiZXN0IGZyaWVu
ZC4gQ2FsbCBpdCBvbiBlYWNoIG9jY2FzaW9uLiAgVGhpcyBpcyBjYWxsZWQgYnkKKyAgICBmcy9y
ZWlzZXI0L2RlYnVnLmg6cmVpc2VyNF9wYW5pYygpLiAqLwordm9pZCByZWlzZXI0X2RvX3Bhbmlj
KGNvbnN0IGNoYXIgKmZvcm1hdC8qIGZvcm1hdCBzdHJpbmcgKi8gLCAuLi4gLyogcmVzdCAqLykK
K3sKKwlzdGF0aWMgaW50IGluX3BhbmljID0gMDsKKwl2YV9saXN0IGFyZ3M7CisKKwkvKgorCSAq
IGNoZWNrIGZvciByZWN1cnNpdmUgcGFuaWMuCisJICovCisJaWYgKGluX3BhbmljID09IDApIHsK
KwkJaW5fcGFuaWMgPSAxOworCisJCXNwaW5fbG9jaygmcGFuaWNfZ3VhcmQpOworCQl2YV9zdGFy
dChhcmdzLCBmb3JtYXQpOworCQl2c25wcmludGYocGFuaWNfYnVmLCBzaXplb2YocGFuaWNfYnVm
KSwgZm9ybWF0LCBhcmdzKTsKKwkJdmFfZW5kKGFyZ3MpOworCQlwcmludGsoS0VSTl9FTUVSRyAi
cmVpc2VyNCBwYW5pY2tlZCBjb3dhcmRseTogJXMiLCBwYW5pY19idWYpOworCQlzcGluX3VubG9j
aygmcGFuaWNfZ3VhcmQpOworCisJCS8qCisJCSAqIGlmIGtlcm5lbCBkZWJ1Z2dlciBpcyBjb25m
aWd1cmVkLS0tZHJvcCBpbi4gRWFybHkgZHJvcHBpbmcKKwkJICogaW50byBrZ2RiIGlzIG5vdCBh
bHdheXMgY29udmVuaWVudCwgYmVjYXVzZSBwYW5pYyBtZXNzYWdlCisJCSAqIGlzIG5vdCB5ZXQg
cHJpbnRlZCBtb3N0IG9mIHRoZSB0aW1lcy4gQnV0OgorCQkgKgorCQkgKiAgICAgKDEpIG1lc3Nh
Z2UgY2FuIGJlIGV4dHJhY3RlZCBmcm9tIHByaW50a19idWZbXQorCQkgKiAgICAgKGRlY2xhcmVk
IHN0YXRpYyBpbnNpZGUgb2YgcHJpbnRrKCkpLCBhbmQKKwkJICoKKwkJICogICAgICgyKSBzb21l
dGltZXMgc2VyaWFsL2tnZGIgY29tYm8gZGllcyB3aGlsZSBwcmludGluZworCQkgKiAgICAgbG9u
ZyBwYW5pYyBtZXNzYWdlLCBzbyBpdCdzIG1vcmUgcHJ1ZGVudCB0byBicmVhayBpbnRvCisJCSAq
ICAgICBkZWJ1Z2dlciBlYXJsaWVyLgorCQkgKgorCQkgKi8KKwkJREVCVUdPTigxKTsKKwl9CisJ
LyogdG8gbWFrZSBnY2MgaGFwcHkgYWJvdXQgbm9yZXR1cm4gYXR0cmlidXRlICovCisJcGFuaWMo
IiVzIiwgcGFuaWNfYnVmKTsKK30KKworI2lmIDAKK3ZvaWQKK3JlaXNlcjRfcHJpbnRfcHJlZml4
KGNvbnN0IGNoYXIgKmxldmVsLCBpbnQgcmVwZXJyLCBjb25zdCBjaGFyICptaWQsCisJCSAgICAg
Y29uc3QgY2hhciAqZnVuY3Rpb24sIGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5lbm8pCit7CisJ
Y29uc3QgY2hhciAqY29tbTsKKwlpbnQgcGlkOworCisJaWYgKHVubGlrZWx5KGluX2ludGVycnVw
dCgpIHx8IGluX2lycSgpKSkgeworCQljb21tID0gImludGVycnVwdCI7CisJCXBpZCA9IDA7CisJ
fSBlbHNlIHsKKwkJY29tbSA9IGN1cnJlbnQtPmNvbW07CisJCXBpZCA9IGN1cnJlbnQtPnBpZDsK
Kwl9CisJcHJpbnRrKCIlc3JlaXNlcjRbJS4xNnMoJWkpXTogJXMgKCVzOiVpKVslc106XG4iLAor
CSAgICAgICBsZXZlbCwgY29tbSwgcGlkLCBmdW5jdGlvbiwgZmlsZSwgbGluZW5vLCBtaWQpOwor
CWlmIChyZXBlcnIpCisJCXJlaXNlcjRfcmVwb3J0X2VycigpOworfQorI2VuZGlmICAvKiAgMCAg
Ki8KKworLyogUHJlZW1wdGlvbiBwb2ludDogdGhpcyBzaG91bGQgYmUgY2FsbGVkIHBlcmlvZGlj
YWxseSBkdXJpbmcgbG9uZyBydW5uaW5nCisgICBvcGVyYXRpb25zIChjYXJyeSwgYWxsb2NhdGUs
IGFuZCBzcXVlZXplIGFyZSBiZXN0IGV4YW1wbGVzKSAqLworaW50IHJlaXNlcjRfcHJlZW1wdF9w
b2ludCh2b2lkKQoreworCWFzc2VydCgibmlraXRhLTMwMDgiLCByZWlzZXI0X3NjaGVkdWxhYmxl
KCkpOworCWNvbmRfcmVzY2hlZCgpOworCXJldHVybiBzaWduYWxfcGVuZGluZyhjdXJyZW50KTsK
K30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIERlYnVnZ2luZyBhaWQ6IHJldHVybiBzdHJ1Y3Qg
d2hlcmUgaW5mb3JtYXRpb24gYWJvdXQgbG9ja3MgdGFrZW4gYnkgY3VycmVudAorICAgdGhyZWFk
IGlzIGFjY3VtdWxhdGVkLiBUaGlzIGNhbiBiZSB1c2VkIHRvIGZvcm11bGF0ZSBsb2NrIG9yZGVy
aW5nCisgICBjb25zdHJhaW50cyBhbmQgdmFyaW91cyBhc3NlcnRpb25zLgorCisqLworcmVpc2Vy
NF9sb2NrX2NudF9pbmZvICpyZWlzZXI0X2xvY2tfY291bnRlcnModm9pZCkKK3sKKwlyZWlzZXI0
X2NvbnRleHQgKmN0eCA9IGdldF9jdXJyZW50X2NvbnRleHQoKTsKKwlhc3NlcnQoImptYWNkLTEx
MjMiLCBjdHggIT0gTlVMTCk7CisJcmV0dXJuICZjdHgtPmxvY2tzOworfQorCisvKgorICogcHJp
bnQgaHVtYW4gcmVhZGFibGUgaW5mb3JtYXRpb24gYWJvdXQgbG9ja3MgaGVsZCBieSB0aGUgcmVp
c2VyNCBjb250ZXh0LgorICovCitzdGF0aWMgdm9pZCBwcmludF9sb2NrX2NvdW50ZXJzKGNvbnN0
IGNoYXIgKnByZWZpeCwKKwkJCQljb25zdCByZWlzZXI0X2xvY2tfY250X2luZm8gKiBpbmZvKQor
eworCXByaW50aygiJXM6IGpub2RlOiAlaSwgdHJlZTogJWkgKHI6JWksdzolaSksIGRrOiAlaSAo
cjolaSx3OiVpKVxuIgorCSAgICAgICAiamxvYWQ6ICVpLCAiCisJICAgICAgICJ0eG5oOiAlaSwg
YXRvbTogJWksIHN0YWNrOiAlaSwgdHhubWdyOiAlaSwgIgorCSAgICAgICAia3R4bm1ncmQ6ICVp
LCBmcTogJWlcbiIKKwkgICAgICAgImlub2RlOiAlaSwgIgorCSAgICAgICAiY2JrX2NhY2hlOiAl
aSAocjolaSx3JWkpLCAiCisJICAgICAgICJlZmx1c2g6ICVpLCAiCisJICAgICAgICJ6bG9jazog
JWksXG4iCisJICAgICAgICJzcGluOiAlaSwgbG9uZzogJWkgaW5vZGVfc2VtOiAocjolaSx3OiVp
KVxuIgorCSAgICAgICAiZDogJWksIHg6ICVpLCB0OiAlaVxuIiwgcHJlZml4LAorCSAgICAgICBp
bmZvLT5zcGluX2xvY2tlZF9qbm9kZSwKKwkgICAgICAgaW5mby0+cndfbG9ja2VkX3RyZWUsIGlu
Zm8tPnJlYWRfbG9ja2VkX3RyZWUsCisJICAgICAgIGluZm8tPndyaXRlX2xvY2tlZF90cmVlLAor
CSAgICAgICBpbmZvLT5yd19sb2NrZWRfZGssIGluZm8tPnJlYWRfbG9ja2VkX2RrLCBpbmZvLT53
cml0ZV9sb2NrZWRfZGssCisJICAgICAgIGluZm8tPnNwaW5fbG9ja2VkX2psb2FkLAorCSAgICAg
ICBpbmZvLT5zcGluX2xvY2tlZF90eG5oLAorCSAgICAgICBpbmZvLT5zcGluX2xvY2tlZF9hdG9t
LCBpbmZvLT5zcGluX2xvY2tlZF9zdGFjaywKKwkgICAgICAgaW5mby0+c3Bpbl9sb2NrZWRfdHhu
bWdyLCBpbmZvLT5zcGluX2xvY2tlZF9rdHhubWdyZCwKKwkgICAgICAgaW5mby0+c3Bpbl9sb2Nr
ZWRfZnEsCisJICAgICAgIGluZm8tPnNwaW5fbG9ja2VkX2lub2RlLAorCSAgICAgICBpbmZvLT5y
d19sb2NrZWRfY2JrX2NhY2hlLAorCSAgICAgICBpbmZvLT5yZWFkX2xvY2tlZF9jYmtfY2FjaGUs
CisJICAgICAgIGluZm8tPndyaXRlX2xvY2tlZF9jYmtfY2FjaGUsCisJICAgICAgIGluZm8tPnNw
aW5fbG9ja2VkX3N1cGVyX2VmbHVzaCwKKwkgICAgICAgaW5mby0+c3Bpbl9sb2NrZWRfemxvY2ss
CisJICAgICAgIGluZm8tPnNwaW5fbG9ja2VkLAorCSAgICAgICBpbmZvLT5sb25nX3Rlcm1fbG9j
a2VkX3pub2RlLAorCSAgICAgICBpbmZvLT5pbm9kZV9zZW1fciwgaW5mby0+aW5vZGVfc2VtX3cs
CisJICAgICAgIGluZm8tPmRfcmVmcywgaW5mby0+eF9yZWZzLCBpbmZvLT50X3JlZnMpOworfQor
CisvKiBjaGVjayB0aGF0IG5vIHNwaW5sb2NrcyBhcmUgaGVsZCAqLworaW50IHJlaXNlcjRfc2No
ZWR1bGFibGUodm9pZCkKK3sKKwlpZiAoZ2V0X2N1cnJlbnRfY29udGV4dF9jaGVjaygpICE9IE5V
TEwpIHsKKwkJaWYgKCFMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWQpKSB7CisJCQlwcmludF9sb2Nr
X2NvdW50ZXJzKCJpbiBhdG9taWMiLCByZWlzZXI0X2xvY2tfY291bnRlcnMoKSk7CisJCQlyZXR1
cm4gMDsKKwkJfQorCX0KKwltaWdodF9zbGVlcCgpOworCXJldHVybiAxOworfQorLyoKKyAqIHJl
dHVybiB0cnVlLCBpZmYgbm8gbG9ja3MgYXJlIGhlbGQuCisgKi8KK2ludCByZWlzZXI0X25vX2Nv
dW50ZXJzX2FyZV9oZWxkKHZvaWQpCit7CisJcmVpc2VyNF9sb2NrX2NudF9pbmZvICpjb3VudGVy
czsKKworCWNvdW50ZXJzID0gcmVpc2VyNF9sb2NrX2NvdW50ZXJzKCk7CisJcmV0dXJuCisJICAg
IChjb3VudGVycy0+c3Bpbl9sb2NrZWRfemxvY2sgPT0gMCkgJiYKKwkgICAgKGNvdW50ZXJzLT5z
cGluX2xvY2tlZF9qbm9kZSA9PSAwKSAmJgorCSAgICAoY291bnRlcnMtPnJ3X2xvY2tlZF90cmVl
ID09IDApICYmCisJICAgIChjb3VudGVycy0+cmVhZF9sb2NrZWRfdHJlZSA9PSAwKSAmJgorCSAg
ICAoY291bnRlcnMtPndyaXRlX2xvY2tlZF90cmVlID09IDApICYmCisJICAgIChjb3VudGVycy0+
cndfbG9ja2VkX2RrID09IDApICYmCisJICAgIChjb3VudGVycy0+cmVhZF9sb2NrZWRfZGsgPT0g
MCkgJiYKKwkgICAgKGNvdW50ZXJzLT53cml0ZV9sb2NrZWRfZGsgPT0gMCkgJiYKKwkgICAgKGNv
dW50ZXJzLT5zcGluX2xvY2tlZF90eG5oID09IDApICYmCisJICAgIChjb3VudGVycy0+c3Bpbl9s
b2NrZWRfYXRvbSA9PSAwKSAmJgorCSAgICAoY291bnRlcnMtPnNwaW5fbG9ja2VkX3N0YWNrID09
IDApICYmCisJICAgIChjb3VudGVycy0+c3Bpbl9sb2NrZWRfdHhubWdyID09IDApICYmCisJICAg
IChjb3VudGVycy0+c3Bpbl9sb2NrZWRfaW5vZGUgPT0gMCkgJiYKKwkgICAgKGNvdW50ZXJzLT5z
cGluX2xvY2tlZCA9PSAwKSAmJgorCSAgICAoY291bnRlcnMtPmxvbmdfdGVybV9sb2NrZWRfem5v
ZGUgPT0gMCkgJiYKKwkgICAgKGNvdW50ZXJzLT5pbm9kZV9zZW1fciA9PSAwKSAmJgorCSAgICAo
Y291bnRlcnMtPmlub2RlX3NlbV93ID09IDApICYmIChjb3VudGVycy0+ZF9yZWZzID09IDApOwor
fQorCisvKgorICogcmV0dXJuIHRydWUsIGlmZiB0cmFuc2FjdGlvbiBjb21taXQgY2FuIGJlIGRv
bmUgdW5kZXIgbG9ja3MgaGVsZCBieSB0aGUKKyAqIGN1cnJlbnQgdGhyZWFkLgorICovCitpbnQg
cmVpc2VyNF9jb21taXRfY2hlY2tfbG9ja3Modm9pZCkKK3sKKwlyZWlzZXI0X2xvY2tfY250X2lu
Zm8gKmNvdW50ZXJzOworCWludCBpbm9kZV9zZW1fcjsKKwlpbnQgaW5vZGVfc2VtX3c7CisJaW50
IHJlc3VsdDsKKworCS8qCisJICogaW5vZGUncyByZWFkL3dyaXRlIHNlbWFwaG9yZSBpcyB0aGUg
b25seSByZWlzZXI0IGxvY2sgdGhhdCBjYW4gYmUKKwkgKiBoZWxkIGR1cmluZyBjb21taXQuCisJ
ICovCisKKwljb3VudGVycyA9IHJlaXNlcjRfbG9ja19jb3VudGVycygpOworCWlub2RlX3NlbV9y
ID0gY291bnRlcnMtPmlub2RlX3NlbV9yOworCWlub2RlX3NlbV93ID0gY291bnRlcnMtPmlub2Rl
X3NlbV93OworCisJY291bnRlcnMtPmlub2RlX3NlbV9yID0gY291bnRlcnMtPmlub2RlX3NlbV93
ID0gMDsKKwlyZXN1bHQgPSByZWlzZXI0X25vX2NvdW50ZXJzX2FyZV9oZWxkKCk7CisJY291bnRl
cnMtPmlub2RlX3NlbV9yID0gaW5vZGVfc2VtX3I7CisJY291bnRlcnMtPmlub2RlX3NlbV93ID0g
aW5vZGVfc2VtX3c7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIGZpbGwgImVycm9yIHNp
dGUiIGluIHRoZSBjdXJyZW50IHJlaXNlcjQgY29udGV4dC4gU2VlIGNvbW1lbnQgYmVmb3JlIFJF
VEVSUgorICogbWFjcm8gZm9yIG1vcmUgZGV0YWlscy4KKyAqLwordm9pZCByZWlzZXI0X3JldHVy
bl9lcnIoaW50IGNvZGUsIGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5lKQoreworCWlmIChjb2Rl
IDwgMCAmJiBpc19pbl9yZWlzZXI0X2NvbnRleHQoKSkgeworCQlyZWlzZXI0X2NvbnRleHQgKmN0
eCA9IGdldF9jdXJyZW50X2NvbnRleHQoKTsKKworCQlpZiAoY3R4ICE9IE5VTEwpIHsKKwkJCWN0
eC0+ZXJyLmNvZGUgPSBjb2RlOworCQkJY3R4LT5lcnIuZmlsZSA9IGZpbGU7CisJCQljdHgtPmVy
ci5saW5lID0gbGluZTsKKwkJfQorCX0KK30KKworI2lmIDAKKy8qCisgKiByZXBvcnQgZXJyb3Ig
aW5mb3JtYXRpb24gcmVjb3JkZXIgYnkgcmVpc2VyNF9yZXR1cm5fZXJyKCkuCisgKi8KK3N0YXRp
YyB2b2lkIHJlaXNlcjRfcmVwb3J0X2Vycih2b2lkKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4
ID0gZ2V0X2N1cnJlbnRfY29udGV4dF9jaGVjaygpOworCisJaWYgKGN0eCAhPSBOVUxMKSB7CisJ
CWlmIChjdHgtPmVyci5jb2RlICE9IDApIHsKKwkJCXByaW50aygiY29kZTogJWkgYXQgJXM6JWlc
biIsCisJCQkgICAgICAgY3R4LT5lcnIuY29kZSwgY3R4LT5lcnIuZmlsZSwgY3R4LT5lcnIubGlu
ZSk7CisJCX0KKwl9Cit9CisjZW5kaWYgIC8qICAwICAqLworCisjZW5kaWYJCQkJLyogUkVJU0VS
NF9ERUJVRyAqLworCisjaWYgS0VSTkVMX0RFQlVHR0VSCisKKy8qCisgKiB0aGlzIGZ1bmN0aW9u
cyBqdXN0IGRyb3BzIGludG8ga2VybmVsIGRlYnVnZ2VyLiBJdCBpcyBhIGNvbnZlbmllbnQgcGxh
Y2UgdG8KKyAqIHB1dCBicmVha3BvaW50IGluLgorICovCit2b2lkIHJlaXNlcjRfZGVidWd0cmFw
KHZvaWQpCit7CisJLyogZG8gbm90aGluZy4gUHV0IGJyZWFrIHBvaW50IGhlcmUuICovCisjaWYg
ZGVmaW5lZChDT05GSUdfS0dEQikgJiYgIWRlZmluZWQoQ09ORklHX1JFSVNFUjRfRlNfTU9EVUxF
KQorCWV4dGVybiB2b2lkIGtnZGJfYnJlYWtwb2ludCh2b2lkKTsKKwkvL2tnZGJfYnJlYWtwb2lu
dCgpOworI2VuZGlmCit9CisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2Fs
IHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6
ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29s
dW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvZGVidWcuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9kZWJ1
Zy5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2RlYnVnLmgJMTk3MC0wMS0wMSAw
MTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2RlYnVn
LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NDgyMjIxMzggKzAxMDAKQEAgLTAsMCArMSwzNTMgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIERlY2xhcmF0aW9ucyBvZiBk
ZWJ1ZyBtYWNyb3MuICovCisKKyNpZiAhZGVmaW5lZChfX0ZTX1JFSVNFUjRfREVCVUdfSF9fKQor
I2RlZmluZSBfX0ZTX1JFSVNFUjRfREVCVUdfSF9fCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisj
aW5jbHVkZSAicmVpc2VyNC5oIgorCisvKioKKyAqIGdlbmVyaWMgZnVuY3Rpb24gdG8gcHJvZHVj
ZSBmb3JtYXR0ZWQgb3V0cHV0LCBkZWNvcmF0aW5nIGl0IHdpdGgKKyAqIHdoYXRldmVyIHN0YW5k
YXJkIHByZWZpeGVzL3Bvc3RmaXhlcyB3ZSB3YW50LiAiRnVuIiBpcyBhIGZ1bmN0aW9uCisgKiB0
aGF0IHdpbGwgYmUgYWN0dWFsbHkgY2FsbGVkLCBjYW4gYmUgcHJpbnRrLCBwYW5pYyBldGMuCisg
KiBUaGlzIGlzIGZvciB1c2UgYnkgb3RoZXIgZGVidWdnaW5nIG1hY3Jvcywgbm90IGJ5IHVzZXJz
LgorICovCisjZGVmaW5lIERDQUxMKGxldiwgZnVuLCByZXBlcnIsIGxhYmVsLCBmb3JtYXQsIC4u
LikJCQlcCisoewkJCQkJCQkJCVwKKwlmdW4obGV2ICJyZWlzZXI0WyUuMTZzKCVpKV06ICVzICgl
czolaSlbJXNdOlxuIiBmb3JtYXQgIlxuIiAsCVwKKwkgICAgY3VycmVudC0+Y29tbSwgY3VycmVu
dC0+cGlkLCBfX0ZVTkNUSU9OX18sCQkJXAorCSAgICBfX0ZJTEVfXywgX19MSU5FX18sIGxhYmVs
LCAjIyBfX1ZBX0FSR1NfXyk7CQkJXAorfSkKKworLyoKKyAqIGNhdXNlIGtlcm5lbCB0byBjcmFz
aAorICovCisjZGVmaW5lIHJlaXNlcjRfcGFuaWMobWlkLCBmb3JtYXQsIC4uLikJCQkJXAorCURD
QUxMKCIiLCByZWlzZXI0X2RvX3BhbmljLCAxLCBtaWQsIGZvcm1hdCAsICMjIF9fVkFfQVJHU19f
KQorCisvKiBwcmludCBtZXNzYWdlIHdpdGggaW5kaWNhdGlvbiBvZiBjdXJyZW50IHByb2Nlc3Ms
IGZpbGUsIGxpbmUgYW5kCisgICBmdW5jdGlvbiAqLworI2RlZmluZSByZWlzZXI0X2xvZyhsYWJl
bCwgZm9ybWF0LCAuLi4pIAkJCQlcCisJRENBTEwoS0VSTl9ERUJVRywgcHJpbnRrLCAwLCBsYWJl
bCwgZm9ybWF0ICwgIyMgX19WQV9BUkdTX18pCisKKy8qIEFzc2VydGlvbiBjaGVja2VkIGR1cmlu
ZyBjb21waWxhdGlvbi4KKyAgICBJZiAiY29uZCIgaXMgZmFsc2UgKDApIHdlIGdldCBkdXBsaWNh
dGUgY2FzZSBsYWJlbCBpbiBzd2l0Y2guCisgICAgVXNlIHRoaXMgdG8gY2hlY2sgc29tZXRoaW5n
IGxpa2UgZmFtb3VzCisgICAgICAgY2Fzc2VydCAoc2l6ZW9mKHN0cnVjdCByZWlzZXJmc19qb3Vy
bmFsX2NvbW1pdCkgPT0gNDA5NikgOworICAgIGluIDMueCBqb3VybmFsLmMuIElmIGNhc3NlcnRp
b24gZmFpbHMgeW91IGdldCBjb21waWxlciBlcnJvciwKKyAgICBzbyBubyAibWFpbnRhaW5lci1p
ZCIuCisqLworI2RlZmluZSBjYXNzZXJ0KGNvbmQpICh7IHN3aXRjaCAoLTEpIHsgY2FzZSAoY29u
ZCk6IGNhc2UgMDogYnJlYWs7IH0gfSkKKworI2RlZmluZSBub29wICAgZG8gezsgfSB3aGlsZSAo
MCkKKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIHZlcnNpb24gb2YgaW5mbyB0aGF0IG9ubHkgYWN0
dWFsbHkgcHJpbnRzIGFueXRoaW5nIHdoZW4gX2RfZWJ1Z2dpbmcKKyAgICBpcyBvbiAqLworI2Rl
ZmluZSBkaW5mbyhmb3JtYXQsIC4uLikgcHJpbnRrKGZvcm1hdCAsICMjIF9fVkFfQVJHU19fKQor
LyogbWFjcm8gdG8gY2F0Y2ggbG9naWNhbCBlcnJvcnMuIFB1dCBpdCBpbnRvIGBkZWZhdWx0JyBj
bGF1c2Ugb2YKKyAgICBzd2l0Y2goKSBzdGF0ZW1lbnQuICovCisjZGVmaW5lIGltcG9zc2libGUo
bGFiZWwsIGZvcm1hdCwgLi4uKSAJCQlcCisJcmVpc2VyNF9wYW5pYyhsYWJlbCwgImltcG9zc2li
bGU6ICIgZm9ybWF0ICwgIyMgX19WQV9BUkdTX18pCisvKiBhc3NlcnQgYXNzdXJlcyB0aGF0IEBj
b25kIGlzIHRydWUuIElmIGl0IGlzIG5vdCwgcmVpc2VyNF9wYW5pYygpIGlzCisgICBjYWxsZWQu
IFVzZSB0aGlzIGZvciBjaGVja2luZyBsb2dpY2FsIGNvbnNpc3RlbmN5IGFuZCBfbmV2ZXJfIGNh
bGwKKyAgIHRoaXMgdG8gY2hlY2sgY29ycmVjdG5lc3Mgb2YgZXh0ZXJuYWwgZGF0YTogZGlzayBi
bG9ja3MgYW5kIHVzZXItaW5wdXQgLiAqLworI2RlZmluZSBhc3NlcnQobGFiZWwsIGNvbmQpCQkJ
CQkJXAorKHsJCQkJCQkJCQlcCisJLyogY2FsbF9vbl9lYWNoX2Fzc2VydCgpOyAqLwkJCQkJXAor
CWlmIChjb25kKSB7CQkJCQkJCVwKKwkJLyogcHV0IG5lZ2F0ZWQgY2hlY2sgdG8gYXZvaWQgdXNp
bmcgIShjb25kKSB0aGF0IHdvdWxkIGxvc2UgXAorCQkgKiB3YXJuaW5ncyBmb3IgdGhpbmdzIGxp
a2UgYXNzZXJ0KGEgPSBiKTsgKi8JCVwKKwkJOwkJCQkJCQlcCisJfSBlbHNlIHsJCQkJCQkJXAor
CQlERUJVR09OKDEpOwkJCQkJCVwKKwkJcmVpc2VyNF9wYW5pYyhsYWJlbCwgImFzc2VydGlvbiBm
YWlsZWQ6ICVzIiwgI2NvbmQpOwlcCisJfQkJCQkJCQkJXAorfSkKKworLyogbGlrZSBhc3NlcnRp
b24sIGJ1dCBAZXhwciBpcyBldmFsdWF0ZWQgZXZlbiBpZiBSRUlTRVI0X0RFQlVHIGlzIG9mZi4g
Ki8KKyNkZWZpbmUgY2hlY2tfbWUobGFiZWwsIGV4cHIpCWFzc2VydChsYWJlbCwgKGV4cHIpKQor
CisjZGVmaW5lIE9OX0RFQlVHKGV4cCkgZXhwCisKK2V4dGVybiBpbnQgcmVpc2VyNF9zY2hlZHVs
YWJsZSh2b2lkKTsKK2V4dGVybiB2b2lkIGNhbGxfb25fZWFjaF9hc3NlcnQodm9pZCk7CisKKyNl
bHNlCisKKyNkZWZpbmUgZGluZm8oZm9ybWF0LCBhcmdzLi4uKSBub29wCisjZGVmaW5lIGltcG9z
c2libGUobGFiZWwsIGZvcm1hdCwgYXJncy4uLikgbm9vcAorI2RlZmluZSBhc3NlcnQobGFiZWws
IGNvbmQpIG5vb3AKKyNkZWZpbmUgY2hlY2tfbWUobGFiZWwsIGV4cHIpCSgodm9pZCkgKGV4cHIp
KQorI2RlZmluZSBPTl9ERUJVRyhleHApCisjZGVmaW5lIHJlaXNlcjRfc2NoZWR1bGFibGUoKSBt
aWdodF9zbGVlcCgpCisKKy8qIFJFSVNFUjRfREVCVUcgKi8KKyNlbmRpZgorCisjaWYgUkVJU0VS
NF9ERUJVRworLyogcGVyLXRocmVhZCBpbmZvcm1hdGlvbiBhYm91dCBsb2NrIGFjcXVpcmVkIGJ5
IHRoaXMgdGhyZWFkLiBVc2VkIGJ5IGxvY2sKKyAqIG9yZGVyaW5nIGNoZWNraW5nIGluIHNwaW5f
bWFjcm9zLmggKi8KK3R5cGVkZWYgc3RydWN0IHJlaXNlcjRfbG9ja19jbnRfaW5mbyB7CisJaW50
IHJ3X2xvY2tlZF90cmVlOworCWludCByZWFkX2xvY2tlZF90cmVlOworCWludCB3cml0ZV9sb2Nr
ZWRfdHJlZTsKKworCWludCByd19sb2NrZWRfZGs7CisJaW50IHJlYWRfbG9ja2VkX2RrOworCWlu
dCB3cml0ZV9sb2NrZWRfZGs7CisKKwlpbnQgcndfbG9ja2VkX2Nia19jYWNoZTsKKwlpbnQgcmVh
ZF9sb2NrZWRfY2JrX2NhY2hlOworCWludCB3cml0ZV9sb2NrZWRfY2JrX2NhY2hlOworCisJaW50
IHNwaW5fbG9ja2VkX3psb2NrOworCWludCBzcGluX2xvY2tlZF9qbm9kZTsKKwlpbnQgc3Bpbl9s
b2NrZWRfamxvYWQ7CisJaW50IHNwaW5fbG9ja2VkX3R4bmg7CisJaW50IHNwaW5fbG9ja2VkX2F0
b207CisJaW50IHNwaW5fbG9ja2VkX3N0YWNrOworCWludCBzcGluX2xvY2tlZF90eG5tZ3I7CisJ
aW50IHNwaW5fbG9ja2VkX2t0eG5tZ3JkOworCWludCBzcGluX2xvY2tlZF9mcTsKKwlpbnQgc3Bp
bl9sb2NrZWRfaW5vZGU7CisJaW50IHNwaW5fbG9ja2VkX3N1cGVyX2VmbHVzaDsKKwlpbnQgc3Bp
bl9sb2NrZWQ7CisJaW50IGxvbmdfdGVybV9sb2NrZWRfem5vZGU7CisKKwlpbnQgaW5vZGVfc2Vt
X3I7CisJaW50IGlub2RlX3NlbV93OworCisJaW50IGRfcmVmczsKKwlpbnQgeF9yZWZzOworCWlu
dCB0X3JlZnM7Cit9IHJlaXNlcjRfbG9ja19jbnRfaW5mbzsKKworZXh0ZXJuIHN0cnVjdCByZWlz
ZXI0X2xvY2tfY250X2luZm8gKnJlaXNlcjRfbG9ja19jb3VudGVycyh2b2lkKTsKKyNkZWZpbmUg
SU5fQ09OVEVYVChhLCBiKSAoaXNfaW5fcmVpc2VyNF9jb250ZXh0KCkgPyAoYSkgOiAoYikpCisK
Ky8qIGluY3JlbWVudCBsb2NrLWNvdW50ZXIgQGNvdW50ZXIsIGlmIHByZXNlbnQgKi8KKyNkZWZp
bmUgTE9DS19DTlRfSU5DKGNvdW50ZXIpCQkJCQlcCisJSU5fQ09OVEVYVCgrKyhyZWlzZXI0X2xv
Y2tfY291bnRlcnMoKS0+Y291bnRlciksIDApCisKKy8qIGRlY3JlbWVudCBsb2NrLWNvdW50ZXIg
QGNvdW50ZXIsIGlmIHByZXNlbnQgKi8KKyNkZWZpbmUgTE9DS19DTlRfREVDKGNvdW50ZXIpCQkJ
CQlcCisJSU5fQ09OVEVYVCgtLShyZWlzZXI0X2xvY2tfY291bnRlcnMoKS0+Y291bnRlciksIDAp
CisKKy8qIGNoZWNrIHRoYXQgbG9jay1jb3VudGVyIGlzIHplcm8uIFRoaXMgaXMgZm9yIHVzZSBp
biBhc3NlcnRpb25zICovCisjZGVmaW5lIExPQ0tfQ05UX05JTChjb3VudGVyKQkJCQkJXAorCUlO
X0NPTlRFWFQocmVpc2VyNF9sb2NrX2NvdW50ZXJzKCktPmNvdW50ZXIgPT0gMCwgMSkKKworLyog
Y2hlY2sgdGhhdCBsb2NrLWNvdW50ZXIgaXMgZ3JlYXRlciB0aGFuIHplcm8uIFRoaXMgaXMgZm9y
IHVzZSBpbgorICogYXNzZXJ0aW9ucyAqLworI2RlZmluZSBMT0NLX0NOVF9HVFooY291bnRlcikJ
CQkJCVwKKwlJTl9DT05URVhUKHJlaXNlcjRfbG9ja19jb3VudGVycygpLT5jb3VudGVyID4gMCwg
MSkKKyNkZWZpbmUgTE9DS19DTlRfTFQoY291bnRlcixuKQkJCQkJXAorCUlOX0NPTlRFWFQocmVp
c2VyNF9sb2NrX2NvdW50ZXJzKCktPmNvdW50ZXIgPCBuLCAxKQorCisjZWxzZQkJCQkvKiBSRUlT
RVI0X0RFQlVHICovCisKKy8qIG5vLW9wIHZlcnNpb25zIG9uIHRoZSBhYm92ZSAqLworCit0eXBl
ZGVmIHN0cnVjdCByZWlzZXI0X2xvY2tfY250X2luZm8geworfSByZWlzZXI0X2xvY2tfY250X2lu
Zm87CisKKyNkZWZpbmUgcmVpc2VyNF9sb2NrX2NvdW50ZXJzKCkgKChyZWlzZXI0X2xvY2tfY250
X2luZm8gKilOVUxMKQorI2RlZmluZSBMT0NLX0NOVF9JTkMoY291bnRlcikgbm9vcAorI2RlZmlu
ZSBMT0NLX0NOVF9ERUMoY291bnRlcikgbm9vcAorI2RlZmluZSBMT0NLX0NOVF9OSUwoY291bnRl
cikgKDEpCisjZGVmaW5lIExPQ0tfQ05UX0dUWihjb3VudGVyKSAoMSkKKyNkZWZpbmUgTE9DS19D
TlRfTFQoY291bnRlciwgbikgKDEpCisKKyNlbmRpZgkJCQkvKiBSRUlTRVI0X0RFQlVHICovCisK
KyNkZWZpbmUgYXNzZXJ0X3NwaW5fbm90X2xvY2tlZChsb2NrKSBCVUdfT04oMCkKKyNkZWZpbmUg
YXNzZXJ0X3J3X3dyaXRlX2xvY2tlZChsb2NrKSBCVUdfT04oMCkKKyNkZWZpbmUgYXNzZXJ0X3J3
X3JlYWRfbG9ja2VkKGxvY2spIEJVR19PTigwKQorI2RlZmluZSBhc3NlcnRfcndfbG9ja2VkKGxv
Y2spIEJVR19PTigwKQorI2RlZmluZSBhc3NlcnRfcndfbm90X3dyaXRlX2xvY2tlZChsb2NrKSBC
VUdfT04oMCkKKyNkZWZpbmUgYXNzZXJ0X3J3X25vdF9yZWFkX2xvY2tlZChsb2NrKSBCVUdfT04o
MCkKKyNkZWZpbmUgYXNzZXJ0X3J3X25vdF9sb2NrZWQobG9jaykgQlVHX09OKDApCisKKy8qIGZs
YWdzIGNvbnRyb2xsaW5nIGRlYnVnZ2luZyBiZWhhdmlvci4gQXJlIHNldCB0aHJvdWdoIGRlYnVn
X2ZsYWdzPU4gbW91bnQKKyAgIG9wdGlvbi4gKi8KK3R5cGVkZWYgZW51bSB7CisJLyogcHJpbnQg
YSBsb3Qgb2YgaW5mb3JtYXRpb24gZHVyaW5nIHBhbmljLiBXaGVuIHRoaXMgaXMgb24gYWxsIGpu
b2RlcworCSAqIGFyZSBsaXN0ZWQuIFRoaXMgY2FuIGJlICp2ZXJ5KiBsYXJnZSBvdXRwdXQuIFVz
dWFsbHkgeW91IGRvbid0IHdhbnQKKwkgKiB0aGlzLiBFc3BlY2lhbGx5IG92ZXIgc2VyaWFsIGxp
bmUuICovCisJUkVJU0VSNF9WRVJCT1NFX1BBTklDID0gMHgwMDAwMDAwMSwKKwkvKiBwcmludCBh
IGxvdCBvZiBpbmZvcm1hdGlvbiBkdXJpbmcgdW1vdW50ICovCisJUkVJU0VSNF9WRVJCT1NFX1VN
T1VOVCA9IDB4MDAwMDAwMDIsCisJLyogcHJpbnQgZ2F0aGVyZWQgc3RhdGlzdGljcyBvbiB1bW91
bnQgKi8KKwlSRUlTRVI0X1NUQVRTX09OX1VNT1VOVCA9IDB4MDAwMDAwMDQsCisJLyogY2hlY2sg
bm9kZSBjb25zaXN0ZW5jeSAqLworCVJFSVNFUjRfQ0hFQ0tfTk9ERSA9IDB4MDAwMDAwMDgKK30g
cmVpc2VyNF9kZWJ1Z19mbGFnczsKKworZXh0ZXJuIGludCBpc19pbl9yZWlzZXI0X2NvbnRleHQo
dm9pZCk7CisKKy8qCisgKiBldmFsdWF0ZSBleHByZXNzaW9uIEBlIG9ubHkgaWYgd2l0aCByZWlz
ZXI0IGNvbnRleHQKKyAqLworI2RlZmluZSBPTl9DT05URVhUKGUpCWRvIHsJCQlcCisJaWYgKGlz
X2luX3JlaXNlcjRfY29udGV4dCgpKSB7CQlcCisJCWU7CQkJCVwKKwl9IH0gd2hpbGUgKDApCisK
Ky8qCisgKiBldmFsdWF0ZSBleHByZXNzaW9uIEBlIG9ubHkgd2hlbiB3aXRoaW4gcmVpc2VyNF9j
b250ZXh0IGFuZCBkZWJ1Z2dpbmcgaXMKKyAqIG9uLgorICovCisjZGVmaW5lIE9OX0RFQlVHX0NP
TlRFWFQoZSkgT05fREVCVUcoT05fQ09OVEVYVChlKSkKKworLyoKKyAqIGNvbXBsYWluIGFib3V0
IHVuZXhwZWN0ZWQgZnVuY3Rpb24gcmVzdWx0IGFuZCBjcmFzaC4gVXNlZCBpbiAiZGVmYXVsdCIK
KyAqIGJyYW5jaGVzIG9mIHN3aXRjaCBzdGF0ZW1lbnRzIGFuZCBhbGlrZSB0byBhc3NlcnQgdGhh
dCBpbnZhbGlkIHJlc3VsdHMgYXJlCisgKiBub3Qgc2lsZW50bHkgaWdub3JlZC4KKyAqLworI2Rl
ZmluZSB3cm9uZ19yZXR1cm5fdmFsdWUobGFiZWwsIGZ1bmN0aW9uKQkJCQlcCisJaW1wb3NzaWJs
ZShsYWJlbCwgIndyb25nIHJldHVybiB2YWx1ZSBmcm9tICIgZnVuY3Rpb24pCisKKy8qIElzc3Vl
IGRpZmZlcmVudCB0eXBlcyBvZiByZWlzZXI0IG1lc3NhZ2VzIHRvIHRoZSBjb25zb2xlICovCisj
ZGVmaW5lIHdhcm5pbmcobGFiZWwsIGZvcm1hdCwgLi4uKQkJCQkJXAorCURDQUxMKEtFUk5fV0FS
TklORywgCQkJCQkJXAorCSAgICAgICBwcmludGssIDEsIGxhYmVsLCAiV0FSTklORzogIiBmb3Jt
YXQgLCAjIyBfX1ZBX0FSR1NfXykKKyNkZWZpbmUgbm90aWNlKGxhYmVsLCBmb3JtYXQsIC4uLikJ
CQkJCVwKKwlEQ0FMTChLRVJOX05PVElDRSwgCQkJCQkJXAorCSAgICAgICBwcmludGssIDEsIGxh
YmVsLCAiTk9USUNFOiAiIGZvcm1hdCAsICMjIF9fVkFfQVJHU19fKQorCisvKiBtYXJrIG5vdCB5
ZXQgaW1wbGVtZW50ZWQgZnVuY3Rpb25hbGl0eSAqLworI2RlZmluZSBub3RfeWV0KGxhYmVsLCBm
b3JtYXQsIC4uLikJCQkJXAorCXJlaXNlcjRfcGFuaWMobGFiZWwsICJOT1QgWUVUIElNUExFTUVO
VEVEOiAiIGZvcm1hdCAsICMjIF9fVkFfQVJHU19fKQorCitleHRlcm4gdm9pZCByZWlzZXI0X2Rv
X3BhbmljKGNvbnN0IGNoYXIgKmZvcm1hdCwgLi4uKQorICAgIF9fYXR0cmlidXRlX18gKChub3Jl
dHVybiwgZm9ybWF0KHByaW50ZiwgMSwgMikpKTsKKworZXh0ZXJuIGludCByZWlzZXI0X3ByZWVt
cHRfcG9pbnQodm9pZCk7CitleHRlcm4gdm9pZCByZWlzZXI0X3ByaW50X3N0YXRzKHZvaWQpOwor
CisjaWYgUkVJU0VSNF9ERUJVRworZXh0ZXJuIGludCByZWlzZXI0X25vX2NvdW50ZXJzX2FyZV9o
ZWxkKHZvaWQpOworZXh0ZXJuIGludCByZWlzZXI0X2NvbW1pdF9jaGVja19sb2Nrcyh2b2lkKTsK
KyNlbHNlCisjZGVmaW5lIHJlaXNlcjRfbm9fY291bnRlcnNfYXJlX2hlbGQoKSAoMSkKKyNkZWZp
bmUgcmVpc2VyNF9jb21taXRfY2hlY2tfbG9ja3MoKSAoMSkKKyNlbmRpZgorCisvKiB0cnVlIGlm
IEBpIGlzIHBvd2VyLW9mLXR3by4gVXNlZnVsIGZvciByYXRlLWxpbWl0ZWQgd2FybmluZ3MsIGV0
Yy4gKi8KKyNkZWZpbmUgSVNfUE9XKGkpIAkJCQlcCisoewkJCQkJCVwKKwl0eXBlb2YoaSkgX19p
OwkJCQlcCisJCQkJCQlcCisJX19pID0gKGkpOwkJCQlcCisJIShfX2kgJiAoX19pIC0gMSkpOwkJ
CVwKK30pCisKKyNkZWZpbmUgS0VSTkVMX0RFQlVHR0VSICgxKQorCisjaWYgS0VSTkVMX0RFQlVH
R0VSCisKK2V4dGVybiB2b2lkIHJlaXNlcjRfZGVidWd0cmFwKHZvaWQpOworCisvKgorICogQ2hl
Y2sgY29uZGl0aW9uIEBjb25kIGFuZCBkcm9wIGludG8ga2VybmVsIGRlYnVnZ2VyIChrZ2RiKSBp
ZiBpdCdzIHRydWUuIElmCisgKiBrZ2RiIGlzIG5vdCBjb21waWxlZCBpbiwgZG8gbm90aGluZy4K
KyAqLworI2RlZmluZSBERUJVR09OKGNvbmQpCQkJCQlcCisoewkgICAgICAgICAgICAgICAJCQkJ
CVwKKwlpZiAodW5saWtlbHkoY29uZCkpCQkJCVwKKwkJcmVpc2VyNF9kZWJ1Z3RyYXAoKTsJCQlc
Cit9KQorI2Vsc2UKKyNkZWZpbmUgREVCVUdPTihjb25kKSBub29wCisjZW5kaWYKKworLyoKKyAq
IEVycm9yIGNvZGUgdHJhY2luZyBmYWNpbGl0eS4gKElkZWEgaXMgYm9ycm93ZWQgZnJvbSBYRlMg
Y29kZS4pCisgKgorICogU3VwcG9zZSBzb21lIHN0cmFuZ2UgYW5kL29yIHVuZXhwZWN0ZWQgY29k
ZSBpcyByZXR1cm5lZCBmcm9tIHNvbWUgZnVuY3Rpb24KKyAqIChmb3IgZXhhbXBsZSwgd3JpdGUo
MikgcmV0dXJucyAtRUVYSVNUKS4gSXQgaXMgcG9zc2libGUgdG8gcGxhY2UgYQorICogYnJlYWtw
b2ludCBpbiB0aGUgcmVpc2VyNF93cml0ZSgpLCBidXQgaXQgaXMgdG9vIGxhdGUgaGVyZS4gSG93
IHRvIGZpbmQgb3V0CisgKiBpbiB3aGF0IHBhcnRpY3VsYXIgcGxhY2UgLUVFWElTVCB3YXMgZ2Vu
ZXJhdGVkIGZpcnN0PworICoKKyAqIEluIHJlaXNlcjQgYWxsIHBsYWNlcyB3aGVyZSBhY3R1YWwg
ZXJyb3IgY29kZXMgYXJlIHByb2R1Y2VkICh0aGF0IGlzLAorICogc3RhdGVtZW50cyBvZiB0aGUg
Zm9ybQorICoKKyAqICAgICByZXR1cm4gLUVGT087ICAgICAgICAvLyAoMSksIG9yCisgKgorICog
ICAgIHJlc3VsdCA9IC1FRk9POyAgICAgIC8vICgyKQorICoKKyAqIGFyZSByZXBsYWNlZCB3aXRo
CisgKgorICogICAgIHJldHVybiBSRVRFUlIoLUVGT08pOyAgICAgICAgLy8gKDFhKSwgYW5kCisg
KgorICogICAgIHJlc3VsdCA9IFJFVEVSUigtRUZPTyk7ICAgICAgLy8gKDJhKSByZXNwZWN0aXZl
bHkKKyAqCisgKiBSRVRFUlIoKSBtYWNybyBmaWxscyBhIGJhY2t0cmFjZSBpbiByZWlzZXI0X2Nv
bnRleHQuIFRoaXMgYmFjay10cmFjZSBpcworICogcHJpbnRlZCBpbiBlcnJvciBhbmQgd2Fybmlu
ZyBtZXNzYWdlcy4gTW9yZW92ZXIsIGl0J3MgcG9zc2libGUgdG8gcHV0IGEKKyAqIGNvbmRpdGlv
bmFsIGJyZWFrcG9pbnQgaW4gcmVpc2VyNF9yZXR1cm5fZXJyIChsb3ctbGV2ZWwgZnVuY3Rpb24g
Y2FsbGVkCisgKiBieSBSRVRFUlIoKSB0byBkbyB0aGUgYWN0dWFsIHdvcmspIHRvIGJyZWFrIGlu
dG8gZGVidWdnZXIgaW1tZWRpYXRlbHkKKyAqIHdoZW4gcGFydGljdWxhciBlcnJvciBoYXBwZW5z
LgorICoKKyAqLworCisjaWYgUkVJU0VSNF9ERUJVRworCisvKgorICogZGF0YS10eXBlIHRvIHN0
b3JlIGluZm9ybWF0aW9uIGFib3V0IHdoZXJlIGVycm9yIGhhcHBlbmVkICgiZXJyb3Igc2l0ZSIp
LgorICovCit0eXBlZGVmIHN0cnVjdCBlcnJfc2l0ZSB7CisJaW50IGNvZGU7CQkvKiBlcnJvciBj
b2RlICovCisJY29uc3QgY2hhciAqZmlsZTsJLyogc291cmNlIGZpbGUsIGZpbGxlZCBieSBfX0ZJ
TEVfXyAqLworCWludCBsaW5lOwkJLyogc291cmNlIGZpbGUgbGluZSwgZmlsbGVkIGJ5IF9fTElO
RV9fICovCit9IGVycl9zaXRlOworCitleHRlcm4gdm9pZCByZWlzZXI0X3JldHVybl9lcnIoaW50
IGNvZGUsIGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5lKTsKKworLyoKKyAqIGZpbGwgJmdldF9j
dXJyZW50X2NvbnRleHQoKS0+ZXJyX3NpdGUgd2l0aCBlcnJvciBpbmZvcm1hdGlvbi4KKyAqLwor
I2RlZmluZSBSRVRFUlIoY29kZSkJCQkJCVwKKyh7CQkJCQkJICAgICAgICBcCisJdHlwZW9mKGNv
ZGUpIF9fY29kZTsJCQkJXAorCQkJCQkJCVwKKwlfX2NvZGUgPSAoY29kZSk7CQkJCVwKKwlyZWlz
ZXI0X3JldHVybl9lcnIoX19jb2RlLCBfX0ZJTEVfXywgX19MSU5FX18pOwlcCisJX19jb2RlOwkJ
CQkJCVwKK30pCisKKyNlbHNlCisKKy8qCisgKiBuby1vcCB2ZXJzaW9ucyBvZiB0aGUgYWJvdmUK
KyAqLworCit0eXBlZGVmIHN0cnVjdCBlcnJfc2l0ZSB7Cit9IGVycl9zaXRlOworI2RlZmluZSBS
RVRFUlIoY29kZSkgY29kZQorI2VuZGlmCisKKyNpZiBSRUlTRVI0X0xBUkdFX0tFWQorLyoKKyAq
IGNvbmRpdGlvbmFsbHkgY29tcGlsZSBhcmd1bWVudHMgb25seSBpZiBSRUlTRVI0X0xBUkdFX0tF
WSBpcyBvbi4KKyAqLworI2RlZmluZSBPTl9MQVJHRV9LRVkoLi4uKSBfX1ZBX0FSR1NfXworI2Vs
c2UKKyNkZWZpbmUgT05fTEFSR0VfS0VZKC4uLikKKyNlbmRpZgorCisvKiBfX0ZTX1JFSVNFUjRf
REVCVUdfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZh
cmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJM
QyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1u
OiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4x
Ny5vcmlnL2ZzL3JlaXNlcjQvZGZvcm1hdC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Rmb3Jt
YXQuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9kZm9ybWF0LmgJMTk3MC0wMS0w
MSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2Rm
b3JtYXQuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0ODIyMjEzOCArMDEwMApAQCAtMCwwICsxLDcz
IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5z
aW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLworCisvKiBGb3JtYXRzIG9mIG9u
LWRpc2sgZGF0YSBhbmQgY29udmVyc2lvbiBmdW5jdGlvbnMuICovCisKKy8qIHB1dCBhbGwgaXRl
bSBmb3JtYXRzIGluIHRoZSBmaWxlcyBkZXNjcmliaW5nIHRoZSBwYXJ0aWN1bGFyIGl0ZW1zLAor
ICAgb3VyIG1vZGVsIGlzLCBldmVyeXRoaW5nIHlvdSBuZWVkIHRvIGRvIHRvIGFkZCBhbiBpdGVt
IHRvIHJlaXNlcjQsCisgICAoZXhjZXB0aW5nIHRoZSBjaGFuZ2VzIHRvIHRoZSBwbHVnaW4gdGhh
dCB1c2VzIHRoZSBpdGVtIHdoaWNoIGdvCisgICBpbnRvIHRoZSBmaWxlIGRlZmluaW5nIHRoYXQg
cGx1Z2luKSwgeW91IHB1dCBpbnRvIG9uZSBmaWxlLiAqLworLyogRGF0YSBvbiBkaXNrIGFyZSBz
dG9yZWQgaW4gbGl0dGxlLWVuZGlhbiBmb3JtYXQuCisgICBUbyBkZWNsYXJlIGZpZWxkcyBvZiBv
bi1kaXNrIHN0cnVjdHVyZXMsIHVzZSBkOCwgZDE2LCBkMzIgYW5kIGQ2NC4KKyAgIGQ/P3RvY3B1
KCkgYW5kIGNwdXRvZD8/KCkgdG8gY29udmVydC4gKi8KKworI2lmICFkZWZpbmVkKF9fRlNfUkVJ
U0VSNF9ERk9STUFUX0hfXykKKyNkZWZpbmUgX19GU19SRUlTRVI0X0RGT1JNQVRfSF9fCisKKyNp
bmNsdWRlICJkZWJ1Zy5oIgorCisjaW5jbHVkZSA8YXNtL2J5dGVvcmRlci5oPgorI2luY2x1ZGUg
PGFzbS91bmFsaWduZWQuaD4KKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorCit0eXBlZGVmIF9f
dTggZDg7Cit0eXBlZGVmIF9fbGUxNiBkMTY7Cit0eXBlZGVmIF9fbGUzMiBkMzI7Cit0eXBlZGVm
IF9fbGU2NCBkNjQ7CisKKyNkZWZpbmUgUEFDS0VEIF9fYXR0cmlidXRlX18oKHBhY2tlZCkpCisK
Ky8qIGRhdGEtdHlwZSBmb3IgYmxvY2sgbnVtYmVyICovCit0eXBlZGVmIF9fdTY0IHJlaXNlcjRf
YmxvY2tfbnI7CisKKy8qIGRhdGEtdHlwZSBmb3IgYmxvY2sgbnVtYmVyIG9uIGRpc2ssIGRpc2sg
Zm9ybWF0ICovCit0eXBlZGVmIF9fbGU2NCByZWlzZXI0X2RibG9ja19ucjsKKworLyoqCisgKiBk
aXNrX2FkZHJfZXEgLSBjb21wYXJlIGRpc2sgYWRkcmVzc2VzCisgKiBAYjE6IHBvaW50ZXIgdG8g
YmxvY2sgbnVtYmVyIG90IGNvbXBhcmUKKyAqIEBiMjogcG9pbnRlciB0byBibG9jayBudW1iZXIg
b3QgY29tcGFyZQorICoKKyAqIFJldHVybnMgdHJ1ZSBpZiBpZiBkaXNrIGFkZHJlc3NlcyBhcmUg
dGhlIHNhbWUKKyAqLworc3RhdGljIGlubGluZSBpbnQgZGlza19hZGRyX2VxKGNvbnN0IHJlaXNl
cjRfYmxvY2tfbnIgKiBiMSwKKwkJCSAgICAgICBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogYjIp
Cit7CisJYXNzZXJ0KCJuaWtpdGEtMTAzMyIsIGIxICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTEyNjYiLCBiMiAhPSBOVUxMKTsKKworCXJldHVybiAhbWVtY21wKGIxLCBiMiwgc2l6ZW9mICpi
MSk7Cit9CisKKy8qIHN0cnVjdHVyZSBvZiBtYXN0ZXIgcmVpc2VyNCBzdXBlciBibG9jayAqLwor
dHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9tYXN0ZXJfc2IgeworCWNoYXIgbWFnaWNbMTZdOwkJLyog
IlJlSXNFcjQiICovCisJX19sZTE2IGRpc2tfcGx1Z2luX2lkOwkvKiBpZCBvZiBkaXNrIGxheW91
dCBwbHVnaW4gKi8KKwlfX2xlMTYgYmxvY2tzaXplOworCWNoYXIgdXVpZFsxNl07CQkvKiB1bmlx
dWUgaWQgKi8KKwljaGFyIGxhYmVsWzE2XTsJCS8qIGZpbGVzeXN0ZW0gbGFiZWwgKi8KKwlfX2xl
NjQgZGlza21hcDsJCS8qIGxvY2F0aW9uIG9mIHRoZSBkaXNrbWFwLiAwIGlmIG5vdCBwcmVzZW50
ICovCit9IHJlaXNlcjRfbWFzdGVyX3NiOworCisvKiBfX0ZTX1JFSVNFUjRfREZPUk1BVF9IX18g
Ki8KKyNlbmRpZgorCisvKgorICogTG9jYWwgdmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1z
dHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTogIkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAq
IHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1bW46IDc5CisgKiBFbmQ6CisgKi8KZGlmZiAtdXJO
IC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9kaXNjYXJkLmMg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZGlzY2FyZC5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L2Rpc2NhcmQuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAor
KysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZGlzY2FyZC5jCTIwMjAtMDItMDUgMjA6NTM6NDEu
NDQ4MjIyMTM4ICswMTAwCkBAIC0wLDAgKzEsMTc5IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAw
MiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0
L1JFQURNRSAqLworCisvKiBUUklNL2Rpc2NhcmQgaW50ZXJvcGVyYXRpb24gc3Vic3lzdGVtIGZv
ciByZWlzZXI0LiAqLworCisvKgorICogVGhpcyBzdWJzeXN0ZW0gaXMgcmVzcG9uc2libGUgZm9y
IHBvcHVsYXRpbmcgYW4gYXRvbSdzIC0+ZGlzY2FyZF9zZXQgYW5kCisgKiAobGF0ZXIpIGNvbnZl
cnRpbmcgaXQgaW50byBhIHNlcmllcyBvZiBkaXNjYXJkIGNhbGxzIHRvIHRoZSBrZXJuZWwuCisg
KgorICogVGhlIGRpc2NhcmQgaXMgYW4gaW4ta2VybmVsIGludGVyZmFjZSBmb3Igbm90aWZ5aW5n
IHRoZSBzdG9yYWdlCisgKiBoYXJkd2FyZSBhYm91dCBibG9ja3MgdGhhdCBhcmUgYmVpbmcgbG9n
aWNhbGx5IGZyZWVkIGJ5IHRoZSBmaWxlc3lzdGVtLgorICogVGhpcyBpcyBkb25lIHZpYSBjYWxs
aW5nIHRoZSBibGtkZXZfaXNzdWVfZGlzY2FyZCgpIGZ1bmN0aW9uLiBUaGVyZSBhcmUKKyAqIHJl
c3RyaWN0aW9ucyBvbiBibG9jayByYW5nZXM6IHRoZXkgc2hvdWxkIGNvbnN0aXR1dGUgYXQgbGVh
c3Qgb25lIGVyYXNlIHVuaXQKKyAqIGluIGxlbmd0aCBhbmQgYmUgY29ycmVzcG9uZGluZ2x5IGFs
aWduZWQuIE90aGVyd2lzZSBhIGRpc2NhcmQgcmVxdWVzdCB3aWxsCisgKiBiZSBpZ25vcmVkLgor
ICoKKyAqIFRoZSBlcmFzZSB1bml0IHNpemUgaXMga2VwdCBpbiBzdHJ1Y3QgcXVldWVfbGltaXRz
IGFzIGRpc2NhcmRfZ3JhbnVsYXJpdHkuCisgKiBUaGUgb2Zmc2V0IGZyb20gdGhlIHBhcnRpdGlv
biBzdGFydCB0byB0aGUgZmlyc3QgZXJhc2UgdW5pdCBpcyBrZXB0IGluCisgKiBzdHJ1Y3QgcXVl
dWVfbGltaXRzIGFzIGRpc2NhcmRfYWxpZ25tZW50LgorICoKKyAqIEF0IGF0b20gbGV2ZWwsIHdl
IHJlY29yZCBudW1iZXJzIG9mIGFsbCBibG9ja3MgdGhhdCBoYXBwZW4gdG8gYmUgZGVhbGxvY2F0
ZWQKKyAqIGR1cmluZyB0aGUgdHJhbnNhY3Rpb24uIFRoZW4gd2UgcmVhZCB0aGUgZ2VuZXJhdGVk
IHNldCwgZmlsdGVyIG91dCBhbnkgYmxvY2tzCisgKiB0aGF0IGhhdmUgc2luY2UgYmVlbiBhbGxv
Y2F0ZWQgYWdhaW4gYW5kIGlzc3VlIGRpc2NhcmRzIGZvciBldmVyeXRoaW5nIHN0aWxsCisgKiB2
YWxpZC4gVGhpcyBpcyB3aGF0IGRpc2NhcmQuW2NoXSBpcyBoZXJlIGZvci4KKyAqCisgKiBIb3dl
dmVyLCBzaW1wbHkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIHJlY29yZGVkIGV4dGVudHMgaXMgbm90
IGVub3VnaDoKKyAqIC0gaWYgYSBzaW5nbGUgZXh0ZW50IGlzIHNtYWxsZXIgdGhhbiB0aGUgZXJh
c2UgdW5pdCwgdGhlbiB0aGlzIHBhcnRpY3VsYXIKKyAqICAgZXh0ZW50IHdvbid0IGJlIGRpc2Nh
cmRlZCBldmVuIGlmIGl0IGlzIHN1cnJvdW5kZWQgYnkgZW5vdWdoIGZyZWUgYmxvY2tzCisgKiAg
IHRvIGNvbnN0aXR1dGUgYSB3aG9sZSBlcmFzZSB1bml0OworICogLSB3ZSB3b24ndCBiZSBhYmxl
IHRvIG1lcmdlIHNtYWxsIGFkamFjZW50IGV4dGVudHMgZm9ybWluZyBhbiBleHRlbnQgbG9uZwor
ICogICBlbm91Z2ggdG8gYmUgZGlzY2FyZGVkLgorICoKKyAqIE1FQ0hBTklTTToKKyAqCisgKiBE
dXJpbmcgdGhlIHRyYW5zYWN0aW9uIGRlYWxsb2NhdGVkIGV4dGVudHMgYXJlIHJlY29yZGVkIGlu
IGF0b20ncyBkZWxldGUKKyAqIHNldC4gSW4gcmVpc2VyNCwgdGhlcmUgYXJlIHR3byBtZXRob2Rz
IHRvIGRlYWxsb2NhdGUgYSBibG9jazoKKyAqIDEuIGRlZmVycmVkIGRlYWxsb2NhdGlvbiwgZW5h
YmxlZCBieSBCQV9ERUZFUiBmbGFnIHRvIHJlaXNlcjRfZGVhbGxvY19ibG9jaygpLgorICogICAg
SW4gdGhpcyBtb2RlLCBibG9ja3MgYXJlIHN0b3JlZCB0byBkZWxldGUgc2V0IGluc3RlYWQgb2Yg
YmVpbmcgbWFya2VkIGZyZWUKKyAqICAgIGltbWVkaWF0ZWx5LiBBZnRlciBjb21taXR0aW5nIHRo
ZSB0cmFuc2FjdGlvbiwgdGhlIGRlbGV0ZSBzZXQgaXMgImFwcGxpZWQiCisgKiAgICBieSB0aGUg
YmxvY2sgYWxsb2NhdG9yIGFuZCBhbGwgdGhlc2UgYmxvY2tzIGFyZSBtYXJrZWQgZnJlZSBpbiBt
ZW1vcnkKKyAqICAgIChzZWUgcmVpc2VyNF9wb3N0X3dyaXRlX2JhY2tfaG9vaygpKS4KKyAqICAg
IFNwYWNlIG1hbmFnZW1lbnQgcGx1Z2lucyBhbHNvIHJlYWQgdGhlIGRlbGV0ZSBzZXQgdG8gdXBk
YXRlIG9uLWRpc2sKKyAqICAgIGFsbG9jYXRpb24gcmVjb3JkcyAoc2VlIHJlaXNlcjRfcHJlX2Nv
bW1pdF9ob29rKCkpLgorICogMi4gaW1tZWRpYXRlIGRlYWxsb2NhdGlvbiAodGhlIG9wcG9zaXRl
KS4KKyAqICAgIEluIHRoaXMgbW9kZSwgYmxvY2tzIGFyZSBtYXJrZWQgZnJlZSBpbW1lZGlhdGVs
eS4gVGhpcyBpcyB1c2VkIGJ5IHRoZQorICogICAgam91cm5hbCBzdWJzeXN0ZW0gdG8gbWFuYWdl
IHNwYWNlIHVzZWQgYnkgdGhlIGpvdXJuYWwgcmVjb3Jkcywgc28gdGhlc2UKKyAqICAgIGFsbG9j
YXRpb25zIGFyZSBub3QgdmlzaWJsZSB0byB0aGUgc3BhY2UgbWFuYWdlbWVudCBwbHVnaW5zIGFu
ZCBuZXZlciBoaXQKKyAqICAgIHRoZSBkaXNrLgorICoKKyAqIFdoZW4gZGlzY2FyZCBpcyBlbmFi
bGVkLCBhbGwgaW1tZWRpYXRlIGRlYWxsb2NhdGlvbnMgYmVjb21lIGRlZmVycmVkLiBUaGlzCisg
KiBpcyBPSyBiZWNhdXNlIGpvdXJuYWwncyBhbGxvY2F0aW9ucyBoYXBwZW4gYWZ0ZXIgcmVpc2Vy
NF9wcmVfY29tbWl0X2hvb2soKQorICogd2hlcmUgdGhlIG9uLWRpc2sgc3BhY2UgYWxsb2NhdGlv
biByZWNvcmRzIGFyZSB1cGRhdGVkLiBTbywgaW4gdGhpcyBtb2RlCisgKiB0aGUgYXRvbSdzIGRl
bGV0ZSBzZXQgYmVjb21lcyAidGhlIGRpc2NhcmQgc2V0IiAtLSBsaXN0IG9mIGJsb2NrcyB0aGF0
IGhhdmUKKyAqIHRvIGJlIGNvbnNpZGVyZWQgZm9yIGRpc2NhcmRpbmcuCisgKgorICogRGlzY2Fy
ZGluZyBpcyBwZXJmb3JtZWQgYmVmb3JlIGNvbXBsZXRpbmcgZGVmZXJyZWQgZGVhbGxvY2F0aW9u
cywgaGVuY2UgYWxsCisgKiBleHRlbnRzIGluIHRoZSBkaXNjYXJkIHNldCBhcmUgc3RpbGwgbWFy
a2VkIGFzIGFsbG9jYXRlZCBhbmQgY2Fubm90IGNvbnRhaW4KKyAqIGFueSBkYXRhLiBUaHVzIHdl
IGNhbiBhdm9pZCBhbnkgY2hlY2tzIGZvciBibG9ja3MgZGlyZWN0bHkgcHJlc2VudCBpbiB0aGUK
KyAqIGRpc2NhcmQgc2V0LgorICoKKyAqIEZvciBub3csIHdlIGRvbid0IHBlcmZvcm0gInBhZGRp
bmciIG9mIGV4dGVudHMgdG8gZXJhc2UgdW5pdCBib3VuZGFyaWVzLgorICogVGhpcyBtZWFucyBp
ZiBleHRlbnRzIGFyZSBub3QgYWxpZ25lZCB3aXRoIHRoZSBkZXZpY2UncyBlcmFzZSB1bml0IGxh
dHRpY2UsCisgKiB0aGUgcGFydGlhbCBlcmFzZSB1bml0cyBhdCBoZWFkIGFuZCB0YWlsIG9mIGV4
dGVudHMgYXJlIHRydW5jYXRlZCBieSBrZXJuZWwKKyAqIChpbiBibGtkZXZfaXNzdWVfZGlzY2Fy
ZCgpKS4KKyAqCisgKiBTbywgYXQgY29tbWl0IHRpbWUgdGhlIGZvbGxvd2luZyBhY3Rpb25zIHRh
a2UgcGxhY2U6CisgKiAtIGRlbGV0ZSBzZXRzIGFyZSBtZXJnZWQgdG8gZm9ybSB0aGUgZGlzY2Fy
ZCBzZXQ7CisgKiAtIGVsZW1lbnRzIG9mIHRoZSBkaXNjYXJkIHNldCBhcmUgc29ydGVkOworICog
LSB0aGUgZGlzY2FyZCBzZXQgaXMgaXRlcmF0ZWQsIGpvaW5pbmcgYW55IGFkamFjZW50IGV4dGVu
dHM7CisgKiAtIGZvciBlYWNoIGV4dGVudCwgYSBzaW5nbGUgY2FsbCB0byBibGtkZXZfaXNzdWVf
ZGlzY2FyZCgpIGlzIGRvbmUuCisgKi8KKworI2luY2x1ZGUgImRpc2NhcmQuaCIKKyNpbmNsdWRl
ICJjb250ZXh0LmgiCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNp
bmNsdWRlICJzdXBlci5oIgorCisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxp
bnV4L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvYmxrZGV2Lmg+CisKK3N0YXRpYyBpbnQgX19kaXNj
YXJkX2V4dGVudChzdHJ1Y3QgYmxvY2tfZGV2aWNlICpiZGV2LCBzZWN0b3JfdCBzdGFydCwKKyAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0b3JfdCBsZW4pCit7CisJYXNzZXJ0KCJpbnRl
bGZ4LTIxIiwgYmRldiAhPSBOVUxMKTsKKworCXJldHVybiBibGtkZXZfaXNzdWVfZGlzY2FyZChi
ZGV2LCBzdGFydCwgbGVuLCByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSwKKwkgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgMCk7Cit9CisKK3N0YXRpYyBpbnQgZGlzY2FyZF9leHRlbnQodHhu
X2F0b20gKmF0b20gVU5VU0VEX0FSRywKKyAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qg
cmVpc2VyNF9ibG9ja19uciogc3RhcnQsCisgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0
IHJlaXNlcjRfYmxvY2tfbnIqIGxlbiwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCAq
ZGF0YSBVTlVTRURfQVJHKQoreworCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSByZWlzZXI0X2dl
dF9jdXJyZW50X3NiKCk7CisJc3RydWN0IGJsb2NrX2RldmljZSAqYmRldiA9IHNiLT5zX2JkZXY7
CisKKwlzZWN0b3JfdCBleHRlbnRfc3RhcnRfc2VjLCBleHRlbnRfbGVuX3NlYzsKKworCWNvbnN0
IGludCBzZWNfcGVyX2JsayA9IHNiLT5zX2Jsb2Nrc2l6ZSA+PiA5OworCisJLyogd2UgYXNzdW1l
IGJsb2NrID0gTiAqIHNlY3RvciAqLworCWFzc2VydCgiaW50ZWxmeC03Iiwgc2VjX3Blcl9ibGsg
PiAwKTsKKworCS8qIGNvbnZlcnQgZXh0ZW50IHRvIHNlY3RvcnMgKi8KKwlleHRlbnRfc3RhcnRf
c2VjID0gKnN0YXJ0ICogc2VjX3Blcl9ibGs7CisJZXh0ZW50X2xlbl9zZWMgPSAqbGVuICogc2Vj
X3Blcl9ibGs7CisKKwkvKiBkaXNjYXJkIHRoZSBleHRlbnQsIGRvbid0IHBhZCBpdCB0byBlcmFz
ZSB1bml0IGJvdW5kYXJpZXMgZm9yIG5vdyAqLworCXJldHVybiBfX2Rpc2NhcmRfZXh0ZW50KGJk
ZXYsIGV4dGVudF9zdGFydF9zZWMsIGV4dGVudF9sZW5fc2VjKTsKK30KKworaW50IGRpc2NhcmRf
YXRvbSh0eG5fYXRvbSAqYXRvbSwgc3RydWN0IGxpc3RfaGVhZCAqcHJvY2Vzc2VkX3NldCkKK3sK
KwlpbnQgcmV0OworCXN0cnVjdCBsaXN0X2hlYWQgZGlzY2FyZF9zZXQ7CisKKwlpZiAoIXJlaXNl
cjRfaXNfc2V0KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSwgUkVJU0VSNF9ESVNDQVJEKSkgewor
CQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQlyZXR1cm4gMDsKKwl9CisKKwlhc3NlcnQoImlu
dGVsZngtMjgiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydCgiaW50ZWxmeC01OSIsIHByb2Nlc3Nl
ZF9zZXQgIT0gTlVMTCk7CisKKwlpZiAobGlzdF9lbXB0eSgmYXRvbS0+ZGlzY2FyZC5kZWxldGVf
c2V0KSkgeworCQkvKiBOb3RoaW5nIGxlZnQgdG8gZGlzY2FyZC4gKi8KKwkJc3Bpbl91bmxvY2tf
YXRvbShhdG9tKTsKKwkJcmV0dXJuIDA7CisJfQorCisJLyogVGFrZSB0aGUgZGVsZXRlIHNldHMg
ZnJvbSB0aGUgYXRvbSBpbiBvcmRlciB0byByZWxlYXNlIGF0b20gc3BpbmxvY2suICovCisJYmxv
Y2tucl9saXN0X2luaXQoJmRpc2NhcmRfc2V0KTsKKwlibG9ja25yX2xpc3RfbWVyZ2UoJmF0b20t
PmRpc2NhcmQuZGVsZXRlX3NldCwgJmRpc2NhcmRfc2V0KTsKKwlzcGluX3VubG9ja19hdG9tKGF0
b20pOworCisJLyogU29ydCB0aGUgZGlzY2FyZCBsaXN0LCBqb2luaW5nIGFkamFjZW50IGFuZCBv
dmVybGFwcGluZyBleHRlbnRzLiAqLworCWJsb2NrbnJfbGlzdF9zb3J0X2FuZF9qb2luKCZkaXNj
YXJkX3NldCk7CisKKwkvKiBQZXJmb3JtIGFjdHVhbCBkaXJ0eSB3b3JrLiAqLworCXJldCA9IGJs
b2NrbnJfbGlzdF9pdGVyYXRvcihOVUxMLCAmZGlzY2FyZF9zZXQsICZkaXNjYXJkX2V4dGVudCwg
TlVMTCwgMCk7CisKKwkvKiBBZGQgcHJvY2Vzc2VkIGV4dGVudHMgdG8gdGhlIHRlbXBvcmFyeSBs
aXN0LiAqLworCWJsb2NrbnJfbGlzdF9tZXJnZSgmZGlzY2FyZF9zZXQsIHByb2Nlc3NlZF9zZXQp
OworCisJaWYgKHJldCAhPSAwKSB7CisJCXJldHVybiByZXQ7CisJfQorCisJLyogTGV0J3MgZG8g
dGhpcyBhZ2FpbiBmb3IgYW55IG5ldyBleHRlbnRzIGluIHRoZSBhdG9tJ3MgZGlzY2FyZCBzZXQu
ICovCisJcmV0dXJuIC1FX1JFUEVBVDsKK30KKwordm9pZCBkaXNjYXJkX2F0b21fcG9zdCh0eG5f
YXRvbSAqYXRvbSwgc3RydWN0IGxpc3RfaGVhZCAqcHJvY2Vzc2VkX3NldCkKK3sKKwlhc3NlcnQo
ImludGVsZngtNjAiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydCgiaW50ZWxmeC02MSIsIHByb2Nl
c3NlZF9zZXQgIT0gTlVMTCk7CisKKwlpZiAoIXJlaXNlcjRfaXNfc2V0KHJlaXNlcjRfZ2V0X2N1
cnJlbnRfc2IoKSwgUkVJU0VSNF9ESVNDQVJEKSkgeworCQlzcGluX3VubG9ja19hdG9tKGF0b20p
OworCQlyZXR1cm47CisJfQorCisJYmxvY2tucl9saXN0X21lcmdlKHByb2Nlc3NlZF9zZXQsICZh
dG9tLT5kaXNjYXJkLmRlbGV0ZV9zZXQpOworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7Cit9CisK
Ky8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDog
OAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDog
MQorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9kaXNjYXJkLmggbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZGlzY2FyZC5o
Ci0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2Rpc2NhcmQuaAkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZGlzY2Fy
ZC5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDQ4MjIyMTM4ICswMTAwCkBAIC0wLDAgKzEsNDIgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIFRSSU0vZGlzY2FyZCBpbnRl
cm9wZXJhdGlvbiBzdWJzeXN0ZW0gZm9yIHJlaXNlcjQuICovCisKKyNpZiAhZGVmaW5lZChfX0ZT
X1JFSVNFUjRfRElTQ0FSRF9IX18pCisjZGVmaW5lIF9fRlNfUkVJU0VSNF9ESVNDQVJEX0hfXwor
CisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRmb3JtYXQuaCIKKworLyoqCisgKiBJ
c3N1ZSBkaXNjYXJkIHJlcXVlc3RzIGZvciBhbGwgYmxvY2sgZXh0ZW50cyByZWNvcmRlZCBpbiBA
YXRvbSdzIGRlbGV0ZSBzZXRzLAorICogaWYgZGlzY2FyZCBpcyBlbmFibGVkLiBUaGUgZXh0ZW50
cyBwcm9jZXNzZWQgYXJlIHJlbW92ZWQgZnJvbSB0aGUgQGF0b20ncworICogZGVsZXRlIHNldHMg
YW5kIHN0b3JlZCBpbiBAcHJvY2Vzc2VkX3NldC4KKyAqCisgKiBAYXRvbSBtdXN0IGJlIGxvY2tl
ZCBvbiBlbnRyeSBhbmQgaXMgdW5sb2NrZWQgb24gZXhpdC4KKyAqIEBwcm9jZXNzZWRfc2V0IG11
c3QgYmUgaW5pdGlhbGl6ZWQgd2l0aCBibG9ja25yX2xpc3RfaW5pdCgpLgorICovCitleHRlcm4g
aW50IGRpc2NhcmRfYXRvbSh0eG5fYXRvbSAqYXRvbSwgc3RydWN0IGxpc3RfaGVhZCAqcHJvY2Vz
c2VkX3NldCk7CisKKy8qKgorICogU3BsaWNlcyBAcHJvY2Vzc2VkX3NldCBiYWNrIHRvIEBhdG9t
J3MgZGVsZXRlIHNldC4KKyAqIE11c3QgYmUgY2FsbGVkIGFmdGVyIGRpc2NhcmRfYXRvbSgpIGxv
b3AsIHVzaW5nIHRoZSBzYW1lIEBwcm9jZXNzZWRfc2V0LgorICoKKyAqIEBhdG9tIG11c3QgYmUg
bG9ja2VkIG9uIGVudHJ5IGFuZCBpcyB1bmxvY2tlZCBvbiBleGl0LgorICogQHByb2Nlc3NlZF9z
ZXQgbXVzdCBiZSB0aGUgc2FtZSBhcyBwYXNzZWQgdG8gZGlzY2FyZF9hdG9tKCkuCisgKi8KK2V4
dGVybiB2b2lkIGRpc2NhcmRfYXRvbV9wb3N0KHR4bl9hdG9tICphdG9tLCBzdHJ1Y3QgbGlzdF9o
ZWFkICpwcm9jZXNzZWRfc2V0KTsKKworLyogX19GU19SRUlTRVI0X0RJU0NBUkRfSF9fICovCisj
ZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMt
aW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMt
b2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoK
KyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNl
cjQvZHNjYWxlLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZHNjYWxlLmMKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvZHNjYWxlLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAw
MDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2RzY2FsZS5jCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDQ4MjIyMTM4ICswMTAwCkBAIC0wLDAgKzEsMTkyIEBACisvKiBDb3B5cmlnaHQg
MjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5Cisg
KiByZWlzZXI0L1JFQURNRSAqLworCisvKiBTY2FsYWJsZSBvbi1kaXNrIGludGVnZXJzICovCisK
Ky8qCisgKiBWYXJpb3VzIG9uLWRpc2sgc3RydWN0dXJlcyBjb250YWluIGludGVnZXItbGlrZSBz
dHJ1Y3R1cmVzLiBTdGF0LWRhdGEKKyAqIGNvbnRhaW4gW3llcywgImRhdGEiIGlzIHBsdXJhbCwg
Y2hlY2sgdGhlIGRpY3Rpb25hcnldIGZpbGUgc2l6ZSwgbGluaworICogY291bnQ7IGV4dGVudCB1
bml0IGNvbnRhaW5zIGV4dGVudCB3aWR0aCBldGMuIFRvIGFjY29tbW9kYXRlIGZvciBnZW5lcmFs
CisgKiBjYXNlIGVub3VnaCBzcGFjZSBpcyByZXNlcnZlZCB0byBrZWVwIGxhcmdlc3QgcG9zc2li
bGUgdmFsdWUuIDY0IGJpdHMgaW4KKyAqIGFsbCBjYXNlcyBhYm92ZS4gQnV0IGluIG92ZXJ3aGVs
bWluZyBtYWpvcml0eSBvZiBjYXNlcyBudW1iZXJzIGFjdHVhbGx5CisgKiBzdG9yZWQgaW4gdGhl
c2UgZmllbGRzIHdpbGwgYmUgY29tcGFyYXRpdmVseSBzbWFsbCBhbmQgcmVzZXJ2aW5nIDggYnl0
ZXMgaXMKKyAqIGEgd2FzdGUgb2YgcHJlY2lvdXMgZGlzayBiYW5kd2lkdGguCisgKgorICogU2Nh
bGFibGUgaW50ZWdlcnMgYXJlIG9uZSB3YXkgdG8gc29sdmUgdGhpcyBwcm9ibGVtLiBkc2NhbGVf
d3JpdGUoKQorICogZnVuY3Rpb24gc3RvcmVzIF9fdTY0IHZhbHVlIGluIHRoZSBnaXZlbiBhcmVh
IGNvbnN1bWluZyBmcm9tIDEgdG8gOSBieXRlcywKKyAqIGRlcGVuZGluZyBvbiB0aGUgbWFnbml0
dWRlIG9mIHRoZSB2YWx1ZSBzdXBwbGllZC4gZHNjYWxlX3JlYWQoKSByZWFkcyB2YWx1ZQorICog
cHJldmlvdXNseSBzdG9yZWQgYnkgZHNjYWxlX3dyaXRlKCkuCisgKgorICogZHNjYWxlX3dyaXRl
KCkgcHJvZHVjZXMgZm9ybWF0IG5vdCBjb21wbGV0ZWx5IHVubGlrZSBvZiBVVEY6IHR3byBoaWdo
ZXN0CisgKiBiaXRzIG9mIHRoZSBmaXJzdCBieXRlIGFyZSB1c2VkIHRvIHN0b3JlICJ0YWciLiBP
bmUgb2YgNCBwb3NzaWJsZSB0YWcKKyAqIHZhbHVlcyBpcyBjaG9zZW4gZGVwZW5kaW5nIG9uIHRo
ZSBudW1iZXIgYmVpbmcgZW5jb2RlZDoKKyAqCisgKiAgICAgICAgICAgMCAuLi4gMHgzZiAgICAg
ICAgICAgICAgID0+IDAgICAgICAgICAgIFt0YWJsZSAxXQorICogICAgICAgIDB4NDAgLi4uIDB4
M2ZmZiAgICAgICAgICAgICA9PiAxCisgKiAgICAgIDB4NDAwMCAuLi4gMHgzZmZmZmZmZiAgICAg
ICAgID0+IDIKKyAqICAweDQwMDAwMDAwIC4uLiAweGZmZmZmZmZmZmZmZmZmZmYgPT4gMworICoK
KyAqIChzZWUgZHNjYWxlX3JhbmdlKCkgZnVuY3Rpb24pCisgKgorICogVmFsdWVzIGluIHRoZSBy
YW5nZSAweDQwMDAwMDAwIC4uLiAweGZmZmZmZmZmZmZmZmZmZmYgcmVxdWlyZSA4IGZ1bGwgYnl0
ZXMKKyAqIHRvIGJlIHN0b3JlZCwgc28gaW4gdGhpcyBjYXNlIHRoZXJlIGlzIG5vIHBsYWNlIGlu
IHRoZSBmaXJzdCBieXRlIHRvIHN0b3JlCisgKiB0YWcuIEZvciBzdWNoIHZhbHVlcyB0YWcgaXMg
c3RvcmVkIGluIGFuIGV4dHJhIDl0aCBieXRlLgorICoKKyAqIEFzIF9oaWdoZXN0XyBiaXRzIGFy
ZSB1c2VkIGZvciB0aGUgdGVzdCAod2hpY2ggaXMgbmF0dXJhbCkgc2NhbGVkIGludGVnZXJzCisg
KiBhcmUgc3RvcmVkIGluIEJJRy1FTkRJQU4gZm9ybWF0IGluIGNvbnRyYXN0IHdpdGggdGhlIHJl
c3Qgb2YgcmVpc2VyNCB3aGljaAorICogdXNlcyBMSVRUTEUtRU5ESUFOLgorICoKKyAqLworCisj
aW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkc2NhbGUuaCIKKworLyogcmV0dXJuIHRhZyBv
ZiBzY2FsZWQgaW50ZWdlciBzdG9yZWQgYXQgQGFkZHJlc3MgKi8KK3N0YXRpYyBpbnQgZ2V0dGFn
KGNvbnN0IHVuc2lnbmVkIGNoYXIgKmFkZHJlc3MpCit7CisJLyogdGFnIGlzIHN0b3JlZCBpbiB0
d28gaGlnaGVzdCBiaXRzICovCisJcmV0dXJuICgqYWRkcmVzcykgPj4gNjsKK30KKworLyogY2xl
YXIgdGFnIGZyb20gdmFsdWUuIENsZWFyIHRhZyBlbWJlZGRlZCBpbnRvIEB2YWx1ZS4gKi8KK3N0
YXRpYyB2b2lkIGNsZWFydGFnKF9fdTY0ICp2YWx1ZSwgaW50IHRhZykKK3sKKwkvKgorCSAqIFct
dy13aGF0ID8hCisJICoKKwkgKiBBY3R1YWxseSwgdGhpcyBpcyByYXRoZXIgc2ltcGxlOiBAdmFs
dWUgcGFzc2VkIGhlcmUgd2FzIHJlYWQgYnkKKwkgKiBkc2NhbGVfcmVhZCgpLCBjb252ZXJ0ZWQg
ZnJvbSBCSUctRU5ESUFOLCBhbmQgcGFkZGVkIHRvIF9fdTY0IGJ5CisJICogemVyb2VzLiBUYWcg
aXMgc3RpbGwgc3RvcmVkIGluIHRoZSBoaWdoZXN0IChhcml0aG1ldGljYWxseSkKKwkgKiBub24t
emVybyBiaXRzIG9mIEB2YWx1ZSwgYnV0IHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRhZyB3aXRoaW4g
X191NjQKKwkgKiBkZXBlbmRzIG9uIEB0YWcuCisJICoKKwkgKiBGb3IgZXhhbXBsZSBpZiBAdGFn
IGlzIDAsIGl0J3Mgc3RvcmVkIDIgaGlnaGVzdCBiaXRzIG9mIGxvd2VzdAorCSAqIGJ5dGUsIGFu
ZCBpdHMgb2Zmc2V0IChjb3VudGluZyBmcm9tIGxvd2VzdCBiaXQpIGlzIDggLSAyID09IDYgYml0
cy4KKwkgKgorCSAqIElmIHRhZyBpcyAxLCBpdCdzIHN0b3JlZCBpbiB0d28gaGlnaGVzdCBiaXRz
IG9mIDJuZCBsb3dlc3QgYnl0ZSwKKwkgKiBhbmQgaXQncyBvZmZzZXQgaWYgKDIgKiA4KSAtIDIg
PT0gMTQgYml0cy4KKwkgKgorCSAqIFNlZSB0YWJsZSAxIGFib3ZlIGZvciBkZXRhaWxzLgorCSAq
CisJICogQWxsIHRoZXNlIGNhc2VzIGFyZSBjYXB0dXJlZCBieSB0aGUgZm9ybXVsYToKKwkgKi8K
KwkqdmFsdWUgJj0gfigzIDw8ICgoKDEgPDwgdGFnKSA8PCAzKSAtIDIpKTsKKwkvKgorCSAqIFRo
YXQgaXMsIGNsZWFyIHR3byAoMyA9PSAwdDExKSBiaXRzIGF0IHRoZSBvZmZzZXQKKwkgKgorCSAq
ICAgICAgICAgICAgICAgICAgOCAqICgyIF4gdGFnKSAtIDIsCisJICoKKwkgKiB0aGF0IGlzLCB0
d28gaGlnaGVzdCBiaXRzIG9mICgyIF4gdGFnKS10aCBieXRlIG9mIEB2YWx1ZS4KKwkgKi8KK30K
KworLyogcmV0dXJuIHRhZyBmb3IgQHZhbHVlLiBTZWUgdGFibGUgMSBhYm92ZSBmb3IgZGV0YWls
cy4gKi8KK3N0YXRpYyBpbnQgZHNjYWxlX3JhbmdlKF9fdTY0IHZhbHVlKQoreworCWlmICh2YWx1
ZSA+IDB4M2ZmZmZmZmYpCisJCXJldHVybiAzOworCWlmICh2YWx1ZSA+IDB4M2ZmZikKKwkJcmV0
dXJuIDI7CisJaWYgKHZhbHVlID4gMHgzZikKKwkJcmV0dXJuIDE7CisJcmV0dXJuIDA7Cit9CisK
Ky8qIHJlc3RvcmUgdmFsdWUgc3RvcmVkIGF0IEBhZGRlcnNzIGJ5IGRzY2FsZV93cml0ZSgpIGFu
ZCByZXR1cm4gbnVtYmVyIG9mCisgKiBieXRlcyBjb25zdW1lZCAqLworaW50IGRzY2FsZV9yZWFk
KHVuc2lnbmVkIGNoYXIgKmFkZHJlc3MsIF9fdTY0ICp2YWx1ZSkKK3sKKwlpbnQgdGFnOworCisJ
LyogcmVhZCB0YWcgKi8KKwl0YWcgPSBnZXR0YWcoYWRkcmVzcyk7CisJc3dpdGNoICh0YWcpIHsK
KwljYXNlIDM6CisJCS8qIEluIHRoaXMgY2FzZSB0YWcgaXMgc3RvcmVkIGluIGFuIGV4dHJhIGJ5
dGUsIHNraXAgdGhpcyBieXRlCisJCSAqIGFuZCBkZWNvZGUgdmFsdWUgc3RvcmVkIGluIHRoZSBu
ZXh0IDggYnl0ZXMuKi8KKwkJKnZhbHVlID0gX19iZTY0X3RvX2NwdShnZXRfdW5hbGlnbmVkKChf
X2JlNjQgKikoYWRkcmVzcyArIDEpKSk7CisJCS8qIHdvcnN0IGNhc2U6IDggYnl0ZXMgZm9yIHZh
bHVlIGl0c2VsZiBwbHVzIG9uZSBieXRlIGZvcgorCQkgKiB0YWcuICovCisJCXJldHVybiA5Owor
CWNhc2UgMDoKKwkJKnZhbHVlID0gZ2V0X3VuYWxpZ25lZChhZGRyZXNzKTsKKwkJYnJlYWs7CisJ
Y2FzZSAxOgorCQkqdmFsdWUgPSBfX2JlMTZfdG9fY3B1KGdldF91bmFsaWduZWQoKF9fYmUxNiAq
KWFkZHJlc3MpKTsKKwkJYnJlYWs7CisJY2FzZSAyOgorCQkqdmFsdWUgPSBfX2JlMzJfdG9fY3B1
KGdldF91bmFsaWduZWQoKF9fYmUzMiAqKWFkZHJlc3MpKTsKKwkJYnJlYWs7CisJZGVmYXVsdDoK
KwkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwl9CisJLyogY2xlYXIgdGFnIGVtYmVkZGVkIGludG8g
QHZhbHVlICovCisJY2xlYXJ0YWcodmFsdWUsIHRhZyk7CisJLyogbnVtYmVyIG9mIGJ5dGVzIGNv
bnN1bWVkIGlzICgyIF4gdGFnKS0tLXNlZSB0YWJsZSAxLiAqLworCXJldHVybiAxIDw8IHRhZzsK
K30KKworLyogbnVtYmVyIG9mIGJ5dGVzIGNvbnN1bWVkICovCitpbnQgZHNjYWxlX2J5dGVzX3Rv
X3JlYWQodW5zaWduZWQgY2hhciAqYWRkcmVzcykKK3sKKwlpbnQgdGFnOworCisJdGFnID0gZ2V0
dGFnKGFkZHJlc3MpOworCXN3aXRjaCAodGFnKSB7CisJY2FzZSAwOgorCWNhc2UgMToKKwljYXNl
IDI6CisJCXJldHVybiAxIDw8IHRhZzsKKwljYXNlIDM6CisJCXJldHVybiA5OworCWRlZmF1bHQ6
CisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJfQorfQorCisvKiBzdG9yZSBAdmFsdWUgYXQgQGFk
ZHJlc3MgYW5kIHJldHVybiBudW1iZXIgb2YgYnl0ZXMgY29uc3VtZWQgKi8KK2ludCBkc2NhbGVf
d3JpdGUodW5zaWduZWQgY2hhciAqYWRkcmVzcywgX191NjQgdmFsdWUpCit7CisJaW50IHRhZzsK
KwlpbnQgc2hpZnQ7CisJX19iZTY0IHY7CisJdW5zaWduZWQgY2hhciAqdmFsYXJyOworCisJdGFn
ID0gZHNjYWxlX3JhbmdlKHZhbHVlKTsKKwl2ID0gX19jcHVfdG9fYmU2NCh2YWx1ZSk7CisJdmFs
YXJyID0gKHVuc2lnbmVkIGNoYXIgKikmdjsKKwlzaGlmdCA9ICh0YWcgPT0gMykgPyAxIDogMDsK
KwltZW1jcHkoYWRkcmVzcyArIHNoaWZ0LCB2YWxhcnIgKyBzaXplb2YgdiAtICgxIDw8IHRhZyks
IDEgPDwgdGFnKTsKKwkqYWRkcmVzcyB8PSAodGFnIDw8IDYpOworCXJldHVybiBzaGlmdCArICgx
IDw8IHRhZyk7Cit9CisKKy8qIG51bWJlciBvZiBieXRlcyByZXF1aXJlZCB0byBzdG9yZSBAdmFs
dWUgKi8KK2ludCBkc2NhbGVfYnl0ZXNfdG9fd3JpdGUoX191NjQgdmFsdWUpCit7CisJaW50IGJ5
dGVzOworCisJYnl0ZXMgPSAxIDw8IGRzY2FsZV9yYW5nZSh2YWx1ZSk7CisJaWYgKGJ5dGVzID09
IDgpCisJCSsrYnl0ZXM7CisJcmV0dXJuIGJ5dGVzOworfQorCisvKiByZXR1cm5zIHRydWUgaWYg
QHZhbHVlIGFuZCBAb3RoZXIgcmVxdWlyZSB0aGUgc2FtZSBudW1iZXIgb2YgYnl0ZXMgdG8gYmUK
KyAqIHN0b3JlZC4gVXNlZCBieSBkZXRlY3Qgd2hlbiBkYXRhIHN0cnVjdHVyZSAobGlrZSBzdGF0
LWRhdGEpIGhhcyB0byBiZQorICogZXhwYW5kZWQgb3IgY29udHJhY3RlZC4gKi8KK2ludCBkc2Nh
bGVfZml0KF9fdTY0IHZhbHVlLCBfX3U2NCBvdGhlcikKK3sKKwlyZXR1cm4gZHNjYWxlX3Jhbmdl
KHZhbHVlKSA9PSBkc2NhbGVfcmFuZ2Uob3RoZXIpOworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5
LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAg
IG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAor
ICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYg
LXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZHNjYWxl
LmggbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZHNjYWxlLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvZHNjYWxlLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAK
KysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2RzY2FsZS5oCTIwMjAtMDItMDUgMjA6NTM6NDEu
NDQ5MjIyMTQ2ICswMTAwCkBAIC0wLDAgKzEsMjggQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAy
LCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQv
UkVBRE1FICovCisKKy8qIFNjYWxhYmxlIG9uLWRpc2sgaW50ZWdlcnMuIFNlZSBkc2NhbGUuaCBm
b3IgZGV0YWlscy4gKi8KKworI2lmICFkZWZpbmVkKF9fRlNfUkVJU0VSNF9EU0NBTEVfSF9fKQor
I2RlZmluZSBfX0ZTX1JFSVNFUjRfRFNDQUxFX0hfXworCisjaW5jbHVkZSAiZGZvcm1hdC5oIgor
CitleHRlcm4gaW50IGRzY2FsZV9yZWFkKHVuc2lnbmVkIGNoYXIgKmFkZHJlc3MsIF9fdTY0ICp2
YWx1ZSk7CitleHRlcm4gaW50IGRzY2FsZV93cml0ZSh1bnNpZ25lZCBjaGFyICphZGRyZXNzLCBf
X3U2NCB2YWx1ZSk7CitleHRlcm4gaW50IGRzY2FsZV9ieXRlc190b19yZWFkKHVuc2lnbmVkIGNo
YXIgKmFkZHJlc3MpOworZXh0ZXJuIGludCBkc2NhbGVfYnl0ZXNfdG9fd3JpdGUoX191NjQgdmFs
dWUpOworZXh0ZXJuIGludCBkc2NhbGVfZml0KF9fdTY0IHZhbHVlLCBfX3U2NCBvdGhlcik7CisK
Ky8qIF9fRlNfUkVJU0VSNF9EU0NBTEVfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBo
YXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6
IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZW50ZC5jIGxpbnV4LTUuNC4xNy9m
cy9yZWlzZXI0L2VudGQuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9lbnRkLmMJ
MTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2VudGQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0OTIyMjE0NiArMDEwMApAQCAtMCww
ICsxLDM2MSBAQAorLyogQ29weXJpZ2h0IDIwMDMsIDIwMDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vu
c2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogRW50IGRhZW1vbi4g
Ki8KKworI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAidHhubWdyLmgiCisjaW5jbHVkZSAi
dHJlZS5oIgorI2luY2x1ZGUgImVudGQuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2luY2x1ZGUg
ImNvbnRleHQuaCIKKyNpbmNsdWRlICJyZWlzZXI0LmgiCisjaW5jbHVkZSAidmZzX29wcy5oIgor
I2luY2x1ZGUgInBhZ2VfY2FjaGUuaCIKKyNpbmNsdWRlICJpbm9kZS5oIgorCisjaW5jbHVkZSA8
bGludXgvc2NoZWQuaD4JLyogc3RydWN0IHRhc2tfc3RydWN0ICovCisjaW5jbHVkZSA8bGludXgv
c3VzcGVuZC5oPgorI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgorI2luY2x1ZGUgPGxpbnV4L3dy
aXRlYmFjay5oPgorI2luY2x1ZGUgPGxpbnV4L3RpbWUuaD4JCS8qIElOSVRJQUxfSklGRklFUyAq
LworI2luY2x1ZGUgPGxpbnV4L2JhY2tpbmctZGV2Lmg+CS8qIGJkaV93cml0ZV9jb25nZXN0ZWQg
Ki8KKyNpbmNsdWRlIDxsaW51eC93YWl0Lmg+CisjaW5jbHVkZSA8bGludXgva3RocmVhZC5oPgor
I2luY2x1ZGUgPGxpbnV4L2ZyZWV6ZXIuaD4KKworI2RlZmluZSBERUZfUFJJT1JJVFkgMTIKKyNk
ZWZpbmUgTUFYX0VOVERfSVRFUlMgMTAKKworc3RhdGljIHZvaWQgZW50ZF9mbHVzaChzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKiwgc3RydWN0IHdicSAqKTsKK3N0YXRpYyBpbnQgZW50ZCh2b2lkICphcmcp
OworCisvKgorICogc2V0IC0+Y29tbSBmaWVsZCBvZiBlbmQgdGhyZWFkIHRvIG1ha2UgaXRzIHN0
YXRlIHZpc2libGUgdG8gdGhlIHVzZXIgbGV2ZWwKKyAqLworI2RlZmluZSBlbnRkX3NldF9jb21t
KHN0YXRlKQkJCQkJXAorCXNucHJpbnRmKGN1cnJlbnQtPmNvbW0sIHNpemVvZihjdXJyZW50LT5j
b21tKSwJXAorCQkiZW50OiVzJXMiLCBzdXBlci0+c19pZCwgKHN0YXRlKSkKKworLyoqCisgKiBy
ZWlzZXI0X2luaXRfZW50ZCAtIGluaXRpYWxpemUgZW50ZCBjb250ZXh0IGFuZCBzdGFydCBrZXJu
ZWwgZGFlbW9uCisgKiBAc3VwZXI6IHN1cGVyIGJsb2NrIHRvIHN0YXJ0IGVudCB0aHJlYWQgZm9y
CisgKgorICogQ3JlYXRlcyBlbnRkIGNvbnRleHRzLCBzdGFydHMga2VybmVsIHRocmVhZCBhbmQg
d2FpdHMgdW50aWwgaXQKKyAqIGluaXRpYWxpemVzLgorICovCitpbnQgcmVpc2VyNF9pbml0X2Vu
dGQoc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwllbnRkX2NvbnRleHQgKmN0eDsKKwor
CWFzc2VydCgibmlraXRhLTMxMDQiLCBzdXBlciAhPSBOVUxMKTsKKworCWN0eCA9IGdldF9lbnRk
X2NvbnRleHQoc3VwZXIpOworCisJbWVtc2V0KGN0eCwgMCwgc2l6ZW9mICpjdHgpOworCXNwaW5f
bG9ja19pbml0KCZjdHgtPmd1YXJkKTsKKwlpbml0X3dhaXRxdWV1ZV9oZWFkKCZjdHgtPndhaXQp
OworI2lmIFJFSVNFUjRfREVCVUcKKwlJTklUX0xJU1RfSEVBRCgmY3R4LT5mbHVzaGVyc19saXN0
KTsKKyNlbmRpZgorCS8qIGxpc3RzIG9mIHdyaXRlcGFnZSByZXF1ZXN0cyAqLworCUlOSVRfTElT
VF9IRUFEKCZjdHgtPnRvZG9fbGlzdCk7CisJSU5JVF9MSVNUX0hFQUQoJmN0eC0+ZG9uZV9saXN0
KTsKKwkvKiBzdGFydCBlbnRkICovCisJY3R4LT50c2sgPSBrdGhyZWFkX3J1bihlbnRkLCBzdXBl
ciwgImVudDolcyIsIHN1cGVyLT5zX2lkKTsKKwlpZiAoSVNfRVJSKGN0eC0+dHNrKSkKKwkJcmV0
dXJuIFBUUl9FUlIoY3R4LT50c2spOworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBwdXRf
d2JxKHN0cnVjdCB3YnEgKnJxKQoreworCWlwdXQocnEtPm1hcHBpbmctPmhvc3QpOworCWNvbXBs
ZXRlKCZycS0+Y29tcGxldGlvbik7Cit9CisKKy8qIGVudCBzaG91bGQgYmUgbG9ja2VkICovCitz
dGF0aWMgc3RydWN0IHdicSAqX19nZXRfd2JxKGVudGRfY29udGV4dCAqIGVudCkKK3sKKwlzdHJ1
Y3Qgd2JxICp3YnE7CisKKwlpZiAobGlzdF9lbXB0eSgmZW50LT50b2RvX2xpc3QpKQorCQlyZXR1
cm4gTlVMTDsKKworCWVudC0+bnJfdG9kb19yZXFzLS07CisJd2JxID0gbGlzdF9lbnRyeShlbnQt
PnRvZG9fbGlzdC5uZXh0LCBzdHJ1Y3Qgd2JxLCBsaW5rKTsKKwlsaXN0X2RlbF9pbml0KCZ3YnEt
PmxpbmspOworCXJldHVybiB3YnE7Cit9CisKKy8qIGVudCB0aHJlYWQgZnVuY3Rpb24gKi8KK3N0
YXRpYyBpbnQgZW50ZCh2b2lkICphcmcpCit7CisJc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcjsK
KwllbnRkX2NvbnRleHQgKmVudDsKKwlpbnQgZG9uZSA9IDA7CisKKwlzdXBlciA9IGFyZzsKKwkv
KiBkb19mb3JrKCkganVzdCBjb3BpZXMgdGFza19zdHJ1Y3QgaW50byB0aGUgbmV3CisJICAgdGhy
ZWFkLiAtPmZzX2NvbnRleHQgc2hvdWxkbid0IGJlIGNvcGllZCBvZiBjb3Vyc2UuIFRoaXMgc2hv
dWxkbid0CisJICAgYmUgYSBwcm9ibGVtIGZvciB0aGUgcmVzdCBvZiB0aGUgY29kZSB0aG91Z2gu
CisJICovCisJY3VycmVudC0+am91cm5hbF9pbmZvID0gTlVMTDsKKworCWVudCA9IGdldF9lbnRk
X2NvbnRleHQoc3VwZXIpOworCisJd2hpbGUgKCFkb25lKSB7CisJCXRyeV90b19mcmVlemUoKTsK
KworCQlzcGluX2xvY2soJmVudC0+Z3VhcmQpOworCQl3aGlsZSAoZW50LT5ucl90b2RvX3JlcXMg
IT0gMCkgeworCQkJc3RydWN0IHdicSAqcnE7CisKKwkJCWFzc2VydCgiIiwgbGlzdF9lbXB0eSgm
ZW50LT5kb25lX2xpc3QpKTsKKworCQkJLyogdGFrZSByZXF1ZXN0IGZyb20gdGhlIHF1ZXVlIGhl
YWQgKi8KKwkJCXJxID0gX19nZXRfd2JxKGVudCk7CisJCQlhc3NlcnQoIiIsIHJxICE9IE5VTEwp
OworCQkJZW50LT5jdXJfcmVxdWVzdCA9IHJxOworCQkJc3Bpbl91bmxvY2soJmVudC0+Z3VhcmQp
OworCisJCQllbnRkX3NldF9jb21tKCIhIik7CisJCQllbnRkX2ZsdXNoKHN1cGVyLCBycSk7CisK
KwkJCXB1dF93YnEocnEpOworCisJCQkvKgorCQkJICogd2FrZXVwIGFsbCByZXF1ZXN0b3JzIGFu
ZCBpcHV0IHRoZWlyIGlub2RlcworCQkJICovCisJCQlzcGluX2xvY2soJmVudC0+Z3VhcmQpOwor
CQkJd2hpbGUgKCFsaXN0X2VtcHR5KCZlbnQtPmRvbmVfbGlzdCkpIHsKKwkJCQlycSA9IGxpc3Rf
ZW50cnkoZW50LT5kb25lX2xpc3QubmV4dCwgc3RydWN0IHdicSwgbGluayk7CisJCQkJbGlzdF9k
ZWxfaW5pdCgmcnEtPmxpbmspOworCQkJCWVudC0+bnJfZG9uZV9yZXFzLS07CisJCQkJc3Bpbl91
bmxvY2soJmVudC0+Z3VhcmQpOworCQkJCWFzc2VydCgiIiwgcnEtPndyaXR0ZW4gPT0gMSk7CisJ
CQkJcHV0X3dicShycSk7CisJCQkJc3Bpbl9sb2NrKCZlbnQtPmd1YXJkKTsKKwkJCX0KKwkJfQor
CQlzcGluX3VubG9jaygmZW50LT5ndWFyZCk7CisKKwkJZW50ZF9zZXRfY29tbSgiLiIpOworCisJ
CXsKKwkJCURFRklORV9XQUlUKF9fd2FpdCk7CisKKwkJCWRvIHsKKwkJCQlwcmVwYXJlX3RvX3dh
aXQoJmVudC0+d2FpdCwgJl9fd2FpdCwgVEFTS19JTlRFUlJVUFRJQkxFKTsKKwkJCQlpZiAoa3Ro
cmVhZF9zaG91bGRfc3RvcCgpKSB7CisJCQkJCWRvbmUgPSAxOworCQkJCQlicmVhazsKKwkJCQl9
CisJCQkJaWYgKGVudC0+bnJfdG9kb19yZXFzICE9IDApCisJCQkJCWJyZWFrOworCQkJCXNjaGVk
dWxlKCk7CisJCQl9IHdoaWxlICgwKTsKKwkJCWZpbmlzaF93YWl0KCZlbnQtPndhaXQsICZfX3dh
aXQpOworCQl9CisJfQorCUJVR19PTihlbnQtPm5yX3RvZG9fcmVxcyAhPSAwKTsKKwlyZXR1cm4g
MDsKK30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfZW50ZCAtIHN0b3AgZW50ZCBrZXJuZWwgdGhy
ZWFkCisgKiBAc3VwZXI6IHN1cGVyIGJsb2NrIHRvIHN0b3AgZW50IHRocmVhZCBmb3IKKyAqCisg
KiBJdCBpcyBjYWxsZWQgb24gdW1vdW50LiBTZW5kcyBzdG9wIHNpZ25hbCB0byBlbnRkIGFuZCB3
YWl0IHVudGlsIGl0IGhhbmRsZXMKKyAqIGl0LgorICovCit2b2lkIHJlaXNlcjRfZG9uZV9lbnRk
KHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJZW50ZF9jb250ZXh0ICplbnQ7CisKKwlh
c3NlcnQoIm5pa2l0YS0zMTAzIiwgc3VwZXIgIT0gTlVMTCk7CisKKwllbnQgPSBnZXRfZW50ZF9j
b250ZXh0KHN1cGVyKTsKKwlhc3NlcnQoInphbS0xMDU1IiwgZW50LT50c2sgIT0gTlVMTCk7CisJ
a3RocmVhZF9zdG9wKGVudC0+dHNrKTsKK30KKworLyogY2FsbGVkIGF0IHRoZSBiZWdpbm5pbmcg
b2Ygam5vZGVfZmx1c2ggdG8gcmVnaXN0ZXIgZmx1c2hlciB0aHJlYWQgd2l0aCBlbnQKKyAqIGRh
ZW1vbiAqLwordm9pZCByZWlzZXI0X2VudGVyX2ZsdXNoKHN0cnVjdCBzdXBlcl9ibG9jayAqc3Vw
ZXIpCit7CisJZW50ZF9jb250ZXh0ICplbnQ7CisKKwlhc3NlcnQoInphbS0xMDI5Iiwgc3VwZXIg
IT0gTlVMTCk7CisJZW50ID0gZ2V0X2VudGRfY29udGV4dChzdXBlcik7CisKKwlhc3NlcnQoInph
bS0xMDMwIiwgZW50ICE9IE5VTEwpOworCisJc3Bpbl9sb2NrKCZlbnQtPmd1YXJkKTsKKwllbnQt
PmZsdXNoZXJzKys7CisjaWYgUkVJU0VSNF9ERUJVRworCWxpc3RfYWRkKCZnZXRfY3VycmVudF9j
b250ZXh0KCktPmZsdXNoZXJzX2xpbmssICZlbnQtPmZsdXNoZXJzX2xpc3QpOworI2VuZGlmCisJ
c3Bpbl91bmxvY2soJmVudC0+Z3VhcmQpOworfQorCisvKiBjYWxsZWQgYXQgdGhlIGVuZCBvZiBq
bm9kZV9mbHVzaCAqLwordm9pZCByZWlzZXI0X2xlYXZlX2ZsdXNoKHN0cnVjdCBzdXBlcl9ibG9j
ayAqc3VwZXIpCit7CisJZW50ZF9jb250ZXh0ICplbnQ7CisJaW50IHdha2VfdXBfZW50OworCisJ
YXNzZXJ0KCJ6YW0tMTAyNyIsIHN1cGVyICE9IE5VTEwpOworCWVudCA9IGdldF9lbnRkX2NvbnRl
eHQoc3VwZXIpOworCisJYXNzZXJ0KCJ6YW0tMTAyOCIsIGVudCAhPSBOVUxMKTsKKworCXNwaW5f
bG9jaygmZW50LT5ndWFyZCk7CisJZW50LT5mbHVzaGVycy0tOworCXdha2VfdXBfZW50ID0gKGVu
dC0+Zmx1c2hlcnMgPT0gMCAmJiBlbnQtPm5yX3RvZG9fcmVxcyAhPSAwKTsKKyNpZiBSRUlTRVI0
X0RFQlVHCisJbGlzdF9kZWxfaW5pdCgmZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5mbHVzaGVyc19s
aW5rKTsKKyNlbmRpZgorCXNwaW5fdW5sb2NrKCZlbnQtPmd1YXJkKTsKKwlpZiAod2FrZV91cF9l
bnQpCisJCXdha2VfdXBfcHJvY2VzcyhlbnQtPnRzayk7Cit9CisKKyNkZWZpbmUgRU5URF9DQVBU
VVJFX0FQQUdFX0JVUlNUIFNXQVBfQ0xVU1RFUl9NQVgKKworc3RhdGljIHZvaWQgZW50ZF9mbHVz
aChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLCBzdHJ1Y3Qgd2JxICpycSkKK3sKKwlyZWlzZXI0
X2NvbnRleHQgY3R4OworCisJaW5pdF9zdGFja19jb250ZXh0KCZjdHgsIHN1cGVyKTsKKwljdHgu
ZW50ZCA9IDE7CisJY3R4LmdmcF9tYXNrID0gR0ZQX05PRlM7CisKKwlycS0+d2JjLT5yYW5nZV9z
dGFydCA9IHBhZ2Vfb2Zmc2V0KHJxLT5wYWdlKTsKKwlycS0+d2JjLT5yYW5nZV9lbmQgPSBycS0+
d2JjLT5yYW5nZV9zdGFydCArCisJCShFTlREX0NBUFRVUkVfQVBBR0VfQlVSU1QgPDwgUEFHRV9T
SElGVCk7CisKKworCXJxLT5tYXBwaW5nLT5hX29wcy0+d3JpdGVwYWdlcyhycS0+bWFwcGluZywg
cnEtPndiYyk7CisKKwlpZiAocnEtPndiYy0+bnJfdG9fd3JpdGUgPiAwKSB7CisJCWxvbmcgcmVz
dWx0OworCQlzdHJ1Y3QgYmRpX3dyaXRlYmFjayAqd2I7CisJCXN0cnVjdCB3Yl93cml0ZWJhY2tf
d29yayB3b3JrID0geworCQkJLnNiCQk9IHN1cGVyLAorCQkJLnN5bmNfbW9kZQk9IFdCX1NZTkNf
Tk9ORSwKKwkJCS5ucl9wYWdlcwk9IExPTkdfTUFYLAorCQkJLnJhbmdlX2N5Y2xpYwk9IDAsCisJ
CQkucmVhc29uCQk9IFdCX1JFQVNPTl9WTVNDQU4sCisJCX07CisJCXJxLT53YmMtPnN5bmNfbW9k
ZSA9IHdvcmsuc3luY19tb2RlLAorCQlycS0+d2JjLT5yYW5nZV9jeWNsaWMgPSB3b3JrLnJhbmdl
X2N5Y2xpYywKKwkJcnEtPndiYy0+cmFuZ2Vfc3RhcnQgPSAwOworCQlycS0+d2JjLT5yYW5nZV9l
bmQgPSBMTE9OR19NQVg7CisJCS8qCisJCSAqIHdlIGRvbid0IG5lZWQgdG8gcGluIHN1cGVyYmxv
Y2sgZm9yIHdyaXRlYmFjazoKKwkJICogdGhpcyBpcyBpbXBsaWNpdGx5IHBpbm5lZCBieSB3cml0
ZV9wYWdlX2J5X2VudAorCQkgKiAodmlhIGlncmFiKSwgc28gdGhhdCBzaHV0ZG93bl9zdXBlcigp
IHdpbGwgd2FpdAorCQkgKiAob24gcmVpc2VyNF9wdXRfc3VwZXIpIGZvciBlbnRkIGNvbXBsZXRp
b24uCisJCSAqLworCQl3YiA9ICZpbm9kZV90b19iZGkocnEtPm1hcHBpbmctPmhvc3QpLT53YjsK
KworCQlzcGluX2xvY2soJndiLT5saXN0X2xvY2spOworCQlyZXN1bHQgPSBnZW5lcmljX3dyaXRl
YmFja19zYl9pbm9kZXMoc3VwZXIsCisJCQkJICAgICAgICAgICAgIHdiLAorCQkJCQkgICAgIHJx
LT53YmMsCisJCQkJCSAgICAgJndvcmssCisJCQkJCSAgICAgdHJ1ZSk7CisJCXNwaW5fdW5sb2Nr
KCZ3Yi0+bGlzdF9sb2NrKTsKKwl9CisJcnEtPndiYy0+bnJfdG9fd3JpdGUgPSBFTlREX0NBUFRV
UkVfQVBBR0VfQlVSU1Q7CisKKwlyZWlzZXI0X3dyaXRlb3V0KHN1cGVyLCBycS0+d2JjKTsKKwlj
b250ZXh0X3NldF9jb21taXRfYXN5bmMoJmN0eCk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQoJmN0
eCk7Cit9CisKKy8qKgorICogd3JpdGVfcGFnZV9ieV9lbnQgLSBhc2sgZW50ZCB0aHJlYWQgdG8g
Zmx1c2ggdGhpcyBwYWdlIGFzIHBhcnQgb2Ygc2x1bQorICogQHBhZ2U6IHBhZ2UgdG8gYmUgd3Jp
dHRlbgorICogQHdiYzogd3JpdGViYWNrIGNvbnRyb2wgcGFzc2VkIHRvIHJlaXNlcjRfd3JpdGVw
YWdlCisgKgorICogQ3JlYXRlcyBhIHJlcXVlc3QsIHB1dHMgaXQgb24gZW50ZCBsaXN0IG9mIHJl
cXVlc3RzLCB3YWtldXBzIGVudGQgaWYKKyAqIG5lY2Vzc2FyeSwgd2FpdHMgdW50aWwgZW50ZCBj
b21wbGV0ZXMgd2l0aCB0aGUgcmVxdWVzdC4KKyAqLworaW50IHdyaXRlX3BhZ2VfYnlfZW50KHN0
cnVjdCBwYWdlICpwYWdlLCBzdHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKndiYykKK3sKKwlzdHJ1
Y3Qgc3VwZXJfYmxvY2sgKnNiOworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJZW50ZF9jb250ZXh0
ICplbnQ7CisJc3RydWN0IHdicSBycTsKKworCWFzc2VydCgiIiwgUGFnZUxvY2tlZChwYWdlKSk7
CisJYXNzZXJ0KCIiLCBwYWdlLT5tYXBwaW5nICE9IE5VTEwpOworCisJc2IgPSBwYWdlLT5tYXBw
aW5nLT5ob3N0LT5pX3NiOworCWVudCA9IGdldF9lbnRkX2NvbnRleHQoc2IpOworCWFzc2VydCgi
IiwgZW50ICYmIGVudC0+ZG9uZSA9PSAwKTsKKworCS8qCisJICogd2UgYXJlIGdvaW5nIHRvIHVu
bG9jayBwYWdlIGFuZCBhc2sgZW50IHRocmVhZCB0byB3cml0ZSB0aGUKKwkgKiBwYWdlLiBSZS1k
aXJ0eSBwYWdlIGJlZm9yZSB1bmxvY2tpbmcgc28gdGhhdCBpZiBlbnQgdGhyZWFkIGZhaWxzIHRv
CisJICogd3JpdGUgaXQgLSBpdCB3aWxsIHJlbWFpbiBkaXJ0eQorCSAqLworCXNldF9wYWdlX2Rp
cnR5X25vdGFnKHBhZ2UpOworCWFjY291bnRfcGFnZV9yZWRpcnR5KHBhZ2UpOworCisJLyoKKwkg
KiBwaW4gaW5vZGUgaW4gbWVtb3J5LCB1bmxvY2sgcGFnZSwgZW50ZF9mbHVzaCB3aWxsIGlwdXQu
IFdlIGNhbiBub3QKKwkgKiBpcHV0IGhlcmUgYmVjYXN1ZSB3ZSBjYW4gbm90IGFsbG93IGRlbGV0
ZV9pbm9kZSB0byBiZSBjYWxsZWQgaGVyZQorCSAqLworCWlub2RlID0gaWdyYWIocGFnZS0+bWFw
cGluZy0+aG9zdCk7CisJdW5sb2NrX3BhZ2UocGFnZSk7CisJaWYgKGlub2RlID09IE5VTEwpCisJ
CS8qIGlub2RlIGlzIGdldHRpbmcgZnJlZWQgKi8KKwkJcmV0dXJuIDA7CisKKwkvKiBpbml0IHdi
cSAqLworCUlOSVRfTElTVF9IRUFEKCZycS5saW5rKTsKKwlycS5tYWdpYyA9IFdCUV9NQUdJQzsK
KwlycS53YmMgPSB3YmM7CisJcnEucGFnZSA9IHBhZ2U7CisJcnEubWFwcGluZyA9IGlub2RlLT5p
X21hcHBpbmc7CisJcnEubm9kZSA9IE5VTEw7CisJcnEud3JpdHRlbiA9IDA7CisJaW5pdF9jb21w
bGV0aW9uKCZycS5jb21wbGV0aW9uKTsKKworCS8qIGFkZCByZXF1ZXN0IHRvIGVudGQncyBsaXN0
IG9mIHdyaXRlcGFnZSByZXF1ZXN0cyAqLworCXNwaW5fbG9jaygmZW50LT5ndWFyZCk7CisJZW50
LT5ucl90b2RvX3JlcXMrKzsKKwlsaXN0X2FkZF90YWlsKCZycS5saW5rLCAmZW50LT50b2RvX2xp
c3QpOworCWlmIChlbnQtPm5yX3RvZG9fcmVxcyA9PSAxKQorCQl3YWtlX3VwX3Byb2Nlc3MoZW50
LT50c2spOworCisJc3Bpbl91bmxvY2soJmVudC0+Z3VhcmQpOworCisJLyogd2FpdCB1bnRpbCBl
bnRkIGZpbmlzaGVzICovCisJd2FpdF9mb3JfY29tcGxldGlvbigmcnEuY29tcGxldGlvbik7CisK
KwlpZiAocnEud3JpdHRlbikKKwkJLyogRXZlbnR1YWxseSBFTlREIGhhcyB3cml0dGVuIHRoZSBw
YWdlIHRvIGRpc2suICovCisJCXJldHVybiAwOworCXJldHVybiAwOworfQorCitpbnQgd2JxX2F2
YWlsYWJsZSh2b2lkKQoreworCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSByZWlzZXI0X2dldF9j
dXJyZW50X3NiKCk7CisJZW50ZF9jb250ZXh0ICplbnQgPSBnZXRfZW50ZF9jb250ZXh0KHNiKTsK
KwlyZXR1cm4gZW50LT5ucl90b2RvX3JlcXM7Cit9CisKKy8qCisgKiBMb2NhbCB2YXJpYWJsZXM6
CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICogbW9kZS1uYW1lOiAiTEMiCisgKiBj
LWJhc2ljLW9mZnNldDogOAorICogdGFiLXdpZHRoOiA4CisgKiBmaWxsLWNvbHVtbjogNzkKKyAq
IEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L2VudGQuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9lbnRkLmgKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZW50ZC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAw
MDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9lbnRkLmgJMjAyMC0wMi0wNSAy
MDo1Mzo0MS40NDkyMjIxNDYgKzAxMDAKQEAgLTAsMCArMSw5MCBAQAorLyogQ29weXJpZ2h0IDIw
MDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAq
LworCisvKiBFbnQgZGFlbW9uLiAqLworCisjaWZuZGVmIF9fRU5URF9IX18KKyNkZWZpbmUgX19F
TlREX0hfXworCisjaW5jbHVkZSAiY29udGV4dC5oIgorCisjaW5jbHVkZSA8bGludXgvZnMuaD4K
KyNpbmNsdWRlIDxsaW51eC9jb21wbGV0aW9uLmg+CisjaW5jbHVkZSA8bGludXgvd2FpdC5oPgor
I2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQuaD4JLyog
Zm9yIHN0cnVjdCB0YXNrX3N0cnVjdCAqLworCisjZGVmaW5lIFdCUV9NQUdJQyAweDc4NzZkYzc2
CisKKy8qIHdyaXRlLWJhY2sgcmVxdWVzdC4gKi8KK3N0cnVjdCB3YnEgeworCWludCBtYWdpYzsK
KwlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7IC8qIGxpc3QgaGVhZCBvZiB0aGlzIGxpc3QgaXMgaW4g
ZW50ZCBjb250ZXh0ICovCisJc3RydWN0IHdyaXRlYmFja19jb250cm9sICp3YmM7CisJc3RydWN0
IHBhZ2UgKnBhZ2U7CisJc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmc7CisJc3RydWN0IGNv
bXBsZXRpb24gY29tcGxldGlvbjsKKwlqbm9kZSAqbm9kZTsgLyogc2V0IGlmIGVudCB0aHJlYWQg
Y2FwdHVyZWQgcmVxdWVzdGVkIHBhZ2UgKi8KKwlpbnQgd3JpdHRlbjsgLyogc2V0IGlmIGVudCB0
aHJlYWQgd3JvdGUgcmVxdWVzdGVkIHBhZ2UgKi8KK307CisKKy8qIGVudC10aHJlYWQgY29udGV4
dC4gVGhpcyBpcyB1c2VkIHRvIHN5bmNocm9uaXplIHN0YXJ0aW5nL3N0b3BwaW5nIGVudAorICog
dGhyZWFkcy4gKi8KK3R5cGVkZWYgc3RydWN0IGVudGRfY29udGV4dCB7CisJIC8qIHdhaXQgcXVl
dWUgdGhhdCBlbnQgdGhyZWFkIHdhaXRzIG9uIGZvciBtb3JlIHdvcmsuIEl0J3MKKwkgICogc2ln
bmFsZWQgYnkgd3JpdGVfcGFnZV9ieV9lbnQoKS4gKi8KKwl3YWl0X3F1ZXVlX2hlYWRfdCB3YWl0
OworCS8qIHNwaW5sb2NrIHByb3RlY3Rpbmcgb3RoZXIgZmllbGRzICovCisJc3BpbmxvY2tfdCBn
dWFyZDsKKwkvKiBlbnQgdGhyZWFkICovCisJc3RydWN0IHRhc2tfc3RydWN0ICp0c2s7CisJLyog
c2V0IHRvIGluZGljYXRlIHRoYXQgZW50IHRocmVhZCBzaG91bGQgbGVhdmUuICovCisJaW50IGRv
bmU7CisJLyogY291bnRlciBvZiBhY3RpdmUgZmx1c2hlcnMgKi8KKwlpbnQgZmx1c2hlcnM7CisJ
LyoKKwkgKiB3aGVuIHJlaXNlcjRfd3JpdGVwYWdlIGFza3MgZW50ZCB0byB3cml0ZSBhIHBhZ2Ug
LSBpdCBhZGRzIHN0cnVjdAorCSAqIHdicSB0byB0aGlzIGxpc3QKKwkgKi8KKwlzdHJ1Y3QgbGlz
dF9oZWFkIHRvZG9fbGlzdDsKKwkvKiBudW1iZXIgb2YgZWxlbWVudHMgb24gdGhlIGFib3ZlIGxp
c3QgKi8KKwlpbnQgbnJfdG9kb19yZXFzOworCisJc3RydWN0IHdicSAqY3VyX3JlcXVlc3Q7CisJ
LyoKKwkgKiB3aGVuIGVudGQgd3JpdGVzIGEgcGFnZSBpdCBtb3ZlcyB3cml0ZS1iYWNrIHJlcXVl
c3QgZnJvbSB0b2RvX2xpc3QKKwkgKiB0byBkb25lX2xpc3QuIFRoaXMgbGlzdCBpcyB1c2VkIGF0
IHRoZSBlbmQgb2YgZW50ZCBpdGVyYXRpb24gdG8KKwkgKiB3YWtldXAgcmVxdWVzdG9ycyBhbmQg
aXB1dCBpbm9kZXMuCisJICovCisJc3RydWN0IGxpc3RfaGVhZCBkb25lX2xpc3Q7CisJLyogbnVt
YmVyIG9mIGVsZW1lbnRzIG9uIHRoZSBhYm92ZSBsaXN0ICovCisJaW50IG5yX2RvbmVfcmVxczsK
KworI2lmIFJFSVNFUjRfREVCVUcKKwkvKiBsaXN0IG9mIGFsbCBhY3RpdmUgZmx1c2hlcnMgKi8K
KwlzdHJ1Y3QgbGlzdF9oZWFkIGZsdXNoZXJzX2xpc3Q7CisjZW5kaWYKK30gZW50ZF9jb250ZXh0
OworCitleHRlcm4gaW50ICByZWlzZXI0X2luaXRfZW50ZChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7
CitleHRlcm4gdm9pZCByZWlzZXI0X2RvbmVfZW50ZChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CisK
K2V4dGVybiB2b2lkIHJlaXNlcjRfZW50ZXJfZmx1c2goc3RydWN0IHN1cGVyX2Jsb2NrICopOwor
ZXh0ZXJuIHZvaWQgcmVpc2VyNF9sZWF2ZV9mbHVzaChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CisK
K2V4dGVybiBpbnQgd3JpdGVfcGFnZV9ieV9lbnQoc3RydWN0IHBhZ2UgKiwgc3RydWN0IHdyaXRl
YmFja19jb250cm9sICopOworZXh0ZXJuIGludCB3YnFfYXZhaWxhYmxlKHZvaWQpOworZXh0ZXJu
IHZvaWQgZW50X3dyaXRlc19wYWdlKHN0cnVjdCBzdXBlcl9ibG9jayAqLCBzdHJ1Y3QgcGFnZSAq
KTsKKworZXh0ZXJuIGpub2RlICpnZXRfam5vZGVfYnlfd2JxKHN0cnVjdCBzdXBlcl9ibG9jayAq
LCBzdHJ1Y3Qgd2JxICopOworLyogX19FTlREX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGlu
dXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdp
ZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2VvdHRsLmMgbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvZW90dGwuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9l
b3R0bC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC9lb3R0bC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDQ5MjIyMTQ2ICswMTAw
CkBAIC0wLDAgKzEsNTEwIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5z
IFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLworCisj
aW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAia2V5Lmgi
CisjaW5jbHVkZSAiY29vcmQuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5j
bHVkZSAicGx1Z2luL25vZGUvbm9kZS5oIgorI2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVkZSAi
YmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0cmVlX3dhbGsuaCIKKyNpbmNsdWRlICJ0cmVlX21v
ZC5oIgorI2luY2x1ZGUgImNhcnJ5LmgiCisjaW5jbHVkZSAidHJlZS5oIgorI2luY2x1ZGUgInN1
cGVyLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkvKiBmb3IgX191Pz8gICovCisKKy8q
CisgKiBFeHRlbnRzIG9uIHRoZSB0d2lnIGxldmVsIChFT1RUTCkgaGFuZGxpbmcuCisgKgorICog
RU9UVEwgcG9zZXMgc29tZSBwcm9ibGVtcyB0byB0aGUgdHJlZSB0cmF2ZXJzYWwsIHRoYXQgYXJl
IGJldHRlciBleHBsYWluZWQKKyAqIGJ5IGV4YW1wbGUuCisgKgorICogU3VwcG9zZSB3ZSBoYXZl
IGJsb2NrIEIxIG9uIHRoZSB0d2lnIGxldmVsIHdpdGggdGhlIGZvbGxvd2luZyBpdGVtczoKKyAq
CisgKiAwLiBpbnRlcm5hbCBpdGVtIEkwIHdpdGgga2V5ICgwOjA6MDowKSAobG9jYWxpdHksIGtl
eS10eXBlLCBvYmplY3QtaWQsCisgKiBvZmZzZXQpCisgKiAxLiBleHRlbnQgaXRlbSBFMSB3aXRo
IGtleSAoMTo0OjEwMDowKSwgaGF2aW5nIDEwIGJsb2NrcyBvZiA0ayBlYWNoCisgKiAyLiBpbnRl
cm5hbCBpdGVtIEkyIHdpdGgga2V5ICgxMDowOjA6MCkKKyAqCisgKiBXZSBhcmUgdHJ5aW5nIHRv
IGluc2VydCBpdGVtIHdpdGgga2V5ICg1OjA6MDowKS4gTG9va3VwIGZpbmRzIG5vZGUgQjEsIGFu
ZAorICogdGhlbiBpbnRyYS1ub2RlIGxvb2t1cCBpcyBkb25lLiBUaGlzIGxvb2t1cCBmaW5pc2hl
ZCBvbiB0aGUgRTEsIGJlY2F1c2UgdGhlCisgKiBrZXkgd2UgYXJlIGxvb2tpbmcgZm9yIGlzIGxh
cmdlciB0aGFuIHRoZSBrZXkgb2YgRTEgYW5kIGlzIHNtYWxsZXIgdGhhbiBrZXkKKyAqIHRoZSBv
ZiBJMi4KKyAqCisgKiBIZXJlIHNlYXJjaCBpcyBzdHVjay4KKyAqCisgKiBBZnRlciBzb21lIHRo
b3VnaHQgaXQgaXMgY2xlYXIgd2hhdCBpcyB3cm9uZyBoZXJlOiBleHRlbnRzIG9uIHRoZSB0d2ln
IGxldmVsCisgKiBicmVhayBzb21lIGJhc2ljIHByb3BlcnR5IG9mIHRoZSAqc2VhcmNoKiB0cmVl
IChvbiB0aGUgcHJldGV4dCwgdGhhdCB0aGV5CisgKiByZXN0b3JlIHByb3BlcnR5IG9mIGJhbGFu
Y2VkIHRyZWUpLgorICoKKyAqIFNhaWQgcHJvcGVydHkgaXMgdGhlIGZvbGxvd2luZzogaWYgaW4g
dGhlIGludGVybmFsIG5vZGUgb2YgdGhlIHNlYXJjaCB0cmVlCisgKiB3ZSBoYXZlIFsgLi4uIEtl
eTEgUG9pbnRlciBLZXkyIC4uLiBdIHRoZW4sIGFsbCBkYXRhIHRoYXQgYXJlIG9yIHdpbGwgYmUK
KyAqIGtleWVkIGluIHRoZSB0cmVlIHdpdGggdGhlIEtleSBzdWNoIHRoYXQgS2V5MSA8PSBLZXkg
PCBLZXkyIGFyZSBhY2Nlc3NpYmxlCisgKiB0aHJvdWdoIHRoZSBQb2ludGVyLgorICoKKyAqIFRo
aXMgaXMgbm90IHRydWUsIHdoZW4gUG9pbnRlciBpcyBFeHRlbnQtUG9pbnRlciwgc2ltcGx5IGJl
Y2F1c2UgZXh0ZW50CisgKiBjYW5ub3QgZXhwYW5kIGluZGVmaW5pdGVseSB0byB0aGUgcmlnaHQg
dG8gaW5jbHVkZSBhbnkgaXRlbSB3aXRoCisgKgorICogICBLZXkxIDw9IEtleSA8PSBLZXkyLgor
ICoKKyAqIEZvciBleGFtcGxlLCBvdXIgRTEgZXh0ZW50IGlzIG9ubHkgcmVzcG9uc2libGUgZm9y
IHRoZSBkYXRhIHdpdGgga2V5cworICoKKyAqICAgKDE6NDoxMDA6MCkgPD0ga2V5IDw9ICgxOjQ6
MTAwOjB4ZmZmZmZmZmZmZmZmZmZmZiksIGFuZAorICoKKyAqIHNvLCBrZXkgcmFuZ2UKKyAqCisg
KiAgICggKDE6NDoxMDA6MHhmZmZmZmZmZmZmZmZmZmZmKSwgKDEwOjA6MDowKSApCisgKgorICog
aXMgb3JwaGFuZWQ6IHRoZXJlIGlzIG5vIHdheSB0byBnZXQgdGhlcmUgZnJvbSB0aGUgdHJlZSBy
b290LgorICoKKyAqIEluIG90aGVyIHdvcmRzLCBleHRlbnQgcG9pbnRlcnMgYXJlIGRpZmZlcmVu
dCB0aGFuIG5vcm1hbCBjaGlsZCBwb2ludGVycyBhcworICogZmFyIGFzIHNlYXJjaCB0cmVlIGlz
IGNvbmNlcm5lZCwgYW5kIHRoaXMgY3JlYXRlcyBzdWNoIHByb2JsZW1zLgorICoKKyAqIFBvc3Np
YmxlIHNvbHV0aW9uIGZvciB0aGlzIHByb2JsZW0gaXMgdG8gaW5zZXJ0IG91ciBpdGVtIGludG8g
bm9kZSBwb2ludGVkCisgKiB0byBieSBJMi4gVGhlcmUgYXJlIHNvbWUgcHJvYmxlbXMgdGhyb3Vn
aDoKKyAqCisgKiAoMSkgSTIgY2FuIGJlIGluIGEgZGlmZmVyZW50IG5vZGUuCisgKiAoMikgRTEg
Y2FuIGJlIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IGFub3RoZXIgZXh0ZW50IEUyLgorICoKKyAq
ICgxKSBpcyBzb2x2ZWQgYnkgY2FsbGluZyByZWlzZXI0X2dldF9yaWdodF9uZWlnaGJvcigpIGFu
ZCBhY2NvdW50aW5nCisgKiBmb3IgbG9ja3MvY29vcmRzIGFzIG5lY2Vzc2FyeS4KKyAqCisgKiAo
MikgaXMgbW9yZSBjb21wbGV4LiBTb2x1dGlvbiBoZXJlIGlzIHRvIGluc2VydCBuZXcgZW1wdHkg
bGVhZiBub2RlIGFuZAorICogaW5zZXJ0IGludGVybmFsIGl0ZW0gYmV0d2VlbiBFMSBhbmQgRTIg
cG9pbnRpbmcgdG8gc2FpZCBsZWFmIG5vZGUuIFRoaXMgaXMKKyAqIGZ1cnRoZXIgY29tcGxpY2F0
ZWQgYnkgcG9zc2liaWxpdHkgdGhhdCBFMiBpcyBpbiBhIGRpZmZlcmVudCBub2RlLCBldGMuCisg
KgorICogUHJvYmxlbXM6CisgKgorICogKDEpIGlmIHRoZXJlIHdhcyBpbnRlcm5hbCBpdGVtIEky
IGltbWVkaWF0ZWx5IG9uIHRoZSByaWdodCBvZiBhbiBleHRlbnQgRTEKKyAqIHdlIGFuZCB3ZSBk
ZWNpZGVkIHRvIGluc2VydCBuZXcgaXRlbSBTMSBpbnRvIG5vZGUgTjIgcG9pbnRlZCB0byBieSBJ
MiwgdGhlbgorICoga2V5IG9mIFMxIHdpbGwgYmUgbGVzcyB0aGFuIHNtYWxsZXN0IGtleSBpbiB0
aGUgTjIuIE5vcm1hbGx5LCBzZWFyY2gga2V5CisgKiBjaGVja3MgdGhhdCBrZXkgd2UgYXJlIGxv
b2tpbmcgZm9yIGlzIGluIHRoZSByYW5nZSBvZiBrZXlzIGNvdmVyZWQgYnkgdGhlCisgKiBub2Rl
IGtleSBpcyBiZWluZyBsb29rZWQgaW4uIFRvIHdvcmsgYXJvdW5kIG9mIHRoaXMgc2l0dWF0aW9u
LCB3aGlsZQorICogcHJlc2VydmluZyB1c2VmdWwgY29uc2lzdGVuY3kgY2hlY2sgbmV3IGZsYWcg
Q0JLX1RSVVNUX0RLIHdhcyBhZGRlZCB0byB0aGUKKyAqIGNiayBmYWxncyBiaXRtYXNrLiBUaGlz
IGZsYWcgaXMgYXV0b21hdGljYWxseSBzZXQgb24gZW50cmFuY2UgdG8gdGhlCisgKiBjb29yZF9i
eV9rZXkoKSBhbmQgaXMgb25seSBjbGVhcmVkIHdoZW4gd2UgYXJlIGFib3V0IHRvIGVudGVyIHNp
dHVhdGlvbgorICogZGVzY3JpYmVkIGFib3ZlLgorICoKKyAqICgyKSBJZiBleHRlbnQgRTEgaXMg
aW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgYW5vdGhlciBleHRlbnQgRTIgYW5kIHdlIGFyZQorICog
c2VhcmNoaW5nIGZvciB0aGUga2V5IHRoYXQgaXMgYmV0d2VlbiBFMSBhbmQgRTIgd2Ugb25seSBo
YXZlIHRvIGluc2VydCBuZXcKKyAqIGVtcHR5IGxlYWYgbm9kZSB3aGVuIGNvb3JkX2J5X2tleSB3
YXMgY2FsbGVkIGZvciBpbnNlcnRpb24sIHJhdGhlciB0aGFuIGp1c3QKKyAqIGZvciBsb29rdXAu
IFRvIGRpc3Rpbmd1aXNoIHRoZXNlIGNhc2VzLCBuZXcgZmxhZyBDQktfRk9SX0lOU0VSVCB3YXMg
YWRkZWQgdG8KKyAqIHRoZSBjYmsgZmFsZ3MgYml0bWFzay4gVGhpcyBmbGFnIGlzIGF1dG9tYXRp
Y2FsbHkgc2V0IGJ5IGNvb3JkX2J5X2tleSBjYWxscworICogcGVyZm9ybWVkIGJ5IGluc2VydF9i
eV9rZXkoKSBhbmQgZnJpZW5kcy4KKyAqCisgKiAoMykgSW5zZXJ0aW9uIG9mIG5ldyBlbXB0eSBs
ZWFmIG5vZGUgKHBvc3NpYmx5KSByZXF1aXJlcyBiYWxhbmNpbmcuIEluIGFueQorICogY2FzZSBp
dCByZXF1aXJlcyBtb2RpZmljYXRpb24gb2Ygbm9kZSBjb250ZW50IHdoaWNoIGlzIG9ubHkgcG9z
c2libGUgdW5kZXIKKyAqIHdyaXRlIGxvY2suIEl0IG1heSB3ZWxsIGhhcHBlbiB0aGF0IHdlIG9u
bHkgaGF2ZSByZWFkIGxvY2sgb24gdGhlIG5vZGUgd2hlcmUKKyAqIG5ldyBpbnRlcm5hbCBwb2lu
dGVyIGlzIHRvIGJlIGluc2VydGVkIChjb21tb24gY2FzZTogbG9va3VwIG9mIG5vbi1leGlzdGVu
dAorICogc3RhdC1kYXRhIHRoYXQgZmVsbHMgYmV0d2VlbiB0d28gZXh0ZW50cykuIElmIG9ubHkg
cmVhZCBsb2NrIGlzIGhlbGQsIHRyZWUKKyAqIHRyYXZlcnNhbCBpcyByZXN0YXJ0ZWQgd2l0aCBs
b2NrX2xldmVsIG1vZGlmaWVkIHNvIHRoYXQgbmV4dCB0aW1lIHdlIGhpdAorICogdGhpcyBwcm9i
bGVtLCB3cml0ZSBsb2NrIHdpbGwgYmUgaGVsZC4gT25jZSB3ZSBoYXZlIHdyaXRlIGxvY2ssIGJh
bGFuY2luZworICogd2lsbCBiZSBwZXJmb3JtZWQuCisgKi8KKworLyoqCisgKiBpc19uZXh0X2l0
ZW1faW50ZXJuYWwgLSBjaGVjayB3aGV0aGVyIG5leHQgaXRlbSBpcyBpbnRlcm5hbAorICogQGNv
b3JkOiBjb29yZGluYXRlIG9mIGV4dGVudCBpdGVtIGluIHR3aWcgbm9kZQorICogQGtleTogc2Vh
cmNoIGtleQorICogQGxoOiB0d2lnIG5vZGUgbG9jayBoYW5kbGUKKyAqCisgKiBMb29rcyBhdCB0
aGUgdW5pdCBuZXh0IHRvIEBjb29yZC4gSWYgaXQgaXMgYW4gaW50ZXJuYWwgb25lIC0gMSBpcyBy
ZXR1cm5lZCwKKyAqIEBjb29yZCBpcyBzZXQgdG8gdGhhdCB1bml0LiBJZiB0aGF0IHVuaXQgaXMg
aW4gcmlnaHQgbmVpZ2hib3IsIEBsaCBpcyBtb3ZlZAorICogdG8gdGhhdCBub2RlLCBAY29vcmQg
aXMgc2V0IHRvIGl0cyBmaXJzdCB1bml0LiBJZiBuZXh0IGl0ZW0gaXMgbm90IGludGVybmFsCisg
KiBvciBkb2VzIG5vdCBleGlzdCB0aGVuIDAgaXMgcmV0dXJuZWQsIEBjb29yZCBhbmQgQGxoIGFy
ZSBsZWZ0IHVuY2hhbmdlZC4gMgorICogaXMgcmV0dXJuZWQgaWYgc2VhcmNoIHJlc3RhcnQgaGFz
IHRvIGJlIGRvbmUuCisgKi8KK3N0YXRpYyBpbnQKK2lzX25leHRfaXRlbV9pbnRlcm5hbChjb29y
ZF90ICpjb29yZCwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCSAgICAgIGxvY2tfaGFuZGxl
ICogbGgpCit7CisJY29vcmRfdCBuZXh0OworCWxvY2tfaGFuZGxlIHJuOworCWludCByZXN1bHQ7
CisKKwljb29yZF9kdXAoJm5leHQsIGNvb3JkKTsKKwlpZiAoY29vcmRfbmV4dF91bml0KCZuZXh0
KSA9PSAwKSB7CisJCS8qIG5leHQgdW5pdCBpcyBpbiB0aGlzIG5vZGUgKi8KKwkJaWYgKGl0ZW1f
aXNfaW50ZXJuYWwoJm5leHQpKSB7CisJCQljb29yZF9kdXAoY29vcmQsICZuZXh0KTsKKwkJCXJl
dHVybiAxOworCQl9CisJCWFzc2VydCgidnMtMyIsIGl0ZW1faXNfZXh0ZW50KCZuZXh0KSk7CisJ
CXJldHVybiAwOworCX0KKworCS8qCisJICogbmV4dCB1bml0IGVpdGhlciBkb2VzIG5vdCBleGlz
dCBvciBpcyBpbiByaWdodCBuZWlnaGJvci4gSWYgaXQgaXMgaW4KKwkgKiByaWdodCBuZWlnaGJv
ciB3ZSBoYXZlIHRvIGNoZWNrIHJpZ2h0IGRlbGltaXRpbmcga2V5IGJlY2F1c2UKKwkgKiBjb25j
dXJyZW50IHRocmVhZCBjb3VsZCBnZXQgdGhlaXIgZmlyc3QgYW5kIGluc2VydCBpdGVtIHdpdGgg
YSBrZXkKKwkgKiBzbWFsbGVyIHRoYW4gQGtleQorCSAqLworCXJlYWRfbG9ja19kayhjdXJyZW50
X3RyZWUpOworCXJlc3VsdCA9IGtleWNtcChrZXksIHpub2RlX2dldF9yZF9rZXkoY29vcmQtPm5v
ZGUpKTsKKwlyZWFkX3VubG9ja19kayhjdXJyZW50X3RyZWUpOworCWFzc2VydCgidnMtNiIsIHJl
c3VsdCAhPSBFUVVBTF9UTyk7CisJaWYgKHJlc3VsdCA9PSBHUkVBVEVSX1RIQU4pCisJCXJldHVy
biAyOworCisJLyogbG9jayByaWdodCBuZWlnaGJvciAqLworCWluaXRfbGgoJnJuKTsKKwlyZXN1
bHQgPSByZWlzZXI0X2dldF9yaWdodF9uZWlnaGJvcigmcm4sIGNvb3JkLT5ub2RlLAorCQkJCQkg
ICAgem5vZGVfaXNfd2xvY2tlZChjb29yZC0+bm9kZSkgPworCQkJCQkgICAgWk5PREVfV1JJVEVf
TE9DSyA6IFpOT0RFX1JFQURfTE9DSywKKwkJCQkJICAgIEdOX0NBTl9VU0VfVVBQRVJfTEVWRUxT
KTsKKwlpZiAocmVzdWx0ID09IC1FX05PX05FSUdIQk9SKSB7CisJCS8qIHdlIGFyZSBvbiB0aGUg
cmlnaHRtb3N0IGVkZ2Ugb2YgdGhlIHRyZWUgKi8KKwkJZG9uZV9saCgmcm4pOworCQlyZXR1cm4g
MDsKKwl9CisKKwlpZiAocmVzdWx0KSB7CisJCWFzc2VydCgidnMtNCIsIHJlc3VsdCA8IDApOwor
CQlkb25lX2xoKCZybik7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyoKKwkgKiBjaGVjayB3
aGV0aGVyIGNvbmN1cnJlbnQgdGhyZWFkIG1hbmFnZWQgdG8gaW5zZXJ0IGl0ZW0gd2l0aCBhIGtl
eQorCSAqIHNtYWxsZXIgdGhhbiBAa2V5CisJICovCisJcmVhZF9sb2NrX2RrKGN1cnJlbnRfdHJl
ZSk7CisJcmVzdWx0ID0ga2V5Y21wKGtleSwgem5vZGVfZ2V0X2xkX2tleShybi5ub2RlKSk7CisJ
cmVhZF91bmxvY2tfZGsoY3VycmVudF90cmVlKTsKKwlhc3NlcnQoInZzLTYiLCByZXN1bHQgIT0g
RVFVQUxfVE8pOworCWlmIChyZXN1bHQgPT0gR1JFQVRFUl9USEFOKSB7CisJCWRvbmVfbGgoJnJu
KTsKKwkJcmV0dXJuIDI7CisJfQorCisJcmVzdWx0ID0gemxvYWQocm4ubm9kZSk7CisJaWYgKHJl
c3VsdCkgeworCQlhc3NlcnQoInZzLTUiLCByZXN1bHQgPCAwKTsKKwkJZG9uZV9saCgmcm4pOwor
CQlyZXR1cm4gcmVzdWx0OworCX0KKworCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmbmV4dCwgcm4u
bm9kZSk7CisJaWYgKGl0ZW1faXNfaW50ZXJuYWwoJm5leHQpKSB7CisJCS8qCisJCSAqIG5leHQg
dW5pdCBpcyBpbiByaWdodCBuZWlnaGJvciBhbmQgaXQgaXMgYW4gdW5pdCBvZiBpbnRlcm5hbAor
CQkgKiBpdGVtLiBVbmxvY2sgY29vcmQtPm5vZGUuIE1vdmUgQGxoIHRvIHJpZ2h0IG5laWdoYm9y
LiBAY29vcmQKKwkJICogaXMgc2V0IHRvIHRoZSBmaXJzdCB1bml0IG9mIHJpZ2h0IG5laWdoYm9y
LgorCQkgKi8KKwkJY29vcmRfZHVwKGNvb3JkLCAmbmV4dCk7CisJCXpyZWxzZShybi5ub2RlKTsK
KwkJZG9uZV9saChsaCk7CisJCW1vdmVfbGgobGgsICZybik7CisJCXJldHVybiAxOworCX0KKwor
CS8qCisJICogbmV4dCB1bml0IGlzIHVuaXQgb2YgZXh0ZW50IGl0ZW0uIFJldHVybiB3aXRob3V0
IGNoYW5pbmcgQGxoIGFuZAorCSAqIEBjb29yZC4KKwkgKi8KKwlhc3NlcnQoInZzLTYiLCBpdGVt
X2lzX2V4dGVudCgmbmV4dCkpOworCXpyZWxzZShybi5ub2RlKTsKKwlkb25lX2xoKCZybik7CisJ
cmV0dXJuIDA7Cit9CisKKy8qKgorICogcmRfa2V5IC0gY2FsY3VsYXRlIGtleSBvZiBhbiBpdGVt
IG5leHQgdG8gdGhlIGdpdmVuIG9uZQorICogQGNvb3JkOiBwb3NpdGlvbiBpbiBhIG5vZGUKKyAq
IEBrZXk6IHN0b3JhZ2UgZm9yIHJlc3VsdCBrZXkKKyAqCisgKiBAY29vcmQgaXMgc2V0IGJldHdl
ZW4gaXRlbXMgb3IgYWZ0ZXIgdGhlIGxhc3QgaXRlbSBpbiBhIG5vZGUuIENhbGN1bGF0ZSBrZXkK
KyAqIG9mIGl0ZW0gdG8gdGhlIHJpZ2h0IG9mIEBjb29yZC4KKyAqLworc3RhdGljIHJlaXNlcjRf
a2V5ICpyZF9rZXkoY29uc3QgY29vcmRfdCAqY29vcmQsIHJlaXNlcjRfa2V5ICprZXkpCit7CisJ
Y29vcmRfdCBkdXA7CisKKwlhc3NlcnQoIm5pa2l0YS0yMjgxIiwgY29vcmRfaXNfYmV0d2Vlbl9p
dGVtcyhjb29yZCkpOworCWNvb3JkX2R1cCgmZHVwLCBjb29yZCk7CisKKwlpZiAoY29vcmRfc2V0
X3RvX3JpZ2h0KCZkdXApID09IDApCisJCS8qIG5leHQgaXRlbSBpcyBpbiB0aGlzIG5vZGUuIFJl
dHVybiBpdHMga2V5LiAqLworCQl1bml0X2tleV9ieV9jb29yZCgmZHVwLCBrZXkpOworCWVsc2Ug
eworCQkvKgorCQkgKiBuZXh0IGl0ZW0gZWl0aGVyIGRvZXMgbm90IGV4aXN0IG9yIGlzIGluIHJp
Z2h0CisJCSAqIG5laWdoYm9yLiBSZXR1cm4gem5vZGUncyByaWdodCBkZWxpbWl0aW5nIGtleS4K
KwkJICovCisJCXJlYWRfbG9ja19kayhjdXJyZW50X3RyZWUpOworCQkqa2V5ID0gKnpub2RlX2dl
dF9yZF9rZXkoY29vcmQtPm5vZGUpOworCQlyZWFkX3VubG9ja19kayhjdXJyZW50X3RyZWUpOwor
CX0KKwlyZXR1cm4ga2V5OworfQorCisvKioKKyAqIGFkZF9lbXB0eV9sZWFmIC0gaW5zZXJ0IGVt
cHR5IGxlYWYgYmV0d2VlbiB0d28gZXh0ZW50cworICogQGluc2VydF9jb29yZDogcG9zaXRpb24g
aW4gdHdpZyBub2RlIGJldHdlZW4gdHdvIGV4dGVudHMKKyAqIEBsaDogdHdpZyBub2RlIGxvY2sg
aGFuZGxlCisgKiBAa2V5OiBsZWZ0IGRlbGltaXRpbmcga2V5IG9mIG5ldyBub2RlCisgKiBAcmRr
ZXk6IHJpZ2h0IGRlbGltaXRpbmcga2V5IG9mIG5ldyBub2RlCisgKgorICogSW5zZXJ0cyBlbXB0
eSBsZWFmIG5vZGUgYmV0d2VlbiB0d28gZXh0ZW50IGl0ZW1zLiBJdCBpcyBuZWNlc3Nhcnkgd2hl
biB3ZQorICogaGF2ZSB0byBpbnNlcnQgYW4gaXRlbSBvbiBsZWFmIGxldmVsIGJldHdlZW4gdHdv
IGV4dGVudHMgKGl0ZW1zIG9uIHRoZSB0d2lnCisgKiBsZXZlbCkuCisgKi8KK3N0YXRpYyBpbnQK
K2FkZF9lbXB0eV9sZWFmKGNvb3JkX3QgKmluc2VydF9jb29yZCwgbG9ja19oYW5kbGUgKmxoLAor
CSAgICAgICBjb25zdCByZWlzZXI0X2tleSAqa2V5LCBjb25zdCByZWlzZXI0X2tleSAqcmRrZXkp
Cit7CisJaW50IHJlc3VsdDsKKwljYXJyeV9wb29sICpwb29sOworCWNhcnJ5X2xldmVsICp0b2Rv
OworCXJlaXNlcjRfaXRlbV9kYXRhICppdGVtOworCWNhcnJ5X2luc2VydF9kYXRhICpjZGF0YTsK
KwljYXJyeV9vcCAqb3A7CisJem5vZGUgKm5vZGU7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJ
YXNzZXJ0KCJ2cy00OTgyNyIsIHpub2RlX2NvbnRhaW5zX2tleV9sb2NrKGluc2VydF9jb29yZC0+
bm9kZSwga2V5KSk7CisJdHJlZSA9IHpub2RlX2dldF90cmVlKGluc2VydF9jb29yZC0+bm9kZSk7
CisJbm9kZSA9IHJlaXNlcjRfbmV3X25vZGUoaW5zZXJ0X2Nvb3JkLT5ub2RlLCBMRUFGX0xFVkVM
KTsKKwlpZiAoSVNfRVJSKG5vZGUpKQorCQlyZXR1cm4gUFRSX0VSUihub2RlKTsKKworCS8qIHNl
dHVwIGRlbGltaXRpbmcga2V5cyBmb3Igbm9kZSBiZWluZyBpbnNlcnRlZCAqLworCXdyaXRlX2xv
Y2tfZGsodHJlZSk7CisJem5vZGVfc2V0X2xkX2tleShub2RlLCBrZXkpOworCXpub2RlX3NldF9y
ZF9rZXkobm9kZSwgcmRrZXkpOworCU9OX0RFQlVHKG5vZGUtPmNyZWF0b3IgPSBjdXJyZW50KTsK
KwlPTl9ERUJVRyhub2RlLT5maXJzdF9rZXkgPSAqa2V5KTsKKwl3cml0ZV91bmxvY2tfZGsodHJl
ZSk7CisKKwlaRl9TRVQobm9kZSwgSk5PREVfT1JQSEFOKTsKKworCS8qCisJICogYWxsb2NhdGUg
Y2FycnlfcG9vbCwgMyBjYXJyeV9sZXZlbC1zLCByZWlzZXI0X2l0ZW1fZGF0YSBhbmQKKwkgKiBj
YXJyeV9pbnNlcnRfZGF0YQorCSAqLworCXBvb2wgPSBpbml0X2NhcnJ5X3Bvb2woc2l6ZW9mKCpw
b29sKSArIDMgKiBzaXplb2YoKnRvZG8pICsKKwkJCSAgICAgICBzaXplb2YoKml0ZW0pICsgc2l6
ZW9mKCpjZGF0YSkpOworCWlmIChJU19FUlIocG9vbCkpCisJCXJldHVybiBQVFJfRVJSKHBvb2wp
OworCXRvZG8gPSAoY2FycnlfbGV2ZWwgKikgKHBvb2wgKyAxKTsKKwlpbml0X2NhcnJ5X2xldmVs
KHRvZG8sIHBvb2wpOworCisJaXRlbSA9IChyZWlzZXI0X2l0ZW1fZGF0YSAqKSAodG9kbyArIDMp
OworCWNkYXRhID0gKGNhcnJ5X2luc2VydF9kYXRhICopIChpdGVtICsgMSk7CisKKwlvcCA9IHJl
aXNlcjRfcG9zdF9jYXJyeSh0b2RvLCBDT1BfSU5TRVJULCBpbnNlcnRfY29vcmQtPm5vZGUsIDAp
OworCWlmICghSVNfRVJSKG9wKSkgeworCQljZGF0YS0+Y29vcmQgPSBpbnNlcnRfY29vcmQ7CisJ
CWNkYXRhLT5rZXkgPSBrZXk7CisJCWNkYXRhLT5kYXRhID0gaXRlbTsKKwkJb3AtPnUuaW5zZXJ0
LmQgPSBjZGF0YTsKKwkJb3AtPnUuaW5zZXJ0LnR5cGUgPSBDT1BUX0lURU1fREFUQTsKKwkJYnVp
bGRfY2hpbGRfcHRyX2RhdGEobm9kZSwgaXRlbSk7CisJCWl0ZW0tPmFyZyA9IE5VTEw7CisJCS8q
IGhhdmUgQGluc2VydF9jb29yZCB0byBiZSBzZXQgYXQgaW5zZXJ0ZWQgaXRlbSBhZnRlcgorCQkg
ICBpbnNlcnRpb24gaXMgZG9uZSAqLworCQl0b2RvLT50cmFja190eXBlID0gQ0FSUllfVFJBQ0tf
Q0hBTkdFOworCQl0b2RvLT50cmFja2VkID0gbGg7CisKKwkJcmVzdWx0ID0gcmVpc2VyNF9jYXJy
eSh0b2RvLCBOVUxMKTsKKwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkvKgorCQkJICogcGluIG5v
ZGUgaW4gbWVtb3J5LiBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IKKwkJCSAqIHpub2RlX21ha2VfZGly
dHkoKSBiZWxvdy4KKwkJCSAqLworCQkJcmVzdWx0ID0gemxvYWQobm9kZSk7CisJCQlpZiAocmVz
dWx0ID09IDApIHsKKwkJCQlsb2NrX2hhbmRsZSBsb2NhbF9saDsKKworCQkJCS8qCisJCQkJICog
aWYgd2UgaW5zZXJ0ZWQgbmV3IGNoaWxkIGludG8gdHJlZSB3ZSBoYXZlCisJCQkJICogdG8gbWFy
ayBpdCBkaXJ0eSBzbyB0aGF0IGZsdXNoIHdpbGwgYmUgYWJsZQorCQkJCSAqIHRvIHByb2Nlc3Mg
aXQuCisJCQkJICovCisJCQkJaW5pdF9saCgmbG9jYWxfbGgpOworCQkJCXJlc3VsdCA9IGxvbmd0
ZXJtX2xvY2tfem5vZGUoJmxvY2FsX2xoLCBub2RlLAorCQkJCQkJCSAgICAgWk5PREVfV1JJVEVf
TE9DSywKKwkJCQkJCQkgICAgIFpOT0RFX0xPQ0tfTE9QUkkpOworCQkJCWlmIChyZXN1bHQgPT0g
MCkgeworCQkJCQl6bm9kZV9tYWtlX2RpcnR5KG5vZGUpOworCisJCQkJCS8qCisJCQkJCSAqIHdo
ZW4gaW50ZXJuYWwgaXRlbSBwb2ludGluZyB0byBAbm9kZQorCQkJCQkgKiB3YXMgaW5zZXJ0ZWQg
aW50byB0d2lnIG5vZGUKKwkJCQkJICogY3JlYXRlX2hvb2tfaW50ZXJuYWwgZGlkIG5vdCBjb25u
ZWN0CisJCQkJCSAqIGl0IHByb3Blcmx5IGJlY2F1c2UgaXRzIHJpZ2h0CisJCQkJCSAqIG5laWdo
Ym9yIHdhcyBub3Qga25vd24uIERvIGl0CisJCQkJCSAqIGhlcmUKKwkJCQkJICovCisJCQkJCXdy
aXRlX2xvY2tfdHJlZSh0cmVlKTsKKwkJCQkJYXNzZXJ0KCJuaWtpdGEtMzMxMiIsCisJCQkJCSAg
ICAgICB6bm9kZV9pc19yaWdodF9jb25uZWN0ZWQobm9kZSkpOworCQkJCQlhc3NlcnQoIm5pa2l0
YS0yOTg0IiwKKwkJCQkJICAgICAgIG5vZGUtPnJpZ2h0ID09IE5VTEwpOworCQkJCQlaRl9DTFIo
bm9kZSwgSk5PREVfUklHSFRfQ09OTkVDVEVEKTsKKwkJCQkJd3JpdGVfdW5sb2NrX3RyZWUodHJl
ZSk7CisJCQkJCXJlc3VsdCA9CisJCQkJCSAgICBjb25uZWN0X3pub2RlKGluc2VydF9jb29yZCwg
bm9kZSk7CisJCQkJCU9OX0RFQlVHKGlmIChyZXN1bHQgPT0gMCkgY2hlY2tfZGtleXMobm9kZSk7
KTsKKworCQkJCQlkb25lX2xoKGxoKTsKKwkJCQkJbW92ZV9saChsaCwgJmxvY2FsX2xoKTsKKwkJ
CQkJYXNzZXJ0KCJ2cy0xNjc2Iiwgbm9kZV9pc19lbXB0eShub2RlKSk7CisJCQkJCWNvb3JkX2lu
aXRfZmlyc3RfdW5pdChpbnNlcnRfY29vcmQsCisJCQkJCQkJICAgICAgbm9kZSk7CisJCQkJfSBl
bHNlIHsKKwkJCQkJd2FybmluZygibmlraXRhLTMxMzYiLAorCQkJCQkJIkNhbm5vdCBsb2NrIGNo
aWxkIik7CisJCQkJfQorCQkJCWRvbmVfbGgoJmxvY2FsX2xoKTsKKwkJCQl6cmVsc2Uobm9kZSk7
CisJCQl9CisJCX0KKwl9IGVsc2UKKwkJcmVzdWx0ID0gUFRSX0VSUihvcCk7CisJenB1dChub2Rl
KTsKKwlkb25lX2NhcnJ5X3Bvb2wocG9vbCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisg
KiBoYW5kbGVfZW90dGwgLSBoYW5kbGUgZXh0ZW50LW9uLXRoZS10d2lnLWxldmVsIGNhc2VzIGlu
IHRyZWUgdHJhdmVyc2FsCisgKiBAaDogc2VhcmNoIGhhbmRsZQorICogQG91dGNvbWU6IGZsYWcg
c2F5aW5nIHdoZXRoZXIgc2VhcmNoIGhhcyB0byByZXN0YXJ0IG9yIGlzIGRvbmUKKyAqCisgKiBI
YW5kbGVzIHNlYXJjaCBvbiB0d2lnIGxldmVsLiBJZiB0aGlzIGZ1bmN0aW9uIGNvbXBsZXRlcyBz
ZWFyY2ggaXRzZWxmIHRoZW4KKyAqIGl0IHJldHVybnMgMS4gSWYgc2VhcmNoIGhhcyB0byBnbyBv
bmUgbGV2ZWwgZG93biB0aGVuIDAgaXMgcmV0dXJuZWQuIElmCisgKiBlcnJvciBoYXBwZW5zIHRo
ZW4gTE9PS1VQX0RPTkUgaXMgcmV0dXJuZWQgdmlhIEBvdXRjb21lIGFuZCBlcnJvciBjb2RlIGlz
CisgKiBzYXZlZCBpbiBAaC0+cmVzdWx0LgorICovCitpbnQgaGFuZGxlX2VvdHRsKGNia19oYW5k
bGUgKmgsIGludCAqb3V0Y29tZSkKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfa2V5IGtleTsK
Kwljb29yZF90ICpjb29yZDsKKworCWNvb3JkID0gaC0+Y29vcmQ7CisKKwlpZiAoaC0+bGV2ZWwg
IT0gVFdJR19MRVZFTCB8fAorCSAgICAoY29vcmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkgJiYg
aXRlbV9pc19pbnRlcm5hbChjb29yZCkpKSB7CisJCS8qIENvbnRpbnVlIHRvIHRyYXZlcnNlIHRy
ZWUgZG93bndhcmQuICovCisJCXJldHVybiAwOworCX0KKworCS8qCisJICogbWFrZSBzdXJlIHRo
YXQgQGgtPmNvb3JkIGlzIHNldCB0byB0d2lnIG5vZGUgYW5kIHRoYXQgaXQgaXMgZWl0aGVyCisJ
ICogc2V0IHRvIGV4dGVudCBpdGVtIG9yIGFmdGVyIGV4dGVudCBpdGVtCisJICovCisJYXNzZXJ0
KCJ2cy0zNTYiLCBoLT5sZXZlbCA9PSBUV0lHX0xFVkVMKTsKKwlhc3NlcnQoInZzLTM1NyIsICh7
CisJCQkgIGNvb3JkX3QgbGNvb3JkOworCQkJICBjb29yZF9kdXAoJmxjb29yZCwgY29vcmQpOwor
CQkJICBjaGVja19tZSgidnMtNzMzIiwgY29vcmRfc2V0X3RvX2xlZnQoJmxjb29yZCkgPT0gMCk7
CisJCQkgIGl0ZW1faXNfZXh0ZW50KCZsY29vcmQpOworCQkJICB9CisJICAgICAgICkpOworCisJ
aWYgKCpvdXRjb21lID09IE5TX0ZPVU5EKSB7CisJCS8qIHdlIGhhdmUgZm91bmQgZGVzaXJlZCBr
ZXkgb24gdHdpZyBsZXZlbCBpbiBleHRlbnQgaXRlbSAqLworCQloLT5yZXN1bHQgPSBDQktfQ09P
UkRfRk9VTkQ7CisJCSpvdXRjb21lID0gTE9PS1VQX0RPTkU7CisJCXJldHVybiAxOworCX0KKwor
CWlmICghKGgtPmZsYWdzICYgQ0JLX0ZPUl9JTlNFUlQpKSB7CisJCS8qIHRyZWUgdHJhdmVyc2Fs
IGlzIG5vdCBmb3IgaW5zZXJ0aW9uLiBKdXN0IHJldHVybgorCQkgICBDQktfQ09PUkRfTk9URk9V
TkQuICovCisJCWgtPnJlc3VsdCA9IENCS19DT09SRF9OT1RGT1VORDsKKwkJKm91dGNvbWUgPSBM
T09LVVBfRE9ORTsKKwkJcmV0dXJuIDE7CisJfQorCisJLyogdGFrZSBhIGxvb2sgYXQgdGhlIGl0
ZW0gdG8gdGhlIHJpZ2h0IG9mIGggLT4gY29vcmQgKi8KKwlyZXN1bHQgPSBpc19uZXh0X2l0ZW1f
aW50ZXJuYWwoY29vcmQsIGgtPmtleSwgaC0+YWN0aXZlX2xoKTsKKwlpZiAodW5saWtlbHkocmVz
dWx0IDwgMCkpIHsKKwkJaC0+ZXJyb3IgPSAiZ2V0X3JpZ2h0X25laWdoYm9yIGZhaWxlZCI7CisJ
CWgtPnJlc3VsdCA9IHJlc3VsdDsKKwkJKm91dGNvbWUgPSBMT09LVVBfRE9ORTsKKwkJcmV0dXJu
IDE7CisJfQorCWlmIChyZXN1bHQgPT0gMCkgeworCQkvKgorCQkgKiBpdGVtIHRvIHRoZSByaWdo
dCBpcyBhbHNvIGFuIGV4dGVudCBvbmUuIEFsbG9jYXRlIGEgbmV3IG5vZGUKKwkJICogYW5kIGlu
c2VydCBwb2ludGVyIHRvIGl0IGFmdGVyIGl0ZW0gaCAtPiBjb29yZC4KKwkJICoKKwkJICogVGhp
cyBpcyBhIHJlc3VsdCBvZiBleHRlbnRzIGJlaW5nIGxvY2F0ZWQgYXQgdGhlIHR3aWcKKwkJICog
bGV2ZWwuIEZvciBleHBsYW5hdGlvbiwgc2VlIGNvbW1lbnQganVzdCBhYm92ZQorCQkgKiBpc19u
ZXh0X2l0ZW1faW50ZXJuYWwoKS4KKwkJICovCisJCXpub2RlICpsb2FkZWQ7CisKKwkJaWYgKGNi
a19sb2NrX21vZGUoaC0+bGV2ZWwsIGgpICE9IFpOT0RFX1dSSVRFX0xPQ0spIHsKKwkJCS8qCisJ
CQkgKiB3ZSBnb3Qgbm9kZSByZWFkIGxvY2tlZCwgcmVzdGFydCBjb29yZF9ieV9rZXkgdG8KKwkJ
CSAqIGhhdmUgd3JpdGUgbG9jayBvbiB0d2lnIGxldmVsCisJCQkgKi8KKwkJCWgtPmxvY2tfbGV2
ZWwgPSBUV0lHX0xFVkVMOworCQkJaC0+bG9ja19tb2RlID0gWk5PREVfV1JJVEVfTE9DSzsKKwkJ
CSpvdXRjb21lID0gTE9PS1VQX1JFU1Q7CisJCQlyZXR1cm4gMTsKKwkJfQorCisJCWxvYWRlZCA9
IGNvb3JkLT5ub2RlOworCQlyZXN1bHQgPQorCQkgICAgYWRkX2VtcHR5X2xlYWYoY29vcmQsIGgt
PmFjdGl2ZV9saCwgaC0+a2V5LAorCQkJCSAgIHJkX2tleShjb29yZCwgJmtleSkpOworCQlpZiAo
cmVzdWx0KSB7CisJCQloLT5lcnJvciA9ICJjb3VsZCBub3QgYWRkIGVtcHR5IGxlYWYiOworCQkJ
aC0+cmVzdWx0ID0gcmVzdWx0OworCQkJKm91dGNvbWUgPSBMT09LVVBfRE9ORTsKKwkJCXJldHVy
biAxOworCQl9CisJCS8qIGFkZGVkIGVtcHR5IGxlYWYgaXMgbG9ja2VkIChoLT5hY3RpdmVfbGgp
LCBpdHMgcGFyZW50IG5vZGUKKwkJICAgaXMgdW5sb2NrZWQsIGgtPmNvb3JkIGlzIHNldCBhcyBF
TVBUWSAqLworCQlhc3NlcnQoInZzLTEzIiwgY29vcmQtPmJldHdlZW4gPT0gRU1QVFlfTk9ERSk7
CisJCWFzc2VydCgidnMtMTQiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQoY29vcmQtPm5vZGUpKTsK
KwkJYXNzZXJ0KCJ2cy0xNSIsCisJCSAgICAgICBXSVRIX0RBVEEoY29vcmQtPm5vZGUsIG5vZGVf
aXNfZW1wdHkoY29vcmQtPm5vZGUpKSk7CisJCWFzc2VydCgidnMtMTYiLCBqbm9kZV9pc19sZWFm
KFpKTk9ERShjb29yZC0+bm9kZSkpKTsKKwkJYXNzZXJ0KCJ2cy0xNyIsIGNvb3JkLT5ub2RlID09
IGgtPmFjdGl2ZV9saC0+bm9kZSk7CisJCSpvdXRjb21lID0gTE9PS1VQX0RPTkU7CisJCWgtPnJl
c3VsdCA9IENCS19DT09SRF9OT1RGT1VORDsKKwkJcmV0dXJuIDE7CisJfSBlbHNlIGlmIChyZXN1
bHQgPT0gMSkgeworCQkvKgorCQkgKiB0aGlzIGlzIHNwZWNpYWwgY2FzZSBtZW50aW9uZWQgaW4g
dGhlIGNvbW1lbnQgb24KKwkJICogdHJlZS5oOmNia19mbGFncy4gV2UgaGF2ZSBmb3VuZCBpbnRl
cm5hbCBpdGVtIGltbWVkaWF0ZWx5IG9uCisJCSAqIHRoZSByaWdodCBvZiBleHRlbnQsIGFuZCB3
ZSBhcmUgZ29pbmcgdG8gaW5zZXJ0IG5ldyBpdGVtCisJCSAqIHRoZXJlLiBLZXkgb2YgaXRlbSB3
ZSBhcmUgZ29pbmcgdG8gaW5zZXJ0IGlzIHNtYWxsZXIgdGhhbgorCQkgKiBsZWZ0bW9zdCBrZXkg
aW4gdGhlIG5vZGUgcG9pbnRlZCB0byBieSBzYWlkIGludGVybmFsIGl0ZW0KKwkJICogKG90aGVy
d2lzZSBzZWFyY2ggd291bGRuJ3QgY29tZSB0byB0aGUgZXh0ZW50IGluIHRoZSBmaXJzdAorCQkg
KiBwbGFjZSkuCisJCSAqCisJCSAqIFRoaXMgaXMgYSByZXN1bHQgb2YgZXh0ZW50cyBiZWluZyBs
b2NhdGVkIGF0IHRoZSB0d2lnCisJCSAqIGxldmVsLiBGb3IgZXhwbGFuYXRpb24sIHNlZSBjb21t
ZW50IGp1c3QgYWJvdmUKKwkJICogaXNfbmV4dF9pdGVtX2ludGVybmFsKCkuCisJCSAqLworCQlo
LT5mbGFncyAmPSB+Q0JLX1RSVVNUX0RLOworCX0gZWxzZSB7CisJCWFzc2VydCgidnMtOCIsIHJl
c3VsdCA9PSAyKTsKKwkJKm91dGNvbWUgPSBMT09LVVBfUkVTVDsKKwkJcmV0dXJuIDE7CisJfQor
CWFzc2VydCgidnMtMzYyIiwgV0lUSF9EQVRBKGNvb3JkLT5ub2RlLCBpdGVtX2lzX2ludGVybmFs
KGNvb3JkKSkpOworCXJldHVybiAwOworfQorCisvKgorICogTG9jYWwgdmFyaWFibGVzOgorICog
Yy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTogIkxDIgorICogYy1iYXNp
Yy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1bW46IDEyMAorICogc2Ny
b2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2VzdGltYXRlLmMgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvZXN0aW1hdGUuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9lc3RpbWF0ZS5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9lc3RpbWF0ZS5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDQ5MjIyMTQ2ICswMTAwCkBA
IC0wLDAgKzEsMTI5IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJl
aXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0L1JFQURNRSAqLworCisjaW5j
bHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAidHJlZS5oIgor
I2luY2x1ZGUgImNhcnJ5LmgiCisjaW5jbHVkZSAiaW5vZGUuaCIKKyNpbmNsdWRlICJwbHVnaW4v
Y2x1c3Rlci5oIgorI2luY2x1ZGUgInBsdWdpbi9pdGVtL2N0YWlsLmgiCisKKy8qIFRoaXMgcmV0
dXJucyBob3cgbWFueSBub2RlcyBtaWdodCBnZXQgZGlydHkgYW5kIGFkZGVkIG5vZGVzIGlmIEBj
aGlsZHJlbgorICAgbm9kZXMgYXJlIGRpcnRpZWQKKworICAgQW1vdW50IG9mIGludGVybmFscyB3
aGljaCB3aWxsIGdldCBkaXJ0eSBvciBnZXQgYWxsb2NhdGVkIHdlIGVzdGltYXRlIGFzIDUlCisg
ICBvZiB0aGUgY2hpbGRzICsgMSBiYWxhbmNpbmcuIDEgYmFsYW5jaW5nIGlzIDIgbmVpZ2hib3Vy
cywgMiBuZXcgYmxvY2tzIGFuZAorICAgdGhlIGN1cnJlbnQgYmxvY2sgb24gdGhlIGxlYWYgbGV2
ZWwsIDIgbmVpZ2hib3VyIG5vZGVzICsgdGhlIGN1cnJlbnQgKG9yIDEKKyAgIG5laWdoYm91ciBh
bmQgMSBuZXcgYW5kIHRoZSBjdXJyZW50KSBvbiB0d2lnIGxldmVsLCAyIG5laWdoYm91ciBub2Rl
cyBvbgorICAgdXBwZXIgbGV2ZWxzIGFuZCAxIGZvciBhIG5ldyByb290LiBTbyA1IGZvciBsZWFm
IGxldmVsLCAzIGZvciB0d2lnIGxldmVsLAorICAgMiBvbiB1cHBlciArIDEgZm9yIHJvb3QuCisK
KyAgIERvIG5vdCBjYWxjdWxhdGUgdGhlIGN1cnJlbnQgbm9kZSBvZiB0aGUgbG93ZXN0IGxldmVs
IGhlcmUgLSB0aGlzIGlzIG92ZXJoZWFkCisgICBvbmx5LgorCisgICBjaGlsZHJlbiBpcyBhbG1v
c3QgYWx3YXlzIDEgaGVyZS4gRXhjZXB0aW9uIGlzIGZsb3cgaW5zZXJ0aW9uCisqLworc3RhdGlj
IHJlaXNlcjRfYmxvY2tfbnIKK21heF9iYWxhbmNlX292ZXJoZWFkKHJlaXNlcjRfYmxvY2tfbnIg
Y2hpbGRlbiwgdHJlZV9sZXZlbCB0cmVlX2hlaWdodCkKK3sKKwlyZWlzZXI0X2Jsb2NrX25yIHRl
bl9wZXJjZW50OworCisJdGVuX3BlcmNlbnQgPSAoKDEwMyAqIGNoaWxkZW4pID4+IDEwKTsKKwor
CS8qIElmIHdlIGhhdmUgdG9vIG1hbnkgYmFsYW5jaW5ncyBhdCB0aGUgdGltZSwgdHJlZSBoZWln
aHQgY2FuIHJhaXNlIG9uCisJICAgbW9yZSB0aGVuIDEuIEFzc3VtZSB0aGF0IGlmIHRyZWVfaGVp
Z2h0IGlzIDUsIGl0IGNhbiByYWlzZSBvbiAxIG9ubHkuCisJKi8KKwlyZXR1cm4gKCh0cmVlX2hl
aWdodCA8IDUgPyA1IDogdHJlZV9oZWlnaHQpICogMiArICg0ICsgdGVuX3BlcmNlbnQpKTsKK30K
KworLyogdGhpcyByZXR1cm5zIG1heGltYWwgcG9zc2libGUgbnVtYmVyIG9mIG5vZGVzIHdoaWNo
IGNhbiBiZSBtb2RpZmllZCBwbHVzCisgICBudW1iZXIgb2YgbmV3IG5vZGVzIHdoaWNoIGNhbiBi
ZSByZXF1aXJlZCB0byBwZXJmb3JtIGluc2VydGlvbiBvZiBvbmUgaXRlbQorICAgaW50byB0aGUg
dHJlZSAqLworLyogaXQgaXMgb25seSBjYWxsZWQgd2hlbiB0cmVlIGhlaWdodCBjaGFuZ2VzLCBv
ciBnZXRzIGluaXRpYWxpemVkICovCityZWlzZXI0X2Jsb2NrX25yIGNhbGNfZXN0aW1hdGVfb25l
X2luc2VydCh0cmVlX2xldmVsIGhlaWdodCkKK3sKKwlyZXR1cm4gMSArIG1heF9iYWxhbmNlX292
ZXJoZWFkKDEsIGhlaWdodCk7Cit9CisKK3JlaXNlcjRfYmxvY2tfbnIgZXN0aW1hdGVfb25lX2lu
c2VydF9pdGVtKHJlaXNlcjRfdHJlZSAqIHRyZWUpCit7CisJcmV0dXJuIHRyZWUtPmVzdGltYXRl
X29uZV9pbnNlcnQ7Cit9CisKKy8qIHRoaXMgcmV0dXJucyBtYXhpbWFsIHBvc3NpYmxlIG51bWJl
ciBvZiBub2RlcyB3aGljaCBjYW4gYmUgbW9kaWZpZWQgcGx1cworICAgbnVtYmVyIG9mIG5ldyBu
b2RlcyB3aGljaCBjYW4gYmUgcmVxdWlyZWQgdG8gcGVyZm9ybSBpbnNlcnRpb24gb2Ygb25lIHVu
aXQKKyAgIGludG8gYW4gaXRlbSBpbiB0aGUgdHJlZSAqLworcmVpc2VyNF9ibG9ja19uciBlc3Rp
bWF0ZV9vbmVfaW5zZXJ0X2ludG9faXRlbShyZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCS8qIGVz
dGltYXRlIGluc2VydCBpbnRvIGl0ZW0ganVzdCBsaWtlIGl0ZW0gaW5zZXJ0aW9uICovCisJcmV0
dXJuIHRyZWUtPmVzdGltYXRlX29uZV9pbnNlcnQ7Cit9CisKK3JlaXNlcjRfYmxvY2tfbnIgZXN0
aW1hdGVfb25lX2l0ZW1fcmVtb3ZhbChyZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCS8qIG9uIGl0
ZW0gcmVtb3ZhbCByZWlzZXI0IGRvZXMgbm90IHRyeSB0byBwYWNrIG5vZGVzIG1vcmUgY29tcGxh
Y3QsIHNvLAorCSAgIG9ubHkgb25lIG5vZGUgbWF5IGJlIGRpcnRpZWQgb24gbGVhZiBsZXZlbCAq
LworCXJldHVybiB0cmVlLT5lc3RpbWF0ZV9vbmVfaW5zZXJ0OworfQorCisvKiBvbiBsZWFmIGxl
dmVsIGluc2VydF9mbG93IG1heSBhZGQgQ0FSUllfRkxPV19ORVdfTk9ERVNfTElNSVQgbmV3IG5v
ZGVzIGFuZAorICAgZGlydHkgMyBleGlzdGluZyBub2RlcyAoaW5zZXJ0IHBvaW50IGFuZCBib3Ro
IGl0cyBuZWlnaGJvcnMpLgorICAgTWF4X2JhbGFuY2Vfb3ZlcmhlYWQgc2hvdWxkIGVzdGltYXRl
IG51bWJlciBvZiBibG9ja3Mgd2hpY2ggbWF5IGNoYW5nZS9nZXQKKyAgIGFkZGVkIG9uIGludGVy
bmFsIGxldmVscyAqLworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9pbnNlcnRfZmxvdyh0cmVl
X2xldmVsIGhlaWdodCkKK3sKKwlyZXR1cm4gMyArIENBUlJZX0ZMT1dfTkVXX05PREVTX0xJTUlU
ICsgbWF4X2JhbGFuY2Vfb3ZlcmhlYWQoMyArCisJCQkJCQkJCSAgICAgQ0FSUllfRkxPV19ORVdf
Tk9ERVNfTElNSVQsCisJCQkJCQkJCSAgICAgaGVpZ2h0KTsKK30KKworLyogcmV0dXJuZXMgbWF4
IG51bWJlciBvZiBub2RlcyBjYW4gYmUgb2NjdXBpZWQgYnkgZGlzayBjbHVzdGVyICovCitzdGF0
aWMgcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAqaW5vZGUs
IGludCB1bnByZXBwZWQpCit7CisJaW50IHBlcl9jbHVzdGVyOworCXBlcl9jbHVzdGVyID0gKHVu
cHJlcHBlZCA/IDEgOiBjbHVzdGVyX25ycGFnZXMoaW5vZGUpKTsKKwlyZXR1cm4gMyArIHBlcl9j
bHVzdGVyICsKKwkJbWF4X2JhbGFuY2Vfb3ZlcmhlYWQoMyArIHBlcl9jbHVzdGVyLAorCQkJCSAg
ICAgUkVJU0VSNF9NQVhfWlRSRUVfSEVJR0hUKTsKK30KKworLyogaG93IG1hbnkgbm9kZXMgbWln
aHQgZ2V0IGRpcnR5IGFuZCBhZGRlZAorICAgZHVyaW5nIGluc2VydGlvbiBvZiBhIGRpc2sgY2x1
c3RlciAqLworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9pbnNlcnRfY2x1c3RlcihzdHJ1Y3Qg
aW5vZGUgKmlub2RlKQoreworCXJldHVybiBlc3RpbWF0ZV9jbHVzdGVyKGlub2RlLCAxKTsgLyog
MjQgKi8KK30KKworLyogaG93IG1hbnkgbm9kZXMgbWlnaHQgZ2V0IGRpcnR5IGFuZCBhZGRlZAor
ICAgZHVyaW5nIHVwZGF0ZSBvZiBhIChwcmVwcGVkIG9yIHVucHJlcHBlZCkgZGlzayBjbHVzdGVy
ICovCityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX3VwZGF0ZV9jbHVzdGVyKHN0cnVjdCBpbm9k
ZSAqaW5vZGUpCit7CisJcmV0dXJuIGVzdGltYXRlX2NsdXN0ZXIoaW5vZGUsIDApOyAvKiA0NCwg
Zm9yIDY0Sy1jbHVzdGVyICovCit9CisKKy8qIEhvdyBtYW55IG5vZGVzIG9jY3VwaWVkIGJ5IGEg
ZGlzayBjbHVzdGVyIG1pZ2h0IGdldCBkaXJ0eS4KKyAgIE5vdGUgdGhhdCB0aGlzIGVzdGltYXRp
b24gaXMgbm90IHByZWNpc2UgKGkuZS4gZGlzayBjbHVzdGVyCisgICBjYW4gb2NjdXB5IG1vcmUg
bm9kZXMpLgorICAgUTogV2h5IHdlIGRvbid0IHVzZSBwcmVjaXNlIGVzdGltYXRpb24/CisgICBB
OiAxLkJlY2F1c2UgcHJlY2lzZSBlc3RpbWF0aW9uIGlzIGZhaXJseSBiYWQ6IDY1NTM2IG5vZGVz
CisJZm9yIDY0SyBsb2dpY2FsIGNsdXN0ZXIsIGl0IG1lYW5zIDI1Nk0gb2YgZGVhZCBzcGFjZSBv
bgorCWEgcGFydGl0aW9uCisgICAgICAyLkl0IGlzIGEgdmVyeSByYXJlIGNhc2Ugd2hlbiBkaXNr
IGNsdXN0ZXIgb2NjdXBpZXMgbW9yZQorCW5vZGVzIHRoZW4gdGhpcyBlc3RpbWF0aW9uIHJldHVy
bnMuCisqLworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9kaXJ0eV9jbHVzdGVyKHN0cnVjdCBp
bm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGNsdXN0ZXJfbnJwYWdlcyhpbm9kZSkgKyA0OworfQor
CisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRh
dGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6
IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6
IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5v
cmlnL2ZzL3JlaXNlcjQvZXhwb3J0X29wcy5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2V4cG9y
dF9vcHMuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9leHBvcnRfb3BzLmMJMTk3
MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L2V4cG9ydF9vcHMuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ0OTIyMjE0NiArMDEwMApAQCAt
MCwwICsxLDMyNSBAQAorLyogQ29weXJpZ2h0IDIwMDUgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2lu
ZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUgImlub2RlLmgi
CisjaW5jbHVkZSAicGx1Z2luL3BsdWdpbi5oIgorCisvKgorICogU3VwcG9ydGVkIGZpbGUtaGFu
ZGxlIHR5cGVzCisgKi8KK3R5cGVkZWYgZW51bSB7CisJRkhfV0lUSF9QQVJFTlQgPSAweDEwLAkv
KiBmaWxlIGhhbmRsZSB3aXRoIHBhcmVudCAqLworCUZIX1dJVEhPVVRfUEFSRU5UID0gMHgxMQkv
KiBmaWxlIGhhbmRsZSB3aXRob3V0IHBhcmVudCAqLworfSByZWlzZXI0X2ZodHlwZTsKKworI2Rl
ZmluZSBORlNFUlJPUiAoMjU1KQorCisvKiBpbml0aWFsaXplIHBsYWNlLWhvbGRlciBmb3Igb2Jq
ZWN0ICovCitzdGF0aWMgdm9pZCBvYmplY3Rfb25fd2lyZV9pbml0KHJlaXNlcjRfb2JqZWN0X29u
X3dpcmUgKm8pCit7CisJby0+cGx1Z2luID0gTlVMTDsKK30KKworLyogZmluaXNoIHdpdGggQG8g
Ki8KK3N0YXRpYyB2b2lkIG9iamVjdF9vbl93aXJlX2RvbmUocmVpc2VyNF9vYmplY3Rfb25fd2ly
ZSAqbykKK3sKKwlpZiAoby0+cGx1Z2luICE9IE5VTEwpCisJCW8tPnBsdWdpbi0+d2lyZS5kb25l
KG8pOworfQorCisvKgorICogcmVhZCBzZXJpYWxpemVkIG9iamVjdCBpZGVudGl0eSBmcm9tIEBh
ZGRyIGFuZCBzdG9yZSBpbmZvcm1hdGlvbiBhYm91dAorICogb2JqZWN0IGluIEBvYmouIFRoaXMg
aXMgZHVhbCB0byBlbmNvZGVfaW5vZGUoKS4KKyAqLworc3RhdGljIGNoYXIgKmRlY29kZV9pbm9k
ZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMsIGNoYXIgKmFkZHIsCisJCQkgIHJlaXNlcjRfb2JqZWN0
X29uX3dpcmUgKiBvYmopCit7CisJZmlsZV9wbHVnaW4gKmZwbHVnOworCisJLyogaWRlbnRpZmll
ciBvZiBvYmplY3QgcGx1Z2luIGlzIHN0b3JlZCBpbiB0aGUgZmlyc3QgdHdvIGJ5dGVzLAorCSAq
IGZvbGxvd2VkIGJ5Li4uICovCisJZnBsdWcgPSBmaWxlX3BsdWdpbl9ieV9kaXNrX2lkKHJlaXNl
cjRfZ2V0X3RyZWUocyksIChkMTYgKikgYWRkcik7CisJaWYgKGZwbHVnICE9IE5VTEwpIHsKKwkJ
YWRkciArPSBzaXplb2YoZDE2KTsKKwkJb2JqLT5wbHVnaW4gPSBmcGx1ZzsKKwkJYXNzZXJ0KCJu
aWtpdGEtMzUyMCIsIGZwbHVnLT53aXJlLnJlYWQgIT0gTlVMTCk7CisJCS8qIHBsdWdpbiBzcGVj
aWZpYyBlbmNvZGluZyBvZiBvYmplY3QgaWRlbnRpdHkuICovCisJCWFkZHIgPSBmcGx1Zy0+d2ly
ZS5yZWFkKGFkZHIsIG9iaik7CisJfSBlbHNlCisJCWFkZHIgPSBFUlJfUFRSKFJFVEVSUigtRUlO
VkFMKSk7CisJcmV0dXJuIGFkZHI7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgZGVudHJ5ICpyZWlzZXI0
X2dldF9kZW50cnkoc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciwKKwkJCQkJIHZvaWQgKmRhdGEp
OworLyoqCisgKiByZWlzZXI0X2RlY29kZV9maDogZGVjb2RlIG9uLXdpcmUgb2JqZWN0IC0gaGVs
cGVyIGZ1bmN0aW9uCisgKiBmb3IgZmhfdG9fZGVudHJ5LCBmaF90b19wYXJlbnQgZXhwb3J0IG9w
ZXJhdGlvbnM7CisgKiBAc3VwZXI6IHN1cGVyIGJsb2NrOworICogQGFkZHI6IG9ud2lyZSBvYmpl
Y3QgdG8gYmUgZGVjb2RlZDsKKyAqCisgKiBSZXR1cm5zIGRlbnRyeSByZWZlcnJpbmcgdG8gdGhl
IG9iamVjdCBiZWluZyBkZWNvZGVkLgorICovCitzdGF0aWMgc3RydWN0IGRlbnRyeSAqcmVpc2Vy
NF9kZWNvZGVfZmgoc3RydWN0IHN1cGVyX2Jsb2NrICogc3VwZXIsCisJCQkJCWNoYXIgKiBhZGRy
KQoreworCXJlaXNlcjRfb2JqZWN0X29uX3dpcmUgb2JqZWN0OworCisJb2JqZWN0X29uX3dpcmVf
aW5pdCgmb2JqZWN0KTsKKworCWFkZHIgPSBkZWNvZGVfaW5vZGUoc3VwZXIsIGFkZHIsICZvYmpl
Y3QpOworCWlmICghSVNfRVJSKGFkZHIpKSB7CisJCXN0cnVjdCBkZW50cnkgKmQ7CisJCWQgPSBy
ZWlzZXI0X2dldF9kZW50cnkoc3VwZXIsICZvYmplY3QpOworCQlpZiAoZCAhPSBOVUxMICYmICFJ
U19FUlIoZCkpCisJCQkvKiBGSVhNRSBjaGVjayBmb3IgLUVOT01FTSAqLworCQkJcmVpc2VyNF9n
ZXRfZGVudHJ5X2ZzZGF0YShkKS0+c3RhdGVsZXNzID0gMTsKKwkJYWRkciA9IChjaGFyICopZDsK
Kwl9CisJb2JqZWN0X29uX3dpcmVfZG9uZSgmb2JqZWN0KTsKKwlyZXR1cm4gKHZvaWQgKilhZGRy
OworfQorCitzdGF0aWMgc3RydWN0IGRlbnRyeSAqcmVpc2VyNF9maF90b19kZW50cnkoc3RydWN0
IHN1cGVyX2Jsb2NrICpzYiwKKwkJCQkJICAgc3RydWN0IGZpZCAqZmlkLAorCQkJCQkgICBpbnQg
ZmhfbGVuLCBpbnQgZmhfdHlwZSkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3Qg
ZGVudHJ5ICpkOworCisJYXNzZXJ0KCJlZHdhcmQtMTUzNiIsCisJICAgICAgIGZoX3R5cGUgPT0g
RkhfV0lUSF9QQVJFTlQgfHwgZmhfdHlwZSA9PSBGSF9XSVRIT1VUX1BBUkVOVCk7CisKKwljdHgg
PSByZWlzZXI0X2luaXRfY29udGV4dChzYik7CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4g
KHN0cnVjdCBkZW50cnkgKiljdHg7CisKKwlkID0gcmVpc2VyNF9kZWNvZGVfZmgoc2IsIChjaGFy
ICopZmlkLT5yYXcpOworCisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gZDsK
K30KKworc3RhdGljIHN0cnVjdCBkZW50cnkgKnJlaXNlcjRfZmhfdG9fcGFyZW50KHN0cnVjdCBz
dXBlcl9ibG9jayAqc2IsCisJCQkJCSAgIHN0cnVjdCBmaWQgKmZpZCwKKwkJCQkJICAgaW50IGZo
X2xlbiwgaW50IGZoX3R5cGUpCit7CisJY2hhciAqIGFkZHI7CisJc3RydWN0IGRlbnRyeSAqIGQ7
CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJZmlsZV9wbHVnaW4gKmZwbHVnOworCisJaWYgKGZo
X3R5cGUgPT0gRkhfV0lUSE9VVF9QQVJFTlQpCisJCXJldHVybiBOVUxMOworCWFzc2VydCgiZWR3
YXJkLTE1MzciLCBmaF90eXBlID09IEZIX1dJVEhfUEFSRU5UKTsKKworCWN0eCA9IHJlaXNlcjRf
aW5pdF9jb250ZXh0KHNiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVybiAoc3RydWN0IGRl
bnRyeSAqKWN0eDsKKwlhZGRyID0gKGNoYXIgKilmaWQtPnJhdzsKKwkvKiBleHRyYWN0IDItYnl0
ZXMgZmlsZSBwbHVnaW4gaWQgKi8KKwlmcGx1ZyA9IGZpbGVfcGx1Z2luX2J5X2Rpc2tfaWQocmVp
c2VyNF9nZXRfdHJlZShzYiksIChkMTYgKilhZGRyKTsKKwlpZiAoZnBsdWcgPT0gTlVMTCkgewor
CQlkID0gRVJSX1BUUihSRVRFUlIoLUVJTlZBTCkpOworCQlnb3RvIGV4aXQ7CisJfQorCWFkZHIg
Kz0gc2l6ZW9mKGQxNik7CisJLyogc2tpcCBwcmV2aW91c2x5IGVuY29kZWQgb2JqZWN0ICovCisJ
YWRkciA9IGZwbHVnLT53aXJlLnJlYWQoYWRkciwgTlVMTCAvKiBza2lwICovKTsKKwlpZiAoSVNf
RVJSKGFkZHIpKSB7CisJCWQgPSAoc3RydWN0IGRlbnRyeSAqKWFkZHI7CisJCWdvdG8gZXhpdDsK
Kwl9CisJLyogQGV4dHJhY3QgYW5kIGRlY29kZSBwYXJlbnQgb2JqZWN0ICovCisJZCA9IHJlaXNl
cjRfZGVjb2RlX2ZoKHNiLCBhZGRyKTsKKyBleGl0OgorCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0
eCk7CisJcmV0dXJuIGQ7Cit9CisKKy8qCisgKiBPYmplY3Qgc2VyaWFsaXphdGlvbiBzdXBwb3J0
LgorICoKKyAqIFRvIHN1cHBvcnQga25mc2QgZmlsZSBzeXN0ZW0gcHJvdmlkZXMgZXhwb3J0X29w
ZXJhdGlvbnMgdGhhdCBhcmUgdXNlZCB0bworICogY29uc3RydWN0IGFuZCBpbnRlcnByZXQgTkZT
IGZpbGUgaGFuZGxlcy4gQXMgYSBnZW5lcmFsaXphdGlvbiBvZiB0aGlzLAorICogcmVpc2VyNCBv
YmplY3QgcGx1Z2lucyBoYXZlIHNlcmlhbGl6YXRpb24gc3VwcG9ydDogaXQgcHJvdmlkZXMgbWV0
aG9kcyB0bworICogY3JlYXRlIG9uLXdpcmUgcmVwcmVzZW50YXRpb24gb2YgaWRlbnRpdHkgb2Yg
cmVpc2VyNCBvYmplY3QsIGFuZAorICogcmUtY3JlYXRlL2xvY2F0ZSBvYmplY3QgZ2l2ZW4gaXRz
IG9uLXdpcmUgaWRlbnRpdHkuCisgKgorICovCisKKy8qCisgKiByZXR1cm4gbnVtYmVyIG9mIGJ5
dGVzIHRoYXQgb24td2lyZSByZXByZXNlbnRhdGlvbiBvZiBAaW5vZGUncyBpZGVudGl0eQorICog
Y29uc3VtZXMuCisgKi8KK3N0YXRpYyBpbnQgZW5jb2RlX2lub2RlX3NpemUoc3RydWN0IGlub2Rl
ICppbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zNTE0IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMzUxNSIsIGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKSAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS0zNTE2IiwgaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpLT53aXJlLnNpemUg
IT0gTlVMTCk7CisKKwlyZXR1cm4gaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpLT53aXJlLnNpemUo
aW5vZGUpICsgc2l6ZW9mKGQxNik7Cit9CisKKy8qCisgKiBzdG9yZSBvbi13aXJlIHJlcHJlc2Vu
dGF0aW9uIG9mIEBpbm9kZSdzIGlkZW50aXR5IGF0IHRoZSBhcmVhIGJlZ2lubmluZyBhdAorICog
QHN0YXJ0LgorICovCitzdGF0aWMgY2hhciAqZW5jb2RlX2lub2RlKHN0cnVjdCBpbm9kZSAqaW5v
ZGUsIGNoYXIgKnN0YXJ0KQoreworCWFzc2VydCgibmlraXRhLTM1MTciLCBpbm9kZSAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS0zNTE4IiwgaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTM1MTkiLCBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSktPndp
cmUud3JpdGUgIT0gTlVMTCk7CisKKwkvKgorCSAqIGZpcnN0LCBzdG9yZSB0d28tYnl0ZSBpZGVu
dGlmaWVyIG9mIG9iamVjdCBwbHVnaW4sIHRoZW4KKwkgKi8KKwlzYXZlX3BsdWdpbl9pZChmaWxl
X3BsdWdpbl90b19wbHVnaW4oaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpKSwKKwkJICAgICAgIChk
MTYgKikgc3RhcnQpOworCXN0YXJ0ICs9IHNpemVvZihkMTYpOworCS8qCisJICogY2FsbCBwbHVn
aW4gdG8gc2VyaWFsaXplIG9iamVjdCdzIGlkZW50aXR5CisJICovCisJcmV0dXJuIGlub2RlX2Zp
bGVfcGx1Z2luKGlub2RlKS0+d2lyZS53cml0ZShpbm9kZSwgc3RhcnQpOworfQorCisvKiB0aGlz
IHJldHVybnMgbnVtYmVyIG9mIDMyIGJpdCBsb25nIG51bWJlcnMgZW5jb2RlZCBpbiBAbGVucC4g
MjU1IGlzCisgKiByZXR1cm5lZCBpZiBmaWxlIGhhbmRsZSBjYW4gbm90IGJlIHN0b3JlZCAqLwor
LyoqCisgKiByZWlzZXI0X2VuY29kZV9maCAtIGVuY29kZV9maCBvZiBleHBvcnQgb3BlcmF0aW9u
cworICogQGRlbnRyeToKKyAqIEBmaDoKKyAqIEBsZW5wOgorICogQG5lZWRfcGFyZW50OgorICoK
KyAqLworc3RhdGljIGludAorcmVpc2VyNF9lbmNvZGVfZmgoc3RydWN0IGlub2RlICppbm9kZSwg
X191MzIgKmZoLCBpbnQgKmxlbnAsCisJCSAgc3RydWN0IGlub2RlICpwYXJlbnQpCit7CisJY2hh
ciAqYWRkcjsKKwlpbnQgbmVlZDsKKwlpbnQgZGVsdGE7CisJaW50IHJlc3VsdDsKKwlib29sIG5l
ZWRfcGFyZW50OworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCisJLyoKKwkgKiBrbmZzZCBhc2tz
IGFzIHRvIHNlcmlhbGl6ZSBAaW5vZGUsIGFuZCwgb3B0aW9uYWxseSBpdHMKKwkgKiBwYXJlbnQg
QHBhcmVudCAoaWYgaXQgaXMgbm9uLU5VTEwpLgorCSAqCisJICogZW5jb2RlX2lub2RlKCkgYW5k
IGVuY29kZV9pbm9kZV9zaXplKCkgaXMgdXNlZCB0byBidWlsZAorCSAqIHJlcHJlc2VudGF0aW9u
IG9mIG9iamVjdCBhbmQgaXRzIHBhcmVudC4gQWxsIGhhcmQgd29yayBpcyBkb25lIGJ5CisJICog
b2JqZWN0IHBsdWdpbnMuCisJICovCisJbmVlZF9wYXJlbnQgPSAocGFyZW50ICE9IE5VTEwpOwor
CWFkZHIgPSAoY2hhciAqKWZoOworCisJbmVlZCA9IGVuY29kZV9pbm9kZV9zaXplKGlub2RlKTsK
KwlpZiAobmVlZCA8IDApCisJCXJldHVybiBORlNFUlJPUjsKKwlpZiAobmVlZF9wYXJlbnQpIHsK
KwkJZGVsdGEgPSBlbmNvZGVfaW5vZGVfc2l6ZShwYXJlbnQpOworCQlpZiAoZGVsdGEgPCAwKQor
CQkJcmV0dXJuIE5GU0VSUk9SOworCQluZWVkICs9IGRlbHRhOworCX0KKworCWN0eCA9IHJlaXNl
cjRfaW5pdF9jb250ZXh0KGlub2RlLT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVy
biBQVFJfRVJSKGN0eCk7CisKKwlpZiAobmVlZCA8PSBzaXplb2YoX191MzIpICogKCpsZW5wKSkg
eworCQlhZGRyID0gZW5jb2RlX2lub2RlKGlub2RlLCBhZGRyKTsKKwkJaWYgKG5lZWRfcGFyZW50
KQorCQkJYWRkciA9IGVuY29kZV9pbm9kZShwYXJlbnQsIGFkZHIpOworCisJCS8qIHN0b3JlIGlu
IGxlbnAgbnVtYmVyIG9mIDMyYml0IHdvcmRzIHJlcXVpcmVkIGZvciBmaWxlCisJCSAqIGhhbmRs
ZS4gKi8KKwkJKmxlbnAgPSAobmVlZCArIHNpemVvZihfX3UzMikgLSAxKSA+PiAyOworCQlyZXN1
bHQgPSBuZWVkX3BhcmVudCA/IEZIX1dJVEhfUEFSRU5UIDogRkhfV0lUSE9VVF9QQVJFTlQ7CisJ
fSBlbHNlCisJCS8qIG5vIGVub3VnaCBzcGFjZSBpbiBmaWxlIGhhbmRsZSAqLworCQlyZXN1bHQg
PSBORlNFUlJPUjsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qKgorICogcmVpc2VyNF9nZXRfZGVudHJ5X3BhcmVudCAtIGdldF9wYXJlbnQgb2Yg
ZXhwb3J0IG9wZXJhdGlvbnMKKyAqIEBjaGlsZDoKKyAqCisgKi8KK3N0YXRpYyBzdHJ1Y3QgZGVu
dHJ5ICpyZWlzZXI0X2dldF9kZW50cnlfcGFyZW50KHN0cnVjdCBkZW50cnkgKmNoaWxkKQorewor
CXN0cnVjdCBpbm9kZSAqZGlyOworCWRpcl9wbHVnaW4gKmRwbHVnOworCXN0cnVjdCBkZW50cnkg
KnJlc3VsdDsKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKworCWFzc2VydCgibmlraXRhLTM1Mjci
LCBjaGlsZCAhPSBOVUxMKTsKKworCWRpciA9IGNoaWxkLT5kX2lub2RlOworCWFzc2VydCgibmlr
aXRhLTM1MjkiLCBkaXIgIT0gTlVMTCk7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChk
aXItPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJuICh2b2lkICopY3R4OworCisJ
ZHBsdWcgPSBpbm9kZV9kaXJfcGx1Z2luKGRpcik7CisJYXNzZXJ0KCJuaWtpdGEtMzUzMSIsIGVy
Z28oZHBsdWcgIT0gTlVMTCwgZHBsdWctPmdldF9wYXJlbnQgIT0gTlVMTCkpOworCisJaWYgKHVu
bGlrZWx5KGRwbHVnID09IE5VTEwpKSB7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJ
CXJldHVybiBFUlJfUFRSKFJFVEVSUigtRU5PVERJUikpOworCX0KKwlyZXN1bHQgPSBkcGx1Zy0+
Z2V0X3BhcmVudChkaXIpOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJuIHJl
c3VsdDsKK30KKworLyoqCisgKiByZWlzZXI0X2dldF9kZW50cnkgLSBnZXRfZGVudHJ5IG9mIGV4
cG9ydCBvcGVyYXRpb25zCisgKiBAc3VwZXI6CisgKiBAZGF0YToKKyAqCisgKgorICovCitzdGF0
aWMgc3RydWN0IGRlbnRyeSAqcmVpc2VyNF9nZXRfZGVudHJ5KHN0cnVjdCBzdXBlcl9ibG9jayAq
c3VwZXIsIHZvaWQgKmRhdGEpCit7CisJcmVpc2VyNF9vYmplY3Rfb25fd2lyZSAqbzsKKworCWFz
c2VydCgibmlraXRhLTM1MjIiLCBzdXBlciAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNTIz
IiwgZGF0YSAhPSBOVUxMKTsKKwkvKgorCSAqIHRoaXMgaXMgb25seSBzdXBwb3NlZCB0byBiZSBj
YWxsZWQgYnkKKwkgKgorCSAqICAgICByZWlzZXI0X2RlY29kZV9maC0+ZmluZF9leHBvcnRlZF9k
ZW50cnkKKwkgKgorCSAqIHNvLCByZWlzZXI0X2NvbnRleHQgc2hvdWxkIGJlIGhlcmUgYWxyZWFk
eS4KKwkgKi8KKwlhc3NlcnQoIm5pa2l0YS0zNTI2IiwgaXNfaW5fcmVpc2VyNF9jb250ZXh0KCkp
OworCisJbyA9IChyZWlzZXI0X29iamVjdF9vbl93aXJlICopZGF0YTsKKwlhc3NlcnQoIm5pa2l0
YS0zNTI0Iiwgby0+cGx1Z2luICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTM1MjUiLCBvLT5w
bHVnaW4tPndpcmUuZ2V0ICE9IE5VTEwpOworCisJcmV0dXJuIG8tPnBsdWdpbi0+d2lyZS5nZXQo
c3VwZXIsIG8pOworfQorCitzdHJ1Y3QgZXhwb3J0X29wZXJhdGlvbnMgcmVpc2VyNF9leHBvcnRf
b3BlcmF0aW9ucyA9IHsKKwkuZW5jb2RlX2ZoID0gcmVpc2VyNF9lbmNvZGVfZmgsCisJLmZoX3Rv
X2RlbnRyeSA9IHJlaXNlcjRfZmhfdG9fZGVudHJ5LAorCS5maF90b19wYXJlbnQgPSByZWlzZXI0
X2ZoX3RvX3BhcmVudCwKKwkuZ2V0X3BhcmVudCA9IHJlaXNlcjRfZ2V0X2RlbnRyeV9wYXJlbnQs
Cit9OworCisvKgorICogTG9jYWwgdmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTog
IksmUiIKKyAqIG1vZGUtbmFtZTogIkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13
aWR0aDogOAorICogZmlsbC1jb2x1bW46IDc5CisgKiBFbmQ6CisgKi8KZGlmZiAtdXJOIC0tbm8t
ZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9mbHVzaC5jIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L2ZsdXNoLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
Zmx1c2guYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvZmx1c2guYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1MTIyMjE2MiArMDEw
MApAQCAtMCwwICsxLDM1MjIgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhh
bnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisK
Ky8qIFRoZSBkZXNpZ24gZG9jdW1lbnQgZm9yIHRoaXMgZmlsZSBpcyBhdCBodHRwOi8vd3d3Lm5h
bWVzeXMuY29tL3Y0L3Y0Lmh0bWwuICovCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisjaW5jbHVk
ZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAia2V5LmgiCisjaW5j
bHVkZSAiY29vcmQuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAi
cGx1Z2luL3BsdWdpbi5oIgorI2luY2x1ZGUgInBsdWdpbi9vYmplY3QuaCIKKyNpbmNsdWRlICJ0
eG5tZ3IuaCIKKyNpbmNsdWRlICJqbm9kZS5oIgorI2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVk
ZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0cmVlX3dhbGsuaCIKKyNpbmNsdWRlICJjYXJy
eS5oIgorI2luY2x1ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJ2ZnNfb3BzLmgiCisjaW5jbHVkZSAi
aW5vZGUuaCIKKyNpbmNsdWRlICJwYWdlX2NhY2hlLmgiCisjaW5jbHVkZSAid2FuZGVyLmgiCisj
aW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJlbnRkLmgiCisjaW5jbHVkZSAicmVpc2VyNC5o
IgorI2luY2x1ZGUgImZsdXNoLmgiCisjaW5jbHVkZSAid3JpdGVvdXQuaCIKKworI2luY2x1ZGUg
PGFzbS9hdG9taWMuaD4KKyNpbmNsdWRlIDxsaW51eC9mcy5oPgkJLyogZm9yIHN0cnVjdCBzdXBl
cl9ibG9jayAgKi8KKyNpbmNsdWRlIDxsaW51eC9tbS5oPgkJLyogZm9yIHN0cnVjdCBwYWdlICov
CisjaW5jbHVkZSA8bGludXgvYmlvLmg+CQkvKiBmb3Igc3RydWN0IGJpbyAqLworI2luY2x1ZGUg
PGxpbnV4L3BhZ2VtYXAuaD4KKyNpbmNsdWRlIDxsaW51eC9ibGtkZXYuaD4KKworLyogSU1QTEVN
RU5UQVRJT04gTk9URVMgKi8KKworLyogUEFSRU5ULUZJUlNUOiBTb21lIHRlcm1pbm9sb2d5OiBB
IHBhcmVudC1maXJzdCB0cmF2ZXJzYWwgaXMgYSB3YXkgb2YKKyAgIGFzc2lnbmluZyBhIHRvdGFs
IG9yZGVyIHRvIHRoZSBub2RlcyBvZiB0aGUgdHJlZSBpbiB3aGljaCB0aGUgcGFyZW50IGlzCisg
ICBwbGFjZWQgYmVmb3JlIGl0cyBjaGlsZHJlbiwgd2hpY2ggYXJlIG9yZGVyZWQgKHJlY3Vyc2l2
ZWx5KSBpbiBsZWZ0LXRvLXJpZ2h0CisgICBvcmRlci4gV2hlbiB3ZSBzcGVhayBvZiBhICJwYXJl
bnQtZmlyc3QgcHJlY2VkZXIiLCBpdCBkZXNjcmliZXMgdGhlIG5vZGUgdGhhdAorICAgImNhbWUg
YmVmb3JlIGluIGZvcndhcmQgcGFyZW50LWZpcnN0IG9yZGVyIi4gV2hlbiB3ZSBzcGVhayBvZiBh
ICJwYXJlbnQtZmlyc3QKKyAgIGZvbGxvd2VyIiwgaXQgZGVzY3JpYmVzIHRoZSBub2RlIHRoYXQg
ImNvbWVzIG5leHQgaW4gcGFyZW50LWZpcnN0IG9yZGVyIgorICAgKGFsdGVybmF0aXZlbHkgdGhl
IG5vZGUgdGhhdCAiY2FtZSBiZWZvcmUgaW4gcmV2ZXJzZSBwYXJlbnQtZmlyc3Qgb3JkZXIiKS4K
KworICAgVGhlIGZvbGxvd2luZyBwc2V1ZG8tY29kZSBwcmludHMgdGhlIG5vZGVzIG9mIGEgdHJl
ZSBpbiBmb3J3YXJkIHBhcmVudC1maXJzdAorICAgb3JkZXI6CisKKyAgIHZvaWQgcGFyZW50X2Zp
cnN0IChub2RlKQorICAgeworICAgICBwcmludF9ub2RlIChub2RlKTsKKyAgICAgaWYgKG5vZGUt
PmxldmVsID4gbGVhZikgeworICAgICAgIGZvciAoaSA9IDA7IGkgPCBudW1fY2hpbGRyZW47IGkg
Kz0gMSkgeworCSBwYXJlbnRfZmlyc3QgKG5vZGUtPmNoaWxkW2ldKTsKKyAgICAgICB9CisgICAg
IH0KKyAgIH0KKyovCisKKy8qIEpVU1QgV0hBVCBBUkUgV0UgVFJZSU5HIFRPIE9QVElNSVpFLCBI
RVJFPyAgVGhlIGlkZWEgaXMgdG8gb3B0aW1pemUgYmxvY2sKKyAgIGFsbG9jYXRpb24gc28gdGhh
dCBhIGxlZnQtdG8tcmlnaHQgc2NhbiBvZiB0aGUgdHJlZSdzIGRhdGEgKGkuZS4sIHRoZSBsZWF2
ZXMKKyAgIGluIGxlZnQtdG8tcmlnaHQgb3JkZXIpIGNhbiBiZSBhY2NvbXBsaXNoZWQgd2l0aCBz
ZXF1ZW50aWFsIHJlYWRzLCB3aGljaAorICAgcmVzdWx0cyBpbiByZWFkaW5nIG5vZGVzIGluIHRo
ZWlyIHBhcmVudC1maXJzdCBvcmRlci4gVGhpcyBpcyBhCisgICByZWFkLW9wdGltaXphdGlvbiBh
c3BlY3Qgb2YgdGhlIGZsdXNoIGFsZ29yaXRobSwgYW5kIHRoZXJlIGlzIGFsc28gYQorICAgd3Jp
dGUtb3B0aW1pemF0aW9uIGFzcGVjdCwgd2hpY2ggaXMgdGhhdCB3ZSB3aXNoIHRvIG1ha2UgbGFy
Z2Ugc2VxdWVudGlhbAorICAgd3JpdGVzIHRvIHRoZSBkaXNrIGJ5IGFsbG9jYXRpbmcgb3IgcmVh
bGxvY2F0aW5nIGJsb2NrcyBzbyB0aGF0IHRoZXkgY2FuIGJlCisgICB3cml0dGVuIGluIHNlcXVl
bmNlLiBTb21ldGltZXMgdGhlIHJlYWQtb3B0aW1pemF0aW9uIGFuZCB3cml0ZS1vcHRpbWl6YXRp
b24KKyAgIGdvYWxzIGNvbmZsaWN0IHdpdGggZWFjaCBvdGhlciwgYXMgd2UgZGlzY3VzcyBpbiBt
b3JlIGRldGFpbCBiZWxvdy4KKyovCisKKy8qIFNUQVRFIEJJVFM6IFRoZSBmbHVzaCBjb2RlIHJl
dm9sdmVzIGFyb3VuZCB0aGUgc3RhdGUgb2YgdGhlIGpub2RlcyBpdCBjb3ZlcnMuCisgICBIZXJl
IGFyZSB0aGUgcmVsZXZhbnQgam5vZGUtPnN0YXRlIGJpdHMgYW5kIHRoZWlyIHJlbGV2ZW5jZSB0
byBmbHVzaDoKKworICAgICBKTk9ERV9ESVJUWTogSWYgYSBub2RlIGlzIGRpcnR5LCBpdCBtdXN0
IGJlIGZsdXNoZWQuIEJ1dCBpbiBvcmRlciB0byBiZQorICAgICB3cml0dGVuIGl0IG11c3QgYmUg
YWxsb2NhdGVkIGZpcnN0LiBJbiBvcmRlciB0byBiZSBjb25zaWRlcmVkIGFsbG9jYXRlZCwKKyAg
ICAgdGhlIGpub2RlIG11c3QgaGF2ZSBleGFjdGx5IG9uZSBvZiB7IEpOT0RFX09WUldSLCBKTk9E
RV9SRUxPQyB9IHNldC4gVGhlc2UKKyAgICAgdHdvIGJpdHMgYXJlIGV4Y2x1c2l2ZSwgYW5kIGFs
bCBkaXJ0aWVkIGpub2RlcyBldmVudHVhbGx5IGhhdmUgb25lIG9mIHRoZXNlCisgICAgIGJpdHMg
c2V0IGR1cmluZyBlYWNoIHRyYW5zYWN0aW9uLgorCisgICAgIEpOT0RFX0NSRUFURUQ6IFRoZSBu
b2RlIHdhcyBmcmVzaGx5IGNyZWF0ZWQgaW4gaXRzIHRyYW5zYWN0aW9uIGFuZCBoYXMgbm8KKyAg
ICAgcHJldmlvdXMgYmxvY2sgYWRkcmVzcywgc28gaXQgaXMgdW5jb25kaXRpb25hbGx5IGFzc2ln
bmVkIHRvIGJlIHJlbG9jYXRlZCwKKyAgICAgYWx0aG91Z2ggdGhpcyBpcyBtYWlubHkgZm9yIGNv
ZGUtY29udmVuaWVuY2UuIEl0IGlzIG5vdCBiZWluZyAncmVsb2NhdGVkJworICAgICBmcm9tIGFu
eXRoaW5nLCBidXQgaW4gYWxtb3N0IGV2ZXJ5IHJlZ2FyZCBpdCBpcyB0cmVhdGVkIGFzIHBhcnQg
b2YgdGhlCisgICAgIHJlbG9jYXRlIHNldC4gVGhlIEpOT0RFX0NSRUFURUQgYml0IHJlbWFpbnMg
c2V0IGV2ZW4gYWZ0ZXIgSk5PREVfUkVMT0MgaXMKKyAgICAgc2V0LCBzbyB0aGUgYWN0dWFsIHJl
bG9jYXRlIGNhbiBiZSBkaXN0aW5ndWlzaGVkIGZyb20gdGhlCisgICAgIGNyZWF0ZWQtYW5kLWFs
bG9jYXRlZCBzZXQgZWFzaWx5OiByZWxvY2F0ZS1zZXQgbWVtYmVycyAoYmVsb25naW5nIHRvIHRo
ZQorICAgICBwcmVzZXJ2ZS1zZXQpIGhhdmUgKEpOT0RFX1JFTE9DKSBzZXQgYW5kIGNyZWF0ZWQt
c2V0IG1lbWJlcnMgd2hpY2ggaGF2ZSBubworICAgICBwcmV2aW91cyBsb2NhdGlvbiB0byBwcmVz
ZXJ2ZSBoYXZlIChKTk9ERV9SRUxPQyB8IEpOT0RFX0NSRUFURUQpIHNldC4KKworICAgICBKTk9E
RV9PVlJXUjogVGhlIG5vZGUgYmVsb25ncyB0byBhdG9tJ3Mgb3ZlcndyaXRlIHNldC4gVGhlIGZs
dXNoIGFsZ29yaXRobQorICAgICBtYWRlIHRoZSBkZWNpc2lvbiB0byBtYWludGFpbiB0aGUgcHJl
LWV4aXN0aW5nIGxvY2F0aW9uIGZvciB0aGlzIG5vZGUgYW5kCisgICAgIGl0IHdpbGwgYmUgd3Jp
dHRlbiB0byB0aGUgd2FuZGVyZWQtbG9nLgorCisgICAgIEpOT0RFX1JFTE9DOiBUaGUgZmx1c2gg
YWxnb3JpdGhtIG1hZGUgdGhlIGRlY2lzaW9uIHRvIHJlbG9jYXRlIHRoaXMgYmxvY2sKKyAgICAg
KGlmIGl0IHdhcyBub3QgY3JlYXRlZCwgc2VlIG5vdGUgYWJvdmUpLiBBIGJsb2NrIHdpdGggSk5P
REVfUkVMT0Mgc2V0IGlzCisgICAgIGVsaWdpYmxlIGZvciBlYXJseS1mbHVzaGluZyBhbmQgbWF5
IGJlIHN1Ym1pdHRlZCBkdXJpbmcgZmx1c2hfZW1wdHlfcXVldWVzLgorICAgICBXaGVuIHRoZSBK
Tk9ERV9SRUxPQyBiaXQgaXMgc2V0IG9uIGEgem5vZGUsIHRoZSBwYXJlbnQgbm9kZSdzIGludGVy
bmFsIGl0ZW0KKyAgICAgaXMgbW9kaWZpZWQgYW5kIHRoZSB6bm9kZSBpcyByZWhhc2hlZC4KKwor
ICAgICBKTk9ERV9TUVVFRVpBQkxFOiBCZWZvcmUgc2hpZnRpbmcgZXZlcnl0aGluZyBsZWZ0LCB0
aGUgZmx1c2ggYWxnb3JpdGhtCisgICAgIHNjYW5zIHRoZSBub2RlIGFuZCBjYWxscyBwbHVnaW4t
PmYuc3F1ZWV6ZSgpIG1ldGhvZCBmb3IgaXRzIGl0ZW1zLiBCeSB0aGlzCisgICAgIHRlY2hub2xv
Z3kgd2UgdXBkYXRlIGRpc2sgY2x1c3RlcnMgb2YgY3J5cHRjb21wcmVzcyBvYmplY3RzLiBBbHNv
IGlmCisgICAgIGxlZnRtb3N0IHBvaW50IHRoYXQgd2FzIGZvdW5kIGJ5IGZsdXNoIHNjYW4gaGFz
IHRoaXMgZmxhZyAocmFjZXMgd2l0aAorICAgICB3cml0ZSgpLCByYXJlIGNhc2UpIHRoZSBmbHVz
aCBhbGdvcnl0aG0gbWFrZXMgdGhlIGRlY2lzaW9uIHRvIHBhc3MgaXQgdG8KKyAgICAgc3F1YWxs
b2MoKSBpbiBzcGl0ZSBvZiBpdHMgZmx1c2hwcmVwcGVkIHN0YXR1cyBmb3Igc3F1ZWV6aW5nLCBu
b3QgZm9yCisgICAgIHJlcGVhdGVkIGFsbG9jYXRpb24uCisKKyAgICAgSk5PREVfRkxVU0hfUVVF
VUVEOiBUaGlzIGJpdCBpcyBzZXQgd2hlbiBhIGNhbGwgdG8gZmx1c2ggZW50ZXJzIHRoZSBqbm9k
ZQorICAgICBpbnRvIGl0cyBmbHVzaCBxdWV1ZS4gVGhpcyBtZWFucyB0aGUgam5vZGUgaXMgbm90
IG9uIGFueSBjbGVhbiBvciBkaXJ0eQorICAgICBsaXN0LCBpbnN0ZWFkIGl0IGlzIG1vdmVkIHRv
IG9uZSBvZiB0aGUgZmx1c2ggcXVldWUgKHNlZSBmbHVzaF9xdWV1ZS5oKQorICAgICBvYmplY3Qg
cHJpdmF0ZSBsaXN0LiBUaGlzIHByZXZlbnRzIG11bHRpcGxlIGNvbmN1cnJlbnQgZmx1c2hlcyBm
cm9tCisgICAgIGF0dGVtcHRpbmcgdG8gc3RhcnQgZmx1c2hpbmcgZnJvbSB0aGUgc2FtZSBub2Rl
LgorCisgICAgIChERUFEIFNUQVRFIEJJVCkgSk5PREVfRkxVU0hfQlVTWTogVGhpcyBiaXQgd2Fz
IHNldCBkdXJpbmcgdGhlIGJvdHRvbS11cAorICAgICBzcXVlZXplLWFuZC1hbGxvY2F0ZSBvbiBh
IG5vZGUgd2hpbGUgaXRzIGNoaWxkcmVuIGFyZSBhY3RpdmVseSBiZWluZworICAgICBzcXVlZXpl
ZCBhbmQgYWxsb2NhdGVkLiBUaGlzIGZsYWcgd2FzIGNyZWF0ZWQgdG8gYXZvaWQgc3VibWl0dGlu
ZyBhIHdyaXRlCisgICAgIHJlcXVlc3QgZm9yIGEgbm9kZSB3aGlsZSBpdHMgY2hpbGRyZW4gYXJl
IHN0aWxsIGJlaW5nIGFsbG9jYXRlZCBhbmQKKyAgICAgc3F1ZWV6ZWQuIFRoZW4gZmx1c2ggcXVl
dWUgd2FzIHJlLWltcGxlbWVudGVkIHRvIGFsbG93IHVubGltaXRlZCBudW1iZXIgb2YKKyAgICAg
bm9kZXMgYmUgcXVldWVkLiBUaGlzIGZsYWcgc3VwcG9ydCB3YXMgY29tbWVudGVkIG91dCBpbiBz
b3VyY2UgY29kZSBiZWNhdXNlCisgICAgIHdlIGRlY2lkZWQgdGhhdCB0aGVyZSB3YXMgbm8gcmVh
c29uIHRvIHN1Ym1pdCBxdWV1ZWQgbm9kZXMgYmVmb3JlCisgICAgIGpub2RlX2ZsdXNoKCkgZmlu
aXNoZXMuICBIb3dldmVyLCBjdXJyZW50IGNvZGUgY2FsbHMgZnFfd3JpdGUoKSBkdXJpbmcgYQor
ICAgICBzbHVtIHRyYXZlcnNhbCBhbmQgbWF5IHN1Ym1pdCAiYnVzeSBub2RlcyIgdG8gZGlzay4g
UHJvYmFibHkgd2UgY2FuCisgICAgIHJlLWVuYWJsZSB0aGUgSk5PREVfRkxVU0hfQlVTWSBiaXQg
c3VwcG9ydCBpbiBmdXR1cmUuCisKKyAgIFdpdGggdGhlc2Ugc3RhdGUgYml0cywgd2UgZGVzY3Jp
YmUgYSB0ZXN0IHVzZWQgZnJlcXVlbnRseSBpbiB0aGUgY29kZSBiZWxvdywKKyAgIGpub2RlX2lz
X2ZsdXNocHJlcHBlZCgpKGFuZCB0aGUgc3Bpbi1sb2NrLXRha2luZyBqbm9kZV9jaGVja19mbHVz
aHByZXBwZWQoKSkuCisgICBUaGUgdGVzdCBmb3IgImZsdXNocHJlcHBlZCIgcmV0dXJucyB0cnVl
IGlmIGFueSBvZiB0aGUgZm9sbG93aW5nIGFyZSB0cnVlOgorCisgICAgIC0gVGhlIG5vZGUgaXMg
bm90IGRpcnR5CisgICAgIC0gVGhlIG5vZGUgaGFzIEpOT0RFX1JFTE9DIHNldAorICAgICAtIFRo
ZSBub2RlIGhhcyBKTk9ERV9PVlJXUiBzZXQKKworICAgSWYgZWl0aGVyIHRoZSBub2RlIGlzIG5v
dCBkaXJ0eSBvciBpdCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZCBieSBmbHVzaAorICAgKGFu
ZCBhc3NpZ25lZCBKTk9ERV9PVlJXUiBvciBKTk9ERV9SRUxPQyksIHRoZW4gaXQgaXMgcHJlcHBl
ZC4gSWYKKyAgIGpub2RlX2lzX2ZsdXNocHJlcHBlZCgpIHJldHVybnMgdHJ1ZSB0aGVuIGZsdXNo
IGhhcyB3b3JrIHRvIGRvIG9uIHRoYXQgbm9kZS4KKyovCisKKy8qIEZMVVNIX1BSRVBfT05DRV9Q
RVJfVFJBTlNBQ1RJT046IFdpdGhpbiBhIHNpbmdsZSB0cmFuc2FjdGlvbiBhIG5vZGUgaXMgbmV2
ZXIKKyAgIGZsdXNocHJlcHBlZCB0d2ljZSAodW5sZXNzIGFuIGV4cGxpY2l0IGNhbGwgdG8gZmx1
c2hfdW5wcmVwIGlzIG1hZGUgYXMKKyAgIGRlc2NyaWJlZCBpbiBkZXRhaWwgYmVsb3cpLiBGb3Ig
ZXhhbXBsZSBhIG5vZGUgaXMgZGlydGllZCwgYWxsb2NhdGVkLCBhbmQKKyAgIHRoZW4gZWFybHkt
Zmx1c2hlZCB0byBkaXNrIGFuZCBzZXQgY2xlYW4uIEJlZm9yZSB0aGUgdHJhbnNhY3Rpb24gY29t
bWl0cywgdGhlCisgICBwYWdlIGlzIGRpcnRpZWQgYWdhaW4gYW5kLCBkdWUgdG8gbWVtb3J5IHBy
ZXNzdXJlLCB0aGUgbm9kZSBpcyBmbHVzaGVkIGFnYWluLgorICAgVGhlIGZsdXNoIGFsZ29yaXRo
bSB3aWxsIG5vdCByZWxvY2F0ZSB0aGUgbm9kZSB0byBhIG5ldyBkaXNrIGxvY2F0aW9uLCBpdAor
ICAgd2lsbCBzaW1wbHkgd3JpdGUgaXQgdG8gdGhlIHNhbWUsIHByZXZpb3VzbHkgcmVsb2NhdGVk
IHBvc2l0aW9uIGFnYWluLgorKi8KKworLyogVEhFIEJPVFRPTS1VUCBWUy4gVE9QLURPV04gSVNT
VUU6IFRoaXMgY29kZSBpbXBsZW1lbnRzIGEgYm90dG9tLXVwIGFsZ29yaXRobQorICAgd2hlcmUg
d2Ugc3RhcnQgYXQgYSBsZWFmIG5vZGUgYW5kIGFsbG9jYXRlIGluIHBhcmVudC1maXJzdCBvcmRl
ciBieSBpdGVyYXRpbmcKKyAgIHRvIHRoZSByaWdodC4gQXQgZWFjaCBzdGVwIG9mIHRoZSBpdGVy
YXRpb24sIHdlIGNoZWNrIGZvciB0aGUgcmlnaHQgbmVpZ2hib3IuCisgICBCZWZvcmUgYWR2YW5j
aW5nIHRvIHRoZSByaWdodCBuZWlnaGJvciwgd2UgY2hlY2sgaWYgdGhlIGN1cnJlbnQgcG9zaXRp
b24gYW5kCisgICB0aGUgcmlnaHQgbmVpZ2hib3Igc2hhcmUgdGhlIHNhbWUgcGFyZW50LiBJZiB0
aGV5IGRvIG5vdCBzaGFyZSB0aGUgc2FtZQorICAgcGFyZW50LCB0aGUgcGFyZW50IGlzIGFsbG9j
YXRlZCBiZWZvcmUgdGhlIHJpZ2h0IG5laWdoYm9yLgorCisgICBUaGlzIHByb2Nlc3MgZ29lcyBy
ZWN1cnNpdmVseSB1cCB0aGUgdHJlZSBhbmQgc3F1ZWV6ZSBub2RlcyBsZXZlbCBieSBsZXZlbCBh
cworICAgbG9uZyBhcyB0aGUgcmlnaHQgbmVpZ2hib3IgYW5kIHRoZSBjdXJyZW50IHBvc2l0aW9u
IGhhdmUgZGlmZmVyZW50IHBhcmVudHMsCisgICB0aGVuIGl0IGFsbG9jYXRlcyB0aGUgcmlnaHQt
bmVpZ2hib3JzLXdpdGgtZGlmZmVyZW50LXBhcmVudHMgb24gdGhlIHdheSBiYWNrCisgICBkb3du
LiBUaGlzIHByb2Nlc3MgaXMgZGVzY3JpYmVkIGluIG1vcmUgZGV0YWlsIGluCisgICBmbHVzaF9z
cXVhbGxvY19jaGFuZ2VkX2FuY2VzdG9yIGFuZCB0aGUgcmVjdXJzaXZlIGZ1bmN0aW9uCisgICBz
cXVhbGxvY19vbmVfY2hhbmdlZF9hbmNlc3Rvci4gQnV0IHRoZSBwdXJwb3NlIGhlcmUgaXMgbm90
IHRvIGRpc2N1c3MgdGhlCisgICBzcGVjaWZpY3Mgb2YgdGhlIGJvdHRvbS11cCBhcHByb2FjaCBh
cyBpdCBpcyB0byBjb250cmFzdCB0aGUgYm90dG9tLXVwIGFuZAorICAgdG9wLWRvd24gYXBwcm9h
Y2hlcy4KKworICAgVGhlIHRvcC1kb3duIGFsZ29yaXRobSB3YXMgaW1wbGVtZW50ZWQgZWFybGll
ciAoQXByaWwtTWF5IDIwMDIpLiBJbiB0aGUKKyAgIHRvcC1kb3duIGFwcHJvYWNoLCB3ZSBmaW5k
IGEgc3RhcnRpbmcgcG9pbnQgYnkgc2Nhbm5pbmcgbGVmdCBhbG9uZyBlYWNoIGxldmVsCisgICBw
YXN0IGRpcnR5IG5vZGVzLCB0aGVuIGdvaW5nIHVwIGFuZCByZXBlYXRpbmcgdGhlIHByb2Nlc3Mg
dW50aWwgdGhlIGxlZnQgbm9kZQorICAgYW5kIHRoZSBwYXJlbnQgbm9kZSBhcmUgY2xlYW4uIFdl
IHRoZW4gcGVyZm9ybSBhIHBhcmVudC1maXJzdCB0cmF2ZXJzYWwgZnJvbQorICAgdGhlIHN0YXJ0
aW5nIHBvaW50LCB3aGljaCBtYWtlcyBhbGxvY2F0aW5nIGluIHBhcmVudC1maXJzdCBvcmRlciB0
cml2aWFsLgorICAgQWZ0ZXIgb25lIHN1YnRyZWUgaGFzIGJlZW4gYWxsb2NhdGVkIGluIHRoaXMg
bWFubmVyLCB3ZSBtb3ZlIHRvIHRoZSByaWdodCwKKyAgIHRyeSBtb3ZpbmcgdXB3YXJkLCB0aGVu
IHJlcGVhdCB0aGUgcGFyZW50LWZpcnN0IHRyYXZlcnNhbC4KKworICAgQm90aCBhcHByb2FjaGVz
IGhhdmUgcHJvYmxlbXMgdGhhdCBuZWVkIHRvIGJlIGFkZHJlc3NlZC4gQm90aCBhcmUKKyAgIGFw
cHJveGltYXRlbHkgdGhlIHNhbWUgYW1vdW50IG9mIGNvZGUsIGJ1dCB0aGUgYm90dG9tLXVwIGFw
cHJvYWNoIGhhcworICAgYWR2YW50YWdlcyBpbiB0aGUgb3JkZXIgaXQgYWNxdWlyZXMgbG9ja3Mg
d2hpY2gsIGF0IHRoZSB2ZXJ5IGxlYXN0LCBtYWtlIGl0CisgICB0aGUgYmV0dGVyIGFwcHJvYWNo
LiBBdCBmaXJzdCBnbGFuY2UgZWFjaCBvbmUgbWFrZXMgdGhlIG90aGVyIG9uZSBsb29rCisgICBz
aW1wbGVyLCBzbyBpdCBpcyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgYSBmZXcgb2YgdGhlIHByb2Js
ZW1zIHdpdGggZWFjaCBvbmUuCisKKyAgIE1haW4gcHJvYmxlbSB3aXRoIHRoZSB0b3AtZG93biBh
cHByb2FjaDogV2hlbiB5b3UgZW5jb3VudGVyIGEgY2xlYW4gY2hpbGQKKyAgIGR1cmluZyB0aGUg
cGFyZW50LWZpcnN0IHRyYXZlcnNhbCwgd2hhdCBkbyB5b3UgZG8/IFlvdSB3b3VsZCBsaWtlIHRv
IGF2b2lkCisgICBzZWFyY2hpbmcgdGhyb3VnaCBhIGxhcmdlIHRyZWUgb2Ygbm9kZXMganVzdCB0
byBmaW5kIGEgZmV3IGRpcnR5IGxlYXZlcyBhdAorICAgdGhlIGJvdHRvbSwgYW5kIHRoZXJlIGlz
IG5vdCBhbiBvYnZpb3VzIHNvbHV0aW9uLiBPbmUgb2YgdGhlIGFkdmFudGFnZXMgb2YKKyAgIHRo
ZSB0b3AtZG93biBhcHByb2FjaCBpcyB0aGF0IGR1cmluZyB0aGUgcGFyZW50LWZpcnN0IHRyYXZl
cnNhbCB5b3UgY2hlY2sKKyAgIGV2ZXJ5IGNoaWxkIG9mIGEgcGFyZW50IHRvIHNlZSBpZiBpdCBp
cyBkaXJ0eS4gSW4gdGhpcyB3YXksIHRoZSB0b3AtZG93bgorICAgYXBwcm9hY2ggZWFzaWx5IGhh
bmRsZXMgdGhlIG1haW4gcHJvYmxlbSBvZiB0aGUgYm90dG9tLXVwIGFwcHJvYWNoOgorICAgdW5h
bGxvY2F0ZWQgY2hpbGRyZW4uCisKKyAgIFRoZSB1bmFsbG9jYXRlZCBjaGlsZHJlbiBwcm9ibGVt
IGlzIHRoYXQgYmVmb3JlIHdyaXRpbmcgYSBub2RlIHRvIGRpc2sgd2UKKyAgIG11c3QgbWFrZSBz
dXJlIHRoYXQgYWxsIG9mIGl0cyBjaGlsZHJlbiBhcmUgYWxsb2NhdGVkLiBPdGhlcndpc2UsIHRo
ZSB3cml0aW5nCisgICB0aGUgbm9kZSBtZWFucyBleHRyYSBJL08gYmVjYXVzZSB0aGUgbm9kZSB3
aWxsIGhhdmUgdG8gYmUgd3JpdHRlbiBhZ2FpbiB3aGVuCisgICB0aGUgY2hpbGQgaXMgZmluYWxs
eSBhbGxvY2F0ZWQuCisKKyAgIFdFIEhBVkUgTk9UIFlFVCBFTElNSU5BVEVEIFRIRSBVTkFMTE9D
QVRFRCBDSElMRFJFTiBQUk9CTEVNLiBFeGNlcHQgZm9yIGJ1Z3MsCisgICB0aGlzIHNob3VsZCBu
b3QgY2F1c2UgYW55IGZpbGUgc3lzdGVtIGNvcnJ1cHRpb24sIGl0IG9ubHkgZGVncmFkZXMgSS9P
CisgICBwZXJmb3JtYW5jZSBiZWNhdXNlIGEgbm9kZSBtYXkgYmUgd3JpdHRlbiB3aGVuIGl0IGlz
IHN1cmUgdG8gYmUgd3JpdHRlbiBhdAorICAgbGVhc3Qgb25lIG1vcmUgdGltZSBpbiB0aGUgc2Ft
ZSB0cmFuc2FjdGlvbiB3aGVuIHRoZSByZW1haW5pbmcgY2hpbGRyZW4gYXJlCisgICBhbGxvY2F0
ZWQuIFdoYXQgZm9sbG93cyBpcyBhIGRlc2NyaXB0aW9uIG9mIGhvdyB3ZSB3aWxsIHNvbHZlIHRo
ZSBwcm9ibGVtLgorKi8KKworLyogSEFORExJTkcgVU5BTExPQ0FURUQgQ0hJTERSRU46IER1cmlu
ZyBmbHVzaCB3ZSBtYXkgYWxsb2NhdGUgYSBwYXJlbnQgbm9kZSwKKyAgIHRoZW4gcHJvY2VlZGlu
ZyBpbiBwYXJlbnQgZmlyc3Qgb3JkZXIsIGFsbG9jYXRlIHNvbWUgb2YgaXRzIGxlZnQtY2hpbGRy
ZW4sCisgICB0aGVuIGVuY291bnRlciBhIGNsZWFuIGNoaWxkIGluIHRoZSBtaWRkbGUgb2YgdGhl
IHBhcmVudC4gV2UgZG8gbm90IGFsbG9jYXRlCisgICB0aGUgY2xlYW4gY2hpbGQsIGJ1dCB0aGVy
ZSBtYXkgcmVtYWluIHVuYWxsb2NhdGVkIChkaXJ0eSkgY2hpbGRyZW4gdG8gdGhlCisgICByaWdo
dCBvZiB0aGUgY2xlYW4gY2hpbGQuIElmIHdlIHdlcmUgdG8gc3RvcCBmbHVzaGluZyBhdCB0aGlz
IG1vbWVudCBhbmQKKyAgIHdyaXRlIGV2ZXJ5dGhpbmcgdG8gZGlzaywgdGhlIHBhcmVudCBtaWdo
dCBzdGlsbCBjb250YWluIHVuYWxsb2NhdGVkCisgICBjaGlsZHJlbi4KKworICAgV2UgY291bGQg
dHJ5IHRvIGFsbG9jYXRlIGFsbCB0aGUgZGVzY2VuZGVudHMgb2YgZXZlcnkgbm9kZSB0aGF0IHdl
IGFsbG9jYXRlLAorICAgYnV0IHRoaXMgaXMgbm90IG5lY2Vzc2FyeS4gRG9pbmcgc28gY291bGQg
cmVzdWx0IGluIGFsbG9jYXRpbmcgdGhlIGVudGlyZQorICAgdHJlZTogaWYgdGhlIHJvb3Qgbm9k
ZSBpcyBhbGxvY2F0ZWQgdGhlbiBldmVyeSB1bmFsbG9jYXRlZCBub2RlIHdvdWxkIGhhdmUgdG8K
KyAgIGJlIGFsbG9jYXRlZCBiZWZvcmUgZmx1c2hpbmcuIEFjdHVhbGx5LCB3ZSBkbyBub3QgaGF2
ZSB0byB3cml0ZSBhIG5vZGUganVzdAorICAgYmVjYXVzZSB3ZSBhbGxvY2F0ZSBpdC4gSXQgaXMg
cG9zc2libGUgdG8gYWxsb2NhdGUgYnV0IG5vdCB3cml0ZSBhIG5vZGUKKyAgIGR1cmluZyBmbHVz
aCwgd2hlbiBpdCBzdGlsbCBoYXMgdW5hbGxvY2F0ZWQgY2hpbGRyZW4uIEhvd2V2ZXIsIHRoaXMg
YXBwcm9hY2gKKyAgIGlzIHByb2JhYmx5IG5vdCBvcHRpbWFsIGZvciB0aGUgZm9sbG93aW5nIHJl
YXNvbi4KKworICAgVGhlIGZsdXNoIGFsZ29yaXRobSBpcyBkZXNpZ25lZCB0byBhbGxvY2F0ZSBu
b2RlcyBpbiBwYXJlbnQtZmlyc3Qgb3JkZXIgaW4gYW4KKyAgIGF0dGVtcHQgdG8gb3B0aW1pemUg
cmVhZHMgdGhhdCBvY2N1ciBpbiB0aGUgc2FtZSBvcmRlci4gVGh1cyB3ZSBhcmUKKyAgIHJlYWQt
b3B0aW1pemluZyBmb3IgYSBsZWZ0LXRvLXJpZ2h0IHNjYW4gdGhyb3VnaCBhbGwgdGhlIGxlYXZl
cyBpbiB0aGUKKyAgIHN5c3RlbSwgYW5kIHdlIGFyZSBob3BpbmcgdG8gd3JpdGUtb3B0aW1pemUg
YXQgdGhlIHNhbWUgdGltZSBiZWNhdXNlIHRob3NlCisgICBub2RlcyB3aWxsIGJlIHdyaXR0ZW4g
dG9nZXRoZXIgaW4gYmF0Y2guIFdoYXQgaGFwcGVucywgaG93ZXZlciwgaWYgd2UgYXNzaWduCisg
ICBhIGJsb2NrIG51bWJlciB0byBhIG5vZGUgaW4gaXRzIHJlYWQtb3B0aW1pemVkIG9yZGVyIGJ1
dCB0aGVuIGF2b2lkIHdyaXRpbmcKKyAgIGl0IGJlY2F1c2UgaXQgaGFzIHVuYWxsb2NhdGVkIGNo
aWxkcmVuPyBJbiB0aGF0IHNpdHVhdGlvbiwgd2UgbG9zZSBvdXQgb24gdGhlCisgICB3cml0ZS1v
cHRpbWl6YXRpb24gYXNwZWN0IGJlY2F1c2UgYSBub2RlIHdpbGwgaGF2ZSB0byBiZSB3cml0dGVu
IGFnYWluIHRvIHRoZQorICAgaXRzIGxvY2F0aW9uIG9uIHRoZSBkZXZpY2UsIGxhdGVyLCB3aGlj
aCBsaWtlbHkgbWVhbnMgc2Vla2luZyBiYWNrIHRvIHRoYXQKKyAgIGxvY2F0aW9uLgorCisgICBT
byB0aGVyZSBhcmUgdHJhZGVvZmZzLiBXZSBjYW4gY2hvb3NlIGVpdGhlcjoKKworICAgQS4gQWxs
b2NhdGUgYWxsIHVuYWxsb2NhdGVkIGNoaWxkcmVuIHRvIHByZXNlcnZlIGJvdGggd3JpdGUtb3B0
aW1pemF0aW9uIGFuZAorICAgcmVhZC1vcHRpbWl6YXRpb24sIGJ1dCB0aGlzIGlzIG5vdCBhbHdh
eXMgZGVzaXJhYmxlIGJlY2F1c2UgaXQgbWF5IG1lYW4KKyAgIGhhdmluZyB0byBhbGxvY2F0ZSBh
bmQgZmx1c2ggdmVyeSBtYW55IG5vZGVzIGF0IG9uY2UuCisKKyAgIEIuIERlZmVyIHdyaXRpbmcg
bm9kZXMgd2l0aCB1bmFsbG9jYXRlZCBjaGlsZHJlbiwga2VlcCB0aGVpciByZWFkLW9wdGltaXpl
ZAorICAgbG9jYXRpb25zLCBidXQgc2FjcmlmaWNlIHdyaXRlLW9wdGltaXphdGlvbiBiZWNhdXNl
IHRob3NlIG5vZGVzIHdpbGwgYmUKKyAgIHdyaXR0ZW4gYWdhaW4uCisKKyAgIEMuIERlZmVyIHdy
aXRpbmcgbm9kZXMgd2l0aCB1bmFsbG9jYXRlZCBjaGlsZHJlbiwgYnV0IGRvIG5vdCBrZWVwIHRo
ZWlyCisgICByZWFkLW9wdGltaXplZCBsb2NhdGlvbnMuIEluc3RlYWQsIGNob29zZSB0byB3cml0
ZS1vcHRpbWl6ZSB0aGVtIGxhdGVyLCB3aGVuCisgICB0aGV5IGFyZSB3cml0dGVuLiBUbyBmYWNp
bGl0YXRlIHRoaXMsIHdlICJ1bmRvIiB0aGUgcmVhZC1vcHRpbWl6ZWQgYWxsb2NhdGlvbgorICAg
dGhhdCB3YXMgZ2l2ZW4gdG8gdGhlIG5vZGUgc28gdGhhdCBsYXRlciBpdCBjYW4gYmUgd3JpdGUt
b3B0aW1pemVkLCB0aHVzCisgICAidW5wcmVwYXJpbmciIHRoZSBmbHVzaCBkZWNpc2lvbi4gVGhp
cyBpcyBhIGNhc2Ugd2hlcmUgd2UgZGlzdHVyYiB0aGUKKyAgIEZMVVNIX1BSRVBfT05DRV9QRVJf
VFJBTlNBQ1RJT04gcnVsZSBkZXNjcmliZWQgYWJvdmUuIEJ5IGEgY2FsbCB0bworICAgZmx1c2hf
dW5wcmVwKCkgd2Ugd2lsbDogaWYgdGhlIG5vZGUgd2FzIHdhbmRlcmVkLCB1bnNldCB0aGUgSk5P
REVfT1ZSV1IgYml0OworICAgaWYgdGhlIG5vZGUgd2FzIHJlbG9jYXRlZCwgdW5zZXQgdGhlIEpO
T0RFX1JFTE9DIGJpdCwgbm9uLWRlZmVycmVkLWRlYWxsb2NhdGUKKyAgIGl0cyBibG9jayBsb2Nh
dGlvbiwgYW5kIHNldCB0aGUgSk5PREVfQ1JFQVRFRCBiaXQsIGVmZmVjdGl2ZWx5IHNldHRpbmcg
dGhlCisgICBub2RlIGJhY2sgdG8gYW4gdW5hbGxvY2F0ZWQgc3RhdGUuCisKKyAgIFdlIHdpbGwg
dGFrZSB0aGUgZm9sbG93aW5nIGFwcHJvYWNoIGluIHY0LjA6IGZvciB0d2lnIG5vZGVzIHdlIHdp
bGwgYWx3YXlzCisgICBmaW5pc2ggYWxsb2NhdGluZyB1bmFsbG9jYXRlZCBjaGlsZHJlbiAoQSku
ICBGb3Igbm9kZXMgd2l0aCAobGV2ZWwgPiBUV0lHKQorICAgd2Ugd2lsbCBkZWZlciB3cml0aW5n
IGFuZCBjaG9vc2Ugd3JpdGUtb3B0aW1pemF0aW9uIChDKS4KKworICAgVG8gc3VtbWFyaXplLCB0
aGVyZSBhcmUgc2V2ZXJhbCBwYXJ0cyB0byBhIHNvbHV0aW9uIHRoYXQgYXZvaWRzIHRoZSBwcm9i
bGVtCisgICB3aXRoIHVuYWxsb2NhdGVkIGNoaWxkcmVuOgorCisgICBGSVhNRS1aQU06IFN0aWxs
IG5vIG9uZSBhcHByb2FjaCBpcyBpbXBsZW1lbnRlZCB0byBlbGltaW5hdGUgdGhlCisgICAiVU5B
TExPQ0FURUQgQ0hJTERSRU4iIHByb2JsZW0gYmVjYXVzZSB0aGVyZSB3YXMgYW4gZXhwZXJpbWVu
dCB3aGljaCB3YXMgZG9uZQorICAgc2hvd2VkIHRoYXQgd2UgaGF2ZSAxLTIgbm9kZXMgd2l0aCB1
bmFsbG9jYXRlZCBjaGlsZHJlbiBmb3IgdGhvdXNhbmRzIG9mCisgICB3cml0dGVuIG5vZGVzLiBU
aGUgZXhwZXJpbWVudCB3YXMgc2ltcGxlIGxpa2UgY29waW5nL2RlbGV0aW9uIG9mIGxpbnV4IGtl
cm5lbAorICAgc291cmNlcy4gSG93ZXZlciB0aGUgcHJvYmxlbSBjYW4gYXJpc2UgaW4gbW9yZSBj
b21wbGV4IHRlc3RzLiBJIHRoaW5rIHdlIGhhdmUKKyAgIGpub2RlX2lvX2hvb2sgdG8gaW5zZXJ0
IGEgY2hlY2sgZm9yIHVuYWxsb2NhdGVkIGNoaWxkcmVuIGFuZCBzZWUgd2hhdCBraW5kIG9mCisg
ICBwcm9ibGVtIHdlIGhhdmUuCisKKyAgIDEuIFdoZW4gZmx1c2ggcmVhY2hlcyBhIHN0b3BwaW5n
IHBvaW50IChlLmcuIGEgY2xlYW4gbm9kZSkgaXQgc2hvdWxkIGNvbnRpbnVlCisgICBjYWxsaW5n
IHNxdWVlemUtYW5kLWFsbG9jYXRlIG9uIGFueSByZW1haW5pbmcgdW5hbGxvY2F0ZWQgY2hpbGRy
ZW4uCisgICBGSVhNRTogRGlmZmljdWx0eSB0byBpbXBsZW1lbnQ6IHNob3VsZCBiZSBzaW1wbGUg
LS0gYW1vdW50cyB0byBhZGRpbmcgYSB3aGlsZQorICAgbG9vcCB0byBqbm9kZV9mbHVzaCwgc2Vl
IGNvbW1lbnRzIGluIHRoYXQgZnVuY3Rpb24uCisKKyAgIDIuIFdoZW4gZmx1c2ggcmVhY2hlcyBm
bHVzaF9lbXB0eV9xdWV1ZSgpLCBzb21lIG9mIHRoZSAobGV2ZWwgPiBUV0lHKSBub2RlcworICAg
bWF5IHN0aWxsIGhhdmUgdW5hbGxvY2F0ZWQgY2hpbGRyZW4uIElmIHRoZSB0d2lnIGxldmVsIGhh
cyB1bmFsbG9jYXRlZAorICAgY2hpbGRyZW4gaXQgaXMgYW4gYXNzZXJ0aW9uIGZhaWx1cmUuIElm
IGEgaGlnaGVyLWxldmVsIG5vZGUgaGFzIHVuYWxsb2NhdGVkCisgICBjaGlsZHJlbiwgdGhlbiBp
dCBzaG91bGQgYmUgZXhwbGljaXRseSBkZS1hbGxvY2F0ZWQgYnkgYSBjYWxsIHRvCisgICBmbHVz
aF91bnByZXAoKS4KKyAgIEZJWE1FOiBEaWZmaWN1bHR5IHRvIGltcGxlbWVudDogc2hvdWxkIGJl
IHNpbXBsZS4KKworICAgMy4gKENQVS1PcHRpbWl6YXRpb24pIENoZWNraW5nIHdoZXRoZXIgYSBu
b2RlIGhhcyB1bmFsbG9jYXRlZCBjaGlsZHJlbiBtYXkKKyAgIGNvbnN1bWUgbW9yZSBDUFUgY3lj
bGVzIHRoYW4gd2Ugd291bGQgbGlrZSwgYW5kIGl0IGlzIHBvc3NpYmxlIChidXQgbWVkaXVtCisg
ICBjb21wbGV4aXR5KSB0byBvcHRpbWl6ZSB0aGlzIHNvbWV3aGF0IGluIHRoZSBjYXNlIHdoZXJl
IGxhcmdlIHN1Yi10cmVlcyBhcmUKKyAgIGZsdXNoZWQuIFRoZSBmb2xsb3dpbmcgb2JzZXJ2YXRp
b24gaGVscHM6IGlmIGJvdGggdGhlIGxlZnQtIGFuZAorICAgcmlnaHQtbmVpZ2hib3Igb2YgYSBu
b2RlIGFyZSBwcm9jZXNzZWQgYnkgdGhlIGZsdXNoIGFsZ29yaXRobSB0aGVuIHRoZSBub2RlCisg
ICBpdHNlbGYgaXMgZ3VhcmFudGVlZCB0byBoYXZlIGFsbCBvZiBpdHMgY2hpbGRyZW4gYWxsb2Nh
dGVkLiBIb3dldmVyLCB0aGUgY29zdAorICAgb2YgdGhpcyBjaGVjayBtYXkgbm90IGJlIHNvIGV4
cGVuc2l2ZSBhZnRlciBhbGw6IGl0IGlzIG5vdCBuZWVkZWQgZm9yIGxlYXZlcworICAgYW5kIGZs
dXNoIGNhbiBndWFyYW50ZWUgdGhpcyBwcm9wZXJ0eSBmb3IgdHdpZ3MuIFRoYXQgbGVhdmVzIG9u
bHkgKGxldmVsID4KKyAgIFRXSUcpIG5vZGVzIHRoYXQgaGF2ZSB0byBiZSBjaGVja2VkLCBzbyB0
aGlzIG9wdGltaXphdGlvbiBvbmx5IGhlbHBzIGlmIGF0CisgICBsZWFzdCB0aHJlZSAobGV2ZWwg
PiBUV0lHKSBub2RlcyBhcmUgZmx1c2hlZCBpbiBvbmUgcGFzcywgYW5kIHRoZSBzYXZpbmdzCisg
ICB3aWxsIGJlIHZlcnkgc21hbGwgdW5sZXNzIHRoZXJlIGFyZSBtYW55IG1vcmUgKGxldmVsID4g
VFdJRykgbm9kZXMuIEJ1dCBpZgorICAgdGhlcmUgYXJlIG1hbnkgKGxldmVsID4gVFdJRykgbm9k
ZXMgdGhlbiB0aGUgbnVtYmVyIG9mIGJsb2NrcyBiZWluZyB3cml0dGVuCisgICB3aWxsIGJlIHZl
cnkgbGFyZ2UsIHNvIHRoZSBzYXZpbmdzIG1heSBiZSBpbnNpZ25pZmljYW50LiBUaGF0IHNhaWQs
IHRoZSBpZGVhCisgICBpcyB0byBtYWludGFpbiBib3RoIHRoZSBsZWZ0IGFuZCByaWdodCBlZGdl
cyBvZiBub2RlcyB0aGF0IGFyZSBwcm9jZXNzZWQgaW4KKyAgIGZsdXNoLiAgV2hlbiBmbHVzaF9l
bXB0eV9xdWV1ZSgpIGlzIGNhbGxlZCwgYSByZWxhdGl2ZWx5IHNpbXBsZSB0ZXN0IHdpbGwKKyAg
IHRlbGwgd2hldGhlciB0aGUgKGxldmVsID4gVFdJRykgbm9kZSBpcyBvbiB0aGUgZWRnZS4gSWYg
aXQgaXMgb24gdGhlIGVkZ2UsCisgICB0aGUgc2xvdyBjaGVjayBpcyBuZWNlc3NhcnksIGJ1dCBp
ZiBpdCBpcyBpbiB0aGUgaW50ZXJpb3IgdGhlbiBpdCBjYW4gYmUKKyAgIGFzc3VtZWQgdG8gaGF2
ZSBhbGwgb2YgaXRzIGNoaWxkcmVuIGFsbG9jYXRlZC4gRklYTUU6IG1lZGl1bSBjb21wbGV4aXR5
IHRvCisgICBpbXBsZW1lbnQsIGJ1dCBzaW1wbGUgdG8gdmVyaWZ5IGdpdmVuIHRoYXQgd2UgbXVz
dCBoYXZlIGEgc2xvdyBjaGVjayBhbnl3YXkuCisKKyAgIDQuIChPcHRpb25hbCkgVGhpcyBwYXJ0
IGlzIG9wdGlvbmFsLCBub3QgZm9yIHY0LjAtLWZsdXNoIHNob3VsZCB3b3JrCisgICBpbmRlcGVu
ZGVudGx5IG9mIHdoZXRoZXIgdGhpcyBvcHRpb24gaXMgdXNlZCBvciBub3QuIENhbGxlZCBSQVBJ
RF9TQ0FOLCB0aGUKKyAgIGlkZWEgaXMgdG8gYW1lbmQgdGhlIGxlZnQtc2NhbiBvcGVyYXRpb24g
dG8gdGFrZSB1bmFsbG9jYXRlZCBjaGlsZHJlbiBpbnRvCisgICBhY2NvdW50LiBOb3JtYWxseSwg
dGhlIGxlZnQtc2NhbiBvcGVyYXRpb24gZ29lcyBsZWZ0IGFzIGxvbmcgYXMgYWRqYWNlbnQKKyAg
IG5vZGVzIGFyZSBkaXJ0eSB1cCB1bnRpbCBzb21lIGxhcmdlIG1heGltdW0gdmFsdWUgKEZMVVNI
X1NDQU5fTUFYTk9ERVMpIGF0CisgICB3aGljaCBwb2ludCBpdCBzdG9wcyBhbmQgYmVnaW5zIGZs
dXNoaW5nLiBCdXQgc2Nhbi1sZWZ0IG1heSBzdG9wIGF0IGEKKyAgIHBvc2l0aW9uIHdoZXJlIHRo
ZXJlIGFyZSB1bmFsbG9jYXRlZCBjaGlsZHJlbiB0byB0aGUgbGVmdCB3aXRoIHRoZSBzYW1lCisg
ICBwYXJlbnQuIFdoZW4gUkFQSURfU0NBTiBpcyBlbmFibGVkLCB0aGUgb3JkaW5hcnkgc2Nhbi1s
ZWZ0IG9wZXJhdGlvbiBzdG9wcworICAgYWZ0ZXIgRkxVU0hfUkVMT0NBVEVfVEhSRVNIT0xELCB3
aGljaCBpcyBtdWNoIHNtYWxsZXIgdGhhbgorICAgRkxVU0hfU0NBTl9NQVhOT0RFUywgdGhlbiBw
cm9jZWRlcyB3aXRoIGEgcmFwaWQgc2Nhbi4gVGhlIHJhcGlkIHNjYW4gc2tpcHMKKyAgIGFsbCB0
aGUgaW50ZXJpb3IgY2hpbGRyZW4gb2YgYSBub2RlLS1pZiB0aGUgbGVmdG1vc3QgY2hpbGQgb2Yg
YSB0d2lnIGlzCisgICBkaXJ0eSwgY2hlY2sgaXRzIGxlZnQgbmVpZ2hib3IgKHRoZSByaWdodG1v
c3QgY2hpbGQgb2YgdGhlIHR3aWcgdG8gdGhlIGxlZnQpLgorICAgSWYgdGhlIGxlZnQgbmVpZ2hi
b3Igb2YgdGhlIGxlZnRtb3N0IGNoaWxkIGlzIGFsc28gZGlydHksIHRoZW4gY29udGludWUgdGhl
CisgICBzY2FuIGF0IHRoZSBsZWZ0IHR3aWcgYW5kIHJlcGVhdC4gIFRoaXMgb3B0aW9uIHdpbGwg
Y2F1c2UgZmx1c2ggdG8gYWxsb2NhdGUKKyAgIG1vcmUgdHdpZ3MgaW4gYSBzaW5nbGUgcGFzcywg
YnV0IGl0IGFsc28gaGFzIHRoZSBwb3RlbnRpYWwgdG8gd3JpdGUgbWFueSBtb3JlCisgICBub2Rl
cyB0aGFuIHdvdWxkIG90aGVyd2lzZSBiZSB3cml0dGVuIHdpdGhvdXQgdGhlIFJBUElEX1NDQU4g
b3B0aW9uLgorICAgUkFQSURfU0NBTiB3YXMgcGFydGlhbGx5IGltcGxlbWVudGVkLCBjb2RlIHJl
bW92ZWQgQXVndXN0IDEyLCAyMDAyIGJ5IEpNQUNELgorKi8KKworLyogRkxVU0ggQ0FMTEVEIE9O
IE5PTi1MRUFGIExFVkVMLiBNb3N0IG9mIG91ciBkZXNpZ24gY29uc2lkZXJhdGlvbnMgYXNzdW1l
IHRoYXQKKyAgIHRoZSBzdGFydGluZyBwb2ludCBmb3IgZmx1c2ggaXMgYSBsZWFmIG5vZGUsIGJ1
dCBhY3R1YWxseSB0aGUgZmx1c2ggY29kZQorICAgY2FyZXMgdmVyeSBsaXR0bGUgYWJvdXQgd2hl
dGhlciBvciBub3QgdGhpcyBpcyB0cnVlLiAgSXQgaXMgcG9zc2libGUgdGhhdCBhbGwKKyAgIHRo
ZSBsZWFmIG5vZGVzIGFyZSBmbHVzaGVkIGFuZCBkaXJ0eSBwYXJlbnQgbm9kZXMgc3RpbGwgcmVt
YWluLCBpbiB3aGljaCBjYXNlCisgICBqbm9kZV9mbHVzaCgpIGlzIGNhbGxlZCBvbiBhIG5vbi1s
ZWFmIGFyZ3VtZW50LiBGbHVzaCBkb2Vzbid0IGNhcmUtLWl0IHRyZWF0cworICAgdGhlIGFyZ3Vt
ZW50IG5vZGUgYXMgaWYgaXQgd2VyZSBhIGxlYWYsIGV2ZW4gd2hlbiBpdCBpcyBub3QuIFRoaXMg
aXMgYSBzaW1wbGUKKyAgIGFwcHJvYWNoLCBhbmQgdGhlcmUgbWF5IGJlIGEgbW9yZSBvcHRpbWFs
IHBvbGljeSBidXQgdW50aWwgYSBwcm9ibGVtIHdpdGgKKyAgIHRoaXMgYXBwcm9hY2ggaXMgZGlz
Y292ZXJlZCwgc2ltcGxlc3QgaXMgcHJvYmFibHkgYmVzdC4KKworICAgTk9URTogSW4gdGhpcyBj
YXNlLCB0aGUgb3JkZXJpbmcgcHJvZHVjZWQgYnkgZmx1c2ggaXMgcGFyZW50LWZpcnN0IG9ubHkg
aWYKKyAgIHlvdSBpZ25vcmUgdGhlIGxlYXZlcy4gVGhpcyBpcyBkb25lIGFzIGEgbWF0dGVyIG9m
IHNpbXBsaWNpdHkgYW5kIHRoZXJlIGlzCisgICBvbmx5IG9uZSAoc2hha3kpIGp1c3RpZmljYXRp
b24uIFdoZW4gYW4gYXRvbSBjb21taXRzLCBpdCBmbHVzaGVzIGFsbCBsZWFmCisgICBsZXZlbCBu
b2RlcyBmaXJzdCwgZm9sbG93ZWQgYnkgdHdpZ3MsIGFuZCBzbyBvbi4gV2l0aCBmbHVzaGluZyBk
b25lIGluIHRoaXMKKyAgIG9yZGVyLCBpZiBmbHVzaCBpcyBldmVudHVhbGx5IGNhbGxlZCBvbiBh
IG5vbi1sZWFmIG5vZGUgaXQgbWVhbnMgdGhhdAorICAgKHNvbWVob3cpIHdlIHJlYWNoZWQgYSBw
b2ludCB3aGVyZSBhbGwgbGVhdmVzIGFyZSBjbGVhbiBhbmQgb25seSBpbnRlcm5hbAorICAgbm9k
ZXMgbmVlZCB0byBiZSBmbHVzaGVkLiBJZiB0aGF0IGl0IHRoZSBjYXNlLCB0aGVuIGl0IG1lYW5z
IHRoZXJlIHdlcmUgbm8KKyAgIGxlYXZlcyB0aGF0IHdlcmUgdGhlIHBhcmVudC1maXJzdCBwcmVj
ZWRlci9mb2xsb3dlciBvZiB0aGUgcGFyZW50LiBUaGlzIGlzCisgICBleHBlY3RlZCB0byBiZSBh
IHJhcmUgY2FzZSwgd2hpY2ggaXMgd2h5IHdlIGRvIG5vdGhpbmcgc3BlY2lhbCBhYm91dCBpdC4K
KyAgIEhvd2V2ZXIsIG1lbW9yeSBwcmVzc3VyZSBtYXkgcGFzcyBhbiBpbnRlcm5hbCBub2RlIHRv
IGZsdXNoIHdoZW4gdGhlcmUgYXJlCisgICBzdGlsbCBkaXJ0eSBsZWFmIG5vZGVzIHRoYXQgbmVl
ZCB0byBiZSBmbHVzaGVkLCB3aGljaCBjb3VsZCBwcm92ZSBvdXIKKyAgIG9yaWdpbmFsIGFzc3Vt
cHRpb25zICJpbm9wZXJhdGl2ZSIuIElmIHRoaXMgbmVlZHMgdG8gYmUgZml4ZWQsIHRoZW4KKyAg
IHNjYW5fbGVmdC9yaWdodCBzaG91bGQgaGF2ZSBzcGVjaWFsIGNoZWNrcyBmb3IgdGhlIG5vbi1s
ZWFmIGxldmVscy4gRm9yCisgICBleGFtcGxlLCBpbnN0ZWFkIG9mIHBhc3NpbmcgZnJvbSBhIG5v
ZGUgdG8gdGhlIGxlZnQgbmVpZ2hib3IsIGl0IHNob3VsZCBwYXNzCisgICBmcm9tIHRoZSBub2Rl
IHRvIHRoZSBsZWZ0IG5laWdoYm9yJ3MgcmlnaHRtb3N0IGRlc2NlbmRlbnQgKGlmIGRpcnR5KS4K
KworKi8KKworLyogVU5JTVBMRU1FTlRFRCBBUyBZRVQ6IFJFUEFDS0lORyBBTkQgUkVTSVpJTkcu
IFdlIHdhbGsgdGhlIHRyZWUgaW4gNE1CLTE2TUIKKyAgIGNodW5rcywgZGlydHlpbmcgZXZlcnl0
aGluZyBhbmQgcHV0dGluZyBpdCBpbnRvIGEgdHJhbnNhY3Rpb24uIFdlIHRlbGwgdGhlCisgICBh
bGxvY2F0b3IgdG8gYWxsb2NhdGUgdGhlIGJsb2NrcyBhcyBmYXIgYXMgcG9zc2libGUgdG93YXJk
cyBvbmUgZW5kIG9mIHRoZQorICAgbG9naWNhbCBkZXZpY2UtLXRoZSBsZWZ0IChzdGFydGluZykg
ZW5kIG9mIHRoZSBkZXZpY2UgaWYgd2UgYXJlIHdhbGtpbmcgZnJvbQorICAgbGVmdCB0byByaWdo
dCwgdGhlIHJpZ2h0IGVuZCBvZiB0aGUgZGV2aWNlIGlmIHdlIGFyZSB3YWxraW5nIGZyb20gcmln
aHQgdG8KKyAgIGxlZnQuICBXZSB0aGVuIG1ha2UgcGFzc2VzIGluIGFsdGVybmF0aW5nIGRpcmVj
dGlvbnMsIGFuZCBhcyB3ZSBkbyB0aGlzIHRoZQorICAgZGV2aWNlIGJlY29tZXMgc29ydGVkIHN1
Y2ggdGhhdCB0cmVlIG9yZGVyIGFuZCBibG9jayBudW1iZXIgb3JkZXIgZnVsbHkKKyAgIGNvcnJl
bGF0ZS4KKworICAgUmVzaXppbmcgaXMgZG9uZSBieSBzaGlmdGluZyBldmVyeXRoaW5nIGVpdGhl
ciBhbGwgdGhlIHdheSB0byB0aGUgbGVmdCBvciBhbGwKKyAgIHRoZSB3YXkgdG8gdGhlIHJpZ2h0
LCBhbmQgdGhlbiByZXBvcnRpbmcgdGhlIGxhc3QgYmxvY2suCisqLworCisvKiBSRUxPQ0FURSBE
RUNJU0lPTlM6IFRoZSBjb2RlIG1ha2VzIGEgZGVjaXNpb24gdG8gcmVsb2NhdGUgaW4gc2V2ZXJh
bCBwbGFjZXMuCisgICBUaGlzIGRlc2NpYmVzIHRoZSBwb2xpY3kgZnJvbSB0aGUgaGlnaGVzdCBs
ZXZlbDoKKworICAgVGhlIEZMVVNIX1JFTE9DQVRFX1RIUkVTSE9MRCBwYXJhbWV0ZXI6IElmIHdl
IGNvdW50IHRoaXMgbWFueSBjb25zZWN1dGl2ZQorICAgbm9kZXMgb24gdGhlIGxlYWYgbGV2ZWwg
ZHVyaW5nIGZsdXNoLXNjYW4gKHJpZ2h0LCBsZWZ0KSwgdGhlbiB3ZQorICAgdW5jb25kaXRpb25h
bGx5IGRlY2lkZSB0byByZWxvY2F0ZSBsZWFmIG5vZGVzLgorCisgICBPdGhlcndpc2UsIHRoZXJl
IGFyZSB0d28gY29udGV4dHMgaW4gd2hpY2ggd2UgbWFrZSBhIGRlY2lzaW9uIHRvIHJlbG9jYXRl
OgorCisgICAxLiBUaGUgUkVWRVJTRSBQQVJFTlQtRklSU1QgY29udGV4dDogSW1wbGVtZW50ZWQg
aW4gcmV2ZXJzZV9hbGxvY2F0ZQorICAgRHVyaW5nIHRoZSBpbml0aWFsIHN0YWdlcyBvZiBmbHVz
aCwgYWZ0ZXIgc2Nhbi1yaWdodCBjb21wbGV0ZXMsIHdlIHdhbnQgdG8KKyAgIGFzayB0aGUgcXVl
c3Rpb246IHNob3VsZCB3ZSByZWxvY2F0ZSB0aGlzIGxlYWYgbm9kZSBhbmQgdGh1cyBkaXJ0eSB0
aGUgcGFyZW50CisgICBub2RlLiBUaGVuIGlmIHRoZSBub2RlIGlzIGEgbGVmdG1vc3QgY2hpbGQg
aXRzIHBhcmVudCBpcyBpdHMgb3duIHBhcmVudC1maXJzdAorICAgcHJlY2VkZXIsIHRodXMgd2Ug
cmVwZWF0IHRoZSBxdWVzdGlvbiBhdCB0aGUgbmV4dCBsZXZlbCB1cCwgYW5kIHNvIG9uLiBJbgor
ICAgdGhlc2UgY2FzZXMgd2UgYXJlIG1vdmluZyBpbiB0aGUgcmV2ZXJzZS1wYXJlbnQgZmlyc3Qg
ZGlyZWN0aW9uLgorCisgICBUaGVyZSBpcyBhbm90aGVyIGNhc2Ugd2hpY2ggaXMgY29uc2lkZXJl
ZCB0aGUgcmV2ZXJzZSBkaXJlY3Rpb24sIHdoaWNoIGNvbWVzCisgICBhdCB0aGUgZW5kIG9mIGEg
dHdpZyBpbiByZXZlcnNlX3JlbG9jYXRlX2VuZF9vZl90d2lnKCkuIEFzIHdlIGZpbmlzaAorICAg
cHJvY2Vzc2luZyBhIHR3aWcgd2UgbWF5IHJlYWNoIGEgcG9pbnQgd2hlcmUgdGhlcmUgaXMgYSBj
bGVhbiB0d2lnIHRvIHRoZQorICAgcmlnaHQgd2l0aCBhIGRpcnR5IGxlZnRtb3N0IGNoaWxkLiBJ
biB0aGlzIGNhc2UsIHdlIG1heSB3aXNoIHRvIHJlbG9jYXRlIHRoZQorICAgY2hpbGQgYnkgdGVz
dGluZyBpZiBpdCBzaG91bGQgYmUgcmVsb2NhdGVkIHJlbGF0aXZlIHRvIGl0cyBwYXJlbnQuCisK
KyAgIDIuIFRoZSBGT1JXQVJEIFBBUkVOVC1GSVJTVCBjb250ZXh0OiBUZXN0aW5nIGZvciBmb3J3
YXJkIHJlbG9jYXRpb24gaXMgZG9uZQorICAgaW4gYWxsb2NhdGVfem5vZGUuIFdoYXQgZGlzdGlu
Z3Vpc2hlcyB0aGUgZm9yd2FyZCBwYXJlbnQtZmlyc3QgY2FzZSBmcm9tIHRoZQorICAgcmV2ZXJz
ZS1wYXJlbnQgZmlyc3QgY2FzZSBpcyB0aGF0IHRoZSBwcmVjZWRlciBoYXMgYWxyZWFkeSBiZWVu
IGFsbG9jYXRlZCBpbgorICAgdGhlIGZvcndhcmQgY2FzZSwgd2hlcmVhcyBpbiB0aGUgcmV2ZXJz
ZSBjYXNlIHdlIGRvbid0IGtub3cgd2hhdCB0aGUgcHJlY2VkZXIKKyAgIGlzIHVudGlsIHdlIGZp
bmlzaCAiZ29pbmcgaW4gcmV2ZXJzZSIuIFRoYXQgc2ltcGxpZmllcyB0aGUgZm9yd2FyZCBjYXNl
CisgICBjb25zaWRlcmFibHksIGFuZCB0aGVyZSB3ZSBhY3R1YWxseSB1c2UgdGhlIGJsb2NrIGFs
bG9jYXRvciB0byBkZXRlcm1pbmUKKyAgIHdoZXRoZXIsIGUuZy4sIGEgYmxvY2sgY2xvc2VyIHRv
IHRoZSBwcmVjZWRlciBpcyBhdmFpbGFibGUuCisqLworCisvKiBTUVVFRVpFX0xFRlRfRURHRTog
VW5pbXBsZW1lbnRlZCBpZGVhIGZvciBmdXR1cmUgY29uc2lkZXJhdGlvbi4gVGhlIGlkZWEgaXMs
CisgICBvbmNlIHdlIGZpbmlzaCBzY2FuLWxlZnQgYW5kIGZpbmQgYSBzdGFydGluZyBwb2ludCwg
aWYgdGhlIHBhcmVudCdzIGxlZnQKKyAgIG5laWdoYm9yIGlzIGRpcnR5IHRoZW4gc3F1ZWV6ZSB0
aGUgcGFyZW50J3MgbGVmdCBuZWlnaGJvciBhbmQgdGhlIHBhcmVudC4KKyAgIFRoaXMgbWF5IGNo
YW5nZSB0aGUgZmx1c2gtc3RhcnRpbmctbm9kZSdzIHBhcmVudC4gUmVwZWF0IHVudGlsIHRoZSBj
aGlsZCdzCisgICBwYXJlbnQgaXMgc3RhYmxlLiBJZiB0aGUgY2hpbGQgaXMgYSBsZWZ0bW9zdCBj
aGlsZCwgcmVwZWF0IHRoaXMgbGVmdC1lZGdlCisgICBzcXVlZXppbmcgb3BlcmF0aW9uIGF0IHRo
ZSBuZXh0IGxldmVsIHVwLiBOb3RlIHRoYXQgd2UgY2Fubm90IGFsbG9jYXRlCisgICBleHRlbnRz
IGR1cmluZyB0aGlzIG9yIHRoZXkgd2lsbCBiZSBvdXQgb2YgcGFyZW50LWZpcnN0IG9yZGVyLiBU
aGVyZSBpcyBhbHNvCisgICBzb21lIGRpZmZpY3VsdCBjb29yZGluYXRlIG1haW50ZW5lbmNlIGlz
c3Vlcy4gIFdlIGNhbid0IGRvIGEgdHJlZSBzZWFyY2ggdG8KKyAgIGZpbmQgY29vcmRpbmF0ZXMg
YWdhaW4gKGJlY2F1c2Ugd2UgaG9sZCBsb2NrcyksIHdlIGhhdmUgdG8gZGV0ZXJtaW5lIHRoZW0K
KyAgIGZyb20gdGhlIHR3byBub2RlcyBiZWluZyBzcXVlZXplZC4gTG9va3MgZGlmZmljdWx0LCBi
dXQgaGFzIHBvdGVudGlhbCB0bworICAgaW5jcmVhc2Ugc3BhY2UgdXRpbGl6YXRpb24uICovCisK
Ky8qIEZsdXNoLXNjYW4gaGVscGVyIGZ1bmN0aW9ucy4gKi8KK3N0YXRpYyB2b2lkIHNjYW5faW5p
dChmbHVzaF9zY2FuICogc2Nhbik7CitzdGF0aWMgdm9pZCBzY2FuX2RvbmUoZmx1c2hfc2NhbiAq
IHNjYW4pOworCisvKiBGbHVzaC1zY2FuIGFsZ29yaXRobS4gKi8KK3N0YXRpYyBpbnQgc2Nhbl9s
ZWZ0KGZsdXNoX3NjYW4gKiBzY2FuLCBmbHVzaF9zY2FuICogcmlnaHQsIGpub2RlICogbm9kZSwK
KwkJICAgICB1bnNpZ25lZCBsaW1pdCk7CitzdGF0aWMgaW50IHNjYW5fcmlnaHQoZmx1c2hfc2Nh
biAqIHNjYW4sIGpub2RlICogbm9kZSwgdW5zaWduZWQgbGltaXQpOworc3RhdGljIGludCBzY2Fu
X2NvbW1vbihmbHVzaF9zY2FuICogc2NhbiwgZmx1c2hfc2NhbiAqIG90aGVyKTsKK3N0YXRpYyBp
bnQgc2Nhbl9mb3JtYXR0ZWQoZmx1c2hfc2NhbiAqIHNjYW4pOworc3RhdGljIGludCBzY2FuX3Vu
Zm9ybWF0dGVkKGZsdXNoX3NjYW4gKiBzY2FuLCBmbHVzaF9zY2FuICogb3RoZXIpOworc3RhdGlj
IGludCBzY2FuX2J5X2Nvb3JkKGZsdXNoX3NjYW4gKiBzY2FuKTsKKworLyogSW5pdGlhbCBmbHVz
aC1wb2ludCBhbmNlc3RvciBhbGxvY2F0aW9uLiAqLworc3RhdGljIGludCBhbGxvY19wb3NfYW5k
X2FuY2VzdG9ycyhmbHVzaF9wb3NfdCAqcG9zKTsKK3N0YXRpYyBpbnQgYWxsb2Nfb25lX2FuY2Vz
dG9yKGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBmbHVzaF9wb3NfdCAqcG9zKTsKK3N0YXRpYyBpbnQg
c2V0X3ByZWNlZGVyKGNvbnN0IGNvb3JkX3QgKmNvb3JkX2luLCBmbHVzaF9wb3NfdCAqcG9zKTsK
KworLyogTWFpbiBmbHVzaCBhbGdvcml0aG0uCisgICBOb3RlIG9uIGFiYnJldmlhdGlvbjogInNx
dWVlemUgYW5kIGFsbG9jYXRlIiA9PSAic3F1YWxsb2MiLiAqLworc3RhdGljIGludCBzcXVhbGxv
YyhmbHVzaF9wb3NfdCAqcG9zKTsKKworLyogRmx1c2ggc3F1ZWV6ZSBpbXBsZW1lbnRhdGlvbi4g
Ki8KK3N0YXRpYyBpbnQgc3F1ZWV6ZV9yaWdodF9ub25fdHdpZyh6bm9kZSAqIGxlZnQsIHpub2Rl
ICogcmlnaHQpOworc3RhdGljIGludCBzaGlmdF9vbmVfaW50ZXJuYWxfdW5pdCh6bm9kZSAqIGxl
ZnQsIHpub2RlICogcmlnaHQpOworCisvKiBGbHVzaCByZXZlcnNlIHBhcmVudC1maXJzdCByZWxv
Y2F0aW9uIHJvdXRpbmVzLiAqLworc3RhdGljIGludCByZXZlcnNlX2FsbG9jYXRlX3BhcmVudChq
bm9kZSAqIG5vZGUsCisJCQkJICAgY29uc3QgY29vcmRfdCAqcGFyZW50X2Nvb3JkLAorCQkJCSAg
IGZsdXNoX3Bvc190ICpwb3MpOworCisvKiBGbHVzaCBhbGxvY2F0ZSB3cml0ZS1xdWV1ZWluZyBm
dW5jdGlvbnM6ICovCitzdGF0aWMgaW50IGFsbG9jYXRlX3pub2RlKHpub2RlICogbm9kZSwgY29u
c3QgY29vcmRfdCAqcGFyZW50X2Nvb3JkLAorCQkJICBmbHVzaF9wb3NfdCAqcG9zKTsKK3N0YXRp
YyBpbnQgbG9ja19wYXJlbnRfYW5kX2FsbG9jYXRlX3pub2RlKHpub2RlICosIGZsdXNoX3Bvc190
ICopOworCisvKiBGbHVzaCBoZWxwZXIgZnVuY3Rpb25zOiAqLworc3RhdGljIGludCBqbm9kZV9s
b2NrX3BhcmVudF9jb29yZChqbm9kZSAqIG5vZGUsCisJCQkJICAgY29vcmRfdCAqY29vcmQsCisJ
CQkJICAgbG9ja19oYW5kbGUgKiBwYXJlbnRfbGgsCisJCQkJICAgbG9hZF9jb3VudCAqIHBhcmVu
dF96aCwKKwkJCQkgICB6bm9kZV9sb2NrX21vZGUgbW9kZSwgaW50IHRyeSk7CitzdGF0aWMgaW50
IG5laWdoYm9yX2luX3NsdW0oem5vZGUgKiBub2RlLCBsb2NrX2hhbmRsZSAqIHJpZ2h0X2xvY2ss
IHNpZGVvZiBzaWRlLAorCQkJICAgem5vZGVfbG9ja19tb2RlIG1vZGUsIGludCBjaGVja19kaXJ0
eSwgaW50IGV4cGVjdGVkKTsKK3N0YXRpYyBpbnQgem5vZGVfc2FtZV9wYXJlbnRzKHpub2RlICog
YSwgem5vZGUgKiBiKTsKKworc3RhdGljIGludCB6bm9kZV9jaGVja19mbHVzaHByZXBwZWQoem5v
ZGUgKiBub2RlKQoreworCXJldHVybiBqbm9kZV9jaGVja19mbHVzaHByZXBwZWQoWkpOT0RFKG5v
ZGUpKTsKK30KK3N0YXRpYyB2b2lkIHVwZGF0ZV96bm9kZV9ka2V5cyh6bm9kZSAqIGxlZnQsIHpu
b2RlICogcmlnaHQpOworCisvKiBGbHVzaCBwb3NpdGlvbiBmdW5jdGlvbnMgKi8KK3N0YXRpYyB2
b2lkIHBvc19pbml0KGZsdXNoX3Bvc190ICpwb3MpOworc3RhdGljIGludCBwb3NfdmFsaWQoZmx1
c2hfcG9zX3QgKnBvcyk7CitzdGF0aWMgdm9pZCBwb3NfZG9uZShmbHVzaF9wb3NfdCAqcG9zKTsK
K3N0YXRpYyBpbnQgcG9zX3N0b3AoZmx1c2hfcG9zX3QgKnBvcyk7CisKKy8qIGNoZWNrIHRoYXQg
QG9yZyBpcyBmaXJzdCBqbm9kZSBleHRlbnQgdW5pdCwgaWYgZXh0ZW50IGlzIHVuYWxsb2NhdGVk
LAorICogYmVjYXVzZSBhbGwgam5vZGVzIG9mIHVuYWxsb2NhdGVkIGV4dGVudCBhcmUgZGlydHkg
YW5kIG9mIHRoZSBzYW1lIGF0b20uICovCisjZGVmaW5lIGNoZWNrY2hpbGQoc2NhbikJCQkJCQlc
Cithc3NlcnQoIm5pa2l0YS0zNDM1IiwJCQkJCQkJXAorICAgICAgIGVyZ28oc2Nhbi0+ZGlyZWN0
aW9uID09IExFRlRfU0lERSAmJgkJCQlcCisJICAgIChzY2FuLT5wYXJlbnRfY29vcmQubm9kZS0+
bGV2ZWwgPT0gVFdJR19MRVZFTCkgJiYgICAgICAgICAgIFwKKwkgICAgam5vZGVfaXNfdW5mb3Jt
YXR0ZWQoc2Nhbi0+bm9kZSkgJiYJCQkJXAorCSAgICBleHRlbnRfaXNfdW5hbGxvY2F0ZWQoJnNj
YW4tPnBhcmVudF9jb29yZCksCQkJXAorCSAgICBleHRlbnRfdW5pdF9pbmRleCgmc2Nhbi0+cGFy
ZW50X2Nvb3JkKSA9PSBpbmRleF9qbm9kZShzY2FuLT5ub2RlKSkpCisKKy8qIFRoaXMgZmx1c2hf
Y250IHZhcmlhYmxlIGlzIHVzZWQgdG8gdHJhY2sgdGhlIG51bWJlciBvZiBjb25jdXJyZW50IGZs
dXNoCisgICBvcGVyYXRpb25zLCB1c2VmdWwgZm9yIGRlYnVnZ2luZy4gSXQgaXMgaW5pdGlhbGl6
ZWQgaW4gdHhubWdyLmMgb3V0IG9mCisgICBsYXppbmVzcyAoYmVjYXVzZSBmbHVzaCBoYXMgbm8g
c3RhdGljIGluaXRpYWxpemVyIGZ1bmN0aW9uLi4uKSAqLworT05fREVCVUcoYXRvbWljX3QgZmx1
c2hfY250OykKKworLyogY2hlY2sgZnMgYmFja2luZyBkZXZpY2UgZm9yIHdyaXRlIGNvbmdlc3Rp
b24gKi8KK3N0YXRpYyBpbnQgY2hlY2tfd3JpdGVfY29uZ2VzdGlvbih2b2lkKQoreworCXN0cnVj
dCBzdXBlcl9ibG9jayAqc2I7CisJc3RydWN0IGJhY2tpbmdfZGV2X2luZm8gKmJkaTsKKworCXNi
ID0gcmVpc2VyNF9nZXRfY3VycmVudF9zYigpOworCWJkaSA9IGlub2RlX3RvX2JkaShyZWlzZXI0
X2dldF9zdXBlcl9mYWtlKHNiKSk7CisJcmV0dXJuIGJkaV93cml0ZV9jb25nZXN0ZWQoYmRpKTsK
K30KKworLyogY29uZGl0aW9uYWxseSB3cml0ZSBmbHVzaCBxdWV1ZSAqLworc3RhdGljIGludCB3
cml0ZV9wcmVwcGVkX25vZGVzKGZsdXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldDsKKworCWFz
c2VydCgiemFtLTgzMSIsIHBvcyk7CisJYXNzZXJ0KCJ6YW0tODMyIiwgcG9zLT5mcSk7CisKKwlp
ZiAoIShwb3MtPmZsYWdzICYgSk5PREVfRkxVU0hfV1JJVEVfQkxPQ0tTKSkKKwkJcmV0dXJuIDA7
CisKKwlpZiAoY2hlY2tfd3JpdGVfY29uZ2VzdGlvbigpKQorCQlyZXR1cm4gMDsKKworCXJldCA9
IHJlaXNlcjRfd3JpdGVfZnEocG9zLT5mcSwgcG9zLT5ucl93cml0dGVuLAorCQkgICAgICAgV1JJ
VEVPVVRfU0lOR0xFX1NUUkVBTSB8IFdSSVRFT1VUX0ZPUl9QQUdFX1JFQ0xBSU0pOworCXJldHVy
biByZXQ7Cit9CisKKy8qIFByb3BlciByZWxlYXNlIGFsbCBmbHVzaCBwb3MuIHJlc291cmNlcyB0
aGVuIG1vdmUgZmx1c2ggcG9zaXRpb24gdG8gbmV3CisgICBsb2NrZWQgbm9kZSAqLworc3RhdGlj
IHZvaWQgbW92ZV9mbHVzaF9wb3MoZmx1c2hfcG9zX3QgKnBvcywgbG9ja19oYW5kbGUgKiBuZXdf
bG9jaywKKwkJCSAgIGxvYWRfY291bnQgKiBuZXdfbG9hZCwgY29uc3QgY29vcmRfdCAqbmV3X2Nv
b3JkKQoreworCWFzc2VydCgiemFtLTg1NyIsIG5ld19sb2NrLT5ub2RlID09IG5ld19sb2FkLT5u
b2RlKTsKKworCWlmIChuZXdfY29vcmQpIHsKKwkJYXNzZXJ0KCJ6YW0tODU4IiwgbmV3X2Nvb3Jk
LT5ub2RlID09IG5ld19sb2NrLT5ub2RlKTsKKwkJY29vcmRfZHVwKCZwb3MtPmNvb3JkLCBuZXdf
Y29vcmQpOworCX0gZWxzZSB7CisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmcG9zLT5jb29yZCwg
bmV3X2xvY2stPm5vZGUpOworCX0KKworCWlmIChwb3MtPmNoaWxkKSB7CisJCWpwdXQocG9zLT5j
aGlsZCk7CisJCXBvcy0+Y2hpbGQgPSBOVUxMOworCX0KKworCW1vdmVfbG9hZF9jb3VudCgmcG9z
LT5sb2FkLCBuZXdfbG9hZCk7CisJZG9uZV9saCgmcG9zLT5sb2NrKTsKKwltb3ZlX2xoKCZwb3Mt
PmxvY2ssIG5ld19sb2NrKTsKK30KKworLyogZGVsZXRlIGVtcHR5IG5vZGUgd2hpY2ggbGluayBm
cm9tIHRoZSBwYXJlbnQgc3RpbGwgZXhpc3RzLiAqLworc3RhdGljIGludCBkZWxldGVfZW1wdHlf
bm9kZSh6bm9kZSAqIG5vZGUpCit7CisJcmVpc2VyNF9rZXkgc21hbGxlc3RfcmVtb3ZlZDsKKwor
CWFzc2VydCgiemFtLTEwMTkiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgiemFtLTEwMjAiLCBu
b2RlX2lzX2VtcHR5KG5vZGUpKTsKKwlhc3NlcnQoInphbS0xMDIzIiwgem5vZGVfaXNfd2xvY2tl
ZChub2RlKSk7CisKKwlyZXR1cm4gcmVpc2VyNF9kZWxldGVfbm9kZShub2RlLCAmc21hbGxlc3Rf
cmVtb3ZlZCwgTlVMTCwgMSk7Cit9CisKKy8qIFByZXBhcmUgZmx1c2ggcG9zaXRpb24gZm9yIGFs
bG9jX3Bvc19hbmRfYW5jZXN0b3JzKCkgYW5kIHNxdWFsbG9jKCkgKi8KK3N0YXRpYyBpbnQgcHJl
cGFyZV9mbHVzaF9wb3MoZmx1c2hfcG9zX3QgKnBvcywgam5vZGUgKiBvcmcpCit7CisJaW50IHJl
dDsKKwlsb2FkX2NvdW50IGxvYWQ7CisJbG9ja19oYW5kbGUgbG9jazsKKworCWluaXRfbGgoJmxv
Y2spOworCWluaXRfbG9hZF9jb3VudCgmbG9hZCk7CisKKwlpZiAoam5vZGVfaXNfem5vZGUob3Jn
KSkgeworCQlyZXQgPSBsb25ndGVybV9sb2NrX3pub2RlKCZsb2NrLCBKWk5PREUob3JnKSwKKwkJ
CQkJICBaTk9ERV9XUklURV9MT0NLLCBaTk9ERV9MT0NLX0hJUFJJKTsKKwkJaWYgKHJldCkKKwkJ
CXJldHVybiByZXQ7CisKKwkJcmV0ID0gaW5jcl9sb2FkX2NvdW50X3pub2RlKCZsb2FkLCBKWk5P
REUob3JnKSk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCisJCXBvcy0+c3RhdGUgPQor
CQkgICAgKGpub2RlX2dldF9sZXZlbChvcmcpID09CisJCSAgICAgTEVBRl9MRVZFTCkgPyBQT1Nf
T05fTEVBRiA6IFBPU19PTl9JTlRFUk5BTDsKKwkJbW92ZV9mbHVzaF9wb3MocG9zLCAmbG9jaywg
JmxvYWQsIE5VTEwpOworCX0gZWxzZSB7CisJCWNvb3JkX3QgcGFyZW50X2Nvb3JkOworCQlyZXQg
PSBqbm9kZV9sb2NrX3BhcmVudF9jb29yZChvcmcsICZwYXJlbnRfY29vcmQsICZsb2NrLAorCQkJ
CQkgICAgICAmbG9hZCwgWk5PREVfV1JJVEVfTE9DSywgMCk7CisJCWlmIChyZXQpCisJCQlnb3Rv
IGRvbmU7CisJCWlmICghaXRlbV9pc19leHRlbnQoJnBhcmVudF9jb29yZCkpIHsKKwkJCS8qIGZp
bGUgd2FzIGNvbnZlcnRlZCB0byB0YWlsLCBvcmcgYmVjYW1lIEhCLCB3ZSBmb3VuZAorCQkJICAg
aW50ZXJuYWwgaXRlbSAqLworCQkJcmV0ID0gLUVBR0FJTjsKKwkJCWdvdG8gZG9uZTsKKwkJfQor
CisJCXBvcy0+c3RhdGUgPSBQT1NfT05fRVBPSU5UOworCQltb3ZlX2ZsdXNoX3Bvcyhwb3MsICZs
b2NrLCAmbG9hZCwgJnBhcmVudF9jb29yZCk7CisJCXBvcy0+Y2hpbGQgPSBqcmVmKG9yZyk7CisJ
CWlmIChleHRlbnRfaXNfdW5hbGxvY2F0ZWQoJnBhcmVudF9jb29yZCkKKwkJICAgICYmIGV4dGVu
dF91bml0X2luZGV4KCZwYXJlbnRfY29vcmQpICE9IGluZGV4X2pub2RlKG9yZykpIHsKKwkJCS8q
IEBvcmcgaXMgbm90IGZpcnN0IGNoaWxkIG9mIGl0cyBwYXJlbnQgdW5pdC4gVGhpcyBtYXkKKwkJ
CSAgIGhhcHBlbiBiZWNhdXNlIGxvbmdlcm0gbG9jayBvZiBpdHMgcGFyZW50IG5vZGUgd2FzCisJ
CQkgICByZWxlYXNlZCBiZXR3ZWVuIHNjYW5fbGVmdCBhbmQgc2Nhbl9yaWdodC4gRm9yIG5vdwor
CQkJICAgd29yayBhcm91bmQgdGhpcyBoYXZpbmcgZmx1c2ggdG8gcmVwZWF0ICovCisJCQlyZXQg
PSAtRUFHQUlOOworCQl9CisJfQorCitkb25lOgorCWRvbmVfbG9hZF9jb3VudCgmbG9hZCk7CisJ
ZG9uZV9saCgmbG9jayk7CisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIHR4bW9kX3BsdWdpbiAq
Z2V0X3R4bW9kX3BsdWdpbih2b2lkKQoreworCXN0cnVjdCBzdXBlcl9ibG9jayAqc2IgPSByZWlz
ZXI0X2dldF9jdXJyZW50X3NiKCk7CisJcmV0dXJuIHR4bW9kX3BsdWdpbl9ieV9pZChnZXRfc3Vw
ZXJfcHJpdmF0ZShzYiktPnR4bW9kKTsKK30KKworLyogVE9ETyBMSVNUIChubyBwYXJ0aWN1bGFy
IG9yZGVyKTogKi8KKy8qIEkgaGF2ZSBsYWJlbGxlZCBtb3N0IG9mIHRoZSBsZWdpdGltYXRlIEZJ
WE1FIGNvbW1lbnRzIGluIHRoaXMgZmlsZSB3aXRoCisgICBsZXR0ZXJzIHRvIGluZGljYXRlIHdo
aWNoIGlzc3VlIHRoZXkgcmVsYXRlIHRvLiBUaGVyZSBhcmUgYSBmZXcgbWlzY2VsbGFuZW91cwor
ICAgRklYTUVzIHdpdGggc3BlY2lmaWMgbmFtZXMgbWVudGlvbmVkIGluc3RlYWQgdGhhdCBuZWVk
IHRvIGJlCisgICBpbnNwZWN0ZWQvcmVzb2x2ZWQuICovCisvKiBCLiBUaGVyZSBpcyBhbiBpc3N1
ZSBkZXNjcmliZWQgaW4gcmV2ZXJzZV9hbGxvY2F0ZSBoYXZpbmcgdG8gZG8gd2l0aCBhbgorICAg
aW1wcmVjaXNlIGlzX3ByZWNlZGVyPyBjaGVjayBoYXZpbmcgdG8gZG8gd2l0aCBwYXJ0aWFsbHkt
ZGlydHkgZXh0ZW50cy4gVGhlCisgICBjb2RlIHRoYXQgc2V0cyBwcmVjZWRlciBoaW50cyBhbmQg
Y29tcHV0ZXMgdGhlIHByZWNlZGVyIGlzIGJhc2ljYWxseQorICAgdW50ZXN0ZWQuIENhcmVmdWwg
dGVzdGluZyBuZWVkcyB0byBiZSBkb25lIHRoYXQgcHJlY2VkZXIgY2FsY3VsYXRpb25zIGFyZQor
ICAgZG9uZSBjb3JyZWN0bHksIHNpbmNlIGlmIGl0IGRvZXNuJ3QgYWZmZWN0IGNvcnJlY3RuZXNz
IHdlIHdpbGwgbm90IGNhdGNoIHRoaXMKKyAgIHN0dWZmIGR1cmluZyByZWd1bGFyIHRlc3Rpbmcu
ICovCisvKiBDLiBFSU5WQUwsIEVfREVBRExPQ0ssIEVfTk9fTkVJR0hCT1IsIEVOT0VOVCBoYW5k
bGluZy4gSXQgaXMgdW5jbGVhciB3aGljaCBvZgorICAgdGhlc2UgYXJlIGNvbnNpZGVyZWQgZXhw
ZWN0ZWQgYnV0IHVubGlrZWx5IGNvbmRpdGlvbnMuIEZsdXNoIGN1cnJlbnRseQorICAgcmV0dXJu
cyAwIChpLmUuLCBzdWNjZXNzIGJ1dCBubyBwcm9ncmVzcywgaS5lLiwgcmVzdGFydCkgd2hlbmV2
ZXIgaXQgcmVjZWl2ZXMKKyAgIGFueSBvZiB0aGVzZSBpbiBqbm9kZV9mbHVzaCgpLiBNYW55IG9m
IHRoZSBjYWxscyB0aGF0IG1heSBwcm9kdWNlIG9uZSBvZgorICAgdGhlc2UgcmV0dXJuIHZhbHVl
cyAoaS5lLiwgbG9uZ3Rlcm1fbG9ja196bm9kZSwgcmVpc2VyNF9nZXRfcGFyZW50LAorICAgcmVp
c2VyNF9nZXRfbmVpZ2hib3IsIC4uLikgY2hlY2sgc29tZSBvZiB0aGVzZSB2YWx1ZXMgdGhlbXNl
bHZlcyBhbmQsIGZvcgorICAgaW5zdGFuY2UsIHN0b3AgZmx1c2hpbmcgaW5zdGVhZCBvZiByZXN1
bHRpbmcgaW4gYSByZXN0YXJ0LiBJZiBhbnkgb2YgdGhlc2UKKyAgIHJlc3VsdHMgYXJlIHRydWUg
ZXJyb3IgY29uZGl0aW9ucyB0aGVuIGZsdXNoIHdpbGwgZ28gaW50byBhIGJ1c3ktbG9vcCwgYXMg
d2UKKyAgIG5vdGljZWQgZHVyaW5nIHRlc3Rpbmcgd2hlbiBhIGNvcnJ1cHQgdHJlZSBjYXVzZWQg
ZmluZF9jaGlsZF9wdHIgdG8gcmV0dXJuCisgICBFTk9FTlQuIEl0IG5lZWRzIGNhcmVmdWwgdGhv
dWdodCBhbmQgdGVzdGluZyBvZiBjb3JuZXIgY29uZGl0aW9ucy4KKyovCisvKiBELiBBdG9taWNp
dHkgb2YgZmx1c2hfcHJlcCBhZ2FpbnN0IGRlbGV0aW9uIGFuZCBmbHVzaCBjb25jdXJyZW5jeS4g
U3VwcG9zZSBhCisgICBjcmVhdGVkIGJsb2NrIGlzIGFzc2lnbmVkIGEgYmxvY2sgbnVtYmVyIHRo
ZW4gZWFybHktZmx1c2hlZCB0byBkaXNrLiBJdCBpcworICAgZGlydGllZCBhZ2FpbiBhbmQgZmx1
c2ggaXMgY2FsbGVkIGFnYWluLiBDb25jdXJyZW50bHksIHRoYXQgYmxvY2sgaXMgZGVsZXRlZCwK
KyAgIGFuZCB0aGUgZGUtYWxsb2NhdGlvbiBvZiBpdHMgYmxvY2sgbnVtYmVyIGRvZXMgbm90IG5l
ZWQgdG8gYmUgZGVmZXJyZWQsIHNpbmNlCisgICBpdCBpcyBub3QgcGFydCBvZiB0aGUgcHJlc2Vy
dmUgc2V0IChpLmUuLCBpdCBkaWRuJ3QgZXhpc3QgYmVmb3JlIHRoZQorICAgdHJhbnNhY3Rpb24p
LiBJIHRoaW5rIHRoZXJlIG1heSBiZSBhIHJhY2UgY29uZGl0aW9uIHdoZXJlIGZsdXNoIHdyaXRl
cyB0aGUKKyAgIGRpcnR5LCBjcmVhdGVkIGJsb2NrIGFmdGVyIHRoZSBub24tZGVmZXJyZWQgZGVh
bGxvY2F0ZWQgYmxvY2sgbnVtYmVyIGlzCisgICByZS1hbGxvY2F0ZWQsIG1ha2luZyBpdCBwb3Nz
aWJsZSB0byB3cml0ZSBkZWxldGVkIGRhdGEgb24gdG9wIG9mIG5vbi1kZWxldGVkCisgICBkYXRh
LiBJdHMganVzdCBhIHRoZW9yeSwgYnV0IGl0IG5lZWRzIHRvIGJlIHRob3VnaHQgb3V0LiAqLwor
LyogRi4gYmlvX2FsbG9jKCkgZmFpbHVyZSBpcyBub3QgaGFuZGxlZCBncmFjZWZ1bGx5LiAqLwor
LyogRy4gVW5hbGxvY2F0ZWQgY2hpbGRyZW4uICovCisvKiBILiBBZGQgYSBXQU5ERVJFRF9MSVNU
IHRvIHRoZSBhdG9tIHRvIGNsYXJpZnkgdGhlIHBsYWNlbWVudCBvZiB3YW5kZXJlZAorICAgYmxv
Y2tzLiAqLworLyogSS4gUmVuYW1lIGZsdXNoLXNjYW4gdG8gc2Nhbi1wb2ludCwgKGZsdXNoLXBv
cyB0byBmbHVzaC1wb2ludD8pICovCisKKy8qIEpOT0RFX0ZMVVNIOiBNQUlOIEVOVFJZIFBPSU5U
ICovCisvKiBUaGlzIGlzIHRoZSBtYWluIGVudHJ5IHBvaW50IGZvciBmbHVzaGluZyBhIGpub2Rl
IGFuZCBpdHMgZGlydHkgbmVpZ2hib3Job29kCisgICAoZGlydHkgbmVpZ2hib3Job29kIGlzIG5h
bWVkICJzbHVtIikuIEpub2RlX2ZsdXNoKCkgaXMgY2FsbGVkIGlmIHJlaXNlcjQgaGFzCisgICB0
byB3cml0ZSBkaXJ0eSBibG9ja3MgdG8gZGlzaywgaXQgaGFwcGVucyB3aGVuIExpbnV4IFZNIGRl
Y2lkZXMgdG8gcmVkdWNlCisgICBudW1iZXIgb2YgZGlydHkgcGFnZXMgb3IgYXMgYSBwYXJ0IG9m
IHRyYW5zYWN0aW9uIGNvbW1pdC4KKworICAgT3VyIG9iamVjdGl2ZSBoZXJlIGlzIHRvIHByZXAg
YW5kIGZsdXNoIHRoZSBzbHVtIHRoZSBqbm9kZSBiZWxvbmdzIHRvLiBXZQorICAgd2FudCB0byBz
cXVpc2ggdGhlIHNsdW0gdG9nZXRoZXIsIGFuZCBhbGxvY2F0ZSB0aGUgbm9kZXMgaW4gaXQgYXMg
d2Ugc3F1aXNoCisgICBiZWNhdXNlIGFsbG9jYXRpb24gb2YgY2hpbGRyZW4gYWZmZWN0cyBzcXVp
c2hpbmcgb2YgcGFyZW50cy4KKworICAgVGhlICJhcmd1bWVudCIgQG5vZGUgdGVsbHMgZmx1c2gg
d2hlcmUgdG8gc3RhcnQuIEZyb20gdGhlcmUsIGZsdXNoIGZpbmRzIHRoZQorICAgbGVmdCBlZGdl
IG9mIHRoZSBzbHVtLCBhbmQgY2FsbHMgc3F1YWxsb2MgKGluIHdoaWNoIG5vZGVzIGFyZSBzcXVl
ZXplZCBhbmQKKyAgIGFsbG9jYXRlZCkuIFRvIGZpbmQgYSAiYmV0dGVyIHBsYWNlIiB0byBzdGFy
dCBzcXVhbGxvYyBmaXJzdCB3ZSBwZXJmb3JtIGEKKyAgIGZsdXNoX3NjYW4uCisKKyAgIEZsdXNo
LXNjYW5uaW5nIG1heSBiZSBwZXJmb3JtZWQgaW4gYm90aCBsZWZ0IGFuZCByaWdodCBkaXJlY3Rp
b25zLCBidXQgZm9yCisgICBkaWZmZXJlbnQgcHVycG9zZXMuIFdoZW4gc2Nhbm5pbmcgdG8gdGhl
IGxlZnQsIHdlIGFyZSBzZWFyY2hpbmcgZm9yIGEgbm9kZQorICAgdGhhdCBwcmVjZWRlcyBhIHNl
cXVlbmNlIG9mIHBhcmVudC1maXJzdC1vcmRlcmVkIG5vZGVzIHdoaWNoIHdlIHdpbGwgdGhlbgor
ICAgZmx1c2ggaW4gcGFyZW50LWZpcnN0IG9yZGVyLiBEdXJpbmcgZmx1c2gtc2Nhbm5pbmcsIHdl
IGFsc28gdGFrZSB0aGUKKyAgIG9wcG9ydHVuaXR5IHRvIGNvdW50IHRoZSBudW1iZXIgb2YgY29u
c2VjdXRpdmUgbGVhZiBub2Rlcy4gSWYgdGhpcyBudW1iZXIgaXMKKyAgIHBhc3Qgc29tZSB0aHJl
c2hvbGQgKEZMVVNIX1JFTE9DQVRFX1RIUkVTSE9MRCksIHRoZW4gd2UgbWFrZSBhIGRlY2lzaW9u
IHRvCisgICByZWFsbG9jYXRlIGxlYWYgbm9kZXMgKHRodXMgZmF2b3Jpbmcgd3JpdGUtb3B0aW1p
emF0aW9uKS4KKworICAgU2luY2UgdGhlIGZsdXNoIGFyZ3VtZW50IG5vZGUgY2FuIGJlIGFueXdo
ZXJlIGluIGEgc2VxdWVuY2Ugb2YgZGlydHkgbGVhdmVzLAorICAgdGhlcmUgbWF5IGFsc28gYmUg
ZGlydHkgbm9kZXMgdG8gdGhlIHJpZ2h0IG9mIHRoZSBhcmd1bWVudC4gSWYgdGhlIHNjYW4tbGVm
dAorICAgb3BlcmF0aW9uIGRvZXMgbm90IGNvdW50IGF0IGxlYXN0IEZMVVNIX1JFTE9DQVRFX1RI
UkVTSE9MRCBub2RlcyB0aGVuIHdlCisgICBmb2xsb3cgaXQgd2l0aCBhIHJpZ2h0LXNjYW4gb3Bl
cmF0aW9uIHRvIHNlZSB3aGV0aGVyIHRoZXJlIGlzLCBpbiBmYWN0LAorICAgZW5vdWdoIG5vZGVz
IHRvIG1lZXQgdGhlIHJlbG9jYXRlIHRocmVzaG9sZC4gRWFjaCByaWdodC0gYW5kIGxlZnQtc2Nh
bgorICAgb3BlcmF0aW9uIHVzZXMgYSBzaW5nbGUgZmx1c2hfc2NhbiBvYmplY3QuCisKKyAgIEFm
dGVyIGxlZnQtc2NhbiBhbmQgcG9zc2libHkgcmlnaHQtc2Nhbiwgd2UgcHJlcGFyZSBhIGZsdXNo
X3Bvc2l0aW9uIG9iamVjdAorICAgd2l0aCB0aGUgc3RhcnRpbmcgZmx1c2ggcG9pbnQgb3IgcGFy
ZW50IGNvb3JkaW5hdGUsIHdoaWNoIHdhcyBkZXRlcm1pbmVkCisgICB1c2luZyBzY2FuLWxlZnQu
CisKKyAgIE5leHQgd2UgY2FsbCB0aGUgbWFpbiBmbHVzaCByb3V0aW5lLCBzcXVhbGxvYywgd2hp
Y2ggaXRlcmF0ZXMgYWxvbmcgdGhlIGxlYWYKKyAgIGxldmVsLCBzcXVlZXppbmcgYW5kIGFsbG9j
YXRpbmcgbm9kZXMgKGFuZCBwbGFjaW5nIHRoZW0gaW50byB0aGUgZmx1c2gKKyAgIHF1ZXVlKS4K
KworICAgQWZ0ZXIgc3F1YWxsb2MgcmV0dXJucyB3ZSB0YWtlIGV4dHJhIHN0ZXBzIHRvIGVuc3Vy
ZSB0aGF0IGFsbCB0aGUgY2hpbGRyZW4KKyAgIG9mIHRoZSBmaW5hbCB0d2lnIG5vZGUgYXJlIGFs
bG9jYXRlZC0tdGhpcyBpbnZvbHZlcyByZXBlYXRpbmcgc3F1YWxsb2MKKyAgIHVudGlsIHdlIGZp
bmlzaCBhdCBhIHR3aWcgd2l0aCBubyB1bmFsbG9jYXRlZCBjaGlsZHJlbi4KKworICAgRmluYWxs
eSwgd2UgY2FsbCBmbHVzaF9lbXB0eV9xdWV1ZSB0byBzdWJtaXQgd3JpdGUtcmVxdWVzdHMgdG8g
ZGlzay4gSWYgd2UKKyAgIGVuY291bnRlciBhbnkgYWJvdmUtdHdpZyBub2RlcyBkdXJpbmcgZmx1
c2hfZW1wdHlfcXVldWUgdGhhdCBzdGlsbCBoYXZlCisgICB1bmFsbG9jYXRlZCBjaGlsZHJlbiwg
d2UgZmx1c2hfdW5wcmVwIHRoZW0uCisKKyAgIEZsdXNoIHRyZWF0cyBzZXZlcmFsICJmYWlsdXJl
IiBjYXNlcyBhcyBub24tZmFpbHVyZXMsIGVzc2VudGlhbGx5IGNhdXNpbmcKKyAgIHRoZW0gdG8g
c3RhcnQgb3Zlci4gRV9ERUFETE9DSyBpcyBvbmUgZXhhbXBsZS4KKyAgIEZJWE1FOihDKSBFSU5W
QUwsIEVfTk9fTkVJR0hCT1IsIEVOT0VOVDogdGhlc2Ugc2hvdWxkIHByb2JhYmx5IGJlIGhhbmRs
ZWQKKyAgIHByb3Blcmx5IHJhdGhlciB0aGFuIHJlc3RhcnRpbmcsIGJ1dCB0aGVyZSBhcmUgYSBi
dW5jaCBvZiBjYXNlcyB0byBhdWRpdC4KKyovCisKK3N0YXRpYyBpbnQKK2pub2RlX2ZsdXNoKGpu
b2RlICogbm9kZSwgbG9uZyBucl90b193cml0ZSwgbG9uZyAqbnJfd3JpdHRlbiwKKwkgICAgZmx1
c2hfcXVldWVfdCAqZnEsIGludCBmbGFncykKK3sKKwlsb25nIHJldCA9IDA7CisJZmx1c2hfc2Nh
biAqcmlnaHRfc2NhbjsKKwlmbHVzaF9zY2FuICpsZWZ0X3NjYW47CisJZmx1c2hfcG9zX3QgKmZs
dXNoX3BvczsKKwlpbnQgdG9kbzsKKwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiOworCXJlaXNlcjRf
c3VwZXJfaW5mb19kYXRhICpzYmluZm87CisJam5vZGUgKmxlZnRtb3N0X2luX3NsdW0gPSBOVUxM
OworCisJYXNzZXJ0KCJqbWFjZC03NjYxOSIsIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVu
dF9sb2NrX3N0YWNrKCkpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDIyIiwgcmVpc2VyNF9zY2hlZHVs
YWJsZSgpKTsKKworCWFzc2VydCgibmlraXRhLTMxODUiLAorCSAgICAgICBnZXRfY3VycmVudF9z
dXBlcl9wcml2YXRlKCktPmRlbGV0ZV9tdXRleF9vd25lciAhPSBjdXJyZW50KTsKKworCS8qIGFs
bG9jYXRlIHJpZ2h0X3NjYW4sIGxlZnRfc2NhbiBhbmQgZmx1c2hfcG9zICovCisJcmlnaHRfc2Nh
biA9CisJICAgIGttYWxsb2MoMiAqIHNpemVvZigqcmlnaHRfc2NhbikgKyBzaXplb2YoKmZsdXNo
X3BvcyksCisJCSAgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJaWYgKHJpZ2h0X3Nj
YW4gPT0gTlVMTCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKwlsZWZ0X3NjYW4gPSByaWdo
dF9zY2FuICsgMTsKKwlmbHVzaF9wb3MgPSAoZmx1c2hfcG9zX3QgKikgKGxlZnRfc2NhbiArIDEp
OworCisJc2IgPSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCk7CisJc2JpbmZvID0gZ2V0X3N1cGVy
X3ByaXZhdGUoc2IpOworCisJLyogRmx1c2gtY29uY3VycmVuY3kgZGVidWcgY29kZSAqLworI2lm
IFJFSVNFUjRfREVCVUcKKwlhdG9taWNfaW5jKCZmbHVzaF9jbnQpOworI2VuZGlmCisKKwlyZWlz
ZXI0X2VudGVyX2ZsdXNoKHNiKTsKKworCS8qIEluaXRpYWxpemUgYSBmbHVzaCBwb3NpdGlvbi4g
Ki8KKwlwb3NfaW5pdChmbHVzaF9wb3MpOworCisJZmx1c2hfcG9zLT5ucl93cml0dGVuID0gbnJf
d3JpdHRlbjsKKwlmbHVzaF9wb3MtPmZxID0gZnE7CisJZmx1c2hfcG9zLT5mbGFncyA9IGZsYWdz
OworCWZsdXNoX3Bvcy0+bnJfdG9fd3JpdGUgPSBucl90b193cml0ZTsKKworCXNjYW5faW5pdChy
aWdodF9zY2FuKTsKKwlzY2FuX2luaXQobGVmdF9zY2FuKTsKKworCS8qIEZpcnN0IHNjYW4gbGVm
dCBhbmQgcmVtZW1iZXIgdGhlIGxlZnRtb3N0IHNjYW4gcG9zaXRpb24uIElmIHRoZQorCSAgIGxl
ZnRtb3N0IHBvc2l0aW9uIGlzIHVuZm9ybWF0dGVkIHdlIHJlbWVtYmVyIGl0cyBwYXJlbnRfY29v
cmQuIFdlCisJICAgc2NhbiB1bnRpbCBjb3VudGluZyBGTFVTSF9TQ0FOX01BWE5PREVTLgorCisJ
ICAgSWYgc3RhcnRpbmcgQG5vZGUgaXMgdW5mb3JtYXR0ZWQsIGF0IHRoZSBiZWdpbm5pbmcgb2Yg
bGVmdCBzY2FuIGl0cworCSAgIHBhcmVudCAodHdpZyBsZXZlbCBub2RlLCBjb250YWluaW5nIGV4
dGVudCBpdGVtKSB3aWxsIGJlIGxvbmcgdGVybQorCSAgIGxvY2tlZCBhbmQgbG9jayBoYW5kbGUg
d2lsbCBiZSBzdG9yZWQgaW4gdGhlCisJICAgQHJpZ2h0X3NjYW4tPnBhcmVudF9sb2NrLiBUaGlz
IGxvY2sgaXMgdXNlZCB0byBzdGFydCB0aGUgcmlnaHR3YXJkCisJICAgc2NhbiB3aXRob3V0IHJl
ZG9pbmcgdGhlIHRyZWUgdHJhdmVyc2FsIChuZWNlc3NhcnkgdG8gZmluZCBwYXJlbnQpCisJICAg
YW5kLCBoZW5jZSwgaXMga2VwdCBkdXJpbmcgbGVmdHdhcmQgc2Nhbi4gQXMgYSByZXN1bHQsIHdl
IGhhdmUgdG8KKwkgICB1c2UgdHJ5LWxvY2sgd2hlbiB0YWtpbmcgbG9uZyB0ZXJtIGxvY2tzIGR1
cmluZyB0aGUgbGVmdHdhcmQgc2Nhbi4KKwkgKi8KKwlyZXQgPSBzY2FuX2xlZnQobGVmdF9zY2Fu
LCByaWdodF9zY2FuLAorCQkJbm9kZSwgc2JpbmZvLT5mbHVzaC5zY2FuX21heG5vZGVzKTsKKwlp
ZiAocmV0ICE9IDApCisJCWdvdG8gZmFpbGVkOworCisJbGVmdG1vc3RfaW5fc2x1bSA9IGpyZWYo
bGVmdF9zY2FuLT5ub2RlKTsKKwlzY2FuX2RvbmUobGVmdF9zY2FuKTsKKworCS8qIFRoZW4gcG9z
c2libHkgZ28gcmlnaHQgdG8gZGVjaWRlIGlmIHdlIHdpbGwgdXNlIGEgcG9saWN5IG9mCisJICAg
cmVsb2NhdGluZyBsZWF2ZXMuIFRoaXMgaXMgb25seSBkb25lIGlmIHdlIGRpZCBub3Qgc2NhbiBw
YXN0IChhbmQKKwkgICBjb3VudCkgZW5vdWdoIG5vZGVzIGR1cmluZyB0aGUgbGVmdHdhcmQgc2Nh
bi4gSWYgd2UgZG8gc2NhbiByaWdodCwKKwkgICB3ZSBvbmx5IGNhcmUgdG8gZ28gZmFyIGVub3Vn
aCB0byBlc3RhYmxpc2ggdGhhdCBhdCBsZWFzdAorCSAgIEZMVVNIX1JFTE9DQVRFX1RIUkVTSE9M
RCBudW1iZXIgb2Ygbm9kZXMgYXJlIGJlaW5nIGZsdXNoZWQuIFRoZSBzY2FuCisJICAgbGltaXQg
aXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBsZWZ0X3NjYW4uY291bnQgYW5kIHRoZSB0aHJlc2hv
bGQuICovCisKKwl0b2RvID0gc2JpbmZvLT5mbHVzaC5yZWxvY2F0ZV90aHJlc2hvbGQgLSBsZWZ0
X3NjYW4tPmNvdW50OworCS8qIHNjYW4gcmlnaHQgaXMgaW5oZXJlbnRseSBkZWFkbG9jayBwcm9u
ZSwgYmVjYXVzZSB3ZSBhcmUKKwkgKiAocG90ZW50aWFsbHkpIGhvbGRpbmcgYSBsb2NrIG9uIHRo
ZSB0d2lnIG5vZGUgYXQgdGhpcyBtb21lbnQuCisJICogRklYTUU6IHRoaXMgaXMgaW5jb3JyZWN0
IGNvbW1lbnQ6IGxvY2sgaXMgbm90IGhlbGQgKi8KKwlpZiAodG9kbyA+IDApIHsKKwkJcmV0ID0g
c2Nhbl9yaWdodChyaWdodF9zY2FuLCBub2RlLCAodW5zaWduZWQpdG9kbyk7CisJCWlmIChyZXQg
IT0gMCkKKwkJCWdvdG8gZmFpbGVkOworCX0KKworCS8qIE9ubHkgdGhlIHJpZ2h0LXNjYW4gY291
bnQgaXMgbmVlZGVkLCByZWxlYXNlIGFueSByaWdodHdhcmQgbG9ja3MKKwkgICByaWdodCBhd2F5
LiAqLworCXNjYW5fZG9uZShyaWdodF9zY2FuKTsKKworCS8qIC4uLiBhbmQgdGhlIGFuc3dlciBp
czogd2Ugc2hvdWxkIHJlbG9jYXRlIGxlYWYgbm9kZXMgaWYgYXQgbGVhc3QKKwkgICBGTFVTSF9S
RUxPQ0FURV9USFJFU0hPTEQgbm9kZXMgd2VyZSBmb3VuZC4gKi8KKwlmbHVzaF9wb3MtPmxlYWZf
cmVsb2NhdGUgPSBKRl9JU1NFVChub2RlLCBKTk9ERV9SRVBBQ0spIHx8CisJICAgIChsZWZ0X3Nj
YW4tPmNvdW50ICsgcmlnaHRfc2Nhbi0+Y291bnQgPj0KKwkgICAgIHNiaW5mby0+Zmx1c2gucmVs
b2NhdGVfdGhyZXNob2xkKTsKKworCS8qIEZ1bm55IGJ1c2luZXNzIGhlcmUuICBXZSBzZXQgdGhl
ICdwb2ludCcgaW4gdGhlIGZsdXNoX3Bvc2l0aW9uIGF0CisJICAgcHJpb3IgdG8gc3RhcnRpbmcg
c3F1YWxsb2MgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZSBmaXJzdCBwb2ludCBpcworCSAgIGZv
cm1hdHRlZCBvciB1bmZvcm1hdHRlZC4gV2l0aG91dCB0aGlzIHRoZXJlIHdvdWxkIGJlIGFuIGlu
dmFyaWFudCwKKwkgICBpbiB0aGUgcmVzdCBvZiB0aGUgY29kZSwgdGhhdCBpZiB0aGUgZmx1c2hf
cG9zaXRpb24gaXMgdW5mb3JtYXR0ZWQKKwkgICB0aGVuIGZsdXNoX3Bvc2l0aW9uLT5wb2ludCBp
cyBOVUxMIGFuZAorCSAgIGZsdXNoX3Bvc2l0aW9uLT5wYXJlbnRfe2xvY2ssY29vcmR9IGlzIHNl
dCwgYW5kIGlmIHRoZSBmbHVzaF9wb3NpdGlvbgorCSAgIGlzIGZvcm1hdHRlZCB0aGVuIGZsdXNo
X3Bvc2l0aW9uLT5wb2ludCBpcyBub24tTlVMTCBhbmQgbm8gcGFyZW50CisJICAgaW5mbyBpcyBz
ZXQuCisKKwkgICBUaGlzIHNlZW1zIGxhenksIGJ1dCBpdCBtYWtlcyB0aGUgaW5pdGlhbCBjYWxs
cyB0bworCSAgIHJldmVyc2VfYWxsb2NhdGUgKHdoaWNoIGFzayAiaXMgaXQgdGhlIHBvcy0+cG9p
bnQgdGhlIGxlZnRtb3N0CisJICAgY2hpbGQgb2YgaXRzIHBhcmVudCIpIG11Y2ggZWFzaWVyIGJl
Y2F1c2Ugd2Uga25vdyB0aGUgZmlyc3QgY2hpbGQKKwkgICBhbHJlYWR5LiAgTm90aGluZyBpcyBi
cm9rZW4gYnkgdGhpcywgYnV0IHRoZSByZWFzb25pbmcgaXMgc3VidGxlLgorCSAgIEhvbGRpbmcg
YW4gZXh0cmEgcmVmZXJlbmNlIG9uIGEgam5vZGUgZHVyaW5nIGZsdXNoIGNhbiBjYXVzZSB1cyB0
bworCSAgIHNlZSBub2RlcyB3aXRoIEhFQVJEX0JBTlNIRUUgZHVyaW5nIHNxdWFsbG9jLCBiZWNh
dXNlIG5vZGVzIGFyZSBub3QKKwkgICByZW1vdmVkIGZyb20gc2libGluZyBsaXN0cyB1bnRpbCB0
aGV5IGhhdmUgemVybyByZWZlcmVuY2UgY291bnQuCisJICAgRmx1c2ggd291bGQgbmV2ZXIgb2Jz
ZXJ2ZSBhIEhFQVJEX0JBTlNIRUUgbm9kZSBvbiB0aGUgbGVmdC1lZGdlIG9mCisJICAgZmx1c2gs
IG5vZGVzIGFyZSBvbmx5IGRlbGV0ZWQgdG8gdGhlIHJpZ2h0LiBTbyBpZiBub3RoaW5nIGlzIGJy
b2tlbiwKKwkgICB3aHkgZml4IGl0PworCisJICAgTk9URS1OSUtJVEEgYWN0dWFsbHksIGZsdXNo
IGNhbiBtZWV0IEhFQVJEX0JBTlNIRUUgbm9kZSBhdCBhbnkKKwkgICBwb2ludCBhbmQgaW4gYW55
IG1vbWVudCwgYmVjYXVzZSBvZiB0aGUgY29uY3VycmVudCBmaWxlIHN5c3RlbQorCSAgIGFjdGl2
aXR5IChmb3IgZXhhbXBsZSwgdHJ1bmNhdGUpLiAqLworCisJLyogQ2hlY2sgam5vZGUgc3RhdGUg
YWZ0ZXIgZmx1c2hfc2NhbiBjb21wbGV0ZWQuIEhhdmluZyBhIGxvY2sgb24gdGhpcworCSAgIG5v
ZGUgb3IgaXRzIHBhcmVudCAoaW4gY2FzZSBvZiB1bmZvcm1hdHRlZCkgaGVscHMgdXMgaW4gY2Fz
ZSBvZgorCSAgIGNvbmN1cnJlbnQgZmx1c2hpbmcuICovCisJaWYgKGpub2RlX2NoZWNrX2ZsdXNo
cHJlcHBlZChsZWZ0bW9zdF9pbl9zbHVtKQorCSAgICAmJiAham5vZGVfY29udmVydGlibGUobGVm
dG1vc3RfaW5fc2x1bSkpIHsKKwkJcmV0ID0gMDsKKwkJZ290byBmYWlsZWQ7CisJfQorCisJLyog
Tm93IHNldHVwIGZsdXNoX3BvcyB1c2luZyBzY2FuX2xlZnQncyBlbmRwb2ludC4gKi8KKwlyZXQg
PSBwcmVwYXJlX2ZsdXNoX3BvcyhmbHVzaF9wb3MsIGxlZnRtb3N0X2luX3NsdW0pOworCWlmIChy
ZXQpCisJCWdvdG8gZmFpbGVkOworCisJaWYgKHpub2RlX2dldF9sZXZlbChmbHVzaF9wb3MtPmNv
b3JkLm5vZGUpID09IExFQUZfTEVWRUwKKwkgICAgJiYgbm9kZV9pc19lbXB0eShmbHVzaF9wb3Mt
PmNvb3JkLm5vZGUpKSB7CisJCXpub2RlICplbXB0eSA9IGZsdXNoX3Bvcy0+Y29vcmQubm9kZTsK
KworCQlhc3NlcnQoInphbS0xMDIyIiwgIVpGX0lTU0VUKGVtcHR5LCBKTk9ERV9IRUFSRF9CQU5T
SEVFKSk7CisJCXJldCA9IGRlbGV0ZV9lbXB0eV9ub2RlKGVtcHR5KTsKKwkJZ290byBmYWlsZWQ7
CisJfQorCisJaWYgKGpub2RlX2NoZWNrX2ZsdXNocHJlcHBlZChsZWZ0bW9zdF9pbl9zbHVtKQor
CSAgICAmJiAham5vZGVfY29udmVydGlibGUobGVmdG1vc3RfaW5fc2x1bSkpIHsKKwkJcmV0ID0g
MDsKKwkJZ290byBmYWlsZWQ7CisJfQorCisJLyogU2V0IHBvcy0+cHJlY2VkZXIgYW5kIChyZSlh
bGxvY2F0ZSBwb3MgYW5kIGl0cyBhbmNlc3RvcnMgaWYgaXQgaXMKKwkgICBuZWVkZWQgICovCisJ
cmV0ID0gYWxsb2NfcG9zX2FuZF9hbmNlc3RvcnMoZmx1c2hfcG9zKTsKKwlpZiAocmV0KQorCQln
b3RvIGZhaWxlZDsKKworCS8qIERvIHRoZSBtYWluIHJpZ2h0d2FyZC1ib3R0b20tdXAgc3F1ZWV6
ZSBhbmQgYWxsb2NhdGUgbG9vcC4gKi8KKwlyZXQgPSBzcXVhbGxvYyhmbHVzaF9wb3MpOworCXBv
c19zdG9wKGZsdXNoX3Bvcyk7CisJaWYgKHJldCkKKwkJZ290byBmYWlsZWQ7CisKKwkvKiBGSVhN
RV9ORlFVQ01QRDogSGVyZSwgaGFuZGxlIHRoZSB0d2lnLXNwZWNpYWwgY2FzZSBmb3IgdW5hbGxv
Y2F0ZWQKKwkgICBjaGlsZHJlbi4gRmlyc3QsIHRoZSBwb3Nfc3RvcCgpIGFuZCBwb3NfdmFsaWQo
KSByb3V0aW5lcyBzaG91bGQgYmUKKwkgICBtb2RpZmllZCBzbyB0aGF0IHBvc19zdG9wKCkgc2V0
cyBhIGZsdXNoX3Bvc2l0aW9uLT5zdG9wIGZsYWcgdG8gMQorCSAgIHdpdGhvdXQgcmVsZWFzaW5n
IHRoZSBjdXJyZW50IHBvc2l0aW9uIGltbWVkaWF0ZWx5LS1pbnN0ZWFkIHJlbGVhc2UKKwkgICBp
dCBpbiBwb3NfZG9uZSgpLiBUaGlzIGlzIGEgYmV0dGVyIGltcGxlbWVudGF0aW9uIHRoYW4gdGhl
IGN1cnJlbnQKKwkgICBvbmUgYW55d2F5LgorCisJICAgSXQgaXMgbm90IGNsZWFyIHRoYXQgYWxs
IGZpZWxkcyBvZiB0aGUgZmx1c2hfcG9zaXRpb24gc2hvdWxkIG5vdCBiZQorCSAgIHJlbGVhc2Vk
LCBidXQgYXQgdGhlIHZlcnkgbGVhc3QgdGhlIHBhcmVudF9sb2NrLCBwYXJlbnRfY29vcmQsIGFu
ZAorCSAgIHBhcmVudF9sb2FkIHNob3VsZCByZW1haW4gaGVsZCBiZWNhdXNlIHRoZXkgYXJlIGhv
bGQgdGhlIGxhc3QgdHdpZworCSAgIHdoZW4gcG9zX3N0b3AoKSBpcyBjYWxsZWQuCisKKwkgICBX
aGVuIHdlIHJlYWNoIHRoaXMgcG9pbnQgaW4gdGhlIGNvZGUsIGlmIHRoZSBwYXJlbnRfY29vcmQg
aXMgc2V0IHRvCisJICAgYWZ0ZXIgdGhlIGxhc3QgaXRlbSB0aGVuIHdlIGtub3cgdGhhdCBmbHVz
aCByZWFjaGVkIHRoZSBlbmQgb2YgYSB0d2lnCisJICAgKGFuZCBhY2NvcmRpbmcgdG8gdGhlIG5l
dyBmbHVzaCBxdWV1ZWluZyBkZXNpZ24sIHdlIHdpbGwgcmV0dXJuIG5vdykuCisJICAgSWYgcGFy
ZW50X2Nvb3JkIGlzIG5vdCBwYXN0IHRoZSBsYXN0IGl0ZW0sIHdlIHNob3VsZCBjaGVjayBpZiB0
aGUKKwkgICBjdXJyZW50IHR3aWcgaGFzIGFueSB1bmFsbG9jYXRlZCBjaGlsZHJlbiB0byB0aGUg
cmlnaHQgKHdlIGFyZSBub3QKKwkgICBjb25jZXJuZWQgd2l0aCB1bmFsbG9jYXRlZCBjaGlsZHJl
biB0byB0aGUgbGVmdC0taW4gdGhhdCBjYXNlIHRoZQorCSAgIHR3aWcgaXRzZWxmIHNob3VsZCBu
b3QgaGF2ZSBiZWVuIGFsbG9jYXRlZCkuIElmIHRoZSB0d2lnIGhhcworCSAgIHVuYWxsb2NhdGVk
IGNoaWxkcmVuIHRvIHRoZSByaWdodCwgc2V0IHRoZSBwYXJlbnRfY29vcmQgdG8gdGhhdAorCSAg
IHBvc2l0aW9uIGFuZCB0aGVuIHJlcGVhdCB0aGUgY2FsbCB0byBzcXVhbGxvYy4KKworCSAgIFRl
c3RpbmcgZm9yIHVuYWxsb2NhdGVkIGNoaWxkcmVuIG1heSBiZSBkZWZpbmVkIGluIHR3byB3YXlz
OiBpZiBhbnkKKwkgICBpbnRlcm5hbCBpdGVtIGhhcyBhIGZha2UgYmxvY2sgbnVtYmVyLCBpdCBp
cyB1bmFsbG9jYXRlZDsgaWYgYW55CisJICAgZXh0ZW50IGl0ZW0gaXMgdW5hbGxvY2F0ZWQgdGhl
biBhbGwgb2YgaXRzIGNoaWxkcmVuIGFyZSB1bmFsbG9jYXRlZC4KKwkgICBCdXQgdGhlcmUgaXMg
YSBtb3JlIGFnZ3Jlc3NpdmUgYXBwcm9hY2g6IGlmIHRoZXJlIGFyZSBhbnkgZGlydHkKKwkgICBj
aGlsZHJlbiBvZiB0aGUgdHdpZyB0byB0aGUgcmlnaHQgb2YgdGhlIGN1cnJlbnQgcG9zaXRpb24s
IHdlIG1heQorCSAgIHdpc2ggdG8gcmVsb2NhdGUgdGhvc2Ugbm9kZXMgbm93LiBDaGVja2luZyBm
b3IgcG90ZW50aWFsIHJlbG9jYXRpb24KKwkgICBpcyBtb3JlIGV4cGVuc2l2ZSBhcyBpdCByZXF1
aXJlcyBrbm93aW5nIHdoZXRoZXIgdGhlcmUgYXJlIGFueSBkaXJ0eQorCSAgIGNoaWxkcmVuIHRo
YXQgYXJlIG5vdCB1bmFsbG9jYXRlZC4gVGhlIGV4dGVudF9uZWVkc19hbGxvY2F0aW9uIHNob3Vs
ZAorCSAgIGJlIHVzZWQgYWZ0ZXIgc2V0dGluZyB0aGUgY29ycmVjdCBwcmVjZWRlci4KKworCSAg
IFdoZW4gd2UgcmVhY2ggdGhlIGVuZCBvZiBhIHR3aWcgYXQgdGhpcyBwb2ludCBpbiB0aGUgY29k
ZSwgaWYgdGhlCisJICAgZmx1c2ggY2FuIGNvbnRpbnVlICh3aGVuIHRoZSBxdWV1ZSBpcyByZWFk
eSkgaXQgd2lsbCBuZWVkIHNvbWUKKwkgICBpbmZvcm1hdGlvbiBvbiB0aGUgZnV0dXJlIHN0YXJ0
aW5nIHBvaW50LiBUaGF0IHNob3VsZCBiZSBzdG9yZWQgYXdheQorCSAgIGluIHRoZSBmbHVzaF9o
YW5kbGUgdXNpbmcgYSBzZWFsLCBJIGJlbGlldmUuIEhvbGRpbmcgYSBqcmVmKCkgb24gdGhlCisJ
ICAgZnV0dXJlIHN0YXJ0aW5nIHBvaW50IG1heSBicmVhayBvdGhlciBjb2RlIHRoYXQgZGVsZXRl
cyB0aGF0IG5vZGUuCisJICovCisKKwkvKiBGSVhNRV9ORlFVQ01QRDogQWxzbywgd2UgZG9uJ3Qg
d2FudCB0byBkbyBhbnkgZmx1c2hpbmcgd2hlbiBmbHVzaCBpcworCSAgIGNhbGxlZCBhYm92ZSB0
aGUgdHdpZyBsZXZlbC4gIElmIHRoZSBWTSBjYWxscyBmbHVzaCBhYm92ZSB0aGUgdHdpZworCSAg
IGxldmVsLCBkbyBub3RoaW5nIGFuZCByZXR1cm4gKGJ1dCBmaWd1cmUgb3V0IHdoeSB0aGlzIGhh
cHBlbnMpLiBUaGUKKwkgICB0eG5tZ3Igc2hvdWxkIGJlIG1vZGlmaWVkIHRvIG9ubHkgZmx1c2gg
aXRzIGxlYWYtbGV2ZWwgZGlydHkgbGlzdC4KKwkgICBUaGlzIHdpbGwgZG8gYWxsIHRoZSBuZWNl
c3Nhcnkgc3F1ZWV6ZSBhbmQgYWxsb2NhdGUgc3RlcHMgYnV0IGxlYXZlCisJICAgdW5hbGxvY2F0
ZWQgYnJhbmNoZXMgYW5kIHBvc3NpYmx5IHVuYWxsb2NhdGVkIHR3aWdzICh3aGVuIHRoZSB0d2ln
J3MKKwkgICBsZWZ0bW9zdCBjaGlsZCBpcyBub3QgZGlydHkpLiBBZnRlciBmbHVzaGluZyB0aGUg
bGVhZiBsZXZlbCwgdGhlCisJICAgcmVtYWluaW5nIHVuYWxsb2NhdGVkIG5vZGVzIHNob3VsZCBi
ZSBnaXZlbiB3cml0ZS1vcHRpbWl6ZWQKKwkgICBsb2NhdGlvbnMuIChQb3NzaWJseSwgdGhlIHJl
bWFpbmluZyB1bmFsbG9jYXRlZCB0d2lncyBzaG91bGQgYmUKKwkgICBhbGxvY2F0ZWQganVzdCBi
ZWZvcmUgdGhlaXIgbGVmdG1vc3QgY2hpbGQuKQorCSAqLworCisJLyogQW55IGZhaWx1cmUgcmVh
Y2hlcyB0aGlzIHBvaW50LiAqLworZmFpbGVkOgorCisJc3dpdGNoIChyZXQpIHsKKwljYXNlIC1F
X1JFUEVBVDoKKwljYXNlIC1FSU5WQUw6CisJY2FzZSAtRV9ERUFETE9DSzoKKwljYXNlIC1FX05P
X05FSUdIQk9SOgorCWNhc2UgLUVOT0VOVDoKKwkJLyogRklYTUUoQyk6IEV4Y2VwdCBmb3IgRV9E
RUFETE9DSywgdGhlc2Ugc2hvdWxkIHByb2JhYmx5IGJlCisJCSAgIGhhbmRsZWQgcHJvcGVybHkg
aW4gZWFjaCBjYXNlLiBUaGV5IGFscmVhZHkgYXJlIGhhbmRsZWQgaW4KKwkJICAgbWFueSBjYXNl
cy4gKi8KKwkJLyogU29tZXRoaW5nIGJhZCBoYXBwZW5lZCwgYnV0IGRpZmZpY3VsdCB0byBhdm9p
ZC4uLiBUcnkgYWdhaW4hCisJCSovCisJCXJldCA9IDA7CisJfQorCisJaWYgKGxlZnRtb3N0X2lu
X3NsdW0pCisJCWpwdXQobGVmdG1vc3RfaW5fc2x1bSk7CisKKwlwb3NfZG9uZShmbHVzaF9wb3Mp
OworCXNjYW5fZG9uZShsZWZ0X3NjYW4pOworCXNjYW5fZG9uZShyaWdodF9zY2FuKTsKKwlrZnJl
ZShyaWdodF9zY2FuKTsKKworCU9OX0RFQlVHKGF0b21pY19kZWMoJmZsdXNoX2NudCkpOworCisJ
cmVpc2VyNF9sZWF2ZV9mbHVzaChzYik7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBUaGUgcmVp
c2VyNCBmbHVzaCBzdWJzeXN0ZW0gY2FuIGJlIHR1cm5lZCBpbnRvICJyYXBpZCBmbHVzaCBtb2Rl
IiBtZWFucyB0aGF0CisgKiBmbHVzaGVyIHNob3VsZCBzdWJtaXQgYWxsIHByZXBwZWQgbm9kZXMg
aW1tZWRpYXRlbHkgd2l0aG91dCBrZWVwaW5nIHRoZW0gaW4KKyAqIGZsdXNoIHF1ZXVlcyBmb3Ig
bG9uZyB0aW1lLiAgVGhlIHJlYXNvbiBmb3IgcmFwaWQgZmx1c2ggbW9kZSBpcyB0byBmcmVlCisg
KiBtZW1vcnkgYXMgZmFzdCBhcyBwb3NzaWJsZS4gKi8KKworI2lmIFJFSVNFUjRfVVNFX1JBUElE
X0ZMVVNICisKKy8qKgorICogc3VibWl0IGFsbCBwcmVwcGVkIG5vZGVzIGlmIHJhcGlkIGZsdXNo
IG1vZGUgaXMgc2V0LAorICogdHVybiByYXBpZCBmbHVzaCBtb2RlIG9mZi4KKyAqLworCitzdGF0
aWMgaW50IHJhcGlkX2ZsdXNoKGZsdXNoX3Bvc190ICpwb3MpCit7CisJaWYgKCF3YnFfYXZhaWxh
YmxlKCkpCisJCXJldHVybiAwOworCisJcmV0dXJuIHdyaXRlX3ByZXBwZWRfbm9kZXMocG9zKTsK
K30KKworI2Vsc2UKKworI2RlZmluZSByYXBpZF9mbHVzaChwb3MpICgwKQorCisjZW5kaWYJCQkJ
LyogUkVJU0VSNF9VU0VfUkFQSURfRkxVU0ggKi8KKworc3RhdGljIGpub2RlICpmaW5kX2ZsdXNo
X3N0YXJ0X2pub2RlKGpub2RlICpzdGFydCwgdHhuX2F0b20gKiBhdG9tLAorCQkJCSAgICAgZmx1
c2hfcXVldWVfdCAqZnEsIGludCAqbnJfcXVldWVkLAorCQkJCSAgICAgaW50IGZsYWdzKQorewor
CWpub2RlICogbm9kZTsKKworCWlmIChzdGFydCAhPSBOVUxMKSB7CisJCXNwaW5fbG9ja19qbm9k
ZShzdGFydCk7CisJCWlmICgham5vZGVfaXNfZmx1c2hwcmVwcGVkKHN0YXJ0KSkgeworCQkJYXNz
ZXJ0KCJ6YW0tMTA1NiIsIHN0YXJ0LT5hdG9tID09IGF0b20pOworCQkJbm9kZSA9IHN0YXJ0Owor
CQkJZ290byBlbnRlcjsKKwkJfQorCQlzcGluX3VubG9ja19qbm9kZShzdGFydCk7CisJfQorCS8q
CisJICogSW4gdGhpcyBsb29wIHdlIHByb2Nlc3MgYWxsIGFscmVhZHkgcHJlcHBlZCAoUkVMT0Mg
b3IgT1ZSV1IpIGFuZAorCSAqIGRpcnRpZWQgYWdhaW4gbm9kZXMuIFRoZSBhdG9tIHNwaW4gbG9j
ayBpcyBub3QgcmVsZWFzZWQgdW50aWwgYWxsCisJICogZGlydHkgbm9kZXMgcHJvY2Vzc2VkIG9y
IG5vdCBwcmVwcGVkIG5vZGUgZm91bmQgaW4gdGhlIGF0b20gZGlydHkKKwkgKiBsaXN0cy4KKwkg
Ki8KKwl3aGlsZSAoKG5vZGUgPSBmaW5kX2ZpcnN0X2RpcnR5X2pub2RlKGF0b20sIGZsYWdzKSkp
IHsKKwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworZW50ZXI6CisJCWFzc2VydCgiemFtLTg4MSIs
IEpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSk7CisJCWFzc2VydCgiemFtLTg5OCIsICFKRl9J
U1NFVChub2RlLCBKTk9ERV9PVlJXUikpOworCisJCWlmIChKRl9JU1NFVChub2RlLCBKTk9ERV9X
UklURUJBQ0spKSB7CisJCQkvKiBtb3ZlIG5vZGUgdG8gdGhlIGVuZCBvZiBhdG9tJ3Mgd3JpdGVi
YWNrIGxpc3QgKi8KKwkJCWxpc3RfbW92ZV90YWlsKCZub2RlLT5jYXB0dXJlX2xpbmssIEFUT01f
V0JfTElTVChhdG9tKSk7CisKKwkJCS8qCisJCQkgKiBqbm9kZSBpcyBub3QgbmVjZXNzYXJpbHkg
b24gZGlydHkgbGlzdDogaWYgaXQgd2FzCisJCQkgKiBkaXJ0aWVkIHdoZW4gaXQgd2FzIG9uIGZs
dXNoIHF1ZXVlIC0gaXQgZG9lcyBub3QgZ2V0CisJCQkgKiBtb3ZlZCB0byBkaXJ0eSBsaXN0CisJ
CQkgKi8KKwkJCU9OX0RFQlVHKGNvdW50X2pub2RlKGF0b20sIG5vZGUsIE5PREVfTElTVChub2Rl
KSwKKwkJCQkJICAgICBXQl9MSVNULCAxKSk7CisKKwkJfSBlbHNlIGlmIChqbm9kZV9pc196bm9k
ZShub2RlKQorCQkJICAgJiYgem5vZGVfYWJvdmVfcm9vdChKWk5PREUobm9kZSkpKSB7CisJCQkv
KgorCQkJICogQSBzcGVjaWFsIGNhc2UgZm9yIHpub2RlLWFib3ZlLXJvb3QuIFRoZSBhYm92ZS1y
b290CisJCQkgKiAoZmFrZSkgem5vZGUgaXMgY2FwdHVyZWQgYW5kIGRpcnRpZWQgd2hlbiB0aGUg
dHJlZQorCQkJICogaGVpZ2h0IGNoYW5nZXMgb3Igd2hlbiB0aGUgcm9vdCBub2RlIGlzIHJlbG9j
YXRlZC4KKwkJCSAqIFRoaXMgY2F1c2VzIGF0b21zIHRvIGZ1c2Ugc28gdGhhdCBjaGFuZ2VzIGF0
IHRoZSByb290CisJCQkgKiBhcmUgc2VyaWFsaXplZC4gIEhvd2V2ZXIsIHRoaXMgbm9kZSBpcyBu
ZXZlciBmbHVzaGVkLgorCQkJICogVGhpcyBzcGVjaWFsIGNhc2UgdXNlZCB0byBiZSBpbiBsb2Nr
LmMgdG8gcHJldmVudCB0aGUKKwkJCSAqIGFib3ZlLXJvb3Qgbm9kZSBmcm9tIGV2ZXIgYmVpbmcg
Y2FwdHVyZWQsIGJ1dCBub3cKKwkJCSAqIHRoYXQgaXQgaXMgY2FwdHVyZWQgd2Ugc2ltcGx5IHBy
ZXZlbnQgaXQgZnJvbQorCQkJICogZmx1c2hpbmcuIFRoZSBsb2ctd3JpdGVyIGNvZGUgcmVsaWVz
IG9uIHRoaXMgdG8KKwkJCSAqIHByb3Blcmx5IGxvZyBzdXBlcmJsb2NrIG1vZGlmaWNhdGlvbnMg
b2YgdGhlIHRyZWUKKwkJCSAqIGhlaWdodC4KKwkJCSAqLworCQkJam5vZGVfbWFrZV93YW5kZXJf
bm9sb2NrKG5vZGUpOworCQl9IGVsc2UgaWYgKEpGX0lTU0VUKG5vZGUsIEpOT0RFX1JFTE9DKSkg
eworCQkJcXVldWVfam5vZGUoZnEsIG5vZGUpOworCQkJKysoKm5yX3F1ZXVlZCk7CisJCX0gZWxz
ZQorCQkJYnJlYWs7CisKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJfQorCXJldHVybiBu
b2RlOworfQorCisvKiBGbHVzaCBzb21lIG5vZGVzIG9mIGN1cnJlbnQgYXRvbSwgdXN1YWxseSBz
bHVtLCByZXR1cm4gLUVfUkVQRUFUIGlmIHRoZXJlIGFyZQorICogbW9yZSBub2RlcyB0byBmbHVz
aCwgcmV0dXJuIDAgaWYgYXRvbSdzIGRpcnR5IGxpc3RzIGVtcHR5IGFuZCBrZWVwIGN1cnJlbnQK
KyAqIGF0b20gbG9ja2VkLCByZXR1cm4gb3RoZXIgZXJyb3JzIGFzIHRoZXkgYXJlLiAqLworaW50
CitmbHVzaF9jdXJyZW50X2F0b20oaW50IGZsYWdzLCBsb25nIG5yX3RvX3dyaXRlLCBsb25nICpu
cl9zdWJtaXR0ZWQsCisJCSAgIHR4bl9hdG9tICoqIGF0b20sIGpub2RlICpzdGFydCkKK3sKKwly
ZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2luZm8gPSBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRl
KCk7CisJZmx1c2hfcXVldWVfdCAqZnEgPSBOVUxMOworCWpub2RlICpub2RlOworCWludCBucl9x
dWV1ZWQ7CisJaW50IHJldDsKKworCWFzc2VydCgiemFtLTg4OSIsIGF0b20gIT0gTlVMTCAmJiAq
YXRvbSAhPSBOVUxMKTsKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJigoKmF0b20pLT5hbG9jaykpOwor
CWFzc2VydCgiemFtLTg5MiIsIGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gPT0g
KmF0b20pOworCisJQlVHX09OKHNiX3Jkb25seShnZXRfY3VycmVudF9jb250ZXh0KCktPnN1cGVy
KSk7CisKKwlucl90b193cml0ZSA9IExPTkdfTUFYOworCXdoaWxlICgxKSB7CisJCXJldCA9IHJl
aXNlcjRfZnFfYnlfYXRvbSgqYXRvbSwgJmZxKTsKKwkJaWYgKHJldCAhPSAtRV9SRVBFQVQpCisJ
CQlicmVhazsKKwkJKmF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCX0KKwlpZiAo
cmV0KQorCQlyZXR1cm4gcmV0OworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYoKCphdG9tKS0+YWxv
Y2spKTsKKworCS8qIHBhcmFsbGVsIGZsdXNoZXJzIGxpbWl0ICovCisJaWYgKHNpbmZvLT50bWdy
LmF0b21fbWF4X2ZsdXNoZXJzICE9IDApIHsKKwkJd2hpbGUgKCgqYXRvbSktPm5yX2ZsdXNoZXJz
ID49IHNpbmZvLT50bWdyLmF0b21fbWF4X2ZsdXNoZXJzKSB7CisJCQkvKiBBbiByZWlzZXI0X2F0
b21fc2VuZF9ldmVudCgpIGNhbGwgaXMgaW5zaWRlCisJCQkgICByZWlzZXI0X2ZxX3B1dF9ub2xv
Y2soKSB3aGljaCBpcyBjYWxsZWQgd2hlbiBmbHVzaCBpcworCQkJICAgZmluaXNoZWQgYW5kIG5y
X2ZsdXNoZXJzIGlzIGRlY3JlbWVudGVkLiAqLworCQkJcmVpc2VyNF9hdG9tX3dhaXRfZXZlbnQo
KmF0b20pOworCQkJKmF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCQl9CisJfQor
CisJLyogY291bnQgb3Vyc2VsZiBhcyBhIGZsdXNoZXIgKi8KKwkoKmF0b20pLT5ucl9mbHVzaGVy
cysrOworCisJd3JpdGVvdXRfbW9kZV9lbmFibGUoKTsKKworCW5yX3F1ZXVlZCA9IDA7CisJbm9k
ZSA9IGZpbmRfZmx1c2hfc3RhcnRfam5vZGUoc3RhcnQsICphdG9tLCBmcSwgJm5yX3F1ZXVlZCwg
ZmxhZ3MpOworCisJaWYgKG5vZGUgPT0gTlVMTCkgeworCQlpZiAobnJfcXVldWVkID09IDApIHsK
KwkJCSgqYXRvbSktPm5yX2ZsdXNoZXJzLS07CisJCQlyZWlzZXI0X2ZxX3B1dF9ub2xvY2soZnEp
OworCQkJcmVpc2VyNF9hdG9tX3NlbmRfZXZlbnQoKmF0b20pOworCQkJLyogY3VycmVudCBhdG9t
IHJlbWFpbnMgbG9ja2VkICovCisJCQl3cml0ZW91dF9tb2RlX2Rpc2FibGUoKTsKKwkJCXJldHVy
biAwOworCQl9CisJCXNwaW5fdW5sb2NrX2F0b20oKmF0b20pOworCX0gZWxzZSB7CisJCWpyZWYo
bm9kZSk7CisJCUJVR19PTigoKmF0b20pLT5zdXBlciAhPSBub2RlLT50cmVlLT5zdXBlcik7CisJ
CXNwaW5fdW5sb2NrX2F0b20oKmF0b20pOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJ
QlVHX09OKG5yX3RvX3dyaXRlID09IDApOworCQlyZXQgPSBqbm9kZV9mbHVzaChub2RlLCBucl90
b193cml0ZSwgbnJfc3VibWl0dGVkLCBmcSwgZmxhZ3MpOworCQlqcHV0KG5vZGUpOworCX0KKwor
CXJldCA9CisJICAgIHJlaXNlcjRfd3JpdGVfZnEoZnEsIG5yX3N1Ym1pdHRlZCwKKwkJICAgICBX
UklURU9VVF9TSU5HTEVfU1RSRUFNIHwgV1JJVEVPVVRfRk9SX1BBR0VfUkVDTEFJTSk7CisKKwkq
YXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkKCk7CisJKCphdG9tKS0+bnJfZmx1c2hlcnMt
LTsKKwlyZWlzZXI0X2ZxX3B1dF9ub2xvY2soZnEpOworCXJlaXNlcjRfYXRvbV9zZW5kX2V2ZW50
KCphdG9tKTsKKwlzcGluX3VubG9ja19hdG9tKCphdG9tKTsKKworCXdyaXRlb3V0X21vZGVfZGlz
YWJsZSgpOworCisJaWYgKHJldCA9PSAwKQorCQlyZXQgPSAtRV9SRVBFQVQ7CisKKwlyZXR1cm4g
cmV0OworfQorCisvKioKKyAqIFRoaXMgZnVuY3Rpb24gY2FsbHMgdHhtb2QtPnJldmVyc2VfYWxs
b2NfZm9ybWF0dGVkKCkgdG8gbWFrZSBhCisgKiByZXZlcnNlLXBhcmVudC1maXJzdCByZWxvY2F0
aW9uIGRlY2lzaW9uIGFuZCB0aGVuLCBpZiB5ZXMsIGl0IG1hcmtzCisgKiB0aGUgcGFyZW50IGRp
cnR5LgorICovCitzdGF0aWMgaW50IHJldmVyc2VfYWxsb2NhdGVfcGFyZW50KGpub2RlICogbm9k
ZSwKKwkJCQkgICBjb25zdCBjb29yZF90ICpwYXJlbnRfY29vcmQsCisJCQkJICAgZmx1c2hfcG9z
X3QgKnBvcykKK3sKKwlpbnQgcmV0OworCisJaWYgKCFKRl9JU1NFVChaSk5PREUocGFyZW50X2Nv
b3JkLT5ub2RlKSwgSk5PREVfRElSVFkpKSB7CisJCXR4bW9kX3BsdWdpbiAqdHhtb2RfcGx1ZyA9
IGdldF90eG1vZF9wbHVnaW4oKTsKKworCQlpZiAoIXR4bW9kX3BsdWctPnJldmVyc2VfYWxsb2Nf
Zm9ybWF0dGVkKQorCQkJcmV0dXJuIDA7CisJCXJldCA9IHR4bW9kX3BsdWctPnJldmVyc2VfYWxs
b2NfZm9ybWF0dGVkKG5vZGUsCisJCQkJCQkJICBwYXJlbnRfY29vcmQsIHBvcyk7CisJCWlmIChy
ZXQgPCAwKQorCQkJcmV0dXJuIHJldDsKKwkJLyoKKwkJICogRklYTUUtWkFNOiBpZiBwYXJlbnQg
aXMgYWxyZWFkeSByZWxvY2F0ZWQgLQorCQkgKiB3ZSBkbyBub3Qgd2FudCB0byBncmFiIHNwYWNl
LCByaWdodD8KKwkJICovCisJCWlmIChyZXQgPT0gMSkgeworCQkJaW50IGdyYWJiZWQ7CisKKwkJ
CWdyYWJiZWQgPSBnZXRfY3VycmVudF9jb250ZXh0KCktPmdyYWJiZWRfYmxvY2tzOworCQkJaWYg
KHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZSgoX191NjQpIDEsIEJBX1JFU0VSVkVEKSAhPQorCQkJ
ICAgIDApCisJCQkJcmVpc2VyNF9wYW5pYygidW1rYS0xMjUwIiwKKwkJCQkJICAgICAgIk5vIHNw
YWNlIGxlZnQgZHVyaW5nIGZsdXNoLiIpOworCisJCQlhc3NlcnQoImptYWNkLTE4OTIzIiwKKwkJ
CSAgICAgICB6bm9kZV9pc193cml0ZV9sb2NrZWQocGFyZW50X2Nvb3JkLT5ub2RlKSk7CisJCQl6
bm9kZV9tYWtlX2RpcnR5KHBhcmVudF9jb29yZC0+bm9kZSk7CisJCQlncmFiYmVkMmZyZWVfbWFy
ayhncmFiYmVkKTsKKwkJfQorCX0KKwlyZXR1cm4gMDsKK30KKworLyogSU5JVElBTCBBTExPQ0FU
RSBBTkNFU1RPUlMgU1RFUCAoUkVWRVJTRSBQQVJFTlQtRklSU1QgQUxMT0NBVElPTiBCRUZPUkUK
KyAgIEZPUldBUkQgUEFSRU5ULUZJUlNUIExPT1AgQkVHSU5TKSAqLworCisvKiBHZXQgdGhlIGxl
ZnRtb3N0IGNoaWxkIGZvciBnaXZlbiBjb29yZC4gKi8KK3N0YXRpYyBpbnQgZ2V0X2xlZnRtb3N0
X2NoaWxkX29mX3VuaXQoY29uc3QgY29vcmRfdCAqY29vcmQsIGpub2RlICoqIGNoaWxkKQorewor
CWludCByZXQ7CisKKwlyZXQgPSBpdGVtX3V0bW9zdF9jaGlsZChjb29yZCwgTEVGVF9TSURFLCBj
aGlsZCk7CisKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJaWYgKElTX0VSUigqY2hpbGQp
KQorCQlyZXR1cm4gUFRSX0VSUigqY2hpbGQpOworCisJcmV0dXJuIDA7Cit9CisKKy8qIFRoaXMg
c3RlcCBvY2N1cnMgYWZ0ZXIgdGhlIGxlZnQtIGFuZCByaWdodC1zY2FucyBhcmUgY29tcGxldGVk
LCBiZWZvcmUKKyAgIHN0YXJ0aW5nIHRoZSBmb3J3YXJkIHBhcmVudC1maXJzdCB0cmF2ZXJzYWwu
IEhlcmUgd2UgYXR0ZW1wdCB0byBhbGxvY2F0ZQorICAgYW5jZXN0b3JzIG9mIHRoZSBzdGFydGlu
ZyBmbHVzaCBwb2ludCwgd2hpY2ggbWVhbnMgY29udGludWluZyBpbiB0aGUgcmV2ZXJzZQorICAg
cGFyZW50LWZpcnN0IGRpcmVjdGlvbiB0byB0aGUgcGFyZW50LCBncmFuZHBhcmVudCwgYW5kIHNv
IG9uIChhcyBsb25nIGFzIHRoZQorICAgY2hpbGQgaXMgYSBsZWZ0bW9zdCBjaGlsZCkuIFRoaXMg
cm91dGluZSBjYWxscyBhIHJlY3Vyc2l2ZSBwcm9jZXNzLAorICAgYWxsb2Nfb25lX2FuY2VzdG9y
LCB3aGljaCBkb2VzIHRoZSByZWFsIHdvcmssIGV4Y2VwdCB0aGVyZSBpcyBzcGVjaWFsLWNhc2UK
KyAgIGhhbmRsaW5nIGhlcmUgZm9yIHRoZSBmaXJzdCBhbmNlc3Rvciwgd2hpY2ggbWF5IGJlIGEg
dHdpZy4gQXQgZWFjaCBsZXZlbAorICAgKGhlcmUgYW5kIGFsbG9jX29uZV9hbmNlc3RvciksIHdl
IGNoZWNrIGZvciByZWxvY2F0aW9uIGFuZCB0aGVuLCBpZiB0aGUgY2hpbGQKKyAgIGlzIGEgbGVm
dG1vc3QgY2hpbGQsIHJlcGVhdCBhdCB0aGUgbmV4dCBsZXZlbC4gT24gdGhlIHdheSBiYWNrIGRv
d24gKHRoZQorICAgcmVjdXJzaW9uKSwgd2UgYWxsb2NhdGUgdGhlIGFuY2VzdG9ycyBpbiBwYXJl
bnQtZmlyc3Qgb3JkZXIuICovCitzdGF0aWMgaW50IGFsbG9jX3Bvc19hbmRfYW5jZXN0b3JzKGZs
dXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldCA9IDA7CisJbG9ja19oYW5kbGUgcGxvY2s7CisJ
bG9hZF9jb3VudCBwbG9hZDsKKwljb29yZF90IHBjb29yZDsKKworCWlmICh6bm9kZV9jaGVja19m
bHVzaHByZXBwZWQocG9zLT5sb2NrLm5vZGUpKQorCQlyZXR1cm4gMDsKKworCWNvb3JkX2luaXRf
aW52YWxpZCgmcGNvb3JkLCBOVUxMKTsKKwlpbml0X2xoKCZwbG9jayk7CisJaW5pdF9sb2FkX2Nv
dW50KCZwbG9hZCk7CisKKwlpZiAocG9zLT5zdGF0ZSA9PSBQT1NfT05fRVBPSU5UKSB7CisJCS8q
IGEgc3BlY2lhbCBjYXNlIGZvciBwb3Mgb24gdHdpZyBsZXZlbCwgd2hlcmUgd2UgYWxyZWFkeSBo
YXZlCisJCSAgIGEgbG9jayBvbiBwYXJlbnQgbm9kZS4gKi8KKwkJLyogVGhlIHBhcmVudCBtYXkg
bm90IGJlIGRpcnR5LCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBkZWNpZGUKKwkJICAgd2hldGhl
ciB0byByZWxvY2F0ZSB0aGUgY2hpbGQgbm93LiBJZiBkZWNpc2lvbiBpcyBtYWRlIHRvCisJCSAg
IHJlbG9jYXRlIHRoZSBjaGlsZCwgdGhlIHBhcmVudCBpcyBtYXJrZWQgZGlydHkuICovCisJCXJl
dCA9IHJldmVyc2VfYWxsb2NhdGVfcGFyZW50KHBvcy0+Y2hpbGQsICZwb3MtPmNvb3JkLCBwb3Mp
OworCQlpZiAocmV0KQorCQkJZ290byBleGl0OworCisJCS8qIEZJWE1FX05GUVVDTVBEOiBXZSBv
bmx5IG5lZWQgdG8gYWxsb2NhdGUgdGhlIHR3aWcgKGlmIGNoaWxkCisJCSAgIGlzIGxlZnRtb3N0
KSBhbmQgdGhlIGxlYWYvY2hpbGQsIHNvIHJlY3Vyc2lvbiBpcyBub3QgbmVlZGVkLgorCQkgICBM
ZXZlbHMgYWJvdmUgdGhlIHR3aWcgd2lsbCBiZSBhbGxvY2F0ZWQgZm9yCisJCSAgIHdyaXRlLW9w
dGltaXphdGlvbiBiZWZvcmUgdGhlIHRyYW5zYWN0aW9uIGNvbW1pdHMuICAqLworCisJCS8qIERv
IHRoZSByZWN1cnNpdmUgc3RlcCwgYWxsb2NhdGluZyB6ZXJvIG9yIG1vcmUgb2Ygb3VyCisJCSAq
IGFuY2VzdG9ycy4gKi8KKwkJcmV0ID0gYWxsb2Nfb25lX2FuY2VzdG9yKCZwb3MtPmNvb3JkLCBw
b3MpOworCisJfSBlbHNlIHsKKwkJaWYgKCF6bm9kZV9pc19yb290KHBvcy0+bG9jay5ub2RlKSkg
eworCQkJLyogYWxsIGZvcm1hdHRlZCBub2RlcyBleGNlcHQgdHJlZSByb290ICovCisJCQlyZXQg
PQorCQkJICAgIHJlaXNlcjRfZ2V0X3BhcmVudCgmcGxvY2ssIHBvcy0+bG9jay5ub2RlLAorCQkJ
CQkgICAgICAgWk5PREVfV1JJVEVfTE9DSyk7CisJCQlpZiAocmV0KQorCQkJCWdvdG8gZXhpdDsK
KworCQkJcmV0ID0gaW5jcl9sb2FkX2NvdW50X3pub2RlKCZwbG9hZCwgcGxvY2subm9kZSk7CisJ
CQlpZiAocmV0KQorCQkJCWdvdG8gZXhpdDsKKworCQkJcmV0ID0KKwkJCSAgICBmaW5kX2NoaWxk
X3B0cihwbG9jay5ub2RlLCBwb3MtPmxvY2subm9kZSwgJnBjb29yZCk7CisJCQlpZiAocmV0KQor
CQkJCWdvdG8gZXhpdDsKKworCQkJcmV0ID0gcmV2ZXJzZV9hbGxvY2F0ZV9wYXJlbnQoWkpOT0RF
KHBvcy0+bG9jay5ub2RlKSwKKwkJCQkJCSAgICAgICZwY29vcmQsCisJCQkJCQkgICAgICBwb3Mp
OworCQkJaWYgKHJldCkKKwkJCQlnb3RvIGV4aXQ7CisKKwkJCXJldCA9IGFsbG9jX29uZV9hbmNl
c3RvcigmcGNvb3JkLCBwb3MpOworCQkJaWYgKHJldCkKKwkJCQlnb3RvIGV4aXQ7CisJCX0KKwor
CQlyZXQgPSBhbGxvY2F0ZV96bm9kZShwb3MtPmxvY2subm9kZSwgJnBjb29yZCwgcG9zKTsKKwl9
CitleGl0OgorCWRvbmVfbG9hZF9jb3VudCgmcGxvYWQpOworCWRvbmVfbGgoJnBsb2NrKTsKKwly
ZXR1cm4gcmV0OworfQorCisvKiBUaGlzIGlzIHRoZSByZWN1cnNpdmUgc3RlcCBkZXNjcmliZWQg
aW4gYWxsb2NfcG9zX2FuZF9hbmNlc3RvcnMsIGFib3ZlLgorICAgSWdub3JpbmcgdGhlIGNhbGwg
dG8gc2V0X3ByZWNlZGVyLCB3aGljaCBpcyB0aGUgbmV4dCBmdW5jdGlvbiBkZXNjcmliZWQsIHRo
aXMKKyAgIGNoZWNrcyBpZiB0aGUgY2hpbGQgaXMgYSBsZWZ0bW9zdCBjaGlsZCBhbmQgcmV0dXJu
cyBpZiBpdCBpcyBub3QuIElmIHRoZQorICAgY2hpbGQgaXMgYSBsZWZ0bW9zdCBjaGlsZCBpdCBj
aGVja3MgZm9yIHJlbG9jYXRpb24sIHBvc3NpYmx5IGRpcnR5aW5nIHRoZQorICAgcGFyZW50LiBU
aGVuIGl0IHBlcmZvcm1zIHRoZSByZWN1cnNpdmUgc3RlcC4gKi8KK3N0YXRpYyBpbnQgYWxsb2Nf
b25lX2FuY2VzdG9yKGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBmbHVzaF9wb3NfdCAqcG9zKQorewor
CWludCByZXQgPSAwOworCWxvY2tfaGFuZGxlIGFsb2NrOworCWxvYWRfY291bnQgYWxvYWQ7CisJ
Y29vcmRfdCBhY29vcmQ7CisKKwkvKiBBcyB3ZSBhc2NlbmQgYXQgdGhlIGxlZnQtZWRnZSBvZiB0
aGUgcmVnaW9uIHRvIGZsdXNoLCB0YWtlIHRoaXMKKwkgICBvcHBvcnR1bml0eSBhdCB0aGUgdHdp
ZyBsZXZlbCB0byBmaW5kIG91ciBwYXJlbnQtZmlyc3QgcHJlY2VkZXIKKwkgICB1bmxlc3Mgd2Ug
aGF2ZSBhbHJlYWR5IHNldCBpdC4gKi8KKwlpZiAocG9zLT5wcmVjZWRlci5ibGsgPT0gMCkgewor
CQlyZXQgPSBzZXRfcHJlY2VkZXIoY29vcmQsIHBvcyk7CisJCWlmIChyZXQgIT0gMCkKKwkJCXJl
dHVybiByZXQ7CisJfQorCisJLyogSWYgdGhlIGFuY2VzdG9yIGlzIGNsZWFuIG9yIGFscmVhZHkg
YWxsb2NhdGVkLCBvciBpZiB0aGUgY2hpbGQgaXMgbm90CisJICAgYSBsZWZ0bW9zdCBjaGlsZCwg
c3RvcCBnb2luZyB1cCwgZXZlbiBsZWF2aW5nIGNvb3JkLT5ub2RlIG5vdAorCSAgIGZsdXNocHJl
cHBlZC4gKi8KKwlpZiAoem5vZGVfY2hlY2tfZmx1c2hwcmVwcGVkKGNvb3JkLT5ub2RlKQorCSAg
ICB8fCAhY29vcmRfaXNfbGVmdG1vc3RfdW5pdChjb29yZCkpCisJCXJldHVybiAwOworCisJaW5p
dF9saCgmYWxvY2spOworCWluaXRfbG9hZF9jb3VudCgmYWxvYWQpOworCWNvb3JkX2luaXRfaW52
YWxpZCgmYWNvb3JkLCBOVUxMKTsKKworCS8qIE9ubHkgYXNjZW5kIHRvIHRoZSBuZXh0IGxldmVs
IGlmIGl0IGlzIGEgbGVmdG1vc3QgY2hpbGQsIGJ1dAorCSAgIHdyaXRlLWxvY2sgdGhlIHBhcmVu
dCBpbiBjYXNlIHdlIHdpbGwgcmVsb2NhdGUgdGhlIGNoaWxkLiAqLworCWlmICghem5vZGVfaXNf
cm9vdChjb29yZC0+bm9kZSkpIHsKKworCQlyZXQgPQorCQkgICAgam5vZGVfbG9ja19wYXJlbnRf
Y29vcmQoWkpOT0RFKGNvb3JkLT5ub2RlKSwgJmFjb29yZCwKKwkJCQkJICAgICZhbG9jaywgJmFs
b2FkLCBaTk9ERV9XUklURV9MT0NLLAorCQkJCQkgICAgMCk7CisJCWlmIChyZXQgIT0gMCkgewor
CQkJLyogRklYTUUoQyk6IGNoZWNrIEVJTlZBTCwgRV9ERUFETE9DSyAqLworCQkJZ290byBleGl0
OworCQl9CisKKwkJcmV0ID0gcmV2ZXJzZV9hbGxvY2F0ZV9wYXJlbnQoWkpOT0RFKGNvb3JkLT5u
b2RlKSwKKwkJCQkJICAgICAgJmFjb29yZCwgcG9zKTsKKwkJaWYgKHJldCAhPSAwKQorCQkJZ290
byBleGl0OworCisJCS8qIFJlY3Vyc2l2ZSBjYWxsLiAqLworCQlpZiAoIXpub2RlX2NoZWNrX2Zs
dXNocHJlcHBlZChhY29vcmQubm9kZSkpIHsKKwkJCXJldCA9IGFsbG9jX29uZV9hbmNlc3Rvcigm
YWNvb3JkLCBwb3MpOworCQkJaWYgKHJldCkKKwkJCQlnb3RvIGV4aXQ7CisJCX0KKwl9CisKKwkv
KiBOb3RlOiB3ZSBjYWxsIGFsbG9jYXRlIHdpdGggdGhlIHBhcmVudCB3cml0ZS1sb2NrZWQgKGV4
Y2VwdCBhdCB0aGUKKwkgICByb290KSBpbiBjYXNlIHdlIHJlbG9jYXRlIHRoZSBjaGlsZCwgaW4g
d2hpY2ggY2FzZSBpdCB3aWxsIG1vZGlmeSB0aGUKKwkgICBwYXJlbnQgZHVyaW5nIHRoaXMgY2Fs
bC4gKi8KKwlyZXQgPSBhbGxvY2F0ZV96bm9kZShjb29yZC0+bm9kZSwgJmFjb29yZCwgcG9zKTsK
KworZXhpdDoKKwlkb25lX2xvYWRfY291bnQoJmFsb2FkKTsKKwlkb25lX2xoKCZhbG9jayk7CisJ
cmV0dXJuIHJldDsKK30KKworLyogRHVyaW5nIHRoZSByZXZlcnNlIHBhcmVudC1maXJzdCBhbGxv
Y19wb3NfYW5kX2FuY2VzdG9ycyBwcm9jZXNzIGRlc2NyaWJlZAorICAgYWJvdmUgdGhlcmUgaXMg
YSBjYWxsIHRvIHRoaXMgZnVuY3Rpb24gYXQgdGhlIHR3aWcgbGV2ZWwuIER1cmluZworICAgYWxs
b2NfcG9zX2FuZF9hbmNlc3RvcnMgd2UgbWF5IGFzazogc2hvdWxkIHRoaXMgbm9kZSBiZSByZWxv
Y2F0ZWQgKGluIHJldmVyc2UKKyAgIHBhcmVudC1maXJzdCBjb250ZXh0KT8gIFdlIHJlcGVhdCB0
aGlzIHByb2Nlc3MgYXMgbG9uZyBhcyB0aGUgY2hpbGQgaXMgdGhlCisgICBsZWZ0bW9zdCBjaGls
ZCwgZXZlbnR1YWxseSByZWFjaGluZyBhbiBhbmNlc3RvciBvZiB0aGUgZmx1c2ggcG9pbnQgdGhh
dCBpcworICAgbm90IGEgbGVmdG1vc3QgY2hpbGQuIFRoZSBwcmVjZWRlciBvZiB0aGF0IGFuY2Vz
dG9ycywgd2hpY2ggaXMgbm90IGEgbGVmdG1vc3QKKyAgIGNoaWxkLCBpcyBhY3R1YWxseSBvbiB0
aGUgbGVhZiBsZXZlbC4gVGhlIHByZWNlZGVyIG9mIHRoYXQgYmxvY2sgaXMgdGhlCisgICBsZWZ0
LW5laWdoYm9yIG9mIHRoZSBmbHVzaCBwb2ludC4gVGhlIHByZWNlZGVyIG9mIHRoYXQgYmxvY2sg
aXMgdGhlIHJpZ2h0bW9zdAorICAgY2hpbGQgb2YgdGhlIHR3aWcgb24gdGhlIGxlZnQuIFNvLCB3
aGVuIGFsbG9jX3Bvc19hbmRfYW5jZXN0b3JzIHBhc3NlcyB1cHdhcmQKKyAgIHRocm91Z2ggdGhl
IHR3aWcgbGV2ZWwsIGl0IHN0b3BzIG1vbWVudGFyaWx5IHRvIHJlbWVtYmVyIHRoZSBibG9jayBv
ZiB0aGUKKyAgIHJpZ2h0bW9zdCBjaGlsZCBvZiB0aGUgdHdpZyBvbiB0aGUgbGVmdCBhbmQgc2V0
cyBpdCB0byB0aGUgZmx1c2hfcG9zaXRpb24ncworICAgcHJlY2VkZXJfaGludC4KKworICAgVGhl
cmUgaXMgb25lIG90aGVyIHBsYWNlIHdoZXJlIHdlIG1heSBzZXQgdGhlIGZsdXNoX3Bvc2l0aW9u
J3MgcHJlY2VkZXIgaGludCwKKyAgIHdoaWNoIGlzIGR1cmluZyBzY2FuLWxlZnQuCisqLworc3Rh
dGljIGludCBzZXRfcHJlY2VkZXIoY29uc3QgY29vcmRfdCAqY29vcmRfaW4sIGZsdXNoX3Bvc190
ICpwb3MpCit7CisJaW50IHJldDsKKwljb29yZF90IGNvb3JkOworCWxvY2tfaGFuZGxlIGxlZnRf
bG9jazsKKwlsb2FkX2NvdW50IGxlZnRfbG9hZDsKKworCWNvb3JkX2R1cCgmY29vcmQsIGNvb3Jk
X2luKTsKKworCWluaXRfbGgoJmxlZnRfbG9jayk7CisJaW5pdF9sb2FkX2NvdW50KCZsZWZ0X2xv
YWQpOworCisJLyogRklYTUUoQik6IFNhbWUgRklYTUUgYXMgaW4gIkZpbmQgdGhlIHByZWNlZGVy
IiBpbgorCSAgIHJldmVyc2VfYWxsb2NhdGUuIGNvb3JkX2lzX2xlZnRtb3N0X3VuaXQgaXMgbm90
IHRoZSByaWdodCB0ZXN0CisJICAgaWYgdGhlIHVuZm9ybWF0dGVkIGNoaWxkIGlzIGluIHRoZSBt
aWRkbGUgb2YgdGhlIGZpcnN0IGV4dGVudCB1bml0LiovCisJaWYgKCFjb29yZF9pc19sZWZ0bW9z
dF91bml0KCZjb29yZCkpIHsKKwkJY29vcmRfcHJldl91bml0KCZjb29yZCk7CisJfSBlbHNlIHsK
KwkJcmV0ID0KKwkJICAgIHJlaXNlcjRfZ2V0X2xlZnRfbmVpZ2hib3IoJmxlZnRfbG9jaywgY29v
cmQubm9kZSwKKwkJCQkJICAgICAgWk5PREVfUkVBRF9MT0NLLCBHTl9TQU1FX0FUT00pOworCQlp
ZiAocmV0KSB7CisJCQkvKiBJZiB3ZSBmYWlsIGZvciBhbnkgcmVhc29uIGl0IGRvZXNuJ3QgbWF0
dGVyIGJlY2F1c2UKKwkJCSAgIHRoZSBwcmVjZWRlciBpcyBvbmx5IGEgaGludC4gV2UgYXJlIGxv
dy1wcmlvcml0eSBhdAorCQkJICAgdGhpcyBwb2ludCwgc28gdGhpcyBtdXN0IGJlIHRoZSBjYXNl
LiAqLworCQkJaWYgKHJldCA9PSAtRV9SRVBFQVQgfHwgcmV0ID09IC1FX05PX05FSUdIQk9SIHx8
CisJCQkgICAgcmV0ID09IC1FTk9FTlQgfHwgcmV0ID09IC1FSU5WQUwKKwkJCSAgICB8fCByZXQg
PT0gLUVfREVBRExPQ0spCisJCQkJcmV0ID0gMDsKKwkJCWdvdG8gZXhpdDsKKwkJfQorCisJCXJl
dCA9IGluY3JfbG9hZF9jb3VudF96bm9kZSgmbGVmdF9sb2FkLCBsZWZ0X2xvY2subm9kZSk7CisJ
CWlmIChyZXQpCisJCQlnb3RvIGV4aXQ7CisKKwkJY29vcmRfaW5pdF9sYXN0X3VuaXQoJmNvb3Jk
LCBsZWZ0X2xvY2subm9kZSk7CisJfQorCisJcmV0ID0KKwkgICAgaXRlbV91dG1vc3RfY2hpbGRf
cmVhbF9ibG9jaygmY29vcmQsIFJJR0hUX1NJREUsCisJCQkJCSAmcG9zLT5wcmVjZWRlci5ibGsp
OworZXhpdDoKKwljaGVja19wcmVjZWRlcihwb3MtPnByZWNlZGVyLmJsayk7CisJZG9uZV9sb2Fk
X2NvdW50KCZsZWZ0X2xvYWQpOworCWRvbmVfbGgoJmxlZnRfbG9jayk7CisJcmV0dXJuIHJldDsK
K30KKworLyogTUFJTiBTUVVFRVpFIEFORCBBTExPQ0FURSBMT09QIChUSFJFRSBCSUcgRlVOQ1RJ
T05TKSAqLworCisvKiBUaGlzIHByb2NlZHVyZSBpbXBsZW1lbnRzIHRoZSBvdXRlciBsb29wIG9m
IHRoZSBmbHVzaCBhbGdvcml0aG0uIFRvIHB1dCB0aGlzCisgICBpbiBjb250ZXh0LCBoZXJlIGlz
IHRoZSBnZW5lcmFsIGxpc3Qgb2Ygc3RlcHMgdGFrZW4gYnkgdGhlIGZsdXNoIHJvdXRpbmUgYXMg
YQorICAgd2hvbGU6CisKKyAgIDEuIFNjYW4tbGVmdAorICAgMi4gU2Nhbi1yaWdodCAobWF5YmUp
CisgICAzLiBBbGxvY2F0ZSBpbml0aWFsIGZsdXNoIHBvc2l0aW9uIGFuZCBpdHMgYW5jZXN0b3Jz
CisgICA0LiA8aGFuZGxlIGV4dGVudHM+CisgICA1LiA8c3F1ZWV6ZSBhbmQgbmV4dCBwb3NpdGlv
biBhbmQgaXRzIGFuY2VzdG9ycyB0by10aGUtcmlnaHQsCisgICAgICAgdGhlbiB1cGRhdGUgcG9z
aXRpb24gdG8tdGhlLXJpZ2h0PgorICAgNi4gPHJlcGVhdCBmcm9tICM0IHVudGlsIGZsdXNoIGlz
IHN0b3BwZWQ+CisKKyAgIFRoaXMgcHJvY2VkdXJlIGltcGxlbWVudHMgdGhlIGxvb3AgaW4gc3Rl
cHMgNCB0aHJvdWdoIDYgaW4gdGhlIGFib3ZlIGxpc3RpbmcuCisKKyAgIFN0ZXAgNDogaWYgdGhl
IGN1cnJlbnQgZmx1c2ggcG9zaXRpb24gaXMgYW4gZXh0ZW50IGl0ZW0gKHBvc2l0aW9uIG9uIHRo
ZSB0d2lnCisgICBsZXZlbCksIGl0IGFsbG9jYXRlcyB0aGUgZXh0ZW50IChhbGxvY2F0ZV9leHRl
bnRfaXRlbV9pbl9wbGFjZSkgdGhlbiBzaGlmdHMKKyAgIHRvIHRoZSBuZXh0IGNvb3JkaW5hdGUu
IElmIHRoZSBuZXh0IGNvb3JkaW5hdGUncyBsZWZ0bW9zdCBjaGlsZCBuZWVkcworICAgZmx1c2hw
cmVwLCB3ZSB3aWxsIGNvbnRpbnVlLiBJZiB0aGUgbmV4dCBjb29yZGluYXRlIGlzIGFuIGludGVy
bmFsIGl0ZW0sIHdlCisgICBkZXNjZW5kIGJhY2sgdG8gdGhlIGxlYWYgbGV2ZWwsIG90aGVyd2lz
ZSB3ZSByZXBlYXQgYSBzdGVwICM0IChsYWJlbGVkCisgICBBTExPQ19FWFRFTlRTIGJlbG93KS4g
SWYgdGhlICJuZXh0IGNvb3JkaW5hdGUiIGJyaW5ncyB1cyBwYXN0IHRoZSBlbmQgb2YgdGhlCisg
ICB0d2lnIGxldmVsLCB0aGVuIHdlIGNhbGwgcmV2ZXJzZV9yZWxvY2F0ZV9lbmRfb2ZfdHdpZyB0
byBwb3NzaWJseSBkaXJ0eSB0aGUKKyAgIG5leHQgKHJpZ2h0KSB0d2lnLCBwcmlvciB0byBzdGVw
ICM1IHdoaWNoIG1vdmVzIHRvIHRoZSByaWdodC4KKworICAgU3RlcCA1OiBjYWxscyBzcXVhbGxv
Y19jaGFuZ2VkX2FuY2VzdG9ycywgd2hpY2ggaW5pdGlhdGVzIGEgcmVjdXJzaXZlIGNhbGwgdXAK
KyAgIHRoZSB0cmVlIHRvIGFsbG9jYXRlIGFueSBhbmNlc3RvcnMgb2YgdGhlIG5leHQtcmlnaHQg
Zmx1c2ggcG9zaXRpb24gdGhhdCBhcmUKKyAgIG5vdCBhbHNvIGFuY2VzdG9ycyBvZiB0aGUgY3Vy
cmVudCBwb3NpdGlvbi4gVGhvc2UgYW5jZXN0b3JzIChpbiB0b3AtZG93bgorICAgb3JkZXIpIGFy
ZSB0aGUgbmV4dCBpbiBwYXJlbnQtZmlyc3Qgb3JkZXIuIFdlIHNxdWVlemUgYWRqYWNlbnQgbm9k
ZXMgb24gdGhlCisgICB3YXkgdXAgdW50aWwgdGhlIHJpZ2h0IG5vZGUgYW5kIGN1cnJlbnQgbm9k
ZSBzaGFyZSB0aGUgc2FtZSBwYXJlbnQsIHRoZW4KKyAgIGFsbG9jYXRlIG9uIHRoZSB3YXkgYmFj
ayBkb3duLiBGaW5hbGx5LCB0aGlzIHN0ZXAgc2V0cyB0aGUgZmx1c2ggcG9zaXRpb24gdG8KKyAg
IHRoZSBuZXh0LXJpZ2h0IG5vZGUuICBUaGVuIHJlcGVhdCBzdGVwcyA0IGFuZCA1LgorKi8KKwor
LyogU1FVRUVaRSBDT0RFICovCisKKy8qIHNxdWFsbG9jX3JpZ2h0X3R3aWcgaGVscGVyIGZ1bmN0
aW9uLCBjdXQgYSByYW5nZSBvZiBleHRlbnQgaXRlbXMgZnJvbQorICAgY3V0IG5vZGUgdG8tPm5v
ZGUgZnJvbSB0aGUgYmVnaW5uaW5nIHVwIHRvIGNvb3JkIEB0by4gKi8KK3N0YXRpYyBpbnQgc3F1
YWxsb2NfcmlnaHRfdHdpZ19jdXQoY29vcmRfdCAqdG8sIHJlaXNlcjRfa2V5ICogdG9fa2V5LAor
CQkJCSAgIHpub2RlICogbGVmdCkKK3sKKwljb29yZF90IGZyb207CisJcmVpc2VyNF9rZXkgZnJv
bV9rZXk7CisKKwljb29yZF9pbml0X2ZpcnN0X3VuaXQoJmZyb20sIHRvLT5ub2RlKTsKKwlpdGVt
X2tleV9ieV9jb29yZCgmZnJvbSwgJmZyb21fa2V5KTsKKworCXJldHVybiBjdXRfbm9kZV9jb250
ZW50KCZmcm9tLCB0bywgJmZyb21fa2V5LCB0b19rZXksIE5VTEwpOworfQorCisvKiBDb3B5IGFz
IG11Y2ggb2YgdGhlIGxlYWRpbmcgZXh0ZW50cyBmcm9tIEByaWdodCB0byBAbGVmdCwgYWxsb2Nh
dGluZworICAgdW5hbGxvY2F0ZWQgZXh0ZW50cyBhcyB0aGV5IGFyZSBjb3BpZWQuICBSZXR1cm5z
IFNRVUVFWkVfVEFSR0VUX0ZVTEwgb3IKKyAgIFNRVUVFWkVfU09VUkNFX0VNUFRZIHdoZW4gbm8g
bW9yZSBjYW4gYmUgc2hpZnRlZC4gIElmIHRoZSBuZXh0IGl0ZW0gaXMgYW4KKyAgIGludGVybmFs
IGl0ZW0gaXQgY2FsbHMgc2hpZnRfb25lX2ludGVybmFsX3VuaXQgYW5kIG1heSB0aGVuIHJldHVy
bgorICAgU1VCVFJFRV9NT1ZFRC4gKi8KK3N0YXRpYyBpbnQgc3F1ZWV6ZV9yaWdodF90d2lnKHpu
b2RlICogbGVmdCwgem5vZGUgKiByaWdodCwgZmx1c2hfcG9zX3QgKnBvcykKK3sKKwlpbnQgcmV0
ID0gU1VCVFJFRV9NT1ZFRDsKKwljb29yZF90IGNvb3JkOwkJLyogdXNlZCB0byBpdGVyYXRlIG92
ZXIgaXRlbXMgKi8KKwlyZWlzZXI0X2tleSBzdG9wX2tleTsKKwlyZWlzZXI0X3RyZWUgKnRyZWU7
CisJdHhtb2RfcGx1Z2luICp0eG1vZF9wbHVnID0gZ2V0X3R4bW9kX3BsdWdpbigpOworCisJYXNz
ZXJ0KCJqbWFjZC0yMDA4IiwgIW5vZGVfaXNfZW1wdHkocmlnaHQpKTsKKwljb29yZF9pbml0X2Zp
cnN0X3VuaXQoJmNvb3JkLCByaWdodCk7CisKKwkvKiBGSVhNRTogY2FuIGJlIG9wdGltaXplZCB0
byBjdXQgb25jZSAqLworCXdoaWxlICghbm9kZV9pc19lbXB0eShjb29yZC5ub2RlKSAmJiBpdGVt
X2lzX2V4dGVudCgmY29vcmQpKSB7CisJCU9OX0RFQlVHKHZvaWQgKnZwKTsKKworCQlhc3NlcnQo
InZzLTE0NjgiLCBjb29yZF9pc19sZWZ0bW9zdF91bml0KCZjb29yZCkpOworCQlPTl9ERUJVRyh2
cCA9IHNoaWZ0X2NoZWNrX3ByZXBhcmUobGVmdCwgY29vcmQubm9kZSkpOworCisJCS8qIHN0b3Bf
a2V5IGlzIHVzZWQgdG8gZmluZCB3aGF0IHdhcyBjb3BpZWQgYW5kIHdoYXQgdG8gY3V0ICovCisJ
CXN0b3Bfa2V5ID0gKnJlaXNlcjRfbWluX2tleSgpOworCQlyZXQgPSB0eG1vZF9wbHVnLT5zcXVl
ZXplX2FsbG9jX3VuZm9ybWF0dGVkKGxlZnQsCisJCQkJCQkJICAgICZjb29yZCwgcG9zLAorCQkJ
CQkJCSAgICAmc3RvcF9rZXkpOworCQlpZiAocmV0ICE9IFNRVUVFWkVfQ09OVElOVUUpIHsKKwkJ
CU9OX0RFQlVHKGtmcmVlKHZwKSk7CisJCQlicmVhazsKKwkJfQorCQlhc3NlcnQoInZzLTE0NjUi
LCAha2V5ZXEoJnN0b3Bfa2V5LCByZWlzZXI0X21pbl9rZXkoKSkpOworCisJCS8qIEhlbHBlciBm
dW5jdGlvbiB0byBkbyB0aGUgY3V0dGluZy4gKi8KKwkJc2V0X2tleV9vZmZzZXQoJnN0b3Bfa2V5
LCBnZXRfa2V5X29mZnNldCgmc3RvcF9rZXkpIC0gMSk7CisJCWNoZWNrX21lKCJ2cy0xNDY2IiwK
KwkJCSBzcXVhbGxvY19yaWdodF90d2lnX2N1dCgmY29vcmQsICZzdG9wX2tleSwgbGVmdCkgPT0g
MCk7CisKKwkJT05fREVCVUcoc2hpZnRfY2hlY2sodnAsIGxlZnQsIGNvb3JkLm5vZGUpKTsKKwl9
CisJLyoKKwkgKiBAbGVmdCBhbmQgQHJpZ2h0IG5vZGVzIHBhcnRpY2lwYXRlZCBpbiB0aGUKKwkg
KiBpbXBsaWNpdCBzaGlmdCwgZGV0ZXJtaW5lZCBieSB0aGUgcGFpciBvZgorCSAqIGZ1bmN0aW9u
czoKKwkgKiAuIHNxdWFsbG9jX2V4dGVudCgpIC0gYXBwZW5kIHVuaXRzIHRvIHRoZSBAbGVmdAor
CSAqIC4gc3F1YWxsb2NfcmlnaHRfdHdpZ19jdXQoKSAtIGN1dCB0aGUgdW5pdHMgZnJvbSBAcmln
aHQKKwkgKiBzbyB1cGRhdGUgdGhlaXIgZGVsaW1pdGluZyBrZXlzCisJICovCisJdHJlZSA9IHpu
b2RlX2dldF90cmVlKGxlZnQpOworCXdyaXRlX2xvY2tfZGsodHJlZSk7CisJdXBkYXRlX3pub2Rl
X2RrZXlzKGxlZnQsIHJpZ2h0KTsKKwl3cml0ZV91bmxvY2tfZGsodHJlZSk7CisKKwlpZiAobm9k
ZV9pc19lbXB0eShjb29yZC5ub2RlKSkKKwkJcmV0ID0gU1FVRUVaRV9TT1VSQ0VfRU1QVFk7CisK
KwlpZiAocmV0ID09IFNRVUVFWkVfVEFSR0VUX0ZVTEwpCisJCWdvdG8gb3V0OworCisJaWYgKG5v
ZGVfaXNfZW1wdHkocmlnaHQpKSB7CisJCS8qIFRoZSB3aG9sZSByaWdodCBub2RlIHdhcyBjb3Bp
ZWQgaW50byBAbGVmdC4gKi8KKwkJYXNzZXJ0KCJ2cy00NjQiLCByZXQgPT0gU1FVRUVaRV9TT1VS
Q0VfRU1QVFkpOworCQlnb3RvIG91dDsKKwl9CisKKwljb29yZF9pbml0X2ZpcnN0X3VuaXQoJmNv
b3JkLCByaWdodCk7CisKKwlpZiAoIWl0ZW1faXNfaW50ZXJuYWwoJmNvb3JkKSkgeworCQkvKiB3
ZSBkbyBub3Qgd2FudCB0byBzcXVlZXplIGFueXRoaW5nIGVsc2UgdG8gbGVmdCBuZWlnaGJvcgor
CQkgICBiZWNhdXNlICJzbHVtIiBpcyBvdmVyICovCisJCXJldCA9IFNRVUVFWkVfVEFSR0VUX0ZV
TEw7CisJCWdvdG8gb3V0OworCX0KKwlhc3NlcnQoImptYWNkLTQzMyIsIGl0ZW1faXNfaW50ZXJu
YWwoJmNvb3JkKSk7CisKKwkvKiBTaGlmdCBhbiBpbnRlcm5hbCB1bml0LiAgVGhlIGNoaWxkIG11
c3QgYmUgYWxsb2NhdGVkIGJlZm9yZSBzaGlmdGluZworCSAgIGFueSBtb3JlIGV4dGVudHMsIHNv
IHdlIHN0b3AgaGVyZS4gKi8KKwlyZXQgPSBzaGlmdF9vbmVfaW50ZXJuYWxfdW5pdChsZWZ0LCBy
aWdodCk7CisKK291dDoKKwlhc3NlcnQoImptYWNkLTg2MTIiLCByZXQgPCAwIHx8IHJldCA9PSBT
UVVFRVpFX1RBUkdFVF9GVUxMCisJICAgICAgIHx8IHJldCA9PSBTVUJUUkVFX01PVkVEIHx8IHJl
dCA9PSBTUVVFRVpFX1NPVVJDRV9FTVBUWSk7CisKKwlpZiAocmV0ID09IFNRVUVFWkVfVEFSR0VU
X0ZVTEwpIHsKKwkJLyogV2Ugc3VibWl0IHByZXBwZWQgbm9kZXMgaGVyZSBhbmQgZXhwZWN0IHRo
YXQgdGhpcyBAbGVmdCB0d2lnCisJCSAqIHdpbGwgbm90IGJlIG1vZGlmaWVkIGFnYWluIGR1cmlu
ZyB0aGlzIGpub2RlX2ZsdXNoKCkgY2FsbC4gKi8KKwkJaW50IHJldDE7CisKKwkJLyogTk9URTog
c2VlbXMgbGlrZSBpbyBpcyBkb25lIHVuZGVyIGxvbmcgdGVybSBsb2Nrcy4gKi8KKwkJcmV0MSA9
IHdyaXRlX3ByZXBwZWRfbm9kZXMocG9zKTsKKwkJaWYgKHJldDEgPCAwKQorCQkJcmV0dXJuIHJl
dDE7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyB2
b2lkIGl0ZW1fY29udmVydF9pbnZhcmlhbnQoZmx1c2hfcG9zX3QgKnBvcykKK3sKKwlhc3NlcnQo
ImVkd2FyZC0xMjI1IiwgY29vcmRfaXNfZXhpc3RpbmdfaXRlbSgmcG9zLT5jb29yZCkpOworCWlm
IChjb252ZXJ0X2RhdGFfYXR0YWNoZWQocG9zKSkgeworCQlpdGVtX3BsdWdpbiAqaXBsdWcgPSBp
dGVtX2NvbnZlcnRfcGx1Zyhwb3MpOworCisJCWFzc2VydCgiZWR3YXJkLTEwMDAiLAorCQkgICAg
ICAgaXBsdWcgPT0gaXRlbV9wbHVnaW5fYnlfY29vcmQoJnBvcy0+Y29vcmQpKTsKKwkJYXNzZXJ0
KCJlZHdhcmQtMTAwMSIsIGlwbHVnLT5mLmNvbnZlcnQgIT0gTlVMTCk7CisJfSBlbHNlCisJCWFz
c2VydCgiZWR3YXJkLTEyMjYiLCBwb3MtPmNoaWxkID09IE5VTEwpOworfQorI2Vsc2UKKworI2Rl
ZmluZSBpdGVtX2NvbnZlcnRfaW52YXJpYW50KHBvcykgbm9vcAorCisjZW5kaWYKKworLyoKKyAq
IFNjYW4gYWxsIG5vZGUncyBpdGVtcyBhbmQgYXBwbHkgZm9yIGVhY2ggb25lCisgKiBpdHMgLT5j
b252ZXJ0KCkgbWV0aG9kLiBUaGlzIG1ldGhvZCBtYXk6CisgKiAuIHJlc2l6ZSB0aGUgaXRlbTsK
KyAqIC4ga2lsbCB0aGUgaXRlbTsKKyAqIC4gaW5zZXJ0IGEgZ3JvdXAgb2YgaXRlbXMvbm9kZXMg
b24gdGhlIHJpZ2h0LAorICogICB3aGljaCBwb3NzZXNzIHRoZSBmb2xsb3dpbmcgcHJvcGVydGll
czoKKyAqICAgLiBhbGwgbmV3IG5vZGVzIGFyZSBkaXJ0eSBhbmQgbm90IGNvbnZlcnRpYmxlOwor
ICogICAuIGZvciBhbGwgbmV3IGl0ZW1zIC0+Y29udmVydCgpIG1ldGhvZCBpcyBhIG5vb3AuCisg
KgorICogTk9URTogdGhpcyBmdW5jdGlvbiBtYWtlcyB0aGUgdHJlZSB1bmJhbGFuY2VkIQorICog
VGhpcyBpbnRlbmRlZCB0byBiZSB1c2VkIGJ5IGZsdXNoIHNxdWFsbG9jKCkgaW4gYQorICogY29t
YmluYXRpb24gd2l0aCBzcXVlZXplIHByb2NlZHVyZS4KKyAqCisgKiBHTE9TU0FSWQorICoKKyAq
IENoYWluZWQgbm9kZXMgYW5kIGl0ZW1zLgorICogICBUd28gbmVpZ2hib3Jpbmcgbm9kZXMgQGxl
ZnQgYW5kIEByaWdodCBhcmUgY2hhaW5lZCwKKyAqICAgaWZmIHRoZSBsYXN0IGl0ZW0gb2YgQGxl
ZnQgYW5kIHRoZSBmaXJzdCBpdGVtIG9mIEByaWdodAorICogICBiZWxvbmcgdG8gdGhlIHNhbWUg
aXRlbSBjbHVzdGVyLiBJbiB0aGlzIGNhc2UgdGhvc2UKKyAqICAgaXRlbXMgYXJlIGNhbGxlZCBj
aGFpbmVkLgorICovCitzdGF0aWMgaW50IGNvbnZlcnRfbm9kZShmbHVzaF9wb3NfdCAqcG9zLCB6
bm9kZSAqIG5vZGUpCit7CisJaW50IHJldCA9IDA7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCWFz
c2VydCgiZWR3YXJkLTMwNCIsIHBvcyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0zMDUiLCBw
b3MtPmNoaWxkID09IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTQ3NSIsIHpub2RlX2NvbnZlcnRp
YmxlKG5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC02NjkiLCB6bm9kZV9pc193bG9ja2VkKG5vZGUp
KTsKKwlhc3NlcnQoImVkd2FyZC0xMjEwIiwgIW5vZGVfaXNfZW1wdHkobm9kZSkpOworCisJaWYg
KHpub2RlX2dldF9sZXZlbChub2RlKSAhPSBMRUFGX0xFVkVMKQorCQkvKiB1bnN1cHBvcnRlZCAq
LworCQlnb3RvIGV4aXQ7CisKKwljb29yZF9pbml0X2ZpcnN0X3VuaXQoJnBvcy0+Y29vcmQsIG5v
ZGUpOworCisJd2hpbGUgKDEpIHsKKwkJcmV0ID0gMDsKKwkJY29vcmRfc2V0X3RvX2xlZnQoJnBv
cy0+Y29vcmQpOworCQlpdGVtX2NvbnZlcnRfaW52YXJpYW50KHBvcyk7CisKKwkJaXBsdWcgPSBp
dGVtX3BsdWdpbl9ieV9jb29yZCgmcG9zLT5jb29yZCk7CisJCWFzc2VydCgiZWR3YXJkLTg0NCIs
IGlwbHVnICE9IE5VTEwpOworCisJCWlmIChpcGx1Zy0+Zi5jb252ZXJ0KSB7CisJCQlyZXQgPSBp
cGx1Zy0+Zi5jb252ZXJ0KHBvcyk7CisJCQlpZiAocmV0KQorCQkJCWdvdG8gZXhpdDsKKwkJfQor
CQlhc3NlcnQoImVkd2FyZC0zMDciLCBwb3MtPmNoaWxkID09IE5VTEwpOworCisJCWlmIChjb29y
ZF9uZXh0X2l0ZW0oJnBvcy0+Y29vcmQpKSB7CisJCQkvKgorCQkJICogbm9kZSBpcyBvdmVyCisJ
CQkgKi8KKwkJCWlmIChjb252ZXJ0X2RhdGFfYXR0YWNoZWQocG9zKSkKKwkJCQkvKgorCQkJCSAq
IHRoZSBsYXN0IGl0ZW0gd2FzIGNvbnZlcnRpYmxlIGFuZAorCQkJCSAqIHRoZXJlIHN0aWxsIGlz
IGFuIHVucHJvY2Vzc3NlZCBmbG93CisJCQkJICovCisJCQkJaWYgKG5leHRfbm9kZV9pc19jaGFp
bmVkKHBvcykpIHsKKwkJCQkJLyoKKwkJCQkJICogbmV4dCBub2RlIGNvbnRhaW5zIGl0ZW1zIG9m
CisJCQkJCSAqIHRoZSBzYW1lIGRpc2sgY2x1c3RlciwKKwkJCQkJICogc28gZmluaXNoIHdpdGgg
dGhpcyBub2RlCisJCQkJCSAqLworCQkJCQl1cGRhdGVfY2hhaW5pbmdfc3RhdGUocG9zLCAwLyog
bW92ZQorCQkJCQkJCQkgICAgICAgdG8gbmV4dAorCQkJCQkJCQkgICAgICAgbm9kZSAqLyk7CisJ
CQkJCWJyZWFrOworCQkJCX0KKwkJCQllbHNlIHsKKwkJCQkJLyoKKwkJCQkJICogcGVyZm9ybSBv
bmUgbW9yZSBpdGVyYXRpb24KKwkJCQkJICogZm9yIHRoZSBzYW1lIGl0ZW0gYW5kIHRoZQorCQkJ
CQkgKiByZXN0IG9mIGZsb3cKKwkJCQkJICovCisJCQkJCXVwZGF0ZV9jaGFpbmluZ19zdGF0ZShw
b3MsIDEvKiB0aGlzCisJCQkJCQkJCSAgICAgICBub2RlICovKTsKKwkJCQl9CisJCQllbHNlCisJ
CQkJLyoKKwkJCQkgKiB0aGUgbGFzdCBpdGVtIHdhc24ndCBjb252ZXJ0aWJsZSwgb3IKKwkJCQkg
KiBjb252ZXJ0IGRhdGUgd2FzIGRldGFjaGVkIGluIHRoZSBsYXN0CisJCQkJICogaXRlcmF0aW9u
LAorCQkJCSAqIGdvIHRvIG5leHQgbm9kZQorCQkJCSAqLworCQkJCWJyZWFrOworCQl9IGVsc2Ug
eworCQkJLyoKKwkJCSAqIE5vZGUgaXMgbm90IG92ZXIsIGl0ZW0gcG9zaXRpb24gZ290IGRlY3Jl
bWVudGVkLgorCQkJICovCisJCQlpZiAoY29udmVydF9kYXRhX2F0dGFjaGVkKHBvcykpIHsKKwkJ
CQkvKgorCQkJCSAqIGRpc2sgY2x1c3RlciBzaG91bGQgYmUgaW5jcmVhc2VkLCBzbyByb2xsCisJ
CQkJICogb25lIGl0ZW0gcG9zaXRpb24gYmFjayBhbmQgcGVyZm9ybSB0aGUKKwkJCQkgKiBpdGVy
YXRpb24gd2l0aCB0aGUgcHJldmlvdXMgaXRlbSBhbmQgdGhlCisJCQkJICogcmVzdCBvZiBhdHRh
Y2hlZCBkYXRhCisJCQkJICovCisJCQkJaWYgKGlwbHVnICE9IGl0ZW1fcGx1Z2luX2J5X2Nvb3Jk
KCZwb3MtPmNvb3JkKSkKKwkJCQkJc2V0X2l0ZW1fY29udmVydF9jb3VudChwb3MsIDApOworCisJ
CQkJcmV0ID0gY29vcmRfcHJldl9pdGVtKCZwb3MtPmNvb3JkKTsKKwkJCQlhc3NlcnQoImVkd2Fy
ZC0xMDAzIiwgIXJldCk7CisKKwkJCQl1cGRhdGVfY2hhaW5pbmdfc3RhdGUocG9zLCAxLyogdGhp
cyBub2RlICovKTsKKwkJCX0KKwkJCWVsc2UKKwkJCQkvKgorCQkJCSAqIHByZXZpb3VzIGl0ZW0g
d2FzJ3QgY29udmVydGlibGUsIG9yCisJCQkJICogY29udmVydCBkYXRlIHdhcyBkZXRhY2hlZCBp
biB0aGUgbGFzdAorCQkJCSAqIGl0ZXJhdGlvbiwgZ28gdG8gbmV4dCBpdGVtCisJCQkJICovCisJ
CQkJOworCQl9CisJfQorCUpGX0NMUihaSk5PREUobm9kZSksIEpOT0RFX0NPTlZFUlRJQkxFKTsK
Kwl6bm9kZV9tYWtlX2RpcnR5KG5vZGUpOworZXhpdDoKKwlhc3NlcnQoImVkd2FyZC0xMDA0Iiwg
IXJldCk7CisJcmV0dXJuIHJldDsKK30KKworLyogU3F1ZWV6ZSBhbmQgYWxsb2NhdGUgdGhlIHJp
Z2h0IG5laWdoYm9yLiAgVGhpcyBpcyBjYWxsZWQgYWZ0ZXIgQGxlZnQgYW5kCisgICBpdHMgY3Vy
cmVudCBjaGlsZHJlbiBoYXZlIGJlZW4gc3F1ZWV6ZWQgYW5kIGFsbG9jYXRlZCBhbHJlYWR5LiAg
VGhpcworICAgcHJvY2VkdXJlJ3Mgam9iIGlzIHRvIHNxdWVlemUgYW5kIGl0ZW1zIGZyb20gQHJp
Z2h0IHRvIEBsZWZ0LgorCisgICBJZiBhdCB0aGUgbGVhZiBsZXZlbCwgdXNlIHRoZSBzaGlmdF9l
dmVyeXRoaW5nX2xlZnQgbWVtY3B5LW9wdGltaXplZAorICAgdmVyc2lvbiBvZiBzaGlmdGluZyAo
c3F1ZWV6ZV9yaWdodF9sZWFmKS4KKworICAgSWYgYXQgdGhlIHR3aWcgbGV2ZWwsIGV4dGVudHMg
YXJlIGFsbG9jYXRlZCBhcyB0aGV5IGFyZSBzaGlmdGVkIGZyb20gQHJpZ2h0CisgICB0byBAbGVm
dCAoc3F1YWxsb2NfcmlnaHRfdHdpZykuCisKKyAgIEF0IGFueSBvdGhlciBsZXZlbCwgc2hpZnQg
b25lIGludGVybmFsIGl0ZW0gYW5kIHJldHVybiB0byB0aGUgY2FsbGVyCisgICAoc3F1YWxsb2Nf
cGFyZW50X2ZpcnN0KSBzbyB0aGF0IHRoZSBzaGlmdGVkLXN1YnRyZWUgY2FuIGJlIHByb2Nlc3Nl
ZCBpbgorICAgcGFyZW50LWZpcnN0IG9yZGVyLgorCisgICBXaGVuIHVuaXQgb2YgaW50ZXJuYWwg
aXRlbSBpcyBtb3ZlZCwgc3F1ZWV6aW5nIHN0b3BzIGFuZCBTVUJUUkVFX01PVkVEIGlzCisgICBy
ZXR1cm5lZC4gIFdoZW4gYWxsIGNvbnRlbnQgb2YgQHJpZ2h0IGlzIHNxdWVlemVkLCBTUVVFRVpF
X1NPVVJDRV9FTVBUWSBpcworICAgcmV0dXJuZWQuICBJZiBub3RoaW5nIGNhbiBiZSBtb3ZlZCBp
bnRvIEBsZWZ0IGFueW1vcmUsIFNRVUVFWkVfVEFSR0VUX0ZVTEwKKyAgIGlzIHJldHVybmVkLgor
Ki8KKworc3RhdGljIGludCBzcXVlZXplX3JpZ2h0X25laWdoYm9yKGZsdXNoX3Bvc190ICpwb3Ms
IHpub2RlICogbGVmdCwKKwkJCQkgIHpub2RlICogcmlnaHQpCit7CisJaW50IHJldDsKKworCS8q
IEZJWE1FIGl0IGlzIHBvc3NpYmxlIHRvIHNlZSBlbXB0eSBoYXNuJ3QtaGVhcmQtYmFuc2hlZSBu
b2RlIGluIGEKKwkgKiB0cmVlIG93aW5nIHRvIGVycm9yIChmb3IgZXhhbXBsZSwgRU5PU1BDKSBp
biB3cml0ZSAqLworCS8qIGFzc2VydCgiam1hY2QtOTMyMSIsICFub2RlX2lzX2VtcHR5KGxlZnQp
KTsgKi8KKwlhc3NlcnQoImptYWNkLTkzMjIiLCAhbm9kZV9pc19lbXB0eShyaWdodCkpOworCWFz
c2VydCgiam1hY2QtOTMyMyIsIHpub2RlX2dldF9sZXZlbChsZWZ0KSA9PSB6bm9kZV9nZXRfbGV2
ZWwocmlnaHQpKTsKKworCXN3aXRjaCAoem5vZGVfZ2V0X2xldmVsKGxlZnQpKSB7CisJY2FzZSBU
V0lHX0xFVkVMOgorCQkvKiBTaGlmdCB3aXRoIGV4dGVudCBhbGxvY2F0aW5nIHVudGlsIGVpdGhl
ciBhbiBpbnRlcm5hbCBpdGVtCisJCSAgIGlzIGVuY291bnRlcmVkIG9yIGV2ZXJ5dGhpbmcgaXMg
c2hpZnRlZCBvciBubyBmcmVlIHNwYWNlCisJCSAgIGxlZnQgaW4gQGxlZnQgKi8KKwkJcmV0ID0g
c3F1ZWV6ZV9yaWdodF90d2lnKGxlZnQsIHJpZ2h0LCBwb3MpOworCQlicmVhazsKKworCWRlZmF1
bHQ6CisJCS8qIEFsbCBvdGhlciBsZXZlbHMgY2FuIHVzZSBzaGlmdF9ldmVyeXRoaW5nIHVudGls
IHdlIGltcGxlbWVudAorCQkgICBwZXItaXRlbSBmbHVzaCBwbHVnaW5zLiAqLworCQlyZXQgPSBz
cXVlZXplX3JpZ2h0X25vbl90d2lnKGxlZnQsIHJpZ2h0KTsKKwkJYnJlYWs7CisJfQorCisJYXNz
ZXJ0KCJqbWFjZC0yMDExIiwgKHJldCA8IDAgfHwKKwkJCSAgICAgIHJldCA9PSBTUVVFRVpFX1NP
VVJDRV9FTVBUWQorCQkJICAgICAgfHwgcmV0ID09IFNRVUVFWkVfVEFSR0VUX0ZVTEwKKwkJCSAg
ICAgIHx8IHJldCA9PSBTVUJUUkVFX01PVkVEKSk7CisJcmV0dXJuIHJldDsKK30KKworc3RhdGlj
IGludCBzcXVlZXplX3JpZ2h0X3R3aWdfYW5kX2FkdmFuY2VfY29vcmQoZmx1c2hfcG9zX3QgKnBv
cywKKwkJCQkJCXpub2RlICogcmlnaHQpCit7CisJaW50IHJldDsKKworCXJldCA9IHNxdWVlemVf
cmlnaHRfdHdpZyhwb3MtPmxvY2subm9kZSwgcmlnaHQsIHBvcyk7CisJaWYgKHJldCA8IDApCisJ
CXJldHVybiByZXQ7CisJaWYgKHJldCA+IDApIHsKKwkJY29vcmRfaW5pdF9hZnRlcl9sYXN0X2l0
ZW0oJnBvcy0+Y29vcmQsIHBvcy0+bG9jay5ub2RlKTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwlj
b29yZF9pbml0X2xhc3RfdW5pdCgmcG9zLT5jb29yZCwgcG9zLT5sb2NrLm5vZGUpOworCXJldHVy
biAwOworfQorCisvKiBmb3J3YXJkIGRlY2xhcmF0aW9uICovCitzdGF0aWMgaW50IHNxdWFsbG9j
X3VwcGVyX2xldmVscyhmbHVzaF9wb3NfdCAqLCB6bm9kZSAqLCB6bm9kZSAqKTsKKworLyogZG8g
YSBmYXN0IGNoZWNrIGZvciAic2FtZSBwYXJlbnRzIiBjb25kaXRpb24gYmVmb3JlIGNhbGxpbmcK
KyAqIHNxdWFsbG9jX3VwcGVyX2xldmVscygpICovCitzdGF0aWMgaW5saW5lIGludCBjaGVja19w
YXJlbnRzX2FuZF9zcXVhbGxvY191cHBlcl9sZXZlbHMoZmx1c2hfcG9zX3QgKnBvcywKKwkJCQkJ
CQkgIHpub2RlICogbGVmdCwKKwkJCQkJCQkgIHpub2RlICogcmlnaHQpCit7CisJaWYgKHpub2Rl
X3NhbWVfcGFyZW50cyhsZWZ0LCByaWdodCkpCisJCXJldHVybiAwOworCisJcmV0dXJuIHNxdWFs
bG9jX3VwcGVyX2xldmVscyhwb3MsIGxlZnQsIHJpZ2h0KTsKK30KKworLyogQ2hlY2sgd2hldGhl
ciB0aGUgcGFyZW50IG9mIGdpdmVuIEByaWdodCBub2RlIG5lZWRzIHRvIGJlIHByb2Nlc3Nlcwor
ICAgKChyZSlhbGxvY2F0ZWQpIHByaW9yIHRvIHByb2Nlc3Npbmcgb2YgdGhlIGNoaWxkLiAgSWYg
QGxlZnQgYW5kIEByaWdodCBkbyBub3QKKyAgIHNoYXJlIGF0IGxlYXN0IHRoZSBwYXJlbnQgb2Yg
dGhlIEByaWdodCBpcyBhZnRlciB0aGUgQGxlZnQgYnV0IGJlZm9yZSB0aGUKKyAgIEByaWdodCBp
biBwYXJlbnQtZmlyc3Qgb3JkZXIsIHdlIGhhdmUgdG8gKHJlKWFsbG9jYXRlIGl0IGJlZm9yZSB0
aGUgQHJpZ2h0CisgICBnZXRzIChyZSlhbGxvY2F0ZWQuICovCitzdGF0aWMgaW50IHNxdWFsbG9j
X3VwcGVyX2xldmVscyhmbHVzaF9wb3NfdCAqcG9zLCB6bm9kZSAqIGxlZnQsIHpub2RlICogcmln
aHQpCit7CisJaW50IHJldDsKKworCWxvY2tfaGFuZGxlIGxlZnRfcGFyZW50X2xvY2s7CisJbG9j
a19oYW5kbGUgcmlnaHRfcGFyZW50X2xvY2s7CisKKwlsb2FkX2NvdW50IGxlZnRfcGFyZW50X2xv
YWQ7CisJbG9hZF9jb3VudCByaWdodF9wYXJlbnRfbG9hZDsKKworCWluaXRfbGgoJmxlZnRfcGFy
ZW50X2xvY2spOworCWluaXRfbGgoJnJpZ2h0X3BhcmVudF9sb2NrKTsKKworCWluaXRfbG9hZF9j
b3VudCgmbGVmdF9wYXJlbnRfbG9hZCk7CisJaW5pdF9sb2FkX2NvdW50KCZyaWdodF9wYXJlbnRf
bG9hZCk7CisKKwlyZXQgPSByZWlzZXI0X2dldF9wYXJlbnQoJmxlZnRfcGFyZW50X2xvY2ssIGxl
ZnQsIFpOT0RFX1dSSVRFX0xPQ0spOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0g
cmVpc2VyNF9nZXRfcGFyZW50KCZyaWdodF9wYXJlbnRfbG9jaywgcmlnaHQsIFpOT0RFX1dSSVRF
X0xPQ0spOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJLyogQ2hlY2sgZm9yIHNhbWUgcGFy
ZW50cyAqLworCWlmIChsZWZ0X3BhcmVudF9sb2NrLm5vZGUgPT0gcmlnaHRfcGFyZW50X2xvY2su
bm9kZSkKKwkJZ290byBvdXQ7CisKKwlpZiAoem5vZGVfY2hlY2tfZmx1c2hwcmVwcGVkKHJpZ2h0
X3BhcmVudF9sb2NrLm5vZGUpKSB7CisJCS8qIEtlZXAgcGFyZW50LWZpcnN0IG9yZGVyLiAgSW4g
dGhlIG9yZGVyLCB0aGUgcmlnaHQgcGFyZW50IG5vZGUKKwkJICAgc3RhbmRzIGJlZm9yZSB0aGUg
QHJpZ2h0IG5vZGUuICBJZiBpdCBpcyBhbHJlYWR5IGFsbG9jYXRlZCwKKwkJICAgd2Ugc2V0IHRo
ZSBwcmVjZWRlciAobmV4dCBibG9jayBzZWFyY2ggc3RhcnQgcG9pbnQpIHRvIGl0cworCQkgICBi
bG9jayBudW1iZXIsIEByaWdodCBub2RlIHNob3VsZCBiZSBhbGxvY2F0ZWQgYWZ0ZXIgaXQuCisK
KwkJICAgSG93ZXZlciwgcHJlY2VkZXIgaXMgc2V0IG9ubHkgaWYgdGhlIHJpZ2h0IHBhcmVudCBp
cyBvbiB0d2lnCisJCSAgIGxldmVsLiBUaGUgZXhwbGFuYXRpb24gaXMgdGhlIGZvbGxvd2luZzog
bmV3IGJyYW5jaCBub2RlcyBhcmUKKwkJICAgYWxsb2NhdGVkIG92ZXIgYWxyZWFkeSBhbGxvY2F0
ZWQgY2hpbGRyZW4gd2hpbGUgdGhlIHRyZWUKKwkJICAgZ3Jvd3MsIGl0IGlzIGRpZmZpY3VsdCB0
byBrZWVwIHRyZWUgb3JkZXJlZCwgd2UgYXNzdW1lIHRoYXQKKwkJICAgb25seSBsZWF2ZXMgYW5k
IHR3aW5ncyBhcmUgY29ycmVjdGx5IGFsbG9jYXRlZC4gU28sIG9ubHkKKwkJICAgdHdpZ3MgYXJl
IHVzZWQgYXMgYSBwcmVjZWRlciBmb3IgYWxsb2NhdGluZyBvZiB0aGUgcmVzdCBvZgorCQkgICB0
aGUgc2x1bS4gKi8KKwkJaWYgKHpub2RlX2dldF9sZXZlbChyaWdodF9wYXJlbnRfbG9jay5ub2Rl
KSA9PSBUV0lHX0xFVkVMKSB7CisJCQlwb3MtPnByZWNlZGVyLmJsayA9CisJCQkgICAgKnpub2Rl
X2dldF9ibG9jayhyaWdodF9wYXJlbnRfbG9jay5ub2RlKTsKKwkJCWNoZWNrX3ByZWNlZGVyKHBv
cy0+cHJlY2VkZXIuYmxrKTsKKwkJfQorCQlnb3RvIG91dDsKKwl9CisKKwlyZXQgPSBpbmNyX2xv
YWRfY291bnRfem5vZGUoJmxlZnRfcGFyZW50X2xvYWQsIGxlZnRfcGFyZW50X2xvY2subm9kZSk7
CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlyZXQgPSBpbmNyX2xvYWRfY291bnRfem5vZGUo
JnJpZ2h0X3BhcmVudF9sb2FkLCByaWdodF9wYXJlbnRfbG9jay5ub2RlKTsKKwlpZiAocmV0KQor
CQlnb3RvIG91dDsKKworCXJldCA9CisJICAgIHNxdWVlemVfcmlnaHRfbmVpZ2hib3IocG9zLCBs
ZWZ0X3BhcmVudF9sb2NrLm5vZGUsCisJCQkJICAgcmlnaHRfcGFyZW50X2xvY2subm9kZSk7CisJ
LyogV2Ugc3RvcCBpZiBlcnJvci4gV2Ugc3RvcCBpZiBzb21lIGl0ZW1zL3VuaXRzIHdlcmUgc2hp
ZnRlZCAocmV0ID09IDApCisJICogYW5kIHRodXMgQHJpZ2h0IGNoYW5nZWQgaXRzIHBhcmVudC4g
SXQgbWVhbnMgd2UgaGF2ZSBub3QgcHJvY2VzcworCSAqIHJpZ2h0X3BhcmVudCBub2RlIHByaW9y
IHRvIHByb2Nlc3Npbmcgb2YgQHJpZ2h0LiBQb3NpdGl2ZSByZXR1cm4KKwkgKiB2YWx1ZXMgc2F5
IHRoYXQgc2hpZnRpbmcgaXRlbXMgd2FzIG5vdCBoYXBwZW4gYmVjYXVzZSBvZiAiZW1wdHkKKwkg
KiBzb3VyY2UiIG9yICJ0YXJnZXQgZnVsbCIgY29uZGl0aW9ucy4gKi8KKwlpZiAocmV0IDw9IDAp
CisJCWdvdG8gb3V0OworCisJLyogcGFyZW50KEBsZWZ0KSBhbmQgcGFyZW50KEByaWdodCkgbWF5
IGhhdmUgZGlmZmVyZW50IHBhcmVudHMgYWxzby4gV2UKKwkgKiBkbyBhIHJlY3Vyc2l2ZSBjYWxs
IGZvciBjaGVja2luZyB0aGF0LiAqLworCXJldCA9CisJICAgIGNoZWNrX3BhcmVudHNfYW5kX3Nx
dWFsbG9jX3VwcGVyX2xldmVscyhwb3MsIGxlZnRfcGFyZW50X2xvY2subm9kZSwKKwkJCQkJCSAg
ICByaWdodF9wYXJlbnRfbG9jay5ub2RlKTsKKwlpZiAocmV0KQorCQlnb3RvIG91dDsKKworCS8q
IGFsbG9jYXRlIHpub2RlIHdoZW4gZ29pbmcgZG93biAqLworCXJldCA9IGxvY2tfcGFyZW50X2Fu
ZF9hbGxvY2F0ZV96bm9kZShyaWdodF9wYXJlbnRfbG9jay5ub2RlLCBwb3MpOworCitvdXQ6CisJ
ZG9uZV9sb2FkX2NvdW50KCZsZWZ0X3BhcmVudF9sb2FkKTsKKwlkb25lX2xvYWRfY291bnQoJnJp
Z2h0X3BhcmVudF9sb2FkKTsKKworCWRvbmVfbGgoJmxlZnRfcGFyZW50X2xvY2spOworCWRvbmVf
bGgoJnJpZ2h0X3BhcmVudF9sb2NrKTsKKworCXJldHVybiByZXQ7Cit9CisKKy8qIENoZWNrIHRo
ZSBsZWZ0bW9zdCBjaGlsZCAiZmx1c2hwcmVwcGVkIiBzdGF0dXMsIGFsc28gcmV0dXJucyB0cnVl
IGlmIGNoaWxkCisgKiBub2RlIHdhcyBub3QgZm91bmQgaW4gY2FjaGUuICAqLworc3RhdGljIGlu
dCBsZWZ0bW9zdF9jaGlsZF9vZl91bml0X2NoZWNrX2ZsdXNocHJlcHBlZChjb25zdCBjb29yZF90
ICpjb29yZCkKK3sKKwlpbnQgcmV0OworCWludCBwcmVwcGVkOworCisJam5vZGUgKmNoaWxkOwor
CisJcmV0ID0gZ2V0X2xlZnRtb3N0X2NoaWxkX29mX3VuaXQoY29vcmQsICZjaGlsZCk7CisKKwlp
ZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJaWYgKGNoaWxkKSB7CisJCXByZXBwZWQgPSBqbm9k
ZV9jaGVja19mbHVzaHByZXBwZWQoY2hpbGQpOworCQlqcHV0KGNoaWxkKTsKKwl9IGVsc2Ugewor
CQkvKiBXZSBjb25zaWRlciBub3QgZXhpc3RpbmcgY2hpbGQgYXMgYSBub2RlIHdoaWNoIHNsdW0K
KwkJICAgcHJvY2Vzc2luZyBzaG91bGQgbm90IGNvbnRpbnVlIHRvLiAgTm90IGNhY2hlZCBub2Rl
IGlzIGNsZWFuLAorCQkgICBzbyBpdCBpcyBmbHVzaHByZXBwZWQuICovCisJCXByZXBwZWQgPSAx
OworCX0KKworCXJldHVybiBwcmVwcGVkOworfQorCisvKiAocmUpYWxsb2NhdGUgem5vZGUgd2l0
aCBhdXRvbWF0ZWQgZ2V0dGluZyBwYXJlbnQgbm9kZSAqLworc3RhdGljIGludCBsb2NrX3BhcmVu
dF9hbmRfYWxsb2NhdGVfem5vZGUoem5vZGUgKiBub2RlLCBmbHVzaF9wb3NfdCAqcG9zKQorewor
CWludCByZXQ7CisJbG9ja19oYW5kbGUgcGFyZW50X2xvY2s7CisJbG9hZF9jb3VudCBwYXJlbnRf
bG9hZDsKKwljb29yZF90IHBjb29yZDsKKworCWFzc2VydCgiemFtLTg1MSIsIHpub2RlX2lzX3dy
aXRlX2xvY2tlZChub2RlKSk7CisKKwlpbml0X2xoKCZwYXJlbnRfbG9jayk7CisJaW5pdF9sb2Fk
X2NvdW50KCZwYXJlbnRfbG9hZCk7CisKKwlyZXQgPSByZWlzZXI0X2dldF9wYXJlbnQoJnBhcmVu
dF9sb2NrLCBub2RlLCBaTk9ERV9XUklURV9MT0NLKTsKKwlpZiAocmV0KQorCQlnb3RvIG91dDsK
KworCXJldCA9IGluY3JfbG9hZF9jb3VudF96bm9kZSgmcGFyZW50X2xvYWQsIHBhcmVudF9sb2Nr
Lm5vZGUpOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0gZmluZF9jaGlsZF9wdHIo
cGFyZW50X2xvY2subm9kZSwgbm9kZSwgJnBjb29yZCk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7
CisKKwlyZXQgPSBhbGxvY2F0ZV96bm9kZShub2RlLCAmcGNvb3JkLCBwb3MpOworCitvdXQ6CisJ
ZG9uZV9sb2FkX2NvdW50KCZwYXJlbnRfbG9hZCk7CisJZG9uZV9saCgmcGFyZW50X2xvY2spOwor
CXJldHVybiByZXQ7Cit9CisKKy8qCisgKiBQcm9jZXNzIG5vZGVzIG9uIHRoZSBsZWFmIGxldmVs
IHVudGlsIHVuZm9ybWF0dGVkIG5vZGUgb3IKKyAqIHJpZ2h0bW9zdCBub2RlIGluIHRoZSBzbHVt
IHJlYWNoZWQuCisgKgorICogVGhpcyBmdW5jdGlvbiBpcyBhIGNvbXBsaWNhdGVkIGJlYXN0LCBi
ZWNhdXNlIGl0IGNhbGxzIGEKKyAqIHN0YXRpYyBtYWNoaW5lIC0+Y29udmVydF9ub2RlKCkgZm9y
IGV2ZXJ5IG5vZGUsIHdoaWNoLCBpbgorICogdHVybiwgc2NhbnMgbm9kZSdzIGl0ZW1zIGFuZCBk
b2VzIHNvbWV0aGluZyBmb3IgZWFjaCBvZiB0aGVtLgorICovCitzdGF0aWMgaW50IGhhbmRsZV9w
b3Nfb25fZm9ybWF0dGVkKGZsdXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldDsKKwlsb2NrX2hh
bmRsZSByaWdodF9sb2NrOworCWxvYWRfY291bnQgcmlnaHRfbG9hZDsKKworCWluaXRfbGgoJnJp
Z2h0X2xvY2spOworCWluaXRfbG9hZF9jb3VudCgmcmlnaHRfbG9hZCk7CisKKwlpZiAoem5vZGVf
Y29udmVydGlibGUocG9zLT5sb2NrLm5vZGUpKSB7CisJCXJldCA9IGNvbnZlcnRfbm9kZShwb3Ms
IHBvcy0+bG9jay5ub2RlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCXdoaWxl
ICgxKSB7CisJCWFzc2VydCgiZWR3YXJkLTE2MzUiLAorCQkgICAgICAgZXJnbyhub2RlX2lzX2Vt
cHR5KHBvcy0+bG9jay5ub2RlKSwKKwkJCSAgICBaRl9JU1NFVChwb3MtPmxvY2subm9kZSwgSk5P
REVfSEVBUkRfQkFOU0hFRSkpKTsKKwkJLyoKKwkJICogRmlyc3Qgb2YgYWxsLCBncmFiIGEgcmln
aHQgbmVpZ2hib3IKKwkJICovCisJCWlmIChjb252ZXJ0X2RhdGEocG9zKSAmJiBjb252ZXJ0X2Rh
dGEocG9zKS0+cmlnaHRfbG9ja2VkKSB7CisJCQkvKgorCQkJICogdGhlIHJpZ2h0IG5laWdoYm9y
IHdhcyBsb2NrZWQgYnkgY29udmVydF9ub2RlKCkKKwkJCSAqIHRyYW5zZmVyIHRoZSBsb2NrIGZy
b20gdGhlICJjYWNoZSIuCisgCQkJICovCisJCQltb3ZlX2xoKCZyaWdodF9sb2NrLCAmY29udmVy
dF9kYXRhKHBvcyktPnJpZ2h0X2xvY2spOworCQkJZG9uZV9saCgmY29udmVydF9kYXRhKHBvcykt
PnJpZ2h0X2xvY2spOworCQkJY29udmVydF9kYXRhKHBvcyktPnJpZ2h0X2xvY2tlZCA9IDA7CisJ
CX0KKwkJZWxzZSB7CisJCQlyZXQgPSBuZWlnaGJvcl9pbl9zbHVtKHBvcy0+bG9jay5ub2RlLCAm
cmlnaHRfbG9jaywKKwkJCQkJICAgICAgIFJJR0hUX1NJREUsIFpOT0RFX1dSSVRFX0xPQ0ssCisJ
CQkJCSAgICAgICAxLCAwKTsKKwkJCWlmIChyZXQpIHsKKwkJCQkvKgorCQkJCSAqIFRoZXJlIGlz
IG5vIHJpZ2h0IG5laWdoYm9yIGZvciBzb21lIHJlYXNvbnMsCisJCQkJICogc28gZmluaXNoIHdp
dGggdGhpcyBsZXZlbC4KKwkJCQkgKi8KKwkJCQlhc3NlcnQoImVkd2FyZC0xNjM2IiwKKwkJCQkg
ICAgICAgIXNob3VsZF9jb252ZXJ0X3JpZ2h0X25laWdoYm9yKHBvcykpOworCQkJCWJyZWFrOwor
CQkJfQorCQl9CisJCS8qCisJCSAqIENoZWNrICJmbHVzaHByZXBwZWQiIHN0YXR1cyBvZiB0aGUg
cmlnaHQgbmVpZ2hib3IuCisJCSAqCisJCSAqIFdlIGRvbid0IHByZXAoYWxsb2NhdGUpIG5vZGVz
IGZvciBmbHVzaGluZyB0d2ljZS4gVGhpcyBjYW4gYmUKKwkJICogc3Vib3B0aW1hbCwgb3IgaXQg
Y2FuIGJlIG9wdGltYWwuIEZvciBub3cgd2UgY2hvb3NlIHRvIGxpdmUKKwkJICogd2l0aCB0aGUg
cmlzayB0aGF0IGl0IHdpbGwgYmUgc3Vib3B0aW1hbCBiZWNhdXNlIGl0IHdvdWxkIGJlCisJCSAq
IHF1aXRlIGNvbXBsZXggdG8gY29kZSBpdCB0byBiZSBzbWFydGVyLgorCQkgKi8KKwkJaWYgKHpu
b2RlX2NoZWNrX2ZsdXNocHJlcHBlZChyaWdodF9sb2NrLm5vZGUpCisJCSAgICAmJiAhem5vZGVf
Y29udmVydGlibGUocmlnaHRfbG9jay5ub2RlKSkgeworCQkJYXNzZXJ0KCJlZHdhcmQtMTAwNSIs
CisJCQkgICAgICAgIXNob3VsZF9jb252ZXJ0X3JpZ2h0X25laWdoYm9yKHBvcykpOworCQkJcG9z
X3N0b3AocG9zKTsKKwkJCWJyZWFrOworCQl9CisJCXJldCA9IGluY3JfbG9hZF9jb3VudF96bm9k
ZSgmcmlnaHRfbG9hZCwgcmlnaHRfbG9jay5ub2RlKTsKKwkJaWYgKHJldCkKKwkJCWJyZWFrOwor
CQlpZiAoem5vZGVfY29udmVydGlibGUocmlnaHRfbG9jay5ub2RlKSkgeworCQkJYXNzZXJ0KCJl
ZHdhcmQtMTY0MyIsCisJCQkgICAgICAgZXJnbyhjb252ZXJ0X2RhdGEocG9zKSwKKwkJCQkgICAg
Y29udmVydF9kYXRhKHBvcyktPnJpZ2h0X2xvY2tlZCA9PSAwKSk7CisKKwkJCXJldCA9IGNvbnZl
cnRfbm9kZShwb3MsIHJpZ2h0X2xvY2subm9kZSk7CisJCQlpZiAocmV0KQorCQkJCWJyZWFrOwor
CQl9CisJCWVsc2UKKwkJCWFzc2VydCgiZWR3YXJkLTE2MzciLAorCQkJICAgICAgICFzaG91bGRf
Y29udmVydF9yaWdodF9uZWlnaGJvcihwb3MpKTsKKworCQlpZiAobm9kZV9pc19lbXB0eShwb3Mt
PmxvY2subm9kZSkpIHsKKwkJCS8qCisJCQkgKiBDdXJyZW50IG5vZGUgYmVjYW1lIGVtcHR5IGFm
dGVyIGNvbnZlcnNpb24KKwkJCSAqIGFuZCwgaGVuY2UsIHdhcyByZW1vdmVkIGZyb20gdGhlIHRy
ZWU7CisJCQkgKiBBZHZhbmNlIHRoZSBjdXJyZW50IHBvc2l0aW9uIHRvIHRoZSByaWdodCBuZWln
aGJvci4KKwkJCSAqLworCQkJYXNzZXJ0KCJlZHdhcmQtMTYzOCIsCisJCQkgICAgICAgWkZfSVNT
RVQocG9zLT5sb2NrLm5vZGUsIEpOT0RFX0hFQVJEX0JBTlNIRUUpKTsKKwkJCW1vdmVfZmx1c2hf
cG9zKHBvcywgJnJpZ2h0X2xvY2ssICZyaWdodF9sb2FkLCBOVUxMKTsKKwkJCWNvbnRpbnVlOwor
CQl9CisJCWlmIChub2RlX2lzX2VtcHR5KHJpZ2h0X2xvY2subm9kZSkpIHsKKwkJCWFzc2VydCgi
ZWR3YXJkLTE2MzkiLAorCQkJICAgICAgIFpGX0lTU0VUKHJpZ2h0X2xvY2subm9kZSwgSk5PREVf
SEVBUkRfQkFOU0hFRSkpOworCQkJLyoKKwkJCSAqIFRoZSByaWdodCBuZWlnaGJvciBiZWNhbWUg
ZW1wdHkgYWZ0ZXIKKwkJCSAqIGNvbnZlcnRpb24sIGFuZCBoZW5jZSBpdCB3YXMgZGVsZXRlZAor
CQkJICogZnJvbSB0aGUgdHJlZSAtIHNraXAgdGhpcy4KKwkJCSAqIFNpbmNlIGN1cnJlbnQgbm9k
ZSBpcyBub3QgZW1wdHksCisJCQkgKiB3ZSdsbCBvYnRhaW4gYSBjb3JyZWN0IHBvaW50ZXIgdG8K
KwkJCSAqIHRoZSBuZXh0IHJpZ2h0IG5laWdoYm9yCisJCQkgKi8KKwkJCWRvbmVfbG9hZF9jb3Vu
dCgmcmlnaHRfbG9hZCk7CisJCQlkb25lX2xoKCZyaWdodF9sb2NrKTsKKwkJCWNvbnRpbnVlOwor
CQl9CisJCS8qCisJCSAqIEF0IHRoaXMgcG9pbnQgYm90aCwgY3VycmVudCBub2RlIGFuZCBpdHMg
cmlnaHQKKwkJICogbmVpZ2JvciBhcmUgY29udmVydGVkIGFuZCBub3QgZW1wdHkuCisJCSAqIFNx
dWVlemUgdGhlbSBfYmVmb3JlXyBnb2luZyB1cHdhcmQuCisJCSAqLworCQlyZXQgPSBzcXVlZXpl
X3JpZ2h0X25laWdoYm9yKHBvcywgcG9zLT5sb2NrLm5vZGUsCisJCQkJCSAgICAgcmlnaHRfbG9j
ay5ub2RlKTsKKwkJaWYgKHJldCA8IDApCisJCQlicmVhazsKKwkJaWYgKG5vZGVfaXNfZW1wdHko
cmlnaHRfbG9jay5ub2RlKSkgeworCQkJYXNzZXJ0KCJlZHdhcmQtMTY0MCIsCisJCQkgICAgICAg
WkZfSVNTRVQocmlnaHRfbG9jay5ub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSk7CisJCQkvKgor
ICAgICAgICAgICAgICAgICAgICAgICAgICogcmlnaHQgbmVpZ2hib3Igd2FzIHNxdWVlemVkIGNv
bXBsZXRlbHksCisgICAgICAgICAgICAgICAgICAgICAgICAgKiBhbmQgaGVuY2UgaGFzIGJlZW4g
ZGVsZXRlZCBmcm9tIHRoZSB0cmVlLgorCQkJICogU2tpcCB0aGlzLgorCQkJICovCisgICAgICAg
ICAgICAgICAgICAgICAgICBkb25lX2xvYWRfY291bnQoJnJpZ2h0X2xvYWQpOworICAgICAgICAg
ICAgICAgICAgICAgICAgZG9uZV9saCgmcmlnaHRfbG9jayk7CisgICAgICAgICAgICAgICAgICAg
ICAgICBjb250aW51ZTsKKyAgICAgICAgICAgICAgICB9CisJCWlmICh6bm9kZV9jaGVja19mbHVz
aHByZXBwZWQocmlnaHRfbG9jay5ub2RlKSkgeworCQkJaWYgKHNob3VsZF9jb252ZXJ0X3JpZ2h0
X25laWdoYm9yKHBvcykpIHsKKwkJCQkvKgorCQkJCSAqIGluIHNwaXRlIG9mIGZsdXNocHJlcHBl
ZCBzdGF0dXMgb2YgdGhlIG5vZGUsCisJCQkJICogaXRzIHJpZ2h0IHNsdW0gbmVpZ2hib3Igc2hv
dWxkIGJlIGNvbnZlcnRlZAorCQkJCSAqLworCQkJCWFzc2VydCgiZWR3YXJkLTk1MyIsIGNvbnZl
cnRfZGF0YShwb3MpKTsKKwkJCQlhc3NlcnQoImVkd2FyZC05NTQiLCBpdGVtX2NvbnZlcnRfZGF0
YShwb3MpKTsKKworCQkJCW1vdmVfZmx1c2hfcG9zKHBvcywgJnJpZ2h0X2xvY2ssICZyaWdodF9s
b2FkLCBOVUxMKTsKKwkJCQljb250aW51ZTsKKwkJCX0gZWxzZSB7CisJCQkJcG9zX3N0b3AocG9z
KTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCQkvKgorCQkgKiBwYXJlbnQocmlnaHRfbG9jay5u
b2RlKSBoYXMgdG8gYmUgcHJvY2Vzc2VkIGJlZm9yZQorCQkgKiAocmlnaHRfbG9jay5ub2RlKSBk
dWUgdG8gInBhcmVudC1maXJzdCIgYWxsb2NhdGlvbgorCQkgKiBvcmRlcgorCQkgKi8KKwkJcmV0
ID0gY2hlY2tfcGFyZW50c19hbmRfc3F1YWxsb2NfdXBwZXJfbGV2ZWxzKHBvcywKKwkJCQkJCQkg
ICAgICBwb3MtPmxvY2subm9kZSwKKwkJCQkJCQkgICAgICByaWdodF9sb2NrLm5vZGUpOworCQlp
ZiAocmV0KQorCQkJYnJlYWs7CisJCS8qCisJCSAqIChyZSlhbGxvY2F0ZSBfYWZ0ZXJfIGdvaW5n
IHVwd2FyZAorCQkgKi8KKwkJcmV0ID0gbG9ja19wYXJlbnRfYW5kX2FsbG9jYXRlX3pub2RlKHJp
Z2h0X2xvY2subm9kZSwgcG9zKTsKKwkJaWYgKHJldCkKKwkJCWJyZWFrOworCQlpZiAoc2hvdWxk
X3Rlcm1pbmF0ZV9zcXVhbGxvYyhwb3MpKSB7CisJCQlzZXRfaXRlbV9jb252ZXJ0X2NvdW50KHBv
cywgMCk7CisJCQlicmVhazsKKwkJfQorCQkvKgorCQkgKiBhZHZhbmNlIHRoZSBmbHVzaCBwb3Np
dGlvbiB0byB0aGUgcmlnaHQgbmVpZ2hib3IKKwkJICovCisJCW1vdmVfZmx1c2hfcG9zKHBvcywg
JnJpZ2h0X2xvY2ssICZyaWdodF9sb2FkLCBOVUxMKTsKKworCQlyZXQgPSByYXBpZF9mbHVzaChw
b3MpOworCQlpZiAocmV0KQorCQkJYnJlYWs7CisJfQorCWNoZWNrX2NvbnZlcnRfaW5mbyhwb3Mp
OworCWRvbmVfbG9hZF9jb3VudCgmcmlnaHRfbG9hZCk7CisJZG9uZV9saCgmcmlnaHRfbG9jayk7
CisJLyoKKwkgKiBUaGlzIGZ1bmN0aW9uIGluZGljYXRlcyB2aWEgcG9zIHdoZXRoZXIgdG8gc3Rv
cCBvciBnbyB0byB0d2lnIG9yCisJICogY29udGludWUgb24gY3VycmVudCBsZXZlbAorCSAqLwor
CXJldHVybiByZXQ7CisKK30KKworLyogUHJvY2VzcyBub2RlcyBvbiBsZWFmIGxldmVsIHVudGls
IHVuZm9ybWF0dGVkIG5vZGUgb3IgcmlnaHRtb3N0IG5vZGUgaW4gdGhlCisgKiBzbHVtIHJlYWNo
ZWQuICAqLworc3RhdGljIGludCBoYW5kbGVfcG9zX29uX2xlYWYoZmx1c2hfcG9zX3QgKnBvcykK
K3sKKwlpbnQgcmV0OworCisJYXNzZXJ0KCJ6YW0tODQ1IiwgcG9zLT5zdGF0ZSA9PSBQT1NfT05f
TEVBRik7CisKKwlyZXQgPSBoYW5kbGVfcG9zX29uX2Zvcm1hdHRlZChwb3MpOworCisJaWYgKHJl
dCA9PSAtRV9OT19ORUlHSEJPUikgeworCQkvKiBjYW5ub3QgZ2V0IHJpZ2h0IG5laWdoYm9yLCBn
byBwcm9jZXNzIGV4dGVudHMuICovCisJCXBvcy0+c3RhdGUgPSBQT1NfVE9fVFdJRzsKKwkJcmV0
dXJuIDA7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworLyogUHJvY2VzcyBzbHVtIG9uIGxldmVs
ID4gMSAqLworc3RhdGljIGludCBoYW5kbGVfcG9zX29uX2ludGVybmFsKGZsdXNoX3Bvc190ICpw
b3MpCit7CisJYXNzZXJ0KCJ6YW0tODUwIiwgcG9zLT5zdGF0ZSA9PSBQT1NfT05fSU5URVJOQUwp
OworCXJldHVybiBoYW5kbGVfcG9zX29uX2Zvcm1hdHRlZChwb3MpOworfQorCisvKiBjaGVjayB3
aGV0aGVyIHNxdWFsbG9jIHNob3VsZCBzdG9wIGJlZm9yZSBwcm9jZXNzaW5nIGdpdmVuIGV4dGVu
dCAqLworc3RhdGljIGludCBzcXVhbGxvY19leHRlbnRfc2hvdWxkX3N0b3AoZmx1c2hfcG9zX3Qg
KnBvcykKK3sKKwlhc3NlcnQoInphbS04NjkiLCBpdGVtX2lzX2V4dGVudCgmcG9zLT5jb29yZCkp
OworCisJLyogcG9zLT5jaGlsZCBpcyBhIGpub2RlIGhhbmRsZV9wb3Nfb25fZXh0ZW50KCkgc2hv
dWxkIHN0YXJ0IHdpdGggaW4KKwkgKiBzdGVhZCBvZiB0aGUgZmlyc3QgY2hpbGQgb2YgdGhlIGZp
cnN0IGV4dGVudCB1bml0LiAqLworCWlmIChwb3MtPmNoaWxkKSB7CisJCWludCBwcmVwcGVkOwor
CisJCWFzc2VydCgidnMtMTM4MyIsIGpub2RlX2lzX3VuZm9ybWF0dGVkKHBvcy0+Y2hpbGQpKTsK
KwkJcHJlcHBlZCA9IGpub2RlX2NoZWNrX2ZsdXNocHJlcHBlZChwb3MtPmNoaWxkKTsKKwkJcG9z
LT5wb3NfaW5fdW5pdCA9CisJCSAgICBqbm9kZV9nZXRfaW5kZXgocG9zLT5jaGlsZCkgLQorCQkg
ICAgZXh0ZW50X3VuaXRfaW5kZXgoJnBvcy0+Y29vcmQpOworCQlhc3NlcnQoInZzLTE0NzAiLAor
CQkgICAgICAgcG9zLT5wb3NfaW5fdW5pdCA8IGV4dGVudF91bml0X3dpZHRoKCZwb3MtPmNvb3Jk
KSk7CisJCWFzc2VydCgibmlraXRhLTM0MzQiLAorCQkgICAgICAgZXJnbyhleHRlbnRfaXNfdW5h
bGxvY2F0ZWQoJnBvcy0+Y29vcmQpLAorCQkJICAgIHBvcy0+cG9zX2luX3VuaXQgPT0gMCkpOwor
CQlqcHV0KHBvcy0+Y2hpbGQpOworCQlwb3MtPmNoaWxkID0gTlVMTDsKKworCQlyZXR1cm4gcHJl
cHBlZDsKKwl9CisKKwlwb3MtPnBvc19pbl91bml0ID0gMDsKKwlpZiAoZXh0ZW50X2lzX3VuYWxs
b2NhdGVkKCZwb3MtPmNvb3JkKSkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gbGVmdG1vc3RfY2hp
bGRfb2ZfdW5pdF9jaGVja19mbHVzaHByZXBwZWQoJnBvcy0+Y29vcmQpOworfQorCisvKiBIYW5k
bGUgdGhlIGNhc2Ugd2hlbiByZWd1bGFyIHJlaXNlcjQgdHJlZSAoem5vZGVzIGNvbm5lY3RlZCBv
bmUgdG8gaXRzCisgKiBuZWlnaGJvcnMgYnkgc2libGluZyBwb2ludGVycykgaXMgaW50ZXJydXB0
ZWQgb24gbGVhZiBsZXZlbCBieSBvbmUgb3IgbW9yZQorICogdW5mb3JtYXR0ZWQgbm9kZXMuICBC
eSBoYXZpbmcgYSBsb2NrIG9uIHR3aWcgbGV2ZWwgYW5kIHVzZSBleHRlbnQgY29kZQorICogcm91
dGluZXMgdG8gcHJvY2VzcyB1bmZvcm1hdHRlZCBub2RlcyB3ZSBzd2ltIGFyb3VuZCBhbiBpcnJl
Z3VsYXIgcGFydCBvZgorICogcmVpc2VyNCB0cmVlLiAqLworc3RhdGljIGludCBoYW5kbGVfcG9z
X29uX3R3aWcoZmx1c2hfcG9zX3QgKnBvcykKK3sKKwlpbnQgcmV0OworCXR4bW9kX3BsdWdpbiAq
dHhtb2RfcGx1ZyA9IGdldF90eG1vZF9wbHVnaW4oKTsKKworCWFzc2VydCgiemFtLTg0NCIsIHBv
cy0+c3RhdGUgPT0gUE9TX09OX0VQT0lOVCk7CisJYXNzZXJ0KCJ6YW0tODQzIiwgaXRlbV9pc19l
eHRlbnQoJnBvcy0+Y29vcmQpKTsKKworCS8qIFdlIGRlY2lkZSBzaG91bGQgd2UgY29udGludWUg
c2x1bSBwcm9jZXNzaW5nIHdpdGggY3VycmVudCBleHRlbnQKKwkgICB1bml0OiBpZiBsZWZ0bW9z
dCBjaGlsZCBvZiBjdXJyZW50IGV4dGVudCB1bml0IGlzIGZsdXNocHJlcHBlZAorCSAgIChpLmUu
IGNsZWFuIG9yIGFscmVhZHkgcHJvY2Vzc2VkIGJ5IGZsdXNoKSB3ZSBzdG9wIHNxdWFsbG9jKCku
ICBUaGVyZQorCSAgIGlzIGEgZmFzdCBjaGVjayBmb3IgdW5hbGxvY2F0ZWQgZXh0ZW50cyB3aGlj
aCB3ZSBhc3N1bWUgY29udGFpbiBhbGwKKwkgICBub3QgZmx1c2hwcmVwcGVkIG5vZGVzLiAqLwor
CS8qIEZJWE1FOiBIZXJlIHdlIGltcGxlbWVudCBzaW1wbGUgY2hlY2ssIHdlIGFyZSBvbmx5IGxv
b2tpbmcgb24gdGhlCisJICAgbGVmdG1vc3QgY2hpbGQuICovCisJcmV0ID0gc3F1YWxsb2NfZXh0
ZW50X3Nob3VsZF9zdG9wKHBvcyk7CisJaWYgKHJldCAhPSAwKSB7CisJCXBvc19zdG9wKHBvcyk7
CisJCXJldHVybiByZXQ7CisJfQorCisJd2hpbGUgKHBvc192YWxpZChwb3MpICYmIGNvb3JkX2lz
X2V4aXN0aW5nX3VuaXQoJnBvcy0+Y29vcmQpCisJICAgICAgICYmIGl0ZW1faXNfZXh0ZW50KCZw
b3MtPmNvb3JkKSkgeworCQlyZXQgPSB0eG1vZF9wbHVnLT5mb3J3YXJkX2FsbG9jX3VuZm9ybWF0
dGVkKHBvcyk7CisJCWlmIChyZXQpCisJCQlicmVhazsKKwkJY29vcmRfbmV4dF91bml0KCZwb3Mt
PmNvb3JkKTsKKwl9CisKKwlpZiAoY29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0KCZwb3MtPmNvb3Jk
KSkgeworCQlwb3MtPnN0YXRlID0gUE9TX0VORF9PRl9UV0lHOworCQlyZXR1cm4gMDsKKwl9CisJ
aWYgKGl0ZW1faXNfaW50ZXJuYWwoJnBvcy0+Y29vcmQpKSB7CisJCXBvcy0+c3RhdGUgPSBQT1Nf
VE9fTEVBRjsKKwkJcmV0dXJuIDA7CisJfQorCisJYXNzZXJ0KCJ6YW0tODYwIiwgaXRlbV9pc19l
eHRlbnQoJnBvcy0+Y29vcmQpKTsKKworCS8qICJzbHVtIiBpcyBvdmVyICovCisJcG9zLT5zdGF0
ZSA9IFBPU19JTlZBTElEOworCXJldHVybiAwOworfQorCisvKiBXaGVuIHdlIGFib3V0IHRvIHJl
dHVybiBmbHVzaCBwb3NpdGlvbiBmcm9tIHR3aWcgdG8gbGVhZiBsZXZlbCB3ZSBjYW4gcHJvY2Vz
cworICogdGhlIHJpZ2h0IHR3aWcgbm9kZSBvciBtb3ZlIHBvc2l0aW9uIHRvIHRoZSBsZWFmLiAg
VGhpcyBwcm9jZXNzZXMgcmlnaHQgdHdpZworICogaWYgaXQgaXMgcG9zc2libGUgYW5kIGp1bXAg
dG8gbGVhZiBsZXZlbCBpZiBub3QuICovCitzdGF0aWMgaW50IGhhbmRsZV9wb3NfZW5kX29mX3R3
aWcoZmx1c2hfcG9zX3QgKnBvcykKK3sKKwlpbnQgcmV0OworCWxvY2tfaGFuZGxlIHJpZ2h0X2xv
Y2s7CisJbG9hZF9jb3VudCByaWdodF9sb2FkOworCWNvb3JkX3QgYXRfcmlnaHQ7CisJam5vZGUg
KmNoaWxkID0gTlVMTDsKKworCWFzc2VydCgiemFtLTg0OCIsIHBvcy0+c3RhdGUgPT0gUE9TX0VO
RF9PRl9UV0lHKTsKKwlhc3NlcnQoInphbS04NDkiLCBjb29yZF9pc19hZnRlcl9yaWdodG1vc3Qo
JnBvcy0+Y29vcmQpKTsKKworCWluaXRfbGgoJnJpZ2h0X2xvY2spOworCWluaXRfbG9hZF9jb3Vu
dCgmcmlnaHRfbG9hZCk7CisKKwkvKiBXZSBnZXQgYSBsb2NrIG9uIHRoZSByaWdodCB0d2lnIG5v
ZGUgZXZlbiBpdCBpcyBub3QgZGlydHkgYmVjYXVzZQorCSAqIHNsdW0gY29udGludWVzIG9yIGRp
c2NvbnRpbnVlcyBvbiBsZWFmIGxldmVsIG5vdCBvbiBuZXh0IHR3aWcuIFRoaXMKKwkgKiBsb2Nr
IG9uIHRoZSByaWdodCB0d2lnIGlzIG5lZWRlZCBmb3IgZ2V0dGluZyBpdHMgbGVmdG1vc3QgY2hp
bGQuICovCisJcmV0ID0KKwkgICAgcmVpc2VyNF9nZXRfcmlnaHRfbmVpZ2hib3IoJnJpZ2h0X2xv
Y2ssIHBvcy0+bG9jay5ub2RlLAorCQkJCSAgICAgICBaTk9ERV9XUklURV9MT0NLLCBHTl9TQU1F
X0FUT00pOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0gaW5jcl9sb2FkX2NvdW50
X3pub2RlKCZyaWdodF9sb2FkLCByaWdodF9sb2NrLm5vZGUpOworCWlmIChyZXQpCisJCWdvdG8g
b3V0OworCisJLyogcmlnaHQgdHdpZyBjb3VsZCBiZSBub3QgZGlydHkgKi8KKwlpZiAoSkZfSVNT
RVQoWkpOT0RFKHJpZ2h0X2xvY2subm9kZSksIEpOT0RFX0RJUlRZKSkgeworCQkvKiBJZiByaWdo
dCB0d2lnIG5vZGUgaXMgZGlydHkgd2UgYWx3YXlzIGF0dGVtcHQgdG8gc3F1ZWV6ZSBpdAorCQkg
KiBjb250ZW50IHRvIHRoZSBsZWZ0Li4uICovCitiZWNhbWVfZGlydHk6CisJCXJldCA9CisJCSAg
ICBzcXVlZXplX3JpZ2h0X3R3aWdfYW5kX2FkdmFuY2VfY29vcmQocG9zLCByaWdodF9sb2NrLm5v
ZGUpOworCQlpZiAocmV0IDw9IDApIHsKKwkJCS8qIHBvcy0+Y29vcmQgaXMgb24gaW50ZXJuYWwg
aXRlbSwgZ28gdG8gbGVhZiBsZXZlbCwgb3IKKwkJCSAqIHdlIGhhdmUgYW4gZXJyb3Igd2hpY2gg
d2lsbCBiZSBjYXVnaHQgaW4gc3F1YWxsb2MoKQorCQkJICovCisJCQlwb3MtPnN0YXRlID0gUE9T
X1RPX0xFQUY7CisJCQlnb3RvIG91dDsKKwkJfQorCisJCS8qIElmIHJpZ2h0IHR3aWcgd2FzIHNx
dWVlemVkIGNvbXBsZXRlbHkgd2Ugd2F2ZSB0byByZS1sb2NrCisJCSAqIHJpZ2h0IHR3aWcuIG5v
dyBpdCBpcyBkb25lIHRocm91Z2ggdGhlIHRvcC1sZXZlbCBzcXVhbGxvYworCQkgKiByb3V0aW5l
LiAqLworCQlpZiAobm9kZV9pc19lbXB0eShyaWdodF9sb2NrLm5vZGUpKQorCQkJZ290byBvdXQ7
CisKKwkJLyogLi4uIGFuZCBwcmVwIGl0IGlmIGl0IGlzIG5vdCB5ZXQgcHJlcHBlZCAqLworCQlp
ZiAoIXpub2RlX2NoZWNrX2ZsdXNocHJlcHBlZChyaWdodF9sb2NrLm5vZGUpKSB7CisJCQkvKiBB
cyB1c3VhbCwgcHJvY2VzcyBwYXJlbnQgYmVmb3JlIC4uLiAqLworCQkJcmV0ID0KKwkJCSAgICBj
aGVja19wYXJlbnRzX2FuZF9zcXVhbGxvY191cHBlcl9sZXZlbHMocG9zLAorCQkJCQkJCQkgICAg
cG9zLT5sb2NrLgorCQkJCQkJCQkgICAgbm9kZSwKKwkJCQkJCQkJICAgIHJpZ2h0X2xvY2suCisJ
CQkJCQkJCSAgICBub2RlKTsKKwkJCWlmIChyZXQpCisJCQkJZ290byBvdXQ7CisKKwkJCS8qIC4u
LiBwcm9jZXNzaW5nIHRoZSBjaGlsZCAqLworCQkJcmV0ID0KKwkJCSAgICBsb2NrX3BhcmVudF9h
bmRfYWxsb2NhdGVfem5vZGUocmlnaHRfbG9jay5ub2RlLAorCQkJCQkJCSAgIHBvcyk7CisJCQlp
ZiAocmV0KQorCQkJCWdvdG8gb3V0OworCQl9CisJfSBlbHNlIHsKKwkJY29vcmRfaW5pdF9maXJz
dF91bml0KCZhdF9yaWdodCwgcmlnaHRfbG9jay5ub2RlKTsKKworCQkvKiBjaGVjayBmaXJzdCBj
aGlsZCBvZiBuZXh0IHR3aWcsIHNob3VsZCB3ZSBjb250aW51ZSB0aGVyZSA/ICovCisJCXJldCA9
IGdldF9sZWZ0bW9zdF9jaGlsZF9vZl91bml0KCZhdF9yaWdodCwgJmNoaWxkKTsKKwkJaWYgKHJl
dCB8fCBjaGlsZCA9PSBOVUxMIHx8IGpub2RlX2NoZWNrX2ZsdXNocHJlcHBlZChjaGlsZCkpIHsK
KwkJCXBvc19zdG9wKHBvcyk7CisJCQlnb3RvIG91dDsKKwkJfQorCisJCS8qIGNoZWNrIGNsZWFu
IHR3aWcgZm9yIHBvc3NpYmxlIHJlbG9jYXRpb24gKi8KKwkJaWYgKCF6bm9kZV9jaGVja19mbHVz
aHByZXBwZWQocmlnaHRfbG9jay5ub2RlKSkgeworCQkJcmV0ID0gcmV2ZXJzZV9hbGxvY2F0ZV9w
YXJlbnQoY2hpbGQsICZhdF9yaWdodCwgcG9zKTsKKwkJCWlmIChyZXQpCisJCQkJZ290byBvdXQ7
CisJCQlpZiAoSkZfSVNTRVQoWkpOT0RFKHJpZ2h0X2xvY2subm9kZSksIEpOT0RFX0RJUlRZKSkK
KwkJCQlnb3RvIGJlY2FtZV9kaXJ0eTsKKwkJfQorCX0KKworCWFzc2VydCgiemFtLTg3NSIsIHpu
b2RlX2NoZWNrX2ZsdXNocHJlcHBlZChyaWdodF9sb2NrLm5vZGUpKTsKKworCS8qIFVwZGF0ZSB0
aGUgcHJlY2VkZXIgYnkgYSBibG9jayBudW1iZXIgb2YganVzdCBwcm9jZXNzZWQgcmlnaHQgdHdp
ZworCSAqIG5vZGUuIFRoZSBjb2RlIGFib3ZlIGNvdWxkIG1pc3MgdGhlIHByZWNlZGVyIHVwZGF0
aW5nIGJlY2F1c2UKKwkgKiBhbGxvY2F0ZV96bm9kZSgpIGNvdWxkIG5vdCBiZSBjYWxsZWQgZm9y
IHRoaXMgbm9kZS4gKi8KKwlwb3MtPnByZWNlZGVyLmJsayA9ICp6bm9kZV9nZXRfYmxvY2socmln
aHRfbG9jay5ub2RlKTsKKwljaGVja19wcmVjZWRlcihwb3MtPnByZWNlZGVyLmJsayk7CisKKwlj
b29yZF9pbml0X2ZpcnN0X3VuaXQoJmF0X3JpZ2h0LCByaWdodF9sb2NrLm5vZGUpOworCWFzc2Vy
dCgiemFtLTg2OCIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoJmF0X3JpZ2h0KSk7CisKKwlwb3Mt
PnN0YXRlID0gaXRlbV9pc19leHRlbnQoJmF0X3JpZ2h0KSA/IFBPU19PTl9FUE9JTlQgOiBQT1Nf
VE9fTEVBRjsKKwltb3ZlX2ZsdXNoX3Bvcyhwb3MsICZyaWdodF9sb2NrLCAmcmlnaHRfbG9hZCwg
JmF0X3JpZ2h0KTsKKworb3V0OgorCWRvbmVfbG9hZF9jb3VudCgmcmlnaHRfbG9hZCk7CisJZG9u
ZV9saCgmcmlnaHRfbG9jayk7CisKKwlpZiAoY2hpbGQpCisJCWpwdXQoY2hpbGQpOworCisJcmV0
dXJuIHJldDsKK30KKworLyogTW92ZSB0aGUgcG9zLT5sb2NrIHRvIGxlYWYgbm9kZSBwb2ludGVk
IGJ5IHBvcy0+Y29vcmQsIGNoZWNrIHNob3VsZCB3ZQorICogY29udGludWUgdGhlcmUuICovCitz
dGF0aWMgaW50IGhhbmRsZV9wb3NfdG9fbGVhZihmbHVzaF9wb3NfdCAqcG9zKQoreworCWludCBy
ZXQ7CisJbG9ja19oYW5kbGUgY2hpbGRfbG9jazsKKwlsb2FkX2NvdW50IGNoaWxkX2xvYWQ7CisJ
am5vZGUgKmNoaWxkOworCisJYXNzZXJ0KCJ6YW0tODQ2IiwgcG9zLT5zdGF0ZSA9PSBQT1NfVE9f
TEVBRik7CisJYXNzZXJ0KCJ6YW0tODQ3IiwgaXRlbV9pc19pbnRlcm5hbCgmcG9zLT5jb29yZCkp
OworCisJaW5pdF9saCgmY2hpbGRfbG9jayk7CisJaW5pdF9sb2FkX2NvdW50KCZjaGlsZF9sb2Fk
KTsKKworCXJldCA9IGdldF9sZWZ0bW9zdF9jaGlsZF9vZl91bml0KCZwb3MtPmNvb3JkLCAmY2hp
bGQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisJaWYgKGNoaWxkID09IE5VTEwpIHsKKwkJ
cG9zX3N0b3AocG9zKTsKKwkJcmV0dXJuIDA7CisJfQorCisJaWYgKGpub2RlX2NoZWNrX2ZsdXNo
cHJlcHBlZChjaGlsZCkpIHsKKwkJcG9zLT5zdGF0ZSA9IFBPU19JTlZBTElEOworCQlnb3RvIG91
dDsKKwl9CisKKwlyZXQgPQorCSAgICBsb25ndGVybV9sb2NrX3pub2RlKCZjaGlsZF9sb2NrLCBK
Wk5PREUoY2hpbGQpLCBaTk9ERV9XUklURV9MT0NLLAorCQkJCVpOT0RFX0xPQ0tfTE9QUkkpOwor
CWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0gaW5jcl9sb2FkX2NvdW50X3pub2RlKCZj
aGlsZF9sb2FkLCBKWk5PREUoY2hpbGQpKTsKKwlpZiAocmV0KQorCQlnb3RvIG91dDsKKworCXJl
dCA9IGFsbG9jYXRlX3pub2RlKEpaTk9ERShjaGlsZCksICZwb3MtPmNvb3JkLCBwb3MpOworCWlm
IChyZXQpCisJCWdvdG8gb3V0OworCisJLyogbW92ZSBmbHVzaCBwb3NpdGlvbiB0byBsZWFmIGxl
dmVsICovCisJcG9zLT5zdGF0ZSA9IFBPU19PTl9MRUFGOworCW1vdmVfZmx1c2hfcG9zKHBvcywg
JmNoaWxkX2xvY2ssICZjaGlsZF9sb2FkLCBOVUxMKTsKKworCWlmIChub2RlX2lzX2VtcHR5KEpa
Tk9ERShjaGlsZCkpKSB7CisJCXJldCA9IGRlbGV0ZV9lbXB0eV9ub2RlKEpaTk9ERShjaGlsZCkp
OworCQlwb3MtPnN0YXRlID0gUE9TX0lOVkFMSUQ7CisJfQorb3V0OgorCWRvbmVfbG9hZF9jb3Vu
dCgmY2hpbGRfbG9hZCk7CisJZG9uZV9saCgmY2hpbGRfbG9jayk7CisJanB1dChjaGlsZCk7CisK
KwlyZXR1cm4gcmV0OworfQorCisvKiBtb3ZlIHBvcyBmcm9tIGxlYWYgdG8gdHdpZywgYW5kIG1v
dmUgbG9jayBmcm9tIGxlYWYgdG8gdHdpZy4gKi8KKy8qIE1vdmUgcG9zLT5sb2NrIHRvIHVwcGVy
ICh0d2lnKSBsZXZlbCAqLworc3RhdGljIGludCBoYW5kbGVfcG9zX3RvX3R3aWcoZmx1c2hfcG9z
X3QgKnBvcykKK3sKKwlpbnQgcmV0OworCisJbG9ja19oYW5kbGUgcGFyZW50X2xvY2s7CisJbG9h
ZF9jb3VudCBwYXJlbnRfbG9hZDsKKwljb29yZF90IHBjb29yZDsKKworCWFzc2VydCgiemFtLTg1
MiIsIHBvcy0+c3RhdGUgPT0gUE9TX1RPX1RXSUcpOworCisJaW5pdF9saCgmcGFyZW50X2xvY2sp
OworCWluaXRfbG9hZF9jb3VudCgmcGFyZW50X2xvYWQpOworCisJcmV0ID0KKwkgICAgcmVpc2Vy
NF9nZXRfcGFyZW50KCZwYXJlbnRfbG9jaywgcG9zLT5sb2NrLm5vZGUsIFpOT0RFX1dSSVRFX0xP
Q0spOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0gaW5jcl9sb2FkX2NvdW50X3pu
b2RlKCZwYXJlbnRfbG9hZCwgcGFyZW50X2xvY2subm9kZSk7CisJaWYgKHJldCkKKwkJZ290byBv
dXQ7CisKKwlyZXQgPSBmaW5kX2NoaWxkX3B0cihwYXJlbnRfbG9jay5ub2RlLCBwb3MtPmxvY2su
bm9kZSwgJnBjb29yZCk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlhc3NlcnQoInphbS04
NzAiLCBpdGVtX2lzX2ludGVybmFsKCZwY29vcmQpKTsKKwljb29yZF9uZXh0X2l0ZW0oJnBjb29y
ZCk7CisKKwlpZiAoY29vcmRfaXNfYWZ0ZXJfcmlnaHRtb3N0KCZwY29vcmQpKQorCQlwb3MtPnN0
YXRlID0gUE9TX0VORF9PRl9UV0lHOworCWVsc2UgaWYgKGl0ZW1faXNfZXh0ZW50KCZwY29vcmQp
KQorCQlwb3MtPnN0YXRlID0gUE9TX09OX0VQT0lOVDsKKwllbHNlIHsKKwkJLyogSGVyZSB3ZSB1
bmRlcnN0YW5kIHRoYXQgZ2V0dGluZyAtRV9OT19ORUlHSEJPUiBpbgorCQkgKiBoYW5kbGVfcG9z
X29uX2xlYWYoKSB3YXMgYmVjYXVzZSBvZiBqdXN0IGEgcmVhY2hpbmcgZWRnZSBvZgorCQkgKiBz
bHVtICovCisJCXBvc19zdG9wKHBvcyk7CisJCWdvdG8gb3V0OworCX0KKworCW1vdmVfZmx1c2hf
cG9zKHBvcywgJnBhcmVudF9sb2NrLCAmcGFyZW50X2xvYWQsICZwY29vcmQpOworCitvdXQ6CisJ
ZG9uZV9sb2FkX2NvdW50KCZwYXJlbnRfbG9hZCk7CisJZG9uZV9saCgmcGFyZW50X2xvY2spOwor
CisJcmV0dXJuIHJldDsKK30KKwordHlwZWRlZiBpbnQgKCpwb3Nfc3RhdGVfaGFuZGxlX3QpIChm
bHVzaF9wb3NfdCAqKTsKK3N0YXRpYyBwb3Nfc3RhdGVfaGFuZGxlX3QgZmx1c2hfcG9zX2hhbmRs
ZXJzW10gPSB7CisJLyogcHJvY2VzcyBmb3JtYXR0ZWQgbm9kZXMgb24gbGVhZiBsZXZlbCwga2Vl
cCBsb2NrIG9uIGEgbGVhZiBub2RlICovCisJW1BPU19PTl9MRUFGXSA9IGhhbmRsZV9wb3Nfb25f
bGVhZiwKKwkvKiBwcm9jZXNzIHVuZm9ybWF0dGVkIG5vZGVzLCBrZWVwIGxvY2sgb24gdHdpZyBu
b2RlLCBwb3MtPmNvb3JkIHBvaW50cworCSAqIHRvIGV4dGVudCBjdXJyZW50bHkgYmVpbmcgcHJv
Y2Vzc2VkICovCisJW1BPU19PTl9FUE9JTlRdID0gaGFuZGxlX3Bvc19vbl90d2lnLAorCS8qIG1v
dmUgYSBsb2NrIGZyb20gbGVhZiBub2RlIHRvIGl0cyBwYXJlbnQgZm9yIGZ1cnRoZXIgcHJvY2Vz
c2luZyBvZgorCSAgIHVuZm9ybWF0dGVkIG5vZGVzICovCisJW1BPU19UT19UV0lHXSA9IGhhbmRs
ZV9wb3NfdG9fdHdpZywKKwkvKiBtb3ZlIGEgbG9jayBmcm9tIHR3aWcgdG8gbGVhZiBsZXZlbCB3
aGVuIGEgcHJvY2Vzc2luZyBvZiB1bmZvcm1hdHRlZAorCSAqIG5vZGVzIGZpbmlzaGVzLCBwb3Mt
PmNvb3JkIHBvaW50cyB0byB0aGUgbGVhZiBub2RlIHdlIGp1bXAgdG8gKi8KKwlbUE9TX1RPX0xF
QUZdID0gaGFuZGxlX3Bvc190b19sZWFmLAorCS8qIGFmdGVyIHByb2Nlc3NpbmcgbGFzdCBleHRl
bnQgaW4gdGhlIHR3aWcgbm9kZSwgYXR0ZW1wdGluZyB0byBzaGlmdAorCSAqIGl0ZW1zIGZyb20g
dGhlIHR3aWdzIHJpZ2h0IG5laWdoYm9yIGFuZCBwcm9jZXNzIHRoZW0gd2hpbGUgc2hpZnRpbmcq
LworCVtQT1NfRU5EX09GX1RXSUddID0gaGFuZGxlX3Bvc19lbmRfb2ZfdHdpZywKKwkvKiBwcm9j
ZXNzIGZvcm1hdHRlZCBub2RlcyBvbiBpbnRlcm5hbCBsZXZlbCwga2VlcCBsb2NrIG9uIGFuIGlu
dGVybmFsCisJICAgbm9kZSAqLworCVtQT1NfT05fSU5URVJOQUxdID0gaGFuZGxlX3Bvc19vbl9p
bnRlcm5hbAorfTsKKworLyogQWR2YW5jZSBmbHVzaCBwb3NpdGlvbiBob3Jpem9udGFsbHksIHBy
ZXBhcmUgZm9yIGZsdXNoaW5nICgocmUpYWxsb2NhdGUsCisgKiBzcXVlZXplLCBlbmNyeXB0KSBu
b2RlcyBhbmQgdGhlaXIgYW5jZXN0b3JzIGluICJwYXJlbnQtZmlyc3QiIG9yZGVyICovCitzdGF0
aWMgaW50IHNxdWFsbG9jKGZsdXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldCA9IDA7CisKKwkv
KiBtYXliZSBuZWVkcyB0byBiZSBtYWRlIGEgY2FzZSBzdGF0ZW1lbnQgd2l0aCBoYW5kbGVfcG9z
X29uX2xlYWYgYXMKKwkgKiBmaXJzdCBjYXNlLCBmb3IgZ3JlYXRlciBDUFUgZWZmaWNpZW5jeT8g
TWVhc3VyZSBhbmQgc2VlLi4uLiAtSGFucyAqLworCXdoaWxlIChwb3NfdmFsaWQocG9zKSkgewor
CQlyZXQgPSBmbHVzaF9wb3NfaGFuZGxlcnNbcG9zLT5zdGF0ZV0gKHBvcyk7CisJCWlmIChyZXQg
PCAwKQorCQkJYnJlYWs7CisKKwkJcmV0ID0gcmFwaWRfZmx1c2gocG9zKTsKKwkJaWYgKHJldCkK
KwkJCWJyZWFrOworCX0KKworCS8qIGFueSBwb3NpdGl2ZSB2YWx1ZSBvciAtRV9OT19ORUlHSEJP
UiBhcmUgbGVnYWwgcmV0dXJuIGNvZGVzIGZvcgorCSAgIGhhbmRsZV9wb3MqIHJvdXRpbmVzLCAt
RV9OT19ORUlHSEJPUiBtZWFucyB0aGF0IHNsdW0gZWRnZSB3YXMKKwkgICByZWFjaGVkICovCisJ
aWYgKHJldCA+IDAgfHwgcmV0ID09IC1FX05PX05FSUdIQk9SKQorCQlyZXQgPSAwOworCisJcmV0
dXJuIHJldDsKK30KKworc3RhdGljIHZvaWQgdXBkYXRlX2xka2V5KHpub2RlICogbm9kZSkKK3sK
KwlyZWlzZXI0X2tleSBsZGtleTsKKworCWFzc2VydF9yd193cml0ZV9sb2NrZWQoJih6bm9kZV9n
ZXRfdHJlZShub2RlKS0+ZGtfbG9jaykpOworCWlmIChub2RlX2lzX2VtcHR5KG5vZGUpKQorCQly
ZXR1cm47CisKKwl6bm9kZV9zZXRfbGRfa2V5KG5vZGUsIGxlZnRtb3N0X2tleV9pbl9ub2RlKG5v
ZGUsICZsZGtleSkpOworfQorCisvKiB0aGlzIGlzIHRvIGJlIGNhbGxlZCBhZnRlciBjYWxsaW5n
IG9mIHNoaWZ0IG5vZGUncyBtZXRob2QgdG8gc2hpZnQgZGF0YSBmcm9tCisgICBAcmlnaHQgdG8g
QGxlZnQuIEl0IHNldHMgbGVmdCBkZWxpbWl0aW5nIGtleXMgb2YgQGxlZnQgYW5kIEByaWdodCB0
byBrZXlzIG9mCisgICBmaXJzdCBpdGVtcyBvZiBAbGVmdCBhbmQgQHJpZ2h0IGNvcnJlc3BvbmRp
bmdseSBhbmQgc2V0cyByaWdodCBkZWxpbWl0aW5nIGtleQorICAgb2YgQGxlZnQgdG8gZmlyc3Qg
a2V5IG9mIEByaWdodCAqLworc3RhdGljIHZvaWQgdXBkYXRlX3pub2RlX2RrZXlzKHpub2RlICog
bGVmdCwgem5vZGUgKiByaWdodCkKK3sKKwlhc3NlcnRfcndfd3JpdGVfbG9ja2VkKCYoem5vZGVf
Z2V0X3RyZWUocmlnaHQpLT5ka19sb2NrKSk7CisJYXNzZXJ0KCJ2cy0xNjI5IiwgKHpub2RlX2lz
X3dyaXRlX2xvY2tlZChsZWZ0KSAmJgorCQkJICAgem5vZGVfaXNfd3JpdGVfbG9ja2VkKHJpZ2h0
KSkpOworCisJLyogd2UgbmVlZCB0byB1cGRhdGUgbGVmdCBkZWxpbWl0aW5nIG9mIGxlZnQgaWYg
aXQgd2FzIGVtcHR5IGJlZm9yZQorCSAgIHNoaWZ0ICovCisJdXBkYXRlX2xka2V5KGxlZnQpOwor
CXVwZGF0ZV9sZGtleShyaWdodCk7CisJaWYgKG5vZGVfaXNfZW1wdHkocmlnaHQpKQorCQl6bm9k
ZV9zZXRfcmRfa2V5KGxlZnQsIHpub2RlX2dldF9yZF9rZXkocmlnaHQpKTsKKwllbHNlCisJCXpu
b2RlX3NldF9yZF9rZXkobGVmdCwgem5vZGVfZ2V0X2xkX2tleShyaWdodCkpOworfQorCisvKiB0
cnkgdG8gc2hpZnQgZXZlcnl0aGluZyBmcm9tIEByaWdodCB0byBAbGVmdC4gSWYgZXZlcnl0aGlu
ZyB3YXMgc2hpZnRlZCAtCisgICBAcmlnaHQgaXMgcmVtb3ZlZCBmcm9tIHRoZSB0cmVlLiAgUmVz
dWx0IGlzIHRoZSBudW1iZXIgb2YgYnl0ZXMgc2hpZnRlZC4gKi8KK3N0YXRpYyBpbnQKK3NoaWZ0
X2V2ZXJ5dGhpbmdfbGVmdCh6bm9kZSAqIHJpZ2h0LCB6bm9kZSAqIGxlZnQsIGNhcnJ5X2xldmVs
ICogdG9kbykKK3sKKwljb29yZF90IGZyb207CisJbm9kZV9wbHVnaW4gKm5wbHVnOworCWNhcnJ5
X3BsdWdpbl9pbmZvIGluZm87CisKKwljb29yZF9pbml0X2FmdGVyX2xhc3RfaXRlbSgmZnJvbSwg
cmlnaHQpOworCisJbnBsdWcgPSBub2RlX3BsdWdpbl9ieV9ub2RlKHJpZ2h0KTsKKwlpbmZvLmRv
aW5nID0gTlVMTDsKKwlpbmZvLnRvZG8gPSB0b2RvOworCXJldHVybiBucGx1Zy0+c2hpZnQoJmZy
b20sIGxlZnQsIFNISUZUX0xFRlQsCisJCQkgICAgMSAvKiBkZWxldGUgQHJpZ2h0IGlmIGl0IGJl
Y29tZXMgZW1wdHkgKi8gLAorCQkJICAgIDEKKwkJCSAgICAvKiBtb3ZlIGNvb3JkIEBmcm9tIHRv
IG5vZGUgQGxlZnQgaWYgZXZlcnl0aGluZyB3aWxsCisJCQkgICAgICAgYmUgc2hpZnRlZCAqLwor
CQkJICAgICwKKwkJCSAgICAmaW5mbyk7Cit9CisKKy8qIFNoaWZ0IGFzIG11Y2ggYXMgcG9zc2li
bGUgZnJvbSBAcmlnaHQgdG8gQGxlZnQgdXNpbmcgdGhlIG1lbWNweS1vcHRpbWl6ZWQKKyAgIHNo
aWZ0X2V2ZXJ5dGhpbmdfbGVmdC4gIEBsZWZ0IGFuZCBAcmlnaHQgYXJlIGZvcm1hdHRlZCBuZWln
aGJvcmluZyBub2RlcyBvbgorICAgbGVhZiBsZXZlbC4gKi8KK3N0YXRpYyBpbnQgc3F1ZWV6ZV9y
aWdodF9ub25fdHdpZyh6bm9kZSAqIGxlZnQsIHpub2RlICogcmlnaHQpCit7CisJaW50IHJldDsK
KwljYXJyeV9wb29sICpwb29sOworCWNhcnJ5X2xldmVsICp0b2RvOworCisJYXNzZXJ0KCJuaWtp
dGEtMjI0NiIsIHpub2RlX2dldF9sZXZlbChsZWZ0KSA9PSB6bm9kZV9nZXRfbGV2ZWwocmlnaHQp
KTsKKworCWlmICghSkZfSVNTRVQoWkpOT0RFKGxlZnQpLCBKTk9ERV9ESVJUWSkgfHwKKwkgICAg
IUpGX0lTU0VUKFpKTk9ERShyaWdodCksIEpOT0RFX0RJUlRZKSkKKwkJcmV0dXJuIFNRVUVFWkVf
VEFSR0VUX0ZVTEw7CisKKwlwb29sID0gaW5pdF9jYXJyeV9wb29sKHNpemVvZigqcG9vbCkgKyAz
ICogc2l6ZW9mKCp0b2RvKSk7CisJaWYgKElTX0VSUihwb29sKSkKKwkJcmV0dXJuIFBUUl9FUlIo
cG9vbCk7CisJdG9kbyA9IChjYXJyeV9sZXZlbCAqKSAocG9vbCArIDEpOworCWluaXRfY2Fycnlf
bGV2ZWwodG9kbywgcG9vbCk7CisKKwlyZXQgPSBzaGlmdF9ldmVyeXRoaW5nX2xlZnQocmlnaHQs
IGxlZnQsIHRvZG8pOworCWlmIChyZXQgPiAwKSB7CisJCS8qIHNvbWV0aGluZyB3YXMgc2hpZnRl
ZCAqLworCQlyZWlzZXI0X3RyZWUgKnRyZWU7CisJCV9fdTY0IGdyYWJiZWQ7CisKKwkJem5vZGVf
bWFrZV9kaXJ0eShsZWZ0KTsKKwkJem5vZGVfbWFrZV9kaXJ0eShyaWdodCk7CisKKwkJLyogdXBk
YXRlIGRlbGltaXRpbmcga2V5cyBvZiBub2RlcyB3aGljaCBwYXJ0aWNpcGF0ZWQgaW4KKwkJICAg
c2hpZnQuIEZJWE1FOiBpdCB3b3VsZCBiZSBiZXR0ZXIgdG8gaGF2ZSB0aGlzIGluIHNoaWZ0CisJ
CSAgIG5vZGUncyBvcGVyYXRpb24uIEJ1dCBpdCBjYW4gbm90IGJlIGRvbmUgdGhlcmUuIE5vYm9k
eQorCQkgICByZW1lbWJlcnMgd2h5LCB0aG91Z2gKKwkJKi8KKwkJdHJlZSA9IHpub2RlX2dldF90
cmVlKGxlZnQpOworCQl3cml0ZV9sb2NrX2RrKHRyZWUpOworCQl1cGRhdGVfem5vZGVfZGtleXMo
bGVmdCwgcmlnaHQpOworCQl3cml0ZV91bmxvY2tfZGsodHJlZSk7CisKKwkJLyogQ2FycnkgaXMg
Y2FsbGVkIHRvIHVwZGF0ZSBkZWxpbWl0aW5nIGtleSBhbmQsIG1heWJlLCB0bworCQkgICByZW1v
dmUgZW1wdHkgbm9kZS4gKi8KKwkJZ3JhYmJlZCA9IGdldF9jdXJyZW50X2NvbnRleHQoKS0+Z3Jh
YmJlZF9ibG9ja3M7CisJCXJldCA9IHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZSh0cmVlLT5oZWln
aHQsIEJBX1JFU0VSVkVEKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMzAwMyIsIHJldCA9PSAwKTsJLyog
cmVzZXJ2ZWQgc3BhY2UgaXMKKwkJCQkJCQlleGhhdXN0ZWQuIEFzayBIYW5zLiAqLworCQlyZXQg
PSByZWlzZXI0X2NhcnJ5KHRvZG8sIE5VTEwvKiBwcmV2aW91cyBsZXZlbCAqLyk7CisJCWdyYWJi
ZWQyZnJlZV9tYXJrKGdyYWJiZWQpOworCX0gZWxzZSB7CisJCS8qIFNoaWZ0aW5nIGltcG9zc2li
bGUsIHdlIHJldHVybiBhcHByb3ByaWF0ZSByZXN1bHQgY29kZSAqLworCQlyZXQgPQorCQkgICAg
bm9kZV9pc19lbXB0eShyaWdodCkgPyBTUVVFRVpFX1NPVVJDRV9FTVBUWSA6CisJCSAgICBTUVVF
RVpFX1RBUkdFVF9GVUxMOworCX0KKworCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKworCXJldHVy
biByZXQ7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCitzdGF0aWMgaW50IHNpYmxpbmdfbGlua19p
c19vayhjb25zdCB6bm9kZSAqbGVmdCwgY29uc3Qgem5vZGUgKnJpZ2h0KQoreworCWludCByZXN1
bHQ7CisKKwlyZWFkX2xvY2tfdHJlZSh6bm9kZV9nZXRfdHJlZShsZWZ0KSk7CisJcmVzdWx0ID0g
KGxlZnQtPnJpZ2h0ID09IHJpZ2h0ICYmIGxlZnQgPT0gcmlnaHQtPmxlZnQpOworCXJlYWRfdW5s
b2NrX3RyZWUoem5vZGVfZ2V0X3RyZWUobGVmdCkpOworCXJldHVybiByZXN1bHQ7Cit9CisjZW5k
aWYKKworLyogU2hpZnQgZmlyc3QgdW5pdCBvZiBmaXJzdCBpdGVtIGlmIGl0IGlzIGFuIGludGVy
bmFsIG9uZS4gIFJldHVybgorICAgU1FVRUVaRV9UQVJHRVRfRlVMTCBpZiBpdCBmYWlscyB0byBz
aGlmdCBhbiBpdGVtLCBvdGhlcndpc2UgcmV0dXJuCisgICBTVUJUUkVFX01PVkVELiAqLworc3Rh
dGljIGludCBzaGlmdF9vbmVfaW50ZXJuYWxfdW5pdCh6bm9kZSAqIGxlZnQsIHpub2RlICogcmln
aHQpCit7CisJaW50IHJldDsKKwljYXJyeV9wb29sICpwb29sOworCWNhcnJ5X2xldmVsICp0b2Rv
OworCWNvb3JkX3QgKmNvb3JkOworCWNhcnJ5X3BsdWdpbl9pbmZvICppbmZvOworCWludCBzaXpl
LCBtb3ZlZDsKKworCWFzc2VydCgibmlraXRhLTIyNDciLCB6bm9kZV9nZXRfbGV2ZWwobGVmdCkg
PT0gem5vZGVfZ2V0X2xldmVsKHJpZ2h0KSk7CisJYXNzZXJ0KCJuaWtpdGEtMjQzNSIsIHpub2Rl
X2lzX3dyaXRlX2xvY2tlZChsZWZ0KSk7CisJYXNzZXJ0KCJuaWtpdGEtMjQzNiIsIHpub2RlX2lz
X3dyaXRlX2xvY2tlZChyaWdodCkpOworCWFzc2VydCgibmlraXRhLTI0MzQiLCBzaWJsaW5nX2xp
bmtfaXNfb2sobGVmdCwgcmlnaHQpKTsKKworCXBvb2wgPSBpbml0X2NhcnJ5X3Bvb2woc2l6ZW9m
KCpwb29sKSArIDMgKiBzaXplb2YoKnRvZG8pICsKKwkJCSAgICAgICBzaXplb2YoKmNvb3JkKSAr
IHNpemVvZigqaW5mbykKKyNpZiBSRUlTRVI0X0RFQlVHCisJCQkgICAgICAgKyBzaXplb2YoKmNv
b3JkKSArIDIgKiBzaXplb2YocmVpc2VyNF9rZXkpCisjZW5kaWYKKwkgICAgKTsKKwlpZiAoSVNf
RVJSKHBvb2wpKQorCQlyZXR1cm4gUFRSX0VSUihwb29sKTsKKwl0b2RvID0gKGNhcnJ5X2xldmVs
ICopIChwb29sICsgMSk7CisJaW5pdF9jYXJyeV9sZXZlbCh0b2RvLCBwb29sKTsKKworCWNvb3Jk
ID0gKGNvb3JkX3QgKikgKHRvZG8gKyAzKTsKKwljb29yZF9pbml0X2ZpcnN0X3VuaXQoY29vcmQs
IHJpZ2h0KTsKKwlpbmZvID0gKGNhcnJ5X3BsdWdpbl9pbmZvICopIChjb29yZCArIDEpOworCisj
aWYgUkVJU0VSNF9ERUJVRworCWlmICghbm9kZV9pc19lbXB0eShsZWZ0KSkgeworCQljb29yZF90
ICpsYXN0OworCQlyZWlzZXI0X2tleSAqcmlnaHRfa2V5OworCQlyZWlzZXI0X2tleSAqbGVmdF9r
ZXk7CisKKwkJbGFzdCA9IChjb29yZF90ICopIChpbmZvICsgMSk7CisJCXJpZ2h0X2tleSA9IChy
ZWlzZXI0X2tleSAqKSAobGFzdCArIDEpOworCQlsZWZ0X2tleSA9IHJpZ2h0X2tleSArIDE7CisJ
CWNvb3JkX2luaXRfbGFzdF91bml0KGxhc3QsIGxlZnQpOworCisJCWFzc2VydCgibmlraXRhLTI0
NjMiLAorCQkgICAgICAga2V5bGUoaXRlbV9rZXlfYnlfY29vcmQobGFzdCwgbGVmdF9rZXkpLAor
CQkJICAgICBpdGVtX2tleV9ieV9jb29yZChjb29yZCwgcmlnaHRfa2V5KSkpOworCX0KKyNlbmRp
ZgorCisJYXNzZXJ0KCJqbWFjZC0yMDA3IiwgaXRlbV9pc19pbnRlcm5hbChjb29yZCkpOworCisJ
c2l6ZSA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKKwlpbmZvLT50b2RvID0gdG9kbzsK
KwlpbmZvLT5kb2luZyA9IE5VTEw7CisKKwlyZXQgPSBub2RlX3BsdWdpbl9ieV9ub2RlKGxlZnQp
LT5zaGlmdChjb29yZCwgbGVmdCwgU0hJRlRfTEVGVCwKKwkJCQkJICAgICAgIDEKKwkJCQkJICAg
ICAgIC8qIGRlbGV0ZSBAcmlnaHQgaWYgaXQgYmVjb21lcworCQkJCQkJICBlbXB0eSAqLworCQkJ
CQkgICAgICAgLAorCQkJCQkgICAgICAgMAorCQkJCQkgICAgICAgLyogZG8gbm90IG1vdmUgY29v
cmQgQGNvb3JkIHRvCisJCQkJCQkgIG5vZGUgQGxlZnQgKi8KKwkJCQkJICAgICAgICwKKwkJCQkJ
ICAgICAgIGluZm8pOworCisJLyogSWYgc2hpZnQgcmV0dXJucyBwb3NpdGl2ZSwgdGhlbiB3ZSBz
aGlmdGVkIHRoZSBpdGVtLiAqLworCWFzc2VydCgidnMtNDIzIiwgcmV0IDw9IDAgfHwgc2l6ZSA9
PSByZXQpOworCW1vdmVkID0gKHJldCA+IDApOworCisJaWYgKG1vdmVkKSB7CisJCS8qIHNvbWV0
aGluZyB3YXMgbW92ZWQgKi8KKwkJcmVpc2VyNF90cmVlICp0cmVlOworCQlpbnQgZ3JhYmJlZDsK
KworCQl6bm9kZV9tYWtlX2RpcnR5KGxlZnQpOworCQl6bm9kZV9tYWtlX2RpcnR5KHJpZ2h0KTsK
KwkJdHJlZSA9IHpub2RlX2dldF90cmVlKGxlZnQpOworCQl3cml0ZV9sb2NrX2RrKHRyZWUpOwor
CQl1cGRhdGVfem5vZGVfZGtleXMobGVmdCwgcmlnaHQpOworCQl3cml0ZV91bmxvY2tfZGsodHJl
ZSk7CisKKwkJLyogcmVzZXJ2ZSBzcGFjZSBmb3IgZGVsaW1pdGluZyBrZXlzIGFmdGVyIHNoaWZ0
aW5nICovCisJCWdyYWJiZWQgPSBnZXRfY3VycmVudF9jb250ZXh0KCktPmdyYWJiZWRfYmxvY2tz
OworCQlyZXQgPSByZWlzZXI0X2dyYWJfc3BhY2VfZm9yY2UodHJlZS0+aGVpZ2h0LCBCQV9SRVNF
UlZFRCk7CisJCWFzc2VydCgibmlraXRhLTMwMDMiLCByZXQgPT0gMCk7CS8qIHJlc2VydmVkIHNw
YWNlIGlzCisJCQkJCQkJZXhoYXVzdGVkLiBBc2sgSGFucy4gKi8KKworCQlyZXQgPSByZWlzZXI0
X2NhcnJ5KHRvZG8sIE5VTEwvKiBwcmV2aW91cyBsZXZlbCAqLyk7CisJCWdyYWJiZWQyZnJlZV9t
YXJrKGdyYWJiZWQpOworCX0KKworCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKworCWlmIChyZXQg
IT0gMCkgeworCQkvKiBTaGlmdCBvciBjYXJyeSBvcGVyYXRpb24gZmFpbGVkLiAqLworCQlhc3Nl
cnQoImptYWNkLTczMjUiLCByZXQgPCAwKTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwlyZXR1cm4g
bW92ZWQgPyBTVUJUUkVFX01PVkVEIDogU1FVRUVaRV9UQVJHRVRfRlVMTDsKK30KKworc3RhdGlj
IGludCBhbGxvY2F0ZV96bm9kZSh6bm9kZSAqIG5vZGUsCisJCQkgIGNvbnN0IGNvb3JkX3QgKnBh
cmVudF9jb29yZCwgZmx1c2hfcG9zX3QgKnBvcykKK3sKKwl0eG1vZF9wbHVnaW4gKnBsdWcgPSBn
ZXRfdHhtb2RfcGx1Z2luKCk7CisJLyoKKwkgKiBwZXJmb3JtIHpub2RlIGFsbG9jYXRpb24gd2l0
aCB6bm9kZSBwaW5uZWQgaW4gbWVtb3J5IHRvIGF2b2lkIHJhY2VzCisJICogd2l0aCBhc3luY2hy
b25vdXMgZW1lcmdlbmN5IGZsdXNoICh3aGljaCBwbGF5cyB3aXRoCisJICogSk5PREVfRkxVU0hf
UkVTRVJWRUQgYml0KS4KKwkgKi8KKwlyZXR1cm4gV0lUSF9EQVRBKG5vZGUsIHBsdWctPmZvcndh
cmRfYWxsb2NfZm9ybWF0dGVkKG5vZGUsCisJCQkJCQkJICAgICBwYXJlbnRfY29vcmQsCisJCQkJ
CQkJICAgICBwb3MpKTsKK30KKworCisvKiBKTk9ERSBJTlRFUkZBQ0UgKi8KKworLyogTG9jayBh
IG5vZGUgKGlmIGZvcm1hdHRlZCkgYW5kIHRoZW4gZ2V0IGl0cyBwYXJlbnQgbG9ja2VkLCBzZXQg
dGhlIGNoaWxkJ3MKKyAgIGNvb3JkaW5hdGUgaW4gdGhlIHBhcmVudC4gIElmIHRoZSBjaGlsZCBp
cyB0aGUgcm9vdCBub2RlLCB0aGUgYWJvdmVfcm9vdAorICAgem5vZGUgaXMgcmV0dXJuZWQgYnV0
IHRoZSBjb29yZCBpcyBub3Qgc2V0LiAgVGhpcyBmdW5jdGlvbiBtYXkgY2F1c2UgYXRvbQorICAg
ZnVzaW9uLCBidXQgaXQgaXMgb25seSB1c2VkIGZvciByZWFkIGxvY2tzIChhdCB0aGlzIHBvaW50
KSBhbmQgdGhlcmVmb3JlCisgICBmdXNpb24gb25seSBvY2N1cnMgd2hlbiB0aGUgcGFyZW50IGlz
IGFscmVhZHkgZGlydHkuICovCisvKiBIYW5zIGFkZHMgdGhpcyBub3RlOiByZW1lbWJlciB0byBh
c2sgaG93IGV4cGVuc2l2ZSB0aGlzIG9wZXJhdGlvbiBpcyB2cy4KKyAgIHN0b3JpbmcgcGFyZW50
IHBvaW50ZXIgaW4gam5vZGVzLiAqLworc3RhdGljIGludAoram5vZGVfbG9ja19wYXJlbnRfY29v
cmQoam5vZGUgKiBub2RlLAorCQkJY29vcmRfdCAqY29vcmQsCisJCQlsb2NrX2hhbmRsZSAqIHBh
cmVudF9saCwKKwkJCWxvYWRfY291bnQgKiBwYXJlbnRfemgsCisJCQl6bm9kZV9sb2NrX21vZGUg
cGFyZW50X21vZGUsIGludCB0cnkpCit7CisJaW50IHJldDsKKworCWFzc2VydCgiZWR3YXJkLTUz
Iiwgam5vZGVfaXNfdW5mb3JtYXR0ZWQobm9kZSkgfHwgam5vZGVfaXNfem5vZGUobm9kZSkpOwor
CWFzc2VydCgiZWR3YXJkLTU0Iiwgam5vZGVfaXNfdW5mb3JtYXR0ZWQobm9kZSkKKwkgICAgICAg
fHwgem5vZGVfaXNfYW55X2xvY2tlZChKWk5PREUobm9kZSkpKTsKKworCWlmICgham5vZGVfaXNf
em5vZGUobm9kZSkpIHsKKwkJcmVpc2VyNF9rZXkga2V5OworCQl0cmVlX2xldmVsIHN0b3BfbGV2
ZWwgPSBUV0lHX0xFVkVMOworCQlsb29rdXBfYmlhcyBiaWFzID0gRklORF9FWEFDVDsKKworCQlh
c3NlcnQoImVkd2FyZC0xNjgiLCAhKGpub2RlX2dldF90eXBlKG5vZGUpID09IEpOT0RFX0JJVE1B
UCkpOworCisJCS8qIFRoZSBjYXNlIHdoZW4gbm9kZSBpcyBub3Qgem5vZGUsIGJ1dCBjYW4gaGF2
ZSBwYXJlbnQgY29vcmQKKwkJICAgKHVuZm9ybWF0dGVkIG5vZGUsIG5vZGUgd2hpY2ggcmVwcmVz
ZW50cyBjbHVzdGVyIHBhZ2UsCisJCSAgIGV0Yy4uKS4gIEdlbmVyYXRlIGEga2V5IGZvciB0aGUg
YXBwcm9wcmlhdGUgZW50cnksIHNlYXJjaAorCQkgICBpbiB0aGUgdHJlZSB1c2luZyBjb29yZF9i
eV9rZXksIHdoaWNoIGhhbmRsZXMgbG9ja2luZyBmb3IKKwkJICAgdXMuICovCisKKwkJLyoKKwkJ
ICogbm90aGluZyBpcyBsb2NrZWQgYXQgdGhpcyBtb21lbnQsIHNvLCBub3RoaW5nIHByZXZlbnRz
CisJCSAqIGNvbmN1cnJlbnQgdHJ1bmNhdGUgZnJvbSByZW1vdmluZyBqbm9kZSBmcm9tIGlub2Rl
LiBUbworCQkgKiBwcmV2ZW50IHRoaXMgc3Bpbi1sb2NrIGpub2RlLiBqbm9kZSBjYW4gYmUgdHJ1
bmNhdGVkIGp1c3QKKwkJICogYWZ0ZXIgY2FsbCB0byB0aGUgam5vZGVfYnVpbGRfa2V5KCksIGJ1
dCB0aGlzIGlzIG9rLAorCQkgKiBiZWNhdXNlIGNvb3JkX2J5X2tleSgpIHdpbGwganVzdCBmYWls
IHRvIGZpbmQgYXBwcm9wcmlhdGUKKwkJICogZXh0ZW50LgorCQkgKi8KKwkJc3Bpbl9sb2NrX2pu
b2RlKG5vZGUpOworCQlpZiAoIUpGX0lTU0VUKG5vZGUsIEpOT0RFX0hFQVJEX0JBTlNIRUUpKSB7
CisJCQlqbm9kZV9idWlsZF9rZXkobm9kZSwgJmtleSk7CisJCQlyZXQgPSAwOworCQl9IGVsc2UK
KwkJCXJldCA9IFJFVEVSUigtRU5PRU5UKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisK
KwkJaWYgKHJldCAhPSAwKQorCQkJcmV0dXJuIHJldDsKKworCQlpZiAoam5vZGVfaXNfY2x1c3Rl
cl9wYWdlKG5vZGUpKQorCQkJc3RvcF9sZXZlbCA9IExFQUZfTEVWRUw7CisKKwkJYXNzZXJ0KCJq
bWFjZC0xODEyIiwgY29vcmQgIT0gTlVMTCk7CisKKwkJcmV0ID0gY29vcmRfYnlfa2V5KGpub2Rl
X2dldF90cmVlKG5vZGUpLCAma2V5LCBjb29yZCwgcGFyZW50X2xoLAorCQkJCSAgIHBhcmVudF9t
b2RlLCBiaWFzLCBzdG9wX2xldmVsLCBzdG9wX2xldmVsLAorCQkJCSAgIENCS19VTklRVUUsIE5V
TEwvKnJhX2luZm8gKi8pOworCQlzd2l0Y2ggKHJldCkgeworCQljYXNlIENCS19DT09SRF9OT1RG
T1VORDoKKwkJCWFzc2VydCgiZWR3YXJkLTEwMzgiLAorCQkJICAgICAgIGVyZ28oam5vZGVfaXNf
Y2x1c3Rlcl9wYWdlKG5vZGUpLAorCQkJCSAgICBKRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9C
QU5TSEVFKSkpOworCQkJaWYgKCFKRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSkK
KwkJCQl3YXJuaW5nKCJuaWtpdGEtMzE3NyIsICJQYXJlbnQgbm90IGZvdW5kIik7CisJCQlyZXR1
cm4gcmV0OworCQljYXNlIENCS19DT09SRF9GT1VORDoKKwkJCWlmIChjb29yZC0+YmV0d2VlbiAh
PSBBVF9VTklUKSB7CisJCQkJLyogRklYTUU6IGNvbW1lbnQgbmVlZGVkICovCisJCQkJZG9uZV9s
aChwYXJlbnRfbGgpOworCQkJCWlmICghSkZfSVNTRVQobm9kZSwgSk5PREVfSEVBUkRfQkFOU0hF
RSkpIHsKKwkJCQkJd2FybmluZygibmlraXRhLTMxNzgiLAorCQkJCQkJIkZvdW5kIGJ1dCBub3Qg
aGFwcHk6ICVpIiwKKwkJCQkJCWNvb3JkLT5iZXR3ZWVuKTsKKwkJCQl9CisJCQkJcmV0dXJuIFJF
VEVSUigtRU5PRU5UKTsKKwkJCX0KKwkJCXJldCA9IGluY3JfbG9hZF9jb3VudF96bm9kZShwYXJl
bnRfemgsIHBhcmVudF9saC0+bm9kZSk7CisJCQlpZiAocmV0ICE9IDApCisJCQkJcmV0dXJuIHJl
dDsKKwkJCS8qIGlmIChqbm9kZV9pc19jbHVzdGVyX3BhZ2Uobm9kZSkpIHsKKwkJCSAgIHJhY2Vz
IHdpdGggd3JpdGUoKSBhcmUgcG9zc2libGUKKwkJCSAgIGNoZWNrX2NoaWxkX2NsdXN0ZXIgKHBh
cmVudF9saC0+bm9kZSk7CisJCQkgICB9CisJCQkgKi8KKwkJCWJyZWFrOworCQlkZWZhdWx0Ogor
CQkJcmV0dXJuIHJldDsKKwkJfQorCisJfSBlbHNlIHsKKwkJaW50IGZsYWdzOworCQl6bm9kZSAq
ejsKKworCQl6ID0gSlpOT0RFKG5vZGUpOworCQkvKiBGb3JtYXR0ZWQgbm9kZSBjYXNlOiAqLwor
CQlhc3NlcnQoImptYWNkLTIwNjEiLCAhem5vZGVfaXNfcm9vdCh6KSk7CisKKwkJZmxhZ3MgPSBH
Tl9BTExPV19OT1RfQ09OTkVDVEVEOworCQlpZiAodHJ5KQorCQkJZmxhZ3MgfD0gR05fVFJZX0xP
Q0s7CisKKwkJcmV0ID0KKwkJICAgIHJlaXNlcjRfZ2V0X3BhcmVudF9mbGFncyhwYXJlbnRfbGgs
IHosIHBhcmVudF9tb2RlLCBmbGFncyk7CisJCWlmIChyZXQgIT0gMCkKKwkJCS8qIC1FX1JFUEVB
VCBpcyBvayBoZXJlLCBpdCBpcyBoYW5kbGVkIGJ5IHRoZSBjYWxsZXIuICovCisJCQlyZXR1cm4g
cmV0OworCisJCS8qIE1ha2UgdGhlIGNoaWxkJ3MgcG9zaXRpb24gImhpbnQiIHVwLXRvLWRhdGUu
ICAoVW5sZXNzIGFib3ZlCisJCSAgIHJvb3QsIHdoaWNoIGNhbGxlciBtdXN0IGNoZWNrLikgKi8K
KwkJaWYgKGNvb3JkICE9IE5VTEwpIHsKKworCQkJcmV0ID0gaW5jcl9sb2FkX2NvdW50X3pub2Rl
KHBhcmVudF96aCwgcGFyZW50X2xoLT5ub2RlKTsKKwkJCWlmIChyZXQgIT0gMCkgeworCQkJCXdh
cm5pbmcoImptYWNkLTk3NjgxMjM4NiIsCisJCQkJCSJpbmNyX2xvYWRfY291bnRfem5vZGUgZmFp
bGVkOiAlZCIsCisJCQkJCXJldCk7CisJCQkJcmV0dXJuIHJldDsKKwkJCX0KKworCQkJcmV0ID0g
ZmluZF9jaGlsZF9wdHIocGFyZW50X2xoLT5ub2RlLCB6LCBjb29yZCk7CisJCQlpZiAocmV0ICE9
IDApIHsKKwkJCQl3YXJuaW5nKCJqbWFjZC05NzY4MTIiLAorCQkJCQkiZmluZF9jaGlsZF9wdHIg
ZmFpbGVkOiAlZCIsIHJldCk7CisJCQkJcmV0dXJuIHJldDsKKwkJCX0KKwkJfQorCX0KKworCXJl
dHVybiAwOworfQorCisvKiBHZXQgdGhlIChsb2NrZWQpIG5leHQgbmVpZ2hib3Igb2YgYSB6bm9k
ZSB3aGljaCBpcyBkaXJ0eSBhbmQgYSBtZW1iZXIgb2YgdGhlCisgICBzYW1lIGF0b20uIElmIHRo
ZXJlIGlzIG5vIG5leHQgbmVpZ2hib3Igb3IgdGhlIG5laWdoYm9yIGlzIG5vdCBpbiBtZW1vcnkg
b3IKKyAgIGlmIHRoZXJlIGlzIGEgbmVpZ2hib3IgYnV0IGl0IGlzIG5vdCBkaXJ0eSBvciBub3Qg
aW4gdGhlIHNhbWUgYXRvbSwKKyAgIC1FX05PX05FSUdIQk9SIGlzIHJldHVybmVkLiBJbiBzb21l
IGNhc2VzIHRoZSBzbHVtIG1heSBpbmNsdWRlIG5vZGVzIHdoaWNoCisgICBhcmUgbm90IGRpcnR5
LCBpZiBzbyBAY2hlY2tfZGlydHkgc2hvdWxkIGJlIDAgKi8KK3N0YXRpYyBpbnQgbmVpZ2hib3Jf
aW5fc2x1bSh6bm9kZSAqIG5vZGUsCS8qIHN0YXJ0aW5nIHBvaW50ICovCisJCQkgICAgbG9ja19o
YW5kbGUgKiBsb2NrLAkvKiBsb2NrIG9uIHN0YXJ0aW5nIHBvaW50ICovCisJCQkgICAgc2lkZW9m
IHNpZGUsCS8qIGxlZnQgb3IgcmlnaHQgZGlyZWN0aW9uIHdlCisJCQkJCQkgICBzZWVrIHRoZSBu
ZXh0IG5vZGUgaW4gKi8KKwkJCSAgICB6bm9kZV9sb2NrX21vZGUgbW9kZSwgLyoga2luZCBvZiBs
b2NrIHdlIHdhbnQgKi8KKwkJCSAgICBpbnQgY2hlY2tfZGlydHksIAkvKiB0cnVlIGlmIHRoZSBu
ZWlnaGJvciBzaG91bGQKKwkJCQkJCSAgIGJlIGRpcnR5ICovCisJCQkgICAgaW50IHVzZV91cHBl
cl9sZXZlbHMgLyogZ2V0IG5laWdoYm9yIGJ5IGdvaW5nIHRob3VnaAorCQkJCQkJICAgIHVwcGVy
IGxldmVscyAqLykKK3sKKwlpbnQgcmV0OworCWludCBmbGFnczsKKworCWFzc2VydCgiam1hY2Qt
NjMzNCIsIHpub2RlX2lzX2Nvbm5lY3RlZChub2RlKSk7CisKKwlmbGFncyA9ICBHTl9TQU1FX0FU
T00gfCAoc2lkZSA9PSBMRUZUX1NJREUgPyBHTl9HT19MRUZUIDogMCk7CisJaWYgKHVzZV91cHBl
cl9sZXZlbHMpCisJCWZsYWdzIHw9IEdOX0NBTl9VU0VfVVBQRVJfTEVWRUxTOworCisJcmV0ID0g
cmVpc2VyNF9nZXRfbmVpZ2hib3IobG9jaywgbm9kZSwgbW9kZSwgZmxhZ3MpOworCWlmIChyZXQp
IHsKKwkJLyogTWF5IHJldHVybiAtRU5PRU5UIG9yIC1FX05PX05FSUdIQk9SLiAqLworCQkvKiBG
SVhNRShDKTogY2hlY2sgRUlOVkFMLCBFX0RFQURMT0NLICovCisJCWlmIChyZXQgPT0gLUVOT0VO
VCkKKwkJCXJldCA9IFJFVEVSUigtRV9OT19ORUlHSEJPUik7CisJCXJldHVybiByZXQ7CisJfQor
CWlmICghY2hlY2tfZGlydHkpCisJCXJldHVybiAwOworCS8qIENoZWNrIGRpcnR5IGJpdCBvZiBs
b2NrZWQgem5vZGUsIG5vIHJhY2VzIGhlcmUgKi8KKwlpZiAoSkZfSVNTRVQoWkpOT0RFKGxvY2st
Pm5vZGUpLCBKTk9ERV9ESVJUWSkpCisJCXJldHVybiAwOworCisJZG9uZV9saChsb2NrKTsKKwly
ZXR1cm4gUkVURVJSKC1FX05PX05FSUdIQk9SKTsKK30KKworLyogUmV0dXJuIHRydWUgaWYgdHdv
IHpub2RlcyBoYXZlIHRoZSBzYW1lIHBhcmVudC4gIFRoaXMgaXMgY2FsbGVkIHdpdGggYm90aAor
ICAgbm9kZXMgd3JpdGUtbG9ja2VkIChmb3Igc3F1ZWV6aW5nKSBzbyBubyB0cmVlIGxvY2sgaXMg
bmVlZGVkLiAqLworc3RhdGljIGludCB6bm9kZV9zYW1lX3BhcmVudHMoem5vZGUgKiBhLCB6bm9k
ZSAqIGIpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiam1hY2QtNzAxMSIsIHpub2RlX2lz
X3dyaXRlX2xvY2tlZChhKSk7CisJYXNzZXJ0KCJqbWFjZC03MDEyIiwgem5vZGVfaXNfd3JpdGVf
bG9ja2VkKGIpKTsKKworCS8qIFdlIGxvY2sgdGhlIHdob2xlIHRyZWUgZm9yIHRoaXMgY2hlY2su
Li4uIEkgcmVhbGx5IGRvbid0IGxpa2Ugd2hvbGUKKwkgKiB0cmVlIGxvY2tzLi4uIC1IYW5zICov
CisJcmVhZF9sb2NrX3RyZWUoem5vZGVfZ2V0X3RyZWUoYSkpOworCXJlc3VsdCA9ICh6bm9kZV9w
YXJlbnQoYSkgPT0gem5vZGVfcGFyZW50KGIpKTsKKwlyZWFkX3VubG9ja190cmVlKHpub2RlX2dl
dF90cmVlKGEpKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBGTFVTSCBTQ0FOICovCisKKy8q
IEluaXRpYWxpemUgdGhlIGZsdXNoX3NjYW4gZGF0YSBzdHJ1Y3R1cmUuICovCitzdGF0aWMgdm9p
ZCBzY2FuX2luaXQoZmx1c2hfc2NhbiAqIHNjYW4pCit7CisJbWVtc2V0KHNjYW4sIDAsIHNpemVv
Zigqc2NhbikpOworCWluaXRfbGgoJnNjYW4tPm5vZGVfbG9jayk7CisJaW5pdF9saCgmc2Nhbi0+
cGFyZW50X2xvY2spOworCWluaXRfbG9hZF9jb3VudCgmc2Nhbi0+cGFyZW50X2xvYWQpOworCWlu
aXRfbG9hZF9jb3VudCgmc2Nhbi0+bm9kZV9sb2FkKTsKKwljb29yZF9pbml0X2ludmFsaWQoJnNj
YW4tPnBhcmVudF9jb29yZCwgTlVMTCk7Cit9CisKKy8qIFJlbGVhc2UgYW55IHJlc291cmNlcyBo
ZWxkIGJ5IHRoZSBmbHVzaCBzY2FuLCBlLmcuIHJlbGVhc2UgbG9ja3MsCisgICBmcmVlIG1lbW9y
eSwgZXRjLiAqLworc3RhdGljIHZvaWQgc2Nhbl9kb25lKGZsdXNoX3NjYW4gKiBzY2FuKQorewor
CWRvbmVfbG9hZF9jb3VudCgmc2Nhbi0+bm9kZV9sb2FkKTsKKwlpZiAoc2Nhbi0+bm9kZSAhPSBO
VUxMKSB7CisJCWpwdXQoc2Nhbi0+bm9kZSk7CisJCXNjYW4tPm5vZGUgPSBOVUxMOworCX0KKwlk
b25lX2xvYWRfY291bnQoJnNjYW4tPnBhcmVudF9sb2FkKTsKKwlkb25lX2xoKCZzY2FuLT5wYXJl
bnRfbG9jayk7CisJZG9uZV9saCgmc2Nhbi0+bm9kZV9sb2NrKTsKK30KKworLyogUmV0dXJucyB0
cnVlIGlmIGZsdXNoIHNjYW5uaW5nIGlzIGZpbmlzaGVkLiAqLworaW50IHJlaXNlcjRfc2Nhbl9m
aW5pc2hlZChmbHVzaF9zY2FuICogc2NhbikKK3sKKwlyZXR1cm4gc2Nhbi0+c3RvcCB8fCAoc2Nh
bi0+ZGlyZWN0aW9uID09IFJJR0hUX1NJREUgJiYKKwkJCSAgICAgIHNjYW4tPmNvdW50ID49IHNj
YW4tPm1heF9jb3VudCk7Cit9CisKKy8qIFJldHVybiB0cnVlIGlmIHRoZSBzY2FuIHNob3VsZCBj
b250aW51ZSB0byB0aGUgQHRvbm9kZS4gVHJ1ZSBpZiB0aGUgbm9kZQorICAgbWVldHMgdGhlIHNh
bWVfc2x1bV9jaGVjayBjb25kaXRpb24uIElmIG5vdCwgZGVyZWYgdGhlICJsZWZ0IiBub2RlIGFu
ZCBzdG9wCisgICB0aGUgc2Nhbi4gKi8KK2ludCByZWlzZXI0X3NjYW5fZ290byhmbHVzaF9zY2Fu
ICogc2Nhbiwgam5vZGUgKiB0b25vZGUpCit7CisJaW50IGdvID0gc2FtZV9zbHVtX2NoZWNrKHNj
YW4tPm5vZGUsIHRvbm9kZSwgMSwgMCk7CisKKwlpZiAoIWdvKSB7CisJCXNjYW4tPnN0b3AgPSAx
OworCQlqcHV0KHRvbm9kZSk7CisJfQorCisJcmV0dXJuIGdvOworfQorCisvKiBTZXQgdGhlIGN1
cnJlbnQgc2Nhbi0+bm9kZSwgcmVmY291bnQgaXQsIGluY3JlbWVudCBjb3VudCBieSB0aGUgQGFk
ZF9jb3VudAorICAgKG51bWJlciB0byBjb3VudCwgZS5nLiwgc2tpcHBlZCB1bmFsbG9jYXRlZCBu
b2RlcyksIGRlcmVmIHByZXZpb3VzIGN1cnJlbnQsCisgICBhbmQgY29weSB0aGUgY3VycmVudCBw
YXJlbnQgY29vcmRpbmF0ZS4gKi8KK2ludAorc2Nhbl9zZXRfY3VycmVudChmbHVzaF9zY2FuICog
c2Nhbiwgam5vZGUgKiBub2RlLCB1bnNpZ25lZCBhZGRfY291bnQsCisJCSBjb25zdCBjb29yZF90
ICpwYXJlbnQpCit7CisJLyogUmVsZWFzZSB0aGUgb2xkIHJlZmVyZW5jZXMsIHRha2UgdGhlIG5l
dyByZWZlcmVuY2UuICovCisJZG9uZV9sb2FkX2NvdW50KCZzY2FuLT5ub2RlX2xvYWQpOworCisJ
aWYgKHNjYW4tPm5vZGUgIT0gTlVMTCkKKwkJanB1dChzY2FuLT5ub2RlKTsKKwlzY2FuLT5ub2Rl
ID0gbm9kZTsKKwlzY2FuLT5jb3VudCArPSBhZGRfY291bnQ7CisKKwkvKiBUaGlzIG5leHQgc3Rt
dCBpcyBzb21ld2hhdCBpbmVmZmljaWVudC4gIFRoZSByZWlzZXI0X3NjYW5fZXh0ZW50KCkKKwkg
ICBjb2RlIGNvdWxkIGRlbGF5IHRoaXMgdXBkYXRlIHN0ZXAgdW50aWwgaXQgZmluaXNoZXMgYW5k
IHVwZGF0ZSB0aGUKKwkgICBwYXJlbnRfY29vcmQgb25seSBvbmNlLiBJdCBkaWQgdGhhdCBiZWZv
cmUsIGJ1dCB0aGVyZSB3YXMgYSBidWcgYW5kCisJICAgdGhpcyB3YXMgdGhlIGVhc2llc3Qgd2F5
IHRvIG1ha2UgaXQgY29ycmVjdC4gKi8KKwlpZiAocGFyZW50ICE9IE5VTEwpCisJCWNvb3JkX2R1
cCgmc2Nhbi0+cGFyZW50X2Nvb3JkLCBwYXJlbnQpOworCisJLyogRmFpbHVyZSBtYXkgaGFwcGVu
IGF0IHRoZSBpbmNyX2xvYWRfY291bnQgY2FsbCwgYnV0IHRoZSBjYWxsZXIgY2FuCisJICAgYXNz
dW1lIHRoZSByZWZlcmVuY2UgaXMgc2FmZWx5IHRha2VuLiAqLworCXJldHVybiBpbmNyX2xvYWRf
Y291bnRfam5vZGUoJnNjYW4tPm5vZGVfbG9hZCwgbm9kZSk7Cit9CisKKy8qIFJldHVybiB0cnVl
IGlmIHNjYW5uaW5nIGluIHRoZSBsZWZ0d2FyZCBkaXJlY3Rpb24uICovCitpbnQgcmVpc2VyNF9z
Y2FubmluZ19sZWZ0KGZsdXNoX3NjYW4gKiBzY2FuKQoreworCXJldHVybiBzY2FuLT5kaXJlY3Rp
b24gPT0gTEVGVF9TSURFOworfQorCisvKiBQZXJmb3JtcyBsZWZ0d2FyZCBzY2FubmluZyBzdGFy
dGluZyBmcm9tIGVpdGhlciBraW5kIG9mIG5vZGUuIENvdW50cyB0aGUKKyAgIHN0YXJ0aW5nIG5v
ZGUuIFRoZSByaWdodC1zY2FuIG9iamVjdCBpcyBwYXNzZWQgaW4gZm9yIHRoZSBsZWZ0LXNjYW4g
aW4gb3JkZXIKKyAgIHRvIGNvcHkgdGhlIHBhcmVudCBvZiBhbiB1bmZvcm1hdHRlZCBzdGFydGlu
ZyBwb3NpdGlvbi4gVGhpcyB3YXkgd2UgYXZvaWQKKyAgIHNlYXJjaGluZyBmb3IgdGhlIHVuZm9y
bWF0dGVkIG5vZGUncyBwYXJlbnQgd2hlbiBzY2FubmluZyBpbiBlYWNoIGRpcmVjdGlvbi4KKyAg
IElmIHdlIHNlYXJjaCBmb3IgdGhlIHBhcmVudCBvbmNlIGl0IGlzIHNldCBpbiBib3RoIHNjYW4g
b2JqZWN0cy4gVGhlIGxpbWl0CisgICBwYXJhbWV0ZXIgdGVsbHMgZmx1c2gtc2NhbiB3aGVuIHRv
IHN0b3AuCisKKyAgIFJhcGlkIHNjYW5uaW5nIGlzIHVzZWQgb25seSBkdXJpbmcgc2Nhbl9sZWZ0
LCB3aGVyZSB3ZSBhcmUgaW50ZXJlc3RlZCBpbgorICAgZmluZGluZyB0aGUgJ2xlZnRwb2ludCcg
d2hlcmUgd2UgYmVnaW4gZmx1c2hpbmcuIFdlIGFyZSBpbnRlcmVzdGVkIGluCisgICBzdG9wcGlu
ZyBhdCB0aGUgbGVmdCBjaGlsZCBvZiBhIHR3aWcgdGhhdCBkb2VzIG5vdCBoYXZlIGEgZGlydHkg
bGVmdAorICAgbmVpZ2hib3VyLiBUSElTIElTIEEgU1BFQ0lBTCBDQVNFLiBUaGUgcHJvYmxlbSBp
cyBmaW5kaW5nIGEgd2F5IHRvIGZsdXNoIG9ubHkKKyAgIHRob3NlIG5vZGVzIHdpdGhvdXQgdW5h
bGxvY2F0ZWQgY2hpbGRyZW4sIGFuZCBpdCBpcyBkaWZmaWN1bHQgdG8gc29sdmUgaW4gdGhlCisg
ICBib3R0b20tdXAgZmx1c2hpbmcgYWxnb3JpdGhtIHdlIGFyZSBjdXJyZW50bHkgdXNpbmcuIFRo
ZSBwcm9ibGVtIGNhbiBiZQorICAgc29sdmVkIGJ5IHNjYW5uaW5nIGxlZnQgYXQgZXZlcnkgbGV2
ZWwgYXMgd2UgZ28gdXB3YXJkLCBidXQgdGhpcyB3b3VsZAorICAgYmFzaWNhbGx5IGJyaW5nIHVz
IGJhY2sgdG8gdXNpbmcgYSB0b3AtZG93biBhbGxvY2F0aW9uIHN0cmF0ZWd5LCB3aGljaCB3ZQor
ICAgYWxyZWFkeSB0cmllZCAoc2VlIEJLIGhpc3RvcnkgZnJvbSBNYXkgMjAwMiksIGFuZCBoYXMg
YSBkaWZmZXJlbnQgc2V0IG9mCisgICBwcm9ibGVtcy4gVGhlIHRvcC1kb3duIHN0cmF0ZWd5IG1h
a2VzIGF2b2lkaW5nIHVuYWxsb2NhdGVkIGNoaWxkcmVuIGVhc2llciwKKyAgIGJ1dCBtYWtlcyBp
dCBkaWZmaWN1bHQgdG8gcHJvcGVydGx5IGZsdXNoIGRpcnR5IGNoaWxkcmVuIHdpdGggY2xlYW4g
cGFyZW50cworICAgdGhhdCB3b3VsZCBvdGhlcndpc2Ugc3RvcCB0aGUgdG9wLWRvd24gZmx1c2gs
IG9ubHkgbGF0ZXIgdG8gZGlydHkgdGhlIHBhcmVudAorICAgb25jZSB0aGUgY2hpbGRyZW4gYXJl
IGZsdXNoZWQuIFNvIHdlIHNvbHZlIHRoZSBwcm9ibGVtIGluIHRoZSBib3R0b20tdXAKKyAgIGFs
Z29yaXRobSB3aXRoIGEgc3BlY2lhbCBjYXNlIGZvciB0d2lncyBhbmQgbGVhdmVzIG9ubHkuCisK
KyAgIFRoZSBmaXJzdCBzdGVwIGluIHNvbHZpbmcgdGhlIHByb2JsZW0gaXMgdGhpcyByYXBpZCBs
ZWZ0d2FyZCBzY2FuLiAgQWZ0ZXIgd2UKKyAgIGRldGVybWluZSB0aGF0IHRoZXJlIGFyZSBhdCBs
ZWFzdCBlbm91Z2ggbm9kZXMgY291bnRlZCB0byBxdWFsaWZ5IGZvcgorICAgRkxVU0hfUkVMT0NB
VEVfVEhSRVNIT0xEIHdlIGFyZSBubyBsb25nZXIgaW50ZXJlc3RlZCBpbiB0aGUgZXhhY3QgY291
bnQsIHdlCisgICBhcmUgb25seSBpbnRlcmVzdGVkIGluIGZpbmRpbmcgdGhlIGJlc3QgcGxhY2Ug
dG8gc3RhcnQgdGhlIGZsdXNoLgorCisgICBXZSBjb3VsZCBjaG9vc2Ugb25lIG9mIHR3byBwb3Nz
aWJpbGl0aWVzOgorCisgICAxLiBTdG9wIGF0IHRoZSBsZWZ0bW9zdCBjaGlsZCAob2YgYSB0d2ln
KSB0aGF0IGRvZXMgbm90IGhhdmUgYSBkaXJ0eSBsZWZ0CisgICBuZWlnaGJvci4gVGhpcyByZXF1
aXJlcyBjaGVja2luZyBvbmUgbGVhZiBwZXIgcmFwaWQtc2NhbiB0d2lnCisKKyAgIDIuIFN0b3Ag
YXQgdGhlIGxlZnRtb3N0IGNoaWxkIChvZiBhIHR3aWcpIHdoZXJlIHRoZXJlIGFyZSBubyBkaXJ0
eSBjaGlsZHJlbgorICAgb2YgdGhlIHR3aWcgdG8gdGhlIGxlZnQuIFRoaXMgcmVxdWlyZXMgY2hl
Y2tpbmcgcG9zc2libHkgYWxsIG9mIHRoZSBpbi1tZW1vcnkKKyAgIGNoaWxkcmVuIG9mIGVhY2gg
dHdpZyBkdXJpbmcgdGhlIHJhcGlkIHNjYW4uCisKKyAgIEZvciBub3cgd2UgaW1wbGVtZW50IHRo
ZSBmaXJzdCBwb2xpY3kuCisqLworc3RhdGljIGludAorc2Nhbl9sZWZ0KGZsdXNoX3NjYW4gKiBz
Y2FuLCBmbHVzaF9zY2FuICogcmlnaHQsIGpub2RlICogbm9kZSwgdW5zaWduZWQgbGltaXQpCit7
CisJaW50IHJldCA9IDA7CisKKwlzY2FuLT5tYXhfY291bnQgPSBsaW1pdDsKKwlzY2FuLT5kaXJl
Y3Rpb24gPSBMRUZUX1NJREU7CisKKwlyZXQgPSBzY2FuX3NldF9jdXJyZW50KHNjYW4sIGpyZWYo
bm9kZSksIDEsIE5VTEwpOworCWlmIChyZXQgIT0gMCkKKwkJcmV0dXJuIHJldDsKKworCXJldCA9
IHNjYW5fY29tbW9uKHNjYW4sIHJpZ2h0KTsKKwlpZiAocmV0ICE9IDApCisJCXJldHVybiByZXQ7
CisKKwkvKiBCZWZvcmUgcmFwaWQgc2Nhbm5pbmcsIHdlIG5lZWQgYSBsb2NrIG9uIHNjYW4tPm5v
ZGUgc28gdGhhdCB3ZSBjYW4KKwkgICBnZXQgaXRzIHBhcmVudCwgb25seSBpZiBmb3JtYXR0ZWQu
ICovCisJaWYgKGpub2RlX2lzX3pub2RlKHNjYW4tPm5vZGUpKSB7CisJCXJldCA9IGxvbmd0ZXJt
X2xvY2tfem5vZGUoJnNjYW4tPm5vZGVfbG9jaywgSlpOT0RFKHNjYW4tPm5vZGUpLAorCQkJCQkg
IFpOT0RFX1dSSVRFX0xPQ0ssIFpOT0RFX0xPQ0tfTE9QUkkpOworCX0KKworCS8qIFJhcGlkX3Nj
YW4gd291bGQgZ28gaGVyZSAod2l0aCBsaW1pdCBzZXQgdG8gRkxVU0hfUkVMT0NBVEVfVEhSRVNI
T0xEKQorCSovCisJcmV0dXJuIHJldDsKK30KKworLyogUGVyZm9ybXMgcmlnaHR3YXJkIHNjYW5u
aW5nLi4uIERvZXMgbm90IGNvdW50IHRoZSBzdGFydGluZyBub2RlLiBUaGUgbGltaXQKKyAgIHBh
cmFtZXRlciBpcyBkZXNjcmliZWQgaW4gc2Nhbl9sZWZ0LiBJZiB0aGUgc3RhcnRpbmcgbm9kZSBp
cyB1bmZvcm1hdHRlZCB0aGVuCisgICB0aGUgcGFyZW50X2Nvb3JkIHdhcyBhbHJlYWR5IHNldCBk
dXJpbmcgc2Nhbl9sZWZ0LiBUaGUgcmFwaWRfYWZ0ZXIgcGFyYW1ldGVyCisgICBpcyBub3QgdXNl
ZCBkdXJpbmcgcmlnaHQtc2Nhbm5pbmcuCisKKyAgIHNjYW5fcmlnaHQgaXMgb25seSBjYWxsZWQg
aWYgdGhlIHNjYW5fbGVmdCBvcGVyYXRpb24gZG9lcyBub3QgY291bnQgYXQgbGVhc3QKKyAgIEZM
VVNIX1JFTE9DQVRFX1RIUkVTSE9MRCBub2RlcyBmb3IgZmx1c2hpbmcuICBPdGhlcndpc2UsIHRo
ZSBsaW1pdCBwYXJhbWV0ZXIKKyAgIGlzIHNldCB0byB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHNj
YW4tbGVmdCdzIGNvdW50IGFuZAorICAgRkxVU0hfUkVMT0NBVEVfVEhSRVNIT0xELCBtZWFuaW5n
IHNjYW4tcmlnaHQgY291bnRzIGFzIGhpZ2ggYXMKKyAgIEZMVVNIX1JFTE9DQVRFX1RIUkVTSE9M
RCBhbmQgdGhlbiBzdG9wcy4gKi8KK3N0YXRpYyBpbnQgc2Nhbl9yaWdodChmbHVzaF9zY2FuICog
c2Nhbiwgam5vZGUgKiBub2RlLCB1bnNpZ25lZCBsaW1pdCkKK3sKKwlpbnQgcmV0OworCisJc2Nh
bi0+bWF4X2NvdW50ID0gbGltaXQ7CisJc2Nhbi0+ZGlyZWN0aW9uID0gUklHSFRfU0lERTsKKwor
CXJldCA9IHNjYW5fc2V0X2N1cnJlbnQoc2NhbiwganJlZihub2RlKSwgMCwgTlVMTCk7CisJaWYg
KHJldCAhPSAwKQorCQlyZXR1cm4gcmV0OworCisJcmV0dXJuIHNjYW5fY29tbW9uKHNjYW4sIE5V
TEwpOworfQorCisvKiBDb21tb24gY29kZSB0byBwZXJmb3JtIGxlZnQgb3IgcmlnaHQgc2Nhbm5p
bmcuICovCitzdGF0aWMgaW50IHNjYW5fY29tbW9uKGZsdXNoX3NjYW4gKiBzY2FuLCBmbHVzaF9z
Y2FuICogb3RoZXIpCit7CisJaW50IHJldDsKKworCWFzc2VydCgibmlraXRhLTIzNzYiLCBzY2Fu
LT5ub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTU0Iiwgam5vZGVfaXNfdW5mb3JtYXR0
ZWQoc2Nhbi0+bm9kZSkKKwkgICAgICAgfHwgam5vZGVfaXNfem5vZGUoc2Nhbi0+bm9kZSkpOwor
CisJLyogU3BlY2lhbCBjYXNlIGZvciBzdGFydGluZyBhdCBhbiB1bmZvcm1hdHRlZCBub2RlLiBP
cHRpbWl6YXRpb246IHdlCisJICAgb25seSB3YW50IHRvIHNlYXJjaCBmb3IgdGhlIHBhcmVudCAo
d2hpY2ggcmVxdWlyZXMgYSB0cmVlIHRyYXZlcnNhbCkKKwkgICBvbmNlLiBPYnZpb3VzbHksIHdl
IHNob3VsZG4ndCBoYXZlIHRvIGNhbGwgaXQgb25jZSBmb3IgdGhlIGxlZnQgc2NhbgorCSAgIGFu
ZCBvbmNlIGZvciB0aGUgcmlnaHQgc2Nhbi4gRm9yIHRoaXMgcmVhc29uLCBpZiB3ZSBzZWFyY2gg
Zm9yIHRoZQorCSAgIHBhcmVudCBkdXJpbmcgc2Nhbi1sZWZ0IHdlIHRoZW4gZHVwbGljYXRlIHRo
ZSBjb29yZC9sb2NrL2xvYWQgaW50bworCSAgIHRoZSBzY2FuLXJpZ2h0IG9iamVjdC4gKi8KKwlp
ZiAoam5vZGVfaXNfdW5mb3JtYXR0ZWQoc2Nhbi0+bm9kZSkpIHsKKwkJcmV0ID0gc2Nhbl91bmZv
cm1hdHRlZChzY2FuLCBvdGhlcik7CisJCWlmIChyZXQgIT0gMCkKKwkJCXJldHVybiByZXQ7CisJ
fQorCS8qIFRoaXMgbG9vcCBleHBlY3RzIHRvIHN0YXJ0IGF0IGEgZm9ybWF0dGVkIHBvc2l0aW9u
IGFuZCBwZXJmb3JtcworCSAgIGNoYWluaW5nIG9mIGZvcm1hdHRlZCByZWdpb25zICovCisJd2hp
bGUgKCFyZWlzZXI0X3NjYW5fZmluaXNoZWQoc2NhbikpIHsKKworCQlyZXQgPSBzY2FuX2Zvcm1h
dHRlZChzY2FuKTsKKwkJaWYgKHJldCAhPSAwKQorCQkJcmV0dXJuIHJldDsKKwl9CisKKwlyZXR1
cm4gMDsKK30KKworc3RhdGljIGludCBzY2FuX3VuZm9ybWF0dGVkKGZsdXNoX3NjYW4gKiBzY2Fu
LCBmbHVzaF9zY2FuICogb3RoZXIpCit7CisJaW50IHJldCA9IDA7CisJaW50IHRyeSA9IDA7CisK
KwlpZiAoIWNvb3JkX2lzX2ludmFsaWQoJnNjYW4tPnBhcmVudF9jb29yZCkpCisJCWdvdG8gc2Nh
bjsKKworCS8qIHNldCBwYXJlbnQgY29vcmQgZnJvbSAqLworCWlmICgham5vZGVfaXNfdW5mb3Jt
YXR0ZWQoc2Nhbi0+bm9kZSkpIHsKKwkJLyogZm9ybWF0dGVkIHBvc2l0aW9uICovCisKKwkJbG9j
a19oYW5kbGUgbG9jazsKKwkJYXNzZXJ0KCJlZHdhcmQtMzAxIiwgam5vZGVfaXNfem5vZGUoc2Nh
bi0+bm9kZSkpOworCQlpbml0X2xoKCZsb2NrKTsKKworCQkvKgorCQkgKiB3aGVuIGZsdXNoIHN0
YXJ0cyBmcm9tIHVuZm9ybWF0dGVkIG5vZGUsIGZpcnN0IHRoaW5nIGl0CisJCSAqIGRvZXMgaXMg
dHJlZSB0cmF2ZXJzYWwgdG8gZmluZCBmb3JtYXR0ZWQgcGFyZW50IG9mIHN0YXJ0aW5nCisJCSAq
IG5vZGUuIFRoaXMgcGFyZW50IGlzIHRoZW4ga2VwdCBsb2NrIGFjcm9zcyBzY2FucyB0byB0aGUK
KwkJICogbGVmdCBhbmQgdG8gdGhlIHJpZ2h0LiBUaGlzIG1lYW5zIHRoYXQgZHVyaW5nIHNjYW4g
dG8gdGhlCisJCSAqIGxlZnQgd2UgY2Fubm90IHRha2UgbGVmdC13YXJkIGxvY2ssIGJlY2F1c2Ug
dGhpcyBpcworCQkgKiBkZWFkLWxvY2sgcHJvbmUuIFNvLCBpZiB3ZSBhcmUgc2Nhbm5pbmcgdG8g
dGhlIGxlZnQgYW5kCisJCSAqIHRoZXJlIGlzIGFscmVhZHkgbG9jayBoZWxkIGJ5IHRoaXMgdGhy
ZWFkLAorCQkgKiBqbm9kZV9sb2NrX3BhcmVudF9jb29yZCgpIHNob3VsZCB1c2UgdHJ5LWxvY2su
CisJCSAqLworCQl0cnkgPSByZWlzZXI0X3NjYW5uaW5nX2xlZnQoc2NhbikKKwkJICAgICYmICFs
b2NrX3N0YWNrX2lzY2xlYW4oZ2V0X2N1cnJlbnRfbG9ja19zdGFjaygpKTsKKwkJLyogTmVlZCB0
aGUgbm9kZSBsb2NrZWQgdG8gZ2V0IHRoZSBwYXJlbnQgbG9jaywgV2UgaGF2ZSB0bworCQkgICB0
YWtlIHdyaXRlIGxvY2sgc2luY2UgdGhlcmUgaXMgYXQgbGVhc3Qgb25lIGNhbGwgcGF0aAorCQkg
ICB3aGVyZSB0aGlzIHpub2RlIGlzIGFscmVhZHkgd3JpdGUtbG9ja2VkIGJ5IHVzLiAqLworCQly
ZXQgPQorCQkgICAgbG9uZ3Rlcm1fbG9ja196bm9kZSgmbG9jaywgSlpOT0RFKHNjYW4tPm5vZGUp
LAorCQkJCQlaTk9ERV9XUklURV9MT0NLLAorCQkJCQlyZWlzZXI0X3NjYW5uaW5nX2xlZnQoc2Nh
bikgPworCQkJCQlaTk9ERV9MT0NLX0xPUFJJIDoKKwkJCQkJWk5PREVfTE9DS19ISVBSSSk7CisJ
CWlmIChyZXQgIT0gMCkKKwkJCS8qIEVJTlZBTCBvciBFX0RFQURMT0NLIGhlcmUgbWVhbi4uLiB0
cnkgYWdhaW4hICBBdCB0aGlzCisJCQkgICBwb2ludCB3ZSd2ZSBzY2FubmVkIHRvbyBmYXIgYW5k
IGNhbid0IGJhY2sgb3V0LCBqdXN0CisJCQkgICBzdGFydCBvdmVyLiAqLworCQkJcmV0dXJuIHJl
dDsKKworCQlyZXQgPSBqbm9kZV9sb2NrX3BhcmVudF9jb29yZChzY2FuLT5ub2RlLAorCQkJCQkg
ICAgICAmc2Nhbi0+cGFyZW50X2Nvb3JkLAorCQkJCQkgICAgICAmc2Nhbi0+cGFyZW50X2xvY2ss
CisJCQkJCSAgICAgICZzY2FuLT5wYXJlbnRfbG9hZCwKKwkJCQkJICAgICAgWk5PREVfV1JJVEVf
TE9DSywgdHJ5KTsKKworCQkvKiBGSVhNRShDKTogY2hlY2sgRUlOVkFMLCBFX0RFQURMT0NLICov
CisJCWRvbmVfbGgoJmxvY2spOworCQlpZiAocmV0ID09IC1FX1JFUEVBVCkgeworCQkJc2Nhbi0+
c3RvcCA9IDE7CisJCQlyZXR1cm4gMDsKKwkJfQorCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsK
KworCX0gZWxzZSB7CisJCS8qIHVuZm9ybWF0dGVkIHBvc2l0aW9uICovCisKKwkJcmV0ID0KKwkJ
ICAgIGpub2RlX2xvY2tfcGFyZW50X2Nvb3JkKHNjYW4tPm5vZGUsICZzY2FuLT5wYXJlbnRfY29v
cmQsCisJCQkJCSAgICAmc2Nhbi0+cGFyZW50X2xvY2ssCisJCQkJCSAgICAmc2Nhbi0+cGFyZW50
X2xvYWQsCisJCQkJCSAgICBaTk9ERV9XUklURV9MT0NLLCB0cnkpOworCisJCWlmIChJU19DQktF
UlIocmV0KSkKKwkJCXJldHVybiByZXQ7CisKKwkJaWYgKHJldCA9PSBDQktfQ09PUkRfTk9URk9V
TkQpCisJCQkvKiBGSVhNRShDKTogY2hlY2sgRUlOVkFMLCBFX0RFQURMT0NLICovCisJCQlyZXR1
cm4gcmV0OworCisJCS8qIHBhcmVudCB3YXMgZm91bmQgKi8KKwkJYXNzZXJ0KCJqbWFjZC04NjYx
Iiwgb3RoZXIgIT0gTlVMTCk7CisJCS8qIER1cGxpY2F0ZSB0aGUgcmVmZXJlbmNlIGludG8gdGhl
IG90aGVyIGZsdXNoX3NjYW4uICovCisJCWNvb3JkX2R1cCgmb3RoZXItPnBhcmVudF9jb29yZCwg
JnNjYW4tPnBhcmVudF9jb29yZCk7CisJCWNvcHlfbGgoJm90aGVyLT5wYXJlbnRfbG9jaywgJnNj
YW4tPnBhcmVudF9sb2NrKTsKKwkJY29weV9sb2FkX2NvdW50KCZvdGhlci0+cGFyZW50X2xvYWQs
ICZzY2FuLT5wYXJlbnRfbG9hZCk7CisJfQorc2NhbjoKKwlyZXR1cm4gc2Nhbl9ieV9jb29yZChz
Y2FuKTsKK30KKworLyogUGVyZm9ybXMgbGVmdC0gb3IgcmlnaHR3YXJkIHNjYW5uaW5nIHN0YXJ0
aW5nIGZyb20gYSBmb3JtYXR0ZWQgbm9kZS4gRm9sbG93CisgICBsZWZ0IHBvaW50ZXJzIHVuZGVy
IHRyZWUgbG9jayBhcyBsb25nIGFzOgorCisgICAtIG5vZGUtPmxlZnQvcmlnaHQgaXMgbm9uLU5V
TEwKKyAgIC0gbm9kZS0+bGVmdC9yaWdodCBpcyBjb25uZWN0ZWQsIGRpcnR5CisgICAtIG5vZGUt
PmxlZnQvcmlnaHQgYmVsb25ncyB0byB0aGUgc2FtZSBhdG9tCisgICAtIHNjYW4gaGFzIG5vdCBy
ZWFjaGVkIG1heGltdW0gY291bnQKKyovCitzdGF0aWMgaW50IHNjYW5fZm9ybWF0dGVkKGZsdXNo
X3NjYW4gKiBzY2FuKQoreworCWludCByZXQ7CisJem5vZGUgKm5laWdoYm9yID0gTlVMTDsKKwor
CWFzc2VydCgiam1hY2QtMTQwMSIsICFyZWlzZXI0X3NjYW5fZmluaXNoZWQoc2NhbikpOworCisJ
ZG8geworCQl6bm9kZSAqbm9kZSA9IEpaTk9ERShzY2FuLT5ub2RlKTsKKworCQkvKiBOb2RlIHNo
b3VsZCBiZSBjb25uZWN0ZWQsIGJ1dCBpZiBub3Qgc3RvcCB0aGUgc2Nhbi4gKi8KKwkJaWYgKCF6
bm9kZV9pc19jb25uZWN0ZWQobm9kZSkpIHsKKwkJCXNjYW4tPnN0b3AgPSAxOworCQkJYnJlYWs7
CisJCX0KKworCQkvKiBMb2NrIHRoZSB0cmVlLCBjaGVjay1mb3IgYW5kIHJlZmVyZW5jZSB0aGUg
bmV4dCBzaWJsaW5nLiAqLworCQlyZWFkX2xvY2tfdHJlZSh6bm9kZV9nZXRfdHJlZShub2RlKSk7
CisKKwkJLyogSXQgbWF5IGJlIHRoYXQgYSBub2RlIGlzIGluc2VydGVkIG9yIHJlbW92ZWQgYmV0
d2VlbiBhIG5vZGUKKwkJICAgYW5kIGl0cyBsZWZ0IHNpYmxpbmcgd2hpbGUgdGhlIHRyZWUgbG9j
ayBpcyByZWxlYXNlZCwgYnV0IHRoZQorCQkgICBmbHVzaC1zY2FuIGNvdW50IGRvZXMgbm90IG5l
ZWQgdG8gYmUgcHJlY2lzZS4gVGh1cywgd2UKKwkJICAgcmVsZWFzZSB0aGUgdHJlZSBsb2NrIGFz
IHNvb24gYXMgd2UgZ2V0IHRoZSBuZWlnaGJvcmluZyBub2RlLgorCQkqLworCQluZWlnaGJvciA9
CisJCQlyZWlzZXI0X3NjYW5uaW5nX2xlZnQoc2NhbikgPyBub2RlLT5sZWZ0IDogbm9kZS0+cmln
aHQ7CisJCWlmIChuZWlnaGJvciAhPSBOVUxMKQorCQkJenJlZihuZWlnaGJvcik7CisKKwkJcmVh
ZF91bmxvY2tfdHJlZSh6bm9kZV9nZXRfdHJlZShub2RlKSk7CisKKwkJLyogSWYgbmVpZ2hib3Ig
aXMgTlVMTCBhdCB0aGUgbGVhZiBsZXZlbCwgbmVlZCB0byBjaGVjayBmb3IgYW4KKwkJICAgdW5m
b3JtYXR0ZWQgc2libGluZyB1c2luZyB0aGUgcGFyZW50LS1icmVhayBpbiBhbnkgY2FzZS4gKi8K
KwkJaWYgKG5laWdoYm9yID09IE5VTEwpCisJCQlicmVhazsKKworCQkvKiBDaGVjayB0aGUgY29u
ZGl0aW9uIGZvciBnb2luZyBsZWZ0LCBicmVhayBpZiBpdCBpcyBub3QgbWV0LgorCQkgICBUaGlz
IGFsc28gcmVsZWFzZXMgKGpwdXRzKSB0aGUgbmVpZ2hib3IgaWYgZmFsc2UuICovCisJCWlmICgh
cmVpc2VyNF9zY2FuX2dvdG8oc2NhbiwgWkpOT0RFKG5laWdoYm9yKSkpCisJCQlicmVhazsKKwor
CQkvKiBBZHZhbmNlIHRoZSBmbHVzaF9zY2FuIHN0YXRlIHRvIHRoZSBsZWZ0LCByZXBlYXQuICov
CisJCXJldCA9IHNjYW5fc2V0X2N1cnJlbnQoc2NhbiwgWkpOT0RFKG5laWdoYm9yKSwgMSwgTlVM
TCk7CisJCWlmIChyZXQgIT0gMCkKKwkJCXJldHVybiByZXQ7CisKKwl9IHdoaWxlICghcmVpc2Vy
NF9zY2FuX2ZpbmlzaGVkKHNjYW4pKTsKKworCS8qIElmIG5laWdoYm9yIGlzIE5VTEwgdGhlbiB3
ZSByZWFjaGVkIHRoZSBlbmQgb2YgYSBmb3JtYXR0ZWQgcmVnaW9uLCBvcgorCSAgIGVsc2UgdGhl
IHNpYmxpbmcgaXMgb3V0IG9mIG1lbW9yeSwgbm93IGNoZWNrIGZvciBhbiBleHRlbnQgdG8gdGhl
CisJICAgbGVmdCAoYXMgbG9uZyBhcyBMRUFGX0xFVkVMKS4gKi8KKwlpZiAobmVpZ2hib3IgIT0g
TlVMTCB8fCBqbm9kZV9nZXRfbGV2ZWwoc2Nhbi0+bm9kZSkgIT0gTEVBRl9MRVZFTAorCSAgICB8
fCByZWlzZXI0X3NjYW5fZmluaXNoZWQoc2NhbikpIHsKKwkJc2Nhbi0+c3RvcCA9IDE7CisJCXJl
dHVybiAwOworCX0KKwkvKiBPdGhlcndpc2UsIGNhbGxzIHNjYW5fYnlfY29vcmQgZm9yIHRoZSBy
aWdodChsZWZ0KW1vc3QgaXRlbSBvZiB0aGUKKwkgICBsZWZ0KHJpZ2h0KSBuZWlnaGJvciBvbiB0
aGUgcGFyZW50IGxldmVsLCB0aGVuIHBvc3NpYmx5IGNvbnRpbnVlLiAqLworCisJY29vcmRfaW5p
dF9pbnZhbGlkKCZzY2FuLT5wYXJlbnRfY29vcmQsIE5VTEwpOworCXJldHVybiBzY2FuX3VuZm9y
bWF0dGVkKHNjYW4sIE5VTEwpOworfQorCisvKiBOT1RFLUVEV0FSRDoKKyAgIFRoaXMgc2NhbnMg
YWRqYWNlbnQgaXRlbXMgb2YgdGhlIHNhbWUgdHlwZSBhbmQgY2FsbHMgc2NhbiBmbHVzaCBwbHVn
aW4gZm9yCisgICBlYWNoIG9uZS4gUGVyZm9ybXMgbGVmdChyaWdodCl3YXJkIHNjYW5uaW5nIHN0
YXJ0aW5nIGZyb20gYSAocG9zc2libHkpCisgICB1bmZvcm1hdHRlZCBub2RlLiBJZiB3ZSBzdGFy
dCBmcm9tIHVuZm9ybWF0dGVkIG5vZGUsIHRoZW4gd2UgY29udGludWUgb25seSBpZgorICAgdGhl
IG5leHQgbmVpZ2hib3IgaXMgYWxzbyB1bmZvcm1hdHRlZC4gV2hlbiBjYWxsZWQgZnJvbSBzY2Fu
X2Zvcm1hdHRlZCwgd2UKKyAgIHNraXAgZmlyc3QgaXRlcmF0aW9uICh0byBtYWtlIHN1cmUgdGhh
dCByaWdodChsZWZ0KW1vc3QgaXRlbSBvZiB0aGUKKyAgIGxlZnQocmlnaHQpIG5laWdoYm9yIG9u
IHRoZSBwYXJlbnQgbGV2ZWwgaXMgb2YgdGhlIHNhbWUgdHlwZSBhbmQgc2V0CisgICBhcHByb3By
aWF0ZSBjb29yZCkuICovCitzdGF0aWMgaW50IHNjYW5fYnlfY29vcmQoZmx1c2hfc2NhbiAqIHNj
YW4pCit7CisJaW50IHJldCA9IDA7CisJaW50IHNjYW5fdGhpc19jb29yZDsKKwlsb2NrX2hhbmRs
ZSBuZXh0X2xvY2s7CisJbG9hZF9jb3VudCBuZXh0X2xvYWQ7CisJY29vcmRfdCBuZXh0X2Nvb3Jk
OworCWpub2RlICpjaGlsZDsKKwlpdGVtX3BsdWdpbiAqaXBsdWc7CisKKwlpbml0X2xoKCZuZXh0
X2xvY2spOworCWluaXRfbG9hZF9jb3VudCgmbmV4dF9sb2FkKTsKKwlzY2FuX3RoaXNfY29vcmQg
PSAoam5vZGVfaXNfdW5mb3JtYXR0ZWQoc2Nhbi0+bm9kZSkgPyAxIDogMCk7CisKKwkvKiBzZXQg
aW5pdGlhbCBpdGVtIGlkICovCisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZCgmc2Nhbi0+
cGFyZW50X2Nvb3JkKTsKKworCWZvciAoOyAhcmVpc2VyNF9zY2FuX2ZpbmlzaGVkKHNjYW4pOyBz
Y2FuX3RoaXNfY29vcmQgPSAxKSB7CisJCWlmIChzY2FuX3RoaXNfY29vcmQpIHsKKwkJCS8qIEhl
cmUgd2UgZXhwZWN0IHRoYXQgdW5pdCBpcyBzY2FubmFibGUuIGl0IHdvdWxkIG5vdAorCQkJICog
YmUgc28gZHVlIHRvIHJhY2Ugd2l0aCBleHRlbnQtPnRhaWwgY29udmVyc2lvbi4gICovCisJCQlp
ZiAoaXBsdWctPmYuc2NhbiA9PSBOVUxMKSB7CisJCQkJc2Nhbi0+c3RvcCA9IDE7CisJCQkJcmV0
ID0gLUVfUkVQRUFUOworCQkJCS8qIHNraXAgdGhlIGNoZWNrIGF0IHRoZSBlbmQuICovCisJCQkJ
Z290byByYWNlOworCQkJfQorCisJCQlyZXQgPSBpcGx1Zy0+Zi5zY2FuKHNjYW4pOworCQkJaWYg
KHJldCAhPSAwKQorCQkJCWdvdG8gZXhpdDsKKworCQkJaWYgKHJlaXNlcjRfc2Nhbl9maW5pc2hl
ZChzY2FuKSkgeworCQkJCWNoZWNrY2hpbGQoc2Nhbik7CisJCQkJYnJlYWs7CisJCQl9CisJCX0g
ZWxzZSB7CisJCQkvKiB0aGUgc2FtZSByYWNlIGFnYWluc3QgdHJ1bmNhdGUgYXMgYWJvdmUgaXMg
cG9zc2libGUKKwkJCSAqIGhlcmUsIGl0IHNlZW1zICovCisKKwkJCS8qIE5PVEUtSk1BQ0Q6IElu
IHRoaXMgY2FzZSwgYXBwbHkgdGhlIHNhbWUgZW5kLW9mLW5vZGUKKwkJCSAgIGxvZ2ljIGJ1dCBk
b24ndCBzY2FuIHRoZSBmaXJzdCBjb29yZGluYXRlLiAqLworCQkJYXNzZXJ0KCJqbWFjZC0xMjMx
IiwKKwkJCSAgICAgICBpdGVtX2lzX2ludGVybmFsKCZzY2FuLT5wYXJlbnRfY29vcmQpKTsKKwkJ
fQorCisJCWlmIChpcGx1Zy0+Zi51dG1vc3RfY2hpbGQgPT0gTlVMTAorCQkgICAgfHwgem5vZGVf
Z2V0X2xldmVsKHNjYW4tPnBhcmVudF9jb29yZC5ub2RlKSAhPSBUV0lHX0xFVkVMKSB7CisJCQkv
KiBzdG9wIHRoaXMgY29vcmQgYW5kIGNvbnRpbnVlIG9uIHBhcnJlbnQgbGV2ZWwgKi8KKwkJCXJl
dCA9CisJCQkgICAgc2Nhbl9zZXRfY3VycmVudChzY2FuLAorCQkJCQkgICAgIFpKTk9ERSh6cmVm
CisJCQkJCQkgICAgKHNjYW4tPnBhcmVudF9jb29yZC5ub2RlKSksCisJCQkJCSAgICAgMSwgTlVM
TCk7CisJCQlpZiAocmV0ICE9IDApCisJCQkJZ290byBleGl0OworCQkJYnJlYWs7CisJCX0KKwor
CQkvKiBFaXRoZXIgd2F5LCB0aGUgaW52YXJpYW50IGlzIHRoYXQgc2Nhbi0+cGFyZW50X2Nvb3Jk
IGlzIHNldAorCQkgICB0byB0aGUgcGFyZW50IG9mIHNjYW4tPm5vZGUuIE5vdyBnZXQgdGhlIG5l
eHQgdW5pdC4gKi8KKwkJY29vcmRfZHVwKCZuZXh0X2Nvb3JkLCAmc2Nhbi0+cGFyZW50X2Nvb3Jk
KTsKKwkJY29vcmRfc2lkZW9mX3VuaXQoJm5leHRfY29vcmQsIHNjYW4tPmRpcmVjdGlvbik7CisK
KwkJLyogSWYgb2ZmLXRoZS1lbmQgb2YgdGhlIHR3aWcsIHRyeSB0aGUgbmV4dCB0d2lnLiAqLwor
CQlpZiAoY29vcmRfaXNfYWZ0ZXJfc2lkZW9mX3VuaXQoJm5leHRfY29vcmQsIHNjYW4tPmRpcmVj
dGlvbikpIHsKKwkJCS8qIFdlIHRha2UgdGhlIHdyaXRlIGxvY2sgYmVjYXVzZSB3ZSBtYXkgc3Rh
cnQgZmx1c2hpbmcKKwkJCSAqIGZyb20gdGhpcyBjb29yZGluYXRlLiAqLworCQkJcmV0ID0gbmVp
Z2hib3JfaW5fc2x1bShuZXh0X2Nvb3JkLm5vZGUsCisJCQkJCSAgICAgICAmbmV4dF9sb2NrLAor
CQkJCQkgICAgICAgc2Nhbi0+ZGlyZWN0aW9uLAorCQkJCQkgICAgICAgWk5PREVfV1JJVEVfTE9D
SywKKwkJCQkJICAgICAgIDEgLyogY2hlY2sgZGlydHkgKi8sCisJCQkJCSAgICAgICAwIC8qIGRv
bid0IGdvIHRob3VnaCB1cHBlcgorCQkJCQkJICAgIGxldmVscyAqLyk7CisJCQlpZiAocmV0ID09
IC1FX05PX05FSUdIQk9SKSB7CisJCQkJc2Nhbi0+c3RvcCA9IDE7CisJCQkJcmV0ID0gMDsKKwkJ
CQlicmVhazsKKwkJCX0KKworCQkJaWYgKHJldCAhPSAwKQorCQkJCWdvdG8gZXhpdDsKKworCQkJ
cmV0ID0gaW5jcl9sb2FkX2NvdW50X3pub2RlKCZuZXh0X2xvYWQsIG5leHRfbG9jay5ub2RlKTsK
KwkJCWlmIChyZXQgIT0gMCkKKwkJCQlnb3RvIGV4aXQ7CisKKwkJCWNvb3JkX2luaXRfc2lkZW9m
X3VuaXQoJm5leHRfY29vcmQsIG5leHRfbG9jay5ub2RlLAorCQkJCQkgICAgICAgc2lkZW9mX3Jl
dmVyc2Uoc2Nhbi0+ZGlyZWN0aW9uKSk7CisJCX0KKworCQlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5
X2Nvb3JkKCZuZXh0X2Nvb3JkKTsKKworCQkvKiBHZXQgdGhlIG5leHQgY2hpbGQuICovCisJCXJl
dCA9CisJCSAgICBpcGx1Zy0+Zi51dG1vc3RfY2hpbGQoJm5leHRfY29vcmQsCisJCQkJCSAgc2lk
ZW9mX3JldmVyc2Uoc2Nhbi0+ZGlyZWN0aW9uKSwKKwkJCQkJICAmY2hpbGQpOworCQlpZiAocmV0
ICE9IDApCisJCQlnb3RvIGV4aXQ7CisJCS8qIElmIHRoZSBuZXh0IGNoaWxkIGlzIG5vdCBpbiBt
ZW1vcnksIG9yLCBpdGVtX3V0bW9zdF9jaGlsZAorCQkgICBmYWlsZWQgKGR1ZSB0byByYWNlIHdp
dGggdW5saW5rLCBtb3N0IHByb2JhYmx5KSwgc3RvcAorCQkgICBoZXJlLiAqLworCQlpZiAoY2hp
bGQgPT0gTlVMTCB8fCBJU19FUlIoY2hpbGQpKSB7CisJCQlzY2FuLT5zdG9wID0gMTsKKwkJCWNo
ZWNrY2hpbGQoc2Nhbik7CisJCQlicmVhazsKKwkJfQorCisJCWFzc2VydCgibmlraXRhLTIzNzQi
LCBqbm9kZV9pc191bmZvcm1hdHRlZChjaGlsZCkKKwkJICAgICAgIHx8IGpub2RlX2lzX3pub2Rl
KGNoaWxkKSk7CisKKwkJLyogU2VlIGlmIGl0IGlzIGRpcnR5LCBwYXJ0IG9mIHRoZSBzYW1lIGF0
b20uICovCisJCWlmICghcmVpc2VyNF9zY2FuX2dvdG8oc2NhbiwgY2hpbGQpKSB7CisJCQljaGVj
a2NoaWxkKHNjYW4pOworCQkJYnJlYWs7CisJCX0KKworCQkvKiBJZiBzbywgbWFrZSB0aGlzIGNo
aWxkIGN1cnJlbnQuICovCisJCXJldCA9IHNjYW5fc2V0X2N1cnJlbnQoc2NhbiwgY2hpbGQsIDEs
ICZuZXh0X2Nvb3JkKTsKKwkJaWYgKHJldCAhPSAwKQorCQkJZ290byBleGl0OworCisJCS8qIE5v
dyBjb250aW51ZS4gIElmIGZvcm1hdHRlZCB3ZSByZWxlYXNlIHRoZSBwYXJlbnQgbG9jayBhbmQK
KwkJICAgcmV0dXJuLCB0aGVuIHByb2NlZWQuICovCisJCWlmIChqbm9kZV9pc196bm9kZShjaGls
ZCkpCisJCQlicmVhazsKKworCQkvKiBPdGhlcndpc2UsIHJlcGVhdCB0aGUgYWJvdmUgbG9vcCB3
aXRoIG5leHRfY29vcmQuICovCisJCWlmIChuZXh0X2xvYWQubm9kZSAhPSBOVUxMKSB7CisJCQlk
b25lX2xoKCZzY2FuLT5wYXJlbnRfbG9jayk7CisJCQltb3ZlX2xoKCZzY2FuLT5wYXJlbnRfbG9j
aywgJm5leHRfbG9jayk7CisJCQltb3ZlX2xvYWRfY291bnQoJnNjYW4tPnBhcmVudF9sb2FkLCAm
bmV4dF9sb2FkKTsKKwkJfQorCX0KKworCWFzc2VydCgiam1hY2QtNjIzMyIsCisJICAgICAgIHJl
aXNlcjRfc2Nhbl9maW5pc2hlZChzY2FuKSB8fCBqbm9kZV9pc196bm9kZShzY2FuLT5ub2RlKSk7
CitleGl0OgorCWNoZWNrY2hpbGQoc2Nhbik7CityYWNlOgkJCS8qIHNraXAgdGhlIGFib3ZlIGNo
ZWNrICAqLworCWlmIChqbm9kZV9pc196bm9kZShzY2FuLT5ub2RlKSkgeworCQlkb25lX2xoKCZz
Y2FuLT5wYXJlbnRfbG9jayk7CisJCWRvbmVfbG9hZF9jb3VudCgmc2Nhbi0+cGFyZW50X2xvYWQp
OworCX0KKworCWRvbmVfbG9hZF9jb3VudCgmbmV4dF9sb2FkKTsKKwlkb25lX2xoKCZuZXh0X2xv
Y2spOworCXJldHVybiByZXQ7Cit9CisKKy8qIEZMVVNIIFBPUyBIRUxQRVJTICovCisKKy8qIElu
aXRpYWxpemUgdGhlIGZpZWxkcyBvZiBhIGZsdXNoX3Bvc2l0aW9uLiAqLworc3RhdGljIHZvaWQg
cG9zX2luaXQoZmx1c2hfcG9zX3QgKnBvcykKK3sKKwltZW1zZXQocG9zLCAwLCBzaXplb2YgKnBv
cyk7CisKKwlwb3MtPnN0YXRlID0gUE9TX0lOVkFMSUQ7CisJY29vcmRfaW5pdF9pbnZhbGlkKCZw
b3MtPmNvb3JkLCBOVUxMKTsKKwlpbml0X2xoKCZwb3MtPmxvY2spOworCWluaXRfbG9hZF9jb3Vu
dCgmcG9zLT5sb2FkKTsKKworCXJlaXNlcjRfYmxvY2tucl9oaW50X2luaXQoJnBvcy0+cHJlY2Vk
ZXIpOworfQorCisvKiBUaGUgZmx1c2ggbG9vcCBpbnNpZGUgc3F1YWxsb2MgcGVyaW9kaWNhbGx5
IGNoZWNrcyBwb3NfdmFsaWQgdG8gZGV0ZXJtaW5lCisgICB3aGVuICJlbm91Z2ggZmx1c2hpbmci
IGhhcyBiZWVuIHBlcmZvcm1lZC4gVGhpcyB3aWxsIHJldHVybiB0cnVlIHVudGlsIG9uZQorICAg
b2YgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGlzIG1ldDoKKworICAgMS4gdGhlIG51bWJlciBv
ZiBmbHVzaC1xdWV1ZWQgbm9kZXMgaGFzIHJlYWNoZWQgdGhlIGtlcm5lbC1zdXBwbGllZAorICAg
ImludCAqbnJfdG9fZmx1c2giIHBhcmFtZXRlciwgbWVhbmluZyB3ZSBoYXZlIGZsdXNoZWQgYXMg
bWFueSBibG9ja3MgYXMgdGhlCisgICBrZXJuZWwgcmVxdWVzdGVkLiBXaGVuIGZsdXNoaW5nIHRv
IGNvbW1pdCwgdGhpcyBwYXJhbWV0ZXIgaXMgTlVMTC4KKworICAgMi4gcG9zX3N0b3AoKSBpcyBj
YWxsZWQgYmVjYXVzZSBzcXVhbGxvYyBkaXNjb3ZlcnMgdGhhdCB0aGUgIm5leHQiIG5vZGUgaW4K
KyAgIHRoZSBmbHVzaCBvcmRlciBpcyBlaXRoZXIgbm9uLWV4aXN0YW50LCBub3QgZGlydHksIG9y
IG5vdCBpbiB0aGUgc2FtZSBhdG9tLgorKi8KKworc3RhdGljIGludCBwb3NfdmFsaWQoZmx1c2hf
cG9zX3QgKnBvcykKK3sKKwlyZXR1cm4gcG9zLT5zdGF0ZSAhPSBQT1NfSU5WQUxJRDsKK30KKwor
LyogUmVsZWFzZSBhbnkgcmVzb3VyY2VzIG9mIGEgZmx1c2hfcG9zaXRpb24uIENhbGxlZCB3aGVu
IGpub2RlX2ZsdXNoCisgICBmaW5pc2hlcy4gKi8KK3N0YXRpYyB2b2lkIHBvc19kb25lKGZsdXNo
X3Bvc190ICpwb3MpCit7CisJcG9zX3N0b3AocG9zKTsKKwlyZWlzZXI0X2Jsb2NrbnJfaGludF9k
b25lKCZwb3MtPnByZWNlZGVyKTsKKwlpZiAoY29udmVydF9kYXRhKHBvcykpCisJCWZyZWVfY29u
dmVydF9kYXRhKHBvcyk7Cit9CisKKy8qIFJlc2V0IHRoZSBwb2ludCBhbmQgcGFyZW50LiAgQ2Fs
bGVkIGR1cmluZyBmbHVzaCBzdWJyb3V0aW5lcyB0byB0ZXJtaW5hdGUgdGhlCisgICBzcXVhbGxv
YyBsb29wLiAqLworc3RhdGljIGludCBwb3Nfc3RvcChmbHVzaF9wb3NfdCAqcG9zKQoreworCXBv
cy0+c3RhdGUgPSBQT1NfSU5WQUxJRDsKKwlkb25lX2xoKCZwb3MtPmxvY2spOworCWRvbmVfbG9h
ZF9jb3VudCgmcG9zLT5sb2FkKTsKKwljb29yZF9pbml0X2ludmFsaWQoJnBvcy0+Y29vcmQsIE5V
TEwpOworCisJaWYgKHBvcy0+Y2hpbGQpIHsKKwkJanB1dChwb3MtPmNoaWxkKTsKKwkJcG9zLT5j
aGlsZCA9IE5VTEw7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIFJldHVybiB0aGUgZmx1c2hf
cG9zaXRpb24ncyBibG9jayBhbGxvY2F0b3IgaGludC4gKi8KK3JlaXNlcjRfYmxvY2tucl9oaW50
ICpyZWlzZXI0X3Bvc19oaW50KGZsdXNoX3Bvc190ICpwb3MpCit7CisJcmV0dXJuICZwb3MtPnBy
ZWNlZGVyOworfQorCitmbHVzaF9xdWV1ZV90ICpyZWlzZXI0X3Bvc19mcShmbHVzaF9wb3NfdCAq
cG9zKQoreworCXJldHVybiBwb3MtPmZxOworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAg
TG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUt
bmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmls
bC1jb2x1bW46IDkwCisgICBMb2NhbFdvcmRzOiAgcHJlY2VkZXIKKyAgIEVuZDoKKyovCmRpZmYg
LXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZmx1c2gu
aCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9mbHVzaC5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L2ZsdXNoLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysr
IGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2ZsdXNoLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTEy
MjIxNjIgKzAxMDAKQEAgLTAsMCArMSwyOTAgQEAKKy8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5
IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKwor
LyogREVDTEFSQVRJT05TOiAqLworCisjaWYgIWRlZmluZWQoX19SRUlTRVI0X0ZMVVNIX0hfXykK
KyNkZWZpbmUgX19SRUlTRVI0X0ZMVVNIX0hfXworCisjaW5jbHVkZSAicGx1Z2luL2NsdXN0ZXIu
aCIKKworLyogVGhlIGZsdXNoX3NjYW4gZGF0YSBzdHJ1Y3R1cmUgbWFpbnRhaW5zIHRoZSBzdGF0
ZSBvZiBhbiBpbi1wcm9ncmVzcworICAgZmx1c2gtc2NhbiBvbiBhIHNpbmdsZSBsZXZlbCBvZiB0
aGUgdHJlZS4gQSBmbHVzaC1zY2FuIGlzIHVzZWQgZm9yIGNvdW50aW5nCisgICB0aGUgbnVtYmVy
IG9mIGFkamFjZW50IG5vZGVzIHRvIGZsdXNoLCB3aGljaCBpcyB1c2VkIHRvIGRldGVybWluZSB3
aGV0aGVyIHdlCisgICBzaG91bGQgcmVsb2NhdGUsIGFuZCBpdCBpcyBhbHNvIHVzZWQgdG8gZmlu
ZCBhIHN0YXJ0aW5nIHBvaW50IGZvciBmbHVzaC4gQQorICAgZmx1c2gtc2NhbiBvYmplY3QgY2Fu
IHNjYW4gaW4gYm90aCByaWdodCBhbmQgbGVmdCBkaXJlY3Rpb25zIHZpYSB0aGUKKyAgIHNjYW5f
bGVmdCgpIGFuZCBzY2FuX3JpZ2h0KCkgaW50ZXJmYWNlcy4gVGhlIHJpZ2h0LSBhbmQgbGVmdC12
YXJpYXRpb25zIGFyZQorICAgc2ltaWxhciBidXQgcGVyZm9ybSBkaWZmZXJlbnQgZnVuY3Rpb25z
LiBXaGVuIHNjYW5uaW5nIGxlZnQgd2UgKG9wdGlvbmFsbHkKKyAgIHBlcmZvcm0gcmFwaWQgc2Nh
bm5pbmcgYW5kIHRoZW4pIGxvbmd0ZXJtLWxvY2sgdGhlIGVuZHBvaW50IG5vZGUuIFdoZW4KKyAg
IHNjYW5uaW5nIHJpZ2h0IHdlIGFyZSBzaW1wbHkgY291bnRpbmcgdGhlIG51bWJlciBvZiBhZGph
Y2VudCwgZGlydHkgbm9kZXMuICovCitzdHJ1Y3QgZmx1c2hfc2NhbiB7CisKKwkvKiBUaGUgY3Vy
cmVudCBudW1iZXIgb2Ygbm9kZXMgc2Nhbm5lZCBvbiB0aGlzIGxldmVsLiAqLworCXVuc2lnbmVk
IGNvdW50OworCisJLyogVGhlcmUgbWF5IGJlIGEgbWF4aW11bSBudW1iZXIgb2Ygbm9kZXMgZm9y
IGEgc2NhbiBvbiBhbnkgc2luZ2xlCisJICAgbGV2ZWwuIFdoZW4gZ29pbmcgbGVmdHdhcmQsIG1h
eF9jb3VudCBpcyBkZXRlcm1pbmVkIGJ5CisJICAgRkxVU0hfU0NBTl9NQVhOT0RFUyAoc2VlIHJl
aXNlcjQuaCkgKi8KKwl1bnNpZ25lZCBtYXhfY291bnQ7CisKKwkvKiBEaXJlY3Rpb246IFNldCB0
byBvbmUgb2YgdGhlIHNpZGVvZiBlbnVtZXJhdGlvbjoKKwkgICB7IExFRlRfU0lERSwgUklHSFRf
U0lERSB9LiAqLworCXNpZGVvZiBkaXJlY3Rpb247CisKKwkvKiBJbml0aWFsbHkgQHN0b3AgaXMg
c2V0IHRvIGZhbHNlIHRoZW4gc2V0IHRydWUgb25jZSBzb21lIGNvbmRpdGlvbgorCSAgIHN0b3Bz
IHRoZSBzZWFyY2ggKGUuZy4sIHdlIGZvdW5kIGEgY2xlYW4gbm9kZSBiZWZvcmUgcmVhY2hpbmcK
KwkgICBtYXhfY291bnQgb3Igd2UgZm91bmQgYSBub2RlIGJlbG9uZ2luZyB0byBhbm90aGVyIGF0
b20pLiAqLworCWludCBzdG9wOworCisJLyogVGhlIGN1cnJlbnQgc2NhbiBwb3NpdGlvbi4gIElm
IEBub2RlIGlzIG5vbi1OVUxMIHRoZW4gaXRzIHJlZmVyZW5jZQorCSAgIGNvdW50IGhhcyBiZWVu
IGluY3JlbWVudGVkIHRvIHJlZmxlY3QgdGhpcyByZWZlcmVuY2UuICovCisJam5vZGUgKm5vZGU7
CisKKwkvKiBBIGhhbmRsZSBmb3IgemxvYWQvenJlbHNlIG9mIGN1cnJlbnQgc2NhbiBwb3NpdGlv
biBub2RlLiAqLworCWxvYWRfY291bnQgbm9kZV9sb2FkOworCisJLyogRHVyaW5nIGxlZnQtc2Nh
biwgaWYgdGhlIGZpbmFsIHBvc2l0aW9uIChhLmsuYS4gZW5kcG9pbnQgbm9kZSkgaXMKKwkgICBm
b3JtYXR0ZWQgdGhlIG5vZGUgaXMgbG9ja2VkIHVzaW5nIHRoaXMgbG9jayBoYW5kbGUuIFRoZSBl
bmRwb2ludAorCSAgIG5lZWRzIHRvIGJlIGxvY2tlZCBmb3IgdHJhbnNmZXIgdG8gdGhlIGZsdXNo
X3Bvc2l0aW9uIG9iamVjdCBhZnRlcgorCSAgIHNjYW5uaW5nIGZpbmlzaGVzLiAqLworCWxvY2tf
aGFuZGxlIG5vZGVfbG9jazsKKworCS8qIFdoZW4gdGhlIHBvc2l0aW9uIGlzIHVuZm9ybWF0dGVk
LCBpdHMgcGFyZW50LCBjb29yZGluYXRlLCBhbmQgcGFyZW50CisJICAgemxvYWQvenJlbHNlIGhh
bmRsZS4gKi8KKwlsb2NrX2hhbmRsZSBwYXJlbnRfbG9jazsKKwljb29yZF90IHBhcmVudF9jb29y
ZDsKKwlsb2FkX2NvdW50IHBhcmVudF9sb2FkOworCisJLyogVGhlIGJsb2NrIGFsbG9jYXRvciBw
cmVjZWRlciBoaW50LiAgU29tZXRpbWVzIGZsdXNoX3NjYW4gZGV0ZXJtaW5lcworCSAgIHdoYXQg
dGhlIHByZWNlZGVyIGlzIGFuZCBpZiBzbyBpdCBzZXRzIGl0IGhlcmUsIGFmdGVyIHdoaWNoIGl0
IGlzCisJICAgY29waWVkIGludG8gdGhlIGZsdXNoX3Bvc2l0aW9uLiBPdGhlcndpc2UsIHRoZSBw
cmVjZWRlciBpcyBjb21wdXRlZAorCSAgIGxhdGVyLiAqLworCXJlaXNlcjRfYmxvY2tfbnIgcHJl
Y2VkZXJfYmxrOworfTsKKworc3RydWN0IGNvbnZlcnRfaXRlbV9pbmZvIHsKKwlkY19pdGVtX3N0
YXQgZF9jdXI7CS8qIHBlci1jbHVzdGVyIHN0YXR1cyBvZiB0aGUgY3VycmVudCBpdGVtICovCisJ
ZGNfaXRlbV9zdGF0IGRfbmV4dDsgICAgLyogcGVyLWNsdXN0ZXIgc3RhdHVzIG9mIHRoZSBmaXJz
dCBpdGVtIG9uCisJCQkJICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSByaWdodCBuZWlnaGJv
ciAqLworCWludCBjbHVzdGVyX3NoaWZ0OyAgICAgIC8qIGRpc2sgY2x1c3RlciBzaGlmdCAqLwor
CWZsb3dfdCBmbG93OyAgICAgICAgICAgIC8qIGRpc2sgY2x1c3RlciBkYXRhICovCit9OworCitz
dHJ1Y3QgY29udmVydF9pbmZvIHsKKwlpbnQgY291bnQ7CQkvKiBmb3Igc3F1YWxsb2MgdGVybWlu
YXRpbmcgKi8KKwlpdGVtX3BsdWdpbiAqaXBsdWc7CS8qIGN1cnJlbnQgaXRlbSBwbHVnaW4gKi8K
KwlzdHJ1Y3QgY29udmVydF9pdGVtX2luZm8gKml0bTsJLyogY3VycmVudCBpdGVtIGluZm8gKi8K
KwlzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgY2x1c3Q7CS8qIHRyYW5zZm9ybSBjbHVzdGVyICovCisJ
bG9ja19oYW5kbGUgcmlnaHRfbG9jazsgLyogbG9jayBoYW5kbGUgb2YgdGhlIHJpZ2h0IG5laWdo
Ym9yICovCisJaW50IHJpZ2h0X2xvY2tlZDsKK307CisKK3R5cGVkZWYgZW51bSBmbHVzaF9wb3Np
dGlvbl9zdGF0ZSB7CisJUE9TX0lOVkFMSUQsCQkvKiBJbnZhbGlkIG9yIHN0b3BwZWQgcG9zLCBk
byBub3QgY29udGludWUgc2x1bQorCQkJCSAqIHByb2Nlc3NpbmcgKi8KKwlQT1NfT05fTEVBRiwJ
CS8qIHBvcyBwb2ludHMgdG8gYWxyZWFkeSBwcmVwcGVkLCBsb2NrZWQKKwkJCQkgKiBmb3JtYXR0
ZWQgbm9kZSBhdCBsZWFmIGxldmVsICovCisJUE9TX09OX0VQT0lOVCwJCS8qIHBvcyBrZWVwcyBh
IGxvY2sgb24gdHdpZyBsZXZlbCwgImNvb3JkIiBmaWVsZAorCQkJCSAqIGlzIHVzZWQgdG8gdHJh
dmVyc2UgdW5mb3JtYXR0ZWQgbm9kZXMgKi8KKwlQT1NfVE9fTEVBRiwJCS8qIHBvcyBpcyBiZWlu
ZyBtb3ZlZCB0byBsZWFmIGxldmVsICovCisJUE9TX1RPX1RXSUcsCQkvKiBwb3MgaXMgYmVpbmcg
bW92ZWQgdG8gdHdpZyBsZXZlbCAqLworCVBPU19FTkRfT0ZfVFdJRywJLyogc3BlY2lhbCBjYXNl
IG9mIFBPU19PTl9UV0lHLCB3aGVuIGNvb3JkIGlzCisJCQkJICogYWZ0ZXIgcmlnaHRtb3N0IHVu
aXQgb2YgdGhlIGN1cnJlbnQgdHdpZyAqLworCVBPU19PTl9JTlRFUk5BTAkJLyogc2FtZSBhcyBQ
T1NfT05fTEVBRiwgYnV0IHBvaW50cyB0byBpbnRlcm5hbAorCQkJCSAqIG5vZGUgKi8KK30gZmx1
c2hwb3Nfc3RhdGVfdDsKKworLyogQW4gZW5jYXBzdWxhdGlvbiBvZiB0aGUgY3VycmVudCBmbHVz
aCBwb2ludCBhbmQgYWxsIHRoZSBwYXJhbWV0ZXJzIHRoYXQgYXJlCisgICBwYXNzZWQgdGhyb3Vn
aCB0aGUgZW50aXJlIHNxdWVlemUtYW5kLWFsbG9jYXRlIHN0YWdlIG9mIHRoZSBmbHVzaCByb3V0
aW5lLgorICAgQSBzaW5nbGUgZmx1c2hfcG9zaXRpb24gb2JqZWN0IGlzIGNvbnN0cnVjdGVkIGFm
dGVyIGxlZnQtIGFuZCByaWdodC1zY2FubmluZworICAgZmluaXNoZXMuICovCitzdHJ1Y3QgZmx1
c2hfcG9zaXRpb24geworCWZsdXNocG9zX3N0YXRlX3Qgc3RhdGU7CisKKwljb29yZF90IGNvb3Jk
OwkJLyogY29vcmQgdG8gdHJhdmVyc2UgdW5mb3JtYXR0ZWQgbm9kZXMgKi8KKwlsb2NrX2hhbmRs
ZSBsb2NrOwkvKiBjdXJyZW50IGxvY2sgd2UgaG9sZCAqLworCWxvYWRfY291bnQgbG9hZDsJLyog
bG9hZCBzdGF0dXMgZm9yIGN1cnJlbnQgbG9ja2VkIGZvcm1hdHRlZCBub2RlCisJCQkJKi8KKwlq
bm9kZSAqY2hpbGQ7CQkvKiBmb3IgcGFzc2luZyBhIHJlZmVyZW5jZSB0byB1bmZvcm1hdHRlZCBj
aGlsZAorCQkJCSAqIGFjcm9zcyBwb3Mgc3RhdGUgY2hhbmdlcyAqLworCisJcmVpc2VyNF9ibG9j
a25yX2hpbnQgcHJlY2VkZXI7CS8qIFRoZSBmbHVzaCAnaGludCcgc3RhdGUuICovCisJaW50IGxl
YWZfcmVsb2NhdGU7CS8qIFRydWUgaWYgZW5vdWdoIGxlYWYtbGV2ZWwgbm9kZXMgd2VyZQorCQkJ
CSAqIGZvdW5kIHRvIHN1Z2dlc3QgYSByZWxvY2F0ZSBwb2xpY3kuICovCisJaW50IGFsbG9jX2Nu
dDsJCS8qIFRoZSBudW1iZXIgb2Ygbm9kZXMgYWxsb2NhdGVkIGR1cmluZyBzcXVlZXplCisJCQkJ
ICAgYW5kIGFsbG9jb2NhdGUuICovCisJaW50IHByZXBfb3JfZnJlZV9jbnQ7CS8qIFRoZSBudW1i
ZXIgb2Ygbm9kZXMgcHJlcGFyZWQgZm9yIHdyaXRlCisJCQkJICAgKGFsbG9jYXRlKSBvciBzcXVl
ZXplZCBhbmQgZnJlZWQuICovCisJZmx1c2hfcXVldWVfdCAqZnE7CisJbG9uZyAqbnJfd3JpdHRl
bjsJLyogbnVtYmVyIG9mIG5vZGVzIHN1Ym1pdHRlZCB0byBkaXNrICovCisJaW50IGZsYWdzOwkJ
LyogYSBjb3B5IG9mIGpub2RlX2ZsdXNoIGZsYWdzIGFyZ3VtZW50ICovCisKKwl6bm9kZSAqcHJl
dl90d2lnOwkvKiBwcmV2aW91cyBwYXJlbnQgcG9pbnRlciB2YWx1ZSwgdXNlZCB0byBjYXRjaAor
CQkJCSAqIHByb2Nlc3Npbmcgb2YgbmV3IHR3aWcgbm9kZSAqLworCXN0cnVjdCBjb252ZXJ0X2lu
Zm8gKnNxOwkvKiBjb252ZXJ0IGluZm8gKi8KKworCXVuc2lnbmVkIGxvbmcgcG9zX2luX3VuaXQ7
CS8qIGZvciBleHRlbnRzIG9ubHkuIFBvc2l0aW9uCisJCQkJCSAgIHdpdGhpbiBhbiBleHRlbnQg
dW5pdCBvZiBmaXJzdAorCQkJCQkgICBqbm9kZSBvZiBzbHVtICovCisJbG9uZyBucl90b193cml0
ZTsJLyogbnVtYmVyIG9mIHVuZm9ybWF0dGVkIG5vZGVzIHRvIGhhbmRsZSBvbgorCQkJCSAgIGZs
dXNoICovCit9OworCitzdGF0aWMgaW5saW5lIGludCBpdGVtX2NvbnZlcnRfY291bnQoZmx1c2hf
cG9zX3QgKnBvcykKK3sKKwlyZXR1cm4gcG9zLT5zcS0+Y291bnQ7Cit9CitzdGF0aWMgaW5saW5l
IHZvaWQgaW5jX2l0ZW1fY29udmVydF9jb3VudChmbHVzaF9wb3NfdCAqcG9zKQoreworCXBvcy0+
c3EtPmNvdW50Kys7Cit9CitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2l0ZW1fY29udmVydF9jb3Vu
dChmbHVzaF9wb3NfdCAqcG9zLCBpbnQgY291bnQpCit7CisJcG9zLT5zcS0+Y291bnQgPSBjb3Vu
dDsKK30KK3N0YXRpYyBpbmxpbmUgaXRlbV9wbHVnaW4gKml0ZW1fY29udmVydF9wbHVnKGZsdXNo
X3Bvc190ICpwb3MpCit7CisJcmV0dXJuIHBvcy0+c3EtPmlwbHVnOworfQorCitzdGF0aWMgaW5s
aW5lIHN0cnVjdCBjb252ZXJ0X2luZm8gKmNvbnZlcnRfZGF0YShmbHVzaF9wb3NfdCAqcG9zKQor
eworCXJldHVybiBwb3MtPnNxOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBjb252ZXJ0X2l0
ZW1faW5mbyAqaXRlbV9jb252ZXJ0X2RhdGEoZmx1c2hfcG9zX3QgKnBvcykKK3sKKwlhc3NlcnQo
ImVkd2FyZC05NTUiLCBjb252ZXJ0X2RhdGEocG9zKSk7CisJcmV0dXJuIHBvcy0+c3EtPml0bTsK
K30KKworc3RhdGljIGlubGluZSBzdHJ1Y3QgdGZtX2NsdXN0ZXIgKnRmbV9jbHVzdGVyX3NxKGZs
dXNoX3Bvc190ICpwb3MpCit7CisJcmV0dXJuICZwb3MtPnNxLT5jbHVzdC50YzsKK30KKworc3Rh
dGljIGlubGluZSBzdHJ1Y3QgdGZtX3N0cmVhbSAqdGZtX3N0cmVhbV9zcShmbHVzaF9wb3NfdCAq
cG9zLAorCQkJCQkJdGZtX3N0cmVhbV9pZCBpZCkKK3sKKwlhc3NlcnQoImVkd2FyZC04NTQiLCBw
b3MtPnNxICE9IE5VTEwpOworCXJldHVybiBnZXRfdGZtX3N0cmVhbSh0Zm1fY2x1c3Rlcl9zcShw
b3MpLCBpZCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGNvbnZlcnRfZGF0YV9hdHRhY2hlZChm
bHVzaF9wb3NfdCAqcG9zKQoreworCXJldHVybiBjb252ZXJ0X2RhdGEocG9zKSAhPSBOVUxMICYm
IGl0ZW1fY29udmVydF9kYXRhKHBvcykgIT0gTlVMTDsKK30KKworI2RlZmluZSBzaG91bGRfY29u
dmVydF9yaWdodF9uZWlnaGJvcihwb3MpIGNvbnZlcnRfZGF0YV9hdHRhY2hlZChwb3MpCisKKy8q
IFJldHVybnMgdHJ1ZSBpZiBuZXh0IG5vZGUgY29udGFpbnMgbmV4dCBpdGVtIG9mIHRoZSBkaXNr
IGNsdXN0ZXIKKyAgIHNvIGl0ZW0gY29udmVydCBkYXRhIHNob3VsZCBiZSBtb3ZlZCB0byB0aGUg
cmlnaHQgc2x1bSBuZWlnaGJvci4KKyovCitzdGF0aWMgaW5saW5lIGludCBuZXh0X25vZGVfaXNf
Y2hhaW5lZChmbHVzaF9wb3NfdCAqcG9zKQoreworCXJldHVybiBjb252ZXJ0X2RhdGFfYXR0YWNo
ZWQocG9zKSAmJgorCQlpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT5kX25leHQgPT0gRENfQ0hBSU5F
RF9JVEVNOworfQorCisvKgorICogVXBkYXRlICJ0d2luIHN0YXRlIiAoZF9jdXIsIGRfbmV4dCkg
dG8gYXNzaWduIGEgcHJvcGVyCisgKiBjb252ZXJzaW9uIG1vZGUgaW4gdGhlIG5leHQgaXRlcmF0
aW9uIG9mIGNvbnZlcnRfbm9kZSgpCisgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCB1cGRhdGVfY2hh
aW5pbmdfc3RhdGUoZmx1c2hfcG9zX3QgKnBvcywKKwkJCQkJIGludCB0aGlzX25vZGUgLyogd2hl
cmUgdG8gcHJvY2VlZCAqLykKK3sKKworCWFzc2VydCgiZWR3YXJkLTEwMTAiLCBjb252ZXJ0X2Rh
dGFfYXR0YWNoZWQocG9zKSk7CisKKwlpZiAodGhpc19ub2RlKSB7CisJCS8qCisJCSAqIHdlIHdh
bnQgdG8gcGVyZm9ybSBvbmUgbW9yZSBpdGVyYXRpb24gd2l0aCB0aGUgc2FtZSBpdGVtCisJCSAq
LworCQlhc3NlcnQoImVkd2FyZC0xMDEzIiwKKwkJICAgICAgIGl0ZW1fY29udmVydF9kYXRhKHBv
cyktPmRfY3VyID09IERDX0ZJUlNUX0lURU0gfHwKKwkJICAgICAgIGl0ZW1fY29udmVydF9kYXRh
KHBvcyktPmRfY3VyID09IERDX0NIQUlORURfSVRFTSk7CisJCWFzc2VydCgiZWR3YXJkLTEyMjci
LAorCQkgICAgICAgaXRlbV9jb252ZXJ0X2RhdGEocG9zKS0+ZF9uZXh0ID09IERDX0FGVEVSX0NM
VVNURVIgfHwKKwkJICAgICAgIGl0ZW1fY29udmVydF9kYXRhKHBvcyktPmRfbmV4dCA9PSBEQ19J
TlZBTElEX1NUQVRFKTsKKworCQlpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT5kX2N1ciA9IERDX0FG
VEVSX0NMVVNURVI7CisJCWl0ZW1fY29udmVydF9kYXRhKHBvcyktPmRfbmV4dCA9IERDX0lOVkFM
SURfU1RBVEU7CisJfQorCWVsc2UgeworCQkvKgorCQkgKiB3ZSB3YW50IHRvIHByb2NlZWQgb24g
cmlnaHQgbmVpZ2hib3IsIHdoaWNoIGlzIGNoYWluZWQKKwkJICovCisJCWFzc2VydCgiZWR3YXJk
LTEwMTEiLAorCQkgICAgICAgaXRlbV9jb252ZXJ0X2RhdGEocG9zKS0+ZF9jdXIgPT0gRENfRklS
U1RfSVRFTSB8fAorCQkgICAgICAgaXRlbV9jb252ZXJ0X2RhdGEocG9zKS0+ZF9jdXIgPT0gRENf
Q0hBSU5FRF9JVEVNKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTAxMiIsCisJCSAgICAgICBpdGVtX2Nv
bnZlcnRfZGF0YShwb3MpLT5kX25leHQgPT0gRENfQ0hBSU5FRF9JVEVNKTsKKworCQlpdGVtX2Nv
bnZlcnRfZGF0YShwb3MpLT5kX2N1ciA9IERDX0NIQUlORURfSVRFTTsKKwkJaXRlbV9jb252ZXJ0
X2RhdGEocG9zKS0+ZF9uZXh0ID0gRENfSU5WQUxJRF9TVEFURTsKKwl9Cit9CisKKyNkZWZpbmUg
U1FVQUxMT0NfVEhSRVNIT0xEIDI1NgorCitzdGF0aWMgaW5saW5lIGludCBzaG91bGRfdGVybWlu
YXRlX3NxdWFsbG9jKGZsdXNoX3Bvc190ICpwb3MpCit7CisJcmV0dXJuIGNvbnZlcnRfZGF0YShw
b3MpICYmCisJICAgICFpdGVtX2NvbnZlcnRfZGF0YShwb3MpICYmCisJICAgIGl0ZW1fY29udmVy
dF9jb3VudChwb3MpID49IFNRVUFMTE9DX1RIUkVTSE9MRDsKK30KKworI2lmIFJFSVNFUjRfREVC
VUcKKyNkZWZpbmUgY2hlY2tfY29udmVydF9pbmZvKHBvcykJCQkJCQlcCitkbyB7CQkJCQkJCSAg
ICAgICAgCVwKKwlpZiAodW5saWtlbHkoc2hvdWxkX2NvbnZlcnRfcmlnaHRfbmVpZ2hib3IocG9z
KSkpIHsJCVwKKwkJd2FybmluZygiZWR3YXJkLTEwMDYiLCAidW5wcm9jZXNzZWQgY2hhaW5lZCBk
YXRhIik7CVwKKwkJcHJpbnRrKCJkX2N1ciA9ICVkLCBkX25leHQgPSAlZCwgZmxvdy5sZW4gPSAl
bGx1XG4iLAlcCisJCSAgICAgICBpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT5kX2N1ciwJCQlcCisJ
CSAgICAgICBpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT5kX25leHQsCQkJXAorCQkgICAgICAgaXRl
bV9jb252ZXJ0X2RhdGEocG9zKS0+Zmxvdy5sZW5ndGgpOwkJXAorCX0JCQkJCQkJCVwKK30gd2hp
bGUgKDApCisjZWxzZQorI2RlZmluZSBjaGVja19jb252ZXJ0X2luZm8ocG9zKQorI2VuZGlmIC8q
IFJFSVNFUjRfREVCVUcgKi8KKwordm9pZCBmcmVlX2NvbnZlcnRfZGF0YShmbHVzaF9wb3NfdCAq
cG9zKTsKKy8qIHVzZWQgaW4gZXh0ZW50LmMgKi8KK2ludCBzY2FuX3NldF9jdXJyZW50KGZsdXNo
X3NjYW4gKiBzY2FuLCBqbm9kZSAqIG5vZGUsIHVuc2lnbmVkIGFkZF9zaXplLAorCQkgICAgIGNv
bnN0IGNvb3JkX3QgKnBhcmVudCk7CitpbnQgcmVpc2VyNF9zY2FuX2ZpbmlzaGVkKGZsdXNoX3Nj
YW4gKiBzY2FuKTsKK2ludCByZWlzZXI0X3NjYW5uaW5nX2xlZnQoZmx1c2hfc2NhbiAqIHNjYW4p
OworaW50IHJlaXNlcjRfc2Nhbl9nb3RvKGZsdXNoX3NjYW4gKiBzY2FuLCBqbm9kZSAqIHRvbm9k
ZSk7Cit0eG5fYXRvbSAqYXRvbV9sb2NrZWRfYnlfZnEoZmx1c2hfcXVldWVfdCAqZnEpOworaW50
IHJlaXNlcjRfYWxsb2NfZXh0ZW50KGZsdXNoX3Bvc190ICpmbHVzaF9wb3MpOworc3F1ZWV6ZV9y
ZXN1bHQgc3F1YWxsb2NfZXh0ZW50KHpub2RlICpsZWZ0LCBjb25zdCBjb29yZF90ICosIGZsdXNo
X3Bvc190ICosCisJCQkgICAgICAgcmVpc2VyNF9rZXkgKnN0b3Bfa2V5KTsKK2V4dGVybiBpbnQg
cmVpc2VyNF9pbml0X2Zxcyh2b2lkKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9uZV9mcXModm9p
ZCk7CisKKyNpZiBSRUlTRVI0X0RFQlVHCisKK2V4dGVybiB2b2lkIHJlaXNlcjRfY2hlY2tfZnEo
Y29uc3QgdHhuX2F0b20gKmF0b20pOworZXh0ZXJuIGF0b21pY190IGZsdXNoX2NudDsKKworI2Rl
ZmluZSBjaGVja19wcmVjZWRlcihibGspIFwKK2Fzc2VydCgibmlraXRhLTI1ODgiLCBibGsgPCBy
ZWlzZXI0X2Jsb2NrX2NvdW50KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSkpOworZXh0ZXJuIHZv
aWQgY2hlY2tfcG9zKGZsdXNoX3Bvc190ICpwb3MpOworI2Vsc2UKKyNkZWZpbmUgY2hlY2tfcHJl
Y2VkZXIoYikgbm9vcAorI2RlZmluZSBjaGVja19wb3MocG9zKSBub29wCisjZW5kaWYKKworLyog
X19SRUlTRVI0X0ZMVVNIX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisg
ICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9k
ZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBm
aWxsLWNvbHVtbjogOTAKKyAgIExvY2FsV29yZHM6ICBwcmVjZWRlcgorICAgRW5kOgorKi8KZGlm
ZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9mbHVz
aF9xdWV1ZS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2ZsdXNoX3F1ZXVlLmMKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZmx1c2hfcXVldWUuYwkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvZmx1c2hfcXVldWUu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1MjIyMjE2OSArMDEwMApAQCAtMCwwICsxLDY4MCBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorICAgcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUgImRlYnVnLmgiCisj
aW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNpbmNsdWRlICJqbm9kZS5o
IgorI2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVkZSAicGFnZV9jYWNoZS5oIgorI2luY2x1ZGUg
IndhbmRlci5oIgorI2luY2x1ZGUgInZmc19vcHMuaCIKKyNpbmNsdWRlICJ3cml0ZW91dC5oIgor
I2luY2x1ZGUgImZsdXNoLmgiCisKKyNpbmNsdWRlIDxsaW51eC9iaW8uaD4KKyNpbmNsdWRlIDxs
aW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KKyNpbmNsdWRlIDxsaW51eC9i
bGtkZXYuaD4KKyNpbmNsdWRlIDxsaW51eC93cml0ZWJhY2suaD4KKworLyogQSBmbHVzaCBxdWV1
ZSBvYmplY3QgaXMgYW4gYWNjdW11bGF0b3IgZm9yIGtlZXBpbmcgam5vZGVzIHByZXBhcmVkCisg
ICBieSB0aGUgam5vZGVfZmx1c2goKSBmdW5jdGlvbiBmb3Igd3JpdGluZyB0byBkaXNrLiBUaG9z
ZSAicXVldWVkIiBqbm9kZXMgYXJlCisgICBrZXB0IG9uIHRoZSBmbHVzaCBxdWV1ZSB1bnRpbCBt
ZW1vcnkgcHJlc3N1cmUgb3IgYXRvbSBjb21taXQgYXNrcworICAgZmx1c2ggcXVldWVzIHRvIHdy
aXRlIHNvbWUgb3IgYWxsIGZyb20gdGhlaXIgam5vZGVzLiAqLworCisvKgorICAgTE9DS0lORzoK
KworICAgZnEtPmd1YXJkIHNwaW4gbG9jayBwcm90ZWN0cyBmcS0+YXRvbSBwb2ludGVyIGFuZCBu
b3RoaW5nIGVsc2UuICBmcS0+cHJlcHBlZAorICAgbGlzdCBwcm90ZWN0ZWQgYnkgYXRvbSBzcGlu
IGxvY2suICBmcS0+cHJlcHBlZCBsaXN0IHVzZXMgdGhlIGZvbGxvd2luZworICAgbG9ja2luZzoK
KworICAgdHdvIHdheXMgdG8gcHJvdGVjdCBmcS0+cHJlcHBlZCBsaXN0IGZvciByZWFkLW9ubHkg
bGlzdCB0cmF2ZXJzYWw6CisKKyAgIDEuIGF0b20gc3Bpbi1sb2NrIGF0b20uCisgICAyLiBmcSBp
cyBJTl9VU0UsIGF0b20tPm5yX3J1bm5pbmdfcXVldWVzIGluY3JlYXNlZC4KKworICAgYW5kIG9u
ZSBmb3IgbGlzdCBtb2RpZmljYXRpb246CisKKyAgIDEuIGF0b20gaXMgc3Bpbi1sb2NrZWQgYW5k
IG9uZSBjb25kaXRpb24gaXMgdHJ1ZTogZnEgaXMgSU5fVVNFIG9yCisgICAgICBhdG9tLT5ucl9y
dW5uaW5nX3F1ZXVlcyA9PSAwLgorCisgICBUaGUgZGVhZGxvY2stc2FmZSBvcmRlciBmb3IgZmx1
c2ggcXVldWVzIGFuZCBhdG9tcyBpczogZmlyc3QgbG9jayBhdG9tLCB0aGVuCisgICBsb2NrIGZs
dXNoIHF1ZXVlLCB0aGVuIGxvY2sgam5vZGUuCisqLworCisjZGVmaW5lIGZxX2luX3VzZShmcSkg
ICAgICAgICAgKChmcSktPnN0YXRlICYgRlFfSU5fVVNFKQorI2RlZmluZSBmcV9yZWFkeShmcSkg
ICAgICAgICAgICghZnFfaW5fdXNlKGZxKSkKKworI2RlZmluZSBtYXJrX2ZxX2luX3VzZShmcSkg
ICAgIGRvIHsgKGZxKS0+c3RhdGUgfD0gRlFfSU5fVVNFOyAgICB9IHdoaWxlICgwKQorI2RlZmlu
ZSBtYXJrX2ZxX3JlYWR5KGZxKSAgICAgIGRvIHsgKGZxKS0+c3RhdGUgJj0gfkZRX0lOX1VTRTsg
ICB9IHdoaWxlICgwKQorCisvKiBnZXQgbG9jayBvbiBhdG9tIGZyb20gbG9ja2VkIGZsdXNoIHF1
ZXVlIG9iamVjdCAqLworc3RhdGljIHR4bl9hdG9tICphdG9tX2xvY2tlZF9ieV9mcV9ub2xvY2so
Zmx1c2hfcXVldWVfdCAqZnEpCit7CisJLyogVGhpcyBjb2RlIGlzIHNpbWlsYXIgdG8gam5vZGVf
Z2V0X2F0b20oKSwgbG9vayBhdCBpdCBmb3IgdGhlCisJICogZXhwbGFuYXRpb24uICovCisJdHhu
X2F0b20gKmF0b207CisKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihmcS0+Z3VhcmQpKTsKKworCXdo
aWxlICgxKSB7CisJCWF0b20gPSBmcS0+YXRvbTsKKwkJaWYgKGF0b20gPT0gTlVMTCkKKwkJCWJy
ZWFrOworCisJCWlmIChzcGluX3RyeWxvY2tfYXRvbShhdG9tKSkKKwkJCWJyZWFrOworCisJCWF0
b21pY19pbmMoJmF0b20tPnJlZmNvdW50KTsKKwkJc3Bpbl91bmxvY2soJihmcS0+Z3VhcmQpKTsK
KwkJc3Bpbl9sb2NrX2F0b20oYXRvbSk7CisJCXNwaW5fbG9jaygmKGZxLT5ndWFyZCkpOworCisJ
CWlmIChmcS0+YXRvbSA9PSBhdG9tKSB7CisJCQlhdG9taWNfZGVjKCZhdG9tLT5yZWZjb3VudCk7
CisJCQlicmVhazsKKwkJfQorCisJCXNwaW5fdW5sb2NrKCYoZnEtPmd1YXJkKSk7CisJCWF0b21f
ZGVjX2FuZF91bmxvY2soYXRvbSk7CisJCXNwaW5fbG9jaygmKGZxLT5ndWFyZCkpOworCX0KKwor
CXJldHVybiBhdG9tOworfQorCit0eG5fYXRvbSAqYXRvbV9sb2NrZWRfYnlfZnEoZmx1c2hfcXVl
dWVfdCAqZnEpCit7CisJdHhuX2F0b20gKmF0b207CisKKwlzcGluX2xvY2soJihmcS0+Z3VhcmQp
KTsKKwlhdG9tID0gYXRvbV9sb2NrZWRfYnlfZnFfbm9sb2NrKGZxKTsKKwlzcGluX3VubG9jaygm
KGZxLT5ndWFyZCkpOworCXJldHVybiBhdG9tOworfQorCitzdGF0aWMgdm9pZCBpbml0X2ZxKGZs
dXNoX3F1ZXVlX3QgKmZxKQoreworCW1lbXNldChmcSwgMCwgc2l6ZW9mICpmcSk7CisKKwlhdG9t
aWNfc2V0KCZmcS0+bnJfc3VibWl0dGVkLCAwKTsKKworCUlOSVRfTElTVF9IRUFEKEFUT01fRlFf
TElTVChmcSkpOworCisJaW5pdF93YWl0cXVldWVfaGVhZCgmZnEtPndhaXQpOworCXNwaW5fbG9j
a19pbml0KCZmcS0+Z3VhcmQpOworfQorCisvKiBzbGFiIGZvciBmbHVzaCBxdWV1ZXMgKi8KK3N0
YXRpYyBzdHJ1Y3Qga21lbV9jYWNoZSAqZnFfc2xhYjsKKworLyoqCisgKiByZWlzZXI0X2luaXRf
ZnFzIC0gY3JlYXRlIGZsdXNoIHF1ZXVlIGNhY2hlCisgKgorICogSW5pdGlhbGl6ZXMgc2xhYiBj
YWNoZSBvZiBmbHVzaCBxdWV1ZXMuIEl0IGlzIHBhcnQgb2YgcmVpc2VyNCBtb2R1bGUKKyAqIGlu
aXRpYWxpemF0aW9uLgorICovCitpbnQgcmVpc2VyNF9pbml0X2Zxcyh2b2lkKQoreworCWZxX3Ns
YWIgPSBrbWVtX2NhY2hlX2NyZWF0ZSgiZnEiLAorCQkJCSAgICBzaXplb2YoZmx1c2hfcXVldWVf
dCksCisJCQkJICAgIDAsIFNMQUJfSFdDQUNIRV9BTElHTiwgTlVMTCk7CisJaWYgKGZxX3NsYWIg
PT0gTlVMTCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKwlyZXR1cm4gMDsKK30KKworLyoq
CisgKiByZWlzZXI0X2RvbmVfZnFzIC0gZGVsZXRlIGZsdXNoIHF1ZXVlIGNhY2hlCisgKgorICog
VGhpcyBpcyBjYWxsZWQgb24gcmVpc2VyNCBtb2R1bGUgdW5sb2FkaW5nIG9yIHN5c3RlbSBzaHV0
ZG93bi4KKyAqLwordm9pZCByZWlzZXI0X2RvbmVfZnFzKHZvaWQpCit7CisJZGVzdHJveV9yZWlz
ZXI0X2NhY2hlKCZmcV9zbGFiKTsKK30KKworLyogY3JlYXRlIG5ldyBmbHVzaCBxdWV1ZSBvYmpl
Y3QgKi8KK3N0YXRpYyBmbHVzaF9xdWV1ZV90ICpjcmVhdGVfZnEoZ2ZwX3QgZ2ZwKQoreworCWZs
dXNoX3F1ZXVlX3QgKmZxOworCisJZnEgPSBrbWVtX2NhY2hlX2FsbG9jKGZxX3NsYWIsIGdmcCk7
CisJaWYgKGZxKQorCQlpbml0X2ZxKGZxKTsKKworCXJldHVybiBmcTsKK30KKworLyogYWRqdXN0
IGF0b20ncyBhbmQgZmx1c2ggcXVldWUncyBjb3VudGVycyBvZiBxdWV1ZWQgbm9kZXMgKi8KK3N0
YXRpYyB2b2lkIGNvdW50X2VucXVldWVkX25vZGUoZmx1c2hfcXVldWVfdCAqZnEpCit7CisJT05f
REVCVUcoZnEtPmF0b20tPm51bV9xdWV1ZWQrKyk7Cit9CisKK3N0YXRpYyB2b2lkIGNvdW50X2Rl
cXVldWVkX25vZGUoZmx1c2hfcXVldWVfdCAqZnEpCit7CisJYXNzZXJ0KCJ6YW0tOTkzIiwgZnEt
PmF0b20tPm51bV9xdWV1ZWQgPiAwKTsKKwlPTl9ERUJVRyhmcS0+YXRvbS0+bnVtX3F1ZXVlZC0t
KTsKK30KKworLyogYXR0YWNoIGZsdXNoIHF1ZXVlIG9iamVjdCB0byB0aGUgYXRvbSAqLworc3Rh
dGljIHZvaWQgYXR0YWNoX2ZxKHR4bl9hdG9tICphdG9tLCBmbHVzaF9xdWV1ZV90ICpmcSkKK3sK
Kwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihhdG9tLT5hbG9jaykpOworCWxpc3RfYWRkKCZmcS0+YWxp
bmssICZhdG9tLT5mbHVzaF9xdWV1ZXMpOworCWZxLT5hdG9tID0gYXRvbTsKKwlPTl9ERUJVRyhh
dG9tLT5ucl9mbHVzaF9xdWV1ZXMrKyk7Cit9CisKK3N0YXRpYyB2b2lkIGRldGFjaF9mcShmbHVz
aF9xdWV1ZV90ICpmcSkKK3sKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihmcS0+YXRvbS0+YWxvY2sp
KTsKKworCXNwaW5fbG9jaygmKGZxLT5ndWFyZCkpOworCWxpc3RfZGVsX2luaXQoJmZxLT5hbGlu
ayk7CisJYXNzZXJ0KCJ2cy0xNDU2IiwgZnEtPmF0b20tPm5yX2ZsdXNoX3F1ZXVlcyA+IDApOwor
CU9OX0RFQlVHKGZxLT5hdG9tLT5ucl9mbHVzaF9xdWV1ZXMtLSk7CisJZnEtPmF0b20gPSBOVUxM
OworCXNwaW5fdW5sb2NrKCYoZnEtPmd1YXJkKSk7Cit9CisKKy8qIGRlc3Ryb3kgZmx1c2ggcXVl
dWUgb2JqZWN0ICovCitzdGF0aWMgdm9pZCBkb25lX2ZxKGZsdXNoX3F1ZXVlX3QgKmZxKQorewor
CWFzc2VydCgiemFtLTc2MyIsIGxpc3RfZW1wdHlfY2FyZWZ1bChBVE9NX0ZRX0xJU1QoZnEpKSk7
CisJYXNzZXJ0KCJ6YW0tNzY2IiwgYXRvbWljX3JlYWQoJmZxLT5ucl9zdWJtaXR0ZWQpID09IDAp
OworCisJa21lbV9jYWNoZV9mcmVlKGZxX3NsYWIsIGZxKTsKK30KKworLyogKi8KK3N0YXRpYyB2
b2lkIG1hcmtfam5vZGVfcXVldWVkKGZsdXNoX3F1ZXVlX3QgKmZxLCBqbm9kZSAqIG5vZGUpCit7
CisJSkZfU0VUKG5vZGUsIEpOT0RFX0ZMVVNIX1FVRVVFRCk7CisJY291bnRfZW5xdWV1ZWRfbm9k
ZShmcSk7Cit9CisKKy8qIFB1dHRpbmcgam5vZGUgaW50byB0aGUgZmx1c2ggcXVldWUuIEJvdGgg
YXRvbSBhbmQgam5vZGUgc2hvdWxkIGJlCisgICBzcGluLWxvY2tlZC4gKi8KK3ZvaWQgcXVldWVf
am5vZGUoZmx1c2hfcXVldWVfdCAqZnEsIGpub2RlICogbm9kZSkKK3sKKwlhc3NlcnRfc3Bpbl9s
b2NrZWQoJihub2RlLT5ndWFyZCkpOworCWFzc2VydCgiemFtLTcxMyIsIG5vZGUtPmF0b20gIT0g
TlVMTCk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+YXRvbS0+YWxvY2spKTsKKwlhc3Nl
cnQoInphbS03MTYiLCBmcS0+YXRvbSAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS03MTciLCBmcS0+
YXRvbSA9PSBub2RlLT5hdG9tKTsKKwlhc3NlcnQoInphbS05MDciLCBmcV9pbl91c2UoZnEpKTsK
KworCWFzc2VydCgiemFtLTcxNCIsIEpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSk7CisJYXNz
ZXJ0KCJ6YW0tODI2IiwgSkZfSVNTRVQobm9kZSwgSk5PREVfUkVMT0MpKTsKKwlhc3NlcnQoInZz
LTE0ODEiLCAhSkZfSVNTRVQobm9kZSwgSk5PREVfRkxVU0hfUVVFVUVEKSk7CisJYXNzZXJ0KCJ2
cy0xNDgxIiwgTk9ERV9MSVNUKG5vZGUpICE9IEZRX0xJU1QpOworCisJbWFya19qbm9kZV9xdWV1
ZWQoZnEsIG5vZGUpOworCWxpc3RfbW92ZV90YWlsKCZub2RlLT5jYXB0dXJlX2xpbmssIEFUT01f
RlFfTElTVChmcSkpOworCisJT05fREVCVUcoY291bnRfam5vZGUobm9kZS0+YXRvbSwgbm9kZSwg
Tk9ERV9MSVNUKG5vZGUpLAorCQkJICAgICBGUV9MSVNULCAxKSk7Cit9CisKKy8qIHJlcGVhdGFi
bGUgcHJvY2VzcyBmb3Igd2FpdGluZyBpbyBjb21wbGV0aW9uIG9uIGEgZmx1c2ggcXVldWUgb2Jq
ZWN0ICovCitzdGF0aWMgaW50IHdhaXRfaW8oZmx1c2hfcXVldWVfdCAqZnEsIGludCAqbnJfaW9f
ZXJyb3JzKQoreworCWFzc2VydCgiemFtLTczOCIsIGZxLT5hdG9tICE9IE5VTEwpOworCWFzc2Vy
dF9zcGluX2xvY2tlZCgmKGZxLT5hdG9tLT5hbG9jaykpOworCWFzc2VydCgiemFtLTczNiIsIGZx
X2luX3VzZShmcSkpOworCWFzc2VydCgiemFtLTkxMSIsIGxpc3RfZW1wdHlfY2FyZWZ1bChBVE9N
X0ZRX0xJU1QoZnEpKSk7CisKKwlpZiAoYXRvbWljX3JlYWQoJmZxLT5ucl9zdWJtaXR0ZWQpICE9
IDApIHsKKwkJc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcjsKKworCQlzcGluX3VubG9ja19hdG9t
KGZxLT5hdG9tKTsKKworCQlhc3NlcnQoIm5pa2l0YS0zMDEzIiwgcmVpc2VyNF9zY2hlZHVsYWJs
ZSgpKTsKKworCQlzdXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKworCQkvKiBGSVhN
RTogdGhpcyBpcyBpbnN0ZWFkIG9mIGJsa19ydW5fcXVldWVzKCkgKi8KKwkJLy9ibGtfZmx1c2hf
cGx1ZyhjdXJyZW50KTsKKworCQlpZiAoIXNiX3Jkb25seShzdXBlcikpCisJCQl3YWl0X2V2ZW50
KGZxLT53YWl0LAorCQkJCSAgIGF0b21pY19yZWFkKCZmcS0+bnJfc3VibWl0dGVkKSA9PSAwKTsK
KworCQkvKiBBc2sgdGhlIGNhbGxlciB0byByZS1hY3F1aXJlIHRoZSBsb2NrcyBhbmQgY2FsbCB0
aGlzCisJCSAgIGZ1bmN0aW9uIGFnYWluLiBOb3RlOiB0aGlzIHRlY2huaXF1ZSBpcyBjb21tb25s
eSB1c2VkIGluCisJCSAgIHRoZSB0eG5tZ3IgY29kZS4gKi8KKwkJcmV0dXJuIC1FX1JFUEVBVDsK
Kwl9CisKKwkqbnJfaW9fZXJyb3JzICs9IGF0b21pY19yZWFkKCZmcS0+bnJfZXJyb3JzKTsKKwly
ZXR1cm4gMDsKK30KKworLyogd2FpdCBvbiBJL08gY29tcGxldGlvbiwgcmUtc3VibWl0IGRpcnR5
IG5vZGVzIHRvIHdyaXRlICovCitzdGF0aWMgaW50IGZpbmlzaF9mcShmbHVzaF9xdWV1ZV90ICpm
cSwgaW50ICpucl9pb19lcnJvcnMpCit7CisJaW50IHJldDsKKwl0eG5fYXRvbSAqYXRvbSA9IGZx
LT5hdG9tOworCisJYXNzZXJ0KCJ6YW0tODAxIiwgYXRvbSAhPSBOVUxMKTsKKwlhc3NlcnRfc3Bp
bl9sb2NrZWQoJihhdG9tLT5hbG9jaykpOworCWFzc2VydCgiemFtLTc2MiIsIGZxX2luX3VzZShm
cSkpOworCisJcmV0ID0gd2FpdF9pbyhmcSwgbnJfaW9fZXJyb3JzKTsKKwlpZiAocmV0KQorCQly
ZXR1cm4gcmV0OworCisJZGV0YWNoX2ZxKGZxKTsKKwlkb25lX2ZxKGZxKTsKKworCXJlaXNlcjRf
YXRvbV9zZW5kX2V2ZW50KGF0b20pOworCisJcmV0dXJuIDA7Cit9CisKKy8qIHdhaXQgZm9yIGFs
bCBpL28gZm9yIGdpdmVuIGF0b20gdG8gYmUgY29tcGxldGVkLCBhY3R1YWxseSBkbyBvbmUgaXRl
cmF0aW9uCisgICBvbiB0aGF0IGFuZCByZXR1cm4gLUVfUkVQRUFUIGlmIHRoZXJlIG1vcmUgaXRl
cmF0aW9ucyBuZWVkZWQgKi8KK3N0YXRpYyBpbnQgZmluaXNoX2FsbF9mcSh0eG5fYXRvbSAqIGF0
b20sIGludCAqbnJfaW9fZXJyb3JzKQoreworCWZsdXNoX3F1ZXVlX3QgKmZxOworCisJYXNzZXJ0
X3NwaW5fbG9ja2VkKCYoYXRvbS0+YWxvY2spKTsKKworCWlmIChsaXN0X2VtcHR5X2NhcmVmdWwo
JmF0b20tPmZsdXNoX3F1ZXVlcykpCisJCXJldHVybiAwOworCisJbGlzdF9mb3JfZWFjaF9lbnRy
eShmcSwgJmF0b20tPmZsdXNoX3F1ZXVlcywgYWxpbmspIHsKKwkJaWYgKGZxX3JlYWR5KGZxKSkg
eworCQkJaW50IHJldDsKKworCQkJbWFya19mcV9pbl91c2UoZnEpOworCQkJYXNzZXJ0KCJ2cy0x
MjQ3IiwgZnEtPm93bmVyID09IE5VTEwpOworCQkJT05fREVCVUcoZnEtPm93bmVyID0gY3VycmVu
dCk7CisJCQlyZXQgPSBmaW5pc2hfZnEoZnEsIG5yX2lvX2Vycm9ycyk7CisKKwkJCWlmICgqbnJf
aW9fZXJyb3JzKQorCQkJCXJlaXNlcjRfaGFuZGxlX2Vycm9yKCk7CisKKwkJCWlmIChyZXQpIHsK
KwkJCQlyZWlzZXI0X2ZxX3B1dChmcSk7CisJCQkJcmV0dXJuIHJldDsKKwkJCX0KKworCQkJc3Bp
bl91bmxvY2tfYXRvbShhdG9tKTsKKworCQkJcmV0dXJuIC1FX1JFUEVBVDsKKwkJfQorCX0KKwor
CS8qIEFsbCBmbHVzaCBxdWV1ZXMgYXJlIGluIHVzZTsgYXRvbSByZW1haW5zIGxvY2tlZCAqLwor
CXJldHVybiAtRUJVU1k7Cit9CisKKy8qIHdhaXQgYWxsIGkvbyBmb3IgY3VycmVudCBhdG9tICov
CitpbnQgY3VycmVudF9hdG9tX2ZpbmlzaF9hbGxfZnEodm9pZCkKK3sKKwl0eG5fYXRvbSAqYXRv
bTsKKwlpbnQgbnJfaW9fZXJyb3JzID0gMDsKKwlpbnQgcmV0ID0gMDsKKworCWRvIHsKKwkJd2hp
bGUgKDEpIHsKKwkJCWF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCQkJcmV0ID0g
ZmluaXNoX2FsbF9mcShhdG9tLCAmbnJfaW9fZXJyb3JzKTsKKwkJCWlmIChyZXQgIT0gLUVCVVNZ
KQorCQkJCWJyZWFrOworCQkJcmVpc2VyNF9hdG9tX3dhaXRfZXZlbnQoYXRvbSk7CisJCX0KKwl9
IHdoaWxlIChyZXQgPT0gLUVfUkVQRUFUKTsKKworCS8qIHdlIGRvIG5vdCBuZWVkIGxvY2tlZCBh
dG9tIGFmdGVyIHRoaXMgZnVuY3Rpb24gZmluaXNoZXMsIFNVQ0NFU1Mgb3IKKwkgICAtRUJVU1kg
YXJlIHR3byByZXR1cm4gY29kZXMgd2hlbiBhdG9tIHJlbWFpbnMgbG9ja2VkIGFmdGVyCisJICAg
ZmluaXNoX2FsbF9mcSAqLworCWlmICghcmV0KQorCQlzcGluX3VubG9ja19hdG9tKGF0b20pOwor
CisJYXNzZXJ0X3NwaW5fbm90X2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisKKwlpZiAocmV0KQor
CQlyZXR1cm4gcmV0OworCisJaWYgKG5yX2lvX2Vycm9ycykKKwkJcmV0dXJuIFJFVEVSUigtRUlP
KTsKKworCXJldHVybiAwOworfQorCisvKiBjaGFuZ2Ugbm9kZS0+YXRvbSBmaWVsZCBmb3IgYWxs
IGpub2RlIGZyb20gZ2l2ZW4gbGlzdCAqLworc3RhdGljIHZvaWQKK3NjYW5fZnFfYW5kX3VwZGF0
ZV9hdG9tX3JlZihzdHJ1Y3QgbGlzdF9oZWFkICpsaXN0LCB0eG5fYXRvbSAqYXRvbSkKK3sKKwlq
bm9kZSAqY3VyOworCisJbGlzdF9mb3JfZWFjaF9lbnRyeShjdXIsIGxpc3QsIGNhcHR1cmVfbGlu
aykgeworCQlzcGluX2xvY2tfam5vZGUoY3VyKTsKKwkJY3VyLT5hdG9tID0gYXRvbTsKKwkJc3Bp
bl91bmxvY2tfam5vZGUoY3VyKTsKKwl9Cit9CisKKy8qIHN1cHBvcnQgZm9yIGF0b20gZnVzaW9u
IG9wZXJhdGlvbiAqLwordm9pZCByZWlzZXI0X2Z1c2VfZnEodHhuX2F0b20gKnRvLCB0eG5fYXRv
bSAqZnJvbSkKK3sKKwlmbHVzaF9xdWV1ZV90ICpmcTsKKworCWFzc2VydF9zcGluX2xvY2tlZCgm
KHRvLT5hbG9jaykpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGZyb20tPmFsb2NrKSk7CisKKwls
aXN0X2Zvcl9lYWNoX2VudHJ5KGZxLCAmZnJvbS0+Zmx1c2hfcXVldWVzLCBhbGluaykgeworCQlz
Y2FuX2ZxX2FuZF91cGRhdGVfYXRvbV9yZWYoQVRPTV9GUV9MSVNUKGZxKSwgdG8pOworCQlzcGlu
X2xvY2soJihmcS0+Z3VhcmQpKTsKKwkJZnEtPmF0b20gPSB0bzsKKwkJc3Bpbl91bmxvY2soJihm
cS0+Z3VhcmQpKTsKKwl9CisKKwlsaXN0X3NwbGljZV9pbml0KCZmcm9tLT5mbHVzaF9xdWV1ZXMs
IHRvLT5mbHVzaF9xdWV1ZXMucHJldik7CisKKyNpZiBSRUlTRVI0X0RFQlVHCisJdG8tPm51bV9x
dWV1ZWQgKz0gZnJvbS0+bnVtX3F1ZXVlZDsKKwl0by0+bnJfZmx1c2hfcXVldWVzICs9IGZyb20t
Pm5yX2ZsdXNoX3F1ZXVlczsKKwlmcm9tLT5ucl9mbHVzaF9xdWV1ZXMgPSAwOworI2VuZGlmCit9
CisKKyNpZiBSRUlTRVI0X0RFQlVHCitpbnQgYXRvbV9mcV9wYXJ0c19hcmVfY2xlYW4odHhuX2F0
b20gKiBhdG9tKQoreworCWFzc2VydCgiemFtLTkxNSIsIGF0b20gIT0gTlVMTCk7CisJcmV0dXJu
IGxpc3RfZW1wdHlfY2FyZWZ1bCgmYXRvbS0+Zmx1c2hfcXVldWVzKTsKK30KKyNlbmRpZgorCisv
KgorICogQmlvIGkvbyBjb21wbGV0aW9uIHJvdXRpbmUgZm9yIHJlaXNlcjQgd3JpdGUgb3BlcmF0
aW9ucworICovCitzdGF0aWMgdm9pZCBlbmRfaW9faGFuZGxlcihzdHJ1Y3QgYmlvICpiaW8pCit7
CisJaW50IG5yID0gMDsKKwlpbnQgbnJfZXJyb3JzID0gMDsKKwlmbHVzaF9xdWV1ZV90ICpmcTsK
KwlzdHJ1Y3QgYmlvX3ZlYyAqYnZlYzsKKwlzdHJ1Y3QgYnZlY19pdGVyX2FsbCBpdGVyX2FsbDsK
KworCWFzc2VydCgiemFtLTk1OCIsIGJpb19vcChiaW8pID09IFdSSVRFKTsKKworCS8qIHdlIGV4
cGVjdCB0aGF0IGJpby0+cHJpdmF0ZSBpcyBzZXQgdG8gTlVMTCBvciBmcSBvYmplY3Qgd2hpY2gg
aXMgdXNlZAorCSAqIGZvciBzeW5jaHJvbml6YXRpb24gYW5kIGVycm9yIGNvdW50aW5nLiAqLwor
CWZxID0gYmlvLT5iaV9wcml2YXRlOworCS8qIENoZWNrIGFsbCBlbGVtZW50cyBvZiBpb192ZWMg
Zm9yIGNvcnJlY3Qgd3JpdGUgY29tcGxldGlvbi4gKi8KKwliaW9fZm9yX2VhY2hfc2VnbWVudF9h
bGwoYnZlYywgYmlvLCBpdGVyX2FsbCkgeworCQlzdHJ1Y3QgcGFnZSAqcGcgPSBidmVjLT5idl9w
YWdlOworCisJCWlmIChiaW8tPmJpX3N0YXR1cykgeworCQkJU2V0UGFnZUVycm9yKHBnKTsKKwkJ
CW5yX2Vycm9ycysrOworCQl9CisKKwkJeworCQkJLyogam5vZGUgV1JJVEVCQUNLICgid3JpdGUg
aXMgaW4gcHJvZ3Jlc3MgYml0IikgaXMKKwkJCSAqIGF0b21pY2FsbHkgY2xlYXJlZCBoZXJlLiAq
LworCQkJam5vZGUgKm5vZGU7CisKKwkJCWFzc2VydCgiemFtLTczNiIsIHBnICE9IE5VTEwpOwor
CQkJYXNzZXJ0KCJ6YW0tNzM2IiwgUGFnZVByaXZhdGUocGcpKTsKKwkJCW5vZGUgPSBqcHJpdmF0
ZShwZyk7CisKKwkJCUpGX0NMUihub2RlLCBKTk9ERV9XUklURUJBQ0spOworCQl9CisJCW5yICsr
OworCQllbmRfcGFnZV93cml0ZWJhY2socGcpOworCQlwdXRfcGFnZShwZyk7CisJfQorCisJaWYg
KGZxKSB7CisJCS8qIGNvdW50IGkvbyBlcnJvciBpbiBmcSBvYmplY3QgKi8KKwkJYXRvbWljX2Fk
ZChucl9lcnJvcnMsICZmcS0+bnJfZXJyb3JzKTsKKworCQkvKiBJZiBhbGwgd3JpdGUgcmVxdWVz
dHMgcmVnaXN0ZXJlZCBpbiB0aGlzICJmcSIgYXJlIGRvbmUgd2UgdXAKKwkJICogdGhlIHdhaXRl
ci4gKi8KKwkJaWYgKGF0b21pY19zdWJfYW5kX3Rlc3QobnIsICZmcS0+bnJfc3VibWl0dGVkKSkK
KwkJCXdha2VfdXAoJmZxLT53YWl0KTsKKwl9CisKKwliaW9fcHV0KGJpbyk7Cit9CisKKy8qIENv
dW50IEkvTyByZXF1ZXN0cyB3aGljaCB3aWxsIGJlIHN1Ym1pdHRlZCBieSBAYmlvIGluIGdpdmVu
IGZsdXNoIHF1ZXVlcworICAgQGZxICovCit2b2lkIGFkZF9mcV90b19iaW8oZmx1c2hfcXVldWVf
dCAqZnEsIHN0cnVjdCBiaW8gKmJpbykKK3sKKwliaW8tPmJpX3ByaXZhdGUgPSBmcTsKKwliaW8t
PmJpX2VuZF9pbyA9IGVuZF9pb19oYW5kbGVyOworCisJaWYgKGZxKQorCQlhdG9taWNfYWRkKGJp
by0+YmlfaXRlci5iaV9zaXplID4+IFBBR0VfU0hJRlQsCisJCQkgICAmZnEtPm5yX3N1Ym1pdHRl
ZCk7Cit9CisKKy8qIE1vdmUgYWxsIHF1ZXVlZCBub2RlcyBvdXQgZnJvbSBAZnEtPnByZXBwZWQg
bGlzdC4gKi8KK3N0YXRpYyB2b2lkIHJlbGVhc2VfcHJlcHBlZF9saXN0KGZsdXNoX3F1ZXVlX3Qg
KmZxKQoreworCXR4bl9hdG9tICphdG9tOworCisJYXNzZXJ0KCJ6YW0tOTA0IiwgZnFfaW5fdXNl
KGZxKSk7CisJYXRvbSA9IGF0b21fbG9ja2VkX2J5X2ZxKGZxKTsKKworCXdoaWxlICghbGlzdF9l
bXB0eShBVE9NX0ZRX0xJU1QoZnEpKSkgeworCQlqbm9kZSAqY3VyOworCisJCWN1ciA9IGxpc3Rf
ZW50cnkoQVRPTV9GUV9MSVNUKGZxKS0+bmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJCWxp
c3RfZGVsX2luaXQoJmN1ci0+Y2FwdHVyZV9saW5rKTsKKworCQljb3VudF9kZXF1ZXVlZF9ub2Rl
KGZxKTsKKwkJc3Bpbl9sb2NrX2pub2RlKGN1cik7CisJCWFzc2VydCgibmlraXRhLTMxNTQiLCAh
SkZfSVNTRVQoY3VyLCBKTk9ERV9PVlJXUikpOworCQlhc3NlcnQoIm5pa2l0YS0zMTU0IiwgSkZf
SVNTRVQoY3VyLCBKTk9ERV9SRUxPQykpOworCQlhc3NlcnQoIm5pa2l0YS0zMTU0IiwgSkZfSVNT
RVQoY3VyLCBKTk9ERV9GTFVTSF9RVUVVRUQpKTsKKwkJSkZfQ0xSKGN1ciwgSk5PREVfRkxVU0hf
UVVFVUVEKTsKKworCQlpZiAoSkZfSVNTRVQoY3VyLCBKTk9ERV9ESVJUWSkpIHsKKwkJCWxpc3Rf
YWRkX3RhaWwoJmN1ci0+Y2FwdHVyZV9saW5rLAorCQkJCSAgICAgIEFUT01fRElSVFlfTElTVChh
dG9tLAorCQkJCQkJICAgICAgam5vZGVfZ2V0X2xldmVsKGN1cikpKTsKKwkJCU9OX0RFQlVHKGNv
dW50X2pub2RlKGF0b20sIGN1ciwgRlFfTElTVCwKKwkJCQkJICAgICBESVJUWV9MSVNULCAxKSk7
CisJCX0gZWxzZSB7CisJCQlsaXN0X2FkZF90YWlsKCZjdXItPmNhcHR1cmVfbGluaywKKwkJCQkg
ICAgICBBVE9NX0NMRUFOX0xJU1QoYXRvbSkpOworCQkJT05fREVCVUcoY291bnRfam5vZGUoYXRv
bSwgY3VyLCBGUV9MSVNULAorCQkJCQkgICAgIENMRUFOX0xJU1QsIDEpKTsKKwkJfQorCisJCXNw
aW5fdW5sb2NrX2pub2RlKGN1cik7CisJfQorCisJaWYgKC0tYXRvbS0+bnJfcnVubmluZ19xdWV1
ZXMgPT0gMCkKKwkJcmVpc2VyNF9hdG9tX3NlbmRfZXZlbnQoYXRvbSk7CisKKwlzcGluX3VubG9j
a19hdG9tKGF0b20pOworfQorCisvKiBTdWJtaXQgd3JpdGUgcmVxdWVzdHMgZm9yIG5vZGVzIG9u
IHRoZSBhbHJlYWR5IGZpbGxlZCBmbHVzaCBxdWV1ZSBAZnEuCisKKyAgIEBmcTogZmx1c2ggcXVl
dWUgb2JqZWN0IHdoaWNoIGNvbnRhaW5zIGpub2RlcyB3ZSBjYW4gKGFuZCB3aWxsKSB3cml0ZS4K
KyAgIEByZXR1cm46IG51bWJlciBvZiBzdWJtaXR0ZWQgYmxvY2tzICg+PTApIGlmIHN1Y2Nlc3Ms
IG90aGVyd2lzZSAtLSBhbiBlcnJvcgorCSAgICBjb2RlICg8MCkuICovCitpbnQgcmVpc2VyNF93
cml0ZV9mcShmbHVzaF9xdWV1ZV90ICpmcSwgbG9uZyAqbnJfc3VibWl0dGVkLCBpbnQgZmxhZ3Mp
Cit7CisJaW50IHJldDsKKwl0eG5fYXRvbSAqYXRvbTsKKworCXdoaWxlICgxKSB7CisJCWF0b20g
PSBhdG9tX2xvY2tlZF9ieV9mcShmcSk7CisJCWFzc2VydCgiemFtLTkyNCIsIGF0b20pOworCQkv
KiBkbyBub3Qgd3JpdGUgZnEgaW4gcGFyYWxsZWwuICovCisJCWlmIChhdG9tLT5ucl9ydW5uaW5n
X3F1ZXVlcyA9PSAwCisJCSAgICB8fCAhKGZsYWdzICYgV1JJVEVPVVRfU0lOR0xFX1NUUkVBTSkp
CisJCQlicmVhazsKKwkJcmVpc2VyNF9hdG9tX3dhaXRfZXZlbnQoYXRvbSk7CisJfQorCisJYXRv
bS0+bnJfcnVubmluZ19xdWV1ZXMrKzsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworCisJcmV0
ID0gd3JpdGVfam5vZGVfbGlzdChBVE9NX0ZRX0xJU1QoZnEpLCBmcSwgbnJfc3VibWl0dGVkLCBm
bGFncyk7CisJcmVsZWFzZV9wcmVwcGVkX2xpc3QoZnEpOworCisJcmV0dXJuIHJldDsKK30KKwor
LyogR2V0dGluZyBmbHVzaCBxdWV1ZSBvYmplY3QgZm9yIGV4Y2x1c2l2ZSB1c2UgYnkgb25lIHRo
cmVhZC4gTWF5IHJlcXVpcmUKKyAgIHNldmVyYWwgaXRlcmF0aW9ucyB3aGljaCBpcyBpbmRpY2F0
ZWQgYnkgLUVfUkVQRUFUIHJldHVybiBjb2RlLgorCisgICBUaGlzIGZ1bmN0aW9uIGRvZXMgbm90
IGNvbnRhaW4gY29kZSBmb3Igb2J0YWluaW5nIGFuIGF0b20gbG9jayBiZWNhdXNlIGFuCisgICBh
dG9tIGxvY2sgaXMgb2J0YWluZWQgYnkgZGlmZmVyZW50IHdheXMgaW4gZGlmZmVyZW50IHBhcnRz
IG9mIHJlaXNlcjQsCisgICB1c3VhbGx5IGl0IGlzIGN1cnJlbnQgYXRvbSwgYnV0IHdlIG5lZWQg
YSBwb3NzaWJpbGl0eSBmb3IgZ2V0dGluZyBmcSBmb3IgdGhlCisgICBhdG9tIG9mIGdpdmVuIGpu
b2RlLiAqLworc3RhdGljIGludCBmcV9ieV9hdG9tX2dmcCh0eG5fYXRvbSAqYXRvbSwgZmx1c2hf
cXVldWVfdCAqKm5ld19mcSwgZ2ZwX3QgZ2ZwKQoreworCWZsdXNoX3F1ZXVlX3QgKmZxOworCisJ
YXNzZXJ0X3NwaW5fbG9ja2VkKCYoYXRvbS0+YWxvY2spKTsKKworCWZxID0gbGlzdF9lbnRyeShh
dG9tLT5mbHVzaF9xdWV1ZXMubmV4dCwgZmx1c2hfcXVldWVfdCwgYWxpbmspOworCXdoaWxlICgm
YXRvbS0+Zmx1c2hfcXVldWVzICE9ICZmcS0+YWxpbmspIHsKKwkJc3Bpbl9sb2NrKCYoZnEtPmd1
YXJkKSk7CisKKwkJaWYgKGZxX3JlYWR5KGZxKSkgeworCQkJbWFya19mcV9pbl91c2UoZnEpOwor
CQkJYXNzZXJ0KCJ2cy0xMjQ2IiwgZnEtPm93bmVyID09IE5VTEwpOworCQkJT05fREVCVUcoZnEt
Pm93bmVyID0gY3VycmVudCk7CisJCQlzcGluX3VubG9jaygmKGZxLT5ndWFyZCkpOworCisJCQlp
ZiAoKm5ld19mcSkKKwkJCQlkb25lX2ZxKCpuZXdfZnEpOworCisJCQkqbmV3X2ZxID0gZnE7CisK
KwkJCXJldHVybiAwOworCQl9CisKKwkJc3Bpbl91bmxvY2soJihmcS0+Z3VhcmQpKTsKKworCQlm
cSA9IGxpc3RfZW50cnkoZnEtPmFsaW5rLm5leHQsIGZsdXNoX3F1ZXVlX3QsIGFsaW5rKTsKKwl9
CisKKwkvKiBVc2UgcHJldmlvdXNseSBhbGxvY2F0ZWQgZnEgb2JqZWN0ICovCisJaWYgKCpuZXdf
ZnEpIHsKKwkJbWFya19mcV9pbl91c2UoKm5ld19mcSk7CisJCWFzc2VydCgidnMtMTI0OCIsICgq
bmV3X2ZxKS0+b3duZXIgPT0gMCk7CisJCU9OX0RFQlVHKCgqbmV3X2ZxKS0+b3duZXIgPSBjdXJy
ZW50KTsKKwkJYXR0YWNoX2ZxKGF0b20sICpuZXdfZnEpOworCisJCXJldHVybiAwOworCX0KKwor
CXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisKKwkqbmV3X2ZxID0gY3JlYXRlX2ZxKGdmcCk7CisK
KwlpZiAoKm5ld19mcSA9PSBOVUxMKQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJcmV0
dXJuIFJFVEVSUigtRV9SRVBFQVQpOworfQorCitpbnQgcmVpc2VyNF9mcV9ieV9hdG9tKHR4bl9h
dG9tICogYXRvbSwgZmx1c2hfcXVldWVfdCAqKm5ld19mcSkKK3sKKwlyZXR1cm4gZnFfYnlfYXRv
bV9nZnAoYXRvbSwgbmV3X2ZxLCByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7Cit9CisKKy8q
IEEgd3JhcHBlciBhcm91bmQgcmVpc2VyNF9mcV9ieV9hdG9tIGZvciBnZXR0aW5nIGEgZmx1c2gg
cXVldWUKKyAgIG9iamVjdCBmb3IgY3VycmVudCBhdG9tLCBpZiBzdWNjZXNzIGZxLT5hdG9tIHJl
bWFpbnMgbG9ja2VkLiAqLworZmx1c2hfcXVldWVfdCAqZ2V0X2ZxX2Zvcl9jdXJyZW50X2F0b20o
dm9pZCkKK3sKKwlmbHVzaF9xdWV1ZV90ICpmcSA9IE5VTEw7CisJdHhuX2F0b20gKmF0b207CisJ
aW50IHJldDsKKworCWRvIHsKKwkJYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkKCk7CisJ
CXJldCA9IHJlaXNlcjRfZnFfYnlfYXRvbShhdG9tLCAmZnEpOworCX0gd2hpbGUgKHJldCA9PSAt
RV9SRVBFQVQpOworCisJaWYgKHJldCkKKwkJcmV0dXJuIEVSUl9QVFIocmV0KTsKKwlyZXR1cm4g
ZnE7Cit9CisKKy8qIFJlbGVhc2luZyBmbHVzaCBxdWV1ZSBvYmplY3QgYWZ0ZXIgZXhjbHVzaXZl
IHVzZSAqLwordm9pZCByZWlzZXI0X2ZxX3B1dF9ub2xvY2soZmx1c2hfcXVldWVfdCAqZnEpCit7
CisJYXNzZXJ0KCJ6YW0tNzQ3IiwgZnEtPmF0b20gIT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tOTAy
IiwgbGlzdF9lbXB0eV9jYXJlZnVsKEFUT01fRlFfTElTVChmcSkpKTsKKwltYXJrX2ZxX3JlYWR5
KGZxKTsKKwlhc3NlcnQoInZzLTEyNDUiLCBmcS0+b3duZXIgPT0gY3VycmVudCk7CisJT05fREVC
VUcoZnEtPm93bmVyID0gTlVMTCk7Cit9CisKK3ZvaWQgcmVpc2VyNF9mcV9wdXQoZmx1c2hfcXVl
dWVfdCAqZnEpCit7CisJdHhuX2F0b20gKmF0b207CisKKwlzcGluX2xvY2soJihmcS0+Z3VhcmQp
KTsKKwlhdG9tID0gYXRvbV9sb2NrZWRfYnlfZnFfbm9sb2NrKGZxKTsKKworCWFzc2VydCgiemFt
LTc0NiIsIGF0b20gIT0gTlVMTCk7CisKKwlyZWlzZXI0X2ZxX3B1dF9ub2xvY2soZnEpOworCXJl
aXNlcjRfYXRvbV9zZW5kX2V2ZW50KGF0b20pOworCisJc3Bpbl91bmxvY2soJihmcS0+Z3VhcmQp
KTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworfQorCisvKiBBIHBhcnQgb2YgYXRvbSBvYmpl
Y3QgaW5pdGlhbGl6YXRpb24gcmVsYXRlZCB0byB0aGUgZW1iZWRkZWQgZmx1c2ggcXVldWUKKyAg
IGxpc3QgaGVhZCAqLworCit2b2lkIGluaXRfYXRvbV9mcV9wYXJ0cyh0eG5fYXRvbSAqYXRvbSkK
K3sKKwlJTklUX0xJU1RfSEVBRCgmYXRvbS0+Zmx1c2hfcXVldWVzKTsKK30KKworI2lmIFJFSVNF
UjRfREVCVUcKKwordm9pZCByZWlzZXI0X2NoZWNrX2ZxKGNvbnN0IHR4bl9hdG9tICphdG9tKQor
eworCS8qIGNoZWNrIG51bWJlciBvZiBub2RlcyBvbiBhbGwgYXRvbSdzIGZsdXNoIHF1ZXVlcyAq
LworCWZsdXNoX3F1ZXVlX3QgKmZxOworCWludCBjb3VudDsKKwlzdHJ1Y3QgbGlzdF9oZWFkICpw
b3M7CisKKwljb3VudCA9IDA7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShmcSwgJmF0b20tPmZsdXNo
X3F1ZXVlcywgYWxpbmspIHsKKwkJc3Bpbl9sb2NrKCYoZnEtPmd1YXJkKSk7CisJCS8qIGNhbGN1
bGF0ZSBudW1iZXIgb2Ygam5vZGVzIG9uIGZxJyBsaXN0IG9mIHByZXBwZWQgam5vZGVzICovCisJ
CWxpc3RfZm9yX2VhY2gocG9zLCBBVE9NX0ZRX0xJU1QoZnEpKQorCQkJY291bnQrKzsKKwkJc3Bp
bl91bmxvY2soJihmcS0+Z3VhcmQpKTsKKwl9CisJaWYgKGNvdW50ICE9IGF0b20tPmZxKQorCQl3
YXJuaW5nKCIiLCAiZnEgY291bnRlciAlZCwgcmVhbCAlZFxuIiwgYXRvbS0+ZnEsIGNvdW50KTsK
KworfQorCisjZW5kaWYKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRp
b24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4
CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEK
KyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3Jp
Zy9mcy9yZWlzZXI0L2ZvcndhcmQuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9mb3J3YXJkLmgK
LS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvZm9yd2FyZC5oCTE5NzAtMDEtMDEgMDE6
MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9mb3J3YXJk
LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTIyMjIxNjkgKzAxMDAKQEAgLTAsMCArMSwyNTkgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIEZvcndhcmQgZGVjbGFyYXRp
b25zLiBUaGFuayB5b3UgS2VybmlnaGFuLiAqLworCisjaWYgIWRlZmluZWQoX19SRUlTRVI0X0ZP
UldBUkRfSF9fKQorI2RlZmluZSBfX1JFSVNFUjRfRk9SV0FSRF9IX18KKworI2luY2x1ZGUgPGFz
bS9lcnJuby5oPgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKK3R5cGVkZWYgc3RydWN0IHps
b2NrIHpsb2NrOwordHlwZWRlZiBzdHJ1Y3QgbG9ja19zdGFjayBsb2NrX3N0YWNrOwordHlwZWRl
ZiBzdHJ1Y3QgbG9ja19oYW5kbGUgbG9ja19oYW5kbGU7Cit0eXBlZGVmIHN0cnVjdCB6bm9kZSB6
bm9kZTsKK3R5cGVkZWYgc3RydWN0IGZsb3cgZmxvd190OwordHlwZWRlZiBzdHJ1Y3QgY29vcmQg
Y29vcmRfdDsKK3R5cGVkZWYgc3RydWN0IHRyZWVfYWNjZXNzX3BvaW50ZXIgdGFwX3Q7Cit0eXBl
ZGVmIHN0cnVjdCByZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSByZWlzZXI0X29iamVjdF9jcmVh
dGVfZGF0YTsKK3R5cGVkZWYgdW5pb24gcmVpc2VyNF9wbHVnaW4gcmVpc2VyNF9wbHVnaW47Cit0
eXBlZGVmIF9fdTE2IHJlaXNlcjRfcGx1Z2luX2lkOwordHlwZWRlZiBfX3U2NCByZWlzZXI0X3Bs
dWdpbl9ncm91cHM7Cit0eXBlZGVmIHN0cnVjdCBpdGVtX3BsdWdpbiBpdGVtX3BsdWdpbjsKK3R5
cGVkZWYgc3RydWN0IGpub2RlX3BsdWdpbiBqbm9kZV9wbHVnaW47Cit0eXBlZGVmIHN0cnVjdCBy
ZWlzZXI0X2l0ZW1fZGF0YSByZWlzZXI0X2l0ZW1fZGF0YTsKK3R5cGVkZWYgdW5pb24gcmVpc2Vy
NF9rZXkgcmVpc2VyNF9rZXk7Cit0eXBlZGVmIHN0cnVjdCByZWlzZXI0X3RyZWUgcmVpc2VyNF90
cmVlOwordHlwZWRlZiBzdHJ1Y3QgY2FycnlfY3V0X2RhdGEgY2FycnlfY3V0X2RhdGE7Cit0eXBl
ZGVmIHN0cnVjdCBjYXJyeV9raWxsX2RhdGEgY2Fycnlfa2lsbF9kYXRhOwordHlwZWRlZiBzdHJ1
Y3QgY2FycnlfdHJlZV9vcCBjYXJyeV90cmVlX29wOwordHlwZWRlZiBzdHJ1Y3QgY2FycnlfdHJl
ZV9ub2RlIGNhcnJ5X3RyZWVfbm9kZTsKK3R5cGVkZWYgc3RydWN0IGNhcnJ5X3BsdWdpbl9pbmZv
IGNhcnJ5X3BsdWdpbl9pbmZvOwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9qb3VybmFsIHJlaXNl
cjRfam91cm5hbDsKK3R5cGVkZWYgc3RydWN0IHR4bl9hdG9tIHR4bl9hdG9tOwordHlwZWRlZiBz
dHJ1Y3QgdHhuX2hhbmRsZSB0eG5faGFuZGxlOwordHlwZWRlZiBzdHJ1Y3QgdHhuX21nciB0eG5f
bWdyOwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyByZWlzZXI0X2Rpcl9l
bnRyeV9kZXNjOwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9jb250ZXh0IHJlaXNlcjRfY29udGV4
dDsKK3R5cGVkZWYgc3RydWN0IGNhcnJ5X2xldmVsIGNhcnJ5X2xldmVsOwordHlwZWRlZiBzdHJ1
Y3QgYmxvY2tucl9zZXRfZW50cnkgYmxvY2tucl9zZXRfZW50cnk7Cit0eXBlZGVmIHN0cnVjdCBi
bG9ja25yX2xpc3RfZW50cnkgYmxvY2tucl9saXN0X2VudHJ5OworLyogc3VwZXJfYmxvY2stPnNf
ZnNfaW5mbyBwb2ludHMgdG8gdGhpcyAqLwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9zdXBlcl9p
bmZvX2RhdGEgcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGE7CisvKiBuZXh0IHR3byBvYmplY3RzIGFy
ZSBmaWVsZHMgb2YgcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKi8KK3R5cGVkZWYgc3RydWN0IHJl
aXNlcjRfb2lkX2FsbG9jYXRvciByZWlzZXI0X29pZF9hbGxvY2F0b3I7Cit0eXBlZGVmIHN0cnVj
dCByZWlzZXI0X3NwYWNlX2FsbG9jYXRvciByZWlzZXI0X3NwYWNlX2FsbG9jYXRvcjsKKwordHlw
ZWRlZiBzdHJ1Y3QgZmx1c2hfc2NhbiBmbHVzaF9zY2FuOwordHlwZWRlZiBzdHJ1Y3QgZmx1c2hf
cG9zaXRpb24gZmx1c2hfcG9zX3Q7CisKK3R5cGVkZWYgdW5zaWduZWQgc2hvcnQgcG9zX2luX25v
ZGVfdDsKKyNkZWZpbmUgTUFYX1BPU19JTl9OT0RFIDY1NTM1CisKK3R5cGVkZWYgc3RydWN0IGpu
b2RlIGpub2RlOwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9ibG9ja25yX2hpbnQgcmVpc2VyNF9i
bG9ja25yX2hpbnQ7CisKK3R5cGVkZWYgc3RydWN0IHVmX2Nvb3JkIHVmX2Nvb3JkX3Q7Cit0eXBl
ZGVmIHN0cnVjdCBoaW50IGhpbnRfdDsKKwordHlwZWRlZiBzdHJ1Y3Qga3R4bm1ncmRfY29udGV4
dCBrdHhubWdyZF9jb250ZXh0OworCitzdHJ1Y3QgaW5vZGU7CitzdHJ1Y3QgcGFnZTsKK3N0cnVj
dCBmaWxlOworc3RydWN0IGRlbnRyeTsKK3N0cnVjdCBzdXBlcl9ibG9jazsKKworLyogcmV0dXJu
IHZhbHVlcyBvZiBjb29yZF9ieV9rZXkoKS4gY2JrID09IGNvb3JkX2J5X2tleSAqLwordHlwZWRl
ZiBlbnVtIHsKKwlDQktfQ09PUkRfRk9VTkQgPSAwLAorCUNCS19DT09SRF9OT1RGT1VORCA9IC1F
Tk9FTlQsCit9IGxvb2t1cF9yZXN1bHQ7CisKKy8qIHJlc3VsdHMgb2YgbG9va3VwIHdpdGggZGly
ZWN0b3J5IGZpbGUgKi8KK3R5cGVkZWYgZW51bSB7CisJRklMRV9OQU1FX0ZPVU5EID0gMCwKKwlG
SUxFX05BTUVfTk9URk9VTkQgPSAtRU5PRU5ULAorCUZJTEVfSU9fRVJST1IgPSAtRUlPLAkvKiBG
SVhNRTogaXQgc2VlbXMgc2lsbHkgdG8gaGF2ZSBzcGVjaWFsIE9PTSwKKwkJCQkgICBJT19FUlJP
UiByZXR1cm4gY29kZXMgZm9yIGVhY2ggc2VhcmNoLiAqLworCUZJTEVfT09NID0gLUVOT01FTQkv
KiBGSVhNRTogaXQgc2VlbXMgc2lsbHkgdG8gaGF2ZSBzcGVjaWFsIE9PTSwKKwkJCQkgICBJT19F
UlJPUiByZXR1cm4gY29kZXMgZm9yIGVhY2ggc2VhcmNoLiAqLworfSBmaWxlX2xvb2t1cF9yZXN1
bHQ7CisKKy8qIGJlaGF2aW9ycyBvZiBsb29rdXAuIElmIGNvb3JkIHdlIGFyZSBsb29raW5nIGZv
ciBpcyBhY3R1YWxseSBpbiBhIHRyZWUsCisgICAgYm90aCBjb2luY2lkZS4gKi8KK3R5cGVkZWYg
ZW51bSB7CisJLyogc2VhcmNoIGV4YWN0bHkgZm9yIHRoZSBjb29yZCB3aXRoIGtleSBnaXZlbiAq
LworCUZJTkRfRVhBQ1QsCisJLyogc2VhcmNoIGZvciBjb29yZCB3aXRoIHRoZSBtYXhpbWFsIGtl
eSBub3QgZ3JlYXRlciB0aGFuIG9uZQorCSAgIGdpdmVuICovCisJRklORF9NQVhfTk9UX01PUkVf
VEhBTgkvKkxFRlRfU0xBTlRfQklBUyAqLworfSBsb29rdXBfYmlhczsKKwordHlwZWRlZiBlbnVt
IHsKKwkvKiBudW1iZXIgb2YgbGVhZiBsZXZlbCBvZiB0aGUgdHJlZQorCSAgIFRoZSBmYWtlIHJv
b3QgaGFzICh0cmVlX2xldmVsPTApLiAqLworCUxFQUZfTEVWRUwgPSAxLAorCisJLyogbnVtYmVy
IG9mIGxldmVsIG9uZSBhYm92ZSBsZWFmIGxldmVsIG9mIHRoZSB0cmVlLgorCisJICAgSXQgaXMg
c3VwcG9zZWQgdGhhdCBpbnRlcm5hbCB0cmVlIHVzZWQgYnkgcmVpc2VyNCB0byBzdG9yZSBmaWxl
CisJICAgc3lzdGVtIGRhdGEgYW5kIG1ldGEgZGF0YSB3aWxsIGhhdmUgaGVpZ2h0IDIgaW5pdGlh
bGx5ICh3aGVuCisJICAgY3JlYXRlZCBieSBta2ZzKS4KKwkgKi8KKwlUV0lHX0xFVkVMID0gMiwK
K30gdHJlZV9sZXZlbDsKKworLyogVGhlICJyZWFsIiBtYXhpbXVtIHp0cmVlIGhlaWdodCBpcyB0
aGUgMC1vcmlnaW4gc2l6ZSBvZiBhbnkgcGVyLWxldmVsCisgICBhcnJheSwgc2luY2UgdGhlIHpl
cm8ndGggbGV2ZWwgaXMgbm90IHVzZWQuICovCisjZGVmaW5lIFJFQUxfTUFYX1pUUkVFX0hFSUdI
VCAgICAgKFJFSVNFUjRfTUFYX1pUUkVFX0hFSUdIVC1MRUFGX0xFVkVMKQorCisvKiBlbnVtZXJh
dGlvbiBvZiBwb3NzaWJsZSBtdXR1YWwgcG9zaXRpb24gb2YgaXRlbSBhbmQgY29vcmQuICBUaGlz
IGVudW0gaXMKKyAgICByZXR1cm4gdHlwZSBvZiAtPmlzX2luX2l0ZW0oKSBpdGVtIHBsdWdpbiBt
ZXRob2Qgd2hpY2ggc2VlLiAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBjb29yZCBpcyBvbiB0aGUg
bGVmdCBvZiBhbiBpdGVtICovCisJSVBfT05fVEhFX0xFRlQsCisJLyogY29vcmQgaXMgaW5zaWRl
IGl0ZW0gKi8KKwlJUF9JTlNJREUsCisJLyogY29vcmQgaXMgaW5zaWRlIGl0ZW0sIGJ1dCB0byB0
aGUgcmlnaHQgb2YgdGhlIHJpZ2h0bW9zdCB1bml0IG9mCisJICAgdGhpcyBpdGVtICovCisJSVBf
UklHSFRfRURHRSwKKwkvKiBjb29yZCBpcyBvbiB0aGUgcmlnaHQgb2YgYW4gaXRlbSAqLworCUlQ
X09OX1RIRV9SSUdIVAorfSBpbnRlcnBvc2l0aW9uOworCisvKiB0eXBlIG9mIGxvY2sgdG8gYWNx
dWlyZSBvbiB6bm9kZSBiZWZvcmUgcmV0dXJuaW5nIGl0IHRvIGNhbGxlciAqLwordHlwZWRlZiBl
bnVtIHsKKwlaTk9ERV9OT19MT0NLID0gMCwKKwlaTk9ERV9SRUFEX0xPQ0sgPSAxLAorCVpOT0RF
X1dSSVRFX0xPQ0sgPSAyLAorfSB6bm9kZV9sb2NrX21vZGU7CisKKy8qIHR5cGUgb2YgbG9jayBy
ZXF1ZXN0ICovCit0eXBlZGVmIGVudW0geworCVpOT0RFX0xPQ0tfTE9QUkkgPSAwLAorCVpOT0RF
X0xPQ0tfSElQUkkgPSAoMSA8PCAwKSwKKworCS8qIEJ5IHNldHRpbmcgdGhlIFpOT0RFX0xPQ0tf
Tk9OQkxPQ0sgZmxhZyBpbiBhIGxvY2sgcmVxdWVzdCB0aGUgY2FsbCB0bworCSAgIGxvbmd0ZXJt
X2xvY2tfem5vZGUgd2lsbCBub3Qgc2xlZXAgd2FpdGluZyBmb3IgdGhlIGxvY2sgdG8gYmVjb21l
CisJICAgYXZhaWxhYmxlLiAgSWYgdGhlIGxvY2sgaXMgdW5hdmFpbGFibGUsIHJlaXNlcjRfem5v
ZGVfbG9jayB3aWxsCisJICAgaW1tZWRpYXRlbHkgcmV0dXJuIHRoZSB2YWx1ZSAtRV9SRVBFQVQu
ICovCisJWk5PREVfTE9DS19OT05CTE9DSyA9ICgxIDw8IDEpLAorCS8qIEFuIG9wdGlvbiBmb3Ig
bG9uZ3Rlcm1fbG9ja196bm9kZSB3aGljaCBwcmV2ZW50cyBhdG9tIGZ1c2lvbiAqLworCVpOT0RF
X0xPQ0tfRE9OVF9GVVNFID0gKDEgPDwgMikKK30gem5vZGVfbG9ja19yZXF1ZXN0OworCit0eXBl
ZGVmIGVudW0geyBSRUFEX09QID0gMCwgV1JJVEVfT1AgPSAxIH0gcndfb3A7CisKKy8qIHVzZWQg
dG8gc3BlY2lmeSBkaXJlY3Rpb24gb2Ygc2hpZnQuIFRoZXNlIG11c3QgYmUgLTEgYW5kIDEgKi8K
K3R5cGVkZWYgZW51bSB7CisJU0hJRlRfTEVGVCA9IDEsCisJU0hJRlRfUklHSFQgPSAtMQorfSBz
aGlmdF9kaXJlY3Rpb247CisKK3R5cGVkZWYgZW51bSB7CisJTEVGVF9TSURFLAorCVJJR0hUX1NJ
REUKK30gc2lkZW9mOworCisjZGVmaW5lIHJlaXNlcjRfcm91bmRfdXAodmFsdWUsIG9yZGVyKQkJ
CQlcCisJKCh0eXBlb2YodmFsdWUpKSgoKGxvbmcpICh2YWx1ZSkgKyAob3JkZXIpIC0gMVUpICYJ
XAorCQkJIH4oKG9yZGVyKSAtIDEpKSkKKworLyogdmFsdWVzIHJldHVybmVkIGJ5IHNxdWFsbG9j
X3JpZ2h0X25laWdoYm9yIGFuZCBpdHMgYXV4aWxpYXJ5IGZ1bmN0aW9ucyAqLwordHlwZWRlZiBl
bnVtIHsKKwkvKiB1bml0IG9mIGludGVybmFsIGl0ZW0gaXMgbW92ZWQgKi8KKwlTVUJUUkVFX01P
VkVEID0gMCwKKwkvKiBub3RoaW5nIGVsc2UgY2FuIGJlIHNxdWVlemVkIGludG8gbGVmdCBuZWln
aGJvciAqLworCVNRVUVFWkVfVEFSR0VUX0ZVTEwgPSAxLAorCS8qIGFsbCBjb250ZW50IG9mIG5v
ZGUgaXMgc3F1ZWV6ZWQgaW50byBpdHMgbGVmdCBuZWlnaGJvciAqLworCVNRVUVFWkVfU09VUkNF
X0VNUFRZID0gMiwKKwkvKiBvbmUgbW9yZSBpdGVtIGlzIGNvcGllZCAodGhpcyBpcyBvbmx5IHJl
dHVybmVkIGJ5CisJICAgYWxsb2NhdGVfYW5kX2NvcHlfZXh0ZW50IHRvIHNxdWFsbG9jX3R3aWcp
KSAqLworCVNRVUVFWkVfQ09OVElOVUUgPSAzCit9IHNxdWVlemVfcmVzdWx0OworCisvKiBEbyBu
b3QgY2hhbmdlIGl0ZW1zIGlkcy4gSWYgeW91IGRvIC0gdGhlcmUgd2lsbCBiZSBmb3JtYXQgY2hh
bmdlICovCit0eXBlZGVmIGVudW0geworCVNUQVRJQ19TVEFUX0RBVEFfSUQgPSAweDAsCisJU0lN
UExFX0RJUl9FTlRSWV9JRCA9IDB4MSwKKwlDT01QT1VORF9ESVJfSUQgPSAweDIsCisJTk9ERV9Q
T0lOVEVSX0lEID0gMHgzLAorCUVYVEVOVF9QT0lOVEVSX0lEID0gMHg1LAorCUZPUk1BVFRJTkdf
SUQgPSAweDYsCisJQ1RBSUxfSUQgPSAweDcsCisJQkxBQ0tfQk9YX0lEID0gMHg4LAorCUxBU1Rf
SVRFTV9JRCA9IDB4OQorfSBpdGVtX2lkOworCisvKiBGbGFncyBwYXNzZWQgdG8gam5vZGVfZmx1
c2goKSB0byBhbGxvdyBpdCB0byBkaXN0aW5ndWlzaCBkZWZhdWx0IHNldHRpbmdzCisgICBiYXNl
ZCBvbiB3aGV0aGVyIGNvbW1pdCgpIHdhcyBjYWxsZWQgb3IgVk0gbWVtb3J5IHByZXNzdXJlIHdh
cyBhcHBsaWVkLiAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBzdWJtaXQgZmx1c2ggcXVldWUgdG8g
ZGlzayBhdCBqbm9kZV9mbHVzaCBjb21wbGV0aW9uICovCisJSk5PREVfRkxVU0hfV1JJVEVfQkxP
Q0tTID0gMSwKKworCS8qIGZsdXNoIGlzIGNhbGxlZCBmb3IgY29tbWl0ICovCisJSk5PREVfRkxV
U0hfQ09NTUlUID0gMiwKKwkvKiBub3QgaW1wbGVtZW50ZWQgKi8KKwlKTk9ERV9GTFVTSF9NRU1P
UllfRk9STUFUVEVEID0gNCwKKworCS8qIG5vdCBpbXBsZW1lbnRlZCAqLworCUpOT0RFX0ZMVVNI
X01FTU9SWV9VTkZPUk1BVFRFRCA9IDgsCit9IGpub2RlX2ZsdXNoX2ZsYWdzOworCisvKiBGbGFn
cyB0byBpbnNlcnQvcGFzdGUgY2Fycnkgb3BlcmF0aW9ucy4gQ3VycmVudGx5IHRoZXkgb25seSB1
c2VkIGluCisgICBmbHVzaGluZyBjb2RlLCBidXQgaW4gZnV0dXJlLCB0aGV5IGNhbiBiZSB1c2Vk
IHRvIG9wdGltaXplIGZvciByZXBldGl0aXZlCisgICBhY2Nlc3Nlcy4gICovCit0eXBlZGVmIGVu
dW0geworCS8qIGNhcnJ5IGlzIG5vdCBhbGxvd2VkIHRvIHNoaWZ0IGRhdGEgdG8gdGhlIGxlZnQg
d2hlbiB0cnlpbmcgdG8gZmluZAorCSAgIGZyZWUgc3BhY2UgICovCisJQ09QSV9ET05UX1NISUZU
X0xFRlQgPSAoMSA8PCAwKSwKKwkvKiBjYXJyeSBpcyBub3QgYWxsb3dlZCB0byBzaGlmdCBkYXRh
IHRvIHRoZSByaWdodCB3aGVuIHRyeWluZyB0byBmaW5kCisJICAgZnJlZSBzcGFjZSAgKi8KKwlD
T1BJX0RPTlRfU0hJRlRfUklHSFQgPSAoMSA8PCAxKSwKKwkvKiBjYXJyeSBpcyBub3QgYWxsb3dl
ZCB0byBhbGxvY2F0ZSBuZXcgbm9kZShzKSB3aGVuIHRyeWluZyB0byBmaW5kCisJICAgZnJlZSBz
cGFjZSAqLworCUNPUElfRE9OVF9BTExPQ0FURSA9ICgxIDw8IDIpLAorCS8qIHRyeSB0byBsb2Fk
IGxlZnQgbmVpZ2hib3IgaWYgaXRzIG5vdCBpbiBhIGNhY2hlICovCisJQ09QSV9MT0FEX0xFRlQg
PSAoMSA8PCAzKSwKKwkvKiB0cnkgdG8gbG9hZCByaWdodCBuZWlnaGJvciBpZiBpdHMgbm90IGlu
IGEgY2FjaGUgKi8KKwlDT1BJX0xPQURfUklHSFQgPSAoMSA8PCA0KSwKKwkvKiBzaGlmdCBpbnNl
cnRpb24gcG9pbnQgdG8gdGhlIGxlZnQgbmVpZ2hib3IgKi8KKwlDT1BJX0dPX0xFRlQgPSAoMSA8
PCA1KSwKKwkvKiBzaGlmdCBpbnNlcnRpb24gcG9pbnQgdG8gdGhlIHJpZ2h0IG5laWdoYm9yICov
CisJQ09QSV9HT19SSUdIVCA9ICgxIDw8IDYpLAorCS8qIHRyeSB0byBzdGVwIGJhY2sgaW50byBv
cmlnaW5hbCBub2RlIGlmIGluc2VydGlvbiBpbnRvIG5ldyBub2RlCisJICAgZmFpbHMgYWZ0ZXIg
c2hpZnRpbmcgZGF0YSB0aGVyZS4gKi8KKwlDT1BJX1NURVBfQkFDSyA9ICgxIDw8IDcpLAorCS8q
IHVzZSBhbGwgcG9zc2libGUgc3BhY2UgaW4gdGhlIG5vZGUgKi8KKwlDT1BJX1NXRUVQID0gKDEg
PDwgOCkKK30gY29wX2luc2VydF9mbGFnOworCit0eXBlZGVmIGVudW0geworCVNBRkVfVU5MSU5L
LAkJLyogc2FmZS1saW5rIGZvciB1bmxpbmsgKi8KKwlTQUZFX1RSVU5DQVRFCQkvKiBzYWZlLWxp
bmsgZm9yIHRydW5jYXRlICovCit9IHJlaXNlcjRfc2FmZV9saW5rX3Q7CisKKy8qIHRoaXMgaXMg
dG8gc2hvdyBvbiB3aGljaCBsaXN0IG9mIGF0b20gam5vZGUgaXMgKi8KK3R5cGVkZWYgZW51bSB7
CisJTk9UX0NBUFRVUkVELAorCURJUlRZX0xJU1QsCisJQ0xFQU5fTElTVCwKKwlGUV9MSVNULAor
CVdCX0xJU1QsCisJT1ZSV1JfTElTVAorfSBhdG9tX2xpc3Q7CisKKy8qIF9fUkVJU0VSNF9GT1JX
QVJEX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJp
YWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMi
CisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjog
MTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcu
b3JpZy9mcy9yZWlzZXI0L2ZzZGF0YS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2ZzZGF0YS5j
Ci0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2ZzZGF0YS5jCTE5NzAtMDEtMDEgMDE6
MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9mc2RhdGEu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1MjIyMjE2OSArMDEwMApAQCAtMCwwICsxLDgwMSBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQsIDIwMDUgYnkgSGFucyBSZWlzZXIs
IGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUg
ImZzZGF0YS5oIgorI2luY2x1ZGUgImlub2RlLmgiCisKKyNpbmNsdWRlIDxsaW51eC9zaHJpbmtl
ci5oPgorCisvKiBjYWNoZSBvciBkaXJfY3Vyc29ycyAqLworc3RhdGljIHN0cnVjdCBrbWVtX2Nh
Y2hlICpkX2N1cnNvcl9jYWNoZTsKKworLyogbGlzdCBvZiB1bnVzZWQgY3Vyc29ycyAqLworc3Rh
dGljIExJU1RfSEVBRChjdXJzb3JfY2FjaGUpOworCisvKiBudW1iZXIgb2YgY3Vyc29ycyBpbiBs
aXN0IG9mIHVudW5zZWQgY3Vyc29ycyAqLworc3RhdGljIHVuc2lnbmVkIGxvbmcgZF9jdXJzb3Jf
dW51c2VkID0gMDsKKworLyogc3BpbmxvY2sgcHJvdGVjdGluZyBtYW5pcHVsYXRpb25zIHdpdGgg
ZGlyX2N1cnNvcidzIGhhc2ggdGFibGUgYW5kIGxpc3RzICovCitERUZJTkVfU1BJTkxPQ0soZF9j
X2xvY2spOworCitzdGF0aWMgcmVpc2VyNF9maWxlX2ZzZGF0YSAqY3JlYXRlX2ZzZGF0YShzdHJ1
Y3QgZmlsZSAqZmlsZSk7CitzdGF0aWMgaW50IGZpbGVfaXNfc3RhdGVsZXNzKHN0cnVjdCBmaWxl
ICpmaWxlKTsKK3N0YXRpYyB2b2lkIGZyZWVfZnNkYXRhKHJlaXNlcjRfZmlsZV9mc2RhdGEgKmZz
ZGF0YSk7CitzdGF0aWMgdm9pZCBraWxsX2N1cnNvcihkaXJfY3Vyc29yICopOworCitzdGF0aWMg
dW5zaWduZWQgbG9uZyBkX2N1cnNvcl9zaHJpbmtfc2NhbihzdHJ1Y3Qgc2hyaW5rZXIgKnNocmlu
aywKKwkJCQkJICBzdHJ1Y3Qgc2hyaW5rX2NvbnRyb2wgKnNjKQoreworCWRpcl9jdXJzb3IgKnNj
YW47CisJdW5zaWduZWQgbG9uZyBmcmVlZCA9IDA7CisKKwlzcGluX2xvY2soJmRfY19sb2NrKTsK
Kwl3aGlsZSAoIWxpc3RfZW1wdHkoJmN1cnNvcl9jYWNoZSkgJiYgc2MtPm5yX3RvX3NjYW4pIHsK
KwkJc2NhbiA9IGxpc3RfZW50cnkoY3Vyc29yX2NhY2hlLm5leHQsIGRpcl9jdXJzb3IsIGFsaXN0
KTsKKwkJYXNzZXJ0KCJuaWtpdGEtMzU2NyIsIHNjYW4tPnJlZiA9PSAwKTsKKwkJa2lsbF9jdXJz
b3Ioc2Nhbik7CisJCWZyZWVkKys7CisJCXNjLT5ucl90b19zY2FuLS07CisJfQorCXNwaW5fdW5s
b2NrKCZkX2NfbG9jayk7CisJcmV0dXJuIGZyZWVkOworfQorCitzdGF0aWMgdW5zaWduZWQgbG9u
ZyBkX2N1cnNvcl9zaHJpbmtfY291bnQgKHN0cnVjdCBzaHJpbmtlciAqc2hyaW5rLAorCQkJCQkg
ICAgc3RydWN0IHNocmlua19jb250cm9sICpzYykKK3sKKwlyZXR1cm4gZF9jdXJzb3JfdW51c2Vk
OworfQorCisvKgorICogYWN0dWFsbHksIGRfY3Vyc29ycyBhcmUgInByaWNlbGVzcyIsIGJlY2F1
c2UgdGhlcmUgaXMgbm8gd2F5IHRvCisgKiByZWNvdmVyIGluZm9ybWF0aW9uIHN0b3JlZCBpbiB0
aGVtLiBPbiB0aGUgb3RoZXIgaGFuZCwgd2UgZG9uJ3QKKyAqIHdhbnQgdG8gY29uc3VtZSBhbGwg
a2VybmVsIG1lbW9yeSBieSB0aGVtLiBBcyBhIGNvbXByb21pc2UsIGp1c3QKKyAqIGFzc2lnbiBo
aWdoZXIgInNlZWtzIiB2YWx1ZSB0byBkX2N1cnNvciBjYWNoZSwgc28gdGhhdCBpdCB3aWxsIGJl
CisgKiBzaHJ1bmsgb25seSBpZiBzeXN0ZW0gaXMgcmVhbGx5IHRpZ2h0IG9uIG1lbW9yeS4KKyAq
Lworc3RhdGljIHN0cnVjdCBzaHJpbmtlciBkX2N1cnNvcl9zaHJpbmtlciA9IHsKKwkuY291bnRf
b2JqZWN0cyA9IGRfY3Vyc29yX3Nocmlua19jb3VudCwKKwkuc2Nhbl9vYmplY3RzID0gZF9jdXJz
b3Jfc2hyaW5rX3NjYW4sCisJLnNlZWtzID0gREVGQVVMVF9TRUVLUyA8PCAzCit9OworCisvKioK
KyAqIHJlaXNlcjRfaW5pdF9kX2N1cnNvciAtIGNyZWF0ZSBkX2N1cnNvciBjYWNoZQorICoKKyAq
IEluaXRpYWxpemVzIHNsYWIgY2FjaGUgb2YgZF9jdXJzb3JzLiBJdCBpcyBwYXJ0IG9mIHJlaXNl
cjQgbW9kdWxlCisgKiBpbml0aWFsaXphdGlvbi4KKyAqLworaW50IHJlaXNlcjRfaW5pdF9kX2N1
cnNvcih2b2lkKQoreworCWRfY3Vyc29yX2NhY2hlID0ga21lbV9jYWNoZV9jcmVhdGUoImRfY3Vy
c29yIiwgc2l6ZW9mKGRpcl9jdXJzb3IpLCAwLAorCQkJCQkgICBTTEFCX0hXQ0FDSEVfQUxJR04s
IE5VTEwpOworCWlmIChkX2N1cnNvcl9jYWNoZSA9PSBOVUxMKQorCQlyZXR1cm4gUkVURVJSKC1F
Tk9NRU0pOworCisJcmVnaXN0ZXJfc2hyaW5rZXIoJmRfY3Vyc29yX3Nocmlua2VyKTsKKwlyZXR1
cm4gMDsKK30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfZF9jdXJzb3IgLSBkZWxldGUgZF9jdXJz
b3IgY2FjaGUgYW5kIGRfY3Vyc29yIHNocmlua2VyCisgKgorICogVGhpcyBpcyBjYWxsZWQgb24g
cmVpc2VyNCBtb2R1bGUgdW5sb2FkaW5nIG9yIHN5c3RlbSBzaHV0ZG93bi4KKyAqLwordm9pZCBy
ZWlzZXI0X2RvbmVfZF9jdXJzb3Iodm9pZCkKK3sKKwl1bnJlZ2lzdGVyX3Nocmlua2VyKCZkX2N1
cnNvcl9zaHJpbmtlcik7CisKKwlkZXN0cm95X3JlaXNlcjRfY2FjaGUoJmRfY3Vyc29yX2NhY2hl
KTsKK30KKworI2RlZmluZSBEX0NVUlNPUl9UQUJMRV9TSVpFICgyNTYpCisKK3N0YXRpYyBpbmxp
bmUgdW5zaWduZWQgbG9uZworZF9jdXJzb3JfaGFzaChkX2N1cnNvcl9oYXNoX3RhYmxlICogdGFi
bGUsIGNvbnN0IHN0cnVjdCBkX2N1cnNvcl9rZXkgKmtleSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0z
NTU1IiwgSVNfUE9XKERfQ1VSU09SX1RBQkxFX1NJWkUpKTsKKwlyZXR1cm4gKGtleS0+b2lkICsg
a2V5LT5jaWQpICYgKERfQ1VSU09SX1RBQkxFX1NJWkUgLSAxKTsKK30KKworc3RhdGljIGlubGlu
ZSBpbnQgZF9jdXJzb3JfZXEoY29uc3Qgc3RydWN0IGRfY3Vyc29yX2tleSAqazEsCisJCQkgICAg
ICBjb25zdCBzdHJ1Y3QgZF9jdXJzb3Jfa2V5ICprMikKK3sKKwlyZXR1cm4gazEtPmNpZCA9PSBr
Mi0+Y2lkICYmIGsxLT5vaWQgPT0gazItPm9pZDsKK30KKworLyoKKyAqIGRlZmluZSBmdW5jdGlv
bnMgdG8gbWFuaXB1bGF0ZSByZWlzZXI0IHN1cGVyIGJsb2NrJ3MgaGFzaCB0YWJsZSBvZgorICog
ZGlyX2N1cnNvcnMKKyAqLworI2RlZmluZSBLTUFMTE9DKHNpemUpIGttYWxsb2MoKHNpemUpLCBy
ZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSkKKyNkZWZpbmUgS0ZSRUUocHRyLCBzaXplKSBrZnJl
ZShwdHIpCitUWVBFX1NBRkVfSEFTSF9ERUZJTkUoZF9jdXJzb3IsCisJCSAgICAgIGRpcl9jdXJz
b3IsCisJCSAgICAgIHN0cnVjdCBkX2N1cnNvcl9rZXksCisJCSAgICAgIGtleSwgaGFzaCwgZF9j
dXJzb3JfaGFzaCwgZF9jdXJzb3JfZXEpOworI3VuZGVmIEtGUkVFCisjdW5kZWYgS01BTExPQwor
CisvKioKKyAqIHJlaXNlcjRfaW5pdF9zdXBlcl9kX2luZm8gLSBpbml0aWFsaXplIHBlci1zdXBl
ci1ibG9jayBkX2N1cnNvciByZXNvdXJjZXMKKyAqIEBzdXBlcjogc3VwZXIgYmxvY2sgdG8gaW5p
dGlhbGl6ZQorICoKKyAqIEluaXRpYWxpemVzIHBlci1zdXBlci1ibG9jayBkX2N1cnNvcidzIGhh
c2ggdGFibGUgYW5kIHJhZGl4IHRyZWUuIEl0IGlzIHBhcnQKKyAqIG9mIG1vdW50LgorICovCitp
bnQgcmVpc2VyNF9pbml0X3N1cGVyX2RfaW5mbyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKQor
eworCXN0cnVjdCBkX2N1cnNvcl9pbmZvICpwOworCisJcCA9ICZnZXRfc3VwZXJfcHJpdmF0ZShz
dXBlciktPmRfaW5mbzsKKworCUlOSVRfUkFESVhfVFJFRSgmcC0+dHJlZSwgcmVpc2VyNF9jdHhf
Z2ZwX21hc2tfZ2V0KCkpOworCXJldHVybiBkX2N1cnNvcl9oYXNoX2luaXQoJnAtPnRhYmxlLCBE
X0NVUlNPUl9UQUJMRV9TSVpFKTsKK30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfc3VwZXJfZF9p
bmZvIC0gcmVsZWFzZSBwZXItc3VwZXItYmxvY2sgZF9jdXJzb3IgcmVzb3VyY2VzCisgKiBAc3Vw
ZXI6IHN1cGVyIGJsb2NrIGJlaW5nIHVtb3VudGVkCisgKgorICogSXQgaXMgY2FsbGVkIG9uIHVt
b3VudC4gS2lsbHMgYWxsIGRpcmVjdG9yeSBjdXJzb3JzIGF0dGFjaGVkIHRvIHN1b2VyIGJsb2Nr
LgorICovCit2b2lkIHJlaXNlcjRfZG9uZV9zdXBlcl9kX2luZm8oc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzdXBlcikKK3sKKwlzdHJ1Y3QgZF9jdXJzb3JfaW5mbyAqZF9pbmZvOworCWRpcl9jdXJzb3Ig
KmN1cnNvciwgKm5leHQ7CisKKwlkX2luZm8gPSAmZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5k
X2luZm87CisJZm9yX2FsbF9pbl9odGFibGUoJmRfaW5mby0+dGFibGUsIGRfY3Vyc29yLCBjdXJz
b3IsIG5leHQpCisJCWtpbGxfY3Vyc29yKGN1cnNvcik7CisKKwlCVUdfT04oIXJhZGl4X3RyZWVf
ZW1wdHkoJmRfaW5mby0+dHJlZSkpOworCWRfY3Vyc29yX2hhc2hfZG9uZSgmZF9pbmZvLT50YWJs
ZSk7Cit9CisKKy8qKgorICoga2lsbF9jdXJzb3IgLSBmcmVlIGRpcl9jdXJzb3IgYW5kIHJlaXNl
cjRfZmlsZV9mc2RhdGEgYXR0YWNoZWQgdG8gaXQKKyAqIEBjdXJzb3I6IGN1cnNvciB0byBmcmVl
CisgKgorICogUmVtb3ZlcyByZWlzZXI0X2ZpbGVfZnNkYXRhIGF0dGFjaGVkIHRvIEBjdXJzb3Ig
ZnJvbSByZWFkZGlyIGxpc3Qgb2YKKyAqIHJlaXNlcjRfaW5vZGUsIGZyZWVzIHRoYXQgcmVpc2Vy
NF9maWxlX2ZzZGF0YS4gUmVtb3ZlcyBAY3Vyc29yIGZyb20gZnJvbQorICogaW5kaWNlcywgaGFz
aCB0YWJsZSwgbGlzdCBvZiB1bnVzZWQgY3Vyc29ycyBhbmQgZnJlZXMgaXQuCisgKi8KK3N0YXRp
YyB2b2lkIGtpbGxfY3Vyc29yKGRpcl9jdXJzb3IgKmN1cnNvcikKK3sKKwl1bnNpZ25lZCBsb25n
IGluZGV4OworCisJYXNzZXJ0KCJuaWtpdGEtMzU2NiIsIGN1cnNvci0+cmVmID09IDApOworCWFz
c2VydCgibmlraXRhLTM1NzIiLCBjdXJzb3ItPmZzZGF0YSAhPSBOVUxMKTsKKworCWluZGV4ID0g
KHVuc2lnbmVkIGxvbmcpY3Vyc29yLT5rZXkub2lkOworCWxpc3RfZGVsX2luaXQoJmN1cnNvci0+
ZnNkYXRhLT5kaXIubGlua2FnZSk7CisJZnJlZV9mc2RhdGEoY3Vyc29yLT5mc2RhdGEpOworCWN1
cnNvci0+ZnNkYXRhID0gTlVMTDsKKworCWlmIChsaXN0X2VtcHR5X2NhcmVmdWwoJmN1cnNvci0+
bGlzdCkpCisJCS8qIHRoaXMgaXMgbGFzdCBjdXJzb3IgZm9yIGEgZmlsZS4gS2lsbCByYWRpeC10
cmVlIGVudHJ5ICovCisJCXJhZGl4X3RyZWVfZGVsZXRlKCZjdXJzb3ItPmluZm8tPnRyZWUsIGlu
ZGV4KTsKKwllbHNlIHsKKwkJdm9pZCAqKnNsb3Q7CisKKwkJLyoKKwkJICogdGhlcmUgYXJlIG90
aGVyIGN1cnNvcnMgZm9yIHRoZSBzYW1lIG9pZC4KKwkJICovCisKKwkJLyoKKwkJICogaWYgcmFk
aXggdHJlZSBwb2ludCB0byB0aGUgY3Vyc29yIGJlaW5nIHJlbW92ZWQsIHJlLXRhcmdldAorCQkg
KiByYWRpeCB0cmVlIHNsb3QgdG8gdGhlIG5leHQgY3Vyc29yIGluIHRoZSAobm9uLWVtcHR5IGFz
IHdhcworCQkgKiBjaGVja2VkIGFib3ZlKSBlbGVtZW50IG9mIHRoZSBjaXJjdWxhciBsaXN0IG9m
IGFsbCBjdXJzb3JzCisJCSAqIGZvciB0aGlzIG9pZC4KKwkJICovCisJCXNsb3QgPSByYWRpeF90
cmVlX2xvb2t1cF9zbG90KCZjdXJzb3ItPmluZm8tPnRyZWUsIGluZGV4KTsKKwkJYXNzZXJ0KCJu
aWtpdGEtMzU3MSIsICpzbG90ICE9IE5VTEwpOworCQlpZiAoKnNsb3QgPT0gY3Vyc29yKQorCQkJ
KnNsb3QgPSBsaXN0X2VudHJ5KGN1cnNvci0+bGlzdC5uZXh0LCBkaXJfY3Vyc29yLCBsaXN0KTsK
KwkJLyogcmVtb3ZlIGN1cnNvciBmcm9tIGNpcmN1bGFyIGxpc3QgKi8KKwkJbGlzdF9kZWxfaW5p
dCgmY3Vyc29yLT5saXN0KTsKKwl9CisJLyogcmVtb3ZlIGN1cnNvciBmcm9tIHRoZSBsaXN0IG9m
IHVudXNlZCBjdXJzb3JzICovCisJbGlzdF9kZWxfaW5pdCgmY3Vyc29yLT5hbGlzdCk7CisJLyog
cmVtb3ZlIGN1cnNvciBmcm9tIHRoZSBoYXNoIHRhYmxlICovCisJZF9jdXJzb3JfaGFzaF9yZW1v
dmUoJmN1cnNvci0+aW5mby0+dGFibGUsIGN1cnNvcik7CisJLyogYW5kIGZyZWUgaXQgKi8KKwlr
bWVtX2NhY2hlX2ZyZWUoZF9jdXJzb3JfY2FjaGUsIGN1cnNvcik7CisJLS1kX2N1cnNvcl91bnVz
ZWQ7Cit9CisKKy8qIHBvc3NpYmxlIGFjdGlvbnMgdGhhdCBjYW4gYmUgcGVyZm9ybWVkIG9uIGFs
bCBjdXJzb3JzIGZvciB0aGUgZ2l2ZW4gZmlsZSAqLworZW51bSBjdXJzb3JfYWN0aW9uIHsKKwkv
KgorCSAqIGxvYWQgYWxsIGRldGFjaGVkIHN0YXRlOiB0aGlzIGlzIGNhbGxlZCB3aGVuIHN0YXQt
ZGF0YSBpcyBsb2FkZWQKKwkgKiBmcm9tIHRoZSBkaXNrIHRvIHJlY292ZXIgaW5mb3JtYXRpb24g
YWJvdXQgYWxsIHBlbmRpbmcgcmVhZGRpcnMKKwkgKi8KKwlDVVJTT1JfTE9BRCwKKwkvKgorCSAq
IGRldGFjaCBhbGwgc3RhdGUgZnJvbSBpbm9kZSwgbGVhdmluZyBpdCBpbiB0aGUgY2FjaGUuIFRo
aXMgaXMgY2FsbGVkCisJICogd2hlbiBpbm9kZSBpcyByZW1vdmVkIGZvcm0gdGhlIG1lbW9yeSBi
eSBtZW1vcnkgcHJlc3N1cmUKKwkgKi8KKwlDVVJTT1JfRElTUE9TRSwKKwkvKgorCSAqIGRldGFj
aCBjdXJzb3JzIGZyb20gdGhlIGlub2RlLCBhbmQgZnJlZSB0aGVtLiBUaGlzIGlzIGNhbGxlZCB3
aGVuCisJICogaW5vZGUgaXMgZGVzdHJveWVkCisJICovCisJQ1VSU09SX0tJTEwKK307CisKKy8q
CisgKiByZXR1cm4gZF9jdXJzb3IgZGF0YSBmb3IgdGhlIGZpbGUgc3lzdGVtIEBpbm9kZSBpcyBp
bi4KKyAqLworc3RhdGljIGlubGluZSBzdHJ1Y3QgZF9jdXJzb3JfaW5mbyAqZF9pbmZvKHN0cnVj
dCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuICZnZXRfc3VwZXJfcHJpdmF0ZShpbm9kZS0+aV9z
YiktPmRfaW5mbzsKK30KKworLyoKKyAqIGxvb2t1cCBkX2N1cnNvciBpbiB0aGUgcGVyLXN1cGVy
LWJsb2NrIHJhZGl4IHRyZWUuCisgKi8KK3N0YXRpYyBpbmxpbmUgZGlyX2N1cnNvciAqbG9va3Vw
KHN0cnVjdCBkX2N1cnNvcl9pbmZvICppbmZvLAorCQkJCSB1bnNpZ25lZCBsb25nIGluZGV4KQor
eworCXJldHVybiAoZGlyX2N1cnNvciAqKSByYWRpeF90cmVlX2xvb2t1cCgmaW5mby0+dHJlZSwg
aW5kZXgpOworfQorCisvKgorICogYXR0YWNoIEBjdXJzb3IgdG8gdGhlIHJhZGl4IHRyZWUuIFRo
ZXJlIG1heSBiZSBtdWx0aXBsZSBjdXJzb3JzIGZvciB0aGUKKyAqIHNhbWUgb2lkLCB0aGV5IGFy
ZSBjaGFpbmVkIGludG8gY2lyY3VsYXIgbGlzdC4KKyAqLworc3RhdGljIHZvaWQgYmluZF9jdXJz
b3IoZGlyX2N1cnNvciAqIGN1cnNvciwgdW5zaWduZWQgbG9uZyBpbmRleCkKK3sKKwlkaXJfY3Vy
c29yICpoZWFkOworCisJaGVhZCA9IGxvb2t1cChjdXJzb3ItPmluZm8sIGluZGV4KTsKKwlpZiAo
aGVhZCA9PSBOVUxMKSB7CisJCS8qIHRoaXMgaXMgdGhlIGZpcnN0IGN1cnNvciBmb3IgdGhpcyBp
bmRleCAqLworCQlJTklUX0xJU1RfSEVBRCgmY3Vyc29yLT5saXN0KTsKKwkJcmFkaXhfdHJlZV9p
bnNlcnQoJmN1cnNvci0+aW5mby0+dHJlZSwgaW5kZXgsIGN1cnNvcik7CisJfSBlbHNlIHsKKwkJ
Lyogc29tZSBjdXJzb3IgYWxyZWFkeSBleGlzdHMuIENoYWluIG91cnMgKi8KKwkJbGlzdF9hZGQo
JmN1cnNvci0+bGlzdCwgJmhlYWQtPmxpc3QpOworCX0KK30KKworLyoKKyAqIGRldGFjaCBmc2Rh
dGEgKGlmIGRldGFjaGFibGUpIGZyb20gZmlsZSBkZXNjcmlwdG9yLCBhbmQgcHV0IGN1cnNvciBv
biB0aGUKKyAqICJ1bnVzZWQiIGxpc3QuIENhbGxlZCB3aGVuIGZpbGUgZGVzY3JpcHRvciBpcyBu
b3QgbG9uZ2VyIGluIGFjdGl2ZSB1c2UuCisgKi8KK3N0YXRpYyB2b2lkIGNsZWFuX2ZzZGF0YShz
dHJ1Y3QgZmlsZSAqZmlsZSkKK3sKKwlkaXJfY3Vyc29yICpjdXJzb3I7CisJcmVpc2VyNF9maWxl
X2ZzZGF0YSAqZnNkYXRhOworCisJYXNzZXJ0KCJuaWtpdGEtMzU3MCIsIGZpbGVfaXNfc3RhdGVs
ZXNzKGZpbGUpKTsKKworCWZzZGF0YSA9IChyZWlzZXI0X2ZpbGVfZnNkYXRhICopIGZpbGUtPnBy
aXZhdGVfZGF0YTsKKwlpZiAoZnNkYXRhICE9IE5VTEwpIHsKKwkJY3Vyc29yID0gZnNkYXRhLT5j
dXJzb3I7CisJCWlmIChjdXJzb3IgIT0gTlVMTCkgeworCQkJc3Bpbl9sb2NrKCZkX2NfbG9jayk7
CisJCQktLWN1cnNvci0+cmVmOworCQkJaWYgKGN1cnNvci0+cmVmID09IDApIHsKKwkJCQlsaXN0
X2FkZF90YWlsKCZjdXJzb3ItPmFsaXN0LCAmY3Vyc29yX2NhY2hlKTsKKwkJCQkrK2RfY3Vyc29y
X3VudXNlZDsKKwkJCX0KKwkJCXNwaW5fdW5sb2NrKCZkX2NfbG9jayk7CisJCQlmaWxlLT5wcml2
YXRlX2RhdGEgPSBOVUxMOworCQl9CisJfQorfQorCisvKgorICogZ2xvYmFsIGNvdW50ZXIgdXNl
ZCB0byBnZW5lcmF0ZSAiY2xpZW50IGlkcyIuIFRoZXNlIGlkcyBhcmUgZW5jb2RlZCBpbnRvCisg
KiBoaWdoIGJpdHMgb2YgZnBvcy4KKyAqLworc3RhdGljIF9fdTMyIGNpZF9jb3VudGVyID0gMDsK
KyNkZWZpbmUgQ0lEX1NISUZUICgyMCkKKyNkZWZpbmUgQ0lEX01BU0sgICgweGZmZmZmdWxsKQor
CitzdGF0aWMgdm9pZCBmcmVlX2ZpbGVfZnNkYXRhX25vbG9jayhzdHJ1Y3QgZmlsZSAqKTsKKwor
LyoqCisgKiBpbnNlcnRfY3Vyc29yIC0gYWxsb2NhdGUgZmlsZV9mc2RhdGEsIGluc2VydCBjdXJz
b3IgdG8gdHJlZSBhbmQgaGFzaCB0YWJsZQorICogQGN1cnNvcjoKKyAqIEBmaWxlOgorICogQGlu
b2RlOgorICoKKyAqIEFsbG9jYXRlcyByZWlzZXI0X2ZpbGVfZnNkYXRhLCBhdHRhY2hlcyBpdCB0
byBAY3Vyc29yLCBpbnNlcnRzIGN1cnNvciB0bworICogcmVpc2VyNCBzdXBlciBibG9jaydzIGhh
c2ggdGFibGUgYW5kIHJhZGl4IHRyZWUuCisgYWRkIGRldGFjaGFibGUgcmVhZGRpcgorICogc3Rh
dGUgdG8gdGhlIEBmCisgKi8KK3N0YXRpYyBpbnQgaW5zZXJ0X2N1cnNvcihkaXJfY3Vyc29yICpj
dXJzb3IsIHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3QgKmZwb3MsCisJCQkgc3RydWN0IGlub2Rl
ICppbm9kZSkKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfZmlsZV9mc2RhdGEgKmZzZGF0YTsK
KworCW1lbXNldChjdXJzb3IsIDAsIHNpemVvZiAqY3Vyc29yKTsKKworCS8qIHRoaXMgaXMgZWl0
aGVyIGZpcnN0IGNhbGwgdG8gcmVhZGRpciwgb3IgcmV3aW5kLiBBbnl3YXksIGNyZWF0ZSBuZXcK
KwkgKiBjdXJzb3IuICovCisJZnNkYXRhID0gY3JlYXRlX2ZzZGF0YShOVUxMKTsKKwlpZiAoZnNk
YXRhICE9IE5VTEwpIHsKKwkJcmVzdWx0ID0gcmFkaXhfdHJlZV9wcmVsb2FkKHJlaXNlcjRfY3R4
X2dmcF9tYXNrX2dldCgpKTsKKwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQlzdHJ1Y3QgZF9jdXJz
b3JfaW5mbyAqaW5mbzsKKwkJCW9pZF90IG9pZDsKKworCQkJaW5mbyA9IGRfaW5mbyhpbm9kZSk7
CisJCQlvaWQgPSBnZXRfaW5vZGVfb2lkKGlub2RlKTsKKwkJCS8qIGNpZCBvY2N1cGllcyBoaWdo
ZXIgMTIgYml0cyBvZiBmLT5mX3Bvcy4gRG9uJ3QKKwkJCSAqIGFsbG93IGl0IHRvIGJlY29tZSBu
ZWdhdGl2ZTogdGhpcyBjb25mdXNlcworCQkJICogbmZzZF9yZWFkZGlyKCkgKi8KKwkJCWN1cnNv
ci0+a2V5LmNpZCA9ICgrK2NpZF9jb3VudGVyKSAmIDB4N2ZmOworCQkJY3Vyc29yLT5rZXkub2lk
ID0gb2lkOworCQkJY3Vyc29yLT5mc2RhdGEgPSBmc2RhdGE7CisJCQljdXJzb3ItPmluZm8gPSBp
bmZvOworCQkJY3Vyc29yLT5yZWYgPSAxOworCisJCQlzcGluX2xvY2tfaW5vZGUoaW5vZGUpOwor
CQkJLyogaW5zdGFsbCBjdXJzb3IgYXMgQGYncyBwcml2YXRlX2RhdGEsIGRpc2NhcmRpbmcgb2xk
CisJCQkgKiBvbmUgaWYgbmVjZXNzYXJ5ICovCisjaWYgUkVJU0VSNF9ERUJVRworCQkJaWYgKGZp
bGUtPnByaXZhdGVfZGF0YSkKKwkJCQl3YXJuaW5nKCIiLCAiZmlsZSBoYXMgZnNkYXRhIGFscmVh
ZHkiKTsKKyNlbmRpZgorCQkJY2xlYW5fZnNkYXRhKGZpbGUpOworCQkJZnJlZV9maWxlX2ZzZGF0
YV9ub2xvY2soZmlsZSk7CisJCQlmaWxlLT5wcml2YXRlX2RhdGEgPSBmc2RhdGE7CisJCQlmc2Rh
dGEtPmN1cnNvciA9IGN1cnNvcjsKKwkJCXNwaW5fdW5sb2NrX2lub2RlKGlub2RlKTsKKwkJCXNw
aW5fbG9jaygmZF9jX2xvY2spOworCQkJLyogaW5zZXJ0IGN1cnNvciBpbnRvIGhhc2ggdGFibGUg
Ki8KKwkJCWRfY3Vyc29yX2hhc2hfaW5zZXJ0KCZpbmZvLT50YWJsZSwgY3Vyc29yKTsKKwkJCS8q
IGFuZCBjaGFpbiBpdCBpbnRvIHJhZGl4LXRyZWUgKi8KKwkJCWJpbmRfY3Vyc29yKGN1cnNvciwg
KHVuc2lnbmVkIGxvbmcpb2lkKTsKKwkJCXNwaW5fdW5sb2NrKCZkX2NfbG9jayk7CisJCQlyYWRp
eF90cmVlX3ByZWxvYWRfZW5kKCk7CisJCQkqZnBvcyA9ICgoX191NjQpIGN1cnNvci0+a2V5LmNp
ZCkgPDwgQ0lEX1NISUZUOworCQl9CisJfSBlbHNlCisJCXJlc3VsdCA9IFJFVEVSUigtRU5PTUVN
KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIHByb2Nlc3NfY3Vyc29ycyAtIGRvIGFj
dGlvbiBvbiBlYWNoIGN1cnNvciBhdHRhY2hlZCB0byBpbm9kZQorICogQGlub2RlOgorICogQGFj
dDogYWN0aW9uIHRvIGRvCisgKgorICogRmluZHMgYWxsIGN1cnNvcnMgb2YgQGlub2RlIGluIHJl
aXNlcjQncyBzdXBlciBibG9jayByYWRpeCB0cmVlIG9mIGN1cnNvcnMKKyAqIGFuZCBwZXJmb3Jt
cyBhY3Rpb24gc3BlY2lmaWVkIGJ5IEBhY3Qgb24gZWFjaCBvZiBjdXJzb3JzLgorICovCitzdGF0
aWMgdm9pZCBwcm9jZXNzX2N1cnNvcnMoc3RydWN0IGlub2RlICppbm9kZSwgZW51bSBjdXJzb3Jf
YWN0aW9uIGFjdCkKK3sKKwlvaWRfdCBvaWQ7CisJZGlyX2N1cnNvciAqc3RhcnQ7CisJc3RydWN0
IGxpc3RfaGVhZCAqaGVhZDsKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3QgZF9jdXJz
b3JfaW5mbyAqaW5mbzsKKworCS8qIHRoaXMgY2FuIGJlIGNhbGxlZCBieQorCSAqCisJICoga3N3
YXBkLT4uLi4tPnBydW5lX2ljYWNoZS0+Li5yZWlzZXI0X2Rlc3Ryb3lfaW5vZGUKKwkgKgorCSAq
IHdpdGhvdXQgcmVpc2VyNF9jb250ZXh0CisJICovCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRl
eHQoaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkgeworCQl3YXJuaW5nKCJ2cy0yMyIs
ICJmYWlsZWQgdG8gaW5pdCBjb250ZXh0Iik7CisJCXJldHVybjsKKwl9CisKKwlhc3NlcnQoIm5p
a2l0YS0zNTU4IiwgaW5vZGUgIT0gTlVMTCk7CisKKwlpbmZvID0gZF9pbmZvKGlub2RlKTsKKwlv
aWQgPSBnZXRfaW5vZGVfb2lkKGlub2RlKTsKKwlzcGluX2xvY2tfaW5vZGUoaW5vZGUpOworCWhl
YWQgPSBnZXRfcmVhZGRpcl9saXN0KGlub2RlKTsKKwlzcGluX2xvY2soJmRfY19sb2NrKTsKKwkv
KiBmaW5kIGFueSBjdXJzb3IgZm9yIHRoaXMgb2lkOiByZWZlcmVuY2UgdG8gaXQgaXMgaGFuZ2lu
ZyBvZiByYWRpeAorCSAqIHRyZWUgKi8KKwlzdGFydCA9IGxvb2t1cChpbmZvLCAodW5zaWduZWQg
bG9uZylvaWQpOworCWlmIChzdGFydCAhPSBOVUxMKSB7CisJCWRpcl9jdXJzb3IgKnNjYW47CisJ
CXJlaXNlcjRfZmlsZV9mc2RhdGEgKmZzZGF0YTsKKworCQkvKiBwcm9jZXNzIGNpcmN1bGFyIGxp
c3Qgb2YgY3Vyc29ycyBmb3IgdGhpcyBvaWQgKi8KKwkJc2NhbiA9IHN0YXJ0OworCQlkbyB7CisJ
CQlkaXJfY3Vyc29yICpuZXh0OworCisJCQluZXh0ID0gbGlzdF9lbnRyeShzY2FuLT5saXN0Lm5l
eHQsIGRpcl9jdXJzb3IsIGxpc3QpOworCQkJZnNkYXRhID0gc2Nhbi0+ZnNkYXRhOworCQkJYXNz
ZXJ0KCJuaWtpdGEtMzU1NyIsIGZzZGF0YSAhPSBOVUxMKTsKKwkJCWlmIChzY2FuLT5rZXkub2lk
ID09IG9pZCkgeworCQkJCXN3aXRjaCAoYWN0KSB7CisJCQkJY2FzZSBDVVJTT1JfRElTUE9TRToK
KwkJCQkJbGlzdF9kZWxfaW5pdCgmZnNkYXRhLT5kaXIubGlua2FnZSk7CisJCQkJCWJyZWFrOwor
CQkJCWNhc2UgQ1VSU09SX0xPQUQ6CisJCQkJCWxpc3RfYWRkKCZmc2RhdGEtPmRpci5saW5rYWdl
LCBoZWFkKTsKKwkJCQkJYnJlYWs7CisJCQkJY2FzZSBDVVJTT1JfS0lMTDoKKwkJCQkJa2lsbF9j
dXJzb3Ioc2Nhbik7CisJCQkJCWJyZWFrOworCQkJCX0KKwkJCX0KKwkJCWlmIChzY2FuID09IG5l
eHQpCisJCQkJLyogbGFzdCBjdXJzb3Igd2FzIGp1c3Qga2lsbGVkICovCisJCQkJYnJlYWs7CisJ
CQlzY2FuID0gbmV4dDsKKwkJfSB3aGlsZSAoc2NhbiAhPSBzdGFydCk7CisJfQorCXNwaW5fdW5s
b2NrKCZkX2NfbG9jayk7CisJLyogY2hlY2sgdGhhdCB3ZSBraWxsZWQgJ2VtIGFsbCAqLworCWFz
c2VydCgibmlraXRhLTM1NjgiLAorCSAgICAgICBlcmdvKGFjdCA9PSBDVVJTT1JfS0lMTCwKKwkJ
ICAgIGxpc3RfZW1wdHlfY2FyZWZ1bChnZXRfcmVhZGRpcl9saXN0KGlub2RlKSkpKTsKKwlhc3Nl
cnQoIm5pa2l0YS0zNTY5IiwKKwkgICAgICAgZXJnbyhhY3QgPT0gQ1VSU09SX0tJTEwsIGxvb2t1
cChpbmZvLCBvaWQpID09IE5VTEwpKTsKKwlzcGluX3VubG9ja19pbm9kZShpbm9kZSk7CisJcmVp
c2VyNF9leGl0X2NvbnRleHQoY3R4KTsKK30KKworLyoqCisgKiByZWlzZXI0X2Rpc3Bvc2VfY3Vy
c29ycyAtIHJlbW92ZXMgY3Vyc29ycyBmcm9tIGlub2RlJ3MgbGlzdAorICogQGlub2RlOiBpbm9k
ZSB0byBkaXNwb3NlIGN1cnNvcnMgb2YKKyAqCisgKiBGb3IgZWFjaCBvZiBjdXJzb3JzIGNvcnJl
c3BvbmRpbmcgdG8gQGlub2RlIC0gcmVtb3ZlcyByZWlzZXI0X2ZpbGVfZnNkYXRhCisgKiBhdHRh
Y2hlZCB0byBjdXJzb3IgZnJvbSBpbm9kZSdzIHJlYWRkaXIgbGlzdC4gVGhpcyBpcyBjYWxsZWQg
d2hlbiBpbm9kZSBpcworICogcmVtb3ZlZCBmcm9tIHRoZSBtZW1vcnkgYnkgbWVtb3J5IHByZXNz
dXJlLgorICovCit2b2lkIHJlaXNlcjRfZGlzcG9zZV9jdXJzb3JzKHN0cnVjdCBpbm9kZSAqaW5v
ZGUpCit7CisJcHJvY2Vzc19jdXJzb3JzKGlub2RlLCBDVVJTT1JfRElTUE9TRSk7Cit9CisKKy8q
KgorICogcmVpc2VyNF9sb2FkX2N1cnNvcnMgLSBhdHRhY2ggY3Vyc29ycyB0byBpbm9kZQorICog
QGlub2RlOiBpbm9kZSB0byBsb2FkIGN1cnNvcnMgdG8KKyAqCisgKiBGb3IgZWFjaCBvZiBjdXJz
b3JzIGNvcnJlc3BvbmRpbmcgdG8gQGlub2RlIC0gYXR0YWNoZXMgcmVpc2VyNF9maWxlX2ZzZGF0
YQorICogYXR0YWNoZWQgdG8gY3Vyc29yIHRvIGlub2RlJ3MgcmVhZGRpciBsaXN0LiBUaGlzIGlz
IGRvbmUgd2hlbiBpbm9kZSBpcworICogbG9hZGVkIGludG8gbWVtb3J5LgorICovCit2b2lkIHJl
aXNlcjRfbG9hZF9jdXJzb3JzKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcHJvY2Vzc19jdXJz
b3JzKGlub2RlLCBDVVJTT1JfTE9BRCk7Cit9CisKKy8qKgorICogcmVpc2VyNF9raWxsX2N1cnNv
cnMgLSBraWxsIGFsbCBpbm9kZSBjdXJzb3JzCisgKiBAaW5vZGU6IGlub2RlIHRvIGtpbGwgY3Vy
c29ycyBvZgorICoKKyAqIEZyZWVzIGFsbCBjdXJzb3JzIGZvciB0aGlzIGlub2RlLiBUaGlzIGlz
IGNhbGxlZCB3aGVuIGlub2RlIGlzIGRlc3Ryb3llZC4KKyAqLwordm9pZCByZWlzZXI0X2tpbGxf
Y3Vyc29ycyhzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXByb2Nlc3NfY3Vyc29ycyhpbm9kZSwg
Q1VSU09SX0tJTEwpOworfQorCisvKioKKyAqIGZpbGVfaXNfc3RhdGVsZXNzIC0KKyAqIEBmaWxl
OgorICoKKyAqIHRydWUsIGlmIGZpbGUgZGVzY3JpcHRvciBAZiBpcyBjcmVhdGVkIGJ5IE5GUyBz
ZXJ2ZXIgYnkgImRlbWFuZCIgdG8gc2VydmUKKyAqIG9uZSBmaWxlIHN5c3RlbSBvcGVyYXRpb24u
IFRoaXMgbWVhbnMgdGhhdCB0aGVyZSBtYXkgYmUgImRldGFjaGVkIHN0YXRlIgorICogZm9yIHVu
ZGVybHlpbmcgaW5vZGUuCisgKi8KK3N0YXRpYyBpbnQgZmlsZV9pc19zdGF0ZWxlc3Moc3RydWN0
IGZpbGUgKmZpbGUpCit7CisJcmV0dXJuIHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEoZmlsZS0+
Zl9wYXRoLmRlbnRyeSktPnN0YXRlbGVzczsKK30KKworLyoqCisgKiByZWlzZXI0X2dldF9kaXJf
ZnBvcyAtCisgKiBAZGlyOgorICogQGZwb3M6IGVmZmVjdGl2ZSB2YWx1ZSBvZiBkaXItPmZfcG9z
CisgKgorICogQ2FsY3VsYXRlcyAtPmZwb3MgZnJvbSB1c2VyLXN1cHBsaWVkIGNvb2tpZS4gTm9y
bWFsbHkgaXQgaXMgZGlyLT5mX3BvcywgYnV0CisgKiBpbiB0aGUgY2FzZSBvZiBzdGF0ZWxlc3Mg
ZGlyZWN0b3J5IG9wZXJhdGlvbiAocmVhZGRpci1vdmVyLW5mcyksIGNsaWVudCBpZAorICogd2Fz
IGVuY29kZWQgaW4gdGhlIGhpZ2ggYml0cyBvZiBjb29raWUgYW5kIHNob3VsZCBtZSBtYXNrZWQg
b2ZmLgorICovCitsb2ZmX3QgcmVpc2VyNF9nZXRfZGlyX2Zwb3Moc3RydWN0IGZpbGUgKmRpciwg
bG9mZl90IGZwb3MpCit7CisJaWYgKGZpbGVfaXNfc3RhdGVsZXNzKGRpcikpCisJCXJldHVybiBm
cG9zICYgQ0lEX01BU0s7CisJZWxzZQorCQlyZXR1cm4gZnBvczsKK30KKworLyoqCisgKiByZWlz
ZXI0X2F0dGFjaF9mc2RhdGEgLSB0cnkgdG8gYXR0YWNoIGZzZGF0YQorICogQGZpbGU6CisgKiBA
ZnBvczogZWZmZWN0aXZlIHZhbHVlIG9mIEBmaWxlLT5mX3BvcworICogQGlub2RlOgorICoKKyAq
IEZpbmRzIG9yIGNyZWF0ZXMgY3Vyc29yIGZvciByZWFkZGlyLW92ZXItbmZzLgorICovCitpbnQg
cmVpc2VyNF9hdHRhY2hfZnNkYXRhKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3QgKmZwb3MsIHN0
cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJbG9mZl90IHBvczsKKwlpbnQgcmVzdWx0OworCWRpcl9j
dXJzb3IgKmN1cnNvcjsKKworCS8qCisJICogd2UgYXJlIHNlcmlhbGl6ZWQgYnkgaW5vZGUtPmlf
bXV0ZXgKKwkgKi8KKwlpZiAoIWZpbGVfaXNfc3RhdGVsZXNzKGZpbGUpKQorCQlyZXR1cm4gMDsK
KworCXBvcyA9ICpmcG9zOworCXJlc3VsdCA9IDA7CisJaWYgKHBvcyA9PSAwKSB7CisJCS8qCisJ
CSAqIGZpcnN0IGNhbGwgdG8gcmVhZGRpciAob3IgcmV3aW5kIHRvIHRoZSBiZWdpbm5pbmcgb2YK
KwkJICogZGlyZWN0b3J5KQorCQkgKi8KKwkJY3Vyc29yID0ga21lbV9jYWNoZV9hbGxvYyhkX2N1
cnNvcl9jYWNoZSwKKwkJCQkJICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJCWlmIChj
dXJzb3IgIT0gTlVMTCkKKwkJCXJlc3VsdCA9IGluc2VydF9jdXJzb3IoY3Vyc29yLCBmaWxlLCBm
cG9zLCBpbm9kZSk7CisJCWVsc2UKKwkJCXJlc3VsdCA9IFJFVEVSUigtRU5PTUVNKTsKKwl9IGVs
c2UgeworCQkvKiB0cnkgdG8gZmluZCBleGlzdGluZyBjdXJzb3IgKi8KKwkJc3RydWN0IGRfY3Vy
c29yX2tleSBrZXk7CisKKwkJa2V5LmNpZCA9IHBvcyA+PiBDSURfU0hJRlQ7CisJCWtleS5vaWQg
PSBnZXRfaW5vZGVfb2lkKGlub2RlKTsKKwkJc3Bpbl9sb2NrKCZkX2NfbG9jayk7CisJCWN1cnNv
ciA9IGRfY3Vyc29yX2hhc2hfZmluZCgmZF9pbmZvKGlub2RlKS0+dGFibGUsICZrZXkpOworCQlp
ZiAoY3Vyc29yICE9IE5VTEwpIHsKKwkJCS8qIGN1cnNvciB3YXMgZm91bmQgKi8KKwkJCWlmIChj
dXJzb3ItPnJlZiA9PSAwKSB7CisJCQkJLyogbW92ZSBpdCBmcm9tIHVudXNlZCBsaXN0ICovCisJ
CQkJbGlzdF9kZWxfaW5pdCgmY3Vyc29yLT5hbGlzdCk7CisJCQkJLS1kX2N1cnNvcl91bnVzZWQ7
CisJCQl9CisJCQkrK2N1cnNvci0+cmVmOworCQl9CisJCXNwaW5fdW5sb2NrKCZkX2NfbG9jayk7
CisJCWlmIChjdXJzb3IgIT0gTlVMTCkgeworCQkJc3Bpbl9sb2NrX2lub2RlKGlub2RlKTsKKwkJ
CWFzc2VydCgibmlraXRhLTM1NTYiLCBjdXJzb3ItPmZzZGF0YS0+YmFjayA9PSBOVUxMKTsKKwkJ
CWNsZWFuX2ZzZGF0YShmaWxlKTsKKwkJCWZyZWVfZmlsZV9mc2RhdGFfbm9sb2NrKGZpbGUpOwor
CQkJZmlsZS0+cHJpdmF0ZV9kYXRhID0gY3Vyc29yLT5mc2RhdGE7CisJCQlzcGluX3VubG9ja19p
bm9kZShpbm9kZSk7CisJCX0KKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiByZWlz
ZXI0X2RldGFjaF9mc2RhdGEgLSA/Pz8KKyAqIEBmaWxlOgorICoKKyAqIGRldGFjaCBmc2RhdGEs
IGlmIG5lY2Vzc2FyeQorICovCit2b2lkIHJlaXNlcjRfZGV0YWNoX2ZzZGF0YShzdHJ1Y3QgZmls
ZSAqZmlsZSkKK3sKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCisJaWYgKCFmaWxlX2lzX3N0YXRl
bGVzcyhmaWxlKSkKKwkJcmV0dXJuOworCisJaW5vZGUgPSBmaWxlX2lub2RlKGZpbGUpOworCXNw
aW5fbG9ja19pbm9kZShpbm9kZSk7CisJY2xlYW5fZnNkYXRhKGZpbGUpOworCXNwaW5fdW5sb2Nr
X2lub2RlKGlub2RlKTsKK30KKworLyogc2xhYiBmb3IgcmVpc2VyNF9kZW50cnlfZnNkYXRhICov
CitzdGF0aWMgc3RydWN0IGttZW1fY2FjaGUgKmRlbnRyeV9mc2RhdGFfY2FjaGU7CisKKy8qKgor
ICogcmVpc2VyNF9pbml0X2RlbnRyeV9mc2RhdGEgLSBjcmVhdGUgY2FjaGUgb2YgZGVudHJ5X2Zz
ZGF0YQorICoKKyAqIEluaXRpYWxpemVzIHNsYWIgY2FjaGUgb2Ygc3RydWN0dXJlcyBhdHRhY2hl
ZCB0byBkZW50eS0+ZF9mc2RhdGEuIEl0IGlzCisgKiBwYXJ0IG9mIHJlaXNlcjQgbW9kdWxlIGlu
aXRpYWxpemF0aW9uLgorICovCitpbnQgcmVpc2VyNF9pbml0X2RlbnRyeV9mc2RhdGEodm9pZCkK
K3sKKwlkZW50cnlfZnNkYXRhX2NhY2hlID0ga21lbV9jYWNoZV9jcmVhdGUoImRlbnRyeV9mc2Rh
dGEiLAorCQkJCQkgICBzaXplb2Yoc3RydWN0IHJlaXNlcjRfZGVudHJ5X2ZzZGF0YSksCisJCQkJ
CSAgIDAsCisJCQkJCSAgIFNMQUJfSFdDQUNIRV9BTElHTiB8CisJCQkJCSAgIFNMQUJfUkVDTEFJ
TV9BQ0NPVU5ULAorCQkJCQkgICBOVUxMKTsKKwlpZiAoZGVudHJ5X2ZzZGF0YV9jYWNoZSA9PSBO
VUxMKQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCXJldHVybiAwOworfQorCisvKioKKyAq
IHJlaXNlcjRfZG9uZV9kZW50cnlfZnNkYXRhIC0gZGVsZXRlIGNhY2hlIG9mIGRlbnRyeV9mc2Rh
dGEKKyAqCisgKiBUaGlzIGlzIGNhbGxlZCBvbiByZWlzZXI0IG1vZHVsZSB1bmxvYWRpbmcgb3Ig
c3lzdGVtIHNodXRkb3duLgorICovCit2b2lkIHJlaXNlcjRfZG9uZV9kZW50cnlfZnNkYXRhKHZv
aWQpCit7CisJZGVzdHJveV9yZWlzZXI0X2NhY2hlKCZkZW50cnlfZnNkYXRhX2NhY2hlKTsKK30K
KworLyoqCisgKiByZWlzZXI0X2dldF9kZW50cnlfZnNkYXRhIC0gZ2V0IGZzLXNwZWNpZmljIGRl
bnRyeSBkYXRhCisgKiBAZGVudHJ5OiBxdWVyaWVkIGRlbnRyeQorICoKKyAqIEFsbG9jYXRlcyBp
ZiBuZWNlc3NhcnkgYW5kIHJldHVybnMgcGVyLWRlbnRyeSBkYXRhIHRoYXQgd2UgYXR0YWNoIHRv
IGVhY2gKKyAqIGRlbnRyeS4KKyAqLworc3RydWN0IHJlaXNlcjRfZGVudHJ5X2ZzZGF0YSAqcmVp
c2VyNF9nZXRfZGVudHJ5X2ZzZGF0YShzdHJ1Y3QgZGVudHJ5ICpkZW50cnkpCit7CisJYXNzZXJ0
KCJuaWtpdGEtMTM2NSIsIGRlbnRyeSAhPSBOVUxMKTsKKworCWlmIChkZW50cnktPmRfZnNkYXRh
ID09IE5VTEwpIHsKKwkJZGVudHJ5LT5kX2ZzZGF0YSA9IGttZW1fY2FjaGVfYWxsb2MoZGVudHJ5
X2ZzZGF0YV9jYWNoZSwKKwkJCQkJCSAgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJ
CWlmIChkZW50cnktPmRfZnNkYXRhID09IE5VTEwpCisJCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIo
LUVOT01FTSkpOworCQltZW1zZXQoZGVudHJ5LT5kX2ZzZGF0YSwgMCwKKwkJICAgICAgIHNpemVv
ZihzdHJ1Y3QgcmVpc2VyNF9kZW50cnlfZnNkYXRhKSk7CisJfQorCXJldHVybiBkZW50cnktPmRf
ZnNkYXRhOworfQorCisvKioKKyAqIHJlaXNlcjRfZnJlZV9kZW50cnlfZnNkYXRhIC0gZGV0YWNo
IGFuZCBmcmVlIGRlbnRyeV9mc2RhdGEKKyAqIEBkZW50cnk6IGRlbnRyeSB0byBmcmVlIGZzZGF0
YSBvZgorICoKKyAqIERldGFjaGVzIGFuZCBmcmVlcyBmcy1zcGVjaWZpYyBkZW50cnkgZGF0YQor
ICovCit2b2lkIHJlaXNlcjRfZnJlZV9kZW50cnlfZnNkYXRhKHN0cnVjdCBkZW50cnkgKmRlbnRy
eSkKK3sKKwlpZiAoZGVudHJ5LT5kX2ZzZGF0YSAhPSBOVUxMKSB7CisJCWttZW1fY2FjaGVfZnJl
ZShkZW50cnlfZnNkYXRhX2NhY2hlLCBkZW50cnktPmRfZnNkYXRhKTsKKwkJZGVudHJ5LT5kX2Zz
ZGF0YSA9IE5VTEw7CisJfQorfQorCisvKiBzbGFiIGZvciByZWlzZXI0X2ZpbGVfZnNkYXRhICov
CitzdGF0aWMgc3RydWN0IGttZW1fY2FjaGUgKmZpbGVfZnNkYXRhX2NhY2hlOworCisvKioKKyAq
IHJlaXNlcjRfaW5pdF9maWxlX2ZzZGF0YSAtIGNyZWF0ZSBjYWNoZSBvZiByZWlzZXI0X2ZpbGVf
ZnNkYXRhCisgKgorICogSW5pdGlhbGl6ZXMgc2xhYiBjYWNoZSBvZiBzdHJ1Y3R1cmVzIGF0dGFj
aGVkIHRvIGZpbGUtPnByaXZhdGVfZGF0YS4gSXQgaXMKKyAqIHBhcnQgb2YgcmVpc2VyNCBtb2R1
bGUgaW5pdGlhbGl6YXRpb24uCisgKi8KK2ludCByZWlzZXI0X2luaXRfZmlsZV9mc2RhdGEodm9p
ZCkKK3sKKwlmaWxlX2ZzZGF0YV9jYWNoZSA9IGttZW1fY2FjaGVfY3JlYXRlKCJmaWxlX2ZzZGF0
YSIsCisJCQkJCSAgICAgIHNpemVvZihyZWlzZXI0X2ZpbGVfZnNkYXRhKSwKKwkJCQkJICAgICAg
MCwKKwkJCQkJICAgICAgU0xBQl9IV0NBQ0hFX0FMSUdOIHwKKwkJCQkJICAgICAgU0xBQl9SRUNM
QUlNX0FDQ09VTlQsIE5VTEwpOworCWlmIChmaWxlX2ZzZGF0YV9jYWNoZSA9PSBOVUxMKQorCQly
ZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCXJldHVybiAwOworfQorCisvKioKKyAqIHJlaXNlcjRf
ZG9uZV9maWxlX2ZzZGF0YSAtIGRlbGV0ZSBjYWNoZSBvZiByZWlzZXI0X2ZpbGVfZnNkYXRhCisg
KgorICogVGhpcyBpcyBjYWxsZWQgb24gcmVpc2VyNCBtb2R1bGUgdW5sb2FkaW5nIG9yIHN5c3Rl
bSBzaHV0ZG93bi4KKyAqLwordm9pZCByZWlzZXI0X2RvbmVfZmlsZV9mc2RhdGEodm9pZCkKK3sK
KwlkZXN0cm95X3JlaXNlcjRfY2FjaGUoJmZpbGVfZnNkYXRhX2NhY2hlKTsKK30KKworLyoqCisg
KiBjcmVhdGVfZnNkYXRhIC0gYWxsb2NhdGUgYW5kIGluaXRpYWxpemUgcmVpc2VyNF9maWxlX2Zz
ZGF0YQorICogQGZpbGU6IHdoYXQgdG8gY3JlYXRlIGZpbGVfZnNkYXRhIGZvciwgbWF5IGJlIE5V
TEwKKyAqCisgKiBBbGxvY2F0ZXMgYW5kIGluaXRpYWxpemVzIHJlaXNlcjRfZmlsZV9mc2RhdGEg
c3RydWN0dXJlLgorICovCitzdGF0aWMgcmVpc2VyNF9maWxlX2ZzZGF0YSAqY3JlYXRlX2ZzZGF0
YShzdHJ1Y3QgZmlsZSAqZmlsZSkKK3sKKwlyZWlzZXI0X2ZpbGVfZnNkYXRhICpmc2RhdGE7CisK
Kwlmc2RhdGEgPSBrbWVtX2NhY2hlX2FsbG9jKGZpbGVfZnNkYXRhX2NhY2hlLAorCQkJCSAgcmVp
c2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChmc2RhdGEgIT0gTlVMTCkgeworCQltZW1z
ZXQoZnNkYXRhLCAwLCBzaXplb2YgKmZzZGF0YSk7CisJCWZzZGF0YS0+YmFjayA9IGZpbGU7CisJ
CUlOSVRfTElTVF9IRUFEKCZmc2RhdGEtPmRpci5saW5rYWdlKTsKKwl9CisJcmV0dXJuIGZzZGF0
YTsKK30KKworLyoqCisgKiBmcmVlX2ZzZGF0YSAtIGZyZWUgcmVpc2VyNF9maWxlX2ZzZGF0YQor
ICogQGZzZGF0YTogb2JqZWN0IHRvIGZyZWUKKyAqCisgKiBEdWFsIHRvIGNyZWF0ZV9mc2RhdGEo
KS4gRnJlZSByZWlzZXI0X2ZpbGVfZnNkYXRhLgorICovCitzdGF0aWMgdm9pZCBmcmVlX2ZzZGF0
YShyZWlzZXI0X2ZpbGVfZnNkYXRhICpmc2RhdGEpCit7CisJQlVHX09OKGZzZGF0YSA9PSBOVUxM
KTsKKwlrbWVtX2NhY2hlX2ZyZWUoZmlsZV9mc2RhdGFfY2FjaGUsIGZzZGF0YSk7Cit9CisKKy8q
KgorICogcmVpc2VyNF9nZXRfZmlsZV9mc2RhdGEgLSBnZXQgZnMtc3BlY2lmaWMgZmlsZSBkYXRh
CisgKiBAZmlsZTogcXVlcmllZCBmaWxlCisgKgorICogUmV0dXJucyBmcy1zcGVjaWZpYyBkYXRh
IG9mIEBmaWxlLiBJZiBpdCBpcyBOVUxMLCBhbGxvY2F0ZXMgaXQgYW5kIGF0dGFjaGVzCisgKiB0
byBAZmlsZS4KKyAqLworcmVpc2VyNF9maWxlX2ZzZGF0YSAqcmVpc2VyNF9nZXRfZmlsZV9mc2Rh
dGEoc3RydWN0IGZpbGUgKmZpbGUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMTYwMyIsIGZpbGUgIT0g
TlVMTCk7CisKKwlpZiAoZmlsZS0+cHJpdmF0ZV9kYXRhID09IE5VTEwpIHsKKwkJcmVpc2VyNF9m
aWxlX2ZzZGF0YSAqZnNkYXRhOworCQlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCisJCWZzZGF0YSA9
IGNyZWF0ZV9mc2RhdGEoZmlsZSk7CisJCWlmIChmc2RhdGEgPT0gTlVMTCkKKwkJCXJldHVybiBF
UlJfUFRSKFJFVEVSUigtRU5PTUVNKSk7CisKKwkJaW5vZGUgPSBmaWxlX2lub2RlKGZpbGUpOwor
CQlzcGluX2xvY2tfaW5vZGUoaW5vZGUpOworCQlpZiAoZmlsZS0+cHJpdmF0ZV9kYXRhID09IE5V
TEwpIHsKKwkJCWZpbGUtPnByaXZhdGVfZGF0YSA9IGZzZGF0YTsKKwkJCWZzZGF0YSA9IE5VTEw7
CisJCX0KKwkJc3Bpbl91bmxvY2tfaW5vZGUoaW5vZGUpOworCQlpZiAoZnNkYXRhICE9IE5VTEwp
CisJCQkvKiBvdGhlciB0aHJlYWQgaW5pdGlhbGl6ZWQgLT5mc2RhdGEgKi8KKwkJCWttZW1fY2Fj
aGVfZnJlZShmaWxlX2ZzZGF0YV9jYWNoZSwgZnNkYXRhKTsKKwl9CisJYXNzZXJ0KCJuaWtpdGEt
MjY2NSIsIGZpbGUtPnByaXZhdGVfZGF0YSAhPSBOVUxMKTsKKwlyZXR1cm4gZmlsZS0+cHJpdmF0
ZV9kYXRhOworfQorCisvKioKKyAqIGZyZWVfZmlsZV9mc2RhdGFfbm9sb2NrIC0gZGV0YWNoIGFu
ZCBmcmVlIHJlaXNlcjRfZmlsZV9mc2RhdGEKKyAqIEBmaWxlOgorICoKKyAqIERldGFjaGVzIHJl
aXNlcjRfZmlsZV9mc2RhdGEgZnJvbSBAZmlsZSwgcmVtb3ZlcyByZWlzZXI0X2ZpbGVfZnNkYXRh
IGZyb20KKyAqIHJlYWRkaXIgbGlzdCwgZnJlZXMgaWYgaXQgaXMgbm90IGxpbmtlZCB0byBkX2N1
cnNvciBvYmplY3QuCisgKi8KK3N0YXRpYyB2b2lkIGZyZWVfZmlsZV9mc2RhdGFfbm9sb2NrKHN0
cnVjdCBmaWxlICpmaWxlKQoreworCXJlaXNlcjRfZmlsZV9mc2RhdGEgKmZzZGF0YTsKKworCWFz
c2VydCgiIiwgc3Bpbl9pbm9kZV9pc19sb2NrZWQoZmlsZV9pbm9kZShmaWxlKSkpOworCWZzZGF0
YSA9IGZpbGUtPnByaXZhdGVfZGF0YTsKKwlpZiAoZnNkYXRhICE9IE5VTEwpIHsKKwkJbGlzdF9k
ZWxfaW5pdCgmZnNkYXRhLT5kaXIubGlua2FnZSk7CisJCWlmIChmc2RhdGEtPmN1cnNvciA9PSBO
VUxMKQorCQkJZnJlZV9mc2RhdGEoZnNkYXRhKTsKKwl9CisJZmlsZS0+cHJpdmF0ZV9kYXRhID0g
TlVMTDsKK30KKworLyoqCisgKiByZWlzZXI0X2ZyZWVfZmlsZV9mc2RhdGEgLSBkZXRhY2ggZnJv
bSBzdHJ1Y3QgZmlsZSBhbmQgZnJlZSByZWlzZXI0X2ZpbGVfZnNkYXRhCisgKiBAZmlsZToKKyAq
CisgKiBTcGlubG9ja3MgaW5vZGUgYW5kIGNhbGxzIGZyZWVfZmlsZV9mc2RhdGFfbm9sb2NrIHRv
IGRvIHRoZSB3b3JrLgorICovCit2b2lkIHJlaXNlcjRfZnJlZV9maWxlX2ZzZGF0YShzdHJ1Y3Qg
ZmlsZSAqZmlsZSkKK3sKKwlzcGluX2xvY2tfaW5vZGUoZmlsZV9pbm9kZShmaWxlKSk7CisJZnJl
ZV9maWxlX2ZzZGF0YV9ub2xvY2soZmlsZSk7CisJc3Bpbl91bmxvY2tfaW5vZGUoZmlsZV9pbm9k
ZShmaWxlKSk7Cit9CisKKy8qCisgKiBMb2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9u
LXN0eWxlOiAiSyZSIgorICogbW9kZS1uYW1lOiAiTEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAor
ICogdGFiLXdpZHRoOiA4CisgKiBmaWxsLWNvbHVtbjogNzkKKyAqIEVuZDoKKyAqLwpkaWZmIC11
ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2ZzZGF0YS5o
IGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2ZzZGF0YS5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L2ZzZGF0YS5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisr
KyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9mc2RhdGEuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1
MjIyMjE2OSArMDEwMApAQCAtMCwwICsxLDIwMyBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIs
IDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9S
RUFETUUgKi8KKworI2lmICFkZWZpbmVkKF9fUkVJU0VSNF9GU0RBVEFfSF9fKQorI2RlZmluZSBf
X1JFSVNFUjRfRlNEQVRBX0hfXworCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJrYXNz
aWduLmgiCisjaW5jbHVkZSAic2VhbC5oIgorI2luY2x1ZGUgInR5cGVfc2FmZV9oYXNoLmgiCisj
aW5jbHVkZSAicGx1Z2luL2ZpbGUvZmlsZS5oIgorI2luY2x1ZGUgInJlYWRhaGVhZC5oIgorCisv
KgorICogY29tbWVudCBhYm91dCByZWlzZXI0X2RlbnRyeV9mc2RhdGEKKyAqCisgKgorICovCisK
Ky8qCisgKiBsb2NraW5nOiBmaWVsZHMgb2YgcGVyIGZpbGUgZGVzY3JpcHRvciByZWFkZGlyX3Bv
cyBhbmQgLT5mX3BvcyBhcmUKKyAqIHByb3RlY3RlZCBieSAtPmlfbXV0ZXggb24gaW5vZGUuIFVu
ZGVyIHRoaXMgbG9jayBmb2xsb3dpbmcgaW52YXJpYW50CisgKiBob2xkczoKKyAqCisgKiAgICAg
ZmlsZSBkZXNjcmlwdG9yIGlzICJsb29raW5nIiBhdCB0aGUgZW50cnlfbm8tdGggZGlyZWN0b3J5
IGVudHJ5IGZyb20KKyAqICAgICB0aGUgYmVnaW5uaW5nIG9mIGRpcmVjdG9yeS4gVGhpcyBlbnRy
eSBoYXMga2V5IGRpcl9lbnRyeV9rZXkgYW5kIGlzCisgKiAgICAgcG9zLXRoIGVudHJ5IHdpdGgg
ZHVwbGljYXRlLWtleSBzZXF1ZW5jZS4KKyAqCisgKi8KKworLyogbG9naWNhbCBwb3NpdGlvbiB3
aXRoaW4gZGlyZWN0b3J5ICovCitzdHJ1Y3QgZGlyX3BvcyB7CisJLyoga2V5IG9mIGRpcmVjdG9y
eSBlbnRyeSAoYWN0dWFsbHksIHBhcnQgb2YgYSBrZXkgc3VmZmljaWVudCB0bworCSAgIGlkZW50
aWZ5IGRpcmVjdG9yeSBlbnRyeSkgICovCisJZGVfaWQgZGlyX2VudHJ5X2tleTsKKwkvKiBvcmRp
bmFsIG51bWJlciBvZiBkaXJlY3RvcnkgZW50cnkgYW1vbmcgYWxsIGVudHJpZXMgd2l0aCB0aGUg
c2FtZQorCSAgIGtleS4gKFN0YXJ0aW5nIGZyb20gMC4pICovCisJdW5zaWduZWQgcG9zOworfTsK
Kworc3RydWN0IHJlYWRkaXJfcG9zIHsKKwkvKiBmX3BvcyBjb3JyZXNwb25kaW5nIHRvIHRoaXMg
cmVhZGRpciBwb3NpdGlvbiAqLworCV9fdTY0IGZwb3M7CisJLyogbG9naWNhbCBwb3NpdGlvbiB3
aXRoaW4gZGlyZWN0b3J5ICovCisJc3RydWN0IGRpcl9wb3MgcG9zaXRpb247CisJLyogbG9naWNh
bCBudW1iZXIgb2YgZGlyZWN0b3J5IGVudHJ5IHdpdGhpbgorCSAgIGRpcmVjdG9yeSAgKi8KKwlf
X3U2NCBlbnRyeV9ubzsKK307CisKKy8qCisgKiB0aGlzIGlzIHVzZWQgdG8gc3BlZWQgdXAgbG9v
a3VwcyBmb3IgZGlyZWN0b3J5IGVudHJ5OiBvbiBpbml0aWFsIGNhbGwgdG8KKyAqIC0+bG9va3Vw
KCkgc2VhbCBhbmQgY29vcmQgb2YgZGlyZWN0b3J5IGVudHJ5IChpZiBmb3VuZCwgdGhhdCBpcykg
YXJlIHN0b3JlZAorICogaW4gc3RydWN0IGRlbnRyeSBhbmQgcmV1c2VkIGxhdGVyIHRvIGF2b2lk
IHRyZWUgdHJhdmVyc2Fscy4KKyAqLworc3RydWN0IGRlX2xvY2F0aW9uIHsKKwkvKiBzZWFsIGNv
dmVyaW5nIGRpcmVjdG9yeSBlbnRyeSAqLworCXNlYWxfdCBlbnRyeV9zZWFsOworCS8qIGNvb3Jk
IG9mIGRpcmVjdG9yeSBlbnRyeSAqLworCWNvb3JkX3QgZW50cnlfY29vcmQ7CisJLyogb3JkaW5h
bCBudW1iZXIgb2YgZGlyZWN0b3J5IGVudHJ5IGFtb25nIGFsbCBlbnRyaWVzIHdpdGggdGhlIHNh
bWUKKwkgICBrZXkuIChTdGFydGluZyBmcm9tIDAuKSAqLworCWludCBwb3M7Cit9OworCisvKioK
KyAqIHJlaXNlcjRfZGVudHJ5X2ZzZGF0YSAtIHJlaXNlcjQtc3BlY2lmaWMgZGF0YSBhdHRhY2hl
ZCB0byBkZW50cmllcworICoKKyAqIFRoaXMgaXMgYWxsb2NhdGVkIGR5bmFtaWNhbGx5IGFuZCBy
ZWxlYXNlZCBpbiBkX29wLT5kX3JlbGVhc2UoKQorICoKKyAqIEN1cnJlbnRseSBpdCBvbmx5IGNv
bnRhaW5zIGNhY2hlZCBsb2NhdGlvbiAoaGludCkgb2YgZGlyZWN0b3J5IGVudHJ5LCBidXQKKyAq
IGl0IGlzIGV4cGVjdGVkIHRoYXQgb3RoZXIgaW5mb3JtYXRpb24gd2lsbCBiZSBhY2N1bXVsYXRl
ZCBoZXJlLgorICovCitzdHJ1Y3QgcmVpc2VyNF9kZW50cnlfZnNkYXRhIHsKKwkvKgorCSAqIGhl
cmUgd2lsbCBnbyBmaWVsZHMgZmlsbGVkIGJ5IC0+bG9va3VwKCkgdG8gc3BlZWR1cCBuZXh0CisJ
ICogY3JlYXRlL3VubGluaywgbGlrZSBibG9ja25yIG9mIHpub2RlIHdpdGggc3RhdC1kYXRhLCBv
ciBrZXkgb2YKKwkgKiBzdGF0LWRhdGEuCisJICovCisJc3RydWN0IGRlX2xvY2F0aW9uIGRlYzsK
KwlpbnQgc3RhdGVsZXNzOwkJLyogY3JlYXRlZCB0aHJvdWdoIHJlaXNlcjRfZGVjb2RlX2ZoLCBu
ZWVkcworCQkJCSAqIHNwZWNpYWwgdHJlYXRtZW50IGluIHJlYWRkaXIuICovCit9OworCitleHRl
cm4gaW50IHJlaXNlcjRfaW5pdF9kZW50cnlfZnNkYXRhKHZvaWQpOworZXh0ZXJuIHZvaWQgcmVp
c2VyNF9kb25lX2RlbnRyeV9mc2RhdGEodm9pZCk7CitleHRlcm4gc3RydWN0IHJlaXNlcjRfZGVu
dHJ5X2ZzZGF0YSAqcmVpc2VyNF9nZXRfZGVudHJ5X2ZzZGF0YShzdHJ1Y3QgZGVudHJ5ICopOwor
ZXh0ZXJuIHZvaWQgcmVpc2VyNF9mcmVlX2RlbnRyeV9mc2RhdGEoc3RydWN0IGRlbnRyeSAqZGVu
dHJ5KTsKKworLyoqCisgKiByZWlzZXI0X2ZpbGVfZnNkYXRhIC0gcmVpc2VyNC1zcGVjaWZpYyBk
YXRhIGF0dGFjaGVkIHRvIGZpbGUtPnByaXZhdGVfZGF0YQorICoKKyAqIFRoaXMgaXMgYWxsb2Nh
dGVkIGR5bmFtaWNhbGx5IGFuZCByZWxlYXNlZCBpbiBpbm9kZS0+aV9mb3AtPnJlbGVhc2UKKyAq
LwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9maWxlX2ZzZGF0YSB7CisJLyoKKwkgKiBwb2ludGVy
IGJhY2sgdG8gdGhlIHN0cnVjdCBmaWxlIHdoaWNoIHRoaXMgcmVpc2VyNF9maWxlX2ZzZGF0YSBp
cworCSAqIHBhcnQgb2YKKwkgKi8KKwlzdHJ1Y3QgZmlsZSAqYmFjazsKKwkvKiBkZXRhY2hlZCBj
dXJzb3IgZm9yIHN0YXRlbGVzcyByZWFkZGlyLiAqLworCXN0cnVjdCBkaXJfY3Vyc29yICpjdXJz
b3I7CisJLyoKKwkgKiBXZSBuZWVkIGJvdGggZGlyZWN0b3J5IGFuZCByZWd1bGFyIGZpbGUgcGFy
dHMgaGVyZSwgYmVjYXVzZSB0aGVyZQorCSAqIGFyZSBmaWxlIHN5c3RlbSBvYmplY3RzIHRoYXQg
YXJlIGZpbGVzIGFuZCBkaXJlY3Rvcmllcy4KKwkgKi8KKwlzdHJ1Y3QgeworCQkvKgorCQkgKiBw
b3NpdGlvbiBpbiBkaXJlY3RvcnkuIEl0IGlzIHVwZGF0ZWQgZWFjaCB0aW1lIGRpcmVjdG9yeSBp
cworCQkgKiBtb2RpZmllZAorCQkgKi8KKwkJc3RydWN0IHJlYWRkaXJfcG9zIHJlYWRkaXI7CisJ
CS8qIGhlYWQgb2YgdGhpcyBsaXN0IGlzIHJlaXNlcjRfaW5vZGUtPmxpc3RzLnJlYWRkaXJfbGlz
dCAqLworCQlzdHJ1Y3QgbGlzdF9oZWFkIGxpbmthZ2U7CisJfSBkaXI7CisJLyogaGludHMgdG8g
c3BlZWQgdXAgb3BlcmF0aW9ucyB3aXRoIHJlZ3VsYXIgZmlsZXM6IHJlYWQgYW5kIHdyaXRlLiAq
LworCXN0cnVjdCB7CisJCWhpbnRfdCBoaW50OworCX0gcmVnOworfSByZWlzZXI0X2ZpbGVfZnNk
YXRhOworCitleHRlcm4gaW50IHJlaXNlcjRfaW5pdF9maWxlX2ZzZGF0YSh2b2lkKTsKK2V4dGVy
biB2b2lkIHJlaXNlcjRfZG9uZV9maWxlX2ZzZGF0YSh2b2lkKTsKK2V4dGVybiByZWlzZXI0X2Zp
bGVfZnNkYXRhICpyZWlzZXI0X2dldF9maWxlX2ZzZGF0YShzdHJ1Y3QgZmlsZSAqKTsKK2V4dGVy
biB2b2lkIHJlaXNlcjRfZnJlZV9maWxlX2ZzZGF0YShzdHJ1Y3QgZmlsZSAqKTsKKworLyoKKyAq
IGRfY3Vyc29yIGlzIHJlaXNlcjRfZmlsZV9mc2RhdGEgbm90IGF0dGFjaGVkIHRvIHN0cnVjdCBm
aWxlLiBkX2N1cnNvcnMgYXJlCisgKiB1c2VkIHRvIGFkZHJlc3MgcHJvYmxlbSByZWlzZXI0IGhh
cyB3aXRoIHJlYWRkaXIgYWNjZXNzZXMgdmlhIE5GUy4gU2VlCisgKiBwbHVnaW4vZmlsZV9vcHNf
cmVhZGRpci5jIGZvciBtb3JlIGRldGFpbHMuCisgKi8KK3N0cnVjdCBkX2N1cnNvcl9rZXl7CisJ
X191MTYgY2lkOworCV9fdTY0IG9pZDsKK307CisKKy8qCisgKiBkZWZpbmUgc3RydWN0dXJlcyBk
X2N1cnNvcl9oYXNoX3RhYmxlIGRfY3Vyc29yX2hhc2hfbGluayB3aGljaCBhcmUgdXNlZCB0bwor
ICogbWFpbnRhaW4gaGFzaCB0YWJsZSBvZiBkaXJfY3Vyc29yLXMgaW4gcmVpc2VyNCdzIHN1cGVy
IGJsb2NrCisgKi8KK3R5cGVkZWYgc3RydWN0IGRpcl9jdXJzb3IgZGlyX2N1cnNvcjsKK1RZUEVf
U0FGRV9IQVNIX0RFQ0xBUkUoZF9jdXJzb3IsIGRpcl9jdXJzb3IpOworCitzdHJ1Y3QgZGlyX2N1
cnNvciB7CisJaW50IHJlZjsKKwlyZWlzZXI0X2ZpbGVfZnNkYXRhICpmc2RhdGE7CisKKwkvKiBs
aW5rIHRvIHJlaXNlcjQgc3VwZXIgYmxvY2sgaGFzaCB0YWJsZSBvZiBjdXJzb3JzICovCisJZF9j
dXJzb3JfaGFzaF9saW5rIGhhc2g7CisKKwkvKgorCSAqIHRoaXMgaXMgdG8gbGluayBjdXJzb3Jz
IHRvIHJlaXNlcjQgc3VwZXIgYmxvY2sncyByYWRpeCB0cmVlIG9mCisJICogY3Vyc29ycyBpZiB0
aGVyZSBhcmUgbW9yZSB0aGFuIG9uZSBjdXJzb3Igb2YgdGhlIHNhbWUgb2JqZWN0aWQKKwkgKi8K
KwlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7CisJc3RydWN0IGRfY3Vyc29yX2tleSBrZXk7CisJc3Ry
dWN0IGRfY3Vyc29yX2luZm8gKmluZm87CisJLyogbGlzdCBvZiB1bnVzZWQgY3Vyc29ycyAqLwor
CXN0cnVjdCBsaXN0X2hlYWQgYWxpc3Q7Cit9OworCitleHRlcm4gaW50IHJlaXNlcjRfaW5pdF9k
X2N1cnNvcih2b2lkKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9uZV9kX2N1cnNvcih2b2lkKTsK
KworZXh0ZXJuIGludCByZWlzZXI0X2luaXRfc3VwZXJfZF9pbmZvKHN0cnVjdCBzdXBlcl9ibG9j
ayAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9uZV9zdXBlcl9kX2luZm8oc3RydWN0IHN1cGVy
X2Jsb2NrICopOworCitleHRlcm4gbG9mZl90IHJlaXNlcjRfZ2V0X2Rpcl9mcG9zKHN0cnVjdCBm
aWxlICosIGxvZmZfdCk7CitleHRlcm4gaW50IHJlaXNlcjRfYXR0YWNoX2ZzZGF0YShzdHJ1Y3Qg
ZmlsZSAqLCBsb2ZmX3QgKiwgc3RydWN0IGlub2RlICopOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9k
ZXRhY2hfZnNkYXRhKHN0cnVjdCBmaWxlICopOworCisvKiB0aGVzZSBhcmUgbmVlZGVkIGZvciAi
c3RhdGVsZXNzIiByZWFkZGlyLiBTZWUgcGx1Z2luL2ZpbGVfb3BzX3JlYWRkaXIuYyBmb3IKKyAg
IG1vcmUgZGV0YWlscyAqLwordm9pZCByZWlzZXI0X2Rpc3Bvc2VfY3Vyc29ycyhzdHJ1Y3QgaW5v
ZGUgKmlub2RlKTsKK3ZvaWQgcmVpc2VyNF9sb2FkX2N1cnNvcnMoc3RydWN0IGlub2RlICppbm9k
ZSk7Cit2b2lkIHJlaXNlcjRfa2lsbF9jdXJzb3JzKHN0cnVjdCBpbm9kZSAqaW5vZGUpOwordm9p
ZCByZWlzZXI0X2FkanVzdF9kaXJfZmlsZShzdHJ1Y3QgaW5vZGUgKmRpciwgY29uc3Qgc3RydWN0
IGRlbnRyeSAqZGUsCisJCQkgICAgIGludCBvZmZzZXQsIGludCBhZGopOworCisvKgorICogdGhp
cyBzdHJ1Y3R1cmUgaXMgZW1iZWRkZWQgdG8gcmVpc2U0X3N1cGVyX2luZm9fZGF0YS4gSXQgbWFp
bnRhaW5zIGRfY3Vyc29ycworICogKGRldGFjaGVkIHJlYWRkaXIgc3RhdGUpLiBTZWUgcGx1Z2lu
L2ZpbGVfb3BzX3JlYWRkaXIuYyBmb3IgbW9yZSBkZXRhaWxzLgorICovCitzdHJ1Y3QgZF9jdXJz
b3JfaW5mbyB7CisJZF9jdXJzb3JfaGFzaF90YWJsZSB0YWJsZTsKKwlzdHJ1Y3QgcmFkaXhfdHJl
ZV9yb290IHRyZWU7Cit9OworCisvKiBzcGlubG9jayBwcm90ZWN0aW5nIHJlYWRkaXIgY3Vyc29y
cyAqLworZXh0ZXJuIHNwaW5sb2NrX3QgZF9jX2xvY2s7CisKKy8qIF9fUkVJU0VSNF9GU0RBVEFf
SF9fICovCisjZW5kaWYKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRp
b24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4
CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiAxMjAKKyAqIEVuZDoKKyAqLwpkaWZm
IC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2luaXRf
c3VwZXIuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9pbml0X3N1cGVyLmMKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvaW5pdF9zdXBlci5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAw
MDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9pbml0X3N1cGVyLmMJMjAy
MC0wMi0wNSAyMDo1Mzo0MS40NTMyMjIxNzcgKzAxMDAKQEAgLTAsMCArMSw4MDYgQEAKKy8qIENv
cHlyaWdodCBieSBIYW5zIFJlaXNlciwgMjAwMyAqLworCisjaW5jbHVkZSAic3VwZXIuaCIKKyNp
bmNsdWRlICJpbm9kZS5oIgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW5fc2V0LmgiCisKKyNpbmNs
dWRlIDxsaW51eC9zd2FwLmg+CisKKy8qKgorICogaW5pdF9mc19pbmZvIC0gYWxsb2NhdGUgcmVp
c2VyNCBzcGVjaWZpYyBzdXBlciBibG9jaworICogQHN1cGVyOiBzdXBlciBibG9jayBvZiBmaWxl
c3lzdGVtCisgKgorICogQWxsb2NhdGVzIGFuZCBpbml0aWFsaXplIHJlaXNlcjRfc3VwZXJfaW5m
b19kYXRhLCBhdHRhY2hlcyBpdCB0bworICogc3VwZXItPnNfZnNfaW5mbywgaW5pdGlhbGl6ZXMg
c3RydWN0dXJlcyBtYWludGFpbmluZyBkX2N1cnNvci1zLgorICovCitpbnQgcmVpc2VyNF9pbml0
X2ZzX2luZm8oc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlyZWlzZXI0X3N1cGVyX2lu
Zm9fZGF0YSAqc2JpbmZvOworCisJc2JpbmZvID0ga3phbGxvYyhzaXplb2YocmVpc2VyNF9zdXBl
cl9pbmZvX2RhdGEpLAorCQkJIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoIXNi
aW5mbykKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKworCXN1cGVyLT5zX2ZzX2luZm8gPSBz
YmluZm87CisJc3VwZXItPnNfb3AgPSBOVUxMOworCisJT05fREVCVUcoSU5JVF9MSVNUX0hFQUQo
JnNiaW5mby0+YWxsX2pub2RlcykpOworCU9OX0RFQlVHKHNwaW5fbG9ja19pbml0KCZzYmluZm8t
PmFsbF9ndWFyZCkpOworCisJbXV0ZXhfaW5pdCgmc2JpbmZvLT5kZWxldGVfbXV0ZXgpOworCXNw
aW5fbG9ja19pbml0KCYoc2JpbmZvLT5ndWFyZCkpOworCisJLyogIGluaXRpYWxpemUgcGVyLXN1
cGVyLWJsb2NrIGRfY3Vyc29yIHJlc291cmNlcyAqLworCXJlaXNlcjRfaW5pdF9zdXBlcl9kX2lu
Zm8oc3VwZXIpOworCisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogUmVsZWFzZSByZWlzZXI0IHNw
ZWNpZmljIHN1cGVyIGJsb2NrCisgKgorICogcmVsZWFzZSBwZXItc3VwZXItYmxvY2sgZF9jdXJz
b3IgcmVzb3VyY2VzCisgKiBmcmVlIHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhLgorICovCit2b2lk
IHJlaXNlcjRfZG9uZV9mc19pbmZvKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJYXNz
ZXJ0KCJ6YW0tOTkwIiwgc3VwZXItPnNfZnNfaW5mbyAhPSBOVUxMKTsKKworCXJlaXNlcjRfZG9u
ZV9zdXBlcl9kX2luZm8oc3VwZXIpOworCWtmcmVlKHN1cGVyLT5zX2ZzX2luZm8pOworCXN1cGVy
LT5zX2ZzX2luZm8gPSBOVUxMOworfQorCisvKiB0eXBlIG9mIG9wdGlvbiBwYXJzZWFibGUgYnkg
cGFyc2Vfb3B0aW9uKCkgKi8KK3R5cGVkZWYgZW51bSB7CisJLyogdmFsdWUgb2Ygb3B0aW9uIGlz
IGFyYml0cmFyeSBzdHJpbmcgKi8KKwlPUFRfU1RSSU5HLAorCisJLyoKKwkgKiBvcHRpb24gc3Bl
Y2lmaWVzIGJpdCBpbiBhIGJpdG1hc2suIFdoZW4gb3B0aW9uIGlzIHNldCAtIGJpdCBpbgorCSAq
IHNiaW5mby0+ZnNfZmxhZ3MgaXMgc2V0LiBFeGFtcGxlcyBhcmUgYnNkZ3JvdXBzLCAzMmJpdHRp
bWVzLCBtdGZsdXNoLAorCSAqIGRvbnRfbG9hZF9iaXRtYXAsIGF0b21pY193cml0ZS4KKwkgKi8K
KwlPUFRfQklULAorCisJLyoKKwkgKiB2YWx1ZSBvZiBvcHRpb24gc2hvdWxkIGNvbmZvcm0gdG8g
c3ByaW50ZigpIGZvcm1hdC4gRXhhbXBsZXMgYXJlCisJICogdG1nci5hdG9tX21heF9zaXplPU4s
IHRtZ3IuYXRvbV9tYXhfYWdlPU4KKwkgKi8KKwlPUFRfRk9STUFULAorCisJLyoKKwkgKiBvcHRp
b24gY2FuIHRha2Ugb25lIG9mIHByZWRlZmluZWQgdmFsdWVzLiBFeGFtcGxlIGlzIG9uZXJyb3I9
cGFuaWMgb3IKKwkgKiBvbmVycm9yPXJlbW91bnQtcm8KKwkgKi8KKwlPUFRfT05FT0YsCisKKwkv
KgorCSAqIG9wdGlvbiB0YWtlIG9uZSBvZiB0eG1vZCBwbHVnaW4gbGFiZWxzLgorCSAqIEV4YW1w
bGUgaXMgInR4bW9kPWpvdXJuYWwiIG9yICJ0eG1vZD13YSIKKwkgKi8KKwlPUFRfVFhNT0QsCit9
IG9wdF90eXBlX3Q7CisKKyNpZiAwCitzdHJ1Y3Qgb3B0X2JpdG1hc2tfYml0IHsKKwljb25zdCBj
aGFyICpiaXRfbmFtZTsKKwlpbnQgYml0X25yOworfTsKKyNlbmRpZgorCisjZGVmaW5lIE1BWF9P
TkVPRl9MSVNUIDEwCisKKy8qIGRlc2NyaXB0aW9uIG9mIG9wdGlvbiBwYXJzZWFibGUgYnkgcGFy
c2Vfb3B0aW9uKCkgKi8KK3N0cnVjdCBvcHRfZGVzYyB7CisJLyogb3B0aW9uIG5hbWUuCisKKwkg
ICBwYXJzZWQgcG9ydGlvbiBvZiBzdHJpbmcgaGFzIGEgZm9ybSAibmFtZT12YWx1ZSIuCisJICov
CisJY29uc3QgY2hhciAqbmFtZTsKKwkvKiB0eXBlIG9mIG9wdGlvbiAqLworCW9wdF90eXBlX3Qg
dHlwZTsKKwl1bmlvbiB7CisJCS8qIHdoZXJlIHRvIHN0b3JlIHZhbHVlIG9mIHN0cmluZyBvcHRp
b24gKHR5cGUgPT0gT1BUX1NUUklORykgKi8KKwkJY2hhciAqKnN0cmluZzsKKwkJLyogZGVzY3Jp
cHRpb24gb2YgYml0cyBmb3IgYml0IG9wdGlvbiAodHlwZSA9PSBPUFRfQklUKSAqLworCQlzdHJ1
Y3QgeworCQkJaW50IG5yOworCQkJdm9pZCAqYWRkcjsKKwkJfSBiaXQ7CisJCS8qIGRlc2NyaXB0
aW9uIG9mIGZvcm1hdCBhbmQgdGFyZ2V0cyBmb3IgZm9ybWF0IG9wdGlvbiAodHlwZQorCQkgICA9
PSBPUFRfRk9STUFUKSAqLworCQlzdHJ1Y3QgeworCQkJY29uc3QgY2hhciAqZm9ybWF0OworCQkJ
aW50IG5yX2FyZ3M7CisJCQl2b2lkICphcmcxOworCQkJdm9pZCAqYXJnMjsKKwkJCXZvaWQgKmFy
ZzM7CisJCQl2b2lkICphcmc0OworCQl9IGY7CisJCXN0cnVjdCB7CisJCQlpbnQgKnJlc3VsdDsK
KwkJCWNvbnN0IGNoYXIgKmxpc3RbTUFYX09ORU9GX0xJU1RdOworCQl9IG9uZW9mOworCQlzdHJ1
Y3QgeworCQkJcmVpc2VyNF90eG1vZF9pZCAqcmVzdWx0OworCQl9IHR4bW9kOworCQlzdHJ1Y3Qg
eworCQkJdm9pZCAqYWRkcjsKKwkJCWludCBucl9iaXRzOworCQkJLyogc3RydWN0IG9wdF9iaXRt
YXNrX2JpdCAqYml0czsgKi8KKwkJfSBiaXRtYXNrOworCX0gdTsKK307CisKKy8qKgorICogcGFy
c2Vfb3B0aW9uIC0gcGFyc2Ugb25lIG9wdGlvbgorICogQG9wdF9zdHJpbjogc3RhcnRpbmcgcG9p
bnQgb2YgcGFyc2luZworICogQG9wdDogb3B0aW9uIGRlc2NyaXB0aW9uCisgKgorICogZm9vPWJh
ciwKKyAqIF4gICBeICBeCisgKiB8ICAgfCAgKy0tIHJlcGxhY2VkIHRvICdcMCcKKyAqIHwgICAr
LS0gdmFsX3N0YXJ0CisgKiArLS0gb3B0X3N0cmluZworICogRmlndXJlcyBvdXQgb3B0aW9uIHR5
cGUgYW5kIGhhbmRsZXMgb3B0aW9uIGNvcnJlc3BvbmRpbmdseS4KKyAqLworc3RhdGljIGludCBw
YXJzZV9vcHRpb24oY2hhciAqb3B0X3N0cmluZywgc3RydWN0IG9wdF9kZXNjICpvcHQpCit7CisJ
Y2hhciAqdmFsX3N0YXJ0OworCWludCByZXN1bHQ7CisJY29uc3QgY2hhciAqZXJyX21zZzsKKwor
CS8qIE5PVEUtTklLSVRBIHRoaW5rIGFib3V0IHVzaW5nIGxpYi9jbWRsaW5lLmMgZnVuY3Rpb25z
IGhlcmUuICovCisKKwl2YWxfc3RhcnQgPSBzdHJjaHIob3B0X3N0cmluZywgJz0nKTsKKwlpZiAo
dmFsX3N0YXJ0ICE9IE5VTEwpIHsKKwkJKnZhbF9zdGFydCA9ICdcMCc7CisJCSsrdmFsX3N0YXJ0
OworCX0KKworCWVycl9tc2cgPSBOVUxMOworCXJlc3VsdCA9IDA7CisJc3dpdGNoIChvcHQtPnR5
cGUpIHsKKwljYXNlIE9QVF9TVFJJTkc6CisJCWlmICh2YWxfc3RhcnQgPT0gTlVMTCkgeworCQkJ
ZXJyX21zZyA9ICJTdHJpbmcgYXJnIG1pc3NpbmciOworCQkJcmVzdWx0ID0gUkVURVJSKC1FSU5W
QUwpOworCQl9IGVsc2UKKwkJCSpvcHQtPnUuc3RyaW5nID0gdmFsX3N0YXJ0OworCQlicmVhazsK
KwljYXNlIE9QVF9CSVQ6CisJCWlmICh2YWxfc3RhcnQgIT0gTlVMTCkKKwkJCWVycl9tc2cgPSAi
VmFsdWUgaWdub3JlZCI7CisJCWVsc2UKKwkJCXNldF9iaXQob3B0LT51LmJpdC5uciwgb3B0LT51
LmJpdC5hZGRyKTsKKwkJYnJlYWs7CisJY2FzZSBPUFRfRk9STUFUOgorCQlpZiAodmFsX3N0YXJ0
ID09IE5VTEwpIHsKKwkJCWVycl9tc2cgPSAiRm9ybWF0dGVkIGFyZyBtaXNzaW5nIjsKKwkJCXJl
c3VsdCA9IFJFVEVSUigtRUlOVkFMKTsKKwkJCWJyZWFrOworCQl9CisJCWlmIChzc2NhbmYodmFs
X3N0YXJ0LCBvcHQtPnUuZi5mb3JtYXQsCisJCQkgICBvcHQtPnUuZi5hcmcxLCBvcHQtPnUuZi5h
cmcyLCBvcHQtPnUuZi5hcmczLAorCQkJICAgb3B0LT51LmYuYXJnNCkgIT0gb3B0LT51LmYubnJf
YXJncykgeworCQkJZXJyX21zZyA9ICJXcm9uZyBjb252ZXJzaW9uIjsKKwkJCXJlc3VsdCA9IFJF
VEVSUigtRUlOVkFMKTsKKwkJfQorCQlicmVhazsKKwljYXNlIE9QVF9PTkVPRjoKKwkJeworCQkJ
aW50IGkgPSAwOworCisJCQlpZiAodmFsX3N0YXJ0ID09IE5VTEwpIHsKKwkJCQllcnJfbXNnID0g
IlZhbHVlIGlzIG1pc3NpbmciOworCQkJCXJlc3VsdCA9IFJFVEVSUigtRUlOVkFMKTsKKwkJCQli
cmVhazsKKwkJCX0KKwkJCWVycl9tc2cgPSAiV3Jvbmcgb3B0aW9uIHZhbHVlIjsKKwkJCXJlc3Vs
dCA9IFJFVEVSUigtRUlOVkFMKTsKKwkJCXdoaWxlIChvcHQtPnUub25lb2YubGlzdFtpXSkgewor
CQkJCWlmICghc3RyY21wKG9wdC0+dS5vbmVvZi5saXN0W2ldLCB2YWxfc3RhcnQpKSB7CisJCQkJ
CXJlc3VsdCA9IDA7CisJCQkJCWVycl9tc2cgPSBOVUxMOworCQkJCQkqb3B0LT51Lm9uZW9mLnJl
c3VsdCA9IGk7CisJCQkJCWJyZWFrOworCQkJCX0KKwkJCQlpKys7CisJCQl9CisJCQlicmVhazsK
KwkJfQorCQlicmVhazsKKwljYXNlIE9QVF9UWE1PRDoKKwkJeworCQkJcmVpc2VyNF90eG1vZF9p
ZCBpID0gMDsKKworCQkJaWYgKHZhbF9zdGFydCA9PSBOVUxMKSB7CisJCQkJZXJyX21zZyA9ICJW
YWx1ZSBpcyBtaXNzaW5nIjsKKwkJCQlyZXN1bHQgPSBSRVRFUlIoLUVJTlZBTCk7CisJCQkJYnJl
YWs7CisJCQl9CisJCQllcnJfbXNnID0gIldyb25nIG9wdGlvbiB2YWx1ZSI7CisJCQlyZXN1bHQg
PSBSRVRFUlIoLUVJTlZBTCk7CisJCQl3aGlsZSAoaSA8IExBU1RfVFhNT0RfSUQpIHsKKwkJCQlp
ZiAoIXN0cmNtcCh0eG1vZF9wbHVnaW5zW2ldLmgubGFiZWwsCisJCQkJCSAgICB2YWxfc3RhcnQp
KSB7CisJCQkJCXJlc3VsdCA9IDA7CisJCQkJCWVycl9tc2cgPSBOVUxMOworCQkJCQkqb3B0LT51
LnR4bW9kLnJlc3VsdCA9IGk7CisJCQkJCWJyZWFrOworCQkJCX0KKwkJCQlpKys7CisJCQl9CisJ
CQlicmVhazsKKwkJfQorCWRlZmF1bHQ6CisJCXdyb25nX3JldHVybl92YWx1ZSgibmlraXRhLTIx
MDAiLCAib3B0IC0+IHR5cGUiKTsKKwkJYnJlYWs7CisJfQorCWlmIChlcnJfbXNnICE9IE5VTEwp
IHsKKwkJd2FybmluZygibmlraXRhLTI0OTYiLCAiJXMgd2hlbiBwYXJzaW5nIG9wdGlvbiBcIiVz
JXMlc1wiIiwKKwkJCWVycl9tc2csIG9wdC0+bmFtZSwgdmFsX3N0YXJ0ID8gIj0iIDogIiIsCisJ
CQl2YWxfc3RhcnQgPyA6ICIiKTsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBw
YXJzZV9vcHRpb25zIC0gcGFyc2UgcmVpc2VyNCBtb3VudCBvcHRpb25zCisgKiBAb3B0X3N0cmlu
Zzogc3RhcnRpbmcgcG9pbnQKKyAqIEBvcHRzOiBhcnJheSBvZiBvcHRpb24gZGVzY3JpcHRpb24K
KyAqIEBucl9vcHRzOiBudW1iZXIgb2YgZWxlbWVudHMgaW4gQG9wdHMKKyAqCisgKiBQYXJzZXMg
Y29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgcmVpc2VyNCBtb3VudCBvcHRpb25zLgorICovCitzdGF0
aWMgaW50IHBhcnNlX29wdGlvbnMoY2hhciAqb3B0X3N0cmluZywgc3RydWN0IG9wdF9kZXNjICpv
cHRzLCBpbnQgbnJfb3B0cykKK3sKKwlpbnQgcmVzdWx0OworCisJcmVzdWx0ID0gMDsKKwl3aGls
ZSAoKHJlc3VsdCA9PSAwKSAmJiBvcHRfc3RyaW5nICYmICpvcHRfc3RyaW5nKSB7CisJCWludCBq
OworCQljaGFyICpuZXh0OworCisJCW5leHQgPSBzdHJjaHIob3B0X3N0cmluZywgJywnKTsKKwkJ
aWYgKG5leHQgIT0gTlVMTCkgeworCQkJKm5leHQgPSAnXDAnOworCQkJKytuZXh0OworCQl9CisJ
CWZvciAoaiA9IDA7IGogPCBucl9vcHRzOyArK2opIHsKKwkJCWlmICghc3RybmNtcChvcHRfc3Ry
aW5nLCBvcHRzW2pdLm5hbWUsCisJCQkJICAgICBzdHJsZW4ob3B0c1tqXS5uYW1lKSkpIHsKKwkJ
CQlyZXN1bHQgPSBwYXJzZV9vcHRpb24ob3B0X3N0cmluZywgJm9wdHNbal0pOworCQkJCWJyZWFr
OworCQkJfQorCQl9CisJCWlmIChqID09IG5yX29wdHMpIHsKKwkJCXdhcm5pbmcoIm5pa2l0YS0y
MzA3IiwgIlVucmVjb2duaXplZCBvcHRpb246IFwiJXNcIiIsCisJCQkJb3B0X3N0cmluZyk7CisJ
CQkvKiB0cmFkaXRpb25hbGx5LCAtRUlOVkFMIGlzIHJldHVybmVkIG9uIHdyb25nIG1vdW50CisJ
CQkgICBvcHRpb24gKi8KKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlOVkFMKTsKKwkJfQorCQlvcHRf
c3RyaW5nID0gbmV4dDsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworI2RlZmluZSBOVU1fT1BU
KGxhYmVsLCBmbXQsIGFkZHIpCQkJCVwKKwkJewkJCQkJCVwKKwkJCS5uYW1lID0gKGxhYmVsKSwJ
CQlcCisJCQkudHlwZSA9IE9QVF9GT1JNQVQsCQkJXAorCQkJLnUgPSB7CQkJCQlcCisJCQkJLmYg
PSB7CQkJCVwKKwkJCQkJLmZvcm1hdCAgPSAoZm10KSwJXAorCQkJCQkubnJfYXJncyA9IDEsCQlc
CisJCQkJCS5hcmcxID0gKGFkZHIpLAkJXAorCQkJCQkuYXJnMiA9IE5VTEwsCQlcCisJCQkJCS5h
cmczID0gTlVMTCwJCVwKKwkJCQkJLmFyZzQgPSBOVUxMCQlcCisJCQkJfQkJCQlcCisJCQl9CQkJ
CQlcCisJCX0KKworI2RlZmluZSBTQl9GSUVMRF9PUFQoZmllbGQsIGZtdCkgTlVNX09QVCgjZmll
bGQsIGZtdCwgJnNiaW5mby0+ZmllbGQpCisKKyNkZWZpbmUgQklUX09QVChsYWJlbCwgYml0bnIp
CQkJCQlcCisJewkJCQkJCQlcCisJCS5uYW1lID0gbGFiZWwsCQkJCQlcCisJCS50eXBlID0gT1BU
X0JJVCwJCQkJXAorCQkudSA9IHsJCQkJCQlcCisJCQkuYml0ID0gewkJCQlcCisJCQkJLm5yID0g
Yml0bnIsCQkJXAorCQkJCS5hZGRyID0gJnNiaW5mby0+ZnNfZmxhZ3MJXAorCQkJfQkJCQkJXAor
CQl9CQkJCQkJXAorCX0KKworI2RlZmluZSBNQVhfTlJfT1BUSU9OUyAoMzApCisKKyNpZiBSRUlT
RVI0X0RFQlVHCisjICBkZWZpbmUgT1BUX0FSUkFZX0NIRUNLKG9wdCwgYXJyYXkpCQkJCQlcCisJ
aWYgKChvcHQpID4gKGFycmF5KSArIE1BWF9OUl9PUFRJT05TKSB7CQkJCVwKKwkJd2FybmluZygi
emFtLTEwNDYiLCAib3B0IGFycmF5IGlzIG92ZXJsb2FkZWQiKTsgYnJlYWs7CVwKKwl9CisjZWxz
ZQorIyAgIGRlZmluZSBPUFRfQVJSQVlfQ0hFQ0sob3B0LCBhcnJheSkgbm9vcAorI2VuZGlmCisK
KyNkZWZpbmUgUFVTSF9PUFQob3B0LCBhcnJheSwgLi4uKQkJXAorZG8gewkJCQkJCVwKKwlzdHJ1
Y3Qgb3B0X2Rlc2MgbyA9IF9fVkFfQVJHU19fOwlcCisJT1BUX0FSUkFZX0NIRUNLKG9wdCwgYXJy
YXkpOwkJXAorCSoob3B0KSArKyA9IG87CQkJCVwKK30gd2hpbGUgKDApCisKK3N0YXRpYyBub2lu
bGluZSB2b2lkIHB1c2hfc2JfZmllbGRfb3B0cyhzdHJ1Y3Qgb3B0X2Rlc2MgKipwLAorCQkJCQlz
dHJ1Y3Qgb3B0X2Rlc2MgKm9wdHMsCisJCQkJCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmlu
Zm8pCit7CisjZGVmaW5lIFBVU0hfU0JfRklFTERfT1BUKGZpZWxkLCBmb3JtYXQpCQlcCisJUFVT
SF9PUFQoKnAsIG9wdHMsIFNCX0ZJRUxEX09QVChmaWVsZCwgZm9ybWF0KSkKKwkvKgorCSAqIHRt
Z3IuYXRvbV9tYXhfc2l6ZT1OCisJICogQXRvbXMgY29udGFpbmluZyBtb3JlIHRoYW4gTiBibG9j
a3Mgd2lsbCBiZSBmb3JjZWQgdG8gY29tbWl0LiBOIGlzCisJICogZGVjaW1hbC4KKwkgKi8KKwlQ
VVNIX1NCX0ZJRUxEX09QVCh0bWdyLmF0b21fbWF4X3NpemUsICIldSIpOworCS8qCisJICogdG1n
ci5hdG9tX21heF9hZ2U9TgorCSAqIEF0b21zIG9sZGVyIHRoYW4gTiBzZWNvbmRzIHdpbGwgYmUg
Zm9yY2VkIHRvIGNvbW1pdC4gTiBpcyBkZWNpbWFsLgorCSAqLworCVBVU0hfU0JfRklFTERfT1BU
KHRtZ3IuYXRvbV9tYXhfYWdlLCAiJXUiKTsKKwkvKgorCSAqIHRtZ3IuYXRvbV9taW5fc2l6ZT1O
CisJICogSW4gY29tbWl0dGluZyBhbiBhdG9tIHRvIGZyZWUgZGlydHkgcGFnZXMsIGZvcmNlIHRo
ZSBhdG9tIGxlc3MgdGhhbgorCSAqIE4gaW4gc2l6ZSB0byBmdXNlIHdpdGggYW5vdGhlciBvbmUu
CisJICovCisJUFVTSF9TQl9GSUVMRF9PUFQodG1nci5hdG9tX21pbl9zaXplLCAiJXUiKTsKKwkv
KgorCSAqIHRtZ3IuYXRvbV9tYXhfZmx1c2hlcnM9TgorCSAqIGxpbWl0IG9mIGNvbmN1cnJlbnQg
Zmx1c2hlcnMgZm9yIG9uZSBhdG9tLiAwIG1lYW5zIG5vIGxpbWl0LgorCSAqLworCVBVU0hfU0Jf
RklFTERfT1BUKHRtZ3IuYXRvbV9tYXhfZmx1c2hlcnMsICIldSIpOworCS8qCisJICogdHJlZS5j
YmtfY2FjaGVfc2xvdHM9TgorCSAqIE51bWJlciBvZiBzbG90cyBpbiB0aGUgY2JrIGNhY2hlLgor
CSAqLworCVBVU0hfU0JfRklFTERfT1BUKHRyZWUuY2JrX2NhY2hlLm5yX3Nsb3RzLCAiJXUiKTsK
KwkvKgorCSAqIElmIGZsdXNoIGZpbmRzIG1vcmUgdGhhbiBGTFVTSF9SRUxPQ0FURV9USFJFU0hP
TEQgYWRqYWNlbnQgZGlydHkKKwkgKiBsZWFmLWxldmVsIGJsb2NrcyBpdCB3aWxsIGZvcmNlIHRo
ZW0gdG8gYmUgcmVsb2NhdGVkLgorCSAqLworCVBVU0hfU0JfRklFTERfT1BUKGZsdXNoLnJlbG9j
YXRlX3RocmVzaG9sZCwgIiV1Iik7CisJLyoKKwkgKiBJZiBmbHVzaCBmaW5kcyBjYW4gZmluZCBh
IGJsb2NrIGFsbG9jYXRpb24gY2xvc2VyIHRoYW4gYXQgbW9zdAorCSAqIEZMVVNIX1JFTE9DQVRF
X0RJU1RBTkNFIGZyb20gdGhlIHByZWNlZGVyIGl0IHdpbGwgcmVsb2NhdGUgdG8gdGhhdAorCSAq
IHBvc2l0aW9uLgorCSAqLworCVBVU0hfU0JfRklFTERfT1BUKGZsdXNoLnJlbG9jYXRlX2Rpc3Rh
bmNlLCAiJXUiKTsKKwkvKgorCSAqIElmIHdlIGhhdmUgd3JpdHRlbiB0aGlzIG11Y2ggb3IgbW9y
ZSBibG9ja3MgYmVmb3JlIGVuY291bnRlcmluZyBidXN5CisJICogam5vZGUgaW4gZmx1c2ggbGlz
dCAtIGFib3J0IGZsdXNoaW5nIGhvcGluZyB0aGF0IG5leHQgdGltZSB3ZSBnZXQKKwkgKiBjYWxs
ZWQgdGhpcyBqbm9kZSB3aWxsIGJlIGNsZWFuIGFscmVhZHksIGFuZCB3ZSB3aWxsIHNhdmUgc29t
ZQorCSAqIHNlZWtzLgorCSAqLworCVBVU0hfU0JfRklFTERfT1BUKGZsdXNoLndyaXR0ZW5fdGhy
ZXNob2xkLCAiJXUiKTsKKwkvKiBUaGUgbWF4aW11bSBudW1iZXIgb2Ygbm9kZXMgdG8gc2NhbiBs
ZWZ0IG9uIGEgbGV2ZWwgZHVyaW5nIGZsdXNoLiAqLworCVBVU0hfU0JfRklFTERfT1BUKGZsdXNo
LnNjYW5fbWF4bm9kZXMsICIldSIpOworCS8qIHByZWZlcnJlZCBJTyBzaXplICovCisJUFVTSF9T
Ql9GSUVMRF9PUFQob3B0aW1hbF9pb19zaXplLCAiJXUiKTsKKwkvKiBjYXJyeSBmbGFncyB1c2Vk
IGZvciBpbnNlcnRpb24gb2YgbmV3IG5vZGVzICovCisJUFVTSF9TQl9GSUVMRF9PUFQodHJlZS5j
YXJyeS5uZXdfbm9kZV9mbGFncywgIiV1Iik7CisJLyogY2FycnkgZmxhZ3MgdXNlZCBmb3IgaW5z
ZXJ0aW9uIG9mIG5ldyBleHRlbnRzICovCisJUFVTSF9TQl9GSUVMRF9PUFQodHJlZS5jYXJyeS5u
ZXdfZXh0ZW50X2ZsYWdzLCAiJXUiKTsKKwkvKiBjYXJyeSBmbGFncyB1c2VkIGZvciBwYXN0ZSBv
cGVyYXRpb25zICovCisJUFVTSF9TQl9GSUVMRF9PUFQodHJlZS5jYXJyeS5wYXN0ZV9mbGFncywg
IiV1Iik7CisJLyogY2FycnkgZmxhZ3MgdXNlZCBmb3IgaW5zZXJ0IG9wZXJhdGlvbnMgKi8KKwlQ
VVNIX1NCX0ZJRUxEX09QVCh0cmVlLmNhcnJ5Lmluc2VydF9mbGFncywgIiV1Iik7CisKKyNpZmRl
ZiBDT05GSUdfUkVJU0VSNF9CQURCTE9DS1MKKwkvKgorCSAqIEFsdGVybmF0aXZlIG1hc3RlciBz
dXBlcmJsb2NrIGxvY2F0aW9uIGluIGNhc2UgaWYgaXQncyBvcmlnaW5hbAorCSAqIGxvY2F0aW9u
IGlzIG5vdCB3cml0ZWFibGUvYWNjZXNzYWJsZS4gVGhpcyBpcyBvZmZzZXQgaW4gQllURVMuCisJ
ICovCisJUFVTSF9TQl9GSUVMRF9PUFQoYWx0c3VwZXIsICIlbHUiKTsKKyNlbmRpZgorfQorCisv
KioKKyAqIHJlaXNlcjRfaW5pdF9zdXBlcl9kYXRhIC0gaW5pdGlhbGl6ZSByZWlzZXI0IHByaXZh
dGUgc3VwZXIgYmxvY2sKKyAqIEBzdXBlcjogc3VwZXIgYmxvY2sgdG8gaW5pdGlhbGl6ZQorICog
QG9wdF9zdHJpbmc6IGxpc3Qgb2YgcmVpc2VyNCBtb3VudCBvcHRpb25zCisgKgorICogU2V0cyB2
YXJpb3VzIHJlaXNlcjQgcGFyYW1ldGVycyB0byBkZWZhdWx0IHZhbHVlcy4gUGFyc2VzIG1vdW50
IG9wdGlvbnMgYW5kCisgKiBvdmVyd3JpdGVzIGRlZmF1bHQgc2V0dGluZ3MuCisgKi8KK2ludCBy
ZWlzZXI0X2luaXRfc3VwZXJfZGF0YShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLCBjaGFyICpv
cHRfc3RyaW5nKQoreworCWludCByZXN1bHQ7CisJc3RydWN0IG9wdF9kZXNjICpvcHRzLCAqcDsK
KwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoc3Vw
ZXIpOworCisJLyogaW5pdGlhbGl6ZSBzdXBlciwgZXhwb3J0LCBkZW50cnkgb3BlcmF0aW9ucyAq
LworCXNiaW5mby0+b3BzLnN1cGVyID0gcmVpc2VyNF9zdXBlcl9vcGVyYXRpb25zOworCXNiaW5m
by0+b3BzLmV4cG9ydCA9IHJlaXNlcjRfZXhwb3J0X29wZXJhdGlvbnM7CisJc2JpbmZvLT5vcHMu
ZGVudHJ5ID0gcmVpc2VyNF9kZW50cnlfb3BlcmF0aW9uczsKKwlzdXBlci0+c19vcCA9ICZzYmlu
Zm8tPm9wcy5zdXBlcjsKKwlzdXBlci0+c19leHBvcnRfb3AgPSAmc2JpbmZvLT5vcHMuZXhwb3J0
OworCisJLyogaW5pdGlhbGl6ZSB0cmFuc2FjdGlvbiBtYW5hZ2VyIHBhcmFtZXRlcnMgdG8gZGVm
YXVsdCB2YWx1ZXMgKi8KKwlzYmluZm8tPnRtZ3IuYXRvbV9tYXhfc2l6ZSA9IHRvdGFscmFtX3Bh
Z2VzKCkgLyA0OworCXNiaW5mby0+dG1nci5hdG9tX21heF9hZ2UgPSBSRUlTRVI0X0FUT01fTUFY
X0FHRSAvIEhaOworCXNiaW5mby0+dG1nci5hdG9tX21pbl9zaXplID0gMjU2OworCXNiaW5mby0+
dG1nci5hdG9tX21heF9mbHVzaGVycyA9IEFUT01fTUFYX0ZMVVNIRVJTOworCisJLyogaW5pdGlh
bGl6ZSBjYmsgY2FjaGUgcGFyYW1ldGVyICovCisJc2JpbmZvLT50cmVlLmNia19jYWNoZS5ucl9z
bG90cyA9IENCS19DQUNIRV9TTE9UUzsKKworCS8qIGluaXRpYWxpemUgZmx1c2ggcGFyYW1ldGVy
cyAqLworCXNiaW5mby0+Zmx1c2gucmVsb2NhdGVfdGhyZXNob2xkID0gRkxVU0hfUkVMT0NBVEVf
VEhSRVNIT0xEOworCXNiaW5mby0+Zmx1c2gucmVsb2NhdGVfZGlzdGFuY2UgPSBGTFVTSF9SRUxP
Q0FURV9ESVNUQU5DRTsKKwlzYmluZm8tPmZsdXNoLndyaXR0ZW5fdGhyZXNob2xkID0gRkxVU0hf
V1JJVFRFTl9USFJFU0hPTEQ7CisJc2JpbmZvLT5mbHVzaC5zY2FuX21heG5vZGVzID0gRkxVU0hf
U0NBTl9NQVhOT0RFUzsKKworCXNiaW5mby0+b3B0aW1hbF9pb19zaXplID0gUkVJU0VSNF9PUFRJ
TUFMX0lPX1NJWkU7CisKKwkvKiBwcmVsaW1pbmFyeSB0cmVlIGluaXRpYWxpemF0aW9ucyAqLwor
CXNiaW5mby0+dHJlZS5zdXBlciA9IHN1cGVyOworCXNiaW5mby0+dHJlZS5jYXJyeS5uZXdfbm9k
ZV9mbGFncyA9IFJFSVNFUjRfTkVXX05PREVfRkxBR1M7CisJc2JpbmZvLT50cmVlLmNhcnJ5Lm5l
d19leHRlbnRfZmxhZ3MgPSBSRUlTRVI0X05FV19FWFRFTlRfRkxBR1M7CisJc2JpbmZvLT50cmVl
LmNhcnJ5LnBhc3RlX2ZsYWdzID0gUkVJU0VSNF9QQVNURV9GTEFHUzsKKwlzYmluZm8tPnRyZWUu
Y2FycnkuaW5zZXJ0X2ZsYWdzID0gUkVJU0VSNF9JTlNFUlRfRkxBR1M7CisJcndsb2NrX2luaXQo
JihzYmluZm8tPnRyZWUudHJlZV9sb2NrKSk7CisJc3Bpbl9sb2NrX2luaXQoJihzYmluZm8tPnRy
ZWUuZXBvY2hfbG9jaykpOworCisJLyogaW5pdGlhbGl6ZSBkZWZhdWx0IHJlYWRhaGVhZCBwYXJh
bXMgKi8KKwlzYmluZm8tPnJhX3BhcmFtcy5tYXggPSB0b3RhbHJhbV9wYWdlcygpIC8gNDsKKwlz
YmluZm8tPnJhX3BhcmFtcy5mbGFncyA9IDA7CisKKwkvKiBhbGxvY2F0ZSBtZW1vcnkgZm9yIHN0
cnVjdHVyZSBkZXNjcmliaW5nIHJlaXNlcjQgbW91bnQgb3B0aW9ucyAqLworCW9wdHMgPSBrbWFs
bG9jKHNpemVvZihzdHJ1Y3Qgb3B0X2Rlc2MpICogTUFYX05SX09QVElPTlMsCisJCSAgICAgICBy
ZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJaWYgKG9wdHMgPT0gTlVMTCkKKwkJcmV0dXJu
IFJFVEVSUigtRU5PTUVNKTsKKworCS8qIGluaXRpYWxpemUgc3RydWN0dXJlIGRlc2NyaWJpbmcg
cmVpc2VyNCBtb3VudCBvcHRpb25zICovCisJcCA9IG9wdHM7CisKKwlwdXNoX3NiX2ZpZWxkX29w
dHMoJnAsIG9wdHMsIHNiaW5mbyk7CisJLyogdHVybiBvbiBCU0Qtc3R5bGUgZ2lkIGFzc2lnbm1l
bnQgKi8KKworI2RlZmluZSBQVVNIX0JJVF9PUFQobmFtZSwgYml0KQkJCVwKKwlQVVNIX09QVChw
LCBvcHRzLCBCSVRfT1BUKG5hbWUsIGJpdCkpCisKKwlQVVNIX0JJVF9PUFQoImJzZGdyb3VwcyIs
IFJFSVNFUjRfQlNEX0dJRCk7CisJLyogdHVybiBvbiAzMiBiaXQgdGltZXMgKi8KKwlQVVNIX0JJ
VF9PUFQoIjMyYml0dGltZXMiLCBSRUlTRVI0XzMyX0JJVF9USU1FUyk7CisJLyoKKwkgKiBEb24n
dCBsb2FkIGFsbCBiaXRtYXAgYmxvY2tzIGF0IG1vdW50IHRpbWUsIGl0IGlzIHVzZWZ1bCBmb3IK
KwkgKiBtYWNoaW5lcyB3aXRoIHRpbnkgUkFNIGFuZCBsYXJnZSBkaXNrcy4KKwkgKi8KKwlQVVNI
X0JJVF9PUFQoImRvbnRfbG9hZF9iaXRtYXAiLCBSRUlTRVI0X0RPTlRfTE9BRF9CSVRNQVApOwor
CS8qIGRpc2FibGUgdHJhbnNhY3Rpb24gY29tbWl0cyBkdXJpbmcgd3JpdGUoKSAqLworCVBVU0hf
QklUX09QVCgiYXRvbWljX3dyaXRlIiwgUkVJU0VSNF9BVE9NSUNfV1JJVEUpOworCS8qIGVuYWJs
ZSBpc3N1aW5nIG9mIGRpc2NhcmQgcmVxdWVzdHMgKi8KKwlQVVNIX0JJVF9PUFQoImRpc2NhcmQi
LCBSRUlTRVI0X0RJU0NBUkQpOworCS8qIGRpc2FibGUgaG9sZSBwdW5jaGluZyBhdCBmbHVzaCB0
aW1lICovCisJUFVTSF9CSVRfT1BUKCJkb250X3B1bmNoX2hvbGVzIiwgUkVJU0VSNF9ET05UX1BV
TkNIX0hPTEVTKTsKKworCVBVU0hfT1BUKHAsIG9wdHMsCisJeworCQkvKgorCQkgKiB0cmVlIHRy
YXZlcnNhbCByZWFkYWhlYWQgcGFyYW1ldGVyczoKKwkJICogLW8gcmVhZGFoZWFkOk1BWE5VTTpG
TEFHUworCQkgKiBNQVhOVU0gLSBtYXggbnVtYmVyIGZvIG5vZGVzIHRvIHJlcXVlc3QgcmVhZGFo
ZWFkIGZvcjogLTFVTAorCQkgKiB3aWxsIHNldCBpdCB0byBtYXhfc2FuZV9yZWFkYWhlYWQoKQor
CQkgKiBGTEFHUyAtIGNvbWJpbmF0aW9uIG9mIGJpdHM6IFJBX0FESkNFTlRfT05MWSwgUkFfQUxM
X0xFVkVMUywKKwkJICogQ09OVElOVUVfT05fUFJFU0VOVAorCQkgKi8KKwkJLm5hbWUgPSAicmVh
ZGFoZWFkIiwKKwkJLnR5cGUgPSBPUFRfRk9STUFULAorCQkudSA9IHsKKwkJCS5mID0geworCQkJ
CS5mb3JtYXQgPSAiJXU6JXUiLAorCQkJCS5ucl9hcmdzID0gMiwKKwkJCQkuYXJnMSA9ICZzYmlu
Zm8tPnJhX3BhcmFtcy5tYXgsCisJCQkJLmFyZzIgPSAmc2JpbmZvLT5yYV9wYXJhbXMuZmxhZ3Ms
CisJCQkJLmFyZzMgPSBOVUxMLAorCQkJCS5hcmc0ID0gTlVMTAorCQkJfQorCQl9CisJfQorCSk7
CisKKwkvKiBXaGF0IHRvIGRvIGluIGNhc2Ugb2YgZnMgZXJyb3IgKi8KKwlQVVNIX09QVChwLCBv
cHRzLAorCXsKKwkJLm5hbWUgPSAib25lcnJvciIsCisJCS50eXBlID0gT1BUX09ORU9GLAorCQku
dSA9IHsKKwkJCS5vbmVvZiA9IHsKKwkJCQkucmVzdWx0ID0gJnNiaW5mby0+b25lcnJvciwKKwkJ
CQkubGlzdCA9IHsKKwkJCQkJInJlbW91bnQtcm8iLCAicGFuaWMiLCBOVUxMCisJCQkJfSwKKwkJ
CX0KKwkJfQorCX0KKwkpOworCisJLyoKKwkgKiBXaGF0IHRyYW5jYWN0aW9uIG1vZGVsIChqb3Vy
bmFsLCBjb3csIGV0YykKKwkgKiBpcyB1c2VkIHRvIGNvbW1pdCB0cmFuc2FjdGlvbnMKKwkgKi8K
KwlQVVNIX09QVChwLCBvcHRzLAorCXsKKwkJLm5hbWUgPSAidHhtb2QiLAorCQkudHlwZSA9IE9Q
VF9UWE1PRCwKKwkJLnUgPSB7CisJCQkudHhtb2QgPSB7CisJCQkJIC5yZXN1bHQgPSAmc2JpbmZv
LT50eG1vZAorCQkJIH0KKwkJfQorCX0KKwkpOworCisJLyogbW9kaWZ5IGRlZmF1bHQgc2V0dGlu
Z3MgdG8gdmFsdWVzIHNldCBieSBtb3VudCBvcHRpb25zICovCisJcmVzdWx0ID0gcGFyc2Vfb3B0
aW9ucyhvcHRfc3RyaW5nLCBvcHRzLCBwIC0gb3B0cyk7CisJa2ZyZWUob3B0cyk7CisJaWYgKHJl
c3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0OworCisJLyogY29ycmVjdCBzZXR0aW5ncyB0byBz
YW5pdHkgdmFsdWVzICovCisJc2JpbmZvLT50bWdyLmF0b21fbWF4X2FnZSAqPSBIWjsKKwlpZiAo
c2JpbmZvLT50bWdyLmF0b21fbWF4X2FnZSA8PSAwKQorCQkvKiBvdmVyZmxvdyAqLworCQlzYmlu
Zm8tPnRtZ3IuYXRvbV9tYXhfYWdlID0gUkVJU0VSNF9BVE9NX01BWF9BR0U7CisKKwkvKiByb3Vu
ZCBvcHRpbWFsIGlvIHNpemUgdXAgdG8gNTEyIGJ5dGVzICovCisJc2JpbmZvLT5vcHRpbWFsX2lv
X3NpemUgPj49IFZGU19CTEtTSVpFX0JJVFM7CisJc2JpbmZvLT5vcHRpbWFsX2lvX3NpemUgPDw9
IFZGU19CTEtTSVpFX0JJVFM7CisJaWYgKHNiaW5mby0+b3B0aW1hbF9pb19zaXplID09IDApIHsK
KwkJd2FybmluZygibmlraXRhLTI0OTciLCAib3B0aW1hbF9pb19zaXplIGlzIHRvbyBzbWFsbCIp
OworCQlyZXR1cm4gUkVURVJSKC1FSU5WQUwpOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisv
KioKKyAqIHJlaXNlcjRfaW5pdF9yZWFkX3N1cGVyIC0gcmVhZCByZWlzZXI0IG1hc3RlciBzdXBl
ciBibG9jaworICogQHN1cGVyOiBzdXBlciBibG9jayB0byBmaWxsCisgKiBAc2lsZW50OiBpZiAw
IC0gcHJpbnQgd2FybmluZ3MKKyAqCisgKiBSZWFkcyByZWlzZXI0IG1hc3RlciBzdXBlciBibG9j
ayBlaXRoZXIgZnJvbSBwcmVkZWZpbmVkIGxvY2F0aW9uIG9yIGZyb20KKyAqIGxvY2F0aW9uIHNw
ZWNpZmllZCBieSBhbHRzdXBlciBtb3VudCBvcHRpb24sIGluaXRpYWxpemVzIGRpc2sgZm9ybWF0
IHBsdWdpbi4KKyAqLworaW50IHJlaXNlcjRfaW5pdF9yZWFkX3N1cGVyKHN0cnVjdCBzdXBlcl9i
bG9jayAqc3VwZXIsIGludCBzaWxlbnQpCit7CisJc3RydWN0IGJ1ZmZlcl9oZWFkICpzdXBlcl9i
aDsKKwlzdHJ1Y3QgcmVpc2VyNF9tYXN0ZXJfc2IgKm1hc3Rlcl9zYjsKKwlyZWlzZXI0X3N1cGVy
X2luZm9fZGF0YSAqc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpOworCXVuc2lnbmVk
IGxvbmcgYmxvY2tzaXplOworCisgcmVhZF9zdXBlcl9ibG9jazoKKyNpZmRlZiBDT05GSUdfUkVJ
U0VSNF9CQURCTE9DS1MKKwlpZiAoc2JpbmZvLT5hbHRzdXBlcikKKwkJLyoKKwkJICogcmVhZCBy
ZWlzZXI0IG1hc3RlciBzdXBlciBibG9jayBhdCBwb3NpdGlvbiBzcGVjaWZpZWQgYnkKKwkJICog
bW91bnQgb3B0aW9uCisJCSAqLworCQlzdXBlcl9iaCA9IHNiX2JyZWFkKHN1cGVyLAorCQkJCSAg
ICAoc2VjdG9yX3QpKHNiaW5mby0+YWx0c3VwZXIgLyBzdXBlci0+c19ibG9ja3NpemUpKTsKKwll
bHNlCisjZW5kaWYKKwkJLyogcmVhZCByZWlzZXI0IG1hc3RlciBzdXBlciBibG9jayBhdCAxNi10
aCA0MDk2IGJsb2NrICovCisJCXN1cGVyX2JoID0gc2JfYnJlYWQoc3VwZXIsCisJCQkJICAgIChz
ZWN0b3JfdCkoUkVJU0VSNF9NQUdJQ19PRkZTRVQgLyBzdXBlci0+c19ibG9ja3NpemUpKTsKKwlp
ZiAoIXN1cGVyX2JoKQorCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCisJbWFzdGVyX3NiID0gKHN0
cnVjdCByZWlzZXI0X21hc3Rlcl9zYiAqKXN1cGVyX2JoLT5iX2RhdGE7CisJLyogY2hlY2sgcmVp
c2VyNCBtYWdpYyBzdHJpbmcgKi8KKwlpZiAoIXN0cm5jbXAobWFzdGVyX3NiLT5tYWdpYywgUkVJ
U0VSNF9TVVBFUl9NQUdJQ19TVFJJTkcsCisJCSAgICAgc2l6ZW9mKFJFSVNFUjRfU1VQRVJfTUFH
SUNfU1RSSU5HKSkpIHsKKwkJLyogcmVpc2VyNCBtYXN0ZXIgc3VwZXIgYmxvY2sgY29udGFpbnMg
ZmlsZXN5c3RlbSBibG9ja3NpemUgKi8KKwkJYmxvY2tzaXplID0gbGUxNl90b19jcHUoZ2V0X3Vu
YWxpZ25lZCgmbWFzdGVyX3NiLT5ibG9ja3NpemUpKTsKKworCQlpZiAoYmxvY2tzaXplICE9IFBB
R0VfU0laRSkgeworCQkJLyoKKwkJCSAqIGN1cnJlbmx5IHJlaXNlcjQncyBibG9ja3NpemUgbXVz
dCBiZSBlcXVhbCB0bworCQkJICogcGFnZXNpemUKKwkJCSAqLworCQkJaWYgKCFzaWxlbnQpCisJ
CQkJd2FybmluZygibmlraXRhLTI2MDkiLAorCQkJCQkiJXM6IHdyb25nIGJsb2NrIHNpemUgJWxk
XG4iLCBzdXBlci0+c19pZCwKKwkJCQkJYmxvY2tzaXplKTsKKwkJCWJyZWxzZShzdXBlcl9iaCk7
CisJCQlyZXR1cm4gUkVURVJSKC1FSU5WQUwpOworCQl9CisJCWlmIChibG9ja3NpemUgIT0gc3Vw
ZXItPnNfYmxvY2tzaXplKSB7CisJCQkvKgorCQkJICogZmlsZXN5c3RlbSB1c2VzIGRpZmZlcmVu
dCBibG9ja3NpemUuIFJlcmVhZCBtYXN0ZXIKKwkJCSAqIHN1cGVyIGJsb2NrIHdpdGggY29ycmVj
dCBibG9ja3NpemUKKwkJCSAqLworCQkJYnJlbHNlKHN1cGVyX2JoKTsKKwkJCWlmICghc2Jfc2V0
X2Jsb2Nrc2l6ZShzdXBlciwgKGludClibG9ja3NpemUpKQorCQkJCXJldHVybiBSRVRFUlIoLUVJ
TlZBTCk7CisJCQlnb3RvIHJlYWRfc3VwZXJfYmxvY2s7CisJCX0KKworCQlzYmluZm8tPmRmX3Bs
dWcgPQorCQkJZGlza19mb3JtYXRfcGx1Z2luX2J5X3Vuc2FmZV9pZCgKKwkJCQlsZTE2X3RvX2Nw
dShnZXRfdW5hbGlnbmVkKCZtYXN0ZXJfc2ItPmRpc2tfcGx1Z2luX2lkKSkpOworCQlpZiAoc2Jp
bmZvLT5kZl9wbHVnID09IE5VTEwpIHsKKwkJCWlmICghc2lsZW50KQorCQkJCXdhcm5pbmcoIm5p
a2l0YS0yNjA5MSIsCisJCQkJCSIlczogdW5rbm93biBkaXNrIGZvcm1hdCBwbHVnaW4gJWRcbiIs
CisJCQkJCXN1cGVyLT5zX2lkLAorCQkJCQlsZTE2X3RvX2NwdShnZXRfdW5hbGlnbmVkKCZtYXN0
ZXJfc2ItPmRpc2tfcGx1Z2luX2lkKSkpOworCQkJYnJlbHNlKHN1cGVyX2JoKTsKKwkJCXJldHVy
biBSRVRFUlIoLUVJTlZBTCk7CisJCX0KKwkJc2JpbmZvLT5kaXNrbWFwX2Jsb2NrID0gbGU2NF90
b19jcHUoZ2V0X3VuYWxpZ25lZCgmbWFzdGVyX3NiLT5kaXNrbWFwKSk7CisJCWJyZWxzZShzdXBl
cl9iaCk7CisJCXJldHVybiAwOworCX0KKworCS8qIHRoZXJlIGlzIG5vIHJlaXNlcjQgb24gdGhl
IGRldmljZSAqLworCWlmICghc2lsZW50KQorCQl3YXJuaW5nKCJuaWtpdGEtMjYwOCIsCisJCQki
JXM6IHdyb25nIG1hc3RlciBzdXBlciBibG9jayBtYWdpYyIsIHN1cGVyLT5zX2lkKTsKKwlicmVs
c2Uoc3VwZXJfYmgpOworCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7Cit9CisKK3N0YXRpYyBzdHJ1
Y3QgeworCXJlaXNlcjRfcGx1Z2luX3R5cGUgdHlwZTsKKwlyZWlzZXI0X3BsdWdpbl9pZCBpZDsK
K30gZGVmYXVsdF9wbHVnaW5zW1BTRVRfTEFTVF0gPSB7CisJW1BTRVRfRklMRV0gPSB7CisJCS50
eXBlID0gUkVJU0VSNF9GSUxFX1BMVUdJTl9UWVBFLAorCQkuaWQgPSBVTklYX0ZJTEVfUExVR0lO
X0lECisJfSwKKwlbUFNFVF9ESVJdID0geworCQkudHlwZSA9IFJFSVNFUjRfRElSX1BMVUdJTl9U
WVBFLAorCQkuaWQgPSBIQVNIRURfRElSX1BMVUdJTl9JRAorCX0sCisJW1BTRVRfSEFTSF0gPSB7
CisJCS50eXBlID0gUkVJU0VSNF9IQVNIX1BMVUdJTl9UWVBFLAorCQkuaWQgPSBSNV9IQVNIX0lE
CisJfSwKKwlbUFNFVF9GSUJSQVRJT05dID0geworCQkudHlwZSA9IFJFSVNFUjRfRklCUkFUSU9O
X1BMVUdJTl9UWVBFLAorCQkuaWQgPSBGSUJSQVRJT05fRE9UX08KKwl9LAorCVtQU0VUX1BFUk1d
ID0geworCQkudHlwZSA9IFJFSVNFUjRfUEVSTV9QTFVHSU5fVFlQRSwKKwkJLmlkID0gTlVMTF9Q
RVJNX0lECisJfSwKKwlbUFNFVF9GT1JNQVRUSU5HXSA9IHsKKwkJLnR5cGUgPSBSRUlTRVI0X0ZP
Uk1BVFRJTkdfUExVR0lOX1RZUEUsCisJCS5pZCA9IFNNQUxMX0ZJTEVfRk9STUFUVElOR19JRAor
CX0sCisJW1BTRVRfU0RdID0geworCQkudHlwZSA9IFJFSVNFUjRfSVRFTV9QTFVHSU5fVFlQRSwK
KwkJLmlkID0gU1RBVElDX1NUQVRfREFUQV9JRAorCX0sCisJW1BTRVRfRElSX0lURU1dID0gewor
CQkudHlwZSA9IFJFSVNFUjRfSVRFTV9QTFVHSU5fVFlQRSwKKwkJLmlkID0gQ09NUE9VTkRfRElS
X0lECisJfSwKKwlbUFNFVF9DSVBIRVJdID0geworCQkudHlwZSA9IFJFSVNFUjRfQ0lQSEVSX1BM
VUdJTl9UWVBFLAorCQkuaWQgPSBOT05FX0NJUEhFUl9JRAorCX0sCisJW1BTRVRfRElHRVNUXSA9
IHsKKwkJLnR5cGUgPSBSRUlTRVI0X0RJR0VTVF9QTFVHSU5fVFlQRSwKKwkJLmlkID0gU0hBMjU2
XzMyX0RJR0VTVF9JRAorCX0sCisJW1BTRVRfQ09NUFJFU1NJT05dID0geworCQkudHlwZSA9IFJF
SVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUsCisJCS5pZCA9IExaTzFfQ09NUFJFU1NJT05f
SUQKKwl9LAorCVtQU0VUX0NPTVBSRVNTSU9OX01PREVdID0geworCQkudHlwZSA9IFJFSVNFUjRf
Q09NUFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwKKwkJLmlkID0gQ09OVlhfQ09NUFJFU1NJT05f
TU9ERV9JRAorCX0sCisJW1BTRVRfQ0xVU1RFUl0gPSB7CisJCS50eXBlID0gUkVJU0VSNF9DTFVT
VEVSX1BMVUdJTl9UWVBFLAorCQkuaWQgPSBDTFVTVEVSXzY0S19JRAorCX0sCisJW1BTRVRfQ1JF
QVRFXSA9IHsKKwkJLnR5cGUgPSBSRUlTRVI0X0ZJTEVfUExVR0lOX1RZUEUsCisJCS5pZCA9IFVO
SVhfRklMRV9QTFVHSU5fSUQKKwl9Cit9OworCisvKiBhY2Nlc3MgdG8gZGVmYXVsdCBwbHVnaW4g
dGFibGUgKi8KK3JlaXNlcjRfcGx1Z2luICpnZXRfZGVmYXVsdF9wbHVnaW4ocHNldF9tZW1iZXIg
bWVtYikKK3sKKwlyZXR1cm4gcGx1Z2luX2J5X2lkKGRlZmF1bHRfcGx1Z2luc1ttZW1iXS50eXBl
LAorCQkJICAgIGRlZmF1bHRfcGx1Z2luc1ttZW1iXS5pZCk7Cit9CisKKy8qKgorICogcmVpc2Vy
NF9pbml0X3Jvb3RfaW5vZGUgLSBvYnRhaW4gaW5vZGUgb2Ygcm9vdCBkaXJlY3RvcnkKKyAqIEBz
dXBlcjogc3VwZXIgYmxvY2sgb2YgZmlsZXN5c3RlbQorICoKKyAqIE9idGFpbnMgaW5vZGUgb2Yg
cm9vdCBkaXJlY3RvcnkgKHJlYWRpbmcgaXQgZnJvbSBkaXNrKSwgaW5pdGlhbGl6ZXMgcGx1Z2lu
CisgKiBzZXQgaXQgd2FzIG5vdCBpbml0aWFsaXplZC4KKyAqLworaW50IHJlaXNlcjRfaW5pdF9y
b290X2lub2RlKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJcmVpc2VyNF9zdXBlcl9p
bmZvX2RhdGEgKnNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKwlzdHJ1Y3QgaW5v
ZGUgKmlub2RlOworCWludCByZXN1bHQgPSAwOworCisJaW5vZGUgPSByZWlzZXI0X2lnZXQoc3Vw
ZXIsIHNiaW5mby0+ZGZfcGx1Zy0+cm9vdF9kaXJfa2V5KHN1cGVyKSwgMCk7CisJaWYgKElTX0VS
Uihpbm9kZSkpCisJCXJldHVybiBSRVRFUlIoUFRSX0VSUihpbm9kZSkpOworCisJc3VwZXItPnNf
cm9vdCA9IGRfbWFrZV9yb290KGlub2RlKTsKKwlpZiAoIXN1cGVyLT5zX3Jvb3QpIHsKKwkJcmV0
dXJuIFJFVEVSUigtRU5PTUVNKTsKKwl9CisKKwlzdXBlci0+c19yb290LT5kX29wID0gJnNiaW5m
by0+b3BzLmRlbnRyeTsKKworCWlmICghaXNfaW5vZGVfbG9hZGVkKGlub2RlKSkgeworCQlwc2V0
X21lbWJlciBtZW1iOworCQlwbHVnaW5fc2V0ICpwc2V0OworCisJCXBzZXQgPSByZWlzZXI0X2lu
b2RlX2RhdGEoaW5vZGUpLT5wc2V0OworCQlmb3IgKG1lbWIgPSAwOyBtZW1iIDwgUFNFVF9MQVNU
OyArK21lbWIpIHsKKworCQkJaWYgKGFzZXRfZ2V0KHBzZXQsIG1lbWIpICE9IE5VTEwpCisJCQkJ
Y29udGludWU7CisKKwkJCXJlc3VsdCA9IGdyYWJfcGx1Z2luX3BzZXQoaW5vZGUsIE5VTEwsIG1l
bWIpOworCQkJaWYgKHJlc3VsdCAhPSAwKQorCQkJCWJyZWFrOworCisJCQlyZWlzZXI0X2lub2Rl
X2Nscl9mbGFnKGlub2RlLCBSRUlTRVI0X1NETEVOX0tOT1dOKTsKKwkJfQorCisJCWlmIChyZXN1
bHQgPT0gMCkgeworCQkJaWYgKFJFSVNFUjRfREVCVUcpIHsKKwkJCQlmb3IgKG1lbWIgPSAwOyBt
ZW1iIDwgUFNFVF9MQVNUOyArK21lbWIpCisJCQkJCWFzc2VydCgibmlraXRhLTM1MDAiLAorCQkJ
CQkgICAgICAgYXNldF9nZXQocHNldCwgbWVtYikgIT0gTlVMTCk7CisJCQl9CisJCX0gZWxzZQor
CQkJd2FybmluZygibmlraXRhLTM0NDgiLCAiQ2Fubm90IHNldCBwbHVnaW5zIG9mIHJvb3Q6ICVp
IiwKKwkJCQlyZXN1bHQpOworCQlyZWlzZXI0X2lnZXRfY29tcGxldGUoaW5vZGUpOworCisJCS8q
IEFzIHRoZSBkZWZhdWx0IHBzZXQga2VwdCBpbiB0aGUgcm9vdCBkaXIgbWF5IGhhcyBiZWVuIGNo
YW5nZWQKKwkJICAgKGxlbmd0aCBpcyB1bmtub3duKSwgY2FsbCB1cGRhdGVfc2QuICovCisJCWlm
ICghcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9TRExFTl9LTk9XTikpIHsK
KwkJCXJlc3VsdCA9IHJlaXNlcjRfZ3JhYl9zcGFjZSgKKwkJCQlpbm9kZV9maWxlX3BsdWdpbihp
bm9kZSktPmVzdGltYXRlLnVwZGF0ZShpbm9kZSksCisJCQkJQkFfQ0FOX0NPTU1JVCk7CisKKwkJ
CWlmIChyZXN1bHQgPT0gMCkKKwkJCQlyZXN1bHQgPSByZWlzZXI0X3VwZGF0ZV9zZChpbm9kZSk7
CisKKwkJCWFsbF9ncmFiYmVkMmZyZWUoKTsKKwkJfQorCX0KKworCXN1cGVyLT5zX21heGJ5dGVz
ID0gTUFYX0xGU19GSUxFU0laRTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgorICogTG9jYWwg
dmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTog
IkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1
bW46IDc5CisgKiBFbmQ6CisgKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40
LjE3Lm9yaWcvZnMvcmVpc2VyNC9pbm9kZS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2lub2Rl
LmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvaW5vZGUuYwkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvaW5vZGUu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1MzIyMjE3NyArMDEwMApAQCAtMCwwICsxLDcxMSBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorICAgcmVpc2VyNC9SRUFETUUgKi8KKworLyogSW5vZGUgc3BlY2lmaWMgb3Bl
cmF0aW9ucy4gKi8KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgor
I2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUgImthc3NpZ24uaCIKKyNpbmNsdWRlICJjb29yZC5o
IgorI2luY2x1ZGUgInNlYWwuaCIKKyNpbmNsdWRlICJkc2NhbGUuaCIKKyNpbmNsdWRlICJwbHVn
aW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAicGx1Z2luL3NlY3VyaXR5L3Blcm0uaCIKKyNpbmNs
dWRlICJwbHVnaW4vcGx1Z2luLmgiCisjaW5jbHVkZSAicGx1Z2luL29iamVjdC5oIgorI2luY2x1
ZGUgInpub2RlLmgiCisjaW5jbHVkZSAidmZzX29wcy5oIgorI2luY2x1ZGUgImlub2RlLmgiCisj
aW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJyZWlzZXI0LmgiCisKKyNpbmNsdWRlIDxsaW51
eC9mcy5oPgkJLyogZm9yIHN0cnVjdCBzdXBlcl9ibG9jaywgIGFkZHJlc3Nfc3BhY2UgKi8KKwor
LyogcmV0dXJuIHJlaXNlcjQgaW50ZXJuYWwgdHJlZSB3aGljaCBpbm9kZSBiZWxvbmdzIHRvICov
CisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjE3KSAqLworcmVpc2VyNF90cmVlICpyZWlz
ZXI0X3RyZWVfYnlfaW5vZGUoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZS8qIGlub2RlIHF1ZXJp
ZWQqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0yNTYiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQo
Im5pa2l0YS0yNTciLCBpbm9kZS0+aV9zYiAhPSBOVUxMKTsKKwlyZXR1cm4gcmVpc2VyNF9nZXRf
dHJlZShpbm9kZS0+aV9zYik7Cit9CisKKy8qIHJldHVybiByZWlzZXI0LXNwZWNpZmljIGlub2Rl
IGZsYWdzICovCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgKmlub2RlX2ZsYWdzKGNvbnN0
IHN0cnVjdCBpbm9kZSAqY29uc3QgaW5vZGUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjg0MiIsIGlu
b2RlICE9IE5VTEwpOworCXJldHVybiAmcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKS0+ZmxhZ3M7
Cit9CisKKy8qIHNldCByZWlzZXI0LXNwZWNpZmljIGZsYWcgQGYgaW4gQGlub2RlICovCit2b2lk
IHJlaXNlcjRfaW5vZGVfc2V0X2ZsYWcoc3RydWN0IGlub2RlICppbm9kZSwgcmVpc2VyNF9maWxl
X3BsdWdpbl9mbGFncyBmKQoreworCWFzc2VydCgibmlraXRhLTIyNDgiLCBpbm9kZSAhPSBOVUxM
KTsKKwlzZXRfYml0KChpbnQpZiwgaW5vZGVfZmxhZ3MoaW5vZGUpKTsKK30KKworLyogY2xlYXIg
cmVpc2VyNC1zcGVjaWZpYyBmbGFnIEBmIGluIEBpbm9kZSAqLwordm9pZCByZWlzZXI0X2lub2Rl
X2Nscl9mbGFnKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHJlaXNlcjRfZmlsZV9wbHVnaW5fZmxhZ3Mg
ZikKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMjUwIiwgaW5vZGUgIT0gTlVMTCk7CisJY2xlYXJfYml0
KChpbnQpZiwgaW5vZGVfZmxhZ3MoaW5vZGUpKTsKK30KKworLyogdHJ1ZSBpZiByZWlzZXI0LXNw
ZWNpZmljIGZsYWcgQGYgaXMgc2V0IGluIEBpbm9kZSAqLworaW50IHJlaXNlcjRfaW5vZGVfZ2V0
X2ZsYWcoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSwKKwkJCSAgIHJlaXNlcjRfZmlsZV9wbHVn
aW5fZmxhZ3MgZikKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMjUxIiwgaW5vZGUgIT0gTlVMTCk7CisJ
cmV0dXJuIHRlc3RfYml0KChpbnQpZiwgaW5vZGVfZmxhZ3MoaW5vZGUpKTsKK30KKworLyogY29u
dmVydCBvaWQgdG8gaW5vZGUgbnVtYmVyICovCitpbm9fdCBvaWRfdG9faW5vKG9pZF90IG9pZCkK
K3sKKwlyZXR1cm4gKGlub190KSBvaWQ7Cit9CisKKy8qIGNvbnZlcnQgb2lkIHRvIHVzZXIgdmlz
aWJsZSBpbm9kZSBudW1iZXIgKi8KK2lub190IG9pZF90b191aW5vKG9pZF90IG9pZCkKK3sKKwkv
KiByZWlzZXI0IG9iamVjdCBpcyB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IG9pZCB3aGljaCBpcyA2
NCBiaXQKKwkgICBxdWFudGl0eS4gS2VybmVsIGluLW1lbW9yeSBpbm9kZSBpcyBpbmRleGVkIChp
biB0aGUgaGFzaCB0YWJsZSkgYnkKKwkgICAzMiBiaXQgaV9pbm8gZmllbGQsIGJ1dCB0aGlzIGlz
IG5vdCBhIHByb2JsZW0sIGJlY2F1c2UgdGhlcmUgaXMgYQorCSAgIHdheSB0byBmdXJ0aGVyIGRp
c3Rpbmd1aXNoIGlub2RlcyB3aXRoIGlkZW50aWNhbCBpbm9kZSBudW1iZXJzCisJICAgKGZpbmRf
YWN0b3Igc3VwcGxpZWQgdG8gaWdldCgpKS4KKworCSAgIEJ1dCB1c2VyIHNwYWNlIGV4cGVjdHMg
dW5pcXVlIDMyIGJpdCBpbm9kZSBudW1iZXIuIE9idmlvdXNseSB0aGlzCisJICAgaXMgaW1wb3Nz
aWJsZS4gV29yay1hcm91bmQgaXMgdG8gc29tZWhvdyBoYXNoIG9pZCBpbnRvIHVzZXIgdmlzaWJs
ZQorCSAgIGlub2RlIG51bWJlci4KKwkgKi8KKwlvaWRfdCBtYXhfaW5vID0gKGlub190KSB+MDsK
KworCWlmIChSRUlTRVI0X0lOT19JU19PSUQgfHwgKG9pZCA8PSBtYXhfaW5vKSkKKwkJcmV0dXJu
IG9pZDsKKwllbHNlCisJCS8qIHRoaXMgaXMgcmVtb3RlbHkgc2ltaWxhciB0byBhbGdvcml0aG0g
dXNlZCB0byBmaW5kIG5leHQgcGlkCisJCSAgIHRvIHVzZSBmb3IgcHJvY2VzczogYWZ0ZXIgd3Jh
cC1hcm91bmQgc3RhcnQgZnJvbSBzb21lCisJCSAgIG9mZnNldCByYXRoZXIgdGhhbiBmcm9tIDAu
IElkZWEgaXMgdGhhdCB0aGVyZSBhcmUgc29tZSBsb25nCisJCSAgIGxpdmluZyBvYmplY3RzIHdp
dGggd2hpY2ggd2UgZG9uJ3Qgd2FudCB0byBjb2xsaWRlLgorCQkgKi8KKwkJcmV0dXJuIFJFSVNF
UjRfVUlOT19TSElGVCArICgob2lkIC0gbWF4X2lubykgJiAobWF4X2lubyA+PiAxKSk7Cit9CisK
Ky8qIGNoZWNrIHRoYXQgImlub2RlIiBpcyBvbiByZWlzZXI0IGZpbGUtc3lzdGVtICovCitpbnQg
aXNfcmVpc2VyNF9pbm9kZShjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlLyogaW5vZGUgcXVlcmll
ZCAqLykKK3sKKwlyZXR1cm4gaW5vZGUgIT0gTlVMTCAmJiBpc19yZWlzZXI0X3N1cGVyKGlub2Rl
LT5pX3NiKTsKK30KKworLyogTWF4aW1hbCBsZW5ndGggb2YgYSBuYW1lIHRoYXQgY2FuIGJlIHN0
b3JlZCBpbiBkaXJlY3RvcnkgQGlub2RlLgorCisgICBUaGlzIGlzIHVzZWQgaW4gY2hlY2sgZHVy
aW5nIGZpbGUgY3JlYXRpb24gYW5kIGxvb2t1cC4gKi8KK2ludCByZWlzZXI0X21heF9maWxlbmFt
ZV9sZW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZS8qIGlub2RlIHF1ZXJpZWQgKi8pCit7CisJ
YXNzZXJ0KCJuaWtpdGEtMjg3IiwgaXNfcmVpc2VyNF9pbm9kZShpbm9kZSkpOworCWFzc2VydCgi
bmlraXRhLTE3MTAiLCBpbm9kZV9kaXJfaXRlbV9wbHVnaW4oaW5vZGUpKTsKKwlpZiAoaW5vZGVf
ZGlyX2l0ZW1fcGx1Z2luKGlub2RlKS0+cy5kaXIubWF4X25hbWVfbGVuKQorCQlyZXR1cm4gaW5v
ZGVfZGlyX2l0ZW1fcGx1Z2luKGlub2RlKS0+cy5kaXIubWF4X25hbWVfbGVuKGlub2RlKTsKKwll
bHNlCisJCXJldHVybiAyNTU7Cit9CisKKyNpZiBSRUlTRVI0X1VTRV9DT0xMSVNJT05fTElNSVQK
Ky8qIE1heGltYWwgbnVtYmVyIG9mIGhhc2ggY29sbGlzaW9ucyBmb3IgdGhpcyBkaXJlY3Rvcnku
ICovCitpbnQgbWF4X2hhc2hfY29sbGlzaW9ucyhjb25zdCBzdHJ1Y3QgaW5vZGUgKmRpci8qIGlu
b2RlIHF1ZXJpZWQgKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtMTcxMSIsIGRpciAhPSBOVUxMKTsK
KwlyZXR1cm4gcmVpc2VyNF9pbm9kZV9kYXRhKGRpciktPnBsdWdpbi5tYXhfY29sbGlzaW9uczsK
K30KKyNlbmRpZiAgLyogIFJFSVNFUjRfVVNFX0NPTExJU0lPTl9MSU1JVCAgKi8KKworLyogSW5z
dGFsbCBmaWxlLCBpbm9kZSwgYW5kIGFkZHJlc3Nfc3BhY2Ugb3BlcmF0aW9uIG9uIEBpbm9kZSwg
ZGVwZW5kaW5nIG9uCisgICBpdHMgbW9kZS4gKi8KK2ludCBzZXR1cF9pbm9kZV9vcHMoc3RydWN0
IGlub2RlICppbm9kZSAvKiBpbm9kZSB0byBpbnRpYWxpemUgKi8gLAorCQkgICAgcmVpc2VyNF9v
YmplY3RfY3JlYXRlX2RhdGEgKiBkYXRhCS8qIHBhcmFtZXRlcnMgdG8gY3JlYXRlCisJCQkJCQkJ
ICogb2JqZWN0ICovICkKK3sKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2luZm87CisJZmls
ZV9wbHVnaW4gKmZwbHVnOworCWRpcl9wbHVnaW4gKmRwbHVnOworCisJZnBsdWcgPSBpbm9kZV9m
aWxlX3BsdWdpbihpbm9kZSk7CisJZHBsdWcgPSBpbm9kZV9kaXJfcGx1Z2luKGlub2RlKTsKKwor
CXNpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoaW5vZGUtPmlfc2IpOworCisJc3dpdGNoIChpbm9k
ZS0+aV9tb2RlICYgU19JRk1UKSB7CisJY2FzZSBTX0lGU09DSzoKKwljYXNlIFNfSUZCTEs6CisJ
Y2FzZSBTX0lGQ0hSOgorCWNhc2UgU19JRklGTzoKKwkJeworCQkJZGV2X3QgcmRldjsJLyogdG8g
a2VlcCBnY2MgaGFwcHkgKi8KKworCQkJYXNzZXJ0KCJ2cy00NiIsIGZwbHVnICE9IE5VTEwpOwor
CQkJLyogdWdseSBoYWNrIHdpdGggcmRldiAqLworCQkJaWYgKGRhdGEgPT0gTlVMTCkgeworCQkJ
CXJkZXYgPSBpbm9kZS0+aV9yZGV2OworCQkJCWlub2RlLT5pX3JkZXYgPSAwOworCQkJfSBlbHNl
CisJCQkJcmRldiA9IGRhdGEtPnJkZXY7CisJCQlpbm9kZS0+aV9ibG9ja3MgPSAwOworCQkJYXNz
ZXJ0KCJ2cy00MiIsIGZwbHVnLT5oLmlkID09IFNQRUNJQUxfRklMRV9QTFVHSU5fSUQpOworCQkJ
aW5vZGUtPmlfb3AgPSBmaWxlX3BsdWdpbnNbZnBsdWctPmguaWRdLmlub2RlX29wczsKKwkJCS8q
IGluaXRpYWxpemUgaW5vZGUtPmlfZm9wIGFuZCBpbm9kZS0+aV9yZGV2IGZvciBibG9jaworCQkJ
ICAgYW5kIGNoYXIgZGV2aWNlcyAqLworCQkJaW5pdF9zcGVjaWFsX2lub2RlKGlub2RlLCBpbm9k
ZS0+aV9tb2RlLCByZGV2KTsKKwkJCS8qIGFsbCBhZGRyZXNzIHNwYWNlIG9wZXJhdGlvbnMgYXJl
IG51bGwgKi8KKwkJCWlub2RlLT5pX21hcHBpbmctPmFfb3BzID0KKwkJCSAgICBmaWxlX3BsdWdp
bnNbZnBsdWctPmguaWRdLmFzX29wczsKKwkJCWJyZWFrOworCQl9CisJY2FzZSBTX0lGTE5LOgor
CQlhc3NlcnQoInZzLTQ2IiwgZnBsdWcgIT0gTlVMTCk7CisJCWFzc2VydCgidnMtNDIiLCBmcGx1
Zy0+aC5pZCA9PSBTWU1MSU5LX0ZJTEVfUExVR0lOX0lEKTsKKwkJaW5vZGUtPmlfb3AgPSBmaWxl
X3BsdWdpbnNbZnBsdWctPmguaWRdLmlub2RlX29wczsKKwkJaW5vZGUtPmlfZm9wID0gTlVMTDsK
KwkJLyogYWxsIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBhcmUgbnVsbCAqLworCQlpbm9kZS0+
aV9tYXBwaW5nLT5hX29wcyA9IGZpbGVfcGx1Z2luc1tmcGx1Zy0+aC5pZF0uYXNfb3BzOworCQli
cmVhazsKKwljYXNlIFNfSUZESVI6CisJCWFzc2VydCgidnMtNDYiLCBkcGx1ZyAhPSBOVUxMKTsK
KwkJYXNzZXJ0KCJ2cy00MyIsIChkcGx1Zy0+aC5pZCA9PSBIQVNIRURfRElSX1BMVUdJTl9JRCB8
fAorCQkJCSBkcGx1Zy0+aC5pZCA9PSBTRUVLQUJMRV9IQVNIRURfRElSX1BMVUdJTl9JRCkpOwor
CQlpbm9kZS0+aV9vcCA9IGRpcl9wbHVnaW5zW2RwbHVnLT5oLmlkXS5pbm9kZV9vcHM7CisJCWlu
b2RlLT5pX2ZvcCA9IGRpcl9wbHVnaW5zW2RwbHVnLT5oLmlkXS5maWxlX29wczsKKwkJaW5vZGUt
PmlfbWFwcGluZy0+YV9vcHMgPSBkaXJfcGx1Z2luc1tkcGx1Zy0+aC5pZF0uYXNfb3BzOworCQli
cmVhazsKKwljYXNlIFNfSUZSRUc6CisJCWFzc2VydCgidnMtNDYiLCBmcGx1ZyAhPSBOVUxMKTsK
KwkJYXNzZXJ0KCJ2cy00MyIsIChmcGx1Zy0+aC5pZCA9PSBVTklYX0ZJTEVfUExVR0lOX0lEIHx8
CisJCQkJIGZwbHVnLT5oLmlkID09IENSWVBUQ09NUFJFU1NfRklMRV9QTFVHSU5fSUQpKTsKKwkJ
aW5vZGUtPmlfb3AgPSBmaWxlX3BsdWdpbnNbZnBsdWctPmguaWRdLmlub2RlX29wczsKKwkJaW5v
ZGUtPmlfZm9wID0gZmlsZV9wbHVnaW5zW2ZwbHVnLT5oLmlkXS5maWxlX29wczsKKwkJaW5vZGUt
PmlfbWFwcGluZy0+YV9vcHMgPSBmaWxlX3BsdWdpbnNbZnBsdWctPmguaWRdLmFzX29wczsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJd2FybmluZygibmlraXRhLTI5MSIsICJ3cm9uZyBmaWxlIG1v
ZGU6ICVvIGZvciAlbGx1IiwKKwkJCWlub2RlLT5pX21vZGUsCisJCQkodW5zaWduZWQgbG9uZyBs
b25nKWdldF9pbm9kZV9vaWQoaW5vZGUpKTsKKwkJcmVpc2VyNF9tYWtlX2JhZF9pbm9kZShpbm9k
ZSk7CisJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7CisJfQorCXJldHVybiAwOworfQorCisvKiBJ
bml0aWFsaXplIGlub2RlIGZyb20gZGlzayBkYXRhLiBDYWxsZWQgd2l0aCBpbm9kZSBsb2NrZWQu
CisgICBSZXR1cm4gaW5vZGUgbG9ja2VkLiAqLworc3RhdGljIGludCBpbml0X2lub2RlKHN0cnVj
dCBpbm9kZSAqaW5vZGUgLyogaW5vZGUgdG8gaW50aWFsaXNlICovICwKKwkJICAgICAgY29vcmRf
dCAqY29vcmQvKiBjb29yZCBvZiBzdGF0IGRhdGEgKi8pCit7CisJaW50IHJlc3VsdDsKKwlpdGVt
X3BsdWdpbiAqaXBsdWc7CisJdm9pZCAqYm9keTsKKwlpbnQgbGVuZ3RoOworCXJlaXNlcjRfaW5v
ZGUgKnN0YXRlOworCisJYXNzZXJ0KCJuaWtpdGEtMjkyIiwgY29vcmQgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMjkzIiwgaW5vZGUgIT0gTlVMTCk7CisKKwljb29yZF9jbGVhcl9pcGx1Zyhj
b29yZCk7CisJcmVzdWx0ID0gemxvYWQoY29vcmQtPm5vZGUpOworCWlmIChyZXN1bHQpCisJCXJl
dHVybiByZXN1bHQ7CisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCk7CisJYm9k
eSA9IGl0ZW1fYm9keV9ieV9jb29yZChjb29yZCk7CisJbGVuZ3RoID0gaXRlbV9sZW5ndGhfYnlf
Y29vcmQoY29vcmQpOworCisJYXNzZXJ0KCJuaWtpdGEtMjk1IiwgaXBsdWcgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMjk2IiwgYm9keSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yOTci
LCBsZW5ndGggPiAwKTsKKworCS8qIGlub2RlIGlzIHVuZGVyIElfTE9DSyBub3cgKi8KKworCXN0
YXRlID0gcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKTsKKwkvKiBjYWxsIHN0YXQtZGF0YSBwbHVn
aW4gbWV0aG9kIHRvIGxvYWQgc2QgY29udGVudCBpbnRvIGlub2RlICovCisJcmVzdWx0ID0gaXBs
dWctPnMuc2QuaW5pdF9pbm9kZShpbm9kZSwgYm9keSwgbGVuZ3RoKTsKKwlzZXRfcGx1Z2luKCZz
dGF0ZS0+cHNldCwgUFNFVF9TRCwgaXRlbV9wbHVnaW5fdG9fcGx1Z2luKGlwbHVnKSk7CisJaWYg
KHJlc3VsdCA9PSAwKSB7CisJCXJlc3VsdCA9IHNldHVwX2lub2RlX29wcyhpbm9kZSwgTlVMTCk7
CisJCWlmIChyZXN1bHQgPT0gMCAmJiBpbm9kZS0+aV9zYi0+c19yb290ICYmCisJCSAgICBpbm9k
ZS0+aV9zYi0+c19yb290LT5kX2lub2RlKQorCQkJcmVzdWx0ID0gZmluaXNoX3BzZXQoaW5vZGUp
OworCX0KKwl6cmVsc2UoY29vcmQtPm5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJl
YWQgYGlub2RlJyBmcm9tIHRoZSBkaXNrLiBUaGlzIGlzIHdoYXQgd2FzIHByZXZpb3VzbHkgaW4K
KyAgIHJlaXNlcmZzX3JlYWRfaW5vZGUyKCkuCisKKyAgIE11c3QgYmUgY2FsbGVkIHdpdGggaW5v
ZGUgbG9ja2VkLiBSZXR1cm4gaW5vZGUgc3RpbGwgbG9ja2VkLgorKi8KK3N0YXRpYyBpbnQgcmVh
ZF9pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlIC8qIGlub2RlIHRvIHJlYWQgZnJvbSBkaXNrICov
ICwKKwkJICAgICAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkgLyoga2V5IG9mIHN0YXQgZGF0YSAq
LyAsCisJCSAgICAgIGludCBzaWxlbnQpCit7CisJaW50IHJlc3VsdDsKKwlsb2NrX2hhbmRsZSBs
aDsKKwlyZWlzZXI0X2lub2RlICppbmZvOworCWNvb3JkX3QgY29vcmQ7CisKKwlhc3NlcnQoIm5p
a2l0YS0yOTgiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xOTQ1IiwgIWlzX2lu
b2RlX2xvYWRlZChpbm9kZSkpOworCisJaW5mbyA9IHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSk7
CisJYXNzZXJ0KCJuaWtpdGEtMzAwIiwgaW5mby0+bG9jYWxpdHlfaWQgIT0gMCk7CisKKwljb29y
ZF9pbml0X3plcm8oJmNvb3JkKTsKKwlpbml0X2xoKCZsaCk7CisJLyogbG9jYXRlIHN0YXQtZGF0
YSBpbiBhIHRyZWUgYW5kIHJldHVybiB6bm9kZSBsb2NrZWQgKi8KKwlyZXN1bHQgPSBsb29rdXBf
c2QoaW5vZGUsIFpOT0RFX1JFQURfTE9DSywgJmNvb3JkLCAmbGgsIGtleSwgc2lsZW50KTsKKwlh
c3NlcnQoIm5pa2l0YS0zMDEiLCAhaXNfaW5vZGVfbG9hZGVkKGlub2RlKSk7CisJaWYgKHJlc3Vs
dCA9PSAwKSB7CisJCS8qIHVzZSBzdGF0LWRhdGEgcGx1Z2luIHRvIGxvYWQgc2QgaW50byBpbm9k
ZS4gKi8KKwkJcmVzdWx0ID0gaW5pdF9pbm9kZShpbm9kZSwgJmNvb3JkKTsKKwkJaWYgKHJlc3Vs
dCA9PSAwKSB7CisJCQkvKiBpbml0aWFsaXplIHN0YXQtZGF0YSBzZWFsICovCisJCQlzcGluX2xv
Y2tfaW5vZGUoaW5vZGUpOworCQkJcmVpc2VyNF9zZWFsX2luaXQoJmluZm8tPnNkX3NlYWwsICZj
b29yZCwga2V5KTsKKwkJCWluZm8tPnNkX2Nvb3JkID0gY29vcmQ7CisJCQlzcGluX3VubG9ja19p
bm9kZShpbm9kZSk7CisKKwkJCS8qIGNhbGwgZmlsZSBwbHVnaW4ncyBtZXRob2QgdG8gaW5pdGlh
bGl6ZSBwbHVnaW4KKwkJCSAqIHNwZWNpZmljIHBhcnQgb2YgaW5vZGUgKi8KKwkJCWlmIChpbm9k
ZV9maWxlX3BsdWdpbihpbm9kZSktPmluaXRfaW5vZGVfZGF0YSkKKwkJCQlpbm9kZV9maWxlX3Bs
dWdpbihpbm9kZSktPmluaXRfaW5vZGVfZGF0YShpbm9kZSwKKwkJCQkJCQkJCSAgTlVMTCwKKwkJ
CQkJCQkJCSAgMCk7CisJCQkvKiBsb2FkIGRldGFjaGVkIGRpcmVjdG9yeSBjdXJzb3JzIGZvciBz
dGF0ZWxlc3MKKwkJCSAqIGRpcmVjdG9yeSByZWFkZXJzIChORlMpLiAqLworCQkJcmVpc2VyNF9s
b2FkX2N1cnNvcnMoaW5vZGUpOworCisJCQkvKiBDaGVjayB0aGUgb3BlbmVkIGlub2RlIGZvciBj
b25zaXN0ZW5jeS4gKi8KKwkJCXJlc3VsdCA9CisJCQkgICAgZ2V0X3N1cGVyX3ByaXZhdGUoaW5v
ZGUtPmlfc2IpLT5kZl9wbHVnLT4KKwkJCSAgICBjaGVja19vcGVuKGlub2RlKTsKKwkJfQorCX0K
KwkvKiBsb29rdXBfc2QoKSBkb2Vzbid0IHJlbGVhc2UgY29vcmQgYmVjYXVzZSB3ZSB3YW50IHpu
b2RlCisJICAgc3RheSByZWFkLWxvY2tlZCB3aGlsZSBzdGF0LWRhdGEgZmllbGRzIGFyZSBhY2Nl
c3NlZCBpbgorCSAgIGluaXRfaW5vZGUoKSAqLworCWRvbmVfbGgoJmxoKTsKKworCWlmIChyZXN1
bHQgIT0gMCkKKwkJcmVpc2VyNF9tYWtlX2JhZF9pbm9kZShpbm9kZSk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyogaW5pdGlhbGlzZSBuZXcgcmVpc2VyNCBpbm9kZSBiZWluZyBpbnNlcnRlZCBp
bnRvIGhhc2ggdGFibGUuICovCitzdGF0aWMgaW50IGluaXRfbG9ja2VkX2lub2RlKHN0cnVjdCBp
bm9kZSAqaW5vZGUgLyogbmV3IGlub2RlICovICwKKwkJCSAgICAgdm9pZCAqb3BhcXVlCS8qIGtl
eSBvZiBzdGF0IGRhdGEgcGFzc2VkIHRvCisJCQkJCQkqIHRoZSBpZ2V0NV9sb2NrZWQgYXMgY29v
a2llICovKQoreworCXJlaXNlcjRfa2V5ICprZXk7CisKKwlhc3NlcnQoIm5pa2l0YS0xOTk1Iiwg
aW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTk5NiIsIG9wYXF1ZSAhPSBOVUxMKTsK
KwlrZXkgPSBvcGFxdWU7CisJc2V0X2lub2RlX29pZChpbm9kZSwgZ2V0X2tleV9vYmplY3RpZChr
ZXkpKTsKKwlyZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5sb2NhbGl0eV9pZCA9IGdldF9rZXlf
bG9jYWxpdHkoa2V5KTsKKwlyZXR1cm4gMDsKK30KKworLyogcmVpc2VyNF9pbm9kZV9maW5kX2Fj
dG9yKCkgLSAiZmluZCBhY3RvciIgc3VwcGxpZWQgYnkgcmVpc2VyNCB0bworICAgaWdldDVfbG9j
a2VkKCkuCisKKyAgIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IGlnZXQ1X2xvY2tlZCgpIHRv
IGRpc3Rpbmd1aXNoIHJlaXNlcjQgaW5vZGVzCisgICBoYXZpbmcgdGhlIHNhbWUgaW5vZGUgbnVt
YmVycy4gU3VjaCBpbm9kZXMgY2FuIG9ubHkgZXhpc3QgZHVlIHRvIHNvbWUgZXJyb3IKKyAgIGNv
bmRpdGlvbi4gT25lIG9mIHRoZW0gc2hvdWxkIGJlIGJhZC4gSW5vZGVzIHdpdGggaWRlbnRpY2Fs
IGlub2RlIG51bWJlcnMKKyAgIChvYmplY3RpZHMpIGFyZSBkaXN0aW5ndWlzaGVkIGJ5IHRoZWly
IHBhY2tpbmcgbG9jYWxpdHkuCisKKyovCitzdGF0aWMgaW50IHJlaXNlcjRfaW5vZGVfZmluZF9h
Y3RvcihzdHJ1Y3QgaW5vZGUgKmlub2RlCS8qIGlub2RlIGZyb20gaGFzaCB0YWJsZQorCQkJCQkJ
CSAqIHRvIGNoZWNrICovICwKKwkJCQkgICAgdm9pZCAqb3BhcXVlICAgICAgICAvKiAiY29va2ll
IiBwYXNzZWQgdG8KKwkJCQkJCSAgICAgICAgICogaWdldDVfbG9ja2VkKCkuIFRoaXMKKwkJCQkJ
CQkgKiBpcyBzdGF0LWRhdGEga2V5ICovKQoreworCXJlaXNlcjRfa2V5ICprZXk7CisKKwlrZXkg
PSBvcGFxdWU7CisJcmV0dXJuCisJICAgIC8qIG9pZCBpcyB1bmlxdWUsIHNvIGZpcnN0IHRlcm0g
aXMgZW5vdWdoLCBhY3R1YWxseS4gKi8KKwkgICAgZ2V0X2lub2RlX29pZChpbm9kZSkgPT0gZ2V0
X2tleV9vYmplY3RpZChrZXkpICYmCisJICAgIC8qCisJICAgICAqIGFsc28sIGxvY2FsaXR5IHNo
b3VsZCBiZSBjaGVja2VkLCBidXQgbG9jYWxpdHkgaXMgc3RvcmVkIGluCisJICAgICAqIHRoZSBy
ZWlzZXI0LXNwZWNpZmljIHBhcnQgb2YgdGhlIGlub2RlLCBhbmQgYWN0b3IgY2FuIGJlCisJICAg
ICAqIGNhbGxlZCBhZ2FpbnN0IGFyYml0cmFyeSBpbm9kZSB0aGF0IGhhcHBlbmVkIHRvIGJlIGlu
IHRoaXMKKwkgICAgICogaGFzaCBjaGFpbi4gSGVuY2Ugd2UgZmlyc3QgaGF2ZSB0byBjaGVjayB0
aGF0IHRoaXMgaXMKKwkgICAgICogcmVpc2VyNCBpbm9kZSBhdCBsZWFzdC4gaXNfcmVpc2VyNF9p
bm9kZSgpIGlzIHByb2JhYmx5IHRvbworCSAgICAgKiBlYXJseSB0byBjYWxsLCBhcyBpbm9kZSBt
YXkgaGF2ZSAtPmlfb3Agbm90IHlldAorCSAgICAgKiBpbml0aWFsaXNlZC4KKwkgICAgICovCisJ
ICAgIGlzX3JlaXNlcjRfc3VwZXIoaW5vZGUtPmlfc2IpICYmCisJICAgIC8qCisJICAgICAqIHVz
dWFsbHkgb2JqZWN0aWQgaXMgdW5pcXVlLCBidXQgcHNldWRvIGZpbGVzIHVzZSBjb3VudGVyIHRv
CisJICAgICAqIGdlbmVyYXRlIG9iamVjdGlkLiBBbGwgcHNldWRvIGZpbGVzIGFyZSBwbGFjZWQg
aW50byBzcGVjaWFsCisJICAgICAqIChvdGhlcndpc2UgdW51c2VkKSBsb2NhbGl0eS4KKwkgICAg
ICovCisJICAgIHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPmxvY2FsaXR5X2lkID09IGdldF9r
ZXlfbG9jYWxpdHkoa2V5KTsKK30KKworLyogaG9vayBmb3Iga21lbV9jYWNoZV9jcmVhdGUgKi8K
K3ZvaWQgbG9hZGluZ19pbml0X29uY2UocmVpc2VyNF9pbm9kZSAqIGluZm8pCit7CisJbXV0ZXhf
aW5pdCgmaW5mby0+bG9hZGluZyk7Cit9CisKKy8qIGZvciByZWlzZXI0X2FsbG9jX2lub2RlICov
Cit2b2lkIGxvYWRpbmdfYWxsb2MocmVpc2VyNF9pbm9kZSAqIGluZm8pCit7CisJYXNzZXJ0KCJ2
cy0xNzE3IiwgIW11dGV4X2lzX2xvY2tlZCgmaW5mby0+bG9hZGluZykpOworfQorCisvKiBmb3Ig
cmVpc2VyNF9kZXN0cm95ICovCit2b2lkIGxvYWRpbmdfZGVzdHJveShyZWlzZXI0X2lub2RlICog
aW5mbykKK3sKKwlhc3NlcnQoInZzLTE3MTdhIiwgIW11dGV4X2lzX2xvY2tlZCgmaW5mby0+bG9h
ZGluZykpOworfQorCitzdGF0aWMgdm9pZCBsb2FkaW5nX2JlZ2luKHJlaXNlcjRfaW5vZGUgKiBp
bmZvKQoreworCW11dGV4X2xvY2soJmluZm8tPmxvYWRpbmcpOworfQorCitzdGF0aWMgdm9pZCBs
b2FkaW5nX2VuZChyZWlzZXI0X2lub2RlICogaW5mbykKK3sKKwltdXRleF91bmxvY2soJmluZm8t
PmxvYWRpbmcpOworfQorCisvKioKKyAqIHJlaXNlcjRfaWdldCAtIG9idGFpbiBpbm9kZSB2aWEg
aWdldDVfbG9ja2VkLCByZWFkIGZyb20gZGlzayBpZiBuZWNlc3NhcnkKKyAqIEBzdXBlcjogc3Vw
ZXIgYmxvY2sgb2YgZmlsZXN5c3RlbQorICogQGtleToga2V5IG9mIGlub2RlJ3Mgc3RhdC1kYXRh
CisgKiBAc2lsZW50OgorICoKKyAqIFRoaXMgaXMgb3VyIGhlbHBlciBmdW5jdGlvbiBhIGxhIGln
ZXQoKS4gVGhpcyBpcyBiZSBjYWxsZWQgYnkKKyAqIGxvb2t1cF9jb21tb24oKSBhbmQgcmVpc2Vy
NF9yZWFkX3N1cGVyKCkuIFJldHVybiBpbm9kZSBsb2NrZWQgb3IgZXJyb3IKKyAqIGVuY291bnRl
cmVkLgorICovCitzdHJ1Y3QgaW5vZGUgKnJlaXNlcjRfaWdldChzdHJ1Y3Qgc3VwZXJfYmxvY2sg
KnN1cGVyLCBjb25zdCByZWlzZXI0X2tleSAqa2V5LAorCQkJICAgaW50IHNpbGVudCkKK3sKKwlz
dHJ1Y3QgaW5vZGUgKmlub2RlOworCWludCByZXN1bHQ7CisJcmVpc2VyNF9pbm9kZSAqaW5mbzsK
KworCWFzc2VydCgibmlraXRhLTMwMiIsIHN1cGVyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTMwMyIsIGtleSAhPSBOVUxMKTsKKworCXJlc3VsdCA9IDA7CisKKwkvKiBjYWxsIGlnZXQoKS4g
T3VyIC0+cmVhZF9pbm9kZSgpIGlzIGR1bW15LCBzbyB0aGlzIHdpbGwgZWl0aGVyCisJICAgZmlu
ZCBpbm9kZSBpbiBjYWNoZSBvciByZXR1cm4gdW5pbml0aWFsaXNlZCBpbm9kZSAqLworCWlub2Rl
ID0gaWdldDVfbG9ja2VkKHN1cGVyLAorCQkJICAgICAodW5zaWduZWQgbG9uZylnZXRfa2V5X29i
amVjdGlkKGtleSksCisJCQkgICAgIHJlaXNlcjRfaW5vZGVfZmluZF9hY3RvciwKKwkJCSAgICAg
aW5pdF9sb2NrZWRfaW5vZGUsIChyZWlzZXI0X2tleSAqKSBrZXkpOworCWlmIChpbm9kZSA9PSBO
VUxMKQorCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkpOworCWlmIChpc19iYWRfaW5v
ZGUoaW5vZGUpKSB7CisJCXdhcm5pbmcoIm5pa2l0YS0zMDQiLCAiQmFkIGlub2RlIGZvdW5kIik7
CisJCXJlaXNlcjRfcHJpbnRfa2V5KCJrZXkiLCBrZXkpOworCQlpcHV0KGlub2RlKTsKKwkJcmV0
dXJuIEVSUl9QVFIoUkVURVJSKC1FSU8pKTsKKwl9CisKKwlpbmZvID0gcmVpc2VyNF9pbm9kZV9k
YXRhKGlub2RlKTsKKworCS8qIFJlaXNlcjQgaW5vZGUgc3RhdGUgYml0IFJFSVNFUjRfTE9BREVE
IGlzIHVzZWQgdG8gZGlzdGluZ3Vpc2ggZnVsbHkKKwkgICBsb2FkZWQgYW5kIGluaXRpYWxpemVk
IGlub2RlIGZyb20ganVzdCBhbGxvY2F0ZWQgaW5vZGUuIElmCisJICAgUkVJU0VSNF9MT0FERUQg
Yml0IGlzIG5vdCBzZXQsIHJlaXNlcjRfaWdldCgpIGNvbXBsZXRlcyBsb2FkaW5nIHVuZGVyCisJ
ICAgaW5mby0+bG9hZGluZy4gIFRoZSBwbGFjZSBpbiByZWlzZXI0IHdoaWNoIHVzZXMgbm90IGlu
aXRpYWxpemVkIGlub2RlCisJICAgaXMgdGhlIHJlaXNlcjQgcmVwYWNrZXIsIHNlZSByZXBhY2tl
ci1yZWxhdGVkIGZ1bmN0aW9ucyBpbgorCSAgIHBsdWdpbi9pdGVtL2V4dGVudC5jICovCisJaWYg
KCFpc19pbm9kZV9sb2FkZWQoaW5vZGUpKSB7CisJCWxvYWRpbmdfYmVnaW4oaW5mbyk7CisJCWlm
ICghaXNfaW5vZGVfbG9hZGVkKGlub2RlKSkgeworCQkJLyogbG9ja2luZzogaWdldDVfbG9ja2Vk
IHJldHVybnMgbG9ja2VkIGlub2RlICovCisJCQlhc3NlcnQoIm5pa2l0YS0xOTQxIiwgIWlzX2lu
b2RlX2xvYWRlZChpbm9kZSkpOworCQkJYXNzZXJ0KCJuaWtpdGEtMTk0OSIsCisJCQkgICAgICAg
cmVpc2VyNF9pbm9kZV9maW5kX2FjdG9yKGlub2RlLAorCQkJCQkJCShyZWlzZXI0X2tleSAqKSBr
ZXkpKTsKKwkJCS8qIG5vdywgaW5vZGUgaGFzIG9iamVjdGlkIGFzIC0+aV9pbm8gYW5kIGxvY2Fs
aXR5IGluCisJCQkgICByZWlzZXI0LXNwZWNpZmljIHBhcnQuIFRoaXMgaXMgZW5vdWdoIGZvcgor
CQkJICAgcmVhZF9pbm9kZSgpIHRvIHJlYWQgc3RhdCBkYXRhIGZyb20gdGhlIGRpc2sgKi8KKwkJ
CXJlc3VsdCA9IHJlYWRfaW5vZGUoaW5vZGUsIGtleSwgc2lsZW50KTsKKwkJfSBlbHNlCisJCQls
b2FkaW5nX2VuZChpbmZvKTsKKwl9CisKKwlpZiAoaW5vZGUtPmlfc3RhdGUgJiBJX05FVykKKwkJ
dW5sb2NrX25ld19pbm9kZShpbm9kZSk7CisKKwlpZiAoaXNfYmFkX2lub2RlKGlub2RlKSkgewor
CQlhc3NlcnQoInZzLTE3MTciLCByZXN1bHQgIT0gMCk7CisJCWxvYWRpbmdfZW5kKGluZm8pOwor
CQlpcHV0KGlub2RlKTsKKwkJaW5vZGUgPSBFUlJfUFRSKHJlc3VsdCk7CisJfSBlbHNlIGlmIChS
RUlTRVI0X0RFQlVHKSB7CisJCXJlaXNlcjRfa2V5IGZvdW5kX2tleTsKKworCQlhc3NlcnQoInZz
LTE3MTciLCByZXN1bHQgPT0gMCk7CisJCWJ1aWxkX3NkX2tleShpbm9kZSwgJmZvdW5kX2tleSk7
CisJCWlmICgha2V5ZXEoJmZvdW5kX2tleSwga2V5KSkgeworCQkJd2FybmluZygibmlraXRhLTMw
NSIsICJXcm9uZyBrZXkgaW4gc2QiKTsKKwkJCXJlaXNlcjRfcHJpbnRfa2V5KCJzb3VnaHQgZm9y
Iiwga2V5KTsKKwkJCXJlaXNlcjRfcHJpbnRfa2V5KCJmb3VuZCIsICZmb3VuZF9rZXkpOworCQl9
CisJCWlmIChpbm9kZS0+aV9ubGluayA9PSAwKSB7CisJCQl3YXJuaW5nKCJuaWtpdGEtMzU1OSIs
ICJVbmxpbmtlZCBpbm9kZSBmb3VuZDogJWxsdVxuIiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25n
KWdldF9pbm9kZV9vaWQoaW5vZGUpKTsKKwkJfQorCX0KKwlyZXR1cm4gaW5vZGU7Cit9CisKKy8q
IHJlaXNlcjRfaWdldCgpIG1heSByZXR1cm4gbm90IGZ1bGx5IGluaXRpYWxpemVkIGlub2RlLCB0
aGlzIGZ1bmN0aW9uIHNob3VsZAorICogYmUgY2FsbGVkIGFmdGVyIG9uZSBjb21wbGV0ZXMgcmVp
c2VyNCBpbm9kZSBpbml0aWFsaXppbmcuICovCit2b2lkIHJlaXNlcjRfaWdldF9jb21wbGV0ZShz
dHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWFzc2VydCgiemFtLTk4OCIsIGlzX3JlaXNlcjRfaW5v
ZGUoaW5vZGUpKTsKKworCWlmICghaXNfaW5vZGVfbG9hZGVkKGlub2RlKSkgeworCQlyZWlzZXI0
X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlTRVI0X0xPQURFRCk7CisJCWxvYWRpbmdfZW5kKHJl
aXNlcjRfaW5vZGVfZGF0YShpbm9kZSkpOworCX0KK30KKwordm9pZCByZWlzZXI0X21ha2VfYmFk
X2lub2RlKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMTkzNCIsIGlu
b2RlICE9IE5VTEwpOworCisJLyogY2xlYXIgTE9BREVEIGJpdCAqLworCXJlaXNlcjRfaW5vZGVf
Y2xyX2ZsYWcoaW5vZGUsIFJFSVNFUjRfTE9BREVEKTsKKwltYWtlX2JhZF9pbm9kZShpbm9kZSk7
CisJcmV0dXJuOworfQorCitmaWxlX3BsdWdpbiAqaW5vZGVfZmlsZV9wbHVnaW4oY29uc3Qgc3Ry
dWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xOTk3IiwgaW5vZGUgIT0gTlVM
TCk7CisJcmV0dXJuIHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQtPmZpbGU7Cit9CisK
K2Rpcl9wbHVnaW4gKmlub2RlX2Rpcl9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkK
K3sKKwlhc3NlcnQoIm5pa2l0YS0xOTk4IiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNl
cjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQtPmRpcjsKK30KKworZm9ybWF0dGluZ19wbHVnaW4g
Kmlub2RlX2Zvcm1hdHRpbmdfcGx1Z2luKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJ
YXNzZXJ0KCJuaWtpdGEtMjAwMCIsIGlub2RlICE9IE5VTEwpOworCXJldHVybiByZWlzZXI0X2lu
b2RlX2RhdGEoaW5vZGUpLT5wc2V0LT5mb3JtYXR0aW5nOworfQorCitoYXNoX3BsdWdpbiAqaW5v
ZGVfaGFzaF9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoIm5p
a2l0YS0yMDAxIiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNlcjRfaW5vZGVfZGF0YShp
bm9kZSktPnBzZXQtPmhhc2g7Cit9CisKK2ZpYnJhdGlvbl9wbHVnaW4gKmlub2RlX2ZpYnJhdGlv
bl9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0y
MDAxIiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSkt
PnBzZXQtPmZpYnJhdGlvbjsKK30KKworY2lwaGVyX3BsdWdpbiAqaW5vZGVfY2lwaGVyX3BsdWdp
bihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWFzc2VydCgiZWR3YXJkLTM2IiwgaW5v
ZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQtPmNp
cGhlcjsKK30KKworY29tcHJlc3Npb25fcGx1Z2luICppbm9kZV9jb21wcmVzc2lvbl9wbHVnaW4o
Y29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC0zNyIsIGlub2Rl
ICE9IE5VTEwpOworCXJldHVybiByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5wc2V0LT5jb21w
cmVzc2lvbjsKK30KKworY29tcHJlc3Npb25fbW9kZV9wbHVnaW4gKmlub2RlX2NvbXByZXNzaW9u
X21vZGVfcGx1Z2luKGNvbnN0IHN0cnVjdCBpbm9kZSAqCisJCQkJCQkgICAgICAgaW5vZGUpCit7
CisJYXNzZXJ0KCJlZHdhcmQtMTMzMCIsIGlub2RlICE9IE5VTEwpOworCXJldHVybiByZWlzZXI0
X2lub2RlX2RhdGEoaW5vZGUpLT5wc2V0LT5jb21wcmVzc2lvbl9tb2RlOworfQorCitjbHVzdGVy
X3BsdWdpbiAqaW5vZGVfY2x1c3Rlcl9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkK
K3sKKwlhc3NlcnQoImVkd2FyZC0xMzI4IiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNl
cjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQtPmNsdXN0ZXI7Cit9CisKK2ZpbGVfcGx1Z2luICpp
bm9kZV9jcmVhdGVfcGx1Z2luKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJYXNzZXJ0
KCJlZHdhcmQtMTMyOSIsIGlub2RlICE9IE5VTEwpOworCXJldHVybiByZWlzZXI0X2lub2RlX2Rh
dGEoaW5vZGUpLT5wc2V0LT5jcmVhdGU7Cit9CisKK2RpZ2VzdF9wbHVnaW4gKmlub2RlX2RpZ2Vz
dF9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC04
NiIsIGlub2RlICE9IE5VTEwpOworCXJldHVybiByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5w
c2V0LT5kaWdlc3Q7Cit9CisKK2l0ZW1fcGx1Z2luICppbm9kZV9zZF9wbHVnaW4oY29uc3Qgc3Ry
dWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoInZzLTUzNCIsIGlub2RlICE9IE5VTEwpOwor
CXJldHVybiByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5wc2V0LT5zZDsKK30KKworaXRlbV9w
bHVnaW4gKmlub2RlX2Rpcl9pdGVtX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQor
eworCWFzc2VydCgidnMtNTM0IiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNlcjRfaW5v
ZGVfZGF0YShpbm9kZSktPnBzZXQtPmRpcl9pdGVtOworfQorCitmaWxlX3BsdWdpbiAqY2hpbGRf
Y3JlYXRlX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWFzc2VydCgiZWR3
YXJkLTEzMjkiLCBpbm9kZSAhPSBOVUxMKTsKKwlyZXR1cm4gcmVpc2VyNF9pbm9kZV9kYXRhKGlu
b2RlKS0+aHNldC0+Y3JlYXRlOworfQorCit2b2lkIGlub2RlX3NldF9leHRlbnNpb24oc3RydWN0
IGlub2RlICppbm9kZSwgc2RfZXh0X2JpdHMgZXh0KQoreworCXJlaXNlcjRfaW5vZGUgKnN0YXRl
OworCisJYXNzZXJ0KCJuaWtpdGEtMjcxNiIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTI3MTciLCBleHQgPCBMQVNUX1NEX0VYVEVOU0lPTik7CisJYXNzZXJ0KCJuaWtpdGEtMzQ5
MSIsIHNwaW5faW5vZGVfaXNfbG9ja2VkKGlub2RlKSk7CisKKwlzdGF0ZSA9IHJlaXNlcjRfaW5v
ZGVfZGF0YShpbm9kZSk7CisJc3RhdGUtPmV4dG1hc2sgfD0gMSA8PCBleHQ7CisJLyogZm9yY2Ug
cmUtY2FsY3VsYXRpb24gb2Ygc3RhdC1kYXRhIGxlbmd0aCBvbiBuZXh0IGNhbGwgdG8KKwkgICB1
cGRhdGVfc2QoKS4gKi8KKwlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKGlub2RlLCBSRUlTRVI0X1NE
TEVOX0tOT1dOKTsKK30KKwordm9pZCBpbm9kZV9jbHJfZXh0ZW5zaW9uKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIHNkX2V4dF9iaXRzIGV4dCkKK3sKKwlyZWlzZXI0X2lub2RlICpzdGF0ZTsKKworCWFz
c2VydCgidnBmLTE5MjYiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInZwZi0xOTI3IiwgZXh0
IDwgTEFTVF9TRF9FWFRFTlNJT04pOworCWFzc2VydCgidnBmLTE5MjgiLCBzcGluX2lub2RlX2lz
X2xvY2tlZChpbm9kZSkpOworCisJc3RhdGUgPSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpOwor
CXN0YXRlLT5leHRtYXNrICY9IH4oMSA8PCBleHQpOworCS8qIGZvcmNlIHJlLWNhbGN1bGF0aW9u
IG9mIHN0YXQtZGF0YSBsZW5ndGggb24gbmV4dCBjYWxsIHRvCisJICAgdXBkYXRlX3NkKCkuICov
CisJcmVpc2VyNF9pbm9kZV9jbHJfZmxhZyhpbm9kZSwgUkVJU0VSNF9TRExFTl9LTk9XTik7Cit9
CisKK3ZvaWQgaW5vZGVfY2hlY2tfc2NhbGVfbm9sb2NrKHN0cnVjdCBpbm9kZSAqaW5vZGUsIF9f
dTY0IG9sZCwgX191NjQgbmV3KQoreworCWFzc2VydCgiZWR3YXJkLTEyODciLCBpbm9kZSAhPSBO
VUxMKTsKKwlpZiAoIWRzY2FsZV9maXQob2xkLCBuZXcpKQorCQlyZWlzZXI0X2lub2RlX2Nscl9m
bGFnKGlub2RlLCBSRUlTRVI0X1NETEVOX0tOT1dOKTsKKwlyZXR1cm47Cit9CisKK3ZvaWQgaW5v
ZGVfY2hlY2tfc2NhbGUoc3RydWN0IGlub2RlICppbm9kZSwgX191NjQgb2xkLCBfX3U2NCBuZXcp
Cit7CisJYXNzZXJ0KCJuaWtpdGEtMjg3NSIsIGlub2RlICE9IE5VTEwpOworCXNwaW5fbG9ja19p
bm9kZShpbm9kZSk7CisJaW5vZGVfY2hlY2tfc2NhbGVfbm9sb2NrKGlub2RlLCBvbGQsIG5ldyk7
CisJc3Bpbl91bmxvY2tfaW5vZGUoaW5vZGUpOworfQorCisvKgorICogaW5pdGlhbGl6ZSAtPm9y
ZGVyaW5nIGZpZWxkIG9mIGlub2RlLiBUaGlzIGZpZWxkIGRlZmluZXMgaG93IGZpbGUgc3RhdC1k
YXRhCisgKiBhbmQgYm9keSBpcyBvcmRlcmVkIHdpdGhpbiBhIHRyZWUgd2l0aCByZXNwZWN0IHRv
IG90aGVyIG9iamVjdHMgd2l0aGluIHRoZQorICogc2FtZSBwYXJlbnQgZGlyZWN0b3J5LgorICov
Cit2b2lkCitpbml0X2lub2RlX29yZGVyaW5nKHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCSAgICBy
ZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGNyZCwgaW50IGNyZWF0ZSkKK3sKKwlyZWlzZXI0
X2tleSBrZXk7CisKKwlpZiAoY3JlYXRlKSB7CisJCXN0cnVjdCBpbm9kZSAqcGFyZW50OworCisJ
CXBhcmVudCA9IGNyZC0+cGFyZW50OworCQlhc3NlcnQoIm5pa2l0YS0zMjI0IiwgaW5vZGVfZGly
X3BsdWdpbihwYXJlbnQpICE9IE5VTEwpOworCQlpbm9kZV9kaXJfcGx1Z2luKHBhcmVudCktPmJ1
aWxkX2VudHJ5X2tleShwYXJlbnQsCisJCQkJCQkJICAmY3JkLT5kZW50cnktPmRfbmFtZSwKKwkJ
CQkJCQkgICZrZXkpOworCX0gZWxzZSB7CisJCWNvb3JkX3QgKmNvb3JkOworCisJCWNvb3JkID0g
JnJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPnNkX2Nvb3JkOworCQljb29yZF9jbGVhcl9pcGx1
Zyhjb29yZCk7CisJCS8qIHNhZmUgdG8gdXNlIC0+c2RfY29vcmQsIGJlY2F1c2Ugbm9kZSBpcyB1
bmRlciBsb25nIHRlcm0KKwkJICogbG9jayAqLworCQlXSVRIX0RBVEEoY29vcmQtPm5vZGUsIGl0
ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KSk7CisJfQorCisJc2V0X2lub2RlX29yZGVyaW5n
KGlub2RlLCBnZXRfa2V5X29yZGVyaW5nKCZrZXkpKTsKK30KKworem5vZGUgKmlub2RlX2dldF92
cm9vdChzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJlaXNlcjRfYmxvY2tfbnIgYmxrOworCXpu
b2RlICpyZXN1bHQ7CisKKwlzcGluX2xvY2tfaW5vZGUoaW5vZGUpOworCWJsayA9IHJlaXNlcjRf
aW5vZGVfZGF0YShpbm9kZSktPnZyb290OworCXNwaW5fdW5sb2NrX2lub2RlKGlub2RlKTsKKwlp
ZiAoIWRpc2tfYWRkcl9lcSgmVUJFUl9UUkVFX0FERFIsICZibGspKQorCQlyZXN1bHQgPSB6bG9v
ayhyZWlzZXI0X3RyZWVfYnlfaW5vZGUoaW5vZGUpLCAmYmxrKTsKKwllbHNlCisJCXJlc3VsdCA9
IE5VTEw7CisJcmV0dXJuIHJlc3VsdDsKK30KKwordm9pZCBpbm9kZV9zZXRfdnJvb3Qoc3RydWN0
IGlub2RlICppbm9kZSwgem5vZGUgKnZyb290KQoreworCXNwaW5fbG9ja19pbm9kZShpbm9kZSk7
CisJcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKS0+dnJvb3QgPSAqem5vZGVfZ2V0X2Jsb2NrKHZy
b290KTsKKwlzcGluX3VubG9ja19pbm9kZShpbm9kZSk7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVH
CisKK3ZvaWQgcmVpc2VyNF9pbm9kZV9pbnZhcmlhbnQoY29uc3Qgc3RydWN0IGlub2RlICppbm9k
ZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zMDc3Iiwgc3Bpbl9pbm9kZV9pc19sb2NrZWQoaW5vZGUp
KTsKK30KKworaW50IGlub2RlX2hhc19ub19qbm9kZXMocmVpc2VyNF9pbm9kZSAqIHI0X2lub2Rl
KQoreworCXJldHVybiByYWRpeF90cmVlX2VtcHR5KGpub2RlX3RyZWVfYnlfcmVpc2VyNF9pbm9k
ZShyNF9pbm9kZSkpICYmCisJCXI0X2lub2RlLT5ucl9qbm9kZXMgPT0gMDsKK30KKworI2VuZGlm
CisKKy8qIHRydWUgaWYgZGlyZWN0b3J5IGlzIGVtcHR5IChvbmx5IGNvbnRhaW5zIGRvdCBhbmQg
ZG90ZG90KSAqLworLyogRklYTUU6IHNob3VsZG4ndCBpdCBiZSBkaXIgcGx1Z2luIG1ldGhvZD8g
Ki8KK2ludCBpc19kaXJfZW1wdHkoY29uc3Qgc3RydWN0IGlub2RlICpkaXIpCit7CisJYXNzZXJ0
KCJuaWtpdGEtMTk3NiIsIGRpciAhPSBOVUxMKTsKKworCS8qIHJlbHkgb24gb3VyIG1ldGhvZCB0
byBtYWludGFpbiBkaXJlY3RvcnkgaV9zaXplIGJlaW5nIGVxdWFsIHRvIHRoZQorCSAgIG51bWJl
ciBvZiBlbnRyaWVzLiAqLworCXJldHVybiBkaXItPmlfc2l6ZSA8PSAyID8gMCA6IFJFVEVSUigt
RU5PVEVNUFRZKTsKK30KKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxl
czoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAg
IGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAK
KyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvaW5vZGUuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9pbm9kZS5oCi0tLSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2lub2RlLmgJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2lub2RlLmgJMjAyMC0w
Mi0wNSAyMDo1Mzo0MS40NTMyMjIxNzcgKzAxMDAKQEAgLTAsMCArMSw1MDYgQEAKKy8qIENvcHly
aWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQg
YnkKKyAgIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIElub2RlIGZ1bmN0aW9ucy4gKi8KKworI2lm
ICFkZWZpbmVkKF9fUkVJU0VSNF9JTk9ERV9IX18pCisjZGVmaW5lIF9fUkVJU0VSNF9JTk9ERV9I
X18KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUg
ImtleS5oIgorI2luY2x1ZGUgInNlYWwuaCIKKyNpbmNsdWRlICJwbHVnaW4vcGx1Z2luLmgiCisj
aW5jbHVkZSAicGx1Z2luL2ZpbGUvY3J5cHRjb21wcmVzcy5oIgorI2luY2x1ZGUgInBsdWdpbi9m
aWxlL2ZpbGUuaCIKKyNpbmNsdWRlICJwbHVnaW4vZGlyL2Rpci5oIgorI2luY2x1ZGUgInBsdWdp
bi9wbHVnaW5fc2V0LmgiCisjaW5jbHVkZSAicGx1Z2luL3NlY3VyaXR5L3Blcm0uaCIKKyNpbmNs
dWRlICJ2ZnNfb3BzLmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJmc2RhdGEuaCIK
KworI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CS8qIGZvciBfX3U/PyAsIGlub190ICovCisjaW5j
bHVkZSA8bGludXgvZnMuaD4JCS8qIGZvciBzdHJ1Y3Qgc3VwZXJfYmxvY2ssIHN0cnVjdAorCQkJ
CSAqIHJ3X3NlbWFwaG9yZSwgZXRjICAqLworI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+Cisj
aW5jbHVkZSA8YXNtL3R5cGVzLmg+CisKKy8qIHJlaXNlcjQtc3BlY2lmaWMgaW5vZGUgZmxhZ3Mu
IFRoZXkgYXJlICJ0cmFuc2llbnQiIGFuZCBhcmUgbm90CisgICBzdXBwb3NlZCB0byBiZSBzdG9y
ZWQgb24gZGlzay4gVXNlZCB0byB0cmFjZSAic3RhdGUiIG9mCisgICBpbm9kZQorKi8KK3R5cGVk
ZWYgZW51bSB7CisJLyogdGhpcyBpcyBsaWdodC13ZWlnaHQgaW5vZGUsIGluaGVyaXRpbmcgc29t
ZSBzdGF0ZSBmcm9tIGl0cworCSAgIHBhcmVudCAgKi8KKwlSRUlTRVI0X0xJR0hUX1dFSUdIVCA9
IDAsCisJLyogc3RhdCBkYXRhIHdhc24ndCB5ZXQgY3JlYXRlZCAqLworCVJFSVNFUjRfTk9fU0Qg
PSAxLAorCS8qIGludGVybmFsIGltbXV0YWJsZSBmbGFnLiBDdXJyZW50bHkgaXMgb25seSB1c2Vk
CisJICAgdG8gYXZvaWQgcmFjZSBjb25kaXRpb24gZHVyaW5nIGZpbGUgY3JlYXRpb24uCisJICAg
U2VlIGNvbW1lbnQgaW4gY3JlYXRlX29iamVjdCgpLiAqLworCVJFSVNFUjRfSU1NVVRBQkxFID0g
MiwKKwkvKiBpbm9kZSB3YXMgcmVhZCBmcm9tIHN0b3JhZ2UgKi8KKwlSRUlTRVI0X0xPQURFRCA9
IDMsCisJLyogdGhpcyBiaXQgaXMgc2V0IGZvciBzeW1saW5rcy4gaW5vZGUtPmlfcHJpdmF0ZSBw
b2ludHMgdG8gdGFyZ2V0CisJICAgbmFtZSBvZiBzeW1saW5rLiAqLworCVJFSVNFUjRfR0VORVJJ
Q19QVFJfVVNFRCA9IDQsCisJLyogc2V0IGlmIHNpemUgb2Ygc3RhdC1kYXRhIGl0ZW0gZm9yIHRo
aXMgaW5vZGUgaXMga25vd24uIElmIHRoaXMgaXMKKwkgKiBzZXQgd2UgY2FuIGF2b2lkIHJlY2Fs
Y3VsYXRpbmcgc2l6ZSBvZiBzdGF0LWRhdGEgb24gZWFjaCB1cGRhdGUuICovCisJUkVJU0VSNF9T
RExFTl9LTk9XTiA9IDUsCisJLyogcmVpc2VyNF9pbm9kZS0+Y3J5cHQgcG9pbnRzIHRvIHRoZSBj
cnlwdG8gc3RhdCAqLworCVJFSVNFUjRfQ1JZUFRPX1NUQVRfTE9BREVEID0gNiwKKwkvKiBjcnlw
dGNvbXByZXNzX2lub2RlX2RhdGEgcG9pbnRzIHRvIHRoZSBzZWNyZXQga2V5ICovCisJUkVJU0VS
NF9TRUNSRVRfS0VZX0lOU1RBTExFRCA9IDcsCisJLyogRmlsZSAocG9zc2libHkpIGhhcyBwYWdl
cyBjb3JyZXNwb25kaW5nIHRvIHRoZSB0YWlsIGl0ZW1zLCB0aGF0CisJICogd2VyZSBjcmVhdGVk
IGJ5IC0+cmVhZHBhZ2UuIEl0IGlzIHNldCBieSBtbWFwX3VuaXhfZmlsZSgpIGFuZAorCSAqIHNl
bmRmaWxlX3VuaXhfZmlsZSgpLiBUaGlzIGJpdCBpcyBpbnNwZWN0ZWQgYnkgd3JpdGVfdW5peF9m
aWxlIGFuZAorCSAqIGtpbGwtaG9vayBvZiB0YWlsIGl0ZW1zLiBJdCBpcyBuZXZlciBjbGVhcmVk
IG9uY2Ugc2V0LiBUaGlzIGJpdCBpcworCSAqIG1vZGlmaWVkIGFuZCBpbnNwZWN0ZWQgdW5kZXIg
aV9tdXRleC4gKi8KKwlSRUlTRVI0X0hBU19NTUFQID0gOCwKKwlSRUlTRVI0X1BBUlRfTUlYRUQg
PSA5LAorCVJFSVNFUjRfUEFSVF9JTl9DT05WID0gMTAsCisJLyogVGhpcyBmbGFnIGluZGljYXRl
cyB0aGF0IGZpbGUgcGx1Z2luIGNvbnZlcnNpb24gaXMgaW4gcHJvZ3Jlc3MgKi8KKwlSRUlTRVI0
X0ZJTEVfQ09OVl9JTl9QUk9HUkVTUyA9IDExCit9IHJlaXNlcjRfZmlsZV9wbHVnaW5fZmxhZ3M7
CisKKy8qIHN0YXRlIGFzc29jaWF0ZWQgd2l0aCBlYWNoIGlub2RlLgorICAgcmVpc2VyNCBpbm9k
ZS4KKworICAgTk9URS1OSUtJVEEgSW4gMi41IGtlcm5lbHMgaXQgaXMgbm90IG5lY2Vzc2FyeSB0
aGF0IGFsbCBmaWxlLXN5c3RlbSBpbm9kZXMKKyAgIGJlIG9mIHRoZSBzYW1lIHNpemUuIEZpbGUt
c3lzdGVtIGFsbG9jYXRlcyBpbm9kZXMgYnkgaXRzZWxmIHRocm91Z2gKKyAgIHNfb3AtPmFsbG9j
YXRlX2lub2RlKCkgbWV0aG9kLiBTbywgaXQgaXMgcG9zc2libGUgdG8gYWRqdXN0IHNpemUgb2Yg
aW5vZGUKKyAgIGF0IHRoZSB0aW1lIG9mIGl0cyBjcmVhdGlvbi4KKworICAgSW52YXJpYW50cyBp
bnZvbHZpbmcgcGFydHMgb2YgdGhpcyBkYXRhLXR5cGU6CisKKyAgICAgIFtpbm9kZS0+ZWZsdXNo
ZWRdCisKKyovCisKK3R5cGVkZWYgc3RydWN0IHJlaXNlcjRfaW5vZGUgcmVpc2VyNF9pbm9kZTsK
Ky8qIHJldHVybiBwb2ludGVyIHRvIHJlaXNlcjQtc3BlY2lmaWMgcGFydCBvZiBpbm9kZSAqLwor
c3RhdGljIGlubGluZSByZWlzZXI0X2lub2RlICpyZWlzZXI0X2lub2RlX2RhdGEoY29uc3Qgc3Ry
dWN0IGlub2RlICppbm9kZQorCQkJCQkJLyogaW5vZGUgcXVlcmllZCAqLyApOworCisjaWYgQklU
U19QRVJfTE9ORyA9PSA2NAorCisjZGVmaW5lIFJFSVNFUjRfSU5PX0lTX09JRCAoMSkKK3R5cGVk
ZWYgc3RydWN0IHs7Cit9IG9pZF9oaV90OworCisvKiBCSVRTX1BFUl9MT05HID09IDY0ICovCisj
ZWxzZQorCisjZGVmaW5lIFJFSVNFUjRfSU5PX0lTX09JRCAoMCkKK3R5cGVkZWYgX191MzIgb2lk
X2hpX3Q7CisKKy8qIEJJVFNfUEVSX0xPTkcgPT0gNjQgKi8KKyNlbmRpZgorCitzdHJ1Y3QgcmVp
c2VyNF9pbm9kZSB7CisJLyogc3BpbiBsb2NrIHByb3RlY3RpbmcgZmllbGRzIG9mIHRoaXMgc3Ry
dWN0dXJlLiAqLworCXNwaW5sb2NrX3QgZ3VhcmQ7CisJLyogbWFpbiBwbHVnaW4gc2V0IHRoYXQg
Y29udHJvbCB0aGUgZmlsZQorCSAgIChzZWUgY29tbWVudHMgaW4gcGx1Z2luL3BsdWdpbl9zZXQu
YykgKi8KKwlwbHVnaW5fc2V0ICpwc2V0OworCS8qIHBsdWdpbiBzZXQgZm9yIGluaGVyaXRhbmNl
CisJICAgKHNlZSBjb21tZW50cyBpbiBwbHVnaW4vcGx1Z2luX3NldC5jKSAqLworCXBsdWdpbl9z
ZXQgKmhzZXQ7CisJLyogaGlnaCAzMiBiaXRzIG9mIG9iamVjdCBpZCAqLworCW9pZF9oaV90IG9p
ZF9oaTsKKwkvKiBzZWFsIGZvciBzdGF0LWRhdGEgKi8KKwlzZWFsX3Qgc2Rfc2VhbDsKKwkvKiBs
b2NhbGl0eSBpZCBmb3IgdGhpcyBmaWxlICovCisJb2lkX3QgbG9jYWxpdHlfaWQ7CisjaWYgUkVJ
U0VSNF9MQVJHRV9LRVkKKwlfX3U2NCBvcmRlcmluZzsKKyNlbmRpZgorCS8qIGNvb3JkIG9mIHN0
YXQtZGF0YSBpbiBzZWFsZWQgbm9kZSAqLworCWNvb3JkX3Qgc2RfY29vcmQ7CisJLyogYml0LW1h
c2sgb2Ygc3RhdC1kYXRhIGV4dGVudGlvbnMgdXNlZCBieSB0aGlzIGZpbGUgKi8KKwlfX3U2NCBl
eHRtYXNrOworCS8qIGJpdG1hc2sgb2Ygbm9uLWRlZmF1bHQgcGx1Z2lucyBmb3IgdGhpcyBpbm9k
ZSAqLworCV9fdTE2IHBsdWdpbl9tYXNrOworCS8qIGJpdG1hc2sgb2Ygc2V0IGhlaXIgcGx1Z2lu
cyBmb3IgdGhpcyBpbm9kZS4gKi8KKwlfX3UxNiBoZWlyX21hc2s7CisJdW5pb24geworCQlzdHJ1
Y3QgbGlzdF9oZWFkIHJlYWRkaXJfbGlzdDsKKwkJc3RydWN0IGxpc3RfaGVhZCBub3RfdXNlZDsK
Kwl9IGxpc3RzOworCS8qIHBlci1pbm9kZSBmbGFncy4gRmlsbGVkIGJ5IHZhbHVlcyBvZiByZWlz
ZXI0X2ZpbGVfcGx1Z2luX2ZsYWdzICovCisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwl1bmlvbiB7
CisJCS8qIGZpZWxkcyBzcGVjaWZpYyB0byB1bml4X2ZpbGUgcGx1Z2luICovCisJCXN0cnVjdCB1
bml4X2ZpbGVfaW5mbyB1bml4X2ZpbGVfaW5mbzsKKwkJLyogZmllbGRzIHNwZWNpZmljIHRvIGNy
eXB0Y29tcHJlc3MgZmlsZSBwbHVnaW4gKi8KKwkJc3RydWN0IGNyeXB0Y29tcHJlc3NfaW5mbyBj
cnlwdGNvbXByZXNzX2luZm87CisJfSBmaWxlX3BsdWdpbl9kYXRhOworCisJLyogdGhpcyBzZW1h
cGhvcmUgaXMgdG8gc2VyaWFsaXplIHJlYWRlcnMgYW5kIHdyaXRlcnMgb2YgQHBzZXQtPmZpbGUK
KwkgKiB3aGVuIGZpbGUgcGx1Z2luIGNvbnZlcnNpb24gaXMgZW5hYmxlZAorCSAqLworCXN0cnVj
dCByd19zZW1hcGhvcmUgY29udl9zZW07CisKKwkvKiB0cmVlIG9mIGpub2Rlcy4gUGhhbnRvbSBq
bm9kZXMgKG9uZXMgbm90IGF0dGNoZWQgdG8gYW55IGF0b20pIGFyZQorCSAgIHRhZ2dlZCBpbiB0
aGF0IHRyZWUgYnkgRUZMVVNIX1RBR19BTk9OWU1PVVMgKi8KKwlzdHJ1Y3QgcmFkaXhfdHJlZV9y
b290IGpub2Rlc190cmVlOworI2lmIFJFSVNFUjRfREVCVUcKKwkvKiBudW1iZXIgb2YgdW5mb3Jt
YXR0ZWQgbm9kZSBqbm9kZXMgb2YgdGhpcyBmaWxlIGluIGpub2RlIGhhc2ggdGFibGUgKi8KKwl1
bnNpZ25lZCBsb25nIG5yX2pub2RlczsKKyNlbmRpZgorCisJLyogYmxvY2sgbnVtYmVyIG9mIHZp
cnR1YWwgcm9vdCBmb3IgdGhpcyBvYmplY3QuIFNlZSBjb21tZW50IGFib3ZlCisJICogZnMvcmVp
c2VyNC9zZWFyY2guYzpoYW5kbGVfdnJvb3QoKSAqLworCXJlaXNlcjRfYmxvY2tfbnIgdnJvb3Q7
CisJc3RydWN0IG11dGV4IGxvYWRpbmc7Cit9OworCit2b2lkIGxvYWRpbmdfaW5pdF9vbmNlKHJl
aXNlcjRfaW5vZGUgKik7Cit2b2lkIGxvYWRpbmdfYWxsb2MocmVpc2VyNF9pbm9kZSAqKTsKK3Zv
aWQgbG9hZGluZ19kZXN0cm95KHJlaXNlcjRfaW5vZGUgKik7CisKK3N0cnVjdCByZWlzZXI0X2lu
b2RlX29iamVjdCB7CisJLyogcHJpdmF0ZSBwYXJ0ICovCisJcmVpc2VyNF9pbm9kZSBwOworCS8q
IGdlbmVyaWMgZmllbGRzIG5vdCBzcGVjaWZpYyB0byByZWlzZXI0LCBidXQgdXNlZCBieSBWRlMg
Ki8KKwlzdHJ1Y3QgaW5vZGUgdmZzX2lub2RlOworfTsKKworLyogcmV0dXJuIHBvaW50ZXIgdG8g
dGhlIHJlaXNlcjQgc3BlY2lmaWMgcG9ydGlvbiBvZiBAaW5vZGUgKi8KK3N0YXRpYyBpbmxpbmUg
cmVpc2VyNF9pbm9kZSAqcmVpc2VyNF9pbm9kZV9kYXRhKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5v
ZGUKKwkJCQkJCS8qIGlub2RlIHF1ZXJpZWQgKi8gKQoreworCWFzc2VydCgibmlraXRhLTI1NCIs
IGlub2RlICE9IE5VTEwpOworCXJldHVybiAmY29udGFpbmVyX29mKGlub2RlLCBzdHJ1Y3QgcmVp
c2VyNF9pbm9kZV9vYmplY3QsIHZmc19pbm9kZSktPnA7Cit9CisKK3N0YXRpYyBpbmxpbmUgc3Ry
dWN0IGlub2RlICppbm9kZV9ieV9yZWlzZXI0X2lub2RlKGNvbnN0IHJlaXNlcjRfaW5vZGUgKgor
CQkJCQkJICAgcjRfaW5vZGUgLyogaW5vZGUgcXVlcmllZCAqLworCQkJCQkJICAgKQoreworCXJl
dHVybiAmY29udGFpbmVyX29mKHI0X2lub2RlLCBzdHJ1Y3QgcmVpc2VyNF9pbm9kZV9vYmplY3Qs
CisJCQkgICAgIHApLT52ZnNfaW5vZGU7Cit9CisKKy8qCisgKiByZWlzZXI0IGlub2RlcyBhcmUg
aWRlbnRpZmllZCBieSA2NGJpdCBvYmplY3QtaWQgKG9pZF90KSwgYnV0IGluIHN0cnVjdAorICog
aW5vZGUgLT5pX2lubyBmaWVsZCBpcyBvZiB0eXBlIGlub190IChsb25nKSB0aGF0IGNhbiBiZSBl
aXRoZXIgMzIgb3IgNjQKKyAqIGJpdHMuCisgKgorICogSWYgLT5pX2lubyBpcyAzMiBiaXRzIHdl
IHN0b3JlIHJlbWFpbmluZyAzMiBiaXRzIGluIHJlaXNlcjQgc3BlY2lmaWMgcGFydAorICogb2Yg
aW5vZGUsIG90aGVyd2lzZSB3aG9sZSBvaWQgaXMgc3RvcmVkIGluIGlfaW5vLgorICoKKyAqIFdy
YXBwZXJzIGJlbG93IChbc2ddZXRfaW5vZGVfb2lkKCkpIGFyZSB1c2VkIHRvIGhpZGUgdGhpcyBk
aWZmZXJlbmNlLgorICovCisKKyNkZWZpbmUgT0lEX0hJX1NISUZUIChzaXplb2YoaW5vX3QpICog
OCkKKworI2lmIFJFSVNFUjRfSU5PX0lTX09JRAorCitzdGF0aWMgaW5saW5lIG9pZF90IGdldF9p
bm9kZV9vaWQoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZXR1cm4gaW5vZGUtPmlf
aW5vOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2lub2RlX29pZChzdHJ1Y3QgaW5vZGUg
Kmlub2RlLCBvaWRfdCBvaWQpCit7CisJaW5vZGUtPmlfaW5vID0gb2lkOworfQorCisvKiBSRUlT
RVI0X0lOT19JU19PSUQgKi8KKyNlbHNlCisKK3N0YXRpYyBpbmxpbmUgb2lkX3QgZ2V0X2lub2Rl
X29pZChjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybgorCSAgICAoKF9fdTY0
KSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5vaWRfaGkgPDwgT0lEX0hJX1NISUZUKSB8CisJ
ICAgIGlub2RlLT5pX2lubzsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHNldF9pbm9kZV9vaWQo
c3RydWN0IGlub2RlICppbm9kZSwgb2lkX3Qgb2lkKQoreworCWFzc2VydCgibmlraXRhLTI1MTki
LCBpbm9kZSAhPSBOVUxMKTsKKwlpbm9kZS0+aV9pbm8gPSAoaW5vX3QpIChvaWQpOworCXJlaXNl
cjRfaW5vZGVfZGF0YShpbm9kZSktPm9pZF9oaSA9IChvaWQpID4+IE9JRF9ISV9TSElGVDsKKwlh
c3NlcnQoIm5pa2l0YS0yNTIxIiwgZ2V0X2lub2RlX29pZChpbm9kZSkgPT0gKG9pZCkpOworfQor
CisvKiBSRUlTRVI0X0lOT19JU19PSUQgKi8KKyNlbmRpZgorCitzdGF0aWMgaW5saW5lIG9pZF90
IGdldF9pbm9kZV9sb2NhbGl0eShjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVy
biByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5sb2NhbGl0eV9pZDsKK30KKworI2lmIFJFSVNF
UjRfTEFSR0VfS0VZCitzdGF0aWMgaW5saW5lIF9fdTY0IGdldF9pbm9kZV9vcmRlcmluZyhjb25z
dCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybiByZWlzZXI0X2lub2RlX2RhdGEoaW5v
ZGUpLT5vcmRlcmluZzsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHNldF9pbm9kZV9vcmRlcmlu
Zyhjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlLCBfX3U2NCBvcmRlcmluZykKK3sKKwlyZWlzZXI0
X2lub2RlX2RhdGEoaW5vZGUpLT5vcmRlcmluZyA9IG9yZGVyaW5nOworfQorCisjZWxzZQorCisj
ZGVmaW5lIGdldF9pbm9kZV9vcmRlcmluZyhpbm9kZSkgKDApCisjZGVmaW5lIHNldF9pbm9kZV9v
cmRlcmluZyhpbm9kZSwgdmFsKSBub29wCisKKyNlbmRpZgorCisvKiByZXR1cm4gaW5vZGUgaW4g
d2hpY2ggQHVmX2luZm8gaXMgZW1iZWRkZWQgKi8KK3N0YXRpYyBpbmxpbmUgc3RydWN0IGlub2Rl
ICoKK3VuaXhfZmlsZV9pbmZvX3RvX2lub2RlKGNvbnN0IHN0cnVjdCB1bml4X2ZpbGVfaW5mbyAq
dWZfaW5mbykKK3sKKwlyZXR1cm4gJmNvbnRhaW5lcl9vZih1Zl9pbmZvLCBzdHJ1Y3QgcmVpc2Vy
NF9pbm9kZV9vYmplY3QsCisJCQkgICAgIHAuZmlsZV9wbHVnaW5fZGF0YS51bml4X2ZpbGVfaW5m
byktPnZmc19pbm9kZTsKK30KKworZXh0ZXJuIGlub190IG9pZF90b19pbm8ob2lkX3Qgb2lkKSBf
X2F0dHJpYnV0ZV9fICgoY29uc3QpKTsKK2V4dGVybiBpbm9fdCBvaWRfdG9fdWlubyhvaWRfdCBv
aWQpIF9fYXR0cmlidXRlX18gKChjb25zdCkpOworCitleHRlcm4gcmVpc2VyNF90cmVlICpyZWlz
ZXI0X3RyZWVfYnlfaW5vZGUoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7CisKKyNpZiBSRUlT
RVI0X0RFQlVHCitleHRlcm4gdm9pZCByZWlzZXI0X2lub2RlX2ludmFyaWFudChjb25zdCBzdHJ1
Y3QgaW5vZGUgKmlub2RlKTsKK2V4dGVybiBpbnQgaW5vZGVfaGFzX25vX2pub2RlcyhyZWlzZXI0
X2lub2RlICopOworI2Vsc2UKKyNkZWZpbmUgcmVpc2VyNF9pbm9kZV9pbnZhcmlhbnQoaW5vZGUp
IG5vb3AKKyNlbmRpZgorCitzdGF0aWMgaW5saW5lIGludCBzcGluX2lub2RlX2lzX2xvY2tlZChj
b25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWFzc2VydF9zcGluX2xvY2tlZCgmcmVpc2Vy
NF9pbm9kZV9kYXRhKGlub2RlKS0+Z3VhcmQpOworCXJldHVybiAxOworfQorCisvKioKKyAqIHNw
aW5fbG9ja19pbm9kZSAtIGxvY2sgcmVpc2VyNF9pbm9kZScgZW1iZWRkZWQgc3BpbmxvY2sKKyAq
IEBpbm9kZTogaW5vZGUgdG8gbG9jaworICoKKyAqIEluIGRlYnVnIG1vZGUgaXQgY2hlY2tzIHRo
YXQgbG93ZXIgcHJpb3JpdHkgbG9ja3MgYXJlIG5vdCBoZWxkIGFuZAorICogaW5jcmVtZW50cyBy
ZWlzZXI0X2NvbnRleHQncyBsb2NrIGNvdW50ZXJzIG9uIHdoaWNoIGxvY2sgb3JkZXJpbmcgY2hl
Y2tpbmcKKyAqIGlzIGJhc2VkLgorICovCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl9sb2NrX2lu
b2RlKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJYXNzZXJ0KCIiLCBMT0NLX0NOVF9OSUwoc3Bp
bl9sb2NrZWQpKTsKKwkvKiBjaGVjayBsb2NrIG9yZGVyaW5nICovCisJYXNzZXJ0X3NwaW5fbm90
X2xvY2tlZCgmZF9jX2xvY2spOworCisJc3Bpbl9sb2NrKCZyZWlzZXI0X2lub2RlX2RhdGEoaW5v
ZGUpLT5ndWFyZCk7CisKKwlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWRfaW5vZGUpOworCUxPQ0tf
Q05UX0lOQyhzcGluX2xvY2tlZCk7CisKKwlyZWlzZXI0X2lub2RlX2ludmFyaWFudChpbm9kZSk7
Cit9CisKKy8qKgorICogc3Bpbl91bmxvY2tfaW5vZGUgLSB1bmxvY2sgcmVpc2VyNF9pbm9kZScg
ZW1iZWRkZWQgc3BpbmxvY2sKKyAqIEBpbm9kZTogaW5vZGUgdG8gdW5sb2NrCisgKgorICogSW4g
ZGVidWcgbW9kZSBpdCBjaGVja3MgdGhhdCBzcGlubG9jayBpcyBoZWxkIGFuZCBkZWNyZW1lbnRz
CisgKiByZWlzZXI0X2NvbnRleHQncyBsb2NrIGNvdW50ZXJzIG9uIHdoaWNoIGxvY2sgb3JkZXJp
bmcgY2hlY2tpbmcgaXMgYmFzZWQuCisgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBzcGluX3VubG9j
a19pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWFzc2VydF9zcGluX2xvY2tlZCgmcmVp
c2VyNF9pbm9kZV9kYXRhKGlub2RlKS0+Z3VhcmQpOworCWFzc2VydCgibmlraXRhLTEzNzUiLCBM
T0NLX0NOVF9HVFooc3Bpbl9sb2NrZWRfaW5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzc2Iiwg
TE9DS19DTlRfR1RaKHNwaW5fbG9ja2VkKSk7CisKKwlyZWlzZXI0X2lub2RlX2ludmFyaWFudChp
bm9kZSk7CisKKwlMT0NLX0NOVF9ERUMoc3Bpbl9sb2NrZWRfaW5vZGUpOworCUxPQ0tfQ05UX0RF
QyhzcGluX2xvY2tlZCk7CisKKwlzcGluX3VubG9jaygmcmVpc2VyNF9pbm9kZV9kYXRhKGlub2Rl
KS0+Z3VhcmQpOworfQorCitleHRlcm4gem5vZGUgKmlub2RlX2dldF92cm9vdChzdHJ1Y3QgaW5v
ZGUgKmlub2RlKTsKK2V4dGVybiB2b2lkIGlub2RlX3NldF92cm9vdChzdHJ1Y3QgaW5vZGUgKmlu
b2RlLCB6bm9kZSAqIHZyb290KTsKKworZXh0ZXJuIGludCByZWlzZXI0X21heF9maWxlbmFtZV9s
ZW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gaW50IG1heF9oYXNoX2NvbGxp
c2lvbnMoY29uc3Qgc3RydWN0IGlub2RlICpkaXIpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF91bmxv
Y2tfaW5vZGUoc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gaW50IGlzX3JlaXNlcjRfaW5v
ZGUoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gaW50IHNldHVwX2lub2RlX29w
cyhzdHJ1Y3QgaW5vZGUgKmlub2RlLCByZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqKTsKK2V4
dGVybiBzdHJ1Y3QgaW5vZGUgKnJlaXNlcjRfaWdldChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVy
LAorCQkJCSAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksIGludCBzaWxlbnQpOworZXh0ZXJuIHZv
aWQgcmVpc2VyNF9pZ2V0X2NvbXBsZXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUpOworZXh0ZXJuIHZv
aWQgcmVpc2VyNF9pbm9kZV9zZXRfZmxhZyhzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJCSAgIHJl
aXNlcjRfZmlsZV9wbHVnaW5fZmxhZ3MgZik7CitleHRlcm4gdm9pZCByZWlzZXI0X2lub2RlX2Ns
cl9mbGFnKHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCQkJICAgcmVpc2VyNF9maWxlX3BsdWdpbl9m
bGFncyBmKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhjb25zdCBzdHJ1Y3Qg
aW5vZGUgKmlub2RlLAorCQkJCSAgcmVpc2VyNF9maWxlX3BsdWdpbl9mbGFncyBmKTsKKworLyog
IGhhcyBpbm9kZSBiZWVuIGluaXRpYWxpemVkPyAqLworc3RhdGljIGlubGluZSBpbnQKK2lzX2lu
b2RlX2xvYWRlZChjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlLyogaW5vZGUgcXVlcmllZCAqLykK
K3sKKwlhc3NlcnQoIm5pa2l0YS0xMTIwIiwgaW5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIHJlaXNl
cjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfTE9BREVEKTsKK30KKworZXh0ZXJuIGZp
bGVfcGx1Z2luICppbm9kZV9maWxlX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKTsK
K2V4dGVybiBkaXJfcGx1Z2luICppbm9kZV9kaXJfcGx1Z2luKGNvbnN0IHN0cnVjdCBpbm9kZSAq
aW5vZGUpOworZXh0ZXJuIGZvcm1hdHRpbmdfcGx1Z2luICppbm9kZV9mb3JtYXR0aW5nX3BsdWdp
bihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKK2V4dGVybiBoYXNoX3BsdWdpbiAqaW5vZGVf
aGFzaF9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gZmlicmF0aW9u
X3BsdWdpbiAqaW5vZGVfZmlicmF0aW9uX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2Rl
KTsKK2V4dGVybiBjaXBoZXJfcGx1Z2luICppbm9kZV9jaXBoZXJfcGx1Z2luKGNvbnN0IHN0cnVj
dCBpbm9kZSAqaW5vZGUpOworZXh0ZXJuIGRpZ2VzdF9wbHVnaW4gKmlub2RlX2RpZ2VzdF9wbHVn
aW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gY29tcHJlc3Npb25fcGx1Z2lu
ICppbm9kZV9jb21wcmVzc2lvbl9wbHVnaW4oY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSk7Citl
eHRlcm4gY29tcHJlc3Npb25fbW9kZV9wbHVnaW4gKmlub2RlX2NvbXByZXNzaW9uX21vZGVfcGx1
Z2luKGNvbnN0IHN0cnVjdCBpbm9kZQorCQkJCQkJCSAgICAgICppbm9kZSk7CitleHRlcm4gY2x1
c3Rlcl9wbHVnaW4gKmlub2RlX2NsdXN0ZXJfcGx1Z2luKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5v
ZGUpOworZXh0ZXJuIGZpbGVfcGx1Z2luICppbm9kZV9jcmVhdGVfcGx1Z2luKGNvbnN0IHN0cnVj
dCBpbm9kZSAqaW5vZGUpOworZXh0ZXJuIGl0ZW1fcGx1Z2luICppbm9kZV9zZF9wbHVnaW4oY29u
c3Qgc3RydWN0IGlub2RlICppbm9kZSk7CitleHRlcm4gaXRlbV9wbHVnaW4gKmlub2RlX2Rpcl9p
dGVtX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKK2V4dGVybiBmaWxlX3BsdWdp
biAqY2hpbGRfY3JlYXRlX3BsdWdpbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKKworZXh0
ZXJuIHZvaWQgcmVpc2VyNF9tYWtlX2JhZF9pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKKwor
ZXh0ZXJuIHZvaWQgaW5vZGVfc2V0X2V4dGVuc2lvbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzZF9l
eHRfYml0cyBleHQpOworZXh0ZXJuIHZvaWQgaW5vZGVfY2xyX2V4dGVuc2lvbihzdHJ1Y3QgaW5v
ZGUgKmlub2RlLCBzZF9leHRfYml0cyBleHQpOworZXh0ZXJuIHZvaWQgaW5vZGVfY2hlY2tfc2Nh
bGUoc3RydWN0IGlub2RlICppbm9kZSwgX191NjQgb2xkLCBfX3U2NCBuZXcpOworZXh0ZXJuIHZv
aWQgaW5vZGVfY2hlY2tfc2NhbGVfbm9sb2NrKHN0cnVjdCBpbm9kZSAqaW5vZGUsIF9fdTY0IG9s
ZCwgX191NjQgbmV3KTsKKworI2RlZmluZSBJTk9ERV9TRVRfU0laRShpLCB2YWx1ZSkJCQlcCiso
ewkJCQkJCQlcCisJc3RydWN0IGlub2RlICpfX2k7CQkJCVwKKwl0eXBlb2YodmFsdWUpIF9fdjsJ
CQkJXAorCQkJCQkJCVwKKwlfX2kgPSAoaSk7CQkJCQlcCisJX192ID0gKHZhbHVlKTsJCQkJCVwK
Kwlpbm9kZV9jaGVja19zY2FsZShfX2ksIF9faS0+aV9zaXplLCBfX3YpOwlcCisJaV9zaXplX3dy
aXRlKF9faSwgX192KTsJCQkJXAorfSkKKworLyoKKyAqIHVwZGF0ZSBmaWVsZCBAZmllbGQgaW4g
aW5vZGUgQGkgdG8gY29udGFpbiB2YWx1ZSBAdmFsdWUuCisgKi8KKyNkZWZpbmUgSU5PREVfU0VU
X0ZJRUxEKGksIGZpZWxkLCB2YWx1ZSkJCVwKKyh7CQkJCQkJCVwKKwlzdHJ1Y3QgaW5vZGUgKl9f
aTsJCQkJXAorCXR5cGVvZih2YWx1ZSkgX192OwkJCQlcCisJCQkJCQkJXAorCV9faSA9IChpKTsJ
CQkJCVwKKwlfX3YgPSAodmFsdWUpOwkJCQkJXAorCWlub2RlX2NoZWNrX3NjYWxlKF9faSwgX19p
LT5maWVsZCwgX192KTsJXAorCV9faS0+ZmllbGQgPSBfX3Y7CQkJCVwKK30pCisKKyNkZWZpbmUg
SU5PREVfSU5DX0ZJRUxEKGksIGZpZWxkKQkJCQlcCisoewkJCQkJCQkJXAorCXN0cnVjdCBpbm9k
ZSAqX19pOwkJCQkJXAorCQkJCQkJCQlcCisJX19pID0gKGkpOwkJCQkJCVwKKwlpbm9kZV9jaGVj
a19zY2FsZShfX2ksIF9faS0+ZmllbGQsIF9faS0+ZmllbGQgKyAxKTsJXAorCSsrIF9faS0+Zmll
bGQ7CQkJCQkJXAorfSkKKworI2RlZmluZSBJTk9ERV9ERUNfRklFTEQoaSwgZmllbGQpCQkJCVwK
Kyh7CQkJCQkJCQlcCisJc3RydWN0IGlub2RlICpfX2k7CQkJCQlcCisJCQkJCQkJCVwKKwlfX2kg
PSAoaSk7CQkJCQkJXAorCWlub2RlX2NoZWNrX3NjYWxlKF9faSwgX19pLT5maWVsZCwgX19pLT5m
aWVsZCAtIDEpOwlcCisJLS0gX19pLT5maWVsZDsJCQkJCQlcCit9KQorCisvKgorICogVXBkYXRl
IGZpZWxkIGlfbmxpbmsgaW4gaW5vZGUgQGkgdXNpbmcgbGlicmFyeSBmdW5jdGlvbiBAb3AuCisg
Ki8KKyNkZWZpbmUgSU5PREVfU0VUX05MSU5LKGksIHZhbHVlKQkJCVwKKyh7CQkJCQkJCVwKKwlz
dHJ1Y3QgaW5vZGUgKl9faTsJCQkJXAorCXR5cGVvZih2YWx1ZSkgX192OwkJCQlcCisJCQkJCSAg
ICAgICAgCVwKKwlfX2kgPSAoaSk7CQkJCQlcCisJX192ID0gKHZhbHVlKTsJCQkJCVwKKyAgICAg
ICAgaW5vZGVfY2hlY2tfc2NhbGUoX19pLCBfX2ktPmlfbmxpbmssIF9fdik7CVwKKyAgICAgICAg
c2V0X25saW5rKF9faSwgX192KTsJCQkJXAorfSkKKworI2RlZmluZSBJTk9ERV9JTkNfTkxJTkso
aSkJCQkJCVwKKwkoewkJCQkJCQlcCisJc3RydWN0IGlub2RlICpfX2k7CQkJCQlcCisJCQkJCQkJ
CVwKKwlfX2kgPSAoaSk7CQkJCQkJXAorCWlub2RlX2NoZWNrX3NjYWxlKF9faSwgX19pLT5pX25s
aW5rLCBfX2ktPmlfbmxpbmsgKyAxKTsJXAorCWluY19ubGluayhfX2kpOwkJCQkJCVwKK30pCisK
KyNkZWZpbmUgSU5PREVfRFJPUF9OTElOSyhpKQkJCQkJXAorCSh7CQkJCQkJCVwKKwlzdHJ1Y3Qg
aW5vZGUgKl9faTsJCQkJCVwKKwkJCQkJCQkJXAorCV9faSA9IChpKTsJCQkJCQlcCisJaW5vZGVf
Y2hlY2tfc2NhbGUoX19pLCBfX2ktPmlfbmxpbmssIF9faS0+aV9ubGluayAtIDEpOwlcCisJZHJv
cF9ubGluayhfX2kpOwkJCQkJXAorfSkKKworI2RlZmluZSBJTk9ERV9DTEVBUl9OTElOSyhpKQkJ
CQkJXAorCSh7CQkJCQkJCVwKKwlzdHJ1Y3QgaW5vZGUgKl9faTsJCQkJCVwKKwkJCQkJCQkJXAor
CV9faSA9IChpKTsJCQkJCQlcCisJaW5vZGVfY2hlY2tfc2NhbGUoX19pLCBfX2ktPmlfbmxpbmss
IDApOwkJXAorCWNsZWFyX25saW5rKF9faSk7CQkJCQlcCit9KQorCisKK3N0YXRpYyBpbmxpbmUg
dm9pZCBpbm9kZV9hZGRfYmxvY2tzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIF9fdTY0IGJsb2NrcykK
K3sKKwlpbm9kZV9hZGRfYnl0ZXMoaW5vZGUsIGJsb2NrcyA8PCBpbm9kZS0+aV9ibGtiaXRzKTsK
K30KKworc3RhdGljIGlubGluZSB2b2lkIGlub2RlX3N1Yl9ibG9ja3Moc3RydWN0IGlub2RlICpp
bm9kZSwgX191NjQgYmxvY2tzKQoreworCWlub2RlX3N1Yl9ieXRlcyhpbm9kZSwgYmxvY2tzIDw8
IGlub2RlLT5pX2Jsa2JpdHMpOworfQorCisKKy8qIFNlZSBjb21tZW50IGJlZm9yZSByZWlzZXI0
X3JlYWRkaXJfY29tbW9uKCkgZm9yIGRlc2NyaXB0aW9uLiAqLworc3RhdGljIGlubGluZSBzdHJ1
Y3QgbGlzdF9oZWFkICpnZXRfcmVhZGRpcl9saXN0KGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUp
Cit7CisJcmV0dXJuICZyZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5saXN0cy5yZWFkZGlyX2xp
c3Q7Cit9CisKK2V4dGVybiB2b2lkIGluaXRfaW5vZGVfb3JkZXJpbmcoc3RydWN0IGlub2RlICpp
bm9kZSwKKwkJCQlyZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGNyZCwgaW50IGNyZWF0ZSk7
CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IHJhZGl4X3RyZWVfcm9vdCAqam5vZGVfdHJlZV9ieV9p
bm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybiAmcmVpc2VyNF9pbm9kZV9kYXRh
KGlub2RlKS0+am5vZGVzX3RyZWU7Cit9CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IHJhZGl4X3Ry
ZWVfcm9vdCAqam5vZGVfdHJlZV9ieV9yZWlzZXI0X2lub2RlKHJlaXNlcjRfaW5vZGUKKwkJCQkJ
CQkJICAqcjRfaW5vZGUpCit7CisJcmV0dXJuICZyNF9pbm9kZS0+am5vZGVzX3RyZWU7Cit9CisK
KyNpZiBSRUlTRVI0X0RFQlVHCitleHRlcm4gdm9pZCBwcmludF9pbm9kZShjb25zdCBjaGFyICpw
cmVmaXgsIGNvbnN0IHN0cnVjdCBpbm9kZSAqaSk7CisjZW5kaWYKKworaW50IGlzX2Rpcl9lbXB0
eShjb25zdCBzdHJ1Y3QgaW5vZGUgKik7CisKKy8qIF9fUkVJU0VSNF9JTk9ERV9IX18gKi8KKyNl
bmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1p
bmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1v
ZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9pb2N0bC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2lvY3RsLmgKLS0tIGxpbnV4LTUuNC4x
Ny5vcmlnL2ZzL3JlaXNlcjQvaW9jdGwuaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCAr
MDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvaW9jdGwuaAkyMDIwLTAyLTA1IDIwOjUz
OjQxLjQ1MzIyMjE3NyArMDEwMApAQCAtMCwwICsxLDQxIEBACisvKiBDb3B5cmlnaHQgMjAwMSwg
MjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlz
ZXI0L1JFQURNRSAqLworCisjaWYgIWRlZmluZWQoX19SRUlTRVI0X0lPQ1RMX0hfXykKKyNkZWZp
bmUgX19SRUlTRVI0X0lPQ1RMX0hfXworCisjaW5jbHVkZSA8bGludXgvZnMuaD4KKworLyoKKyAq
IGlvY3RsKDIpIGNvbW1hbmQgdXNlZCB0byAidW5wYWNrIiByZWlzZXI0IGZpbGUsIHRoYXQgaXMs
IGNvbnZlcnQgaXQgaW50bworICogZXh0ZW50cyBhbmQgZml4IGluIHRoaXMgc3RhdGUuIFRoaXMg
aXMgdXNlZCBieSBhcHBsaWNhdGlvbnMgdGhhdCByZWx5IG9uCisgKgorICogICAgIC4gZmlsZXMg
YmVpbmcgYmxvY2sgYWxpZ25lZCwgYW5kCisgKgorICogICAgIC4gZmlsZXMgbmV2ZXIgbWlncmF0
aW5nIG9uIGRpc2sKKyAqCisgKiBmb3IgZXhhbXBsZSwgYm9vdCBsb2FkZXJzIChMSUxPKSBuZWVk
IHRoaXMuCisgKgorICogVGhpcyBpb2N0bCBzaG91bGQgYmUgdXNlZCBhcworICoKKyAqICAgICBy
ZXN1bHQgPSBpb2N0bChmZCwgUkVJU0VSNF9JT0NfVU5QQUNLKTsKKyAqCisgKiBGaWxlIGJlaGlu
ZCBmZCBkZXNjcmlwdG9yIHdpbGwgYmUgY29udmVydGVkIHRvIHRoZSBleHRlbnRzIChpZiBuZWNl
c3NhcnkpLAorICogYW5kIGl0cyBzdGF0LWRhdGEgd2lsbCBiZSB1cGRhdGVkIHNvIHRoYXQgaXQg
d2lsbCBuZXZlciBiZSBjb252ZXJ0ZWQgYmFjaworICogaW50byB0YWlscyBhZ2Fpbi4KKyAqLwor
I2RlZmluZSBSRUlTRVI0X0lPQ19VTlBBQ0sgX0lPVygweENELCAxLCBsb25nKQorCisvKiBfX1JF
SVNFUjRfSU9DVExfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExv
Y2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5h
bWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwt
Y29sdW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1u
by1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2pub2RlLmMgbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvam5vZGUuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9qbm9kZS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01
LjQuMTcvZnMvcmVpc2VyNC9qbm9kZS5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU0MjIyMTg1ICsw
MTAwCkBAIC0wLDAgKzEsMTkwNiBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIw
MDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFE
TUUgKi8KKy8qIEpub2RlIG1hbmlwdWxhdGlvbiBmdW5jdGlvbnMuICovCisvKiBKbm9kZSBpcyBl
bnRpdHkgdXNlZCB0byB0cmFjayBibG9ja3Mgd2l0aCBkYXRhIGFuZCBtZXRhLWRhdGEgaW4gcmVp
c2VyNC4KKworICAgSW4gcGFydGljdWxhciwgam5vZGVzIGFyZSB1c2VkIHRvIHRyYWNrIHRyYW5z
YWN0aW9uYWwgaW5mb3JtYXRpb24KKyAgIGFzc29jaWF0ZWQgd2l0aCBlYWNoIGJsb2NrLiBFYWNo
IHpub2RlIGNvbnRhaW5zIGpub2RlIGFzIC0+empub2RlIGZpZWxkLgorCisgICBKbm9kZSBzdGFu
ZHMgZm9yIGVpdGhlciBKb3NoIG9yIEpvdXJuYWwgbm9kZS4KKyovCisKKy8qCisgKiBUYXhvbm9t
eS4KKyAqCisgKiAgICAgSm5vZGUgcmVwcmVzZW50cyBibG9jayBjb250YWluaW5nIGRhdGEgb3Ig
bWV0YS1kYXRhLiBUaGVyZSBhcmUgam5vZGVzCisgKiAgICAgZm9yOgorICoKKyAqICAgICAgICAg
dW5mb3JtYXR0ZWQgYmxvY2tzIChqbm9kZXMgcHJvcGVyKS4gVGhlcmUgYXJlIHBsYW5zLCBob3dl
dmVyIHRvCisgKiAgICAgICAgIGhhdmUgYSBoYW5kbGUgcGVyIGV4dGVudCB1bml0IHJhdGhlciB0
aGFuIHBlciBlYWNoIHVuZm9ybWF0dGVkCisgKiAgICAgICAgIGJsb2NrLCBiZWNhdXNlIHRoZXJl
IGFyZSBzbyBtYW55IG9mIHRoZW0uCisgKgorICogICAgICAgICBGb3IgYml0bWFwcy4gRWFjaCBi
aXRtYXAgaXMgYWN0dWFsbHkgcmVwcmVzZW50ZWQgYnkgdHdvIGpub2Rlcy0tb25lCisgKiAgICAg
ICAgIGZvciB3b3JraW5nIGFuZCBhbm90aGVyIGZvciAiY29tbWl0IiBkYXRhLCB0b2dldGhlciBm
b3JtaW5nIGJub2RlLgorICoKKyAqICAgICAgICAgRm9yIGlvLWhlYWRzLiBUaGVzZSBhcmUgdXNl
ZCBieSBsb2cgd3JpdGVyLgorICoKKyAqICAgICAgICAgRm9yIGZvcm1hdHRlZCBub2RlcyAoem5v
ZGUpLiBTZWUgY29tbWVudCBhdCB0aGUgdG9wIG9mIHpub2RlLmMgZm9yCisgKiAgICAgICAgIGRl
dGFpbHMgc3BlY2lmaWMgdG8gdGhlIGZvcm1hdHRlZCBub2RlcyAoem5vZGVzKS4KKyAqCisgKiBO
b2RlIGRhdGEuCisgKgorICogICAgIEpub2RlIHByb3ZpZGVzIGFjY2VzcyB0byB0aGUgZGF0YSBv
ZiBub2RlIGl0IHJlcHJlc2VudHMuIERhdGEgYXJlCisgKiAgICAgc3RvcmVkIGluIGEgcGFnZS4g
UGFnZSBpcyBrZXB0IGluIGEgcGFnZSBjYWNoZS4gVGhpcyBtZWFucywgdGhhdCBqbm9kZXMKKyAq
ICAgICBhcmUgaGlnaGx5IGludGVyY29ubmVjdGVkIHdpdGggcGFnZSBjYWNoZSBhbmQgVk0gaW50
ZXJuYWxzLgorICoKKyAqICAgICBqbm9kZSBoYXMgYSBwb2ludGVyIHRvIHBhZ2UgKC0+cGcpIGNv
bnRhaW5pbmcgaXRzIGRhdGEuIFBvaW50ZXIgdG8gZGF0YQorICogICAgIHRoZW1zZWx2ZXMgaXMg
Y2FjaGVkIGluIC0+ZGF0YSBmaWVsZCB0byBhdm9pZCBmcmVxdWVudCBjYWxscyB0bworICogICAg
IHBhZ2VfYWRkcmVzcygpLgorICoKKyAqICAgICBqbm9kZSBhbmQgcGFnZSBhcmUgYXR0YWNoZWQg
dG8gZWFjaCBvdGhlciBieSBqbm9kZV9hdHRhY2hfcGFnZSgpLiBUaGlzCisgKiAgICAgZnVuY3Rp
b24gcGxhY2VzIHBvaW50ZXIgdG8gam5vZGUgaW4gc2V0X3BhZ2VfcHJpdmF0ZSgpLCBzZXRzIFBH
X3ByaXZhdGUKKyAqICAgICBmbGFnIGFuZCBpbmNyZW1lbnRzIHBhZ2UgY291bnRlci4KKyAqCisg
KiAgICAgT3Bwb3NpdGUgb3BlcmF0aW9uIGlzIHBlcmZvcm1lZCBieSBwYWdlX2NsZWFyX2pub2Rl
KCkuCisgKgorICogICAgIGpub2RlLT5wZyBpcyBwcm90ZWN0ZWQgYnkgam5vZGUgc3BpbiBsb2Nr
LCBhbmQgcGFnZS0+cHJpdmF0ZSBpcworICogICAgIHByb3RlY3RlZCBieSBwYWdlIGxvY2suIFNl
ZSBjb21tZW50IGF0IHRoZSB0b3Agb2YgcGFnZV9jYWNoZS5jIGZvcgorICogICAgIG1vcmUuCisg
KgorICogICAgIHBhZ2UgY2FuIGJlIGRldGFjaGVkIGZyb20gam5vZGUgZm9yIHR3byByZWFzb25z
OgorICoKKyAqICAgICAgICAgLiBqbm9kZSBpcyByZW1vdmVkIGZyb20gYSB0cmVlIChmaWxlIGlz
IHRydW5jYXRlZCwgb2YgZm9ybWF0dGVkCisgKiAgICAgICAgIG5vZGUgaXMgcmVtb3ZlZCBieSBi
YWxhbmNpbmcpLgorICoKKyAqICAgICAgICAgLiBkdXJpbmcgbWVtb3J5IHByZXNzdXJlLCBWTSBj
YWxscyAtPnJlbGVhc2VwYWdlKCkgbWV0aG9kCisgKiAgICAgICAgIChyZWlzZXI0X3JlbGVhc2Vw
YWdlKCkpIHRvIGV2aWN0IHBhZ2UgZnJvbSBtZW1vcnkuCisgKgorICogICAgKHRoZXJlLCBvZiBj
b3Vyc2UsIGlzIGFsc28gdW1vdW50LCBidXQgdGhpcyBpcyBzcGVjaWFsIGNhc2Ugd2UgYXJlIG5v
dAorICogICAgY29uY2VybmVkIHdpdGggaGVyZSkuCisgKgorICogICAgVG8gcHJvdGVjdCBqbm9k
ZSBwYWdlIGZyb20gZXZpY3Rpb24sIG9uZSBjYWxscyBqbG9hZCgpIGZ1bmN0aW9uIHRoYXQKKyAq
ICAgICJwaW5zIiBwYWdlIGluIG1lbW9yeSAobG9hZGluZyBpdCBpZiBuZWNlc3NhcnkpLCBpbmNy
ZW1lbnRzCisgKiAgICBqbm9kZS0+ZF9jb3VudCwgYW5kIGttYXAoKXMgcGFnZS4gUGFnZSBpcyB1
bnBpbm5lZCB0aHJvdWdoIGNhbGwgdG8KKyAqICAgIGpyZWxzZSgpLgorICoKKyAqIEpub2RlIGxp
ZmUgY3ljbGUuCisgKgorICogICAgam5vZGUgaXMgY3JlYXRlZCwgcGxhY2VkIGluIGhhc2ggdGFi
bGUsIGFuZCwgb3B0aW9uYWxseSwgaW4gcGVyLWlub2RlCisgKiAgICByYWRpeCB0cmVlLiBQYWdl
IGNhbiBiZSBhdHRhY2hlZCB0byBqbm9kZSwgcGlubmVkLCByZWxlYXNlZCwgZXRjLgorICoKKyAq
ICAgIFdoZW4gam5vZGUgaXMgY2FwdHVyZWQgaW50byBhdG9tIGl0cyByZWZlcmVuY2UgY291bnRl
ciBpcworICogICAgaW5jcmVhc2VkLiBXaGlsZSBiZWluZyBwYXJ0IG9mIGFuIGF0b20sIGpub2Rl
IGNhbiBiZSAiZWFybHkKKyAqICAgIGZsdXNoZWQiLiBUaGlzIG1lYW5zIHRoYXQgYXMgcGFydCBv
ZiBmbHVzaCBwcm9jZWR1cmUsIGpub2RlIGlzIHBsYWNlZAorICogICAgaW50byAicmVsb2NhdGUg
c2V0IiwgYW5kIGl0cyBwYWdlIGlzIHN1Ym1pdHRlZCB0byB0aGUgZGlzay4gQWZ0ZXIgaW8KKyAq
ICAgIGNvbXBsZXRlcywgcGFnZSBjYW4gYmUgZGV0YWNoZWQsIHRoZW4gbG9hZGVkIGFnYWluLCBy
ZS1kaXJ0aWVkLCBldGMuCisgKgorICogICAgVGhyZWFkIGFjcXVpcmVkIHJlZmVyZW5jZSB0byBq
bm9kZSBieSBjYWxsaW5nIGpyZWYoKSBhbmQgcmVsZWFzZXMgaXQgYnkKKyAqICAgIGpwdXQoKS4g
V2hlbiBsYXN0IHJlZmVyZW5jZSBpcyByZW1vdmVkLCBqbm9kZSBpcyBzdGlsbCByZXRhaW5lZCBp
bgorICogICAgbWVtb3J5IChjYWNoZWQpIGlmIGl0IGhhcyBwYWdlIGF0dGFjaGVkLCBfdW5sZXNz
XyBpdCBpcyBzY2hlZHVsZWQgZm9yCisgKiAgICBkZXN0cnVjdGlvbiAoaGFzIEpOT0RFX0hFQVJE
X0JBTlNIRUUgYml0IHNldCkuCisgKgorICogICAgVHJlZSByZWFkLXdyaXRlIGxvY2sgd2FzIHVz
ZWQgYXMgImV4aXN0ZW50aWFsIiBsb2NrIGZvciBqbm9kZXMuIFRoYXQgaXMsCisgKiAgICBqbm9k
ZS0+eF9jb3VudCBjb3VsZCBiZSBjaGFuZ2VkIGZyb20gMCB0byAxIG9ubHkgdW5kZXIgdHJlZSB3
cml0ZSBsb2NrLAorICogICAgdGhhdCBpcywgdHJlZSBsb2NrIHByb3RlY3RlZCB1bnJlZmVyZW5j
ZWQgam5vZGVzIHN0b3JlZCBpbiB0aGUgaGFzaAorICogICAgdGFibGUsIGZyb20gcmVjeWNsaW5n
LgorICoKKyAqICAgIFRoaXMgcmVzdWx0ZWQgaW4gaGlnaCBjb250ZW50aW9uIG9uIHRyZWUgbG9j
aywgYmVjYXVzZSBqcmVmKCkvanB1dCgpIGlzCisgKiAgICBmcmVxdWVudCBvcGVyYXRpb24uIFRv
IGFtZWxpb3JhdGUgdGhpcyBwcm9ibGVtLCBSQ1UgaXMgdXNlZDogd2hlbiBqcHV0KCkKKyAqICAg
IGlzIGp1c3QgYWJvdXQgdG8gcmVsZWFzZSBsYXN0IHJlZmVyZW5jZSBvbiBqbm9kZSBpdCBzZXRz
IEpOT0RFX1JJUCBiaXQKKyAqICAgIG9uIGl0LCBhbmQgdGhlbiBwcm9jZWVkIHdpdGggam5vZGUg
ZGVzdHJ1Y3Rpb24gKHJlbW92aW5nIGpub2RlIGZyb20gaGFzaAorICogICAgdGFibGUsIGNia19j
YWNoZSwgZGV0YWNoaW5nIHBhZ2UsIGV0Yy4pLiBBbGwgcGxhY2VzIHRoYXQgY2hhbmdlIGpub2Rl
CisgKiAgICByZWZlcmVuY2UgY291bnRlciBmcm9tIDAgdG8gMSAoamxvb2t1cCgpLCB6bG9vaygp
LCB6Z2V0KCksIGFuZAorICogICAgY2JrX2NhY2hlX3NjYW5fc2xvdHMoKSkgY2hlY2sgZm9yIEpO
T0RFX1JJUCBiaXQgKHRoaXMgaXMgZG9uZSBieQorICogICAgam5vZGVfcmlwX2NoZWNrKCkgZnVu
Y3Rpb24pLCBhbmQgcHJldGVuZCB0aGF0IG5vdGhpbmcgd2FzIGZvdW5kIGluIGhhc2gKKyAqICAg
IHRhYmxlIGlmIGJpdCBpcyBzZXQuCisgKgorICogICAganB1dCBkZWZlcnMgYWN0dWFsIHJldHVy
biBvZiBqbm9kZSBpbnRvIHNsYWIgY2FjaGUgdG8gc29tZSBsYXRlciB0aW1lCisgKiAgICAoYnkg
Y2FsbF9yY3UoKSksIHRoaXMgZ3VhcmFudGVlcyB0aGF0IG90aGVyIHRocmVhZHMgY2FuIHNhZmVs
eSBjb250aW51ZQorICogICAgd29ya2luZyB3aXRoIEpOT0RFX1JJUC1wZWQgam5vZGUuCisgKgor
ICovCisKKyNpbmNsdWRlICJyZWlzZXI0LmgiCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRl
ICJkZm9ybWF0LmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJwbHVnaW4vcGx1Z2lu
X2hlYWRlci5oIgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW4uaCIKKyNpbmNsdWRlICJ0eG5tZ3Iu
aCIKKy8qI2luY2x1ZGUgImpub2RlLmgiKi8KKyNpbmNsdWRlICJ6bm9kZS5oIgorI2luY2x1ZGUg
InRyZWUuaCIKKyNpbmNsdWRlICJ0cmVlX3dhbGsuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2lu
Y2x1ZGUgImlub2RlLmgiCisjaW5jbHVkZSAicGFnZV9jYWNoZS5oIgorCisjaW5jbHVkZSA8YXNt
L3VhY2Nlc3MuaD4JLyogVU1MIG5lZWRzIHRoaXMgZm9yIFBBR0VfT0ZGU0VUICovCisjaW5jbHVk
ZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CisjaW5jbHVkZSA8bGlu
dXgvcGFnZW1hcC5oPgorI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4KKyNpbmNsdWRlIDxsaW51eC9m
cy5oPgkJLyogZm9yIHN0cnVjdCBhZGRyZXNzX3NwYWNlICAqLworI2luY2x1ZGUgPGxpbnV4L3dy
aXRlYmFjay5oPgkvKiBmb3IgaW5vZGVfd2JfbGlzdF9sb2NrICovCisKK3N0YXRpYyBzdHJ1Y3Qg
a21lbV9jYWNoZSAqX2pub2RlX3NsYWIgPSBOVUxMOworCitzdGF0aWMgdm9pZCBqbm9kZV9zZXRf
dHlwZShqbm9kZSAqIG5vZGUsIGpub2RlX3R5cGUgdHlwZSk7CitzdGF0aWMgaW50IGpkZWxldGUo
am5vZGUgKiBub2RlKTsKK3N0YXRpYyBpbnQgam5vZGVfdHJ5X2Ryb3Aoam5vZGUgKiBub2RlKTsK
KworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyBpbnQgam5vZGVfaW52YXJpYW50KGpub2RlICog
bm9kZSwgaW50IHRsb2NrZWQsIGludCBqbG9ja2VkKTsKKyNlbmRpZgorCisvKiB0cnVlIGlmIHZh
bGlkIHBhZ2UgaXMgYXR0YWNoZWQgdG8gam5vZGUgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGpub2Rl
X2lzX3BhcnNlZChqbm9kZSAqIG5vZGUpCit7CisJcmV0dXJuIEpGX0lTU0VUKG5vZGUsIEpOT0RF
X1BBUlNFRCk7Cit9CisKKy8qIGhhc2ggdGFibGUgc3VwcG9ydCAqLworCisvKiBjb21wYXJlIHR3
byBqbm9kZSBrZXlzIGZvciBlcXVhbGl0eS4gVXNlZCBieSBoYXNoLXRhYmxlIG1hY3JvcyAqLwor
c3RhdGljIGlubGluZSBpbnQgam5vZGVfa2V5X2VxKGNvbnN0IHN0cnVjdCBqbm9kZV9rZXkgKmsx
LAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBqbm9kZV9rZXkgKmsyKQoreworCWFzc2VydCgibmlr
aXRhLTIzNTAiLCBrMSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMzUxIiwgazIgIT0gTlVM
TCk7CisKKwlyZXR1cm4gKGsxLT5pbmRleCA9PSBrMi0+aW5kZXggJiYgazEtPm9iamVjdGlkID09
IGsyLT5vYmplY3RpZCk7Cit9CisKKy8qIEhhc2ggam5vZGUgYnkgaXRzIGtleSAoaW5vZGUgcGx1
cyBvZmZzZXQpLiBVc2VkIGJ5IGhhc2gtdGFibGUgbWFjcm9zICovCitzdGF0aWMgaW5saW5lIF9f
dTMyIGpub2RlX2tleV9oYXNoZm4oal9oYXNoX3RhYmxlICogdGFibGUsCisJCQkJICAgICBjb25z
dCBzdHJ1Y3Qgam5vZGVfa2V5ICprZXkpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjM1MiIsIGtleSAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMzQ2IiwgSVNfUE9XKHRhYmxlLT5fYnVja2V0cykp
OworCisJLyogeWVzLCB0aGlzIGlzIHJlbWFya2FibGUgc2ltcGx5ICh3aGVyZSBub3Qgc3R1cGlk
KSBoYXNoIGZ1bmN0aW9uLiAqLworCXJldHVybiAoa2V5LT5vYmplY3RpZCArIGtleS0+aW5kZXgp
ICYgKHRhYmxlLT5fYnVja2V0cyAtIDEpOworfQorCisvKiBUaGUgaGFzaCB0YWJsZSBkZWZpbml0
aW9uICovCisjZGVmaW5lIEtNQUxMT0Moc2l6ZSkgcmVpc2VyNF92bWFsbG9jKHNpemUpCisjZGVm
aW5lIEtGUkVFKHB0ciwgc2l6ZSkgdmZyZWUocHRyKQorVFlQRV9TQUZFX0hBU0hfREVGSU5FKGos
IGpub2RlLCBzdHJ1Y3Qgam5vZGVfa2V5LCBrZXkuaiwgbGluay5qLAorCQkgICAgICBqbm9kZV9r
ZXlfaGFzaGZuLCBqbm9kZV9rZXlfZXEpOworI3VuZGVmIEtGUkVFCisjdW5kZWYgS01BTExPQwor
CisvKiBjYWxsIHRoaXMgdG8gaW5pdGlhbGlzZSBqbm9kZSBoYXNoIHRhYmxlICovCitpbnQgam5v
ZGVzX3RyZWVfaW5pdChyZWlzZXI0X3RyZWUgKiB0cmVlLyogdHJlZSB0byBpbml0aWFsaXNlIGpu
b2RlcyBmb3IgKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtMjM1OSIsIHRyZWUgIT0gTlVMTCk7CisJ
cmV0dXJuIGpfaGFzaF9pbml0KCZ0cmVlLT5qaGFzaF90YWJsZSwgMTYzODQpOworfQorCisvKiBj
YWxsIHRoaXMgdG8gZGVzdHJveSBqbm9kZSBoYXNoIHRhYmxlLiBUaGlzIGlzIGNhbGxlZCBkdXJp
bmcgdW1vdW50LiAqLworaW50IGpub2Rlc190cmVlX2RvbmUocmVpc2VyNF90cmVlICogdHJlZS8q
IHRyZWUgdG8gZGVzdHJveSBqbm9kZXMgZm9yICovKQoreworCWpfaGFzaF90YWJsZSAqanRhYmxl
OworCWpub2RlICpub2RlOworCWpub2RlICpuZXh0OworCisJYXNzZXJ0KCJuaWtpdGEtMjM2MCIs
IHRyZWUgIT0gTlVMTCk7CisKKwkvKgorCSAqIFNjYW4gaGFzaCB0YWJsZSBhbmQgZnJlZSBhbGwg
am5vZGVzLgorCSAqLworCWp0YWJsZSA9ICZ0cmVlLT5qaGFzaF90YWJsZTsKKwlpZiAoanRhYmxl
LT5fdGFibGUpIHsKKwkJZm9yX2FsbF9pbl9odGFibGUoanRhYmxlLCBqLCBub2RlLCBuZXh0KSB7
CisJCQlhc3NlcnQoIm5pa2l0YS0yMzYxIiwgIWF0b21pY19yZWFkKCZub2RlLT54X2NvdW50KSk7
CisJCQlqZHJvcChub2RlKTsKKwkJfQorCisJCWpfaGFzaF9kb25lKCZ0cmVlLT5qaGFzaF90YWJs
ZSk7CisJfQorCXJldHVybiAwOworfQorCisvKioKKyAqIGluaXRfam5vZGVzIC0gY3JlYXRlIGpu
b2RlIGNhY2hlCisgKgorICogSW5pdGlhbGl6ZXMgc2xhYiBjYWNoZSBqbm9kZXMuIEl0IGlzIHBh
cnQgb2YgcmVpc2VyNCBtb2R1bGUgaW5pdGlhbGl6YXRpb24uCisgKi8KK2ludCBpbml0X2pub2Rl
cyh2b2lkKQoreworCWFzc2VydCgidW1rYS0xNjgiLCBfam5vZGVfc2xhYiA9PSBOVUxMKTsKKwor
CV9qbm9kZV9zbGFiID0ga21lbV9jYWNoZV9jcmVhdGUoImpub2RlIiwgc2l6ZW9mKGpub2RlKSwg
MCwKKwkJCQkJU0xBQl9IV0NBQ0hFX0FMSUdOIHwKKwkJCQkJU0xBQl9SRUNMQUlNX0FDQ09VTlQs
IE5VTEwpOworCWlmIChfam5vZGVfc2xhYiA9PSBOVUxMKQorCQlyZXR1cm4gUkVURVJSKC1FTk9N
RU0pOworCisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogZG9uZV96bm9kZXMgLSBkZWxldGUgem5v
ZGUgY2FjaGUKKyAqCisgKiBUaGlzIGlzIGNhbGxlZCBvbiByZWlzZXI0IG1vZHVsZSB1bmxvYWRp
bmcgb3Igc3lzdGVtIHNodXRkb3duLgorICovCit2b2lkIGRvbmVfam5vZGVzKHZvaWQpCit7CisJ
ZGVzdHJveV9yZWlzZXI0X2NhY2hlKCZfam5vZGVfc2xhYik7Cit9CisKKy8qIEluaXRpYWxpemUg
YSBqbm9kZS4gKi8KK3ZvaWQgam5vZGVfaW5pdChqbm9kZSAqIG5vZGUsIHJlaXNlcjRfdHJlZSAq
IHRyZWUsIGpub2RlX3R5cGUgdHlwZSkKK3sKKwltZW1zZXQobm9kZSwgMCwgc2l6ZW9mKGpub2Rl
KSk7CisJT05fREVCVUcobm9kZS0+bWFnaWMgPSBKTUFHSUMpOworCWpub2RlX3NldF90eXBlKG5v
ZGUsIHR5cGUpOworCWF0b21pY19zZXQoJm5vZGUtPmRfY291bnQsIDApOworCWF0b21pY19zZXQo
Jm5vZGUtPnhfY291bnQsIDApOworCXNwaW5fbG9ja19pbml0KCZub2RlLT5ndWFyZCk7CisJc3Bp
bl9sb2NrX2luaXQoJm5vZGUtPmxvYWQpOworCW5vZGUtPmF0b20gPSBOVUxMOworCW5vZGUtPnRy
ZWUgPSB0cmVlOworCUlOSVRfTElTVF9IRUFEKCZub2RlLT5jYXB0dXJlX2xpbmspOworCisJQVNT
SUdOX05PREVfTElTVChub2RlLCBOT1RfQ0FQVFVSRUQpOworCisjaWYgUkVJU0VSNF9ERUJVRwor
CXsKKwkJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbzsKKworCQlzYmluZm8gPSBnZXRf
c3VwZXJfcHJpdmF0ZSh0cmVlLT5zdXBlcik7CisJCXNwaW5fbG9ja19pcnEoJnNiaW5mby0+YWxs
X2d1YXJkKTsKKwkJbGlzdF9hZGQoJm5vZGUtPmpub2RlcywgJnNiaW5mby0+YWxsX2pub2Rlcyk7
CisJCXNwaW5fdW5sb2NrX2lycSgmc2JpbmZvLT5hbGxfZ3VhcmQpOworCX0KKyNlbmRpZgorfQor
CisjaWYgUkVJU0VSNF9ERUJVRworLyoKKyAqIFJlbW92ZSBqbm9kZSBmcm9tIC0+YWxsX2pub2Rl
cyBsaXN0LgorICovCitzdGF0aWMgdm9pZCBqbm9kZV9kb25lKGpub2RlICogbm9kZSwgcmVpc2Vy
NF90cmVlICogdHJlZSkKK3sKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJ
c2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUodHJlZS0+c3VwZXIpOworCisJc3Bpbl9sb2NrX2ly
cSgmc2JpbmZvLT5hbGxfZ3VhcmQpOworCWFzc2VydCgibmlraXRhLTI0MjIiLCAhbGlzdF9lbXB0
eSgmbm9kZS0+am5vZGVzKSk7CisJbGlzdF9kZWxfaW5pdCgmbm9kZS0+am5vZGVzKTsKKwlzcGlu
X3VubG9ja19pcnEoJnNiaW5mby0+YWxsX2d1YXJkKTsKK30KKyNlbmRpZgorCisvKiByZXR1cm4g
YWxyZWFkeSBleGlzdGluZyBqbm9kZSBvZiBwYWdlICovCitqbm9kZSAqam5vZGVfYnlfcGFnZShz
dHJ1Y3QgcGFnZSAqcGcpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjQwMCIsIFBhZ2VMb2NrZWQocGcp
KTsKKwlhc3NlcnQoIm5pa2l0YS0yMDY4IiwgUGFnZVByaXZhdGUocGcpKTsKKwlhc3NlcnQoIm5p
a2l0YS0yMDY3IiwganByaXZhdGUocGcpICE9IE5VTEwpOworCXJldHVybiBqcHJpdmF0ZShwZyk7
Cit9CisKKy8qIGV4cG9ydGVkIGZ1bmN0aW9ucyB0byBhbGxvY2F0ZS9mcmVlIGpub2RlIG9iamVj
dHMgb3V0c2lkZSB0aGlzIGZpbGUgKi8KK2pub2RlICpqYWxsb2Modm9pZCkKK3sKKwlqbm9kZSAq
amFsID0ga21lbV9jYWNoZV9hbGxvYyhfam5vZGVfc2xhYiwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tf
Z2V0KCkpOworCXJldHVybiBqYWw7Cit9CisKKy8qIHJldHVybiBqbm9kZSBiYWNrIHRvIHRoZSBz
bGFiIGFsbG9jYXRvciAqLworaW5saW5lIHZvaWQgamZyZWUoam5vZGUgKiBub2RlKQoreworCWFz
c2VydCgibmlraXRhLTI2NjMiLCAobGlzdF9lbXB0eV9jYXJlZnVsKCZub2RlLT5jYXB0dXJlX2xp
bmspICYmCisJCQkgICAgICAgTk9ERV9MSVNUKG5vZGUpID09IE5PVF9DQVBUVVJFRCkpOworCWFz
c2VydCgibmlraXRhLTMyMjIiLCBsaXN0X2VtcHR5KCZub2RlLT5qbm9kZXMpKTsKKwlhc3NlcnQo
Im5pa2l0YS0zMjIxIiwgam5vZGVfcGFnZShub2RlKSA9PSBOVUxMKTsKKworCS8qIG5vdCB5ZXQg
cGhhc2hfam5vZGVfZGVzdHJveShub2RlKTsgKi8KKworCWttZW1fY2FjaGVfZnJlZShfam5vZGVf
c2xhYiwgbm9kZSk7Cit9CisKKy8qCisgKiBUaGlzIGZ1bmN0aW9uIGlzIHN1cHBsaWVkIGFzIFJD
VSBjYWxsYmFjay4gSXQgYWN0dWFsbHkgZnJlZXMgam5vZGUgd2hlbgorICogbGFzdCByZWZlcmVu
Y2UgdG8gaXQgaXMgZ29uZS4KKyAqLworc3RhdGljIHZvaWQgam5vZGVfZnJlZV9hY3RvcihzdHJ1
Y3QgcmN1X2hlYWQgKmhlYWQpCit7CisJam5vZGUgKm5vZGU7CisJam5vZGVfdHlwZSBqdHlwZTsK
KworCW5vZGUgPSBjb250YWluZXJfb2YoaGVhZCwgam5vZGUsIHJjdSk7CisJanR5cGUgPSBqbm9k
ZV9nZXRfdHlwZShub2RlKTsKKworCU9OX0RFQlVHKGpub2RlX2RvbmUobm9kZSwgam5vZGVfZ2V0
X3RyZWUobm9kZSkpKTsKKworCXN3aXRjaCAoanR5cGUpIHsKKwljYXNlIEpOT0RFX0lPX0hFQUQ6
CisJY2FzZSBKTk9ERV9CSVRNQVA6CisJY2FzZSBKTk9ERV9VTkZPUk1BVFRFRF9CTE9DSzoKKwkJ
amZyZWUobm9kZSk7CisJCWJyZWFrOworCWNhc2UgSk5PREVfRk9STUFUVEVEX0JMT0NLOgorCQl6
ZnJlZShKWk5PREUobm9kZSkpOworCQlicmVhazsKKwljYXNlIEpOT0RFX0lOT0RFOgorCWRlZmF1
bHQ6CisJCXdyb25nX3JldHVybl92YWx1ZSgibmlraXRhLTMxOTciLCAiV3Jvbmcgam5vZGUgdHlw
ZSIpOworCX0KK30KKworLyoKKyAqIEZyZWUgYSBqbm9kZS4gUG9zdCBhIGNhbGxiYWNrIHRvIGJl
IGV4ZWN1dGVkIGxhdGVyIHRocm91Z2ggUkNVIHdoZW4gYWxsCisgKiByZWZlcmVuY2VzIHRvIEBu
b2RlIGFyZSByZWxlYXNlZC4KKyAqLworc3RhdGljIGlubGluZSB2b2lkIGpub2RlX2ZyZWUoam5v
ZGUgKiBub2RlLCBqbm9kZV90eXBlIGp0eXBlKQoreworCWlmIChqdHlwZSAhPSBKTk9ERV9JTk9E
RSkgeworCQkvKmFzc2VydCgibmlraXRhLTMyMTkiLCBsaXN0X2VtcHR5KCZub2RlLT5yY3UubGlz
dCkpOyAqLworCQljYWxsX3JjdSgmbm9kZS0+cmN1LCBqbm9kZV9mcmVlX2FjdG9yKTsKKwl9IGVs
c2UKKwkJam5vZGVfbGlzdF9yZW1vdmUobm9kZSk7Cit9CisKKy8qIGFsbG9jYXRlIG5ldyB1bmZv
cm1hdHRlZCBqbm9kZSAqLworc3RhdGljIGpub2RlICpqbmV3X3VuZm9ybWF0dGVkKHZvaWQpCit7
CisJam5vZGUgKmphbDsKKworCWphbCA9IGphbGxvYygpOworCWlmIChqYWwgPT0gTlVMTCkKKwkJ
cmV0dXJuIE5VTEw7CisKKwlqbm9kZV9pbml0KGphbCwgY3VycmVudF90cmVlLCBKTk9ERV9VTkZP
Uk1BVFRFRF9CTE9DSyk7CisJamFsLT5rZXkuai5tYXBwaW5nID0gTlVMTDsKKwlqYWwtPmtleS5q
LmluZGV4ID0gKHVuc2lnbmVkIGxvbmcpLTE7CisJamFsLT5rZXkuai5vYmplY3RpZCA9IDA7CisJ
cmV0dXJuIGphbDsKK30KKworLyogbG9vayBmb3Igam5vZGUgd2l0aCBnaXZlbiBtYXBwaW5nIGFu
ZCBvZmZzZXQgd2l0aGluIGhhc2ggdGFibGUgKi8KK2pub2RlICpqbG9va3VwKHJlaXNlcjRfdHJl
ZSAqIHRyZWUsIG9pZF90IG9iamVjdGlkLCB1bnNpZ25lZCBsb25nIGluZGV4KQoreworCXN0cnVj
dCBqbm9kZV9rZXkgamtleTsKKwlqbm9kZSAqbm9kZTsKKworCWprZXkub2JqZWN0aWQgPSBvYmpl
Y3RpZDsKKwlqa2V5LmluZGV4ID0gaW5kZXg7CisKKwkvKgorCSAqIGhhc2ggdGFibGUgaXMgX25v
dF8gcHJvdGVjdGVkIGJ5IGFueSBsb2NrIGR1cmluZyBsb29rdXBzLiBBbGwgd2UKKwkgKiBoYXZl
IHRvIGRvIGlzIHRvIGRpc2FibGUgcHJlZW1wdGlvbiB0byBrZWVwIFJDVSBoYXBweS4KKwkgKi8K
KworCXJjdV9yZWFkX2xvY2soKTsKKwlub2RlID0gal9oYXNoX2ZpbmQoJnRyZWUtPmpoYXNoX3Rh
YmxlLCAmamtleSk7CisJaWYgKG5vZGUgIT0gTlVMTCkgeworCQkvKiBwcm90ZWN0IEBub2RlIGZy
b20gcmVjeWNsaW5nICovCisJCWpyZWYobm9kZSk7CisJCWFzc2VydCgibmlraXRhLTI5NTUiLCBq
bm9kZV9pbnZhcmlhbnQobm9kZSwgMCwgMCkpOworCQlub2RlID0gam5vZGVfcmlwX2NoZWNrKHRy
ZWUsIG5vZGUpOworCX0KKwlyY3VfcmVhZF91bmxvY2soKTsKKwlyZXR1cm4gbm9kZTsKK30KKwor
LyogcGVyIGlub2RlIHJhZGl4IHRyZWUgb2Ygam5vZGVzIGlzIHByb3RlY3RlZCBieSB0cmVlJ3Mg
cmVhZCB3cml0ZSBzcGluIGxvY2sgKi8KK3N0YXRpYyBqbm9kZSAqamZpbmRfbm9sb2NrKHN0cnVj
dCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCB1bnNpZ25lZCBsb25nIGluZGV4KQoreworCWFzc2Vy
dCgidnMtMTY5NCIsIG1hcHBpbmctPmhvc3QgIT0gTlVMTCk7CisKKwlyZXR1cm4gcmFkaXhfdHJl
ZV9sb29rdXAoam5vZGVfdHJlZV9ieV9pbm9kZShtYXBwaW5nLT5ob3N0KSwgaW5kZXgpOworfQor
Citqbm9kZSAqamZpbmQoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsIHVuc2lnbmVkIGxv
bmcgaW5kZXgpCit7CisJcmVpc2VyNF90cmVlICp0cmVlOworCWpub2RlICpub2RlOworCisJYXNz
ZXJ0KCJ2cy0xNjk0IiwgbWFwcGluZy0+aG9zdCAhPSBOVUxMKTsKKwl0cmVlID0gcmVpc2VyNF90
cmVlX2J5X2lub2RlKG1hcHBpbmctPmhvc3QpOworCisJcmVhZF9sb2NrX3RyZWUodHJlZSk7CisJ
bm9kZSA9IGpmaW5kX25vbG9jayhtYXBwaW5nLCBpbmRleCk7CisJaWYgKG5vZGUgIT0gTlVMTCkK
KwkJanJlZihub2RlKTsKKwlyZWFkX3VubG9ja190cmVlKHRyZWUpOworCXJldHVybiBub2RlOwor
fQorCitzdGF0aWMgdm9pZCBpbm9kZV9hdHRhY2hfam5vZGUoam5vZGUgKiBub2RlKQoreworCXN0
cnVjdCBpbm9kZSAqaW5vZGU7CisJcmVpc2VyNF9pbm9kZSAqaW5mbzsKKwlzdHJ1Y3QgcmFkaXhf
dHJlZV9yb290ICpydHJlZTsKKworCWFzc2VydF9yd193cml0ZV9sb2NrZWQoJihqbm9kZV9nZXRf
dHJlZShub2RlKS0+dHJlZV9sb2NrKSk7CisJYXNzZXJ0KCJ6YW0tMTA0MyIsIG5vZGUtPmtleS5q
Lm1hcHBpbmcgIT0gTlVMTCk7CisJaW5vZGUgPSBub2RlLT5rZXkuai5tYXBwaW5nLT5ob3N0Owor
CWluZm8gPSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpOworCXJ0cmVlID0gam5vZGVfdHJlZV9i
eV9yZWlzZXI0X2lub2RlKGluZm8pOworCWlmIChyYWRpeF90cmVlX2VtcHR5KHJ0cmVlKSkgewor
CQkvKiBwcmV2ZW50IGlub2RlIGZyb20gYmVpbmcgcHJ1bmVkIHdoZW4gaXQgaGFzIGpub2RlcyBh
dHRhY2hlZAorCQkgICB0byBpdCAqLworCQl4YV9sb2NrX2lycSgmaW5vZGUtPmlfZGF0YS5pX3Bh
Z2VzKTsKKwkJaW5vZGUtPmlfZGF0YS5ucnBhZ2VzKys7CisJCXhhX3VubG9ja19pcnEoJmlub2Rl
LT5pX2RhdGEuaV9wYWdlcyk7CisJfQorCWFzc2VydCgiemFtLTEwNDkiLAorCSAgICAgICBlcXVp
KCFyYWRpeF90cmVlX2VtcHR5KHJ0cmVlKSwgaW5mby0+bnJfam5vZGVzICE9IDApKTsKKwljaGVj
a19tZSgiemFtLTEwNDUiLAorCQkgIXJhZGl4X3RyZWVfaW5zZXJ0KHJ0cmVlLCBub2RlLT5rZXku
ai5pbmRleCwgbm9kZSkpOworCU9OX0RFQlVHKGluZm8tPm5yX2pub2RlcysrKTsKK30KKworc3Rh
dGljIHZvaWQgaW5vZGVfZGV0YWNoX2pub2RlKGpub2RlICogbm9kZSkKK3sKKwlzdHJ1Y3QgaW5v
ZGUgKmlub2RlOworCXJlaXNlcjRfaW5vZGUgKmluZm87CisJc3RydWN0IHJhZGl4X3RyZWVfcm9v
dCAqcnRyZWU7CisKKwlhc3NlcnRfcndfd3JpdGVfbG9ja2VkKCYoam5vZGVfZ2V0X3RyZWUobm9k
ZSktPnRyZWVfbG9jaykpOworCWFzc2VydCgiemFtLTEwNDQiLCBub2RlLT5rZXkuai5tYXBwaW5n
ICE9IE5VTEwpOworCWlub2RlID0gbm9kZS0+a2V5LmoubWFwcGluZy0+aG9zdDsKKwlpbmZvID0g
cmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKTsKKwlydHJlZSA9IGpub2RlX3RyZWVfYnlfcmVpc2Vy
NF9pbm9kZShpbmZvKTsKKworCWFzc2VydCgiemFtLTEwNTEiLCBpbmZvLT5ucl9qbm9kZXMgIT0g
MCk7CisJYXNzZXJ0KCJ6YW0tMTA1MiIsICFyYWRpeF90cmVlX2VtcHR5KHJ0cmVlKSk7CisJT05f
REVCVUcoaW5mby0+bnJfam5vZGVzLS0pOworCisJLyogZGVsZXRlIGpub2RlIGZyb20gaW5vZGUn
cyByYWRpeCB0cmVlIG9mIGpub2RlcyAqLworCWNoZWNrX21lKCJ6YW0tMTA0NiIsIHJhZGl4X3Ry
ZWVfZGVsZXRlKHJ0cmVlLCBub2RlLT5rZXkuai5pbmRleCkpOworCWlmIChyYWRpeF90cmVlX2Vt
cHR5KHJ0cmVlKSkgeworCQkvKiBpbm9kZSBjYW4gYmUgcHJ1bmVkIG5vdyAqLworCQl4YV9sb2Nr
X2lycSgmaW5vZGUtPmlfZGF0YS5pX3BhZ2VzKTsKKwkJaW5vZGUtPmlfZGF0YS5ucnBhZ2VzLS07
CisJCXhhX3VubG9ja19pcnEoJmlub2RlLT5pX2RhdGEuaV9wYWdlcyk7CisJfQorfQorCisvKiBw
dXQgam5vZGUgaW50byBoYXNoIHRhYmxlICh3aGVyZSB0aGV5IGNhbiBiZSBmb3VuZCBieSBmbHVz
aCB3aG8gZG9lcyBub3Qga25vdworICAgbWFwcGluZykgYW5kIHRvIGlub2RlJ3MgdHJlZSBvZiBq
bm9kZXMgKHdoZXJlIHRoZXkgY2FuIGJlIGZvdW5kIChob3BlZnVsbHkKKyAgIGZhc3RlcikgaW4g
cGxhY2VzIHdoZXJlIG1hcHBpbmcgaXMga25vd24pLiBDdXJyZW50bHkgaXQgaXMgdXNlZCBieQor
ICAgZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9leHRlbnRfZmlsZV9vcHMuYzppbmRleF9leHRlbnRf
am5vZGUgd2hlbiBuZXcgam5vZGUgaXMKKyAgIGNyZWF0ZWQgKi8KK3N0YXRpYyB2b2lkCitoYXNo
X3VuZm9ybWF0dGVkX2pub2RlKGpub2RlICogbm9kZSwgc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1h
cHBpbmcsCisJCSAgICAgICB1bnNpZ25lZCBsb25nIGluZGV4KQoreworCWpfaGFzaF90YWJsZSAq
anRhYmxlOworCisJYXNzZXJ0KCJ2cy0xNDQ2Iiwgam5vZGVfaXNfdW5mb3JtYXR0ZWQobm9kZSkp
OworCWFzc2VydCgidnMtMTQ0MiIsIG5vZGUtPmtleS5qLm1hcHBpbmcgPT0gMCk7CisJYXNzZXJ0
KCJ2cy0xNDQzIiwgbm9kZS0+a2V5Lmoub2JqZWN0aWQgPT0gMCk7CisJYXNzZXJ0KCJ2cy0xNDQ0
Iiwgbm9kZS0+a2V5LmouaW5kZXggPT0gKHVuc2lnbmVkIGxvbmcpLTEpOworCWFzc2VydF9yd193
cml0ZV9sb2NrZWQoJihqbm9kZV9nZXRfdHJlZShub2RlKS0+dHJlZV9sb2NrKSk7CisKKwlub2Rl
LT5rZXkuai5tYXBwaW5nID0gbWFwcGluZzsKKwlub2RlLT5rZXkuai5vYmplY3RpZCA9IGdldF9p
bm9kZV9vaWQobWFwcGluZy0+aG9zdCk7CisJbm9kZS0+a2V5LmouaW5kZXggPSBpbmRleDsKKwor
CWp0YWJsZSA9ICZqbm9kZV9nZXRfdHJlZShub2RlKS0+amhhc2hfdGFibGU7CisKKwkvKiByYWNl
IHdpdGggc29tZSBvdGhlciB0aHJlYWQgaW5zZXJ0aW5nIGpub2RlIGludG8gdGhlIGhhc2ggdGFi
bGUgaXMKKwkgKiBpbXBvc3NpYmxlLCBiZWNhdXNlIHdlIGtlZXAgdGhlIHBhZ2UgbG9jay4gKi8K
KwkvKgorCSAqIGZvbGxvd2luZyBhc3NlcnRpb24gbm8gbG9uZ2VyIGhvbGRzIGJlY2F1c2Ugb2Yg
UkNVOiBpdCBpcyBwb3NzaWJsZQorCSAqIGpub2RlIGlzIGluIHRoZSBoYXNoIHRhYmxlLCBidXQg
d2l0aCBKTk9ERV9SSVAgYml0IHNldC4KKwkgKi8KKwkvKiBhc3NlcnQoIm5pa2l0YS0zMjExIiwg
al9oYXNoX2ZpbmQoanRhYmxlLCAmbm9kZS0+a2V5LmopID09IE5VTEwpOyAqLworCWpfaGFzaF9p
bnNlcnRfcmN1KGp0YWJsZSwgbm9kZSk7CisJaW5vZGVfYXR0YWNoX2pub2RlKG5vZGUpOworfQor
CitzdGF0aWMgdm9pZCB1bmhhc2hfdW5mb3JtYXR0ZWRfbm9kZV9ub2xvY2soam5vZGUgKiBub2Rl
KQoreworCWFzc2VydCgidnMtMTY4MyIsIG5vZGUtPmtleS5qLm1hcHBpbmcgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJ2cy0xNjg0IiwKKwkgICAgICAgbm9kZS0+a2V5Lmoub2JqZWN0aWQgPT0KKwkgICAg
ICAgZ2V0X2lub2RlX29pZChub2RlLT5rZXkuai5tYXBwaW5nLT5ob3N0KSk7CisKKwkvKiByZW1v
dmUgam5vZGUgZnJvbSBoYXNoLXRhYmxlICovCisJal9oYXNoX3JlbW92ZV9yY3UoJm5vZGUtPnRy
ZWUtPmpoYXNoX3RhYmxlLCBub2RlKTsKKwlpbm9kZV9kZXRhY2hfam5vZGUobm9kZSk7CisJbm9k
ZS0+a2V5LmoubWFwcGluZyA9IE5VTEw7CisJbm9kZS0+a2V5LmouaW5kZXggPSAodW5zaWduZWQg
bG9uZyktMTsKKwlub2RlLT5rZXkuai5vYmplY3RpZCA9IDA7CisKK30KKworLyogcmVtb3ZlIGpu
b2RlIGZyb20gaGFzaCB0YWJsZSBhbmQgZnJvbSBpbm9kZSdzIHRyZWUgb2Ygam5vZGVzLiBUaGlz
IGlzIHVzZWQgaW4KKyAgIHJlaXNlcjRfaW52YWxpZGF0ZXBhZ2UgYW5kIGluIGtpbGxfaG9va19l
eHRlbnQgLT4gdHJ1bmNhdGVfaW5vZGVfam5vZGVzIC0+CisgICByZWlzZXI0X3VuY2FwdHVyZV9q
bm9kZSAqLwordm9pZCB1bmhhc2hfdW5mb3JtYXR0ZWRfam5vZGUoam5vZGUgKiBub2RlKQorewor
CWFzc2VydCgidnMtMTQ0NSIsIGpub2RlX2lzX3VuZm9ybWF0dGVkKG5vZGUpKTsKKworCXdyaXRl
X2xvY2tfdHJlZShub2RlLT50cmVlKTsKKwl1bmhhc2hfdW5mb3JtYXR0ZWRfbm9kZV9ub2xvY2so
bm9kZSk7CisJd3JpdGVfdW5sb2NrX3RyZWUobm9kZS0+dHJlZSk7Cit9CisKKy8qCisgKiBzZWFy
Y2ggaGFzaCB0YWJsZSBmb3IgYSBqbm9kZSB3aXRoIGdpdmVuIG9pZCBhbmQgaW5kZXguIElmIG5v
dCBmb3VuZCwKKyAqIGFsbG9jYXRlIG5ldyBqbm9kZSwgaW5zZXJ0IGl0LCBhbmQgYWxzbyBpbnNl
cnQgaW50byByYWRpeCB0cmVlIGZvciB0aGUKKyAqIGdpdmVuIGlub2RlL21hcHBpbmcuCisgKi8K
K3N0YXRpYyBqbm9kZSAqZmluZF9nZXRfam5vZGUocmVpc2VyNF90cmVlICogdHJlZSwKKwkJCSAg
ICAgc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgIG9pZF90IG9pZCwgdW5z
aWduZWQgbG9uZyBpbmRleCkKK3sKKwlqbm9kZSAqcmVzdWx0OworCWpub2RlICpzaGFkb3c7CisJ
aW50IHByZWxvYWQ7CisKKwlyZXN1bHQgPSBqbmV3X3VuZm9ybWF0dGVkKCk7CisKKwlpZiAodW5s
aWtlbHkocmVzdWx0ID09IE5VTEwpKQorCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkp
OworCisJcHJlbG9hZCA9IHJhZGl4X3RyZWVfcHJlbG9hZChyZWlzZXI0X2N0eF9nZnBfbWFza19n
ZXQoKSk7CisJaWYgKHByZWxvYWQgIT0gMCkKKwkJcmV0dXJuIEVSUl9QVFIocHJlbG9hZCk7CisK
Kwl3cml0ZV9sb2NrX3RyZWUodHJlZSk7CisJc2hhZG93ID0gamZpbmRfbm9sb2NrKG1hcHBpbmcs
IGluZGV4KTsKKwlpZiAobGlrZWx5KHNoYWRvdyA9PSBOVUxMKSkgeworCQkvKiBhZGQgbmV3IGpu
b2RlIHRvIGhhc2ggdGFibGUgYW5kIGlub2RlJ3MgcmFkaXggdHJlZSBvZgorCQkgKiBqbm9kZXMg
Ki8KKwkJanJlZihyZXN1bHQpOworCQloYXNoX3VuZm9ybWF0dGVkX2pub2RlKHJlc3VsdCwgbWFw
cGluZywgaW5kZXgpOworCX0gZWxzZSB7CisJCS8qIGpub2RlIGlzIGZvdW5kIGluIGlub2RlJ3Mg
cmFkaXggdHJlZSBvZiBqbm9kZXMgKi8KKwkJanJlZihzaGFkb3cpOworCQlqbm9kZV9mcmVlKHJl
c3VsdCwgSk5PREVfVU5GT1JNQVRURURfQkxPQ0spOworCQlhc3NlcnQoInZzLTE0OTgiLCBzaGFk
b3ctPmtleS5qLm1hcHBpbmcgPT0gbWFwcGluZyk7CisJCXJlc3VsdCA9IHNoYWRvdzsKKwl9CisJ
d3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisKKwlhc3NlcnQoIm5pa2l0YS0yOTU1IiwKKwkgICAg
ICAgZXJnbyhyZXN1bHQgIT0gTlVMTCwgam5vZGVfaW52YXJpYW50KHJlc3VsdCwgMCwgMCkpKTsK
KwlyYWRpeF90cmVlX3ByZWxvYWRfZW5kKCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogamdl
dCgpIChhIGxhIHpnZXQoKSBidXQgZm9yIHVuZm9ybWF0dGVkIG5vZGVzKS4gUmV0dXJucyAoYW5k
IHBvc3NpYmx5CisgICBjcmVhdGVzKSBqbm9kZSBjb3JyZXNwb25kaW5nIHRvIHBhZ2UgQHBnLiBq
bm9kZSBpcyBhdHRhY2hlZCB0byBwYWdlIGFuZAorICAgaW5zZXJ0ZWQgaW50byBqbm9kZSBoYXNo
LXRhYmxlLiAqLworc3RhdGljIGpub2RlICpkb19qZ2V0KHJlaXNlcjRfdHJlZSAqIHRyZWUsIHN0
cnVjdCBwYWdlICpwZykKK3sKKwkvKgorCSAqIFRoZXJlIGFyZSB0d28gd2F5cyB0byBjcmVhdGUg
am5vZGU6IHN0YXJ0aW5nIHdpdGggcHJlLWV4aXN0aW5nIHBhZ2UKKwkgKiBhbmQgd2l0aG91dCBw
YWdlLgorCSAqCisJICogV2hlbiBwYWdlIGFscmVhZHkgZXhpc3RzLCBqbm9kZSBpcyBjcmVhdGVk
CisJICogKGpub2RlX29mX3BhZ2UoKS0+ZG9famdldCgpKSB1bmRlciBwYWdlIGxvY2suIFRoaXMg
aXMgZG9uZSBpbgorCSAqIC0+d3JpdGVwYWdlKCksIG9yIHdoZW4gY2FwdHVyaW5nIGFub255bW91
cyBwYWdlIGRpcnRpZWQgdGhyb3VnaAorCSAqIG1tYXAuCisJICoKKwkgKiBKbm9kZSB3aXRob3V0
IHBhZ2UgaXMgY3JlYXRlZCBieSBpbmRleF9leHRlbnRfam5vZGUoKS4KKwkgKgorCSAqLworCisJ
am5vZGUgKnJlc3VsdDsKKwlvaWRfdCBvaWQgPSBnZXRfaW5vZGVfb2lkKHBnLT5tYXBwaW5nLT5o
b3N0KTsKKworCWFzc2VydCgidW1rYS0xNzYiLCBwZyAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0yMzk0IiwgUGFnZUxvY2tlZChwZykpOworCisJcmVzdWx0ID0ganByaXZhdGUocGcpOworCWlm
IChsaWtlbHkocmVzdWx0ICE9IE5VTEwpKQorCQlyZXR1cm4ganJlZihyZXN1bHQpOworCisJdHJl
ZSA9IHJlaXNlcjRfdHJlZV9ieV9wYWdlKHBnKTsKKworCS8qIGNoZWNrIGhhc2gtdGFibGUgZmly
c3QgKi8KKwlyZXN1bHQgPSBqZmluZChwZy0+bWFwcGluZywgcGctPmluZGV4KTsKKwlpZiAodW5s
aWtlbHkocmVzdWx0ICE9IE5VTEwpKSB7CisJCXNwaW5fbG9ja19qbm9kZShyZXN1bHQpOworCQlq
bm9kZV9hdHRhY2hfcGFnZShyZXN1bHQsIHBnKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUocmVzdWx0
KTsKKwkJcmVzdWx0LT5rZXkuai5tYXBwaW5nID0gcGctPm1hcHBpbmc7CisJCXJldHVybiByZXN1
bHQ7CisJfQorCisJLyogc2luY2UgcGFnZSBpcyBsb2NrZWQsIGpub2RlIHNob3VsZCBiZSBhbGxv
Y2F0ZWQgd2l0aCBHRlBfTk9GUyBmbGFnICovCisJcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZm9yY2Uo
R0ZQX05PRlMpOworCXJlc3VsdCA9IGZpbmRfZ2V0X2pub2RlKHRyZWUsIHBnLT5tYXBwaW5nLCBv
aWQsIHBnLT5pbmRleCk7CisJaWYgKHVubGlrZWx5KElTX0VSUihyZXN1bHQpKSkKKwkJcmV0dXJu
IHJlc3VsdDsKKwkvKiBhdHRhY2ggam5vZGUgdG8gcGFnZSAqLworCXNwaW5fbG9ja19qbm9kZShy
ZXN1bHQpOworCWpub2RlX2F0dGFjaF9wYWdlKHJlc3VsdCwgcGcpOworCXNwaW5fdW5sb2NrX2pu
b2RlKHJlc3VsdCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIHJldHVybiBqbm9kZSBm
b3IgQHBnLCBjcmVhdGluZyBpdCBpZiBuZWNlc3NhcnkuCisgKi8KK2pub2RlICpqbm9kZV9vZl9w
YWdlKHN0cnVjdCBwYWdlICpwZykKK3sKKwlqbm9kZSAqcmVzdWx0OworCisJYXNzZXJ0KCJuaWtp
dGEtMjM5NCIsIFBhZ2VMb2NrZWQocGcpKTsKKworCXJlc3VsdCA9IGRvX2pnZXQocmVpc2VyNF90
cmVlX2J5X3BhZ2UocGcpLCBwZyk7CisKKwlpZiAoUkVJU0VSNF9ERUJVRyAmJiAhSVNfRVJSKHJl
c3VsdCkpIHsKKwkJYXNzZXJ0KCJuaWtpdGEtMzIxMCIsIHJlc3VsdCA9PSBqcHJpdmF0ZShwZykp
OworCQlhc3NlcnQoIm5pa2l0YS0yMDQ2Iiwgam5vZGVfcGFnZShqcHJpdmF0ZShwZykpID09IHBn
KTsKKwkJaWYgKGpub2RlX2lzX3VuZm9ybWF0dGVkKGpwcml2YXRlKHBnKSkpIHsKKwkJCWFzc2Vy
dCgibmlraXRhLTIzNjQiLAorCQkJICAgICAgIGpwcml2YXRlKHBnKS0+a2V5LmouaW5kZXggPT0g
cGctPmluZGV4KTsKKwkJCWFzc2VydCgibmlraXRhLTIzNjciLAorCQkJICAgICAgIGpwcml2YXRl
KHBnKS0+a2V5LmoubWFwcGluZyA9PSBwZy0+bWFwcGluZyk7CisJCQlhc3NlcnQoIm5pa2l0YS0y
MzY1IiwKKwkJCSAgICAgICBqcHJpdmF0ZShwZyktPmtleS5qLm9iamVjdGlkID09CisJCQkgICAg
ICAgZ2V0X2lub2RlX29pZChwZy0+bWFwcGluZy0+aG9zdCkpOworCQkJYXNzZXJ0KCJ2cy0xMjAw
IiwKKwkJCSAgICAgICBqcHJpdmF0ZShwZyktPmtleS5qLm9iamVjdGlkID09CisJCQkgICAgICAg
cGctPm1hcHBpbmctPmhvc3QtPmlfaW5vKTsKKwkJCWFzc2VydCgibmlraXRhLTIzNTYiLAorCQkJ
ICAgICAgIGpub2RlX2lzX3VuZm9ybWF0dGVkKGpub2RlX2J5X3BhZ2UocGcpKSk7CisJCX0KKwkJ
YXNzZXJ0KCJuaWtpdGEtMjk1NiIsIGpub2RlX2ludmFyaWFudChqcHJpdmF0ZShwZyksIDAsIDAp
KTsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogYXR0YWNoIHBhZ2UgdG8gam5vZGU6IHNl
dCAtPnBnIHBvaW50ZXIgaW4gam5vZGUsIGFuZCAtPnByaXZhdGUgb25lIGluIHRoZQorICogcGFn
ZS4qLwordm9pZCBqbm9kZV9hdHRhY2hfcGFnZShqbm9kZSAqIG5vZGUsIHN0cnVjdCBwYWdlICpw
ZykKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMDYwIiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS0yMDYxIiwgcGcgIT0gTlVMTCk7CisKKwlhc3NlcnQoIm5pa2l0YS0yMDUwIiwganByaXZh
dGUocGcpID09IDB1bCk7CisJYXNzZXJ0KCJuaWtpdGEtMjM5MyIsICFQYWdlUHJpdmF0ZShwZykp
OworCWFzc2VydCgidnMtMTc0MSIsIG5vZGUtPnBnID09IE5VTEwpOworCisJYXNzZXJ0KCJuaWtp
dGEtMjM5NiIsIFBhZ2VMb2NrZWQocGcpKTsKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihub2RlLT5n
dWFyZCkpOworCisJZ2V0X3BhZ2UocGcpOworCXNldF9wYWdlX3ByaXZhdGUocGcsICh1bnNpZ25l
ZCBsb25nKW5vZGUpOworCW5vZGUtPnBnID0gcGc7CisJU2V0UGFnZVByaXZhdGUocGcpOworfQor
CisvKiBEdWFsIHRvIGpub2RlX2F0dGFjaF9wYWdlOiBicmVhayBhIGJpbmRpbmcgYmV0d2VlbiBw
YWdlIGFuZCBqbm9kZSAqLwordm9pZCBwYWdlX2NsZWFyX2pub2RlKHN0cnVjdCBwYWdlICpwYWdl
LCBqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjQyNSIsIFBhZ2VMb2NrZWQocGFn
ZSkpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJkKSk7CisJYXNzZXJ0KCJuaWtp
dGEtMjQyOCIsIFBhZ2VQcml2YXRlKHBhZ2UpKTsKKworCWFzc2VydCgibmlraXRhLTM1NTEiLCAh
UGFnZVdyaXRlYmFjayhwYWdlKSk7CisKKwlKRl9DTFIobm9kZSwgSk5PREVfUEFSU0VEKTsKKwlz
ZXRfcGFnZV9wcml2YXRlKHBhZ2UsIDB1bCk7CisJQ2xlYXJQYWdlUHJpdmF0ZShwYWdlKTsKKwlu
b2RlLT5wZyA9IE5VTEw7CisJcHV0X3BhZ2UocGFnZSk7Cit9CisKKyNpZiAwCisvKiBpdCBpcyBv
bmx5IHVzZWQgaW4gb25lIHBsYWNlIHRvIGhhbmRsZSBlcnJvciAqLwordm9pZAorcGFnZV9kZXRh
Y2hfam5vZGUoc3RydWN0IHBhZ2UgKnBhZ2UsIHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5n
LAorCQkgIHVuc2lnbmVkIGxvbmcgaW5kZXgpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjM5NSIsIHBh
Z2UgIT0gTlVMTCk7CisKKwlsb2NrX3BhZ2UocGFnZSk7CisJaWYgKChwYWdlLT5tYXBwaW5nID09
IG1hcHBpbmcpICYmIChwYWdlLT5pbmRleCA9PSBpbmRleCkKKwkgICAgJiYgUGFnZVByaXZhdGUo
cGFnZSkpIHsKKwkJam5vZGUgKm5vZGU7CisKKwkJbm9kZSA9IGpwcml2YXRlKHBhZ2UpOworCQlz
cGluX2xvY2tfam5vZGUobm9kZSk7CisJCXBhZ2VfY2xlYXJfam5vZGUocGFnZSwgbm9kZSk7CisJ
CXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCX0KKwl1bmxvY2tfcGFnZShwYWdlKTsKK30KKyNl
bmRpZiAgLyogIDAgICovCisKKy8qIHJldHVybiBAbm9kZSBwYWdlIGxvY2tlZC4KKworICAgTG9j
a2luZyBvcmRlcmluZyByZXF1aXJlcyB0aGF0IG9uZSBmaXJzdCB0YWtlcyBwYWdlIGxvY2sgYW5k
IGFmdGVyd2FyZHMKKyAgIHNwaW4gbG9jayBvbiBub2RlIGF0dGFjaGVkIHRvIHRoaXMgcGFnZS4g
U29tZXRpbWVzIGl0IGlzIG5lY2Vzc2FyeSB0byBnbyBpbgorICAgdGhlIG9wcG9zaXRlIGRpcmVj
dGlvbi4gVGhpcyBpcyBkb25lIHRocm91Z2ggc3RhbmRhcmQgdHJ5bG9jay1hbmQtcmVsZWFzZQor
ICAgbG9vcC4KKyovCitzdGF0aWMgc3RydWN0IHBhZ2UgKmpub2RlX2xvY2tfcGFnZShqbm9kZSAq
IG5vZGUpCit7CisJc3RydWN0IHBhZ2UgKnBhZ2U7CisKKwlhc3NlcnQoIm5pa2l0YS0yMDUyIiwg
bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yNDAxIiwgTE9DS19DTlRfTklMKHNwaW5f
bG9ja2VkX2pub2RlKSk7CisKKwl3aGlsZSAoMSkgeworCisJCXNwaW5fbG9ja19qbm9kZShub2Rl
KTsKKwkJcGFnZSA9IGpub2RlX3BhZ2Uobm9kZSk7CisJCWlmIChwYWdlID09IE5VTEwpCisJCQli
cmVhazsKKworCQkvKiBubyBuZWVkIHRvIGdldF9wYWdlKCBwYWdlICkgaGVyZSwgYmVjYXVzZSBw
YWdlIGNhbm5vdAorCQkgICBiZSBldmljdGVkIGZyb20gbWVtb3J5IHdpdGhvdXQgZGV0YWNoaW5n
IGl0IGZyb20gam5vZGUgYW5kCisJCSAgIHRoaXMgcmVxdWlyZXMgc3BpbiBsb2NrIG9uIGpub2Rl
IHRoYXQgd2UgYWxyZWFkeSBob2xkLgorCQkgKi8KKwkJaWYgKHRyeWxvY2tfcGFnZShwYWdlKSkg
eworCQkJLyogV2Ugd29uIGEgbG9jayBvbiBqbm9kZSBwYWdlLCBwcm9jZWVkLiAqLworCQkJYnJl
YWs7CisJCX0KKworCQkvKiBQYWdlIGlzIGxvY2tlZCBieSBzb21lb25lIGVsc2UuICovCisJCWdl
dF9wYWdlKHBhZ2UpOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJd2FpdF9vbl9wYWdl
X2xvY2tlZChwYWdlKTsKKwkJLyogaXQgaXMgcG9zc2libGUgdGhhdCBwYWdlIHdhcyBkZXRhY2hl
ZCBmcm9tIGpub2RlIGFuZAorCQkgICByZXR1cm5lZCB0byB0aGUgZnJlZSBwb29sLCBvciByZS1h
c3NpZ25lZCB3aGlsZSB3ZSB3ZXJlCisJCSAgIHdhaXRpbmcgb24gbG9ja2VkIGJpdC4gVGhpcyB3
aWxsIGJlIHJlY2hlY2tlZCBvbiB0aGUgbmV4dAorCQkgICBsb29wIGl0ZXJhdGlvbi4KKwkJICov
CisJCXB1dF9wYWdlKHBhZ2UpOworCisJCS8qIHRyeSBhZ2FpbiAqLworCX0KKwlyZXR1cm4gcGFn
ZTsKK30KKworLyoKKyAqIGlzIEpOT0RFX1BBUlNFRCBiaXQgaXMgbm90IHNldCwgY2FsbCAtPnBh
cnNlKCkgbWV0aG9kIG9mIGpub2RlLCB0byB2ZXJpZnkKKyAqIHZhbGlkbmVzcyBvZiBqbm9kZSBj
b250ZW50LgorICovCitzdGF0aWMgaW5saW5lIGludCBqcGFyc2Uoam5vZGUgKiBub2RlKQorewor
CWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yNDY2Iiwgbm9kZSAhPSBOVUxMKTsKKwor
CXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwlpZiAobGlrZWx5KCFqbm9kZV9pc19wYXJzZWQobm9k
ZSkpKSB7CisJCXJlc3VsdCA9IGpub2RlX29wcyhub2RlKS0+cGFyc2Uobm9kZSk7CisJCWlmIChs
aWtlbHkocmVzdWx0ID09IDApKQorCQkJSkZfU0VUKG5vZGUsIEpOT0RFX1BBUlNFRCk7CisJfSBl
bHNlCisJCXJlc3VsdCA9IDA7CisJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJcmV0dXJuIHJl
c3VsdDsKK30KKworLyogTG9jayBhIHBhZ2UgYXR0YWNoZWQgdG8gam5vZGUsIGNyZWF0ZSBhbmQg
YXR0YWNoIHBhZ2UgdG8gam5vZGUgaWYgaXQgaGFkIG5vCisgKiBvbmUuICovCitzdGF0aWMgc3Ry
dWN0IHBhZ2UgKmpub2RlX2dldF9wYWdlX2xvY2tlZChqbm9kZSAqIG5vZGUsIGdmcF90IGdmcF9m
bGFncykKK3sKKwlzdHJ1Y3QgcGFnZSAqcGFnZTsKKworCXNwaW5fbG9ja19qbm9kZShub2RlKTsK
KwlwYWdlID0gam5vZGVfcGFnZShub2RlKTsKKworCWlmIChwYWdlID09IE5VTEwpIHsKKwkJc3Bp
bl91bmxvY2tfam5vZGUobm9kZSk7CisJCXBhZ2UgPSBmaW5kX29yX2NyZWF0ZV9wYWdlKGpub2Rl
X2dldF9tYXBwaW5nKG5vZGUpLAorCQkJCQkgICBqbm9kZV9nZXRfaW5kZXgobm9kZSksIGdmcF9m
bGFncyk7CisJCWlmIChwYWdlID09IE5VTEwpCisJCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVO
T01FTSkpOworCX0gZWxzZSB7CisJCWlmICh0cnlsb2NrX3BhZ2UocGFnZSkpIHsKKwkJCXNwaW5f
dW5sb2NrX2pub2RlKG5vZGUpOworCQkJcmV0dXJuIHBhZ2U7CisJCX0KKwkJZ2V0X3BhZ2UocGFn
ZSk7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCQlsb2NrX3BhZ2UocGFnZSk7CisJCWFz
c2VydCgibmlraXRhLTMxMzQiLCBwYWdlLT5tYXBwaW5nID09IGpub2RlX2dldF9tYXBwaW5nKG5v
ZGUpKTsKKwl9CisKKwlzcGluX2xvY2tfam5vZGUobm9kZSk7CisJaWYgKCFqbm9kZV9wYWdlKG5v
ZGUpKQorCQlqbm9kZV9hdHRhY2hfcGFnZShub2RlLCBwYWdlKTsKKwlzcGluX3VubG9ja19qbm9k
ZShub2RlKTsKKworCXB1dF9wYWdlKHBhZ2UpOworCWFzc2VydCgiemFtLTg5NCIsIGpub2RlX3Bh
Z2Uobm9kZSkgPT0gcGFnZSk7CisJcmV0dXJuIHBhZ2U7Cit9CisKKy8qIFN0YXJ0IHJlYWQgb3Bl
cmF0aW9uIGZvciBqbm9kZSdzIHBhZ2UgaWYgcGFnZSBpcyBub3QgdXAtdG8tZGF0ZS4gKi8KK3N0
YXRpYyBpbnQgam5vZGVfc3RhcnRfcmVhZChqbm9kZSAqIG5vZGUsIHN0cnVjdCBwYWdlICpwYWdl
KQoreworCWFzc2VydCgiemFtLTg5MyIsIFBhZ2VMb2NrZWQocGFnZSkpOworCisJaWYgKFBhZ2VV
cHRvZGF0ZShwYWdlKSkgeworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmV0dXJuIDA7CisJfQor
CXJldHVybiByZWlzZXI0X3BhZ2VfaW8ocGFnZSwgbm9kZSwgUkVBRCwgcmVpc2VyNF9jdHhfZ2Zw
X21hc2tfZ2V0KCkpOworfQorCisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIHZvaWQgY2hlY2tf
amxvYWQoam5vZGUgKiBub2RlLCBzdHJ1Y3QgcGFnZSAqcGFnZSkKK3sKKwlpZiAoam5vZGVfaXNf
em5vZGUobm9kZSkpIHsKKwkJem5vZGUgKnogPSBKWk5PREUobm9kZSk7CisKKwkJaWYgKHpub2Rl
X2lzX2FueV9sb2NrZWQoeikpIHsKKwkJCWFzc2VydCgibmlraXRhLTMyNTMiLAorCQkJICAgICAg
IHotPm5yX2l0ZW1zID09CisJCQkgICAgICAgbm9kZV9wbHVnaW5fYnlfbm9kZSh6KS0+bnVtX29m
X2l0ZW1zKHopKTsKKwkJCWt1bm1hcChwYWdlKTsKKwkJfQorCQlhc3NlcnQoIm5pa2l0YS0zNTY1
Iiwgem5vZGVfaW52YXJpYW50KHopKTsKKwl9Cit9CisjZWxzZQorI2RlZmluZSBjaGVja19qbG9h
ZChub2RlLCBwYWdlKSBub29wCisjZW5kaWYKKworLyogcHJlZmV0Y2ggam5vZGUgdG8gc3BlZWQg
dXAgbmV4dCBjYWxsIHRvIGpsb2FkLiBDYWxsIHRoaXMgd2hlbiB5b3UgYXJlIGdvaW5nCisgKiB0
byBjYWxsIGpsb2FkKCkgc2hvcnRseS4gVGhpcyB3aWxsIGJyaW5nIGFwcHJvcHJpYXRlIHBvcnRp
b24gb2Ygam5vZGUgaW50bworICogQ1BVIGNhY2hlLiAqLwordm9pZCBqbG9hZF9wcmVmZXRjaChq
bm9kZSAqIG5vZGUpCit7CisJcHJlZmV0Y2h3KCZub2RlLT54X2NvdW50KTsKK30KKworLyogbG9h
ZCBqbm9kZSdzIGRhdGEgaW50byBtZW1vcnkgKi8KK2ludCBqbG9hZF9nZnAoam5vZGUgKiBub2Rl
IC8qIG5vZGUgdG8gbG9hZCAqLyAsCisJICAgICAgZ2ZwX3QgZ2ZwX2ZsYWdzIC8qIGFsbG9jYXRp
b24gZmxhZ3MgKi8gLAorCSAgICAgIGludCBkb19rbWFwLyogdHJ1ZSBpZiBwYWdlIHNob3VsZCBi
ZSBrbWFwcGVkICovKQoreworCXN0cnVjdCBwYWdlICpwYWdlOworCWludCByZXN1bHQgPSAwOwor
CWludCBwYXJzZWQ7CisKKwlhc3NlcnQoIm5pa2l0YS0zMDEwIiwgcmVpc2VyNF9zY2hlZHVsYWJs
ZSgpKTsKKworCXByZWZldGNodygmbm9kZS0+cGcpOworCisJLyogdGFraW5nIGQtcmVmZXJlbmNl
IGltcGxpZXMgdGFraW5nIHgtcmVmZXJlbmNlLiAqLworCWpyZWYobm9kZSk7CisKKwkvKgorCSAq
IGFjcXVpcmluZyBkLXJlZmVyZW5jZSB0byBAam5vZGUgYW5kIGNoZWNrIGZvciBKTk9ERV9QQVJT
RUQgYml0CisJICogc2hvdWxkIGJlIGF0b21pYywgb3RoZXJ3aXNlIHRoZXJlIGlzIGEgcmFjZSBh
Z2FpbnN0CisJICogcmVpc2VyNF9yZWxlYXNlcGFnZSgpLgorCSAqLworCXNwaW5fbG9jaygmKG5v
ZGUtPmxvYWQpKTsKKwlhZGRfZF9yZWYobm9kZSk7CisJcGFyc2VkID0gam5vZGVfaXNfcGFyc2Vk
KG5vZGUpOworCXNwaW5fdW5sb2NrKCYobm9kZS0+bG9hZCkpOworCisJaWYgKHVubGlrZWx5KCFw
YXJzZWQpKSB7CisJCXBhZ2UgPSBqbm9kZV9nZXRfcGFnZV9sb2NrZWQobm9kZSwgZ2ZwX2ZsYWdz
KTsKKwkJaWYgKHVubGlrZWx5KElTX0VSUihwYWdlKSkpIHsKKwkJCXJlc3VsdCA9IFBUUl9FUlIo
cGFnZSk7CisJCQlnb3RvIGZhaWxlZDsKKwkJfQorCisJCXJlc3VsdCA9IGpub2RlX3N0YXJ0X3Jl
YWQobm9kZSwgcGFnZSk7CisJCWlmICh1bmxpa2VseShyZXN1bHQgIT0gMCkpCisJCQlnb3RvIGZh
aWxlZDsKKworCQl3YWl0X29uX3BhZ2VfbG9ja2VkKHBhZ2UpOworCQlpZiAodW5saWtlbHkoIVBh
Z2VVcHRvZGF0ZShwYWdlKSkpIHsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJCWdvdG8g
ZmFpbGVkOworCQl9CisKKwkJaWYgKGRvX2ttYXApCisJCQlub2RlLT5kYXRhID0ga21hcChwYWdl
KTsKKworCQlyZXN1bHQgPSBqcGFyc2Uobm9kZSk7CisJCWlmICh1bmxpa2VseShyZXN1bHQgIT0g
MCkpIHsKKwkJCWlmIChkb19rbWFwKQorCQkJCWt1bm1hcChwYWdlKTsKKwkJCWdvdG8gZmFpbGVk
OworCQl9CisJCWNoZWNrX2psb2FkKG5vZGUsIHBhZ2UpOworCX0gZWxzZSB7CisJCXBhZ2UgPSBq
bm9kZV9wYWdlKG5vZGUpOworCQljaGVja19qbG9hZChub2RlLCBwYWdlKTsKKwkJaWYgKGRvX2tt
YXApCisJCQlub2RlLT5kYXRhID0ga21hcChwYWdlKTsKKwl9CisKKwlpZiAoIWlzX3dyaXRlb3V0
X21vZGUoKSkKKwkJLyogV2UgZG8gbm90IG1hcmsgcGFnZXMgYWN0aXZlIGlmIGpsb2FkIGlzIGNh
bGxlZCBhcyBhIHBhcnQgb2YKKwkJICogam5vZGVfZmx1c2goKSBvciByZWlzZXI0X3dyaXRlX2xv
Z3MoKS4gIEJvdGggam5vZGVfZmx1c2goKQorCQkgKiBhbmQgd3JpdGVfbG9ncygpIGFkZCBubyB2
YWx1ZSB0byBjYWNoZWQgZGF0YSwgdGhlcmUgaXMgbm8KKwkJICogc2Vuc2UgdG8gbWFyayBwYWdl
cyBhcyBhY3RpdmUgd2hlbiB0aGV5IGdvIHRvIGRpc2ssIGl0IGp1c3QKKwkJICogY29uZnVzZXMg
dm0gc2Nhbm5pbmcgcm91dGluZXMgYmVjYXVzZSBjbGVhbiBwYWdlIGNvdWxkIGJlCisJCSAqIG1v
dmVkIG91dCBmcm9tIGluYWN0aXZlIGxpc3QgYXMgYSByZXN1bHQgb2YgdGhpcworCQkgKiBtYXJr
X3BhZ2VfYWNjZXNzZWQoKSBjYWxsLiAqLworCQltYXJrX3BhZ2VfYWNjZXNzZWQocGFnZSk7CisK
KwlyZXR1cm4gMDsKKworZmFpbGVkOgorCWpyZWxzZV90YWlsKG5vZGUpOworCXJldHVybiByZXN1
bHQ7CisKK30KKworLyogc3RhcnQgYXN5bmNocm9ub3VzIHJlYWRpbmcgZm9yIGdpdmVuIGpub2Rl
J3MgcGFnZS4gKi8KK2ludCBqc3RhcnRpbyhqbm9kZSAqIG5vZGUpCit7CisJc3RydWN0IHBhZ2Ug
KnBhZ2U7CisKKwlwYWdlID0gam5vZGVfZ2V0X3BhZ2VfbG9ja2VkKG5vZGUsIHJlaXNlcjRfY3R4
X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoSVNfRVJSKHBhZ2UpKQorCQlyZXR1cm4gUFRSX0VSUihw
YWdlKTsKKworCXJldHVybiBqbm9kZV9zdGFydF9yZWFkKG5vZGUsIHBhZ2UpOworfQorCisvKiBJ
bml0aWFsaXplIGEgbm9kZSBieSBjYWxsaW5nIGFwcHJvcHJpYXRlIHBsdWdpbiBpbnN0ZWFkIG9m
IHJlYWRpbmcKKyAqIG5vZGUgZnJvbSBkaXNrIGFzIGluIGpsb2FkKCkuICovCitpbnQgamluaXRf
bmV3KGpub2RlICogbm9kZSwgZ2ZwX3QgZ2ZwX2ZsYWdzKQoreworCXN0cnVjdCBwYWdlICpwYWdl
OworCWludCByZXN1bHQ7CisKKwlqcmVmKG5vZGUpOworCWFkZF9kX3JlZihub2RlKTsKKworCXBh
Z2UgPSBqbm9kZV9nZXRfcGFnZV9sb2NrZWQobm9kZSwgZ2ZwX2ZsYWdzKTsKKwlpZiAoSVNfRVJS
KHBhZ2UpKSB7CisJCXJlc3VsdCA9IFBUUl9FUlIocGFnZSk7CisJCWdvdG8gZmFpbGVkOworCX0K
KworCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKKwl1bmxvY2tfcGFnZShwYWdlKTsKKworCW5vZGUt
PmRhdGEgPSBrbWFwKHBhZ2UpOworCisJaWYgKCFqbm9kZV9pc19wYXJzZWQobm9kZSkpIHsKKwkJ
am5vZGVfcGx1Z2luICpqcGx1ZyA9IGpub2RlX29wcyhub2RlKTsKKwkJc3Bpbl9sb2NrX2pub2Rl
KG5vZGUpOworCQlyZXN1bHQgPSBqcGx1Zy0+aW5pdChub2RlKTsKKwkJc3Bpbl91bmxvY2tfam5v
ZGUobm9kZSk7CisJCWlmIChyZXN1bHQpIHsKKwkJCWt1bm1hcChwYWdlKTsKKwkJCWdvdG8gZmFp
bGVkOworCQl9CisJCUpGX1NFVChub2RlLCBKTk9ERV9QQVJTRUQpOworCX0KKworCXJldHVybiAw
OworCitmYWlsZWQ6CisJanJlbHNlKG5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJl
bGVhc2UgYSByZWZlcmVuY2UgdG8gam5vZGUgYWNxdWlyZWQgYnkgamxvYWQoKSwgZGVjcmVtZW50
IC0+ZF9jb3VudCAqLwordm9pZCBqcmVsc2VfdGFpbChqbm9kZSAqIG5vZGUvKiBqbm9kZSB0byBy
ZWxlYXNlIHJlZmVyZW5jZXMgdG8gKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtNDg5IiwgYXRvbWlj
X3JlYWQoJm5vZGUtPmRfY291bnQpID4gMCk7CisJYXRvbWljX2RlYygmbm9kZS0+ZF9jb3VudCk7
CisJLyogcmVsZWFzZSByZWZlcmVuY2UgYWNxdWlyZWQgaW4gamxvYWRfZ2ZwKCkgb3IgamluaXRf
bmV3KCkgKi8KKwlpZiAoam5vZGVfaXNfdW5mb3JtYXR0ZWQobm9kZSkgfHwgam5vZGVfaXNfem5v
ZGUobm9kZSkpCisJCUxPQ0tfQ05UX0RFQyhkX3JlZnMpOworCWpwdXQobm9kZSk7Cit9CisKKy8q
IGRyb3AgcmVmZXJlbmNlIHRvIG5vZGUgZGF0YS4gV2hlbiBsYXN0IHJlZmVyZW5jZSBpcyBkcm9w
cGVkLCBkYXRhIGFyZQorICAgdW5sb2FkZWQuICovCit2b2lkIGpyZWxzZShqbm9kZSAqIG5vZGUv
KiBqbm9kZSB0byByZWxlYXNlIHJlZmVyZW5jZXMgdG8gKi8pCit7CisJc3RydWN0IHBhZ2UgKnBh
Z2U7CisKKwlhc3NlcnQoIm5pa2l0YS00ODciLCBub2RlICE9IE5VTEwpOworCWFzc2VydF9zcGlu
X25vdF9sb2NrZWQoJihub2RlLT5ndWFyZCkpOworCisJcGFnZSA9IGpub2RlX3BhZ2Uobm9kZSk7
CisJaWYgKGxpa2VseShwYWdlICE9IE5VTEwpKSB7CisJCS8qCisJCSAqIGl0IGlzIHNhZmUgbm90
IHRvIGxvY2sgam5vZGUgaGVyZSwgYmVjYXVzZSBhdCB0aGlzIHBvaW50CisJCSAqIEBub2RlLT5k
X2NvdW50IGlzIGdyZWF0ZXIgdGhhbiB6ZXJvIChpZiBqcmVsc2UoKSBpcyB1c2VkCisJCSAqIGNv
cnJlY3RseSwgdGhhdCBpcykuIEpOT0RFX1BBUlNFRCBtYXkgYmUgbm90IHNldCB5ZXQsIGlmLAor
CQkgKiBmb3IgZXhhbXBsZSwgd2UgZ290IGhlcmUgYXMgYSByZXN1bHQgb2YgZXJyb3IgaGFuZGxp
bmcgcGF0aAorCQkgKiBpbiBqbG9hZCgpLiBBbnl3YXksIHBhZ2UgY2Fubm90IGJlIGRldGFjaGVk
IGJ5CisJCSAqIHJlaXNlcjRfcmVsZWFzZXBhZ2UoKS4gdHJ1bmNhdGUgd2lsbCBpbnZhbGlkYXRl
IHBhZ2UKKwkJICogcmVnYXJkbGVzcywgYnV0IHRoaXMgc2hvdWxkIG5vdCBiZSBhIHByb2JsZW0u
CisJCSAqLworCQlrdW5tYXAocGFnZSk7CisJfQorCWpyZWxzZV90YWlsKG5vZGUpOworfQorCisv
KiBjYWxsZWQgZnJvbSBqcHV0KCkgdG8gd2FpdCBmb3IgaW8gY29tcGxldGlvbiAqLworc3RhdGlj
IHZvaWQgam5vZGVfZmluaXNoX2lvKGpub2RlICogbm9kZSkKK3sKKwlzdHJ1Y3QgcGFnZSAqcGFn
ZTsKKworCWFzc2VydCgibmlraXRhLTI5MjIiLCBub2RlICE9IE5VTEwpOworCisJc3Bpbl9sb2Nr
X2pub2RlKG5vZGUpOworCXBhZ2UgPSBqbm9kZV9wYWdlKG5vZGUpOworCWlmIChwYWdlICE9IE5V
TEwpIHsKKwkJZ2V0X3BhZ2UocGFnZSk7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCQl3
YWl0X29uX3BhZ2Vfd3JpdGViYWNrKHBhZ2UpOworCQlwdXRfcGFnZShwYWdlKTsKKwl9IGVsc2UK
KwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7Cit9CisKKy8qCisgKiBUaGlzIGlzIGNhbGxlZCBi
eSBqcHV0KCkgd2hlbiBsYXN0IHJlZmVyZW5jZSB0byBqbm9kZSBpcyByZWxlYXNlZC4gVGhpcyBp
cworICogc2VwYXJhdGUgZnVuY3Rpb24sIGJlY2F1c2Ugd2Ugd2FudCBmYXN0IHBhdGggb2YganB1
dCgpIHRvIGJlIGlubGluZSBhbmQsCisgKiB0aGVyZWZvcmUsIHNtYWxsLgorICovCit2b2lkIGpw
dXRfZmluYWwoam5vZGUgKiBub2RlKQoreworCWludCByX2lfcDsKKworCS8qIEEgZmFzdCBjaGVj
ayBmb3Iga2VlcGluZyBub2RlIGluIGNhY2hlLiBXZSBhbHdheXMga2VlcCBub2RlIGluIGNhY2hl
CisJICogaWYgaXRzIHBhZ2UgaXMgcHJlc2VudCBhbmQgbm9kZSB3YXMgbm90IG1hcmtlZCBmb3Ig
ZGVsZXRpb24gKi8KKwlpZiAoam5vZGVfcGFnZShub2RlKSAhPSBOVUxMICYmICFKRl9JU1NFVChu
b2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSkgeworCQlyY3VfcmVhZF91bmxvY2soKTsKKwkJcmV0
dXJuOworCX0KKwlyX2lfcCA9ICFKRl9URVNUX0FORF9TRVQobm9kZSwgSk5PREVfUklQKTsKKwkv
KgorCSAqIGlmIHJfaV9wIGlzIHRydWUsIHdlIHdlcmUgZmlyc3QgdG8gc2V0IEpOT0RFX1JJUCBv
biB0aGlzIG5vZGUuIEluCisJICogdGhpcyBjYXNlIGl0IGlzIHNhZmUgdG8gYWNjZXNzIG5vZGUg
YWZ0ZXIgdW5sb2NrLgorCSAqLworCXJjdV9yZWFkX3VubG9jaygpOworCWlmIChyX2lfcCkgewor
CQlqbm9kZV9maW5pc2hfaW8obm9kZSk7CisJCWlmIChKRl9JU1NFVChub2RlLCBKTk9ERV9IRUFS
RF9CQU5TSEVFKSkKKwkJCS8qIG5vZGUgaXMgcmVtb3ZlZCBmcm9tIHRoZSB0cmVlLiAqLworCQkJ
amRlbGV0ZShub2RlKTsKKwkJZWxzZQorCQkJam5vZGVfdHJ5X2Ryb3Aobm9kZSk7CisJfQorCS8q
IGlmICFyX2lfcCBzb21lIG90aGVyIHRocmVhZCBpcyBhbHJlYWR5IGtpbGxpbmcgaXQgKi8KK30K
KworaW50IGp3YWl0X2lvKGpub2RlICogbm9kZSwgaW50IHJ3KQoreworCXN0cnVjdCBwYWdlICpw
YWdlOworCWludCByZXN1bHQ7CisKKwlhc3NlcnQoInphbS00NDgiLCBqbm9kZV9wYWdlKG5vZGUp
ICE9IE5VTEwpOworCisJcGFnZSA9IGpub2RlX3BhZ2Uobm9kZSk7CisKKwlyZXN1bHQgPSAwOwor
CWlmIChydyA9PSBSRUFEKSB7CisJCXdhaXRfb25fcGFnZV9sb2NrZWQocGFnZSk7CisJfSBlbHNl
IHsKKwkJYXNzZXJ0KCJuaWtpdGEtMjIyNyIsIHJ3ID09IFdSSVRFKTsKKwkJd2FpdF9vbl9wYWdl
X3dyaXRlYmFjayhwYWdlKTsKKwl9CisJaWYgKFBhZ2VFcnJvcihwYWdlKSkKKwkJcmVzdWx0ID0g
UkVURVJSKC1FSU8pOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIGpub2RlIHR5cGVz
IGFuZCBwbHVnaW5zLgorICoKKyAqIGpub2RlIGJ5IGl0c2VsZiBpcyBhICJiYXNlIHR5cGUiLiBU
aGVyZSBhcmUgc2V2ZXJhbCBkaWZmZXJlbnQgam5vZGUKKyAqIGZsYXZvcnMsIGNhbGxlZCAiam5v
ZGUgdHlwZXMiIChzZWUgam5vZGVfdHlwZSBmb3IgYSBsaXN0KS4gU29tZXRpbWVzIGNvZGUKKyAq
IGhhcyB0byBkbyBkaWZmZXJlbnQgdGhpbmdzIGJhc2VkIG9uIGpub2RlIHR5cGUuIEluIHRoZSBz
dGFuZGFyZCByZWlzZXI0IHdheQorICogdGhpcyBpcyBkb25lIGJ5IGhhdmluZyBqbm9kZSBwbHVn
aW4gKHNlZSBmcy9yZWlzZXI0L3BsdWdpbi5oOmpub2RlX3BsdWdpbikuCisgKgorICogRnVuY3Rp
b25zIGJlbG93IGRlYWwgd2l0aCBqbm9kZSB0eXBlcyBhbmQgZGVmaW5lIG1ldGhvZHMgb2Ygam5v
ZGUgcGx1Z2luLgorICoKKyAqLworCisvKiBzZXQgam5vZGUgdHlwZS4gVGhpcyBpcyBkb25lIGR1
cmluZyBqbm9kZSBpbml0aWFsaXphdGlvbi4gKi8KK3N0YXRpYyB2b2lkIGpub2RlX3NldF90eXBl
KGpub2RlICogbm9kZSwgam5vZGVfdHlwZSB0eXBlKQoreworCXN0YXRpYyB1bnNpZ25lZCBsb25n
IHR5cGVfdG9fbWFza1tdID0geworCQlbSk5PREVfVU5GT1JNQVRURURfQkxPQ0tdID0gMSwKKwkJ
W0pOT0RFX0ZPUk1BVFRFRF9CTE9DS10gPSAwLAorCQlbSk5PREVfQklUTUFQXSA9IDIsCisJCVtK
Tk9ERV9JT19IRUFEXSA9IDYsCisJCVtKTk9ERV9JTk9ERV0gPSA0CisJfTsKKworCWFzc2VydCgi
emFtLTY0NyIsIHR5cGUgPCBMQVNUX0pOT0RFX1RZUEUpOworCWFzc2VydCgibmlraXRhLTI4MTUi
LCAham5vZGVfaXNfbG9hZGVkKG5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMzg2Iiwgbm9kZS0+
c3RhdGUgPT0gMCk7CisKKwlub2RlLT5zdGF0ZSB8PSAodHlwZV90b19tYXNrW3R5cGVdIDw8IEpO
T0RFX1RZUEVfMSk7Cit9CisKKy8qIC0+aW5pdCgpIG1ldGhvZCBvZiBqbm9kZSBwbHVnaW4gZm9y
IGpub2RlcyB0aGF0IGRvbid0IHJlcXVpcmUgcGx1Z2luCisgKiBzcGVjaWZpYyBpbml0aWFsaXph
dGlvbi4gKi8KK3N0YXRpYyBpbnQgaW5pdF9ub2luaXQoam5vZGUgKiBub2RlIFVOVVNFRF9BUkcp
Cit7CisJcmV0dXJuIDA7Cit9CisKKy8qIC0+cGFyc2UoKSBtZXRob2Qgb2Ygam5vZGUgcGx1Z2lu
IGZvciBqbm9kZXMgdGhhdCBkb24ndCByZXF1aXJlIHBsdWdpbgorICogc3BlY2lmaWMgcGFzcmlu
Zy4gKi8KK3N0YXRpYyBpbnQgcGFyc2Vfbm9wYXJzZShqbm9kZSAqIG5vZGUgVU5VU0VEX0FSRykK
K3sKKwlyZXR1cm4gMDsKK30KKworLyogLT5tYXBwaW5nKCkgbWV0aG9kIGZvciB1bmZvcm1hdHRl
ZCBqbm9kZSAqLworc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmdfam5vZGUoY29uc3Qgam5v
ZGUgKiBub2RlKQoreworCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXA7CisKKwlhc3NlcnQoIm5p
a2l0YS0yNzEzIiwgbm9kZSAhPSBOVUxMKTsKKworCS8qIG1hcHBpbmcgaXMgc3RvcmVkIGluIGpu
b2RlICovCisKKwltYXAgPSBub2RlLT5rZXkuai5tYXBwaW5nOworCWFzc2VydCgibmlraXRhLTI3
MTQiLCBtYXAgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjg5NyIsIGlzX3JlaXNlcjRfaW5v
ZGUobWFwLT5ob3N0KSk7CisJYXNzZXJ0KCJuaWtpdGEtMjcxNSIsIGdldF9pbm9kZV9vaWQobWFw
LT5ob3N0KSA9PSBub2RlLT5rZXkuai5vYmplY3RpZCk7CisJcmV0dXJuIG1hcDsKK30KKworLyog
LT5pbmRleCgpIG1ldGhvZCBmb3IgdW5mb3JtYXR0ZWQgam5vZGVzICovCit1bnNpZ25lZCBsb25n
IGluZGV4X2pub2RlKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwkvKiBpbmRleCBpcyBzdG9yZWQg
aW4gam5vZGUgKi8KKwlyZXR1cm4gbm9kZS0+a2V5LmouaW5kZXg7Cit9CisKKy8qIC0+cmVtb3Zl
KCkgbWV0aG9kIGZvciB1bmZvcm1hdHRlZCBqbm9kZXMgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBy
ZW1vdmVfam5vZGUoam5vZGUgKiBub2RlLCByZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCS8qIHJl
bW92ZSBqbm9kZSBmcm9tIGhhc2ggdGFibGUgYW5kIHJhZGl4IHRyZWUgKi8KKwlpZiAobm9kZS0+
a2V5LmoubWFwcGluZykKKwkJdW5oYXNoX3VuZm9ybWF0dGVkX25vZGVfbm9sb2NrKG5vZGUpOwor
fQorCisvKiAtPm1hcHBpbmcoKSBtZXRob2QgZm9yIHpub2RlcyAqLworc3RhdGljIHN0cnVjdCBh
ZGRyZXNzX3NwYWNlICptYXBwaW5nX3pub2RlKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwkvKiBh
bGwgem5vZGVzIGJlbG9uZyB0byBmYWtlIGlub2RlICovCisJcmV0dXJuIHJlaXNlcjRfZ2V0X3N1
cGVyX2Zha2Uoam5vZGVfZ2V0X3RyZWUobm9kZSktPnN1cGVyKS0+aV9tYXBwaW5nOworfQorCisv
KiAtPmluZGV4KCkgbWV0aG9kIGZvciB6bm9kZXMgKi8KK3N0YXRpYyB1bnNpZ25lZCBsb25nIGlu
ZGV4X3pub2RlKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwl1bnNpZ25lZCBsb25nIGFkZHI7CisJ
YXNzZXJ0KCJuaWtpdGEtMzMxNyIsICgxIDw8IHpub2RlX3NoaWZ0X29yZGVyKSA8IHNpemVvZih6
bm9kZSkpOworCisJLyogaW5kZXggb2Ygem5vZGUgaXMganVzdCBpdHMgYWRkcmVzcyAoc2hpZnRl
ZCkgKi8KKwlhZGRyID0gKHVuc2lnbmVkIGxvbmcpbm9kZTsKKwlyZXR1cm4gKGFkZHIgLSBQQUdF
X09GRlNFVCkgPj4gem5vZGVfc2hpZnRfb3JkZXI7Cit9CisKKy8qIC0+bWFwcGluZygpIG1ldGhv
ZCBmb3IgYml0bWFwIGpub2RlICovCitzdGF0aWMgc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBp
bmdfYml0bWFwKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwkvKiBhbGwgYml0bWFwIGJsb2NrcyBi
ZWxvbmcgdG8gc3BlY2lhbCBiaXRtYXAgaW5vZGUgKi8KKwlyZXR1cm4gZ2V0X3N1cGVyX3ByaXZh
dGUoam5vZGVfZ2V0X3RyZWUobm9kZSktPnN1cGVyKS0+Yml0bWFwLT4KKwkgICAgaV9tYXBwaW5n
OworfQorCisvKiAtPmluZGV4KCkgbWV0aG9kIGZvciBqbm9kZXMgdGhhdCBhcmUgaW5kZXhlZCBi
eSBhZGRyZXNzICovCitzdGF0aWMgdW5zaWduZWQgbG9uZyBpbmRleF9pc19hZGRyZXNzKGNvbnN0
IGpub2RlICogbm9kZSkKK3sKKwl1bnNpZ25lZCBsb25nIGluZDsKKworCWluZCA9ICh1bnNpZ25l
ZCBsb25nKW5vZGU7CisJcmV0dXJuIGluZCAtIFBBR0VfT0ZGU0VUOworfQorCisvKiByZXNvbHZl
IHJhY2Ugd2l0aCBqcHV0ICovCitqbm9kZSAqam5vZGVfcmlwX3N5bmMocmVpc2VyNF90cmVlICp0
cmVlLCBqbm9kZSAqbm9kZSkKK3sKKwkvKgorCSAqIFRoaXMgaXMgdXNlZCBhcyBwYXJ0IG9mIFJD
VS1iYXNlZCBqbm9kZSBoYW5kbGluZy4KKwkgKgorCSAqIGpsb29rdXAoKSwgemxvb2soKSwgemdl
dCgpLCBhbmQgY2JrX2NhY2hlX3NjYW5fc2xvdHMoKSBoYXZlIHRvIHdvcmsKKwkgKiB3aXRoIHVu
cmVmZXJlbmNlZCBqbm9kZXMgKG9uZXMgd2l0aCAtPnhfY291bnQgPT0gMCkuIEhhc2ggdGFibGUg
aXMKKwkgKiBub3QgcHJvdGVjdGVkIGR1cmluZyB0aGlzLCBzbyBjb25jdXJyZW50IHRocmVhZCBt
YXkgZXhlY3V0ZQorCSAqIHpnZXQtc2V0LUhFQVJEX0JBTlNIRUUtenB1dCwgb3Igc29tZWhvdyBl
bHNlIGNhdXNlIGpub2RlIHRvIGJlCisJICogZnJlZWQgaW4ganB1dF9maW5hbCgpLiBUbyBhdm9p
ZCBzdWNoIHJhY2VzLCBqcHV0X2ZpbmFsKCkgc2V0cworCSAqIEpOT0RFX1JJUCBvbiBqbm9kZSAo
dW5kZXIgdHJlZSBsb2NrKS4gQWxsIHBsYWNlcyB0aGF0IHdvcmsgd2l0aAorCSAqIHVucmVmZXJl
bmNlZCBqbm9kZXMgY2FsbCB0aGlzIGZ1bmN0aW9uLiBJdCBjaGVja3MgZm9yIEpOT0RFX1JJUCBi
aXQKKwkgKiAoZmlyc3Qgd2l0aG91dCB0YWtpbmcgdHJlZSBsb2NrKSwgYW5kIGlmIHRoaXMgYml0
IGlzIHNldCwgcmVsZWFzZWQKKwkgKiByZWZlcmVuY2UgYWNxdWlyZWQgYnkgdGhlIGN1cnJlbnQg
dGhyZWFkIGFuZCByZXR1cm5zIE5VTEwuCisJICoKKwkgKiBBcyBhIHJlc3VsdCwgaWYgam5vZGUg
aXMgYmVpbmcgY29uY3VycmVudGx5IGZyZWVkLCBOVUxMIGlzIHJldHVybmVkCisJICogYW5kIGNh
bGxlciBzaG91bGQgcHJldGVuZCB0aGF0IGpub2RlIHdhc24ndCBmb3VuZCBpbiB0aGUgZmlyc3QK
KwkgKiBwbGFjZS4KKwkgKgorCSAqIE90aGVyd2lzZSBpdCdzIHNhZmUgdG8gcmVsZWFzZSAicmN1
LXJlYWQtbG9jayIgYW5kIGNvbnRpbnVlIHdpdGgKKwkgKiBqbm9kZS4KKwkgKi8KKwlpZiAodW5s
aWtlbHkoSkZfSVNTRVQobm9kZSwgSk5PREVfUklQKSkpIHsKKwkJcmVhZF9sb2NrX3RyZWUodHJl
ZSk7CisJCWlmIChKRl9JU1NFVChub2RlLCBKTk9ERV9SSVApKSB7CisJCQlkZWNfeF9yZWYobm9k
ZSk7CisJCQlub2RlID0gTlVMTDsKKwkJfQorCQlyZWFkX3VubG9ja190cmVlKHRyZWUpOworCX0K
KwlyZXR1cm4gbm9kZTsKK30KKworcmVpc2VyNF9rZXkgKmpub2RlX2J1aWxkX2tleShjb25zdCBq
bm9kZSAqIG5vZGUsIHJlaXNlcjRfa2V5ICoga2V5KQoreworCXN0cnVjdCBpbm9kZSAqaW5vZGU7
CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCWxvZmZfdCBvZmY7CisKKwlhc3NlcnQoIm5pa2l0YS0z
MDkyIiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDkzIiwga2V5ICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTMwOTQiLCBqbm9kZV9pc191bmZvcm1hdHRlZChub2RlKSk7CisK
KwlvZmYgPSAoKGxvZmZfdCkgaW5kZXhfam5vZGUobm9kZSkpIDw8IFBBR0VfU0hJRlQ7CisJaW5v
ZGUgPSBtYXBwaW5nX2pub2RlKG5vZGUpLT5ob3N0OworCisJaWYgKG5vZGUtPnBhcmVudF9pdGVt
X2lkICE9IDApCisJCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlfaWQobm9kZS0+cGFyZW50X2l0ZW1f
aWQpOworCWVsc2UKKwkJaXBsdWcgPSBOVUxMOworCisJaWYgKGlwbHVnICE9IE5VTEwgJiYgaXBs
dWctPmYua2V5X2J5X29mZnNldCkKKwkJaXBsdWctPmYua2V5X2J5X29mZnNldChpbm9kZSwgb2Zm
LCBrZXkpOworCWVsc2UgeworCQlmaWxlX3BsdWdpbiAqZnBsdWc7CisKKwkJZnBsdWcgPSBpbm9k
ZV9maWxlX3BsdWdpbihpbm9kZSk7CisJCWFzc2VydCgiemFtLTEwMDciLCBmcGx1ZyAhPSBOVUxM
KTsKKwkJYXNzZXJ0KCJ6YW0tMTAwOCIsIGZwbHVnLT5rZXlfYnlfaW5vZGUgIT0gTlVMTCk7CisK
KwkJZnBsdWctPmtleV9ieV9pbm9kZShpbm9kZSwgb2ZmLCBrZXkpOworCX0KKworCXJldHVybiBr
ZXk7Cit9CisKKy8qIC0+cGFyc2UoKSBtZXRob2QgZm9yIGZvcm1hdHRlZCBub2RlcyAqLworc3Rh
dGljIGludCBwYXJzZV96bm9kZShqbm9kZSAqIG5vZGUpCit7CisJcmV0dXJuIHpwYXJzZShKWk5P
REUobm9kZSkpOworfQorCisvKiAtPmRlbGV0ZSgpIG1ldGhvZCBmb3IgZm9ybWF0dGVkIG5vZGVz
ICovCitzdGF0aWMgdm9pZCBkZWxldGVfem5vZGUoam5vZGUgKiBub2RlLCByZWlzZXI0X3RyZWUg
KiB0cmVlKQoreworCXpub2RlICp6OworCisJYXNzZXJ0X3J3X3dyaXRlX2xvY2tlZCgmKHRyZWUt
PnRyZWVfbG9jaykpOworCWFzc2VydCgidnMtODk4IiwgSkZfSVNTRVQobm9kZSwgSk5PREVfSEVB
UkRfQkFOU0hFRSkpOworCisJeiA9IEpaTk9ERShub2RlKTsKKwlhc3NlcnQoInZzLTg5OSIsIHot
PmNfY291bnQgPT0gMCk7CisKKwkvKiBkZWxldGUgem5vZGUgZnJvbSBzaWJsaW5nIGxpc3QuICov
CisJc2libGluZ19saXN0X3JlbW92ZSh6KTsKKworCXpub2RlX3JlbW92ZSh6LCB0cmVlKTsKK30K
KworLyogLT5yZW1vdmUoKSBtZXRob2QgZm9yIGZvcm1hdHRlZCBub2RlcyAqLworc3RhdGljIGlu
dCByZW1vdmVfem5vZGUoam5vZGUgKiBub2RlLCByZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCXpu
b2RlICp6OworCisJYXNzZXJ0X3J3X3dyaXRlX2xvY2tlZCgmKHRyZWUtPnRyZWVfbG9jaykpOwor
CXogPSBKWk5PREUobm9kZSk7CisKKwlpZiAoei0+Y19jb3VudCA9PSAwKSB7CisJCS8qIGRldGFj
aCB6bm9kZSBmcm9tIHNpYmxpbmcgbGlzdC4gKi8KKwkJc2libGluZ19saXN0X2Ryb3Aoeik7CisJ
CS8qIHRoaXMgaXMgY2FsbGVkIHdpdGggdHJlZSBzcGluLWxvY2sgaGVsZCwgc28gY2FsbAorCQkg
ICB6bm9kZV9yZW1vdmUoKSBkaXJlY3RseSAocmF0aGVyIHRoYW4gem5vZGVfbG9ja19yZW1vdmUo
KSkuICovCisJCXpub2RlX3JlbW92ZSh6LCB0cmVlKTsKKwkJcmV0dXJuIDA7CisJfQorCXJldHVy
biBSRVRFUlIoLUVCVVNZKTsKK30KKworLyogLT5pbml0KCkgbWV0aG9kIGZvciBmb3JtYXR0ZWQg
bm9kZXMgKi8KK2ludCBpbml0X3pub2RlKGpub2RlICogbm9kZSkKK3sKKwl6bm9kZSAqejsKKwor
CXogPSBKWk5PREUobm9kZSk7CisJLyogY2FsbCBub2RlIHBsdWdpbiB0byBkbyBhY3R1YWwgaW5p
dGlhbGl6YXRpb24gKi8KKwl6LT5ucl9pdGVtcyA9IDA7CisJcmV0dXJuIHotPm5wbHVnLT5pbml0
KHopOworfQorCisvKiAtPmNsb25lKCkgbWV0aG9kIGZvciBmb3JtYXR0ZWQgbm9kZXMgKi8KK3N0
YXRpYyBqbm9kZSAqY2xvbmVfZm9ybWF0dGVkKGpub2RlICogbm9kZSkKK3sKKwl6bm9kZSAqY2xv
bmU7CisKKwlhc3NlcnQoInZzLTE0MzAiLCBqbm9kZV9pc196bm9kZShub2RlKSk7CisJY2xvbmUg
PSB6YWxsb2MocmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChjbG9uZSA9PSBOVUxM
KQorCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkpOworCXppbml0KGNsb25lLCBOVUxM
LCBjdXJyZW50X3RyZWUpOworCWpub2RlX3NldF9ibG9jayhaSk5PREUoY2xvbmUpLCBqbm9kZV9n
ZXRfYmxvY2sobm9kZSkpOworCS8qIFpKTk9ERShjbG9uZSktPmtleS56IGlzIG5vdCBpbml0aWFs
aXplZCAqLworCWNsb25lLT5sZXZlbCA9IEpaTk9ERShub2RlKS0+bGV2ZWw7CisKKwlyZXR1cm4g
WkpOT0RFKGNsb25lKTsKK30KKworLyoganBsdWctPmNsb25lIGZvciB1bmZvcm1hdHRlZCBub2Rl
cyAqLworc3RhdGljIGpub2RlICpjbG9uZV91bmZvcm1hdHRlZChqbm9kZSAqIG5vZGUpCit7CisJ
am5vZGUgKmNsb25lOworCisJYXNzZXJ0KCJ2cy0xNDMxIiwgam5vZGVfaXNfdW5mb3JtYXR0ZWQo
bm9kZSkpOworCWNsb25lID0gamFsbG9jKCk7CisJaWYgKGNsb25lID09IE5VTEwpCisJCXJldHVy
biBFUlJfUFRSKFJFVEVSUigtRU5PTUVNKSk7CisKKwlqbm9kZV9pbml0KGNsb25lLCBjdXJyZW50
X3RyZWUsIEpOT0RFX1VORk9STUFUVEVEX0JMT0NLKTsKKwlqbm9kZV9zZXRfYmxvY2soY2xvbmUs
IGpub2RlX2dldF9ibG9jayhub2RlKSk7CisKKwlyZXR1cm4gY2xvbmU7CisKK30KKworLyoKKyAq
IFNldHVwIGpub2RlIHBsdWdpbiBtZXRob2RzIGZvciB2YXJpb3VzIGpub2RlIHR5cGVzLgorICov
Citqbm9kZV9wbHVnaW4gam5vZGVfcGx1Z2luc1tMQVNUX0pOT0RFX1RZUEVdID0geworCVtKTk9E
RV9VTkZPUk1BVFRFRF9CTE9DS10gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0
X0pOT0RFX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gSk5PREVfVU5GT1JNQVRURURfQkxPQ0ssCisJ
CQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAidW5mb3JtYXR0ZWQiLAorCQkJLmRlc2MgPSAi
dW5mb3JtYXR0ZWQgbm9kZSIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQku
aW5pdCA9IGluaXRfbm9pbml0LAorCQkucGFyc2UgPSBwYXJzZV9ub3BhcnNlLAorCQkubWFwcGlu
ZyA9IG1hcHBpbmdfam5vZGUsCisJCS5pbmRleCA9IGluZGV4X2pub2RlLAorCQkuY2xvbmUgPSBj
bG9uZV91bmZvcm1hdHRlZAorCX0sCisJW0pOT0RFX0ZPUk1BVFRFRF9CTE9DS10gPSB7CisJCS5o
ID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0pOT0RFX1BMVUdJTl9UWVBFLAorCQkJLmlkID0g
Sk5PREVfRk9STUFUVEVEX0JMT0NLLAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0gImZv
cm1hdHRlZCIsCisJCQkuZGVzYyA9ICJmb3JtYXR0ZWQgdHJlZSBub2RlIiwKKwkJCS5saW5rYWdl
ID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5pbml0ID0gaW5pdF96bm9kZSwKKwkJLnBhcnNlID0g
cGFyc2Vfem5vZGUsCisJCS5tYXBwaW5nID0gbWFwcGluZ196bm9kZSwKKwkJLmluZGV4ID0gaW5k
ZXhfem5vZGUsCisJCS5jbG9uZSA9IGNsb25lX2Zvcm1hdHRlZAorCX0sCisJW0pOT0RFX0JJVE1B
UF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0pOT0RFX1BMVUdJTl9UWVBF
LAorCQkJLmlkID0gSk5PREVfQklUTUFQLAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0g
ImJpdG1hcCIsCisJCQkuZGVzYyA9ICJiaXRtYXAgbm9kZSIsCisJCQkubGlua2FnZSA9IHtOVUxM
LCBOVUxMfQorCQl9LAorCQkuaW5pdCA9IGluaXRfbm9pbml0LAorCQkucGFyc2UgPSBwYXJzZV9u
b3BhcnNlLAorCQkubWFwcGluZyA9IG1hcHBpbmdfYml0bWFwLAorCQkuaW5kZXggPSBpbmRleF9p
c19hZGRyZXNzLAorCQkuY2xvbmUgPSBOVUxMCisJfSwKKwlbSk5PREVfSU9fSEVBRF0gPSB7CisJ
CS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0pOT0RFX1BMVUdJTl9UWVBFLAorCQkJLmlk
ID0gSk5PREVfSU9fSEVBRCwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJpbyBoZWFk
IiwKKwkJCS5kZXNjID0gImlvIGhlYWQiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJ
fSwKKwkJLmluaXQgPSBpbml0X25vaW5pdCwKKwkJLnBhcnNlID0gcGFyc2Vfbm9wYXJzZSwKKwkJ
Lm1hcHBpbmcgPSBtYXBwaW5nX2JpdG1hcCwKKwkJLmluZGV4ID0gaW5kZXhfaXNfYWRkcmVzcywK
KwkJLmNsb25lID0gTlVMTAorCX0sCisJW0pOT0RFX0lOT0RFXSA9IHsKKwkJLmggPSB7CisJCQku
dHlwZV9pZCA9IFJFSVNFUjRfSk5PREVfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBKTk9ERV9JTk9E
RSwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJpbm9kZSIsCisJCQkuZGVzYyA9ICJp
bm9kZSdzIGJ1aWx0aW4gam5vZGUiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwK
KwkJLmluaXQgPSBOVUxMLAorCQkucGFyc2UgPSBOVUxMLAorCQkubWFwcGluZyA9IE5VTEwsCisJ
CS5pbmRleCA9IE5VTEwsCisJCS5jbG9uZSA9IE5VTEwKKwl9Cit9OworCisvKgorICogam5vZGUg
ZGVzdHJ1Y3Rpb24uCisgKgorICogVGhyZWFkIG1heSB1c2UgYSBqbm9kZSBhZnRlciBpdCBhY3F1
aXJlZCBhIHJlZmVyZW5jZSB0byBpdC4gUmVmZXJlbmNlcyBhcmUKKyAqIGNvdW50ZWQgaW4gLT54
X2NvdW50IGZpZWxkLiBSZWZlcmVuY2UgcHJvdGVjdHMgam5vZGUgZnJvbSBiZWluZworICogcmVj
eWNsZWQuIFRoaXMgaXMgZGlmZmVyZW50IGZyb20gcHJvdGVjdGluZyBqbm9kZSBkYXRhICh0aGF0
IGFyZSBzdG9yZWQgaW4KKyAqIGpub2RlIHBhZ2UpIGZyb20gYmVpbmcgZXZpY3RlZCBmcm9tIG1l
bW9yeS4gRGF0YSBhcmUgcHJvdGVjdGVkIGJ5IGpsb2FkKCkKKyAqIGFuZCByZWxlYXNlZCBieSBq
cmVsc2UoKS4KKyAqCisgKiBJZiB0aHJlYWQgYWxyZWFkeSBwb3NzZXNzZXMgYSByZWZlcmVuY2Ug
dG8gdGhlIGpub2RlIGl0IGNhbiBhY3F1aXJlIGFub3RoZXIKKyAqIG9uZSB0aHJvdWdoIGpyZWYo
KS4gSW5pdGlhbCByZWZlcmVuY2UgaXMgb2J0YWluZWQgKHVzdWFsbHkpIGJ5IGxvY2F0aW5nCisg
KiBqbm9kZSBpbiBzb21lIGluZGV4aW5nIHN0cnVjdHVyZSB0aGF0IGRlcGVuZHMgb24gam5vZGUg
dHlwZTogZm9ybWF0dGVkCisgKiBub2RlcyBhcmUga2VwdCBpbiBnbG9iYWwgaGFzaCB0YWJsZSwg
d2hlcmUgdGhleSBhcmUgaW5kZXhlZCBieSBibG9jaworICogbnVtYmVyLCBhbmQgYWxzbyBpbiB0
aGUgY2JrIGNhY2hlLiBVbmZvcm1hdHRlZCBqbm9kZXMgYXJlIGFsc28ga2VwdCBpbiBoYXNoCisg
KiB0YWJsZSwgd2hpY2ggaXMgaW5kZXhlZCBieSBvaWQgYW5kIG9mZnNldCB3aXRoaW4gZmlsZSwg
YW5kIGluIHBlci1pbm9kZQorICogcmFkaXggdHJlZS4KKyAqCisgKiBSZWZlcmVuY2UgdG8gam5v
ZGUgaXMgcmVsZWFzZWQgYnkganB1dCgpLiBJZiBsYXN0IHJlZmVyZW5jZSBpcyByZWxlYXNlZCwK
KyAqIGpwdXRfZmluYWwoKSBpcyBjYWxsZWQuIFRoaXMgZnVuY3Rpb24gZGV0ZXJtaW5lcyB3aGV0
aGVyIGpub2RlIGhhcyB0byBiZQorICogZGVsZXRlZCAodGhpcyBoYXBwZW5zIHdoZW4gY29ycmVz
cG9uZGluZyBub2RlIGlzIHJlbW92ZWQgZnJvbSB0aGUgZmlsZQorICogc3lzdGVtLCBqbm9kZSBp
cyBtYXJrZWQgd2l0aCBKTk9ERV9IRUFSRF9CQU5TSEVFIGJpdCBpbiB0aGlzIGNhc2UpLCBvciBp
dAorICogc2hvdWxkIGJlIGp1c3QgInJlbW92ZWQiIChkZWxldGVkIGZyb20gbWVtb3J5KS4KKyAq
CisgKiBKbm9kZSBkZXN0cnVjdGlvbiBpcyBzaWduYWxseSBkZWxpY2F0ZSBkYW5jZSBiZWNhdXNl
IG9mIGxvY2tpbmcgYW5kIFJDVS4KKyAqLworCisvKgorICogUmV0dXJucyB0cnVlIGlmIGpub2Rl
IGNhbm5vdCBiZSByZW1vdmVkIHJpZ2h0IG5vdy4gVGhpcyBjaGVjayBpcyBjYWxsZWQKKyAqIHVu
ZGVyIHRyZWUgbG9jay4gSWYgaXQgcmV0dXJucyB0cnVlLCBqbm9kZSBpcyBpcnJldm9jYWJseSBj
b21taXR0ZWQgdG8gYmUKKyAqIGRlbGV0ZWQvcmVtb3ZlZC4KKyAqLworc3RhdGljIGlubGluZSBp
bnQgam5vZGVfaXNfYnVzeShjb25zdCBqbm9kZSAqIG5vZGUsIGpub2RlX3R5cGUganR5cGUpCit7
CisJLyogaWYgb3RoZXIgdGhyZWFkIG1hbmFnZWQgdG8gYWNxdWlyZSBhIHJlZmVyZW5jZSB0byB0
aGlzIGpub2RlLCBkb24ndAorCSAqIGZyZWUgaXQuICovCisJaWYgKGF0b21pY19yZWFkKCZub2Rl
LT54X2NvdW50KSA+IDApCisJCXJldHVybiAxOworCS8qIGFsc28sIGRvbid0IGZyZWUgem5vZGUg
dGhhdCBoYXMgY2hpbGRyZW4gaW4gbWVtb3J5ICovCisJaWYgKGp0eXBlID09IEpOT0RFX0ZPUk1B
VFRFRF9CTE9DSyAmJiBKWk5PREUobm9kZSktPmNfY291bnQgPiAwKQorCQlyZXR1cm4gMTsKKwly
ZXR1cm4gMDsKK30KKworLyoKKyAqIHRoaXMgaXMgY2FsbGVkIGFzIHBhcnQgb2YgcmVtb3Zpbmcg
am5vZGUuIEJhc2VkIG9uIGpub2RlIHR5cGUsIGNhbGwKKyAqIGNvcnJlc3BvbmRpbmcgZnVuY3Rp
b24gdGhhdCByZW1vdmVzIGpub2RlIGZyb20gaW5kaWNlcyBhbmQgcmV0dXJucyBpdCBiYWNrCisg
KiB0byB0aGUgYXBwcm9wcmlhdGUgc2xhYiAodGhyb3VnaCBSQ1UpLgorICovCitzdGF0aWMgaW5s
aW5lIHZvaWQKK2pub2RlX3JlbW92ZShqbm9kZSAqIG5vZGUsIGpub2RlX3R5cGUganR5cGUsIHJl
aXNlcjRfdHJlZSAqIHRyZWUpCit7CisJc3dpdGNoIChqdHlwZSkgeworCWNhc2UgSk5PREVfVU5G
T1JNQVRURURfQkxPQ0s6CisJCXJlbW92ZV9qbm9kZShub2RlLCB0cmVlKTsKKwkJYnJlYWs7CisJ
Y2FzZSBKTk9ERV9JT19IRUFEOgorCWNhc2UgSk5PREVfQklUTUFQOgorCQlicmVhazsKKwljYXNl
IEpOT0RFX0lOT0RFOgorCQlicmVhazsKKwljYXNlIEpOT0RFX0ZPUk1BVFRFRF9CTE9DSzoKKwkJ
cmVtb3ZlX3pub2RlKG5vZGUsIHRyZWUpOworCQlicmVhazsKKwlkZWZhdWx0OgorCQl3cm9uZ19y
ZXR1cm5fdmFsdWUoIm5pa2l0YS0zMTk2IiwgIldyb25nIGpub2RlIHR5cGUiKTsKKwl9Cit9CisK
Ky8qCisgKiB0aGlzIGlzIGNhbGxlZCBhcyBwYXJ0IG9mIGRlbGV0aW5nIGpub2RlLiBCYXNlZCBv
biBqbm9kZSB0eXBlLCBjYWxsCisgKiBjb3JyZXNwb25kaW5nIGZ1bmN0aW9uIHRoYXQgcmVtb3Zl
cyBqbm9kZSBmcm9tIGluZGljZXMgYW5kIHJldHVybnMgaXQgYmFjaworICogdG8gdGhlIGFwcHJv
cHJpYXRlIHNsYWIgKHRocm91Z2ggUkNVKS4KKyAqCisgKiBUaGlzIGRpZmZlcnMgZnJvbSBqbm9k
ZV9yZW1vdmUoKSBvbmx5IGZvciBmb3JtYXR0ZWQgbm9kZXMtLS1mb3IgdGhlbQorICogc2libGlu
ZyBsaXN0IGhhbmRsaW5nIGlzIGRpZmZlcmVudCBmb3IgcmVtb3ZhbCBhbmQgZGVsZXRpb24uCisg
Ki8KK3N0YXRpYyBpbmxpbmUgdm9pZAoram5vZGVfZGVsZXRlKGpub2RlICogbm9kZSwgam5vZGVf
dHlwZSBqdHlwZSwgcmVpc2VyNF90cmVlICogdHJlZSBVTlVTRURfQVJHKQoreworCXN3aXRjaCAo
anR5cGUpIHsKKwljYXNlIEpOT0RFX1VORk9STUFUVEVEX0JMT0NLOgorCQlyZW1vdmVfam5vZGUo
bm9kZSwgdHJlZSk7CisJCWJyZWFrOworCWNhc2UgSk5PREVfSU9fSEVBRDoKKwljYXNlIEpOT0RF
X0JJVE1BUDoKKwkJYnJlYWs7CisJY2FzZSBKTk9ERV9GT1JNQVRURURfQkxPQ0s6CisJCWRlbGV0
ZV96bm9kZShub2RlLCB0cmVlKTsKKwkJYnJlYWs7CisJY2FzZSBKTk9ERV9JTk9ERToKKwlkZWZh
dWx0OgorCQl3cm9uZ19yZXR1cm5fdmFsdWUoIm5pa2l0YS0zMTk1IiwgIldyb25nIGpub2RlIHR5
cGUiKTsKKwl9Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKgorICogcmVtb3ZlIGpub2RlIGZy
b20gdGhlIGRlYnVnZ2luZyBsaXN0IG9mIGFsbCBqbm9kZXMgaGFuZ2luZyBvZmYgc3VwZXItYmxv
Y2suCisgKi8KK3ZvaWQgam5vZGVfbGlzdF9yZW1vdmUoam5vZGUgKiBub2RlKQoreworCXJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwlzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0
ZShqbm9kZV9nZXRfdHJlZShub2RlKS0+c3VwZXIpOworCisJc3Bpbl9sb2NrX2lycSgmc2JpbmZv
LT5hbGxfZ3VhcmQpOworCWFzc2VydCgibmlraXRhLTI0MjIiLCAhbGlzdF9lbXB0eSgmbm9kZS0+
am5vZGVzKSk7CisJbGlzdF9kZWxfaW5pdCgmbm9kZS0+am5vZGVzKTsKKwlzcGluX3VubG9ja19p
cnEoJnNiaW5mby0+YWxsX2d1YXJkKTsKK30KKyNlbmRpZgorCisvKgorICogdGhpcyBpcyBjYWxs
ZWQgYnkganB1dF9maW5hbCgpIHRvIHJlbW92ZSBqbm9kZSB3aGVuIGxhc3QgcmVmZXJlbmNlIHRv
IGl0IGlzCisgKiByZWxlYXNlZC4KKyAqLworc3RhdGljIGludCBqbm9kZV90cnlfZHJvcChqbm9k
ZSAqIG5vZGUpCit7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X3RyZWUgKnRyZWU7CisJam5vZGVf
dHlwZSBqdHlwZTsKKworCWFzc2VydCgibmlraXRhLTI0OTEiLCBub2RlICE9IE5VTEwpOworCWFz
c2VydCgibmlraXRhLTI1ODMiLCBKRl9JU1NFVChub2RlLCBKTk9ERV9SSVApKTsKKworCXRyZWUg
PSBqbm9kZV9nZXRfdHJlZShub2RlKTsKKwlqdHlwZSA9IGpub2RlX2dldF90eXBlKG5vZGUpOwor
CisJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCXdyaXRlX2xvY2tfdHJlZSh0cmVlKTsKKwkvKgor
CSAqIGlmIGpub2RlIGhhcyBhIHBhZ2UtLS1sZWF2ZSBpdCBhbG9uZS4gTWVtb3J5IHByZXNzdXJl
IHdpbGwKKwkgKiBldmVudHVhbGx5IGtpbGwgcGFnZSBhbmQgam5vZGUuCisJICovCisJaWYgKGpu
b2RlX3BhZ2Uobm9kZSkgIT0gTlVMTCkgeworCQl3cml0ZV91bmxvY2tfdHJlZSh0cmVlKTsKKwkJ
c3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJCUpGX0NMUihub2RlLCBKTk9ERV9SSVApOworCQly
ZXR1cm4gUkVURVJSKC1FQlVTWSk7CisJfQorCisJLyogcmUtY2hlY2sgLT54X2NvdW50IHVuZGVy
IHRyZWUgbG9jay4gKi8KKwlyZXN1bHQgPSBqbm9kZV9pc19idXN5KG5vZGUsIGp0eXBlKTsKKwlp
ZiAocmVzdWx0ID09IDApIHsKKwkJYXNzZXJ0KCJuaWtpdGEtMjU4MiIsICFKRl9JU1NFVChub2Rl
LCBKTk9ERV9IRUFSRF9CQU5TSEVFKSk7CisJCWFzc2VydCgiam1hY2QtNTExL2IiLCBhdG9taWNf
cmVhZCgmbm9kZS0+ZF9jb3VudCkgPT0gMCk7CisKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7
CisJCS8qIG5vIHBhZ2UgYW5kIG5vIHJlZmVyZW5jZXMtLS1kZXNwYXRjaCBoaW0uICovCisJCWpu
b2RlX3JlbW92ZShub2RlLCBqdHlwZSwgdHJlZSk7CisJCXdyaXRlX3VubG9ja190cmVlKHRyZWUp
OworCQlqbm9kZV9mcmVlKG5vZGUsIGp0eXBlKTsKKwl9IGVsc2UgeworCQkvKiBidXN5IGNoZWNr
IGZhaWxlZDogcmVmZXJlbmNlIHdhcyBhY3F1aXJlZCBieSBjb25jdXJyZW50CisJCSAqIHRocmVh
ZC4gKi8KKwkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5v
ZGUpOworCQlKRl9DTFIobm9kZSwgSk5PREVfUklQKTsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30K
KworLyogamRlbGV0ZSgpIC0tIERlbGV0ZSBqbm9kZSBmcm9tIHRoZSB0cmVlIGFuZCBmaWxlIHN5
c3RlbSAqLworc3RhdGljIGludCBqZGVsZXRlKGpub2RlICogbm9kZS8qIGpub2RlIHRvIGZpbmlz
aCB3aXRoICovKQoreworCXN0cnVjdCBwYWdlICpwYWdlOworCWludCByZXN1bHQ7CisJcmVpc2Vy
NF90cmVlICp0cmVlOworCWpub2RlX3R5cGUganR5cGU7CisKKwlhc3NlcnQoIm5pa2l0YS00Njci
LCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI1MzEiLCBKRl9JU1NFVChub2RlLCBK
Tk9ERV9SSVApKTsKKworCWp0eXBlID0gam5vZGVfZ2V0X3R5cGUobm9kZSk7CisKKwlwYWdlID0g
am5vZGVfbG9ja19wYWdlKG5vZGUpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJk
KSk7CisKKwl0cmVlID0gam5vZGVfZ2V0X3RyZWUobm9kZSk7CisKKwl3cml0ZV9sb2NrX3RyZWUo
dHJlZSk7CisJLyogcmUtY2hlY2sgLT54X2NvdW50IHVuZGVyIHRyZWUgbG9jay4gKi8KKwlyZXN1
bHQgPSBqbm9kZV9pc19idXN5KG5vZGUsIGp0eXBlKTsKKwlpZiAobGlrZWx5KCFyZXN1bHQpKSB7
CisJCWFzc2VydCgibmlraXRhLTIxMjMiLCBKRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9CQU5T
SEVFKSk7CisJCWFzc2VydCgiam1hY2QtNTExIiwgYXRvbWljX3JlYWQoJm5vZGUtPmRfY291bnQp
ID09IDApOworCisJCS8qIGRldGFjaCBwYWdlICovCisJCWlmIChwYWdlICE9IE5VTEwpIHsKKwkJ
CS8qCisJCQkgKiBGSVhNRSB0aGlzIGlzIHJhY3kgYWdhaW5zdCBqbm9kZV9leHRlbnRfd3JpdGUo
KS4KKwkJCSAqLworCQkJcGFnZV9jbGVhcl9qbm9kZShwYWdlLCBub2RlKTsKKwkJfQorCQlzcGlu
X3VubG9ja19qbm9kZShub2RlKTsKKwkJLyogZ29vZGJ5ZSAqLworCQlqbm9kZV9kZWxldGUobm9k
ZSwganR5cGUsIHRyZWUpOworCQl3cml0ZV91bmxvY2tfdHJlZSh0cmVlKTsKKwkJam5vZGVfZnJl
ZShub2RlLCBqdHlwZSk7CisJCS8qIEBub2RlIGlzIG5vIGxvbmdlciB2YWxpZCBwb2ludGVyICov
CisJCWlmIChwYWdlICE9IE5VTEwpCisJCQlyZWlzZXI0X2Ryb3BfcGFnZShwYWdlKTsKKwl9IGVs
c2UgeworCQkvKiBidXN5IGNoZWNrIGZhaWxlZDogcmVmZXJlbmNlIHdhcyBhY3F1aXJlZCBieSBj
b25jdXJyZW50CisJCSAqIHRocmVhZC4gKi8KKwkJSkZfQ0xSKG5vZGUsIEpOT0RFX1JJUCk7CisJ
CXdyaXRlX3VubG9ja190cmVlKHRyZWUpOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJ
aWYgKHBhZ2UgIT0gTlVMTCkKKwkJCXVubG9ja19wYWdlKHBhZ2UpOworCX0KKwlyZXR1cm4gcmVz
dWx0OworfQorCisvKiBkcm9wIGpub2RlIG9uIHRoZSBmbG9vci4KKworICAgUmV0dXJuIHZhbHVl
OgorCisgICAgLUVCVVNZOiAgZmFpbGVkIHRvIGRyb3Agam5vZGUsIGJlY2F1c2UgdGhlcmUgYXJl
IHN0aWxsIHJlZmVyZW5jZXMgdG8gaXQKKworICAgIDA6ICAgICAgIHN1Y2Nlc3NmdWxseSBkcm9w
cGVkIGpub2RlCisKKyovCitzdGF0aWMgaW50IGpkcm9wX2luX3RyZWUoam5vZGUgKiBub2RlLCBy
ZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCXN0cnVjdCBwYWdlICpwYWdlOworCWpub2RlX3R5cGUg
anR5cGU7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiemFtLTYwMiIsIG5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0X3J3X25vdF9yZWFkX2xvY2tlZCgmKHRyZWUtPnRyZWVfbG9jaykpOworCWFzc2Vy
dF9yd19ub3Rfd3JpdGVfbG9ja2VkKCYodHJlZS0+dHJlZV9sb2NrKSk7CisJYXNzZXJ0KCJuaWtp
dGEtMjQwMyIsICFKRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSk7CisKKwlqdHlw
ZSA9IGpub2RlX2dldF90eXBlKG5vZGUpOworCisJcGFnZSA9IGpub2RlX2xvY2tfcGFnZShub2Rl
KTsKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihub2RlLT5ndWFyZCkpOworCisJd3JpdGVfbG9ja190
cmVlKHRyZWUpOworCisJLyogcmUtY2hlY2sgLT54X2NvdW50IHVuZGVyIHRyZWUgbG9jay4gKi8K
KwlyZXN1bHQgPSBqbm9kZV9pc19idXN5KG5vZGUsIGp0eXBlKTsKKwlpZiAoIXJlc3VsdCkgewor
CQlhc3NlcnQoIm5pa2l0YS0yNDg4IiwgcGFnZSA9PSBqbm9kZV9wYWdlKG5vZGUpKTsKKwkJYXNz
ZXJ0KCJuaWtpdGEtMjUzMyIsIGF0b21pY19yZWFkKCZub2RlLT5kX2NvdW50KSA9PSAwKTsKKwkJ
aWYgKHBhZ2UgIT0gTlVMTCkgeworCQkJYXNzZXJ0KCJuaWtpdGEtMjEyNiIsICFQYWdlRGlydHko
cGFnZSkpOworCQkJYXNzZXJ0KCJuaWtpdGEtMjEyNyIsIFBhZ2VVcHRvZGF0ZShwYWdlKSk7CisJ
CQlhc3NlcnQoIm5pa2l0YS0yMTgxIiwgUGFnZUxvY2tlZChwYWdlKSk7CisJCQlwYWdlX2NsZWFy
X2pub2RlKHBhZ2UsIG5vZGUpOworCQl9CisJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCQlq
bm9kZV9yZW1vdmUobm9kZSwganR5cGUsIHRyZWUpOworCQl3cml0ZV91bmxvY2tfdHJlZSh0cmVl
KTsKKwkJam5vZGVfZnJlZShub2RlLCBqdHlwZSk7CisJCWlmIChwYWdlICE9IE5VTEwpCisJCQly
ZWlzZXI0X2Ryb3BfcGFnZShwYWdlKTsKKwl9IGVsc2UgeworCQkvKiBidXN5IGNoZWNrIGZhaWxl
ZDogcmVmZXJlbmNlIHdhcyBhY3F1aXJlZCBieSBjb25jdXJyZW50CisJCSAqIHRocmVhZC4gKi8K
KwkJSkZfQ0xSKG5vZGUsIEpOT0RFX1JJUCk7CisJCXdyaXRlX3VubG9ja190cmVlKHRyZWUpOwor
CQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJaWYgKHBhZ2UgIT0gTlVMTCkKKwkJCXVubG9j
a19wYWdlKHBhZ2UpOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBUaGlzIGZ1bmN0aW9u
IGZyZWVzIGpub2RlICJpZiBwb3NzaWJsZSIuIEluIHBhcnRpY3VsYXIsIFtkY3hdX2NvdW50IGhh
cyB0bworICAgYmUgMCAod2hlcmUgYXBwbGljYWJsZSkuICAqLwordm9pZCBqZHJvcChqbm9kZSAq
IG5vZGUpCit7CisJamRyb3BfaW5fdHJlZShub2RlLCBqbm9kZV9nZXRfdHJlZShub2RlKSk7Cit9
CisKKy8qIElPIGhlYWQgam5vZGUgaW1wbGVtZW50YXRpb247IFRoZSBpbyBoZWFkcyBhcmUgc2lt
cGxlIGotbm9kZXMgd2l0aCBsaW1pdGVkCisgICBmdW5jdGlvbmFsaXR5ICh0aGVzZSBqLW5vZGVz
IGFyZSBub3QgaW4gYW55IGhhc2ggdGFibGUpIGp1c3QgZm9yIHJlYWRpbmcKKyAgIGZyb20gYW5k
IHdyaXRpbmcgdG8gZGlzay4gKi8KKworam5vZGUgKnJlaXNlcjRfYWxsb2NfaW9faGVhZChjb25z
dCByZWlzZXI0X2Jsb2NrX25yICogYmxvY2spCit7CisJam5vZGUgKmphbCA9IGphbGxvYygpOwor
CisJaWYgKGphbCAhPSBOVUxMKSB7CisJCWpub2RlX2luaXQoamFsLCBjdXJyZW50X3RyZWUsIEpO
T0RFX0lPX0hFQUQpOworCQlqbm9kZV9zZXRfYmxvY2soamFsLCBibG9jayk7CisJfQorCisJanJl
ZihqYWwpOworCisJcmV0dXJuIGphbDsKK30KKwordm9pZCByZWlzZXI0X2Ryb3BfaW9faGVhZChq
bm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJ6YW0tNjQ4Iiwgam5vZGVfZ2V0X3R5cGUobm9kZSkg
PT0gSk5PREVfSU9fSEVBRCk7CisKKwlqcHV0KG5vZGUpOworCWpkcm9wKG5vZGUpOworfQorCisv
KiBwcm90ZWN0IGtlZXAgam5vZGUgZGF0YSBmcm9tIHJlaXNlcjRfcmVsZWFzZXBhZ2UoKSAgKi8K
K3ZvaWQgcGluX2pub2RlX2RhdGEoam5vZGUgKiBub2RlKQoreworCWFzc2VydCgiemFtLTY3MSIs
IGpub2RlX3BhZ2Uobm9kZSkgIT0gTlVMTCk7CisJZ2V0X3BhZ2Uoam5vZGVfcGFnZShub2RlKSk7
Cit9CisKKy8qIG1ha2Ugam5vZGUgZGF0YSBmcmVlLWFibGUgYWdhaW4gKi8KK3ZvaWQgdW5waW5f
am5vZGVfZGF0YShqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJ6YW0tNjcyIiwgam5vZGVfcGFn
ZShub2RlKSAhPSBOVUxMKTsKKwlwdXRfcGFnZShqbm9kZV9wYWdlKG5vZGUpKTsKK30KKworc3Ry
dWN0IGFkZHJlc3Nfc3BhY2UgKmpub2RlX2dldF9tYXBwaW5nKGNvbnN0IGpub2RlICogbm9kZSkK
K3sKKwlyZXR1cm4gam5vZGVfb3BzKG5vZGUpLT5tYXBwaW5nKG5vZGUpOworfQorCisjaWYgUkVJ
U0VSNF9ERUJVRworLyogZGVidWdnaW5nIGFpZDogam5vZGUgaW52YXJpYW50ICovCitpbnQgam5v
ZGVfaW52YXJpYW50X2YoY29uc3Qgam5vZGUgKiBub2RlLCBjaGFyIGNvbnN0ICoqbXNnKQorewor
I2RlZmluZSBfZXJnbyhhbnQsIGNvbikgCQkJCQkJXAorCSgoKm1zZykgPSAieyIgI2FudCAifSBl
cmdvIHsiICNjb24gIn0iLCBlcmdvKChhbnQpLCAoY29uKSkpCisjZGVmaW5lIF9jaGVjayhleHAp
ICgoKm1zZykgPSAjZXhwLCAoZXhwKSkKKworCXJldHVybiBfY2hlY2sobm9kZSAhPSBOVUxMKSAm
JgorCSAgICAvKiBbam5vZGUtcXVldWVkXSAqLworCSAgICAvKiBvbmx5IHJlbG9jYXRlZCBub2Rl
IGNhbiBiZSBxdWV1ZWQsIGV4Y2VwdCB0aGF0IHdoZW4gem5vZGUKKwkgICAgICogaXMgYmVpbmcg
ZGVsZXRlZCwgaXRzIEpOT0RFX1JFTE9DIGJpdCBpcyBjbGVhcmVkICovCisJICAgIF9lcmdvKEpG
X0lTU0VUKG5vZGUsIEpOT0RFX0ZMVVNIX1FVRVVFRCksCisJCSAgSkZfSVNTRVQobm9kZSwgSk5P
REVfUkVMT0MpIHx8CisJCSAgSkZfSVNTRVQobm9kZSwgSk5PREVfSEVBUkRfQkFOU0hFRSkpICYm
CisJICAgIF9jaGVjayhub2RlLT5qbm9kZXMucHJldiAhPSBOVUxMKSAmJgorCSAgICBfY2hlY2so
bm9kZS0+am5vZGVzLm5leHQgIT0gTlVMTCkgJiYKKwkgICAgLyogW2pub2RlLWRpcnR5XSBpbnZh
cmlhbnQgKi8KKwkgICAgLyogZGlydHkgaW5vZGUgaXMgcGFydCBvZiBhdG9tICovCisJICAgIF9l
cmdvKEpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSwgbm9kZS0+YXRvbSAhPSBOVUxMKSAmJgor
CSAgICAvKiBbam5vZGUtb2lkXSBpbnZhcmlhbnQgKi8KKwkgICAgLyogZm9yIHVuZm9ybWF0dGVk
IG5vZGUgLT5vYmplY3RpZCBhbmQgLT5tYXBwaW5nIGZpZWxkcyBhcmUKKwkgICAgICogY29uc2lz
dGVudCAqLworCSAgICBfZXJnbyhqbm9kZV9pc191bmZvcm1hdHRlZChub2RlKSAmJiBub2RlLT5r
ZXkuai5tYXBwaW5nICE9IE5VTEwsCisJCSAgbm9kZS0+a2V5Lmoub2JqZWN0aWQgPT0KKwkJICBn
ZXRfaW5vZGVfb2lkKG5vZGUtPmtleS5qLm1hcHBpbmctPmhvc3QpKSAmJgorCSAgICAvKiBbam5v
ZGUtYXRvbS12YWxpZF0gaW52YXJpYW50ICovCisJICAgIC8qIG5vZGUgYXRvbSBoYXMgdmFsaWQg
c3RhdGUgKi8KKwkgICAgX2VyZ28obm9kZS0+YXRvbSAhPSBOVUxMLCBub2RlLT5hdG9tLT5zdGFn
ZSAhPSBBU1RBR0VfSU5WQUxJRCkgJiYKKwkgICAgLyogW2pub2RlLXBhZ2UtYmluZGluZ10gaW52
YXJpYW50ICovCisJICAgIC8qIGlmIG5vZGUgcG9pbnRzIHRvIHBhZ2UsIGl0IHBvaW50cyBiYWNr
IHRvIG5vZGUgKi8KKwkgICAgX2VyZ28obm9kZS0+cGcgIT0gTlVMTCwganByaXZhdGUobm9kZS0+
cGcpID09IG5vZGUpICYmCisJICAgIC8qIFtqbm9kZS1yZWZzXSBpbnZhcmlhbnQgKi8KKwkgICAg
Lyogb25seSByZWZlcmVuY2VkIGpub2RlIGNhbiBiZSBsb2FkZWQgKi8KKwkgICAgX2NoZWNrKGF0
b21pY19yZWFkKCZub2RlLT54X2NvdW50KSA+PSBhdG9taWNfcmVhZCgmbm9kZS0+ZF9jb3VudCkp
OworCit9CisKK3N0YXRpYyBjb25zdCBjaGFyICpqbm9kZV90eXBlX25hbWUoam5vZGVfdHlwZSB0
eXBlKQoreworCXN3aXRjaCAodHlwZSkgeworCWNhc2UgSk5PREVfVU5GT1JNQVRURURfQkxPQ0s6
CisJCXJldHVybiAidW5mb3JtYXR0ZWQiOworCWNhc2UgSk5PREVfRk9STUFUVEVEX0JMT0NLOgor
CQlyZXR1cm4gImZvcm1hdHRlZCI7CisJY2FzZSBKTk9ERV9CSVRNQVA6CisJCXJldHVybiAiYml0
bWFwIjsKKwljYXNlIEpOT0RFX0lPX0hFQUQ6CisJCXJldHVybiAiaW8gaGVhZCI7CisJY2FzZSBK
Tk9ERV9JTk9ERToKKwkJcmV0dXJuICJpbm9kZSI7CisJY2FzZSBMQVNUX0pOT0RFX1RZUEU6CisJ
CXJldHVybiAibGFzdCI7CisJZGVmYXVsdDp7CisJCQlzdGF0aWMgY2hhciB1bmtub3duWzMwXTsK
KworCQkJc3ByaW50Zih1bmtub3duLCAidW5rbm93biAlaSIsIHR5cGUpOworCQkJcmV0dXJuIHVu
a25vd247CisJCX0KKwl9Cit9CisKKyNkZWZpbmUgam5vZGVfc3RhdGVfbmFtZShub2RlLCBmbGFn
KQkJCVwKKwkoSkZfSVNTRVQoKG5vZGUpLCAoZmxhZykpID8gKCgjZmxhZyAifCIpKzYpIDogIiIp
CisKKy8qIGRlYnVnZ2luZyBhaWQ6IG91dHB1dCBodW1hbiByZWFkYWJsZSBpbmZvcm1hdGlvbiBh
Ym91dCBAbm9kZSAqLworc3RhdGljIHZvaWQgaW5mb19qbm9kZShjb25zdCBjaGFyICpwcmVmaXgg
LyogcHJlZml4IHRvIHByaW50ICovICwKKwkJICAgICAgIGNvbnN0IGpub2RlICogbm9kZS8qIG5v
ZGUgdG8gcHJpbnQgKi8pCit7CisJYXNzZXJ0KCJ1bWthLTA2OCIsIHByZWZpeCAhPSBOVUxMKTsK
KworCWlmIChub2RlID09IE5VTEwpIHsKKwkJcHJpbnRrKCIlczogbnVsbFxuIiwgcHJlZml4KTsK
KwkJcmV0dXJuOworCX0KKworCXByaW50aworCSAgICAoIiVzOiAlcDogc3RhdGU6ICVseDogWyVz
JXMlcyVzJXMlcyVzJXMlcyVzJXMlcyVzJXMlcyVzXSwgbGV2ZWw6ICVpLCIKKwkgICAgICIgYmxv
Y2s6ICVzLCBkX2NvdW50OiAlZCwgeF9jb3VudDogJWQsICIKKwkgICAgICJwZzogJXAsIGF0b206
ICVwLCBsb2NrOiAlaTolaSwgdHlwZTogJXMsICIsIHByZWZpeCwgbm9kZSwKKwkgICAgIG5vZGUt
PnN0YXRlLAorCSAgICAgam5vZGVfc3RhdGVfbmFtZShub2RlLCBKTk9ERV9QQVJTRUQpLAorCSAg
ICAgam5vZGVfc3RhdGVfbmFtZShub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSwKKwkgICAgIGpu
b2RlX3N0YXRlX25hbWUobm9kZSwgSk5PREVfTEVGVF9DT05ORUNURUQpLAorCSAgICAgam5vZGVf
c3RhdGVfbmFtZShub2RlLCBKTk9ERV9SSUdIVF9DT05ORUNURUQpLAorCSAgICAgam5vZGVfc3Rh
dGVfbmFtZShub2RlLCBKTk9ERV9PUlBIQU4pLAorCSAgICAgam5vZGVfc3RhdGVfbmFtZShub2Rl
LCBKTk9ERV9DUkVBVEVEKSwKKwkgICAgIGpub2RlX3N0YXRlX25hbWUobm9kZSwgSk5PREVfUkVM
T0MpLAorCSAgICAgam5vZGVfc3RhdGVfbmFtZShub2RlLCBKTk9ERV9PVlJXUiksCisJICAgICBq
bm9kZV9zdGF0ZV9uYW1lKG5vZGUsIEpOT0RFX0RJUlRZKSwKKwkgICAgIGpub2RlX3N0YXRlX25h
bWUobm9kZSwgSk5PREVfSVNfRFlJTkcpLAorCSAgICAgam5vZGVfc3RhdGVfbmFtZShub2RlLCBK
Tk9ERV9SSVApLAorCSAgICAgam5vZGVfc3RhdGVfbmFtZShub2RlLCBKTk9ERV9NSVNTRURfSU5f
Q0FQVFVSRSksCisJICAgICBqbm9kZV9zdGF0ZV9uYW1lKG5vZGUsIEpOT0RFX1dSSVRFQkFDSyks
CisJICAgICBqbm9kZV9zdGF0ZV9uYW1lKG5vZGUsIEpOT0RFX0RLU0VUKSwKKwkgICAgIGpub2Rl
X3N0YXRlX25hbWUobm9kZSwgSk5PREVfUkVQQUNLKSwKKwkgICAgIGpub2RlX3N0YXRlX25hbWUo
bm9kZSwgSk5PREVfQ0xVU1RFUl9QQUdFKSwKKwkgICAgIGpub2RlX2dldF9sZXZlbChub2RlKSwg
c3ByaW50X2FkZHJlc3Moam5vZGVfZ2V0X2Jsb2NrKG5vZGUpKSwKKwkgICAgIGF0b21pY19yZWFk
KCZub2RlLT5kX2NvdW50KSwgYXRvbWljX3JlYWQoJm5vZGUtPnhfY291bnQpLAorCSAgICAgam5v
ZGVfcGFnZShub2RlKSwgbm9kZS0+YXRvbSwgMCwgMCwKKwkgICAgIGpub2RlX3R5cGVfbmFtZShq
bm9kZV9nZXRfdHlwZShub2RlKSkpOworCWlmIChqbm9kZV9pc191bmZvcm1hdHRlZChub2RlKSkg
eworCQlwcmludGsoImlub2RlOiAlbGx1LCBpbmRleDogJWx1LCAiLAorCQkgICAgICAgbm9kZS0+
a2V5Lmoub2JqZWN0aWQsIG5vZGUtPmtleS5qLmluZGV4KTsKKwl9Cit9CisKKy8qIGRlYnVnZ2lu
ZyBhaWQ6IGNoZWNrIHpub2RlIGludmFyaWFudCBhbmQgcGFuaWMgaWYgaXQgZG9lc24ndCBob2xk
ICovCitzdGF0aWMgaW50IGpub2RlX2ludmFyaWFudChqbm9kZSAqIG5vZGUsIGludCB0bG9ja2Vk
LCBpbnQgamxvY2tlZCkKK3sKKwljaGFyIGNvbnN0ICpmYWlsZWRfbXNnOworCWludCByZXN1bHQ7
CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJdHJlZSA9IGpub2RlX2dldF90cmVlKG5vZGUpOwor
CisJYXNzZXJ0KCJ1bWthLTA2MzMxMiIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTA2
NDMyMSIsIHRyZWUgIT0gTlVMTCk7CisKKwlpZiAoIWpsb2NrZWQgJiYgIXRsb2NrZWQpCisJCXNw
aW5fbG9ja19qbm9kZSgoam5vZGUgKikgbm9kZSk7CisJaWYgKCF0bG9ja2VkKQorCQlyZWFkX2xv
Y2tfdHJlZShqbm9kZV9nZXRfdHJlZShub2RlKSk7CisJcmVzdWx0ID0gam5vZGVfaW52YXJpYW50
X2Yobm9kZSwgJmZhaWxlZF9tc2cpOworCWlmICghcmVzdWx0KSB7CisJCWluZm9fam5vZGUoImNv
cnJ1cHRlZCBub2RlIiwgbm9kZSk7CisJCXdhcm5pbmcoImptYWNkLTU1NSIsICJDb25kaXRpb24g
JXMgZmFpbGVkIiwgZmFpbGVkX21zZyk7CisJfQorCWlmICghdGxvY2tlZCkKKwkJcmVhZF91bmxv
Y2tfdHJlZShqbm9kZV9nZXRfdHJlZShub2RlKSk7CisJaWYgKCFqbG9ja2VkICYmICF0bG9ja2Vk
KQorCQlzcGluX3VubG9ja19qbm9kZSgoam5vZGUgKikgbm9kZSk7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworI2VuZGlmCQkJCS8qIFJFSVNFUjRfREVCVUcgKi8KKworLyogTWFrZSBMaW51cyBoYXBw
eS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisg
ICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgK
KyAgIGZpbGwtY29sdW1uOiA4MAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVu
Y2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9qbm9kZS5oIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2pub2RlLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvam5vZGUuaAkx
OTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvam5vZGUuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NDIyMjE4NSArMDEwMApAQCAtMCww
ICsxLDcwNCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFucyBS
ZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyog
RGVjbGFyYXRpb24gb2Ygam5vZGUuIFNlZSBqbm9kZS5jIGZvciBkZXRhaWxzLiAqLworCisjaWZu
ZGVmIF9fSk5PREVfSF9fCisjZGVmaW5lIF9fSk5PREVfSF9fCisKKyNpbmNsdWRlICJmb3J3YXJk
LmgiCisjaW5jbHVkZSAidHlwZV9zYWZlX2hhc2guaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNp
bmNsdWRlICJrZXkuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUgImRmb3JtYXQuaCIK
KyNpbmNsdWRlICJwYWdlX2NhY2hlLmgiCisjaW5jbHVkZSAiY29udGV4dC5oIgorCisjaW5jbHVk
ZSAicGx1Z2luL3BsdWdpbi5oIgorCisjaW5jbHVkZSA8bGludXgvZnMuaD4KKyNpbmNsdWRlIDxs
aW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8YXNtL2F0
b21pYy5oPgorI2luY2x1ZGUgPGxpbnV4L2JpdG9wcy5oPgorI2luY2x1ZGUgPGxpbnV4L2xpc3Qu
aD4KKyNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPgorCisvKiBkZWNsYXJlIGhhc2ggdGFibGUg
b2Ygam5vZGVzIChqbm9kZXMgcHJvcGVyLCB0aGF0IGlzLCB1bmZvcm1hdHRlZAorICAgbm9kZXMp
ICAqLworVFlQRV9TQUZFX0hBU0hfREVDTEFSRShqLCBqbm9kZSk7CisKKy8qIGRlY2xhcmUgaGFz
aCB0YWJsZSBvZiB6bm9kZXMgKi8KK1RZUEVfU0FGRV9IQVNIX0RFQ0xBUkUoeiwgem5vZGUpOwor
CitzdHJ1Y3Qgam5vZGVfa2V5IHsKKwlfX3U2NCBvYmplY3RpZDsKKwl1bnNpZ25lZCBsb25nIGlu
ZGV4OworCXN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nOworfTsKKworLyoKKyAgIEpub2Rl
IGlzIHRoZSAiYmFzZSBjbGFzcyIgb2Ygb3RoZXIgbm9kZXMgaW4gcmVpc2VyNC4gSXQgaXMgYWxz
byBoYXBwZW5zIHRvCisgICBiZSBleGFjdGx5IHRoZSBub2RlIHdlIHVzZSBmb3IgdW5mb3JtYXR0
ZWQgdHJlZSBub2Rlcy4KKworICAgSm5vZGUgcHJvdmlkZXMgZm9sbG93aW5nIGJhc2ljIGZ1bmN0
aW9uYWxpdHk6CisKKyAgIC4gcmVmZXJlbmNlIGNvdW50aW5nIGFuZCBpbmRleGluZy4KKworICAg
LiBpbnRlZ3JhdGlvbiB3aXRoIHBhZ2UgY2FjaGUuIEpub2RlIGhhcyAtPnBnIHJlZmVyZW5jZSB0
byB3aGljaCBwYWdlIGNhbgorICAgYmUgYXR0YWNoZWQuCisKKyAgIC4gaW50ZXJmYWNlIHRvIHRy
YW5zYWN0aW9uIG1hbmFnZXIuIEl0IGlzIGpub2RlIHRoYXQgaXMga2VwdCBpbiB0cmFuc2FjdGlv
bgorICAgbWFuYWdlciBsaXN0cywgYXR0YWNoZWQgdG8gYXRvbXMsIGV0Yy4gKE5PVEUtTklLSVRB
IG9uZSBtYXkgYXJndWUgdGhhdCB0aGlzCisgICBtZWFucywgdGhlcmUgc2hvdWxkIGJlIHNwZWNp
YWwgdHlwZSBvZiBqbm9kZSBmb3IgaW5vZGUuKQorCisgICBMb2NraW5nOgorCisgICBTcGluIGxv
Y2s6IHRoZSBmb2xsb3dpbmcgZmllbGRzIGFyZSBwcm90ZWN0ZWQgYnkgdGhlIHBlci1qbm9kZSBz
cGluIGxvY2s6CisKKyAgICAtPnN0YXRlCisgICAgLT5hdG9tCisgICAgLT5jYXB0dXJlX2xpbmsK
KworICAgRm9sbG93aW5nIGZpZWxkcyBhcmUgcHJvdGVjdGVkIGJ5IHRoZSBnbG9iYWwgdHJlZSBs
b2NrOgorCisgICAgLT5saW5rCisgICAgLT5rZXkueiAoY29udGVudCBvZiAtPmtleS56IGlzIG9u
bHkgY2hhbmdlZCBpbiB6bm9kZV9yZWhhc2goKSkKKyAgICAtPmtleS5qCisKKyAgIEF0b21pYyBj
b3VudGVycworCisgICAgLT54X2NvdW50CisgICAgLT5kX2NvdW50CisKKyAgICAtPnBnLCBhbmQg
LT5kYXRhIGFyZSBwcm90ZWN0ZWQgYnkgc3BpbiBsb2NrIGZvciB1bnVzZWQgam5vZGUgYW5kIGFy
ZQorICAgIGltbXV0YWJsZSBmb3IgdXNlZCBqbm9kZSAob25lIGZvciB3aGljaCBmcy9yZWlzZXI0
L3Zmc19vcHMuYzpyZWxlYXNhYmxlKCkKKyAgICBpcyBmYWxzZSkuCisKKyAgICAtPnRyZWUgaXMg
aW1tdXRhYmxlIGFmdGVyIGNyZWF0aW9uCisKKyAgIFVuY2xlYXIKKworICAgIC0+YmxvY2tucjog
c2hvdWxkIGJlIHVuZGVyIGpub2RlIHNwaW4tbG9jaywgYnV0IGN1cnJlbnQgaW50ZXJmYWNlIGlz
IGJhc2VkCisgICAgb24gcGFzc2luZyBvZiBibG9jayBhZGRyZXNzLgorCisgICBJZiB5b3UgZXZl
ciBuZWVkIHRvIHNwaW4gbG9jayB0d28gbm9kZXMgYXQgb25jZSwgZG8gdGhpcyBpbiAibmF0dXJh
bCIKKyAgIG1lbW9yeSBvcmRlcjogbG9jayB6bm9kZSB3aXRoIGxvd2VyIGFkZHJlc3MgZmlyc3Qu
IChTZWUgbG9ja190d29fbm9kZXMoKS4pCisKKyAgIEludmFyaWFudHMgaW52b2x2aW5nIHRoaXMg
ZGF0YS10eXBlOgorCisgICAgICBbam5vZGUtZGlydHldCisgICAgICBbam5vZGUtcmVmc10KKyAg
ICAgIFtqbm9kZS1vaWRdCisgICAgICBbam5vZGUtcXVldWVkXQorICAgICAgW2pub2RlLWF0b20t
dmFsaWRdCisgICAgICBbam5vZGUtcGFnZS1iaW5kaW5nXQorKi8KKworc3RydWN0IGpub2RlIHsK
KyNpZiBSRUlTRVI0X0RFQlVHCisjZGVmaW5lIEpNQUdJQyAweDUyNjU0OTczCS8qICJSZUlzIiAq
LworCWludCBtYWdpYzsKKyNlbmRpZgorCS8qIEZJUlNUIENBQ0hFIExJTkUgKDE2IGJ5dGVzKTog
ZGF0YSB1c2VkIGJ5IGpsb2FkICovCisKKwkvKiBqbm9kZSdzIHN0YXRlOiBiaXR3aXNlIGZsYWdz
IGZyb20gdGhlIHJlaXNlcjRfam5vZGVfc3RhdGUgZW51bS4gKi8KKwkvKiAgIDAgKi8gdW5zaWdu
ZWQgbG9uZyBzdGF0ZTsKKworCS8qIGxvY2ssIHByb3RlY3Rpbmcgam5vZGUncyBmaWVsZHMuICov
CisJLyogICA0ICovIHNwaW5sb2NrX3QgbG9hZDsKKworCS8qIGNvdW50ZXIgb2YgcmVmZXJlbmNl
cyB0byBqbm9kZSBpdHNlbGYuIEluY3JlYXNlZCBvbiBqcmVmKCkuCisJICAgRGVjcmVhc2VkIG9u
IGpwdXQoKS4KKwkgKi8KKwkvKiAgIDggKi8gYXRvbWljX3QgeF9jb3VudDsKKworCS8qIGNvdW50
ZXIgb2YgcmVmZXJlbmNlcyB0byBqbm9kZSdzIGRhdGEuIFBpbiBkYXRhIHBhZ2UocykgaW4KKwkg
ICBtZW1vcnkgd2hpbGUgdGhpcyBpcyBncmVhdGVyIHRoYW4gMC4gSW5jcmVhc2VkIG9uIGpsb2Fk
KCkuCisJICAgRGVjcmVhc2VkIG9uIGpyZWxzZSgpLgorCSAqLworCS8qICAgMTIgKi8gYXRvbWlj
X3QgZF9jb3VudDsKKworCS8qIFNFQ09ORCBDQUNIRSBMSU5FOiBkYXRhIHVzZWQgYnkgaGFzaCB0
YWJsZSBsb29rdXBzICovCisKKwkvKiAgIDE2ICovIHVuaW9uIHsKKwkJLyogem5vZGVzIGFyZSBo
YXNoZWQgYnkgYmxvY2sgbnVtYmVyICovCisJCXJlaXNlcjRfYmxvY2tfbnIgejsKKwkJLyogdW5m
b3JtYXR0ZWQgbm9kZXMgYXJlIGhhc2hlZCBieSBtYXBwaW5nIHBsdXMgb2Zmc2V0ICovCisJCXN0
cnVjdCBqbm9kZV9rZXkgajsKKwl9IGtleTsKKworCS8qIFRISVJEIENBQ0hFIExJTkUgKi8KKwor
CS8qICAgMzIgKi8gdW5pb24geworCQkvKiBwb2ludGVycyB0byBtYWludGFpbiBoYXNoLXRhYmxl
ICovCisJCXpfaGFzaF9saW5rIHo7CisJCWpfaGFzaF9saW5rIGo7CisJfSBsaW5rOworCisJLyog
cG9pbnRlciB0byBqbm9kZSBwYWdlLiAgKi8KKwkvKiAgIDM2ICovIHN0cnVjdCBwYWdlICpwZzsK
KwkvKiBwb2ludGVyIHRvIG5vZGUgaXRzZWxmLiBUaGlzIGlzIHBhZ2VfYWRkcmVzcyhub2RlLT5w
Zykgd2hlbiBwYWdlIGlzCisJICAgYXR0YWNoZWQgdG8gdGhlIGpub2RlCisJICovCisJLyogICA0
MCAqLyB2b2lkICpkYXRhOworCisJLyogICA0NCAqLyByZWlzZXI0X3RyZWUgKnRyZWU7CisKKwkv
KiBGT1VSVEggQ0FDSEUgTElORTogYXRvbSByZWxhdGVkIGZpZWxkcyAqLworCisJLyogICA0OCAq
LyBzcGlubG9ja190IGd1YXJkOworCisJLyogYXRvbSB0aGUgYmxvY2sgaXMgaW4sIGlmIGFueSAq
LworCS8qICAgNTIgKi8gdHhuX2F0b20gKmF0b207CisKKwkvKiBjYXB0dXJlIGxpc3QgKi8KKwkv
KiAgIDU2ICovIHN0cnVjdCBsaXN0X2hlYWQgY2FwdHVyZV9saW5rOworCisJLyogRklGVEggQ0FD
SEUgTElORSAqLworCisJLyogICA2NCAqLyBzdHJ1Y3QgcmN1X2hlYWQgcmN1OworCS8qIGNyb3Nz
ZXMgY2FjaGUgbGluZSAqLworCisJLyogU0lYVEggQ0FDSEUgTElORSAqLworCisJLyogdGhlIHJl
YWwgYmxvY2tuciAod2hlcmUgaW8gaXMgZ29pbmcgdG8vZnJvbSkgKi8KKwkvKiAgIDgwICovIHJl
aXNlcjRfYmxvY2tfbnIgYmxvY2tucjsKKwkvKiBQYXJlbnQgaXRlbSB0eXBlLCB1bmZvcm1hdHRl
ZCBhbmQgQ1JDIG5lZWQgaXQgZm9yCisJICogb2Zmc2V0ID0+IGtleSBjb252ZXJzaW9uLiAgKi8K
KwkvKiBOT1RFOiB0aGlzIHBhcmVudF9pdGVtX2lkIGxvb2tzIGxpa2Ugam5vZGUgdHlwZS4gKi8K
KwkvKiAgIDg4ICovIHJlaXNlcjRfcGx1Z2luX2lkIHBhcmVudF9pdGVtX2lkOworCS8qICAgOTIg
Ki8KKyNpZiBSRUlTRVI0X0RFQlVHCisJLyogbGlzdCBvZiBhbGwgam5vZGVzIGZvciBkZWJ1Z2dp
bmcgcHVycG9zZXMuICovCisJc3RydWN0IGxpc3RfaGVhZCBqbm9kZXM7CisJLyogaG93IG1hbnkg
dGltZXMgdGhpcyBqbm9kZSB3YXMgd3JpdHRlbiBpbiBvbmUgdHJhbnNhY3Rpb24gKi8KKwlpbnQg
d3JpdHRlbjsKKwkvKiB0aGlzIGluZGljYXRlcyB3aGljaCBhdG9tJ3MgbGlzdCB0aGUgam5vZGUg
aXMgb24gKi8KKwlhdG9tX2xpc3QgbGlzdDsKKyNlbmRpZgorfSBfX2F0dHJpYnV0ZV9fICgoYWxp
Z25lZCgxNikpKTsKKworLyoKKyAqIGpub2RlIHR5cGVzLiBFbnVtZXJhdGlvbiBvZiBleGlzdGlu
ZyBqbm9kZSB0eXBlcy4KKyAqLwordHlwZWRlZiBlbnVtIHsKKwlKTk9ERV9VTkZPUk1BVFRFRF9C
TE9DSywJLyogdW5mb3JtYXR0ZWQgYmxvY2sgKi8KKwlKTk9ERV9GT1JNQVRURURfQkxPQ0ssCS8q
IGZvcm1hdHRlZCBibG9jaywgem5vZGUgKi8KKwlKTk9ERV9CSVRNQVAsCQkvKiBiaXRtYXAgKi8K
KwlKTk9ERV9JT19IRUFELAkJLyogam5vZGUgcmVwcmVzZW50aW5nIGEgYmxvY2sgaW4gdGhlCisJ
CQkJICogd2FuZGVyaW5nIGxvZyAqLworCUpOT0RFX0lOT0RFLAkJLyogam5vZGUgZW1iZWRkZWQg
aW50byBpbm9kZSAqLworCUxBU1RfSk5PREVfVFlQRQorfSBqbm9kZV90eXBlOworCisvKiBqbm9k
ZSBzdGF0ZXMgKi8KK3R5cGVkZWYgZW51bSB7CisJLyogam5vZGUncyBwYWdlIGlzIGxvYWRlZCBh
bmQgZGF0YSBjaGVja2VkICovCisJSk5PREVfUEFSU0VEID0gMCwKKwkvKiBub2RlIHdhcyBkZWxl
dGVkLCBub3QgYWxsIGxvY2tzIG9uIGl0IHdlcmUgcmVsZWFzZWQuIFRoaXMKKwkgICBub2RlIGlz
IGVtcHR5IGFuZCBpcyBnb2luZyB0byBiZSByZW1vdmVkIGZyb20gdGhlIHRyZWUKKwkgICBzaG9y
dGx5LiAqLworCUpOT0RFX0hFQVJEX0JBTlNIRUUgPSAxLAorCS8qIGxlZnQgc2libGluZyBwb2lu
dGVyIGlzIHZhbGlkICovCisJSk5PREVfTEVGVF9DT05ORUNURUQgPSAyLAorCS8qIHJpZ2h0IHNp
YmxpbmcgcG9pbnRlciBpcyB2YWxpZCAqLworCUpOT0RFX1JJR0hUX0NPTk5FQ1RFRCA9IDMsCisK
KwkvKiB6bm9kZSB3YXMganVzdCBjcmVhdGVkIGFuZCBkb2Vzbid0IHlldCBoYXZlIGEgcG9pbnRl
ciBmcm9tCisJICAgaXRzIHBhcmVudCAqLworCUpOT0RFX09SUEhBTiA9IDQsCisKKwkvKiB0aGlz
IG5vZGUgd2FzIGNyZWF0ZWQgYnkgaXRzIHRyYW5zYWN0aW9uIGFuZCBoYXMgbm90IGJlZW4gYXNz
aWduZWQKKwkgICBhIGJsb2NrIGFkZHJlc3MuICovCisJSk5PREVfQ1JFQVRFRCA9IDUsCisKKwkv
KiB0aGlzIG5vZGUgaXMgY3VycmVudGx5IHJlbG9jYXRlZCAqLworCUpOT0RFX1JFTE9DID0gNiwK
KwkvKiB0aGlzIG5vZGUgaXMgY3VycmVudGx5IHdhbmRlcmVkICovCisJSk5PREVfT1ZSV1IgPSA3
LAorCisJLyogdGhpcyB6bm9kZSBoYXMgYmVlbiBtb2RpZmllZCAqLworCUpOT0RFX0RJUlRZID0g
OCwKKworCS8qIHpub2RlIGxvY2sgaXMgYmVpbmcgaW52YWxpZGF0ZWQgKi8KKwlKTk9ERV9JU19E
WUlORyA9IDksCisKKwkvKiBUSElTIFBMQUNFIElTIElOVEVOVElPTkFMTFkgTEVGVCBCTEFOSyAq
LworCisJLyogam5vZGUgaXMgcXVldWVkIGZvciBmbHVzaGluZy4gKi8KKwlKTk9ERV9GTFVTSF9R
VUVVRUQgPSAxMiwKKworCS8qIEluIHRoZSBmb2xsb3dpbmcgYml0cyBqbm9kZSB0eXBlIGlzIGVu
Y29kZWQuICovCisJSk5PREVfVFlQRV8xID0gMTMsCisJSk5PREVfVFlQRV8yID0gMTQsCisJSk5P
REVfVFlQRV8zID0gMTUsCisKKwkvKiBqbm9kZSBpcyBiZWluZyBkZXN0cm95ZWQgKi8KKwlKTk9E
RV9SSVAgPSAxNiwKKworCS8qIHpub2RlIHdhcyBub3QgY2FwdHVyZWQgZHVyaW5nIGxvY2tpbmcg
KGl0IG1pZ2h0IHNvIGJlIGJlY2F1c2UKKwkgICAtPmxldmVsICE9IExFQUZfTEVWRUwgYW5kIGxv
Y2tfbW9kZSA9PSBSRUFEX0xPQ0spICovCisJSk5PREVfTUlTU0VEX0lOX0NBUFRVUkUgPSAxNywK
KworCS8qIHdyaXRlIGlzIGluIHByb2dyZXNzICovCisJSk5PREVfV1JJVEVCQUNLID0gMTgsCisK
KwkvKiB1bnVzZWQgZmxhZyAqLworCUpOT0RFX05FVyA9IDE5LAorCisJLyogZGVsaW1pdGluZyBr
ZXlzIGFyZSBhbHJlYWR5IHNldCBmb3IgdGhpcyB6bm9kZS4gKi8KKwlKTk9ERV9ES1NFVCA9IDIw
LAorCisJLyogd2hlbiB0aGlzIGJpdCBpcyBzZXQgcGFnZSBhbmQgam5vZGUgY2FuIG5vdCBiZSBk
aXNjb25uZWN0ZWQgKi8KKwlKTk9ERV9XUklURV9QUkVQQVJFRCA9IDIxLAorCisJSk5PREVfQ0xV
U1RFUl9QQUdFID0gMjIsCisJLyogSm5vZGUgaXMgbWFya2VkIGZvciByZXBhY2tpbmcsIHRoYXQg
bWVhbnMgdGhlIHJlaXNlcjQgZmx1c2ggYW5kIHRoZQorCSAqIGJsb2NrIGFsbG9jYXRvciBzaG91
bGQgcHJvY2VzcyB0aGlzIG5vZGUgc3BlY2lhbCB3YXkgICovCisJSk5PREVfUkVQQUNLID0gMjMs
CisJLyogbm9kZSBzaG91bGQgYmUgY29udmVydGVkIGJ5IGZsdXNoIGluIHNxdWFsbG9jIHBoYXNl
ICovCisJSk5PREVfQ09OVkVSVElCTEUgPSAyNCwKKwkvKgorCSAqIFdoZW4gam5vZGUgaXMgZGly
dGllZCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gZ2l2ZW4gdHJhbnNhY3Rpb24sCisJICogZG9fam5v
ZGVfbWFrZV9kaXJ0eSgpIGNoZWNrcyB3aGV0aGVyIHRoaXMgam5vZGUgY2FuIHBvc3NpYmxlIGJl
Y2FtZQorCSAqIG1lbWJlciBvZiBvdmVyd3JpdGUgc2V0LiBJZiBzbywgdGhpcyBiaXQgaXMgc2V0
LCBhbmQgb25lIGJsb2NrIGlzCisJICogcmVzZXJ2ZWQgaW4gdGhlIC0+Zmx1c2hfcmVzZXJ2ZWQg
c3BhY2Ugb2YgYXRvbS4KKwkgKgorCSAqIFRoaXMgYmxvY2sgaXMgInVzZWQiIChhbmQgSk5PREVf
RkxVU0hfUkVTRVJWRUQgYml0IGlzIGNsZWFyZWQpIHdoZW4KKwkgKgorCSAqICAgICAoMSkgZmx1
c2ggZGVjaWRlcyB0aGF0IHdlIHdhbnQgdGhpcyBibG9jayB0byBnbyBpbnRvIHJlbG9jYXRlCisJ
ICogICAgIHNldCBhZnRlciBhbGwuCisJICoKKwkgKiAgICAgKDIpIHdhbmRlcmluZyBsb2cgaXMg
YWxsb2NhdGVkIChieSBsb2cgd3JpdGVyKQorCSAqCisJICogICAgICgzKSBleHRlbnQgaXMgYWxs
b2NhdGVkCisJICoKKwkgKi8KKwlKTk9ERV9GTFVTSF9SRVNFUlZFRCA9IDI5Cit9IHJlaXNlcjRf
am5vZGVfc3RhdGU7CisKKy8qIE1hY3JvcyBmb3IgYWNjZXNzaW5nIHRoZSBqbm9kZSBzdGF0ZS4g
Ki8KKworc3RhdGljIGlubGluZSB2b2lkIEpGX0NMUihqbm9kZSAqIGosIGludCBmKQoreworCWFz
c2VydCgidW5rbm93bi0xIiwgai0+bWFnaWMgPT0gSk1BR0lDKTsKKwljbGVhcl9iaXQoZiwgJmot
PnN0YXRlKTsKK30KK3N0YXRpYyBpbmxpbmUgaW50IEpGX0lTU0VUKGNvbnN0IGpub2RlICogaiwg
aW50IGYpCit7CisJYXNzZXJ0KCJ1bmtub3duLTIiLCBqLT5tYWdpYyA9PSBKTUFHSUMpOworCXJl
dHVybiB0ZXN0X2JpdChmLCAmKChqbm9kZSAqKSBqKS0+c3RhdGUpOworfQorc3RhdGljIGlubGlu
ZSB2b2lkIEpGX1NFVChqbm9kZSAqIGosIGludCBmKQoreworCWFzc2VydCgidW5rbm93bi0zIiwg
ai0+bWFnaWMgPT0gSk1BR0lDKTsKKwlzZXRfYml0KGYsICZqLT5zdGF0ZSk7Cit9CisKK3N0YXRp
YyBpbmxpbmUgaW50IEpGX1RFU1RfQU5EX1NFVChqbm9kZSAqIGosIGludCBmKQoreworCWFzc2Vy
dCgidW5rbm93bi00Iiwgai0+bWFnaWMgPT0gSk1BR0lDKTsKKwlyZXR1cm4gdGVzdF9hbmRfc2V0
X2JpdChmLCAmai0+c3RhdGUpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl9sb2NrX2pu
b2RlKGpub2RlICpub2RlKQoreworCS8qIGNoZWNrIHRoYXQgc3BpbmxvY2tzIG9mIGxvd2VyIHBy
aW9yaXRpZXMgYXJlIG5vdCBoZWxkICovCisJYXNzZXJ0KCIiLCAoTE9DS19DTlRfTklMKHJ3X2xv
Y2tlZF90cmVlKSAmJgorCQkgICAgTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX3R4bmgpICYmCisJ
CSAgICBMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfemxvY2spICYmCisJCSAgICBMT0NLX0NOVF9O
SUwocndfbG9ja2VkX2RrKSAmJgorCQkgICAgTE9DS19DTlRfTFQoc3Bpbl9sb2NrZWRfam5vZGUs
IDIpKSk7CisKKwlzcGluX2xvY2soJihub2RlLT5ndWFyZCkpOworCisJTE9DS19DTlRfSU5DKHNw
aW5fbG9ja2VkX2pub2RlKTsKKwlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWQpOworfQorCitzdGF0
aWMgaW5saW5lIHZvaWQgc3Bpbl91bmxvY2tfam5vZGUoam5vZGUgKm5vZGUpCit7CisJYXNzZXJ0
X3NwaW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzc1IiwgTE9D
S19DTlRfR1RaKHNwaW5fbG9ja2VkX2pub2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMTM3NiIsIExP
Q0tfQ05UX0dUWihzcGluX2xvY2tlZCkpOworCisJTE9DS19DTlRfREVDKHNwaW5fbG9ja2VkX2pu
b2RlKTsKKwlMT0NLX0NOVF9ERUMoc3Bpbl9sb2NrZWQpOworCisJc3Bpbl91bmxvY2soJihub2Rl
LT5ndWFyZCkpOworfQorCitzdGF0aWMgaW5saW5lIGludCBqbm9kZV9pc19pbl9kZWxldGVzZXQo
Y29uc3Qgam5vZGUgKiBub2RlKQoreworCXJldHVybiBKRl9JU1NFVChub2RlLCBKTk9ERV9SRUxP
Qyk7Cit9CisKK2V4dGVybiBpbnQgaW5pdF9qbm9kZXModm9pZCk7CitleHRlcm4gdm9pZCBkb25l
X2pub2Rlcyh2b2lkKTsKKworLyogSm5vZGUgcm91dGluZXMgKi8KK2V4dGVybiBqbm9kZSAqamFs
bG9jKHZvaWQpOworZXh0ZXJuIHZvaWQgamZyZWUoam5vZGUgKiBub2RlKSBOT05OVUxMOworZXh0
ZXJuIGpub2RlICpqY2xvbmUoam5vZGUgKik7CitleHRlcm4gam5vZGUgKmpsb29rdXAocmVpc2Vy
NF90cmVlICogdHJlZSwKKwkJICAgICAgb2lkX3Qgb2JqZWN0aWQsIHVuc2lnbmVkIGxvbmcgaW5k
KSBOT05OVUxMOworZXh0ZXJuIGpub2RlICpqZmluZChzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqLCB1
bnNpZ25lZCBsb25nIGluZGV4KSBOT05OVUxMOworZXh0ZXJuIGpub2RlICpqbm9kZV9ieV9wYWdl
KHN0cnVjdCBwYWdlICpwZykgTk9OTlVMTDsKK2V4dGVybiBqbm9kZSAqam5vZGVfb2ZfcGFnZShz
dHJ1Y3QgcGFnZSAqcGcpIE5PTk5VTEw7Cit2b2lkIGpub2RlX2F0dGFjaF9wYWdlKGpub2RlICog
bm9kZSwgc3RydWN0IHBhZ2UgKnBnKTsKKwordm9pZCB1bmhhc2hfdW5mb3JtYXR0ZWRfam5vZGUo
am5vZGUgKik7CitleHRlcm4gam5vZGUgKnBhZ2VfbmV4dF9qbm9kZShqbm9kZSAqIG5vZGUpIE5P
Tk5VTEw7CitleHRlcm4gdm9pZCBqbm9kZV9pbml0KGpub2RlICogbm9kZSwgcmVpc2VyNF90cmVl
ICogdHJlZSwgam5vZGVfdHlwZSkgTk9OTlVMTDsKK2V4dGVybiB2b2lkIGpub2RlX21ha2VfZGly
dHkoam5vZGUgKiBub2RlKSBOT05OVUxMOworZXh0ZXJuIHZvaWQgam5vZGVfbWFrZV9jbGVhbihq
bm9kZSAqIG5vZGUpIE5PTk5VTEw7CitleHRlcm4gdm9pZCBqbm9kZV9tYWtlX3dhbmRlcl9ub2xv
Y2soam5vZGUgKiBub2RlKSBOT05OVUxMOworZXh0ZXJuIHZvaWQgam5vZGVfbWFrZV93YW5kZXIo
am5vZGUgKikgTk9OTlVMTDsKK2V4dGVybiB2b2lkIHpub2RlX21ha2VfcmVsb2Moem5vZGUgKiAs
IGZsdXNoX3F1ZXVlX3QgKikgTk9OTlVMTDsKK2V4dGVybiB2b2lkIHVuZm9ybWF0dGVkX21ha2Vf
cmVsb2Moam5vZGUgKiwgZmx1c2hfcXVldWVfdCAqKSBOT05OVUxMOworZXh0ZXJuIHN0cnVjdCBh
ZGRyZXNzX3NwYWNlICpqbm9kZV9nZXRfbWFwcGluZyhjb25zdCBqbm9kZSAqIG5vZGUpIE5PTk5V
TEw7CisKKy8qKgorICogam5vZGVfZ2V0X2Jsb2NrCisgKiBAbm9kZTogam5vZGUgdG8gcXVlcnkK
KyAqCisgKi8KK3N0YXRpYyBpbmxpbmUgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqam5vZGVfZ2V0
X2Jsb2NrKGNvbnN0IGpub2RlICpub2RlKQoreworCWFzc2VydCgibmlraXRhLTUyOCIsIG5vZGUg
IT0gTlVMTCk7CisKKwlyZXR1cm4gJm5vZGUtPmJsb2NrbnI7Cit9CisKKy8qKgorICogam5vZGVf
c2V0X2Jsb2NrCisgKiBAbm9kZTogam5vZGUgdG8gdXBkYXRlCisgKiBAYmxvY2tucjogbmV3IGJs
b2NrIG5yCisgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBqbm9kZV9zZXRfYmxvY2soam5vZGUgKm5v
ZGUsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKmJsb2NrbnIpCit7CisJYXNzZXJ0KCJuaWtpdGEt
MjAyMCIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTA1NSIsIGJsb2NrbnIgIT0gTlVM
TCk7CisJbm9kZS0+YmxvY2tuciA9ICpibG9ja25yOworfQorCisKKy8qIGJsb2NrIG51bWJlciBm
b3IgSU8uIFVzdWFsbHkgdGhpcyBpcyB0aGUgc2FtZSBhcyBqbm9kZV9nZXRfYmxvY2soKSwgdW5s
ZXNzCisgKiBqbm9kZSB3YXMgZW1lcmdlbmN5IGZsdXNoZWQtLS10aGVuIGJsb2NrIG51bWJlciBj
aG9zZW4gYnkgZWZsdXNoIGlzCisgKiB1c2VkLiAqLworc3RhdGljIGlubGluZSBjb25zdCByZWlz
ZXI0X2Jsb2NrX25yICpqbm9kZV9nZXRfaW9fYmxvY2soam5vZGUgKiBub2RlKQoreworCWFzc2Vy
dCgibmlraXRhLTI3NjgiLCBub2RlICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5v
ZGUtPmd1YXJkKSk7CisKKwlyZXR1cm4gam5vZGVfZ2V0X2Jsb2NrKG5vZGUpOworfQorCisvKiBK
bm9kZSBmbHVzaCBpbnRlcmZhY2UuICovCitleHRlcm4gcmVpc2VyNF9ibG9ja25yX2hpbnQgKnJl
aXNlcjRfcG9zX2hpbnQoZmx1c2hfcG9zX3QgKnBvcyk7CitleHRlcm4gZmx1c2hfcXVldWVfdCAq
cmVpc2VyNF9wb3NfZnEoZmx1c2hfcG9zX3QgKnBvcyk7CisKKy8qIEZJWE1FLVZTOiB0aGVzZSBh
cmUgdXNlZCBpbiBwbHVnaW4vaXRlbS9leHRlbnQuYyAqLworCisvKiBkb2VzIGV4dGVudF9nZXRf
YmxvY2sgaGF2ZSB0byBiZSBjYWxsZWQgKi8KKyNkZWZpbmUgam5vZGVfbWFwcGVkKG5vZGUpICAg
ICBKRl9JU1NFVCAobm9kZSwgSk5PREVfTUFQUEVEKQorI2RlZmluZSBqbm9kZV9zZXRfbWFwcGVk
KG5vZGUpIEpGX1NFVCAobm9kZSwgSk5PREVfTUFQUEVEKQorCisvKiB0aGUgbm9kZSBzaG91bGQg
YmUgY29udmVydGVkIGR1cmluZyBmbHVzaCBzcXVhbGxvYyBwaGFzZSAqLworI2RlZmluZSBqbm9k
ZV9jb252ZXJ0aWJsZShub2RlKSAgICAgICAgSkZfSVNTRVQgKG5vZGUsIEpOT0RFX0NPTlZFUlRJ
QkxFKQorI2RlZmluZSBqbm9kZV9zZXRfY29udmVydGlibGUobm9kZSkgICAgSkZfU0VUIChub2Rl
LCBKTk9ERV9DT05WRVJUSUJMRSkKKworLyogTWFjcm9zIHRvIGNvbnZlcnQgZnJvbSBqbm9kZSB0
byB6bm9kZSwgem5vZGUgdG8gam5vZGUuICBUaGVzZSBhcmUgbWFjcm9zCisgICBiZWNhdXNlIEMg
ZG9lc24ndCBhbGxvdyBvdmVybG9hZGluZyBvZiBjb25zdCBwcm90b3R5cGVzLiAqLworI2RlZmlu
ZSBaSk5PREUoeCkgKCYoeCktPnpqbm9kZSkKKyNkZWZpbmUgSlpOT0RFKHgpCQkJCQkJXAorKHsJ
CQkJCQkJCVwKKwl0eXBlb2YoeCkgX190bXBfeDsJCQkJCVwKKwkJCQkJCQkJXAorCV9fdG1wX3gg
PSAoeCk7CQkJCQkJXAorCWFzc2VydCgiam1hY2QtMTMwMCIsIGpub2RlX2lzX3pub2RlKF9fdG1w
X3gpKTsJCVwKKwkoem5vZGUqKSBfX3RtcF94OwkJCQkJXAorfSkKKworZXh0ZXJuIGludCBqbm9k
ZXNfdHJlZV9pbml0KHJlaXNlcjRfdHJlZSAqIHRyZWUpOworZXh0ZXJuIGludCBqbm9kZXNfdHJl
ZV9kb25lKHJlaXNlcjRfdHJlZSAqIHRyZWUpOworCisjaWYgUkVJU0VSNF9ERUJVRworCitleHRl
cm4gaW50IHpub2RlX2lzX2FueV9sb2NrZWQoY29uc3Qgem5vZGUgKiBub2RlKTsKK2V4dGVybiB2
b2lkIGpub2RlX2xpc3RfcmVtb3ZlKGpub2RlICogbm9kZSk7CisKKyNlbHNlCisKKyNkZWZpbmUg
am5vZGVfbGlzdF9yZW1vdmUobm9kZSkgbm9vcAorCisjZW5kaWYKKworaW50IHpub2RlX2lzX3Jv
b3QoY29uc3Qgem5vZGUgKiBub2RlKSBOT05OVUxMOworCisvKiBidW1wIHJlZmVyZW5jZSBjb3Vu
dGVyIG9uIEBub2RlICovCitzdGF0aWMgaW5saW5lIHZvaWQgYWRkX3hfcmVmKGpub2RlICogbm9k
ZS8qIG5vZGUgdG8gaW5jcmVhc2UgeF9jb3VudCBvZiAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0x
OTExIiwgbm9kZSAhPSBOVUxMKTsKKworCWF0b21pY19pbmMoJm5vZGUtPnhfY291bnQpOworCUxP
Q0tfQ05UX0lOQyh4X3JlZnMpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZGVjX3hfcmVmKGpu
b2RlICogbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zMjE1Iiwgbm9kZSAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS0zMjE2IiwgYXRvbWljX3JlYWQoJm5vZGUtPnhfY291bnQpID4gMCk7CisK
KwlhdG9taWNfZGVjKCZub2RlLT54X2NvdW50KTsKKwlhc3NlcnQoIm5pa2l0YS0zMjE3IiwgTE9D
S19DTlRfR1RaKHhfcmVmcykpOworCUxPQ0tfQ05UX0RFQyh4X3JlZnMpOworfQorCisvKiBqcmVm
KCkgLSBpbmNyZWFzZSBjb3VudGVyIG9mIHJlZmVyZW5jZXMgdG8gam5vZGUvem5vZGUgKHhfY291
bnQpICovCitzdGF0aWMgaW5saW5lIGpub2RlICpqcmVmKGpub2RlICogbm9kZSkKK3sKKwlhc3Nl
cnQoImptYWNkLTUwOCIsIChub2RlICE9IE5VTEwpICYmICFJU19FUlIobm9kZSkpOworCWFkZF94
X3JlZihub2RlKTsKKwlyZXR1cm4gbm9kZTsKK30KKworLyogZ2V0IHRoZSBwYWdlIG9mIGpub2Rl
ICovCitzdGF0aWMgaW5saW5lIHN0cnVjdCBwYWdlICpqbm9kZV9wYWdlKGNvbnN0IGpub2RlICog
bm9kZSkKK3sKKwlyZXR1cm4gbm9kZS0+cGc7Cit9CisKKy8qIHJldHVybiBwb2ludGVyIHRvIGpu
b2RlIGRhdGEgKi8KK3N0YXRpYyBpbmxpbmUgY2hhciAqamRhdGEoY29uc3Qgam5vZGUgKiBub2Rl
KQoreworCWFzc2VydCgibmlraXRhLTE0MTUiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTMxOTgiLCBqbm9kZV9wYWdlKG5vZGUpICE9IE5VTEwpOworCXJldHVybiBub2RlLT5kYXRh
OworfQorCitzdGF0aWMgaW5saW5lIGludCBqbm9kZV9pc19sb2FkZWQoY29uc3Qgam5vZGUgKiBu
b2RlKQoreworCWFzc2VydCgiemFtLTUwNiIsIG5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIGF0b21p
Y19yZWFkKCZub2RlLT5kX2NvdW50KSA+IDA7Cit9CisKK2V4dGVybiB2b2lkIHBhZ2VfY2xlYXJf
am5vZGUoc3RydWN0IHBhZ2UgKnBhZ2UsIGpub2RlICogbm9kZSkgTk9OTlVMTDsKKworc3RhdGlj
IGlubGluZSB2b2lkIGpub2RlX3NldF9yZWxvYyhqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJu
aWtpdGEtMjQzMSIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjQzMiIsICFKRl9J
U1NFVChub2RlLCBKTk9ERV9PVlJXUikpOworCUpGX1NFVChub2RlLCBKTk9ERV9SRUxPQyk7Cit9
CisKKy8qIGpsb2FkL2p3cml0ZS9qdW5sb2FkIGdpdmUgYSBicmVhZC9id3JpdGUvYnJlbHNlIGZ1
bmN0aW9uYWxpdHkgZm9yIGpub2RlcyAqLworCitleHRlcm4gaW50IGpsb2FkX2dmcChqbm9kZSAq
LCBnZnBfdCwgaW50IGRvX2ttYXApIE5PTk5VTEw7CisKK3N0YXRpYyBpbmxpbmUgaW50IGpsb2Fk
KGpub2RlICpub2RlKQoreworCXJldHVybiBqbG9hZF9nZnAobm9kZSwgcmVpc2VyNF9jdHhfZ2Zw
X21hc2tfZ2V0KCksIDEpOworfQorCitleHRlcm4gaW50IGppbml0X25ldyhqbm9kZSAqLCBnZnBf
dCkgTk9OTlVMTDsKK2V4dGVybiBpbnQganN0YXJ0aW8oam5vZGUgKikgTk9OTlVMTDsKKworZXh0
ZXJuIHZvaWQgamRyb3Aoam5vZGUgKikgTk9OTlVMTDsKK2V4dGVybiBpbnQgandhaXRfaW8oam5v
ZGUgKiwgaW50IHJ3KSBOT05OVUxMOworCit2b2lkIGpsb2FkX3ByZWZldGNoKGpub2RlICopOwor
CitleHRlcm4gam5vZGUgKnJlaXNlcjRfYWxsb2NfaW9faGVhZChjb25zdCByZWlzZXI0X2Jsb2Nr
X25yICogYmxvY2spIE5PTk5VTEw7CitleHRlcm4gdm9pZCByZWlzZXI0X2Ryb3BfaW9faGVhZChq
bm9kZSAqIG5vZGUpIE5PTk5VTEw7CisKK3N0YXRpYyBpbmxpbmUgcmVpc2VyNF90cmVlICpqbm9k
ZV9nZXRfdHJlZShjb25zdCBqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjY5MSIs
IG5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIG5vZGUtPnRyZWU7Cit9CisKK2V4dGVybiB2b2lkIHBp
bl9qbm9kZV9kYXRhKGpub2RlICopOworZXh0ZXJuIHZvaWQgdW5waW5fam5vZGVfZGF0YShqbm9k
ZSAqKTsKKworc3RhdGljIGlubGluZSBqbm9kZV90eXBlIGpub2RlX2dldF90eXBlKGNvbnN0IGpu
b2RlICogbm9kZSkKK3sKKwlzdGF0aWMgY29uc3QgdW5zaWduZWQgbG9uZyBzdGF0ZV9tYXNrID0K
KwkgICAgKDEgPDwgSk5PREVfVFlQRV8xKSB8ICgxIDw8IEpOT0RFX1RZUEVfMikgfCAoMSA8PCBK
Tk9ERV9UWVBFXzMpOworCisJc3RhdGljIGpub2RlX3R5cGUgbWFza190b190eXBlW10gPSB7CisJ
CS8qICBKTk9ERV9UWVBFXzMgOiBKTk9ERV9UWVBFXzIgOiBKTk9ERV9UWVBFXzEgKi8KKworCQkv
KiAwMDAgKi8KKwkJWzBdID0gSk5PREVfRk9STUFUVEVEX0JMT0NLLAorCQkvKiAwMDEgKi8KKwkJ
WzFdID0gSk5PREVfVU5GT1JNQVRURURfQkxPQ0ssCisJCS8qIDAxMCAqLworCQlbMl0gPSBKTk9E
RV9CSVRNQVAsCisJCS8qIDAxMSAqLworCQlbM10gPSBMQVNUX0pOT0RFX1RZUEUsCS8qaW52YWxp
ZCAqLworCQkvKiAxMDAgKi8KKwkJWzRdID0gSk5PREVfSU5PREUsCisJCS8qIDEwMSAqLworCQlb
NV0gPSBMQVNUX0pOT0RFX1RZUEUsCisJCS8qIDExMCAqLworCQlbNl0gPSBKTk9ERV9JT19IRUFE
LAorCQkvKiAxMTEgKi8KKwkJWzddID0gTEFTVF9KTk9ERV9UWVBFLAkvKiBpbnZhbGlkICovCisJ
fTsKKworCXJldHVybiBtYXNrX3RvX3R5cGVbKG5vZGUtPnN0YXRlICYgc3RhdGVfbWFzaykgPj4g
Sk5PREVfVFlQRV8xXTsKK30KKworLyogcmV0dXJucyB0cnVlIGlmIG5vZGUgaXMgYSB6bm9kZSAq
Lworc3RhdGljIGlubGluZSBpbnQgam5vZGVfaXNfem5vZGUoY29uc3Qgam5vZGUgKiBub2RlKQor
eworCXJldHVybiBqbm9kZV9nZXRfdHlwZShub2RlKSA9PSBKTk9ERV9GT1JNQVRURURfQkxPQ0s7
Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGpub2RlX2lzX2ZsdXNocHJlcHBlZChqbm9kZSAqIG5v
ZGUpCit7CisJYXNzZXJ0KCJqbWFjZC03ODIxMiIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0X3Nw
aW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKwlyZXR1cm4gIUpGX0lTU0VUKG5vZGUsIEpOT0RF
X0RJUlRZKSB8fCBKRl9JU1NFVChub2RlLCBKTk9ERV9SRUxPQykgfHwKKwkJSkZfSVNTRVQobm9k
ZSwgSk5PREVfT1ZSV1IpOworfQorCisvKiBSZXR1cm4gdHJ1ZSBpZiBAbm9kZSBoYXMgYWxyZWFk
eSBiZWVuIHByb2Nlc3NlZCBieSB0aGUgc3F1ZWV6ZSBhbmQgYWxsb2NhdGUKKyAgIHByb2Nlc3Mu
ICBUaGlzIGltcGxpZXMgdGhlIGJsb2NrIGFkZHJlc3MgaGFzIGJlZW4gZmluYWxpemVkIGZvciB0
aGUKKyAgIGR1cmF0aW9uIG9mIHRoaXMgYXRvbSAob3IgaXQgaXMgY2xlYW4gYW5kIHdpbGwgcmVt
YWluIGluIHBsYWNlKS4gIElmIHRoaXMKKyAgIHJldHVybnMgdHJ1ZSB5b3UgbWF5IHVzZSB0aGUg
YmxvY2sgbnVtYmVyIGFzIGEgaGludC4gKi8KK3N0YXRpYyBpbmxpbmUgaW50IGpub2RlX2NoZWNr
X2ZsdXNocHJlcHBlZChqbm9kZSAqIG5vZGUpCit7CisJaW50IHJlc3VsdDsKKworCS8qIEl0IG11
c3QgYmUgY2xlYW4gb3IgcmVsb2NhdGVkIG9yIHdhbmRlcmVkLiAgTmV3IGFsbG9jYXRpb25zIGFy
ZSBzZXQKKwkgKiB0byByZWxvY2F0ZS4gKi8KKwlzcGluX2xvY2tfam5vZGUobm9kZSk7CisJcmVz
dWx0ID0gam5vZGVfaXNfZmx1c2hwcmVwcGVkKG5vZGUpOworCXNwaW5fdW5sb2NrX2pub2RlKG5v
ZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJldHVybnMgdHJ1ZSBpZiBub2RlIGlzIHVu
Zm9ybWF0dGVkICovCitzdGF0aWMgaW5saW5lIGludCBqbm9kZV9pc191bmZvcm1hdHRlZChjb25z
dCBqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJqbWFjZC0wMTIzIiwgbm9kZSAhPSBOVUxMKTsK
KwlyZXR1cm4gam5vZGVfZ2V0X3R5cGUobm9kZSkgPT0gSk5PREVfVU5GT1JNQVRURURfQkxPQ0s7
Cit9CisKKy8qIHJldHVybnMgdHJ1ZSBpZiBub2RlIHJlcHJlc2VudHMgYSBjbHVzdGVyIGNhY2hl
IHBhZ2UgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGpub2RlX2lzX2NsdXN0ZXJfcGFnZShjb25zdCBq
bm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJlZHdhcmQtNTAiLCBub2RlICE9IE5VTEwpOworCXJl
dHVybiAoSkZfSVNTRVQobm9kZSwgSk5PREVfQ0xVU1RFUl9QQUdFKSk7Cit9CisKKy8qIHJldHVy
bnMgdHJ1ZSBpcyBub2RlIGlzIGJ1aWx0aW4gaW5vZGUncyBqbm9kZSAqLworc3RhdGljIGlubGlu
ZSBpbnQgam5vZGVfaXNfaW5vZGUoY29uc3Qgam5vZGUgKiBub2RlKQoreworCWFzc2VydCgidnMt
MTI0MCIsIG5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIGpub2RlX2dldF90eXBlKG5vZGUpID09IEpO
T0RFX0lOT0RFOworfQorCitzdGF0aWMgaW5saW5lIGpub2RlX3BsdWdpbiAqam5vZGVfb3BzX29m
KGNvbnN0IGpub2RlX3R5cGUgdHlwZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMzY3IiwgdHlwZSA8
IExBU1RfSk5PREVfVFlQRSk7CisJcmV0dXJuIGpub2RlX3BsdWdpbl9ieV9pZCgocmVpc2VyNF9w
bHVnaW5faWQpIHR5cGUpOworfQorCitzdGF0aWMgaW5saW5lIGpub2RlX3BsdWdpbiAqam5vZGVf
b3BzKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMzY2Iiwgbm9kZSAh
PSBOVUxMKTsKKworCXJldHVybiBqbm9kZV9vcHNfb2Yoam5vZGVfZ2V0X3R5cGUobm9kZSkpOwor
fQorCisvKiBHZXQgdGhlIGluZGV4IG9mIGEgYmxvY2suICovCitzdGF0aWMgaW5saW5lIHVuc2ln
bmVkIGxvbmcgam5vZGVfZ2V0X2luZGV4KGpub2RlICogbm9kZSkKK3sKKwlyZXR1cm4gam5vZGVf
b3BzKG5vZGUpLT5pbmRleChub2RlKTsKK30KKworLyogcmV0dXJuIHRydWUgaWYgIm5vZGUiIGlz
IHRoZSByb290ICovCitzdGF0aWMgaW5saW5lIGludCBqbm9kZV9pc19yb290KGNvbnN0IGpub2Rl
ICogbm9kZSkKK3sKKwlyZXR1cm4gam5vZGVfaXNfem5vZGUobm9kZSkgJiYgem5vZGVfaXNfcm9v
dChKWk5PREUobm9kZSkpOworfQorCitleHRlcm4gc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBp
bmdfam5vZGUoY29uc3Qgam5vZGUgKiBub2RlKTsKK2V4dGVybiB1bnNpZ25lZCBsb25nIGluZGV4
X2pub2RlKGNvbnN0IGpub2RlICogbm9kZSk7CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBqcHV0KGpu
b2RlICogbm9kZSk7CitleHRlcm4gdm9pZCBqcHV0X2ZpbmFsKGpub2RlICogbm9kZSk7CisKKy8q
IGJ1bXAgZGF0YSBjb3VudGVyIG9uIEBub2RlICovCitzdGF0aWMgaW5saW5lIHZvaWQgYWRkX2Rf
cmVmKGpub2RlICogbm9kZS8qIG5vZGUgdG8gaW5jcmVhc2UgZF9jb3VudCBvZiAqLykKK3sKKwlh
c3NlcnQoIm5pa2l0YS0xOTYyIiwgbm9kZSAhPSBOVUxMKTsKKworCWF0b21pY19pbmMoJm5vZGUt
PmRfY291bnQpOworCWlmIChqbm9kZV9pc191bmZvcm1hdHRlZChub2RlKSB8fCBqbm9kZV9pc196
bm9kZShub2RlKSkKKwkJTE9DS19DTlRfSU5DKGRfcmVmcyk7Cit9CisKKy8qIGpwdXQoKSAtIGRl
Y3JlbWVudCB4X2NvdW50IHJlZmVyZW5jZSBjb3VudGVyIG9uIHpub2RlLgorCisgICBDb3VudCBt
YXkgZHJvcCB0byAwLCBqbm9kZSBzdGF5cyBpbiBjYWNoZSB1bnRpbCBtZW1vcnkgcHJlc3N1cmUg
Y2F1c2VzIHRoZQorICAgZXZpY3Rpb24gb2YgaXRzIHBhZ2UuIFRoZSBjX2NvdW50IHZhcmlhYmxl
IGFsc28gZW5zdXJlcyB0aGF0IGNoaWxkcmVuIGFyZQorICAgcHJlc3N1cmVkIG91dCBvZiBtZW1v
cnkgYmVmb3JlIHRoZSBwYXJlbnQuIFRoZSBqbm9kZSByZW1haW5zIGhhc2hlZCBhcworICAgbG9u
ZyBhcyB0aGUgVk0gYWxsb3dzIGl0cyBwYWdlIHRvIHN0YXkgaW4gbWVtb3J5LgorKi8KK3N0YXRp
YyBpbmxpbmUgdm9pZCBqcHV0KGpub2RlICogbm9kZSkKK3sKKwlhc3NlcnQoImptYWNkLTUwOSIs
IG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJqbWFjZC01MTAiLCBhdG9taWNfcmVhZCgmbm9kZS0+
eF9jb3VudCkgPiAwKTsKKwlhc3NlcnQoInphbS05MjYiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkp
OworCUxPQ0tfQ05UX0RFQyh4X3JlZnMpOworCisJcmN1X3JlYWRfbG9jaygpOworCS8qCisJICog
d2UgZG9uJ3QgbmVlZCBhbnkga2luZCBvZiBsb2NrIGhlcmUtLWpwdXRfZmluYWwoKSB1c2VzIFJD
VS4KKwkgKi8KKwlpZiAodW5saWtlbHkoYXRvbWljX2RlY19hbmRfdGVzdCgmbm9kZS0+eF9jb3Vu
dCkpKQorCQlqcHV0X2ZpbmFsKG5vZGUpOworCWVsc2UKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMzQ3MyIsIHJlaXNlcjRfc2NoZWR1bGFibGUoKSk7Cit9CisKK2V4dGVy
biB2b2lkIGpyZWxzZShqbm9kZSAqIG5vZGUpOworZXh0ZXJuIHZvaWQganJlbHNlX3RhaWwoam5v
ZGUgKiBub2RlKTsKKworZXh0ZXJuIGpub2RlICpqbm9kZV9yaXBfc3luYyhyZWlzZXI0X3RyZWUg
KiB0LCBqbm9kZSAqIG5vZGUpOworCisvKiByZXNvbHZlIHJhY2Ugd2l0aCBqcHV0ICovCitzdGF0
aWMgaW5saW5lIGpub2RlICpqbm9kZV9yaXBfY2hlY2socmVpc2VyNF90cmVlICogdHJlZSwgam5v
ZGUgKiBub2RlKQoreworCWlmICh1bmxpa2VseShKRl9JU1NFVChub2RlLCBKTk9ERV9SSVApKSkK
KwkJbm9kZSA9IGpub2RlX3JpcF9zeW5jKHRyZWUsIG5vZGUpOworCXJldHVybiBub2RlOworfQor
CitleHRlcm4gcmVpc2VyNF9rZXkgKmpub2RlX2J1aWxkX2tleShjb25zdCBqbm9kZSAqbm9kZSwg
cmVpc2VyNF9rZXkgKiBrZXkpOworCisjaWYgUkVJU0VSNF9ERUJVRworZXh0ZXJuIGludCBqbm9k
ZV9pbnZhcmlhbnRfZihjb25zdCBqbm9kZSAqbm9kZSwgY2hhciBjb25zdCAqKm1zZyk7CisjZW5k
aWYKKworZXh0ZXJuIGpub2RlX3BsdWdpbiBqbm9kZV9wbHVnaW5zW0xBU1RfSk5PREVfVFlQRV07
CisKKy8qIF9fSk5PREVfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAg
IExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2Rl
LW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZp
bGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQva2Fzc2lnbi5jIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L2thc3NpZ24uYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9rYXNzaWduLmMJ
MTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L2thc3NpZ24uYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NTIyMjE5MyArMDEwMApAQCAt
MCwwICsxLDY3NyBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFu
cyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKwor
LyogS2V5IGFzc2lnbm1lbnQgcG9saWN5IGltcGxlbWVudGF0aW9uICovCisKKy8qCisgKiBJbiBy
ZWlzZXI0IGV2ZXJ5IHBpZWNlIG9mIGZpbGUgc3lzdGVtIGRhdGEgYW5kIG1ldGEtZGF0YSBoYXMg
YSBrZXkuIEtleXMKKyAqIGFyZSB1c2VkIHRvIHN0b3JlIGluZm9ybWF0aW9uIGluIGFuZCByZXRy
aWV2ZSBpdCBmcm9tIHJlaXNlcjQgaW50ZXJuYWwKKyAqIHRyZWUuIEluIGFkZGl0aW9uIHRvIHRo
aXMsIGtleXMgZGVmaW5lIF9vcmRlcmluZ18gb2YgYWxsIGZpbGUgc3lzdGVtCisgKiBpbmZvcm1h
dGlvbjogdGhpbmdzIGhhdmluZyBjbG9zZSBrZXlzIGFyZSBwbGFjZWQgaW50byB0aGUgc2FtZSBv
cgorICogbmVpZ2hib3JpbmcgKGluIHRoZSB0cmVlIG9yZGVyKSBub2RlcyBvZiB0aGUgdHJlZS4g
QXMgb3VyIGJsb2NrIGFsbG9jYXRvcgorICogdHJpZXMgdG8gcmVzcGVjdCB0cmVlIG9yZGVyIChz
ZWUgZmx1c2guYyksIGtleXMgYWxzbyBkZWZpbmUgb3JkZXIgaW4gd2hpY2gKKyAqIHRoaW5ncyBh
cmUgbGFpZCBvdXQgb24gdGhlIGRpc2ssIGFuZCBoZW5jZSwgYWZmZWN0IHBlcmZvcm1hbmNlIGRp
cmVjdGx5LgorICoKKyAqIE9idmlvdXNseSwgYXNzaWdubWVudCBvZiBrZXlzIHRvIGRhdGEgYW5k
IG1ldGEtZGF0YSBzaG91bGQgYmUgY29uc2lzdGVudAorICogYWNyb3NzIHdob2xlIGZpbGUgc3lz
dGVtLiBBbGdvcml0aG0gdGhhdCBjYWxjdWxhdGVzIGEga2V5IGZvciBhIGdpdmVuIHBpZWNlCisg
KiBvZiBkYXRhIG9yIG1ldGEtZGF0YSBpcyByZWZlcnJlZCB0byBhcyAia2V5IGFzc2lnbm1lbnQi
LgorICoKKyAqIEtleSBhc3NpZ25tZW50IGlzIHRvbyBleHBlbnNpdmUgdG8gYmUgaW1wbGVtZW50
ZWQgYXMgYSBwbHVnaW4gKHRoYXQgaXMsCisgKiB3aXRoIGFuIGFiaWxpdHkgdG8gc3VwcG9ydCBk
aWZmZXJlbnQga2V5IGFzc2lnbm1lbnQgc2NoZW1hcyBpbiB0aGUgc2FtZQorICogY29tcGlsZWQg
a2VybmVsIGltYWdlKS4gQXMgYSBjb21wcm9taXNlLCBhbGwga2V5LWFzc2lnbm1lbnQgZnVuY3Rp
b25zIGFuZAorICogZGF0YS1zdHJ1Y3R1cmVzIGFyZSBjb2xsZWN0ZWQgaW4gdGhpcyBzaW5nbGUg
ZmlsZSwgc28gdGhhdCBtb2RpZmljYXRpb25zIHRvCisgKiBrZXkgYXNzaWdubWVudCBhbGdvcml0
aG0gY2FuIGJlIGxvY2FsaXplZC4gQWRkaXRpb25hbCBjaGFuZ2VzIG1heSBiZQorICogcmVxdWly
ZWQgaW4ga2V5LltjaF0uCisgKgorICogQ3VycmVudCBkZWZhdWx0IHJlaXNlcjQga2V5IGFzc2ln
bm1lbnQgYWxnb3JpdGhtIGlzIGR1YmJlZCAiUGxhbiBBIi4gQXMgb25lCisgKiBtYXkgZ3Vlc3Ms
IHRoZXJlIGlzICJQbGFuIEIiIHRvby4KKyAqCisgKi8KKworLyoKKyAqIEFkZGl0aW9uYWwgY29t
cGxpY2F0aW9uIHdpdGgga2V5IGFzc2lnbm1lbnQgaW1wbGVtZW50YXRpb24gaXMgYSByZXF1aXJl
bWVudAorICogdG8gc3VwcG9ydCBkaWZmZXJlbnQga2V5IGxlbmd0aC4KKyAqLworCisvKgorICog
ICAgICAgICAgICAgICAgICAgS0VZIEFTU0lHTk1FTlQ6IFBMQU4gQSwgTE9ORyBLRVlTLgorICoK
KyAqIERJUkVDVE9SWSBJVEVNUworICoKKyAqIHwgICAgICAgNjAgICAgIHwgNCB8IDcgfDF8ICAg
NTYgICAgICAgIHwgICAgICAgIDY0ICAgICAgICB8ICAgICAgICA2NCAgICAgICB8CisgKiArLS0t
LS0tLS0tLS0tLS0rLS0tKy0tLSstKy0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tKy0t
LS0tLS0tLS0tLS0tLS0tKworICogfCAgICBkaXJpZCAgICAgfCAwIHwgRiB8SHwgIHByZWZpeC0x
ICAgfCAgICBwcmVmaXgtMiAgICAgIHwgIHByZWZpeC0zL2hhc2ggIHwKKyAqICstLS0tLS0tLS0t
LS0tLSstLS0rLS0tKy0rLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0t
LS0tLS0tLS0rCisgKiB8ICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8ICAg
ICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgfAorICogfCAgICA4IGJ5dGVzICAgICAg
IHwgICAgICA4IGJ5dGVzICAgICAgfCAgICAgOCBieXRlcyAgICAgIHwgICAgIDggYnl0ZXMgICAg
IHwKKyAqCisgKiBkaXJpZCAgICAgICAgIG9iamVjdGlkIG9mIGRpcmVjdG9yeSB0aGlzIGl0ZW0g
aXMgZm9yCisgKgorICogRiAgICAgICAgICAgICBmaWJyYXRpb24sIHNlZSBmcy9yZWlzZXI0L3Bs
dWdpbi9maWJyYXRpb24uW2NoXQorICoKKyAqIEggICAgICAgICAgICAgMSBpZiBsYXN0IDggYnl0
ZXMgb2YgdGhlIGtleSBjb250YWluIGhhc2gsCisgKiAgICAgICAgICAgICAgIDAgaWYgbGFzdCA4
IGJ5dGVzIG9mIHRoZSBrZXkgY29udGFpbiBwcmVmaXgtMworICoKKyAqIHByZWZpeC0xICAgICAg
Zmlyc3QgNyBjaGFyYWN0ZXJzIG9mIGZpbGUgbmFtZS4KKyAqICAgICAgICAgICAgICAgUGFkZGVk
IGJ5IHplcm9lcyBpZiBuYW1lIGlzIG5vdCBsb25nIGVub3VnaC4KKyAqCisgKiBwcmVmaXgtMiAg
ICAgIG5leHQgOCBjaGFyYWN0ZXJzIG9mIHRoZSBmaWxlIG5hbWUuCisgKgorICogcHJlZml4LTMg
ICAgICBuZXh0IDggY2hhcmFjdGVycyBvZiB0aGUgZmlsZSBuYW1lLgorICoKKyAqIGhhc2ggICAg
ICAgICAgaGFzaCBvZiB0aGUgcmVzdCBvZiBmaWxlIG5hbWUgKGkuZS4sIHBvcnRpb24gb2YgZmls
ZQorICogICAgICAgICAgICAgICBuYW1lIG5vdCBpbmNsdWRlZCBpbnRvIHByZWZpeC0xIGFuZCBw
cmVmaXgtMikuCisgKgorICogRmlsZSBuYW1lcyBzaG9ydGVyIHRoYW4gMjMgKD09IDcgKyA4ICsg
OCkgY2hhcmFjdGVycyBhcmUgY29tcGxldGVseSBlbmNvZGVkCisgKiBpbiB0aGUga2V5LiBTdWNo
IGZpbGUgbmFtZXMgYXJlIGNhbGxlZCAic2hvcnQiLiBUaGV5IGFyZSBkaXN0aW5ndWlzaGVkIGJ5
IEgKKyAqIGJpdCBzZXQgMCBpbiB0aGUga2V5LgorICoKKyAqIE90aGVyIGZpbGUgbmFtZXMgYXJl
ICJsb25nIi4gRm9yIGxvbmcgbmFtZSwgSCBiaXQgaXMgMSwgYW5kIGZpcnN0IDE1ICg9PSA3Cisg
KiArIDgpIGNoYXJhY3RlcnMgYXJlIGVuY29kZWQgaW4gcHJlZml4LTEgYW5kIHByZWZpeC0yIHBv
cnRpb25zIG9mIHRoZQorICoga2V5LiBMYXN0IDggYnl0ZXMgb2YgdGhlIGtleSBhcmUgb2NjdXBp
ZWQgYnkgaGFzaCBvZiB0aGUgcmVtYWluaW5nCisgKiBjaGFyYWN0ZXJzIG9mIHRoZSBuYW1lLgor
ICoKKyAqIFRoaXMga2V5IGFzc2lnbm1lbnQgcmVhY2hlcyBmb2xsb3dpbmcgaW1wb3J0YW50IGdv
YWxzOgorICoKKyAqICAgICAoMSkgZGlyZWN0b3J5IGVudHJpZXMgYXJlIHNvcnRlZCBpbiBhcHBy
b3hpbWF0ZWx5IGxleGljb2dyYXBoaWNhbAorICogICAgIG9yZGVyLgorICoKKyAqICAgICAoMikg
Y29sbGlzaW9ucyAod2hlbiBtdWx0aXBsZSBkaXJlY3RvcnkgaXRlbXMgaGF2ZSB0aGUgc2FtZSBr
ZXkpLCB3aGlsZQorICogICAgIHByaW5jaXBhbGx5IHVuYXZvaWRhYmxlIGluIGEgdHJlZSB3aXRo
IGZpeGVkIGxlbmd0aCBrZXlzLCBhcmUgcmFyZS4KKyAqCisgKiBTVEFUIERBVEEKKyAqCisgKiAg
fCAgICAgICA2MCAgICAgfCA0IHwgICAgICAgNjQgICAgICAgIHwgNCB8ICAgICA2MCAgICAgICB8
ICAgICAgICA2NCAgICAgICB8CisgKiAgKy0tLS0tLS0tLS0tLS0tKy0tLSstLS0tLS0tLS0tLS0t
LS0tLSstLS0rLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0rCisgKiAgfCAgbG9jYWxp
dHkgaWQgfCAxIHwgICAgb3JkZXJpbmcgICAgIHwgMCB8ICBvYmplY3RpZCAgICB8ICAgICAgICAw
ICAgICAgICB8CisgKiAgKy0tLS0tLS0tLS0tLS0tKy0tLSstLS0tLS0tLS0tLS0tLS0tLSstLS0r
LS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0rCisgKiAgfCAgICAgICAgICAgICAgICAg
IHwgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICB8
CisgKiAgfCAgICA4IGJ5dGVzICAgICAgIHwgICAgOCBieXRlcyAgICAgIHwgICAgIDggYnl0ZXMg
ICAgICB8ICAgICA4IGJ5dGVzICAgICB8CisgKgorICogbG9jYWxpdHkgaWQgICAgIG9iamVjdCBp
ZCBvZiBhIGRpcmVjdG9yeSB3aGVyZSBmaXJzdCBuYW1lIHdhcyBjcmVhdGVkIGZvcgorICogICAg
ICAgICAgICAgICAgIHRoZSBvYmplY3QKKyAqCisgKiBvcmRlcmluZyAgICAgICAgY29weSBvZiBz
ZWNvbmQgOC1ieXRlIHBvcnRpb24gb2YgdGhlIGtleSBvZiBkaXJlY3RvcnkKKyAqICAgICAgICAg
ICAgICAgICBlbnRyeSBmb3IgdGhlIGZpcnN0IG5hbWUgb2YgdGhpcyBvYmplY3QuIE9yZGVyaW5n
IGhhcyBhIGZvcm0KKyAqICAgICAgICAgICAgICAgICAgICAgICAgIHsKKyAqICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgZmlicmF0aW9uIDo3OworICogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBoICAgICAgICAgOjE7CisgKiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHByZWZpeDEgICA6NTY7CisgKiAgICAgICAgICAgICAgICAgICAgICAgICB9CisgKiAg
ICAgICAgICAgICAgICAgc2VlIGRlc2NyaXB0aW9uIG9mIGtleSBmb3IgZGlyZWN0b3J5IGVudHJ5
IGFib3ZlLgorICoKKyAqIG9iamVjdGlkICAgICAgICBvYmplY3QgaWQgZm9yIHRoaXMgb2JqZWN0
CisgKgorICogVGhpcyBrZXkgYXNzaWdubWVudCBwb2xpY3kgaXMgZGVzaWduZWQgdG8ga2VlcCBz
dGF0LWRhdGEgaW4gdGhlIHNhbWUgb3JkZXIKKyAqIGFzIGNvcnJlc3BvbmRpbmcgZGlyZWN0b3J5
IGl0ZW1zLCB0aHVzIHNwZWVkaW5nIHVwIHJlYWRkaXIvc3RhdCB0eXBlcyBvZgorICogd29ya2xv
YWQuCisgKgorICogRklMRSBCT0RZCisgKgorICogIHwgICAgICAgNjAgICAgIHwgNCB8ICAgICAg
IDY0ICAgICAgICB8IDQgfCAgICAgNjAgICAgICAgfCAgICAgICAgNjQgICAgICAgfAorICogICst
LS0tLS0tLS0tLS0tLSstLS0rLS0tLS0tLS0tLS0tLS0tLS0rLS0tKy0tLS0tLS0tLS0tLS0tKy0t
LS0tLS0tLS0tLS0tLS0tKworICogIHwgIGxvY2FsaXR5IGlkIHwgNCB8ICAgIG9yZGVyaW5nICAg
ICB8IDAgfCAgb2JqZWN0aWQgICAgfCAgICAgIG9mZnNldCAgICAgfAorICogICstLS0tLS0tLS0t
LS0tLSstLS0rLS0tLS0tLS0tLS0tLS0tLS0rLS0tKy0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0t
LS0tLS0tKworICogIHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICB8ICAgICAg
ICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgfAorICogIHwgICAgOCBieXRlcyAgICAgICB8
ICAgIDggYnl0ZXMgICAgICB8ICAgICA4IGJ5dGVzICAgICAgfCAgICAgOCBieXRlcyAgICAgfAor
ICoKKyAqIGxvY2FsaXR5IGlkICAgICBvYmplY3QgaWQgb2YgYSBkaXJlY3Rvcnkgd2hlcmUgZmly
c3QgbmFtZSB3YXMgY3JlYXRlZCBmb3IKKyAqICAgICAgICAgICAgICAgICB0aGUgb2JqZWN0Cisg
KgorICogb3JkZXJpbmcgICAgICAgIHRoZSBzYW1lIGFzIGluIHRoZSBrZXkgb2Ygc3RhdC1kYXRh
IGZvciB0aGlzIG9iamVjdAorICoKKyAqIG9iamVjdGlkICAgICAgICBvYmplY3QgaWQgZm9yIHRo
aXMgb2JqZWN0CisgKgorICogb2Zmc2V0ICAgICAgICAgIGxvZ2ljYWwgb2Zmc2V0IGZyb20gdGhl
IGJlZ2lubmluZyBvZiB0aGlzIGZpbGUuCisgKiAgICAgICAgICAgICAgICAgTWVhc3VyZWQgaW4g
Ynl0ZXMuCisgKgorICoKKyAqICAgICAgICAgICAgICAgICAgIEtFWSBBU1NJR05NRU5UOiBQTEFO
IEEsIFNIT1JUIEtFWVMuCisgKgorICogRElSRUNUT1JZIElURU1TCisgKgorICogIHwgICAgICAg
NjAgICAgIHwgNCB8IDcgfDF8ICAgNTYgICAgICAgIHwgICAgICAgIDY0ICAgICAgIHwKKyAqICAr
LS0tLS0tLS0tLS0tLS0rLS0tKy0tLSstKy0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0r
CisgKiAgfCAgICBkaXJpZCAgICAgfCAwIHwgRiB8SHwgIHByZWZpeC0xICAgfCAgcHJlZml4LTIv
aGFzaCAgfAorICogICstLS0tLS0tLS0tLS0tLSstLS0rLS0tKy0rLS0tLS0tLS0tLS0tLSstLS0t
LS0tLS0tLS0tLS0tLSsKKyAqICB8ICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAg
ICB8ICAgICAgICAgICAgICAgICB8CisgKiAgfCAgICA4IGJ5dGVzICAgICAgIHwgICAgICA4IGJ5
dGVzICAgICAgfCAgICAgOCBieXRlcyAgICAgfAorICoKKyAqIGRpcmlkICAgICAgICAgb2JqZWN0
aWQgb2YgZGlyZWN0b3J5IHRoaXMgaXRlbSBpcyBmb3IKKyAqCisgKiBGICAgICAgICAgICAgIGZp
YnJhdGlvbiwgc2VlIGZzL3JlaXNlcjQvcGx1Z2luL2ZpYnJhdGlvbi5bY2hdCisgKgorICogSCAg
ICAgICAgICAgICAxIGlmIGxhc3QgOCBieXRlcyBvZiB0aGUga2V5IGNvbnRhaW4gaGFzaCwKKyAq
ICAgICAgICAgICAgICAgMCBpZiBsYXN0IDggYnl0ZXMgb2YgdGhlIGtleSBjb250YWluIHByZWZp
eC0yCisgKgorICogcHJlZml4LTEgICAgICBmaXJzdCA3IGNoYXJhY3RlcnMgb2YgZmlsZSBuYW1l
LgorICogICAgICAgICAgICAgICBQYWRkZWQgYnkgemVyb2VzIGlmIG5hbWUgaXMgbm90IGxvbmcg
ZW5vdWdoLgorICoKKyAqIHByZWZpeC0yICAgICAgbmV4dCA4IGNoYXJhY3RlcnMgb2YgdGhlIGZp
bGUgbmFtZS4KKyAqCisgKiBoYXNoICAgICAgICAgIGhhc2ggb2YgdGhlIHJlc3Qgb2YgZmlsZSBu
YW1lIChpLmUuLCBwb3J0aW9uIG9mIGZpbGUKKyAqICAgICAgICAgICAgICAgbmFtZSBub3QgaW5j
bHVkZWQgaW50byBwcmVmaXgtMSkuCisgKgorICogRmlsZSBuYW1lcyBzaG9ydGVyIHRoYW4gMTUg
KD09IDcgKyA4KSBjaGFyYWN0ZXJzIGFyZSBjb21wbGV0ZWx5IGVuY29kZWQgaW4KKyAqIHRoZSBr
ZXkuIFN1Y2ggZmlsZSBuYW1lcyBhcmUgY2FsbGVkICJzaG9ydCIuIFRoZXkgYXJlIGRpc3Rpbmd1
aXNoZWQgYnkgSAorICogYml0IHNldCBpbiB0aGUga2V5LgorICoKKyAqIE90aGVyIGZpbGUgbmFt
ZXMgYXJlICJsb25nIi4gRm9yIGxvbmcgbmFtZSwgSCBiaXQgaXMgMCwgYW5kIGZpcnN0IDcKKyAq
IGNoYXJhY3RlcnMgYXJlIGVuY29kZWQgaW4gcHJlZml4LTEgcG9ydGlvbiBvZiB0aGUga2V5LiBM
YXN0IDggYnl0ZXMgb2YgdGhlCisgKiBrZXkgYXJlIG9jY3VwaWVkIGJ5IGhhc2ggb2YgdGhlIHJl
bWFpbmluZyBjaGFyYWN0ZXJzIG9mIHRoZSBuYW1lLgorICoKKyAqIFNUQVQgREFUQQorICoKKyAq
ICB8ICAgICAgIDYwICAgICB8IDQgfCA0IHwgICAgIDYwICAgICAgIHwgICAgICAgIDY0ICAgICAg
IHwKKyAqICArLS0tLS0tLS0tLS0tLS0rLS0tKy0tLSstLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0t
LS0tLS0tLSsKKyAqICB8ICBsb2NhbGl0eSBpZCB8IDEgfCAwIHwgIG9iamVjdGlkICAgIHwgICAg
ICAgIDAgICAgICAgIHwKKyAqICArLS0tLS0tLS0tLS0tLS0rLS0tKy0tLSstLS0tLS0tLS0tLS0t
LSstLS0tLS0tLS0tLS0tLS0tLSsKKyAqICB8ICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAg
ICAgICAgIHwgICAgICAgICAgICAgICAgIHwKKyAqICB8ICAgIDggYnl0ZXMgICAgICAgfCAgICAg
OCBieXRlcyAgICAgIHwgICAgIDggYnl0ZXMgICAgIHwKKyAqCisgKiBsb2NhbGl0eSBpZCAgICAg
b2JqZWN0IGlkIG9mIGEgZGlyZWN0b3J5IHdoZXJlIGZpcnN0IG5hbWUgd2FzIGNyZWF0ZWQgZm9y
CisgKiAgICAgICAgICAgICAgICAgdGhlIG9iamVjdAorICoKKyAqIG9iamVjdGlkICAgICAgICBv
YmplY3QgaWQgZm9yIHRoaXMgb2JqZWN0CisgKgorICogRklMRSBCT0RZCisgKgorICogIHwgICAg
ICAgNjAgICAgIHwgNCB8IDQgfCAgICAgNjAgICAgICAgfCAgICAgICAgNjQgICAgICAgfAorICog
ICstLS0tLS0tLS0tLS0tLSstLS0rLS0tKy0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0t
KworICogIHwgIGxvY2FsaXR5IGlkIHwgNCB8IDAgfCAgb2JqZWN0aWQgICAgfCAgICAgIG9mZnNl
dCAgICAgfAorICogICstLS0tLS0tLS0tLS0tLSstLS0rLS0tKy0tLS0tLS0tLS0tLS0tKy0tLS0t
LS0tLS0tLS0tLS0tKworICogIHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAg
fCAgICAgICAgICAgICAgICAgfAorICogIHwgICAgOCBieXRlcyAgICAgICB8ICAgICA4IGJ5dGVz
ICAgICAgfCAgICAgOCBieXRlcyAgICAgfAorICoKKyAqIGxvY2FsaXR5IGlkICAgICBvYmplY3Qg
aWQgb2YgYSBkaXJlY3Rvcnkgd2hlcmUgZmlyc3QgbmFtZSB3YXMgY3JlYXRlZCBmb3IKKyAqICAg
ICAgICAgICAgICAgICB0aGUgb2JqZWN0CisgKgorICogb2JqZWN0aWQgICAgICAgIG9iamVjdCBp
ZCBmb3IgdGhpcyBvYmplY3QKKyAqCisgKiBvZmZzZXQgICAgICAgICAgbG9naWNhbCBvZmZzZXQg
ZnJvbSB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgZmlsZS4KKyAqICAgICAgICAgICAgICAgICBNZWFz
dXJlZCBpbiBieXRlcy4KKyAqCisgKgorICovCisKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1
ZGUgImtleS5oIgorI2luY2x1ZGUgImthc3NpZ24uaCIKKyNpbmNsdWRlICJ2ZnNfb3BzLmgiCisj
aW5jbHVkZSAiaW5vZGUuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2luY2x1ZGUgImRzY2FsZS5o
IgorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4JLyogZm9yIF9fdT8/ICAqLworI2luY2x1ZGUg
PGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Jsb2NrLCBldGMgICovCisKKy8qIGJp
dG1hc2sgZm9yIEggYml0IChzZWUgY29tbWVudCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgZmls
ZSAqLworc3RhdGljIGNvbnN0IF9fdTY0IGxvbmduYW1lX21hcmsgPSAweDAxMDAwMDAwMDAwMDAw
MDB1bGw7CisvKiBiaXRtYXNrIGZvciBGIGFuZCBIIHBvcnRpb25zIG9mIHRoZSBrZXkuICovCitz
dGF0aWMgY29uc3QgX191NjQgZmlicmF0aW9uX21hc2sgPSAweGZmMDAwMDAwMDAwMDAwMDB1bGw7
CisKKy8qIHJldHVybiB0cnVlIGlmIG5hbWUgaXMgbm90IGNvbXBsZXRlbHkgZW5jb2RlZCBpbiBA
a2V5ICovCitpbnQgaXNfbG9uZ25hbWVfa2V5KGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5KQorewor
CV9fdTY0IGhpZ2hwYXJ0OworCisJYXNzZXJ0KCJuaWtpdGEtMjg2MyIsIGtleSAhPSBOVUxMKTsK
KwlpZiAoZ2V0X2tleV90eXBlKGtleSkgIT0gS0VZX0ZJTEVfTkFNRV9NSU5PUikKKwkJcmVpc2Vy
NF9wcmludF9rZXkoIm9vcHMiLCBrZXkpOworCWFzc2VydCgibmlraXRhLTI4NjQiLCBnZXRfa2V5
X3R5cGUoa2V5KSA9PSBLRVlfRklMRV9OQU1FX01JTk9SKTsKKworCWlmIChSRUlTRVI0X0xBUkdF
X0tFWSkKKwkJaGlnaHBhcnQgPSBnZXRfa2V5X29yZGVyaW5nKGtleSk7CisJZWxzZQorCQloaWdo
cGFydCA9IGdldF9rZXlfb2JqZWN0aWQoa2V5KTsKKworCXJldHVybiAoaGlnaHBhcnQgJiBsb25n
bmFtZV9tYXJrKSA/IDEgOiAwOworfQorCisvKiByZXR1cm4gdHJ1ZSBpZiBAbmFtZSBpcyB0b28g
bG9uZyB0byBiZSBjb21wbGV0ZWx5IGVuY29kZWQgaW4gdGhlIGtleSAqLworaW50IGlzX2xvbmdu
YW1lKGNvbnN0IGNoYXIgKm5hbWUgVU5VU0VEX0FSRywgaW50IGxlbikKK3sKKwlpZiAoUkVJU0VS
NF9MQVJHRV9LRVkpCisJCXJldHVybiBsZW4gPiAyMzsKKwllbHNlCisJCXJldHVybiBsZW4gPiAx
NTsKK30KKworLyogY29kZSBhc2NpaSBzdHJpbmcgaW50byBfX3U2NC4KKworICAgUHV0IGNoYXJh
Y3RlcnMgb2YgQG5hbWUgaW50byByZXN1bHQgKEBzdHIpIG9uZSBhZnRlciBhbm90aGVyIHN0YXJ0
aW5nCisgICBmcm9tIEBzdGFydF9pZHgtdGggaGlnaGVzdCAoYXJpdGhtZXRpY2FsbHkpIGJ5dGUu
IFRoaXMgcHJvZHVjZXMKKyAgIGVuZGlhbi1zYWZlIGVuY29kaW5nLiBtZW1jcHkoMikgd2lsbCBu
b3QgZG8uCisKKyovCitzdGF0aWMgX191NjQgcGFja19zdHJpbmcoY29uc3QgY2hhciAqbmFtZSAv
KiBzdHJpbmcgdG8gZW5jb2RlICovICwKKwkJCSBpbnQgc3RhcnRfaWR4CS8qIGhpZ2hlc3QgYnl0
ZSBpbiByZXN1bHQgZnJvbQorCQkJCQkgKiB3aGljaCB0byBzdGFydCBlbmNvZGluZyAqLyApCit7
CisJdW5zaWduZWQgaTsKKwlfX3U2NCBzdHI7CisKKwlzdHIgPSAwOworCWZvciAoaSA9IDA7IChp
IDwgc2l6ZW9mIHN0ciAtIHN0YXJ0X2lkeCkgJiYgbmFtZVtpXTsgKytpKSB7CisJCXN0ciA8PD0g
ODsKKwkJc3RyIHw9ICh1bnNpZ25lZCBjaGFyKW5hbWVbaV07CisJfQorCXN0ciA8PD0gKHNpemVv
ZiBzdHIgLSBpIC0gc3RhcnRfaWR4KSA8PCAzOworCXJldHVybiBzdHI7Cit9CisKKy8qIG9wcG9z
aXRlIHRvIHBhY2tfc3RyaW5nKCkuIFRha2VzIHZhbHVlIHByb2R1Y2VkIGJ5IHBhY2tfc3RyaW5n
KCksIHJlc3RvcmVzCisgKiBzdHJpbmcgZW5jb2RlZCBpbiBpdCBhbmQgc3RvcmVzIHJlc3VsdCBp
biBAYnVmICovCitjaGFyICpyZWlzZXI0X3VucGFja19zdHJpbmcoX191NjQgdmFsdWUsIGNoYXIg
KmJ1ZikKK3sKKwlkbyB7CisJCSpidWYgPSB2YWx1ZSA+PiAoNjQgLSA4KTsKKwkJaWYgKCpidWYp
CisJCQkrK2J1ZjsKKwkJdmFsdWUgPDw9IDg7CisJfSB3aGlsZSAodmFsdWUgIT0gMCk7CisJKmJ1
ZiA9IDA7CisJcmV0dXJuIGJ1ZjsKK30KKworLyogb2J0YWluIG5hbWUgZW5jb2RlZCBpbiBAa2V5
IGFuZCBzdG9yZSBpdCBpbiBAYnVmICovCitjaGFyICpleHRyYWN0X25hbWVfZnJvbV9rZXkoY29u
c3QgcmVpc2VyNF9rZXkgKiBrZXksIGNoYXIgKmJ1ZikKK3sKKwljaGFyICpjOworCisJYXNzZXJ0
KCJuaWtpdGEtMjg2OCIsICFpc19sb25nbmFtZV9rZXkoa2V5KSk7CisKKwljID0gYnVmOworCWlm
IChSRUlTRVI0X0xBUkdFX0tFWSkgeworCQljID0gcmVpc2VyNF91bnBhY2tfc3RyaW5nKGdldF9r
ZXlfb3JkZXJpbmcoa2V5KSAmCisJCQkJCSAgfmZpYnJhdGlvbl9tYXNrLCBjKTsKKwkJYyA9IHJl
aXNlcjRfdW5wYWNrX3N0cmluZyhnZXRfa2V5X2Z1bGxvaWQoa2V5KSwgYyk7CisJfSBlbHNlCisJ
CWMgPSByZWlzZXI0X3VucGFja19zdHJpbmcoZ2V0X2tleV9mdWxsb2lkKGtleSkgJgorCQkJCQkg
IH5maWJyYXRpb25fbWFzaywgYyk7CisJcmVpc2VyNF91bnBhY2tfc3RyaW5nKGdldF9rZXlfb2Zm
c2V0KGtleSksIGMpOworCXJldHVybiBidWY7Cit9CisKKy8qKgorICogY29tcGxldGVfZW50cnlf
a2V5IC0gY2FsY3VsYXRlIGVudHJ5IGtleSBieSBuYW1lCisgKiBAZGlyOiBkaXJlY3Rvcnkgd2hl
cmUgZW50cnkgaXMgKG9yIHdpbGwgYmUpIGluCisgKiBAbmFtZTogbmFtZSB0byBjYWxjdWxhdGUg
a2V5IG9mCisgKiBAbGVuOiBsZW50aCBvZiBuYW1lCisgKiBAcmVzdWx0OiBwbGFjZSB0byBzdG9y
ZSByZXN1bHQgaW4KKyAqCisgKiBTZXRzIGZpZWxkcyBvZiBlbnRyeSBrZXkgQHJlc3VsdCB3aGlj
aCBkZXBlbmQgb24gZmlsZSBuYW1lLgorICogV2hlbiBSRUlTRVI0X0xBUkdFX0tFWSBpcyBkZWZp
bmVkIHRocmVlIGZpZWxkcyBvZiBAcmVzdWx0IGFyZSBzZXQ6IG9yZGVyaW5nLAorICogb2JqZWN0
aWQgYW5kIG9mZnNldC4gT3RoZXJ3aXNlLCBvYmplY3RpZCBhbmQgb2Zmc2V0IGFyZSBzZXQuCisg
Ki8KK3ZvaWQgY29tcGxldGVfZW50cnlfa2V5KGNvbnN0IHN0cnVjdCBpbm9kZSAqZGlyLCBjb25z
dCBjaGFyICpuYW1lLAorCQkJaW50IGxlbiwgcmVpc2VyNF9rZXkgKnJlc3VsdCkKK3sKKyNpZiBS
RUlTRVI0X0xBUkdFX0tFWQorCV9fdTY0IG9yZGVyaW5nOworCV9fdTY0IG9iamVjdGlkOworCV9f
dTY0IG9mZnNldDsKKworCWFzc2VydCgibmlraXRhLTExMzkiLCBkaXIgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMTE0MiIsIHJlc3VsdCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yODY3
Iiwgc3RybGVuKG5hbWUpID09IGxlbik7CisKKwkvKgorCSAqIGtleSBhbGxvY2F0aW9uIGFsZ29y
aXRobSBmb3IgZGlyZWN0b3J5IGVudHJpZXMgaW4gY2FzZSBvZiBsYXJnZQorCSAqIGtleXM6CisJ
ICoKKwkgKiBJZiBuYW1lIGlzIG5vdCBsb25nZXIgdGhhbiA3ICsgOCArIDggPSAyMyBjaGFyYWN0
ZXJzLCBwdXQgZmlyc3QgNworCSAqIGNoYXJhY3RlcnMgaW50byBvcmRlcmluZyBmaWVsZCBvZiBr
ZXksIG5leHQgOCBjaGFyYWN0ZXMgKGlmIGFueSkKKwkgKiBpbnRvIG9iamVjdGlkIGZpZWxkIG9m
IGtleSBhbmQgbmV4dCA4IG9uZXMgKG9mIGFueSkgaW50byBvZmZzZXQKKwkgKiBmaWVsZCBvZiBr
ZXkKKwkgKgorCSAqIElmIGZpbGUgbmFtZSBpcyBsb25nZXIgdGhhbiAyMyBjaGFyYWN0ZXJzLCBw
dXQgZmlyc3QgNyBjaGFyYWN0ZXJzCisJICogaW50byBrZXkncyBvcmRlcmluZywgbmV4dCA4IHRv
IG9iamVjdGlkIGFuZCBoYXNoIG9mIHJlbWFpbmluZworCSAqIGNoYXJhY3RlcnMgaW50byBvZmZz
ZXQgZmllbGQuCisJICoKKwkgKiBUbyBkaXN0aW5ndWlzaCBhYm92ZSBjYXNlcywgaW4gbGF0dGVy
IHNldCB1cCB1bnVzZWQgaGlnaCBiaXQgaW4KKwkgKiBvcmRlcmluZyBmaWVsZC4KKwkgKi8KKwor
CS8qIFswLTZdIGNoYXJhY3RlcnMgdG8gb3JkZXJpbmcgKi8KKwlvcmRlcmluZyA9IHBhY2tfc3Ry
aW5nKG5hbWUsIDEpOworCWlmIChsZW4gPiA3KSB7CisJCS8qIFs3LTE0XSBjaGFyYWN0ZXJzIHRv
IG9iamVjdGlkICovCisJCW9iamVjdGlkID0gcGFja19zdHJpbmcobmFtZSArIDcsIDApOworCQlp
ZiAobGVuID4gMTUpIHsKKwkJCWlmIChsZW4gPD0gMjMpIHsKKwkJCQkvKiBbMTUtMjNdIGNoYXJh
Y3RlcnMgdG8gb2Zmc2V0ICovCisJCQkJb2Zmc2V0ID0gcGFja19zdHJpbmcobmFtZSArIDE1LCAw
KTsKKwkJCX0gZWxzZSB7CisJCQkJLyogbm90ZSBpbiBhIGtleSB0aGUgZmFjdCB0aGF0IG9mZnNl
dCBjb250YWlucworCQkJCSAqIGhhc2ggKi8KKwkJCQlvcmRlcmluZyB8PSBsb25nbmFtZV9tYXJr
OworCisJCQkJLyogb2Zmc2V0IGlzIHRoZSBoYXNoIG9mIHRoZSBmaWxlIG5hbWUncyB0YWlsICov
CisJCQkJb2Zmc2V0ID0gaW5vZGVfaGFzaF9wbHVnaW4oZGlyKS0+aGFzaChuYW1lICsgMTUsCisJ
CQkJCQkJCSAgICAgIGxlbiAtIDE1KTsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCW9mZnNldCA9IDB1
bGw7CisJCX0KKwl9IGVsc2UgeworCQlvYmplY3RpZCA9IDB1bGw7CisJCW9mZnNldCA9IDB1bGw7
CisJfQorCisJYXNzZXJ0KCJuaWtpdGEtMzQ4MCIsIGlub2RlX2ZpYnJhdGlvbl9wbHVnaW4oZGly
KSAhPSBOVUxMKTsKKwlvcmRlcmluZyB8PSBpbm9kZV9maWJyYXRpb25fcGx1Z2luKGRpciktPmZp
YnJlKGRpciwgbmFtZSwgbGVuKTsKKworCXNldF9rZXlfb3JkZXJpbmcocmVzdWx0LCBvcmRlcmlu
Zyk7CisJc2V0X2tleV9mdWxsb2lkKHJlc3VsdCwgb2JqZWN0aWQpOworCXNldF9rZXlfb2Zmc2V0
KHJlc3VsdCwgb2Zmc2V0KTsKKwlyZXR1cm47CisKKyNlbHNlCisJX191NjQgb2JqZWN0aWQ7CisJ
X191NjQgb2Zmc2V0OworCisJYXNzZXJ0KCJuaWtpdGEtMTEzOSIsIGRpciAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS0xMTQyIiwgcmVzdWx0ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI4
NjciLCBzdHJsZW4obmFtZSkgPT0gbGVuKTsKKworCS8qCisJICoga2V5IGFsbG9jYXRpb24gYWxn
b3JpdGhtIGZvciBkaXJlY3RvcnkgZW50cmllcyBpbiBjYXNlIG9mIG5vdCBsYXJnZQorCSAqIGtl
eXM6CisJICoKKwkgKiBJZiBuYW1lIGlzIG5vdCBsb25nZXIgdGhhbiA3ICsgOCA9IDE1IGNoYXJh
Y3RlcnMsIHB1dCBmaXJzdCA3CisJICogY2hhcmFjdGVycyBpbnRvIG9iamVjdGlkIGZpZWxkIG9m
IGtleSwgbmV4dCA4IGNoYXJhY3RlcyAoaWYgYW55KQorCSAqIGludG8gb2Zmc2V0IGZpZWxkIG9m
IGtleQorCSAqCisJICogSWYgZmlsZSBuYW1lIGlzIGxvbmdlciB0aGFuIDE1IGNoYXJhY3RlcnMs
IHB1dCBmaXJzdCA3IGNoYXJhY3RlcnMKKwkgKiBpbnRvIGtleSdzIG9iamVjdGlkLCBhbmQgaGFz
aCBvZiByZW1haW5pbmcgY2hhcmFjdGVycyBpbnRvIG9mZnNldAorCSAqIGZpZWxkLgorCSAqCisJ
ICogVG8gZGlzdGluZ3Vpc2ggYWJvdmUgY2FzZXMsIGluIGxhdHRlciBzZXQgdXAgdW51c2VkIGhp
Z2ggYml0IGluCisJICogb2JqZWN0aWQgZmllbGQuCisJICovCisKKwkvKiBbMC02XSBjaGFyYWN0
ZXJzIHRvIG9iamVjdGlkICovCisJb2JqZWN0aWQgPSBwYWNrX3N0cmluZyhuYW1lLCAxKTsKKwlp
ZiAobGVuID4gNykgeworCQlpZiAobGVuIDw9IDE1KSB7CisJCQkvKiBbNy0xNF0gY2hhcmFjdGVy
cyB0byBvZmZzZXQgKi8KKwkJCW9mZnNldCA9IHBhY2tfc3RyaW5nKG5hbWUgKyA3LCAwKTsKKwkJ
fSBlbHNlIHsKKwkJCS8qIG5vdGUgaW4gYSBrZXkgdGhlIGZhY3QgdGhhdCBvZmZzZXQgY29udGFp
bnMgaGFzaC4gKi8KKwkJCW9iamVjdGlkIHw9IGxvbmduYW1lX21hcms7CisKKwkJCS8qIG9mZnNl
dCBpcyB0aGUgaGFzaCBvZiB0aGUgZmlsZSBuYW1lLiAqLworCQkJb2Zmc2V0ID0gaW5vZGVfaGFz
aF9wbHVnaW4oZGlyKS0+aGFzaChuYW1lICsgNywKKwkJCQkJCQkgICAgICBsZW4gLSA3KTsKKwkJ
fQorCX0gZWxzZQorCQlvZmZzZXQgPSAwdWxsOworCisJYXNzZXJ0KCJuaWtpdGEtMzQ4MCIsIGlu
b2RlX2ZpYnJhdGlvbl9wbHVnaW4oZGlyKSAhPSBOVUxMKTsKKwlvYmplY3RpZCB8PSBpbm9kZV9m
aWJyYXRpb25fcGx1Z2luKGRpciktPmZpYnJlKGRpciwgbmFtZSwgbGVuKTsKKworCXNldF9rZXlf
ZnVsbG9pZChyZXN1bHQsIG9iamVjdGlkKTsKKwlzZXRfa2V5X29mZnNldChyZXN1bHQsIG9mZnNl
dCk7CisJcmV0dXJuOworI2VuZGlmCQkJCS8qICEgUkVJU0VSNF9MQVJHRV9LRVkgKi8KK30KKwor
LyogdHJ1ZSwgaWYgQGtleSBpcyB0aGUga2V5IG9mICIuIiAqLworaW50IGlzX2RvdF9rZXkoY29u
c3QgcmVpc2VyNF9rZXkgKiBrZXkvKiBrZXkgdG8gY2hlY2sgKi8pCit7CisJYXNzZXJ0KCJuaWtp
dGEtMTcxNyIsIGtleSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xNzE4IiwgZ2V0X2tleV90
eXBlKGtleSkgPT0gS0VZX0ZJTEVfTkFNRV9NSU5PUik7CisJcmV0dXJuCisJICAgIChnZXRfa2V5
X29yZGVyaW5nKGtleSkgPT0gMHVsbCkgJiYKKwkgICAgKGdldF9rZXlfb2JqZWN0aWQoa2V5KSA9
PSAwdWxsKSAmJiAoZ2V0X2tleV9vZmZzZXQoa2V5KSA9PSAwdWxsKTsKK30KKworLyogYnVpbGQg
a2V5IGZvciBzdGF0LWRhdGEuCisKKyAgIHJldHVybiBrZXkgb2Ygc3RhdC1kYXRhIG9mIHRoaXMg
b2JqZWN0LiBUaGlzIHNob3VsZCBiZWNhbWUgc2QgcGx1Z2luCisgICBtZXRob2QgaW4gdGhlIGZ1
dHVyZS4gRm9yIG5vdywgbGV0IGl0IGJlIGhlcmUuCisKKyovCityZWlzZXI0X2tleSAqYnVpbGRf
c2Rfa2V5KGNvbnN0IHN0cnVjdCBpbm9kZSAqdGFyZ2V0IC8qIGlub2RlIG9mIGFuIG9iamVjdCAq
LyAsCisJCQkgIHJlaXNlcjRfa2V5ICogcmVzdWx0CS8qIHJlc3VsdGluZyBrZXkgb2YgQHRhcmdl
dAorCQkJCQkJICAgc3RhdC1kYXRhICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yNjEiLCByZXN1
bHQgIT0gTlVMTCk7CisKKwlyZWlzZXI0X2tleV9pbml0KHJlc3VsdCk7CisJc2V0X2tleV9sb2Nh
bGl0eShyZXN1bHQsIHJlaXNlcjRfaW5vZGVfZGF0YSh0YXJnZXQpLT5sb2NhbGl0eV9pZCk7CisJ
c2V0X2tleV9vcmRlcmluZyhyZXN1bHQsIGdldF9pbm9kZV9vcmRlcmluZyh0YXJnZXQpKTsKKwlz
ZXRfa2V5X29iamVjdGlkKHJlc3VsdCwgZ2V0X2lub2RlX29pZCh0YXJnZXQpKTsKKwlzZXRfa2V5
X3R5cGUocmVzdWx0LCBLRVlfU0RfTUlOT1IpOworCXNldF9rZXlfb2Zmc2V0KHJlc3VsdCwgKF9f
dTY0KSAwKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBlbmNvZGUgcGFydCBvZiBrZXkgaW50
byAmb2JqX2tleV9pZAorCisgICBUaGlzIGVuY29kZXMgaW50byBAaWQgcGFydCBvZiBAa2V5IHN1
ZmZpY2llbnQgdG8gcmVzdG9yZSBAa2V5IGxhdGVyLAorICAgZ2l2ZW4gdGhhdCBsYXR0ZXIgaXMg
a2V5IG9mIG9iamVjdCAoa2V5IG9mIHN0YXQtZGF0YSkuCisKKyAgIFNlZSAmb2JqX2tleV9pZAor
Ki8KK2ludCBidWlsZF9vYmpfa2V5X2lkKGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSB0
byBlbmNvZGUgKi8gLAorCQkgICAgIG9ial9rZXlfaWQgKiBpZC8qIGlkIHdoZXJlIGtleSBpcyBl
bmNvZGVkIGluICovKQoreworCWFzc2VydCgibmlraXRhLTExNTEiLCBrZXkgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTE1MiIsIGlkICE9IE5VTEwpOworCisJbWVtY3B5KGlkLCBrZXksIHNp
emVvZiAqaWQpOworCXJldHVybiAwOworfQorCisvKiBlbmNvZGUgcmVmZXJlbmNlIHRvIEBvYmog
aW4gQGlkLgorCisgICBUaGlzIGlzIGxpa2UgYnVpbGRfb2JqX2tleV9pZCgpIGFib3ZlLCBidXQg
dGFrZXMgaW5vZGUgYXMgcGFyYW1ldGVyLiAqLworaW50IGJ1aWxkX2lub2RlX2tleV9pZChjb25z
dCBzdHJ1Y3QgaW5vZGUgKm9iaiAvKiBvYmplY3QgdG8gYnVpbGQga2V5IG9mICovICwKKwkJICAg
ICAgIG9ial9rZXlfaWQgKiBpZC8qIHJlc3VsdCAqLykKK3sKKwlyZWlzZXI0X2tleSBzZGtleTsK
KworCWFzc2VydCgibmlraXRhLTExNjYiLCBvYmogIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEt
MTE2NyIsIGlkICE9IE5VTEwpOworCisJYnVpbGRfc2Rfa2V5KG9iaiwgJnNka2V5KTsKKwlidWls
ZF9vYmpfa2V5X2lkKCZzZGtleSwgaWQpOworCXJldHVybiAwOworfQorCisvKiBkZWNvZGUgQGlk
IGJhY2sgaW50byBAa2V5CisKKyAgIFJlc3RvcmUga2V5IG9mIG9iamVjdCBzdGF0LWRhdGEgZnJv
bSBAaWQuIFRoaXMgaXMgZHVhbCB0bworICAgYnVpbGRfb2JqX2tleV9pZCgpIGFib3ZlLgorKi8K
K2ludCBleHRyYWN0X2tleV9mcm9tX2lkKGNvbnN0IG9ial9rZXlfaWQgKiBpZAkvKiBvYmplY3Qg
a2V5IGlkIHRvIGV4dHJhY3Qga2V5CisJCQkJCQkgKiBmcm9tICovICwKKwkJCXJlaXNlcjRfa2V5
ICoga2V5LyogcmVzdWx0ICovKQoreworCWFzc2VydCgibmlraXRhLTExNTMiLCBpZCAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS0xMTU0Iiwga2V5ICE9IE5VTEwpOworCisJcmVpc2VyNF9rZXlf
aW5pdChrZXkpOworCW1lbWNweShrZXksIGlkLCBzaXplb2YgKmlkKTsKKwlyZXR1cm4gMDsKK30K
KworLyogZXh0cmFjdCBvYmplY3RpZCBvZiBkaXJlY3RvcnkgZnJvbSBrZXkgb2YgZGlyZWN0b3J5
IGVudHJ5IHdpdGhpbiBzYWlkCisgICBkaXJlY3RvcnkuCisgICAqLworb2lkX3QgZXh0cmFjdF9k
aXJfaWRfZnJvbV9rZXkoY29uc3QgcmVpc2VyNF9rZXkgKiBkZV9rZXkJLyoga2V5IG9mCisJCQkJ
CQkJCSAqIGRpcmVjdG9yeQorCQkJCQkJCQkgKiBlbnRyeSAqLyApCit7CisJYXNzZXJ0KCJuaWtp
dGEtMTMxNCIsIGRlX2tleSAhPSBOVUxMKTsKKwlyZXR1cm4gZ2V0X2tleV9sb2NhbGl0eShkZV9r
ZXkpOworfQorCisvKiBlbmNvZGUgaW50byBAaWQga2V5IG9mIGRpcmVjdG9yeSBlbnRyeS4KKwor
ICAgRW5jb2RlIGludG8gQGlkIGluZm9ybWF0aW9uIHN1ZmZpY2llbnQgdG8gbGF0ZXIgZGlzdGlu
Z3Vpc2ggZGlyZWN0b3J5CisgICBlbnRyaWVzIHdpdGhpbiB0aGUgc2FtZSBkaXJlY3RvcnkuIFRo
aXMgaXMgbm90IHdob2xlIGtleSwgYmVjYXVzZSBhbGwKKyAgIGRpcmVjdG9yeSBlbnRyaWVzIHdp
dGhpbiBkaXJlY3RvcnkgaXRlbSBzaGFyZSBsb2NhbGl0eSB3aGljaCBpcyBlcXVhbAorICAgdG8g
b2JqZWN0aWQgb2YgdGhlaXIgZGlyZWN0b3J5LgorCisqLworaW50IGJ1aWxkX2RlX2lkKGNvbnN0
IHN0cnVjdCBpbm9kZSAqZGlyIC8qIGlub2RlIG9mIGRpcmVjdG9yeSAqLyAsCisJCWNvbnN0IHN0
cnVjdCBxc3RyICpuYW1lCS8qIG5hbWUgdG8gYmUgZ2l2ZW4gdG8gQG9iaiBieQorCQkJCQkgKiBk
aXJlY3RvcnkgZW50cnkgYmVpbmcKKwkJCQkJICogY29uc3RydWN0ZWQgKi8gLAorCQlkZV9pZCAq
IGlkLyogc2hvcnQga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSAqLykKK3sKKwlyZWlzZXI0X2tleSBr
ZXk7CisKKwlhc3NlcnQoIm5pa2l0YS0xMjkwIiwgZGlyICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTEyOTIiLCBpZCAhPSBOVUxMKTsKKworCS8qIE5PVEUtTklLSVRBIHRoaXMgaXMgc3Vib3B0
aW1hbC4gKi8KKwlpbm9kZV9kaXJfcGx1Z2luKGRpciktPmJ1aWxkX2VudHJ5X2tleShkaXIsIG5h
bWUsICZrZXkpOworCXJldHVybiBidWlsZF9kZV9pZF9ieV9rZXkoJmtleSwgaWQpOworfQorCisv
KiBlbmNvZGUgaW50byBAaWQga2V5IG9mIGRpcmVjdG9yeSBlbnRyeS4KKworICAgRW5jb2RlIGlu
dG8gQGlkIGluZm9ybWF0aW9uIHN1ZmZpY2llbnQgdG8gbGF0ZXIgZGlzdGluZ3Vpc2ggZGlyZWN0
b3J5CisgICBlbnRyaWVzIHdpdGhpbiB0aGUgc2FtZSBkaXJlY3RvcnkuIFRoaXMgaXMgbm90IHdo
b2xlIGtleSwgYmVjYXVzZSBhbGwKKyAgIGRpcmVjdG9yeSBlbnRyaWVzIHdpdGhpbiBkaXJlY3Rv
cnkgaXRlbSBzaGFyZSBsb2NhbGl0eSB3aGljaCBpcyBlcXVhbAorICAgdG8gb2JqZWN0aWQgb2Yg
dGhlaXIgZGlyZWN0b3J5LgorCisqLworaW50IGJ1aWxkX2RlX2lkX2J5X2tleShjb25zdCByZWlz
ZXI0X2tleSAqIGVudHJ5X2tleQkvKiBmdWxsIGtleSBvZiBkaXJlY3RvcnkKKwkJCQkJCQkgKiBl
bnRyeSAqLyAsCisJCSAgICAgICBkZV9pZCAqIGlkLyogc2hvcnQga2V5IG9mIGRpcmVjdG9yeSBl
bnRyeSAqLykKK3sKKwltZW1jcHkoaWQsICgoX191NjQgKikgZW50cnlfa2V5KSArIDEsIHNpemVv
ZiAqaWQpOworCXJldHVybiAwOworfQorCisvKiByZXN0b3JlIGZyb20gQGlkIGtleSBvZiBkaXJl
Y3RvcnkgZW50cnkuCisKKyAgIEZ1bmN0aW9uIGR1YWwgdG8gYnVpbGRfZGVfaWQoKTogZ2l2ZW4g
QGlkIGFuZCBsb2NhbGl0eSwgYnVpbGQgZnVsbAorICAga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSB3
aXRoaW4gZGlyZWN0b3J5IGl0ZW0uCisKKyovCitpbnQgZXh0cmFjdF9rZXlfZnJvbV9kZV9pZChj
b25zdCBvaWRfdCBsb2NhbGl0eQkvKiBsb2NhbGl0eSBvZiBkaXJlY3RvcnkKKwkJCQkJCSAqIGVu
dHJ5ICovICwKKwkJCSAgIGNvbnN0IGRlX2lkICogaWQgLyogZGlyZWN0b3J5IGVudHJ5IGlkICov
ICwKKwkJCSAgIHJlaXNlcjRfa2V5ICoga2V5LyogcmVzdWx0ICovKQoreworCS8qIG5vIG5lZWQg
dG8gaW5pdGlhbGlzZSBrZXkgaGVyZTogYWxsIGZpZWxkcyBhcmUgb3ZlcndyaXR0ZW4gKi8KKwlt
ZW1jcHkoKChfX3U2NCAqKSBrZXkpICsgMSwgaWQsIHNpemVvZiAqaWQpOworCXNldF9rZXlfbG9j
YWxpdHkoa2V5LCBsb2NhbGl0eSk7CisJc2V0X2tleV90eXBlKGtleSwgS0VZX0ZJTEVfTkFNRV9N
SU5PUik7CisJcmV0dXJuIDA7Cit9CisKKy8qIGNvbXBhcmUgdHdvICZkZV9pZCdzICovCitjbXBf
dCBkZV9pZF9jbXAoY29uc3QgZGVfaWQgKiBpZDEgLyogZmlyc3QgJmRlX2lkIHRvIGNvbXBhcmUg
Ki8gLAorCQljb25zdCBkZV9pZCAqIGlkMi8qIHNlY29uZCAmZGVfaWQgdG8gY29tcGFyZSAqLykK
K3sKKwkvKiBOT1RFLU5JS0lUQSB1Z2x5IGltcGxlbWVudGF0aW9uICovCisJcmVpc2VyNF9rZXkg
azE7CisJcmVpc2VyNF9rZXkgazI7CisKKwlleHRyYWN0X2tleV9mcm9tX2RlX2lkKChvaWRfdCkg
MCwgaWQxLCAmazEpOworCWV4dHJhY3Rfa2V5X2Zyb21fZGVfaWQoKG9pZF90KSAwLCBpZDIsICZr
Mik7CisJcmV0dXJuIGtleWNtcCgmazEsICZrMik7Cit9CisKKy8qIGNvbXBhcmUgJmRlX2lkIHdp
dGgga2V5ICovCitjbXBfdCBkZV9pZF9rZXlfY21wKGNvbnN0IGRlX2lkICogaWQgLyogZGlyZWN0
b3J5IGVudHJ5IGlkIHRvIGNvbXBhcmUgKi8gLAorCQkgICAgY29uc3QgcmVpc2VyNF9rZXkgKiBr
ZXkvKiBrZXkgdG8gY29tcGFyZSAqLykKK3sKKwljbXBfdCByZXN1bHQ7CisJcmVpc2VyNF9rZXkg
KmsxOworCisJazEgPSAocmVpc2VyNF9rZXkgKikgKCgodW5zaWduZWQgbG9uZylpZCkgLSBzaXpl
b2Yga2V5LT5lbFswXSk7CisJcmVzdWx0ID0gS0VZX0RJRkZfRUwoazEsIGtleSwgMSk7CisJaWYg
KHJlc3VsdCA9PSBFUVVBTF9UTykgeworCQlyZXN1bHQgPSBLRVlfRElGRl9FTChrMSwga2V5LCAy
KTsKKwkJaWYgKFJFSVNFUjRfTEFSR0VfS0VZICYmIHJlc3VsdCA9PSBFUVVBTF9UTykKKwkJCXJl
c3VsdCA9IEtFWV9ESUZGX0VMKGsxLCBrZXksIDMpOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQor
CisvKgorICogcmV0dXJuIG51bWJlciBvZiBieXRlcyBuZWNlc3NhcnkgdG8gZW5jb2RlIEBpbm9k
ZSBpZGVudGl0eS4KKyAqLworaW50IGlub2RlX29ud2lyZV9zaXplKGNvbnN0IHN0cnVjdCBpbm9k
ZSAqaW5vZGUpCit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IGRzY2FsZV9ieXRlc190b193
cml0ZShnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisJcmVzdWx0ICs9IGRzY2FsZV9ieXRlc190b193
cml0ZShnZXRfaW5vZGVfbG9jYWxpdHkoaW5vZGUpKTsKKworCS8qCisJICogb3JkZXJpbmcgaXMg
bGFyZ2UgKGl0IHVzdWFsbHkgaGFzIGhpZ2hlc3QgYml0cyBzZXQpLCBzbyBpdCBtYWtlcworCSAq
IGxpdHRsZSBzZW5zZSB0byBkc2NhbGUgaXQuCisJICovCisJaWYgKFJFSVNFUjRfTEFSR0VfS0VZ
KQorCQlyZXN1bHQgKz0gc2l6ZW9mKGdldF9pbm9kZV9vcmRlcmluZyhpbm9kZSkpOworCXJldHVy
biByZXN1bHQ7Cit9CisKKy8qCisgKiBlbmNvZGUgQGlub2RlIGlkZW50aXR5IGF0IEBzdGFydAor
ICovCitjaGFyICpidWlsZF9pbm9kZV9vbndpcmUoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSwg
Y2hhciAqc3RhcnQpCit7CisJc3RhcnQgKz0gZHNjYWxlX3dyaXRlKHN0YXJ0LCBnZXRfaW5vZGVf
bG9jYWxpdHkoaW5vZGUpKTsKKwlzdGFydCArPSBkc2NhbGVfd3JpdGUoc3RhcnQsIGdldF9pbm9k
ZV9vaWQoaW5vZGUpKTsKKworCWlmIChSRUlTRVI0X0xBUkdFX0tFWSkgeworCQlwdXRfdW5hbGln
bmVkKGNwdV90b19sZTY0KGdldF9pbm9kZV9vcmRlcmluZyhpbm9kZSkpLCAoX19sZTY0ICopc3Rh
cnQpOworCQlzdGFydCArPSBzaXplb2YoZ2V0X2lub2RlX29yZGVyaW5nKGlub2RlKSk7CisJfQor
CXJldHVybiBzdGFydDsKK30KKworLyoKKyAqIGV4dHJhY3Qga2V5IHRoYXQgd2FzIHByZXZpb3Vz
bHkgZW5jb2RlZCBieSBidWlsZF9pbm9kZV9vbndpcmUoKSBhdCBAYWRkcgorICovCitjaGFyICpl
eHRyYWN0X29ial9rZXlfaWRfZnJvbV9vbndpcmUoY2hhciAqYWRkciwgb2JqX2tleV9pZCAqIGtl
eV9pZCkKK3sKKwlfX3U2NCB2YWw7CisKKwlhZGRyICs9IGRzY2FsZV9yZWFkKGFkZHIsICZ2YWwp
OworCXZhbCA9ICh2YWwgPDwgS0VZX0xPQ0FMSVRZX1NISUZUKSB8IEtFWV9TRF9NSU5PUjsKKwlw
dXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KHZhbCksIChfX2xlNjQgKilrZXlfaWQtPmxvY2FsaXR5
KTsKKwlhZGRyICs9IGRzY2FsZV9yZWFkKGFkZHIsICZ2YWwpOworCXB1dF91bmFsaWduZWQoY3B1
X3RvX2xlNjQodmFsKSwgKF9fbGU2NCAqKWtleV9pZC0+b2JqZWN0aWQpOworI2lmIFJFSVNFUjRf
TEFSR0VfS0VZCisJbWVtY3B5KCZrZXlfaWQtPm9yZGVyaW5nLCBhZGRyLCBzaXplb2Yga2V5X2lk
LT5vcmRlcmluZyk7CisJYWRkciArPSBzaXplb2Yga2V5X2lkLT5vcmRlcmluZzsKKyNlbmRpZgor
CXJldHVybiBhZGRyOworfQorCisvKgorICogc2tpcCBhIGtleSB0aGF0IHdhcyBwcmV2aW91c2x5
IGVuY29kZWQgYnkgYnVpbGRfaW5vZGVfb253aXJlKCkgYXQgQGFkZHIKKyAqIEZJWE1FOiBoYW5k
bGUgSU8gZXJyb3JzLgorICovCitjaGFyICogbG9jYXRlX29ial9rZXlfaWRfb253aXJlKGNoYXIg
KiBhZGRyKQoreworCS8qIGxvY2FsaXR5ICovCisJYWRkciArPSBkc2NhbGVfYnl0ZXNfdG9fcmVh
ZChhZGRyKTsKKwkvKiBvYmplY3RpZCAqLworCWFkZHIgKz0gZHNjYWxlX2J5dGVzX3RvX3JlYWQo
YWRkcik7CisjaWYgUkVJU0VSNF9MQVJHRV9LRVkKKwlhZGRyICs9IHNpemVvZiAoKG9ial9rZXlf
aWQgKikwKS0+b3JkZXJpbmc7CisjZW5kaWYKKwlyZXR1cm4gYWRkcjsKK30KKworLyogTWFrZSBM
aW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6
ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWIt
d2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQva2Fzc2lnbi5oIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L2thc3NpZ24uaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC9rYXNzaWduLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxp
bnV4LTUuNC4xNy9mcy9yZWlzZXI0L2thc3NpZ24uaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NTIy
MjE5MyArMDEwMApAQCAtMCwwICsxLDExMSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIw
MDMsIDIwMDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2Vy
NC9SRUFETUUgKi8KKworLyogS2V5IGFzc2lnbm1lbnQgcG9saWN5IGludGVyZmFjZS4gU2VlIGth
c3NpZ24uYyBmb3IgZGV0YWlscy4gKi8KKworI2lmICFkZWZpbmVkKF9fS0FTU0lHTl9IX18pCisj
ZGVmaW5lIF9fS0FTU0lHTl9IX18KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJr
ZXkuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkv
KiBmb3IgX191Pz8gICovCisjaW5jbHVkZSA8bGludXgvZnMuaD4JCS8qIGZvciBzdHJ1Y3Qgc3Vw
ZXJfYmxvY2ssIGV0YyAgKi8KKyNpbmNsdWRlIDxsaW51eC9kY2FjaGUuaD4JLyogZm9yIHN0cnVj
dCBxc3RyICovCisKKy8qIGtleSBhc3NpZ25tZW50IGZ1bmN0aW9ucyAqLworCisvKiBJbmZvcm1h
dGlvbiBmcm9tIHdoaWNoIGtleSBvZiBmaWxlIHN0YXQtZGF0YSBjYW4gYmUgdW5pcXVlbHkKKyAg
IHJlc3RvcmVkLiBUaGlzIGRlcGVuZHMgb24ga2V5IGFzc2lnbm1lbnQgcG9saWN5IGZvcgorICAg
c3RhdC1kYXRhLiBDdXJyZW50bHkgaXQncyBlbm91Z2ggdG8gc3RvcmUgb2JqZWN0IGlkIGFuZCBs
b2NhbGl0eSBpZAorICAgKDYwKzYwPT0xMjApIGJpdHMsIGJlY2F1c2UgbWlub3IgcGFja2luZyBs
b2NhbGl0eSBhbmQgb2Zmc2V0IG9mCisgICBzdGF0LWRhdGEga2V5IGFyZSBhbHdheXMga25vd24g
Y29uc3RhbnRzOiBLRVlfU0RfTUlOT1IgYW5kIDAKKyAgIHJlc3BlY3RpdmVseS4gRm9yIHNpbXBs
aWNpdHkgNCBiaXRzIGFyZSB3YXN0ZWQgaW4gZWFjaCBpZCwgYW5kIGp1c3QKKyAgIHR3byA2NCBi
aXQgaW50ZWdlcnMgYXJlIHN0b3JlZC4KKworICAgVGhpcyBmaWVsZCBoYXMgdG8gYmUgYnl0ZS1h
bGlnbmVkLCBiZWNhdXNlIHdlIGRvbid0IHdhbnQgdG8gd2FzdGUKKyAgIHNwYWNlIGluIGRpcmVj
dG9yeSBlbnRyaWVzLiBUaGVyZSBpcyBhbm90aGVyIHNpZGUgb2YgYSBjb2luIG9mCisgICBjb3Vy
c2U6IHdlIHdhc3RlIENQVSBhbmQgYnVzIGJhbmR3aWR0aCBpbiBzdGVhZCwgYnkgY29weWluZyBk
YXRhIGJhY2sKKyAgIGFuZCBmb3J0aC4KKworICAgTmV4dCBvcHRpbWl6YXRpb246ICZvYmpfa2V5
X2lkIGlzIG1haW5seSB1c2VkIHRvIGFkZHJlc3Mgc3RhdCBkYXRhIGZyb20KKyAgIGRpcmVjdG9y
eSBlbnRyaWVzLiBVbmRlciB0aGUgYXNzdW1wdGlvbiB0aGF0IG1ham9yaXR5IG9mIGZpbGVzIG9u
bHkgaGF2ZQorICAgb25seSBuYW1lIChvbmUgaGFyZCBsaW5rKSBmcm9tICp0aGUqIHBhcmVudCBk
aXJlY3RvcnkgaXQgc2VlbXMgcmVhc29uYWJsZQorICAgdG8gb25seSBzdG9yZSBvYmplY3RpZCBv
ZiBzdGF0IGRhdGEgYW5kIHRha2UgaXRzIGxvY2FsaXR5IGZyb20ga2V5IG9mCisgICBkaXJlY3Rv
cnkgaXRlbS4KKworICAgVGhpcyByZXF1aXJlcyBzb21lIGZsYWcgdG8gYmUgYWRkZWQgdG8gdGhl
ICZvYmpfa2V5X2lkIHRvIGRpc3Rpbmd1aXNoCisgICBiZXR3ZWVuIHRoZXNlIHR3byBjYXNlcy4g
UmVtYWluaW5nIGJpdHMgaW4gZmxhZyBieXRlIGFyZSB0aGVuIGFza2luZyB0byBiZQorICAgdXNl
ZCB0byBzdG9yZSBmaWxlIHR5cGUuCisKKyAgIFRoaXMgb3B0aW1pemF0aW9uIHJlcXVpcmVzIGNo
YW5nZXMgaW4gZGlyZWN0b3J5IGl0ZW0gaGFuZGxpbmcgY29kZS4KKworKi8KK3R5cGVkZWYgc3Ry
dWN0IG9ial9rZXlfaWQgeworCWQ4IGxvY2FsaXR5W3NpemVvZihfX3U2NCldOworCSBPTl9MQVJH
RV9LRVkoZDggb3JkZXJpbmdbc2l6ZW9mKF9fdTY0KV07CisJICAgICkKKwlkOCBvYmplY3RpZFtz
aXplb2YoX191NjQpXTsKK30KK29ial9rZXlfaWQ7CisKKy8qIEluZm9ybWF0aW9uIHN1ZmZpY2ll
bnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgZGlyZWN0b3J5IGVudHJ5IHdpdGhpbgorICAgY29tcHJl
c3NlZCBkaXJlY3RvcnkgaXRlbS4KKworICAgRm9yIGFsaWdubWVudCBpc3N1ZXMgc2VlICZvYmpf
a2V5X2lkIGFib3ZlLgorKi8KK3R5cGVkZWYgc3RydWN0IGRlX2lkIHsKKwlPTl9MQVJHRV9LRVko
ZDggb3JkZXJpbmdbc2l6ZW9mKF9fdTY0KV07KQorCWQ4IG9iamVjdGlkW3NpemVvZihfX3U2NCld
OworCWQ4IG9mZnNldFtzaXplb2YoX191NjQpXTsKK30KK2RlX2lkOworCitleHRlcm4gaW50IGlu
b2RlX29ud2lyZV9zaXplKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqKTsKK2V4dGVybiBjaGFyICpi
dWlsZF9pbm9kZV9vbndpcmUoY29uc3Qgc3RydWN0IGlub2RlICpvYmosIGNoYXIgKmFyZWEpOwor
ZXh0ZXJuIGNoYXIgKmxvY2F0ZV9vYmpfa2V5X2lkX29ud2lyZShjaGFyICphcmVhKTsKK2V4dGVy
biBjaGFyICpleHRyYWN0X29ial9rZXlfaWRfZnJvbV9vbndpcmUoY2hhciAqYXJlYSwgb2JqX2tl
eV9pZCAqIGtleV9pZCk7CisKK2V4dGVybiBpbnQgYnVpbGRfaW5vZGVfa2V5X2lkKGNvbnN0IHN0
cnVjdCBpbm9kZSAqb2JqLCBvYmpfa2V5X2lkICogaWQpOworZXh0ZXJuIGludCBleHRyYWN0X2tl
eV9mcm9tX2lkKGNvbnN0IG9ial9rZXlfaWQgKiBpZCwgcmVpc2VyNF9rZXkgKiBrZXkpOworZXh0
ZXJuIGludCBidWlsZF9vYmpfa2V5X2lkKGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCBvYmpfa2V5
X2lkICogaWQpOworZXh0ZXJuIG9pZF90IGV4dHJhY3RfZGlyX2lkX2Zyb21fa2V5KGNvbnN0IHJl
aXNlcjRfa2V5ICogZGVfa2V5KTsKK2V4dGVybiBpbnQgYnVpbGRfZGVfaWQoY29uc3Qgc3RydWN0
IGlub2RlICpkaXIsIGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLAorCQkgICAgICAgZGVfaWQgKiBp
ZCk7CitleHRlcm4gaW50IGJ1aWxkX2RlX2lkX2J5X2tleShjb25zdCByZWlzZXI0X2tleSAqIGVu
dHJ5X2tleSwgZGVfaWQgKiBpZCk7CitleHRlcm4gaW50IGV4dHJhY3Rfa2V5X2Zyb21fZGVfaWQo
Y29uc3Qgb2lkX3QgbG9jYWxpdHksIGNvbnN0IGRlX2lkICogaWQsCisJCQkJICByZWlzZXI0X2tl
eSAqIGtleSk7CitleHRlcm4gY21wX3QgZGVfaWRfY21wKGNvbnN0IGRlX2lkICogaWQxLCBjb25z
dCBkZV9pZCAqIGlkMik7CitleHRlcm4gY21wX3QgZGVfaWRfa2V5X2NtcChjb25zdCBkZV9pZCAq
IGlkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSk7CisKK2V4dGVybiBpbnQgYnVpbGRfcmVhZGRp
cl9rZXlfY29tbW9uKHN0cnVjdCBmaWxlICpkaXIsIHJlaXNlcjRfa2V5ICogcmVzdWx0KTsKK2V4
dGVybiB2b2lkIGJ1aWxkX2VudHJ5X2tleV9jb21tb24oY29uc3Qgc3RydWN0IGlub2RlICpkaXIs
CisJCQkJICAgY29uc3Qgc3RydWN0IHFzdHIgKm5hbWUsCisJCQkJICAgcmVpc2VyNF9rZXkgKiBy
ZXN1bHQpOworZXh0ZXJuIHZvaWQgYnVpbGRfZW50cnlfa2V5X3N0YWJsZV9lbnRyeShjb25zdCBz
dHJ1Y3QgaW5vZGUgKmRpciwKKwkJCQkJIGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLAorCQkJCQkg
cmVpc2VyNF9rZXkgKiByZXN1bHQpOworZXh0ZXJuIGludCBpc19kb3Rfa2V5KGNvbnN0IHJlaXNl
cjRfa2V5ICoga2V5KTsKK2V4dGVybiByZWlzZXI0X2tleSAqYnVpbGRfc2Rfa2V5KGNvbnN0IHN0
cnVjdCBpbm9kZSAqdGFyZ2V0LAorCQkJCSByZWlzZXI0X2tleSAqIHJlc3VsdCk7CisKK2V4dGVy
biBpbnQgaXNfbG9uZ25hbWVfa2V5KGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5KTsKK2V4dGVybiBp
bnQgaXNfbG9uZ25hbWUoY29uc3QgY2hhciAqbmFtZSwgaW50IGxlbik7CitleHRlcm4gY2hhciAq
ZXh0cmFjdF9uYW1lX2Zyb21fa2V5KGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCBjaGFyICpidWYp
OworZXh0ZXJuIGNoYXIgKnJlaXNlcjRfdW5wYWNrX3N0cmluZyhfX3U2NCB2YWx1ZSwgY2hhciAq
YnVmKTsKK2V4dGVybiB2b2lkIGNvbXBsZXRlX2VudHJ5X2tleShjb25zdCBzdHJ1Y3QgaW5vZGUg
KmRpciwgY29uc3QgY2hhciAqbmFtZSwKKwkJCSAgICAgICBpbnQgbGVuLCByZWlzZXI0X2tleSAq
cmVzdWx0KTsKKworLyogX19LQVNTSUdOX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMg
aGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZS
IgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRo
OiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJl
ZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L0tjb25maWcgbGludXgtNS40LjE3
L2ZzL3JlaXNlcjQvS2NvbmZpZwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9LY29u
ZmlnCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcv
ZnMvcmVpc2VyNC9LY29uZmlnCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU1MjIyMTkzICswMTAwCkBA
IC0wLDAgKzEsMzYgQEAKK2NvbmZpZyBSRUlTRVI0X0ZTCisJdHJpc3RhdGUgIlJlaXNlcjQgKEVY
UEVSSU1FTlRBTCkiCisJc2VsZWN0IFpMSUJfSU5GTEFURQorCXNlbGVjdCBaTElCX0RFRkxBVEUK
KwlzZWxlY3QgTFpPX0NPTVBSRVNTCisJc2VsZWN0IExaT19ERUNPTVBSRVNTCisJc2VsZWN0IFpT
VERfQ09NUFJFU1MKKwlzZWxlY3QgWlNURF9ERUNPTVBSRVNTCisJc2VsZWN0IENSWVBUTworCXNl
bGVjdCBDUllQVE9fQ1JDMzJDCisJaGVscAorCSAgUmVpc2VyNCBpcyBhIGZpbGVzeXN0ZW0gdGhh
dCBwZXJmb3JtcyBhbGwgZmlsZXN5c3RlbSBvcGVyYXRpb25zCisJICBhcyBhdG9taWMgdHJhbnNh
Y3Rpb25zLCB3aGljaCBtZWFucyB0aGF0IGl0IGVpdGhlciBwZXJmb3JtcyBhCisJICB3cml0ZSwg
b3IgaXQgZG9lcyBub3QsIGFuZCBpbiB0aGUgZXZlbnQgb2YgYSBjcmFzaCBpdCBkb2VzIG5vdAor
CSAgcGFydGlhbGx5IHBlcmZvcm0gaXQgb3IgY29ycnVwdCBpdC4KKworCSAgSXQgc3RvcmVzIGZp
bGVzIGluIGRhbmNpbmcgdHJlZXMsIHdoaWNoIGFyZSBsaWtlIGJhbGFuY2VkIHRyZWVzIGJ1dAor
CSAgZmFzdGVyLiAgSXQgcGFja3Mgc21hbGwgZmlsZXMgdG9nZXRoZXIgc28gdGhhdCB0aGV5IHNo
YXJlIGJsb2NrcworCSAgd2l0aG91dCB3YXN0aW5nIHNwYWNlLiAgVGhpcyBtZWFucyB5b3UgY2Fu
IHVzZSBpdCB0byBzdG9yZSByZWFsbHkKKwkgIHNtYWxsIGZpbGVzLiAgSXQgYWxzbyBtZWFucyB0
aGF0IGl0IHNhdmVzIHlvdSBkaXNrIHNwYWNlLiAgSXQgYXZvaWRzCisJICBoYXNzbGluZyB5b3Ug
d2l0aCBhbmFjaHJvbmlzbXMgbGlrZSBoYXZpbmcgYSBtYXhpbXVtIG51bWJlciBvZgorCSAgaW5v
ZGVzLCBhbmQgd2FzdGluZyBzcGFjZSBpZiB5b3UgdXNlIGxlc3MgdGhhbiB0aGF0IG51bWJlci4K
KworCSAgUmVpc2VyNCBpcyBhIGRpc3RpbmN0IGZpbGVzeXN0ZW0gdHlwZSBmcm9tIHJlaXNlcmZz
IChWMykuCisJICBJdCdzIHRoZXJlZm9yZSBub3QgcG9zc2libGUgdG8gdXNlIHJlaXNlcmZzIGZp
bGUgc3lzdGVtcworCSAgd2l0aCByZWlzZXI0LgorCisJICBUbyBsZWFybiBtb3JlIGFib3V0IHJl
aXNlcjQsIGdvIHRvIGh0dHA6Ly93d3cubmFtZXN5cy5jb20KKworY29uZmlnIFJFSVNFUjRfREVC
VUcKKwlib29sICJFbmFibGUgcmVpc2VyNCBkZWJ1ZyBtb2RlIgorCWRlcGVuZHMgb24gUkVJU0VS
NF9GUworCWhlbHAKKwkgIERvbid0IHVzZSB0aGlzIHVubGVzcyB5b3UgYXJlIGRlYnVnZ2luZyBy
ZWlzZXI0LgorCisJICBJZiB1bnN1cmUsIHNheSBOLgpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2tleS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L2tleS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2tleS5jCTE5NzAtMDEt
MDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9r
ZXkuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NTIyMjE5MyArMDEwMApAQCAtMCwwICsxLDEzOCBA
QAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2lu
ZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogS2V5IG1hbmlwdWxhdGlv
bnMuICovCisKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUg
InN1cGVyLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgorCisjaW5jbHVkZSA8bGludXgvdHlwZXMu
aD4JLyogZm9yIF9fdT8/ICAqLworCisvKiBNaW5pbWFsIHBvc3NpYmxlIGtleTogYWxsIGNvbXBv
bmVudHMgYXJlIHplcm8uIEl0IGlzIHByZXN1bWVkIHRoYXQgdGhpcyBpcworICAgaW5kZXBlbmRl
bnQgb2Yga2V5IHNjaGVtZS4gKi8KK3N0YXRpYyBjb25zdCByZWlzZXI0X2tleSBNSU5JTUFMX0tF
WSA9IHsKKwkuZWwgPSB7CisJCTB1bGwsCisJCU9OX0xBUkdFX0tFWSgwdWxsLCkKKwkJMHVsbCwK
KwkJMHVsbAorCX0KK307CisKKy8qIE1heGltYWwgcG9zc2libGUga2V5OiBhbGwgY29tcG9uZW50
cyBhcmUgfjAuIEl0IGlzIHByZXN1bWVkIHRoYXQgdGhpcyBpcworICAgaW5kZXBlbmRlbnQgb2Yg
a2V5IHNjaGVtZS4gKi8KK3N0YXRpYyBjb25zdCByZWlzZXI0X2tleSBNQVhJTUFMX0tFWSA9IHsK
KwkuZWwgPSB7CisJCV9fY29uc3RhbnRfY3B1X3RvX2xlNjQofjB1bGwpLAorCQlPTl9MQVJHRV9L
RVkoX19jb25zdGFudF9jcHVfdG9fbGU2NCh+MHVsbCksKQorCQlfX2NvbnN0YW50X2NwdV90b19s
ZTY0KH4wdWxsKSwKKwkJX19jb25zdGFudF9jcHVfdG9fbGU2NCh+MHVsbCkKKwl9Cit9OworCisv
KiBJbml0aWFsaXplIGtleS4gKi8KK3ZvaWQgcmVpc2VyNF9rZXlfaW5pdChyZWlzZXI0X2tleSAq
IGtleS8qIGtleSB0byBpbml0ICovKQoreworCWFzc2VydCgibmlraXRhLTExNjkiLCBrZXkgIT0g
TlVMTCk7CisJbWVtc2V0KGtleSwgMCwgc2l6ZW9mICprZXkpOworfQorCisvKiBtaW5pbWFsIHBv
c3NpYmxlIGtleSBpbiB0aGUgdHJlZS4gUmV0dXJuIHBvaW50ZXIgdG8gdGhlIHN0YXRpYyBzdG9y
YWdlLiAqLworY29uc3QgcmVpc2VyNF9rZXkgKiByZWlzZXI0X21pbl9rZXkodm9pZCkKK3sKKwly
ZXR1cm4gJk1JTklNQUxfS0VZOworfQorCisvKiBtYXhpbXVtIHBvc3NpYmxlIGtleSBpbiB0aGUg
dHJlZS4gUmV0dXJuIHBvaW50ZXIgdG8gdGhlIHN0YXRpYyBzdG9yYWdlLiAqLworY29uc3QgcmVp
c2VyNF9rZXkgKiByZWlzZXI0X21heF9rZXkodm9pZCkKK3sKKwlyZXR1cm4gJk1BWElNQUxfS0VZ
OworfQorCisjaWYgUkVJU0VSNF9ERUJVRworLyogZGVidWdnaW5nIGFpZDogcHJpbnQgc3ltYm9s
aWMgbmFtZSBvZiBrZXkgdHlwZSAqLworc3RhdGljIGNvbnN0IGNoYXIgKnR5cGVfbmFtZSh1bnNp
Z25lZCBpbnQga2V5X3R5cGUvKiBrZXkgdHlwZSAqLykKK3sKKwlzd2l0Y2ggKGtleV90eXBlKSB7
CisJY2FzZSBLRVlfRklMRV9OQU1FX01JTk9SOgorCQlyZXR1cm4gImZpbGUgbmFtZSI7CisJY2Fz
ZSBLRVlfU0RfTUlOT1I6CisJCXJldHVybiAic3RhdCBkYXRhIjsKKwljYXNlIEtFWV9BVFRSX05B
TUVfTUlOT1I6CisJCXJldHVybiAiYXR0ciBuYW1lIjsKKwljYXNlIEtFWV9BVFRSX0JPRFlfTUlO
T1I6CisJCXJldHVybiAiYXR0ciBib2R5IjsKKwljYXNlIEtFWV9CT0RZX01JTk9SOgorCQlyZXR1
cm4gImZpbGUgYm9keSI7CisJZGVmYXVsdDoKKwkJcmV0dXJuICJ1bmtub3duIjsKKwl9Cit9CisK
Ky8qIGRlYnVnZ2luZyBhaWQ6IHByaW50IGh1bWFuIHJlYWRhYmxlIGluZm9ybWF0aW9uIGFib3V0
IGtleSAqLwordm9pZCByZWlzZXI0X3ByaW50X2tleShjb25zdCBjaGFyICpwcmVmaXggLyogcHJl
Zml4IHRvIHByaW50ICovICwKKwkgICAgICAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkvKiBrZXkg
dG8gcHJpbnQgKi8pCit7CisJLyogdHVybiBib2xkIG9uICovCisJLyogcHJpbnRmICgiXDAzM1sx
bSIpOyAqLworCWlmIChrZXkgPT0gTlVMTCkKKwkJcHJpbnRrKCIlczogbnVsbCBrZXlcbiIsIHBy
ZWZpeCk7CisJZWxzZSB7CisJCWlmIChSRUlTRVI0X0xBUkdFX0tFWSkKKwkJCXByaW50aygiJXM6
ICglTHg6JXg6JUx4OiVMeDolTHg6JUx4KSIsIHByZWZpeCwKKwkJCSAgICAgICBnZXRfa2V5X2xv
Y2FsaXR5KGtleSksCisJCQkgICAgICAgZ2V0X2tleV90eXBlKGtleSksCisJCQkgICAgICAgZ2V0
X2tleV9vcmRlcmluZyhrZXkpLAorCQkJICAgICAgIGdldF9rZXlfYmFuZChrZXkpLAorCQkJICAg
ICAgIGdldF9rZXlfb2JqZWN0aWQoa2V5KSwgZ2V0X2tleV9vZmZzZXQoa2V5KSk7CisJCWVsc2UK
KwkJCXByaW50aygiJXM6ICglTHg6JXg6JUx4OiVMeDolTHgpIiwgcHJlZml4LAorCQkJICAgICAg
IGdldF9rZXlfbG9jYWxpdHkoa2V5KSwKKwkJCSAgICAgICBnZXRfa2V5X3R5cGUoa2V5KSwKKwkJ
CSAgICAgICBnZXRfa2V5X2JhbmQoa2V5KSwKKwkJCSAgICAgICBnZXRfa2V5X29iamVjdGlkKGtl
eSksIGdldF9rZXlfb2Zmc2V0KGtleSkpOworCQkvKgorCQkgKiBpZiB0aGlzIGlzIGEga2V5IG9m
IGRpcmVjdG9yeSBlbnRyeSwgdHJ5IHRvIGRlY29kZSBwYXJ0IG9mCisJCSAqIGEgbmFtZSBzdG9y
ZWQgaW4gdGhlIGtleSwgYW5kIG91dHB1dCBpdC4KKwkJICovCisJCWlmIChnZXRfa2V5X3R5cGUo
a2V5KSA9PSBLRVlfRklMRV9OQU1FX01JTk9SKSB7CisJCQljaGFyIGJ1ZltERV9OQU1FX0JVRl9M
RU5dOworCQkJY2hhciAqYzsKKworCQkJYyA9IGJ1ZjsKKwkJCWMgPSByZWlzZXI0X3VucGFja19z
dHJpbmcoZ2V0X2tleV9vcmRlcmluZyhrZXkpLCBjKTsKKwkJCXJlaXNlcjRfdW5wYWNrX3N0cmlu
ZyhnZXRfa2V5X2Z1bGxvaWQoa2V5KSwgYyk7CisJCQlwcmludGsoIlslcyIsIGJ1Zik7CisJCQlp
ZiAoaXNfbG9uZ25hbWVfa2V5KGtleSkpCisJCQkJLyoKKwkJCQkgKiBvbmx5IHBhcnQgb2YgdGhl
IG5hbWUgaXMgc3RvcmVkIGluIHRoZSBrZXkuCisJCQkJICovCisJCQkJcHJpbnRrKCIuLi5dXG4i
KTsKKwkJCWVsc2UgeworCQkJCS8qCisJCQkJICogd2hvbGUgbmFtZSBpcyBzdG9yZWQgaW4gdGhl
IGtleS4KKwkJCQkgKi8KKwkJCQlyZWlzZXI0X3VucGFja19zdHJpbmcoZ2V0X2tleV9vZmZzZXQo
a2V5KSwgYnVmKTsKKwkJCQlwcmludGsoIiVzXVxuIiwgYnVmKTsKKwkJCX0KKwkJfSBlbHNlIHsK
KwkJCXByaW50aygiWyVzXVxuIiwgdHlwZV9uYW1lKGdldF9rZXlfdHlwZShrZXkpKSk7CisJCX0K
Kwl9CisJLyogdHVybiBib2xkIG9mZiAqLworCS8qIHByaW50ZiAoIlwwMzNbbVwwMTciKTsgKi8K
K30KKworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6
CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBj
LWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisg
ICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L2tleS5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L2tleS5oCi0tLSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L2tleS5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAw
ICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9rZXkuaAkyMDIwLTAyLTA1IDIwOjUz
OjQxLjQ1NTIyMjE5MyArMDEwMApAQCAtMCwwICsxLDM5MiBAQAorLyogQ29weXJpZ2h0IDIwMDAs
IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQor
ICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogRGVjbGFyYXRpb25zIG9mIGtleS1yZWxhdGVkIGRh
dGEtc3RydWN0dXJlcyBhbmQgb3BlcmF0aW9ucyBvbiBrZXlzLiAqLworCisjaWYgIWRlZmluZWQo
X19SRUlTRVI0X0tFWV9IX18pCisjZGVmaW5lIF9fUkVJU0VSNF9LRVlfSF9fCisKKyNpbmNsdWRl
ICJkZm9ybWF0LmgiCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisK
KyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkvKiBmb3IgX191Pz8gICovCisKKy8qIE9wZXJhdGlv
bnMgb24ga2V5cyBpbiByZWlzZXI0IHRyZWUgKi8KKworLyogTm8gYWNjZXNzIHRvIGFueSBvZiB0
aGVzZSBmaWVsZHMgc2hhbGwgYmUgZG9uZSBleGNlcHQgdmlhIGEKKyAgIHdyYXBwaW5nIG1hY3Jv
L2Z1bmN0aW9uLCBhbmQgdGhhdCB3cmFwcGluZyBtYWNyby9mdW5jdGlvbiBzaGFsbAorICAgY29u
dmVydCB0byBsaXR0bGUgZW5kaWFuIG9yZGVyLiBDb21wYXJlIGtleXMgd2lsbCBjb25zaWRlciBj
cHUgYnl0ZSBvcmRlci4gKi8KKworLyogQSBzdG9yYWdlIGxheWVyIGltcGxlbWVudGF0aW9uIGRp
ZmZlcmVuY2UgYmV0d2VlbiBhIHJlZ3VsYXIgdW5peCBmaWxlIGJvZHkKKyAgIGFuZCBpdHMgYXR0
cmlidXRlcyBpcyBpbiB0aGUgdHlwZWRlZiBiZWxvdyB3aGljaCBjYXVzZXMgYWxsIG9mIHRoZSBh
dHRyaWJ1dGVzCisgICBvZiBhIGZpbGUgdG8gYmUgbmVhciBpbiBrZXkgdG8gYWxsIG9mIHRoZSBv
dGhlciBhdHRyaWJ1dGVzIGZvciBhbGwgb2YgdGhlCisgICBmaWxlcyB3aXRoaW4gdGhhdCBkaXJl
Y3RvcnksIGFuZCBub3QgbmVhciB0byB0aGUgZmlsZSBpdHNlbGYuIEl0IGlzCisgICBpbnRlcmVz
dGluZyB0byBjb25zaWRlciB3aGV0aGVyIHRoaXMgaXMgdGhlIHdyb25nIGFwcHJvYWNoLCBhbmQg
d2hldGhlciB0aGVyZQorICAgc2hvdWxkIGJlIG5vIGRpZmZlcmVuY2UgYXQgYWxsLiBGb3IgY3Vy
cmVudCB1c2FnZSBwYXR0ZXJucyB0aGlzIGNob2ljZSBpcworICAgcHJvYmFibHkgdGhlIHJpZ2h0
IG9uZS4gICovCisKKy8qIHBvc3NpYmxlIHZhbHVlcyBmb3IgbWlub3IgcGFja2luZyBsb2NhbGl0
eSAoNCBiaXRzIHJlcXVpcmVkKSAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBmaWxlIG5hbWUgKi8K
KwlLRVlfRklMRV9OQU1FX01JTk9SID0gMCwKKwkvKiBzdGF0LWRhdGEgKi8KKwlLRVlfU0RfTUlO
T1IgPSAxLAorCS8qIGZpbGUgYXR0cmlidXRlIG5hbWUgKi8KKwlLRVlfQVRUUl9OQU1FX01JTk9S
ID0gMiwKKwkvKiBmaWxlIGF0dHJpYnV0ZSB2YWx1ZSAqLworCUtFWV9BVFRSX0JPRFlfTUlOT1Ig
PSAzLAorCS8qIGZpbGUgYm9keSAodGFpbCBvciBleHRlbnQpICovCisJS0VZX0JPRFlfTUlOT1Ig
PSA0LAorfSBrZXlfbWlub3JfbG9jYWxpdHk7CisKKy8qIEV2ZXJ5dGhpbmcgc3RvcmVkIGluIHRo
ZSB0cmVlIGhhcyBhIHVuaXF1ZSBrZXksIHdoaWNoIG1lYW5zIHRoYXQgdGhlIHRyZWUgaXMKKyAg
IChsb2dpY2FsbHkpIGZ1bGx5IG9yZGVyZWQgYnkga2V5LiBQaHlzaWNhbCBvcmRlciBpcyBkZXRl
cm1pbmVkIGJ5IGR5bmFtaWMKKyAgIGhldXJpc3RpY3MgdGhhdCBhdHRlbXB0IHRvIHJlZmxlY3Qg
a2V5IG9yZGVyIHdoZW4gYWxsb2NhdGluZyBhdmFpbGFibGUgc3BhY2UsCisgICBhbmQgYnkgdGhl
IHJlcGFja2VyLiBJdCBpcyBzdHlsaXN0aWNhbGx5IGJldHRlciB0byBwdXQgYWdncmVnYXRpb24K
KyAgIGluZm9ybWF0aW9uIGludG8gdGhlIGtleS4gVGh1cywgaWYgeW91IHdhbnQgdG8gc2VncmVn
YXRlIGV4dGVudHMgZnJvbSB0YWlscywKKyAgIGl0IGlzIGJldHRlciB0byBnaXZlIHRoZW0gZGlz
dGluY3QgbWlub3IgcGFja2luZyBsb2NhbGl0aWVzIHJhdGhlciB0aGFuCisgICBjaGFuZ2luZyBi
bG9ja19hbGxvYy5jIHRvIGNoZWNrIHRoZSBub2RlIHR5cGUgd2hlbiBkZWNpZGluZyB3aGVyZSB0
byBhbGxvY2F0ZQorICAgdGhlIG5vZGUuCisKKyAgIFRoZSBuZWVkIHRvIHJhbmRvbWx5IGRpc3Bs
YWNlIG5ldyBkaXJlY3RvcmllcyBhbmQgbGFyZ2UgZmlsZXMgZGlzdHVyYnMgdGhpcworICAgc3lt
bWV0cnkgdW5mb3J0dW5hdGVseS4gSG93ZXZlciwgaXQgc2hvdWxkIGJlIG5vdGVkIHRoYXQgdGhp
cyBpcyBhIG5lZWQgdGhhdAorICAgaXMgbm90IGNsZWFybHkgZXN0YWJsaXNoZWQgZ2l2ZW4gdGhl
IGV4aXN0ZW5jZSBvZiBhIHJlcGFja2VyLiBBbHNvLCBpbiBvdXIKKyAgIGN1cnJlbnQgaW1wbGVt
ZW50YXRpb24gdGFpbHMgaGF2ZSBhIGRpZmZlcmVudCBtaW5vciBwYWNraW5nIGxvY2FsaXR5IGZy
b20KKyAgIGV4dGVudHMsIGFuZCBubyBmaWxlcyBoYXZlIGJvdGggZXh0ZW50cyBhbmQgdGFpbHMs
IHNvIG1heWJlIHN5bW1ldHJ5IGNhbiBiZQorICAgaGFkIHdpdGhvdXQgcGVyZm9ybWFuY2UgY29z
dCBhZnRlciBhbGwuIFN5bW1ldHJ5IGlzIHdoYXQgd2Ugc2hpcCBmb3Igbm93Li4uLgorKi8KKwor
LyogQXJiaXRyYXJ5IG1ham9yIHBhY2tpbmcgbG9jYWxpdGllcyBjYW4gYmUgYXNzaWduZWQgdG8g
b2JqZWN0cyB1c2luZworICAgdGhlIHJlaXNlcjQoZmlsZW5hbWVBLy4ucGFja2luZzw9c29tZV9u
dW1iZXIpIHN5c3RlbSBjYWxsLgorCisgICBJbiByZWlzZXI0LCB0aGUgY3JlYXQoKSBzeXNjYWxs
IGNyZWF0ZXMgYSBkaXJlY3RvcnkKKworICAgd2hvc2UgZGVmYXVsdCBmbG93ICh0aGF0IHdoaWNo
IGlzIHJlZmVycmVkIHRvIGlmIHRoZSBkaXJlY3RvcnkgaXMKKyAgIHJlYWQgYXMgYSBmaWxlKSBp
cyB0aGUgdHJhZGl0aW9uYWwgdW5peCBmaWxlIGJvZHkuCisKKyAgIHdob3NlIGRpcmVjdG9yeSBw
bHVnaW4gaXMgdGhlICdmaWxlZGlyJworCisgICB3aG9zZSBtYWpvciBwYWNraW5nIGxvY2FsaXR5
IGlzIHRoYXQgb2YgdGhlIHBhcmVudCBvZiB0aGUgb2JqZWN0IGNyZWF0ZWQuCisKKyAgIFRoZSBz
dGF0aWNfc3RhdCBpdGVtIGlzIGEgcGFydGljdWxhciBjb21tb25seSB1c2VkIGRpcmVjdG9yeQor
ICAgY29tcHJlc3Npb24gKHRoZSBvbmUgZm9yIG5vcm1hbCB1bml4IGZpbGVzKS4KKworICAgVGhl
IGZpbGVkaXIgcGx1Z2luIGNoZWNrcyB0byBzZWUgaWYgdGhlIHN0YXRpY19zdGF0IGl0ZW0gZXhp
c3RzLgorICAgVGhlcmUgaXMgYSB1bmlxdWUga2V5IGZvciBzdGF0aWNfc3RhdC4gIElmIHllcywg
dGhlbiBpdCB1c2VzIHRoZQorICAgc3RhdGljX3N0YXQgaXRlbSBmb3IgYWxsIG9mIHRoZSB2YWx1
ZXMgdGhhdCBpdCBjb250YWlucy4gIFRoZQorICAgc3RhdGljX3N0YXQgaXRlbSBjb250YWlucyBh
IGZsYWcgZm9yIGVhY2ggc3RhdCBpdCBjb250YWlucyB3aGljaAorICAgaW5kaWNhdGVzIHdoZXRo
ZXIgb25lIHNob3VsZCBsb29rIG91dHNpZGUgdGhlIHN0YXRpY19zdGF0IGl0ZW0gZm9yIGl0cwor
ICAgY29udGVudHMuCisqLworCisvKiBvZmZzZXQgb2YgZmllbGRzIGluIHJlaXNlcjRfa2V5LiBW
YWx1ZSBvZiBlYWNoIGVsZW1lbnQgb2YgdGhpcyBlbnVtCisgICAgaXMgaW5kZXggd2l0aGluIGtl
eSAodGhvdWdodCBhcyBhcnJheSBvZiBfX3U2NCdzKSB3aGVyZSB0aGlzIGZpZWxkCisgICAgaXMu
ICovCit0eXBlZGVmIGVudW0geworCS8qIG1ham9yICJsb2NhbGUiLCBha2EgZGlyaWQuIFNpdHMg
aW4gMXN0IGVsZW1lbnQgKi8KKwlLRVlfTE9DQUxJVFlfSU5ERVggPSAwLAorCS8qIG1pbm9yICJs
b2NhbGUiLCBha2EgaXRlbSB0eXBlLiBTaXRzIGluIDFzdCBlbGVtZW50ICovCisJS0VZX1RZUEVf
SU5ERVggPSAwLAorCU9OX0xBUkdFX0tFWShLRVlfT1JERVJJTkdfSU5ERVgsKQorCSAgICAvKiAi
b2JqZWN0IGJhbmQiLiBTaXRzIGluIDJuZCBlbGVtZW50ICovCisJICAgIEtFWV9CQU5EX0lOREVY
LAorCS8qIG9iamVjdGlkLiBTaXRzIGluIDJuZCBlbGVtZW50ICovCisJS0VZX09CSkVDVElEX0lO
REVYID0gS0VZX0JBTkRfSU5ERVgsCisJLyogZnVsbCBvYmplY3RpZC4gU2l0cyBpbiAybmQgZWxl
bWVudCAqLworCUtFWV9GVUxMT0lEX0lOREVYID0gS0VZX0JBTkRfSU5ERVgsCisJLyogT2Zmc2V0
LiBTaXRzIGluIDNyZCBlbGVtZW50ICovCisJS0VZX09GRlNFVF9JTkRFWCwKKwkvKiBOYW1lIGhh
c2guIFNpdHMgaW4gM3JkIGVsZW1lbnQgKi8KKwlLRVlfSEFTSF9JTkRFWCA9IEtFWV9PRkZTRVRf
SU5ERVgsCisJS0VZX0NBQ0hFTElORV9FTkQgPSBLRVlfT0ZGU0VUX0lOREVYLAorCUtFWV9MQVNU
X0lOREVYCit9IHJlaXNlcjRfa2V5X2ZpZWxkX2luZGV4OworCisvKiBrZXkgaW4gcmVpc2VyNCBp
bnRlcm5hbCAiYmFsYW5jZWQiIHRyZWUuIEl0IGlzIGp1c3QgYXJyYXkgb2YgdGhyZWUKKyAgICA2
NGJpdCBpbnRlZ2VycyBpbiBkaXNrIGJ5dGUgb3JkZXIgKGxpdHRsZS1lbmRpYW4gYnkgZGVmYXVs
dCkuIFRoaXMKKyAgICBhcnJheSBpcyBhY3R1YWxseSBpbmRleGVkIGJ5IHJlaXNlcjRfa2V5X2Zp
ZWxkLiAgRWFjaCBfX3U2NCB3aXRoaW4KKyAgICB0aGlzIGFycmF5IGlzIGNhbGxlZCAiZWxlbWVu
dCIuIExvZ2ljYWwga2V5IGNvbXBvbmVudCBlbmNvZGVkIHdpdGhpbgorICAgIGVsZW1lbnRzIGFy
ZSBjYWxsZWQgImZpZWxkcyIuCisKKyAgICBXZSBkZWNsYXJlIHRoaXMgYXMgdW5pb24gd2l0aCBz
ZWNvbmQgY29tcG9uZW50IGR1bW15IHRvIHN1cHByZXNzCisgICAgaW5jb252ZW5pZW50IGFycmF5
PC0+cG9pbnRlciBjYXN0cyBpbXBsaWVkIGluIEMuICovCit1bmlvbiByZWlzZXI0X2tleSB7CisJ
X19sZTY0IGVsW0tFWV9MQVNUX0lOREVYXTsKKwlpbnQgcGFkOworfTsKKworLyogYml0bWFza3Mg
c2hvd2luZyB3aGVyZSB3aXRoaW4gcmVpc2VyNF9rZXkgcGFydGljdWxhciBrZXkgaXMgc3RvcmVk
LiAqLworLyogbWFqb3IgbG9jYWxpdHkgb2NjdXBpZXMgaGlnaGVyIDYwIGJpdHMgb2YgdGhlIGZp
cnN0IGVsZW1lbnQgKi8KKyNkZWZpbmUgS0VZX0xPQ0FMSVRZX01BU0sgMHhmZmZmZmZmZmZmZmZm
ZmYwdWxsCisKKy8qIG1pbm9yIGxvY2FsaXR5IG9jY3VwaWVzIGxvd2VyIDQgYml0cyBvZiB0aGUg
Zmlyc3QgZWxlbWVudCAqLworI2RlZmluZSBLRVlfVFlQRV9NQVNLIDB4ZnVsbAorCisvKiBjb250
cm92ZXJzaWFsIGJhbmQgb2NjdXBpZXMgaGlnaGVyIDQgYml0cyBvZiB0aGUgMm5kIGVsZW1lbnQg
Ki8KKyNkZWZpbmUgS0VZX0JBTkRfTUFTSyAweGYwMDAwMDAwMDAwMDAwMDB1bGwKKworLyogb2Jq
ZWN0aWQgb2NjdXBpZXMgbG93ZXIgNjAgYml0cyBvZiB0aGUgMm5kIGVsZW1lbnQgKi8KKyNkZWZp
bmUgS0VZX09CSkVDVElEX01BU0sgMHgwZmZmZmZmZmZmZmZmZmZmdWxsCisKKy8qIGZ1bGwgNjRi
aXQgb2JqZWN0aWQqLworI2RlZmluZSBLRVlfRlVMTE9JRF9NQVNLIDB4ZmZmZmZmZmZmZmZmZmZm
ZnVsbAorCisvKiBvZmZzZXQgaXMganVzdCAzcmQgTC5NLk50IGl0c2VsZiAqLworI2RlZmluZSBL
RVlfT0ZGU0VUX01BU0sgMHhmZmZmZmZmZmZmZmZmZmZmdWxsCisKKy8qIG9yZGVyaW5nIGlzIHdo
b2xlIHNlY29uZCBlbGVtZW50ICovCisjZGVmaW5lIEtFWV9PUkRFUklOR19NQVNLIDB4ZmZmZmZm
ZmZmZmZmZmZmZnVsbAorCisvKiBob3cgbWFueSBiaXRzIGtleSBlbGVtZW50IHNob3VsZCBiZSBz
aGlmdGVkIHRvIGxlZnQgdG8gZ2V0IHBhcnRpY3VsYXIgZmllbGQKKyAqLwordHlwZWRlZiBlbnVt
IHsKKwlLRVlfTE9DQUxJVFlfU0hJRlQgPSA0LAorCUtFWV9UWVBFX1NISUZUID0gMCwKKwlLRVlf
QkFORF9TSElGVCA9IDYwLAorCUtFWV9PQkpFQ1RJRF9TSElGVCA9IDAsCisJS0VZX0ZVTExPSURf
U0hJRlQgPSAwLAorCUtFWV9PRkZTRVRfU0hJRlQgPSAwLAorCUtFWV9PUkRFUklOR19TSElGVCA9
IDAsCit9IHJlaXNlcjRfa2V5X2ZpZWxkX3NoaWZ0OworCitzdGF0aWMgaW5saW5lIF9fdTY0Citn
ZXRfa2V5X2VsKGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCByZWlzZXI0X2tleV9maWVsZF9pbmRl
eCBvZmYpCit7CisJYXNzZXJ0KCJuaWtpdGEtNzUzIiwga2V5ICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTc1NCIsIG9mZiA8IEtFWV9MQVNUX0lOREVYKTsKKwlyZXR1cm4gbGU2NF90b19jcHUo
Z2V0X3VuYWxpZ25lZCgma2V5LT5lbFtvZmZdKSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAor
c2V0X2tleV9lbChyZWlzZXI0X2tleSAqIGtleSwgcmVpc2VyNF9rZXlfZmllbGRfaW5kZXggb2Zm
LCBfX3U2NCB2YWx1ZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS03NTUiLCBrZXkgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtNzU2Iiwgb2ZmIDwgS0VZX0xBU1RfSU5ERVgpOworCXB1dF91bmFsaWdu
ZWQoY3B1X3RvX2xlNjQodmFsdWUpLCAma2V5LT5lbFtvZmZdKTsKK30KKworLyogbWFjcm8gdG8g
ZGVmaW5lIGdldHRlciBhbmQgc2V0dGVyIGZ1bmN0aW9ucyBmb3IgZmllbGQgRiB3aXRoIHR5cGUg
VCAqLworI2RlZmluZSBERUZJTkVfS0VZX0ZJRUxEKEwsIFUsIFQpCQkJCQlcCitzdGF0aWMgaW5s
aW5lIFQgZ2V0X2tleV8gIyMgTChjb25zdCByZWlzZXI0X2tleSAqa2V5KQkJICAgICAgICBcCit7
CQkJCQkJCQkJXAorCWFzc2VydCgibmlraXRhLTc1MCIsIGtleSAhPSBOVUxMKTsJCQkJXAorCXJl
dHVybiAoVCkgKGdldF9rZXlfZWwoa2V5LCBLRVlfICMjIFUgIyMgX0lOREVYKSAmCQlcCisJCSBL
RVlfICMjIFUgIyMgX01BU0spID4+IEtFWV8gIyMgVSAjIyBfU0hJRlQ7CQlcCit9CQkJCQkJCQkJ
XAorCQkJCQkJCQkJXAorc3RhdGljIGlubGluZSB2b2lkIHNldF9rZXlfICMjIEwocmVpc2VyNF9r
ZXkgKiBrZXksIFQgbG9jKQkJXAorewkJCQkJCQkJCVwKKwlfX3U2NCBlbDsJCQkJCQkJXAorCQkJ
CQkJCQkJXAorCWFzc2VydCgibmlraXRhLTc1MiIsIGtleSAhPSBOVUxMKTsJCQkJXAorCQkJCQkJ
CQkJXAorCWVsID0gZ2V0X2tleV9lbChrZXksIEtFWV8gIyMgVSAjIyBfSU5ERVgpOwkJCVwKKwkv
KiBjbGVhciBmaWVsZCBiaXRzIGluIHRoZSBrZXkgKi8JCQkJXAorCWVsICY9IH5LRVlfICMjIFUg
IyMgX01BU0s7CQkJCQlcCisJLyogYWN0dWFsbHkgaXQgc2hvdWxkIGJlCQkJCQlcCisJCQkJCQkJ
CQlcCisJICAgZWwgfD0gKCBsb2MgPDwgS0VZXyAjIyBVICMjIF9TSElGVCApICYgS0VZXyAjIyBV
ICMjIF9NQVNLOwlcCisJCQkJCQkJCQlcCisJICAgYnV0IHdlIHRydXN0IHVzZXIgdG8gbmV2ZXIg
cGFzcyB2YWx1ZXMgdGhhdCB3b3VsZG4ndCBmaXQJXAorCSAgIGludG8gZmllbGQuIENsZWFyaW5n
IGV4dHJhIGJpdHMgaXMgb25lIG9wZXJhdGlvbiwgYnV0IHRoaXMJXAorCSAgIGZ1bmN0aW9uIGlz
IHRpbWUtY3JpdGljYWwuCQkJCQlcCisJICAgQnV0IGNoZWNrIHRoaXMgaW4gYXNzZXJ0aW9uLiAq
LwkJCQlcCisJYXNzZXJ0KCJuaWtpdGEtNzU5IiwgKChsb2MgPDwgS0VZXyAjIyBVICMjIF9TSElG
VCkgJgkJXAorCQl+S0VZXyAjIyBVICMjIF9NQVNLKSA9PSAwKTsJCQkJXAorCWVsIHw9IChsb2Mg
PDwgS0VZXyAjIyBVICMjIF9TSElGVCk7CQkJCVwKKwlzZXRfa2V5X2VsKGtleSwgS0VZXyAjIyBV
ICMjIF9JTkRFWCwgZWwpOwkJCVwKK30KKwordHlwZWRlZiBfX3U2NCBvaWRfdDsKKworLyogZGVm
aW5lIGdldF9rZXlfbG9jYWxpdHkoKSwgc2V0X2tleV9sb2NhbGl0eSgpICovCitERUZJTkVfS0VZ
X0ZJRUxEKGxvY2FsaXR5LCBMT0NBTElUWSwgb2lkX3QpOworLyogZGVmaW5lIGdldF9rZXlfdHlw
ZSgpLCBzZXRfa2V5X3R5cGUoKSAqLworREVGSU5FX0tFWV9GSUVMRCh0eXBlLCBUWVBFLCBrZXlf
bWlub3JfbG9jYWxpdHkpOworLyogZGVmaW5lIGdldF9rZXlfYmFuZCgpLCBzZXRfa2V5X2JhbmQo
KSAqLworREVGSU5FX0tFWV9GSUVMRChiYW5kLCBCQU5ELCBfX3U2NCk7CisvKiBkZWZpbmUgZ2V0
X2tleV9vYmplY3RpZCgpLCBzZXRfa2V5X29iamVjdGlkKCkgKi8KK0RFRklORV9LRVlfRklFTEQo
b2JqZWN0aWQsIE9CSkVDVElELCBvaWRfdCk7CisvKiBkZWZpbmUgZ2V0X2tleV9mdWxsb2lkKCks
IHNldF9rZXlfZnVsbG9pZCgpICovCitERUZJTkVfS0VZX0ZJRUxEKGZ1bGxvaWQsIEZVTExPSUQs
IG9pZF90KTsKKy8qIGRlZmluZSBnZXRfa2V5X29mZnNldCgpLCBzZXRfa2V5X29mZnNldCgpICov
CitERUZJTkVfS0VZX0ZJRUxEKG9mZnNldCwgT0ZGU0VULCBfX3U2NCk7CisjaWYgKFJFSVNFUjRf
TEFSR0VfS0VZKQorLyogZGVmaW5lIGdldF9rZXlfb3JkZXJpbmcoKSwgc2V0X2tleV9vcmRlcmlu
ZygpICovCitERUZJTkVfS0VZX0ZJRUxEKG9yZGVyaW5nLCBPUkRFUklORywgX191NjQpOworI2Vs
c2UKK3N0YXRpYyBpbmxpbmUgX191NjQgZ2V0X2tleV9vcmRlcmluZyhjb25zdCByZWlzZXI0X2tl
eSAqIGtleSkKK3sKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHNldF9rZXlf
b3JkZXJpbmcocmVpc2VyNF9rZXkgKiBrZXksIF9fdTY0IHZhbCkKK3sKK30KKyNlbmRpZgorCisv
KiBrZXkgY29tcGFyaXNvbiByZXN1bHQgKi8KK3R5cGVkZWYgZW51bSB7IExFU1NfVEhBTiA9IC0x
LAkvKiBpZiBmaXJzdCBrZXkgaXMgbGVzcyB0aGFuIHNlY29uZCAqLworCUVRVUFMX1RPID0gMCwJ
CS8qIGlmIGtleXMgYXJlIGVxdWFsICovCisJR1JFQVRFUl9USEFOID0gKzEJLyogaWYgZmlyc3Qg
a2V5IGlzIGdyZWF0ZXIgdGhhbiBzZWNvbmQgKi8KK30gY21wX3Q7CisKK3ZvaWQgcmVpc2VyNF9r
ZXlfaW5pdChyZWlzZXI0X2tleSAqIGtleSk7CisKKy8qIG1pbmltYWwgcG9zc2libGUga2V5IGlu
IHRoZSB0cmVlLiBSZXR1cm4gcG9pbnRlciB0byB0aGUgc3RhdGljIHN0b3JhZ2UuICovCitleHRl
cm4gY29uc3QgcmVpc2VyNF9rZXkgKnJlaXNlcjRfbWluX2tleSh2b2lkKTsKK2V4dGVybiBjb25z
dCByZWlzZXI0X2tleSAqcmVpc2VyNF9tYXhfa2V5KHZvaWQpOworCisvKiBoZWxwZXIgbWFjcm8g
Zm9yIGtleWNtcCgpICovCisjZGVmaW5lIEtFWV9ESUZGKGsxLCBrMiwgZmllbGQpCQkJCQkJXAor
KHsJCQkJCQkJCQlcCisJdHlwZW9mKGdldF9rZXlfICMjIGZpZWxkKGsxKSkgZjE7CQkJCVwKKwl0
eXBlb2YoZ2V0X2tleV8gIyMgZmllbGQoazIpKSBmMjsJCQkJXAorCQkJCQkJCQkJXAorCWYxID0g
Z2V0X2tleV8gIyMgZmllbGQoazEpOwkJCQkJXAorCWYyID0gZ2V0X2tleV8gIyMgZmllbGQoazIp
OwkJCQkJXAorCQkJCQkJCQkJXAorCShmMSA8IGYyKSA/IExFU1NfVEhBTiA6ICgoZjEgPT0gZjIp
ID8gRVFVQUxfVE8gOiBHUkVBVEVSX1RIQU4pOwlcCit9KQorCisvKiBoZWxwZXIgbWFjcm8gZm9y
IGtleWNtcCgpICovCisjZGVmaW5lIEtFWV9ESUZGX0VMKGsxLCBrMiwgb2ZmKQkJCQkJXAorKHsJ
CQkJCQkJCQlcCisJX191NjQgZTE7CQkJCQkJCVwKKwlfX3U2NCBlMjsJCQkJCQkJXAorCQkJCQkJ
CQkJXAorCWUxID0gZ2V0X2tleV9lbChrMSwgb2ZmKTsJCQkJCVwKKwllMiA9IGdldF9rZXlfZWwo
azIsIG9mZik7CQkJCQlcCisJCQkJCQkJCQlcCisJKGUxIDwgZTIpID8gTEVTU19USEFOIDogKChl
MSA9PSBlMikgPyBFUVVBTF9UTyA6IEdSRUFURVJfVEhBTik7CVwKK30pCisKKy8qIGNvbXBhcmUg
YGsxJyBhbmQgYGsyJy4gIFRoaXMgZnVuY3Rpb24gaXMgYSBoZWFydCBvZiAia2V5IGFsbG9jYXRp
b24KKyAgICBwb2xpY3kiLiBBbGwgeW91IG5lZWQgdG8gaW1wbGVtZW50IG5ldyBwb2xpY3kgaXMg
dG8gYWRkIHlldCBhbm90aGVyCisgICAgY2xhdXNlIGhlcmUuICovCitzdGF0aWMgaW5saW5lIGNt
cF90IGtleWNtcChjb25zdCByZWlzZXI0X2tleSAqIGsxIC8qIGZpcnN0IGtleSB0byBjb21wYXJl
ICovICwKKwkJCSAgIGNvbnN0IHJlaXNlcjRfa2V5ICogazIvKiBzZWNvbmQga2V5IHRvIGNvbXBh
cmUgKi8pCit7CisJY21wX3QgcmVzdWx0OworCisJLyoKKwkgKiBUaGlzIGZ1bmN0aW9uIGlzIHRo
ZSBoZWFydCBvZiByZWlzZXI0IHRyZWUtcm91dGluZXMuIEtleSBjb21wYXJpc29uCisJICogaXMg
YW1vbmcgbW9zdCBoZWF2aWx5IHVzZWQgb3BlcmF0aW9ucyBpbiB0aGUgZmlsZSBzeXN0ZW0uCisJ
ICovCisKKwlhc3NlcnQoIm5pa2l0YS00MzkiLCBrMSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS00NDAiLCBrMiAhPSBOVUxMKTsKKworCS8qIHRoZXJlIGlzIG5vIGFjdHVhbCBicmFuY2ggaGVy
ZTogY29uZGl0aW9uIGlzIGNvbXBpbGUgdGltZSBjb25zdGFudAorCSAqIGFuZCBjb25zdGFudCBm
b2xkaW5nIGFuZCBwcm9wYWdhdGlvbiBlbnN1cmVzIHRoYXQgb25seSBvbmUgYnJhbmNoCisJICog
aXMgYWN0dWFsbHkgY29tcGlsZWQgaW4uICovCisKKwlpZiAoUkVJU0VSNF9QTEFOQV9LRVlfQUxM
T0NBVElPTikgeworCQkvKiBpZiBwaHlzaWNhbCBvcmRlciBvZiBmaWVsZHMgaW4gYSBrZXkgaXMg
aWRlbnRpY2FsCisJCSAgIHdpdGggbG9naWNhbCBvcmRlciwgd2UgY2FuIGltcGxlbWVudCBrZXkg
Y29tcGFyaXNvbgorCQkgICBhcyB0aHJlZSA2NGJpdCBjb21wYXJpc29ucy4gKi8KKwkJLyogbG9n
aWNhbCBvcmRlciBvZiBmaWVsZHMgaW4gcGxhbi1hOgorCQkgICBsb2NhbGl0eS0+dHlwZS0+b2Jq
ZWN0aWQtPm9mZnNldC4gKi8KKwkJLyogY29tcGFyZSBsb2NhbGl0eSBhbmQgdHlwZSBhdCBvbmNl
ICovCisJCXJlc3VsdCA9IEtFWV9ESUZGX0VMKGsxLCBrMiwgMCk7CisJCWlmIChyZXN1bHQgPT0g
RVFVQUxfVE8pIHsKKwkJCS8qIGNvbXBhcmUgb2JqZWN0aWQgKGFuZCBiYW5kIGlmIGl0J3MgdGhl
cmUpICovCisJCQlyZXN1bHQgPSBLRVlfRElGRl9FTChrMSwgazIsIDEpOworCQkJLyogY29tcGFy
ZSBvZmZzZXQgKi8KKwkJCWlmIChyZXN1bHQgPT0gRVFVQUxfVE8pIHsKKwkJCQlyZXN1bHQgPSBL
RVlfRElGRl9FTChrMSwgazIsIDIpOworCQkJCWlmIChSRUlTRVI0X0xBUkdFX0tFWSAmJiByZXN1
bHQgPT0gRVFVQUxfVE8pCisJCQkJCXJlc3VsdCA9IEtFWV9ESUZGX0VMKGsxLCBrMiwgMyk7CisJ
CQl9CisJCX0KKwl9IGVsc2UgaWYgKFJFSVNFUjRfM181X0tFWV9BTExPQ0FUSU9OKSB7CisJCXJl
c3VsdCA9IEtFWV9ESUZGKGsxLCBrMiwgbG9jYWxpdHkpOworCQlpZiAocmVzdWx0ID09IEVRVUFM
X1RPKSB7CisJCQlyZXN1bHQgPSBLRVlfRElGRihrMSwgazIsIG9iamVjdGlkKTsKKwkJCWlmIChy
ZXN1bHQgPT0gRVFVQUxfVE8pIHsKKwkJCQlyZXN1bHQgPSBLRVlfRElGRihrMSwgazIsIHR5cGUp
OworCQkJCWlmIChyZXN1bHQgPT0gRVFVQUxfVE8pCisJCQkJCXJlc3VsdCA9IEtFWV9ESUZGKGsx
LCBrMiwgb2Zmc2V0KTsKKwkJCX0KKwkJfQorCX0gZWxzZQorCQlpbXBvc3NpYmxlKCJuaWtpdGEt
NDQxIiwgIlVua25vd24ga2V5IGFsbG9jYXRpb24gc2NoZW1lISIpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qIHRydWUgaWYgQGsxIGVxdWFscyBAazIgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGtl
eWVxKGNvbnN0IHJlaXNlcjRfa2V5ICogazEgLyogZmlyc3Qga2V5IHRvIGNvbXBhcmUgKi8gLAor
CQkJY29uc3QgcmVpc2VyNF9rZXkgKiBrMi8qIHNlY29uZCBrZXkgdG8gY29tcGFyZSAqLykKK3sK
Kwlhc3NlcnQoIm5pa2l0YS0xODc5IiwgazEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTg4
MCIsIGsyICE9IE5VTEwpOworCXJldHVybiAhbWVtY21wKGsxLCBrMiwgc2l6ZW9mICprMSk7Cit9
CisKKy8qIHRydWUgaWYgQGsxIGlzIGxlc3MgdGhhbiBAazIgKi8KK3N0YXRpYyBpbmxpbmUgaW50
IGtleWx0KGNvbnN0IHJlaXNlcjRfa2V5ICogazEgLyogZmlyc3Qga2V5IHRvIGNvbXBhcmUgKi8g
LAorCQkJY29uc3QgcmVpc2VyNF9rZXkgKiBrMi8qIHNlY29uZCBrZXkgdG8gY29tcGFyZSAqLykK
K3sKKwlhc3NlcnQoIm5pa2l0YS0xOTUyIiwgazEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEt
MTk1MyIsIGsyICE9IE5VTEwpOworCXJldHVybiBrZXljbXAoazEsIGsyKSA9PSBMRVNTX1RIQU47
Cit9CisKKy8qIHRydWUgaWYgQGsxIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byBAazIgKi8KK3N0
YXRpYyBpbmxpbmUgaW50IGtleWxlKGNvbnN0IHJlaXNlcjRfa2V5ICogazEgLyogZmlyc3Qga2V5
IHRvIGNvbXBhcmUgKi8gLAorCQkJY29uc3QgcmVpc2VyNF9rZXkgKiBrMi8qIHNlY29uZCBrZXkg
dG8gY29tcGFyZSAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0xOTU0IiwgazEgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTk1NSIsIGsyICE9IE5VTEwpOworCXJldHVybiBrZXljbXAoazEsIGsy
KSAhPSBHUkVBVEVSX1RIQU47Cit9CisKKy8qIHRydWUgaWYgQGsxIGlzIGdyZWF0ZXIgdGhhbiBA
azIgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGtleWd0KGNvbnN0IHJlaXNlcjRfa2V5ICogazEgLyog
Zmlyc3Qga2V5IHRvIGNvbXBhcmUgKi8gLAorCQkJY29uc3QgcmVpc2VyNF9rZXkgKiBrMi8qIHNl
Y29uZCBrZXkgdG8gY29tcGFyZSAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0xOTU5IiwgazEgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTk2MCIsIGsyICE9IE5VTEwpOworCXJldHVybiBrZXlj
bXAoazEsIGsyKSA9PSBHUkVBVEVSX1RIQU47Cit9CisKKy8qIHRydWUgaWYgQGsxIGlzIGdyZWF0
ZXIgdGhhbiBvciBlcXVhbCB0byBAazIgKi8KK3N0YXRpYyBpbmxpbmUgaW50IGtleWdlKGNvbnN0
IHJlaXNlcjRfa2V5ICogazEgLyogZmlyc3Qga2V5IHRvIGNvbXBhcmUgKi8gLAorCQkJY29uc3Qg
cmVpc2VyNF9rZXkgKiBrMi8qIHNlY29uZCBrZXkgdG8gY29tcGFyZSAqLykKK3sKKwlhc3NlcnQo
Im5pa2l0YS0xOTU2IiwgazEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTk1NyIsIGsyICE9
IE5VTEwpOwkvKiBPY3RvYmVyICA0OiBzcHV0bmlrIGxhdW5jaGVkCisJCQkJCQkgKiBOb3ZlbWJl
ciAzOiBMYWlrYSAqLworCXJldHVybiBrZXljbXAoazEsIGsyKSAhPSBMRVNTX1RIQU47Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZCBwcmVmZXRjaGtleShyZWlzZXI0X2tleSAqIGtleSkKK3sKKwlw
cmVmZXRjaChrZXkpOworCXByZWZldGNoKCZrZXktPmVsW0tFWV9DQUNIRUxJTkVfRU5EXSk7Cit9
CisKKy8qICglTHg6JXg6JUx4OiVMeDolTHg6JUx4KSA9CisJMSArIDE2ICsgMSArIDEgKyAxICsg
MSArIDEgKyAxNiArIDEgKyAxNiArIDEgKyAxNiArIDEgKi8KKy8qIHNpemUgb2YgYSBidWZmZXIg
c3VpdGFibGUgdG8gaG9sZCBodW1hbiByZWFkYWJsZSBrZXkgcmVwcmVzZW50YXRpb24gKi8KKyNk
ZWZpbmUgS0VZX0JVRl9MRU4gKDgwKQorCisjaWYgUkVJU0VSNF9ERUJVRworZXh0ZXJuIHZvaWQg
cmVpc2VyNF9wcmludF9rZXkoY29uc3QgY2hhciAqcHJlZml4LCBjb25zdCByZWlzZXI0X2tleSAq
IGtleSk7CisjZWxzZQorI2RlZmluZSByZWlzZXI0X3ByaW50X2tleShwLCBrKSBub29wCisjZW5k
aWYKKworLyogX19GU19SRUlTRVJGU19LRVlfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51
cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJL
JlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lk
dGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRl
cmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQva3R4bm1ncmQuYyBsaW51eC01
LjQuMTcvZnMvcmVpc2VyNC9rdHhubWdyZC5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlz
ZXI0L2t0eG5tZ3JkLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxp
bnV4LTUuNC4xNy9mcy9yZWlzZXI0L2t0eG5tZ3JkLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTYy
MjIyMDEgKzAxMDAKQEAgLTAsMCArMSwyMTUgQEAKKy8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5
IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKy8q
IFRyYW5zYWN0aW9uIG1hbmFnZXIgZGFlbW9uLiAqLworCisvKgorICoga3R4bm1ncmQgaXMgYSBr
ZXJuZWwgZGFlbW9uIHJlc3BvbnNpYmxlIGZvciBjb21taXR0aW5nIHRyYW5zYWN0aW9ucy4gSXQg
aXMKKyAqIG5lZWRlZC9pbXBvcnRhbnQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uczoKKyAqCisg
KiAgICAgMS4gaW4gcmVpc2VyNCBhdG9tIGlzIG5vdCBjb21taXR0ZWQgaW1tZWRpYXRlbHkgd2hl
biBsYXN0IHRyYW5zYWN0aW9uCisgKiAgICAgaGFuZGxlIGNsb3NlcywgdW5sZXNzIGF0b20gaXMg
ZWl0aGVyIHRvbyBvbGQgb3IgdG9vIGxhcmdlIChzZWUKKyAqICAgICBhdG9tX3Nob3VsZF9jb21t
aXQoKSkuIFRoaXMgaXMgZG9uZSB0byBhdm9pZCBjb21taXR0aW5nIHRvbyBmcmVxdWVudGx5Lgor
ICogICAgIGJlY2F1c2U6CisgKgorICogICAgIDIuIHNvbWV0aW1lcyB3ZSBkb24ndCB3YW50IHRv
IGNvbW1pdCBhdG9tIHdoZW4gY2xvc2luZyBsYXN0IHRyYW5zYWN0aW9uCisgKiAgICAgaGFuZGxl
IGV2ZW4gaWYgaXQgaXMgb2xkIGFuZCBmYXQgZW5vdWdoLiBGb3IgZXhhbXBsZSwgYmVjYXVzZSB3
ZSBhcmUgYXQKKyAqICAgICB0aGlzIHBvaW50IHVuZGVyIGRpcmVjdG9yeSBzZW1hcGhvcmUsIGFu
ZCBjb21taXR0aW5nIHdvdWxkIHN0YWxsIGFsbAorICogICAgIGFjY2Vzc2VzIHRvIHRoaXMgZGly
ZWN0b3J5LgorICoKKyAqIGt0eG5tZ3JkIGJpbmRzIGl0cyB0aW1lIHNsZWVwaW5nIG9uIGNvbmRp
dGlvbiB2YXJpYWJsZS4gV2hlbiBpcyBhd2FrZXMKKyAqIGVpdGhlciBkdWUgdG8gKHR1bmFibGUp
IHRpbWVvdXQgb3IgYmVjYXVzZSBpdCB3YXMgZXhwbGljaXRseSB3b2tlbiB1cCBieQorICogY2Fs
bCB0byBrdHhubWdyZF9raWNrKCksIGl0IHNjYW5zIGxpc3Qgb2YgYWxsIGF0b21zIGFuZCBjb21t
aXRzIG9uZXMKKyAqIGVsaWdpYmxlLgorICoKKyAqLworCisjaW5jbHVkZSAiZGVidWcuaCIKKyNp
bmNsdWRlICJ0eG5tZ3IuaCIKKyNpbmNsdWRlICJ0cmVlLmgiCisjaW5jbHVkZSAia3R4bm1ncmQu
aCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2luY2x1ZGUgInJlaXNlcjQuaCIKKworI2luY2x1ZGUg
PGxpbnV4L3NjaGVkLmg+CS8qIGZvciBzdHJ1Y3QgdGFza19zdHJ1Y3QgKi8KKyNpbmNsdWRlIDxs
aW51eC93YWl0Lmg+CisjaW5jbHVkZSA8bGludXgvc3VzcGVuZC5oPgorI2luY2x1ZGUgPGxpbnV4
L2tlcm5lbC5oPgorI2luY2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPgorI2luY2x1ZGUgPGxpbnV4
L2t0aHJlYWQuaD4KKyNpbmNsdWRlIDxsaW51eC9mcmVlemVyLmg+CisKK3N0YXRpYyBpbnQgc2Nh
bl9tZ3Ioc3RydWN0IHN1cGVyX2Jsb2NrICopOworCisvKgorICogY2hhbmdlIGN1cnJlbnQtPmNv
bW0gc28gdGhhdCBwcywgdG9wLCBhbmQgZnJpZW5kcyB3aWxsIHNlZSBjaGFuZ2VkCisgKiBzdGF0
ZS4gVGhpcyBzZXJ2ZXMgbm8gdXNlZnVsIHB1cnBvc2Ugd2hhdHNvZXZlciwgYnV0IGFsc28gY29z
dHMgbm90aGluZy4gTWF5CisgKiBiZSBpdCB3aWxsIG1ha2UgbG9uZWx5IHN5c3RlbSBhZG1pbmlz
dHJhdG9yIGZlZWxpbmcgbGVzcyBhbG9uZSBhdCAzIEEuTS4KKyAqLworI2RlZmluZSBzZXRfY29t
bShzdGF0ZSkgCQkJCQkJXAorCXNucHJpbnRmKGN1cnJlbnQtPmNvbW0sIHNpemVvZihjdXJyZW50
LT5jb21tKSwJCQlcCisJCSAgIiVzOiVzOiVzIiwgX19GVU5DVElPTl9fLCAoc3VwZXIpLT5zX2lk
LCAoc3RhdGUpKQorCisvKioKKyAqIGt0eG5tZ3JkIC0ga2VybmVsIHR4bm1nciBkYWVtb24KKyAq
IEBhcmc6IHBvaW50ZXIgdG8gc3VwZXIgYmxvY2sKKyAqCisgKiBUaGUgYmFja2dyb3VuZCB0cmFu
c2FjdGlvbiBtYW5hZ2VyIGRhZW1vbiwgc3RhcnRlZCBhcyBhIGtlcm5lbCB0aHJlYWQgZHVyaW5n
CisgKiByZWlzZXI0IGluaXRpYWxpemF0aW9uLgorICovCitzdGF0aWMgaW50IGt0eG5tZ3JkKHZv
aWQgKmFyZykKK3sKKwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyOworCWt0eG5tZ3JkX2NvbnRl
eHQgKmN0eDsKKwl0eG5fbWdyICptZ3I7CisJaW50IGRvbmUgPSAwOworCisJc3VwZXIgPSBhcmc7
CisJbWdyID0gJmdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+dG1ncjsKKworCS8qCisJICogZG9f
Zm9yaygpIGp1c3QgY29waWVzIHRhc2tfc3RydWN0IGludG8gdGhlIG5ldyB0aHJlYWQuIC0+ZnNf
Y29udGV4dAorCSAqIHNob3VsZG4ndCBiZSBjb3BpZWQgb2YgY291cnNlLiBUaGlzIHNob3VsZG4n
dCBiZSBhIHByb2JsZW0gZm9yIHRoZQorCSAqIHJlc3Qgb2YgdGhlIGNvZGUgdGhvdWdoLgorCSAq
LworCWN1cnJlbnQtPmpvdXJuYWxfaW5mbyA9IE5VTEw7CisJY3R4ID0gbWdyLT5kYWVtb247CisJ
d2hpbGUgKDEpIHsKKwkJdHJ5X3RvX2ZyZWV6ZSgpOworCQlzZXRfY29tbSgid2FpdCIpOworCQl7
CisJCQlERUZJTkVfV0FJVChfX3dhaXQpOworCisJCQlwcmVwYXJlX3RvX3dhaXQoJmN0eC0+d2Fp
dCwgJl9fd2FpdCwKKwkJCQkJVEFTS19JTlRFUlJVUFRJQkxFKTsKKwkJCWlmIChrdGhyZWFkX3No
b3VsZF9zdG9wKCkpCisJCQkJZG9uZSA9IDE7CisJCQllbHNlCisJCQkJc2NoZWR1bGVfdGltZW91
dChjdHgtPnRpbWVvdXQpOworCQkJZmluaXNoX3dhaXQoJmN0eC0+d2FpdCwgJl9fd2FpdCk7CisJ
CX0KKwkJaWYgKGRvbmUpCisJCQlicmVhazsKKwkJc2V0X2NvbW0oInJ1biIpOworCQlzcGluX2xv
Y2soJmN0eC0+Z3VhcmQpOworCQkvKgorCQkgKiB3YWl0IHRpbWVkIG91dCBvciBrdHhubWdyZCB3
YXMgd29rZW4gdXAgYnkgZXhwbGljaXQgcmVxdWVzdAorCQkgKiB0byBjb21taXQgc29tZXRoaW5n
LiBTY2FuIGxpc3Qgb2YgYXRvbXMgaW4gdHhubWdyIGFuZCBsb29rCisJCSAqIGZvciB0b28gb2xk
IGF0b21zLgorCQkgKi8KKwkJZG8geworCQkJY3R4LT5yZXNjYW4gPSAwOworCQkJc2Nhbl9tZ3Io
c3VwZXIpOworCQkJc3Bpbl9sb2NrKCZjdHgtPmd1YXJkKTsKKwkJCWlmIChjdHgtPnJlc2Nhbikg
eworCQkJCS8qCisJCQkJICogdGhlIGxpc3QgY291bGQgYmUgbW9kaWZpZWQgd2hpbGUgY3R4CisJ
CQkJICogc3BpbmxvY2sgd2FzIHJlbGVhc2VkLCB3ZSBoYXZlIHRvIHJlcGVhdAorCQkJCSAqIHNj
YW5uaW5nIGZyb20gdGhlIGJlZ2lubmluZworCQkJCSAqLworCQkJCWJyZWFrOworCQkJfQorCQl9
IHdoaWxlIChjdHgtPnJlc2Nhbik7CisJCXNwaW5fdW5sb2NrKCZjdHgtPmd1YXJkKTsKKwl9CisJ
cmV0dXJuIDA7Cit9CisKKyN1bmRlZiBzZXRfY29tbQorCisvKioKKyAqIHJlaXNlcjRfaW5pdF9r
dHhubWdyZCAtIGluaXRpYWxpemUga3R4bm1ncmQgY29udGV4dCBhbmQgc3RhcnQga2VybmVsIGRh
ZW1vbgorICogQHN1cGVyOiBwb2ludGVyIHRvIHN1cGVyIGJsb2NrCisgKgorICogQWxsb2NhdGVz
IGFuZCBpbml0aWFsaXplcyBrdHhubWdyZF9jb250ZXh0LCBhdHRhY2hlcyBpdCB0byB0cmFuc2Fj
dGlvbgorICogbWFuYWdlci4gU3RhcnRzIGtlcm5lbCB0eG5tZ3IgZGFlbW9uLiBUaGlzIGlzIGNh
bGxlZCBvbiBtb3VudC4KKyAqLworaW50IHJlaXNlcjRfaW5pdF9rdHhubWdyZChzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnN1cGVyKQoreworCXR4bl9tZ3IgKm1ncjsKKwlrdHhubWdyZF9jb250ZXh0ICpj
dHg7CisKKwltZ3IgPSAmZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT50bWdyOworCisJYXNzZXJ0
KCJ6YW0tMTAxNCIsIG1nci0+ZGFlbW9uID09IE5VTEwpOworCisJY3R4ID0ga3phbGxvYyhzaXpl
b2Yoa3R4bm1ncmRfY29udGV4dCksIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAo
IWN0eCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKworCWFzc2VydCgibmlraXRhLTI0NDIi
LCBjdHggIT0gTlVMTCk7CisKKwlpbml0X3dhaXRxdWV1ZV9oZWFkKCZjdHgtPndhaXQpOworCisJ
LyprY29uZF9pbml0KCZjdHgtPnN0YXJ0dXApOyovCisJc3Bpbl9sb2NrX2luaXQoJmN0eC0+Z3Vh
cmQpOworCWN0eC0+dGltZW91dCA9IFJFSVNFUjRfVFhOTUdSX1RJTUVPVVQ7CisJY3R4LT5yZXNj
YW4gPSAxOworCW1nci0+ZGFlbW9uID0gY3R4OworCisJY3R4LT50c2sgPSBrdGhyZWFkX3J1bihr
dHhubWdyZCwgc3VwZXIsICJrdHhubWdyZCIpOworCWlmIChJU19FUlIoY3R4LT50c2spKSB7CisJ
CWludCByZXQgPSBQVFJfRVJSKGN0eC0+dHNrKTsKKwkJbWdyLT5kYWVtb24gPSBOVUxMOworCQlr
ZnJlZShjdHgpOworCQlyZXR1cm4gUkVURVJSKHJldCk7CisJfQorCXJldHVybiAwOworfQorCit2
b2lkIGt0eG5tZ3JkX2tpY2sodHhuX21nciAqbWdyKQoreworCWFzc2VydCgibmlraXRhLTMyMzQi
LCBtZ3IgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzIzNSIsIG1nci0+ZGFlbW9uICE9IE5V
TEwpOworCXdha2VfdXAoJm1nci0+ZGFlbW9uLT53YWl0KTsKK30KKworaW50IGlzX2N1cnJlbnRf
a3R4bm1ncmQodm9pZCkKK3sKKwlyZXR1cm4gKGdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUoKS0+
dG1nci5kYWVtb24tPnRzayA9PSBjdXJyZW50KTsKK30KKworLyoqCisgKiBzY2FuX21nciAtIGNv
bW1pdCBhdG9tcyB3aGljaCBhcmUgdG8gYmUgY29tbWl0dGVkCisgKiBAc3VwZXI6IHN1cGVyIGJs
b2NrIHRvIGNvbW1pdCBhdG9tcyBvZgorICoKKyAqIENvbW1pdHMgb2xkIGF0b21zLgorICovCitz
dGF0aWMgaW50IHNjYW5fbWdyKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJaW50IHJl
dDsKKwlyZWlzZXI0X2NvbnRleHQgY3R4OworCisJaW5pdF9zdGFja19jb250ZXh0KCZjdHgsIHN1
cGVyKTsKKworCXJldCA9IGNvbW1pdF9zb21lX2F0b21zKCZnZXRfc3VwZXJfcHJpdmF0ZShzdXBl
ciktPnRtZ3IpOworCisJcmVpc2VyNF9leGl0X2NvbnRleHQoJmN0eCk7CisJcmV0dXJuIHJldDsK
K30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfa3R4bm1ncmQgLSBzdG9wIGtlcm5lbCB0aHJlYWQg
YW5kIGZyZWVzIGt0eG5tZ3JkIGNvbnRleHQKKyAqIEBtZ3I6CisgKgorICogVGhpcyBpcyBjYWxs
ZWQgb24gdW1vdW50LiBTdG9wcyBrdHhubWdyZCBhbmQgZnJlZSB0CisgKi8KK3ZvaWQgcmVpc2Vy
NF9kb25lX2t0eG5tZ3JkKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJdHhuX21nciAq
bWdyOworCisJbWdyID0gJmdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+dG1ncjsKKwlhc3NlcnQo
InphbS0xMDEyIiwgbWdyLT5kYWVtb24gIT0gTlVMTCk7CisKKwlrdGhyZWFkX3N0b3AobWdyLT5k
YWVtb24tPnRzayk7CisJa2ZyZWUobWdyLT5kYWVtb24pOworCW1nci0+ZGFlbW9uID0gTlVMTDsK
K30KKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJL
JlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lk
dGg6IDgKKyAqIGZpbGwtY29sdW1uOiAxMjAKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L2t0eG5tZ3JkLmggbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQva3R4bm1ncmQuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC9rdHhubWdyZC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBs
aW51eC01LjQuMTcvZnMvcmVpc2VyNC9rdHhubWdyZC5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU2
MjIyMjAxICswMTAwCkBAIC0wLDAgKzEsNTIgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAy
MDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVB
RE1FICovCisKKy8qIFRyYW5zYWN0aW9uIG1hbmFnZXIgZGFlbW9uLiBTZWUga3R4bm1ncmQuYyBm
b3IgY29tbWVudHMuICovCisKKyNpZm5kZWYgX19LVFhOTUdSRF9IX18KKyNkZWZpbmUgX19LVFhO
TUdSRF9IX18KKworI2luY2x1ZGUgInR4bm1nci5oIgorCisjaW5jbHVkZSA8bGludXgvZnMuaD4K
KyNpbmNsdWRlIDxsaW51eC93YWl0Lmg+CisjaW5jbHVkZSA8bGludXgvY29tcGxldGlvbi5oPgor
I2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8YXNtL2F0b21pYy5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3NjaGVkLmg+CS8qIGZvciBzdHJ1Y3QgdGFza19zdHJ1Y3QgKi8KKworLyog
aW4gdGhpcyBzdHJ1Y3R1cmUgYWxsIGRhdGEgbmVjZXNzYXJ5IHRvIHN0YXJ0IHVwLCBzaHV0IGRv
d24gYW5kIGNvbW11bmljYXRlCisgKiB3aXRoIGt0eG5tZ3JkIGFyZSBrZXB0LiAqLworc3RydWN0
IGt0eG5tZ3JkX2NvbnRleHQgeworCS8qIHdhaXQgcXVldWUgaGVhZCBvbiB3aGljaCBrdHhubWdy
ZCBzbGVlcHMgKi8KKwl3YWl0X3F1ZXVlX2hlYWRfdCB3YWl0OworCS8qIHNwaW4gbG9jayBwcm90
ZWN0aW5nIGFsbCBmaWVsZHMgb2YgdGhpcyBzdHJ1Y3R1cmUgKi8KKwlzcGlubG9ja190IGd1YXJk
OworCS8qIHRpbWVvdXQgb2Ygc2xlZXBpbmcgb24gLT53YWl0ICovCisJc2lnbmVkIGxvbmcgdGlt
ZW91dDsKKwkvKiBrZXJuZWwgdGhyZWFkIHJ1bm5pbmcga3R4bm1ncmQgKi8KKwlzdHJ1Y3QgdGFz
a19zdHJ1Y3QgKnRzazsKKwkvKiBsaXN0IG9mIGFsbCBmaWxlIHN5c3RlbXMgc2VydmVkIGJ5IHRo
aXMga3R4bm1ncmQgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIHF1ZXVlOworCS8qIHNob3VsZCBrdHhu
bWdyZCByZXBlYXQgc2Nhbm5pbmcgb2YgYXRvbXM/ICovCisJdW5zaWduZWQgaW50IHJlc2Nhbjox
OworfTsKKworZXh0ZXJuIGludCByZWlzZXI0X2luaXRfa3R4bm1ncmQoc3RydWN0IHN1cGVyX2Js
b2NrICopOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9kb25lX2t0eG5tZ3JkKHN0cnVjdCBzdXBlcl9i
bG9jayAqKTsKKworZXh0ZXJuIHZvaWQga3R4bm1ncmRfa2ljayh0eG5fbWdyICogbWdyKTsKK2V4
dGVybiBpbnQgaXNfY3VycmVudF9rdHhubWdyZCh2b2lkKTsKKworLyogX19LVFhOTUdSRF9IX18g
Ki8KKyNlbmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgor
ICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1i
YXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAg
RW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMv
cmVpc2VyNC9sb2NrLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvbG9jay5jCi0tLSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L2xvY2suYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAw
MCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvbG9jay5jCTIwMjAtMDItMDUgMjA6
NTM6NDEuNDU2MjIyMjAxICswMTAwCkBAIC0wLDAgKzEsMTIzNyBAQAorLyogQ29weXJpZ2h0IDIw
MDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICog
cmVpc2VyNC9SRUFETUUgKi8KKworLyogVHJhZGl0aW9uYWwgZGVhZGxvY2sgYXZvaWRhbmNlIGlz
IGFjaGlldmVkIGJ5IGFjcXVpcmluZyBhbGwgbG9ja3MgaW4gYSBzaW5nbGUKKyAgIG9yZGVyLiAg
VjQgYmFsYW5jZXMgdGhlIHRyZWUgZnJvbSB0aGUgYm90dG9tIHVwLCBhbmQgc2VhcmNoZXMgdGhl
IHRyZWUgZnJvbQorICAgdGhlIHRvcCBkb3duLCBhbmQgdGhhdCBpcyByZWFsbHkgdGhlIHdheSB3
ZSB3YW50IGl0LCBzbyB0cmFkaXRpb24gd29uJ3Qgd29yaworICAgZm9yIHVzLgorCisgICBJbnN0
ZWFkIHdlIGhhdmUgdHdvIGxvY2sgb3JkZXJpbmdzLCBhIGhpZ2ggcHJpb3JpdHkgbG9jayBvcmRl
cmluZywgYW5kIGEgbG93CisgICBwcmlvcml0eSBsb2NrIG9yZGVyaW5nLiAgRWFjaCBub2RlIGlu
IHRoZSB0cmVlIGhhcyBhIGxvY2sgaW4gaXRzIHpub2RlLgorCisgICBTdXBwb3NlIHdlIGhhdmUg
YSBzZXQgb2YgcHJvY2Vzc2VzIHdoaWNoIGxvY2sgKFIvVykgdHJlZSBub2Rlcy4gRWFjaCBwcm9j
ZXNzCisgICBoYXMgYSBzZXQgKG1heWJlIGVtcHR5KSBvZiBhbHJlYWR5IGxvY2tlZCBub2RlcyAo
InByb2Nlc3MgbG9ja2VkIHNldCIpLiBFYWNoCisgICBwcm9jZXNzIG1heSBoYXZlIGEgcGVuZGlu
ZyBsb2NrIHJlcXVlc3QgdG8gYSBub2RlIGxvY2tlZCBieSBhbm90aGVyIHByb2Nlc3MuCisgICBO
b3RlOiB3ZSBsb2NrIGFuZCB1bmxvY2ssIGJ1dCBkbyBub3QgdHJhbnNmZXIgbG9ja3M6IGl0IGlz
IHBvc3NpYmxlCisgICB0cmFuc2ZlcnJpbmcgbG9ja3MgaW5zdGVhZCB3b3VsZCBzYXZlIHNvbWUg
YnVzIGxvY2tpbmcuLi4uCisKKyAgIERlYWRsb2NrIG9jY3VycyB3aGVuIHdlIGhhdmUgYSBsb29w
IGNvbnN0cnVjdGVkIGZyb20gcHJvY2VzcyBsb2NrZWQgc2V0cyBhbmQKKyAgIGxvY2sgcmVxdWVz
dCB2ZWN0b3JzLgorCisgICBOT1RFOiBUaGUgcmVpc2VyNCAidHJlZSIgaXMgYSB0cmVlIG9uIGRp
c2ssIGJ1dCBpdHMgY2FjaGVkIHJlcHJlc2VudGF0aW9uIGluCisgICBtZW1vcnkgaXMgZXh0ZW5k
ZWQgd2l0aCAiem5vZGVzIiB3aXRoIHdoaWNoIHdlIGNvbm5lY3Qgbm9kZXMgd2l0aCB0aGVpciBs
ZWZ0CisgICBhbmQgcmlnaHQgbmVpZ2hib3JzIHVzaW5nIHNpYmxpbmcgcG9pbnRlcnMgc3RvcmVk
IGluIHRoZSB6bm9kZXMuICBXaGVuIHdlCisgICBwZXJmb3JtIGJhbGFuY2luZyBvcGVyYXRpb25z
IHdlIG9mdGVuIGdvIGZyb20gbGVmdCB0byByaWdodCBhbmQgZnJvbSByaWdodCB0bworICAgbGVm
dC4KKworICAgKy1QMS0rICAgICAgICAgICstUDMtKworICAgfCstLSt8ICAgVjEgICAgIHwrLS0r
fAorICAgfHxOMXx8IC0tLS0tLS0+IHx8TjN8fAorICAgfCstLSt8ICAgICAgICAgIHwrLS0rfAor
ICAgKy0tLS0rICAgICAgICAgICstLS0tKworICAgICBeICAgICAgICAgICAgICAgfAorICAgICB8
VjIgICAgICAgICAgICAgfFYzCisgICAgIHwgICAgICAgICAgICAgICB2CisgICArLS0tLS0tLS0t
UDItLS0tLS0tLS0rCisgICB8Ky0tKyAgICAgICAgICAgICstLSt8CisgICB8fE4yfCAgLS0tLS0t
LS0gIHxONHx8CisgICB8Ky0tKyAgICAgICAgICAgICstLSt8CisgICArLS0tLS0tLS0tLS0tLS0t
LS0tLS0rCisKKyAgIFdlIHNvbHZlIHRoaXMgYnkgZW5zdXJpbmcgdGhhdCBvbmx5IGxvdyBwcmlv
cml0eSBwcm9jZXNzZXMgbG9jayBpbiB0b3AgdG8KKyAgIGJvdHRvbSBvcmRlciBhbmQgZnJvbSBy
aWdodCB0byBsZWZ0LCBhbmQgaGlnaCBwcmlvcml0eSBwcm9jZXNzZXMgbG9jayBmcm9tCisgICBi
b3R0b20gdG8gdG9wIGFuZCBsZWZ0IHRvIHJpZ2h0LgorCisgICBaQU0tRklYTUUtSEFOUzogb3Jk
ZXIgbm90IGp1c3Qgbm9kZSBsb2NrcyBpbiB0aGlzIHdheSwgb3JkZXIgYXRvbSBsb2NrcywgYW5k
CisgICBraWxsIHRob3NlIGRhbW4gYnVzeSBsb29wcy4KKyAgIEFOU1dFUihaQU0pOiBhdG9tIGxv
Y2tzICh3aGljaCBhcmUgaW50cm9kdWNlZCBieSBBU1RBR0VfQ0FQVFVSRV9XQUlUIGF0b20KKyAg
IHN0YWdlKSBjYW5ub3QgYmUgb3JkZXJlZCB0aGF0IHdheS4gVGhlcmUgYXJlIG5vIHJ1bGVzIHdo
YXQgbm9kZXMgY2FuIGJlbG9uZworICAgdG8gdGhlIGF0b20gYW5kIHdoYXQgbm9kZXMgY2Fubm90
LiAgV2UgY2Fubm90IGRlZmluZSB3aGF0IGlzIHJpZ2h0IG9yIGxlZnQKKyAgIGRpcmVjdGlvbiwg
d2hhdCBpcyB0b3Agb3IgYm90dG9tLiAgV2UgY2FuIHRha2UgaW1tZWRpYXRlIHBhcmVudCBvciBz
aWRlCisgICBuZWlnaGJvciBvZiBvbmUgbm9kZSwgYnV0IG5vYm9keSBndWFyYW50ZWVzIHRoYXQs
IHNheSwgbGVmdCBuZWlnaGJvciBub2RlIGlzCisgICBub3QgYSBmYXIgcmlnaHQgbmVpZ2hib3Ig
Zm9yIG90aGVyIG5vZGVzIGZyb20gdGhlIHNhbWUgYXRvbS4gIEl0IGJyZWFrcworICAgZGVhZGxv
Y2sgYXZvaWRhbmNlIHJ1bGVzIGFuZCBoaS1sb3cgcHJpb3JpdHkgbG9ja2luZyBjYW5ub3QgYmUg
YXBwbGllZCBmb3IKKyAgIGF0b20gbG9ja3MuCisKKyAgIEhvdyBkb2VzIGl0IGhlbHAgdG8gYXZv
aWQgZGVhZGxvY2tzID8KKworICAgU3VwcG9zZSB3ZSBoYXZlIGEgZGVhZGxvY2sgd2l0aCBuIHBy
b2Nlc3Nlcy4gUHJvY2Vzc2VzIGZyb20gb25lIHByaW9yaXR5CisgICBjbGFzcyBuZXZlciBkZWFk
bG9jayBiZWNhdXNlIHRoZXkgdGFrZSBsb2NrcyBpbiBvbmUgY29uc2lzdGVudAorICAgb3JkZXIu
CisKKyAgIFNvLCBhbnkgcG9zc2libGUgZGVhZGxvY2sgbG9vcCBtdXN0IGhhdmUgbG93IHByaW9y
aXR5IGFzIHdlbGwgYXMgaGlnaAorICAgcHJpb3JpdHkgcHJvY2Vzc2VzLiAgVGhlcmUgYXJlIG5v
IG90aGVyIGxvY2sgcHJpb3JpdHkgbGV2ZWxzIGV4Y2VwdCBsb3cgYW5kCisgICBoaWdoLiBXZSBr
bm93IHRoYXQgYW55IGRlYWRsb2NrIGxvb3AgY29udGFpbnMgYXQgbGVhc3Qgb25lIG5vZGUgbG9j
a2VkIGJ5IGEKKyAgIGxvdyBwcmlvcml0eSBwcm9jZXNzIGFuZCByZXF1ZXN0ZWQgYnkgYSBoaWdo
IHByaW9yaXR5IHByb2Nlc3MuIElmIHRoaXMKKyAgIHNpdHVhdGlvbiBpcyBjYXVnaHQgYW5kIHJl
c29sdmVkIGl0IGlzIHN1ZmZpY2llbnQgdG8gYXZvaWQgZGVhZGxvY2tzLgorCisgICBWNCBERUFE
TE9DSyBQUkVWRU5USU9OIEFMR09SSVRITSBJTVBMRU1FTlRBVElPTi4KKworICAgVGhlIGRlYWRs
b2NrIHByZXZlbnRpb24gYWxnb3JpdGhtIGlzIGJhc2VkIG9uIGNvbXBhcmluZworICAgcHJpb3Jp
dGllcyBvZiBub2RlIG93bmVycyAocHJvY2Vzc2VzIHdoaWNoIGtlZXAgem5vZGUgbG9ja2VkKSBh
bmQKKyAgIHJlcXVlc3RlcnMgKHByb2Nlc3NlcyB3aGljaCB3YW50IHRvIGFjcXVpcmUgYSBsb2Nr
IG9uIHpub2RlKS4gIFdlCisgICBpbXBsZW1lbnQgYSBzY2hlbWUgd2hlcmUgbG93LXByaW9yaXR5
IG93bmVycyB5aWVsZCBsb2NrcyB0bworICAgaGlnaC1wcmlvcml0eSByZXF1ZXN0ZXJzLiBXZSBj
cmVhdGVkIGEgc2lnbmFsIHBhc3Npbmcgc3lzdGVtIHRoYXQKKyAgIGlzIHVzZWQgdG8gYXNrIGxv
dy1wcmlvcml0eSBwcm9jZXNzZXMgdG8geWllbGQgb25lIG9yIG1vcmUgbG9ja2VkCisgICB6bm9k
ZXMuCisKKyAgIFRoZSBjb25kaXRpb24gd2hlbiBhIHpub2RlIG5lZWRzIHRvIGNoYW5nZSBpdHMg
b3duZXJzIGlzIGRlc2NyaWJlZCBieSB0aGUKKyAgIGZvbGxvd2luZyBmb3JtdWxhOgorCisgICAj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKKyAgICMgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIworICAgIyAobnVtYmVyIG9mIGhp
Z2gtcHJpb3JpdHkgcmVxdWVzdGVycykgPiAgMCAjCisgICAjICAgICAgICAgICAgICAgIEFORCAg
ICAgICAgICAgICAgICAgICAgICAgICMKKyAgICMgKG51bWJlcnMgb2YgaGlnaC1wcmlvcml0eSBv
d25lcnMpICAgID09IDAgIworICAgIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAjCisgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMKKworICAgTm90ZSB0aGF0IGEgbG93LXByaW9yaXR5IHByb2Nlc3MgZGVsYXlzIG5vZGUgcmVs
ZWFzaW5nIGlmIGFub3RoZXIKKyAgIGhpZ2gtcHJpb3JpdHkgcHJvY2VzcyBvd25zIHRoaXMgbm9k
ZS4gIFNvLCBzbGlnaHRseSBtb3JlIHN0cmljdGx5IHNwZWFraW5nLAorICAgdG8gaGF2ZSBhIGRl
YWRsb2NrIGNhcGFibGUgY3ljbGUgeW91IG11c3QgaGF2ZSBhIGxvb3AgaW4gd2hpY2ggYSBoaWdo
CisgICBwcmlvcml0eSBwcm9jZXNzIGlzIHdhaXRpbmcgb24gYSBsb3cgcHJpb3JpdHkgcHJvY2Vz
cyB0byB5aWVsZCBhIG5vZGUsIHdoaWNoCisgICBpcyBzbGlnaHRseSBkaWZmZXJlbnQgZnJvbSBz
YXlpbmcgYSBoaWdoIHByaW9yaXR5IHByb2Nlc3MgaXMgd2FpdGluZyBvbiBhCisgICBub2RlIG93
bmVkIGJ5IGEgbG93IHByaW9yaXR5IHByb2Nlc3MuCisKKyAgIEl0IGlzIGVub3VnaCB0byBhdm9p
ZCBkZWFkbG9ja3MgaWYgd2UgcHJldmVudCBhbnkgbG93LXByaW9yaXR5IHByb2Nlc3MgZnJvbQor
ICAgZmFsbGluZyBhc2xlZXAgaWYgaXRzIGxvY2tlZCBzZXQgY29udGFpbnMgYSBub2RlIHdoaWNo
IHNhdGlzZmllcyB0aGUKKyAgIGRlYWRsb2NrIGNvbmRpdGlvbi4KKworICAgVGhhdCBjb25kaXRp
b24gaXMgaW1wbGljaXRseSBvciBleHBsaWNpdGx5IGNoZWNrZWQgaW4gYWxsIHBsYWNlcyB3aGVy
ZSBuZXcKKyAgIGhpZ2gtcHJpb3JpdHkgcmVxdWVzdHMgbWF5IGJlIGFkZGVkIG9yIHJlbW92ZWQg
ZnJvbSBub2RlIHJlcXVlc3QgcXVldWUgb3IKKyAgIGhpZ2gtcHJpb3JpdHkgcHJvY2VzcyB0YWtl
cyBvciByZWxlYXNlcyBhIGxvY2sgb24gbm9kZS4gVGhlIG1haW4KKyAgIGdvYWwgb2YgdGhlc2Ug
Y2hlY2tzIGlzIHRvIG5ldmVyIGxvc2UgdGhlIG1vbWVudCB3aGVuIG5vZGUgYmVjb21lcyAiaGFz
CisgICB3cm9uZyBvd25lcnMiIGFuZCBzZW5kICJtdXN0LXlpZWxkLXRoaXMtbG9jayIgc2lnbmFs
cyB0byBpdHMgbG93LXByaSBvd25lcnMKKyAgIGF0IHRoYXQgdGltZS4KKworICAgVGhlIGluZm9y
bWF0aW9uIGFib3V0IHJlY2VpdmVkIHNpZ25hbHMgaXMgc3RvcmVkIGluIHRoZSBwZXItcHJvY2Vz
cworICAgc3RydWN0dXJlIChsb2NrIHN0YWNrKSBhbmQgYW5hbHl6ZWQgYmVmb3JlIGEgbG93LXBy
aW9yaXR5IHByb2Nlc3MgZ29lcyB0bworICAgc2xlZXAgYnV0IGFmdGVyIGEgImZhc3QiIGF0dGVt
cHQgdG8gbG9jayBhIG5vZGUgZmFpbHMuIEFueSBzaWduYWwgd2FrZXMKKyAgIHNsZWVwaW5nIHBy
b2Nlc3MgdXAgYW5kIGZvcmNlcyBoaW0gdG8gcmUtY2hlY2sgbG9jayBzdGF0dXMgYW5kIHJlY2Vp
dmVkCisgICBzaWduYWwgaW5mby4gSWYgIm11c3QteWllbGQtdGhpcy1sb2NrIiBzaWduYWxzIHdl
cmUgcmVjZWl2ZWQgdGhlIGxvY2tpbmcKKyAgIHByaW1pdGl2ZSAobG9uZ3Rlcm1fbG9ja196bm9k
ZSgpKSBmYWlscyB3aXRoIC1FX0RFQURMT0NLIGVycm9yIGNvZGUuCisKKyAgIFY0IExPQ0tJTkcg
RFJBV0JBQ0tTCisKKyAgIElmIHdlIGhhdmUgYWxyZWFkeSBiYWxhbmNlZCBvbiBvbmUgbGV2ZWws
IGFuZCB3ZSBhcmUgcHJvcGFnYXRpbmcgb3VyIGNoYW5nZXMKKyAgIHVwd2FyZCB0byBhIGhpZ2hl
ciBsZXZlbCwgaXQgY291bGQgYmUgdmVyeSBtZXNzeSB0byBzdXJyZW5kZXIgYWxsIGxvY2tzIG9u
CisgICB0aGUgbG93ZXIgbGV2ZWwgYmVjYXVzZSB3ZSBwdXQgc28gbXVjaCBjb21wdXRhdGlvbmFs
IHdvcmsgaW50byBpdCwgYW5kCisgICByZXZlcnRpbmcgdGhlbSB0byB0aGVpciBzdGF0ZSBiZWZv
cmUgdGhleSB3ZXJlIGxvY2tlZCBtaWdodCBiZSB2ZXJ5IGNvbXBsZXguCisgICBXZSBhbHNvIGRv
bid0IHdhbnQgdG8gYWNxdWlyZSBhbGwgbG9ja3MgYmVmb3JlIHBlcmZvcm1pbmcgYmFsYW5jaW5n
IGJlY2F1c2UKKyAgIHRoYXQgd291bGQgZWl0aGVyIGJlIGFsbW9zdCBhcyBtdWNoIHdvcmsgYXMg
dGhlIGJhbGFuY2luZywgb3IgaXQgd291bGQgYmUKKyAgIHRvbyBjb25zZXJ2YXRpdmUgYW5kIGxv
Y2sgdG9vIG11Y2guICBXZSB3YW50IGJhbGFuY2luZyB0byBiZSBkb25lIG9ubHkgYXQKKyAgIGhp
Z2ggcHJpb3JpdHkuICBZZXQsIHdlIG1pZ2h0IHdhbnQgdG8gZ28gdG8gdGhlIGxlZnQgb25lIG5v
ZGUgYW5kIHVzZSBzb21lCisgICBvZiBpdHMgZW1wdHkgc3BhY2UuLi4gU28gd2UgbWFrZSBvbmUg
YXR0ZW1wdCBhdCBnZXR0aW5nIHRoZSBub2RlIHRvIHRoZSBsZWZ0CisgICB1c2luZyB0cnlfbG9j
aywgYW5kIGlmIGl0IGZhaWxzIHdlIGRvIHdpdGhvdXQgaXQsIGJlY2F1c2Ugd2UgZGlkbid0IHJl
YWxseQorICAgbmVlZCBpdCwgaXQgd2FzIG9ubHkgYSBuaWNlIHRvIGhhdmUuCisKKyAgIExPQ0sg
U1RSVUNUVVJFUyBERVNDUklQVElPTgorCisgICBUaGUgZm9sbG93aW5nIGRhdGEgc3RydWN0dXJl
cyBhcmUgdXNlZCBpbiB0aGUgcmVpc2VyNCBsb2NraW5nCisgICBpbXBsZW1lbnRhdGlvbjoKKwor
ICAgQWxsIGZpZWxkcyByZWxhdGVkIHRvIGxvbmctdGVybSBsb2NraW5nIGFyZSBzdG9yZWQgaW4g
em5vZGUtPmxvY2suCisKKyAgIFRoZSBsb2NrIHN0YWNrIGlzIGEgcGVyIHRocmVhZCBvYmplY3Qu
ICBJdCBvd25zIGFsbCB6bm9kZXMgbG9ja2VkIGJ5IHRoZQorICAgdGhyZWFkLiBPbmUgem5vZGUg
bWF5IGJlIGxvY2tlZCBieSBzZXZlcmFsIHRocmVhZHMgaW4gY2FzZSBvZiByZWFkIGxvY2sgb3IK
KyAgIG9uZSB6bm9kZSBtYXkgYmUgd3JpdGUgbG9ja2VkIGJ5IG9uZSB0aHJlYWQgc2V2ZXJhbCB0
aW1lcy4gVGhlIHNwZWNpYWwgbGluaworICAgb2JqZWN0cyAobG9jayBoYW5kbGVzKSBzdXBwb3J0
IG48LT5tIHJlbGF0aW9uIGJldHdlZW4gem5vZGVzIGFuZCBsb2NrCisgICBvd25lcnMuCisKKyAg
IDxUaHJlYWQgMT4gICAgICAgICAgICAgICAgICAgICAgIDxUaHJlYWQgMj4KKworICAgKy0tLS0t
LS0tLSsgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tKworICAgfCAgTFMxICAgIHwJCSAg
ICAgICAgICAgfCAgTFMyICAgIHwKKyAgICstLS0tLS0tLS0rCQkJICAgKy0tLS0tLS0tLSsKKyAg
ICAgICBeICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeCisgICAgICAgfC0tLS0tLS0t
LS0tLS0tLSsgICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0rCisgICAgICAgdiAgICAgICAgICAg
ICAgIHYgICAgICAgICAgICAgICAgdiAgICAgICAgICB2CisgICArLS0tLS0tLS0tKyAgICAgICst
LS0tLS0tLS0rICAgICstLS0tLS0tLS0rICAgKy0tLS0tLS0tLSsKKyAgIHwgIExIMSAgICB8ICAg
ICAgfCAgIExIMiAgIHwJICAgfCAgTEgzICAgIHwgICB8ICAgTEg0ICAgfAorICAgKy0tLS0tLS0t
LSsJICAgICstLS0tLS0tLS0rCSAgICstLS0tLS0tLS0rICAgKy0tLS0tLS0tLSsKKyAgICAgICBe
ICAgICAgICAgICAgICAgICAgIF4gICAgICAgICAgICBeICAgICAgICAgICBeCisgICAgICAgfCAg
ICAgICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tKyAgICAgICAgICAgfAorICAgICAgIHYgICAg
ICAgICAgICAgICAgICAgdiAgICAgICAgICAgICAgICAgICAgICAgIHYKKyAgICstLS0tLS0tLS0r
ICAgICAgKy0tLS0tLS0tLSsgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tKworICAgfCAgWjEg
ICAgIHwJICAgIHwJWjIgICAgfCAgICAgICAgICAgICAgICAgIHwgIFozICAgICB8CisgICArLS0t
LS0tLS0tKwkgICAgKy0tLS0tLS0tLSsgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tKworCisg
ICBUaHJlYWQgMSBsb2NrZWQgem5vZGVzIFoxIGFuZCBaMiwgdGhyZWFkIDIgbG9ja2VkIHpub2Rl
cyBaMiBhbmQgWjMuIFRoZQorICAgcGljdHVyZSBhYm92ZSBzaG93cyB0aGF0IGxvY2sgc3RhY2sg
TFMxIGhhcyBhIGxpc3Qgb2YgMiBsb2NrIGhhbmRsZXMgTEgxIGFuZAorICAgTEgyLCBsb2NrIHN0
YWNrIExTMiBoYXMgYSBsaXN0IHdpdGggbG9jayBoYW5kbGVzIExIMyBhbmQgTEg0IG9uIGl0LiAg
Wm5vZGUKKyAgIFoxIGlzIGxvY2tlZCBieSBvbmx5IG9uZSB0aHJlYWQsIHpub2RlIGhhcyBvbmx5
IG9uZSBsb2NrIGhhbmRsZSBMSDEgb24gaXRzCisgICBsaXN0LCBzaW1pbGFyIHNpdHVhdGlvbiBp
cyBmb3IgWjMgd2hpY2ggaXMgbG9ja2VkIGJ5IHRoZSB0aHJlYWQgMiBvbmx5LiBaMgorICAgaXMg
bG9ja2VkIChmb3IgcmVhZCkgdHdpY2UgYnkgZGlmZmVyZW50IHRocmVhZHMgYW5kIHR3byBsb2Nr
IGhhbmRsZXMgYXJlIG9uCisgICBpdHMgbGlzdC4gRWFjaCBsb2NrIGhhbmRsZSByZXByZXNlbnRz
IGEgc2luZ2xlIHJlbGF0aW9uIG9mIGEgbG9ja2luZyBvZiBhCisgICB6bm9kZSBieSBhIHRocmVh
ZC4gTG9ja2luZyBvZiBhIHpub2RlIGlzIGFuIGVzdGFibGlzaGluZyBvZiBhIGxvY2tpbmcKKyAg
IHJlbGF0aW9uIGJldHdlZW4gdGhlIGxvY2sgc3RhY2sgYW5kIHRoZSB6bm9kZSBieSBhZGRpbmcg
b2YgYSBuZXcgbG9jayBoYW5kbGUKKyAgIHRvIGEgbGlzdCBvZiBsb2NrIGhhbmRsZXMsIHRoZSBs
b2NrIHN0YWNrLiAgVGhlIGxvY2sgc3RhY2sgbGlua3MgYWxsIGxvY2sKKyAgIGhhbmRsZXMgZm9y
IGFsbCB6bm9kZXMgbG9ja2VkIGJ5IHRoZSBsb2NrIHN0YWNrLiAgVGhlIHpub2RlIGxpc3QgZ3Jv
dXBzIGFsbAorICAgbG9jayBoYW5kbGVzIGZvciBhbGwgbG9ja3Mgc3RhY2tzIHdoaWNoIGxvY2tl
ZCB0aGUgem5vZGUuCisKKyAgIFlldCBhbm90aGVyIHJlbGF0aW9uIG1heSBleGlzdCBiZXR3ZWVu
IHpub2RlIGFuZCBsb2NrIG93bmVycy4gIElmIGxvY2sKKyAgIHByb2NlZHVyZSBjYW5ub3QgaW1t
ZWRpYXRlbHkgdGFrZSBsb2NrIG9uIGFuIG9iamVjdCBpdCBhZGRzIHRoZSBsb2NrIG93bmVyCisg
ICBvbiBzcGVjaWFsIGByZXF1ZXN0b3JzJyBsaXN0IGJlbG9uZ3MgdG8gem5vZGUuICBUaGF0IGxp
c3QgcmVwcmVzZW50cyBhCisgICBxdWV1ZSBvZiBwZW5kaW5nIGxvY2sgcmVxdWVzdHMuICBCZWNh
dXNlIG9uZSBsb2NrIG93bmVyIG1heSByZXF1ZXN0IG9ubHkKKyAgIG9ubHkgb25lIGxvY2sgb2Jq
ZWN0IGF0IGEgdGltZSwgaXQgaXMgYSAxLT5uIHJlbGF0aW9uIGJldHdlZW4gbG9jayBvYmplY3Rz
CisgICBhbmQgYSBsb2NrIG93bmVyIGltcGxlbWVudGVkIGFzIGl0IGlzIGRlc2NyaWJlZCBhYm92
ZS4gRnVsbCBpbmZvcm1hdGlvbgorICAgKHByaW9yaXR5LCBwb2ludGVycyB0byBsb2NrIGFuZCBs
aW5rIG9iamVjdHMpIGFib3V0IGVhY2ggbG9jayByZXF1ZXN0IGlzCisgICBzdG9yZWQgaW4gbG9j
ayBvd25lciBzdHJ1Y3R1cmUgaW4gYHJlcXVlc3QnIGZpZWxkLgorCisgICBTSE9SVF9URVJNIExP
Q0tJTkcKKworICAgVGhpcyBpcyBhIGxpc3Qgb2YgcHJpbWl0aXZlIG9wZXJhdGlvbnMgb3ZlciBs
b2NrIHN0YWNrcyAvIGxvY2sgaGFuZGxlcyAvCisgICB6bm9kZXMgYW5kIGxvY2tpbmcgZGVzY3Jp
cHRpb25zIGZvciB0aGVtLgorCisgICAxLiBsb2NraW5nIC8gdW5sb2NraW5nIHdoaWNoIGlzIGRv
bmUgYnkgdHdvIGxpc3QgaW5zZXJ0aW9uL2RlbGV0aW9uLCBvbmUKKyAgICAgIHRvL2Zyb20gem5v
ZGUncyBsaXN0IG9mIGxvY2sgaGFuZGxlcywgYW5vdGhlciBvbmUgaXMgdG8vZnJvbSBsb2NrIHN0
YWNrJ3MKKyAgICAgIGxpc3Qgb2YgbG9jayBoYW5kbGVzLiAgVGhlIGZpcnN0IGluc2VydGlvbiBp
cyBwcm90ZWN0ZWQgYnkKKyAgICAgIHpub2RlLT5sb2NrLmd1YXJkIHNwaW5sb2NrLiAgVGhlIGxp
c3Qgb3duZWQgYnkgdGhlIGxvY2sgc3RhY2sgY2FuIGJlCisgICAgICBtb2RpZmllZCBvbmx5IGJ5
IHRocmVhZCB3aG8gb3ducyB0aGUgbG9jayBzdGFjayBhbmQgbm9ib2R5IGVsc2UgY2FuCisgICAg
ICBtb2RpZnkvcmVhZCBpdC4gVGhlcmUgaXMgbm90aGluZyB0byBiZSBwcm90ZWN0ZWQgYnkgYSBz
cGlubG9jayBvcgorICAgICAgc29tZXRoaW5nIGVsc2UuCisKKyAgIDIuIGFkZGluZy9yZW1vdmlu
ZyBhIGxvY2sgcmVxdWVzdCB0by9mcm9tIHpub2RlIHJlcXVlc3RlcnMgbGlzdC4gVGhlIHJ1bGUg
aXMKKyAgICAgIHRoYXQgem5vZGUtPmxvY2suZ3VhcmQgc3BpbmxvY2sgc2hvdWxkIGJlIHRha2Vu
IGZvciB0aGlzLgorCisgICAzLiB3ZSBjYW4gdHJhdmVyc2UgbGlzdCBvZiBsb2NrIGhhbmRsZXMg
YW5kIHVzZSByZWZlcmVuY2VzIHRvIGxvY2sgc3RhY2tzIHdobworICAgICAgbG9ja2VkIGdpdmVu
IHpub2RlIGlmIHpub2RlLT5sb2NrLmd1YXJkIHNwaW5sb2NrIGlzIHRha2VuLgorCisgICA0LiBJ
ZiBhIGxvY2sgc3RhY2sgaXMgYXNzb2NpYXRlZCB3aXRoIGEgem5vZGUgYXMgYSBsb2NrIHJlcXVl
c3RvciBvciBsb2NrCisgICAgICBvd25lciBpdHMgZXhpc3RlbmNlIGlzIGd1YXJhbnRlZWQgYnkg
em5vZGUtPmxvY2suZ3VhcmQgc3BpbmxvY2suICBTb21lIGl0cworICAgICAgKGxvY2sgc3RhY2sn
cykgZmllbGRzIHNob3VsZCBiZSBwcm90ZWN0ZWQgZnJvbSBiZWluZyBhY2Nlc3NlZCBpbiBwYXJh
bGxlbAorICAgICAgYnkgdHdvIG9yIG1vcmUgdGhyZWFkcy4gUGxlYXNlIGxvb2sgYXQgIGxvY2tf
c3RhY2sgc3RydWN0dXJlIGRlZmluaXRpb24KKyAgICAgIGZvciB0aGUgaW5mbyBob3cgdGhvc2Ug
ZmllbGRzIGFyZSBwcm90ZWN0ZWQuICovCisKKy8qIFpub2RlIGxvY2sgYW5kIGNhcHR1cmluZyBp
bnRlcnR3aW5pbmcuICovCisvKiBJbiBjdXJyZW50IGltcGxlbWVudGF0aW9uIHdlIGNhcHR1cmUg
Zm9ybWF0dGVkIG5vZGVzIGJlZm9yZSBsb2NraW5nCisgICB0aGVtLiBUYWtlIGEgbG9vayBvbiBs
b25ndGVybSBsb2NrIHpub2RlLCByZWlzZXI0X3RyeV9jYXB0dXJlKCkgcmVxdWVzdAorICAgcHJl
Y2VkZXMgbG9ja2luZyByZXF1ZXN0cy4gIFRoZSBsb25ndGVybV9sb2NrX3pub2RlIGZ1bmN0aW9u
IHVuY29uZGl0aW9uYWxseQorICAgY2FwdHVyZXMgem5vZGUgYmVmb3JlIGV2ZW4gY2hlY2tpbmcg
b2YgbG9ja2luZyBjb25kaXRpb25zLgorCisgICBBbm90aGVyIHZhcmlhbnQgaXMgdG8gY2FwdHVy
ZSB6bm9kZSBhZnRlciBsb2NraW5nIGl0LiAgSXQgd2FzIG5vdCB0ZXN0ZWQsIGJ1dAorICAgYXQg
bGVhc3Qgb25lIGRlYWRsb2NrIGNvbmRpdGlvbiBpcyBzdXBwb3NlZCB0byBiZSB0aGVyZS4gIE9u
ZSB0aHJlYWQgaGFzCisgICBsb2NrZWQgYSB6bm9kZSAoTm9kZS0xKSBhbmQgY2FsbHMgcmVpc2Vy
NF90cnlfY2FwdHVyZSgpIGZvciBpdC4KKyAgIHJlaXNlcjRfdHJ5X2NhcHR1cmUoKSBzbGVlcHMg
YmVjYXVzZSB6bm9kZSdzIGF0b20gaGFzIENBUFRVUkVfV0FJVCBzdGF0ZS4KKyAgIFNlY29uZCB0
aHJlYWQgaXMgYSBmbHVzaGluZyB0aHJlYWQsIGl0cyBjdXJyZW50IGF0b20gaXMgdGhlIGF0b20g
Tm9kZS0xCisgICBiZWxvbmdzIHRvLiBTZWNvbmQgdGhyZWFkIHdhbnRzIHRvIGxvY2sgTm9kZS0x
IGFuZCBzbGVlcHMgYmVjYXVzZSBOb2RlLTEKKyAgIGlzIGxvY2tlZCBieSB0aGUgZmlyc3QgdGhy
ZWFkLiAgVGhlIGRlc2NyaWJlZCBzaXR1YXRpb24gaXMgYSBkZWFkbG9jay4gKi8KKworI2luY2x1
ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAidHhubWdyLmgiCisjaW5jbHVkZSAiem5vZGUuaCIKKyNp
bmNsdWRlICJqbm9kZS5oIgorI2luY2x1ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJwbHVnaW4vbm9k
ZS9ub2RlLmgiCisjaW5jbHVkZSAic3VwZXIuaCIKKworI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2Nr
Lmg+CisKKyNpZiBSRUlTRVI0X0RFQlVHCitzdGF0aWMgaW50IHJlcXVlc3RfaXNfZGVhZGxvY2tf
c2FmZSh6bm9kZSAqICwgem5vZGVfbG9ja19tb2RlLAorCQkJCSAgICB6bm9kZV9sb2NrX3JlcXVl
c3QpOworI2VuZGlmCisKKy8qIFJldHVybnMgYSBsb2NrIG93bmVyIGFzc29jaWF0ZWQgd2l0aCBj
dXJyZW50IHRocmVhZCAqLworbG9ja19zdGFjayAqZ2V0X2N1cnJlbnRfbG9ja19zdGFjayh2b2lk
KQoreworCXJldHVybiAmZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5zdGFjazsKK30KKworLyogV2Fr
ZXMgdXAgYWxsIGxvdyBwcmlvcml0eSBvd25lcnMgaW5mb3JtaW5nIHRoZW0gYWJvdXQgcG9zc2li
bGUgZGVhZGxvY2sgKi8KK3N0YXRpYyB2b2lkIHdha2VfdXBfYWxsX2xvcHJpX293bmVycyh6bm9k
ZSAqIG5vZGUpCit7CisJbG9ja19oYW5kbGUgKmhhbmRsZTsKKworCWFzc2VydF9zcGluX2xvY2tl
ZCgmKG5vZGUtPmxvY2suZ3VhcmQpKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGhhbmRsZSwgJm5v
ZGUtPmxvY2sub3duZXJzLCBvd25lcnNfbGluaykgeworCQlhc3NlcnQoIm5pa2l0YS0xODMyIiwg
aGFuZGxlLT5ub2RlID09IG5vZGUpOworCQkvKiBjb3VudCB0aGlzIHNpZ25hbCBpbiBvd25lci0+
bnJfc2lnbmFsZWQgKi8KKwkJaWYgKCFoYW5kbGUtPnNpZ25hbGVkKSB7CisJCQloYW5kbGUtPnNp
Z25hbGVkID0gMTsKKwkJCWF0b21pY19pbmMoJmhhbmRsZS0+b3duZXItPm5yX3NpZ25hbGVkKTsK
KwkJCS8qIFdha2UgdXAgYSBzaW5nbGUgcHJvY2VzcyAqLworCQkJcmVpc2VyNF93YWtlX3VwKGhh
bmRsZS0+b3duZXIpOworCQl9CisJfQorfQorCisvKiBBZGRzIGEgbG9jayB0byBhIGxvY2sgb3du
ZXIsIHdoaWNoIG1lYW5zIGNyZWF0aW5nIGEgbGluayB0byB0aGUgbG9jayBhbmQKKyAgIHB1dHRp
bmcgdGhlIGxpbmsgaW50byB0aGUgdHdvIGxpc3RzIGFsbCBsaW5rcyBhcmUgb24gKHRoZSBkb3Vi
bHkgbGlua2VkIGxpc3QKKyAgIHRoYXQgZm9ybXMgdGhlIGxvY2tfc3RhY2ssIGFuZCB0aGUgZG91
Ymx5IGxpbmtlZCBsaXN0IG9mIGxpbmtzIGF0dGFjaGVkCisgICB0byBhIGxvY2suCisqLworc3Rh
dGljIGlubGluZSB2b2lkCitsaW5rX29iamVjdChsb2NrX2hhbmRsZSAqIGhhbmRsZSwgbG9ja19z
dGFjayAqIG93bmVyLCB6bm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJqbWFjZC04MTAiLCBoYW5k
bGUtPm93bmVyID09IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmxvY2suZ3Vh
cmQpKTsKKworCWhhbmRsZS0+b3duZXIgPSBvd25lcjsKKwloYW5kbGUtPm5vZGUgPSBub2RlOwor
CisJYXNzZXJ0KCJyZWlzZXI0LTQiLAorCSAgICAgICBlcmdvKGxpc3RfZW1wdHlfY2FyZWZ1bCgm
b3duZXItPmxvY2tzKSwgb3duZXItPm5yX2xvY2tzID09IDApKTsKKworCS8qIGFkZCBsb2NrIGhh
bmRsZSB0byB0aGUgZW5kIG9mIGxvY2tfc3RhY2sncyBsaXN0IG9mIGxvY2tzICovCisJbGlzdF9h
ZGRfdGFpbCgmaGFuZGxlLT5sb2Nrc19saW5rLCAmb3duZXItPmxvY2tzKTsKKwlPTl9ERUJVRyhv
d25lci0+bnJfbG9ja3MrKyk7CisJcmVpc2VyNF9jdHhfZ2ZwX21hc2tfc2V0KCk7CisKKwkvKiBh
ZGQgbG9jayBoYW5kbGUgdG8gdGhlIGhlYWQgb2Ygem5vZGUncyBsaXN0IG9mIG93bmVycyAqLwor
CWxpc3RfYWRkKCZoYW5kbGUtPm93bmVyc19saW5rLCAmbm9kZS0+bG9jay5vd25lcnMpOworCWhh
bmRsZS0+c2lnbmFsZWQgPSAwOworfQorCisvKiBCcmVha3MgYSByZWxhdGlvbiBiZXR3ZWVuIGEg
bG9jayBhbmQgaXRzIG93bmVyICovCitzdGF0aWMgaW5saW5lIHZvaWQgdW5saW5rX29iamVjdChs
b2NrX2hhbmRsZSAqIGhhbmRsZSkKK3sKKwlhc3NlcnQoInphbS0zNTQiLCBoYW5kbGUtPm93bmVy
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE2MDgiLCBoYW5kbGUtPm5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYoaGFuZGxlLT5ub2RlLT5sb2NrLmd1YXJkKSk7CisJYXNz
ZXJ0KCJuaWtpdGEtMTgyOSIsIGhhbmRsZS0+b3duZXIgPT0gZ2V0X2N1cnJlbnRfbG9ja19zdGFj
aygpKTsKKwlhc3NlcnQoInJlaXNlcjQtNSIsIGhhbmRsZS0+b3duZXItPm5yX2xvY2tzID4gMCk7
CisKKwkvKiByZW1vdmUgbG9jayBoYW5kbGUgZnJvbSBsb2NrX3N0YWNrJ3MgbGlzdCBvZiBsb2Nr
cyAqLworCWxpc3RfZGVsKCZoYW5kbGUtPmxvY2tzX2xpbmspOworCU9OX0RFQlVHKGhhbmRsZS0+
b3duZXItPm5yX2xvY2tzLS0pOworCXJlaXNlcjRfY3R4X2dmcF9tYXNrX3NldCgpOworCWFzc2Vy
dCgicmVpc2VyNC02IiwKKwkgICAgICAgZXJnbyhsaXN0X2VtcHR5X2NhcmVmdWwoJmhhbmRsZS0+
b3duZXItPmxvY2tzKSwKKwkJICAgIGhhbmRsZS0+b3duZXItPm5yX2xvY2tzID09IDApKTsKKwkv
KiByZW1vdmUgbG9jayBoYW5kbGUgZnJvbSB6bm9kZSdzIGxpc3Qgb2Ygb3duZXJzICovCisJbGlz
dF9kZWwoJmhhbmRsZS0+b3duZXJzX2xpbmspOworCS8qIGluZGljYXRlcyB0aGF0IGxvY2sgaGFu
ZGxlIGlzIGZyZWUgbm93ICovCisJaGFuZGxlLT5ub2RlID0gTlVMTDsKKyNpZiBSRUlTRVI0X0RF
QlVHCisJSU5JVF9MSVNUX0hFQUQoJmhhbmRsZS0+bG9ja3NfbGluayk7CisJSU5JVF9MSVNUX0hF
QUQoJmhhbmRsZS0+b3duZXJzX2xpbmspOworCWhhbmRsZS0+b3duZXIgPSBOVUxMOworI2VuZGlm
Cit9CisKKy8qIEFjdHVhbGx5IGxvY2tzIGFuIG9iamVjdCBrbm93aW5nIHRoYXQgd2UgYXJlIGFi
bGUgdG8gZG8gdGhpcyAqLworc3RhdGljIHZvaWQgbG9ja19vYmplY3QobG9ja19zdGFjayAqIG93
bmVyKQoreworCXN0cnVjdCBsb2NrX3JlcXVlc3QgKnJlcXVlc3Q7CisJem5vZGUgKm5vZGU7CisK
KwlyZXF1ZXN0ID0gJm93bmVyLT5yZXF1ZXN0OworCW5vZGUgPSByZXF1ZXN0LT5ub2RlOworCWFz
c2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmxvY2suZ3VhcmQpKTsKKwlpZiAocmVxdWVzdC0+bW9k
ZSA9PSBaTk9ERV9SRUFEX0xPQ0spIHsKKwkJbm9kZS0+bG9jay5ucl9yZWFkZXJzKys7CisJfSBl
bHNlIHsKKwkJLyogY2hlY2sgdGhhdCB3ZSBkb24ndCBzd2l0Y2hlZCBmcm9tIHJlYWQgdG8gd3Jp
dGUgbG9jayAqLworCQlhc3NlcnQoIm5pa2l0YS0xODQwIiwgbm9kZS0+bG9jay5ucl9yZWFkZXJz
IDw9IDApOworCQkvKiBXZSBhbGxvdyByZWN1cnNpdmUgbG9ja2luZzsgYSBub2RlIGNhbiBiZSBs
b2NrZWQgc2V2ZXJhbAorCQkgICB0aW1lcyBmb3Igd3JpdGUgYnkgc2FtZSBwcm9jZXNzICovCisJ
CW5vZGUtPmxvY2subnJfcmVhZGVycy0tOworCX0KKworCWxpbmtfb2JqZWN0KHJlcXVlc3QtPmhh
bmRsZSwgb3duZXIsIG5vZGUpOworCisJaWYgKG93bmVyLT5jdXJwcmkpCisJCW5vZGUtPmxvY2su
bnJfaGlwcmlfb3duZXJzKys7Cit9CisKKy8qIENoZWNrIGZvciByZWN1cnNpdmUgd3JpdGUgbG9j
a2luZyAqLworc3RhdGljIGludCByZWN1cnNpdmUobG9ja19zdGFjayAqIG93bmVyKQoreworCWlu
dCByZXQ7CisJem5vZGUgKm5vZGU7CisJbG9ja19oYW5kbGUgKmxoOworCisJbm9kZSA9IG93bmVy
LT5yZXF1ZXN0Lm5vZGU7CisKKwkvKiBPd25lcnMgbGlzdCBpcyBub3QgZW1wdHkgZm9yIGEgbG9j
a2VkIG5vZGUgKi8KKwlhc3NlcnQoInphbS0zMTQiLCAhbGlzdF9lbXB0eV9jYXJlZnVsKCZub2Rl
LT5sb2NrLm93bmVycykpOworCWFzc2VydCgibmlraXRhLTE4NDEiLCBvd25lciA9PSBnZXRfY3Vy
cmVudF9sb2NrX3N0YWNrKCkpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmxvY2suZ3Vh
cmQpKTsKKworCWxoID0gbGlzdF9lbnRyeShub2RlLT5sb2NrLm93bmVycy5uZXh0LCBsb2NrX2hh
bmRsZSwgb3duZXJzX2xpbmspOworCXJldCA9IChsaC0+b3duZXIgPT0gb3duZXIpOworCisJLyog
UmVjdXJzaXZlIHJlYWQgbG9ja2luZyBzaG91bGQgYmUgZG9uZSB1c3VhbCB3YXkgKi8KKwlhc3Nl
cnQoInphbS0zMTUiLCAhcmV0IHx8IG93bmVyLT5yZXF1ZXN0Lm1vZGUgPT0gWk5PREVfV1JJVEVf
TE9DSyk7CisJLyogbWl4aW5nIG9mIHJlYWQvd3JpdGUgbG9ja3MgaXMgbm90IGFsbG93ZWQgKi8K
Kwlhc3NlcnQoInphbS0zNDEiLCAhcmV0IHx8IHpub2RlX2lzX3dsb2NrZWQobm9kZSkpOworCisJ
cmV0dXJuIHJldDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIFJldHVybnMgdHJ1ZSBpZiB0
aGUgbG9jayBpcyBoZWxkIGJ5IHRoZSBjYWxsaW5nIHRocmVhZC4gKi8KK2ludCB6bm9kZV9pc19h
bnlfbG9ja2VkKGNvbnN0IHpub2RlICogbm9kZSkKK3sKKwlsb2NrX2hhbmRsZSAqaGFuZGxlOwor
CWxvY2tfc3RhY2sgKnN0YWNrOworCWludCByZXQ7CisKKwlpZiAoIXpub2RlX2lzX2xvY2tlZChu
b2RlKSkKKwkJcmV0dXJuIDA7CisKKwlzdGFjayA9IGdldF9jdXJyZW50X2xvY2tfc3RhY2soKTsK
KworCXNwaW5fbG9ja19zdGFjayhzdGFjayk7CisKKwlyZXQgPSAwOworCisJbGlzdF9mb3JfZWFj
aF9lbnRyeShoYW5kbGUsICZzdGFjay0+bG9ja3MsIGxvY2tzX2xpbmspIHsKKwkJaWYgKGhhbmRs
ZS0+bm9kZSA9PSBub2RlKSB7CisJCQlyZXQgPSAxOworCQkJYnJlYWs7CisJCX0KKwl9CisKKwlz
cGluX3VubG9ja19zdGFjayhzdGFjayk7CisKKwlyZXR1cm4gcmV0OworfQorCisjZW5kaWYKKwor
LyogUmV0dXJucyB0cnVlIGlmIGEgd3JpdGUgbG9jayBpcyBoZWxkIGJ5IHRoZSBjYWxsaW5nIHRo
cmVhZC4gKi8KK2ludCB6bm9kZV9pc193cml0ZV9sb2NrZWQoY29uc3Qgem5vZGUgKiBub2RlKQor
eworCWxvY2tfc3RhY2sgKnN0YWNrOworCWxvY2tfaGFuZGxlICpoYW5kbGU7CisKKwlhc3NlcnQo
ImptYWNkLTg3NjUiLCBub2RlICE9IE5VTEwpOworCisJaWYgKCF6bm9kZV9pc193bG9ja2VkKG5v
ZGUpKQorCQlyZXR1cm4gMDsKKworCXN0YWNrID0gZ2V0X2N1cnJlbnRfbG9ja19zdGFjaygpOwor
CisJLyoKKwkgKiBXaGVuIHpub2RlIGlzIHdyaXRlIGxvY2tlZCwgYWxsIG93bmVyIGhhbmRsZXMg
cG9pbnQgdG8gdGhlIHNhbWUgbG9jaworCSAqIHN0YWNrLiBHZXQgcG9pbnRlciB0byBsb2NrIHN0
YWNrIGZyb20gdGhlIGZpcnN0IGxvY2sgaGFuZGxlIGZyb20KKwkgKiB6bm9kZSdzIG93bmVyIGxp
c3QKKwkgKi8KKwloYW5kbGUgPSBsaXN0X2VudHJ5KG5vZGUtPmxvY2sub3duZXJzLm5leHQsIGxv
Y2tfaGFuZGxlLCBvd25lcnNfbGluayk7CisKKwlyZXR1cm4gKGhhbmRsZS0+b3duZXIgPT0gc3Rh
Y2spOworfQorCisvKiBUaGlzICJkZWFkbG9jayIgY29uZGl0aW9uIGlzIHRoZSBlc3NlbnRpYWwg
cGFydCBvZiByZWlzZXI0IGxvY2tpbmcKKyAgIGltcGxlbWVudGF0aW9uLiBUaGlzIGNvbmRpdGlv
biBpcyBjaGVja2VkIGV4cGxpY2l0bHkgYnkgY2FsbGluZworICAgY2hlY2tfZGVhZGxvY2tfY29u
ZGl0aW9uKCkgb3IgaW1wbGljaXRseSBpbiBhbGwgcGxhY2VzIHdoZXJlIHpub2RlIGxvY2sKKyAg
IHN0YXRlIChzZXQgb2Ygb3duZXJzIGFuZCByZXF1ZXN0IHF1ZXVlKSBpcyBjaGFuZ2VkLiBMb2Nr
aW5nIGNvZGUgaXMKKyAgIGRlc2lnbmVkIHRvIHVzZSB0aGlzIGNvbmRpdGlvbiB0byB0cmlnZ2Vy
IHByb2NlZHVyZSBvZiBwYXNzaW5nIG9iamVjdCBmcm9tCisgICBsb3cgcHJpb3JpdHkgb3duZXIo
cykgdG8gaGlnaCBwcmlvcml0eSBvbmUocykuCisKKyAgIFRoZSBwcm9jZWR1cmUgcmVzdWx0cyBp
biBwYXNzaW5nIGFuIGV2ZW50IChzZXR0aW5nIGxvY2tfaGFuZGxlLT5zaWduYWxlZAorICAgZmxh
ZykgYW5kIGNvdW50aW5nIHRoaXMgZXZlbnQgaW4gbnJfc2lnbmFsZWQgZmllbGQgb2Ygb3duZXIn
cyBsb2NrIHN0YWNrCisgICBvYmplY3QgYW5kIHdha2V1cCBvd25lcidzIHByb2Nlc3MuCisqLwor
c3RhdGljIGlubGluZSBpbnQgY2hlY2tfZGVhZGxvY2tfY29uZGl0aW9uKHpub2RlICogbm9kZSkK
K3sKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihub2RlLT5sb2NrLmd1YXJkKSk7CisJcmV0dXJuIG5v
ZGUtPmxvY2subnJfaGlwcmlfcmVxdWVzdHMgPiAwCisJICAgICYmIG5vZGUtPmxvY2subnJfaGlw
cmlfb3duZXJzID09IDA7Cit9CisKK3N0YXRpYyBpbnQgY2hlY2tfbGl2ZWxvY2tfY29uZGl0aW9u
KHpub2RlICogbm9kZSwgem5vZGVfbG9ja19tb2RlIG1vZGUpCit7CisJemxvY2sgKiBsb2NrID0g
Jm5vZGUtPmxvY2s7CisKKwlyZXR1cm4gbW9kZSA9PSBaTk9ERV9SRUFEX0xPQ0sgJiYKKwkJbG9j
ay0+bnJfcmVhZGVycyA+PSAwICYmIGxvY2stPm5yX2hpcHJpX3dyaXRlX3JlcXVlc3RzID4gMDsK
K30KKworLyogY2hlY2tzIGxvY2svcmVxdWVzdCBjb21wYXRpYmlsaXR5ICovCitzdGF0aWMgaW50
IGNhbl9sb2NrX29iamVjdChsb2NrX3N0YWNrICogb3duZXIpCit7CisJem5vZGUgKm5vZGUgPSBv
d25lci0+cmVxdWVzdC5ub2RlOworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+bG9jay5n
dWFyZCkpOworCisJLyogU2VlIGlmIHRoZSBub2RlIGlzIGRpc2Nvbm5lY3RlZC4gKi8KKwlpZiAo
dW5saWtlbHkoWkZfSVNTRVQobm9kZSwgSk5PREVfSVNfRFlJTkcpKSkKKwkJcmV0dXJuIFJFVEVS
UigtRUlOVkFMKTsKKworCS8qIERvIG5vdCBldmVyIHRyeSB0byB0YWtlIGEgbG9jayBpZiB3ZSBh
cmUgZ29pbmcgaW4gbG93IHByaW9yaXR5CisJICAgZGlyZWN0aW9uIGFuZCBhIG5vZGUgaGF2ZSBh
IGhpZ2ggcHJpb3JpdHkgcmVxdWVzdCB3aXRob3V0IGhpZ2gKKwkgICBwcmlvcml0eSBvd25lcnMu
ICovCisJaWYgKHVubGlrZWx5KCFvd25lci0+Y3VycHJpICYmIGNoZWNrX2RlYWRsb2NrX2NvbmRp
dGlvbihub2RlKSkpCisJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwlpZiAodW5saWtlbHko
b3duZXItPmN1cnByaSAmJgorCQkgICAgIGNoZWNrX2xpdmVsb2NrX2NvbmRpdGlvbihub2RlLCBv
d25lci0+cmVxdWVzdC5tb2RlKSkpCisJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwlpZiAo
dW5saWtlbHkoIWlzX2xvY2tfY29tcGF0aWJsZShub2RlLCBvd25lci0+cmVxdWVzdC5tb2RlKSkp
CisJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwlyZXR1cm4gMDsKK30KKworLyogU2V0dGlu
ZyBvZiBhIGhpZ2ggcHJpb3JpdHkgdG8gdGhlIHByb2Nlc3MuIEl0IGNsZWFycyAic2lnbmFsZWQi
IGZsYWdzCisgICBiZWNhdXNlIHpub2RlIGxvY2tlZCBieSBoaWdoLXByaW9yaXR5IHByb2Nlc3Mg
Y2FuJ3Qgc2F0aXNmeSBvdXIgImRlYWRsb2NrCisgICBjb25kaXRpb24iLiAqLworc3RhdGljIHZv
aWQgc2V0X2hpZ2hfcHJpb3JpdHkobG9ja19zdGFjayAqIG93bmVyKQoreworCWFzc2VydCgibmlr
aXRhLTE4NDYiLCBvd25lciA9PSBnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpOworCS8qIERvIG5v
dGhpbmcgaWYgY3VycmVudCBwcmlvcml0eSBpcyBhbHJlYWR5IGhpZ2ggKi8KKwlpZiAoIW93bmVy
LT5jdXJwcmkpIHsKKwkJLyogV2UgZG9uJ3QgbmVlZCBsb2NraW5nIGZvciBvd25lci0+bG9ja3Mg
bGlzdCwgYmVjYXVzZSwgdGhpcworCQkgKiBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZCB3aXRoIHRo
ZSBsb2NrIHN0YWNrIG9mIHRoZSBjdXJyZW50CisJCSAqIHRocmVhZCwgYW5kIG5vIG90aGVyIHRo
cmVhZCBjYW4gcGxheSB3aXRoIG93bmVyLT5sb2NrcyBsaXN0CisJCSAqIGFuZC9vciBjaGFuZ2Ug
LT5ub2RlIHBvaW50ZXJzIG9mIGxvY2sgaGFuZGxlcyBpbiB0aGlzIGxpc3QuCisJCSAqCisJCSAq
IChJbnRlcnJ1cHRzIGFsc28gYXJlIG5vdCBpbnZvbHZlZC4pCisJCSAqLworCQlsb2NrX2hhbmRs
ZSAqaXRlbSA9IGxpc3RfZW50cnkob3duZXItPmxvY2tzLm5leHQsIGxvY2tfaGFuZGxlLAorCQkJ
CQkgICAgICAgbG9ja3NfbGluayk7CisJCXdoaWxlICgmb3duZXItPmxvY2tzICE9ICZpdGVtLT5s
b2Nrc19saW5rKSB7CisJCQl6bm9kZSAqbm9kZSA9IGl0ZW0tPm5vZGU7CisKKwkJCXNwaW5fbG9j
a196bG9jaygmbm9kZS0+bG9jayk7CisKKwkJCW5vZGUtPmxvY2subnJfaGlwcmlfb3duZXJzKys7
CisKKwkJCS8qIHdlIGNhbiBzYWZlbHkgc2V0IHNpZ25hbGVkIHRvIHplcm8sIGJlY2F1c2UKKwkJ
CSAgIHByZXZpb3VzIHN0YXRlbWVudCAobnJfaGlwcmlfb3duZXJzICsrKSBndWFyYW50ZWVzCisJ
CQkgICB0aGF0IHNpZ25hbGVkIHdpbGwgYmUgbmV2ZXIgc2V0IGFnYWluLiAqLworCQkJaXRlbS0+
c2lnbmFsZWQgPSAwOworCQkJc3Bpbl91bmxvY2tfemxvY2soJm5vZGUtPmxvY2spOworCisJCQlp
dGVtID0gbGlzdF9lbnRyeShpdGVtLT5sb2Nrc19saW5rLm5leHQsIGxvY2tfaGFuZGxlLAorCQkJ
CQkgIGxvY2tzX2xpbmspOworCQl9CisJCW93bmVyLT5jdXJwcmkgPSAxOworCQlhdG9taWNfc2V0
KCZvd25lci0+bnJfc2lnbmFsZWQsIDApOworCX0KK30KKworLyogU2V0cyBhIGxvdyBwcmlvcml0
eSB0byB0aGUgcHJvY2Vzcy4gKi8KK3N0YXRpYyB2b2lkIHNldF9sb3dfcHJpb3JpdHkobG9ja19z
dGFjayAqIG93bmVyKQoreworCWFzc2VydCgibmlraXRhLTMwNzUiLCBvd25lciA9PSBnZXRfY3Vy
cmVudF9sb2NrX3N0YWNrKCkpOworCS8qIERvIG5vdGhpbmcgaWYgY3VycmVudCBwcmlvcml0eSBp
cyBhbHJlYWR5IGxvdyAqLworCWlmIChvd25lci0+Y3VycHJpKSB7CisJCS8qIHNjYW4gYWxsIGxv
Y2tzIChsb2NrIGhhbmRsZXMpIGhlbGQgYnkgQG93bmVyLCB3aGljaCBpcworCQkgICBhY3R1YWxs
eSBjdXJyZW50IHRocmVhZCwgYW5kIGNoZWNrIHdoZXRoZXIgd2UgYXJlIHJlYWNoaW5nCisJCSAg
IGRlYWRsb2NrIHBvc3NpYmlsaXR5IGFueXdoZXJlLgorCQkgKi8KKwkJbG9ja19oYW5kbGUgKmhh
bmRsZSA9IGxpc3RfZW50cnkob3duZXItPmxvY2tzLm5leHQsIGxvY2tfaGFuZGxlLAorCQkJCQkJ
IGxvY2tzX2xpbmspOworCQl3aGlsZSAoJm93bmVyLT5sb2NrcyAhPSAmaGFuZGxlLT5sb2Nrc19s
aW5rKSB7CisJCQl6bm9kZSAqbm9kZSA9IGhhbmRsZS0+bm9kZTsKKwkJCXNwaW5fbG9ja196bG9j
aygmbm9kZS0+bG9jayk7CisJCQkvKiB0aGlzIHRocmVhZCBqdXN0IHdhcyBoaXByaSBvd25lciBv
ZiBAbm9kZSwgc28KKwkJCSAgIG5yX2hpcHJpX293bmVycyBoYXMgdG8gYmUgZ3JlYXRlciB0aGFu
IHplcm8uICovCisJCQlhc3NlcnQoIm5pa2l0YS0xODM1Iiwgbm9kZS0+bG9jay5ucl9oaXByaV9v
d25lcnMgPiAwKTsKKwkJCW5vZGUtPmxvY2subnJfaGlwcmlfb3duZXJzLS07CisJCQkvKiBJZiB3
ZSBoYXZlIGRlYWRsb2NrIGNvbmRpdGlvbiwgYWRqdXN0IGEgbnJfc2lnbmFsZWQKKwkJCSAgIGZp
ZWxkLiBJdCBpcyBlbm91Z2ggdG8gc2V0ICJzaWduYWxlZCIgZmxhZyBvbmx5IGZvcgorCQkJICAg
Y3VycmVudCBwcm9jZXNzLCBvdGhlciBsb3ctcHJpIG93bmVycyB3aWxsIGJlCisJCQkgICBzaWdu
YWxlZCBhbmQgd2FrZW4gdXAgYWZ0ZXIgY3VycmVudCBwcm9jZXNzIHVubG9ja3MKKwkJCSAgIHRo
aXMgb2JqZWN0IGFuZCBhbnkgaGlnaC1wcmlvcml0eSByZXF1ZXN0b3IgdGFrZXMKKwkJCSAgIGNv
bnRyb2wuICovCisJCQlpZiAoY2hlY2tfZGVhZGxvY2tfY29uZGl0aW9uKG5vZGUpCisJCQkgICAg
JiYgIWhhbmRsZS0+c2lnbmFsZWQpIHsKKwkJCQloYW5kbGUtPnNpZ25hbGVkID0gMTsKKwkJCQlh
dG9taWNfaW5jKCZvd25lci0+bnJfc2lnbmFsZWQpOworCQkJfQorCQkJc3Bpbl91bmxvY2tfemxv
Y2soJm5vZGUtPmxvY2spOworCQkJaGFuZGxlID0gbGlzdF9lbnRyeShoYW5kbGUtPmxvY2tzX2xp
bmsubmV4dCwKKwkJCQkJICAgIGxvY2tfaGFuZGxlLCBsb2Nrc19saW5rKTsKKwkJfQorCQlvd25l
ci0+Y3VycHJpID0gMDsKKwl9Cit9CisKK3N0YXRpYyB2b2lkIHJlbW92ZV9sb2NrX3JlcXVlc3Qo
bG9ja19zdGFjayAqIHJlcXVlc3RvcikKK3sKKwl6bG9jayAqIGxvY2sgPSAmcmVxdWVzdG9yLT5y
ZXF1ZXN0Lm5vZGUtPmxvY2s7CisKKwlpZiAocmVxdWVzdG9yLT5jdXJwcmkpIHsKKwkJYXNzZXJ0
KCJuaWtpdGEtMTgzOCIsIGxvY2stPm5yX2hpcHJpX3JlcXVlc3RzID4gMCk7CisJCWxvY2stPm5y
X2hpcHJpX3JlcXVlc3RzLS07CisJCWlmIChyZXF1ZXN0b3ItPnJlcXVlc3QubW9kZSA9PSBaTk9E
RV9XUklURV9MT0NLKQorCQkJbG9jay0+bnJfaGlwcmlfd3JpdGVfcmVxdWVzdHMtLTsKKwl9CisJ
bGlzdF9kZWwoJnJlcXVlc3Rvci0+cmVxdWVzdG9yc19saW5rKTsKK30KKworc3RhdGljIHZvaWQg
aW52YWxpZGF0ZV9hbGxfbG9ja19yZXF1ZXN0cyh6bm9kZSAqIG5vZGUpCit7CisJbG9ja19zdGFj
ayAqcmVxdWVzdG9yLCAqdG1wOworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+bG9jay5n
dWFyZCkpOworCisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJlcXVlc3RvciwgdG1wLCAmbm9k
ZS0+bG9jay5yZXF1ZXN0b3JzLAorCQkJCSByZXF1ZXN0b3JzX2xpbmspIHsKKwkJcmVtb3ZlX2xv
Y2tfcmVxdWVzdChyZXF1ZXN0b3IpOworCQlyZXF1ZXN0b3ItPnJlcXVlc3QucmV0X2NvZGUgPSAt
RUlOVkFMOworCQlyZWlzZXI0X3dha2VfdXAocmVxdWVzdG9yKTsKKwkJcmVxdWVzdG9yLT5yZXF1
ZXN0Lm1vZGUgPSBaTk9ERV9OT19MT0NLOworCX0KK30KKworc3RhdGljIHZvaWQgZGlzcGF0Y2hf
bG9ja19yZXF1ZXN0cyh6bm9kZSAqIG5vZGUpCit7CisJbG9ja19zdGFjayAqcmVxdWVzdG9yLCAq
dG1wOworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+bG9jay5ndWFyZCkpOworCisJbGlz
dF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJlcXVlc3RvciwgdG1wLCAmbm9kZS0+bG9jay5yZXF1ZXN0
b3JzLAorCQkJCSByZXF1ZXN0b3JzX2xpbmspIHsKKwkJaWYgKHpub2RlX2lzX3dyaXRlX2xvY2tl
ZChub2RlKSkKKwkJCWJyZWFrOworCQlpZiAoIWNhbl9sb2NrX29iamVjdChyZXF1ZXN0b3IpKSB7
CisJCQlsb2NrX29iamVjdChyZXF1ZXN0b3IpOworCQkJcmVtb3ZlX2xvY2tfcmVxdWVzdChyZXF1
ZXN0b3IpOworCQkJcmVxdWVzdG9yLT5yZXF1ZXN0LnJldF9jb2RlID0gMDsKKwkJCXJlaXNlcjRf
d2FrZV91cChyZXF1ZXN0b3IpOworCQkJcmVxdWVzdG9yLT5yZXF1ZXN0Lm1vZGUgPSBaTk9ERV9O
T19MT0NLOworCQl9CisJfQorfQorCisvKiByZWxlYXNlIGxvbmctdGVybSBsb2NrLCBhY3F1aXJl
ZCBieSBsb25ndGVybV9sb2NrX3pub2RlKCkgKi8KK3ZvaWQgbG9uZ3Rlcm1fdW5sb2NrX3pub2Rl
KGxvY2tfaGFuZGxlICogaGFuZGxlKQoreworCXpub2RlICpub2RlID0gaGFuZGxlLT5ub2RlOwor
CWxvY2tfc3RhY2sgKm9sZG93bmVyID0gaGFuZGxlLT5vd25lcjsKKwlpbnQgaGlwcmk7CisJaW50
IHJlYWRlcnM7CisJaW50IHJkZWx0YTsKKwlpbnQgeW91ZGllOworCisJLyoKKwkgKiB0aGlzIGlz
IHRpbWUtY3JpdGljYWwgYW5kIGhpZ2hseSBvcHRpbWl6ZWQgY29kZS4gTW9kaWZ5IGNhcmVmdWxs
eS4KKwkgKi8KKworCWFzc2VydCgiam1hY2QtMTAyMSIsIGhhbmRsZSAhPSBOVUxMKTsKKwlhc3Nl
cnQoImptYWNkLTEwMjIiLCBoYW5kbGUtPm93bmVyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTEzOTIiLCBMT0NLX0NOVF9HVFoobG9uZ190ZXJtX2xvY2tlZF96bm9kZSkpOworCisJYXNzZXJ0
KCJ6YW0tMTMwIiwgb2xkb3duZXIgPT0gZ2V0X2N1cnJlbnRfbG9ja19zdGFjaygpKTsKKworCUxP
Q0tfQ05UX0RFQyhsb25nX3Rlcm1fbG9ja2VkX3pub2RlKTsKKworCS8qCisJICogdG8gbWluaW1p
emUgYW1vdW50IG9mIG9wZXJhdGlvbnMgcGVyZm9ybWVkIHVuZGVyIGxvY2ssIHByZS1jb21wdXRl
CisJICogYWxsIHZhcmlhYmxlcyB1c2VkIHdpdGhpbiBjcml0aWNhbCBzZWN0aW9uLiBUaGlzIG1h
a2VzIGNvZGUKKwkgKiBvYnNjdXJlLgorCSAqLworCisJLyogd2FzIHRoaXMgbG9jayBvZiBoaSBv
ciBsbyBwcmlvcml0eSAqLworCWhpcHJpID0gb2xkb3duZXItPmN1cnByaSA/IDEgOiAwOworCS8q
IG51bWJlciBvZiByZWFkZXJzICovCisJcmVhZGVycyA9IG5vZGUtPmxvY2subnJfcmVhZGVyczsK
KwkvKiArMSBpZiB3cml0ZSBsb2NrLCAtMSBpZiByZWFkIGxvY2sgKi8KKwlyZGVsdGEgPSAocmVh
ZGVycyA+IDApID8gLTEgOiArMTsKKwkvKiB0cnVlIGlmIG5vZGUgaXMgdG8gZGllIGFuZCB3cml0
ZSBsb2NrIGlzIHJlbGVhc2VkICovCisJeW91ZGllID0gWkZfSVNTRVQobm9kZSwgSk5PREVfSEVB
UkRfQkFOU0hFRSkgJiYgKHJlYWRlcnMgPCAwKTsKKworCXNwaW5fbG9ja196bG9jaygmbm9kZS0+
bG9jayk7CisKKwlhc3NlcnQoInphbS0xMDEiLCB6bm9kZV9pc19sb2NrZWQobm9kZSkpOworCisJ
LyogQWRqdXN0IGEgbnVtYmVyIG9mIGhpZ2ggcHJpb3JpdHkgb3duZXJzIG9mIHRoaXMgbG9jayAq
LworCWFzc2VydCgibmlraXRhLTE4MzYiLCBub2RlLT5sb2NrLm5yX2hpcHJpX293bmVycyA+PSBo
aXByaSk7CisJbm9kZS0+bG9jay5ucl9oaXByaV9vd25lcnMgLT0gaGlwcmk7CisKKwkvKiBIYW5k
bGUgem5vZGUgZGVhbGxvY2F0aW9uIG9uIGxhc3Qgd3JpdGUtbG9jayByZWxlYXNlLiAqLworCWlm
ICh6bm9kZV9pc193bG9ja2VkX29uY2Uobm9kZSkpIHsKKwkJaWYgKHlvdWRpZSkgeworCQkJZm9y
Z2V0X3pub2RlKGhhbmRsZSk7CisJCQlhc3NlcnQoIm5pa2l0YS0yMTkxIiwgem5vZGVfaW52YXJp
YW50KG5vZGUpKTsKKwkJCXpwdXQobm9kZSk7CisJCQlyZXR1cm47CisJCX0KKwl9CisKKwlpZiAo
aGFuZGxlLT5zaWduYWxlZCkKKwkJYXRvbWljX2RlYygmb2xkb3duZXItPm5yX3NpZ25hbGVkKTsK
KworCS8qIFVubG9ja2luZyBtZWFucyBvd25lcjwtPm9iamVjdCBsaW5rIGRlbGV0aW9uICovCisJ
dW5saW5rX29iamVjdChoYW5kbGUpOworCisJLyogVGhpcyBpcyBlbm91Z2ggdG8gYmUgc3VyZSB3
aGV0aGVyIGFuIG9iamVjdCBpcyBjb21wbGV0ZWx5CisJICAgdW5sb2NrZWQuICovCisJbm9kZS0+
bG9jay5ucl9yZWFkZXJzICs9IHJkZWx0YTsKKworCS8qIElmIHRoZSBub2RlIGlzIGxvY2tlZCBp
dCBtdXN0IGhhdmUgYW4gb3duZXJzIGxpc3QuICBMaWtld2lzZSwgaWYKKwkgICB0aGUgbm9kZSBp
cyB1bmxvY2tlZCBpdCBtdXN0IGhhdmUgYW4gZW1wdHkgb3duZXJzIGxpc3QuICovCisJYXNzZXJ0
KCJ6YW0tMzE5IiwgZXF1aSh6bm9kZV9pc19sb2NrZWQobm9kZSksCisJCQkgICAgICAgIWxpc3Rf
ZW1wdHlfY2FyZWZ1bCgmbm9kZS0+bG9jay5vd25lcnMpKSk7CisKKyNpZiBSRUlTRVI0X0RFQlVH
CisJaWYgKCF6bm9kZV9pc19sb2NrZWQobm9kZSkpCisJCSsrbm9kZS0+dGltZXNfbG9ja2VkOwor
I2VuZGlmCisKKwkvKiBJZiB0aGVyZSBhcmUgcGVuZGluZyBsb2NrIHJlcXVlc3RzIHdlIHdha2Ug
dXAgYSByZXF1ZXN0b3IgKi8KKwlpZiAoIXpub2RlX2lzX3dsb2NrZWQobm9kZSkpCisJCWRpc3Bh
dGNoX2xvY2tfcmVxdWVzdHMobm9kZSk7CisJaWYgKGNoZWNrX2RlYWRsb2NrX2NvbmRpdGlvbihu
b2RlKSkKKwkJd2FrZV91cF9hbGxfbG9wcmlfb3duZXJzKG5vZGUpOworCXNwaW5fdW5sb2NrX3ps
b2NrKCZub2RlLT5sb2NrKTsKKworCS8qIG1pbnVzIG9uZSByZWZlcmVuY2UgZnJvbSBoYW5kbGUt
Pm5vZGUgKi8KKwlhc3NlcnQoIm5pa2l0YS0yMTkwIiwgem5vZGVfaW52YXJpYW50KG5vZGUpKTsK
KwlPTl9ERUJVRyhjaGVja19sb2NrX2RhdGEoKSk7CisJT05fREVCVUcoY2hlY2tfbG9ja19ub2Rl
X2RhdGEobm9kZSkpOworCXpwdXQobm9kZSk7Cit9CisKKy8qIGZpbmFsIHBvcnRpb24gb2YgbG9u
Z3Rlcm0tbG9jayAqLworc3RhdGljIGludAorbG9ja190YWlsKGxvY2tfc3RhY2sgKiBvd25lciwg
aW50IG9rLCB6bm9kZV9sb2NrX21vZGUgbW9kZSkKK3sKKwl6bm9kZSAqbm9kZSA9IG93bmVyLT5y
ZXF1ZXN0Lm5vZGU7CisKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihub2RlLT5sb2NrLmd1YXJkKSk7
CisKKwkvKiBJZiB3ZSBicm9rZSB3aXRoIChvayA9PSAwKSBpdCBtZWFucyB3ZSBjYW5fbG9jaywg
bm93IGRvIGl0LiAqLworCWlmIChvayA9PSAwKSB7CisJCWxvY2tfb2JqZWN0KG93bmVyKTsKKwkJ
b3duZXItPnJlcXVlc3QubW9kZSA9IDA7CisJCS8qIGNvdW50IGEgcmVmZXJlbmNlIGZyb20gbG9j
a2hhbmRsZS0+bm9kZQorCisJCSAgIHpub2RlIHdhcyBhbHJlYWR5IHJlZmVyZW5jZWQgYXQgdGhl
IGVudHJ5IHRvIHRoaXMgZnVuY3Rpb24sCisJCSAgIGhlbmNlIHRha2luZyBzcGluLWxvY2sgaGVy
ZSBpcyBub3QgbmVjZXNzYXJ5IChzZWUgY29tbWVudAorCQkgICBpbiB0aGUgenJlZigpKS4KKwkJ
ICovCisJCXpyZWYobm9kZSk7CisKKwkJTE9DS19DTlRfSU5DKGxvbmdfdGVybV9sb2NrZWRfem5v
ZGUpOworCX0KKwlzcGluX3VubG9ja196bG9jaygmbm9kZS0+bG9jayk7CisJT05fREVCVUcoY2hl
Y2tfbG9ja19kYXRhKCkpOworCU9OX0RFQlVHKGNoZWNrX2xvY2tfbm9kZV9kYXRhKG5vZGUpKTsK
KwlyZXR1cm4gb2s7Cit9CisKKy8qCisgKiB2ZXJzaW9uIG9mIGxvbmd0ZXJtX3pub2RlX2xvY2so
KSBvcHRpbWl6ZWQgZm9yIHRoZSBtb3N0IGNvbW1vbiBjYXNlOiByZWFkCisgKiBsb2NrIHdpdGhv
dXQgYW55IHNwZWNpYWwgZmxhZ3MuIFRoaXMgaXMgdGhlIGtpbmQgb2YgbG9jayB0aGF0IGFueSB0
cmVlCisgKiB0cmF2ZXJzYWwgdGFrZXMgb24gdGhlIHJvb3Qgbm9kZSBvZiB0aGUgdHJlZSwgd2hp
Y2ggaXMgdmVyeSBmcmVxdWVudC4KKyAqLworc3RhdGljIGludCBsb25ndGVybV9sb2NrX3RyeWZh
c3QobG9ja19zdGFjayAqIG93bmVyKQoreworCWludCByZXN1bHQ7CisJem5vZGUgKm5vZGU7CisJ
emxvY2sgKmxvY2s7CisKKwlub2RlID0gb3duZXItPnJlcXVlc3Qubm9kZTsKKwlsb2NrID0gJm5v
ZGUtPmxvY2s7CisKKwlhc3NlcnQoIm5pa2l0YS0zMzQwIiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgp
KTsKKwlhc3NlcnQoIm5pa2l0YS0zMzQxIiwgcmVxdWVzdF9pc19kZWFkbG9ja19zYWZlKG5vZGUs
CisJCQkJCQkgICAgICAgWk5PREVfUkVBRF9MT0NLLAorCQkJCQkJICAgICAgIFpOT0RFX0xPQ0tf
TE9QUkkpKTsKKwlzcGluX2xvY2tfemxvY2sobG9jayk7CisJcmVzdWx0ID0gY2FuX2xvY2tfb2Jq
ZWN0KG93bmVyKTsKKwlzcGluX3VubG9ja196bG9jayhsb2NrKTsKKworCWlmIChsaWtlbHkocmVz
dWx0ICE9IC1FSU5WQUwpKSB7CisJCXNwaW5fbG9ja196bm9kZShub2RlKTsKKwkJcmVzdWx0ID0g
cmVpc2VyNF90cnlfY2FwdHVyZShaSk5PREUobm9kZSksIFpOT0RFX1JFQURfTE9DSywgMCk7CisJ
CXNwaW5fdW5sb2NrX3pub2RlKG5vZGUpOworCQlzcGluX2xvY2tfemxvY2sobG9jayk7CisJCWlm
ICh1bmxpa2VseShyZXN1bHQgIT0gMCkpIHsKKwkJCW93bmVyLT5yZXF1ZXN0Lm1vZGUgPSAwOwor
CQl9IGVsc2UgeworCQkJcmVzdWx0ID0gY2FuX2xvY2tfb2JqZWN0KG93bmVyKTsKKwkJCWlmICh1
bmxpa2VseShyZXN1bHQgPT0gLUVfUkVQRUFUKSkgeworCQkJCS8qIGZhbGwgYmFjayB0byBsb25n
dGVybV9sb2NrX3pub2RlKCkgKi8KKwkJCQlzcGluX3VubG9ja196bG9jayhsb2NrKTsKKwkJCQly
ZXR1cm4gMTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gbG9ja190YWlsKG93bmVyLCByZXN1bHQsIFpO
T0RFX1JFQURfTE9DSyk7CisJfSBlbHNlCisJCXJldHVybiAxOworfQorCisvKiBsb2NrcyBnaXZl
biBsb2NrIG9iamVjdCAqLworaW50IGxvbmd0ZXJtX2xvY2tfem5vZGUoCisJCQkgICAgICAgLyog
bG9jYWwgbGluayBvYmplY3QgKGFsbG9jYXRlZCBieSBsb2NrIG93bmVyCisJCQkJKiB0aHJlYWQs
IHVzdWFsbHkgb24gaXRzIG93biBzdGFjaykgKi8KKwkJCSAgICAgICBsb2NrX2hhbmRsZSAqIGhh
bmRsZSwKKwkJCSAgICAgICAvKiB6bm9kZSB3ZSB3YW50IHRvIGxvY2suICovCisJCQkgICAgICAg
em5vZGUgKiBub2RlLAorCQkJICAgICAgIC8qIHtaTk9ERV9SRUFEX0xPQ0ssIFpOT0RFX1dSSVRF
X0xPQ0t9OyAqLworCQkJICAgICAgIHpub2RlX2xvY2tfbW9kZSBtb2RlLAorCQkJICAgICAgIC8q
IHswLCAtRUlOVkFMLCAtRV9ERUFETE9DS30sIHNlZSByZXR1cm4gY29kZXMKKwkJCQkgIGRlc2Ny
aXB0aW9uLiAqLworCQkJICAgICAgIHpub2RlX2xvY2tfcmVxdWVzdCByZXF1ZXN0KSB7CisJaW50
IHJldDsKKwlpbnQgaGlwcmkgPSAocmVxdWVzdCAmIFpOT0RFX0xPQ0tfSElQUkkpICE9IDA7CisJ
aW50IG5vbl9ibG9ja2luZyA9IDA7CisJaW50IGhhc19hdG9tOworCXR4bl9jYXB0dXJlIGNhcF9m
bGFnczsKKwl6bG9jayAqbG9jazsKKwl0eG5faGFuZGxlICp0eG5oOworCXRyZWVfbGV2ZWwgbGV2
ZWw7CisKKwkvKiBHZXQgY3VycmVudCBwcm9jZXNzIGNvbnRleHQgKi8KKwlsb2NrX3N0YWNrICpv
d25lciA9IGdldF9jdXJyZW50X2xvY2tfc3RhY2soKTsKKworCS8qIENoZWNrIHRoYXQgdGhlIGxv
Y2sgaGFuZGxlIGlzIGluaXRpYWxpemVkIGFuZCBpc24ndCBhbHJlYWR5IGJlaW5nCisJICogdXNl
ZC4gKi8KKwlhc3NlcnQoImptYWNkLTgwOCIsIGhhbmRsZS0+b3duZXIgPT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMzAyNiIsIHJlaXNlcjRfc2NoZWR1bGFibGUoKSk7CisJYXNzZXJ0KCJuaWtp
dGEtMzIxOSIsIHJlcXVlc3RfaXNfZGVhZGxvY2tfc2FmZShub2RlLCBtb2RlLCByZXF1ZXN0KSk7
CisJYXNzZXJ0KCJ6YW0tMTA1NiIsIGF0b21pY19yZWFkKCZaSk5PREUobm9kZSktPnhfY291bnQp
ID4gMCk7CisJLyogbG9uZyB0ZXJtIGxvY2tzIGFyZSBub3QgYWxsb3dlZCBpbiB0aGUgVk0gY29u
dGV4dHMgKC0+d3JpdGVwYWdlKCksCisJICogcHJ1bmVfe2QsaX1jYWNoZSgpKS4KKwkgKgorCSAq
IEZJWE1FIHRoaXMgZG9lc24ndCB3b3JrIGR1ZSB0byB1bnVzZWQtZGVudHJ5LXdpdGgtdW5saW5r
ZWQtaW5vZGUKKwkgKiBidWcgY2F1c2VkIGJ5IGRfc3BsaWNlX2FsaWFzKCkgb25seSB3b3JraW5n
IGZvciBkaXJlY3Rvcmllcy4KKwkgKi8KKwlhc3NlcnQoIm5pa2l0YS0zNTQ3IiwgMSB8fCAoKGN1
cnJlbnQtPmZsYWdzICYgUEZfTUVNQUxMT0MpID09IDApKTsKKwlhc3NlcnQoInphbS0xMDU1Iiwg
bW9kZSAhPSBaTk9ERV9OT19MT0NLKTsKKworCWNhcF9mbGFncyA9IDA7CisJaWYgKHJlcXVlc3Qg
JiBaTk9ERV9MT0NLX05PTkJMT0NLKSB7CisJCWNhcF9mbGFncyB8PSBUWE5fQ0FQVFVSRV9OT05C
TE9DS0lORzsKKwkJbm9uX2Jsb2NraW5nID0gMTsKKwl9CisKKwlpZiAocmVxdWVzdCAmIFpOT0RF
X0xPQ0tfRE9OVF9GVVNFKQorCQljYXBfZmxhZ3MgfD0gVFhOX0NBUFRVUkVfRE9OVF9GVVNFOwor
CisJLyogSWYgd2UgYXJlIGNoYW5naW5nIG91ciBwcm9jZXNzIHByaW9yaXR5IHdlIG11c3QgYWRq
dXN0IGEgbnVtYmVyCisJICAgb2YgaGlnaCBwcmlvcml0eSBvd25lcnMgZm9yIGVhY2ggem5vZGUg
dGhhdCB3ZSBhbHJlYWR5IGxvY2sgKi8KKwlpZiAoaGlwcmkpIHsKKwkJc2V0X2hpZ2hfcHJpb3Jp
dHkob3duZXIpOworCX0gZWxzZSB7CisJCXNldF9sb3dfcHJpb3JpdHkob3duZXIpOworCX0KKwor
CWxldmVsID0gem5vZGVfZ2V0X2xldmVsKG5vZGUpOworCisJLyogRmlsbCByZXF1ZXN0IHN0cnVj
dHVyZSB3aXRoIG91ciB2YWx1ZXMuICovCisJb3duZXItPnJlcXVlc3QubW9kZSA9IG1vZGU7CisJ
b3duZXItPnJlcXVlc3QuaGFuZGxlID0gaGFuZGxlOworCW93bmVyLT5yZXF1ZXN0Lm5vZGUgPSBu
b2RlOworCisJdHhuaCA9IGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnM7CisJbG9jayA9ICZu
b2RlLT5sb2NrOworCisJaWYgKG1vZGUgPT0gWk5PREVfUkVBRF9MT0NLICYmIHJlcXVlc3QgPT0g
MCkgeworCQlyZXQgPSBsb25ndGVybV9sb2NrX3RyeWZhc3Qob3duZXIpOworCQlpZiAocmV0IDw9
IDApCisJCQlyZXR1cm4gcmV0OworCX0KKworCWhhc19hdG9tID0gKHR4bmgtPmF0b20gIT0gTlVM
TCk7CisKKwkvKiBTeW5jaHJvbml6ZSBvbiBub2RlJ3MgemxvY2sgZ3VhcmQgbG9jay4gKi8KKwlz
cGluX2xvY2tfemxvY2sobG9jayk7CisKKwlpZiAoem5vZGVfaXNfbG9ja2VkKG5vZGUpICYmCisJ
ICAgIG1vZGUgPT0gWk5PREVfV1JJVEVfTE9DSyAmJiByZWN1cnNpdmUob3duZXIpKQorCQlyZXR1
cm4gbG9ja190YWlsKG93bmVyLCAwLCBtb2RlKTsKKworCWZvciAoOzspIHsKKwkJLyogQ2hlY2sg
dGhlIGxvY2sncyBhdmFpbGFiaWxpdHk6IGlmIGl0IGlzIHVuYXZhaWFibGUgd2UgZ2V0CisJCSAg
IEVfUkVQRUFULCAwIGluZGljYXRlcyAiY2FuX2xvY2siLCBvdGhlcndpc2UgdGhlIG5vZGUgaXMK
KwkJICAgaW52YWxpZC4gICovCisJCXJldCA9IGNhbl9sb2NrX29iamVjdChvd25lcik7CisKKwkJ
aWYgKHVubGlrZWx5KHJldCA9PSAtRUlOVkFMKSkgeworCQkJLyogQG5vZGUgaXMgZHlpbmcuIExl
YXZlIGl0IGFsb25lLiAqLworCQkJYnJlYWs7CisJCX0KKworCQlpZiAodW5saWtlbHkocmV0ID09
IC1FX1JFUEVBVCAmJiBub25fYmxvY2tpbmcpKSB7CisJCQkvKiBlaXRoZXIgbG9ja2luZyBvZiBA
bm9kZSBieSB0aGUgY3VycmVudCB0aHJlYWQgd2lsbAorCQkJICogbGVhZCB0byB0aGUgZGVhZGxv
Y2ssIG9yIGxvY2sgbW9kZXMgYXJlCisJCQkgKiBpbmNvbXBhdGlibGUuICovCisJCQlicmVhazsK
KwkJfQorCisJCWFzc2VydCgibmlraXRhLTE4NDQiLCAocmV0ID09IDApCisJCSAgICAgICB8fCAo
KHJldCA9PSAtRV9SRVBFQVQpICYmICFub25fYmxvY2tpbmcpKTsKKwkJLyogSWYgd2UgY2FuIGdl
dCB0aGUgbG9jay4uLiBUcnkgdG8gY2FwdHVyZSBmaXJzdCBiZWZvcmUKKwkJICAgdGFraW5nIHRo
ZSBsb2NrLiAqLworCisJCS8qIGZpcnN0IGhhbmRsZSBjb21tb25lc3QgY2FzZSB3aGVyZSBub2Rl
IGFuZCB0eG5oIGFyZSBhbHJlYWR5CisJCSAqIGluIHRoZSBzYW1lIGF0b20uICovCisJCS8qIHNh
ZmUgdG8gZG8gd2l0aG91dCB0YWtpbmcgbG9ja3MsIGJlY2F1c2U6CisJCSAqCisJCSAqIDEuIHJl
YWQgb2YgYWxpZ25lZCB3b3JkIGlzIGF0b21pYyB3aXRoIHJlc3BlY3QgdG8gd3JpdGVzIHRvCisJ
CSAqIHRoaXMgd29yZAorCQkgKgorCQkgKiAyLiBmYWxzZSBuZWdhdGl2ZXMgYXJlIGhhbmRsZWQg
aW4gcmVpc2VyNF90cnlfY2FwdHVyZSgpLgorCQkgKgorCQkgKiAzLiBmYWxzZSBwb3NpdGl2ZXMg
YXJlIGltcG9zc2libGUuCisJCSAqCisJCSAqIFBST09GOiBsZWZ0IGFzIGFuIGV4ZXJjaXNlIHRv
IHRoZSBjdXJpb3VzIHJlYWRlci4KKwkJICoKKwkJICogSnVzdCBraWRkaW5nLiBIZXJlIGlzIG9u
ZToKKwkJICoKKwkJICogQXQgdGhlIHRpbWUgVDAgdHhuaC0+YXRvbSBpcyBzdG9yZWQgaW4gdHhu
aF9hdG9tLgorCQkgKgorCQkgKiBBdCB0aGUgdGltZSBUMSBub2RlLT5hdG9tIGlzIHN0b3JlZCBp
biBub2RlX2F0b20uCisJCSAqCisJCSAqIEF0IHRoZSB0aW1lIFQyIHdlIG9ic2VydmUgdGhhdAor
CQkgKgorCQkgKiAgICAgdHhuaF9hdG9tICE9IE5VTEwgJiYgbm9kZV9hdG9tID09IHR4bmhfYXRv
bS4KKwkJICoKKwkJICogSW1hZ2luZSB0aGF0IGF0IHRoaXMgbW9tZW50IHdlIGFjcXVpcmUgbm9k
ZSBhbmQgdHhuaCBzcGluCisJCSAqIGxvY2sgaW4gdGhpcyBvcmRlci4gU3VwcG9zZSB0aGF0IHVu
ZGVyIHNwaW4gbG9jayB3ZSBoYXZlCisJCSAqCisJCSAqICAgICBub2RlLT5hdG9tICE9IHR4bmgt
PmF0b20sICAgICAgICAgICAgICAgICAgICAgICAoUzEpCisJCSAqCisJCSAqIGF0IHRoZSB0aW1l
IFQzLgorCQkgKgorCQkgKiB0eG5oLT5hdG9tICE9IE5VTEwgc3RpbGwsIGJlY2F1c2UgdHhuaCBp
cyBvcGVuIGJ5IHRoZQorCQkgKiBjdXJyZW50IHRocmVhZC4KKwkJICoKKwkJICogU3VwcG9zZSBu
b2RlLT5hdG9tID09IE5VTEwsIHRoYXQgaXMsIG5vZGUgd2FzIHVuLWNhcHR1cmVkCisJCSAqIGJl
dHdlZW4gVDEsIGFuZCBUMy4gQnV0IHVuLWNhcHR1cmluZyBvZiBmb3JtYXR0ZWQgbm9kZSBpcwor
CQkgKiBhbHdheXMgcHJlY2VkZWQgYnkgdGhlIGNhbGwgdG8gcmVpc2VyNF9pbnZhbGlkYXRlX2xv
Y2soKSwKKwkJICogd2hpY2ggbWFya3Mgem5vZGUgYXMgSk5PREVfSVNfRFlJTkcgdW5kZXIgemxv
Y2sgc3BpbgorCQkgKiBsb2NrLiBDb250cmFkaWN0aW9uLCBiZWNhdXNlIGNhbl9sb2NrX29iamVj
dCgpIGFib3ZlIGNoZWNrcworCQkgKiBmb3IgSk5PREVfSVNfRFlJTkcuIEhlbmNlLCBub2RlLT5h
dG9tICE9IE5VTEwgYXQgVDMuCisJCSAqCisJCSAqIFN1cHBvc2UgdGhhdCBub2RlLT5hdG9tICE9
IG5vZGVfYXRvbSwgdGhhdCBpcywgYXRvbSwgbm9kZQorCQkgKiBiZWxvbmdzIHRvIHdhcyBmdXNl
ZCBpbnRvIGFub3RoZXIgYXRvbTogbm9kZV9hdG9tIHdhcyBmdXNlZAorCQkgKiBpbnRvIG5vZGUt
PmF0b20uIEF0b20gb2YgdHhuaCB3YXMgZXF1YWwgdG8gbm9kZV9hdG9tIGF0IFQyLAorCQkgKiB3
aGljaCBtZWFucyB0aGF0IHVuZGVyIHNwaW4gbG9jaywgdHhuaC0+YXRvbSA9PSBub2RlLT5hdG9t
LAorCQkgKiBiZWNhdXNlIHR4bmgtPmF0b20gY2FuIG9ubHkgZm9sbG93IGZ1c2lvbgorCQkgKiBj
aGFpbi4gQ29udHJhZGljdHMgUzEuCisJCSAqCisJCSAqIFRoZSBzYW1lIGZvciBoeXBvdGhlc2lz
IHR4bmgtPmF0b20gIT0gdHhuaF9hdG9tLiBIZW5jZSwKKwkJICogbm9kZS0+YXRvbSA9PSBub2Rl
X2F0b20gPT0gdHhuaF9hdG9tID09IHR4bmgtPmF0b20uIEFnYWluCisJCSAqIGNvbnRyYWRpY3Rz
IFMxLiBIZW5jZSBTMSBpcyBmYWxzZS4gUUVELgorCQkgKgorCQkgKi8KKworCQlpZiAobGlrZWx5
KGhhc19hdG9tICYmIFpKTk9ERShub2RlKS0+YXRvbSA9PSB0eG5oLT5hdG9tKSkgeworCQkJOwor
CQl9IGVsc2UgeworCQkJLyoKKwkJCSAqIHVubG9jayB6bG9jayBzcGluIGxvY2sgaGVyZS4gSXQg
aXMgcG9zc2libGUgZm9yCisJCQkgKiBsb25ndGVybV91bmxvY2tfem5vZGUoKSB0byBzbmVhayBp
biBoZXJlLCBidXQgdGhlcmUKKwkJCSAqIGlzIG5vIGhhcm06IHJlaXNlcjRfaW52YWxpZGF0ZV9s
b2NrKCkgd2lsbCBtYXJrIHpub2RlCisJCQkgKiBhcyBKTk9ERV9JU19EWUlORyBhbmQgdGhpcyB3
aWxsIGJlIG5vdGVkIGJ5CisJCQkgKiBjYW5fbG9ja19vYmplY3QoKSBiZWxvdy4KKwkJCSAqLwor
CQkJc3Bpbl91bmxvY2tfemxvY2sobG9jayk7CisJCQlzcGluX2xvY2tfem5vZGUobm9kZSk7CisJ
CQlyZXQgPSByZWlzZXI0X3RyeV9jYXB0dXJlKFpKTk9ERShub2RlKSwgbW9kZSwKKwkJCQkJCSAg
Y2FwX2ZsYWdzKTsKKwkJCXNwaW5fdW5sb2NrX3pub2RlKG5vZGUpOworCQkJc3Bpbl9sb2NrX3ps
b2NrKGxvY2spOworCQkJaWYgKHVubGlrZWx5KHJldCAhPSAwKSkgeworCQkJCS8qIEluIHRoZSBm
YWlsdXJlIGNhc2UsIHRoZSB0eG5tZ3IgcmVsZWFzZXMKKwkJCQkgICB0aGUgem5vZGUncyBsb2Nr
IChvciBpbiBzb21lIGNhc2VzLCBpdCB3YXMKKwkJCQkgICByZWxlYXNlZCBhIHdoaWxlIGFnbyku
ICBUaGVyZSdzIG5vIG5lZWQgdG8KKwkJCQkgICByZWFjcXVpcmUgaXQgc28gd2Ugc2hvdWxkIHJl
dHVybiBoZXJlLAorCQkJCSAgIGF2b2lkIHJlbGVhc2luZyB0aGUgbG9jay4gKi8KKwkJCQlvd25l
ci0+cmVxdWVzdC5tb2RlID0gMDsKKwkJCQlicmVhazsKKwkJCX0KKworCQkJLyogQ2hlY2sgdGhl
IGxvY2sncyBhdmFpbGFiaWxpdHkgYWdhaW4gLS0gdGhpcyBpcworCQkJICAgYmVjYXVzZSB1bmRl
ciBzb21lIGNpcmN1bXN0YW5jZXMgdGhlIGNhcHR1cmUgY29kZQorCQkJICAgaGFzIHRvIHJlbGVh
c2UgYW5kIHJlYWNxdWlyZSB0aGUgem5vZGUgc3BpbmxvY2suICovCisJCQlyZXQgPSBjYW5fbG9j
a19vYmplY3Qob3duZXIpOworCQl9CisKKwkJLyogVGhpcyB0aW1lLCBhIHJldHVybiBvZiAocmV0
ID09IDApIG1lYW5zIHdlIGNhbiBsb2NrLCBzbyB3ZQorCQkgICBzaG91bGQgYnJlYWsgb3V0IG9m
IHRoZSBsb29wLiAqLworCQlpZiAobGlrZWx5KHJldCAhPSAtRV9SRVBFQVQgfHwgbm9uX2Jsb2Nr
aW5nKSkKKwkJCWJyZWFrOworCisJCS8qIExvY2sgaXMgdW5hdmFpbGFibGUsIHdlIGhhdmUgdG8g
d2FpdC4gKi8KKwkJcmV0ID0gcmVpc2VyNF9wcmVwYXJlX3RvX3NsZWVwKG93bmVyKTsKKwkJaWYg
KHVubGlrZWx5KHJldCAhPSAwKSkKKwkJCWJyZWFrOworCisJCWFzc2VydF9zcGluX2xvY2tlZCgm
KG5vZGUtPmxvY2suZ3VhcmQpKTsKKwkJaWYgKGhpcHJpKSB7CisJCQkvKiBJZiB3ZSBhcmUgZ29p
bmcgaW4gaGlnaCBwcmlvcml0eSBkaXJlY3Rpb24gdGhlbgorCQkJICAgaW5jcmVhc2UgaGlnaCBw
cmlvcml0eSByZXF1ZXN0cyBjb3VudGVyIGZvciB0aGUKKwkJCSAgIG5vZGUgKi8KKwkJCWxvY2st
Pm5yX2hpcHJpX3JlcXVlc3RzKys7CisJCQlpZiAobW9kZSA9PSBaTk9ERV9XUklURV9MT0NLKQor
CQkJCWxvY2stPm5yX2hpcHJpX3dyaXRlX3JlcXVlc3RzKys7CisJCQkvKiBJZiB0aGVyZSBhcmUg
bm8gaGlnaCBwcmlvcml0eSBvd25lcnMgZm9yIGEgbm9kZSwKKwkJCSAgIHRoZW4gaW1tZWRpYXRl
bHkgd2FrZSB1cCBsb3cgcHJpb3JpdHkgb3duZXJzLCBzbworCQkJICAgdGhleSBjYW4gZGV0ZWN0
IHBvc3NpYmxlIGRlYWRsb2NrICovCisJCQlpZiAobG9jay0+bnJfaGlwcmlfb3duZXJzID09IDAp
CisJCQkJd2FrZV91cF9hbGxfbG9wcmlfb3duZXJzKG5vZGUpOworCQl9CisJCWxpc3RfYWRkX3Rh
aWwoJm93bmVyLT5yZXF1ZXN0b3JzX2xpbmssICZsb2NrLT5yZXF1ZXN0b3JzKTsKKworCQkvKiBP
aywgaGVyZSB3ZSBoYXZlIHByZXBhcmVkIGEgbG9jayByZXF1ZXN0LCBzbyB1bmxvY2sKKwkJICAg
YSB6bm9kZSAuLi4gKi8KKwkJc3Bpbl91bmxvY2tfemxvY2sobG9jayk7CisJCS8qIC4uLiBhbmQg
c2xlZXAgKi8KKwkJcmVpc2VyNF9nb190b19zbGVlcChvd25lcik7CisJCWlmIChvd25lci0+cmVx
dWVzdC5tb2RlID09IFpOT0RFX05PX0xPQ0spCisJCQlnb3RvIHJlcXVlc3RfaXNfZG9uZTsKKwkJ
c3Bpbl9sb2NrX3psb2NrKGxvY2spOworCQlpZiAob3duZXItPnJlcXVlc3QubW9kZSA9PSBaTk9E
RV9OT19MT0NLKSB7CisJCQlzcGluX3VubG9ja196bG9jayhsb2NrKTsKK3JlcXVlc3RfaXNfZG9u
ZToKKwkJCWlmIChvd25lci0+cmVxdWVzdC5yZXRfY29kZSA9PSAwKSB7CisJCQkJTE9DS19DTlRf
SU5DKGxvbmdfdGVybV9sb2NrZWRfem5vZGUpOworCQkJCXpyZWYobm9kZSk7CisJCQl9CisJCQly
ZXR1cm4gb3duZXItPnJlcXVlc3QucmV0X2NvZGU7CisJCX0KKwkJcmVtb3ZlX2xvY2tfcmVxdWVz
dChvd25lcik7CisJfQorCisJcmV0dXJuIGxvY2tfdGFpbChvd25lciwgcmV0LCBtb2RlKTsKK30K
KworLyogbG9jayBvYmplY3QgaW52YWxpZGF0aW9uIG1lYW5zIGNoYW5naW5nIG9mIGxvY2sgb2Jq
ZWN0IHN0YXRlIHRvIGBJTlZBTElEJworICAgYW5kIHdhaXRpbmcgZm9yIGFsbCBvdGhlciBwcm9j
ZXNzZXMgdG8gY2FuY2VsIHRoZWlycyBsb2NrIHJlcXVlc3RzLiAqLwordm9pZCByZWlzZXI0X2lu
dmFsaWRhdGVfbG9jayhsb2NrX2hhbmRsZSAqIGhhbmRsZQkvKiBwYXRoIHRvIGxvY2sKKwkJCQkJ
CQkgKiBvd25lciBhbmQgbG9jaworCQkJCQkJCSAqIG9iamVjdCBpcyBiZWluZworCQkJCQkJCSAq
IGludmFsaWRhdGVkLiAqLyApCit7CisJem5vZGUgKm5vZGUgPSBoYW5kbGUtPm5vZGU7CisJbG9j
a19zdGFjayAqb3duZXIgPSBoYW5kbGUtPm93bmVyOworCisJYXNzZXJ0KCJ6YW0tMzI1Iiwgb3du
ZXIgPT0gZ2V0X2N1cnJlbnRfbG9ja19zdGFjaygpKTsKKwlhc3NlcnQoInphbS0xMDMiLCB6bm9k
ZV9pc193cml0ZV9sb2NrZWQobm9kZSkpOworCWFzc2VydCgibmlraXRhLTEzOTMiLCAhWkZfSVNT
RVQobm9kZSwgSk5PREVfTEVGVF9DT05ORUNURUQpKTsKKwlhc3NlcnQoIm5pa2l0YS0xNzkzIiwg
IVpGX0lTU0VUKG5vZGUsIEpOT0RFX1JJR0hUX0NPTk5FQ1RFRCkpOworCWFzc2VydCgibmlraXRh
LTEzOTQiLCBaRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSk7CisJYXNzZXJ0KCJu
aWtpdGEtMzA5NyIsIHpub2RlX2lzX3dsb2NrZWRfb25jZShub2RlKSk7CisJYXNzZXJ0X3NwaW5f
bG9ja2VkKCYobm9kZS0+bG9jay5ndWFyZCkpOworCisJaWYgKGhhbmRsZS0+c2lnbmFsZWQpCisJ
CWF0b21pY19kZWMoJm93bmVyLT5ucl9zaWduYWxlZCk7CisKKwlaRl9TRVQobm9kZSwgSk5PREVf
SVNfRFlJTkcpOworCXVubGlua19vYmplY3QoaGFuZGxlKTsKKwlub2RlLT5sb2NrLm5yX3JlYWRl
cnMgPSAwOworCisJaW52YWxpZGF0ZV9hbGxfbG9ja19yZXF1ZXN0cyhub2RlKTsKKwlzcGluX3Vu
bG9ja196bG9jaygmbm9kZS0+bG9jayk7Cit9CisKKy8qIEluaXRpYWxpemVzIGxvY2tfc3RhY2su
ICovCit2b2lkIGluaXRfbG9ja19zdGFjayhsb2NrX3N0YWNrICogb3duZXIJLyogcG9pbnRlciB0
bworCQkJCQkgKiBhbGxvY2F0ZWQKKwkJCQkJICogc3RydWN0dXJlLiAqLyApCit7CisJSU5JVF9M
SVNUX0hFQUQoJm93bmVyLT5sb2Nrcyk7CisJSU5JVF9MSVNUX0hFQUQoJm93bmVyLT5yZXF1ZXN0
b3JzX2xpbmspOworCXNwaW5fbG9ja19pbml0KCZvd25lci0+c2d1YXJkKTsKKwlvd25lci0+Y3Vy
cHJpID0gMTsKKwlpbml0X3dhaXRxdWV1ZV9oZWFkKCZvd25lci0+d2FpdCk7Cit9CisKKy8qIElu
aXRpYWxpemVzIGxvY2sgb2JqZWN0LiAqLwordm9pZCByZWlzZXI0X2luaXRfbG9jayh6bG9jayAq
IGxvY2sJLyogcG9pbnRlciBvbiBhbGxvY2F0ZWQKKwkJCQkJICogdW5pbml0aWFsaXplZCBsb2Nr
IG9iamVjdAorCQkJCQkgKiBzdHJ1Y3R1cmUuICovICkKK3sKKwltZW1zZXQobG9jaywgMCwgc2l6
ZW9mKHpsb2NrKSk7CisJc3Bpbl9sb2NrX2luaXQoJmxvY2stPmd1YXJkKTsKKwlJTklUX0xJU1Rf
SEVBRCgmbG9jay0+cmVxdWVzdG9ycyk7CisJSU5JVF9MSVNUX0hFQUQoJmxvY2stPm93bmVycyk7
Cit9CisKKy8qIFRyYW5zZmVyIGEgbG9jayBoYW5kbGUgKHByZXN1bWFibHkgc28gdGhhdCB2YXJp
YWJsZXMgY2FuIGJlIG1vdmVkIGJldHdlZW4KKyAgIHN0YWNrIGFuZCBoZWFwIGxvY2F0aW9ucyku
ICovCitzdGF0aWMgdm9pZAorbW92ZV9saF9pbnRlcm5hbChsb2NrX2hhbmRsZSAqIG5ldywgbG9j
a19oYW5kbGUgKiBvbGQsIGludCB1bmxpbmtfb2xkKQoreworCXpub2RlICpub2RlID0gb2xkLT5u
b2RlOworCWxvY2tfc3RhY2sgKm93bmVyID0gb2xkLT5vd25lcjsKKwlpbnQgc2lnbmFsZWQ7CisK
KwkvKiBsb2Nrc19saXN0LCBtb2RpZmllZCBieSBsaW5rX29iamVjdCgpIGlzIG5vdCBwcm90ZWN0
ZWQgYnkKKwkgICBhbnl0aGluZy4gVGhpcyBpcyB2YWxpZCBiZWNhdXNlIG9ubHkgY3VycmVudCB0
aHJlYWQgZXZlciBtb2RpZmllcworCSAgIGxvY2tzX2xpc3Qgb2YgaXRzIGxvY2tfc3RhY2suCisJ
ICovCisJYXNzZXJ0KCJuaWtpdGEtMTgyNyIsIG93bmVyID09IGdldF9jdXJyZW50X2xvY2tfc3Rh
Y2soKSk7CisJYXNzZXJ0KCJuaWtpdGEtMTgzMSIsIG5ldy0+b3duZXIgPT0gTlVMTCk7CisKKwlz
cGluX2xvY2tfemxvY2soJm5vZGUtPmxvY2spOworCisJc2lnbmFsZWQgPSBvbGQtPnNpZ25hbGVk
OworCWlmICh1bmxpbmtfb2xkKSB7CisJCXVubGlua19vYmplY3Qob2xkKTsKKwl9IGVsc2Ugewor
CQlpZiAobm9kZS0+bG9jay5ucl9yZWFkZXJzID4gMCkgeworCQkJbm9kZS0+bG9jay5ucl9yZWFk
ZXJzICs9IDE7CisJCX0gZWxzZSB7CisJCQlub2RlLT5sb2NrLm5yX3JlYWRlcnMgLT0gMTsKKwkJ
fQorCQlpZiAoc2lnbmFsZWQpCisJCQlhdG9taWNfaW5jKCZvd25lci0+bnJfc2lnbmFsZWQpOwor
CQlpZiAob3duZXItPmN1cnByaSkKKwkJCW5vZGUtPmxvY2subnJfaGlwcmlfb3duZXJzICs9IDE7
CisJCUxPQ0tfQ05UX0lOQyhsb25nX3Rlcm1fbG9ja2VkX3pub2RlKTsKKworCQl6cmVmKG5vZGUp
OworCX0KKwlsaW5rX29iamVjdChuZXcsIG93bmVyLCBub2RlKTsKKwluZXctPnNpZ25hbGVkID0g
c2lnbmFsZWQ7CisKKwlzcGluX3VubG9ja196bG9jaygmbm9kZS0+bG9jayk7Cit9CisKK3ZvaWQg
bW92ZV9saChsb2NrX2hhbmRsZSAqIG5ldywgbG9ja19oYW5kbGUgKiBvbGQpCit7CisJbW92ZV9s
aF9pbnRlcm5hbChuZXcsIG9sZCwgLyp1bmxpbmtfb2xkICovIDEpOworfQorCit2b2lkIGNvcHlf
bGgobG9ja19oYW5kbGUgKiBuZXcsIGxvY2tfaGFuZGxlICogb2xkKQoreworCW1vdmVfbGhfaW50
ZXJuYWwobmV3LCBvbGQsIC8qdW5saW5rX29sZCAqLyAwKTsKK30KKworLyogYWZ0ZXIgZ2V0dGlu
ZyAtRV9ERUFETE9DSyB3ZSB1bmxvY2sgem5vZGVzIHVudGlsIHRoaXMgZnVuY3Rpb24gcmV0dXJu
cyBmYWxzZQorICovCitpbnQgcmVpc2VyNF9jaGVja19kZWFkbG9jayh2b2lkKQoreworCWxvY2tf
c3RhY2sgKm93bmVyID0gZ2V0X2N1cnJlbnRfbG9ja19zdGFjaygpOworCXJldHVybiBhdG9taWNf
cmVhZCgmb3duZXItPm5yX3NpZ25hbGVkKSAhPSAwOworfQorCisvKiBCZWZvcmUgZ29pbmcgdG8g
c2xlZXAgd2UgcmUtY2hlY2sgInJlbGVhc2UgbG9jayIgcmVxdWVzdHMgd2hpY2ggbWlnaHQgY29t
ZQorICAgZnJvbSB0aHJlYWRzIHdpdGggaGktcHJpIGxvY2sgcHJpb3JpdGllcy4gKi8KK2ludCBy
ZWlzZXI0X3ByZXBhcmVfdG9fc2xlZXAobG9ja19zdGFjayAqIG93bmVyKQoreworCWFzc2VydCgi
bmlraXRhLTE4NDciLCBvd25lciA9PSBnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpOworCisJLyog
V2UgcmV0dXJuIC1FX0RFQURMT0NLIGlmIG9uZSBvciBtb3JlICJnaXZlIG1lIHRoZSBsb2NrIiBt
ZXNzYWdlcyBhcmUKKwkgKiBjb3VudGVkIGluIG5yX3NpZ25hbGVkICovCisJaWYgKHVubGlrZWx5
KGF0b21pY19yZWFkKCZvd25lci0+bnJfc2lnbmFsZWQpICE9IDApKSB7CisJCWFzc2VydCgiemFt
LTk1OSIsICFvd25lci0+Y3VycHJpKTsKKwkJcmV0dXJuIFJFVEVSUigtRV9ERUFETE9DSyk7CisJ
fQorCXJldHVybiAwOworfQorCisvKiBXYWtlcyB1cCBhIHNpbmdsZSB0aHJlYWQgKi8KK3ZvaWQg
X19yZWlzZXI0X3dha2VfdXAobG9ja19zdGFjayAqIG93bmVyKQoreworCWF0b21pY19zZXQoJm93
bmVyLT53YWtldXAsIDEpOworCXdha2VfdXAoJm93bmVyLT53YWl0KTsKK30KKworLyogUHV0cyBh
IHRocmVhZCB0byBzbGVlcCAqLwordm9pZCByZWlzZXI0X2dvX3RvX3NsZWVwKGxvY2tfc3RhY2sg
KiBvd25lcikKK3sKKwkvKiBXZWxsLCB3ZSBtaWdodCBzbGVlcCBoZXJlLCBzbyBob2xkaW5nIG9m
IGFueSBzcGlubG9ja3MgaXMgbm8tbm8gKi8KKwlhc3NlcnQoIm5pa2l0YS0zMDI3IiwgcmVpc2Vy
NF9zY2hlZHVsYWJsZSgpKTsKKworCXdhaXRfZXZlbnQob3duZXItPndhaXQsIGF0b21pY19yZWFk
KCZvd25lci0+d2FrZXVwKSk7CisJYXRvbWljX3NldCgmb3duZXItPndha2V1cCwgMCk7Cit9CisK
K2ludCBsb2NrX3N0YWNrX2lzY2xlYW4obG9ja19zdGFjayAqIG93bmVyKQoreworCWlmIChsaXN0
X2VtcHR5X2NhcmVmdWwoJm93bmVyLT5sb2NrcykpIHsKKwkJYXNzZXJ0KCJ6YW0tMzUzIiwgYXRv
bWljX3JlYWQoJm93bmVyLT5ucl9zaWduYWxlZCkgPT0gMCk7CisJCXJldHVybiAxOworCX0KKwor
CXJldHVybiAwOworfQorCisjaWYgUkVJU0VSNF9ERUJVRworCisvKgorICogZGVidWdnaW5nIGZ1
bmN0aW9ucworICovCisKK3N0YXRpYyB2b2lkIGxpc3RfY2hlY2soc3RydWN0IGxpc3RfaGVhZCAq
aGVhZCkKK3sKKwlzdHJ1Y3QgbGlzdF9oZWFkICpwb3M7CisKKwlsaXN0X2Zvcl9lYWNoKHBvcywg
aGVhZCkKKwkJYXNzZXJ0KCIiLCAocG9zLT5wcmV2ICE9IE5VTEwgJiYgcG9zLT5uZXh0ICE9IE5V
TEwgJiYKKwkJCSAgICBwb3MtPnByZXYtPm5leHQgPT0gcG9zICYmIHBvcy0+bmV4dC0+cHJldiA9
PSBwb3MpKTsKK30KKworLyogY2hlY2sgY29uc2lzdGVuY3kgb2YgbG9ja2luZyBkYXRhLXN0cnVj
dHVyZXMgaGFuZ2luZyBvZiB0aGUgQHN0YWNrICovCitzdGF0aWMgdm9pZCBjaGVja19sb2NrX3N0
YWNrKGxvY2tfc3RhY2sgKiBzdGFjaykKK3sKKwlzcGluX2xvY2tfc3RhY2soc3RhY2spOworCS8q
IGNoZWNrIHRoYXQgc3RhY2stPmxvY2tzIGlzIG5vdCBjb3JydXB0ZWQgKi8KKwlsaXN0X2NoZWNr
KCZzdGFjay0+bG9ja3MpOworCXNwaW5fdW5sb2NrX3N0YWNrKHN0YWNrKTsKK30KKworLyogY2hl
Y2sgY29uc2lzdGVuY3kgb2YgbG9ja2luZyBkYXRhIHN0cnVjdHVyZXMgKi8KK3ZvaWQgY2hlY2tf
bG9ja19kYXRhKHZvaWQpCit7CisJY2hlY2tfbG9ja19zdGFjaygmZ2V0X2N1cnJlbnRfY29udGV4
dCgpLT5zdGFjayk7Cit9CisKKy8qIGNoZWNrIGNvbnNpc3RlbmN5IG9mIGxvY2tpbmcgZGF0YSBz
dHJ1Y3R1cmVzIGZvciBAbm9kZSAqLwordm9pZCBjaGVja19sb2NrX25vZGVfZGF0YSh6bm9kZSAq
IG5vZGUpCit7CisJc3Bpbl9sb2NrX3psb2NrKCZub2RlLT5sb2NrKTsKKwlsaXN0X2NoZWNrKCZu
b2RlLT5sb2NrLm93bmVycyk7CisJbGlzdF9jaGVjaygmbm9kZS0+bG9jay5yZXF1ZXN0b3JzKTsK
KwlzcGluX3VubG9ja196bG9jaygmbm9kZS0+bG9jayk7Cit9CisKKy8qIGNoZWNrIHRoYXQgZ2l2
ZW4gbG9jayByZXF1ZXN0IGlzIGRlYWQgbG9jayBzYWZlLiBUaGlzIGNoZWNrIGlzLCBvZiBjb3Vy
c2UsCisgKiBub3QgZXhoYXVzdGl2ZS4gKi8KK3N0YXRpYyBpbnQKK3JlcXVlc3RfaXNfZGVhZGxv
Y2tfc2FmZSh6bm9kZSAqIG5vZGUsIHpub2RlX2xvY2tfbW9kZSBtb2RlLAorCQkJIHpub2RlX2xv
Y2tfcmVxdWVzdCByZXF1ZXN0KQoreworCWxvY2tfc3RhY2sgKm93bmVyOworCisJb3duZXIgPSBn
ZXRfY3VycmVudF9sb2NrX3N0YWNrKCk7CisJLyoKKwkgKiBjaGVjayB0aGF0IGhpcHJpIGxvY2sg
cmVxdWVzdCBpcyBub3QgaXNzdWVkIHdoZW4gdGhlcmUgYXJlIGxvY2tlZAorCSAqIG5vZGVzIGF0
IHRoZSBoaWdoZXIgbGV2ZWxzLgorCSAqLworCWlmIChyZXF1ZXN0ICYgWk5PREVfTE9DS19ISVBS
SSAmJiAhKHJlcXVlc3QgJiBaTk9ERV9MT0NLX05PTkJMT0NLKSAmJgorCSAgICB6bm9kZV9nZXRf
bGV2ZWwobm9kZSkgIT0gMCkgeworCQlsb2NrX2hhbmRsZSAqaXRlbTsKKworCQlsaXN0X2Zvcl9l
YWNoX2VudHJ5KGl0ZW0sICZvd25lci0+bG9ja3MsIGxvY2tzX2xpbmspIHsKKwkJCXpub2RlICpv
dGhlcjsKKworCQkJb3RoZXIgPSBpdGVtLT5ub2RlOworCisJCQlpZiAoem5vZGVfZ2V0X2xldmVs
KG90aGVyKSA9PSAwKQorCQkJCWNvbnRpbnVlOworCQkJaWYgKHpub2RlX2dldF9sZXZlbChvdGhl
cikgPiB6bm9kZV9nZXRfbGV2ZWwobm9kZSkpCisJCQkJcmV0dXJuIDA7CisJCX0KKwl9CisJcmV0
dXJuIDE7Cit9CisKKyNlbmRpZgorCisvKiByZXR1cm4gcG9pbnRlciB0byBzdGF0aWMgc3RvcmFn
ZSB3aXRoIG5hbWUgb2YgbG9ja19tb2RlLiBGb3IKKyAgICBkZWJ1Z2dpbmcgKi8KK2NvbnN0IGNo
YXIgKmxvY2tfbW9kZV9uYW1lKHpub2RlX2xvY2tfbW9kZSBsb2NrLyogbG9jayBtb2RlIHRvIGdl
dCBuYW1lIG9mICovKQoreworCWlmIChsb2NrID09IFpOT0RFX1JFQURfTE9DSykKKwkJcmV0dXJu
ICJyZWFkIjsKKwllbHNlIGlmIChsb2NrID09IFpOT0RFX1dSSVRFX0xPQ0spCisJCXJldHVybiAi
d3JpdGUiOworCWVsc2UgeworCQlzdGF0aWMgY2hhciBidWZbMzBdOworCisJCXNwcmludGYoYnVm
LCAidW5rbm93bjogJWkiLCBsb2NrKTsKKwkJcmV0dXJuIGJ1ZjsKKwl9Cit9CisKKy8qIE1ha2Ug
TGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxl
OiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFi
LXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogNzkKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvbG9jay5oIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L2xvY2suaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9s
b2NrLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4x
Ny9mcy9yZWlzZXI0L2xvY2suaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NjIyMjIwMSArMDEwMApA
QCAtMCwwICsxLDI1MCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBS
ZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyog
TG9uZyB0ZXJtIGxvY2tpbmcgZGF0YSBzdHJ1Y3R1cmVzLiBTZWUgbG9jay5jIGZvciBkZXRhaWxz
LiAqLworCisjaWZuZGVmIF9fTE9DS19IX18KKyNkZWZpbmUgX19MT0NLX0hfXworCisjaW5jbHVk
ZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgor
I2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisjaW5jbHVkZSAicGx1Z2luL25v
ZGUvbm9kZS5oIgorI2luY2x1ZGUgInR4bm1nci5oIgorI2luY2x1ZGUgInJlYWRhaGVhZC5oIgor
CisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgor
I2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4JLyogZm9yIFBBR0VfQ0FDSEVfU0laRSAqLworI2lu
Y2x1ZGUgPGFzbS9hdG9taWMuaD4KKyNpbmNsdWRlIDxsaW51eC93YWl0Lmg+CisKKy8qIFBlci16
bm9kZSBsb2NrIG9iamVjdCAqLworc3RydWN0IHpsb2NrIHsKKwlzcGlubG9ja190IGd1YXJkOwor
CS8qIFRoZSBudW1iZXIgb2YgcmVhZGVycyBpZiBwb3NpdGl2ZTsgdGhlIG51bWJlciBvZiByZWN1
cnNpdmVseSB0YWtlbgorCSAgIHdyaXRlIGxvY2tzIGlmIG5lZ2F0aXZlLiBQcm90ZWN0ZWQgYnkg
emxvY2sgc3BpbiBsb2NrLiAqLworCWludCBucl9yZWFkZXJzOworCS8qIEEgbnVtYmVyIG9mIHBy
b2Nlc3NlcyAobG9ja19zdGFja3MpIHRoYXQgaGF2ZSB0aGlzIG9iamVjdAorCSAgIGxvY2tlZCB3
aXRoIGhpZ2ggcHJpb3JpdHkgKi8KKwl1bnNpZ25lZCBucl9oaXByaV9vd25lcnM7CisJLyogQSBu
dW1iZXIgb2YgYXR0ZW1wdHMgdG8gbG9jayB6bm9kZSBpbiBoaWdoIHByaW9yaXR5IGRpcmVjdGlv
biAqLworCXVuc2lnbmVkIG5yX2hpcHJpX3JlcXVlc3RzOworCS8qIEEgbGlua2VkIGxpc3Qgb2Yg
bG9ja19oYW5kbGUgb2JqZWN0cyB0aGF0IGNvbnRhaW5zIHBvaW50ZXJzCisJICAgZm9yIGFsbCBs
b2NrX3N0YWNrcyB3aGljaCBoYXZlIHRoaXMgbG9jayBvYmplY3QgbG9ja2VkICovCisJdW5zaWdu
ZWQgbnJfaGlwcmlfd3JpdGVfcmVxdWVzdHM7CisJc3RydWN0IGxpc3RfaGVhZCBvd25lcnM7CisJ
LyogQSBsaW5rZWQgbGlzdCBvZiBsb2NrX3N0YWNrcyB0aGF0IHdhaXQgZm9yIHRoaXMgbG9jayAq
LworCXN0cnVjdCBsaXN0X2hlYWQgcmVxdWVzdG9yczsKK307CisKK3N0YXRpYyBpbmxpbmUgdm9p
ZCBzcGluX2xvY2tfemxvY2soemxvY2sgKmxvY2spCit7CisJLyogY2hlY2sgdGhhdCB6bG9jayBp
cyBub3QgbG9ja2VkICovCisJYXNzZXJ0KCIiLCBMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfemxv
Y2spKTsKKwkvKiBjaGVjayB0aGF0IHNwaW5sb2NrcyBvZiBsb3dlciBwcmlvcml0aWVzIGFyZSBu
b3QgaGVsZCAqLworCWFzc2VydCgiIiwgTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX3N0YWNrKSk7
CisKKwlzcGluX2xvY2soJmxvY2stPmd1YXJkKTsKKworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tl
ZF96bG9jayk7CisJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIHNwaW5fdW5sb2NrX3psb2NrKHpsb2NrICpsb2NrKQoreworCWFzc2VydCgibmlraXRh
LTEzNzUiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWRfemxvY2spKTsKKwlhc3NlcnQoIm5pa2l0
YS0xMzc2IiwgTE9DS19DTlRfR1RaKHNwaW5fbG9ja2VkKSk7CisKKwlMT0NLX0NOVF9ERUMoc3Bp
bl9sb2NrZWRfemxvY2spOworCUxPQ0tfQ05UX0RFQyhzcGluX2xvY2tlZCk7CisKKwlzcGluX3Vu
bG9jaygmbG9jay0+Z3VhcmQpOworfQorCisjZGVmaW5lIGxvY2tfaXNfbG9ja2VkKGxvY2spICAg
ICAgICAgICgobG9jayktPm5yX3JlYWRlcnMgIT0gMCkKKyNkZWZpbmUgbG9ja19pc19ybG9ja2Vk
KGxvY2spICAgICAgICAgKChsb2NrKS0+bnJfcmVhZGVycyA+IDApCisjZGVmaW5lIGxvY2tfaXNf
d2xvY2tlZChsb2NrKSAgICAgICAgICgobG9jayktPm5yX3JlYWRlcnMgPCAwKQorI2RlZmluZSBs
b2NrX2lzX3dsb2NrZWRfb25jZShsb2NrKSAgICAoKGxvY2spLT5ucl9yZWFkZXJzID09IC0xKQor
I2RlZmluZSBsb2NrX2Nhbl9iZV9ybG9ja2VkKGxvY2spICAgICAoKGxvY2spLT5ucl9yZWFkZXJz
ID49IDApCisjZGVmaW5lIGxvY2tfbW9kZV9jb21wYXRpYmxlKGxvY2ssIG1vZGUpCQkJCVwKKwkg
ICAgICAoKChtb2RlKSA9PSBaTk9ERV9XUklURV9MT0NLICYmICFsb2NrX2lzX2xvY2tlZChsb2Nr
KSkgfHwJXAorCSAgICAgICgobW9kZSkgPT0gWk5PREVfUkVBRF9MT0NLICYmIGxvY2tfY2FuX2Jl
X3Jsb2NrZWQobG9jaykpKQorCisvKiBTaW5jZSB3ZSBoYXZlIFIvVyB6bm9kZSBsb2NrcyB3ZSBu
ZWVkIGFkZGl0aW9uYWwgYmlkaXJlY3Rpb25hbCBgbGluaycKKyAgIG9iamVjdHMgdG8gaW1wbGVt
ZW50IG48LT5tIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGxvY2sgb3duZXJzIGFuZCBsb2NrCisgICBv
YmplY3RzLiBXZSBjYWxsIHRoZW0gYGxvY2sgaGFuZGxlcycuCisKKyAgIExvY2tpbmc6IHNlZSBs
b2NrLmMvIlNIT1JULVRFUk0gTE9DS0lORyIKKyovCitzdHJ1Y3QgbG9ja19oYW5kbGUgeworCS8q
IFRoaXMgZmxhZyBpbmRpY2F0ZXMgdGhhdCBhIHNpZ25hbCB0byB5aWVsZCBhIGxvY2sgd2FzIHBh
c3NlZCB0bworCSAgIGxvY2sgb3duZXIgYW5kIGNvdW50ZWQgaW4gb3duZXItPm5yX3NpZ25hbGxl
ZAorCisJICAgTG9ja2luZzogdGhpcyBpcyBhY2Nlc3NlZCB1bmRlciBzcGluIGxvY2sgb24gLT5u
b2RlLgorCSAqLworCWludCBzaWduYWxlZDsKKwkvKiBBIGxpbmsgdG8gb3duZXIgb2YgYSBsb2Nr
ICovCisJbG9ja19zdGFjayAqb3duZXI7CisJLyogQSBsaW5rIHRvIHpub2RlIGxvY2tlZCAqLwor
CXpub2RlICpub2RlOworCS8qIEEgbGlzdCBvZiBhbGwgbG9ja3MgZm9yIGEgcHJvY2VzcyAqLwor
CXN0cnVjdCBsaXN0X2hlYWQgbG9ja3NfbGluazsKKwkvKiBBIGxpc3Qgb2YgYWxsIG93bmVycyBm
b3IgYSB6bm9kZSAqLworCXN0cnVjdCBsaXN0X2hlYWQgb3duZXJzX2xpbms7Cit9OworCitzdHJ1
Y3QgbG9ja19yZXF1ZXN0IHsKKwkvKiBBIHBvaW50ZXIgdG8gdW5pbml0aWFsaXplZCBsaW5rIG9i
amVjdCAqLworCWxvY2tfaGFuZGxlICpoYW5kbGU7CisJLyogQSBwb2ludGVyIHRvIHRoZSBvYmpl
Y3Qgd2Ugd2FudCB0byBsb2NrICovCisJem5vZGUgKm5vZGU7CisJLyogTG9jayBtb2RlIChaTk9E
RV9SRUFEX0xPQ0sgb3IgWk5PREVfV1JJVEVfTE9DSykgKi8KKwl6bm9kZV9sb2NrX21vZGUgbW9k
ZTsKKwkvKiBob3cgZGlzcGF0Y2hfbG9ja19yZXF1ZXN0cygpIHJldHVybnMgbG9jayByZXF1ZXN0
IHJlc3VsdCBjb2RlICovCisJaW50IHJldF9jb2RlOworfTsKKworLyogQSBsb2NrIHN0YWNrIHN0
cnVjdHVyZSBmb3IgYWNjdW11bGF0aW5nIGxvY2tzIG93bmVkIGJ5IGEgcHJvY2VzcyAqLworc3Ry
dWN0IGxvY2tfc3RhY2sgeworCS8qIEEgZ3VhcmQgbG9jayBwcm90ZWN0aW5nIGEgbG9jayBzdGFj
ayAqLworCXNwaW5sb2NrX3Qgc2d1YXJkOworCS8qIG51bWJlciBvZiB6bm9kZXMgd2hpY2ggd2Vy
ZSByZXF1ZXN0ZWQgYnkgaGlnaCBwcmlvcml0eSBwcm9jZXNzZXMgKi8KKwlhdG9taWNfdCBucl9z
aWduYWxlZDsKKwkvKiBDdXJyZW50IHByaW9yaXR5IG9mIGEgcHJvY2VzcworCisJICAgVGhpcyBp
cyBvbmx5IGFjY2Vzc2VkIGJ5IHRoZSBjdXJyZW50IHRocmVhZCBhbmQgdGh1cyByZXF1aXJlcyBu
bworCSAgIGxvY2tpbmcuCisJICovCisJaW50IGN1cnByaTsKKwkvKiBBIGxpc3Qgb2YgYWxsIGxv
Y2tzIG93bmVkIGJ5IHRoaXMgcHJvY2Vzcy4gRWxlbWVudHMgY2FuIGJlIGFkZGVkIHRvCisJICog
dGhpcyBsaXN0IG9ubHkgYnkgdGhlIGN1cnJlbnQgdGhyZWFkLiAtPm5vZGUgcG9pbnRlcnMgaW4g
dGhpcyBsaXN0CisJICogY2FuIGJlIG9ubHkgY2hhbmdlZCBieSB0aGUgY3VycmVudCB0aHJlYWQu
ICovCisJc3RydWN0IGxpc3RfaGVhZCBsb2NrczsKKwkvKiBXaGVuIGxvY2tfc3RhY2sgd2FpdHMg
Zm9yIHRoZSBsb2NrLCBpdCBwdXRzIGl0c2VsZiBvbiBkb3VibGUtbGlua2VkCisJICAgcmVxdWVz
dG9ycyBsaXN0IG9mIHRoYXQgbG9jayAqLworCXN0cnVjdCBsaXN0X2hlYWQgcmVxdWVzdG9yc19s
aW5rOworCS8qIEN1cnJlbnQgbG9jayByZXF1ZXN0IGluZm8uCisKKwkgICBUaGlzIGlzIG9ubHkg
YWNjZXNzZWQgYnkgdGhlIGN1cnJlbnQgdGhyZWFkIGFuZCB0aHVzIHJlcXVpcmVzIG5vCisJICAg
bG9ja2luZy4KKwkgKi8KKwlzdHJ1Y3QgbG9ja19yZXF1ZXN0IHJlcXVlc3Q7CisJLyogdGhlIGZv
bGxvd2luZyB0d28gZmllbGRzIGFyZSB0aGUgbG9jayBzdGFjaydzCisJICogc3luY2hyb25pemF0
aW9uIG9iamVjdCB0byB1c2Ugd2l0aCB0aGUgc3RhbmRhcmQgbGludXgvd2FpdC5oCisJICogaW50
ZXJmYWNlLiBTZWUgcmVpc2VyNF9nb190b19zbGVlcCBhbmQgX19yZWlzZXI0X3dha2VfdXAgZm9y
CisJICogdXNhZ2UgZGV0YWlscy4gKi8KKwl3YWl0X3F1ZXVlX2hlYWRfdCB3YWl0OworCWF0b21p
Y190IHdha2V1cDsKKyNpZiBSRUlTRVI0X0RFQlVHCisJaW50IG5yX2xvY2tzOwkJLyogbnVtYmVy
IG9mIGxvY2sgaGFuZGxlcyBpbiB0aGUgYWJvdmUgbGlzdCAqLworI2VuZGlmCit9OworCisvKgor
ICBVc2VyLXZpc2libGUgem5vZGUgbG9ja2luZyBmdW5jdGlvbnMKKyovCisKK2V4dGVybiBpbnQg
bG9uZ3Rlcm1fbG9ja196bm9kZShsb2NrX2hhbmRsZSAqIGhhbmRsZSwKKwkJCSAgICAgICB6bm9k
ZSAqIG5vZGUsCisJCQkgICAgICAgem5vZGVfbG9ja19tb2RlIG1vZGUsCisJCQkgICAgICAgem5v
ZGVfbG9ja19yZXF1ZXN0IHJlcXVlc3QpOworCitleHRlcm4gdm9pZCBsb25ndGVybV91bmxvY2tf
em5vZGUobG9ja19oYW5kbGUgKiBoYW5kbGUpOworCitleHRlcm4gaW50IHJlaXNlcjRfY2hlY2tf
ZGVhZGxvY2sodm9pZCk7CisKK2V4dGVybiBsb2NrX3N0YWNrICpnZXRfY3VycmVudF9sb2NrX3N0
YWNrKHZvaWQpOworCitleHRlcm4gdm9pZCBpbml0X2xvY2tfc3RhY2sobG9ja19zdGFjayAqIG93
bmVyKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfaW5pdF9sb2NrKHpsb2NrICogbG9jayk7CisKK3N0
YXRpYyBpbmxpbmUgdm9pZCBpbml0X2xoKGxvY2tfaGFuZGxlICpsaCkKK3sKKyNpZiBSRUlTRVI0
X0RFQlVHCisJbWVtc2V0KGxoLCAwLCBzaXplb2YgKmxoKTsKKwlJTklUX0xJU1RfSEVBRCgmbGgt
PmxvY2tzX2xpbmspOworCUlOSVRfTElTVF9IRUFEKCZsaC0+b3duZXJzX2xpbmspOworI2Vsc2UK
KwlsaC0+bm9kZSA9IE5VTEw7CisjZW5kaWYKK30KKworc3RhdGljIGlubGluZSAgdm9pZCBkb25l
X2xoKGxvY2tfaGFuZGxlICpsaCkKK3sKKwlhc3NlcnQoInphbS0zNDIiLCBsaCAhPSBOVUxMKTsK
KwlpZiAobGgtPm5vZGUgIT0gTlVMTCkKKwkJbG9uZ3Rlcm1fdW5sb2NrX3pub2RlKGxoKTsKK30K
KworZXh0ZXJuIHZvaWQgbW92ZV9saChsb2NrX2hhbmRsZSAqIG5ldywgbG9ja19oYW5kbGUgKiBv
bGQpOworZXh0ZXJuIHZvaWQgY29weV9saChsb2NrX2hhbmRsZSAqIG5ldywgbG9ja19oYW5kbGUg
KiBvbGQpOworCitleHRlcm4gaW50IHJlaXNlcjRfcHJlcGFyZV90b19zbGVlcChsb2NrX3N0YWNr
ICogb3duZXIpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9nb190b19zbGVlcChsb2NrX3N0YWNrICog
b3duZXIpOworZXh0ZXJuIHZvaWQgX19yZWlzZXI0X3dha2VfdXAobG9ja19zdGFjayAqIG93bmVy
KTsKKworZXh0ZXJuIGludCBsb2NrX3N0YWNrX2lzY2xlYW4obG9ja19zdGFjayAqIG93bmVyKTsK
KworLyogemxvY2sgb2JqZWN0IHN0YXRlIGNoZWNrIG1hY3Jvczogb25seSB1c2VkIGluIGFzc2Vy
dGlvbnMuIEJvdGggZm9ybXMgaW1wbHkKKyAgIHRoYXQgdGhlIGxvY2sgaXMgaGVsZCBieSB0aGUg
Y3VycmVudCB0aHJlYWQuICovCitleHRlcm4gaW50IHpub2RlX2lzX3dyaXRlX2xvY2tlZChjb25z
dCB6bm9kZSAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfaW52YWxpZGF0ZV9sb2NrKGxvY2tfaGFu
ZGxlICopOworCisvKiBsb2NrIG9yZGVyaW5nIGlzOiBmaXJzdCB0YWtlIHpsb2NrIHNwaW4gbG9j
aywgdGhlbiBsb2NrIHN0YWNrIHNwaW4gbG9jayAqLworI2RlZmluZSBzcGluX29yZGVyaW5nX3By
ZWRfc3RhY2soc3RhY2spCQkJXAorCShMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfc3RhY2spICYm
CQlcCisJIExPQ0tfQ05UX05JTChzcGluX2xvY2tlZF90eG5tZ3IpICYmCQlcCisJIExPQ0tfQ05U
X05JTChzcGluX2xvY2tlZF9pbm9kZSkgJiYJCVwKKwkgTE9DS19DTlRfTklMKHJ3X2xvY2tlZF9j
YmtfY2FjaGUpICYmCQlcCisJIExPQ0tfQ05UX05JTChzcGluX2xvY2tlZF9zdXBlcl9lZmx1c2gp
KQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl9sb2NrX3N0YWNrKGxvY2tfc3RhY2sgKnN0YWNr
KQoreworCWFzc2VydCgiIiwgc3Bpbl9vcmRlcmluZ19wcmVkX3N0YWNrKHN0YWNrKSk7CisJc3Bp
bl9sb2NrKCYoc3RhY2stPnNndWFyZCkpOworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tlZF9zdGFj
ayk7CisJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKK30KKworc3RhdGljIGlubGluZSB2b2lk
IHNwaW5fdW5sb2NrX3N0YWNrKGxvY2tfc3RhY2sgKnN0YWNrKQoreworCWFzc2VydF9zcGluX2xv
Y2tlZCgmKHN0YWNrLT5zZ3VhcmQpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzc1IiwgTE9DS19DTlRf
R1RaKHNwaW5fbG9ja2VkX3N0YWNrKSk7CisJYXNzZXJ0KCJuaWtpdGEtMTM3NiIsIExPQ0tfQ05U
X0dUWihzcGluX2xvY2tlZCkpOworCUxPQ0tfQ05UX0RFQyhzcGluX2xvY2tlZF9zdGFjayk7CisJ
TE9DS19DTlRfREVDKHNwaW5fbG9ja2VkKTsKKwlzcGluX3VubG9jaygmKHN0YWNrLT5zZ3VhcmQp
KTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHJlaXNlcjRfd2FrZV91cChsb2NrX3N0YWNrICog
b3duZXIpCit7CisJc3Bpbl9sb2NrX3N0YWNrKG93bmVyKTsKKwlfX3JlaXNlcjRfd2FrZV91cChv
d25lcik7CisJc3Bpbl91bmxvY2tfc3RhY2sob3duZXIpOworfQorCitjb25zdCBjaGFyICpsb2Nr
X21vZGVfbmFtZSh6bm9kZV9sb2NrX21vZGUgbG9jayk7CisKKyNpZiBSRUlTRVI0X0RFQlVHCitl
eHRlcm4gdm9pZCBjaGVja19sb2NrX2RhdGEodm9pZCk7CitleHRlcm4gdm9pZCBjaGVja19sb2Nr
X25vZGVfZGF0YSh6bm9kZSAqIG5vZGUpOworI2Vsc2UKKyNkZWZpbmUgY2hlY2tfbG9ja19kYXRh
KCkgbm9vcAorI2RlZmluZSBjaGVja19sb2NrX25vZGVfZGF0YSgpIG5vb3AKKyNlbmRpZgorCisv
KiBfX0xPQ0tfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2Fs
IHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6
ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29s
dW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvTWFrZWZpbGUgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvTWFr
ZWZpbGUKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvTWFrZWZpbGUJMTk3MC0wMS0w
MSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L01h
a2VmaWxlCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU2MjIyMjAxICswMTAwCkBAIC0wLDAgKzEsMTAz
IEBACisjCisjIHJlaXNlcjQvTWFrZWZpbGUKKyMKKworb2JqLSQoQ09ORklHX1JFSVNFUjRfRlMp
ICs9IHJlaXNlcjQubworCityZWlzZXI0LXkgOj0gXAorCQkgICBkZWJ1Zy5vIFwKKwkJICAgam5v
ZGUubyBcCisJCSAgIHpub2RlLm8gXAorCQkgICBrZXkubyBcCisJCSAgIHBvb2wubyBcCisJCSAg
IHRyZWVfbW9kLm8gXAorCQkgICBlc3RpbWF0ZS5vIFwKKwkJICAgY2FycnkubyBcCisJCSAgIGNh
cnJ5X29wcy5vIFwKKwkJICAgbG9jay5vIFwKKwkJICAgdHJlZS5vIFwKKwkJICAgY29udGV4dC5v
IFwKKwkJICAgdGFwLm8gXAorCQkgICBjb29yZC5vIFwKKwkJICAgYmxvY2tfYWxsb2MubyBcCisJ
CSAgIHR4bm1nci5vIFwKKwkJICAga2Fzc2lnbi5vIFwKKwkJICAgZmx1c2gubyBcCisJCSAgIHdh
bmRlci5vIFwKKwkJICAgZW90dGwubyBcCisJCSAgIHNlYXJjaC5vIFwKKwkJICAgcGFnZV9jYWNo
ZS5vIFwKKwkJICAgc2VhbC5vIFwKKwkJICAgZHNjYWxlLm8gXAorCQkgICBmbHVzaF9xdWV1ZS5v
IFwKKwkJICAga3R4bm1ncmQubyBcCisJCSAgIGJsb2NrbnJzZXQubyBcCisJCSAgIHN1cGVyLm8g
XAorCQkgICBzdXBlcl9vcHMubyBcCisJCSAgIGZzZGF0YS5vIFwKKwkJICAgZXhwb3J0X29wcy5v
IFwKKwkJICAgb2lkLm8gXAorCQkgICB0cmVlX3dhbGsubyBcCisJCSAgIGlub2RlLm8gXAorCQkg
ICB2ZnNfb3BzLm8gXAorCQkgICBhc19vcHMubyBcCisJCSAgIGVudGQub1wKKwkJICAgcmVhZGFo
ZWFkLm8gXAorCQkgICBzdGF0dXNfZmxhZ3MubyBcCisJCSAgIGluaXRfc3VwZXIubyBcCisJCSAg
IHNhZmVfbGluay5vIFwKKwkJICAgYmxvY2tucmxpc3QubyBcCisJCSAgIGRpc2NhcmQubyBcCisJ
CSAgIGNoZWNrc3VtLm8gXAorICAgICAgICAgICBcCisJCSAgIHBsdWdpbi9wbHVnaW4ubyBcCisJ
CSAgIHBsdWdpbi9wbHVnaW5fc2V0Lm8gXAorCQkgICBwbHVnaW4vbm9kZS9ub2RlLm8gXAorCQkg
ICBwbHVnaW4vb2JqZWN0Lm8gXAorCQkgICBwbHVnaW4vY2x1c3Rlci5vIFwKKwkJICAgcGx1Z2lu
L3R4bW9kLm8gXAorCQkgICBwbHVnaW4vaW5vZGVfb3BzLm8gXAorCQkgICBwbHVnaW4vaW5vZGVf
b3BzX3JlbmFtZS5vIFwKKwkJICAgcGx1Z2luL2ZpbGVfb3BzLm8gXAorCQkgICBwbHVnaW4vZmls
ZV9vcHNfcmVhZGRpci5vIFwKKwkJICAgcGx1Z2luL2ZpbGVfcGx1Z2luX2NvbW1vbi5vIFwKKwkJ
ICAgcGx1Z2luL2ZpbGUvZmlsZS5vIFwKKwkJICAgcGx1Z2luL2ZpbGUvdGFpbF9jb252ZXJzaW9u
Lm8gXAorCQkgICBwbHVnaW4vZmlsZS9maWxlX2NvbnZlcnNpb24ubyBcCisJCSAgIHBsdWdpbi9m
aWxlL3N5bWxpbmsubyBcCisJCSAgIHBsdWdpbi9maWxlL2NyeXB0Y29tcHJlc3MubyBcCisJCSAg
IHBsdWdpbi9kaXJfcGx1Z2luX2NvbW1vbi5vIFwKKwkJICAgcGx1Z2luL2Rpci9oYXNoZWRfZGly
Lm8gXAorCQkgICBwbHVnaW4vZGlyL3NlZWthYmxlX2Rpci5vIFwKKwkJICAgcGx1Z2luL25vZGUv
bm9kZTQwLm8gXAorCQkgICBwbHVnaW4vbm9kZS9ub2RlNDEubyBcCisgICAgICAgICAgIFwKKwkJ
ICAgcGx1Z2luL2NyeXB0by9jaXBoZXIubyBcCisJCSAgIHBsdWdpbi9jcnlwdG8vZGlnZXN0Lm8g
XAorICAgICAgICAgICBcCisJCSAgIHBsdWdpbi9jb21wcmVzcy9jb21wcmVzcy5vIFwKKwkJICAg
cGx1Z2luL2NvbXByZXNzL2NvbXByZXNzX21vZGUubyBcCisgICAgICAgICAgIFwKKwkJICAgcGx1
Z2luL2l0ZW0vc3RhdGljX3N0YXQubyBcCisJCSAgIHBsdWdpbi9pdGVtL3NkZS5vIFwKKwkJICAg
cGx1Z2luL2l0ZW0vY2RlLm8gXAorCQkgICBwbHVnaW4vaXRlbS9ibGFja2JveC5vIFwKKwkJICAg
cGx1Z2luL2l0ZW0vaW50ZXJuYWwubyBcCisJCSAgIHBsdWdpbi9pdGVtL3RhaWwubyBcCisJCSAg
IHBsdWdpbi9pdGVtL2N0YWlsLm8gXAorCQkgICBwbHVnaW4vaXRlbS9leHRlbnQubyBcCisJCSAg
IHBsdWdpbi9pdGVtL2V4dGVudF9pdGVtX29wcy5vIFwKKwkJICAgcGx1Z2luL2l0ZW0vZXh0ZW50
X2ZpbGVfb3BzLm8gXAorCQkgICBwbHVnaW4vaXRlbS9leHRlbnRfZmx1c2hfb3BzLm8gXAorICAg
ICAgICAgICBcCisJCSAgIHBsdWdpbi9oYXNoLm8gXAorCQkgICBwbHVnaW4vZmlicmF0aW9uLm8g
XAorCQkgICBwbHVnaW4vdGFpbF9wb2xpY3kubyBcCisJCSAgIHBsdWdpbi9pdGVtL2l0ZW0ubyBc
CisgICAgICAgICAgIFwKKwkJICAgcGx1Z2luL3NlY3VyaXR5L3Blcm0ubyBcCisJCSAgIHBsdWdp
bi9zcGFjZS9iaXRtYXAubyBcCisgICAgICAgICAgIFwKKwkJICAgcGx1Z2luL2Rpc2tfZm9ybWF0
L2Rpc2tfZm9ybWF0NDAubyBcCisJCSAgIHBsdWdpbi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1hdC5v
CisKZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9vaWQuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9vaWQuYwotLS0gbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9vaWQuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAor
KysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvb2lkLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTYy
MjIyMDEgKzAxMDAKQEAgLTAsMCArMSwxNDEgQEAKKy8qIENvcHlyaWdodCAyMDAzIGJ5IEhhbnMg
UmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1
ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKwor
Lyogd2UgdXNlZCB0byBoYXZlIG9pZCBhbGxvY2F0aW9uIHBsdWdpbi4gSXQgd2FzIHJlbW92ZWQg
YmVjYXVzZSBpdAorICAgd2FzIHJlY29nbml6ZWQgYXMgcHJvdmlkaW5nIHVubmVlZGVkIGxldmVs
IG9mIGFic3RyYWN0aW9uLiBJZiBvbmUKKyAgIGV2ZXIgd2lsbCBmaW5kIGl0IHVzZWZ1bCAtIGxv
b2sgYXQgeWV0X3VubmVlZGVkX2Fic3RyYWN0aW9ucy9vaWQKKyovCisKKy8qCisgKiBpbml0aWFs
aXplIGluLW1lbW9yeSBkYXRhIGZvciBvaWQgYWxsb2NhdG9yIGF0IEBzdXBlci4gQG5yX2ZpbGVz
IGFuZCBAbmV4dAorICogYXJlIHByb3ZpZGVkIGJ5IGRpc2sgZm9ybWF0IHBsdWdpbiB0aGF0IHJl
YWRzIHRoZW0gZnJvbSB0aGUgZGlzayBkdXJpbmcKKyAqIG1vdW50LgorICovCitpbnQgb2lkX2lu
aXRfYWxsb2NhdG9yKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIG9pZF90IG5yX2ZpbGVzLCBv
aWRfdCBuZXh0KQoreworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwlzYmlu
Zm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzdXBlcik7CisKKwlzYmluZm8tPm5leHRfdG9fdXNlID0g
bmV4dDsKKwlzYmluZm8tPm9pZHNfaW5fdXNlID0gbnJfZmlsZXM7CisJcmV0dXJuIDA7Cit9CisK
Ky8qCisgKiBhbGxvY2F0ZSBvaWQgYW5kIHJldHVybiBpdC4gQUJTT0xVVEVfTUFYX09JRCBpcyBy
ZXR1cm5lZCB3aGVuIGFsbG9jYXRvcgorICogcnVucyBvdXQgb2Ygb2lkcy4KKyAqLworb2lkX3Qg
b2lkX2FsbG9jYXRlKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJcmVpc2VyNF9zdXBl
cl9pbmZvX2RhdGEgKnNiaW5mbzsKKwlvaWRfdCBvaWQ7CisKKwlzYmluZm8gPSBnZXRfc3VwZXJf
cHJpdmF0ZShzdXBlcik7CisKKwlzcGluX2xvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCWlm
IChzYmluZm8tPm5leHRfdG9fdXNlICE9IEFCU09MVVRFX01BWF9PSUQpIHsKKwkJb2lkID0gc2Jp
bmZvLT5uZXh0X3RvX3VzZSsrOworCQlzYmluZm8tPm9pZHNfaW5fdXNlKys7CisJfSBlbHNlCisJ
CW9pZCA9IEFCU09MVVRFX01BWF9PSUQ7CisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmlu
Zm8pOworCXJldHVybiBvaWQ7Cit9CisKKy8qCisgKiBUZWxsIG9pZCBhbGxvY2F0b3IgdGhhdCBA
b2lkIGlzIG5vdyBmcmVlLgorICovCitpbnQgb2lkX3JlbGVhc2Uoc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzdXBlciwgb2lkX3Qgb2lkIFVOVVNFRF9BUkcpCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2Rh
dGEgKnNiaW5mbzsKKworCXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKworCXNw
aW5fbG9ja19yZWlzZXI0X3N1cGVyKHNiaW5mbyk7CisJc2JpbmZvLT5vaWRzX2luX3VzZS0tOwor
CXNwaW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwlyZXR1cm4gMDsKK30KKworLyoK
KyAqIHJldHVybiBuZXh0IEBvaWQgdGhhdCB3b3VsZCBiZSBhbGxvY2F0ZWQgKGkuZS4sIHJldHVy
bmVkIGJ5IG9pZF9hbGxvY2F0ZSgpKQorICogd2l0aG91dCBhY3R1YWxseSBhbGxvY2F0aW5nIGl0
LiBUaGlzIGlzIHVzZWQgYnkgZGlzayBmb3JtYXQgcGx1Z2luIHRvIHNhdmUKKyAqIG9pZCBhbGxv
Y2F0b3Igc3RhdGUgb24gdGhlIGRpc2suCisgKi8KK29pZF90IG9pZF9uZXh0KGNvbnN0IHN0cnVj
dCBzdXBlcl9ibG9jayAqc3VwZXIpCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5m
bzsKKwlvaWRfdCBvaWQ7CisKKwlzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzdXBlcik7CisK
KwlzcGluX2xvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCW9pZCA9IHNiaW5mby0+bmV4dF90
b191c2U7CisJc3Bpbl91bmxvY2tfcmVpc2VyNF9zdXBlcihzYmluZm8pOworCXJldHVybiBvaWQ7
Cit9CisKKy8qCisgKiByZXR1cm5zIG51bWJlciBvZiBjdXJyZW50bHkgdXNlZCBvaWRzLiBUaGlz
IGlzIHVzZWQgYnkgc3RhdGZzKDIpIHRvIHJlcG9ydAorICogbnVtYmVyIG9mICJpbm9kZXMiIGFu
ZCBieSBkaXNrIGZvcm1hdCBwbHVnaW4gdG8gc2F2ZSBvaWQgYWxsb2NhdG9yIHN0YXRlIG9uCisg
KiB0aGUgZGlzay4KKyAqLworbG9uZyBvaWRzX3VzZWQoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzdXBlcikKK3sKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCW9pZF90IHVz
ZWQ7CisKKwlzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzdXBlcik7CisKKwlzcGluX2xvY2tf
cmVpc2VyNF9zdXBlcihzYmluZm8pOworCXVzZWQgPSBzYmluZm8tPm9pZHNfaW5fdXNlOworCXNw
aW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwlpZiAodXNlZCA8IChfX3U2NCkgKChs
b25nKX4wKSA+PiAxKQorCQlyZXR1cm4gKGxvbmcpdXNlZDsKKwllbHNlCisJCXJldHVybiAobG9u
ZyktMTsKK30KKworLyoKKyAqIENvdW50IG9pZCBhcyBhbGxvY2F0ZWQgaW4gYXRvbS4gVGhpcyBp
cyBkb25lIGFmdGVyIGNhbGwgdG8gb2lkX2FsbG9jYXRlKCkKKyAqIGF0IHRoZSBwb2ludCB3aGVu
IHdlIGFyZSBpcnJldm9jYWJseSBjb21taXR0ZWQgdG8gY3JlYXRpb24gb2YgdGhlIG5ldyBmaWxl
CisgKiAoaS5lLiwgd2hlbiBvaWQgYWxsb2NhdGlvbiBjYW5ub3QgYmUgYW55IGxvbmdlciByb2xs
ZWQgYmFjayBkdWUgdG8gc29tZQorICogZXJyb3IpLgorICovCit2b2lkIG9pZF9jb3VudF9hbGxv
Y2F0ZWQodm9pZCkKK3sKKwl0eG5fYXRvbSAqYXRvbTsKKworCWF0b20gPSBnZXRfY3VycmVudF9h
dG9tX2xvY2tlZCgpOworCWF0b20tPm5yX29iamVjdHNfY3JlYXRlZCsrOworCXNwaW5fdW5sb2Nr
X2F0b20oYXRvbSk7Cit9CisKKy8qCisgKiBDb3VudCBvaWQgYXMgZnJlZSBpbiBhdG9tLiBUaGlz
IGlzIGRvbmUgYWZ0ZXIgY2FsbCB0byBvaWRfcmVsZWFzZSgpIGF0IHRoZQorICogcG9pbnQgd2hl
biB3ZSBhcmUgaXJyZXZvY2FibHkgY29tbWl0dGVkIHRvIHRoZSBkZWxldGlvbiBvZiB0aGUgZmls
ZSAoaS5lLiwKKyAqIHdoZW4gb2lkIHJlbGVhc2UgY2Fubm90IGJlIGFueSBsb25nZXIgcm9sbGVk
IGJhY2sgZHVlIHRvIHNvbWUgZXJyb3IpLgorICovCit2b2lkIG9pZF9jb3VudF9yZWxlYXNlZCh2
b2lkKQoreworCXR4bl9hdG9tICphdG9tOworCisJYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9j
a2VkKCk7CisJYXRvbS0+bnJfb2JqZWN0c19kZWxldGVkKys7CisJc3Bpbl91bmxvY2tfYXRvbShh
dG9tKTsKK30KKworLyoKKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5
bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0
YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBF
bmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9y
ZWlzZXI0L3BhZ2VfY2FjaGUuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wYWdlX2NhY2hlLmMK
LS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGFnZV9jYWNoZS5jCTE5NzAtMDEtMDEg
MDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wYWdl
X2NhY2hlLmMJMjAyMC0wMi0wNSAyMDo1NDoxOC4yMjY1MDg3MDIgKzAxMDAKQEAgLTAsMCArMSw2
OTIgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNl
bnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIE1lbW9yeSBwcmVz
c3VyZSBob29rcy4gRmFrZSBpbm9kZXMgaGFuZGxpbmcuICovCisKKy8qICAgR0xPU1NBUlkKKwor
ICAgLiBGb3JtYXR0ZWQgYW5kIHVuZm9ybWF0dGVkIG5vZGVzLgorICAgICBFbGVtZW50cyBvZiBy
ZWlzZXI0IGJhbGFuY2VkIHRyZWUgdG8gc3RvcmUgZGF0YSBhbmQgbWV0YWRhdGEuCisgICAgIFVu
Zm9ybWF0dGVkIG5vZGVzIGFyZSBwb2ludGVkIHRvIGJ5IGV4dGVudCBwb2ludGVycy4gU3VjaCBu
b2RlcworICAgICBhcmUgdXNlZCB0byBzdG9yZSBkYXRhIG9mIGxhcmdlIG9iamVjdHMuIFVubGlr
ZSB1bmZvcm1hdHRlZCBub2RlcywKKyAgICAgZm9ybWF0dGVkIG9uZXMgaGF2ZSBhc3NvY2lhdGVk
IGZvcm1hdCBkZXNjcmliZWQgYnkgbm9kZTRYIHBsdWdpbi4KKworICAgLiBKbm9kZSAob3Igam91
cm5hbCBub2RlKQorICAgICBUaGUgaW4tbWVtb3J5IGhlYWRlciB3aGljaCBpcyB1c2VkIHRvIHRy
YWNrIGZvcm1hdHRlZCBhbmQgdW5mb3JtYXR0ZWQKKyAgICAgbm9kZXMsIGJpdG1hcCBub2Rlcywg
ZXRjLiBJbiBwYXJ0aWN1bGFyLCBqbm9kZXMgYXJlIHVzZWQgdG8gdHJhY2sKKyAgICAgdHJhbnNh
Y3Rpb25hbCBpbmZvcm1hdGlvbiBhc3NvY2lhdGVkIHdpdGggZWFjaCBibG9jayhzZWUgcmVpc2Vy
NC9qbm9kZS5jCisgICAgIGZvciBkZXRhaWxzKS4KKworICAgLiBabm9kZQorICAgICBUaGUgaW4t
bWVtb3J5IGhlYWRlciB3aGljaCBpcyB1c2VkIHRvIHRyYWNrIGZvcm1hdHRlZCBub2Rlcy4gQ29u
dGFpbnMKKyAgICAgZW1iZWRkZWQgam5vZGUgKHNlZSByZWlzZXI0L3pub2RlLmMgZm9yIGRldGFp
bHMpLgorKi8KKworLyogV2Ugc3RvcmUgYWxsIGZpbGUgc3lzdGVtIG1ldGEgZGF0YSAoYW5kIGRh
dGEsIG9mIGNvdXJzZSkgaW4gdGhlIHBhZ2UgY2FjaGUuCisKKyAgIFdoYXQgZG9lcyB0aGlzIG1l
YW4/IEluIHN0ZWFkIG9mIHVzaW5nIGJyZWFkL2JyZWxzZSB3ZSBjcmVhdGUgc3BlY2lhbAorICAg
ImZha2UiIGlub2RlIChvbmUgcGVyIHN1cGVyIGJsb2NrKSBhbmQgc3RvcmUgY29udGVudCBvZiBm
b3JtYXR0ZWQgbm9kZXMKKyAgIGludG8gcGFnZXMgYm91bmQgdG8gdGhpcyBpbm9kZSBpbiB0aGUg
cGFnZSBjYWNoZS4gSW4gbmV3ZXIga2VybmVscyBicmVhZCgpCisgICBhbHJlYWR5IHVzZXMgaW5v
ZGUgYXR0YWNoZWQgdG8gYmxvY2sgZGV2aWNlIChiZF9pbm9kZSkuIEFkdmFudGFnZSBvZiBoYXZp
bmcKKyAgIG91ciBvd24gZmFrZSBpbm9kZSBpcyB0aGF0IHdlIGNhbiBpbnN0YWxsIGFwcHJvcHJp
YXRlIG1ldGhvZHMgaW4gaXRzCisgICBhZGRyZXNzX3NwYWNlIG9wZXJhdGlvbnMuIFN1Y2ggbWV0
aG9kcyBhcmUgY2FsbGVkIGJ5IFZNIG9uIG1lbW9yeSBwcmVzc3VyZQorICAgKG9yIGR1cmluZyBi
YWNrZ3JvdW5kIHBhZ2UgZmx1c2hpbmcpIGFuZCB3ZSBjYW4gdXNlIHRoZW0gdG8gcmVhY3QKKyAg
IGFwcHJvcHJpYXRlbHkuCisKKyAgIEluIGluaXRpYWwgdmVyc2lvbiB3ZSBvbmx5IHN1cHBvcnQg
b25lIGJsb2NrIHBlciBwYWdlLiBTdXBwb3J0IGZvciBtdWx0aXBsZQorICAgYmxvY2tzIHBlciBw
YWdlIGlzIGNvbXBsaWNhdGVkIGJ5IHJlbG9jYXRpb24uCisKKyAgIFRvIGVhY2ggcGFnZSwgdXNl
ZCBieSByZWlzZXI0LCBqbm9kZSBpcyBhdHRhY2hlZC4gam5vZGUgaXMgYW5hbG9nb3VzIHRvCisg
ICBidWZmZXIgaGVhZC4gRGlmZmVyZW5jZSBpcyB0aGF0IGpub2RlIGlzIGJvdW5kIHRvIHRoZSBw
YWdlIHBlcm1hbmVudGx5OgorICAgam5vZGUgY2Fubm90IGJlIHJlbW92ZWQgZnJvbSBtZW1vcnkg
dW50aWwgaXRzIGJhY2tpbmcgcGFnZSBpcy4KKworICAgam5vZGUgY29udGFpbiBwb2ludGVyIHRv
IHBhZ2UgKC0+cGcgZmllbGQpIGFuZCBwYWdlIGNvbnRhaW4gcG9pbnRlciB0bworICAgam5vZGUg
aW4gLT5wcml2YXRlIGZpZWxkLiBQb2ludGVyIGZyb20gam5vZGUgdG8gcGFnZSBpcyBwcm90ZWN0
ZWQgdG8gYnkKKyAgIGpub2RlJ3Mgc3BpbmxvY2sgYW5kIHBvaW50ZXIgZnJvbSBwYWdlIHRvIGpu
b2RlIGlzIHByb3RlY3RlZCBieSBwYWdlIGxvY2sKKyAgIChQR19sb2NrZWQgYml0KS4gTG9jayBv
cmRlcmluZyBpczogZmlyc3QgdGFrZSBwYWdlIGxvY2ssIHRoZW4gam5vZGUgc3BpbgorICAgbG9j
ay4gVG8gZ28gaW50byByZXZlcnNlIGRpcmVjdGlvbiB1c2Ugam5vZGVfbG9ja19wYWdlKCkgZnVu
Y3Rpb24gdGhhdCB1c2VzCisgICBzdGFuZGFyZCB0cnktbG9jay1hbmQtcmVsZWFzZSBkZXZpY2Uu
CisKKyAgIFByb3BlcnRpZXM6CisKKyAgIDEuIHdoZW4gam5vZGUtdG8tcGFnZSBtYXBwaW5nIGlz
IGVzdGFibGlzaGVkIChieSBqbm9kZV9hdHRhY2hfcGFnZSgpKSwgcGFnZQorICAgcmVmZXJlbmNl
IGNvdW50ZXIgaXMgaW5jcmVhc2VkLgorCisgICAyLiB3aGVuIGpub2RlLXRvLXBhZ2UgbWFwcGlu
ZyBpcyBkZXN0cm95ZWQgKGJ5IHBhZ2VfY2xlYXJfam5vZGUoKSwgcGFnZQorICAgcmVmZXJlbmNl
IGNvdW50ZXIgaXMgZGVjcmVhc2VkLgorCisgICAzLiBvbiBqbG9hZCgpIHJlZmVyZW5jZSBjb3Vu
dGVyIG9uIGpub2RlIHBhZ2UgaXMgaW5jcmVhc2VkLCBwYWdlIGlzCisgICBrbWFwcGVkIGFuZCBg
cmVmZXJlbmNlZCcuCisKKyAgIDQuIG9uIGpyZWxzZSgpIGludmVyc2Ugb3BlcmF0aW9ucyBhcmUg
cGVyZm9ybWVkLgorCisgICA1LiBrbWFwcGluZy9rdW5tYXBwaW5nIG9mIHVuZm9ybWF0dGVkIHBh
Z2VzIGlzIGRvbmUgYnkgcmVhZC93cml0ZSBtZXRob2RzLgorCisgICBERUFETE9DS1MgUkVMQVRF
RCBUTyBNRU1PUlkgUFJFU1NVUkUuIFtPVVREQVRFRC4gT25seSBpbnRlcmVzdGluZworICAgaGlz
dG9yaWNhbGx5Ll0KKworICAgW0luIHRoZSBmb2xsb3dpbmcgZGlzY3Vzc2lvbiwgYGxvY2snIGlu
dmFyaWFibHkgbWVhbnMgbG9uZyB0ZXJtIGxvY2sgb24KKyAgIHpub2RlLl0gKFdoYXQgYWJvdXQg
cGFnZSBsb2Nrcz8pCisKKyAgIFRoZXJlIGlzIHNvbWUgc3BlY2lhbCBjbGFzcyBvZiBkZWFkbG9j
ayBwb3NzaWJpbGl0aWVzIHJlbGF0ZWQgdG8gbWVtb3J5CisgICBwcmVzc3VyZS4gTG9ja3MgYWNx
dWlyZWQgYnkgb3RoZXIgcmVpc2VyNCB0aHJlYWRzIGFyZSBhY2NvdW50ZWQgZm9yIGluCisgICBk
ZWFkbG9jayBwcmV2ZW50aW9uIG1lY2hhbmlzbSAobG9jay5jKSwgYnV0IHdoZW4gLT52bV93cml0
ZWJhY2soKSBpcworICAgaW52b2tlZCBhZGRpdGlvbmFsIGhpZGRlbiBhcmMgaXMgYWRkZWQgdG8g
dGhlIGxvY2tpbmcgZ3JhcGg6IHRocmVhZCB0aGF0CisgICB0cmllcyB0byBhbGxvY2F0ZSBtZW1v
cnkgd2FpdHMgZm9yIC0+dm1fd3JpdGViYWNrKCkgdG8gZmluaXNoLiBJZiB0aGlzCisgICB0aHJl
YWQga2VlcHMgbG9jayBhbmQgLT52bV93cml0ZWJhY2soKSB0cmllcyB0byBhY3F1aXJlIHRoaXMg
bG9jaywgZGVhZGxvY2sKKyAgIHByZXZlbnRpb24gaXMgdXNlbGVzcy4KKworICAgQW5vdGhlciBy
ZWxhdGVkIHByb2JsZW0gaXMgcG9zc2liaWxpdHkgZm9yIC0+dm1fd3JpdGViYWNrKCkgdG8gcnVu
IG91dCBvZgorICAgbWVtb3J5IGl0c2VsZi4gVGhpcyBpcyBub3QgYSBwcm9ibGVtIGZvciBleHQy
IGFuZCBmcmllbmRzLCBiZWNhdXNlIHRoZWlyCisgICAtPnZtX3dyaXRlYmFjaygpIGRvbid0IGFs
bG9jYXRlIG11Y2ggbWVtb3J5LCBidXQgcmVpc2VyNCBmbHVzaCBpcworICAgZGVmaW5pdGVseSBh
YmxlIHRvIGFsbG9jYXRlIGh1Z2UgYW1vdW50cyBvZiBtZW1vcnkuCisKKyAgIEl0IHNlZW1zIHRo
YXQgdGhlcmUgaXMgbm8gcmVsaWFibGUgd2F5IHRvIGNvcGUgd2l0aCB0aGUgcHJvYmxlbXMgYWJv
dmUuIEluCisgICBzdGVhZCBpdCB3YXMgZGVjaWRlZCB0aGF0IC0+dm1fd3JpdGViYWNrKCkgKGFz
IGludm9rZWQgaW4gdGhlIGtzd2FwZAorICAgY29udGV4dCkgd291bGRuJ3QgcGVyZm9ybSBhbnkg
Zmx1c2hpbmcgaXRzZWxmLCBidXQgcmF0aGVyIHNob3VsZCBqdXN0IHdha2UKKyAgIHVwIHNvbWUg
YXV4aWxpYXJ5IHRocmVhZCBkZWRpY2F0ZWQgZm9yIHRoaXMgcHVycG9zZSAob3IsIHRoZSBzYW1l
IHRocmVhZAorICAgdGhhdCBkb2VzIHBlcmlvZGljIGNvbW1pdCBvZiBvbGQgYXRvbXMgKGt0eG5t
Z3JkLmMpKS4KKworICAgRGV0YWlsczoKKworICAgMS4gUGFnZSBpcyBjYWxsZWQgYHJlY2xhaW1h
YmxlJyBhZ2FpbnN0IHBhcnRpY3VsYXIgcmVpc2VyNCBtb3VudCBGIGlmIHRoaXMKKyAgIHBhZ2Ug
Y2FuIGJlIHVsdGltYXRlbHkgcmVsZWFzZWQgYnkgdHJ5X3RvX2ZyZWVfcGFnZXMoKSB1bmRlciBw
cmVzdW1wdGlvbnMKKyAgIHRoYXQ6CisKKyAgICBhLiAtPnZtX3dyaXRlYmFjaygpIGZvciBGIGlz
IG5vLW9wLCBhbmQKKworICAgIGIuIG5vbmUgb2YgdGhlIHRocmVhZHMgYWNjZXNzaW5nIEYgYXJl
IG1ha2luZyBhbnkgcHJvZ3Jlc3MsIGFuZAorCisgICAgYy4gb3RoZXIgcmVpc2VyNCBtb3VudHMg
b2JleSB0aGUgc2FtZSBtZW1vcnkgcmVzZXJ2YXRpb24gcHJvdG9jb2wgYXMgRgorICAgIChkZXNj
cmliZWQgYmVsb3cpLgorCisgICBGb3IgZXhhbXBsZSwgY2xlYW4gdW4tcGlubmVkIHBhZ2UsIG9y
IHBhZ2Ugb2NjdXBpZWQgYnkgZXh0MiBkYXRhIGFyZQorICAgcmVjbGFpbWFibGUgYWdhaW5zdCBh
bnkgcmVpc2VyNCBtb3VudC4KKworICAgV2hlbiB0aGVyZSBpcyBtb3JlIHRoYW4gb25lIHJlaXNl
cjQgbW91bnQgaW4gYSBzeXN0ZW0sIGNvbmRpdGlvbiAoYykgbWFrZXMKKyAgIHJlY2xhaW0tYWJp
bGl0eSBub3QgZWFzaWx5IHZlcmlmaWFibGUgYmV5b25kIHRyaXZpYWwgY2FzZXMgbWVudGlvbmVk
IGFib3ZlLgorCisgICBUSElTIENPTU1FTlQgSVMgVkFMSUQgRk9SICJNQU5ZIEJMT0NLUyBPTiBQ
QUdFIiBDQVNFCisKKyAgIEZha2UgaW5vZGUgaXMgdXNlZCB0byBib3VuZCBmb3JtYXR0ZWQgbm9k
ZXMgYW5kIGVhY2ggbm9kZSBpcyBpbmRleGVkIHdpdGhpbgorICAgZmFrZSBpbm9kZSBieSBpdHMg
YmxvY2sgbnVtYmVyLiBJZiBibG9jayBzaXplIG9mIHNtYWxsZXIgdGhhbiBwYWdlIHNpemUsIGl0
CisgICBtYXkgc28gaGFwcGVuIHRoYXQgYmxvY2sgbWFwcGVkIHRvIHRoZSBwYWdlIHdpdGggZm9y
bWF0dGVkIG5vZGUgaXMgb2NjdXBpZWQKKyAgIGJ5IHVuZm9ybWF0dGVkIG5vZGUgb3IgaXMgdW5h
bGxvY2F0ZWQuIFRoaXMgbGVhZCB0byBzb21lIGNvbXBsaWNhdGlvbnMsCisgICBiZWNhdXNlIGZs
dXNoaW5nIHdob2xlIHBhZ2UgY2FuIGxlYWQgdG8gYW4gaW5jb3JyZWN0IG92ZXJ3cml0ZSBvZgor
ICAgdW5mb3JtYXR0ZWQgbm9kZSB0aGF0IGlzIG1vcmVvdmVyLCBjYW4gYmUgY2FjaGVkIGluIHNv
bWUgb3RoZXIgcGxhY2UgYXMKKyAgIHBhcnQgb2YgdGhlIGZpbGUgYm9keS4gVG8gYXZvaWQgdGhp
cywgYnVmZmVycyBmb3IgdW5mb3JtYXR0ZWQgbm9kZXMgYXJlCisgICBuZXZlciBtYXJrZWQgZGly
dHkuIEFsc28gcGFnZXMgaW4gdGhlIGZha2UgYXJlIG5ldmVyIG1hcmtlZCBkaXJ0eS4gVGhpcwor
ICAgcnVsZXMgb3V0IHVzYWdlIG9mIC0+d3JpdGVwYWdlKCkgYXMgbWVtb3J5IHByZXNzdXJlIGhv
b2suIEluIHN0ZWFkCisgICAtPnJlbGVhc2VwYWdlKCkgaXMgdXNlZC4KKworICAgSm9zaCBpcyBj
b25jZXJuZWQgdGhhdCBwYWdlLT5idWZmZXIgaXMgZ29pbmcgdG8gZGllLiBUaGlzIHNob3VsZCBu
b3QgcG9zZQorICAgc2lnbmlmaWNhbnQgcHJvYmxlbSB0aG91Z2gsIGJlY2F1c2Ugd2UgbmVlZCB0
byBhZGQgc29tZSBkYXRhIHN0cnVjdHVyZXMgdG8KKyAgIHRoZSBwYWdlIGFueXdheSAoam5vZGUp
IGFuZCBhbGwgbmVjZXNzYXJ5IGJvb2sga2VlcGluZyBjYW4gYmUgcHV0IHRoZXJlLgorCisqLwor
CisvKiBMaWZlIGN5Y2xlIG9mIHBhZ2VzL25vZGVzLgorCisgICBqbm9kZSBjb250YWlucyByZWZl
cmVuY2UgdG8gcGFnZSBhbmQgcGFnZSBjb250YWlucyByZWZlcmVuY2UgYmFjayB0bworICAgam5v
ZGUuIFRoaXMgcmVmZXJlbmNlIGlzIGNvdW50ZWQgaW4gcGFnZSAtPmNvdW50LiBUaHVzLCBwYWdl
IGJvdW5kIHRvIGpub2RlCisgICBjYW5ub3QgYmUgcmVsZWFzZWQgYmFjayBpbnRvIGZyZWUgcG9v
bC4KKworICAgIDEuIEZvcm1hdHRlZCBub2Rlcy4KKworICAgICAgMS4gZm9ybWF0dGVkIG5vZGUg
aXMgcmVwcmVzZW50ZWQgYnkgem5vZGUuIFdoZW4gbmV3IHpub2RlIGlzIGNyZWF0ZWQgaXRzCisg
ICAgICAtPnBnIHBvaW50ZXIgaXMgTlVMTCBpbml0aWFsbHkuCisKKyAgICAgIDIuIHdoZW4gbm9k
ZSBjb250ZW50IGlzIGxvYWRlZCBpbnRvIHpub2RlIChieSBjYWxsIHRvIHpsb2FkKCkpIGZvciB0
aGUKKyAgICAgIGZpcnN0IHRpbWUgZm9sbG93aW5nIGhhcHBlbnMgKGluIGNhbGwgdG8gLT5yZWFk
X25vZGUoKSBvcgorICAgICAgLT5hbGxvY2F0ZV9ub2RlKCkpOgorCisJMS4gbmV3IHBhZ2UgaXMg
YWRkZWQgdG8gdGhlIHBhZ2UgY2FjaGUuCisKKwkyLiB0aGlzIHBhZ2UgaXMgYXR0YWNoZWQgdG8g
em5vZGUgYW5kIGl0cyAtPmNvdW50IGlzIGluY3JlYXNlZC4KKworCTMuIHBhZ2UgaXMga21hcHBl
ZC4KKworICAgICAgMy4gaWYgbW9yZSBjYWxscyB0byB6bG9hZCgpIGZvbGxvdyAod2l0aG91dCBj
b3JyZXNwb25kaW5nIHpyZWxzZXMpLCBwYWdlCisgICAgICBjb3VudGVyIGlzIGxlZnQgaW50YWN0
IGFuZCBpbiBpdHMgc3RlYWQgLT5kX2NvdW50IGlzIGluY3JlYXNlZCBpbiB6bm9kZS4KKworICAg
ICAgNC4gZWFjaCBjYWxsIHRvIHpyZWxzZSBkZWNyZWFzZXMgLT5kX2NvdW50LiBXaGVuIC0+ZF9j
b3VudCBkcm9wcyB0byB6ZXJvCisgICAgICAtPnJlbGVhc2Vfbm9kZSgpIGlzIGNhbGxlZCBhbmQg
cGFnZSBpcyBrdW5tYXBwZWQgYXMgcmVzdWx0LgorCisgICAgICA1LiBhdCBzb21lIG1vbWVudCBu
b2RlIGNhbiBiZSBjYXB0dXJlZCBieSBhIHRyYW5zYWN0aW9uLiBJdHMgLT54X2NvdW50CisgICAg
ICBpcyB0aGVuIGluY3JlYXNlZCBieSB0cmFuc2FjdGlvbiBtYW5hZ2VyLgorCisgICAgICA2LiBp
ZiBub2RlIGlzIHJlbW92ZWQgZnJvbSB0aGUgdHJlZSAoZW1wdHkgbm9kZSB3aXRoIEpOT0RFX0hF
QVJEX0JBTlNIRUUKKyAgICAgIGJpdCBzZXQpIGZvbGxvd2luZyB3aWxsIGhhcHBlbiAoYWxzbyBz
ZWUgY29tbWVudCBhdCB0aGUgdG9wIG9mIHpub2RlLmMpOgorCisJMS4gd2hlbiBsYXN0IGxvY2sg
aXMgcmVsZWFzZWQsIG5vZGUgd2lsbCBiZSB1bmNhcHR1cmVkIGZyb20KKwl0cmFuc2FjdGlvbi4g
VGhpcyByZWxlYXNlZCByZWZlcmVuY2UgdGhhdCB0cmFuc2FjdGlvbiBtYW5hZ2VyIGFjcXVpcmVk
CisJYXQgdGhlIHN0ZXAgNS4KKworCTIuIHdoZW4gbGFzdCByZWZlcmVuY2UgaXMgcmVsZWFzZWQs
IHpwdXQoKSBkZXRlY3RzIHRoYXQgbm9kZSBpcworCWFjdHVhbGx5IGRlbGV0ZWQgYW5kIGNhbGxz
IC0+ZGVsZXRlX25vZGUoKQorCW9wZXJhdGlvbi4gcGFnZV9jYWNoZV9kZWxldGVfbm9kZSgpIGlt
cGxlbWVudGF0aW9uIGRldGFjaGVzIGpub2RlIGZyb20KKwlwYWdlIGFuZCByZWxlYXNlcyBwYWdl
LgorCisgICAgICA3LiBvdGhlcndpc2UgKG5vZGUgd2Fzbid0IHJlbW92ZWQgZnJvbSB0aGUgdHJl
ZSksIGxhc3QgcmVmZXJlbmNlIHRvCisgICAgICB6bm9kZSB3aWxsIGJlIHJlbGVhc2VkIGFmdGVy
IHRyYW5zYWN0aW9uIG1hbmFnZXIgY29tbWl0dGVkIHRyYW5zYWN0aW9uCisgICAgICBub2RlIHdh
cyBpbi4gVGhpcyBpbXBsaWVzIHNxdWFsbG9jaW5nIG9mIHRoaXMgbm9kZSAoc2VlCisgICAgICBm
bHVzaC5jKS4gTm90aGluZyBzcGVjaWFsIGhhcHBlbnMgYXQgdGhpcyBwb2ludC4gWm5vZGUgaXMg
c3RpbGwgaW4gdGhlCisgICAgICBoYXNoIHRhYmxlIGFuZCBwYWdlIGlzIHN0aWxsIGF0dGFjaGVk
IHRvIGl0LgorCisgICAgICA4LiB6bm9kZSBpcyBhY3R1YWxseSByZW1vdmVkIGZyb20gdGhlIG1l
bW9yeSBiZWNhdXNlIG9mIHRoZSBtZW1vcnkKKyAgICAgIHByZXNzdXJlLCBvciBkdXJpbmcgdW1v
dW50ICh6bm9kZXNfdHJlZV9kb25lKCkpLiBBbnl3YXksIHpub2RlIGlzCisgICAgICByZW1vdmVk
IGJ5IHRoZSBjYWxsIHRvIHpkcm9wKCkuIEF0IHRoaXMgbW9tZW50LCBwYWdlIGlzIGRldGFjaGVk
IGZyb20KKyAgICAgIHpub2RlIGFuZCByZW1vdmVkIGZyb20gdGhlIGlub2RlIGFkZHJlc3Mgc3Bh
Y2UuCisKKyovCisKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUgImRmb3JtYXQuaCIKKyNp
bmNsdWRlICJrZXkuaCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNpbmNsdWRlICJqbm9kZS5oIgor
I2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVkZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0
cmVlLmgiCisjaW5jbHVkZSAidmZzX29wcy5oIgorI2luY2x1ZGUgImlub2RlLmgiCisjaW5jbHVk
ZSAic3VwZXIuaCIKKyNpbmNsdWRlICJlbnRkLmgiCisjaW5jbHVkZSAicGFnZV9jYWNoZS5oIgor
I2luY2x1ZGUgImt0eG5tZ3JkLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1
ZGUgPGxpbnV4L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvbW0uaD4JCS8qIGZvciBzdHJ1Y3QgcGFn
ZSAqLworI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4JCS8qIGZvciBzdHJ1Y3QgcGFnZSAqLworI2lu
Y2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KKyNpbmNsdWRlIDxsaW51eC9iaW8uaD4KKyNpbmNsdWRl
IDxsaW51eC93cml0ZWJhY2suaD4KKyNpbmNsdWRlIDxsaW51eC9ibGtkZXYuaD4KKworc3RhdGlj
IHN0cnVjdCBiaW8gKnBhZ2VfYmlvKHN0cnVjdCBwYWdlICosIGpub2RlICogLCBpbnQgcncsIGdm
cF90IGdmcCk7CisKK3N0YXRpYyBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25zIGZvcm1h
dHRlZF9mYWtlX2FzX29wczsKKworc3RhdGljIGNvbnN0IG9pZF90IGZha2VfaW5vID0gMHgxOwor
c3RhdGljIGNvbnN0IG9pZF90IGJpdG1hcF9pbm8gPSAweDI7CitzdGF0aWMgY29uc3Qgb2lkX3Qg
Y2NfaW5vID0gMHgzOworCitzdGF0aWMgdm9pZAoraW5pdF9mYWtlX2lub2RlKHN0cnVjdCBzdXBl
cl9ibG9jayAqc3VwZXIsIHN0cnVjdCBpbm9kZSAqZmFrZSwKKwkJc3RydWN0IGlub2RlICoqcGZh
a2UpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjE2OCIsIGZha2UtPmlfc3RhdGUgJiBJX05FVyk7CisJ
ZmFrZS0+aV9tYXBwaW5nLT5hX29wcyA9ICZmb3JtYXR0ZWRfZmFrZV9hc19vcHM7CisJaW5vZGVf
YXR0YWNoX3diKGZha2UsIE5VTEwpOworCSpwZmFrZSA9IGZha2U7CisJLyogTk9URS1OSUtJVEEg
c29tZXRoaW5nIGVsc2U/ICovCisJdW5sb2NrX25ld19pbm9kZShmYWtlKTsKK30KKworLyoqCisg
KiByZWlzZXI0X2luaXRfZm9ybWF0dGVkX2Zha2UgLSBpZ2V0IGlub2RlcyBmb3IgZm9ybWF0dGVk
IG5vZGVzIGFuZCBiaXRtYXBzCisgKiBAc3VwZXI6IHN1cGVyIGJsb2NrIHRvIGluaXQgZmFrZSBp
bm9kZSBmb3IKKyAqCisgKiBJbml0aWFsaXplcyBmYWtlIGlub2RlIHRvIHdoaWNoIGZvcm1hdHRl
ZCBub2RlcyBhcmUgYm91bmQgaW4gdGhlIHBhZ2UgY2FjaGUKKyAqIGFuZCBpbm9kZSBmb3IgYml0
bWFwcy4KKyAqLworaW50IHJlaXNlcjRfaW5pdF9mb3JtYXR0ZWRfZmFrZShzdHJ1Y3Qgc3VwZXJf
YmxvY2sgKnN1cGVyKQoreworCXN0cnVjdCBpbm9kZSAqZmFrZTsKKwlzdHJ1Y3QgaW5vZGUgKmJp
dG1hcDsKKwlzdHJ1Y3QgaW5vZGUgKmNjOworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzaW5m
bzsKKworCWFzc2VydCgibmlraXRhLTE3MDMiLCBzdXBlciAhPSBOVUxMKTsKKworCXNpbmZvID0g
Z2V0X3N1cGVyX3ByaXZhdGVfbm9jaGVjayhzdXBlcik7CisJZmFrZSA9IGlnZXRfbG9ja2VkKHN1
cGVyLCBvaWRfdG9faW5vKGZha2VfaW5vKSk7CisKKwlpZiAoZmFrZSAhPSBOVUxMKSB7CisJCWlu
aXRfZmFrZV9pbm9kZShzdXBlciwgZmFrZSwgJnNpbmZvLT5mYWtlKTsKKworCQliaXRtYXAgPSBp
Z2V0X2xvY2tlZChzdXBlciwgb2lkX3RvX2lubyhiaXRtYXBfaW5vKSk7CisJCWlmIChiaXRtYXAg
IT0gTlVMTCkgeworCQkJaW5pdF9mYWtlX2lub2RlKHN1cGVyLCBiaXRtYXAsICZzaW5mby0+Yml0
bWFwKTsKKworCQkJY2MgPSBpZ2V0X2xvY2tlZChzdXBlciwgb2lkX3RvX2lubyhjY19pbm8pKTsK
KwkJCWlmIChjYyAhPSBOVUxMKSB7CisJCQkJaW5pdF9mYWtlX2lub2RlKHN1cGVyLCBjYywgJnNp
bmZvLT5jYyk7CisJCQkJcmV0dXJuIDA7CisJCQl9IGVsc2UgeworCQkJCWlwdXQoc2luZm8tPmZh
a2UpOworCQkJCWlwdXQoc2luZm8tPmJpdG1hcCk7CisJCQkJc2luZm8tPmZha2UgPSBOVUxMOwor
CQkJCXNpbmZvLT5iaXRtYXAgPSBOVUxMOworCQkJfQorCQl9IGVsc2UgeworCQkJaXB1dChzaW5m
by0+ZmFrZSk7CisJCQlzaW5mby0+ZmFrZSA9IE5VTEw7CisJCX0KKwl9CisJcmV0dXJuIFJFVEVS
UigtRU5PTUVNKTsKK30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfZm9ybWF0dGVkX2Zha2UgLSBy
ZWxlYXNlIGlub2RlIHVzZWQgYnkgZm9ybWF0dGVkIG5vZGVzIGFuZCBiaXRtYXBzCisgKiBAc3Vw
ZXI6IHN1cGVyIGJsb2NrIHRvIGluaXQgZmFrZSBpbm9kZSBmb3IKKyAqCisgKiBSZWxlYXNlcyBp
bm9kZXMgd2hpY2ggd2VyZSB1c2VkIGFzIGFkZHJlc3Mgc3BhY2VzIG9mIGJpdG1hcCBhbmQgZm9y
bWF0dGVkCisgKiBub2Rlcy4KKyAqLwordm9pZCByZWlzZXI0X2RvbmVfZm9ybWF0dGVkX2Zha2Uo
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAq
c2luZm87CisKKwlzaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlX25vY2hlY2soc3VwZXIpOworCisJ
aWYgKHNpbmZvLT5mYWtlICE9IE5VTEwpIHsKKwkJaXB1dChzaW5mby0+ZmFrZSk7CisJCXNpbmZv
LT5mYWtlID0gTlVMTDsKKwl9CisKKwlpZiAoc2luZm8tPmJpdG1hcCAhPSBOVUxMKSB7CisJCWlw
dXQoc2luZm8tPmJpdG1hcCk7CisJCXNpbmZvLT5iaXRtYXAgPSBOVUxMOworCX0KKworCWlmIChz
aW5mby0+Y2MgIT0gTlVMTCkgeworCQlpcHV0KHNpbmZvLT5jYyk7CisJCXNpbmZvLT5jYyA9IE5V
TEw7CisJfQorCXJldHVybjsKK30KKwordm9pZCByZWlzZXI0X3dhaXRfcGFnZV93cml0ZWJhY2so
c3RydWN0IHBhZ2UgKnBhZ2UpCit7CisJYXNzZXJ0KCJ6YW0tNzgzIiwgUGFnZUxvY2tlZChwYWdl
KSk7CisKKwlkbyB7CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQl3YWl0X29uX3BhZ2Vfd3JpdGVi
YWNrKHBhZ2UpOworCQlsb2NrX3BhZ2UocGFnZSk7CisJfSB3aGlsZSAoUGFnZVdyaXRlYmFjayhw
YWdlKSk7Cit9CisKKy8qIHJldHVybiB0cmVlIEBwYWdlIGlzIGluICovCityZWlzZXI0X3RyZWUg
KnJlaXNlcjRfdHJlZV9ieV9wYWdlKGNvbnN0IHN0cnVjdCBwYWdlICpwYWdlLyogcGFnZSB0byBx
dWVyeSAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS0yNDYxIiwgcGFnZSAhPSBOVUxMKTsKKwlyZXR1
cm4gJmdldF9zdXBlcl9wcml2YXRlKHBhZ2UtPm1hcHBpbmctPmhvc3QtPmlfc2IpLT50cmVlOwor
fQorCisvKiBjb21wbGV0aW9uIGhhbmRsZXIgZm9yIHNpbmdsZSBwYWdlIGJpby1iYXNlZCByZWFk
LgorCisgICBtcGFnZV9lbmRfaW9fcmVhZCgpIHdvdWxkIGFsc28gZG8uIEJ1dCBpdCdzIHN0YXRp
Yy4KKworKi8KK3N0YXRpYyB2b2lkIGVuZF9iaW9fc2luZ2xlX3BhZ2VfcmVhZChzdHJ1Y3QgYmlv
ICpiaW8pCit7CisJc3RydWN0IHBhZ2UgKnBhZ2U7CisKKwlwYWdlID0gYmlvLT5iaV9pb192ZWNb
MF0uYnZfcGFnZTsKKworCWlmICghYmlvLT5iaV9zdGF0dXMpCisJCVNldFBhZ2VVcHRvZGF0ZShw
YWdlKTsKKwllbHNlIHsKKwkJQ2xlYXJQYWdlVXB0b2RhdGUocGFnZSk7CisJCVNldFBhZ2VFcnJv
cihwYWdlKTsKKwl9CisJdW5sb2NrX3BhZ2UocGFnZSk7CisJYmlvX3B1dChiaW8pOworfQorCisv
KiBjb21wbGV0aW9uIGhhbmRsZXIgZm9yIHNpbmdsZSBwYWdlIGJpby1iYXNlZCB3cml0ZS4KKwor
ICAgbXBhZ2VfZW5kX2lvX3dyaXRlKCkgd291bGQgYWxzbyBkby4gQnV0IGl0J3Mgc3RhdGljLgor
CisqLworc3RhdGljIHZvaWQgZW5kX2Jpb19zaW5nbGVfcGFnZV93cml0ZShzdHJ1Y3QgYmlvICpi
aW8pCit7CisJc3RydWN0IHBhZ2UgKnBhZ2U7CisKKwlwYWdlID0gYmlvLT5iaV9pb192ZWNbMF0u
YnZfcGFnZTsKKworCWlmIChiaW8tPmJpX3N0YXR1cykKKwkJU2V0UGFnZUVycm9yKHBhZ2UpOwor
CWVuZF9wYWdlX3dyaXRlYmFjayhwYWdlKTsKKwliaW9fcHV0KGJpbyk7Cit9CisKKy8qIC0+cmVh
ZHBhZ2UoKSBtZXRob2QgZm9yIGZvcm1hdHRlZCBub2RlcyAqLworc3RhdGljIGludCBmb3JtYXR0
ZWRfcmVhZHBhZ2Uoc3RydWN0IGZpbGUgKmYgVU5VU0VEX0FSRywKKwkJCSAgICAgIHN0cnVjdCBw
YWdlICpwYWdlLyogcGFnZSB0byByZWFkICovKQoreworCWFzc2VydCgibmlraXRhLTI0MTIiLCBQ
YWdlUHJpdmF0ZShwYWdlKSAmJiBqcHJpdmF0ZShwYWdlKSk7CisJcmV0dXJuIHJlaXNlcjRfcGFn
ZV9pbyhwYWdlLCBqcHJpdmF0ZShwYWdlKSwgUkVBRCwKKwkJCSAgICAgICByZWlzZXI0X2N0eF9n
ZnBfbWFza19nZXQoKSk7Cit9CisKKy8qKgorICogcmVpc2VyNF9wYWdlX2lvIC0gc3VibWl0IHNp
bmdsZS1wYWdlIGJpbyByZXF1ZXN0CisgKiBAcGFnZTogcGFnZSB0byBwZXJmb3JtIGlvIGZvcgor
ICogQG5vZGU6IGpub2RlIG9mIHBhZ2UKKyAqIEBydzogcmVhZCBvciB3cml0ZQorICogQGdmcDog
Z2ZwIG1hc2sgZm9yIGJpbyBhbGxvY2F0aW9uCisgKgorICogU3VibWl0cyBzaW5nbGUgcGFnZSBy
ZWFkIG9yIHdyaXRlLgorICovCitpbnQgcmVpc2VyNF9wYWdlX2lvKHN0cnVjdCBwYWdlICpwYWdl
LCBqbm9kZSAqbm9kZSwgaW50IHJ3LCBnZnBfdCBnZnApCit7CisJc3RydWN0IGJpbyAqYmlvOwor
CWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yMDk0IiwgcGFnZSAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS0yMjI2IiwgUGFnZUxvY2tlZChwYWdlKSk7CisJYXNzZXJ0KCJuaWtpdGEt
MjYzNCIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjg5MyIsIHJ3ID09IFJFQUQg
fHwgcncgPT0gV1JJVEUpOworCisJaWYgKHJ3KSB7CisJCWlmICh1bmxpa2VseShJU19SRE9OTFko
cGFnZS0+bWFwcGluZy0+aG9zdCkpKSB7CisJCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJCXJldHVy
biAwOworCQl9CisJfQorCisJYmlvID0gcGFnZV9iaW8ocGFnZSwgbm9kZSwgcncsIGdmcCk7CisJ
aWYgKCFJU19FUlIoYmlvKSkgeworCQlpZiAocncgPT0gV1JJVEUpIHsKKwkJCXNldF9wYWdlX3dy
aXRlYmFjayhwYWdlKTsKKwkJCXVubG9ja19wYWdlKHBhZ2UpOworCQl9CisJCWJpb19zZXRfb3Bf
YXR0cnMoYmlvLCBydywgMCk7CisJCXN1Ym1pdF9iaW8oYmlvKTsKKwkJcmVzdWx0ID0gMDsKKwl9
IGVsc2UgeworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmVzdWx0ID0gUFRSX0VSUihiaW8pOwor
CX0KKworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGhlbHBlciBmdW5jdGlvbiB0byBjb25zdHJ1
Y3QgYmlvIGZvciBwYWdlICovCitzdGF0aWMgc3RydWN0IGJpbyAqcGFnZV9iaW8oc3RydWN0IHBh
Z2UgKnBhZ2UsIGpub2RlICogbm9kZSwgaW50IHJ3LCBnZnBfdCBnZnApCit7CisJc3RydWN0IGJp
byAqYmlvOworCWFzc2VydCgibmlraXRhLTIwOTIiLCBwYWdlICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTI2MzMiLCBub2RlICE9IE5VTEwpOworCisJLyogU2ltcGxlIGltcGxlbWVudGF0aW9u
IGluIHRoZSBhc3N1bXB0aW9uIHRoYXQgYmxvY2tzaXplID09IHBhZ2VzaXplLgorCisJICAgV2Ug
b25seSBoYXZlIHRvIHN1Ym1pdCBvbmUgYmxvY2ssIGJ1dCBzdWJtaXRfYmgoKSB3aWxsIGFsbG9j
YXRlIGJpbworCSAgIGFueXdheSwgc28gbGV0cyB1c2UgYWxsIHRoZSBiZWxscy1hbmQtd2hpc3Rs
ZXMgb2YgYmlvIGNvZGUuCisJICovCisKKwliaW8gPSBiaW9fYWxsb2MoZ2ZwLCAxKTsKKwlpZiAo
YmlvICE9IE5VTEwpIHsKKwkJaW50IGJsa3N6OworCQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVy
OworCQlyZWlzZXI0X2Jsb2NrX25yIGJsb2NrbnI7CisKKwkJc3VwZXIgPSBwYWdlLT5tYXBwaW5n
LT5ob3N0LT5pX3NiOworCQlhc3NlcnQoIm5pa2l0YS0yMDI5Iiwgc3VwZXIgIT0gTlVMTCk7CisJ
CWJsa3N6ID0gc3VwZXItPnNfYmxvY2tzaXplOworCQlhc3NlcnQoIm5pa2l0YS0yMDI4IiwgYmxr
c3ogPT0gKGludClQQUdFX1NJWkUpOworCisJCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwkJYmxv
Y2tuciA9ICpqbm9kZV9nZXRfaW9fYmxvY2sobm9kZSk7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5v
ZGUpOworCisJCWFzc2VydCgibmlraXRhLTIyNzUiLCBibG9ja25yICE9IChyZWlzZXI0X2Jsb2Nr
X25yKSAwKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMjI3NiIsICFyZWlzZXI0X2Jsb2NrbnJfaXNfZmFr
ZSgmYmxvY2tucikpOworCisJCWJpb19zZXRfZGV2KGJpbywgc3VwZXItPnNfYmRldik7CisJCS8q
IGZpbGwgYmlvLT5iaV9pdGVyLmJpX3NlY3RvciBiZWZvcmUgY2FsbGluZyBiaW9fYWRkX3BhZ2Uo
KSwgYmVjYXVzZQorCQkgKiBxLT5tZXJnZV9idmVjX2ZuIG1heSB3YW50IHRvIGluc3BlY3QgaXQg
KHNlZQorCQkgKiBkcml2ZXJzL21kL2xpbmVhci5jOmxpbmVhcl9tZXJnZWFibGVfYnZlYygpIGZv
ciBleGFtcGxlLiAqLworCQliaW8tPmJpX2l0ZXIuYmlfc2VjdG9yID0gYmxvY2tuciAqIChibGtz
eiA+PiA5KTsKKworCQlpZiAoIWJpb19hZGRfcGFnZShiaW8sIHBhZ2UsIGJsa3N6LCAwKSkgewor
CQkJd2FybmluZygibmlraXRhLTM0NTIiLAorCQkJCSJTaW5nbGUgcGFnZSBiaW8gY2Fubm90IGJl
IGNvbnN0cnVjdGVkIik7CisJCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVJTlZBTCkpOworCQl9
CisKKwkJLyogYmlvIC0+IGJpX2lkeCBpcyBmaWxsZWQgYnkgYmlvX2luaXQoKSAqLworCQliaW8t
PmJpX2VuZF9pbyA9IChydyA9PSBSRUFEKSA/CisJCSAgICBlbmRfYmlvX3NpbmdsZV9wYWdlX3Jl
YWQgOiBlbmRfYmlvX3NpbmdsZV9wYWdlX3dyaXRlOworCisJCXJldHVybiBiaW87CisJfSBlbHNl
CisJCXJldHVybiBFUlJfUFRSKFJFVEVSUigtRU5PTUVNKSk7Cit9CisKKyNpZiAwCitzdGF0aWMg
aW50IGNhbl9oaXRfZW50ZChyZWlzZXI0X2NvbnRleHQgKmN0eCwgc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzKQoreworCWlmIChjdHggPT0gTlVMTCB8fCAoKHVuc2lnbmVkIGxvbmcpY3R4LT5tYWdpYykg
IT0gY29udGV4dF9tYWdpYykKKwkJcmV0dXJuIDE7CisJaWYgKGN0eC0+c3VwZXIgIT0gcykKKwkJ
cmV0dXJuIDE7CisJaWYgKGdldF9zdXBlcl9wcml2YXRlKHMpLT5lbnRkLnRzayA9PSBjdXJyZW50
KQorCQlyZXR1cm4gMDsKKwlpZiAoIWxvY2tfc3RhY2tfaXNjbGVhbigmY3R4LT5zdGFjaykpCisJ
CXJldHVybiAwOworCWlmIChjdHgtPnRyYW5zLT5hdG9tICE9IE5VTEwpCisJCXJldHVybiAwOwor
CXJldHVybiAxOworfQorI2VuZGlmCisKKy8qKgorICogcmVpc2VyNF93cml0ZXBhZ2UgLSB3cml0
ZXBhZ2Ugb2Ygc3RydWN0IGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9ucworICogQHBhZ2U6IHBhZ2Ug
dG8gd3JpdGUKKyAqIEB3YmM6CisgKgorICoKKyAqLworLyogQ29tbW9uIG1lbW9yeSBwcmVzc3Vy
ZSBub3RpZmljYXRpb24uICovCitpbnQgcmVpc2VyNF93cml0ZXBhZ2Uoc3RydWN0IHBhZ2UgKnBh
Z2UsCisJCSAgICAgIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqd2JjKQoreworCS8qCisJICog
YXNzZXJ0KCJlZHdhcmQtMTU2MiIsCisJICogY2FuX2hpdF9lbnRkKGdldF9jdXJyZW50X2NvbnRl
eHRfY2hlY2soKSwgc2IpKTsKKwkgKi8KKwlhc3NlcnQoInZzLTgyOCIsIFBhZ2VMb2NrZWQocGFn
ZSkpOworCisJcmV0dXJuIHdyaXRlX3BhZ2VfYnlfZW50KHBhZ2UsIHdiYyk7Cit9CisKKy8qIC0+
c2V0X3BhZ2VfZGlydHkoKSBtZXRob2Qgb2YgZm9ybWF0dGVkIGFkZHJlc3Nfc3BhY2UgKi8KK3N0
YXRpYyBpbnQgZm9ybWF0dGVkX3NldF9wYWdlX2RpcnR5KHN0cnVjdCBwYWdlICpwYWdlKQorewor
CWFzc2VydCgibmlraXRhLTIxNzMiLCBwYWdlICE9IE5VTEwpOworCUJVRygpOworCXJldHVybiBf
X3NldF9wYWdlX2RpcnR5X25vYnVmZmVycyhwYWdlKTsKK30KKworLyogd3JpdGVwYWdlcyBtZXRo
b2Qgb2YgYWRkcmVzcyBzcGFjZSBvcGVyYXRpb25zIGluIHJlaXNlcjQgaXMgdXNlZCB0byBpbnZv
bHZlCisgICBpbnRvIHRyYW5zYWN0aW9ucyBwYWdlcyB3aGljaCBhcmUgZGlydGllZCB2aWEgbW1h
cC4gT25seSByZWd1bGFyIGZpbGVzIGNhbgorICAgaGF2ZSBzdWNoIHBhZ2VzLiBGYWtlIGlub2Rl
IGlzIHVzZWQgdG8gYWNjZXNzIGZvcm1hdHRlZCBub2RlcyB2aWEgcGFnZQorICAgY2FjaGUuIEFz
IGZvcm1hdHRlZCBub2RlcyBjYW4gbmV2ZXIgYmUgbW1hcGVkLCBmYWtlIGlub2RlJ3Mgd3JpdGVw
YWdlcyBoYXMKKyAgIG5vdGhpbmcgdG8gZG8gKi8KK3N0YXRpYyBpbnQKK3dyaXRlcGFnZXNfZmFr
ZShzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywgc3RydWN0IHdyaXRlYmFja19jb250cm9s
ICp3YmMpCit7CisJcmV0dXJuIDA7Cit9CisKKy8qIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0aW9ucyBm
b3IgdGhlIGZha2UgaW5vZGUgKi8KK3N0YXRpYyBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVyYXRp
b25zIGZvcm1hdHRlZF9mYWtlX2FzX29wcyA9IHsKKwkvKiBQZXJmb3JtIGEgd3JpdGViYWNrIG9m
IGEgc2luZ2xlIHBhZ2UgYXMgYSBtZW1vcnktZnJlZWluZworCSAqIG9wZXJhdGlvbi4gKi8KKwku
d3JpdGVwYWdlID0gcmVpc2VyNF93cml0ZXBhZ2UsCisJLyogdGhpcyBpcyBjYWxsZWQgdG8gcmVh
ZCBmb3JtYXR0ZWQgbm9kZSAqLworCS5yZWFkcGFnZSA9IGZvcm1hdHRlZF9yZWFkcGFnZSwKKwkv
KiAtPnN5bmNfcGFnZSgpIG1ldGhvZCBvZiBmYWtlIGlub2RlIGFkZHJlc3Mgc3BhY2Ugb3BlcmF0
aW9ucy4gQ2FsbGVkCisJICAgZnJvbSB3YWl0X29uX3BhZ2UoKSBhbmQgbG9ja19wYWdlKCkuCisK
KwkgICBUaGlzIGlzIG1vc3QgYW5ub3lpbmdseSBtaXNub21lcmVkIG1ldGhvZC4gQWN0dWFsbHkg
aXQgaXMgY2FsbGVkCisJICAgZnJvbSB3YWl0X29uX3BhZ2VfYml0KCkgYW5kIGxvY2tfcGFnZSgp
IGFuZCBpdHMgcHVycG9zZSBpcyB0bworCSAgIGFjdHVhbGx5IHN0YXJ0IGlvIGJ5IGphYmJpbmcg
ZGV2aWNlIGRyaXZlcnMuCisJICAgLnN5bmNfcGFnZSA9IGJsb2NrX3N5bmNfcGFnZSwKKwkqLwor
CS8qIFdyaXRlIGJhY2sgc29tZSBkaXJ0eSBwYWdlcyBmcm9tIHRoaXMgbWFwcGluZy4gQ2FsbGVk
IGZyb20gc3luYy4KKwkgICBjYWxsZWQgZHVyaW5nIHN5bmMgKHBkZmx1c2gpICovCisJLndyaXRl
cGFnZXMgPSB3cml0ZXBhZ2VzX2Zha2UsCisJLyogU2V0IGEgcGFnZSBkaXJ0eSAqLworCS5zZXRf
cGFnZV9kaXJ0eSA9IGZvcm1hdHRlZF9zZXRfcGFnZV9kaXJ0eSwKKwkvKiB1c2VkIGZvciByZWFk
LWFoZWFkLiBOb3QgYXBwbGljYWJsZSAqLworCS5yZWFkcGFnZXMgPSBOVUxMLAorCS53cml0ZV9i
ZWdpbiA9IE5VTEwsCisJLndyaXRlX2VuZCA9IE5VTEwsCisJLmJtYXAgPSBOVUxMLAorCS8qIGNh
bGxlZCBqdXN0IGJlZm9yZSBwYWdlIGlzIGJlaW5nIGRldGFjaGVkIGZyb20gaW5vZGUgbWFwcGlu
ZyBhbmQKKwkgICByZW1vdmVkIGZyb20gbWVtb3J5LiBDYWxsZWQgb24gdHJ1bmNhdGUsIGN1dC9z
cXVlZXplLCBhbmQKKwkgICB1bW91bnQuICovCisJLmludmFsaWRhdGVwYWdlID0gcmVpc2VyNF9p
bnZhbGlkYXRlcGFnZSwKKwkvKiB0aGlzIGlzIGNhbGxlZCBieSBzaHJpbmtfY2FjaGUoKSBzbyB0
aGF0IGZpbGUgc3lzdGVtIGNhbiB0cnkgdG8KKwkgICByZWxlYXNlIG9iamVjdHMgKGpub2Rlcywg
YnVmZmVycywgam91cm5hbCBoZWFkcykgYXR0YWNoZWQgdG8gcGFnZQorCSAgIGFuZCwgbWF5IGJl
IG1hZGUgcGFnZSBpdHNlbGYgZnJlZS1hYmxlLgorCSAqLworCS5yZWxlYXNlcGFnZSA9IHJlaXNl
cjRfcmVsZWFzZXBhZ2UsCisJLmRpcmVjdF9JTyA9IE5VTEwsCisJLm1pZ3JhdGVwYWdlID0gcmVp
c2VyNF9taWdyYXRlcGFnZSwKKwkuYmF0Y2hfbG9ja190YWJ1ID0gMQorfTsKKworLyogY2FsbGVk
IGp1c3QgYmVmb3JlIHBhZ2UgaXMgcmVsZWFzZWQgKG5vIGxvbmdlciB1c2VkIGJ5IHJlaXNlcjQp
LiBDYWxsZXJzOgorICAgamRlbGV0ZSgpIGFuZCBleHRlbnQydGFpbCgpLiAqLwordm9pZCByZWlz
ZXI0X2Ryb3BfcGFnZShzdHJ1Y3QgcGFnZSAqcGFnZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMTgx
IiwgUGFnZUxvY2tlZChwYWdlKSk7CisJY2xlYXJfcGFnZV9kaXJ0eV9mb3JfaW8ocGFnZSk7CisJ
Q2xlYXJQYWdlVXB0b2RhdGUocGFnZSk7CisjaWYgZGVmaW5lZChQR19za2lwcGVkKQorCUNsZWFy
UGFnZVNraXBwZWQocGFnZSk7CisjZW5kaWYKKwl1bmxvY2tfcGFnZShwYWdlKTsKK30KKworI2Rl
ZmluZSBKTk9ERV9HQU5HX1NJWkUgKDE2KQorCisvKiBmaW5kIGFsbCBqbm9kZXMgZnJvbSByYW5n
ZSBzcGVjaWZpZWQgYW5kIGludmFsaWRhdGUgdGhlbSAqLworc3RhdGljIGludAordHJ1bmNhdGVf
am5vZGVzX3JhbmdlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHBnb2ZmX3QgZnJvbSwgcGdvZmZfdCBj
b3VudCkKK3sKKwlyZWlzZXI0X2lub2RlICppbmZvOworCWludCB0cnVuY2F0ZWRfam5vZGVzOwor
CXJlaXNlcjRfdHJlZSAqdHJlZTsKKwl1bnNpZ25lZCBsb25nIGluZGV4OworCXVuc2lnbmVkIGxv
bmcgZW5kOworCisJaWYgKGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKSA9PQorCSAgICBmaWxlX3Bs
dWdpbl9ieV9pZChDUllQVENPTVBSRVNTX0ZJTEVfUExVR0lOX0lEKSkKKwkJLyoKKwkJICogTm8g
bmVlZCB0byBnZXQgcmlkIG9mIGpub2RlcyBoZXJlOiBpZiB0aGUgc2luZ2xlIGpub2RlIG9mCisJ
CSAqIHBhZ2UgY2x1c3RlciBkaWQgbm90IGhhdmUgcGFnZSwgdGhlbiBpdCB3YXMgZm91bmQgYW5k
IGtpbGxlZAorCQkgKiBiZWZvcmUgaW4KKwkJICogdHJ1bmNhdGVfY29tcGxldGVfcGFnZV9jbHVz
dGVyKCktPmpwdXQoKS0+anB1dF9maW5hbCgpLAorCQkgKiBvdGhlcndpc2UgaXQgd2lsbCBiZSBk
cm9wcGVkIGJ5IHJlaXNlcjRfaW52YWxpZGF0ZXBhZ2UoKQorCQkgKi8KKwkJcmV0dXJuIDA7CisJ
dHJ1bmNhdGVkX2pub2RlcyA9IDA7CisKKwlpbmZvID0gcmVpc2VyNF9pbm9kZV9kYXRhKGlub2Rl
KTsKKwl0cmVlID0gcmVpc2VyNF90cmVlX2J5X2lub2RlKGlub2RlKTsKKworCWluZGV4ID0gZnJv
bTsKKwllbmQgPSBmcm9tICsgY291bnQ7CisKKwl3aGlsZSAoMSkgeworCQlqbm9kZSAqZ2FuZ1tK
Tk9ERV9HQU5HX1NJWkVdOworCQlpbnQgdGFrZW47CisJCWludCBpOworCQlqbm9kZSAqbm9kZTsK
KworCQlhc3NlcnQoIm5pa2l0YS0zNDY2IiwgaW5kZXggPD0gZW5kKTsKKworCQlyZWFkX2xvY2tf
dHJlZSh0cmVlKTsKKwkJdGFrZW4gPQorCQkgICAgcmFkaXhfdHJlZV9nYW5nX2xvb2t1cChqbm9k
ZV90cmVlX2J5X3JlaXNlcjRfaW5vZGUoaW5mbyksCisJCQkJCSAgICh2b2lkICoqKWdhbmcsIGlu
ZGV4LAorCQkJCQkgICBKTk9ERV9HQU5HX1NJWkUpOworCQlmb3IgKGkgPSAwOyBpIDwgdGFrZW47
ICsraSkgeworCQkJbm9kZSA9IGdhbmdbaV07CisJCQlpZiAoaW5kZXhfam5vZGUobm9kZSkgPCBl
bmQpCisJCQkJanJlZihub2RlKTsKKwkJCWVsc2UKKwkJCQlnYW5nW2ldID0gTlVMTDsKKwkJfQor
CQlyZWFkX3VubG9ja190cmVlKHRyZWUpOworCisJCWZvciAoaSA9IDA7IGkgPCB0YWtlbjsgKytp
KSB7CisJCQlub2RlID0gZ2FuZ1tpXTsKKwkJCWlmIChub2RlICE9IE5VTEwpIHsKKwkJCQlpbmRl
eCA9IG1heChpbmRleCwgaW5kZXhfam5vZGUobm9kZSkpOworCQkJCXNwaW5fbG9ja19qbm9kZShu
b2RlKTsKKwkJCQlhc3NlcnQoImVkd2FyZC0xNDU3Iiwgbm9kZS0+cGcgPT0gTlVMTCk7CisJCQkJ
LyogdGhpcyBpcyBhbHdheXMgY2FsbGVkIGFmdGVyCisJCQkJICAgdHJ1bmNhdGVfaW5vZGVfcGFn
ZXNfcmFuZ2UoKS4gVGhlcmVmb3JlLCBoZXJlCisJCQkJICAgam5vZGUgY2FuIG5vdCBoYXZlIHBh
Z2UuIE5ldyBwYWdlcyBjYW4gbm90IGJlCisJCQkJICAgY3JlYXRlZCBiZWNhdXNlIHRydW5jYXRl
X2pub2Rlc19yYW5nZSBnb2VzCisJCQkJICAgdW5kZXIgZXhjbHVzaXZlIGFjY2VzcyBvbiBmaWxl
IG9idGFpbmVkLAorCQkJCSAgIHdoZXJlIGFzIG5ldyBwYWdlIGNyZWF0aW9uIHJlcXVpcmVzCisJ
CQkJICAgbm9uLWV4Y2x1c2l2ZSBhY2Nlc3Mgb2J0YWluZWQgKi8KKwkJCQlKRl9TRVQobm9kZSwg
Sk5PREVfSEVBUkRfQkFOU0hFRSk7CisJCQkJcmVpc2VyNF91bmNhcHR1cmVfam5vZGUobm9kZSk7
CisJCQkJdW5oYXNoX3VuZm9ybWF0dGVkX2pub2RlKG5vZGUpOworCQkJCXRydW5jYXRlZF9qbm9k
ZXMrKzsKKwkJCQlqcHV0KG5vZGUpOworCQkJfSBlbHNlCisJCQkJYnJlYWs7CisJCX0KKwkJaWYg
KGkgIT0gdGFrZW4gfHwgdGFrZW4gPT0gMCkKKwkJCWJyZWFrOworCX0KKwlyZXR1cm4gdHJ1bmNh
dGVkX2pub2RlczsKK30KKworLyogVHJ1bmNhdGluZyBmaWxlcyBpbiByZWlzZXI0OiBwcm9ibGVt
cyBhbmQgc29sdXRpb25zLgorCisgICBWRlMgY2FsbHMgZnMncyB0cnVuY2F0ZSBhZnRlciBpdCBo
YXMgY2FsbGVkIHRydW5jYXRlX2lub2RlX3BhZ2VzKCkKKyAgIHRvIGdldCByaWQgb2YgcGFnZXMg
Y29ycmVzcG9uZGluZyB0byBwYXJ0IG9mIGZpbGUgYmVpbmcgdHJ1bmNhdGVkLgorICAgSW4gcmVp
c2VyNCBpdCBtYXkgY2F1c2UgZXhpc3RlbmNlIG9mIHVuYWxsb2NhdGVkIGV4dGVudHMgd2hpY2gg
ZG8KKyAgIG5vdCBoYXZlIGpub2Rlcy4gRmx1c2ggY29kZSBkb2VzIG5vdCBleHBlY3QgdGhhdC4g
U29sdXRpb24gb2YgdGhpcworICAgcHJvYmxlbSBpcyBzdHJhaWdodGZvcndhcmQuIEFzIHZmcydz
IHRydW5jYXRlIGlzIGltcGxlbWVudGVkIHVzaW5nCisgICBzZXRhdHRyIG9wZXJhdGlvbiwgaXQg
c2VlbXMgcmVhc29uYWJsZSB0byBoYXZlIC0+c2V0YXR0cigpIHRoYXQKKyAgIHdpbGwgY3V0IGZp
bGUgYm9keS4gSG93ZXZlciwgZmx1c2ggY29kZSBhbHNvIGRvZXMgbm90IGV4cGVjdCBkaXJ0eQor
ICAgcGFnZXMgd2l0aG91dCBwYXJlbnQgaXRlbXMsIHNvIGl0IGlzIGltcG9zc2libGUgdG8gY3V0
IGFsbCBpdGVtcywKKyAgIHRoZW4gdHJ1bmNhdGUgYWxsIHBhZ2VzIGluIHR3byBzdGVwcy4gV2Ug
cmVzb2x2ZSB0aGlzIHByb2JsZW0gYnkKKyAgIGN1dHRpbmcgaXRlbXMgb25lLWJ5LW9uZS4gRWFj
aCBzdWNoIGZpbmUtZ3JhaW5lZCBzdGVwIHBlcmZvcm1lZAorICAgdW5kZXIgbG9uZ3Rlcm0gem5v
ZGUgbG9jayBjYWxscyBhdCB0aGUgZW5kIC0+a2lsbF9ob29rKCkgbWV0aG9kIG9mCisgICBhIGtp
bGxlZCBpdGVtIHRvIHJlbW92ZSBpdHMgYmluZGVkIHBhZ2VzIGFuZCBqbm9kZXMuCisKKyAgIFRo
ZSBmb2xsb3dpbmcgZnVuY3Rpb24gaXMgYSBjb21tb24gcGFydCBvZiBtZW50aW9uZWQga2lsbCBo
b29rcy4KKyAgIEFsc28sIHRoaXMgaXMgY2FsbGVkIGJlZm9yZSB0YWlsLXRvLWV4dGVudCBjb252
ZXJzaW9uICh0byBub3QgbWFuYWdlCisgICBmZXcgY29waWVzIG9mIHRoZSBkYXRhKS4KKyovCit2
b2lkIHJlaXNlcjRfaW52YWxpZGF0ZV9wYWdlcyhzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGlu
ZywgcGdvZmZfdCBmcm9tLAorCQkJICAgICAgdW5zaWduZWQgbG9uZyBjb3VudCwgaW50IGV2ZW5f
Y293cykKK3sKKwlsb2ZmX3QgZnJvbV9ieXRlcywgY291bnRfYnl0ZXM7CisKKwlpZiAoY291bnQg
PT0gMCkKKwkJcmV0dXJuOworCWZyb21fYnl0ZXMgPSAoKGxvZmZfdCkgZnJvbSkgPDwgUEFHRV9T
SElGVDsKKwljb3VudF9ieXRlcyA9ICgobG9mZl90KSBjb3VudCkgPDwgUEFHRV9TSElGVDsKKwor
CXVubWFwX21hcHBpbmdfcmFuZ2UobWFwcGluZywgZnJvbV9ieXRlcywgY291bnRfYnl0ZXMsIGV2
ZW5fY293cyk7CisJdHJ1bmNhdGVfaW5vZGVfcGFnZXNfcmFuZ2UobWFwcGluZywgZnJvbV9ieXRl
cywKKwkJCQkgICBmcm9tX2J5dGVzICsgY291bnRfYnl0ZXMgLSAxKTsKKwl0cnVuY2F0ZV9qbm9k
ZXNfcmFuZ2UobWFwcGluZy0+aG9zdCwgZnJvbSwgY291bnQpOworfQorCisvKgorICogTG9jYWwg
dmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTog
IkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1
bW46IDEyMAorICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BhZ2VfY2FjaGUuaCBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9wYWdlX2NhY2hlLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2Zz
L3JlaXNlcjQvcGFnZV9jYWNoZS5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAw
CisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wYWdlX2NhY2hlLmgJMjAyMC0wMi0wNSAyMDo1
Mzo0MS40NTcyMjIyMDggKzAxMDAKQEAgLTAsMCArMSw2NCBAQAorLyogQ29weXJpZ2h0IDIwMDEs
IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVp
c2VyNC9SRUFETUUgKi8KKy8qIE1lbW9yeSBwcmVzc3VyZSBob29rcy4gRmFrZSBpbm9kZXMgaGFu
ZGxpbmcuIFNlZSBwYWdlX2NhY2hlLmMuICovCisKKyNpZiAhZGVmaW5lZChfX1JFSVNFUjRfUEFH
RV9DQUNIRV9IX18pCisjZGVmaW5lIF9fUkVJU0VSNF9QQUdFX0NBQ0hFX0hfXworCisjaW5jbHVk
ZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImNvbnRleHQuaCIgICAgICAgICAgICAvKiBmb3IgcmVp
c2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkgKi8KKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBm
b3Igc3RydWN0IHN1cGVyX2Jsb2NrLCBhZGRyZXNzX3NwYWNlICAqLworI2luY2x1ZGUgPGxpbnV4
L21tLmg+CQkvKiBmb3Igc3RydWN0IHBhZ2UgICovCisjaW5jbHVkZSA8bGludXgvcGFnZW1hcC5o
PgkvKiBmb3IgbG9ja19wYWdlKCkgICovCisjaW5jbHVkZSA8bGludXgvdm1hbGxvYy5oPgkvKiBm
b3IgX192bWFsbG9jKCkgICovCisKK2V4dGVybiBpbnQgcmVpc2VyNF9pbml0X2Zvcm1hdHRlZF9m
YWtlKHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9uZV9mb3Jt
YXR0ZWRfZmFrZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CisKK2V4dGVybiByZWlzZXI0X3RyZWUg
KnJlaXNlcjRfdHJlZV9ieV9wYWdlKGNvbnN0IHN0cnVjdCBwYWdlICopOworCitleHRlcm4gdm9p
ZCByZWlzZXI0X3dhaXRfcGFnZV93cml0ZWJhY2soc3RydWN0IHBhZ2UgKik7CitzdGF0aWMgaW5s
aW5lIHZvaWQgbG9ja19hbmRfd2FpdF9wYWdlX3dyaXRlYmFjayhzdHJ1Y3QgcGFnZSAqcGFnZSkK
K3sKKwlsb2NrX3BhZ2UocGFnZSk7CisJaWYgKHVubGlrZWx5KFBhZ2VXcml0ZWJhY2socGFnZSkp
KQorCQlyZWlzZXI0X3dhaXRfcGFnZV93cml0ZWJhY2socGFnZSk7Cit9CisKKyNkZWZpbmUganBy
aXZhdGUocGFnZSkgKChqbm9kZSAqKXBhZ2VfcHJpdmF0ZShwYWdlKSkKKworZXh0ZXJuIGludCBy
ZWlzZXI0X3BhZ2VfaW8oc3RydWN0IHBhZ2UgKiwgam5vZGUgKiwgaW50IHJ3LCBnZnBfdCk7Citl
eHRlcm4gdm9pZCByZWlzZXI0X2Ryb3BfcGFnZShzdHJ1Y3QgcGFnZSAqKTsKK2V4dGVybiB2b2lk
IHJlaXNlcjRfaW52YWxpZGF0ZV9wYWdlcyhzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqLCBwZ29mZl90
IGZyb20sCisJCQkJICAgICB1bnNpZ25lZCBsb25nIGNvdW50LCBpbnQgZXZlbl9jb3dzKTsKK2V4
dGVybiB2b2lkIGNhcHR1cmVfcmVpc2VyNF9pbm9kZXMoc3RydWN0IHN1cGVyX2Jsb2NrICosCisJ
CQkJICAgc3RydWN0IHdyaXRlYmFja19jb250cm9sICopOworc3RhdGljIGlubGluZSB2b2lkICpy
ZWlzZXI0X3ZtYWxsb2ModW5zaWduZWQgbG9uZyBzaXplKQoreworCXJldHVybiBfX3ZtYWxsb2Mo
c2l6ZSwKKwkJCSByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSB8IF9fR0ZQX0hJR0hNRU0sCisJ
CQkgUEFHRV9LRVJORUwpOworfQorCisjZGVmaW5lIFBBR0VDQUNIRV9UQUdfUkVJU0VSNF9NT1ZF
RCBQQUdFQ0FDSEVfVEFHX0RJUlRZCisKKyNpZiBSRUlTRVI0X0RFQlVHCitleHRlcm4gdm9pZCBw
cmludF9wYWdlKGNvbnN0IGNoYXIgKnByZWZpeCwgc3RydWN0IHBhZ2UgKnBhZ2UpOworI2Vsc2UK
KyNkZWZpbmUgcHJpbnRfcGFnZShwcmYsIHApIG5vb3AKKyNlbmRpZgorCisvKiBfX1JFSVNFUjRf
UEFHRV9DQUNIRV9IX18gKi8KKyNlbmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9j
YWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFt
ZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1j
b2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2NsdXN0ZXIu
YyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vY2x1c3Rlci5jCi0tLSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9jbHVzdGVyLmMJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jbHVzdGVy
LmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTcyMjIyMDggKzAxMDAKQEAgLTAsMCArMSw3MiBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogQ29udGFpbnMgcmVpc2VyNCBj
bHVzdGVyIHBsdWdpbnMgKHNlZQorICAgaHR0cDovL3d3dy5uYW1lc3lzLmNvbS9jcnlwdGNvbXBy
ZXNzX2Rlc2lnbi5odG1sCisgICAiQ29uY2VwdHMgb2YgY2x1c3RlcmluZyIgZm9yIGRldGFpbHMp
LiAqLworCisjaW5jbHVkZSAicGx1Z2luX2hlYWRlci5oIgorI2luY2x1ZGUgInBsdWdpbi5oIgor
I2luY2x1ZGUgIi4uL2lub2RlLmgiCisKK3N0YXRpYyBpbnQgY2hhbmdlX2NsdXN0ZXIoc3RydWN0
IGlub2RlICppbm9kZSwKKwkJCSAgcmVpc2VyNF9wbHVnaW4gKiBwbHVnaW4sCisJCQkgIHBzZXRf
bWVtYmVyIG1lbWIpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTMyNCIsIGlub2RlICE9IE5VTEwpOwor
CWFzc2VydCgiZWR3YXJkLTEzMjUiLCBwbHVnaW4gIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQt
MTMyNiIsIGlzX3JlaXNlcjRfaW5vZGUoaW5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0xMzI3Iiwg
cGx1Z2luLT5oLnR5cGVfaWQgPT0gUkVJU0VSNF9DTFVTVEVSX1BMVUdJTl9UWVBFKTsKKworCS8q
IENhbid0IGNoYW5nZSB0aGUgY2x1c3RlciBwbHVnaW4gZm9yIGFscmVhZHkgZXhpc3RlbnQgcmVn
dWxhciBmaWxlcyAqLworCWlmICghcGx1Z2luX29mX2dyb3VwKGlub2RlX2ZpbGVfcGx1Z2luKGlu
b2RlKSwgUkVJU0VSNF9ESVJFQ1RPUllfRklMRSkpCisJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7
CisKKwkvKiBJZiBtYXRjaGVzLCBub3RoaW5nIHRvIGNoYW5nZS4gKi8KKwlpZiAoaW5vZGVfaGFz
aF9wbHVnaW4oaW5vZGUpICE9IE5VTEwgJiYKKwkgICAgaW5vZGVfaGFzaF9wbHVnaW4oaW5vZGUp
LT5oLmlkID09IHBsdWdpbi0+aC5pZCkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gYXNldF9zZXRf
dW5zYWZlKCZyZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5wc2V0LAorCQkJICAgICAgIFBTRVRf
Q0xVU1RFUiwgcGx1Z2luKTsKK30KKworc3RhdGljIHJlaXNlcjRfcGx1Z2luX29wcyBjbHVzdGVy
X3BsdWdpbl9vcHMgPSB7CisJLmluaXQgPSBOVUxMLAorCS5sb2FkID0gTlVMTCwKKwkuc2F2ZV9s
ZW4gPSBOVUxMLAorCS5zYXZlID0gTlVMTCwKKwkuY2hhbmdlID0gJmNoYW5nZV9jbHVzdGVyCit9
OworCisjZGVmaW5lIFNVUFBPUlRfQ0xVU1RFUihTSElGVCwgSUQsIExBQkVMLCBERVNDKQkJCVwK
KwlbQ0xVU1RFUl8gIyMgSUQgIyMgX0lEXSA9IHsJCQkJXAorCQkuaCA9IHsJCQkJCQlcCisJCQku
dHlwZV9pZCA9IFJFSVNFUjRfQ0xVU1RFUl9QTFVHSU5fVFlQRSwJXAorCQkJLmlkID0gQ0xVU1RF
Ul8gIyMgSUQgIyMgX0lELAkJXAorCQkJLnBvcHMgPSAmY2x1c3Rlcl9wbHVnaW5fb3BzLAkJXAor
CQkJLmxhYmVsID0gTEFCRUwsCQkJCVwKKwkJCS5kZXNjID0gREVTQywJCQkJXAorCQkJLmxpbmth
Z2UgPSB7TlVMTCwgTlVMTH0JCQlcCisJCX0sCQkJCQkJXAorCQkuc2hpZnQgPSBTSElGVAkJCQkJ
XAorCX0KKworY2x1c3Rlcl9wbHVnaW4gY2x1c3Rlcl9wbHVnaW5zW0xBU1RfQ0xVU1RFUl9JRF0g
PSB7CisJU1VQUE9SVF9DTFVTVEVSKDE2LCA2NEssICI2NEsiLCAiTGFyZ2UiKSwKKwlTVVBQT1JU
X0NMVVNURVIoMTUsIDMySywgIjMySyIsICJCaWciKSwKKwlTVVBQT1JUX0NMVVNURVIoMTQsIDE2
SywgIjE2SyIsICJBdmVyYWdlIiksCisJU1VQUE9SVF9DTFVTVEVSKDEzLCA4SywgIjhLIiwgIlNt
YWxsIiksCisJU1VQUE9SVF9DTFVTVEVSKDEyLCA0SywgIjRLIiwgIk1pbmltYWwiKQorfTsKKwor
LyoKKyAgTG9jYWwgdmFyaWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICBt
b2RlLW5hbWU6ICJMQyIKKyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRoOiA4CisgIGZp
bGwtY29sdW1uOiAxMjAKKyAgc2Nyb2xsLXN0ZXA6IDEKKyAgRW5kOgorKi8KZGlmZiAtdXJOIC0t
bm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vY2x1c3Rl
ci5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jbHVzdGVyLmgKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2NsdXN0ZXIuaAkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2NsdXN0
ZXIuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1NzIyMjIwOCArMDEwMApAQCAtMCwwICsxLDQxMCBA
QAorLyogQ29weXJpZ2h0IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zl
cm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisvKiBUaGlzIGZpbGUgY29udGFpbnMgc2l6ZS9v
ZmZzZXQgdHJhbnNsYXRvcnMsIG1vZHVsYXRvcnMKKyAgIGFuZCBvdGhlciBoZWxwZXIgZnVuY3Rp
b25zLiAqLworCisjaWYgIWRlZmluZWQoX19GU19SRUlTRVI0X0NMVVNURVJfSF9fKQorI2RlZmlu
ZSBfX0ZTX1JFSVNFUjRfQ0xVU1RFUl9IX18KKworI2luY2x1ZGUgIi4uL2lub2RlLmgiCisKK3N0
YXRpYyBpbmxpbmUgaW50IGlub2RlX2NsdXN0ZXJfc2hpZnQoc3RydWN0IGlub2RlICppbm9kZSkK
K3sKKwlhc3NlcnQoImVkd2FyZC05MiIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTkzIiwgcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKSAhPSBOVUxMKTsKKworCXJldHVybiBpbm9k
ZV9jbHVzdGVyX3BsdWdpbihpbm9kZSktPnNoaWZ0OworfQorCitzdGF0aWMgaW5saW5lIHVuc2ln
bmVkIGNsdXN0ZXJfbnJwYWdlc19zaGlmdChzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVy
biBpbm9kZV9jbHVzdGVyX3NoaWZ0KGlub2RlKSAtIFBBR0VfU0hJRlQ7Cit9CisKKy8qIGNsdXN0
ZXIgc2l6ZSBpbiBwYWdlIHVuaXRzICovCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGNsdXN0ZXJf
bnJwYWdlcyhzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybiAxVSA8PCBjbHVzdGVyX25y
cGFnZXNfc2hpZnQoaW5vZGUpOworfQorCitzdGF0aWMgaW5saW5lIHNpemVfdCBpbm9kZV9jbHVz
dGVyX3NpemUoc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC05NiIsIGlu
b2RlICE9IE5VTEwpOworCisJcmV0dXJuIDFVIDw8IGlub2RlX2NsdXN0ZXJfc2hpZnQoaW5vZGUp
OworfQorCitzdGF0aWMgaW5saW5lIGNsb2ZmX3QgcGdfdG9fY2x1c3QocGdvZmZfdCBpZHgsIHN0
cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGlkeCA+PiBjbHVzdGVyX25ycGFnZXNfc2hp
ZnQoaW5vZGUpOworfQorCitzdGF0aWMgaW5saW5lIHBnb2ZmX3QgY2x1c3RfdG9fcGcoY2xvZmZf
dCBpZHgsIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGlkeCA8PCBjbHVzdGVyX25y
cGFnZXNfc2hpZnQoaW5vZGUpOworfQorCitzdGF0aWMgaW5saW5lIHBnb2ZmX3QgcGdfdG9fY2x1
c3RfdG9fcGcocGdvZmZfdCBpZHgsIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGNs
dXN0X3RvX3BnKHBnX3RvX2NsdXN0KGlkeCwgaW5vZGUpLCBpbm9kZSk7Cit9CisKK3N0YXRpYyBp
bmxpbmUgcGdvZmZfdCBvZmZfdG9fcGcobG9mZl90IG9mZikKK3sKKwlyZXR1cm4gKG9mZiA+PiBQ
QUdFX1NISUZUKTsKK30KKworc3RhdGljIGlubGluZSBsb2ZmX3QgcGdfdG9fb2ZmKHBnb2ZmX3Qg
aWR4KQoreworCXJldHVybiAoKGxvZmZfdCkgKGlkeCkgPDwgUEFHRV9TSElGVCk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgY2xvZmZfdCBvZmZfdG9fY2x1c3QobG9mZl90IG9mZiwgc3RydWN0IGlub2Rl
ICppbm9kZSkKK3sKKwlyZXR1cm4gb2ZmID4+IGlub2RlX2NsdXN0ZXJfc2hpZnQoaW5vZGUpOwor
fQorCitzdGF0aWMgaW5saW5lIGxvZmZfdCBjbHVzdF90b19vZmYoY2xvZmZfdCBpZHgsIHN0cnVj
dCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIChsb2ZmX3QpIGlkeCA8PCBpbm9kZV9jbHVzdGVy
X3NoaWZ0KGlub2RlKTsKK30KKworc3RhdGljIGlubGluZSBsb2ZmX3Qgb2ZmX3RvX2NsdXN0X3Rv
X29mZihsb2ZmX3Qgb2ZmLCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybiBjbHVzdF90
b19vZmYob2ZmX3RvX2NsdXN0KG9mZiwgaW5vZGUpLCBpbm9kZSk7Cit9CisKK3N0YXRpYyBpbmxp
bmUgcGdvZmZfdCBvZmZfdG9fY2x1c3RfdG9fcGcobG9mZl90IG9mZiwgc3RydWN0IGlub2RlICpp
bm9kZSkKK3sKKwlyZXR1cm4gY2x1c3RfdG9fcGcob2ZmX3RvX2NsdXN0KG9mZiwgaW5vZGUpLCBp
bm9kZSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgb2ZmX3RvX3Bnb2ZmKGxvZmZfdCBv
ZmYpCit7CisJcmV0dXJuIG9mZiAmIChQQUdFX1NJWkUgLSAxKTsKK30KKworc3RhdGljIGlubGlu
ZSB1bnNpZ25lZCBvZmZfdG9fY2xvZmYobG9mZl90IG9mZiwgc3RydWN0IGlub2RlICppbm9kZSkK
K3sKKwlyZXR1cm4gb2ZmICYgKChsb2ZmX3QpIChpbm9kZV9jbHVzdGVyX3NpemUoaW5vZGUpKSAt
IDEpOworfQorCitzdGF0aWMgaW5saW5lICBwZ29mZl90IG9mZnNldF9pbl9jbHVzdChzdHJ1Y3Qg
cGFnZSAqcGFnZSkKK3sKKwlhc3NlcnQoImVkd2FyZC0xNDg4IiwgcGFnZSAhPSBOVUxMKTsKKwlh
c3NlcnQoImVkd2FyZC0xNDg5IiwgcGFnZS0+bWFwcGluZyAhPSBOVUxMKTsKKworCXJldHVybiBw
YWdlX2luZGV4KHBhZ2UpICYgKChjbHVzdGVyX25ycGFnZXMocGFnZS0+bWFwcGluZy0+aG9zdCkp
IC0gMSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGZpcnN0X3BhZ2VfaW5fY2x1c3RlcihzdHJ1
Y3QgcGFnZSAqcGFnZSkKK3sKKwlyZXR1cm4gb2Zmc2V0X2luX2NsdXN0KHBhZ2UpID09IDA7Cit9
CisKK3N0YXRpYyBpbmxpbmUgaW50IGxhc3RfcGFnZV9pbl9jbHVzdGVyKHN0cnVjdCBwYWdlICpw
YWdlKQoreworCXJldHVybiBvZmZzZXRfaW5fY2x1c3QocGFnZSkgPT0KKwkJY2x1c3Rlcl9ucnBh
Z2VzKHBhZ2UtPm1hcHBpbmctPmhvc3QpIC0gMTsKK30KKworc3RhdGljIGlubGluZSB1bnNpZ25l
ZAorcGdfdG9fb2ZmX3RvX2Nsb2ZmKHVuc2lnbmVkIGxvbmcgaWR4LCBzdHJ1Y3QgaW5vZGUgKmlu
b2RlKQoreworCXJldHVybiBvZmZfdG9fY2xvZmYocGdfdG9fb2ZmKGlkeCksIGlub2RlKTsKK30K
KworLyoqKioqKioqKioqKioqKioqKioqKioqIFNpemUgdHJhbnNsYXRvcnMgKioqKioqKioqKioq
KioqKioqKioqKioqKiovCisKKy8qIFRyYW5zbGF0ZSBsaW5lYXIgc2l6ZS4KKyAqIE5ldyB1bml0
cyBhcmUgKDEgPDwgQGJsa19zaGlmdCkgdGltZXMgbGFyZ2VyLCB0aGVuIG9sZCBvbmVzLgorICog
SW4gb3RoZXIgd29yZHMsIGNhbGN1bGF0ZSBudW1iZXIgb2YgbG9naWNhbCBibG9ja3MsIG9jY3Vw
aWVkCisgKiBieSBAY291bnQgZWxlbWVudHMKKyAqLworc3RhdGljIGlubGluZSB1bnNpZ25lZCBs
b25nIHNpemVfaW5fYmxvY2tzKGxvZmZfdCBjb3VudCwgdW5zaWduZWQgYmxrYml0cykKK3sKKwly
ZXR1cm4gKGNvdW50ICsgKDFVTCA8PCBibGtiaXRzKSAtIDEpID4+IGJsa2JpdHM7Cit9CisKKy8q
IHNpemUgaW4gcGFnZXMgKi8KK3N0YXRpYyBpbmxpbmUgcGdvZmZfdCBzaXplX2luX3BhZ2VzKGxv
ZmZfdCBzaXplKQoreworCXJldHVybiBzaXplX2luX2Jsb2NrcyhzaXplLCBQQUdFX1NISUZUKTsK
K30KKworLyogc2l6ZSBpbiBsb2dpY2FsIGNsdXN0ZXJzICovCitzdGF0aWMgaW5saW5lIGNsb2Zm
X3Qgc2l6ZV9pbl9sYyhsb2ZmX3Qgc2l6ZSwgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZXR1
cm4gc2l6ZV9pbl9ibG9ja3Moc2l6ZSwgaW5vZGVfY2x1c3Rlcl9zaGlmdChpbm9kZSkpOworfQor
CisvKiBzaXplIGluIHBhZ2VzIHRvIHRoZSBzaXplIGluIHBhZ2UgY2x1c3RlcnMgKi8KK3N0YXRp
YyBpbmxpbmUgY2xvZmZfdCBzcF90b19zcGNsKHBnb2ZmX3Qgc2l6ZSwgc3RydWN0IGlub2RlICpp
bm9kZSkKK3sKKwlyZXR1cm4gc2l6ZV9pbl9ibG9ja3Moc2l6ZSwgY2x1c3Rlcl9ucnBhZ2VzX3No
aWZ0KGlub2RlKSk7Cit9CisKKy8qKioqKioqKioqKioqKioqKioqKioqKiBTaXplIG1vZHVsYXRv
cnMgKioqKioqKioqKioqKioqKioqKioqKioqKioqLworCisvKgorICBNb2R1bGF0ZSBsaW5lYXIg
c2l6ZSBieSBub21pbmF0ZWQgYmxvY2sgc2l6ZSBhbmQgb2Zmc2V0LgorCisgIFRoZSAiZmluaXRl
IiBmdW5jdGlvbiAod2hpY2ggaXMgemVybyBhbG1vc3QgZXZlcnl3aGVyZSkuCisgIEhvdyBtdWNo
IGlzIGEgaGVpZ2h0IG9mIHRoZSBmaWd1cmUgYXQgYSBwb3NpdGlvbiBAcG9zLAorICB3aGVuIHRy
eWluZyB0byBjb25zdHJ1Y3QgcmVjdGFuZ2xlIG9mIGhlaWdodCAoMSA8PCBAYmxrYml0cyksCisg
IGFuZCBzcXVhcmUgQHNpemUuCisKKyAgKioqKioqCisgICoqKioqKioKKyAgKioqKioqKgorICAq
KioqKioqCisgIC0tLS0tLS0tLS0+IHBvcworKi8KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgX19t
YmIobG9mZl90IHNpemUsIHVuc2lnbmVkIGxvbmcgcG9zLCBpbnQgYmxrYml0cykKK3sKKwl1bnNp
Z25lZCBlbmQgPSBzaXplID4+IGJsa2JpdHM7CisJaWYgKHBvcyA8IGVuZCkKKwkJcmV0dXJuIDFV
IDw8IGJsa2JpdHM7CisJaWYgKHVubGlrZWx5KHBvcyA+IGVuZCkpCisJCXJldHVybiAwOworCXJl
dHVybiBzaXplICYgfih+MHVsbCA8PCBibGtiaXRzKTsKK30KKworLyogdGhlIHNhbWUgYXMgYWJv
dmUsIGJ1dCBibG9jayBzaXplIGlzIHBhZ2Ugc2l6ZSAqLworc3RhdGljIGlubGluZSB1bnNpZ25l
ZCBfX21icChsb2ZmX3Qgc2l6ZSwgcGdvZmZfdCBwb3MpCit7CisJcmV0dXJuIF9fbWJiKHNpemUs
IHBvcywgUEFHRV9TSElGVCk7Cit9CisKKy8qIG51bWJlciBvZiBmaWxlJ3MgYnl0ZXMgaW4gdGhl
IG5vbWluYXRlZCBsb2dpY2FsIGNsdXN0ZXIgKi8KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgbGJ5
dGVzKGNsb2ZmX3QgaW5kZXgsIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIF9fbWJi
KGlfc2l6ZV9yZWFkKGlub2RlKSwgaW5kZXgsIGlub2RlX2NsdXN0ZXJfc2hpZnQoaW5vZGUpKTsK
K30KKworLyogbnVtYmVyIG9mIGZpbGUncyBieXRlcyBpbiB0aGUgbm9taW5hdGVkIHBhZ2UgKi8K
K3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgcGJ5dGVzKHBnb2ZmX3QgaW5kZXgsIHN0cnVjdCBpbm9k
ZSAqaW5vZGUpCit7CisJcmV0dXJuIF9fbWJwKGlfc2l6ZV9yZWFkKGlub2RlKSwgaW5kZXgpOwor
fQorCisvKioKKyAqIG51bWJlciBvZiBwYWdlcyBvY2N1cGVkIGJ5IEB3aW4tPmNvdW50IGJ5dGVz
IHN0YXJ0aW5nIGZyb20KKyAqIEB3aW4tPm9mZiBhdCBsb2dpY2FsIGNsdXN0ZXIgZGVmaW5lZCBi
eSBAd2luLiBUaGlzIGlzIGV4YWN0bHkKKyAqIGEgbnVtYmVyIG9mIHBhZ2VzIHRvIGJlIG1vZGlm
aWVkIGFuZCBkaXJ0aWVkIGluIGFueSBjbHVzdGVyIG9wZXJhdGlvbi4KKyAqLworc3RhdGljIGlu
bGluZSBwZ29mZl90IHdpbl9jb3VudF90b19ucnBhZ2VzKHN0cnVjdCByZWlzZXI0X3NsaWRlICog
d2luKQoreworCXJldHVybiAoKHdpbi0+b2ZmICsgd2luLT5jb3VudCArCisJCSAoMVVMIDw8IFBB
R0VfU0hJRlQpIC0gMSkgPj4gUEFHRV9TSElGVCkgLQorCQlvZmZfdG9fcGcod2luLT5vZmYpOwor
fQorCisvKiByZXR1cm4gdHJ1ZSwgaWYgbG9naWNhbCBjbHVzdGVyIGlzIG5vdCBvY2N1cGllZCBi
eSB0aGUgZmlsZSAqLworc3RhdGljIGlubGluZSBpbnQgbmV3X2xvZ2ljYWxfY2x1c3RlcihzdHJ1
Y3QgY2x1c3Rlcl9oYW5kbGUgKmNsdXN0LAorCQkJCSAgICAgIHN0cnVjdCBpbm9kZSAqaW5vZGUp
Cit7CisJcmV0dXJuIGNsdXN0X3RvX29mZihjbHVzdC0+aW5kZXgsIGlub2RlKSA+PSBpX3NpemVf
cmVhZChpbm9kZSk7Cit9CisKKy8qIHJldHVybiB0cnVlLCBpZiBwYWdlcyBAcDEgYW5kIEBwMiBh
cmUgb2YgdGhlIHNhbWUgcGFnZSBjbHVzdGVyICovCitzdGF0aWMgaW5saW5lIGludCBzYW1lX3Bh
Z2VfY2x1c3RlcihzdHJ1Y3QgcGFnZSAqcDEsIHN0cnVjdCBwYWdlICpwMikKK3sKKwlhc3NlcnQo
ImVkd2FyZC0xNDkwIiwgcDEgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTQ5MSIsIHAyICE9
IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTE0OTIiLCBwMS0+bWFwcGluZyAhPSBOVUxMKTsKKwlh
c3NlcnQoImVkd2FyZC0xNDkzIiwgcDItPm1hcHBpbmcgIT0gTlVMTCk7CisKKwlyZXR1cm4gKHBn
X3RvX2NsdXN0KHBhZ2VfaW5kZXgocDEpLCBwMS0+bWFwcGluZy0+aG9zdCkgPT0KKwkJcGdfdG9f
Y2x1c3QocGFnZV9pbmRleChwMiksIHAyLT5tYXBwaW5nLT5ob3N0KSk7Cit9CisKK3N0YXRpYyBp
bmxpbmUgaW50IGNsdXN0ZXJfaXNfY29tcGxldGUoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICpjbHVz
dCwKKwkJCQkgICAgICBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVybiBjbHVzdC0+dGMu
bHNpemUgPT0gaW5vZGVfY2x1c3Rlcl9zaXplKGlub2RlKTsKK30KKworc3RhdGljIGlubGluZSB2
b2lkIHJlaXNlcjRfc2xpZGVfaW5pdChzdHJ1Y3QgcmVpc2VyNF9zbGlkZSAqd2luKQoreworCWFz
c2VydCgiZWR3YXJkLTEwODQiLCB3aW4gIT0gTlVMTCk7CisJbWVtc2V0KHdpbiwgMCwgc2l6ZW9m
ICp3aW4pOworfQorCitzdGF0aWMgaW5saW5lIHRmbV9hY3Rpb24KK2NsdXN0ZXJfZ2V0X3RmbV9h
Y3Qoc3RydWN0IHRmbV9jbHVzdGVyICp0YykKK3sKKwlhc3NlcnQoImVkd2FyZC0xMzU2IiwgdGMg
IT0gTlVMTCk7CisJcmV0dXJuIHRjLT5hY3Q7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorY2x1
c3Rlcl9zZXRfdGZtX2FjdChzdHJ1Y3QgdGZtX2NsdXN0ZXIgKnRjLCB0Zm1fYWN0aW9uIGFjdCkK
K3sKKwlhc3NlcnQoImVkd2FyZC0xMzU2IiwgdGMgIT0gTlVMTCk7CisJdGMtPmFjdCA9IGFjdDsK
K30KKworc3RhdGljIGlubGluZSB2b2lkIGNsdXN0ZXJfaW5pdF9hY3Qoc3RydWN0IGNsdXN0ZXJf
aGFuZGxlICpjbHVzdCwKKwkJCQkgICAgdGZtX2FjdGlvbiBhY3QsCisJCQkJICAgIHN0cnVjdCBy
ZWlzZXI0X3NsaWRlICp3aW5kb3cpCit7CisJYXNzZXJ0KCJlZHdhcmQtODQiLCBjbHVzdCAhPSBO
VUxMKTsKKwltZW1zZXQoY2x1c3QsIDAsIHNpemVvZiAqY2x1c3QpOworCWNsdXN0ZXJfc2V0X3Rm
bV9hY3QoJmNsdXN0LT50YywgYWN0KTsKKwljbHVzdC0+ZHN0YXQgPSBJTlZBTF9ESVNLX0NMVVNU
RVI7CisJY2x1c3QtPndpbiA9IHdpbmRvdzsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGNsdXN0
ZXJfaW5pdF9yZWFkKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QsCisJCQkJICAgICBzdHJ1
Y3QgcmVpc2VyNF9zbGlkZSAqd2luZG93KQoreworCWNsdXN0ZXJfaW5pdF9hY3QoY2x1c3QsIFRG
TUFfUkVBRCwgd2luZG93KTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGNsdXN0ZXJfaW5pdF93
cml0ZShzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKmNsdXN0LAorCQkJCSAgICAgIHN0cnVjdCByZWlz
ZXI0X3NsaWRlICp3aW5kb3cpCit7CisJY2x1c3Rlcl9pbml0X2FjdChjbHVzdCwgVEZNQV9XUklU
RSwgd2luZG93KTsKK30KKworLyogdHJ1ZSBpZiBAcDEgYW5kIEBwMiBhcmUgaXRlbXMgb2YgdGhl
IHNhbWUgZGlzayBjbHVzdGVyICovCitzdGF0aWMgaW5saW5lIGludCBzYW1lX2Rpc2tfY2x1c3Rl
cihjb25zdCBjb29yZF90ICpwMSwgY29uc3QgY29vcmRfdCAqcDIpCit7CisJLyogZHJvcCB0aGlz
IGlmIHlvdSBoYXZlIG90aGVyIGl0ZW1zIHRvIGFnZ3JlZ2F0ZSAqLworCWFzc2VydCgiZWR3YXJk
LTE0OTQiLCBpdGVtX2lkX2J5X2Nvb3JkKHAxKSA9PSBDVEFJTF9JRCk7CisKKwlyZXR1cm4gaXRl
bV9wbHVnaW5fYnlfY29vcmQocDEpLT5iLm1lcmdlYWJsZShwMSwgcDIpOworfQorCitzdGF0aWMg
aW5saW5lIGludCBkY2x1c3RfZ2V0X2V4dGVuc2lvbl9kc2l6ZShoaW50X3QgKmhpbnQpCit7CisJ
cmV0dXJuIGhpbnQtPmV4dF9jb29yZC5leHRlbnNpb24uY3RhaWwuZHNpemU7Cit9CisKK3N0YXRp
YyBpbmxpbmUgdm9pZCBkY2x1c3Rfc2V0X2V4dGVuc2lvbl9kc2l6ZShoaW50X3QgKmhpbnQsIGlu
dCBkc2l6ZSkKK3sKKwloaW50LT5leHRfY29vcmQuZXh0ZW5zaW9uLmN0YWlsLmRzaXplID0gZHNp
emU7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGRjbHVzdF9nZXRfZXh0ZW5zaW9uX3NoaWZ0KGhp
bnRfdCAqaGludCkKK3sKKwlyZXR1cm4gaGludC0+ZXh0X2Nvb3JkLmV4dGVuc2lvbi5jdGFpbC5z
aGlmdDsKK30KKworc3RhdGljIGlubGluZSBpbnQgZGNsdXN0X2dldF9leHRlbnNpb25fbmNvdW50
KGhpbnRfdCAqaGludCkKK3sKKwlyZXR1cm4gaGludC0+ZXh0X2Nvb3JkLmV4dGVuc2lvbi5jdGFp
bC5uY291bnQ7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBkY2x1c3RfaW5jX2V4dGVuc2lvbl9u
Y291bnQoaGludF90ICpoaW50KQoreworCWhpbnQtPmV4dF9jb29yZC5leHRlbnNpb24uY3RhaWwu
bmNvdW50Kys7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBkY2x1c3RfaW5pdF9leHRlbnNpb24o
aGludF90ICpoaW50KQoreworCW1lbXNldCgmaGludC0+ZXh0X2Nvb3JkLmV4dGVuc2lvbi5jdGFp
bCwgMCwKKwkgICAgICAgc2l6ZW9mKGhpbnQtPmV4dF9jb29yZC5leHRlbnNpb24uY3RhaWwpKTsK
K30KKworc3RhdGljIGlubGluZSBpbnQgaGludF9pc191bnByZXBwZWRfZGNsdXN0KGhpbnRfdCAq
aGludCkKK3sKKwlhc3NlcnQoImVkd2FyZC0xNDUxIiwgaGludF9pc192YWxpZChoaW50KSk7CisJ
cmV0dXJuIGRjbHVzdF9nZXRfZXh0ZW5zaW9uX3NoaWZ0KGhpbnQpID09IChpbnQpVUNUQUlMX1NI
SUZUOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgY29vcmRfc2V0X2JldHdlZW5fY2x1c3RlcnMo
Y29vcmRfdCAqY29vcmQpCit7CisjaWYgUkVJU0VSNF9ERUJVRworCWludCByZXN1bHQ7CisJcmVz
dWx0ID0gemxvYWQoY29vcmQtPm5vZGUpOworCWFzc2VydCgiZWR3YXJkLTEyOTYiLCAhcmVzdWx0
KTsKKyNlbmRpZgorCWlmICghY29vcmRfaXNfYmV0d2Vlbl9pdGVtcyhjb29yZCkpIHsKKwkJY29v
cmQtPmJldHdlZW4gPSBBRlRFUl9JVEVNOworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCX0KKyNp
ZiBSRUlTRVI0X0RFQlVHCisJenJlbHNlKGNvb3JkLT5ub2RlKTsKKyNlbmRpZgorfQorCitpbnQg
cmVpc2VyNF9pbmZsYXRlX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICosIHN0cnVjdCBp
bm9kZSAqKTsKK2ludCBmaW5kX2Rpc2tfY2x1c3RlcihzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiwg
c3RydWN0IGlub2RlICosIGludCByZWFkLAorCQkgICAgICB6bm9kZV9sb2NrX21vZGUgbW9kZSk7
CitpbnQgY2hlY2tvdXRfbG9naWNhbF9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqLCBq
bm9kZSAqICwgc3RydWN0IGlub2RlICopOworaW50IHJlaXNlcjRfZGVmbGF0ZV9jbHVzdGVyKHN0
cnVjdCBjbHVzdGVyX2hhbmRsZSAqLCBzdHJ1Y3QgaW5vZGUgKik7Cit2b2lkIHRydW5jYXRlX2Nv
bXBsZXRlX3BhZ2VfY2x1c3RlcihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjbG9mZl90IHN0YXJ0LAor
CQkJCQkgaW50IGV2ZW5fY293cyk7Cit2b2lkIGludmFsaWRhdGVfaGludF9jbHVzdGVyKHN0cnVj
dCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QpOworaW50IGdldF9kaXNrX2NsdXN0ZXJfbG9ja2VkKHN0
cnVjdCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QsIHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCQkgICAg
em5vZGVfbG9ja19tb2RlIGxvY2tfbW9kZSk7Cit2b2lkIHJlc2V0X2NsdXN0ZXJfcGFyYW1zKHN0
cnVjdCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QpOworaW50IHNldF9jbHVzdGVyX2J5X3BhZ2Uoc3Ry
dWN0IGNsdXN0ZXJfaGFuZGxlICpjbHVzdCwgc3RydWN0IHBhZ2UgKnBhZ2UsCisJCQlpbnQgY291
bnQpOworaW50IHByZXBhcmVfcGFnZV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVj
dCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QsCisJCQkgcndfb3AgcncpOwordm9pZCBfX3B1dF9wYWdl
X2NsdXN0ZXIoaW50IGZyb20sIGludCBjb3VudCwgc3RydWN0IHBhZ2UgKipwYWdlcywKKwkJCXN0
cnVjdCBpbm9kZSAqaW5vZGUpOwordm9pZCBwdXRfcGFnZV9jbHVzdGVyKHN0cnVjdCBjbHVzdGVy
X2hhbmRsZSAqY2x1c3QsCisJCSAgICAgIHN0cnVjdCBpbm9kZSAqaW5vZGUsIHJ3X29wIHJ3KTsK
K3ZvaWQgcHV0X2NsdXN0ZXJfaGFuZGxlKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqY2x1c3QpOwor
aW50IGdyYWJfdGZtX3N0cmVhbShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgdGZtX2NsdXN0
ZXIgKnRjLAorCQkgICAgdGZtX3N0cmVhbV9pZCBpZCk7CitpbnQgdGZtX2NsdXN0ZXJfaXNfdXB0
b2RhdGUoc3RydWN0IHRmbV9jbHVzdGVyICp0Yyk7Cit2b2lkIHRmbV9jbHVzdGVyX3NldF91cHRv
ZGF0ZShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKnRjKTsKK3ZvaWQgdGZtX2NsdXN0ZXJfY2xyX3VwdG9k
YXRlKHN0cnVjdCB0Zm1fY2x1c3RlciAqdGMpOworCisvKiBtb3ZlIGNsdXN0ZXIgaGFuZGxlIHRv
IHRoZSB0YXJnZXQgcG9zaXRpb24KKyAgIHNwZWNpZmllZCBieSB0aGUgcGFnZSBvZiBpbmRleCBA
cGdpZHggKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCBtb3ZlX2NsdXN0ZXJfZm9yd2FyZChzdHJ1Y3Qg
Y2x1c3Rlcl9oYW5kbGUgKmNsdXN0LAorCQkJCQlzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJCQlw
Z29mZl90IHBnaWR4KQoreworCWFzc2VydCgiZWR3YXJkLTEyOTciLCBjbHVzdCAhPSBOVUxMKTsK
Kwlhc3NlcnQoImVkd2FyZC0xMjk4IiwgaW5vZGUgIT0gTlVMTCk7CisKKwlyZXNldF9jbHVzdGVy
X3BhcmFtcyhjbHVzdCk7CisJaWYgKGNsdXN0LT5pbmRleF92YWxpZCAmJgorCSAgICAvKiBIb2xl
IGluIHRoZSBpbmRpY2VzLiBIaW50IGJlY2FtZSBpbnZhbGlkIGFuZCBjYW4gbm90IGJlCisJICAg
ICAgIHVzZWQgYnkgZmluZF9jbHVzdGVyX2l0ZW0oKSBldmVuIGlmIHNlYWwvbm9kZSB2ZXJzaW9u
cworCSAgICAgICB3aWxsIGNvaW5jaWRlICovCisJICAgIHBnX3RvX2NsdXN0KHBnaWR4LCBpbm9k
ZSkgIT0gY2x1c3QtPmluZGV4ICsgMSkgeworCQlyZWlzZXI0X3Vuc2V0X2hpbnQoY2x1c3QtPmhp
bnQpOworCQlpbnZhbGlkYXRlX2hpbnRfY2x1c3RlcihjbHVzdCk7CisJfQorCWNsdXN0LT5pbmRl
eCA9IHBnX3RvX2NsdXN0KHBnaWR4LCBpbm9kZSk7CisJY2x1c3QtPmluZGV4X3ZhbGlkID0gMTsK
K30KKworc3RhdGljIGlubGluZSBpbnQgYWxsb2NfY2x1c3RfcGFnZXMoc3RydWN0IGNsdXN0ZXJf
aGFuZGxlICpjbHVzdCwKKwkJCQkgICAgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQo
ImVkd2FyZC03OTEiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC03OTIiLCBpbm9k
ZSAhPSBOVUxMKTsKKwljbHVzdC0+cGFnZXMgPQorCQlrbWFsbG9jKHNpemVvZigqY2x1c3QtPnBh
Z2VzKSA8PCBpbm9kZV9jbHVzdGVyX3NoaWZ0KGlub2RlKSwKKwkJCXJlaXNlcjRfY3R4X2dmcF9t
YXNrX2dldCgpKTsKKwlpZiAoIWNsdXN0LT5wYWdlcykKKwkJcmV0dXJuIC1FTk9NRU07CisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBmcmVlX2NsdXN0X3BhZ2VzKHN0cnVjdCBj
bHVzdGVyX2hhbmRsZSAqY2x1c3QpCit7CisJa2ZyZWUoY2x1c3QtPnBhZ2VzKTsKK30KKworI2Vu
ZGlmCQkJCS8qIF9fRlNfUkVJU0VSNF9DTFVTVEVSX0hfXyAqLworCisvKiBNYWtlIExpbnVzIGhh
cHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIK
KyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDog
OAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRp
ZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1
Z2luL2NvbXByZXNzL2NvbXByZXNzLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2Nv
bXByZXNzL2NvbXByZXNzLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2lu
L2NvbXByZXNzL2NvbXByZXNzLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAK
KysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jb21wcmVzcy9jb21wcmVzcy5jCTIw
MjAtMDItMDUgMjA6NTM6NDEuNDU3MjIyMjA4ICswMTAwCkBAIC0wLDAgKzEsNTIxIEBACisvKiBD
b3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVy
bmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisvKiByZWlzZXI0IGNvbXByZXNzaW9uIHRyYW5zZm9y
bSBwbHVnaW5zICovCisKKyNpbmNsdWRlICIuLi8uLi9kZWJ1Zy5oIgorI2luY2x1ZGUgIi4uLy4u
L2lub2RlLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luLmgiCisKKyNpbmNsdWRlIDxsaW51eC9sem8u
aD4KKyNpbmNsdWRlIDxsaW51eC96c3RkLmg+CisjaW5jbHVkZSA8bGludXgvemxpYi5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgvaGFyZGlycS5oPgorCitzdGF0
aWMgaW50IGNoYW5nZV9jb21wcmVzc2lvbihzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJICAgICAg
cmVpc2VyNF9wbHVnaW4gKiBwbHVnaW4sCisJCQkgICAgICBwc2V0X21lbWJlciBtZW1iKQorewor
CWFzc2VydCgiZWR3YXJkLTEzMTYiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0x
MzE3IiwgcGx1Z2luICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTEzMTgiLCBpc19yZWlzZXI0
X2lub2RlKGlub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTMxOSIsCisJICAgICAgIHBsdWdpbi0+
aC50eXBlX2lkID09IFJFSVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUpOworCisJLyogY2Fu
bm90IGNoYW5nZSBjb21wcmVzc2lvbiBwbHVnaW4gb2YgYWxyZWFkeSBleGlzdGluZyByZWd1bGFy
IG9iamVjdCAqLworCWlmICghcGx1Z2luX29mX2dyb3VwKGlub2RlX2ZpbGVfcGx1Z2luKGlub2Rl
KSwgUkVJU0VSNF9ESVJFQ1RPUllfRklMRSkpCisJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7CisK
KwkvKiBJZiBtYXRjaGVzLCBub3RoaW5nIHRvIGNoYW5nZS4gKi8KKwlpZiAoaW5vZGVfaGFzaF9w
bHVnaW4oaW5vZGUpICE9IE5VTEwgJiYKKwkgICAgaW5vZGVfaGFzaF9wbHVnaW4oaW5vZGUpLT5o
LmlkID09IHBsdWdpbi0+aC5pZCkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gYXNldF9zZXRfdW5z
YWZlKCZyZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5wc2V0LAorCQkJICAgICAgIFBTRVRfQ09N
UFJFU1NJT04sIHBsdWdpbik7Cit9CisKK3N0YXRpYyByZWlzZXI0X3BsdWdpbl9vcHMgY29tcHJl
c3Npb25fcGx1Z2luX29wcyA9IHsKKwkuaW5pdCA9IE5VTEwsCisJLmxvYWQgPSBOVUxMLAorCS5z
YXZlX2xlbiA9IE5VTEwsCisJLnNhdmUgPSBOVUxMLAorCS5jaGFuZ2UgPSAmY2hhbmdlX2NvbXBy
ZXNzaW9uCit9OworCisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworLyogICAgICAgICAgICAgICAg
ICAgICAgICAgZ3ppcDEgY29tcHJlc3Npb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgKi8KKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisKKyNkZWZpbmUgR1pJUDFfREVGX0xFVkVM
CQkgICAgICAgIFpfQkVTVF9TUEVFRAorI2RlZmluZSBHWklQMV9ERUZfV0lOQklUUwkJMTUKKyNk
ZWZpbmUgR1pJUDFfREVGX01FTUxFVkVMCQlNQVhfTUVNX0xFVkVMCisKK3N0YXRpYyBpbnQgZ3pp
cDFfaW5pdCh2b2lkKQoreworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGd6aXAxX292ZXJy
dW4odW5zaWduZWQgc3JjX2xlbiBVTlVTRURfQVJHKQoreworCXJldHVybiAwOworfQorCitzdGF0
aWMgY29hX3QgZ3ppcDFfYWxsb2ModGZtX2FjdGlvbiBhY3QpCit7CisJY29hX3QgY29hID0gTlVM
TDsKKwlpbnQgcmV0ID0gMDsKKwlzd2l0Y2ggKGFjdCkgeworCWNhc2UgVEZNQV9XUklURToJLyog
Y29tcHJlc3MgKi8KKwkJY29hID0gcmVpc2VyNF92bWFsbG9jKHpsaWJfZGVmbGF0ZV93b3Jrc3Bh
Y2VzaXplKE1BWF9XQklUUywKKwkJCQkJCQlNQVhfTUVNX0xFVkVMKSk7CisJCWlmICghY29hKSB7
CisJCQlyZXQgPSAtRU5PTUVNOworCQkJYnJlYWs7CisJCX0KKwkJYnJlYWs7CisJY2FzZSBURk1B
X1JFQUQ6CS8qIGRlY29tcHJlc3MgKi8KKwkJY29hID0gcmVpc2VyNF92bWFsbG9jKHpsaWJfaW5m
bGF0ZV93b3Jrc3BhY2VzaXplKCkpOworCQlpZiAoIWNvYSkgeworCQkJcmV0ID0gLUVOT01FTTsK
KwkJCWJyZWFrOworCQl9CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCWltcG9zc2libGUoImVkd2Fy
ZC03NjciLCAidW5rbm93biB0Zm0gYWN0aW9uIik7CisJfQorCWlmIChyZXQpCisJCXJldHVybiBF
UlJfUFRSKHJldCk7CisJcmV0dXJuIGNvYTsKK30KKworc3RhdGljIHZvaWQgZ3ppcDFfZnJlZShj
b2FfdCBjb2EsIHRmbV9hY3Rpb24gYWN0KQoreworCWFzc2VydCgiZWR3YXJkLTc2OSIsIGNvYSAh
PSBOVUxMKTsKKworCXN3aXRjaCAoYWN0KSB7CisJY2FzZSBURk1BX1dSSVRFOgkvKiBjb21wcmVz
cyAqLworCQl2ZnJlZShjb2EpOworCQlicmVhazsKKwljYXNlIFRGTUFfUkVBRDoJCS8qIGRlY29t
cHJlc3MgKi8KKwkJdmZyZWUoY29hKTsKKwkJYnJlYWs7CisJZGVmYXVsdDoKKwkJaW1wb3NzaWJs
ZSgiZWR3YXJkLTc3MCIsICJ1bmtub3duIHRmbSBhY3Rpb24iKTsKKwl9CisJcmV0dXJuOworfQor
CitzdGF0aWMgaW50IGd6aXAxX21pbl9zaXplX2RlZmxhdGUodm9pZCkKK3sKKwlyZXR1cm4gNjQ7
Cit9CisKK3N0YXRpYyB2b2lkCitnemlwMV9jb21wcmVzcyhjb2FfdCBjb2EsIF9fdTggKiBzcmNf
Zmlyc3QsIHNpemVfdCBzcmNfbGVuLAorCSAgICAgICBfX3U4ICogZHN0X2ZpcnN0LCBzaXplX3Qg
KmRzdF9sZW4pCit7CisJaW50IHJldCA9IDA7CisJc3RydWN0IHpfc3RyZWFtX3Mgc3RyZWFtOwor
CisJYXNzZXJ0KCJlZHdhcmQtODQyIiwgY29hICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTg3
NSIsIHNyY19sZW4gIT0gMCk7CisKKwlzdHJlYW0ud29ya3NwYWNlID0gY29hOworCXJldCA9IHps
aWJfZGVmbGF0ZUluaXQyKCZzdHJlYW0sIEdaSVAxX0RFRl9MRVZFTCwgWl9ERUZMQVRFRCwKKwkJ
CQktR1pJUDFfREVGX1dJTkJJVFMsIEdaSVAxX0RFRl9NRU1MRVZFTCwKKwkJCQlaX0RFRkFVTFRf
U1RSQVRFR1kpOworCWlmIChyZXQgIT0gWl9PSykgeworCQl3YXJuaW5nKCJlZHdhcmQtNzcxIiwg
InpsaWJfZGVmbGF0ZUluaXQyIHJldHVybmVkICVkXG4iLCByZXQpOworCQlnb3RvIHJvbGxiYWNr
OworCX0KKwlyZXQgPSB6bGliX2RlZmxhdGVSZXNldCgmc3RyZWFtKTsKKwlpZiAocmV0ICE9IFpf
T0spIHsKKwkJd2FybmluZygiZWR3YXJkLTc3MiIsICJ6bGliX2RlZmxhdGVSZXNldCByZXR1cm5l
ZCAlZFxuIiwgcmV0KTsKKwkJZ290byByb2xsYmFjazsKKwl9CisJc3RyZWFtLm5leHRfaW4gPSBz
cmNfZmlyc3Q7CisJc3RyZWFtLmF2YWlsX2luID0gc3JjX2xlbjsKKwlzdHJlYW0ubmV4dF9vdXQg
PSBkc3RfZmlyc3Q7CisJc3RyZWFtLmF2YWlsX291dCA9ICpkc3RfbGVuOworCisJcmV0ID0gemxp
Yl9kZWZsYXRlKCZzdHJlYW0sIFpfRklOSVNIKTsKKwlpZiAocmV0ICE9IFpfU1RSRUFNX0VORCkg
eworCQlpZiAocmV0ICE9IFpfT0spCisJCQl3YXJuaW5nKCJlZHdhcmQtNzczIiwKKwkJCQkiemxp
Yl9kZWZsYXRlIHJldHVybmVkICVkXG4iLCByZXQpOworCQlnb3RvIHJvbGxiYWNrOworCX0KKwkq
ZHN0X2xlbiA9IHN0cmVhbS50b3RhbF9vdXQ7CisJcmV0dXJuOworICAgICAgcm9sbGJhY2s6CisJ
KmRzdF9sZW4gPSBzcmNfbGVuOworCXJldHVybjsKK30KKworc3RhdGljIHZvaWQKK2d6aXAxX2Rl
Y29tcHJlc3MoY29hX3QgY29hLCBfX3U4ICogc3JjX2ZpcnN0LCBzaXplX3Qgc3JjX2xlbiwKKwkJ
IF9fdTggKiBkc3RfZmlyc3QsIHNpemVfdCAqZHN0X2xlbikKK3sKKwlpbnQgcmV0ID0gMDsKKwlz
dHJ1Y3Qgel9zdHJlYW1fcyBzdHJlYW07CisKKwlhc3NlcnQoImVkd2FyZC04NDMiLCBjb2EgIT0g
TlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtODc2Iiwgc3JjX2xlbiAhPSAwKTsKKworCXN0cmVhbS53
b3Jrc3BhY2UgPSBjb2E7CisJcmV0ID0gemxpYl9pbmZsYXRlSW5pdDIoJnN0cmVhbSwgLUdaSVAx
X0RFRl9XSU5CSVRTKTsKKwlpZiAocmV0ICE9IFpfT0spIHsKKwkJd2FybmluZygiZWR3YXJkLTc3
NCIsICJ6bGliX2luZmxhdGVJbml0MiByZXR1cm5lZCAlZFxuIiwgcmV0KTsKKwkJcmV0dXJuOwor
CX0KKwlyZXQgPSB6bGliX2luZmxhdGVSZXNldCgmc3RyZWFtKTsKKwlpZiAocmV0ICE9IFpfT0sp
IHsKKwkJd2FybmluZygiZWR3YXJkLTc3NSIsICJ6bGliX2luZmxhdGVSZXNldCByZXR1cm5lZCAl
ZFxuIiwgcmV0KTsKKwkJcmV0dXJuOworCX0KKworCXN0cmVhbS5uZXh0X2luID0gc3JjX2ZpcnN0
OworCXN0cmVhbS5hdmFpbF9pbiA9IHNyY19sZW47CisJc3RyZWFtLm5leHRfb3V0ID0gZHN0X2Zp
cnN0OworCXN0cmVhbS5hdmFpbF9vdXQgPSAqZHN0X2xlbjsKKworCXJldCA9IHpsaWJfaW5mbGF0
ZSgmc3RyZWFtLCBaX1NZTkNfRkxVU0gpOworCS8qCisJICogV29yayBhcm91bmQgYSBidWcgaW4g
emxpYiwgd2hpY2ggc29tZXRpbWVzIHdhbnRzIHRvIHRhc3RlIGFuIGV4dHJhCisJICogYnl0ZSB3
aGVuIGJlaW5nIHVzZWQgaW4gdGhlICh1bmRvY3VtZW50ZWQpIHJhdyBkZWZsYXRlIG1vZGUuCisJ
ICogKEZyb20gVVNBR0kpLgorCSAqLworCWlmIChyZXQgPT0gWl9PSyAmJiAhc3RyZWFtLmF2YWls
X2luICYmIHN0cmVhbS5hdmFpbF9vdXQpIHsKKwkJdTggemVyb3N0dWZmID0gMDsKKwkJc3RyZWFt
Lm5leHRfaW4gPSAmemVyb3N0dWZmOworCQlzdHJlYW0uYXZhaWxfaW4gPSAxOworCQlyZXQgPSB6
bGliX2luZmxhdGUoJnN0cmVhbSwgWl9GSU5JU0gpOworCX0KKwlpZiAocmV0ICE9IFpfU1RSRUFN
X0VORCkgeworCQl3YXJuaW5nKCJlZHdhcmQtNzc2IiwgInpsaWJfaW5mbGF0ZSByZXR1cm5lZCAl
ZFxuIiwgcmV0KTsKKwkJcmV0dXJuOworCX0KKwkqZHN0X2xlbiA9IHN0cmVhbS50b3RhbF9vdXQ7
CisJcmV0dXJuOworfQorCisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworLyogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgbHpvMSBjb21wcmVzc2lvbiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgKi8KKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCisKK3N0YXRpYyBpbnQgbHpvMV9pbml0
KHZvaWQpCit7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgbHpvMV9vdmVycnVuKHVuc2ln
bmVkIGluX2xlbikKK3sKKwlyZXR1cm4gaW5fbGVuIC8gMTYgKyA2NCArIDM7Cit9CisKK3N0YXRp
YyBjb2FfdCBsem8xX2FsbG9jKHRmbV9hY3Rpb24gYWN0KQoreworCWludCByZXQgPSAwOworCWNv
YV90IGNvYSA9IE5VTEw7CisKKwlzd2l0Y2ggKGFjdCkgeworCWNhc2UgVEZNQV9XUklURToJLyog
Y29tcHJlc3MgKi8KKwkJY29hID0gcmVpc2VyNF92bWFsbG9jKExaTzFYXzFfTUVNX0NPTVBSRVNT
KTsKKwkJaWYgKCFjb2EpIHsKKwkJCXJldCA9IC1FTk9NRU07CisJCQlicmVhazsKKwkJfQorCWNh
c2UgVEZNQV9SRUFEOgkJLyogZGVjb21wcmVzcyAqLworCQlicmVhazsKKwlkZWZhdWx0OgorCQlp
bXBvc3NpYmxlKCJlZHdhcmQtODc3IiwgInVua25vd24gdGZtIGFjdGlvbiIpOworCX0KKwlpZiAo
cmV0KQorCQlyZXR1cm4gRVJSX1BUUihyZXQpOworCXJldHVybiBjb2E7Cit9CisKK3N0YXRpYyB2
b2lkIGx6bzFfZnJlZShjb2FfdCBjb2EsIHRmbV9hY3Rpb24gYWN0KQoreworCWFzc2VydCgiZWR3
YXJkLTg3OSIsIGNvYSAhPSBOVUxMKTsKKworCXN3aXRjaCAoYWN0KSB7CisJY2FzZSBURk1BX1dS
SVRFOgkvKiBjb21wcmVzcyAqLworCQl2ZnJlZShjb2EpOworCQlicmVhazsKKwljYXNlIFRGTUFf
UkVBRDoJCS8qIGRlY29tcHJlc3MgKi8KKwkJaW1wb3NzaWJsZSgiZWR3YXJkLTEzMDQiLAorCQkJ
ICAgInRyeWluZyB0byBmcmVlIG5vbi1hbGxvY2F0ZWQgd29ya3NwYWNlIik7CisJZGVmYXVsdDoK
KwkJaW1wb3NzaWJsZSgiZWR3YXJkLTg4MCIsICJ1bmtub3duIHRmbSBhY3Rpb24iKTsKKwl9CisJ
cmV0dXJuOworfQorCitzdGF0aWMgaW50IGx6bzFfbWluX3NpemVfZGVmbGF0ZSh2b2lkKQorewor
CXJldHVybiAyNTY7Cit9CisKK3N0YXRpYyB2b2lkCitsem8xX2NvbXByZXNzKGNvYV90IGNvYSwg
X191OCAqIHNyY19maXJzdCwgc2l6ZV90IHNyY19sZW4sCisJICAgICAgX191OCAqIGRzdF9maXJz
dCwgc2l6ZV90ICpkc3RfbGVuKQoreworCWludCByZXN1bHQ7CisKKwlhc3NlcnQoImVkd2FyZC04
NDYiLCBjb2EgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtODQ3Iiwgc3JjX2xlbiAhPSAwKTsK
KworCXJlc3VsdCA9IGx6bzF4XzFfY29tcHJlc3Moc3JjX2ZpcnN0LCBzcmNfbGVuLCBkc3RfZmly
c3QsIGRzdF9sZW4sIGNvYSk7CisJaWYgKHVubGlrZWx5KHJlc3VsdCAhPSBMWk9fRV9PSykpIHsK
KwkJd2FybmluZygiZWR3YXJkLTg0OSIsICJsem8xeF8xX2NvbXByZXNzIGZhaWxlZFxuIik7CisJ
CWdvdG8gb3V0OworCX0KKwlpZiAoKmRzdF9sZW4gPj0gc3JjX2xlbikgeworCQkvL3dhcm5pbmco
ImVkd2FyZC04NTAiLCAibHpvMXhfMV9jb21wcmVzczogaW5jb21wcmVzc2libGUgZGF0YVxuIik7
CisJCWdvdG8gb3V0OworCX0KKwlyZXR1cm47CisgICAgICBvdXQ6CisJKmRzdF9sZW4gPSBzcmNf
bGVuOworCXJldHVybjsKK30KKworc3RhdGljIHZvaWQKK2x6bzFfZGVjb21wcmVzcyhjb2FfdCBj
b2EsIF9fdTggKiBzcmNfZmlyc3QsIHNpemVfdCBzcmNfbGVuLAorCQlfX3U4ICogZHN0X2ZpcnN0
LCBzaXplX3QgKmRzdF9sZW4pCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiZWR3YXJkLTg1
MSIsIGNvYSA9PSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC04NTIiLCBzcmNfbGVuICE9IDApOwor
CisJcmVzdWx0ID0gbHpvMXhfZGVjb21wcmVzc19zYWZlKHNyY19maXJzdCwgc3JjX2xlbiwgZHN0
X2ZpcnN0LCBkc3RfbGVuKTsKKwlpZiAocmVzdWx0ICE9IExaT19FX09LKQorCQl3YXJuaW5nKCJl
ZHdhcmQtODUzIiwgImx6bzF4XzFfZGVjb21wcmVzcyBmYWlsZWRcbiIpOworCXJldHVybjsKK30K
KworLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KKy8qICAgICAgICAgICAgICAgICAgICAgICAgIHpz
dGQxIGNvbXByZXNzaW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovCisvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLworCit0eXBlZGVmIHN0cnVjdCB7CisJWlNURF9wYXJhbWV0ZXJz
IHBhcmFtczsKKwl2b2lkKiB3b3Jrc3BhY2U7CisJWlNURF9DQ3R4KiBjY3R4OworfSB6c3RkMV9j
b2FfYzsKK3R5cGVkZWYgc3RydWN0IHsKKwl2b2lkKiB3b3Jrc3BhY2U7CisJWlNURF9EQ3R4KiBk
Y3R4OworfSB6c3RkMV9jb2FfZDsKKworc3RhdGljIGludCB6c3RkMV9pbml0KHZvaWQpCit7CisJ
cmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgenN0ZDFfb3ZlcnJ1bih1bnNpZ25lZCBzcmNfbGVu
IFVOVVNFRF9BUkcpCit7CisJcmV0dXJuIFpTVERfY29tcHJlc3NCb3VuZChzcmNfbGVuKSAtIHNy
Y19sZW47Cit9CisKK3N0YXRpYyBjb2FfdCB6c3RkMV9hbGxvYyh0Zm1fYWN0aW9uIGFjdCkKK3sK
KwlpbnQgcmV0ID0gMDsKKwlzaXplX3Qgd29ya3NwYWNlX3NpemU7CisJY29hX3QgY29hID0gTlVM
TDsKKworCXN3aXRjaCAoYWN0KSB7CisJY2FzZSBURk1BX1dSSVRFOgkvKiBjb21wcmVzcyAqLwor
CQljb2EgPSByZWlzZXI0X3ZtYWxsb2Moc2l6ZW9mKHpzdGQxX2NvYV9jKSk7CisJCWlmICghY29h
KSB7CisJCQlyZXQgPSAtRU5PTUVNOworCQkJYnJlYWs7CisJCX0KKwkJLyogWlNURCBiZW5jaG1h
cmsgdXNlIGxldmVsIDEgYXMgZGVmYXVsdC4gTWF4IGlzIDIyLiAqLworCQkoKHpzdGQxX2NvYV9j
Kiljb2EpLT5wYXJhbXMgPSBaU1REX2dldFBhcmFtcygxLCAwLCAwKTsKKwkJd29ya3NwYWNlX3Np
emUgPSBaU1REX0NDdHhXb3Jrc3BhY2VCb3VuZCgoKHpzdGQxX2NvYV9jKiljb2EpLT5wYXJhbXMu
Y1BhcmFtcyk7CisJCSgoenN0ZDFfY29hX2MqKWNvYSktPndvcmtzcGFjZSA9IHJlaXNlcjRfdm1h
bGxvYyh3b3Jrc3BhY2Vfc2l6ZSk7CisJCWlmICghKCgoenN0ZDFfY29hX2MqKWNvYSktPndvcmtz
cGFjZSkpIHsKKwkJCXJldCA9IC1FTk9NRU07CisJCQl2ZnJlZShjb2EpOworCQkJYnJlYWs7CisJ
CX0KKwkJKCh6c3RkMV9jb2FfYyopY29hKS0+Y2N0eCA9IFpTVERfaW5pdENDdHgoKCh6c3RkMV9j
b2FfYyopY29hKS0+d29ya3NwYWNlLCB3b3Jrc3BhY2Vfc2l6ZSk7CisJCWlmICghKCgoenN0ZDFf
Y29hX2MqKWNvYSktPmNjdHgpKSB7CisJCQlyZXQgPSAtRU5PTUVNOworCQkJdmZyZWUoKCh6c3Rk
MV9jb2FfYyopY29hKS0+d29ya3NwYWNlKTsKKwkJCXZmcmVlKGNvYSk7CisJCQlicmVhazsKKwkJ
fQorCQlicmVhazsKKwljYXNlIFRGTUFfUkVBRDoJCS8qIGRlY29tcHJlc3MgKi8KKwkJY29hID0g
cmVpc2VyNF92bWFsbG9jKHNpemVvZih6c3RkMV9jb2FfZCkpOworCQlpZiAoIWNvYSkgeworCQkJ
cmV0ID0gLUVOT01FTTsKKwkJCWJyZWFrOworCQl9CisJCXdvcmtzcGFjZV9zaXplID0gWlNURF9E
Q3R4V29ya3NwYWNlQm91bmQoKTsKKwkJKCh6c3RkMV9jb2FfZCopY29hKS0+d29ya3NwYWNlID0g
cmVpc2VyNF92bWFsbG9jKHdvcmtzcGFjZV9zaXplKTsKKwkJaWYgKCEoKCh6c3RkMV9jb2FfZCop
Y29hKS0+d29ya3NwYWNlKSkgeworCQkJcmV0ID0gLUVOT01FTTsKKwkJCXZmcmVlKGNvYSk7CisJ
CQlicmVhazsKKwkJfQorCQkoKHpzdGQxX2NvYV9kKiljb2EpLT5kY3R4ID0gWlNURF9pbml0REN0
eCgoKHpzdGQxX2NvYV9kKiljb2EpLT53b3Jrc3BhY2UsIHdvcmtzcGFjZV9zaXplKTsKKwkJaWYg
KCEoKCh6c3RkMV9jb2FfZCopY29hKS0+ZGN0eCkpIHsKKwkJCXJldCA9IC1FTk9NRU07CisJCQl2
ZnJlZSgoKHpzdGQxX2NvYV9kKiljb2EpLT53b3Jrc3BhY2UpOworCQkJdmZyZWUoY29hKTsKKwkJ
CWJyZWFrOworCQl9CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCWltcG9zc2libGUoImJzaW5vdC0x
IiwKKwkJCSAgICJ0cnlpbmcgdG8gYWxsb2Mgd29ya3NwYWNlIGZvciB1bmtub3duIHRmbSBhY3Rp
b24iKTsKKwl9CisJaWYgKHJldCkgeworCQl3YXJuaW5nKCJic2lub3QtMiIsCisJCQkiYWxsb2Mg
d29ya3NwYWNlIGZvciB6c3RkICh0Zm0gYWN0aW9uID0gJWQpIGZhaWxlZFxuIiwKKwkJCWFjdCk7
CisJCXJldHVybiBFUlJfUFRSKHJldCk7CisJfQorCXJldHVybiBjb2E7Cit9CisKK3N0YXRpYyB2
b2lkIHpzdGQxX2ZyZWUoY29hX3QgY29hLCB0Zm1fYWN0aW9uIGFjdCkKK3sKKwlhc3NlcnQoImJz
aW5vdC0zIiwgY29hICE9IE5VTEwpOworCisJc3dpdGNoIChhY3QpIHsKKwljYXNlIFRGTUFfV1JJ
VEU6CS8qIGNvbXByZXNzICovCisJCXZmcmVlKCgoenN0ZDFfY29hX2MqKWNvYSktPndvcmtzcGFj
ZSk7CisJCXZmcmVlKGNvYSk7CisJCS8vcHJpbnRrKEtFUk5fV0FSTklORyAiZnJlZSBjb21wIG1l
bW9yeSAtLSAlcFxuIiwgY29hKTsKKwkJYnJlYWs7CisJY2FzZSBURk1BX1JFQUQ6CQkvKiBkZWNv
bXByZXNzICovCisJCXZmcmVlKCgoenN0ZDFfY29hX2QqKWNvYSktPndvcmtzcGFjZSk7CisJCXZm
cmVlKGNvYSk7CisJCS8vcHJpbnRrKEtFUk5fV0FSTklORyAiZnJlZSBkZWNvbXAgbWVtb3J5IC0t
ICVwXG4iLCBjb2EpOworCQlicmVhazsKKwlkZWZhdWx0OgorCQlpbXBvc3NpYmxlKCJic2lub3Qt
NCIsICJ1bmtub3duIHRmbSBhY3Rpb24iKTsKKwl9CisJcmV0dXJuOworfQorCitzdGF0aWMgaW50
IHpzdGQxX21pbl9zaXplX2RlZmxhdGUodm9pZCkKK3sKKwlyZXR1cm4gMjU2OyAvKiBJJ20gbm90
IHN1cmUgYWJvdXQgdGhlIGNvcnJlY3QgdmFsdWUsIHNvIHRvb2sgZnJvbSBMWk8xICovCit9CisK
K3N0YXRpYyB2b2lkCit6c3RkMV9jb21wcmVzcyhjb2FfdCBjb2EsIF9fdTggKiBzcmNfZmlyc3Qs
IHNpemVfdCBzcmNfbGVuLAorCSAgICAgIF9fdTggKiBkc3RfZmlyc3QsIHNpemVfdCAqZHN0X2xl
bikKK3sKKwl1bnNpZ25lZCBpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJic2lub3QtNSIsIGNvYSAh
PSBOVUxMKTsKKwlhc3NlcnQoImJzaW5vdC02Iiwgc3JjX2xlbiAhPSAwKTsKKwlyZXN1bHQgPSBa
U1REX2NvbXByZXNzQ0N0eCgoKHpzdGQxX2NvYV9jKiljb2EpLT5jY3R4LCBkc3RfZmlyc3QsICpk
c3RfbGVuLCBzcmNfZmlyc3QsIHNyY19sZW4sICgoenN0ZDFfY29hX2MqKWNvYSktPnBhcmFtcyk7
CisJaWYgKFpTVERfaXNFcnJvcihyZXN1bHQpKSB7CisJCXdhcm5pbmcoImJzaW5vdC03IiwgInpz
dGQxX2NvbXByZXNzQ0N0eCBmYWlsZWRcbiIpOworCQlnb3RvIG91dDsKKwl9CisJKmRzdF9sZW4g
PSByZXN1bHQ7CisJaWYgKCpkc3RfbGVuID49IHNyY19sZW4pIHsKKwkJLy93YXJuaW5nKCJic2lu
b3QtOCIsICJ6c3RkMV9jb21wcmVzc0NDdHg6IGluY29tcHJlc3NpYmxlIGRhdGFcbiIpOworCQln
b3RvIG91dDsKKwl9CisJcmV0dXJuOworICAgICAgb3V0OgorCSpkc3RfbGVuID0gc3JjX2xlbjsK
KwlyZXR1cm47Cit9CisKK3N0YXRpYyB2b2lkCit6c3RkMV9kZWNvbXByZXNzKGNvYV90IGNvYSwg
X191OCAqIHNyY19maXJzdCwgc2l6ZV90IHNyY19sZW4sCisJCV9fdTggKiBkc3RfZmlyc3QsIHNp
emVfdCAqZHN0X2xlbikKK3sKKwl1bnNpZ25lZCBpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJic2lu
b3QtOSIsIGNvYSAhPSBOVUxMKTsKKwlhc3NlcnQoImJzaW5vdC0xMCIsIHNyY19sZW4gIT0gMCk7
CisKKwlyZXN1bHQgPSBaU1REX2RlY29tcHJlc3NEQ3R4KCgoenN0ZDFfY29hX2QqKWNvYSktPmRj
dHgsIGRzdF9maXJzdCwgKmRzdF9sZW4sIHNyY19maXJzdCwgc3JjX2xlbik7CisJLyogU2FtZSBo
ZXJlLiAqLworCWlmIChaU1REX2lzRXJyb3IocmVzdWx0KSkKKwkJd2FybmluZygiYnNpbm90LTEx
IiwgInpzdGQxX2RlY29tcHJlc3NEQ3R4IGZhaWxlZFxuIik7CisJKmRzdF9sZW4gPSByZXN1bHQ7
CisJcmV0dXJuOworfQorCisKK2NvbXByZXNzaW9uX3BsdWdpbiBjb21wcmVzc2lvbl9wbHVnaW5z
W0xBU1RfQ09NUFJFU1NJT05fSURdID0geworCVtMWk8xX0NPTVBSRVNTSU9OX0lEXSA9IHsKKwkJ
LmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUsCisJ
CQkuaWQgPSBMWk8xX0NPTVBSRVNTSU9OX0lELAorCQkJLnBvcHMgPSAmY29tcHJlc3Npb25fcGx1
Z2luX29wcywKKwkJCS5sYWJlbCA9ICJsem8xIiwKKwkJCS5kZXNjID0gImx6bzEgY29tcHJlc3Np
b24gdHJhbnNmb3JtIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5pbml0
ID0gbHpvMV9pbml0LAorCQkub3ZlcnJ1biA9IGx6bzFfb3ZlcnJ1biwKKwkJLmFsbG9jID0gbHpv
MV9hbGxvYywKKwkJLmZyZWUgPSBsem8xX2ZyZWUsCisJCS5taW5fc2l6ZV9kZWZsYXRlID0gbHpv
MV9taW5fc2l6ZV9kZWZsYXRlLAorCQkuY2hlY2tzdW0gPSByZWlzZXI0X2FkbGVyMzIsCisJCS5j
b21wcmVzcyA9IGx6bzFfY29tcHJlc3MsCisJCS5kZWNvbXByZXNzID0gbHpvMV9kZWNvbXByZXNz
CisJfSwKKwlbR1pJUDFfQ09NUFJFU1NJT05fSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lk
ID0gUkVJU0VSNF9DT01QUkVTU0lPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEdaSVAxX0NPTVBS
RVNTSU9OX0lELAorCQkJLnBvcHMgPSAmY29tcHJlc3Npb25fcGx1Z2luX29wcywKKwkJCS5sYWJl
bCA9ICJnemlwMSIsCisJCQkuZGVzYyA9ICJnemlwMSBjb21wcmVzc2lvbiB0cmFuc2Zvcm0iLAor
CQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmluaXQgPSBnemlwMV9pbml0LAor
CQkub3ZlcnJ1biA9IGd6aXAxX292ZXJydW4sCisJCS5hbGxvYyA9IGd6aXAxX2FsbG9jLAorCQku
ZnJlZSA9IGd6aXAxX2ZyZWUsCisJCS5taW5fc2l6ZV9kZWZsYXRlID0gZ3ppcDFfbWluX3NpemVf
ZGVmbGF0ZSwKKwkJLmNoZWNrc3VtID0gcmVpc2VyNF9hZGxlcjMyLAorCQkuY29tcHJlc3MgPSBn
emlwMV9jb21wcmVzcywKKwkJLmRlY29tcHJlc3MgPSBnemlwMV9kZWNvbXByZXNzCisJfSwKKwlb
WlNURDFfQ09NUFJFU1NJT05fSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VS
NF9DT01QUkVTU0lPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IFpTVEQxX0NPTVBSRVNTSU9OX0lE
LAorCQkJLnBvcHMgPSAmY29tcHJlc3Npb25fcGx1Z2luX29wcywKKwkJCS5sYWJlbCA9ICJ6c3Rk
MSIsCisJCQkuZGVzYyA9ICJ6c3RkMSBjb21wcmVzc2lvbiB0cmFuc2Zvcm0iLAorCQkJLmxpbmth
Z2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmluaXQgPSB6c3RkMV9pbml0LAorCQkub3ZlcnJ1
biA9IHpzdGQxX292ZXJydW4sCisJCS5hbGxvYyA9IHpzdGQxX2FsbG9jLAorCQkuZnJlZSA9IHpz
dGQxX2ZyZWUsCisJCS5taW5fc2l6ZV9kZWZsYXRlID0genN0ZDFfbWluX3NpemVfZGVmbGF0ZSwK
KwkJLmNoZWNrc3VtID0gcmVpc2VyNF9hZGxlcjMyLAorCQkuY29tcHJlc3MgPSB6c3RkMV9jb21w
cmVzcywKKwkJLmRlY29tcHJlc3MgPSB6c3RkMV9kZWNvbXByZXNzCisJfQorfTsKKworLyoKKyAg
TG9jYWwgdmFyaWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICBtb2RlLW5h
bWU6ICJMQyIKKyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRoOiA4CisgIGZpbGwtY29s
dW1uOiAxMjAKKyAgc2Nyb2xsLXN0ZXA6IDEKKyAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVy
ZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vY29tcHJlc3MvY29t
cHJlc3MuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vY29tcHJlc3MvY29tcHJlc3Mu
aAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vY29tcHJlc3MvY29tcHJl
c3MuaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3
L2ZzL3JlaXNlcjQvcGx1Z2luL2NvbXByZXNzL2NvbXByZXNzLmgJMjAyMC0wMi0wNSAyMDo1Mzo0
MS40NTgyMjIyMTYgKzAxMDAKQEAgLTAsMCArMSw0NCBAQAorI2lmICFkZWZpbmVkKCBfX0ZTX1JF
SVNFUjRfQ09NUFJFU1NfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0X0NPTVBSRVNTX0hfXwor
CisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9zdHJpbmcuaD4KKwor
LyogdHJhbnNmb3JtIGRpcmVjdGlvbiAqLwordHlwZWRlZiBlbnVtIHsKKwlURk1BX1JFQUQsICAg
LyogZGVjcnlwdCwgZGVjb21wcmVzcyAqLworCVRGTUFfV1JJVEUsICAvKiBlbmNyeXB0LCBjb21w
cmVzcyAqLworCVRGTUFfTEFTVAorfSB0Zm1fYWN0aW9uOworCisvKiBzdXBwb3J0ZWQgY29tcHJl
c3Npb24gYWxnb3JpdGhtcyAqLwordHlwZWRlZiBlbnVtIHsKKwlMWk8xX0NPTVBSRVNTSU9OX0lE
LAorCUdaSVAxX0NPTVBSRVNTSU9OX0lELAorCVpTVEQxX0NPTVBSRVNTSU9OX0lELAorCUxBU1Rf
Q09NUFJFU1NJT05fSUQsCit9IHJlaXNlcjRfY29tcHJlc3Npb25faWQ7CisKKy8qIHRoZSBzYW1l
IGFzIHBnb2ZmLCBidXQgdW5pdHMgYXJlIHBhZ2UgY2x1c3RlcnMgKi8KK3R5cGVkZWYgdW5zaWdu
ZWQgbG9uZyBjbG9mZl90OworCisvKiB3b3JraW5nIGRhdGEgb2YgYSAoZGUpY29tcHJlc3Npb24g
YWxnb3JpdGhtICovCit0eXBlZGVmIHZvaWQgKmNvYV90OworCisvKiB0YWJsZSBmb3IgYWxsIHN1
cHBvcnRlZCAoZGUpY29tcHJlc3Npb24gYWxnb3JpdGhtcyAqLwordHlwZWRlZiBjb2FfdCBjb2Ff
c2V0W0xBU1RfQ09NUFJFU1NJT05fSURdW1RGTUFfTEFTVF07CisKK19fdTMyIHJlaXNlcjRfYWRs
ZXIzMihjaGFyICpkYXRhLCBfX3UzMiBsZW4pOworCisjZW5kaWYJCQkJLyogX19GU19SRUlTRVI0
X0NPTVBSRVNTX0hfXyAqLworCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFi
bGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgor
ICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEy
MAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2NvbXByZXNzL2NvbXByZXNz
X21vZGUuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vY29tcHJlc3MvY29tcHJlc3Nf
bW9kZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9jb21wcmVzcy9j
b21wcmVzc19tb2RlLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxp
bnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jb21wcmVzcy9jb21wcmVzc19tb2RlLmMJMjAy
MC0wMi0wNSAyMDo1Mzo0MS40NTgyMjIyMTYgKzAxMDAKQEAgLTAsMCArMSwxNjIgQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKy8qIFRoaXMgZmlsZSBjb250YWlucyBSZWlzZXI0IGNv
bXByZXNzaW9uIG1vZGUgcGx1Z2lucy4KKworICAgQ29tcHJlc3Npb24gbW9kZSBwbHVnaW4gaXMg
YSBzZXQgb2YgaGFuZGxlcnMgY2FsbGVkIGJ5IGNvbXByZXNzb3IKKyAgIGF0IGZsdXNoIHRpbWUg
YW5kIHJlcHJlc2VudCBzb21lIGhldXJpc3RpY3MgaW5jbHVkaW5nIHRoZSBvbmVzCisgICB3aGlj
aCBhcmUgdG8gYXZvaWQgY29tcHJlc3Npb24gb2YgaW5jb21wcmVzc2libGUgZGF0YSwgc2VlCisg
ICBodHRwOi8vd3d3Lm5hbWVzeXMuY29tL2NyeXB0Y29tcHJlc3NfZGVzaWduLmh0bWwgZm9yIG1v
cmUgZGV0YWlscy4KKyovCisjaW5jbHVkZSAiLi4vLi4vaW5vZGUuaCIKKyNpbmNsdWRlICIuLi9w
bHVnaW4uaCIKKworc3RhdGljIGludCBzaG91bGRfZGVmbGF0ZV9ub25lKHN0cnVjdCBpbm9kZSAq
IGlub2RlLCBjbG9mZl90IGluZGV4KQoreworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IHNo
b3VsZF9kZWZsYXRlX2NvbW1vbihzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwgY2xvZmZfdCBpbmRleCkK
K3sKKwlyZXR1cm4gY29tcHJlc3Npb25faXNfb24oY3J5cHRjb21wcmVzc19pbm9kZV9kYXRhKGlu
b2RlKSk7Cit9CisKK3N0YXRpYyBpbnQgZGlzY2FyZF9ob29rX3VsdGltKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIGNsb2ZmX3QgaW5kZXgpCit7CisJdHVybl9vZmZfY29tcHJlc3Npb24oY3J5cHRjb21w
cmVzc19pbm9kZV9kYXRhKGlub2RlKSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgZGlz
Y2FyZF9ob29rX2xhdHRkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNsb2ZmX3QgaW5kZXgpCit7CisJ
c3RydWN0IGNyeXB0Y29tcHJlc3NfaW5mbyAqIGluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2Rh
dGEoaW5vZGUpOworCisJYXNzZXJ0KCJlZHdhcmQtMTQ2MiIsCisJICAgICAgIGdldF9sYXR0aWNl
X2ZhY3RvcihpbmZvKSA+PSBNSU5fTEFUVElDRV9GQUNUT1IgJiYKKwkgICAgICAgZ2V0X2xhdHRp
Y2VfZmFjdG9yKGluZm8pIDw9IE1BWF9MQVRUSUNFX0ZBQ1RPUik7CisKKwl0dXJuX29mZl9jb21w
cmVzc2lvbihpbmZvKTsKKwlpZiAoZ2V0X2xhdHRpY2VfZmFjdG9yKGluZm8pIDwgTUFYX0xBVFRJ
Q0VfRkFDVE9SKQorCQlzZXRfbGF0dGljZV9mYWN0b3IoaW5mbywgZ2V0X2xhdHRpY2VfZmFjdG9y
KGluZm8pIDw8IDEpOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGFjY2VwdF9ob29rX2xh
dHRkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNsb2ZmX3QgaW5kZXgpCit7CisJdHVybl9vbl9jb21w
cmVzc2lvbihjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpKTsKKwlzZXRfbGF0dGljZV9m
YWN0b3IoY3J5cHRjb21wcmVzc19pbm9kZV9kYXRhKGlub2RlKSwgTUlOX0xBVFRJQ0VfRkFDVE9S
KTsKKwlyZXR1cm4gMDsKK30KKworLyogQ2hlY2sgb24gZHluYW1pYyBsYXR0aWNlLCB0aGUgYWRh
cHRpdmUgY29tcHJlc3Npb24gbW9kZXMgd2hpY2gKKyAgIGRlZmluZXMgdGhlIGZvbGxvd2luZyBi
ZWhhdmlvcjoKKworICAgQ29tcHJlc3Npb24gaXMgb246IHRyeSB0byBjb21wcmVzcyBldmVyeXRo
aW5nIGFuZCB0dXJuCisgICBpdCBvZmYsIHdoZW5ldmVyIGNsdXN0ZXIgaXMgaW5jb21wcmVzc2li
bGUuCisKKyAgIENvbXByZXNzaW9uIGlzIG9mZjogdHJ5IHRvIGNvbXByZXNzIGNsdXN0ZXJzIG9m
IGluZGV4ZXMKKyAgIGsgKiBGQUNUT1IgKGsgPSAwLCAxLCAyLCAuLi4pIGFuZCB0dXJuIGl0IG9u
LCBpZiBzb21lIG9mCisgICB0aGVtIGlzIGNvbXByZXNzaWJsZS4gSWYgaW5jb21wcmVzc2libGUs
IHRoZW4gaW5jcmVhc2UgRkFDVE9SICovCisKKy8qIGNoZWNrIGlmIEBpbmRleCBiZWxvbmdzIHRv
IG9uZS1kaW1lbnNpb25hbCBsYXR0aWNlCisgICBvZiBzcGFyY2UgZmFjdG9yIEBmYWN0b3IgKi8K
K3N0YXRpYyBpbnQgaXNfb25fbGF0dGljZShjbG9mZl90IGluZGV4LCBpbnQgZmFjdG9yKQorewor
CXJldHVybiAoZmFjdG9yID8gaW5kZXggJSBmYWN0b3IgPT0gMDogaW5kZXggPT0gMCk7Cit9CisK
K3N0YXRpYyBpbnQgc2hvdWxkX2RlZmxhdGVfbGF0dGQoc3RydWN0IGlub2RlICogaW5vZGUsIGNs
b2ZmX3QgaW5kZXgpCit7CisJcmV0dXJuIHNob3VsZF9kZWZsYXRlX2NvbW1vbihpbm9kZSwgaW5k
ZXgpIHx8CisJCWlzX29uX2xhdHRpY2UoaW5kZXgsCisJCQkgICAgICBnZXRfbGF0dGljZV9mYWN0
b3IKKwkJCSAgICAgIChjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpKSk7Cit9CisKKy8q
IGNvbXByZXNzaW9uIG1vZGVfcGx1Z2lucyAqLworY29tcHJlc3Npb25fbW9kZV9wbHVnaW4gY29t
cHJlc3Npb25fbW9kZV9wbHVnaW5zW0xBU1RfQ09NUFJFU1NJT05fTU9ERV9JRF0gPSB7CisJW05P
TkVfQ09NUFJFU1NJT05fTU9ERV9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlT
RVI0X0NPTVBSRVNTSU9OX01PREVfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBOT05FX0NPTVBSRVNT
SU9OX01PREVfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAibm9uZSIsCisJCQku
ZGVzYyA9ICJDb21wcmVzcyBub3RoaW5nIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJ
CX0sCisJCS5zaG91bGRfZGVmbGF0ZSA9IHNob3VsZF9kZWZsYXRlX25vbmUsCisJCS5hY2NlcHRf
aG9vayA9IE5VTEwsCisJCS5kaXNjYXJkX2hvb2sgPSBOVUxMCisJfSwKKwkvKiBDaGVjay1vbi1k
eW5hbWljLWxhdHRpY2UgYWRhcHRpdmUgY29tcHJlc3Npb24gbW9kZSAqLworCVtMQVRURF9DT01Q
UkVTU0lPTl9NT0RFX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfQ09N
UFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IExBVFREX0NPTVBSRVNTSU9OX01P
REVfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAibGF0dGQiLAorCQkJLmRlc2Mg
PSAiQ2hlY2sgb24gZHluYW1pYyBsYXR0aWNlIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9
CisJCX0sCisJCS5zaG91bGRfZGVmbGF0ZSA9IHNob3VsZF9kZWZsYXRlX2xhdHRkLAorCQkuYWNj
ZXB0X2hvb2sgPSBhY2NlcHRfaG9va19sYXR0ZCwKKwkJLmRpc2NhcmRfaG9vayA9IGRpc2NhcmRf
aG9va19sYXR0ZAorCX0sCisJLyogQ2hlY2stdWx0aW1hdGVseSBjb21wcmVzc2lvbiBtb2RlOgor
CSAgIFR1cm4gb2ZmIGNvbXByZXNzaW9uIGZvcmV2ZXIgYXMgc29vbiBhcyB3ZSBtZWV0CisJICAg
aW5jb21wcmVzc2libGUgZGF0YSAqLworCVtVTFRJTV9DT01QUkVTU0lPTl9NT0RFX0lEXSA9IHsK
KwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfQ09NUFJFU1NJT05fTU9ERV9QTFVHSU5f
VFlQRSwKKwkJCS5pZCA9IFVMVElNX0NPTVBSRVNTSU9OX01PREVfSUQsCisJCQkucG9wcyA9IE5V
TEwsCisJCQkubGFiZWwgPSAidWx0aW0iLAorCQkJLmRlc2MgPSAiQ2hlY2sgdWx0aW1hdGVseSIs
CisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuc2hvdWxkX2RlZmxhdGUgPSBz
aG91bGRfZGVmbGF0ZV9jb21tb24sCisJCS5hY2NlcHRfaG9vayA9IE5VTEwsCisJCS5kaXNjYXJk
X2hvb2sgPSBkaXNjYXJkX2hvb2tfdWx0aW0KKwl9LAorCS8qIEZvcmNlLXRvLWNvbXByZXNzLWV2
ZXJ5dGhpbmcgY29tcHJlc3Npb24gbW9kZSAqLworCVtGT1JDRV9DT01QUkVTU0lPTl9NT0RFX0lE
XSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfQ09NUFJFU1NJT05fTU9ERV9Q
TFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZPUkNFX0NPTVBSRVNTSU9OX01PREVfSUQsCisJCQkucG9w
cyA9IE5VTEwsCisJCQkubGFiZWwgPSAiZm9yY2UiLAorCQkJLmRlc2MgPSAiRm9yY2UgdG8gY29t
cHJlc3MgZXZlcnl0aGluZyIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQku
c2hvdWxkX2RlZmxhdGUgPSBOVUxMLAorCQkuYWNjZXB0X2hvb2sgPSBOVUxMLAorCQkuZGlzY2Fy
ZF9ob29rID0gTlVMTAorCX0sCisJLyogQ29udmVydC10by1leHRlbnQgY29tcHJlc3Npb24gbW9k
ZS4KKwkgICBJbiB0aGlzIG1vZGUgaXRlbXMgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gZXh0ZW50cyBh
bmQgbWFuYWdlbWVudAorCSAgIHdpbGwgYmUgcGFzc2VkIHRvIChjbGFzc2ljKSB1bml4IGZpbGUg
cGx1Z2luIGFzIHNvb24gYXMgLT53cml0ZSgpCisJICAgZGV0ZWN0cyB0aGF0IHRoZSBmaXJzdCBj
b21wbGV0ZSBsb2dpY2FsIGNsdXN0ZXIgKG9mIGluZGV4ICMwKSBpcworCSAgIGluY29tcHJlc3Np
YmxlLiAqLworCVtDT05WWF9DT01QUkVTU0lPTl9NT0RFX0lEXSA9IHsKKwkJLmggPSB7CisJCQku
dHlwZV9pZCA9IFJFSVNFUjRfQ09NUFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9
IENPTlZYX0NPTVBSRVNTSU9OX01PREVfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwg
PSAiY29udiIsCisJCQkuZGVzYyA9ICJDb252ZXJ0IHRvIGV4dGVudCIsCisJCQkubGlua2FnZSA9
IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuc2hvdWxkX2RlZmxhdGUgPSBzaG91bGRfZGVmbGF0ZV9j
b21tb24sCisJCS5hY2NlcHRfaG9vayA9IE5VTEwsCisJCS5kaXNjYXJkX2hvb2sgPSBOVUxMCisJ
fQorfTsKKworLyoKKyAgTG9jYWwgdmFyaWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICBtb2RlLW5hbWU6ICJMQyIKKyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRo
OiA4CisgIGZpbGwtY29sdW1uOiAxMjAKKyAgc2Nyb2xsLXN0ZXA6IDEKKyAgRW5kOgorKi8KZGlm
ZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVn
aW4vY29tcHJlc3MvTWFrZWZpbGUgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2NvbXBy
ZXNzL01ha2VmaWxlCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9jb21w
cmVzcy9NYWtlZmlsZQkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGlu
dXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2NvbXByZXNzL01ha2VmaWxlCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDU4MjIyMjE2ICswMTAwCkBAIC0wLDAgKzEsNSBAQAorb2JqLSQoQ09ORklHX1JF
SVNFUjRfRlMpICs9IGNvbXByZXNzX3BsdWdpbnMubworCitjb21wcmVzc19wbHVnaW5zLW9ianMg
Oj0JXAorCWNvbXByZXNzLm8JCVwKKwljb21wcmVzc19tb2RlLm8KZGlmZiAtdXJOIC0tbm8tZGVy
ZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vY3J5cHRvL2NpcGhl
ci5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jcnlwdG8vY2lwaGVyLmMKLS0tIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2NyeXB0by9jaXBoZXIuYwkxOTcwLTAx
LTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQv
cGx1Z2luL2NyeXB0by9jaXBoZXIuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1ODIyMjIxNiArMDEw
MApAQCAtMCwwICsxLDM3IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5z
IFJlaXNlciwKKyAgIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworLyog
UmVpc2VyNCBjaXBoZXIgdHJhbnNmb3JtIHBsdWdpbnMgKi8KKworI2luY2x1ZGUgIi4uLy4uL2Rl
YnVnLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luLmgiCisKK2NpcGhlcl9wbHVnaW4gY2lwaGVyX3Bs
dWdpbnNbTEFTVF9DSVBIRVJfSURdID0geworCVtOT05FX0NJUEhFUl9JRF0gPSB7CisJCS5oID0g
eworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0NJUEhFUl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IE5P
TkVfQ0lQSEVSX0lELAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0gIm5vbmUiLAorCQkJ
LmRlc2MgPSAibm8gY2lwaGVyIHRyYW5zZm9ybSIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxM
fQorCQl9LAorCQkuYWxsb2MgPSBOVUxMLAorCQkuZnJlZSA9IE5VTEwsCisJCS5zY2FsZSA9IE5V
TEwsCisJCS5hbGlnbl9zdHJlYW0gPSBOVUxMLAorCQkuc2V0a2V5ID0gTlVMTCwKKwkJLmVuY3J5
cHQgPSBOVUxMLAorCQkuZGVjcnlwdCA9IE5VTEwKKwl9Cit9OworCisvKiBNYWtlIExpbnVzIGhh
cHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIK
KyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDog
OAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRp
ZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1
Z2luL2NyeXB0by9jaXBoZXIuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vY3J5cHRv
L2NpcGhlci5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9jcnlwdG8v
Y2lwaGVyLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9jcnlwdG8vY2lwaGVyLmgJMjAyMC0wMi0wNSAyMDo1Mzo0
MS40NTgyMjIyMTYgKzAxMDAKQEAgLTAsMCArMSw1NSBAQAorLyogQ29weXJpZ2h0IDIwMDIsIDIw
MDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAq
LworLyogVGhpcyBmaWxlIGNvbnRhaW5zIGRlZmluaXRpb25zIGZvciB0aGUgb2JqZWN0cyBvcGVy
YXRlZAorICAgYnkgcmVpc2VyNCBrZXkgbWFuYWdlciwgd2hpY2ggaXMgc29tZXRoaW5nIGxpa2Ug
a2V5cmluZworICAgd3JhcHBlZCBieSBhcHByb3ByaWF0ZSByZWlzZXI0IHBsdWdpbiAqLworCisj
aWYgIWRlZmluZWQoIF9fRlNfUkVJU0VSNF9DUllQVF9IX18gKQorI2RlZmluZSBfX0ZTX1JFSVNF
UjRfQ1JZUFRfSF9fCisKKyNpbmNsdWRlIDxsaW51eC9jcnlwdG8uaD4KKworLyoga2V5IGluZm8g
aW1wb3J0ZWQgZnJvbSB1c2VyIHNwYWNlICovCitzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9fZGF0YSB7
CisJaW50IGtleXNpemU7ICAgIC8qIHVuaW5zdGFudGlhdGVkIGtleSBzaXplICovCisJX191OCAq
IGtleTsgICAgIC8qIHVuaW5zdGFudGlhdGVkIGtleSAqLworCWludCBrZXlpZF9zaXplOyAvKiBz
aXplIG9mIHBhc3NwaHJhc2UgKi8KKwlfX3U4ICoga2V5aWQ7ICAgLyogcGFzc3BocmFzZSAqLwor
fTsKKworLyogVGhpcyBvYmplY3QgY29udGFpbnMgYWxsIG5lZWRlZCBpbmZyYXN0cnVjdHVyZSB0
byBpbXBsZW1lbnQKKyAgIGNpcGhlciB0cmFuc2Zvcm0uIFRoaXMgaXMgb3BlcmF0ZWQgKGFsbG9j
YXRpbmcsIGluaGVyaXRpbmcsCisgICB2YWxpZGF0aW5nLCBiaW5kaW5nIHRvIGhvc3QgaW5vZGUs
IGV0Yy4uKSBieSByZWlzZXI0IGtleSBtYW5hZ2VyLgorCisgICBUaGlzIGluZm8gY2FuIGJlIGFs
bG9jYXRlZCBpbiB0d28gY2FzZXM6CisgICAxLiBpbXBvcnRpbmcgYSBrZXkgZnJvbSB1c2VyIHNw
YWNlLgorICAgMi4gcmVhZGluZyBpbm9kZSBmcm9tIGRpc2sgKi8KK3N0cnVjdCByZWlzZXI0X2Ny
eXB0b19pbmZvIHsKKwlzdHJ1Y3QgaW5vZGUgKiBob3N0OworCXN0cnVjdCBjcnlwdG9faGFzaCAg
ICAgICogZGlnZXN0OworCXN0cnVjdCBjcnlwdG9fYmxrY2lwaGVyICogY2lwaGVyOworI2lmIDAK
KwljaXBoZXJfa2V5X3BsdWdpbiAqIGtwbHVnOyAvKiBrZXkgbWFuYWdlciAqLworI2VuZGlmCisJ
X191OCAqIGtleWlkOyAgICAgICAgICAgICAgLyoga2V5IGZpbmdlcnByaW50LCBjcmVhdGVkIGJ5
IGRpZ2VzdCBwbHVnaW4sCisJCQkJICAgICAgdXNpbmcgdW5pbnN0YW50aWF0ZWQga2V5IGFuZCBw
YXNzcGhyYXNlLgorCQkJCSAgICAgIHN1cHBvc2VkIHRvIGJlIHN0b3JlZCBpbiBkaXNrIHN0YXQt
ZGF0YSAqLworCWludCBpbnN0OyAgICAgICAgICAgICAgICAgIC8qIHRoaXMgaW5kaWNhdGVzIGlm
IHRoZSBjaXBoZXIga2V5IGlzCisJCQkJICAgICAgaW5zdGFudGlhdGVkIChjYXNlIDEgYWJvdmUp
ICovCisJaW50IGtleXNpemU7ICAgICAgICAgICAgICAgLyogdW5pbnN0YW50aWF0ZWQga2V5IHNp
emUgKGJ5dGVzKSwgc3VwcG9zZWQKKwkJCQkgICAgICB0byBiZSBzdG9yZWQgaW4gZGlzayBzdGF0
LWRhdGEgKi8KKwlpbnQga2V5bG9hZF9jb3VudDsgICAgICAgICAvKiBudW1iZXIgb2YgdGhlIG9i
amVjdHMgd2hpY2ggaGFzIHRoaXMKKwkJCQkgICAgICBjcnlwdG8tc3RhdCBhdHRhY2hlZCAqLwor
fTsKKworI2VuZGlmIC8qIF9fRlNfUkVJU0VSNF9DUllQVF9IX18gKi8KKworLyoKKyAgIExvY2Fs
IHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6
ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29s
dW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9jcnlwdG8vZGln
ZXN0LmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2NyeXB0by9kaWdlc3QuYwotLS0g
bGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vY3J5cHRvL2RpZ2VzdC5jCTE5NzAt
MDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2Vy
NC9wbHVnaW4vY3J5cHRvL2RpZ2VzdC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU4MjIyMjE2ICsw
MTAwCkBAIC0wLDAgKzEsNTggQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhh
bnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyog
cmVpc2VyNCBkaWdlc3QgdHJhbnNmb3JtIHBsdWdpbiAoaXMgdXNlZCBieSBjcnlwdGNvbXByZXNz
IG9iamVjdCBwbHVnaW4pICovCisvKiBFRFdBUkQtRklYTUUtSEFOUzogYW5kIGl0IGRvZXMgd2hh
dD8gYSBkaWdlc3QgaXMgYSB3aGF0PyAqLworI2luY2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5j
bHVkZSAiLi4vcGx1Z2luX2hlYWRlci5oIgorI2luY2x1ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1
ZGUgIi4uL2ZpbGUvY3J5cHRjb21wcmVzcy5oIgorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4K
KworZXh0ZXJuIGRpZ2VzdF9wbHVnaW4gZGlnZXN0X3BsdWdpbnNbTEFTVF9ESUdFU1RfSURdOwor
CitzdGF0aWMgc3RydWN0IGNyeXB0b19oYXNoICogYWxsb2Nfc2hhMjU2ICh2b2lkKQoreworI2lm
IFJFSVNFUjRfU0hBMjU2CisJcmV0dXJuIGNyeXB0b19hbGxvY19oYXNoICgic2hhMjU2IiwgMCwg
Q1JZUFRPX0FMR19BU1lOQyk7CisjZWxzZQorCXdhcm5pbmcoImVkd2FyZC0xNDE4IiwgInNoYTI1
NiB1bnN1cHBvcnRlZCIpOworCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworI2VuZGlmCit9CisK
K3N0YXRpYyB2b2lkIGZyZWVfc2hhMjU2IChzdHJ1Y3QgY3J5cHRvX2hhc2ggKiB0Zm0pCit7Cisj
aWYgUkVJU0VSNF9TSEEyNTYKKwljcnlwdG9fZnJlZV9oYXNoKHRmbSk7CisjZW5kaWYKKwlyZXR1
cm47Cit9CisKKy8qIGRpZ2VzdCBwbHVnaW5zICovCitkaWdlc3RfcGx1Z2luIGRpZ2VzdF9wbHVn
aW5zW0xBU1RfRElHRVNUX0lEXSA9IHsKKwlbU0hBMjU2XzMyX0RJR0VTVF9JRF0gPSB7CisJCS5o
ID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0RJR0VTVF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9
IFNIQTI1Nl8zMl9ESUdFU1RfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAic2hh
MjU2XzMyIiwKKwkJCS5kZXNjID0gInNoYTI1Nl8zMiBkaWdlc3QgdHJhbnNmb3JtIiwKKwkJCS5s
aW5rYWdlID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5maXBzaXplID0gc2l6ZW9mKF9fdTMyKSwK
KwkJLmFsbG9jID0gYWxsb2Nfc2hhMjU2LAorCQkuZnJlZSA9IGZyZWVfc2hhMjU2CisJfQorfTsK
KworLyoKKyAgTG9jYWwgdmFyaWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgor
ICBtb2RlLW5hbWU6ICJMQyIKKyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRoOiA4Cisg
IGZpbGwtY29sdW1uOiAxMjAKKyAgc2Nyb2xsLXN0ZXA6IDEKKyAgRW5kOgorKi8KZGlmZiAtdXJO
IC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZGly
L2Rpci5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXIvZGlyLmgKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2Rpci9kaXIuaAkxOTcwLTAxLTAxIDAxOjAw
OjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2Rp
ci9kaXIuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1ODIyMjIxNiArMDEwMApAQCAtMCwwICsxLDM2
IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMywgMjAwNCBieSBIYW5zIFJlaXNlciwg
bGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisvKiB0aGlzIGZp
bGUgY29udGFpbnMgZGVjbGFyYXRpb25zIG9mIG1ldGhvZHMgaW1wbGVtZW50aW5nIGRpcmVjdG9y
eSBwbHVnaW5zICovCisKKyNpZiAhZGVmaW5lZCggX19SRUlTRVI0X0RJUl9IX18gKQorI2RlZmlu
ZSBfX1JFSVNFUjRfRElSX0hfXworCisvKiNpbmNsdWRlICIuLi8uLi9rZXkuaCIKKworI2luY2x1
ZGUgPGxpbnV4L2ZzLmg+Ki8KKworLyogZGVjbGFyYXRpb25zIG9mIGZ1bmN0aW9ucyBpbXBsZW1l
bnRpbmcgSEFTSEVEX0RJUl9QTFVHSU5fSUQgZGlyIHBsdWdpbiAqLworCisvKiAiaGFzaGVkIiBk
aXJlY3RvcnkgbWV0aG9kcyBvZiBkaXIgcGx1Z2luICovCit2b2lkIGJ1aWxkX2VudHJ5X2tleV9o
YXNoZWQoY29uc3Qgc3RydWN0IGlub2RlICosIGNvbnN0IHN0cnVjdCBxc3RyICosCisJCQkgICAg
cmVpc2VyNF9rZXkgKik7CisKKy8qIGRlY2xhcmF0aW9ucyBvZiBmdW5jdGlvbnMgaW1wbGVtZW50
aW5nIFNFRUtBQkxFX0hBU0hFRF9ESVJfUExVR0lOX0lEIGRpciBwbHVnaW4gKi8KKworLyogInNl
ZWthYmxlIiBkaXJlY3RvcnkgbWV0aG9kcyBvZiBkaXIgcGx1Z2luICovCit2b2lkIGJ1aWxkX2Vu
dHJ5X2tleV9zZWVrYWJsZShjb25zdCBzdHJ1Y3QgaW5vZGUgKiwgY29uc3Qgc3RydWN0IHFzdHIg
KiwKKwkJCSAgICAgIHJlaXNlcjRfa2V5ICopOworCisvKiBfX1JFSVNFUjRfRElSX0hfXyAqLwor
I2VuZGlmCisKKy8qCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxl
OiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFi
LXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1u
by1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXIvaGFz
aGVkX2Rpci5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXIvaGFzaGVkX2Rpci5j
Ci0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXIvaGFzaGVkX2Rpci5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vZGlyL2hhc2hlZF9kaXIuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1ODIy
MjIxNiArMDEwMApAQCAtMCwwICsxLDgxIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAw
MywgMjAwNCBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0
L1JFQURNRSAqLworCisvKiBEaXJlY3RvcnkgcGx1Z2luIHVzaW5nIGhhc2hlcyAoc2VlIGZzL3Jl
aXNlcjQvcGx1Z2luL2hhc2guYykgdG8gbWFwIGZpbGUKKyAgIG5hbWVzIHRvIHRoZSBmaWxlcy4g
Ki8KKworLyoKKyAqIEhhc2hlZCBkaXJlY3RvcnkgbG9naWNhbGx5IGNvbnNpc3RzIG9mIHBlcnNp
c3RlbnQgZGlyZWN0b3J5CisgKiBlbnRyaWVzLiBEaXJlY3RvcnkgZW50cnkgaXMgYSBwYWlyIG9m
IGEgZmlsZSBuYW1lIGFuZCBhIGtleSBvZiBzdGF0LWRhdGEgb2YKKyAqIGEgZmlsZSB0aGF0IGhh
cyB0aGlzIG5hbWUgaW4gdGhlIGdpdmVuIGRpcmVjdG9yeS4KKyAqCisgKiBEaXJlY3RvcnkgZW50
cmllcyBhcmUgc3RvcmVkIGluIHRoZSB0cmVlIGluIHRoZSBmb3JtIG9mIGRpcmVjdG9yeQorICog
aXRlbXMuIERpcmVjdG9yeSBpdGVtIHNob3VsZCBpbXBsZW1lbnQgZGlyX2VudHJ5X29wcyBwb3J0
aW9uIG9mIGl0ZW0gcGx1Z2luCisgKiBpbnRlcmZhY2UgKHNlZSBwbHVnaW4vaXRlbS9pdGVtLmgp
LiBIYXNoZWQgZGlyZWN0b3J5IGludGVyYWN0cyB3aXRoCisgKiBkaXJlY3RvcnkgaXRlbSBwbHVn
aW4gZXhjbHVzaXZlbHkgdGhyb3VnaCBkaXJfZW50cnlfb3BzIG9wZXJhdGlvbnMuCisgKgorICog
Q3VycmVudGx5IHRoZXJlIGFyZSB0d28gaW1wbGVtZW50YXRpb25zIG9mIGRpcmVjdG9yeSBpdGVt
czogInNpbXBsZQorICogZGlyZWN0b3J5IGl0ZW0iIChwbHVnaW4vaXRlbS9zZGUuW2NoXSksIGFu
ZCAiY29tcG91bmQgZGlyZWN0b3J5IGl0ZW0iCisgKiAocGx1Z2luL2l0ZW0vY2RlLltjaF0pIHdp
dGggdGhlIGxhdHRlciBiZWluZyB0aGUgZGVmYXVsdC4KKyAqCisgKiBUaGVyZSBpcywgaG93ZXZl
ciBzb21lIGRlbGljYXRlIHdheSB0aHJvdWdoIHdoaWNoIGRpcmVjdG9yeSBjb2RlIGludGVyZmVy
ZXMKKyAqIHdpdGggaXRlbSBwbHVnaW46IGtleSBhc3NpZ25tZW50IHBvbGljeS4gQSBrZXkgZm9y
IGEgZGlyZWN0b3J5IGl0ZW0gaXMKKyAqIGNob3NlbiBieSBkaXJlY3RvcnkgY29kZSwgYW5kIGFz
IGRlc2NyaWJlZCBpbiBrYXNzaWduLmMsIHRoaXMga2V5IGNvbnRhaW5zCisgKiBhIHBvcnRpb24g
b2YgZmlsZSBuYW1lLiBEaXJlY3RvcnkgaXRlbSB1c2VzIHRoaXMga25vd2xlZGdlIHRvIGF2b2lk
IHN0b3JpbmcKKyAqIHRoaXMgcG9ydGlvbiBvZiBmaWxlIG5hbWUgdHdpY2U6IGluIHRoZSBrZXkg
YW5kIGluIHRoZSBkaXJlY3RvcnkgaXRlbSBib2R5LgorICoKKyAqLworCisjaW5jbHVkZSAiLi4v
Li4vaW5vZGUuaCIKKwordm9pZCBjb21wbGV0ZV9lbnRyeV9rZXkoY29uc3Qgc3RydWN0IGlub2Rl
ICosIGNvbnN0IGNoYXIgKm5hbWUsCisJCQlpbnQgbGVuLCByZWlzZXI0X2tleSAqIHJlc3VsdCk7
CisKKy8qIHRoaXMgaXMgaW1wbGVtZW50YXRpb24gb2YgYnVpbGRfZW50cnlfa2V5IG1ldGhvZCBv
ZiBkaXIKKyAgIHBsdWdpbiBmb3IgSEFTSEVEX0RJUl9QTFVHSU5fSUQKKyAqLwordm9pZCBidWls
ZF9lbnRyeV9rZXlfaGFzaGVkKGNvbnN0IHN0cnVjdCBpbm9kZSAqZGlyLAkvKiBkaXJlY3Rvcnkg
d2hlcmUgZW50cnkgaXMKKwkJCQkJCQkgKiAob3Igd2lsbCBiZSkgaW4uKi8KKwkJCSAgICBjb25z
dCBzdHJ1Y3QgcXN0ciAqcW5hbWUsCS8qIG5hbWUgb2YgZmlsZSByZWZlcmVuY2VkCisJCQkJCQkJ
ICogYnkgdGhpcyBlbnRyeSAqLworCQkJICAgIHJlaXNlcjRfa2V5ICogcmVzdWx0CS8qIHJlc3Vs
dGluZyBrZXkgb2YgZGlyZWN0b3J5CisJCQkJCQkJICogZW50cnkgKi8gKQoreworCWNvbnN0IGNo
YXIgKm5hbWU7CisJaW50IGxlbjsKKworCWFzc2VydCgibmlraXRhLTExMzkiLCBkaXIgIT0gTlVM
TCk7CisJYXNzZXJ0KCJuaWtpdGEtMTE0MCIsIHFuYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTExNDEiLCBxbmFtZS0+bmFtZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMTQyIiwg
cmVzdWx0ICE9IE5VTEwpOworCisJbmFtZSA9IHFuYW1lLT5uYW1lOworCWxlbiA9IHFuYW1lLT5s
ZW47CisKKwlhc3NlcnQoIm5pa2l0YS0yODY3Iiwgc3RybGVuKG5hbWUpID09IGxlbik7CisKKwly
ZWlzZXI0X2tleV9pbml0KHJlc3VsdCk7CisJLyogbG9jYWxpdHkgb2YgZGlyZWN0b3J5IGVudHJ5
J3Mga2V5IGlzIG9iamVjdGlkIG9mIHBhcmVudAorCSAgIGRpcmVjdG9yeSAqLworCXNldF9rZXlf
bG9jYWxpdHkocmVzdWx0LCBnZXRfaW5vZGVfb2lkKGRpcikpOworCS8qIG1pbm9yIHBhY2tpbmcg
bG9jYWxpdHkgaXMgY29uc3RhbnQgKi8KKwlzZXRfa2V5X3R5cGUocmVzdWx0LCBLRVlfRklMRV9O
QU1FX01JTk9SKTsKKwkvKiBkb3QgaXMgc3BlY2lhbCBjYXNlLS0td2UgYWx3YXlzIHdhbnQgaXQg
dG8gYmUgZmlyc3QgZW50cnkgaW4KKwkgICBhIGRpcmVjdG9yeS4gQWN0dWFsbHksIHdlIGp1c3Qg
d2FudCB0byBoYXZlIHNtYWxsZXN0CisJICAgZGlyZWN0b3J5IGVudHJ5LgorCSAqLworCWlmIChs
ZW4gPT0gMSAmJiBuYW1lWzBdID09ICcuJykKKwkJcmV0dXJuOworCisJLyogaW5pdGlhbGl6ZSBw
YXJ0IG9mIGVudHJ5IGtleSB3aGljaCBkZXBlbmRzIG9uIGZpbGUgbmFtZSAqLworCWNvbXBsZXRl
X2VudHJ5X2tleShkaXIsIG5hbWUsIGxlbiwgcmVzdWx0KTsKK30KKworLyogTG9jYWwgdmFyaWFi
bGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgor
ICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEy
MAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9wbHVnaW4vZGlyL01ha2VmaWxlIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3BsdWdpbi9kaXIvTWFrZWZpbGUKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1
Z2luL2Rpci9NYWtlZmlsZQkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2Rpci9NYWtlZmlsZQkyMDIwLTAyLTA1IDIw
OjUzOjQxLjQ1ODIyMjIxNiArMDEwMApAQCAtMCwwICsxLDUgQEAKK29iai0kKENPTkZJR19SRUlT
RVI0X0ZTKSArPSBkaXJfcGx1Z2lucy5vCisKK2Rpcl9wbHVnaW5zLW9ianMgOj0JXAorCWhhc2hl
ZF9kaXIubwlcCisJc2Vla2FibGVfZGlyLm8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGlu
dXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZGlyL3NlZWthYmxlX2Rpci5jIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXIvc2Vla2FibGVfZGlyLmMKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2Rpci9zZWVrYWJsZV9kaXIuYwkxOTcwLTAxLTAx
IDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1
Z2luL2Rpci9zZWVrYWJsZV9kaXIuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1ODIyMjIxNiArMDEw
MApAQCAtMCwwICsxLDQ2IEBACisvKiBDb3B5cmlnaHQgMjAwNSBieSBIYW5zIFJlaXNlciwgbGlj
ZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAiLi4v
Li4vaW5vZGUuaCIKKworLyogdGhpcyBpcyBpbXBsZW1lbnRhdGlvbiBvZiBidWlsZF9lbnRyeV9r
ZXkgbWV0aG9kIG9mIGRpcgorICAgcGx1Z2luIGZvciBTRUVLQUJMRV9IQVNIRURfRElSX1BMVUdJ
Tl9JRAorICAgVGhpcyBpcyBmb3IgZGlyZWN0b3JpZXMgd2hlcmUgd2Ugd2FudCByZXBlYXRhYmxl
IGFuZCByZXN0YXJ0YWJsZSByZWFkZGlyKCkKKyAgIGV2ZW4gaW4gY2FzZSAzMmJpdCB1c2VyIGxl
dmVsIHN0cnVjdCBkaXJlbnQgKHJlYWRkaXIoMykpLgorKi8KK3ZvaWQKK2J1aWxkX2VudHJ5X2tl
eV9zZWVrYWJsZShjb25zdCBzdHJ1Y3QgaW5vZGUgKmRpciwgY29uc3Qgc3RydWN0IHFzdHIgKm5h
bWUsCisJCQkgcmVpc2VyNF9rZXkgKiByZXN1bHQpCit7CisJb2lkX3Qgb2JqZWN0aWQ7CisKKwlh
c3NlcnQoIm5pa2l0YS0yMjgzIiwgZGlyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTIyODQi
LCBuYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTIyODUiLCBuYW1lLT5uYW1lICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTIyODYiLCByZXN1bHQgIT0gTlVMTCk7CisKKwlyZWlzZXI0
X2tleV9pbml0KHJlc3VsdCk7CisJLyogbG9jYWxpdHkgb2YgZGlyZWN0b3J5IGVudHJ5J3Mga2V5
IGlzIG9iamVjdGlkIG9mIHBhcmVudAorCSAgIGRpcmVjdG9yeSAqLworCXNldF9rZXlfbG9jYWxp
dHkocmVzdWx0LCBnZXRfaW5vZGVfb2lkKGRpcikpOworCS8qIG1pbm9yIHBhY2tpbmcgbG9jYWxp
dHkgaXMgY29uc3RhbnQgKi8KKwlzZXRfa2V5X3R5cGUocmVzdWx0LCBLRVlfRklMRV9OQU1FX01J
Tk9SKTsKKwkvKiBkb3QgaXMgc3BlY2lhbCBjYXNlLS0td2UgYWx3YXlzIHdhbnQgaXQgdG8gYmUg
Zmlyc3QgZW50cnkgaW4KKwkgICBhIGRpcmVjdG9yeS4gQWN0dWFsbHksIHdlIGp1c3Qgd2FudCB0
byBoYXZlIHNtYWxsZXN0CisJICAgZGlyZWN0b3J5IGVudHJ5LgorCSAqLworCWlmICgobmFtZS0+
bGVuID09IDEpICYmIChuYW1lLT5uYW1lWzBdID09ICcuJykpCisJCXJldHVybjsKKworCS8qIG9i
amVjdGlkIG9mIGtleSBpcyAzMSBsb3dlc3QgYml0cyBvZiBoYXNoLiAqLworCW9iamVjdGlkID0K
KwkgICAgaW5vZGVfaGFzaF9wbHVnaW4oZGlyKS0+aGFzaChuYW1lLT5uYW1lLAorCQkJCQkgKGlu
dCluYW1lLT5sZW4pICYgMHg3ZmZmZmZmZjsKKworCWFzc2VydCgibmlraXRhLTIzMDMiLCAhKG9i
amVjdGlkICYgfktFWV9PQkpFQ1RJRF9NQVNLKSk7CisJc2V0X2tleV9vYmplY3RpZChyZXN1bHQs
IG9iamVjdGlkKTsKKworCS8qIG9mZnNldCBpcyBhbHdheXMgMC4gKi8KKwlzZXRfa2V5X29mZnNl
dChyZXN1bHQsIChfX3U2NCkgMCk7CisJcmV0dXJuOworfQpkaWZmIC11ck4gLS1uby1kZXJlZmVy
ZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXJfcGx1Z2luX2NvbW1v
bi5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXJfcGx1Z2luX2NvbW1vbi5jCi0t
LSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXJfcGx1Z2luX2NvbW1vbi5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vZGlyX3BsdWdpbl9jb21tb24uYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1
OTIyMjIyNCArMDEwMApAQCAtMCwwICsxLDg2NSBAQAorLyogQ29weXJpZ2h0IDIwMDUgYnkgSGFu
cyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICAgcmVpc2VyNC9SRUFETUUgKi8KKwor
LyogdGhpcyBmaWxlIGNvbnRhaW5zIHR5cGljYWwgaW1wbGVtZW50YXRpb25zIGZvciBtb3N0IG9m
IG1ldGhvZHMgb2YKKyAgIGRpcmVjdG9yeSBwbHVnaW4KKyovCisKKyNpbmNsdWRlICIuLi9pbm9k
ZS5oIgorCitpbnQgcmVpc2VyNF9maW5kX2VudHJ5KHN0cnVjdCBpbm9kZSAqZGlyLCBzdHJ1Y3Qg
ZGVudHJ5ICpuYW1lLAorCSAgICAgICBsb2NrX2hhbmRsZSAqICwgem5vZGVfbG9ja19tb2RlLCBy
ZWlzZXI0X2Rpcl9lbnRyeV9kZXNjICopOworaW50IHJlaXNlcjRfbG9va3VwX25hbWUoc3RydWN0
IGlub2RlICpwYXJlbnQsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwKKwkJCXJlaXNlcjRfa2V5ICog
a2V5KTsKK3ZvaWQgY2hlY2tfbGlnaHRfd2VpZ2h0KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVj
dCBpbm9kZSAqcGFyZW50KTsKKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2Yg
Z2V0X3BhcmVudCBtZXRob2Qgb2YgZGlyIHBsdWdpbgorICAgdGhpcyBpcyB1c2VkIGJ5IE5GUyBr
ZXJuZWwgc2VydmVyIHRvICJjbGltYiIgdXAgZGlyZWN0b3J5IHRyZWUgdG8KKyAgIGNoZWNrIHBl
cm1pc3Npb25zCisgKi8KK3N0cnVjdCBkZW50cnkgKmdldF9wYXJlbnRfY29tbW9uKHN0cnVjdCBp
bm9kZSAqY2hpbGQpCit7CisJc3RydWN0IHN1cGVyX2Jsb2NrICpzOworCXN0cnVjdCBpbm9kZSAq
cGFyZW50OworCXN0cnVjdCBkZW50cnkgZG90ZG90OworCXN0cnVjdCBkZW50cnkgKmRlbnRyeTsK
KwlyZWlzZXI0X2tleSBrZXk7CisJaW50IHJlc3VsdDsKKworCS8qCisJICogbG9va3VwIGRvdGRv
dCBlbnRyeS4KKwkgKi8KKworCXMgPSBjaGlsZC0+aV9zYjsKKwltZW1zZXQoJmRvdGRvdCwgMCwg
c2l6ZW9mKGRvdGRvdCkpOworCWRvdGRvdC5kX25hbWUubmFtZSA9ICIuLiI7CisJZG90ZG90LmRf
bmFtZS5sZW4gPSAyOworCWRvdGRvdC5kX29wID0gJmdldF9zdXBlcl9wcml2YXRlKHMpLT5vcHMu
ZGVudHJ5OworCisJcmVzdWx0ID0gcmVpc2VyNF9sb29rdXBfbmFtZShjaGlsZCwgJmRvdGRvdCwg
JmtleSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gRVJSX1BUUihyZXN1bHQpOworCisJ
cGFyZW50ID0gcmVpc2VyNF9pZ2V0KHMsICZrZXksIDEpOworCWlmICghSVNfRVJSKHBhcmVudCkp
IHsKKwkJLyoKKwkJICogRklYTUUtTklLSVRBIGR1YmlvdXM6IGF0dHJpYnV0ZXMgYXJlIGluaGVy
aXRlZCBmcm9tIEBjaGlsZAorCQkgKiB0byBAcGFyZW50LiBCdXQ6CisJCSAqCisJCSAqICAgICAo
KikgdGhpcyBpcyB0aGUgb25seSB0aGlzIHdlIGNhbiBkbworCQkgKgorCQkgKiAgICAgKCopIGF0
dHJpYnV0ZXMgb2YgbGlnaHQtd2VpZ2h0IG9iamVjdCBhcmUgaW5oZXJpdGVkCisJCSAqICAgICBm
cm9tIGEgcGFyZW50IHRocm91Z2ggd2hpY2ggb2JqZWN0IHdhcyBsb29rZWQgdXAgZmlyc3QsCisJ
CSAqICAgICBzbyBpdCBpcyBhbWJpZ3VvdXMgYW55d2F5LgorCQkgKgorCQkgKi8KKwkJY2hlY2tf
bGlnaHRfd2VpZ2h0KHBhcmVudCwgY2hpbGQpOworCQlyZWlzZXI0X2lnZXRfY29tcGxldGUocGFy
ZW50KTsKKwkJZGVudHJ5ID0gZF9vYnRhaW5fYWxpYXMocGFyZW50KTsKKwkJaWYgKCFJU19FUlIo
ZGVudHJ5KSkKKwkJCWRlbnRyeS0+ZF9vcCA9ICZnZXRfc3VwZXJfcHJpdmF0ZShzKS0+b3BzLmRl
bnRyeTsKKwl9IGVsc2UgaWYgKFBUUl9FUlIocGFyZW50KSA9PSAtRU5PRU5UKQorCQlkZW50cnkg
PSBFUlJfUFRSKFJFVEVSUigtRVNUQUxFKSk7CisJZWxzZQorCQlkZW50cnkgPSAodm9pZCAqKXBh
cmVudDsKKwlyZXR1cm4gZGVudHJ5OworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRh
dGlvbiBvZiBpc19uYW1lX2FjY2VwdGFibGUgbWV0aG9kIG9mIGRpcgorICAgcGx1Z2luCisgKi8K
K2ludCBpc19uYW1lX2FjY2VwdGFibGVfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUs
IC8qIGRpcmVjdG9yeSB0byBjaGVjayovCisJCQkgICAgICBjb25zdCBjaGFyICpuYW1lIFVOVVNF
RF9BUkcsIC8qIG5hbWUgdG8gY2hlY2sgKi8KKwkJCSAgICAgIGludCBsZW4vKiBAbmFtZSdzIGxl
bmd0aCAqLykKK3sKKwlhc3NlcnQoIm5pa2l0YS03MzMiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS03MzQiLCBuYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTczNSIsIGxl
biA+IDApOworCisJcmV0dXJuIGxlbiA8PSByZWlzZXI0X21heF9maWxlbmFtZV9sZW4oaW5vZGUp
OworfQorCisvKiB0aGVyZSBpcyBubyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgYnVpbGRfZW50
cnlfa2V5IG1ldGhvZCBvZiBkaXIKKyAgIHBsdWdpbi4gU2VlIHBsdWdpbi9kaXIvaGFzaGVkX2Rp
ci5jOmJ1aWxkX2VudHJ5X2tleV9oYXNoZWQoKSBvcgorICAgcGx1Z2luL2Rpci9zZWVrYWJsZS5j
OmJ1aWxkX2VudHJ5X2tleV9zZWVrYWJsZSgpIGZvciBleGFtcGxlCisqLworCisvKiB0aGlzIGlz
IGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBidWlsZF9yZWFkZGlyX2tleSBtZXRob2Qgb2YgZGly
CisgICBwbHVnaW4KKyAgIHNlZSByZWlzZXI0X3JlYWRkaXJfY29tbW9uIGZvciBtb3JlIGRldGFp
bHMKKyovCitpbnQgYnVpbGRfcmVhZGRpcl9rZXlfY29tbW9uKHN0cnVjdCBmaWxlICpkaXIgLyog
ZGlyZWN0b3J5IGJlaW5nIHJlYWQgKi8gLAorCQkJICAgICByZWlzZXI0X2tleSAqIHJlc3VsdC8q
IHdoZXJlIHRvIHN0b3JlIGtleSAqLykKK3sKKwlyZWlzZXI0X2ZpbGVfZnNkYXRhICpmZGF0YTsK
KwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCisJYXNzZXJ0KCJuaWtpdGEtMTM2MSIsIGRpciAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzYyIiwgcmVzdWx0ICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTEzNjMiLCBkaXItPmZfcGF0aC5kZW50cnkgIT0gTlVMTCk7CisJaW5vZGUgPSBmaWxl
X2lub2RlKGRpcik7CisJYXNzZXJ0KCJuaWtpdGEtMTM3MyIsIGlub2RlICE9IE5VTEwpOworCisJ
ZmRhdGEgPSByZWlzZXI0X2dldF9maWxlX2ZzZGF0YShkaXIpOworCWlmIChJU19FUlIoZmRhdGEp
KQorCQlyZXR1cm4gUFRSX0VSUihmZGF0YSk7CisJYXNzZXJ0KCJuaWtpdGEtMTM2NCIsIGZkYXRh
ICE9IE5VTEwpOworCXJldHVybiBleHRyYWN0X2tleV9mcm9tX2RlX2lkKGdldF9pbm9kZV9vaWQo
aW5vZGUpLAorCQkJCSAgICAgICZmZGF0YS0+ZGlyLnJlYWRkaXIucG9zaXRpb24uCisJCQkJICAg
ICAgZGlyX2VudHJ5X2tleSwgcmVzdWx0KTsKKworfQorCit2b2lkIHJlaXNlcjRfYWRqdXN0X2Rp
cl9maWxlKHN0cnVjdCBpbm9kZSAqLCBjb25zdCBzdHJ1Y3QgZGVudHJ5ICosIGludCBvZmZzZXQs
CisJCQkgICAgIGludCBhZGopOworCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhZGRfZW50cnkgbWV0aG9kIG9mIGRpciBwbHVnaW4KKyovCitpbnQgcmVpc2VyNF9hZGRfZW50
cnlfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCAvKiBkaXJlY3RvcnkgdG8gYWRkIG5ldyBu
YW1lCisJCQkJCQkgICAgKiBpbiAqLworCQkJICAgICBzdHJ1Y3QgZGVudHJ5ICp3aGVyZSwJLyog
bmV3IG5hbWUgKi8KKwkJCSAgICAgcmVpc2VyNF9vYmplY3RfY3JlYXRlX2RhdGEgKiBkYXRhLCAv
KiBwYXJhbWV0ZXJzIG9mCisJCQkJCQkJCSogIG5ldyBvYmplY3QgKi8KKwkJCSAgICAgcmVpc2Vy
NF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5IC8qIHBhcmFtZXRlcnMgb2YKKwkJCQkJCQkgICAgICog
bmV3IGRpcmVjdG9yeQorCQkJCQkJCSAgICAgKiBlbnRyeSAqLykKK3sKKwlpbnQgcmVzdWx0Owor
CWNvb3JkX3QgKmNvb3JkOworCWxvY2tfaGFuZGxlIGxoOworCXN0cnVjdCByZWlzZXI0X2RlbnRy
eV9mc2RhdGEgKmZzZGF0YTsKKwlyZWlzZXI0X2Jsb2NrX25yIHJlc2VydmU7CisKKwlhc3NlcnQo
Im5pa2l0YS0xMTE0Iiwgb2JqZWN0ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEyNTAiLCB3
aGVyZSAhPSBOVUxMKTsKKworCWZzZGF0YSA9IHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEod2hl
cmUpOworCWlmICh1bmxpa2VseShJU19FUlIoZnNkYXRhKSkpCisJCXJldHVybiBQVFJfRVJSKGZz
ZGF0YSk7CisKKwlyZXNlcnZlID0gaW5vZGVfZGlyX3BsdWdpbihvYmplY3QpLT5lc3RpbWF0ZS5h
ZGRfZW50cnkob2JqZWN0KTsKKwlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKHJlc2VydmUsIEJBX0NB
Tl9DT01NSVQpKQorCQlyZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCisJaW5pdF9saCgmbGgpOwor
CWNvb3JkID0gJmZzZGF0YS0+ZGVjLmVudHJ5X2Nvb3JkOworCWNvb3JkX2NsZWFyX2lwbHVnKGNv
b3JkKTsKKworCS8qIGNoZWNrIGZvciB0aGlzIGVudHJ5IGluIGEgZGlyZWN0b3J5LiBUaGlzIGlz
IHBsdWdpbiBtZXRob2QuICovCisJcmVzdWx0ID0gcmVpc2VyNF9maW5kX2VudHJ5KG9iamVjdCwg
d2hlcmUsICZsaCwgWk5PREVfV1JJVEVfTE9DSywKKwkJCQkgICAgZW50cnkpOworCWlmIChsaWtl
bHkocmVzdWx0ID09IC1FTk9FTlQpKSB7CisJCS8qIGFkZCBuZXcgZW50cnkuIEp1c3QgcGFzcyBj
b250cm9sIHRvIHRoZSBkaXJlY3RvcnkKKwkJICAgaXRlbSBwbHVnaW4uICovCisJCWFzc2VydCgi
bmlraXRhLTE3MDkiLCBpbm9kZV9kaXJfaXRlbV9wbHVnaW4ob2JqZWN0KSk7CisJCWFzc2VydCgi
bmlraXRhLTIyMzAiLCBjb29yZC0+bm9kZSA9PSBsaC5ub2RlKTsKKwkJcmVpc2VyNF9zZWFsX2Rv
bmUoJmZzZGF0YS0+ZGVjLmVudHJ5X3NlYWwpOworCQlyZXN1bHQgPQorCQkgICAgaW5vZGVfZGly
X2l0ZW1fcGx1Z2luKG9iamVjdCktPnMuZGlyLmFkZF9lbnRyeShvYmplY3QsCisJCQkJCQkJCSAg
IGNvb3JkLCAmbGgsCisJCQkJCQkJCSAgIHdoZXJlLAorCQkJCQkJCQkgICBlbnRyeSk7CisJCWlm
IChyZXN1bHQgPT0gMCkgeworCQkJcmVpc2VyNF9hZGp1c3RfZGlyX2ZpbGUob2JqZWN0LCB3aGVy
ZSwKKwkJCQkJCWZzZGF0YS0+ZGVjLnBvcyArIDEsICsxKTsKKwkJCUlOT0RFX0lOQ19GSUVMRChv
YmplY3QsIGlfc2l6ZSk7CisJCX0KKwl9IGVsc2UgaWYgKHJlc3VsdCA9PSAwKSB7CisJCWFzc2Vy
dCgibmlraXRhLTIyMzIiLCBjb29yZC0+bm9kZSA9PSBsaC5ub2RlKTsKKwkJcmVzdWx0ID0gUkVU
RVJSKC1FRVhJU1QpOworCX0KKwlkb25lX2xoKCZsaCk7CisKKwlyZXR1cm4gcmVzdWx0OworfQor
CisvKioKKyAqIHJlbV9lbnRyeSAtIHJlbW92ZSBlbnRyeSBmcm9tIGRpcmVjdG9yeSBpdGVtCisg
KiBAZGlyOgorICogQGRlbnRyeToKKyAqIEBlbnRyeToKKyAqIEBjb29yZDoKKyAqIEBsaDoKKyAq
CisgKiBDaGVja3MgdGhhdCBjb29yZGluYXRlIEBjb29yZCBpcyBzZXQgcHJvcGVybHkgYW5kIGNh
bGxzIGl0ZW0gcGx1Z2luCisgKiBtZXRob2QgdG8gY3V0IGVudHJ5LgorICovCitzdGF0aWMgaW50
CityZW1fZW50cnkoc3RydWN0IGlub2RlICpkaXIsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwKKwkg
IHJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgKiBlbnRyeSwgY29vcmRfdCAqY29vcmQsIGxvY2tfaGFu
ZGxlICogbGgpCit7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCXN0cnVjdCBpbm9kZSAqY2hpbGQ7
CisKKwlpcGx1ZyA9IGlub2RlX2Rpcl9pdGVtX3BsdWdpbihkaXIpOworCWNoaWxkID0gZGVudHJ5
LT5kX2lub2RlOworCWFzc2VydCgibmlraXRhLTMzOTkiLCBjaGlsZCAhPSBOVUxMKTsKKworCS8q
IGNoZWNrIHRoYXQgd2UgYXJlIHJlYWxseSBkZXN0cm95aW5nIGFuIGVudHJ5IGZvciBAY2hpbGQg
Ki8KKwlpZiAoUkVJU0VSNF9ERUJVRykgeworCQlpbnQgcmVzdWx0OworCQlyZWlzZXI0X2tleSBr
ZXk7CisKKwkJcmVzdWx0ID0gaXBsdWctPnMuZGlyLmV4dHJhY3Rfa2V5KGNvb3JkLCAma2V5KTsK
KwkJaWYgKHJlc3VsdCAhPSAwKQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJaWYgKGdldF9rZXlfb2Jq
ZWN0aWQoJmtleSkgIT0gZ2V0X2lub2RlX29pZChjaGlsZCkpIHsKKwkJCXdhcm5pbmcoIm5pa2l0
YS0zMzk3IiwKKwkJCQkicmVtX2VudHJ5OiAlI2xseCAhPSAlI2xseFxuIiwKKwkJCQlnZXRfa2V5
X29iamVjdGlkKCZrZXkpLAorCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChj
aGlsZCkpOworCQkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwkJfQorCX0KKwlyZXR1cm4gaXBsdWct
PnMuZGlyLnJlbV9lbnRyeShkaXIsICZkZW50cnktPmRfbmFtZSwgY29vcmQsIGxoLCBlbnRyeSk7
Cit9CisKKy8qKgorICogcmVpc2VyNF9yZW1fZW50cnlfY29tbW9uIC0gcmVtb3ZlIGVudHJ5IGZy
b20gYSBkaXJlY3RvcnkKKyAqIEBkaXI6IGRpcmVjdG9yeSB0byByZW1vdmUgZW50cnkgZnJvbQor
ICogQHdoZXJlOiBuYW1lIHRoYXQgaXMgYmVpbmcgcmVtb3ZlZAorICogQGVudHJ5OiBkZXNjcmlw
dGlvbiBvZiBlbnRyeSBiZWluZyByZW1vdmVkCisgKgorICogVGhpcyBpcyBjb21tb24gaW1wbGVt
ZW50YXRpb24gb2YgcmVtX2VudHJ5IG1ldGhvZCBvZiBkaXIgcGx1Z2luLgorICovCitpbnQgcmVp
c2VyNF9yZW1fZW50cnlfY29tbW9uKHN0cnVjdCBpbm9kZSAqZGlyLAorCQkJICAgICBzdHJ1Y3Qg
ZGVudHJ5ICpkZW50cnksCisJCQkgICAgIHJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgKiBlbnRyeSkK
K3sKKwlpbnQgcmVzdWx0OworCWNvb3JkX3QgKmNvb3JkOworCWxvY2tfaGFuZGxlIGxoOworCXN0
cnVjdCByZWlzZXI0X2RlbnRyeV9mc2RhdGEgKmZzZGF0YTsKKwlfX3U2NCB0b2dyYWI7CisKKwlh
c3NlcnQoIm5pa2l0YS0xMTI0IiwgZGlyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTExMjUi
LCBkZW50cnkgIT0gTlVMTCk7CisKKwl0b2dyYWIgPSBpbm9kZV9kaXJfcGx1Z2luKGRpciktPmVz
dGltYXRlLnJlbV9lbnRyeShkaXIpOworCXJlc3VsdCA9IHJlaXNlcjRfZ3JhYl9zcGFjZSh0b2dy
YWIsIEJBX0NBTl9DT01NSVQgfCBCQV9SRVNFUlZFRCk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQly
ZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCisJaW5pdF9saCgmbGgpOworCisJLyogY2hlY2sgZm9y
IHRoaXMgZW50cnkgaW4gYSBkaXJlY3RvcnkuIFRoaXMgaXMgcGx1Z2luIG1ldGhvZC4gKi8KKwly
ZXN1bHQgPSByZWlzZXI0X2ZpbmRfZW50cnkoZGlyLCBkZW50cnksICZsaCwgWk5PREVfV1JJVEVf
TE9DSywgZW50cnkpOworCWZzZGF0YSA9IHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEoZGVudHJ5
KTsKKwlpZiAoSVNfRVJSKGZzZGF0YSkpIHsKKwkJZG9uZV9saCgmbGgpOworCQlyZXR1cm4gUFRS
X0VSUihmc2RhdGEpOworCX0KKworCWNvb3JkID0gJmZzZGF0YS0+ZGVjLmVudHJ5X2Nvb3JkOwor
CisJYXNzZXJ0KCJuaWtpdGEtMzQwNCIsCisJICAgICAgIGdldF9pbm9kZV9vaWQoZGVudHJ5LT5k
X2lub2RlKSAhPSBnZXRfaW5vZGVfb2lkKGRpcikgfHwKKwkgICAgICAgZGlyLT5pX3NpemUgPD0g
MSk7CisKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJ
CS8qIHJlbW92ZSBlbnRyeS4gSnVzdCBwYXNzIGNvbnRyb2wgdG8gdGhlIGRpcmVjdG9yeSBpdGVt
CisJCSAgIHBsdWdpbi4gKi8KKwkJYXNzZXJ0KCJ2cy01NDIiLCBpbm9kZV9kaXJfaXRlbV9wbHVn
aW4oZGlyKSk7CisJCXJlaXNlcjRfc2VhbF9kb25lKCZmc2RhdGEtPmRlYy5lbnRyeV9zZWFsKTsK
KwkJcmVpc2VyNF9hZGp1c3RfZGlyX2ZpbGUoZGlyLCBkZW50cnksIGZzZGF0YS0+ZGVjLnBvcywg
LTEpOworCQlyZXN1bHQgPQorCQkgICAgV0lUSF9DT09SRChjb29yZCwKKwkJCSAgICAgICByZW1f
ZW50cnkoZGlyLCBkZW50cnksIGVudHJ5LCBjb29yZCwgJmxoKSk7CisJCWlmIChyZXN1bHQgPT0g
MCkgeworCQkJaWYgKGRpci0+aV9zaXplID49IDEpCisJCQkJSU5PREVfREVDX0ZJRUxEKGRpciwg
aV9zaXplKTsKKwkJCWVsc2UgeworCQkJCXdhcm5pbmcoIm5pa2l0YS0yNTA5IiwgIkRpciAlbGx1
IGlzIHJ1bnQiLAorCQkJCQkodW5zaWduZWQgbG9uZyBsb25nKQorCQkJCQlnZXRfaW5vZGVfb2lk
KGRpcikpOworCQkJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJCX0KKworCQkJYXNzZXJ0KCJu
aWtpdGEtMzQwNSIsIGRlbnRyeS0+ZF9pbm9kZS0+aV9ubGluayAhPSAxIHx8CisJCQkgICAgICAg
ZGVudHJ5LT5kX2lub2RlLT5pX3NpemUgIT0gMiB8fAorCQkJICAgICAgIGlub2RlX2Rpcl9wbHVn
aW4oZGVudHJ5LT5kX2lub2RlKSA9PSBOVUxMKTsKKwkJfQorCX0KKwlkb25lX2xoKCZsaCk7CisK
KwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9p
bml0KHN0cnVjdCBpbm9kZSAqcGFyZW50LAorCQkJCSAgICAgIHN0cnVjdCBpbm9kZSAqb2JqZWN0
KTsKK3N0YXRpYyBpbnQgY3JlYXRlX2RvdF9kb3Rkb3Qoc3RydWN0IGlub2RlICpvYmplY3QsIHN0
cnVjdCBpbm9kZSAqcGFyZW50KTsKKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24g
b2YgaW5pdCBtZXRob2Qgb2YgZGlyIHBsdWdpbgorICAgY3JlYXRlICIuIiBhbmQgIi4uIiBlbnRy
aWVzCisqLworaW50IHJlaXNlcjRfZGlyX2luaXRfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0
LAkvKiBuZXcgZGlyZWN0b3J5ICovCisJCQkgICAgc3RydWN0IGlub2RlICpwYXJlbnQsCS8qIHBh
cmVudCBkaXJlY3RvcnkgKi8KKwkJCSAgICByZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGRh
dGEgLyogaW5mbyBwYXNzZWQKKwkJCQkJCQkgICAgICAgKiB0byB1cywgdGhpcworCQkJCQkJCSAg
ICAgICAqIGlzIGZpbGxlZCBieQorCQkJCQkJCSAgICAgICAqIHJlaXNlcjQoKQorCQkJCQkJCSAg
ICAgICAqIHN5c2NhbGwgaW4KKwkJCQkJCQkgICAgICAgKiBwYXJ0aWN1bGFyICovKQoreworCXJl
aXNlcjRfYmxvY2tfbnIgcmVzZXJ2ZTsKKworCWFzc2VydCgibmlraXRhLTY4MCIsIG9iamVjdCAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02ODEiLCBTX0lTRElSKG9iamVjdC0+aV9tb2RlKSk7
CisJYXNzZXJ0KCJuaWtpdGEtNjgyIiwgcGFyZW50ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTY4NCIsIGRhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjg2IiwgZGF0YS0+aWQgPT0g
RElSRUNUT1JZX0ZJTEVfUExVR0lOX0lEKTsKKwlhc3NlcnQoIm5pa2l0YS02ODciLCBvYmplY3Qt
PmlfbW9kZSAmIFNfSUZESVIpOworCisJcmVzZXJ2ZSA9IGVzdGltYXRlX2luaXQocGFyZW50LCBv
YmplY3QpOworCWlmIChyZWlzZXI0X2dyYWJfc3BhY2UocmVzZXJ2ZSwgQkFfQ0FOX0NPTU1JVCkp
CisJCXJldHVybiBSRVRFUlIoLUVOT1NQQyk7CisKKwlyZXR1cm4gY3JlYXRlX2RvdF9kb3Rkb3Qo
b2JqZWN0LCBwYXJlbnQpOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBv
ZiBkb25lIG1ldGhvZCBvZiBkaXIgcGx1Z2luCisgICByZW1vdmUgIi4iIGVudHJ5CisqLworaW50
IHJlaXNlcjRfZGlyX2RvbmVfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0Lyogb2JqZWN0IGJl
aW5nIGRlbGV0ZWQgKi8pCit7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X2Jsb2NrX25yIHJlc2Vy
dmU7CisJc3RydWN0IGRlbnRyeSBnb29kYnlfZG90czsKKwlyZWlzZXI0X2Rpcl9lbnRyeV9kZXNj
IGVudHJ5OworCisJYXNzZXJ0KCJuaWtpdGEtMTQ0OSIsIG9iamVjdCAhPSBOVUxMKTsKKworCWlm
IChyZWlzZXI0X2lub2RlX2dldF9mbGFnKG9iamVjdCwgUkVJU0VSNF9OT19TRCkpCisJCXJldHVy
biAwOworCisJLyogb2YgY291cnNlLCB0aGlzIGNhbiBiZSByZXdyaXR0ZW4gdG8gc3dlZXAgZXZl
cnl0aGluZyBpbiBvbmUKKwkgICByZWlzZXI0X2N1dF90cmVlKCkuICovCisJbWVtc2V0KCZlbnRy
eSwgMCwgc2l6ZW9mIGVudHJ5KTsKKworCS8qIEZJWE1FOiB0aGlzIGRvbmUgbWV0aG9kIGlzIGNh
bGxlZCBmcm9tIHJlaXNlcjRfZGVsZXRlX2Rpcl9jb21tb24KKwkgKiB3aGljaCByZXNlcnZlZCBz
cGFjZSBhbHJlYWR5ICovCisJcmVzZXJ2ZSA9IGlub2RlX2Rpcl9wbHVnaW4ob2JqZWN0KS0+ZXN0
aW1hdGUucmVtX2VudHJ5KG9iamVjdCk7CisJaWYgKHJlaXNlcjRfZ3JhYl9zcGFjZShyZXNlcnZl
LCBCQV9DQU5fQ09NTUlUIHwgQkFfUkVTRVJWRUQpKQorCQlyZXR1cm4gUkVURVJSKC1FTk9TUEMp
OworCisJbWVtc2V0KCZnb29kYnlfZG90cywgMCwgc2l6ZW9mIGdvb2RieV9kb3RzKTsKKwllbnRy
eS5vYmogPSBnb29kYnlfZG90cy5kX2lub2RlID0gb2JqZWN0OworCWdvb2RieV9kb3RzLmRfbmFt
ZS5uYW1lID0gIi4iOworCWdvb2RieV9kb3RzLmRfbmFtZS5sZW4gPSAxOworCXJlc3VsdCA9IHJl
aXNlcjRfcmVtX2VudHJ5X2NvbW1vbihvYmplY3QsICZnb29kYnlfZG90cywgJmVudHJ5KTsKKwly
ZWlzZXI0X2ZyZWVfZGVudHJ5X2ZzZGF0YSgmZ29vZGJ5X2RvdHMpOworCWlmICh1bmxpa2VseShy
ZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0gLUVOT01FTSAmJiByZXN1bHQgIT0gLUVOT0VOVCkpCisJ
CXdhcm5pbmcoIm5pa2l0YS0yMjUyIiwgIkNhbm5vdCByZW1vdmUgZG90IG9mICVsbGk6ICVpIiwK
KwkJCSh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChvYmplY3QpLCByZXN1bHQpOwor
CXJldHVybiAwOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBhdHRh
Y2ggbWV0aG9kIG9mIGRpciBwbHVnaW4KKyovCitpbnQgcmVpc2VyNF9hdHRhY2hfY29tbW9uKHN0
cnVjdCBpbm9kZSAqY2hpbGQgVU5VU0VEX0FSRywKKwkJCSAgc3RydWN0IGlub2RlICpwYXJlbnQg
VU5VU0VEX0FSRykKK3sKKwlhc3NlcnQoIm5pa2l0YS0yNjQ3IiwgY2hpbGQgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMjY0OCIsIHBhcmVudCAhPSBOVUxMKTsKKworCXJldHVybiAwOworfQor
CisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBkZXRhY2ggbWV0aG9kIG9mIGRp
ciBwbHVnaW4KKyAgIHJlbW92ZSAiLi4iLCBkZWNyZWFzZSBubGluayBvbiBwYXJlbnQKKyovCitp
bnQgcmVpc2VyNF9kZXRhY2hfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgaW5v
ZGUgKnBhcmVudCkKK3sKKwlpbnQgcmVzdWx0OworCXN0cnVjdCBkZW50cnkgZ29vZGJ5X2RvdHM7
CisJcmVpc2VyNF9kaXJfZW50cnlfZGVzYyBlbnRyeTsKKworCWFzc2VydCgibmlraXRhLTI4ODUi
LCBvYmplY3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjg4NiIsICFyZWlzZXI0X2lub2Rl
X2dldF9mbGFnKG9iamVjdCwgUkVJU0VSNF9OT19TRCkpOworCisJbWVtc2V0KCZlbnRyeSwgMCwg
c2l6ZW9mIGVudHJ5KTsKKworCS8qIE5PVEUtTklLSVRBIHRoaXMgb25seSB3b3JrcyBpZiBAcGFy
ZW50IGlzIC10aGUtIHBhcmVudCBvZgorCSAgIEBvYmplY3QsIHZpei4gb2JqZWN0IHdob3NlIGtl
eSBpcyBzdG9yZWQgaW4gZG90ZG90CisJICAgZW50cnkuIFdvdWxkbid0IHdvcmsgd2l0aCBoYXJk
LWxpbmtzIG9uIGRpcmVjdG9yaWVzLiAqLworCW1lbXNldCgmZ29vZGJ5X2RvdHMsIDAsIHNpemVv
ZiBnb29kYnlfZG90cyk7CisJZW50cnkub2JqID0gZ29vZGJ5X2RvdHMuZF9pbm9kZSA9IHBhcmVu
dDsKKwlnb29kYnlfZG90cy5kX25hbWUubmFtZSA9ICIuLiI7CisJZ29vZGJ5X2RvdHMuZF9uYW1l
LmxlbiA9IDI7CisJcmVzdWx0ID0gcmVpc2VyNF9yZW1fZW50cnlfY29tbW9uKG9iamVjdCwgJmdv
b2RieV9kb3RzLCAmZW50cnkpOworCXJlaXNlcjRfZnJlZV9kZW50cnlfZnNkYXRhKCZnb29kYnlf
ZG90cyk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCS8qIHRoZSBkb3Qgc2hvdWxkIGJlIHRoZSBv
bmx5IGVudHJ5IHJlbWFpbmluZyBhdCB0aGlzIHRpbWUuLi4gKi8KKwkJYXNzZXJ0KCJuaWtpdGEt
MzQwMCIsCisJCSAgICAgICBvYmplY3QtPmlfc2l6ZSA9PSAxICYmIG9iamVjdC0+aV9ubGluayA8
PSAyKTsKKyNpZiAwCisJCS8qIGFuZCwgdG9nZXRoZXIgd2l0aCB0aGUgb25seSBuYW1lIGRpcmVj
dG9yeSBjYW4gaGF2ZSwgdGhleQorCQkgKiBwcm92aWRlcyBmb3IgdGhlIGxhc3QgMiByZW1haW5p
bmcgcmVmZXJlbmNlcy4gSWYgd2UgZ2V0CisJCSAqIGhlcmUgYXMgcGFydCBvZiBlcnJvciBoYW5k
bGluZyBkdXJpbmcgbWtkaXIsIEBvYmplY3QKKwkJICogcG9zc2libHkgaGFzIG5vIG5hbWUgeWV0
LCBzbyBpdHMgbmxpbmsgPT0gMS4gSWYgd2UgZ2V0IGhlcmUKKwkJICogZnJvbSByZW5hbWUgKHRh
cmdldGluZyBlbXB0eSBkaXJlY3RvcnkpLCBpdCBoYXMgbm8gbmFtZQorCQkgKiBhbHJlYWR5LCBz
byBpdHMgbmxpbmsgPT0gMS4gKi8KKwkJYXNzZXJ0KCJuaWtpdGEtMzQwMSIsCisJCSAgICAgICBv
YmplY3QtPmlfbmxpbmsgPT0gMiB8fCBvYmplY3QtPmlfbmxpbmsgPT0gMSk7CisjZW5kaWYKKwor
CQkvKiBkZWNyZW1lbnQgbmxpbmsgb2YgZGlyZWN0b3J5IHJlbW92ZWQgIi4uIiBwb2ludGVkCisJ
CSAgIHRvICovCisJCXJlaXNlcjRfZGVsX25saW5rKHBhcmVudCwgTlVMTCwgMCk7CisJfQorCXJl
dHVybiByZXN1bHQ7Cit9CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9mIGVz
dGltYXRlLmFkZF9lbnRyeSBtZXRob2Qgb2YKKyAgIGRpciBwbHVnaW4KKyAgIGVzdGltYXRpb24g
b2YgYWRkaW5nIGVudHJ5IHdoaWNoIHN1cHBvc2VzIHRoYXQgZW50cnkgaXMgaW5zZXJ0aW5nIGEK
KyAgIHVuaXQgaW50byBpdGVtCisqLworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9hZGRfZW50
cnlfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGVzdGltYXRl
X29uZV9pbnNlcnRfaW50b19pdGVtKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9kZSkpOworfQor
CisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBlc3RpbWF0ZS5yZW1fZW50cnkg
bWV0aG9kIG9mIGRpcgorICAgcGx1Z2luCisqLworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9y
ZW1fZW50cnlfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIGVz
dGltYXRlX29uZV9pdGVtX3JlbW92YWwocmVpc2VyNF90cmVlX2J5X2lub2RlKGlub2RlKSk7Cit9
CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9mIGVzdGltYXRlLnVubGluayBt
ZXRob2Qgb2YgZGlyCisgICBwbHVnaW4KKyovCityZWlzZXI0X2Jsb2NrX25yCitkaXJfZXN0aW1h
dGVfdW5saW5rX2NvbW1vbihjb25zdCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJCSAgIGNvbnN0
IHN0cnVjdCBpbm9kZSAqb2JqZWN0KQoreworCXJlaXNlcjRfYmxvY2tfbnIgcmVzOworCisJLyog
aGFzaGVkX3JlbV9lbnRyeShvYmplY3QpICovCisJcmVzID0gaW5vZGVfZGlyX3BsdWdpbihvYmpl
Y3QpLT5lc3RpbWF0ZS5yZW1fZW50cnkob2JqZWN0KTsKKwkvKiBkZWxfbmxpbmsocGFyZW50KSAq
LworCXJlcyArPSAyICogaW5vZGVfZmlsZV9wbHVnaW4ocGFyZW50KS0+ZXN0aW1hdGUudXBkYXRl
KHBhcmVudCk7CisKKwlyZXR1cm4gcmVzOworfQorCisvKgorICogaGVscGVyIGZvciBpbm9kZV9v
cHMgLT5sb29rdXAoKSBhbmQgZGlyIHBsdWdpbidzIC0+Z2V0X3BhcmVudCgpCisgKiBtZXRob2Rz
OiBpZiBAaW5vZGUgaXMgYSBsaWdodC13ZWlnaHQgZmlsZSwgc2V0dXAgaXRzIGNyZWRlbnRpYWxz
CisgKiB0aGF0IGFyZSBub3Qgc3RvcmVkIGluIHRoZSBzdGF0LWRhdGEgaW4gdGhpcyBjYXNlCisg
Ki8KK3ZvaWQgY2hlY2tfbGlnaHRfd2VpZ2h0KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBp
bm9kZSAqcGFyZW50KQoreworCWlmIChyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlT
RVI0X0xJR0hUX1dFSUdIVCkpIHsKKwkJaW5vZGUtPmlfdWlkID0gcGFyZW50LT5pX3VpZDsKKwkJ
aW5vZGUtPmlfZ2lkID0gcGFyZW50LT5pX2dpZDsKKwkJLyogY2xlYXIgbGlnaHQtd2VpZ2h0IGZs
YWcuIElmIGlub2RlIHdvdWxkIGJlIHJlYWQgYnkgYW55CisJCSAgIG90aGVyIG5hbWUsIFt1Z11p
ZCB3b3VsZG4ndCBjaGFuZ2UuICovCisJCXJlaXNlcjRfaW5vZGVfY2xyX2ZsYWcoaW5vZGUsIFJF
SVNFUjRfTElHSFRfV0VJR0hUKTsKKwl9Cit9CisKKy8qIGxvb2tzIGZvciBuYW1lIHNwZWNpZmll
ZCBpbiBAZGVudHJ5IGluIGRpcmVjdG9yeSBAcGFyZW50IGFuZCBpZiBuYW1lIGlzCisgICBmb3Vu
ZCAtIGtleSBvZiBvYmplY3QgZm91bmQgZW50cnkgcG9pbnRzIHRvIGlzIHN0b3JlZCBpbiBAZW50
cnktPmtleSAqLworaW50IHJlaXNlcjRfbG9va3VwX25hbWUoc3RydWN0IGlub2RlICpwYXJlbnQs
CS8qIGlub2RlIG9mIGRpcmVjdG9yeSB0byBsb29rdXAKKwkJCQkJICogZm9yIG5hbWUgaW4gKi8K
KwkJc3RydWN0IGRlbnRyeSAqZGVudHJ5LAkvKiBuYW1lIHRvIGxvb2sgZm9yICovCisJCXJlaXNl
cjRfa2V5ICoga2V5LyogcGxhY2UgdG8gc3RvcmUga2V5ICovKQoreworCWludCByZXN1bHQ7CisJ
Y29vcmRfdCAqY29vcmQ7CisJbG9ja19oYW5kbGUgbGg7CisJY29uc3QgY2hhciAqbmFtZTsKKwlp
bnQgbGVuOworCXJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgZW50cnk7CisJc3RydWN0IHJlaXNlcjRf
ZGVudHJ5X2ZzZGF0YSAqZnNkYXRhOworCisJYXNzZXJ0KCJuaWtpdGEtMTI0NyIsIHBhcmVudCAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjQ4IiwgZGVudHJ5ICE9IE5VTEwpOworCWFzc2Vy
dCgibmlraXRhLTExMjMiLCBkZW50cnktPmRfbmFtZS5uYW1lICE9IE5VTEwpOworCWFzc2VydCgi
dnMtMTQ4NiIsCisJICAgICAgIGRlbnRyeS0+ZF9vcCA9PSAmZ2V0X3N1cGVyX3ByaXZhdGUocGFy
ZW50LT5pX3NiKS0+b3BzLmRlbnRyeSk7CisKKwluYW1lID0gZGVudHJ5LT5kX25hbWUubmFtZTsK
KwlsZW4gPSBkZW50cnktPmRfbmFtZS5sZW47CisKKwlpZiAoIWlub2RlX2Rpcl9wbHVnaW4ocGFy
ZW50KS0+aXNfbmFtZV9hY2NlcHRhYmxlKHBhcmVudCwgbmFtZSwgbGVuKSkKKwkJLyogc29tZSBh
cmJpdHJhcnkgZXJyb3IgY29kZSB0byByZXR1cm4gKi8KKwkJcmV0dXJuIFJFVEVSUigtRU5BTUVU
T09MT05HKTsKKworCWZzZGF0YSA9IHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEoZGVudHJ5KTsK
KwlpZiAoSVNfRVJSKGZzZGF0YSkpCisJCXJldHVybiBQVFJfRVJSKGZzZGF0YSk7CisKKwljb29y
ZCA9ICZmc2RhdGEtPmRlYy5lbnRyeV9jb29yZDsKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7
CisJaW5pdF9saCgmbGgpOworCisJLyogZmluZCBlbnRyeSBpbiBhIGRpcmVjdG9yeS4gVGhpcyBp
cyBwbHVnaW4gbWV0aG9kLiAqLworCXJlc3VsdCA9IHJlaXNlcjRfZmluZF9lbnRyeShwYXJlbnQs
IGRlbnRyeSwgJmxoLCBaTk9ERV9SRUFEX0xPQ0ssCisJCQkJICAgICZlbnRyeSk7CisJaWYgKHJl
c3VsdCA9PSAwKSB7CisJCS8qIGVudHJ5IHdhcyBmb3VuZCwgZXh0cmFjdCBvYmplY3Qga2V5IGZy
b20gaXQuICovCisJCXJlc3VsdCA9CisJCSAgICBXSVRIX0NPT1JEKGNvb3JkLAorCQkJICAgICAg
IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+cy5kaXIuCisJCQkgICAgICAgZXh0cmFjdF9r
ZXkoY29vcmQsIGtleSkpOworCX0KKwlkb25lX2xoKCZsaCk7CisJcmV0dXJuIHJlc3VsdDsKKwor
fQorCisvKiBoZWxwZXIgZm9yIHJlaXNlcjRfZGlyX2luaXRfY29tbW9uKCk6IGVzdGltYXRlIG51
bWJlciBvZiBibG9ja3MgdG8gcmVzZXJ2ZSAqLworc3RhdGljIHJlaXNlcjRfYmxvY2tfbnIKK2Vz
dGltYXRlX2luaXQoc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBpbm9kZSAqb2JqZWN0KQor
eworCXJlaXNlcjRfYmxvY2tfbnIgcmVzID0gMDsKKworCWFzc2VydCgidnBmLTMyMSIsIHBhcmVu
dCAhPSBOVUxMKTsKKwlhc3NlcnQoInZwZi0zMjIiLCBvYmplY3QgIT0gTlVMTCk7CisKKwkvKiBo
YXNoZWRfYWRkX2VudHJ5KG9iamVjdCkgKi8KKwlyZXMgKz0gaW5vZGVfZGlyX3BsdWdpbihvYmpl
Y3QpLT5lc3RpbWF0ZS5hZGRfZW50cnkob2JqZWN0KTsKKwkvKiByZWlzZXI0X2FkZF9ubGluayhv
YmplY3QpICovCisJcmVzICs9IGlub2RlX2ZpbGVfcGx1Z2luKG9iamVjdCktPmVzdGltYXRlLnVw
ZGF0ZShvYmplY3QpOworCS8qIGhhc2hlZF9hZGRfZW50cnkob2JqZWN0KSAqLworCXJlcyArPSBp
bm9kZV9kaXJfcGx1Z2luKG9iamVjdCktPmVzdGltYXRlLmFkZF9lbnRyeShvYmplY3QpOworCS8q
IHJlaXNlcjRfYWRkX25saW5rKHBhcmVudCkgKi8KKwlyZXMgKz0gaW5vZGVfZmlsZV9wbHVnaW4o
cGFyZW50KS0+ZXN0aW1hdGUudXBkYXRlKHBhcmVudCk7CisKKwlyZXR1cm4gMDsKK30KKworLyog
aGVscGVyIGZ1bmN0aW9uIGZvciByZWlzZXI0X2Rpcl9pbml0X2NvbW1vbigpLiBDcmVhdGUgIi4i
IGFuZCAiLi4iICovCitzdGF0aWMgaW50IGNyZWF0ZV9kb3RfZG90ZG90KHN0cnVjdCBpbm9kZSAq
b2JqZWN0Lyogb2JqZWN0IHRvIGNyZWF0ZSBkb3QgYW5kCisJCQkJCQkgICogZG90ZG90IGZvciAq
LyAsCisJCQkgICAgIHN0cnVjdCBpbm9kZSAqcGFyZW50LyogcGFyZW50IG9mIEBvYmplY3QgKi8p
Cit7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgZGVudHJ5IGRvdHNfZW50cnk7CisJcmVpc2VyNF9k
aXJfZW50cnlfZGVzYyBlbnRyeTsKKworCWFzc2VydCgibmlraXRhLTY4OCIsIG9iamVjdCAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02ODkiLCBTX0lTRElSKG9iamVjdC0+aV9tb2RlKSk7CisJ
YXNzZXJ0KCJuaWtpdGEtNjkxIiwgcGFyZW50ICE9IE5VTEwpOworCisJLyogV2Ugc3RvcmUgZG90
IGFuZCBkb3Rkb3QgYXMgbm9ybWFsIGRpcmVjdG9yeSBlbnRyaWVzLiBUaGlzIGlzCisJICAgbm90
IG5lY2Vzc2FyeSwgYmVjYXVzZSBhbG1vc3QgYWxsIGluZm9ybWF0aW9uIHN0b3JlZCBpbiB0aGVt
CisJICAgaXMgYWxyZWFkeSBpbiB0aGUgc3RhdC1kYXRhIG9mIGRpcmVjdG9yeSwgdGhlIG9ubHkg
dGhpbmcKKwkgICBiZWluZyBtaXNzZWQgaXMgb2JqZWN0aWQgb2YgZ3JhbmQtcGFyZW50IGRpcmVj
dG9yeSB0aGF0IGNhbgorCSAgIGVhc2lseSBiZSBhZGRlZCB0aGVyZSBhcyBleHRlbnNpb24uCisK
KwkgICBCdXQgaXQgaXMgZG9uZSB0aGUgd2F5IGl0IGlzIGRvbmUsIGJlY2F1c2Ugbm90IHN0b3Jp
bmcgZG90CisJICAgYW5kIGRvdGRvdCB3aWxsIGxlYWQgdG8gdGhlIGZvbGxvd2luZyBjb21wbGlj
YXRpb25zOgorCisJICAgLiBzcGVjaWFsIGNhc2UgaGFuZGxpbmcgaW4gLT5sb29rdXAoKS4KKwkg
ICAuIGFkZGl0aW9uIG9mIGFub3RoZXIgZXh0ZW5zaW9uIHRvIHRoZSBzZC4KKwkgICAuIGRlcGVu
ZGVuY3kgb24ga2V5IGFsbG9jYXRpb24gcG9saWN5IGZvciBzdGF0IGRhdGEuCisKKwkgKi8KKwor
CW1lbXNldCgmZW50cnksIDAsIHNpemVvZiBlbnRyeSk7CisJbWVtc2V0KCZkb3RzX2VudHJ5LCAw
LCBzaXplb2YgZG90c19lbnRyeSk7CisJZW50cnkub2JqID0gZG90c19lbnRyeS5kX2lub2RlID0g
b2JqZWN0OworCWRvdHNfZW50cnkuZF9uYW1lLm5hbWUgPSAiLiI7CisJZG90c19lbnRyeS5kX25h
bWUubGVuID0gMTsKKwlyZXN1bHQgPSByZWlzZXI0X2FkZF9lbnRyeV9jb21tb24ob2JqZWN0LCAm
ZG90c19lbnRyeSwgTlVMTCwgJmVudHJ5KTsKKwlyZWlzZXI0X2ZyZWVfZGVudHJ5X2ZzZGF0YSgm
ZG90c19lbnRyeSk7CisKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJcmVzdWx0ID0gcmVpc2VyNF9h
ZGRfbmxpbmsob2JqZWN0LCBvYmplY3QsIDApOworCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCWVu
dHJ5Lm9iaiA9IGRvdHNfZW50cnkuZF9pbm9kZSA9IHBhcmVudDsKKwkJCWRvdHNfZW50cnkuZF9u
YW1lLm5hbWUgPSAiLi4iOworCQkJZG90c19lbnRyeS5kX25hbWUubGVuID0gMjsKKwkJCXJlc3Vs
dCA9IHJlaXNlcjRfYWRkX2VudHJ5X2NvbW1vbihvYmplY3QsCisJCQkJCQkgICZkb3RzX2VudHJ5
LCBOVUxMLCAmZW50cnkpOworCQkJcmVpc2VyNF9mcmVlX2RlbnRyeV9mc2RhdGEoJmRvdHNfZW50
cnkpOworCQkJLyogaWYgY3JlYXRpb24gb2YgIi4uIiBmYWlsZWQsIGlwdXQoKSB3aWxsIGRlbGV0
ZQorCQkJICAgb2JqZWN0IHdpdGggIi4iLiAqLworCQkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkJ
cmVzdWx0ID0gcmVpc2VyNF9hZGRfbmxpbmsocGFyZW50LCBvYmplY3QsIDApOworCQkJCWlmIChy
ZXN1bHQgIT0gMCkKKwkJCQkJLyoKKwkJCQkJICogaWYgd2UgZmFpbGVkIHRvIGJ1bXAgaV9ubGlu
aywgdHJ5CisJCQkJCSAqIHRvIHJlbW92ZSAiLi4iCisJCQkJCSAqLworCQkJCQlyZWlzZXI0X2Rl
dGFjaF9jb21tb24ob2JqZWN0LCBwYXJlbnQpOworCQkJfQorCQl9CisJfQorCisJaWYgKHJlc3Vs
dCAhPSAwKSB7CisJCS8qCisJCSAqIGluIHRoZSBjYXNlIG9mIGVycm9yLCBhdCBsZWFzdCB1cGRh
dGUgc3RhdC1kYXRhIHNvIHRoYXQsCisJCSAqIC0+aV9ubGluayB1cGRhdGVzIGFyZSBub3QgbGlu
Z2VyaW5nLgorCQkgKi8KKwkJcmVpc2VyNF91cGRhdGVfc2Qob2JqZWN0KTsKKwkJcmVpc2VyNF91
cGRhdGVfc2QocGFyZW50KTsKKwl9CisKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgorICogcmV0
dXJuIDAgaWZmIEBjb29yZCBjb250YWlucyBhIGRpcmVjdG9yeSBlbnRyeSBmb3IgdGhlIGZpbGUg
d2l0aCB0aGUgbmFtZQorICogQG5hbWUuCisgKi8KK3N0YXRpYyBpbnQKK2NoZWNrX2l0ZW0oY29u
c3Qgc3RydWN0IGlub2RlICpkaXIsIGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBjb25zdCBjaGFyICpu
YW1lKQoreworCWl0ZW1fcGx1Z2luICppcGx1ZzsKKwljaGFyIGJ1ZltERV9OQU1FX0JVRl9MRU5d
OworCisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCk7CisJaWYgKGlwbHVnID09
IE5VTEwpIHsKKwkJd2FybmluZygibmlraXRhLTExMzUiLCAiQ2Fubm90IGdldCBpdGVtIHBsdWdp
biIpOworCQlwcmludF9jb29yZCgiY29vcmQiLCBjb29yZCwgMSk7CisJCXJldHVybiBSRVRFUlIo
LUVJTyk7CisJfSBlbHNlIGlmIChpdGVtX2lkX2J5X2Nvb3JkKGNvb3JkKSAhPQorCQkgICBpdGVt
X2lkX2J5X3BsdWdpbihpbm9kZV9kaXJfaXRlbV9wbHVnaW4oZGlyKSkpIHsKKwkJLyogaXRlbSBp
ZCBvZiBjdXJyZW50IGl0ZW0gZG9lcyBub3QgbWF0Y2ggdG8gaWQgb2YgaXRlbXMgYQorCQkgICBk
aXJlY3RvcnkgaXMgYnVpbHQgb2YgKi8KKwkJd2FybmluZygibmlraXRhLTExMzYiLCAiV3Jvbmcg
aXRlbSBwbHVnaW4iKTsKKwkJcHJpbnRfY29vcmQoImNvb3JkIiwgY29vcmQsIDEpOworCQlyZXR1
cm4gUkVURVJSKC1FSU8pOworCX0KKwlhc3NlcnQoIm5pa2l0YS0xMTM3IiwgaXBsdWctPnMuZGly
LmV4dHJhY3RfbmFtZSk7CisKKwkvKiBDb21wYXJlIG5hbWUgc3RvcmVkIGluIHRoaXMgZW50cnkg
d2l0aCBuYW1lIHdlIGFyZSBsb29raW5nIGZvci4KKworCSAgIE5PVEUtTklLSVRBIEhlcmUgc2hv
dWxkIGdvIGNvZGUgZm9yIHN1cHBvcnQgb2Ygc29tZXRoaW5nIGxpa2UKKwkgICB1bmljb2RlLCBj
b2RlIHRhYmxlcywgZXRjLgorCSAqLworCXJldHVybiAhIXN0cmNtcChuYW1lLCBpcGx1Zy0+cy5k
aXIuZXh0cmFjdF9uYW1lKGNvb3JkLCBidWYpKTsKK30KKworc3RhdGljIGludAorY2hlY2tfZW50
cnkoY29uc3Qgc3RydWN0IGlub2RlICpkaXIsIGNvb3JkX3QgKmNvb3JkLCBjb25zdCBzdHJ1Y3Qg
cXN0ciAqbmFtZSkKK3sKKwlyZXR1cm4gV0lUSF9DT09SRChjb29yZCwgY2hlY2tfaXRlbShkaXIs
IGNvb3JkLCBuYW1lLT5uYW1lKSk7Cit9CisKKy8qCisgKiBhcmd1bWVudCBwYWNrYWdlIHVzZWQg
YnkgZW50cnlfYWN0b3IgdG8gc2NhbiBlbnRyaWVzIHdpdGggaWRlbnRpY2FsIGtleXMuCisgKi8K
K3N0cnVjdCBlbnRyeV9hY3Rvcl9hcmdzIHsKKwkvKiBuYW1lIHdlIGFyZSBsb29raW5nIGZvciAq
LworCWNvbnN0IGNoYXIgKm5hbWU7CisJLyoga2V5IG9mIGRpcmVjdG9yeSBlbnRyeS4gZW50cnlf
YWN0b3IoKSBzY2FucyB0aHJvdWdoIHNlcXVlbmNlIG9mCisJICogaXRlbXMvdW5pdHMgaGF2aW5n
IHRoZSBzYW1lIGtleSAqLworCXJlaXNlcjRfa2V5ICprZXk7CisJLyogaG93IG1hbnkgZW50cmll
cyB3aXRoIGR1cGxpY2F0ZSBrZXkgd2FzIHNjYW5uZWQgc28gZmFyLiAqLworCWludCBub25fdW5p
cTsKKyNpZiBSRUlTRVI0X1VTRV9DT0xMSVNJT05fTElNSVQKKwkvKiBzY2FuIGxpbWl0ICovCisJ
aW50IG1heF9ub25fdW5pcTsKKyNlbmRpZgorCS8qIHJldHVybiBwYXJhbWV0ZXI6IHNldCB0byB0
cnVlLCBpZiAtPm5hbWUgd2Fzbid0IGZvdW5kICovCisJaW50IG5vdF9mb3VuZDsKKwkvKiB3aGF0
IHR5cGUgb2YgbG9jayB0byB0YWtlIHdoZW4gbW92aW5nIHRvIHRoZSBuZXh0IG5vZGUgZHVyaW5n
CisJICogc2NhbiAqLworCXpub2RlX2xvY2tfbW9kZSBtb2RlOworCisJLyogbGFzdCBjb29yZCB0
aGF0IHdhcyB2aXNpdGVkIGR1cmluZyBzY2FuICovCisJY29vcmRfdCBsYXN0X2Nvb3JkOworCS8q
IGxhc3Qgbm9kZSBsb2NrZWQgZHVyaW5nIHNjYW4gKi8KKwlsb2NrX2hhbmRsZSBsYXN0X2xoOwor
CS8qIGlub2RlIG9mIGRpcmVjdG9yeSAqLworCWNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGU7Cit9
OworCisvKiBGdW5jdGlvbiBjYWxsZWQgYnkgcmVpc2VyNF9maW5kX2VudHJ5KCkgdG8gbG9vayBm
b3IgZ2l2ZW4gbmFtZQorICAgaW4gdGhlIGRpcmVjdG9yeS4gKi8KK3N0YXRpYyBpbnQgZW50cnlf
YWN0b3IocmVpc2VyNF90cmVlICogdHJlZSBVTlVTRURfQVJHIC8qIHRyZWUgYmVpbmcgc2Nhbm5l
ZCAqLyAsCisJCSAgICAgICBjb29yZF90ICpjb29yZCAvKiBjdXJyZW50IGNvb3JkICovICwKKwkJ
ICAgICAgIGxvY2tfaGFuZGxlICogbGggLyogY3VycmVudCBsb2NrIGhhbmRsZSAqLyAsCisJCSAg
ICAgICB2b2lkICplbnRyeV9hY3Rvcl9hcmcvKiBhcmd1bWVudCB0byBzY2FuICovKQoreworCXJl
aXNlcjRfa2V5IHVuaXRfa2V5OworCXN0cnVjdCBlbnRyeV9hY3Rvcl9hcmdzICphcmdzOworCisJ
YXNzZXJ0KCJuaWtpdGEtMTEzMSIsIHRyZWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTEz
MiIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTExMzMiLCBlbnRyeV9hY3Rvcl9h
cmcgIT0gTlVMTCk7CisKKwlhcmdzID0gZW50cnlfYWN0b3JfYXJnOworCSsrYXJncy0+bm9uX3Vu
aXE7CisjaWYgUkVJU0VSNF9VU0VfQ09MTElTSU9OX0xJTUlUCisJaWYgKGFyZ3MtPm5vbl91bmlx
ID4gYXJncy0+bWF4X25vbl91bmlxKSB7CisJCWFyZ3MtPm5vdF9mb3VuZCA9IDE7CisJCS8qIGhh
c2ggY29sbGlzaW9uIG92ZXJmbG93LiAqLworCQlyZXR1cm4gUkVURVJSKC1FQlVTWSk7CisJfQor
I2VuZGlmCisKKwkvKgorCSAqIGRpZCB3ZSBqdXN0IHJlYWNoIHRoZSBlbmQgb2YgdGhlIHNlcXVl
bmNlIG9mIGl0ZW1zL3VuaXRzIHdpdGgKKwkgKiBpZGVudGljYWwga2V5cz8KKwkgKi8KKwlpZiAo
IWtleWVxKGFyZ3MtPmtleSwgdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZ1bml0X2tleSkpKSB7
CisJCWFzc2VydCgibmlraXRhLTE3OTEiLAorCQkgICAgICAga2V5bHQoYXJncy0+a2V5LCB1bml0
X2tleV9ieV9jb29yZChjb29yZCwgJnVuaXRfa2V5KSkpOworCQlhcmdzLT5ub3RfZm91bmQgPSAx
OworCQlhcmdzLT5sYXN0X2Nvb3JkLmJldHdlZW4gPSBBRlRFUl9VTklUOworCQlyZXR1cm4gMDsK
Kwl9CisKKwljb29yZF9kdXAoJmFyZ3MtPmxhc3RfY29vcmQsIGNvb3JkKTsKKwkvKgorCSAqIGRp
ZCBzY2FuIGp1c3QgbW92ZWQgdG8gdGhlIG5leHQgbm9kZT8KKwkgKi8KKwlpZiAoYXJncy0+bGFz
dF9saC5ub2RlICE9IGxoLT5ub2RlKSB7CisJCWludCBsb2NrX3Jlc3VsdDsKKworCQkvKgorCQkg
KiBpZiBzbywgbG9jayBuZXcgbm9kZSB3aXRoIHRoZSBtb2RlIHJlcXVlc3RlZCBieSB0aGUgY2Fs
bGVyCisJCSAqLworCQlkb25lX2xoKCZhcmdzLT5sYXN0X2xoKTsKKwkJYXNzZXJ0KCJuaWtpdGEt
MTg5NiIsIHpub2RlX2lzX2FueV9sb2NrZWQobGgtPm5vZGUpKTsKKwkJbG9ja19yZXN1bHQgPSBs
b25ndGVybV9sb2NrX3pub2RlKCZhcmdzLT5sYXN0X2xoLCBsaC0+bm9kZSwKKwkJCQkJCSAgYXJn
cy0+bW9kZSwgWk5PREVfTE9DS19ISVBSSSk7CisJCWlmIChsb2NrX3Jlc3VsdCAhPSAwKQorCQkJ
cmV0dXJuIGxvY2tfcmVzdWx0OworCX0KKwlyZXR1cm4gY2hlY2tfaXRlbShhcmdzLT5pbm9kZSwg
Y29vcmQsIGFyZ3MtPm5hbWUpOworfQorCisvKiBMb29rIGZvciBnaXZlbiBAbmFtZSB3aXRoaW4g
ZGlyZWN0b3J5IEBkaXIuCisKKyAgIFRoaXMgaXMgY2FsbGVkIGR1cmluZyBsb29rdXAsIGNyZWF0
aW9uIGFuZCByZW1vdmFsIG9mIGRpcmVjdG9yeQorICAgZW50cmllcyBhbmQgb24gcmVpc2VyNF9y
ZW5hbWVfY29tbW9uCisKKyAgIEZpcnN0IGNhbGN1bGF0ZSBrZXkgdGhhdCBkaXJlY3RvcnkgZW50
cnkgZm9yIEBuYW1lIHdvdWxkIGhhdmUuIFNlYXJjaAorICAgZm9yIHRoaXMga2V5IGluIHRoZSB0
cmVlLiBJZiBzdWNoIGtleSBpcyBmb3VuZCwgc2NhbiBhbGwgaXRlbXMgd2l0aAorICAgdGhlIHNh
bWUga2V5LCBjaGVja2luZyBuYW1lIGluIGVhY2ggZGlyZWN0b3J5IGVudHJ5IGFsb25nIHRoZSB3
YXkuCisqLworaW50IHJlaXNlcjRfZmluZF9lbnRyeShzdHJ1Y3QgaW5vZGUgKmRpciwJLyogZGly
ZWN0b3J5IHRvIHNjYW4gKi8KKwkJICAgICAgIHN0cnVjdCBkZW50cnkgKmRlLAkvKiBuYW1lIHRv
IHNlYXJjaCBmb3IgKi8KKwkJICAgICAgIGxvY2tfaGFuZGxlICogbGgsCS8qIHJlc3VsdGluZyBs
b2NrIGhhbmRsZSAqLworCQkgICAgICAgem5vZGVfbG9ja19tb2RlIG1vZGUsCS8qIHJlcXVpcmVk
IGxvY2sgbW9kZSAqLworCQkgICAgICAgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5CS8q
IHBhcmFtZXRlcnMgb2YgZm91bmQKKwkJCQkJCQkgICBkaXJlY3RvcnkgZW50cnkgKi8pCit7CisJ
Y29uc3Qgc3RydWN0IHFzdHIgKm5hbWU7CisJc2VhbF90ICpzZWFsOworCWNvb3JkX3QgKmNvb3Jk
OworCWludCByZXN1bHQ7CisJX191MzIgZmxhZ3M7CisJc3RydWN0IGRlX2xvY2F0aW9uICpkZWM7
CisJc3RydWN0IHJlaXNlcjRfZGVudHJ5X2ZzZGF0YSAqZnNkYXRhOworCisJYXNzZXJ0KCJuaWtp
dGEtMTEzMCIsIGxoICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTExMjgiLCBkaXIgIT0gTlVM
TCk7CisKKwluYW1lID0gJmRlLT5kX25hbWU7CisJYXNzZXJ0KCJuaWtpdGEtMTEyOSIsIG5hbWUg
IT0gTlVMTCk7CisKKwkvKiBkZW50cnkgcHJpdmF0ZSBkYXRhIGRvbid0IHJlcXVpcmUgbG9jaywg
YmVjYXVzZSBkZW50cnkKKwkgICBtYW5pcHVsYXRpb25zIGFyZSBwcm90ZWN0ZWQgYnkgaV9tdXRl
eCBvbiBwYXJlbnQuCisKKwkgICBUaGlzIGlzIG5vdCBzbyBmb3IgaW5vZGVzLCBiZWNhdXNlIHRo
ZXJlIGlzIG5vIC10aGUtIHBhcmVudCBpbgorCSAgIGlub2RlIGNhc2UuCisJICovCisJZnNkYXRh
ID0gcmVpc2VyNF9nZXRfZGVudHJ5X2ZzZGF0YShkZSk7CisJaWYgKElTX0VSUihmc2RhdGEpKQor
CQlyZXR1cm4gUFRSX0VSUihmc2RhdGEpOworCWRlYyA9ICZmc2RhdGEtPmRlYzsKKworCWNvb3Jk
ID0gJmRlYy0+ZW50cnlfY29vcmQ7CisJY29vcmRfY2xlYXJfaXBsdWcoY29vcmQpOworCXNlYWwg
PSAmZGVjLT5lbnRyeV9zZWFsOworCS8qIGNvbXBvc2Uga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSBm
b3IgQG5hbWUgKi8KKwlpbm9kZV9kaXJfcGx1Z2luKGRpciktPmJ1aWxkX2VudHJ5X2tleShkaXIs
IG5hbWUsICZlbnRyeS0+a2V5KTsKKworCWlmIChyZWlzZXI0X3NlYWxfaXNfc2V0KHNlYWwpKSB7
CisJCS8qIGNoZWNrIHNlYWwgKi8KKwkJcmVzdWx0ID0gcmVpc2VyNF9zZWFsX3ZhbGlkYXRlKHNl
YWwsIGNvb3JkLCAmZW50cnktPmtleSwKKwkJCQkJICAgICAgIGxoLCBtb2RlLCBaTk9ERV9MT0NL
X0xPUFJJKTsKKwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkvKiBrZXkgd2FzIGZvdW5kLiBDaGVj
ayB0aGF0IGl0IGlzIHJlYWxseSBpdGVtIHdlIGFyZQorCQkJICAgbG9va2luZyBmb3IuICovCisJ
CQlyZXN1bHQgPSBjaGVja19lbnRyeShkaXIsIGNvb3JkLCBuYW1lKTsKKwkJCWlmIChyZXN1bHQg
PT0gMCkKKwkJCQlyZXR1cm4gMDsKKwkJfQorCX0KKwlmbGFncyA9IChtb2RlID09IFpOT0RFX1dS
SVRFX0xPQ0spID8gQ0JLX0ZPUl9JTlNFUlQgOiAwOworCS8qCisJICogZmluZCBwbGFjZSBpbiB0
aGUgdHJlZSB3aGVyZSBkaXJlY3RvcnkgaXRlbSBzaG91bGQgYmUgbG9jYXRlZC4KKwkgKi8KKwly
ZXN1bHQgPSByZWlzZXI0X29iamVjdF9sb29rdXAoZGlyLCAmZW50cnktPmtleSwgY29vcmQsIGxo
LCBtb2RlLAorCQkJCSAgICAgICBGSU5EX0VYQUNULCBMRUFGX0xFVkVMLCBMRUFGX0xFVkVMLAor
CQkJCSAgICAgICBmbGFncywgTlVMTC8qcmFfaW5mbyAqLyk7CisJaWYgKHJlc3VsdCA9PSBDQktf
Q09PUkRfRk9VTkQpIHsKKwkJc3RydWN0IGVudHJ5X2FjdG9yX2FyZ3MgYXJnOworCisJCS8qIGZh
c3QgcGF0aDogbm8gaGFzaCBjb2xsaXNpb25zICovCisJCXJlc3VsdCA9IGNoZWNrX2VudHJ5KGRp
ciwgY29vcmQsIG5hbWUpOworCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCXJlaXNlcjRfc2VhbF9p
bml0KHNlYWwsIGNvb3JkLCAmZW50cnktPmtleSk7CisJCQlkZWMtPnBvcyA9IDA7CisJCX0gZWxz
ZSBpZiAocmVzdWx0ID4gMCkgeworCQkJLyogSXRlcmF0ZSB0aHJvdWdoIGFsbCB1bml0cyB3aXRo
IHRoZSBzYW1lIGtleXMuICovCisJCQlhcmcubmFtZSA9IG5hbWUtPm5hbWU7CisJCQlhcmcua2V5
ID0gJmVudHJ5LT5rZXk7CisJCQlhcmcubm90X2ZvdW5kID0gMDsKKwkJCWFyZy5ub25fdW5pcSA9
IDA7CisjaWYgUkVJU0VSNF9VU0VfQ09MTElTSU9OX0xJTUlUCisJCQlhcmcubWF4X25vbl91bmlx
ID0gbWF4X2hhc2hfY29sbGlzaW9ucyhkaXIpOworCQkJYXNzZXJ0KCJuaWtpdGEtMjg1MSIsIGFy
Zy5tYXhfbm9uX3VuaXEgPiAxKTsKKyNlbmRpZgorCQkJYXJnLm1vZGUgPSBtb2RlOworCQkJYXJn
Lmlub2RlID0gZGlyOworCQkJY29vcmRfaW5pdF96ZXJvKCZhcmcubGFzdF9jb29yZCk7CisJCQlp
bml0X2xoKCZhcmcubGFzdF9saCk7CisKKwkJCXJlc3VsdCA9IHJlaXNlcjRfaXRlcmF0ZV90cmVl
CisJCQkJKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShkaXIpLAorCQkJCSBjb29yZCwgbGgsCisJCQkJ
IGVudHJ5X2FjdG9yLCAmYXJnLCBtb2RlLCAxKTsKKwkJCS8qIGlmIGVuZCBvZiB0aGUgdHJlZSBv
ciBleHRlbnQgd2FzIHJlYWNoZWQgZHVyaW5nCisJCQkgICBzY2FubmluZy4gKi8KKwkJCWlmIChh
cmcubm90X2ZvdW5kIHx8IChyZXN1bHQgPT0gLUVfTk9fTkVJR0hCT1IpKSB7CisJCQkJLyogc3Rl
cCBiYWNrICovCisJCQkJZG9uZV9saChsaCk7CisKKwkJCQlyZXN1bHQgPSB6bG9hZChhcmcubGFz
dF9jb29yZC5ub2RlKTsKKwkJCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCQkJY29vcmRfY2xlYXJf
aXBsdWcoJmFyZy5sYXN0X2Nvb3JkKTsKKwkJCQkJY29vcmRfZHVwKGNvb3JkLCAmYXJnLmxhc3Rf
Y29vcmQpOworCQkJCQltb3ZlX2xoKGxoLCAmYXJnLmxhc3RfbGgpOworCQkJCQlyZXN1bHQgPSBS
RVRFUlIoLUVOT0VOVCk7CisJCQkJCXpyZWxzZShhcmcubGFzdF9jb29yZC5ub2RlKTsKKwkJCQkJ
LS1hcmcubm9uX3VuaXE7CisJCQkJfQorCQkJfQorCisJCQlkb25lX2xoKCZhcmcubGFzdF9saCk7
CisJCQlpZiAocmVzdWx0ID09IDApCisJCQkJcmVpc2VyNF9zZWFsX2luaXQoc2VhbCwgY29vcmQs
ICZlbnRyeS0+a2V5KTsKKworCQkJaWYgKHJlc3VsdCA9PSAwIHx8IHJlc3VsdCA9PSAtRU5PRU5U
KSB7CisJCQkJYXNzZXJ0KCJuaWtpdGEtMjU4MCIsIGFyZy5ub25fdW5pcSA+IDApOworCQkJCWRl
Yy0+cG9zID0gYXJnLm5vbl91bmlxIC0gMTsKKwkJCX0KKwkJfQorCX0gZWxzZQorCQlkZWMtPnBv
cyA9IC0xOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qCisgICBMb2NhbCB2YXJpYWJsZXM6Cisg
ICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJh
c2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBz
Y3JvbGwtc3RlcDogMQorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGlu
dXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZGlza19mb3JtYXQvZGlza19mb3JtYXQ0
MC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1h
dDQwLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9ybWF0
L2Rpc2tfZm9ybWF0NDAuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0NDAu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1OTIyMjIyNCArMDEwMApAQCAtMCwwICsxLDY2OCBAQAor
LyogQ29weXJpZ2h0IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5l
ZCBieSByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAiLi4vLi4vZGVidWcuaCIKKyNpbmNs
dWRlICIuLi8uLi9kZm9ybWF0LmgiCisjaW5jbHVkZSAiLi4vLi4va2V5LmgiCisjaW5jbHVkZSAi
Li4vbm9kZS9ub2RlLmgiCisjaW5jbHVkZSAiLi4vc3BhY2Uvc3BhY2VfYWxsb2NhdG9yLmgiCisj
aW5jbHVkZSAiZGlza19mb3JtYXQ0MC5oIgorI2luY2x1ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1
ZGUgIi4uLy4uL3R4bm1nci5oIgorI2luY2x1ZGUgIi4uLy4uL2pub2RlLmgiCisjaW5jbHVkZSAi
Li4vLi4vdHJlZS5oIgorI2luY2x1ZGUgIi4uLy4uL3N1cGVyLmgiCisjaW5jbHVkZSAiLi4vLi4v
d2FuZGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vaW5vZGUuaCIKKyNpbmNsdWRlICIuLi8uLi9rdHhu
bWdyZC5oIgorI2luY2x1ZGUgIi4uLy4uL3N0YXR1c19mbGFncy5oIgorCisjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4JLyogZm9yIF9fdT8/ICAqLworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBm
b3Igc3RydWN0IHN1cGVyX2Jsb2NrICAqLworI2luY2x1ZGUgPGxpbnV4L2J1ZmZlcl9oZWFkLmg+
CisKKy8qIHJlaXNlciA0LjAgZGVmYXVsdCBkaXNrIGxheW91dCAqLworCisvKiBBbW91bnQgb2Yg
ZnJlZSBibG9ja3MgbmVlZGVkIHRvIHBlcmZvcm0gcmVsZWFzZV9mb3JtYXQ0MCB3aGVuIGZzIGdl
dHMKKyAgIG1vdW50ZWQgUlc6IDEgZm9yIFNCLCAxIGZvciBub24tbGVhdmVzIGluIG92ZXJ3cml0
ZSBzZXQsIDIgZm9yIHR4IGhlYWRlcgorICAgJiB0eCByZWNvcmQuICovCisjZGVmaW5lIFJFTEVB
U0VfUkVTRVJWRUQgNAorCisvKiBUaGlzIGZsYWcgaW5kaWNhdGVzIHRoYXQgYmFja3VwIHNob3Vs
ZCBiZSB1cGRhdGVkCisgICAodGhlIHVwZGF0ZSBpcyBwZXJmb3JtZWQgYnkgZnNjaykgKi8KKyNk
ZWZpbmUgRk9STUFUNDBfVVBEQVRFX0JBQ0tVUCAoMSA8PCAzMSkKKworLyogZnVuY3Rpb25zIHRv
IGFjY2VzcyBmaWVsZHMgb2YgZm9ybWF0NDBfZGlza19zdXBlcl9ibG9jayAqLworc3RhdGljIF9f
dTY0IGdldF9mb3JtYXQ0MF9ibG9ja19jb3VudChjb25zdCBmb3JtYXQ0MF9kaXNrX3N1cGVyX2Js
b2NrICogc2IpCit7CisJcmV0dXJuIGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJnNiLT5ibG9j
a19jb3VudCkpOworfQorCitzdGF0aWMgX191NjQgZ2V0X2Zvcm1hdDQwX2ZyZWVfYmxvY2tzKGNv
bnN0IGZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2sgKiBzYikKK3sKKwlyZXR1cm4gbGU2NF90b19j
cHUoZ2V0X3VuYWxpZ25lZCgmc2ItPmZyZWVfYmxvY2tzKSk7Cit9CisKK3N0YXRpYyBfX3U2NCBn
ZXRfZm9ybWF0NDBfcm9vdF9ibG9jayhjb25zdCBmb3JtYXQ0MF9kaXNrX3N1cGVyX2Jsb2NrICog
c2IpCit7CisJcmV0dXJuIGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJnNiLT5yb290X2Jsb2Nr
KSk7Cit9CisKK3N0YXRpYyBfX3UxNiBnZXRfZm9ybWF0NDBfdHJlZV9oZWlnaHQoY29uc3QgZm9y
bWF0NDBfZGlza19zdXBlcl9ibG9jayAqIHNiKQoreworCXJldHVybiBsZTE2X3RvX2NwdShnZXRf
dW5hbGlnbmVkKCZzYi0+dHJlZV9oZWlnaHQpKTsKK30KKworc3RhdGljIF9fdTY0IGdldF9mb3Jt
YXQ0MF9maWxlX2NvdW50KGNvbnN0IGZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2sgKiBzYikKK3sK
KwlyZXR1cm4gbGU2NF90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2ItPmZpbGVfY291bnQpKTsKK30K
Kworc3RhdGljIF9fdTY0IGdldF9mb3JtYXQ0MF9vaWQoY29uc3QgZm9ybWF0NDBfZGlza19zdXBl
cl9ibG9jayAqIHNiKQoreworCXJldHVybiBsZTY0X3RvX2NwdShnZXRfdW5hbGlnbmVkKCZzYi0+
b2lkKSk7Cit9CisKK3N0YXRpYyBfX3UzMiBnZXRfZm9ybWF0NDBfbWtmc19pZChjb25zdCBmb3Jt
YXQ0MF9kaXNrX3N1cGVyX2Jsb2NrICogc2IpCit7CisJcmV0dXJuIGxlMzJfdG9fY3B1KGdldF91
bmFsaWduZWQoJnNiLT5ta2ZzX2lkKSk7Cit9CisKK3N0YXRpYyBfX3UzMiBnZXRfZm9ybWF0NDBf
bm9kZV9wbHVnaW5faWQoY29uc3QgZm9ybWF0NDBfZGlza19zdXBlcl9ibG9jayAqIHNiKQorewor
CXJldHVybiBsZTMyX3RvX2NwdShnZXRfdW5hbGlnbmVkKCZzYi0+bm9kZV9waWQpKTsKK30KKwor
c3RhdGljIF9fdTY0IGdldF9mb3JtYXQ0MF9mbGFncyhjb25zdCBmb3JtYXQ0MF9kaXNrX3N1cGVy
X2Jsb2NrICogc2IpCit7CisJcmV0dXJuIGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJnNiLT5m
bGFncykpOworfQorCitzdGF0aWMgX191MzIgZ2V0X2Zvcm1hdDQwX3ZlcnNpb24oY29uc3QgZm9y
bWF0NDBfZGlza19zdXBlcl9ibG9jayAqIHNiKQoreworCXJldHVybiBsZTMyX3RvX2NwdShnZXRf
dW5hbGlnbmVkKCZzYi0+dmVyc2lvbikpICYKKwkJfkZPUk1BVDQwX1VQREFURV9CQUNLVVA7Cit9
CisKK3N0YXRpYyBpbnQgdXBkYXRlX2JhY2t1cF92ZXJzaW9uKGNvbnN0IGZvcm1hdDQwX2Rpc2tf
c3VwZXJfYmxvY2sgKiBzYikKK3sKKwlyZXR1cm4gKGxlMzJfdG9fY3B1KGdldF91bmFsaWduZWQo
JnNiLT52ZXJzaW9uKSkgJgorCQlGT1JNQVQ0MF9VUERBVEVfQkFDS1VQKTsKK30KKworc3RhdGlj
IGludCB1cGRhdGVfZGlza192ZXJzaW9uX21pbm9yKGNvbnN0IGZvcm1hdDQwX2Rpc2tfc3VwZXJf
YmxvY2sgKiBzYikKK3sKKwlyZXR1cm4gKGdldF9mb3JtYXQ0MF92ZXJzaW9uKHNiKSA8IGdldF9y
ZWxlYXNlX251bWJlcl9taW5vcigpKTsKK30KKworc3RhdGljIGludCBpbmNvbXBsZXRlX2NvbXBh
dGliaWxpdHkoY29uc3QgZm9ybWF0NDBfZGlza19zdXBlcl9ibG9jayAqIHNiKQoreworCXJldHVy
biAoZ2V0X2Zvcm1hdDQwX3ZlcnNpb24oc2IpID4gZ2V0X3JlbGVhc2VfbnVtYmVyX21pbm9yKCkp
OworfQorCitzdGF0aWMgZm9ybWF0NDBfc3VwZXJfaW5mbyAqZ2V0X3NiX2luZm8oc3RydWN0IHN1
cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlyZXR1cm4gJmdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+
dS5mb3JtYXQ0MDsKK30KKworc3RhdGljIGludCBjb25zdWx0X2Rpc2ttYXAoc3RydWN0IHN1cGVy
X2Jsb2NrICpzKQoreworCWZvcm1hdDQwX3N1cGVyX2luZm8gKmluZm87CisJam91cm5hbF9sb2Nh
dGlvbiAqamxvYzsKKworCWluZm8gPSBnZXRfc2JfaW5mbyhzKTsKKwlqbG9jID0gJmdldF9zdXBl
cl9wcml2YXRlKHMpLT5qbG9jOworCS8qIERlZmF1bHQgZm9ybWF0LXNwZWNpZmljIGxvY2F0aW9u
cywgaWYgdGhlcmUgaXMgbm90aGluZyBpbgorCSAqIGRpc2ttYXAgKi8KKwlqbG9jLT5mb290ZXIg
PSBGT1JNQVQ0MF9KT1VSTkFMX0ZPT1RFUl9CTE9DS05SOworCWpsb2MtPmhlYWRlciA9IEZPUk1B
VDQwX0pPVVJOQUxfSEVBREVSX0JMT0NLTlI7CisJaW5mby0+bG9jLnN1cGVyID0gRk9STUFUNDBf
T0ZGU0VUIC8gcy0+c19ibG9ja3NpemU7CisjaWZkZWYgQ09ORklHX1JFSVNFUjRfQkFEQkxPQ0tT
CisJcmVpc2VyNF9nZXRfZGlza21hcF92YWx1ZShGT1JNQVQ0MF9QTFVHSU5fRElTS01BUF9JRCwg
Rk9STUFUNDBfSkYsCisJCQkJICAmamxvYy0+Zm9vdGVyKTsKKwlyZWlzZXI0X2dldF9kaXNrbWFw
X3ZhbHVlKEZPUk1BVDQwX1BMVUdJTl9ESVNLTUFQX0lELCBGT1JNQVQ0MF9KSCwKKwkJCQkgICZq
bG9jLT5oZWFkZXIpOworCXJlaXNlcjRfZ2V0X2Rpc2ttYXBfdmFsdWUoRk9STUFUNDBfUExVR0lO
X0RJU0tNQVBfSUQsIEZPUk1BVDQwX1NVUEVSLAorCQkJCSAgJmluZm8tPmxvYy5zdXBlcik7Cisj
ZW5kaWYKKwlyZXR1cm4gMDsKK30KKworLyogZmluZCBhbnkgdmFsaWQgc3VwZXIgYmxvY2sgb2Yg
ZGlza19mb3JtYXQ0MCAoZXZlbiBpZiB0aGUgZmlyc3QKKyAgIHN1cGVyIGJsb2NrIGlzIGRlc3Ry
b3llZCksIHdpbGwgY2hhbmdlIGJsb2NrIG51bWJlcnMgb2YgYWN0dWFsIGpvdXJuYWwgaGVhZGVy
L2Zvb3RlciAoamYvamgpCisgICBpZiBuZWVkZWQgKi8KK3N0YXRpYyBzdHJ1Y3QgYnVmZmVyX2hl
YWQgKmZpbmRfYV9kaXNrX2Zvcm1hdDQwX3N1cGVyX2Jsb2NrKHN0cnVjdCBzdXBlcl9ibG9jawor
CQkJCQkJCSAgICAqcykKK3sKKwlzdHJ1Y3QgYnVmZmVyX2hlYWQgKnN1cGVyX2JoOworCWZvcm1h
dDQwX2Rpc2tfc3VwZXJfYmxvY2sgKmRpc2tfc2I7CisJZm9ybWF0NDBfc3VwZXJfaW5mbyAqaW5m
bzsKKworCWFzc2VydCgidW1rYS00ODciLCBzICE9IE5VTEwpOworCisJaW5mbyA9IGdldF9zYl9p
bmZvKHMpOworCisJc3VwZXJfYmggPSBzYl9icmVhZChzLCBpbmZvLT5sb2Muc3VwZXIpOworCWlm
IChzdXBlcl9iaCA9PSBOVUxMKQorCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVJTykpOworCisJ
ZGlza19zYiA9IChmb3JtYXQ0MF9kaXNrX3N1cGVyX2Jsb2NrICopIHN1cGVyX2JoLT5iX2RhdGE7
CisJaWYgKHN0cm5jbXAoZGlza19zYi0+bWFnaWMsIEZPUk1BVDQwX01BR0lDLCBzaXplb2YoRk9S
TUFUNDBfTUFHSUMpKSkgeworCQlicmVsc2Uoc3VwZXJfYmgpOworCQlyZXR1cm4gRVJSX1BUUihS
RVRFUlIoLUVJTlZBTCkpOworCX0KKworCXJlaXNlcjRfc2V0X2Jsb2NrX2NvdW50KHMsIGxlNjRf
dG9fY3B1KGdldF91bmFsaWduZWQoJmRpc2tfc2ItPmJsb2NrX2NvdW50KSkpOworCXJlaXNlcjRf
c2V0X2RhdGFfYmxvY2tzKHMsIGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJmRpc2tfc2ItPmJs
b2NrX2NvdW50KSkgLQorCQkJCWxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJmRpc2tfc2ItPmZy
ZWVfYmxvY2tzKSkpOworCXJlaXNlcjRfc2V0X2ZyZWVfYmxvY2tzKHMsIGxlNjRfdG9fY3B1KGdl
dF91bmFsaWduZWQoJmRpc2tfc2ItPmZyZWVfYmxvY2tzKSkpOworCisJcmV0dXJuIHN1cGVyX2Jo
OworfQorCisvKiBmaW5kIHRoZSBtb3N0IHJlY2VudCB2ZXJzaW9uIG9mIHN1cGVyIGJsb2NrLiBU
aGlzIGlzIGNhbGxlZCBhZnRlciBqb3VybmFsIGlzCisgICByZXBsYXllZCAqLworc3RhdGljIHN0
cnVjdCBidWZmZXJfaGVhZCAqcmVhZF9zdXBlcl9ibG9jayhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMg
VU5VU0VEX0FSRykKK3sKKwkvKiBIZXJlIHRoZSBtb3N0IHJlY2VudCBzdXBlcmJsb2NrIGNvcHkg
aGFzIHRvIGJlIHJlYWQuIEhvd2V2ZXIsIGFzCisJICAgam91cm5hbCByZXBsYXkgaXNuJ3QgY29t
cGxldGUsIHdlIGFyZSB1c2luZworCSAgIGZpbmRfYV9kaXNrX2Zvcm1hdDQwX3N1cGVyX2Jsb2Nr
KCkgZnVuY3Rpb24uICovCisJcmV0dXJuIGZpbmRfYV9kaXNrX2Zvcm1hdDQwX3N1cGVyX2Jsb2Nr
KHMpOworfQorCitzdGF0aWMgaW50IGdldF9zdXBlcl9qbm9kZShzdHJ1Y3Qgc3VwZXJfYmxvY2sg
KnMpCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbyA9IGdldF9zdXBlcl9wcml2
YXRlKHMpOworCWpub2RlICpzYl9qbm9kZTsKKwlpbnQgcmV0OworCisJc2Jfam5vZGUgPSByZWlz
ZXI0X2FsbG9jX2lvX2hlYWQoJmdldF9zYl9pbmZvKHMpLT5sb2Muc3VwZXIpOworCisJcmV0ID0g
amxvYWQoc2Jfam5vZGUpOworCisJaWYgKHJldCkgeworCQlyZWlzZXI0X2Ryb3BfaW9faGVhZChz
Yl9qbm9kZSk7CisJCXJldHVybiByZXQ7CisJfQorCisJcGluX2pub2RlX2RhdGEoc2Jfam5vZGUp
OworCWpyZWxzZShzYl9qbm9kZSk7CisKKwlzYmluZm8tPnUuZm9ybWF0NDAuc2Jfam5vZGUgPSBz
Yl9qbm9kZTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBkb25lX3N1cGVyX2pub2Rl
KHN0cnVjdCBzdXBlcl9ibG9jayAqcykKK3sKKwlqbm9kZSAqc2Jfam5vZGUgPSBnZXRfc3VwZXJf
cHJpdmF0ZShzKS0+dS5mb3JtYXQ0MC5zYl9qbm9kZTsKKworCWlmIChzYl9qbm9kZSkgeworCQl1
bnBpbl9qbm9kZV9kYXRhKHNiX2pub2RlKTsKKwkJcmVpc2VyNF9kcm9wX2lvX2hlYWQoc2Jfam5v
ZGUpOworCX0KK30KKwordHlwZWRlZiBlbnVtIGZvcm1hdDQwX2luaXRfc3RhZ2UgeworCU5PTkVf
RE9ORSA9IDAsCisJQ09OU1VMVF9ESVNLTUFQLAorCUZJTkRfQV9TVVBFUiwKKwlJTklUX0pPVVJO
QUxfSU5GTywKKwlJTklUX1NUQVRVUywKKwlKT1VSTkFMX1JFUExBWSwKKwlSRUFEX1NVUEVSLAor
CUtFWV9DSEVDSywKKwlJTklUX09JRCwKKwlJTklUX1RSRUUsCisJSk9VUk5BTF9SRUNPVkVSLAor
CUlOSVRfU0EsCisJSU5JVF9KTk9ERSwKKwlBTExfRE9ORQorfSBmb3JtYXQ0MF9pbml0X3N0YWdl
OworCitzdGF0aWMgZm9ybWF0NDBfZGlza19zdXBlcl9ibG9jayAqY29weV9zYihjb25zdCBzdHJ1
Y3QgYnVmZmVyX2hlYWQgKnN1cGVyX2JoKQoreworCWZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2sg
KnNiX2NvcHk7CisKKwlzYl9jb3B5ID0ga21hbGxvYyhzaXplb2YoZm9ybWF0NDBfZGlza19zdXBl
cl9ibG9jayksCisJCQkgIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoc2JfY29w
eSA9PSBOVUxMKQorCQlyZXR1cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkpOworCW1lbWNweShz
Yl9jb3B5LCAoKGZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2sgKikgc3VwZXJfYmgtPmJfZGF0YSks
CisJICAgICAgIHNpemVvZihmb3JtYXQ0MF9kaXNrX3N1cGVyX2Jsb2NrKSk7CisJcmV0dXJuIHNi
X2NvcHk7Cit9CisKK3N0YXRpYyBpbnQgY2hlY2tfa2V5X2Zvcm1hdChjb25zdCBmb3JtYXQ0MF9k
aXNrX3N1cGVyX2Jsb2NrICpzYl9jb3B5KQoreworCWlmICghZXF1aShSRUlTRVI0X0xBUkdFX0tF
WSwKKwkJICBnZXRfZm9ybWF0NDBfZmxhZ3Moc2JfY29weSkgJiAoMSA8PCBGT1JNQVQ0MF9MQVJH
RV9LRVlTKSkpIHsKKwkJd2FybmluZygibmlraXRhLTMyMjgiLCAiS2V5IGZvcm1hdCBtaXNtYXRj
aC4gIgorCQkJIk9ubHkgJXMga2V5cyBhcmUgc3VwcG9ydGVkLiIsCisJCQlSRUlTRVI0X0xBUkdF
X0tFWSA/ICJsYXJnZSIgOiAic21hbGwiKTsKKwkJcmV0dXJuIFJFVEVSUigtRUlOVkFMKTsKKwl9
CisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogdHJ5X2luaXRfZm9ybWF0NDAKKyAqIEBzdXBlcjoK
KyAqIEBzdGFnZToKKyAqCisgKi8KK3N0YXRpYyBpbnQgdHJ5X2luaXRfZm9ybWF0NDAoc3RydWN0
IHN1cGVyX2Jsb2NrICpzdXBlciwKKwkJCSAgICAgZm9ybWF0NDBfaW5pdF9zdGFnZSAqc3RhZ2Up
Cit7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgYnVmZmVyX2hlYWQgKnN1cGVyX2JoOworCXJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisJZm9ybWF0NDBfZGlza19zdXBlcl9ibG9jayAq
c2JfY29weTsKKwl0cmVlX2xldmVsIGhlaWdodDsKKwlyZWlzZXI0X2Jsb2NrX25yIHJvb3RfYmxv
Y2s7CisJbm9kZV9wbHVnaW4gKm5wbHVnOworCisJYXNzZXJ0KCJ2cy00NzUiLCBzdXBlciAhPSBO
VUxMKTsKKwlhc3NlcnQoInZzLTQ3NCIsIGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKSk7CisKKwkq
c3RhZ2UgPSBOT05FX0RPTkU7CisKKwlyZXN1bHQgPSBjb25zdWx0X2Rpc2ttYXAoc3VwZXIpOwor
CWlmIChyZXN1bHQpCisJCXJldHVybiByZXN1bHQ7CisJKnN0YWdlID0gQ09OU1VMVF9ESVNLTUFQ
OworCisJc3VwZXJfYmggPSBmaW5kX2FfZGlza19mb3JtYXQ0MF9zdXBlcl9ibG9jayhzdXBlcik7
CisJaWYgKElTX0VSUihzdXBlcl9iaCkpCisJCXJldHVybiBQVFJfRVJSKHN1cGVyX2JoKTsKKwli
cmVsc2Uoc3VwZXJfYmgpOworCSpzdGFnZSA9IEZJTkRfQV9TVVBFUjsKKworCS8qIG9rLCB3ZSBh
cmUgc3VyZSB0aGF0IGZpbGVzeXN0ZW0gZm9ybWF0IGlzIGEgZm9ybWF0NDAgZm9ybWF0ICovCisK
KwkvKiBtYXAgam5vZGVzIGZvciBqb3VybmFsIGNvbnRyb2wgYmxvY2tzIChoZWFkZXIsIGZvb3Rl
cikgdG8gZGlzayAgKi8KKwlyZXN1bHQgPSByZWlzZXI0X2luaXRfam91cm5hbF9pbmZvKHN1cGVy
KTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCSpzdGFnZSA9IElOSVRfSk9VUk5B
TF9JTkZPOworCisJLyogb2ssIHdlIGFyZSBzdXJlIHRoYXQgZmlsZXN5c3RlbSBmb3JtYXQgaXMg
YSBmb3JtYXQ0MCBmb3JtYXQgKi8KKwkvKiBOb3cgY2hlY2sgaXQncyBzdGF0ZSAqLworCXJlc3Vs
dCA9IHJlaXNlcjRfc3RhdHVzX2luaXQoRk9STUFUNDBfU1RBVFVTX0JMT0NLTlIpOworCWlmIChy
ZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0gLUVJTlZBTCkKKwkJLyogLUVJTlZBTCBtZWFucyB0aGVy
ZSBpcyBubyBtYWdpYywgc28gcHJvYmFibHkganVzdCBvbGQKKwkJICogZnMuICovCisJCXJldHVy
biByZXN1bHQ7CisJKnN0YWdlID0gSU5JVF9TVEFUVVM7CisKKwlyZXN1bHQgPSByZWlzZXI0X3N0
YXR1c19xdWVyeShOVUxMLCBOVUxMKTsKKwlpZiAocmVzdWx0ID09IFJFSVNFUjRfU1RBVFVTX01P
VU5UX1dBUk4pCisJCW5vdGljZSgidnBmLTEzNjMiLCAiV2FybmluZzogbW91bnRpbmcgJXMgd2l0
aCBlcnJvcnMuIiwKKwkJICAgICAgIHN1cGVyLT5zX2lkKTsKKwlpZiAocmVzdWx0ID09IFJFSVNF
UjRfU1RBVFVTX01PVU5UX1JPKSB7CisJCW5vdGljZSgidnBmLTEzNjQiLCAiV2FybmluZzogbW91
bnRpbmcgJXMgd2l0aCBmYXRhbCBlcnJvcnMsIgorCQkgICAgICAgIiBmb3JjaW5nIHJlYWQtb25s
eSBtb3VudC4iLCBzdXBlci0+c19pZCk7CisJCXN1cGVyLT5zX2ZsYWdzIHw9IFNCX1JET05MWTsK
Kwl9CisJcmVzdWx0ID0gcmVpc2VyNF9qb3VybmFsX3JlcGxheShzdXBlcik7CisJaWYgKHJlc3Vs
dCkKKwkJcmV0dXJuIHJlc3VsdDsKKwkqc3RhZ2UgPSBKT1VSTkFMX1JFUExBWTsKKworCXN1cGVy
X2JoID0gcmVhZF9zdXBlcl9ibG9jayhzdXBlcik7CisJaWYgKElTX0VSUihzdXBlcl9iaCkpCisJ
CXJldHVybiBQVFJfRVJSKHN1cGVyX2JoKTsKKwkqc3RhZ2UgPSBSRUFEX1NVUEVSOworCisJLyog
YWxsb2NhdGUgYW5kIG1ha2UgYSBjb3B5IG9mIGZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2sgKi8K
KwlzYl9jb3B5ID0gY29weV9zYihzdXBlcl9iaCk7CisJYnJlbHNlKHN1cGVyX2JoKTsKKworCWlm
IChJU19FUlIoc2JfY29weSkpCisJCXJldHVybiBQVFJfRVJSKHNiX2NvcHkpOworCXByaW50aygi
cmVpc2VyNDogJXM6IGZvdW5kIGRpc2sgZm9ybWF0IDQuMC4ldS5cbiIsCisJICAgICAgIHN1cGVy
LT5zX2lkLAorCSAgICAgICBnZXRfZm9ybWF0NDBfdmVyc2lvbihzYl9jb3B5KSk7CisJaWYgKGlu
Y29tcGxldGVfY29tcGF0aWJpbGl0eShzYl9jb3B5KSkKKwkJcHJpbnRrKCJyZWlzZXI0OiAlczog
Zm9ybWF0IHZlcnNpb24gbnVtYmVyICg0LjAuJXUpIGlzICIKKwkJICAgICAgICJncmVhdGVyIHRo
YW4gcmVsZWFzZSBudW1iZXIgKDQuJXUuJXUpIG9mIHJlaXNlcjQgIgorCQkgICAgICAgImtlcm5l
bCBtb2R1bGUuIFNvbWUgb2JqZWN0cyBvZiB0aGUgdm9sdW1lIGNhbiBiZSAiCisJCSAgICAgICAi
aW5hY2Nlc3NpYmxlLlxuIiwKKwkJICAgICAgIHN1cGVyLT5zX2lkLAorCQkgICAgICAgZ2V0X2Zv
cm1hdDQwX3ZlcnNpb24oc2JfY29weSksCisJCSAgICAgICBnZXRfcmVsZWFzZV9udW1iZXJfbWFq
b3IoKSwKKwkJICAgICAgIGdldF9yZWxlYXNlX251bWJlcl9taW5vcigpKTsKKwkvKiBtYWtlIHN1
cmUgdGhhdCBrZXkgZm9ybWF0IG9mIGtlcm5lbCBhbmQgZmlsZXN5c3RlbSBtYXRjaCAqLworCXJl
c3VsdCA9IGNoZWNrX2tleV9mb3JtYXQoc2JfY29weSk7CisJaWYgKHJlc3VsdCkgeworCQlrZnJl
ZShzYl9jb3B5KTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisJKnN0YWdlID0gS0VZX0NIRUNLOwor
CisJcmVzdWx0ID0gb2lkX2luaXRfYWxsb2NhdG9yKHN1cGVyLCBnZXRfZm9ybWF0NDBfZmlsZV9j
b3VudChzYl9jb3B5KSwKKwkJCQkgICAgZ2V0X2Zvcm1hdDQwX29pZChzYl9jb3B5KSk7CisJaWYg
KHJlc3VsdCkgeworCQlrZnJlZShzYl9jb3B5KTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisJKnN0
YWdlID0gSU5JVF9PSUQ7CisKKwkvKiBnZXQgdGhpbmdzIG5lY2Vzc2FyeSB0byBpbml0IHJlaXNl
cjRfdHJlZSAqLworCXJvb3RfYmxvY2sgPSBnZXRfZm9ybWF0NDBfcm9vdF9ibG9jayhzYl9jb3B5
KTsKKwloZWlnaHQgPSBnZXRfZm9ybWF0NDBfdHJlZV9oZWlnaHQoc2JfY29weSk7CisJbnBsdWcg
PSBub2RlX3BsdWdpbl9ieV9pZChnZXRfZm9ybWF0NDBfbm9kZV9wbHVnaW5faWQoc2JfY29weSkp
OworCisJLyogaW5pdGlhbGl6ZSByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqLworCXNiaW5mbyA9
IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKwlhc3NlcnQoIiIsIHNiaW5mby0+dHJlZS5zdXBl
ciA9PSBzdXBlcik7CisJLyogaW5pdCByZWlzZXI0X3RyZWUgZm9yIHRoZSBmaWxlc3lzdGVtICov
CisJcmVzdWx0ID0gcmVpc2VyNF9pbml0X3RyZWUoJnNiaW5mby0+dHJlZSwgJnJvb3RfYmxvY2ss
IGhlaWdodCwgbnBsdWcpOworCWlmIChyZXN1bHQpIHsKKwkJa2ZyZWUoc2JfY29weSk7CisJCXJl
dHVybiByZXN1bHQ7CisJfQorCSpzdGFnZSA9IElOSVRfVFJFRTsKKworCS8qCisJICogaW5pdGlh
bGl6ZSByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSB3aXRoIGRhdGEgZnJvbSBmb3JtYXQ0MCBzdXBl
cgorCSAqIGJsb2NrCisJICovCisJc2JpbmZvLT5kZWZhdWx0X3VpZCA9IDA7CisJc2JpbmZvLT5k
ZWZhdWx0X2dpZCA9IDA7CisJc2JpbmZvLT5ta2ZzX2lkID0gZ2V0X2Zvcm1hdDQwX21rZnNfaWQo
c2JfY29weSk7CisJLyogbnVtYmVyIG9mIGJsb2NrcyBpbiBmaWxlc3lzdGVtIGFuZCByZXNlcnZl
ZCBzcGFjZSAqLworCXJlaXNlcjRfc2V0X2Jsb2NrX2NvdW50KHN1cGVyLCBnZXRfZm9ybWF0NDBf
YmxvY2tfY291bnQoc2JfY29weSkpOworCXNiaW5mby0+YmxvY2tzX2ZyZWUgPSBnZXRfZm9ybWF0
NDBfZnJlZV9ibG9ja3Moc2JfY29weSk7CisJc2JpbmZvLT52ZXJzaW9uID0gZ2V0X2Zvcm1hdDQw
X3ZlcnNpb24oc2JfY29weSk7CisKKwlpZiAodXBkYXRlX2JhY2t1cF92ZXJzaW9uKHNiX2NvcHkp
KQorCQlwcmludGsoInJlaXNlcjQ6ICVzOiB1c2UgJ2ZzY2sucmVpc2VyNCAtLWZpeCcgIgorCQkg
ICAgICAgInRvIGNvbXBsZXRlIGRpc2sgZm9ybWF0IHVwZ3JhZGUuXG4iLCBzdXBlci0+c19pZCk7
CisJa2ZyZWUoc2JfY29weSk7CisKKwlzYmluZm8tPmZzdWlkID0gMDsKKwlzYmluZm8tPmZzX2Zs
YWdzIHw9ICgxIDw8IFJFSVNFUjRfQURHKTsJLyogaGFyZCBsaW5rcyBmb3IgZGlyZWN0b3JpZXMK
KwkJCQkJCSAqIGFyZSBub3Qgc3VwcG9ydGVkICovCisJc2JpbmZvLT5mc19mbGFncyB8PSAoMSA8
PCBSRUlTRVI0X09ORV9OT0RFX1BMVUdJTik7CS8qIGFsbCBub2RlcyBpbgorCQkJCQkJCQkgKiBs
YXlvdXQgNDAgYXJlCisJCQkJCQkJCSAqIG9mIG9uZQorCQkJCQkJCQkgKiBwbHVnaW4gKi8KKwkv
KiBzYmluZm8tPnRtZ3IgaXMgaW5pdGlhbGl6ZWQgYWxyZWFkeSAqLworCisJLyogcmVjb3ZlciBz
YiBkYXRhIHdoaWNoIHdlcmUgbG9nZ2VkIHNlcGFyYXRlbHkgZnJvbSBzYiBibG9jayAqLworCisJ
LyogTk9URS1OSUtJVEE6IHJlaXNlcjRfam91cm5hbF9yZWNvdmVyX3NiX2RhdGEoKSBjYWxscwor
CSAqIG9pZF9pbml0X2FsbG9jYXRvcigpIGFuZCByZWlzZXI0X3NldF9mcmVlX2Jsb2NrcygpIHdp
dGggbmV3CisJICogZGF0YS4gV2hhdCdzIHRoZSByZWFzb24gdG8gY2FsbCB0aGVtIGFib3ZlPyAq
LworCXJlc3VsdCA9IHJlaXNlcjRfam91cm5hbF9yZWNvdmVyX3NiX2RhdGEoc3VwZXIpOworCWlm
IChyZXN1bHQgIT0gMCkKKwkJcmV0dXJuIHJlc3VsdDsKKwkqc3RhZ2UgPSBKT1VSTkFMX1JFQ09W
RVI7CisKKwkvKgorCSAqIFNldCBudW1iZXIgb2YgdXNlZCBibG9ja3MuICBUaGUgbnVtYmVyIG9m
IHVzZWQgYmxvY2tzIGlzIG5vdCBzdG9yZWQKKwkgKiBuZWl0aGVyIGluIG9uLWRpc2sgc3VwZXIg
YmxvY2sgbm9yIGluIHRoZSBqb3VybmFsIGZvb3RlciBibG9ja3MuICBBdAorCSAqIHRoaXMgbW9t
ZW50IGFjdHVhbCB2YWx1ZXMgb2YgdG90YWwgYmxvY2tzIGFuZCBmcmVlIGJsb2NrIGNvdW50ZXJz
CisJICogYXJlIHNldCBpbiB0aGUgcmVpc2VyNCBzdXBlciBibG9jayAoaW4tbWVtb3J5IHN0cnVj
dHVyZSkgYW5kIHdlIGNhbgorCSAqIGNhbGN1bGF0ZSBudW1iZXIgb2YgdXNlZCBibG9ja3MgZnJv
bSB0aGVtLgorCSAqLworCXJlaXNlcjRfc2V0X2RhdGFfYmxvY2tzKHN1cGVyLAorCQkJCXJlaXNl
cjRfYmxvY2tfY291bnQoc3VwZXIpIC0KKwkJCQlyZWlzZXI0X2ZyZWVfYmxvY2tzKHN1cGVyKSk7
CisKKyNpZiBSRUlTRVI0X0RFQlVHCisJc2JpbmZvLT5taW5fYmxvY2tzX3VzZWQgPSAxNiAvKiBy
ZXNlcnZlZCBhcmVhICovICArCisJCTIgLyogc3VwZXIgYmxvY2tzICovICArCisJCTIgLyogam91
cm5hbCBmb290ZXIgYW5kIGhlYWRlciAqLyA7CisjZW5kaWYKKworCS8qIGluaXQgZGlzayBzcGFj
ZSBhbGxvY2F0b3IgKi8KKwlyZXN1bHQgPSBzYV9pbml0X2FsbG9jYXRvcihyZWlzZXI0X2dldF9z
cGFjZV9hbGxvY2F0b3Ioc3VwZXIpLAorCQkJCSAgIHN1cGVyLCBOVUxMKTsKKwlpZiAocmVzdWx0
KQorCQlyZXR1cm4gcmVzdWx0OworCSpzdGFnZSA9IElOSVRfU0E7CisKKwlyZXN1bHQgPSBnZXRf
c3VwZXJfam5vZGUoc3VwZXIpOworCWlmIChyZXN1bHQgPT0gMCkKKwkJKnN0YWdlID0gQUxMX0RP
TkU7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogcGx1Z2luLT51LmZvcm1hdC5nZXRfcmVhZHkg
Ki8KK2ludCBpbml0X2Zvcm1hdF9mb3JtYXQ0MChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMsIHZvaWQg
KmRhdGEgVU5VU0VEX0FSRykKK3sKKwlpbnQgcmVzdWx0OworCWZvcm1hdDQwX2luaXRfc3RhZ2Ug
c3RhZ2U7CisKKwlyZXN1bHQgPSB0cnlfaW5pdF9mb3JtYXQ0MChzLCAmc3RhZ2UpOworCXN3aXRj
aCAoc3RhZ2UpIHsKKwljYXNlIEFMTF9ET05FOgorCQlhc3NlcnQoIm5pa2l0YS0zNDU4IiwgcmVz
dWx0ID09IDApOworCQlicmVhazsKKwljYXNlIElOSVRfSk5PREU6CisJCWRvbmVfc3VwZXJfam5v
ZGUocyk7CisJCS8qIGZhbGwgdGhyb3VnaCAqLworCWNhc2UgSU5JVF9TQToKKwkJc2FfZGVzdHJv
eV9hbGxvY2F0b3IocmVpc2VyNF9nZXRfc3BhY2VfYWxsb2NhdG9yKHMpLCBzKTsKKwkJLyogZmFs
bCB0aHJvdWdoICovCisJY2FzZSBKT1VSTkFMX1JFQ09WRVI6CisJY2FzZSBJTklUX1RSRUU6CisJ
CXJlaXNlcjRfZG9uZV90cmVlKCZnZXRfc3VwZXJfcHJpdmF0ZShzKS0+dHJlZSk7CisJCS8qIGZh
bGwgdGhyb3VnaCAqLworCWNhc2UgSU5JVF9PSUQ6CisJY2FzZSBLRVlfQ0hFQ0s6CisJY2FzZSBS
RUFEX1NVUEVSOgorCWNhc2UgSk9VUk5BTF9SRVBMQVk6CisJY2FzZSBJTklUX1NUQVRVUzoKKwkJ
cmVpc2VyNF9zdGF0dXNfZmluaXNoKCk7CisJCS8qIGZhbGwgdGhyb3VnaCAqLworCWNhc2UgSU5J
VF9KT1VSTkFMX0lORk86CisJCXJlaXNlcjRfZG9uZV9qb3VybmFsX2luZm8ocyk7CisJY2FzZSBG
SU5EX0FfU1VQRVI6CisJY2FzZSBDT05TVUxUX0RJU0tNQVA6CisJY2FzZSBOT05FX0RPTkU6CisJ
CWJyZWFrOworCWRlZmF1bHQ6CisJCWltcG9zc2libGUoIm5pa2l0YS0zNDU3IiwgImluaXQgc3Rh
Z2U6ICVpIiwgc3RhZ2UpOworCX0KKworCWlmICghc2JfcmRvbmx5KHMpICYmIHJlaXNlcjRfZnJl
ZV9ibG9ja3MocykgPCBSRUxFQVNFX1JFU0VSVkVEKQorCQlyZXR1cm4gUkVURVJSKC1FTk9TUEMp
OworCisJcmV0dXJuIHJlc3VsdDsKK30KKworc3RhdGljIHZvaWQgcGFja19mb3JtYXQ0MF9zdXBl
cihjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMsIGNoYXIgKmRhdGEpCit7CisJZm9ybWF0NDBf
ZGlza19zdXBlcl9ibG9jayAqc3VwZXJfZGF0YSA9CisJICAgIChmb3JtYXQ0MF9kaXNrX3N1cGVy
X2Jsb2NrICopIGRhdGE7CisKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvID0gZ2V0
X3N1cGVyX3ByaXZhdGUocyk7CisKKwlhc3NlcnQoInphbS01OTEiLCBkYXRhICE9IE5VTEwpOwor
CisJcHV0X3VuYWxpZ25lZChjcHVfdG9fbGU2NChyZWlzZXI0X2ZyZWVfY29tbWl0dGVkX2Jsb2Nr
cyhzKSksCisJCSAgICAgICZzdXBlcl9kYXRhLT5mcmVlX2Jsb2Nrcyk7CisKKwlwdXRfdW5hbGln
bmVkKGNwdV90b19sZTY0KHNiaW5mby0+dHJlZS5yb290X2Jsb2NrKSwKKwkJICAgICAgJnN1cGVy
X2RhdGEtPnJvb3RfYmxvY2spOworCisJcHV0X3VuYWxpZ25lZChjcHVfdG9fbGU2NChvaWRfbmV4
dChzKSksCisJCSAgICAgICZzdXBlcl9kYXRhLT5vaWQpOworCisJcHV0X3VuYWxpZ25lZChjcHVf
dG9fbGU2NChvaWRzX3VzZWQocykpLAorCQkgICAgICAmc3VwZXJfZGF0YS0+ZmlsZV9jb3VudCk7
CisKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTE2KHNiaW5mby0+dHJlZS5oZWlnaHQpLAorCQkg
ICAgICAmc3VwZXJfZGF0YS0+dHJlZV9oZWlnaHQpOworCisJaWYgKHVwZGF0ZV9kaXNrX3ZlcnNp
b25fbWlub3Ioc3VwZXJfZGF0YSkpIHsKKwkJX191MzIgdmVyc2lvbiA9IFBMVUdJTl9MSUJSQVJZ
X1ZFUlNJT04gfCBGT1JNQVQ0MF9VUERBVEVfQkFDS1VQOworCisJCXB1dF91bmFsaWduZWQoY3B1
X3RvX2xlMzIodmVyc2lvbiksICZzdXBlcl9kYXRhLT52ZXJzaW9uKTsKKwl9Cit9CisKKy8qIHBs
dWdpbi0+dS5mb3JtYXQubG9nX3N1cGVyCisgICByZXR1cm4gYSBqbm9kZSB3aGljaCBzaG91bGQg
YmUgYWRkZWQgdG8gdHJhbnNhY3Rpb24gd2hlbiB0aGUgc3VwZXIgYmxvY2sKKyAgIGdldHMgbG9n
Z2VkICovCitqbm9kZSAqbG9nX3N1cGVyX2Zvcm1hdDQwKHN0cnVjdCBzdXBlcl9ibG9jayAqcykK
K3sKKwlqbm9kZSAqc2Jfam5vZGU7CisKKwlzYl9qbm9kZSA9IGdldF9zdXBlcl9wcml2YXRlKHMp
LT51LmZvcm1hdDQwLnNiX2pub2RlOworCisJamxvYWQoc2Jfam5vZGUpOworCisJcGFja19mb3Jt
YXQ0MF9zdXBlcihzLCBqZGF0YShzYl9qbm9kZSkpOworCisJanJlbHNlKHNiX2pub2RlKTsKKwor
CXJldHVybiBzYl9qbm9kZTsKK30KKworLyogcGx1Z2luLT51LmZvcm1hdC5yZWxlYXNlICovCitp
bnQgcmVsZWFzZV9mb3JtYXQ0MChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMpCit7CisJaW50IHJldDsK
KwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJc2JpbmZvID0gZ2V0X3N1cGVy
X3ByaXZhdGUocyk7CisJYXNzZXJ0KCJ6YW0tNTc5Iiwgc2JpbmZvICE9IE5VTEwpOworCisJaWYg
KCFzYl9yZG9ubHkocykpIHsKKwkJcmV0ID0gcmVpc2VyNF9jYXB0dXJlX3N1cGVyX2Jsb2NrKHMp
OworCQlpZiAocmV0ICE9IDApCisJCQl3YXJuaW5nKCJ2cy04OTgiLAorCQkJCSJyZWlzZXI0X2Nh
cHR1cmVfc3VwZXJfYmxvY2sgZmFpbGVkOiAlZCIsCisJCQkJcmV0KTsKKworCQlyZXQgPSB0eG5t
Z3JfZm9yY2VfY29tbWl0X2FsbChzLCAxKTsKKwkJaWYgKHJldCAhPSAwKQorCQkJd2FybmluZygi
am1hY2QtNzQ0MzgiLCAidHhuX2ZvcmNlIGZhaWxlZDogJWQiLCByZXQpOworCisJCWFsbF9ncmFi
YmVkMmZyZWUoKTsKKwl9CisKKwlzYV9kZXN0cm95X2FsbG9jYXRvcigmc2JpbmZvLT5zcGFjZV9h
bGxvY2F0b3IsIHMpOworCXJlaXNlcjRfZG9uZV9qb3VybmFsX2luZm8ocyk7CisJZG9uZV9zdXBl
cl9qbm9kZShzKTsKKworCXJjdV9iYXJyaWVyKCk7CisJcmVpc2VyNF9kb25lX3RyZWUoJnNiaW5m
by0+dHJlZSk7CisJLyogY2FsbCBmaW5pc2hfcmN1KCksIGJlY2F1c2Ugc29tZSB6bm9kZSB3ZXJl
ICJyZWxlYXNlZCIgaW4KKwkgKiByZWlzZXI0X2RvbmVfdHJlZSgpLiAqLworCXJjdV9iYXJyaWVy
KCk7CisKKwlyZXR1cm4gMDsKK30KKworI2RlZmluZSBGT1JNQVQ0MF9ST09UX0xPQ0FMSVRZIDQx
CisjZGVmaW5lIEZPUk1BVDQwX1JPT1RfT0JKRUNUSUQgNDIKKworLyogcGx1Z2luLT51LmZvcm1h
dC5yb290X2Rpcl9rZXkgKi8KK2NvbnN0IHJlaXNlcjRfa2V5ICpyb290X2Rpcl9rZXlfZm9ybWF0
NDAoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcgorCQkJCQkgVU5VU0VEX0FSRykKK3sK
KwlzdGF0aWMgY29uc3QgcmVpc2VyNF9rZXkgRk9STUFUNDBfUk9PVF9ESVJfS0VZID0geworCQku
ZWwgPSB7CisJCQlfX2NvbnN0YW50X2NwdV90b19sZTY0KChGT1JNQVQ0MF9ST09UX0xPQ0FMSVRZ
IDw8IDQpIHwgS0VZX1NEX01JTk9SKSwKKyNpZiBSRUlTRVI0X0xBUkdFX0tFWQorCQkJT05fTEFS
R0VfS0VZKDB1bGwsKQorI2VuZGlmCisJCQlfX2NvbnN0YW50X2NwdV90b19sZTY0KEZPUk1BVDQw
X1JPT1RfT0JKRUNUSUQpLAorCQkJMHVsbAorCQl9CisJfTsKKworCXJldHVybiAmRk9STUFUNDBf
Uk9PVF9ESVJfS0VZOworfQorCisvKiBwbHVnaW4tPnUuZm9ybWF0LmNoZWNrX29wZW4uCisgICBD
aGVjayB0aGUgb3BlbmVkIG9iamVjdCBmb3IgdmFsaWRuZXNzLiBGb3Igbm93IGl0IGNoZWNrcyBm
b3IgdGhlIHZhbGlkIG9pZCAmCisgICBsb2NhbGl0eSBvbmx5LCBjYW4gYmUgaW1wcm92ZWQgbGF0
ZXIgYW5kIGl0IGl0cyB3b3JrIG1heSBkZXBlbmQgb24gdGhlIG1vdW50CisgICBvcHRpb25zLiAq
LworaW50IGNoZWNrX29wZW5fZm9ybWF0NDAoY29uc3Qgc3RydWN0IGlub2RlICpvYmplY3QpCit7
CisJb2lkX3QgbWF4LCBvaWQ7CisKKwltYXggPSBvaWRfbmV4dChvYmplY3QtPmlfc2IpIC0gMTsK
KworCS8qIENoZWNrIHRoZSBvaWQuICovCisJb2lkID0gZ2V0X2lub2RlX29pZChvYmplY3QpOwor
CWlmIChvaWQgPiBtYXgpIHsKKwkJd2FybmluZygidnBmLTEzNjAiLCAiVGhlIG9iamVjdCB3aXRo
IHRoZSBvaWQgJWxsdSAiCisJCQkiZ3JlYXRlciB0aGVuIHRoZSBtYXggdXNlZCBvaWQgJWxsdSBm
b3VuZC4iLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylvaWQsICh1bnNpZ25lZCBsb25nIGxvbmcp
bWF4KTsKKworCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCX0KKworCS8qIENoZWNrIHRoZSBsb2Nh
bGl0eS4gKi8KKwlvaWQgPSByZWlzZXI0X2lub2RlX2RhdGEob2JqZWN0KS0+bG9jYWxpdHlfaWQ7
CisJaWYgKG9pZCA+IG1heCkgeworCQl3YXJuaW5nKCJ2cGYtMTM2MSIsICJUaGUgb2JqZWN0IHdp
dGggdGhlIGxvY2FsaXR5ICVsbHUgIgorCQkJImdyZWF0ZXIgdGhlbiB0aGUgbWF4IHVzZWQgb2lk
ICVsbHUgZm91bmQuIiwKKwkJCSh1bnNpZ25lZCBsb25nIGxvbmcpb2lkLCAodW5zaWduZWQgbG9u
ZyBsb25nKW1heCk7CisKKwkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwl9CisKKwlyZXR1cm4gMDsK
K30KKworLyoKKyAqIHBsdWdpbi0+dS5mb3JtYXQudmVyc2lvbl91cGRhdGUKKyAqIFVwZ3JhZGUg
bWlub3IgZGlzayBmb3JtYXQgdmVyc2lvbiBudW1iZXIKKyAqLworaW50IHZlcnNpb25fdXBkYXRl
X2Zvcm1hdDQwKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpIHsKKwl0eG5faGFuZGxlICogdHJh
bnM7CisJbG9ja19oYW5kbGUgbGg7CisJdHhuX2F0b20gKmF0b207CisJaW50IHJldDsKKworCS8q
IE5vdGhpbmcgdG8gZG8gaWYgUk8gbW91bnQgb3IgdGhlIG9uLWRpc2sgdmVyc2lvbiBpcyBub3Qg
bGVzcy4gKi8KKwlpZiAoc2JfcmRvbmx5KHN1cGVyKSkKKyAJCXJldHVybiAwOworCisJaWYgKGdl
dF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+dmVyc2lvbiA+PSBnZXRfcmVsZWFzZV9udW1iZXJfbWlu
b3IoKSkKKwkJcmV0dXJuIDA7CisKKwlwcmludGsoInJlaXNlcjQ6ICVzOiB1cGdyYWRpbmcgZGlz
ayBmb3JtYXQgdG8gNC4wLiV1LlxuIiwKKwkgICAgICAgc3VwZXItPnNfaWQsCisJICAgICAgIGdl
dF9yZWxlYXNlX251bWJlcl9taW5vcigpKTsKKwlwcmludGsoInJlaXNlcjQ6ICVzOiB1c2UgJ2Zz
Y2sucmVpc2VyNCAtLWZpeCcgIgorCSAgICAgICAidG8gY29tcGxldGUgZGlzayBmb3JtYXQgdXBn
cmFkZS5cbiIsIHN1cGVyLT5zX2lkKTsKKworCS8qIE1hcmsgdGhlIHViZXIgem5vZGUgZGlydHkg
dG8gY2FsbCBsb2dfc3VwZXIgb24gd3JpdGVfbG9ncy4gKi8KKwlpbml0X2xoKCZsaCk7CisJcmV0
ID0gZ2V0X3ViZXJfem5vZGUocmVpc2VyNF9nZXRfdHJlZShzdXBlciksIFpOT0RFX1dSSVRFX0xP
Q0ssCisJCQkgICAgIFpOT0RFX0xPQ0tfSElQUkksICZsaCk7CisJaWYgKHJldCAhPSAwKQorCQly
ZXR1cm4gcmV0OworCisJem5vZGVfbWFrZV9kaXJ0eShsaC5ub2RlKTsKKwlkb25lX2xoKCZsaCk7
CisKKwkvKiBVcGRhdGUgdGhlIGJhY2t1cCBibG9ja3MuICovCisKKwkvKiBGb3JjZSB3cml0ZV9s
b2dzIGltbWVkaWF0ZWx5LiAqLworCXRyYW5zID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpLT50cmFu
czsKKwlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwlhc3NlcnQoInZwZi0xOTA2
IiwgYXRvbSAhPSBOVUxMKTsKKworCXNwaW5fbG9ja190eG5oKHRyYW5zKTsKKwlyZXR1cm4gZm9y
Y2VfY29tbWl0X2F0b20odHJhbnMpOworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9j
YWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFt
ZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1j
b2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9y
bWF0L2Rpc2tfZm9ybWF0NDAuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZGlza19m
b3JtYXQvZGlza19mb3JtYXQ0MC5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3Bs
dWdpbi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1hdDQwLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAw
MDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1h
dC9kaXNrX2Zvcm1hdDQwLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NTkyMjIyMjQgKzAxMDAKQEAg
LTAsMCArMSwxMTEgQEAKKy8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBs
aWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogdGhpcyBmaWxlIGNv
bnRhaW5zOgorICAgLSBkZWZpbml0aW9uIG9mIG9uZGlzayBzdXBlciBibG9jayBvZiBzdGFuZGFy
dCBkaXNrIGxheW91dCBmb3IKKyAgICAgcmVpc2VyIDQuMCAobGF5b3V0IDQwKQorICAgLSBkZWZp
bml0aW9uIG9mIGxheW91dCA0MCBzcGVjaWZpYyBwb3J0aW9uIG9mIGluLWNvcmUgc3VwZXIgYmxv
Y2sKKyAgIC0gZGVjbGFyYXRpb25zIG9mIGZ1bmN0aW9ucyBpbXBsZW1lbnRpbmcgbWV0aG9kcyBv
ZiBsYXlvdXQgcGx1Z2luCisgICAgIGZvciBsYXlvdXQgNDAKKyAgIC0gZGVjbGFyYXRpb25zIG9m
IGZ1bmN0aW9ucyB1c2VkIHRvIGdldC9zZXQgZmllbGRzIGluIGxheW91dCA0MCBzdXBlciBibG9j
aworKi8KKworI2lmbmRlZiBfX0RJU0tfRk9STUFUNDBfSF9fCisjZGVmaW5lIF9fRElTS19GT1JN
QVQ0MF9IX18KKworLyogbWFnaWMgZm9yIGRlZmF1bHQgcmVpc2VyNCBsYXlvdXQgKi8KKyNkZWZp
bmUgRk9STUFUNDBfTUFHSUMgIlJlSXNFcjQwRm9SbUF0IgorI2RlZmluZSBGT1JNQVQ0MF9PRkZT
RVQgKFJFSVNFUjRfTUFTVEVSX09GRlNFVCArIFBBR0VfU0laRSkKKworI2luY2x1ZGUgIi4uLy4u
L2Rmb3JtYXQuaCIKKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVy
X2Jsb2NrICAqLworCit0eXBlZGVmIGVudW0geworCUZPUk1BVDQwX0xBUkdFX0tFWVMKK30gZm9y
bWF0NDBfZmxhZ3M7CisKKy8qIG9uZGlzayBzdXBlciBibG9jayBmb3IgZm9ybWF0IDQwLiBJdCBp
cyA1MTIgYnl0ZXMgbG9uZyAqLwordHlwZWRlZiBzdHJ1Y3QgZm9ybWF0NDBfZGlza19zdXBlcl9i
bG9jayB7CisJLyogICAwICovIGQ2NCBibG9ja19jb3VudDsKKwkvKiBudW1iZXIgb2YgYmxvY2sg
aW4gYSBmaWxlc3lzdGVtICovCisJLyogICA4ICovIGQ2NCBmcmVlX2Jsb2NrczsKKwkvKiBudW1i
ZXIgb2YgZnJlZSBibG9ja3MgKi8KKwkvKiAgMTYgKi8gZDY0IHJvb3RfYmxvY2s7CisJLyogZmls
ZXN5c3RlbSB0cmVlIHJvb3QgYmxvY2sgKi8KKwkvKiAgMjQgKi8gZDY0IG9pZDsKKwkvKiBzbWFs
bGVzdCBmcmVlIG9iamVjdGlkICovCisJLyogIDMyICovIGQ2NCBmaWxlX2NvdW50OworCS8qIG51
bWJlciBvZiBmaWxlcyBpbiBhIGZpbGVzeXN0ZW0gKi8KKwkvKiAgNDAgKi8gZDY0IGZsdXNoZXM7
CisJLyogbnVtYmVyIG9mIHRpbWVzIHN1cGVyIGJsb2NrIHdhcworCSAgIGZsdXNoZWQuIE5lZWRl
ZCBpZiBmb3JtYXQgNDAKKwkgICB3aWxsIGhhdmUgZmV3IHN1cGVyIGJsb2NrcyAqLworCS8qICA0
OCAqLyBkMzIgbWtmc19pZDsKKwkvKiB1bmlxdWUgaWRlbnRpZmllciBvZiBmcyAqLworCS8qICA1
MiAqLyBjaGFyIG1hZ2ljWzE2XTsKKwkvKiBtYWdpYyBzdHJpbmcgUmVJc0VyNDBGb1JtQXQgKi8K
KwkvKiAgNjggKi8gZDE2IHRyZWVfaGVpZ2h0OworCS8qIGhlaWdodCBvZiBmaWxlc3lzdGVtIHRy
ZWUgKi8KKwkvKiAgNzAgKi8gZDE2IGZvcm1hdHRpbmdfcG9saWN5OworCS8qIG5vdCB1c2VkIGFu
eW1vcmUgKi8KKwkvKiAgNzIgKi8gZDY0IGZsYWdzOworCS8qICA4MCAqLyBkMzIgdmVyc2lvbjsK
KwkvKiBvbi1kaXNrIGZvcm1hdCB2ZXJzaW9uIG51bWJlcgorCSAgIGluaXRpYWxseSBhc3NpZ25l
ZCBieSBta2ZzIGFzIHRoZSBncmVhdGVzdCBmb3JtYXQ0MAorCSAgIHZlcnNpb24gbnVtYmVyIHN1
cHBvcnRlZCBieSByZWlzZXI0cHJvZ3MgYW5kIHVwZGF0ZWQKKwkgICBpbiBtb3VudCB0aW1lIGlu
IGFjY29yZGFuY2Ugd2l0aCB0aGUgZ3JlYXRlc3QgZm9ybWF0NDAKKwkgICB2ZXJzaW9uIG51bWJl
ciBzdXBwb3J0ZWQgYnkga2VybmVsLgorCSAgIElzIHVzZWQgYnkgZnNjayB0byBjYXRjaCBwb3Nz
aWJsZSBjb3JydXB0aW9uIGFuZAorCSAgIGZvciB2YXJpb3VzIGNvbXBhdGliaWxpdHkgaXNzdWVz
ICovCisJLyogIDg0ICovIGQzMiBub2RlX3BpZDsKKwkvKiBub2RlIHBsdWdpbiBpZCAqLworCS8q
ICA4OCAqLyBjaGFyIG5vdF91c2VkWzQyNF07Cit9IGZvcm1hdDQwX2Rpc2tfc3VwZXJfYmxvY2s7
CisKKy8qIGZvcm1hdCA0MCBzcGVjaWZpYyBwYXJ0IG9mIHJlaXNlcjRfc3VwZXJfaW5mb19kYXRh
ICovCit0eXBlZGVmIHN0cnVjdCBmb3JtYXQ0MF9zdXBlcl9pbmZvIHsKKy8qCWZvcm1hdDQwX2Rp
c2tfc3VwZXJfYmxvY2sgYWN0dWFsX3NiOyAqLworCWpub2RlICpzYl9qbm9kZTsKKwlzdHJ1Y3Qg
eworCQlyZWlzZXI0X2Jsb2NrX25yIHN1cGVyOworCX0gbG9jOworfSBmb3JtYXQ0MF9zdXBlcl9p
bmZvOworCisvKiBEZWZpbmVzIGZvciBqb3VybmFsIGhlYWRlciBhbmQgZm9vdGVyIHJlc3BlY3Rp
dmVseS4gKi8KKyNkZWZpbmUgRk9STUFUNDBfSk9VUk5BTF9IRUFERVJfQkxPQ0tOUiBcCisJKChS
RUlTRVI0X01BU1RFUl9PRkZTRVQgLyBQQUdFX1NJWkUpICsgMykKKworI2RlZmluZSBGT1JNQVQ0
MF9KT1VSTkFMX0ZPT1RFUl9CTE9DS05SIFwKKwkoKFJFSVNFUjRfTUFTVEVSX09GRlNFVCAvIFBB
R0VfU0laRSkgKyA0KQorCisjZGVmaW5lIEZPUk1BVDQwX1NUQVRVU19CTE9DS05SIFwKKwkoKFJF
SVNFUjRfTUFTVEVSX09GRlNFVCAvIFBBR0VfU0laRSkgKyA1KQorCisvKiBEaXNrbWFwIGRlY2xh
cmF0aW9ucyAqLworI2RlZmluZSBGT1JNQVQ0MF9QTFVHSU5fRElTS01BUF9JRCAoKFJFSVNFUjRf
Rk9STUFUX1BMVUdJTl9UWVBFPDwxNikgfCAoRk9STUFUNDBfSUQpKQorI2RlZmluZSBGT1JNQVQ0
MF9TVVBFUiAxCisjZGVmaW5lIEZPUk1BVDQwX0pIIDIKKyNkZWZpbmUgRk9STUFUNDBfSkYgMwor
CisvKiBkZWNsYXJhdGlvbnMgb2YgZnVuY3Rpb25zIGltcGxlbWVudGluZyBtZXRob2RzIG9mIGxh
eW91dCBwbHVnaW4gZm9yCisgICBmb3JtYXQgNDAuIFRoZSBmdW5jdGlvbnMgdGhlaXJzZWxmIGFy
ZSBpbiBkaXNrX2Zvcm1hdDQwLmMgKi8KK2V4dGVybiBpbnQgaW5pdF9mb3JtYXRfZm9ybWF0NDAo
c3RydWN0IHN1cGVyX2Jsb2NrICosIHZvaWQgKmRhdGEpOworZXh0ZXJuIGNvbnN0IHJlaXNlcjRf
a2V5ICpyb290X2Rpcl9rZXlfZm9ybWF0NDAoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICopOwor
ZXh0ZXJuIGludCByZWxlYXNlX2Zvcm1hdDQwKHN0cnVjdCBzdXBlcl9ibG9jayAqcyk7CitleHRl
cm4gam5vZGUgKmxvZ19zdXBlcl9mb3JtYXQ0MChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMpOworZXh0
ZXJuIGludCBjaGVja19vcGVuX2Zvcm1hdDQwKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqZWN0KTsK
K2V4dGVybiBpbnQgdmVyc2lvbl91cGRhdGVfZm9ybWF0NDAoc3RydWN0IHN1cGVyX2Jsb2NrICpz
dXBlcik7CisKKy8qIF9fRElTS19GT1JNQVQ0MF9IX18gKi8KKyNlbmRpZgorCisvKiBNYWtlIExp
bnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTog
IksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13
aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoK
KyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNl
cjQvcGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0LmMgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvcGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0LmMKLS0tIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0LmMJMTk3MC0wMS0wMSAw
MTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdp
bi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1hdC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDU5MjIyMjI0
ICswMTAwCkBAIC0wLDAgKzEsMzggQEAKKy8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5IEhhbnMg
UmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1
ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luX2hlYWRlci5oIgorI2luY2x1
ZGUgImRpc2tfZm9ybWF0NDAuaCIKKyNpbmNsdWRlICJkaXNrX2Zvcm1hdC5oIgorI2luY2x1ZGUg
Ii4uL3BsdWdpbi5oIgorCisvKiBpbml0aWFsaXphdGlvbiBvZiBkaXNrIGxheW91dCBwbHVnaW5z
ICovCitkaXNrX2Zvcm1hdF9wbHVnaW4gZm9ybWF0X3BsdWdpbnNbTEFTVF9GT1JNQVRfSURdID0g
eworCVtGT1JNQVQ0MF9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0ZP
Uk1BVF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZPUk1BVDQwX0lELAorCQkJLnBvcHMgPSBOVUxM
LAorCQkJLmxhYmVsID0gInJlaXNlcjQwIiwKKwkJCS5kZXNjID0gInN0YW5kYXJkIGRpc2sgbGF5
b3V0IGZvciByZWlzZXI0MCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQku
aW5pdF9mb3JtYXQgPSBpbml0X2Zvcm1hdF9mb3JtYXQ0MCwKKwkJLnJvb3RfZGlyX2tleSA9IHJv
b3RfZGlyX2tleV9mb3JtYXQ0MCwKKwkJLnJlbGVhc2UgPSByZWxlYXNlX2Zvcm1hdDQwLAorCQku
bG9nX3N1cGVyID0gbG9nX3N1cGVyX2Zvcm1hdDQwLAorCQkuY2hlY2tfb3BlbiA9IGNoZWNrX29w
ZW5fZm9ybWF0NDAsCisJCS52ZXJzaW9uX3VwZGF0ZSA9IHZlcnNpb25fdXBkYXRlX2Zvcm1hdDQw
CisJfQorfTsKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAg
IGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFz
aWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNj
cm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1hdC5o
IGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1hdC9kaXNrX2Zvcm1hdC5o
Ci0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1hdC9kaXNr
X2Zvcm1hdC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01
LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZGlza19mb3JtYXQvZGlza19mb3JtYXQuaAkyMDIwLTAy
LTA1IDIwOjUzOjQxLjQ1OTIyMjIyNCArMDEwMApAQCAtMCwwICsxLDI3IEBACisvKiBDb3B5cmln
aHQgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNl
cjQvUkVBRE1FICovCisKKy8qIGlkZW50aWZpZXJzIGZvciBkaXNrIGxheW91dHMsIHRoZXkgYXJl
IGFsc28gdXNlZCBhcyBpbmRleGVzIGluIGFycmF5IG9mIGRpc2sKKyAgIHBsdWdpbnMgKi8KKwor
I2lmICFkZWZpbmVkKCBfX1JFSVNFUjRfRElTS19GT1JNQVRfSF9fICkKKyNkZWZpbmUgX19SRUlT
RVI0X0RJU0tfRk9STUFUX0hfXworCit0eXBlZGVmIGVudW0geworCS8qIHN0YW5kYXJkIHJlaXNl
cjQgZGlzayBsYXlvdXQgcGx1Z2luIGlkICovCisJRk9STUFUNDBfSUQsCisJTEFTVF9GT1JNQVRf
SUQKK30gZGlza19mb3JtYXRfaWQ7CisKKy8qIF9fUkVJU0VSNF9ESVNLX0ZPUk1BVF9IX18gKi8K
KyNlbmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAg
Yy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNp
Yy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Ny
b2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9ybWF0L01ha2VmaWxlIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9kaXNrX2Zvcm1hdC9NYWtlZmlsZQotLS0gbGludXgt
NS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZGlza19mb3JtYXQvTWFrZWZpbGUJMTk3MC0w
MS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3BsdWdpbi9kaXNrX2Zvcm1hdC9NYWtlZmlsZQkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ1OTIyMjIy
NCArMDEwMApAQCAtMCwwICsxLDUgQEAKK29iai0kKENPTkZJR19SRUlTRVI0X0ZTKSArPSBkZl9w
bHVnaW5zLm8KKworZGZfcGx1Z2lucy1vYmpzIDo9CVwKKwlkaXNrX2Zvcm1hdDQwLm8JXAorCWRp
c2tfZm9ybWF0Lm8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vZmlicmF0aW9uLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1
Z2luL2ZpYnJhdGlvbi5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9m
aWJyYXRpb24uYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpYnJhdGlvbi5jCTIwMjAtMDItMDUgMjA6NTM6NDEu
NDU5MjIyMjI0ICswMTAwCkBAIC0wLDAgKzEsMTc1IEBACisvKiBDb3B5cmlnaHQgMjAwNCBieSBI
YW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLwor
CisvKiBEaXJlY3RvcnkgZmlicmF0aW9ucyAqLworCisvKgorICogU3VwcG9zZSB3ZSBoYXZlIGEg
ZGlyZWN0b3J5IHRyZWUgd2l0aCBzb3VyY2VzIG9mIHNvbWUgcHJvamVjdC4gRHVyaW5nCisgKiBj
b21waWxhdGlvbiAubyBmaWxlcyBhcmUgY3JlYXRlZCB3aXRoaW4gdGhpcyB0cmVlLiBUaGlzIG1h
a2VzIGFjY2VzcworICogdG8gdGhlIG9yaWdpbmFsIHNvdXJjZSBmaWxlcyBsZXNzIGVmZmljaWVu
dCwgYmVjYXVzZSBzb3VyY2UgZmlsZXMgYXJlCisgKiBub3cgImRpbHV0ZWQiIGJ5IG9iamVjdCBm
aWxlczogZGVmYXVsdCBkaXJlY3RvcnkgcGx1Z2luIHVzZXMgcHJlZml4CisgKiBvZiBhIGZpbGUg
bmFtZSBhcyBhIHBhcnQgb2YgdGhlIGtleSBmb3IgZGlyZWN0b3J5IGVudHJ5IChhbmQgdGhpcwor
ICogcGFydCBpcyBhbHNvIGluaGVyaXRlZCBieSB0aGUga2V5IG9mIGZpbGUgYm9keSkuIFRoaXMg
bWVhbnMgdGhhdAorICogZm9vLm8gd2lsbCBiZSBsb2NhdGVkIGNsb3NlIHRvIGZvby5jIGFuZCBm
b28uaCBpbiB0aGUgdHJlZS4KKyAqCisgKiBUbyBhdm9pZCB0aGlzIGVmZmVjdCBkaXJlY3Rvcnkg
cGx1Z2luIGZpbGwgaGlnaGVzdCA3ICh1bnVzZWQKKyAqIG9yaWdpbmFsbHkpIGJpdHMgb2YgdGhl
IHNlY29uZCBjb21wb25lbnQgb2YgdGhlIGRpcmVjdG9yeSBlbnRyeSBrZXkKKyAqIGJ5IGJpdC1w
YXR0ZXJuIGRlcGVuZGluZyBvbiB0aGUgZmlsZSBuYW1lIChzZWUKKyAqIGZzL3JlaXNlcjQva2Fz
c2lnbi5jOmJ1aWxkX2VudHJ5X2tleV9jb21tb24oKSkuIFRoZXNlIGJpdHMgYXJlIGNhbGxlZAor
ICogImZpYnJlIi4gRmlicmUgb2YgdGhlIGZpbGUgbmFtZSBrZXkgaXMgaW5oZXJpdGVkIGJ5IGtl
eSBvZiBzdGF0IGRhdGEKKyAqIGFuZCBrZXlzIG9mIGZpbGUgYm9keSAoaW4gdGhlIGNhc2Ugb2Yg
UkVJU0VSNF9MQVJHRV9LRVkpLgorICoKKyAqIEZpYnJlIGZvciBhIGdpdmVuIGZpbGUgaXMgY2hv
c2VuIGJ5IHBlci1kaXJlY3RvcnkgZmlicmF0aW9uCisgKiBwbHVnaW4uIE5hbWVzIHdpdGhpbiBn
aXZlbiBmaWJyZSBhcmUgb3JkZXJlZCBsZXhpY29ncmFwaGljYWxseS4KKyAqLworCisjaW5jbHVk
ZSAiLi4vZGVidWcuaCIKKyNpbmNsdWRlICJwbHVnaW5faGVhZGVyLmgiCisjaW5jbHVkZSAicGx1
Z2luLmgiCisjaW5jbHVkZSAiLi4vc3VwZXIuaCIKKyNpbmNsdWRlICIuLi9pbm9kZS5oIgorCisj
aW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKworc3RhdGljIGNvbnN0IGludCBmaWJyZV9zaGlmdCA9
IDU3OworCisjZGVmaW5lIEZJQlJFX05PKG4pICgoKF9fdTY0KShuKSkgPDwgZmlicmVfc2hpZnQp
CisKKy8qCisgKiBUcml2aWFsIGZpYnJhdGlvbjogYWxsIGZpbGVzIG9mIGRpcmVjdG9yeSBhcmUg
anVzdCBvcmRlcmVkCisgKiBsZXhpY29ncmFwaGljYWxseS4KKyAqLworc3RhdGljIF9fdTY0IGZp
YnJlX3RyaXZpYWwoY29uc3Qgc3RydWN0IGlub2RlICpkaXIsIGNvbnN0IGNoYXIgKm5hbWUsIGlu
dCBsZW4pCit7CisJcmV0dXJuIEZJQlJFX05PKDApOworfQorCisvKgorICogZG90LW8gZmlicmF0
aW9uOiBwbGFjZSAubyBmaWxlcyBhZnRlciBhbGwgb3RoZXJzLgorICovCitzdGF0aWMgX191NjQg
ZmlicmVfZG90X28oY29uc3Qgc3RydWN0IGlub2RlICpkaXIsIGNvbnN0IGNoYXIgKm5hbWUsIGlu
dCBsZW4pCit7CisJLyogc3BlY2lhbCB0cmVhdG1lbnQgZm9yIC4qXC5vICovCisJaWYgKGxlbiA+
IDIgJiYgbmFtZVtsZW4gLSAxXSA9PSAnbycgJiYgbmFtZVtsZW4gLSAyXSA9PSAnLicpCisJCXJl
dHVybiBGSUJSRV9OTygxKTsKKwllbHNlCisJCXJldHVybiBGSUJSRV9OTygwKTsKK30KKworLyoK
KyAqIGV4dC4xIGZpYnJhdGlvbjogc3ViZGl2aWRlIGRpcmVjdG9yeSBpbnRvIDEyOCBmaWJyYXRp
b25zIG9uZSBmb3IgZWFjaAorICogN2JpdCBleHRlbnNpb24gY2hhcmFjdGVyIChmaWxlICJmb28u
aCIgZ29lcyBpbnRvIGZpYnJlICJoIiksIHBsdXMKKyAqIGRlZmF1bHQgZmlicmUgZm9yIHRoZSBy
ZXN0LgorICovCitzdGF0aWMgX191NjQgZmlicmVfZXh0XzEoY29uc3Qgc3RydWN0IGlub2RlICpk
aXIsIGNvbnN0IGNoYXIgKm5hbWUsIGludCBsZW4pCit7CisJaWYgKGxlbiA+IDIgJiYgbmFtZVts
ZW4gLSAyXSA9PSAnLicpCisJCXJldHVybiBGSUJSRV9OTyhuYW1lW2xlbiAtIDFdKTsKKwllbHNl
CisJCXJldHVybiBGSUJSRV9OTygwKTsKK30KKworLyoKKyAqIGV4dC4zIGZpYnJhdGlvbjogdHJ5
IHRvIHNlcGFyYXRlIGZpbGVzIHdpdGggZGlmZmVyZW50IDMtY2hhcmFjdGVyCisgKiBleHRlbnNp
b25zIGZyb20gZWFjaCBvdGhlci4KKyAqLworc3RhdGljIF9fdTY0IGZpYnJlX2V4dF8zKGNvbnN0
IHN0cnVjdCBpbm9kZSAqZGlyLCBjb25zdCBjaGFyICpuYW1lLCBpbnQgbGVuKQoreworCWlmIChs
ZW4gPiA0ICYmIG5hbWVbbGVuIC0gNF0gPT0gJy4nKQorCQlyZXR1cm4gRklCUkVfTk8obmFtZVts
ZW4gLSAzXSArIG5hbWVbbGVuIC0gMl0gKyBuYW1lW2xlbiAtIDFdKTsKKwllbHNlCisJCXJldHVy
biBGSUJSRV9OTygwKTsKK30KKworc3RhdGljIGludCBjaGFuZ2VfZmlicmF0aW9uKHN0cnVjdCBp
bm9kZSAqaW5vZGUsCisJCQkgICAgcmVpc2VyNF9wbHVnaW4gKiBwbHVnaW4sCisJCQkgICAgcHNl
dF9tZW1iZXIgbWVtYikKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEtMzUwMyIs
IGlub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTM1MDQiLCBwbHVnaW4gIT0gTlVMTCk7
CisKKwlhc3NlcnQoIm5pa2l0YS0zNTA1IiwgaXNfcmVpc2VyNF9pbm9kZShpbm9kZSkpOworCWFz
c2VydCgibmlraXRhLTM1MDYiLCBpbm9kZV9kaXJfcGx1Z2luKGlub2RlKSAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS0zNTA3IiwKKwkgICAgICAgcGx1Z2luLT5oLnR5cGVfaWQgPT0gUkVJU0VS
NF9GSUJSQVRJT05fUExVR0lOX1RZUEUpOworCisJcmVzdWx0ID0gMDsKKwlpZiAoaW5vZGVfZmli
cmF0aW9uX3BsdWdpbihpbm9kZSkgPT0gTlVMTCB8fAorCSAgICBpbm9kZV9maWJyYXRpb25fcGx1
Z2luKGlub2RlKS0+aC5pZCAhPSBwbHVnaW4tPmguaWQpIHsKKwkJaWYgKGlzX2Rpcl9lbXB0eShp
bm9kZSkgPT0gMCkKKwkJCXJlc3VsdCA9IGFzZXRfc2V0X3Vuc2FmZSgmcmVpc2VyNF9pbm9kZV9k
YXRhKGlub2RlKS0+cHNldCwKKwkJCQkJCSBQU0VUX0ZJQlJBVElPTiwgcGx1Z2luKTsKKwkJZWxz
ZQorCQkJcmVzdWx0ID0gUkVURVJSKC1FTk9URU1QVFkpOworCisJfQorCXJldHVybiByZXN1bHQ7
Cit9CisKK3N0YXRpYyByZWlzZXI0X3BsdWdpbl9vcHMgZmlicmF0aW9uX3BsdWdpbl9vcHMgPSB7
CisJLmluaXQgPSBOVUxMLAorCS5sb2FkID0gTlVMTCwKKwkuc2F2ZV9sZW4gPSBOVUxMLAorCS5z
YXZlID0gTlVMTCwKKwkuY2hhbmdlID0gY2hhbmdlX2ZpYnJhdGlvbgorfTsKKworLyogZmlicmF0
aW9uIHBsdWdpbnMgKi8KK2ZpYnJhdGlvbl9wbHVnaW4gZmlicmF0aW9uX3BsdWdpbnNbTEFTVF9G
SUJSQVRJT05fSURdID0geworCVtGSUJSQVRJT05fTEVYSUNPR1JBUEhJQ10gPSB7CisJCS5oID0g
eworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0ZJQlJBVElPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9
IEZJQlJBVElPTl9MRVhJQ09HUkFQSElDLAorCQkJLnBvcHMgPSAmZmlicmF0aW9uX3BsdWdpbl9v
cHMsCisJCQkubGFiZWwgPSAibGV4aWNvZ3JhcGhpYyIsCisJCQkuZGVzYyA9ICJubyBmaWJyYXRp
b24iLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmZpYnJlID0gZmlicmVf
dHJpdmlhbAorCX0sCisJW0ZJQlJBVElPTl9ET1RfT10gPSB7CisJCS5oID0geworCQkJLnR5cGVf
aWQgPSBSRUlTRVI0X0ZJQlJBVElPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZJQlJBVElPTl9E
T1RfTywKKwkJCS5wb3BzID0gJmZpYnJhdGlvbl9wbHVnaW5fb3BzLAorCQkJLmxhYmVsID0gImRv
dC1vIiwKKwkJCS5kZXNjID0gImZpYnJhdGUgLm8gZmlsZXMgc2VwYXJhdGVseSIsCisJCQkubGlu
a2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuZmlicmUgPSBmaWJyZV9kb3RfbworCX0sCisJ
W0ZJQlJBVElPTl9FWFRfMV0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0ZJ
QlJBVElPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZJQlJBVElPTl9FWFRfMSwKKwkJCS5wb3Bz
ID0gJmZpYnJhdGlvbl9wbHVnaW5fb3BzLAorCQkJLmxhYmVsID0gImV4dC0xIiwKKwkJCS5kZXNj
ID0gImZpYnJhdGUgZmlsZSBieSBzaW5nbGUgY2hhcmFjdGVyIGV4dGVuc2lvbiIsCisJCQkubGlu
a2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuZmlicmUgPSBmaWJyZV9leHRfMQorCX0sCisJ
W0ZJQlJBVElPTl9FWFRfM10gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0ZJ
QlJBVElPTl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZJQlJBVElPTl9FWFRfMywKKwkJCS5wb3Bz
ID0gJmZpYnJhdGlvbl9wbHVnaW5fb3BzLAorCQkJLmxhYmVsID0gImV4dC0zIiwKKwkJCS5kZXNj
ID0gImZpYnJhdGUgZmlsZSBieSB0aHJlZSBjaGFyYWN0ZXIgZXh0ZW5zaW9uIiwKKwkJCS5saW5r
YWdlID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5maWJyZSA9IGZpYnJlX2V4dF8zCisJfQorfTsK
KworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6
IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpYnJhdGlvbi5oIGxp
bnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9maWJyYXRpb24uaAotLS0gbGludXgtNS40LjE3
Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZmlicmF0aW9uLmgJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9maWJyYXRp
b24uaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ2MDIyMjIzMiArMDEwMApAQCAtMCwwICsxLDM3IEBA
CisvKiBDb3B5cmlnaHQgMjAwNCBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5
IHJlaXNlcjQvUkVBRE1FICovCisKKy8qIEZpYnJhdGlvbiBwbHVnaW4gdXNlZCBieSBoYXNoZWQg
ZGlyZWN0b3J5IHBsdWdpbiB0byBzZWdtZW50IGNvbnRlbnQKKyAqIG9mIGRpcmVjdG9yeS4gU2Vl
IGZzL3JlaXNlcjQvcGx1Z2luL2ZpYnJhdGlvbi5jIGZvciBtb3JlIG9uIHRoaXMuICovCisKKyNp
ZiAhZGVmaW5lZChfX0ZTX1JFSVNFUjRfUExVR0lOX0ZJQlJBVElPTl9IX18pCisjZGVmaW5lIF9f
RlNfUkVJU0VSNF9QTFVHSU5fRklCUkFUSU9OX0hfXworCisjaW5jbHVkZSAicGx1Z2luX2hlYWRl
ci5oIgorCit0eXBlZGVmIHN0cnVjdCBmaWJyYXRpb25fcGx1Z2luIHsKKwkvKiBnZW5lcmljIGZp
ZWxkcyAqLworCXBsdWdpbl9oZWFkZXIgaDsKKworCSBfX3U2NCgqZmlicmUpIChjb25zdCBzdHJ1
Y3QgaW5vZGUgKmRpciwgY29uc3QgY2hhciAqbmFtZSwgaW50IGxlbik7Cit9IGZpYnJhdGlvbl9w
bHVnaW47CisKK3R5cGVkZWYgZW51bSB7CisJRklCUkFUSU9OX0xFWElDT0dSQVBISUMsCisJRklC
UkFUSU9OX0RPVF9PLAorCUZJQlJBVElPTl9FWFRfMSwKKwlGSUJSQVRJT05fRVhUXzMsCisJTEFT
VF9GSUJSQVRJT05fSUQKK30gcmVpc2VyNF9maWJyYXRpb25faWQ7CisKKy8qIF9fRlNfUkVJU0VS
NF9QTFVHSU5fRklCUkFUSU9OX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHku
CisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAg
bW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4Cisg
ICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlL2NyeXB0Y29tcHJlc3Mu
YyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZS9jcnlwdGNvbXByZXNzLmMKLS0t
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvY3J5cHRjb21wcmVzcy5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vZmlsZS9jcnlwdGNvbXByZXNzLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40
NjEyMjIyNDAgKzAxMDAKQEAgLTAsMCArMSwzNzk4IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAw
MiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgICByZWlzZXI0
L1JFQURNRSAqLworLyoKKyAqIFdyaXR0ZW4gYnkgRWR3YXJkIFNoaXNoa2luLgorICoKKyAqIElt
cGxlbWVudGF0aW9ucyBvZiBpbm9kZS9maWxlL2FkZHJlc3Nfc3BhY2Ugb3BlcmF0aW9ucworICog
c3BlY2lmaWMgZm9yIGNyeXB0Y29tcHJlc3MgZmlsZSBwbHVnaW4gd2hpY2ggbWFuYWdlcworICog
cmVndWxhciBmaWxlcyBidWlsdCBvZiBjb21wcmVzc2VkIGFuZChvcikgZW5jcnlwdGVkIGJvZGll
cy4KKyAqIFNlZSBodHRwOi8vZGV2Lm5hbWVzeXMuY29tL0NyeXB0Y29tcHJlc3NQbHVnaW4gZm9y
IGRldGFpbHMuCisgKi8KKworI2luY2x1ZGUgIi4uLy4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4v
Y2x1c3Rlci5oIgorI2luY2x1ZGUgIi4uL29iamVjdC5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWVf
d2Fsay5oIgorI2luY2x1ZGUgImNyeXB0Y29tcHJlc3MuaCIKKworI2luY2x1ZGUgPGxpbnV4L3Bh
Z2V2ZWMuaD4KKyNpbmNsdWRlIDxhc20vdWFjY2Vzcy5oPgorI2luY2x1ZGUgPGxpbnV4L3N3YXAu
aD4KKyNpbmNsdWRlIDxsaW51eC93cml0ZWJhY2suaD4KKyNpbmNsdWRlIDxsaW51eC9yYW5kb20u
aD4KKyNpbmNsdWRlIDxsaW51eC9zY2F0dGVybGlzdC5oPgorCisvKgorICAgICAgICAgICAgICAg
TWFuYWdpbmcgcHJpbWFyeSBhbmQgc2Vjb25kYXJ5IGNhY2hlcyBieSBSZWlzZXI0CisgICAgICAg
ICAgICAgICBjcnlwdGNvbXByZXNzIGZpbGUgcGx1Z2luLiBTeW5jaHJvbml6YXRpb24gc2NoZW1l
LgorCisKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICstLS0t
LS0tLS0tLS0tLS0tLS0rCisgICAgICAgICAgICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0t
LS0tLT58ICAgIHRmbSBzdHJlYW0gICAgfAorICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAg
ICAgICAgICAgICAgICAgfCAoY29tcHJlc3NlZCBkYXRhKXwKKyAgICAgICAgICAgICAgICAgIGZs
dXNoIHwgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rCisgICAgICAgICAg
ICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICB8CisgICAgICAgICAg
ICAgICAgICAgICAgICB8KC0+KWxvbmd0ZXJtIGxvY2t8ICAgICAgICAgICBWCistLSsgICAgICAg
IHdyaXRlcGFnZXMoKSB8ICAgICAgICAgICAgICAgICB8ICAgICAgICArLSoqKi0rICByZWlzZXI0
ICAgICAgICArLS0tKworICB8ICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAg
Ky0tKyAgICAgfCAqKiogfCAgc3RvcmFnZSB0cmVlICAgfCAgIHwKKyAgfCAgICAgICAgICAgICAg
ICAgICAgIHwgICAgICAgICAgICAgICAgICAgIHwgICAgICstKioqLSsgIChwcmltYXJ5IGNhY2hl
KXwgICB8Cit1IHwgd3JpdGUoKSAgIChzZWNvbmRhcnl8IGNhY2hlKSAgICAgICAgICAgICBWICAg
IC8gICB8ICAgXCAgICAgICAgICAgICAgICB8ICAgfAorcyB8IC0tLS0+ICArLS0tLSsgKy0tLS0r
ICstLS0tKyArLS0tLSsgICAgICstKioqKiogKioqKioqKiAqKi0tLS0rICAtLS0tPiAgfCBkIHwK
K2UgfCAgICAgICAgfCAgICB8IHxwYWdlIGNsdXN0ZXIgfCAgICB8ICAgICB8ICoqZGlzayBjbHVz
dGVyKiogICAgfCAgICAgICAgIHwgaSB8CityIHwgPC0tLS0gICstLS0tKyArLS0tLSsgKy0tLS0r
ICstLS0tKyAgICAgKy0qKioqKiAqKioqKioqKioqLS0tLSsgIDwtLS0tICB8IHMgfAorICB8IHJl
YWQoKSAgICAgICAgICAgICAgXiAgICAgICAgICAgICAgICAgICAgICBeICAgICAgfCAgICAgICAg
ICAgICAgICAgICAgfCBrIHwKKyAgfCAgICAgICAgICAgICAgICAgICAgIHwgICAgICgtPilsb25n
dGVybSBsb2NrfCAgICAgIHwgICAgICAgICAgIHBhZ2VfaW8oKXwgICB8CisgIHwgICAgICAgICAg
ICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0rICAgICAgICAgICAgICAg
ICAgICB8ICAgfAorLS0rICAgICAgICAgcmVhZHBhZ2VzKCkgfCAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgKy0tLSsKKyAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFYKKyAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0rCisgICAgICAgICAg
ICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS18ICAgIHRmbSBzdHJlYW0gICAgfAor
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIChwbGFpbiB0
ZXh0KSAgIHwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICst
LS0tLS0tLS0tLS0tLS0tLS0rCisqLworCisvKiBnZXQgY3J5cHRjb21wcmVzcyBzcGVjaWZpYyBw
b3J0aW9uIG9mIGlub2RlICovCitzdHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICpjcnlwdGNvbXBy
ZXNzX2lub2RlX2RhdGEoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZXR1cm4gJnJl
aXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPmZpbGVfcGx1Z2luX2RhdGEuY3J5cHRjb21wcmVzc19p
bmZvOworfQorCisvKiBwbHVnaW4tPnUuZmlsZS5pbml0X2lub2RlX2RhdGEgKi8KK3ZvaWQgaW5p
dF9pbm9kZV9kYXRhX2NyeXB0Y29tcHJlc3Moc3RydWN0IGlub2RlICppbm9kZSwKKwkJCQkgICBy
ZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGNyZCwKKwkJCQkgICBpbnQgY3JlYXRlKQorewor
CXN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8gKmRhdGE7CisKKwlkYXRhID0gY3J5cHRjb21wcmVz
c19pbm9kZV9kYXRhKGlub2RlKTsKKwlhc3NlcnQoImVkd2FyZC02ODUiLCBkYXRhICE9IE5VTEwp
OworCisJbWVtc2V0KGRhdGEsIDAsIHNpemVvZigqZGF0YSkpOworCisJbXV0ZXhfaW5pdCgmZGF0
YS0+Y2hlY2tpbl9tdXRleCk7CisJZGF0YS0+dHJ1bmNfaW5kZXggPSBVTE9OR19NQVg7CisJdHVy
bl9vbl9jb21wcmVzc2lvbihkYXRhKTsKKwlzZXRfbGF0dGljZV9mYWN0b3IoZGF0YSwgTUlOX0xB
VFRJQ0VfRkFDVE9SKTsKKwlpbml0X2lub2RlX29yZGVyaW5nKGlub2RlLCBjcmQsIGNyZWF0ZSk7
Cit9CisKKy8qIFRoZSBmb2xsb3dpbmcgaXMgYSBwYXJ0IG9mIHJlaXNlcjQgY2lwaGVyIGtleSBt
YW5hZ2VyCisgICB3aGljaCBpcyBjYWxsZWQgd2hlbiBvcGVuaW5nL2NyZWF0aW5nIGEgY3J5cHRj
b21wcmVzcyBmaWxlICovCisKKy8qIGdldC9zZXQgY2lwaGVyIGtleSBpbmZvICovCitzdHJ1Y3Qg
cmVpc2VyNF9jcnlwdG9faW5mbyAqIGlub2RlX2NyeXB0b19pbmZvIChzdHJ1Y3QgaW5vZGUgKiBp
bm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC05MCIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTkxIiwgcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKSAhPSBOVUxMKTsKKwlyZXR1cm4g
Y3J5cHRjb21wcmVzc19pbm9kZV9kYXRhKGlub2RlKS0+Y3J5cHQ7Cit9CisKK3N0YXRpYyB2b2lk
IHNldF9pbm9kZV9jcnlwdG9faW5mbyAoc3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJICAgc3Ry
dWN0IHJlaXNlcjRfY3J5cHRvX2luZm8gKiBpbmZvKQoreworCWNyeXB0Y29tcHJlc3NfaW5vZGVf
ZGF0YShpbm9kZSktPmNyeXB0ID0gaW5mbzsKK30KKworLyogYWxsb2NhdGUgYSBjaXBoZXIga2V5
IGluZm8gKi8KK3N0cnVjdCByZWlzZXI0X2NyeXB0b19pbmZvICogcmVpc2VyNF9hbGxvY19jcnlw
dG9faW5mbyAoc3RydWN0IGlub2RlICogaW5vZGUpCit7CisJc3RydWN0IHJlaXNlcjRfY3J5cHRv
X2luZm8gKmluZm87CisJaW50IGZpcHNpemU7CisKKwlpbmZvID0ga3phbGxvYyhzaXplb2YoKmlu
Zm8pLCByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJaWYgKCFpbmZvKQorCQlyZXR1cm4g
RVJSX1BUUigtRU5PTUVNKTsKKworCWZpcHNpemUgPSBpbm9kZV9kaWdlc3RfcGx1Z2luKGlub2Rl
KS0+Zmlwc2l6ZTsKKwlpbmZvLT5rZXlpZCA9IGttYWxsb2MoZmlwc2l6ZSwgcmVpc2VyNF9jdHhf
Z2ZwX21hc2tfZ2V0KCkpOworCWlmICghaW5mby0+a2V5aWQpIHsKKwkJa2ZyZWUoaW5mbyk7CisJ
CXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOworCX0KKwlpbmZvLT5ob3N0ID0gaW5vZGU7CisJcmV0
dXJuIGluZm87Cit9CisKKyNpZiAwCisvKiBhbGxvY2F0ZS9mcmVlIGxvdy1sZXZlbCBpbmZvIGZv
ciBjaXBoZXIgYW5kIGRpZ2VzdAorICAgdHJhbnNmb3JtcyAqLworc3RhdGljIGludCBhbGxvY19j
cnlwdG9fdGZtcyhzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8pCit7CisJc3RydWN0
IGNyeXB0b19ibGtjaXBoZXIgKiBjdGZtID0gTlVMTDsKKwlzdHJ1Y3QgY3J5cHRvX2hhc2ggICAg
ICAqIGR0Zm0gPSBOVUxMOworCWNpcGhlcl9wbHVnaW4gKiBjcGx1ZyA9IGlub2RlX2NpcGhlcl9w
bHVnaW4oaW5mby0+aG9zdCk7CisJZGlnZXN0X3BsdWdpbiAqIGRwbHVnID0gaW5vZGVfZGlnZXN0
X3BsdWdpbihpbmZvLT5ob3N0KTsKKworCWlmIChjcGx1Zy0+YWxsb2MpIHsKKwkJY3RmbSA9IGNw
bHVnLT5hbGxvYygpOworCQlpZiAoSVNfRVJSKGN0Zm0pKSB7CisJCQl3YXJuaW5nKCJlZHdhcmQt
MTM2NCIsCisJCQkJIkNhbiBub3QgYWxsb2NhdGUgaW5mbyBmb3IgJXNcbiIsCisJCQkJY3BsdWct
PmguZGVzYyk7CisJCQlyZXR1cm4gUkVURVJSKFBUUl9FUlIoY3RmbSkpOworCQl9CisJfQorCWlu
Zm9fc2V0X2NpcGhlcihpbmZvLCBjdGZtKTsKKwlpZiAoZHBsdWctPmFsbG9jKSB7CisJCWR0Zm0g
PSBkcGx1Zy0+YWxsb2MoKTsKKwkJaWYgKElTX0VSUihkdGZtKSkgeworCQkJd2FybmluZygiZWR3
YXJkLTEzNjUiLAorCQkJCSJDYW4gbm90IGFsbG9jYXRlIGluZm8gZm9yICVzXG4iLAorCQkJCWRw
bHVnLT5oLmRlc2MpOworCQkJZ290byB1bmhhcHB5X3dpdGhfZGlnZXN0OworCQl9CisJfQorCWlu
Zm9fc2V0X2RpZ2VzdChpbmZvLCBkdGZtKTsKKwlyZXR1cm4gMDsKKyB1bmhhcHB5X3dpdGhfZGln
ZXN0OgorCWlmIChjcGx1Zy0+ZnJlZSkgeworCQljcGx1Zy0+ZnJlZShjdGZtKTsKKwkJaW5mb19z
ZXRfY2lwaGVyKGluZm8sIE5VTEwpOworCX0KKwlyZXR1cm4gUkVURVJSKFBUUl9FUlIoZHRmbSkp
OworfQorI2VuZGlmCisKK3N0YXRpYyB2b2lkCitmcmVlX2NyeXB0b190Zm1zKHN0cnVjdCByZWlz
ZXI0X2NyeXB0b19pbmZvICogaW5mbykKK3sKKwlhc3NlcnQoImVkd2FyZC0xMzY2IiwgaW5mbyAh
PSBOVUxMKTsKKwlpZiAoIWluZm9fZ2V0X2NpcGhlcihpbmZvKSkgeworCQlhc3NlcnQoImVkd2Fy
ZC0xNjAxIiwgIWluZm9fZ2V0X2RpZ2VzdChpbmZvKSk7CisJCXJldHVybjsKKwl9CisJaW5vZGVf
Y2lwaGVyX3BsdWdpbihpbmZvLT5ob3N0KS0+ZnJlZShpbmZvX2dldF9jaXBoZXIoaW5mbykpOwor
CWluZm9fc2V0X2NpcGhlcihpbmZvLCBOVUxMKTsKKwlpbm9kZV9kaWdlc3RfcGx1Z2luKGluZm8t
Pmhvc3QpLT5mcmVlKGluZm9fZ2V0X2RpZ2VzdChpbmZvKSk7CisJaW5mb19zZXRfZGlnZXN0KGlu
Zm8sIE5VTEwpOworCXJldHVybjsKK30KKworI2lmIDAKKy8qIGNyZWF0ZSBhIGtleSBmaW5nZXJw
cmludCBmb3IgZGlzayBzdGF0LWRhdGEgKi8KK3N0YXRpYyBpbnQgY3JlYXRlX2tleWlkIChzdHJ1
Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8sCisJCQkgc3RydWN0IHJlaXNlcjRfY3J5cHRv
X2RhdGEgKiBkYXRhKQoreworCWludCByZXQgPSAtRU5PTUVNOworCXNpemVfdCBibGssIHBhZDsK
KwlfX3U4ICogZG1lbTsKKwlfX3U4ICogY21lbTsKKwlzdHJ1Y3QgaGFzaF9kZXNjICAgICAgZGRl
c2M7CisJc3RydWN0IGJsa2NpcGhlcl9kZXNjIGNkZXNjOworCXN0cnVjdCBzY2F0dGVybGlzdCBz
ZzsKKworCWFzc2VydCgiZWR3YXJkLTEzNjciLCBpbmZvICE9IE5VTEwpOworCWFzc2VydCgiZWR3
YXJkLTEzNjgiLCBpbmZvLT5rZXlpZCAhPSBOVUxMKTsKKworCWRkZXNjLnRmbSA9IGluZm9fZ2V0
X2RpZ2VzdChpbmZvKTsKKwlkZGVzYy5mbGFncyA9IDA7CisJY2Rlc2MudGZtID0gaW5mb19nZXRf
Y2lwaGVyKGluZm8pOworCWNkZXNjLmZsYWdzID0gMDsKKworCWRtZW0gPSBrbWFsbG9jKChzaXpl
X3QpY3J5cHRvX2hhc2hfZGlnZXN0c2l6ZShkZGVzYy50Zm0pLAorCQkgICAgICAgcmVpc2VyNF9j
dHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmICghZG1lbSkKKwkJZ290byBleGl0MTsKKworCWJsayA9
IGNyeXB0b19ibGtjaXBoZXJfYmxvY2tzaXplKGNkZXNjLnRmbSk7CisKKwlwYWQgPSBkYXRhLT5r
ZXlpZF9zaXplICUgYmxrOworCXBhZCA9IChwYWQgPyBibGsgLSBwYWQgOiAwKTsKKworCWNtZW0g
PSBrbWFsbG9jKChzaXplX3QpZGF0YS0+a2V5aWRfc2l6ZSArIHBhZCwKKwkJICAgICAgIHJlaXNl
cjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoIWNtZW0pCisJCWdvdG8gZXhpdDI7CisJbWVt
Y3B5KGNtZW0sIGRhdGEtPmtleWlkLCBkYXRhLT5rZXlpZF9zaXplKTsKKwltZW1zZXQoY21lbSAr
IGRhdGEtPmtleWlkX3NpemUsIDAsIHBhZCk7CisKKwlzZ19pbml0X29uZSgmc2csIGNtZW0sIGRh
dGEtPmtleWlkX3NpemUgKyBwYWQpOworCisJcmV0ID0gY3J5cHRvX2Jsa2NpcGhlcl9lbmNyeXB0
KCZjZGVzYywgJnNnLCAmc2csCisJCQkJICAgICAgIGRhdGEtPmtleWlkX3NpemUgKyBwYWQpOwor
CWlmIChyZXQpIHsKKwkJd2FybmluZygiZWR3YXJkLTEzNjkiLAorCQkJImVuY3J5cHRpb24gZmFp
bGVkIGZsYWdzPSV4XG4iLCBjZGVzYy5mbGFncyk7CisJCWdvdG8gZXhpdDM7CisJfQorCXJldCA9
IGNyeXB0b19oYXNoX2RpZ2VzdCgmZGRlc2MsICZzZywgc2cubGVuZ3RoLCBkbWVtKTsKKwlpZiAo
cmV0KSB7CisJCXdhcm5pbmcoImVkd2FyZC0xNjAyIiwKKwkJCSJkaWdlc3QgZmFpbGVkIGZsYWdz
PSV4XG4iLCBkZGVzYy5mbGFncyk7CisJCWdvdG8gZXhpdDM7CisJfQorCW1lbWNweShpbmZvLT5r
ZXlpZCwgZG1lbSwgaW5vZGVfZGlnZXN0X3BsdWdpbihpbmZvLT5ob3N0KS0+Zmlwc2l6ZSk7Cisg
ZXhpdDM6CisJa2ZyZWUoY21lbSk7CisgZXhpdDI6CisJa2ZyZWUoZG1lbSk7CisgZXhpdDE6CisJ
cmV0dXJuIHJldDsKK30KKyNlbmRpZgorCitzdGF0aWMgdm9pZCBkZXN0cm95X2tleWlkKHN0cnVj
dCByZWlzZXI0X2NyeXB0b19pbmZvICogaW5mbykKK3sKKwlhc3NlcnQoImVkd2FyZC0xMzcwIiwg
aW5mbyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMzcxIiwgaW5mby0+a2V5aWQgIT0gTlVM
TCk7CisJa2ZyZWUoaW5mby0+a2V5aWQpOworCXJldHVybjsKK30KKworc3RhdGljIHZvaWQgX19m
cmVlX2NyeXB0b19pbmZvIChzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlzdHJ1Y3QgcmVpc2Vy
NF9jcnlwdG9faW5mbyAqIGluZm8gPSBpbm9kZV9jcnlwdG9faW5mbyhpbm9kZSk7CisJYXNzZXJ0
KCJlZHdhcmQtMTM3MiIsIGluZm8gIT0gTlVMTCk7CisKKwlmcmVlX2NyeXB0b190Zm1zKGluZm8p
OworCWRlc3Ryb3lfa2V5aWQoaW5mbyk7CisJa2ZyZWUoaW5mbyk7Cit9CisKKyNpZiAwCitzdGF0
aWMgdm9pZCBpbnN0YW50aWF0ZV9jcnlwdG9faW5mbyhzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5m
byAqIGluZm8pCit7CisJYXNzZXJ0KCJlZHdhcmQtMTM3MyIsIGluZm8gIT0gTlVMTCk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTM3NCIsIGluZm8tPmluc3QgPT0gMCk7CisJaW5mby0+aW5zdCA9IDE7Cit9
CisjZW5kaWYKKworc3RhdGljIHZvaWQgdW5pbnN0YW50aWF0ZV9jcnlwdG9faW5mbyhzdHJ1Y3Qg
cmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8pCit7CisJYXNzZXJ0KCJlZHdhcmQtMTM3NSIsIGlu
Zm8gIT0gTlVMTCk7CisJaW5mby0+aW5zdCA9IDA7Cit9CisKKyNpZiAwCitzdGF0aWMgaW50IGlz
X2NyeXB0b19pbmZvX2luc3RhbnRpYXRlZChzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIGlu
Zm8pCit7CisJcmV0dXJuIGluZm8tPmluc3Q7Cit9CisKK3N0YXRpYyBpbnQgaW5vZGVfaGFzX2Np
cGhlcl9rZXkoc3RydWN0IGlub2RlICogaW5vZGUpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTM3NiIs
IGlub2RlICE9IE5VTEwpOworCXJldHVybiBpbm9kZV9jcnlwdG9faW5mbyhpbm9kZSkgJiYKKwkJ
aXNfY3J5cHRvX2luZm9faW5zdGFudGlhdGVkKGlub2RlX2NyeXB0b19pbmZvKGlub2RlKSk7Cit9
CisjZW5kaWYKKworc3RhdGljIHZvaWQgZnJlZV9jcnlwdG9faW5mbyAoc3RydWN0IGlub2RlICog
aW5vZGUpCit7CisJdW5pbnN0YW50aWF0ZV9jcnlwdG9faW5mbyhpbm9kZV9jcnlwdG9faW5mbyhp
bm9kZSkpOworCV9fZnJlZV9jcnlwdG9faW5mbyhpbm9kZSk7Cit9CisKK3N0YXRpYyBpbnQgbmVl
ZF9jaXBoZXIoc3RydWN0IGlub2RlICogaW5vZGUpCit7CisJcmV0dXJuIGlub2RlX2NpcGhlcl9w
bHVnaW4oaW5vZGUpICE9CisJCWNpcGhlcl9wbHVnaW5fYnlfaWQoTk9ORV9DSVBIRVJfSUQpOwor
fQorCisvKiBQYXJzZSBAZGF0YSB3aGljaCBjb250YWlucyBhICh1bmluc3RhbnRpYXRlZCkgY2lw
aGVyIGtleSBpbXBvcnRlZAorICAgZnJvbSB1c2VyIHNwYWNlLCBjcmVhdGUgYSBsb3ctbGV2ZWwg
Y2lwaGVyIGluZm8gYW5kIGF0dGFjaCBpdCB0bworICAgdGhlIEBvYmplY3QuIElmIHN1Y2Nlc3Ms
IHRoZW4gaW5mbyBjb250YWlucyBhbiBpbnN0YW50aWF0ZWQga2V5ICovCisjaWYgMAorc3RydWN0
IHJlaXNlcjRfY3J5cHRvX2luZm8gKiBjcmVhdGVfY3J5cHRvX2luZm8oc3RydWN0IGlub2RlICog
b2JqZWN0LAorCQkJCSAgc3RydWN0IHJlaXNlcjRfY3J5cHRvX2RhdGEgKiBkYXRhKQoreworCWlu
dCByZXQ7CisJc3RydWN0IHJlaXNlcjRfY3J5cHRvX2luZm8gKiBpbmZvOworCisJYXNzZXJ0KCJl
ZHdhcmQtMTM3NyIsIGRhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTM3OCIsIG5lZWRf
Y2lwaGVyKG9iamVjdCkpOworCisJaWYgKGlub2RlX2ZpbGVfcGx1Z2luKG9iamVjdCkgIT0KKwkg
ICAgZmlsZV9wbHVnaW5fYnlfaWQoRElSRUNUT1JZX0ZJTEVfUExVR0lOX0lEKSkKKwkJcmV0dXJu
IEVSUl9QVFIoLUVJTlZBTCk7CisKKwlpbmZvID0gcmVpc2VyNF9hbGxvY19jcnlwdG9faW5mbyhv
YmplY3QpOworCWlmIChJU19FUlIoaW5mbykpCisJCXJldHVybiBpbmZvOworCXJldCA9IGFsbG9j
X2NyeXB0b190Zm1zKGluZm8pOworCWlmIChyZXQpCisJCWdvdG8gZXJyOworCS8qIGluc3RhbnRp
YXRpbmcgYSBrZXkgKi8KKwlyZXQgPSBjcnlwdG9fYmxrY2lwaGVyX3NldGtleShpbmZvX2dldF9j
aXBoZXIoaW5mbyksCisJCQkJICAgICAgZGF0YS0+a2V5LAorCQkJCSAgICAgIGRhdGEtPmtleXNp
emUpOworCWlmIChyZXQpIHsKKwkJd2FybmluZygiZWR3YXJkLTEzNzkiLAorCQkJInNldGtleSBm
YWlsZWQgZmxhZ3M9JXgiLAorCQkJY3J5cHRvX2Jsa2NpcGhlcl9nZXRfZmxhZ3MoaW5mb19nZXRf
Y2lwaGVyKGluZm8pKSk7CisJCWdvdG8gZXJyOworCX0KKwlpbmZvLT5rZXlzaXplID0gZGF0YS0+
a2V5c2l6ZTsKKwlyZXQgPSBjcmVhdGVfa2V5aWQoaW5mbywgZGF0YSk7CisJaWYgKHJldCkKKwkJ
Z290byBlcnI7CisJaW5zdGFudGlhdGVfY3J5cHRvX2luZm8oaW5mbyk7CisJcmV0dXJuIGluZm87
CisgZXJyOgorCV9fZnJlZV9jcnlwdG9faW5mbyhvYmplY3QpOworIAlyZXR1cm4gRVJSX1BUUihy
ZXQpOworfQorI2VuZGlmCisKKy8qIGluY3JlbWVudC9kZWNyZW1lbnQgYSBsb2FkIGNvdW50ZXIg
d2hlbgorICAgYXR0YWNoaW5nL2RldGFjaGluZyB0aGUgY3J5cHRvLXN0YXQgdG8gYW55IG9iamVj
dCAqLworc3RhdGljIHZvaWQgbG9hZF9jcnlwdG9faW5mbyhzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9f
aW5mbyAqIGluZm8pCit7CisJYXNzZXJ0KCJlZHdhcmQtMTM4MCIsIGluZm8gIT0gTlVMTCk7CisJ
aW5jX2tleWxvYWRfY291bnQoaW5mbyk7Cit9CisKK3N0YXRpYyB2b2lkIHVubG9hZF9jcnlwdG9f
aW5mbyhzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5m
byAqIGluZm8gPSBpbm9kZV9jcnlwdG9faW5mbyhpbm9kZSk7CisJYXNzZXJ0KCJlZHdhcmQtMTM4
MSIsIGluZm8tPmtleWxvYWRfY291bnQgPiAwKTsKKworCWRlY19rZXlsb2FkX2NvdW50KGlub2Rl
X2NyeXB0b19pbmZvKGlub2RlKSk7CisJaWYgKGluZm8tPmtleWxvYWRfY291bnQgPT0gMCkKKwkJ
LyogZmluYWwgcmVsZWFzZSAqLworCQlmcmVlX2NyeXB0b19pbmZvKGlub2RlKTsKK30KKworLyog
YXR0YWNoL2RldGFjaCBhbiBleGlzdGluZyBjcnlwdG8tc3RhdCAqLwordm9pZCByZWlzZXI0X2F0
dGFjaF9jcnlwdG9faW5mbyhzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwKKwkJCQlzdHJ1Y3QgcmVpc2Vy
NF9jcnlwdG9faW5mbyAqIGluZm8pCit7CisJYXNzZXJ0KCJlZHdhcmQtMTM4MiIsIGlub2RlICE9
IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTEzODMiLCBpbmZvICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTEzODQiLCBpbm9kZV9jcnlwdG9faW5mbyhpbm9kZSkgPT0gTlVMTCk7CisKKwlzZXRf
aW5vZGVfY3J5cHRvX2luZm8oaW5vZGUsIGluZm8pOworCWxvYWRfY3J5cHRvX2luZm8oaW5mbyk7
Cit9CisKKy8qIHJldHVybnMgdHJ1ZSwgaWYgY3J5cHRvIHN0YXQgY2FuIGJlIGF0dGFjaGVkIHRv
IHRoZSBAaG9zdCAqLworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyBpbnQgaG9zdF9hbGxvd3Nf
Y3J5cHRvX2luZm8oc3RydWN0IGlub2RlICogaG9zdCkKK3sKKwlpbnQgcmV0OworCWZpbGVfcGx1
Z2luICogZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihob3N0KTsKKworCXN3aXRjaCAoZnBsdWct
PmguaWQpIHsKKwljYXNlIENSWVBUQ09NUFJFU1NfRklMRV9QTFVHSU5fSUQ6CisJCXJldCA9IDE7
CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldCA9IDA7CisJfQorCXJldHVybiByZXQ7Cit9Cisj
ZW5kaWYgIC8qICBSRUlTRVI0X0RFQlVHICAqLworCitzdGF0aWMgdm9pZCByZWlzZXI0X2RldGFj
aF9jcnlwdG9faW5mbyhzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC0x
Mzg1IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTM4NiIsIGhvc3RfYWxsb3dz
X2NyeXB0b19pbmZvKGlub2RlKSk7CisKKwlpZiAoaW5vZGVfY3J5cHRvX2luZm8oaW5vZGUpKQor
CQl1bmxvYWRfY3J5cHRvX2luZm8oaW5vZGUpOworCXNldF9pbm9kZV9jcnlwdG9faW5mbyhpbm9k
ZSwgTlVMTCk7Cit9CisKKyNpZiAwCisKKy8qIGNvbXBhcmUgZmluZ2VycHJpbnRzIG9mIEBjaGls
ZCBhbmQgQHBhcmVudCAqLworc3RhdGljIGludCBrZXlpZF9lcShzdHJ1Y3QgcmVpc2VyNF9jcnlw
dG9faW5mbyAqIGNoaWxkLAorCQkgICAgc3RydWN0IHJlaXNlcjRfY3J5cHRvX2luZm8gKiBwYXJl
bnQpCit7CisJcmV0dXJuICFtZW1jbXAoY2hpbGQtPmtleWlkLAorCQkgICAgICAgcGFyZW50LT5r
ZXlpZCwKKwkJICAgICAgIGluZm9fZGlnZXN0X3BsdWdpbihwYXJlbnQpLT5maXBzaXplKTsKK30K
KworLyogY2hlY2sgaWYgYSBjcnlwdG8tc3RhdCAod2hpY2ggaXMgYm91bmQgdG8gQHBhcmVudCkg
Y2FuIGJlIGluaGVyaXRlZCAqLworaW50IGNhbl9pbmhlcml0X2NyeXB0b19jcnlwdGNvbXByZXNz
KHN0cnVjdCBpbm9kZSAqY2hpbGQsIHN0cnVjdCBpbm9kZSAqcGFyZW50KQoreworCWlmICghbmVl
ZF9jaXBoZXIoY2hpbGQpKQorCQlyZXR1cm4gMDsKKwkvKiB0aGUgY2hpbGQgaXMgY3JlYXRlZCAq
LworCWlmICghaW5vZGVfY3J5cHRvX2luZm8oY2hpbGQpKQorCQlyZXR1cm4gMTsKKwkvKiB0aGUg
Y2hpbGQgaXMgbG9va2VkIHVwICovCisJaWYgKCFpbm9kZV9jcnlwdG9faW5mbyhwYXJlbnQpKQor
CQlyZXR1cm4gMDsKKwlyZXR1cm4gKGlub2RlX2NpcGhlcl9wbHVnaW4oY2hpbGQpID09IGlub2Rl
X2NpcGhlcl9wbHVnaW4ocGFyZW50KSAmJgorCQlpbm9kZV9kaWdlc3RfcGx1Z2luKGNoaWxkKSA9
PSBpbm9kZV9kaWdlc3RfcGx1Z2luKHBhcmVudCkgJiYKKwkJaW5vZGVfY3J5cHRvX2luZm8oY2hp
bGQpLT5rZXlzaXplID09CisJCWlub2RlX2NyeXB0b19pbmZvKHBhcmVudCktPmtleXNpemUgJiYK
KwkJa2V5aWRfZXEoaW5vZGVfY3J5cHRvX2luZm8oY2hpbGQpLCBpbm9kZV9jcnlwdG9faW5mbyhw
YXJlbnQpKSk7Cit9CisjZW5kaWYKKworLyogaGVscGVyIGZ1bmN0aW9ucyBmb3IgLT5jcmVhdGUo
KSBtZXRob2Qgb2YgdGhlIGNyeXB0Y29tcHJlc3MgcGx1Z2luICovCitzdGF0aWMgaW50IGlub2Rl
X3NldF9jcnlwdG8oc3RydWN0IGlub2RlICogb2JqZWN0KQoreworCXJlaXNlcjRfaW5vZGUgKiBp
bmZvOworCWlmICghaW5vZGVfY3J5cHRvX2luZm8ob2JqZWN0KSkgeworCQlpZiAobmVlZF9jaXBo
ZXIob2JqZWN0KSkKKwkJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7CisJCS8qIHRoZSBmaWxlIGlz
IG5vdCB0byBiZSBlbmNyeXB0ZWQgKi8KKwkJcmV0dXJuIDA7CisJfQorCWluZm8gPSByZWlzZXI0
X2lub2RlX2RhdGEob2JqZWN0KTsKKwlpbmZvLT5leHRtYXNrIHw9ICgxIDw8IENSWVBUT19TVEFU
KTsKKyAJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgaW5vZGVfaW5pdF9jb21wcmVzc2lvbihz
dHJ1Y3QgaW5vZGUgKiBvYmplY3QpCit7CisJaW50IHJlc3VsdCA9IDA7CisJYXNzZXJ0KCJlZHdh
cmQtMTQ2MSIsIG9iamVjdCAhPSBOVUxMKTsKKwlpZiAoaW5vZGVfY29tcHJlc3Npb25fcGx1Z2lu
KG9iamVjdCktPmluaXQpCisJCXJlc3VsdCA9IGlub2RlX2NvbXByZXNzaW9uX3BsdWdpbihvYmpl
Y3QpLT5pbml0KCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworc3RhdGljIGludCBpbm9kZV9jaGVj
a19jbHVzdGVyKHN0cnVjdCBpbm9kZSAqIG9iamVjdCkKK3sKKwlhc3NlcnQoImVkd2FyZC02OTYi
LCBvYmplY3QgIT0gTlVMTCk7CisKKwlpZiAodW5saWtlbHkoaW5vZGVfY2x1c3Rlcl9zaXplKG9i
amVjdCkgPCBQQUdFX1NJWkUpKSB7CisJCXdhcm5pbmcoImVkd2FyZC0xMzIwIiwgIkNhbiBub3Qg
c3VwcG9ydCAnJXMnICIKKwkJCSJsb2dpY2FsIGNsdXN0ZXJzIChsZXNzIHRoZW4gcGFnZSBzaXpl
KSIsCisJCQlpbm9kZV9jbHVzdGVyX3BsdWdpbihvYmplY3QpLT5oLmxhYmVsKTsKKwkJcmV0dXJu
IFJFVEVSUigtRUlOVkFMKTsKKwl9CisJaWYgKHVubGlrZWx5KGlub2RlX2NsdXN0ZXJfc2hpZnQo
b2JqZWN0KSkgPj0gQklUU19QRVJfQllURSpzaXplb2YoaW50KSl7CisJCXdhcm5pbmcoImVkd2Fy
ZC0xNDYzIiwgIkNhbiBub3Qgc3VwcG9ydCAnJXMnICIKKwkJCSJsb2dpY2FsIGNsdXN0ZXJzICh0
b28gYmlnIGZvciB0cmFuc2Zvcm0pIiwKKwkJCWlub2RlX2NsdXN0ZXJfcGx1Z2luKG9iamVjdCkt
PmgubGFiZWwpOworCQlyZXR1cm4gUkVURVJSKC1FSU5WQUwpOworCX0KKwlyZXR1cm4gMDsKK30K
KworLyogcGx1Z2luLT5kZXN0cm95X2lub2RlKCkgKi8KK3ZvaWQgZGVzdHJveV9pbm9kZV9jcnlw
dGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWFzc2VydCgiZWR3YXJkLTE0NjQi
LCBJTk9ERV9QR0NPVU5UKGlub2RlKSA9PSAwKTsKKwlyZWlzZXI0X2RldGFjaF9jcnlwdG9faW5m
byhpbm9kZSk7CisJcmV0dXJuOworfQorCisvKiBwbHVnaW4tPmNyZWF0ZV9vYmplY3QoKToKKy4g
aW5zdGFsbCBwbHVnaW5zCisuIGF0dGFjaCBjcnlwdG8gaW5mbyBpZiBzcGVjaWZpZWQKKy4gYXR0
YWNoIGNvbXByZXNzaW9uIGluZm8gaWYgc3BlY2lmaWVkCisuIGF0dGFjaCBjbHVzdGVyIGluZm8K
KyovCitpbnQgY3JlYXRlX29iamVjdF9jcnlwdGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqb2JqZWN0
LCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJCQlyZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAq
IGRhdGEpCit7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X2lub2RlICppbmZvOworCisJYXNzZXJ0
KCJlZHdhcmQtMjMiLCBvYmplY3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMjQiLCBwYXJl
bnQgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMzAiLCBkYXRhICE9IE5VTEwpOworCWFzc2Vy
dCgiZWR3YXJkLTI2IiwgcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhvYmplY3QsIFJFSVNFUjRfTk9f
U0QpKTsKKwlhc3NlcnQoImVkd2FyZC0yNyIsIGRhdGEtPmlkID09IENSWVBUQ09NUFJFU1NfRklM
RV9QTFVHSU5fSUQpOworCisJaW5mbyA9IHJlaXNlcjRfaW5vZGVfZGF0YShvYmplY3QpOworCisJ
YXNzZXJ0KCJlZHdhcmQtMjkiLCBpbmZvICE9IE5VTEwpOworCisJLyogc2V0IGZpbGUgYml0ICov
CisJaW5mby0+cGx1Z2luX21hc2sgfD0gKDEgPDwgUFNFVF9GSUxFKTsKKworCS8qIHNldCBjcnlw
dG8gKi8KKwlyZXN1bHQgPSBpbm9kZV9zZXRfY3J5cHRvKG9iamVjdCk7CisJaWYgKHJlc3VsdCkK
KwkJZ290byBlcnJvcjsKKwkvKiBzZXQgY29tcHJlc3Npb24gKi8KKwlyZXN1bHQgPSBpbm9kZV9p
bml0X2NvbXByZXNzaW9uKG9iamVjdCk7CisJaWYgKHJlc3VsdCkKKwkJZ290byBlcnJvcjsKKwkv
KiBzZXQgY2x1c3RlciAqLworCXJlc3VsdCA9IGlub2RlX2NoZWNrX2NsdXN0ZXIob2JqZWN0KTsK
KwlpZiAocmVzdWx0KQorCQlnb3RvIGVycm9yOworCisJLyogc2F2ZSBldmVyeXRoaW5nIGluIGRp
c2sgc3RhdC1kYXRhICovCisJcmVzdWx0ID0gd3JpdGVfc2RfYnlfaW5vZGVfY29tbW9uKG9iamVj
dCk7CisJaWYgKCFyZXN1bHQpCisJCXJldHVybiAwOworIGVycm9yOgorCXJlaXNlcjRfZGV0YWNo
X2NyeXB0b19pbmZvKG9iamVjdCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogcGx1Z2luLT5v
cGVuKCkgKi8KK2ludCBvcGVuX2NyeXB0Y29tcHJlc3Moc3RydWN0IGlub2RlICogaW5vZGUsIHN0
cnVjdCBmaWxlICogZmlsZSkKK3sKKwlyZXR1cm4gMDsKK30KKworLyogcmV0dXJucyBhIGJsb2Nr
c2l6ZSwgdGhlIGF0dHJpYnV0ZSBvZiBhIGNpcGhlciBhbGdvcml0aG0gKi8KK3N0YXRpYyB1bnNp
Z25lZCBpbnQKK2NpcGhlcl9ibG9ja3NpemUoc3RydWN0IGlub2RlICogaW5vZGUpCit7CisJYXNz
ZXJ0KCJlZHdhcmQtNzU4IiwgbmVlZF9jaXBoZXIoaW5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0x
NDAwIiwgaW5vZGVfY3J5cHRvX2luZm8oaW5vZGUpICE9IE5VTEwpOworCXJldHVybiBjcnlwdG9f
YmxrY2lwaGVyX2Jsb2Nrc2l6ZQorCQkoaW5mb19nZXRfY2lwaGVyKGlub2RlX2NyeXB0b19pbmZv
KGlub2RlKSkpOworfQorCisvKiByZXR1cm5zIG9mZnNldCB0cmFuc2xhdGVkIGJ5IHNjYWxlIGZh
Y3RvciBvZiB0aGUgY3J5cHRvLWFsZ29yaXRobSAqLworc3RhdGljIGxvZmZfdCBpbm9kZV9zY2Fs
ZWRfb2Zmc2V0IChzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwKKwkJCQkgICBjb25zdCBsb2ZmX3Qgc3Jj
X29mZiAvKiBpbnB1dCBvZmZzZXQgKi8pCit7CisJYXNzZXJ0KCJlZHdhcmQtOTciLCBpbm9kZSAh
PSBOVUxMKTsKKworCWlmICghbmVlZF9jaXBoZXIoaW5vZGUpIHx8CisJICAgIHNyY19vZmYgPT0g
Z2V0X2tleV9vZmZzZXQocmVpc2VyNF9taW5fa2V5KCkpIHx8CisJICAgIHNyY19vZmYgPT0gZ2V0
X2tleV9vZmZzZXQocmVpc2VyNF9tYXhfa2V5KCkpKQorCQlyZXR1cm4gc3JjX29mZjsKKworCXJl
dHVybiBpbm9kZV9jaXBoZXJfcGx1Z2luKGlub2RlKS0+c2NhbGUoaW5vZGUsCisJCQkJCQkgY2lw
aGVyX2Jsb2Nrc2l6ZShpbm9kZSksCisJCQkJCQkgc3JjX29mZik7Cit9CisKKy8qIHJldHVybnMg
ZGlzayBjbHVzdGVyIHNpemUgKi8KK3NpemVfdCBpbm9kZV9zY2FsZWRfY2x1c3Rlcl9zaXplKHN0
cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWFzc2VydCgiZWR3YXJkLTExMCIsIGlub2RlICE9IE5V
TEwpOworCisJcmV0dXJuIGlub2RlX3NjYWxlZF9vZmZzZXQoaW5vZGUsIGlub2RlX2NsdXN0ZXJf
c2l6ZShpbm9kZSkpOworfQorCisvKiBzZXQgbnVtYmVyIG9mIGNsdXN0ZXIgcGFnZXMgKi8KK3N0
YXRpYyB2b2lkIHNldF9jbHVzdGVyX25ycGFnZXMoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1
c3QsCisJCQkJc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlzdHJ1Y3QgcmVpc2VyNF9zbGlkZSAq
IHdpbjsKKworCWFzc2VydCgiZWR3YXJkLTE4MCIsIGNsdXN0ICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTEwNDAiLCBpbm9kZSAhPSBOVUxMKTsKKworCWNsdXN0LT5vbGRfbnJwYWdlcyA9IHNp
emVfaW5fcGFnZXMobGJ5dGVzKGNsdXN0LT5pbmRleCwgaW5vZGUpKTsKKwl3aW4gPSBjbHVzdC0+
d2luOworCWlmICghd2luKSB7CisJCWNsdXN0LT5ucl9wYWdlcyA9IHNpemVfaW5fcGFnZXMobGJ5
dGVzKGNsdXN0LT5pbmRleCwgaW5vZGUpKTsKKwkJcmV0dXJuOworCX0KKwlhc3NlcnQoImVkd2Fy
ZC0xMTc2IiwgY2x1c3QtPm9wICE9IExDX0lOVkFMKTsKKwlhc3NlcnQoImVkd2FyZC0xMDY0Iiwg
d2luLT5vZmYgKyB3aW4tPmNvdW50ICsgd2luLT5kZWx0YSAhPSAwKTsKKworCWlmICh3aW4tPnN0
YXQgPT0gSE9MRV9XSU5ET1cgJiYKKwkgICAgd2luLT5vZmYgPT0gMCAmJiB3aW4tPmNvdW50ID09
IGlub2RlX2NsdXN0ZXJfc2l6ZShpbm9kZSkpIHsKKwkJLyogc3BlY2lhbCBjYXNlOiB3cml0aW5n
IGEgImZha2UiIGxvZ2ljYWwgY2x1c3RlciAqLworCQljbHVzdC0+bnJfcGFnZXMgPSAwOworCQly
ZXR1cm47CisJfQorCWNsdXN0LT5ucl9wYWdlcyA9IHNpemVfaW5fcGFnZXMobWF4KHdpbi0+b2Zm
ICsgd2luLT5jb3VudCArIHdpbi0+ZGVsdGEsCisJCQkJCSAgICBsYnl0ZXMoY2x1c3QtPmluZGV4
LCBpbm9kZSkpKTsKKwlyZXR1cm47Cit9CisKKy8qIHBsdWdpbi0+a2V5X2J5X2lub2RlKCkKKyAg
IGJ1aWxkIGtleSBvZiBhIGRpc2sgY2x1c3RlciAqLworaW50IGtleV9ieV9pbm9kZV9jcnlwdGNv
bXByZXNzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBvZmYsCisJCQkgICAgICAgcmVpc2Vy
NF9rZXkgKiBrZXkpCit7CisJYXNzZXJ0KCJlZHdhcmQtNjQiLCBpbm9kZSAhPSAwKTsKKworCWlm
IChsaWtlbHkob2ZmICE9IGdldF9rZXlfb2Zmc2V0KHJlaXNlcjRfbWF4X2tleSgpKSkpCisJCW9m
ZiA9IG9mZl90b19jbHVzdF90b19vZmYob2ZmLCBpbm9kZSk7CisJaWYgKGlub2RlX2NyeXB0b19p
bmZvKGlub2RlKSkKKwkJb2ZmID0gaW5vZGVfc2NhbGVkX29mZnNldChpbm9kZSwgb2ZmKTsKKwor
CWtleV9ieV9pbm9kZV9hbmRfb2Zmc2V0X2NvbW1vbihpbm9kZSwgMCwga2V5KTsKKwlzZXRfa2V5
X29mZnNldChrZXksIChfX3U2NClvZmYpOworCXJldHVybiAwOworfQorCisvKiBwbHVnaW4tPmZs
b3dfYnlfaW5vZGUoKSAqLworLyogZmxvdyBpcyB1c2VkIHRvIHJlYWQvd3JpdGUgZGlzayBjbHVz
dGVycyAqLworaW50IGZsb3dfYnlfaW5vZGVfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgaW5vZGUgKmlu
b2RlLCBjb25zdCBjaGFyIF9fdXNlciAqIGJ1ZiwKKwkJCQlpbnQgdXNlciwgICAgICAgLyogMTog
QGJ1ZiBpcyBvZiB1c2VyIHNwYWNlLAorCQkJCQkgICAgICAgICAgIDA6IGtlcm5lbCBzcGFjZSAq
LworCQkJCWxvZmZfdCBzaXplLCAgICAvKiBAYnVmIHNpemUgKi8KKwkJCQlsb2ZmX3Qgb2ZmLCAg
ICAgLyogb2Zmc2V0IHRvIHN0YXJ0IGlvIGZyb20gKi8KKwkJCQlyd19vcCBvcCwgICAgICAgLyog
UkVBRCBvciBXUklURSAqLworCQkJCWZsb3dfdCAqIGYgICAgICAvKiByZXN1bHRpbmcgZmxvdyAq
LykKK3sKKwlhc3NlcnQoImVkd2FyZC00MzYiLCBmICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTE0OSIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTE1MCIsIGlub2RlX2ZpbGVf
cGx1Z2luKGlub2RlKSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xNDY1IiwgdXNlciA9PSAw
KTsgLyogd2UgdXNlIGZsb3cgdG8gcmVhZC93cml0ZQorCQkJCQkgICAgZGlzayBjbHVzdGVycyBs
b2NhdGVkIGluCisJCQkJCSAgICBrZXJuZWwgc3BhY2UgKi8KKwlmLT5sZW5ndGggPSBzaXplOwor
CW1lbWNweSgmZi0+ZGF0YSwgJmJ1Ziwgc2l6ZW9mKGJ1ZikpOworCWYtPnVzZXIgPSB1c2VyOwor
CWYtPm9wID0gb3A7CisKKwlyZXR1cm4ga2V5X2J5X2lub2RlX2NyeXB0Y29tcHJlc3MoaW5vZGUs
IG9mZiwgJmYtPmtleSk7Cit9CisKK3N0YXRpYyBpbnQKK2NyeXB0Y29tcHJlc3NfaGludF92YWxp
ZGF0ZShoaW50X3QgKiBoaW50LCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwKKwkJCSAgICB6bm9k
ZV9sb2NrX21vZGUgbG9ja19tb2RlKQoreworCWNvb3JkX3QgKmNvb3JkOworCisJYXNzZXJ0KCJl
ZHdhcmQtNzA0IiwgaGludCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMDg5IiwgIWhpbnRf
aXNfdmFsaWQoaGludCkpOworCWFzc2VydCgiZWR3YXJkLTcwNiIsIGhpbnQtPmxoLm93bmVyID09
IE5VTEwpOworCisJY29vcmQgPSAmaGludC0+ZXh0X2Nvb3JkLmNvb3JkOworCisJaWYgKCFoaW50
IHx8ICFoaW50X2lzX3NldChoaW50KSB8fCBoaW50LT5tb2RlICE9IGxvY2tfbW9kZSkKKwkJLyog
aGludCBlaXRoZXIgbm90IHNldCBvciBzZXQgYnkgZGlmZmVyZW50IG9wZXJhdGlvbiAqLworCQly
ZXR1cm4gUkVURVJSKC1FX1JFUEVBVCk7CisKKwlpZiAoZ2V0X2tleV9vZmZzZXQoa2V5KSAhPSBo
aW50LT5vZmZzZXQpCisJCS8qIGhpbnQgaXMgc2V0IGZvciBkaWZmZXJlbnQga2V5ICovCisJCXJl
dHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKworCWFzc2VydCgiZWR3YXJkLTcwNyIsIHJlaXNlcjRf
c2NoZWR1bGFibGUoKSk7CisKKwlyZXR1cm4gcmVpc2VyNF9zZWFsX3ZhbGlkYXRlKCZoaW50LT5z
ZWFsLCAmaGludC0+ZXh0X2Nvb3JkLmNvb3JkLAorCQkJCSAgICAga2V5LCAmaGludC0+bGgsIGxv
Y2tfbW9kZSwKKwkJCQkgICAgIFpOT0RFX0xPQ0tfTE9QUkkpOworfQorCisvKiByZXNlcnZlIGRp
c2sgc3BhY2Ugd2hlbiB3cml0aW5nIGEgbG9naWNhbCBjbHVzdGVyICovCitzdGF0aWMgaW50IHJl
c2VydmU0Y2x1c3RlcihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUg
KmNsdXN0KQoreworCWludCByZXN1bHQgPSAwOworCisJYXNzZXJ0KCJlZHdhcmQtOTY1IiwgcmVp
c2VyNF9zY2hlZHVsYWJsZSgpKTsKKwlhc3NlcnQoImVkd2FyZC00MzkiLCBpbm9kZSAhPSBOVUxM
KTsKKwlhc3NlcnQoImVkd2FyZC00NDAiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2Fy
ZC00NDEiLCBjbHVzdC0+cGFnZXMgIT0gTlVMTCk7CisKKwlpZiAoY2x1c3QtPm5yX3BhZ2VzID09
IDApIHsKKwkJYXNzZXJ0KCJlZHdhcmQtMTE1MiIsIGNsdXN0LT53aW4gIT0gTlVMTCk7CisJCWFz
c2VydCgiZWR3YXJkLTExNTMiLCBjbHVzdC0+d2luLT5zdGF0ID09IEhPTEVfV0lORE9XKTsKKwkJ
LyogZG9uJ3QgcmVzZXJ2ZSBkaXNrIHNwYWNlIGZvciBmYWtlIGxvZ2ljYWwgY2x1c3RlciAqLwor
CQlyZXR1cm4gMDsKKwl9CisJYXNzZXJ0KCJlZHdhcmQtNDQyIiwganByaXZhdGUoY2x1c3QtPnBh
Z2VzWzBdKSAhPSBOVUxMKTsKKworCXJlc3VsdCA9IHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZShl
c3RpbWF0ZV9pbnNlcnRfY2x1c3Rlcihpbm9kZSkgKworCQkJCQkgIGVzdGltYXRlX3VwZGF0ZV9j
bHVzdGVyKGlub2RlKSwKKyAJCQkJCSAgQkFfQ0FOX0NPTU1JVCk7CisJaWYgKHJlc3VsdCkKKwkJ
cmV0dXJuIHJlc3VsdDsKKwljbHVzdC0+cmVzZXJ2ZWQgPSAxOworCWdyYWJiZWQyY2x1c3Rlcl9y
ZXNlcnZlZChlc3RpbWF0ZV9pbnNlcnRfY2x1c3Rlcihpbm9kZSkgKworCQkJCSBlc3RpbWF0ZV91
cGRhdGVfY2x1c3Rlcihpbm9kZSkpOworI2lmIFJFSVNFUjRfREVCVUcKKwljbHVzdC0+cmVzZXJ2
ZWRfcHJlcHBlZCA9IGVzdGltYXRlX3VwZGF0ZV9jbHVzdGVyKGlub2RlKTsKKwljbHVzdC0+cmVz
ZXJ2ZWRfdW5wcmVwcGVkID0gZXN0aW1hdGVfaW5zZXJ0X2NsdXN0ZXIoaW5vZGUpOworI2VuZGlm
CisJLyogdGhlcmUgY2FuIGJlIHNwYWNlIGdyYWJiZWQgYnkgdHhubWdyX2ZvcmNlX2NvbW1pdF9h
bGwgKi8KKwlyZXR1cm4gMDsKK30KKworLyogZnJlZSByZXNlcnZlZCBkaXNrIHNwYWNlIGlmIHdy
aXRpbmcgYSBsb2dpY2FsIGNsdXN0ZXIgZmFpbHMgKi8KK3N0YXRpYyB2b2lkIGZyZWVfcmVzZXJ2
ZWQ0Y2x1c3RlcihzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJCSAgc3RydWN0IGNsdXN0ZXJfaGFu
ZGxlICpjaCwgaW50IGNvdW50KQoreworCWFzc2VydCgiZWR3YXJkLTk2NyIsIGNoLT5yZXNlcnZl
ZCA9PSAxKTsKKworCWNsdXN0ZXJfcmVzZXJ2ZWQyZnJlZShjb3VudCk7CisJY2gtPnJlc2VydmVk
ID0gMDsKK30KKworLyoKKyAqIFRoZSBjb3JlIHNlYXJjaCBwcm9jZWR1cmUgb2YgdGhlIGNyeXB0
Y29tcHJlc3MgcGx1Z2luLgorICogSWYgcmV0dXJuZWQgdmFsdWUgaXMgbm90IGNia19lcnJvcmVk
LCB0aGVuIGN1cnJlbnQgcG9zaXRpb24KKyAqIGlzIGxvY2tlZC4KKyAqLworc3RhdGljIGludCBm
aW5kX2NsdXN0ZXJfaXRlbShoaW50X3QgKiBoaW50LAorCQkJICAgICBjb25zdCByZWlzZXI0X2tl
eSAqIGtleSwgLyoga2V5IG9mIHRoZSBpdGVtIHdlIGFyZQorCQkJCQkJCSBsb29raW5nIGZvciAq
LworCQkJICAgICB6bm9kZV9sb2NrX21vZGUgbG9ja19tb2RlIC8qIHdoaWNoIGxvY2sgKi8gLAor
CQkJICAgICByYV9pbmZvX3QgKiByYV9pbmZvLCBsb29rdXBfYmlhcyBiaWFzLCBfX3UzMiBmbGFn
cykKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfa2V5IGlrZXk7CisJY29vcmRfdCAqY29vcmQg
PSAmaGludC0+ZXh0X2Nvb3JkLmNvb3JkOworCWNvb3JkX3Qgb3JpZyA9ICpjb29yZDsKKworCWFz
c2VydCgiZWR3YXJkLTE1MiIsIGhpbnQgIT0gTlVMTCk7CisKKwlpZiAoIWhpbnRfaXNfdmFsaWQo
aGludCkpIHsKKwkJcmVzdWx0ID0gY3J5cHRjb21wcmVzc19oaW50X3ZhbGlkYXRlKGhpbnQsIGtl
eSwgbG9ja19tb2RlKTsKKwkJaWYgKHJlc3VsdCA9PSAtRV9SRVBFQVQpCisJCQlnb3RvIHRyYXZl
cnNlX3RyZWU7CisJCWVsc2UgaWYgKHJlc3VsdCkgeworCQkJYXNzZXJ0KCJlZHdhcmQtMTIxNiIs
IDApOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQloaW50X3NldF92YWxpZChoaW50KTsKKwl9
CisJYXNzZXJ0KCJlZHdhcmQtNzA5Iiwgem5vZGVfaXNfYW55X2xvY2tlZChjb29yZC0+bm9kZSkp
OworCS8qCisJICogSGludCBpcyB2YWxpZCwgc28gd2UgcGVyZm9ybSBpbi1wbGFjZSBsb29rdXAu
CisJICogSXQgbWVhbnMgd2UganVzdCBuZWVkIHRvIGNoZWNrIGlmIHRoZSBuZXh0IGl0ZW0gaW4K
KwkgKiB0aGUgdHJlZSAocmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgcG9zaXRpb24gQGNvb3JkKQor
CSAqIGhhcyBrZXkgQGtleS4KKwkgKgorCSAqIFZhbGlkIGhpbnQgbWVhbnMgaW4gcGFydGljdWxh
ciwgdGhhdCBub2RlIGlzIG5vdAorCSAqIGVtcHR5IGFuZCBhdCBsZWFzdCBvbmUgaXRzIGl0ZW0g
aGFzIGJlZW4gcHJvY2Vzc2VkCisJICovCisJaWYgKGVxdWFsX3RvX3Jkayhjb29yZC0+bm9kZSwg
a2V5KSkgeworCQkvKgorCQkgKiBMb29rIGZvciB0aGUgaXRlbSBpbiB0aGUgcmlnaHQgbmVpZ2hi
b3IKKwkJICovCisJCWxvY2tfaGFuZGxlIGxoX3JpZ2h0OworCisJCWluaXRfbGgoJmxoX3JpZ2h0
KTsKKwkJcmVzdWx0ID0gcmVpc2VyNF9nZXRfcmlnaHRfbmVpZ2hib3IoJmxoX3JpZ2h0LCBjb29y
ZC0+bm9kZSwKKwkJCQkgICAgem5vZGVfaXNfd2xvY2tlZChjb29yZC0+bm9kZSkgPworCQkJCSAg
ICBaTk9ERV9XUklURV9MT0NLIDogWk5PREVfUkVBRF9MT0NLLAorCQkJCSAgICBHTl9DQU5fVVNF
X1VQUEVSX0xFVkVMUyk7CisJCWlmIChyZXN1bHQpIHsKKwkJCWRvbmVfbGgoJmxoX3JpZ2h0KTsK
KwkJCXJlaXNlcjRfdW5zZXRfaGludChoaW50KTsKKwkJCWlmIChyZXN1bHQgPT0gLUVfTk9fTkVJ
R0hCT1IpCisJCQkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0K
KwkJYXNzZXJ0KCJlZHdhcmQtMTIxOCIsCisJCSAgICAgICBlcXVhbF90b19sZGsobGhfcmlnaHQu
bm9kZSwga2V5KSk7CisJCXJlc3VsdCA9IHpsb2FkKGxoX3JpZ2h0Lm5vZGUpOworCQlpZiAocmVz
dWx0KSB7CisJCQlkb25lX2xoKCZsaF9yaWdodCk7CisJCQlyZWlzZXI0X3Vuc2V0X2hpbnQoaGlu
dCk7CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdF9ub2No
ZWNrKGNvb3JkLCBsaF9yaWdodC5ub2RlKTsKKworCQlpZiAoIWNvb3JkX2lzX2V4aXN0aW5nX2l0
ZW0oY29vcmQpKSB7CisJCQl6cmVsc2UobGhfcmlnaHQubm9kZSk7CisJCQlkb25lX2xoKCZsaF9y
aWdodCk7CisJCQlnb3RvIHRyYXZlcnNlX3RyZWU7CisJCX0KKwkJaXRlbV9rZXlfYnlfY29vcmQo
Y29vcmQsICZpa2V5KTsKKwkJenJlbHNlKGNvb3JkLT5ub2RlKTsKKwkJaWYgKHVubGlrZWx5KCFr
ZXllcShrZXksICZpa2V5KSkpIHsKKwkJCXdhcm5pbmcoImVkd2FyZC0xNjA4IiwKKwkJCQkiRXhw
ZWN0ZWQgaXRlbSBub3QgZm91bmQuIEZzY2s/Iik7CisJCQlkb25lX2xoKCZsaF9yaWdodCk7CisJ
CQlnb3RvIG5vdF9mb3VuZDsKKwkJfQorCQkvKgorCQkgKiBpdGVtIGhhcyBiZWVuIGZvdW5kIGlu
IHRoZSByaWdodCBuZWlnaGJvcjsKKwkJICogbW92ZSBsb2NrIHRvIHRoZSByaWdodAorCQkgKi8K
KwkJZG9uZV9saCgmaGludC0+bGgpOworCQltb3ZlX2xoKCZoaW50LT5saCwgJmxoX3JpZ2h0KTsK
KworCQlkY2x1c3RfaW5jX2V4dGVuc2lvbl9uY291bnQoaGludCk7CisKKwkJcmV0dXJuIENCS19D
T09SRF9GT1VORDsKKwl9IGVsc2UgeworCQkvKgorCQkgKiAgTG9vayBmb3IgdGhlIGl0ZW0gaW4g
dGhlIGN1cnJlbnQgbm9kZQorCQkgKi8KKwkJY29vcmQtPml0ZW1fcG9zKys7CisJCWNvb3JkLT51
bml0X3BvcyA9IDA7CisJCWNvb3JkLT5iZXR3ZWVuID0gQVRfVU5JVDsKKworCQlyZXN1bHQgPSB6
bG9hZChjb29yZC0+bm9kZSk7CisJCWlmIChyZXN1bHQpIHsKKwkJCWRvbmVfbGgoJmhpbnQtPmxo
KTsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwkJaWYgKCFjb29yZF9pc19leGlzdGluZ19pdGVt
KGNvb3JkKSkgeworCQkJenJlbHNlKGNvb3JkLT5ub2RlKTsKKwkJCWdvdG8gbm90X2ZvdW5kOwor
CQl9CisJCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAmaWtleSk7CisJCXpyZWxzZShjb29yZC0+
bm9kZSk7CisJCWlmICgha2V5ZXEoa2V5LCAmaWtleSkpCisJCQlnb3RvIG5vdF9mb3VuZDsKKwkJ
LyoKKwkJICogaXRlbSBoYXMgYmVlbiBmb3VuZCBpbiB0aGUgY3VycmVudCBub2RlCisJCSAqLwor
CQlkY2x1c3RfaW5jX2V4dGVuc2lvbl9uY291bnQoaGludCk7CisKKwkJcmV0dXJuIENCS19DT09S
RF9GT1VORDsKKwl9Cisgbm90X2ZvdW5kOgorCS8qCisJICogVGhlIHRyZWUgZG9lc24ndCBjb250
YWluIGFuIGl0ZW0gd2l0aCBAa2V5OworCSAqIHJvbGwgYmFjayB0aGUgY29vcmQKKwkgKi8KKwkq
Y29vcmQgPSBvcmlnOworCU9OX0RFQlVHKGNvb3JkX3VwZGF0ZV92KGNvb3JkKSk7CisJcmV0dXJu
IENCS19DT09SRF9OT1RGT1VORDsKKworIHRyYXZlcnNlX3RyZWU6CisKKwlyZWlzZXI0X3Vuc2V0
X2hpbnQoaGludCk7CisJZGNsdXN0X2luaXRfZXh0ZW5zaW9uKGhpbnQpOworCWNvb3JkX2luaXRf
emVybyhjb29yZCk7CisKKwlhc3NlcnQoImVkd2FyZC03MTMiLCBoaW50LT5saC5vd25lciA9PSBO
VUxMKTsKKwlhc3NlcnQoImVkd2FyZC03MTQiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCisJ
cmVzdWx0ID0gY29vcmRfYnlfa2V5KGN1cnJlbnRfdHJlZSwga2V5LCBjb29yZCwgJmhpbnQtPmxo
LAorCQkJICAgICAgbG9ja19tb2RlLCBiaWFzLCBMRUFGX0xFVkVMLCBMRUFGX0xFVkVMLAorCQkJ
ICAgICAgQ0JLX1VOSVFVRSB8IGZsYWdzLCByYV9pbmZvKTsKKwlpZiAoY2JrX2Vycm9yZWQocmVz
dWx0KSkKKwkJcmV0dXJuIHJlc3VsdDsKKwlpZihyZXN1bHQgPT0gQ0JLX0NPT1JEX0ZPVU5EKQor
CQlkY2x1c3RfaW5jX2V4dGVuc2lvbl9uY291bnQoaGludCk7CisJaGludF9zZXRfdmFsaWQoaGlu
dCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYnkg
ZGVmbGF0ZVtpbmZsYXRlXSBtYW5hZ2VyIHdoZW4KKyAgIGNyZWF0aW5nIGEgdHJhbnNmb3JtZWQv
cGxhaW4gc3RyZWFtIHRvIGNoZWNrIGlmIHdlIHNob3VsZAorICAgY3JlYXRlL2N1dCBzb21lIG92
ZXJoZWFkLiBJZiB0aGlzIHJldHVybnMgdHJ1ZSwgdGhlbiBAb2gKKyAgIGNvbnRhaW5zIHRoZSBz
aXplIG9mIHRoaXMgb3ZlcmhlYWQuCisgKi8KK3N0YXRpYyBpbnQgbmVlZF9jdXRfb3JfYWxpZ24o
c3RydWN0IGlub2RlICogaW5vZGUsCisJCQkgICAgIHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNo
LCByd19vcCBydywgaW50ICogb2gpCit7CisJc3RydWN0IHRmbV9jbHVzdGVyICogdGMgPSAmY2gt
PnRjOworCXN3aXRjaCAocncpIHsKKwljYXNlIFdSSVRFX09QOiAvKiBlc3RpbWF0ZSBhbGlnbiAq
LworCQkqb2ggPSB0Yy0+bGVuICUgY2lwaGVyX2Jsb2Nrc2l6ZShpbm9kZSk7CisJCWlmICgqb2gg
IT0gMCkKKwkJCXJldHVybiAxOworCQlicmVhazsKKwljYXNlIFJFQURfT1A6ICAvKiBlc3RpbWF0
ZSBjdXQgKi8KKwkJKm9oID0gKih0Zm1fb3V0cHV0X2RhdGEoY2gpICsgdGMtPmxlbiAtIDEpOwor
CQlicmVhazsKKwlkZWZhdWx0OgorCQlpbXBvc3NpYmxlKCJlZHdhcmQtMTQwMSIsICJiYWQgb3B0
aW9uIik7CisJfQorCXJldHVybiAodGMtPmxlbiAhPSB0Yy0+bHNpemUpOworfQorCisvKiBjcmVh
dGUvY3V0IGFuIG92ZXJoZWFkIG9mIHRyYW5zZm9ybWVkL3BsYWluIHN0cmVhbSAqLworc3RhdGlj
IHZvaWQgYWxpZ25fb3JfY3V0X292ZXJoZWFkKHN0cnVjdCBpbm9kZSAqIGlub2RlLAorCQkJCSAg
c3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2gsIHJ3X29wIHJ3KQoreworCXVuc2lnbmVkIGludCBv
aDsKKwljaXBoZXJfcGx1Z2luICogY3BsdWcgPSBpbm9kZV9jaXBoZXJfcGx1Z2luKGlub2RlKTsK
KworCWFzc2VydCgiZWR3YXJkLTE0MDIiLCBuZWVkX2NpcGhlcihpbm9kZSkpOworCisJaWYgKCFu
ZWVkX2N1dF9vcl9hbGlnbihpbm9kZSwgY2gsIHJ3LCAmb2gpKQorCQlyZXR1cm47CisJc3dpdGNo
IChydykgeworCWNhc2UgV1JJVEVfT1A6IC8qIGRvIGFsaWduICovCisJCWNoLT50Yy5sZW4gKz0K
KwkJCWNwbHVnLT5hbGlnbl9zdHJlYW0odGZtX2lucHV0X2RhdGEoY2gpICsKKwkJCQkJICAgIGNo
LT50Yy5sZW4sIGNoLT50Yy5sZW4sCisJCQkJCSAgICBjaXBoZXJfYmxvY2tzaXplKGlub2RlKSk7
CisJCSoodGZtX2lucHV0X2RhdGEoY2gpICsgY2gtPnRjLmxlbiAtIDEpID0KKwkJCWNpcGhlcl9i
bG9ja3NpemUoaW5vZGUpIC0gb2g7CisJCWJyZWFrOworCWNhc2UgUkVBRF9PUDogLyogZG8gY3V0
ICovCisJCWFzc2VydCgiZWR3YXJkLTE0MDMiLCBvaCA8PSBjaXBoZXJfYmxvY2tzaXplKGlub2Rl
KSk7CisJCWNoLT50Yy5sZW4gLT0gb2g7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCWltcG9zc2li
bGUoImVkd2FyZC0xNDA0IiwgImJhZCBvcHRpb24iKTsKKwl9CisJcmV0dXJuOworfQorCitzdGF0
aWMgdW5zaWduZWQgbWF4X2NpcGhlcl9vdmVyaGVhZChzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sK
KwlpZiAoIW5lZWRfY2lwaGVyKGlub2RlKSB8fCAhaW5vZGVfY2lwaGVyX3BsdWdpbihpbm9kZSkt
PmFsaWduX3N0cmVhbSkKKwkJcmV0dXJuIDA7CisJcmV0dXJuIGNpcGhlcl9ibG9ja3NpemUoaW5v
ZGUpOworfQorCitzdGF0aWMgaW50IGRlZmxhdGVfb3ZlcmhlYWQoc3RydWN0IGlub2RlICppbm9k
ZSkKK3sKKwlyZXR1cm4gKGlub2RlX2NvbXByZXNzaW9uX3BsdWdpbihpbm9kZSktPgorCQljaGVj
a3N1bSA/IERDX0NIRUNLU1VNX1NJWkUgOiAwKTsKK30KKworc3RhdGljIHVuc2lnbmVkIGRlZmxh
dGVfb3ZlcnJ1bihzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwgaW50IGlsZW4pCit7CisJcmV0dXJuIGNv
YV9vdmVycnVuKGlub2RlX2NvbXByZXNzaW9uX3BsdWdpbihpbm9kZSksIGlsZW4pOworfQorCitz
dGF0aWMgYm9vbCBpc19hbGxfemVybyhjaGFyIGNvbnN0KiBtZW0sIHNpemVfdCBzaXplKQorewor
CXdoaWxlIChzaXplLS0gPiAwKQorCQlpZiAoKm1lbSsrKQorCQkJcmV0dXJuIGZhbHNlOworCXJl
dHVybiB0cnVlOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wgc2hvdWxkX3B1bmNoX2hvbGUoc3Ry
dWN0IHRmbV9jbHVzdGVyICp0YykKK3sKKwlpZiAoMCAmJgorCSAgICAhcmVpc2VyNF9pc19zZXQo
cmVpc2VyNF9nZXRfY3VycmVudF9zYigpLCBSRUlTRVI0X0RPTlRfUFVOQ0hfSE9MRVMpCisJICAg
ICYmIGlzX2FsbF96ZXJvKHRmbV9zdHJlYW1fZGF0YSh0YywgSU5QVVRfU1RSRUFNKSwgdGMtPmxz
aXplKSkgeworCisJCXRjLT5ob2xlID0gMTsKKwkJcmV0dXJuIHRydWU7CisJfQorCXJldHVybiBm
YWxzZTsKK30KKworLyogRXN0aW1hdGluZyBjb21wcmVzc2liaWxpdHkgb2YgYSBsb2dpY2FsIGNs
dXN0ZXIgYnkgdmFyaW91cworICAgcG9saWNpZXMgcmVwcmVzZW50ZWQgYnkgY29tcHJlc3Npb24g
bW9kZSBwbHVnaW4uCisgICBJZiB0aGlzIHJldHVybnMgZmFsc2UsIHRoZW4gY29tcHJlc3NvciB3
b24ndCBiZSBjYWxsZWQgZm9yCisgICB0aGUgY2x1c3RlciBvZiBpbmRleCBAaW5kZXguCisqLwor
c3RhdGljIGludCBzaG91bGRfY29tcHJlc3Moc3RydWN0IHRmbV9jbHVzdGVyICp0YywgY2xvZmZf
dCBpbmRleCwKKwkJCSAgIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJY29tcHJlc3Npb25fcGx1
Z2luICpjcGx1ZyA9IGlub2RlX2NvbXByZXNzaW9uX3BsdWdpbihpbm9kZSk7CisJY29tcHJlc3Np
b25fbW9kZV9wbHVnaW4gKm1wbHVnID0gaW5vZGVfY29tcHJlc3Npb25fbW9kZV9wbHVnaW4oaW5v
ZGUpOworCisJYXNzZXJ0KCJlZHdhcmQtMTMyMSIsIHRjLT5sZW4gIT0gMCk7CisJYXNzZXJ0KCJl
ZHdhcmQtMTMyMiIsIGNwbHVnICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTEzMjMiLCBtcGx1
ZyAhPSBOVUxMKTsKKworCWlmIChzaG91bGRfcHVuY2hfaG9sZSh0YykpCisJCS8qCisJCSAqIHdl
IGFyZSBhYm91dCB0byBwdW5jaCBhIGhvbGUsCisJCSAqIHNvIGRvbid0IGNvbXByZXNzIGRhdGEK
KwkJICovCisJCXJldHVybiAwOworCXJldHVybiAvKiBlc3RpbWF0ZSBieSBzaXplICovCisJCShj
cGx1Zy0+bWluX3NpemVfZGVmbGF0ZSA/CisJCSB0Yy0+bGVuID49IGNwbHVnLT5taW5fc2l6ZV9k
ZWZsYXRlKCkgOgorCQkgMSkgJiYKKwkJLyogZXN0aW1hdGUgYnkgY29tcHJlc3Npb24gbW9kZSBw
bHVnaW4gKi8KKwkJKG1wbHVnLT5zaG91bGRfZGVmbGF0ZSA/CisJCSBtcGx1Zy0+c2hvdWxkX2Rl
ZmxhdGUoaW5vZGUsIGluZGV4KSA6CisJCSAxKTsKK30KKworLyogRXZhbHVhdGluZyByZXN1bHRz
IG9mIGNvbXByZXNzaW9uIHRyYW5zZm9ybS4KKyAgIFJldHVybnMgdHJ1ZSwgaWYgd2UgbmVlZCB0
byBhY2NlcHQgdGhpcyByZXN1bHRzICovCitzdGF0aWMgaW50IHNhdmVfY29tcHJlc3NlZChpbnQg
c2l6ZV9iZWZvcmUsIGludCBzaXplX2FmdGVyLCBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJl
dHVybiAoc2l6ZV9hZnRlciArIGRlZmxhdGVfb3ZlcmhlYWQoaW5vZGUpICsKKwkJbWF4X2NpcGhl
cl9vdmVyaGVhZChpbm9kZSkgPCBzaXplX2JlZm9yZSk7Cit9CisKKy8qIEd1ZXNzIHJlc3VsdCBv
ZiB0aGUgZXZhbHVhdGlvbiBhYm92ZSAqLworc3RhdGljIGludCBuZWVkX2luZmxhdGUoc3RydWN0
IGNsdXN0ZXJfaGFuZGxlICogY2gsIHN0cnVjdCBpbm9kZSAqIGlub2RlLAorCQkJaW50IGVuY3J5
cHRlZCAvKiBpcyBjbHVzdGVyIGVuY3J5cHRlZCAqLyApCit7CisJc3RydWN0IHRmbV9jbHVzdGVy
ICogdGMgPSAmY2gtPnRjOworCisJYXNzZXJ0KCJlZHdhcmQtMTQyIiwgdGMgIT0gMCk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTQzIiwgaW5vZGUgIT0gTlVMTCk7CisKKwlyZXR1cm4gdGMtPmxlbiA8CisJ
ICAgIChlbmNyeXB0ZWQgPworCSAgICAgaW5vZGVfc2NhbGVkX29mZnNldChpbm9kZSwgdGMtPmxz
aXplKSA6CisJICAgICB0Yy0+bHNpemUpOworfQorCisvKiBJZiByZXN1bHRzIG9mIGNvbXByZXNz
aW9uIHdlcmUgYWNjZXB0ZWQsIHRoZW4gd2UgYWRkCisgICBhIGNoZWNrc3VtIHRvIGNhdGNoIHBv
c3NpYmxlIGRpc2sgY2x1c3RlciBjb3JydXB0aW9uLgorICAgVGhlIGZvbGxvd2luZyBpcyBhIGZv
cm1hdCBvZiB0aGUgZGF0YSBzdG9yZWQgaW4gZGlzayBjbHVzdGVyczoKKworCQkgICBkYXRhICAg
ICAgICAgICAgICAgICAgIFRoaXMgaXMgKHRyYW5zZm9ybWVkKSBsb2dpY2FsIGNsdXN0ZXIuCisJ
CSAgIGNpcGhlcl9vdmVyaGVhZCAgICAgICAgVGhpcyBpcyBjcmVhdGVkIGJ5IC0+YWxpZ24oKSBt
ZXRob2QKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGNpcGhl
ciBwbHVnaW4uIE1heSBiZSBhYnNlbnQuCisJCSAgIGNoZWNrc3VtICAgICAgICAgICg0KSAgVGhp
cyBpcyBjcmVhdGVkIGJ5IC0+Y2hlY2tzdW0gbWV0aG9kCisgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBvZiBjb21wcmVzc2lvbiBwbHVnaW4gdG8gY2hlY2sKKyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVncml0eS4gTWF5IGJlIGFi
c2VudC4KKworCQkgICBDcnlwdG8gb3ZlcmhlYWQgZm9ybWF0OgorCisJCSAgIGRhdGEKKwkJICAg
Y29udHJvbF9ieXRlICAgICAgKDEpICAgY29udGFpbnMgYWxpZ25lZCBvdmVyaGVhZCBzaXplOgor
CQkgICAgICAgICAgICAgICAgICAgICAgICAgICAxIDw9IG92ZXJoZWFkIDw9IGNpcGhlcl9ibGtz
aXplCisqLworLyogQXBwZW5kIGEgY2hlY2tzdW0gYXQgdGhlIGVuZCBvZiBhIHRyYW5zZm9ybWVk
IHN0cmVhbSAqLworc3RhdGljIHZvaWQgZGNfc2V0X2NoZWNrc3VtKGNvbXByZXNzaW9uX3BsdWdp
biAqIGNwbHVnLCBzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0YykKK3sKKwlfX3UzMiBjaGVja3N1bTsK
KworCWFzc2VydCgiZWR3YXJkLTEzMDkiLCB0YyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0x
MzEwIiwgdGMtPmxlbiA+IDApOworCWFzc2VydCgiZWR3YXJkLTEzMTEiLCBjcGx1Zy0+Y2hlY2tz
dW0gIT0gTlVMTCk7CisKKwljaGVja3N1bSA9IGNwbHVnLT5jaGVja3N1bSh0Zm1fc3RyZWFtX2Rh
dGEodGMsIE9VVFBVVF9TVFJFQU0pLCB0Yy0+bGVuKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19s
ZTMyKGNoZWNrc3VtKSwKKwkJIChkMzIgKikodGZtX3N0cmVhbV9kYXRhKHRjLCBPVVRQVVRfU1RS
RUFNKSArIHRjLT5sZW4pKTsKKwl0Yy0+bGVuICs9IChpbnQpRENfQ0hFQ0tTVU1fU0laRTsKK30K
KworLyogQ2hlY2sgYSBkaXNrIGNsdXN0ZXIgY2hlY2tzdW0uCisgICBSZXR1cm5zIDAgaWYgY2hl
Y2tzdW0gaXMgY29ycmVjdCwgb3RoZXJ3aXNlIHJldHVybnMgMSAqLworc3RhdGljIGludCBkY19j
aGVja19jaGVja3N1bShjb21wcmVzc2lvbl9wbHVnaW4gKiBjcGx1Zywgc3RydWN0IHRmbV9jbHVz
dGVyICogdGMpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTMxMiIsIHRjICE9IE5VTEwpOworCWFzc2Vy
dCgiZWR3YXJkLTEzMTMiLCB0Yy0+bGVuID4gKGludClEQ19DSEVDS1NVTV9TSVpFKTsKKwlhc3Nl
cnQoImVkd2FyZC0xMzE0IiwgY3BsdWctPmNoZWNrc3VtICE9IE5VTEwpOworCisJaWYgKGNwbHVn
LT5jaGVja3N1bSh0Zm1fc3RyZWFtX2RhdGEodGMsIElOUFVUX1NUUkVBTSksCisJCQkgICAgdGMt
PmxlbiAtIChpbnQpRENfQ0hFQ0tTVU1fU0laRSkgIT0KKwkgICAgbGUzMl90b19jcHUoZ2V0X3Vu
YWxpZ25lZCgoZDMyICopCisJCQkJICAgICAgKHRmbV9zdHJlYW1fZGF0YSh0YywgSU5QVVRfU1RS
RUFNKQorCQkJCSAgICAgICArIHRjLT5sZW4gLSAoaW50KURDX0NIRUNLU1VNX1NJWkUpKSkpIHsK
KwkJd2FybmluZygiZWR3YXJkLTE1NiIsCisJCQkiQmFkIGRpc2sgY2x1c3RlciBjaGVja3N1bSAl
ZCwgKHNob3VsZCBiZSAlZCkgRnNjaz9cbiIsCisJCQkoaW50KWxlMzJfdG9fY3B1CisJCQkoZ2V0
X3VuYWxpZ25lZCgoZDMyICopCisJCQkJICAgICAgICh0Zm1fc3RyZWFtX2RhdGEodGMsIElOUFVU
X1NUUkVBTSkgKworCQkJCQl0Yy0+bGVuIC0gKGludClEQ19DSEVDS1NVTV9TSVpFKSkpLAorCQkJ
KGludCljcGx1Zy0+Y2hlY2tzdW0KKwkJCSh0Zm1fc3RyZWFtX2RhdGEodGMsIElOUFVUX1NUUkVB
TSksCisJCQkgdGMtPmxlbiAtIChpbnQpRENfQ0hFQ0tTVU1fU0laRSkpOworCQlyZXR1cm4gMTsK
Kwl9CisJdGMtPmxlbiAtPSAoaW50KURDX0NIRUNLU1VNX1NJWkU7CisJcmV0dXJuIDA7Cit9CisK
Ky8qIGdldCBpbnB1dC9vdXRwdXQgc3RyZWFtIGZvciBzb21lIHRyYW5zZm9ybSBhY3Rpb24gKi8K
K2ludCBncmFiX3RmbV9zdHJlYW0oc3RydWN0IGlub2RlICogaW5vZGUsIHN0cnVjdCB0Zm1fY2x1
c3RlciAqIHRjLAorCQkgICAgdGZtX3N0cmVhbV9pZCBpZCkKK3sKKwlzaXplX3Qgc2l6ZSA9IGlu
b2RlX3NjYWxlZF9jbHVzdGVyX3NpemUoaW5vZGUpOworCisJYXNzZXJ0KCJlZHdhcmQtOTAxIiwg
dGMgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTAyNyIsIGlub2RlX2NvbXByZXNzaW9uX3Bs
dWdpbihpbm9kZSkgIT0gTlVMTCk7CisKKwlpZiAoY2x1c3Rlcl9nZXRfdGZtX2FjdCh0YykgPT0g
VEZNQV9XUklURSkKKwkJc2l6ZSArPSBkZWZsYXRlX292ZXJydW4oaW5vZGUsIGlub2RlX2NsdXN0
ZXJfc2l6ZShpbm9kZSkpOworCisJaWYgKCFnZXRfdGZtX3N0cmVhbSh0YywgaWQpICYmIGlkID09
IElOUFVUX1NUUkVBTSkKKwkJYWx0ZXJuYXRlX3N0cmVhbXModGMpOworCWlmICghZ2V0X3RmbV9z
dHJlYW0odGMsIGlkKSkKKwkJcmV0dXJuIGFsbG9jX3RmbV9zdHJlYW0odGMsIHNpemUsIGlkKTsK
KworCWFzc2VydCgiZWR3YXJkLTkwMiIsIHRmbV9zdHJlYW1faXNfc2V0KHRjLCBpZCkpOworCisJ
aWYgKHRmbV9zdHJlYW1fc2l6ZSh0YywgaWQpIDwgc2l6ZSkKKwkJcmV0dXJuIHJlYWxsb2NfdGZt
X3N0cmVhbSh0Yywgc2l6ZSwgaWQpOworCXJldHVybiAwOworfQorCisvKiBDb21tb24gZGVmbGF0
ZSBtYW5hZ2VyICovCitpbnQgcmVpc2VyNF9kZWZsYXRlX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJf
aGFuZGxlICogY2x1c3QsIHN0cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWludCByZXN1bHQgPSAw
OworCWludCBjb21wcmVzc2VkID0gMDsKKwlpbnQgZW5jcnlwdGVkID0gMDsKKwlzdHJ1Y3QgdGZt
X2NsdXN0ZXIgKiB0YyA9ICZjbHVzdC0+dGM7CisJY29tcHJlc3Npb25fcGx1Z2luICogY29wbHVn
OworCisJYXNzZXJ0KCJlZHdhcmQtNDAxIiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdh
cmQtOTAzIiwgdGZtX3N0cmVhbV9pc19zZXQodGMsIElOUFVUX1NUUkVBTSkpOworCWFzc2VydCgi
ZWR3YXJkLTEzNDgiLCBjbHVzdGVyX2dldF90Zm1fYWN0KHRjKSA9PSBURk1BX1dSSVRFKTsKKwlh
c3NlcnQoImVkd2FyZC00OTgiLCAhdGZtX2NsdXN0ZXJfaXNfdXB0b2RhdGUodGMpKTsKKworCWNv
cGx1ZyA9IGlub2RlX2NvbXByZXNzaW9uX3BsdWdpbihpbm9kZSk7CisJaWYgKHNob3VsZF9jb21w
cmVzcyh0YywgY2x1c3QtPmluZGV4LCBpbm9kZSkpIHsKKwkJLyogdHJ5IHRvIGNvbXByZXNzLCBk
aXNjYXJkIGJhZCByZXN1bHRzICovCisJCXNpemVfdCBkc3RfbGVuOworCQljb21wcmVzc2lvbl9t
b2RlX3BsdWdpbiAqIG1wbHVnID0KKwkJCWlub2RlX2NvbXByZXNzaW9uX21vZGVfcGx1Z2luKGlu
b2RlKTsKKwkJYXNzZXJ0KCJlZHdhcmQtNjAyIiwgY29wbHVnICE9IE5VTEwpOworCQlhc3NlcnQo
ImVkd2FyZC0xNDIzIiwgY29wbHVnLT5jb21wcmVzcyAhPSBOVUxMKTsKKworCQlyZXN1bHQgPSBn
cmFiX2NvYSh0YywgY29wbHVnKTsKKwkJaWYgKHJlc3VsdCkKKwkJCS8qCisJCQkgKiBjYW4gbm90
IGFsbG9jYXRlIG1lbW9yeSB0byBwZXJmb3JtCisJCQkgKiBjb21wcmVzc2lvbiwgbGVhdmUgZGF0
YSB1bmNvbXByZXNzZWQKKwkJCSAqLworCQkJZ290byBjaXBoZXI7CisJCXJlc3VsdCA9IGdyYWJf
dGZtX3N0cmVhbShpbm9kZSwgdGMsIE9VVFBVVF9TVFJFQU0pOworCQlpZiAocmVzdWx0KSB7CisJ
CSAgICB3YXJuaW5nKCJlZHdhcmQtMTQyNSIsCisJCQkgImFsbG9jIHN0cmVhbSBmYWlsZWQgd2l0
aCByZXQ9JWQsIHNraXBwZWQgY29tcHJlc3Npb24iLAorCQkJICAgIHJlc3VsdCk7CisJCSAgICBn
b3RvIGNpcGhlcjsKKwkJfQorCQlkc3RfbGVuID0gdGZtX3N0cmVhbV9zaXplKHRjLCBPVVRQVVRf
U1RSRUFNKTsKKwkJY29wbHVnLT5jb21wcmVzcyhnZXRfY29hKHRjLCBjb3BsdWctPmguaWQsIHRj
LT5hY3QpLAorCQkJCSB0Zm1faW5wdXRfZGF0YShjbHVzdCksIHRjLT5sZW4sCisJCQkJIHRmbV9v
dXRwdXRfZGF0YShjbHVzdCksICZkc3RfbGVuKTsKKwkJLyogbWFrZSBzdXJlIHdlIGRpZG4ndCBv
dmVyd3JpdGUgZXh0cmEgYnl0ZXMgKi8KKwkJYXNzZXJ0KCJlZHdhcmQtNjAzIiwKKwkJICAgICAg
IGRzdF9sZW4gPD0gdGZtX3N0cmVhbV9zaXplKHRjLCBPVVRQVVRfU1RSRUFNKSk7CisKKwkJLyog
ZXZhbHVhdGUgcmVzdWx0cyBvZiBjb21wcmVzc2lvbiB0cmFuc2Zvcm0gKi8KKwkJaWYgKHNhdmVf
Y29tcHJlc3NlZCh0Yy0+bGVuLCBkc3RfbGVuLCBpbm9kZSkpIHsKKwkJCS8qIGdvb2QgcmVzdWx0
LCBhY2NlcHQgKi8KKwkJCXRjLT5sZW4gPSBkc3RfbGVuOworCQkJaWYgKG1wbHVnLT5hY2NlcHRf
aG9vayAhPSBOVUxMKSB7CisJCQkgICAgICAgcmVzdWx0ID0gbXBsdWctPmFjY2VwdF9ob29rKGlu
b2RlLCBjbHVzdC0+aW5kZXgpOworCQkJICAgICAgIGlmIChyZXN1bHQpCisJCQkJICAgICAgIHdh
cm5pbmcoImVkd2FyZC0xNDI2IiwKKwkJCQkJICAgICAgICJhY2NlcHRfaG9vayBmYWlsZWQgd2l0
aCByZXQ9JWQiLAorCQkJCQkgICAgICAgcmVzdWx0KTsKKwkJCX0KKwkJCWNvbXByZXNzZWQgPSAx
OworCQl9CisJCWVsc2UgeworCQkJLyogYmFkIHJlc3VsdCwgZGlzY2FyZCAqLworI2lmIDAKKwkJ
CWlmIChjbHVzdGVyX2lzX2NvbXBsZXRlKGNsdXN0LCBpbm9kZSkpCisJCQkgICAgICB3YXJuaW5n
KCJlZHdhcmQtMTQ5NiIsCisJCQkJICAgICAgImluY29tcHJlc3NpYmxlIGNsdXN0ZXIgJWx1IChp
bm9kZSAlbGx1KSIsCisJCQkJICAgICAgY2x1c3QtPmluZGV4LAorCQkJCSAgICAgICh1bnNpZ25l
ZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSkpOworI2VuZGlmCisJCQlpZiAobXBsdWct
PmRpc2NhcmRfaG9vayAhPSBOVUxMICYmCisJCQkgICAgY2x1c3Rlcl9pc19jb21wbGV0ZShjbHVz
dCwgaW5vZGUpKSB7CisJCQkJcmVzdWx0ID0gbXBsdWctPmRpc2NhcmRfaG9vayhpbm9kZSwKKwkJ
CQkJCQkgICAgIGNsdXN0LT5pbmRleCk7CisJCQkJaWYgKHJlc3VsdCkKKwkJCQkgICAgICB3YXJu
aW5nKCJlZHdhcmQtMTQyNyIsCisJCQkJCSAgICAgICJkaXNjYXJkX2hvb2sgZmFpbGVkIHdpdGgg
cmV0PSVkIiwKKwkJCQkJICAgICAgcmVzdWx0KTsKKwkJCX0KKwkJfQorCX0KKyBjaXBoZXI6CisJ
aWYgKG5lZWRfY2lwaGVyKGlub2RlKSkgeworCQljaXBoZXJfcGx1Z2luICogY2lwbHVnOworCQlz
dHJ1Y3QgYmxrY2lwaGVyX2Rlc2MgZGVzYzsKKwkJc3RydWN0IHNjYXR0ZXJsaXN0IHNyYzsKKwkJ
c3RydWN0IHNjYXR0ZXJsaXN0IGRzdDsKKworCQljaXBsdWcgPSBpbm9kZV9jaXBoZXJfcGx1Z2lu
KGlub2RlKTsKKwkJZGVzYy50Zm0gPSBpbmZvX2dldF9jaXBoZXIoaW5vZGVfY3J5cHRvX2luZm8o
aW5vZGUpKTsKKwkJZGVzYy5mbGFncyA9IDA7CisJCWlmIChjb21wcmVzc2VkKQorCQkJYWx0ZXJu
YXRlX3N0cmVhbXModGMpOworCQlyZXN1bHQgPSBncmFiX3RmbV9zdHJlYW0oaW5vZGUsIHRjLCBP
VVRQVVRfU1RSRUFNKTsKKwkJaWYgKHJlc3VsdCkKKwkJCXJldHVybiByZXN1bHQ7CisKKwkJYWxp
Z25fb3JfY3V0X292ZXJoZWFkKGlub2RlLCBjbHVzdCwgV1JJVEVfT1ApOworCQlzZ19pbml0X29u
ZSgmc3JjLCB0Zm1faW5wdXRfZGF0YShjbHVzdCksIHRjLT5sZW4pOworCQlzZ19pbml0X29uZSgm
ZHN0LCB0Zm1fb3V0cHV0X2RhdGEoY2x1c3QpLCB0Yy0+bGVuKTsKKworCQlyZXN1bHQgPSBjcnlw
dG9fYmxrY2lwaGVyX2VuY3J5cHQoJmRlc2MsICZkc3QsICZzcmMsIHRjLT5sZW4pOworCQlpZiAo
cmVzdWx0KSB7CisJCQl3YXJuaW5nKCJlZHdhcmQtMTQwNSIsCisJCQkJImVuY3J5cHRpb24gZmFp
bGVkIGZsYWdzPSV4XG4iLCBkZXNjLmZsYWdzKTsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwkJ
ZW5jcnlwdGVkID0gMTsKKwl9CisJaWYgKGNvbXByZXNzZWQgJiYgY29wbHVnLT5jaGVja3N1bSAh
PSBOVUxMKQorCQlkY19zZXRfY2hlY2tzdW0oY29wbHVnLCB0Yyk7CisJaWYgKCFjb21wcmVzc2Vk
ICYmICFlbmNyeXB0ZWQpCisJCWFsdGVybmF0ZV9zdHJlYW1zKHRjKTsKKwlyZXR1cm4gcmVzdWx0
OworfQorCisvKiBDb21tb24gaW5mbGF0ZSBtYW5hZ2VyLiAqLworaW50IHJlaXNlcjRfaW5mbGF0
ZV9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LCBzdHJ1Y3QgaW5vZGUgKiBp
bm9kZSkKK3sKKwlpbnQgcmVzdWx0ID0gMDsKKwlpbnQgdHJhbnNmb3JtZWQgPSAwOworCXN0cnVj
dCB0Zm1fY2x1c3RlciAqIHRjID0gJmNsdXN0LT50YzsKKwljb21wcmVzc2lvbl9wbHVnaW4gKiBj
b3BsdWc7CisKKwlhc3NlcnQoImVkd2FyZC05MDUiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQo
ImVkd2FyZC0xMTc4IiwgY2x1c3QtPmRzdGF0ID09IFBSRVBfRElTS19DTFVTVEVSKTsKKwlhc3Nl
cnQoImVkd2FyZC05MDYiLCB0Zm1fc3RyZWFtX2lzX3NldCgmY2x1c3QtPnRjLCBJTlBVVF9TVFJF
QU0pKTsKKwlhc3NlcnQoImVkd2FyZC0xMzQ5IiwgdGMtPmFjdCA9PSBURk1BX1JFQUQpOworCWFz
c2VydCgiZWR3YXJkLTkwNyIsICF0Zm1fY2x1c3Rlcl9pc191cHRvZGF0ZSh0YykpOworCisJLyog
SGFuZGxlIGEgY2hlY2tzdW0gKGlmIGFueSkgKi8KKwljb3BsdWcgPSBpbm9kZV9jb21wcmVzc2lv
bl9wbHVnaW4oaW5vZGUpOworCWlmIChuZWVkX2luZmxhdGUoY2x1c3QsIGlub2RlLCBuZWVkX2Np
cGhlcihpbm9kZSkpICYmCisJICAgIGNvcGx1Zy0+Y2hlY2tzdW0gIT0gTlVMTCkgeworCQlyZXN1
bHQgPSBkY19jaGVja19jaGVja3N1bShjb3BsdWcsIHRjKTsKKwkJaWYgKHVubGlrZWx5KHJlc3Vs
dCkpIHsKKwkJCXdhcm5pbmcoImVkd2FyZC0xNDYwIiwKKwkJCQkiSW5vZGUgJWxsdTogZGlzayBj
bHVzdGVyICVsdSBsb29rcyBjb3JydXB0ZWQiLAorCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0
X2lub2RlX29pZChpbm9kZSksCisJCQkJY2x1c3QtPmluZGV4KTsKKwkJCXJldHVybiBSRVRFUlIo
LUVJTyk7CisJCX0KKwl9CisJaWYgKG5lZWRfY2lwaGVyKGlub2RlKSkgeworCQljaXBoZXJfcGx1
Z2luICogY2lwbHVnOworCQlzdHJ1Y3QgYmxrY2lwaGVyX2Rlc2MgZGVzYzsKKwkJc3RydWN0IHNj
YXR0ZXJsaXN0IHNyYzsKKwkJc3RydWN0IHNjYXR0ZXJsaXN0IGRzdDsKKworCQljaXBsdWcgPSBp
bm9kZV9jaXBoZXJfcGx1Z2luKGlub2RlKTsKKwkJZGVzYy50Zm0gPSBpbmZvX2dldF9jaXBoZXIo
aW5vZGVfY3J5cHRvX2luZm8oaW5vZGUpKTsKKwkJZGVzYy5mbGFncyA9IDA7CisJCXJlc3VsdCA9
IGdyYWJfdGZtX3N0cmVhbShpbm9kZSwgdGMsIE9VVFBVVF9TVFJFQU0pOworCQlpZiAocmVzdWx0
KQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJYXNzZXJ0KCJlZHdhcmQtOTA5IiwgdGZtX2NsdXN0ZXJf
aXNfc2V0KHRjKSk7CisKKwkJc2dfaW5pdF9vbmUoJnNyYywgdGZtX2lucHV0X2RhdGEoY2x1c3Qp
LCB0Yy0+bGVuKTsKKwkJc2dfaW5pdF9vbmUoJmRzdCwgdGZtX291dHB1dF9kYXRhKGNsdXN0KSwg
dGMtPmxlbik7CisKKwkJcmVzdWx0ID0gY3J5cHRvX2Jsa2NpcGhlcl9kZWNyeXB0KCZkZXNjLCAm
ZHN0LCAmc3JjLCB0Yy0+bGVuKTsKKwkJaWYgKHJlc3VsdCkgeworCQkJd2FybmluZygiZWR3YXJk
LTE2MDAiLCAiZGVjcnlwdCBmYWlsZWQgZmxhZ3M9JXhcbiIsCisJCQkJZGVzYy5mbGFncyk7CisJ
CQlyZXR1cm4gcmVzdWx0OworCQl9CisJCWFsaWduX29yX2N1dF9vdmVyaGVhZChpbm9kZSwgY2x1
c3QsIFJFQURfT1ApOworCQl0cmFuc2Zvcm1lZCA9IDE7CisJfQorCWlmIChuZWVkX2luZmxhdGUo
Y2x1c3QsIGlub2RlLCAwKSkgeworCQlzaXplX3QgZHN0X2xlbiA9IGlub2RlX2NsdXN0ZXJfc2l6
ZShpbm9kZSk7CisJCWlmKHRyYW5zZm9ybWVkKQorCQkJYWx0ZXJuYXRlX3N0cmVhbXModGMpOwor
CisJCXJlc3VsdCA9IGdyYWJfdGZtX3N0cmVhbShpbm9kZSwgdGMsIE9VVFBVVF9TVFJFQU0pOwor
CQlpZiAocmVzdWx0KQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJYXNzZXJ0KCJlZHdhcmQtMTMwNSIs
IGNvcGx1Zy0+ZGVjb21wcmVzcyAhPSBOVUxMKTsKKwkJYXNzZXJ0KCJlZHdhcmQtOTEwIiwgdGZt
X2NsdXN0ZXJfaXNfc2V0KHRjKSk7CisKKwkJY29wbHVnLT5kZWNvbXByZXNzKGdldF9jb2EodGMs
IGNvcGx1Zy0+aC5pZCwgdGMtPmFjdCksCisJCQkJICAgdGZtX2lucHV0X2RhdGEoY2x1c3QpLCB0
Yy0+bGVuLAorCQkJCSAgIHRmbV9vdXRwdXRfZGF0YShjbHVzdCksICZkc3RfbGVuKTsKKwkJLyog
Y2hlY2sgbGVuZ3RoICovCisJCXRjLT5sZW4gPSBkc3RfbGVuOworCQlhc3NlcnQoImVkd2FyZC0x
NTciLCBkc3RfbGVuID09IHRjLT5sc2l6ZSk7CisJCXRyYW5zZm9ybWVkID0gMTsKKwl9CisJaWYg
KCF0cmFuc2Zvcm1lZCkKKwkJYWx0ZXJuYXRlX3N0cmVhbXModGMpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qIFRoaXMgaXMgaW1wbGVtZW50YXRpb24gb2YgcmVhZHBhZ2UgbWV0aG9kIG9mIHN0
cnVjdAorICAgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25zIGZvciBjcnlwdGNvbXByZXNzIHBsdWdp
bi4gKi8KK2ludCByZWFkcGFnZV9jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1
Y3QgcGFnZSAqcGFnZSkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3QgY2x1c3Rl
cl9oYW5kbGUgY2x1c3Q7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCWludCByZXN1bHQ7CisKKwlh
c3NlcnQoImVkd2FyZC04OCIsIFBhZ2VMb2NrZWQocGFnZSkpOworCWFzc2VydCgidnMtOTc2Iiwg
IVBhZ2VVcHRvZGF0ZShwYWdlKSk7CisJYXNzZXJ0KCJlZHdhcmQtODkiLCBwYWdlLT5tYXBwaW5n
ICYmIHBhZ2UtPm1hcHBpbmctPmhvc3QpOworCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQo
cGFnZS0+bWFwcGluZy0+aG9zdC0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKSB7CisJCXVubG9j
a19wYWdlKHBhZ2UpOworCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCX0KKwlhc3NlcnQoImVkd2Fy
ZC0xMTMiLAorCSAgICAgICBlcmdvKGZpbGUgIT0gTlVMTCwKKwkJICAgIHBhZ2UtPm1hcHBpbmcg
PT0gZmlsZV9pbm9kZShmaWxlKS0+aV9tYXBwaW5nKSk7CisKKwlpZiAoUGFnZVVwdG9kYXRlKHBh
Z2UpKSB7CisJCXdhcm5pbmcoImVkd2FyZC0xMzM4IiwgInBhZ2UgaXMgYWxyZWFkeSB1cHRvZGF0
ZVxuIik7CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgp
OworCQlyZXR1cm4gMDsKKwl9CisJY2x1c3Rlcl9pbml0X3JlYWQoJmNsdXN0LCBOVUxMKTsKKwlj
bHVzdC5maWxlID0gZmlsZTsKKwlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2lkKENUQUlMX0lEKTsK
KwlpZiAoIWlwbHVnLT5zLmZpbGUucmVhZHBhZ2UpIHsKKwkJdW5sb2NrX3BhZ2UocGFnZSk7CisJ
CXB1dF9jbHVzdGVyX2hhbmRsZSgmY2x1c3QpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgp
OworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisJcmVzdWx0ID0gaXBsdWctPnMuZmlsZS5yZWFkcGFn
ZSgmY2x1c3QsIHBhZ2UpOworCisJcHV0X2NsdXN0ZXJfaGFuZGxlKCZjbHVzdCk7CisJcmVpc2Vy
NF90eG5fcmVzdGFydChjdHgpOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJu
IHJlc3VsdDsKK30KKworLyogbnVtYmVyIG9mIHBhZ2VzIHRvIGNoZWNrIGluICovCitzdGF0aWMg
aW50IGdldF9uZXdfbnJwYWdlcyhzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCkKK3sKKwlz
d2l0Y2ggKGNsdXN0LT5vcCkgeworCWNhc2UgTENfQVBQT1Y6CisJY2FzZSBMQ19FWFBBTkQ6CisJ
CXJldHVybiBjbHVzdC0+bnJfcGFnZXM7CisJY2FzZSBMQ19TSFJJTks6CisJCWFzc2VydCgiZWR3
YXJkLTExNzkiLCBjbHVzdC0+d2luICE9IE5VTEwpOworCQlyZXR1cm4gc2l6ZV9pbl9wYWdlcyhj
bHVzdC0+d2luLT5vZmYgKyBjbHVzdC0+d2luLT5jb3VudCk7CisJZGVmYXVsdDoKKwkJaW1wb3Nz
aWJsZSgiZWR3YXJkLTExODAiLCAiYmFkIHBhZ2UgY2x1c3RlciBvcHRpb24iKTsKKwkJcmV0dXJu
IDA7CisJfQorfQorCitzdGF0aWMgdm9pZCBzZXRfY2x1c3Rlcl9wYWdlc19kaXJ0eShzdHJ1Y3Qg
Y2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkgICAgc3RydWN0IGlub2RlICogaW5vZGUpCit7
CisJaW50IGk7CisJc3RydWN0IHBhZ2UgKnBnOworCWludCBucnBhZ2VzID0gZ2V0X25ld19ucnBh
Z2VzKGNsdXN0KTsKKworCWZvciAoaSA9IDA7IGkgPCBucnBhZ2VzOyBpKyspIHsKKworCQlwZyA9
IGNsdXN0LT5wYWdlc1tpXTsKKwkJYXNzZXJ0KCJlZHdhcmQtOTY4IiwgcGcgIT0gTlVMTCk7CisJ
CWxvY2tfcGFnZShwZyk7CisJCWFzc2VydCgiZWR3YXJkLTEwNjUiLCBQYWdlVXB0b2RhdGUocGcp
KTsKKwkJc2V0X3BhZ2VfZGlydHlfbm90YWcocGcpOworCQl1bmxvY2tfcGFnZShwZyk7CisJCW1h
cmtfcGFnZV9hY2Nlc3NlZChwZyk7CisJfQorfQorCisvKiBHcmFiIGEgcGFnZSBjbHVzdGVyIGZv
ciByZWFkL3dyaXRlIG9wZXJhdGlvbnMuCisgICBBdHRhY2ggYSBqbm9kZSBmb3Igd3JpdGUgb3Bl
cmF0aW9ucyAod2hlbiBwcmVwYXJpbmcgZm9yIG1vZGlmaWNhdGlvbnMsIHdoaWNoCisgICBhcmUg
c3VwcG9zZWQgdG8gYmUgY29tbWl0dGVkKS4KKworICAgV2UgYWxsb2NhdGUgb25seSBvbmUgam5v
ZGUgcGVyIHBhZ2UgY2x1c3RlcjsgdGhpcyBqbm9kZSBpcyBiaW5kZWQgdG8gdGhlCisgICBmaXJz
dCBwYWdlIG9mIHRoaXMgY2x1c3Rlciwgc28gd2UgaGF2ZSBhbiBleHRyYS1yZWZlcmVuY2UgdGhh
dCB3aWxsIGJlIHB1dAorICAgYXMgc29vbiBhcyBqbm9kZSBpcyBldmljdGVkIGZyb20gbWVtb3J5
KSwgb3RoZXIgcmVmZXJlbmNlcyB3aWxsIGJlIGNsZWFuZWQKKyAgIHVwIGluIGZsdXNoIHRpbWUg
KGFzc3VtZSB0aGF0IGNoZWNrIGluIHBhZ2UgY2x1c3RlciB3YXMgc3VjY2Vzc2Z1bCkuCisqLwor
aW50IGdyYWJfcGFnZV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAqIGlub2RlLAorCQkgICAgICBzdHJ1
Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwgcndfb3AgcncpCit7CisJaW50IGk7CisJaW50IHJl
c3VsdCA9IDA7CisJam5vZGUgKm5vZGUgPSBOVUxMOworCisJYXNzZXJ0KCJlZHdhcmQtMTgyIiwg
Y2x1c3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTgzIiwgY2x1c3QtPnBhZ2VzICE9IE5V
TEwpOworCWFzc2VydCgiZWR3YXJkLTE0NjYiLCBjbHVzdC0+bm9kZSA9PSBOVUxMKTsKKwlhc3Nl
cnQoImVkd2FyZC0xNDI4IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTQyOSIs
IGlub2RlLT5pX21hcHBpbmcgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTg0IiwgY2x1c3Qt
Pm5yX3BhZ2VzIDw9IGNsdXN0ZXJfbnJwYWdlcyhpbm9kZSkpOworCisJaWYgKGNsdXN0LT5ucl9w
YWdlcyA9PSAwKQorCQlyZXR1cm4gMDsKKworCWZvciAoaSA9IDA7IGkgPCBjbHVzdC0+bnJfcGFn
ZXM7IGkrKykgeworCisJCWFzc2VydCgiZWR3YXJkLTEwNDQiLCBjbHVzdC0+cGFnZXNbaV0gPT0g
TlVMTCk7CisKKwkJY2x1c3QtPnBhZ2VzW2ldID0KKwkJICAgICAgIGZpbmRfb3JfY3JlYXRlX3Bh
Z2UoaW5vZGUtPmlfbWFwcGluZywKKwkJCQkJICAgY2x1c3RfdG9fcGcoY2x1c3QtPmluZGV4LCBp
bm9kZSkgKyBpLAorCQkJCQkgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJCWlmICgh
Y2x1c3QtPnBhZ2VzW2ldKSB7CisJCQlyZXN1bHQgPSBSRVRFUlIoLUVOT01FTSk7CisJCQlicmVh
azsKKwkJfQorCQlpZiAoaSA9PSAwICYmIHJ3ID09IFdSSVRFX09QKSB7CisJCQlub2RlID0gam5v
ZGVfb2ZfcGFnZShjbHVzdC0+cGFnZXNbaV0pOworCQkJaWYgKElTX0VSUihub2RlKSkgeworCQkJ
CXJlc3VsdCA9IFBUUl9FUlIobm9kZSk7CisJCQkJdW5sb2NrX3BhZ2UoY2x1c3QtPnBhZ2VzW2ld
KTsKKwkJCQlicmVhazsKKwkJCX0KKwkJCUpGX1NFVChub2RlLCBKTk9ERV9DTFVTVEVSX1BBR0Up
OworCQkJYXNzZXJ0KCJlZHdhcmQtOTIwIiwganByaXZhdGUoY2x1c3QtPnBhZ2VzWzBdKSk7CisJ
CX0KKwkJSU5PREVfUEdDT1VOVF9JTkMoaW5vZGUpOworCQl1bmxvY2tfcGFnZShjbHVzdC0+cGFn
ZXNbaV0pOworCX0KKwlpZiAodW5saWtlbHkocmVzdWx0KSkgeworCQl3aGlsZSAoaSkgeworCQkJ
cHV0X2NsdXN0ZXJfcGFnZShjbHVzdC0+cGFnZXNbLS1pXSk7CisJCQlJTk9ERV9QR0NPVU5UX0RF
Qyhpbm9kZSk7CisJCX0KKwkJaWYgKG5vZGUgJiYgIUlTX0VSUihub2RlKSkKKwkJCWpwdXQobm9k
ZSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCWNsdXN0LT5ub2RlID0gbm9kZTsKKwlyZXR1cm4g
MDsKK30KKworc3RhdGljIHZvaWQgdHJ1bmNhdGVfcGFnZV9jbHVzdGVyX3JhbmdlKHN0cnVjdCBp
bm9kZSAqIGlub2RlLAorCQkJCQlzdHJ1Y3QgcGFnZSAqKiBwYWdlcywKKwkJCQkJY2xvZmZfdCBp
bmRleCwKKwkJCQkJaW50IGZyb20sIGludCBjb3VudCwKKwkJCQkJaW50IGV2ZW5fY293cykKK3sK
Kwlhc3NlcnQoImVkd2FyZC0xNDY3IiwgY291bnQgPiAwKTsKKwlyZWlzZXI0X2ludmFsaWRhdGVf
cGFnZXMoaW5vZGUtPmlfbWFwcGluZywKKwkJCQkgY2x1c3RfdG9fcGcoaW5kZXgsIGlub2RlKSAr
IGZyb20sCisJCQkJIGNvdW50LCBldmVuX2Nvd3MpOworfQorCisvKiBQdXQgQGNvdW50IHBhZ2Vz
IHN0YXJ0aW5nIGZyb20gQGZyb20gb2Zmc2V0ICovCit2b2lkIF9fcHV0X3BhZ2VfY2x1c3Rlcihp
bnQgZnJvbSwgaW50IGNvdW50LAorCQkJc3RydWN0IHBhZ2UgKiogcGFnZXMsIHN0cnVjdCBpbm9k
ZSAgKiBpbm9kZSkKK3sKKwlpbnQgaTsKKwlhc3NlcnQoImVkd2FyZC0xNDY4IiwgcGFnZXMgIT0g
TlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTQ2OSIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTE0NzAiLCBmcm9tID49IDAgJiYgY291bnQgPj0gMCk7CisKKwlmb3IgKGkgPSAwOyBp
IDwgY291bnQ7IGkrKykgeworCQlhc3NlcnQoImVkd2FyZC0xNDcxIiwgcGFnZXNbZnJvbSArIGld
ICE9IE5VTEwpOworCQlhc3NlcnQoImVkd2FyZC0xNDcyIiwKKwkJICAgICAgIHBhZ2VzW2Zyb20g
KyBpXS0+aW5kZXggPT0gcGFnZXNbZnJvbV0tPmluZGV4ICsgaSk7CisKKwkJcHV0X2NsdXN0ZXJf
cGFnZShwYWdlc1tmcm9tICsgaV0pOworCQlJTk9ERV9QR0NPVU5UX0RFQyhpbm9kZSk7CisJfQor
fQorCisvKgorICogVGhpcyBpcyBkdWFsIHRvIGdyYWJfcGFnZV9jbHVzdGVyLAorICogaG93ZXZl
ciBpZiBAcncgPT0gV1JJVEVfT1AsIHRoZW4gd2UgY2FsbCB0aGlzIGZ1bmN0aW9uCisgKiBvbmx5
IGlmIHNvbWV0aGluZyBpcyBmYWlsZWQgYmVmb3JlIGNoZWNraW4gcGFnZSBjbHVzdGVyLgorICov
Cit2b2lkIHB1dF9wYWdlX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsCisJ
CSAgICAgIHN0cnVjdCBpbm9kZSAqIGlub2RlLCByd19vcCBydykKK3sKKwlhc3NlcnQoImVkd2Fy
ZC00NDUiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC05MjIiLCBjbHVzdC0+cGFn
ZXMgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNDQ2IiwKKwkgICAgICAgZXJnbyhjbHVzdC0+
bnJfcGFnZXMgIT0gMCwgY2x1c3QtPnBhZ2VzWzBdICE9IE5VTEwpKTsKKworCV9fcHV0X3BhZ2Vf
Y2x1c3RlcigwLCBjbHVzdC0+bnJfcGFnZXMsIGNsdXN0LT5wYWdlcywgaW5vZGUpOworCWlmIChy
dyA9PSBXUklURV9PUCkgeworCQlpZiAodW5saWtlbHkoY2x1c3QtPm5vZGUpKSB7CisJCQlhc3Nl
cnQoImVkd2FyZC00NDciLAorCQkJICAgICAgIGNsdXN0LT5ub2RlID09IGpwcml2YXRlKGNsdXN0
LT5wYWdlc1swXSkpOworCQkJanB1dChjbHVzdC0+bm9kZSk7CisJCQljbHVzdC0+bm9kZSA9IE5V
TEw7CisJCX0KKwl9Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCitpbnQgY3J5cHRjb21wcmVzc19p
bm9kZV9vayhzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWlmICghKHJlaXNlcjRfaW5vZGVfZGF0
YShpbm9kZSktPnBsdWdpbl9tYXNrICYgKDEgPDwgUFNFVF9GSUxFKSkpCisJCXJldHVybiAwOwor
CWlmICghY2x1c3Rlcl9zaGlmdF9vayhpbm9kZV9jbHVzdGVyX3NoaWZ0KGlub2RlKSkpCisJCXJl
dHVybiAwOworCXJldHVybiAxOworfQorCitzdGF0aWMgaW50IHdpbmRvd19vayhzdHJ1Y3QgcmVp
c2VyNF9zbGlkZSAqIHdpbiwgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoImVkd2Fy
ZC0xMTE1Iiwgd2luICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTExMTYiLCBlcmdvKHdpbi0+
ZGVsdGEsIHdpbi0+c3RhdCA9PSBIT0xFX1dJTkRPVykpOworCisJcmV0dXJuICh3aW4tPm9mZiAh
PSBpbm9kZV9jbHVzdGVyX3NpemUoaW5vZGUpKSAmJgorCSAgICAod2luLT5vZmYgKyB3aW4tPmNv
dW50ICsgd2luLT5kZWx0YSA8PSBpbm9kZV9jbHVzdGVyX3NpemUoaW5vZGUpKTsKK30KKworc3Rh
dGljIGludCBjbHVzdGVyX29rKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LCBzdHJ1Y3Qg
aW5vZGUgKmlub2RlKQoreworCWFzc2VydCgiZWR3YXJkLTI3OSIsIGNsdXN0ICE9IE5VTEwpOwor
CisJaWYgKCFjbHVzdC0+cGFnZXMpCisJCXJldHVybiAwOworCXJldHVybiAoY2x1c3QtPndpbiA/
IHdpbmRvd19vayhjbHVzdC0+d2luLCBpbm9kZSkgOiAxKTsKK30KKyNpZiAwCitzdGF0aWMgaW50
IHBhZ2VzX3RydW5jYXRlX29rKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHBnb2ZmX3Qgc3RhcnQpCit7
CisJaW50IGZvdW5kOworCXN0cnVjdCBwYWdlICogcGFnZTsKKworCisJZm91bmQgPSBmaW5kX2dl
dF9wYWdlcyhpbm9kZS0+aV9tYXBwaW5nLCAmc3RhcnQsIDEsICZwYWdlKTsKKwlpZiAoZm91bmQp
CisJCXB1dF9jbHVzdGVyX3BhZ2UocGFnZSk7CisJcmV0dXJuICFmb3VuZDsKK30KKyNlbHNlCisj
ZGVmaW5lIHBhZ2VzX3RydW5jYXRlX29rKGlub2RlLCBzdGFydCkgMQorI2VuZGlmCisKK3N0YXRp
YyBpbnQgam5vZGVfdHJ1bmNhdGVfb2soc3RydWN0IGlub2RlICppbm9kZSwgY2xvZmZfdCBpbmRl
eCkKK3sKKwlqbm9kZSAqbm9kZTsKKwlub2RlID0gamxvb2t1cChjdXJyZW50X3RyZWUsIGdldF9p
bm9kZV9vaWQoaW5vZGUpLAorCQkgICAgICAgY2x1c3RfdG9fcGcoaW5kZXgsIGlub2RlKSk7CisJ
aWYgKGxpa2VseSghbm9kZSkpCisJCXJldHVybiAxOworCWpwdXQobm9kZSk7CisJcmV0dXJuIDA7
Cit9CisjZW5kaWYKKworLyogZ3Vlc3MgbmV4dCB3aW5kb3cgc3RhdCAqLworc3RhdGljIGlubGlu
ZSB3aW5kb3dfc3RhdCBuZXh0X3dpbmRvd19zdGF0KHN0cnVjdCByZWlzZXI0X3NsaWRlICogd2lu
KQoreworCWFzc2VydCgiZWR3YXJkLTExMzAiLCB3aW4gIT0gTlVMTCk7CisJcmV0dXJuICgod2lu
LT5zdGF0ID09IEhPTEVfV0lORE9XICYmIHdpbi0+ZGVsdGEgPT0gMCkgPworCQlIT0xFX1dJTkRP
VyA6IERBVEFfV0lORE9XKTsKK30KKworLyogZ3Vlc3MgYW5kIHNldCBuZXh0IGNsdXN0ZXIgaW5k
ZXggYW5kIHdpbmRvdyBwYXJhbXMgKi8KK3N0YXRpYyB2b2lkIG1vdmVfdXBkYXRlX3dpbmRvdyhz
dHJ1Y3QgaW5vZGUgKiBpbm9kZSwKKwkJCSAgICAgICBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBj
bHVzdCwKKwkJCSAgICAgICBsb2ZmX3QgZmlsZV9vZmYsIGxvZmZfdCB0b19maWxlKQoreworCXN0
cnVjdCByZWlzZXI0X3NsaWRlICogd2luOworCisJYXNzZXJ0KCJlZHdhcmQtMTg1IiwgY2x1c3Qg
IT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNDM4IiwgY2x1c3QtPnBhZ2VzICE9IE5VTEwpOwor
CWFzc2VydCgiZWR3YXJkLTI4MSIsIGNsdXN0ZXJfb2soY2x1c3QsIGlub2RlKSk7CisKKwl3aW4g
PSBjbHVzdC0+d2luOworCWlmICghd2luKQorCQlyZXR1cm47CisKKwlzd2l0Y2ggKHdpbi0+c3Rh
dCkgeworCWNhc2UgREFUQV9XSU5ET1c6CisJCS8qIGluY3JlbWVudCAqLworCQljbHVzdC0+aW5k
ZXgrKzsKKwkJd2luLT5zdGF0ID0gREFUQV9XSU5ET1c7CisJCXdpbi0+b2ZmID0gMDsKKwkJd2lu
LT5jb3VudCA9IG1pbigobG9mZl90KWlub2RlX2NsdXN0ZXJfc2l6ZShpbm9kZSksIHRvX2ZpbGUp
OworCQlicmVhazsKKwljYXNlIEhPTEVfV0lORE9XOgorCQlzd2l0Y2ggKG5leHRfd2luZG93X3N0
YXQod2luKSkgeworCQljYXNlIEhPTEVfV0lORE9XOgorCQkJLyogc2tpcCAqLworCQkJY2x1c3Qt
PmluZGV4ID0gb2ZmX3RvX2NsdXN0KGZpbGVfb2ZmLCBpbm9kZSk7CisJCQl3aW4tPnN0YXQgPSBI
T0xFX1dJTkRPVzsKKwkJCXdpbi0+b2ZmID0gMDsKKwkJCXdpbi0+Y291bnQgPSBvZmZfdG9fY2xv
ZmYoZmlsZV9vZmYsIGlub2RlKTsKKwkJCXdpbi0+ZGVsdGEgPSBtaW4oKGxvZmZfdCkoaW5vZGVf
Y2x1c3Rlcl9zaXplKGlub2RlKSAtCisJCQkJCQkgIHdpbi0+Y291bnQpLCB0b19maWxlKTsKKwkJ
CWJyZWFrOworCQljYXNlIERBVEFfV0lORE9XOgorCQkJLyogc3RheSAqLworCQkJd2luLT5zdGF0
ID0gREFUQV9XSU5ET1c7CisJCQkvKiBvZmYrY291bnQrZGVsdGE9aW52ICovCisJCQl3aW4tPm9m
ZiA9IHdpbi0+b2ZmICsgd2luLT5jb3VudDsKKwkJCXdpbi0+Y291bnQgPSB3aW4tPmRlbHRhOwor
CQkJd2luLT5kZWx0YSA9IDA7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCWltcG9zc2libGUo
ImVkd2FyZC0yODIiLCAid3JvbmcgbmV4dCB3aW5kb3cgc3RhdGUiKTsKKwkJfQorCQlicmVhazsK
KwlkZWZhdWx0OgorCQlpbXBvc3NpYmxlKCJlZHdhcmQtMjgzIiwgIndyb25nIGN1cnJlbnQgd2lu
ZG93IHN0YXRlIik7CisJfQorCWFzc2VydCgiZWR3YXJkLTEwNjgiLCBjbHVzdGVyX29rKGNsdXN0
LCBpbm9kZSkpOworfQorCitzdGF0aWMgaW50IHVwZGF0ZV9zZF9jcnlwdGNvbXByZXNzKHN0cnVj
dCBpbm9kZSAqaW5vZGUpCit7CisJaW50IHJlc3VsdCA9IDA7CisKKwlhc3NlcnQoImVkd2FyZC05
NzgiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCisJcmVzdWx0ID0gcmVpc2VyNF9ncmFiX3Nw
YWNlX2ZvcmNlKC8qIG9uZSBmb3Igc3RhdCBkYXRhIHVwZGF0ZSAqLworCQkJCQkgIGVzdGltYXRl
X3VwZGF0ZV9jb21tb24oaW5vZGUpLAorCQkJCQkgIEJBX0NBTl9DT01NSVQpOworCWlmIChyZXN1
bHQpCisJCXJldHVybiByZXN1bHQ7CisJaWYgKCFJU19OT0NNVElNRShpbm9kZSkpCisJCWlub2Rl
LT5pX2N0aW1lID0gaW5vZGUtPmlfbXRpbWUgPSBjdXJyZW50X3RpbWUoaW5vZGUpOworCisJcmVz
dWx0ID0gcmVpc2VyNF91cGRhdGVfc2QoaW5vZGUpOworCisJaWYgKHVubGlrZWx5KHJlc3VsdCAh
PSAwKSkKKwkJd2FybmluZygiZWR3YXJkLTE1NzMiLAorCQkJIkNhbiBub3QgdXBkYXRlIHN0YXQt
ZGF0YTogJWkuIEZTQ0s/IiwKKwkJCXJlc3VsdCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworc3Rh
dGljIHZvaWQgdW5jYXB0dXJlX2NsdXN0ZXJfam5vZGUoam5vZGUgKiBub2RlKQoreworCXR4bl9h
dG9tICphdG9tOworCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKworCWF0
b20gPSBqbm9kZV9nZXRfYXRvbShub2RlKTsKKwlpZiAoYXRvbSA9PSBOVUxMKSB7CisJCWFzc2Vy
dCgiam1hY2QtNzExMSIsICFKRl9JU1NFVChub2RlLCBKTk9ERV9ESVJUWSkpOworCQlzcGluX3Vu
bG9ja19qbm9kZShub2RlKTsKKwkJcmV0dXJuOworCX0KKwlyZWlzZXI0X3VuY2FwdHVyZV9ibG9j
ayhub2RlKTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworCWpwdXQobm9kZSk7Cit9CisKK3N0
YXRpYyB2b2lkIHB1dF9mb3VuZF9wYWdlcyhzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCBpbnQgbnIpCit7
CisJaW50IGk7CisJZm9yIChpID0gMDsgaSA8IG5yOyBpKyspIHsKKwkJYXNzZXJ0KCJlZHdhcmQt
MTA0NSIsIHBhZ2VzW2ldICE9IE5VTEwpOworCQlwdXRfY2x1c3Rlcl9wYWdlKHBhZ2VzW2ldKTsK
Kwl9Cit9CisKKy8qICAgICAgICAgICAgIExpZmVjeWNsZSBvZiBhIGxvZ2ljYWwgY2x1c3RlciBp
biB0aGUgc3lzdGVtLgorICoKKyAqCisgKiBMb2dpY2FsIGNsdXN0ZXIgb2YgYSBjcnlwdGNvbXBy
ZXNzIGZpbGUgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN5c3RlbSBieQorICogLiBwYWdlIGNsdXN0
ZXIgKGluIG1lbW9yeSwgcHJpbWFyeSBjYWNoZSwgY29udGFpbnMgcGxhaW4gdGV4dCk7CisgKiAu
IGRpc2sgY2x1c3RlciAoaW4gbWVtb3J5LCBzZWNvbmRhcnkgY2FjaGUsIGNvbnRhaW5zIHRyYW5z
Zm9ybWVkIHRleHQpLgorICogUHJpbWFyeSBjYWNoZSBpcyB0byByZWR1Y2UgbnVtYmVyIG9mIHRy
YW5zZm9ybSBvcGVyYXRpb25zIChjb21wcmVzc2lvbiwKKyAqIGVuY3J5cHRpb24pLCBpLmUuIHRv
IGltcGxlbWVudCB0cmFuc2Zvcm0tY2FjaGluZyBzdHJhdGVneS4KKyAqIFNlY29uZGFyeSBjYWNo
ZSBpcyB0byByZWR1Y2UgbnVtYmVyIG9mIEkvTyBvcGVyYXRpb25zLCBpLmUuIGZvciB1c3VhbAor
ICogd3JpdGUtY2FjaGluZyBzdHJhdGVneS4gUGFnZSBjbHVzdGVyIGlzIGEgc2V0IG9mIHBhZ2Vz
LCBpLmUuIG1hcHBpbmcgb2YKKyAqIGEgbG9naWNhbCBjbHVzdGVyIHRvIHRoZSBwcmltYXJ5IGNh
Y2hlLiBEaXNrIGNsdXN0ZXIgaXMgYSBzZXQgb2YgaXRlbXMKKyAqIG9mIHRoZSBzYW1lIHR5cGUg
ZGVmaW5lZCBieSBzb21lIHJlaXNlcjQgaXRlbSBwbHVnaW4gaWQuCisgKgorICogICAgICAgICAg
ICAgIDEuIFBlcmZvcm1pbmcgbW9kaWZpY2F0aW9ucworICoKKyAqIEV2ZXJ5IG1vZGlmaWNhdGlv
biBvZiBhIGNyeXB0Y29tcHJlc3MgZmlsZSBpcyBjb25zaWRlcmVkIGFzIGEgc2V0IG9mCisgKiBv
cGVyYXRpb25zIHBlcmZvcm1lZCBvbiBmaWxlJ3MgbG9naWNhbCBjbHVzdGVycy4gRXZlcnkgc3Vj
aCAiYXRvbWljIgorICogbW9kaWZpY2F0aW9uIGlzIHRydW5jYXRlLCBhcHBlbmQgYW5kKG9yKSBv
dmVyd3JpdGUgc29tZSBieXRlcyBvZiBhCisgKiBsb2dpY2FsIGNsdXN0ZXIgcGVyZm9ybWVkIGlu
IHRoZSBwcmltYXJ5IGNhY2hlIHdpdGggdGhlIGZvbGxvd2luZworICogc3luY2hyb25pemF0aW9u
IHdpdGggdGhlIHNlY29uZGFyeSBjYWNoZSAoaW4gZmx1c2ggdGltZSkuIERpc2sgY2x1c3RlcnMs
CisgKiB3aGljaCBsaXZlIGluIHRoZSBzZWNvbmRhcnkgY2FjaGUsIGFyZSBzdXBwb3NlZCB0byBi
ZSBzeW5jaHJvbml6ZWQgd2l0aAorICogZGlzay4gVGhlIG1lY2hhbmlzbSBvZiBzeW5jaHJvbml6
YXRpb24gb2YgcHJpbWFyeSBhbmQgc2Vjb25kYXJ5IGNhY2hlcworICogaW5jbHVkZXMgc28tY2Fs
bGVkIGNoZWNraW4vY2hlY2tvdXQgdGVjaG5pcXVlIGRlc2NyaWJlZCBiZWxvdy4KKyAqCisgKiAg
ICAgICAgICAgICAgMi4gU3VibWl0dGluZyBtb2RpZmljYXRpb25zCisgKgorICogRWFjaCBwYWdl
IGNsdXN0ZXIgaGFzIGFzc29jaWF0ZWQgam5vZGUgKGEgc3BlY2lhbCBpbi1tZW1vcnkgaGVhZGVy
IHRvCisgKiBrZWVwIGEgdHJhY2sgb2YgdHJhbnNhY3Rpb25zIGluIHJlaXNlcjQpLCB3aGljaCBp
cyBhdHRhY2hlZCB0byBpdHMgZmlyc3QKKyAqIHBhZ2Ugd2hlbiBncmFiYmluZyBwYWdlIGNsdXN0
ZXIgZm9yIG1vZGlmaWNhdGlvbnMgKHNlZSBncmFiX3BhZ2VfY2x1c3RlcikuCisgKiBTdWJtaXR0
aW5nIG1vZGlmaWNhdGlvbnMgKHNlZSBjaGVja2luX2xvZ2ljYWxfY2x1c3RlcikgaXMgZ29pbmcg
cGVyIGxvZ2ljYWwKKyAqIGNsdXN0ZXIgYW5kIGluY2x1ZGVzOgorICogLiBjaGVja2luX2NsdXN0
ZXJfc2l6ZTsKKyAqIC4gY2hlY2tpbl9wYWdlX2NsdXN0ZXIuCisgKiBjaGVja2luX2NsdXN0ZXJf
c2l6ZSgpIGlzIHJlc29sdmVkIHRvIGZpbGUgc2l6ZSB1cGRhdGUgKHdoaWNoIGNvbXBsZXRlbHkK
KyAqIGRlZmluZXMgbmV3IHNpemUgb2YgbG9naWNhbCBjbHVzdGVyIChudW1iZXIgb2YgZmlsZSdz
IGJ5dGVzIGluIGEgbG9naWNhbAorICogY2x1c3RlcikuCisgKiBjaGVja2luX3BhZ2VfY2x1c3Rl
cigpIGNhcHR1cmVzIGpub2RlIG9mIGEgcGFnZSBjbHVzdGVyIGFuZCBpbnN0YWxscworICogam5v
ZGUncyBkaXJ0eSBmbGFnIChpZiBuZWVkZWQpIHRvIGluZGljYXRlIHRoYXQgbW9kaWZpY2F0aW9u
cyBhcmUKKyAqIHN1Y2Nlc3NmdWxseSBjaGVja2VkIGluLgorICoKKyAqICAgICAgICAgICAgICAz
LiBDaGVja2luZyBvdXQgbW9kaWZpY2F0aW9ucworICoKKyAqIElzIGdvaW5nIHBlciBsb2dpY2Fs
IGNsdXN0ZXIgaW4gZmx1c2ggdGltZSAoc2VlIGNoZWNrb3V0X2xvZ2ljYWxfY2x1c3RlcikuCisg
KiBUaGlzIGlzIHRoZSB0aW1lIG9mIHN5bmNocm9uaXppbmcgcHJpbWFyeSBhbmQgc2Vjb25kYXJ5
IGNhY2hlcy4KKyAqIGNoZWNrb3V0X2xvZ2ljYWxfY2x1c3RlcigpIGluY2x1ZGVzOgorICogLiBj
aGVja291dF9wYWdlX2NsdXN0ZXIgKHJldHJpZXZpbmcgY2hlY2tlZCBpbiBwYWdlcykuCisgKiAu
IHVuY2FwdHVyZSBqbm9kZSAoaW5jbHVkaW5nIGNsZWFyIGRpcnR5IGZsYWcgYW5kIHVubG9jaykK
KyAqCisgKiAgICAgICAgICAgICAgNC4gQ29tbWl0dGluZyBtb2RpZmljYXRpb25zCisgKgorICog
UHJvY2VlZGluZyBhIHN5bmNocm9uaXphdGlvbiBvZiBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgY2Fj
aGVzLiBXaGVuIGNoZWNraW5nCisgKiBvdXQgcGFnZSBjbHVzdGVyICh0aGUgcGhhc2UgYWJvdmUp
IHBhZ2VzIGFyZSBsb2NrZWQvZmx1c2hlZC91bmxvY2tlZAorICogb25lLWJ5LW9uZSBpbiBhc2Nl
bmRpbmcgb3JkZXIgb2YgdGhlaXIgaW5kZXhlcyB0byBjb250aWd1b3VzIHN0cmVhbSwgd2hpY2gK
KyAqIGlzIHN1cHBvc2VkIHRvIGJlIHRyYW5zZm9ybWVkIChjb21wcmVzc2VkLCBlbmNyeXB0ZWQp
LCBjaG9wcGVkIHVwIGludG8gaXRlbXMKKyAqIGFuZCBjb21taXR0ZWQgdG8gZGlzayBhcyBhIGRp
c2sgY2x1c3Rlci4KKyAqCisgKiAgICAgICAgICAgICAgNS4gTWFuYWdpbmcgcGFnZSByZWZlcmVu
Y2VzCisgKgorICogRXZlcnkgY2hlY2tlZCBpbiBwYWdlIGhhdmUgYSBzcGVjaWFsIGFkZGl0aW9u
YWwgImNvbnRyb2wiIHJlZmVyZW5jZSwKKyAqIHdoaWNoIGlzIGRyb3BwZWQgYXQgY2hlY2tvdXQu
IFdlIG5lZWQgdGhpcyB0byBhdm9pZCB1bmV4cGVjdGVkIGV2aWN0aW5nCisgKiBwYWdlcyBmcm9t
IG1lbW9yeSBiZWZvcmUgY2hlY2tvdXQuIENvbnRyb2wgcmVmZXJlbmNlcyBhcmUgbWFuYWdlZCBz
bworICogdGhleSBhcmUgbm90IGFjY3VtdWxhdGVkIHdpdGggZXZlcnkgY2hlY2tpbjoKKyAqCisg
KiAgICAgICAgICAgIDAKKyAqIGNoZWNraW4gLT4gMQorICogICAgICAgICAgICAwIC0+IGNoZWNr
b3V0CisgKiBjaGVja2luIC0+IDEKKyAqIGNoZWNraW4gLT4gMQorICogY2hlY2tpbiAtPiAxCisg
KiAgICAgICAgICAgIDAgLT4gY2hlY2tvdXQKKyAqICAgICAgICAgICAuLi4KKyAqCisgKiBFdmVy
eSBwYWdlIGNsdXN0ZXIgaGFzIGl0cyBvd24gdW5pcXVlICJjbHVzdGVyIGxvY2siLiBVcGRhdGUv
ZHJvcAorICogcmVmZXJlbmNlcyBhcmUgc2VyaWFsaXplZCB2aWEgdGhpcyBsb2NrLiBOdW1iZXIg
b2YgY2hlY2tlZCBpbiBjbHVzdGVyCisgKiBwYWdlcyBpcyBjYWxjdWxhdGVkIGJ5IGlfc2l6ZSB1
bmRlciBjbHVzdGVyIGxvY2suIEZpbGUgc2l6ZSBpcyB1cGRhdGVkCisgKiBhdCBldmVyeSBjaGVj
a2luIGFjdGlvbiBhbHNvIHVuZGVyIGNsdXN0ZXIgbG9jayAoZXhjZXB0IGNhc2VzIG9mCisgKiBh
cHBlbmRpbmcvdHJ1bmNhdGluZyBmYWtlIGxvZ2ljYWwgY2x1c3RlcnMpLgorICoKKyAqIFByb29m
IG9mIGNvcnJlY3RuZXNzOgorICoKKyAqIFNpbmNlIHdlIHVwZGF0ZSBmaWxlIHNpemUgdW5kZXIg
Y2x1c3RlciBsb2NrLCBpbiB0aGUgY2FzZSBvZiBub24tZmFrZQorICogbG9naWNhbCBjbHVzdGVy
IHdpdGggaXRzIGxvY2sgaGVsZCB3ZSBkbyBoYXZlIGV4cGVjdGVkIG51bWJlciBvZiBjaGVja2Vk
CisgKiBpbiBwYWdlcy4gT24gdGhlIG90aGVyIGhhbmQsIGFwcGVuZC90cnVuY2F0ZSBvZiBmYWtl
IGxvZ2ljYWwgY2x1c3RlcnMKKyAqIGRvZXNuJ3QgY2hhbmdlIG51bWJlciBvZiBjaGVja2VkIGlu
IHBhZ2VzIG9mIGFueSBjbHVzdGVyLgorICoKKyAqIE5PVEUtRURXQVJEOiBBcyBjbHVzdGVyIGxv
Y2sgd2UgdXNlIGd1YXJkIChzcGlubG9ja190KSBvZiBpdHMgam5vZGUuCisgKiBDdXJyZW50bHks
IEkgZG9uJ3Qgc2VlIGFueSByZWFzb24gdG8gY3JlYXRlIGEgc3BlY2lhbCBsb2NrIGZvciB0aG9z
ZQorICogbmVlZHMuCisgKi8KKworc3RhdGljIGlubGluZSB2b2lkIGxvY2tfY2x1c3Rlcihqbm9k
ZSAqIG5vZGUpCit7CisJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworfQorCitzdGF0aWMgaW5saW5l
IHZvaWQgdW5sb2NrX2NsdXN0ZXIoam5vZGUgKiBub2RlKQoreworCXNwaW5fdW5sb2NrX2pub2Rl
KG5vZGUpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgdW5sb2NrX2NsdXN0ZXJfdW5jYXB0dXJl
KGpub2RlICogbm9kZSkKK3sKKwl1bmNhcHR1cmVfY2x1c3Rlcl9qbm9kZShub2RlKTsKK30KKwor
LyogU2V0IG5ldyBmaWxlIHNpemUgYnkgd2luZG93LiBDbHVzdGVyIGxvY2sgaXMgcmVxdWlyZWQu
ICovCitzdGF0aWMgdm9pZCBjaGVja2luX2ZpbGVfc2l6ZShzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUg
KiBjbHVzdCwKKwkJCSAgICAgIHN0cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWxvZmZfdCBuZXdf
c2l6ZTsKKwlzdHJ1Y3QgcmVpc2VyNF9zbGlkZSAqIHdpbjsKKworCWFzc2VydCgiZWR3YXJkLTEx
ODEiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMTgyIiwgaW5vZGUgIT0gTlVM
TCk7CisJYXNzZXJ0KCJlZHdhcmQtMTQ3MyIsIGNsdXN0LT5wYWdlcyAhPSBOVUxMKTsKKwlhc3Nl
cnQoImVkd2FyZC0xNDc0IiwgY2x1c3QtPnBhZ2VzWzBdICE9IE5VTEwpOworCWFzc2VydCgiZWR3
YXJkLTE0NzUiLCBqcHJpdmF0ZShjbHVzdC0+cGFnZXNbMF0pICE9IE5VTEwpOworCWFzc2VydF9z
cGluX2xvY2tlZCgmKGpwcml2YXRlKGNsdXN0LT5wYWdlc1swXSktPmd1YXJkKSk7CisKKworCXdp
biA9IGNsdXN0LT53aW47CisJYXNzZXJ0KCJlZHdhcmQtMTE4MyIsIHdpbiAhPSBOVUxMKTsKKwor
CW5ld19zaXplID0gY2x1c3RfdG9fb2ZmKGNsdXN0LT5pbmRleCwgaW5vZGUpICsgd2luLT5vZmY7
CisKKwlzd2l0Y2ggKGNsdXN0LT5vcCkgeworCWNhc2UgTENfQVBQT1Y6CisJY2FzZSBMQ19FWFBB
TkQ6CisJCWlmIChuZXdfc2l6ZSArIHdpbi0+Y291bnQgPD0gaV9zaXplX3JlYWQoaW5vZGUpKQor
CQkJLyogb3ZlcndyaXRlIG9ubHkgKi8KKwkJCXJldHVybjsKKwkJbmV3X3NpemUgKz0gd2luLT5j
b3VudDsKKwkJYnJlYWs7CisJY2FzZSBMQ19TSFJJTks6CisJCWJyZWFrOworCWRlZmF1bHQ6CisJ
CWltcG9zc2libGUoImVkd2FyZC0xMTg0IiwgImJhZCBwYWdlIGNsdXN0ZXIgb3B0aW9uIik7CisJ
CWJyZWFrOworCX0KKwlpbm9kZV9jaGVja19zY2FsZV9ub2xvY2soaW5vZGUsIGlfc2l6ZV9yZWFk
KGlub2RlKSwgbmV3X3NpemUpOworCWlfc2l6ZV93cml0ZShpbm9kZSwgbmV3X3NpemUpOworCXJl
dHVybjsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGNoZWNraW5fY2x1c3Rlcl9zaXplKHN0cnVj
dCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJCQlzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sK
KwlpZiAoY2x1c3QtPndpbikKKwkJY2hlY2tpbl9maWxlX3NpemUoY2x1c3QsIGlub2RlKTsKK30K
Kworc3RhdGljIGludCBjaGVja2luX3BhZ2VfY2x1c3RlcihzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUg
KiBjbHVzdCwKKwkJCQlzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlpbnQgcmVzdWx0OworCWpu
b2RlICogbm9kZTsKKwlpbnQgb2xkX25ycGFnZXMgPSBjbHVzdC0+b2xkX25ycGFnZXM7CisJaW50
IG5ld19ucnBhZ2VzID0gZ2V0X25ld19ucnBhZ2VzKGNsdXN0KTsKKworCW5vZGUgPSBjbHVzdC0+
bm9kZTsKKworCWFzc2VydCgiZWR3YXJkLTIyMSIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJl
ZHdhcmQtOTcxIiwgY2x1c3QtPnJlc2VydmVkID09IDEpOworCWFzc2VydCgiZWR3YXJkLTEyNjMi
LAorCSAgICAgICBjbHVzdC0+cmVzZXJ2ZWRfcHJlcHBlZCA9PSBlc3RpbWF0ZV91cGRhdGVfY2x1
c3Rlcihpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTEyNjQiLCBjbHVzdC0+cmVzZXJ2ZWRfdW5w
cmVwcGVkID09IDApOworCisJaWYgKEpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSkgeworCQkv
KgorCQkgKiBwYWdlIGNsdXN0ZXIgd2FzIGNoZWNrZWQgaW4sIGJ1dCBub3QgeWV0CisJCSAqIGNo
ZWNrZWQgb3V0LCBzbyByZWxlYXNlIHJlbGF0ZWQgcmVzb3VyY2VzCisJCSAqLworCQlmcmVlX3Jl
c2VydmVkNGNsdXN0ZXIoaW5vZGUsIGNsdXN0LAorCQkJCSAgICAgIGVzdGltYXRlX3VwZGF0ZV9j
bHVzdGVyKGlub2RlKSk7CisJCV9fcHV0X3BhZ2VfY2x1c3RlcigwLCBjbHVzdC0+b2xkX25ycGFn
ZXMsCisJCQkJICAgY2x1c3QtPnBhZ2VzLCBpbm9kZSk7CisJfSBlbHNlIHsKKwkJcmVzdWx0ID0g
Y2FwdHVyZV9jbHVzdGVyX2pub2RlKG5vZGUpOworCQlpZiAodW5saWtlbHkocmVzdWx0KSkgewor
CQkJdW5sb2NrX2NsdXN0ZXIobm9kZSk7CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisJCWpub2Rl
X21ha2VfZGlydHlfbG9ja2VkKG5vZGUpOworCQljbHVzdC0+cmVzZXJ2ZWQgPSAwOworCX0KKwl1
bmxvY2tfY2x1c3Rlcihub2RlKTsKKworCWlmIChuZXdfbnJwYWdlcyA8IG9sZF9ucnBhZ2VzKSB7
CisJCS8qIHRydW5jYXRlID49IDEgY29tcGxldGUgcGFnZXMgKi8KKwkJX19wdXRfcGFnZV9jbHVz
dGVyKG5ld19ucnBhZ2VzLAorCQkJCSAgIG9sZF9ucnBhZ2VzIC0gbmV3X25ycGFnZXMsCisJCQkJ
ICAgY2x1c3QtPnBhZ2VzLCBpbm9kZSk7CisJCXRydW5jYXRlX3BhZ2VfY2x1c3Rlcl9yYW5nZShp
bm9kZSwKKwkJCQkJICAgIGNsdXN0LT5wYWdlcywgY2x1c3QtPmluZGV4LAorCQkJCQkgICAgbmV3
X25ycGFnZXMsCisJCQkJCSAgICBvbGRfbnJwYWdlcyAtIG5ld19ucnBhZ2VzLAorCQkJCQkgICAg
MCk7CisJfQorI2lmIFJFSVNFUjRfREVCVUcKKwljbHVzdC0+cmVzZXJ2ZWRfcHJlcHBlZCAtPSBl
c3RpbWF0ZV91cGRhdGVfY2x1c3Rlcihpbm9kZSk7CisjZW5kaWYKKwlyZXR1cm4gMDsKK30KKwor
LyogU3VibWl0IG1vZGlmaWNhdGlvbnMgb2YgYSBsb2dpY2FsIGNsdXN0ZXIgKi8KK3N0YXRpYyBp
bnQgY2hlY2tpbl9sb2dpY2FsX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3Qs
CisJCQkJICAgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlpbnQgcmVzdWx0ID0gMDsKKwlqbm9k
ZSAqIG5vZGU7CisKKwlub2RlID0gY2x1c3QtPm5vZGU7CisKKwlhc3NlcnQoImVkd2FyZC0xMDM1
Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMDI5IiwgY2x1c3QgIT0gTlVMTCk7
CisJYXNzZXJ0KCJlZHdhcmQtMTAzMCIsIGNsdXN0LT5yZXNlcnZlZCA9PSAxKTsKKwlhc3NlcnQo
ImVkd2FyZC0xMDMxIiwgY2x1c3QtPm5yX3BhZ2VzICE9IDApOworCWFzc2VydCgiZWR3YXJkLTEw
MzIiLCBjbHVzdC0+cGFnZXMgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTAzMyIsIGNsdXN0
LT5wYWdlc1swXSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xNDQ2Iiwgam5vZGVfaXNfY2x1
c3Rlcl9wYWdlKG5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0xNDc2Iiwgbm9kZSA9PSBqcHJpdmF0
ZShjbHVzdC0+cGFnZXNbMF0pKTsKKworCWxvY2tfY2x1c3Rlcihub2RlKTsKKwljaGVja2luX2Ns
dXN0ZXJfc2l6ZShjbHVzdCwgaW5vZGUpOworCS8qCisJICogdGhpcyB3aWxsIHVubG9jayB0aGUg
Y2x1c3RlcgorCSAqLworCXJlc3VsdCA9IGNoZWNraW5fcGFnZV9jbHVzdGVyKGNsdXN0LCBpbm9k
ZSk7CisJanB1dChub2RlKTsKKwljbHVzdC0+bm9kZSA9IE5VTEw7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworLyoKKyAqIFJldHJpZXZlIHNpemUgb2YgbG9naWNhbCBjbHVzdGVyIHRoYXQgd2FzIGNo
ZWNrZWQgaW4gYXQKKyAqIHRoZSBsYXRlc3QgbW9kaWZ5aW5nIHNlc3Npb24gKGNsdXN0ZXIgbG9j
ayBpcyByZXF1aXJlZCkKKyAqLworc3RhdGljIGlubGluZSB2b2lkIGNoZWNrb3V0X2NsdXN0ZXJf
c2l6ZShzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkJIHN0cnVjdCBpbm9kZSAq
IGlub2RlKQoreworCXN0cnVjdCB0Zm1fY2x1c3RlciAqdGMgPSAmY2x1c3QtPnRjOworCisJdGMt
PmxlbiA9IGxieXRlcyhjbHVzdC0+aW5kZXgsIGlub2RlKTsKKwlhc3NlcnQoImVkd2FyZC0xNDc4
IiwgdGMtPmxlbiAhPSAwKTsKK30KKworLyoKKyAqIFJldHJpZXZlIGEgcGFnZSBjbHVzdGVyIHdp
dGggdGhlIGxhdGVzdCBzdWJtaXR0ZWQgbW9kaWZpY2F0aW9ucworICogYW5kIGZsdXNoIGl0cyBw
YWdlcyB0byBwcmV2aW91c2x5IGFsbG9jYXRlZCBjb250aWd1b3VzIHN0cmVhbS4KKyAqLworc3Rh
dGljIHZvaWQgY2hlY2tvdXRfcGFnZV9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNs
dXN0LAorCQkJCSAgam5vZGUgKiBub2RlLCBzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlpbnQg
aTsKKwlpbnQgZm91bmQ7CisJaW50IHRvX3B1dDsKKwlwZ29mZl90IHBhZ2VfaW5kZXggPSBjbHVz
dF90b19wZyhjbHVzdC0+aW5kZXgsIGlub2RlKTsKKwlzdHJ1Y3QgdGZtX2NsdXN0ZXIgKnRjID0g
JmNsdXN0LT50YzsKKworCS8qIGZpbmQgYW5kIHB1dCBjaGVja2VkIGluIHBhZ2VzOiBjbHVzdGVy
IGlzIGxvY2tlZCwKKwkgKiBzbyB3ZSBtdXN0IGdldCBleHBlY3RlZCBudW1iZXIgKHRvX3B1dCkg
b2YgcGFnZXMKKwkgKi8KKwl0b19wdXQgPSBzaXplX2luX3BhZ2VzKGxieXRlcyhjbHVzdC0+aW5k
ZXgsIGlub2RlKSk7CisJZm91bmQgPSBmaW5kX2dldF9wYWdlcyhpbm9kZS0+aV9tYXBwaW5nLCAm
cGFnZV9pbmRleCwKKwkJCSAgICAgICB0b19wdXQsIGNsdXN0LT5wYWdlcyk7CisJQlVHX09OKGZv
dW5kICE9IHRvX3B1dCk7CisKKwlfX3B1dF9wYWdlX2NsdXN0ZXIoMCwgdG9fcHV0LCBjbHVzdC0+
cGFnZXMsIGlub2RlKTsKKwl1bmxvY2tfY2x1c3Rlcl91bmNhcHR1cmUobm9kZSk7CisKKwkvKiBG
bHVzaCBmb3VuZCBwYWdlcy4KKwkgKgorCSAqIE5vdGUsIHRoYXQgd2UgZG9uJ3QgZGlzYWJsZSBt
b2RpZmljYXRpb25zIHdoaWxlIGZsdXNoaW5nLAorCSAqIG1vcmVvdmVyLCBzb21lIGZvdW5kIHBh
Z2VzIGNhbiBiZSB0cnVuY2F0ZWQsIGFzIHdlIGhhdmUKKwkgKiByZWxlYXNlZCBjbHVzdGVyIGxv
Y2suCisJICovCisJZm9yIChpID0gMDsgaSA8IGZvdW5kOyBpKyspIHsKKwkJaW50IGluX3BhZ2U7
CisJCWNoYXIgKiBkYXRhOworCQlhc3NlcnQoImVkd2FyZC0xNDc5IiwKKwkJICAgICAgIGNsdXN0
LT5wYWdlc1tpXS0+aW5kZXggPT0gY2x1c3QtPnBhZ2VzWzBdLT5pbmRleCArIGkpOworCisJCWxv
Y2tfcGFnZShjbHVzdC0+cGFnZXNbaV0pOworCQlpZiAoIVBhZ2VVcHRvZGF0ZShjbHVzdC0+cGFn
ZXNbaV0pKSB7CisJCQkvKiBwYWdlIHdhcyB0cnVuY2F0ZWQgKi8KKwkJCWFzc2VydCgiZWR3YXJk
LTE0ODAiLAorCQkJICAgICAgIGlfc2l6ZV9yZWFkKGlub2RlKSA8PSBwYWdlX29mZnNldChjbHVz
dC0+cGFnZXNbaV0pKTsKKwkJCWFzc2VydCgiZWR3YXJkLTE0ODEiLAorCQkJICAgICAgIGNsdXN0
LT5wYWdlc1tpXS0+bWFwcGluZyAhPSBpbm9kZS0+aV9tYXBwaW5nKTsKKwkJCXVubG9ja19wYWdl
KGNsdXN0LT5wYWdlc1tpXSk7CisJCQlicmVhazsKKwkJfQorCQkvKiBVcGRhdGUgdGhlIG51bWJl
ciBvZiBieXRlcyBpbiB0aGUgbG9naWNhbCBjbHVzdGVyLAorCQkgKiBhcyBpdCBjb3VsZCBiZSBw
YXJ0aWFsbHkgdHJ1bmNhdGVkLiBOb3RlLCB0aGF0IG9ubHkKKwkJICogcGFydGlhbCB0cnVuY2F0
ZSBpcyBwb3NzaWJsZSAoY29tcGxldGUgdHJ1bmNhdGUgY2FuCisJCSAqIG5vdCBnbyBoZXJlLCBh
cyBpdCBpcyBwZXJmb3JtZWQgdmlhIC0+a2lsbF9ob29rKCkKKyAgICAgICAgICAgICAgICAgKiBj
YWxsZWQgYnkgY3V0X2ZpbGVfaXRlbXMoKSwgYW5kIHRoZSBsYXN0IG9uZSBtdXN0CisgICAgICAg
ICAgICAgICAgICogd2FpdCBmb3Igem5vZGUgbG9ja2VkIHdpdGggcGFyZW50IGNvb3JkKS4KKwkJ
ICovCisJCWNoZWNrb3V0X2NsdXN0ZXJfc2l6ZShjbHVzdCwgaW5vZGUpOworCisJCS8qIHRoaXMg
Y2FuIGJlIHplcm8sIGFzIG5ldyBmaWxlIHNpemUgaXMKKwkJICAgY2hlY2tlZCBpbiBiZWZvcmUg
dHJ1bmNhdGluZyBwYWdlcyAqLworCQlpbl9wYWdlID0gX19tYnAodGMtPmxlbiwgaSk7CisKKwkJ
ZGF0YSA9IGttYXBfYXRvbWljKGNsdXN0LT5wYWdlc1tpXSk7CisJCW1lbWNweSh0Zm1fc3RyZWFt
X2RhdGEodGMsIElOUFVUX1NUUkVBTSkgKyBwZ190b19vZmYoaSksCisJCSAgICAgICBkYXRhLCBp
bl9wYWdlKTsKKwkJa3VubWFwX2F0b21pYyhkYXRhKTsKKwkJLyoKKwkJICogbW9kaWZpY2F0aW9u
cyBoYXZlIGJlZW4gY2hlY2tlZCBvdXQgYW5kIHdpbGwgYmUKKwkJICogY29tbWl0dGVkIGxhdGVy
LiBBbnl3YXksIHRoZSBkaXJ0eSBzdGF0dXMgb2YgdGhlCisJCSAqIHBhZ2UgaXMgbm8gbG9uZ2Vy
IHJlbGV2YW50LiBIb3dldmVyLCB0aGUgdXB0b2RhdGUKKwkJICogc3RhdHVzIG9mIHRoZSBwYWdl
IGlzIHN0aWxsIHJlbGV2YW50IQorCQkgKi8KKwkJaWYgKFBhZ2VEaXJ0eShjbHVzdC0+cGFnZXNb
aV0pKQorCQkJY2FuY2VsX2RpcnR5X3BhZ2UoY2x1c3QtPnBhZ2VzW2ldKTsKKworCQl1bmxvY2tf
cGFnZShjbHVzdC0+cGFnZXNbaV0pOworCisJCWlmIChpbl9wYWdlIDwgUEFHRV9TSVpFKQorCQkJ
LyogZW5kIG9mIHRoZSBmaWxlICovCisJCQlicmVhazsKKwl9CisJcHV0X2ZvdW5kX3BhZ2VzKGNs
dXN0LT5wYWdlcywgZm91bmQpOyAvKiBmaW5kX2dldF9wYWdlcyAqLworCXRjLT5sc2l6ZSA9IHRj
LT5sZW47CisJcmV0dXJuOworfQorCisvKiBDaGVjayBvdXQgbW9kaWZpY2F0aW9ucyBvZiBhIGxv
Z2ljYWwgY2x1c3RlciAqLworaW50IGNoZWNrb3V0X2xvZ2ljYWxfY2x1c3RlcihzdHJ1Y3QgY2x1
c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCSAgICAgam5vZGUgKiBub2RlLCBzdHJ1Y3QgaW5vZGUg
Kmlub2RlKQoreworCWludCByZXN1bHQ7CisJc3RydWN0IHRmbV9jbHVzdGVyICp0YyA9ICZjbHVz
dC0+dGM7CisKKwlhc3NlcnQoImVkd2FyZC05ODAiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTIzNiIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTIzNyIsIGNsdXN0
ICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTI0MCIsICFjbHVzdC0+d2luKTsKKwlhc3NlcnQo
ImVkd2FyZC0yNDEiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCWFzc2VydCgiZWR3YXJkLTcx
OCIsIGNyeXB0Y29tcHJlc3NfaW5vZGVfb2soaW5vZGUpKTsKKworCXJlc3VsdCA9IGdyYWJfdGZt
X3N0cmVhbShpbm9kZSwgdGMsIElOUFVUX1NUUkVBTSk7CisJaWYgKHJlc3VsdCkgeworCQl3YXJu
aW5nKCJlZHdhcmQtMTQzMCIsICJhbGxvYyBzdHJlYW0gZmFpbGVkIHdpdGggcmV0PSVkIiwKKwkJ
CXJlc3VsdCk7CisJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwl9CisJbG9ja19jbHVzdGVy
KG5vZGUpOworCisgCWlmICh1bmxpa2VseSghSkZfSVNTRVQobm9kZSwgSk5PREVfRElSVFkpKSkg
eworCQkvKiByYWNlIHdpdGggYW5vdGhlciBmbHVzaCAqLworIAkJd2FybmluZygiZWR3YXJkLTk4
MiIsCisJCQkiY2hlY2tpbmcgb3V0IGxvZ2ljYWwgY2x1c3RlciAlbHUgb2YgaW5vZGUgJWxsdTog
IgorCQkJImpub2RlIGlzIG5vdCBkaXJ0eSIsIGNsdXN0LT5pbmRleCwKKwkJCSh1bnNpZ25lZCBs
b25nIGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSkpOworIAkJdW5sb2NrX2NsdXN0ZXIobm9kZSk7
CisgCQlyZXR1cm4gUkVURVJSKC1FX1JFUEVBVCk7CisgCX0KKwljbHVzdGVyX3Jlc2VydmVkMmdy
YWJiZWQoZXN0aW1hdGVfdXBkYXRlX2NsdXN0ZXIoaW5vZGUpKTsKKworCS8qIHRoaXMgd2lsbCB1
bmxvY2sgY2x1c3RlciAqLworCWNoZWNrb3V0X3BhZ2VfY2x1c3RlcihjbHVzdCwgbm9kZSwgaW5v
ZGUpOworCXJldHVybiAwOworfQorCisvKiBzZXQgaGludCBmb3IgdGhlIGNsdXN0ZXIgb2YgdGhl
IGluZGV4IEBpbmRleCAqLworc3RhdGljIHZvaWQgc2V0X2hpbnRfY2x1c3RlcihzdHJ1Y3QgaW5v
ZGUgKmlub2RlLCBoaW50X3QgKiBoaW50LAorCQkJICAgICBjbG9mZl90IGluZGV4LCB6bm9kZV9s
b2NrX21vZGUgbW9kZSkKK3sKKwlyZWlzZXI0X2tleSBrZXk7CisJYXNzZXJ0KCJlZHdhcmQtNzIy
IiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTcyMyIs
CisJICAgICAgIGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKSA9PQorCSAgICAgICBmaWxlX3BsdWdp
bl9ieV9pZChDUllQVENPTVBSRVNTX0ZJTEVfUExVR0lOX0lEKSk7CisKKwlpbm9kZV9maWxlX3Bs
dWdpbihpbm9kZSktPmtleV9ieV9pbm9kZShpbm9kZSwKKwkJCQkJICAgICAgIGNsdXN0X3RvX29m
ZihpbmRleCwgaW5vZGUpLAorCQkJCQkgICAgICAgJmtleSk7CisKKwlyZWlzZXI0X3NlYWxfaW5p
dCgmaGludC0+c2VhbCwgJmhpbnQtPmV4dF9jb29yZC5jb29yZCwgJmtleSk7CisJaGludC0+b2Zm
c2V0ID0gZ2V0X2tleV9vZmZzZXQoJmtleSk7CisJaGludC0+bW9kZSA9IG1vZGU7Cit9CisKK3Zv
aWQgaW52YWxpZGF0ZV9oaW50X2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3Qp
Cit7CisJYXNzZXJ0KCJlZHdhcmQtMTI5MSIsIGNsdXN0ICE9IE5VTEwpOworCWFzc2VydCgiZWR3
YXJkLTEyOTIiLCBjbHVzdC0+aGludCAhPSBOVUxMKTsKKworCWRvbmVfbGgoJmNsdXN0LT5oaW50
LT5saCk7CisJaGludF9jbHJfdmFsaWQoY2x1c3QtPmhpbnQpOworfQorCitzdGF0aWMgdm9pZCBw
dXRfaGludF9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJICAgICBz
dHJ1Y3QgaW5vZGUgKmlub2RlLCB6bm9kZV9sb2NrX21vZGUgbW9kZSkKK3sKKwlhc3NlcnQoImVk
d2FyZC0xMjg2IiwgY2x1c3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTI4NyIsIGNsdXN0
LT5oaW50ICE9IE5VTEwpOworCisJc2V0X2hpbnRfY2x1c3Rlcihpbm9kZSwgY2x1c3QtPmhpbnQs
IGNsdXN0LT5pbmRleCArIDEsIG1vZGUpOworCWludmFsaWRhdGVfaGludF9jbHVzdGVyKGNsdXN0
KTsKK30KKworc3RhdGljIGludCBiYWxhbmNlX2RpcnR5X3BhZ2VfY2x1c3RlcihzdHJ1Y3QgY2x1
c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkgICAgICBzdHJ1Y3QgaW5vZGUgKmlub2RlLCBsb2Zm
X3Qgb2ZmLAorCQkJCSAgICAgIGxvZmZfdCB0b19maWxlLAorCQkJCSAgICAgIGludCBucl9kaXJ0
aWVkKQoreworCWludCByZXN1bHQ7CisJc3RydWN0IGNyeXB0Y29tcHJlc3NfaW5mbyAqIGluZm87
CisKKwlhc3NlcnQoImVkd2FyZC03MjQiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2Fy
ZC03MjUiLCBjcnlwdGNvbXByZXNzX2lub2RlX29rKGlub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQt
MTU0NyIsIG5yX2RpcnRpZWQgPD0gY2x1c3Rlcl9ucnBhZ2VzKGlub2RlKSk7CisKKwkvKiBzZXQg
bmV4dCB3aW5kb3cgcGFyYW1zICovCisJbW92ZV91cGRhdGVfd2luZG93KGlub2RlLCBjbHVzdCwg
b2ZmLCB0b19maWxlKTsKKworCXJlc3VsdCA9IHVwZGF0ZV9zZF9jcnlwdGNvbXByZXNzKGlub2Rl
KTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCWFzc2VydCgiZWR3YXJkLTcyNiIs
IGNsdXN0LT5oaW50LT5saC5vd25lciA9PSBOVUxMKTsKKwlpbmZvID0gY3J5cHRjb21wcmVzc19p
bm9kZV9kYXRhKGlub2RlKTsKKworCWlmIChucl9kaXJ0aWVkID09IDApCisJCXJldHVybiAwOwor
CW11dGV4X3VubG9jaygmaW5mby0+Y2hlY2tpbl9tdXRleCk7CisJcmVpc2VyNF90aHJvdHRsZV93
cml0ZShpbm9kZSk7CisJbXV0ZXhfbG9jaygmaW5mby0+Y2hlY2tpbl9tdXRleCk7CisJcmV0dXJu
IDA7Cit9CisKKy8qCisgKiBDaGVjayBpbiBwYXJ0IG9mIGEgaG9sZSB3aXRoaW4gYSBsb2dpY2Fs
IGNsdXN0ZXIKKyAqLworc3RhdGljIGludCB3cml0ZV9ob2xlKHN0cnVjdCBpbm9kZSAqaW5vZGUs
IHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkgICAgICBsb2ZmX3QgZmlsZV9vZmYs
IGxvZmZfdCB0b19maWxlKQoreworCWludCByZXN1bHQgPSAwOworCXVuc2lnbmVkIGNsX29mZiwg
Y2xfY291bnQgPSAwOworCXVuc2lnbmVkIHRvX3BnLCBwZ19vZmY7CisJc3RydWN0IHJlaXNlcjRf
c2xpZGUgKiB3aW47CisKKwlhc3NlcnQoImVkd2FyZC0xOTAiLCBjbHVzdCAhPSBOVUxMKTsKKwlh
c3NlcnQoImVkd2FyZC0xMDY5IiwgY2x1c3QtPndpbiAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2Fy
ZC0xOTEiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC03MjciLCBjcnlwdGNvbXBy
ZXNzX2lub2RlX29rKGlub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTE3MSIsIGNsdXN0LT5kc3Rh
dCAhPSBJTlZBTF9ESVNLX0NMVVNURVIpOworCWFzc2VydCgiZWR3YXJkLTExNTQiLAorCSAgICAg
ICBlcmdvKGNsdXN0LT5kc3RhdCAhPSBGQUtFX0RJU0tfQ0xVU1RFUiwgY2x1c3QtPnJlc2VydmVk
ID09IDEpKTsKKworCXdpbiA9IGNsdXN0LT53aW47CisKKwlhc3NlcnQoImVkd2FyZC0xMDcwIiwg
d2luICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTIwMSIsIHdpbi0+c3RhdCA9PSBIT0xFX1dJ
TkRPVyk7CisJYXNzZXJ0KCJlZHdhcmQtMTkyIiwgY2x1c3Rlcl9vayhjbHVzdCwgaW5vZGUpKTsK
KworCWlmICh3aW4tPm9mZiA9PSAwICYmIHdpbi0+Y291bnQgPT0gaW5vZGVfY2x1c3Rlcl9zaXpl
KGlub2RlKSkgeworCQkvKgorCQkgKiBUaGlzIHBhcnQgb2YgdGhlIGhvbGUgb2NjdXBpZXMgdGhl
IHdob2xlIGxvZ2ljYWwKKwkJICogY2x1c3Rlciwgc28gaXQgd29uJ3QgYmUgcmVwcmVzZW50ZWQg
YnkgYW55IGl0ZW1zLgorCQkgKiBOb3RoaW5nIHRvIHN1Ym1pdC4KKwkJICovCisJCW1vdmVfdXBk
YXRlX3dpbmRvdyhpbm9kZSwgY2x1c3QsIGZpbGVfb2ZmLCB0b19maWxlKTsKKwkJcmV0dXJuIDA7
CisJfQorCS8qCisJICogVGhpcyBwYXJ0IG9mIHRoZSBob2xlIHN0YXJ0cyBub3QgYXQgbG9naWNh
bCBjbHVzdGVyCisJICogYm91bmRhcnksIHNvIGl0IGhhcyB0byBiZSBjb252ZXJ0ZWQgdG8gemVy
b3MgYW5kIHdyaXR0ZW4gdG8gZGlzaworCSAqLworCWNsX2NvdW50ID0gd2luLT5jb3VudDsJLyog
bnVtYmVyIG9mIHplcm9lcyB0byB3cml0ZSAqLworCWNsX29mZiA9IHdpbi0+b2ZmOworCXBnX29m
ZiA9IG9mZl90b19wZ29mZih3aW4tPm9mZik7CisKKwl3aGlsZSAoY2xfY291bnQpIHsKKwkJc3Ry
dWN0IHBhZ2UgKnBhZ2U7CisJCXBhZ2UgPSBjbHVzdC0+cGFnZXNbb2ZmX3RvX3BnKGNsX29mZild
OworCisJCWFzc2VydCgiZWR3YXJkLTI4NCIsIHBhZ2UgIT0gTlVMTCk7CisKKwkJdG9fcGcgPSBt
aW4oKHR5cGVvZihwZ19vZmYpKVBBR0VfU0laRSAtIHBnX29mZiwgY2xfY291bnQpOworCQlsb2Nr
X3BhZ2UocGFnZSk7CisJCXplcm9fdXNlcihwYWdlLCBwZ19vZmYsIHRvX3BnKTsKKwkJU2V0UGFn
ZVVwdG9kYXRlKHBhZ2UpOworCQlzZXRfcGFnZV9kaXJ0eV9ub3RhZyhwYWdlKTsKKwkJbWFya19w
YWdlX2FjY2Vzc2VkKHBhZ2UpOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKworCQljbF9vZmYgKz0g
dG9fcGc7CisJCWNsX2NvdW50IC09IHRvX3BnOworCQlwZ19vZmYgPSAwOworCX0KKwlpZiAod2lu
LT5kZWx0YSA9PSAwKSB7CisJCS8qIG9ubHkgemVyb2VzIGluIHRoaXMgd2luZG93LCB0cnkgdG8g
Y2FwdHVyZQorCQkgKi8KKwkJcmVzdWx0ID0gY2hlY2tpbl9sb2dpY2FsX2NsdXN0ZXIoY2x1c3Qs
IGlub2RlKTsKKwkJaWYgKHJlc3VsdCkKKwkJCXJldHVybiByZXN1bHQ7CisJCXB1dF9oaW50X2Ns
dXN0ZXIoY2x1c3QsIGlub2RlLCBaTk9ERV9XUklURV9MT0NLKTsKKwkJcmVzdWx0ID0gYmFsYW5j
ZV9kaXJ0eV9wYWdlX2NsdXN0ZXIoY2x1c3QsCisJCQkJCQkgICAgaW5vZGUsIGZpbGVfb2ZmLCB0
b19maWxlLAorCQkJCQkJICAgIHdpbl9jb3VudF90b19ucnBhZ2VzKHdpbikpOworCX0gZWxzZQor
CQltb3ZlX3VwZGF0ZV93aW5kb3coaW5vZGUsIGNsdXN0LCBmaWxlX29mZiwgdG9fZmlsZSk7CisJ
cmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAgVGhlIG1haW4gZGlzayBzZWFyY2ggcHJvY2VkdXJl
IGZvciBjcnlwdGNvbXByZXNzIHBsdWdpbiwgd2hpY2gKKyAgLiBzY2FucyBhbGwgaXRlbXMgb2Yg
ZGlzayBjbHVzdGVyIHdpdGggdGhlIGxvY2sgbW9kZSBAbW9kZQorICAuIG1heWJlIHJlYWRzIGVh
Y2ggb25lIChpZiBAcmVhZCkKKyAgLiBtYXliZSBtYWtlcyBpdHMgem5vZGUgZGlydHkgKGlmIHdy
aXRlIGxvY2sgbW9kZSB3YXMgc3BlY2lmaWVkKQorCisgIE5PVEUtRURXQVJEOiBDYWxsZXJzIHNo
b3VsZCBoYW5kbGUgdGhlIGNhc2Ugd2hlbiBkaXNrIGNsdXN0ZXIKKyAgaXMgaW5jb21wbGV0ZSAo
LUVJTykKKyovCitpbnQgZmluZF9kaXNrX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICog
Y2x1c3QsCisJCSAgICAgIHN0cnVjdCBpbm9kZSAqaW5vZGUsIGludCByZWFkLCB6bm9kZV9sb2Nr
X21vZGUgbW9kZSkKK3sKKwlmbG93X3QgZjsKKwloaW50X3QgKmhpbnQ7CisJaW50IHJlc3VsdCA9
IDA7CisJaW50IHdhc19ncmFiYmVkOworCXJhX2luZm9fdCByYV9pbmZvOworCWZpbGVfcGx1Z2lu
ICpmcGx1ZzsKKwlpdGVtX3BsdWdpbiAqaXBsdWc7CisJc3RydWN0IHRmbV9jbHVzdGVyICp0YzsK
KwlzdHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICogaW5mbzsKKworCWFzc2VydCgiZWR3YXJkLTEz
OCIsIGNsdXN0ICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTcyOCIsIGNsdXN0LT5oaW50ICE9
IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTIyNiIsIHJlaXNlcjRfc2NoZWR1bGFibGUoKSk7CisJ
YXNzZXJ0KCJlZHdhcmQtMTM3IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNzI5
IiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCisJaGludCA9IGNsdXN0LT5oaW50
OworCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpOworCXdhc19ncmFiYmVkID0gZ2V0
X2N1cnJlbnRfY29udGV4dCgpLT5ncmFiYmVkX2Jsb2NrczsKKwlpbmZvID0gY3J5cHRjb21wcmVz
c19pbm9kZV9kYXRhKGlub2RlKTsKKwl0YyA9ICZjbHVzdC0+dGM7CisKKwlhc3NlcnQoImVkd2Fy
ZC00NjIiLCAhdGZtX2NsdXN0ZXJfaXNfdXB0b2RhdGUodGMpKTsKKwlhc3NlcnQoImVkd2FyZC00
NjEiLCBlcmdvKHJlYWQsIHRmbV9zdHJlYW1faXNfc2V0KHRjLCBJTlBVVF9TVFJFQU0pKSk7CisK
KwlkY2x1c3RfaW5pdF9leHRlbnNpb24oaGludCk7CisKKwkvKiBzZXQga2V5IG9mIHRoZSBmaXJz
dCBkaXNrIGNsdXN0ZXIgaXRlbSAqLworCWZwbHVnLT5mbG93X2J5X2lub2RlKGlub2RlLAorCQkJ
ICAgICAocmVhZCA/IChjaGFyIF9fdXNlciAqKXRmbV9zdHJlYW1fZGF0YSh0YywgSU5QVVRfU1RS
RUFNKSA6IE5VTEwpLAorCQkJICAgICAwIC8qIGtlcm5lbCBzcGFjZSAqLyAsCisJCQkgICAgIGlu
b2RlX3NjYWxlZF9jbHVzdGVyX3NpemUoaW5vZGUpLAorCQkJICAgICBjbHVzdF90b19vZmYoY2x1
c3QtPmluZGV4LCBpbm9kZSksIFJFQURfT1AsICZmKTsKKwlpZiAobW9kZSA9PSBaTk9ERV9XUklU
RV9MT0NLKSB7CisJCS8qIHJlc2VydmUgZm9yIGZsdXNoIHRvIG1ha2UgZGlydHkgYWxsIHRoZSBs
ZWFmIG5vZGVzCisJCSAgIHdoaWNoIGNvbnRhaW4gZGlzayBjbHVzdGVyICovCisJCXJlc3VsdCA9
CisJCSAgICByZWlzZXI0X2dyYWJfc3BhY2VfZm9yY2UoZXN0aW1hdGVfZGlydHlfY2x1c3Rlcihp
bm9kZSksCisJCQkJCSAgICAgQkFfQ0FOX0NPTU1JVCk7CisJCWlmIChyZXN1bHQpCisJCQlnb3Rv
IG91dDsKKwl9CisKKwlyYV9pbmZvLmtleV90b19zdG9wID0gZi5rZXk7CisJc2V0X2tleV9vZmZz
ZXQoJnJhX2luZm8ua2V5X3RvX3N0b3AsIGdldF9rZXlfb2Zmc2V0KHJlaXNlcjRfbWF4X2tleSgp
KSk7CisKKwl3aGlsZSAoZi5sZW5ndGgpIHsKKwkJcmVzdWx0ID0gZmluZF9jbHVzdGVyX2l0ZW0o
aGludCwgJmYua2V5LCBtb2RlLAorCQkJCQkgICBOVUxMLCBGSU5EX0VYQUNULAorCQkJCQkgICAo
bW9kZSA9PSBaTk9ERV9XUklURV9MT0NLID8KKwkJCQkJICAgIENCS19GT1JfSU5TRVJUIDogMCkp
OworCQlzd2l0Y2ggKHJlc3VsdCkgeworCQljYXNlIENCS19DT09SRF9OT1RGT1VORDoKKwkJCXJl
c3VsdCA9IDA7CisJCQlpZiAoaW5vZGVfc2NhbGVkX29mZnNldAorCQkJICAgIChpbm9kZSwgY2x1
c3RfdG9fb2ZmKGNsdXN0LT5pbmRleCwgaW5vZGUpKSA9PQorCQkJICAgIGdldF9rZXlfb2Zmc2V0
KCZmLmtleSkpIHsKKwkJCQkvKiBmaXJzdCBpdGVtIG5vdCBmb3VuZCwgdGhpcyBpcyB0cmVhdGVk
CisJCQkJICAgYXMgZGlzayBjbHVzdGVyIGlzIGFic2VudCAqLworCQkJCWNsdXN0LT5kc3RhdCA9
IEZBS0VfRElTS19DTFVTVEVSOworCQkJCWdvdG8gb3V0OworCQkJfQorCQkJLyogd2UgYXJlIG91
dHNpZGUgdGhlIGNsdXN0ZXIsIHN0b3Agc2VhcmNoIGhlcmUgKi8KKwkJCWFzc2VydCgiZWR3YXJk
LTE0NiIsCisJCQkgICAgICAgZi5sZW5ndGggIT0gaW5vZGVfc2NhbGVkX2NsdXN0ZXJfc2l6ZShp
bm9kZSkpOworCQkJZ290byBvazsKKwkJY2FzZSBDQktfQ09PUkRfRk9VTkQ6CisJCQlhc3NlcnQo
ImVkd2FyZC0xNDgiLAorCQkJICAgICAgIGhpbnQtPmV4dF9jb29yZC5jb29yZC5iZXR3ZWVuID09
IEFUX1VOSVQpOworCQkJYXNzZXJ0KCJlZHdhcmQtNDYwIiwKKwkJCSAgICAgICBoaW50LT5leHRf
Y29vcmQuY29vcmQudW5pdF9wb3MgPT0gMCk7CisKKwkJCWNvb3JkX2NsZWFyX2lwbHVnKCZoaW50
LT5leHRfY29vcmQuY29vcmQpOworCQkJcmVzdWx0ID0gemxvYWRfcmEoaGludC0+ZXh0X2Nvb3Jk
LmNvb3JkLm5vZGUsICZyYV9pbmZvKTsKKwkJCWlmICh1bmxpa2VseShyZXN1bHQpKQorCQkJCWdv
dG8gb3V0OworCQkJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZCgmaGludC0+ZXh0X2Nvb3Jk
LmNvb3JkKTsKKwkJCWFzc2VydCgiZWR3YXJkLTE0NyIsCisJCQkgICAgICAgaXRlbV9pZF9ieV9j
b29yZCgmaGludC0+ZXh0X2Nvb3JkLmNvb3JkKSA9PQorCQkJICAgICAgIENUQUlMX0lEKTsKKwor
CQkJcmVzdWx0ID0gaXBsdWctPnMuZmlsZS5yZWFkKE5VTEwsICZmLCBoaW50KTsKKwkJCWlmIChy
ZXN1bHQpIHsKKwkJCQl6cmVsc2UoaGludC0+ZXh0X2Nvb3JkLmNvb3JkLm5vZGUpOworCQkJCWdv
dG8gb3V0OworCQkJfQorCQkJaWYgKG1vZGUgPT0gWk5PREVfV1JJVEVfTE9DSykgeworCQkJCS8q
IERvbid0IG1ha2UgZGlydHkgbW9yZSBub2RlcyB0aGVuIGl0IHdhcworCQkJCSAgIGVzdGltYXRl
ZCAoc2VlIGNvbW1lbnRzIGJlZm9yZQorCQkJCSAgIGVzdGltYXRlX2RpcnR5X2NsdXN0ZXIpLiBN
aXNzZWQgbm9kZXMgd2lsbCBiZQorCQkJCSAgIHJlYWQgdXAgaW4gZmx1c2ggdGltZSBpZiB0aGV5
IGFyZSBldmljdGVkIGZyb20KKwkJCQkgICBtZW1vcnkgKi8KKwkJCQlpZiAoZGNsdXN0X2dldF9l
eHRlbnNpb25fbmNvdW50KGhpbnQpIDw9CisJCQkJICAgIGVzdGltYXRlX2RpcnR5X2NsdXN0ZXIo
aW5vZGUpKQorCQkJCSAgIHpub2RlX21ha2VfZGlydHkoaGludC0+ZXh0X2Nvb3JkLmNvb3JkLm5v
ZGUpOworCisJCQkJem5vZGVfc2V0X2NvbnZlcnRpYmxlKGhpbnQtPmV4dF9jb29yZC5jb29yZC4K
KwkJCQkJCSAgICAgIG5vZGUpOworCQkJfQorCQkJenJlbHNlKGhpbnQtPmV4dF9jb29yZC5jb29y
ZC5ub2RlKTsKKwkJCWJyZWFrOworCQlkZWZhdWx0OgorCQkJZ290byBvdXQ7CisJCX0KKwl9Cisg
b2s6CisJLyogYXQgbGVhc3Qgb25lIGl0ZW0gd2FzIGZvdW5kICAqLworCS8qIE5PVEUtRURXQVJE
OiBDYWxsZXJzIHNob3VsZCBoYW5kbGUgdGhlIGNhc2UKKwkgICB3aGVuIGRpc2sgY2x1c3RlciBp
cyBpbmNvbXBsZXRlICgtRUlPKSAqLworCXRjLT5sZW4gPSBpbm9kZV9zY2FsZWRfY2x1c3Rlcl9z
aXplKGlub2RlKSAtIGYubGVuZ3RoOworCXRjLT5sc2l6ZSA9IGxieXRlcyhjbHVzdC0+aW5kZXgs
IGlub2RlKTsKKwlhc3NlcnQoImVkd2FyZC0xMTk2IiwgdGMtPmxlbiA+IDApOworCWFzc2VydCgi
ZWR3YXJkLTE0MDYiLCB0Yy0+bHNpemUgPiAwKTsKKworCWlmIChoaW50X2lzX3VucHJlcHBlZF9k
Y2x1c3QoY2x1c3QtPmhpbnQpKSB7CisJCWNsdXN0LT5kc3RhdCA9IFVOUFJfRElTS19DTFVTVEVS
OworCX0gZWxzZSBpZiAoY2x1c3QtPmluZGV4ID09IGluZm8tPnRydW5jX2luZGV4KSB7CisJCWNs
dXN0LT5kc3RhdCA9IFRSTkNfRElTS19DTFVTVEVSOworCX0gZWxzZSB7CisJCWNsdXN0LT5kc3Rh
dCA9IFBSRVBfRElTS19DTFVTVEVSOworCQlkY2x1c3Rfc2V0X2V4dGVuc2lvbl9kc2l6ZShjbHVz
dC0+aGludCwgdGMtPmxlbik7CisJfQorIG91dDoKKwlhc3NlcnQoImVkd2FyZC0xMzM5IiwKKwkg
ICAgICAgZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5ncmFiYmVkX2Jsb2NrcyA+PSB3YXNfZ3JhYmJl
ZCk7CisJZ3JhYmJlZDJmcmVlKGdldF9jdXJyZW50X2NvbnRleHQoKSwKKwkJICAgICBnZXRfY3Vy
cmVudF9zdXBlcl9wcml2YXRlKCksCisJCSAgICAgZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5ncmFi
YmVkX2Jsb2NrcyAtIHdhc19ncmFiYmVkKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitpbnQgZ2V0
X2Rpc2tfY2x1c3Rlcl9sb2NrZWQoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsIHN0cnVj
dCBpbm9kZSAqaW5vZGUsCisJCQkgICAgem5vZGVfbG9ja19tb2RlIGxvY2tfbW9kZSkKK3sKKwly
ZWlzZXI0X2tleSBrZXk7CisJcmFfaW5mb190IHJhX2luZm87CisKKwlhc3NlcnQoImVkd2FyZC03
MzAiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCWFzc2VydCgiZWR3YXJkLTczMSIsIGNsdXN0
ICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTczMiIsIGlub2RlICE9IE5VTEwpOworCisJaWYg
KGhpbnRfaXNfdmFsaWQoY2x1c3QtPmhpbnQpKSB7CisJCWFzc2VydCgiZWR3YXJkLTEyOTMiLCBj
bHVzdC0+ZHN0YXQgIT0gSU5WQUxfRElTS19DTFVTVEVSKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTI5
NCIsCisJCSAgICAgICB6bm9kZV9pc193cml0ZV9sb2NrZWQoY2x1c3QtPmhpbnQtPmxoLm5vZGUp
KTsKKwkJLyogYWxyZWFkeSBoYXZlIGEgdmFsaWQgbG9ja2VkIHBvc2l0aW9uICovCisJCXJldHVy
biAoY2x1c3QtPmRzdGF0ID09CisJCQlGQUtFX0RJU0tfQ0xVU1RFUiA/IENCS19DT09SRF9OT1RG
T1VORCA6CisJCQlDQktfQ09PUkRfRk9VTkQpOworCX0KKwlrZXlfYnlfaW5vZGVfY3J5cHRjb21w
cmVzcyhpbm9kZSwgY2x1c3RfdG9fb2ZmKGNsdXN0LT5pbmRleCwgaW5vZGUpLAorCQkJCSAgICZr
ZXkpOworCXJhX2luZm8ua2V5X3RvX3N0b3AgPSBrZXk7CisJc2V0X2tleV9vZmZzZXQoJnJhX2lu
Zm8ua2V5X3RvX3N0b3AsIGdldF9rZXlfb2Zmc2V0KHJlaXNlcjRfbWF4X2tleSgpKSk7CisKKwly
ZXR1cm4gZmluZF9jbHVzdGVyX2l0ZW0oY2x1c3QtPmhpbnQsICZrZXksIGxvY2tfbW9kZSwgTlVM
TCwgRklORF9FWEFDVCwKKwkJCQkgQ0JLX0ZPUl9JTlNFUlQpOworfQorCisvKiBSZWFkIG5lZWRl
ZCBjbHVzdGVyIHBhZ2VzIGJlZm9yZSBtb2RpZnlpbmcuCisgICBJZiBzdWNjZXNzLCBAY2x1c3Qt
PmhpbnQgY29udGFpbnMgbG9ja2VkIHBvc2l0aW9uIGluIHRoZSB0cmVlLgorICAgQWxzbzoKKyAg
IC4gZmluZCBhbmQgc2V0IGRpc2sgY2x1c3RlciBzdGF0ZQorICAgLiBtYWtlIGRpc2sgY2x1c3Rl
ciBkaXJ0eSBpZiBpdHMgc3RhdGUgaXMgbm90IEZBS0VfRElTS19DTFVTVEVSLgorKi8KK3N0YXRp
YyBpbnQgcmVhZF9zb21lX2NsdXN0ZXJfcGFnZXMoc3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJ
ICAgc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QpCit7CisJaW50IGk7CisJaW50IHJlc3Vs
dCA9IDA7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCXN0cnVjdCByZWlzZXI0X3NsaWRlICogd2lu
ID0gY2x1c3QtPndpbjsKKwl6bm9kZV9sb2NrX21vZGUgbW9kZSA9IFpOT0RFX1dSSVRFX0xPQ0s7
CisKKwlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2lkKENUQUlMX0lEKTsKKworCWFzc2VydCgiZWR3
YXJkLTkyNCIsICF0Zm1fY2x1c3Rlcl9pc191cHRvZGF0ZSgmY2x1c3QtPnRjKSk7CisKKyNpZiBS
RUlTRVI0X0RFQlVHCisJaWYgKGNsdXN0LT5ucl9wYWdlcyA9PSAwKSB7CisJCS8qIHN0YXJ0IHdy
aXRlIGhvbGUgZnJvbSBmYWtlIGRpc2sgY2x1c3RlciAqLworCQlhc3NlcnQoImVkd2FyZC0xMTE3
Iiwgd2luICE9IE5VTEwpOworCQlhc3NlcnQoImVkd2FyZC0xMTE4Iiwgd2luLT5zdGF0ID09IEhP
TEVfV0lORE9XKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTExOSIsIG5ld19sb2dpY2FsX2NsdXN0ZXIo
Y2x1c3QsIGlub2RlKSk7CisJfQorI2VuZGlmCisJaWYgKG5ld19sb2dpY2FsX2NsdXN0ZXIoY2x1
c3QsIGlub2RlKSkgeworCQkvKgorCQkgICBuZXcgcGFnZSBjbHVzdGVyIGlzIGFib3V0IHRvIGJl
IHdyaXR0ZW4sIG5vdGhpbmcgdG8gcmVhZCwKKwkJICovCisJCWFzc2VydCgiZWR3YXJkLTczNCIs
IHJlaXNlcjRfc2NoZWR1bGFibGUoKSk7CisJCWFzc2VydCgiZWR3YXJkLTczNSIsIGNsdXN0LT5o
aW50LT5saC5vd25lciA9PSBOVUxMKTsKKworCQlpZiAoY2x1c3QtPm5yX3BhZ2VzKSB7CisJCQlp
bnQgb2ZmOworCQkJc3RydWN0IHBhZ2UgKiBwZzsKKwkJCWFzc2VydCgiZWR3YXJkLTE0MTkiLCBj
bHVzdC0+cGFnZXMgIT0gTlVMTCk7CisJCQlwZyA9IGNsdXN0LT5wYWdlc1tjbHVzdC0+bnJfcGFn
ZXMgLSAxXTsKKwkJCWFzc2VydCgiZWR3YXJkLTE0MjAiLCBwZyAhPSBOVUxMKTsKKwkJCW9mZiA9
IG9mZl90b19wZ29mZih3aW4tPm9mZit3aW4tPmNvdW50K3dpbi0+ZGVsdGEpOworCQkJaWYgKG9m
ZikgeworCQkJCWxvY2tfcGFnZShwZyk7CisJCQkJemVyb191c2VyX3NlZ21lbnQocGcsIG9mZiwg
UEFHRV9TSVpFKTsKKwkJCQl1bmxvY2tfcGFnZShwZyk7CisJCQl9CisJCX0KKwkJY2x1c3QtPmRz
dGF0ID0gRkFLRV9ESVNLX0NMVVNURVI7CisJCXJldHVybiAwOworCX0KKwkvKgorCSAgIEhlcmUg
d2Ugc2hvdWxkIHNlYXJjaCBmb3IgZGlzayBjbHVzdGVyIHRvIGZpZ3VyZSBvdXQgaXRzIHJlYWwg
c3RhdGUuCisJICAgQWxzbyB0aGVyZSBpcyBvbmUgbW9yZSBpbXBvcnRhbnQgcmVhc29uIHRvIGRv
IGRpc2sgc2VhcmNoOiB3ZSBuZWVkCisJICAgdG8gbWFrZSBkaXNrIGNsdXN0ZXIgX2RpcnR5XyBp
ZiBpdCBleGlzdHMKKwkgKi8KKworCS8qIGlmIHdpbmRvd3MgaXMgc3BlY2lmaWVkLCByZWFkIHRo
ZSBvbmx5IHBhZ2VzCisJICAgdGhhdCB3aWxsIGJlIG1vZGlmaWVkIHBhcnRpYWxseSAqLworCisJ
Zm9yIChpID0gMDsgaSA8IGNsdXN0LT5ucl9wYWdlczsgaSsrKSB7CisJCXN0cnVjdCBwYWdlICpw
ZyA9IGNsdXN0LT5wYWdlc1tpXTsKKworCQlsb2NrX3BhZ2UocGcpOworCQlpZiAoUGFnZVVwdG9k
YXRlKHBnKSkgeworCQkJdW5sb2NrX3BhZ2UocGcpOworCQkJY29udGludWU7CisJCX0KKwkJdW5s
b2NrX3BhZ2UocGcpOworCisJCWlmICh3aW4gJiYKKwkJICAgIGkgPj0gc2l6ZV9pbl9wYWdlcyh3
aW4tPm9mZikgJiYKKwkJICAgIGkgPCBvZmZfdG9fcGcod2luLT5vZmYgKyB3aW4tPmNvdW50ICsg
d2luLT5kZWx0YSkpCisJCQkvKiBwYWdlIHdpbGwgYmUgY29tcGxldGVseSBvdmVyd3JpdHRlbiAq
LworCQkJY29udGludWU7CisKKwkJaWYgKHdpbiAmJiAoaSA9PSBjbHVzdC0+bnJfcGFnZXMgLSAx
KSAmJgorCQkgICAgLyogdGhlIGxhc3QgcGFnZSBpcworCQkgICAgICAgcGFydGlhbGx5IG1vZGlm
aWVkLAorCQkgICAgICAgbm90IHVwdG9kYXRlIC4uICovCisJCSAgICAoc2l6ZV9pbl9wYWdlcyhp
X3NpemVfcmVhZChpbm9kZSkpIDw9IHBnLT5pbmRleCkpIHsKKwkJCS8qIC4uIGFuZCBhcHBlbmRl
ZCwKKwkJCSAgIHNvIHNldCB6ZXJvZXMgdG8gdGhlIHJlc3QgKi8KKwkJCWludCBvZmZzZXQ7CisJ
CQlsb2NrX3BhZ2UocGcpOworCQkJYXNzZXJ0KCJlZHdhcmQtMTI2MCIsCisJCQkgICAgICAgc2l6
ZV9pbl9wYWdlcyh3aW4tPm9mZiArIHdpbi0+Y291bnQgKworCQkJCQkgICAgIHdpbi0+ZGVsdGEp
IC0gMSA9PSBpKTsKKworCQkJb2Zmc2V0ID0KKwkJCSAgICBvZmZfdG9fcGdvZmYod2luLT5vZmYg
KyB3aW4tPmNvdW50ICsgd2luLT5kZWx0YSk7CisJCQl6ZXJvX3VzZXJfc2VnbWVudChwZywgb2Zm
c2V0LCBQQUdFX1NJWkUpOworCQkJdW5sb2NrX3BhZ2UocGcpOworCQkJLyogc3RpbGwgbm90IHVw
dG9kYXRlICovCisJCQlicmVhazsKKwkJfQorCQlsb2NrX3BhZ2UocGcpOworCQlyZXN1bHQgPSBk
b19yZWFkcGFnZV9jdGFpbChpbm9kZSwgY2x1c3QsIHBnLCBtb2RlKTsKKworCQlhc3NlcnQoImVk
d2FyZC0xNTI2IiwgZXJnbyghcmVzdWx0LCBQYWdlVXB0b2RhdGUocGcpKSk7CisJCXVubG9ja19w
YWdlKHBnKTsKKwkJaWYgKHJlc3VsdCkgeworCQkJd2FybmluZygiZWR3YXJkLTIxOSIsICJkb19y
ZWFkcGFnZV9jdGFpbCBmYWlsZWQiKTsKKwkJCWdvdG8gb3V0OworCQl9CisJfQorCWlmICghdGZt
X2NsdXN0ZXJfaXNfdXB0b2RhdGUoJmNsdXN0LT50YykpIHsKKwkJLyogZGlzayBjbHVzdGVyIHVu
Y2xhaW1lZCwgYnV0IHdlIG5lZWQgdG8gbWFrZSBpdHMgem5vZGVzIGRpcnR5CisJCSAqIHRvIG1h
a2UgZmx1c2ggdXBkYXRlIGNvbnZlcnQgaXRzIGNvbnRlbnQKKwkJICovCisJCXJlc3VsdCA9IGZp
bmRfZGlza19jbHVzdGVyKGNsdXN0LCBpbm9kZSwKKwkJCQkJICAgMCAvKiBkbyBub3QgcmVhZCBp
dGVtcyAqLywKKwkJCQkJICAgbW9kZSk7CisJfQorIG91dDoKKwl0Zm1fY2x1c3Rlcl9jbHJfdXB0
b2RhdGUoJmNsdXN0LT50Yyk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworc3RhdGljIGludCBzaG91
bGRfY3JlYXRlX3VucHJlcHBlZF9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0
LAorCQkJCQkgICBzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlhc3NlcnQoImVkd2FyZC03Mzci
LCBjbHVzdCAhPSBOVUxMKTsKKworCXN3aXRjaCAoY2x1c3QtPmRzdGF0KSB7CisJY2FzZSBQUkVQ
X0RJU0tfQ0xVU1RFUjoKKwljYXNlIFVOUFJfRElTS19DTFVTVEVSOgorCQlyZXR1cm4gMDsKKwlj
YXNlIEZBS0VfRElTS19DTFVTVEVSOgorCQlpZiAoY2x1c3QtPndpbiAmJgorCQkgICAgY2x1c3Qt
Pndpbi0+c3RhdCA9PSBIT0xFX1dJTkRPVyAmJiBjbHVzdC0+bnJfcGFnZXMgPT0gMCkgeworCQkJ
YXNzZXJ0KCJlZHdhcmQtMTE3MiIsCisJCQkgICAgICAgbmV3X2xvZ2ljYWxfY2x1c3RlcihjbHVz
dCwgaW5vZGUpKTsKKwkJCXJldHVybiAwOworCQl9CisJCXJldHVybiAxOworCWRlZmF1bHQ6CisJ
CWltcG9zc2libGUoImVkd2FyZC0xMTczIiwgImJhZCBkaXNrIGNsdXN0ZXIgc3RhdGUiKTsKKwkJ
cmV0dXJuIDA7CisJfQorfQorCitzdGF0aWMgaW50IGNyeXB0Y29tcHJlc3NfbWFrZV91bnByZXBw
ZWRfY2x1c3RlcihzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkJCXN0cnVjdCBp
bm9kZSAqaW5vZGUpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiZWR3YXJkLTExMjMiLCBy
ZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCWFzc2VydCgiZWR3YXJkLTczNyIsIGNsdXN0ICE9IE5V
TEwpOworCWFzc2VydCgiZWR3YXJkLTczOCIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3
YXJkLTczOSIsIGNyeXB0Y29tcHJlc3NfaW5vZGVfb2soaW5vZGUpKTsKKwlhc3NlcnQoImVkd2Fy
ZC0xMDUzIiwgY2x1c3QtPmhpbnQgIT0gTlVMTCk7CisKKyAJaWYgKCFzaG91bGRfY3JlYXRlX3Vu
cHJlcHBlZF9jbHVzdGVyKGNsdXN0LCBpbm9kZSkpIHsKKyAJCWlmIChjbHVzdC0+cmVzZXJ2ZWQp
IHsKKyAJCQljbHVzdGVyX3Jlc2VydmVkMmZyZWUoZXN0aW1hdGVfaW5zZXJ0X2NsdXN0ZXIoaW5v
ZGUpKTsKKyNpZiBSRUlTRVI0X0RFQlVHCisgCQkJYXNzZXJ0KCJlZHdhcmQtMTI2NyIsCisgCQkJ
ICAgICAgIGNsdXN0LT5yZXNlcnZlZF91bnByZXBwZWQgPT0KKyAJCQkgICAgICAgZXN0aW1hdGVf
aW5zZXJ0X2NsdXN0ZXIoaW5vZGUpKTsKKyAJCQljbHVzdC0+cmVzZXJ2ZWRfdW5wcmVwcGVkIC09
CisgCQkJCWVzdGltYXRlX2luc2VydF9jbHVzdGVyKGlub2RlKTsKKyNlbmRpZgorCQl9CisJCXJl
dHVybiAwOworCX0KKyAJYXNzZXJ0KCJlZHdhcmQtMTI2OCIsIGNsdXN0LT5yZXNlcnZlZCk7Cisg
CWNsdXN0ZXJfcmVzZXJ2ZWQyZ3JhYmJlZChlc3RpbWF0ZV9pbnNlcnRfY2x1c3Rlcihpbm9kZSkp
OworI2lmIFJFSVNFUjRfREVCVUcKKyAJYXNzZXJ0KCJlZHdhcmQtMTQ0MSIsCisgCSAgICAgICBj
bHVzdC0+cmVzZXJ2ZWRfdW5wcmVwcGVkID09IGVzdGltYXRlX2luc2VydF9jbHVzdGVyKGlub2Rl
KSk7CisgCWNsdXN0LT5yZXNlcnZlZF91bnByZXBwZWQgLT0gZXN0aW1hdGVfaW5zZXJ0X2NsdXN0
ZXIoaW5vZGUpOworI2VuZGlmCisJcmVzdWx0ID0gY3RhaWxfaW5zZXJ0X3VucHJlcHBlZF9jbHVz
dGVyKGNsdXN0LCBpbm9kZSk7CisJaWYgKHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKworCWlu
b2RlX2FkZF9ieXRlcyhpbm9kZSwgaW5vZGVfY2x1c3Rlcl9zaXplKGlub2RlKSk7CisKKwlhc3Nl
cnQoImVkd2FyZC03NDMiLCBjcnlwdGNvbXByZXNzX2lub2RlX29rKGlub2RlKSk7CisJYXNzZXJ0
KCJlZHdhcmQtNzQ0Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKGNsdXN0LT5oaW50LT5saC5ub2Rl
KSk7CisKKwljbHVzdC0+ZHN0YXQgPSBVTlBSX0RJU0tfQ0xVU1RFUjsKKwlyZXR1cm4gMDsKK30K
KworLyogLiBHcmFiIHBhZ2UgY2x1c3RlciBmb3IgcmVhZCwgd3JpdGUsIHNldGF0dHIsIGV0Yy4g
b3BlcmF0aW9uczsKKyAqIC4gVHJ1bmNhdGUgaXRzIGNvbXBsZXRlIHBhZ2VzLCBpZiBuZWVkZWQ7
CisgKi8KK2ludCBwcmVwYXJlX3BhZ2VfY2x1c3RlcihzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwgc3Ry
dWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsCisJCQkgcndfb3AgcncpCit7CisJYXNzZXJ0KCJl
ZHdhcmQtMTc3IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNzQxIiwgY3J5cHRj
b21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTc0MCIsIGNsdXN0LT5w
YWdlcyAhPSBOVUxMKTsKKworCXNldF9jbHVzdGVyX25ycGFnZXMoY2x1c3QsIGlub2RlKTsKKwly
ZXNldF9jbHVzdGVyX3Bnc2V0KGNsdXN0LCBjbHVzdGVyX25ycGFnZXMoaW5vZGUpKTsKKwlyZXR1
cm4gZ3JhYl9wYWdlX2NsdXN0ZXIoaW5vZGUsIGNsdXN0LCBydyk7Cit9CisKKy8qIFRydW5jYXRl
IGNvbXBsZXRlIHBhZ2UgY2x1c3RlciBvZiBpbmRleCBAaW5kZXguCisgKiBUaGlzIGlzIGNhbGxl
ZCBieSAtPmtpbGxfaG9vaygpIG1ldGhvZCBvZiBpdGVtCisgKiBwbHVnaW4gd2hlbiBkZWxldGlu
ZyBhIGRpc2sgY2x1c3RlciBvZiBzdWNoIGluZGV4LgorICovCit2b2lkIHRydW5jYXRlX2NvbXBs
ZXRlX3BhZ2VfY2x1c3RlcihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjbG9mZl90IGluZGV4LAorCQkJ
CSAgICBpbnQgZXZlbl9jb3dzKQoreworCWludCBmb3VuZDsKKwlpbnQgbnJfcGFnZXM7CisJam5v
ZGUgKm5vZGU7CisJcGdvZmZfdCBwYWdlX2luZGV4ID0gY2x1c3RfdG9fcGcoaW5kZXgsIGlub2Rl
KTsKKwlzdHJ1Y3QgcGFnZSAqcGFnZXNbTUFYX0NMVVNURVJfTlJQQUdFU107CisKKwlub2RlID0g
amxvb2t1cChjdXJyZW50X3RyZWUsIGdldF9pbm9kZV9vaWQoaW5vZGUpLAorCQkgICAgICAgY2x1
c3RfdG9fcGcoaW5kZXgsIGlub2RlKSk7CisJbnJfcGFnZXMgPSBzaXplX2luX3BhZ2VzKGxieXRl
cyhpbmRleCwgaW5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0xNDgzIiwgbnJfcGFnZXMgIT0gMCk7
CisJaWYgKCFub2RlKQorCQlnb3RvIHRydW5jYXRlOworCWZvdW5kID0gZmluZF9nZXRfcGFnZXMo
aW5vZGUtPmlfbWFwcGluZywgJnBhZ2VfaW5kZXgsCisJCQkgICAgICAgY2x1c3Rlcl9ucnBhZ2Vz
KGlub2RlKSwgcGFnZXMpOworCWlmICghZm91bmQpIHsKKwkJYXNzZXJ0KCJlZHdhcmQtMTQ4NCIs
IGpub2RlX3RydW5jYXRlX29rKGlub2RlLCBpbmRleCkpOworCQlyZXR1cm47CisJfQorCWxvY2tf
Y2x1c3Rlcihub2RlKTsKKworCWlmIChyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlT
RVI0X0ZJTEVfQ09OVl9JTl9QUk9HUkVTUykKKwkgICAgJiYgaW5kZXggPT0gMCkKKwkJLyogY29u
dmVydGluZyB0byB1bml4X2ZpbGUgaXMgaW4gcHJvZ3Jlc3MgKi8KKwkJSkZfQ0xSKG5vZGUsIEpO
T0RFX0NMVVNURVJfUEFHRSk7CisJaWYgKEpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSkgewor
CQkvKgorCQkgKiBAbnJfcGFnZXMgd2VyZSBjaGVja2VkIGluLCBidXQgbm90IHlldCBjaGVja2Vk
IG91dCAtCisJCSAqIHdlIG5lZWQgdG8gcmVsZWFzZSB0aGVtLiAoYWxzbyB0aGVyZSBjYW4gYmUg
cGFnZXMKKwkJICogYXR0YWNoZWQgdG8gcGFnZSBjYWNoZSBieSByZWFkKCksIGV0Yy4gLSBkb24n
dCB0YWtlCisJCSAqIHRoZW0gaW50byBhY2NvdW50KS4KKwkJICovCisJCWFzc2VydCgiZWR3YXJk
LTExOTgiLCBmb3VuZCA+PSBucl9wYWdlcyk7CisKKwkJLyogZnJlZSBkaXNrIHNwYWNlIGdyYWJi
ZWQgZm9yIGRpc2sgY2x1c3RlciBjb252ZXJ0aW5nICovCisJCWNsdXN0ZXJfcmVzZXJ2ZWQyZ3Jh
YmJlZChlc3RpbWF0ZV91cGRhdGVfY2x1c3Rlcihpbm9kZSkpOworCQlncmFiYmVkMmZyZWUoZ2V0
X2N1cnJlbnRfY29udGV4dCgpLAorCQkJICAgICBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCks
CisJCQkgICAgIGVzdGltYXRlX3VwZGF0ZV9jbHVzdGVyKGlub2RlKSk7CisJCV9fcHV0X3BhZ2Vf
Y2x1c3RlcigwLCBucl9wYWdlcywgcGFnZXMsIGlub2RlKTsKKworCQkvKiBUaGlzIHdpbGwgY2xl
YXIgZGlydHkgYml0LCB1bmNhcHR1cmUgYW5kIHVubG9jayBqbm9kZSAqLworCQl1bmxvY2tfY2x1
c3Rlcl91bmNhcHR1cmUobm9kZSk7CisJfSBlbHNlCisJCXVubG9ja19jbHVzdGVyKG5vZGUpOwor
CWpwdXQobm9kZSk7ICAgICAgICAgICAgICAgICAgICAgICAgIC8qIGpsb29rdXAgKi8KKwlwdXRf
Zm91bmRfcGFnZXMocGFnZXMsIGZvdW5kKTsgLyogZmluZF9nZXRfcGFnZXMgKi8KKyB0cnVuY2F0
ZToKKwlpZiAocmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9GSUxFX0NPTlZf
SU5fUFJPR1JFU1MpICYmCisJICAgIGluZGV4ID09IDApCisJCXJldHVybjsKKwl0cnVuY2F0ZV9w
YWdlX2NsdXN0ZXJfcmFuZ2UoaW5vZGUsIHBhZ2VzLCBpbmRleCwgMCwKKwkJCQkgICAgY2x1c3Rl
cl9ucnBhZ2VzKGlub2RlKSwKKwkJCQkgICAgZXZlbl9jb3dzKTsKKwlhc3NlcnQoImVkd2FyZC0x
MjAxIiwKKwkgICAgICAgZXJnbyghcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwKKwkJCQkJ
ICAgIFJFSVNFUjRfRklMRV9DT05WX0lOX1BST0dSRVNTKSwKKwkJICAgIGpub2RlX3RydW5jYXRl
X29rKGlub2RlLCBpbmRleCkpKTsKKwlyZXR1cm47Cit9CisKKy8qCisgKiBTZXQgY2x1c3RlciBo
YW5kbGUgQGNsdXN0IG9mIGEgbG9naWNhbCBjbHVzdGVyIGJlZm9yZQorICogbW9kaWZpY2F0aW9u
cyB3aGljaCBhcmUgc3VwcG9zZWQgdG8gYmUgY29tbWl0dGVkLgorICoKKyAqIC4gZ3JhYiBjbHVz
dGVyIHBhZ2VzOworICogLiByZXNlcnZlIGRpc2sgc3BhY2U7CisgKiAuIG1heWJlIHJlYWQgcGFn
ZXMgZnJvbSBkaXNrIGFuZCBzZXQgdGhlIGRpc2sgY2x1c3RlciBkaXJ0eTsKKyAqIC4gbWF5YmUg
d3JpdGUgaG9sZSBhbmQgY2hlY2sgaW4gKHBhcnRpYWxseSB6ZXJvZWQpIGxvZ2ljYWwgY2x1c3Rl
cjsKKyAqIC4gY3JlYXRlICd1bnByZXBwZWQnIGRpc2sgY2x1c3RlciBmb3IgbmV3IG9yIGZha2Ug
bG9naWNhbCBvbmUuCisgKi8KK3N0YXRpYyBpbnQgcHJlcGFyZV9sb2dpY2FsX2NsdXN0ZXIoc3Ry
dWN0IGlub2RlICppbm9kZSwKKwkJCQkgICBsb2ZmX3QgZmlsZV9vZmYsIC8qIHdyaXRlIHBvc2l0
aW9uCisJCQkJCQkgICAgICAgaW4gdGhlIGZpbGUgKi8KKwkJCQkgICBsb2ZmX3QgdG9fZmlsZSwg
LyogYnl0ZXMgb2YgdXNlcnMgZGF0YQorCQkJCQkJICAgICAgdG8gd3JpdGUgdG8gdGhlIGZpbGUg
Ki8KKwkJCQkgICBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkgICBsb2dpY2Fs
X2NsdXN0ZXJfb3Agb3ApCit7CisJaW50IHJlc3VsdCA9IDA7CisJc3RydWN0IHJlaXNlcjRfc2xp
ZGUgKiB3aW4gPSBjbHVzdC0+d2luOworCisJcmVzZXRfY2x1c3Rlcl9wYXJhbXMoY2x1c3QpOwor
CWNsdXN0ZXJfc2V0X3RmbV9hY3QoJmNsdXN0LT50YywgVEZNQV9SRUFEKTsKKyNpZiBSRUlTRVI0
X0RFQlVHCisJY2x1c3QtPmN0eCA9IGdldF9jdXJyZW50X2NvbnRleHQoKTsKKyNlbmRpZgorCWFz
c2VydCgiZWR3YXJkLTExOTAiLCBvcCAhPSBMQ19JTlZBTCk7CisKKwljbHVzdC0+b3AgPSBvcDsK
KworCXJlc3VsdCA9IHByZXBhcmVfcGFnZV9jbHVzdGVyKGlub2RlLCBjbHVzdCwgV1JJVEVfT1Ap
OworCWlmIChyZXN1bHQpCisJCXJldHVybiByZXN1bHQ7CisJYXNzZXJ0KCJlZHdhcmQtMTQ0NyIs
CisJICAgICAgIGVyZ28oY2x1c3QtPm5yX3BhZ2VzICE9IDAsIGpwcml2YXRlKGNsdXN0LT5wYWdl
c1swXSkpKTsKKwlhc3NlcnQoImVkd2FyZC0xNDQ4IiwKKwkgICAgICAgZXJnbyhjbHVzdC0+bnJf
cGFnZXMgIT0gMCwKKwkJICAgIGpub2RlX2lzX2NsdXN0ZXJfcGFnZShqcHJpdmF0ZShjbHVzdC0+
cGFnZXNbMF0pKSkpOworCisJcmVzdWx0ID0gcmVzZXJ2ZTRjbHVzdGVyKGlub2RlLCBjbHVzdCk7
CisJaWYgKHJlc3VsdCkKKwkJZ290byBvdXQ7CisKKwlyZXN1bHQgPSByZWFkX3NvbWVfY2x1c3Rl
cl9wYWdlcyhpbm9kZSwgY2x1c3QpOworCisJaWYgKHJlc3VsdCB8fAorCSAgICAvKgorCSAgICAg
KiBkb24ndCBzdWJtaXQgZGF0YSBtb2RpZmljYXRpb25zCisJICAgICAqIHdoZW4gZXhwYW5kaW5n
IG9yIHNocmlua2luZyBob2xlcworCSAgICAgKi8KKwkgICAgKG9wID09IExDX1NIUklOSyAmJiBj
bHVzdC0+ZHN0YXQgPT0gRkFLRV9ESVNLX0NMVVNURVIpIHx8CisJICAgIChvcCA9PSBMQ19FWFBB
TkQgJiYgY2x1c3QtPmRzdGF0ID09IEZBS0VfRElTS19DTFVTVEVSKSl7CisJCWZyZWVfcmVzZXJ2
ZWQ0Y2x1c3Rlcihpbm9kZSwKKwkJCQkgICAgICBjbHVzdCwKKwkJCQkgICAgICBlc3RpbWF0ZV91
cGRhdGVfY2x1c3Rlcihpbm9kZSkgKworCQkJCSAgICAgIGVzdGltYXRlX2luc2VydF9jbHVzdGVy
KGlub2RlKSk7CisJCWdvdG8gb3V0OworCX0KKwlhc3NlcnQoImVkd2FyZC0xMTI0IiwgY2x1c3Qt
PmRzdGF0ICE9IElOVkFMX0RJU0tfQ0xVU1RFUik7CisKKwlyZXN1bHQgPSBjcnlwdGNvbXByZXNz
X21ha2VfdW5wcmVwcGVkX2NsdXN0ZXIoY2x1c3QsIGlub2RlKTsKKwlpZiAocmVzdWx0KQorCQln
b3RvIGVycm9yOworCWlmICh3aW4gJiYgd2luLT5zdGF0ID09IEhPTEVfV0lORE9XKSB7CisJCXJl
c3VsdCA9IHdyaXRlX2hvbGUoaW5vZGUsIGNsdXN0LCBmaWxlX29mZiwgdG9fZmlsZSk7CisJCWlm
IChyZXN1bHQpCisJCQlnb3RvIGVycm9yOworCX0KKwlyZXR1cm4gMDsKKyBlcnJvcjoKKwlmcmVl
X3Jlc2VydmVkNGNsdXN0ZXIoaW5vZGUsIGNsdXN0LAorCQkJICAgICAgZXN0aW1hdGVfdXBkYXRl
X2NsdXN0ZXIoaW5vZGUpKTsKKyBvdXQ6CisJcHV0X3BhZ2VfY2x1c3RlcihjbHVzdCwgaW5vZGUs
IFdSSVRFX09QKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBzZXQgd2luZG93IGJ5IHR3byBv
ZmZzZXRzICovCitzdGF0aWMgdm9pZCBzZXRfd2luZG93KHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAq
IGNsdXN0LAorCQkgICAgICAgc3RydWN0IHJlaXNlcjRfc2xpZGUgKiB3aW4sIHN0cnVjdCBpbm9k
ZSAqaW5vZGUsCisJCSAgICAgICBsb2ZmX3QgbzEsIGxvZmZfdCBvMikKK3sKKwlhc3NlcnQoImVk
d2FyZC0yOTUiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0yOTYiLCBpbm9kZSAh
PSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMDcxIiwgd2luICE9IE5VTEwpOworCWFzc2VydCgi
ZWR3YXJkLTI5NyIsIG8xIDw9IG8yKTsKKworCWNsdXN0LT5pbmRleCA9IG9mZl90b19jbHVzdChv
MSwgaW5vZGUpOworCisJd2luLT5vZmYgPSBvZmZfdG9fY2xvZmYobzEsIGlub2RlKTsKKwl3aW4t
PmNvdW50ID0gbWluKChsb2ZmX3QpKGlub2RlX2NsdXN0ZXJfc2l6ZShpbm9kZSkgLSB3aW4tPm9m
ZiksCisJCQkgbzIgLSBvMSk7CisJd2luLT5kZWx0YSA9IDA7CisKKwljbHVzdC0+d2luID0gd2lu
OworfQorCitzdGF0aWMgaW50IHNldF93aW5kb3dfYW5kX2NsdXN0ZXIoc3RydWN0IGlub2RlICpp
bm9kZSwKKwkJCQkgIHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJCSAgc3RydWN0
IHJlaXNlcjRfc2xpZGUgKiB3aW4sIHNpemVfdCBsZW5ndGgsCisJCQkJICBsb2ZmX3QgZmlsZV9v
ZmYpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiZWR3YXJkLTE5NyIsIGNsdXN0ICE9IE5V
TEwpOworCWFzc2VydCgiZWR3YXJkLTEwNzIiLCB3aW4gIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdh
cmQtMTk4IiwgaW5vZGUgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSBhbGxvY19jbHVzdGVyX3Bnc2V0
KGNsdXN0LCBjbHVzdGVyX25ycGFnZXMoaW5vZGUpKTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4g
cmVzdWx0OworCisJaWYgKGZpbGVfb2ZmID4gaV9zaXplX3JlYWQoaW5vZGUpKSB7CisJCS8qIFVo
bW0sIGhvbGUgaW4gY3J5cHRjb21wcmVzcyBmaWxlLi4uICovCisJCWxvZmZfdCBob2xlX3NpemU7
CisJCWhvbGVfc2l6ZSA9IGZpbGVfb2ZmIC0gaW5vZGUtPmlfc2l6ZTsKKworCQlzZXRfd2luZG93
KGNsdXN0LCB3aW4sIGlub2RlLCBpbm9kZS0+aV9zaXplLCBmaWxlX29mZik7CisJCXdpbi0+c3Rh
dCA9IEhPTEVfV0lORE9XOworCQlpZiAod2luLT5vZmYgKyBob2xlX3NpemUgPCBpbm9kZV9jbHVz
dGVyX3NpemUoaW5vZGUpKQorCQkJLyogdGhlcmUgaXMgYWxzbyB1c2VyJ3MgZGF0YSB0byBhcHBl
bmQgdG8gdGhlIGhvbGUgKi8KKwkJCXdpbi0+ZGVsdGEgPSBtaW4oaW5vZGVfY2x1c3Rlcl9zaXpl
KGlub2RlKSAtCisJCQkJCSAod2luLT5vZmYgKyB3aW4tPmNvdW50KSwgbGVuZ3RoKTsKKwkJcmV0
dXJuIDA7CisJfQorCXNldF93aW5kb3coY2x1c3QsIHdpbiwgaW5vZGUsIGZpbGVfb2ZmLCBmaWxl
X29mZiArIGxlbmd0aCk7CisJd2luLT5zdGF0ID0gREFUQV9XSU5ET1c7CisJcmV0dXJuIDA7Cit9
CisKK2ludCBzZXRfY2x1c3Rlcl9ieV9wYWdlKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0
LCBzdHJ1Y3QgcGFnZSAqIHBhZ2UsCisJCQlpbnQgY291bnQpCit7CisJaW50IHJlc3VsdCA9IDA7
CisJaW50ICgqc2V0dGluZ19hY3Rvcikoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsIGlu
dCBjb3VudCk7CisKKwlhc3NlcnQoImVkd2FyZC0xMzU4IiwgY2x1c3QgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTM1OSIsIHBhZ2UgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTM2MCIs
IHBhZ2UtPm1hcHBpbmcgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTM2MSIsIHBhZ2UtPm1h
cHBpbmctPmhvc3QgIT0gTlVMTCk7CisKKwlzZXR0aW5nX2FjdG9yID0KKwkJKGNsdXN0LT5wYWdl
cyA/IHJlc2V0X2NsdXN0ZXJfcGdzZXQgOiBhbGxvY19jbHVzdGVyX3Bnc2V0KTsKKwlyZXN1bHQg
PSBzZXR0aW5nX2FjdG9yKGNsdXN0LCBjb3VudCk7CisJY2x1c3QtPmluZGV4ID0gcGdfdG9fY2x1
c3QocGFnZS0+aW5kZXgsIHBhZ2UtPm1hcHBpbmctPmhvc3QpOworCXJldHVybiByZXN1bHQ7Cit9
CisKKy8qIHJlc2V0IGFsbCB0aGUgcGFyYW1zIHRoYXQgbm90IGdldCB1cGRhdGVkICovCit2b2lk
IHJlc2V0X2NsdXN0ZXJfcGFyYW1zKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0KQorewor
CWFzc2VydCgiZWR3YXJkLTE5NyIsIGNsdXN0ICE9IE5VTEwpOworCisJY2x1c3QtPmRzdGF0ID0g
SU5WQUxfRElTS19DTFVTVEVSOworCWNsdXN0LT50Yy51cHRvZGF0ZSA9IDA7CisJY2x1c3QtPnRj
LmxlbiA9IDA7Cit9CisKKy8qIHRoZSBoZWFydCBvZiB3cml0ZV9jcnlwdGNvbXByZXNzICovCitz
dGF0aWMgbG9mZl90IGRvX3dyaXRlX2NyeXB0Y29tcHJlc3Moc3RydWN0IGZpbGUgKmZpbGUsIHN0
cnVjdCBpbm9kZSAqaW5vZGUsCisJCQkJICAgICBjb25zdCBjaGFyIF9fdXNlciAqYnVmLCBzaXpl
X3QgdG9fd3JpdGUsCisJCQkJICAgICBsb2ZmX3QgcG9zLCBzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4
dCAqY29udCkKK3sKKwlpbnQgaTsKKwloaW50X3QgKmhpbnQ7CisJaW50IHJlc3VsdCA9IDA7CisJ
c2l6ZV90IGNvdW50OworCXN0cnVjdCByZWlzZXI0X3NsaWRlIHdpbjsKKwlzdHJ1Y3QgY2x1c3Rl
cl9oYW5kbGUgY2x1c3Q7CisJc3RydWN0IGNyeXB0Y29tcHJlc3NfaW5mbyAqIGluZm87CisKKwlh
c3NlcnQoImVkd2FyZC0xNTQiLCBidWYgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTYxIiwg
cmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKwlhc3NlcnQoImVkd2FyZC03NDgiLCBjcnlwdGNvbXBy
ZXNzX2lub2RlX29rKGlub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTU5IiwgY3VycmVudF9ibG9j
a3NpemUgPT0gUEFHRV9TSVpFKTsKKwlhc3NlcnQoImVkd2FyZC0xMjc0IiwgZ2V0X2N1cnJlbnRf
Y29udGV4dCgpLT5ncmFiYmVkX2Jsb2NrcyA9PSAwKTsKKworCWhpbnQgPSBrbWFsbG9jKHNpemVv
ZigqaGludCksIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoaGludCA9PSBOVUxM
KQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJcmVzdWx0ID0gbG9hZF9maWxlX2hpbnQo
ZmlsZSwgaGludCk7CisJaWYgKHJlc3VsdCkgeworCQlrZnJlZShoaW50KTsKKwkJcmV0dXJuIHJl
c3VsdDsKKwl9CisJY291bnQgPSB0b193cml0ZTsKKworCXJlaXNlcjRfc2xpZGVfaW5pdCgmd2lu
KTsKKwljbHVzdGVyX2luaXRfcmVhZCgmY2x1c3QsICZ3aW4pOworCWNsdXN0LmhpbnQgPSBoaW50
OworCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpOworCisJbXV0ZXhfbG9j
aygmaW5mby0+Y2hlY2tpbl9tdXRleCk7CisKKwlyZXN1bHQgPSBzZXRfd2luZG93X2FuZF9jbHVz
dGVyKGlub2RlLCAmY2x1c3QsICZ3aW4sIHRvX3dyaXRlLCBwb3MpOworCWlmIChyZXN1bHQpCisJ
CWdvdG8gb3V0OworCisJaWYgKG5leHRfd2luZG93X3N0YXQoJndpbikgPT0gSE9MRV9XSU5ET1cp
IHsKKwkJLyogd3JpdGUgaG9sZSBpbiB0aGlzIGl0ZXJhdGlvbgorCQkgICBzZXBhcmF0ZWQgZnJv
bSB0aGUgbG9vcCBiZWxvdyAqLworCQlyZXN1bHQgPSB3cml0ZV9kaXNwYXRjaF9ob29rKGZpbGUs
IGlub2RlLAorCQkJCQkgICAgIHBvcywgJmNsdXN0LCBjb250KTsKKwkJaWYgKHJlc3VsdCkKKwkJ
CWdvdG8gb3V0OworCQlyZXN1bHQgPSBwcmVwYXJlX2xvZ2ljYWxfY2x1c3Rlcihpbm9kZSwgcG9z
LCBjb3VudCwgJmNsdXN0LAorCQkJCQkJIExDX0FQUE9WKTsKKwkJaWYgKHJlc3VsdCkKKwkJCWdv
dG8gb3V0OworCX0KKwlkbyB7CisJCWNvbnN0IGNoYXIgX191c2VyICogc3JjOworCQl1bnNpZ25l
ZCBwYWdlX29mZiwgdG9fcGFnZTsKKworCQlhc3NlcnQoImVkd2FyZC03NTAiLCByZWlzZXI0X3Nj
aGVkdWxhYmxlKCkpOworCisJCXJlc3VsdCA9IHdyaXRlX2Rpc3BhdGNoX2hvb2soZmlsZSwgaW5v
ZGUsCisJCQkJCSAgICAgcG9zICsgdG9fd3JpdGUgLSBjb3VudCwKKwkJCQkJICAgICAmY2x1c3Qs
IGNvbnQpOworCQlpZiAocmVzdWx0KQorCQkJZ290byBvdXQ7CisJCWlmIChjb250LT5zdGF0ZSA9
PSBESVNQQVRDSF9BU1NJR05FRF9ORVcpCisJCQkvKiBkb25lX2xoIHdhcyBjYWxsZWQgaW4gd3Jp
dGVfZGlzcGF0Y2hfaG9vayAqLworCQkJZ290byBvdXRfbm9fbG9uZ3Rlcm1fbG9jazsKKworCQly
ZXN1bHQgPSBwcmVwYXJlX2xvZ2ljYWxfY2x1c3Rlcihpbm9kZSwgcG9zLCBjb3VudCwgJmNsdXN0
LAorCQkJCQkJIExDX0FQUE9WKTsKKwkJaWYgKHJlc3VsdCkKKwkJCWdvdG8gb3V0OworCisJCWFz
c2VydCgiZWR3YXJkLTc1MSIsIGNyeXB0Y29tcHJlc3NfaW5vZGVfb2soaW5vZGUpKTsKKwkJYXNz
ZXJ0KCJlZHdhcmQtMjA0Iiwgd2luLnN0YXQgPT0gREFUQV9XSU5ET1cpOworCQlhc3NlcnQoImVk
d2FyZC0xMjg4IiwgaGludF9pc192YWxpZChjbHVzdC5oaW50KSk7CisJCWFzc2VydCgiZWR3YXJk
LTc1MiIsCisJCSAgICAgICB6bm9kZV9pc193cml0ZV9sb2NrZWQoaGludC0+ZXh0X2Nvb3JkLmNv
b3JkLm5vZGUpKTsKKwkJcHV0X2hpbnRfY2x1c3RlcigmY2x1c3QsIGlub2RlLCBaTk9ERV9XUklU
RV9MT0NLKTsKKworCQkvKiBzZXQgd3JpdGUgcG9zaXRpb24gaW4gcGFnZSAqLworCQlwYWdlX29m
ZiA9IG9mZl90b19wZ29mZih3aW4ub2ZmKTsKKworCQkvKiBjb3B5IHVzZXIncyBkYXRhIHRvIGNs
dXN0ZXIgcGFnZXMgKi8KKwkJZm9yIChpID0gb2ZmX3RvX3BnKHdpbi5vZmYpLCBzcmMgPSBidWY7
CisJCSAgICAgaSA8IHNpemVfaW5fcGFnZXMod2luLm9mZiArIHdpbi5jb3VudCk7CisJCSAgICAg
aSsrLCBzcmMgKz0gdG9fcGFnZSkgeworCQkJdG9fcGFnZSA9IF9fbWJwKHdpbi5vZmYgKyB3aW4u
Y291bnQsIGkpIC0gcGFnZV9vZmY7CisJCQlhc3NlcnQoImVkd2FyZC0xMDM5IiwKKwkJCSAgICAg
ICBwYWdlX29mZiArIHRvX3BhZ2UgPD0gUEFHRV9TSVpFKTsKKwkJCWFzc2VydCgiZWR3YXJkLTI4
NyIsIGNsdXN0LnBhZ2VzW2ldICE9IE5VTEwpOworCisJCQlmYXVsdF9pbl9wYWdlc19yZWFkYWJs
ZShzcmMsIHRvX3BhZ2UpOworCisJCQlsb2NrX3BhZ2UoY2x1c3QucGFnZXNbaV0pOworCQkJcmVz
dWx0ID0KKwkJCSAgICBfX2NvcHlfZnJvbV91c2VyKChjaGFyICopa21hcChjbHVzdC5wYWdlc1tp
XSkgKworCQkJCQkgICAgIHBhZ2Vfb2ZmLCBzcmMsIHRvX3BhZ2UpOworCQkJa3VubWFwKGNsdXN0
LnBhZ2VzW2ldKTsKKwkJCWlmICh1bmxpa2VseShyZXN1bHQpKSB7CisJCQkJdW5sb2NrX3BhZ2Uo
Y2x1c3QucGFnZXNbaV0pOworCQkJCXJlc3VsdCA9IC1FRkFVTFQ7CisJCQkJZ290byBlcnIyOwor
CQkJfQorCQkJU2V0UGFnZVVwdG9kYXRlKGNsdXN0LnBhZ2VzW2ldKTsKKwkJCXNldF9wYWdlX2Rp
cnR5X25vdGFnKGNsdXN0LnBhZ2VzW2ldKTsKKwkJCWZsdXNoX2RjYWNoZV9wYWdlKGNsdXN0LnBh
Z2VzW2ldKTsKKwkJCW1hcmtfcGFnZV9hY2Nlc3NlZChjbHVzdC5wYWdlc1tpXSk7CisJCQl1bmxv
Y2tfcGFnZShjbHVzdC5wYWdlc1tpXSk7CisJCQlwYWdlX29mZiA9IDA7CisJCX0KKwkJYXNzZXJ0
KCJlZHdhcmQtNzUzIiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCisJCXJlc3Vs
dCA9IGNoZWNraW5fbG9naWNhbF9jbHVzdGVyKCZjbHVzdCwgaW5vZGUpOworCQlpZiAocmVzdWx0
KQorCQkJZ290byBlcnIyOworCisJCWJ1ZiAgICs9IHdpbi5jb3VudDsKKwkJY291bnQgLT0gd2lu
LmNvdW50OworCisJCXJlc3VsdCA9IGJhbGFuY2VfZGlydHlfcGFnZV9jbHVzdGVyKCZjbHVzdCwg
aW5vZGUsIDAsIGNvdW50LAorCQkJCQkJICAgIHdpbl9jb3VudF90b19ucnBhZ2VzKCZ3aW4pKTsK
KwkJaWYgKHJlc3VsdCkKKwkJCWdvdG8gZXJyMTsKKwkJYXNzZXJ0KCJlZHdhcmQtNzU1IiwgaGlu
dC0+bGgub3duZXIgPT0gTlVMTCk7CisJCXJlc2V0X2NsdXN0ZXJfcGFyYW1zKCZjbHVzdCk7CisJ
CWNvbnRpbnVlOworCWVycjI6CisJCXB1dF9wYWdlX2NsdXN0ZXIoJmNsdXN0LCBpbm9kZSwgV1JJ
VEVfT1ApOworCWVycjE6CisJCWlmIChjbHVzdC5yZXNlcnZlZCkKKwkJCWZyZWVfcmVzZXJ2ZWQ0
Y2x1c3Rlcihpbm9kZSwKKwkJCQkJICAgICAgJmNsdXN0LAorCQkJCQkgICAgICBlc3RpbWF0ZV91
cGRhdGVfY2x1c3Rlcihpbm9kZSkpOworCQlicmVhazsKKwl9IHdoaWxlIChjb3VudCk7Cisgb3V0
OgorCWRvbmVfbGgoJmhpbnQtPmxoKTsKKwlzYXZlX2ZpbGVfaGludChmaWxlLCBoaW50KTsKKyBv
dXRfbm9fbG9uZ3Rlcm1fbG9jazoKKwltdXRleF91bmxvY2soJmluZm8tPmNoZWNraW5fbXV0ZXgp
OworCWtmcmVlKGhpbnQpOworCXB1dF9jbHVzdGVyX2hhbmRsZSgmY2x1c3QpOworCWFzc2VydCgi
ZWR3YXJkLTE5NSIsCisJICAgICAgIGVyZ28oKHRvX3dyaXRlID09IGNvdW50KSwKKwkJICAgIChy
ZXN1bHQgPCAwIHx8IGNvbnQtPnN0YXRlID09IERJU1BBVENIX0FTU0lHTkVEX05FVykpKTsKKwly
ZXR1cm4gKHRvX3dyaXRlIC0gY291bnQpID8gKHRvX3dyaXRlIC0gY291bnQpIDogcmVzdWx0Owor
fQorCisvKioKKyAqIHBsdWdpbi0+d3JpdGUoKQorICogQGZpbGU6IGZpbGUgdG8gd3JpdGUgdG8K
KyAqIEBidWY6IGFkZHJlc3Mgb2YgdXNlci1zcGFjZSBidWZmZXIKKyAqIEByZWFkX2Ftb3VudDog
bnVtYmVyIG9mIGJ5dGVzIHRvIHdyaXRlCisgKiBAb2ZmOiBwb3NpdGlvbiBpbiBmaWxlIHRvIHdy
aXRlIHRvCisgKi8KK3NzaXplX3Qgd3JpdGVfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgZmlsZSAqZmls
ZSwgY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJCSAgICBzaXplX3QgY291bnQsIGxvZmZfdCAq
b2ZmLAorCQkJICAgIHN0cnVjdCBkaXNwYXRjaF9jb250ZXh0ICpjb250KQoreworCXNzaXplX3Qg
cmVzdWx0OworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7Cisg
IAlsb2ZmX3QgcG9zID0gKm9mZjsKKyAgCXN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8gKmluZm87
CisKKyAgCWFzc2VydCgiZWR3YXJkLTE0NDkiLCBjb250LT5zdGF0ZSA9PSBESVNQQVRDSF9JTlZB
TF9TVEFURSk7CisKKwlpbm9kZSA9IGZpbGVfaW5vZGUoZmlsZSk7CisJYXNzZXJ0KCJlZHdhcmQt
MTk2IiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCisJaW5mbyA9IGNyeXB0Y29t
cHJlc3NfaW5vZGVfZGF0YShpbm9kZSk7CisJY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpOwor
CisJcmVzdWx0ID0gZmlsZV9yZW1vdmVfcHJpdnMoZmlsZSk7CisJaWYgKHVubGlrZWx5KHJlc3Vs
dCAhPSAwKSkgeworCQljb250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwkJcmV0dXJuIHJl
c3VsdDsKKwl9CisJLyogcmVtb3ZlX3N1aWQgbWlnaHQgY3JlYXRlIGEgdHJhbnNhY3Rpb24gKi8K
KwlyZWlzZXI0X3R4bl9yZXN0YXJ0KGN0eCk7CisKKwlyZXN1bHQgPSBkb193cml0ZV9jcnlwdGNv
bXByZXNzKGZpbGUsIGlub2RlLCBidWYsIGNvdW50LCBwb3MsIGNvbnQpOworCisgIAlpZiAodW5s
aWtlbHkocmVzdWx0IDwgMCkpIHsKKwkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJ
CXJldHVybiByZXN1bHQ7CisJfQorICAJLyogdXBkYXRlIHBvc2l0aW9uIGluIGEgZmlsZSAqLwor
ICAJKm9mZiA9IHBvcyArIHJlc3VsdDsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBwbHVnaW4t
PnJlYWRwYWdlcyAqLworaW50IHJlYWRwYWdlc19jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICpm
aWxlLCBzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZywKKwkJCSAgICBzdHJ1Y3QgbGlzdF9o
ZWFkICpwYWdlcywgdW5zaWduZWQgbnJfcGFnZXMpCit7CisJcmVpc2VyNF9jb250ZXh0ICogY3R4
OworCWludCByZXQ7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChtYXBwaW5nLT5ob3N0
LT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpIHsKKwkJcmV0ID0gUFRSX0VSUihjdHgpOworCQln
b3RvIGVycjsKKwl9CisJLyogY3J5cHRjb21wcmVzcyBmaWxlIGNhbiBiZSBidWlsdCBvZiBjdGFp
bCBpdGVtcyBvbmx5ICovCisJcmV0ID0gcmVhZHBhZ2VzX2N0YWlsKGZpbGUsIG1hcHBpbmcsIHBh
Z2VzKTsKKwlyZWlzZXI0X3R4bl9yZXN0YXJ0KGN0eCk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQo
Y3R4KTsKKwlpZiAocmV0KSB7CitlcnI6CisJCXB1dF9wYWdlc19saXN0KHBhZ2VzKTsKKwl9CisJ
cmV0dXJuIHJldDsKK30KKworc3RhdGljIHJlaXNlcjRfYmxvY2tfbnIgY3J5cHRjb21wcmVzc19l
c3RpbWF0ZV9yZWFkKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJLyogcmVzZXJ2ZSBvbmUgYmxv
Y2sgdG8gdXBkYXRlIHN0YXQgZGF0YSBpdGVtICovCisJYXNzZXJ0KCJlZHdhcmQtMTE5MyIsCisJ
ICAgICAgIGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKS0+ZXN0aW1hdGUudXBkYXRlID09CisJICAg
ICAgIGVzdGltYXRlX3VwZGF0ZV9jb21tb24pOworCXJldHVybiBlc3RpbWF0ZV91cGRhdGVfY29t
bW9uKGlub2RlKTsKK30KKworLyoqCisgKiBwbHVnaW4tPnJlYWQKKyAqIEBmaWxlOiBmaWxlIHRv
IHJlYWQgZnJvbQorICogQGJ1ZjogYWRkcmVzcyBvZiB1c2VyLXNwYWNlIGJ1ZmZlcgorICogQHJl
YWRfYW1vdW50OiBudW1iZXIgb2YgYnl0ZXMgdG8gcmVhZAorICogQG9mZjogcG9zaXRpb24gaW4g
ZmlsZSB0byByZWFkIGZyb20KKyAqLworc3NpemVfdCByZWFkX2NyeXB0Y29tcHJlc3Moc3RydWN0
IGZpbGUgKiBmaWxlLCBjaGFyIF9fdXNlciAqYnVmLCBzaXplX3Qgc2l6ZSwKKwkJCSAgIGxvZmZf
dCAqIG9mZikKK3sKKwlzc2l6ZV90IHJlc3VsdDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCXJl
aXNlcjRfY29udGV4dCAqY3R4OworCXN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8gKmluZm87CisJ
cmVpc2VyNF9ibG9ja19uciBuZWVkZWQ7CisKKwlpbm9kZSA9IGZpbGVfaW5vZGUoZmlsZSk7CisJ
YXNzZXJ0KCJlZHdhcmQtMTE5NCIsICFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlT
RVI0X05PX1NEKSk7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChpbm9kZS0+aV9zYik7
CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCisJaW5mbyA9IGNy
eXB0Y29tcHJlc3NfaW5vZGVfZGF0YShpbm9kZSk7CisJbmVlZGVkID0gY3J5cHRjb21wcmVzc19l
c3RpbWF0ZV9yZWFkKGlub2RlKTsKKworCXJlc3VsdCA9IHJlaXNlcjRfZ3JhYl9zcGFjZShuZWVk
ZWQsIEJBX0NBTl9DT01NSVQpOworCWlmIChyZXN1bHQgIT0gMCkgeworCQlyZWlzZXI0X2V4aXRf
Y29udGV4dChjdHgpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKwlyZXN1bHQgPSBuZXdfc3luY19y
ZWFkKGZpbGUsIGJ1Ziwgc2l6ZSwgb2ZmKTsKKworCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhj
dHgpOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisKKwlyZXR1cm4gcmVzdWx0OworfQor
CisvKiBTZXQgbGVmdCBjb29yZCB3aGVuIHVuaXQgaXMgbm90IGZvdW5kIGFmdGVyIG5vZGVfbG9v
a3VwKCkKKyAgIFRoaXMgdGFrZXMgaW50byBhY2NvdW50IHRoYXQgdGhlcmUgY2FuIGJlIGhvbGVz
IGluIGEgc2VxdWVuY2UKKyAgIG9mIGRpc2sgY2x1c3RlcnMgKi8KKworc3RhdGljIHZvaWQgYWRq
dXN0X2xlZnRfY29vcmQoY29vcmRfdCAqIGxlZnRfY29vcmQpCit7CisJc3dpdGNoIChsZWZ0X2Nv
b3JkLT5iZXR3ZWVuKSB7CisJY2FzZSBBRlRFUl9VTklUOgorCQlsZWZ0X2Nvb3JkLT5iZXR3ZWVu
ID0gQUZURVJfSVRFTTsKKwljYXNlIEFGVEVSX0lURU06CisJY2FzZSBCRUZPUkVfVU5JVDoKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJaW1wb3NzaWJsZSgiZWR3YXJkLTEyMDQiLCAiYmFkIGxlZnQg
Y29vcmQgdG8gY3V0Iik7CisJfQorCXJldHVybjsKK30KKworI2RlZmluZSBDUkNfQ1VUX1RSRUVf
TUlOX0lURVJBVElPTlMgNjQKKworLyogcGx1Z2luLT5jdXRfdHJlZV93b3JrZXIgKi8KK2ludCBj
dXRfdHJlZV93b3JrZXJfY3J5cHRjb21wcmVzcyh0YXBfdCAqIHRhcCwgY29uc3QgcmVpc2VyNF9r
ZXkgKiBmcm9tX2tleSwKKwkJCQkgIGNvbnN0IHJlaXNlcjRfa2V5ICogdG9fa2V5LAorCQkJCSAg
cmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkJCSAgc3RydWN0IGlub2RlICpvYmpl
Y3QsIGludCB0cnVuY2F0ZSwKKwkJCQkgIGludCAqcHJvZ3Jlc3MpCit7CisJbG9ja19oYW5kbGUg
bmV4dF9ub2RlX2xvY2s7CisJY29vcmRfdCBsZWZ0X2Nvb3JkOworCWludCByZXN1bHQ7CisKKwlh
c3NlcnQoImVkd2FyZC0xMTU4IiwgdGFwLT5jb29yZC0+bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQo
ImVkd2FyZC0xMTU5Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKHRhcC0+Y29vcmQtPm5vZGUpKTsK
Kwlhc3NlcnQoImVkd2FyZC0xMTYwIiwgem5vZGVfZ2V0X2xldmVsKHRhcC0+Y29vcmQtPm5vZGUp
ID09IExFQUZfTEVWRUwpOworCisJKnByb2dyZXNzID0gMDsKKwlpbml0X2xoKCZuZXh0X25vZGVf
bG9jayk7CisKKwl3aGlsZSAoMSkgeworCQl6bm9kZSAqbm9kZTsJLyogbm9kZSBmcm9tIHdoaWNo
IGl0ZW1zIGFyZSBjdXQgKi8KKwkJbm9kZV9wbHVnaW4gKm5wbHVnOwkvKiBub2RlIHBsdWdpbiBm
b3IgQG5vZGUgKi8KKworCQlub2RlID0gdGFwLT5jb29yZC0+bm9kZTsKKworCQkvKiBNb3ZlIG5l
eHRfbm9kZV9sb2NrIHRvIHRoZSBuZXh0IG5vZGUgb24gdGhlIGxlZnQuICovCisJCXJlc3VsdCA9
CisJCSAgICByZWlzZXI0X2dldF9sZWZ0X25laWdoYm9yKCZuZXh0X25vZGVfbG9jaywgbm9kZSwK
KwkJCQkJICAgICAgWk5PREVfV1JJVEVfTE9DSywKKwkJCQkJICAgICAgR05fQ0FOX1VTRV9VUFBF
Ul9MRVZFTFMpOworCQlpZiAocmVzdWx0ICE9IDAgJiYgcmVzdWx0ICE9IC1FX05PX05FSUdIQk9S
KQorCQkJYnJlYWs7CisJCS8qIEZJWE1FLUVEV0FSRDogQ2hlY2sgY2FuIHdlIGRlbGV0ZSB0aGUg
bm9kZSBhcyBhIHdob2xlLiAqLworCQlyZXN1bHQgPSByZWlzZXI0X3RhcF9sb2FkKHRhcCk7CisJ
CWlmIChyZXN1bHQpCisJCQlyZXR1cm4gcmVzdWx0OworCisJCS8qIFByZXBhcmUgdGhlIHNlY29u
ZCAocmlnaHQpIHBvaW50IGZvciBjdXRfbm9kZSgpICovCisJCWlmICgqcHJvZ3Jlc3MpCisJCQlj
b29yZF9pbml0X2xhc3RfdW5pdCh0YXAtPmNvb3JkLCBub2RlKTsKKworCQllbHNlIGlmIChpdGVt
X3BsdWdpbl9ieV9jb29yZCh0YXAtPmNvb3JkKS0+Yi5sb29rdXAgPT0gTlVMTCkKKwkJCS8qIHNl
dCByaWdodG1vc3QgdW5pdCBmb3IgdGhlIGl0ZW1zIHdpdGhvdXQgbG9va3VwIG1ldGhvZCAqLwor
CQkJdGFwLT5jb29yZC0+dW5pdF9wb3MgPSBjb29yZF9sYXN0X3VuaXRfcG9zKHRhcC0+Y29vcmQp
OworCisJCW5wbHVnID0gbm9kZS0+bnBsdWc7CisKKwkJYXNzZXJ0KCJlZHdhcmQtMTE2MSIsIG5w
bHVnKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTE2MiIsIG5wbHVnLT5sb29rdXApOworCisJCS8qIGxl
ZnRfY29vcmQgaXMgbGVmdG1vc3QgdW5pdCBjdXQgZnJvbSBAbm9kZSAqLworCQlyZXN1bHQgPSBu
cGx1Zy0+bG9va3VwKG5vZGUsIGZyb21fa2V5LCBGSU5EX0VYQUNULCAmbGVmdF9jb29yZCk7CisK
KwkJaWYgKElTX0NCS0VSUihyZXN1bHQpKQorCQkJYnJlYWs7CisKKwkJaWYgKHJlc3VsdCA9PSBD
QktfQ09PUkRfTk9URk9VTkQpCisJCQlhZGp1c3RfbGVmdF9jb29yZCgmbGVmdF9jb29yZCk7CisK
KwkJLyogYWRqdXN0IGNvb3JkaW5hdGVzIHNvIHRoYXQgdGhleSBhcmUgc2V0IHRvIGV4aXN0aW5n
IHVuaXRzICovCisJCWlmIChjb29yZF9zZXRfdG9fcmlnaHQoJmxlZnRfY29vcmQpCisJCSAgICB8
fCBjb29yZF9zZXRfdG9fbGVmdCh0YXAtPmNvb3JkKSkgeworCQkJcmVzdWx0ID0gMDsKKwkJCWJy
ZWFrOworCQl9CisKKwkJaWYgKGNvb3JkX2NvbXBhcmUoJmxlZnRfY29vcmQsIHRhcC0+Y29vcmQp
ID09CisJCSAgICBDT09SRF9DTVBfT05fUklHSFQpIHsKKwkJCS8qIGtleXMgZnJvbSBAZnJvbV9r
ZXkgdG8gQHRvX2tleSBhcmUgbm90IGluIHRoZSB0cmVlICovCisJCQlyZXN1bHQgPSAwOworCQkJ
YnJlYWs7CisJCX0KKworCQkvKiBjdXQgZGF0YSBmcm9tIG9uZSBub2RlICovCisJCSpzbWFsbGVz
dF9yZW1vdmVkID0gKnJlaXNlcjRfbWluX2tleSgpOworCQlyZXN1bHQgPSBraWxsX25vZGVfY29u
dGVudCgmbGVmdF9jb29yZCwKKwkJCQkJICAgdGFwLT5jb29yZCwKKwkJCQkJICAgZnJvbV9rZXks
CisJCQkJCSAgIHRvX2tleSwKKwkJCQkJICAgc21hbGxlc3RfcmVtb3ZlZCwKKwkJCQkJICAgbmV4
dF9ub2RlX2xvY2subm9kZSwKKwkJCQkJICAgb2JqZWN0LCB0cnVuY2F0ZSk7CisJCXJlaXNlcjRf
dGFwX3JlbHNlKHRhcCk7CisKKwkJaWYgKHJlc3VsdCkKKwkJCWJyZWFrOworCisJCSsrKCpwcm9n
cmVzcyk7CisKKwkJLyogQ2hlY2sgd2hldGhlciBhbGwgaXRlbXMgd2l0aCBrZXlzID49IGZyb21f
a2V5IHdlcmUgcmVtb3ZlZAorCQkgKiBmcm9tIHRoZSB0cmVlLiAqLworCQlpZiAoa2V5bGUoc21h
bGxlc3RfcmVtb3ZlZCwgZnJvbV9rZXkpKQorCQkJLyogcmVzdWx0ID0gMDsgKi8KKwkJCWJyZWFr
OworCisJCWlmIChuZXh0X25vZGVfbG9jay5ub2RlID09IE5VTEwpCisJCQlicmVhazsKKworCQly
ZXN1bHQgPSByZWlzZXI0X3RhcF9tb3ZlKHRhcCwgJm5leHRfbm9kZV9sb2NrKTsKKwkJZG9uZV9s
aCgmbmV4dF9ub2RlX2xvY2spOworCQlpZiAocmVzdWx0KQorCQkJYnJlYWs7CisKKwkJLyogQnJl
YWsgbG9uZyBjdXRfdHJlZSBvcGVyYXRpb24gKGRlbGV0aW9uIG9mIGEgbGFyZ2UgZmlsZSkgaWYK
KwkJICogYXRvbSByZXF1aXJlcyBjb21taXQuICovCisJCWlmICgqcHJvZ3Jlc3MgPiBDUkNfQ1VU
X1RSRUVfTUlOX0lURVJBVElPTlMKKwkJICAgICYmIGN1cnJlbnRfYXRvbV9zaG91bGRfY29tbWl0
KCkpIHsKKwkJCXJlc3VsdCA9IC1FX1JFUEVBVDsKKwkJCWJyZWFrOworCQl9CisJfQorCWRvbmVf
bGgoJm5leHRfbm9kZV9sb2NrKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgaW50IGV4
cGFuZF9jcnlwdGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2xkIHNpemUgKi8sCisJ
CQkJbG9mZl90IG5ld19zaXplKQoreworCWludCByZXN1bHQgPSAwOworCWhpbnRfdCAqaGludDsK
Kwlsb2NrX2hhbmRsZSAqbGg7CisJbG9mZl90IGhvbGVfc2l6ZTsKKwlpbnQgbnJfemVyb2VzOwor
CXN0cnVjdCByZWlzZXI0X3NsaWRlIHdpbjsKKwlzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgY2x1c3Q7
CisKKwlhc3NlcnQoImVkd2FyZC0xMTMzIiwgaW5vZGUtPmlfc2l6ZSA8IG5ld19zaXplKTsKKwlh
c3NlcnQoImVkd2FyZC0xMTM0IiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKwlhc3NlcnQoImVk
d2FyZC0xMTM1IiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCWFzc2VydCgiZWR3
YXJkLTExMzYiLCBjdXJyZW50X2Jsb2Nrc2l6ZSA9PSBQQUdFX1NJWkUpOworCisJaGludCA9IGtt
YWxsb2Moc2l6ZW9mKCpoaW50KSwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmICho
aW50ID09IE5VTEwpCisJCXJldHVybiBSRVRFUlIoLUVOT01FTSk7CisJaGludF9pbml0X3plcm8o
aGludCk7CisJbGggPSAmaGludC0+bGg7CisKKwlyZWlzZXI0X3NsaWRlX2luaXQoJndpbik7CisJ
Y2x1c3Rlcl9pbml0X3JlYWQoJmNsdXN0LCAmd2luKTsKKwljbHVzdC5oaW50ID0gaGludDsKKwor
CWlmIChvZmZfdG9fY2xvZmYoaW5vZGUtPmlfc2l6ZSwgaW5vZGUpID09IDApCisJCWdvdG8gYXBw
ZW5kX2hvbGU7CisJLyoKKwkgKiBJdCBjYW4gaGFwcGVuIHRoYXQKKwkgKiBhIHBhcnQgb2YgdGhl
IGhvbGUgd2lsbCBiZSBjb252ZXJ0ZWQKKwkgKiB0byB6ZXJvcy4gSWYgc28sIGl0IHNob3VsZCBi
ZSBzdWJtaXR0ZWQKKwkgKi8KKwlyZXN1bHQgPSBhbGxvY19jbHVzdGVyX3Bnc2V0KCZjbHVzdCwg
Y2x1c3Rlcl9ucnBhZ2VzKGlub2RlKSk7CisJaWYgKHJlc3VsdCkKKwkJZ290byBvdXQ7CisJaG9s
ZV9zaXplID0gbmV3X3NpemUgLSBpbm9kZS0+aV9zaXplOworCW5yX3plcm9lcyA9IGlub2RlX2Ns
dXN0ZXJfc2l6ZShpbm9kZSkgLQorCQlvZmZfdG9fY2xvZmYoaW5vZGUtPmlfc2l6ZSwgaW5vZGUp
OworCWlmIChucl96ZXJvZXMgPiBob2xlX3NpemUpCisJCW5yX3plcm9lcyA9IGhvbGVfc2l6ZTsK
KworCXNldF93aW5kb3coJmNsdXN0LCAmd2luLCBpbm9kZSwgaW5vZGUtPmlfc2l6ZSwKKwkJICAg
aW5vZGUtPmlfc2l6ZSArIG5yX3plcm9lcyk7CisJd2luLnN0YXQgPSBIT0xFX1dJTkRPVzsKKwor
CWFzc2VydCgiZWR3YXJkLTExMzciLAorCSAgICAgICBjbHVzdC5pbmRleCA9PSBvZmZfdG9fY2x1
c3QoaW5vZGUtPmlfc2l6ZSwgaW5vZGUpKTsKKworCXJlc3VsdCA9IHByZXBhcmVfbG9naWNhbF9j
bHVzdGVyKGlub2RlLCAwLCAwLCAmY2x1c3QsIExDX0VYUEFORCk7CisJaWYgKHJlc3VsdCkKKwkJ
Z290byBvdXQ7CisJYXNzZXJ0KCJlZHdhcmQtMTEzOSIsCisJICAgICAgIGNsdXN0LmRzdGF0ID09
IFBSRVBfRElTS19DTFVTVEVSIHx8CisJICAgICAgIGNsdXN0LmRzdGF0ID09IFVOUFJfRElTS19D
TFVTVEVSIHx8CisJICAgICAgIGNsdXN0LmRzdGF0ID09IEZBS0VfRElTS19DTFVTVEVSKTsKKwor
CWFzc2VydCgiZWR3YXJkLTE0MzEiLCBob2xlX3NpemUgPj0gbnJfemVyb2VzKTsKKworIGFwcGVu
ZF9ob2xlOgorCUlOT0RFX1NFVF9TSVpFKGlub2RlLCBuZXdfc2l6ZSk7Cisgb3V0OgorCWRvbmVf
bGgobGgpOworCWtmcmVlKGhpbnQpOworCXB1dF9jbHVzdGVyX2hhbmRsZSgmY2x1c3QpOworCXJl
dHVybiByZXN1bHQ7Cit9CisKK3N0YXRpYyBpbnQgdXBkYXRlX3NpemVfYWN0b3Ioc3RydWN0IGlu
b2RlICppbm9kZSwKKwkJCSAgICAgbG9mZl90IG5ld19zaXplLCBpbnQgdXBkYXRlX3NkKQorewor
CWlmIChuZXdfc2l6ZSAmICgobG9mZl90KSAoaW5vZGVfY2x1c3Rlcl9zaXplKGlub2RlKSkgLSAx
KSkKKwkJLyoKKwkJICogY3V0IG5vdCBhdCBsb2dpY2FsIGNsdXN0ZXIgYm91bmRhcnksCisJCSAq
IHNpemUgd2lsbCBiZSB1cGRhdGVkIGJ5IHdyaXRlX2hvbGUoKQorCQkgKi8KKwkJcmV0dXJuIDA7
CisJZWxzZQorCQlyZXR1cm4gcmVpc2VyNF91cGRhdGVfZmlsZV9zaXplKGlub2RlLCBuZXdfc2l6
ZSwgdXBkYXRlX3NkKTsKK30KKworc3RhdGljIGludCBwcnVuZV9jcnlwdGNvbXByZXNzKHN0cnVj
dCBpbm9kZSAqaW5vZGUsCisJCQkgICAgICAgbG9mZl90IG5ld19zaXplLCBpbnQgdXBkYXRlX3Nk
KQoreworCWludCByZXN1bHQgPSAwOworCXVuc2lnbmVkIG5yX3plcm9zOworCWxvZmZfdCB0b19w
cnVuZTsKKwlsb2ZmX3Qgb2xkX3NpemU7CisJY2xvZmZfdCBmcm9tX2lkeDsKKwljbG9mZl90IHRv
X2lkeDsKKworCWhpbnRfdCAqaGludDsKKwlsb2NrX2hhbmRsZSAqbGg7CisJc3RydWN0IHJlaXNl
cjRfc2xpZGUgd2luOworCXN0cnVjdCBjbHVzdGVyX2hhbmRsZSBjbHVzdDsKKworCWFzc2VydCgi
ZWR3YXJkLTExNDAiLCBpbm9kZS0+aV9zaXplID49IG5ld19zaXplKTsKKwlhc3NlcnQoImVkd2Fy
ZC0xMTQxIiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKwlhc3NlcnQoImVkd2FyZC0xMTQyIiwg
Y3J5cHRjb21wcmVzc19pbm9kZV9vayhpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTExNDMiLCBj
dXJyZW50X2Jsb2Nrc2l6ZSA9PSBQQUdFX1NJWkUpOworCisJb2xkX3NpemUgPSBpbm9kZS0+aV9z
aXplOworCisJaGludCA9IGttYWxsb2Moc2l6ZW9mKCpoaW50KSwgcmVpc2VyNF9jdHhfZ2ZwX21h
c2tfZ2V0KCkpOworCWlmIChoaW50ID09IE5VTEwpCisJCXJldHVybiBSRVRFUlIoLUVOT01FTSk7
CisJaGludF9pbml0X3plcm8oaGludCk7CisJbGggPSAmaGludC0+bGg7CisKKwlyZWlzZXI0X3Ns
aWRlX2luaXQoJndpbik7CisJY2x1c3Rlcl9pbml0X3JlYWQoJmNsdXN0LCAmd2luKTsKKwljbHVz
dC5oaW50ID0gaGludDsKKworCS8qCisJICogaW5kZXggb2YgdGhlIGxlZnRtb3N0IGxvZ2ljYWwg
Y2x1c3RlcgorCSAqIHRoYXQgd2lsbCBiZSBjb21wbGV0ZWx5IHRydW5jYXRlZAorCSAqLworCWZy
b21faWR4ID0gc2l6ZV9pbl9sYyhuZXdfc2l6ZSwgaW5vZGUpOworCXRvX2lkeCA9IHNpemVfaW5f
bGMoaW5vZGUtPmlfc2l6ZSwgaW5vZGUpOworCS8qCisJICogdHJ1bmNhdGUgYWxsIGNvbXBsZXRl
IGRpc2sgY2x1c3RlcnMgc3RhcnRpbmcgZnJvbSBAZnJvbV9pZHgKKwkgKi8KKwlhc3NlcnQoImVk
d2FyZC0xMTc0IiwgZnJvbV9pZHggPD0gdG9faWR4KTsKKworCW9sZF9zaXplID0gaW5vZGUtPmlf
c2l6ZTsKKwlpZiAoZnJvbV9pZHggIT0gdG9faWR4KSB7CisJCXN0cnVjdCBjcnlwdGNvbXByZXNz
X2luZm8gKmluZm87CisJCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpOwor
CisJCXJlc3VsdCA9IGN1dF9maWxlX2l0ZW1zKGlub2RlLAorCQkJCQljbHVzdF90b19vZmYoZnJv
bV9pZHgsIGlub2RlKSwKKwkJCQkJdXBkYXRlX3NkLAorCQkJCQljbHVzdF90b19vZmYodG9faWR4
LCBpbm9kZSksCisJCQkJCXVwZGF0ZV9zaXplX2FjdG9yKTsKKwkJaW5mby0+dHJ1bmNfaW5kZXgg
PSBVTE9OR19NQVg7CisJCWlmICh1bmxpa2VseShyZXN1bHQgPT0gQ0JLX0NPT1JEX05PVEZPVU5E
KSkKKwkJCXJlc3VsdCA9IDA7CisJCWlmICh1bmxpa2VseShyZXN1bHQpKQorCQkJZ290byBvdXQ7
CisJfQorCWlmIChvZmZfdG9fY2xvZmYobmV3X3NpemUsIGlub2RlKSA9PSAwKQorCQlnb3RvIHRy
dW5jYXRlX2hvbGU7CisKKwlhc3NlcnQoImVkd2FyZC0xMTQ2IiwgbmV3X3NpemUgPCBpbm9kZS0+
aV9zaXplKTsKKworCXRvX3BydW5lID0gaW5vZGUtPmlfc2l6ZSAtIG5ld19zaXplOworCS8qCisJ
ICogUGFydGlhbCB0cnVuY2F0ZSBvZiB0aGUgbGFzdCBsb2dpY2FsIGNsdXN0ZXIuCisJICogUGFy
dGlhbCBob2xlIHdpbGwgYmUgY29udmVydGVkIHRvIHplcm9zLiBUaGUgcmVzdWx0ZWQKKwkgKiBs
b2dpY2FsIGNsdXN0ZXIgd2lsbCBiZSBjYXB0dXJlZCBhbmQgc3VibWl0dGVkIHRvIGRpc2sKKwkg
Ki8KKwlyZXN1bHQgPSBhbGxvY19jbHVzdGVyX3Bnc2V0KCZjbHVzdCwgY2x1c3Rlcl9ucnBhZ2Vz
KGlub2RlKSk7CisJaWYgKHJlc3VsdCkKKwkJZ290byBvdXQ7CisKKwlucl96ZXJvcyA9IG9mZl90
b19wZ29mZihuZXdfc2l6ZSk7CisJaWYgKG5yX3plcm9zKQorCQlucl96ZXJvcyA9IFBBR0VfU0la
RSAtIG5yX3plcm9zOworCisJc2V0X3dpbmRvdygmY2x1c3QsICZ3aW4sIGlub2RlLCBuZXdfc2l6
ZSwgbmV3X3NpemUgKyBucl96ZXJvcyk7CisJd2luLnN0YXQgPSBIT0xFX1dJTkRPVzsKKworCWFz
c2VydCgiZWR3YXJkLTExNDkiLCBjbHVzdC5pbmRleCA9PSBmcm9tX2lkeCAtIDEpOworCisJcmVz
dWx0ID0gcHJlcGFyZV9sb2dpY2FsX2NsdXN0ZXIoaW5vZGUsIDAsIDAsICZjbHVzdCwgTENfU0hS
SU5LKTsKKwlpZiAocmVzdWx0KQorCQlnb3RvIG91dDsKKwlhc3NlcnQoImVkd2FyZC0xMTUxIiwK
KwkgICAgICAgY2x1c3QuZHN0YXQgPT0gUFJFUF9ESVNLX0NMVVNURVIgfHwKKwkgICAgICAgY2x1
c3QuZHN0YXQgPT0gVU5QUl9ESVNLX0NMVVNURVIgfHwKKwkgICAgICAgY2x1c3QuZHN0YXQgPT0g
RkFLRV9ESVNLX0NMVVNURVIpOworIHRydW5jYXRlX2hvbGU6CisJLyoKKwkgKiBkcm9wIGFsbCB0
aGUgcGFnZXMgdGhhdCBkb24ndCBoYXZlIGpub2RlcyAoaS5lLiBwYWdlcworCSAqIHdoaWNoIGNh
biBub3QgYmUgdHJ1bmNhdGVkIGJ5IGN1dF9maWxlX2l0ZW1zKCkgYmVjYXVzZQorCSAqIG9mIGhv
bGVzIHJlcHJlc2VudGVkIGJ5IGZha2UgZGlzayBjbHVzdGVycykgaW5jbHVkaW5nCisJICogdGhl
IHBhZ2VzIG9mIHBhcnRpYWxseSB0cnVuY2F0ZWQgY2x1c3RlciB3aGljaCB3YXMKKwkgKiByZWxl
YXNlZCBieSBwcmVwYXJlX2xvZ2ljYWxfY2x1c3RlcigpCisJICovCisJSU5PREVfU0VUX1NJWkUo
aW5vZGUsIG5ld19zaXplKTsKKwl0cnVuY2F0ZV9pbm9kZV9wYWdlcyhpbm9kZS0+aV9tYXBwaW5n
LCBuZXdfc2l6ZSk7Cisgb3V0OgorCWFzc2VydCgiZWR3YXJkLTE0OTciLAorCSAgICAgICBwYWdl
c190cnVuY2F0ZV9vayhpbm9kZSwgc2l6ZV9pbl9wYWdlcyhuZXdfc2l6ZSkpKTsKKworCWRvbmVf
bGgobGgpOworCWtmcmVlKGhpbnQpOworCXB1dF9jbHVzdGVyX2hhbmRsZSgmY2x1c3QpOworCXJl
dHVybiByZXN1bHQ7Cit9CisKKy8qKgorICogQ2FwdHVyZSBhIHBhZ2VyIGNsdXN0ZXIuCisgKiBA
Y2x1c3QgbXVzdCBiZSBzZXQgdXAgYnkgYSBjYWxsZXIuCisgKi8KK3N0YXRpYyBpbnQgY2FwdHVy
ZV9wYWdlX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsCisJCQkJc3RydWN0
IGlub2RlICogaW5vZGUpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiZWR3YXJkLTEwNzMi
LCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMDc0IiwgaW5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0KCJlZHdhcmQtMTA3NSIsIGNsdXN0LT5kc3RhdCA9PSBJTlZBTF9ESVNLX0NMVVNU
RVIpOworCisJcmVzdWx0ID0gcHJlcGFyZV9sb2dpY2FsX2NsdXN0ZXIoaW5vZGUsIDAsIDAsIGNs
dXN0LCBMQ19BUFBPVik7CisJaWYgKHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKworCXNldF9j
bHVzdGVyX3BhZ2VzX2RpcnR5KGNsdXN0LCBpbm9kZSk7CisJcmVzdWx0ID0gY2hlY2tpbl9sb2dp
Y2FsX2NsdXN0ZXIoY2x1c3QsIGlub2RlKTsKKwlwdXRfaGludF9jbHVzdGVyKGNsdXN0LCBpbm9k
ZSwgWk5PREVfV1JJVEVfTE9DSyk7CisJaWYgKHVubGlrZWx5KHJlc3VsdCkpCisJCXB1dF9wYWdl
X2NsdXN0ZXIoY2x1c3QsIGlub2RlLCBXUklURV9PUCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKwor
LyogU3RhcnRpbmcgZnJvbSBAaW5kZXggZmluZCB0YWdnZWQgcGFnZXMgb2YgdGhlIHNhbWUgcGFn
ZSBjbHVzdGVyLgorICogQ2xlYXIgdGhlIHRhZyBmb3IgZWFjaCBvZiB0aGVtLiBSZXR1cm4gbnVt
YmVyIG9mIGZvdW5kIHBhZ2VzLgorICovCitzdGF0aWMgaW50IGZpbmRfYW5vbl9wYWdlX2NsdXN0
ZXIoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKiBtYXBwaW5nLAorCQkJCSAgcGdvZmZfdCAqIGluZGV4
LCBzdHJ1Y3QgcGFnZSAqKiBwYWdlcykKK3sKKwlpbnQgaSA9IDA7CisJaW50IGZvdW5kOworCXhh
X2xvY2tfaXJxKCZtYXBwaW5nLT5pX3BhZ2VzKTsKKwlkbyB7CisJCS8qIGxvb2tpbmcgZm9yIG9u
ZSBwYWdlICovCisJCWZvdW5kID0gcmFkaXhfdHJlZV9nYW5nX2xvb2t1cF90YWcoJm1hcHBpbmct
PmlfcGFnZXMsCisJCQkJCQkgICAodm9pZCAqKikmcGFnZXNbaV0sCisJCQkJCQkgICAqaW5kZXgs
IDEsCisJCQkJCQkgICBQQUdFQ0FDSEVfVEFHX1JFSVNFUjRfTU9WRUQpOworCQlpZiAoIWZvdW5k
KQorCQkJYnJlYWs7CisJCWlmICghc2FtZV9wYWdlX2NsdXN0ZXIocGFnZXNbMF0sIHBhZ2VzW2ld
KSkKKwkJCWJyZWFrOworCisJCS8qIGZvdW5kICovCisJCWdldF9wYWdlKHBhZ2VzW2ldKTsKKwkJ
KmluZGV4ID0gcGFnZXNbaV0tPmluZGV4ICsgMTsKKworCQlyYWRpeF90cmVlX3RhZ19jbGVhcigm
bWFwcGluZy0+aV9wYWdlcywKKwkJCQkgICAgIHBhZ2VzW2ldLT5pbmRleCwKKwkJCQkgICAgIFBB
R0VDQUNIRV9UQUdfUkVJU0VSNF9NT1ZFRCk7CisJCWlmIChsYXN0X3BhZ2VfaW5fY2x1c3Rlcihw
YWdlc1tpKytdKSkKKwkJCWJyZWFrOworCX0gd2hpbGUgKDEpOworCXhhX3VubG9ja19pcnEoJm1h
cHBpbmctPmlfcGFnZXMpOworCXJldHVybiBpOworfQorCisjZGVmaW5lIE1BWF9QQUdFU19UT19D
QVBUVVJFICAoMTAyNCkKKworLyogQ2FwdHVyZSBhbm9ueW1vdXMgcGFnZSBjbHVzdGVycyAqLwor
c3RhdGljIGludCBjYXB0dXJlX2Fub25fcGFnZXMoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKiBtYXBw
aW5nLCBwZ29mZl90ICogaW5kZXgsCisJCQkgICAgICBpbnQgdG9fY2FwdHVyZSkKK3sKKwlpbnQg
Y291bnQgPSAwOworCWludCBmb3VuZCA9IDA7CisJaW50IHJlc3VsdCA9IDA7CisJaGludF90ICpo
aW50OworCWxvY2tfaGFuZGxlICpsaDsKKwlzdHJ1Y3QgaW5vZGUgKiBpbm9kZTsKKwlzdHJ1Y3Qg
Y2x1c3Rlcl9oYW5kbGUgY2x1c3Q7CisJc3RydWN0IHBhZ2UgKiBwYWdlc1tNQVhfQ0xVU1RFUl9O
UlBBR0VTXTsKKworCWFzc2VydCgiZWR3YXJkLTExMjciLCBtYXBwaW5nICE9IE5VTEwpOworCWFz
c2VydCgiZWR3YXJkLTExMjgiLCBtYXBwaW5nLT5ob3N0ICE9IE5VTEwpOworCWFzc2VydCgiZWR3
YXJkLTE0NDAiLCBtYXBwaW5nLT5ob3N0LT5pX21hcHBpbmcgPT0gbWFwcGluZyk7CisKKwlpbm9k
ZSA9IG1hcHBpbmctPmhvc3Q7CisJaGludCA9IGttYWxsb2Moc2l6ZW9mKCpoaW50KSwgcmVpc2Vy
NF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChoaW50ID09IE5VTEwpCisJCXJldHVybiBSRVRF
UlIoLUVOT01FTSk7CisJaGludF9pbml0X3plcm8oaGludCk7CisJbGggPSAmaGludC0+bGg7CisK
KwljbHVzdGVyX2luaXRfcmVhZCgmY2x1c3QsIE5VTEwgLyogbm8gc2xpZGluZyB3aW5kb3cgKi8p
OworCWNsdXN0LmhpbnQgPSBoaW50OworCisJcmVzdWx0ID0gYWxsb2NfY2x1c3Rlcl9wZ3NldCgm
Y2x1c3QsIGNsdXN0ZXJfbnJwYWdlcyhpbm9kZSkpOworCWlmIChyZXN1bHQpCisJCWdvdG8gb3V0
OworCisJd2hpbGUgKHRvX2NhcHR1cmUgPiAwKSB7CisJCWZvdW5kID0gZmluZF9hbm9uX3BhZ2Vf
Y2x1c3RlcihtYXBwaW5nLCBpbmRleCwgcGFnZXMpOworCQlpZiAoIWZvdW5kKSB7CisJCQkqaW5k
ZXggPSAocGdvZmZfdCkgLSAxOworCQkJYnJlYWs7CisJCX0KKwkJbW92ZV9jbHVzdGVyX2Zvcndh
cmQoJmNsdXN0LCBpbm9kZSwgcGFnZXNbMF0tPmluZGV4KTsKKwkJcmVzdWx0ID0gY2FwdHVyZV9w
YWdlX2NsdXN0ZXIoJmNsdXN0LCBpbm9kZSk7CisKKwkJcHV0X2ZvdW5kX3BhZ2VzKHBhZ2VzLCBm
b3VuZCk7IC8qIGZpbmRfYW5vbl9wYWdlX2NsdXN0ZXIgKi8KKwkJaWYgKHJlc3VsdCkKKwkJCWJy
ZWFrOworCQl0b19jYXB0dXJlIC09IGNsdXN0Lm5yX3BhZ2VzOworCQljb3VudCArPSBjbHVzdC5u
cl9wYWdlczsKKwl9CisJaWYgKHJlc3VsdCkgeworCQl3YXJuaW5nKCJlZHdhcmQtMTA3NyIsCisJ
CQkiQ2FwdHVyZSBmYWlsZWQgKGlub2RlICVsbHUsIHJlc3VsdD0laSwgY2FwdHVyZWQ9JWQpXG4i
LAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylnZXRfaW5vZGVfb2lkKGlub2RlKSwgcmVzdWx0LCBj
b3VudCk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJlZHdhcmQtMTA3OCIsIGVyZ28oZm91bmQgPiAw
LCBjb3VudCA+IDApKTsKKwkJaWYgKHRvX2NhcHR1cmUgPD0gMCkKKwkJCS8qIHRoZXJlIG1heSBi
ZSBsZWZ0IG1vcmUgcGFnZXMgKi8KKwkJCV9fbWFya19pbm9kZV9kaXJ0eShpbm9kZSwgSV9ESVJU
WV9QQUdFUyk7CisJCXJlc3VsdCA9IGNvdW50OworCX0KKyAgICAgIG91dDoKKwlkb25lX2xoKGxo
KTsKKwlrZnJlZShoaW50KTsKKwlwdXRfY2x1c3Rlcl9oYW5kbGUoJmNsdXN0KTsKKwlyZXR1cm4g
cmVzdWx0OworfQorCisvKiBSZXR1cm5zIHRydWUgaWYgaW5vZGUncyBtYXBwaW5nIGhhcyBkaXJ0
eSBwYWdlcworICAgd2hpY2ggZG8gbm90IGJlbG9uZyB0byBhbnkgYXRvbSAqLworc3RhdGljIGlu
dCBjcnlwdGNvbXByZXNzX2lub2RlX2hhc19hbm9uX3BhZ2VzKHN0cnVjdCBpbm9kZSAqaW5vZGUp
Cit7CisJaW50IHJlc3VsdDsKKwl4YV9sb2NrX2lycSgmaW5vZGUtPmlfbWFwcGluZy0+aV9wYWdl
cyk7CisJcmVzdWx0ID0gcmFkaXhfdHJlZV90YWdnZWQoJmlub2RlLT5pX21hcHBpbmctPmlfcGFn
ZXMsCisJCQkJICAgUEFHRUNBQ0hFX1RBR19SRUlTRVI0X01PVkVEKTsKKwl4YV91bmxvY2tfaXJx
KCZpbm9kZS0+aV9tYXBwaW5nLT5pX3BhZ2VzKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBw
bHVnaW4tPndyaXRlcGFnZXMgKi8KK2ludCB3cml0ZXBhZ2VzX2NyeXB0Y29tcHJlc3Moc3RydWN0
IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgIHN0cnVjdCB3cml0ZWJhY2tfY29udHJv
bCAqd2JjKQoreworCWludCByZXN1bHQgPSAwOworCWxvbmcgdG9fY2FwdHVyZTsKKwlwZ29mZl90
IG5ycGFnZXM7CisJcGdvZmZfdCBpbmRleCA9IDA7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlz
dHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICppbmZvOworCisJaW5vZGUgPSBtYXBwaW5nLT5ob3N0
OworCWlmICghY3J5cHRjb21wcmVzc19pbm9kZV9oYXNfYW5vbl9wYWdlcyhpbm9kZSkpCisJCWdv
dG8gZW5kOworCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpOworCW5ycGFn
ZXMgPSBzaXplX2luX3BhZ2VzKGlfc2l6ZV9yZWFkKGlub2RlKSk7CisKKwlpZiAod2JjLT5zeW5j
X21vZGUgIT0gV0JfU1lOQ19BTEwpCisJCXRvX2NhcHR1cmUgPSBtaW4od2JjLT5ucl90b193cml0
ZSwgKGxvbmcpTUFYX1BBR0VTX1RPX0NBUFRVUkUpOworCWVsc2UKKwkJdG9fY2FwdHVyZSA9IE1B
WF9QQUdFU19UT19DQVBUVVJFOworCWRvIHsKKwkJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisKKwkJ
Y3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOworCQlpZiAoSVNfRVJSKGN0
eCkpIHsKKwkJCXJlc3VsdCA9IFBUUl9FUlIoY3R4KTsKKwkJCWJyZWFrOworCQl9CisJCS8qIGF2
b2lkIHJlY3Vyc2l2ZSBjYWxscyB0byAtPnN5bmNfaW5vZGVzICovCisJCWN0eC0+bm9iYWxhbmNl
ID0gMTsKKworCQlhc3NlcnQoImVkd2FyZC0xMDc5IiwKKwkJICAgICAgIGxvY2tfc3RhY2tfaXNj
bGVhbihnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKworCQlyZWlzZXI0X3R4bl9yZXN0YXJ0
X2N1cnJlbnQoKTsKKworCQlpZiAoZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5lbnRkKSB7CisJCQlp
ZiAobXV0ZXhfdHJ5bG9jaygmaW5mby0+Y2hlY2tpbl9tdXRleCkgPT0gMCkgeworCQkJCS8qIHRo
ZSBtdXRleCBtaWdodCBiZSBvY2N1cGllZCBieQorCQkJCSAgIGVudGQgY2FsbGVyICovCisJCQkJ
cmVzdWx0ID0gUkVURVJSKC1FQlVTWSk7CisJCQkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsK
KwkJCQlicmVhazsKKwkJCX0KKwkJfSBlbHNlCisJCQltdXRleF9sb2NrKCZpbmZvLT5jaGVja2lu
X211dGV4KTsKKworCQlyZXN1bHQgPSBjYXB0dXJlX2Fub25fcGFnZXMoaW5vZGUtPmlfbWFwcGlu
ZywgJmluZGV4LAorCQkJCQkgICAgdG9fY2FwdHVyZSk7CisJCW11dGV4X3VubG9jaygmaW5mby0+
Y2hlY2tpbl9tdXRleCk7CisKKwkJaWYgKHJlc3VsdCA8IDApIHsKKwkJCXJlaXNlcjRfZXhpdF9j
b250ZXh0KGN0eCk7CisJCQlicmVhazsKKwkJfQorCQl3YmMtPm5yX3RvX3dyaXRlIC09IHJlc3Vs
dDsKKwkJaWYgKHdiYy0+c3luY19tb2RlICE9IFdCX1NZTkNfQUxMKSB7CisJCQlyZWlzZXI0X2V4
aXRfY29udGV4dChjdHgpOworCQkJYnJlYWs7CisJCX0KKwkJcmVzdWx0ID0gdHhubWdyX2ZvcmNl
X2NvbW1pdF9hbGwoaW5vZGUtPmlfc2IsIDApOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgp
OworCX0gd2hpbGUgKHJlc3VsdCA+PSAwICYmIGluZGV4IDwgbnJwYWdlcyk7CisKKyBlbmQ6CisJ
aWYgKGlzX2luX3JlaXNlcjRfY29udGV4dCgpKSB7CisJCWlmIChnZXRfY3VycmVudF9jb250ZXh0
KCktPm5yX2NhcHR1cmVkID49IENBUFRVUkVfQVBBR0VfQlVSU1QpIHsKKwkJCS8qIHRoZXJlIGFy
ZSBhbHJlYWR5IHBhZ2VzIHRvIGZsdXNoLCBmbHVzaCB0aGVtIG91dCwKKwkJCSAgIGRvIG5vdCBk
ZWxheSB1bnRpbCBlbmQgb2YgcmVpc2VyNF9zeW5jX2lub2RlcyAqLworCQkJcmVpc2VyNF93cml0
ZW91dChpbm9kZS0+aV9zYiwgd2JjKTsKKwkJCWdldF9jdXJyZW50X2NvbnRleHQoKS0+bnJfY2Fw
dHVyZWQgPSAwOworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHBsdWdpbi0+aW9j
dGwgKi8KK2ludCBpb2N0bF9jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICpmaWxwLCB1bnNpZ25l
ZCBpbnQgY21kLAorCQkJdW5zaWduZWQgbG9uZyBhcmcpCit7CisJcmV0dXJuIFJFVEVSUigtRU5P
VFRZKTsKK30KKworLyogcGx1Z2luLT5tbWFwICovCitpbnQgbW1hcF9jcnlwdGNvbXByZXNzKHN0
cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKK3sKKwlpbnQgcmVz
dWx0OworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisKKwlp
bm9kZSA9IGZpbGVfaW5vZGUoZmlsZSk7CisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5v
ZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKKwkv
KgorCSAqIGdlbmVyaWNfZmlsZV9tbWFwIHdpbGwgZG8gdXBkYXRlX2F0aW1lLiBHcmFiIHNwYWNl
IGZvciBzdGF0IGRhdGEKKwkgKiB1cGRhdGUuCisJICovCisJcmVzdWx0ID0gcmVpc2VyNF9ncmFi
X3NwYWNlX2ZvcmNlCisJCShpbm9kZV9maWxlX3BsdWdpbihpbm9kZSktPmVzdGltYXRlLnVwZGF0
ZShpbm9kZSksCisJCSBCQV9DQU5fQ09NTUlUKTsKKwlpZiAocmVzdWx0KSB7CisJCXJlaXNlcjRf
ZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCXJlc3VsdCA9IGdlbmVy
aWNfZmlsZV9tbWFwKGZpbGUsIHZtYSk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwly
ZXR1cm4gcmVzdWx0OworfQorCisvKiBwbHVnaW4tPmRlbGV0ZV9vYmplY3QgKi8KK2ludCBkZWxl
dGVfb2JqZWN0X2NyeXB0Y29tcHJlc3Moc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlpbnQgcmVz
dWx0OworCXN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8gKiBpbmZvOworCisJYXNzZXJ0KCJlZHdh
cmQtNDI5IiwgaW5vZGUtPmlfbmxpbmsgPT0gMCk7CisKKwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1
cnJlbnQoKTsKKwlpbmZvID0gY3J5cHRjb21wcmVzc19pbm9kZV9kYXRhKGlub2RlKTsKKworCW11
dGV4X2xvY2soJmluZm8tPmNoZWNraW5fbXV0ZXgpOworCXJlc3VsdCA9IHBydW5lX2NyeXB0Y29t
cHJlc3MoaW5vZGUsIDAsIDApOworCW11dGV4X3VubG9jaygmaW5mby0+Y2hlY2tpbl9tdXRleCk7
CisKKwlpZiAocmVzdWx0KSB7CisJCXdhcm5pbmcoImVkd2FyZC00MzAiLAorCQkJImNhbm5vdCB0
cnVuY2F0ZSBjcnlwdGNvbXByZXNzIGZpbGUgICVsbGk6ICVpIiwKKwkJCSh1bnNpZ25lZCBsb25n
IGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSksCisJCQlyZXN1bHQpOworCX0KKwkvKiBhbmQgcmVt
b3ZlIHN0YXQgZGF0YSAqLworCXJldHVybiByZWlzZXI0X2RlbGV0ZV9vYmplY3RfY29tbW9uKGlu
b2RlKTsKK30KKworLyoKKyAqIHBsdWdpbi0+c2V0YXR0cgorICogVGhpcyBpbXBsZW1lbnRzIGFj
dHVhbCB0cnVuY2F0ZSAoc2VlIGNvbW1lbnRzIGluIHJlaXNlcjQvcGFnZV9jYWNoZS5jKQorICov
CitpbnQgc2V0YXR0cl9jcnlwdGNvbXByZXNzKHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgc3RydWN0
IGlhdHRyICphdHRyKQoreworCWludCByZXN1bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlz
dHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICogaW5mbzsKKworCWlub2RlID0gZGVudHJ5LT5kX2lu
b2RlOworCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpOworCisJaWYgKGF0
dHItPmlhX3ZhbGlkICYgQVRUUl9TSVpFKSB7CisJCWlmIChpX3NpemVfcmVhZChpbm9kZSkgIT0g
YXR0ci0+aWFfc2l6ZSkgeworCQkJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJCQlsb2ZmX3Qgb2xk
X3NpemU7CisKKwkJCWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGRlbnRyeS0+ZF9pbm9kZS0+
aV9zYik7CisJCQlpZiAoSVNfRVJSKGN0eCkpCisJCQkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKKwkJ
CXJlc3VsdCA9IHNldGF0dHJfZGlzcGF0Y2hfaG9vayhpbm9kZSk7CisJCQlpZiAocmVzdWx0KSB7
CisJCQkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJCQkJcmVpc2VyNF9leGl0X2Nv
bnRleHQoY3R4KTsKKwkJCQlyZXR1cm4gcmVzdWx0OworCQkJfQorCQkJb2xkX3NpemUgPSBpX3Np
emVfcmVhZChpbm9kZSk7CisJCQlpbm9kZV9jaGVja19zY2FsZShpbm9kZSwgb2xkX3NpemUsIGF0
dHItPmlhX3NpemUpOworCisJCQltdXRleF9sb2NrKCZpbmZvLT5jaGVja2luX211dGV4KTsKKwkJ
CWlmIChhdHRyLT5pYV9zaXplID4gaW5vZGUtPmlfc2l6ZSkKKwkJCQlyZXN1bHQgPSBleHBhbmRf
Y3J5cHRjb21wcmVzcyhpbm9kZSwKKwkJCQkJCQkgICAgICBhdHRyLT5pYV9zaXplKTsKKwkJCWVs
c2UKKwkJCQlyZXN1bHQgPSBwcnVuZV9jcnlwdGNvbXByZXNzKGlub2RlLAorCQkJCQkJCSAgICAg
YXR0ci0+aWFfc2l6ZSwKKwkJCQkJCQkgICAgIDEvKiB1cGRhdGUgc2QgKi8pOworCQkJbXV0ZXhf
dW5sb2NrKCZpbmZvLT5jaGVja2luX211dGV4KTsKKwkJCWlmIChyZXN1bHQpIHsKKwkJCSAgICAg
d2FybmluZygiZWR3YXJkLTExOTIiLAorCQkJCSAgICAgInRydW5jYXRlX2NyeXB0Y29tcHJlc3Mg
ZmFpbGVkOiBvaWQgJWxsaSwgIgorCQkJCSAgICAgIm9sZCBzaXplICVsbGQsIG5ldyBzaXplICVs
bGQsIHJldHZhbCAlZCIsCisJCQkJICAgICAodW5zaWduZWQgbG9uZyBsb25nKQorCQkJCSAgICAg
Z2V0X2lub2RlX29pZChpbm9kZSksIG9sZF9zaXplLAorCQkJCSAgICAgYXR0ci0+aWFfc2l6ZSwg
cmVzdWx0KTsKKwkJCX0KKwkJCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCQkJcmVp
c2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJfSBlbHNlCisJCQlyZXN1bHQgPSAwOworCX0gZWxz
ZQorCQlyZXN1bHQgPSByZWlzZXI0X3NldGF0dHJfY29tbW9uKGRlbnRyeSwgYXR0cik7CisJcmV0
dXJuIHJlc3VsdDsKK30KKworLyogcGx1Z2luLT5yZWxlYXNlICovCitpbnQgcmVsZWFzZV9jcnlw
dGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQoreworCXJl
aXNlcjRfY29udGV4dCAqY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOwor
CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCXJlaXNlcjRfZnJl
ZV9maWxlX2ZzZGF0YShmaWxlKTsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCXJldHVy
biAwOworfQorCisvKiBwbHVnaW4tPndyaXRlX2JlZ2luKCkgKi8KK2ludCB3cml0ZV9iZWdpbl9j
cnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgcGFnZSAqcGFnZSwKKwkJCSAg
ICAgIGxvZmZfdCBwb3MsIHVuc2lnbmVkIGxlbiwgdm9pZCAqKmZzZGF0YSkKK3sKKwlpbnQgcmV0
ID0gLUVOT01FTTsKKwljaGFyICpidWY7CisJaGludF90ICpoaW50OworCXN0cnVjdCBpbm9kZSAq
aW5vZGU7CisJc3RydWN0IHJlaXNlcjRfc2xpZGUgKndpbjsKKwlzdHJ1Y3QgY2x1c3Rlcl9oYW5k
bGUgKmNsdXN0OworCXN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8gKmluZm87CisJcmVpc2VyNF9j
b250ZXh0ICpjdHg7CisKKwljdHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisJaW5vZGUgPSBw
YWdlLT5tYXBwaW5nLT5ob3N0OworCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5v
ZGUpOworCisJYXNzZXJ0KCJlZHdhcmQtMTU2NCIsIFBhZ2VMb2NrZWQocGFnZSkpOworCWJ1ZiA9
IGttYWxsb2Moc2l6ZW9mKCpjbHVzdCkgKworCQkgICAgICBzaXplb2YoKndpbikgKworCQkgICAg
ICBzaXplb2YoKmhpbnQpLAorCQkgICAgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJ
aWYgKCFidWYpCisJCWdvdG8gZXJyMjsKKwljbHVzdCA9IChzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUg
KilidWY7CisJd2luID0gKHN0cnVjdCByZWlzZXI0X3NsaWRlICopKGJ1ZiArIHNpemVvZigqY2x1
c3QpKTsKKwloaW50ID0gKGhpbnRfdCAqKShidWYgKyBzaXplb2YoKmNsdXN0KSArIHNpemVvZigq
d2luKSk7CisKKwloaW50X2luaXRfemVybyhoaW50KTsKKwljbHVzdGVyX2luaXRfcmVhZChjbHVz
dCwgTlVMTCk7CisJY2x1c3QtPmhpbnQgPSBoaW50OworCisJbXV0ZXhfbG9jaygmaW5mby0+Y2hl
Y2tpbl9tdXRleCk7CisKKwlyZXQgPSBzZXRfd2luZG93X2FuZF9jbHVzdGVyKGlub2RlLCBjbHVz
dCwgd2luLCBsZW4sIHBvcyk7CisJaWYgKHJldCkKKwkJZ290byBlcnIxOworCXVubG9ja19wYWdl
KHBhZ2UpOworCXJldCA9IHByZXBhcmVfbG9naWNhbF9jbHVzdGVyKGlub2RlLCBwb3MsIGxlbiwg
Y2x1c3QsIExDX0FQUE9WKTsKKwlkb25lX2xoKCZoaW50LT5saCk7CisJYXNzZXJ0KCJlZHdhcmQt
MTU2NSIsIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKwls
b2NrX3BhZ2UocGFnZSk7CisJaWYgKHJldCkgeworCQlTZXRQYWdlRXJyb3IocGFnZSk7CisJCUNs
ZWFyUGFnZVVwdG9kYXRlKHBhZ2UpOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJZ290byBlcnIw
OworCX0KKwkvKgorCSAqIFN1Y2Nlc3MuIEFsbCByZXNvdXJjZXMgKGluY2x1ZGluZyBjaGVja2lu
X211dGV4KQorCSAqIHdpbGwgYmUgcmVsZWFzZWQgaW4gLT53cml0ZV9lbmQoKQorCSAqLworCWN0
eC0+bG9ja2VkX3BhZ2UgPSBwYWdlOworCSpmc2RhdGEgPSAodm9pZCAqKWJ1ZjsKKworCXJldHVy
biAwOworIGVycjA6CisJcHV0X2NsdXN0ZXJfaGFuZGxlKGNsdXN0KTsKKyBlcnIxOgorCW11dGV4
X3VubG9jaygmaW5mby0+Y2hlY2tpbl9tdXRleCk7CisJa2ZyZWUoYnVmKTsKKyBlcnIyOgorCWFz
c2VydCgiZWR3YXJkLTE1NjgiLCAhcmV0KTsKKwlyZXR1cm4gcmV0OworfQorCisvKiBwbHVnaW4t
PndyaXRlX2VuZCgpICovCitpbnQgd3JpdGVfZW5kX2NyeXB0Y29tcHJlc3Moc3RydWN0IGZpbGUg
KmZpbGUsIHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICAgIGxvZmZfdCBwb3MsIHVuc2lnbmVkIGNv
cGllZCwgdm9pZCAqZnNkYXRhKQoreworCWludCByZXQ7CisJaGludF90ICpoaW50OworCXN0cnVj
dCBpbm9kZSAqaW5vZGU7CisJc3RydWN0IGNsdXN0ZXJfaGFuZGxlICpjbHVzdDsKKwlzdHJ1Y3Qg
Y3J5cHRjb21wcmVzc19pbmZvICppbmZvOworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCisJYXNz
ZXJ0KCJlZHdhcmQtMTU2NiIsCisJICAgICAgIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVu
dF9sb2NrX3N0YWNrKCkpKTsKKwljdHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisJaW5vZGUg
PSBwYWdlLT5tYXBwaW5nLT5ob3N0OworCWluZm8gPSBjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEo
aW5vZGUpOworCWNsdXN0ID0gKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqKWZzZGF0YTsKKwloaW50
ID0gY2x1c3QtPmhpbnQ7CisKKwl1bmxvY2tfcGFnZShwYWdlKTsKKwljdHgtPmxvY2tlZF9wYWdl
ID0gTlVMTDsKKwlzZXRfY2x1c3Rlcl9wYWdlc19kaXJ0eShjbHVzdCwgaW5vZGUpOworCXJldCA9
IGNoZWNraW5fbG9naWNhbF9jbHVzdGVyKGNsdXN0LCBpbm9kZSk7CisJaWYgKHJldCkgeworCQlT
ZXRQYWdlRXJyb3IocGFnZSk7CisJCWdvdG8gZXhpdDsKKwl9CisgZXhpdDoKKwltdXRleF91bmxv
Y2soJmluZm8tPmNoZWNraW5fbXV0ZXgpOworCisJcHV0X2NsdXN0ZXJfaGFuZGxlKGNsdXN0KTsK
KworCWlmIChwb3MgKyBjb3BpZWQgPiBpbm9kZS0+aV9zaXplKSB7CisJCS8qCisJCSAqIGlfc2l6
ZSBoYXMgYmVlbiB1cGRhdGVkIGluCisJCSAqIGNoZWNraW5fbG9naWNhbF9jbHVzdGVyCisJCSAq
LworCQlyZXQgPSByZWlzZXI0X3VwZGF0ZV9zZChpbm9kZSk7CisJCWlmICh1bmxpa2VseShyZXQg
IT0gMCkpCisJCQl3YXJuaW5nKCJlZHdhcmQtMTYwMyIsCisJCQkJIkNhbiBub3QgdXBkYXRlIHN0
YXQtZGF0YTogJWkuIEZTQ0s/IiwKKwkJCQlyZXQpOworCX0KKwlrZnJlZShmc2RhdGEpOworCXJl
dHVybiByZXQ7Cit9CisKKy8qIHBsdWdpbi0+Ym1hcCAqLworc2VjdG9yX3QgYm1hcF9jcnlwdGNv
bXByZXNzKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCBzZWN0b3JfdCBsYmxvY2spCit7
CisJcmV0dXJuIC1FSU5WQUw7Cit9CisKKy8qCisgIExvY2FsIHZhcmlhYmxlczoKKyAgYy1pbmRl
bnRhdGlvbi1zdHlsZTogIksmUiIKKyAgbW9kZS1uYW1lOiAiTEMiCisgIGMtYmFzaWMtb2Zmc2V0
OiA4CisgIHRhYi13aWR0aDogOAorICBmaWxsLWNvbHVtbjogODAKKyAgc2Nyb2xsLXN0ZXA6IDEK
KyAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vZmlsZS9jcnlwdGNvbXByZXNzLmggbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvcGx1Z2luL2ZpbGUvY3J5cHRjb21wcmVzcy5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3BsdWdpbi9maWxlL2NyeXB0Y29tcHJlc3MuaAkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUv
Y3J5cHRjb21wcmVzcy5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDYxMjIyMjQwICswMTAwCkBAIC0w
LDAgKzEsNjE5IEBACisvKiBDb3B5cmlnaHQgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGlj
ZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisvKiBTZWUgaHR0cDovL3d3dy5u
YW1lc3lzLmNvbS9jcnlwdGNvbXByZXNzX2Rlc2lnbi5odG1sICovCisKKyNpZiAhZGVmaW5lZCgg
X19GU19SRUlTRVI0X0NSWVBUQ09NUFJFU1NfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0X0NS
WVBUQ09NUFJFU1NfSF9fCisKKyNpbmNsdWRlICIuLi8uLi9wYWdlX2NhY2hlLmgiCisjaW5jbHVk
ZSAiLi4vY29tcHJlc3MvY29tcHJlc3MuaCIKKyNpbmNsdWRlICIuLi9jcnlwdG8vY2lwaGVyLmgi
CisKKyNpbmNsdWRlIDxsaW51eC9wYWdlbWFwLmg+CisKKyNkZWZpbmUgTUlOX0NMVVNURVJfU0hJ
RlQgUEFHRV9TSElGVAorI2RlZmluZSBNQVhfQ0xVU1RFUl9TSElGVCAxNgorI2RlZmluZSBNQVhf
Q0xVU1RFUl9OUlBBR0VTICgxVSA8PCBNQVhfQ0xVU1RFUl9TSElGVCA+PiBQQUdFX1NISUZUKQor
I2RlZmluZSBEQ19DSEVDS1NVTV9TSVpFIDQKKworI2RlZmluZSBNSU5fTEFUVElDRV9GQUNUT1Ig
MQorI2RlZmluZSBNQVhfTEFUVElDRV9GQUNUT1IgMzIKKworLyogdGhpcyBtYXNrIGNvbnRhaW5z
IGFsbCBub24tc3RhbmRhcmQgcGx1Z2lucyB0aGF0IG1pZ2h0CisgICBiZSBwcmVzZW50IGluIHJl
aXNlcjQtc3BlY2lmaWMgcGFydCBvZiBpbm9kZSBtYW5hZ2VkIGJ5CisgICBjcnlwdGNvbXByZXNz
IGZpbGUgcGx1Z2luICovCisjZGVmaW5lIGNyeXB0Y29tcHJlc3NfbWFzawkJCQlcCisJKCgxIDw8
IFBTRVRfRklMRSkgfAkJCQlcCisJICgxIDw8IFBTRVRfQ0xVU1RFUikgfAkJCQlcCisJICgxIDw8
IFBTRVRfQ0lQSEVSKSB8CQkJCVwKKwkgKDEgPDwgUFNFVF9ESUdFU1QpIHwJCQkJXAorCSAoMSA8
PCBQU0VUX0NPTVBSRVNTSU9OKSB8CQkJXAorCSAoMSA8PCBQU0VUX0NPTVBSRVNTSU9OX01PREUp
KQorCisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIGlubGluZSBpbnQgY2x1c3Rlcl9zaGlmdF9v
ayhpbnQgc2hpZnQpCit7CisJcmV0dXJuIChzaGlmdCA+PSBNSU5fQ0xVU1RFUl9TSElGVCkgJiYg
KHNoaWZ0IDw9IE1BWF9DTFVTVEVSX1NISUZUKTsKK30KKyNlbmRpZgorCisjaWYgUkVJU0VSNF9E
RUJVRworI2RlZmluZSBJTk9ERV9QR0NPVU5UKGlub2RlKQkJCQkJCVwKKyh7CQkJCQkJCQkgICAg
ICAgIFwKKwlhc3NlcnQoImVkd2FyZC0xNTMwIiwgaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpID09
CQlcCisJICAgICAgIGZpbGVfcGx1Z2luX2J5X2lkKENSWVBUQ09NUFJFU1NfRklMRV9QTFVHSU5f
SUQpKTsJXAorCWF0b21pY19yZWFkKCZjcnlwdGNvbXByZXNzX2lub2RlX2RhdGEoaW5vZGUpLT5w
Z2NvdW50KTsJCVwKKyB9KQorI2RlZmluZSBJTk9ERV9QR0NPVU5UX0lOQyhpbm9kZSkJCQkJCVwK
K2RvIHsJCQkJCQkJCSAgICAgICAgXAorCWFzc2VydCgiZWR3YXJkLTE1MzEiLCBpbm9kZV9maWxl
X3BsdWdpbihpbm9kZSkgPT0JCVwKKwkgICAgICAgZmlsZV9wbHVnaW5fYnlfaWQoQ1JZUFRDT01Q
UkVTU19GSUxFX1BMVUdJTl9JRCkpOwlcCisJYXRvbWljX2luYygmY3J5cHRjb21wcmVzc19pbm9k
ZV9kYXRhKGlub2RlKS0+cGdjb3VudCk7CQlcCit9IHdoaWxlICgwKQorI2RlZmluZSBJTk9ERV9Q
R0NPVU5UX0RFQyhpbm9kZSkJCQkJCVwKK2RvIHsJCQkJCQkJCSAgICAgICAgXAorCWlmIChpbm9k
ZV9maWxlX3BsdWdpbihpbm9kZSkgPT0JCQkJCVwKKwkgICAgZmlsZV9wbHVnaW5fYnlfaWQoQ1JZ
UFRDT01QUkVTU19GSUxFX1BMVUdJTl9JRCkpCQlcCisJCWF0b21pY19kZWMoJmNyeXB0Y29tcHJl
c3NfaW5vZGVfZGF0YShpbm9kZSktPnBnY291bnQpOwlcCit9IHdoaWxlICgwKQorI2Vsc2UKKyNk
ZWZpbmUgSU5PREVfUEdDT1VOVChpbm9kZSkgKDApCisjZGVmaW5lIElOT0RFX1BHQ09VTlRfSU5D
KGlub2RlKQorI2RlZmluZSBJTk9ERV9QR0NPVU5UX0RFQyhpbm9kZSkKKyNlbmRpZiAvKiBSRUlT
RVI0X0RFQlVHICovCisKK3N0cnVjdCB0Zm1fc3RyZWFtIHsKKwlfX3U4ICpkYXRhOworCXNpemVf
dCBzaXplOworfTsKKwordHlwZWRlZiBlbnVtIHsKKwlJTlBVVF9TVFJFQU0sCisJT1VUUFVUX1NU
UkVBTSwKKwlMQVNUX1NUUkVBTQorfSB0Zm1fc3RyZWFtX2lkOworCit0eXBlZGVmIHN0cnVjdCB0
Zm1fc3RyZWFtICogdGZtX3VuaXRbTEFTVF9TVFJFQU1dOworCitzdGF0aWMgaW5saW5lIF9fdTgg
KnRzX2RhdGEoc3RydWN0IHRmbV9zdHJlYW0gKiBzdG0pCit7CisJYXNzZXJ0KCJlZHdhcmQtOTI4
Iiwgc3RtICE9IE5VTEwpOworCXJldHVybiBzdG0tPmRhdGE7Cit9CisKK3N0YXRpYyBpbmxpbmUg
c2l6ZV90IHRzX3NpemUoc3RydWN0IHRmbV9zdHJlYW0gKiBzdG0pCit7CisJYXNzZXJ0KCJlZHdh
cmQtOTI5Iiwgc3RtICE9IE5VTEwpOworCXJldHVybiBzdG0tPnNpemU7Cit9CisKK3N0YXRpYyBp
bmxpbmUgdm9pZCBzZXRfdHNfc2l6ZShzdHJ1Y3QgdGZtX3N0cmVhbSAqIHN0bSwgc2l6ZV90IHNp
emUpCit7CisJYXNzZXJ0KCJlZHdhcmQtOTMwIiwgc3RtICE9IE5VTEwpOworCisJc3RtLT5zaXpl
ID0gc2l6ZTsKK30KKworc3RhdGljIGlubGluZSBpbnQgYWxsb2NfdHMoc3RydWN0IHRmbV9zdHJl
YW0gKiogc3RtKQoreworCWFzc2VydCgiZWR3YXJkLTkzMSIsIHN0bSk7CisJYXNzZXJ0KCJlZHdh
cmQtOTMyIiwgKnN0bSA9PSBOVUxMKTsKKworCSpzdG0gPSBremFsbG9jKHNpemVvZigqKnN0bSks
IHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoISpzdG0pCisJCXJldHVybiAtRU5P
TUVNOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZnJlZV90cyhzdHJ1Y3Qg
dGZtX3N0cmVhbSAqIHN0bSkKK3sKKwlhc3NlcnQoImVkd2FyZC05MzMiLCAhdHNfZGF0YShzdG0p
KTsKKwlhc3NlcnQoImVkd2FyZC05MzQiLCAhdHNfc2l6ZShzdG0pKTsKKworCWtmcmVlKHN0bSk7
Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGFsbG9jX3RzX2RhdGEoc3RydWN0IHRmbV9zdHJlYW0g
KiBzdG0sIHNpemVfdCBzaXplKQoreworCWFzc2VydCgiZWR3YXJkLTkzNSIsICF0c19kYXRhKHN0
bSkpOworCWFzc2VydCgiZWR3YXJkLTkzNiIsICF0c19zaXplKHN0bSkpOworCWFzc2VydCgiZWR3
YXJkLTkzNyIsIHNpemUgIT0gMCk7CisKKwlzdG0tPmRhdGEgPSByZWlzZXI0X3ZtYWxsb2Moc2l6
ZSk7CisJaWYgKCFzdG0tPmRhdGEpCisJCXJldHVybiAtRU5PTUVNOworCXNldF90c19zaXplKHN0
bSwgc2l6ZSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBmcmVlX3RzX2Rh
dGEoc3RydWN0IHRmbV9zdHJlYW0gKiBzdG0pCit7CisJYXNzZXJ0KCJlZHdhcmQtOTM4IiwgZXF1
aSh0c19kYXRhKHN0bSksIHRzX3NpemUoc3RtKSkpOworCisJaWYgKHRzX2RhdGEoc3RtKSkKKwkJ
dmZyZWUodHNfZGF0YShzdG0pKTsKKwltZW1zZXQoc3RtLCAwLCBzaXplb2YgKnN0bSk7Cit9CisK
Ky8qIFdyaXRlIG1vZGVzIGZvciBpdGVtIGNvbnZlcnNpb24gaW4gZmx1c2ggY29udmVydCBwaGFz
ZSAqLwordHlwZWRlZiBlbnVtIHsKKwlDVEFJTF9JTlZBTF9DT05WRVJUX01PREUgPSAwLAorCUNU
QUlMX0FQUEVORF9JVEVNID0gMSwKKwlDVEFJTF9PVkVSV1JJVEVfSVRFTSA9IDIsCisJQ1RBSUxf
Q1VUX0lURU0gPSAzCit9IGN0YWlsX2NvbnZlcnRfbW9kZV90OworCit0eXBlZGVmIGVudW0gewor
CUxDX0lOVkFMICA9IDAsICAgLyogaW52YWxpZCB2YWx1ZSAqLworCUxDX0FQUE9WICA9IDEsICAg
LyogYXBwZW5kIGFuZC9vciBvdmVyd3JpdGUgKi8KKwlMQ19FWFBBTkQgPSAyLAkgLyogZXhwYW5k
aW5nIHRydW5jYXRlICovCisJTENfU0hSSU5LID0gMyAgICAvKiBzaHJpbmtpbmcgdHJ1bmNhdGUg
Ki8KK30gbG9naWNhbF9jbHVzdGVyX29wOworCisvKiBUcmFuc2Zvcm0gY2x1c3Rlci4KKyAqIElu
dGVybWVkaWF0ZSBzdGF0ZSBiZXR3ZWVuIHBhZ2UgY2x1c3RlciBhbmQgZGlzayBjbHVzdGVyCisg
KiBJcyB1c2VkIGZvciBkYXRhIHRyYW5zZm9ybSAoY29tcHJlc3Npb24vZW5jcnlwdGlvbikKKyAq
Lworc3RydWN0IHRmbV9jbHVzdGVyIHsKKwljb2Ffc2V0IGNvYTsgICAgICAvKiBjb21wcmVzc2lv
biBhbGdvcml0aG1zIGluZm8gKi8KKwl0Zm1fdW5pdCB0dW47ICAgICAvKiBwbGFpbiBhbmQgdHJh
bnNmb3JtZWQgc3RyZWFtcyAqLworCXRmbV9hY3Rpb24gYWN0OworCWludCB1cHRvZGF0ZTsKKwlp
bnQgbHNpemU7ICAgICAgICAvKiBudW1iZXIgb2YgYnl0ZXMgaW4gbG9naWNhbCBjbHVzdGVyICov
CisJaW50IGxlbjsgICAgICAgICAgLyogbGVuZ3RoIG9mIHRoZSB0cmFuc2Zvcm0gc3RyZWFtICov
CisJdW5zaWduZWQgaW50IGhvbGU6MTsgIC8qIHNob3VsZCBwdW5jaCBob2xlICovCit9OworCitz
dGF0aWMgaW5saW5lIGNvYV90IGdldF9jb2Eoc3RydWN0IHRmbV9jbHVzdGVyICogdGMsIHJlaXNl
cjRfY29tcHJlc3Npb25faWQgaWQsCisJCQkgICAgdGZtX2FjdGlvbiBhY3QpCit7CisJcmV0dXJu
IHRjLT5jb2FbaWRdW2FjdF07Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzZXRfY29hKHN0cnVj
dCB0Zm1fY2x1c3RlciAqIHRjLCByZWlzZXI0X2NvbXByZXNzaW9uX2lkIGlkLAorCQkJICAgdGZt
X2FjdGlvbiBhY3QsIGNvYV90IGNvYSkKK3sKKwl0Yy0+Y29hW2lkXVthY3RdID0gY29hOworfQor
CitzdGF0aWMgaW5saW5lIGludCBhbGxvY19jb2Eoc3RydWN0IHRmbV9jbHVzdGVyICogdGMsIGNv
bXByZXNzaW9uX3BsdWdpbiAqIGNwbHVnKQoreworCWNvYV90IGNvYTsKKworCWNvYSA9IGNwbHVn
LT5hbGxvYyh0Yy0+YWN0KTsKKwlpZiAoSVNfRVJSKGNvYSkpCisJCXJldHVybiBQVFJfRVJSKGNv
YSk7CisJc2V0X2NvYSh0YywgY3BsdWctPmguaWQsIHRjLT5hY3QsIGNvYSk7CisJcmV0dXJuIDA7
Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50CitncmFiX2NvYShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0
YywgY29tcHJlc3Npb25fcGx1Z2luICogY3BsdWcpCit7CisJcmV0dXJuIChjcGx1Zy0+YWxsb2Mg
JiYgIWdldF9jb2EodGMsIGNwbHVnLT5oLmlkLCB0Yy0+YWN0KSA/CisJCWFsbG9jX2NvYSh0Yywg
Y3BsdWcpIDogMCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBmcmVlX2NvYV9zZXQoc3RydWN0
IHRmbV9jbHVzdGVyICogdGMpCit7CisJdGZtX2FjdGlvbiBqOworCXJlaXNlcjRfY29tcHJlc3Np
b25faWQgaTsKKwljb21wcmVzc2lvbl9wbHVnaW4gKmNwbHVnOworCisJYXNzZXJ0KCJlZHdhcmQt
ODEwIiwgdGMgIT0gTlVMTCk7CisKKwlmb3IgKGogPSAwOyBqIDwgVEZNQV9MQVNUOyBqKyspCisJ
CWZvciAoaSA9IDA7IGkgPCBMQVNUX0NPTVBSRVNTSU9OX0lEOyBpKyspIHsKKwkJCWlmICghZ2V0
X2NvYSh0YywgaSwgaikpCisJCQkJY29udGludWU7CisJCQljcGx1ZyA9IGNvbXByZXNzaW9uX3Bs
dWdpbl9ieV9pZChpKTsKKwkJCWFzc2VydCgiZWR3YXJkLTgxMiIsIGNwbHVnLT5mcmVlICE9IE5V
TEwpOworCQkJY3BsdWctPmZyZWUoZ2V0X2NvYSh0YywgaSwgaiksIGopOworCQkJc2V0X2NvYSh0
YywgaSwgaiwgMCk7CisJCX0KKwlyZXR1cm47Cit9CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IHRm
bV9zdHJlYW0gKiBnZXRfdGZtX3N0cmVhbShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0YywKKwkJCQkJ
CSB0Zm1fc3RyZWFtX2lkIGlkKQoreworCXJldHVybiB0Yy0+dHVuW2lkXTsKK30KKworc3RhdGlj
IGlubGluZSB2b2lkIHNldF90Zm1fc3RyZWFtKHN0cnVjdCB0Zm1fY2x1c3RlciAqIHRjLAorCQkJ
CSAgdGZtX3N0cmVhbV9pZCBpZCwgc3RydWN0IHRmbV9zdHJlYW0gKiB0cykKK3sKKwl0Yy0+dHVu
W2lkXSA9IHRzOworfQorCitzdGF0aWMgaW5saW5lIF9fdTggKnRmbV9zdHJlYW1fZGF0YShzdHJ1
Y3QgdGZtX2NsdXN0ZXIgKiB0YywgdGZtX3N0cmVhbV9pZCBpZCkKK3sKKwlyZXR1cm4gdHNfZGF0
YShnZXRfdGZtX3N0cmVhbSh0YywgaWQpKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHNldF90
Zm1fc3RyZWFtX2RhdGEoc3RydWN0IHRmbV9jbHVzdGVyICogdGMsCisJCQkJICAgICAgIHRmbV9z
dHJlYW1faWQgaWQsIF9fdTggKiBkYXRhKQoreworCWdldF90Zm1fc3RyZWFtKHRjLCBpZCktPmRh
dGEgPSBkYXRhOworfQorCitzdGF0aWMgaW5saW5lIHNpemVfdCB0Zm1fc3RyZWFtX3NpemUoc3Ry
dWN0IHRmbV9jbHVzdGVyICogdGMsIHRmbV9zdHJlYW1faWQgaWQpCit7CisJcmV0dXJuIHRzX3Np
emUoZ2V0X3RmbV9zdHJlYW0odGMsIGlkKSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorc2V0
X3RmbV9zdHJlYW1fc2l6ZShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0YywgdGZtX3N0cmVhbV9pZCBp
ZCwgc2l6ZV90IHNpemUpCit7CisJZ2V0X3RmbV9zdHJlYW0odGMsIGlkKS0+c2l6ZSA9IHNpemU7
Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50CithbGxvY190Zm1fc3RyZWFtKHN0cnVjdCB0Zm1fY2x1
c3RlciAqIHRjLCBzaXplX3Qgc2l6ZSwgdGZtX3N0cmVhbV9pZCBpZCkKK3sKKwlhc3NlcnQoImVk
d2FyZC05MzkiLCB0YyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC05NDAiLCAhZ2V0X3RmbV9z
dHJlYW0odGMsIGlkKSk7CisKKwl0Yy0+dHVuW2lkXSA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCB0
Zm1fc3RyZWFtKSwKKwkJCSAgICAgIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAo
IXRjLT50dW5baWRdKQorCQlyZXR1cm4gLUVOT01FTTsKKwlyZXR1cm4gYWxsb2NfdHNfZGF0YShn
ZXRfdGZtX3N0cmVhbSh0YywgaWQpLCBzaXplKTsKK30KKworc3RhdGljIGlubGluZSBpbnQKK3Jl
YWxsb2NfdGZtX3N0cmVhbShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0Yywgc2l6ZV90IHNpemUsIHRm
bV9zdHJlYW1faWQgaWQpCit7CisJYXNzZXJ0KCJlZHdhcmQtOTQxIiwgdGZtX3N0cmVhbV9zaXpl
KHRjLCBpZCkgPCBzaXplKTsKKwlmcmVlX3RzX2RhdGEoZ2V0X3RmbV9zdHJlYW0odGMsIGlkKSk7
CisJcmV0dXJuIGFsbG9jX3RzX2RhdGEoZ2V0X3RmbV9zdHJlYW0odGMsIGlkKSwgc2l6ZSk7Cit9
CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBmcmVlX3RmbV9zdHJlYW0oc3RydWN0IHRmbV9jbHVzdGVy
ICogdGMsIHRmbV9zdHJlYW1faWQgaWQpCit7CisJZnJlZV90c19kYXRhKGdldF90Zm1fc3RyZWFt
KHRjLCBpZCkpOworCWZyZWVfdHMoZ2V0X3RmbV9zdHJlYW0odGMsIGlkKSk7CisJc2V0X3RmbV9z
dHJlYW0odGMsIGlkLCAwKTsKK30KKworc3RhdGljIGlubGluZSB1bnNpZ25lZCBjb2Ffb3ZlcnJ1
bihjb21wcmVzc2lvbl9wbHVnaW4gKiBjcGx1ZywgaW50IGlsZW4pCit7CisJcmV0dXJuIChjcGx1
Zy0+b3ZlcnJ1biAhPSBOVUxMID8gY3BsdWctPm92ZXJydW4oaWxlbikgOiAwKTsKK30KKworc3Rh
dGljIGlubGluZSB2b2lkIGZyZWVfdGZtX3VuaXQoc3RydWN0IHRmbV9jbHVzdGVyICogdGMpCit7
CisJdGZtX3N0cmVhbV9pZCBpZDsKKwlmb3IgKGlkID0gMDsgaWQgPCBMQVNUX1NUUkVBTTsgaWQr
KykgeworCQlpZiAoIWdldF90Zm1fc3RyZWFtKHRjLCBpZCkpCisJCQljb250aW51ZTsKKwkJZnJl
ZV90Zm1fc3RyZWFtKHRjLCBpZCk7CisJfQorfQorCitzdGF0aWMgaW5saW5lIHZvaWQgcHV0X3Rm
bV9jbHVzdGVyKHN0cnVjdCB0Zm1fY2x1c3RlciAqIHRjKQoreworCWFzc2VydCgiZWR3YXJkLTk0
MiIsIHRjICE9IE5VTEwpOworCWZyZWVfY29hX3NldCh0Yyk7CisJZnJlZV90Zm1fdW5pdCh0Yyk7
Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IHRmbV9jbHVzdGVyX2lzX3VwdG9kYXRlKHN0cnVjdCB0
Zm1fY2x1c3RlciAqIHRjKQoreworCWFzc2VydCgiZWR3YXJkLTk0MyIsIHRjICE9IE5VTEwpOwor
CWFzc2VydCgiZWR3YXJkLTk0NCIsIHRjLT51cHRvZGF0ZSA9PSAwIHx8IHRjLT51cHRvZGF0ZSA9
PSAxKTsKKwlyZXR1cm4gKHRjLT51cHRvZGF0ZSA9PSAxKTsKK30KKworc3RhdGljIGlubGluZSB2
b2lkIHRmbV9jbHVzdGVyX3NldF91cHRvZGF0ZShzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0YykKK3sK
Kwlhc3NlcnQoImVkd2FyZC05NDUiLCB0YyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC05NDYi
LCB0Yy0+dXB0b2RhdGUgPT0gMCB8fCB0Yy0+dXB0b2RhdGUgPT0gMSk7CisJdGMtPnVwdG9kYXRl
ID0gMTsKKwlyZXR1cm47Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCB0Zm1fY2x1c3Rlcl9jbHJf
dXB0b2RhdGUoc3RydWN0IHRmbV9jbHVzdGVyICogdGMpCit7CisJYXNzZXJ0KCJlZHdhcmQtOTQ3
IiwgdGMgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtOTQ4IiwgdGMtPnVwdG9kYXRlID09IDAg
fHwgdGMtPnVwdG9kYXRlID09IDEpOworCXRjLT51cHRvZGF0ZSA9IDA7CisJcmV0dXJuOworfQor
CitzdGF0aWMgaW5saW5lIGludCB0Zm1fc3RyZWFtX2lzX3NldChzdHJ1Y3QgdGZtX2NsdXN0ZXIg
KiB0YywgdGZtX3N0cmVhbV9pZCBpZCkKK3sKKwlyZXR1cm4gKGdldF90Zm1fc3RyZWFtKHRjLCBp
ZCkgJiYKKwkJdGZtX3N0cmVhbV9kYXRhKHRjLCBpZCkgJiYgdGZtX3N0cmVhbV9zaXplKHRjLCBp
ZCkpOworfQorCitzdGF0aWMgaW5saW5lIGludCB0Zm1fY2x1c3Rlcl9pc19zZXQoc3RydWN0IHRm
bV9jbHVzdGVyICogdGMpCit7CisJaW50IGk7CisJZm9yIChpID0gMDsgaSA8IExBU1RfU1RSRUFN
OyBpKyspCisJCWlmICghdGZtX3N0cmVhbV9pc19zZXQodGMsIGkpKQorCQkJcmV0dXJuIDA7CisJ
cmV0dXJuIDE7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBhbHRlcm5hdGVfc3RyZWFtcyhzdHJ1
Y3QgdGZtX2NsdXN0ZXIgKiB0YykKK3sKKwlzdHJ1Y3QgdGZtX3N0cmVhbSAqdG1wID0gZ2V0X3Rm
bV9zdHJlYW0odGMsIElOUFVUX1NUUkVBTSk7CisKKwlzZXRfdGZtX3N0cmVhbSh0YywgSU5QVVRf
U1RSRUFNLCBnZXRfdGZtX3N0cmVhbSh0YywgT1VUUFVUX1NUUkVBTSkpOworCXNldF90Zm1fc3Ry
ZWFtKHRjLCBPVVRQVVRfU1RSRUFNLCB0bXApOworfQorCisvKiBTZXQgb2Ygc3RhdGVzIHRvIGlu
ZGljYXRlIGEga2luZCBvZiBkYXRhCisgKiB0aGF0IHdpbGwgYmUgd3JpdHRlbiB0byB0aGUgd2lu
ZG93ICovCit0eXBlZGVmIGVudW0geworCURBVEFfV0lORE9XLAkJLyogdXNlcidzIGRhdGEgKi8K
KwlIT0xFX1dJTkRPVwkJLyogemVyb2VzIChzdWNoIGtpbmQgb2YgZGF0YSBjYW4gYmUgd3JpdHRl
bgorCQkJCSAqIGlmIHdlIHN0YXJ0IHRvIHdyaXRlIGZyb20gb2Zmc2V0ID4gaV9zaXplKSAqLwor
fSB3aW5kb3dfc3RhdDsKKworLyogV2luZG93IChvZiBsb2dpY2FsIGNsdXN0ZXIgc2l6ZSkgZGlz
Y3JldGVseSBzbGlkaW5nIGFsb25nIGEgZmlsZS4KKyAqIElzIHVzZWQgdG8gbG9jYXRlIGhvbGUg
cmVnaW9uIGluIGEgbG9naWNhbCBjbHVzdGVyIHRvIGJlIHByb3Blcmx5CisgKiByZXByZXNlbnRl
ZCBvbiBkaXNrLgorICogV2Ugc3BsaXQgYSB3cml0ZSB0byBjcnlwdGNvbXByZXNzIGZpbGUgaW50
byB3cml0ZXMgdG8gaXRzIGxvZ2ljYWwKKyAqIGNsdXN0ZXJzLiBCZWZvcmUgd3JpdGluZyB0byBh
IGxvZ2ljYWwgY2x1c3RlciB3ZSBzZXQgYSB3aW5kb3csIGkuZS4KKyAqIGNhbGN1bGF0ZSB2YWx1
ZXMgb2YgdGhlIGZvbGxvd2luZyBmaWVsZHM6CisgKi8KK3N0cnVjdCByZWlzZXI0X3NsaWRlIHsK
Kwl1bnNpZ25lZCBvZmY7CQkvKiBvZmZzZXQgdG8gd3JpdGUgZnJvbSAqLworCXVuc2lnbmVkIGNv
dW50OwkJLyogbnVtYmVyIG9mIGJ5dGVzIHRvIHdyaXRlICovCisJdW5zaWduZWQgZGVsdGE7CQkv
KiBudW1iZXIgb2YgYnl0ZXMgdG8gYXBwZW5kIHRvIHRoZSBob2xlICovCisJd2luZG93X3N0YXQg
c3RhdDsJLyogd2hhdCBraW5kIG9mIGRhdGEgd2lsbCBiZSB3cml0dGVuIHN0YXJ0aW5nCisJCQkJ
ICAgZnJvbSBAb2ZmICovCit9OworCisvKiBQb3NzaWJsZSBzdGF0ZXMgb2YgYSBkaXNrIGNsdXN0
ZXIgKi8KK3R5cGVkZWYgZW51bSB7CisJSU5WQUxfRElTS19DTFVTVEVSLAkvKiB1bmtub3duIHN0
YXRlICovCisJUFJFUF9ESVNLX0NMVVNURVIsCS8qIGRpc2sgY2x1c3RlciBnb3QgY29udmVydGVk
IGJ5IGZsdXNoCisJCQkJICogYXQgbGVhc3QgMSB0aW1lICovCisJVU5QUl9ESVNLX0NMVVNURVIs
CS8qIGRpc2sgY2x1c3RlciBqdXN0IGNyZWF0ZWQgYW5kIHNob3VsZCBiZQorCQkJCSAqIGNvbnZl
cnRlZCBieSBmbHVzaCAqLworCUZBS0VfRElTS19DTFVTVEVSLAkvKiBkaXNrIGNsdXN0ZXIgZG9l
c24ndCBleGlzdCBuZWl0aGVyIGluIG1lbW9yeQorCQkJCSAqIG5vciBvbiBkaXNrICovCisJVFJO
Q19ESVNLX0NMVVNURVIgICAgICAgLyogZGlzayBjbHVzdGVyIGlzIHBhcnRpYWxseSB0cnVuY2F0
ZWQgKi8KK30gZGlza19jbHVzdGVyX3N0YXQ7CisKKy8qIFRoZSBmb2xsb3dpbmcgc3RydWN0dXJl
IHJlcHJlc2VudHMgdmFyaW91cyBzdGFnZXMgb2YgdGhlIHNhbWUgbG9naWNhbAorICogY2x1c3Rl
ciBvZiBpbmRleCBAaW5kZXg6CisgKiAuIGZpeGVkIHNsaWRlCisgKiAuIHBhZ2UgY2x1c3RlciAg
ICAgICAgIChzdGFnZSBpbiBwcmltYXJ5IGNhY2hlKQorICogLiB0cmFuc2Zvcm0gY2x1c3RlciAg
ICAodHJhbnNpdGlvbiBzdGFnZSkKKyAqIC4gZGlzayBjbHVzdGVyICAgICAgICAgKHN0YWdlIGlu
IHNlY29uZGFyeSBjYWNoZSkKKyAqIFRoaXMgc3RydWN0dXJlIGlzIHVzZWQgaW4gdHJhbnNpdGlv
biBhbmQgc3luY2hyb25pemluZyBvcGVyYXRpb25zLCBlLmcuCisgKiB0cmFuc2Zvcm0gY2x1c3Rl
ciBpcyBhIHRyYW5zaXRpb24gc3RhdGUgd2hlbiBzeW5jaHJvbml6aW5nIHBhZ2UgY2x1c3Rlcgor
ICogYW5kIGRpc2sgY2x1c3Rlci4KKyAqIEZJWE1FOiBFbmNhcHN1bGF0ZSBwYWdlIGNsdXN0ZXIs
IGRpc2sgY2x1c3Rlci4KKyAqLworc3RydWN0IGNsdXN0ZXJfaGFuZGxlIHsKKwljbG9mZl90IGlu
ZGV4OwkJIC8qIG9mZnNldCBpbiBhIGZpbGUgKHVuaXQgaXMgYSBjbHVzdGVyIHNpemUpICovCisJ
aW50IGluZGV4X3ZhbGlkOyAgICAgICAgIC8qIGZvciB2YWxpZGF0aW5nIHRoZSBpbmRleCBhYm92
ZSwgaWYgbmVlZGVkICovCisJc3RydWN0IGZpbGUgKmZpbGU7ICAgICAgIC8qIGhvc3QgZmlsZSAq
LworCisJLyogbG9naWNhbCBjbHVzdGVyICovCisJc3RydWN0IHJlaXNlcjRfc2xpZGUgKndpbjsg
Lyogc2xpZGluZyB3aW5kb3cgdG8gbG9jYXRlIGhvbGVzICovCisJbG9naWNhbF9jbHVzdGVyX29w
IG9wOwkgLyogbG9naWNhbCBjbHVzdGVyIG9wZXJhdGlvbiAodHJ1bmNhdGUgb3IKKwkJCQkgICAg
YXBwZW5kL292ZXJ3cml0ZSkgKi8KKwkvKiB0cmFuc2Zvcm0gY2x1c3RlciAqLworCXN0cnVjdCB0
Zm1fY2x1c3RlciB0YzsJIC8qIGNvbnRhaW5zIGFsbCBuZWVkZWQgaW5mbyB0byBzeW5jaHJvbml6
ZQorCQkJCSAgICBwYWdlIGNsdXN0ZXIgYW5kIGRpc2sgY2x1c3RlcikgKi8KKyAgICAgICAgLyog
cGFnZSBjbHVzdGVyICovCisJaW50IG5yX3BhZ2VzOwkJIC8qIG51bWJlciBvZiBwYWdlcyBvZiBj
dXJyZW50IGNoZWNraW4gYWN0aW9uICovCisgCWludCBvbGRfbnJwYWdlczsgICAgICAgICAvKiBu
dW1iZXIgb2YgcGFnZXMgb2YgbGFzdCBjaGVja2luIGFjdGlvbiAqLworCXN0cnVjdCBwYWdlICoq
cGFnZXM7CSAvKiBhdHRhY2hlZCBwYWdlcyAqLworCWpub2RlICogbm9kZTsgICAgICAgICAgICAv
KiBqbm9kZSBmb3IgY2FwdHVyZSAqLworCisJLyogZGlzayBjbHVzdGVyICovCisJaGludF90ICpo
aW50OwkJIC8qIGN1cnJlbnQgcG9zaXRpb24gaW4gdGhlIHRyZWUgKi8KKwlkaXNrX2NsdXN0ZXJf
c3RhdCBkc3RhdDsgLyogc3RhdGUgb2YgdGhlIGN1cnJlbnQgZGlzayBjbHVzdGVyICovCisJaW50
IHJlc2VydmVkOwkJIC8qIGlzIHNwYWNlIGZvciBkaXNrIGNsdXN0ZXIgcmVzZXJ2ZWQgKi8KKyNp
ZiBSRUlTRVI0X0RFQlVHCisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJaW50IHJlc2VydmVkX3By
ZXBwZWQ7CisJaW50IHJlc2VydmVkX3VucHJlcHBlZDsKKyNlbmRpZgorCit9OworCitzdGF0aWMg
aW5saW5lIF9fdTggKiB0Zm1faW5wdXRfZGF0YSAoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1
c3QpCit7CisJcmV0dXJuIHRmbV9zdHJlYW1fZGF0YSgmY2x1c3QtPnRjLCBJTlBVVF9TVFJFQU0p
OworfQorCitzdGF0aWMgaW5saW5lIF9fdTggKiB0Zm1fb3V0cHV0X2RhdGEgKHN0cnVjdCBjbHVz
dGVyX2hhbmRsZSAqIGNsdXN0KQoreworCXJldHVybiB0Zm1fc3RyZWFtX2RhdGEoJmNsdXN0LT50
YywgT1VUUFVUX1NUUkVBTSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IHJlc2V0X2NsdXN0ZXJf
cGdzZXQoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsCisJCQkJICAgICAgaW50IG5ycGFn
ZXMpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTA1NyIsIGNsdXN0LT5wYWdlcyAhPSBOVUxMKTsKKwlt
ZW1zZXQoY2x1c3QtPnBhZ2VzLCAwLCBzaXplb2YoKmNsdXN0LT5wYWdlcykgKiBucnBhZ2VzKTsK
KwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlubGluZSBpbnQgYWxsb2NfY2x1c3Rlcl9wZ3NldChz
dHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJCQkgICAgICBpbnQgbnJwYWdlcykKK3sK
Kwlhc3NlcnQoImVkd2FyZC05NDkiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0x
MzYyIiwgY2x1c3QtPnBhZ2VzID09IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTk1MCIsIG5ycGFn
ZXMgIT0gMCAmJiBucnBhZ2VzIDw9IE1BWF9DTFVTVEVSX05SUEFHRVMpOworCisJY2x1c3QtPnBh
Z2VzID0ga3phbGxvYyhzaXplb2YoKmNsdXN0LT5wYWdlcykgKiBucnBhZ2VzLAorCQkJICAgICAg
IHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoIWNsdXN0LT5wYWdlcykKKwkJcmV0
dXJuIFJFVEVSUigtRU5PTUVNKTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlubGluZSB2b2lk
IG1vdmVfY2x1c3Rlcl9wZ3NldChzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKmNsdXN0LAorCQkJCSAg
ICAgIHN0cnVjdCBwYWdlICoqKnBhZ2VzLCBpbnQgKiBucl9wYWdlcykKK3sKKwlhc3NlcnQoImVk
d2FyZC0xNTQ1IiwgY2x1c3QgIT0gTlVMTCAmJiBjbHVzdC0+cGFnZXMgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTU0NiIsIHBhZ2VzICE9IE5VTEwgJiYgKnBhZ2VzID09IE5VTEwpOworCSpw
YWdlcyA9IGNsdXN0LT5wYWdlczsKKwkqbnJfcGFnZXMgPSBjbHVzdC0+bnJfcGFnZXM7CisJY2x1
c3QtPnBhZ2VzID0gTlVMTDsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGZyZWVfY2x1c3Rlcl9w
Z3NldChzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCkKK3sKKwlhc3NlcnQoImVkd2FyZC05
NTEiLCBjbHVzdC0+cGFnZXMgIT0gTlVMTCk7CisJa2ZyZWUoY2x1c3QtPnBhZ2VzKTsKKwljbHVz
dC0+cGFnZXMgPSBOVUxMOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgcHV0X2NsdXN0ZXJfaGFu
ZGxlKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0KQoreworCWFzc2VydCgiZWR3YXJkLTQz
NSIsIGNsdXN0ICE9IE5VTEwpOworCisJcHV0X3RmbV9jbHVzdGVyKCZjbHVzdC0+dGMpOworCWlm
IChjbHVzdC0+cGFnZXMpCisJCWZyZWVfY2x1c3Rlcl9wZ3NldChjbHVzdCk7CisJbWVtc2V0KGNs
dXN0LCAwLCBzaXplb2YgKmNsdXN0KTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGluY19rZXls
b2FkX2NvdW50KHN0cnVjdCByZWlzZXI0X2NyeXB0b19pbmZvICogZGF0YSkKK3sKKyAJYXNzZXJ0
KCJlZHdhcmQtMTQxMCIsIGRhdGEgIT0gTlVMTCk7CisgCWRhdGEtPmtleWxvYWRfY291bnQrKzsK
K30KKworc3RhdGljIGlubGluZSB2b2lkIGRlY19rZXlsb2FkX2NvdW50KHN0cnVjdCByZWlzZXI0
X2NyeXB0b19pbmZvICogZGF0YSkKK3sKKyAJYXNzZXJ0KCJlZHdhcmQtMTQxMSIsIGRhdGEgIT0g
TlVMTCk7CisgCWFzc2VydCgiZWR3YXJkLTE0MTIiLCBkYXRhLT5rZXlsb2FkX2NvdW50ID4gMCk7
CisgCWRhdGEtPmtleWxvYWRfY291bnQtLTsKK30KKworc3RhdGljIGlubGluZSBpbnQgY2FwdHVy
ZV9jbHVzdGVyX2pub2RlKGpub2RlICogbm9kZSkKK3sKKwlyZXR1cm4gcmVpc2VyNF90cnlfY2Fw
dHVyZShub2RlLCBaTk9ERV9XUklURV9MT0NLLCAwKTsKK30KKworLyogY3J5cHRjb21wcmVzcyBz
cGVjaWZpYyBwYXJ0IG9mIHJlaXNlcjRfaW5vZGUgKi8KK3N0cnVjdCBjcnlwdGNvbXByZXNzX2lu
Zm8geworCXN0cnVjdCBtdXRleCBjaGVja2luX211dGV4OyAgLyogVGhpcyBpcyB0byBzZXJpYWxp
emUKKwkJCQkgICAgICAqIGNoZWNraW5fbG9naWNhbF9jbHVzdGVyIG9wZXJhdGlvbnMgKi8KKwlj
bG9mZl90IHRydW5jX2luZGV4OyAgICAgICAgIC8qIEluZGV4IG9mIHRoZSBsZWZ0bW9zdCB0cnVu
Y2F0ZWQgZGlzaworCQkJCSAgICAgICogY2x1c3RlciAodG8gcmVzb2x2ZSByYWNlcyB3aXRoIHJl
YWQpICovCisJc3RydWN0IHJlaXNlcjRfY3J5cHRvX2luZm8gKmNyeXB0OworCS8qCisJICogdGhl
IGZvbGxvd2luZyAyIGZpZWxkcyBhcmUgY29udHJvbGxlZCBieSBjb21wcmVzc2lvbiBtb2RlIHBs
dWdpbgorCSAqLworCWludCBjb21wcmVzc190b2dnbGU7ICAgICAgICAgIC8qIEN1cnJlbnQgc3Rh
dHVzIG9mIGNvbXByZXNzaWJpbGl0eSAqLworCWludCBsYXR0aWNlX2ZhY3RvcjsgICAgICAgICAg
IC8qIEZhY3RvciBvZiBkeW5hbWljIGxhdHRpY2UuIEZJWE1FOiBIYXZlCisJCQkJICAgICAgICog
YSBjb21wcmVzc2lvbl90b2dnbGUgdG8ga2VlcCB0aGUgZmFjdG9yCisJCQkJICAgICAgICovCisj
aWYgUkVJU0VSNF9ERUJVRworCWF0b21pY190IHBnY291bnQ7ICAgICAgICAgICAgIC8qIG51bWJl
ciBvZiBncmFiYmVkIHBhZ2VzICovCisjZW5kaWYKK307CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBz
ZXRfY29tcHJlc3Npb25fdG9nZ2xlIChzdHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICogaW5mbywg
aW50IHZhbCkKK3sKKwlpbmZvLT5jb21wcmVzc190b2dnbGUgPSB2YWw7Cit9CisKK3N0YXRpYyBp
bmxpbmUgaW50IGdldF9jb21wcmVzc2lvbl90b2dnbGUgKHN0cnVjdCBjcnlwdGNvbXByZXNzX2lu
Zm8gKiBpbmZvKQoreworCXJldHVybiBpbmZvLT5jb21wcmVzc190b2dnbGU7Cit9CisKK3N0YXRp
YyBpbmxpbmUgaW50IGNvbXByZXNzaW9uX2lzX29uKHN0cnVjdCBjcnlwdGNvbXByZXNzX2luZm8g
KiBpbmZvKQoreworCXJldHVybiBnZXRfY29tcHJlc3Npb25fdG9nZ2xlKGluZm8pID09IDE7Cit9
CisKK3N0YXRpYyBpbmxpbmUgdm9pZCB0dXJuX29uX2NvbXByZXNzaW9uKHN0cnVjdCBjcnlwdGNv
bXByZXNzX2luZm8gKiBpbmZvKQoreworCXNldF9jb21wcmVzc2lvbl90b2dnbGUoaW5mbywgMSk7
Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCB0dXJuX29mZl9jb21wcmVzc2lvbihzdHJ1Y3QgY3J5
cHRjb21wcmVzc19pbmZvICogaW5mbykKK3sKKwlzZXRfY29tcHJlc3Npb25fdG9nZ2xlKGluZm8s
IDApOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2xhdHRpY2VfZmFjdG9yKHN0cnVjdCBj
cnlwdGNvbXByZXNzX2luZm8gKiBpbmZvLCBpbnQgdmFsKQoreworCWluZm8tPmxhdHRpY2VfZmFj
dG9yID0gdmFsOworfQorCitzdGF0aWMgaW5saW5lIGludCBnZXRfbGF0dGljZV9mYWN0b3Ioc3Ry
dWN0IGNyeXB0Y29tcHJlc3NfaW5mbyAqIGluZm8pCit7CisJcmV0dXJuIGluZm8tPmxhdHRpY2Vf
ZmFjdG9yOworfQorCitzdHJ1Y3QgY3J5cHRjb21wcmVzc19pbmZvICpjcnlwdGNvbXByZXNzX2lu
b2RlX2RhdGEoY29uc3Qgc3RydWN0IGlub2RlICopOworaW50IGVxdWFsX3RvX3Jkayh6bm9kZSAq
LCBjb25zdCByZWlzZXI0X2tleSAqKTsKK2ludCBnb3RvX3JpZ2h0X25laWdoYm9yKGNvb3JkX3Qg
KiwgbG9ja19oYW5kbGUgKik7CitpbnQgY3J5cHRjb21wcmVzc19pbm9kZV9vayhzdHJ1Y3QgaW5v
ZGUgKmlub2RlKTsKK2ludCBjb29yZF9pc191bnByZXBwZWRfY3RhaWwoY29uc3QgY29vcmRfdCAq
IGNvb3JkKTsKK2V4dGVybiBpbnQgZG9fcmVhZHBhZ2VfY3RhaWwoc3RydWN0IGlub2RlICosIHN0
cnVjdCBjbHVzdGVyX2hhbmRsZSAqLAorCQkJICAgICBzdHJ1Y3QgcGFnZSAqIHBhZ2UsIHpub2Rl
X2xvY2tfbW9kZSBtb2RlKTsKK2V4dGVybiBpbnQgY3RhaWxfaW5zZXJ0X3VucHJlcHBlZF9jbHVz
dGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJCQkgIHN0cnVjdCBpbm9kZSAq
IGlub2RlKTsKK2V4dGVybiBpbnQgcmVhZHBhZ2VzX2NyeXB0Y29tcHJlc3Moc3RydWN0IGZpbGUq
LCBzdHJ1Y3QgYWRkcmVzc19zcGFjZSosCisJCQkJICAgc3RydWN0IGxpc3RfaGVhZCosIHVuc2ln
bmVkKTsKK2ludCBiaW5kX2NyeXB0Y29tcHJlc3Moc3RydWN0IGlub2RlICpjaGlsZCwgc3RydWN0
IGlub2RlICpwYXJlbnQpOwordm9pZCBkZXN0cm95X2lub2RlX2NyeXB0Y29tcHJlc3Moc3RydWN0
IGlub2RlICogaW5vZGUpOworaW50IGdyYWJfcGFnZV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAqaW5v
ZGUsIHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkgICAgICByd19vcCBydyk7Citp
bnQgd3JpdGVfZGlzcGF0Y2hfaG9vayhzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGlub2RlICog
aW5vZGUsCisJCQlsb2ZmX3QgcG9zLCBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJ
CXN0cnVjdCBkaXNwYXRjaF9jb250ZXh0ICogY29udCk7CitpbnQgc2V0YXR0cl9kaXNwYXRjaF9o
b29rKHN0cnVjdCBpbm9kZSAqIGlub2RlKTsKK3N0cnVjdCByZWlzZXI0X2NyeXB0b19pbmZvICog
aW5vZGVfY3J5cHRvX2luZm8oc3RydWN0IGlub2RlICogaW5vZGUpOwordm9pZCBpbmhlcml0X2Ny
eXB0b19pbmZvX2NvbW1vbihzdHJ1Y3QgaW5vZGUgKiBwYXJlbnQsIHN0cnVjdCBpbm9kZSAqIG9i
amVjdCwKKwkJCQlpbnQgKCpjYW5faW5oZXJpdCkoc3RydWN0IGlub2RlICogY2hpbGQsCisJCQkJ
CQkgICBzdHJ1Y3QgaW5vZGUgKiBwYXJlbnQpKTsKK3ZvaWQgcmVpc2VyNF9hdHRhY2hfY3J5cHRv
X2luZm8oc3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJc3RydWN0IHJlaXNlcjRfY3J5cHRvX2lu
Zm8gKiBpbmZvKTsKK3ZvaWQgY2hhbmdlX2NyeXB0b19pbmZvKHN0cnVjdCBpbm9kZSAqIGlub2Rl
LCBzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIG5ldyk7CitzdHJ1Y3QgcmVpc2VyNF9jcnlw
dG9faW5mbyAqIHJlaXNlcjRfYWxsb2NfY3J5cHRvX2luZm8gKHN0cnVjdCBpbm9kZSAqIGlub2Rl
KTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3QgY3J5cHRvX2Jsa2NpcGhlciAqIGluZm9fZ2V0X2Np
cGhlcihzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8pCit7CisJcmV0dXJuIGluZm8t
PmNpcGhlcjsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGluZm9fc2V0X2NpcGhlcihzdHJ1Y3Qg
cmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8sCisJCQkJICAgc3RydWN0IGNyeXB0b19ibGtjaXBo
ZXIgKiB0Zm0pCit7CisJaW5mby0+Y2lwaGVyID0gdGZtOworfQorCitzdGF0aWMgaW5saW5lIHN0
cnVjdCBjcnlwdG9faGFzaCAqIGluZm9fZ2V0X2RpZ2VzdChzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9f
aW5mbyAqIGluZm8pCit7CisJcmV0dXJuIGluZm8tPmRpZ2VzdDsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIGluZm9fc2V0X2RpZ2VzdChzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9faW5mbyAqIGluZm8s
CisJCQkJICAgc3RydWN0IGNyeXB0b19oYXNoICogdGZtKQoreworCWluZm8tPmRpZ2VzdCA9IHRm
bTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHB1dF9jbHVzdGVyX3BhZ2Uoc3RydWN0IHBhZ2Ug
KiBwYWdlKQoreworCXB1dF9wYWdlKHBhZ2UpOworfQorCisjZW5kaWYgLyogX19GU19SRUlTRVI0
X0NSWVBUQ09NUFJFU1NfSF9fICovCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2
YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAi
TEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVt
bjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVy
ZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZS9maWxlLmMg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvZmlsZS5jCi0tLSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlL2ZpbGUuYwkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUv
ZmlsZS5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDYyMjIyMjQ3ICswMTAwCkBAIC0wLDAgKzEsMjc5
OCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFucyBSZWlzZXIs
IGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyoKKyAqIHRo
aXMgZmlsZSBjb250YWlucyBpbXBsZW1lbnRhdGlvbnMgb2YgaW5vZGUvZmlsZS9hZGRyZXNzX3Nw
YWNlL2ZpbGUgcGx1Z2luCisgKiBvcGVyYXRpb25zIHNwZWNpZmljIGZvciAidW5peCBmaWxlIHBs
dWdpbiIgKHBsdWdpbiBpZCBpcworICogVU5JWF9GSUxFX1BMVUdJTl9JRCkuICJVbml4IGZpbGUi
IGlzIGVpdGhlciBidWlsdCBvZiB0YWlsIGl0ZW1zIG9ubHkKKyAqIChGT1JNQVRUSU5HX0lEKSBv
ciBvZiBleHRlbnQgaXRlbXMgb25seSAoRVhURU5UX1BPSU5URVJfSUQpIG9yIGVtcHR5IChoYXZl
CisgKiBubyBpdGVtcyBidXQgc3RhdCBkYXRhKQorICovCisKKyNpbmNsdWRlICIuLi8uLi9pbm9k
ZS5oIgorI2luY2x1ZGUgIi4uLy4uL3N1cGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vdHJlZV93YWxr
LmgiCisjaW5jbHVkZSAiLi4vLi4vY2FycnkuaCIKKyNpbmNsdWRlICIuLi8uLi9wYWdlX2NhY2hl
LmgiCisjaW5jbHVkZSAiLi4vLi4vaW9jdGwuaCIKKyNpbmNsdWRlICIuLi9vYmplY3QuaCIKKyNp
bmNsdWRlICIuLi9jbHVzdGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vc2FmZV9saW5rLmgiCisKKyNp
bmNsdWRlIDxsaW51eC93cml0ZWJhY2suaD4KKyNpbmNsdWRlIDxsaW51eC9wYWdldmVjLmg+Cisj
aW5jbHVkZSA8bGludXgvc3lzY2FsbHMuaD4KKworCitzdGF0aWMgaW50IHVucGFjayhzdHJ1Y3Qg
ZmlsZSAqZmlsZSwgc3RydWN0IGlub2RlICppbm9kZSwgaW50IGZvcmV2ZXIpOworc3RhdGljIHZv
aWQgZHJvcF9hY2Nlc3Moc3RydWN0IHVuaXhfZmlsZV9pbmZvICopOworc3RhdGljIGludCBoaW50
X3ZhbGlkYXRlKGhpbnRfdCAqIGhpbnQsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCBpbnQgY2hl
Y2tfa2V5LAorCQkJIHpub2RlX2xvY2tfbW9kZSBsb2NrX21vZGUpOworCisvKiBHZXQgZXhjbHVz
aXZlIGFjY2VzcyBhbmQgbWFrZSBzdXJlIHRoYXQgZmlsZSBpcyBub3QgcGFydGlhbGx5CisgKiBj
b252ZXJ0ZWQgKEl0IG1heSBoYXBwZW4gdGhhdCBhbm90aGVyIHByb2Nlc3MgaXMgZG9pbmcgdGFp
bAorICogY29udmVyc2lvbi4gSWYgc28sIHdhaXQgdW50aWwgaXQgY29tcGxldGVzKQorICovCitz
dGF0aWMgaW5saW5lIHZvaWQgZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3NfY2FyZWZ1bChzdHJ1Y3QgdW5p
eF9maWxlX2luZm8gKiB1Zl9pbmZvLAorCQkJCQkJc3RydWN0IGlub2RlICppbm9kZSkKK3sKKyAg
ICAgICAgZG8geworCQlnZXRfZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwkJaWYgKCFyZWlz
ZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfSU5fQ09OVikpCisJCQlicmVh
azsKKwkJZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQlzY2hlZHVsZSgpOworCX0g
d2hpbGUgKDEpOworfQorCisvKiBnZXQgdW5peCBmaWxlIHBsdWdpbiBzcGVjaWZpYyBwb3J0aW9u
IG9mIGlub2RlICovCitzdHJ1Y3QgdW5peF9maWxlX2luZm8gKnVuaXhfZmlsZV9pbm9kZV9kYXRh
KGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuICZyZWlzZXI0X2lub2RlX2Rh
dGEoaW5vZGUpLT5maWxlX3BsdWdpbl9kYXRhLnVuaXhfZmlsZV9pbmZvOworfQorCisvKioKKyAq
IGVxdWFsX3RvX3JkayAtIGNvbXBhcmUga2V5IGFuZCB6bm9kZSdzIHJpZ2h0IGRlbGltaXRpbmcg
a2V5CisgKiBAbm9kZTogbm9kZSB3aG9zZSByaWdodCBkZWxpbWl0aW5nIGtleSB0byBjb21wYXJl
IHdpdGggQGtleQorICogQGtleToga2V5IHRvIGNvbXBhcmUgd2l0aCBAbm9kZSdzIHJpZ2h0IGRl
bGltaXRpbmcga2V5CisgKgorICogUmV0dXJucyB0cnVlIGlmIEBrZXkgaXMgZXF1YWwgdG8gcmln
aHQgZGVsaW1pdGluZyBrZXkgb2YgQG5vZGUuCisgKi8KK2ludCBlcXVhbF90b19yZGsoem5vZGUg
Km5vZGUsIGNvbnN0IHJlaXNlcjRfa2V5ICprZXkpCit7CisJaW50IHJlc3VsdDsKKworCXJlYWRf
bG9ja19kayh6bm9kZV9nZXRfdHJlZShub2RlKSk7CisJcmVzdWx0ID0ga2V5ZXEoa2V5LCB6bm9k
ZV9nZXRfcmRfa2V5KG5vZGUpKTsKKwlyZWFkX3VubG9ja19kayh6bm9kZV9nZXRfdHJlZShub2Rl
KSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworLyoqCisgKiBl
cXVhbF90b19sZGsgLSBjb21wYXJlIGtleSBhbmQgem5vZGUncyBsZWZ0IGRlbGltaXRpbmcga2V5
CisgKiBAbm9kZTogbm9kZSB3aG9zZSBsZWZ0IGRlbGltaXRpbmcga2V5IHRvIGNvbXBhcmUgd2l0
aCBAa2V5CisgKiBAa2V5OiBrZXkgdG8gY29tcGFyZSB3aXRoIEBub2RlJ3MgbGVmdCBkZWxpbWl0
aW5nIGtleQorICoKKyAqIFJldHVybnMgdHJ1ZSBpZiBAa2V5IGlzIGVxdWFsIHRvIGxlZnQgZGVs
aW1pdGluZyBrZXkgb2YgQG5vZGUuCisgKi8KK2ludCBlcXVhbF90b19sZGsoem5vZGUgKm5vZGUs
IGNvbnN0IHJlaXNlcjRfa2V5ICprZXkpCit7CisJaW50IHJlc3VsdDsKKworCXJlYWRfbG9ja19k
ayh6bm9kZV9nZXRfdHJlZShub2RlKSk7CisJcmVzdWx0ID0ga2V5ZXEoa2V5LCB6bm9kZV9nZXRf
bGRfa2V5KG5vZGUpKTsKKwlyZWFkX3VubG9ja19kayh6bm9kZV9nZXRfdHJlZShub2RlKSk7CisJ
cmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBjaGVja19jb29yZCAtIGNoZWNrIHdoZXRoZXIg
Y29vcmQgY29ycmVzcG9uZHMgdG8ga2V5CisgKiBAY29vcmQ6IGNvb3JkIHRvIGNoZWNrCisgKiBA
a2V5OiBrZXkgQGNvb3JkIGhhcyB0byBjb3JyZXNwb25kIHRvCisgKgorICogUmV0dXJucyB0cnVl
IGlmIEBjb29yZCBpcyBzZXQgYXMgaWYgaXQgd2FzIHNldCBhcyByZXN1bHQgb2YgbG9va3VwIHdp
dGggQGtleQorICogaW4gY29vcmQtPm5vZGUuCisgKi8KK3N0YXRpYyBpbnQgY2hlY2tfY29vcmQo
Y29uc3QgY29vcmRfdCAqY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICprZXkpCit7CisJY29vcmRf
dCB0d2luOworCisJbm9kZV9wbHVnaW5fYnlfbm9kZShjb29yZC0+bm9kZSktPmxvb2t1cChjb29y
ZC0+bm9kZSwga2V5LAorCQkJCQkJIEZJTkRfTUFYX05PVF9NT1JFX1RIQU4sICZ0d2luKTsKKwly
ZXR1cm4gY29vcmRzX2VxdWFsKGNvb3JkLCAmdHdpbik7Cit9CisKKyNlbmRpZiAvKiBSRUlTRVI0
X0RFQlVHICovCisKKy8qKgorICogaW5pdF91Zl9jb29yZCAtIGluaXRpYWxpemUgZXh0ZW5kZWQg
Y29vcmQKKyAqIEB1Zl9jb29yZDoKKyAqIEBsaDoKKyAqCisgKgorICovCit2b2lkIGluaXRfdWZf
Y29vcmQodWZfY29vcmRfdCAqdWZfY29vcmQsIGxvY2tfaGFuZGxlICpsaCkKK3sKKwljb29yZF9p
bml0X3plcm8oJnVmX2Nvb3JkLT5jb29yZCk7CisJY29vcmRfY2xlYXJfaXBsdWcoJnVmX2Nvb3Jk
LT5jb29yZCk7CisJdWZfY29vcmQtPmxoID0gbGg7CisJaW5pdF9saChsaCk7CisJbWVtc2V0KCZ1
Zl9jb29yZC0+ZXh0ZW5zaW9uLCAwLCBzaXplb2YodWZfY29vcmQtPmV4dGVuc2lvbikpOworCXVm
X2Nvb3JkLT52YWxpZCA9IDA7Cit9CisKK3N0YXRpYyB2b2lkIHZhbGlkYXRlX2V4dGVuZGVkX2Nv
b3JkKHVmX2Nvb3JkX3QgKnVmX2Nvb3JkLCBsb2ZmX3Qgb2Zmc2V0KQoreworCWFzc2VydCgidnMt
MTMzMyIsIHVmX2Nvb3JkLT52YWxpZCA9PSAwKTsKKworCWlmIChjb29yZF9pc19iZXR3ZWVuX2l0
ZW1zKCZ1Zl9jb29yZC0+Y29vcmQpKQorCQlyZXR1cm47CisKKwlhc3NlcnQoInZzLTEzNDgiLAor
CSAgICAgICBpdGVtX3BsdWdpbl9ieV9jb29yZCgmdWZfY29vcmQtPmNvb3JkKS0+cy5maWxlLgor
CSAgICAgICBpbml0X2Nvb3JkX2V4dGVuc2lvbik7CisKKwlpdGVtX2JvZHlfYnlfY29vcmQoJnVm
X2Nvb3JkLT5jb29yZCk7CisJaXRlbV9wbHVnaW5fYnlfY29vcmQoJnVmX2Nvb3JkLT5jb29yZCkt
PnMuZmlsZS4KKwkgICAgaW5pdF9jb29yZF9leHRlbnNpb24odWZfY29vcmQsIG9mZnNldCk7Cit9
CisKKy8qKgorICogZ290b19yaWdodF9uZWlnaGJvciAtIGxvY2sgcmlnaHQgbmVpZ2hib3IsIGRy
b3AgY3VycmVudCBub2RlIGxvY2sKKyAqIEBjb29yZDoKKyAqIEBsaDoKKyAqCisgKiBPYnRhaW4g
bG9jayBvbiByaWdodCBuZWlnaGJvciBhbmQgZHJvcCBsb2NrIG9uIGN1cnJlbnQgbm9kZS4KKyAq
LworaW50IGdvdG9fcmlnaHRfbmVpZ2hib3IoY29vcmRfdCAqY29vcmQsIGxvY2tfaGFuZGxlICps
aCkKK3sKKwlpbnQgcmVzdWx0OworCWxvY2tfaGFuZGxlIGxoX3JpZ2h0OworCisJYXNzZXJ0KCJ2
cy0xMTAwIiwgem5vZGVfaXNfbG9ja2VkKGNvb3JkLT5ub2RlKSk7CisKKwlpbml0X2xoKCZsaF9y
aWdodCk7CisJcmVzdWx0ID0gcmVpc2VyNF9nZXRfcmlnaHRfbmVpZ2hib3IoJmxoX3JpZ2h0LCBj
b29yZC0+bm9kZSwKKwkJCQkJICAgIHpub2RlX2lzX3dsb2NrZWQoY29vcmQtPm5vZGUpID8KKwkJ
CQkJICAgIFpOT0RFX1dSSVRFX0xPQ0sgOiBaTk9ERV9SRUFEX0xPQ0ssCisJCQkJCSAgICBHTl9D
QU5fVVNFX1VQUEVSX0xFVkVMUyk7CisJaWYgKHJlc3VsdCkgeworCQlkb25lX2xoKCZsaF9yaWdo
dCk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyoKKwkgKiB3ZSBob2xkIHR3byBsb25ndGVy
bSBsb2NrcyBvbiBuZWlnaGJvcmluZyBub2Rlcy4gVW5sb2NrIGxlZnQgb2YKKwkgKiB0aGVtCisJ
ICovCisJZG9uZV9saChsaCk7CisKKwljb29yZF9pbml0X2ZpcnN0X3VuaXRfbm9jaGVjayhjb29y
ZCwgbGhfcmlnaHQubm9kZSk7CisJbW92ZV9saChsaCwgJmxoX3JpZ2h0KTsKKworCXJldHVybiAw
OworCit9CisKKy8qKgorICogc2V0X2ZpbGVfc3RhdGUKKyAqIEB1Zl9pbmZvOgorICogQGNia19y
ZXN1bHQ6CisgKiBAbGV2ZWw6CisgKgorICogVGhpcyBpcyB0byBiZSB1c2VkIGJ5IGZpbmRfZmls
ZV9pdGVtIGFuZCBpbiBmaW5kX2ZpbGVfc3RhdGUgdG8KKyAqIGRldGVybWluZSByZWFsIHN0YXRl
IG9mIGZpbGUKKyAqLworc3RhdGljIHZvaWQgc2V0X2ZpbGVfc3RhdGUoc3RydWN0IHVuaXhfZmls
ZV9pbmZvICp1Zl9pbmZvLCBpbnQgY2JrX3Jlc3VsdCwKKwkJCSAgIHRyZWVfbGV2ZWwgbGV2ZWwp
Cit7CisJaWYgKGNia19lcnJvcmVkKGNia19yZXN1bHQpKQorCQkvKiBlcnJvciBoYXBwZW5lZCBp
biBmaW5kX2ZpbGVfaXRlbSAqLworCQlyZXR1cm47CisKKwlhc3NlcnQoInZzLTExNjQiLCBsZXZl
bCA9PSBMRUFGX0xFVkVMIHx8IGxldmVsID09IFRXSUdfTEVWRUwpOworCisJaWYgKHVmX2luZm8t
PmNvbnRhaW5lciA9PSBVRl9DT05UQUlORVJfVU5LTk9XTikgeworCQlpZiAoY2JrX3Jlc3VsdCA9
PSBDQktfQ09PUkRfTk9URk9VTkQpCisJCQl1Zl9pbmZvLT5jb250YWluZXIgPSBVRl9DT05UQUlO
RVJfRU1QVFk7CisJCWVsc2UgaWYgKGxldmVsID09IExFQUZfTEVWRUwpCisJCQl1Zl9pbmZvLT5j
b250YWluZXIgPSBVRl9DT05UQUlORVJfVEFJTFM7CisJCWVsc2UKKwkJCXVmX2luZm8tPmNvbnRh
aW5lciA9IFVGX0NPTlRBSU5FUl9FWFRFTlRTOworCX0gZWxzZSB7CisJCS8qCisJCSAqIGZpbGUg
c3RhdGUgaXMga25vd24sIGNoZWNrIHdoZXRoZXIgaXQgaXMgc2V0IGNvcnJlY3RseSBpZgorCQkg
KiBmaWxlIGlzIG5vdCBiZWluZyB0YWlsIGNvbnZlcnRlZAorCQkgKi8KKwkJaWYgKCFyZWlzZXI0
X2lub2RlX2dldF9mbGFnKHVuaXhfZmlsZV9pbmZvX3RvX2lub2RlKHVmX2luZm8pLAorCQkJCQkg
ICAgUkVJU0VSNF9QQVJUX0lOX0NPTlYpKSB7CisJCQlhc3NlcnQoInZzLTExNjIiLAorCQkJICAg
ICAgIGVyZ28obGV2ZWwgPT0gTEVBRl9MRVZFTCAmJgorCQkJCSAgICBjYmtfcmVzdWx0ID09IENC
S19DT09SRF9GT1VORCwKKwkJCQkgICAgdWZfaW5mby0+Y29udGFpbmVyID09IFVGX0NPTlRBSU5F
Ul9UQUlMUykpOworCQkJYXNzZXJ0KCJ2cy0xMTY1IiwKKwkJCSAgICAgICBlcmdvKGxldmVsID09
IFRXSUdfTEVWRUwgJiYKKwkJCQkgICAgY2JrX3Jlc3VsdCA9PSBDQktfQ09PUkRfRk9VTkQsCisJ
CQkJICAgIHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05UQUlORVJfRVhURU5UUykpOworCQl9
CisJfQorfQorCitpbnQgZmluZF9maWxlX2l0ZW1fbm9oaW50KGNvb3JkX3QgKmNvb3JkLCBsb2Nr
X2hhbmRsZSAqbGgsCisJCQkgIGNvbnN0IHJlaXNlcjRfa2V5ICprZXksIHpub2RlX2xvY2tfbW9k
ZSBsb2NrX21vZGUsCisJCQkgIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmV0dXJuIHJlaXNl
cjRfb2JqZWN0X2xvb2t1cChpbm9kZSwga2V5LCBjb29yZCwgbGgsIGxvY2tfbW9kZSwKKwkJCQkg
ICAgIEZJTkRfTUFYX05PVF9NT1JFX1RIQU4sCisJCQkJICAgICBUV0lHX0xFVkVMLCBMRUFGX0xF
VkVMLAorCQkJCSAgICAgKGxvY2tfbW9kZSA9PSBaTk9ERV9SRUFEX0xPQ0spID8gQ0JLX1VOSVFV
RSA6CisJCQkJICAgICAoQ0JLX1VOSVFVRSB8IENCS19GT1JfSU5TRVJUKSwKKwkJCQkgICAgIE5V
TEwgLyogcmFfaW5mbyAqLyApOworfQorCisvKioKKyAqIGZpbmRfZmlsZV9pdGVtIC0gbG9vayBm
b3IgZmlsZSBpdGVtIGluIHRoZSB0cmVlCisgKiBAaGludDogcHJvdmlkZXMgY29vcmRpbmF0ZSwg
bG9jayBoYW5kbGUsIHNlYWwKKyAqIEBrZXk6IGtleSBmb3Igc2VhcmNoCisgKiBAbW9kZTogbW9k
ZSBvZiBsb2NrIHRvIHB1dCBvbiByZXR1cm5lZCBub2RlCisgKiBAcmFfaW5mbzoKKyAqIEBpbm9k
ZToKKyAqCisgKiBUaGlzIGZpbmRzIHBvc2l0aW9uIGluIHRoZSB0cmVlIGNvcnJlc3BvbmRpbmcg
dG8gQGtleS4gSXQgZmlyc3QgdHJpZXMgdG8gdXNlCisgKiBAaGludCdzIHNlYWwgaWYgaXQgaXMg
c2V0LgorICovCitpbnQgZmluZF9maWxlX2l0ZW0oaGludF90ICpoaW50LCBjb25zdCByZWlzZXI0
X2tleSAqa2V5LAorCQkgICB6bm9kZV9sb2NrX21vZGUgbG9ja19tb2RlLAorCQkgICBzdHJ1Y3Qg
aW5vZGUgKmlub2RlKQoreworCWludCByZXN1bHQ7CisJY29vcmRfdCAqY29vcmQ7CisJbG9ja19o
YW5kbGUgKmxoOworCisJYXNzZXJ0KCJuaWtpdGEtMzAzMCIsIHJlaXNlcjRfc2NoZWR1bGFibGUo
KSk7CisJYXNzZXJ0KCJ2cy0xNzA3IiwgaGludCAhPSBOVUxMKTsKKwlhc3NlcnQoInZzLTQ3Iiwg
aW5vZGUgIT0gTlVMTCk7CisKKwljb29yZCA9ICZoaW50LT5leHRfY29vcmQuY29vcmQ7CisJbGgg
PSBoaW50LT5leHRfY29vcmQubGg7CisJaW5pdF9saChsaCk7CisKKwlyZXN1bHQgPSBoaW50X3Zh
bGlkYXRlKGhpbnQsIGtleSwgMSAvKiBjaGVjayBrZXkgKi8sIGxvY2tfbW9kZSk7CisJaWYgKCFy
ZXN1bHQpIHsKKwkJaWYgKGNvb3JkLT5iZXR3ZWVuID09IEFGVEVSX1VOSVQgJiYKKwkJICAgIGVx
dWFsX3RvX3Jkayhjb29yZC0+bm9kZSwga2V5KSkgeworCQkJcmVzdWx0ID0gZ290b19yaWdodF9u
ZWlnaGJvcihjb29yZCwgbGgpOworCQkJaWYgKHJlc3VsdCA9PSAtRV9OT19ORUlHSEJPUikKKwkJ
CQlyZXR1cm4gUkVURVJSKC1FSU8pOworCQkJaWYgKHJlc3VsdCkKKwkJCQlyZXR1cm4gcmVzdWx0
OworCQkJYXNzZXJ0KCJ2cy0xMTUyIiwgZXF1YWxfdG9fbGRrKGNvb3JkLT5ub2RlLCBrZXkpKTsK
KwkJCS8qCisJCQkgKiB3ZSBtb3ZlZCB0byBkaWZmZXJlbnQgbm9kZS4gSW52YWxpZGF0ZSBjb29y
ZAorCQkJICogZXh0ZW5zaW9uLCB6bG9hZCBpcyBuZWNlc3NhcnkgdG8gaW5pdCBpdCBhZ2Fpbgor
CQkJICovCisJCQloaW50LT5leHRfY29vcmQudmFsaWQgPSAwOworCQl9CisKKwkJc2V0X2ZpbGVf
c3RhdGUodW5peF9maWxlX2lub2RlX2RhdGEoaW5vZGUpLCBDQktfQ09PUkRfRk9VTkQsCisJCQkg
ICAgICAgem5vZGVfZ2V0X2xldmVsKGNvb3JkLT5ub2RlKSk7CisKKwkJcmV0dXJuIENCS19DT09S
RF9GT1VORDsKKwl9CisKKwljb29yZF9pbml0X3plcm8oY29vcmQpOworCXJlc3VsdCA9IGZpbmRf
ZmlsZV9pdGVtX25vaGludChjb29yZCwgbGgsIGtleSwgbG9ja19tb2RlLCBpbm9kZSk7CisJc2V0
X2ZpbGVfc3RhdGUodW5peF9maWxlX2lub2RlX2RhdGEoaW5vZGUpLCByZXN1bHQsCisJCSAgICAg
ICB6bm9kZV9nZXRfbGV2ZWwoY29vcmQtPm5vZGUpKTsKKworCS8qIEZJWE1FOiB3ZSBtaWdodCBh
bHJlYWR5IGhhdmUgY29vcmQgZXh0ZW5zaW9uIGluaXRpYWxpemVkICovCisJaGludC0+ZXh0X2Nv
b3JkLnZhbGlkID0gMDsKKwlyZXR1cm4gcmVzdWx0OworfQorCit2b2lkIGhpbnRfaW5pdF96ZXJv
KGhpbnRfdCAqIGhpbnQpCit7CisJbWVtc2V0KGhpbnQsIDAsIHNpemVvZigqaGludCkpOworCWlu
aXRfbGgoJmhpbnQtPmxoKTsKKwloaW50LT5leHRfY29vcmQubGggPSAmaGludC0+bGg7Cit9CisK
K3N0YXRpYyBpbnQgZmluZF9maWxlX3N0YXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCB1
bml4X2ZpbGVfaW5mbyAqdWZfaW5mbykKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfa2V5IGtl
eTsKKwljb29yZF90IGNvb3JkOworCWxvY2tfaGFuZGxlIGxoOworCisJYXNzZXJ0KCJ2cy0xNjI4
IiwgZWFfb2J0YWluZWQodWZfaW5mbykpOworCisJaWYgKHVmX2luZm8tPmNvbnRhaW5lciA9PSBV
Rl9DT05UQUlORVJfVU5LTk9XTikgeworCQlrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24o
aW5vZGUsIDAsICZrZXkpOworCQlpbml0X2xoKCZsaCk7CisJCXJlc3VsdCA9IGZpbmRfZmlsZV9p
dGVtX25vaGludCgmY29vcmQsICZsaCwgJmtleSwKKwkJCQkJICAgICAgIFpOT0RFX1JFQURfTE9D
SywgaW5vZGUpOworCQlzZXRfZmlsZV9zdGF0ZSh1Zl9pbmZvLCByZXN1bHQsIHpub2RlX2dldF9s
ZXZlbChjb29yZC5ub2RlKSk7CisJCWRvbmVfbGgoJmxoKTsKKwkJaWYgKCFjYmtfZXJyb3JlZChy
ZXN1bHQpKQorCQkJcmVzdWx0ID0gMDsKKwl9IGVsc2UKKwkJcmVzdWx0ID0gMDsKKwlhc3NlcnQo
InZzLTEwNzQiLAorCSAgICAgICBlcmdvKHJlc3VsdCA9PSAwLCB1Zl9pbmZvLT5jb250YWluZXIg
IT0gVUZfQ09OVEFJTkVSX1VOS05PV04pKTsKKwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQo
KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIEVzdGltYXRlIGFuZCByZXNlcnZlIHNw
YWNlIG5lZWRlZCB0byB0cnVuY2F0ZSBwYWdlCisgKiB3aGljaCBnZXRzIHBhcnRpYWxseSB0cnVu
Y2F0ZWQ6IG9uZSBibG9jayBmb3IgcGFnZQorICogaXRzZWxmLCBzdGF0LWRhdGEgdXBkYXRlIChl
c3RpbWF0ZV9vbmVfaW5zZXJ0X2ludG9faXRlbSkKKyAqIGFuZCBvbmUgaXRlbSBpbnNlcnRpb24g
KGVzdGltYXRlX29uZV9pbnNlcnRfaW50b19pdGVtKQorICogd2hpY2ggbWF5IGhhcHBlbiBpZiBw
YWdlIGNvcnJlc3BvbmRzIHRvIGhvbGUgZXh0ZW50IGFuZAorICogdW5hbGxvY2F0ZWQgb25lIHdp
bGwgaGF2ZSB0byBiZSBjcmVhdGVkCisgKi8KK3N0YXRpYyBpbnQgcmVzZXJ2ZV9wYXJ0aWFsX3Bh
Z2UocmVpc2VyNF90cmVlICogdHJlZSkKK3sKKwlncmFiX3NwYWNlX2VuYWJsZSgpOworCXJldHVy
biByZWlzZXI0X2dyYWJfcmVzZXJ2ZWQocmVpc2VyNF9nZXRfY3VycmVudF9zYigpLAorCQkJCSAg
ICAgMSArCisJCQkJICAgICAyICogZXN0aW1hdGVfb25lX2luc2VydF9pbnRvX2l0ZW0odHJlZSks
CisJCQkJICAgICBCQV9DQU5fQ09NTUlUKTsKK30KKworLyogZXN0aW1hdGUgYW5kIHJlc2VydmUg
c3BhY2UgbmVlZGVkIHRvIGN1dCBvbmUgaXRlbSBhbmQgdXBkYXRlIG9uZSBzdGF0IGRhdGEgKi8K
K3N0YXRpYyBpbnQgcmVzZXJ2ZV9jdXRfaXRlcmF0aW9uKHJlaXNlcjRfdHJlZSAqIHRyZWUpCit7
CisJX191NjQgZXN0aW1hdGUgPSBlc3RpbWF0ZV9vbmVfaXRlbV9yZW1vdmFsKHRyZWUpCisJICAg
ICsgZXN0aW1hdGVfb25lX2luc2VydF9pbnRvX2l0ZW0odHJlZSk7CisKKwlhc3NlcnQoIm5pa2l0
YS0zMTcyIiwgbG9ja19zdGFja19pc2NsZWFuKGdldF9jdXJyZW50X2xvY2tfc3RhY2soKSkpOwor
CisJZ3JhYl9zcGFjZV9lbmFibGUoKTsKKwkvKiBXZSBuZWVkIHRvIGRvdWJsZSBvdXIgZXN0aW1h
dGUgbm93IHRoYXQgd2UgY2FuIGRlbGV0ZSBtb3JlIHRoYW4gb25lCisJICAgbm9kZS4gKi8KKwly
ZXR1cm4gcmVpc2VyNF9ncmFiX3Jlc2VydmVkKHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSwgZXN0
aW1hdGUgKiAyLAorCQkJCSAgICAgQkFfQ0FOX0NPTU1JVCk7Cit9CisKK2ludCByZWlzZXI0X3Vw
ZGF0ZV9maWxlX3NpemUoc3RydWN0IGlub2RlICppbm9kZSwgbG9mZl90IG5ld19zaXplLAorCQkJ
ICAgICBpbnQgdXBkYXRlX3NkKQoreworCWludCByZXN1bHQgPSAwOworCisJSU5PREVfU0VUX1NJ
WkUoaW5vZGUsIG5ld19zaXplKTsKKwlpZiAodXBkYXRlX3NkKSB7CisJCWlub2RlLT5pX2N0aW1l
ID0gaW5vZGUtPmlfbXRpbWUgPSBjdXJyZW50X3RpbWUoaW5vZGUpOworCQlyZXN1bHQgPSByZWlz
ZXI0X3VwZGF0ZV9zZChpbm9kZSk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qKgorICog
Q3V0IGZpbGUgaXRlbXMgb25lIGJ5IG9uZSBzdGFydGluZyBmcm9tIHRoZSBsYXN0IG9uZSB1bnRp
bAorICogbmV3IGZpbGUgc2l6ZSAoaW5vZGUtPmlfc2l6ZSkgaXMgcmVhY2hlZC4gUmVzZXJ2ZSBz
cGFjZQorICogYW5kIHVwZGF0ZSBmaWxlIHN0YXQgZGF0YSBvbiBldmVyeSBzaW5nbGUgY3V0IGZy
b20gdGhlIHRyZWUKKyAqLworaW50IGN1dF9maWxlX2l0ZW1zKHN0cnVjdCBpbm9kZSAqaW5vZGUs
IGxvZmZfdCBuZXdfc2l6ZSwKKwkJICAgaW50IHVwZGF0ZV9zZCwgbG9mZl90IGN1cl9zaXplLAor
CQkgICBpbnQgKCp1cGRhdGVfYWN0b3IpIChzdHJ1Y3QgaW5vZGUgKiwgbG9mZl90LCBpbnQpKQor
eworCXJlaXNlcjRfa2V5IGZyb21fa2V5LCB0b19rZXk7CisJcmVpc2VyNF9rZXkgc21hbGxlc3Rf
cmVtb3ZlZDsKKwlmaWxlX3BsdWdpbiAqZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSk7
CisJaW50IHJlc3VsdDsKKwlpbnQgcHJvZ3Jlc3MgPSAwOworCisJYXNzZXJ0KCJ2cy0xMjQ4IiwK
KwkgICAgICAgZnBsdWcgPT0gZmlsZV9wbHVnaW5fYnlfaWQoVU5JWF9GSUxFX1BMVUdJTl9JRCkg
fHwKKwkgICAgICAgZnBsdWcgPT0gZmlsZV9wbHVnaW5fYnlfaWQoQ1JZUFRDT01QUkVTU19GSUxF
X1BMVUdJTl9JRCkpOworCisJZnBsdWctPmtleV9ieV9pbm9kZShpbm9kZSwgbmV3X3NpemUsICZm
cm9tX2tleSk7CisJdG9fa2V5ID0gZnJvbV9rZXk7CisJc2V0X2tleV9vZmZzZXQoJnRvX2tleSwg
Y3VyX3NpemUgLSAxIC8qZ2V0X2tleV9vZmZzZXQocmVpc2VyNF9tYXhfa2V5KCkpICovICk7CisJ
LyogdGhpcyBsb29wIG5vcm1hbGx5IHJ1bnMganVzdCBvbmNlICovCisJd2hpbGUgKDEpIHsKKwkJ
cmVzdWx0ID0gcmVzZXJ2ZV9jdXRfaXRlcmF0aW9uKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9k
ZSkpOworCQlpZiAocmVzdWx0KQorCQkJYnJlYWs7CisKKwkJcmVzdWx0ID0gcmVpc2VyNF9jdXRf
dHJlZV9vYmplY3QoY3VycmVudF90cmVlLCAmZnJvbV9rZXksICZ0b19rZXksCisJCQkJCQkgJnNt
YWxsZXN0X3JlbW92ZWQsIGlub2RlLCAxLAorCQkJCQkJICZwcm9ncmVzcyk7CisJCWlmIChyZXN1
bHQgPT0gLUVfUkVQRUFUKSB7CisJCQkvKioKKwkJCSAqIC1FX1JFUEVBVCBpcyBhIHNpZ25hbCB0
byBpbnRlcnJ1cHQgYSBsb25nCisJCQkgKiBmaWxlIHRydW5jYXRpb24gcHJvY2VzcworCQkJICov
CisJCQlpZiAocHJvZ3Jlc3MpIHsKKwkJCQlyZXN1bHQgPSB1cGRhdGVfYWN0b3IoaW5vZGUsCisJ
CQkJCSAgICAgIGdldF9rZXlfb2Zmc2V0KCZzbWFsbGVzdF9yZW1vdmVkKSwKKwkJCQkJICAgICAg
dXBkYXRlX3NkKTsKKwkJCQlpZiAocmVzdWx0KQorCQkJCQlicmVhazsKKwkJCX0KKwkJCS8qIHRo
ZSBiZWxvdyBkb2VzIHVwKHNiaW5mby0+ZGVsZXRlX211dGV4KS4KKwkJCSAqIERvIG5vdCBnZXQg
Zm9sbGVkICovCisJCQlyZWlzZXI0X3JlbGVhc2VfcmVzZXJ2ZWQoaW5vZGUtPmlfc2IpOworCQkJ
LyoqCisJCQkgKiByZWlzZXI0X2N1dF90cmVlX29iamVjdCgpIHdhcyBpbnRlcnJ1cHRlZCBwcm9i
YWJseQorCQkJICogYmVjYXVzZSBjdXJyZW50IGF0b20gcmVxdWlyZXMgY29tbWl0LCB3ZSBoYXZl
IHRvCisJCQkgKiByZWxlYXNlIHRyYW5zYWN0aW9uIGhhbmRsZSB0byBhbGxvdyBhdG9tIGNvbW1p
dC4KKwkJCSAqLworCQkJcmVpc2VyNF90eG5fcmVzdGFydF9jdXJyZW50KCk7CisJCQljb250aW51
ZTsKKwkJfQorCQlpZiAocmVzdWx0CisJCSAgICAmJiAhKHJlc3VsdCA9PSBDQktfQ09PUkRfTk9U
Rk9VTkQgJiYgbmV3X3NpemUgPT0gMAorCQkJICYmIGlub2RlLT5pX3NpemUgPT0gMCkpCisJCQli
cmVhazsKKworCQlzZXRfa2V5X29mZnNldCgmc21hbGxlc3RfcmVtb3ZlZCwgbmV3X3NpemUpOwor
CQkvKiBGaW5hbCBzZCB1cGRhdGUgYWZ0ZXIgdGhlIGZpbGUgZ2V0cyBpdHMgY29ycmVjdCBzaXpl
ICovCisJCXJlc3VsdCA9IHVwZGF0ZV9hY3Rvcihpbm9kZSwgZ2V0X2tleV9vZmZzZXQoJnNtYWxs
ZXN0X3JlbW92ZWQpLAorCQkJCSAgICAgIHVwZGF0ZV9zZCk7CisJCWJyZWFrOworCX0KKworCS8q
IHRoZSBiZWxvdyBkb2VzIHVwKHNiaW5mby0+ZGVsZXRlX211dGV4KS4gRG8gbm90IGdldCBmb2xs
ZWQgKi8KKwlyZWlzZXI0X3JlbGVhc2VfcmVzZXJ2ZWQoaW5vZGUtPmlfc2IpOworCisJcmV0dXJu
IHJlc3VsdDsKK30KKworaW50IGZpbmRfb3JfY3JlYXRlX2V4dGVudChzdHJ1Y3QgcGFnZSAqcGFn
ZSk7CisKKy8qIHBhcnQgb2YgdHJ1bmNhdGVfZmlsZV9ib2R5OiBpdCBpcyBjYWxsZWQgd2hlbiB0
cnVuY2F0ZSBpcyB1c2VkIHRvIG1ha2UgZmlsZQorICAgc2hvcnRlciAqLworc3RhdGljIGludCBz
aG9ydGVuX2ZpbGUoc3RydWN0IGlub2RlICppbm9kZSwgbG9mZl90IG5ld19zaXplKQoreworCWlu
dCByZXN1bHQ7CisJc3RydWN0IHBhZ2UgKnBhZ2U7CisJaW50IHBhZGRfZnJvbTsKKwl1bnNpZ25l
ZCBsb25nIGluZGV4OworCXN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKworCS8qCisJ
ICogYWxsIGl0ZW1zIG9mIG9yZGluYXJ5IHJlaXNlcjQgZmlsZSBhcmUgZ3JvdXBlZCB0b2dldGhl
ci4gVGhhdCBpcyB3aHkKKwkgKiB3ZSBjYW4gdXNlIHJlaXNlcjRfY3V0X3RyZWUuIFBsYW4gQiBm
aWxlcyAoZm9yIGluc3RhbmNlKSBjYW4gbm90IGJlCisJICogdHJ1bmNhdGVkIHRoYXQgc2ltcGx5
CisJICovCisJcmVzdWx0ID0gY3V0X2ZpbGVfaXRlbXMoaW5vZGUsIG5ld19zaXplLCAxIC8qdXBk
YXRlX3NkICovICwKKwkJCQlnZXRfa2V5X29mZnNldChyZWlzZXI0X21heF9rZXkoKSksCisJCQkJ
cmVpc2VyNF91cGRhdGVfZmlsZV9zaXplKTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0
OworCisJdWZfaW5mbyA9IHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKwlhc3NlcnQoInZz
LTExMDUiLCBuZXdfc2l6ZSA9PSBpbm9kZS0+aV9zaXplKTsKKwlpZiAobmV3X3NpemUgPT0gMCkg
eworCQl1Zl9pbmZvLT5jb250YWluZXIgPSBVRl9DT05UQUlORVJfRU1QVFk7CisJCXJldHVybiAw
OworCX0KKworCXJlc3VsdCA9IGZpbmRfZmlsZV9zdGF0ZShpbm9kZSwgdWZfaW5mbyk7CisJaWYg
KHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKwlpZiAodWZfaW5mby0+Y29udGFpbmVyID09IFVG
X0NPTlRBSU5FUl9UQUlMUykKKwkJLyoKKwkJICogTm8gbmVlZCB0byB3b3JyeSBhYm91dCB6ZXJv
aW5nIGxhc3QgcGFnZSBhZnRlciBuZXcgZmlsZQorCQkgKiBlbmQKKwkJICovCisJCXJldHVybiAw
OworCisJcGFkZF9mcm9tID0gaW5vZGUtPmlfc2l6ZSAmIChQQUdFX1NJWkUgLSAxKTsKKwlpZiAo
IXBhZGRfZnJvbSkKKwkJLyogZmlsZSBpcyB0cnVuY2F0ZWQgdG8gcGFnZSBib3VuZGFyeSAqLwor
CQlyZXR1cm4gMDsKKworCXJlc3VsdCA9IHJlc2VydmVfcGFydGlhbF9wYWdlKHJlaXNlcjRfdHJl
ZV9ieV9pbm9kZShpbm9kZSkpOworCWlmIChyZXN1bHQpIHsKKwkJcmVpc2VyNF9yZWxlYXNlX3Jl
c2VydmVkKGlub2RlLT5pX3NiKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKiBsYXN0IHBh
Z2UgaXMgcGFydGlhbGx5IHRydW5jYXRlZCAtIHplcm8gaXRzIGNvbnRlbnQgKi8KKwlpbmRleCA9
IChpbm9kZS0+aV9zaXplID4+IFBBR0VfU0hJRlQpOworCXBhZ2UgPSByZWFkX21hcHBpbmdfcGFn
ZShpbm9kZS0+aV9tYXBwaW5nLCBpbmRleCwgTlVMTCk7CisJaWYgKElTX0VSUihwYWdlKSkgewor
CQkvKgorCQkgKiB0aGUgYmVsb3cgZG9lcyB1cChzYmluZm8tPmRlbGV0ZV9tdXRleCkuIERvIG5v
dCBnZXQKKwkJICogY29uZnVzZWQKKwkJICovCisJCXJlaXNlcjRfcmVsZWFzZV9yZXNlcnZlZChp
bm9kZS0+aV9zYik7CisJCWlmIChsaWtlbHkoUFRSX0VSUihwYWdlKSA9PSAtRUlOVkFMKSkgewor
CQkJLyogbG9va3MgbGlrZSBmaWxlIGlzIGJ1aWx0IG9mIHRhaWwgaXRlbXMgKi8KKwkJCXJldHVy
biAwOworCQl9CisJCXJldHVybiBQVFJfRVJSKHBhZ2UpOworCX0KKwl3YWl0X29uX3BhZ2VfbG9j
a2VkKHBhZ2UpOworCWlmICghUGFnZVVwdG9kYXRlKHBhZ2UpKSB7CisJCXB1dF9wYWdlKHBhZ2Up
OworCQkvKgorCQkgKiB0aGUgYmVsb3cgZG9lcyB1cChzYmluZm8tPmRlbGV0ZV9tdXRleCkuIERv
IG5vdCBnZXQKKwkJICogY29uZnVzZWQKKwkJICovCisJCXJlaXNlcjRfcmVsZWFzZV9yZXNlcnZl
ZChpbm9kZS0+aV9zYik7CisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJfQorCisJLyoKKwkgKiBp
ZiBwYWdlIGNvcnJlc3BvbnMgdG8gaG9sZSBleHRlbnQgdW5pdCAtIHVuYWxsb2NhdGVkIG9uZSB3
aWxsIGJlCisJICogY3JlYXRlZCBoZXJlLiBUaGlzIGlzIG5vdCBuZWNlc3NhcnkKKwkgKi8KKwly
ZXN1bHQgPSBmaW5kX29yX2NyZWF0ZV9leHRlbnQocGFnZSk7CisKKwkvKgorCSAqIEZJWE1FOiBj
dXRfZmlsZV9pdGVtcyBoYXMgYWxyZWFkeSB1cGRhdGVkIGlub2RlLiBQcm9iYWJseSBpdCB3b3Vs
ZAorCSAqIGJlIGJldHRlciB0byB1cGRhdGUgaXQgaGVyZSB3aGVuIGZpbGUgaXMgcmVhbGx5IHRy
dW5jYXRlZAorCSAqLworCWlmIChyZXN1bHQpIHsKKwkJcHV0X3BhZ2UocGFnZSk7CisJCS8qCisJ
CSAqIHRoZSBiZWxvdyBkb2VzIHVwKHNiaW5mby0+ZGVsZXRlX211dGV4KS4gRG8gbm90IGdldAor
CQkgKiBjb25mdXNlZAorCQkgKi8KKwkJcmVpc2VyNF9yZWxlYXNlX3Jlc2VydmVkKGlub2RlLT5p
X3NiKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwlsb2NrX3BhZ2UocGFnZSk7CisJYXNzZXJ0
KCJ2cy0xMDY2IiwgUGFnZUxvY2tlZChwYWdlKSk7CisJemVyb191c2VyX3NlZ21lbnQocGFnZSwg
cGFkZF9mcm9tLCBQQUdFX1NJWkUpOworCXVubG9ja19wYWdlKHBhZ2UpOworCXB1dF9wYWdlKHBh
Z2UpOworCS8qIHRoZSBiZWxvdyBkb2VzIHVwKHNiaW5mby0+ZGVsZXRlX211dGV4KS4gRG8gbm90
IGdldCBjb25mdXNlZCAqLworCXJlaXNlcjRfcmVsZWFzZV9yZXNlcnZlZChpbm9kZS0+aV9zYik7
CisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogc2hvdWxkX2hhdmVfbm90YWlsCisgKiBAdWZfaW5m
bzoKKyAqIEBuZXdfc2l6ZToKKyAqCisgKiBDYWxscyBmb3JtYXR0aW5nIHBsdWdpbiB0byBzZWUg
d2hldGhlciBmaWxlIG9mIHNpemUgQG5ld19zaXplIGhhcyB0byBiZQorICogc3RvcmVkIGluIHVu
Zm9ybWF0dGVkIG5vZGVzIG9yIGluIHRhaWwgaXRlbXMuIDAgaXMgcmV0dXJuZWQgZm9yIGxhdGVy
IGNhc2UuCisgKi8KK3N0YXRpYyBpbnQgc2hvdWxkX2hhdmVfbm90YWlsKGNvbnN0IHN0cnVjdCB1
bml4X2ZpbGVfaW5mbyAqdWZfaW5mbywgbG9mZl90IG5ld19zaXplKQoreworCWlmICghdWZfaW5m
by0+dHBsdWcpCisJCXJldHVybiAxOworCXJldHVybiAhdWZfaW5mby0+dHBsdWctPmhhdmVfdGFp
bCh1bml4X2ZpbGVfaW5mb190b19pbm9kZSh1Zl9pbmZvKSwKKwkJCQkJICBuZXdfc2l6ZSk7CisK
K30KKworLyoqCisgKiB0cnVuY2F0ZV9maWxlX2JvZHkgLSBjaGFuZ2UgbGVuZ3RoIG9mIGZpbGUK
KyAqIEBpbm9kZTogaW5vZGUgb2YgZmlsZQorICogQG5ld19zaXplOiBuZXcgZmlsZSBsZW5ndGgK
KyAqCisgKiBBZGp1c3RzIGl0ZW1zIGZpbGUgQGlub2RlIGlzIGJ1aWx0IG9mIHRvIG1hdGNoIEBu
ZXdfc2l6ZS4gSXQgbWF5IGVpdGhlciBjdXQKKyAqIGl0ZW1zIG9yIGFkZCB0aGVtIHRvIHJlcHJl
c2VudCBhIGhvbGUgYXQgdGhlIGVuZCBvZiBmaWxlLiBUaGUgY2FsbGVyIGhhcyB0bworICogb2J0
YWluIGV4Y2x1c2l2ZSBhY2Nlc3MgdG8gdGhlIGZpbGUuCisgKi8KK3N0YXRpYyBpbnQgdHJ1bmNh
dGVfZmlsZV9ib2R5KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBpYXR0ciAqYXR0cikKK3sK
KwlpbnQgcmVzdWx0OworCWxvZmZfdCBuZXdfc2l6ZSA9IGF0dHItPmlhX3NpemU7CisKKwlpZiAo
aW5vZGUtPmlfc2l6ZSA8IG5ld19zaXplKSB7CisJCS8qIGV4cGFuZGluZyB0cnVuY2F0ZSAqLwor
CQlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKnVmX2luZm8gPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShp
bm9kZSk7CisKKwkJcmVzdWx0ID0gZmluZF9maWxlX3N0YXRlKGlub2RlLCB1Zl9pbmZvKTsKKwkJ
aWYgKHJlc3VsdCkKKwkJCXJldHVybiByZXN1bHQ7CisKKwkJaWYgKHNob3VsZF9oYXZlX25vdGFp
bCh1Zl9pbmZvLCBuZXdfc2l6ZSkpIHsKKwkJCS8qCisJCQkgKiBmaWxlIG9mIHNpemUgQG5ld19z
aXplIGhhcyB0byBiZSBidWlsdCBvZgorCQkJICogZXh0ZW50cy4gSWYgaXQgaXMgYnVpbHQgb2Yg
dGFpbHMgLSBjb252ZXJ0IHRvCisJCQkgKiBleHRlbnRzCisJCQkgKi8KKwkJCWlmICh1Zl9pbmZv
LT5jb250YWluZXIgPT0gIFVGX0NPTlRBSU5FUl9UQUlMUykgeworCQkJCS8qCisJCQkJICogaWYg
ZmlsZSBpcyBiZWluZyBjb252ZXJlZCBieSBhbm90aGVyIHByb2Nlc3MKKwkJCQkgKiAtIHdhaXQg
dW50aWwgaXQgY29tcGxldGVzCisJCQkJICovCisJCQkJd2hpbGUgKDEpIHsKKwkJCQkJaWYgKHJl
aXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsCisJCQkJCQkJCSAgIFJFSVNFUjRfUEFSVF9JTl9D
T05WKSkgeworCQkJCQkJZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQkJCQkJc2No
ZWR1bGUoKTsKKwkJCQkJCWdldF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQkJCQkJY29u
dGludWU7CisJCQkJCX0KKwkJCQkJYnJlYWs7CisJCQkJfQorCisJCQkJaWYgKHVmX2luZm8tPmNv
bnRhaW5lciA9PSAgVUZfQ09OVEFJTkVSX1RBSUxTKSB7CisJCQkJCXJlc3VsdCA9IHRhaWwyZXh0
ZW50KHVmX2luZm8pOworCQkJCQlpZiAocmVzdWx0KQorCQkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJ
CQl9CisJCQl9CisJCQlyZXN1bHQgPSByZWlzZXI0X3dyaXRlX2V4dGVudChOVUxMLCBpbm9kZSwg
TlVMTCwKKwkJCQkJCSAgICAgIDAsICZuZXdfc2l6ZSk7CisJCQlpZiAocmVzdWx0KQorCQkJCXJl
dHVybiByZXN1bHQ7CisJCQl1Zl9pbmZvLT5jb250YWluZXIgPSBVRl9DT05UQUlORVJfRVhURU5U
UzsKKwkJfSBlbHNlIHsKKwkJCWlmICh1Zl9pbmZvLT5jb250YWluZXIgPT0gIFVGX0NPTlRBSU5F
Ul9FWFRFTlRTKSB7CisJCQkJcmVzdWx0ID0gcmVpc2VyNF93cml0ZV9leHRlbnQoTlVMTCwgaW5v
ZGUsIE5VTEwsCisJCQkJCQkJICAgICAgMCwgJm5ld19zaXplKTsKKwkJCQlpZiAocmVzdWx0KQor
CQkJCQlyZXR1cm4gcmVzdWx0OworCQkJfSBlbHNlIHsKKwkJCQlyZXN1bHQgPSByZWlzZXI0X3dy
aXRlX3RhaWwoTlVMTCwgaW5vZGUsIE5VTEwsCisJCQkJCQkJICAgIDAsICZuZXdfc2l6ZSk7CisJ
CQkJaWYgKHJlc3VsdCkKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQl1Zl9pbmZvLT5jb250YWlu
ZXIgPSBVRl9DT05UQUlORVJfVEFJTFM7CisJCQl9CisJCX0KKwkJQlVHX09OKHJlc3VsdCA+IDAp
OworCQlyZXN1bHQgPSByZWlzZXI0X3VwZGF0ZV9maWxlX3NpemUoaW5vZGUsIG5ld19zaXplLCAx
KTsKKwkJQlVHX09OKHJlc3VsdCAhPSAwKTsKKwl9IGVsc2UKKwkJcmVzdWx0ID0gc2hvcnRlbl9m
aWxlKGlub2RlLCBuZXdfc2l6ZSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBsb2Fk
X2ZpbGVfaGludCAtIGNvcHkgaGludCBmcm9tIHN0cnVjdCBmaWxlIHRvIGxvY2FsIHZhcmlhYmxl
CisgKiBAZmlsZTogZmlsZSB0byBnZXQgaGludCBmcm9tCisgKiBAaGludDogc3RydWN0dXJlIHRv
IGZpbGwKKyAqCisgKiBSZWlzZXI0IHNwZWNpZmljIHBvcnRpb24gb2Ygc3RydWN0IGZpbGUgbWF5
IGNvbnRhaW4gaW5mb3JtYXRpb24gKGhpbnQpCisgKiBzdG9yZWQgb24gZXhpdGluZyBmcm9tIHBy
ZXZpb3VzIHJlYWQgb3Igd3JpdGUuIFRoYXQgaW5mb3JtYXRpb24gaW5jbHVkZXMKKyAqIHNlYWwg
b2Ygem5vZGUgYW5kIGNvb3JkIHdpdGhpbiB0aGF0IHpub2RlIHdoZXJlIHByZXZpb3VzIHJlYWQg
b3Igd3JpdGUKKyAqIHN0b3BwZWQuIFRoaXMgZnVuY3Rpb24gY29waWVzIHRoYXQgaW5mb3JtYXRp
b24gdG8gQGhpbnQgaWYgaXQgd2FzIHN0b3JlZCBvcgorICogaW5pdGlhbGl6ZXMgQGhpbnQgYnkg
MHMgb3RoZXJ3aXNlLgorICovCitpbnQgbG9hZF9maWxlX2hpbnQoc3RydWN0IGZpbGUgKmZpbGUs
IGhpbnRfdCAqaGludCkKK3sKKwlyZWlzZXI0X2ZpbGVfZnNkYXRhICpmc2RhdGE7CisKKwlpZiAo
ZmlsZSkgeworCQlmc2RhdGEgPSByZWlzZXI0X2dldF9maWxlX2ZzZGF0YShmaWxlKTsKKwkJaWYg
KElTX0VSUihmc2RhdGEpKQorCQkJcmV0dXJuIFBUUl9FUlIoZnNkYXRhKTsKKworCQlzcGluX2xv
Y2tfaW5vZGUoZmlsZV9pbm9kZShmaWxlKSk7CisJCWlmIChyZWlzZXI0X3NlYWxfaXNfc2V0KCZm
c2RhdGEtPnJlZy5oaW50LnNlYWwpKSB7CisJCQltZW1jcHkoaGludCwgJmZzZGF0YS0+cmVnLmhp
bnQsIHNpemVvZigqaGludCkpOworCQkJaW5pdF9saCgmaGludC0+bGgpOworCQkJaGludC0+ZXh0
X2Nvb3JkLmxoID0gJmhpbnQtPmxoOworCQkJc3Bpbl91bmxvY2tfaW5vZGUoZmlsZV9pbm9kZShm
aWxlKSk7CisJCQkvKgorCQkJICogZm9yY2UgcmUtdmFsaWRhdGlvbiBvZiB0aGUgY29vcmQgb24g
dGhlIGZpcnN0CisJCQkgKiBpdGVyYXRpb24gb2YgdGhlIHJlYWQvd3JpdGUgbG9vcC4KKwkJCSAq
LworCQkJaGludC0+ZXh0X2Nvb3JkLnZhbGlkID0gMDsKKwkJCWFzc2VydCgibmlraXRhLTE5ODky
IiwKKwkJCSAgICAgICBjb29yZHNfZXF1YWwoJmhpbnQtPnNlYWwuY29vcmQxLAorCQkJCQkgICAg
JmhpbnQtPmV4dF9jb29yZC5jb29yZCkpOworCQkJcmV0dXJuIDA7CisJCX0KKwkJbWVtc2V0KCZm
c2RhdGEtPnJlZy5oaW50LCAwLCBzaXplb2YoaGludF90KSk7CisJCXNwaW5fdW5sb2NrX2lub2Rl
KGZpbGVfaW5vZGUoZmlsZSkpOworCX0KKwloaW50X2luaXRfemVybyhoaW50KTsKKwlyZXR1cm4g
MDsKK30KKworLyoqCisgKiBzYXZlX2ZpbGVfaGludCAtIGNvcHkgaGludCB0byByZWlzZXI0IHBy
aXZhdGUgc3RydWN0IGZpbGUncyBwYXJ0CisgKiBAZmlsZTogZmlsZSB0byBzYXZlIGhpbnQgaW4K
KyAqIEBoaW50OiBoaW50IHRvIHNhdmUKKyAqCisgKiBUaGlzIGNvcGllcyBAaGludCB0byByZWlz
ZXI0IHByaXZhdGUgcGFydCBvZiBzdHJ1Y3QgZmlsZS4gSXQgY2FuIGhlbHAKKyAqIHNwZWVkdXAg
ZnV0dXJlIGFjY2Vzc2VzIHRvIHRoZSBmaWxlLgorICovCit2b2lkIHNhdmVfZmlsZV9oaW50KHN0
cnVjdCBmaWxlICpmaWxlLCBjb25zdCBoaW50X3QgKmhpbnQpCit7CisJcmVpc2VyNF9maWxlX2Zz
ZGF0YSAqZnNkYXRhOworCisJYXNzZXJ0KCJlZHdhcmQtMTMzNyIsIGhpbnQgIT0gTlVMTCk7CisK
KwlpZiAoIWZpbGUgfHwgIXJlaXNlcjRfc2VhbF9pc19zZXQoJmhpbnQtPnNlYWwpKQorCQlyZXR1
cm47CisJZnNkYXRhID0gcmVpc2VyNF9nZXRfZmlsZV9mc2RhdGEoZmlsZSk7CisJYXNzZXJ0KCJ2
cy05NjUiLCAhSVNfRVJSKGZzZGF0YSkpOworCWFzc2VydCgibmlraXRhLTE5ODkxIiwKKwkgICAg
ICAgY29vcmRzX2VxdWFsKCZoaW50LT5zZWFsLmNvb3JkMSwgJmhpbnQtPmV4dF9jb29yZC5jb29y
ZCkpOworCWFzc2VydCgidnMtMzAiLCBoaW50LT5saC5vd25lciA9PSBOVUxMKTsKKwlzcGluX2xv
Y2tfaW5vZGUoZmlsZV9pbm9kZShmaWxlKSk7CisJZnNkYXRhLT5yZWcuaGludCA9ICpoaW50Owor
CXNwaW5fdW5sb2NrX2lub2RlKGZpbGVfaW5vZGUoZmlsZSkpOworCXJldHVybjsKK30KKwordm9p
ZCByZWlzZXI0X3Vuc2V0X2hpbnQoaGludF90ICogaGludCkKK3sKKwlhc3NlcnQoInZzLTEzMTUi
LCBoaW50KTsKKwloaW50LT5leHRfY29vcmQudmFsaWQgPSAwOworCXJlaXNlcjRfc2VhbF9kb25l
KCZoaW50LT5zZWFsKTsKKwlkb25lX2xoKCZoaW50LT5saCk7Cit9CisKKy8qIGNvb3JkIG11c3Qg
YmUgc2V0IHByb3Blcmx5LiBTbywgdGhhdCByZWlzZXI0X3NldF9oaW50CisgICBoYXMgbm90aGlu
ZyB0byBkbyAqLwordm9pZCByZWlzZXI0X3NldF9oaW50KGhpbnRfdCAqIGhpbnQsIGNvbnN0IHJl
aXNlcjRfa2V5ICoga2V5LAorCQkgICAgICB6bm9kZV9sb2NrX21vZGUgbW9kZSkKK3sKKwlPTl9E
RUJVRyhjb29yZF90ICogY29vcmQgPSAmaGludC0+ZXh0X2Nvb3JkLmNvb3JkKTsKKwlhc3NlcnQo
InZzLTEyMDciLCBXSVRIX0RBVEEoY29vcmQtPm5vZGUsIGNoZWNrX2Nvb3JkKGNvb3JkLCBrZXkp
KSk7CisKKwlyZWlzZXI0X3NlYWxfaW5pdCgmaGludC0+c2VhbCwgJmhpbnQtPmV4dF9jb29yZC5j
b29yZCwga2V5KTsKKwloaW50LT5vZmZzZXQgPSBnZXRfa2V5X29mZnNldChrZXkpOworCWhpbnQt
Pm1vZGUgPSBtb2RlOworCWRvbmVfbGgoJmhpbnQtPmxoKTsKK30KKworaW50IGhpbnRfaXNfc2V0
KGNvbnN0IGhpbnRfdCAqIGhpbnQpCit7CisJcmV0dXJuIHJlaXNlcjRfc2VhbF9pc19zZXQoJmhp
bnQtPnNlYWwpOworfQorCisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIGludCBhbGxfYnV0X29m
ZnNldF9rZXlfZXEoY29uc3QgcmVpc2VyNF9rZXkgKiBrMSwgY29uc3QgcmVpc2VyNF9rZXkgKiBr
MikKK3sKKwlyZXR1cm4gKGdldF9rZXlfbG9jYWxpdHkoazEpID09IGdldF9rZXlfbG9jYWxpdHko
azIpICYmCisJCWdldF9rZXlfdHlwZShrMSkgPT0gZ2V0X2tleV90eXBlKGsyKSAmJgorCQlnZXRf
a2V5X2JhbmQoazEpID09IGdldF9rZXlfYmFuZChrMikgJiYKKwkJZ2V0X2tleV9vcmRlcmluZyhr
MSkgPT0gZ2V0X2tleV9vcmRlcmluZyhrMikgJiYKKwkJZ2V0X2tleV9vYmplY3RpZChrMSkgPT0g
Z2V0X2tleV9vYmplY3RpZChrMikpOworfQorI2VuZGlmCisKK3N0YXRpYyBpbnQKK2hpbnRfdmFs
aWRhdGUoaGludF90ICogaGludCwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksIGludCBjaGVja19r
ZXksCisJICAgICAgem5vZGVfbG9ja19tb2RlIGxvY2tfbW9kZSkKK3sKKwlpZiAoIWhpbnQgfHwg
IWhpbnRfaXNfc2V0KGhpbnQpIHx8IGhpbnQtPm1vZGUgIT0gbG9ja19tb2RlKQorCQkvKiBoaW50
IGVpdGhlciBub3Qgc2V0IG9yIHNldCBieSBkaWZmZXJlbnQgb3BlcmF0aW9uICovCisJCXJldHVy
biBSRVRFUlIoLUVfUkVQRUFUKTsKKworCWFzc2VydCgidnMtMTI3NyIsIGFsbF9idXRfb2Zmc2V0
X2tleV9lcShrZXksICZoaW50LT5zZWFsLmtleSkpOworCisJaWYgKGNoZWNrX2tleSAmJiBnZXRf
a2V5X29mZnNldChrZXkpICE9IGhpbnQtPm9mZnNldCkKKwkJLyogaGludCBpcyBzZXQgZm9yIGRp
ZmZlcmVudCBrZXkgKi8KKwkJcmV0dXJuIFJFVEVSUigtRV9SRVBFQVQpOworCisJYXNzZXJ0KCJ2
cy0zMSIsIGhpbnQtPmV4dF9jb29yZC5saCA9PSAmaGludC0+bGgpOworCXJldHVybiByZWlzZXI0
X3NlYWxfdmFsaWRhdGUoJmhpbnQtPnNlYWwsICZoaW50LT5leHRfY29vcmQuY29vcmQsIGtleSwK
KwkJCQkgICAgIGhpbnQtPmV4dF9jb29yZC5saCwgbG9ja19tb2RlLAorCQkJCSAgICAgWk5PREVf
TE9DS19MT1BSSSk7Cit9CisKKy8qKgorICogTG9vayBmb3IgcGxhY2UgYXQgdHdpZyBsZXZlbCBm
b3IgZXh0ZW50IGNvcnJlc3BvbmRpbmcgdG8gcGFnZSwKKyAqIGNhbGwgZXh0ZW50J3Mgd3JpdGVw
YWdlIG1ldGhvZCB0byBjcmVhdGUgdW5hbGxvY2F0ZWQgZXh0ZW50IGlmCisgKiBpdCBkb2VzIG5v
dCBleGlzdCB5ZXQsIGluaXRpYWxpemUgam5vZGUsIGNhcHR1cmUgcGFnZQorICovCitpbnQgZmlu
ZF9vcl9jcmVhdGVfZXh0ZW50KHN0cnVjdCBwYWdlICpwYWdlKQoreworCWludCByZXN1bHQ7CisJ
c3RydWN0IGlub2RlICppbm9kZTsKKwlpbnQgcGx1Z2dlZF9ob2xlOworCisJam5vZGUgKm5vZGU7
CisKKwlhc3NlcnQoInZzLTEwNjUiLCBwYWdlLT5tYXBwaW5nICYmIHBhZ2UtPm1hcHBpbmctPmhv
c3QpOworCWlub2RlID0gcGFnZS0+bWFwcGluZy0+aG9zdDsKKworCWxvY2tfcGFnZShwYWdlKTsK
Kwlub2RlID0gam5vZGVfb2ZfcGFnZShwYWdlKTsKKwlpZiAoSVNfRVJSKG5vZGUpKSB7CisJCXVu
bG9ja19wYWdlKHBhZ2UpOworCQlyZXR1cm4gUFRSX0VSUihub2RlKTsKKwl9CisJSkZfU0VUKG5v
ZGUsIEpOT0RFX1dSSVRFX1BSRVBBUkVEKTsKKwl1bmxvY2tfcGFnZShwYWdlKTsKKworCWlmIChu
b2RlLT5ibG9ja25yID09IDApIHsKKwkJcGx1Z2dlZF9ob2xlID0gMDsKKwkJcmVzdWx0ID0gcmVp
c2VyNF91cGRhdGVfZXh0ZW50KGlub2RlLCBub2RlLCBwYWdlX29mZnNldChwYWdlKSwKKwkJCQkJ
ICAgICAgICZwbHVnZ2VkX2hvbGUpOworCQlpZiAocmVzdWx0KSB7CisgCQkJSkZfQ0xSKG5vZGUs
IEpOT0RFX1dSSVRFX1BSRVBBUkVEKTsKKwkJCWpwdXQobm9kZSk7CisJCQl3YXJuaW5nKCJlZHdh
cmQtMTU0OSIsCisJCQkJInJlaXNlcjRfdXBkYXRlX2V4dGVudCBmYWlsZWQ6ICVkIiwgcmVzdWx0
KTsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwkJaWYgKHBsdWdnZWRfaG9sZSkKKwkJCXJlaXNl
cjRfdXBkYXRlX3NkKGlub2RlKTsKKwl9IGVsc2UgeworCQlzcGluX2xvY2tfam5vZGUobm9kZSk7
CisJCXJlc3VsdCA9IHJlaXNlcjRfdHJ5X2NhcHR1cmUobm9kZSwgWk5PREVfV1JJVEVfTE9DSywg
MCk7CisJCUJVR19PTihyZXN1bHQgIT0gMCk7CisJCWpub2RlX21ha2VfZGlydHlfbG9ja2VkKG5v
ZGUpOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwl9CisKKwlCVUdfT04obm9kZS0+YXRv
bSA9PSBOVUxMKTsKKwlKRl9DTFIobm9kZSwgSk5PREVfV1JJVEVfUFJFUEFSRUQpOworCisJaWYg
KGdldF9jdXJyZW50X2NvbnRleHQoKS0+ZW50ZCkgeworCQllbnRkX2NvbnRleHQgKmVudCA9IGdl
dF9lbnRkX2NvbnRleHQobm9kZS0+dHJlZS0+c3VwZXIpOworCisJCWlmIChlbnQtPmN1cl9yZXF1
ZXN0LT5wYWdlID09IHBhZ2UpCisJCQkvKiB0aGUgZm9sbG93aW5nIHJlZmVyZW5jZSB3aWxsIGJl
CisJCQkgICBkcm9wcGVkIGluIHJlaXNlcjRfd3JpdGVvdXQgKi8KKwkJCWVudC0+Y3VyX3JlcXVl
c3QtPm5vZGUgPSBqcmVmKG5vZGUpOworCX0KKwlqcHV0KG5vZGUpOworCXJldHVybiAwOworfQor
CisvKioKKyAqIGhhc19hbm9ueW1vdXNfcGFnZXMgLSBjaGVjayB3aGV0aGVyIGlub2RlIGhhcyBw
YWdlcyBkaXJ0aWVkIHZpYSBtbWFwCisgKiBAaW5vZGU6IGlub2RlIHRvIGNoZWNrCisgKgorICog
UmV0dXJucyB0cnVlIGlmIGlub2RlJ3MgbWFwcGluZyBoYXMgZGlydHkgcGFnZXMgd2hpY2ggZG8g
bm90IGJlbG9uZyB0byBhbnkKKyAqIGF0b20uIFRob3NlIGFyZSBlaXRoZXIgdGFnZ2VkIFBBR0VD
QUNIRV9UQUdfUkVJU0VSNF9NT1ZFRCBpbiBtYXBwaW5nJ3MgcGFnZQorICogdHJlZSBvciB3ZXJl
IGVmbHVzaGVkIGFuZCBjYW4gYmUgZm91bmQgdmlhIGpub2RlcyB0YWdnZWQKKyAqIEVGTFVTSF9U
QUdfQU5PTllNT1VTIGluIHJhZGl4IHRyZWUgb2Ygam5vZGVzLgorICovCitzdGF0aWMgaW50IGhh
c19hbm9ueW1vdXNfcGFnZXMoc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlpbnQgcmVzdWx0Owor
CisJeGFfbG9ja19pcnEoJmlub2RlLT5pX21hcHBpbmctPmlfcGFnZXMpOworCXJlc3VsdCA9IHJh
ZGl4X3RyZWVfdGFnZ2VkKCZpbm9kZS0+aV9tYXBwaW5nLT5pX3BhZ2VzLAorCQkJCSAgIFBBR0VD
QUNIRV9UQUdfUkVJU0VSNF9NT1ZFRCk7CisJeGFfdW5sb2NrX2lycSgmaW5vZGUtPmlfbWFwcGlu
Zy0+aV9wYWdlcyk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBjYXB0dXJlX3BhZ2Vf
YW5kX2NyZWF0ZV9leHRlbnQgLQorICogQHBhZ2U6IHBhZ2UgdG8gYmUgY2FwdHVyZWQKKyAqCisg
KiBHcmFicyBzcGFjZSBmb3IgZXh0ZW50IGNyZWF0aW9uIGFuZCBzdGF0IGRhdGEgdXBkYXRlIGFu
ZCBjYWxscyBmdW5jdGlvbiB0bworICogZG8gYWN0dWFsIHdvcmsuCisgKiBFeGNsdXNpdmUsIG9y
IG5vbi1leGNsdXNpdmUgbG9jayBtdXN0IGJlIGhlbGQuCisgKi8KK3N0YXRpYyBpbnQgY2FwdHVy
ZV9wYWdlX2FuZF9jcmVhdGVfZXh0ZW50KHN0cnVjdCBwYWdlICpwYWdlKQoreworCWludCByZXN1
bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKworCWFzc2VydCgidnMtMTA4NCIsIHBhZ2UtPm1h
cHBpbmcgJiYgcGFnZS0+bWFwcGluZy0+aG9zdCk7CisJaW5vZGUgPSBwYWdlLT5tYXBwaW5nLT5o
b3N0OworCWFzc2VydCgidnMtMTEzOSIsCisJICAgICAgIHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlu
b2RlKS0+Y29udGFpbmVyID09IFVGX0NPTlRBSU5FUl9FWFRFTlRTKTsKKwkvKiBwYWdlIGJlbG9u
Z3MgdG8gZmlsZSAqLworCWFzc2VydCgidnMtMTM5MyIsCisJICAgICAgIGlub2RlLT5pX3NpemUg
PiBwYWdlX29mZnNldChwYWdlKSk7CisKKwkvKiBwYWdlIGNhcHR1cmUgbWF5IHJlcXVpcmUgZXh0
ZW50IGNyZWF0aW9uIChpZiBpdCBkb2VzIG5vdCBleGlzdCB5ZXQpCisJICAgYW5kIHN0YXQgZGF0
YSdzIHVwZGF0ZSAobnVtYmVyIG9mIGJsb2NrcyBjaGFuZ2VzIG9uIGV4dGVudAorCSAgIGNyZWF0
aW9uKSAqLworCWdyYWJfc3BhY2VfZW5hYmxlKCk7CisJcmVzdWx0ID0gcmVpc2VyNF9ncmFiX3Nw
YWNlKDIgKiBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2ludG9faXRlbQorCQkJCSAgICAocmVpc2VyNF90
cmVlX2J5X2lub2RlKGlub2RlKSksCisJCQkJICAgIEJBX0NBTl9DT01NSVQpOworCWlmIChsaWtl
bHkoIXJlc3VsdCkpCisJCXJlc3VsdCA9IGZpbmRfb3JfY3JlYXRlX2V4dGVudChwYWdlKTsKKwor
CWlmIChyZXN1bHQgIT0gMCkKKwkJU2V0UGFnZUVycm9yKHBhZ2UpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qCisgKiBTdXBwb3J0IGZvciAiYW5vbnltb3VzIiBwYWdlcyBhbmQgam5vZGVzLgor
ICoKKyAqIFdoZW4gZmlsZSBpcyB3cml0ZS1hY2Nlc3NlZCB0aHJvdWdoIG1tYXAgcGFnZXMgY2Fu
IGJlIGRpcnRpZWQgZnJvbSB0aGUgdXNlcgorICogbGV2ZWwuIEluIHRoaXMgY2FzZSBrZXJuZWwg
aXMgbm90IG5vdGlmaWVkIHVudGlsIG9uZSBvZiBmb2xsb3dpbmcgaGFwcGVuczoKKyAqCisgKiAg
ICAgKDEpIG1zeW5jKCkKKyAqCisgKiAgICAgKDIpIHRydW5jYXRlKCkgKGVpdGhlciBleHBsaWNp
dCBvciB0aHJvdWdoIHVubGluaykKKyAqCisgKiAgICAgKDMpIFZNIHNjYW5uZXIgc3RhcnRzIHJl
Y2xhaW1pbmcgbWFwcGVkIHBhZ2VzLCBkaXJ0eWluZyB0aGVtIGJlZm9yZQorICogICAgIHN0YXJ0
aW5nIHdyaXRlLWJhY2suCisgKgorICogQXMgYSByZXN1bHQgb2YgKDMpIC0+d3JpdGVwYWdlIG1h
eSBiZSBjYWxsZWQgb24gYSBkaXJ0eSBwYWdlIHdpdGhvdXQKKyAqIGpub2RlLiBTdWNoIHBhZ2Ug
aXMgY2FsbGVkICJhbm9ueW1vdXMiIGluIHJlaXNlcjQuIENlcnRhaW4gd29yay1sb2FkcworICog
KGlvem9uZSkgZ2VuZXJhdGUgaHVnZSBudW1iZXIgb2YgYW5vbnltb3VzIHBhZ2VzLgorICoKKyAq
IHJlaXNlcjRfc3luY19zYigpIG1ldGhvZCB0cmllcyB0byBpbnNlcnQgYW5vbnltb3VzIHBhZ2Vz
IGludG8KKyAqIHRyZWUuIFRoaXMgaXMgZG9uZSBieSBjYXB0dXJlX2Fub255bW91c18qKCkgZnVu
Y3Rpb25zIGJlbG93LgorICovCisKKy8qKgorICogY2FwdHVyZV9hbm9ueW1vdXNfcGFnZSAtIGlu
dm9sdmUgcGFnZSBpbnRvIHRyYW5zYWN0aW9uCisgKiBAcGc6IHBhZ2UgdG8gZGVhbCB3aXRoCisg
KgorICogVGFrZXMgY2FyZSB0aGF0IEBwYWdlIGhhcyBjb3JyZXNwb25kaW5nIG1ldGFkYXRhIGlu
IHRoZSB0cmVlLCBjcmVhdGVzIGpub2RlCisgKiBmb3IgQHBhZ2UgYW5kIGNhcHR1cmVzIGl0LiBP
biBzdWNjZXNzIDEgaXMgcmV0dXJuZWQuCisgKi8KK3N0YXRpYyBpbnQgY2FwdHVyZV9hbm9ueW1v
dXNfcGFnZShzdHJ1Y3QgcGFnZSAqcGFnZSkKK3sKKwlpbnQgcmVzdWx0OworCisJaWYgKFBhZ2VX
cml0ZWJhY2socGFnZSkpCisJCS8qIEZJWE1FOiBkbyBub3RoaW5nPyAqLworCQlyZXR1cm4gMDsK
KworCXJlc3VsdCA9IGNhcHR1cmVfcGFnZV9hbmRfY3JlYXRlX2V4dGVudChwYWdlKTsKKwlpZiAo
cmVzdWx0ID09IDApIHsKKwkJcmVzdWx0ID0gMTsKKwl9IGVsc2UKKwkJd2FybmluZygibmlraXRh
LTMzMjkiLAorCQkJCSJDYW5ub3QgY2FwdHVyZSBhbm9uIHBhZ2U6ICVpIiwgcmVzdWx0KTsKKwor
CXJldHVybiByZXN1bHQ7Cit9CisKKy8qKgorICogY2FwdHVyZV9hbm9ueW1vdXNfcGFnZXMgLSBm
aW5kIGFuZCBjYXB0dXJlIHBhZ2VzIGRpcnRpZWQgdmlhIG1tYXAKKyAqIEBtYXBwaW5nOiBhZGRy
ZXNzIHNwYWNlIHdoZXJlIHRvIGxvb2sgZm9yIHBhZ2VzCisgKiBAaW5kZXg6IHN0YXJ0IGluZGV4
CisgKiBAdG9fY2FwdHVyZTogbWF4aW11bSBudW1iZXIgb2YgcGFnZXMgdG8gY2FwdHVyZQorICoK
KyAqIExvb2tzIGZvciBwYWdlcyB0YWdnZWQgUkVJU0VSNF9NT1ZFRCBzdGFydGluZyBmcm9tIHRo
ZSAqQGluZGV4LXRoIHBhZ2UsCisgKiBjYXB0dXJlcyAoaW52b2x2ZXMgaW50byBhdG9tKSB0aGVt
LCByZXR1cm5zIG51bWJlciBvZiBjYXB0dXJlZCBwYWdlcywKKyAqIHVwZGF0ZXMgQGluZGV4IHRv
IG5leHQgcGFnZSBhZnRlciB0aGUgbGFzdCBjYXB0dXJlZCBvbmUuCisgKi8KK3N0YXRpYyBpbnQK
K2NhcHR1cmVfYW5vbnltb3VzX3BhZ2VzKHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLCBw
Z29mZl90ICppbmRleCwKKwkJCXVuc2lnbmVkIGludCB0b19jYXB0dXJlKQoreworCWludCByZXN1
bHQ7CisJc3RydWN0IHBhZ2V2ZWMgcHZlYzsKKwl1bnNpZ25lZCBpbnQgaSwgY291bnQ7CisJaW50
IG5yOworCisJcGFnZXZlY19pbml0KCZwdmVjKTsKKwljb3VudCA9IG1pbihwYWdldmVjX3NwYWNl
KCZwdmVjKSwgdG9fY2FwdHVyZSk7CisJbnIgPSAwOworCisJLyogZmluZCBwYWdlcyB0YWdnZWQg
TU9WRUQgKi8KKwl4YV9sb2NrX2lycSgmbWFwcGluZy0+aV9wYWdlcyk7CisJcHZlYy5uciA9IHJh
ZGl4X3RyZWVfZ2FuZ19sb29rdXBfdGFnKCZtYXBwaW5nLT5pX3BhZ2VzLAorCQkJCQkgICAgICh2
b2lkICoqKXB2ZWMucGFnZXMsICppbmRleCwgY291bnQsCisJCQkJCSAgICAgUEFHRUNBQ0hFX1RB
R19SRUlTRVI0X01PVkVEKTsKKwlpZiAocGFnZXZlY19jb3VudCgmcHZlYykgPT0gMCkgeworCQkv
KgorCQkgKiB0aGVyZSBhcmUgbm8gcGFnZXMgdGFnZ2VkIE1PVkVEIGluIG1hcHBpbmctPnBhZ2Vf
dHJlZQorCQkgKiBzdGFydGluZyBmcm9tICppbmRleAorCQkgKi8KKwkJeGFfdW5sb2NrX2lycSgm
bWFwcGluZy0+aV9wYWdlcyk7CisJCSppbmRleCA9IChwZ29mZl90KS0xOworCQlyZXR1cm4gMDsK
Kwl9CisKKwkvKiBjbGVhciBNT1ZFRCB0YWcgZm9yIGFsbCBmb3VuZCBwYWdlcyAqLworCWZvciAo
aSA9IDA7IGkgPCBwYWdldmVjX2NvdW50KCZwdmVjKTsgaSsrKSB7CisJCWdldF9wYWdlKHB2ZWMu
cGFnZXNbaV0pOworCQlyYWRpeF90cmVlX3RhZ19jbGVhcigmbWFwcGluZy0+aV9wYWdlcywgcHZl
Yy5wYWdlc1tpXS0+aW5kZXgsCisJCQkJICAgICBQQUdFQ0FDSEVfVEFHX1JFSVNFUjRfTU9WRUQp
OworCX0KKwl4YV91bmxvY2tfaXJxKCZtYXBwaW5nLT5pX3BhZ2VzKTsKKworCisJKmluZGV4ID0g
cHZlYy5wYWdlc1tpIC0gMV0tPmluZGV4ICsgMTsKKworCWZvciAoaSA9IDA7IGkgPCBwYWdldmVj
X2NvdW50KCZwdmVjKTsgaSsrKSB7CisJCXJlc3VsdCA9IGNhcHR1cmVfYW5vbnltb3VzX3BhZ2Uo
cHZlYy5wYWdlc1tpXSk7CisJCWlmIChyZXN1bHQgPT0gMSkKKwkJCW5yKys7CisJCWVsc2Ugewor
CQkJaWYgKHJlc3VsdCA8IDApIHsKKwkJCQl3YXJuaW5nKCJ2cy0xNDU0IiwKKwkJCQkJImZhaWxl
ZCB0byBjYXB0dXJlIHBhZ2U6ICIKKwkJCQkJInJlc3VsdD0lZCwgY2FwdHVyZWQ9JWQpXG4iLAor
CQkJCQlyZXN1bHQsIGkpOworCisJCQkJLyoKKwkJCQkgKiBzZXQgTU9WRUQgdGFnIHRvIGFsbCBw
YWdlcyB3aGljaCBsZWZ0IG5vdAorCQkJCSAqIGNhcHR1cmVkCisJCQkJICovCisJCQkJeGFfbG9j
a19pcnEoJm1hcHBpbmctPmlfcGFnZXMpOworCQkJCWZvciAoOyBpIDwgcGFnZXZlY19jb3VudCgm
cHZlYyk7IGkgKyspIHsKKwkJCQkJcmFkaXhfdHJlZV90YWdfc2V0KCZtYXBwaW5nLT5pX3BhZ2Vz
LAorCQkJCQkJCSAgIHB2ZWMucGFnZXNbaV0tPmluZGV4LAorCQkJCQkJCSAgIFBBR0VDQUNIRV9U
QUdfUkVJU0VSNF9NT1ZFRCk7CisJCQkJfQorCQkJCXhhX3VubG9ja19pcnEoJm1hcHBpbmctPmlf
cGFnZXMpOworCisJCQkJcGFnZXZlY19yZWxlYXNlKCZwdmVjKTsKKwkJCQlyZXR1cm4gcmVzdWx0
OworCQkJfSBlbHNlIHsKKwkJCQkvKgorCQkJCSAqIHJlc3VsdCA9PSAwLiBjYXB0dXJlX2Fub255
bW91c19wYWdlIHJldHVybnMKKwkJCQkgKiAwIGZvciBXcml0ZWJhY2stZWQgcGFnZS4gU2V0IE1P
VkVEIHRhZyBvbgorCQkJCSAqIHRoYXQgcGFnZQorCQkJCSAqLworCQkJCXhhX2xvY2tfaXJxKCZt
YXBwaW5nLT5pX3BhZ2VzKTsKKwkJCQlyYWRpeF90cmVlX3RhZ19zZXQoJm1hcHBpbmctPmlfcGFn
ZXMsCisJCQkJCQkgICBwdmVjLnBhZ2VzW2ldLT5pbmRleCwKKwkJCQkJCSAgIFBBR0VDQUNIRV9U
QUdfUkVJU0VSNF9NT1ZFRCk7CisJCQkJeGFfdW5sb2NrX2lycSgmbWFwcGluZy0+aV9wYWdlcyk7
CisJCQkJaWYgKGkgPT0gMCkKKwkJCQkJKmluZGV4ID0gcHZlYy5wYWdlc1swXS0+aW5kZXg7CisJ
CQkJZWxzZQorCQkJCQkqaW5kZXggPSBwdmVjLnBhZ2VzW2kgLSAxXS0+aW5kZXggKyAxOworCQkJ
fQorCQl9CisJfQorCXBhZ2V2ZWNfcmVsZWFzZSgmcHZlYyk7CisJcmV0dXJuIG5yOworfQorCisv
KioKKyAqIGNhcHR1cmVfYW5vbnltb3VzX2pub2RlcyAtIGZpbmQgYW5kIGNhcHR1cmUgYW5vbnlt
b3VzIGpub2RlcworICogQG1hcHBpbmc6IGFkZHJlc3Mgc3BhY2Ugd2hlcmUgdG8gbG9vayBmb3Ig
am5vZGVzCisgKiBAZnJvbTogc3RhcnQgaW5kZXgKKyAqIEB0bzogZW5kIGluZGV4CisgKiBAdG9f
Y2FwdHVyZTogbWF4aW11bSBudW1iZXIgb2Ygam5vZGVzIHRvIGNhcHR1cmUKKyAqCisgKiBMb29r
cyBmb3Igam5vZGVzIHRhZ2dlZCBFRkxVU0hfVEFHX0FOT05ZTU9VUyBpbiBpbm9kZSdzIHRyZWUg
b2Ygam5vZGVzIGluCisgKiB0aGUgcmFuZ2Ugb2YgaW5kZXhlcyBAZnJvbS1AdG8gYW5kIGNhcHR1
cmVzIHRoZW0sIHJldHVybnMgbnVtYmVyIG9mIGNhcHR1cmVkCisgKiBqbm9kZXMsIHVwZGF0ZXMg
QGZyb20gdG8gbmV4dCBqbm9kZSBhZnRlciB0aGUgbGFzdCBjYXB0dXJlZCBvbmUuCisgKi8KK3N0
YXRpYyBpbnQKK2NhcHR1cmVfYW5vbnltb3VzX2pub2RlcyhzdHJ1Y3QgYWRkcmVzc19zcGFjZSAq
bWFwcGluZywKKwkJCSBwZ29mZl90ICpmcm9tLCBwZ29mZl90IHRvLCBpbnQgdG9fY2FwdHVyZSkK
K3sKKwkqZnJvbSA9IHRvOworCXJldHVybiAwOworfQorCisvKgorICogQ29tbWl0IGF0b20gb2Yg
dGhlIGpub2RlIG9mIGEgcGFnZS4KKyAqLworaW50IHJlaXNlcjRfc3luY19wYWdlKHN0cnVjdCBw
YWdlICpwYWdlKQoreworCWludCByZXN1bHQ7CisJZG8geworCQlqbm9kZSAqbm9kZTsKKwkJdHhu
X2F0b20gKmF0b207CisKKwkJbG9ja19wYWdlKHBhZ2UpOworCQlub2RlID0ganByaXZhdGUocGFn
ZSk7CisJCWlmIChub2RlICE9IE5VTEwpIHsKKwkJCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwkJ
CWF0b20gPSBqbm9kZV9nZXRfYXRvbShub2RlKTsKKwkJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUp
OworCQl9IGVsc2UKKwkJCWF0b20gPSBOVUxMOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmVz
dWx0ID0gcmVpc2VyNF9zeW5jX2F0b20oYXRvbSk7CisJfSB3aGlsZSAocmVzdWx0ID09IC1FX1JF
UEVBVCk7CisJLyoKKwkgKiBaQU0tRklYTUUtSEFOUzogZG9jdW1lbnQgdGhlIGxvZ2ljIG9mIHRo
aXMgbG9vcCwgaXMgaXQganVzdCB0bworCSAqIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSBtb3JlIHBh
Z2VzIGdldCBhZGRlZCB0byB0aGUgYXRvbSB3aGlsZSB3ZSBhcmUKKwkgKiBzeW5jaW5nIGl0Pwor
CSAqLworCWFzc2VydCgibmlraXRhLTM0ODUiLCBlcmdvKHJlc3VsdCA9PSAwLAorCQkJCSAgIGdl
dF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gPT0gTlVMTCkpOworCXJldHVybiByZXN1
bHQ7Cit9CisKKy8qCisgKiBDb21taXQgYXRvbXMgb2YgcGFnZXMgb24gQHBhZ2VzIGxpc3QuCisg
KiBjYWxsIHN5bmNfcGFnZSBmb3IgZWFjaCBwYWdlIGZyb20gbWFwcGluZydzIHBhZ2UgdHJlZQor
ICovCitzdGF0aWMgaW50IHN5bmNfcGFnZV9saXN0KHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJ
aW50IHJlc3VsdDsKKwlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqbWFwcGluZzsKKwl1bnNpZ25lZCBs
b25nIGZyb207CS8qIHN0YXJ0IGluZGV4IGZvciByYWRpeF90cmVlX2dhbmdfbG9va3VwICovCisJ
dW5zaWduZWQgaW50IGZvdW5kOwkvKiByZXR1cm4gdmFsdWUgZm9yIHJhZGl4X3RyZWVfZ2FuZ19s
b29rdXAgKi8KKworCW1hcHBpbmcgPSBpbm9kZS0+aV9tYXBwaW5nOworCWZyb20gPSAwOworCXJl
c3VsdCA9IDA7CisJeGFfbG9ja19pcnEoJm1hcHBpbmctPmlfcGFnZXMpOworCXdoaWxlIChyZXN1
bHQgPT0gMCkgeworCQlzdHJ1Y3QgcGFnZSAqcGFnZTsKKworCQlmb3VuZCA9CisJCSAgICByYWRp
eF90cmVlX2dhbmdfbG9va3VwKCZtYXBwaW5nLT5pX3BhZ2VzLCAodm9pZCAqKikmcGFnZSwKKwkJ
CQkJICAgZnJvbSwgMSk7CisJCWFzc2VydCgiZWR3YXJkLTE1NTAiLCBmb3VuZCA8IDIpOworCQlp
ZiAoZm91bmQgPT0gMCkKKwkJCWJyZWFrOworCQkvKioKKwkJICogcGFnZSBtYXkgbm90IGxlYXZl
IHJhZGl4IHRyZWUgYmVjYXVzZSBpdCBpcyBwcm90ZWN0ZWQgZnJvbQorCQkgKiB0cnVuY2F0aW5n
IGJ5IGlub2RlLT5pX211dGV4IGxvY2tlZCBieSBzeXNfZnN5bmMKKwkJICovCisJCWdldF9wYWdl
KHBhZ2UpOworCQl4YV91bmxvY2tfaXJxKCZtYXBwaW5nLT5pX3BhZ2VzKTsKKworCQlmcm9tID0g
cGFnZS0+aW5kZXggKyAxOworCisJCXJlc3VsdCA9IHJlaXNlcjRfc3luY19wYWdlKHBhZ2UpOwor
CisJCXB1dF9wYWdlKHBhZ2UpOworCQl4YV9sb2NrX2lycSgmbWFwcGluZy0+aV9wYWdlcyk7CisJ
fQorCisJeGFfdW5sb2NrX2lycSgmbWFwcGluZy0+aV9wYWdlcyk7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworc3RhdGljIGludCBjb21taXRfZmlsZV9hdG9tcyhzdHJ1Y3QgaW5vZGUgKmlub2RlKQor
eworCWludCByZXN1bHQ7CisJc3RydWN0IHVuaXhfZmlsZV9pbmZvICp1Zl9pbmZvOworCisJdWZf
aW5mbyA9IHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKworCWdldF9leGNsdXNpdmVfYWNj
ZXNzKHVmX2luZm8pOworCS8qCisJICogZmluZCB3aGF0IGl0ZW1zIGZpbGUgaXMgbWFkZSBmcm9t
CisJICovCisJcmVzdWx0ID0gZmluZF9maWxlX3N0YXRlKGlub2RlLCB1Zl9pbmZvKTsKKwlkcm9w
X2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4g
cmVzdWx0OworCisJLyoKKwkgKiBmaWxlIHN0YXRlIGNhbm5vdCBjaGFuZ2UgYmVjYXVzZSB3ZSBh
cmUgdW5kZXIgLT5pX211dGV4CisJICovCisJc3dpdGNoICh1Zl9pbmZvLT5jb250YWluZXIpIHsK
KwljYXNlIFVGX0NPTlRBSU5FUl9FWFRFTlRTOgorCQkvKiBmaW5kX2ZpbGVfc3RhdGUgbWlnaHQg
b3BlbiBqb2luIGFuIGF0b20gKi8KKwkJcmVpc2VyNF90eG5fcmVzdGFydF9jdXJyZW50KCk7CisJ
CXJlc3VsdCA9CisJCSAgICAvKgorCQkgICAgICogd2hlbiB3ZSBhcmUgY2FsbGVkIGJ5CisJCSAg
ICAgKiBmaWxlbWFwX2ZkYXRhd3JpdGUtPgorCQkgICAgICogICAgZG9fd3JpdGVwYWdlcygpLT4K
KwkJICAgICAqICAgICAgIHJlaXNlcjRfd3JpdGVwYWdlc19kaXNwYXRjaCgpCisJCSAgICAgKgor
CQkgICAgICogaW5vZGUtPmlfbWFwcGluZy0+ZGlydHlfcGFnZXMgYXJlIHNwaWNlcyBpbnRvCisJ
CSAgICAgKiAtPmlvX3BhZ2VzLCBsZWF2aW5nIC0+ZGlydHlfcGFnZXMgZGlydHkuCisJCSAgICAg
KgorCQkgICAgICogV2hlbiB3ZSBhcmUgY2FsbGVkIGZyb20KKwkJICAgICAqIHJlaXNlcjRfZnN5
bmMoKS0+c3luY191bml4X2ZpbGUoKSwgd2UgaGF2ZSB0bworCQkgICAgICogY29tbWl0IGF0b21z
IG9mIGFsbCBwYWdlcyBvbiB0aGUgLT5kaXJ0eV9saXN0LgorCQkgICAgICoKKwkJICAgICAqIFNv
IGZvciBzaW1wbGljaXR5IHdlIGp1c3QgY29tbWl0IC0+aW9fcGFnZXMgYW5kCisJCSAgICAgKiAt
PmRpcnR5X3BhZ2VzLgorCQkgICAgICovCisJCSAgICBzeW5jX3BhZ2VfbGlzdChpbm9kZSk7CisJ
CWJyZWFrOworCWNhc2UgVUZfQ09OVEFJTkVSX1RBSUxTOgorCQkvKgorCQkgKiBOT1RFLU5JS0lU
QSBwcm9iYWJseSB3ZSBjYW4gYmUgc21hcnRlciBmb3IgdGFpbHMuIEZvciBub3cKKwkJICoganVz
dCBjb21taXQgYWxsIGV4aXN0aW5nIGF0b21zLgorCQkgKi8KKwkJcmVzdWx0ID0gdHhubWdyX2Zv
cmNlX2NvbW1pdF9hbGwoaW5vZGUtPmlfc2IsIDApOworCQlicmVhazsKKwljYXNlIFVGX0NPTlRB
SU5FUl9FTVBUWToKKwkJcmVzdWx0ID0gMDsKKwkJYnJlYWs7CisJY2FzZSBVRl9DT05UQUlORVJf
VU5LTk9XTjoKKwlkZWZhdWx0OgorCQlyZXN1bHQgPSAtRUlPOworCQlicmVhazsKKwl9CisKKwkv
KgorCSAqIGNvbW1pdCBjdXJyZW50IHRyYW5zYWN0aW9uOiB0aGVyZSBjYW4gYmUgY2FwdHVyZWQg
bm9kZXMgZnJvbQorCSAqIGZpbmRfZmlsZV9zdGF0ZSgpIGFuZCBmaW5pc2hfY29udmVyc2lvbigp
LgorCSAqLworCXJlaXNlcjRfdHhuX3Jlc3RhcnRfY3VycmVudCgpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qKgorICogd3JpdGVwYWdlc191bml4X2ZpbGUgLSB3cml0ZXBhZ2VzIG9mIHN0cnVj
dCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMKKyAqIEBtYXBwaW5nOgorICogQHdiYzoKKyAqCisg
KiBUaGlzIGNhcHR1cmVzIGFub255bW91cyBwYWdlcyBhbmQgYW5vbnltb3VzIGpub2Rlcy4gQW5v
bnltb3VzIHBhZ2VzIGFyZQorICogcGFnZXMgd2hpY2ggYXJlIGRpcnRpZWQgdmlhIG1tYXBwaW5n
LiBBbm9ueW1vdXMgam5vZGVzIGFyZSBvbmVzIHdoaWNoIHdlcmUKKyAqIGNyZWF0ZWQgYnkgcmVp
c2VyNF93cml0ZXBhZ2UuCisgKi8KK2ludCB3cml0ZXBhZ2VzX3VuaXhfZmlsZShzdHJ1Y3QgYWRk
cmVzc19zcGFjZSAqbWFwcGluZywKKwkJICAgICBzdHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKndi
YykKK3sKKwlpbnQgcmVzdWx0OworCXN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKwlw
Z29mZl90IHBpbmRleCwgamluZGV4LCBucl9wYWdlczsKKwlsb25nIHRvX2NhcHR1cmU7CisJc3Ry
dWN0IGlub2RlICppbm9kZTsKKworCWlub2RlID0gbWFwcGluZy0+aG9zdDsKKwlpZiAoIWhhc19h
bm9ueW1vdXNfcGFnZXMoaW5vZGUpKSB7CisJCXJlc3VsdCA9IDA7CisJCWdvdG8gZW5kOworCX0K
KwlqaW5kZXggPSBwaW5kZXggPSB3YmMtPnJhbmdlX3N0YXJ0ID4+IFBBR0VfU0hJRlQ7CisJcmVz
dWx0ID0gMDsKKwlucl9wYWdlcyA9IHNpemVfaW5fcGFnZXMoaV9zaXplX3JlYWQoaW5vZGUpKTsK
KworCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShpbm9kZSk7CisKKwlkbyB7CisJCXJl
aXNlcjRfY29udGV4dCAqY3R4OworCisJCWlmICh3YmMtPnN5bmNfbW9kZSAhPSBXQl9TWU5DX0FM
TCkKKwkJCXRvX2NhcHR1cmUgPSBtaW4od2JjLT5ucl90b193cml0ZSwgQ0FQVFVSRV9BUEFHRV9C
VVJTVCk7CisJCWVsc2UKKwkJCXRvX2NhcHR1cmUgPSBDQVBUVVJFX0FQQUdFX0JVUlNUOworCisJ
CWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGlub2RlLT5pX3NiKTsKKwkJaWYgKElTX0VSUihj
dHgpKSB7CisJCQlyZXN1bHQgPSBQVFJfRVJSKGN0eCk7CisJCQlicmVhazsKKwkJfQorCQkvKiBh
dm9pZCByZWN1cnNpdmUgY2FsbHMgdG8gLT5zeW5jX2lub2RlcyAqLworCQljdHgtPm5vYmFsYW5j
ZSA9IDE7CisJCWFzc2VydCgiemFtLTc2MCIsIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVu
dF9sb2NrX3N0YWNrKCkpKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTU1MSIsIExPQ0tfQ05UX05JTChp
bm9kZV9zZW1fdykpOworCQlhc3NlcnQoImVkd2FyZC0xNTUyIiwgTE9DS19DTlRfTklMKGlub2Rl
X3NlbV9yKSk7CisKKwkJcmVpc2VyNF90eG5fcmVzdGFydF9jdXJyZW50KCk7CisKKwkJLyogd2Ug
aGF2ZSB0byBnZXQgbm9uZXhjbHVzaXZlIGFjY2VzcyB0byB0aGUgZmlsZSAqLworCQlpZiAoZ2V0
X2N1cnJlbnRfY29udGV4dCgpLT5lbnRkKSB7CisJCQkvKgorCQkJICogdXNlIG5vbmJsb2NraW5n
IHZlcnNpb24gb2Ygbm9uZXhjbHVzaXZlX2FjY2VzcyB0bworCQkJICogYXZvaWQgZGVhZGxvY2sg
d2hpY2ggbWlnaHQgbG9vayBsaWtlIHRoZSBmb2xsb3dpbmc6CisJCQkgKiBwcm9jZXNzIFAxIGhv
bGRzIE5FQSBvbiBmaWxlIEYxIGFuZCBjYWxsZWQgZW50ZCB0bworCQkJICogcmVjbGFpbSBzb21l
IG1lbW9yeS4gRW50ZCB3b3JrcyBmb3IgUDEgYW5kIGlzIGdvaW5nCisJCQkgKiB0byBjYXB0dXJl
IHBhZ2VzIG9mIGZpbGUgRjIuIFRvIGRvIHRoYXQgZW50ZCBoYXMgdG8KKwkJCSAqIGdldCBORUEg
dG8gRjIuIEYyIGlzIGhlbGQgYnkgcHJvY2VzcyBQMiB3aGljaCBhbHNvCisJCQkgKiBjYWxsZWQg
ZW50ZC4gQnV0IGVudGQgaXMgc2VydmluZyBQMSBhdCB0aGUgbW9tZW50CisJCQkgKiBhbmQgUDIg
aGFzIHRvIHdhaXQuIFByb2Nlc3MgUDMgdHJ5aW5nIHRvIGdldCBFQSB0bworCQkJICogZmlsZSBG
Mi4gRXhpc3RlbmNlIG9mIHBlbmRpbmcgRUEgcmVxdWVzdCB0byBmaWxlIEYyCisJCQkgKiBtYWtl
cyBpbXBvc3NpYmxlIGZvciBlbnRkIHRvIGdldCBORUEgdG8gZmlsZQorCQkJICogRjIuIE5laXRo
ZXIgb2YgdGhlc2UgcHJvY2VzcyBjYW4gY29udGludWUuIFVzaW5nCisJCQkgKiBub25ibG9ja2lu
ZyB2ZXJzaW9uIG9mIGdldHRpZ24gTkVBIGlzIHN1cHBvc2VkIHRvCisJCQkgKiBhdm9pZCB0aGlz
IGRlYWRsb2NrLgorCQkJICovCisJCQlpZiAodHJ5X3RvX2dldF9ub25leGNsdXNpdmVfYWNjZXNz
KHVmX2luZm8pID09IDApIHsKKwkJCQlyZXN1bHQgPSBSRVRFUlIoLUVCVVNZKTsKKwkJCQlyZWlz
ZXI0X2V4aXRfY29udGV4dChjdHgpOworCQkJCWJyZWFrOworCQkJfQorCQl9IGVsc2UKKwkJCWdl
dF9ub25leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCisJCXdoaWxlICh0b19jYXB0dXJlID4g
MCkgeworCQkJcGdvZmZfdCBzdGFydDsKKworCQkJYXNzZXJ0KCJ2cy0xNzI3IiwgamluZGV4IDw9
IHBpbmRleCk7CisJCQlpZiAocGluZGV4ID09IGppbmRleCkgeworCQkJCXN0YXJ0ID0gcGluZGV4
OworCQkJCXJlc3VsdCA9CisJCQkJICAgIGNhcHR1cmVfYW5vbnltb3VzX3BhZ2VzKGlub2RlLT5p
X21hcHBpbmcsCisJCQkJCQkJICAgICZwaW5kZXgsCisJCQkJCQkJICAgIHRvX2NhcHR1cmUpOwor
CQkJCWlmIChyZXN1bHQgPD0gMCkKKwkJCQkJYnJlYWs7CisJCQkJdG9fY2FwdHVyZSAtPSByZXN1
bHQ7CisJCQkJd2JjLT5ucl90b193cml0ZSAtPSByZXN1bHQ7CisJCQkJaWYgKHN0YXJ0ICsgcmVz
dWx0ID09IHBpbmRleCkgeworCQkJCQlqaW5kZXggPSBwaW5kZXg7CisJCQkJCWNvbnRpbnVlOwor
CQkJCX0KKwkJCQlpZiAodG9fY2FwdHVyZSA8PSAwKQorCQkJCQlicmVhazsKKwkJCX0KKwkJCS8q
IGRlYWwgd2l0aCBhbm9ueW1vdXMgam5vZGVzIGJldHdlZW4gamluZGV4IGFuZCBwaW5kZXggKi8K
KwkJCXJlc3VsdCA9CisJCQkgICAgY2FwdHVyZV9hbm9ueW1vdXNfam5vZGVzKGlub2RlLT5pX21h
cHBpbmcsICZqaW5kZXgsCisJCQkJCQkgICAgIHBpbmRleCwgdG9fY2FwdHVyZSk7CisJCQlpZiAo
cmVzdWx0IDwgMCkKKwkJCQlicmVhazsKKwkJCXRvX2NhcHR1cmUgLT0gcmVzdWx0OworCQkJZ2V0
X2N1cnJlbnRfY29udGV4dCgpLT5ucl9jYXB0dXJlZCArPSByZXN1bHQ7CisKKwkJCWlmIChqaW5k
ZXggPT0gKHBnb2ZmX3QpIC0gMSkgeworCQkJCWFzc2VydCgidnMtMTcyOCIsIHBpbmRleCA9PSAo
cGdvZmZfdCkgLSAxKTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlpZiAodG9fY2FwdHVyZSA8
PSAwKQorCQkJLyogdGhlcmUgbWF5IGJlIGxlZnQgbW9yZSBwYWdlcyAqLworCQkJX19tYXJrX2lu
b2RlX2RpcnR5KGlub2RlLCBJX0RJUlRZX1BBR0VTKTsKKworCQlkcm9wX25vbmV4Y2x1c2l2ZV9h
Y2Nlc3ModWZfaW5mbyk7CisJCWlmIChyZXN1bHQgPCAwKSB7CisJCQkvKiBlcnJvciBoYXBwZW5l
ZCAqLworCQkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJCXJldHVybiByZXN1bHQ7CisJ
CX0KKwkJaWYgKHdiYy0+c3luY19tb2RlICE9IFdCX1NZTkNfQUxMKSB7CisJCQlyZWlzZXI0X2V4
aXRfY29udGV4dChjdHgpOworCQkJcmV0dXJuIDA7CisJCX0KKwkJcmVzdWx0ID0gY29tbWl0X2Zp
bGVfYXRvbXMoaW5vZGUpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlpZiAocGlu
ZGV4ID49IG5yX3BhZ2VzICYmIGppbmRleCA9PSBwaW5kZXgpCisJCQlicmVhazsKKwl9IHdoaWxl
ICgxKTsKKworICAgICAgZW5kOgorCWlmIChpc19pbl9yZWlzZXI0X2NvbnRleHQoKSkgeworCQlp
ZiAoZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5ucl9jYXB0dXJlZCA+PSBDQVBUVVJFX0FQQUdFX0JV
UlNUKSB7CisJCQkvKgorCQkJICogdGhlcmUgYXJlIGFscmVhZHkgcGFnZXMgdG8gZmx1c2gsIGZs
dXNoIHRoZW0gb3V0LCBkbworCQkJICogbm90IGRlbGF5IHVudGlsIGVuZCBvZiByZWlzZXI0X3N5
bmNfaW5vZGVzCisJCQkgKi8KKwkJCXJlaXNlcjRfd3JpdGVvdXQoaW5vZGUtPmlfc2IsIHdiYyk7
CisJCQlnZXRfY3VycmVudF9jb250ZXh0KCktPm5yX2NhcHR1cmVkID0gMDsKKwkJfQorCX0KKwly
ZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIHJlYWRwYWdlX3VuaXhfZmlsZV9ub2xvY2sgLSBy
ZWFkcGFnZSBvZiBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25zCisgKiBAZmlsZToKKyAq
IEBwYWdlOgorICoKKyAqIENvbXBvc2UgYSBrZXkgYW5kIHNlYXJjaCBmb3IgaXRlbSBjb250YWlu
aW5nIGluZm9ybWF0aW9uIGFib3V0IEBwYWdlCisgKiBkYXRhLiBJZiBpdGVtIGlzIGZvdW5kIC0g
aXRzIHJlYWRwYWdlIG1ldGhvZCBpcyBjYWxsZWQuCisgKi8KK2ludCByZWFkcGFnZV91bml4X2Zp
bGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwYWdlICpwYWdlKQoreworCXJlaXNlcjRfY29u
dGV4dCAqY3R4OworCWludCByZXN1bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlyZWlzZXI0
X2tleSBrZXk7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCWhpbnRfdCAqaGludDsKKwlsb2NrX2hh
bmRsZSAqbGg7CisJY29vcmRfdCAqY29vcmQ7CisKKwlhc3NlcnQoInZzLTEwNjIiLCBQYWdlTG9j
a2VkKHBhZ2UpKTsKKwlhc3NlcnQoInZzLTk3NiIsICFQYWdlVXB0b2RhdGUocGFnZSkpOworCWFz
c2VydCgidnMtMTA2MSIsIHBhZ2UtPm1hcHBpbmcgJiYgcGFnZS0+bWFwcGluZy0+aG9zdCk7CisK
KwlpZiAocGFnZS0+bWFwcGluZy0+aG9zdC0+aV9zaXplIDw9IHBhZ2Vfb2Zmc2V0KHBhZ2UpKSB7
CisJCS8qIHBhZ2UgaXMgb3V0IG9mIGZpbGUgKi8KKwkJemVyb191c2VyKHBhZ2UsIDAsIFBBR0Vf
U0laRSk7CisJCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKKwkJdW5sb2NrX3BhZ2UocGFnZSk7CisJ
CXJldHVybiAwOworCX0KKworCWlub2RlID0gcGFnZS0+bWFwcGluZy0+aG9zdDsKKwljdHggPSBy
ZWlzZXI0X2luaXRfY29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKSB7CisJ
CXVubG9ja19wYWdlKHBhZ2UpOworCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCX0KKworCWhpbnQg
PSBrbWFsbG9jKHNpemVvZigqaGludCksIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlp
ZiAoaGludCA9PSBOVUxMKSB7CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQlyZWlzZXI0X2V4aXRf
Y29udGV4dChjdHgpOworCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCX0KKworCXJlc3VsdCA9
IGxvYWRfZmlsZV9oaW50KGZpbGUsIGhpbnQpOworCWlmIChyZXN1bHQpIHsKKwkJa2ZyZWUoaGlu
dCk7CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOwor
CQlyZXR1cm4gcmVzdWx0OworCX0KKwlsaCA9ICZoaW50LT5saDsKKworCS8qIGdldCBrZXkgb2Yg
Zmlyc3QgYnl0ZSBvZiB0aGUgcGFnZSAqLworCWtleV9ieV9pbm9kZV9hbmRfb2Zmc2V0X2NvbW1v
bihpbm9kZSwgcGFnZV9vZmZzZXQocGFnZSksICZrZXkpOworCisJLyogbG9vayBmb3IgZmlsZSBt
ZXRhZGF0YSBjb3JyZXNwb25kaW5nIHRvIGZpcnN0IGJ5dGUgb2YgcGFnZSAqLworCWdldF9wYWdl
KHBhZ2UpOworCXVubG9ja19wYWdlKHBhZ2UpOworCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVtKGhp
bnQsICZrZXksIFpOT0RFX1JFQURfTE9DSywgaW5vZGUpOworCWxvY2tfcGFnZShwYWdlKTsKKwlw
dXRfcGFnZShwYWdlKTsKKworCWlmIChwYWdlLT5tYXBwaW5nID09IE5VTEwpIHsKKwkJLyoKKwkJ
ICogcmVhZHBhZ2UgYWxsb3dzIHRydW5jYXRlIHRvIHJ1biBjb25jdXJyZW50bHkuIFBhZ2Ugd2Fz
CisJCSAqIHRydW5jYXRlZCB3aGlsZSBpdCB3YXMgbm90IGxvY2tlZAorCQkgKi8KKwkJZG9uZV9s
aChsaCk7CisJCWtmcmVlKGhpbnQpOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmVpc2VyNF90
eG5fcmVzdGFydChjdHgpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1cm4g
LUVJTlZBTDsKKwl9CisKKwlpZiAocmVzdWx0ICE9IENCS19DT09SRF9GT1VORCB8fCBoaW50LT5l
eHRfY29vcmQuY29vcmQuYmV0d2VlbiAhPSBBVF9VTklUKSB7CisJCWlmIChyZXN1bHQgPT0gQ0JL
X0NPT1JEX0ZPVU5EICYmCisJCSAgICBoaW50LT5leHRfY29vcmQuY29vcmQuYmV0d2VlbiAhPSBB
VF9VTklUKQorCQkJLyogZmlsZSBpcyB0cnVuY2F0ZWQgKi8KKwkJCXJlc3VsdCA9IC1FSU5WQUw7
CisJCWRvbmVfbGgobGgpOworCQlrZnJlZShoaW50KTsKKwkJdW5sb2NrX3BhZ2UocGFnZSk7CisJ
CXJlaXNlcjRfdHhuX3Jlc3RhcnQoY3R4KTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsK
KwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKgorCSAqIGl0ZW0gY29ycmVzcG9uZGluZyB0byBw
YWdlIGlzIGZvdW5kLiBJdCBjYW4gbm90IGJlIHJlbW92ZWQgYmVjYXVzZQorCSAqIHpub2RlIGxv
Y2sgaXMgaGVsZAorCSAqLworCWlmIChQYWdlVXB0b2RhdGUocGFnZSkpIHsKKwkJZG9uZV9saChs
aCk7CisJCWtmcmVlKGhpbnQpOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmVpc2VyNF90eG5f
cmVzdGFydChjdHgpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1cm4gMDsK
Kwl9CisKKwljb29yZCA9ICZoaW50LT5leHRfY29vcmQuY29vcmQ7CisJcmVzdWx0ID0gemxvYWQo
Y29vcmQtPm5vZGUpOworCWlmIChyZXN1bHQpIHsKKwkJZG9uZV9saChsaCk7CisJCWtmcmVlKGhp
bnQpOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmVpc2VyNF90eG5fcmVzdGFydChjdHgpOwor
CQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCXZh
bGlkYXRlX2V4dGVuZGVkX2Nvb3JkKCZoaW50LT5leHRfY29vcmQsIHBhZ2Vfb2Zmc2V0KHBhZ2Up
KTsKKworCWlmICghY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpIHsKKwkJLyogdGhpcyBp
bmRpY2F0ZXMgY29ycnVwdGlvbiAqLworCQl3YXJuaW5nKCJ2cy0yODAiLAorCQkJIkxvb2tpbmcg
Zm9yIHBhZ2UgJWx1IG9mIGZpbGUgJWxsdSAoc2l6ZSAlbGxpKS4gIgorCQkJIk5vIGZpbGUgaXRl
bXMgZm91bmQgKCVkKS4gRmlsZSBpcyBjb3JydXB0ZWQ/XG4iLAorCQkJcGFnZS0+aW5kZXgsICh1
bnNpZ25lZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSksCisJCQlpbm9kZS0+aV9zaXpl
LCByZXN1bHQpOworCQl6cmVsc2UoY29vcmQtPm5vZGUpOworCQlkb25lX2xoKGxoKTsKKwkJa2Zy
ZWUoaGludCk7CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQlyZWlzZXI0X3R4bl9yZXN0YXJ0KGN0
eCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiBSRVRFUlIoLUVJTyk7
CisJfQorCisJLyoKKwkgKiBnZXQgcGx1Z2luIG9mIGZvdW5kIGl0ZW0gb3IgdXNlIHBsdWdpbiBp
ZiBleHRlbnQgaWYgdGhlcmUgYXJlIG5vCisJICogb25lCisJICovCisJaXBsdWcgPSBpdGVtX3Bs
dWdpbl9ieV9jb29yZChjb29yZCk7CisJaWYgKGlwbHVnLT5zLmZpbGUucmVhZHBhZ2UpCisJCXJl
c3VsdCA9IGlwbHVnLT5zLmZpbGUucmVhZHBhZ2UoY29vcmQsIHBhZ2UpOworCWVsc2UKKwkJcmVz
dWx0ID0gUkVURVJSKC1FSU5WQUwpOworCisJaWYgKCFyZXN1bHQpIHsKKwkJc2V0X2tleV9vZmZz
ZXQoJmtleSwKKwkJCSAgICAgICAobG9mZl90KSAocGFnZS0+aW5kZXggKyAxKSA8PCBQQUdFX1NI
SUZUKTsKKwkJLyogRklYTUUgc2hvdWxkIGNhbGwgcmVpc2VyNF9zZXRfaGludCgpICovCisJCXJl
aXNlcjRfdW5zZXRfaGludChoaW50KTsKKwl9IGVsc2UgeworCQl1bmxvY2tfcGFnZShwYWdlKTsK
KwkJcmVpc2VyNF91bnNldF9oaW50KGhpbnQpOworCX0KKwlhc3NlcnQoInZzLTk3OSIsCisJICAg
ICAgIGVyZ28ocmVzdWx0ID09IDAsIChQYWdlTG9ja2VkKHBhZ2UpIHx8IFBhZ2VVcHRvZGF0ZShw
YWdlKSkpKTsKKwlhc3NlcnQoInZzLTk3OTEiLCBlcmdvKHJlc3VsdCAhPSAwLCAhUGFnZUxvY2tl
ZChwYWdlKSkpOworCisJenJlbHNlKGNvb3JkLT5ub2RlKTsKKwlkb25lX2xoKGxoKTsKKworCXNh
dmVfZmlsZV9oaW50KGZpbGUsIGhpbnQpOworCWtmcmVlKGhpbnQpOworCisJLyoKKwkgKiBGSVhN
RTogZXhwbGFpbiB3aHkgaXQgaXMgbmVlZGVkLiBISU5UOiBwYWdlIGFsbG9jYXRpb24gaW4gd3Jp
dGUgY2FuCisJICogbm90IGJlIGRvbmUgd2hlbiBhdG9tIGlzIG5vdCBOVUxMIGJlY2F1c2UgcmVp
c2VyNF93cml0ZXBhZ2UgY2FuIG5vdAorCSAqIGtpY2sgZW50ZCBhbmQgaGF2ZSB0byBlZmx1c2gK
KwkgKi8KKwlyZWlzZXI0X3R4bl9yZXN0YXJ0KGN0eCk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQo
Y3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitzdHJ1Y3QgdWZfcmVhZHBhZ2VzX2NvbnRleHQg
eworCWxvY2tfaGFuZGxlIGxoOworCWNvb3JkX3QgY29vcmQ7Cit9OworCisvKgorICogQSBjYWxs
YmFjayBmdW5jdGlvbiBmb3IgcmVhZHBhZ2VzX3VuaXhfZmlsZS9yZWFkX2NhY2hlX3BhZ2VzLgor
ICogV2UgZG9uJ3QgdGFrZSBub24tZXhjbHVzaXZlIGFjY2Vzcy4gSWYgYW4gaXRlbSBkaWZmZXJl
bnQgZnJvbQorICogZXh0ZW50IHBvaW50ZXIgaXMgZm91bmQgaW4gc29tZSBpdGVyYXRpb24sIHRo
ZW4gcmV0dXJuIGVycm9yCisgKiAoLUVJTlZBTCkuCisgKgorICogQGRhdGEgLS0gYSBwb2ludGVy
IHRvIHJlaXNlcjRfcmVhZHBhZ2VzX2NvbnRleHQgb2JqZWN0LAorICogICAgICAgICAgICB0byBz
YXZlIHRoZSB0d2lnIGxvY2sgYW5kIHRoZSBjb29yZCBiZXR3ZWVuCisgKiAgICAgICAgICAgIHJl
YWRfY2FjaGVfcGFnZSBpdGVyYXRpb25zLgorICogQHBhZ2UgLS0gcGFnZSB0byBzdGFydCByZWFk
LgorICovCitzdGF0aWMgaW50IHJlYWRwYWdlc19maWxsZXIodm9pZCAqIGRhdGEsIHN0cnVjdCBw
YWdlICogcGFnZSkKK3sKKwlzdHJ1Y3QgdWZfcmVhZHBhZ2VzX2NvbnRleHQgKnJjID0gZGF0YTsK
Kwlqbm9kZSAqIG5vZGU7CisJaW50IHJldCA9IDA7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKwlf
X3U2NCBleHRfaW5kZXg7CisJaW50IGNia19kb25lID0gMDsKKwlzdHJ1Y3QgYWRkcmVzc19zcGFj
ZSAqbWFwcGluZyA9IHBhZ2UtPm1hcHBpbmc7CisKKwlpZiAoUGFnZVVwdG9kYXRlKHBhZ2UpKSB7
CisJCXVubG9ja19wYWdlKHBhZ2UpOworCQlyZXR1cm4gMDsKKwl9CisJZ2V0X3BhZ2UocGFnZSk7
CisKKwlpZiAocmMtPmxoLm5vZGUgPT0gMCkgeworCQkvKiBubyB0d2lnIGxvY2sgIC0gaGF2ZSB0
byBkbyB0cmVlIHNlYXJjaC4gKi8KKwkJcmVpc2VyNF9rZXkga2V5OworCXJlcGVhdDoKKwkJdW5s
b2NrX3BhZ2UocGFnZSk7CisJCWtleV9ieV9pbm9kZV9hbmRfb2Zmc2V0X2NvbW1vbigKKwkJCW1h
cHBpbmctPmhvc3QsIHBhZ2Vfb2Zmc2V0KHBhZ2UpLCAma2V5KTsKKwkJcmV0ID0gY29vcmRfYnlf
a2V5KAorCQkJJmdldF9zdXBlcl9wcml2YXRlKG1hcHBpbmctPmhvc3QtPmlfc2IpLT50cmVlLAor
CQkJJmtleSwgJnJjLT5jb29yZCwgJnJjLT5saCwKKwkJCVpOT0RFX1JFQURfTE9DSywgRklORF9F
WEFDVCwKKwkJCVRXSUdfTEVWRUwsIFRXSUdfTEVWRUwsIENCS19VTklRVUUsIE5VTEwpOworCQlp
ZiAodW5saWtlbHkocmV0KSkKKwkJCWdvdG8gZXhpdDsKKwkJbG9ja19wYWdlKHBhZ2UpOworCQlp
ZiAoUGFnZVVwdG9kYXRlKHBhZ2UpKQorCQkJZ290byB1bmxvY2s7CisJCWNia19kb25lID0gMTsK
Kwl9CisJcmV0ID0gemxvYWQocmMtPmNvb3JkLm5vZGUpOworCWlmICh1bmxpa2VseShyZXQpKQor
CQlnb3RvIHVubG9jazsKKwlpZiAoIWNvb3JkX2lzX2V4aXN0aW5nX2l0ZW0oJnJjLT5jb29yZCkp
IHsKKwkJenJlbHNlKHJjLT5jb29yZC5ub2RlKTsKKwkJcmV0ID0gUkVURVJSKC1FTk9FTlQpOwor
CQlnb3RvIHVubG9jazsKKwl9CisJaWYgKCFpdGVtX2lzX2V4dGVudCgmcmMtPmNvb3JkKSkgewor
CQkvKgorCQkgKiAtPnJlYWRwYWdlcygpIGlzIG5vdAorCQkgKiBkZWZpbmVkIGZvciB0YWlsIGl0
ZW1zCisJCSAqLworCQl6cmVsc2UocmMtPmNvb3JkLm5vZGUpOworCQlyZXQgPSBSRVRFUlIoLUVJ
TlZBTCk7CisJCWdvdG8gdW5sb2NrOworCX0KKwlleHQgPSBleHRlbnRfYnlfY29vcmQoJnJjLT5j
b29yZCk7CisJZXh0X2luZGV4ID0gZXh0ZW50X3VuaXRfaW5kZXgoJnJjLT5jb29yZCk7CisJaWYg
KHBhZ2UtPmluZGV4IDwgZXh0X2luZGV4IHx8CisJICAgIHBhZ2UtPmluZGV4ID49IGV4dF9pbmRl
eCArIGV4dGVudF9nZXRfd2lkdGgoZXh0KSkgeworCQkvKiB0aGUgcGFnZSBpbmRleCBkb2Vzbid0
IGJlbG9uZyB0byB0aGUgZXh0ZW50IHVuaXQKKwkJICAgd2hpY2ggdGhlIGNvb3JkIHBvaW50cyB0
byAtIHJlbGVhc2UgdGhlIGxvY2sgYW5kCisJCSAgIHJlcGVhdCB3aXRoIHRyZWUgc2VhcmNoLiAq
LworCQl6cmVsc2UocmMtPmNvb3JkLm5vZGUpOworCQlkb25lX2xoKCZyYy0+bGgpOworCQkvKiB3
ZSBjYW4gYmUgaGVyZSBhZnRlciBhIENCSyBjYWxsIG9ubHkgaW4gY2FzZSBvZgorCQkgICBjb3Jy
dXB0aW9uIG9mIHRoZSB0cmVlIG9yIHRoZSB0cmVlIGxvb2t1cCBhbGdvcml0aG0gYnVnLiAqLwor
CQlpZiAodW5saWtlbHkoY2JrX2RvbmUpKSB7CisJCQlyZXQgPSBSRVRFUlIoLUVJTyk7CisJCQln
b3RvIHVubG9jazsKKwkJfQorCQlnb3RvIHJlcGVhdDsKKwl9CisJbm9kZSA9IGpub2RlX29mX3Bh
Z2UocGFnZSk7CisJaWYgKHVubGlrZWx5KElTX0VSUihub2RlKSkpIHsKKwkJenJlbHNlKHJjLT5j
b29yZC5ub2RlKTsKKwkJcmV0ID0gUFRSX0VSUihub2RlKTsKKwkJZ290byB1bmxvY2s7CisJfQor
CXJldCA9IHJlaXNlcjRfZG9fcmVhZHBhZ2VfZXh0ZW50KGV4dCwgcGFnZS0+aW5kZXggLSBleHRf
aW5kZXgsIHBhZ2UpOworCWpwdXQobm9kZSk7CisJenJlbHNlKHJjLT5jb29yZC5ub2RlKTsKKwlp
ZiAobGlrZWx5KCFyZXQpKQorCQlnb3RvIGV4aXQ7CisgdW5sb2NrOgorCXVubG9ja19wYWdlKHBh
Z2UpOworIGV4aXQ6CisJcHV0X3BhZ2UocGFnZSk7CisJcmV0dXJuIHJldDsKK30KKworLyoqCisg
KiByZWFkcGFnZXNfdW5peF9maWxlIC0gY2FsbGVkIGJ5IHRoZSByZWFkYWhlYWQgY29kZSwgc3Rh
cnRzIHJlYWRpbmcgZm9yIGVhY2gKKyAqIHBhZ2Ugb2YgZ2l2ZW4gbGlzdCBvZiBwYWdlcworICov
CitpbnQgcmVhZHBhZ2VzX3VuaXhfZmlsZShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGFkZHJl
c3Nfc3BhY2UgKm1hcHBpbmcsCisJCQlzdHJ1Y3QgbGlzdF9oZWFkICpwYWdlcywgdW5zaWduZWQg
bnJfcGFnZXMpCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJc3RydWN0IHVmX3JlYWRwYWdl
c19jb250ZXh0IHJjOworCWludCByZXQ7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dCht
YXBwaW5nLT5ob3N0LT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpIHsKKwkJcHV0X3BhZ2VzX2xp
c3QocGFnZXMpOworCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCX0KKwlpbml0X2xoKCZyYy5saCk7
CisJcmV0ID0gcmVhZF9jYWNoZV9wYWdlcyhtYXBwaW5nLCBwYWdlcywgIHJlYWRwYWdlc19maWxs
ZXIsICZyYyk7CisJZG9uZV9saCgmcmMubGgpOworCisJY29udGV4dF9zZXRfY29tbWl0X2FzeW5j
KGN0eCk7CisJLyogY2xvc2UgdGhlIHRyYW5zYWN0aW9uIHRvIHByb3RlY3QgZnVydGhlciBwYWdl
IGFsbG9jYXRpb24gZnJvbSBkZWFkbG9ja3MgKi8KKwlyZWlzZXI0X3R4bl9yZXN0YXJ0KGN0eCk7
CisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMg
cmVpc2VyNF9ibG9ja19uciB1bml4X2ZpbGVfZXN0aW1hdGVfcmVhZChzdHJ1Y3QgaW5vZGUgKmlu
b2RlLAorCQkJCQkJbG9mZl90IGNvdW50IFVOVVNFRF9BUkcpCit7CisJLyogV2Ugc2hvdWxkIHJl
c2VydmUgb25lIGJsb2NrLCBiZWNhdXNlIG9mIHVwZGF0aW5nIG9mIHRoZSBzdGF0IGRhdGEKKwkg
ICBpdGVtICovCisJYXNzZXJ0KCJ2cy0xMjQ5IiwKKwkgICAgICAgaW5vZGVfZmlsZV9wbHVnaW4o
aW5vZGUpLT5lc3RpbWF0ZS51cGRhdGUgPT0KKwkgICAgICAgZXN0aW1hdGVfdXBkYXRlX2NvbW1v
bik7CisJcmV0dXJuIGVzdGltYXRlX3VwZGF0ZV9jb21tb24oaW5vZGUpOworfQorCisvKiB0aGlz
IGlzIGNhbGxlZCB3aXRoIG5vbmV4Y2x1c2l2ZSBhY2Nlc3Mgb2J0YWluZWQsCisgICBmaWxlJ3Mg
Y29udGFpbmVyIGNhbiBub3QgY2hhbmdlICovCitzdGF0aWMgc3NpemVfdCBkb19yZWFkX2NvbXBv
dW5kX2ZpbGUoaGludF90ICpoaW50LCBzdHJ1Y3QgZmlsZSAqZmlsZSwKKwkJCQkgICAgIGNoYXIg
X191c2VyICpidWYsIHNpemVfdCBjb3VudCwKKwkJCQkgICAgIGxvZmZfdCAqb2ZmKQoreworCWlu
dCByZXN1bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlmbG93X3QgZmxvdzsKKwljb29yZF90
ICpjb29yZDsKKwl6bm9kZSAqbG9hZGVkOworCisJaW5vZGUgPSBmaWxlX2lub2RlKGZpbGUpOwor
CisJLyogYnVpbGQgZmxvdyAqLworCWFzc2VydCgidnMtMTI1MCIsCisJICAgICAgIGlub2RlX2Zp
bGVfcGx1Z2luKGlub2RlKS0+Zmxvd19ieV9pbm9kZSA9PQorCSAgICAgICBmbG93X2J5X2lub2Rl
X3VuaXhfZmlsZSk7CisJcmVzdWx0ID0gZmxvd19ieV9pbm9kZV91bml4X2ZpbGUoaW5vZGUsIGJ1
ZiwgMSAvKiB1c2VyIHNwYWNlICovLAorCQkJCQkgY291bnQsICpvZmYsIFJFQURfT1AsICZmbG93
KTsKKwlpZiAodW5saWtlbHkocmVzdWx0KSkKKwkJcmV0dXJuIHJlc3VsdDsKKworCS8qIGdldCBz
ZWFsIGFuZCBjb29yZCBzZWFsZWQgd2l0aCBpdCBmcm9tIHJlaXNlcjQgcHJpdmF0ZSBkYXRhCisJ
ICAgb2Ygc3RydWN0IGZpbGUuICBUaGUgY29vcmQgd2lsbCB0ZWxsIHVzIHdoZXJlIG91ciBsYXN0
IHJlYWQKKwkgICBvZiB0aGlzIGZpbGUgZmluaXNoZWQsIGFuZCB0aGUgc2VhbCB3aWxsIGhlbHAg
dG8gZGV0ZXJtaW5lCisJICAgaWYgdGhhdCBsb2NhdGlvbiBpcyBzdGlsbCB2YWxpZC4KKwkgKi8K
Kwljb29yZCA9ICZoaW50LT5leHRfY29vcmQuY29vcmQ7CisJd2hpbGUgKGZsb3cubGVuZ3RoICYm
IHJlc3VsdCA9PSAwKSB7CisJCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVtKGhpbnQsICZmbG93Lmtl
eSwKKwkJCQkJWk5PREVfUkVBRF9MT0NLLCBpbm9kZSk7CisJCWlmIChjYmtfZXJyb3JlZChyZXN1
bHQpKQorCQkJLyogZXJyb3IgaGFwcGVuZWQgKi8KKwkJCWJyZWFrOworCisJCWlmIChjb29yZC0+
YmV0d2VlbiAhPSBBVF9VTklUKSB7CisJCQkvKiB0aGVyZSB3ZXJlIG5vIGl0ZW1zIGNvcnJlc3Bv
bmRpbmcgdG8gZ2l2ZW4gb2Zmc2V0ICovCisJCQlkb25lX2xoKGhpbnQtPmV4dF9jb29yZC5saCk7
CisJCQlicmVhazsKKwkJfQorCisJCWxvYWRlZCA9IGNvb3JkLT5ub2RlOworCQlyZXN1bHQgPSB6
bG9hZChsb2FkZWQpOworCQlpZiAodW5saWtlbHkocmVzdWx0KSkgeworCQkJZG9uZV9saChoaW50
LT5leHRfY29vcmQubGgpOworCQkJYnJlYWs7CisJCX0KKworCQlpZiAoaGludC0+ZXh0X2Nvb3Jk
LnZhbGlkID09IDApCisJCQl2YWxpZGF0ZV9leHRlbmRlZF9jb29yZCgmaGludC0+ZXh0X2Nvb3Jk
LAorCQkJCQkJZ2V0X2tleV9vZmZzZXQoJmZsb3cua2V5KSk7CisKKwkJYXNzZXJ0KCJ2cy00Iiwg
aGludC0+ZXh0X2Nvb3JkLnZhbGlkID09IDEpOworCQlhc3NlcnQoInZzLTMzIiwgaGludC0+ZXh0
X2Nvb3JkLmxoID09ICZoaW50LT5saCk7CisJCS8qIGNhbGwgaXRlbSdzIHJlYWQgbWV0aG9kICov
CisJCXJlc3VsdCA9IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+cy5maWxlLnJlYWQoZmls
ZSwKKwkJCQkJCQkJICAmZmxvdywKKwkJCQkJCQkJICBoaW50KTsKKwkJenJlbHNlKGxvYWRlZCk7
CisJCWRvbmVfbGgoaGludC0+ZXh0X2Nvb3JkLmxoKTsKKwl9CisJcmV0dXJuIChjb3VudCAtIGZs
b3cubGVuZ3RoKSA/IChjb3VudCAtIGZsb3cubGVuZ3RoKSA6IHJlc3VsdDsKK30KKworc3RhdGlj
IHNzaXplX3QgcmVhZF9jb21wb3VuZF9maWxlKHN0cnVjdCBmaWxlKiwgY2hhciBfX3VzZXIqLCBz
aXplX3QsIGxvZmZfdCopOworCisvKioKKyAqIHVuaXgtZmlsZSBzcGVjaWZpYyAtPnJlYWQoKSBt
ZXRob2QKKyAqIG9mIHN0cnVjdCBmaWxlX29wZXJhdGlvbnMuCisgKi8KK3NzaXplX3QgcmVhZF91
bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2VyICpidWYsCisJCSAgICAgICBz
aXplX3QgcmVhZF9hbW91bnQsIGxvZmZfdCAqb2ZmKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4
OworCXNzaXplX3QgcmVzdWx0OworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJc3RydWN0IHVuaXhf
ZmlsZV9pbmZvICp1Zl9pbmZvOworCisJaWYgKHVubGlrZWx5KHJlYWRfYW1vdW50ID09IDApKQor
CQlyZXR1cm4gMDsKKworCWlub2RlID0gZmlsZV9pbm9kZShmaWxlKTsKKwlhc3NlcnQoInZzLTk3
MiIsICFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlTRVI0X05PX1NEKSk7CisKKwlj
dHggPSByZWlzZXI0X2luaXRfY29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgp
KQorCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCisJcmVzdWx0ID0gcmVpc2VyNF9ncmFiX3NwYWNl
X2ZvcmNlKHVuaXhfZmlsZV9lc3RpbWF0ZV9yZWFkKGlub2RlLAorCQkJCQkgIHJlYWRfYW1vdW50
KSwgQkFfQ0FOX0NPTU1JVCk7CisJaWYgKHVubGlrZWx5KHJlc3VsdCAhPSAwKSkKKwkJZ290byBv
dXQyOworCisJdWZfaW5mbyA9IHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKworCWlmICh1
Zl9pbmZvLT5jb250YWluZXIgPT0gVUZfQ09OVEFJTkVSX1VOS05PV04pIHsKKwkJZ2V0X2V4Y2x1
c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCXJlc3VsdCA9IGZpbmRfZmlsZV9zdGF0ZShpbm9kZSwg
dWZfaW5mbyk7CisJCWlmICh1bmxpa2VseShyZXN1bHQgIT0gMCkpCisJCQlnb3RvIG91dDsKKwl9
CisJZWxzZQorCQlnZXRfbm9uZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKworCXN3aXRjaCAo
dWZfaW5mby0+Y29udGFpbmVyKSB7CisJY2FzZSBVRl9DT05UQUlORVJfRVhURU5UUzoKKwkJaWYg
KCFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfTUlYRUQpKSB7CisJ
CQlyZXN1bHQgPSBuZXdfc3luY19yZWFkKGZpbGUsIGJ1ZiwgcmVhZF9hbW91bnQsIG9mZik7CisJ
CQlicmVhazsKKwkJfQorCQkvKiBmYWxsIHRocm91Z2ggKi8KKwljYXNlIFVGX0NPTlRBSU5FUl9U
QUlMUzoKKwljYXNlIFVGX0NPTlRBSU5FUl9VTktOT1dOOgorCQlyZXN1bHQgPSByZWFkX2NvbXBv
dW5kX2ZpbGUoZmlsZSwgYnVmLCByZWFkX2Ftb3VudCwgb2ZmKTsKKwkJYnJlYWs7CisJY2FzZSBV
Rl9DT05UQUlORVJfRU1QVFk6CisJCXJlc3VsdCA9IDA7CisJfQorIG91dDoKKwlkcm9wX2FjY2Vz
cyh1Zl9pbmZvKTsKKyBvdXQyOgorCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCXJl
aXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIFJl
YWQgYSBmaWxlLCB3aGljaCBjb250YWlucyB0YWlscyBhbmQsIG1heWJlLAorICogZXh0ZW50cy4K
KyAqCisgKiBTb21ldGltZXMgZmlsZSBjYW4gY29uc2lzdCBvZiBpdGVtcyBvZiBib3RoIHR5cGVz
CisgKiAoZXh0ZW50cyBhbmQgdGFpbHMpLiBJdCBjYW4gaGFwcGVuLCBlLmcuIGJlY2F1c2UKKyAq
IG9mIGZhaWxlZCB0YWlsIGNvbnZlcnNpb24uIEFsc28gdGhlIGNvbnZlcnNpb24gY29kZQorICog
bWF5IHJlbGVhc2UgZXhjbHVzaXZlIGxvY2sgYmVmb3JlIGNhbGxpbmcKKyAqIGJhbGFuY2VfZGly
dHlfcGFnZXMoKS4KKyAqCisgKiBJbiB0aGlzIGNhc2UgYXBwbHlpbmcgYSBnZW5lcmljIFZGUyBs
aWJyYXJ5IGZ1bmN0aW9uCisgKiB3b3VsZCBiZSBzdWJvcHRpbWFsLiBXZSB1c2Ugb3VyIG93biAi
bGlnaHQtd2VpZ3RoIgorICogdmVyc2lvbiBiZWxvdy4KKyAqLworc3RhdGljIHNzaXplX3QgcmVh
ZF9jb21wb3VuZF9maWxlKHN0cnVjdCBmaWxlICpmaWxlLCBjaGFyIF9fdXNlciAqYnVmLAorCQkJ
CSAgc2l6ZV90IGNvdW50LCBsb2ZmX3QgKm9mZikKK3sKKwlzc2l6ZV90IHJlc3VsdCA9IDA7CisJ
c3RydWN0IGlub2RlICppbm9kZTsKKwloaW50X3QgKmhpbnQ7CisJc3RydWN0IHVuaXhfZmlsZV9p
bmZvICp1Zl9pbmZvOworCXNpemVfdCB0b19yZWFkOworCXNpemVfdCB3YXNfcmVhZCA9IDA7CisJ
bG9mZl90IGlfc2l6ZTsKKworCWlub2RlID0gZmlsZV9pbm9kZShmaWxlKTsKKwlhc3NlcnQoInZz
LTk3MiIsICFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlTRVI0X05PX1NEKSk7CisK
KwlpX3NpemUgPSBpX3NpemVfcmVhZChpbm9kZSk7CisJaWYgKCpvZmYgPj0gaV9zaXplKQorCQkv
KiBwb3NpdGlvbiB0byByZWFkIGZyb20gaXMgcGFzdCB0aGUgZW5kIG9mIGZpbGUgKi8KKwkJZ290
byBleGl0OworCWlmICgqb2ZmICsgY291bnQgPiBpX3NpemUpCisJCWNvdW50ID0gaV9zaXplIC0g
Km9mZjsKKworCWhpbnQgPSBrbWFsbG9jKHNpemVvZigqaGludCksIHJlaXNlcjRfY3R4X2dmcF9t
YXNrX2dldCgpKTsKKwlpZiAoaGludCA9PSBOVUxMKQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0p
OworCisJcmVzdWx0ID0gbG9hZF9maWxlX2hpbnQoZmlsZSwgaGludCk7CisJaWYgKHJlc3VsdCkg
eworCQlrZnJlZShoaW50KTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisJdWZfaW5mbyA9IHVuaXhf
ZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKworCS8qIHJlYWQgYnkgcGFnZS1hbGlnbmVkIGNodW5r
cyAqLworCXRvX3JlYWQgPSBQQUdFX1NJWkUgLSAoKm9mZiAmIChsb2ZmX3QpKFBBR0VfU0laRSAt
IDEpKTsKKwlpZiAodG9fcmVhZCA+IGNvdW50KQorCQl0b19yZWFkID0gY291bnQ7CisJd2hpbGUg
KGNvdW50ID4gMCkgeworCQlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsKKwkJLyoKKwkJ
ICogZmF1bHRpbiB1c2VyIHBhZ2UKKwkJICovCisJCXJlc3VsdCA9IGZhdWx0X2luX3BhZ2VzX3dy
aXRlYWJsZShidWYsIHRvX3JlYWQpOworCQlpZiAocmVzdWx0KQorCQkJcmV0dXJuIFJFVEVSUigt
RUZBVUxUKTsKKworCQlyZXN1bHQgPSBkb19yZWFkX2NvbXBvdW5kX2ZpbGUoaGludCwgZmlsZSwg
YnVmLCB0b19yZWFkLCBvZmYpOworCQlpZiAocmVzdWx0IDwgMCkKKwkJCWJyZWFrOworCQljb3Vu
dCAtPSByZXN1bHQ7CisJCWJ1ZiArPSByZXN1bHQ7CisKKwkJLyogdXBkYXRlIHBvc2l0aW9uIGlu
IGEgZmlsZSAqLworCQkqb2ZmICs9IHJlc3VsdDsKKwkJLyogdG90YWwgbnVtYmVyIG9mIHJlYWQg
Ynl0ZXMgKi8KKwkJd2FzX3JlYWQgKz0gcmVzdWx0OworCQl0b19yZWFkID0gY291bnQ7CisJCWlm
ICh0b19yZWFkID4gUEFHRV9TSVpFKQorCQkJdG9fcmVhZCA9IFBBR0VfU0laRTsKKwl9CisJZG9u
ZV9saCgmaGludC0+bGgpOworCXNhdmVfZmlsZV9oaW50KGZpbGUsIGhpbnQpOworCWtmcmVlKGhp
bnQpOworCWlmICh3YXNfcmVhZCkKKwkJZmlsZV9hY2Nlc3NlZChmaWxlKTsKKyBleGl0OgorCXJl
dHVybiB3YXNfcmVhZCA/IHdhc19yZWFkIDogcmVzdWx0OworfQorCisvKiBUaGlzIGZ1bmN0aW9u
IHRha2VzIGNhcmUgYWJvdXQgQGZpbGUncyBwYWdlcy4gRmlyc3Qgb2YgYWxsIGl0IGNoZWNrcyBp
ZgorICAgZmlsZXN5c3RlbXMgcmVhZG9ubHkgYW5kIGlmIHNvIGdldHMgb3V0LiBPdGhlcndpc2Us
IGl0IHRocm93cyBvdXQgYWxsCisgICBwYWdlcyBvZiBmaWxlIGlmIGl0IHdhcyBtYXBwZWQgZm9y
IHJlYWQgYW5kIGdvaW5nIHRvIGJlIG1hcHBlZCBmb3Igd3JpdGUKKyAgIGFuZCBjb25zaXN0cyBv
ZiB0YWlscy4gVGhpcyBpcyBkb25lIGluIG9yZGVyIHRvIG5vdCBtYW5hZ2UgZmV3IGNvcGllcwor
ICAgb2YgdGhlIGRhdGEgKGZpcnN0IGluIHBhZ2UgY2FjaGUgYW5kIHNlY29uZCBvbmUgaW4gdGFp
bHMgdGhlbSBzZWx2ZXMpCisgICBmb3IgdGhlIGNhc2Ugb2YgbWFwcGluZyBmaWxlcyBjb25zaXN0
aW5nIHRhaWxzLgorCisgICBIZXJlIGFsc28gdGFpbDJleHRlbnQgY29udmVyc2lvbiBpcyBwZXJm
b3JtZWQgaWYgaXQgaXMgYWxsb3dlZCBhbmQgZmlsZQorICAgaXMgZ29pbmcgdG8gYmUgd3JpdHRl
biBvciBtYXBwZWQgZm9yIHdyaXRlLiBUaGlzIGZ1bmN0aW9ucyBtYXkgYmUgY2FsbGVkCisgICBm
cm9tIHdyaXRlX3VuaXhfZmlsZSgpIG9yIG1tYXBfdW5peF9maWxlKCkuICovCitzdGF0aWMgaW50
IGNoZWNrX3BhZ2VzX3VuaXhfZmlsZShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGlub2RlICpp
bm9kZSkKK3sKKwlyZWlzZXI0X2ludmFsaWRhdGVfcGFnZXMoaW5vZGUtPmlfbWFwcGluZywgMCwK
KwkJCQkgKGlub2RlLT5pX3NpemUgKyBQQUdFX1NJWkUgLQorCQkJCSAgMSkgPj4gUEFHRV9TSElG
VCwgMCk7CisJcmV0dXJuIHVucGFjayhmaWxlLCBpbm9kZSwgMCAvKiBub3QgZm9yZXZlciAqLyAp
OworfQorCisvKioKKyAqIG1tYXBfdW5peF9maWxlIC0gbW1hcCBvZiBzdHJ1Y3QgZmlsZV9vcGVy
YXRpb25zCisgKiBAZmlsZTogZmlsZSB0byBtbWFwCisgKiBAdm1hOgorICoKKyAqIFRoaXMgaXMg
aW1wbGVtZW50YXRpb24gb2YgdmZzJ3MgbW1hcCBtZXRob2Qgb2Ygc3RydWN0IGZpbGVfb3BlcmF0
aW9ucyBmb3IKKyAqIHVuaXggZmlsZSBwbHVnaW4uIEl0IGNvbnZlcnRzIGZpbGUgdG8gZXh0ZW50
IGlmIG5lY2Vzc2FyeS4gU2V0cworICogcmVpc2VyNF9pbm9kZSdzIGZsYWcgLSBSRUlTRVI0X0hB
U19NTUFQLgorICovCitpbnQgbW1hcF91bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVj
dCB2bV9hcmVhX3N0cnVjdCAqdm1hKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCWludCBy
ZXN1bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKnVm
X2luZm87CisJcmVpc2VyNF9ibG9ja19uciBuZWVkZWQ7CisKKwlpbm9kZSA9IGZpbGVfaW5vZGUo
ZmlsZSk7CisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOworCWlmIChJ
U19FUlIoY3R4KSkKKwkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKKworCXVmX2luZm8gPSB1bml4X2Zp
bGVfaW5vZGVfZGF0YShpbm9kZSk7CisKKwlnZXRfZXhjbHVzaXZlX2FjY2Vzc19jYXJlZnVsKHVm
X2luZm8sIGlub2RlKTsKKworCWlmICghSVNfUkRPTkxZKGlub2RlKSAmJiAodm1hLT52bV9mbGFn
cyAmIChWTV9NQVlXUklURSB8IFZNX1NIQVJFRCkpKSB7CisJCS8qCisJCSAqIHdlIG5lZWQgZmls
ZSBidWlsdCBvZiBleHRlbnQgaXRlbXMuIElmIGl0IGlzIHN0aWxsIGJ1aWx0IG9mCisJCSAqIHRh
aWwgaXRlbXMgd2UgaGF2ZSB0byBjb252ZXJ0IGl0LiBGaW5kIHdoYXQgaXRlbXMgdGhlIGZpbGUK
KwkJICogaXMgYnVpbHQgb2YKKwkJICovCisJCXJlc3VsdCA9IGZpbmRfZmlsZV9zdGF0ZShpbm9k
ZSwgdWZfaW5mbyk7CisJCWlmIChyZXN1bHQgIT0gMCkgeworCQkJZHJvcF9leGNsdXNpdmVfYWNj
ZXNzKHVmX2luZm8pOworCQkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJCXJldHVybiBy
ZXN1bHQ7CisJCX0KKworCQlhc3NlcnQoInZzLTE2NDgiLCAodWZfaW5mby0+Y29udGFpbmVyID09
IFVGX0NPTlRBSU5FUl9UQUlMUyB8fAorCQkJCSAgIHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9D
T05UQUlORVJfRVhURU5UUyB8fAorCQkJCSAgIHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05U
QUlORVJfRU1QVFkpKTsKKwkJaWYgKHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05UQUlORVJf
VEFJTFMpIHsKKwkJCS8qCisJCQkgKiBpbnZhbGlkYXRlIGFsbCBwYWdlcyBhbmQgY29udmVydCBm
aWxlIGZyb20gdGFpbHMgdG8KKwkJCSAqIGV4dGVudHMKKwkJCSAqLworCQkJcmVzdWx0ID0gY2hl
Y2tfcGFnZXNfdW5peF9maWxlKGZpbGUsIGlub2RlKTsKKwkJCWlmIChyZXN1bHQpIHsKKwkJCQlk
cm9wX2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQkJcmVpc2VyNF9leGl0X2NvbnRleHQo
Y3R4KTsKKwkJCQlyZXR1cm4gcmVzdWx0OworCQkJfQorCQl9CisJfQorCisJLyoKKwkgKiBnZW5l
cmljX2ZpbGVfbW1hcCB3aWxsIGRvIHVwZGF0ZV9hdGltZS4gR3JhYiBzcGFjZSBmb3Igc3RhdCBk
YXRhCisJICogdXBkYXRlLgorCSAqLworCW5lZWRlZCA9IGlub2RlX2ZpbGVfcGx1Z2luKGlub2Rl
KS0+ZXN0aW1hdGUudXBkYXRlKGlub2RlKTsKKwlyZXN1bHQgPSByZWlzZXI0X2dyYWJfc3BhY2Vf
Zm9yY2UobmVlZGVkLCBCQV9DQU5fQ09NTUlUKTsKKwlpZiAocmVzdWx0KSB7CisJCWRyb3BfZXhj
bHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJ
cmV0dXJuIHJlc3VsdDsKKwl9CisKKwlyZXN1bHQgPSBnZW5lcmljX2ZpbGVfbW1hcChmaWxlLCB2
bWEpOworCWlmIChyZXN1bHQgPT0gMCkgeworCQkvKiBtYXJrIGZpbGUgYXMgaGF2aW5nIG1hcHBp
bmcuICovCisJCXJlaXNlcjRfaW5vZGVfc2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfSEFTX01NQVAp
OworCX0KKworCWRyb3BfZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwlyZWlzZXI0X2V4aXRf
Y29udGV4dChjdHgpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qKgorICogZmluZF9maXJzdF9p
dGVtCisgKiBAaW5vZGU6CisgKgorICogRmluZHMgZmlsZSBpdGVtIHdoaWNoIGlzIHJlc3BvbnNp
YmxlIGZvciBmaXJzdCBieXRlIGluIHRoZSBmaWxlLgorICovCitzdGF0aWMgaW50IGZpbmRfZmly
c3RfaXRlbShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWNvb3JkX3QgY29vcmQ7CisJbG9ja19o
YW5kbGUgbGg7CisJcmVpc2VyNF9rZXkga2V5OworCWludCByZXN1bHQ7CisKKwljb29yZF9pbml0
X3plcm8oJmNvb3JkKTsKKwlpbml0X2xoKCZsaCk7CisJaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUp
LT5rZXlfYnlfaW5vZGUoaW5vZGUsIDAsICZrZXkpOworCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVt
X25vaGludCgmY29vcmQsICZsaCwgJmtleSwgWk5PREVfUkVBRF9MT0NLLAorCQkJCSAgICAgICBp
bm9kZSk7CisJaWYgKHJlc3VsdCA9PSBDQktfQ09PUkRfRk9VTkQpIHsKKwkJaWYgKGNvb3JkLmJl
dHdlZW4gPT0gQVRfVU5JVCkgeworCQkJcmVzdWx0ID0gemxvYWQoY29vcmQubm9kZSk7CisJCQlp
ZiAocmVzdWx0ID09IDApIHsKKwkJCQlyZXN1bHQgPSBpdGVtX2lkX2J5X2Nvb3JkKCZjb29yZCk7
CisJCQkJenJlbHNlKGNvb3JkLm5vZGUpOworCQkJCWlmIChyZXN1bHQgIT0gRVhURU5UX1BPSU5U
RVJfSUQgJiYKKwkJCQkgICAgcmVzdWx0ICE9IEZPUk1BVFRJTkdfSUQpCisJCQkJCXJlc3VsdCA9
IFJFVEVSUigtRUlPKTsKKwkJCX0KKwkJfSBlbHNlCisJCQlyZXN1bHQgPSBSRVRFUlIoLUVJTyk7
CisJfQorCWRvbmVfbGgoJmxoKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIG9wZW5f
dW5peF9maWxlCisgKiBAaW5vZGU6CisgKiBAZmlsZToKKyAqCisgKiBJZiBmaWxlc3lzdGVtIGlz
IG5vdCByZWFkb25seSAtIGNvbXBsZXRlIHVuY29tcGxldGVkIHRhaWwgY29udmVyc2lvbiBpZgor
ICogdGhlcmUgd2FzIG9uZQorICovCitpbnQgb3Blbl91bml4X2ZpbGUoc3RydWN0IGlub2RlICpp
bm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCit7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X2NvbnRl
eHQgKmN0eDsKKwlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKnVmX2luZm87CisKKwlpZiAoSVNfUkRP
TkxZKGlub2RlKSkKKwkJcmV0dXJuIDA7CisKKwlpZiAoIXJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWco
aW5vZGUsIFJFSVNFUjRfUEFSVF9NSVhFRCkpCisJCXJldHVybiAwOworCisJY3R4ID0gcmVpc2Vy
NF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJu
IFBUUl9FUlIoY3R4KTsKKworCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShpbm9kZSk7
CisKKwlnZXRfZXhjbHVzaXZlX2FjY2Vzc19jYXJlZnVsKHVmX2luZm8sIGlub2RlKTsKKworCWlm
ICghcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9QQVJUX01JWEVEKSkgewor
CQkvKgorCQkgKiBvdGhlciBwcm9jZXNzIGNvbXBsZXRlZCB0aGUgY29udmVyc2lvbgorCQkgKi8K
KwkJZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQlyZWlzZXI0X2V4aXRfY29udGV4
dChjdHgpOworCQlyZXR1cm4gMDsKKwl9CisKKwkvKgorCSAqIGZpbGUgbGVmdCBpbiBzZW1pIGNv
bnZlcnRlZCBzdGF0ZSBhZnRlciB1bmNsZWFuIHNodXRkb3duIG9yIGFub3RoZXIKKwkgKiB0aHJl
YWQgaXMgZG9pbmcgY29udmVyc2lvbiBhbmQgZHJvcHBlZCBleGNsdXNpdmUgYWNjZXNzIHdoaWNo
IGRvaW5nCisJICogYmFsYW5jZSBkaXJ0eSBwYWdlcy4gQ29tcGxldGUgdGhlIGNvbnZlcnNpb24K
KwkgKi8KKwlyZXN1bHQgPSBmaW5kX2ZpcnN0X2l0ZW0oaW5vZGUpOworCWlmIChyZXN1bHQgPT0g
RVhURU5UX1BPSU5URVJfSUQpCisJCS8qCisJCSAqIGZpcnN0IGl0ZW0gaXMgZXh0ZW50LCB0aGVy
ZWZvcmUgdGhlcmUgd2FzIGluY29tcGxldGUKKwkJICogdGFpbDJleHRlbnQgY29udmVyc2lvbi4g
Q29tcGxldGUgaXQKKwkJICovCisJCXJlc3VsdCA9IHRhaWwyZXh0ZW50KHVuaXhfZmlsZV9pbm9k
ZV9kYXRhKGlub2RlKSk7CisJZWxzZSBpZiAocmVzdWx0ID09IEZPUk1BVFRJTkdfSUQpCisJCS8q
CisJCSAqIGZpcnN0IGl0ZW0gaXMgZm9ybWF0dGluZyBpdGVtLCB0aGVyZWZvcmUgdGhlcmUgd2Fz
CisJCSAqIGluY29tcGxldGUgZXh0ZW50MnRhaWwgY29udmVyc2lvbi4gQ29tcGxldGUgaXQKKwkJ
ICovCisJCXJlc3VsdCA9IGV4dGVudDJ0YWlsKGZpbGUsIHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlu
b2RlKSk7CisJZWxzZQorCQlyZXN1bHQgPSAtRUlPOworCisJYXNzZXJ0KCJ2cy0xNzEyIiwKKwkg
ICAgICAgZXJnbyhyZXN1bHQgPT0gMCwKKwkJICAgICghcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhp
bm9kZSwgUkVJU0VSNF9QQVJUX01JWEVEKSAmJgorCQkgICAgICFyZWlzZXI0X2lub2RlX2dldF9m
bGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfSU5fQ09OVikpKSk7CisJZHJvcF9leGNsdXNpdmVfYWNj
ZXNzKHVmX2luZm8pOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworI2RlZmluZSBORUlUSEVSX09CVEFJTkVEIDAKKyNkZWZpbmUgRUFfT0JUQUlORUQg
MQorI2RlZmluZSBORUFfT0JUQUlORUQgMgorCitzdGF0aWMgdm9pZCBkcm9wX2FjY2VzcyhzdHJ1
Y3QgdW5peF9maWxlX2luZm8gKnVmX2luZm8pCit7CisJaWYgKHVmX2luZm8tPmV4Y2x1c2l2ZV91
c2UpCisJCWRyb3BfZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwllbHNlCisJCWRyb3Bfbm9u
ZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKK30KKworI2RlZmluZSBkZWJ1Z193dWYoZm9ybWF0
LCAuLi4pIHByaW50aygiJXM6ICVkOiAlczogIiBmb3JtYXQgIlxuIiwgXAorCQkJICAgICAgX19G
SUxFX18sIF9fTElORV9fLCBfX0ZVTkNUSU9OX18sICMjIF9fVkFfQVJHU19fKQorCisvKioKKyAq
IHdyaXRlX3VuaXhfZmlsZSAtIHByaXZhdGUgLT53cml0ZSgpIG1ldGhvZCBvZiB1bml4X2ZpbGUg
cGx1Z2luLgorICoKKyAqIEBmaWxlOiBmaWxlIHRvIHdyaXRlIHRvCisgKiBAYnVmOiBhZGRyZXNz
IG9mIHVzZXItc3BhY2UgYnVmZmVyCisgKiBAY291bnQ6IG51bWJlciBvZiBieXRlcyB0byB3cml0
ZQorICogQHBvczogcG9zaXRpb24gaW4gZmlsZSB0byB3cml0ZSB0bworICogQGNvbnQ6IHVudXNl
ZCBhcmd1bWVudCwgYXMgd2UgZG9uJ3QgcGVyZm9ybSBwbHVnaW4gY29udmVyc2lvbiB3aGVuIGJl
aW5nCisgKiBtYW5hZ2VkIGJ5IHVuaXhfZmlsZSBwbHVnaW4uCisgKi8KK3NzaXplX3Qgd3JpdGVf
dW5peF9maWxlKHN0cnVjdCBmaWxlICpmaWxlLAorCQkJY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwK
KwkJCXNpemVfdCBjb3VudCwgbG9mZl90ICpwb3MsCisJCQlzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4
dCAqY29udCkKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXN0cnVj
dCBpbm9kZSAqaW5vZGU7CisJc3RydWN0IHVuaXhfZmlsZV9pbmZvICp1Zl9pbmZvOworCXNzaXpl
X3Qgd3JpdHRlbjsKKwlpbnQgdG9fd3JpdGUgPSBQQUdFX1NJWkUgKiBXUklURV9HUkFOVUxBUklU
WTsKKwlzaXplX3QgbGVmdDsKKwlzc2l6ZV90ICgqd3JpdGVfb3ApKHN0cnVjdCBmaWxlICosIHN0
cnVjdCBpbm9kZSAqLAorCQkJICAgIGNvbnN0IGNoYXIgX191c2VyICosIHNpemVfdCwKKwkJCSAg
ICBsb2ZmX3QgKnBvcyk7CisJaW50IGVhOworCWludCBlbm9zcGMgPSAwOyAvKiBpdGVtIHBsdWdp
biAtPndyaXRlKCkgcmV0dXJuZWQgRU5PU1BDICovCisJbG9mZl90IG5ld19zaXplOworCisJY3R4
ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpOworCWlub2RlID0gZmlsZV9pbm9kZShmaWxlKTsKKwor
CWFzc2VydCgidnMtOTQ3IiwgIXJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRf
Tk9fU0QpKTsKKwlhc3NlcnQoInZzLTk0NzEiLCAoIXJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5v
ZGUsIFJFSVNFUjRfUEFSVF9NSVhFRCkpKTsKKworCXJlc3VsdCA9IGZpbGVfcmVtb3ZlX3ByaXZz
KGZpbGUpOworCWlmIChyZXN1bHQpIHsKKwkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7
CisJCXJldHVybiByZXN1bHQ7CisJfQorCS8qIHJlbW92ZV9zdWlkIG1pZ2h0IGNyZWF0ZSBhIHRy
YW5zYWN0aW9uICovCisJcmVpc2VyNF90eG5fcmVzdGFydChjdHgpOworCisJdWZfaW5mbyA9IHVu
aXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKworCXdyaXR0ZW4gPSAwOworCWxlZnQgPSBjb3Vu
dDsKKwllYSA9IE5FSVRIRVJfT0JUQUlORUQ7CisJZW5vc3BjID0gMDsKKworCW5ld19zaXplID0g
aV9zaXplX3JlYWQoaW5vZGUpOworCWlmICgqcG9zICsgY291bnQgPiBuZXdfc2l6ZSkKKwkJbmV3
X3NpemUgPSAqcG9zICsgY291bnQ7CisKKwl3aGlsZSAobGVmdCkgeworCQlpbnQgdXBkYXRlX3Nk
ID0gMDsKKwkJaWYgKGxlZnQgPCB0b193cml0ZSkKKwkJCXRvX3dyaXRlID0gbGVmdDsKKworCQlp
ZiAodWZfaW5mby0+Y29udGFpbmVyID09IFVGX0NPTlRBSU5FUl9FTVBUWSkgeworCQkJZ2V0X2V4
Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQllYSA9IEVBX09CVEFJTkVEOworCQkJaWYgKHVm
X2luZm8tPmNvbnRhaW5lciAhPSBVRl9DT05UQUlORVJfRU1QVFkpIHsKKwkJCQkvKiBmaWxlIGlz
IG1hZGUgbm90IGVtcHR5IGJ5IGFub3RoZXIgcHJvY2VzcyAqLworCQkJCWRyb3BfZXhjbHVzaXZl
X2FjY2Vzcyh1Zl9pbmZvKTsKKwkJCQllYSA9IE5FSVRIRVJfT0JUQUlORUQ7CisJCQkJY29udGlu
dWU7CisJCQl9CisJCX0gZWxzZSBpZiAodWZfaW5mby0+Y29udGFpbmVyID09IFVGX0NPTlRBSU5F
Ul9VTktOT1dOKSB7CisJCQkvKgorCQkJICogZ2V0IGV4Y2x1c2l2ZSBhY2Nlc3MgZGlyZWN0bHkg
anVzdCB0byBub3QgaGF2ZSB0bworCQkJICogcmUtb2J0YWluIGl0IGlmIGZpbGUgd2lsbCBhcHBl
YXIgZW1wdHkKKwkJCSAqLworCQkJZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQll
YSA9IEVBX09CVEFJTkVEOworCQkJcmVzdWx0ID0gZmluZF9maWxlX3N0YXRlKGlub2RlLCB1Zl9p
bmZvKTsKKwkJCWlmIChyZXN1bHQpIHsKKwkJCQlkcm9wX2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5m
byk7CisJCQkJZWEgPSBORUlUSEVSX09CVEFJTkVEOworCQkJCWJyZWFrOworCQkJfQorCQl9IGVs
c2UgeworCQkJZ2V0X25vbmV4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQllYSA9IE5FQV9P
QlRBSU5FRDsKKwkJfQorCisJCS8qIGVpdGhlciBFQSBvciBORUEgaXMgb2J0YWluZWQuIENob29z
ZSBpdGVtIHdyaXRlIG1ldGhvZCAqLworCQlpZiAodWZfaW5mby0+Y29udGFpbmVyID09IFVGX0NP
TlRBSU5FUl9FWFRFTlRTKSB7CisJCQkvKiBmaWxlIGlzIGJ1aWx0IG9mIGV4dGVudCBpdGVtcyAq
LworCQkJd3JpdGVfb3AgPSByZWlzZXI0X3dyaXRlX2V4dGVudDsKKwkJfSBlbHNlIGlmICh1Zl9p
bmZvLT5jb250YWluZXIgPT0gVUZfQ09OVEFJTkVSX0VNUFRZKSB7CisJCQkvKiBmaWxlIGlzIGVt
cHR5ICovCisJCQlpZiAoc2hvdWxkX2hhdmVfbm90YWlsKHVmX2luZm8sIG5ld19zaXplKSkKKwkJ
CQl3cml0ZV9vcCA9IHJlaXNlcjRfd3JpdGVfZXh0ZW50OworCQkJZWxzZQorCQkJCXdyaXRlX29w
ID0gcmVpc2VyNF93cml0ZV90YWlsOworCQl9IGVsc2UgeworCQkJLyogZmlsZSBpcyBidWlsdCBv
ZiB0YWlsIGl0ZW1zICovCisJCQlpZiAoc2hvdWxkX2hhdmVfbm90YWlsKHVmX2luZm8sIG5ld19z
aXplKSkgeworCQkJCWlmIChlYSA9PSBORUFfT0JUQUlORUQpIHsKKwkJCQkJZHJvcF9ub25leGNs
dXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQkJCQlnZXRfZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZv
KTsKKwkJCQkJZWEgPSBFQV9PQlRBSU5FRDsKKwkJCQl9CisJCQkJaWYgKHVmX2luZm8tPmNvbnRh
aW5lciA9PSBVRl9DT05UQUlORVJfVEFJTFMpIHsKKwkJCQkJLyoKKwkJCQkJICogaWYgZmlsZSBp
cyBiZWluZyBjb252ZXJlZCBieSBhbm90aGVyCisJCQkJCSAqIHByb2Nlc3MgLSB3YWl0IHVudGls
IGl0IGNvbXBsZXRlcworCQkJCQkgKi8KKwkJCQkJd2hpbGUgKDEpIHsKKwkJCQkJCWlmIChyZWlz
ZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLAorCQkJCQkJCQkJICAgUkVJU0VSNF9QQVJUX0lOX0NP
TlYpKSB7CisJCQkJCQkJZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQkJCQkJCXNj
aGVkdWxlKCk7CisJCQkJCQkJZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQkJCQkJ
Y29udGludWU7CisJCQkJCQl9CisJCQkJCQlicmVhazsKKwkJCQkJfQorCQkJCQlpZiAodWZfaW5m
by0+Y29udGFpbmVyID09ICBVRl9DT05UQUlORVJfVEFJTFMpIHsKKwkJCQkJCXJlc3VsdCA9IHRh
aWwyZXh0ZW50KHVmX2luZm8pOworCQkJCQkJaWYgKHJlc3VsdCkgeworCQkJCQkJCWRyb3BfZXhj
bHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwkJCQkJCQljb250ZXh0X3NldF9jb21taXRfYXN5bmMo
Y3R4KTsKKwkJCQkJCQlicmVhazsKKwkJCQkJCX0KKwkJCQkJfQorCQkJCX0KKwkJCQlkcm9wX2V4
Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQkJZWEgPSBORUlUSEVSX09CVEFJTkVEOworCQkJ
CWNvbnRpbnVlOworCQkJfQorCQkJd3JpdGVfb3AgPSByZWlzZXI0X3dyaXRlX3RhaWw7CisJCX0K
KworCQl3cml0dGVuID0gd3JpdGVfb3AoZmlsZSwgaW5vZGUsIGJ1ZiwgdG9fd3JpdGUsIHBvcyk7
CisJCWlmICh3cml0dGVuID09IC1FTk9TUEMgJiYgIWVub3NwYykgeworCQkJZHJvcF9hY2Nlc3Mo
dWZfaW5mbyk7CisJCQl0eG5tZ3JfZm9yY2VfY29tbWl0X2FsbChpbm9kZS0+aV9zYiwgMCk7CisJ
CQllbm9zcGMgPSAxOworCQkJY29udGludWU7CisJCX0KKwkJaWYgKHdyaXR0ZW4gPCAwKSB7CisJ
CQkvKgorCQkJICogSWYgdGhpcyBpcyAtRU5PU1BDLCB0aGVuIGl0IGhhcHBlbmVkCisJCQkgKiBz
ZWNvbmQgdGltZSwgc28gZG9uJ3QgdHJ5IHRvIGZyZWUgc3BhY2UKKwkJCSAqIG9uY2UgYWdhaW4u
CisJCQkgKi8KKwkJCWRyb3BfYWNjZXNzKHVmX2luZm8pOworCQkJcmVzdWx0ID0gd3JpdHRlbjsK
KwkJCWJyZWFrOworCQl9CisJCS8qIHNvbWV0aGluZyBpcyB3cml0dGVuLiAqLworCQlpZiAoZW5v
c3BjKQorCQkJZW5vc3BjID0gMDsKKwkJaWYgKHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05U
QUlORVJfRU1QVFkpIHsKKwkJCWFzc2VydCgiZWR3YXJkLTE1NTMiLCBlYSA9PSBFQV9PQlRBSU5F
RCk7CisJCQl1Zl9pbmZvLT5jb250YWluZXIgPQorCQkJCSh3cml0ZV9vcCA9PSByZWlzZXI0X3dy
aXRlX2V4dGVudCkgPworCQkJCVVGX0NPTlRBSU5FUl9FWFRFTlRTIDogVUZfQ09OVEFJTkVSX1RB
SUxTOworCQl9CisJCWFzc2VydCgiZWR3YXJkLTE1NTQiLAorCQkgICAgICAgZXJnbyh1Zl9pbmZv
LT5jb250YWluZXIgPT0gVUZfQ09OVEFJTkVSX0VYVEVOVFMsCisJCQkgICAgd3JpdGVfb3AgPT0g
cmVpc2VyNF93cml0ZV9leHRlbnQpKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTU1NSIsCisJCSAgICAg
ICBlcmdvKHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05UQUlORVJfVEFJTFMsCisJCQkgICAg
d3JpdGVfb3AgPT0gcmVpc2VyNF93cml0ZV90YWlsKSk7CisJCWlmICgqcG9zICsgd3JpdHRlbiA+
IGlub2RlLT5pX3NpemUpIHsKKwkJCUlOT0RFX1NFVF9GSUVMRChpbm9kZSwgaV9zaXplLCAqcG9z
ICsgd3JpdHRlbik7CisJCQl1cGRhdGVfc2QgPSAxOworCQl9CisJCWlmICghSVNfTk9DTVRJTUUo
aW5vZGUpKSB7CisJCQlpbm9kZS0+aV9jdGltZSA9IGlub2RlLT5pX210aW1lID0gY3VycmVudF90
aW1lKGlub2RlKTsKKwkJCXVwZGF0ZV9zZCA9IDE7CisJCX0KKwkJaWYgKHVwZGF0ZV9zZCkgewor
CQkJLyoKKwkJCSAqIHNwYWNlIGZvciB1cGRhdGVfc2Qgd2FzIHJlc2VydmVkIGluIHdyaXRlX29w
CisJCQkgKi8KKwkJCXJlc3VsdCA9IHJlaXNlcjRfdXBkYXRlX3NkKGlub2RlKTsKKwkJCWlmIChy
ZXN1bHQpIHsKKwkJCQl3YXJuaW5nKCJlZHdhcmQtMTU3NCIsCisJCQkJCSJDYW4gbm90IHVwZGF0
ZSBzdGF0LWRhdGE6ICVpLiBGU0NLPyIsCisJCQkJCXJlc3VsdCk7CisJCQkJZHJvcF9hY2Nlc3Mo
dWZfaW5mbyk7CisJCQkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJCQkJYnJlYWs7
CisJCQl9CisJCX0KKwkJZHJvcF9hY2Nlc3ModWZfaW5mbyk7CisJCWVhID0gTkVJVEhFUl9PQlRB
SU5FRDsKKworCQkvKgorCQkgKiB0ZWxsIFZNIGhvdyBtYW55IHBhZ2VzIHdlcmUgZGlydGllZC4g
TWF5YmUgbnVtYmVyIG9mIHBhZ2VzCisJCSAqIHdoaWNoIHdlcmUgZGlydHkgYWxyZWFkeSBzaG91
bGQgbm90IGJlIGNvdW50ZWQKKwkJICovCisJCXJlaXNlcjRfdGhyb3R0bGVfd3JpdGUoaW5vZGUp
OworCQlsZWZ0IC09IHdyaXR0ZW47CisJCWJ1ZiArPSB3cml0dGVuOworCQkqcG9zICs9IHdyaXR0
ZW47CisJfQorCWlmIChyZXN1bHQgPT0gMCAmJiAoKGZpbGUtPmZfZmxhZ3MgJiBPX1NZTkMpIHx8
IElTX1NZTkMoaW5vZGUpKSkgeworCQlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsKKwkJ
Z3JhYl9zcGFjZV9lbmFibGUoKTsKKwkJcmVzdWx0ID0gcmVpc2VyNF9zeW5jX2ZpbGVfY29tbW9u
KGZpbGUsIDAsIExPTkdfTUFYLAorCQkJCQkJICAwIC8qIGRhdGEgYW5kIHN0YXQgZGF0YSAqLyk7
CisJCWlmIChyZXN1bHQpCisJCQl3YXJuaW5nKCJyZWlzZXI0LTciLCAiZmFpbGVkIHRvIHN5bmMg
ZmlsZSAlbGx1IiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQoaW5vZGUp
KTsKKwl9CisJLyoKKwkgKiByZXR1cm4gbnVtYmVyIG9mIHdyaXR0ZW4gYnl0ZXMgb3IgZXJyb3Ig
Y29kZSBpZiBub3RoaW5nIGlzCisJICogd3JpdHRlbi4gTm90ZSwgdGhhdCBpdCBkb2VzIG5vdCB3
b3JrIGNvcnJlY3RseSBpbiBjYXNlIHdoZW4KKwkgKiBzeW5jX3VuaXhfZmlsZSByZXR1cm5zIGVy
cm9yCisJICovCisJcmV0dXJuIChjb3VudCAtIGxlZnQpID8gKGNvdW50IC0gbGVmdCkgOiByZXN1
bHQ7Cit9CisKKy8qKgorICogcmVsZWFzZV91bml4X2ZpbGUgLSByZWxlYXNlIG9mIHN0cnVjdCBm
aWxlX29wZXJhdGlvbnMKKyAqIEBpbm9kZTogaW5vZGUgb2YgcmVsZWFzZWQgZmlsZQorICogQGZp
bGU6IGZpbGUgdG8gcmVsZWFzZQorICoKKyAqIEltcGxlbWVudGF0aW9uIG9mIHJlbGVhc2UgbWV0
aG9kIG9mIHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgZm9yIHVuaXggZmlsZQorICogcGx1Z2luLiBJ
ZiBsYXN0IHJlZmVyZW5jZSB0byBpbmRvZGUgaXMgcmVsZWFzZWQgLSBjb252ZXJ0IGFsbCBleHRl
bnQgaXRlbXMKKyAqIGludG8gdGFpbCBpdGVtcyBpZiBuZWNlc3NhcnkuIEZyZWVzIHJlaXNlcjQg
c3BlY2lmaWMgZmlsZSBkYXRhLgorICovCitpbnQgcmVsZWFzZV91bml4X2ZpbGUoc3RydWN0IGlu
b2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7
CisJc3RydWN0IHVuaXhfZmlsZV9pbmZvICp1Zl9pbmZvOworCWludCByZXN1bHQ7CisJaW50IGlu
X3JlaXNlcjQ7CisKKwlpbl9yZWlzZXI0ID0gaXNfaW5fcmVpc2VyNF9jb250ZXh0KCk7CisKKwlj
dHggPSByZWlzZXI0X2luaXRfY29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgp
KQorCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCisJcmVzdWx0ID0gMDsKKwlpZiAoaW5fcmVpc2Vy
NCA9PSAwKSB7CisJCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShpbm9kZSk7CisKKwkJ
Z2V0X2V4Y2x1c2l2ZV9hY2Nlc3NfY2FyZWZ1bCh1Zl9pbmZvLCBpbm9kZSk7CisJCWlmIChmaWxl
LT5mX3BhdGguZGVudHJ5LT5kX2xvY2tyZWYuY291bnQgPT0gMSAmJgorCQkgICAgdWZfaW5mby0+
Y29udGFpbmVyID09IFVGX0NPTlRBSU5FUl9FWFRFTlRTICYmCisJCSAgICAhc2hvdWxkX2hhdmVf
bm90YWlsKHVmX2luZm8sIGlub2RlLT5pX3NpemUpICYmCisJCSAgICAhSVNfUkRPTkxZKGlub2Rl
KSkgeworCQkJcmVzdWx0ID0gZXh0ZW50MnRhaWwoZmlsZSwgdWZfaW5mbyk7CisJCQlpZiAocmVz
dWx0ICE9IDApIHsKKwkJCQljb250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwkJCQl3YXJu
aW5nKCJuaWtpdGEtMzIzMyIsCisJCQkJCSJGYWlsZWQgKCVkKSB0byBjb252ZXJ0IGluICVzICgl
bGx1KSIsCisJCQkJCXJlc3VsdCwgX19GVU5DVElPTl9fLAorCQkJCQkodW5zaWduZWQgbG9uZyBs
b25nKQorCQkJCQlnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisJCQl9CisJCX0KKwkJZHJvcF9leGNs
dXNpdmVfYWNjZXNzKHVmX2luZm8pOworCX0gZWxzZSB7CisJCS8qCisJCSAgIHdlIGFyZSB3aXRo
aW4gcmVpc2VyNCBjb250ZXh0IGFscmVhZHkuIEhvdyBsYXR0ZXIgaXMKKwkJICAgcG9zc2libGU/
IFNpbXBsZToKKworCQkgICAoZ2RiKSBidAorCQkgICAjMCAgZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3Mg
KCkKKwkJICAgIzIgIDB4YzAxZTU2ZDMgaW4gcmVsZWFzZV91bml4X2ZpbGUgKCkKKwkJICAgIzMg
IDB4YzAxYzM2NDMgaW4gcmVpc2VyNF9yZWxlYXNlICgpCisJCSAgICM0ICAweGMwMTRjYWUwIGlu
IF9fZnB1dCAoKQorCQkgICAjNSAgMHhjMDEzZmZjMyBpbiByZW1vdmVfdm1fc3RydWN0ICgpCisJ
CSAgICM2ICAweGMwMTQxNzg2IGluIGV4aXRfbW1hcCAoKQorCQkgICAjNyAgMHhjMDExODQ4MCBp
biBtbXB1dCAoKQorCQkgICAjOCAgMHhjMDEzMzIwNSBpbiBvb21fa2lsbCAoKQorCQkgICAjOSAg
MHhjMDEzMzJkMSBpbiBvdXRfb2ZfbWVtb3J5ICgpCisJCSAgICMxMCAweGMwMTNiYzFkIGluIHRy
eV90b19mcmVlX3BhZ2VzICgpCisJCSAgICMxMSAweGMwMTM0MjdiIGluIF9fYWxsb2NfcGFnZXMg
KCkKKwkJICAgIzEyIDB4YzAxM2YwNTggaW4gZG9fYW5vbnltb3VzX3BhZ2UgKCkKKwkJICAgIzEz
IDB4YzAxM2YxOWQgaW4gZG9fbm9fcGFnZSAoKQorCQkgICAjMTQgMHhjMDEzZjYwZSBpbiBoYW5k
bGVfbW1fZmF1bHQgKCkKKwkJICAgIzE1IDB4YzAxMTMxZTUgaW4gZG9fcGFnZV9mYXVsdCAoKQor
CQkgICAjMTYgMHhjMDEwNDkzNSBpbiBlcnJvcl9jb2RlICgpCisJCSAgICMxNyAweGMwMjVjMGM2
IGluIF9fY29weV90b191c2VyX2xsICgpCisJCSAgICMxOCAweGMwMWQ0OTZmIGluIHJlaXNlcjRf
cmVhZF90YWlsICgpCisJCSAgICMxOSAweGMwMWU0ZGVmIGluIHJlYWRfdW5peF9maWxlICgpCisJ
CSAgICMyMCAweGMwMWMzNTA0IGluIHJlaXNlcjRfcmVhZCAoKQorCQkgICAjMjEgMHhjMDE0YmQ0
ZiBpbiB2ZnNfcmVhZCAoKQorCQkgICAjMjIgMHhjMDE0YmY2NiBpbiBzeXNfcmVhZCAoKQorCQkg
Ki8KKwkJd2FybmluZygidnMtNDQiLCAib3V0IG9mIG1lbW9yeT8iKTsKKwl9CisKKwlyZWlzZXI0
X2ZyZWVfZmlsZV9mc2RhdGEoZmlsZSk7CisKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOwor
CXJldHVybiByZXN1bHQ7Cit9CisKK3N0YXRpYyB2b2lkIHNldF9maWxlX25vdGFpbChzdHJ1Y3Qg
aW5vZGUgKmlub2RlKQoreworCXJlaXNlcjRfaW5vZGUgKnN0YXRlOworCWZvcm1hdHRpbmdfcGx1
Z2luICp0cGx1ZzsKKworCXN0YXRlID0gcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKTsKKwl0cGx1
ZyA9IGZvcm1hdHRpbmdfcGx1Z2luX2J5X2lkKE5FVkVSX1RBSUxTX0ZPUk1BVFRJTkdfSUQpOwor
CWZvcmNlX3BsdWdpbl9wc2V0KGlub2RlLCBQU0VUX0ZPUk1BVFRJTkcsIChyZWlzZXI0X3BsdWdp
biAqKXRwbHVnKTsKK30KKworLyogaWYgZmlsZSBpcyBidWlsdCBvZiB0YWlscyAtIGNvbnZlcnQg
aXQgdG8gZXh0ZW50cyAqLworc3RhdGljIGludCB1bnBhY2soc3RydWN0IGZpbGUgKmZpbHAsIHN0
cnVjdCBpbm9kZSAqaW5vZGUsIGludCBmb3JldmVyKQoreworCWludCByZXN1bHQgPSAwOworCXN0
cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKworCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5v
ZGVfZGF0YShpbm9kZSk7CisJYXNzZXJ0KCJ2cy0xNjI4IiwgZWFfb2J0YWluZWQodWZfaW5mbykp
OworCisJcmVzdWx0ID0gZmluZF9maWxlX3N0YXRlKGlub2RlLCB1Zl9pbmZvKTsKKwlpZiAocmVz
dWx0KQorCQlyZXR1cm4gcmVzdWx0OworCWFzc2VydCgidnMtMTA3NCIsIHVmX2luZm8tPmNvbnRh
aW5lciAhPSBVRl9DT05UQUlORVJfVU5LTk9XTik7CisKKwlpZiAodWZfaW5mby0+Y29udGFpbmVy
ID09IFVGX0NPTlRBSU5FUl9UQUlMUykgeworCQkvKgorCQkgKiBpZiBmaWxlIGlzIGJlaW5nIGNv
bnZlcmVkIGJ5IGFub3RoZXIgcHJvY2VzcyAtIHdhaXQgdW50aWwgaXQKKwkJICogY29tcGxldGVz
CisJCSAqLworCQl3aGlsZSAoMSkgeworCQkJaWYgKHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5v
ZGUsCisJCQkJCQkgICBSRUlTRVI0X1BBUlRfSU5fQ09OVikpIHsKKwkJCQlkcm9wX2V4Y2x1c2l2
ZV9hY2Nlc3ModWZfaW5mbyk7CisJCQkJc2NoZWR1bGUoKTsKKwkJCQlnZXRfZXhjbHVzaXZlX2Fj
Y2Vzcyh1Zl9pbmZvKTsKKwkJCQljb250aW51ZTsKKwkJCX0KKwkJCWJyZWFrOworCQl9CisJCWlm
ICh1Zl9pbmZvLT5jb250YWluZXIgPT0gVUZfQ09OVEFJTkVSX1RBSUxTKSB7CisJCQlyZXN1bHQg
PSB0YWlsMmV4dGVudCh1Zl9pbmZvKTsKKwkJCWlmIChyZXN1bHQpCisJCQkJcmV0dXJuIHJlc3Vs
dDsKKwkJfQorCX0KKwlpZiAoZm9yZXZlcikgeworCQkvKiBzYWZlIG5ldyBmb3JtYXR0aW5nIHBs
dWdpbiBpbiBzdGF0IGRhdGEgKi8KKwkJX191NjQgdG9ncmFiOworCisJCXNldF9maWxlX25vdGFp
bChpbm9kZSk7CisKKwkJZ3JhYl9zcGFjZV9lbmFibGUoKTsKKwkJdG9ncmFiID0gaW5vZGVfZmls
ZV9wbHVnaW4oaW5vZGUpLT5lc3RpbWF0ZS51cGRhdGUoaW5vZGUpOworCQlyZXN1bHQgPSByZWlz
ZXI0X2dyYWJfc3BhY2UodG9ncmFiLCBCQV9DQU5fQ09NTUlUKTsKKwkJcmVzdWx0ID0gcmVpc2Vy
NF91cGRhdGVfc2QoaW5vZGUpOworCX0KKworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGltcGxl
bnRhdGlvbiBvZiB2ZnMnIGlvY3RsIG1ldGhvZCBvZiBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGZv
ciB1bml4IGZpbGUKKyAgIHBsdWdpbgorKi8KK2ludCBpb2N0bF91bml4X2ZpbGUoc3RydWN0IGZp
bGUgKmZpbHAsIHVuc2lnbmVkIGludCBjbWQsCisJCSAgICB1bnNpZ25lZCBsb25nIGFyZyBVTlVT
RURfQVJHKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCWludCByZXN1bHQ7CisJc3RydWN0
IGlub2RlICppbm9kZSA9IGZpbHAtPmZfcGF0aC5kZW50cnktPmRfaW5vZGU7CisKKwljdHggPSBy
ZWlzZXI0X2luaXRfY29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQly
ZXR1cm4gUFRSX0VSUihjdHgpOworCisJc3dpdGNoIChjbWQpIHsKKwljYXNlIFJFSVNFUjRfSU9D
X1VOUEFDSzoKKwkJZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3ModW5peF9maWxlX2lub2RlX2RhdGEoaW5v
ZGUpKTsKKwkJcmVzdWx0ID0gdW5wYWNrKGZpbHAsIGlub2RlLCAxIC8qIGZvcmV2ZXIgKi8gKTsK
KwkJZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKSk7CisJ
CWJyZWFrOworCisJZGVmYXVsdDoKKwkJcmVzdWx0ID0gUkVURVJSKC1FTk9UVFkpOworCQlicmVh
azsKKwl9CisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQor
CisvKiBpbXBsZW50YXRpb24gb2YgdmZzJyBibWFwIG1ldGhvZCBvZiBzdHJ1Y3QgYWRkcmVzc19z
cGFjZV9vcGVyYXRpb25zIGZvciB1bml4CisgICBmaWxlIHBsdWdpbgorKi8KK3NlY3Rvcl90IGJt
YXBfdW5peF9maWxlKHN0cnVjdCBhZGRyZXNzX3NwYWNlICogbWFwcGluZywgc2VjdG9yX3QgbGJs
b2NrKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXNlY3Rvcl90IHJlc3VsdDsKKwlyZWlz
ZXI0X2tleSBrZXk7CisJY29vcmRfdCBjb29yZDsKKwlsb2NrX2hhbmRsZSBsaDsKKwlzdHJ1Y3Qg
aW5vZGUgKmlub2RlOworCWl0ZW1fcGx1Z2luICppcGx1ZzsKKwlzZWN0b3JfdCBibG9jazsKKwor
CWlub2RlID0gbWFwcGluZy0+aG9zdDsKKworCWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGlu
b2RlLT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVybiBQVFJfRVJSKGN0eCk7CisJ
a2V5X2J5X2lub2RlX2FuZF9vZmZzZXRfY29tbW9uKGlub2RlLAorCQkJCSAgICAgICAobG9mZl90
KSBsYmxvY2sgKiBjdXJyZW50X2Jsb2Nrc2l6ZSwKKwkJCQkgICAgICAgJmtleSk7CisKKwlpbml0
X2xoKCZsaCk7CisJcmVzdWx0ID0KKwkgICAgZmluZF9maWxlX2l0ZW1fbm9oaW50KCZjb29yZCwg
JmxoLCAma2V5LCBaTk9ERV9SRUFEX0xPQ0ssIGlub2RlKTsKKwlpZiAoY2JrX2Vycm9yZWQocmVz
dWx0KSkgeworCQlkb25lX2xoKCZsaCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJ
CXJldHVybiByZXN1bHQ7CisJfQorCisJcmVzdWx0ID0gemxvYWQoY29vcmQubm9kZSk7CisJaWYg
KHJlc3VsdCkgeworCQlkb25lX2xoKCZsaCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7
CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZCgm
Y29vcmQpOworCWlmIChpcGx1Zy0+cy5maWxlLmdldF9ibG9jaykgeworCQlyZXN1bHQgPSBpcGx1
Zy0+cy5maWxlLmdldF9ibG9jaygmY29vcmQsIGxibG9jaywgJmJsb2NrKTsKKwkJaWYgKHJlc3Vs
dCA9PSAwKQorCQkJcmVzdWx0ID0gYmxvY2s7CisJfSBlbHNlCisJCXJlc3VsdCA9IFJFVEVSUigt
RUlOVkFMKTsKKworCXpyZWxzZShjb29yZC5ub2RlKTsKKwlkb25lX2xoKCZsaCk7CisJcmVpc2Vy
NF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIGZsb3df
YnlfaW5vZGVfdW5peF9maWxlIC0gaW5pdGl6bGl6ZSBzdHJ1Y3R1cmUgZmxvdworICogQGlub2Rl
OiBpbm9kZSBvZiBmaWxlIGZvciB3aGljaCByZWFkIG9yIHdyaXRlIGlzIGFib3UKKyAqIEBidWY6
IGJ1ZmZlciB0byBwZXJmb3JtIHJlYWQgdG8gb3Igd3JpdGUgZnJvbQorICogQHVzZXI6IGZsYWcg
c2hvd2luZyB3aGV0aGVyIEBidWYgaXMgdXNlciBzcGFjZSBvciBrZXJuZWwgc3BhY2UKKyAqIEBz
aXplOiBzaXplIG9mIGJ1ZmZlciBAYnVmCisgKiBAb2ZmOiBzdGFydCBvZmZzZXQgZnJvIHJlYWQg
b3Igd3JpdGUKKyAqIEBvcDogUkVBRCBvciBXUklURQorICogQGZsb3c6CisgKgorICogSW5pdGlh
bGl6ZXMgZmllbGRzIG9mIEBmbG93OiBrZXksIHNpemUgb2YgZGF0YSwgaS9vIG1vZGUgKHJlYWQg
b3Igd3JpdGUpLgorICovCitpbnQgZmxvd19ieV9pbm9kZV91bml4X2ZpbGUoc3RydWN0IGlub2Rl
ICppbm9kZSwKKwkJCSAgICBjb25zdCBjaGFyIF9fdXNlciAqYnVmLCBpbnQgdXNlciwKKwkJCSAg
ICBsb2ZmX3Qgc2l6ZSwgbG9mZl90IG9mZiwKKwkJCSAgICByd19vcCBvcCwgZmxvd190ICpmbG93
KQoreworCWFzc2VydCgibmlraXRhLTExMDAiLCBpbm9kZSAhPSBOVUxMKTsKKworCWZsb3ctPmxl
bmd0aCA9IHNpemU7CisJbWVtY3B5KCZmbG93LT5kYXRhLCAmYnVmLCBzaXplb2YoYnVmKSk7CisJ
Zmxvdy0+dXNlciA9IHVzZXI7CisJZmxvdy0+b3AgPSBvcDsKKwlhc3NlcnQoIm5pa2l0YS0xOTMx
IiwgaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE5
MzIiLAorCSAgICAgICBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSktPmtleV9ieV9pbm9kZSA9PQor
CSAgICAgICBrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24pOworCS8qIGNhbGN1bGF0ZSBr
ZXkgb2Ygd3JpdGUgcG9zaXRpb24gYW5kIGluc2VydCBpdCBpbnRvIGZsb3ctPmtleSAqLworCXJl
dHVybiBrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24oaW5vZGUsIG9mZiwgJmZsb3ctPmtl
eSk7Cit9CisKKy8qIHBsdWdpbi0+dS5maWxlLnNldF9wbHVnX2luX3NkID0gTlVMTAorICAgcGx1
Z2luLT51LmZpbGUuc2V0X3BsdWdfaW5faW5vZGUgPSBOVUxMCisgICBwbHVnaW4tPnUuZmlsZS5j
cmVhdGVfYmxhbmtfc2QgPSBOVUxMICovCisvKiBwbHVnaW4tPnUuZmlsZS5kZWxldGUgKi8KKy8q
CisgICBwbHVnaW4tPnUuZmlsZS5hZGRfbGluayA9IHJlaXNlcjRfYWRkX2xpbmtfY29tbW9uCisg
ICBwbHVnaW4tPnUuZmlsZS5yZW1fbGluayA9IE5VTEwgKi8KKworLyogcGx1Z2luLT51LmZpbGUu
b3duc19pdGVtCisgICB0aGlzIGlzIGNvbW1vbl9maWxlX293bnNfaXRlbSB3aXRoIGFzc2VydGlv
biAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNSkgKi8KK2ludAorb3duc19pdGVt
X3VuaXhfZmlsZShjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlIC8qIG9iamVjdCB0byBjaGVjayBh
Z2FpbnN0ICovICwKKwkJICAgIGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCB0byBjaGVj
ayAqLyApCit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IG93bnNfaXRlbV9jb21tb24oaW5v
ZGUsIGNvb3JkKTsKKwlpZiAoIXJlc3VsdCkKKwkJcmV0dXJuIDA7CisJaWYgKCFwbHVnaW5fb2Zf
Z3JvdXAoaXRlbV9wbHVnaW5fYnlfY29vcmQoY29vcmQpLAorCQkJICAgICBVTklYX0ZJTEVfTUVU
QURBVEFfSVRFTV9UWVBFKSkKKwkJcmV0dXJuIDA7CisJYXNzZXJ0KCJ2cy01NDciLAorCSAgICAg
ICBpdGVtX2lkX2J5X2Nvb3JkKGNvb3JkKSA9PSBFWFRFTlRfUE9JTlRFUl9JRCB8fAorCSAgICAg
ICBpdGVtX2lkX2J5X2Nvb3JkKGNvb3JkKSA9PSBGT1JNQVRUSU5HX0lEKTsKKwlyZXR1cm4gMTsK
K30KKworc3RhdGljIGludCBzZXRhdHRyX3RydW5jYXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0
cnVjdCBpYXR0ciAqYXR0cikKK3sKKwlpbnQgcmVzdWx0OworCWludCBzX3Jlc3VsdDsKKwlsb2Zm
X3Qgb2xkX3NpemU7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJaW5vZGVfY2hlY2tfc2NhbGUo
aW5vZGUsIGlub2RlLT5pX3NpemUsIGF0dHItPmlhX3NpemUpOworCisJb2xkX3NpemUgPSBpbm9k
ZS0+aV9zaXplOworCXRyZWUgPSByZWlzZXI0X3RyZWVfYnlfaW5vZGUoaW5vZGUpOworCisJcmVz
dWx0ID0gc2FmZV9saW5rX2dyYWIodHJlZSwgQkFfQ0FOX0NPTU1JVCk7CisJaWYgKHJlc3VsdCA9
PSAwKQorCQlyZXN1bHQgPSBzYWZlX2xpbmtfYWRkKGlub2RlLCBTQUZFX1RSVU5DQVRFKTsKKwlp
ZiAocmVzdWx0ID09IDApCisJCXJlc3VsdCA9IHRydW5jYXRlX2ZpbGVfYm9keShpbm9kZSwgYXR0
cik7CisJaWYgKHJlc3VsdCkKKwkJd2FybmluZygidnMtMTU4OCIsICJ0cnVuY2F0ZV9maWxlIGZh
aWxlZDogb2lkICVsbGksICIKKwkJCSJvbGQgc2l6ZSAlbGxkLCBuZXcgc2l6ZSAlbGxkLCByZXR2
YWwgJWQiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylnZXRfaW5vZGVfb2lkKGlub2RlKSwKKwkJ
CW9sZF9zaXplLCBhdHRyLT5pYV9zaXplLCByZXN1bHQpOworCisJc19yZXN1bHQgPSBzYWZlX2xp
bmtfZ3JhYih0cmVlLCBCQV9DQU5fQ09NTUlUKTsKKwlpZiAoc19yZXN1bHQgPT0gMCkKKwkJc19y
ZXN1bHQgPQorCQkgICAgc2FmZV9saW5rX2RlbCh0cmVlLCBnZXRfaW5vZGVfb2lkKGlub2RlKSwg
U0FGRV9UUlVOQ0FURSk7CisJaWYgKHNfcmVzdWx0ICE9IDApIHsKKwkJd2FybmluZygibmlraXRh
LTM0MTciLCAiQ2Fubm90IGtpbGwgc2FmZWxpbmsgJWxsaTogJWkiLAorCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZylnZXRfaW5vZGVfb2lkKGlub2RlKSwgc19yZXN1bHQpOworCX0KKwlzYWZlX2xpbmtf
cmVsZWFzZSh0cmVlKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBwbHVnaW4tPnUuZmlsZS5z
ZXRhdHRyIG1ldGhvZCAqLworLyogVGhpcyBjYWxscyBpbm9kZV9zZXRhdHRyIGFuZCBpZiB0cnVu
Y2F0ZSBpcyBpbiBlZmZlY3QgaXQgYWxzbyB0YWtlcworICAgZXhjbHVzaXZlIGlub2RlIGFjY2Vz
cyB0byBhdm9pZCByYWNlcyAqLworaW50IHNldGF0dHJfdW5peF9maWxlKHN0cnVjdCBkZW50cnkg
KmRlbnRyeSwJLyogT2JqZWN0IHRvIGNoYW5nZSBhdHRyaWJ1dGVzICovCisJCSAgICAgIHN0cnVj
dCBpYXR0ciAqYXR0ciAvKiBjaGFuZ2UgZGVzY3JpcHRpb24gKi8gKQoreworCWludCByZXN1bHQ7
CisKKwlpZiAoYXR0ci0+aWFfdmFsaWQgJiBBVFRSX1NJWkUpIHsKKwkJcmVpc2VyNF9jb250ZXh0
ICpjdHg7CisJCXN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKworCQkvKiB0cnVuY2F0
ZSBkb2VzIHJlc2VydmF0aW9uIGl0c2VsZiBhbmQgcmVxdWlyZXMgZXhjbHVzaXZlCisJCSAgIGFj
Y2VzcyBvYnRhaW5lZCAqLworCQljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChkZW50cnktPmRf
aW5vZGUtPmlfc2IpOworCQlpZiAoSVNfRVJSKGN0eCkpCisJCQlyZXR1cm4gUFRSX0VSUihjdHgp
OworCisJCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShkZW50cnktPmRfaW5vZGUpOwor
CQlnZXRfZXhjbHVzaXZlX2FjY2Vzc19jYXJlZnVsKHVmX2luZm8sIGRlbnRyeS0+ZF9pbm9kZSk7
CisJCXJlc3VsdCA9IHNldGF0dHJfdHJ1bmNhdGUoZGVudHJ5LT5kX2lub2RlLCBhdHRyKTsKKwkJ
ZHJvcF9leGNsdXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQljb250ZXh0X3NldF9jb21taXRfYXN5
bmMoY3R4KTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwl9IGVsc2UKKwkJcmVzdWx0
ID0gcmVpc2VyNF9zZXRhdHRyX2NvbW1vbihkZW50cnksIGF0dHIpOworCisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyogcGx1Z2luLT51LmZpbGUuaW5pdF9pbm9kZV9kYXRhICovCit2b2lkCitpbml0
X2lub2RlX2RhdGFfdW5peF9maWxlKHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCQkgIHJlaXNlcjRf
b2JqZWN0X2NyZWF0ZV9kYXRhICogY3JkLCBpbnQgY3JlYXRlKQoreworCXN0cnVjdCB1bml4X2Zp
bGVfaW5mbyAqZGF0YTsKKworCWRhdGEgPSB1bml4X2ZpbGVfaW5vZGVfZGF0YShpbm9kZSk7CisJ
ZGF0YS0+Y29udGFpbmVyID0gY3JlYXRlID8gVUZfQ09OVEFJTkVSX0VNUFRZIDogVUZfQ09OVEFJ
TkVSX1VOS05PV047CisJaW5pdF9yd3NlbSgmZGF0YS0+bGF0Y2gpOworCWRhdGEtPnRwbHVnID0g
aW5vZGVfZm9ybWF0dGluZ19wbHVnaW4oaW5vZGUpOworCWRhdGEtPmV4Y2x1c2l2ZV91c2UgPSAw
OworCisjaWYgUkVJU0VSNF9ERUJVRworCWRhdGEtPmVhX293bmVyID0gTlVMTDsKKwlhdG9taWNf
c2V0KCZkYXRhLT5ucl9uZWFzLCAwKTsKKyNlbmRpZgorCWluaXRfaW5vZGVfb3JkZXJpbmcoaW5v
ZGUsIGNyZCwgY3JlYXRlKTsKK30KKworLyoqCisgKiBkZWxldGVfdW5peF9maWxlIC0gZGVsZXRl
X29iamVjdCBvZiBmaWxlX3BsdWdpbgorICogQGlub2RlOiBpbm9kZSB0byBiZSBkZWxldGVkCisg
KgorICogVHJ1bmNhdGVzIGZpbGUgdG8gbGVuZ3RoIDAsIHJlbW92ZXMgc3RhdCBkYXRhIGFuZCBz
YWZlIGxpbmsuCisgKi8KK2ludCBkZWxldGVfb2JqZWN0X3VuaXhfZmlsZShzdHJ1Y3QgaW5vZGUg
Kmlub2RlKQoreworCXN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKwlpbnQgcmVzdWx0
OworCisJaWYgKHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfTk9fU0QpKQor
CQlyZXR1cm4gMDsKKworCS8qIHRydW5jYXRlIGZpbGUgYm9neSBmaXJzdCAqLworCXVmX2luZm8g
PSB1bml4X2ZpbGVfaW5vZGVfZGF0YShpbm9kZSk7CisJZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3ModWZf
aW5mbyk7CisJcmVzdWx0ID0gc2hvcnRlbl9maWxlKGlub2RlLCAwIC8qIHNpemUgKi8gKTsKKwlk
cm9wX2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7CisKKwlpZiAocmVzdWx0KQorCQl3YXJuaW5n
KCJlZHdhcmQtMTU1NiIsCisJCQkiZmFpbGVkIHRvIHRydW5jYXRlIGZpbGUgKCVsbHUpIG9uIHJl
bW92YWw6ICVkIiwKKwkJCWdldF9pbm9kZV9vaWQoaW5vZGUpLCByZXN1bHQpOworCisJLyogcmVt
b3ZlIHN0YXQgZGF0YSBhbmQgc2FmZSBsaW5rICovCisJcmV0dXJuIHJlaXNlcjRfZGVsZXRlX29i
amVjdF9jb21tb24oaW5vZGUpOworfQorCitzdGF0aWMgaW50IGRvX3dyaXRlX2JlZ2luKHN0cnVj
dCBmaWxlICpmaWxlLCBzdHJ1Y3QgcGFnZSAqcGFnZSwKKwkJCSAgbG9mZl90IHBvcywgdW5zaWdu
ZWQgbGVuKQoreworCWludCByZXQ7CisJaWYgKGxlbiA9PSBQQUdFX1NJWkUgfHwgUGFnZVVwdG9k
YXRlKHBhZ2UpKQorCQlyZXR1cm4gMDsKKworCXJldCA9IHJlYWRwYWdlX3VuaXhfZmlsZShmaWxl
LCBwYWdlKTsKKwlpZiAocmV0KSB7CisJCVNldFBhZ2VFcnJvcihwYWdlKTsKKwkJQ2xlYXJQYWdl
VXB0b2RhdGUocGFnZSk7CisJCS8qIEFsbCByZWlzZXI0IHJlYWRwYWdlKCkgaW1wbGVtZW50YXRp
b25zIHNob3VsZCByZXR1cm4gdGhlCisJCSAqIHBhZ2UgbG9ja2VkIGluIGNhc2Ugb2YgZXJyb3Iu
ICovCisJCWFzc2VydCgibmlraXRhLTM0NzIiLCBQYWdlTG9ja2VkKHBhZ2UpKTsKKwkJcmV0dXJu
IHJldDsKKwl9CisJLyoKKwkgKiAtPnJlYWRwYWdlKCkgZWl0aGVyOgorCSAqCisJICogICAgIDEu
IHN0YXJ0cyBJTyBhZ2FpbnN0IEBwYWdlLiBAcGFnZSBpcyBsb2NrZWQgZm9yIElPIGluCisJICog
ICAgIHRoaXMgY2FzZS4KKwkgKgorCSAqICAgICAyLiBkb2Vzbid0IHN0YXJ0IElPLiBAcGFnZSBp
cyB1bmxvY2tlZC4KKwkgKgorCSAqIEluIGVpdGhlciBjYXNlLCBwYWdlIHNob3VsZCBiZSBsb2Nr
ZWQuCisJICovCisJbG9ja19wYWdlKHBhZ2UpOworCS8qCisJICogSU8gKGlmIGFueSkgaXMgY29t
cGxldGVkIGF0IHRoaXMgcG9pbnQuIENoZWNrIGZvciBJTworCSAqIGVycm9ycy4KKwkgKi8KKwlp
ZiAoIVBhZ2VVcHRvZGF0ZShwYWdlKSkKKwkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwlyZXR1cm4g
cmV0OworfQorCisvKiBwbHVnaW4tPndyaXRlX2JlZ2luKCkgKi8KK2ludCB3cml0ZV9iZWdpbl91
bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICBsb2Zm
X3QgcG9zLCB1bnNpZ25lZCBsZW4sIHZvaWQgKipmc2RhdGEpCit7CisJaW50IHJldDsKKwlzdHJ1
Y3QgaW5vZGUgKiBpbm9kZTsKKwlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKmluZm87CisKKwlpbm9k
ZSA9IGZpbGVfaW5vZGUoZmlsZSk7CisJaW5mbyA9IHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2Rl
KTsKKworCXJldCA9IHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3JjZShlc3RpbWF0ZV9vbmVfaW5zZXJ0
X2ludG9faXRlbQorCQkJCSAgICAgICAocmVpc2VyNF90cmVlX2J5X2lub2RlKGlub2RlKSksCisJ
CQkJICAgICAgIEJBX0NBTl9DT01NSVQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisJZ2V0
X2V4Y2x1c2l2ZV9hY2Nlc3MoaW5mbyk7CisJcmV0ID0gZmluZF9maWxlX3N0YXRlKGZpbGVfaW5v
ZGUoZmlsZSksIGluZm8pOworCWlmICh1bmxpa2VseShyZXQgIT0gMCkpIHsKKwkJZHJvcF9leGNs
dXNpdmVfYWNjZXNzKGluZm8pOworCQlyZXR1cm4gcmV0OworCX0KKwlpZiAoaW5mby0+Y29udGFp
bmVyID09IFVGX0NPTlRBSU5FUl9UQUlMUykgeworCQlyZXQgPSB0YWlsMmV4dGVudChpbmZvKTsK
KwkJaWYgKHJldCkgeworCQkJd2FybmluZygiZWR3YXJkLTE1NzUiLAorCQkJCSJ0YWlsIGNvbnZl
cnNpb24gZmFpbGVkOiAlZCIsIHJldCk7CisJCQlkcm9wX2V4Y2x1c2l2ZV9hY2Nlc3MoaW5mbyk7
CisJCQlyZXR1cm4gcmV0OworCQl9CisJfQorCXJldCA9IGRvX3dyaXRlX2JlZ2luKGZpbGUsIHBh
Z2UsIHBvcywgbGVuKTsKKwlpZiAodW5saWtlbHkocmV0ICE9IDApKQorCQlkcm9wX2V4Y2x1c2l2
ZV9hY2Nlc3MoaW5mbyk7CisJLyogZWxzZSBleGNsdXNpdmUgYWNjZXNzIHdpbGwgYmUgZHJvcHBl
ZCBpbiAtPndyaXRlX2VuZCgpICovCisJcmV0dXJuIHJldDsKK30KKworLyogcGx1Z2luLT53cml0
ZV9lbmQoKSAqLworaW50IHdyaXRlX2VuZF91bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0
cnVjdCBwYWdlICpwYWdlLAorCQkJbG9mZl90IHBvcywgdW5zaWduZWQgY29waWVkLCB2b2lkICpm
c2RhdGEpCit7CisJaW50IHJldDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCXN0cnVjdCB1bml4
X2ZpbGVfaW5mbyAqaW5mbzsKKworCWlub2RlID0gZmlsZV9pbm9kZShmaWxlKTsKKwlpbmZvID0g
dW5peF9maWxlX2lub2RlX2RhdGEoaW5vZGUpOworCisJdW5sb2NrX3BhZ2UocGFnZSk7CisJcmV0
ID0gZmluZF9vcl9jcmVhdGVfZXh0ZW50KHBhZ2UpOworCWlmIChyZXQpIHsKKwkJU2V0UGFnZUVy
cm9yKHBhZ2UpOworCQlnb3RvIGV4aXQ7CisJfQorCWlmIChwb3MgKyBjb3BpZWQgPiBpbm9kZS0+
aV9zaXplKSB7CisJCUlOT0RFX1NFVF9GSUVMRChpbm9kZSwgaV9zaXplLCBwb3MgKyBjb3BpZWQp
OworCQlyZXQgPSByZWlzZXI0X3VwZGF0ZV9zZChpbm9kZSk7CisJCWlmICh1bmxpa2VseShyZXQg
IT0gMCkpCisJCQl3YXJuaW5nKCJlZHdhcmQtMTYwNCIsCisJCQkJIkNhbiBub3QgdXBkYXRlIHN0
YXQtZGF0YTogJWkuIEZTQ0s/IiwKKwkJCQlyZXQpOworCX0KKyBleGl0OgorCWRyb3BfZXhjbHVz
aXZlX2FjY2VzcyhpbmZvKTsKKwlyZXR1cm4gcmV0OworfQorCisvKgorICogTG9jYWwgdmFyaWFi
bGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTogIkxDIgor
ICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1bW46IDc5
CisgKiBzY3JvbGwtc3RlcDogMQorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvZmlsZV9jb252ZXJz
aW9uLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvZmlsZV9jb252ZXJzaW9u
LmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvZmlsZV9jb252
ZXJzaW9uLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlL2ZpbGVfY29udmVyc2lvbi5jCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDYzMjIyMjU1ICswMTAwCkBAIC0wLDAgKzEsNzYyIEBACisvKiBDb3B5cmlnaHQg
MjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwKKyAgIGxpY2Vuc2luZyBnb3Zlcm5lZCBi
eSByZWlzZXI0L1JFQURNRSAqLworCisvKioKKyAqIFRoaXMgZmlsZSBjb250YWlucyBkaXNwYXRj
aGluZyBob29rcywgYW5kIGNvbnZlcnNpb24gbWV0aG9kcywgd2hpY2gKKyAqIGltcGxlbWVudCB0
cmFuc2l0aW9ucyBpbiB0aGUgRklMRSBpbnRlcmZhY2UuCisgKgorICogRGlzcGF0Y2hpbmcgaG9v
ayBtYWtlcyBhIGRlY2lzaW9uIChhdCBkaXNwYXRjaGluZyBwb2ludCkgYWJvdXQgdGhlCisgKiBt
b3N0IHJlYXNvbmFibGUgcGx1Z2luLiBTdWNoIGRlY2lzaW9uIGlzIG1hZGUgaW4gYWNjb3JkYW5j
ZSB3aXRoIHNvbWUKKyAqIE8oMSktaGV1cmlzdGljLgorICoKKyAqIFdlIGltcGxlbWVudCBhIHRy
YW5zaXRpb24gQ1JZUFRDT01QUkVTUyAtPiBVTklYX0ZJTEUgZm9yIGZpbGVzIHdpdGgKKyAqIGlu
Y29tcHJlc3NpYmxlIGRhdGEuIEN1cnJlbnQgaGV1cmlzdGljIHRvIGVzdGltYXRlIGNvbXByZXNz
aWJpbGl0eSBpcworICogdmVyeSBzaW1wbGU6IGlmIGZpcnN0IGNvbXBsZXRlIGxvZ2ljYWwgY2x1
c3RlciAoNjRLIGJ5IGRlZmF1bHQpIG9mIGEKKyAqIGZpbGUgaXMgaW5jb21wcmVzc2libGUsIHRo
ZW4gd2UgbWFrZSBhIGRlY2lzaW9uLCB0aGF0IHRoZSB3aG9sZSBmaWxlCisgKiBpcyBpbmNvbXBy
ZXNzaWJsZS4KKyAqCisgKiBUbyBlbmFibGUgZGlzcGF0Y2hpbmcgd2UgaW5zdGFsbCBhIHNwZWNp
YWwgIm1hZ2ljIiBjb21wcmVzc2lvbiBtb2RlCisgKiBwbHVnaW4gQ09OVlhfQ09NUFJFU1NJT05f
TU9ERV9JRCBhdCBmaWxlIGNyZWF0aW9uIHRpbWUuCisgKgorICogTm90ZSwgdGhhdCB3ZSBkb24n
dCBwZXJmb3JtIGJhY2sgY29udmVyc2lvbiAoVU5JWF9GSUxFLT5DUllQVENPTVBSRVNTKQorICog
YmVjYXVzZSBvZiBjb21wYXRpYmlsaXR5IHJlYXNvbnMpLgorICoKKyAqIEluIGNvbnZlcnNpb24g
dGltZSB3ZSBwcm90ZWN0IENTLCB0aGUgY29udmVyc2lvbiBzZXQgKGZpbGUncyAobWV0YSlkYXRh
CisgKiBhbmQgcGx1Z2luIHRhYmxlIChwc2V0KSkgdmlhIHNwZWNpYWwgcGVyLWlub2RlIHJ3LXNl
bWFwaG9yZSAoY29udl9zZW0pLgorICogVGhlIG1ldGhvZHMgd2hpY2ggaW1wbGVtZW50IGNvbnZl
cnNpb24gYXJlIENTIHdyaXRlcnMuIFRoZSBtZXRob2RzIG9mIEZTCisgKiBpbnRlcmZhY2UgKGZp
bGVfb3BlcmF0aW9ucywgaW5vZGVfb3BlcmF0aW9ucywgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25z
KQorICogYXJlIENTIHJlYWRlcnMuCisgKi8KKworI2luY2x1ZGUgPGxpbnV4L3Vpby5oPgorI2lu
Y2x1ZGUgIi4uLy4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4vY2x1c3Rlci5oIgorI2luY2x1ZGUg
ImZpbGUuaCIKKworI2RlZmluZSBjb252ZXJzaW9uX2VuYWJsZWQoaW5vZGUpICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBcCisJIChpbm9kZV9jb21wcmVzc2lvbl9tb2RlX3Bs
dWdpbihpbm9kZSkgPT0JCSAgICAgICBcCisJICBjb21wcmVzc2lvbl9tb2RlX3BsdWdpbl9ieV9p
ZChDT05WWF9DT01QUkVTU0lPTl9NT0RFX0lEKSkKKworLyoqCisgKiBMb2NhdGVkIHNlY3Rpb25z
IChyZWFkZXJzIGFuZCB3cml0ZXJzIG9mIEBwc2V0KSBhcmUgbm90IHBlcm1hbmVudGx5CisgKiBj
cml0aWNhbDogY3J5cHRjb21wcmVzcyBmaWxlIGNhbiBiZSBjb252ZXJ0ZWQgb25seSBpZiB0aGUg
Y29udmVyc2lvbgorICogaXMgZW5hYmxlZCAoc2VlIHRoZSBtYWNyaW8gYWJvdmUpLiBBbHNvIHdl
IGRvbid0IHBlcmZvcm0gYmFjaworICogY29udmVyc2lvbi4gVGhlIGZvbGxvd2luZyBoZWxwZXIg
bWFjcm8gaXMgYSBzYW5pdHkgY2hlY2sgdG8gZGVjaWRlCisgKiBpZiB3ZSBuZWVkIHRoZSBwcm90
ZWN0aW9uIChsb2NrcyBhcmUgYWx3YXlzIGFkZGl0aW9uYWwgb3ZlcmhlYWRzKS4KKyAqLworI2Rl
ZmluZSBzaG91bGRfcHJvdGVjdChpbm9kZSkJCQkJCQlcCisJKGlub2RlX2ZpbGVfcGx1Z2luKGlu
b2RlKSA9PQkJCQkJXAorCSBmaWxlX3BsdWdpbl9ieV9pZChDUllQVENPTVBSRVNTX0ZJTEVfUExV
R0lOX0lEKSAmJgkJXAorCSBjb252ZXJzaW9uX2VuYWJsZWQoaW5vZGUpKQorLyoqCisgKiBUbyBh
dm9pZCBjb25mdXNpb24gd2l0aCByZWFkL3dyaXRlIGZpbGUgb3BlcmF0aW9ucywgd2UnbGwgc3Bl
YWsgYWJvdXQKKyAqICJwYXNzaXZlIiBwcm90ZWN0aW9uIGZvciBGQ1MgcmVhZGVycyBhbmQgImFj
dGl2ZSIgcHJvdGVjdGlvbiBmb3IgRkNTCisgKiB3cml0ZXJzLiBBbGwgbWV0aG9kcyB3aXRoIGFj
dGl2ZSBvciBwYXNzaXZlIHByb3RlY3Rpb24gaGF2ZSBzdWZmaXgKKyAqICJjYXJlZnVsIi4KKyAq
LworLyoqCisgKiBNYWNyb3MgZm9yIHBhc3NpdmUgcHJvdGVjdGlvbi4KKyAqCisgKiBDb25zdHJ1
Y3QgaW52YXJpYW50IG9wZXJhdGlvbiB0byBiZSBzdXBwbGllZCB0byBWRlMuCisgKiBUaGUgbWFj
cm8gYWNjZXB0cyB0aGUgZm9sbG93aW5nIGxleGVtZXM6CisgKiBAdHlwZSAtIHR5cGUgb2YgdGhl
IHZhbHVlIHJlcHJlc2VudGVkIGJ5IHRoZSBjb21wb3VuZCBzdGF0ZW1lbnQ7CisgKiBAbWV0aG9k
IC0gbmFtZSBvZiBhbiBvcGVyYXRpb24gdG8gYmUgc3VwcGxpZWQgdG8gVkZTIChyZWlzZXI0IGZp
bGUKKyAqIHBsdWdpbiBhbHNvIHNob3VsZCBjb250YWluIGEgbWV0aG9kIHdpdGggc3VjaCBuYW1l
KS4KKyAqLworI2RlZmluZSBQUk9UX1BBU1NJVkUodHlwZSwgbWV0aG9kLCBhcmdzKQkJCQlcCiso
ewkJCQkJCQkgICAgICAgICAgICAgICAgXAorCXR5cGUgX3Jlc3VsdDsJCQkJCQkJXAorCXN0cnVj
dCByd19zZW1hcGhvcmUgKiBndWFyZCA9CQkJCQlcCisJCSZyZWlzZXI0X2lub2RlX2RhdGEoaW5v
ZGUpLT5jb252X3NlbTsJCQlcCisJCQkJCQkJCQlcCisJaWYgKHNob3VsZF9wcm90ZWN0KGlub2Rl
KSkgewkJCQkJXAorCQlkb3duX3JlYWQoZ3VhcmQpOwkJCQkJXAorCQlpZiAoIXNob3VsZF9wcm90
ZWN0KGlub2RlKSkJCQkJXAorCQkJdXBfcmVhZChndWFyZCk7CQkJCQlcCisJfQkJCQkJCQkJXAor
CV9yZXN1bHQgPSBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSktPm1ldGhvZCBhcmdzOwkJXAorCWlm
IChzaG91bGRfcHJvdGVjdChpbm9kZSkpCQkJCQlcCisJCXVwX3JlYWQoZ3VhcmQpOwkJCQkJCVwK
KwlfcmVzdWx0OwkJCQkJCQlcCit9KQorCisjZGVmaW5lIFBST1RfUEFTU0lWRV9WT0lEKG1ldGhv
ZCwgYXJncykJCQkJCVwKKyh7CQkJCQkJCSAgICAgICAgICAgICAgICBcCisJc3RydWN0IHJ3X3Nl
bWFwaG9yZSAqIGd1YXJkID0JCQkJCVwKKwkJJnJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPmNv
bnZfc2VtOwkJCVwKKwkJCQkJCQkJCVwKKwlpZiAoc2hvdWxkX3Byb3RlY3QoaW5vZGUpKSB7CQkJ
CQlcCisJCWRvd25fcmVhZChndWFyZCk7CQkJCQlcCisJCWlmICghc2hvdWxkX3Byb3RlY3QoaW5v
ZGUpKQkJCQlcCisJCQl1cF9yZWFkKGd1YXJkKTsJCQkJCVwKKwl9CQkJCQkJCQlcCisJaW5vZGVf
ZmlsZV9wbHVnaW4oaW5vZGUpLT5tZXRob2QgYXJnczsJCQkJXAorCQkJCQkJCQkJXAorCWlmIChz
aG91bGRfcHJvdGVjdChpbm9kZSkpCQkJCQlcCisJCXVwX3JlYWQoZ3VhcmQpOwkJCQkJCVwKK30p
CisKKy8qIFBhc3MgbWFuYWdlbWVudCB0byB0aGUgdW5peC1maWxlIHBsdWdpbiB3aXRoICJub3Rh
aWwiIHBvbGljeSAqLworc3RhdGljIGludCBfX2NyeXB0Y29tcHJlc3MydW5peGZpbGUoc3RydWN0
IGZpbGUgKmZpbGUsIHN0cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWludCByZXN1bHQ7CisJcmVp
c2VyNF9pbm9kZSAqaW5mbzsKKwlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKiB1ZjsKKwlpbmZvID0g
cmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKTsKKworCXJlc3VsdCA9IGFzZXRfc2V0X3Vuc2FmZSgm
aW5mby0+cHNldCwKKwkJCSAgICBQU0VUX0ZJTEUsCisJCQkgICAgKHJlaXNlcjRfcGx1Z2luICop
CisJCQkgICAgZmlsZV9wbHVnaW5fYnlfaWQoVU5JWF9GSUxFX1BMVUdJTl9JRCkpOworCWlmIChy
ZXN1bHQpCisJCXJldHVybiByZXN1bHQ7CisJcmVzdWx0ID0gYXNldF9zZXRfdW5zYWZlKCZpbmZv
LT5wc2V0LAorCQkJICAgIFBTRVRfRk9STUFUVElORywKKwkJCSAgICAocmVpc2VyNF9wbHVnaW4g
KikKKwkJCSAgICBmb3JtYXR0aW5nX3BsdWdpbl9ieV9pZChORVZFUl9UQUlMU19GT1JNQVRUSU5H
X0lEKSk7CisJaWYgKHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKwkvKiBnZXQgcmlkIG9mIG5v
bi1zdGFuZGFyZCBwbHVnaW5zICovCisJaW5mby0+cGx1Z2luX21hc2sgJj0gfmNyeXB0Y29tcHJl
c3NfbWFzazsKKwkvKiBnZXQgcmlkIG9mIHBsdWdpbiBzdGF0LWRhdGEgZXh0ZW5zaW9uICovCisJ
aW5mby0+ZXh0bWFzayAmPSB+KDEgPDwgUExVR0lOX1NUQVQpOworCisJcmVpc2VyNF9pbm9kZV9j
bHJfZmxhZyhpbm9kZSwgUkVJU0VSNF9TRExFTl9LTk9XTik7CisKKwkvKiBGSVhNRSB1c2UgaW5p
dF9pbm9kZV9kYXRhX3VuaXhfZmlsZSgpIGluc3RlYWQsCisJICAgYnV0IGF2aW9kIGluaXRfaW5v
ZGVfb3JkZXJpbmcoKSAqLworCS8qIEluaXQgdW5peC1maWxlIHNwZWNpZmljIHBhcnQgb2YgaW5v
ZGUgKi8KKwl1ZiA9IHVuaXhfZmlsZV9pbm9kZV9kYXRhKGlub2RlKTsKKwl1Zi0+Y29udGFpbmVy
ID0gVUZfQ09OVEFJTkVSX1VOS05PV047CisJaW5pdF9yd3NlbSgmdWYtPmxhdGNoKTsKKwl1Zi0+
dHBsdWcgPSBpbm9kZV9mb3JtYXR0aW5nX3BsdWdpbihpbm9kZSk7CisJdWYtPmV4Y2x1c2l2ZV91
c2UgPSAwOworI2lmIFJFSVNFUjRfREVCVUcKKwl1Zi0+ZWFfb3duZXIgPSBOVUxMOworCWF0b21p
Y19zZXQoJnVmLT5ucl9uZWFzLCAwKTsKKyNlbmRpZgorCS8qKgorCSAqIHdlIHdhcyBjYXJlZnVs
bCBmb3IgZmlsZV9vcHMsIGlub2RlX29wcyBhbmQgYXNfb3BzCisJICogdG8gYmUgaW52YXJpYW50
IGZvciBwbHVnaW4gY29udmVyc2lvbiwgc28gdGhlcmUgaXMKKwkgKiBubyBuZWVkIHRvIHVwZGF0
ZSBvbmVzIGFscmVhZHkgaW5zdGFsbGVkIGluIHRoZQorCSAqIHZmcydzIHJlc2lkZW5jZS4KKwkg
Ki8KKwlyZXR1cm4gMDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyBpbnQgZGlzYWJs
ZWRfY29udmVyc2lvbl9pbm9kZV9vayhzdHJ1Y3QgaW5vZGUgKiBpbm9kZSkKK3sKKwlfX3U2NCBl
eHRtYXNrID0gcmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKS0+ZXh0bWFzazsKKwlfX3UxNiBwbHVn
aW5fbWFzayA9IHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPnBsdWdpbl9tYXNrOworCisJcmV0
dXJuICgoZXh0bWFzayAmICgxIDw8IExJR0hUX1dFSUdIVF9TVEFUKSkgJiYKKwkJKGV4dG1hc2sg
JiAoMSA8PCBVTklYX1NUQVQpKSAmJgorCQkoZXh0bWFzayAmICgxIDw8IExBUkdFX1RJTUVTX1NU
QVQpKSAmJgorCQkoZXh0bWFzayAmICgxIDw8IFBMVUdJTl9TVEFUKSkgJiYKKwkJKHBsdWdpbl9t
YXNrICYgKDEgPDwgUFNFVF9DT01QUkVTU0lPTl9NT0RFKSkpOworfQorI2VuZGlmCisKKy8qKgor
ICogRGlzYWJsZSBmdXR1cmUgYXR0ZW1wdHMgdG8gc2NoZWR1bGUvY29udmVydCBmaWxlIHBsdWdp
bi4KKyAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGJ5IHBsdWdpbiBzY2hlZHVsZSBob29rcy4K
KyAqCisgKiBUbyBkaXNhYmxlIGNvbnZlcnNpb24gd2UgYXNzaWduIGFueSBjb21wcmVzc2lvbiBt
b2RlIHBsdWdpbiBpZAorICogZGlmZmVyZW50IGZyb20gQ09OVlhfQ09NUFJFU1NJT05fTU9ERV9J
RC4KKyAqLworc3RhdGljIGludCBkaXNhYmxlX2NvbnZlcnNpb24oc3RydWN0IGlub2RlICogaW5v
ZGUpCit7CisJaW50IHJlc3VsdDsKKwlyZXN1bHQgPQorCSAgICAgICBmb3JjZV9wbHVnaW5fcHNl
dChpbm9kZSwKKwkJCQkgUFNFVF9DT01QUkVTU0lPTl9NT0RFLAorCQkJCSAocmVpc2VyNF9wbHVn
aW4gKiljb21wcmVzc2lvbl9tb2RlX3BsdWdpbl9ieV9pZAorCQkJCSAoTEFUVERfQ09NUFJFU1NJ
T05fTU9ERV9JRCkpOworCWFzc2VydCgiZWR3YXJkLTE1MDAiLAorCSAgICAgICBlcmdvKCFyZXN1
bHQsIGRpc2FibGVkX2NvbnZlcnNpb25faW5vZGVfb2soaW5vZGUpKSk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyoqCisgKiBDaGVjayBpZiB3ZSByZWFsbHkgaGF2ZSBhY2hpZXZlZCBwbHVnaW4g
c2NoZWR1bGluZyBwb2ludAorICovCitzdGF0aWMgaW50IGNoZWNrX2Rpc3BhdGNoX3BvaW50KHN0
cnVjdCBpbm9kZSAqIGlub2RlLAorCQkJCWxvZmZfdCBwb3MgLyogcG9zaXRpb24gaW4gdGhlCisJ
CQkJCSAgICAgIGZpbGUgdG8gd3JpdGUgZnJvbSAqLywKKwkJCQlzdHJ1Y3QgY2x1c3Rlcl9oYW5k
bGUgKiBjbHVzdCwKKwkJCQlzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4dCAqIGNvbnQpCit7CisJYXNz
ZXJ0KCJlZHdhcmQtMTUwNSIsIGNvbnZlcnNpb25fZW5hYmxlZChpbm9kZSkpOworCS8qCisJICog
aWYgZmlsZSBzaXplIGlzIG1vcmUgdGhlbiBjbHVzdGVyIHNpemUsIHRoZW4gY29tcHJlc3NpYmxl
CisJICogc3RhdHVzIG11c3QgYmUgZmlndXJlZCBvdXQgKGkuZS4gY29tcHJlc3Npb24gd2FzIGRp
c2FibGVkLAorCSAqIG9yIGZpbGUgcGx1Z2luIHdhcyBjb252ZXJ0ZWQgdG8gdW5peF9maWxlKQor
CSAqLworCWFzc2VydCgiZWR3YXJkLTE1MDYiLCBpbm9kZS0+aV9zaXplIDw9IGlub2RlX2NsdXN0
ZXJfc2l6ZShpbm9kZSkpOworCisJaWYgKHBvcyA+IGlub2RlLT5pX3NpemUpCisJCS8qIGZpcnN0
IGxvZ2ljYWwgY2x1c3RlciB3aWxsIGNvbnRhaW4gYSAocGFydGlhbCkgaG9sZSAqLworCQlyZXR1
cm4gZGlzYWJsZV9jb252ZXJzaW9uKGlub2RlKTsKKwlpZiAocG9zIDwgaW5vZGVfY2x1c3Rlcl9z
aXplKGlub2RlKSkKKwkJLyogd3JpdGluZyB0byB0aGUgZmlyc3QgbG9naWNhbCBjbHVzdGVyICov
CisJCXJldHVybiAwOworCS8qCisJICogaGVyZSB3ZSBoYXZlOgorCSAqIGNsdXN0ZXJfc2l6ZSA8
PSBwb3MgPD0gaV9zaXplIDw9IGNsdXN0ZXJfc2l6ZSwKKwkgKiBhbmQsIGhlbmNlLCAgcG9zID09
IGlfc2l6ZSA9PSBjbHVzdGVyX3NpemUKKwkgKi8KKwlhc3NlcnQoImVkd2FyZC0xNDk4IiwKKwkg
ICAgICAgcG9zID09IGlub2RlLT5pX3NpemUgJiYKKwkgICAgICAgcG9zID09IGlub2RlX2NsdXN0
ZXJfc2l6ZShpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTE1MzkiLCBjb250ICE9IE5VTEwpOwor
CWFzc2VydCgiZWR3YXJkLTE1NDAiLCBjb250LT5zdGF0ZSA9PSBESVNQQVRDSF9JTlZBTF9TVEFU
RSk7CisKKwljb250LT5zdGF0ZSA9IERJU1BBVENIX1BPSU5UOworCXJldHVybiAwOworfQorCitz
dGF0aWMgdm9pZCBzdGFydF9jaGVja19jb21wcmVzc2liaWxpdHkoc3RydWN0IGlub2RlICogaW5v
ZGUsCisJCQkJCXN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJCQloaW50X3QgKiBo
aW50KQoreworCWFzc2VydCgiZWR3YXJkLTE1MDciLCBjbHVzdC0+aW5kZXggPT0gMSk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTUwOCIsICF0Zm1fY2x1c3Rlcl9pc191cHRvZGF0ZSgmY2x1c3QtPnRjKSk7
CisJYXNzZXJ0KCJlZHdhcmQtMTUwOSIsIGNsdXN0ZXJfZ2V0X3RmbV9hY3QoJmNsdXN0LT50Yykg
PT0gVEZNQV9SRUFEKTsKKworCWhpbnRfaW5pdF96ZXJvKGhpbnQpOworCWNsdXN0LT5oaW50ID0g
aGludDsKKwljbHVzdC0+aW5kZXggLS07CisJY2x1c3QtPm5yX3BhZ2VzID0gc2l6ZV9pbl9wYWdl
cyhsYnl0ZXMoY2x1c3QtPmluZGV4LCBpbm9kZSkpOworCisJLyogZmlyc3QgbG9naWNhbCBjbHVz
dGVyIChvZiBpbmRleCAjMCkgbXVzdCBiZSBjb21wbGV0ZSAqLworCWFzc2VydCgiZWR3YXJkLTE1
MTAiLCBsYnl0ZXMoY2x1c3QtPmluZGV4LCBpbm9kZSkgPT0KKwkgICAgICAgaW5vZGVfY2x1c3Rl
cl9zaXplKGlub2RlKSk7Cit9CisKK3N0YXRpYyB2b2lkIGZpbmlzaF9jaGVja19jb21wcmVzc2li
aWxpdHkoc3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJCSBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUg
KiBjbHVzdCwKKwkJCQkJIGhpbnRfdCAqIGhpbnQpCit7CisJcmVpc2VyNF91bnNldF9oaW50KGNs
dXN0LT5oaW50KTsKKwljbHVzdC0+aGludCA9IGhpbnQ7CisJY2x1c3QtPmluZGV4ICsrOworfQor
CisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIGludCBwcmVwcGVkX2RjbHVzdF9vayhoaW50X3Qg
KiBoaW50KQoreworCXJlaXNlcjRfa2V5IGtleTsKKwljb29yZF90ICogY29vcmQgPSAmaGludC0+
ZXh0X2Nvb3JkLmNvb3JkOworCisJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZrZXkpOworCXJl
dHVybiAoaXRlbV9pZF9ieV9jb29yZChjb29yZCkgPT0gQ1RBSUxfSUQgJiYKKwkJIWNvb3JkX2lz
X3VucHJlcHBlZF9jdGFpbChjb29yZCkgJiYKKwkJKGdldF9rZXlfb2Zmc2V0KCZrZXkpICsgbnJf
dW5pdHNfY3RhaWwoY29vcmQpID09CisJCSBkY2x1c3RfZ2V0X2V4dGVuc2lvbl9kc2l6ZShoaW50
KSkpOworfQorI2VuZGlmCisKKyNkZWZpbmUgZmlmdHlfcGVyc2VudChzaXplKSAoc2l6ZSA+PiAx
KQorLyogZXZhbHVhdGlvbiBvZiBkYXRhIGNvbXByZXNzaWJpbGl0eSAqLworI2RlZmluZSBkYXRh
X2lzX2NvbXByZXNzaWJsZShvc2l6ZSwgaXNpemUpCQlcCisJKG9zaXplIDwgZmlmdHlfcGVyc2Vu
dChpc2l6ZSkpCisKKy8qKgorICogQSBzaW1wbGUgTygxKS1oZXVyaXN0aWMgZm9yIGNvbXByZXNz
aWJpbGl0eS4KKyAqIFRoaXMgaXMgY2FsbGVkIG5vdCBtb3JlIHRoZW4gb25lIHRpbWUgcGVyIGZp
bGUncyBsaWZlLgorICogUmVhZCBmaXJzdCBsb2dpY2FsIGNsdXN0ZXIgKG9mIGluZGV4ICMwKSBh
bmQgZXN0aW1hdGUgaXRzIGNvbXByZXNzaWJpbGl0eS4KKyAqIFNhdmUgZXN0aW1hdGlvbiByZXN1
bHQgaW4gQGNvbnQuCisgKi8KK3N0YXRpYyBpbnQgcmVhZF9jaGVja19jb21wcmVzc2liaWxpdHko
c3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJICAgICAgc3RydWN0IGNsdXN0ZXJfaGFuZGxlICog
Y2x1c3QsCisJCQkJICAgICAgc3RydWN0IGRpc3BhdGNoX2NvbnRleHQgKiBjb250KQoreworCWlu
dCBpOworCWludCByZXN1bHQ7CisJc2l6ZV90IGRzdF9sZW47CisJaGludF90IHRtcF9oaW50Owor
CWhpbnRfdCAqIGN1cl9oaW50ID0gY2x1c3QtPmhpbnQ7CisJYXNzZXJ0KCJlZHdhcmQtMTU0MSIs
IGNvbnQtPnN0YXRlID09IERJU1BBVENIX1BPSU5UKTsKKworCXN0YXJ0X2NoZWNrX2NvbXByZXNz
aWJpbGl0eShpbm9kZSwgY2x1c3QsICZ0bXBfaGludCk7CisKKwlyZXNldF9jbHVzdGVyX3Bnc2V0
KGNsdXN0LCBjbHVzdGVyX25ycGFnZXMoaW5vZGUpKTsKKwlyZXN1bHQgPSBncmFiX3BhZ2VfY2x1
c3Rlcihpbm9kZSwgY2x1c3QsIFJFQURfT1ApOworCWlmIChyZXN1bHQpCisJCXJldHVybiByZXN1
bHQ7CisJLyogUmVhZCBwYWdlIGNsdXN0ZXIgaGVyZSAqLworCWZvciAoaSA9IDA7IGkgPCBjbHVz
dC0+bnJfcGFnZXM7IGkrKykgeworCQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IGNsdXN0LT5wYWdlc1tp
XTsKKwkJbG9ja19wYWdlKHBhZ2UpOworCQlyZXN1bHQgPSBkb19yZWFkcGFnZV9jdGFpbChpbm9k
ZSwgY2x1c3QsIHBhZ2UsCisJCQkJCSAgIFpOT0RFX1JFQURfTE9DSyk7CisJCXVubG9ja19wYWdl
KHBhZ2UpOworCQlpZiAocmVzdWx0KQorCQkJZ290byBlcnJvcjsKKwl9CisJdGZtX2NsdXN0ZXJf
Y2xyX3VwdG9kYXRlKCZjbHVzdC0+dGMpOworCisJY2x1c3Rlcl9zZXRfdGZtX2FjdCgmY2x1c3Qt
PnRjLCBURk1BX1dSSVRFKTsKKworCWlmIChoaW50X2lzX3ZhbGlkKCZ0bXBfaGludCkgJiYgIWhp
bnRfaXNfdW5wcmVwcGVkX2RjbHVzdCgmdG1wX2hpbnQpKSB7CisJCS8qIGxlbmdodCBvZiBjb21w
cmVzc2VkIGRhdGEgaXMga25vd24sIG5vIG5lZWQgdG8gY29tcHJlc3MgKi8KKwkJYXNzZXJ0KCJl
ZHdhcmQtMTUxMSIsCisJCSAgICAgICB6bm9kZV9pc19hbnlfbG9ja2VkKHRtcF9oaW50LmxoLm5v
ZGUpKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTUxMiIsCisJCSAgICAgICBXSVRIX0RBVEEodG1wX2hp
bnQuZXh0X2Nvb3JkLmNvb3JkLm5vZGUsCisJCQkJIHByZXBwZWRfZGNsdXN0X29rKCZ0bXBfaGlu
dCkpKTsKKwkJZHN0X2xlbiA9IGRjbHVzdF9nZXRfZXh0ZW5zaW9uX2RzaXplKCZ0bXBfaGludCk7
CisJfQorCWVsc2UgeworCQlzdHJ1Y3QgdGZtX2NsdXN0ZXIgKiB0YyA9ICZjbHVzdC0+dGM7CisJ
CWNvbXByZXNzaW9uX3BsdWdpbiAqIGNwbHVnID0gaW5vZGVfY29tcHJlc3Npb25fcGx1Z2luKGlu
b2RlKTsKKwkJcmVzdWx0ID0gZ3JhYl90Zm1fc3RyZWFtKGlub2RlLCB0YywgSU5QVVRfU1RSRUFN
KTsKKwkJaWYgKHJlc3VsdCkKKwkJCWdvdG8gZXJyb3I7CisJCWZvciAoaSA9IDA7IGkgPCBjbHVz
dC0+bnJfcGFnZXM7IGkrKykgeworCQkJY2hhciAqZGF0YTsKKwkJCWxvY2tfcGFnZShjbHVzdC0+
cGFnZXNbaV0pOworCQkJQlVHX09OKCFQYWdlVXB0b2RhdGUoY2x1c3QtPnBhZ2VzW2ldKSk7CisJ
CQlkYXRhID0ga21hcChjbHVzdC0+cGFnZXNbaV0pOworCQkJbWVtY3B5KHRmbV9zdHJlYW1fZGF0
YSh0YywgSU5QVVRfU1RSRUFNKSArIHBnX3RvX29mZihpKSwKKwkJCSAgICAgICBkYXRhLCBQQUdF
X1NJWkUpOworCQkJa3VubWFwKGNsdXN0LT5wYWdlc1tpXSk7CisJCQl1bmxvY2tfcGFnZShjbHVz
dC0+cGFnZXNbaV0pOworCQl9CisJCXJlc3VsdCA9IGdyYWJfdGZtX3N0cmVhbShpbm9kZSwgdGMs
IE9VVFBVVF9TVFJFQU0pOworCQlpZiAocmVzdWx0KQorCQkJZ290byBlcnJvcjsKKwkJcmVzdWx0
ID0gZ3JhYl9jb2EodGMsIGNwbHVnKTsKKwkJaWYgKHJlc3VsdCkKKwkJCWdvdG8gZXJyb3I7CisJ
CXRjLT5sZW4gPSB0Yy0+bHNpemUgPSBsYnl0ZXMoY2x1c3QtPmluZGV4LCBpbm9kZSk7CisJCWFz
c2VydCgiZWR3YXJkLTE1MTMiLCB0Yy0+bGVuID09IGlub2RlX2NsdXN0ZXJfc2l6ZShpbm9kZSkp
OworCQlkc3RfbGVuID0gdGZtX3N0cmVhbV9zaXplKHRjLCBPVVRQVVRfU1RSRUFNKTsKKwkJY3Bs
dWctPmNvbXByZXNzKGdldF9jb2EodGMsIGNwbHVnLT5oLmlkLCB0Yy0+YWN0KSwKKwkJCQl0Zm1f
aW5wdXRfZGF0YShjbHVzdCksIHRjLT5sZW4sCisJCQkJdGZtX291dHB1dF9kYXRhKGNsdXN0KSwg
JmRzdF9sZW4pOworCQlhc3NlcnQoImVkd2FyZC0xNTE0IiwKKwkJICAgICAgIGRzdF9sZW4gPD0g
dGZtX3N0cmVhbV9zaXplKHRjLCBPVVRQVVRfU1RSRUFNKSk7CisJfQorCWZpbmlzaF9jaGVja19j
b21wcmVzc2liaWxpdHkoaW5vZGUsIGNsdXN0LCBjdXJfaGludCk7CisJY29udC0+c3RhdGUgPQor
CQkoZGF0YV9pc19jb21wcmVzc2libGUoZHN0X2xlbiwgaW5vZGVfY2x1c3Rlcl9zaXplKGlub2Rl
KSkgPworCQkgRElTUEFUQ0hfUkVNQUlOU19PTEQgOgorCQkgRElTUEFUQ0hfQVNTSUdORURfTkVX
KTsKKwlyZXR1cm4gMDsKKyBlcnJvcjoKKwlwdXRfcGFnZV9jbHVzdGVyKGNsdXN0LCBpbm9kZSwg
UkVBRF9PUCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogQ3V0IGRpc2sgY2x1c3RlciBvZiBp
bmRleCBAaWR4ICovCitzdGF0aWMgaW50IGN1dF9kaXNrX2NsdXN0ZXIoc3RydWN0IGlub2RlICog
aW5vZGUsIGNsb2ZmX3QgaWR4KQoreworCXJlaXNlcjRfa2V5IGZyb20sIHRvOworCWFzc2VydCgi
ZWR3YXJkLTE1MTUiLCBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSkgPT0KKwkgICAgICAgZmlsZV9w
bHVnaW5fYnlfaWQoQ1JZUFRDT01QUkVTU19GSUxFX1BMVUdJTl9JRCkpOworCWtleV9ieV9pbm9k
ZV9jcnlwdGNvbXByZXNzKGlub2RlLCBjbHVzdF90b19vZmYoaWR4LCBpbm9kZSksICZmcm9tKTsK
Kwl0byA9IGZyb207CisJc2V0X2tleV9vZmZzZXQoJnRvLAorCQkgICAgICAgZ2V0X2tleV9vZmZz
ZXQoJmZyb20pICsgaW5vZGVfY2x1c3Rlcl9zaXplKGlub2RlKSAtIDEpOworCXJldHVybiByZWlz
ZXI0X2N1dF90cmVlKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9kZSksCisJCQkJJmZyb20sICZ0
bywgaW5vZGUsIDApOworfQorCitzdGF0aWMgaW50IHJlc2VydmVfY3J5cHRjb21wcmVzczJ1bml4
ZmlsZShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJlaXNlcjRfYmxvY2tfbnIgdW5mb3JtYXR0
ZWRfbm9kZXM7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJdHJlZSA9IHJlaXNlcjRfdHJlZV9i
eV9pbm9kZShpbm9kZSk7CisKKwkvKiBudW1iZXIgb2YgdW5mb3JtYXR0ZWQgbm9kZXMgd2hpY2gg
d2lsbCBiZSBjcmVhdGVkICovCisJdW5mb3JtYXR0ZWRfbm9kZXMgPSBjbHVzdGVyX25ycGFnZXMo
aW5vZGUpOyAvKiBOICovCisKKwkvKgorCSAqIHNwYWNlIHJlcXVpcmVkIGZvciBvbmUgaXRlcmF0
aW9uIG9mIGV4dGVudC0+dGFpbCBjb252ZXJzaW9uOgorCSAqCisJICogICAgIDEuIGtpbGwgY3Rh
aWwgaXRlbXMKKwkgKgorCSAqICAgICAyLiBpbnNlcnQgTiB1bmZvcm1hdHRlZCBub2RlcworCSAq
CisJICogICAgIDMuIGluc2VydCBOICh3b3JzdC1jYXNlIHNpbmdsZS1ibG9jaworCSAqICAgICBl
eHRlbnRzKSBleHRlbnQgdW5pdHMuCisJICoKKwkgKiAgICAgNC4gZHJpbGxpbmcgdG8gdGhlIGxl
YWYgbGV2ZWwgYnkgY29vcmRfYnlfa2V5KCkKKwkgKgorCSAqICAgICA1LiBwb3NzaWJsZSB1cGRh
dGUgb2Ygc3RhdC1kYXRhCisJICoKKwkgKi8KKwlncmFiX3NwYWNlX2VuYWJsZSgpOworCXJldHVy
biByZWlzZXI0X2dyYWJfc3BhY2UKKwkJKDIgKiB0cmVlLT5oZWlnaHQgKworCQkgdW5mb3JtYXR0
ZWRfbm9kZXMgICsKKwkJIHVuZm9ybWF0dGVkX25vZGVzICogZXN0aW1hdGVfb25lX2luc2VydF9p
bnRvX2l0ZW0odHJlZSkgKworCQkgMSArIGVzdGltYXRlX29uZV9pbnNlcnRfaXRlbSh0cmVlKSAr
CisJCSBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSktPmVzdGltYXRlLnVwZGF0ZShpbm9kZSksCisJ
CSBCQV9DQU5fQ09NTUlUKTsKK30KKworLyoqCisgKiBDb252ZXJ0IGNyeXB0Y29tcHJlc3MgZmls
ZSBwbHVnaW4gdG8gdW5peF9maWxlIHBsdWdpbi4KKyAqLworc3RhdGljIGludCBjcnlwdGNvbXBy
ZXNzMnVuaXhmaWxlKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJ
CSAgc3RydWN0IGRpc3BhdGNoX2NvbnRleHQgKmNvbnQpCit7CisJaW50IGk7CisJaW50IHJlc3Vs
dCA9IDA7CisJc3RydWN0IGNyeXB0Y29tcHJlc3NfaW5mbyAqY3JfaW5mbzsKKwlzdHJ1Y3QgdW5p
eF9maWxlX2luZm8gKnVmX2luZm87CisJYXNzZXJ0KCJlZHdhcmQtMTUxNiIsIGNvbnQtPnBhZ2Vz
WzBdLT5pbmRleCA9PSAwKTsKKworCS8qIHJlbGVhc2UgYWxsIGNyeXB0Y29tcHJlc3Mtc3BlY2lm
aWMgcmVzb3VyY2VzICovCisJY3JfaW5mbyA9IGNyeXB0Y29tcHJlc3NfaW5vZGVfZGF0YShpbm9k
ZSk7CisJcmVzdWx0ID0gcmVzZXJ2ZV9jcnlwdGNvbXByZXNzMnVuaXhmaWxlKGlub2RlKTsKKwlp
ZiAocmVzdWx0KQorCQlnb3RvIG91dDsKKwkvKiB0ZWxsIGtpbGxfaG9vayB0byBub3QgdHJ1bmNh
dGUgcGFnZXMgKi8KKwlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlTRVI0X0ZJTEVf
Q09OVl9JTl9QUk9HUkVTUyk7CisJcmVzdWx0ID0gY3V0X2Rpc2tfY2x1c3Rlcihpbm9kZSwgMCk7
CisJaWYgKHJlc3VsdCkKKwkJZ290byBvdXQ7CisJLyogY2FwdHVyZWQgam5vZGUgb2YgY2x1c3Rl
ciBhbmQgYXNzb3RpYXRlZCByZXNvdXJjZXMgKHBhZ2VzLAorCSAgIHJlc2VydmVkIGRpc2sgc3Bh
Y2UpIHdlcmUgcmVsZWFzZWQgYnkgLT5raWxsX2hvb2soKSBtZXRob2QKKwkgICBvZiB0aGUgaXRl
bSBwbHVnaW4gKi8KKworCXJlc3VsdCA9IF9fY3J5cHRjb21wcmVzczJ1bml4ZmlsZShmaWxlLCBp
bm9kZSk7CisJaWYgKHJlc3VsdCkKKwkJZ290byBvdXQ7CisJLyogQXQgdGhpcyBwb2ludCBmaWxl
IGlzIG1hbmFnZWQgYnkgdW5peCBmaWxlIHBsdWdpbiAqLworCisJdWZfaW5mbyA9IHVuaXhfZmls
ZV9pbm9kZV9kYXRhKGlub2RlKTsKKworCWFzc2VydCgiZWR3YXJkLTE1MTgiLAorCSAgICAgICBl
cmdvKGpwcml2YXRlKGNvbnQtPnBhZ2VzWzBdKSwKKwkJICAgICFqbm9kZV9pc19jbHVzdGVyX3Bh
Z2UoanByaXZhdGUoY29udC0+cGFnZXNbMF0pKSkpOworCWZvcihpID0gMDsgaSA8IGNvbnQtPm5y
X3BhZ2VzOyBpKyspIHsKKwkJYXNzZXJ0KCJlZHdhcmQtMTUxOSIsIGNvbnQtPnBhZ2VzW2ldKTsK
KwkJYXNzZXJ0KCJlZHdhcmQtMTUyMCIsIFBhZ2VVcHRvZGF0ZShjb250LT5wYWdlc1tpXSkpOwor
CisJCXJlc3VsdCA9IGZpbmRfb3JfY3JlYXRlX2V4dGVudChjb250LT5wYWdlc1tpXSk7CisJCWlm
IChyZXN1bHQpCisJCQlicmVhazsKKwl9CisJaWYgKHVubGlrZWx5KHJlc3VsdCkpCisJCWdvdG8g
b3V0OworCXVmX2luZm8tPmNvbnRhaW5lciA9IFVGX0NPTlRBSU5FUl9FWFRFTlRTOworCXJlc3Vs
dCA9IHJlaXNlcjRfdXBkYXRlX3NkKGlub2RlKTsKKyBvdXQ6CisJYWxsX2dyYWJiZWQyZnJlZSgp
OworCXJldHVybiByZXN1bHQ7Cit9CisKKyNkZWZpbmUgY29udmVydF9maWxlX3BsdWdpbiBjcnlw
dGNvbXByZXNzMnVuaXhmaWxlCisKKy8qKgorICogVGhpcyBpcyBjYWxsZWQgYnkgLT53cml0ZSgp
IG1ldGhvZCBvZiBhIGNyeXB0Y29tcHJlc3MgZmlsZSBwbHVnaW4uCisgKiBNYWtlIGEgZGVjaXNp
b24gYWJvdXQgdGhlIG1vc3QgcmVhc29uYWJsZSBmaWxlIHBsdWdpbiBpZCB0byBtYW5hZ2UKKyAq
IHRoZSBmaWxlLgorICovCitpbnQgd3JpdGVfZGlzcGF0Y2hfaG9vayhzdHJ1Y3QgZmlsZSAqZmls
ZSwgc3RydWN0IGlub2RlICppbm9kZSwKKwkJCWxvZmZfdCBwb3MsIHN0cnVjdCBjbHVzdGVyX2hh
bmRsZSAqY2x1c3QsCisJCQlzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4dCAqY29udCkKK3sKKwlpbnQg
cmVzdWx0OworCWlmICghY29udmVyc2lvbl9lbmFibGVkKGlub2RlKSkKKwkJcmV0dXJuIDA7CisJ
cmVzdWx0ID0gY2hlY2tfZGlzcGF0Y2hfcG9pbnQoaW5vZGUsIHBvcywgY2x1c3QsIGNvbnQpOwor
CWlmIChyZXN1bHQgfHwgY29udC0+c3RhdGUgIT0gRElTUEFUQ0hfUE9JTlQpCisJCXJldHVybiBy
ZXN1bHQ7CisJcmVzdWx0ID0gcmVhZF9jaGVja19jb21wcmVzc2liaWxpdHkoaW5vZGUsIGNsdXN0
LCBjb250KTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCWlmIChjb250LT5zdGF0
ZSA9PSBESVNQQVRDSF9SRU1BSU5TX09MRCkgeworCQlwdXRfcGFnZV9jbHVzdGVyKGNsdXN0LCBp
bm9kZSwgUkVBRF9PUCk7CisJCXJldHVybiBkaXNhYmxlX2NvbnZlcnNpb24oaW5vZGUpOworCX0K
Kwlhc3NlcnQoImVkd2FyZC0xNTQzIiwgY29udC0+c3RhdGUgPT0gRElTUEFUQ0hfQVNTSUdORURf
TkVXKTsKKwkvKgorCSAqIHBhZ2UgY2x1c3RlciBpcyBncmFiYmVkIGFuZCB1cHRvZGF0ZS4gSXQg
d2lsbCBiZQorCSAqIHJlbGVhc2VkIHdpdGggYSBwZ3NldCBhZnRlciBwbHVnaW4gY29udmVyc2lv
biBpcworCSAqIGZpbmlzaGVkLCBzZWUgcHV0X2Rpc3BhdGNoX2NvbnRleHQoKS4KKwkgKi8KKwly
ZWlzZXI0X3Vuc2V0X2hpbnQoY2x1c3QtPmhpbnQpOworCW1vdmVfY2x1c3Rlcl9wZ3NldChjbHVz
dCwgJmNvbnQtPnBhZ2VzLCAmY29udC0+bnJfcGFnZXMpOworCXJldHVybiAwOworfQorCisvKioK
KyAqIFRoaXMgaXMgY2FsbGVkIGJ5IC0+c2V0YXR0cigpIG1ldGhvZCBvZiBjcnlwdGNvbXByZXNz
IGZpbGUgcGx1Z2luLgorICovCitpbnQgc2V0YXR0cl9kaXNwYXRjaF9ob29rKHN0cnVjdCBpbm9k
ZSAqIGlub2RlKQoreworCWlmIChjb252ZXJzaW9uX2VuYWJsZWQoaW5vZGUpKQorCQlyZXR1cm4g
ZGlzYWJsZV9jb252ZXJzaW9uKGlub2RlKTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIGluaXRfZGlzcGF0Y2hfY29udGV4dChzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4dCAqIGNv
bnQpCit7CisJbWVtc2V0KGNvbnQsIDAsIHNpemVvZigqY29udCkpOworfQorCitzdGF0aWMgaW5s
aW5lIHZvaWQgZG9uZV9kaXNwYXRjaF9jb250ZXh0KHN0cnVjdCBkaXNwYXRjaF9jb250ZXh0ICog
Y29udCwKKwkJCQkJIHN0cnVjdCBpbm9kZSAqIGlub2RlKQoreworCWlmIChjb250LT5wYWdlcykg
eworCQlfX3B1dF9wYWdlX2NsdXN0ZXIoMCwgY29udC0+bnJfcGFnZXMsIGNvbnQtPnBhZ2VzLCBp
bm9kZSk7CisJCWtmcmVlKGNvbnQtPnBhZ2VzKTsKKwl9Cit9CisKK3N0YXRpYyBpbmxpbmUgc3Np
emVfdCByZWlzZXI0X3dyaXRlX2NoZWNrcyhzdHJ1Y3QgZmlsZSAqZmlsZSwKKwkJCQkJICAgY29u
c3QgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJCQkJICAgc2l6ZV90IGNvdW50LCBsb2ZmX3QgKm9mZikK
K3sKKwlzc2l6ZV90IHJlc3VsdDsKKwlzdHJ1Y3QgaW92ZWMgaW92ID0geyAuaW92X2Jhc2UgPSAo
dm9pZCBfX3VzZXIgKilidWYsIC5pb3ZfbGVuID0gY291bnQgfTsKKwlzdHJ1Y3Qga2lvY2IgaW9j
YjsKKwlzdHJ1Y3QgaW92X2l0ZXIgaXRlcjsKKworCWluaXRfc3luY19raW9jYigmaW9jYiwgZmls
ZSk7CisJaW9jYi5raV9wb3MgPSAqb2ZmOworCWlvdl9pdGVyX2luaXQoJml0ZXIsIFdSSVRFLCAm
aW92LCAxLCBjb3VudCk7CisKKwlyZXN1bHQgPSBnZW5lcmljX3dyaXRlX2NoZWNrcygmaW9jYiwg
Jml0ZXIpOworCSpvZmYgPSBpb2NiLmtpX3BvczsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgor
ICogLT53cml0ZSgpIFZGUyBmaWxlIG9wZXJhdGlvbgorICoKKyAqIHBlcmZvcm1zICJpbnRlbGxp
Z2VudCIgY29udmVyc2lvbiBpbiB0aGUgRklMRSBpbnRlcmZhY2UuCisgKiBXcml0ZSBhIGZpbGUg
aW4gMyBzdGVwcyAoMmQgYW5kIDNkIHN0ZXBzIGFyZSBvcHRpb25hbCkuCisgKi8KK3NzaXplX3Qg
cmVpc2VyNF93cml0ZV9kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hhciBfX3Vz
ZXIgKmJ1ZiwKKwkJCSAgICAgICBzaXplX3QgY291bnQsIGxvZmZfdCAqb2ZmKQoreworCXNzaXpl
X3QgcmVzdWx0OworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXNzaXplX3Qgd3JpdHRlbl9vbGQg
PSAwOyAvKiBieXRlcyB3cml0dGVuIHdpdGggaW5pdGlhbCBwbHVnaW4gKi8KKwlzc2l6ZV90IHdy
aXR0ZW5fbmV3ID0gMDsgLyogYnl0ZXMgd3JpdHRlbiB3aXRoIG5ldyBwbHVnaW4gKi8KKwlzdHJ1
Y3QgZGlzcGF0Y2hfY29udGV4dCBjb250OworCXN0cnVjdCBpbm9kZSAqIGlub2RlID0gZmlsZV9p
bm9kZShmaWxlKTsKKworCWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGlub2RlLT5pX3NiKTsK
KwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVybiBQVFJfRVJSKGN0eCk7CisJY3VycmVudC0+YmFj
a2luZ19kZXZfaW5mbyA9IGlub2RlX3RvX2JkaShpbm9kZSk7CisJaW5pdF9kaXNwYXRjaF9jb250
ZXh0KCZjb250KTsKKwlpbm9kZV9sb2NrKGlub2RlKTsKKworCXJlc3VsdCA9IHJlaXNlcjRfd3Jp
dGVfY2hlY2tzKGZpbGUsIGJ1ZiwgY291bnQsIG9mZik7CisJaWYgKHVubGlrZWx5KHJlc3VsdCA8
PSAwKSkKKwkJZ290byBleGl0OworCS8qKgorCSAqIEZpcnN0IHN0ZXAuCisJICogU3RhcnQgd3Jp
dGUgd2l0aCBpbml0aWFsIGZpbGUgcGx1Z2luLgorCSAqIEtlZXAgYSBwbHVnaW4gc2NoZWR1bGUg
c3RhdHVzIGF0IEBjb250IChpZiBhbnkpLgorCSAqLworCXdyaXR0ZW5fb2xkID0gaW5vZGVfZmls
ZV9wbHVnaW4oaW5vZGUpLT53cml0ZShmaWxlLAorCQkJCQkJICAgICAgYnVmLAorCQkJCQkJICAg
ICAgY291bnQsCisJCQkJCQkgICAgICBvZmYsCisJCQkJCQkgICAgICAmY29udCk7CisJaWYgKGNv
bnQuc3RhdGUgIT0gRElTUEFUQ0hfQVNTSUdORURfTkVXIHx8IHdyaXR0ZW5fb2xkIDwgMCkKKwkJ
Z290byBleGl0OworCS8qKgorCSAqIFNlY29uZCBzdGVwLgorCSAqIE5ldyBmaWxlIHBsdWdpbiBo
YXMgYmVlbiBzY2hlZHVsZWQuCisJICogQ29tbWl0IHJlc3BlY3RpdmUgYXRvbSBhbmQgcGFzcyBt
YW5hZ2VtZW50IHRvIHRoZSBuZXcgcGx1Z2luLgorCSAqLworCWFzc2VydCgiZWR3YXJkLTE4MSIs
IGNvbnQucGFnZXNbMF0gIT0gTlVMTCk7CisJLyoKKwkgKiB0aGlzIHdpbGwgY29tbWl0IHRoZSB3
aG9sZSBsb2dpY2FsIGNsdXN0ZXIKKwkgKiB0aGUgZmlsZSBjb25zaXN0cyBvZgorCSAqLworCXJl
aXNlcjRfc3luY19wYWdlKGNvbnQucGFnZXNbMF0pOworCisJZG93bl9yZWFkKCZyZWlzZXI0X2lu
b2RlX2RhdGEoaW5vZGUpLT5jb252X3NlbSk7CisJcmVzdWx0ID0gY29udmVydF9maWxlX3BsdWdp
bihmaWxlLCBpbm9kZSwgJmNvbnQpOworCXVwX3JlYWQoJnJlaXNlcjRfaW5vZGVfZGF0YShpbm9k
ZSktPmNvbnZfc2VtKTsKKwlpZiAocmVzdWx0KSB7CisJCXdhcm5pbmcoImVkd2FyZC0xNTQ0IiwK
KwkJCSJJbm9kZSAlbGx1OiBmaWxlIHBsdWdpbiBjb252ZXJzaW9uIGZhaWxlZCAoJWQpIiwKKwkJ
CSh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSksCisJCQkoaW50KXJlc3Vs
dCk7CisJCWdvdG8gZXhpdDsKKwl9CisJcmVpc2VyNF90eG5fcmVzdGFydChjdHgpOworCS8qKgor
CSAqIFRoaXJkIHN0ZXA6CisJICogRmluaXNoIHdyaXRlIHdpdGggdGhlIG5ldyBmaWxlIHBsdWdp
bi4KKwkgKi8KKwlhc3NlcnQoImVkd2FyZC0xNTM2IiwKKwkgICAgICAgaW5vZGVfZmlsZV9wbHVn
aW4oaW5vZGUpID09CisJICAgICAgIGZpbGVfcGx1Z2luX2J5X2lkKFVOSVhfRklMRV9QTFVHSU5f
SUQpKTsKKworCXdyaXR0ZW5fbmV3ID0gaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpLT53cml0ZShm
aWxlLAorCQkJCQkJICAgICAgYnVmICsgd3JpdHRlbl9vbGQsCisJCQkJCQkgICAgICBjb3VudCAt
IHdyaXR0ZW5fb2xkLAorCQkJCQkJICAgICAgb2ZmLAorCQkJCQkJICAgICAgTlVMTCk7CisgZXhp
dDoKKwlpbm9kZV91bmxvY2soaW5vZGUpOworCWRvbmVfZGlzcGF0Y2hfY29udGV4dCgmY29udCwg
aW5vZGUpOworCWN1cnJlbnQtPmJhY2tpbmdfZGV2X2luZm8gPSBOVUxMOworCWNvbnRleHRfc2V0
X2NvbW1pdF9hc3luYyhjdHgpOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisKKwlyZXR1
cm4gd3JpdHRlbl9vbGQgKyAod3JpdHRlbl9uZXcgPCAwID8gMCA6IHdyaXR0ZW5fbmV3KTsKK30K
KworLyoKKyAqIERpc3BhdGNoZXJzIHdpdGggInBhc3NpdmUiIHByb3RlY3Rpb24gZm9yOgorICoK
KyAqIC0+b3BlbigpOworICogLT5yZWFkKCk7CisgKiAtPmlvY3RsKCk7CisgKiAtPm1tYXAoKTsK
KyAqIC0+cmVsZWFzZSgpOworICogLT5ibWFwKCkuCisgKi8KKworaW50IHJlaXNlcjRfb3Blbl9k
aXNwYXRjaChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKK3sKKwlyZXR1
cm4gUFJPVF9QQVNTSVZFKGludCwgb3BlbiwgKGlub2RlLCBmaWxlKSk7Cit9CisKK3NzaXplX3Qg
cmVpc2VyNF9yZWFkX2Rpc3BhdGNoKHN0cnVjdCBmaWxlICogZmlsZSwgY2hhciBfX3VzZXIgKiBi
dWYsCisJCQkgICAgICBzaXplX3Qgc2l6ZSwgbG9mZl90ICogb2ZmKQoreworCXN0cnVjdCBpbm9k
ZSAqIGlub2RlID0gZmlsZV9pbm9kZShmaWxlKTsKKwlyZXR1cm4gUFJPVF9QQVNTSVZFKHNzaXpl
X3QsIHJlYWQsIChmaWxlLCBidWYsIHNpemUsIG9mZikpOworfQorCitsb25nIHJlaXNlcjRfaW9j
dGxfZGlzcGF0Y2goc3RydWN0IGZpbGUgKmZpbHAsIHVuc2lnbmVkIGludCBjbWQsCisJCQkgICAg
dW5zaWduZWQgbG9uZyBhcmcpCit7CisJc3RydWN0IGlub2RlICogaW5vZGUgPSBmaWxlX2lub2Rl
KGZpbHApOworCXJldHVybiBQUk9UX1BBU1NJVkUoaW50LCBpb2N0bCwgKGZpbHAsIGNtZCwgYXJn
KSk7Cit9CisKK2ludCByZWlzZXI0X21tYXBfZGlzcGF0Y2goc3RydWN0IGZpbGUgKmZpbGUsIHN0
cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQoreworCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBmaWxl
X2lub2RlKGZpbGUpOworCXJldHVybiBQUk9UX1BBU1NJVkUoaW50LCBtbWFwLCAoZmlsZSwgdm1h
KSk7Cit9CisKK2ludCByZWlzZXI0X3JlbGVhc2VfZGlzcGF0Y2goc3RydWN0IGlub2RlICppbm9k
ZSwgc3RydWN0IGZpbGUgKmZpbGUpCit7CisJcmV0dXJuIFBST1RfUEFTU0lWRShpbnQsIHJlbGVh
c2UsIChpbm9kZSwgZmlsZSkpOworfQorCitzZWN0b3JfdCByZWlzZXI0X2JtYXBfZGlzcGF0Y2go
c3RydWN0IGFkZHJlc3Nfc3BhY2UgKiBtYXBwaW5nLCBzZWN0b3JfdCBsYmxvY2spCit7CisJc3Ry
dWN0IGlub2RlICppbm9kZSA9IG1hcHBpbmctPmhvc3Q7CisJcmV0dXJuIFBST1RfUEFTU0lWRShz
ZWN0b3JfdCwgYm1hcCwgKG1hcHBpbmcsIGxibG9jaykpOworfQorCisvKioKKyAqIE5PVEU6IFRo
ZSBmb2xsb3dpbmcgdHdvIG1ldGhvZHMgYXJlCisgKiB1c2VkIG9ubHkgZm9yIGxvb3BiYWNrIGZ1
bmN0aW9uYWxpdHkuCisgKiByZWlzZXI0X3dyaXRlX2VuZCgpIGNhbiBub3QgY29wZSB3aXRoCisg
KiBzaG9ydCB3cml0ZXMgZm9yIG5vdy4KKyAqLworaW50IHJlaXNlcjRfd3JpdGVfYmVnaW5fZGlz
cGF0Y2goc3RydWN0IGZpbGUgKmZpbGUsCisJCQkJIHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBw
aW5nLAorCQkJCSBsb2ZmX3QgcG9zLAorCQkJCSB1bnNpZ25lZCBsZW4sCisJCQkJIHVuc2lnbmVk
IGZsYWdzLAorCQkJCSBzdHJ1Y3QgcGFnZSAqKnBhZ2VwLAorCQkJCSB2b2lkICoqZnNkYXRhKQor
eworCWludCByZXQgPSAwOworCXN0cnVjdCBwYWdlICpwYWdlOworCXBnb2ZmX3QgaW5kZXg7CisJ
cmVpc2VyNF9jb250ZXh0ICpjdHg7CisJc3RydWN0IGlub2RlICogaW5vZGUgPSBmaWxlX2lub2Rl
KGZpbGUpOworCisJaW5kZXggPSBwb3MgPj4gUEFHRV9TSElGVDsKKwlwYWdlID0gZ3JhYl9jYWNo
ZV9wYWdlX3dyaXRlX2JlZ2luKG1hcHBpbmcsIGluZGV4LAorCQkJCQkgICBmbGFncyAmIEFPUF9G
TEFHX05PRlMpOworCSpwYWdlcCA9IHBhZ2U7CisJaWYgKCFwYWdlKQorCQlyZXR1cm4gLUVOT01F
TTsKKworCWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGZpbGVfaW5vZGUoZmlsZSktPmlfc2Ip
OworCWlmIChJU19FUlIoY3R4KSkgeworCQlyZXQgPSBQVFJfRVJSKGN0eCk7CisJCWdvdG8gZXJy
MjsKKwl9CisJcmV0ID0gcmVpc2VyNF9ncmFiX3NwYWNlX2ZvcmNlKC8qIGZvciB1cGRhdGVfc2Q6
CisJCQkJCSogb25lIHdoZW4gdXBkYXRpbmcgZmlsZSBzaXplIGFuZAorCQkJCQkqIG9uZSB3aGVu
IHVwZGF0aW5nIG10aW1lL2N0aW1lICovCisJCQkJICAgICAgIDIgKiBlc3RpbWF0ZV91cGRhdGVf
Y29tbW9uKGlub2RlKSwKKwkJCQkgICAgICAgQkFfQ0FOX0NPTU1JVCk7CisJaWYgKHJldCkKKwkJ
Z290byBlcnIxOworCXJldCA9IFBST1RfUEFTU0lWRShpbnQsIHdyaXRlX2JlZ2luLCAoZmlsZSwg
cGFnZSwgcG9zLCBsZW4sIGZzZGF0YSkpOworCWlmICh1bmxpa2VseShyZXQpKQorCQlnb3RvIGVy
cjE7CisJLyogU3VjY2Vzcy4gUmVzb3JjZXMgd2lsbCBiZSByZWxlYXNlZCBpbiB3cml0ZV9lbmRf
ZGlzcGF0Y2ggKi8KKwlyZXR1cm4gMDsKKyBlcnIxOgorCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0
eCk7CisgZXJyMjoKKwl1bmxvY2tfcGFnZShwYWdlKTsKKwlwdXRfcGFnZShwYWdlKTsKKwlyZXR1
cm4gcmV0OworfQorCitpbnQgcmVpc2VyNF93cml0ZV9lbmRfZGlzcGF0Y2goc3RydWN0IGZpbGUg
KmZpbGUsCisJCQkgICAgICAgc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAg
ICAgbG9mZl90IHBvcywKKwkJCSAgICAgICB1bnNpZ25lZCBsZW4sCisJCQkgICAgICAgdW5zaWdu
ZWQgY29waWVkLAorCQkJICAgICAgIHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICAgICAgIHZvaWQg
KmZzZGF0YSkKK3sKKwlpbnQgcmV0OworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXN0cnVjdCBp
bm9kZSAqaW5vZGUgPSBwYWdlLT5tYXBwaW5nLT5ob3N0OworCisJYXNzZXJ0KCJ1bWthLTMxMDEi
LCBmaWxlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0zMTAyIiwgcGFnZSAhPSBOVUxMKTsKKwlh
c3NlcnQoInVta2EtMzA5MyIsIFBhZ2VMb2NrZWQocGFnZSkpOworCisJY3R4ID0gZ2V0X2N1cnJl
bnRfY29udGV4dCgpOworCisJU2V0UGFnZVVwdG9kYXRlKHBhZ2UpOworCXNldF9wYWdlX2RpcnR5
X25vdGFnKHBhZ2UpOworCisJcmV0ID0gUFJPVF9QQVNTSVZFKGludCwgd3JpdGVfZW5kLCAoZmls
ZSwgcGFnZSwgcG9zLCBjb3BpZWQsIGZzZGF0YSkpOworCXB1dF9wYWdlKHBhZ2UpOworCisJLyog
ZG9uJ3QgY29tbWl0IHRyYW5zYWN0aW9uIHVuZGVyIGlub2RlIHNlbWFwaG9yZSAqLworCWNvbnRl
eHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJ
cmV0dXJuIHJldCA9PSAwID8gY29waWVkIDogcmV0OworfQorCisvKgorICogRGlzcGF0Y2hlcnMg
d2l0aG91dCBwcm90ZWN0aW9uCisgKi8KK2ludCByZWlzZXI0X3NldGF0dHJfZGlzcGF0Y2goc3Ry
dWN0IGRlbnRyeSAqZGVudHJ5LCBzdHJ1Y3QgaWF0dHIgKmF0dHIpCit7CisJcmV0dXJuIGlub2Rl
X2ZpbGVfcGx1Z2luKGRlbnRyeS0+ZF9pbm9kZSktPnNldGF0dHIoZGVudHJ5LCBhdHRyKTsKK30K
KworLyoKKyAgTG9jYWwgdmFyaWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgor
ICBtb2RlLW5hbWU6ICJMQyIKKyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRoOiA4Cisg
IGZpbGwtY29sdW1uOiA4MAorICBzY3JvbGwtc3RlcDogMQorICBFbmQ6CisqLwpkaWZmIC11ck4g
LS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9maWxl
L2ZpbGUuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZS9maWxlLmgKLS0tIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvZmlsZS5oCTE5NzAtMDEtMDEg
MDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVn
aW4vZmlsZS9maWxlLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NjMyMjIyNTUgKzAxMDAKQEAgLTAs
MCArMSwzMjMgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzLCAyMDA0IGJ5IEhhbnMg
UmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8q
IHRoaXMgZmlsZSBjb250YWlucyBkZWNsYXJhdGlvbnMgb2YgbWV0aG9kcyBpbXBsZW1lbnRpbmcK
KyAgIGZpbGUgcGx1Z2lucyAoVU5JWF9GSUxFX1BMVUdJTl9JRCwgQ1JZUFRDT01QUkVTU19GSUxF
X1BMVUdJTl9JRAorICAgYW5kIFNZTUxJTktfRklMRV9QTFVHSU5fSUQpICovCisKKyNpZiAhZGVm
aW5lZCggX19SRUlTRVI0X0ZJTEVfSF9fICkKKyNkZWZpbmUgX19SRUlTRVI0X0ZJTEVfSF9fCisK
Ky8qIHBvc3NpYmxlIHN0YXRlcyBpbiBkaXNwYXRjaGluZyBwcm9jZXNzICovCit0eXBlZGVmIGVu
dW0geworCURJU1BBVENIX0lOVkFMX1NUQVRFLCAgLyogaW52YWxpZCBzdGF0ZSAqLworCURJU1BB
VENIX1BPSU5ULCAgICAgICAgLyogZGlzcGF0Y2hpbmcgcG9pbnQgaGFzIGJlZW4gYWNoaWV2ZWQg
Ki8KKwlESVNQQVRDSF9SRU1BSU5TX09MRCwgIC8qIG1hZGUgYSBkZWNpc2lvbiB0byBtYW5hZ2Ug
Ynkgb2xkIHBsdWdpbiAqLworCURJU1BBVENIX0FTU0lHTkVEX05FVyAgLyogYSBuZXcgcGx1Z2lu
IGhhcyBiZWVuIGFzc2lnbmVkICovCit9IGRpc3BhdGNoX3N0YXRlOworCitzdHJ1Y3QgZGlzcGF0
Y2hfY29udGV4dCB7CisJaW50IG5yX3BhZ2VzOworCXN0cnVjdCBwYWdlICoqcGFnZXM7CisJZGlz
cGF0Y2hfc3RhdGUgc3RhdGU7Cit9OworCisvKgorICogRGVjbGFyYXRpb25zIG9mIG1ldGhvZHMg
cHJvdmlkZWQgZm9yIFZGUy4KKyAqLworCisvKiBpbm9kZSBvcGVyYXRpb25zICovCitpbnQgcmVp
c2VyNF9zZXRhdHRyX2Rpc3BhdGNoKHN0cnVjdCBkZW50cnkgKiwgc3RydWN0IGlhdHRyICopOwor
CisvKiBmaWxlIG9wZXJhdGlvbnMgKi8KK3NzaXplX3QgcmVpc2VyNF9yZWFkX2Rpc3BhdGNoKHN0
cnVjdCBmaWxlICosIGNoYXIgX191c2VyICpidWYsCisJCQkgICAgICBzaXplX3QgY291bnQsIGxv
ZmZfdCAqb2ZmKTsKK3NzaXplX3QgcmVpc2VyNF93cml0ZV9kaXNwYXRjaChzdHJ1Y3QgZmlsZSAq
LCBjb25zdCBjaGFyIF9fdXNlciAqYnVmLAorCQkJICAgICAgIHNpemVfdCBjb3VudCwgbG9mZl90
ICogb2ZmKTsKK2xvbmcgcmVpc2VyNF9pb2N0bF9kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqZmlscCwg
dW5zaWduZWQgaW50IGNtZCwKKwkJCSAgICB1bnNpZ25lZCBsb25nIGFyZyk7CitpbnQgcmVpc2Vy
NF9tbWFwX2Rpc3BhdGNoKHN0cnVjdCBmaWxlICosIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKTsK
K2ludCByZWlzZXI0X29wZW5fZGlzcGF0Y2goc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZp
bGUgKmZpbGUpOworaW50IHJlaXNlcjRfcmVsZWFzZV9kaXNwYXRjaChzdHJ1Y3QgaW5vZGUgKiwg
c3RydWN0IGZpbGUgKik7CitpbnQgcmVpc2VyNF9zeW5jX2ZpbGVfY29tbW9uKHN0cnVjdCBmaWxl
ICosIGxvZmZfdCwgbG9mZl90LCBpbnQgZGF0YXN5bmMpOworaW50IHJlaXNlcjRfc3luY19wYWdl
KHN0cnVjdCBwYWdlICpwYWdlKTsKKworLyogYWRkcmVzcyBzcGFjZSBvcGVyYXRpb25zICovCitp
bnQgcmVpc2VyNF9yZWFkcGFnZV9kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqLCBzdHJ1Y3QgcGFnZSAq
KTsKK2ludCByZWlzZXI0X3JlYWRwYWdlc19kaXNwYXRjaChzdHJ1Y3QgZmlsZSAqLCBzdHJ1Y3Qg
YWRkcmVzc19zcGFjZSAqLAorCQkJICAgICAgIHN0cnVjdCBsaXN0X2hlYWQgKiwgdW5zaWduZWQp
OworaW50IHJlaXNlcjRfd3JpdGVwYWdlc19kaXNwYXRjaChzdHJ1Y3QgYWRkcmVzc19zcGFjZSAq
LAorCQkJCXN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqKTsKK2ludCByZWlzZXI0X3dyaXRlX2Jl
Z2luX2Rpc3BhdGNoKHN0cnVjdCBmaWxlICpmaWxlLAorCQkJCSBzdHJ1Y3QgYWRkcmVzc19zcGFj
ZSAqbWFwcGluZywKKwkJCQkgbG9mZl90IHBvcywgdW5zaWduZWQgbGVuLCB1bnNpZ25lZCBmbGFn
cywKKwkJCQkgc3RydWN0IHBhZ2UgKipwYWdlcCwgdm9pZCAqKmZzZGF0YSk7CitpbnQgcmVpc2Vy
NF93cml0ZV9lbmRfZGlzcGF0Y2goc3RydWN0IGZpbGUgKmZpbGUsCisJCQkgICAgICAgc3RydWN0
IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgICAgICAgbG9mZl90IHBvcywgdW5zaWduZWQg
bGVuLCB1bnNpZ25lZCBjb3BpZWQsCisJCQkgICAgICAgc3RydWN0IHBhZ2UgKnBhZ2UsIHZvaWQg
KmZzZGF0YSk7CitzZWN0b3JfdCByZWlzZXI0X2JtYXBfZGlzcGF0Y2goc3RydWN0IGFkZHJlc3Nf
c3BhY2UgKiwgc2VjdG9yX3QgbGJsb2NrKTsKKworLyoKKyAqIFByaXZhdGUgbWV0aG9kcyBvZiB1
bml4LWZpbGUgcGx1Z2luCisgKiAoVU5JWF9GSUxFX1BMVUdJTl9JRCkKKyAqLworCisvKiBwcml2
YXRlIGlub2RlIG9wZXJhdGlvbnMgKi8KK2ludCBzZXRhdHRyX3VuaXhfZmlsZShzdHJ1Y3QgZGVu
dHJ5ICosIHN0cnVjdCBpYXR0ciAqKTsKKworLyogcHJpdmF0ZSBmaWxlIG9wZXJhdGlvbnMgKi8K
Kworc3NpemVfdCByZWFkX3VuaXhfZmlsZShzdHJ1Y3QgZmlsZSAqLCBjaGFyIF9fdXNlciAqYnVm
LCBzaXplX3QgcmVhZF9hbW91bnQsCisJCSAgICAgICBsb2ZmX3QgKm9mZik7Citzc2l6ZV90IHdy
aXRlX3VuaXhfZmlsZShzdHJ1Y3QgZmlsZSAqLCBjb25zdCBjaGFyIF9fdXNlciAqYnVmLCBzaXpl
X3Qgd3JpdGVfYW1vdW50LAorCQkJbG9mZl90ICogb2ZmLCBzdHJ1Y3QgZGlzcGF0Y2hfY29udGV4
dCAqIGNvbnQpOworaW50IGlvY3RsX3VuaXhfZmlsZShzdHJ1Y3QgZmlsZSAqLCB1bnNpZ25lZCBp
bnQgY21kLCB1bnNpZ25lZCBsb25nIGFyZyk7CitpbnQgbW1hcF91bml4X2ZpbGUoc3RydWN0IGZp
bGUgKiwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICopOworaW50IG9wZW5fdW5peF9maWxlKHN0cnVj
dCBpbm9kZSAqLCBzdHJ1Y3QgZmlsZSAqKTsKK2ludCByZWxlYXNlX3VuaXhfZmlsZShzdHJ1Y3Qg
aW5vZGUgKiwgc3RydWN0IGZpbGUgKik7CisKKy8qIHByaXZhdGUgYWRkcmVzcyBzcGFjZSBvcGVy
YXRpb25zICovCitpbnQgcmVhZHBhZ2VfdW5peF9maWxlKHN0cnVjdCBmaWxlICosIHN0cnVjdCBw
YWdlICopOworaW50IHJlYWRwYWdlc191bml4X2ZpbGUoc3RydWN0IGZpbGUqLCBzdHJ1Y3QgYWRk
cmVzc19zcGFjZSosIHN0cnVjdCBsaXN0X2hlYWQqLAorCQkJdW5zaWduZWQpOworaW50IHdyaXRl
cGFnZXNfdW5peF9maWxlKHN0cnVjdCBhZGRyZXNzX3NwYWNlICosIHN0cnVjdCB3cml0ZWJhY2tf
Y29udHJvbCAqKTsKK2ludCB3cml0ZV9iZWdpbl91bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUs
IHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICBsb2ZmX3QgcG9zLCB1bnNpZ25lZCBsZW4sIHZvaWQg
Kipmc2RhdGEpOworaW50IHdyaXRlX2VuZF91bml4X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0
cnVjdCBwYWdlICpwYWdlLAorCQkJbG9mZl90IHBvcywgdW5zaWduZWQgY29waWVkLCB2b2lkICpm
c2RhdGEpOworc2VjdG9yX3QgYm1hcF91bml4X2ZpbGUoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKiwg
c2VjdG9yX3QgbGJsb2NrKTsKKworLyogb3RoZXIgcHJpdmF0ZSBtZXRob2RzICovCitpbnQgZGVs
ZXRlX29iamVjdF91bml4X2ZpbGUoc3RydWN0IGlub2RlICopOworaW50IGZsb3dfYnlfaW5vZGVf
dW5peF9maWxlKHN0cnVjdCBpbm9kZSAqLCBjb25zdCBjaGFyIF9fdXNlciAqYnVmLAorCQkJICAg
IGludCB1c2VyLCBsb2ZmX3QsIGxvZmZfdCwgcndfb3AsIGZsb3dfdCAqKTsKK2ludCBvd25zX2l0
ZW1fdW5peF9maWxlKGNvbnN0IHN0cnVjdCBpbm9kZSAqLCBjb25zdCBjb29yZF90ICopOwordm9p
ZCBpbml0X2lub2RlX2RhdGFfdW5peF9maWxlKHN0cnVjdCBpbm9kZSAqLCByZWlzZXI0X29iamVj
dF9jcmVhdGVfZGF0YSAqLAorCQkJICAgICAgIGludCBjcmVhdGUpOworCisvKgorICogUHJpdmF0
ZSBtZXRob2RzIG9mIGNyeXB0Y29tcHJlc3MgZmlsZSBwbHVnaW4KKyAqIChDUllQVENPTVBSRVNT
X0ZJTEVfUExVR0lOX0lEKQorICovCisKKy8qIHByaXZhdGUgaW5vZGUgb3BlcmF0aW9ucyAqLwor
aW50IHNldGF0dHJfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgZGVudHJ5ICosIHN0cnVjdCBpYXR0ciAq
KTsKKworLyogcHJpdmF0ZSBmaWxlIG9wZXJhdGlvbnMgKi8KK3NzaXplX3QgcmVhZF9jcnlwdGNv
bXByZXNzKHN0cnVjdCBmaWxlICosIGNoYXIgX191c2VyICpidWYsCisJCQkgICBzaXplX3QgY291
bnQsIGxvZmZfdCAqb2ZmKTsKK3NzaXplX3Qgd3JpdGVfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgZmls
ZSAqLCBjb25zdCBjaGFyIF9fdXNlciAqYnVmLAorCQkJICAgIHNpemVfdCBjb3VudCwgbG9mZl90
ICogb2ZmLAorCQkJICAgIHN0cnVjdCBkaXNwYXRjaF9jb250ZXh0ICpjb250KTsKK2ludCBpb2N0
bF9jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICosIHVuc2lnbmVkIGludCBjbWQsIHVuc2lnbmVk
IGxvbmcgYXJnKTsKK2ludCBtbWFwX2NyeXB0Y29tcHJlc3Moc3RydWN0IGZpbGUgKiwgc3RydWN0
IHZtX2FyZWFfc3RydWN0ICopOworaW50IG9wZW5fY3J5cHRjb21wcmVzcyhzdHJ1Y3QgaW5vZGUg
Kiwgc3RydWN0IGZpbGUgKik7CitpbnQgcmVsZWFzZV9jcnlwdGNvbXByZXNzKHN0cnVjdCBpbm9k
ZSAqLCBzdHJ1Y3QgZmlsZSAqKTsKKworLyogcHJpdmF0ZSBhZGRyZXNzIHNwYWNlIG9wZXJhdGlv
bnMgKi8KK2ludCByZWFkcGFnZV9jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlICosIHN0cnVjdCBw
YWdlICopOworaW50IHJlYWRwYWdlc19jcnlwdGNvbXByZXNzKHN0cnVjdCBmaWxlKiwgc3RydWN0
IGFkZHJlc3Nfc3BhY2UqLAorCQkJICAgIHN0cnVjdCBsaXN0X2hlYWQqLCB1bnNpZ25lZCk7Citp
bnQgd3JpdGVwYWdlc19jcnlwdGNvbXByZXNzKHN0cnVjdCBhZGRyZXNzX3NwYWNlICosCisJCQkg
ICAgIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqKTsKK2ludCB3cml0ZV9iZWdpbl9jcnlwdGNv
bXByZXNzKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgcGFnZSAqcGFnZSwKKwkJCSAgICAgIGxv
ZmZfdCBwb3MsIHVuc2lnbmVkIGxlbiwgdm9pZCAqKmZzZGF0YSk7CitpbnQgd3JpdGVfZW5kX2Ny
eXB0Y29tcHJlc3Moc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICAg
IGxvZmZfdCBwb3MsIHVuc2lnbmVkIGNvcGllZCwgdm9pZCAqZnNkYXRhKTsKK3NlY3Rvcl90IGJt
YXBfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqLCBzZWN0b3JfdCBsYmxvY2sp
OworCisvKiBvdGhlciBwcml2YXRlIG1ldGhvZHMgKi8KK2ludCBmbG93X2J5X2lub2RlX2NyeXB0
Y29tcHJlc3Moc3RydWN0IGlub2RlICosIGNvbnN0IGNoYXIgX191c2VyICpidWYsCisJCQkJaW50
IHVzZXIsIGxvZmZfdCwgbG9mZl90LCByd19vcCwgZmxvd190ICopOworaW50IGtleV9ieV9pbm9k
ZV9jcnlwdGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqLCBsb2ZmX3Qgb2ZmLCByZWlzZXI0X2tleSAq
KTsKK2ludCBjcmVhdGVfb2JqZWN0X2NyeXB0Y29tcHJlc3Moc3RydWN0IGlub2RlICosIHN0cnVj
dCBpbm9kZSAqLAorCQkJCXJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICopOworaW50IGRlbGV0
ZV9vYmplY3RfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgaW5vZGUgKik7Cit2b2lkIGluaXRfaW5vZGVf
ZGF0YV9jcnlwdGNvbXByZXNzKHN0cnVjdCBpbm9kZSAqLCByZWlzZXI0X29iamVjdF9jcmVhdGVf
ZGF0YSAqLAorCQkJCSAgIGludCBjcmVhdGUpOworaW50IGN1dF90cmVlX3dvcmtlcl9jcnlwdGNv
bXByZXNzKHRhcF90ICosIGNvbnN0IHJlaXNlcjRfa2V5ICogZnJvbV9rZXksCisJCQkJICBjb25z
dCByZWlzZXI0X2tleSAqIHRvX2tleSwKKwkJCQkgIHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVt
b3ZlZCwKKwkJCQkgIHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBpbnQgdHJ1bmNhdGUsCisJCQkJICBp
bnQgKnByb2dyZXNzKTsKK3ZvaWQgZGVzdHJveV9pbm9kZV9jcnlwdGNvbXByZXNzKHN0cnVjdCBp
bm9kZSAqKTsKKworLyoKKyAqIFByaXZhdGUgbWV0aG9kcyBvZiBzeW1saW5rIGZpbGUgcGx1Z2lu
CisgKiAoU1lNTElOS19GSUxFX1BMVUdJTl9JRCkKKyAqLworaW50IHJlaXNlcjRfY3JlYXRlX3N5
bWxpbmsoc3RydWN0IGlub2RlICpzeW1saW5rLCBzdHJ1Y3QgaW5vZGUgKmRpciwKKwkJCSAgIHJl
aXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICopOwordm9pZCBkZXN0cm95X2lub2RlX3N5bWxpbmso
c3RydWN0IGlub2RlICopOworCisvKgorICogYWxsIHRoZSB3cml0ZSBpbnRvIHVuaXggZmlsZSBp
cyBwZXJmb3JtZWQgYnkgaXRlbSB3cml0ZSBtZXRob2QuIFdyaXRlIG1ldGhvZAorICogb2YgdW5p
eCBmaWxlIHBsdWdpbiBvbmx5IGRlY2lkZXMgd2hpY2ggaXRlbSBwbHVnaW4gKGV4dGVudCBvciB0
YWlsKSBhbmQgaW4KKyAqIHdoaWNoIG1vZGUgKG9uZSBmcm9tIHRoZSBlbnVtIGJlbG93KSB0byBj
YWxsCisgKi8KK3R5cGVkZWYgZW51bSB7CisJRklSU1RfSVRFTSA9IDEsCisJQVBQRU5EX0lURU0g
PSAyLAorCU9WRVJXUklURV9JVEVNID0gMworfSB3cml0ZV9tb2RlX3Q7CisKKy8qIHVuaXggZmls
ZSBtYXkgYmUgaW4gb25lIHRoZSBmb2xsb3dpbmcgc3RhdGVzICovCit0eXBlZGVmIGVudW0gewor
CVVGX0NPTlRBSU5FUl9VTktOT1dOID0gMCwKKwlVRl9DT05UQUlORVJfVEFJTFMgPSAxLAorCVVG
X0NPTlRBSU5FUl9FWFRFTlRTID0gMiwKKwlVRl9DT05UQUlORVJfRU1QVFkgPSAzCit9IGZpbGVf
Y29udGFpbmVyX3Q7CisKK3N0cnVjdCBmb3JtYXR0aW5nX3BsdWdpbjsKK3N0cnVjdCBpbm9kZTsK
KworLyogdW5peCBmaWxlIHBsdWdpbiBzcGVjaWZpYyBwYXJ0IG9mIHJlaXNlcjQgaW5vZGUgKi8K
K3N0cnVjdCB1bml4X2ZpbGVfaW5mbyB7CisJLyoKKwkgKiB0aGlzIHJlYWQtd3JpdGUgbG9jayBw
cm90ZWN0cyBmaWxlIGNvbnRhaW5lcml6YXRpb24gY2hhbmdlLiBBY2Nlc3NlcworCSAqIHdoaWNo
IGRvIG5vdCBjaGFuZ2UgZmlsZSBjb250YWluZXJpemF0aW9uIChzZWUgZmlsZV9jb250YWluZXJf
dCkKKwkgKiAocmVhZCwgcmVhZHBhZ2UsIHdyaXRlcGFnZSwgd3JpdGUgKHVudGlsIHRhaWwgY29u
dmVyc2lvbiBpcworCSAqIGludm9sdmVkKSkgdGFrZSByZWFkLWxvY2suIEFjY2Vzc2VzIHdoaWNo
IG1vZGlmeSBmaWxlCisJICogY29udGFpbmVyaXphdGlvbiAodHJ1bmNhdGUsIGNvbnZlcnNpb24g
ZnJvbSB0YWlsIHRvIGV4dGVudCBhbmQgYmFjaykKKwkgKiB0YWtlIHdyaXRlLWxvY2suCisJICov
CisJc3RydWN0IHJ3X3NlbWFwaG9yZSBsYXRjaDsKKwkvKiB0aGlzIGVudW0gc3BlY2lmaWVzIHdo
aWNoIGl0ZW1zIGFyZSB1c2VkIHRvIGJ1aWxkIHRoZSBmaWxlICovCisJZmlsZV9jb250YWluZXJf
dCBjb250YWluZXI7CisJLyoKKwkgKiBwbHVnaW4gd2hpY2ggY29udHJvbHMgd2hlbiBmaWxlIGlz
IHRvIGJlIGNvbnZlcnRlZCB0byBleHRlbnRzIGFuZAorCSAqIGJhY2sgdG8gdGFpbAorCSAqLwor
CXN0cnVjdCBmb3JtYXR0aW5nX3BsdWdpbiAqdHBsdWc7CisJLyogaWYgdGhpcyBpcyBzZXQsIGZp
bGUgaXMgaW4gZXhjbHVzaXZlIHVzZSAqLworCWludCBleGNsdXNpdmVfdXNlOworI2lmIFJFSVNF
UjRfREVCVUcKKwkvKiBwb2ludGVyIHRvIHRhc2sgc3RydWN0IG9mIHRocmVhZCBvd25pbmcgZXhj
bHVzaXZlIGFjY2VzcyB0byBmaWxlICovCisJdm9pZCAqZWFfb3duZXI7CisJYXRvbWljX3QgbnJf
bmVhczsKKwl2b2lkICpsYXN0X3JlYWRlcjsKKyNlbmRpZgorfTsKKworc3RydWN0IHVuaXhfZmls
ZV9pbmZvICp1bml4X2ZpbGVfaW5vZGVfZGF0YShjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlKTsK
K3ZvaWQgZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3Moc3RydWN0IHVuaXhfZmlsZV9pbmZvICopOwordm9p
ZCBkcm9wX2V4Y2x1c2l2ZV9hY2Nlc3Moc3RydWN0IHVuaXhfZmlsZV9pbmZvICopOwordm9pZCBn
ZXRfbm9uZXhjbHVzaXZlX2FjY2VzcyhzdHJ1Y3QgdW5peF9maWxlX2luZm8gKik7Cit2b2lkIGRy
b3Bfbm9uZXhjbHVzaXZlX2FjY2VzcyhzdHJ1Y3QgdW5peF9maWxlX2luZm8gKik7CitpbnQgdHJ5
X3RvX2dldF9ub25leGNsdXNpdmVfYWNjZXNzKHN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqKTsKK2lu
dCBmaW5kX2ZpbGVfaXRlbShoaW50X3QgKiwgY29uc3QgcmVpc2VyNF9rZXkgKiwgem5vZGVfbG9j
a19tb2RlLAorCQkgICBzdHJ1Y3QgaW5vZGUgKik7CitpbnQgZmluZF9maWxlX2l0ZW1fbm9oaW50
KGNvb3JkX3QgKiwgbG9ja19oYW5kbGUgKiwKKwkJCSAgY29uc3QgcmVpc2VyNF9rZXkgKiwgem5v
ZGVfbG9ja19tb2RlLAorCQkJICBzdHJ1Y3QgaW5vZGUgKik7CisKK2ludCBsb2FkX2ZpbGVfaGlu
dChzdHJ1Y3QgZmlsZSAqLCBoaW50X3QgKik7Cit2b2lkIHNhdmVfZmlsZV9oaW50KHN0cnVjdCBm
aWxlICosIGNvbnN0IGhpbnRfdCAqKTsKKworI2luY2x1ZGUgIi4uL2l0ZW0vZXh0ZW50LmgiCisj
aW5jbHVkZSAiLi4vaXRlbS90YWlsLmgiCisjaW5jbHVkZSAiLi4vaXRlbS9jdGFpbC5oIgorCitz
dHJ1Y3QgdWZfY29vcmQgeworCWNvb3JkX3QgY29vcmQ7CisJbG9ja19oYW5kbGUgKmxoOworCWlu
dCB2YWxpZDsKKwl1bmlvbiB7CisJCXN0cnVjdCBleHRlbnRfY29vcmRfZXh0ZW5zaW9uIGV4dGVu
dDsKKwkJc3RydWN0IHRhaWxfY29vcmRfZXh0ZW5zaW9uIHRhaWw7CisJCXN0cnVjdCBjdGFpbF9j
b29yZF9leHRlbnNpb24gY3RhaWw7CisJfSBleHRlbnNpb247Cit9OworCisjaW5jbHVkZSAiLi4v
Li4vZm9yd2FyZC5oIgorI2luY2x1ZGUgIi4uLy4uL3NlYWwuaCIKKyNpbmNsdWRlICIuLi8uLi9s
b2NrLmgiCisKKy8qCisgKiBUaGlzIHN0cnVjdHVyZSBpcyB1c2VkIHRvIHNwZWVkIHVwIGZpbGUg
b3BlcmF0aW9ucyAocmVhZHMgYW5kIHdyaXRlcykuICBBCisgKiBoaW50IGlzIGEgc3VnZ2VzdGlv
biBhYm91dCB3aGVyZSBhIGtleSByZXNvbHZlZCB0byBsYXN0IHRpbWUuICBBIHNlYWwKKyAqIGlu
ZGljYXRlcyB3aGV0aGVyIGEgbm9kZSBoYXMgYmVlbiBtb2RpZmllZCBzaW5jZSBhIGhpbnQgd2Fz
IGxhc3QgcmVjb3JkZWQuCisgKiBZb3UgY2hlY2sgdGhlIHNlYWwsIGFuZCBpZiB0aGUgc2VhbCBp
cyBzdGlsbCB2YWxpZCwgeW91IGNhbiB1c2UgdGhlIGhpbnQKKyAqIHdpdGhvdXQgdHJhdmVyc2lu
ZyB0aGUgdHJlZSBhZ2Fpbi4KKyAqLworc3RydWN0IGhpbnQgeworCXNlYWxfdCBzZWFsOyAvKiBh
IHNlYWwgb3ZlciBsYXN0IGZpbGUgaXRlbSBhY2Nlc3NlZCAqLworCXVmX2Nvb3JkX3QgZXh0X2Nv
b3JkOworCWxvZmZfdCBvZmZzZXQ7CisJem5vZGVfbG9ja19tb2RlIG1vZGU7CisJbG9ja19oYW5k
bGUgbGg7Cit9OworCitzdGF0aWMgaW5saW5lIGludCBoaW50X2lzX3ZhbGlkKGhpbnRfdCAqIGhp
bnQpCit7CisJcmV0dXJuIGhpbnQtPmV4dF9jb29yZC52YWxpZDsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIGhpbnRfc2V0X3ZhbGlkKGhpbnRfdCAqIGhpbnQpCit7CisJaGludC0+ZXh0X2Nvb3Jk
LnZhbGlkID0gMTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGhpbnRfY2xyX3ZhbGlkKGhpbnRf
dCAqIGhpbnQpCit7CisJaGludC0+ZXh0X2Nvb3JkLnZhbGlkID0gMDsKK30KKworaW50IGxvYWRf
ZmlsZV9oaW50KHN0cnVjdCBmaWxlICosIGhpbnRfdCAqKTsKK3ZvaWQgc2F2ZV9maWxlX2hpbnQo
c3RydWN0IGZpbGUgKiwgY29uc3QgaGludF90ICopOwordm9pZCBoaW50X2luaXRfemVybyhoaW50
X3QgKik7Cit2b2lkIHJlaXNlcjRfc2V0X2hpbnQoaGludF90ICosIGNvbnN0IHJlaXNlcjRfa2V5
ICosIHpub2RlX2xvY2tfbW9kZSk7CitpbnQgaGludF9pc19zZXQoY29uc3QgaGludF90ICopOwor
dm9pZCByZWlzZXI0X3Vuc2V0X2hpbnQoaGludF90ICopOworCitpbnQgcmVpc2VyNF91cGRhdGVf
ZmlsZV9zaXplKHN0cnVjdCBpbm9kZSAqLCBsb2ZmX3QsIGludCB1cGRhdGVfc2QpOworaW50IGN1
dF9maWxlX2l0ZW1zKHN0cnVjdCBpbm9kZSAqLCBsb2ZmX3QgbmV3X3NpemUsCisJCSAgIGludCB1
cGRhdGVfc2QsIGxvZmZfdCBjdXJfc2l6ZSwKKwkJICAgaW50ICgqdXBkYXRlX2FjdG9yKSAoc3Ry
dWN0IGlub2RlICosIGxvZmZfdCwgaW50KSk7CisjaWYgUkVJU0VSNF9ERUJVRworCisvKiByZXR1
cm4gMSBpcyBleGNsdXNpdmUgYWNjZXNzIGlzIG9idGFpbmVkLCAwIC0gb3RoZXJ3aXNlICovCitz
dGF0aWMgaW5saW5lIGludCBlYV9vYnRhaW5lZChzdHJ1Y3QgdW5peF9maWxlX2luZm8gKiB1Zl9p
bmZvKQoreworCWludCByZXQ7CisKKwlyZXQgPSBkb3duX3JlYWRfdHJ5bG9jaygmdWZfaW5mby0+
bGF0Y2gpOworCWlmIChyZXQpCisJCXVwX3JlYWQoJnVmX2luZm8tPmxhdGNoKTsKKwlyZXR1cm4g
IXJldDsKK30KKworI2VuZGlmCisKKyNkZWZpbmUgV1JJVEVfR1JBTlVMQVJJVFkgMzIKKworaW50
IHRhaWwyZXh0ZW50KHN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqKTsKK2ludCBleHRlbnQydGFpbChz
dHJ1Y3QgZmlsZSAqLCBzdHJ1Y3QgdW5peF9maWxlX2luZm8gKik7CisKK2ludCBnb3RvX3JpZ2h0
X25laWdoYm9yKGNvb3JkX3QgKiwgbG9ja19oYW5kbGUgKik7CitpbnQgZmluZF9vcl9jcmVhdGVf
ZXh0ZW50KHN0cnVjdCBwYWdlICopOworaW50IGVxdWFsX3RvX2xkayh6bm9kZSAqLCBjb25zdCBy
ZWlzZXI0X2tleSAqKTsKKwordm9pZCBpbml0X3VmX2Nvb3JkKHVmX2Nvb3JkX3QgKnVmX2Nvb3Jk
LCBsb2NrX2hhbmRsZSAqbGgpOworCitzdGF0aWMgaW5saW5lIGludCBjYmtfZXJyb3JlZChpbnQg
Y2JrX3Jlc3VsdCkKK3sKKwlyZXR1cm4gKGNia19yZXN1bHQgIT0gQ0JLX0NPT1JEX05PVEZPVU5E
CisJCSYmIGNia19yZXN1bHQgIT0gQ0JLX0NPT1JEX0ZPVU5EKTsKK30KKworLyogX19SRUlTRVI0
X0ZJTEVfSF9fICovCisjZW5kaWYKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5k
ZW50YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zm
c2V0OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0
ZXA6IDEKKyAqIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4x
Ny5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvTWFrZWZpbGUgbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvcGx1Z2luL2ZpbGUvTWFrZWZpbGUKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNl
cjQvcGx1Z2luL2ZpbGUvTWFrZWZpbGUJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAx
MDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlL01ha2VmaWxlCTIwMjAt
MDItMDUgMjA6NTM6NDEuNDYzMjIyMjU1ICswMTAwCkBAIC0wLDAgKzEsNyBAQAorb2JqLSQoQ09O
RklHX1JFSVNFUjRfRlMpICs9IGZpbGVfcGx1Z2lucy5vCisKK2ZpbGVfcGx1Z2lucy1vYmpzIDo9
CQlcCisJZmlsZS5vCQkJXAorCXRhaWxfY29udmVyc2lvbi5vCVwKKwlzeW1saW5rLm8JCVwKKwlj
cnlwdGNvbXByZXNzLm8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZS9zeW1maWxlLmMgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvcGx1Z2luL2ZpbGUvc3ltZmlsZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0
L3BsdWdpbi9maWxlL3N5bWZpbGUuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEw
MAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvc3ltZmlsZS5jCTIwMjAt
MDItMDUgMjA6NTM6NDEuNDYzMjIyMjU1ICswMTAwCkBAIC0wLDAgKzEsODcgQEAKKy8qIENvcHly
aWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQg
YnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogU3ltZmlsZXMgYXJlIGEgZ2VuZXJhbGl6YXRpb24g
b2YgVW5peCBzeW1saW5rcy4KKworICAgQSBzeW1maWxlIHdoZW4gcmVhZCBiZWhhdmVzIGFzIHRo
b3VnaCB5b3UgdG9vayBpdHMgY29udGVudHMgYW5kCisgICBzdWJzdGl0dXRlZCB0aGVtIGludG8g
dGhlIHJlaXNlcjQgbmFtaW5nIHN5c3RlbSBhcyB0aGUgcmlnaHQgaGFuZCBzaWRlCisgICBvZiBh
biBhc3NpZ25tZW50LCBhbmQgdGhlbiByZWFkIHRoYXQgd2hpY2ggeW91IGhhZCBhc3NpZ25lZCB0
byBpdC4KKworICAgQSBrZXkgaXNzdWUgZm9yIHN5bWZpbGVzIGlzIGhvdyB0byBpbXBsZW1lbnQg
d3JpdGVzIHRocm91Z2ggdG8KKyAgIHN1YmZpbGVzLiAgSW4gZ2VuZXJhbCwgb25lIG11c3QgaGF2
ZSBzb21lIG1ldGhvZCBvZiBkZXRlcm1pbmluZyB3aGF0CisgICBvZiB0aGF0IHdoaWNoIGlzIHdy
aXR0ZW4gdG8gdGhlIHN5bWZpbGUgaXMgd3JpdHRlbiB0byB3aGF0IHN1YmZpbGUuCisgICBUaGlz
IGNhbiBiZSBkb25lIGJ5IHVzZSBvZiBjdXN0b20gcGx1Z2luIG1ldGhvZHMgd3JpdHRlbiBieSB1
c2Vycywgb3IKKyAgIGJ5IHVzaW5nIGEgZmV3IGdlbmVyYWwgbWV0aG9kcyB3ZSBwcm92aWRlIGZv
ciB0aG9zZSB3aWxsaW5nIHRvIGVuZHVyZQorICAgdGhlIGluc2VydGlvbiBvZiBkZWxpbWl0ZXJz
IGludG8gd2hhdCBpcyByZWFkLgorCisgICBXcml0aW5nIHRvIHN5bWZpbGVzIHdpdGhvdXQgZGVs
aW1pdGVycyB0byBkZW5vdGUgd2hhdCBpcyB3cml0dGVuIHRvCisgICB3aGF0IHN1YmZpbGUgaXMg
bm90IHN1cHBvcnRlZCBieSBhbnkgcGx1Z2lucyB3ZSBwcm92aWRlIGluIHRoaXMKKyAgIHJlbGVh
c2UuICBPdXIgbW9zdCBzb3BoaXN0aWNhdGVkIHN1cHBvcnQgZm9yIHdyaXRlcyBpcyB0aGF0IGVt
Ym9kaWVkCisgICBieSB0aGUgaW52ZXJ0IHBsdWdpbiAoc2VlIGludmVydC5jKS4KKworICAgQSBy
ZWFkIG9ubHkgdmVyc2lvbiBvZiB0aGUgL2V0Yy9wYXNzd2QgZmlsZSBtaWdodCBiZQorICAgY29u
c3RydWN0ZWQgYXMgYSBzeW1maWxlIHdob3NlIGNvbnRlbnRzIGFyZSBhcyBmb2xsb3dzOgorCisg
ICAvZXRjL3Bhc3N3ZC91c2VybGluZXMvKgorCisgICBvcgorCisgICAvZXRjL3Bhc3N3ZC91c2Vy
bGluZXMvZGVtaWRvdisvZXRjL3Bhc3N3ZC91c2VybGluZXMvZWR3YXJkKy9ldGMvcGFzc3dkL3Vz
ZXJsaW5lcy9yZWlzZXIrL2V0Yy9wYXNzd2QvdXNlcmxpbmVzL3Jvb3QKKworICAgb3IKKworICAg
L2V0Yy9wYXNzd2QvdXNlcmxpbmVzLyhkZW1pZG92K2Vkd2FyZCtyZWlzZXIrcm9vdCkKKworICAg
QSBzeW1maWxlIHdpdGggY29udGVudHMKKworICAgL2ZpbGVuYW1lQSsiKHNvbWUgdGV4dCBzdG9y
ZWQgaW4gdGhlIHVuaW52ZXJ0YWJsZSBzeW1maWxlKSsvZmlsZW5hbWVCCisKKyAgIHdpbGwgcmV0
dXJuIHdoZW4gcmVhZAorCisgICBUaGUgY29udGVudHMgb2YgZmlsZW5hbWVBc29tZSB0ZXh0IHN0
b3JlZCBpbiB0aGUgdW5pbnZlcnRhYmxlIHN5bWZpbGVUaGUgY29udGVudHMgb2YgZmlsZW5hbWVC
CisKKyAgIGFuZCB3cml0ZSBvZiB3aGF0IGhhcyBiZWVuIHJlYWQgd2lsbCBub3QgYmUgcG9zc2li
bGUgdG8gaW1wbGVtZW50IGFzCisgICBhbiBpZGVudGl0eSBvcGVyYXRpb24gYmVjYXVzZSB0aGVy
ZSBhcmUgbm8gZGVsaW1pdGVycyBkZW5vdGluZyB0aGUKKyAgIGJvdW5kYXJpZXMgb2Ygd2hhdCBp
cyB0byBiZSB3cml0dGVuIHRvIHdoYXQgc3ViZmlsZS4KKworICAgTm90ZSB0aGF0IG9uZSBjb3Vs
ZCBtYWtlIHRoaXMgYSByZWFkL3dyaXRlIHN5bWZpbGUgaWYgb25lIHNwZWNpZmllZAorICAgZGVs
aW1pdGVycywgYW5kIHRoZSB3cml0ZSBtZXRob2QgdW5kZXJzdG9vZCB0aG9zZSBkZWxpbWl0ZXJz
IGRlbGltaXRlZAorICAgd2hhdCB3YXMgd3JpdHRlbiB0byBzdWJmaWxlcy4KKworICAgU28sIHNw
ZWNpZnlpbmcgdGhlIHN5bWZpbGUgaW4gYSBtYW5uZXIgdGhhdCBhbGxvd3Mgd3JpdGVzOgorCisg
ICAvZXRjL3Bhc3N3ZC91c2VybGluZXMvZGVtaWRvdisiKAorICAgKSsvZXRjL3Bhc3N3ZC91c2Vy
bGluZXMvZWR3YXJkKyIoCisgICApKy9ldGMvcGFzc3dkL3VzZXJsaW5lcy9yZWlzZXIrIigKKyAg
ICkrL2V0Yy9wYXNzd2QvdXNlcmxpbmVzL3Jvb3QrIigKKyAgICkKKworICAgb3IKKworICAgL2V0
Yy9wYXNzd2QvdXNlcmxpbmVzLyhkZW1pZG92KyIoCisgICApK2Vkd2FyZCsiKAorICAgKStyZWlz
ZXIrIigKKyAgICkrcm9vdCsiKAorICAgKSkKKworICAgYW5kIHRoZSBmaWxlIGRlbWlkb3YgbWln
aHQgYmUgc3BlY2lmaWVkIGFzOgorCisgICAvZXRjL3Bhc3N3ZC91c2VybGluZXMvZGVtaWRvdi91
c2VybmFtZSsiKDopKy9ldGMvcGFzc3dkL3VzZXJsaW5lcy9kZW1pZG92L3Bhc3N3b3JkKyIoOikr
L2V0Yy9wYXNzd2QvdXNlcmxpbmVzL2RlbWlkb3YvdXNlcmlkKyIoOikrL2V0Yy9wYXNzd2QvdXNl
cmxpbmVzL2RlbWlkb3YvZ3JvdXBpZCsiKDopKy9ldGMvcGFzc3dkL3VzZXJsaW5lcy9kZW1pZG92
L2dlY29zKyIoOikrL2V0Yy9wYXNzd2QvdXNlcmxpbmVzL2RlbWlkb3YvaG9tZSsiKDopKy9ldGMv
cGFzc3dkL3VzZXJsaW5lcy9kZW1pZG92L3NoZWxsCisKKyAgIG9yCisKKyAgIC9ldGMvcGFzc3dk
L3VzZXJsaW5lcy9kZW1pZG92Lyh1c2VybmFtZSsiKDopK3Bhc3N3b3JkKyIoOikrdXNlcmlkKyIo
OikrZ3JvdXBpZCsiKDopK2dlY29zKyIoOikraG9tZSsiKDopK3NoZWxsKQorCisgICBOb3RpY2Ug
dGhhdCBpZiB0aGUgZmlsZSBkZW1pZG92IGhhcyBhIGNhcnJpYWdlIHJldHVybiBpbiBpdCwgdGhl
CisgICBwYXJzaW5nIGZhaWxzLCBidXQgdGhlbiBpZiB5b3UgcHV0IGNhcnJpYWdlIHJldHVybnMg
aW4gdGhlIHdyb25nIHBsYWNlCisgICBpbiBhIG5vcm1hbCAvZXRjL3Bhc3N3ZCBmaWxlIGl0IGJy
ZWFrcyB0aGluZ3MgYWxzby4KKworICAgTm90ZSB0aGF0IGl0IGlzIGZvcmJpZGRlbiB0byBoYXZl
IG5vIHRleHQgYmV0d2VlbiB0d28gaW50ZXJwb2xhdGlvbnMKKyAgIGlmIG9uZSB3YW50cyB0byBi
ZSBhYmxlIHRvIGRlZmluZSB3aGF0IHBhcnRzIG9mIGEgd3JpdGUgZ28gdG8gd2hhdAorICAgc3Vi
ZmlsZXMgcmVmZXJlbmNlZCBpbiBhbiBpbnRlcnBvbGF0aW9uLgorCisgICBJZiBvbmUgd2FudHMg
dG8gYmUgYWJsZSB0byBhZGQgbmV3IGxpbmVzIGJ5IHdyaXRpbmcgdG8gdGhlIGZpbGUsIG9uZQor
ICAgbXVzdCBlaXRoZXIgd3JpdGUgYSBjdXN0b20gcGx1Z2luIGZvciAvZXRjL3Bhc3N3ZCB0aGF0
IGtub3dzIGhvdyB0bworICAgbmFtZSBhbiBhZGRlZCBsaW5lLCBvciBvbmUgbXVzdCB1c2UgYW4g
aW52ZXJ0LCBvciBvbmUgbXVzdCB1c2UgYSBtb3JlCisgICBzb3BoaXN0aWNhdGVkIHN5bWZpbGUg
c3ludGF4IHRoYXQgd2UgYXJlIG5vdCBwbGFubmluZyB0byB3cml0ZSBmb3IKKyAgIHZlcnNpb24g
NC4wLgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMv
cmVpc2VyNC9wbHVnaW4vZmlsZS9zeW1saW5rLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1
Z2luL2ZpbGUvc3ltbGluay5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9maWxlL3N5bWxpbmsuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvc3ltbGluay5jCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDYzMjIyMjU1ICswMTAwCkBAIC0wLDAgKzEsOTUgQEAKKy8qIENvcHlyaWdodCAy
MDAyLCAyMDAzLCAyMDA1IGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVp
c2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUgIi4uLy4uL2lub2RlLmgiCisKKyNpbmNsdWRlIDxs
aW51eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CisKKy8qIGZpbGUgcGx1Z2luIG1l
dGhvZHMgc3BlY2lmaWMgZm9yIHN5bWxpbmsgZmlsZXMKKyAgIChTWU1MSU5LX0ZJTEVfUExVR0lO
X0lEKSAqLworCisvKiB0aGlzIGlzIGltcGxlbWVudGF0aW9uIG9mIGNyZWF0ZV9vYmplY3QgbWV0
aG9kIG9mIGZpbGUgcGx1Z2luIGZvcgorICAgU1lNTElOS19GSUxFX1BMVUdJTl9JRAorICovCisK
Ky8qKgorICogcmVpc2VyNF9jcmVhdGVfc3ltbGluayAtIGNyZWF0ZV9vYmplY3Qgb2YgZmlsZSBw
bHVnaW4gZm9yIFNZTUxJTktfRklMRV9QTFVHSU5fSUQKKyAqIEBzeW1saW5rOiBpbm9kZSBvZiBz
eW1saW5rIG9iamVjdAorICogQGRpcjogaW5vZGUgb2YgcGFyZW50IGRpcmVjdG9yeQorICogQGlu
Zm86ICBwYXJhbWV0ZXJzIG9mIG5ldyBvYmplY3QKKyAqCisgKiBJbnNlcnRzIHN0YXQgZGF0YSB3
aXRoIHN5bWxpbmsgZXh0ZW5zaW9uIHdoZXJlIGludG8gdGhlIHRyZWUuCisgKi8KK2ludCByZWlz
ZXI0X2NyZWF0ZV9zeW1saW5rKHN0cnVjdCBpbm9kZSAqc3ltbGluaywKKwkJCSAgIHN0cnVjdCBp
bm9kZSAqZGlyIFVOVVNFRF9BUkcsCisJCQkgICByZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAq
ZGF0YSAvKiBpbmZvIHBhc3NlZCB0byB1cworCQkJCQkJCSAgICAgKiB0aGlzIGlzIGZpbGxlZCBi
eQorCQkJCQkJCSAgICAgKiByZWlzZXI0KCkgc3lzY2FsbAorCQkJCQkJCSAgICAgKiBpbiBwYXJ0
aWN1bGFyICovKQoreworCWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS02ODAiLCBzeW1s
aW5rICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTY4MSIsIFNfSVNMTksoc3ltbGluay0+aV9t
b2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtNjg1IiwgcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhzeW1s
aW5rLCBSRUlTRVI0X05PX1NEKSk7CisJYXNzZXJ0KCJuaWtpdGEtNjgyIiwgZGlyICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTY4NCIsIGRhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEt
Njg2IiwgZGF0YS0+aWQgPT0gU1lNTElOS19GSUxFX1BMVUdJTl9JRCk7CisKKwkvKgorCSAqIHN0
YXQgZGF0YSBvZiBzeW1saW5rIGhhcyBzeW1saW5rIGV4dGVuc2lvbiBpbiB3aGljaCB3ZSBzdG9y
ZQorCSAqIHN5bWxpbmsgY29udGVudCwgdGhhdCBpcywgcGF0aCBzeW1saW5rIGlzIHBvaW50aW5n
IHRvLgorCSAqLworCXJlaXNlcjRfaW5vZGVfZGF0YShzeW1saW5rKS0+ZXh0bWFzayB8PSAoMSA8
PCBTWU1MSU5LX1NUQVQpOworCisJYXNzZXJ0KCJ2cy04MzgiLCBzeW1saW5rLT5pX3ByaXZhdGUg
PT0gTlVMTCk7CisJc3ltbGluay0+aV9wcml2YXRlID0gKHZvaWQgKilkYXRhLT5uYW1lOworCisJ
YXNzZXJ0KCJ2cy04NDMiLCBzeW1saW5rLT5pX3NpemUgPT0gMCk7CisJSU5PREVfU0VUX0ZJRUxE
KHN5bWxpbmssIGlfc2l6ZSwgc3RybGVuKGRhdGEtPm5hbWUpKTsKKworCS8qIGluc2VydCBzdGF0
IGRhdGEgYXBwZW5kZWQgd2l0aCBkYXRhLT5uYW1lICovCisJcmVzdWx0ID0gaW5vZGVfZmlsZV9w
bHVnaW4oc3ltbGluayktPndyaXRlX3NkX2J5X2lub2RlKHN5bWxpbmspOworCWlmIChyZXN1bHQp
IHsKKwkJLyogRklYTUUtVlM6IE1ha2Ugc3VyZSB0aGF0IHN5bWxpbmstPmlfcHJpdmF0ZSBpcyBu
b3QgYXR0YWNoZWQKKwkJICAgdG8ga21hbGxvY2VkIGRhdGEgKi8KKwkJSU5PREVfU0VUX0ZJRUxE
KHN5bWxpbmssIGlfc2l6ZSwgMCk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ2cy04NDkiLCBzeW1s
aW5rLT5pX3ByaXZhdGUKKwkJICAgICAgICYmIHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoc3ltbGlu
aywKKwkJCQkJCSBSRUlTRVI0X0dFTkVSSUNfUFRSX1VTRUQpKTsKKwkJYXNzZXJ0KCJ2cy04NTAi
LAorCQkgICAgICAgIW1lbWNtcCgoY2hhciAqKXN5bWxpbmstPmlfcHJpdmF0ZSwgZGF0YS0+bmFt
ZSwKKwkJCSAgICAgICAoc2l6ZV90KSBzeW1saW5rLT5pX3NpemUgKyAxKSk7CisJfQorCXJldHVy
biByZXN1bHQ7Cit9CisKKy8qIHRoaXMgaXMgaW1wbGVtZW50YXRpb24gb2YgZGVzdHJveV9pbm9k
ZSBtZXRob2Qgb2YgZmlsZSBwbHVnaW4gZm9yCisgICBTWU1MSU5LX0ZJTEVfUExVR0lOX0lECisg
Ki8KK3ZvaWQgZGVzdHJveV9pbm9kZV9zeW1saW5rKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJ
YXNzZXJ0KCJlZHdhcmQtNzk5IiwKKwkgICAgICAgaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpID09
CisJICAgICAgIGZpbGVfcGx1Z2luX2J5X2lkKFNZTUxJTktfRklMRV9QTFVHSU5fSUQpKTsKKwlh
c3NlcnQoImVkd2FyZC04MDAiLCAhaXNfYmFkX2lub2RlKGlub2RlKSAmJiBpc19pbm9kZV9sb2Fk
ZWQoaW5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC04MDEiLCByZWlzZXI0X2lub2RlX2dldF9mbGFn
KGlub2RlLAorCQkJCQkJICAgIFJFSVNFUjRfR0VORVJJQ19QVFJfVVNFRCkpOworCWFzc2VydCgi
dnMtODM5IiwgU19JU0xOSyhpbm9kZS0+aV9tb2RlKSk7CisKKwlrZnJlZShpbm9kZS0+aV9wcml2
YXRlKTsKKwlpbm9kZS0+aV9wcml2YXRlID0gTlVMTDsKKwlyZWlzZXI0X2lub2RlX2Nscl9mbGFn
KGlub2RlLCBSRUlTRVI0X0dFTkVSSUNfUFRSX1VTRUQpOworfQorCisvKgorICBMb2NhbCB2YXJp
YWJsZXM6CisgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgIG1vZGUtbmFtZTogIkxDIgor
ICBjLWJhc2ljLW9mZnNldDogOAorICB0YWItd2lkdGg6IDgKKyAgZmlsbC1jb2x1bW46IDgwCisg
IHNjcm9sbC1zdGVwOiAxCisgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvdGFpbF9jb252ZXJzaW9uLmMg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvdGFpbF9jb252ZXJzaW9uLmMKLS0t
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGUvdGFpbF9jb252ZXJzaW9u
LmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9m
cy9yZWlzZXI0L3BsdWdpbi9maWxlL3RhaWxfY29udmVyc2lvbi5jCTIwMjAtMDItMDUgMjA6NTM6
NDEuNDYzMjIyMjU1ICswMTAwCkBAIC0wLDAgKzEsNzYzIEBACisvKiBDb3B5cmlnaHQgMjAwMSwg
MjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQv
UkVBRE1FICovCisKKyNpbmNsdWRlICIuLi8uLi9pbm9kZS5oIgorI2luY2x1ZGUgIi4uLy4uL3N1
cGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vcGFnZV9jYWNoZS5oIgorI2luY2x1ZGUgIi4uLy4uL2Nh
cnJ5LmgiCisjaW5jbHVkZSAiLi4vLi4vc2FmZV9saW5rLmgiCisjaW5jbHVkZSAiLi4vLi4vdmZz
X29wcy5oIgorCisjaW5jbHVkZSA8bGludXgvd3JpdGViYWNrLmg+CisKKy8qIHRoaXMgZmlsZSBj
b250YWluczoKKyAgIHRhaWwyZXh0ZW50IGFuZCBleHRlbnQydGFpbCAqLworCisvKiBleGNsdXNp
dmUgYWNjZXNzIHRvIGEgZmlsZSBpcyBhY3F1aXJlZCB3aGVuIGZpbGUgc3RhdGUgY2hhbmdlczog
dGFpbDJleHRlbnQsIGVtcHR5MnRhaWwsIGV4dGVudDJ0YWlsLCBldGMgKi8KK3ZvaWQgZ2V0X2V4
Y2x1c2l2ZV9hY2Nlc3Moc3RydWN0IHVuaXhfZmlsZV9pbmZvICogdWZfaW5mbykKK3sKKwlhc3Nl
cnQoIm5pa2l0YS0zMDI4IiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKwlhc3NlcnQoIm5pa2l0
YS0zMDQ3IiwgTE9DS19DTlRfTklMKGlub2RlX3NlbV93KSk7CisJYXNzZXJ0KCJuaWtpdGEtMzA0
OCIsIExPQ0tfQ05UX05JTChpbm9kZV9zZW1fcikpOworCS8qCisJICogImRlYWRsb2NrIGF2b2lk
YW5jZSI6IHNvbWV0aW1lcyB3ZSBjb21taXQgYSB0cmFuc2FjdGlvbiB1bmRlcgorCSAqIHJ3LXNl
bWFwaG9yZSBvbiBhIGZpbGUuIFN1Y2ggY29tbWl0IGNhbiBkZWFkbG9jayB3aXRoIGFub3RoZXIK
KwkgKiB0aHJlYWQgdGhhdCBjYXB0dXJlZCBzb21lIGJsb2NrIChoZW5jZSBwcmV2ZW50aW5nIGF0
b20gZnJvbSBiZWluZworCSAqIGNvbW1pdHRlZCkgYW5kIHdhaXRzIG9uIHJ3LXNlbWFwaG9yZS4K
KwkgKi8KKwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsKKwlMT0NLX0NOVF9JTkMoaW5v
ZGVfc2VtX3cpOworCWRvd25fd3JpdGUoJnVmX2luZm8tPmxhdGNoKTsKKwl1Zl9pbmZvLT5leGNs
dXNpdmVfdXNlID0gMTsKKwlhc3NlcnQoInZzLTE3MTMiLCB1Zl9pbmZvLT5lYV9vd25lciA9PSBO
VUxMKTsKKwlhc3NlcnQoInZzLTE3MTMiLCBhdG9taWNfcmVhZCgmdWZfaW5mby0+bnJfbmVhcykg
PT0gMCk7CisJT05fREVCVUcodWZfaW5mby0+ZWFfb3duZXIgPSBjdXJyZW50KTsKK30KKwordm9p
ZCBkcm9wX2V4Y2x1c2l2ZV9hY2Nlc3Moc3RydWN0IHVuaXhfZmlsZV9pbmZvICogdWZfaW5mbykK
K3sKKwlhc3NlcnQoInZzLTE3MTQiLCB1Zl9pbmZvLT5lYV9vd25lciA9PSBjdXJyZW50KTsKKwlh
c3NlcnQoInZzLTE3MTUiLCBhdG9taWNfcmVhZCgmdWZfaW5mby0+bnJfbmVhcykgPT0gMCk7CisJ
T05fREVCVUcodWZfaW5mby0+ZWFfb3duZXIgPSBOVUxMKTsKKwl1Zl9pbmZvLT5leGNsdXNpdmVf
dXNlID0gMDsKKwl1cF93cml0ZSgmdWZfaW5mby0+bGF0Y2gpOworCWFzc2VydCgibmlraXRhLTMw
NDkiLCBMT0NLX0NOVF9OSUwoaW5vZGVfc2VtX3IpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDQ5Iiwg
TE9DS19DTlRfR1RaKGlub2RlX3NlbV93KSk7CisJTE9DS19DTlRfREVDKGlub2RlX3NlbV93KTsK
KwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsKK30KKworLyoqCisgKiBuZWFfZ3JhYmJl
ZCAtIGRvIHNvbWV0aGluZyB3aGVuIGZpbGUgc2VtYXBob3JlIGlzIGRvd25fcmVhZC1lZAorICog
QHVmX2luZm86CisgKgorICogVGhpcyBpcyBjYWxsZWQgd2hlbiBub25leGNsaXNpdmUgYWNjZXNz
IGlzIG9idGFpbmVkIG9uIGZpbGUuIEFsbCBpdCBkb2VzIGlzCisgKiBmb3IgZGVidWdnaW5nIHB1
cnBvc2VzLgorICovCitzdGF0aWMgdm9pZCBuZWFfZ3JhYmJlZChzdHJ1Y3QgdW5peF9maWxlX2lu
Zm8gKnVmX2luZm8pCit7CisjaWYgUkVJU0VSNF9ERUJVRworCUxPQ0tfQ05UX0lOQyhpbm9kZV9z
ZW1fcik7CisJYXNzZXJ0KCJ2cy0xNzE2IiwgdWZfaW5mby0+ZWFfb3duZXIgPT0gTlVMTCk7CisJ
YXRvbWljX2luYygmdWZfaW5mby0+bnJfbmVhcyk7CisJdWZfaW5mby0+bGFzdF9yZWFkZXIgPSBj
dXJyZW50OworI2VuZGlmCit9CisKKy8qKgorICogZ2V0X25vbmV4Y2x1c2l2ZV9hY2Nlc3MgLSBn
ZXQgbm9uZXhjbHVzaXZlIGFjY2VzcyB0byBhIGZpbGUKKyAqIEB1Zl9pbmZvOiB1bml4IGZpbGUg
c3BlY2lmaWMgcGFydCBvZiBpbm9kZSB0byBvYnRhaW4gYWNjZXNzIHRvCisgKgorICogTm9uZXhj
bHVzaXZlIGFjY2VzcyBpcyBvYnRhaW5lZCBvbiBhIGZpbGUgYmVmb3JlIHJlYWQsIHdyaXRlLCBy
ZWFkcGFnZS4KKyAqLwordm9pZCBnZXRfbm9uZXhjbHVzaXZlX2FjY2VzcyhzdHJ1Y3QgdW5peF9m
aWxlX2luZm8gKnVmX2luZm8pCit7CisJYXNzZXJ0KCJuaWtpdGEtMzAyOSIsIHJlaXNlcjRfc2No
ZWR1bGFibGUoKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzM2MSIsIGdldF9jdXJyZW50X2NvbnRleHQo
KS0+dHJhbnMtPmF0b20gPT0gTlVMTCk7CisKKwlkb3duX3JlYWQoJnVmX2luZm8tPmxhdGNoKTsK
KwluZWFfZ3JhYmJlZCh1Zl9pbmZvKTsKK30KKworLyoqCisgKiB0cnlfdG9fZ2V0X25vbmV4Y2x1
c2l2ZV9hY2Nlc3MgLSB0cnkgdG8gZ2V0IG5vbmV4Y2x1c2l2ZSBhY2Nlc3MgdG8gYSBmaWxlCisg
KiBAdWZfaW5mbzogdW5peCBmaWxlIHNwZWNpZmljIHBhcnQgb2YgaW5vZGUgdG8gb2J0YWluIGFj
Y2VzcyB0bworICoKKyAqIE5vbi1ibG9ja2luZyB2ZXJzaW9uIG9mIG5vbmV4Y2x1c2l2ZSBhY2Nl
c3Mgb2J0YWluaW5nLgorICovCitpbnQgdHJ5X3RvX2dldF9ub25leGNsdXNpdmVfYWNjZXNzKHN0
cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbykKK3sKKwlpbnQgcmVzdWx0OworCisJcmVzdWx0
ID0gZG93bl9yZWFkX3RyeWxvY2soJnVmX2luZm8tPmxhdGNoKTsKKwlpZiAocmVzdWx0KQorCQlu
ZWFfZ3JhYmJlZCh1Zl9pbmZvKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCit2b2lkIGRyb3Bfbm9u
ZXhjbHVzaXZlX2FjY2VzcyhzdHJ1Y3QgdW5peF9maWxlX2luZm8gKiB1Zl9pbmZvKQoreworCWFz
c2VydCgidnMtMTcxOCIsIHVmX2luZm8tPmVhX293bmVyID09IE5VTEwpOworCWFzc2VydCgidnMt
MTcxOSIsIGF0b21pY19yZWFkKCZ1Zl9pbmZvLT5ucl9uZWFzKSA+IDApOworCU9OX0RFQlVHKGF0
b21pY19kZWMoJnVmX2luZm8tPm5yX25lYXMpKTsKKworCXVwX3JlYWQoJnVmX2luZm8tPmxhdGNo
KTsKKworCUxPQ0tfQ05UX0RFQyhpbm9kZV9zZW1fcik7CisJcmVpc2VyNF90eG5fcmVzdGFydF9j
dXJyZW50KCk7Cit9CisKKy8qIHBhcnQgb2YgdGFpbDJleHRlbnQuIEN1dCBhbGwgaXRlbXMgY292
ZXJpbmcgQGNvdW50IGJ5dGVzIHN0YXJ0aW5nIGZyb20KKyAgIEBvZmZzZXQgKi8KKy8qIEF1ZGl0
ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTUpICovCitzdGF0aWMgaW50IGN1dF9mb3JtYXR0aW5nX2l0
ZW1zKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBvZmZzZXQsIGludCBjb3VudCkKK3sKKwly
ZWlzZXI0X2tleSBmcm9tLCB0bzsKKworCS8qIEFVRElUOiBIb3cgYWJvdXQgcHV0dGluZyBhbiBh
c3NlcnRpb24gaGVyZSwgd2hhdCB3b3VsZCBjaGVjaworCSAgIGFsbCBwcm92aWRlZCByYW5nZSBp
cyBjb3ZlcmVkIGJ5IHRhaWwgaXRlbXMgb25seT8gKi8KKwkvKiBrZXkgb2YgZmlyc3QgYnl0ZSBp
biB0aGUgcmFuZ2UgdG8gYmUgY3V0ICAqLworCWlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKS0+a2V5
X2J5X2lub2RlKGlub2RlLCBvZmZzZXQsICZmcm9tKTsKKworCS8qIGtleSBvZiBsYXN0IGJ5dGUg
aW4gdGhhdCByYW5nZSAqLworCXRvID0gZnJvbTsKKwlzZXRfa2V5X29mZnNldCgmdG8sIChfX3U2
NCkgKG9mZnNldCArIGNvdW50IC0gMSkpOworCisJLyogY3V0IGV2ZXJ5dGhpbmcgYmV0d2VlbiB0
aG9zZSBrZXlzICovCisJcmV0dXJuIHJlaXNlcjRfY3V0X3RyZWUocmVpc2VyNF90cmVlX2J5X2lu
b2RlKGlub2RlKSwgJmZyb20sICZ0bywKKwkJCQlpbm9kZSwgMCk7Cit9CisKK3N0YXRpYyB2b2lk
IHJlbGVhc2VfYWxsX3BhZ2VzKHN0cnVjdCBwYWdlICoqcGFnZXMsIHVuc2lnbmVkIG5yX3BhZ2Vz
KQoreworCXVuc2lnbmVkIGk7CisKKwlmb3IgKGkgPSAwOyBpIDwgbnJfcGFnZXM7IGkrKykgewor
CQlpZiAocGFnZXNbaV0gPT0gTlVMTCkgeworI2lmIFJFSVNFUjRfREVCVUcKKwkJCXVuc2lnbmVk
IGo7CisJCQlmb3IgKGogPSBpICsgMTsgaiA8IG5yX3BhZ2VzOyBqKyspCisJCQkJYXNzZXJ0KCJ2
cy0xNjIwIiwgcGFnZXNbal0gPT0gTlVMTCk7CisjZW5kaWYKKwkJCWJyZWFrOworCQl9CisJCXB1
dF9wYWdlKHBhZ2VzW2ldKTsKKwkJcGFnZXNbaV0gPSBOVUxMOworCX0KK30KKworLyogcGFydCBv
ZiB0YWlsMmV4dGVudC4gcmVwbGFjZSB0YWlsIGl0ZW1zIHdpdGggZXh0ZW50IG9uZS4gQ29udGVu
dCBvZiB0YWlsCisgICBpdGVtcyAoQGNvdW50IGJ5dGVzKSBiZWluZyBjdXQgYXJlIGNvcGllZCBh
bHJlYWR5IGludG8KKyAgIHBhZ2VzLiBleHRlbnRfd3JpdGVwYWdlIG1ldGhvZCBpcyBjYWxsZWQg
dG8gY3JlYXRlIGV4dGVudHMgY29ycmVzcG9uZGluZyB0bworICAgdGhvc2UgcGFnZXMgKi8KK3N0
YXRpYyBpbnQgcmVwbGFjZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgcGFnZSAqKnBhZ2Vz
LCB1bnNpZ25lZCBucl9wYWdlcywgaW50IGNvdW50KQoreworCWludCByZXN1bHQ7CisJdW5zaWdu
ZWQgaTsKKwlTVE9SRV9DT1VOVEVSUzsKKworCWlmIChucl9wYWdlcyA9PSAwKQorCQlyZXR1cm4g
MDsKKworCWFzc2VydCgidnMtNTk2IiwgcGFnZXNbMF0pOworCisJLyogY3V0IGNvcGllZCBpdGVt
cyAqLworCXJlc3VsdCA9IGN1dF9mb3JtYXR0aW5nX2l0ZW1zKGlub2RlLCBwYWdlX29mZnNldChw
YWdlc1swXSksIGNvdW50KTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCisJQ0hF
Q0tfQ09VTlRFUlM7CisKKwkvKiBwdXQgaW50byB0cmVlIHJlcGxhY2VtZW50IGZvciBqdXN0IHJl
bW92ZWQgaXRlbXM6IGV4dGVudCBpdGVtLCBuYW1lbHkgKi8KKwlmb3IgKGkgPSAwOyBpIDwgbnJf
cGFnZXM7IGkrKykgeworCQlyZXN1bHQgPSBhZGRfdG9fcGFnZV9jYWNoZV9scnUocGFnZXNbaV0s
IGlub2RlLT5pX21hcHBpbmcsCisJCQkJCSAgICAgICBwYWdlc1tpXS0+aW5kZXgsCisJCQkJCSAg
ICAgICBtYXBwaW5nX2dmcF9tYXNrKGlub2RlLT4KKwkJCQkJCQkJaV9tYXBwaW5nKSk7CisJCWlm
IChyZXN1bHQpCisJCQlicmVhazsKKwkJU2V0UGFnZVVwdG9kYXRlKHBhZ2VzW2ldKTsKKwkJc2V0
X3BhZ2VfZGlydHlfbm90YWcocGFnZXNbaV0pOworCQl1bmxvY2tfcGFnZShwYWdlc1tpXSk7CisJ
CXJlc3VsdCA9IGZpbmRfb3JfY3JlYXRlX2V4dGVudChwYWdlc1tpXSk7CisJCWlmIChyZXN1bHQp
IHsKKwkJCS8qCisJCQkgKiBVbnN1Y2Nlc3MgaW4gY3JpdGljYWwgcGxhY2U6CisJCQkgKiB0YWls
IGhhcyBiZWVuIHJlbW92ZWQsCisJCQkgKiBidXQgZXh0ZW50IGhhc24ndCBiZWVuIGNyZWF0ZWQK
KwkJCSAqLworCQkJd2FybmluZygiZWR3YXJkLTE1NzIiLAorCQkJIlJlcG9ydCB0aGUgZXJyb3Ig
Y29kZSAlaSB0byBkZXZlbG9wZXJzLiBSdW4gRlNDSyIsCisJCQkJcmVzdWx0KTsKKwkJCWJyZWFr
OworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKyNkZWZpbmUgVEFJTDJFWFRFTlRfUEFH
RV9OVU0gMwkvKiBudW1iZXIgb2YgcGFnZXMgdG8gZmlsbCBiZWZvcmUgY3V0dGluZyB0YWlsCisJ
CQkJICogaXRlbXMgKi8KKworc3RhdGljIGludCByZXNlcnZlX3RhaWwyZXh0ZW50X2l0ZXJhdGlv
bihzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJlaXNlcjRfYmxvY2tfbnIgdW5mb3JtYXR0ZWRf
bm9kZXM7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJdHJlZSA9IHJlaXNlcjRfdHJlZV9ieV9p
bm9kZShpbm9kZSk7CisKKwkvKiBudW1iZXIgb2YgdW5mb3JtYXR0ZWQgbm9kZXMgd2hpY2ggd2ls
bCBiZSBjcmVhdGVkICovCisJdW5mb3JtYXR0ZWRfbm9kZXMgPSBUQUlMMkVYVEVOVF9QQUdFX05V
TTsKKworCS8qCisJICogc3BhY2UgcmVxdWlyZWQgZm9yIG9uZSBpdGVyYXRpb24gb2YgZXh0ZW50
LT50YWlsIGNvbnZlcnNpb246CisJICoKKwkgKiAgICAgMS4ga2lsbCBOIHRhaWwgaXRlbXMKKwkg
KgorCSAqICAgICAyLiBpbnNlcnQgVEFJTDJFWFRFTlRfUEFHRV9OVU0gdW5mb3JtYXR0ZWQgbm9k
ZXMKKwkgKgorCSAqICAgICAzLiBpbnNlcnQgVEFJTDJFWFRFTlRfUEFHRV9OVU0gKHdvcnN0LWNh
c2Ugc2luZ2xlLWJsb2NrCisJICogICAgIGV4dGVudHMpIGV4dGVudCB1bml0cy4KKwkgKgorCSAq
ICAgICA0LiBkcmlsbGluZyB0byB0aGUgbGVhZiBsZXZlbCBieSBjb29yZF9ieV9rZXkoKQorCSAq
CisJICogICAgIDUuIHBvc3NpYmxlIHVwZGF0ZSBvZiBzdGF0LWRhdGEKKwkgKgorCSAqLworCWdy
YWJfc3BhY2VfZW5hYmxlKCk7CisJcmV0dXJuIHJlaXNlcjRfZ3JhYl9zcGFjZQorCSAgICAoMiAq
IHRyZWUtPmhlaWdodCArCisJICAgICBUQUlMMkVYVEVOVF9QQUdFX05VTSArCisJICAgICBUQUlM
MkVYVEVOVF9QQUdFX05VTSAqIGVzdGltYXRlX29uZV9pbnNlcnRfaW50b19pdGVtKHRyZWUpICsK
KwkgICAgIDEgKyBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2l0ZW0odHJlZSkgKworCSAgICAgaW5vZGVf
ZmlsZV9wbHVnaW4oaW5vZGUpLT5lc3RpbWF0ZS51cGRhdGUoaW5vZGUpLCBCQV9DQU5fQ09NTUlU
KTsKK30KKworLyogY2xlYXIgc3RhdCBkYXRhJ3MgZmxhZyBpbmRpY2F0aW5nIHRoYXQgY29udmVy
c2lvbiBpcyBiZWluZyBjb252ZXJ0ZWQgKi8KK3N0YXRpYyBpbnQgY29tcGxldGVfY29udmVyc2lv
bihzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWludCByZXN1bHQ7CisKKwlncmFiX3NwYWNlX2Vu
YWJsZSgpOworCXJlc3VsdCA9CisJICAgIHJlaXNlcjRfZ3JhYl9zcGFjZShpbm9kZV9maWxlX3Bs
dWdpbihpbm9kZSktPmVzdGltYXRlLnVwZGF0ZShpbm9kZSksCisJCQkgICAgICAgQkFfQ0FOX0NP
TU1JVCk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCXJlaXNlcjRfaW5vZGVfY2xyX2ZsYWcoaW5v
ZGUsIFJFSVNFUjRfUEFSVF9NSVhFRCk7CisJCXJlc3VsdCA9IHJlaXNlcjRfdXBkYXRlX3NkKGlu
b2RlKTsKKwl9CisJaWYgKHJlc3VsdCkKKwkJd2FybmluZygidnMtMTY5NiIsICJGYWlsZWQgdG8g
Y2xlYXIgY29udmVydGluZyBiaXQgb2YgJWxsdTogJWkiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9u
ZylnZXRfaW5vZGVfb2lkKGlub2RlKSwgcmVzdWx0KTsKKwlyZXR1cm4gMDsKK30KKworLyoqCisg
KiBmaW5kX3N0YXJ0CisgKiBAaW5vZGU6CisgKiBAaWQ6CisgKiBAb2Zmc2V0OgorICoKKyAqIHRo
aXMgaXMgdXNlZCBieSB0YWlsMmV4dGVudCBhbmQgZXh0ZW50MnRhaWwgdG8gZGV0ZWN0IHdoZXJl
IHByZXZpb3VzCisgKiB1bmNvbXBsZXRlZCBjb252ZXJzaW9uIHN0b3BwZWQKKyAqLworc3RhdGlj
IGludCBmaW5kX3N0YXJ0KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHJlaXNlcjRfcGx1Z2luX2lkIGlk
LCBfX3U2NCAqb2Zmc2V0KQoreworCWludCByZXN1bHQ7CisJbG9ja19oYW5kbGUgbGg7CisJY29v
cmRfdCBjb29yZDsKKwlzdHJ1Y3QgdW5peF9maWxlX2luZm8gKnVmbzsKKwlpbnQgZm91bmQ7CisJ
cmVpc2VyNF9rZXkga2V5OworCisJdWZvID0gdW5peF9maWxlX2lub2RlX2RhdGEoaW5vZGUpOwor
CWluaXRfbGgoJmxoKTsKKwlyZXN1bHQgPSAwOworCWZvdW5kID0gMDsKKwlpbm9kZV9maWxlX3Bs
dWdpbihpbm9kZSktPmtleV9ieV9pbm9kZShpbm9kZSwgKm9mZnNldCwgJmtleSk7CisJZG8gewor
CQlpbml0X2xoKCZsaCk7CisJCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVtX25vaGludCgmY29vcmQs
ICZsaCwgJmtleSwKKwkJCQkJICAgICAgIFpOT0RFX1JFQURfTE9DSywgaW5vZGUpOworCisJCWlm
IChyZXN1bHQgPT0gQ0JLX0NPT1JEX0ZPVU5EKSB7CisJCQlpZiAoY29vcmQuYmV0d2VlbiA9PSBB
VF9VTklUKSB7CisJCQkJLypjb29yZF9jbGVhcl9pcGx1ZygmY29vcmQpOyAqLworCQkJCXJlc3Vs
dCA9IHpsb2FkKGNvb3JkLm5vZGUpOworCQkJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJCQlpZiAo
aXRlbV9pZF9ieV9jb29yZCgmY29vcmQpID09IGlkKQorCQkJCQkJZm91bmQgPSAxOworCQkJCQll
bHNlCisJCQkJCQlpdGVtX3BsdWdpbl9ieV9jb29yZCgmY29vcmQpLT5zLgorCQkJCQkJICAgIGZp
bGUuYXBwZW5kX2tleSgmY29vcmQsCisJCQkJCQkJCSAgICAma2V5KTsKKwkJCQkJenJlbHNlKGNv
b3JkLm5vZGUpOworCQkJCX0KKwkJCX0gZWxzZQorCQkJCXJlc3VsdCA9IFJFVEVSUigtRU5PRU5U
KTsKKwkJfQorCQlkb25lX2xoKCZsaCk7CisJfSB3aGlsZSAocmVzdWx0ID09IDAgJiYgIWZvdW5k
KTsKKwkqb2Zmc2V0ID0gZ2V0X2tleV9vZmZzZXQoJmtleSk7CisJcmV0dXJuIHJlc3VsdDsKK30K
KworLyoqCisgKiB0YWlsMmV4dGVudAorICogQHVmX2luZm86CisgKgorICoKKyAqLworaW50IHRh
aWwyZXh0ZW50KHN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbykKK3sKKwlpbnQgcmVzdWx0
OworCXJlaXNlcjRfa2V5IGtleTsJLyoga2V5IG9mIG5leHQgYnl0ZSB0byBiZSBtb3ZlZCB0byBw
YWdlICovCisJY2hhciAqcF9kYXRhOwkJLyogZGF0YSBvZiBwYWdlICovCisJdW5zaWduZWQgcGFn
ZV9vZmYgPSAwLAkvKiBvZmZzZXQgd2l0aGluIHRoZSBwYWdlIHdoZXJlIHRvIGNvcHkgZGF0YSAq
LworCSAgICBjb3VudDsJCS8qIG51bWJlciBvZiBieXRlcyBvZiBpdGVtIHdoaWNoIGNhbiBiZQor
CQkJCSAqIGNvcGllZCB0byBwYWdlICovCisJc3RydWN0IHBhZ2UgKnBhZ2VzW1RBSUwyRVhURU5U
X1BBR0VfTlVNXTsKKwlzdHJ1Y3QgcGFnZSAqcGFnZTsKKwlpbnQgZG9uZTsJCS8qIHNldCB0byAx
IHdoZW4gYWxsIGZpbGUgaXMgcmVhZCAqLworCWNoYXIgKml0ZW07CisJaW50IGk7CisJc3RydWN0
IGlub2RlICppbm9kZTsKKwlpbnQgZmlyc3RfaXRlcmF0aW9uOworCWludCBieXRlczsKKwlfX3U2
NCBvZmZzZXQ7CisKKwlhc3NlcnQoIm5pa2l0YS0zMzYyIiwgZWFfb2J0YWluZWQodWZfaW5mbykp
OworCWlub2RlID0gdW5peF9maWxlX2luZm9fdG9faW5vZGUodWZfaW5mbyk7CisJYXNzZXJ0KCJu
aWtpdGEtMzQxMiIsICFJU19SRE9OTFkoaW5vZGUpKTsKKwlhc3NlcnQoInZzLTE2NDkiLCB1Zl9p
bmZvLT5jb250YWluZXIgIT0gVUZfQ09OVEFJTkVSX0VYVEVOVFMpOworCWFzc2VydCgiIiwgIXJl
aXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfUEFSVF9JTl9DT05WKSk7CisKKwlv
ZmZzZXQgPSAwOworCWZpcnN0X2l0ZXJhdGlvbiA9IDE7CisJcmVzdWx0ID0gMDsKKwlpZiAocmVp
c2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9QQVJUX01JWEVEKSkgeworCQkvKgor
CQkgKiBmaWxlIGlzIG1hcmtlZCBvbiBkaXNrIGFzIHRoZXJlIHdhcyBhIGNvbnZlcnNpb24gd2hp
Y2ggZGlkCisJCSAqIG5vdCBjb21wbGV0ZSBkdWUgdG8gZWl0aGVyIGNyYXNoIG9yIHNvbWUgZXJy
b3IuIEZpbmQgd2hpY2gKKwkJICogb2Zmc2V0IHRhaWwgY29udmVyc2lvbiBzdG9wcGVkIGF0CisJ
CSAqLworCQlyZXN1bHQgPSBmaW5kX3N0YXJ0KGlub2RlLCBGT1JNQVRUSU5HX0lELCAmb2Zmc2V0
KTsKKwkJaWYgKHJlc3VsdCA9PSAtRU5PRU5UKSB7CisJCQkvKiBubyB0YWlsIGl0ZW1zIGZvdW5k
LCBldmVyeXRoaW5nIGlzIGNvbnZlcnRlZCAqLworCQkJdWZfaW5mby0+Y29udGFpbmVyID0gVUZf
Q09OVEFJTkVSX0VYVEVOVFM7CisJCQljb21wbGV0ZV9jb252ZXJzaW9uKGlub2RlKTsKKwkJCXJl
dHVybiAwOworCQl9IGVsc2UgaWYgKHJlc3VsdCAhPSAwKQorCQkJLyogc29tZSBvdGhlciBlcnJv
ciAqLworCQkJcmV0dXJuIHJlc3VsdDsKKwkJZmlyc3RfaXRlcmF0aW9uID0gMDsKKwl9CisKKwly
ZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfSU5fQ09OVik7CisKKwkv
KiBnZXQga2V5IG9mIGZpcnN0IGJ5dGUgb2YgYSBmaWxlICovCisJaW5vZGVfZmlsZV9wbHVnaW4o
aW5vZGUpLT5rZXlfYnlfaW5vZGUoaW5vZGUsIG9mZnNldCwgJmtleSk7CisKKwlkb25lID0gMDsK
Kwl3aGlsZSAoZG9uZSA9PSAwKSB7CisJCW1lbXNldChwYWdlcywgMCwgc2l6ZW9mKHBhZ2VzKSk7
CisJCXJlc3VsdCA9IHJlc2VydmVfdGFpbDJleHRlbnRfaXRlcmF0aW9uKGlub2RlKTsKKwkJaWYg
KHJlc3VsdCAhPSAwKSB7CisJCQlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKGlub2RlLCBSRUlTRVI0
X1BBUlRfSU5fQ09OVik7CisJCQlnb3RvIG91dDsKKwkJfQorCQlpZiAoZmlyc3RfaXRlcmF0aW9u
KSB7CisJCQlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfTUlYRUQp
OworCQkJcmVpc2VyNF91cGRhdGVfc2QoaW5vZGUpOworCQkJZmlyc3RfaXRlcmF0aW9uID0gMDsK
KwkJfQorCQlieXRlcyA9IDA7CisJCWZvciAoaSA9IDA7IGkgPCBzaXplb2ZfYXJyYXkocGFnZXMp
ICYmIGRvbmUgPT0gMDsgaSsrKSB7CisJCQlhc3NlcnQoInZzLTU5OCIsCisJCQkgICAgICAgKGdl
dF9rZXlfb2Zmc2V0KCZrZXkpICYgflBBR0VfTUFTSykgPT0gMCk7CisJCQlwYWdlID0gYWxsb2Nf
cGFnZShyZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJCQlpZiAoIXBhZ2UpIHsKKwkJCQly
ZXN1bHQgPSBSRVRFUlIoLUVOT01FTSk7CisJCQkJZ290byBlcnJvcjsKKwkJCX0KKworCQkJcGFn
ZS0+aW5kZXggPQorCQkJICAgICh1bnNpZ25lZCBsb25nKShnZXRfa2V5X29mZnNldCgma2V5KSA+
PgorCQkJCQkgICAgUEFHRV9TSElGVCk7CisJCQkvKgorCQkJICogdXN1YWxseSB3aGVuIG9uZSBp
cyBnb2luZyB0byBsb25ndGVybSBsb2NrIHpub2RlIChhcworCQkJICogZmluZF9maWxlX2l0ZW0g
ZG9lcywgZm9yIGluc3RhbmNlKSBoZSBtdXN0IG5vdCBob2xkCisJCQkgKiBsb2NrZWQgcGFnZXMu
IEhvd2V2ZXIsIHRoZXJlIGlzIGFuIGV4Y2VwdGlvbiBmb3IKKwkJCSAqIGNhc2UgdGFpbDJleHRl
bnQuIFBhZ2VzIGFwcGVhcmluZyBoZXJlIGFyZSBub3QKKwkJCSAqIHJlYWNoYWJsZSB0byBldmVy
eW9uZSBlbHNlLCB0aGV5IGFyZSBjbGVhbiwgdGhleSBkbworCQkJICogbm90IGhhdmUgam5vZGVz
IGF0dGFjaGVkIHNvIGtlZXBpbmcgdGhlbSBsb2NrZWQgZG8KKwkJCSAqIG5vdCByaXNrIGRlYWRs
b2NrIGFwcGVhcmFuY2UKKwkJCSAqLworCQkJYXNzZXJ0KCJ2cy05ODMiLCAhUGFnZVByaXZhdGUo
cGFnZSkpOworCQkJcmVpc2VyNF9pbnZhbGlkYXRlX3BhZ2VzKGlub2RlLT5pX21hcHBpbmcsIHBh
Z2UtPmluZGV4LAorCQkJCQkJIDEsIDApOworCisJCQlmb3IgKHBhZ2Vfb2ZmID0gMDsgcGFnZV9v
ZmYgPCBQQUdFX1NJWkU7KSB7CisJCQkJY29vcmRfdCBjb29yZDsKKwkJCQlsb2NrX2hhbmRsZSBs
aDsKKworCQkJCS8qIGdldCBuZXh0IGl0ZW0gKi8KKwkJCQkvKiBGSVhNRTogd2UgbWlnaHQgd2Fu
dCB0byByZWFkYWhlYWQgaGVyZSAqLworCQkJCWluaXRfbGgoJmxoKTsKKwkJCQlyZXN1bHQgPQor
CQkJCSAgICBmaW5kX2ZpbGVfaXRlbV9ub2hpbnQoJmNvb3JkLCAmbGgsICZrZXksCisJCQkJCQkJ
ICBaTk9ERV9SRUFEX0xPQ0ssCisJCQkJCQkJICBpbm9kZSk7CisJCQkJaWYgKHJlc3VsdCAhPSBD
QktfQ09PUkRfRk9VTkQpIHsKKwkJCQkJLyoKKwkJCQkJICogZXJyb3IgaGFwcGVuZWQgb2Ygbm90
IGl0ZW1zIG9mIGZpbGUKKwkJCQkJICogd2VyZSBmb3VuZAorCQkJCQkgKi8KKwkJCQkJZG9uZV9s
aCgmbGgpOworCQkJCQlwdXRfcGFnZShwYWdlKTsKKwkJCQkJZ290byBlcnJvcjsKKwkJCQl9CisK
KwkJCQlpZiAoY29vcmQuYmV0d2VlbiA9PSBBRlRFUl9VTklUKSB7CisJCQkJCS8qCisJCQkJCSAq
IGVuZCBvZiBmaWxlIGlzIHJlYWNoZWQuIFBhZGQgcGFnZQorCQkJCQkgKiB3aXRoIHplcm9zCisJ
CQkJCSAqLworCQkJCQlkb25lX2xoKCZsaCk7CisJCQkJCWRvbmUgPSAxOworCQkJCQlwX2RhdGEg
PSBrbWFwX2F0b21pYyhwYWdlKTsKKwkJCQkJbWVtc2V0KHBfZGF0YSArIHBhZ2Vfb2ZmLCAwLAor
CQkJCQkgICAgICAgUEFHRV9TSVpFIC0gcGFnZV9vZmYpOworCQkJCQlrdW5tYXBfYXRvbWljKHBf
ZGF0YSk7CisJCQkJCWJyZWFrOworCQkJCX0KKworCQkJCXJlc3VsdCA9IHpsb2FkKGNvb3JkLm5v
ZGUpOworCQkJCWlmIChyZXN1bHQpIHsKKwkJCQkJcHV0X3BhZ2UocGFnZSk7CisJCQkJCWRvbmVf
bGgoJmxoKTsKKwkJCQkJZ290byBlcnJvcjsKKwkJCQl9CisJCQkJYXNzZXJ0KCJ2cy04NTYiLCBj
b29yZC5iZXR3ZWVuID09IEFUX1VOSVQpOworCQkJCWl0ZW0gPSAoKGNoYXIgKilpdGVtX2JvZHlf
YnlfY29vcmQoJmNvb3JkKSkgKworCQkJCQljb29yZC51bml0X3BvczsKKworCQkJCS8qIGhvdyBt
YW55IGJ5dGVzIHRvIGNvcHkgKi8KKwkJCQljb3VudCA9CisJCQkJICAgIGl0ZW1fbGVuZ3RoX2J5
X2Nvb3JkKCZjb29yZCkgLQorCQkJCSAgICBjb29yZC51bml0X3BvczsKKwkJCQkvKiBsaW1pdCBs
ZW5ndGggb2YgY29weSB0byBlbmQgb2YgcGFnZSAqLworCQkJCWlmIChjb3VudCA+IFBBR0VfU0la
RSAtIHBhZ2Vfb2ZmKQorCQkJCQljb3VudCA9IFBBR0VfU0laRSAtIHBhZ2Vfb2ZmOworCisJCQkJ
LyoKKwkJCQkgKiBjb3B5IGl0ZW0gKGFzIG11Y2ggYXMgd2lsbCBmaXQgc3RhcnRpbmcgZnJvbQor
CQkJCSAqIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGl0ZW0pIGludG8gdGhlIHBhZ2UKKwkJCQkgKi8K
KwkJCQlwX2RhdGEgPSBrbWFwX2F0b21pYyhwYWdlKTsKKwkJCQltZW1jcHkocF9kYXRhICsgcGFn
ZV9vZmYsIGl0ZW0sIGNvdW50KTsKKwkJCQlrdW5tYXBfYXRvbWljKHBfZGF0YSk7CisKKwkJCQlw
YWdlX29mZiArPSBjb3VudDsKKwkJCQlieXRlcyArPSBjb3VudDsKKwkJCQlzZXRfa2V5X29mZnNl
dCgma2V5LAorCQkJCQkgICAgICAgZ2V0X2tleV9vZmZzZXQoJmtleSkgKyBjb3VudCk7CisKKwkJ
CQl6cmVsc2UoY29vcmQubm9kZSk7CisJCQkJZG9uZV9saCgmbGgpOworCQkJfSAvKiBlbmQgb2Yg
bG9vcCB3aGljaCBmaWxscyBvbmUgcGFnZSBieSBjb250ZW50IG9mCisJCQkgICAqIGZvcm1hdHRp
bmcgaXRlbXMgKi8KKworCQkJaWYgKHBhZ2Vfb2ZmKSB7CisJCQkJLyogc29tZXRoaW5nIHdhcyBj
b3BpZWQgaW50byBwYWdlICovCisJCQkJcGFnZXNbaV0gPSBwYWdlOworCQkJfSBlbHNlIHsKKwkJ
CQlwdXRfcGFnZShwYWdlKTsKKwkJCQlhc3NlcnQoInZzLTE2NDgiLCBkb25lID09IDEpOworCQkJ
CWJyZWFrOworCQkJfQorCQl9IC8qIGVuZCBvZiBsb29wIHRocm91Z2ggcGFnZXMgb2Ygb25lIGNv
bnZlcnNpb24gaXRlcmF0aW9uICovCisKKwkJaWYgKGkgPiAwKSB7CisJCQlyZXN1bHQgPSByZXBs
YWNlKGlub2RlLCBwYWdlcywgaSwgYnl0ZXMpOworCQkJcmVsZWFzZV9hbGxfcGFnZXMocGFnZXMs
IHNpemVvZl9hcnJheShwYWdlcykpOworCQkJaWYgKHJlc3VsdCkKKwkJCQlnb3RvIGVycm9yOwor
CQkJLyoKKwkJCSAqIFdlIGhhdmUgdG8gZHJvcCBleGNsdXNpdmUgYWNjZXNzIHRvIGF2b2lkIGRl
YWRsb2NrCisJCQkgKiB3aGljaCBtYXkgaGFwcGVuIGJlY2F1c2UgY2FsbGVkIGJ5IHJlaXNlcjRf
d3JpdGVwYWdlcworCQkJICogY2FwdHVyZV91bml4X2ZpbGUgcmVxdWlyZXMgdG8gZ2V0IG5vbi1l
eGNsdXNpdmUKKwkJCSAqIGFjY2VzcyB0byBhIGZpbGUuIEl0IGlzIHNhZmUgdG8gZHJvcCBFQSBp
biB0aGUgbWlkZGxlCisJCQkgKiBvZiB0YWlsMmV4dGVudCBjb252ZXJzaW9uIGJlY2F1c2Ugd3Jp
dGVfdW5peF9maWxlLAorCQkJICogc2V0YXR0cl91bml4X2ZpbGUodHJ1bmNhdGUpLCBtbWFwX3Vu
aXhfZmlsZSwKKwkJCSAqIHJlbGVhc2VfdW5peF9maWxlKGV4dGVudDJ0YWlsKSBjaGVja3MgaWYg
Y29udmVyc2lvbgorCQkJICogaXMgbm90IGluIHByb2dyZXNzIChzZWUgY29tbWVudHMgYmVmb3Jl
CisJCQkgKiBnZXRfZXhjbHVzaXZlX2FjY2Vzc19jYXJlZnVsKCkuCisJCQkgKiBPdGhlciBwcm9j
ZXNzZXMgdGhhdCBhY3F1aXJlIG5vbi1leGNsdXNpdmUgYWNjZXNzCisJCQkgKiAocmVhZF91bml4
X2ZpbGUsIHJlaXNlcjRfd3JpdGVwYWdlcywgZXRjKSBzaG91bGQgd29yaworCQkJICogb24gcGFy
dGlhbGx5IGNvbnZlcnRlZCBmaWxlcy4KKwkJCSAqLworCQkJZHJvcF9leGNsdXNpdmVfYWNjZXNz
KHVmX2luZm8pOworCQkJLyogdGhyb3R0bGUgdGhlIGNvbnZlcnNpb24gKi8KKwkJCXJlaXNlcjRf
dGhyb3R0bGVfd3JpdGUoaW5vZGUpOworCQkJZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3ModWZfaW5mbyk7
CisKKwkJCS8qCisJCQkgKiBub2JvZHkgaXMgYWxsb3dlZCB0byBjb21wbGV0ZSBjb252ZXJzaW9u
IGJ1dCBhCisJCQkgKiBwcm9jZXNzIHdoaWNoIHN0YXJ0ZWQgaXQKKwkJCSAqLworCQkJYXNzZXJ0
KCIiLCByZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLAorCQkJCQkJCSAgUkVJU0VSNF9QQVJU
X01JWEVEKSk7CisJCX0KKwl9CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCS8qIGZpbGUgaXMgY29u
dmVydGVkIHRvIGV4dGVudCBpdGVtcyAqLworCQlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKGlub2Rl
LCBSRUlTRVI0X1BBUlRfSU5fQ09OVik7CisJCWFzc2VydCgidnMtMTY5NyIsIHJlaXNlcjRfaW5v
ZGVfZ2V0X2ZsYWcoaW5vZGUsCisJCQkJCQkJIFJFSVNFUjRfUEFSVF9NSVhFRCkpOworCisJCXVm
X2luZm8tPmNvbnRhaW5lciA9IFVGX0NPTlRBSU5FUl9FWFRFTlRTOworCQljb21wbGV0ZV9jb252
ZXJzaW9uKGlub2RlKTsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBjb252ZXJzaW9uIGlzIG5vdCBj
b21wbGV0ZS4gSW5vZGUgd2FzIGFscmVhZHkgbWFya2VkIGFzCisJCSAqIFJFSVNFUjRfUEFSVF9N
SVhFRCBhbmQgc3RhdC1kYXRhIHdlcmUgdXBkYXRlZCBhdCB0aGUgZmlyc3QKKwkJICogaXRlcmF0
aW9uIG9mIHRoZSBsb29wIGFib3ZlLgorCQkgKi8KKwllcnJvcjoKKwkJcmVsZWFzZV9hbGxfcGFn
ZXMocGFnZXMsIHNpemVvZl9hcnJheShwYWdlcykpOworCQlyZWlzZXI0X2lub2RlX2Nscl9mbGFn
KGlub2RlLCBSRUlTRVI0X1BBUlRfSU5fQ09OVik7CisJCXdhcm5pbmcoImVkd2FyZC0xNTQ4Iiwg
IlBhcnRpYWwgY29udmVyc2lvbiBvZiAlbGx1OiAlaSIsCisJCQkodW5zaWduZWQgbG9uZyBsb25n
KWdldF9pbm9kZV9vaWQoaW5vZGUpLCByZXN1bHQpOworCX0KKworIG91dDoKKwkvKiB0aGlzIGZs
YWcgc2hvdWxkIGJlIGNsZWFyZWQsIG90aGVyd2lzZSBnZXRfZXhjbHVzaXZlX2FjY2Vzc19jYXJl
ZnVsKCkKKwkgICB3aWxsIGZhbGwgaW50byBpbmZpbml0ZSBsb29wICovCisJYXNzZXJ0KCJlZHdh
cmQtMTU0OSIsICFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLAorCQkJCQkJICAgICAgUkVJ
U0VSNF9QQVJUX0lOX0NPTlYpKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgaW50IHJl
c2VydmVfZXh0ZW50MnRhaWxfaXRlcmF0aW9uKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmVp
c2VyNF90cmVlICp0cmVlOworCisJdHJlZSA9IHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9kZSk7
CisJLyoKKwkgKiByZXNlcnZlIGJsb2NrcyBmb3IgKGluIHRoaXMgb3JkZXIpOgorCSAqCisJICog
ICAgIDEuIHJlbW92YWwgb2YgZXh0ZW50IGl0ZW0KKwkgKgorCSAqICAgICAyLiBpbnNlcnRpb24g
b2YgdGFpbCBieSBpbnNlcnRfZmxvdygpCisJICoKKwkgKiAgICAgMy4gZHJpbGxpbmcgdG8gdGhl
IGxlYWYgbGV2ZWwgYnkgY29vcmRfYnlfa2V5KCkKKwkgKgorCSAqICAgICA0LiBwb3NzaWJsZSB1
cGRhdGUgb2Ygc3RhdC1kYXRhCisJICovCisJZ3JhYl9zcGFjZV9lbmFibGUoKTsKKwlyZXR1cm4g
cmVpc2VyNF9ncmFiX3NwYWNlCisJICAgIChlc3RpbWF0ZV9vbmVfaXRlbV9yZW1vdmFsKHRyZWUp
ICsKKwkgICAgIGVzdGltYXRlX2luc2VydF9mbG93KHRyZWUtPmhlaWdodCkgKworCSAgICAgMSAr
IGVzdGltYXRlX29uZV9pbnNlcnRfaXRlbSh0cmVlKSArCisJICAgICBpbm9kZV9maWxlX3BsdWdp
bihpbm9kZSktPmVzdGltYXRlLnVwZGF0ZShpbm9kZSksIEJBX0NBTl9DT01NSVQpOworfQorCisv
KiBmb3IgZXZlcnkgcGFnZSBvZiBmaWxlOiByZWFkIHBhZ2UsIGN1dCBwYXJ0IG9mIGV4dGVudCBw
b2ludGluZyB0byB0aGlzIHBhZ2UsCisgICBwdXQgZGF0YSBvZiBwYWdlIHRyZWUgYnkgdGFpbCBp
dGVtICovCitpbnQgZXh0ZW50MnRhaWwoc3RydWN0IGZpbGUgKiBmaWxlLCBzdHJ1Y3QgdW5peF9m
aWxlX2luZm8gKnVmX2luZm8pCit7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2Rl
OworCXN0cnVjdCBwYWdlICpwYWdlOworCXVuc2lnbmVkIGxvbmcgbnVtX3BhZ2VzLCBpOworCXVu
c2lnbmVkIGxvbmcgc3RhcnRfcGFnZTsKKwlyZWlzZXI0X2tleSBmcm9tOworCXJlaXNlcjRfa2V5
IHRvOworCXVuc2lnbmVkIGNvdW50OworCV9fdTY0IG9mZnNldDsKKworCWFzc2VydCgibmlraXRh
LTMzNjIiLCBlYV9vYnRhaW5lZCh1Zl9pbmZvKSk7CisJaW5vZGUgPSB1bml4X2ZpbGVfaW5mb190
b19pbm9kZSh1Zl9pbmZvKTsKKwlhc3NlcnQoIm5pa2l0YS0zNDEyIiwgIUlTX1JET05MWShpbm9k
ZSkpOworCWFzc2VydCgidnMtMTY0OSIsIHVmX2luZm8tPmNvbnRhaW5lciAhPSBVRl9DT05UQUlO
RVJfVEFJTFMpOworCWFzc2VydCgiIiwgIXJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJF
SVNFUjRfUEFSVF9JTl9DT05WKSk7CisKKwlvZmZzZXQgPSAwOworCWlmIChyZWlzZXI0X2lub2Rl
X2dldF9mbGFnKGlub2RlLCBSRUlTRVI0X1BBUlRfTUlYRUQpKSB7CisJCS8qCisJCSAqIGZpbGUg
aXMgbWFya2VkIG9uIGRpc2sgYXMgdGhlcmUgd2FzIGEgY29udmVyc2lvbiB3aGljaCBkaWQKKwkJ
ICogbm90IGNvbXBsZXRlIGR1ZSB0byBlaXRoZXIgY3Jhc2ggb3Igc29tZSBlcnJvci4gRmluZCB3
aGljaAorCQkgKiBvZmZzZXQgdGFpbCBjb252ZXJzaW9uIHN0b3BwZWQgYXQKKwkJICovCisJCXJl
c3VsdCA9IGZpbmRfc3RhcnQoaW5vZGUsIEVYVEVOVF9QT0lOVEVSX0lELCAmb2Zmc2V0KTsKKwkJ
aWYgKHJlc3VsdCA9PSAtRU5PRU5UKSB7CisJCQkvKiBubyBleHRlbnQgZm91bmQsIGV2ZXJ5dGhp
bmcgaXMgY29udmVydGVkICovCisJCQl1Zl9pbmZvLT5jb250YWluZXIgPSBVRl9DT05UQUlORVJf
VEFJTFM7CisJCQljb21wbGV0ZV9jb252ZXJzaW9uKGlub2RlKTsKKwkJCXJldHVybiAwOworCQl9
IGVsc2UgaWYgKHJlc3VsdCAhPSAwKQorCQkJLyogc29tZSBvdGhlciBlcnJvciAqLworCQkJcmV0
dXJuIHJlc3VsdDsKKwl9CisJcmVpc2VyNF9pbm9kZV9zZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9Q
QVJUX0lOX0NPTlYpOworCisJLyogbnVtYmVyIG9mIHBhZ2VzIGluIHRoZSBmaWxlICovCisJbnVt
X3BhZ2VzID0KKwkgICAgKGlub2RlLT5pX3NpemUgKyAtIG9mZnNldCArIFBBR0VfU0laRSAtIDEp
ID4+IFBBR0VfU0hJRlQ7CisJc3RhcnRfcGFnZSA9IG9mZnNldCA+PiBQQUdFX1NISUZUOworCisJ
aW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpLT5rZXlfYnlfaW5vZGUoaW5vZGUsIG9mZnNldCwgJmZy
b20pOworCXRvID0gZnJvbTsKKworCXJlc3VsdCA9IDA7CisJZm9yIChpID0gMDsgaSA8IG51bV9w
YWdlczsgaSsrKSB7CisJCV9fdTY0IHN0YXJ0X2J5dGU7CisKKwkJcmVzdWx0ID0gcmVzZXJ2ZV9l
eHRlbnQydGFpbF9pdGVyYXRpb24oaW5vZGUpOworCQlpZiAocmVzdWx0ICE9IDApCisJCQlicmVh
azsKKwkJaWYgKGkgPT0gMCAmJiBvZmZzZXQgPT0gMCkgeworCQkJcmVpc2VyNF9pbm9kZV9zZXRf
ZmxhZyhpbm9kZSwgUkVJU0VSNF9QQVJUX01JWEVEKTsKKwkJCXJlaXNlcjRfdXBkYXRlX3NkKGlu
b2RlKTsKKwkJfQorCisJCXBhZ2UgPSByZWFkX21hcHBpbmdfcGFnZShpbm9kZS0+aV9tYXBwaW5n
LAorCQkJCQkgKHVuc2lnbmVkKShpICsgc3RhcnRfcGFnZSksIE5VTEwpOworCQlpZiAoSVNfRVJS
KHBhZ2UpKSB7CisJCQlyZXN1bHQgPSBQVFJfRVJSKHBhZ2UpOworCQkJd2FybmluZygiZWR3YXJk
LTE1NjkiLAorCQkJCSJDYW4gbm90IHJlYWQgcGFnZSAlbHUgb2YgJWx1OiAlaSIsCisJCQkJaSwg
bnVtX3BhZ2VzLCByZXN1bHQpOworCQkJYnJlYWs7CisJCX0KKworCQl3YWl0X29uX3BhZ2VfbG9j
a2VkKHBhZ2UpOworCisJCWlmICghUGFnZVVwdG9kYXRlKHBhZ2UpKSB7CisJCQlwdXRfcGFnZShw
YWdlKTsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJCWJyZWFrOworCQl9CisKKwkJLyog
Y3V0IHBhcnQgb2YgZmlsZSB3ZSBoYXZlIHJlYWQgKi8KKwkJc3RhcnRfYnl0ZSA9IChfX3U2NCkg
KChpICsgc3RhcnRfcGFnZSkgPDwgUEFHRV9TSElGVCk7CisJCXNldF9rZXlfb2Zmc2V0KCZmcm9t
LCBzdGFydF9ieXRlKTsKKwkJc2V0X2tleV9vZmZzZXQoJnRvLCBzdGFydF9ieXRlICsgUEFHRV9T
SVpFIC0gMSk7CisJCS8qCisJCSAqIHJlaXNlcjRfY3V0X3RyZWVfb2JqZWN0KCkgcmV0dXJucyAt
RV9SRVBFQVQgdG8gYWxsb3cgYXRvbQorCQkgKiBjb21taXRzIGR1cmluZyBvdmVyLWxvbmcgdHJ1
bmNhdGVzLiBCdXQKKwkJICogZXh0ZW50LT50YWlsIGNvbnZlcnNpb24gc2hvdWxkIGJlIHBlcmZv
cm1lZCBpbiBvbmUKKwkJICogdHJhbnNhY3Rpb24uCisJCSAqLworCQlyZXN1bHQgPSByZWlzZXI0
X2N1dF90cmVlKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9kZSksICZmcm9tLAorCQkJCQkgICZ0
bywgaW5vZGUsIDApOworCisJCWlmIChyZXN1bHQpIHsKKwkJCXB1dF9wYWdlKHBhZ2UpOworCQkJ
d2FybmluZygiZWR3YXJkLTE1NzAiLAorCQkJCSJDYW4gbm90IGRlbGV0ZSBjb252ZXJ0ZWQgY2h1
bms6ICVpIiwKKwkJCQlyZXN1bHQpOworCQkJYnJlYWs7CisJCX0KKworCQkvKiBwdXQgcGFnZSBk
YXRhIGludG8gdHJlZSB2aWEgdGFpbF93cml0ZSAqLworCQljb3VudCA9IFBBR0VfU0laRTsKKwkJ
aWYgKChpID09IChudW1fcGFnZXMgLSAxKSkgJiYKKwkJICAgIChpbm9kZS0+aV9zaXplICYgflBB
R0VfTUFTSykpCisJCQkvKiBsYXN0IHBhZ2UgY2FuIGJlIGluY29tcGxldGVkICovCisJCQljb3Vu
dCA9IChpbm9kZS0+aV9zaXplICYgflBBR0VfTUFTSyk7CisJCXdoaWxlIChjb3VudCkgeworCQkJ
bG9mZl90IHBvcyA9IHN0YXJ0X2J5dGU7CisKKwkJCWFzc2VydCgiZWR3YXJkLTE1MzciLAorCQkJ
ICAgICAgIGZpbGUgIT0gTlVMTCAmJiBmaWxlLT5mX3BhdGguZGVudHJ5ICE9IE5VTEwpOworCQkJ
YXNzZXJ0KCJlZHdhcmQtMTUzOCIsCisJCQkgICAgICAgZmlsZV9pbm9kZShmaWxlKSA9PSBpbm9k
ZSk7CisKKwkJCXJlc3VsdCA9IHJlaXNlcjRfd3JpdGVfdGFpbF9ub3Jlc2VydmUoZmlsZSwgaW5v
ZGUsCisJCQkJCQkgKGNoYXIgX191c2VyICopa21hcChwYWdlKSwKKwkJCQkJCQkgICAgICBjb3Vu
dCwgJnBvcyk7CisJCQlrdW5tYXAocGFnZSk7CisJCQkvKiBGSVhNRToKKwkJCSAgIG1heSBiZSBw
dXRfZmlsZV9oaW50KCkgaW5zdGVhZCA/ICovCisJCQlyZWlzZXI0X2ZyZWVfZmlsZV9mc2RhdGEo
ZmlsZSk7CisJCQlpZiAocmVzdWx0IDw9IDApIHsKKwkJCQkvKgorCQkJCSAqIFVuc3VjY2VzcyBp
biBjcml0aWNhbCBwbGFjZToKKwkJCQkgKiBleHRlbnQgaGFzIGJlZW4gcmVtb3ZlZCwKKwkJCQkg
KiBidXQgdGFpbCBoYXNuJ3QgYmVlbiBjcmVhdGVkCisJCQkJICovCisJCQkJd2FybmluZygiZWR3
YXJkLTE1NzEiLAorCQkJIlJlcG9ydCB0aGUgZXJyb3IgY29kZSAlaSB0byBkZXZlbG9wZXJzLiBS
dW4gRlNDSyIsCisJCQkJCXJlc3VsdCk7CisJCQkJcHV0X3BhZ2UocGFnZSk7CisJCQkJcmVpc2Vy
NF9pbm9kZV9jbHJfZmxhZyhpbm9kZSwKKwkJCQkJCSAgICAgICBSRUlTRVI0X1BBUlRfSU5fQ09O
Vik7CisJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCX0KKwkJCWNvdW50IC09IHJlc3VsdDsKKwkJfQor
CisJCS8qIHJlbGVhc2UgcGFnZSAqLworCQlsb2NrX3BhZ2UocGFnZSk7CisJCS8qIHBhZ2UgaXMg
YWxyZWFkeSBkZXRhY2hlZCBmcm9tIGpub2RlIGFuZCBtYXBwaW5nLiAqLworCQlhc3NlcnQoInZz
LTEwODYiLCBwYWdlLT5tYXBwaW5nID09IE5VTEwpOworCQlhc3NlcnQoIm5pa2l0YS0yNjkwIiwK
KwkJICAgICAgICghUGFnZVByaXZhdGUocGFnZSkgJiYganByaXZhdGUocGFnZSkgPT0gMCkpOwor
CQkvKiB3YWl0aW5nIGZvciB3cml0ZWJhY2sgY29tcGxldGlvbiB3aXRoIHBhZ2UgbG9jayBoZWxk
IGlzCisJCSAqIHBlcmZlY3RseSB2YWxpZC4gKi8KKwkJd2FpdF9vbl9wYWdlX3dyaXRlYmFjayhw
YWdlKTsKKwkJcmVpc2VyNF9kcm9wX3BhZ2UocGFnZSk7CisJCS8qIHJlbGVhc2UgcmVmZXJlbmNl
IHRha2VuIGJ5IHJlYWRfY2FjaGVfcGFnZSgpIGFib3ZlICovCisJCXB1dF9wYWdlKHBhZ2UpOwor
CisJCWRyb3BfZXhjbHVzaXZlX2FjY2Vzcyh1Zl9pbmZvKTsKKwkJLyogdGhyb3R0bGUgdGhlIGNv
bnZlcnNpb24gKi8KKwkJcmVpc2VyNF90aHJvdHRsZV93cml0ZShpbm9kZSk7CisJCWdldF9leGNs
dXNpdmVfYWNjZXNzKHVmX2luZm8pOworCQkvKgorCQkgKiBub2JvZHkgaXMgYWxsb3dlZCB0byBj
b21wbGV0ZSBjb252ZXJzaW9uIGJ1dCBhIHByb2Nlc3Mgd2hpY2gKKwkJICogc3RhcnRlZCBpdAor
CQkgKi8KKwkJYXNzZXJ0KCIiLCByZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlTRVI0
X1BBUlRfTUlYRUQpKTsKKwl9CisKKwlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKGlub2RlLCBSRUlT
RVI0X1BBUlRfSU5fQ09OVik7CisKKwlpZiAoaSA9PSBudW1fcGFnZXMpIHsKKwkJLyogZmlsZSBp
cyBjb252ZXJ0ZWQgdG8gZm9ybWF0dGVkIGl0ZW1zICovCisJCWFzc2VydCgidnMtMTY5OCIsIHJl
aXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsCisJCQkJCQkJIFJFSVNFUjRfUEFSVF9NSVhFRCkp
OworCQlhc3NlcnQoInZzLTEyNjAiLAorCQkgICAgICAgaW5vZGVfaGFzX25vX2pub2RlcyhyZWlz
ZXI0X2lub2RlX2RhdGEoaW5vZGUpKSk7CisKKwkJdWZfaW5mby0+Y29udGFpbmVyID0gVUZfQ09O
VEFJTkVSX1RBSUxTOworCQljb21wbGV0ZV9jb252ZXJzaW9uKGlub2RlKTsKKwkJcmV0dXJuIDA7
CisJfQorCS8qCisJICogY29udmVyc2lvbiBpcyBub3QgY29tcGxldGUuIElub2RlIHdhcyBhbHJl
YWR5IG1hcmtlZCBhcworCSAqIFJFSVNFUjRfUEFSVF9NSVhFRCBhbmQgc3RhdC1kYXRhIHdlcmUg
dXBkYXRlZCBhdCB0aGUgZmlyc3QKKwkgKiBpdGVyYXRpb24gb2YgdGhlIGxvb3AgYWJvdmUuCisJ
ICovCisJd2FybmluZygibmlraXRhLTIyODIiLAorCQkiUGFydGlhbCBjb252ZXJzaW9uIG9mICVs
bHU6ICVsdSBvZiAlbHU6ICVpIiwKKwkJKHVuc2lnbmVkIGxvbmcgbG9uZylnZXRfaW5vZGVfb2lk
KGlub2RlKSwgaSwKKwkJbnVtX3BhZ2VzLCByZXN1bHQpOworCisJLyogdGhpcyBmbGFnIHNob3Vs
ZCBiZSBjbGVhcmVkLCBvdGhlcndpc2UgZ2V0X2V4Y2x1c2l2ZV9hY2Nlc3NfY2FyZWZ1bCgpCisJ
ICAgd2lsbCBmYWxsIGludG8gaW5maW5pdGUgbG9vcCAqLworCWFzc2VydCgiZWR3YXJkLTE1NTAi
LCAhcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwKKwkJCQkJCSAgICAgIFJFSVNFUjRfUEFS
VF9JTl9DT05WKSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIExvY2FsIHZhcmlhYmxl
czoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAq
IGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQor
ICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlX29wcy5jIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlX29wcy5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3BsdWdpbi9maWxlX29wcy5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAw
ICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZV9vcHMuYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ2NDIyMjI2MyArMDEwMApAQCAtMCwwICsxLDExOSBAQAorLyogQ29w
eXJpZ2h0IDIwMDUgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICAgcmVp
c2VyNC9SRUFETUUgKi8KKworLyogdGhpcyBmaWxlIGNvbnRhaW5zIHR5cGljYWwgaW1wbGVtZW50
YXRpb25zIGZvciBzb21lIG9mIG1ldGhvZHMgb2YKKyAgIHN0cnVjdCBmaWxlX29wZXJhdGlvbnMg
YW5kIG9mIHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMKKyovCisKKyNpbmNsdWRlICIu
Li9pbm9kZS5oIgorI2luY2x1ZGUgIm9iamVjdC5oIgorCisvKiBmaWxlIG9wZXJhdGlvbnMgKi8K
KworLyogaW1wbGVtZW50YXRpb24gb2YgdmZzJ3MgbGxzZWVrIG1ldGhvZCBvZiBzdHJ1Y3QgZmls
ZV9vcGVyYXRpb25zIGZvcgorICAgdHlwaWNhbCBkaXJlY3RvcnkgY2FuIGJlIGZvdW5kIGluIGZp
bGVfb3BzX3JlYWRkaXIuYworKi8KK2xvZmZfdCByZWlzZXI0X2xsc2Vla19kaXJfY29tbW9uKHN0
cnVjdCBmaWxlICosIGxvZmZfdCwgaW50IG9yaWdpbik7CisKKy8qIGltcGxlbWVudGF0aW9uIG9m
IHZmcydzIGl0ZXJhdGUgbWV0aG9kIG9mIHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgZm9yCisgICB0
eXBpY2FsIGRpcmVjdG9yeSBjYW4gYmUgZm91bmQgaW4gZmlsZV9vcHNfcmVhZGRpci5jCisqLwor
aW50IHJlaXNlcjRfaXRlcmF0ZV9jb21tb24oc3RydWN0IGZpbGUgKiwgc3RydWN0IGRpcl9jb250
ZXh0ICopOworCisvKioKKyAqIHJlaXNlcjRfcmVsZWFzZV9kaXJfY29tbW9uIC0gcmVsZWFzZSBv
ZiBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zCisgKiBAaW5vZGU6IGlub2RlIG9mIHJlbGVhc2VkIGZp
bGUKKyAqIEBmaWxlOiBmaWxlIHRvIHJlbGVhc2UKKyAqCisgKiBJbXBsZW1lbnRhdGlvbiBvZiBy
ZWxlYXNlIG1ldGhvZCBvZiBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIGZvciB0eXBpY2FsCisgKiBk
aXJlY3RvcnkuIEFsbCBpdCBkb2VzIGlzIGZyZWVpbmcgb2YgcmVpc2VyNCBzcGVjaWZpYyBmaWxl
IGRhdGEuCisqLworaW50IHJlaXNlcjRfcmVsZWFzZV9kaXJfY29tbW9uKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCisJ
Y3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4
KSkKKwkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKKwlyZWlzZXI0X2ZyZWVfZmlsZV9mc2RhdGEoZmls
ZSk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gMDsKK30KKworLyogdGhp
cyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgdmZzJ3MgZnN5bmMgbWV0aG9kIG9mIHN0cnVj
dAorICAgZmlsZV9vcGVyYXRpb25zCisqLworaW50IHJlaXNlcjRfc3luY19jb21tb24oc3RydWN0
IGZpbGUgKmZpbGUsIGxvZmZfdCBzdGFydCwKKwkJCWxvZmZfdCBlbmQsIGludCBkYXRhc3luYykK
K3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlpbnQgcmVzdWx0OworCXN0cnVjdCBkZW50cnkg
KmRlbnRyeSA9IGZpbGUtPmZfcGF0aC5kZW50cnk7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29u
dGV4dChkZW50cnktPmRfaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJu
IFBUUl9FUlIoY3R4KTsKKwlyZXN1bHQgPSB0eG5tZ3JfZm9yY2VfY29tbWl0X2FsbChkZW50cnkt
PmRfaW5vZGUtPmlfc2IsIDApOworCisJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJ
cmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgorICog
Y29tbW9uIHN5bmMgbWV0aG9kIGZvciByZWd1bGFyIGZpbGVzLgorICoKKyAqIFdlIGFyZSB0cnlp
bmcgdG8gYmUgc21hcnQgaGVyZS4gSW5zdGVhZCBvZiBjb21taXR0aW5nIGFsbCBhdG9tcyAob3Jp
Z2luYWwKKyAqIHNvbHV0aW9uKSwgd2Ugc2NhbiBkaXJ0eSBwYWdlcyBvZiB0aGlzIGZpbGUgYW5k
IGNvbW1pdCBhbGwgYXRvbXMgdGhleSBhcmUKKyAqIHBhcnQgb2YuCisgKgorICogU2l0dWF0aW9u
IGlzIGNvbXBsaWNhdGVkIGJ5IGFub255bW91cyBwYWdlczogaS5lLiwgZXh0ZW50LWxlc3MgcGFn
ZXMKKyAqIGRpcnRpZWQgdGhyb3VnaCBtbWFwLiBGb3J0dW5hdGVseSBzeXNfZnN5bmMoKSBmaXJz
dCBjYWxscworICogZmlsZW1hcF9mZGF0YXdyaXRlKCkgdGhhdCB3aWxsIHVsdGltYXRlbHkgY2Fs
bCByZWlzZXI0X3dyaXRlcGFnZXNfZGlzcGF0Y2gsCisgKiBpbnNlcnQgYWxsIG1pc3NpbmcgZXh0
ZW50cyBhbmQgY2FwdHVyZSBhbm9ueW1vdXMgcGFnZXMuCisgKi8KK2ludCByZWlzZXI0X3N5bmNf
ZmlsZV9jb21tb24oc3RydWN0IGZpbGUgKmZpbGUsIGxvZmZfdCBzdGFydCwgbG9mZl90IGVuZCwg
aW50IGRhdGFzeW5jKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCXR4bl9hdG9tICphdG9t
OworCXJlaXNlcjRfYmxvY2tfbnIgcmVzZXJ2ZTsKKwlzdHJ1Y3QgZGVudHJ5ICpkZW50cnkgPSBm
aWxlLT5mX3BhdGguZGVudHJ5OworCXN0cnVjdCBpbm9kZSAqaW5vZGUgPSBmaWxlLT5mX21hcHBp
bmctPmhvc3Q7CisKKwlpbnQgZXJyID0gZmlsZW1hcF93cml0ZV9hbmRfd2FpdF9yYW5nZShmaWxl
LT5mX21hcHBpbmctPmhvc3QtPmlfbWFwcGluZywgc3RhcnQsIGVuZCk7CisJaWYgKGVycikKKwkJ
cmV0dXJuIGVycjsKKworCWN0eCA9IHJlaXNlcjRfaW5pdF9jb250ZXh0KGRlbnRyeS0+ZF9pbm9k
ZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCisJ
aW5vZGVfbG9jayhpbm9kZSk7CisKKwlyZXNlcnZlID0gZXN0aW1hdGVfdXBkYXRlX2NvbW1vbihk
ZW50cnktPmRfaW5vZGUpOworCWlmIChyZWlzZXI0X2dyYWJfc3BhY2UocmVzZXJ2ZSwgQkFfQ0FO
X0NPTU1JVCkpIHsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJaW5vZGVfdW5sb2Nr
KGlub2RlKTsKKwkJcmV0dXJuIFJFVEVSUigtRU5PU1BDKTsKKwl9CisJd3JpdGVfc2RfYnlfaW5v
ZGVfY29tbW9uKGRlbnRyeS0+ZF9pbm9kZSk7CisKKwlhdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9s
b2NrZWQoKTsKKwlzcGluX2xvY2tfdHhuaChjdHgtPnRyYW5zKTsKKwlmb3JjZV9jb21taXRfYXRv
bShjdHgtPnRyYW5zKTsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCWlub2RlX3VubG9j
ayhpbm9kZSk7CisKKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAq
IGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFz
aWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Ny
b2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9maWxlX29wc19yZWFkZGlyLmMgbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2ZpbGVfb3BzX3JlYWRkaXIuYwotLS0gbGludXgtNS40
LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZV9vcHNfcmVhZGRpci5jCTE5NzAtMDEtMDEg
MDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVn
aW4vZmlsZV9vcHNfcmVhZGRpci5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDY0MjIyMjYzICswMTAw
CkBAIC0wLDAgKzEsNjU5IEBACisvKiBDb3B5cmlnaHQgMjAwNSBieSBIYW5zIFJlaXNlciwgbGlj
ZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSA8bGlu
dXgvaXZlcnNpb24uaD4KKyNpbmNsdWRlICIuLi9pbm9kZS5oIgorCisvKiByZXR1cm4gdHJ1ZSwg
aWZmIEBjb29yZCBwb2ludHMgdG8gdGhlIHZhbGlkIGRpcmVjdG9yeSBpdGVtIHRoYXQgaXMgcGFy
dCBvZgorICogQGlub2RlIGRpcmVjdG9yeS4gKi8KK3N0YXRpYyBpbnQgaXNfdmFsaWRfZGlyX2Nv
b3JkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNvb3JkX3QgKmNvb3JkKQoreworCXJldHVybiBwbHVn
aW5fb2ZfZ3JvdXAoaXRlbV9wbHVnaW5fYnlfY29vcmQoY29vcmQpLAorCQkJICAgICAgIERJUl9F
TlRSWV9JVEVNX1RZUEUpICYmCisJICAgICAgIGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKS0+b3du
c19pdGVtKGlub2RlLCBjb29yZCk7Cit9CisKKy8qIGNvbXBhcmUgdHdvIGxvZ2ljYWwgcG9zaXRp
b25zIHdpdGhpbiB0aGUgc2FtZSBkaXJlY3RvcnkgKi8KK3N0YXRpYyBjbXBfdCBkaXJfcG9zX2Nt
cChjb25zdCBzdHJ1Y3QgZGlyX3BvcyAqcDEsIGNvbnN0IHN0cnVjdCBkaXJfcG9zICpwMikKK3sK
KwljbXBfdCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yNTM0IiwgcDEgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMjUzNSIsIHAyICE9IE5VTEwpOworCisJcmVzdWx0ID0gZGVfaWRfY21w
KCZwMS0+ZGlyX2VudHJ5X2tleSwgJnAyLT5kaXJfZW50cnlfa2V5KTsKKwlpZiAocmVzdWx0ID09
IEVRVUFMX1RPKSB7CisJCWludCBkaWZmOworCisJCWRpZmYgPSBwMS0+cG9zIC0gcDItPnBvczsK
KwkJcmVzdWx0ID0KKwkJICAgIChkaWZmIDwgMCkgPyBMRVNTX1RIQU4gOiAoZGlmZiA/IEdSRUFU
RVJfVEhBTiA6IEVRVUFMX1RPKTsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogc2VlIGNv
bW1lbnQgYmVmb3JlIHJlaXNlcjRfcmVhZGRpcl9jb21tb24oKSBmb3Igb3ZlcnZpZXcgb2Ygd2h5
ICJhZGp1c3RtZW50IgorICogaXMgbmVjZXNzYXJ5LiAqLworc3RhdGljIHZvaWQKK2FkanVzdF9k
aXJfcG9zKHN0cnVjdCBmaWxlICpkaXIsIHN0cnVjdCByZWFkZGlyX3BvcyAqcmVhZGRpcl9zcG90
LAorCSAgICAgICBjb25zdCBzdHJ1Y3QgZGlyX3BvcyAqbW9kX3BvaW50LCBpbnQgYWRqKQorewor
CXN0cnVjdCBkaXJfcG9zICpwb3M7CisKKwkvKgorCSAqIG5ldyBkaXJlY3RvcnkgZW50cnkgd2Fz
IGFkZGVkIChhZGogPT0gKzEpIG9yIHJlbW92ZWQgKGFkaiA9PSAtMSkgYXQKKwkgKiB0aGUgQG1v
ZF9wb2ludC4gRGlyZWN0b3J5IGZpbGUgZGVzY3JpcHRvciBAZGlyIGlzIGRvaW5nIHJlYWRkaXIg
YW5kCisJICogaXMgY3VycmVudGx5IHBvc2l0aW9uZWQgYXQgQHJlYWRkaXJfc3BvdC4gTGF0dGVy
IGhhcyB0byBiZSB1cGRhdGVkCisJICogdG8gbWFpbnRhaW4gc3RhYmxlIHJlYWRkaXIuCisJICov
CisJLyogZGlyZWN0b3J5IGlzIHBvc2l0aW9uZWQgdG8gdGhlIGJlZ2lubmluZy4gKi8KKwlpZiAo
cmVhZGRpcl9zcG90LT5lbnRyeV9ubyA9PSAwKQorCQlyZXR1cm47CisKKwlwb3MgPSAmcmVhZGRp
cl9zcG90LT5wb3NpdGlvbjsKKwlzd2l0Y2ggKGRpcl9wb3NfY21wKG1vZF9wb2ludCwgcG9zKSkg
eworCWNhc2UgTEVTU19USEFOOgorCQkvKiBAbW9kX3BvcyBpcyBfYmVmb3JlXyBAcmVhZGRpcl9z
cG90LCB0aGF0IGlzLCBlbnRyeSB3YXMKKwkJICogYWRkZWQvcmVtb3ZlZCBvbiB0aGUgbGVmdCAo
aW4ga2V5IG9yZGVyKSBvZiBjdXJyZW50CisJCSAqIHBvc2l0aW9uLiAqLworCQkvKiBsb2dpY2Fs
IG51bWJlciBvZiBkaXJlY3RvcnkgZW50cnkgcmVhZGRpciBpcyAibG9va2luZyIgYXQKKwkJICog
Y2hhbmdlcyAqLworCQlyZWFkZGlyX3Nwb3QtPmVudHJ5X25vICs9IGFkajsKKwkJYXNzZXJ0KCJu
aWtpdGEtMjU3NyIsCisJCSAgICAgICBlcmdvKGRpciAhPSBOVUxMLAorCQkJICAgIHJlaXNlcjRf
Z2V0X2Rpcl9mcG9zKGRpciwgZGlyLT5mX3BvcykgKyBhZGogPj0gMCkpOworCQlpZiAoZGVfaWRf
Y21wKCZwb3MtPmRpcl9lbnRyeV9rZXksCisJCQkgICAgICAmbW9kX3BvaW50LT5kaXJfZW50cnlf
a2V5KSA9PSBFUVVBTF9UTykgeworCQkJYXNzZXJ0KCJuaWtpdGEtMjU3NSIsIG1vZF9wb2ludC0+
cG9zIDwgcG9zLT5wb3MpOworCQkJLyoKKwkJCSAqIGlmIGVudHJ5IGFkZGVkL3JlbW92ZWQgaGFz
IHRoZSBzYW1lIGtleSBhcyBjdXJyZW50CisJCQkgKiBmb3IgcmVhZGRpciwgdXBkYXRlIGNvdW50
ZXIgb2YgZHVwbGljYXRlIGtleXMgaW4KKwkJCSAqIEByZWFkZGlyX3Nwb3QuCisJCQkgKi8KKwkJ
CXBvcy0+cG9zICs9IGFkajsKKwkJfQorCQlicmVhazsKKwljYXNlIEdSRUFURVJfVEhBTjoKKwkJ
LyogZGlyZWN0b3J5IGlzIG1vZGlmaWVkIGFmdGVyIEBwb3M6IG5vdGhpbmcgdG8gZG8uICovCisJ
CWJyZWFrOworCWNhc2UgRVFVQUxfVE86CisJCS8qIGNhbm5vdCBpbnNlcnQgYW4gZW50cnkgcmVh
ZGRpciBpcyBsb29raW5nIGF0LCBiZWNhdXNlIGl0CisJCSAgIGFscmVhZHkgZXhpc3RzLiAqLwor
CQlhc3NlcnQoIm5pa2l0YS0yNTc2IiwgYWRqIDwgMCk7CisJCS8qIGRpcmVjdG9yeSBlbnRyeSB0
byB3aGljaCBAcG9zIHBvaW50cyB0byBpcyBiZWluZworCQkgICByZW1vdmVkLgorCisJCSAgIE5P
VEUtTklLSVRBOiBSaWdodCB0aGluZyB0byBkbyBpcyB0byB1cGRhdGUgQHBvcyB0byBwb2ludAor
CQkgICB0byB0aGUgbmV4dCBlbnRyeS4gVGhpcyBpcyBjb21wbGV4ICh3ZSBhcmUgdW5kZXIgc3Bp
bi1sb2NrCisJCSAgIGZvciBvbmUgdGhpbmcpLiBKdXN0IHJld2luZCBpdCB0byB0aGUgYmVnaW5u
aW5nLiBOZXh0CisJCSAgIHJlYWRkaXIgd2lsbCBoYXZlIHRvIHNjYW4gdGhlIGJlZ2lubmluZyBv
ZgorCQkgICBkaXJlY3RvcnkuIFByb3BlciBzb2x1dGlvbiBpcyB0byB1c2Ugc2VtYXBob3JlIGlu
CisJCSAgIHNwaW4gbG9jaydzIHN0ZWFkIGFuZCB1c2UgcmV3aW5kX3JpZ2h0KCkgaGVyZS4KKwor
CQkgICBOT1RFLU5JS0lUQTogbm93LCBzZW1hcGhvcmUgaXMgdXNlZCwgc28uLi4KKwkJICovCisJ
CW1lbXNldChyZWFkZGlyX3Nwb3QsIDAsIHNpemVvZiAqcmVhZGRpcl9zcG90KTsKKwl9Cit9CisK
Ky8qIHNjYW4gYWxsIGZpbGUtZGVzY3JpcHRvcnMgZm9yIHRoaXMgZGlyZWN0b3J5IGFuZCBhZGp1
c3QgdGhlaXIKKyAgIHBvc2l0aW9ucyByZXNwZWN0aXZlbHkuIFNob3VsZCBiZSB1c2VkIGJ5IGlt
cGxlbWVudGF0aW9ucyBvZgorICAgYWRkX2VudHJ5IGFuZCByZW1fZW50cnkgb2YgZGlyIHBsdWdp
biAqLwordm9pZCByZWlzZXI0X2FkanVzdF9kaXJfZmlsZShzdHJ1Y3QgaW5vZGUgKmRpciwgY29u
c3Qgc3RydWN0IGRlbnRyeSAqZGUsCisJCQkgICAgIGludCBvZmZzZXQsIGludCBhZGopCit7CisJ
cmVpc2VyNF9maWxlX2ZzZGF0YSAqc2NhbjsKKwlzdHJ1Y3QgZGlyX3BvcyBtb2RfcG9pbnQ7CisK
Kwlhc3NlcnQoIm5pa2l0YS0yNTM2IiwgZGlyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI1
MzgiLCBkZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yNTM5IiwgYWRqICE9IDApOworCisJ
YnVpbGRfZGVfaWQoZGlyLCAmZGUtPmRfbmFtZSwgJm1vZF9wb2ludC5kaXJfZW50cnlfa2V5KTsK
Kwltb2RfcG9pbnQucG9zID0gb2Zmc2V0OworCisJc3Bpbl9sb2NrX2lub2RlKGRpcik7CisKKwkv
KgorCSAqIG5ldyBlbnRyeSB3YXMgYWRkZWQvcmVtb3ZlZCBpbiBkaXJlY3RvcnkgQGRpci4gU2Nh
biBhbGwgZmlsZQorCSAqIGRlc2NyaXB0b3JzIGZvciBAZGlyIHRoYXQgYXJlIGN1cnJlbnRseSBp
bnZvbHZlZCBpbnRvIEByZWFkZGlyIGFuZAorCSAqIHVwZGF0ZSB0aGVtLgorCSAqLworCisJbGlz
dF9mb3JfZWFjaF9lbnRyeShzY2FuLCBnZXRfcmVhZGRpcl9saXN0KGRpciksIGRpci5saW5rYWdl
KQorCQlhZGp1c3RfZGlyX3BvcyhzY2FuLT5iYWNrLCAmc2Nhbi0+ZGlyLnJlYWRkaXIsICZtb2Rf
cG9pbnQsIGFkaik7CisKKwlzcGluX3VubG9ja19pbm9kZShkaXIpOworfQorCisvKgorICogdHJh
dmVyc2UgdHJlZSB0byBzdGFydC9jb250aW51ZSByZWFkZGlyIGZyb20gdGhlIHJlYWRkaXIgcG9z
aXRpb24gQHBvcy4KKyAqLworc3RhdGljIGludCBkaXJfZ29fdG8oc3RydWN0IGZpbGUgKmRpciwg
c3RydWN0IHJlYWRkaXJfcG9zICpwb3MsIHRhcF90ICp0YXApCit7CisJcmVpc2VyNF9rZXkga2V5
OworCWludCByZXN1bHQ7CisJc3RydWN0IGlub2RlICppbm9kZTsKKworCWFzc2VydCgibmlraXRh
LTI1NTQiLCBwb3MgIT0gTlVMTCk7CisKKwlpbm9kZSA9IGZpbGVfaW5vZGUoZGlyKTsKKwlyZXN1
bHQgPSBpbm9kZV9kaXJfcGx1Z2luKGlub2RlKS0+YnVpbGRfcmVhZGRpcl9rZXkoZGlyLCAma2V5
KTsKKwlpZiAocmVzdWx0ICE9IDApCisJCXJldHVybiByZXN1bHQ7CisJcmVzdWx0ID0gcmVpc2Vy
NF9vYmplY3RfbG9va3VwKGlub2RlLAorCQkJCSAgICAgICAma2V5LAorCQkJCSAgICAgICB0YXAt
PmNvb3JkLAorCQkJCSAgICAgICB0YXAtPmxoLAorCQkJCSAgICAgICB0YXAtPm1vZGUsCisJCQkJ
ICAgICAgIEZJTkRfRVhBQ1QsCisJCQkJICAgICAgIExFQUZfTEVWRUwsIExFQUZfTEVWRUwsCisJ
CQkJICAgICAgIDAsICZ0YXAtPnJhX2luZm8pOworCWlmIChyZXN1bHQgPT0gQ0JLX0NPT1JEX0ZP
VU5EKQorCQlyZXN1bHQgPSByZXdpbmRfcmlnaHQodGFwLCAoaW50KXBvcy0+cG9zaXRpb24ucG9z
KTsKKwllbHNlIHsKKwkJdGFwLT5jb29yZC0+bm9kZSA9IE5VTEw7CisJCWRvbmVfbGgodGFwLT5s
aCk7CisJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKwor
LyoKKyAqIGhhbmRsaW5nIG9mIG5vbi11bmlxdWUga2V5czogY2FsY3VsYXRlIGF0IHdoYXQgb3Jk
aW5hbCBwb3NpdGlvbiB3aXRoaW4KKyAqIHNlcXVlbmNlIG9mIGRpcmVjdG9yeSBpdGVtcyB3aXRo
IGlkZW50aWNhbCBrZXlzIEBwb3MgaXMuCisgKi8KK3N0YXRpYyBpbnQgc2V0X3BvcyhzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBzdHJ1Y3QgcmVhZGRpcl9wb3MgKnBvcywgdGFwX3QgKnRhcCkKK3sKKwlp
bnQgcmVzdWx0OworCWNvb3JkX3QgY29vcmQ7CisJbG9ja19oYW5kbGUgbGg7CisJdGFwX3Qgc2Nh
bjsKKwlkZV9pZCAqZGlkOworCXJlaXNlcjRfa2V5IGRlX2tleTsKKworCWNvb3JkX2luaXRfemVy
bygmY29vcmQpOworCWluaXRfbGgoJmxoKTsKKwlyZWlzZXI0X3RhcF9pbml0KCZzY2FuLCAmY29v
cmQsICZsaCwgWk5PREVfUkVBRF9MT0NLKTsKKwlyZWlzZXI0X3RhcF9jb3B5KCZzY2FuLCB0YXAp
OworCXJlaXNlcjRfdGFwX2xvYWQoJnNjYW4pOworCXBvcy0+cG9zaXRpb24ucG9zID0gMDsKKwor
CWRpZCA9ICZwb3MtPnBvc2l0aW9uLmRpcl9lbnRyeV9rZXk7CisKKwlpZiAoaXNfdmFsaWRfZGly
X2Nvb3JkKGlub2RlLCBzY2FuLmNvb3JkKSkgeworCisJCWJ1aWxkX2RlX2lkX2J5X2tleSh1bml0
X2tleV9ieV9jb29yZChzY2FuLmNvb3JkLCAmZGVfa2V5KSwgZGlkKTsKKworCQl3aGlsZSAoMSkg
eworCisJCQlyZXN1bHQgPSBnb19wcmV2X3VuaXQoJnNjYW4pOworCQkJaWYgKHJlc3VsdCAhPSAw
KQorCQkJCWJyZWFrOworCisJCQlpZiAoIWlzX3ZhbGlkX2Rpcl9jb29yZChpbm9kZSwgc2Nhbi5j
b29yZCkpIHsKKwkJCQlyZXN1bHQgPSAtRUlOVkFMOworCQkJCWJyZWFrOworCQkJfQorCisJCQkv
KiBnZXQga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSAqLworCQkJdW5pdF9rZXlfYnlfY29vcmQoc2Nh
bi5jb29yZCwgJmRlX2tleSk7CisJCQlpZiAoZGVfaWRfa2V5X2NtcChkaWQsICZkZV9rZXkpICE9
IEVRVUFMX1RPKSB7CisJCQkJLyogZHVwbGljYXRlLXNlcXVlbmNlIGlzIG92ZXIgKi8KKwkJCQli
cmVhazsKKwkJCX0KKwkJCXBvcy0+cG9zaXRpb24ucG9zKys7CisJCX0KKwl9IGVsc2UKKwkJcmVz
dWx0ID0gUkVURVJSKC1FTk9FTlQpOworCXJlaXNlcjRfdGFwX3JlbHNlKCZzY2FuKTsKKwlyZWlz
ZXI0X3RhcF9kb25lKCZzY2FuKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgorICogInJld2lu
ZCIgZGlyZWN0b3J5IHRvIEBvZmZzZXQsIGkuZS4sIHNldCBAcG9zIGFuZCBAdGFwIGNvcnJlc3Bv
bmRpbmdseS4KKyAqLworc3RhdGljIGludCBkaXJfcmV3aW5kKHN0cnVjdCBmaWxlICpkaXIsIGxv
ZmZfdCAqZnBvcywgc3RydWN0IHJlYWRkaXJfcG9zICpwb3MsIHRhcF90ICp0YXApCit7CisJX191
NjQgZGVzdGluYXRpb247CisJX19zNjQgc2hpZnQ7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgaW5v
ZGUgKmlub2RlOworCWxvZmZfdCBkaXJwb3M7CisKKwlhc3NlcnQoIm5pa2l0YS0yNTUzIiwgZGly
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI1NDgiLCBwb3MgIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtMjU1MSIsIHRhcC0+Y29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjU1
MiIsIHRhcC0+bGggIT0gTlVMTCk7CisKKwlkaXJwb3MgPSByZWlzZXI0X2dldF9kaXJfZnBvcyhk
aXIsICpmcG9zKTsKKwlzaGlmdCA9IGRpcnBvcyAtIHBvcy0+ZnBvczsKKwkvKiB0aGlzIGlzIGxv
Z2ljYWwgZGlyZWN0b3J5IGVudHJ5IHdpdGhpbiBAZGlyIHdoaWNoIHdlIGFyZSByZXdpbmRpbmcK
KwkgKiB0byAqLworCWRlc3RpbmF0aW9uID0gcG9zLT5lbnRyeV9ubyArIHNoaWZ0OworCisJaW5v
ZGUgPSBmaWxlX2lub2RlKGRpcik7CisJaWYgKGRpcnBvcyA8IDApCisJCXJldHVybiBSRVRFUlIo
LUVJTlZBTCk7CisJZWxzZSBpZiAoZGVzdGluYXRpb24gPT0gMGxsIHx8IGRpcnBvcyA9PSAwKSB7
CisJCS8qIHJld2luZCB0byB0aGUgYmVnaW5uaW5nIG9mIGRpcmVjdG9yeSAqLworCQltZW1zZXQo
cG9zLCAwLCBzaXplb2YgKnBvcyk7CisJCXJldHVybiBkaXJfZ29fdG8oZGlyLCBwb3MsIHRhcCk7
CisJfSBlbHNlIGlmIChkZXN0aW5hdGlvbiA+PSBpbm9kZS0+aV9zaXplKQorCQlyZXR1cm4gUkVU
RVJSKC1FTk9FTlQpOworCisJaWYgKHNoaWZ0IDwgMCkgeworCQkvKiBJIGFtIGFmcmFpZCBvZiBu
ZWdhdGl2ZSBudW1iZXJzICovCisJCXNoaWZ0ID0gLXNoaWZ0OworCQkvKiByZXdpbmRpbmcgdG8g
dGhlIGxlZnQgKi8KKwkJaWYgKHNoaWZ0IDw9IChpbnQpcG9zLT5wb3NpdGlvbi5wb3MpIHsKKwkJ
CS8qIGRlc3RpbmF0aW9uIGlzIHdpdGhpbiBzZXF1ZW5jZSBvZiBlbnRyaWVzIHdpdGgKKwkJCSAg
IGR1cGxpY2F0ZSBrZXlzLiAqLworCQkJcmVzdWx0ID0gZGlyX2dvX3RvKGRpciwgcG9zLCB0YXAp
OworCQl9IGVsc2UgeworCQkJc2hpZnQgLT0gcG9zLT5wb3NpdGlvbi5wb3M7CisJCQl3aGlsZSAo
MSkgeworCQkJCS8qIHJlcGV0aXRpb25zOiBkZWFkbG9jayBpcyBwb3NzaWJsZSB3aGVuCisJCQkJ
ICAgZ29pbmcgdG8gdGhlIGxlZnQuICovCisJCQkJcmVzdWx0ID0gZGlyX2dvX3RvKGRpciwgcG9z
LCB0YXApOworCQkJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJCQlyZXN1bHQgPSByZXdpbmRfbGVm
dCh0YXAsIHNoaWZ0KTsKKwkJCQkJaWYgKHJlc3VsdCA9PSAtRV9ERUFETE9DSykgeworCQkJCQkJ
cmVpc2VyNF90YXBfZG9uZSh0YXApOworCQkJCQkJY29udGludWU7CisJCQkJCX0KKwkJCQl9CisJ
CQkJYnJlYWs7CisJCQl9CisJCX0KKwl9IGVsc2UgeworCQkvKiByZXdpbmRpbmcgdG8gdGhlIHJp
Z2h0ICovCisJCXJlc3VsdCA9IGRpcl9nb190byhkaXIsIHBvcywgdGFwKTsKKwkJaWYgKHJlc3Vs
dCA9PSAwKQorCQkJcmVzdWx0ID0gcmV3aW5kX3JpZ2h0KHRhcCwgc2hpZnQpOworCX0KKwlpZiAo
cmVzdWx0ID09IDApIHsKKwkJcmVzdWx0ID0gc2V0X3Bvcyhpbm9kZSwgcG9zLCB0YXApOworCQlp
ZiAocmVzdWx0ID09IDApIHsKKwkJCS8qIHVwZGF0ZSBwb3MtPnBvc2l0aW9uLnBvcyAqLworCQkJ
cG9zLT5lbnRyeV9ubyA9IGRlc3RpbmF0aW9uOworCQkJcG9zLT5mcG9zID0gZGlycG9zOworCQl9
CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qCisgKiBGdW5jdGlvbiB0aGF0IGlzIGNhbGxl
ZCBieSBjb21tb25fcmVhZGRpcigpIG9uIGVhY2ggZGlyZWN0b3J5IGVudHJ5IHdoaWxlCisgKiBk
b2luZyByZWFkZGlyLiAtPmZpbGxkaXIgY2FsbGJhY2sgbWF5IGJsb2NrLCBzbyB3ZSBoYWQgdG8g
cmVsZWFzZSBsb25nIHRlcm0KKyAqIGxvY2sgd2hpbGUgY2FsbGluZyBpdC4gVG8gYXZvaWQgcmVw
ZWF0aW5nIHRyZWUgdHJhdmVyc2FsLCBzZWFsIGlzIHVzZWQuIElmCisgKiBzZWFsIGlzIGJyb2tl
biwgd2UgcmV0dXJuIC1FX1JFUEVBVC4gTm9kZSBpcyB1bmxvY2tlZCBpbiB0aGlzIGNhc2UuCisg
KgorICogV2hldGhlciBub2RlIGlzIHVubG9ja2VkIGluIGNhc2Ugb2YgYW55IG90aGVyIGVycm9y
IGlzIHVuZGVmaW5lZC4gSXQgaXMKKyAqIGd1YXJhbnRlZWQgdG8gYmUgc3RpbGwgbG9ja2VkIGlm
IHN1Y2Nlc3MgKDApIGlzIHJldHVybmVkLgorICoKKyAqIFdoZW4gLT5maWxsZGlyKCkgd2FudHMg
bm8gbW9yZSwgZmVlZF9lbnRyeSgpIHJldHVybnMgMSwgYW5kIG5vZGUgaXMKKyAqIHVubG9ja2Vk
LgorICovCitzdGF0aWMgaW50CitmZWVkX2VudHJ5KHRhcF90ICp0YXAsIHN0cnVjdCBkaXJfY29u
dGV4dCAqY29udGV4dCkKK3sKKwlpdGVtX3BsdWdpbiAqaXBsdWc7CisJY2hhciAqbmFtZTsKKwly
ZWlzZXI0X2tleSBzZF9rZXk7CisJaW50IHJlc3VsdDsKKwljaGFyIGJ1ZltERV9OQU1FX0JVRl9M
RU5dOworCWNoYXIgbmFtZV9idWZbMzJdOworCWNoYXIgKmxvY2FsX25hbWU7CisJdW5zaWduZWQg
ZmlsZV90eXBlOworCXNlYWxfdCBzZWFsOworCWNvb3JkX3QgKmNvb3JkOworCXJlaXNlcjRfa2V5
IGVudHJ5X2tleTsKKworCWNvb3JkID0gdGFwLT5jb29yZDsKKwlpcGx1ZyA9IGl0ZW1fcGx1Z2lu
X2J5X2Nvb3JkKGNvb3JkKTsKKworCS8qIHBvaW50ZXIgdG8gbmFtZSB3aXRoaW4gdGhlIG5vZGUg
Ki8KKwluYW1lID0gaXBsdWctPnMuZGlyLmV4dHJhY3RfbmFtZShjb29yZCwgYnVmKTsKKwlhc3Nl
cnQoIm5pa2l0YS0xMzcxIiwgbmFtZSAhPSBOVUxMKTsKKworCS8qIGtleSBvZiBvYmplY3QgdGhl
IGVudHJ5IHBvaW50cyB0byAqLworCWlmIChpcGx1Zy0+cy5kaXIuZXh0cmFjdF9rZXkoY29vcmQs
ICZzZF9rZXkpICE9IDApCisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisKKwkvKiB3ZSBtdXN0IHJl
bGVhc2UgbG9uZ3Rlcm0gem5vZGUgbG9jayBiZWZvcmUgY2FsbGluZyBmaWxsZGlyIHRvIGF2b2lk
CisJICAgZGVhZGxvY2sgd2hpY2ggbWF5IGhhcHBlbiBpZiBmaWxsZGlyIGNhdXNlcyBwYWdlIGZh
dWx0LiBTbywgY29weQorCSAgIG5hbWUgdG8gaW50ZXJtZWRpYXRlIGJ1ZmZlciAqLworCWlmIChz
dHJsZW4obmFtZSkgKyAxID4gc2l6ZW9mKG5hbWVfYnVmKSkgeworCQlsb2NhbF9uYW1lID0ga21h
bGxvYyhzdHJsZW4obmFtZSkgKyAxLAorCQkJCSAgICAgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0
KCkpOworCQlpZiAobG9jYWxfbmFtZSA9PSBOVUxMKQorCQkJcmV0dXJuIFJFVEVSUigtRU5PTUVN
KTsKKwl9IGVsc2UKKwkJbG9jYWxfbmFtZSA9IG5hbWVfYnVmOworCisJc3RyY3B5KGxvY2FsX25h
bWUsIG5hbWUpOworCWZpbGVfdHlwZSA9IGlwbHVnLT5zLmRpci5leHRyYWN0X2ZpbGVfdHlwZShj
b29yZCk7CisKKwl1bml0X2tleV9ieV9jb29yZChjb29yZCwgJmVudHJ5X2tleSk7CisJcmVpc2Vy
NF9zZWFsX2luaXQoJnNlYWwsIGNvb3JkLCAmZW50cnlfa2V5KTsKKworCWxvbmd0ZXJtX3VubG9j
a196bm9kZSh0YXAtPmxoKTsKKworCS8qCisJICogc2VuZCBpbmZvcm1hdGlvbiBhYm91dCBkaXJl
Y3RvcnkgZW50cnkgdG8gdGhlIC0+ZmlsbGRpcigpIGZpbGxlcgorCSAqIHN1cHBsaWVkIHRvIHVz
IGJ5IGNhbGxlciAoVkZTKS4KKwkgKgorCSAqIC0+ZmlsbGRpciBpcyBlbnRpdGxlZCB0byBkbyB3
ZWlyZCB0aGluZ3MuIEZvciBleGFtcGxlLCAtPmZpbGxkaXIKKwkgKiBzdXBwbGllZCBieSBrbmZz
ZCByZS1lbnRlcnMgZmlsZSBzeXN0ZW0uIE1ha2Ugc3VyZSBubyBsb2NrcyBhcmUKKwkgKiBoZWxk
LgorCSAqLworCWFzc2VydCgibmlraXRhLTM0MzYiLCBsb2NrX3N0YWNrX2lzY2xlYW4oZ2V0X2N1
cnJlbnRfbG9ja19zdGFjaygpKSk7CisKKwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsK
KwlpZiAoIWRpcl9lbWl0KGNvbnRleHQsIG5hbWUsIChpbnQpc3RybGVuKG5hbWUpLAorCQkgICAg
ICAvKiBpbm9kZSBudW1iZXIgb2Ygb2JqZWN0IGJvdW5kZW4gYnkgdGhpcyBlbnRyeSAqLworCQkg
ICAgICBvaWRfdG9fdWlubyhnZXRfa2V5X29iamVjdGlkKCZzZF9rZXkpKSwgZmlsZV90eXBlKSkK
KwkJLyogLT5maWxsZGlyKCkgaXMgc2F0aXNmaWVkLiAobm8gc3BhY2UgaW4gYnVmZmVyLCBJT1cp
ICovCisJCXJlc3VsdCA9IDE7CisJZWxzZQorCQlyZXN1bHQgPSByZWlzZXI0X3NlYWxfdmFsaWRh
dGUoJnNlYWwsIGNvb3JkLCAmZW50cnlfa2V5LAorCQkJCQkgICAgICAgdGFwLT5saCwgdGFwLT5t
b2RlLAorCQkJCQkgICAgICAgWk5PREVfTE9DS19ISVBSSSk7CisKKwlpZiAobG9jYWxfbmFtZSAh
PSBuYW1lX2J1ZikKKwkJa2ZyZWUobG9jYWxfbmFtZSk7CisKKwlyZXR1cm4gcmVzdWx0OworfQor
CitzdGF0aWMgdm9pZCBtb3ZlX2VudHJ5KHN0cnVjdCByZWFkZGlyX3BvcyAqcG9zLCBjb29yZF90
ICpjb29yZCkKK3sKKwlyZWlzZXI0X2tleSBkZV9rZXk7CisJZGVfaWQgKmRpZDsKKworCS8qIHVw
ZGF0ZSBAcG9zICovCisJKytwb3MtPmVudHJ5X25vOworCWRpZCA9ICZwb3MtPnBvc2l0aW9uLmRp
cl9lbnRyeV9rZXk7CisKKwkvKiBnZXQga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSAqLworCXVuaXRf
a2V5X2J5X2Nvb3JkKGNvb3JkLCAmZGVfa2V5KTsKKworCWlmIChkZV9pZF9rZXlfY21wKGRpZCwg
JmRlX2tleSkgPT0gRVFVQUxfVE8pCisJCS8qIHdlIGFyZSB3aXRoaW4gc2VxdWVuY2Ugb2YgZGly
ZWN0b3J5IGVudHJpZXMKKwkJICAgd2l0aCBkdXBsaWNhdGUga2V5cy4gKi8KKwkJKytwb3MtPnBv
c2l0aW9uLnBvczsKKwllbHNlIHsKKwkJcG9zLT5wb3NpdGlvbi5wb3MgPSAwOworCQlidWlsZF9k
ZV9pZF9ieV9rZXkoJmRlX2tleSwgZGlkKTsKKwl9CisJKytwb3MtPmZwb3M7Cit9CisKKy8qCisg
KiAgICAgU1RBVEVMRVNTIFJFQURESVIKKyAqCisgKiByZWFkZGlyIHN1cHBvcnQgaW4gcmVpc2Vy
NCByZWxpZXMgb24gYWJpbGl0eSB0byB1cGRhdGUgcmVhZGRpcl9wb3MgZW1iZWRkZWQKKyAqIGlu
dG8gcmVpc2VyNF9maWxlX2ZzZGF0YSBvbiBlYWNoIGRpcmVjdG9yeSBtb2RpZmljYXRpb24gKG5h
bWUgaW5zZXJ0aW9uIGFuZAorICogcmVtb3ZhbCksIHNlZSByZWlzZXI0X3JlYWRkaXJfY29tbW9u
KCkgZnVuY3Rpb24gYmVsb3cuIFRoaXMgb2J2aW91c2x5IGRvZXNuJ3QKKyAqIHdvcmsgd2hlbiBy
ZWlzZXI0IGlzIGFjY2Vzc2VkIG92ZXIgTkZTLCBiZWNhdXNlIE5GUyBkb2Vzbid0IGtlZXAgYW55
IHN0YXRlCisgKiBhY3Jvc3MgY2xpZW50IFJFQURESVIgcmVxdWVzdHMgZm9yIHRoZSBzYW1lIGRp
cmVjdG9yeS4KKyAqCisgKiBUbyBhZGRyZXNzIHRoaXMgd2UgbWFpbnRhaW4gYSAicG9vbCIgb2Yg
ZGV0YWNoZWQgcmVpc2VyNF9maWxlX2ZzZGF0YQorICogKGRfY3Vyc29yKS4gV2hlbmV2ZXIgTkZT
IHJlYWRkaXIgcmVxdWVzdCBjb21lcywgd2UgZGV0ZWN0IHRoaXMsIGFuZCB0cnkgdG8KKyAqIGZp
bmQgZGV0YWNoZWQgcmVpc2VyNF9maWxlX2ZzZGF0YSBjb3JyZXNwb25kaW5nIHRvIHByZXZpb3Vz
IHJlYWRkaXIKKyAqIHJlcXVlc3QuIEluIG90aGVyIHdvcmRzLCBhZGRpdGlvbmFsIHN0YXRlIGlz
IG1haW50YWluZWQgb24gdGhlCisgKiBzZXJ2ZXIuIChUaGlzIGlzIHNvbWV3aGF0IGNvbnRyYXJ5
IHRvIHRoZSBkZXNpZ24gZ29hbHMgb2YgTkZTIHByb3RvY29sLikKKyAqCisgKiBUbyBlZmZpY2ll
bnRseSBkZXRlY3Qgd2hlbiBvdXIgLT5yZWFkZGlyKCkgbWV0aG9kIGlzIGNhbGxlZCBieSBORlMg
c2VydmVyLAorICogZGVudHJ5IGlzIG1hcmtlZCBhcyAic3RhdGVsZXNzIiBpbiByZWlzZXI0X2Rl
Y29kZV9maCgpICh0aGlzIGlzIGNoZWNrZWQgYnkKKyAqIGZpbGVfaXNfc3RhdGVsZXNzKCkgZnVu
Y3Rpb24pLgorICoKKyAqIFRvIGZpbmQgb3V0IGRfY3Vyc29yIGluIHRoZSBwb29sLCB3ZSBlbmNv
ZGUgY2xpZW50IGlkIChjaWQpIGluIHRoZSBoaWdoZXN0CisgKiBiaXRzIG9mIE5GUyByZWFkZGly
IGNvb2tpZTogd2hlbiBmaXJzdCByZWFkZGlyIHJlcXVlc3QgY29tZXMgdG8gdGhlIGdpdmVuCisg
KiBkaXJlY3RvcnkgZnJvbSB0aGUgZ2l2ZW4gY2xpZW50LCBjb29raWUgaXMgc2V0IHRvIDAuIFRo
aXMgc2l0dWF0aW9uIGlzCisgKiBkZXRlY3RlZCwgZ2xvYmFsIGNpZF9jb3VudGVyIGlzIGluY3Jl
bWVudGVkLCBhbmQgc3RvcmVkIGluIGhpZ2hlc3QgYml0cyBvZgorICogYWxsIGRpcmVudHJ5IG9m
ZnNldHMgcmV0dXJuZWQgdG8gdGhlIGNsaWVudCwgaW5jbHVkaW5nIGxhc3Qgb25lLiBBcyB0aGUK
KyAqIG9ubHkgdmFsaWQgcmVhZGRpciBjb29raWUgaXMgb25lIG9idGFpbmVkIGFzIGRpcmVudHJ5
LT5vZmZzZXQsIHdlIGFyZQorICogZ3VhcmFudGVlZCB0aGF0IG5leHQgcmVhZGRpciByZXF1ZXN0
IChjb250aW51aW5nIGN1cnJlbnQgb25lKSB3aWxsIGhhdmUKKyAqIGN1cnJlbnQgY2lkIGluIHRo
ZSBoaWdoZXN0IGJpdHMgb2Ygc3RhcnRpbmcgcmVhZGRpciBjb29raWUuIEFsbCBkX2N1cnNvcnMK
KyAqIGFyZSBoYXNoZWQgaW50byBwZXItc3VwZXItYmxvY2sgaGFzaCB0YWJsZSBieSAob2lkLCBj
aWQpIGtleS4KKyAqCisgKiBJbiBhZGRpdGlvbiBkX2N1cnNvcnMgYXJlIHBsYWNlZCBpbnRvIHBl
ci1zdXBlci1ibG9jayByYWRpeCB0cmVlIHdoZXJlIHRoZXkKKyAqIGFyZSBrZXllZCBieSBvaWQg
YWxvbmUuIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIGVmZmljaWVudGx5IHJlbW92ZSB0aGVtIGR1cmlu
ZworICogcm1kaXIuCisgKgorICogQXQgbGFzdCwgY3VycmVudGx5IHVudXNlZCBkX2N1cnNvcnMg
YXJlIGxpbmtlZCBpbnRvIHNwZWNpYWwgbGlzdC4gVGhpcyBsaXN0CisgKiBpcyB1c2VkIGRfY3Vy
c29yX3NocmluayB0byByZWNsYWltIGRfY3Vyc29ycyBvbiBtZW1vcnkgcHJlc3N1cmUuCisgKgor
ICovCisKKy8qCisgKiBwcmVwYXJlIGZvciByZWFkZGlyLgorICoKKyAqIE5PVEU6IEBmLT5mX3Bv
cyBtYXkgYmUgb3V0LW9mLWRhdGUgKGl0ZXJhdGUoKSB2cyByZWFkZGlyKCkpLgorICogICAgICAg
QGZwb3MgaXMgZWZmZWN0aXZlIHBvc2l0aW9uLgorICovCitzdGF0aWMgaW50IGRpcl9yZWFkZGly
X2luaXQoc3RydWN0IGZpbGUgKmYsIGxvZmZfdCogZnBvcywgdGFwX3QgKnRhcCwKKwkJCSAgICBz
dHJ1Y3QgcmVhZGRpcl9wb3MgKipwb3MpCit7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlyZWlz
ZXI0X2ZpbGVfZnNkYXRhICpmc2RhdGE7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRh
LTEzNTkiLCBmICE9IE5VTEwpOworCWlub2RlID0gZmlsZV9pbm9kZShmKTsKKwlhc3NlcnQoIm5p
a2l0YS0xMzYwIiwgaW5vZGUgIT0gTlVMTCk7CisKKwlpZiAoIVNfSVNESVIoaW5vZGUtPmlfbW9k
ZSkpCisJCXJldHVybiBSRVRFUlIoLUVOT1RESVIpOworCisJLyogdHJ5IHRvIGZpbmQgZGV0YWNo
ZWQgcmVhZGRpciBzdGF0ZSAqLworCXJlc3VsdCA9IHJlaXNlcjRfYXR0YWNoX2ZzZGF0YShmLCBm
cG9zLCBpbm9kZSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0OworCisJZnNk
YXRhID0gcmVpc2VyNF9nZXRfZmlsZV9mc2RhdGEoZik7CisJYXNzZXJ0KCJuaWtpdGEtMjU3MSIs
IGZzZGF0YSAhPSBOVUxMKTsKKwlpZiAoSVNfRVJSKGZzZGF0YSkpCisJCXJldHVybiBQVFJfRVJS
KGZzZGF0YSk7CisKKwkvKiBhZGQgZmlsZSBkZXNjcmlwdG9yIHRvIHRoZSByZWFkZGlyIGxpc3Qg
aGFuZ2luZyBvZiBkaXJlY3RvcnkKKwkgKiBpbm9kZS4gVGhpcyBsaXN0IGlzIHVzZWQgdG8gc2Nh
biAicmVhZGRpcnMtaW4tcHJvZ3Jlc3MiIHdoaWxlCisJICogaW5zZXJ0aW5nIG9yIHJlbW92aW5n
IG5hbWVzIGluIHRoZSBkaXJlY3RvcnkuICovCisJc3Bpbl9sb2NrX2lub2RlKGlub2RlKTsKKwlp
ZiAobGlzdF9lbXB0eV9jYXJlZnVsKCZmc2RhdGEtPmRpci5saW5rYWdlKSkKKwkJbGlzdF9hZGQo
JmZzZGF0YS0+ZGlyLmxpbmthZ2UsIGdldF9yZWFkZGlyX2xpc3QoaW5vZGUpKTsKKwkqcG9zID0g
JmZzZGF0YS0+ZGlyLnJlYWRkaXI7CisJc3Bpbl91bmxvY2tfaW5vZGUoaW5vZGUpOworCisJLyog
bW92ZSBAdGFwIHRvIHRoZSBjdXJyZW50IHBvc2l0aW9uICovCisJcmV0dXJuIGRpcl9yZXdpbmQo
ZiwgZnBvcywgKnBvcywgdGFwKTsKK30KKworLyogdGhpcyBpcyBpbXBsZW1lbnRhdGlvbiBvZiB2
ZnMncyBsbHNlZWsgbWV0aG9kIG9mIHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgZm9yCisgICB0eXBp
Y2FsIGRpcmVjdG9yeQorICAgU2VlIGNvbW1lbnQgYmVmb3JlIHJlaXNlcjRfaXRlcmF0ZV9jb21t
b24oKSBmb3IgZXhwbGFuYXRpb24uCisqLworbG9mZl90IHJlaXNlcjRfbGxzZWVrX2Rpcl9jb21t
b24oc3RydWN0IGZpbGUgKmZpbGUsIGxvZmZfdCBvZmYsIGludCBvcmlnaW4pCit7CisJcmVpc2Vy
NF9jb250ZXh0ICpjdHg7CisJbG9mZl90IHJlc3VsdDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOwor
CisJaW5vZGUgPSBmaWxlX2lub2RlKGZpbGUpOworCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRl
eHQoaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJuIFBUUl9FUlIoY3R4
KTsKKworCWlub2RlX2xvY2soaW5vZGUpOworCisJLyogdXBkYXRlIC0+Zl9wb3MgKi8KKwlyZXN1
bHQgPSBkZWZhdWx0X2xsc2Vla191bmxvY2tlZChmaWxlLCBvZmYsIG9yaWdpbik7CisJaWYgKHJl
c3VsdCA+PSAwKSB7CisJCWludCBmZjsKKwkJY29vcmRfdCBjb29yZDsKKwkJbG9ja19oYW5kbGUg
bGg7CisJCXRhcF90IHRhcDsKKwkJc3RydWN0IHJlYWRkaXJfcG9zICpwb3M7CisKKwkJY29vcmRf
aW5pdF96ZXJvKCZjb29yZCk7CisJCWluaXRfbGgoJmxoKTsKKwkJcmVpc2VyNF90YXBfaW5pdCgm
dGFwLCAmY29vcmQsICZsaCwgWk5PREVfUkVBRF9MT0NLKTsKKworCQlmZiA9IGRpcl9yZWFkZGly
X2luaXQoZmlsZSwgJmZpbGUtPmZfcG9zLCAmdGFwLCAmcG9zKTsKKwkJcmVpc2VyNF9kZXRhY2hf
ZnNkYXRhKGZpbGUpOworCQlpZiAoZmYgIT0gMCkKKwkJCXJlc3VsdCA9IChsb2ZmX3QpIGZmOwor
CQlyZWlzZXI0X3RhcF9kb25lKCZ0YXApOworCX0KKwlyZWlzZXI0X2RldGFjaF9mc2RhdGEoZmls
ZSk7CisJaW5vZGVfdW5sb2NrKGlub2RlKTsKKworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7
CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24g
b2YgdmZzJ3MgcmVhZGRpciBtZXRob2Qgb2Ygc3RydWN0CisgICBmaWxlX29wZXJhdGlvbnMKKwor
ICAgcmVhZGRpciBwcm9ibGVtczoKKworICAgcmVhZGRpcigyKS9nZXRkZW50cygyKSBpbnRlcmZh
Y2UgaXMgYmFzZWQgb24gaW1wbGljaXQgYXNzdW1wdGlvbiB0aGF0CisgICByZWFkZGlyIGNhbiBi
ZSByZXN0YXJ0ZWQgZnJvbSBhbnkgcGFydGljdWxhciBwb2ludCBieSBzdXBwbHlpbmcgZmlsZSBz
eXN0ZW0KKyAgIHdpdGggb2ZmX3QtZnVsbCBvZiBkYXRhLiBUaGF0IGlzLCBmaWxlIHN5c3RlbSBm
aWxscyAtPmRfb2ZmIGZpZWxkIGluIHN0cnVjdAorICAgZGlyZW50IGFuZCBsYXRlciB1c2VyIHBh
c3NlcyAtPmRfb2ZmIHRvIHRoZSBzZWVrZGlyKDMpLCB3aGljaCBpcywgYWN0dWFsbHksCisgICBp
bXBsZW1lbnRlZCBieSBnbGliYyBhcyBsc2VlaygyKSBvbiBkaXJlY3RvcnkuCisKKyAgIFJlaXNl
cjQgY2Fubm90IHJlc3RhcnQgcmVhZGRpciBmcm9tIDY0IGJpdHMgb2YgZGF0YSwgYmVjYXVzZSB0
d28gbGFzdAorICAgY29tcG9uZW50cyBvZiB0aGUga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSBhcmUg
dW5rbm93biwgd2hpY2ggZ2l2ZW4gMTI4IGJpdHM6CisgICBsb2NhbGl0eSBhbmQgdHlwZSBmaWVs
ZHMgaW4gdGhlIGtleSBvZiBkaXJlY3RvcnkgZW50cnkgYXJlIGFsd2F5cyBrbm93biwgdG8KKyAg
IHN0YXJ0IHJlYWRkaXIoKSBmcm9tIGdpdmVuIHBvaW50IG9iamVjdGlkIGFuZCBvZmZzZXQgZmll
bGRzIGhhdmUgdG8gYmUKKyAgIGZpbGxlZC4KKworICAgVHJhZGl0aW9uYWwgVU5JWCBBUEkgZm9y
IHNjYW5uaW5nIHRocm91Z2ggZGlyZWN0b3J5CisgICAocmVhZGRpci9zZWVrZGlyL3RlbGxkaXIv
b3BlbmRpci9jbG9zZWRpci9yZXdpbmRpci9nZXRkZW50cykgaXMgYmFzZWQgb24gdGhlCisgICBh
c3N1bXB0aW9uIHRoYXQgZGlyZWN0b3J5IGlzIHN0cnVjdHVyZWQgdmVyeSBtdWNoIGxpa2UgcmVn
dWxhciBmaWxlLCBpbgorICAgcGFydGljdWxhciwgaXQgaXMgaW1wbGllZCB0aGF0IGVhY2ggbmFt
ZSB3aXRoaW4gZ2l2ZW4gZGlyZWN0b3J5IChkaXJlY3RvcnkKKyAgIGVudHJ5KSBjYW4gYmUgdW5p
cXVlbHkgaWRlbnRpZmllZCBieSBzY2FsYXIgb2Zmc2V0IGFuZCB0aGF0IHN1Y2ggb2Zmc2V0IGlz
CisgICBzdGFibGUgYWNyb3NzIHRoZSBsaWZlLXRpbWUgb2YgdGhlIG5hbWUgaXMgaWRlbnRpZmll
cy4KKworICAgVGhpcyBpcyBtYW5pZmVzdGx5IG5vdCBzbyBmb3IgcmVpc2VyNC4gSW4gcmVpc2Vy
NCB0aGUgb25seSBzdGFibGUgdW5pcXVlCisgICBpZGVudGlmaWVzIGZvciB0aGUgZGlyZWN0b3J5
IGVudHJ5IGlzIGl0cyBrZXkgdGhhdCBkb2Vzbid0IGZpdCBpbnRvCisgICBzZWVrZGlyL3RlbGxk
aXIgQVBJLgorCisgICBzb2x1dGlvbjoKKworICAgV2l0aGluIGVhY2ggZmlsZSBkZXNjcmlwdG9y
IHBhcnRpY2lwYXRpbmcgaW4gcmVhZGRpci1pbmcgb2YgZGlyZWN0b3J5CisgICBwbHVnaW4vZGly
L2Rpci5oOnJlYWRkaXJfcG9zIGlzIG1haW50YWluZWQuIFRoaXMgc3RydWN0dXJlIGtlZXBzIHRy
YWNrIG9mCisgICB0aGUgImN1cnJlbnQiIGRpcmVjdG9yeSBlbnRyeSB0aGF0IGZpbGUgZGVzY3Jp
cHRvciBsb29rcyBhdC4gSXQgY29udGFpbnMgYQorICAga2V5IG9mIGRpcmVjdG9yeSBlbnRyeSAo
cGx1cyBzb21lIGFkZGl0aW9uYWwgaW5mbyB0byBkZWFsIHdpdGggbm9uLXVuaXF1ZQorICAga2V5
cyB0aGF0IHdlIHdvdWxkbid0IGR3ZWxsIG9udG8gaGVyZSkgYW5kIGEgbG9naWNhbCBwb3NpdGlv
biBvZiB0aGlzCisgICBkaXJlY3RvcnkgZW50cnkgc3RhcnRpbmcgZnJvbSB0aGUgYmVnaW5uaW5n
IG9mIHRoZSBkaXJlY3RvcnksIHRoYXQgaXMKKyAgIG9yZGluYWwgbnVtYmVyIG9mIHRoaXMgZW50
cnkgaW4gdGhlIHJlYWRkaXIgb3JkZXIuCisKKyAgIE9idmlvdXNseSB0aGlzIGxvZ2ljYWwgcG9z
aXRpb24gaXMgbm90IHN0YWJsZSBpbiB0aGUgZmFjZSBvZiBkaXJlY3RvcnkKKyAgIG1vZGlmaWNh
dGlvbnMuIFRvIHdvcmsgYXJvdW5kIHRoaXMsIG9uIGVhY2ggYWRkaXRpb24gb3IgcmVtb3ZhbCBv
ZiBkaXJlY3RvcnkKKyAgIGVudHJ5IGFsbCBmaWxlIGRlc2NyaXB0b3JzIGZvciBkaXJlY3Rvcnkg
aW5vZGUgYXJlIHNjYW5uZWQgYW5kIHRoZWlyCisgICByZWFkZGlyX3BvcyBhcmUgdXBkYXRlZCBh
Y2NvcmRpbmdseSAoYWRqdXN0X2Rpcl9wb3MoKSkuCisqLworaW50IHJlaXNlcjRfaXRlcmF0ZV9j
b21tb24oc3RydWN0IGZpbGUgKmYgLyogZGlyZWN0b3J5IGZpbGUgYmVpbmcgcmVhZCAqLywKKwkJ
CSAgIHN0cnVjdCBkaXJfY29udGV4dCAqY29udGV4dCAvKiBjYWxsYmFjayBkYXRhIHBhc3NlZCB0
byB1cyBieSBWRlMgKi8pCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJaW50IHJlc3VsdDsK
KwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCWNvb3JkX3QgY29vcmQ7CisJbG9ja19oYW5kbGUgbGg7
CisJdGFwX3QgdGFwOworCXN0cnVjdCByZWFkZGlyX3BvcyAqcG9zOworCisJYXNzZXJ0KCJuaWtp
dGEtMTM1OSIsIGYgIT0gTlVMTCk7CisJaW5vZGUgPSBmaWxlX2lub2RlKGYpOworCWFzc2VydCgi
bmlraXRhLTEzNjAiLCBpbm9kZSAhPSBOVUxMKTsKKworCWlmICghU19JU0RJUihpbm9kZS0+aV9t
b2RlKSkKKwkJcmV0dXJuIFJFVEVSUigtRU5PVERJUik7CisKKwljdHggPSByZWlzZXI0X2luaXRf
Y29udGV4dChpbm9kZS0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4gUFRSX0VS
UihjdHgpOworCisJY29vcmRfaW5pdF96ZXJvKCZjb29yZCk7CisJaW5pdF9saCgmbGgpOworCXJl
aXNlcjRfdGFwX2luaXQoJnRhcCwgJmNvb3JkLCAmbGgsIFpOT0RFX1JFQURfTE9DSyk7CisKKwly
ZWlzZXI0X3JlYWRkaXJfcmVhZGFoZWFkX2luaXQoaW5vZGUsICZ0YXApOworCityZXBlYXQ6CisJ
cmVzdWx0ID0gZGlyX3JlYWRkaXJfaW5pdChmLCAmY29udGV4dC0+cG9zLCAmdGFwLCAmcG9zKTsK
KwlpZiAocmVzdWx0ID09IDApIHsKKwkJcmVzdWx0ID0gcmVpc2VyNF90YXBfbG9hZCgmdGFwKTsK
KwkJLyogc2NhbiBlbnRyaWVzIG9uZSBieSBvbmUgZmVlZGluZyB0aGVtIHRvIEBmaWxsZCAqLwor
CQl3aGlsZSAocmVzdWx0ID09IDApIHsKKwkJCWNvb3JkX3QgKmNvb3JkOworCisJCQljb29yZCA9
IHRhcC5jb29yZDsKKwkJCWFzc2VydCgibmlraXRhLTI1NzIiLCBjb29yZF9pc19leGlzdGluZ191
bml0KGNvb3JkKSk7CisJCQlhc3NlcnQoIm5pa2l0YS0zMjI3IiwgaXNfdmFsaWRfZGlyX2Nvb3Jk
KGlub2RlLCBjb29yZCkpOworCisJCQlyZXN1bHQgPSBmZWVkX2VudHJ5KCZ0YXAsIGNvbnRleHQp
OworCQkJaWYgKHJlc3VsdCA+IDApIHsKKwkJCQlicmVhazsKKwkJCX0gZWxzZSBpZiAocmVzdWx0
ID09IDApIHsKKwkJCQkrK2NvbnRleHQtPnBvczsKKwkJCQlyZXN1bHQgPSBnb19uZXh0X3VuaXQo
JnRhcCk7CisJCQkJaWYgKHJlc3VsdCA9PSAtRV9OT19ORUlHSEJPUiB8fAorCQkJCSAgICByZXN1
bHQgPT0gLUVOT0VOVCkgeworCQkJCQlyZXN1bHQgPSAwOworCQkJCQlicmVhazsKKwkJCQl9IGVs
c2UgaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkJCWlmIChpc192YWxpZF9kaXJfY29vcmQoaW5vZGUs
IGNvb3JkKSkKKwkJCQkJCW1vdmVfZW50cnkocG9zLCBjb29yZCk7CisJCQkJCWVsc2UKKwkJCQkJ
CWJyZWFrOworCQkJCX0KKwkJCX0gZWxzZSBpZiAocmVzdWx0ID09IC1FX1JFUEVBVCkgeworCQkJ
CS8qIGZlZWRfZW50cnkoKSBoYWQgdG8gcmVzdGFydC4gKi8KKwkJCQkrK2NvbnRleHQtPnBvczsK
KwkJCQlyZWlzZXI0X3RhcF9yZWxzZSgmdGFwKTsKKwkJCQlnb3RvIHJlcGVhdDsKKwkJCX0gZWxz
ZQorCQkJCXdhcm5pbmcoInZzLTE2MTciLAorCQkJCQkicmVpc2VyNF9yZWFkZGlyX2NvbW1vbjog
dW5leHBlY3RlZCBlcnJvciAlZCIsCisJCQkJCXJlc3VsdCk7CisJCX0KKwkJcmVpc2VyNF90YXBf
cmVsc2UoJnRhcCk7CisKKwkJaWYgKHJlc3VsdCA+PSAwKQorCQkJZi0+Zl92ZXJzaW9uID0gaW5v
ZGVfcXVlcnlfaXZlcnNpb24oaW5vZGUpOworCX0gZWxzZSBpZiAocmVzdWx0ID09IC1FX05PX05F
SUdIQk9SIHx8IHJlc3VsdCA9PSAtRU5PRU5UKQorCQlyZXN1bHQgPSAwOworCXJlaXNlcjRfdGFw
X2RvbmUoJnRhcCk7CisJcmVpc2VyNF9kZXRhY2hfZnNkYXRhKGYpOworCisJLyogdHJ5IHRvIHVw
ZGF0ZSBkaXJlY3RvcnkncyBhdGltZSAqLworCWlmIChyZWlzZXI0X2dyYWJfc3BhY2VfZm9yY2Uo
aW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpLT5lc3RpbWF0ZS51cGRhdGUoaW5vZGUpLAorCQkJICAg
ICAgIEJBX0NBTl9DT01NSVQpICE9IDApCisJCXdhcm5pbmcoIiIsICJmYWlsZWQgdG8gdXBkYXRl
IGF0aW1lIG9uIHJlYWRkaXI6ICVsbHUiLAorCQkJZ2V0X2lub2RlX29pZChpbm9kZSkpOworCWVs
c2UKKwkJZmlsZV9hY2Nlc3NlZChmKTsKKworCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgp
OworCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisKKwlyZXR1cm4gKHJlc3VsdCA8PSAwKSA/
IHJlc3VsdCA6IDA7Cit9CisKKy8qCisgKiBMb2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICogbW9kZS1uYW1lOiAiTEMiCisgKiBjLWJhc2ljLW9mZnNldDog
OAorICogdGFiLXdpZHRoOiA4CisgKiBmaWxsLWNvbHVtbjogNzkKKyAqIEVuZDoKKyAqLwpkaWZm
IC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9maWxlX3BsdWdpbl9jb21tb24uYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZmls
ZV9wbHVnaW5fY29tbW9uLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2lu
L2ZpbGVfcGx1Z2luX2NvbW1vbi5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAw
CisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vZmlsZV9wbHVnaW5fY29tbW9uLmMJ
MjAyMC0wMi0wNSAyMDo1Mzo0MS40NjQyMjIyNjMgKzAxMDAKQEAgLTAsMCArMSwxMDA0IEBACisv
KiBDb3B5cmlnaHQgMjAwNSBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5Cisg
ICByZWlzZXI0L1JFQURNRSAqLworCisvKiB0aGlzIGZpbGUgY29udGFpbnMgdHlwaWNhbCBpbXBs
ZW1lbnRhdGlvbnMgZm9yIG1vc3Qgb2YgbWV0aG9kcyBvZgorICAgZmlsZSBwbHVnaW4KKyovCisK
KyNpbmNsdWRlICIuLi9pbm9kZS5oIgorI2luY2x1ZGUgIm9iamVjdC5oIgorI2luY2x1ZGUgIi4u
L3NhZmVfbGluay5oIgorCitzdGF0aWMgaW50IGluc2VydF9uZXdfc2Qoc3RydWN0IGlub2RlICpp
bm9kZSk7CitzdGF0aWMgaW50IHVwZGF0ZV9zZChzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKKworLyog
dGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2Ygd3JpdGVfc2RfYnlfaW5vZGUgbWV0aG9k
IG9mIGZpbGUgcGx1Z2luCisgICBlaXRoZXIgaW5zZXJ0IHN0YXQgZGF0YSBvciB1cGRhdGUgaXQK
KyAqLworaW50IHdyaXRlX3NkX2J5X2lub2RlX2NvbW1vbihzdHJ1Y3QgaW5vZGUgKmlub2RlLyog
b2JqZWN0IHRvIHNhdmUgKi8pCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTcz
MCIsIGlub2RlICE9IE5VTEwpOworCisJaWYgKHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUs
IFJFSVNFUjRfTk9fU0QpKQorCQkvKiBvYmplY3QgZG9lc24ndCBoYXZlIHN0YXQtZGF0YSB5ZXQg
Ki8KKwkJcmVzdWx0ID0gaW5zZXJ0X25ld19zZChpbm9kZSk7CisJZWxzZQorCQlyZXN1bHQgPSB1
cGRhdGVfc2QoaW5vZGUpOworCWlmIChyZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0gLUVOQU1FVE9P
TE9ORyAmJiByZXN1bHQgIT0gLUVOT01FTSkKKwkJLyogRG9uJ3QgaXNzdWUgd2FybmluZ3MgYWJv
dXQgIm5hbWUgaXMgdG9vIGxvbmciICovCisJCXdhcm5pbmcoIm5pa2l0YS0yMjIxIiwgIkZhaWxl
ZCB0byBzYXZlIHNkIGZvciAlbGx1OiAlaSIsCisJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9p
bm9kZV9vaWQoaW5vZGUpLCByZXN1bHQpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHRoaXMg
aXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9mIGtleV9ieV9pbm9kZSBtZXRob2Qgb2YgZmlsZSBw
bHVnaW4KKyAqLworaW50CitrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24oc3RydWN0IGlu
b2RlICppbm9kZSwgbG9mZl90IG9mZiwKKwkJCSAgICAgICByZWlzZXI0X2tleSAqIGtleSkKK3sK
KwlyZWlzZXI0X2tleV9pbml0KGtleSk7CisJc2V0X2tleV9sb2NhbGl0eShrZXksIHJlaXNlcjRf
aW5vZGVfZGF0YShpbm9kZSktPmxvY2FsaXR5X2lkKTsKKwlzZXRfa2V5X29yZGVyaW5nKGtleSwg
Z2V0X2lub2RlX29yZGVyaW5nKGlub2RlKSk7CisJc2V0X2tleV9vYmplY3RpZChrZXksIGdldF9p
bm9kZV9vaWQoaW5vZGUpKTsJLypGSVhNRTogaW5vZGUtPmlfaW5vICovCisJc2V0X2tleV90eXBl
KGtleSwgS0VZX0JPRFlfTUlOT1IpOworCXNldF9rZXlfb2Zmc2V0KGtleSwgKF9fdTY0KSBvZmYp
OworCXJldHVybiAwOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBz
ZXRfcGx1Z19pbl9pbm9kZSBtZXRob2Qgb2YgZmlsZSBwbHVnaW4KKyAqLworaW50IHNldF9wbHVn
X2luX2lub2RlX2NvbW1vbihzdHJ1Y3QgaW5vZGUgKm9iamVjdCAvKiBpbm9kZSB0byBzZXQgcGx1
Z2luIG9uICovICwKKwkJCSAgICAgc3RydWN0IGlub2RlICpwYXJlbnQgLyogcGFyZW50IG9iamVj
dCAqLyAsCisJCQkgICAgIHJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICogZGF0YQkvKiBjcmVh
dGlvbmFsCisJCQkJCQkJCSAqIGRhdGEgKi8gKQoreworCV9fdTY0IG1hc2s7CisKKwlvYmplY3Qt
PmlfbW9kZSA9IGRhdGEtPm1vZGU7CisJLyogdGhpcyBzaG91bGQgYmUgcGx1Z2luIGRlY2lzaW9u
ICovCisJb2JqZWN0LT5pX3VpZCA9IGN1cnJlbnRfZnN1aWQoKTsKKwlvYmplY3QtPmlfbXRpbWUg
PSBvYmplY3QtPmlfYXRpbWUgPSBvYmplY3QtPmlfY3RpbWUgPSBjdXJyZW50X3RpbWUob2JqZWN0
KTsKKworCS8qIHN1cHBvcnQgZm9yIEJTRCBzdHlsZSBncm91cC1pZCBhc3NpZ25tZW50LiBTZWUg
bW91bnQncyBtYW51YWwgcGFnZQorCSAgIGRlc2NyaXB0aW9uIG9mIGJzZGdyb3VwcyBleHQyIG1v
dW50IG9wdGlvbnMgZm9yIG1vcmUgZGV0YWlscyAqLworCWlmIChyZWlzZXI0X2lzX3NldChvYmpl
Y3QtPmlfc2IsIFJFSVNFUjRfQlNEX0dJRCkpCisJCW9iamVjdC0+aV9naWQgPSBwYXJlbnQtPmlf
Z2lkOworCWVsc2UgaWYgKHBhcmVudC0+aV9tb2RlICYgU19JU0dJRCkgeworCQkvKiBwYXJlbnQg
ZGlyZWN0b3J5IGhhcyBzZ3VpZCBiaXQgKi8KKwkJb2JqZWN0LT5pX2dpZCA9IHBhcmVudC0+aV9n
aWQ7CisJCWlmIChTX0lTRElSKG9iamVjdC0+aV9tb2RlKSkKKwkJCS8qIHNndWlkIGlzIGluaGVy
aXRlZCBieSBzdWItZGlyZWN0b3JpZXMgKi8KKwkJCW9iamVjdC0+aV9tb2RlIHw9IFNfSVNHSUQ7
CisJfSBlbHNlCisJCW9iamVjdC0+aV9naWQgPSBjdXJyZW50X2ZzZ2lkKCk7CisKKwkvKiB0aGlz
IG9iamVjdCBkb2Vzbid0IGhhdmUgc3RhdC1kYXRhIHlldCAqLworCXJlaXNlcjRfaW5vZGVfc2V0
X2ZsYWcob2JqZWN0LCBSRUlTRVI0X05PX1NEKTsKKyNpZiAwCisJLyogdGhpcyBpcyBub3cgY2Fs
bGVkIGFmdGVyIGFsbCBpbm9kZSBwbHVnaW5zIGFyZSBpbml0aWFsaXplZDoKKwkgICBkb19jcmVh
dGVfdmZzX2NoaWxkIGFmdGVyIGFkanVzdF90b19wYXJlbnQgKi8KKwkvKiBzZXR1cCBpbm9kZSBh
bmQgZmlsZS1vcGVyYXRpb25zIGZvciB0aGlzIGlub2RlICovCisJc2V0dXBfaW5vZGVfb3BzKG9i
amVjdCwgZGF0YSk7CisjZW5kaWYKKwlyZWlzZXI0X3NlYWxfaW5pdCgmcmVpc2VyNF9pbm9kZV9k
YXRhKG9iamVjdCktPnNkX3NlYWwsIE5VTEwsIE5VTEwpOworCW1hc2sgPSAoMSA8PCBVTklYX1NU
QVQpIHwgKDEgPDwgTElHSFRfV0VJR0hUX1NUQVQpOworCWlmICghcmVpc2VyNF9pc19zZXQob2Jq
ZWN0LT5pX3NiLCBSRUlTRVI0XzMyX0JJVF9USU1FUykpCisJCW1hc2sgfD0gKDEgPDwgTEFSR0Vf
VElNRVNfU1RBVCk7CisKKwlyZWlzZXI0X2lub2RlX2RhdGEob2JqZWN0KS0+ZXh0bWFzayA9IG1h
c2s7CisJcmV0dXJuIDA7Cit9CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9m
IGFkanVzdF90b19wYXJlbnQgbWV0aG9kIG9mIGZpbGUgcGx1Z2luIGZvcgorICAgcmVndWxhciBm
aWxlcworICovCitpbnQgYWRqdXN0X3RvX3BhcmVudF9jb21tb24oc3RydWN0IGlub2RlICpvYmpl
Y3QgLyogbmV3IG9iamVjdCAqLyAsCisJCQkgICAgc3RydWN0IGlub2RlICpwYXJlbnQgLyogcGFy
ZW50IGRpcmVjdG9yeSAqLyAsCisJCQkgICAgc3RydWN0IGlub2RlICpyb290Lyogcm9vdCBkaXJl
Y3RvcnkgKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtMjE2NSIsIG9iamVjdCAhPSBOVUxMKTsKKwlp
ZiAocGFyZW50ID09IE5VTEwpCisJCXBhcmVudCA9IHJvb3Q7CisJYXNzZXJ0KCJuaWtpdGEtMjA2
OSIsIHBhcmVudCAhPSBOVUxMKTsKKworCS8qCisJICogaW5oZXJpdCBtaXNzaW5nIHBsdWdpbnMg
ZnJvbSBwYXJlbnQKKwkgKi8KKworCWdyYWJfcGx1Z2luX3BzZXQob2JqZWN0LCBwYXJlbnQsIFBT
RVRfRklMRSk7CisJZ3JhYl9wbHVnaW5fcHNldChvYmplY3QsIHBhcmVudCwgUFNFVF9TRCk7CisJ
Z3JhYl9wbHVnaW5fcHNldChvYmplY3QsIHBhcmVudCwgUFNFVF9GT1JNQVRUSU5HKTsKKwlncmFi
X3BsdWdpbl9wc2V0KG9iamVjdCwgcGFyZW50LCBQU0VUX1BFUk0pOworCXJldHVybiAwOworfQor
CisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBhZGp1c3RfdG9fcGFyZW50IG1l
dGhvZCBvZiBmaWxlIHBsdWdpbiBmb3IKKyAgIHR5cGljYWwgZGlyZWN0b3JpZXMKKyAqLworaW50
IGFkanVzdF90b19wYXJlbnRfY29tbW9uX2RpcihzdHJ1Y3QgaW5vZGUgKm9iamVjdCAvKiBuZXcg
b2JqZWN0ICovICwKKwkJCQlzdHJ1Y3QgaW5vZGUgKnBhcmVudCAvKiBwYXJlbnQgZGlyZWN0b3J5
ICovICwKKwkJCQlzdHJ1Y3QgaW5vZGUgKnJvb3QvKiByb290IGRpcmVjdG9yeSAqLykKK3sKKwlp
bnQgcmVzdWx0ID0gMDsKKwlwc2V0X21lbWJlciBtZW1iOworCisJYXNzZXJ0KCJuaWtpdGEtMjE2
NiIsIG9iamVjdCAhPSBOVUxMKTsKKwlpZiAocGFyZW50ID09IE5VTEwpCisJCXBhcmVudCA9IHJv
b3Q7CisJYXNzZXJ0KCJuaWtpdGEtMjE2NyIsIHBhcmVudCAhPSBOVUxMKTsKKworCS8qCisJICog
aW5oZXJpdCBtaXNzaW5nIHBsdWdpbnMgZnJvbSBwYXJlbnQKKwkgKi8KKwlmb3IgKG1lbWIgPSAw
OyBtZW1iIDwgUFNFVF9MQVNUOyArK21lbWIpIHsKKwkJcmVzdWx0ID0gZ3JhYl9wbHVnaW5fcHNl
dChvYmplY3QsIHBhcmVudCwgbWVtYik7CisJCWlmIChyZXN1bHQgIT0gMCkKKwkJCWJyZWFrOwor
CX0KKwlyZXR1cm4gcmVzdWx0OworfQorCitpbnQgYWRqdXN0X3RvX3BhcmVudF9jcnlwdGNvbXBy
ZXNzKHN0cnVjdCBpbm9kZSAqb2JqZWN0IC8qIG5ldyBvYmplY3QgKi8gLAorCQkJCSAgIHN0cnVj
dCBpbm9kZSAqcGFyZW50IC8qIHBhcmVudCBkaXJlY3RvcnkgKi8sCisJCQkJICAgc3RydWN0IGlu
b2RlICpyb290Lyogcm9vdCBkaXJlY3RvcnkgKi8pCit7CisJaW50IHJlc3VsdDsKKwlyZXN1bHQg
PSBhZGp1c3RfdG9fcGFyZW50X2NvbW1vbihvYmplY3QsIHBhcmVudCwgcm9vdCk7CisJaWYgKHJl
c3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKwlhc3NlcnQoImVkd2FyZC0xNDE2IiwgcGFyZW50ICE9
IE5VTEwpOworCisJZ3JhYl9wbHVnaW5fcHNldChvYmplY3QsIHBhcmVudCwgUFNFVF9DTFVTVEVS
KTsKKwlncmFiX3BsdWdpbl9wc2V0KG9iamVjdCwgcGFyZW50LCBQU0VUX0NJUEhFUik7CisJZ3Jh
Yl9wbHVnaW5fcHNldChvYmplY3QsIHBhcmVudCwgUFNFVF9ESUdFU1QpOworCWdyYWJfcGx1Z2lu
X3BzZXQob2JqZWN0LCBwYXJlbnQsIFBTRVRfQ09NUFJFU1NJT04pOworCWdyYWJfcGx1Z2luX3Bz
ZXQob2JqZWN0LCBwYXJlbnQsIFBTRVRfQ09NUFJFU1NJT05fTU9ERSk7CisKKwlyZXR1cm4gMDsK
K30KKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgY3JlYXRlX29iamVjdCBt
ZXRob2Qgb2YgZmlsZSBwbHVnaW4KKyAqLworaW50IHJlaXNlcjRfY3JlYXRlX29iamVjdF9jb21t
b24oc3RydWN0IGlub2RlICpvYmplY3QsIHN0cnVjdCBpbm9kZSAqcGFyZW50LAorCQkJCSByZWlz
ZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGRhdGEpCit7CisJcmVpc2VyNF9ibG9ja19uciByZXNl
cnZlOworCWFzc2VydCgibmlraXRhLTc0NCIsIG9iamVjdCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS03NDUiLCBwYXJlbnQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNzQ3IiwgZGF0YSAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS03NDgiLCByZWlzZXI0X2lub2RlX2dldF9mbGFnKG9i
amVjdCwgUkVJU0VSNF9OT19TRCkpOworCisJcmVzZXJ2ZSA9IGVzdGltYXRlX2NyZWF0ZV9jb21t
b24ob2JqZWN0KTsKKwlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKHJlc2VydmUsIEJBX0NBTl9DT01N
SVQpKQorCQlyZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCXJldHVybiB3cml0ZV9zZF9ieV9pbm9k
ZV9jb21tb24ob2JqZWN0KTsKK30KKworc3RhdGljIGludCBjb21tb25fb2JqZWN0X2RlbGV0ZV9u
b19yZXNlcnZlKHN0cnVjdCBpbm9kZSAqaW5vZGUpOworCisvKioKKyAqIHJlaXNlcjRfZGVsZXRl
X29iamVjdF9jb21tb24gLSBkZWxldGVfb2JqZWN0IG9mIGZpbGVfcGx1Z2luCisgKiBAaW5vZGU6
IGlub2RlIHRvIGJlIGRlbGV0ZWQKKyAqCisgKiBUaGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlv
biBvZiBkZWxldGVfb2JqZWN0IG1ldGhvZCBvZiBmaWxlX3BsdWdpbi4gSXQKKyAqIGFwcGxpZXMg
dG8gb2JqZWN0IGl0cyBkZWxldGlvbiBjb25zaXN0cyBvZiByZW1vdmluZyB0d28gaXRlbXMgLSBz
dGF0IGRhdGEKKyAqIGFuZCBzYWZlLWxpbmsuCisgKi8KK2ludCByZWlzZXI0X2RlbGV0ZV9vYmpl
Y3RfY29tbW9uKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2Vy
dCgibmlraXRhLTE0NzciLCBpbm9kZSAhPSBOVUxMKTsKKwkvKiBGSVhNRTogaWYgZmlsZSBib2R5
IGRlbGV0aW9uIGZhaWxlZCAoaS9vIGVycm9yLCBmb3IgaW5zdGFuY2UpLAorCSAgIGlub2RlLT5p
X3NpemUgY2FuIGJlICE9IDAgaGVyZSAqLworCWFzc2VydCgibmlraXRhLTM0MjAiLCBpbm9kZS0+
aV9zaXplID09IDAgfHwgU19JU0xOSyhpbm9kZS0+aV9tb2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEt
MzQyMSIsIGlub2RlLT5pX25saW5rID09IDApOworCisJaWYgKCFyZWlzZXI0X2lub2RlX2dldF9m
bGFnKGlub2RlLCBSRUlTRVI0X05PX1NEKSkgeworCQlyZWlzZXI0X2Jsb2NrX25yIHJlc2VydmU7
CisKKwkJLyogZ3JhYiBzcGFjZSB3aGljaCBpcyBuZWVkZWQgdG8gcmVtb3ZlIDIgaXRlbXMgZnJv
bSB0aGUgdHJlZToKKwkJICAgc3RhdCBkYXRhIGFuZCBzYWZlLWxpbmsgKi8KKwkJcmVzZXJ2ZSA9
IDIgKgorCQkgIGVzdGltYXRlX29uZV9pdGVtX3JlbW92YWwocmVpc2VyNF90cmVlX2J5X2lub2Rl
KGlub2RlKSk7CisJCWlmIChyZWlzZXI0X2dyYWJfc3BhY2VfZm9yY2UocmVzZXJ2ZSwKKwkJCQkJ
ICAgICBCQV9SRVNFUlZFRCB8IEJBX0NBTl9DT01NSVQpKQorCQkJcmV0dXJuIFJFVEVSUigtRU5P
U1BDKTsKKwkJcmVzdWx0ID0gY29tbW9uX29iamVjdF9kZWxldGVfbm9fcmVzZXJ2ZShpbm9kZSk7
CisJfSBlbHNlCisJCXJlc3VsdCA9IDA7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBy
ZWlzZXI0X2RlbGV0ZV9kaXJfY29tbW9uIC0gZGVsZXRlX29iamVjdCBvZiBmaWxlX3BsdWdpbgor
ICogQGlub2RlOiBpbm9kZSB0byBiZSBkZWxldGVkCisgKgorICogVGhpcyBpcyBjb21tb24gaW1w
bGVtZW50YXRpb24gb2YgZGVsZXRlX29iamVjdCBtZXRob2Qgb2YgZmlsZV9wbHVnaW4gZm9yCisg
KiB0eXBpY2FsIGRpcmVjdG9yeS4gSXQgY2FsbHMgZG9uZSBtZXRob2Qgb2YgZGlyX3BsdWdpbiB0
byByZW1vdmUgIi4iIGFuZAorICogcmVtb3ZlcyBzdGF0IGRhdGEgYW5kIHNhZmUtbGluay4KKyAq
LworaW50IHJlaXNlcjRfZGVsZXRlX2Rpcl9jb21tb24oc3RydWN0IGlub2RlICppbm9kZSkKK3sK
KwlpbnQgcmVzdWx0OworCWRpcl9wbHVnaW4gKmRwbHVnOworCisJYXNzZXJ0KCIiLCAoZ2V0X2N1
cnJlbnRfY29udGV4dCgpICYmCisJCSAgICBnZXRfY3VycmVudF9jb250ZXh0KCktPnRyYW5zLT5h
dG9tID09IE5VTEwpKTsKKworCWRwbHVnID0gaW5vZGVfZGlyX3BsdWdpbihpbm9kZSk7CisJYXNz
ZXJ0KCJ2cy0xMTAxIiwgZHBsdWcgJiYgZHBsdWctPmRvbmUpOworCisJLyoga2lsbCBjdXJzb3Jz
IHdoaWNoIG1pZ2h0IGJlIGF0dGFjaGVkIHRvIGlub2RlICovCisJcmVpc2VyNF9raWxsX2N1cnNv
cnMoaW5vZGUpOworCisJLyogZ3JhYiBzcGFjZSBlbm91Z2ggZm9yIHJlbW92aW5nIHR3byBpdGVt
cyAqLworCWlmIChyZWlzZXI0X2dyYWJfc3BhY2UKKwkgICAgKDIgKiBlc3RpbWF0ZV9vbmVfaXRl
bV9yZW1vdmFsKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShpbm9kZSkpLAorCSAgICAgQkFfUkVTRVJW
RUQgfCBCQV9DQU5fQ09NTUlUKSkKKwkJcmV0dXJuIFJFVEVSUigtRU5PU1BDKTsKKworCXJlc3Vs
dCA9IGRwbHVnLT5kb25lKGlub2RlKTsKKwlpZiAoIXJlc3VsdCkKKwkJcmVzdWx0ID0gY29tbW9u
X29iamVjdF9kZWxldGVfbm9fcmVzZXJ2ZShpbm9kZSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKwor
LyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgYWRkX2xpbmsgbWV0aG9kIG9mIGZp
bGUgcGx1Z2luCisgKi8KK2ludCByZWlzZXI0X2FkZF9saW5rX2NvbW1vbihzdHJ1Y3QgaW5vZGUg
Km9iamVjdCwgc3RydWN0IGlub2RlICpwYXJlbnQpCit7CisJLyoKKwkgKiBpbmNyZW1lbnQgLT5p
X25saW5rIGFuZCB1cGRhdGUgLT5pX2N0aW1lCisJICovCisKKwlJTk9ERV9JTkNfTkxJTksob2Jq
ZWN0KTsKKwlvYmplY3QtPmlfY3RpbWUgPSBjdXJyZW50X3RpbWUob2JqZWN0KTsKKwlyZXR1cm4g
MDsKK30KKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgcmVtX2xpbmsgbWV0
aG9kIG9mIGZpbGUgcGx1Z2luCisgKi8KK2ludCByZWlzZXI0X3JlbV9saW5rX2NvbW1vbihzdHJ1
Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGlub2RlICpwYXJlbnQpCit7CisJYXNzZXJ0KCJuaWtp
dGEtMjAyMSIsIG9iamVjdCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMTYzIiwgb2JqZWN0
LT5pX25saW5rID4gMCk7CisKKwkvKgorCSAqIGRlY3JlbWVudCAtPmlfbmxpbmsgYW5kIHVwZGF0
ZSAtPmlfY3RpbWUKKwkgKi8KKworCUlOT0RFX0RST1BfTkxJTksob2JqZWN0KTsKKwlvYmplY3Qt
PmlfY3RpbWUgPSBjdXJyZW50X3RpbWUob2JqZWN0KTsKKwlyZXR1cm4gMDsKK30KKworLyogdGhp
cyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgcmVtX2xpbmsgbWV0aG9kIG9mIGZpbGUgcGx1
Z2luIGZvciB0eXBpY2FsCisgICBkaXJlY3RvcnkKKyovCitpbnQgcmVtX2xpbmtfY29tbW9uX2Rp
cihzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGlub2RlICpwYXJlbnQgVU5VU0VEX0FSRykK
K3sKKwlhc3NlcnQoIm5pa2l0YS0yMDIxMSIsIG9iamVjdCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS0yMTYzMSIsIG9iamVjdC0+aV9ubGluayA+IDApOworCisJLyoKKwkgKiBkZWNyZW1lbnQg
LT5pX25saW5rIGFuZCB1cGRhdGUgLT5pX2N0aW1lCisJICovCisJaWYob2JqZWN0LT5pX25saW5r
ID09IDIpCisJCUlOT0RFX1NFVF9OTElOSyhvYmplY3QsIDApOworCisJZWxzZQorCQlJTk9ERV9E
Uk9QX05MSU5LKG9iamVjdCk7CisJb2JqZWN0LT5pX2N0aW1lID0gY3VycmVudF90aW1lKG9iamVj
dCk7CisJcmV0dXJuIDA7Cit9CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9m
IG93bnNfaXRlbSBtZXRob2Qgb2YgZmlsZSBwbHVnaW4KKyAgIGNvbXBhcmUgb2JqZWN0aWRzIG9m
IGtleXMgaW4gaW5vZGUgYW5kIGNvb3JkICovCitpbnQgb3duc19pdGVtX2NvbW1vbihjb25zdCBz
dHJ1Y3QgaW5vZGUgKmlub2RlLAkvKiBvYmplY3QgdG8gY2hlY2sKKwkJCQkJCSAqIGFnYWluc3Qg
Ki8KKwkJICAgICBjb25zdCBjb29yZF90ICpjb29yZC8qIGNvb3JkIHRvIGNoZWNrICovKQorewor
CXJlaXNlcjRfa2V5IGl0ZW1fa2V5OworCXJlaXNlcjRfa2V5IGZpbGVfa2V5OworCisJYXNzZXJ0
KCJuaWtpdGEtNzYwIiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNzYxIiwgY29v
cmQgIT0gTlVMTCk7CisKKwlyZXR1cm4gY29vcmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkgJiYK
KwkgICAgKGdldF9rZXlfb2JqZWN0aWQoYnVpbGRfc2Rfa2V5KGlub2RlLCAmZmlsZV9rZXkpKSA9
PQorCSAgICAgZ2V0X2tleV9vYmplY3RpZChpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJml0ZW1f
a2V5KSkpOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBvd25zX2l0
ZW0gbWV0aG9kIG9mIGZpbGUgcGx1Z2luCisgICBmb3IgdHlwaWNhbCBkaXJlY3RvcnkKKyovCitp
bnQgb3duc19pdGVtX2NvbW1vbl9kaXIoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSwvKiBvYmpl
Y3QgdG8gY2hlY2sgYWdhaW5zdCAqLworCQkJIGNvbnN0IGNvb3JkX3QgKmNvb3JkLyogY29vcmQg
b2YgaXRlbSB0byBjaGVjayAqLykKK3sKKwlyZWlzZXI0X2tleSBpdGVtX2tleTsKKworCWFzc2Vy
dCgibmlraXRhLTEzMzUiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzM0Iiwg
Y29vcmQgIT0gTlVMTCk7CisKKwlpZiAocGx1Z2luX29mX2dyb3VwKGl0ZW1fcGx1Z2luX2J5X2Nv
b3JkKGNvb3JkKSwgRElSX0VOVFJZX0lURU1fVFlQRSkpCisJCXJldHVybiBnZXRfa2V5X2xvY2Fs
aXR5KGl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAmaXRlbV9rZXkpKSA9PQorCQkgICAgZ2V0X2lu
b2RlX29pZChpbm9kZSk7CisJZWxzZQorCQlyZXR1cm4gb3duc19pdGVtX2NvbW1vbihpbm9kZSwg
Y29vcmQpOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBjYW5fYWRk
X2xpbmsgbWV0aG9kIG9mIGZpbGUgcGx1Z2luCisgICBjaGVja3Mgd2hldGhlciB5ZXQgYW5vdGhl
ciBoYXJkIGxpbmtzIHRvIHRoaXMgb2JqZWN0IGNhbiBiZSBhZGRlZAorKi8KK2ludCBjYW5fYWRk
X2xpbmtfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqZWN0Lyogb2JqZWN0IHRvIGNoZWNr
ICovKQoreworCWFzc2VydCgibmlraXRhLTczMiIsIG9iamVjdCAhPSBOVUxMKTsKKworCS8qIGlu
b2RlLT5pX25saW5rIGlzIHVuc2lnbmVkIGludCwgc28ganVzdCBjaGVjayBmb3IgaW50ZWdlcgor
CSAgIG92ZXJmbG93ICovCisJcmV0dXJuIG9iamVjdC0+aV9ubGluayArIDEgIT0gMDsKK30KKwor
LyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgY2FuX3JlbV9saW5rIG1ldGhvZCBv
ZiBmaWxlIHBsdWdpbiBmb3IKKyAgIHR5cGljYWwgZGlyZWN0b3J5CisqLworaW50IGNhbl9yZW1f
bGlua19jb21tb25fZGlyKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJLyogaXNfZGly
X2VtcHR5KCkgcmV0dXJucyAwIGlzIGRpciBpcyBlbXB0eSAqLworCXJldHVybiAhaXNfZGlyX2Vt
cHR5KGlub2RlKTsKK30KKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgZGV0
YWNoIG1ldGhvZCBvZiBmaWxlIHBsdWdpbiBmb3IgdHlwaWNhbAorICAgZGlyZWN0b3J5CisqLwor
aW50IHJlaXNlcjRfZGV0YWNoX2NvbW1vbl9kaXIoc3RydWN0IGlub2RlICpjaGlsZCwgc3RydWN0
IGlub2RlICpwYXJlbnQpCit7CisJZGlyX3BsdWdpbiAqZHBsdWc7CisKKwlkcGx1ZyA9IGlub2Rl
X2Rpcl9wbHVnaW4oY2hpbGQpOworCWFzc2VydCgibmlraXRhLTI4ODMiLCBkcGx1ZyAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS0yODg0IiwgZHBsdWctPmRldGFjaCAhPSBOVUxMKTsKKwlyZXR1
cm4gZHBsdWctPmRldGFjaChjaGlsZCwgcGFyZW50KTsKK30KKworLyogdGhpcyBpcyBjb21tb24g
aW1wbGVtZW50YXRpb24gb2YgYmluZCBtZXRob2Qgb2YgZmlsZSBwbHVnaW4gZm9yIHR5cGljYWwK
KyAgIGRpcmVjdG9yeQorKi8KK2ludCByZWlzZXI0X2JpbmRfY29tbW9uX2RpcihzdHJ1Y3QgaW5v
ZGUgKmNoaWxkLCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCkKK3sKKwlkaXJfcGx1Z2luICpkcGx1ZzsK
KworCWRwbHVnID0gaW5vZGVfZGlyX3BsdWdpbihjaGlsZCk7CisJYXNzZXJ0KCJuaWtpdGEtMjY0
NiIsIGRwbHVnICE9IE5VTEwpOworCXJldHVybiBkcGx1Zy0+YXR0YWNoKGNoaWxkLCBwYXJlbnQp
OworfQorCitzdGF0aWMgaW50IHByb2Nlc3NfdHJ1bmNhdGUoc3RydWN0IGlub2RlICosIF9fdTY0
IHNpemUpOworCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiBzYWZlbGluayBt
ZXRob2Qgb2YgZmlsZSBwbHVnaW4KKyAqLworaW50IHNhZmVsaW5rX2NvbW1vbihzdHJ1Y3QgaW5v
ZGUgKm9iamVjdCwgcmVpc2VyNF9zYWZlX2xpbmtfdCBsaW5rLCBfX3U2NCB2YWx1ZSkKK3sKKwlp
bnQgcmVzdWx0OworCisJYXNzZXJ0KCJ2cy0xNzA1IiwgZ2V0X2N1cnJlbnRfY29udGV4dCgpLT50
cmFucy0+YXRvbSA9PSBOVUxMKTsKKwlpZiAobGluayA9PSBTQUZFX1VOTElOSykKKwkJLyogbm90
aGluZyB0byBkby4gaXB1dCgpIGluIHRoZSBjYWxsZXIgKHByb2Nlc3Nfc2FmZWxpbmspIHdpbGwK
KwkJICogZmluaXNoIHdpdGggZmlsZSAqLworCQlyZXN1bHQgPSAwOworCWVsc2UgaWYgKGxpbmsg
PT0gU0FGRV9UUlVOQ0FURSkKKwkJcmVzdWx0ID0gcHJvY2Vzc190cnVuY2F0ZShvYmplY3QsIHZh
bHVlKTsKKwllbHNlIHsKKwkJd2FybmluZygibmlraXRhLTM0MzgiLCAiVW5yZWNvZ25pemVkIHNh
ZmUtbGluayB0eXBlOiAlaSIsIGxpbmspOworCQlyZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJfQor
CXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9m
IGVzdGltYXRlLmNyZWF0ZSBtZXRob2Qgb2YgZmlsZSBwbHVnaW4KKyAgIGNhbiBiZSB1c2VkIHdo
ZW4gb2JqZWN0IGNyZWF0aW9uIGludm9sdmVzIGluc2VydGlvbiBvZiBvbmUgaXRlbSAodXN1YWxs
eSBzdGF0CisgICBkYXRhKSBpbnRvIHRyZWUKKyovCityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRl
X2NyZWF0ZV9jb21tb24oY29uc3Qgc3RydWN0IGlub2RlICpvYmplY3QpCit7CisJcmV0dXJuIGVz
dGltYXRlX29uZV9pbnNlcnRfaXRlbShyZWlzZXI0X3RyZWVfYnlfaW5vZGUob2JqZWN0KSk7Cit9
CisKKy8qIHRoaXMgaXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9mIGVzdGltYXRlLmNyZWF0ZSBt
ZXRob2Qgb2YgZmlsZSBwbHVnaW4gZm9yCisgICB0eXBpY2FsIGRpcmVjdG9yeQorICAgY2FuIGJl
IHVzZWQgd2hlbiBkaXJlY3RvcnkgY3JlYXRpb24gaW52b2x2ZXMgaW5zZXJ0aW9uIG9mIHR3byBp
dGVtcyAodXN1YWxseQorICAgc3RhdCBkYXRhIGFuZCBpdGVtIGNvbnRhaW5pbmcgIi4iIGFuZCAi
Li4iKSBpbnRvIHRyZWUKKyovCityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX2NyZWF0ZV9jb21t
b25fZGlyKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqZWN0KQoreworCXJldHVybiAyICogZXN0aW1h
dGVfb25lX2luc2VydF9pdGVtKHJlaXNlcjRfdHJlZV9ieV9pbm9kZShvYmplY3QpKTsKK30KKwor
LyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgZXN0aW1hdGUudXBkYXRlIG1ldGhv
ZCBvZiBmaWxlIHBsdWdpbgorICAgY2FuIGJlIHVzZWQgd2hlbiBzdGF0IGRhdGEgdXBkYXRlIGRv
ZXMgbm90IGRvIG1vcmUgdGhhbiBpbnNlcnRpbmcgYSB1bml0CisgICBpbnRvIGEgc3RhdCBkYXRh
IGl0ZW0gd2hpY2ggaXMgcHJvYmFibHkgdHJ1ZSBmb3IgbW9zdCBjYXNlcworKi8KK3JlaXNlcjRf
YmxvY2tfbnIgZXN0aW1hdGVfdXBkYXRlX2NvbW1vbihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2Rl
KQoreworCXJldHVybiBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2ludG9faXRlbShyZWlzZXI0X3RyZWVf
YnlfaW5vZGUoaW5vZGUpKTsKK30KKworLyogdGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24g
b2YgZXN0aW1hdGUudW5saW5rIG1ldGhvZCBvZiBmaWxlIHBsdWdpbgorICovCityZWlzZXI0X2Js
b2NrX25yCitlc3RpbWF0ZV91bmxpbmtfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqZWN0
IFVOVVNFRF9BUkcsCisJCSAgICAgICBjb25zdCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCBVTlVTRURf
QVJHKQoreworCXJldHVybiAwOworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlv
biBvZiBlc3RpbWF0ZS51bmxpbmsgbWV0aG9kIG9mIGZpbGUgcGx1Z2luIGZvcgorICAgdHlwaWNh
bCBkaXJlY3RvcnkKKyovCityZWlzZXI0X2Jsb2NrX25yCitlc3RpbWF0ZV91bmxpbmtfY29tbW9u
X2Rpcihjb25zdCBzdHJ1Y3QgaW5vZGUgKm9iamVjdCwKKwkJCSAgIGNvbnN0IHN0cnVjdCBpbm9k
ZSAqcGFyZW50KQoreworCWRpcl9wbHVnaW4gKmRwbHVnOworCisJZHBsdWcgPSBpbm9kZV9kaXJf
cGx1Z2luKG9iamVjdCk7CisJYXNzZXJ0KCJuaWtpdGEtMjg4OCIsIGRwbHVnICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTI4ODciLCBkcGx1Zy0+ZXN0aW1hdGUudW5saW5rICE9IE5VTEwpOwor
CXJldHVybiBkcGx1Zy0+ZXN0aW1hdGUudW5saW5rKG9iamVjdCwgcGFyZW50KTsKK30KKworY2hh
ciAqd2lyZV93cml0ZV9jb21tb24oc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqc3RhcnQpCit7
CisJcmV0dXJuIGJ1aWxkX2lub2RlX29ud2lyZShpbm9kZSwgc3RhcnQpOworfQorCitjaGFyICp3
aXJlX3JlYWRfY29tbW9uKGNoYXIgKmFkZHIsIHJlaXNlcjRfb2JqZWN0X29uX3dpcmUgKiBvYmop
Cit7CisJaWYgKCFvYmopCisJCXJldHVybiBsb2NhdGVfb2JqX2tleV9pZF9vbndpcmUoYWRkcik7
CisJcmV0dXJuIGV4dHJhY3Rfb2JqX2tleV9pZF9mcm9tX29ud2lyZShhZGRyLCAmb2JqLT51LnN0
ZC5rZXlfaWQpOworfQorCitzdHJ1Y3QgZGVudHJ5ICp3aXJlX2dldF9jb21tb24oc3RydWN0IHN1
cGVyX2Jsb2NrICpzYiwKKwkJCSAgICAgICByZWlzZXI0X29iamVjdF9vbl93aXJlICogb2JqKQor
eworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJc3RydWN0IGRlbnRyeSAqZGVudHJ5OworCXJlaXNl
cjRfa2V5IGtleTsKKworCWV4dHJhY3Rfa2V5X2Zyb21faWQoJm9iai0+dS5zdGQua2V5X2lkLCAm
a2V5KTsKKwlpbm9kZSA9IHJlaXNlcjRfaWdldChzYiwgJmtleSwgMSk7CisJaWYgKCFJU19FUlIo
aW5vZGUpKSB7CisJCXJlaXNlcjRfaWdldF9jb21wbGV0ZShpbm9kZSk7CisJCWRlbnRyeSA9IGRf
b2J0YWluX2FsaWFzKGlub2RlKTsKKwkJaWYgKCFJU19FUlIoZGVudHJ5KSkKKwkJCWRlbnRyeS0+
ZF9vcCA9ICZnZXRfc3VwZXJfcHJpdmF0ZShzYiktPm9wcy5kZW50cnk7CisJfSBlbHNlIGlmIChQ
VFJfRVJSKGlub2RlKSA9PSAtRU5PRU5UKQorCQkvKgorCQkgKiBpbm9kZSB3YXNuJ3QgZm91bmQg
YXQgdGhlIGtleSBlbmNvZGVkIGluIHRoZSBmaWxlCisJCSAqIGhhbmRsZS4gSGVuY2UsIGZpbGUg
aGFuZGxlIGlzIHN0YWxlLgorCQkgKi8KKwkJZGVudHJ5ID0gRVJSX1BUUihSRVRFUlIoLUVTVEFM
RSkpOworCWVsc2UKKwkJZGVudHJ5ID0gKHZvaWQgKilpbm9kZTsKKwlyZXR1cm4gZGVudHJ5Owor
fQorCitpbnQgd2lyZV9zaXplX2NvbW1vbihzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCXJldHVy
biBpbm9kZV9vbndpcmVfc2l6ZShpbm9kZSk7Cit9CisKK3ZvaWQgd2lyZV9kb25lX2NvbW1vbihy
ZWlzZXI0X29iamVjdF9vbl93aXJlICogb2JqKQoreworCS8qIG5vdGhpbmcgdG8gZG8gKi8KK30K
KworLyogaGVscGVyIGZ1bmN0aW9uIHRvIHByaW50IGVycm9ycyAqLworc3RhdGljIHZvaWQga2V5
X3dhcm5pbmcoY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkgLyoga2V5IHRvIHByaW50ICovICwKKwkJ
CWNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCQlpbnQgY29kZS8qIGVycm9yIGNvZGUgdG8g
cHJpbnQgKi8pCit7CisJYXNzZXJ0KCJuaWtpdGEtNzE2Iiwga2V5ICE9IE5VTEwpOworCisJaWYg
KGNvZGUgIT0gLUVOT01FTSkgeworCQl3YXJuaW5nKCJuaWtpdGEtNzE3IiwgIkVycm9yIGZvciBp
bm9kZSAlbGx1ICglaSkiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylnZXRfa2V5X29iamVjdGlk
KGtleSksIGNvZGUpOworCQlyZWlzZXI0X3ByaW50X2tleSgiZm9yIGtleSIsIGtleSk7CisJfQor
fQorCisvKiBOSUtJVEEtRklYTUUtSEFOUzogcGVyaGFwcyB0aGlzIGZ1bmN0aW9uIGJlbG9uZ3Mg
aW4gYW5vdGhlciBmaWxlPyAqLworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyB2b2lkCitjaGVj
a19pbm9kZV9zZWFsKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCSBjb25zdCBjb29yZF90
ICpjb29yZCwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkpCit7CisJcmVpc2VyNF9rZXkgdW5pdF9r
ZXk7CisKKwl1bml0X2tleV9ieV9jb29yZChjb29yZCwgJnVuaXRfa2V5KTsKKwlhc3NlcnQoIm5p
a2l0YS0yNzUyIiwKKwkgICAgICAgV0lUSF9EQVRBX1JFVChjb29yZC0+bm9kZSwgMSwga2V5ZXEo
a2V5LCAmdW5pdF9rZXkpKSk7CisJYXNzZXJ0KCJuaWtpdGEtMjc1MyIsIGdldF9pbm9kZV9vaWQo
aW5vZGUpID09IGdldF9rZXlfb2JqZWN0aWQoa2V5KSk7Cit9CisKK3N0YXRpYyB2b2lkIGNoZWNr
X3NkX2Nvb3JkKGNvb3JkX3QgKmNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSkKK3sKKwly
ZWlzZXI0X2tleSB1a2V5OworCisJY29vcmRfY2xlYXJfaXBsdWcoY29vcmQpOworCWlmICh6bG9h
ZChjb29yZC0+bm9kZSkpCisJCXJldHVybjsKKworCWlmICghY29vcmRfaXNfZXhpc3RpbmdfdW5p
dChjb29yZCkgfHwKKwkgICAgIWl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKSB8fAorCSAgICAh
a2V5ZXEodW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZ1a2V5KSwga2V5KSB8fAorCSAgICAoem5v
ZGVfZ2V0X2xldmVsKGNvb3JkLT5ub2RlKSAhPSBMRUFGX0xFVkVMKSB8fAorCSAgICAhaXRlbV9p
c19zdGF0ZGF0YShjb29yZCkpIHsKKwkJd2FybmluZygibmlraXRhLTE5MDEiLCAiQ29uc3BpY3Vv
dXMgc2VhbCIpOworCQlyZWlzZXI0X3ByaW50X2tleSgia2V5Iiwga2V5KTsKKwkJcHJpbnRfY29v
cmQoImNvb3JkIiwgY29vcmQsIDEpOworCQlpbXBvc3NpYmxlKCJuaWtpdGEtMjg3NyIsICJubyB3
YXkiKTsKKwl9CisJenJlbHNlKGNvb3JkLT5ub2RlKTsKK30KKworI2Vsc2UKKyNkZWZpbmUgY2hl
Y2tfaW5vZGVfc2VhbChpbm9kZSwgY29vcmQsIGtleSkgbm9vcAorI2RlZmluZSBjaGVja19zZF9j
b29yZChjb29yZCwga2V5KSBub29wCisjZW5kaWYKKworLyogaW5zZXJ0IG5ldyBzdGF0LWRhdGEg
aW50byB0cmVlLiBDYWxsZWQgd2l0aCBpbm9kZSBzdGF0ZQorICAgIGxvY2tlZC4gUmV0dXJuIGlu
b2RlIHN0YXRlIGxvY2tlZC4gKi8KK3N0YXRpYyBpbnQgaW5zZXJ0X25ld19zZChzdHJ1Y3QgaW5v
ZGUgKmlub2RlLyogaW5vZGUgdG8gY3JlYXRlIHNkIGZvciAqLykKK3sKKwlpbnQgcmVzdWx0Owor
CXJlaXNlcjRfa2V5IGtleTsKKwljb29yZF90IGNvb3JkOworCXJlaXNlcjRfaXRlbV9kYXRhIGRh
dGE7CisJY2hhciAqYXJlYTsKKwlyZWlzZXI0X2lub2RlICpyZWY7CisJbG9ja19oYW5kbGUgbGg7
CisJb2lkX3Qgb2lkOworCisJYXNzZXJ0KCJuaWtpdGEtNzIzIiwgaW5vZGUgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMzQwNiIsIHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNF
UjRfTk9fU0QpKTsKKworCXJlZiA9IHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSk7CisJc3Bpbl9s
b2NrX2lub2RlKGlub2RlKTsKKworCWlmIChyZWYtPnBsdWdpbl9tYXNrICE9IDApCisJCS8qIGlu
b2RlIGhhcyBub24tc3RhbmRhcmQgcGx1Z2lucyAqLworCQlpbm9kZV9zZXRfZXh0ZW5zaW9uKGlu
b2RlLCBQTFVHSU5fU1RBVCk7CisJLyoKKwkgKiBwcmVwYXJlIHNwZWNpZmljYXRpb24gb2YgbmV3
IGl0ZW0gdG8gYmUgaW5zZXJ0ZWQKKwkgKi8KKworCWRhdGEuaXBsdWcgPSBpbm9kZV9zZF9wbHVn
aW4oaW5vZGUpOworCWRhdGEubGVuZ3RoID0gZGF0YS5pcGx1Zy0+cy5zZC5zYXZlX2xlbihpbm9k
ZSk7CisJc3Bpbl91bmxvY2tfaW5vZGUoaW5vZGUpOworCisJZGF0YS5kYXRhID0gTlVMTDsKKwlk
YXRhLnVzZXIgPSAwOworLyogY291bGQgYmUgb3B0aW1pemVkIGZvciBjYXNlIHdoZXJlIHRoZXJl
IGlzIG9ubHkgb25lIG5vZGUgZm9ybWF0IGluCisgKiB1c2UgaW4gdGhlIGZpbGVzeXN0ZW0sIHBy
b2JhYmx5IHRoZXJlIGFyZSBsb3RzIG9mIHN1Y2gKKyAqIHBsYWNlcyB3ZSBjb3VsZCBvcHRpbWl6
ZSBmb3Igb25seSBvbmUgbm9kZSBsYXlvdXQuLi4uIC1IYW5zICovCisJaWYgKGRhdGEubGVuZ3Ro
ID4gcmVpc2VyNF90cmVlX2J5X2lub2RlKGlub2RlKS0+bnBsdWctPm1heF9pdGVtX3NpemUoKSkg
eworCQkvKiBUaGlzIGlzIHNpbGx5IGNoZWNrLCBidXQgd2UgZG9uJ3Qga25vdyBhY3R1YWwgbm9k
ZSB3aGVyZQorCQkgICBpbnNlcnRpb24gd2lsbCBnbyBpbnRvLiAqLworCQlyZXR1cm4gUkVURVJS
KC1FTkFNRVRPT0xPTkcpOworCX0KKwlvaWQgPSBvaWRfYWxsb2NhdGUoaW5vZGUtPmlfc2IpOwor
LyogTklLSVRBLUZJWE1FLUhBTlM6IHdoYXQgaXMgeW91ciBvcGluaW9uIG9uIHdoZXRoZXIgdGhp
cyBlcnJvciBjaGVjayBzaG91bGQgYmUKKyAqIGVuY2Fwc3VsYXRlZCBpbnRvIG9pZF9hbGxvY2F0
ZT8gKi8KKwlpZiAob2lkID09IEFCU09MVVRFX01BWF9PSUQpCisJCXJldHVybiBSRVRFUlIoLUVP
VkVSRkxPVyk7CisKKwlzZXRfaW5vZGVfb2lkKGlub2RlLCBvaWQpOworCisJY29vcmRfaW5pdF96
ZXJvKCZjb29yZCk7CisJaW5pdF9saCgmbGgpOworCisJcmVzdWx0ID0gaW5zZXJ0X2J5X2tleShy
ZWlzZXI0X3RyZWVfYnlfaW5vZGUoaW5vZGUpLAorCQkJICAgICAgIGJ1aWxkX3NkX2tleShpbm9k
ZSwgJmtleSksICZkYXRhLCAmY29vcmQsICZsaCwKKwkJCSAgICAgICAvKiBzdGF0IGRhdGEgbGl2
ZXMgb24gYSBsZWFmIGxldmVsICovCisJCQkgICAgICAgTEVBRl9MRVZFTCwgQ0JLX1VOSVFVRSk7
CisKKwkvKiB3ZSBkb24ndCB3YW50IHRvIHJlLWNoZWNrIHRoYXQgc29tZWJvZHkgZGlkbid0IGlu
c2VydAorCSAgIHN0YXQtZGF0YSB3aGlsZSB3ZSB3ZXJlIGRvaW5nIGlvLCBiZWNhdXNlIGlmIGl0
IGRpZCwKKwkgICBpbnNlcnRfYnlfa2V5KCkgcmV0dXJuZWQgZXJyb3IuICovCisJLyogYnV0IHdo
YXQgX2lzXyBwb3NzaWJsZSBpcyB0aGF0IHBsdWdpbiBmb3IgaW5vZGUncyBzdGF0LWRhdGEsCisJ
ICAgbGlzdCBvZiBub24tc3RhbmRhcmQgcGx1Z2lucyBvciB0aGVpciBzdGF0ZSB3b3VsZCBjaGFu
Z2UKKwkgICBkdXJpbmcgaW8sIHNvIHRoYXQgc3RhdC1kYXRhIHdvdWxkbid0IGZpdCBpbnRvIHNk
LiBUbyBhdm9pZAorCSAgIHRoaXMgcmFjZSB3ZSBrZWVwIGlub2RlX3N0YXRlIGxvY2suIFRoaXMg
bG9jayBoYXMgdG8gYmUKKwkgICB0YWtlbiBlYWNoIHRpbWUgeW91IGFjY2VzcyBpbm9kZSBpbiBh
IHdheSB0aGF0IHdvdWxkIGNhdXNlCisJICAgY2hhbmdlcyBpbiBzZCBzaXplOiBjaGFuZ2luZyBw
bHVnaW5zIGV0Yy4KKwkgKi8KKworCWlmIChyZXN1bHQgPT0gSUJLX0lOU0VSVF9PSykgeworCQlj
b29yZF9jbGVhcl9pcGx1ZygmY29vcmQpOworCQlyZXN1bHQgPSB6bG9hZChjb29yZC5ub2RlKTsK
KwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkvKiBoYXZlIHdlIHJlYWxseSBpbnNlcnRlZCBzdGF0
IGRhdGE/ICovCisJCQlhc3NlcnQoIm5pa2l0YS03MjUiLCBpdGVtX2lzX3N0YXRkYXRhKCZjb29y
ZCkpOworCisJCQkvKiBpbm9kZSB3YXMganVzdCBjcmVhdGVkLiBJdCBpcyBpbnNlcnRlZCBpbnRv
IGhhc2gKKwkJCSAgIHRhYmxlLCBidXQgbm8gZGlyZWN0b3J5IGVudHJ5IHdhcyB5ZXQgaW5zZXJ0
ZWQgaW50bworCQkJICAgcGFyZW50LiBTbywgaW5vZGUgaXMgaW5hY2Nlc3NpYmxlIHRocm91Z2gK
KwkJCSAgIC0+bG9va3VwKCkuIEFsbCBwbGFjZXMgdGhhdCBkaXJlY3RseSBncmFiIGlub2RlCisJ
CQkgICBmcm9tIGhhc2gtdGFibGUgKGxpa2Ugb2xkIGtuZnNkKSwgc2hvdWxkIGNoZWNrCisJCQkg
ICBJTU1VVEFCTEUgZmxhZyB0aGF0IGlzIHNldCBieSBjb21tb25fY3JlYXRlX2NoaWxkLgorCQkJ
ICovCisJCQlhc3NlcnQoIm5pa2l0YS0zMjQwIiwgZGF0YS5pcGx1ZyAhPSBOVUxMKTsKKwkJCWFz
c2VydCgibmlraXRhLTMyNDEiLCBkYXRhLmlwbHVnLT5zLnNkLnNhdmUgIT0gTlVMTCk7CisJCQlh
cmVhID0gaXRlbV9ib2R5X2J5X2Nvb3JkKCZjb29yZCk7CisJCQlyZXN1bHQgPSBkYXRhLmlwbHVn
LT5zLnNkLnNhdmUoaW5vZGUsICZhcmVhKTsKKwkJCXpub2RlX21ha2VfZGlydHkoY29vcmQubm9k
ZSk7CisJCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCQkvKiBvYmplY3QgaGFzIHN0YXQtZGF0YSBu
b3cgKi8KKwkJCQlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKGlub2RlLCBSRUlTRVI0X05PX1NEKTsK
KwkJCQlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLAorCQkJCQkJICAgICAgIFJFSVNFUjRf
U0RMRU5fS05PV04pOworCQkJCS8qIGluaXRpYWxpc2Ugc3RhdC1kYXRhIHNlYWwgKi8KKwkJCQly
ZWlzZXI0X3NlYWxfaW5pdCgmcmVmLT5zZF9zZWFsLCAmY29vcmQsICZrZXkpOworCQkJCXJlZi0+
c2RfY29vcmQgPSBjb29yZDsKKwkJCQljaGVja19pbm9kZV9zZWFsKGlub2RlLCAmY29vcmQsICZr
ZXkpOworCQkJfSBlbHNlIGlmIChyZXN1bHQgIT0gLUVOT01FTSkKKwkJCQkvKgorCQkJCSAqIGNv
bnZlcnQgYW55IG90aGVyIGVycm9yIGNvZGUgdG8gLUVJTyB0bworCQkJCSAqIGF2b2lkIGNvbmZ1
c2luZyB1c2VyIGxldmVsIHdpdGggdW5leHBlY3RlZAorCQkJCSAqIGVycm9ycy4KKwkJCQkgKi8K
KwkJCQlyZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJCQl6cmVsc2UoY29vcmQubm9kZSk7CisJCX0K
Kwl9CisJZG9uZV9saCgmbGgpOworCisJaWYgKHJlc3VsdCAhPSAwKQorCQlrZXlfd2FybmluZygm
a2V5LCBpbm9kZSwgcmVzdWx0KTsKKwllbHNlCisJCW9pZF9jb3VudF9hbGxvY2F0ZWQoKTsKKwor
CXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGZpbmQgc2Qgb2YgaW5vZGUgaW4gYSB0cmVlLCBkZWFs
IHdpdGggZXJyb3JzICovCitpbnQgbG9va3VwX3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogaW5v
ZGUgdG8gbG9vayBzZCBmb3IgKi8gLAorCSAgICAgIHpub2RlX2xvY2tfbW9kZSBsb2NrX21vZGUg
LyogbG9jayBtb2RlICovICwKKwkgICAgICBjb29yZF90ICpjb29yZCAvKiByZXN1bHRpbmcgY29v
cmQgKi8gLAorCSAgICAgIGxvY2tfaGFuZGxlICogbGggLyogcmVzdWx0aW5nIGxvY2sgaGFuZGxl
ICovICwKKwkgICAgICBjb25zdCByZWlzZXI0X2tleSAqIGtleSAvKiByZXN1bHRpbmcga2V5ICov
ICwKKwkgICAgICBpbnQgc2lsZW50KQoreworCWludCByZXN1bHQ7CisJX191MzIgZmxhZ3M7CisK
Kwlhc3NlcnQoIm5pa2l0YS0xNjkyIiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEt
MTY5MyIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE2OTQiLCBrZXkgIT0gTlVM
TCk7CisKKwkvKiBsb29rIGZvciB0aGUgb2JqZWN0J3Mgc3RhdCBkYXRhIGluIGEgdHJlZS4KKwkg
ICBUaGlzIHJldHVybnMgaW4gIm5vZGUiIHBvaW50ZXIgdG8gYSBsb2NrZWQgem5vZGUgYW5kIGlu
ICJwb3MiCisJICAgcG9zaXRpb24gb2YgYW4gaXRlbSBmb3VuZCBpbiBub2RlLiBCb3RoIGFyZSBv
bmx5IHZhbGlkIGlmCisJICAgY29vcmRfZm91bmQgaXMgcmV0dXJuZWQuICovCisJZmxhZ3MgPSAo
bG9ja19tb2RlID09IFpOT0RFX1dSSVRFX0xPQ0spID8gQ0JLX0ZPUl9JTlNFUlQgOiAwOworCWZs
YWdzIHw9IENCS19VTklRVUU7CisJLyoKKwkgKiB0cmF2ZXJzZSB0cmVlIHRvIGZpbmQgc3RhdCBk
YXRhLiBXZSBjYW5ub3QgdXNlIHZyb290IGhlcmUsIGJlY2F1c2UKKwkgKiBpdCBvbmx5IGNvdmVy
cyBfYm9keV8gb2YgdGhlIGZpbGUsIGFuZCBzdGF0IGRhdGEgZG9uJ3QgYmVsb25nCisJICogdGhl
cmUuCisJICovCisJcmVzdWx0ID0gY29vcmRfYnlfa2V5KHJlaXNlcjRfdHJlZV9ieV9pbm9kZShp
bm9kZSksCisJCQkgICAgICBrZXksCisJCQkgICAgICBjb29yZCwKKwkJCSAgICAgIGxoLAorCQkJ
ICAgICAgbG9ja19tb2RlLAorCQkJICAgICAgRklORF9FWEFDVCwgTEVBRl9MRVZFTCwgTEVBRl9M
RVZFTCwgZmxhZ3MsIE5VTEwpOworCWlmIChSRUlTRVI0X0RFQlVHICYmIHJlc3VsdCA9PSAwKQor
CQljaGVja19zZF9jb29yZChjb29yZCwga2V5KTsKKworCWlmIChyZXN1bHQgIT0gMCAmJiAhc2ls
ZW50KQorCQlrZXlfd2FybmluZyhrZXksIGlub2RlLCByZXN1bHQpOworCXJldHVybiByZXN1bHQ7
Cit9CisKK3N0YXRpYyBpbnQKK2xvY2F0ZV9pbm9kZV9zZChzdHJ1Y3QgaW5vZGUgKmlub2RlLAor
CQlyZWlzZXI0X2tleSAqIGtleSwgY29vcmRfdCAqY29vcmQsIGxvY2tfaGFuZGxlICogbGgpCit7
CisJcmVpc2VyNF9pbm9kZSAqc3RhdGU7CisJc2VhbF90IHNlYWw7CisJaW50IHJlc3VsdDsKKwor
CWFzc2VydCgibmlraXRhLTM0ODMiLCBpbm9kZSAhPSBOVUxMKTsKKworCXN0YXRlID0gcmVpc2Vy
NF9pbm9kZV9kYXRhKGlub2RlKTsKKwlzcGluX2xvY2tfaW5vZGUoaW5vZGUpOworCSpjb29yZCA9
IHN0YXRlLT5zZF9jb29yZDsKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7CisJc2VhbCA9IHN0
YXRlLT5zZF9zZWFsOworCXNwaW5fdW5sb2NrX2lub2RlKGlub2RlKTsKKworCWJ1aWxkX3NkX2tl
eShpbm9kZSwga2V5KTsKKwkvKiBmaXJzdCwgdHJ5IHRvIHVzZSBzZWFsICovCisJaWYgKHJlaXNl
cjRfc2VhbF9pc19zZXQoJnNlYWwpKSB7CisJCXJlc3VsdCA9IHJlaXNlcjRfc2VhbF92YWxpZGF0
ZSgmc2VhbCwKKwkJCQkJICAgICAgIGNvb3JkLAorCQkJCQkgICAgICAga2V5LAorCQkJCQkgICAg
ICAgbGgsIFpOT0RFX1dSSVRFX0xPQ0ssCisJCQkJCSAgICAgICBaTk9ERV9MT0NLX0xPUFJJKTsK
KwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQljaGVja19zZF9jb29yZChjb29yZCwga2V5KTsKKwkJ
CXJldHVybiAwOworCQl9CisJfQorCS8qIGhpbnQgaXMgaW52YWxpZCwKKwkgKiBzbyB0cmF2ZXJz
ZSB0cmVlCisJICovCisJY29vcmRfaW5pdF96ZXJvKGNvb3JkKTsKKwlyZXR1cm4gbG9va3VwX3Nk
KGlub2RlLCBaTk9ERV9XUklURV9MT0NLLCBjb29yZCwgbGgsIGtleSwgMCk7Cit9CisKKyNpZiBS
RUlTRVI0X0RFQlVHCitzdGF0aWMgaW50IGFsbF9idXRfb2Zmc2V0X2tleV9lcShjb25zdCByZWlz
ZXI0X2tleSAqIGsxLCBjb25zdCByZWlzZXI0X2tleSAqIGsyKQoreworCXJldHVybiAoZ2V0X2tl
eV9sb2NhbGl0eShrMSkgPT0gZ2V0X2tleV9sb2NhbGl0eShrMikgJiYKKwkJZ2V0X2tleV90eXBl
KGsxKSA9PSBnZXRfa2V5X3R5cGUoazIpICYmCisJCWdldF9rZXlfYmFuZChrMSkgPT0gZ2V0X2tl
eV9iYW5kKGsyKSAmJgorCQlnZXRfa2V5X29yZGVyaW5nKGsxKSA9PSBnZXRfa2V5X29yZGVyaW5n
KGsyKSAmJgorCQlnZXRfa2V5X29iamVjdGlkKGsxKSA9PSBnZXRfa2V5X29iamVjdGlkKGsyKSk7
Cit9CisKKyNpbmNsdWRlICIuLi90cmVlX3dhbGsuaCIKKworLyogbWFrZSBzb21lIGNoZWNrcyBi
ZWZvcmUgYW5kIGFmdGVyIHN0YXQtZGF0YSByZXNpemUgb3BlcmF0aW9uICovCitzdGF0aWMgaW50
IGNoZWNrX3NkX3Jlc2l6ZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjb29yZF90ICpjb29yZCwKKwkJ
CSAgIGludCBsZW5ndGgsIGludCBwcm9ncmVzcy8qIDEgbWVhbnMgYWZ0ZXIgcmVzaXplICovKQor
eworCWludCByZXQgPSAwOworCWxvY2tfaGFuZGxlIGxlZnRfbG9jazsKKwljb29yZF90IGxlZnRf
Y29vcmQ7CisJcmVpc2VyNF9rZXkgbGVmdF9rZXk7CisJcmVpc2VyNF9rZXkga2V5OworCisJaWYg
KGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKSAhPQorCSAgICBmaWxlX3BsdWdpbl9ieV9pZChDUllQ
VENPTVBSRVNTX0ZJTEVfUExVR0lOX0lEKSkKKwkJcmV0dXJuIDA7CisJaWYgKCFsZW5ndGgpCisJ
CXJldHVybiAwOworCWlmIChjb29yZC0+aXRlbV9wb3MgIT0gMCkKKwkJcmV0dXJuIDA7CisKKwlp
bml0X2xoKCZsZWZ0X2xvY2spOworCXJldCA9IHJlaXNlcjRfZ2V0X2xlZnRfbmVpZ2hib3IoJmxl
ZnRfbG9jaywKKwkJCQkJY29vcmQtPm5vZGUsCisJCQkJCVpOT0RFX1dSSVRFX0xPQ0ssCisJCQkJ
CUdOX0NBTl9VU0VfVVBQRVJfTEVWRUxTKTsKKwlpZiAocmV0ID09IC1FX1JFUEVBVCB8fCByZXQg
PT0gLUVfTk9fTkVJR0hCT1IgfHwKKwkgICAgcmV0ID09IC1FTk9FTlQgfHwgcmV0ID09IC1FSU5W
QUwKKwkgICAgfHwgcmV0ID09IC1FX0RFQURMT0NLKSB7CisJCXJldCA9IDA7CisJCWdvdG8gZXhp
dDsKKwl9CisJcmV0ID0gemxvYWQobGVmdF9sb2NrLm5vZGUpOworCWlmIChyZXQpCisJCWdvdG8g
ZXhpdDsKKwljb29yZF9pbml0X2xhc3RfdW5pdCgmbGVmdF9jb29yZCwgbGVmdF9sb2NrLm5vZGUp
OworCWl0ZW1fa2V5X2J5X2Nvb3JkKCZsZWZ0X2Nvb3JkLCAmbGVmdF9rZXkpOworCWl0ZW1fa2V5
X2J5X2Nvb3JkKGNvb3JkLCAma2V5KTsKKworCWlmIChhbGxfYnV0X29mZnNldF9rZXlfZXEoJmtl
eSwgJmxlZnRfa2V5KSkKKwkJLyogY29ycnVwdGlvbiBvY2N1cmVkICovCisJCXJldCA9IDE7CisJ
enJlbHNlKGxlZnRfbG9jay5ub2RlKTsKKyBleGl0OgorCWRvbmVfbGgoJmxlZnRfbG9jayk7CisJ
cmV0dXJuIHJldDsKK30KKyNlbmRpZgorCisvKiB1cGRhdGUgc3RhdC1kYXRhIGF0IEBjb29yZCAq
Lworc3RhdGljIGludAordXBkYXRlX3NkX2F0KHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNvb3JkX3Qg
KmNvb3JkLCByZWlzZXI0X2tleSAqIGtleSwKKwkgICAgIGxvY2tfaGFuZGxlICogbGgpCit7CisJ
aW50IHJlc3VsdDsKKwlyZWlzZXI0X2l0ZW1fZGF0YSBkYXRhOworCWNoYXIgKmFyZWE7CisJcmVp
c2VyNF9pbm9kZSAqc3RhdGU7CisJem5vZGUgKmxvYWRlZDsKKworCXN0YXRlID0gcmVpc2VyNF9p
bm9kZV9kYXRhKGlub2RlKTsKKworCWNvb3JkX2NsZWFyX2lwbHVnKGNvb3JkKTsKKwlyZXN1bHQg
PSB6bG9hZChjb29yZC0+bm9kZSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0
OworCWxvYWRlZCA9IGNvb3JkLT5ub2RlOworCisJc3Bpbl9sb2NrX2lub2RlKGlub2RlKTsKKwlh
c3NlcnQoIm5pa2l0YS03MjgiLCBpbm9kZV9zZF9wbHVnaW4oaW5vZGUpICE9IE5VTEwpOworCWRh
dGEuaXBsdWcgPSBpbm9kZV9zZF9wbHVnaW4oaW5vZGUpOworCisJLyogaWYgaW5vZGUgaGFzIG5v
bi1zdGFuZGFyZCBwbHVnaW5zLCBhZGQgYXBwcm9wcmlhdGUgc3RhdCBkYXRhCisJICogZXh0ZW5z
aW9uICovCisJaWYgKHN0YXRlLT5leHRtYXNrICYgKDEgPDwgUExVR0lOX1NUQVQpKSB7CisJCWlm
IChzdGF0ZS0+cGx1Z2luX21hc2sgPT0gMCkKKwkJCWlub2RlX2Nscl9leHRlbnNpb24oaW5vZGUs
IFBMVUdJTl9TVEFUKTsKKwl9IGVsc2UgaWYgKHN0YXRlLT5wbHVnaW5fbWFzayAhPSAwKQorCQlp
bm9kZV9zZXRfZXh0ZW5zaW9uKGlub2RlLCBQTFVHSU5fU1RBVCk7CisKKwlpZiAoc3RhdGUtPmV4
dG1hc2sgJiAoMSA8PCBIRUlSX1NUQVQpKSB7CisJCWlmIChzdGF0ZS0+aGVpcl9tYXNrID09IDAp
CisJCQlpbm9kZV9jbHJfZXh0ZW5zaW9uKGlub2RlLCBIRUlSX1NUQVQpOworCX0gZWxzZSBpZiAo
c3RhdGUtPmhlaXJfbWFzayAhPSAwKQorCQkJaW5vZGVfc2V0X2V4dGVuc2lvbihpbm9kZSwgSEVJ
Ul9TVEFUKTsKKworCS8qIGRhdGEubGVuZ3RoIGlzIGhvdyBtdWNoIHNwYWNlIHRvIGFkZCB0byAo
b3IgcmVtb3ZlCisJICAgZnJvbSBpZiBuZWdhdGl2ZSkgc2QgKi8KKwlpZiAoIXJlaXNlcjRfaW5v
ZGVfZ2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfU0RMRU5fS05PV04pKSB7CisJCS8qIHJlY2FsY3Vs
YXRlIHN0YXQtZGF0YSBsZW5ndGggKi8KKwkJZGF0YS5sZW5ndGggPQorCQkgICAgZGF0YS5pcGx1
Zy0+cy5zZC5zYXZlX2xlbihpbm9kZSkgLQorCQkgICAgaXRlbV9sZW5ndGhfYnlfY29vcmQoY29v
cmQpOworCQlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlTRVI0X1NETEVOX0tOT1dO
KTsKKwl9IGVsc2UKKwkJZGF0YS5sZW5ndGggPSAwOworCXNwaW5fdW5sb2NrX2lub2RlKGlub2Rl
KTsKKworCS8qIGlmIG9uLWRpc2sgc3RhdCBkYXRhIGlzIG9mIGRpZmZlcmVudCBsZW5ndGggdGhh
biByZXF1aXJlZAorCSAgIGZvciB0aGlzIGlub2RlLCByZXNpemUgaXQgKi8KKworCWlmIChkYXRh
Lmxlbmd0aCAhPSAwKSB7CisJCWRhdGEuZGF0YSA9IE5VTEw7CisJCWRhdGEudXNlciA9IDA7CisK
KwkJYXNzZXJ0KCJlZHdhcmQtMTQ0MSIsCisJCSAgICAgICAhY2hlY2tfc2RfcmVzaXplKGlub2Rl
LCBjb29yZCwKKwkJCQkJZGF0YS5sZW5ndGgsIDAvKiBiZWZvcmUgcmVzaXplICovKSk7CisKKwkJ
LyogaW5zZXJ0aW9uIGNvZGUgcmVxdWlyZXMgdGhhdCBpbnNlcnRpb24gcG9pbnQgKGNvb3JkKSB3
YXMKKwkJICogYmV0d2VlbiB1bml0cy4gKi8KKwkJY29vcmQtPmJldHdlZW4gPSBBRlRFUl9VTklU
OworCQlyZXN1bHQgPSByZWlzZXI0X3Jlc2l6ZV9pdGVtKGNvb3JkLCAmZGF0YSwga2V5LCBsaCwK
KwkJCQkJICAgICBDT1BJX0RPTlRfU0hJRlRfTEVGVCk7CisJCWlmIChyZXN1bHQgIT0gMCkgewor
CQkJa2V5X3dhcm5pbmcoa2V5LCBpbm9kZSwgcmVzdWx0KTsKKwkJCXpyZWxzZShsb2FkZWQpOwor
CQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQlpZiAobG9hZGVkICE9IGNvb3JkLT5ub2RlKSB7CisJ
CSAgLyogcmVpc2VyNF9yZXNpemVfaXRlbSBtb3ZlZCBjb29yZCB0byBhbm90aGVyIG5vZGUuCisJ
CSAgICAgWmxvYWQgaXQgKi8KKwkJCXpyZWxzZShsb2FkZWQpOworCQkJY29vcmRfY2xlYXJfaXBs
dWcoY29vcmQpOworCQkJcmVzdWx0ID0gemxvYWQoY29vcmQtPm5vZGUpOworCQkJaWYgKHJlc3Vs
dCAhPSAwKQorCQkJCXJldHVybiByZXN1bHQ7CisJCQlsb2FkZWQgPSBjb29yZC0+bm9kZTsKKwkJ
fQorCQlhc3NlcnQoImVkd2FyZC0xNDQyIiwKKwkJICAgICAgICFjaGVja19zZF9yZXNpemUoaW5v
ZGUsIGNvb3JkLAorCQkJCQlkYXRhLmxlbmd0aCwgMS8qIGFmdGVyIHJlc2l6ZSAqLykpOworCX0K
KwlhcmVhID0gaXRlbV9ib2R5X2J5X2Nvb3JkKGNvb3JkKTsKKwlzcGluX2xvY2tfaW5vZGUoaW5v
ZGUpOworCXJlc3VsdCA9IGRhdGEuaXBsdWctPnMuc2Quc2F2ZShpbm9kZSwgJmFyZWEpOworCXpu
b2RlX21ha2VfZGlydHkoY29vcmQtPm5vZGUpOworCisJLyogcmUtaW5pdGlhbGlzZSBzdGF0LWRh
dGEgc2VhbCAqLworCisJLyoKKwkgKiBjb29yZC5iZXR3ZWVuIHdhcyBwb3NzaWJseSBza2V3ZWQg
ZnJvbSBBVF9VTklUIHdoZW4gc3RhdC1kYXRhIHNpemUKKwkgKiB3YXMgY2hhbmdlZCBhbmQgbmV3
IGV4dGVuc2lvbnMgd2VyZSBwYXN0ZWQgaW50byBpdGVtLgorCSAqLworCWNvb3JkLT5iZXR3ZWVu
ID0gQVRfVU5JVDsKKwlyZWlzZXI0X3NlYWxfaW5pdCgmc3RhdGUtPnNkX3NlYWwsIGNvb3JkLCBr
ZXkpOworCXN0YXRlLT5zZF9jb29yZCA9ICpjb29yZDsKKwlzcGluX3VubG9ja19pbm9kZShpbm9k
ZSk7CisJY2hlY2tfaW5vZGVfc2VhbChpbm9kZSwgY29vcmQsIGtleSk7CisJenJlbHNlKGxvYWRl
ZCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogVXBkYXRlIGV4aXN0aW5nIHN0YXQtZGF0YSBp
biBhIHRyZWUuIENhbGxlZCB3aXRoIGlub2RlIHN0YXRlIGxvY2tlZC4gUmV0dXJuCisgICBpbm9k
ZSBzdGF0ZSBsb2NrZWQuICovCitzdGF0aWMgaW50IHVwZGF0ZV9zZChzdHJ1Y3QgaW5vZGUgKmlu
b2RlLyogaW5vZGUgdG8gdXBkYXRlIHNkIGZvciAqLykKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNl
cjRfa2V5IGtleTsKKwljb29yZF90IGNvb3JkOworCWxvY2tfaGFuZGxlIGxoOworCisJYXNzZXJ0
KCJuaWtpdGEtNzI2IiwgaW5vZGUgIT0gTlVMTCk7CisKKwkvKiBubyBzdGF0LWRhdGEsIG5vdGhp
bmcgdG8gdXBkYXRlPyEgKi8KKwlhc3NlcnQoIm5pa2l0YS0zNDgyIiwgIXJlaXNlcjRfaW5vZGVf
Z2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfTk9fU0QpKTsKKworCWluaXRfbGgoJmxoKTsKKworCXJl
c3VsdCA9IGxvY2F0ZV9pbm9kZV9zZChpbm9kZSwgJmtleSwgJmNvb3JkLCAmbGgpOworCWlmIChy
ZXN1bHQgPT0gMCkKKwkJcmVzdWx0ID0gdXBkYXRlX3NkX2F0KGlub2RlLCAmY29vcmQsICZrZXks
ICZsaCk7CisJZG9uZV9saCgmbGgpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogaGVscGVy
IGZvciByZWlzZXI0X2RlbGV0ZV9vYmplY3RfY29tbW9uIGFuZCByZWlzZXI0X2RlbGV0ZV9kaXJf
Y29tbW9uLgorICAgUmVtb3ZlIG9iamVjdCBzdGF0IGRhdGEuIFNwYWNlIGZvciB0aGF0IG11c3Qg
YmUgcmVzZXJ2ZWQgYnkgY2FsbGVyIGJlZm9yZQorKi8KK3N0YXRpYyBpbnQKK2NvbW1vbl9vYmpl
Y3RfZGVsZXRlX25vX3Jlc2VydmUoc3RydWN0IGlub2RlICppbm9kZS8qIG9iamVjdCB0byByZW1v
dmUgKi8pCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTE0NzciLCBpbm9kZSAh
PSBOVUxMKTsKKworCWlmICghcmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9O
T19TRCkpIHsKKwkJcmVpc2VyNF9rZXkgc2Rfa2V5OworCisJCWJ1aWxkX3NkX2tleShpbm9kZSwg
JnNkX2tleSk7CisJCXJlc3VsdCA9CisJCSAgICByZWlzZXI0X2N1dF90cmVlKHJlaXNlcjRfdHJl
ZV9ieV9pbm9kZShpbm9kZSksCisJCQkJICAgICAmc2Rfa2V5LCAmc2Rfa2V5LCBOVUxMLCAwKTsK
KwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBS
RUlTRVI0X05PX1NEKTsKKwkJCXJlc3VsdCA9IG9pZF9yZWxlYXNlKGlub2RlLT5pX3NiLCBnZXRf
aW5vZGVfb2lkKGlub2RlKSk7CisJCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCQlvaWRfY291bnRf
cmVsZWFzZWQoKTsKKworCQkJCXJlc3VsdCA9IHNhZmVfbGlua19kZWwocmVpc2VyNF90cmVlX2J5
X2lub2RlKGlub2RlKSwKKwkJCQkJCSAgICAgICBnZXRfaW5vZGVfb2lkKGlub2RlKSwKKwkJCQkJ
CSAgICAgICBTQUZFX1VOTElOSyk7CisJCQl9CisJCX0KKwl9IGVsc2UKKwkJcmVzdWx0ID0gMDsK
KwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBoZWxwZXIgZm9yIHNhZmVsaW5rX2NvbW1vbiAqLwor
c3RhdGljIGludCBwcm9jZXNzX3RydW5jYXRlKHN0cnVjdCBpbm9kZSAqaW5vZGUsIF9fdTY0IHNp
emUpCit7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgaWF0dHIgYXR0cjsKKwlmaWxlX3BsdWdpbiAq
ZnBsdWc7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJc3RydWN0IGRlbnRyeSBkZW50cnk7CisK
Kwlhc3NlcnQoInZzLTIxIiwgaXNfaW5fcmVpc2VyNF9jb250ZXh0KCkpOworCWN0eCA9IHJlaXNl
cjRfaW5pdF9jb250ZXh0KGlub2RlLT5pX3NiKTsKKwlhc3NlcnQoInZzLTIyIiwgIUlTX0VSUihj
dHgpKTsKKworCWF0dHIuaWFfc2l6ZSA9IHNpemU7CisJYXR0ci5pYV92YWxpZCA9IEFUVFJfU0la
RSB8IEFUVFJfQ1RJTUU7CisJZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSk7CisKKwlp
bm9kZV9sb2NrKGlub2RlKTsKKwlhc3NlcnQoInZzLTE3MDQiLCBnZXRfY3VycmVudF9jb250ZXh0
KCktPnRyYW5zLT5hdG9tID09IE5VTEwpOworCWRlbnRyeS5kX2lub2RlID0gaW5vZGU7CisJcmVz
dWx0ID0gaW5vZGUtPmlfb3AtPnNldGF0dHIoJmRlbnRyeSwgJmF0dHIpOworCWlub2RlX3VubG9j
ayhpbm9kZSk7CisKKwljb250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwlyZWlzZXI0X2V4
aXRfY29udGV4dChjdHgpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAgTG9jYWwgdmFy
aWFibGVzOgorICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICBtb2RlLW5hbWU6ICJMQyIK
KyAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgdGFiLXdpZHRoOiA4CisgIGZpbGwtY29sdW1uOiA4MAor
ICBzY3JvbGwtc3RlcDogMQorICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9oYXNoLmMgbGludXgtNS40LjE3L2Zz
L3JlaXNlcjQvcGx1Z2luL2hhc2guYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9w
bHVnaW4vaGFzaC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaGFzaC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDY0
MjIyMjYzICswMTAwCkBAIC0wLDAgKzEsMzUyIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwg
MjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JF
QURNRSAqLworCisvKiBIYXNoIGZ1bmN0aW9ucyAqLworCisjaW5jbHVkZSAiLi4vZGVidWcuaCIK
KyNpbmNsdWRlICJwbHVnaW5faGVhZGVyLmgiCisjaW5jbHVkZSAicGx1Z2luLmgiCisjaW5jbHVk
ZSAiLi4vc3VwZXIuaCIKKyNpbmNsdWRlICIuLi9pbm9kZS5oIgorCisjaW5jbHVkZSA8bGludXgv
dHlwZXMuaD4KKworLyogb2xkIHJ1cGFzb3YgKHl1cmEpIGhhc2ggKi8KK3N0YXRpYyBfX3U2NCBo
YXNoX3J1cGFzb3YoY29uc3QgdW5zaWduZWQgY2hhciAqbmFtZSAvKiBuYW1lIHRvIGhhc2ggKi8g
LAorCQkJICBpbnQgbGVuLyogQG5hbWUncyBsZW5ndGggKi8pCit7CisJaW50IGk7CisJaW50IGo7
CisJaW50IHBvdzsKKwlfX3U2NCBhOworCV9fdTY0IGM7CisKKwlhc3NlcnQoIm5pa2l0YS02NzIi
LCBuYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTY3MyIsIGxlbiA+PSAwKTsKKworCWZv
ciAocG93ID0gMSwgaSA9IDE7IGkgPCBsZW47ICsraSkKKwkJcG93ID0gcG93ICogMTA7CisKKwlp
ZiAobGVuID09IDEpCisJCWEgPSBuYW1lWzBdIC0gNDg7CisJZWxzZQorCQlhID0gKG5hbWVbMF0g
LSA0OCkgKiBwb3c7CisKKwlmb3IgKGkgPSAxOyBpIDwgbGVuOyArK2kpIHsKKwkJYyA9IG5hbWVb
aV0gLSA0ODsKKwkJZm9yIChwb3cgPSAxLCBqID0gaTsgaiA8IGxlbiAtIDE7ICsraikKKwkJCXBv
dyA9IHBvdyAqIDEwOworCQlhID0gYSArIGMgKiBwb3c7CisJfQorCWZvciAoOyBpIDwgNDA7ICsr
aSkgeworCQljID0gJzAnIC0gNDg7CisJCWZvciAocG93ID0gMSwgaiA9IGk7IGogPCBsZW4gLSAx
OyArK2opCisJCQlwb3cgPSBwb3cgKiAxMDsKKwkJYSA9IGEgKyBjICogcG93OworCX0KKworCWZv
ciAoOyBpIDwgMjU2OyArK2kpIHsKKwkJYyA9IGk7CisJCWZvciAocG93ID0gMSwgaiA9IGk7IGog
PCBsZW4gLSAxOyArK2opCisJCQlwb3cgPSBwb3cgKiAxMDsKKwkJYSA9IGEgKyBjICogcG93Owor
CX0KKworCWEgPSBhIDw8IDc7CisJcmV0dXJuIGE7Cit9CisKKy8qIHI1IGhhc2ggKi8KK3N0YXRp
YyBfX3U2NCBoYXNoX3I1KGNvbnN0IHVuc2lnbmVkIGNoYXIgKm5hbWUgLyogbmFtZSB0byBoYXNo
ICovICwKKwkJICAgICBpbnQgbGVuIFVOVVNFRF9BUkcvKiBAbmFtZSdzIGxlbmd0aCAqLykKK3sK
KwlfX3U2NCBhID0gMDsKKworCWFzc2VydCgibmlraXRhLTY3NCIsIG5hbWUgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtNjc1IiwgbGVuID49IDApOworCisJd2hpbGUgKCpuYW1lKSB7CisJCWEg
Kz0gKm5hbWUgPDwgNDsKKwkJYSArPSAqbmFtZSA+PiA0OworCQlhICo9IDExOworCQluYW1lKys7
CisJfQorCXJldHVybiBhOworfQorCisvKiBLZXllZCAzMi1iaXQgaGFzaCBmdW5jdGlvbiB1c2lu
ZyBURUEgaW4gYSBEYXZpcy1NZXllciBmdW5jdGlvbgorICAgICBIMCA9IEtleQorICAgICBIaSA9
IEUgTWkoSGktMSkgKyBIaS0xCisKKyAgIChzZWUgQXBwbGllZCBDcnlwdG9ncmFwaHksIDJuZCBl
ZGl0aW9uLCBwNDQ4KS4KKworICAgSmVyZW15IEZpdHpoYXJkaW5nZSA8amVyZW15QHppcC5jb20u
YXU+IDE5OTgKKworICAgSmVyZW15IGhhcyBhZ3JlZWQgdG8gdGhlIGNvbnRlbnRzIG9mIHJlaXNl
cmZzL1JFQURNRS4gLUhhbnMKKworICAgVGhpcyBjb2RlIHdhcyBibGluZGx5IHVwZ3JhZGVkIHRv
IF9fdTY0IGJ5IHMvX191MzIvX191NjQvZy4KKyovCitzdGF0aWMgX191NjQgaGFzaF90ZWEoY29u
c3QgdW5zaWduZWQgY2hhciAqbmFtZSAvKiBuYW1lIHRvIGhhc2ggKi8gLAorCQkgICAgICBpbnQg
bGVuLyogQG5hbWUncyBsZW5ndGggKi8pCit7CisJX191NjQga1tdID0geyAweDk0NjRhNDg1dSwg
MHg1NDJlMWE5NHUsIDB4M2U4NDZiZmZ1LCAweGI3NWJjZmMzdSB9OworCisJX191NjQgaDAgPSBr
WzBdLCBoMSA9IGtbMV07CisJX191NjQgYSwgYiwgYywgZDsKKwlfX3U2NCBwYWQ7CisJaW50IGk7
CisKKwlhc3NlcnQoIm5pa2l0YS02NzYiLCBuYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTY3NyIsIGxlbiA+PSAwKTsKKworI2RlZmluZSBERUxUQSAweDlFMzc3OUI5dQorI2RlZmluZSBG
VUxMUk9VTkRTIDEwCQkvKiAzMiBpcyBvdmVya2lsbCwgMTYgaXMgc3Ryb25nIGNyeXB0byAqLwor
I2RlZmluZSBQQVJUUk9VTkRTIDYJCS8qIDYgZ2V0cyBjb21wbGV0ZSBtaXhpbmcgKi8KKworLyog
YSwgYiwgYywgZCAtIGRhdGE7IGgwLCBoMSAtIGFjY3VtdWxhdGVkIGhhc2ggKi8KKyNkZWZpbmUg
VEVBQ09SRShyb3VuZHMpCQkJCQkJCVwKKwlkbyB7CQkJCQkJCQlcCisJCV9fdTY0IHN1bSA9IDA7
CQkJCQkJXAorCQlpbnQgbiA9IHJvdW5kczsJCQkJCQlcCisJCV9fdTY0IGIwLCBiMTsJCQkJCQlc
CisJCQkJCQkJCQlcCisJCWIwID0gaDA7CQkJCQkJXAorCQliMSA9IGgxOwkJCQkJCVwKKwkJCQkJ
CQkJCVwKKwkJZG8gewkJCQkJCQlcCisJCQlzdW0gKz0gREVMVEE7CQkJCQlcCisJCQliMCArPSAo
KGIxIDw8IDQpK2EpIF4gKGIxK3N1bSkgXiAoKGIxID4+IDUpK2IpOwlcCisJCQliMSArPSAoKGIw
IDw8IDQpK2MpIF4gKGIwK3N1bSkgXiAoKGIwID4+IDUpK2QpOwlcCisJCX0gd2hpbGUgKC0tbik7
CQkJCQkJXAorCQkJCQkJCQkJXAorCQloMCArPSBiMDsJCQkJCQlcCisJCWgxICs9IGIxOwkJCQkJ
CVwKKwl9IHdoaWxlICgwKQorCisJcGFkID0gKF9fdTY0KSBsZW4gfCAoKF9fdTY0KSBsZW4gPDwg
OCk7CisJcGFkIHw9IHBhZCA8PCAxNjsKKworCXdoaWxlIChsZW4gPj0gMTYpIHsKKwkJYSA9IChf
X3U2NCkgbmFtZVswXSB8IChfX3U2NCkgbmFtZVsxXSA8PCA4IHwgKF9fdTY0KSBuYW1lWzJdIDw8
CisJCSAgICAxNiB8IChfX3U2NCkgbmFtZVszXSA8PCAyNDsKKwkJYiA9IChfX3U2NCkgbmFtZVs0
XSB8IChfX3U2NCkgbmFtZVs1XSA8PCA4IHwgKF9fdTY0KSBuYW1lWzZdIDw8CisJCSAgICAxNiB8
IChfX3U2NCkgbmFtZVs3XSA8PCAyNDsKKwkJYyA9IChfX3U2NCkgbmFtZVs4XSB8IChfX3U2NCkg
bmFtZVs5XSA8PCA4IHwgKF9fdTY0KSBuYW1lWzEwXSA8PAorCQkgICAgMTYgfCAoX191NjQpIG5h
bWVbMTFdIDw8IDI0OworCQlkID0gKF9fdTY0KSBuYW1lWzEyXSB8IChfX3U2NCkgbmFtZVsxM10g
PDwgOCB8IChfX3U2NCkgbmFtZVsxNF0KKwkJICAgIDw8IDE2IHwgKF9fdTY0KSBuYW1lWzE1XSA8
PCAyNDsKKworCQlURUFDT1JFKFBBUlRST1VORFMpOworCisJCWxlbiAtPSAxNjsKKwkJbmFtZSAr
PSAxNjsKKwl9CisKKwlpZiAobGVuID49IDEyKSB7CisJCS8qIGFzc2VydChsZW4gPCAxNik7ICov
CisJCWlmIChsZW4gPj0gMTYpCisJCQkqKGludCAqKTAgPSAwOworCisJCWEgPSAoX191NjQpIG5h
bWVbMF0gfCAoX191NjQpIG5hbWVbMV0gPDwgOCB8IChfX3U2NCkgbmFtZVsyXSA8PAorCQkgICAg
MTYgfCAoX191NjQpIG5hbWVbM10gPDwgMjQ7CisJCWIgPSAoX191NjQpIG5hbWVbNF0gfCAoX191
NjQpIG5hbWVbNV0gPDwgOCB8IChfX3U2NCkgbmFtZVs2XSA8PAorCQkgICAgMTYgfCAoX191NjQp
IG5hbWVbN10gPDwgMjQ7CisJCWMgPSAoX191NjQpIG5hbWVbOF0gfCAoX191NjQpIG5hbWVbOV0g
PDwgOCB8IChfX3U2NCkgbmFtZVsxMF0gPDwKKwkJICAgIDE2IHwgKF9fdTY0KSBuYW1lWzExXSA8
PCAyNDsKKworCQlkID0gcGFkOworCQlmb3IgKGkgPSAxMjsgaSA8IGxlbjsgaSsrKSB7CisJCQlk
IDw8PSA4OworCQkJZCB8PSBuYW1lW2ldOworCQl9CisJfSBlbHNlIGlmIChsZW4gPj0gOCkgewor
CQkvKiBhc3NlcnQobGVuIDwgMTIpOyAqLworCQlpZiAobGVuID49IDEyKQorCQkJKihpbnQgKikw
ID0gMDsKKwkJYSA9IChfX3U2NCkgbmFtZVswXSB8IChfX3U2NCkgbmFtZVsxXSA8PCA4IHwgKF9f
dTY0KSBuYW1lWzJdIDw8CisJCSAgICAxNiB8IChfX3U2NCkgbmFtZVszXSA8PCAyNDsKKwkJYiA9
IChfX3U2NCkgbmFtZVs0XSB8IChfX3U2NCkgbmFtZVs1XSA8PCA4IHwgKF9fdTY0KSBuYW1lWzZd
IDw8CisJCSAgICAxNiB8IChfX3U2NCkgbmFtZVs3XSA8PCAyNDsKKworCQljID0gZCA9IHBhZDsK
KwkJZm9yIChpID0gODsgaSA8IGxlbjsgaSsrKSB7CisJCQljIDw8PSA4OworCQkJYyB8PSBuYW1l
W2ldOworCQl9CisJfSBlbHNlIGlmIChsZW4gPj0gNCkgeworCQkvKiBhc3NlcnQobGVuIDwgOCk7
ICovCisJCWlmIChsZW4gPj0gOCkKKwkJCSooaW50ICopMCA9IDA7CisJCWEgPSAoX191NjQpIG5h
bWVbMF0gfCAoX191NjQpIG5hbWVbMV0gPDwgOCB8IChfX3U2NCkgbmFtZVsyXSA8PAorCQkgICAg
MTYgfCAoX191NjQpIG5hbWVbM10gPDwgMjQ7CisKKwkJYiA9IGMgPSBkID0gcGFkOworCQlmb3Ig
KGkgPSA0OyBpIDwgbGVuOyBpKyspIHsKKwkJCWIgPDw9IDg7CisJCQliIHw9IG5hbWVbaV07CisJ
CX0KKwl9IGVsc2UgeworCQkvKiBhc3NlcnQobGVuIDwgNCk7ICovCisJCWlmIChsZW4gPj0gNCkK
KwkJCSooaW50ICopMCA9IDA7CisJCWEgPSBiID0gYyA9IGQgPSBwYWQ7CisJCWZvciAoaSA9IDA7
IGkgPCBsZW47IGkrKykgeworCQkJYSA8PD0gODsKKwkJCWEgfD0gbmFtZVtpXTsKKwkJfQorCX0K
KworCVRFQUNPUkUoRlVMTFJPVU5EUyk7CisKKy8qCXJldHVybiAwOyovCisJcmV0dXJuIGgwIF4g
aDE7CisKK30KKworLyogY2xhc3NpY2FsIDY0IGJpdCBGb3dsZXIvTm9sbC9Wby0xIChGTlYtMSkg
aGFzaC4KKworICAgU2VlIGh0dHA6Ly93d3cuaXN0aGUuY29tL2Nob25nby90ZWNoL2NvbXAvZm52
LyBmb3IgZGV0YWlscy4KKworICAgRXhjZXJwdHM6CisKKyAgICAgRk5WIGhhc2hlcyBhcmUgZGVz
aWduZWQgdG8gYmUgZmFzdCB3aGlsZSBtYWludGFpbmluZyBhIGxvdyBjb2xsaXNpb24KKyAgICAg
cmF0ZS4KKworICAgICBbVGhpcyB2ZXJzaW9uIGFsc28gc2VlbXMgdG8gcHJlc2VydmUgbGV4aWNv
Z3JhcGhpY2FsIG9yZGVyIGxvY2FsbHkuXQorCisgICAgIEZOViBoYXNoIGFsZ29yaXRobXMgYW5k
IHNvdXJjZSBjb2RlIGhhdmUgYmVlbiByZWxlYXNlZCBpbnRvIHRoZSBwdWJsaWMKKyAgICAgZG9t
YWluLgorCisqLworc3RhdGljIF9fdTY0IGhhc2hfZm52MShjb25zdCB1bnNpZ25lZCBjaGFyICpu
YW1lIC8qIG5hbWUgdG8gaGFzaCAqLyAsCisJCSAgICAgICBpbnQgbGVuIFVOVVNFRF9BUkcvKiBA
bmFtZSdzIGxlbmd0aCAqLykKK3sKKwl1bnNpZ25lZCBsb25nIGxvbmcgYSA9IDB4Y2JmMjljZTQ4
NDIyMjMyNXVsbDsKKwljb25zdCB1bnNpZ25lZCBsb25nIGxvbmcgZm52XzY0X3ByaW1lID0gMHgx
MDAwMDAwMDFiM3VsbDsKKworCWFzc2VydCgibmlraXRhLTY3OCIsIG5hbWUgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtNjc5IiwgbGVuID49IDApOworCisJLyogRk5WLTEgaGFzaCBlYWNoIG9j
dGV0IGluIHRoZSBidWZmZXIgKi8KKwlmb3IgKDsgKm5hbWU7ICsrbmFtZSkgeworCQkvKiBtdWx0
aXBseSBieSB0aGUgMzIgYml0IEZOViBtYWdpYyBwcmltZSBtb2QgMl42NCAqLworCQlhICo9IGZu
dl82NF9wcmltZTsKKwkJLyogeG9yIHRoZSBib3R0b20gd2l0aCB0aGUgY3VycmVudCBvY3RldCAq
LworCQlhIF49ICh1bnNpZ25lZCBsb25nIGxvbmcpKCpuYW1lKTsKKwl9CisJLyogcmV0dXJuIG91
ciBuZXcgaGFzaCB2YWx1ZSAqLworCXJldHVybiBhOworfQorCisvKiBkZWdlbmVyYXRlIGhhc2gg
ZnVuY3Rpb24gdXNlZCB0byBzaW1wbGlmeSB0ZXN0aW5nIG9mIG5vbi11bmlxdWUga2V5CisgICBo
YW5kbGluZyAqLworc3RhdGljIF9fdTY0IGhhc2hfZGVnKGNvbnN0IHVuc2lnbmVkIGNoYXIgKm5h
bWUgVU5VU0VEX0FSRyAvKiBuYW1lIHRvIGhhc2ggKi8gLAorCQkgICAgICBpbnQgbGVuIFVOVVNF
RF9BUkcvKiBAbmFtZSdzIGxlbmd0aCAqLykKK3sKKwlyZXR1cm4gMHhjMGMwYzBjMDEwMTAxMDEw
dWxsOworfQorCitzdGF0aWMgaW50IGNoYW5nZV9oYXNoKHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJ
CSAgICAgICByZWlzZXI0X3BsdWdpbiAqIHBsdWdpbiwKKwkJICAgICAgIHBzZXRfbWVtYmVyIG1l
bWIpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTM1MDMiLCBpbm9kZSAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNTA0IiwgcGx1Z2luICE9IE5VTEwpOworCisJYXNzZXJ0
KCJuaWtpdGEtMzUwNSIsIGlzX3JlaXNlcjRfaW5vZGUoaW5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0
YS0zNTA3IiwgcGx1Z2luLT5oLnR5cGVfaWQgPT0gUkVJU0VSNF9IQVNIX1BMVUdJTl9UWVBFKTsK
KworCWlmICghcGx1Z2luX29mX2dyb3VwKGlub2RlX2ZpbGVfcGx1Z2luKGlub2RlKSwgUkVJU0VS
NF9ESVJFQ1RPUllfRklMRSkpCisJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7CisKKwlyZXN1bHQg
PSAwOworCWlmIChpbm9kZV9oYXNoX3BsdWdpbihpbm9kZSkgPT0gTlVMTCB8fAorCSAgICBpbm9k
ZV9oYXNoX3BsdWdpbihpbm9kZSktPmguaWQgIT0gcGx1Z2luLT5oLmlkKSB7CisJCWlmIChpc19k
aXJfZW1wdHkoaW5vZGUpID09IDApCisJCQlyZXN1bHQgPSBhc2V0X3NldF91bnNhZmUoJnJlaXNl
cjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQsCisJCQkJCQkgUFNFVF9IQVNILCBwbHVnaW4pOwor
CQllbHNlCisJCQlyZXN1bHQgPSBSRVRFUlIoLUVOT1RFTVBUWSk7CisKKwl9CisJcmV0dXJuIHJl
c3VsdDsKK30KKworc3RhdGljIHJlaXNlcjRfcGx1Z2luX29wcyBoYXNoX3BsdWdpbl9vcHMgPSB7
CisJLmluaXQgPSBOVUxMLAorCS5sb2FkID0gTlVMTCwKKwkuc2F2ZV9sZW4gPSBOVUxMLAorCS5z
YXZlID0gTlVMTCwKKwkuY2hhbmdlID0gY2hhbmdlX2hhc2gKK307CisKKy8qIGhhc2ggcGx1Z2lu
cyAqLworaGFzaF9wbHVnaW4gaGFzaF9wbHVnaW5zW0xBU1RfSEFTSF9JRF0gPSB7CisJW1JVUEFT
T1ZfSEFTSF9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0hBU0hfUExV
R0lOX1RZUEUsCisJCQkuaWQgPSBSVVBBU09WX0hBU0hfSUQsCisJCQkucG9wcyA9ICZoYXNoX3Bs
dWdpbl9vcHMsCisJCQkubGFiZWwgPSAicnVwYXNvdiIsCisJCQkuZGVzYyA9ICJPcmlnaW5hbCBZ
dXJhJ3MgaGFzaCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaGFzaCA9
IGhhc2hfcnVwYXNvdgorCX0sCisJW1I1X0hBU0hfSURdID0geworCQkuaCA9IHsKKwkJCS50eXBl
X2lkID0gUkVJU0VSNF9IQVNIX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gUjVfSEFTSF9JRCwKKwkJ
CS5wb3BzID0gJmhhc2hfcGx1Z2luX29wcywKKwkJCS5sYWJlbCA9ICJyNSIsCisJCQkuZGVzYyA9
ICJyNSBoYXNoIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5oYXNoID0g
aGFzaF9yNQorCX0sCisJW1RFQV9IQVNIX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9
IFJFSVNFUjRfSEFTSF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IFRFQV9IQVNIX0lELAorCQkJLnBv
cHMgPSAmaGFzaF9wbHVnaW5fb3BzLAorCQkJLmxhYmVsID0gInRlYSIsCisJCQkuZGVzYyA9ICJ0
ZWEgaGFzaCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaGFzaCA9IGhh
c2hfdGVhCisJfSwKKwlbRk5WMV9IQVNIX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9
IFJFSVNFUjRfSEFTSF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZOVjFfSEFTSF9JRCwKKwkJCS5w
b3BzID0gJmhhc2hfcGx1Z2luX29wcywKKwkJCS5sYWJlbCA9ICJmbnYxIiwKKwkJCS5kZXNjID0g
ImZudjEgaGFzaCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaGFzaCA9
IGhhc2hfZm52MQorCX0sCisJW0RFR0VORVJBVEVfSEFTSF9JRF0gPSB7CisJCS5oID0geworCQkJ
LnR5cGVfaWQgPSBSRUlTRVI0X0hBU0hfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBERUdFTkVSQVRF
X0hBU0hfSUQsCisJCQkucG9wcyA9ICZoYXNoX3BsdWdpbl9vcHMsCisJCQkubGFiZWwgPSAiZGVn
ZW5lcmF0ZSBoYXNoIiwKKwkJCS5kZXNjID0gIkRlZ2VuZXJhdGUgaGFzaDogb25seSBmb3IgdGVz
dGluZyIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaGFzaCA9IGhhc2hf
ZGVnCisJfQorfTsKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoK
KyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMt
YmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAg
IEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2Zz
L3JlaXNlcjQvcGx1Z2luL2lub2RlX29wcy5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdp
bi9pbm9kZV9vcHMuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaW5v
ZGVfb3BzLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pbm9kZV9vcHMuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ2
NTIyMjI3MSArMDEwMApAQCAtMCwwICsxLDg5MSBAQAorLyoKKyAqIENvcHlyaWdodCAyMDA1IGJ5
IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUKKyAqLwor
CisvKgorICogdGhpcyBmaWxlIGNvbnRhaW5zIHR5cGljYWwgaW1wbGVtZW50YXRpb25zIGZvciBt
b3N0IG9mIG1ldGhvZHMgb2Ygc3RydWN0CisgKiBpbm9kZV9vcGVyYXRpb25zCisgKi8KKworI2lu
Y2x1ZGUgIi4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4vc2FmZV9saW5rLmgiCisKKyNpbmNsdWRl
IDxsaW51eC9uYW1laS5oPgorCitzdGF0aWMgaW50IGNyZWF0ZV92ZnNfb2JqZWN0KHN0cnVjdCBp
bm9kZSAqcGFyZW50LCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCisJCSAgICAgIHJlaXNlcjRfb2Jq
ZWN0X2NyZWF0ZV9kYXRhICpkYXRhKTsKKworLyoqCisgKiByZWlzZXI0X2NyZWF0ZV9jb21tb24g
LSBjcmVhdGUgb2YgaW5vZGUgb3BlcmF0aW9ucworICogQHBhcmVudDogaW5vZGUgb2YgcGFyZW50
IGRpcmVjdG9yeQorICogQGRlbnRyeTogZGVudHJ5IG9mIG5ldyBvYmplY3QgdG8gY3JlYXRlCisg
KiBAbW9kZTogdGhlIHBlcm1pc3Npb25zIHRvIHVzZQorICogQGV4Y2x1c2l2ZToKKyAqCisgKiBU
aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiB2ZnMncyBjcmVhdGUgbWV0aG9kIG9mIHN0
cnVjdAorICogaW5vZGVfb3BlcmF0aW9ucy4KKyAqIENyZWF0ZXMgcmVndWxhciBmaWxlIHVzaW5n
IGZpbGUgcGx1Z2luIGZyb20gcGFyZW50IGRpcmVjdG9yeSBwbHVnaW4gc2V0LgorICovCitpbnQg
cmVpc2VyNF9jcmVhdGVfY29tbW9uKHN0cnVjdCBpbm9kZSAqcGFyZW50LCBzdHJ1Y3QgZGVudHJ5
ICpkZW50cnksCisJCQkgIHVtb2RlX3QgbW9kZSwgYm9vbCBleGNsdXNpdmUpCit7CisJcmVpc2Vy
NF9vYmplY3RfY3JlYXRlX2RhdGEgZGF0YTsKKwlmaWxlX3BsdWdpbiAqZnBsdWc7CisKKwltZW1z
ZXQoJmRhdGEsIDAsIHNpemVvZiBkYXRhKTsKKwlkYXRhLm1vZGUgPSBTX0lGUkVHIHwgbW9kZTsK
KwlmcGx1ZyA9IGNoaWxkX2NyZWF0ZV9wbHVnaW4ocGFyZW50KSA/IDogaW5vZGVfY3JlYXRlX3Bs
dWdpbihwYXJlbnQpOworCWlmICghcGx1Z2luX29mX2dyb3VwKGZwbHVnLCBSRUlTRVI0X1JFR1VM
QVJfRklMRSkpIHsKKwkJd2FybmluZygidnBmLTE5MDAiLCAiJyVzJyBpcyBub3QgYSByZWd1bGFy
IGZpbGUgcGx1Z2luLiIsCisJCQlmcGx1Zy0+aC5sYWJlbCk7CisJCXJldHVybiBSRVRFUlIoLUVJ
Tyk7CisJfQorCWRhdGEuaWQgPSBmcGx1Zy0+aC5pZDsKKwlyZXR1cm4gY3JlYXRlX3Zmc19vYmpl
Y3QocGFyZW50LCBkZW50cnksICZkYXRhKTsKK30KKworaW50IHJlaXNlcjRfbG9va3VwX25hbWUo
c3RydWN0IGlub2RlICpkaXIsIHN0cnVjdCBkZW50cnkgKiwgcmVpc2VyNF9rZXkgKik7Cit2b2lk
IGNoZWNrX2xpZ2h0X3dlaWdodChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgaW5vZGUgKnBh
cmVudCk7CisKKy8qKgorICogcmVpc2VyNF9sb29rdXBfY29tbW9uIC0gbG9va3VwIG9mIGlub2Rl
IG9wZXJhdGlvbnMKKyAqIEBwYXJlbnQ6IGlub2RlIG9mIGRpcmVjdG9yeSB0byBsb29rdXAgaW50
bworICogQGRlbnRyeTogbmFtZSB0byBsb29rIGZvcgorICogQGZsYWdzOgorICoKKyAqIFRoaXMg
aXMgY29tbW9uIGltcGxlbWVudGF0aW9uIG9mIHZmcydzIGxvb2t1cCBtZXRob2Qgb2Ygc3RydWN0
CisgKiBpbm9kZV9vcGVyYXRpb25zLgorICovCitzdHJ1Y3QgZGVudHJ5ICpyZWlzZXI0X2xvb2t1
cF9jb21tb24oc3RydWN0IGlub2RlICpwYXJlbnQsCisJCQkJICAgICBzdHJ1Y3QgZGVudHJ5ICpk
ZW50cnksCisJCQkJICAgICB1bnNpZ25lZCBpbnQgZmxhZ3MpCit7CisJcmVpc2VyNF9jb250ZXh0
ICpjdHg7CisJaW50IHJlc3VsdDsKKwlzdHJ1Y3QgZGVudHJ5ICpuZXc7CisJc3RydWN0IGlub2Rl
ICppbm9kZTsKKwlyZWlzZXI0X2Rpcl9lbnRyeV9kZXNjIGVudHJ5OworCisJY3R4ID0gcmVpc2Vy
NF9pbml0X2NvbnRleHQocGFyZW50LT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVy
biAoc3RydWN0IGRlbnRyeSAqKWN0eDsKKworCS8qIHNldCB1cCBvcGVyYXRpb25zIG9uIGRlbnRy
eS4gKi8KKwlkZW50cnktPmRfb3AgPSAmZ2V0X3N1cGVyX3ByaXZhdGUocGFyZW50LT5pX3NiKS0+
b3BzLmRlbnRyeTsKKworCXJlc3VsdCA9IHJlaXNlcjRfbG9va3VwX25hbWUocGFyZW50LCBkZW50
cnksICZlbnRyeS5rZXkpOworCWlmIChyZXN1bHQpIHsKKwkJY29udGV4dF9zZXRfY29tbWl0X2Fz
eW5jKGN0eCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJCWlmIChyZXN1bHQgPT0g
LUVOT0VOVCkgeworCQkJLyogb2JqZWN0IG5vdCBmb3VuZCAqLworCQkJaWYgKCFJU19ERUFERElS
KHBhcmVudCkpCisJCQkJZF9hZGQoZGVudHJ5LCBOVUxMKTsKKwkJCXJldHVybiBOVUxMOworCQl9
CisJCXJldHVybiBFUlJfUFRSKHJlc3VsdCk7CisJfQorCisJaW5vZGUgPSByZWlzZXI0X2lnZXQo
cGFyZW50LT5pX3NiLCAmZW50cnkua2V5LCAwKTsKKwlpZiAoSVNfRVJSKGlub2RlKSkgeworCQlj
b250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4
KTsKKwkJcmV0dXJuIEVSUl9QVFIoUFRSX0VSUihpbm9kZSkpOworCX0KKworCS8qIHN1Y2Nlc3Mg
Ki8KKwljaGVja19saWdodF93ZWlnaHQoaW5vZGUsIHBhcmVudCk7CisJbmV3ID0gZF9zcGxpY2Vf
YWxpYXMoaW5vZGUsIGRlbnRyeSk7CisJcmVpc2VyNF9pZ2V0X2NvbXBsZXRlKGlub2RlKTsKKwor
CS8qIHByZXZlbnQgYmFsYW5jZV9kaXJ0eV9wYWdlcygpIGZyb20gYmVpbmcgY2FsbGVkOiB3ZSBk
b24ndCB3YW50IHRvCisJICogZG8gdGhpcyB1bmRlciBkaXJlY3RvcnkgaV9tdXRleC4gKi8KKwlj
b250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgp
OworCXJldHVybiBuZXc7Cit9CisKK3N0YXRpYyByZWlzZXI0X2Jsb2NrX25yIGNvbW1vbl9lc3Rp
bWF0ZV9saW5rKHN0cnVjdCBpbm9kZSAqcGFyZW50LAorCQkJCQkgICAgIHN0cnVjdCBpbm9kZSAq
b2JqZWN0KTsKK2ludCByZWlzZXI0X3VwZGF0ZV9kaXIoc3RydWN0IGlub2RlICopOworCitzdGF0
aWMgaW5saW5lIHZvaWQgcmVpc2VyNF9jaGVja19pbW11dGFibGUoc3RydWN0IGlub2RlICppbm9k
ZSkKK3sKKyAgICAgICAgZG8geworCSAgICAgICAgaWYgKCFyZWlzZXI0X2lub2RlX2dldF9mbGFn
KGlub2RlLCBSRUlTRVI0X0lNTVVUQUJMRSkpCisJCSAgICAgICAgYnJlYWs7CisJCXlpZWxkKCk7
CisJfSB3aGlsZSAoMSk7Cit9CisKKy8qKgorICogcmVpc2VyNF9saW5rX2NvbW1vbiAtIGxpbmsg
b2YgaW5vZGUgb3BlcmF0aW9ucworICogQGV4aXN0aW5nOiBkZW50cnkgb2Ygb2JqZWN0IHdoaWNo
IGlzIHRvIGdldCBuZXcgbmFtZQorICogQHBhcmVudDogZGlyZWN0b3J5IHdoZXJlIG5ldyBuYW1l
IGlzIHRvIGJlIGNyZWF0ZWQKKyAqIEBuZXduYW1lOiBuZXcgbmFtZQorICoKKyAqIFRoaXMgaXMg
Y29tbW9uIGltcGxlbWVudGF0aW9uIG9mIHZmcydzIGxpbmsgbWV0aG9kIG9mIHN0cnVjdAorICog
aW5vZGVfb3BlcmF0aW9ucy4KKyAqLworaW50IHJlaXNlcjRfbGlua19jb21tb24oc3RydWN0IGRl
bnRyeSAqZXhpc3RpbmcsIHN0cnVjdCBpbm9kZSAqcGFyZW50LAorCQkJc3RydWN0IGRlbnRyeSAq
bmV3bmFtZSkKK3sKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlpbnQgcmVzdWx0OworCXN0cnVj
dCBpbm9kZSAqb2JqZWN0OworCWRpcl9wbHVnaW4gKnBhcmVudF9kcGx1ZzsKKwlyZWlzZXI0X2Rp
cl9lbnRyeV9kZXNjIGVudHJ5OworCXJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhIGRhdGE7CisJ
cmVpc2VyNF9ibG9ja19uciByZXNlcnZlOworCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQo
cGFyZW50LT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVybiBQVFJfRVJSKGN0eCk7
CisKKwlhc3NlcnQoIm5pa2l0YS0xNDMxIiwgZXhpc3RpbmcgIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtMTQzMiIsIHBhcmVudCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xNDMzIiwgbmV3
bmFtZSAhPSBOVUxMKTsKKworCW9iamVjdCA9IGV4aXN0aW5nLT5kX2lub2RlOworCWFzc2VydCgi
bmlraXRhLTE0MzQiLCBvYmplY3QgIT0gTlVMTCk7CisKKwkvKiBjaGVjayBmb3IgcmFjZSB3aXRo
IGNyZWF0ZV9vYmplY3QoKSAqLworCXJlaXNlcjRfY2hlY2tfaW1tdXRhYmxlKG9iamVjdCk7CisK
KwlwYXJlbnRfZHBsdWcgPSBpbm9kZV9kaXJfcGx1Z2luKHBhcmVudCk7CisKKwltZW1zZXQoJmVu
dHJ5LCAwLCBzaXplb2YgZW50cnkpOworCWVudHJ5Lm9iaiA9IG9iamVjdDsKKworCWRhdGEubW9k
ZSA9IG9iamVjdC0+aV9tb2RlOworCWRhdGEuaWQgPSBpbm9kZV9maWxlX3BsdWdpbihvYmplY3Qp
LT5oLmlkOworCisJcmVzZXJ2ZSA9IGNvbW1vbl9lc3RpbWF0ZV9saW5rKHBhcmVudCwgZXhpc3Rp
bmctPmRfaW5vZGUpOworCWlmICgoX19zNjQpIHJlc2VydmUgPCAwKSB7CisJCWNvbnRleHRfc2V0
X2NvbW1pdF9hc3luYyhjdHgpOworCQlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1
cm4gcmVzZXJ2ZTsKKwl9CisKKwlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKHJlc2VydmUsIEJBX0NB
Tl9DT01NSVQpKSB7CisJCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCQlyZWlzZXI0
X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCX0KKworCS8q
CisJICogU3VidGxlIHJhY2UgaGFuZGxpbmc6IHN5c19saW5rKCkgZG9lc24ndCB0YWtlIGlfbXV0
ZXggb24gQHBhcmVudC4gSXQKKwkgKiBtZWFucyB0aGF0IGxpbmsoMikgY2FuIHJhY2UgYWdhaW5z
dCB1bmxpbmsoMikgb3IgcmVuYW1lKDIpLCBhbmQKKwkgKiBpbm9kZSBpcyBkZWFkICgtPmlfbmxp
bmsgPT0gMCkgd2hlbiByZWlzZXI0X2xpbmsoKSBpcyBlbnRlcmVkLgorCSAqCisJICogRm9yIHN1
Y2ggaW5vZGUgd2UgaGF2ZSB0byB1bmRvIHNwZWNpYWwgcHJvY2Vzc2luZyBkb25lIGluCisJICog
cmVpc2VyNF91bmxpbmsoKSB2aXouIGNyZWF0aW9uIG9mIHNhZmUtbGluay4KKwkgKi8KKwlpZiAo
dW5saWtlbHkob2JqZWN0LT5pX25saW5rID09IDApKSB7CisJCXJlc3VsdCA9IHNhZmVfbGlua19k
ZWwocmVpc2VyNF90cmVlX2J5X2lub2RlKG9iamVjdCksCisJCQkJICAgICAgIGdldF9pbm9kZV9v
aWQob2JqZWN0KSwgU0FGRV9VTkxJTkspOworCQlpZiAocmVzdWx0ICE9IDApIHsKKwkJCWNvbnRl
eHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCQkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsK
KwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwl9CisKKwkvKiBpbmNyZW1lbnQgbmxpbmsgb2YgQGV4
aXN0aW5nIGFuZCB1cGRhdGUgaXRzIHN0YXQgZGF0YSAqLworCXJlc3VsdCA9IHJlaXNlcjRfYWRk
X25saW5rKG9iamVjdCwgcGFyZW50LCAxKTsKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJLyogYWRk
IGVudHJ5IHRvIHRoZSBwYXJlbnQgKi8KKwkJcmVzdWx0ID0KKwkJICAgIHBhcmVudF9kcGx1Zy0+
YWRkX2VudHJ5KHBhcmVudCwgbmV3bmFtZSwgJmRhdGEsICZlbnRyeSk7CisJCWlmIChyZXN1bHQg
IT0gMCkgeworCQkJLyogZmFpbGVkIHRvIGFkZCBlbnRyeSB0byB0aGUgcGFyZW50LCBkZWNyZW1l
bnQgbmxpbmsKKwkJCSAgIG9mIEBleGlzdGluZyAqLworCQkJcmVpc2VyNF9kZWxfbmxpbmsob2Jq
ZWN0LCBwYXJlbnQsIDEpOworCQkJLyoKKwkJCSAqIG5vdywgaWYgdGhhdCBmYWlsZWQsIHdlIGhh
dmUgYSBmaWxlIHdpdGggdG9vIGJpZworCQkJICogbmxpbmstLS1zcGFjZSBsZWFrLCBtdWNoIGJl
dHRlciB0aGFuIGRpcmVjdG9yeQorCQkJICogZW50cnkgcG9pbnRpbmcgdG8gbm93aGVyZQorCQkJ
ICovCisJCX0KKwl9CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWF0b21pY19pbmMoJm9iamVjdC0+
aV9jb3VudCk7CisJCS8qCisJCSAqIFVwb24gc3VjY2Vzc2Z1bCBjb21wbGV0aW9uLCBsaW5rKCkg
c2hhbGwgbWFyayBmb3IgdXBkYXRlCisJCSAqIHRoZSBzdF9jdGltZSBmaWVsZCBvZiB0aGUgZmls
ZS4gQWxzbywgdGhlIHN0X2N0aW1lIGFuZAorCQkgKiBzdF9tdGltZSBmaWVsZHMgb2YgdGhlIGRp
cmVjdG9yeSB0aGF0IGNvbnRhaW5zIHRoZSBuZXcKKwkJICogZW50cnkgc2hhbGwgYmUgbWFya2Vk
IGZvciB1cGRhdGUuIC0tU1VTCisJCSAqLworCQlyZXN1bHQgPSByZWlzZXI0X3VwZGF0ZV9kaXIo
cGFyZW50KTsKKwl9CisJaWYgKHJlc3VsdCA9PSAwKQorCQlkX2luc3RhbnRpYXRlKG5ld25hbWUs
IGV4aXN0aW5nLT5kX2lub2RlKTsKKworCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOwor
CXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworc3RhdGlj
IGludCB1bmxpbmtfY2hlY2tfYW5kX2dyYWIoc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBk
ZW50cnkgKnZpY3RpbSk7CisKKy8qKgorICogcmVpc2VyNF91bmxpbmtfY29tbW9uIC0gdW5saW5r
IG9mIGlub2RlIG9wZXJhdGlvbnMKKyAqIEBwYXJlbnQ6IGlub2RlIG9mIGRpcmVjdG9yeSB0byBy
ZW1vdmUgbmFtZSBmcm9tCisgKiBAdmljdGltOiBuYW1lIHRvIGJlIHJlbW92ZWQKKyAqCisgKiBU
aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiB2ZnMncyB1bmxpbmsgbWV0aG9kIG9mIHN0
cnVjdAorICogaW5vZGVfb3BlcmF0aW9ucy4KKyAqLworaW50IHJlaXNlcjRfdW5saW5rX2NvbW1v
bihzdHJ1Y3QgaW5vZGUgKnBhcmVudCwgc3RydWN0IGRlbnRyeSAqdmljdGltKQoreworCXJlaXNl
cjRfY29udGV4dCAqY3R4OworCWludCByZXN1bHQ7CisJc3RydWN0IGlub2RlICpvYmplY3Q7CisJ
ZmlsZV9wbHVnaW4gKmZwbHVnOworCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQocGFyZW50
LT5pX3NiKTsKKwlpZiAoSVNfRVJSKGN0eCkpCisJCXJldHVybiBQVFJfRVJSKGN0eCk7CisKKwlv
YmplY3QgPSB2aWN0aW0tPmRfaW5vZGU7CisJZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihvYmpl
Y3QpOworCWFzc2VydCgibmlraXRhLTI4ODIiLCBmcGx1Zy0+ZGV0YWNoICE9IE5VTEwpOworCisJ
cmVzdWx0ID0gdW5saW5rX2NoZWNrX2FuZF9ncmFiKHBhcmVudCwgdmljdGltKTsKKwlpZiAocmVz
dWx0ICE9IDApIHsKKwkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJCXJlaXNlcjRf
ZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJcmVzdWx0ID0gZnBs
dWctPmRldGFjaChvYmplY3QsIHBhcmVudCk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWRpcl9w
bHVnaW4gKnBhcmVudF9kcGx1ZzsKKwkJcmVpc2VyNF9kaXJfZW50cnlfZGVzYyBlbnRyeTsKKwor
CQlwYXJlbnRfZHBsdWcgPSBpbm9kZV9kaXJfcGx1Z2luKHBhcmVudCk7CisJCW1lbXNldCgmZW50
cnksIDAsIHNpemVvZiBlbnRyeSk7CisKKwkJLyogZmlyc3QsIGRlbGV0ZSBkaXJlY3RvcnkgZW50
cnkgKi8KKwkJcmVzdWx0ID0gcGFyZW50X2RwbHVnLT5yZW1fZW50cnkocGFyZW50LCB2aWN0aW0s
ICZlbnRyeSk7CisJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJLyoKKwkJCSAqIGlmIG5hbWUgd2Fz
IHJlbW92ZWQgc3VjY2Vzc2Z1bGx5LCB3ZSBfaGF2ZV8gdG8KKwkJCSAqIHJldHVybiAwIGZyb20g
dGhpcyBmdW5jdGlvbiwgYmVjYXVzZSB1cHBlciBsZXZlbAorCQkJICogY2FsbGVyICh2ZnNfe3Jt
ZGlyLHVubGlua30pIGV4cGVjdCB0aGlzLgorCQkJICoKKwkJCSAqIG5vdyB0aGF0IGRpcmVjdG9y
eSBlbnRyeSBpcyByZW1vdmVkLCB1cGRhdGUKKwkJCSAqIHN0YXQtZGF0YQorCQkJICovCisJCQly
ZWlzZXI0X2RlbF9ubGluayhvYmplY3QsIHBhcmVudCwgMSk7CisJCQkvKgorCQkJICogVXBvbiBz
dWNjZXNzZnVsIGNvbXBsZXRpb24sIHVubGluaygpIHNoYWxsIG1hcmsgZm9yCisJCQkgKiB1cGRh
dGUgdGhlIHN0X2N0aW1lIGFuZCBzdF9tdGltZSBmaWVsZHMgb2YgdGhlCisJCQkgKiBwYXJlbnQg
ZGlyZWN0b3J5LiBBbHNvLCBpZiB0aGUgZmlsZSdzIGxpbmsgY291bnQgaXMKKwkJCSAqIG5vdCAw
LCB0aGUgc3RfY3RpbWUgZmllbGQgb2YgdGhlIGZpbGUgc2hhbGwgYmUKKwkJCSAqIG1hcmtlZCBm
b3IgdXBkYXRlLiAtLVNVUworCQkJICovCisJCQlyZWlzZXI0X3VwZGF0ZV9kaXIocGFyZW50KTsK
KwkJCS8qIGFkZCBzYWZlLWxpbmsgZm9yIHRoaXMgZmlsZSAqLworCQkJaWYgKG9iamVjdC0+aV9u
bGluayA9PSAwKQorCQkJCXNhZmVfbGlua19hZGQob2JqZWN0LCBTQUZFX1VOTElOSyk7CisJCX0K
Kwl9CisKKwlpZiAodW5saWtlbHkocmVzdWx0ICE9IDApKSB7CisJCWlmIChyZXN1bHQgIT0gLUVO
T01FTSkKKwkJCXdhcm5pbmcoIm5pa2l0YS0zMzk4IiwgIkNhbm5vdCB1bmxpbmsgJWxsdSAoJWkp
IiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQob2JqZWN0KSwKKwkJCQly
ZXN1bHQpOworCQkvKiBpZiBvcGVyYXRpb24gZmFpbGVkIGNvbW1pdCBwZW5kaW5nIGlub2RlIG1v
ZGlmaWNhdGlvbnMgdG8KKwkJICogdGhlIHN0YXQtZGF0YSAqLworCQlyZWlzZXI0X3VwZGF0ZV9z
ZChvYmplY3QpOworCQlyZWlzZXI0X3VwZGF0ZV9zZChwYXJlbnQpOworCX0KKworCXJlaXNlcjRf
cmVsZWFzZV9yZXNlcnZlZChvYmplY3QtPmlfc2IpOworCisJLyogQG9iamVjdCdzIGlfY3RpbWUg
d2FzIHVwZGF0ZWQgYnkgLT5yZW1fbGluaygpIG1ldGhvZCgpLiAqLworCisJLyogQHZpY3RpbSBj
YW4gYmUgYWxyZWFkeSByZW1vdmVkIGZyb20gdGhlIGRpc2sgYnkgdGhpcyB0aW1lLiBJbm9kZSBp
cworCSAgIHRoZW4gbWFya2VkIHNvIHRoYXQgaXB1dCgpIHdvdWxkbid0IHRyeSB0byByZW1vdmUg
c3RhdCBkYXRhLiBCdXQKKwkgICBpbm9kZSBpdHNlbGYgaXMgc3RpbGwgdGhlcmUuCisJICovCisK
KwkvKgorCSAqIHdlIGNhbm5vdCByZWxlYXNlIGRpcmVjdG9yeSBzZW1hcGhvcmUgaGVyZSwgYmVj
YXVzZSBuYW1lIGhhcworCSAqIGFscmVhZHkgYmVlbiBkZWxldGVkLCBidXQgZGVudHJ5IChAdmlj
dGltKSBzdGlsbCBleGlzdHMuICBQcmV2ZW50CisJICogYmFsYW5jZV9kaXJ0eV9wYWdlcygpIGZy
b20gYmVpbmcgY2FsbGVkIG9uIGV4aXRpbmcgdGhpcyBjb250ZXh0OiB3ZQorCSAqIGRvbid0IHdh
bnQgdG8gZG8gdGhpcyB1bmRlciBkaXJlY3RvcnkgaV9tdXRleC4KKwkgKi8KKwljb250ZXh0X3Nl
dF9jb21taXRfYXN5bmMoY3R4KTsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworCXJldHVy
biByZXN1bHQ7Cit9CisKKy8qKgorICogcmVpc2VyNF9zeW1saW5rX2NvbW1vbiAtIHN5bWxpbmsg
b2YgaW5vZGUgb3BlcmF0aW9ucworICogQHBhcmVudDogaW5vZGUgb2YgcGFyZW50IGRpcmVjdG9y
eQorICogQGRlbnRyeTogZGVudHJ5IG9mIG9iamVjdCB0byBiZSBjcmVhdGVkCisgKiBAbGlua25h
bWU6IHN0cmluZyBzeW1saW5rIGlzIHRvIGNvbnRhaW4KKyAqCisgKiBUaGlzIGlzIGNvbW1vbiBp
bXBsZW1lbnRhdGlvbiBvZiB2ZnMncyBzeW1saW5rIG1ldGhvZCBvZiBzdHJ1Y3QKKyAqIGlub2Rl
X29wZXJhdGlvbnMuCisgKiBDcmVhdGVzIG9iamVjdCB1c2luZyBmaWxlIHBsdWdpbiBTWU1MSU5L
X0ZJTEVfUExVR0lOX0lELgorICovCitpbnQgcmVpc2VyNF9zeW1saW5rX2NvbW1vbihzdHJ1Y3Qg
aW5vZGUgKnBhcmVudCwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAorCQkJICAgY29uc3QgY2hhciAq
bGlua25hbWUpCit7CisJcmVpc2VyNF9vYmplY3RfY3JlYXRlX2RhdGEgZGF0YTsKKworCW1lbXNl
dCgmZGF0YSwgMCwgc2l6ZW9mIGRhdGEpOworCWRhdGEubmFtZSA9IGxpbmtuYW1lOworCWRhdGEu
aWQgPSBTWU1MSU5LX0ZJTEVfUExVR0lOX0lEOworCWRhdGEubW9kZSA9IFNfSUZMTksgfCBTX0lS
V1hVR087CisJcmV0dXJuIGNyZWF0ZV92ZnNfb2JqZWN0KHBhcmVudCwgZGVudHJ5LCAmZGF0YSk7
Cit9CisKKy8qKgorICogcmVpc2VyNF9ta2Rpcl9jb21tb24gLSBta2RpciBvZiBpbm9kZSBvcGVy
YXRpb25zCisgKiBAcGFyZW50OiBpbm9kZSBvZiBwYXJlbnQgZGlyZWN0b3J5CisgKiBAZGVudHJ5
OiBkZW50cnkgb2Ygb2JqZWN0IHRvIGJlIGNyZWF0ZWQKKyAqIEBtb2RlOiB0aGUgcGVybWlzc2lv
bnMgdG8gdXNlCisgKgorICogVGhpcyBpcyBjb21tb24gaW1wbGVtZW50YXRpb24gb2YgdmZzJ3Mg
bWtkaXIgbWV0aG9kIG9mIHN0cnVjdAorICogaW5vZGVfb3BlcmF0aW9ucy4KKyAqIENyZWF0ZXMg
b2JqZWN0IHVzaW5nIGZpbGUgcGx1Z2luIERJUkVDVE9SWV9GSUxFX1BMVUdJTl9JRC4KKyAqLwor
aW50IHJlaXNlcjRfbWtkaXJfY29tbW9uKHN0cnVjdCBpbm9kZSAqcGFyZW50LCBzdHJ1Y3QgZGVu
dHJ5ICpkZW50cnksIHVtb2RlX3QgbW9kZSkKK3sKKwlyZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0
YSBkYXRhOworCisJbWVtc2V0KCZkYXRhLCAwLCBzaXplb2YgZGF0YSk7CisJZGF0YS5tb2RlID0g
U19JRkRJUiB8IG1vZGU7CisJZGF0YS5pZCA9IERJUkVDVE9SWV9GSUxFX1BMVUdJTl9JRDsKKwly
ZXR1cm4gY3JlYXRlX3Zmc19vYmplY3QocGFyZW50LCBkZW50cnksICZkYXRhKTsKK30KKworLyoq
CisgKiByZWlzZXI0X21rbm9kX2NvbW1vbiAtIG1rbm9kIG9mIGlub2RlIG9wZXJhdGlvbnMKKyAq
IEBwYXJlbnQ6IGlub2RlIG9mIHBhcmVudCBkaXJlY3RvcnkKKyAqIEBkZW50cnk6IGRlbnRyeSBv
ZiBvYmplY3QgdG8gYmUgY3JlYXRlZAorICogQG1vZGU6IHRoZSBwZXJtaXNzaW9ucyB0byB1c2Ug
YW5kIGZpbGUgdHlwZQorICogQHJkZXY6IG1pbm9yIGFuZCBtYWpvciBvZiBuZXcgZGV2aWNlIGZp
bGUKKyAqCisgKiBUaGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiB2ZnMncyBta25vZCBt
ZXRob2Qgb2Ygc3RydWN0CisgKiBpbm9kZV9vcGVyYXRpb25zLgorICogQ3JlYXRlcyBvYmplY3Qg
dXNpbmcgZmlsZSBwbHVnaW4gU1BFQ0lBTF9GSUxFX1BMVUdJTl9JRC4KKyAqLworaW50IHJlaXNl
cjRfbWtub2RfY29tbW9uKHN0cnVjdCBpbm9kZSAqcGFyZW50LCBzdHJ1Y3QgZGVudHJ5ICpkZW50
cnksCisJCQkgdW1vZGVfdCBtb2RlLCBkZXZfdCByZGV2KQoreworCXJlaXNlcjRfb2JqZWN0X2Ny
ZWF0ZV9kYXRhIGRhdGE7CisKKwltZW1zZXQoJmRhdGEsIDAsIHNpemVvZiBkYXRhKTsKKwlkYXRh
Lm1vZGUgPSBtb2RlOworCWRhdGEucmRldiA9IHJkZXY7CisJZGF0YS5pZCA9IFNQRUNJQUxfRklM
RV9QTFVHSU5fSUQ7CisJcmV0dXJuIGNyZWF0ZV92ZnNfb2JqZWN0KHBhcmVudCwgZGVudHJ5LCAm
ZGF0YSk7Cit9CisKKy8qCisgKiBpbXBsZW1lbnRhdGlvbiBvZiB2ZnMncyByZW5hbWUgbWV0aG9k
IG9mIHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIGZvciB0eXBpY2FsCisgKiBkaXJlY3RvcnkgaXMg
aW4gaW5vZGVfb3BzX3JlbmFtZS5jCisgKi8KKworLyoqCisgKiByZWlzZXI0X2dldF9saW5rX2Nv
bW1vbjogLT5nZXRfbGluaygpIG9mIGlub2RlX29wZXJhdGlvbnMKKyAqIEBkZW50cnk6IGRlbnRy
eSBvZiBzeW1saW5rCisgKgorICogQXNzdW1lcyB0aGF0IGlub2RlJ3MgaV9wcml2YXRlIHBvaW50
cyB0byB0aGUgY29udGVudCBvZiBzeW1ib2xpYyBsaW5rLgorICovCitjb25zdCBjaGFyICpyZWlz
ZXI0X2dldF9saW5rX2NvbW1vbihzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCisJCQkJICAgIHN0cnVj
dCBpbm9kZSAqaW5vZGUsCisJCQkJICAgIHN0cnVjdCBkZWxheWVkX2NhbGwgKmRvbmUpCit7CisJ
aWYgKCFkZW50cnkpCisJCXJldHVybiBFUlJfUFRSKC1FQ0hJTEQpOworCisJYXNzZXJ0KCJ2cy04
NTEiLCBTX0lTTE5LKGRlbnRyeS0+ZF9pbm9kZS0+aV9tb2RlKSk7CisKKwlpZiAoIWRlbnRyeS0+
ZF9pbm9kZS0+aV9wcml2YXRlIHx8CisJICAgICFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGRlbnRy
eS0+ZF9pbm9kZSwgUkVJU0VSNF9HRU5FUklDX1BUUl9VU0VEKSkKKwkJcmV0dXJuIEVSUl9QVFIo
UkVURVJSKC1FSU5WQUwpKTsKKworCXJldHVybiBkZW50cnktPmRfaW5vZGUtPmlfcHJpdmF0ZTsK
K30KKworLyoqCisgKiByZWlzZXI0X3Blcm1pc3Npb25fY29tbW9uIC0gcGVybWlzc2lvbiBvZiBp
bm9kZSBvcGVyYXRpb25zCisgKiBAaW5vZGU6IGlub2RlIHRvIGNoZWNrIHBlcm1pc3Npb25zIGZv
cgorICogQG1hc2s6IG1vZGUgYml0cyB0byBjaGVjayBwZXJtaXNzaW9ucyBmb3IKKyAqIEBmbGFn
czoKKyAqCisgKiBVc2VzIGdlbmVyaWMgZnVuY3Rpb24gdG8gY2hlY2sgZm9yIHJ3eCBwZXJtaXNz
aW9ucy4KKyAqLworaW50IHJlaXNlcjRfcGVybWlzc2lvbl9jb21tb24oc3RydWN0IGlub2RlICpp
bm9kZSwgaW50IG1hc2spCit7CisJLy8gZ2VuZXJpY19wZXJtaXNzaW9uKCkgc2F5cyB0aGF0IGl0
J3MgcmN1LWF3YXJlLi4uCisjaWYgMAorCWlmIChtYXNrICYgTUFZX05PVF9CTE9DSykKKwkJcmV0
dXJuIC1FQ0hJTEQ7CisjZW5kaWYKKwlyZXR1cm4gZ2VuZXJpY19wZXJtaXNzaW9uKGlub2RlLCBt
YXNrKTsKK30KKworc3RhdGljIGludCBzZXRhdHRyX3Jlc2VydmUocmVpc2VyNF90cmVlICopOwor
CisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBvZiB2ZnMncyBzZXRhdHRyIG1ldGhv
ZCBvZiBzdHJ1Y3QKKyAgIGlub2RlX29wZXJhdGlvbnMKKyovCitpbnQgcmVpc2VyNF9zZXRhdHRy
X2NvbW1vbihzdHJ1Y3QgZGVudHJ5ICpkZW50cnksIHN0cnVjdCBpYXR0ciAqYXR0cikKK3sKKwly
ZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCWludCByZXN1bHQ7
CisKKwlpbm9kZSA9IGRlbnRyeS0+ZF9pbm9kZTsKKwlyZXN1bHQgPSBzZXRhdHRyX3ByZXBhcmUo
ZGVudHJ5LCBhdHRyKTsKKwlpZiAocmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCisJY3R4ID0g
cmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJ
cmV0dXJuIFBUUl9FUlIoY3R4KTsKKworCWFzc2VydCgibmlraXRhLTMxMTkiLCAhKGF0dHItPmlh
X3ZhbGlkICYgQVRUUl9TSVpFKSk7CisKKwkvKgorCSAqIGdyYWIgZGlzayBzcGFjZSBhbmQgY2Fs
bCBzdGFuZGFyZAorCSAqIHNldGF0dHJfY29weSgpOworCSAqIG1hcmtfaW5vZGVfZGlydHkoKS4K
KwkgKi8KKwlyZXN1bHQgPSBzZXRhdHRyX3Jlc2VydmUocmVpc2VyNF90cmVlX2J5X2lub2RlKGlu
b2RlKSk7CisJaWYgKCFyZXN1bHQpIHsKKwkJc2V0YXR0cl9jb3B5KGlub2RlLCBhdHRyKTsKKwkJ
bWFya19pbm9kZV9kaXJ0eShpbm9kZSk7CisJCXJlc3VsdCA9IHJlaXNlcjRfdXBkYXRlX3NkKGlu
b2RlKTsKKwl9CisJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJcmVpc2VyNF9leGl0
X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiB0aGlzIGlzIGNvbW1vbiBp
bXBsZW1lbnRhdGlvbiBvZiB2ZnMncyBnZXRhdHRyIG1ldGhvZCBvZiBzdHJ1Y3QKKyAgIGlub2Rl
X29wZXJhdGlvbnMKKyovCitpbnQgcmVpc2VyNF9nZXRhdHRyX2NvbW1vbihjb25zdCBzdHJ1Y3Qg
cGF0aCAqcGF0aCwgc3RydWN0IGtzdGF0ICpzdGF0LAorCQkJICAgdTMyIHJlcXVlc3RfbWFzaywg
dW5zaWduZWQgaW50IGZsYWdzKQoreworCXN0cnVjdCBpbm9kZSAqb2JqOworCisJYXNzZXJ0KCJu
aWtpdGEtMjI5OCIsIHBhdGggIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjI5OSIsIHN0YXQg
IT0gTlVMTCk7CisKKwlvYmogPSBkX2lub2RlKHBhdGgtPmRlbnRyeSk7CisKKwlzdGF0LT5kZXYg
PSBvYmotPmlfc2ItPnNfZGV2OworCXN0YXQtPmlubyA9IG9pZF90b191aW5vKGdldF9pbm9kZV9v
aWQob2JqKSk7CisJc3RhdC0+bW9kZSA9IG9iai0+aV9tb2RlOworCS8qIGRvbid0IGNvbmZ1c2Ug
dXNlcmxhbmQgd2l0aCBodWdlIG5saW5rLiBUaGlzIGlzIG5vdCBlbnRpcmVseQorCSAqIGNvcnJl
Y3QsIGJlY2F1c2UgbmxpbmtfdCBpcyBub3QgbmVjZXNzYXJ5IDE2IGJpdCBzaWduZWQuICovCisJ
c3RhdC0+bmxpbmsgPSBtaW4ob2JqLT5pX25saW5rLCAodHlwZW9mKG9iai0+aV9ubGluaykpIDB4
N2ZmZik7CisJc3RhdC0+dWlkID0gb2JqLT5pX3VpZDsKKwlzdGF0LT5naWQgPSBvYmotPmlfZ2lk
OworCXN0YXQtPnJkZXYgPSBvYmotPmlfcmRldjsKKwlzdGF0LT5hdGltZSA9IG9iai0+aV9hdGlt
ZTsKKwlzdGF0LT5tdGltZSA9IG9iai0+aV9tdGltZTsKKwlzdGF0LT5jdGltZSA9IG9iai0+aV9j
dGltZTsKKwlzdGF0LT5zaXplID0gb2JqLT5pX3NpemU7CisJc3RhdC0+YmxvY2tzID0KKwkgICAg
KGlub2RlX2dldF9ieXRlcyhvYmopICsgVkZTX0JMS1NJWkUgLSAxKSA+PiBWRlNfQkxLU0laRV9C
SVRTOworCS8qICJwcmVmZXJyZWQiIGJsb2Nrc2l6ZSBmb3IgZWZmaWNpZW50IGZpbGUgc3lzdGVt
IEkvTyAqLworCXN0YXQtPmJsa3NpemUgPSBnZXRfc3VwZXJfcHJpdmF0ZShvYmotPmlfc2IpLT5v
cHRpbWFsX2lvX3NpemU7CisKKwlyZXR1cm4gMDsKK30KKworLyogRXN0aW1hdGUgdGhlIG1heGlt
dW0gYW1vdW50IG9mIG5vZGVzIHdoaWNoIG1pZ2h0IGJlIGFsbG9jYXRlZCBvciBjaGFuZ2VkIG9u
CisgICB0eXBpY2FsIG5ldyBvYmplY3QgY3JlYXRpb24uIFR5cGljYWwgY3JlYXRpb24gY29uc2lz
dHMgb2YgY2FsbGluZyBjcmVhdGUKKyAgIG1ldGhvZCBvZiBmaWxlIHBsdWdpbiwgYWRkaW5nIGRp
cmVjdG9yeSBlbnRyeSB0byBwYXJlbnQgYW5kIHVwZGF0ZSBwYXJlbnQKKyAgIGRpcmVjdG9yeSdz
IHN0YXQgZGF0YS4KKyovCitzdGF0aWMgcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9jcmVhdGVf
dmZzX29iamVjdChzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJCQkJCSAgIC8qIHBhcmVudCBvYmpl
Y3QgKi8KKwkJCQkJCSAgIHN0cnVjdCBpbm9kZSAqb2JqZWN0CisJCQkJCQkgICAvKiBvYmplY3Qg
Ki8pCit7CisJYXNzZXJ0KCJ2cGYtMzA5IiwgcGFyZW50ICE9IE5VTEwpOworCWFzc2VydCgidnBm
LTMwNyIsIG9iamVjdCAhPSBOVUxMKTsKKworCXJldHVybgorCSAgICAvKiBvYmplY3QgY3JlYXRp
b24gZXN0aW1hdGlvbiAqLworCSAgICBpbm9kZV9maWxlX3BsdWdpbihvYmplY3QpLT5lc3RpbWF0
ZS5jcmVhdGUob2JqZWN0KSArCisJICAgIC8qIHN0YXQgZGF0YSBvZiBwYXJlbnQgZGlyZWN0b3J5
IGVzdGltYXRpb24gKi8KKwkgICAgaW5vZGVfZmlsZV9wbHVnaW4ocGFyZW50KS0+ZXN0aW1hdGUu
dXBkYXRlKHBhcmVudCkgKworCSAgICAvKiBhZGRpbmcgZW50cnkgZXN0aW1hdGlvbiAqLworCSAg
ICBpbm9kZV9kaXJfcGx1Z2luKHBhcmVudCktPmVzdGltYXRlLmFkZF9lbnRyeShwYXJlbnQpICsK
KwkgICAgLyogdG8gdW5kbyBpbiB0aGUgY2FzZSBvZiBmYWlsdXJlICovCisJICAgIGlub2RlX2Rp
cl9wbHVnaW4ocGFyZW50KS0+ZXN0aW1hdGUucmVtX2VudHJ5KHBhcmVudCk7Cit9CisKKy8qIENy
ZWF0ZSBjaGlsZCBpbiBkaXJlY3RvcnkuCisKKyAgIC4gZ2V0IG9iamVjdCdzIHBsdWdpbgorICAg
LiBnZXQgZnJlc2ggaW5vZGUKKyAgIC4gaW5pdGlhbGl6ZSBpbm9kZQorICAgLiBhZGQgb2JqZWN0
J3Mgc3RhdC1kYXRhCisgICAuIGluaXRpYWxpemUgb2JqZWN0J3MgZGlyZWN0b3J5CisgICAuIGFk
ZCBlbnRyeSB0byB0aGUgcGFyZW50CisgICAuIGluc3RhbnRpYXRlIGRlbnRyeQorCisqLworc3Rh
dGljIGludCBkb19jcmVhdGVfdmZzX2NoaWxkKHJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICog
ZGF0YSwvKiBwYXJhbWV0ZXJzCisJCQkJCQkJCSAgICBvZiBuZXcKKwkJCQkJCQkJICAgIG9iamVj
dCAqLworCQkJICAgICAgIHN0cnVjdCBpbm9kZSAqKnJldG9iaikKK3sKKwlpbnQgcmVzdWx0Owor
CisJc3RydWN0IGRlbnRyeSAqZGVudHJ5OwkvKiBwYXJlbnQgb2JqZWN0ICovCisJc3RydWN0IGlu
b2RlICpwYXJlbnQ7CS8qIG5ldyBuYW1lICovCisKKwlkaXJfcGx1Z2luICpwYXJfZGlyOwkvKiBk
aXJlY3RvcnkgcGx1Z2luIG9uIHRoZSBwYXJlbnQgKi8KKwlkaXJfcGx1Z2luICpvYmpfZGlyOwkv
KiBkaXJlY3RvcnkgcGx1Z2luIG9uIHRoZSBuZXcgb2JqZWN0ICovCisJZmlsZV9wbHVnaW4gKm9i
al9wbHVnOwkvKiBvYmplY3QgcGx1Z2luIG9uIHRoZSBuZXcgb2JqZWN0ICovCisJc3RydWN0IGlu
b2RlICpvYmplY3Q7CS8qIG5ldyBvYmplY3QgKi8KKwlyZWlzZXI0X2Jsb2NrX25yIHJlc2VydmU7
CisKKwlyZWlzZXI0X2Rpcl9lbnRyeV9kZXNjIGVudHJ5OwkvKiBuZXcgZGlyZWN0b3J5IGVudHJ5
ICovCisKKwlhc3NlcnQoIm5pa2l0YS0xNDIwIiwgZGF0YSAhPSBOVUxMKTsKKwlwYXJlbnQgPSBk
YXRhLT5wYXJlbnQ7CisJZGVudHJ5ID0gZGF0YS0+ZGVudHJ5OworCisJYXNzZXJ0KCJuaWtpdGEt
MTQxOCIsIHBhcmVudCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xNDE5IiwgZGVudHJ5ICE9
IE5VTEwpOworCisJLyogY2hlY2ssIHRoYXQgbmFtZSBpcyBhY2NlcHRhYmxlIGZvciBwYXJlbnQg
Ki8KKwlwYXJfZGlyID0gaW5vZGVfZGlyX3BsdWdpbihwYXJlbnQpOworCWlmIChwYXJfZGlyLT5p
c19uYW1lX2FjY2VwdGFibGUgJiYKKwkgICAgIXBhcl9kaXItPmlzX25hbWVfYWNjZXB0YWJsZShw
YXJlbnQsCisJCQkJCSBkZW50cnktPmRfbmFtZS5uYW1lLAorCQkJCQkgKGludClkZW50cnktPmRf
bmFtZS5sZW4pKQorCQlyZXR1cm4gUkVURVJSKC1FTkFNRVRPT0xPTkcpOworCisJcmVzdWx0ID0g
MDsKKwlvYmpfcGx1ZyA9IGZpbGVfcGx1Z2luX2J5X2lkKChpbnQpZGF0YS0+aWQpOworCWlmIChv
YmpfcGx1ZyA9PSBOVUxMKSB7CisJCXdhcm5pbmcoIm5pa2l0YS00MzAiLCAiQ2Fubm90IGZpbmQg
cGx1Z2luICVpIiwgZGF0YS0+aWQpOworCQlyZXR1cm4gUkVURVJSKC1FTk9FTlQpOworCX0KKwlv
YmplY3QgPSBuZXdfaW5vZGUocGFyZW50LT5pX3NiKTsKKwlpZiAob2JqZWN0ID09IE5VTEwpCisJ
CXJldHVybiBSRVRFUlIoLUVOT01FTSk7CisJLyogbmV3X2lub2RlKCkgaW5pdGlhbGl6ZXMgaV9p
bm8gdG8gImFyYml0cmFyeSIgdmFsdWUuIFJlc2V0IGl0IHRvIDAsCisJICogdG8gc2ltcGxpZnkg
ZXJyb3IgaGFuZGxpbmc6IGlmIHNvbWUgZXJyb3Igb2NjdXJzIGJlZm9yZSBpX2lubyBpcworCSAq
IGluaXRpYWxpemVkIHdpdGggb2lkLCBpX2lubyBzaG91bGQgYWxyZWFkeSBiZSBzZXQgdG8gc29t
ZQorCSAqIGRpc3Rpbmd1aXNoZWQgdmFsdWUuICovCisJb2JqZWN0LT5pX2lubyA9IDA7CisKKwkv
KiBTbyB0aGF0IG9uIGVycm9yIGlwdXQgd2lsbCBiZSBjYWxsZWQuICovCisJKnJldG9iaiA9IG9i
amVjdDsKKworCW1lbXNldCgmZW50cnksIDAsIHNpemVvZiBlbnRyeSk7CisJZW50cnkub2JqID0g
b2JqZWN0OworCisJc2V0X3BsdWdpbigmcmVpc2VyNF9pbm9kZV9kYXRhKG9iamVjdCktPnBzZXQs
IFBTRVRfRklMRSwKKwkJICAgZmlsZV9wbHVnaW5fdG9fcGx1Z2luKG9ial9wbHVnKSk7CisJcmVz
dWx0ID0gb2JqX3BsdWctPnNldF9wbHVnX2luX2lub2RlKG9iamVjdCwgcGFyZW50LCBkYXRhKTsK
KwlpZiAocmVzdWx0KSB7CisJCXdhcm5pbmcoIm5pa2l0YS00MzEiLCAiQ2Fubm90IGluc3RhbGwg
cGx1Z2luICVpIG9uICVsbHgiLAorCQkJZGF0YS0+aWQsICh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0
X2lub2RlX29pZChvYmplY3QpKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKiByZWdldCBw
bHVnaW4gYWZ0ZXIgaW5zdGFsbGF0aW9uICovCisJb2JqX3BsdWcgPSBpbm9kZV9maWxlX3BsdWdp
bihvYmplY3QpOworCisJaWYgKG9ial9wbHVnLT5jcmVhdGVfb2JqZWN0ID09IE5VTEwpIHsKKwkJ
cmV0dXJuIFJFVEVSUigtRVBFUk0pOworCX0KKworCS8qIGlmIGFueSBvZiBoYXNoLCB0YWlsLCBz
ZCBvciBwZXJtaXNzaW9uIHBsdWdpbnMgZm9yIG5ld2x5IGNyZWF0ZWQKKwkgICBvYmplY3QgYXJl
IG5vdCBzZXQgeWV0IHNldCB0aGVtIGhlcmUgaW5oZXJpdGluZyB0aGVtIGZyb20gcGFyZW50CisJ
ICAgZGlyZWN0b3J5CisJICovCisJYXNzZXJ0KCJuaWtpdGEtMjA3MCIsIG9ial9wbHVnLT5hZGp1
c3RfdG9fcGFyZW50ICE9IE5VTEwpOworCXJlc3VsdCA9IG9ial9wbHVnLT5hZGp1c3RfdG9fcGFy
ZW50KG9iamVjdCwKKwkJCQkJICAgIHBhcmVudCwKKwkJCQkJICAgIG9iamVjdC0+aV9zYi0+c19y
b290LT5kX2lub2RlKTsKKwlpZiAocmVzdWx0ID09IDApCisJCXJlc3VsdCA9IGZpbmlzaF9wc2V0
KG9iamVjdCk7CisJaWYgKHJlc3VsdCAhPSAwKSB7CisJCXdhcm5pbmcoIm5pa2l0YS00MzIiLCAi
Q2Fubm90IGluaGVyaXQgZnJvbSAlbGx4IHRvICVsbHgiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9u
ZylnZXRfaW5vZGVfb2lkKHBhcmVudCksCisJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9k
ZV9vaWQob2JqZWN0KSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogc2V0dXAgaW5vZGUg
YW5kIGZpbGUtb3BlcmF0aW9ucyBmb3IgdGhpcyBpbm9kZSAqLworCXNldHVwX2lub2RlX29wcyhv
YmplY3QsIGRhdGEpOworCisJLyogY2FsbCBmaWxlIHBsdWdpbidzIG1ldGhvZCB0byBpbml0aWFs
aXplIHBsdWdpbiBzcGVjaWZpYyBwYXJ0IG9mCisJICogaW5vZGUgKi8KKwlpZiAob2JqX3BsdWct
PmluaXRfaW5vZGVfZGF0YSkKKwkJb2JqX3BsdWctPmluaXRfaW5vZGVfZGF0YShvYmplY3QsIGRh
dGEsIDEvKmNyZWF0ZSAqLyk7CisKKwkvKiBvYnRhaW4gZGlyZWN0b3J5IHBsdWdpbiAoaWYgYW55
KSBmb3IgbmV3IG9iamVjdC4gKi8KKwlvYmpfZGlyID0gaW5vZGVfZGlyX3BsdWdpbihvYmplY3Qp
OworCWlmIChvYmpfZGlyICE9IE5VTEwgJiYgb2JqX2Rpci0+aW5pdCA9PSBOVUxMKSB7CisJCXJl
dHVybiBSRVRFUlIoLUVQRVJNKTsKKwl9CisKKwlyZWlzZXI0X2lub2RlX2RhdGEob2JqZWN0KS0+
bG9jYWxpdHlfaWQgPSBnZXRfaW5vZGVfb2lkKHBhcmVudCk7CisKKwlyZXNlcnZlID0gZXN0aW1h
dGVfY3JlYXRlX3Zmc19vYmplY3QocGFyZW50LCBvYmplY3QpOworCWlmIChyZWlzZXI0X2dyYWJf
c3BhY2UocmVzZXJ2ZSwgQkFfQ0FOX0NPTU1JVCkpIHsKKwkJcmV0dXJuIFJFVEVSUigtRU5PU1BD
KTsKKwl9CisKKwkvKiBtYXJrIGlub2RlIGBpbW11dGFibGUnLiBXZSBkaXNhYmxlIGNoYW5nZXMg
dG8gdGhlIGZpbGUgYmVpbmcKKwkgICBjcmVhdGVkIHVudGlsIHZhbGlkIGRpcmVjdG9yeSBlbnRy
eSBmb3IgaXQgaXMgaW5zZXJ0ZWQuIE90aGVyd2lzZSwKKwkgICBpZiBmaWxlIHdlcmUgZXhwYW5k
ZWQgYW5kIGluc2VydGlvbiBvZiBkaXJlY3RvcnkgZW50cnkgZmFpbHMsIHdlCisJICAgaGF2ZSB0
byByZW1vdmUgZmlsZSwgYnV0IHdlIG9ubHkgYWxsb3RlZCBlbm91Z2ggc3BhY2UgaW4KKwkgICB0
cmFuc2FjdGlvbiB0byByZW1vdmUgX2VtcHR5XyBmaWxlLiAzLnggY29kZSB1c2VkIHRvIHJlbW92
ZSBzdGF0CisJICAgZGF0YSBpbiBkaWZmZXJlbnQgdHJhbnNhY3Rpb24gdGh1cyBwb3NzaWJseSBs
ZWFraW5nIGRpc2sgc3BhY2Ugb24KKwkgICBjcmFzaC4gVGhpcyBhbGwgb25seSBtYXR0ZXJzIGlm
IGl0J3MgcG9zc2libGUgdG8gYWNjZXNzIGZpbGUKKwkgICB3aXRob3V0IG5hbWUsIGZvciBleGFt
cGxlLCBieSBpbm9kZSBudW1iZXIKKwkgKi8KKwlyZWlzZXI0X2lub2RlX3NldF9mbGFnKG9iamVj
dCwgUkVJU0VSNF9JTU1VVEFCTEUpOworCisJLyogY3JlYXRlIGVtcHR5IG9iamVjdCwgdGhpcyBp
bmNsdWRlcyBhbGxvY2F0aW9uIG9mIG5ldyBvYmplY3RpZC4gRm9yCisJICAgZGlyZWN0b3JpZXMg
dGhpcyBpbXBsaWVzIGNyZWF0aW9uIG9mIGRvdCBhbmQgZG90ZG90ICAqLworCWFzc2VydCgibmlr
aXRhLTIyNjUiLCByZWlzZXI0X2lub2RlX2dldF9mbGFnKG9iamVjdCwgUkVJU0VSNF9OT19TRCkp
OworCisJLyogbWFyayBpbm9kZSBhcyBgbG9hZGVkJy4gRnJvbSB0aGlzIHBvaW50IG9ud2FyZAor
CSAgIHJlaXNlcjRfZGVsZXRlX2lub2RlKCkgd2lsbCB0cnkgdG8gcmVtb3ZlIGl0cyBzdGF0LWRh
dGEuICovCisJcmVpc2VyNF9pbm9kZV9zZXRfZmxhZyhvYmplY3QsIFJFSVNFUjRfTE9BREVEKTsK
KworCXJlc3VsdCA9IG9ial9wbHVnLT5jcmVhdGVfb2JqZWN0KG9iamVjdCwgcGFyZW50LCBkYXRh
KTsKKwlpZiAocmVzdWx0ICE9IDApIHsKKwkJcmVpc2VyNF9pbm9kZV9jbHJfZmxhZyhvYmplY3Qs
IFJFSVNFUjRfSU1NVVRBQkxFKTsKKwkJaWYgKHJlc3VsdCAhPSAtRU5BTUVUT09MT05HICYmIHJl
c3VsdCAhPSAtRU5PTUVNKQorCQkJd2FybmluZygibmlraXRhLTIyMTkiLAorCQkJCSJGYWlsZWQg
dG8gY3JlYXRlIHNkIGZvciAlbGx1IiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9k
ZV9vaWQob2JqZWN0KSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJaWYgKG9ial9kaXIgIT0g
TlVMTCkKKwkJcmVzdWx0ID0gb2JqX2Rpci0+aW5pdChvYmplY3QsIHBhcmVudCwgZGF0YSk7CisJ
aWYgKHJlc3VsdCA9PSAwKSB7CisJCWFzc2VydCgibmlraXRhLTQzNCIsICFyZWlzZXI0X2lub2Rl
X2dldF9mbGFnKG9iamVjdCwKKwkJCQkJCQkgICAgIFJFSVNFUjRfTk9fU0QpKTsKKwkJLyogaW5z
ZXJ0IGlub2RlIGludG8gVkZTIGhhc2ggdGFibGUgKi8KKwkJaW5zZXJ0X2lub2RlX2hhc2gob2Jq
ZWN0KTsKKwkJLyogY3JlYXRlIGVudHJ5ICovCisJCXJlc3VsdCA9IHBhcl9kaXItPmFkZF9lbnRy
eShwYXJlbnQsIGRlbnRyeSwgZGF0YSwgJmVudHJ5KTsKKwkJaWYgKHJlc3VsdCA9PSAwKSB7CisJ
CQkvKiBJZiBPX0NSRUFUIGlzIHNldCBhbmQgdGhlIGZpbGUgZGlkIG5vdCBwcmV2aW91c2x5CisJ
CQkgICBleGlzdCwgdXBvbiBzdWNjZXNzZnVsIGNvbXBsZXRpb24sIG9wZW4oKSBzaGFsbAorCQkJ
ICAgbWFyayBmb3IgdXBkYXRlIHRoZSBzdF9hdGltZSwgc3RfY3RpbWUsIGFuZAorCQkJICAgc3Rf
bXRpbWUgZmllbGRzIG9mIHRoZSBmaWxlIGFuZCB0aGUgc3RfY3RpbWUgYW5kCisJCQkgICBzdF9t
dGltZSBmaWVsZHMgb2YgdGhlIHBhcmVudCBkaXJlY3RvcnkuIC0tU1VTCisJCQkgKi8KKwkJCW9i
amVjdC0+aV9jdGltZSA9IGN1cnJlbnRfdGltZShvYmplY3QpOworCQkJcmVpc2VyNF91cGRhdGVf
ZGlyKHBhcmVudCk7CisJCX0KKwkJaWYgKHJlc3VsdCAhPSAwKQorCQkJLyogY2xlYW51cCBmYWls
dXJlIHRvIGFkZCBlbnRyeSAqLworCQkJb2JqX3BsdWctPmRldGFjaChvYmplY3QsIHBhcmVudCk7
CisJfSBlbHNlIGlmIChyZXN1bHQgIT0gLUVOT01FTSkKKwkJd2FybmluZygibmlraXRhLTIyMTki
LCAiRmFpbGVkIHRvIGluaXRpYWxpemUgZGlyIGZvciAlbGx1OiAlaSIsCisJCQkodW5zaWduZWQg
bG9uZyBsb25nKWdldF9pbm9kZV9vaWQob2JqZWN0KSwgcmVzdWx0KTsKKworCS8qCisJICogdXBk
YXRlIHN0YXQtZGF0YSwgY29tbWl0dGluZyBhbGwgcGVuZGluZyBtb2RpZmljYXRpb25zIHRvIHRo
ZSBpbm9kZQorCSAqIGZpZWxkcy4KKwkgKi8KKwlyZWlzZXI0X3VwZGF0ZV9zZChvYmplY3QpOwor
CWlmIChyZXN1bHQgIT0gMCkgeworCQkvKiBpZiBldmVyeXRoaW5nIHdhcyBvayAocmVzdWx0ID09
IDApLCBwYXJlbnQgc3RhdC1kYXRhIGlzCisJCSAqIGFscmVhZHkgdXBkYXRlZCBhYm92ZSAodXBk
YXRlX3BhcmVudF9kaXIoKSkgKi8KKwkJcmVpc2VyNF91cGRhdGVfc2QocGFyZW50KTsKKwkJLyog
ZmFpbHVyZSB0byBjcmVhdGUgZW50cnksIHJlbW92ZSBvYmplY3QgKi8KKwkJb2JqX3BsdWctPmRl
bGV0ZV9vYmplY3Qob2JqZWN0KTsKKwl9CisKKwkvKiBmaWxlIGhhcyBuYW1lIG5vdywgY2xlYXIg
aW1tdXRhYmxlIGZsYWcgKi8KKwlyZWlzZXI0X2lub2RlX2Nscl9mbGFnKG9iamVjdCwgUkVJU0VS
NF9JTU1VVEFCTEUpOworCisJLyogb24gZXJyb3IsIGlwdXQoKSB3aWxsIGNhbGwgLT5kZWxldGVf
aW5vZGUoKS4gV2Ugc2hvdWxkIGtlZXAgdHJhY2sKKwkgICBvZiB0aGUgZXhpc3RlbmNlIG9mIHN0
YXQtZGF0YSBmb3IgdGhpcyBpbm9kZSBhbmQgYXZvaWQgYXR0ZW1wdCB0bworCSAgIHJlbW92ZSBp
dCBpbiByZWlzZXI0X2RlbGV0ZV9pbm9kZSgpLiBUaGlzIGlzIGFjY29tcGxpc2hlZCB0aHJvdWdo
CisJICAgUkVJU0VSNF9OT19TRCBiaXQgaW4gaW5vZGUudS5yZWlzZXI0X2kucGx1Z2luLmZsYWdz
CisJICovCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogdGhpcyBpcyBoZWxwZXIgZm9yIGNvbW1v
biBpbXBsZW1lbnRhdGlvbnMgb2YgcmVpc2VyNF9ta2RpciwgcmVpc2VyNF9jcmVhdGUsCisgICBy
ZWlzZXI0X21rbm9kIGFuZCByZWlzZXI0X3N5bWxpbmsKKyovCitzdGF0aWMgaW50CitjcmVhdGVf
dmZzX29iamVjdChzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJICBzdHJ1Y3QgZGVudHJ5ICpkZW50
cnksIHJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICogZGF0YSkKK3sKKwlyZWlzZXI0X2NvbnRl
eHQgKmN0eDsKKwlpbnQgcmVzdWx0OworCXN0cnVjdCBpbm9kZSAqY2hpbGQ7CisKKwljdHggPSBy
ZWlzZXI0X2luaXRfY29udGV4dChwYXJlbnQtPmlfc2IpOworCWlmIChJU19FUlIoY3R4KSkKKwkJ
cmV0dXJuIFBUUl9FUlIoY3R4KTsKKwljb250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwor
CWRhdGEtPnBhcmVudCA9IHBhcmVudDsKKwlkYXRhLT5kZW50cnkgPSBkZW50cnk7CisJY2hpbGQg
PSBOVUxMOworCXJlc3VsdCA9IGRvX2NyZWF0ZV92ZnNfY2hpbGQoZGF0YSwgJmNoaWxkKTsKKwlp
ZiAodW5saWtlbHkocmVzdWx0ICE9IDApKSB7CisJCWlmIChjaGlsZCAhPSBOVUxMKSB7CisJCQkv
KiBmb3IgdW5saW5rZWQgaW5vZGUgYWNjb3VudGluZyBpbiBpcHV0KCkgKi8KKwkJCWNsZWFyX25s
aW5rKGNoaWxkKTsKKwkJCXJlaXNlcjRfbWFrZV9iYWRfaW5vZGUoY2hpbGQpOworCQkJaXB1dChj
aGlsZCk7CisJCX0KKwl9IGVsc2UKKwkJZF9pbnN0YW50aWF0ZShkZW50cnksIGNoaWxkKTsKKwor
CXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisg
KiBoZWxwZXIgZm9yIGxpbmtfY29tbW9uLiBFc3RpbWF0ZSBkaXNrIHNwYWNlIG5lY2Vzc2FyeSB0
byBhZGQgYSBsaW5rCisgKiBmcm9tIEBwYXJlbnQgdG8gQG9iamVjdAorICovCitzdGF0aWMgcmVp
c2VyNF9ibG9ja19uciBjb21tb25fZXN0aW1hdGVfbGluayhzdHJ1Y3QgaW5vZGUgKnBhcmVudCAv
KiBwYXJlbnQKKwkJCQkJCQkJICAgKiBkaXJlY3RvcnkKKwkJCQkJCQkJICAgKi8sCisJCQkJCSAg
ICAgc3RydWN0IGlub2RlICpvYmplY3QgLyogb2JqZWN0IHRvCisJCQkJCQkJCSAgICogd2hpY2gg
bmV3CisJCQkJCQkJCSAgICogbGluayBpcworCQkJCQkJCQkgICAqIGJlaW5nCisJCQkJCQkJCSAg
ICogY3JlYXRlZCAqLykKK3sKKwlyZWlzZXI0X2Jsb2NrX25yIHJlcyA9IDA7CisJZmlsZV9wbHVn
aW4gKmZwbHVnOworCWRpcl9wbHVnaW4gKmRwbHVnOworCisJYXNzZXJ0KCJ2cGYtMzE3Iiwgb2Jq
ZWN0ICE9IE5VTEwpOworCWFzc2VydCgidnBmLTMxOCIsIHBhcmVudCAhPSBOVUxMKTsKKworCWZw
bHVnID0gaW5vZGVfZmlsZV9wbHVnaW4ob2JqZWN0KTsKKwlkcGx1ZyA9IGlub2RlX2Rpcl9wbHVn
aW4ocGFyZW50KTsKKwkvKiBWUy1GSVhNRS1IQU5TOiB3aHkgZG8gd2UgZG8gZnBsdWctPmVzdGlt
YXRlLnVwZGF0ZShvYmplY3QpIHR3aWNlCisJICogaW5zdGVhZCBvZiBtdWx0aXBseWluZyBieSAy
PyAqLworCS8qIHJlaXNlcjRfYWRkX25saW5rKG9iamVjdCkgKi8KKwlyZXMgKz0gZnBsdWctPmVz
dGltYXRlLnVwZGF0ZShvYmplY3QpOworCS8qIGFkZF9lbnRyeShwYXJlbnQpICovCisJcmVzICs9
IGRwbHVnLT5lc3RpbWF0ZS5hZGRfZW50cnkocGFyZW50KTsKKwkvKiByZWlzZXI0X2RlbF9ubGlu
ayhvYmplY3QpICovCisJcmVzICs9IGZwbHVnLT5lc3RpbWF0ZS51cGRhdGUob2JqZWN0KTsKKwkv
KiB1cGRhdGVfZGlyKHBhcmVudCkgKi8KKwlyZXMgKz0gaW5vZGVfZmlsZV9wbHVnaW4ocGFyZW50
KS0+ZXN0aW1hdGUudXBkYXRlKHBhcmVudCk7CisJLyogc2FmZS1saW5rICovCisJcmVzICs9IGVz
dGltYXRlX29uZV9pdGVtX3JlbW92YWwocmVpc2VyNF90cmVlX2J5X2lub2RlKG9iamVjdCkpOwor
CisJcmV0dXJuIHJlczsKK30KKworLyogRXN0aW1hdGUgZGlzayBzcGFjZSBuZWNlc3NhcnkgdG8g
cmVtb3ZlIGEgbGluayBiZXR3ZWVuIEBwYXJlbnQgYW5kCisgICBAb2JqZWN0LgorKi8KK3N0YXRp
YyByZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX3VubGluayhzdHJ1Y3QgaW5vZGUgKnBhcmVudCAv
KiBwYXJlbnQKKwkJCQkJCQkgICAgICAqIGRpcmVjdG9yeSAqLywKKwkJCQkJc3RydWN0IGlub2Rl
ICpvYmplY3QgLyogb2JqZWN0IHRvIHdoaWNoCisJCQkJCQkJICAgICAgKiBuZXcgbGluayBpcwor
CQkJCQkJCSAgICAgICogYmVpbmcgY3JlYXRlZAorCQkJCQkJCSAgICAgICovKQoreworCXJlaXNl
cjRfYmxvY2tfbnIgcmVzID0gMDsKKwlmaWxlX3BsdWdpbiAqZnBsdWc7CisJZGlyX3BsdWdpbiAq
ZHBsdWc7CisKKwlhc3NlcnQoInZwZi0zMTciLCBvYmplY3QgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2
cGYtMzE4IiwgcGFyZW50ICE9IE5VTEwpOworCisJZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihv
YmplY3QpOworCWRwbHVnID0gaW5vZGVfZGlyX3BsdWdpbihwYXJlbnQpOworCisJLyogcmVtX2Vu
dHJ5KHBhcmVudCkgKi8KKwlyZXMgKz0gZHBsdWctPmVzdGltYXRlLnJlbV9lbnRyeShwYXJlbnQp
OworCS8qIHJlaXNlcjRfZGVsX25saW5rKG9iamVjdCkgKi8KKwlyZXMgKz0gZnBsdWctPmVzdGlt
YXRlLnVwZGF0ZShvYmplY3QpOworCS8qIHVwZGF0ZV9kaXIocGFyZW50KSAqLworCXJlcyArPSBp
bm9kZV9maWxlX3BsdWdpbihwYXJlbnQpLT5lc3RpbWF0ZS51cGRhdGUocGFyZW50KTsKKwkvKiBm
cGx1Zy0+dW5saW5rICovCisJcmVzICs9IGZwbHVnLT5lc3RpbWF0ZS51bmxpbmsob2JqZWN0LCBw
YXJlbnQpOworCS8qIHNhZmUtbGluayAqLworCXJlcyArPSBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2l0
ZW0ocmVpc2VyNF90cmVlX2J5X2lub2RlKG9iamVjdCkpOworCisJcmV0dXJuIHJlczsKK30KKwor
LyogaGVscGVyIGZvciByZWlzZXI0X3VubGlua19jb21tb24uIEVzdGltYXRlIGFuZCBncmFiIHNw
YWNlIGZvciB1bmxpbmsuICovCitzdGF0aWMgaW50IHVubGlua19jaGVja19hbmRfZ3JhYihzdHJ1
Y3QgaW5vZGUgKnBhcmVudCwgc3RydWN0IGRlbnRyeSAqdmljdGltKQoreworCWZpbGVfcGx1Z2lu
ICpmcGx1ZzsKKwlzdHJ1Y3QgaW5vZGUgKmNoaWxkOworCWludCByZXN1bHQ7CisKKwlyZXN1bHQg
PSAwOworCWNoaWxkID0gdmljdGltLT5kX2lub2RlOworCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVn
aW4oY2hpbGQpOworCisJLyogY2hlY2sgZm9yIHJhY2Ugd2l0aCBjcmVhdGVfb2JqZWN0KCkgKi8K
KwlyZWlzZXI0X2NoZWNrX2ltbXV0YWJsZShjaGlsZCk7CisKKwkvKiBvYmplY3QgYmVpbmcgZGVs
ZXRlZCBzaG91bGQgaGF2ZSBzdGF0IGRhdGEgKi8KKwlhc3NlcnQoInZzLTk0OSIsICFyZWlzZXI0
X2lub2RlX2dldF9mbGFnKGNoaWxkLCBSRUlTRVI0X05PX1NEKSk7CisKKwkvKiBhc2sgb2JqZWN0
IHBsdWdpbiAqLworCWlmIChmcGx1Zy0+Y2FuX3JlbV9saW5rICE9IE5VTEwgJiYgIWZwbHVnLT5j
YW5fcmVtX2xpbmsoY2hpbGQpKQorCQlyZXR1cm4gUkVURVJSKC1FTk9URU1QVFkpOworCisJcmVz
dWx0ID0gKGludCllc3RpbWF0ZV91bmxpbmsocGFyZW50LCBjaGlsZCk7CisJaWYgKHJlc3VsdCA8
IDApCisJCXJldHVybiByZXN1bHQ7CisKKwlyZXR1cm4gcmVpc2VyNF9ncmFiX3Jlc2VydmVkKGNo
aWxkLT5pX3NiLCByZXN1bHQsIEJBX0NBTl9DT01NSVQpOworfQorCisvKiBoZWxwZXIgZm9yIHJl
aXNlcjRfc2V0YXR0cl9jb21tb24gKi8KK3N0YXRpYyBpbnQgc2V0YXR0cl9yZXNlcnZlKHJlaXNl
cjRfdHJlZSAqIHRyZWUpCit7CisJYXNzZXJ0KCJ2cy0xMDk2IiwgaXNfZ3JhYl9lbmFibGVkKGdl
dF9jdXJyZW50X2NvbnRleHQoKSkpOworCXJldHVybiByZWlzZXI0X2dyYWJfc3BhY2UoZXN0aW1h
dGVfb25lX2luc2VydF9pbnRvX2l0ZW0odHJlZSksCisJCQkJICBCQV9DQU5fQ09NTUlUKTsKK30K
KworLyogaGVscGVyIGZ1bmN0aW9uLiBTdGFuZGFyZHMgcmVxdWlyZSB0aGF0IGZvciBtYW55IGZp
bGUtc3lzdGVtIG9wZXJhdGlvbnMKKyAgIG9uIHN1Y2Nlc3MgY3RpbWUgYW5kIG10aW1lIG9mIHBh
cmVudCBkaXJlY3RvcnkgaXMgdG8gYmUgdXBkYXRlZC4gKi8KK2ludCByZWlzZXI0X3VwZGF0ZV9k
aXIoc3RydWN0IGlub2RlICpkaXIpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjUyNSIsIGRpciAhPSBO
VUxMKTsKKworCWRpci0+aV9jdGltZSA9IGRpci0+aV9tdGltZSA9IGN1cnJlbnRfdGltZShkaXIp
OworCXJldHVybiByZWlzZXI0X3VwZGF0ZV9zZChkaXIpOworfQorCisvKgorICBMb2NhbCB2YXJp
YWJsZXM6CisgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgIG1vZGUtbmFtZTogIkxDIgor
ICBjLWJhc2ljLW9mZnNldDogOAorICB0YWItd2lkdGg6IDgKKyAgZmlsbC1jb2x1bW46IDgwCisg
IHNjcm9sbC1zdGVwOiAxCisgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2lub2RlX29wc19yZW5hbWUuYyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaW5vZGVfb3BzX3JlbmFtZS5jCi0tLSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pbm9kZV9vcHNfcmVuYW1lLmMJMTk3MC0wMS0w
MSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Bs
dWdpbi9pbm9kZV9vcHNfcmVuYW1lLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NjUyMjIyNzEgKzAx
MDAKQEAgLTAsMCArMSw5NTggQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzLCAyMDA0
IGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1F
ICovCisKKyNpbmNsdWRlICIuLi9pbm9kZS5oIgorI2luY2x1ZGUgIi4uL3NhZmVfbGluay5oIgor
CitzdGF0aWMgY29uc3QgY2hhciAqcG9zc2libGVfbGVhayA9ICJQb3NzaWJsZSBkaXNrIHNwYWNl
IGxlYWsuIjsKKworLyogcmUtYmluZCBleGlzdGluZyBuYW1lIGF0IEBmcm9tX2Nvb3JkIGluIEBm
cm9tX2RpciB0byBwb2ludCB0byBAdG9faW5vZGUuCisKKyAgIEhlbHBlciBmdW5jdGlvbiBjYWxs
ZWQgZnJvbSBoYXNoZWRfcmVuYW1lKCkgKi8KK3N0YXRpYyBpbnQgcmVwbGFjZV9uYW1lKHN0cnVj
dCBpbm9kZSAqdG9faW5vZGUsCS8qIGlub2RlIHdoZXJlIEBmcm9tX2Nvb3JkIGlzCisJCQkJCQkg
KiB0byBiZSByZS10YXJnZXRlZCBhdCAqLworCQkJc3RydWN0IGlub2RlICpmcm9tX2RpciwJLyog
ZGlyZWN0b3J5IHdoZXJlIEBmcm9tX2Nvb3JkCisJCQkJCQkgKiBsaXZlcyAqLworCQkJc3RydWN0
IGlub2RlICpmcm9tX2lub2RlLCAvKiBpbm9kZSBAZnJvbV9jb29yZAorCQkJCQkJICAgKiBvcmln
aW5hbGx5IHBvaW50IHRvICovCisJCQljb29yZF90ICpmcm9tX2Nvb3JkLAkvKiB3aGVyZSBkaXJl
Y3RvcnkgZW50cnkgaXMgaW4KKwkJCQkJCSAqIHRoZSB0cmVlICovCisJCQlsb2NrX2hhbmRsZSAq
IGZyb21fbGgvKiBsb2NrIGhhbmRsZSBvbiBAZnJvbV9jb29yZCAqLykKK3sKKwlpdGVtX3BsdWdp
biAqZnJvbV9pdGVtOworCWludCByZXN1bHQ7CisJem5vZGUgKm5vZGU7CisKKwljb29yZF9jbGVh
cl9pcGx1Zyhmcm9tX2Nvb3JkKTsKKwlub2RlID0gZnJvbV9jb29yZC0+bm9kZTsKKwlyZXN1bHQg
PSB6bG9hZChub2RlKTsKKwlpZiAocmVzdWx0ICE9IDApCisJCXJldHVybiByZXN1bHQ7CisJZnJv
bV9pdGVtID0gaXRlbV9wbHVnaW5fYnlfY29vcmQoZnJvbV9jb29yZCk7CisJaWYgKHBsdWdpbl9v
Zl9ncm91cChpdGVtX3BsdWdpbl9ieV9jb29yZChmcm9tX2Nvb3JkKSwKKwkJCSAgICBESVJfRU5U
UllfSVRFTV9UWVBFKSkgeworCQlyZWlzZXI0X2tleSB0b19rZXk7CisKKwkJYnVpbGRfc2Rfa2V5
KHRvX2lub2RlLCAmdG9fa2V5KTsKKworCQkvKiBldmVyeXRoaW5nIGlzIGZvdW5kIGFuZCBwcmVw
YXJlZCB0byBjaGFuZ2UgZGlyZWN0b3J5IGVudHJ5CisJCSAgIGF0IEBmcm9tX2Nvb3JkIHRvIHBv
aW50IHRvIEB0b19pbm9kZS4KKworCQkgICBAdG9faW5vZGUgaXMganVzdCBhYm91dCB0byBnZXQg
bmV3IG5hbWUsIHNvIGJ1bXAgaXRzIGxpbmsKKwkJICAgY291bnRlci4KKworCQkgKi8KKwkJcmVz
dWx0ID0gcmVpc2VyNF9hZGRfbmxpbmsodG9faW5vZGUsIGZyb21fZGlyLCAwKTsKKwkJaWYgKHJl
c3VsdCAhPSAwKSB7CisJCQkvKiBEb24ndCBpc3N1ZSB3YXJuaW5nOiB0aGlzIG1heSBiZSBwbGFp
biAtRU1MSU5LICovCisJCQl6cmVsc2Uobm9kZSk7CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisK
KwkJcmVzdWx0ID0KKwkJICAgIGZyb21faXRlbS0+cy5kaXIudXBkYXRlX2tleShmcm9tX2Nvb3Jk
LCAmdG9fa2V5LCBmcm9tX2xoKTsKKwkJaWYgKHJlc3VsdCAhPSAwKSB7CisJCQlyZWlzZXI0X2Rl
bF9ubGluayh0b19pbm9kZSwgZnJvbV9kaXIsIDApOworCQkJenJlbHNlKG5vZGUpOworCQkJcmV0
dXJuIHJlc3VsdDsKKwkJfQorCisJCS8qIEBmcm9tX2lub2RlIGp1c3QgbG9zdCBpdHMgbmFtZSwg
aGUtaGUuCisKKwkJICAgSWYgQGZyb21faW5vZGUgd2FzIGRpcmVjdG9yeSwgaXQgY29udGFpbmVk
IGRvdGRvdCBwb2ludGluZworCQkgICB0byBAZnJvbV9kaXIuIEBmcm9tX2RpciBpX25saW5rIHdp
bGwgYmUgZGVjcmVhc2VkIHdoZW4KKwkJICAgaXB1dCgpIHdpbGwgYmUgY2FsbGVkIG9uIEBmcm9t
X2lub2RlLgorCisJCSAgIElmIGZpbGUtc3lzdGVtIGlzIG5vdCBBREcgKGhhcmQtbGlua3MgYXJl
CisJCSAgIHN1cHBvcnRlZCBvbiBkaXJlY3RvcmllcyksIGlwdXQoZnJvbV9pbm9kZSkgd2lsbCBu
b3QgcmVtb3ZlCisJCSAgIEBmcm9tX2lub2RlLCBhbmQgdGh1cyBhYm92ZSBpcyBpbmNvcnJlY3Qs
IGJ1dCBoYXJkLWxpbmtzIG9uCisJCSAgIGRpcmVjdG9yaWVzIGFyZSBwcm9ibGVtYXRpYyBpbiBt
YW55IG90aGVyIHJlc3BlY3RzLgorCQkgKi8KKwkJcmVzdWx0ID0gcmVpc2VyNF9kZWxfbmxpbmso
ZnJvbV9pbm9kZSwgZnJvbV9kaXIsIDApOworCQlpZiAocmVzdWx0ICE9IDApIHsKKwkJCXdhcm5p
bmcoIm5pa2l0YS0yMzMwIiwKKwkJCQkiQ2Fubm90IHJlbW92ZSBsaW5rIGZyb20gc291cmNlOiAl
aS4gJXMiLAorCQkJCXJlc3VsdCwgcG9zc2libGVfbGVhayk7CisJCX0KKwkJLyogSGFzIHRvIHJl
dHVybiBzdWNjZXNzLCBiZWNhdXNlIGVudHJ5IGlzIGFscmVhZHkKKwkJICogbW9kaWZpZWQuICov
CisJCXJlc3VsdCA9IDA7CisKKwkJLyogTk9URS1OSUtJVEEgY29uc2lkZXIgY2FsbGluZyBwbHVn
aW4gbWV0aG9kIGluIHN0ZWFkIG9mCisJCSAgIGFjY2Vzc2luZyBpbm9kZSBmaWVsZHMgZGlyZWN0
bHkuICovCisJCWZyb21fZGlyLT5pX210aW1lID0gY3VycmVudF90aW1lKGZyb21fZGlyKTsKKwl9
IGVsc2UgeworCQl3YXJuaW5nKCJuaWtpdGEtMjMyNiIsICJVbmV4cGVjdGVkIGl0ZW0gdHlwZSIp
OworCQlyZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJfQorCXpyZWxzZShub2RlKTsKKwlyZXR1cm4g
cmVzdWx0OworfQorCisvKiBhZGQgbmV3IGVudHJ5IHBvaW50aW5nIHRvIEBpbm9kZSBpbnRvIEBk
aXIgYXQgQGNvb3JkLCBsb2NrZWQgYnkgQGxoCisKKyAgIEhlbHBlciBmdW5jdGlvbiB1c2VkIGJ5
IGhhc2hlZF9yZW5hbWUoKS4gKi8KK3N0YXRpYyBpbnQgYWRkX25hbWUoc3RydWN0IGlub2RlICpp
bm9kZSwJLyogaW5vZGUgd2hlcmUgQGNvb3JkIGlzIHRvIGJlCisJCQkJCQkgKiByZS10YXJnZXRl
ZCBhdCAqLworCQkgICAgc3RydWN0IGlub2RlICpkaXIsCS8qIGRpcmVjdG9yeSB3aGVyZSBAY29v
cmQgbGl2ZXMgKi8KKwkJICAgIHN0cnVjdCBkZW50cnkgKm5hbWUsCS8qIG5ldyBuYW1lICovCisJ
CSAgICBjb29yZF90ICpjb29yZCwJLyogd2hlcmUgZGlyZWN0b3J5IGVudHJ5IGlzIGluIHRoZSB0
cmVlCisJCQkJCSAqLworCQkgICAgbG9ja19oYW5kbGUgKiBsaCwJLyogbG9jayBoYW5kbGUgb24g
QGNvb3JkICovCisJCSAgICBpbnQgaXNfZGlyLyogdHJ1ZSwgaWYgQGlub2RlIGlzIGRpcmVjdG9y
eSAqLykKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgZW50cnk7CisK
Kwlhc3NlcnQoIm5pa2l0YS0yMzMzIiwgbGgtPm5vZGUgPT0gY29vcmQtPm5vZGUpOworCWFzc2Vy
dCgibmlraXRhLTIzMzQiLCBpc19kaXIgPT0gU19JU0RJUihpbm9kZS0+aV9tb2RlKSk7CisKKwlt
ZW1zZXQoJmVudHJ5LCAwLCBzaXplb2YgZW50cnkpOworCWVudHJ5Lm9iaiA9IGlub2RlOworCS8q
IGJ1aWxkIGtleSBvZiBkaXJlY3RvcnkgZW50cnkgZGVzY3JpcHRpb24gKi8KKwlpbm9kZV9kaXJf
cGx1Z2luKGRpciktPmJ1aWxkX2VudHJ5X2tleShkaXIsICZuYW1lLT5kX25hbWUsICZlbnRyeS5r
ZXkpOworCisJLyogZXh0MiBkb2VzIHRoaXMgaW4gZGlmZmVyZW50IG9yZGVyOiBmaXJzdCBpbnNl
cnRzIG5ldyBlbnRyeSwKKwkgICB0aGVuIGluY3JlYXNlcyBkaXJlY3RvcnkgbmxpbmsuIFdlIGRv
bid0IHdhbnQgZG8gdGhpcywKKwkgICBiZWNhdXNlIHJlaXNlcjRfYWRkX25saW5rKCkgY2FsbHMg
LT5hZGRfbGluaygpIHBsdWdpbgorCSAgIG1ldGhvZCB0aGF0IGNhbiBmYWlsIGZvciB3aGF0ZXZl
ciByZWFzb24sIGxlYXZpbmcgYXMgd2l0aAorCSAgIGNsZWFudXAgcHJvYmxlbXMuCisJICovCisJ
LyogQGlub2RlIGlzIGdldHRpbmcgbmV3IG5hbWUgKi8KKwlyZWlzZXI0X2FkZF9ubGluayhpbm9k
ZSwgZGlyLCAwKTsKKwkvKiBjcmVhdGUgQG5ld19uYW1lIGluIEBuZXdfZGlyIHBvaW50aW5nIHRv
CisJICAgQG9sZF9pbm9kZSAqLworCXJlc3VsdCA9IFdJVEhfQ09PUkQoY29vcmQsCisJCQkgICAg
aW5vZGVfZGlyX2l0ZW1fcGx1Z2luKGRpciktPnMuZGlyLmFkZF9lbnRyeShkaXIsCisJCQkJCQkJ
CQljb29yZCwKKwkJCQkJCQkJCWxoLAorCQkJCQkJCQkJbmFtZSwKKwkJCQkJCQkJCSZlbnRyeSkp
OworCWlmIChyZXN1bHQgIT0gMCkgeworCQlpbnQgcmVzdWx0MjsKKwkJcmVzdWx0MiA9IHJlaXNl
cjRfZGVsX25saW5rKGlub2RlLCBkaXIsIDApOworCQlpZiAocmVzdWx0MiAhPSAwKSB7CisJCQl3
YXJuaW5nKCJuaWtpdGEtMjMyNyIsCisJCQkJIkNhbm5vdCBkcm9wIGxpbmsgb24gJWxsaSAlaS4g
JXMiLAorCQkJCSh1bnNpZ25lZCBsb25nIGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSksCisJCQkJ
cmVzdWx0MiwgcG9zc2libGVfbGVhayk7CisJCX0KKwl9IGVsc2UKKwkJSU5PREVfSU5DX0ZJRUxE
KGRpciwgaV9zaXplKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgcmVpc2VyNF9ibG9j
a19uciBlc3RpbWF0ZV9yZW5hbWUoc3RydWN0IGlub2RlICpvbGRfZGlyLCAgLyogZGlyZWN0b3J5
CisJCQkJCQkJCSAqIHdoZXJlIEBvbGQgaXMKKwkJCQkJCQkJICogbG9jYXRlZCAqLworCQkJCQlz
dHJ1Y3QgZGVudHJ5ICpvbGRfbmFtZSwvKiBvbGQgbmFtZSAqLworCQkJCQlzdHJ1Y3QgaW5vZGUg
Km5ld19kaXIsICAvKiBkaXJlY3RvcnkKKwkJCQkJCQkJICogd2hlcmUgQG5ldyBpcworCQkJCQkJ
CQkgKiBsb2NhdGVkICovCisJCQkJCXN0cnVjdCBkZW50cnkgKm5ld19uYW1lIC8qIG5ldyBuYW1l
ICovKQoreworCXJlaXNlcjRfYmxvY2tfbnIgcmVzMSwgcmVzMjsKKwlkaXJfcGx1Z2luICogcF9w
YXJlbnRfb2xkLCAqcF9wYXJlbnRfbmV3OworCWZpbGVfcGx1Z2luICogcF9jaGlsZF9vbGQsICpw
X2NoaWxkX25ldzsKKworCWFzc2VydCgidnBmLTMxMSIsIG9sZF9kaXIgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJ2cGYtMzEyIiwgbmV3X2RpciAhPSBOVUxMKTsKKwlhc3NlcnQoInZwZi0zMTMiLCBvbGRf
bmFtZSAhPSBOVUxMKTsKKwlhc3NlcnQoInZwZi0zMTQiLCBuZXdfbmFtZSAhPSBOVUxMKTsKKwor
CXBfcGFyZW50X29sZCA9IGlub2RlX2Rpcl9wbHVnaW4ob2xkX2Rpcik7CisJcF9wYXJlbnRfbmV3
ID0gaW5vZGVfZGlyX3BsdWdpbihuZXdfZGlyKTsKKwlwX2NoaWxkX29sZCA9IGlub2RlX2ZpbGVf
cGx1Z2luKG9sZF9uYW1lLT5kX2lub2RlKTsKKwlpZiAobmV3X25hbWUtPmRfaW5vZGUpCisJCXBf
Y2hpbGRfbmV3ID0gaW5vZGVfZmlsZV9wbHVnaW4obmV3X25hbWUtPmRfaW5vZGUpOworCWVsc2UK
KwkJcF9jaGlsZF9uZXcgPSBOVUxMOworCisJLyogZmluZF9lbnRyeSAtIGNhbiBpbnNlcnQgb25l
IGxlYWYuICovCisJcmVzMSA9IHJlczIgPSAxOworCisJLyogcmVwbGFjZV9uYW1lICovCisJewor
CQkvKiByZWlzZXI0X2FkZF9ubGluayhwX2NoaWxkX29sZCkgYW5kCisJCSAqIHJlaXNlcjRfZGVs
X25saW5rKHBfY2hpbGRfb2xkKSAqLworCQlyZXMxICs9IDIgKiBwX2NoaWxkX29sZC0+ZXN0aW1h
dGUudXBkYXRlKG9sZF9uYW1lLT5kX2lub2RlKTsKKwkJLyogdXBkYXRlIGtleSAqLworCQlyZXMx
ICs9IDE7CisJCS8qIHJlaXNlcjRfZGVsX25saW5rKHBfY2hpbGRfbmV3KSAqLworCQlpZiAocF9j
aGlsZF9uZXcpCisJCQlyZXMxICs9IHBfY2hpbGRfbmV3LT5lc3RpbWF0ZS51cGRhdGUobmV3X25h
bWUtPmRfaW5vZGUpOworCX0KKworCS8qIGVsc2UgYWRkX25hbWUgKi8KKwl7CisJCS8qIHJlaXNl
cjRfYWRkX25saW5rKHBfcGFyZW50X25ldykgYW5kCisJCSAqIHJlaXNlcjRfZGVsX25saW5rKHBf
cGFyZW50X25ldykgKi8KKwkJcmVzMiArPQorCQkgICAgMiAqIGlub2RlX2ZpbGVfcGx1Z2luKG5l
d19kaXIpLT5lc3RpbWF0ZS51cGRhdGUobmV3X2Rpcik7CisJCS8qIHJlaXNlcjRfYWRkX25saW5r
KHBfcGFyZW50X29sZCkgKi8KKwkJcmVzMiArPSBwX2NoaWxkX29sZC0+ZXN0aW1hdGUudXBkYXRl
KG9sZF9uYW1lLT5kX2lub2RlKTsKKwkJLyogYWRkX2VudHJ5KHBfcGFyZW50X25ldykgKi8KKwkJ
cmVzMiArPSBwX3BhcmVudF9uZXctPmVzdGltYXRlLmFkZF9lbnRyeShuZXdfZGlyKTsKKwkJLyog
cmVpc2VyNF9kZWxfbmxpbmsocF9wYXJlbnRfb2xkKSAqLworCQlyZXMyICs9IHBfY2hpbGRfb2xk
LT5lc3RpbWF0ZS51cGRhdGUob2xkX25hbWUtPmRfaW5vZGUpOworCX0KKworCXJlczEgPSByZXMx
IDwgcmVzMiA/IHJlczIgOiByZXMxOworCisJLyogcmVpc2VyNF93cml0ZV9zZChwX3BhcmVudF9u
ZXcpICovCisJcmVzMSArPSBpbm9kZV9maWxlX3BsdWdpbihuZXdfZGlyKS0+ZXN0aW1hdGUudXBk
YXRlKG5ld19kaXIpOworCisJLyogcmVpc2VyNF93cml0ZV9zZChwX2NoaWxkX25ldykgKi8KKwlp
ZiAocF9jaGlsZF9uZXcpCisJCXJlczEgKz0gcF9jaGlsZF9uZXctPmVzdGltYXRlLnVwZGF0ZShu
ZXdfbmFtZS0+ZF9pbm9kZSk7CisKKwkvKiBoYXNoZWRfcmVtX2VudHJ5KHBfcGFyZW50X29sZCkg
Ki8KKwlyZXMxICs9IHBfcGFyZW50X29sZC0+ZXN0aW1hdGUucmVtX2VudHJ5KG9sZF9kaXIpOwor
CisJLyogcmVpc2VyNF9kZWxfbmxpbmsocF9jaGlsZF9vbGQpICovCisJcmVzMSArPSBwX2NoaWxk
X29sZC0+ZXN0aW1hdGUudXBkYXRlKG9sZF9uYW1lLT5kX2lub2RlKTsKKworCS8qIHJlcGxhY2Vf
bmFtZSAqLworCXsKKwkJLyogcmVpc2VyNF9hZGRfbmxpbmsocF9wYXJlbnRfZGlyX25ldykgKi8K
KwkJcmVzMSArPSBpbm9kZV9maWxlX3BsdWdpbihuZXdfZGlyKS0+ZXN0aW1hdGUudXBkYXRlKG5l
d19kaXIpOworCQkvKiB1cGRhdGVfa2V5ICovCisJCXJlczEgKz0gMTsKKwkJLyogcmVpc2VyNF9k
ZWxfbmxpbmsocF9wYXJlbnRfbmV3KSAqLworCQlyZXMxICs9IGlub2RlX2ZpbGVfcGx1Z2luKG5l
d19kaXIpLT5lc3RpbWF0ZS51cGRhdGUobmV3X2Rpcik7CisJCS8qIHJlaXNlcjRfZGVsX25saW5r
KHBfcGFyZW50X29sZCkgKi8KKwkJcmVzMSArPSBpbm9kZV9maWxlX3BsdWdpbihvbGRfZGlyKS0+
ZXN0aW1hdGUudXBkYXRlKG9sZF9kaXIpOworCX0KKworCS8qIHJlaXNlcjRfd3JpdGVfc2QocF9w
YXJlbnRfb2xkKSAqLworCXJlczEgKz0gaW5vZGVfZmlsZV9wbHVnaW4ob2xkX2RpciktPmVzdGlt
YXRlLnVwZGF0ZShvbGRfZGlyKTsKKworCS8qIHJlaXNlcjRfd3JpdGVfc2QocF9jaGlsZF9vbGQp
ICovCisJcmVzMSArPSBwX2NoaWxkX29sZC0+ZXN0aW1hdGUudXBkYXRlKG9sZF9uYW1lLT5kX2lu
b2RlKTsKKworCXJldHVybiByZXMxOworfQorCitzdGF0aWMgaW50IGhhc2hlZF9yZW5hbWVfZXN0
aW1hdGVfYW5kX2dyYWIoc3RydWN0IGlub2RlICpvbGRfZGlyLCAgLyogZGlyZWN0b3J5CisJCQkJ
CQkJCSAgICAqIHdoZXJlIEBvbGQKKwkJCQkJCQkJICAgICogaXMgbG9jYXRlZAorCQkJCQkJCQkg
ICAgKi8KKwkJCQkJICAgc3RydWN0IGRlbnRyeSAqb2xkX25hbWUsLyogb2xkIG5hbWUKKwkJCQkJ
CQkJICAgICovCisJCQkJCSAgIHN0cnVjdCBpbm9kZSAqbmV3X2RpciwgIC8qIGRpcmVjdG9yeQor
CQkJCQkJCQkgICAgKiB3aGVyZSBAbmV3CisJCQkJCQkJCSAgICAqIGlzIGxvY2F0ZWQKKwkJCQkJ
CQkJICAgICovCisJCQkJCSAgIHN0cnVjdCBkZW50cnkgKm5ld19uYW1lIC8qIG5ldyBuYW1lCisJ
CQkJCQkJCSAgICAqLykKK3sKKwlyZWlzZXI0X2Jsb2NrX25yIHJlc2VydmU7CisKKwlyZXNlcnZl
ID0gZXN0aW1hdGVfcmVuYW1lKG9sZF9kaXIsIG9sZF9uYW1lLCBuZXdfZGlyLCBuZXdfbmFtZSk7
CisKKwlpZiAocmVpc2VyNF9ncmFiX3NwYWNlKHJlc2VydmUsIEJBX0NBTl9DT01NSVQpKQorCQly
ZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCisJcmV0dXJuIDA7Cit9CisKKy8qIGNoZWNrIHdoZXRo
ZXIgQG9sZF9pbm9kZSBhbmQgQG5ld19pbm9kZSBjYW4gYmUgbW92ZWQgd2l0aGluIGZpbGUgc3lz
dGVtCisgKiB0cmVlLiBUaGlzIHNpbmdsZXMgb3V0IGF0dGVtcHRzIHRvIHJlbmFtZSBwc2V1ZG8t
ZmlsZXMsIGZvciBleGFtcGxlLiAqLworc3RhdGljIGludCBjYW5fcmVuYW1lKHN0cnVjdCBpbm9k
ZSAqb2xkX2Rpciwgc3RydWN0IGlub2RlICpvbGRfaW5vZGUsCisJCSAgICAgIHN0cnVjdCBpbm9k
ZSAqbmV3X2Rpciwgc3RydWN0IGlub2RlICpuZXdfaW5vZGUpCit7CisJZmlsZV9wbHVnaW4gKmZw
bHVnOworCWRpcl9wbHVnaW4gKmRwbHVnOworCisJYXNzZXJ0KCJuaWtpdGEtMzM3MCIsIG9sZF9p
bm9kZSAhPSBOVUxMKTsKKworCWRwbHVnID0gaW5vZGVfZGlyX3BsdWdpbihuZXdfZGlyKTsKKwlm
cGx1ZyA9IGlub2RlX2ZpbGVfcGx1Z2luKG9sZF9pbm9kZSk7CisKKwlpZiAoZHBsdWcgPT0gTlVM
TCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PVERJUik7CisJZWxzZSBpZiAobmV3X2Rpci0+aV9vcC0+
Y3JlYXRlID09IE5VTEwpCisJCXJldHVybiBSRVRFUlIoLUVQRVJNKTsKKwllbHNlIGlmICghZnBs
dWctPmNhbl9hZGRfbGluayhvbGRfaW5vZGUpKQorCQlyZXR1cm4gUkVURVJSKC1FTUxJTkspOwor
CWVsc2UgaWYgKG5ld19pbm9kZSAhPSBOVUxMKSB7CisJCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVn
aW4obmV3X2lub2RlKTsKKwkJaWYgKGZwbHVnLT5jYW5fcmVtX2xpbmsgIT0gTlVMTCAmJgorCQkg
ICAgIWZwbHVnLT5jYW5fcmVtX2xpbmsobmV3X2lub2RlKSkKKwkJCXJldHVybiBSRVRFUlIoLUVC
VVNZKTsKKwl9CisJcmV0dXJuIDA7Cit9CisKK2ludCByZWlzZXI0X2ZpbmRfZW50cnkoc3RydWN0
IGlub2RlICosIHN0cnVjdCBkZW50cnkgKiwgbG9ja19oYW5kbGUgKiAsCisJICAgICAgIHpub2Rl
X2xvY2tfbW9kZSwgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqKTsKK2ludCByZWlzZXI0X3VwZGF0
ZV9kaXIoc3RydWN0IGlub2RlICopOworCisvKiB0aGlzIGlzIGNvbW1vbiBpbXBsZW1lbnRhdGlv
biBvZiB2ZnMncyByZW5hbWUyIG1ldGhvZCBvZiBzdHJ1Y3QKKyAgIGlub2RlX29wZXJhdGlvbnMK
KyAgIFNlZSBjb21tZW50cyBpbiB0aGUgYm9keS4KKworICAgSXQgaXMgYXJndWFibGUgdGhhdCB0
aGlzIGZ1bmN0aW9uIGNhbiBiZSBtYWRlIGdlbmVyaWMgc28sIHRoYXQgaXQKKyAgIHdpbGwgYmUg
YXBwbGljYWJsZSB0byBhbnkga2luZCBvZiBkaXJlY3RvcnkgcGx1Z2luIHRoYXQgZGVhbHMgd2l0
aAorICAgZGlyZWN0b3JpZXMgY29tcG9zZWQgb3V0IG9mIGRpcmVjdG9yeSBlbnRyaWVzLiBUaGUg
b25seSBvYnN0YWNsZQorICAgaGVyZSBpcyB0aGF0IHdlIGRvbid0IGhhdmUgYW55IGRhdGEtdHlw
ZSB0byByZXByZXNlbnQgZGlyZWN0b3J5CisgICBlbnRyeS4gVGhpcyBzaG91bGQgYmUgcmUtY29u
c2lkZXJlZCB3aGVuIG1vcmUgdGhhbiBvbmUgZGlmZmVyZW50CisgICBkaXJlY3RvcnkgcGx1Z2lu
IHdpbGwgYmUgaW1wbGVtZW50ZWQuCisqLworaW50IHJlaXNlcjRfcmVuYW1lMl9jb21tb24oc3Ry
dWN0IGlub2RlICpvbGRfZGlyIC8qIGRpcmVjdG9yeSB3aGVyZSBAb2xkCisJCQkJCQkgICogaXMg
bG9jYXRlZCAqLyAsCisJCQkgICBzdHJ1Y3QgZGVudHJ5ICpvbGRfbmFtZSAvKiBvbGQgbmFtZSAq
LyAsCisJCQkgICBzdHJ1Y3QgaW5vZGUgKm5ld19kaXIgLyogZGlyZWN0b3J5IHdoZXJlIEBuZXcK
KwkJCQkJCSAgKiBpcyBsb2NhdGVkICovICwKKwkJCSAgIHN0cnVjdCBkZW50cnkgKm5ld19uYW1l
IC8qIG5ldyBuYW1lICovICwKKwkJCSAgIHVuc2lnbmVkIGZsYWdzIC8qIHNwZWNpZmljIGZsYWdz
ICovKQoreworCS8qIEZyb20gYFRoZSBPcGVuIEdyb3VwIEJhc2UgU3BlY2lmaWNhdGlvbnMgSXNz
dWUgNicKKworCSAgIElmIGVpdGhlciB0aGUgb2xkIG9yIG5ldyBhcmd1bWVudCBuYW1lcyBhIHN5
bWJvbGljIGxpbmssIHJlbmFtZSgpCisJICAgc2hhbGwgb3BlcmF0ZSBvbiB0aGUgc3ltYm9saWMg
bGluayBpdHNlbGYsIGFuZCBzaGFsbCBub3QgcmVzb2x2ZQorCSAgIHRoZSBsYXN0IGNvbXBvbmVu
dCBvZiB0aGUgYXJndW1lbnQuIElmIHRoZSBvbGQgYXJndW1lbnQgYW5kIHRoZSBuZXcKKwkgICBh
cmd1bWVudCByZXNvbHZlIHRvIHRoZSBzYW1lIGV4aXN0aW5nIGZpbGUsIHJlbmFtZSgpIHNoYWxs
IHJldHVybgorCSAgIHN1Y2Nlc3NmdWxseSBhbmQgcGVyZm9ybSBubyBvdGhlciBhY3Rpb24uCisK
KwkgICBbdGhpcyBpcyBkb25lIGJ5IFZGUzogdmZzX3JlbmFtZSgpXQorCisJICAgSWYgdGhlIG9s
ZCBhcmd1bWVudCBwb2ludHMgdG8gdGhlIHBhdGhuYW1lIG9mIGEgZmlsZSB0aGF0IGlzIG5vdCBh
CisJICAgZGlyZWN0b3J5LCB0aGUgbmV3IGFyZ3VtZW50IHNoYWxsIG5vdCBwb2ludCB0byB0aGUg
cGF0aG5hbWUgb2YgYQorCSAgIGRpcmVjdG9yeS4KKworCSAgIFtjaGVja2VkIGJ5IFZGUzogdmZz
X3JlbmFtZS0+bWF5X2RlbGV0ZSgpXQorCisJICAgSWYgdGhlIGxpbmsgbmFtZWQgYnkgdGhlIG5l
dyBhcmd1bWVudCBleGlzdHMsIGl0IHNoYWxsCisJICAgYmUgcmVtb3ZlZCBhbmQgb2xkIHJlbmFt
ZWQgdG8gbmV3LiBJbiB0aGlzIGNhc2UsIGEgbGluayBuYW1lZCBuZXcKKwkgICBzaGFsbCByZW1h
aW4gdmlzaWJsZSB0byBvdGhlciBwcm9jZXNzZXMgdGhyb3VnaG91dCB0aGUgcmVuYW1pbmcKKwkg
ICBvcGVyYXRpb24gYW5kIHJlZmVyIGVpdGhlciB0byB0aGUgZmlsZSByZWZlcnJlZCB0byBieSBu
ZXcgb3Igb2xkCisJICAgYmVmb3JlIHRoZSBvcGVyYXRpb24gYmVnYW4uCisKKwkgICBbd2Ugc2hv
dWxkIGFzc3VyZSB0aGlzXQorCisJICAgV3JpdGUgYWNjZXNzIHBlcm1pc3Npb24gaXMgcmVxdWly
ZWQgZm9yCisJICAgYm90aCB0aGUgZGlyZWN0b3J5IGNvbnRhaW5pbmcgb2xkIGFuZCB0aGUgZGly
ZWN0b3J5IGNvbnRhaW5pbmcgbmV3LgorCisJICAgW2NoZWNrZWQgYnkgVkZTOiB2ZnNfcmVuYW1l
LT5tYXlfZGVsZXRlKCksIG1heV9jcmVhdGUoKV0KKworCSAgIElmIHRoZSBvbGQgYXJndW1lbnQg
cG9pbnRzIHRvIHRoZSBwYXRobmFtZSBvZiBhIGRpcmVjdG9yeSwgdGhlIG5ldworCSAgIGFyZ3Vt
ZW50IHNoYWxsIG5vdCBwb2ludCB0byB0aGUgcGF0aG5hbWUgb2YgYSBmaWxlIHRoYXQgaXMgbm90
IGEKKwkgICBkaXJlY3RvcnkuCisKKwkgICBbY2hlY2tlZCBieSBWRlM6IHZmc19yZW5hbWUtPm1h
eV9kZWxldGUoKV0KKworCSAgIElmIHRoZSBkaXJlY3RvcnkgbmFtZWQgYnkgdGhlIG5ldyBhcmd1
bWVudCBleGlzdHMsIGl0CisJICAgc2hhbGwgYmUgcmVtb3ZlZCBhbmQgb2xkIHJlbmFtZWQgdG8g
bmV3LiBJbiB0aGlzIGNhc2UsIGEgbGluayBuYW1lZAorCSAgIG5ldyBzaGFsbCBleGlzdCB0aHJv
dWdob3V0IHRoZSByZW5hbWluZyBvcGVyYXRpb24gYW5kIHNoYWxsIHJlZmVyCisJICAgZWl0aGVy
IHRvIHRoZSBkaXJlY3RvcnkgcmVmZXJyZWQgdG8gYnkgbmV3IG9yIG9sZCBiZWZvcmUgdGhlCisJ
ICAgb3BlcmF0aW9uIGJlZ2FuLgorCisJICAgW3dlIHNob3VsZCBhc3N1cmUgdGhpc10KKworCSAg
IElmIG5ldyBuYW1lcyBhbiBleGlzdGluZyBkaXJlY3RvcnksIGl0IHNoYWxsIGJlCisJICAgcmVx
dWlyZWQgdG8gYmUgYW4gZW1wdHkgZGlyZWN0b3J5LgorCisJICAgW3dlIHNob3VsZCBjaGVjayB0
aGlzXQorCisJICAgSWYgdGhlIG9sZCBhcmd1bWVudCBwb2ludHMgdG8gYSBwYXRobmFtZSBvZiBh
IHN5bWJvbGljIGxpbmssIHRoZQorCSAgIHN5bWJvbGljIGxpbmsgc2hhbGwgYmUgcmVuYW1lZC4g
SWYgdGhlIG5ldyBhcmd1bWVudCBwb2ludHMgdG8gYQorCSAgIHBhdGhuYW1lIG9mIGEgc3ltYm9s
aWMgbGluaywgdGhlIHN5bWJvbGljIGxpbmsgc2hhbGwgYmUgcmVtb3ZlZC4KKworCSAgIFRoZSBu
ZXcgcGF0aG5hbWUgc2hhbGwgbm90IGNvbnRhaW4gYSBwYXRoIHByZWZpeCB0aGF0IG5hbWVzCisJ
ICAgb2xkLiBXcml0ZSBhY2Nlc3MgcGVybWlzc2lvbiBpcyByZXF1aXJlZCBmb3IgdGhlIGRpcmVj
dG9yeQorCSAgIGNvbnRhaW5pbmcgb2xkIGFuZCB0aGUgZGlyZWN0b3J5IGNvbnRhaW5pbmcgbmV3
LiBJZiB0aGUgb2xkCisJICAgYXJndW1lbnQgcG9pbnRzIHRvIHRoZSBwYXRobmFtZSBvZiBhIGRp
cmVjdG9yeSwgd3JpdGUgYWNjZXNzCisJICAgcGVybWlzc2lvbiBtYXkgYmUgcmVxdWlyZWQgZm9y
IHRoZSBkaXJlY3RvcnkgbmFtZWQgYnkgb2xkLCBhbmQsIGlmCisJICAgaXQgZXhpc3RzLCB0aGUg
ZGlyZWN0b3J5IG5hbWVkIGJ5IG5ldy4KKworCSAgIFtjaGVja2VkIGJ5IFZGUzogdmZzX3JlbmFt
ZSgpLCB2ZnNfcmVuYW1lX2RpcigpXQorCisJICAgSWYgdGhlIGxpbmsgbmFtZWQgYnkgdGhlIG5l
dyBhcmd1bWVudCBleGlzdHMgYW5kIHRoZSBmaWxlJ3MgbGluaworCSAgIGNvdW50IGJlY29tZXMg
MCB3aGVuIGl0IGlzIHJlbW92ZWQgYW5kIG5vIHByb2Nlc3MgaGFzIHRoZSBmaWxlCisJICAgb3Bl
biwgdGhlIHNwYWNlIG9jY3VwaWVkIGJ5IHRoZSBmaWxlIHNoYWxsIGJlIGZyZWVkIGFuZCB0aGUg
ZmlsZQorCSAgIHNoYWxsIG5vIGxvbmdlciBiZSBhY2Nlc3NpYmxlLiBJZiBvbmUgb3IgbW9yZSBw
cm9jZXNzZXMgaGF2ZSB0aGUKKwkgICBmaWxlIG9wZW4gd2hlbiB0aGUgbGFzdCBsaW5rIGlzIHJl
bW92ZWQsIHRoZSBsaW5rIHNoYWxsIGJlIHJlbW92ZWQKKwkgICBiZWZvcmUgcmVuYW1lKCkgcmV0
dXJucywgYnV0IHRoZSByZW1vdmFsIG9mIHRoZSBmaWxlIGNvbnRlbnRzIHNoYWxsCisJICAgYmUg
cG9zdHBvbmVkIHVudGlsIGFsbCByZWZlcmVuY2VzIHRvIHRoZSBmaWxlIGFyZSBjbG9zZWQuCisK
KwkgICBbaXB1dCgpIGhhbmRsZXMgdGhpcywgYnV0IHdlIGNhbiBkbyB0aGlzIG1hbnVhbGx5LCBh
IGxhCisJICAgcmVpc2VyNF91bmxpbmsoKV0KKworCSAgIFVwb24gc3VjY2Vzc2Z1bCBjb21wbGV0
aW9uLCByZW5hbWUoKSBzaGFsbCBtYXJrIGZvciB1cGRhdGUgdGhlCisJICAgc3RfY3RpbWUgYW5k
IHN0X210aW1lIGZpZWxkcyBvZiB0aGUgcGFyZW50IGRpcmVjdG9yeSBvZiBlYWNoIGZpbGUuCisK
KwkgICBbTi9BXQorCisJICovCisKKwkvKiBGcm9tIERvY3VtZW50YXRpb24vZmlsZXN5c3RlbXMv
dmZzLnR4dDoKKworCSAgIHJlbmFtZTI6IHRoaXMgaGFzIGFuIGFkZGl0aW9uYWwgZmxhZ3MgYXJn
dW1lbnQgY29tcGFyZWQgdG8gcmVuYW1lLgorCQlmIG5vIGZsYWdzIGFyZSBzdXBwb3J0ZWQgYnkg
dGhlIGZpbGVzeXN0ZW0gdGhlbiB0aGlzIG1ldGhvZAorCQluZWVkIG5vdCBiZSBpbXBsZW1lbnRl
ZC4gIElmIHNvbWUgZmxhZ3MgYXJlIHN1cHBvcnRlZCB0aGVuIHRoZQorCQlmaWxlc3lzdGVtIG11
c3QgcmV0dXJuIC1FSU5WQUwgZm9yIGFueSB1bnN1cHBvcnRlZCBvciB1bmtub3duCisJCWZsYWdz
LiAgQ3VycmVudGx5IHRoZSBmb2xsb3dpbmcgZmxhZ3MgYXJlIGltcGxlbWVudGVkOgorCQkoMSkg
UkVOQU1FX05PUkVQTEFDRTogdGhpcyBmbGFnIGluZGljYXRlcyB0aGF0IGlmIHRoZSB0YXJnZXQK
KwkJb2YgdGhlIHJlbmFtZSBleGlzdHMgdGhlIHJlbmFtZSBzaG91bGQgZmFpbCB3aXRoIC1FRVhJ
U1QKKwkJaW5zdGVhZCBvZiByZXBsYWNpbmcgdGhlIHRhcmdldC4gIFRoZSBWRlMgYWxyZWFkeSBj
aGVja3MgZm9yCisJCWV4aXN0ZW5jZSwgc28gZm9yIGxvY2FsIGZpbGVzeXN0ZW1zIHRoZSBSRU5B
TUVfTk9SRVBMQUNFCisJCWltcGxlbWVudGF0aW9uIGlzIGVxdWl2YWxlbnQgdG8gcGxhaW4gcmVu
YW1lLgorCQkoMikgUkVOQU1FX0VYQ0hBTkdFOiBleGNoYW5nZSBzb3VyY2UgYW5kIHRhcmdldC4g
IEJvdGggbXVzdAorCQlleGlzdDsgdGhpcyBpcyBjaGVja2VkIGJ5IHRoZSBWRlMuICBVbmxpa2Ug
cGxhaW4gcmVuYW1lLAorCQlzb3VyY2UgYW5kIHRhcmdldCBtYXkgYmUgb2YgZGlmZmVyZW50IHR5
cGUuCisJICovCisKKwlzdGF0aWMgY29uc3QgdW5zaWduZWQgc3VwcG9ydGVkX2ZsYWdzID0gUkVO
QU1FX05PUkVQTEFDRTsKKworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCWludCByZXN1bHQ7CisJ
aW50IGlzX2RpcjsJCS8qIGlzIEBvbGRfbmFtZSBkaXJlY3RvcnkgKi8KKworCXN0cnVjdCBpbm9k
ZSAqb2xkX2lub2RlOworCXN0cnVjdCBpbm9kZSAqbmV3X2lub2RlOworCWNvb3JkX3QgKm5ld19j
b29yZDsKKworCXN0cnVjdCByZWlzZXI0X2RlbnRyeV9mc2RhdGEgKm5ld19mc2RhdGE7CisJZGly
X3BsdWdpbiAqZHBsdWc7CisJZmlsZV9wbHVnaW4gKmZwbHVnOworCisJcmVpc2VyNF9kaXJfZW50
cnlfZGVzYyAqb2xkX2VudHJ5LCAqbmV3X2VudHJ5LCAqZG90ZG90X2VudHJ5OworCWxvY2tfaGFu
ZGxlICogbmV3X2xoLCAqZG90ZG90X2xoOworCXN0cnVjdCBkZW50cnkgKmRvdGRvdF9uYW1lOwor
CXN0cnVjdCByZWlzZXI0X2RlbnRyeV9mc2RhdGEgKmRhdGFvbnN0YWNrOworCisJY3R4ID0gcmVp
c2VyNF9pbml0X2NvbnRleHQob2xkX2Rpci0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQly
ZXR1cm4gUFRSX0VSUihjdHgpOworCisJLyoKKwkgKiBDaGVjayByZW5hbWUyKCkgZmxhZ3MuCisJ
ICoKKwkgKiAiSWYgc29tZSBmbGFncyBhcmUgc3VwcG9ydGVkIHRoZW4gdGhlIGZpbGVzeXN0ZW0g
bXVzdCByZXR1cm4KKwkgKiAtRUlOVkFMIGZvciBhbnkgdW5zdXBwb3J0ZWQgb3IgdW5rbm93biBm
bGFncy4iCisJICoKKwkgKiBXZSBzdXBwb3J0OgorCSAqIC0gUkVOQU1FX05PUkVQTEFDRSAobm8t
b3ApCisJICovCisJaWYgKChmbGFncyAmIHN1cHBvcnRlZF9mbGFncykgIT0gZmxhZ3MpCisJCXJl
dHVybiBSRVRFUlIoLUVJTlZBTCk7CisKKwlvbGRfZW50cnkgPSBremFsbG9jKDMgKiBzaXplb2Yo
Km9sZF9lbnRyeSkgKyAyICogc2l6ZW9mKCpuZXdfbGgpICsKKwkJCSAgICBzaXplb2YoKmRvdGRv
dF9uYW1lKSArIHNpemVvZigqZGF0YW9uc3RhY2spLAorCQkJICAgIHJlaXNlcjRfY3R4X2dmcF9t
YXNrX2dldCgpKTsKKwlpZiAoIW9sZF9lbnRyeSkgeworCQljb250ZXh0X3NldF9jb21taXRfYXN5
bmMoY3R4KTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJcmV0dXJuIFJFVEVSUigt
RU5PTUVNKTsKKwl9CisKKwluZXdfZW50cnkgPSBvbGRfZW50cnkgKyAxOworCWRvdGRvdF9lbnRy
eSA9IG9sZF9lbnRyeSArIDI7CisJbmV3X2xoID0gKGxvY2tfaGFuZGxlICopKG9sZF9lbnRyeSAr
IDMpOworCWRvdGRvdF9saCA9IG5ld19saCArIDE7CisJZG90ZG90X25hbWUgPSAoc3RydWN0IGRl
bnRyeSAqKShuZXdfbGggKyAyKTsKKwlkYXRhb25zdGFjayA9IChzdHJ1Y3QgcmVpc2VyNF9kZW50
cnlfZnNkYXRhICopKGRvdGRvdF9uYW1lICsgMSk7CisKKwlhc3NlcnQoIm5pa2l0YS0yMzE4Iiwg
b2xkX2RpciAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMzE5IiwgbmV3X2RpciAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS0yMzIwIiwgb2xkX25hbWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtMjMyMSIsIG5ld19uYW1lICE9IE5VTEwpOworCisJb2xkX2lub2RlID0gb2xkX25hbWUt
PmRfaW5vZGU7CisJbmV3X2lub2RlID0gbmV3X25hbWUtPmRfaW5vZGU7CisKKwlkcGx1ZyA9IGlu
b2RlX2Rpcl9wbHVnaW4ob2xkX2Rpcik7CisJZnBsdWcgPSBOVUxMOworCisJbmV3X2ZzZGF0YSA9
IHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEobmV3X25hbWUpOworCWlmIChJU19FUlIobmV3X2Zz
ZGF0YSkpIHsKKwkJa2ZyZWUob2xkX2VudHJ5KTsKKwkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5j
KGN0eCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiBQVFJfRVJSKG5l
d19mc2RhdGEpOworCX0KKworCW5ld19jb29yZCA9ICZuZXdfZnNkYXRhLT5kZWMuZW50cnlfY29v
cmQ7CisJY29vcmRfY2xlYXJfaXBsdWcobmV3X2Nvb3JkKTsKKworCWlzX2RpciA9IFNfSVNESVIo
b2xkX2lub2RlLT5pX21vZGUpOworCisJYXNzZXJ0KCJuaWtpdGEtMzQ2MSIsIG9sZF9pbm9kZS0+
aV9ubGluayA+PSAxICsgISFpc19kaXIpOworCisJLyogaWYgdGFyZ2V0IGlzIGV4aXN0aW5nIGRp
cmVjdG9yeSBhbmQgaXQncyBub3QgZW1wdHktLS1yZXR1cm4gZXJyb3IuCisKKwkgICBUaGlzIGNo
ZWNrIGlzIGRvbmUgc3BlY2lmaWNhbGx5LCBiZWNhdXNlIGlzX2Rpcl9lbXB0eSgpIHJlcXVpcmVz
CisJICAgdHJlZSB0cmF2ZXJzYWwgYW5kIGhhdmUgdG8gYmUgZG9uZSBiZWZvcmUgbG9ja3MgYXJl
IHRha2VuLgorCSAqLworCWlmIChpc19kaXIgJiYgbmV3X2lub2RlICE9IE5VTEwgJiYgaXNfZGly
X2VtcHR5KG5ld19pbm9kZSkgIT0gMCkgeworCQlrZnJlZShvbGRfZW50cnkpOworCQljb250ZXh0
X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwkJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwkJ
cmV0dXJuIFJFVEVSUigtRU5PVEVNUFRZKTsKKwl9CisKKwlyZXN1bHQgPSBjYW5fcmVuYW1lKG9s
ZF9kaXIsIG9sZF9pbm9kZSwgbmV3X2RpciwgbmV3X2lub2RlKTsKKwlpZiAocmVzdWx0ICE9IDAp
IHsKKwkJa2ZyZWUob2xkX2VudHJ5KTsKKwkJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7
CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJ
cmVzdWx0ID0gaGFzaGVkX3JlbmFtZV9lc3RpbWF0ZV9hbmRfZ3JhYihvbGRfZGlyLCBvbGRfbmFt
ZSwKKwkJCQkJCSBuZXdfZGlyLCBuZXdfbmFtZSk7CisJaWYgKHJlc3VsdCAhPSAwKSB7CisJCWtm
cmVlKG9sZF9lbnRyeSk7CisJCWNvbnRleHRfc2V0X2NvbW1pdF9hc3luYyhjdHgpOworCQlyZWlz
ZXI0X2V4aXRfY29udGV4dChjdHgpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCWluaXRfbGgo
bmV3X2xoKTsKKworCS8qIGZpbmQgZW50cnkgZm9yIEBuZXdfbmFtZSAqLworCXJlc3VsdCA9IHJl
aXNlcjRfZmluZF9lbnRyeShuZXdfZGlyLCBuZXdfbmFtZSwgbmV3X2xoLCBaTk9ERV9XUklURV9M
T0NLLAorCQkJCSAgICBuZXdfZW50cnkpOworCisJaWYgKElTX0NCS0VSUihyZXN1bHQpKSB7CisJ
CWRvbmVfbGgobmV3X2xoKTsKKwkJa2ZyZWUob2xkX2VudHJ5KTsKKwkJY29udGV4dF9zZXRfY29t
bWl0X2FzeW5jKGN0eCk7CisJCXJlaXNlcjRfZXhpdF9jb250ZXh0KGN0eCk7CisJCXJldHVybiBy
ZXN1bHQ7CisJfQorCisJcmVpc2VyNF9zZWFsX2RvbmUoJm5ld19mc2RhdGEtPmRlYy5lbnRyeV9z
ZWFsKTsKKworCS8qIGFkZCBvciByZXBsYWNlIG5hbWUgZm9yIEBvbGRfaW5vZGUgYXMgQG5ld19u
YW1lICovCisJaWYgKG5ld19pbm9kZSAhPSBOVUxMKSB7CisJCS8qIHRhcmdldCAoQG5ld19uYW1l
KSBleGlzdHMuICovCisJCS8qIE5vdCBjbGVhciB3aGF0IHRvIGRvIHdpdGggb2JqZWN0cyB0aGF0
IGFyZQorCQkgICBib3RoIGRpcmVjdG9yaWVzIGFuZCBmaWxlcyBhdCB0aGUgc2FtZSB0aW1lLiAq
LworCQlpZiAocmVzdWx0ID09IENCS19DT09SRF9GT1VORCkgeworCQkJcmVzdWx0ID0gcmVwbGFj
ZV9uYW1lKG9sZF9pbm9kZSwKKwkJCQkJICAgICAgbmV3X2RpciwKKwkJCQkJICAgICAgbmV3X2lu
b2RlLCBuZXdfY29vcmQsIG5ld19saCk7CisJCQlpZiAocmVzdWx0ID09IDApCisJCQkJZnBsdWcg
PSBpbm9kZV9maWxlX3BsdWdpbihuZXdfaW5vZGUpOworCQl9IGVsc2UgaWYgKHJlc3VsdCA9PSBD
QktfQ09PUkRfTk9URk9VTkQpIHsKKwkJCS8qIFZGUyB0b2xkIHVzIHRoYXQgQG5ld19uYW1lIGlz
IGJvdW5kIHRvIGV4aXN0aW5nCisJCQkgICBpbm9kZSwgYnV0IHdlIGZhaWxlZCB0byBmaW5kIGRp
cmVjdG9yeSBlbnRyeS4gKi8KKwkJCXdhcm5pbmcoIm5pa2l0YS0yMzI0IiwgIlRhcmdldCBub3Qg
Zm91bmQiKTsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRU5PRU5UKTsKKwkJfQorCX0gZWxzZSB7CisJ
CS8qIHRhcmdldCAoQG5ld19uYW1lKSBkb2Vzbid0IGV4aXN0cy4gKi8KKwkJaWYgKHJlc3VsdCA9
PSBDQktfQ09PUkRfTk9URk9VTkQpCisJCQlyZXN1bHQgPSBhZGRfbmFtZShvbGRfaW5vZGUsCisJ
CQkJCSAgbmV3X2RpciwKKwkJCQkJICBuZXdfbmFtZSwgbmV3X2Nvb3JkLCBuZXdfbGgsIGlzX2Rp
cik7CisJCWVsc2UgaWYgKHJlc3VsdCA9PSBDQktfQ09PUkRfRk9VTkQpIHsKKwkJCS8qIFZGUyB0
b2xkIHVzIHRoYXQgQG5ld19uYW1lIGlzICJuZWdhdGl2ZSIgZGVudHJ5LAorCQkJICAgYnV0IHdl
IGZvdW5kIGRpcmVjdG9yeSBlbnRyeS4gKi8KKwkJCXdhcm5pbmcoIm5pa2l0YS0yMzMxIiwgIlRh
cmdldCBmb3VuZCB1bmV4cGVjdGVkbHkiKTsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJ
fQorCX0KKworCWFzc2VydCgibmlraXRhLTM0NjIiLCBlcmdvKHJlc3VsdCA9PSAwLAorCQkJCSAg
IG9sZF9pbm9kZS0+aV9ubGluayA+PSAyICsgISFpc19kaXIpKTsKKworCS8qIFdlIGFyZSBkb25l
IHdpdGggYWxsIG1vZGlmaWNhdGlvbnMgdG8gdGhlIEBuZXdfZGlyLCByZWxlYXNlIGxvY2sgb24K
KwkgICBub2RlLiAqLworCWRvbmVfbGgobmV3X2xoKTsKKworCWlmIChmcGx1ZyAhPSBOVUxMKSB7
CisJCS8qIGRldGFjaCBAbmV3X2lub2RlIGZyb20gbmFtZS1zcGFjZSAqLworCQlyZXN1bHQgPSBm
cGx1Zy0+ZGV0YWNoKG5ld19pbm9kZSwgbmV3X2Rpcik7CisJCWlmIChyZXN1bHQgIT0gMCkKKwkJ
CXdhcm5pbmcoIm5pa2l0YS0yMzMwIiwgIkNhbm5vdCBkZXRhY2ggJWxsaTogJWkuICVzIiwKKwkJ
CQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQobmV3X2lub2RlKSwKKwkJCQlyZXN1
bHQsIHBvc3NpYmxlX2xlYWspOworCX0KKworCWlmIChuZXdfaW5vZGUgIT0gTlVMTCkKKwkJcmVp
c2VyNF91cGRhdGVfc2QobmV3X2lub2RlKTsKKworCWlmIChyZXN1bHQgPT0gMCkgeworCQlvbGRf
ZW50cnktPm9iaiA9IG9sZF9pbm9kZTsKKworCQlkcGx1Zy0+YnVpbGRfZW50cnlfa2V5KG9sZF9k
aXIsCisJCQkJICAgICAgICZvbGRfbmFtZS0+ZF9uYW1lLCAmb2xkX2VudHJ5LT5rZXkpOworCisJ
CS8qIEF0IHRoaXMgc3RhZ2UgbmV3IG5hbWUgd2FzIGludHJvZHVjZWQgZm9yCisJCSAgIEBvbGRf
aW5vZGUuIEBvbGRfaW5vZGUsIEBuZXdfZGlyLCBhbmQgQG5ld19pbm9kZSBpX25saW5rCisJCSAg
IGNvdW50ZXJzIHdlcmUgdXBkYXRlZC4KKworCQkgICBXZSB3YW50IHRvIHJlbW92ZSBAb2xkX25h
bWUgbm93LiBJZiBAb2xkX2lub2RlIHdhc24ndAorCQkgICBkaXJlY3RvcnkgdGhpcyBpcyBzaW1w
bGUuCisJCSAqLworCQlyZXN1bHQgPSBkcGx1Zy0+cmVtX2VudHJ5KG9sZF9kaXIsIG9sZF9uYW1l
LCBvbGRfZW50cnkpOworCQlpZiAocmVzdWx0ICE9IDAgJiYgcmVzdWx0ICE9IC1FTk9NRU0pIHsK
KwkJCXdhcm5pbmcoIm5pa2l0YS0yMzM1IiwKKwkJCQkiQ2Fubm90IHJlbW92ZSBvbGQgbmFtZTog
JWkiLCByZXN1bHQpOworCQl9IGVsc2UgeworCQkJcmVzdWx0ID0gcmVpc2VyNF9kZWxfbmxpbmso
b2xkX2lub2RlLCBvbGRfZGlyLCAwKTsKKwkJCWlmIChyZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0g
LUVOT01FTSkgeworCQkJCXdhcm5pbmcoIm5pa2l0YS0yMzM3IiwKKwkJCQkJIkNhbm5vdCBkcm9w
IGxpbmsgb24gb2xkOiAlaSIsIHJlc3VsdCk7CisJCQl9CisJCX0KKworCQlpZiAocmVzdWx0ID09
IDAgJiYgaXNfZGlyKSB7CisJCQkvKiBAb2xkX2lub2RlIGlzIGRpcmVjdG9yeS4gV2UgYWxzbyBo
YXZlIHRvIHVwZGF0ZQorCQkJICAgZG90ZG90IGVudHJ5LiAqLworCQkJY29vcmRfdCAqZG90ZG90
X2Nvb3JkOworCisJCQltZW1zZXQoZGF0YW9uc3RhY2ssIDAsIHNpemVvZigqZGF0YW9uc3RhY2sp
KTsKKwkJCW1lbXNldChkb3Rkb3RfZW50cnksIDAsIHNpemVvZigqZG90ZG90X2VudHJ5KSk7CisJ
CQlkb3Rkb3RfZW50cnktPm9iaiA9IG9sZF9kaXI7CisJCQltZW1zZXQoZG90ZG90X25hbWUsIDAs
IHNpemVvZigqZG90ZG90X25hbWUpKTsKKwkJCWRvdGRvdF9uYW1lLT5kX25hbWUubmFtZSA9ICIu
LiI7CisJCQlkb3Rkb3RfbmFtZS0+ZF9uYW1lLmxlbiA9IDI7CisJCQkvKgorCQkJICogYWxsb2Nh
dGUgLT5kX2ZzZGF0YSBvbiB0aGUgc3RhY2sgdG8gYXZvaWQgdXNpbmcKKwkJCSAqIHJlaXNlcjRf
Z2V0X2RlbnRyeV9mc2RhdGEoKS4gTG9ja2luZyBpcyBub3QgbmVlZGVkLAorCQkJICogYmVjYXVz
ZSBkZW50cnkgaXMgcHJpdmF0ZSB0byB0aGUgY3VycmVudCB0aHJlYWQuCisJCQkgKi8KKwkJCWRv
dGRvdF9uYW1lLT5kX2ZzZGF0YSA9IGRhdGFvbnN0YWNrOworCQkJaW5pdF9saChkb3Rkb3RfbGgp
OworCisJCQlkb3Rkb3RfY29vcmQgPSAmZGF0YW9uc3RhY2stPmRlYy5lbnRyeV9jb29yZDsKKwkJ
CWNvb3JkX2NsZWFyX2lwbHVnKGRvdGRvdF9jb29yZCk7CisKKwkJCXJlc3VsdCA9IHJlaXNlcjRf
ZmluZF9lbnRyeShvbGRfaW5vZGUsIGRvdGRvdF9uYW1lLAorCQkJCQkJICAgIGRvdGRvdF9saCwg
Wk5PREVfV1JJVEVfTE9DSywKKwkJCQkJCSAgICBkb3Rkb3RfZW50cnkpOworCQkJaWYgKHJlc3Vs
dCA9PSAwKSB7CisJCQkJLyogcmVwbGFjZV9uYW1lKCkgZGVjcmVhc2VzIGlfbmxpbmsgb24KKwkJ
CQkgKiBAb2xkX2RpciAqLworCQkJCXJlc3VsdCA9IHJlcGxhY2VfbmFtZShuZXdfZGlyLAorCQkJ
CQkJICAgICAgb2xkX2lub2RlLAorCQkJCQkJICAgICAgb2xkX2RpciwKKwkJCQkJCSAgICAgIGRv
dGRvdF9jb29yZCwgZG90ZG90X2xoKTsKKwkJCX0gZWxzZQorCQkJCXJlc3VsdCA9IFJFVEVSUigt
RUlPKTsKKwkJCWRvbmVfbGgoZG90ZG90X2xoKTsKKwkJfQorCX0KKwlyZWlzZXI0X3VwZGF0ZV9k
aXIobmV3X2Rpcik7CisJcmVpc2VyNF91cGRhdGVfZGlyKG9sZF9kaXIpOworCXJlaXNlcjRfdXBk
YXRlX3NkKG9sZF9pbm9kZSk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWZpbGVfcGx1Z2luICpm
cGx1ZzsKKworCQlpZiAobmV3X2lub2RlICE9IE5VTEwpIHsKKwkJCS8qIGFkZCBzYWZlLWxpbmsg
Zm9yIHRhcmdldCBmaWxlIChpbiBjYXNlIHdlIHJlbW92ZWQKKwkJCSAqIGxhc3QgcmVmZXJlbmNl
IHRvIHRoZSBwb29yIGZlbGxvdyAqLworCQkJZnBsdWcgPSBpbm9kZV9maWxlX3BsdWdpbihuZXdf
aW5vZGUpOworCQkJaWYgKG5ld19pbm9kZS0+aV9ubGluayA9PSAwKQorCQkJCXJlc3VsdCA9IHNh
ZmVfbGlua19hZGQobmV3X2lub2RlLCBTQUZFX1VOTElOSyk7CisJCX0KKwl9CisJa2ZyZWUob2xk
X2VudHJ5KTsKKwljb250ZXh0X3NldF9jb21taXRfYXN5bmMoY3R4KTsKKwlyZWlzZXI0X2V4aXRf
Y29udGV4dChjdHgpOworCXJldHVybiByZXN1bHQ7Cit9CisKKyNpZiAwCitpbnQgcmVpc2VyNF9y
ZW5hbWVfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2xkX2RpciAvKiBkaXJlY3Rvcnkgd2hlcmUgQG9s
ZAorCQkJCQkJICogaXMgbG9jYXRlZCAqLyAsCisJCQkgIHN0cnVjdCBkZW50cnkgKm9sZF9uYW1l
IC8qIG9sZCBuYW1lICovICwKKwkJCSAgc3RydWN0IGlub2RlICpuZXdfZGlyIC8qIGRpcmVjdG9y
eSB3aGVyZSBAbmV3CisJCQkJCQkgKiBpcyBsb2NhdGVkICovICwKKwkJCSAgc3RydWN0IGRlbnRy
eSAqbmV3X25hbWUvKiBuZXcgbmFtZSAqLykKK3sKKwkvKiBGcm9tIGBUaGUgT3BlbiBHcm91cCBC
YXNlIFNwZWNpZmljYXRpb25zIElzc3VlIDYnCisKKwkgICBJZiBlaXRoZXIgdGhlIG9sZCBvciBu
ZXcgYXJndW1lbnQgbmFtZXMgYSBzeW1ib2xpYyBsaW5rLCByZW5hbWUoKQorCSAgIHNoYWxsIG9w
ZXJhdGUgb24gdGhlIHN5bWJvbGljIGxpbmsgaXRzZWxmLCBhbmQgc2hhbGwgbm90IHJlc29sdmUK
KwkgICB0aGUgbGFzdCBjb21wb25lbnQgb2YgdGhlIGFyZ3VtZW50LiBJZiB0aGUgb2xkIGFyZ3Vt
ZW50IGFuZCB0aGUgbmV3CisJICAgYXJndW1lbnQgcmVzb2x2ZSB0byB0aGUgc2FtZSBleGlzdGlu
ZyBmaWxlLCByZW5hbWUoKSBzaGFsbCByZXR1cm4KKwkgICBzdWNjZXNzZnVsbHkgYW5kIHBlcmZv
cm0gbm8gb3RoZXIgYWN0aW9uLgorCisJICAgW3RoaXMgaXMgZG9uZSBieSBWRlM6IHZmc19yZW5h
bWUoKV0KKworCSAgIElmIHRoZSBvbGQgYXJndW1lbnQgcG9pbnRzIHRvIHRoZSBwYXRobmFtZSBv
ZiBhIGZpbGUgdGhhdCBpcyBub3QgYQorCSAgIGRpcmVjdG9yeSwgdGhlIG5ldyBhcmd1bWVudCBz
aGFsbCBub3QgcG9pbnQgdG8gdGhlIHBhdGhuYW1lIG9mIGEKKwkgICBkaXJlY3RvcnkuCisKKwkg
ICBbY2hlY2tlZCBieSBWRlM6IHZmc19yZW5hbWUtPm1heV9kZWxldGUoKV0KKworCSAgIElmIHRo
ZSBsaW5rIG5hbWVkIGJ5IHRoZSBuZXcgYXJndW1lbnQgZXhpc3RzLCBpdCBzaGFsbAorCSAgIGJl
IHJlbW92ZWQgYW5kIG9sZCByZW5hbWVkIHRvIG5ldy4gSW4gdGhpcyBjYXNlLCBhIGxpbmsgbmFt
ZWQgbmV3CisJICAgc2hhbGwgcmVtYWluIHZpc2libGUgdG8gb3RoZXIgcHJvY2Vzc2VzIHRocm91
Z2hvdXQgdGhlIHJlbmFtaW5nCisJICAgb3BlcmF0aW9uIGFuZCByZWZlciBlaXRoZXIgdG8gdGhl
IGZpbGUgcmVmZXJyZWQgdG8gYnkgbmV3IG9yIG9sZAorCSAgIGJlZm9yZSB0aGUgb3BlcmF0aW9u
IGJlZ2FuLgorCisJICAgW3dlIHNob3VsZCBhc3N1cmUgdGhpc10KKworCSAgIFdyaXRlIGFjY2Vz
cyBwZXJtaXNzaW9uIGlzIHJlcXVpcmVkIGZvcgorCSAgIGJvdGggdGhlIGRpcmVjdG9yeSBjb250
YWluaW5nIG9sZCBhbmQgdGhlIGRpcmVjdG9yeSBjb250YWluaW5nIG5ldy4KKworCSAgIFtjaGVj
a2VkIGJ5IFZGUzogdmZzX3JlbmFtZS0+bWF5X2RlbGV0ZSgpLCBtYXlfY3JlYXRlKCldCisKKwkg
ICBJZiB0aGUgb2xkIGFyZ3VtZW50IHBvaW50cyB0byB0aGUgcGF0aG5hbWUgb2YgYSBkaXJlY3Rv
cnksIHRoZSBuZXcKKwkgICBhcmd1bWVudCBzaGFsbCBub3QgcG9pbnQgdG8gdGhlIHBhdGhuYW1l
IG9mIGEgZmlsZSB0aGF0IGlzIG5vdCBhCisJICAgZGlyZWN0b3J5LgorCisJICAgW2NoZWNrZWQg
YnkgVkZTOiB2ZnNfcmVuYW1lLT5tYXlfZGVsZXRlKCldCisKKwkgICBJZiB0aGUgZGlyZWN0b3J5
IG5hbWVkIGJ5IHRoZSBuZXcgYXJndW1lbnQgZXhpc3RzLCBpdAorCSAgIHNoYWxsIGJlIHJlbW92
ZWQgYW5kIG9sZCByZW5hbWVkIHRvIG5ldy4gSW4gdGhpcyBjYXNlLCBhIGxpbmsgbmFtZWQKKwkg
ICBuZXcgc2hhbGwgZXhpc3QgdGhyb3VnaG91dCB0aGUgcmVuYW1pbmcgb3BlcmF0aW9uIGFuZCBz
aGFsbCByZWZlcgorCSAgIGVpdGhlciB0byB0aGUgZGlyZWN0b3J5IHJlZmVycmVkIHRvIGJ5IG5l
dyBvciBvbGQgYmVmb3JlIHRoZQorCSAgIG9wZXJhdGlvbiBiZWdhbi4KKworCSAgIFt3ZSBzaG91
bGQgYXNzdXJlIHRoaXNdCisKKwkgICBJZiBuZXcgbmFtZXMgYW4gZXhpc3RpbmcgZGlyZWN0b3J5
LCBpdCBzaGFsbCBiZQorCSAgIHJlcXVpcmVkIHRvIGJlIGFuIGVtcHR5IGRpcmVjdG9yeS4KKwor
CSAgIFt3ZSBzaG91bGQgY2hlY2sgdGhpc10KKworCSAgIElmIHRoZSBvbGQgYXJndW1lbnQgcG9p
bnRzIHRvIGEgcGF0aG5hbWUgb2YgYSBzeW1ib2xpYyBsaW5rLCB0aGUKKwkgICBzeW1ib2xpYyBs
aW5rIHNoYWxsIGJlIHJlbmFtZWQuIElmIHRoZSBuZXcgYXJndW1lbnQgcG9pbnRzIHRvIGEKKwkg
ICBwYXRobmFtZSBvZiBhIHN5bWJvbGljIGxpbmssIHRoZSBzeW1ib2xpYyBsaW5rIHNoYWxsIGJl
IHJlbW92ZWQuCisKKwkgICBUaGUgbmV3IHBhdGhuYW1lIHNoYWxsIG5vdCBjb250YWluIGEgcGF0
aCBwcmVmaXggdGhhdCBuYW1lcworCSAgIG9sZC4gV3JpdGUgYWNjZXNzIHBlcm1pc3Npb24gaXMg
cmVxdWlyZWQgZm9yIHRoZSBkaXJlY3RvcnkKKwkgICBjb250YWluaW5nIG9sZCBhbmQgdGhlIGRp
cmVjdG9yeSBjb250YWluaW5nIG5ldy4gSWYgdGhlIG9sZAorCSAgIGFyZ3VtZW50IHBvaW50cyB0
byB0aGUgcGF0aG5hbWUgb2YgYSBkaXJlY3RvcnksIHdyaXRlIGFjY2VzcworCSAgIHBlcm1pc3Np
b24gbWF5IGJlIHJlcXVpcmVkIGZvciB0aGUgZGlyZWN0b3J5IG5hbWVkIGJ5IG9sZCwgYW5kLCBp
ZgorCSAgIGl0IGV4aXN0cywgdGhlIGRpcmVjdG9yeSBuYW1lZCBieSBuZXcuCisKKwkgICBbY2hl
Y2tlZCBieSBWRlM6IHZmc19yZW5hbWUoKSwgdmZzX3JlbmFtZV9kaXIoKV0KKworCSAgIElmIHRo
ZSBsaW5rIG5hbWVkIGJ5IHRoZSBuZXcgYXJndW1lbnQgZXhpc3RzIGFuZCB0aGUgZmlsZSdzIGxp
bmsKKwkgICBjb3VudCBiZWNvbWVzIDAgd2hlbiBpdCBpcyByZW1vdmVkIGFuZCBubyBwcm9jZXNz
IGhhcyB0aGUgZmlsZQorCSAgIG9wZW4sIHRoZSBzcGFjZSBvY2N1cGllZCBieSB0aGUgZmlsZSBz
aGFsbCBiZSBmcmVlZCBhbmQgdGhlIGZpbGUKKwkgICBzaGFsbCBubyBsb25nZXIgYmUgYWNjZXNz
aWJsZS4gSWYgb25lIG9yIG1vcmUgcHJvY2Vzc2VzIGhhdmUgdGhlCisJICAgZmlsZSBvcGVuIHdo
ZW4gdGhlIGxhc3QgbGluayBpcyByZW1vdmVkLCB0aGUgbGluayBzaGFsbCBiZSByZW1vdmVkCisJ
ICAgYmVmb3JlIHJlbmFtZSgpIHJldHVybnMsIGJ1dCB0aGUgcmVtb3ZhbCBvZiB0aGUgZmlsZSBj
b250ZW50cyBzaGFsbAorCSAgIGJlIHBvc3Rwb25lZCB1bnRpbCBhbGwgcmVmZXJlbmNlcyB0byB0
aGUgZmlsZSBhcmUgY2xvc2VkLgorCisJICAgW2lwdXQoKSBoYW5kbGVzIHRoaXMsIGJ1dCB3ZSBj
YW4gZG8gdGhpcyBtYW51YWxseSwgYSBsYQorCSAgIHJlaXNlcjRfdW5saW5rKCldCisKKwkgICBV
cG9uIHN1Y2Nlc3NmdWwgY29tcGxldGlvbiwgcmVuYW1lKCkgc2hhbGwgbWFyayBmb3IgdXBkYXRl
IHRoZQorCSAgIHN0X2N0aW1lIGFuZCBzdF9tdGltZSBmaWVsZHMgb2YgdGhlIHBhcmVudCBkaXJl
Y3Rvcnkgb2YgZWFjaCBmaWxlLgorCisJICAgW04vQV0KKworCSAqLworCXJlaXNlcjRfY29udGV4
dCAqY3R4OworCWludCByZXN1bHQ7CisJaW50IGlzX2RpcjsJCS8qIGlzIEBvbGRfbmFtZSBkaXJl
Y3RvcnkgKi8KKwlzdHJ1Y3QgaW5vZGUgKm9sZF9pbm9kZTsKKwlzdHJ1Y3QgaW5vZGUgKm5ld19p
bm9kZTsKKwlyZWlzZXI0X2Rpcl9lbnRyeV9kZXNjIG9sZF9lbnRyeTsKKwlyZWlzZXI0X2Rpcl9l
bnRyeV9kZXNjIG5ld19lbnRyeTsKKwljb29yZF90ICpuZXdfY29vcmQ7CisJc3RydWN0IHJlaXNl
cjRfZGVudHJ5X2ZzZGF0YSAqbmV3X2ZzZGF0YTsKKwlsb2NrX2hhbmRsZSBuZXdfbGg7CisJZGly
X3BsdWdpbiAqZHBsdWc7CisJZmlsZV9wbHVnaW4gKmZwbHVnOworCisJY3R4ID0gcmVpc2VyNF9p
bml0X2NvbnRleHQob2xkX2Rpci0+aV9zYik7CisJaWYgKElTX0VSUihjdHgpKQorCQlyZXR1cm4g
UFRSX0VSUihjdHgpOworCisJYXNzZXJ0KCJuaWtpdGEtMjMxOCIsIG9sZF9kaXIgIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtMjMxOSIsIG5ld19kaXIgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtMjMyMCIsIG9sZF9uYW1lICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTIzMjEiLCBuZXdf
bmFtZSAhPSBOVUxMKTsKKworCW9sZF9pbm9kZSA9IG9sZF9uYW1lLT5kX2lub2RlOworCW5ld19p
bm9kZSA9IG5ld19uYW1lLT5kX2lub2RlOworCisJZHBsdWcgPSBpbm9kZV9kaXJfcGx1Z2luKG9s
ZF9kaXIpOworCWZwbHVnID0gTlVMTDsKKworCW5ld19mc2RhdGEgPSByZWlzZXI0X2dldF9kZW50
cnlfZnNkYXRhKG5ld19uYW1lKTsKKwlpZiAoSVNfRVJSKG5ld19mc2RhdGEpKSB7CisJCXJlc3Vs
dCA9IFBUUl9FUlIobmV3X2ZzZGF0YSk7CisJCWdvdG8gZXhpdDsKKwl9CisKKwluZXdfY29vcmQg
PSAmbmV3X2ZzZGF0YS0+ZGVjLmVudHJ5X2Nvb3JkOworCWNvb3JkX2NsZWFyX2lwbHVnKG5ld19j
b29yZCk7CisKKwlpc19kaXIgPSBTX0lTRElSKG9sZF9pbm9kZS0+aV9tb2RlKTsKKworCWFzc2Vy
dCgibmlraXRhLTM0NjEiLCBvbGRfaW5vZGUtPmlfbmxpbmsgPj0gMSArICEhaXNfZGlyKTsKKwor
CS8qIGlmIHRhcmdldCBpcyBleGlzdGluZyBkaXJlY3RvcnkgYW5kIGl0J3Mgbm90IGVtcHR5LS0t
cmV0dXJuIGVycm9yLgorCisJICAgVGhpcyBjaGVjayBpcyBkb25lIHNwZWNpZmljYWxseSwgYmVj
YXVzZSBpc19kaXJfZW1wdHkoKSByZXF1aXJlcworCSAgIHRyZWUgdHJhdmVyc2FsIGFuZCBoYXZl
IHRvIGJlIGRvbmUgYmVmb3JlIGxvY2tzIGFyZSB0YWtlbi4KKwkgKi8KKwlpZiAoaXNfZGlyICYm
IG5ld19pbm9kZSAhPSBOVUxMICYmIGlzX2Rpcl9lbXB0eShuZXdfaW5vZGUpICE9IDApCisJCXJl
dHVybiBSRVRFUlIoLUVOT1RFTVBUWSk7CisKKwlyZXN1bHQgPSBjYW5fcmVuYW1lKG9sZF9kaXIs
IG9sZF9pbm9kZSwgbmV3X2RpciwgbmV3X2lub2RlKTsKKwlpZiAocmVzdWx0ICE9IDApCisJCWdv
dG8gZXhpdDsKKworCXJlc3VsdCA9IGhhc2hlZF9yZW5hbWVfZXN0aW1hdGVfYW5kX2dyYWIob2xk
X2Rpciwgb2xkX25hbWUsCisJCQkJCQkgbmV3X2RpciwgbmV3X25hbWUpOworCWlmIChyZXN1bHQg
IT0gMCkKKwkJZ290byBleGl0OworCisJaW5pdF9saCgmbmV3X2xoKTsKKworCS8qIGZpbmQgZW50
cnkgZm9yIEBuZXdfbmFtZSAqLworCXJlc3VsdCA9IHJlaXNlcjRfZmluZF9lbnRyeShuZXdfZGly
LCBuZXdfbmFtZSwgJm5ld19saCwKKwkJCQkgICAgWk5PREVfV1JJVEVfTE9DSywgJm5ld19lbnRy
eSk7CisKKwlpZiAoSVNfQ0JLRVJSKHJlc3VsdCkpIHsKKwkJZG9uZV9saCgmbmV3X2xoKTsKKwkJ
Z290byBleGl0OworCX0KKworCXJlaXNlcjRfc2VhbF9kb25lKCZuZXdfZnNkYXRhLT5kZWMuZW50
cnlfc2VhbCk7CisKKwkvKiBhZGQgb3IgcmVwbGFjZSBuYW1lIGZvciBAb2xkX2lub2RlIGFzIEBu
ZXdfbmFtZSAqLworCWlmIChuZXdfaW5vZGUgIT0gTlVMTCkgeworCQkvKiB0YXJnZXQgKEBuZXdf
bmFtZSkgZXhpc3RzLiAqLworCQkvKiBOb3QgY2xlYXIgd2hhdCB0byBkbyB3aXRoIG9iamVjdHMg
dGhhdCBhcmUKKwkJICAgYm90aCBkaXJlY3RvcmllcyBhbmQgZmlsZXMgYXQgdGhlIHNhbWUgdGlt
ZS4gKi8KKwkJaWYgKHJlc3VsdCA9PSBDQktfQ09PUkRfRk9VTkQpIHsKKwkJCXJlc3VsdCA9IHJl
cGxhY2VfbmFtZShvbGRfaW5vZGUsCisJCQkJCSAgICAgIG5ld19kaXIsCisJCQkJCSAgICAgIG5l
d19pbm9kZSwgbmV3X2Nvb3JkLCAmbmV3X2xoKTsKKwkJCWlmIChyZXN1bHQgPT0gMCkKKwkJCQlm
cGx1ZyA9IGlub2RlX2ZpbGVfcGx1Z2luKG5ld19pbm9kZSk7CisJCX0gZWxzZSBpZiAocmVzdWx0
ID09IENCS19DT09SRF9OT1RGT1VORCkgeworCQkJLyogVkZTIHRvbGQgdXMgdGhhdCBAbmV3X25h
bWUgaXMgYm91bmQgdG8gZXhpc3RpbmcKKwkJCSAgIGlub2RlLCBidXQgd2UgZmFpbGVkIHRvIGZp
bmQgZGlyZWN0b3J5IGVudHJ5LiAqLworCQkJd2FybmluZygibmlraXRhLTIzMjQiLCAiVGFyZ2V0
IG5vdCBmb3VuZCIpOworCQkJcmVzdWx0ID0gUkVURVJSKC1FTk9FTlQpOworCQl9CisJfSBlbHNl
IHsKKwkJLyogdGFyZ2V0IChAbmV3X25hbWUpIGRvZXNuJ3QgZXhpc3RzLiAqLworCQlpZiAocmVz
dWx0ID09IENCS19DT09SRF9OT1RGT1VORCkKKwkJCXJlc3VsdCA9IGFkZF9uYW1lKG9sZF9pbm9k
ZSwKKwkJCQkJICBuZXdfZGlyLAorCQkJCQkgIG5ld19uYW1lLCBuZXdfY29vcmQsICZuZXdfbGgs
IGlzX2Rpcik7CisJCWVsc2UgaWYgKHJlc3VsdCA9PSBDQktfQ09PUkRfRk9VTkQpIHsKKwkJCS8q
IFZGUyB0b2xkIHVzIHRoYXQgQG5ld19uYW1lIGlzICJuZWdhdGl2ZSIgZGVudHJ5LAorCQkJICAg
YnV0IHdlIGZvdW5kIGRpcmVjdG9yeSBlbnRyeS4gKi8KKwkJCXdhcm5pbmcoIm5pa2l0YS0yMzMx
IiwgIlRhcmdldCBmb3VuZCB1bmV4cGVjdGVkbHkiKTsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlP
KTsKKwkJfQorCX0KKworCWFzc2VydCgibmlraXRhLTM0NjIiLCBlcmdvKHJlc3VsdCA9PSAwLAor
CQkJCSAgIG9sZF9pbm9kZS0+aV9ubGluayA+PSAyICsgISFpc19kaXIpKTsKKworCS8qIFdlIGFy
ZSBkb25lIHdpdGggYWxsIG1vZGlmaWNhdGlvbnMgdG8gdGhlIEBuZXdfZGlyLCByZWxlYXNlIGxv
Y2sgb24KKwkgICBub2RlLiAqLworCWRvbmVfbGgoJm5ld19saCk7CisKKwlpZiAoZnBsdWcgIT0g
TlVMTCkgeworCQkvKiBkZXRhY2ggQG5ld19pbm9kZSBmcm9tIG5hbWUtc3BhY2UgKi8KKwkJcmVz
dWx0ID0gZnBsdWctPmRldGFjaChuZXdfaW5vZGUsIG5ld19kaXIpOworCQlpZiAocmVzdWx0ICE9
IDApCisJCQl3YXJuaW5nKCJuaWtpdGEtMjMzMCIsICJDYW5ub3QgZGV0YWNoICVsbGk6ICVpLiAl
cyIsCisJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylnZXRfaW5vZGVfb2lkKG5ld19pbm9kZSksCisJ
CQkJcmVzdWx0LCBwb3NzaWJsZV9sZWFrKTsKKwl9CisKKwlpZiAobmV3X2lub2RlICE9IE5VTEwp
CisJCXJlaXNlcjRfdXBkYXRlX3NkKG5ld19pbm9kZSk7CisKKwlpZiAocmVzdWx0ID09IDApIHsK
KwkJbWVtc2V0KCZvbGRfZW50cnksIDAsIHNpemVvZiBvbGRfZW50cnkpOworCQlvbGRfZW50cnku
b2JqID0gb2xkX2lub2RlOworCisJCWRwbHVnLT5idWlsZF9lbnRyeV9rZXkob2xkX2RpciwKKwkJ
CQkgICAgICAgJm9sZF9uYW1lLT5kX25hbWUsICZvbGRfZW50cnkua2V5KTsKKworCQkvKiBBdCB0
aGlzIHN0YWdlIG5ldyBuYW1lIHdhcyBpbnRyb2R1Y2VkIGZvcgorCQkgICBAb2xkX2lub2RlLiBA
b2xkX2lub2RlLCBAbmV3X2RpciwgYW5kIEBuZXdfaW5vZGUgaV9ubGluaworCQkgICBjb3VudGVy
cyB3ZXJlIHVwZGF0ZWQuCisKKwkJICAgV2Ugd2FudCB0byByZW1vdmUgQG9sZF9uYW1lIG5vdy4g
SWYgQG9sZF9pbm9kZSB3YXNuJ3QKKwkJICAgZGlyZWN0b3J5IHRoaXMgaXMgc2ltcGxlLgorCQkg
Ki8KKwkJcmVzdWx0ID0gZHBsdWctPnJlbV9lbnRyeShvbGRfZGlyLCBvbGRfbmFtZSwgJm9sZF9l
bnRyeSk7CisJCS8qcmVzdWx0ID0gcmVtX2VudHJ5X2hhc2hlZChvbGRfZGlyLCBvbGRfbmFtZSwg
Jm9sZF9lbnRyeSk7ICovCisJCWlmIChyZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0gLUVOT01FTSkg
eworCQkJd2FybmluZygibmlraXRhLTIzMzUiLAorCQkJCSJDYW5ub3QgcmVtb3ZlIG9sZCBuYW1l
OiAlaSIsIHJlc3VsdCk7CisJCX0gZWxzZSB7CisJCQlyZXN1bHQgPSByZWlzZXI0X2RlbF9ubGlu
ayhvbGRfaW5vZGUsIG9sZF9kaXIsIDApOworCQkJaWYgKHJlc3VsdCAhPSAwICYmIHJlc3VsdCAh
PSAtRU5PTUVNKSB7CisJCQkJd2FybmluZygibmlraXRhLTIzMzciLAorCQkJCQkiQ2Fubm90IGRy
b3AgbGluayBvbiBvbGQ6ICVpIiwgcmVzdWx0KTsKKwkJCX0KKwkJfQorCisJCWlmIChyZXN1bHQg
PT0gMCAmJiBpc19kaXIpIHsKKwkJCS8qIEBvbGRfaW5vZGUgaXMgZGlyZWN0b3J5LiBXZSBhbHNv
IGhhdmUgdG8gdXBkYXRlCisJCQkgICBkb3Rkb3QgZW50cnkuICovCisJCQljb29yZF90ICpkb3Rk
b3RfY29vcmQ7CisJCQlsb2NrX2hhbmRsZSBkb3Rkb3RfbGg7CisJCQlzdHJ1Y3QgZGVudHJ5IGRv
dGRvdF9uYW1lOworCQkJcmVpc2VyNF9kaXJfZW50cnlfZGVzYyBkb3Rkb3RfZW50cnk7CisJCQlz
dHJ1Y3QgcmVpc2VyNF9kZW50cnlfZnNkYXRhIGRhdGFvbnN0YWNrOworCQkJc3RydWN0IHJlaXNl
cjRfZGVudHJ5X2ZzZGF0YSAqZnNkYXRhOworCisJCQltZW1zZXQoJmRhdGFvbnN0YWNrLCAwLCBz
aXplb2YgZGF0YW9uc3RhY2spOworCQkJbWVtc2V0KCZkb3Rkb3RfZW50cnksIDAsIHNpemVvZiBk
b3Rkb3RfZW50cnkpOworCQkJZG90ZG90X2VudHJ5Lm9iaiA9IG9sZF9kaXI7CisJCQltZW1zZXQo
JmRvdGRvdF9uYW1lLCAwLCBzaXplb2YgZG90ZG90X25hbWUpOworCQkJZG90ZG90X25hbWUuZF9u
YW1lLm5hbWUgPSAiLi4iOworCQkJZG90ZG90X25hbWUuZF9uYW1lLmxlbiA9IDI7CisJCQkvKgor
CQkJICogYWxsb2NhdGUgLT5kX2ZzZGF0YSBvbiB0aGUgc3RhY2sgdG8gYXZvaWQgdXNpbmcKKwkJ
CSAqIHJlaXNlcjRfZ2V0X2RlbnRyeV9mc2RhdGEoKS4gTG9ja2luZyBpcyBub3QgbmVlZGVkLAor
CQkJICogYmVjYXVzZSBkZW50cnkgaXMgcHJpdmF0ZSB0byB0aGUgY3VycmVudCB0aHJlYWQuCisJ
CQkgKi8KKwkJCWRvdGRvdF9uYW1lLmRfZnNkYXRhID0gJmRhdGFvbnN0YWNrOworCQkJaW5pdF9s
aCgmZG90ZG90X2xoKTsKKworCQkJZnNkYXRhID0gJmRhdGFvbnN0YWNrOworCQkJZG90ZG90X2Nv
b3JkID0gJmZzZGF0YS0+ZGVjLmVudHJ5X2Nvb3JkOworCQkJY29vcmRfY2xlYXJfaXBsdWcoZG90
ZG90X2Nvb3JkKTsKKworCQkJcmVzdWx0ID0gcmVpc2VyNF9maW5kX2VudHJ5KG9sZF9pbm9kZSwK
KwkJCQkJCSAgICAmZG90ZG90X25hbWUsCisJCQkJCQkgICAgJmRvdGRvdF9saCwKKwkJCQkJCSAg
ICBaTk9ERV9XUklURV9MT0NLLAorCQkJCQkJICAgICZkb3Rkb3RfZW50cnkpOworCQkJaWYgKHJl
c3VsdCA9PSAwKSB7CisJCQkJLyogcmVwbGFjZV9uYW1lKCkgZGVjcmVhc2VzIGlfbmxpbmsgb24K
KwkJCQkgKiBAb2xkX2RpciAqLworCQkJCXJlc3VsdCA9IHJlcGxhY2VfbmFtZShuZXdfZGlyLAor
CQkJCQkJICAgICAgb2xkX2lub2RlLAorCQkJCQkJICAgICAgb2xkX2RpciwKKwkJCQkJCSAgICAg
IGRvdGRvdF9jb29yZCwgJmRvdGRvdF9saCk7CisJCQl9IGVsc2UKKwkJCQlyZXN1bHQgPSBSRVRF
UlIoLUVJTyk7CisJCQlkb25lX2xoKCZkb3Rkb3RfbGgpOworCQl9CisJfQorCXJlaXNlcjRfdXBk
YXRlX2RpcihuZXdfZGlyKTsKKwlyZWlzZXI0X3VwZGF0ZV9kaXIob2xkX2Rpcik7CisJcmVpc2Vy
NF91cGRhdGVfc2Qob2xkX2lub2RlKTsKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJZmlsZV9wbHVn
aW4gKmZwbHVnOworCisJCWlmIChuZXdfaW5vZGUgIT0gTlVMTCkgeworCQkJLyogYWRkIHNhZmUt
bGluayBmb3IgdGFyZ2V0IGZpbGUgKGluIGNhc2Ugd2UgcmVtb3ZlZAorCQkJICogbGFzdCByZWZl
cmVuY2UgdG8gdGhlIHBvb3IgZmVsbG93ICovCisJCQlmcGx1ZyA9IGlub2RlX2ZpbGVfcGx1Z2lu
KG5ld19pbm9kZSk7CisJCQlpZiAobmV3X2lub2RlLT5pX25saW5rID09IDApCisJCQkJcmVzdWx0
ID0gc2FmZV9saW5rX2FkZChuZXdfaW5vZGUsIFNBRkVfVU5MSU5LKTsKKwkJfQorCX0KK2V4aXQ6
CisJY29udGV4dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQo
Y3R4KTsKKwlyZXR1cm4gcmVzdWx0OworfQorI2VuZGlmCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vYWNsLmggbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vYWNsLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vYWNsLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAw
MDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2FjbC5oCTIw
MjAtMDItMDUgMjA6NTM6NDEuNDY1MjIyMjcxICswMTAwCkBAIC0wLDAgKzEsNjYgQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogRGlyZWN0b3J5IGVudHJ5LiAqLworCisjaWYg
IWRlZmluZWQoIF9fRlNfUkVJU0VSNF9QTFVHSU5fRElSRUNUT1JZX0VOVFJZX0hfXyApCisjZGVm
aW5lIF9fRlNfUkVJU0VSNF9QTFVHSU5fRElSRUNUT1JZX0VOVFJZX0hfXworCisjaW5jbHVkZSAi
Li4vLi4vZm9yd2FyZC5oIgorI2luY2x1ZGUgIi4uLy4uL2Rmb3JtYXQuaCIKKyNpbmNsdWRlICIu
Li8uLi9rYXNzaWduLmgiCisjaW5jbHVkZSAiLi4vLi4va2V5LmgiCisKKyNpbmNsdWRlIDxsaW51
eC9mcy5oPgorI2luY2x1ZGUgPGxpbnV4L2RjYWNoZS5oPgkvKiBmb3Igc3RydWN0IGRlbnRyeSAq
LworCit0eXBlZGVmIHN0cnVjdCBkaXJlY3RvcnlfZW50cnlfZm9ybWF0IHsKKwkvKiBrZXkgb2Yg
b2JqZWN0IHN0YXQtZGF0YS4gSXQncyBub3QgbmVjZXNzYXJ5IHRvIHN0b3JlIHdob2xlCisJICAg
a2V5IGhlcmUsIGJlY2F1c2UgaXQncyBhbHdheXMga2V5IG9mIHN0YXQtZGF0YSwgc28gbWlub3IK
KwkgICBwYWNraW5nIGxvY2FsaXR5IGFuZCBvZmZzZXQgY2FuIGJlIG9taXR0ZWQgaGVyZS4gQnV0
IHRoaXMKKwkgICByZWxpZXMgb24gcGFydGljdWxhciBrZXkgYWxsb2NhdGlvbiBzY2hlbWUgZm9y
IHN0YXQtZGF0YSwgc28sCisJICAgZm9yIGV4dGVuc2liaWxpdHkgc2FrZSwgd2hvbGUga2V5IGNh
biBiZSBzdG9yZWQgaGVyZS4KKworCSAgIFdlIHN0b3JlIGtleSBhcyBhcnJheSBvZiBieXRlcywg
YmVjYXVzZSB3ZSBkb24ndCB3YW50IDgtYnl0ZQorCSAgIGFsaWdubWVudCBvZiBkaXIgZW50cmll
cy4KKwkgKi8KKwlvYmpfa2V5X2lkIGlkOworCS8qIGZpbGUgbmFtZS4gTnVsbCB0ZXJtaW5hdGVk
IHN0cmluZy4gKi8KKwlkOCBuYW1lWzBdOworfSBkaXJlY3RvcnlfZW50cnlfZm9ybWF0OworCit2
b2lkIHByaW50X2RlKGNvbnN0IGNoYXIgKnByZWZpeCwgY29vcmRfdCAqIGNvb3JkKTsKK2ludCBl
eHRyYWN0X2tleV9kZShjb25zdCBjb29yZF90ICogY29vcmQsIHJlaXNlcjRfa2V5ICoga2V5KTsK
K2ludCB1cGRhdGVfa2V5X2RlKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY29uc3QgcmVpc2VyNF9r
ZXkgKiBrZXksCisJCSAgbG9ja19oYW5kbGUgKiBsaCk7CitjaGFyICpleHRyYWN0X25hbWVfZGUo
Y29uc3QgY29vcmRfdCAqIGNvb3JkLCBjaGFyICpidWYpOwordW5zaWduZWQgZXh0cmFjdF9maWxl
X3R5cGVfZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKK2ludCBhZGRfZW50cnlfZGUoc3RydWN0
IGlub2RlICpkaXIsIGNvb3JkX3QgKiBjb29yZCwKKwkJIGxvY2tfaGFuZGxlICogbGgsIGNvbnN0
IHN0cnVjdCBkZW50cnkgKm5hbWUsCisJCSByZWlzZXI0X2Rpcl9lbnRyeV9kZXNjICogZW50cnkp
OworaW50IHJlbV9lbnRyeV9kZShzdHJ1Y3QgaW5vZGUgKmRpciwgY29uc3Qgc3RydWN0IHFzdHIg
Km5hbWUsIGNvb3JkX3QgKiBjb29yZCwKKwkJIGxvY2tfaGFuZGxlICogbGgsIHJlaXNlcjRfZGly
X2VudHJ5X2Rlc2MgKiBlbnRyeSk7CitpbnQgbWF4X25hbWVfbGVuX2RlKGNvbnN0IHN0cnVjdCBp
bm9kZSAqZGlyKTsKKworaW50IGRlX3JlbV9hbmRfc2hyaW5rKHN0cnVjdCBpbm9kZSAqZGlyLCBj
b29yZF90ICogY29vcmQsIGludCBsZW5ndGgpOworCitjaGFyICpleHRyYWN0X2RlbnRfbmFtZShj
b25zdCBjb29yZF90ICogY29vcmQsCisJCQlkaXJlY3RvcnlfZW50cnlfZm9ybWF0ICogZGVudCwg
Y2hhciAqYnVmKTsKKworI2lmIFJFSVNFUjRfTEFSR0VfS0VZCisjZGVmaW5lIERFX05BTUVfQlVG
X0xFTiAoMjQpCisjZWxzZQorI2RlZmluZSBERV9OQU1FX0JVRl9MRU4gKDE2KQorI2VuZGlmCisK
Ky8qIF9fRlNfUkVJU0VSNF9QTFVHSU5fRElSRUNUT1JZX0VOVFJZX0hfXyAqLworI2VuZGlmCisK
Ky8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDog
OAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZm
IC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9pdGVtL2JsYWNrYm94LmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vYmxh
Y2tib3guYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9ibGFj
a2JveC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9ibGFja2JveC5jCTIwMjAtMDItMDUgMjA6NTM6NDEu
NDY2MjIyMjc4ICswMTAwCkBAIC0wLDAgKzEsMTQyIEBACisvKiBDb3B5cmlnaHQgMjAwMyBieSBI
YW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLwor
CisvKiBCbGFjayBib3ggaXRlbSBpbXBsZW1lbnRhdGlvbiAqLworCisjaW5jbHVkZSAiLi4vLi4v
Zm9yd2FyZC5oIgorI2luY2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5jbHVkZSAiLi4vLi4vZGZv
cm1hdC5oIgorI2luY2x1ZGUgIi4uLy4uL2thc3NpZ24uaCIKKyNpbmNsdWRlICIuLi8uLi9jb29y
ZC5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWUuaCIKKyNpbmNsdWRlICIuLi8uLi9sb2NrLmgiCisK
KyNpbmNsdWRlICJibGFja2JveC5oIgorI2luY2x1ZGUgIml0ZW0uaCIKKyNpbmNsdWRlICIuLi9w
bHVnaW4uaCIKKworaW50CitzdG9yZV9ibGFja19ib3gocmVpc2VyNF90cmVlICogdHJlZSwKKwkJ
Y29uc3QgcmVpc2VyNF9rZXkgKiBrZXksIHZvaWQgKmRhdGEsIGludCBsZW5ndGgpCit7CisJaW50
IHJlc3VsdDsKKwlyZWlzZXI0X2l0ZW1fZGF0YSBpZGF0YTsKKwljb29yZF90IGNvb3JkOworCWxv
Y2tfaGFuZGxlIGxoOworCisJbWVtc2V0KCZpZGF0YSwgMCwgc2l6ZW9mIGlkYXRhKTsKKworCWlk
YXRhLmRhdGEgPSBkYXRhOworCWlkYXRhLnVzZXIgPSAwOworCWlkYXRhLmxlbmd0aCA9IGxlbmd0
aDsKKwlpZGF0YS5pcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2lkKEJMQUNLX0JPWF9JRCk7CisKKwlp
bml0X2xoKCZsaCk7CisJcmVzdWx0ID0gaW5zZXJ0X2J5X2tleSh0cmVlLCBrZXksCisJCQkgICAg
ICAgJmlkYXRhLCAmY29vcmQsICZsaCwgTEVBRl9MRVZFTCwgQ0JLX1VOSVFVRSk7CisKKwlhc3Nl
cnQoIm5pa2l0YS0zNDEzIiwKKwkgICAgICAgZXJnbyhyZXN1bHQgPT0gMCwKKwkJICAgIFdJVEhf
Q09PUkQoJmNvb3JkLAorCQkJICAgICAgIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKCZjb29yZCkgPT0g
bGVuZ3RoKSkpOworCisJZG9uZV9saCgmbGgpOworCXJldHVybiByZXN1bHQ7Cit9CisKK2ludAor
bG9hZF9ibGFja19ib3gocmVpc2VyNF90cmVlICogdHJlZSwKKwkgICAgICAgcmVpc2VyNF9rZXkg
KiBrZXksIHZvaWQgKmRhdGEsIGludCBsZW5ndGgsIGludCBleGFjdCkKK3sKKwlpbnQgcmVzdWx0
OworCWNvb3JkX3QgY29vcmQ7CisJbG9ja19oYW5kbGUgbGg7CisKKwlpbml0X2xoKCZsaCk7CisJ
cmVzdWx0ID0gY29vcmRfYnlfa2V5KHRyZWUsIGtleSwKKwkJCSAgICAgICZjb29yZCwgJmxoLCBa
Tk9ERV9SRUFEX0xPQ0ssCisJCQkgICAgICBleGFjdCA/IEZJTkRfRVhBQ1QgOiBGSU5EX01BWF9O
T1RfTU9SRV9USEFOLAorCQkJICAgICAgTEVBRl9MRVZFTCwgTEVBRl9MRVZFTCwgQ0JLX1VOSVFV
RSwgTlVMTCk7CisKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJaW50IGlsZW47CisKKwkJcmVzdWx0
ID0gemxvYWQoY29vcmQubm9kZSk7CisJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJaWxlbiA9IGl0
ZW1fbGVuZ3RoX2J5X2Nvb3JkKCZjb29yZCk7CisJCQlpZiAoaWxlbiA8PSBsZW5ndGgpIHsKKwkJ
CQltZW1jcHkoZGF0YSwgaXRlbV9ib2R5X2J5X2Nvb3JkKCZjb29yZCksIGlsZW4pOworCQkJCXVu
aXRfa2V5X2J5X2Nvb3JkKCZjb29yZCwga2V5KTsKKwkJCX0gZWxzZSBpZiAoZXhhY3QpIHsKKwkJ
CQkvKgorCQkJCSAqIGl0ZW0gaXMgbGFyZ2VyIHRoYW4gYnVmZmVyIHByb3ZpZGVkIGJ5IHRoZQor
CQkJCSAqIHVzZXIuIE9ubHkgaXNzdWUgYSB3YXJuaW5nIGlmIEBleGFjdCBpcworCQkJCSAqIHNl
dC4gSWYgQGV4YWN0IGlzIGZhbHNlLCB3ZSBhcmUgaXRlcmF0aW5nCisJCQkJICogb3ZlciBhbGwg
c2FmZS1saW5rcyBhbmQgaGVyZSB3ZSBhcmUgcmVhY2hpbmcKKwkJCQkgKiB0aGUgZW5kIG9mIHRo
ZSBpdGVyYXRpb24uCisJCQkJICovCisJCQkJd2FybmluZygibmlraXRhLTM0MTUiLAorCQkJCQki
V3JvbmcgYmxhY2sgYm94IGxlbmd0aDogJWkgPiAlaSIsCisJCQkJCWlsZW4sIGxlbmd0aCk7CisJ
CQkJcmVzdWx0ID0gUkVURVJSKC1FSU8pOworCQkJfQorCQkJenJlbHNlKGNvb3JkLm5vZGUpOwor
CQl9CisJfQorCisJZG9uZV9saCgmbGgpOworCXJldHVybiByZXN1bHQ7CisKK30KKworaW50Cit1
cGRhdGVfYmxhY2tfYm94KHJlaXNlcjRfdHJlZSAqIHRyZWUsCisJCSBjb25zdCByZWlzZXI0X2tl
eSAqIGtleSwgdm9pZCAqZGF0YSwgaW50IGxlbmd0aCkKK3sKKwlpbnQgcmVzdWx0OworCWNvb3Jk
X3QgY29vcmQ7CisJbG9ja19oYW5kbGUgbGg7CisKKwlpbml0X2xoKCZsaCk7CisJcmVzdWx0ID0g
Y29vcmRfYnlfa2V5KHRyZWUsIGtleSwKKwkJCSAgICAgICZjb29yZCwgJmxoLCBaTk9ERV9SRUFE
X0xPQ0ssCisJCQkgICAgICBGSU5EX0VYQUNULAorCQkJICAgICAgTEVBRl9MRVZFTCwgTEVBRl9M
RVZFTCwgQ0JLX1VOSVFVRSwgTlVMTCk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWludCBpbGVu
OworCisJCXJlc3VsdCA9IHpsb2FkKGNvb3JkLm5vZGUpOworCQlpZiAocmVzdWx0ID09IDApIHsK
KwkJCWlsZW4gPSBpdGVtX2xlbmd0aF9ieV9jb29yZCgmY29vcmQpOworCQkJaWYgKGxlbmd0aCA8
PSBpbGVuKSB7CisJCQkJbWVtY3B5KGl0ZW1fYm9keV9ieV9jb29yZCgmY29vcmQpLCBkYXRhLAor
CQkJCSAgICAgICBsZW5ndGgpOworCQkJfSBlbHNlIHsKKwkJCQl3YXJuaW5nKCJuaWtpdGEtMzQz
NyIsCisJCQkJCSJXcm9uZyBibGFjayBib3ggbGVuZ3RoOiAlaSA8ICVpIiwKKwkJCQkJaWxlbiwg
bGVuZ3RoKTsKKwkJCQlyZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJCQl9CisJCQl6cmVsc2UoY29v
cmQubm9kZSk7CisJCX0KKwl9CisKKwlkb25lX2xoKCZsaCk7CisJcmV0dXJuIHJlc3VsdDsKKwor
fQorCitpbnQga2lsbF9ibGFja19ib3gocmVpc2VyNF90cmVlICogdHJlZSwgY29uc3QgcmVpc2Vy
NF9rZXkgKiBrZXkpCit7CisJcmV0dXJuIHJlaXNlcjRfY3V0X3RyZWUodHJlZSwga2V5LCBrZXks
IE5VTEwsIDEpOworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVz
OgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAg
Yy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAor
ICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9ibGFja2JveC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3BsdWdpbi9pdGVtL2JsYWNrYm94LmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
cGx1Z2luL2l0ZW0vYmxhY2tib3guaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEw
MAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vYmxhY2tib3guaAkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ2NjIyMjI3OCArMDEwMApAQCAtMCwwICsxLDMzIEBACisvKiBDb3B5
cmlnaHQgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlz
ZXI0L1JFQURNRSAqLworCisvKiAiQmxhY2sgYm94IiBlbnRyeSB0byBmaXhlZC13aWR0aCBjb250
YWluIHVzZXIgc3VwcGxpZWQgZGF0YSAqLworCisjaWYgIWRlZmluZWQoIF9fRlNfUkVJU0VSNF9C
TEFDS19CT1hfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0X0JMQUNLX0JPWF9IX18KKworI2lu
Y2x1ZGUgIi4uLy4uL2ZvcndhcmQuaCIKKyNpbmNsdWRlICIuLi8uLi9kZm9ybWF0LmgiCisjaW5j
bHVkZSAiLi4vLi4va2Fzc2lnbi5oIgorI2luY2x1ZGUgIi4uLy4uL2tleS5oIgorCitleHRlcm4g
aW50IHN0b3JlX2JsYWNrX2JveChyZWlzZXI0X3RyZWUgKiB0cmVlLAorCQkJICAgY29uc3QgcmVp
c2VyNF9rZXkgKiBrZXksIHZvaWQgKmRhdGEsIGludCBsZW5ndGgpOworZXh0ZXJuIGludCBsb2Fk
X2JsYWNrX2JveChyZWlzZXI0X3RyZWUgKiB0cmVlLAorCQkJICByZWlzZXI0X2tleSAqIGtleSwg
dm9pZCAqZGF0YSwgaW50IGxlbmd0aCwgaW50IGV4YWN0KTsKK2V4dGVybiBpbnQga2lsbF9ibGFj
a19ib3gocmVpc2VyNF90cmVlICogdHJlZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkpOworZXh0
ZXJuIGludCB1cGRhdGVfYmxhY2tfYm94KHJlaXNlcjRfdHJlZSAqIHRyZWUsCisJCQkgICAgY29u
c3QgcmVpc2VyNF9rZXkgKiBrZXksIHZvaWQgKmRhdGEsIGludCBsZW5ndGgpOworCisvKiBfX0ZT
X1JFSVNFUjRfQkxBQ0tfQk9YX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHku
CisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAg
bW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4Cisg
ICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2NkZS5jIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2NkZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3BsdWdpbi9pdGVtL2NkZS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAw
ICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jZGUuYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ2NjIyMjI3OCArMDEwMApAQCAtMCwwICsxLDEwMDQgQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogRGlyZWN0b3J5IGVudHJ5IGltcGxlbWVudGF0
aW9uICovCisKKy8qIERFU0NSSVBUSU9OOgorCisgICBUaGlzIGlzICJjb21wb3VuZCIgZGlyZWN0
b3J5IGl0ZW0gcGx1Z2luIGltcGxlbWVudGF0aW9uLiBUaGlzIGRpcmVjdG9yeQorICAgaXRlbSB0
eXBlIGlzIGNvbXBvdW5kIChhcyBvcHBvc2VkIHRvIHRoZSAic2ltcGxlIGRpcmVjdG9yeSBpdGVt
IiBpbgorICAgZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9zZGUuW2NoXSksIGJlY2F1c2UgaXQgY29u
c2lzdHMgb2Ygc2V2ZXJhbCBkaXJlY3RvcnkKKyAgIGVudHJpZXMuCisKKyAgIFRoZSByZWFzb24g
YmVoaW5kIHRoaXMgZGVjaXNpb24gaXMgZGlzayBzcGFjZSBlZmZpY2llbmN5OiBhbGwgZGlyZWN0
b3J5CisgICBlbnRyaWVzIGluc2lkZSB0aGUgc2FtZSBkaXJlY3RvcnkgaGF2ZSBpZGVudGljYWwg
ZnJhZ21lbnQgaW4gdGhlaXIKKyAgIGtleXMuIFRoaXMsIG9mIGNvdXJzZSwgZGVwZW5kcyBvbiBr
ZXkgYXNzaWdubWVudCBwb2xpY3kuIEluIG91ciBkZWZhdWx0IGtleQorICAgYXNzaWdubWVudCBw
b2xpY3ksIGFsbCBkaXJlY3RvcnkgZW50cmllcyBoYXZlIHRoZSBzYW1lIGxvY2FsaXR5IHdoaWNo
IGlzCisgICBlcXVhbCB0byB0aGUgb2JqZWN0IGlkIG9mIHRoZWlyIGRpcmVjdG9yeS4KKworICAg
Q29tcG9zaW5nIGRpcmVjdG9yeSBpdGVtIG91dCBvZiBzZXZlcmFsIGRpcmVjdG9yeSBlbnRyaWVz
IGZvciB0aGUgc2FtZQorICAgZGlyZWN0b3J5IGFsbG93cyB1cyB0byBzdG9yZSBzYWlkIGtleSBm
cmFnbWVudCBvbmx5IG9uY2UuIFRoYXQgaXMsIHRoaXMgaXMKKyAgIHNvbWUgYWQgaG9jIGZvcm0g
b2Yga2V5IGNvbXByZXNzaW9uIChzdGVtIGNvbXByZXNzaW9uKSB0aGF0IGlzIGltcGxlbWVudGVk
CisgICBoZXJlLCBiZWNhdXNlIGdlbmVyYWwga2V5IGNvbXByZXNzaW9uIGlzIG5vdCBzdXBwb3Nl
ZCB0byBiZSBpbXBsZW1lbnRlZCBpbgorICAgdjQuMC4KKworICAgQW5vdGhlciBkZWNpc2lvbiB0
aGF0IHdhcyBtYWRlIHJlZ2FyZGluZyBhbGwgZGlyZWN0b3J5IGl0ZW0gcGx1Z2lucywgaXMKKyAg
IHRoYXQgdGhleSB3aWxsIHN0b3JlIGVudHJ5IGtleXMgdW5hbGlnbmVkLiBUaGlzIGlzIGZvciB0
aGF0IHNha2Ugb2YgZGlzaworICAgc3BhY2UgZWZmaWNpZW5jeSBhZ2Fpbi4KKworICAgSW4gc2hv
dWxkIGJlIG5vdGVkLCB0aGF0IHN0b3Jpbmcga2V5cyB1bmFsaWduZWQgaW5jcmVhc2VzIENQVSBj
b25zdW1wdGlvbiwKKyAgIGF0IGxlYXN0IG9uIHNvbWUgYXJjaGl0ZWN0dXJlcy4KKworICAgSW50
ZXJuYWwgb24tZGlzayBzdHJ1Y3R1cmUgb2YgdGhlIGNvbXBvdW5kIGRpcmVjdG9yeSBpdGVtIGlz
IHRoZSBmb2xsb3dpbmc6CisKKyAgICAgICAgSEVBREVSICAgICAgICAgIGNkZV9pdGVtX2Zvcm1h
dC4gICAgICAgIEhlcmUgbnVtYmVyIG9mIGVudHJpZXMgaXMgc3RvcmVkLgorICAgICAgICBFTlRS
WV9IRUFERVJfMCAgY2RlX3VuaXRfaGVhZGVyLiAgICAgICAgSGVyZSBwYXJ0IG9mIGVudHJ5IGtl
eSBhbmQKKyAgICAgICAgRU5UUllfSEVBREVSXzEgICAgICAgICAgICAgICAgICAgICAgICAgIG9m
ZnNldCBvZiBlbnRyeSBib2R5IGFyZSBzdG9yZWQuCisgICAgICAgIEVOVFJZX0hFQURFUl8yCQkJ
CShiYXNpY2FsbHkgdHdvIGxhc3QgcGFydHMgb2Yga2V5KQorICAgICAgICAuLi4KKyAgICAgICAg
RU5UUllfSEVBREVSX04KKyAgICAgICAgRU5UUllfQk9EWV8wICAgIGRpcmVjdG9yeV9lbnRyeV9m
b3JtYXQuIEhlcmUgcGFydCBvZiBzdGF0IGRhdGEga2V5IGFuZAorICAgICAgICBFTlRSWV9CT0RZ
XzEgICAgICAgICAgICAgICAgICAgICAgICAgICAgTlVMLXRlcm1pbmF0ZWQgbmFtZSBhcmUgc3Rv
cmVkLgorICAgICAgICBFTlRSWV9CT0RZXzIJCQkJKHBhcnQgb2Ygc3RhdGFkdGEga2V5IGluIHRo
ZQorICAJCQkJCQkgc2VuY2UgdGhhdCBzaW5jZSBhbGwgU0RzIGhhdmUKKyAgCQkJCQkJIHplcm8g
b2Zmc2V0LCB0aGlzIG9mZnNldCBpcyBub3QKKyAgCQkJCQkJIHN0b3JlZCBvbiBkaXNrKS4KKyAg
ICAgICAgLi4uCisgICAgICAgIEVOVFJZX0JPRFlfTgorCisgICBXaGVuIGl0IGNvbWVzIHRvIHRo
ZSBiYWxhbmNpbmcsIGVhY2ggZGlyZWN0b3J5IGVudHJ5IGluIGNvbXBvdW5kIGRpcmVjdG9yeQor
ICAgaXRlbSBpcyB1bml0LCB0aGF0IGlzLCBzb21ldGhpbmcgdGhhdCBjYW4gYmUgY3V0IGZyb20g
b25lIGl0ZW0gYW5kIHBhc3RlZAorICAgaW50byBhbm90aGVyIGl0ZW0gb2YgdGhlIHNhbWUgdHlw
ZS4gSGFuZGxpbmcgb2YgdW5pdCBjdXQgYW5kIHBhc3RlIGlzIG1ham9yCisgICByZWFzb24gZm9y
IHRoZSBjb21wbGV4aXR5IG9mIGNvZGUgYmVsb3cuCisKKyovCisKKyNpbmNsdWRlICIuLi8uLi9m
b3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vLi4vZGVidWcuaCIKKyNpbmNsdWRlICIuLi8uLi9kZm9y
bWF0LmgiCisjaW5jbHVkZSAiLi4vLi4va2Fzc2lnbi5oIgorI2luY2x1ZGUgIi4uLy4uL2tleS5o
IgorI2luY2x1ZGUgIi4uLy4uL2Nvb3JkLmgiCisjaW5jbHVkZSAic2RlLmgiCisjaW5jbHVkZSAi
Y2RlLmgiCisjaW5jbHVkZSAiaXRlbS5oIgorI2luY2x1ZGUgIi4uL25vZGUvbm9kZS5oIgorI2lu
Y2x1ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1ZGUgIi4uLy4uL3pub2RlLmgiCisjaW5jbHVkZSAi
Li4vLi4vY2FycnkuaCIKKyNpbmNsdWRlICIuLi8uLi90cmVlLmgiCisjaW5jbHVkZSAiLi4vLi4v
aW5vZGUuaCIKKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IGlub2RlICov
CisjaW5jbHVkZSA8bGludXgvZGNhY2hlLmg+CS8qIGZvciBzdHJ1Y3QgZGVudHJ5ICovCisKKyNp
ZiAwCisjZGVmaW5lIENIRUNLTUUoY29vcmQpCQkJCQkJXAorKHsJCQkJCQkJCVwKKwljb25zdCBj
aGFyICptZXNzYWdlOwkJCQkJXAorCWNvb3JkX3QgZHVwOwkJCQkJCVwKKwkJCQkJCQkJXAorCWNv
b3JkX2R1cF9ub2NoZWNrKCZkdXAsIChjb29yZCkpOwkJCVwKKwlkdXAudW5pdF9wb3MgPSAwOwkJ
CQkJXAorCWFzc2VydCgibmlraXRhLTI4NzEiLCBjZGVfY2hlY2soJmR1cCwgJm1lc3NhZ2UpID09
IDApOwlcCit9KQorI2Vsc2UKKyNkZWZpbmUgQ0hFQ0tNRShjb29yZCkgbm9vcAorI2VuZGlmCisK
Ky8qIHJldHVybiBib2R5IG9mIGNvbXBvdW5kIGRpcmVjdG9yeSBpdGVtIGF0IEBjb29yZCAqLwor
c3RhdGljIGlubGluZSBjZGVfaXRlbV9mb3JtYXQgKmZvcm1hdHRlZF9hdChjb25zdCBjb29yZF90
ICogY29vcmQpCit7CisJYXNzZXJ0KCJuaWtpdGEtMTI4MiIsIGNvb3JkICE9IE5VTEwpOworCXJl
dHVybiBpdGVtX2JvZHlfYnlfY29vcmQoY29vcmQpOworfQorCisvKiByZXR1cm4gZW50cnkgaGVh
ZGVyIGF0IEBjb29yZCAqLworc3RhdGljIGlubGluZSBjZGVfdW5pdF9oZWFkZXIgKmhlYWRlcl9h
dChjb25zdCBjb29yZF90ICoKKwkJCQkJIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkJ
CQkgaW50IGlkeCAvKiBpbmRleCBvZiB1bml0ICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xMjgz
IiwgY29vcmQgIT0gTlVMTCk7CisJcmV0dXJuICZmb3JtYXR0ZWRfYXQoY29vcmQpLT5lbnRyeVtp
ZHhdOworfQorCisvKiByZXR1cm4gbnVtYmVyIG9mIHVuaXRzIGluIGNvbXBvdW5kIGRpcmVjdG9y
eSBpdGVtIGF0IEBjb29yZCAqLworc3RhdGljIGludCB1bml0cyhjb25zdCBjb29yZF90ICogY29v
cmQgLyogY29vcmQgb2YgaXRlbSAqLyApCit7CisJcmV0dXJuIGxlMTZfdG9fY3B1KGdldF91bmFs
aWduZWQoJmZvcm1hdHRlZF9hdChjb29yZCktPm51bV9vZl9lbnRyaWVzKSk7Cit9CisKKy8qIHJl
dHVybiBvZmZzZXQgb2YgdGhlIGJvZHkgb2YgQGlkeC10aCBlbnRyeSBpbiBAY29vcmQgKi8KK3N0
YXRpYyB1bnNpZ25lZCBpbnQgb2Zmc2V0X29mKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29y
ZCBvZiBpdGVtICovICwKKwkJCSAgICAgIGludCBpZHggLyogaW5kZXggb2YgdW5pdCAqLyApCit7
CisJaWYgKGlkeCA8IHVuaXRzKGNvb3JkKSkKKwkJcmV0dXJuIGxlMTZfdG9fY3B1KGdldF91bmFs
aWduZWQoJmhlYWRlcl9hdChjb29yZCwgaWR4KS0+b2Zmc2V0KSk7CisJZWxzZSBpZiAoaWR4ID09
IHVuaXRzKGNvb3JkKSkKKwkJcmV0dXJuIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKKwll
bHNlCisJCWltcG9zc2libGUoIm5pa2l0YS0xMzA4IiwgIldyb25nIGlkeCIpOworCXJldHVybiAw
OworfQorCisvKiBzZXQgb2Zmc2V0IG9mIHRoZSBib2R5IG9mIEBpZHgtdGggZW50cnkgaW4gQGNv
b3JkICovCitzdGF0aWMgdm9pZCBzZXRfb2Zmc2V0KGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBj
b29yZCBvZiBpdGVtICovICwKKwkJICAgICAgIGludCBpZHggLyogaW5kZXggb2YgdW5pdCAqLyAs
CisJCSAgICAgICB1bnNpZ25lZCBpbnQgb2Zmc2V0IC8qIG5ldyBvZmZzZXQgKi8gKQoreworCXB1
dF91bmFsaWduZWQoY3B1X3RvX2xlMTYoKF9fdTE2KSBvZmZzZXQpLCAmaGVhZGVyX2F0KGNvb3Jk
LCBpZHgpLT5vZmZzZXQpOworfQorCitzdGF0aWMgdm9pZCBhZGpfb2Zmc2V0KGNvbnN0IGNvb3Jk
X3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJICAgICAgIGludCBpZHggLyogaW5k
ZXggb2YgdW5pdCAqLyAsCisJCSAgICAgICBpbnQgZGVsdGEgLyogb2Zmc2V0IGNoYW5nZSAqLyAp
Cit7CisJZDE2ICpkb2Zmc2V0OworCV9fdTE2IG9mZnNldDsKKworCWRvZmZzZXQgPSAmaGVhZGVy
X2F0KGNvb3JkLCBpZHgpLT5vZmZzZXQ7CisJb2Zmc2V0ID0gbGUxNl90b19jcHUoZ2V0X3VuYWxp
Z25lZChkb2Zmc2V0KSk7CisJb2Zmc2V0ICs9IGRlbHRhOworCXB1dF91bmFsaWduZWQoY3B1X3Rv
X2xlMTYoKF9fdTE2KSBvZmZzZXQpLCBkb2Zmc2V0KTsKK30KKworLyogcmV0dXJuIHBvaW50ZXIg
dG8gQG9mZnNldC10aCBieXRlIGZyb20gdGhlIGJlZ2lubmluZyBvZiBAY29vcmQgKi8KK3N0YXRp
YyBjaGFyICphZGRyZXNzKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICov
ICwKKwkJICAgICBpbnQgb2Zmc2V0KQoreworCXJldHVybiAoKGNoYXIgKilpdGVtX2JvZHlfYnlf
Y29vcmQoY29vcmQpKSArIG9mZnNldDsKK30KKworLyogcmV0dXJuIHBvaW50ZXIgdG8gdGhlIGJv
ZHkgb2YgQGlkeC10aCBlbnRyeSBpbiBAY29vcmQgKi8KK3N0YXRpYyBkaXJlY3RvcnlfZW50cnlf
Zm9ybWF0ICplbnRyeV9hdChjb25zdCBjb29yZF90ICogY29vcmQJLyogY29vcmQgb2YKKwkJCQkJ
CQkJICogaXRlbSAqLyAsCisJCQkJCWludCBpZHggLyogaW5kZXggb2YgdW5pdCAqLyApCit7CisJ
cmV0dXJuIChkaXJlY3RvcnlfZW50cnlfZm9ybWF0ICopIGFkZHJlc3MoY29vcmQsCisJCQkJCQkg
IChpbnQpb2Zmc2V0X29mKGNvb3JkLCBpZHgpKTsKK30KKworLyogcmV0dXJuIG51bWJlciBvZiB1
bml0IHJlZmVyZW5jZWQgYnkgQGNvb3JkICovCitzdGF0aWMgaW50IGlkeF9vZihjb25zdCBjb29y
ZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEtMTI4
NSIsIGNvb3JkICE9IE5VTEwpOworCXJldHVybiBjb29yZC0+dW5pdF9wb3M7Cit9CisKKy8qIGZp
bmQgcG9zaXRpb24gd2hlcmUgZW50cnkgd2l0aCBAZW50cnlfa2V5IHdvdWxkIGJlIGluc2VydGVk
IGludG8gQGNvb3JkICovCitzdGF0aWMgaW50IGZpbmQoY29uc3QgY29vcmRfdCAqIGNvb3JkIC8q
IGNvb3JkIG9mIGl0ZW0gKi8gLAorCQljb25zdCByZWlzZXI0X2tleSAqIGVudHJ5X2tleSAvKiBr
ZXkgdG8gbG9vayBmb3IgKi8gLAorCQljbXBfdCAqIGxhc3QgLyogcmVzdWx0IG9mIGxhc3QgY29t
cGFyaXNvbiAqLyApCit7CisJaW50IGVudHJpZXM7CisKKwlpbnQgbGVmdDsKKwlpbnQgcmlnaHQ7
CisKKwljZGVfdW5pdF9oZWFkZXIgKmhlYWRlcjsKKworCWFzc2VydCgibmlraXRhLTEyOTUiLCBj
b29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjk2IiwgZW50cnlfa2V5ICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTEyOTciLCBsYXN0ICE9IE5VTEwpOworCisJZW50cmllcyA9IHVu
aXRzKGNvb3JkKTsKKwlsZWZ0ID0gMDsKKwlyaWdodCA9IGVudHJpZXMgLSAxOworCXdoaWxlIChy
aWdodCAtIGxlZnQgPj0gUkVJU0VSNF9TRVFfU0VBUkNIX0JSRUFLKSB7CisJCWludCBtZWRpYW47
CisKKwkJbWVkaWFuID0gKGxlZnQgKyByaWdodCkgPj4gMTsKKworCQloZWFkZXIgPSBoZWFkZXJf
YXQoY29vcmQsIG1lZGlhbik7CisJCSpsYXN0ID0gZGVfaWRfa2V5X2NtcCgmaGVhZGVyLT5oYXNo
LCBlbnRyeV9rZXkpOworCQlzd2l0Y2ggKCpsYXN0KSB7CisJCWNhc2UgTEVTU19USEFOOgorCQkJ
bGVmdCA9IG1lZGlhbjsKKwkJCWJyZWFrOworCQljYXNlIEdSRUFURVJfVEhBTjoKKwkJCXJpZ2h0
ID0gbWVkaWFuOworCQkJYnJlYWs7CisJCWNhc2UgRVFVQUxfVE86eworCQkJCWRvIHsKKwkJCQkJ
bWVkaWFuLS07CisJCQkJCWhlYWRlci0tOworCQkJCX0gd2hpbGUgKG1lZGlhbiA+PSAwICYmCisJ
CQkJCSBkZV9pZF9rZXlfY21wKCZoZWFkZXItPmhhc2gsCisJCQkJCQkgICAgICAgZW50cnlfa2V5
KSA9PSBFUVVBTF9UTyk7CisJCQkJcmV0dXJuIG1lZGlhbiArIDE7CisJCQl9CisJCX0KKwl9CisJ
aGVhZGVyID0gaGVhZGVyX2F0KGNvb3JkLCBsZWZ0KTsKKwlmb3IgKDsgbGVmdCA8IGVudHJpZXM7
ICsrbGVmdCwgKytoZWFkZXIpIHsKKwkJcHJlZmV0Y2goaGVhZGVyICsgMSk7CisJCSpsYXN0ID0g
ZGVfaWRfa2V5X2NtcCgmaGVhZGVyLT5oYXNoLCBlbnRyeV9rZXkpOworCQlpZiAoKmxhc3QgIT0g
TEVTU19USEFOKQorCQkJYnJlYWs7CisJfQorCWlmIChsZWZ0IDwgZW50cmllcykKKwkJcmV0dXJu
IGxlZnQ7CisJZWxzZQorCQlyZXR1cm4gUkVURVJSKC1FTk9FTlQpOworCit9CisKKy8qIGV4cGFu
ZCBAY29vcmQgYXMgdG8gYWNjb21tb2RhdGUgZm9yIGluc2VydGlvbiBvZiBAbm8gbmV3IGVudHJp
ZXMgc3RhcnRpbmcKKyAgIGZyb20gQHBvcywgd2l0aCB0b3RhbCBib2RpZXMgc2l6ZSBAc2l6ZS4g
Ki8KK3N0YXRpYyBpbnQgZXhwYW5kX2l0ZW0oY29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3Jk
IG9mIGl0ZW0gKi8gLAorCQkgICAgICAgaW50IHBvcyAvKiB1bml0IHBvc2l0aW9uICovICwgaW50
IG5vCS8qIG51bWJlciBvZiBuZXcKKwkJCQkJCQkJICogdW5pdHMqLyAsCisJCSAgICAgICBpbnQg
c2l6ZSAvKiB0b3RhbCBzaXplIG9mIG5ldyB1bml0cycgZGF0YSAqLyAsCisJCSAgICAgICB1bnNp
Z25lZCBpbnQgZGF0YV9zaXplCS8qIGZyZWUgc3BhY2UgYWxyZWFkeSByZXNlcnZlZAorCQkJCQkJ
ICogaW4gdGhlIGl0ZW0gZm9yIGluc2VydGlvbiAqLyApCit7CisJaW50IGVudHJpZXM7CisJY2Rl
X3VuaXRfaGVhZGVyICpoZWFkZXI7CisJY2hhciAqZGVudDsKKwlpbnQgaTsKKworCWFzc2VydCgi
bmlraXRhLTEzMTAiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzExIiwgcG9z
ID49IDApOworCWFzc2VydCgibmlraXRhLTEzMTIiLCBubyA+IDApOworCWFzc2VydCgibmlraXRh
LTEzMTMiLCBkYXRhX3NpemUgPj0gbm8gKiBzaXplb2YoZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdCkp
OworCWFzc2VydCgibmlraXRhLTEzNDMiLAorCSAgICAgICBpdGVtX2xlbmd0aF9ieV9jb29yZChj
b29yZCkgPj0KKwkgICAgICAgKGludCkoc2l6ZSArIGRhdGFfc2l6ZSArIG5vICogc2l6ZW9mICpo
ZWFkZXIpKTsKKworCWVudHJpZXMgPSB1bml0cyhjb29yZCk7CisKKwlpZiAocG9zID09IGVudHJp
ZXMpCisJCWRlbnQgPSBhZGRyZXNzKGNvb3JkLCBzaXplKTsKKwllbHNlCisJCWRlbnQgPSAoY2hh
ciAqKWVudHJ5X2F0KGNvb3JkLCBwb3MpOworCS8qIHBsYWNlIHdoZXJlIG5ldyBoZWFkZXIgd2ls
bCBiZSBpbiAqLworCWhlYWRlciA9IGhlYWRlcl9hdChjb29yZCwgcG9zKTsKKwkvKiBmcmVlIHNw
YWNlIGZvciBuZXcgZW50cnkgaGVhZGVycyAqLworCW1lbW1vdmUoaGVhZGVyICsgbm8sIGhlYWRl
ciwKKwkJKHVuc2lnbmVkKShhZGRyZXNzKGNvb3JkLCBzaXplKSAtIChjaGFyICopaGVhZGVyKSk7
CisJLyogaWYgYWRkaW5nIHRvIHRoZSBlbmQgaW5pdGlhbGlzZSBmaXJzdCBuZXcgaGVhZGVyICov
CisJaWYgKHBvcyA9PSBlbnRyaWVzKSB7CisJCXNldF9vZmZzZXQoY29vcmQsIHBvcywgKHVuc2ln
bmVkKXNpemUpOworCX0KKworCS8qIGFkanVzdCBlbnRyeSBwb2ludGVyIGFuZCBzaXplICovCisJ
ZGVudCA9IGRlbnQgKyBubyAqIHNpemVvZiAqaGVhZGVyOworCXNpemUgKz0gbm8gKiBzaXplb2Yg
KmhlYWRlcjsKKwkvKiBmcmVlIHNwYWNlIGZvciBuZXcgZW50cmllcyAqLworCW1lbW1vdmUoZGVu
dCArIGRhdGFfc2l6ZSwgZGVudCwKKwkJKHVuc2lnbmVkKShhZGRyZXNzKGNvb3JkLCBzaXplKSAt
IGRlbnQpKTsKKworCS8qIGluY3JlYXNlIGNvdW50ZXIgKi8KKwllbnRyaWVzICs9IG5vOworCXB1
dF91bmFsaWduZWQoY3B1X3RvX2xlMTYoKF9fdTE2KSBlbnRyaWVzKSwgJmZvcm1hdHRlZF9hdChj
b29yZCktPm51bV9vZl9lbnRyaWVzKTsKKworCS8qIFsgMCAuLi4gcG9zIF0gZW50cmllcyB3ZXJl
IHNoaWZ0ZWQgYnkgbm8gKiAoIHNpemVvZiAqaGVhZGVyICkKKwkgICBieXRlcy4gICovCisJZm9y
IChpID0gMDsgaSA8PSBwb3M7ICsraSkKKwkJYWRqX29mZnNldChjb29yZCwgaSwgbm8gKiBzaXpl
b2YgKmhlYWRlcik7CisJLyogWyBwb3MgKyBubyAuLi4gK1xpbmZ0eSApIGVudHJpZXMgd2VyZSBz
aGlmdGVkIGJ5ICggbm8gKgorCSAgIHNpemVvZiAqaGVhZGVyICsgZGF0YV9zaXplICkgYnl0ZXMg
Ki8KKwlmb3IgKGkgPSBwb3MgKyBubzsgaSA8IGVudHJpZXM7ICsraSkKKwkJYWRqX29mZnNldChj
b29yZCwgaSwgbm8gKiBzaXplb2YgKmhlYWRlciArIGRhdGFfc2l6ZSk7CisJcmV0dXJuIDA7Cit9
CisKKy8qIGluc2VydCBuZXcgQGVudHJ5IGludG8gaXRlbSAqLworc3RhdGljIGludCBleHBhbmQo
Y29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkgIHN0cnVjdCBj
ZGVfZW50cnkgKiBlbnRyeSAvKiBlbnRyeSB0byBpbnNlcnQgKi8gLAorCQkgIGludCBsZW4gLyog
bGVuZ3RoIG9mIEBlbnRyeSBkYXRhICovICwKKwkJICBpbnQgKnBvcyAvKiBwb3NpdGlvbiB0byBp
bnNlcnQgKi8gLAorCQkgIHJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgKiBkaXJfZW50cnkJLyogcGFy
YW1ldGVycyBmb3IgbmV3CisJCQkJCQkJICogZW50cnkgKi8gKQoreworCWNtcF90IGNtcF9yZXM7
CisJaW50IGRhdGFzaXplOworCisJKnBvcyA9IGZpbmQoY29vcmQsICZkaXJfZW50cnktPmtleSwg
JmNtcF9yZXMpOworCWlmICgqcG9zIDwgMCkKKwkJKnBvcyA9IHVuaXRzKGNvb3JkKTsKKworCWRh
dGFzaXplID0gc2l6ZW9mKGRpcmVjdG9yeV9lbnRyeV9mb3JtYXQpOworCWlmIChpc19sb25nbmFt
ZShlbnRyeS0+bmFtZS0+bmFtZSwgZW50cnktPm5hbWUtPmxlbikpCisJCWRhdGFzaXplICs9IGVu
dHJ5LT5uYW1lLT5sZW4gKyAxOworCisJZXhwYW5kX2l0ZW0oY29vcmQsICpwb3MsIDEsIGl0ZW1f
bGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKSAtIGxlbiwKKwkJICAgIGRhdGFzaXplKTsKKwlyZXR1cm4g
MDsKK30KKworLyogcGFzdGUgYm9keSBvZiBAZW50cnkgaW50byBpdGVtICovCitzdGF0aWMgaW50
IHBhc3RlX2VudHJ5KGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwK
KwkJICAgICAgIHN0cnVjdCBjZGVfZW50cnkgKiBlbnRyeSAvKiBuZXcgZW50cnkgKi8gLAorCQkg
ICAgICAgaW50IHBvcyAvKiBwb3NpdGlvbiB0byBpbnNlcnQgKi8gLAorCQkgICAgICAgcmVpc2Vy
NF9kaXJfZW50cnlfZGVzYyAqIGRpcl9lbnRyeQkvKiBwYXJhbWV0ZXJzIGZvcgorCQkJCQkJCQkg
KiBuZXcgZW50cnkgKi8gKQoreworCWNkZV91bml0X2hlYWRlciAqaGVhZGVyOworCWRpcmVjdG9y
eV9lbnRyeV9mb3JtYXQgKmRlbnQ7CisJY29uc3QgY2hhciAqbmFtZTsKKwlpbnQgbGVuOworCisJ
aGVhZGVyID0gaGVhZGVyX2F0KGNvb3JkLCBwb3MpOworCWRlbnQgPSBlbnRyeV9hdChjb29yZCwg
cG9zKTsKKworCWJ1aWxkX2RlX2lkX2J5X2tleSgmZGlyX2VudHJ5LT5rZXksICZoZWFkZXItPmhh
c2gpOworCWJ1aWxkX2lub2RlX2tleV9pZChlbnRyeS0+b2JqLCAmZGVudC0+aWQpOworCS8qIEFV
RElUIHVuc2FmZSBzdHJjcHkoKSBvcGVyYXRpb24hIEl0IHNob3VsZCBiZSByZXBsYWNlZCB3aXRo
CisJICAgbXVjaCBsZXNzIENQVSBodW5ncnkKKwkgICBtZW1jcHkoICggY2hhciAqICkgZGVudCAt
PiBuYW1lLCBlbnRyeSAtPiBuYW1lIC0+IG5hbWUgLCBlbnRyeSAtPiBuYW1lIC0+IGxlbiApOwor
CisJICAgQWxzbyBhIG1vcmUgbWFqb3IgdGhpbmcgaXMgdGhhdCB0aGVyZSBzaG91bGQgYmUgYSB3
YXkgdG8gZmlndXJlIG91dAorCSAgIGFtb3VudCBvZiBzcGFjZSBpbiBkZW50IC0+IG5hbWUgYW5k
IGJlIGFibGUgdG8gY2hlY2sgdGhhdCB3ZSBhcmUKKwkgICBub3QgZ29pbmcgdG8gb3ZlcndyaXRl
IG1vcmUgdGhhbiB3ZSBzdXBwb3NlZCB0byAqLworCW5hbWUgPSBlbnRyeS0+bmFtZS0+bmFtZTsK
KwlsZW4gPSBlbnRyeS0+bmFtZS0+bGVuOworCWlmIChpc19sb25nbmFtZShuYW1lLCBsZW4pKSB7
CisJCXN0cmNweSgodW5zaWduZWQgY2hhciAqKWRlbnQtPm5hbWUsIG5hbWUpOworCQlwdXRfdW5h
bGlnbmVkKDAsICZkZW50LT5uYW1lW2xlbl0pOworCX0KKwlyZXR1cm4gMDsKK30KKworLyogZXN0
aW1hdGUgaG93IG11Y2ggc3BhY2UgaXMgbmVjZXNzYXJ5IGluIGl0ZW0gdG8gaW5zZXJ0L3Bhc3Rl
IHNldCBvZiBlbnRyaWVzCisgICBkZXNjcmliZWQgaW4gQGRhdGEuICovCitpbnQgZXN0aW1hdGVf
Y2RlKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJIGNvbnN0
IHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSAvKiBwYXJhbWV0ZXJzIGZvciBuZXcgaXRlbSAqLyAp
Cit7CisJc3RydWN0IGNkZV9lbnRyeV9kYXRhICplOworCWludCByZXN1bHQ7CisJaW50IGk7CisK
KwllID0gKHN0cnVjdCBjZGVfZW50cnlfZGF0YSAqKSBkYXRhLT5kYXRhOworCisJYXNzZXJ0KCJu
aWtpdGEtMTI4OCIsIGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTI4OSIsIGUtPm51bV9v
Zl9lbnRyaWVzID49IDApOworCisJaWYgKGNvb3JkID09IE5VTEwpCisJCS8qIGluc2VydCAqLwor
CQlyZXN1bHQgPSBzaXplb2YoY2RlX2l0ZW1fZm9ybWF0KTsKKwllbHNlCisJCS8qIHBhc3RlICov
CisJCXJlc3VsdCA9IDA7CisKKwlyZXN1bHQgKz0gZS0+bnVtX29mX2VudHJpZXMgKgorCSAgICAo
c2l6ZW9mKGNkZV91bml0X2hlYWRlcikgKyBzaXplb2YoZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdCkp
OworCWZvciAoaSA9IDA7IGkgPCBlLT5udW1fb2ZfZW50cmllczsgKytpKSB7CisJCWNvbnN0IGNo
YXIgKm5hbWU7CisJCWludCBsZW47CisKKwkJbmFtZSA9IGUtPmVudHJ5W2ldLm5hbWUtPm5hbWU7
CisJCWxlbiA9IGUtPmVudHJ5W2ldLm5hbWUtPmxlbjsKKwkJYXNzZXJ0KCJuaWtpdGEtMjA1NCIs
IHN0cmxlbihuYW1lKSA9PSBsZW4pOworCQlpZiAoaXNfbG9uZ25hbWUobmFtZSwgbGVuKSkKKwkJ
CXJlc3VsdCArPSBsZW4gKyAxOworCX0KKwkoKHJlaXNlcjRfaXRlbV9kYXRhICopIGRhdGEpLT5s
ZW5ndGggPSByZXN1bHQ7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogLT5ucl91bml0cygpIG1l
dGhvZCBmb3IgdGhpcyBpdGVtIHBsdWdpbi4gKi8KK3Bvc19pbl9ub2RlX3QgbnJfdW5pdHNfY2Rl
KGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICkKK3sKKwlyZXR1cm4g
dW5pdHMoY29vcmQpOworfQorCisvKiAtPnVuaXRfa2V5KCkgbWV0aG9kIGZvciB0aGlzIGl0ZW0g
cGx1Z2luLiAqLworcmVpc2VyNF9rZXkgKnVuaXRfa2V5X2NkZShjb25zdCBjb29yZF90ICogY29v
cmQgLyogY29vcmQgb2YgaXRlbSAqLyAsCisJCQkgIHJlaXNlcjRfa2V5ICoga2V5IC8qIHJlc3Vs
dGluZyBrZXkgKi8gKQoreworCWFzc2VydCgibmlraXRhLTE0NTIiLCBjb29yZCAhPSBOVUxMKTsK
Kwlhc3NlcnQoIm5pa2l0YS0xMzQ1IiwgaWR4X29mKGNvb3JkKSA8IHVuaXRzKGNvb3JkKSk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTM0NiIsIGtleSAhPSBOVUxMKTsKKworCWl0ZW1fa2V5X2J5X2Nvb3Jk
KGNvb3JkLCBrZXkpOworCWV4dHJhY3Rfa2V5X2Zyb21fZGVfaWQoZXh0cmFjdF9kaXJfaWRfZnJv
bV9rZXkoa2V5KSwKKwkJCSAgICAgICAmaGVhZGVyX2F0KGNvb3JkLCBpZHhfb2YoY29vcmQpKS0+
aGFzaCwga2V5KTsKKwlyZXR1cm4ga2V5OworfQorCisvKiBtZXJnZWFibGVfY2RlKCk6IGltcGxl
bWVudGF0aW9uIG9mIC0+bWVyZ2VhYmxlKCkgaXRlbSBtZXRob2QuCisKKyAgIFR3byBkaXJlY3Rv
cnkgaXRlbXMgYXJlIG1lcmdlYWJsZSBpZmYgdGhleSBhcmUgZnJvbSB0aGUgc2FtZQorICAgZGly
ZWN0b3J5LiBUaGF0IHNpbXBsZS4KKworKi8KK2ludCBtZXJnZWFibGVfY2RlKGNvbnN0IGNvb3Jk
X3QgKiBwMSAvKiBjb29yZCBvZiBmaXJzdCBpdGVtICovICwKKwkJICBjb25zdCBjb29yZF90ICog
cDIgLyogY29vcmQgb2Ygc2Vjb25kIGl0ZW0gKi8gKQoreworCXJlaXNlcjRfa2V5IGsxOworCXJl
aXNlcjRfa2V5IGsyOworCisJYXNzZXJ0KCJuaWtpdGEtMTMzOSIsIHAxICE9IE5VTEwpOworCWFz
c2VydCgibmlraXRhLTEzNDAiLCBwMiAhPSBOVUxMKTsKKworCXJldHVybgorCSAgICAoaXRlbV9w
bHVnaW5fYnlfY29vcmQocDEpID09IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKHAyKSkgJiYKKwkgICAg
KGV4dHJhY3RfZGlyX2lkX2Zyb21fa2V5KGl0ZW1fa2V5X2J5X2Nvb3JkKHAxLCAmazEpKSA9PQor
CSAgICAgZXh0cmFjdF9kaXJfaWRfZnJvbV9rZXkoaXRlbV9rZXlfYnlfY29vcmQocDIsICZrMikp
KTsKKworfQorCisvKiAtPm1heF9rZXlfaW5zaWRlKCkgbWV0aG9kIGZvciB0aGlzIGl0ZW0gcGx1
Z2luLiAqLworcmVpc2VyNF9rZXkgKm1heF9rZXlfaW5zaWRlX2NkZShjb25zdCBjb29yZF90ICog
Y29vcmQgLyogY29vcmQgb2YgaXRlbSAqLyAsCisJCQkJcmVpc2VyNF9rZXkgKiByZXN1bHQgLyog
cmVzdWx0aW5nIGtleSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEtMTM0MiIsIGNvb3JkICE9IE5V
TEwpOworCisJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsIHJlc3VsdCk7CisJc2V0X2tleV9vcmRl
cmluZyhyZXN1bHQsIGdldF9rZXlfb3JkZXJpbmcocmVpc2VyNF9tYXhfa2V5KCkpKTsKKwlzZXRf
a2V5X2Z1bGxvaWQocmVzdWx0LCBnZXRfa2V5X2Z1bGxvaWQocmVpc2VyNF9tYXhfa2V5KCkpKTsK
KwlzZXRfa2V5X29mZnNldChyZXN1bHQsIGdldF9rZXlfb2Zmc2V0KHJlaXNlcjRfbWF4X2tleSgp
KSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogQGRhdGEgY29udGFpbnMgZGF0YSB3aGljaCBh
cmUgdG8gYmUgcHV0IGludG8gdHJlZSAqLworaW50IGNhbl9jb250YWluX2tleV9jZGUoY29uc3Qg
Y29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkJY29uc3QgcmVpc2VyNF9r
ZXkgKiBrZXkgLyoga2V5IHRvIGNoZWNrICovICwKKwkJCWNvbnN0IHJlaXNlcjRfaXRlbV9kYXRh
ICogZGF0YQkvKiBwYXJhbWV0ZXJzIG9mIG5ldworCQkJCQkJCSAqIGl0ZW0vdW5pdCBiZWluZwor
CQkJCQkJCSAqIGNyZWF0ZWQgKi8gKQoreworCXJlaXNlcjRfa2V5IGl0ZW1fa2V5OworCisJLyog
RklYTUUtVlM6IGRvIG5vdCByZWx5IG9uIGFueXRoaW5nIGJ1dCBpcGx1ZyBmaWVsZCBvZiBAZGF0
YS4gT25seQorCSAgIGRhdGEtPmlwbHVnIGlzIGluaXRpYWxpemVkICovCisJYXNzZXJ0KCJ2cy00
NTciLCBkYXRhICYmIGRhdGEtPmlwbHVnKTsKKy8qCWFzc2VydCggInZzLTU1MyIsIGRhdGEgLT4g
dXNlciA9PSAwICk7Ki8KKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJml0ZW1fa2V5KTsKKwor
CXJldHVybiAoaXRlbV9wbHVnaW5fYnlfY29vcmQoY29vcmQpID09IGRhdGEtPmlwbHVnKSAmJgor
CSAgICAoZXh0cmFjdF9kaXJfaWRfZnJvbV9rZXkoJml0ZW1fa2V5KSA9PQorCSAgICAgZXh0cmFj
dF9kaXJfaWRfZnJvbV9rZXkoa2V5KSk7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiBjZGVf
Y2hlY2sgLT5jaGVjaygpIG1ldGhvZCBmb3IgY29tcHJlc3NlZCBkaXJlY3RvcnkgaXRlbXMKKwor
ICAgdXNlZCBmb3IgZGVidWdnaW5nLCBldmVyeSBpdGVtIHNob3VsZCBoYXZlIGhlcmUgdGhlIG1v
c3QgY29tcGxldGUKKyAgIHBvc3NpYmxlIGNoZWNrIG9mIHRoZSBjb25zaXN0ZW5jeSBvZiB0aGUg
aXRlbSB0aGF0IHRoZSBpbnZlbnRvciBjYW4KKyAgIGNvbnN0cnVjdAorKi8KK2ludCByZWlzZXI0
X2NoZWNrX2NkZShjb25zdCBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSB0byBjaGVj
ayAqLywKKwkJICAgICAgY29uc3QgY2hhciAqKmVycm9yIC8qIHdoZXJlIHRvIHN0b3JlIGVycm9y
IG1lc3NhZ2UgKi8pCit7CisJaW50IGk7CisJaW50IHJlc3VsdDsKKwljaGFyICppdGVtX3N0YXJ0
OworCWNoYXIgKml0ZW1fZW5kOworCXJlaXNlcjRfa2V5IGtleTsKKworCWNvb3JkX3QgYzsKKwor
CWFzc2VydCgibmlraXRhLTEzNTciLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0x
MzU4IiwgZXJyb3IgIT0gTlVMTCk7CisKKwlpZiAoIWVyZ28oY29vcmQtPml0ZW1fcG9zICE9IDAs
CisJCSAgaXNfZG90X2tleShpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJmtleSkpKSkgeworCQkq
ZXJyb3IgPSAiQ0RFIGRvZXNuJ3Qgc3RhcnQgd2l0aCBkb3QiOworCQlyZXR1cm4gLTE7CisJfQor
CWl0ZW1fc3RhcnQgPSBpdGVtX2JvZHlfYnlfY29vcmQoY29vcmQpOworCWl0ZW1fZW5kID0gaXRl
bV9zdGFydCArIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKKworCWNvb3JkX2R1cCgmYywg
Y29vcmQpOworCXJlc3VsdCA9IDA7CisJZm9yIChpID0gMDsgaSA8IHVuaXRzKGNvb3JkKTsgKytp
KSB7CisJCWRpcmVjdG9yeV9lbnRyeV9mb3JtYXQgKmVudHJ5OworCisJCWlmICgoY2hhciAqKSho
ZWFkZXJfYXQoY29vcmQsIGkpICsgMSkgPgorCQkgICAgaXRlbV9lbmQgLSB1bml0cyhjb29yZCkg
KiBzaXplb2YgKmVudHJ5KSB7CisJCQkqZXJyb3IgPSAiQ0RFIGhlYWRlciBpcyBvdXQgb2YgYm91
bmRzIjsKKwkJCXJlc3VsdCA9IC0xOworCQkJYnJlYWs7CisJCX0KKwkJZW50cnkgPSBlbnRyeV9h
dChjb29yZCwgaSk7CisJCWlmICgoY2hhciAqKWVudHJ5IDwgaXRlbV9zdGFydCArIHNpemVvZihj
ZGVfaXRlbV9mb3JtYXQpKSB7CisJCQkqZXJyb3IgPSAiQ0RFIGhlYWRlciBpcyB0b28gbG93IjsK
KwkJCXJlc3VsdCA9IC0xOworCQkJYnJlYWs7CisJCX0KKwkJaWYgKChjaGFyICopKGVudHJ5ICsg
MSkgPiBpdGVtX2VuZCkgeworCQkJKmVycm9yID0gIkNERSBoZWFkZXIgaXMgdG9vIGhpZ2giOwor
CQkJcmVzdWx0ID0gLTE7CisJCQlicmVhazsKKwkJfQorCX0KKworCXJldHVybiByZXN1bHQ7Cit9
CisjZW5kaWYKKworLyogLT5pbml0KCkgbWV0aG9kIGZvciB0aGlzIGl0ZW0gcGx1Z2luLiAqLwor
aW50IGluaXRfY2RlKGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkgICAg
IGNvb3JkX3QgKiBmcm9tIFVOVVNFRF9BUkcsIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YQkvKiBz
dHJ1Y3R1cmUgdXNlZCBmb3IgaW5zZXJ0aW9uICovCisJICAgICBVTlVTRURfQVJHKQoreworCXB1
dF91bmFsaWduZWQoY3B1X3RvX2xlMTYoMCksICZmb3JtYXR0ZWRfYXQoY29vcmQpLT5udW1fb2Zf
ZW50cmllcyk7CisJcmV0dXJuIDA7Cit9CisKKy8qIC0+bG9va3VwKCkgbWV0aG9kIGZvciB0aGlz
IGl0ZW0gcGx1Z2luLiAqLworbG9va3VwX3Jlc3VsdCBsb29rdXBfY2RlKGNvbnN0IHJlaXNlcjRf
a2V5ICoga2V5IC8qIGtleSB0byBzZWFyY2ggZm9yICovICwKKwkJCSBsb29rdXBfYmlhcyBiaWFz
IC8qIHNlYXJjaCBiaWFzICovICwKKwkJCSBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRl
bSB0byBsb29rdXAgaW4gKi8gKQoreworCWNtcF90IGxhc3RfY29tcDsKKwlpbnQgcG9zOworCisJ
cmVpc2VyNF9rZXkgdXRtb3N0X2tleTsKKworCWFzc2VydCgibmlraXRhLTEyOTMiLCBjb29yZCAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjk0Iiwga2V5ICE9IE5VTEwpOworCisJQ0hFQ0tN
RShjb29yZCk7CisKKwlpZiAoa2V5Z3QoaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZ1dG1vc3Rf
a2V5KSwga2V5KSkgeworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQljb29yZC0+YmV0d2VlbiA9
IEJFRk9SRV9VTklUOworCQlyZXR1cm4gQ0JLX0NPT1JEX05PVEZPVU5EOworCX0KKwlwb3MgPSBm
aW5kKGNvb3JkLCBrZXksICZsYXN0X2NvbXApOworCWlmIChwb3MgPj0gMCkgeworCQljb29yZC0+
dW5pdF9wb3MgPSAoaW50KXBvczsKKwkJc3dpdGNoIChsYXN0X2NvbXApIHsKKwkJY2FzZSBFUVVB
TF9UTzoKKwkJCWNvb3JkLT5iZXR3ZWVuID0gQVRfVU5JVDsKKwkJCXJldHVybiBDQktfQ09PUkRf
Rk9VTkQ7CisJCWNhc2UgR1JFQVRFUl9USEFOOgorCQkJY29vcmQtPmJldHdlZW4gPSBCRUZPUkVf
VU5JVDsKKwkJCXJldHVybiBSRVRFUlIoLUVOT0VOVCk7CisJCWNhc2UgTEVTU19USEFOOgorCQlk
ZWZhdWx0OgorCQkJaW1wb3NzaWJsZSgibmlraXRhLTEyOTgiLCAiQnJva2VuIGZpbmQiKTsKKwkJ
CXJldHVybiBSRVRFUlIoLUVJTyk7CisJCX0KKwl9IGVsc2UgeworCQljb29yZC0+dW5pdF9wb3Mg
PSB1bml0cyhjb29yZCkgLSAxOworCQljb29yZC0+YmV0d2VlbiA9IEFGVEVSX1VOSVQ7CisJCXJl
dHVybiAoYmlhcyA9PQorCQkJRklORF9NQVhfTk9UX01PUkVfVEhBTikgPyBDQktfQ09PUkRfRk9V
TkQgOgorCQkgICAgQ0JLX0NPT1JEX05PVEZPVU5EOworCX0KK30KKworLyogLT5wYXN0ZSgpIG1l
dGhvZCBmb3IgdGhpcyBpdGVtIHBsdWdpbi4gKi8KK2ludCBwYXN0ZV9jZGUoY29vcmRfdCAqIGNv
b3JkIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCSAgICAgIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0
YQkvKiBwYXJhbWV0ZXJzIG9mIG5ldyB1bml0IGJlaW5nCisJCQkJCSAqIGluc2VydGVkICovICwK
KwkgICAgICBjYXJyeV9wbHVnaW5faW5mbyAqIGluZm8gVU5VU0VEX0FSRyAvKiB0b2RvIGNhcnJ5
IHF1ZXVlICovICkKK3sKKwlzdHJ1Y3QgY2RlX2VudHJ5X2RhdGEgKmU7CisJaW50IHJlc3VsdDsK
KwlpbnQgaTsKKworCUNIRUNLTUUoY29vcmQpOworCWUgPSAoc3RydWN0IGNkZV9lbnRyeV9kYXRh
ICopIGRhdGEtPmRhdGE7CisKKwlyZXN1bHQgPSAwOworCWZvciAoaSA9IDA7IGkgPCBlLT5udW1f
b2ZfZW50cmllczsgKytpKSB7CisJCWludCBwb3M7CisJCWludCBwaGFudG9tX3NpemU7CisKKwkJ
cGhhbnRvbV9zaXplID0gZGF0YS0+bGVuZ3RoOworCQlpZiAodW5pdHMoY29vcmQpID09IDApCisJ
CQlwaGFudG9tX3NpemUgLT0gc2l6ZW9mKGNkZV9pdGVtX2Zvcm1hdCk7CisKKwkJcmVzdWx0ID0K
KwkJICAgIGV4cGFuZChjb29yZCwgZS0+ZW50cnkgKyBpLCBwaGFudG9tX3NpemUsICZwb3MsIGRh
dGEtPmFyZyk7CisJCWlmIChyZXN1bHQgIT0gMCkKKwkJCWJyZWFrOworCQlyZXN1bHQgPSBwYXN0
ZV9lbnRyeShjb29yZCwgZS0+ZW50cnkgKyBpLCBwb3MsIGRhdGEtPmFyZyk7CisJCWlmIChyZXN1
bHQgIT0gMCkKKwkJCWJyZWFrOworCX0KKwlDSEVDS01FKGNvb3JkKTsKKwlyZXR1cm4gcmVzdWx0
OworfQorCisvKiBhbW91bnQgb2Ygc3BhY2Ugb2NjdXBpZWQgYnkgYWxsIGVudHJpZXMgc3RhcnRp
bmcgZnJvbSBAaWR4IGJvdGggaGVhZGVycyBhbmQKKyAgIGJvZGllcy4gKi8KK3N0YXRpYyB1bnNp
Z25lZCBpbnQgcGFydF9zaXplKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVt
ICovICwKKwkJCSAgICAgIGludCBpZHggLyogaW5kZXggb2YgdW5pdCAqLyApCit7CisJYXNzZXJ0
KCJuaWtpdGEtMTI5OSIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEzMDAiLCBp
ZHggPCAoaW50KXVuaXRzKGNvb3JkKSk7CisKKwlyZXR1cm4gc2l6ZW9mKGNkZV9pdGVtX2Zvcm1h
dCkgKworCSAgICAoaWR4ICsgMSkgKiBzaXplb2YoY2RlX3VuaXRfaGVhZGVyKSArIG9mZnNldF9v
Zihjb29yZCwKKwkJCQkJCQkgICAgaWR4ICsgMSkgLQorCSAgICBvZmZzZXRfb2YoY29vcmQsIDAp
OworfQorCisvKiBob3cgbWFueSBidXQgbm90IG1vcmUgdGhhbiBAd2FudCB1bml0cyBvZiBAc291
cmNlIGNhbiBiZSBtZXJnZWQgd2l0aAorICAgaXRlbSBpbiBAdGFyZ2V0IG5vZGUuIElmIHBlbmQg
PT0gYXBwZW5kIC0gd2UgdHJ5IHRvIGFwcGVuZCBsYXN0IGl0ZW0KKyAgIG9mIEB0YXJnZXQgYnkg
Zmlyc3QgdW5pdHMgb2YgQHNvdXJjZS4gSWYgcGVuZCA9PSBwcmVwZW5kIC0gd2UgdHJ5IHRvCisg
ICAicHJlcGVuZCIgZmlyc3QgaXRlbSBpbiBAdGFyZ2V0IGJ5IGxhc3QgdW5pdHMgb2YgQHNvdXJj
ZS4gQHRhcmdldAorICAgbm9kZSBoYXMgQGZyZWVfc3BhY2UgYnl0ZXMgb2YgZnJlZSBzcGFjZS4g
VG90YWwgc2l6ZSBvZiB0aG9zZSB1bml0cworICAgYXJlIHJldHVybmVkIHZpYSBAc2l6ZSAqLwor
aW50IGNhbl9zaGlmdF9jZGUodW5zaWduZWQgZnJlZV9zcGFjZSAvKiBmcmVlIHNwYWNlIGluIGl0
ZW0gKi8gLAorCQkgIGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBzb3VyY2UgaXRlbSAqLyAs
CisJCSAgem5vZGUgKiB0YXJnZXQgLyogdGFyZ2V0IG5vZGUgKi8gLAorCQkgIHNoaWZ0X2RpcmVj
dGlvbiBwZW5kIC8qIHNoaWZ0IGRpcmVjdGlvbiAqLyAsCisJCSAgdW5zaWduZWQgKnNpemUgLyog
cmVzdWx0aW5nIG51bWJlciBvZiBzaGlmdGVkIGJ5dGVzICovICwKKwkJICB1bnNpZ25lZCB3YW50
IC8qIG1heGltYWwgbnVtYmVyIG9mIGJ5dGVzIHRvIHNoaWZ0ICovICkKK3sKKwlpbnQgc2hpZnQ7
CisKKwlDSEVDS01FKGNvb3JkKTsKKwlpZiAod2FudCA9PSAwKSB7CisJCSpzaXplID0gMDsKKwkJ
cmV0dXJuIDA7CisJfQorCisJLyogcGVuZCA9PSBTSElGVF9MRUZUIDw9PT4gc2hpZnRpbmcgdG8g
dGhlIGxlZnQgKi8KKwlpZiAocGVuZCA9PSBTSElGVF9MRUZUKSB7CisJCWZvciAoc2hpZnQgPSBt
aW4oKGludCl3YW50IC0gMSwgdW5pdHMoY29vcmQpKTsgc2hpZnQgPj0gMDsKKwkJICAgICAtLXNo
aWZ0KSB7CisJCQkqc2l6ZSA9IHBhcnRfc2l6ZShjb29yZCwgc2hpZnQpOworCQkJaWYgKHRhcmdl
dCAhPSBOVUxMKQorCQkJCSpzaXplIC09IHNpemVvZihjZGVfaXRlbV9mb3JtYXQpOworCQkJaWYg
KCpzaXplIDw9IGZyZWVfc3BhY2UpCisJCQkJYnJlYWs7CisJCX0KKwkJc2hpZnQgPSBzaGlmdCAr
IDE7CisJfSBlbHNlIHsKKwkJaW50IHRvdGFsX3NpemU7CisKKwkJYXNzZXJ0KCJuaWtpdGEtMTMw
MSIsIHBlbmQgPT0gU0hJRlRfUklHSFQpOworCisJCXRvdGFsX3NpemUgPSBpdGVtX2xlbmd0aF9i
eV9jb29yZChjb29yZCk7CisJCWZvciAoc2hpZnQgPSB1bml0cyhjb29yZCkgLSB3YW50IC0gMTsg
c2hpZnQgPCB1bml0cyhjb29yZCkgLSAxOworCQkgICAgICsrc2hpZnQpIHsKKwkJCSpzaXplID0g
dG90YWxfc2l6ZSAtIHBhcnRfc2l6ZShjb29yZCwgc2hpZnQpOworCQkJaWYgKHRhcmdldCA9PSBO
VUxMKQorCQkJCSpzaXplICs9IHNpemVvZihjZGVfaXRlbV9mb3JtYXQpOworCQkJaWYgKCpzaXpl
IDw9IGZyZWVfc3BhY2UpCisJCQkJYnJlYWs7CisJCX0KKwkJc2hpZnQgPSB1bml0cyhjb29yZCkg
LSBzaGlmdCAtIDE7CisJfQorCWlmIChzaGlmdCA9PSAwKQorCQkqc2l6ZSA9IDA7CisJQ0hFQ0tN
RShjb29yZCk7CisJcmV0dXJuIHNoaWZ0OworfQorCisvKiAtPmNvcHlfdW5pdHMoKSBtZXRob2Qg
Zm9yIHRoaXMgaXRlbSBwbHVnaW4uICovCit2b2lkIGNvcHlfdW5pdHNfY2RlKGNvb3JkX3QgKiB0
YXJnZXQgLyogY29vcmQgb2YgdGFyZ2V0IGl0ZW0gKi8gLAorCQkgICAgY29vcmRfdCAqIHNvdXJj
ZSAvKiBjb29yZCBvZiBzb3VyY2UgaXRlbSAqLyAsCisJCSAgICB1bnNpZ25lZCBmcm9tIC8qIHN0
YXJ0aW5nIHVuaXQgKi8gLAorCQkgICAgdW5zaWduZWQgY291bnQgLyogaG93IG1hbnkgdW5pdHMg
dG8gY29weSAqLyAsCisJCSAgICBzaGlmdF9kaXJlY3Rpb24gd2hlcmVfaXNfZnJlZV9zcGFjZSAv
KiBzaGlmdCBkaXJlY3Rpb24gKi8gLAorCQkgICAgdW5zaWduZWQgZnJlZV9zcGFjZSAvKiBmcmVl
IHNwYWNlIGluIGl0ZW0gKi8gKQoreworCWNoYXIgKmhlYWRlcl9mcm9tOworCWNoYXIgKmhlYWRl
cl90bzsKKworCWNoYXIgKmVudHJ5X2Zyb207CisJY2hhciAqZW50cnlfdG87CisKKwlpbnQgcG9z
X2luX3RhcmdldDsKKwlpbnQgZGF0YV9zaXplOworCWludCBkYXRhX2RlbHRhOworCWludCBpOwor
CisJYXNzZXJ0KCJuaWtpdGEtMTMwMyIsIHRhcmdldCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0xMzA0Iiwgc291cmNlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEzMDUiLCAoaW50KWZy
b20gPCB1bml0cyhzb3VyY2UpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzA3IiwgKGludCkoZnJvbSAr
IGNvdW50KSA8PSB1bml0cyhzb3VyY2UpKTsKKworCWlmICh3aGVyZV9pc19mcmVlX3NwYWNlID09
IFNISUZUX0xFRlQpIHsKKwkJYXNzZXJ0KCJuaWtpdGEtMTQ1MyIsIGZyb20gPT0gMCk7CisJCXBv
c19pbl90YXJnZXQgPSB1bml0cyh0YXJnZXQpOworCX0gZWxzZSB7CisJCWFzc2VydCgibmlraXRh
LTEzMDkiLCAoaW50KShmcm9tICsgY291bnQpID09IHVuaXRzKHNvdXJjZSkpOworCQlwb3NfaW5f
dGFyZ2V0ID0gMDsKKwkJbWVtbW92ZShpdGVtX2JvZHlfYnlfY29vcmQodGFyZ2V0KSwKKwkJCShj
aGFyICopaXRlbV9ib2R5X2J5X2Nvb3JkKHRhcmdldCkgKyBmcmVlX3NwYWNlLAorCQkJaXRlbV9s
ZW5ndGhfYnlfY29vcmQodGFyZ2V0KSAtIGZyZWVfc3BhY2UpOworCX0KKworCUNIRUNLTUUodGFy
Z2V0KTsKKwlDSEVDS01FKHNvdXJjZSk7CisKKwkvKiBleHBhbmQgQHRhcmdldCAqLworCWRhdGFf
c2l6ZSA9CisJICAgIG9mZnNldF9vZihzb3VyY2UsIChpbnQpKGZyb20gKyBjb3VudCkpIC0gb2Zm
c2V0X29mKHNvdXJjZSwKKwkJCQkJCQkgICAgICAgKGludClmcm9tKTsKKworCWlmICh1bml0cyh0
YXJnZXQpID09IDApCisJCWZyZWVfc3BhY2UgLT0gc2l6ZW9mKGNkZV9pdGVtX2Zvcm1hdCk7CisK
KwlleHBhbmRfaXRlbSh0YXJnZXQsIHBvc19pbl90YXJnZXQsIChpbnQpY291bnQsCisJCSAgICAo
aW50KShpdGVtX2xlbmd0aF9ieV9jb29yZCh0YXJnZXQpIC0gZnJlZV9zcGFjZSksCisJCSAgICAo
dW5zaWduZWQpZGF0YV9zaXplKTsKKworCS8qIGNvcHkgZmlyc3QgQGNvdW50IHVuaXRzIG9mIEBz
b3VyY2UgaW50byBAdGFyZ2V0ICovCisJZGF0YV9kZWx0YSA9CisJICAgIG9mZnNldF9vZih0YXJn
ZXQsIHBvc19pbl90YXJnZXQpIC0gb2Zmc2V0X29mKHNvdXJjZSwgKGludClmcm9tKTsKKworCS8q
IGNvcHkgZW50cmllcyAqLworCWVudHJ5X2Zyb20gPSAoY2hhciAqKWVudHJ5X2F0KHNvdXJjZSwg
KGludClmcm9tKTsKKwllbnRyeV90byA9IChjaGFyICopZW50cnlfYXQoc291cmNlLCAoaW50KShm
cm9tICsgY291bnQpKTsKKwltZW1tb3ZlKGVudHJ5X2F0KHRhcmdldCwgcG9zX2luX3RhcmdldCks
IGVudHJ5X2Zyb20sCisJCSh1bnNpZ25lZCkoZW50cnlfdG8gLSBlbnRyeV9mcm9tKSk7CisKKwkv
KiBjb3B5IGhlYWRlcnMgKi8KKwloZWFkZXJfZnJvbSA9IChjaGFyICopaGVhZGVyX2F0KHNvdXJj
ZSwgKGludClmcm9tKTsKKwloZWFkZXJfdG8gPSAoY2hhciAqKWhlYWRlcl9hdChzb3VyY2UsIChp
bnQpKGZyb20gKyBjb3VudCkpOworCW1lbW1vdmUoaGVhZGVyX2F0KHRhcmdldCwgcG9zX2luX3Rh
cmdldCksIGhlYWRlcl9mcm9tLAorCQkodW5zaWduZWQpKGhlYWRlcl90byAtIGhlYWRlcl9mcm9t
KSk7CisKKwkvKiB1cGRhdGUgb2Zmc2V0cyAqLworCWZvciAoaSA9IHBvc19pbl90YXJnZXQ7IGkg
PCAoaW50KShwb3NfaW5fdGFyZ2V0ICsgY291bnQpOyArK2kpCisJCWFkal9vZmZzZXQodGFyZ2V0
LCBpLCBkYXRhX2RlbHRhKTsKKwlDSEVDS01FKHRhcmdldCk7CisJQ0hFQ0tNRShzb3VyY2UpOwor
fQorCisvKiAtPmN1dF91bml0cygpIG1ldGhvZCBmb3IgdGhpcyBpdGVtIHBsdWdpbi4gKi8KK2lu
dCBjdXRfdW5pdHNfY2RlKGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJ
ICBwb3NfaW5fbm9kZV90IGZyb20gLyogc3RhcnQgdW5pdCBwb3MgKi8gLAorCQkgIHBvc19pbl9u
b2RlX3QgdG8gLyogc3RvcCB1bml0IHBvcyAqLyAsCisJCSAgc3RydWN0IGNhcnJ5X2N1dF9kYXRh
ICpjZGF0YSBVTlVTRURfQVJHLAorCQkgIHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwg
cmVpc2VyNF9rZXkgKiBuZXdfZmlyc3QpCit7CisJY2hhciAqaGVhZGVyX2Zyb207CisJY2hhciAq
aGVhZGVyX3RvOworCisJY2hhciAqZW50cnlfZnJvbTsKKwljaGFyICplbnRyeV90bzsKKworCWlu
dCBzaXplOworCWludCBlbnRyeV9kZWx0YTsKKwlpbnQgaGVhZGVyX2RlbHRhOworCWludCBpOwor
CisJdW5zaWduZWQgY291bnQ7CisKKwlDSEVDS01FKGNvb3JkKTsKKworCWNvdW50ID0gdG8gLSBm
cm9tICsgMTsKKworCWFzc2VydCgibmlraXRhLTE0NTQiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS0xNDU1IiwgKGludCkoZnJvbSArIGNvdW50KSA8PSB1bml0cyhjb29yZCkpOwor
CisJaWYgKHNtYWxsZXN0X3JlbW92ZWQpCisJCXVuaXRfa2V5X2J5X2Nvb3JkKGNvb3JkLCBzbWFs
bGVzdF9yZW1vdmVkKTsKKworCWlmIChuZXdfZmlyc3QpIHsKKwkJY29vcmRfdCBuZXh0OworCisJ
CS8qIG5vdCBldmVyeXRoaW5nIGlzIGN1dCBmcm9tIGl0ZW0gaGVhZCAqLworCQlhc3NlcnQoInZz
LTE1MjciLCBmcm9tID09IDApOworCQlhc3NlcnQoInZzLTE1MjgiLCB0byA8IHVuaXRzKGNvb3Jk
KSAtIDEpOworCisJCWNvb3JkX2R1cCgmbmV4dCwgY29vcmQpOworCQluZXh0LnVuaXRfcG9zKys7
CisJCXVuaXRfa2V5X2J5X2Nvb3JkKCZuZXh0LCBuZXdfZmlyc3QpOworCX0KKworCXNpemUgPSBp
dGVtX2xlbmd0aF9ieV9jb29yZChjb29yZCk7CisJaWYgKGNvdW50ID09ICh1bnNpZ25lZCl1bml0
cyhjb29yZCkpIHsKKwkJcmV0dXJuIHNpemU7CisJfQorCisJaGVhZGVyX2Zyb20gPSAoY2hhciAq
KWhlYWRlcl9hdChjb29yZCwgKGludClmcm9tKTsKKwloZWFkZXJfdG8gPSAoY2hhciAqKWhlYWRl
cl9hdChjb29yZCwgKGludCkoZnJvbSArIGNvdW50KSk7CisKKwllbnRyeV9mcm9tID0gKGNoYXIg
KillbnRyeV9hdChjb29yZCwgKGludClmcm9tKTsKKwllbnRyeV90byA9IChjaGFyICopZW50cnlf
YXQoY29vcmQsIChpbnQpKGZyb20gKyBjb3VudCkpOworCisJLyogbW92ZSBoZWFkZXJzICovCisJ
bWVtbW92ZShoZWFkZXJfZnJvbSwgaGVhZGVyX3RvLAorCQkodW5zaWduZWQpKGFkZHJlc3MoY29v
cmQsIHNpemUpIC0gaGVhZGVyX3RvKSk7CisKKwloZWFkZXJfZGVsdGEgPSBoZWFkZXJfdG8gLSBo
ZWFkZXJfZnJvbTsKKworCWVudHJ5X2Zyb20gLT0gaGVhZGVyX2RlbHRhOworCWVudHJ5X3RvIC09
IGhlYWRlcl9kZWx0YTsKKwlzaXplIC09IGhlYWRlcl9kZWx0YTsKKworCS8qIGNvcHkgZW50cmll
cyAqLworCW1lbW1vdmUoZW50cnlfZnJvbSwgZW50cnlfdG8sCisJCSh1bnNpZ25lZCkoYWRkcmVz
cyhjb29yZCwgc2l6ZSkgLSBlbnRyeV90bykpOworCisJZW50cnlfZGVsdGEgPSBlbnRyeV90byAt
IGVudHJ5X2Zyb207CisJc2l6ZSAtPSBlbnRyeV9kZWx0YTsKKworCS8qIHVwZGF0ZSBvZmZzZXRz
ICovCisKKwlmb3IgKGkgPSAwOyBpIDwgKGludClmcm9tOyArK2kpCisJCWFkal9vZmZzZXQoY29v
cmQsIGksIC1oZWFkZXJfZGVsdGEpOworCisJZm9yIChpID0gZnJvbTsgaSA8IHVuaXRzKGNvb3Jk
KSAtIChpbnQpY291bnQ7ICsraSkKKwkJYWRqX29mZnNldChjb29yZCwgaSwgLWhlYWRlcl9kZWx0
YSAtIGVudHJ5X2RlbHRhKTsKKworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlMTYoKF9fdTE2KSB1
bml0cyhjb29yZCkgLSBjb3VudCksCisJCSAgICAgICZmb3JtYXR0ZWRfYXQoY29vcmQpLT5udW1f
b2ZfZW50cmllcyk7CisKKwlpZiAoZnJvbSA9PSAwKSB7CisJCS8qIGVudHJpZXMgZnJvbSBoZWFk
IHdhcyByZW1vdmVkIC0gbW92ZSByZW1haW5pbmcgdG8gcmlnaHQgKi8KKwkJbWVtbW92ZSgoY2hh
ciAqKWl0ZW1fYm9keV9ieV9jb29yZChjb29yZCkgKworCQkJaGVhZGVyX2RlbHRhICsgZW50cnlf
ZGVsdGEsIGl0ZW1fYm9keV9ieV9jb29yZChjb29yZCksCisJCQkodW5zaWduZWQpc2l6ZSk7CisJ
CWlmIChSRUlTRVI0X0RFQlVHKQorCQkJbWVtc2V0KGl0ZW1fYm9keV9ieV9jb29yZChjb29yZCks
IDAsCisJCQkgICAgICAgKHVuc2lnbmVkKWhlYWRlcl9kZWx0YSArIGVudHJ5X2RlbHRhKTsKKwl9
IGVsc2UgeworCQkvKiBmcmVlZCBzcGFjZSBpcyBhbHJlYWR5IGF0IHRoZSBlbmQgb2YgaXRlbSAq
LworCQlpZiAoUkVJU0VSNF9ERUJVRykKKwkJCW1lbXNldCgoY2hhciAqKWl0ZW1fYm9keV9ieV9j
b29yZChjb29yZCkgKyBzaXplLCAwLAorCQkJICAgICAgICh1bnNpZ25lZCloZWFkZXJfZGVsdGEg
KyBlbnRyeV9kZWx0YSk7CisJfQorCisJcmV0dXJuIGhlYWRlcl9kZWx0YSArIGVudHJ5X2RlbHRh
OworfQorCitpbnQga2lsbF91bml0c19jZGUoY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0
ZW0gKi8gLAorCQkgICBwb3NfaW5fbm9kZV90IGZyb20gLyogc3RhcnQgdW5pdCBwb3MgKi8gLAor
CQkgICBwb3NfaW5fbm9kZV90IHRvIC8qIHN0b3AgdW5pdCBwb3MgKi8gLAorCQkgICBzdHJ1Y3Qg
Y2Fycnlfa2lsbF9kYXRhICprZGF0YSBVTlVTRURfQVJHLAorCQkgICByZWlzZXI0X2tleSAqIHNt
YWxsZXN0X3JlbW92ZWQsIHJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0KQoreworCXJldHVybiBjdXRf
dW5pdHNfY2RlKGNvb3JkLCBmcm9tLCB0bywgTlVMTCwgc21hbGxlc3RfcmVtb3ZlZCwgbmV3X2Zp
cnN0KTsKK30KKworLyogLT5zLmRpci5leHRyYWN0X2tleSgpIG1ldGhvZCBmb3IgdGhpcyBpdGVt
IHBsdWdpbi4gKi8KK2ludCBleHRyYWN0X2tleV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkIC8q
IGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkgICAgcmVpc2VyNF9rZXkgKiBrZXkgLyogcmVzdWx0aW5n
IGtleSAqLyApCit7CisJZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdCAqZGVudDsKKworCWFzc2VydCgi
bmlraXRhLTExNTUiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMTU2Iiwga2V5
ICE9IE5VTEwpOworCisJZGVudCA9IGVudHJ5X2F0KGNvb3JkLCBpZHhfb2YoY29vcmQpKTsKKwly
ZXR1cm4gZXh0cmFjdF9rZXlfZnJvbV9pZCgmZGVudC0+aWQsIGtleSk7Cit9CisKK2ludAordXBk
YXRlX2tleV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtl
eSwKKwkgICAgICAgbG9ja19oYW5kbGUgKiBsaCBVTlVTRURfQVJHKQoreworCWRpcmVjdG9yeV9l
bnRyeV9mb3JtYXQgKmRlbnQ7CisJb2JqX2tleV9pZCBvYmpfaWQ7CisJaW50IHJlc3VsdDsKKwor
CWFzc2VydCgibmlraXRhLTIzNDQiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0y
MzQ1Iiwga2V5ICE9IE5VTEwpOworCisJZGVudCA9IGVudHJ5X2F0KGNvb3JkLCBpZHhfb2YoY29v
cmQpKTsKKwlyZXN1bHQgPSBidWlsZF9vYmpfa2V5X2lkKGtleSwgJm9ial9pZCk7CisJaWYgKHJl
c3VsdCA9PSAwKSB7CisJCWRlbnQtPmlkID0gb2JqX2lkOworCQl6bm9kZV9tYWtlX2RpcnR5KGNv
b3JkLT5ub2RlKTsKKwl9CisJcmV0dXJuIDA7Cit9CisKKy8qIC0+cy5kaXIuZXh0cmFjdF9uYW1l
KCkgbWV0aG9kIGZvciB0aGlzIGl0ZW0gcGx1Z2luLiAqLworY2hhciAqZXh0cmFjdF9uYW1lX2Nk
ZShjb25zdCBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAqLyAsIGNoYXIgKmJ1ZikK
K3sKKwlkaXJlY3RvcnlfZW50cnlfZm9ybWF0ICpkZW50OworCisJYXNzZXJ0KCJuaWtpdGEtMTE1
NyIsIGNvb3JkICE9IE5VTEwpOworCisJZGVudCA9IGVudHJ5X2F0KGNvb3JkLCBpZHhfb2YoY29v
cmQpKTsKKwlyZXR1cm4gZXh0cmFjdF9kZW50X25hbWUoY29vcmQsIGRlbnQsIGJ1Zik7Cit9CisK
K3N0YXRpYyBpbnQgY2RlX2J5dGVzKGludCBwYXN0aW5nLCBjb25zdCByZWlzZXI0X2l0ZW1fZGF0
YSAqIGRhdGEpCit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IGRhdGEtPmxlbmd0aDsKKwlp
ZiAoIXBhc3RpbmcpCisJCXJlc3VsdCAtPSBzaXplb2YoY2RlX2l0ZW1fZm9ybWF0KTsKKwlyZXR1
cm4gcmVzdWx0OworfQorCisvKiAtPnMuZGlyLmFkZF9lbnRyeSgpIG1ldGhvZCBmb3IgdGhpcyBp
dGVtIHBsdWdpbiAqLworaW50IGFkZF9lbnRyeV9jZGUoc3RydWN0IGlub2RlICpkaXIgLyogZGly
ZWN0b3J5IG9iamVjdCAqLyAsCisJCSAgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0g
Ki8gLAorCQkgIGxvY2tfaGFuZGxlICogbGggLyogbG9jayBoYW5kbGUgZm9yIGluc2VydGlvbiAq
LyAsCisJCSAgY29uc3Qgc3RydWN0IGRlbnRyeSAqbmFtZSAvKiBuYW1lIHRvIGluc2VydCAqLyAs
CisJCSAgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqIGRpcl9lbnRyeQkvKiBwYXJhbWV0ZXJzIG9m
IG5ldworCQkJCQkJCSAqIGRpcmVjdG9yeSBlbnRyeSAqLyApCit7CisJcmVpc2VyNF9pdGVtX2Rh
dGEgZGF0YTsKKwlzdHJ1Y3QgY2RlX2VudHJ5IGVudHJ5OworCXN0cnVjdCBjZGVfZW50cnlfZGF0
YSBlZGF0YTsKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEtMTY1NiIsIGNvb3JkLT5u
b2RlID09IGxoLT5ub2RlKTsKKwlhc3NlcnQoIm5pa2l0YS0xNjU3Iiwgem5vZGVfaXNfd3JpdGVf
bG9ja2VkKGNvb3JkLT5ub2RlKSk7CisKKwllZGF0YS5udW1fb2ZfZW50cmllcyA9IDE7CisJZWRh
dGEuZW50cnkgPSAmZW50cnk7CisKKwllbnRyeS5kaXIgPSBkaXI7CisJZW50cnkub2JqID0gZGly
X2VudHJ5LT5vYmo7CisJZW50cnkubmFtZSA9ICZuYW1lLT5kX25hbWU7CisKKwlkYXRhLmRhdGEg
PSAoY2hhciAqKSZlZGF0YTsKKwlkYXRhLnVzZXIgPSAwOwkJLyogJmVkYXRhIGlzIG5vdCB1c2Vy
IHNwYWNlICovCisJZGF0YS5pcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2lkKENPTVBPVU5EX0RJUl9J
RCk7CisJZGF0YS5hcmcgPSBkaXJfZW50cnk7CisJYXNzZXJ0KCJuaWtpdGEtMTMwMiIsIGRhdGEu
aXBsdWcgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSBpc19kb3Rfa2V5KCZkaXJfZW50cnktPmtleSk7
CisJZGF0YS5sZW5ndGggPSBlc3RpbWF0ZV9jZGUocmVzdWx0ID8gY29vcmQgOiBOVUxMLCAmZGF0
YSk7CisKKwlpbm9kZV9hZGRfYnl0ZXMoZGlyLCBjZGVfYnl0ZXMocmVzdWx0LCAmZGF0YSkpOwor
CisJaWYgKHJlc3VsdCkKKwkJcmVzdWx0ID0gaW5zZXJ0X2J5X2Nvb3JkKGNvb3JkLCAmZGF0YSwg
JmRpcl9lbnRyeS0+a2V5LCBsaCwgMCk7CisJZWxzZQorCQlyZXN1bHQgPSByZWlzZXI0X3Jlc2l6
ZV9pdGVtKGNvb3JkLCAmZGF0YSwgJmRpcl9lbnRyeS0+a2V5LAorCQkJCQkgICAgIGxoLCAwKTsK
KwlyZXR1cm4gcmVzdWx0OworfQorCisvKiAtPnMuZGlyLnJlbV9lbnRyeSgpICovCitpbnQgcmVt
X2VudHJ5X2NkZShzdHJ1Y3QgaW5vZGUgKmRpciAvKiBkaXJlY3Rvcnkgb2YgaXRlbSAqLyAsCisJ
CSAgY29uc3Qgc3RydWN0IHFzdHIgKm5hbWUsIGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBp
dGVtICovICwKKwkJICBsb2NrX2hhbmRsZSAqIGxoIFVOVVNFRF9BUkcJLyogbG9jayBoYW5kbGUg
Zm9yCisJCQkJCQkgKiByZW1vdmFsICovICwKKwkJICByZWlzZXI0X2Rpcl9lbnRyeV9kZXNjICog
ZW50cnkgVU5VU0VEX0FSRwkvKiBwYXJhbWV0ZXJzIG9mCisJCQkJCQkJCSAqIGRpcmVjdG9yeSBl
bnRyeQorCQkJCQkJCQkgKiBiZWluZyByZW1vdmVkICovICkKK3sKKwljb29yZF90IHNoYWRvdzsK
KwlpbnQgcmVzdWx0OworCWludCBsZW5ndGg7CisJT05fREVCVUcoY2hhciBidWZbREVfTkFNRV9C
VUZfTEVOXSk7CisKKwlhc3NlcnQoIm5pa2l0YS0yODcwIiwgc3RybGVuKG5hbWUtPm5hbWUpID09
IG5hbWUtPmxlbik7CisJYXNzZXJ0KCJuaWtpdGEtMjg2OSIsCisJICAgICAgICFzdHJjbXAobmFt
ZS0+bmFtZSwgZXh0cmFjdF9uYW1lX2NkZShjb29yZCwgYnVmKSkpOworCisJbGVuZ3RoID0gc2l6
ZW9mKGRpcmVjdG9yeV9lbnRyeV9mb3JtYXQpICsgc2l6ZW9mKGNkZV91bml0X2hlYWRlcik7CisJ
aWYgKGlzX2xvbmduYW1lKG5hbWUtPm5hbWUsIG5hbWUtPmxlbikpCisJCWxlbmd0aCArPSBuYW1l
LT5sZW4gKyAxOworCisJaWYgKGlub2RlX2dldF9ieXRlcyhkaXIpIDwgbGVuZ3RoKSB7CisJCXdh
cm5pbmcoIm5pa2l0YS0yNjI4IiwgIkRpciBpcyBicm9rZTogJWxsdTogJWxsdSIsCisJCQkodW5z
aWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQoZGlyKSwKKwkJCWlub2RlX2dldF9ieXRlcyhk
aXIpKTsKKworCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCX0KKworCS8qIGN1dF9ub2RlKCkgaXMg
c3VwcG9zZWQgdG8gdGFrZSBwb2ludGVycyB0byBfZGlmZmVyZW50XworCSAgIGNvb3JkcywgYmVj
YXVzZSBpdCB3aWxsIG1vZGlmeSB0aGVtIHdpdGhvdXQgcmVzcGVjdCB0bworCSAgIHBvc3NpYmxl
IGFsaWFzaW5nLiBUbyB3b3JrIGFyb3VuZCB0aGlzLCBjcmVhdGUgdGVtcG9yYXJ5IGNvcHkKKwkg
ICBvZiBAY29vcmQuCisJICovCisJY29vcmRfZHVwKCZzaGFkb3csIGNvb3JkKTsKKwlyZXN1bHQg
PQorCSAgICBraWxsX25vZGVfY29udGVudChjb29yZCwgJnNoYWRvdywgTlVMTCwgTlVMTCwgTlVM
TCwgTlVMTCwgTlVMTCwgMCk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCWlub2RlX3N1Yl9ieXRl
cyhkaXIsIGxlbmd0aCk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIC0+cy5kaXIubWF4
X25hbWVfbGVuKCkgbWV0aG9kIGZvciB0aGlzIGl0ZW0gcGx1Z2luICovCitpbnQgbWF4X25hbWVf
bGVuX2NkZShjb25zdCBzdHJ1Y3QgaW5vZGUgKmRpciAvKiBkaXJlY3RvcnkgKi8gKQoreworCXJl
dHVybgorCQlyZWlzZXI0X3RyZWVfYnlfaW5vZGUoZGlyKS0+bnBsdWctPm1heF9pdGVtX3NpemUo
KSAtCisJCXNpemVvZihkaXJlY3RvcnlfZW50cnlfZm9ybWF0KSAtIHNpemVvZihjZGVfaXRlbV9m
b3JtYXQpIC0KKwkJc2l6ZW9mKGNkZV91bml0X2hlYWRlcikgLSAyOworfQorCisvKiBNYWtlIExp
bnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTog
IksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13
aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8t
ZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jZGUu
aCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jZGUuaAotLS0gbGludXgtNS40
LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jZGUuaAkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0v
Y2RlLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NjYyMjIyNzggKzAxMDAKQEAgLTAsMCArMSw4NyBA
QAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2lu
ZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisvKiBDb21wb3VuZCBkaXJlY3Rvcnkg
aXRlbS4gU2VlIGNkZS5jIGZvciBkZXNjcmlwdGlvbi4gKi8KKworI2lmICFkZWZpbmVkKCBfX0ZT
X1JFSVNFUjRfUExVR0lOX0NPTVBSRVNTRURfREVfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0
X1BMVUdJTl9DT01QUkVTU0VEX0RFX0hfXworCisjaW5jbHVkZSAiLi4vLi4vZm9yd2FyZC5oIgor
I2luY2x1ZGUgIi4uLy4uL2thc3NpZ24uaCIKKyNpbmNsdWRlICIuLi8uLi9kZm9ybWF0LmgiCisK
KyNpbmNsdWRlIDxsaW51eC9mcy5oPgkJLyogZm9yIHN0cnVjdCBpbm9kZSAqLworI2luY2x1ZGUg
PGxpbnV4L2RjYWNoZS5oPgkvKiBmb3Igc3RydWN0IGRlbnRyeSwgZXRjICAqLworCit0eXBlZGVm
IHN0cnVjdCBjZGVfdW5pdF9oZWFkZXIgeworCWRlX2lkIGhhc2g7CisJZDE2IG9mZnNldDsKK30g
Y2RlX3VuaXRfaGVhZGVyOworCit0eXBlZGVmIHN0cnVjdCBjZGVfaXRlbV9mb3JtYXQgeworCWQx
NiBudW1fb2ZfZW50cmllczsKKwljZGVfdW5pdF9oZWFkZXIgZW50cnlbMF07Cit9IGNkZV9pdGVt
X2Zvcm1hdDsKKworc3RydWN0IGNkZV9lbnRyeSB7CisJY29uc3Qgc3RydWN0IGlub2RlICpkaXI7
CisJY29uc3Qgc3RydWN0IGlub2RlICpvYmo7CisJY29uc3Qgc3RydWN0IHFzdHIgKm5hbWU7Cit9
OworCitzdHJ1Y3QgY2RlX2VudHJ5X2RhdGEgeworCWludCBudW1fb2ZfZW50cmllczsKKwlzdHJ1
Y3QgY2RlX2VudHJ5ICplbnRyeTsKK307CisKKy8qIHBsdWdpbi0+aXRlbS5iLiogKi8KK3JlaXNl
cjRfa2V5ICptYXhfa2V5X2luc2lkZV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkLCByZWlzZXI0
X2tleSAqIHJlc3VsdCk7CitpbnQgY2FuX2NvbnRhaW5fa2V5X2NkZShjb25zdCBjb29yZF90ICog
Y29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJY29uc3QgcmVpc2VyNF9pdGVtX2Rh
dGEgKik7CitpbnQgbWVyZ2VhYmxlX2NkZShjb25zdCBjb29yZF90ICogcDEsIGNvbnN0IGNvb3Jk
X3QgKiBwMik7Citwb3NfaW5fbm9kZV90IG5yX3VuaXRzX2NkZShjb25zdCBjb29yZF90ICogY29v
cmQpOworcmVpc2VyNF9rZXkgKnVuaXRfa2V5X2NkZShjb25zdCBjb29yZF90ICogY29vcmQsIHJl
aXNlcjRfa2V5ICoga2V5KTsKK2ludCBlc3RpbWF0ZV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3Jk
LCBjb25zdCByZWlzZXI0X2l0ZW1fZGF0YSAqIGRhdGEpOwordm9pZCBwcmludF9jZGUoY29uc3Qg
Y2hhciAqcHJlZml4LCBjb29yZF90ICogY29vcmQpOworaW50IGluaXRfY2RlKGNvb3JkX3QgKiBj
b29yZCwgY29vcmRfdCAqIGZyb20sIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSk7Citsb29rdXBf
cmVzdWx0IGxvb2t1cF9jZGUoY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksIGxvb2t1cF9iaWFzIGJp
YXMsCisJCQkgY29vcmRfdCAqIGNvb3JkKTsKK2ludCBwYXN0ZV9jZGUoY29vcmRfdCAqIGNvb3Jk
LCByZWlzZXI0X2l0ZW1fZGF0YSAqIGRhdGEsCisJICAgICAgY2FycnlfcGx1Z2luX2luZm8gKiBp
bmZvIFVOVVNFRF9BUkcpOworaW50IGNhbl9zaGlmdF9jZGUodW5zaWduZWQgZnJlZV9zcGFjZSwg
Y29vcmRfdCAqIGNvb3JkLCB6bm9kZSAqIHRhcmdldCwKKwkJICBzaGlmdF9kaXJlY3Rpb24gcGVu
ZCwgdW5zaWduZWQgKnNpemUsIHVuc2lnbmVkIHdhbnQpOwordm9pZCBjb3B5X3VuaXRzX2NkZShj
b29yZF90ICogdGFyZ2V0LCBjb29yZF90ICogc291cmNlLCB1bnNpZ25lZCBmcm9tLAorCQkgICAg
dW5zaWduZWQgY291bnQsIHNoaWZ0X2RpcmVjdGlvbiB3aGVyZV9pc19mcmVlX3NwYWNlLAorCQkg
ICAgdW5zaWduZWQgZnJlZV9zcGFjZSk7CitpbnQgY3V0X3VuaXRzX2NkZShjb29yZF90ICogY29v
cmQsIHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywKKwkJICBzdHJ1Y3QgY2Fy
cnlfY3V0X2RhdGEgKiwgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgIHJlaXNl
cjRfa2V5ICogbmV3X2ZpcnN0KTsKK2ludCBraWxsX3VuaXRzX2NkZShjb29yZF90ICogY29vcmQs
IHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywKKwkJICAgc3RydWN0IGNhcnJ5
X2tpbGxfZGF0YSAqLCByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJCSAgIHJlaXNl
cjRfa2V5ICogbmV3X2ZpcnN0KTsKK3ZvaWQgcHJpbnRfY2RlKGNvbnN0IGNoYXIgKnByZWZpeCwg
Y29vcmRfdCAqIGNvb3JkKTsKK2ludCByZWlzZXI0X2NoZWNrX2NkZShjb25zdCBjb29yZF90ICog
Y29vcmQsIGNvbnN0IGNoYXIgKiplcnJvcik7CisKKy8qIHBsdWdpbi0+dS5pdGVtLnMuZGlyLiog
Ki8KK2ludCBleHRyYWN0X2tleV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkLCByZWlzZXI0X2tl
eSAqIGtleSk7CitpbnQgdXBkYXRlX2tleV9jZGUoY29uc3QgY29vcmRfdCAqIGNvb3JkLCBjb25z
dCByZWlzZXI0X2tleSAqIGtleSwKKwkJICAgbG9ja19oYW5kbGUgKiBsaCk7CitjaGFyICpleHRy
YWN0X25hbWVfY2RlKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY2hhciAqYnVmKTsKK2ludCBhZGRf
ZW50cnlfY2RlKHN0cnVjdCBpbm9kZSAqZGlyLCBjb29yZF90ICogY29vcmQsCisJCSAgbG9ja19o
YW5kbGUgKiBsaCwgY29uc3Qgc3RydWN0IGRlbnRyeSAqbmFtZSwKKwkJICByZWlzZXI0X2Rpcl9l
bnRyeV9kZXNjICogZW50cnkpOworaW50IHJlbV9lbnRyeV9jZGUoc3RydWN0IGlub2RlICpkaXIs
IGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLCBjb29yZF90ICogY29vcmQsCisJCSAgbG9ja19oYW5k
bGUgKiBsaCwgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5KTsKK2ludCBtYXhfbmFtZV9s
ZW5fY2RlKGNvbnN0IHN0cnVjdCBpbm9kZSAqZGlyKTsKKworLyogX19GU19SRUlTRVI0X1BMVUdJ
Tl9DT01QUkVTU0VEX0RFX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisg
ICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9k
ZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBm
aWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2N0YWlsLmMgbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vY3RhaWwuYwotLS0gbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jdGFpbC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAw
MDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9jdGFpbC5j
CTIwMjAtMDItMDUgMjA6NTM6NDEuNDY3MjIyMjg2ICswMTAwCkBAIC0wLDAgKzEsMTc1NCBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisvKiBjdGFpbHMgKGFrYSAiY2x1c3RlcmVk
IHRhaWxzIikgYXJlIGl0ZW1zIGZvciBjcnlwdGNvbXByZXNzIG9iamVjdHMgKi8KKworLyogREVT
Q1JJUFRJT046CisKK0VhY2ggY3J5cHRjb21wcmVzcyBvYmplY3QgaXMgc3RvcmVkIG9uIGRpc2sg
YXMgYSBzZXQgb2YgY2x1c3RlcnMgc2xpY2VkCitpbnRvIGN0YWlscy4KKworSW50ZXJuYWwgb24t
ZGlzayBzdHJ1Y3R1cmU6CisKKyAgICAgICAgSEVBREVSICAgKDEpICBIZXJlIHN0b3JlZCBkaXNr
IGNsdXN0ZXIgc2hpZnQKKwlCT0RZCisqLworCisjaW5jbHVkZSAiLi4vLi4vZm9yd2FyZC5oIgor
I2luY2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5jbHVkZSAiLi4vLi4vZGZvcm1hdC5oIgorI2lu
Y2x1ZGUgIi4uLy4uL2thc3NpZ24uaCIKKyNpbmNsdWRlICIuLi8uLi9rZXkuaCIKKyNpbmNsdWRl
ICIuLi8uLi9jb29yZC5oIgorI2luY2x1ZGUgIml0ZW0uaCIKKyNpbmNsdWRlICIuLi9ub2RlL25v
ZGUuaCIKKyNpbmNsdWRlICIuLi9wbHVnaW4uaCIKKyNpbmNsdWRlICIuLi9vYmplY3QuaCIKKyNp
bmNsdWRlICIuLi8uLi96bm9kZS5oIgorI2luY2x1ZGUgIi4uLy4uL2NhcnJ5LmgiCisjaW5jbHVk
ZSAiLi4vLi4vdHJlZS5oIgorI2luY2x1ZGUgIi4uLy4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4v
Li4vc3VwZXIuaCIKKyNpbmNsdWRlICIuLi8uLi9jb250ZXh0LmgiCisjaW5jbHVkZSAiLi4vLi4v
cGFnZV9jYWNoZS5oIgorI2luY2x1ZGUgIi4uL2NsdXN0ZXIuaCIKKyNpbmNsdWRlICIuLi8uLi9m
bHVzaC5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWVfd2Fsay5oIgorCisjaW5jbHVkZSA8bGludXgv
cGFnZXZlYy5oPgorI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4KKyNpbmNsdWRlIDxsaW51eC9mcy5o
PgorCisvKiByZXR1cm4gYm9keSBvZiBjdGFpbCBpdGVtIGF0IEBjb29yZCAqLworc3RhdGljIGN0
YWlsX2l0ZW1fZm9ybWF0ICpjdGFpbF9mb3JtYXR0ZWRfYXQoY29uc3QgY29vcmRfdCAqIGNvb3Jk
KQoreworCWFzc2VydCgiZWR3YXJkLTYwIiwgY29vcmQgIT0gTlVMTCk7CisJcmV0dXJuIGl0ZW1f
Ym9keV9ieV9jb29yZChjb29yZCk7Cit9CisKK3N0YXRpYyBpbnQgY2x1c3Rlcl9zaGlmdF9ieV9j
b29yZChjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJcmV0dXJuIGdldF91bmFsaWduZWQoJmN0
YWlsX2Zvcm1hdHRlZF9hdChjb29yZCktPmNsdXN0ZXJfc2hpZnQpOworfQorCitzdGF0aWMgaW5s
aW5lIHZvaWQgZGNsdXN0X3NldF9leHRlbnNpb25fc2hpZnQoaGludF90ICogaGludCkKK3sKKwlh
c3NlcnQoImVkd2FyZC0xMjcwIiwKKwkgICAgICAgaXRlbV9pZF9ieV9jb29yZCgmaGludC0+ZXh0
X2Nvb3JkLmNvb3JkKSA9PSBDVEFJTF9JRCk7CisJaGludC0+ZXh0X2Nvb3JkLmV4dGVuc2lvbi5j
dGFpbC5zaGlmdCA9CisJICAgIGNsdXN0ZXJfc2hpZnRfYnlfY29vcmQoJmhpbnQtPmV4dF9jb29y
ZC5jb29yZCk7Cit9CisKK3N0YXRpYyBsb2ZmX3Qgb2ZmX2J5X2Nvb3JkKGNvbnN0IGNvb3JkX3Qg
KiBjb29yZCkKK3sKKwlyZWlzZXI0X2tleSBrZXk7CisJcmV0dXJuIGdldF9rZXlfb2Zmc2V0KGl0
ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KSk7Cit9CisKK2ludCBjb29yZF9pc191bnByZXBw
ZWRfY3RhaWwoY29uc3QgY29vcmRfdCAqIGNvb3JkKQoreworCWFzc2VydCgiZWR3YXJkLTEyMzMi
LCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xMjM0IiwgaXRlbV9pZF9ieV9jb29y
ZChjb29yZCkgPT0gQ1RBSUxfSUQpOworCWFzc2VydCgiZWR3YXJkLTEyMzUiLAorCSAgICAgICBl
cmdvKChpbnQpY2x1c3Rlcl9zaGlmdF9ieV9jb29yZChjb29yZCkgPT0gKGludClVQ1RBSUxfU0hJ
RlQsCisJCSAgICBucl91bml0c19jdGFpbChjb29yZCkgPT0gKHBvc19pbl9ub2RlX3QpIFVDVEFJ
TF9OUl9VTklUUykpOworCisJcmV0dXJuIChpbnQpY2x1c3Rlcl9zaGlmdF9ieV9jb29yZChjb29y
ZCkgPT0gKGludClVQ1RBSUxfU0hJRlQ7Cit9CisKK3N0YXRpYyBjbG9mZl90IGNsdXN0X2J5X2Nv
b3JkKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlpbnQg
c2hpZnQ7CisKKwlpZiAoaW5vZGUgIT0gTlVMTCkgeworCQlzaGlmdCA9IGlub2RlX2NsdXN0ZXJf
c2hpZnQoaW5vZGUpOworCQlhc3NlcnQoImVkd2FyZC0xMjM2IiwKKwkJICAgICAgIGVyZ28oIWNv
b3JkX2lzX3VucHJlcHBlZF9jdGFpbChjb29yZCksCisJCQkgICAgc2hpZnQgPT0gY2x1c3Rlcl9z
aGlmdF9ieV9jb29yZChjb29yZCkpKTsKKwl9IGVsc2UgeworCQlhc3NlcnQoImVkd2FyZC0xMjM3
IiwgIWNvb3JkX2lzX3VucHJlcHBlZF9jdGFpbChjb29yZCkpOworCQlzaGlmdCA9IGNsdXN0ZXJf
c2hpZnRfYnlfY29vcmQoY29vcmQpOworCX0KKwlyZXR1cm4gb2ZmX2J5X2Nvb3JkKGNvb3JkKSA+
PiBzaGlmdDsKK30KKworc3RhdGljIGludCBkaXNrX2NsdXN0ZXJfc2l6ZShjb25zdCBjb29yZF90
ICogY29vcmQpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTE1NiIsCisJICAgICAgIGl0ZW1fcGx1Z2lu
X2J5X2Nvb3JkKGNvb3JkKSA9PSBpdGVtX3BsdWdpbl9ieV9pZChDVEFJTF9JRCkpOworCS8qIGNh
bGN1bGF0aW9uIG9mIGRpc2sgY2x1c3RlciBzaXplCisJICAgaXMgbWVhbmlubGVzcyBpZiBjdGFp
bCBpcyB1bnByZXBwZWQgKi8KKwlhc3NlcnQoImVkd2FyZC0xMjM4IiwgIWNvb3JkX2lzX3VucHJl
cHBlZF9jdGFpbChjb29yZCkpOworCisJcmV0dXJuIDEgPDwgY2x1c3Rlcl9zaGlmdF9ieV9jb29y
ZChjb29yZCk7Cit9CisKKy8qIHRydWUgaWYgdGhlIGtleSBpcyBvZiBmaXJzdCBkaXNrIGNsdXN0
ZXIgaXRlbSAqLworc3RhdGljIGludCBpc19kaXNrX2NsdXN0ZXJfa2V5KGNvbnN0IHJlaXNlcjRf
a2V5ICoga2V5LCBjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTIz
OSIsIGl0ZW1faWRfYnlfY29vcmQoY29vcmQpID09IENUQUlMX0lEKTsKKworCXJldHVybiBjb29y
ZF9pc191bnByZXBwZWRfY3RhaWwoY29vcmQpIHx8CisJICAgICgoZ2V0X2tleV9vZmZzZXQoa2V5
KSAmCisJICAgICAgKChsb2ZmX3QpIGRpc2tfY2x1c3Rlcl9zaXplKGNvb3JkKSAtIDEpKSA9PSAw
KTsKK30KKworc3RhdGljIGNoYXIgKmZpcnN0X3VuaXQoY29vcmRfdCAqIGNvb3JkKQoreworCS8q
IEZJWE1FOiB3YXJuaW5nOiBwb2ludGVyIG9mIHR5cGUgYHZvaWQgKicgdXNlZCBpbiBhcml0aG1l
dGljICovCisJcmV0dXJuIChjaGFyICopaXRlbV9ib2R5X2J5X2Nvb3JkKGNvb3JkKSArIHNpemVv
ZihjdGFpbF9pdGVtX2Zvcm1hdCk7Cit9CisKKy8qIHBsdWdpbi0+dS5pdGVtLmIubWF4X2tleV9p
bnNpZGUgOgorICAgdGFpbF9tYXhfa2V5X2luc2lkZSAqLworCisvKiBwbHVnaW4tPnUuaXRlbS5i
LmNhbl9jb250YWluX2tleSAqLworaW50IGNhbl9jb250YWluX2tleV9jdGFpbChjb25zdCBjb29y
ZF90ICogY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJICBjb25zdCByZWlzZXI0
X2l0ZW1fZGF0YSAqIGRhdGEpCit7CisJcmVpc2VyNF9rZXkgaXRlbV9rZXk7CisKKwlpZiAoaXRl
bV9wbHVnaW5fYnlfY29vcmQoY29vcmQpICE9IGRhdGEtPmlwbHVnKQorCQlyZXR1cm4gMDsKKwor
CWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAmaXRlbV9rZXkpOworCWlmIChnZXRfa2V5X2xvY2Fs
aXR5KGtleSkgIT0gZ2V0X2tleV9sb2NhbGl0eSgmaXRlbV9rZXkpIHx8CisJICAgIGdldF9rZXlf
b2JqZWN0aWQoa2V5KSAhPSBnZXRfa2V5X29iamVjdGlkKCZpdGVtX2tleSkpCisJCXJldHVybiAw
OworCWlmIChnZXRfa2V5X29mZnNldCgmaXRlbV9rZXkpICsgbnJfdW5pdHNfY3RhaWwoY29vcmQp
ICE9CisJICAgIGdldF9rZXlfb2Zmc2V0KGtleSkpCisJCXJldHVybiAwOworCWlmIChpc19kaXNr
X2NsdXN0ZXJfa2V5KGtleSwgY29vcmQpKQorCQkvKgorCQkgKiBjYW4gbm90IG1lcmdlIGF0IHRo
ZSBiZWdpbm5pbmcKKwkJICogb2YgYSBsb2dpY2FsIGNsdXN0ZXIgaW4gYSBmaWxlCisJCSAqLwor
CQlyZXR1cm4gMDsKKwlyZXR1cm4gMTsKK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5tZXJnZWFi
bGUgKi8KK2ludCBtZXJnZWFibGVfY3RhaWwoY29uc3QgY29vcmRfdCAqIHAxLCBjb25zdCBjb29y
ZF90ICogcDIpCit7CisJcmVpc2VyNF9rZXkga2V5MSwga2V5MjsKKworCWFzc2VydCgiZWR3YXJk
LTYyIiwgaXRlbV9pZF9ieV9jb29yZChwMSkgPT0gQ1RBSUxfSUQpOworCWFzc2VydCgiZWR3YXJk
LTYxIiwgcGx1Z2luX29mX2dyb3VwKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKHAxKSwKKwkJCQkJICAg
IFVOSVhfRklMRV9NRVRBREFUQV9JVEVNX1RZUEUpKTsKKworCWlmIChpdGVtX2lkX2J5X2Nvb3Jk
KHAyKSAhPSBDVEFJTF9JRCkgeworCQkvKiBzZWNvbmQgaXRlbSBpcyBvZiBhbm90aGVyIHR5cGUg
Ki8KKwkJcmV0dXJuIDA7CisJfQorCWl0ZW1fa2V5X2J5X2Nvb3JkKHAxLCAma2V5MSk7CisJaXRl
bV9rZXlfYnlfY29vcmQocDIsICZrZXkyKTsKKwlpZiAoZ2V0X2tleV9sb2NhbGl0eSgma2V5MSkg
IT0gZ2V0X2tleV9sb2NhbGl0eSgma2V5MikgfHwKKwkgICAgZ2V0X2tleV9vYmplY3RpZCgma2V5
MSkgIT0gZ2V0X2tleV9vYmplY3RpZCgma2V5MikgfHwKKwkgICAgZ2V0X2tleV90eXBlKCZrZXkx
KSAhPSBnZXRfa2V5X3R5cGUoJmtleTIpKSB7CisJCS8qIGl0ZW1zIG9mIGRpZmZlcmVudCBvYmpl
Y3RzICovCisJCXJldHVybiAwOworCX0KKwlpZiAoZ2V0X2tleV9vZmZzZXQoJmtleTEpICsgbnJf
dW5pdHNfY3RhaWwocDEpICE9IGdldF9rZXlfb2Zmc2V0KCZrZXkyKSkKKwkJLyogIG5vdCBhZGph
Y2VudCBpdGVtcyAqLworCQlyZXR1cm4gMDsKKwlpZiAoaXNfZGlza19jbHVzdGVyX2tleSgma2V5
MiwgcDIpKQorCQkvKgorCQkgKiBjYW4gbm90IG1lcmdlIGF0IHRoZSBiZWdpbm5pbmcKKwkJICog
b2YgYSBsb2dpY2FsIGNsdXN0ZXIgaW4gYSBmaWxlCisJCSAqLworCQlyZXR1cm4gMDsKKwlyZXR1
cm4gMTsKK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5ucl91bml0cyAqLworcG9zX2luX25vZGVf
dCBucl91bml0c19jdGFpbChjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJcmV0dXJuIChpdGVt
X2xlbmd0aF9ieV9jb29yZChjb29yZCkgLQorCQlzaXplb2YoY3RhaWxfZm9ybWF0dGVkX2F0KGNv
b3JkKS0+Y2x1c3Rlcl9zaGlmdCkpOworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLmVzdGltYXRl
OgorICAgZXN0aW1hdGUgaG93IG11Y2ggc3BhY2UgaXMgbmVlZGVkIHRvIGluc2VydC9wYXN0ZSBA
ZGF0YS0+bGVuZ3RoIGJ5dGVzCisgICBpbnRvIGN0YWlsIGF0IEBjb29yZCAqLworaW50IGVzdGlt
YXRlX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJ
ICAgY29uc3QgcmVpc2VyNF9pdGVtX2RhdGEgKgorCQkgICBkYXRhIC8qIHBhcmFtZXRlcnMgZm9y
IG5ldyBpdGVtICovICkKK3sKKwlpZiAoY29vcmQgPT0gTlVMTCkKKwkJLyogaW5zZXJ0ICovCisJ
CXJldHVybiAoc2l6ZW9mKGN0YWlsX2l0ZW1fZm9ybWF0KSArIGRhdGEtPmxlbmd0aCk7CisJZWxz
ZQorCQkvKiBwYXN0ZSAqLworCQlyZXR1cm4gZGF0YS0+bGVuZ3RoOworfQorCisvKiAtPmluaXQo
KSBtZXRob2QgZm9yIHRoaXMgaXRlbSBwbHVnaW4uICovCitpbnQgaW5pdF9jdGFpbChjb29yZF90
ICogdG8gLyogY29vcmQgb2YgaXRlbSAqLyAsCisJICAgICAgIGNvb3JkX3QgKiBmcm9tIC8qIG9s
ZF9pdGVtICovICwKKwkgICAgICAgcmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhIC8qIHN0cnVjdHVy
ZSB1c2VkIGZvciBpbnNlcnRpb24gKi8gKQoreworCWludCBjbHVzdGVyX3NoaWZ0OwkvKiBjcHUg
dmFsdWUgdG8gY29udmVydCAqLworCisJaWYgKGRhdGEpIHsKKwkJYXNzZXJ0KCJlZHdhcmQtNDYz
IiwgZGF0YS0+bGVuZ3RoID4gc2l6ZW9mKGN0YWlsX2l0ZW1fZm9ybWF0KSk7CisJCWNsdXN0ZXJf
c2hpZnQgPSAqKChpbnQgKikoZGF0YS0+YXJnKSk7CisJCWRhdGEtPmxlbmd0aCAtPSBzaXplb2Yo
Y3RhaWxfaXRlbV9mb3JtYXQpOworCX0gZWxzZSB7CisJCWFzc2VydCgiZWR3YXJkLTQ2NCIsIGZy
b20gIT0gTlVMTCk7CisJCWFzc2VydCgiZWR3YXJkLTg1NSIsIGN0YWlsX29rKGZyb20pKTsKKwkJ
Y2x1c3Rlcl9zaGlmdCA9IChpbnQpKGNsdXN0ZXJfc2hpZnRfYnlfY29vcmQoZnJvbSkpOworCX0K
KwlwdXRfdW5hbGlnbmVkKChkOCljbHVzdGVyX3NoaWZ0LCAmY3RhaWxfZm9ybWF0dGVkX2F0KHRv
KS0+Y2x1c3Rlcl9zaGlmdCk7CisJYXNzZXJ0KCJlZHdhcmQtODU2IiwgY3RhaWxfb2sodG8pKTsK
KwlyZXR1cm4gMDsKK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5sb29rdXA6CisgICBOVUxMOiBX
ZSBhcmUgbG9va2luZyBmb3IgaXRlbSBrZXlzIG9ubHkgKi8KKworI2lmIFJFSVNFUjRfREVCVUcK
K2ludCBjdGFpbF9vayhjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJcmV0dXJuIGNvb3JkX2lz
X3VucHJlcHBlZF9jdGFpbChjb29yZCkgfHwKKwkgICAgY2x1c3Rlcl9zaGlmdF9vayhjbHVzdGVy
X3NoaWZ0X2J5X2Nvb3JkKGNvb3JkKSk7Cit9CisKKy8qIHBsdWdpbi0+dS5pdGVtLmIuY2hlY2sg
Ki8KK2ludCBjaGVja19jdGFpbChjb25zdCBjb29yZF90ICogY29vcmQsIGNvbnN0IGNoYXIgKipl
cnJvcikKK3sKKwlpZiAoIWN0YWlsX29rKGNvb3JkKSkgeworCQlpZiAoZXJyb3IpCisJCQkqZXJy
b3IgPSAiYmFkIGNsdXN0ZXIgc2hpZnQgaW4gY3RhaWwiOworCQlyZXR1cm4gMTsKKwl9CisJcmV0
dXJuIDA7Cit9CisjZW5kaWYKKworLyogcGx1Z2luLT51Lml0ZW0uYi5wYXN0ZSAqLworaW50Citw
YXN0ZV9jdGFpbChjb29yZF90ICogY29vcmQsIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSwKKwkg
ICAgY2FycnlfcGx1Z2luX2luZm8gKiBpbmZvIFVOVVNFRF9BUkcpCit7CisJdW5zaWduZWQgb2xk
X25yX3VuaXRzOworCisJYXNzZXJ0KCJlZHdhcmQtMjY4IiwgZGF0YS0+ZGF0YSAhPSBOVUxMKTsK
KwkvKiBjb3B5IG9ubHkgZnJvbSBrZXJuZWwgc3BhY2UgKi8KKwlhc3NlcnQoImVkd2FyZC02NiIs
IGRhdGEtPnVzZXIgPT0gMCk7CisKKwlvbGRfbnJfdW5pdHMgPQorCSAgICBpdGVtX2xlbmd0aF9i
eV9jb29yZChjb29yZCkgLSBzaXplb2YoY3RhaWxfaXRlbV9mb3JtYXQpIC0KKwkgICAgZGF0YS0+
bGVuZ3RoOworCisJLyogY3RhaWwgaXRlbXMgbmV2ZXIgZ2V0IHBhc3RlZCBpbiB0aGUgbWlkZGxl
ICovCisKKwlpZiAoY29vcmQtPnVuaXRfcG9zID09IDAgJiYgY29vcmQtPmJldHdlZW4gPT0gQVRf
VU5JVCkgeworCisJCS8qIHBhc3RlIGF0IHRoZSBiZWdpbm5pbmcgd2hlbiBjcmVhdGUgbmV3IGl0
ZW0gKi8KKwkJYXNzZXJ0KCJlZHdhcmQtNDUwIiwKKwkJICAgICAgIGl0ZW1fbGVuZ3RoX2J5X2Nv
b3JkKGNvb3JkKSA9PQorCQkgICAgICAgZGF0YS0+bGVuZ3RoICsgc2l6ZW9mKGN0YWlsX2l0ZW1f
Zm9ybWF0KSk7CisJCWFzc2VydCgiZWR3YXJkLTQ1MSIsIG9sZF9ucl91bml0cyA9PSAwKTsKKwl9
IGVsc2UgaWYgKGNvb3JkLT51bml0X3BvcyA9PSBvbGRfbnJfdW5pdHMgLSAxCisJCSAgICYmIGNv
b3JkLT5iZXR3ZWVuID09IEFGVEVSX1VOSVQpIHsKKworCQkvKiBwYXN0ZSBhdCB0aGUgZW5kICov
CisJCWNvb3JkLT51bml0X3BvcysrOworCX0gZWxzZQorCQlpbXBvc3NpYmxlKCJlZHdhcmQtNDUz
IiwgImJhZCBwYXN0ZSBwb3NpdGlvbiIpOworCisJbWVtY3B5KGZpcnN0X3VuaXQoY29vcmQpICsg
Y29vcmQtPnVuaXRfcG9zLCBkYXRhLT5kYXRhLCBkYXRhLT5sZW5ndGgpOworCisJYXNzZXJ0KCJl
ZHdhcmQtODU3IiwgY3RhaWxfb2soY29vcmQpKTsKKworCXJldHVybiAwOworfQorCisvKiBwbHVn
aW4tPnUuaXRlbS5iLmZhc3RfcGFzdGUgKi8KKworLyoKKyAqIHBsdWdpbi0+dS5pdGVtLmIuY2Fu
X3NoaWZ0CisgKgorICogUmV0dXJuIG51bWJlciBvZiB1bml0cyB0aGF0IGNhbiBiZSBzaGlmdGVk
OworICogU3RvcmUgc3BhY2UgKGluIGJ5dGVzKSBvY2N1cGllZCBieSB0aG9zZSB1bml0cyBpbiBA
c2l6ZS4KKyAqLworaW50IGNhbl9zaGlmdF9jdGFpbCh1bnNpZ25lZCBmcmVlX3NwYWNlLCBjb29y
ZF90ICpzb3VyY2UsCisJCSAgICB6bm9kZSAqIHRhcmdldCwgc2hpZnRfZGlyZWN0aW9uIGRpcmVj
dGlvbiBVTlVTRURfQVJHLAorCQkgICAgdW5zaWduZWQgKnNpemUsIHVuc2lnbmVkIHdhbnQpCit7
CisJLyogbWFrZSBzdXJlIHRoYXQgdGhhdCB3ZSBkbyBub3Qgd2FudCB0byBzaGlmdCBtb3JlIHRo
YW4gd2UgaGF2ZSAqLworCWFzc2VydCgiZWR3YXJkLTY4Iiwgd2FudCA+IDAgJiYgd2FudCA8PSBu
cl91bml0c19jdGFpbChzb3VyY2UpKTsKKworCSpzaXplID0gbWluKHdhbnQsIGZyZWVfc3BhY2Up
OworCisJaWYgKCF0YXJnZXQpIHsKKwkJLyoKKwkJICogbmV3IGl0ZW0gd2lsbCBiZSBjcmVhdGVk
CisJCSAqLworCQlpZiAoKnNpemUgPD0gc2l6ZW9mKGN0YWlsX2l0ZW1fZm9ybWF0KSkgeworCQkJ
LyoKKwkJCSAqIGNhbiBub3Qgc2hpZnQgb25seSBjdGFpbCBoZWFkZXIKKwkJCSAqLworCQkJKnNp
emUgPSAwOworCQkJcmV0dXJuIDA7CisJCX0KKwkJcmV0dXJuICpzaXplIC0gc2l6ZW9mKGN0YWls
X2l0ZW1fZm9ybWF0KTsKKwl9CisJZWxzZQorCQkvKgorCQkgKiBzaGlmdGluZyB0byB0aGUgbWVy
Z2VhYmxlIGl0ZW0KKwkJICovCisJCXJldHVybiAqc2l6ZTsKK30KKworLyoKKyAqIHBsdWdpbi0+
dS5pdGVtLmIuY29weV91bml0cworICogY29vcGVyYXRlcyB3aXRoIC0+Y2FuX3NoaWZ0KCkKKyAq
Lwordm9pZCBjb3B5X3VuaXRzX2N0YWlsKGNvb3JkX3QgKiB0YXJnZXQsIGNvb3JkX3QgKiBzb3Vy
Y2UsCisJCSAgICAgIHVuc2lnbmVkIGZyb20sIHVuc2lnbmVkIGNvdW50IC8qIHVuaXRzICovICwK
KwkJICAgICAgc2hpZnRfZGlyZWN0aW9uIHdoZXJlX2lzX2ZyZWVfc3BhY2UsCisJCSAgICAgIHVu
c2lnbmVkIGZyZWVfc3BhY2UgLyogYnl0ZXMgKi8gKQoreworCS8qIG1ha2Ugc3VyZSB0aGF0IGl0
ZW0gQHRhcmdldCBpcyBleHBhbmRlZCBhbHJlYWR5ICovCisJYXNzZXJ0KCJlZHdhcmQtNjkiLCAo
dW5zaWduZWQpaXRlbV9sZW5ndGhfYnlfY29vcmQodGFyZ2V0KSA+PSBjb3VudCk7CisJYXNzZXJ0
KCJlZHdhcmQtNzAiLCBmcmVlX3NwYWNlID09IGNvdW50IHx8IGZyZWVfc3BhY2UgPT0gY291bnQg
KyAxKTsKKworCWFzc2VydCgiZWR3YXJkLTg1OCIsIGN0YWlsX29rKHNvdXJjZSkpOworCisJaWYg
KHdoZXJlX2lzX2ZyZWVfc3BhY2UgPT0gU0hJRlRfTEVGVCkgeworCQkvKgorCQkgKiBhcHBlbmQg
aXRlbSBAdGFyZ2V0IHdpdGggQGNvdW50IGZpcnN0IGJ5dGVzCisJCSAqIG9mIEBzb3VyY2U6IHRo
aXMgcmVzdHJpY3Rpb24gY2FtZSBmcm9tIG9yZGluYXJ5IHRhaWxzCisJCSAqLworCQlhc3NlcnQo
ImVkd2FyZC03MSIsIGZyb20gPT0gMCk7CisJCWFzc2VydCgiZWR3YXJkLTg2MCIsIGN0YWlsX29r
KHRhcmdldCkpOworCisJCW1lbWNweShmaXJzdF91bml0KHRhcmdldCkgKyBucl91bml0c19jdGFp
bCh0YXJnZXQpIC0gY291bnQsCisJCSAgICAgICBmaXJzdF91bml0KHNvdXJjZSksIGNvdW50KTsK
Kwl9IGVsc2UgeworCQkvKgorCQkgKiB0YXJnZXQgaXRlbSBpcyBtb3ZlZCB0byByaWdodCBhbHJl
YWR5CisJCSAqLworCQlyZWlzZXI0X2tleSBrZXk7CisKKwkJYXNzZXJ0KCJlZHdhcmQtNzIiLCBu
cl91bml0c19jdGFpbChzb3VyY2UpID09IGZyb20gKyBjb3VudCk7CisKKwkJaWYgKGZyZWVfc3Bh
Y2UgPT0gY291bnQpIHsKKwkJCWluaXRfY3RhaWwodGFyZ2V0LCBzb3VyY2UsIE5VTEwpOworCQl9
IGVsc2UgeworCQkJLyoKKwkJCSAqIHNoaWZ0aW5nIHRvIGEgbWVyZ2VhYmxlIGl0ZW0KKwkJCSAq
LworCQkJYXNzZXJ0KCJlZHdhcmQtODYyIiwgY3RhaWxfb2sodGFyZ2V0KSk7CisJCX0KKwkJbWVt
Y3B5KGZpcnN0X3VuaXQodGFyZ2V0KSwgZmlyc3RfdW5pdChzb3VyY2UpICsgZnJvbSwgY291bnQp
OworCisJCWFzc2VydCgiZWR3YXJkLTg2MyIsIGN0YWlsX29rKHRhcmdldCkpOworCQkvKgorCQkg
KiBuZXcgdW5pdHMgYXJlIGluc2VydGVkIGJlZm9yZSBmaXJzdCB1bml0CisJCSAqIGluIGFuIGl0
ZW0sIHRoZXJlZm9yZSwgd2UgaGF2ZSB0byB1cGRhdGUKKwkJICogaXRlbSBrZXkKKwkJICovCisJ
CWl0ZW1fa2V5X2J5X2Nvb3JkKHNvdXJjZSwgJmtleSk7CisJCXNldF9rZXlfb2Zmc2V0KCZrZXks
IGdldF9rZXlfb2Zmc2V0KCZrZXkpICsgZnJvbSk7CisKKwkJbm9kZV9wbHVnaW5fYnlfbm9kZSh0
YXJnZXQtPm5vZGUpLT51cGRhdGVfaXRlbV9rZXkodGFyZ2V0LAorCQkJCQkJCQkma2V5LAorCQkJ
CQkJCQlOVUxMIC8qaW5mbyAqLyk7CisJfQorfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLmNyZWF0
ZV9ob29rICovCitpbnQgY3JlYXRlX2hvb2tfY3RhaWwoY29uc3QgY29vcmRfdCAqIGNvb3JkLCB2
b2lkICphcmcpCit7CisJYXNzZXJ0KCJlZHdhcmQtODY0Iiwgem5vZGVfaXNfbG9hZGVkKGNvb3Jk
LT5ub2RlKSk7CisKKwl6bm9kZV9zZXRfY29udmVydGlibGUoY29vcmQtPm5vZGUpOworCXJldHVy
biAwOworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLmtpbGxfaG9vayAqLworaW50IGtpbGxfaG9v
a19jdGFpbChjb25zdCBjb29yZF90ICogY29vcmQsIHBvc19pbl9ub2RlX3QgZnJvbSwKKwkJICAg
IHBvc19pbl9ub2RlX3QgY291bnQsIGNhcnJ5X2tpbGxfZGF0YSAqIGtkYXRhKQoreworCXN0cnVj
dCBpbm9kZSAqaW5vZGU7CisKKwlhc3NlcnQoImVkd2FyZC0xMTU3IiwgaXRlbV9pZF9ieV9jb29y
ZChjb29yZCkgPT0gQ1RBSUxfSUQpOworCWFzc2VydCgiZWR3YXJkLTI5MSIsIHpub2RlX2lzX3dy
aXRlX2xvY2tlZChjb29yZC0+bm9kZSkpOworCisJaW5vZGUgPSBrZGF0YS0+aW5vZGU7CisJaWYg
KGlub2RlKSB7CisJCXJlaXNlcjRfa2V5IGtleTsKKwkJc3RydWN0IGNyeXB0Y29tcHJlc3NfaW5m
byAqIGluZm87CisJCWNsb2ZmX3QgaW5kZXg7CisKKwkJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQs
ICZrZXkpOworCQlpbmZvID0gY3J5cHRjb21wcmVzc19pbm9kZV9kYXRhKGlub2RlKTsKKwkJaW5k
ZXggPSBvZmZfdG9fY2x1c3QoZ2V0X2tleV9vZmZzZXQoJmtleSksIGlub2RlKTsKKworCQlpZiAo
ZnJvbSA9PSAwKSB7CisJCQlpbmZvLT50cnVuY19pbmRleCA9IGluZGV4OworCQkJaWYgKGlzX2Rp
c2tfY2x1c3Rlcl9rZXkoJmtleSwgY29vcmQpKSB7CisJCQkJLyoKKwkJCQkgKiBmaXJzdCBpdGVt
IG9mIGRpc2sgY2x1c3RlciBpcyB0byBiZSBraWxsZWQKKwkJCQkgKi8KKwkJCQl0cnVuY2F0ZV9j
b21wbGV0ZV9wYWdlX2NsdXN0ZXIoCisJCQkJICAgICAgICBpbm9kZSwgaW5kZXgsIGtkYXRhLT5w
YXJhbXMudHJ1bmNhdGUpOworCQkJCWlub2RlX3N1Yl9ieXRlcyhpbm9kZSwKKwkJCQkJCWlub2Rl
X2NsdXN0ZXJfc2l6ZShpbm9kZSkpOworCQkJfQorCQl9CisJfQorCXJldHVybiAwOworfQorCisv
KiBmb3Igc2hpZnRfaG9va19jdGFpbCgpLAorICAgcmV0dXJuIHRydWUgaWYgdGhlIGZpcnN0IGRp
c2sgY2x1c3RlciBpdGVtIGhhcyBkaXJ0eSBjaGlsZAorKi8KK3N0YXRpYyBpbnQgY3RhaWxfY29u
dmVydGlibGUoY29uc3QgY29vcmRfdCAqIGNvb3JkKQoreworCWludCByZXN1bHQ7CisJcmVpc2Vy
NF9rZXkga2V5OworCWpub2RlICpjaGlsZCA9IE5VTEw7CisKKwlhc3NlcnQoImVkd2FyZC00Nzci
LCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC00NzgiLCBpdGVtX2lkX2J5X2Nvb3Jk
KGNvb3JkKSA9PSBDVEFJTF9JRCk7CisKKwlpZiAoY29vcmRfaXNfdW5wcmVwcGVkX2N0YWlsKGNv
b3JkKSkKKwkJLyogdW5wcmVwcGVkIGN0YWlsIHNob3VsZCBiZSBjb252ZXJ0ZWQgKi8KKwkJcmV0
dXJuIDE7CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJmtleSk7CisJY2hpbGQgPSBqbG9v
a3VwKGN1cnJlbnRfdHJlZSwKKwkJCWdldF9rZXlfb2JqZWN0aWQoJmtleSksCisJCQlvZmZfdG9f
cGcob2ZmX2J5X2Nvb3JkKGNvb3JkKSkpOworCWlmICghY2hpbGQpCisJCXJldHVybiAwOworCXJl
c3VsdCA9IEpGX0lTU0VUKGNoaWxkLCBKTk9ERV9ESVJUWSk7CisJanB1dChjaGlsZCk7CisJcmV0
dXJuIHJlc3VsdDsKK30KKworLyogRklYTUUtRURXQVJEICovCisvKiBwbHVnaW4tPnUuaXRlbS5i
LnNoaWZ0X2hvb2sgKi8KK2ludCBzaGlmdF9ob29rX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiBpdGVt
IC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkgICAgIHVuc2lnbmVkIGZyb20gVU5VU0VEX0FSRyAv
KiBzdGFydCB1bml0ICovICwKKwkJICAgICB1bnNpZ25lZCBjb3VudCBVTlVTRURfQVJHIC8qIHN0
b3AgdW5pdCAqLyAsCisJCSAgICAgem5vZGUgKiBvbGRfbm9kZSAvKiBvbGQgcGFyZW50ICovICkK
K3sKKwlhc3NlcnQoImVkd2FyZC00NzkiLCBpdGVtICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTQ4MCIsIGl0ZW0tPm5vZGUgIT0gb2xkX25vZGUpOworCisJaWYgKCF6bm9kZV9jb252ZXJ0aWJs
ZShvbGRfbm9kZSkgfHwgem5vZGVfY29udmVydGlibGUoaXRlbS0+bm9kZSkpCisJCXJldHVybiAw
OworCWlmIChjdGFpbF9jb252ZXJ0aWJsZShpdGVtKSkKKwkJem5vZGVfc2V0X2NvbnZlcnRpYmxl
KGl0ZW0tPm5vZGUpOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50CitjdXRfb3Jfa2lsbF9j
dGFpbF91bml0cyhjb29yZF90ICogY29vcmQsIHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25v
ZGVfdCB0bywKKwkJCWludCBjdXQsIHZvaWQgKnAsIHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVt
b3ZlZCwKKwkJCXJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0KQoreworCXBvc19pbl9ub2RlX3QgY291
bnQ7CS8qIG51bWJlciBvZiB1bml0cyB0byBjdXQgKi8KKwljaGFyICppdGVtOworCisJY291bnQg
PSB0byAtIGZyb20gKyAxOworCWl0ZW0gPSBpdGVtX2JvZHlfYnlfY29vcmQoY29vcmQpOworCisJ
YXNzZXJ0KCJlZHdhcmQtNzQiLCBlcmdvKGZyb20gIT0gMCwgdG8gPT0gY29vcmRfbGFzdF91bml0
X3Bvcyhjb29yZCkpKTsKKworCWlmIChzbWFsbGVzdF9yZW1vdmVkKSB7CisJCS8qIHN0b3JlIHNt
YWxsZXN0IGtleSByZW1vdmVkICovCisJCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCBzbWFsbGVz
dF9yZW1vdmVkKTsKKwkJc2V0X2tleV9vZmZzZXQoc21hbGxlc3RfcmVtb3ZlZCwKKwkJCSAgICAg
ICBnZXRfa2V5X29mZnNldChzbWFsbGVzdF9yZW1vdmVkKSArIGZyb20pOworCX0KKworCWlmIChu
ZXdfZmlyc3QpIHsKKwkJYXNzZXJ0KCJ2cy0xNTMxIiwgZnJvbSA9PSAwKTsKKworCQlpdGVtX2tl
eV9ieV9jb29yZChjb29yZCwgbmV3X2ZpcnN0KTsKKwkJc2V0X2tleV9vZmZzZXQobmV3X2ZpcnN0
LAorCQkJICAgICAgIGdldF9rZXlfb2Zmc2V0KG5ld19maXJzdCkgKyBmcm9tICsgY291bnQpOwor
CX0KKworCWlmICghY3V0KQorCQlraWxsX2hvb2tfY3RhaWwoY29vcmQsIGZyb20sIDAsIChzdHJ1
Y3QgY2Fycnlfa2lsbF9kYXRhICopcCk7CisKKwlpZiAoZnJvbSA9PSAwKSB7CisJCWlmIChjb3Vu
dCAhPSBucl91bml0c19jdGFpbChjb29yZCkpIHsKKwkJCS8qIHBhcnQgb2YgaXRlbSBpcyByZW1v
dmVkLCBzbyBtb3ZlIGZyZWUgc3BhY2UgYXQgdGhlIGJlZ2lubmluZworCQkJICAgb2YgdGhlIGl0
ZW0gYW5kIHVwZGF0ZSBpdGVtIGtleSAqLworCQkJcmVpc2VyNF9rZXkga2V5OworCQkJbWVtY3B5
KGl0ZW0gKyB0byArIDEsIGl0ZW0sIHNpemVvZihjdGFpbF9pdGVtX2Zvcm1hdCkpOworCQkJaXRl
bV9rZXlfYnlfY29vcmQoY29vcmQsICZrZXkpOworCQkJc2V0X2tleV9vZmZzZXQoJmtleSwgZ2V0
X2tleV9vZmZzZXQoJmtleSkgKyBjb3VudCk7CisJCQlub2RlX3BsdWdpbl9ieV9ub2RlKGNvb3Jk
LT5ub2RlKS0+dXBkYXRlX2l0ZW1fa2V5KGNvb3JkLAorCQkJCQkJCQkJICAma2V5LAorCQkJCQkJ
CQkJICBOVUxMKTsKKwkJfSBlbHNlIHsKKwkJCS8qIGN1dF91bml0cyBzaG91bGQgbm90IGJlIGNh
bGxlZCB0byBjdXQgZXZyeXRoaW5nICovCisJCQlhc3NlcnQoInZzLTE1MzIiLCBlcmdvKGN1dCwg
MCkpOworCQkJLyogd2hvbGUgaXRlbSBpcyBjdXQsIHNvIG1vcmUgdGhlbiBhbW91bnQgb2Ygc3Bh
Y2Ugb2NjdXBpZWQKKwkJCSAgIGJ5IHVuaXRzIGdvdCBmcmVlZCAqLworCQkJY291bnQgKz0gc2l6
ZW9mKGN0YWlsX2l0ZW1fZm9ybWF0KTsKKwkJfQorCX0KKwlyZXR1cm4gY291bnQ7Cit9CisKKy8q
IHBsdWdpbi0+dS5pdGVtLmIuY3V0X3VuaXRzICovCitpbnQKK2N1dF91bml0c19jdGFpbChjb29y
ZF90ICogaXRlbSwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCQljYXJy
eV9jdXRfZGF0YSAqIGNkYXRhLCByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJCXJl
aXNlcjRfa2V5ICogbmV3X2ZpcnN0KQoreworCXJldHVybiBjdXRfb3Jfa2lsbF9jdGFpbF91bml0
cyhpdGVtLCBmcm9tLCB0bywgMSwgTlVMTCwKKwkJCQkgICAgICAgc21hbGxlc3RfcmVtb3ZlZCwg
bmV3X2ZpcnN0KTsKK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5raWxsX3VuaXRzICovCitpbnQK
K2tpbGxfdW5pdHNfY3RhaWwoY29vcmRfdCAqIGl0ZW0sIHBvc19pbl9ub2RlX3QgZnJvbSwgcG9z
X2luX25vZGVfdCB0bywKKwkJIHN0cnVjdCBjYXJyeV9raWxsX2RhdGEgKmtkYXRhLCByZWlzZXI0
X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJCSByZWlzZXI0X2tleSAqIG5ld19maXJzdCkKK3sK
KwlyZXR1cm4gY3V0X29yX2tpbGxfY3RhaWxfdW5pdHMoaXRlbSwgZnJvbSwgdG8sIDAsIGtkYXRh
LAorCQkJCSAgICAgICBzbWFsbGVzdF9yZW1vdmVkLCBuZXdfZmlyc3QpOworfQorCisvKiBwbHVn
aW4tPnUuaXRlbS5zLmZpbGUucmVhZCAqLworaW50IHJlYWRfY3RhaWwoc3RydWN0IGZpbGUgKmZp
bGUgVU5VU0VEX0FSRywgZmxvd190ICogZiwgaGludF90ICogaGludCkKK3sKKwl1Zl9jb29yZF90
ICp1Zl9jb29yZDsKKwljb29yZF90ICpjb29yZDsKKworCXVmX2Nvb3JkID0gJmhpbnQtPmV4dF9j
b29yZDsKKwljb29yZCA9ICZ1Zl9jb29yZC0+Y29vcmQ7CisJYXNzZXJ0KCJlZHdhcmQtMTI3Iiwg
Zi0+dXNlciA9PSAwKTsKKwlhc3NlcnQoImVkd2FyZC0xMjkiLCBjb29yZCAmJiBjb29yZC0+bm9k
ZSk7CisJYXNzZXJ0KCJlZHdhcmQtMTMwIiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkp
OworCWFzc2VydCgiZWR3YXJkLTEzMiIsIHpub2RlX2lzX2xvYWRlZChjb29yZC0+bm9kZSkpOwor
CisJLyogc3RhcnQgcmVhZCBvbmx5IGZyb20gdGhlIGJlZ2lubmluZyBvZiBjdGFpbCAqLworCWFz
c2VydCgiZWR3YXJkLTEzMyIsIGNvb3JkLT51bml0X3BvcyA9PSAwKTsKKwkvKiByZWFkIG9ubHkg
d2hvbGUgY3RhaWxzICovCisJYXNzZXJ0KCJlZHdhcmQtMTM1IiwgbnJfdW5pdHNfY3RhaWwoY29v
cmQpIDw9IGYtPmxlbmd0aCk7CisKKwlhc3NlcnQoImVkd2FyZC0xMzYiLCByZWlzZXI0X3NjaGVk
dWxhYmxlKCkpOworCWFzc2VydCgiZWR3YXJkLTg4NiIsIGN0YWlsX29rKGNvb3JkKSk7CisKKwlp
ZiAoZi0+ZGF0YSkKKwkJbWVtY3B5KGYtPmRhdGEsIChjaGFyICopZmlyc3RfdW5pdChjb29yZCks
CisJCSAgICAgICAoc2l6ZV90KSBucl91bml0c19jdGFpbChjb29yZCkpOworCisJZGNsdXN0X3Nl
dF9leHRlbnNpb25fc2hpZnQoaGludCk7CisJbWFya19wYWdlX2FjY2Vzc2VkKHpub2RlX3BhZ2Uo
Y29vcmQtPm5vZGUpKTsKKwltb3ZlX2Zsb3dfZm9yd2FyZChmLCBucl91bml0c19jdGFpbChjb29y
ZCkpOworCisJcmV0dXJuIDA7Cit9CisKKy8qKgorICogUHJlcGFyZSB0cmFuc2Zvcm0gc3RyZWFt
IHdpdGggcGxhaW4gdGV4dCBmb3IgcGFnZQorICogQHBhZ2UgdGFraW5nIGludG8gYWNjb3VudCBz
eW5jaHJvbml6YXRpb24gaXNzdWVzLgorICovCitzdGF0aWMgaW50IGN0YWlsX3JlYWRfZGlza19j
bHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAorCQkJCSAgIHN0cnVjdCBpbm9k
ZSAqIGlub2RlLCBzdHJ1Y3QgcGFnZSAqIHBhZ2UsCisJCQkJICAgem5vZGVfbG9ja19tb2RlIG1v
ZGUpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgiZWR3YXJkLTE0NTAiLCBtb2RlID09IFpO
T0RFX1JFQURfTE9DSyB8fCBaTk9ERV9XUklURV9MT0NLKTsKKwlhc3NlcnQoImVkd2FyZC02NzEi
LCBjbHVzdC0+aGludCAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xNDAiLCBjbHVzdC0+ZHN0
YXQgPT0gSU5WQUxfRElTS19DTFVTVEVSKTsKKwlhc3NlcnQoImVkd2FyZC02NzIiLCBjcnlwdGNv
bXByZXNzX2lub2RlX29rKGlub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTUyNyIsIFBhZ2VMb2Nr
ZWQocGFnZSkpOworCisJdW5sb2NrX3BhZ2UocGFnZSk7CisKKwkvKiBzZXQgaW5wdXQgc3RyZWFt
ICovCisJcmVzdWx0ID0gZ3JhYl90Zm1fc3RyZWFtKGlub2RlLCAmY2x1c3QtPnRjLCBJTlBVVF9T
VFJFQU0pOworCWlmIChyZXN1bHQpIHsKKwkJbG9ja19wYWdlKHBhZ2UpOworCQlyZXR1cm4gcmVz
dWx0OworCX0KKwlyZXN1bHQgPSBmaW5kX2Rpc2tfY2x1c3RlcihjbHVzdCwgaW5vZGUsIDEgLyog
cmVhZCBpdGVtcyAqLywgbW9kZSk7CisJbG9ja19wYWdlKHBhZ2UpOworCWlmIChyZXN1bHQpCisJ
CXJldHVybiByZXN1bHQ7CisJLyoKKwkgKiBhdCB0aGlzIHBvaW50IHdlIGhhdmUgbG9ja2VkIHBv
c2l0aW9uIGluIHRoZSB0cmVlCisJICovCisJYXNzZXJ0KCJlZHdhcmQtMTUyOCIsIHpub2RlX2lz
X2FueV9sb2NrZWQoY2x1c3QtPmhpbnQtPmxoLm5vZGUpKTsKKworCWlmIChwYWdlLT5tYXBwaW5n
ICE9IGlub2RlLT5pX21hcHBpbmcpIHsKKwkJLyogcGFnZSB3YXMgdHJ1bmNhdGVkICovCisJCXJl
aXNlcjRfdW5zZXRfaGludChjbHVzdC0+aGludCk7CisJCXJlc2V0X2NsdXN0ZXJfcGFyYW1zKGNs
dXN0KTsKKwkJcmV0dXJuIEFPUF9UUlVOQ0FURURfUEFHRTsKKwl9CisJaWYgKFBhZ2VVcHRvZGF0
ZShwYWdlKSkgeworCQkvKiBkaXNrIGNsdXN0ZXIgY2FuIGJlIG9ic29sZXRlLCBkb24ndCB1c2Ug
aXQhICovCisJCXJlaXNlcjRfdW5zZXRfaGludChjbHVzdC0+aGludCk7CisJCXJlc2V0X2NsdXN0
ZXJfcGFyYW1zKGNsdXN0KTsKKwkJcmV0dXJuIDA7CisJfQorCWlmIChjbHVzdC0+ZHN0YXQgPT0g
RkFLRV9ESVNLX0NMVVNURVIgfHwKKwkgICAgY2x1c3QtPmRzdGF0ID09IFVOUFJfRElTS19DTFVT
VEVSIHx8CisJICAgIGNsdXN0LT5kc3RhdCA9PSBUUk5DX0RJU0tfQ0xVU1RFUikgeworCQkvKgor
CQkgKiB0aGlzIGluZm9ybWF0aW9uIGFib3V0IGRpc2sgY2x1c3RlciB3aWxsIGJlIHZhbGlkCisJ
CSAqIGFzIGxvbmcgYXMgd2Uga2VlcCB0aGUgcG9zaXRpb24gaW4gdGhlIHRyZWUgbG9ja2VkCisJ
CSAqLworCQl0Zm1fY2x1c3Rlcl9zZXRfdXB0b2RhdGUoJmNsdXN0LT50Yyk7CisJCXJldHVybiAw
OworCX0KKwkvKiBub3cgcHJlcGFyZSBvdXRwdXQgc3RyZWFtLi4gKi8KKwlyZXN1bHQgPSBncmFi
X2NvYSgmY2x1c3QtPnRjLCBpbm9kZV9jb21wcmVzc2lvbl9wbHVnaW4oaW5vZGUpKTsKKwlpZiAo
cmVzdWx0KQorCQlyZXR1cm4gcmVzdWx0OworCS8qIC4uYW5kIGZpbGwgdGhpcyB3aXRoIHBsYWlu
IHRleHQgKi8KKwlyZXN1bHQgPSByZWlzZXI0X2luZmxhdGVfY2x1c3RlcihjbHVzdCwgaW5vZGUp
OworCWlmIChyZXN1bHQpCisJCXJldHVybiByZXN1bHQ7CisJLyoKKwkgKiBUaGUgc3RyZWFtIGlz
IHJlYWR5ISBJdCB3b24ndCBiZSBvYnNvbGV0ZSBhcworCSAqIGxvbmcgYXMgd2Uga2VlcCBsYXN0
IGRpc2sgY2x1c3RlciBpdGVtIGxvY2tlZC4KKwkgKi8KKwl0Zm1fY2x1c3Rlcl9zZXRfdXB0b2Rh
dGUoJmNsdXN0LT50Yyk7CisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiBmaWxsIG9uZSBwYWdlIHdp
dGggcGxhaW4gdGV4dC4KKyAqLworaW50IGRvX3JlYWRwYWdlX2N0YWlsKHN0cnVjdCBpbm9kZSAq
IGlub2RlLCBzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCwKKwkJICAgICAgc3RydWN0IHBh
Z2UgKnBhZ2UsIHpub2RlX2xvY2tfbW9kZSBtb2RlKQoreworCWludCByZXQ7CisJdW5zaWduZWQg
Y2xvZmY7CisJY2hhciAqZGF0YTsKKwlzaXplX3QgdG9fcGFnZTsKKwlzdHJ1Y3QgdGZtX2NsdXN0
ZXIgKiB0YyA9ICZjbHVzdC0+dGM7CisKKwlhc3NlcnQoImVkd2FyZC0yMTIiLCBQYWdlTG9ja2Vk
KHBhZ2UpKTsKKworCWlmICh1bmxpa2VseShwYWdlLT5tYXBwaW5nICE9IGlub2RlLT5pX21hcHBp
bmcpKQorCQlyZXR1cm4gQU9QX1RSVU5DQVRFRF9QQUdFOworCWlmIChQYWdlVXB0b2RhdGUocGFn
ZSkpCisJCWdvdG8gZXhpdDsKKwl0b19wYWdlID0gcGJ5dGVzKHBhZ2VfaW5kZXgocGFnZSksIGlu
b2RlKTsKKwlpZiAodG9fcGFnZSA9PSAwKSB7CisJCXplcm9fdXNlcihwYWdlLCAwLCBQQUdFX1NJ
WkUpOworCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7CisJCWdvdG8gZXhpdDsKKwl9CisJaWYgKCF0
Zm1fY2x1c3Rlcl9pc191cHRvZGF0ZSgmY2x1c3QtPnRjKSkgeworCQljbHVzdC0+aW5kZXggPSBw
Z190b19jbHVzdChwYWdlLT5pbmRleCwgaW5vZGUpOworCisJCS8qIHRoaXMgd2lsbCB1bmxvY2sv
bG9jayB0aGUgcGFnZSAqLworCQlyZXQgPSBjdGFpbF9yZWFkX2Rpc2tfY2x1c3RlcihjbHVzdCwg
aW5vZGUsIHBhZ2UsIG1vZGUpOworCisJCWFzc2VydCgiZWR3YXJkLTIxMiIsIFBhZ2VMb2NrZWQo
cGFnZSkpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKworCQkvKiByZWZyZXNoIGJ5dGVz
ICovCisJCXRvX3BhZ2UgPSBwYnl0ZXMocGFnZV9pbmRleChwYWdlKSwgaW5vZGUpOworCQlpZiAo
dG9fcGFnZSA9PSAwKSB7CisJCQl6ZXJvX3VzZXIocGFnZSwgMCwgUEFHRV9TSVpFKTsKKwkJCVNl
dFBhZ2VVcHRvZGF0ZShwYWdlKTsKKwkJCWdvdG8gZXhpdDsKKwkJfQorCX0KKwlpZiAoUGFnZVVw
dG9kYXRlKHBhZ2UpKQorCQkvKiBzb21lYm9keSBlbHNlIGZpbGwgaXQgYWxyZWFkeSAqLworCQln
b3RvIGV4aXQ7CisKKwlhc3NlcnQoImVkd2FyZC0xMTkiLCB0Zm1fY2x1c3Rlcl9pc191cHRvZGF0
ZSh0YykpOworCWFzc2VydCgiZWR3YXJkLTE1MjkiLCB6bm9kZV9pc19hbnlfbG9ja2VkKGNsdXN0
LT5oaW50LT5saC5ub2RlKSk7CisKKwlzd2l0Y2ggKGNsdXN0LT5kc3RhdCkgeworCWNhc2UgVU5Q
Ul9ESVNLX0NMVVNURVI6CisJCS8qCisJCSAqIFBhZ2UgaXMgbm90IHVwdG9kYXRlIGFuZCBpdGVt
IGNsdXN0ZXIgaXMgdW5wcmVwcGVkOgorCQkgKiB0aGlzIG11c3Qgbm90IGV2ZXIgaGFwcGVuLgor
CQkgKi8KKwkJd2FybmluZygiZWR3YXJkLTE2MzIiLAorCQkJIkJhZCBpdGVtIGNsdXN0ZXIgJWx1
IChJbm9kZSAlbGx1KS4gRnNjaz8iLAorCQkJY2x1c3QtPmluZGV4LAorCQkJKHVuc2lnbmVkIGxv
bmcgbG9uZylnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJ
Y2FzZSBUUk5DX0RJU0tfQ0xVU1RFUjoKKwkJLyoKKwkJICogUmFjZSB3aXRoIHRydW5jYXRlIQor
CQkgKiBXZSByZXNvbHZlIGl0IGluIGZhdm91ciBvZiB0aGUgbGFzdCBvbmUgKHRoZSBvbmx5IHdh
eSwKKyAgICAgICAgICAgICAgICAgKiBhcyBpbiB0aGlzIGNhc2UgcGxhaW4gdGV4dCBpcyB1bnJl
Y292ZXJhYmxlKQorCQkgKi8KKwljYXNlIEZBS0VfRElTS19DTFVTVEVSOgorCQkvKiBmaWxsIHRo
ZSBwYWdlIGJ5IHplcm9lcyAqLworCQl6ZXJvX3VzZXIocGFnZSwgMCwgUEFHRV9TSVpFKTsKKwkJ
U2V0UGFnZVVwdG9kYXRlKHBhZ2UpOworCQlicmVhazsKKwljYXNlIFBSRVBfRElTS19DTFVTVEVS
OgorCQkvKiBmaWxsIHBhZ2UgYnkgdHJhbnNmb3JtZWQgc3RyZWFtIHdpdGggcGxhaW4gdGV4dCAq
LworCQlhc3NlcnQoImVkd2FyZC0xMDU4IiwgIVBhZ2VVcHRvZGF0ZShwYWdlKSk7CisJCWFzc2Vy
dCgiZWR3YXJkLTEyMCIsIHRjLT5sZW4gPD0gaW5vZGVfY2x1c3Rlcl9zaXplKGlub2RlKSk7CisK
KwkJLyogcGFnZSBpbmRleCBpbiB0aGlzIGxvZ2ljYWwgY2x1c3RlciAqLworCQljbG9mZiA9IHBn
X3RvX29mZl90b19jbG9mZihwYWdlLT5pbmRleCwgaW5vZGUpOworCisJCWRhdGEgPSBrbWFwKHBh
Z2UpOworCQltZW1jcHkoZGF0YSwgdGZtX3N0cmVhbV9kYXRhKHRjLCBPVVRQVVRfU1RSRUFNKSAr
IGNsb2ZmLCB0b19wYWdlKTsKKwkJbWVtc2V0KGRhdGEgKyB0b19wYWdlLCAwLCAoc2l6ZV90KSBQ
QUdFX1NJWkUgLSB0b19wYWdlKTsKKwkJZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7CisJCWt1bm1h
cChwYWdlKTsKKwkJU2V0UGFnZVVwdG9kYXRlKHBhZ2UpOworCQlicmVhazsKKwlkZWZhdWx0Ogor
CQlpbXBvc3NpYmxlKCJlZHdhcmQtMTE2OSIsICJiYWQgZGlzayBjbHVzdGVyIHN0YXRlIik7CisJ
fQorICAgICAgZXhpdDoKKwlyZXR1cm4gMDsKK30KKworLyogcGx1Z2luLT51Lml0ZW0ucy5maWxl
LnJlYWRwYWdlICovCitpbnQgcmVhZHBhZ2VfY3RhaWwodm9pZCAqdnAsIHN0cnVjdCBwYWdlICpw
YWdlKQoreworCWludCByZXN1bHQ7CisJaGludF90ICogaGludDsKKwlzdHJ1Y3QgY2x1c3Rlcl9o
YW5kbGUgKiBjbHVzdCA9IHZwOworCisJYXNzZXJ0KCJlZHdhcmQtMTE0IiwgY2x1c3QgIT0gTlVM
TCk7CisJYXNzZXJ0KCJlZHdhcmQtMTE1IiwgUGFnZUxvY2tlZChwYWdlKSk7CisJYXNzZXJ0KCJl
ZHdhcmQtMTE2IiwgIVBhZ2VVcHRvZGF0ZShwYWdlKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTE4Iiwg
cGFnZS0+bWFwcGluZyAmJiBwYWdlLT5tYXBwaW5nLT5ob3N0KTsKKwlhc3NlcnQoImVkd2FyZC04
NjciLCAhdGZtX2NsdXN0ZXJfaXNfdXB0b2RhdGUoJmNsdXN0LT50YykpOworCisJaGludCA9IGtt
YWxsb2Moc2l6ZW9mKCpoaW50KSwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmICho
aW50ID09IE5VTEwpIHsKKwkJdW5sb2NrX3BhZ2UocGFnZSk7CisJCXJldHVybiBSRVRFUlIoLUVO
T01FTSk7CisJfQorCWNsdXN0LT5oaW50ID0gaGludDsKKwlyZXN1bHQgPSBsb2FkX2ZpbGVfaGlu
dChjbHVzdC0+ZmlsZSwgaGludCk7CisJaWYgKHJlc3VsdCkgeworCQlrZnJlZShoaW50KTsKKwkJ
dW5sb2NrX3BhZ2UocGFnZSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCWFzc2VydCgidnMtMjUi
LCBoaW50LT5leHRfY29vcmQubGggPT0gJmhpbnQtPmxoKTsKKworCXJlc3VsdCA9IGRvX3JlYWRw
YWdlX2N0YWlsKHBhZ2UtPm1hcHBpbmctPmhvc3QsIGNsdXN0LCBwYWdlLAorCQkJCSAgIFpOT0RF
X1JFQURfTE9DSyk7CisJYXNzZXJ0KCJlZHdhcmQtMjEzIiwgUGFnZUxvY2tlZChwYWdlKSk7CisJ
YXNzZXJ0KCJlZHdhcmQtMTE2MyIsIGVyZ28oIXJlc3VsdCwgUGFnZVVwdG9kYXRlKHBhZ2UpKSk7
CisKKwl1bmxvY2tfcGFnZShwYWdlKTsKKwlkb25lX2xoKCZoaW50LT5saCk7CisJaGludC0+ZXh0
X2Nvb3JkLnZhbGlkID0gMDsKKwlzYXZlX2ZpbGVfaGludChjbHVzdC0+ZmlsZSwgaGludCk7CisJ
a2ZyZWUoaGludCk7CisJdGZtX2NsdXN0ZXJfY2xyX3VwdG9kYXRlKCZjbHVzdC0+dGMpOworCisJ
cmV0dXJuIHJlc3VsdDsKK30KKworLyogSGVscGVyIGZ1bmN0aW9uIGZvciAtPnJlYWRwYWdlcygp
ICovCitzdGF0aWMgaW50IGN0YWlsX3JlYWRfcGFnZV9jbHVzdGVyKHN0cnVjdCBjbHVzdGVyX2hh
bmRsZSAqIGNsdXN0LAorCQkJCSAgIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJaW50IGk7CisJ
aW50IHJlc3VsdDsKKwlhc3NlcnQoImVkd2FyZC03NzkiLCBjbHVzdCAhPSBOVUxMKTsKKwlhc3Nl
cnQoImVkd2FyZC0xMDU5IiwgY2x1c3QtPndpbiA9PSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC03
ODAiLCBpbm9kZSAhPSBOVUxMKTsKKworCXJlc3VsdCA9IHByZXBhcmVfcGFnZV9jbHVzdGVyKGlu
b2RlLCBjbHVzdCwgUkVBRF9PUCk7CisJaWYgKHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKwor
CWFzc2VydCgiZWR3YXJkLTc4MSIsICF0Zm1fY2x1c3Rlcl9pc191cHRvZGF0ZSgmY2x1c3QtPnRj
KSk7CisKKwlmb3IgKGkgPSAwOyBpIDwgY2x1c3QtPm5yX3BhZ2VzOyBpKyspIHsKKwkJc3RydWN0
IHBhZ2UgKnBhZ2UgPSBjbHVzdC0+cGFnZXNbaV07CisJCWxvY2tfcGFnZShwYWdlKTsKKwkJcmVz
dWx0ID0gZG9fcmVhZHBhZ2VfY3RhaWwoaW5vZGUsIGNsdXN0LCBwYWdlLCBaTk9ERV9SRUFEX0xP
Q0spOworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJaWYgKHJlc3VsdCkKKwkJCWJyZWFrOworCX0K
Kwl0Zm1fY2x1c3Rlcl9jbHJfdXB0b2RhdGUoJmNsdXN0LT50Yyk7CisJcHV0X3BhZ2VfY2x1c3Rl
cihjbHVzdCwgaW5vZGUsIFJFQURfT1ApOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGZpbGxl
ciBmb3IgcmVhZF9jYWNoZV9wYWdlcygpICovCitzdGF0aWMgaW50IGN0YWlsX3JlYWRwYWdlc19m
aWxsZXIodm9pZCAqIGRhdGEsIHN0cnVjdCBwYWdlICogcGFnZSkKK3sKKwlpbnQgcmV0ID0gMDsK
KwlzdHJ1Y3QgY2x1c3Rlcl9oYW5kbGUgKiBjbHVzdCA9IGRhdGE7CisJc3RydWN0IGlub2RlICog
aW5vZGUgPSBmaWxlX2lub2RlKGNsdXN0LT5maWxlKTsKKworCWFzc2VydCgiZWR3YXJkLTE1MjUi
LCBwYWdlLT5tYXBwaW5nID09IGlub2RlLT5pX21hcHBpbmcpOworCisJaWYgKFBhZ2VVcHRvZGF0
ZShwYWdlKSkgeworCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJcmV0dXJuIDA7CisJfQorCWlmIChw
Ynl0ZXMocGFnZV9pbmRleChwYWdlKSwgaW5vZGUpID09IDApIHsKKwkJemVyb191c2VyKHBhZ2Us
IDAsIFBBR0VfU0laRSk7CisJCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKKwkJdW5sb2NrX3BhZ2Uo
cGFnZSk7CisJCXJldHVybiAwOworCX0KKwltb3ZlX2NsdXN0ZXJfZm9yd2FyZChjbHVzdCwgaW5v
ZGUsIHBhZ2UtPmluZGV4KTsKKwl1bmxvY2tfcGFnZShwYWdlKTsKKwkvKgorCSAqIHJlYWQgdGhl
IHdob2xlIHBhZ2UgY2x1c3RlcgorCSAqLworCXJldCA9IGN0YWlsX3JlYWRfcGFnZV9jbHVzdGVy
KGNsdXN0LCBpbm9kZSk7CisKKwlhc3NlcnQoImVkd2FyZC04NjkiLCAhdGZtX2NsdXN0ZXJfaXNf
dXB0b2RhdGUoJmNsdXN0LT50YykpOworCXJldHVybiByZXQ7Cit9CisKKy8qCisgKiBXZSBwb3B1
bGF0ZSBhIGJpdCBtb3JlIHRoZW4gdXBwZXIgcmVhZGFoZWFkIHN1Z2dlc3RzOgorICogd2l0aCBl
YWNoIG5vbWluYXRlZCBwYWdlIHdlIHJlYWQgdGhlIHdob2xlIHBhZ2UgY2x1c3RlcgorICogdGhp
cyBwYWdlIGJlbG9uZ3MgdG8uCisgKi8KK2ludCByZWFkcGFnZXNfY3RhaWwoc3RydWN0IGZpbGUg
KmZpbGUsIHN0cnVjdCBhZGRyZXNzX3NwYWNlICptYXBwaW5nLAorCQkgICAgc3RydWN0IGxpc3Rf
aGVhZCAqcGFnZXMpCit7CisJaW50IHJldCA9IDA7CisJaGludF90ICpoaW50OworCXN0cnVjdCBj
bHVzdGVyX2hhbmRsZSBjbHVzdDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlID0gbWFwcGluZy0+aG9z
dDsKKworCWFzc2VydCgiZWR3YXJkLTE1MjEiLCBpbm9kZSA9PSBmaWxlX2lub2RlKGZpbGUpKTsK
KworCWNsdXN0ZXJfaW5pdF9yZWFkKCZjbHVzdCwgTlVMTCk7CisJY2x1c3QuZmlsZSA9IGZpbGU7
CisJaGludCA9IGttYWxsb2Moc2l6ZW9mKCpoaW50KSwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0
KCkpOworCWlmIChoaW50ID09IE5VTEwpIHsKKwkJd2FybmluZygidnMtMjgiLCAiZmFpbGVkIHRv
IGFsbG9jYXRlIGhpbnQiKTsKKwkJcmV0ID0gUkVURVJSKC1FTk9NRU0pOworCQlnb3RvIGV4aXQx
OworCX0KKwljbHVzdC5oaW50ID0gaGludDsKKwlyZXQgPSBsb2FkX2ZpbGVfaGludChjbHVzdC5m
aWxlLCBoaW50KTsKKwlpZiAocmV0KSB7CisJCXdhcm5pbmcoImVkd2FyZC0xNTIyIiwgImZhaWxl
ZCB0byBsb2FkIGhpbnQiKTsKKwkJZ290byBleGl0MjsKKwl9CisJYXNzZXJ0KCJ2cy0yNiIsIGhp
bnQtPmV4dF9jb29yZC5saCA9PSAmaGludC0+bGgpOworCXJldCA9IGFsbG9jX2NsdXN0ZXJfcGdz
ZXQoJmNsdXN0LCBjbHVzdGVyX25ycGFnZXMoaW5vZGUpKTsKKwlpZiAocmV0KSB7CisJCXdhcm5p
bmcoImVkd2FyZC0xNTIzIiwgImZhaWxlZCB0byBhbGxvYyBwZ3NldCIpOworCQlnb3RvIGV4aXQz
OworCX0KKwlyZXQgPSByZWFkX2NhY2hlX3BhZ2VzKG1hcHBpbmcsIHBhZ2VzLCBjdGFpbF9yZWFk
cGFnZXNfZmlsbGVyLCAmY2x1c3QpOworCisJYXNzZXJ0KCJlZHdhcmQtODcwIiwgIXRmbV9jbHVz
dGVyX2lzX3VwdG9kYXRlKCZjbHVzdC50YykpOworIGV4aXQzOgorCWRvbmVfbGgoJmhpbnQtPmxo
KTsKKwlzYXZlX2ZpbGVfaGludChmaWxlLCBoaW50KTsKKwloaW50LT5leHRfY29vcmQudmFsaWQg
PSAwOworIGV4aXQyOgorCWtmcmVlKGhpbnQpOworIGV4aXQxOgorCXB1dF9jbHVzdGVyX2hhbmRs
ZSgmY2x1c3QpOworCXJldHVybiByZXQ7Cit9CisKKy8qCisgICBwbHVnaW4tPnUuaXRlbS5zLmZp
bGUuYXBwZW5kX2tleQorICAga2V5IG9mIHRoZSBmaXJzdCBpdGVtIG9mIHRoZSBuZXh0IGRpc2sg
Y2x1c3RlcgorKi8KK3JlaXNlcjRfa2V5ICphcHBlbmRfa2V5X2N0YWlsKGNvbnN0IGNvb3JkX3Qg
KiBjb29yZCwgcmVpc2VyNF9rZXkgKiBrZXkpCit7CisJYXNzZXJ0KCJlZHdhcmQtMTI0MSIsIGl0
ZW1faWRfYnlfY29vcmQoY29vcmQpID09IENUQUlMX0lEKTsKKwlhc3NlcnQoImVkd2FyZC0xMjQy
IiwgY2x1c3Rlcl9zaGlmdF9vayhjbHVzdGVyX3NoaWZ0X2J5X2Nvb3JkKGNvb3JkKSkpOworCisJ
aXRlbV9rZXlfYnlfY29vcmQoY29vcmQsIGtleSk7CisJc2V0X2tleV9vZmZzZXQoa2V5LCAoKF9f
dTY0KSAoY2x1c3RfYnlfY29vcmQoY29vcmQsIE5VTEwpKSArIDEpCisJCSAgICAgICA8PCBjbHVz
dGVyX3NoaWZ0X2J5X2Nvb3JkKGNvb3JkKSk7CisJcmV0dXJuIGtleTsKK30KKworc3RhdGljIGlu
dCBpbnNlcnRfdW5wcmVwcGVkX2N0YWlsKHN0cnVjdCBjbHVzdGVyX2hhbmRsZSAqIGNsdXN0LAor
CQkJCSAgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlpbnQgcmVzdWx0OworCWNoYXIgYnVmW1VD
VEFJTF9OUl9VTklUU107CisJcmVpc2VyNF9pdGVtX2RhdGEgZGF0YTsKKwlyZWlzZXI0X2tleSBr
ZXk7CisJaW50IHNoaWZ0ID0gKGludClVQ1RBSUxfU0hJRlQ7CisKKwltZW1zZXQoYnVmLCAwLCAo
c2l6ZV90KSBVQ1RBSUxfTlJfVU5JVFMpOworCXJlc3VsdCA9IGtleV9ieV9pbm9kZV9jcnlwdGNv
bXByZXNzKGlub2RlLAorCQkJCQkgICAgY2x1c3RfdG9fb2ZmKGNsdXN0LT5pbmRleCwgaW5vZGUp
LAorCQkJCQkgICAgJmtleSk7CisJaWYgKHJlc3VsdCkKKwkJcmV0dXJuIHJlc3VsdDsKKwlkYXRh
LnVzZXIgPSAwOworCWRhdGEuaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9pZChDVEFJTF9JRCk7CisJ
ZGF0YS5hcmcgPSAmc2hpZnQ7CisJZGF0YS5sZW5ndGggPSBzaXplb2YoY3RhaWxfaXRlbV9mb3Jt
YXQpICsgKHNpemVfdCkgVUNUQUlMX05SX1VOSVRTOworCWRhdGEuZGF0YSA9IGJ1ZjsKKworCXJl
c3VsdCA9IGluc2VydF9ieV9jb29yZCgmY2x1c3QtPmhpbnQtPmV4dF9jb29yZC5jb29yZCwKKwkJ
CQkgJmRhdGEsICZrZXksIGNsdXN0LT5oaW50LT5leHRfY29vcmQubGgsIDApOworCXJldHVybiBy
ZXN1bHQ7Cit9CisKK3N0YXRpYyBpbnQKK2luc2VydF9jcnlwdGNvbXByZXNzX2Zsb3coY29vcmRf
dCAqIGNvb3JkLCBsb2NrX2hhbmRsZSAqIGxoLCBmbG93X3QgKiBmLAorCQkJICBpbnQgY2x1c3Rl
cl9zaGlmdCkKK3sKKwlpbnQgcmVzdWx0OworCWNhcnJ5X3Bvb2wgKnBvb2w7CisJY2FycnlfbGV2
ZWwgKmxvd2VzdF9sZXZlbDsKKwlyZWlzZXI0X2l0ZW1fZGF0YSAqZGF0YTsKKwljYXJyeV9vcCAq
b3A7CisKKwlwb29sID0KKwkgICAgaW5pdF9jYXJyeV9wb29sKHNpemVvZigqcG9vbCkgKyAzICog
c2l6ZW9mKCpsb3dlc3RfbGV2ZWwpICsKKwkJCSAgICBzaXplb2YoKmRhdGEpKTsKKwlpZiAoSVNf
RVJSKHBvb2wpKQorCQlyZXR1cm4gUFRSX0VSUihwb29sKTsKKwlsb3dlc3RfbGV2ZWwgPSAoY2Fy
cnlfbGV2ZWwgKikgKHBvb2wgKyAxKTsKKwlpbml0X2NhcnJ5X2xldmVsKGxvd2VzdF9sZXZlbCwg
cG9vbCk7CisJZGF0YSA9IChyZWlzZXI0X2l0ZW1fZGF0YSAqKSAobG93ZXN0X2xldmVsICsgMyk7
CisKKwlhc3NlcnQoImVkd2FyZC00NjYiLCBjb29yZC0+YmV0d2VlbiA9PSBBRlRFUl9JVEVNCisJ
ICAgICAgIHx8IGNvb3JkLT5iZXR3ZWVuID09IEFGVEVSX1VOSVQgfHwgY29vcmQtPmJldHdlZW4g
PT0gQkVGT1JFX0lURU0KKwkgICAgICAgfHwgY29vcmQtPmJldHdlZW4gPT0gRU1QVFlfTk9ERQor
CSAgICAgICB8fCBjb29yZC0+YmV0d2VlbiA9PSBCRUZPUkVfVU5JVCk7CisKKwlpZiAoY29vcmQt
PmJldHdlZW4gPT0gQUZURVJfVU5JVCkgeworCQljb29yZC0+dW5pdF9wb3MgPSAwOworCQljb29y
ZC0+YmV0d2VlbiA9IEFGVEVSX0lURU07CisJfQorCW9wID0gcmVpc2VyNF9wb3N0X2NhcnJ5KGxv
d2VzdF9sZXZlbCwgQ09QX0lOU0VSVF9GTE9XLCBjb29yZC0+bm9kZSwKKwkJCQkwIC8qIG9wZXJh
dGUgZGlyZWN0bHkgb24gY29vcmQgLT4gbm9kZSAqLyk7CisJaWYgKElTX0VSUihvcCkgfHwgKG9w
ID09IE5VTEwpKSB7CisJCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKwkJcmV0dXJuIFJFVEVSUihv
cCA/IFBUUl9FUlIob3ApIDogLUVJTyk7CisJfQorCWRhdGEtPnVzZXIgPSAwOworCWRhdGEtPmlw
bHVnID0gaXRlbV9wbHVnaW5fYnlfaWQoQ1RBSUxfSUQpOworCWRhdGEtPmFyZyA9ICZjbHVzdGVy
X3NoaWZ0OworCisJZGF0YS0+bGVuZ3RoID0gMDsKKwlkYXRhLT5kYXRhID0gTlVMTDsKKworCW9w
LT51Lmluc2VydF9mbG93LmZsYWdzID0KKwkJQ09QSV9TV0VFUCB8CisJCUNPUElfRE9OVF9TSElG
VF9MRUZUIHwKKwkJQ09QSV9ET05UX1NISUZUX1JJR0hUOworCW9wLT51Lmluc2VydF9mbG93Lmlu
c2VydF9wb2ludCA9IGNvb3JkOworCW9wLT51Lmluc2VydF9mbG93LmZsb3cgPSBmOworCW9wLT51
Lmluc2VydF9mbG93LmRhdGEgPSBkYXRhOworCW9wLT51Lmluc2VydF9mbG93Lm5ld19ub2RlcyA9
IDA7CisKKwlsb3dlc3RfbGV2ZWwtPnRyYWNrX3R5cGUgPSBDQVJSWV9UUkFDS19DSEFOR0U7CisJ
bG93ZXN0X2xldmVsLT50cmFja2VkID0gbGg7CisKKwlyZXN1bHQgPSByZWlzZXI0X2NhcnJ5KGxv
d2VzdF9sZXZlbCwgTlVMTCk7CisJZG9uZV9jYXJyeV9wb29sKHBvb2wpOworCisJcmV0dXJuIHJl
c3VsdDsKK30KKworLyogSW1wbGVtZW50YXRpb24gb2YgQ1JDX0FQUEVORF9JVEVNIG1vZGUgb2Yg
Y3RhaWwgY29udmVyc2lvbiAqLworc3RhdGljIGludCBpbnNlcnRfY3J5cHRjb21wcmVzc19mbG93
X2luX3BsYWNlKGNvb3JkX3QgKiBjb29yZCwKKwkJCQkJICAgICAgbG9ja19oYW5kbGUgKiBsaCwg
Zmxvd190ICogZiwKKwkJCQkJICAgICAgaW50IGNsdXN0ZXJfc2hpZnQpCit7CisJaW50IHJldDsK
Kwljb29yZF90IHBvczsKKwlsb2NrX2hhbmRsZSBsb2NrOworCisJYXNzZXJ0KCJlZHdhcmQtNDg0
IiwKKwkgICAgICAgY29vcmQtPmJldHdlZW4gPT0gQVRfVU5JVCB8fCBjb29yZC0+YmV0d2VlbiA9
PSBBRlRFUl9JVEVNKTsKKwlhc3NlcnQoImVkd2FyZC00ODUiLCBpdGVtX2lkX2J5X2Nvb3JkKGNv
b3JkKSA9PSBDVEFJTF9JRCk7CisKKwljb29yZF9kdXAoJnBvcywgY29vcmQpOworCXBvcy51bml0
X3BvcyA9IDA7CisJcG9zLmJldHdlZW4gPSBBRlRFUl9JVEVNOworCisJaW5pdF9saCgmbG9jayk7
CisJY29weV9saCgmbG9jaywgbGgpOworCisJcmV0ID0gaW5zZXJ0X2NyeXB0Y29tcHJlc3NfZmxv
dygmcG9zLCAmbG9jaywgZiwgY2x1c3Rlcl9zaGlmdCk7CisJZG9uZV9saCgmbG9jayk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTM0NyIsIHpub2RlX2lzX3dyaXRlX2xvY2tlZChsaC0+bm9kZSkpOworCWFz
c2VydCgiZWR3YXJkLTEyMjgiLCAhcmV0KTsKKwlyZXR1cm4gcmV0OworfQorCisvKiBJbXBsZW1l
bnRhdGlvbiBvZiBDUkNfT1ZFUldSSVRFX0lURU0gbW9kZSBvZiBjdGFpbCBjb252ZXJzaW9uICov
CitzdGF0aWMgaW50IG92ZXJ3cml0ZV9jdGFpbChjb29yZF90ICogY29vcmQsIGZsb3dfdCAqIGYp
Cit7CisJdW5zaWduZWQgY291bnQ7CisKKwlhc3NlcnQoImVkd2FyZC0yNjkiLCBmLT51c2VyID09
IDApOworCWFzc2VydCgiZWR3YXJkLTI3MCIsIGYtPmRhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJl
ZHdhcmQtMjcxIiwgZi0+bGVuZ3RoID4gMCk7CisJYXNzZXJ0KCJlZHdhcmQtMjcyIiwgY29vcmRf
aXNfZXhpc3RpbmdfdW5pdChjb29yZCkpOworCWFzc2VydCgiZWR3YXJkLTI3MyIsIGNvb3JkLT51
bml0X3BvcyA9PSAwKTsKKwlhc3NlcnQoImVkd2FyZC0yNzQiLCB6bm9kZV9pc193cml0ZV9sb2Nr
ZWQoY29vcmQtPm5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0yNzUiLCByZWlzZXI0X3NjaGVkdWxh
YmxlKCkpOworCWFzc2VydCgiZWR3YXJkLTQ2NyIsIGl0ZW1faWRfYnlfY29vcmQoY29vcmQpID09
IENUQUlMX0lEKTsKKwlhc3NlcnQoImVkd2FyZC0xMjQzIiwgY3RhaWxfb2soY29vcmQpKTsKKwor
CWNvdW50ID0gbnJfdW5pdHNfY3RhaWwoY29vcmQpOworCisJaWYgKGNvdW50ID4gZi0+bGVuZ3Ro
KQorCQljb3VudCA9IGYtPmxlbmd0aDsKKwltZW1jcHkoZmlyc3RfdW5pdChjb29yZCksIGYtPmRh
dGEsIGNvdW50KTsKKwltb3ZlX2Zsb3dfZm9yd2FyZChmLCBjb3VudCk7CisJY29vcmQtPnVuaXRf
cG9zICs9IGNvdW50OworCXJldHVybiAwOworfQorCisvKiBJbXBsZW1lbnRhdGlvbiBvZiBDUkNf
Q1VUX0lURU0gbW9kZSBvZiBjdGFpbCBjb252ZXJzaW9uOgorICAgY3V0IGN0YWlsIChwYXJ0IG9y
IHdob2xlKSBzdGFydGluZyBmcm9tIG5leHQgdW5pdCBwb3NpdGlvbiAqLworc3RhdGljIGludCBj
dXRfY3RhaWwoY29vcmRfdCAqIGNvb3JkKQoreworCWNvb3JkX3Qgc3RvcDsKKworCWFzc2VydCgi
ZWR3YXJkLTQzNSIsIGNvb3JkLT5iZXR3ZWVuID09IEFUX1VOSVQgJiYKKwkgICAgICAgY29vcmQt
Pml0ZW1fcG9zIDwgY29vcmRfbnVtX2l0ZW1zKGNvb3JkKSAmJgorCSAgICAgICBjb29yZC0+dW5p
dF9wb3MgPD0gY29vcmRfbnVtX3VuaXRzKGNvb3JkKSk7CisKKwlpZiAoY29vcmQtPnVuaXRfcG9z
ID09IGNvb3JkX251bV91bml0cyhjb29yZCkpCisJCS8qIG5vdGhpbmcgdG8gY3V0ICovCisJCXJl
dHVybiAwOworCWNvb3JkX2R1cCgmc3RvcCwgY29vcmQpOworCXN0b3AudW5pdF9wb3MgPSBjb29y
ZF9sYXN0X3VuaXRfcG9zKGNvb3JkKTsKKworCXJldHVybiBjdXRfbm9kZV9jb250ZW50KGNvb3Jk
LCAmc3RvcCwgTlVMTCwgTlVMTCwgTlVMTCk7Cit9CisKK2ludCBjdGFpbF9pbnNlcnRfdW5wcmVw
cGVkX2NsdXN0ZXIoc3RydWN0IGNsdXN0ZXJfaGFuZGxlICogY2x1c3QsCisJCQkJICAgc3RydWN0
IGlub2RlICogaW5vZGUpCit7CisJaW50IHJlc3VsdDsKKwlhc3NlcnQoImVkd2FyZC0xMjQ0Iiwg
aW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTI0NSIsIGNsdXN0LT5oaW50ICE9IE5V
TEwpOworCWFzc2VydCgiZWR3YXJkLTEyNDYiLCBjbHVzdC0+ZHN0YXQgPT0gRkFLRV9ESVNLX0NM
VVNURVIpOworCWFzc2VydCgiZWR3YXJkLTEyNDciLCBjbHVzdC0+cmVzZXJ2ZWQgPT0gMSk7CisK
KwlyZXN1bHQgPSBnZXRfZGlza19jbHVzdGVyX2xvY2tlZChjbHVzdCwgaW5vZGUsIFpOT0RFX1dS
SVRFX0xPQ0spOworCWlmIChjYmtfZXJyb3JlZChyZXN1bHQpKQorCQlyZXR1cm4gcmVzdWx0Owor
CWFzc2VydCgiZWR3YXJkLTEyNDkiLCByZXN1bHQgPT0gQ0JLX0NPT1JEX05PVEZPVU5EKTsKKwlh
c3NlcnQoImVkd2FyZC0xMjUwIiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKGNsdXN0LT5oaW50LT5s
aC5ub2RlKSk7CisKKwlhc3NlcnQoImVkd2FyZC0xMjk1IiwKKwkgICAgICAgY2x1c3QtPmhpbnQt
PmV4dF9jb29yZC5saC0+bm9kZSA9PQorCSAgICAgICBjbHVzdC0+aGludC0+ZXh0X2Nvb3JkLmNv
b3JkLm5vZGUpOworCisJY29vcmRfc2V0X2JldHdlZW5fY2x1c3RlcnMoJmNsdXN0LT5oaW50LT5l
eHRfY29vcmQuY29vcmQpOworCisJcmVzdWx0ID0gaW5zZXJ0X3VucHJlcHBlZF9jdGFpbChjbHVz
dCwgaW5vZGUpOworCWFsbF9ncmFiYmVkMmZyZWUoKTsKKworCWFzc2VydCgiZWR3YXJkLTEyNTEi
LCAhcmVzdWx0KTsKKwlhc3NlcnQoImVkd2FyZC0xMjUyIiwgY3J5cHRjb21wcmVzc19pbm9kZV9v
ayhpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTEyNTMiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQo
Y2x1c3QtPmhpbnQtPmxoLm5vZGUpKTsKKwlhc3NlcnQoImVkd2FyZC0xMjU0IiwKKwkgICAgICAg
cmVpc2VyNF9jbHVzdGVyZWRfYmxvY2tzKHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSkpOworCWFz
c2VydCgiZWR3YXJkLTEyNTUiLAorCSAgICAgICB6bm9kZV9jb252ZXJ0aWJsZShjbHVzdC0+aGlu
dC0+ZXh0X2Nvb3JkLmNvb3JkLm5vZGUpKTsKKworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHBs
dWdpbi0+dS5pdGVtLmYuc2NhbiAqLworaW50IHNjYW5fY3RhaWwoZmx1c2hfc2NhbiAqIHNjYW4p
Cit7CisJaW50IHJlc3VsdCA9IDA7CisJc3RydWN0IHBhZ2UgKnBhZ2U7CisJc3RydWN0IGlub2Rl
ICppbm9kZTsKKwlqbm9kZSAqbm9kZSA9IHNjYW4tPm5vZGU7CisKKwlhc3NlcnQoImVkd2FyZC0y
MjciLCBzY2FuLT5ub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTIyOCIsIGpub2RlX2lz
X2NsdXN0ZXJfcGFnZShzY2FuLT5ub2RlKSk7CisJYXNzZXJ0KCJlZHdhcmQtNjM5Iiwgem5vZGVf
aXNfd3JpdGVfbG9ja2VkKHNjYW4tPnBhcmVudF9sb2NrLm5vZGUpKTsKKworCXBhZ2UgPSBqbm9k
ZV9wYWdlKG5vZGUpOworCWlub2RlID0gcGFnZS0+bWFwcGluZy0+aG9zdDsKKworCWlmICghcmVp
c2VyNF9zY2FubmluZ19sZWZ0KHNjYW4pKQorCQlyZXR1cm4gcmVzdWx0OworCisJaWYgKCF6bm9k
ZV9jb252ZXJ0aWJsZShzY2FuLT5wYXJlbnRfbG9jay5ub2RlKSkgeworCQlpZiAoSkZfSVNTRVQo
c2Nhbi0+bm9kZSwgSk5PREVfRElSVFkpKQorCQkJem5vZGVfc2V0X2NvbnZlcnRpYmxlKHNjYW4t
PnBhcmVudF9sb2NrLm5vZGUpOworCQllbHNlIHsKKwkJCXdhcm5pbmcoImVkd2FyZC02ODEiLAor
CQkJCSJjbHVzdGVyIHBhZ2UgaXMgYWxyZWFkeSBwcm9jZXNzZWQiKTsKKwkJCXJldHVybiAtRUFH
QUlOOworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIElmIHRydWUsIHRoaXMgZnVu
Y3Rpb24gYXR0YWNoZXMgY2hpbGRyZW4gKi8KK3N0YXRpYyBpbnQgc2hvdWxkX2F0dGFjaF9jb252
ZXJ0X2lkYXRhKGZsdXNoX3Bvc190ICogcG9zKQoreworCWludCByZXN1bHQ7CisJYXNzZXJ0KCJl
ZHdhcmQtNDMxIiwgcG9zICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTQzMiIsIHBvcy0+Y2hp
bGQgPT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNjE5Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2Vk
KHBvcy0+Y29vcmQubm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTQ3MCIsCisJICAgICAgIGl0ZW1f
cGx1Z2luX2J5X2Nvb3JkKCZwb3MtPmNvb3JkKSA9PQorCSAgICAgICBpdGVtX3BsdWdpbl9ieV9p
ZChDVEFJTF9JRCkpOworCisJLyogY2hlY2sgZm9yIGxlZnRtb3N0IGNoaWxkICovCisJdXRtb3N0
X2NoaWxkX2N0YWlsKCZwb3MtPmNvb3JkLCBMRUZUX1NJREUsICZwb3MtPmNoaWxkKTsKKworCWlm
ICghcG9zLT5jaGlsZCkKKwkJcmV0dXJuIDA7CisJc3Bpbl9sb2NrX2pub2RlKHBvcy0+Y2hpbGQp
OworCXJlc3VsdCA9IChKRl9JU1NFVChwb3MtPmNoaWxkLCBKTk9ERV9ESVJUWSkgJiYKKwkJICBw
b3MtPmNoaWxkLT5hdG9tID09IFpKTk9ERShwb3MtPmNvb3JkLm5vZGUpLT5hdG9tKTsKKwlzcGlu
X3VubG9ja19qbm9kZShwb3MtPmNoaWxkKTsKKwlpZiAoIXJlc3VsdCAmJiBwb3MtPmNoaWxkKSB7
CisJCS8qIGV4aXN0aW5nIGNoaWxkIGlzbid0IHRvIGF0dGFjaCwgY2xlYXIgdXAgdGhpcyBvbmUg
Ki8KKwkJanB1dChwb3MtPmNoaWxkKTsKKwkJcG9zLT5jaGlsZCA9IE5VTEw7CisJfQorCXJldHVy
biByZXN1bHQ7Cit9CisKKy8qKgorICogQ29sbGVjdCBhbGwgbmVlZGVkIGluZm9ybWF0aW9uIGFi
b3V0IHRoZSBvYmplY3QgaGVyZSwKKyAqIGFzIGluLW1lbW9yeSBpbm9kZSBjYW4gYmUgZXZpY3Rl
ZCBmcm9tIG1lbW9yeSBiZWZvcmUKKyAqIGRpc2sgdXBkYXRlIGNvbXBsZXRpb24uCisgKi8KK3N0
YXRpYyBpbnQgaW5pdF9jb252ZXJ0X2RhdGFfY3RhaWwoc3RydWN0IGNvbnZlcnRfaXRlbV9pbmZv
ICogaWRhdGEsCisJCQkJICAgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlhc3NlcnQoImVkd2Fy
ZC04MTMiLCBpZGF0YSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC04MTQiLCBpbm9kZSAhPSBO
VUxMKTsKKworCWlkYXRhLT5jbHVzdGVyX3NoaWZ0ID0gaW5vZGVfY2x1c3Rlcl9zaGlmdChpbm9k
ZSk7CisJaWRhdGEtPmRfY3VyID0gRENfRklSU1RfSVRFTTsKKwlpZGF0YS0+ZF9uZXh0ID0gRENf
SU5WQUxJRF9TVEFURTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGFsbG9jX2l0ZW1f
Y29udmVydF9kYXRhKHN0cnVjdCBjb252ZXJ0X2luZm8gKiBzcSkKK3sKKwlhc3NlcnQoImVkd2Fy
ZC04MTYiLCBzcSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC04MTciLCBzcS0+aXRtID09IE5V
TEwpOworCisJc3EtPml0bSA9IGttYWxsb2Moc2l6ZW9mKCpzcS0+aXRtKSwgcmVpc2VyNF9jdHhf
Z2ZwX21hc2tfZ2V0KCkpOworCWlmIChzcS0+aXRtID09IE5VTEwpCisJCXJldHVybiBSRVRFUlIo
LUVOT01FTSk7CisJaW5pdF9saCgmc3EtPnJpZ2h0X2xvY2spOworCXNxLT5yaWdodF9sb2NrZWQg
PSAwOworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBmcmVlX2l0ZW1fY29udmVydF9kYXRh
KHN0cnVjdCBjb252ZXJ0X2luZm8gKiBzcSkKK3sKKwlhc3NlcnQoImVkd2FyZC04MTgiLCBzcSAh
PSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC04MTkiLCBzcS0+aXRtICE9IE5VTEwpOworCWFzc2Vy
dCgiZWR3YXJkLTgyMCIsIHNxLT5pcGx1ZyAhPSBOVUxMKTsKKworCWRvbmVfbGgoJnNxLT5yaWdo
dF9sb2NrKTsKKwlzcS0+cmlnaHRfbG9ja2VkID0gMDsKKwlrZnJlZShzcS0+aXRtKTsKKwlzcS0+
aXRtID0gTlVMTDsKKwlyZXR1cm47Cit9CisKK3N0YXRpYyBzdHJ1Y3QgY29udmVydF9pbmZvICph
bGxvY19jb252ZXJ0X2RhdGEodm9pZCkKK3sKKwlzdHJ1Y3QgY29udmVydF9pbmZvICppbmZvOwor
CisJaW5mbyA9IGttYWxsb2Moc2l6ZW9mKCppbmZvKSwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0
KCkpOworCWlmIChpbmZvICE9IE5VTEwpIHsKKwkJbWVtc2V0KGluZm8sIDAsIHNpemVvZigqaW5m
bykpOworCQljbHVzdGVyX2luaXRfd3JpdGUoJmluZm8tPmNsdXN0LCBOVUxMKTsKKwl9CisJcmV0
dXJuIGluZm87Cit9CisKK3N0YXRpYyB2b2lkIHJlc2V0X2NvbnZlcnRfZGF0YShzdHJ1Y3QgY29u
dmVydF9pbmZvICppbmZvKQoreworCWluZm8tPmNsdXN0LnRjLmhvbGUgPSAwOworfQorCit2b2lk
IGZyZWVfY29udmVydF9kYXRhKGZsdXNoX3Bvc190ICogcG9zKQoreworCXN0cnVjdCBjb252ZXJ0
X2luZm8gKnNxOworCisJYXNzZXJ0KCJlZHdhcmQtODIzIiwgcG9zICE9IE5VTEwpOworCWFzc2Vy
dCgiZWR3YXJkLTgyNCIsIHBvcy0+c3EgIT0gTlVMTCk7CisKKwlzcSA9IHBvcy0+c3E7CisJaWYg
KHNxLT5pdG0pCisJCWZyZWVfaXRlbV9jb252ZXJ0X2RhdGEoc3EpOworCXB1dF9jbHVzdGVyX2hh
bmRsZSgmc3EtPmNsdXN0KTsKKwlrZnJlZShwb3MtPnNxKTsKKwlwb3MtPnNxID0gTlVMTDsKKwly
ZXR1cm47Cit9CisKK3N0YXRpYyBpbnQgaW5pdF9pdGVtX2NvbnZlcnRfZGF0YShmbHVzaF9wb3Nf
dCAqIHBvcywgc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlzdHJ1Y3QgY29udmVydF9pbmZvICpz
cTsKKworCWFzc2VydCgiZWR3YXJkLTgyNSIsIHBvcyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2Fy
ZC04MjYiLCBwb3MtPnNxICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTgyNyIsIGl0ZW1fY29u
dmVydF9kYXRhKHBvcykgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtODI4IiwgaW5vZGUgIT0g
TlVMTCk7CisKKwlzcSA9IHBvcy0+c3E7CisJbWVtc2V0KHNxLT5pdG0sIDAsIHNpemVvZigqc3Et
Pml0bSkpOworCisJLyogaXBsdWctPmluaXRfY29udmVydF9kYXRhKCkgKi8KKwlyZXR1cm4gaW5p
dF9jb252ZXJ0X2RhdGFfY3RhaWwoc3EtPml0bSwgaW5vZGUpOworfQorCisvKiBjcmVhdGUgYW5k
IGF0dGFjaCBkaXNrIGNsdXN0ZXIgaW5mbyB1c2VkIGJ5ICdjb252ZXJ0JyBwaGFzZSBvZiB0aGUg
Zmx1c2gKKyAgIHNxdWFsbG9jKCkgKi8KK3N0YXRpYyBpbnQgYXR0YWNoX2NvbnZlcnRfaWRhdGEo
Zmx1c2hfcG9zX3QgKiBwb3MsIHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJaW50IHJldCA9IDA7
CisJc3RydWN0IGNvbnZlcnRfaXRlbV9pbmZvICppbmZvOworCXN0cnVjdCBjbHVzdGVyX2hhbmRs
ZSAqY2x1c3Q7CisJZmlsZV9wbHVnaW4gKmZwbHVnID0gaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUp
OworCisJYXNzZXJ0KCJlZHdhcmQtMjQ4IiwgcG9zICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTI0OSIsIHBvcy0+Y2hpbGQgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMjUxIiwgaW5vZGUg
IT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtNjgyIiwgY3J5cHRjb21wcmVzc19pbm9kZV9vayhp
bm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTI1MiIsCisJICAgICAgIGZwbHVnID09IGZpbGVfcGx1
Z2luX2J5X2lkKENSWVBUQ09NUFJFU1NfRklMRV9QTFVHSU5fSUQpKTsKKwlhc3NlcnQoImVkd2Fy
ZC00NzMiLAorCSAgICAgICBpdGVtX3BsdWdpbl9ieV9jb29yZCgmcG9zLT5jb29yZCkgPT0KKwkg
ICAgICAgaXRlbV9wbHVnaW5fYnlfaWQoQ1RBSUxfSUQpKTsKKworCWlmICghcG9zLT5zcSkgewor
CQlwb3MtPnNxID0gYWxsb2NfY29udmVydF9kYXRhKCk7CisJCWlmICghcG9zLT5zcSkKKwkJCXJl
dHVybiBSRVRFUlIoLUVOT01FTSk7CisJfQorCWVsc2UKKwkJcmVzZXRfY29udmVydF9kYXRhKHBv
cy0+c3EpOworCisJY2x1c3QgPSAmcG9zLT5zcS0+Y2x1c3Q7CisKKwlyZXQgPSBzZXRfY2x1c3Rl
cl9ieV9wYWdlKGNsdXN0LAorCQkJCSAgam5vZGVfcGFnZShwb3MtPmNoaWxkKSwKKwkJCQkgIE1B
WF9DTFVTVEVSX05SUEFHRVMpOworCWlmIChyZXQpCisJCWdvdG8gZXJyOworCisJYXNzZXJ0KCJl
ZHdhcmQtODI5IiwgcG9zLT5zcSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0yNTAiLCBpdGVt
X2NvbnZlcnRfZGF0YShwb3MpID09IE5VTEwpOworCisJcG9zLT5zcS0+aXBsdWcgPSBpdGVtX3Bs
dWdpbl9ieV9pZChDVEFJTF9JRCk7CisKKwlyZXQgPSBhbGxvY19pdGVtX2NvbnZlcnRfZGF0YShw
b3MtPnNxKTsKKwlpZiAocmV0KQorCQlnb3RvIGVycjsKKwlyZXQgPSBpbml0X2l0ZW1fY29udmVy
dF9kYXRhKHBvcywgaW5vZGUpOworCWlmIChyZXQpCisJCWdvdG8gZXJyOworCWluZm8gPSBpdGVt
X2NvbnZlcnRfZGF0YShwb3MpOworCisJcmV0ID0gY2hlY2tvdXRfbG9naWNhbF9jbHVzdGVyKGNs
dXN0LCBwb3MtPmNoaWxkLCBpbm9kZSk7CisJaWYgKHJldCkKKwkJZ290byBlcnI7CisKKwlyZWlz
ZXI0X2RlZmxhdGVfY2x1c3RlcihjbHVzdCwgaW5vZGUpOworCWluY19pdGVtX2NvbnZlcnRfY291
bnQocG9zKTsKKworCS8qIHByZXBhcmUgZmxvdyBmb3IgaW5zZXJ0aW9uICovCisJZnBsdWctPmZs
b3dfYnlfaW5vZGUoaW5vZGUsCisJCQkgICAgIChjb25zdCBjaGFyIF9fdXNlciAqKXRmbV9zdHJl
YW1fZGF0YSgmY2x1c3QtPnRjLAorCQkJCQkJCQkgT1VUUFVUX1NUUkVBTSksCisJCQkgICAgIDAg
Lyoga2VybmVsIHNwYWNlICovICwKKwkJCSAgICAgY2x1c3QtPnRjLmxlbiwKKwkJCSAgICAgY2x1
c3RfdG9fb2ZmKGNsdXN0LT5pbmRleCwgaW5vZGUpLAorCQkJICAgICBXUklURV9PUCwgJmluZm8t
PmZsb3cpOworCWlmIChjbHVzdC0+dGMuaG9sZSkKKwkJaW5mby0+Zmxvdy5sZW5ndGggPSAwOwor
CisJanB1dChwb3MtPmNoaWxkKTsKKwlyZXR1cm4gMDsKKyAgICAgIGVycjoKKwlqcHV0KHBvcy0+
Y2hpbGQpOworCWZyZWVfY29udmVydF9kYXRhKHBvcyk7CisJcmV0dXJuIHJldDsKK30KKworLyog
Y2xlYXIgdXAgZGlzayBjbHVzdGVyIGluZm8gKi8KK3N0YXRpYyB2b2lkIGRldGFjaF9jb252ZXJ0
X2lkYXRhKHN0cnVjdCBjb252ZXJ0X2luZm8gKiBzcSkKK3sKKwlzdHJ1Y3QgY29udmVydF9pdGVt
X2luZm8gKmluZm87CisKKwlhc3NlcnQoImVkd2FyZC0yNTMiLCBzcSAhPSBOVUxMKTsKKwlhc3Nl
cnQoImVkd2FyZC04NDAiLCBzcS0+aXRtICE9IE5VTEwpOworCisJaW5mbyA9IHNxLT5pdG07CisJ
YXNzZXJ0KCJlZHdhcmQtMTIxMiIsIGluZm8tPmZsb3cubGVuZ3RoID09IDApOworCisJZnJlZV9p
dGVtX2NvbnZlcnRfZGF0YShzcSk7CisJcmV0dXJuOworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5m
LnV0bW9zdF9jaGlsZCAqLworCisvKiBUaGlzIGZ1bmN0aW9uIHNldHMgbGVmdG1vc3QgY2hpbGQg
Zm9yIGEgZmlyc3QgY2x1c3RlciBpdGVtLAorICAgaWYgdGhlIGNoaWxkIGV4aXN0cywgYW5kIE5V
TEwgaW4gb3RoZXIgY2FzZXMuCisgICBOT1RFLUVEV0FSRDogRG8gbm90IGNhbGwgdGhpcyBmb3Ig
UklHSFRfU0lERSAqLworCitpbnQgdXRtb3N0X2NoaWxkX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiBj
b29yZCwgc2lkZW9mIHNpZGUsIGpub2RlICoqIGNoaWxkKQoreworCXJlaXNlcjRfa2V5IGtleTsK
KworCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KTsKKworCWFzc2VydCgiZWR3YXJkLTI1
NyIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTI1OCIsIGNoaWxkICE9IE5VTEwp
OworCWFzc2VydCgiZWR3YXJkLTI1OSIsIHNpZGUgPT0gTEVGVF9TSURFKTsKKwlhc3NlcnQoImVk
d2FyZC0yNjAiLAorCSAgICAgICBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCkgPT0gaXRlbV9w
bHVnaW5fYnlfaWQoQ1RBSUxfSUQpKTsKKworCWlmICghaXNfZGlza19jbHVzdGVyX2tleSgma2V5
LCBjb29yZCkpCisJCSpjaGlsZCA9IE5VTEw7CisJZWxzZQorCQkqY2hpbGQgPSBqbG9va3VwKGN1
cnJlbnRfdHJlZSwKKwkJCQkgZ2V0X2tleV9vYmplY3RpZChpdGVtX2tleV9ieV9jb29yZAorCQkJ
CQkJICAoY29vcmQsICZrZXkpKSwKKwkJCQkgb2ZmX3RvX3BnKGdldF9rZXlfb2Zmc2V0KCZrZXkp
KSk7CisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiBTZXQgc3RhdHVzIChkX25leHQpIG9mIHRoZSBm
aXJzdCBpdGVtIGF0IHRoZSByaWdodCBuZWlnaGJvcgorICoKKyAqIElmIHRoZSBjdXJyZW50IHBv
c2l0aW9uIGlzIHRoZSBsYXN0IGl0ZW0gaW4gdGhlIG5vZGUsIHRoZW4KKyAqIGxvb2sgYXQgaXRz
IGZpcnN0IGl0ZW0gYXQgdGhlIHJpZ2h0IG5laWdoYm9yIChza2lwIGVtcHR5IG5vZGVzKS4KKyAq
IE5vdGUsIHRoYXQgcmlnaHQgbmVpZ2hib3JzIG1heSBiZSBub3QgZGlydHkgYmVjYXVzZSBvZiBy
YWNlcy4KKyAqIElmIHNvLCBtYWtlIGl0IGRpcnR5IGFuZCBzZXQgY29udmVydGlibGUgZmxhZy4K
KyAqLworc3RhdGljIGludCBwcmVfY29udmVydF9jdGFpbChmbHVzaF9wb3NfdCAqIHBvcykKK3sK
KwlpbnQgcmV0ID0gMDsKKwlpbnQgc3RvcCA9IDA7CisJem5vZGUgKnNsaWRlcjsKKwlsb2NrX2hh
bmRsZSBzbGlkZXJfbGg7CisJbG9ja19oYW5kbGUgcmlnaHRfbGg7CisKKwlhc3NlcnQoImVkd2Fy
ZC0xMjMyIiwgIW5vZGVfaXNfZW1wdHkocG9zLT5jb29yZC5ub2RlKSk7CisJYXNzZXJ0KCJlZHdh
cmQtMTAxNCIsCisJICAgICAgIHBvcy0+Y29vcmQuaXRlbV9wb3MgPCBjb29yZF9udW1faXRlbXMo
JnBvcy0+Y29vcmQpKTsKKwlhc3NlcnQoImVkd2FyZC0xMDE1IiwgY29udmVydF9kYXRhX2F0dGFj
aGVkKHBvcykpOworCWFzc2VydCgiZWR3YXJkLTE2MTEiLAorCSAgICAgICBpdGVtX2NvbnZlcnRf
ZGF0YShwb3MpLT5kX2N1ciAhPSBEQ19JTlZBTElEX1NUQVRFKTsKKwlhc3NlcnQoImVkd2FyZC0x
MDE3IiwKKwkgICAgICAgaXRlbV9jb252ZXJ0X2RhdGEocG9zKS0+ZF9uZXh0ID09IERDX0lOVkFM
SURfU1RBVEUpOworCisJLyoKKwkgKiBJbiB0aGUgZm9sbG93aW5nIHR3byBjYXNlcyB3ZSBkb24n
dCBuZWVkCisJICogdG8gbG9vayBhdCByaWdodCBuZWlnaGJvcgorCSAqLworCWlmIChpdGVtX2Nv
bnZlcnRfZGF0YShwb3MpLT5kX2N1ciA9PSBEQ19BRlRFUl9DTFVTVEVSKSB7CisJCS8qCisJCSAq
IGNsdXN0ZXIgaXMgb3Zlciwgc28gdGhlIGZpcnN0IGl0ZW0gb2YgdGhlIHJpZ2h0CisJCSAqIG5l
aWdoYm9yIGRvZXNuJ3QgYmVsb25nIHRvIHRoaXMgY2x1c3RlcgorCQkgKi8KKwkJcmV0dXJuIDA7
CisJfQorCWlmIChwb3MtPmNvb3JkLml0ZW1fcG9zIDwgY29vcmRfbnVtX2l0ZW1zKCZwb3MtPmNv
b3JkKSAtIDEpIHsKKwkJLyoKKwkJICogY3VycmVudCBwb3NpdGlvbiBpcyBub3QgdGhlIGxhc3Qg
aXRlbSBpbiB0aGUgbm9kZSwKKwkJICogc28gdGhlIGZpcnN0IGl0ZW0gb2YgdGhlIHJpZ2h0IG5l
aWdoYm9yIGRvZXNuJ3QKKwkJICogYmVsb25nIHRvIHRoaXMgY2x1c3RlcgorCQkgKi8KKwkJcmV0
dXJuIDA7CisJfQorCS8qCisJICogTG9vayBhdCByaWdodCBuZWlnaGJvci4KKwkgKiBOb3RlIHRo
YXQgY29uY3VycmVudCB0cnVuY2F0ZSBpcyBub3QgYSBwcm9ibGVtCisJICogc2luY2Ugd2UgaGF2
ZSBsb2NrZWQgdGhlIGJlZ2lubmluZyBvZiB0aGUgY2x1c3Rlci4KKwkgKi8KKwlzbGlkZXIgPSBw
b3MtPmNvb3JkLm5vZGU7CisJaW5pdF9saCgmc2xpZGVyX2xoKTsKKwlpbml0X2xoKCZyaWdodF9s
aCk7CisKKwl3aGlsZSAoIXN0b3ApIHsKKwkJY29vcmRfdCBjb29yZDsKKworCQlyZXQgPSByZWlz
ZXI0X2dldF9yaWdodF9uZWlnaGJvcigmcmlnaHRfbGgsCisJCQkJCQkgc2xpZGVyLAorCQkJCQkJ
IFpOT0RFX1dSSVRFX0xPQ0ssCisJCQkJCQkgR05fQ0FOX1VTRV9VUFBFUl9MRVZFTFMpOworCQlp
ZiAocmV0KQorCQkJYnJlYWs7CisJCXNsaWRlciA9IHJpZ2h0X2xoLm5vZGU7CisJCXJldCA9IHps
b2FkKHNsaWRlcik7CisJCWlmIChyZXQpCisJCQlicmVhazsKKwkJY29vcmRfaW5pdF9iZWZvcmVf
Zmlyc3RfaXRlbSgmY29vcmQsIHNsaWRlcik7CisKKwkJaWYgKG5vZGVfaXNfZW1wdHkoc2xpZGVy
KSkgeworCQkJd2FybmluZygiZWR3YXJkLTE2NDEiLCAiRm91bmQgZW1wdHkgcmlnaHQgbmVpZ2hi
b3IiKTsKKwkJCXpub2RlX3NldF9jb252ZXJ0aWJsZShzbGlkZXIpOworCQkJLyoKKwkJCSAqIHNr
aXAgdGhpcyBub2RlLAorCQkJICogZ28gcmlnaHR3YXJkCisJCQkgKi8KKwkJCXN0b3AgPSAwOwor
CQl9IGVsc2UgaWYgKHNhbWVfZGlza19jbHVzdGVyKCZwb3MtPmNvb3JkLCAmY29vcmQpKSB7CisK
KwkJCWl0ZW1fY29udmVydF9kYXRhKHBvcyktPmRfbmV4dCA9IERDX0NIQUlORURfSVRFTTsKKwor
CQkJaWYgKCF6bm9kZV9jb252ZXJ0aWJsZShzbGlkZXIpKSB7CisJCQkJLyoKKwkJCQkgICB3YXJu
aW5nKCJlZHdhcmQtMTI3MiIsCisJCQkJICAgIm5leHQgc2x1bSBpdGVtIG1lcmdlYWJsZSwgIgor
CQkJCSAgICJidXQgem5vZGUgJXAgaXNuJ3QgY29udmVydGlibGVcbiIsCisJCQkJICAgbGgubm9k
ZSk7CisJCQkJICovCisJCQkJem5vZGVfc2V0X2NvbnZlcnRpYmxlKHNsaWRlcik7CisJCQl9CisJ
CQlzdG9wID0gMTsKKwkJCWNvbnZlcnRfZGF0YShwb3MpLT5yaWdodF9sb2NrZWQgPSAxOworCQl9
IGVsc2UgeworCQkJaXRlbV9jb252ZXJ0X2RhdGEocG9zKS0+ZF9uZXh0ID0gRENfQUZURVJfQ0xV
U1RFUjsKKwkJCXN0b3AgPSAxOworCQkJY29udmVydF9kYXRhKHBvcyktPnJpZ2h0X2xvY2tlZCA9
IDE7CisJCX0KKwkJenJlbHNlKHNsaWRlcik7CisJCWRvbmVfbGgoJnNsaWRlcl9saCk7CisJCW1v
dmVfbGgoJnNsaWRlcl9saCwgJnJpZ2h0X2xoKTsKKwl9CisJaWYgKGNvbnZlcnRfZGF0YShwb3Mp
LT5yaWdodF9sb2NrZWQpCisJCS8qCisJCSAqIFN0b3JlIGxvY2tlZCByaWdodCBuZWlnaGJvciBp
bgorCQkgKiB0aGUgY29udmVyc2lvbiBpbmZvLiBPdGhlcndpc2UsCisJCSAqIHdlIHdvbid0IGJl
IGFibGUgdG8gYWNjZXNzIGl0LAorCQkgKiBpZiB0aGUgY3VycmVudCBub2RlIGdldHMgZGVsZXRl
ZAorCQkgKiBkdXJpbmcgY29udmVyc2lvbgorCQkgKi8KKwkJbW92ZV9saCgmY29udmVydF9kYXRh
KHBvcyktPnJpZ2h0X2xvY2ssICZzbGlkZXJfbGgpOworCWRvbmVfbGgoJnNsaWRlcl9saCk7CisJ
ZG9uZV9saCgmcmlnaHRfbGgpOworCisJaWYgKHJldCA9PSAtRV9OT19ORUlHSEJPUikgeworCQlp
dGVtX2NvbnZlcnRfZGF0YShwb3MpLT5kX25leHQgPSBEQ19BRlRFUl9DTFVTVEVSOworCQlyZXQg
PSAwOworCX0KKwlhc3NlcnQoImVkd2FyZC0xNjEwIiwKKwkgICAgICAgZXJnbyhyZXQgIT0gMCwK
KwkJICAgIGl0ZW1fY29udmVydF9kYXRhKHBvcyktPmRfbmV4dCA9PSBEQ19JTlZBTElEX1NUQVRF
KSk7CisJcmV0dXJuIHJldDsKK30KKworLyoKKyAqIGRvIHNvbWUgcG9zdC1jb252ZXJzaW9uIGFj
dGlvbnM7CisgKiBkZXRhY2ggY29udmVyc2lvbiBkYXRhIGlmIHRoZXJlIGlzIG5vdGhpbmcgdG8g
Y29udmVydCBhbnltb3JlCisgKi8KK3N0YXRpYyB2b2lkIHBvc3RfY29udmVydF9jdGFpbChmbHVz
aF9wb3NfdCAqIHBvcywKKwkJCSAgICAgICBjdGFpbF9jb252ZXJ0X21vZGVfdCBtb2RlLCBpbnQg
b2xkX25yX2l0ZW1zKQoreworCXN3aXRjaCAobW9kZSkgeworCWNhc2UgQ1RBSUxfQ1VUX0lURU06
CisJCWFzc2VydCgiZWR3YXJkLTEyMTQiLCBpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT5mbG93Lmxl
bmd0aCA9PSAwKTsKKwkJYXNzZXJ0KCJlZHdhcmQtMTIxNSIsCisJCSAgICAgICBjb29yZF9udW1f
aXRlbXMoJnBvcy0+Y29vcmQpID09IG9sZF9ucl9pdGVtcyB8fAorCQkgICAgICAgY29vcmRfbnVt
X2l0ZW1zKCZwb3MtPmNvb3JkKSA9PSBvbGRfbnJfaXRlbXMgLSAxKTsKKworCQlpZiAoaXRlbV9j
b252ZXJ0X2RhdGEocG9zKS0+ZF9uZXh0ID09IERDX0NIQUlORURfSVRFTSkKKwkJCS8qCisJCQkg
KiB0aGUgbmV4dCBpdGVtIGJlbG9uZ3MgdG8gdGhpcyBjbHVzdGVyLAorCQkJICogYW5kIHNob3Vs
ZCBiZSBhbHNvIGtpbGxlZAorCQkJICovCisJCQlicmVhazsKKwkJaWYgKGNvb3JkX251bV9pdGVt
cygmcG9zLT5jb29yZCkgIT0gb2xkX25yX2l0ZW1zKSB7CisJCQkvKgorCQkJICogdGhlIGxhdGVz
dCBpdGVtIGluIHRoZQorCQkJICogY2x1c3RlciBoYXMgYmVlbiBraWxsZWQsCisJCQkgKi8KKwkJ
CWRldGFjaF9jb252ZXJ0X2lkYXRhKHBvcy0+c3EpOworCQkJaWYgKCFub2RlX2lzX2VtcHR5KHBv
cy0+Y29vcmQubm9kZSkpCisJCQkJLyoKKwkJCQkgKiBtYWtlIHN1cmUgdGhlIG5leHQgaXRlbSB3
aWxsIGJlIHNjYW5uZWQKKwkJCQkgKi8KKwkJCQljb29yZF9pbml0X2JlZm9yZV9pdGVtKCZwb3Mt
PmNvb3JkKTsKKwkJCWJyZWFrOworCQl9CisJCS8qIGZhbGwgdGhyb3VnaCAqLworCWNhc2UgQ1RB
SUxfQVBQRU5EX0lURU06CisJCS8qCisJCSAqIGluIHRoZSBhcHBlbmQgbW9kZSB0aGUgd2hvbGUg
ZmxvdyBoYXMgYmVlbiBpbnNlcnRlZAorCQkgKiAoc2VlIENPUF9JTlNFUlRfRkxPVyBwcmltaXRp
dmUpCisJCSAqLworCQlhc3NlcnQoImVkd2FyZC00MzQiLCBpdGVtX2NvbnZlcnRfZGF0YShwb3Mp
LT5mbG93Lmxlbmd0aCA9PSAwKTsKKwkJZGV0YWNoX2NvbnZlcnRfaWRhdGEocG9zLT5zcSk7CisJ
CWJyZWFrOworCWNhc2UgQ1RBSUxfT1ZFUldSSVRFX0lURU06CisJCWlmIChjb29yZF9pc191bnBy
ZXBwZWRfY3RhaWwoJnBvcy0+Y29vcmQpKSB7CisJCQkvKgorCQkJICogdGhlIGZpcnN0ICh1bnBy
ZXBwZWQpIGN0YWlsIGhhcyBiZWVuIG92ZXJ3cml0dGVuOworCQkJICogY29udmVydCBpdCB0byB0
aGUgcHJlcHBlZCBvbmUKKwkJCSAqLworCQkJYXNzZXJ0KCJlZHdhcmQtMTI1OSIsCisJCQkgICAg
ICAgY2x1c3Rlcl9zaGlmdF9vayhpdGVtX2NvbnZlcnRfZGF0YShwb3MpLT4KKwkJCQkJCWNsdXN0
ZXJfc2hpZnQpKTsKKwkJCXB1dF91bmFsaWduZWQoKGQ4KWl0ZW1fY29udmVydF9kYXRhKHBvcykt
PmNsdXN0ZXJfc2hpZnQsCisJCQkJICAgICAgJmN0YWlsX2Zvcm1hdHRlZF9hdCgmcG9zLT5jb29y
ZCktPgorCQkJCSAgICAgIGNsdXN0ZXJfc2hpZnQpOworCQl9CisJCWJyZWFrOworCWRlZmF1bHQ6
CisJCWltcG9zc2libGUoImVkd2FyZC0xNjA5IiwgIkJhZCBjdGFpbCBjb252ZXJzaW9uIG1vZGUi
KTsKKwl9Cit9CisKK3N0YXRpYyBpbnQgYXNzaWduX2NvbnZlcnNpb25fbW9kZShmbHVzaF9wb3Nf
dCAqIHBvcywgY3RhaWxfY29udmVydF9tb2RlX3QgKm1vZGUpCit7CisJaW50IHJldCA9IDA7CisK
KwkqbW9kZSA9IENUQUlMX0lOVkFMX0NPTlZFUlRfTU9ERTsKKworCWlmICghY29udmVydF9kYXRh
X2F0dGFjaGVkKHBvcykpIHsKKwkJaWYgKHNob3VsZF9hdHRhY2hfY29udmVydF9pZGF0YShwb3Mp
KSB7CisJCQlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCQkJZ2ZwX3Qgb2xkX21hc2sgPSBnZXRfY3Vy
cmVudF9jb250ZXh0KCktPmdmcF9tYXNrOworCisJCQlhc3NlcnQoImVkd2FyZC0yNjQiLCBwb3Mt
PmNoaWxkICE9IE5VTEwpOworCQkJYXNzZXJ0KCJlZHdhcmQtMjY1Iiwgam5vZGVfcGFnZShwb3Mt
PmNoaWxkKSAhPSBOVUxMKTsKKwkJCWFzc2VydCgiZWR3YXJkLTI2NiIsCisJCQkgICAgICAgam5v
ZGVfcGFnZShwb3MtPmNoaWxkKS0+bWFwcGluZyAhPSBOVUxMKTsKKworCQkJaW5vZGUgPSBqbm9k
ZV9wYWdlKHBvcy0+Y2hpbGQpLT5tYXBwaW5nLT5ob3N0OworCisJCQlhc3NlcnQoImVkd2FyZC0y
NjciLCBpbm9kZSAhPSBOVUxMKTsKKwkJCS8qCisJCQkgKiBhdHRhY2ggbmV3IGNvbnZlcnQgaXRl
bSBpbmZvCisJCQkgKi8KKwkJCWdldF9jdXJyZW50X2NvbnRleHQoKS0+Z2ZwX21hc2sgfD0gX19H
RlBfTk9GQUlMOworCQkJcmV0ID0gYXR0YWNoX2NvbnZlcnRfaWRhdGEocG9zLCBpbm9kZSk7CisJ
CQlnZXRfY3VycmVudF9jb250ZXh0KCktPmdmcF9tYXNrID0gb2xkX21hc2s7CisJCQlwb3MtPmNo
aWxkID0gTlVMTDsKKwkJCWlmIChyZXQgPT0gLUVfUkVQRUFUKSB7CisJCQkJLyoKKwkJCQkgKiBq
bm9kZSBiZWNhbWUgY2xlYW4sIG9yIHRoZXJlIGlzIG5vIGRpcnR5CisJCQkJICogcGFnZXMgKG5v
dGhpbmcgdG8gdXBkYXRlIGluIGRpc2sgY2x1c3RlcikKKwkJCQkgKi8KKwkJCQl3YXJuaW5nKCJl
ZHdhcmQtMTAyMSIsCisJCQkJCSJjb252ZXJ0X2N0YWlsOiBub3RoaW5nIHRvIGF0dGFjaCIpOwor
CQkJCXJldCA9IDA7CisJCQkJZ290byBkb250X2NvbnZlcnQ7CisJCQl9CisJCQlpZiAocmV0KQor
CQkJCWdvdG8gZG9udF9jb252ZXJ0OworCisJCQlpZiAocG9zLT5zcS0+Y2x1c3QudGMuaG9sZSkg
eworCQkJCWFzc2VydCgiZWR3YXJkLTE2MzQiLAorCQkJCSAgICAgIGl0ZW1fY29udmVydF9kYXRh
KHBvcyktPmZsb3cubGVuZ3RoID09IDApOworCQkJCS8qCisJCQkJICogbmV3IGNvbnRlbnQgaXMg
ZmlsbGVkIHdpdGggemVyb3MgLQorCQkJCSAqIHdlIHB1bmNoIGEgaG9sZSB1c2luZyBjdXQgKG5v
dCBraWxsKQorCQkJCSAqIHByaW1pdGl2ZSwgc28gYXR0YWNoZWQgcGFnZXMgd29uJ3QKKwkJCQkg
KiBiZSB0cnVuY2F0ZWQKKwkJCQkgKi8KKwkJCQkqbW9kZSA9IENUQUlMX0NVVF9JVEVNOworCQkJ
fQorCQkJZWxzZQorCQkJCS8qCisJCQkJICogdGhpcyBpcyB0aGUgZmlyc3QgY3RhaWwgaW4gdGhl
IGNsdXN0ZXIsCisJCQkJICogc28gaXQgKG1heSBiZSBvbmx5IGl0cyBoZWFkKSBzaG91bGQgYmUK
KwkJCQkgKiBvdmVyd3JpdHRlbgorCQkJCSAqLworCQkJCSptb2RlID0gQ1RBSUxfT1ZFUldSSVRF
X0lURU07CisJCX0gZWxzZQorCQkJLyoKKwkJCSAqIG5vbi1jb252ZXJ0aWJsZSBpdGVtCisJCQkg
Ki8KKwkJCWdvdG8gZG9udF9jb252ZXJ0OworCX0gZWxzZSB7CisJCS8qCisJCSAqIHVzZSBvbGQg
Y29udmVydCBpbmZvCisJCSAqLworCQlzdHJ1Y3QgY29udmVydF9pdGVtX2luZm8gKmlkYXRhOwor
CQlpZGF0YSA9IGl0ZW1fY29udmVydF9kYXRhKHBvcyk7CisKKwkJc3dpdGNoIChpZGF0YS0+ZF9j
dXIpIHsKKwkJY2FzZSBEQ19GSVJTVF9JVEVNOgorCQljYXNlIERDX0NIQUlORURfSVRFTToKKwkJ
CWlmIChpZGF0YS0+Zmxvdy5sZW5ndGgpCisJCQkJKm1vZGUgPSBDVEFJTF9PVkVSV1JJVEVfSVRF
TTsKKwkJCWVsc2UKKwkJCQkqbW9kZSA9IENUQUlMX0NVVF9JVEVNOworCQkJYnJlYWs7CisJCWNh
c2UgRENfQUZURVJfQ0xVU1RFUjoKKwkJCWlmIChpZGF0YS0+Zmxvdy5sZW5ndGgpCisJCQkJKm1v
ZGUgPSBDVEFJTF9BUFBFTkRfSVRFTTsKKwkJCWVsc2UgeworCQkJCS8qCisJCQkJICogbm90aGlu
ZyB0byB1cGRhdGUgYW55bW9yZQorCQkJCSAqLworCQkJCWRldGFjaF9jb252ZXJ0X2lkYXRhKHBv
cy0+c3EpOworCQkJCWdvdG8gZG9udF9jb252ZXJ0OworCQkJfQorCQkJYnJlYWs7CisJCWRlZmF1
bHQ6CisJCQlpbXBvc3NpYmxlKCJlZHdhcmQtMTAxOCIsCisJCQkJICAgIndyb25nIGN1cnJlbnQg
aXRlbSBzdGF0ZSIpOworCQkJcmV0ID0gUkVURVJSKC1FSU8pOworCQkJZ290byBkb250X2NvbnZl
cnQ7CisJCX0KKwl9CisJLyoKKwkgKiBvaywgY3RhaWwgd2lsbCBiZSBjb252ZXJ0ZWQKKwkgKi8K
Kwlhc3NlcnQoImVkd2FyZC00MzMiLCBjb252ZXJ0X2RhdGFfYXR0YWNoZWQocG9zKSk7CisJYXNz
ZXJ0KCJlZHdhcmQtMTAyMiIsCisJICAgICAgIHBvcy0+Y29vcmQuaXRlbV9wb3MgPCBjb29yZF9u
dW1faXRlbXMoJnBvcy0+Y29vcmQpKTsKKwlyZXR1cm4gMDsKKyBkb250X2NvbnZlcnQ6CisJcmV0
dXJuIHJldDsKK30KKworLyoKKyAqIHBlcmZvcm0gYW4gb3BlcmF0aW9uIG9uIHRoZSBjdGFpbCBp
dGVtIGluCisgKiBhY2NvcmRhbmNlIHdpdGggYXNzaWduZWQgY29udmVyc2lvbiBAbW9kZQorICov
CitzdGF0aWMgaW50IGRvX2NvbnZlcnRfY3RhaWwoZmx1c2hfcG9zX3QgKiBwb3MsIGN0YWlsX2Nv
bnZlcnRfbW9kZV90IG1vZGUpCit7CisJaW50IHJlc3VsdCA9IDA7CisJc3RydWN0IGNvbnZlcnRf
aXRlbV9pbmZvICogaW5mbzsKKworCWFzc2VydCgiZWR3YXJkLTQ2OCIsIHBvcyAhPSBOVUxMKTsK
Kwlhc3NlcnQoImVkd2FyZC00NjkiLCBwb3MtPnNxICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTg0NSIsIGl0ZW1fY29udmVydF9kYXRhKHBvcykgIT0gTlVMTCk7CisKKwlpbmZvID0gaXRlbV9j
b252ZXJ0X2RhdGEocG9zKTsKKwlhc3NlcnQoImVkd2FyZC02NzkiLCBpbmZvLT5mbG93LmRhdGEg
IT0gTlVMTCk7CisKKwlzd2l0Y2ggKG1vZGUpIHsKKwljYXNlIENUQUlMX0FQUEVORF9JVEVNOgor
CQlhc3NlcnQoImVkd2FyZC0xMjI5IiwgaW5mby0+Zmxvdy5sZW5ndGggIT0gMCk7CisJCWFzc2Vy
dCgiZWR3YXJkLTEyNTYiLAorCQkgICAgICAgY2x1c3Rlcl9zaGlmdF9vayhjbHVzdGVyX3NoaWZ0
X2J5X2Nvb3JkKCZwb3MtPmNvb3JkKSkpOworCQkvKgorCQkgKiBpbnNlcnQgZmxvdyB3aXRob3V0
IGJhbGFuY2luZworCQkgKiAoc2VlIGNvbW1lbnRzIHRvIGNvbnZlcnRfbm9kZSgpKQorCQkgKi8K
KwkJcmVzdWx0ID0gaW5zZXJ0X2NyeXB0Y29tcHJlc3NfZmxvd19pbl9wbGFjZSgmcG9zLT5jb29y
ZCwKKwkJCQkJCQkgICAmcG9zLT5sb2NrLAorCQkJCQkJCSAgICZpbmZvLT5mbG93LAorCQkJCQkJ
CSAgIGluZm8tPmNsdXN0ZXJfc2hpZnQpOworCQlicmVhazsKKwljYXNlIENUQUlMX09WRVJXUklU
RV9JVEVNOgorCQlhc3NlcnQoImVkd2FyZC0xMjMwIiwgaW5mby0+Zmxvdy5sZW5ndGggIT0gMCk7
CisJCW92ZXJ3cml0ZV9jdGFpbCgmcG9zLT5jb29yZCwgJmluZm8tPmZsb3cpOworCQlpZiAoaW5m
by0+Zmxvdy5sZW5ndGggIT0gMCkKKwkJCWJyZWFrOworCQkvKiBmYWxsIHRocm91Z2ggKi8KKwkJ
LyogY3V0IHRoZSByZXN0IG9mIGl0ZW0gKGlmIGFueSkgKi8KKwljYXNlIENUQUlMX0NVVF9JVEVN
OgorCQlhc3NlcnQoImVkd2FyZC0xMjMxIiwgaW5mby0+Zmxvdy5sZW5ndGggPT0gMCk7CisJCXJl
c3VsdCA9IGN1dF9jdGFpbCgmcG9zLT5jb29yZCk7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJl
c3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJaW1wb3NzaWJsZSgiZWR3YXJkLTI0NCIsICJiYWQgY3Rh
aWwgY29udmVyc2lvbiBtb2RlIik7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qCisgKiBw
bHVnaW4tPnUuaXRlbS5mLmNvbnZlcnQKKyAqCisgKiBDb252ZXJ0IGN0YWlsIGl0ZW1zIGF0IGZs
dXNoIHRpbWUKKyAqLworaW50IGNvbnZlcnRfY3RhaWwoZmx1c2hfcG9zX3QgKiBwb3MpCit7CisJ
aW50IHJldDsKKwlpbnQgb2xkX25yX2l0ZW1zOworCWN0YWlsX2NvbnZlcnRfbW9kZV90IG1vZGU7
CisKKwlhc3NlcnQoImVkd2FyZC0xMDIwIiwgcG9zICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJk
LTEyMTMiLCBjb29yZF9udW1faXRlbXMoJnBvcy0+Y29vcmQpICE9IDApOworCWFzc2VydCgiZWR3
YXJkLTEyNTciLCBpdGVtX2lkX2J5X2Nvb3JkKCZwb3MtPmNvb3JkKSA9PSBDVEFJTF9JRCk7CisJ
YXNzZXJ0KCJlZHdhcmQtMTI1OCIsIGN0YWlsX29rKCZwb3MtPmNvb3JkKSk7CisJYXNzZXJ0KCJl
ZHdhcmQtMjYxIiwgcG9zLT5jb29yZC5ub2RlICE9IE5VTEwpOworCisJb2xkX25yX2l0ZW1zID0g
Y29vcmRfbnVtX2l0ZW1zKCZwb3MtPmNvb3JkKTsKKwkvKgorCSAqIGRldGFjaCBvbGQgY29udmVy
c2lvbiBkYXRhIGFuZAorCSAqIGF0dGFjaCBhIG5ldyBvbmUsIGlmIG5lZWRlZAorCSAqLworCXJl
dCA9IGFzc2lnbl9jb252ZXJzaW9uX21vZGUocG9zLCAmbW9kZSk7CisJaWYgKHJldCB8fCBtb2Rl
ID09IENUQUlMX0lOVkFMX0NPTlZFUlRfTU9ERSkgeworCQlhc3NlcnQoImVkd2FyZC0xNjMzIiwg
IWNvbnZlcnRfZGF0YV9hdHRhY2hlZChwb3MpKTsKKwkJcmV0dXJuIHJldDsKKwl9CisJLyoKKwkg
KiBmaW5kIG91dCB0aGUgc3RhdHVzIG9mIHRoZSByaWdodCBuZWlnaGJvcgorCSAqLworCXJldCA9
IHByZV9jb252ZXJ0X2N0YWlsKHBvcyk7CisJaWYgKHJldCkgeworCQlkZXRhY2hfY29udmVydF9p
ZGF0YShwb3MtPnNxKTsKKwkJcmV0dXJuIHJldDsKKwl9CisJcmV0ID0gZG9fY29udmVydF9jdGFp
bChwb3MsIG1vZGUpOworCWlmIChyZXQpIHsKKwkJZGV0YWNoX2NvbnZlcnRfaWRhdGEocG9zLT5z
cSk7CisJCXJldHVybiByZXQ7CisJfQorCS8qCisJICogZGV0YWNoIG9sZCBjb252ZXJzaW9uIGRh
dGEgaWYgbmVlZGVkCisJICovCisJcG9zdF9jb252ZXJ0X2N0YWlsKHBvcywgbW9kZSwgb2xkX25y
X2l0ZW1zKTsKKwlyZXR1cm4gMDsKK30KKworLyoKKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMt
aW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMt
b2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoK
KyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNl
cjQvcGx1Z2luL2l0ZW0vY3RhaWwuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRl
bS9jdGFpbC5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2N0
YWlsLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4x
Ny9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2N0YWlsLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40Njcy
MjIyODYgKzAxMDAKQEAgLTAsMCArMSwxMDIgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAy
MDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUg
Ki8KKworLyogQ3RhaWwgaXRlbXMgYXJlIGZyYWdtZW50cyAob3IgYm9kaWVzKSBvZiBzcGVjaWFs
IHRpcGUgdG8gcHJvdmlkZQorICAgb3B0aW1hbCBzdG9yYWdlIG9mIGVuY3J5cHRlZCBhbmQob3Ip
IGNvbXByZXNzZWQgZmlsZXMuICovCisKKworI2lmICFkZWZpbmVkKCBfX0ZTX1JFSVNFUjRfQ1RB
SUxfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0X0NUQUlMX0hfXworCisvKiBEaXNrIGZvcm1h
dCBvZiBjdGFpbCBpdGVtICovCit0eXBlZGVmIHN0cnVjdCBjdGFpbF9pdGVtX2Zvcm1hdCB7CisJ
LyogcGFja2VkIHNoaWZ0OworCSAgIGlmIGl0cyB2YWx1ZSBpcyBkaWZmZXJlbnQgZnJvbSBVQ1RB
SUxfU0hJRlQgKHNlZSBiZWxvdyksIHRoZW4KKwkgICBzaXplIG9mIGRpc2sgY2x1c3RlciBpcyBj
YWxjdWxhdGVkIGFzICgxIDw8IGNsdXN0ZXJfc2hpZnQpICovCisJZDggY2x1c3Rlcl9zaGlmdDsK
KwkvKiBjdGFpbCBib2R5ICovCisJZDggYm9keVswXTsKK30gX19hdHRyaWJ1dGVfXyAoKHBhY2tl
ZCkpIGN0YWlsX2l0ZW1fZm9ybWF0OworCisvKiAiVW5wcmVwcGVkIiBkaXNrIGNsdXN0ZXIgaXMg
cmVwcmVzZW50ZWQgYnkgYSBzaW5nbGUgY3RhaWwgaXRlbQorICAgd2l0aCB0aGUgZm9sbG93aW5n
ICJtYWdpYyIgYXR0cmlidXRlczogKi8KKy8qICJtYWdpYyIgY2x1c3Rlcl9zaGlmdCAqLworI2Rl
ZmluZSBVQ1RBSUxfU0hJRlQgMHhmZgorLyogSG93IG1hbnkgdW5pdHMgdW5wcmVwcGVkIGN0YWls
IGl0ZW0gaGFzICovCisjZGVmaW5lIFVDVEFJTF9OUl9VTklUUyAxCisKKy8qIFRoZSBmb2xsb3dp
bmcgaXMgYSBzZXQgb2YgdmFyaW91cyBpdGVtIHN0YXRlcyBpbiBhIGRpc2sgY2x1c3Rlci4KKyAg
IERpc2sgY2x1c3RlciBpcyBhIHNldCBvZiBpdGVtcyB3aG9zZSBrZXlzIGJlbG9uZyB0byB0aGUg
aW50ZXJ2YWwKKyAgIFtkY19rZXkgLCBkY19rZXkgKyBkaXNrX2NsdXN0ZXJfc2l6ZSAtIDFdICov
Cit0eXBlZGVmIGVudW0geworCURDX0lOVkFMSURfU1RBVEUgPSAwLAorCURDX0ZJUlNUX0lURU0g
PSAxLAorCURDX0NIQUlORURfSVRFTSA9IDIsCisJRENfQUZURVJfQ0xVU1RFUiA9IDMKK30gZGNf
aXRlbV9zdGF0OworCisvKiBjdGFpbC1zcGVjaWZpYyBleHRlbnNpb24uCisgICBJbiBwYXJ0aWN1
bGFyIHRoaXMgZGVzY3JpYmVzIHBhcmFtZXRlcnMgb2YgZGlzayBjbHVzdGVyIGFuIGl0ZW0gYmVs
b25ncyB0byAqLworc3RydWN0IGN0YWlsX2Nvb3JkX2V4dGVuc2lvbiB7CisJaW50IHNoaWZ0OyAv
KiB0aGlzIGNvbnRhaW5zIGNsdXN0ZXJfc2hpZnQgZXh0cmFjdGVkIGZyb20KKwkJICAgICAgY3Rh
aWxfaXRlbV9mb3JtYXQgKGFib3ZlKSwgb3IgVUNUQUlMX1NISUZUCisJCSAgICAgICh0aGUgbGFz
dCBvbmUgaXMgdGhlICJtYWdpYyIgb2YgdW5wcmVwcGVkIGRpc2sgY2x1c3RlcnMpKi8KKwlpbnQg
ZHNpemU7IC8qIHNpemUgb2YgYSBwcmVwcGVkIGRpc2sgY2x1c3RlciAqLworCWludCBuY291bnQ7
IC8qIGNvdW50IG9mIG5vZGVzIG9jY3VwaWVkIGJ5IGEgZGlzayBjbHVzdGVyICovCit9OworCitz
dHJ1Y3QgY3V0X2xpc3Q7CisKKy8qIHBsdWdpbi0+aXRlbS5iLiogKi8KK2ludCBjYW5fY29udGFp
bl9rZXlfY3RhaWwoY29uc3QgY29vcmRfdCAqLCBjb25zdCByZWlzZXI0X2tleSAqLAorCQkJICBj
b25zdCByZWlzZXI0X2l0ZW1fZGF0YSAqKTsKK2ludCBtZXJnZWFibGVfY3RhaWwoY29uc3QgY29v
cmRfdCAqIHAxLCBjb25zdCBjb29yZF90ICogcDIpOworcG9zX2luX25vZGVfdCBucl91bml0c19j
dGFpbChjb25zdCBjb29yZF90ICogY29vcmQpOworaW50IGVzdGltYXRlX2N0YWlsKGNvbnN0IGNv
b3JkX3QgKiBjb29yZCwgY29uc3QgcmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhKTsKK3ZvaWQgcHJp
bnRfY3RhaWwoY29uc3QgY2hhciAqcHJlZml4LCBjb29yZF90ICogY29vcmQpOworbG9va3VwX3Jl
c3VsdCBsb29rdXBfY3RhaWwoY29uc3QgcmVpc2VyNF9rZXkgKiwgbG9va3VwX2JpYXMsIGNvb3Jk
X3QgKik7CisKK2ludCBwYXN0ZV9jdGFpbChjb29yZF90ICogY29vcmQsIHJlaXNlcjRfaXRlbV9k
YXRhICogZGF0YSwKKwkJY2FycnlfcGx1Z2luX2luZm8gKiBpbmZvIFVOVVNFRF9BUkcpOworaW50
IGluaXRfY3RhaWwoY29vcmRfdCAqLCBjb29yZF90ICosIHJlaXNlcjRfaXRlbV9kYXRhICopOwor
aW50IGNhbl9zaGlmdF9jdGFpbCh1bnNpZ25lZCBmcmVlX3NwYWNlLCBjb29yZF90ICogY29vcmQs
CisJCSAgICB6bm9kZSAqIHRhcmdldCwgc2hpZnRfZGlyZWN0aW9uIHBlbmQsIHVuc2lnbmVkICpz
aXplLAorCQkgICAgdW5zaWduZWQgd2FudCk7Cit2b2lkIGNvcHlfdW5pdHNfY3RhaWwoY29vcmRf
dCAqIHRhcmdldCwgY29vcmRfdCAqIHNvdXJjZSwgdW5zaWduZWQgZnJvbSwKKwkJICAgICAgdW5z
aWduZWQgY291bnQsIHNoaWZ0X2RpcmVjdGlvbiB3aGVyZV9pc19mcmVlX3NwYWNlLAorCQkgICAg
ICB1bnNpZ25lZCBmcmVlX3NwYWNlKTsKK2ludCBjdXRfdW5pdHNfY3RhaWwoY29vcmRfdCAqIGNv
b3JkLCBwb3NfaW5fbm9kZV90IGZyb20sIHBvc19pbl9ub2RlX3QgdG8sCisJCSAgICBjYXJyeV9j
dXRfZGF0YSAqLCByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJCSAgICByZWlzZXI0
X2tleSAqIG5ld19maXJzdCk7CitpbnQga2lsbF91bml0c19jdGFpbChjb29yZF90ICogY29vcmQs
IHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywKKwkJICAgICBjYXJyeV9raWxs
X2RhdGEgKiwgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgICAgIHJlaXNlcjRf
a2V5ICogbmV3X2ZpcnN0KTsKK2ludCBjdGFpbF9vayhjb25zdCBjb29yZF90ICogY29vcmQpOwor
aW50IGNoZWNrX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY29uc3QgY2hhciAqKmVycm9y
KTsKKworLyogcGx1Z2luLT51Lml0ZW0ucy4qICovCitpbnQgcmVhZF9jdGFpbChzdHJ1Y3QgZmls
ZSAqLCBmbG93X3QgKiwgaGludF90ICopOworaW50IHJlYWRwYWdlX2N0YWlsKHZvaWQgKiwgc3Ry
dWN0IHBhZ2UgKik7CitpbnQgcmVhZHBhZ2VzX2N0YWlsKHN0cnVjdCBmaWxlICosIHN0cnVjdCBh
ZGRyZXNzX3NwYWNlICosIHN0cnVjdCBsaXN0X2hlYWQgKik7CityZWlzZXI0X2tleSAqYXBwZW5k
X2tleV9jdGFpbChjb25zdCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOworaW50IGNyZWF0ZV9o
b29rX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgdm9pZCAqYXJnKTsKK2ludCBraWxsX2hv
b2tfY3RhaWwoY29uc3QgY29vcmRfdCAqLCBwb3NfaW5fbm9kZV90LCBwb3NfaW5fbm9kZV90LAor
CQkgICAgY2Fycnlfa2lsbF9kYXRhICopOworaW50IHNoaWZ0X2hvb2tfY3RhaWwoY29uc3QgY29v
cmRfdCAqLCB1bnNpZ25lZCwgdW5zaWduZWQsIHpub2RlICopOworCisvKiBwbHVnaW4tPnUuaXRl
bS5mICovCitpbnQgdXRtb3N0X2NoaWxkX2N0YWlsKGNvbnN0IGNvb3JkX3QgKiwgc2lkZW9mLCBq
bm9kZSAqKik7CitpbnQgc2Nhbl9jdGFpbChmbHVzaF9zY2FuICopOworaW50IGNvbnZlcnRfY3Rh
aWwoZmx1c2hfcG9zX3QgKik7CitzaXplX3QgaW5vZGVfc2NhbGVkX2NsdXN0ZXJfc2l6ZShzdHJ1
Y3QgaW5vZGUgKik7CisKKyNlbmRpZgkJCQkvKiBfX0ZTX1JFSVNFUjRfQ1RBSUxfSF9fICovCisK
Ky8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDog
OAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZm
IC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9pdGVtL2V4dGVudC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2V4dGVu
dC5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2V4dGVudC5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vaXRlbS9leHRlbnQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ2NzIyMjI4
NiArMDEwMApAQCAtMCwwICsxLDE5NyBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMg
YnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLwor
CisjaW5jbHVkZSAiaXRlbS5oIgorI2luY2x1ZGUgIi4uLy4uL2tleS5oIgorI2luY2x1ZGUgIi4u
Ly4uL3N1cGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vY2FycnkuaCIKKyNpbmNsdWRlICIuLi8uLi9p
bm9kZS5oIgorI2luY2x1ZGUgIi4uLy4uL3BhZ2VfY2FjaGUuaCIKKyNpbmNsdWRlICIuLi8uLi9m
bHVzaC5oIgorI2luY2x1ZGUgIi4uL29iamVjdC5oIgorCisvKiBwcmVwYXJlIHN0cnVjdHVyZSBy
ZWlzZXI0X2l0ZW1fZGF0YS4gSXQgaXMgdXNlZCB0byBwdXQgb25lIGV4dGVudCB1bml0IGludG8g
dHJlZSAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xMykgKi8KK3JlaXNlcjRfaXRl
bV9kYXRhICppbml0X25ld19leHRlbnQocmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhLCB2b2lkICpl
eHRfdW5pdCwKKwkJCQkgICBpbnQgbnJfZXh0ZW50cykKK3sKKwlkYXRhLT5kYXRhID0gZXh0X3Vu
aXQ7CisJLyogZGF0YS0+ZGF0YSBpcyBrZXJuZWwgc3BhY2UgKi8KKwlkYXRhLT51c2VyID0gMDsK
KwlkYXRhLT5sZW5ndGggPSBzaXplb2YocmVpc2VyNF9leHRlbnQpICogbnJfZXh0ZW50czsKKwlk
YXRhLT5hcmcgPSBOVUxMOworCWRhdGEtPmlwbHVnID0gaXRlbV9wbHVnaW5fYnlfaWQoRVhURU5U
X1BPSU5URVJfSUQpOworCXJldHVybiBkYXRhOworfQorCisvKiBob3cgbWFueSBieXRlcyBhcmUg
YWRkcmVzc2VkIGJ5IEBuciBmaXJzdCBleHRlbnRzIG9mIHRoZSBleHRlbnQgaXRlbSAqLworcmVp
c2VyNF9ibG9ja19uciByZWlzZXI0X2V4dGVudF9zaXplKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwg
cG9zX2luX25vZGVfdCBucikKK3sKKwlwb3NfaW5fbm9kZV90IGk7CisJcmVpc2VyNF9ibG9ja19u
ciBibG9ja3M7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKworCWV4dCA9IGl0ZW1fYm9keV9ieV9j
b29yZChjb29yZCk7CisJYXNzZXJ0KCJ2cy0yNjMiLCBuciA8PSBucl91bml0c19leHRlbnQoY29v
cmQpKTsKKworCWJsb2NrcyA9IDA7CisJZm9yIChpID0gMDsgaSA8IG5yOyBpKyssIGV4dCsrKSB7
CisJCWJsb2NrcyArPSBleHRlbnRfZ2V0X3dpZHRoKGV4dCk7CisJfQorCisJcmV0dXJuIGJsb2Nr
cyAqIGN1cnJlbnRfYmxvY2tzaXplOworfQorCitleHRlbnRfc3RhdGUgc3RhdGVfb2ZfZXh0ZW50
KHJlaXNlcjRfZXh0ZW50ICogZXh0KQoreworCXN3aXRjaCAoKGludClleHRlbnRfZ2V0X3N0YXJ0
KGV4dCkpIHsKKwljYXNlIDA6CisJCXJldHVybiBIT0xFX0VYVEVOVDsKKwljYXNlIDE6CisJCXJl
dHVybiBVTkFMTE9DQVRFRF9FWFRFTlQ7CisJZGVmYXVsdDoKKwkJYnJlYWs7CisJfQorCXJldHVy
biBBTExPQ0FURURfRVhURU5UOworfQorCitpbnQgZXh0ZW50X2lzX3VuYWxsb2NhdGVkKGNvbnN0
IGNvb3JkX3QgKiBpdGVtKQoreworCWFzc2VydCgiam1hY2QtNTEzMyIsIGl0ZW1faXNfZXh0ZW50
KGl0ZW0pKTsKKworCXJldHVybiBzdGF0ZV9vZl9leHRlbnQoZXh0ZW50X2J5X2Nvb3JkKGl0ZW0p
KSA9PSBVTkFMTE9DQVRFRF9FWFRFTlQ7Cit9CisKKy8qIHNldCBleHRlbnQncyBzdGFydCBhbmQg
d2lkdGggKi8KK3ZvaWQgcmVpc2VyNF9zZXRfZXh0ZW50KHJlaXNlcjRfZXh0ZW50ICogZXh0LCBy
ZWlzZXI0X2Jsb2NrX25yIHN0YXJ0LAorCQkJcmVpc2VyNF9ibG9ja19uciB3aWR0aCkKK3sKKwll
eHRlbnRfc2V0X3N0YXJ0KGV4dCwgc3RhcnQpOworCWV4dGVudF9zZXRfd2lkdGgoZXh0LCB3aWR0
aCk7Cit9CisKKy8qKgorICogcmVpc2VyNF9yZXBsYWNlX2V4dGVudCAtIHJlcGxhY2UgZXh0ZW50
IGFuZCBwYXN0ZSAxIG9yIDIgYWZ0ZXIgaXQKKyAqIEB1bl9leHRlbnQ6IGNvb3JkaW5hdGUgb2Yg
ZXh0ZW50IHRvIGJlIG92ZXJ3cml0dGVuCisgKiBAbGg6IG5lZWQgYmV0dGVyIGNvbW1lbnQKKyAq
IEBrZXk6IG5lZWQgYmV0dGVyIGNvbW1lbnQKKyAqIEBleHRzX3RvX2FkZDogZGF0YSBwcmVwYXJl
ZCBmb3IgaW5zZXJ0aW9uIGludG8gdHJlZQorICogQHJlcGxhY2U6IG5lZWQgYmV0dGVyIGNvbW1l
bnQKKyAqIEBmbGFnczogbmVlZCBiZXR0ZXIgY29tbWVudAorICogQHJldHVybl9pbnNlcnRfcG9z
aXRpb246IG5lZWQgYmV0dGVyIGNvbW1lbnQKKyAqCisgKiBPdmVyd3JpdGVzIG9uZSBleHRlbnQs
IHBhc3RlcyAxIG9yIDIgbW9yZSBvbmVzIGFmdGVyIG92ZXJ3cml0dGVuIG9uZS4gIElmCisgKiBA
cmV0dXJuX2luc2VydGVkX3Bvc2l0aW9uIGlzIDEgLSBAdW5fZXh0ZW50IGFuZCBAbGggYXJlIHJl
dHVybmVkIHNldCB0bworICogZmlyc3Qgb2YgbmV3bHkgaW5zZXJ0ZWQgdW5pdHMsIGlmIGl0IGlz
IDAgLSBAdW5fZXh0ZW50IGFuZCBAbGggYXJlIHJldHVybmVkCisgKiBzZXQgdG8gZXh0ZW50IHdo
aWNoIHdhcyBvdmVyd3JpdHRlbi4KKyAqLworaW50IHJlaXNlcjRfcmVwbGFjZV9leHRlbnQoc3Ry
dWN0IHJlcGxhY2VfaGFuZGxlICpoLAorCQkJICAgaW50IHJldHVybl9pbnNlcnRlZF9wb3NpdGlv
bikKK3sKKwlpbnQgcmVzdWx0OworCXpub2RlICpvcmlnX3pub2RlOworCS8qT05fREVCVUcocmVp
c2VyNF9leHRlbnQgb3JpZ19leHQpOyovCS8qIHRoaXMgaXMgZm9yIGRlYnVnZ2luZyAqLworCisJ
YXNzZXJ0KCJ2cy05OTAiLCBjb29yZF9pc19leGlzdGluZ191bml0KGgtPmNvb3JkKSk7CisJYXNz
ZXJ0KCJ2cy0xMzc1Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKGgtPmNvb3JkLT5ub2RlKSk7CisJ
YXNzZXJ0KCJ2cy0xNDI2IiwgZXh0ZW50X2dldF93aWR0aCgmaC0+b3ZlcndyaXRlKSAhPSAwKTsK
Kwlhc3NlcnQoInZzLTE0MjciLCBleHRlbnRfZ2V0X3dpZHRoKCZoLT5uZXdfZXh0ZW50c1swXSkg
IT0gMCk7CisJYXNzZXJ0KCJ2cy0xNDI3IiwgZXJnbyhoLT5ucl9uZXdfZXh0ZW50cyA9PSAyLAor
CQkJICAgICAgIGV4dGVudF9nZXRfd2lkdGgoJmgtPm5ld19leHRlbnRzWzFdKSAhPSAwKSk7CisK
KwkvKiBjb21wb3NlIHN0cnVjdHVyZSBmb3IgcGFzdGUgKi8KKwlpbml0X25ld19leHRlbnQoJmgt
Pml0ZW0sICZoLT5uZXdfZXh0ZW50c1swXSwgaC0+bnJfbmV3X2V4dGVudHMpOworCisJY29vcmRf
ZHVwKCZoLT5jb29yZF9hZnRlciwgaC0+Y29vcmQpOworCWluaXRfbGgoJmgtPmxoX2FmdGVyKTsK
Kwljb3B5X2xoKCZoLT5saF9hZnRlciwgaC0+bGgpOworCXJlaXNlcjRfdGFwX2luaXQoJmgtPndh
dGNoLCAmaC0+Y29vcmRfYWZ0ZXIsICZoLT5saF9hZnRlciwgWk5PREVfV1JJVEVfTE9DSyk7CisJ
cmVpc2VyNF90YXBfbW9uaXRvcigmaC0+d2F0Y2gpOworCisJT05fREVCVUcoaC0+b3JpZ19leHQg
PSAqZXh0ZW50X2J5X2Nvb3JkKGgtPmNvb3JkKSk7CisJb3JpZ196bm9kZSA9IGgtPmNvb3JkLT5u
b2RlOworCisjaWYgUkVJU0VSNF9ERUJVRworCS8qIG1ha2Ugc3VyZSB0aGF0IGtleSBpcyBzZXQg
cHJvcGVybHkgKi8KKwl1bml0X2tleV9ieV9jb29yZChoLT5jb29yZCwgJmgtPnRtcCk7CisJc2V0
X2tleV9vZmZzZXQoJmgtPnRtcCwKKwkJICAgICAgIGdldF9rZXlfb2Zmc2V0KCZoLT50bXApICsK
KwkJICAgICAgIGV4dGVudF9nZXRfd2lkdGgoJmgtPm92ZXJ3cml0ZSkgKiBjdXJyZW50X2Jsb2Nr
c2l6ZSk7CisJYXNzZXJ0KCJ2cy0xMDgwIiwga2V5ZXEoJmgtPnRtcCwgJmgtPnBhc3RlX2tleSkp
OworI2VuZGlmCisKKwkvKiBzZXQgaW5zZXJ0IHBvaW50IGFmdGVyIHVuaXQgdG8gYmUgcmVwbGFj
ZWQgKi8KKwloLT5jb29yZC0+YmV0d2VlbiA9IEFGVEVSX1VOSVQ7CisKKwlyZXN1bHQgPSBpbnNl
cnRfaW50b19pdGVtKGgtPmNvb3JkLCByZXR1cm5faW5zZXJ0ZWRfcG9zaXRpb24gPyBoLT5saCA6
IE5VTEwsCisJCQkJICAmaC0+cGFzdGVfa2V5LCAmaC0+aXRlbSwgaC0+ZmxhZ3MpOworCWlmICgh
cmVzdWx0KSB7CisJCS8qIG5vdyB3ZSBoYXZlIHRvIHJlcGxhY2UgdGhlIHVuaXQgYWZ0ZXIgd2hp
Y2ggbmV3IHVuaXRzIHdlcmUKKwkJICAgaW5zZXJ0ZWQuIEl0cyBwb3NpdGlvbiBpcyB0cmFja2Vk
IGJ5IEB3YXRjaCAqLworCQlyZWlzZXI0X2V4dGVudCAqZXh0OworCQl6bm9kZSAqbm9kZTsKKwor
CQlub2RlID0gaC0+Y29vcmRfYWZ0ZXIubm9kZTsKKwkJaWYgKG5vZGUgIT0gb3JpZ196bm9kZSkg
eworCQkJY29vcmRfY2xlYXJfaXBsdWcoJmgtPmNvb3JkX2FmdGVyKTsKKwkJCXJlc3VsdCA9IHps
b2FkKG5vZGUpOworCQl9CisKKwkJaWYgKGxpa2VseSghcmVzdWx0KSkgeworCQkJZXh0ID0gZXh0
ZW50X2J5X2Nvb3JkKCZoLT5jb29yZF9hZnRlcik7CisKKwkJCWFzc2VydCgidnMtOTg3Iiwgem5v
ZGVfaXNfbG9hZGVkKG5vZGUpKTsKKwkJCWFzc2VydCgidnMtOTg4IiwgIW1lbWNtcChleHQsICZo
LT5vcmlnX2V4dCwgc2l6ZW9mKCpleHQpKSk7CisKKwkJCS8qIG92ZXJ3cml0ZSBleHRlbnQgdW5p
dCAqLworCQkJbWVtY3B5KGV4dCwgJmgtPm92ZXJ3cml0ZSwgc2l6ZW9mKHJlaXNlcjRfZXh0ZW50
KSk7CisJCQl6bm9kZV9tYWtlX2RpcnR5KG5vZGUpOworCisJCQlpZiAobm9kZSAhPSBvcmlnX3pu
b2RlKQorCQkJCXpyZWxzZShub2RlKTsKKworCQkJaWYgKHJldHVybl9pbnNlcnRlZF9wb3NpdGlv
biA9PSAwKSB7CisJCQkJLyogY29vcmQgYW5kIGxoIGFyZSB0byBiZSBzZXQgdG8gb3ZlcndyaXR0
ZW4KKwkJCQkgICBleHRlbnQgKi8KKwkJCQlhc3NlcnQoInZzLTE2NjIiLAorCQkJCSAgICAgICBX
SVRIX0RBVEEobm9kZSwgIW1lbWNtcCgmaC0+b3ZlcndyaXRlLAorCQkJCQkJCSAgICAgICBleHRl
bnRfYnlfY29vcmQoCisJCQkJCQkJCSAgICAgICAmaC0+Y29vcmRfYWZ0ZXIpLAorCQkJCQkJCSAg
ICAgICBzaXplb2YocmVpc2VyNF9leHRlbnQpKSkpOworCisJCQkJKmgtPmNvb3JkID0gaC0+Y29v
cmRfYWZ0ZXI7CisJCQkJZG9uZV9saChoLT5saCk7CisJCQkJY29weV9saChoLT5saCwgJmgtPmxo
X2FmdGVyKTsKKwkJCX0gZWxzZSB7CisJCQkJLyogaC0+Y29vcmQgYW5kIGgtPmxoIGFyZSB0byBi
ZSBzZXQgdG8gZmlyc3Qgb2YKKwkJCQkgICBpbnNlcnRlZCB1bml0cyAqLworCQkJCWFzc2VydCgi
dnMtMTY2MyIsCisJCQkJICAgICAgIFdJVEhfREFUQShoLT5jb29yZC0+bm9kZSwKKwkJCQkJCSAh
bWVtY21wKCZoLT5uZXdfZXh0ZW50c1swXSwKKwkJCQkJCQkgZXh0ZW50X2J5X2Nvb3JkKGgtPmNv
b3JkKSwKKwkJCQkJCQkgc2l6ZW9mKHJlaXNlcjRfZXh0ZW50KSkpKTsKKwkJCQlhc3NlcnQoInZz
LTE2NjQiLCBoLT5saC0+bm9kZSA9PSBoLT5jb29yZC0+bm9kZSk7CisJCQl9CisJCX0KKwl9CisJ
cmVpc2VyNF90YXBfZG9uZSgmaC0+d2F0Y2gpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworbG9j
a19oYW5kbGUgKnpub2RlX2xoKHpub2RlICpub2RlKQoreworCWFzc2VydCgidnMtMTM3MSIsIHpu
b2RlX2lzX3dyaXRlX2xvY2tlZChub2RlKSk7CisJYXNzZXJ0KCJ2cy0xMzcyIiwgem5vZGVfaXNf
d2xvY2tlZF9vbmNlKG5vZGUpKTsKKwlyZXR1cm4gbGlzdF9lbnRyeShub2RlLT5sb2NrLm93bmVy
cy5uZXh0LCBsb2NrX2hhbmRsZSwgb3duZXJzX2xpbmspOworfQorCisvKgorICogTG9jYWwgdmFy
aWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTogIkxD
IgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1bW46
IDc5CisgKiBzY3JvbGwtc3RlcDogMQorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vZXh0ZW50X2Zp
bGVfb3BzLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vZXh0ZW50X2ZpbGVf
b3BzLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vZXh0ZW50
X2ZpbGVfb3BzLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2V4dGVudF9maWxlX29wcy5jCTIwMjAtMDIt
MDUgMjA6NTM6NDEuNDY4MjIyMjk0ICswMTAwCkBAIC0wLDAgKzEsMTQzNCBAQAorLyogQ09QWVJJ
R0hUIDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBi
eSByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAiaXRlbS5oIgorI2luY2x1ZGUgIi4uLy4u
L2lub2RlLmgiCisjaW5jbHVkZSAiLi4vLi4vcGFnZV9jYWNoZS5oIgorI2luY2x1ZGUgIi4uL29i
amVjdC5oIgorCisjaW5jbHVkZSA8bGludXgvc3dhcC5oPgorCitzdGF0aWMgaW5saW5lIHJlaXNl
cjRfZXh0ZW50ICpleHRfYnlfb2Zmc2V0KGNvbnN0IHpub2RlICpub2RlLCBpbnQgb2Zmc2V0KQor
eworCXJlaXNlcjRfZXh0ZW50ICpleHQ7CisKKwlleHQgPSAocmVpc2VyNF9leHRlbnQgKikgKHpk
YXRhKG5vZGUpICsgb2Zmc2V0KTsKKwlyZXR1cm4gZXh0OworfQorCisvKioKKyAqIGNoZWNrX3Vm
X2Nvb3JkIC0gdmVyaWZ5IGNvb3JkIGV4dGVuc2lvbgorICogQHVmX2Nvb3JkOgorICogQGtleToK
KyAqCisgKiBNYWtlcyBzdXJlIHRoYXQgYWxsIGZpZWxkcyBvZiBAdWZfY29vcmQgYXJlIHNldCBw
cm9wZXJseS4gSWYgQGtleSBpcworICogc3BlY2lmaWVkIC0gY2hlY2sgd2hldGhlciBAdWZfY29v
cmQgaXMgc2V0IGNvcnJlc3BvbmRpbmdseS4KKyAqLworc3RhdGljIHZvaWQgY2hlY2tfdWZfY29v
cmQoY29uc3QgdWZfY29vcmRfdCAqdWZfY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICprZXkpCit7
CisjaWYgUkVJU0VSNF9ERUJVRworCWNvbnN0IGNvb3JkX3QgKmNvb3JkOworCWNvbnN0IHN0cnVj
dCBleHRlbnRfY29vcmRfZXh0ZW5zaW9uICpleHRfY29vcmQ7CisJcmVpc2VyNF9leHRlbnQgKmV4
dDsKKworCWNvb3JkID0gJnVmX2Nvb3JkLT5jb29yZDsKKwlleHRfY29vcmQgPSAmdWZfY29vcmQt
PmV4dGVuc2lvbi5leHRlbnQ7CisJZXh0ID0gZXh0X2J5X29mZnNldChjb29yZC0+bm9kZSwgdWZf
Y29vcmQtPmV4dGVuc2lvbi5leHRlbnQuZXh0X29mZnNldCk7CisKKwlhc3NlcnQoIiIsCisJICAg
ICAgIFdJVEhfREFUQShjb29yZC0+bm9kZSwKKwkJCSAodWZfY29vcmQtPnZhbGlkID09IDEgJiYK
KwkJCSAgY29vcmRfaXNfaXBsdWdfc2V0KGNvb3JkKSAmJgorCQkJICBpdGVtX2lzX2V4dGVudChj
b29yZCkgJiYKKwkJCSAgZXh0X2Nvb3JkLT5ucl91bml0cyA9PSBucl91bml0c19leHRlbnQoY29v
cmQpICYmCisJCQkgIGV4dCA9PSBleHRlbnRfYnlfY29vcmQoY29vcmQpICYmCisJCQkgIGV4dF9j
b29yZC0+d2lkdGggPT0gZXh0ZW50X2dldF93aWR0aChleHQpICYmCisJCQkgIGNvb3JkLT51bml0
X3BvcyA8IGV4dF9jb29yZC0+bnJfdW5pdHMgJiYKKwkJCSAgZXh0X2Nvb3JkLT5wb3NfaW5fdW5p
dCA8IGV4dF9jb29yZC0+d2lkdGggJiYKKwkJCSAgbWVtY21wKGV4dCwgJmV4dF9jb29yZC0+ZXh0
ZW50LAorCQkJCSBzaXplb2YocmVpc2VyNF9leHRlbnQpKSA9PSAwKSkpOworCWlmIChrZXkpIHsK
KwkJcmVpc2VyNF9rZXkgY29vcmRfa2V5OworCisJCXVuaXRfa2V5X2J5X2Nvb3JkKCZ1Zl9jb29y
ZC0+Y29vcmQsICZjb29yZF9rZXkpOworCQlzZXRfa2V5X29mZnNldCgmY29vcmRfa2V5LAorCQkJ
ICAgICAgIGdldF9rZXlfb2Zmc2V0KCZjb29yZF9rZXkpICsKKwkJCSAgICAgICAodWZfY29vcmQt
PmV4dGVuc2lvbi5leHRlbnQuCisJCQkJcG9zX2luX3VuaXQgPDwgUEFHRV9TSElGVCkpOworCQlh
c3NlcnQoIiIsIGtleWVxKGtleSwgJmNvb3JkX2tleSkpOworCX0KKyNlbmRpZgorfQorCitzdGF0
aWMgaW5saW5lIHJlaXNlcjRfZXh0ZW50ICpleHRfYnlfZXh0X2Nvb3JkKGNvbnN0IHVmX2Nvb3Jk
X3QgKnVmX2Nvb3JkKQoreworCXJldHVybiBleHRfYnlfb2Zmc2V0KHVmX2Nvb3JkLT5jb29yZC5u
b2RlLAorCQkJICAgICB1Zl9jb29yZC0+ZXh0ZW5zaW9uLmV4dGVudC5leHRfb2Zmc2V0KTsKK30K
KworI2lmIFJFSVNFUjRfREVCVUcKKworLyoqCisgKiBvZmZzZXRfaXNfaW5fdW5pdAorICoKKyAq
CisgKgorICovCisvKiByZXR1cm4gMSBpZiBvZmZzZXQgQG9mZiBpcyBpbnNpZGUgb2YgZXh0ZW50
IHVuaXQgcG9pbnRlZCB0byBieSBAY29vcmQuIFNldAorICAgcG9zX2luX3VuaXQgaW5zaWRlIG9m
IHVuaXQgY29ycmVzcG9uZGluZ2x5ICovCitzdGF0aWMgaW50IG9mZnNldF9pc19pbl91bml0KGNv
bnN0IGNvb3JkX3QgKmNvb3JkLCBsb2ZmX3Qgb2ZmKQoreworCXJlaXNlcjRfa2V5IHVuaXRfa2V5
OworCV9fdTY0IHVuaXRfb2ZmOworCXJlaXNlcjRfZXh0ZW50ICpleHQ7CisKKwlleHQgPSBleHRl
bnRfYnlfY29vcmQoY29vcmQpOworCisJdW5pdF9rZXlfZXh0ZW50KGNvb3JkLCAmdW5pdF9rZXkp
OworCXVuaXRfb2ZmID0gZ2V0X2tleV9vZmZzZXQoJnVuaXRfa2V5KTsKKwlpZiAob2ZmIDwgdW5p
dF9vZmYpCisJCXJldHVybiAwOworCWlmIChvZmYgPj0gKHVuaXRfb2ZmICsgKGN1cnJlbnRfYmxv
Y2tzaXplICogZXh0ZW50X2dldF93aWR0aChleHQpKSkpCisJCXJldHVybiAwOworCXJldHVybiAx
OworfQorCitzdGF0aWMgaW50Citjb29yZF9tYXRjaGVzX2tleV9leHRlbnQoY29uc3QgY29vcmRf
dCAqIGNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSkKK3sKKwlyZWlzZXI0X2tleSBpdGVt
X2tleTsKKworCWFzc2VydCgidnMtNzcxIiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkp
OworCWFzc2VydCgidnMtMTI1OCIsIGtleWx0KGtleSwgYXBwZW5kX2tleV9leHRlbnQoY29vcmQs
ICZpdGVtX2tleSkpKTsKKwlhc3NlcnQoInZzLTEyNTkiLCBrZXlnZShrZXksIGl0ZW1fa2V5X2J5
X2Nvb3JkKGNvb3JkLCAmaXRlbV9rZXkpKSk7CisKKwlyZXR1cm4gb2Zmc2V0X2lzX2luX3VuaXQo
Y29vcmQsIGdldF9rZXlfb2Zmc2V0KGtleSkpOworfQorCisjZW5kaWYKKworLyoqCisgKiBjYW5f
YXBwZW5kIC0KKyAqIEBrZXk6CisgKiBAY29vcmQ6CisgKgorICogUmV0dXJucyAxIGlmIEBrZXkg
aXMgZXF1YWwgdG8gYW4gYXBwZW5kIGtleSBvZiBpdGVtIEBjb29yZCBpcyBzZXQgdG8KKyAqLwor
c3RhdGljIGludCBjYW5fYXBwZW5kKGNvbnN0IHJlaXNlcjRfa2V5ICprZXksIGNvbnN0IGNvb3Jk
X3QgKmNvb3JkKQoreworCXJlaXNlcjRfa2V5IGFwcGVuZF9rZXk7CisKKwlyZXR1cm4ga2V5ZXEo
a2V5LCBhcHBlbmRfa2V5X2V4dGVudChjb29yZCwgJmFwcGVuZF9rZXkpKTsKK30KKworLyoqCisg
KiBhcHBlbmRfaG9sZQorICogQGNvb3JkOgorICogQGxoOgorICogQGtleToKKyAqCisgKi8KK3N0
YXRpYyBpbnQgYXBwZW5kX2hvbGUoY29vcmRfdCAqY29vcmQsIGxvY2tfaGFuZGxlICpsaCwKKwkJ
ICAgICAgIGNvbnN0IHJlaXNlcjRfa2V5ICprZXkpCit7CisJcmVpc2VyNF9rZXkgYXBwZW5kX2tl
eTsKKwlyZWlzZXI0X2Jsb2NrX25yIGhvbGVfd2lkdGg7CisJcmVpc2VyNF9leHRlbnQgKmV4dCwg
bmV3X2V4dDsKKwlyZWlzZXI0X2l0ZW1fZGF0YSBpZGF0YTsKKworCS8qIGxhc3QgaXRlbSBvZiBm
aWxlIG1heSBoYXZlIHRvIGJlIGFwcGVuZGVkIHdpdGggaG9sZSAqLworCWFzc2VydCgidnMtNzA4
Iiwgem5vZGVfZ2V0X2xldmVsKGNvb3JkLT5ub2RlKSA9PSBUV0lHX0xFVkVMKTsKKwlhc3NlcnQo
InZzLTcxNCIsIGl0ZW1faWRfYnlfY29vcmQoY29vcmQpID09IEVYVEVOVF9QT0lOVEVSX0lEKTsK
KworCS8qIGtleSBvZiBmaXJzdCBieXRlIHdoaWNoIGlzIG5vdCBhZGRyZXNzZWQgYnkgdGhpcyBl
eHRlbnQgKi8KKwlhcHBlbmRfa2V5X2V4dGVudChjb29yZCwgJmFwcGVuZF9rZXkpOworCisJYXNz
ZXJ0KCIiLCBrZXlsZSgmYXBwZW5kX2tleSwga2V5KSk7CisKKwkvKgorCSAqIGV4dGVudCBpdGVt
IGhhcyB0byBiZSBhcHBlbmRlZCB3aXRoIGhvbGUuIENhbGN1bGF0ZSBsZW5ndGggb2YgdGhhdAor
CSAqIGhvbGUKKwkgKi8KKwlob2xlX3dpZHRoID0gKChnZXRfa2V5X29mZnNldChrZXkpIC0gZ2V0
X2tleV9vZmZzZXQoJmFwcGVuZF9rZXkpICsKKwkJICAgICAgIGN1cnJlbnRfYmxvY2tzaXplIC0g
MSkgPj4gY3VycmVudF9ibG9ja3NpemVfYml0cyk7CisJYXNzZXJ0KCJ2cy05NTQiLCBob2xlX3dp
ZHRoID4gMCk7CisKKwkvKiBzZXQgY29vcmQgYWZ0ZXIgbGFzdCB1bml0ICovCisJY29vcmRfaW5p
dF9hZnRlcl9pdGVtX2VuZChjb29yZCk7CisKKwkvKiBnZXQgbGFzdCBleHRlbnQgaW4gdGhlIGl0
ZW0gKi8KKwlleHQgPSBleHRlbnRfYnlfY29vcmQoY29vcmQpOworCWlmIChzdGF0ZV9vZl9leHRl
bnQoZXh0KSA9PSBIT0xFX0VYVEVOVCkgeworCQkvKgorCQkgKiBsYXN0IGV4dGVudCBvZiBhIGZp
bGUgaXMgaG9sZSBleHRlbnQuIFdpZGVuIHRoYXQgZXh0ZW50IGJ5CisJCSAqIEBob2xlX3dpZHRo
IGJsb2Nrcy4gTm90ZSB0aGF0IHdlIGRvIG5vdCB3b3JyeSBhYm91dAorCQkgKiBvdmVyZmxvd2lu
ZyAtIGV4dGVudCB3aWR0aCBpcyA2NCBiaXRzCisJCSAqLworCQlyZWlzZXI0X3NldF9leHRlbnQo
ZXh0LCBIT0xFX0VYVEVOVF9TVEFSVCwKKwkJCQkgICBleHRlbnRfZ2V0X3dpZHRoKGV4dCkgKyBo
b2xlX3dpZHRoKTsKKwkJem5vZGVfbWFrZV9kaXJ0eShjb29yZC0+bm9kZSk7CisJCXJldHVybiAw
OworCX0KKworCS8qIGFwcGVuZCBsYXN0IGl0ZW0gb2YgdGhlIGZpbGUgd2l0aCBob2xlIGV4dGVu
dCB1bml0ICovCisJYXNzZXJ0KCJ2cy03MTMiLCAoc3RhdGVfb2ZfZXh0ZW50KGV4dCkgPT0gQUxM
T0NBVEVEX0VYVEVOVCB8fAorCQkJICBzdGF0ZV9vZl9leHRlbnQoZXh0KSA9PSBVTkFMTE9DQVRF
RF9FWFRFTlQpKTsKKworCXJlaXNlcjRfc2V0X2V4dGVudCgmbmV3X2V4dCwgSE9MRV9FWFRFTlRf
U1RBUlQsIGhvbGVfd2lkdGgpOworCWluaXRfbmV3X2V4dGVudCgmaWRhdGEsICZuZXdfZXh0LCAx
KTsKKwlyZXR1cm4gaW5zZXJ0X2ludG9faXRlbShjb29yZCwgbGgsICZhcHBlbmRfa2V5LCAmaWRh
dGEsIDApOworfQorCisvKioKKyAqIGNoZWNrX2pub2RlcworICogQHR3aWc6IGxvbmd0ZXJtIGxv
Y2tlZCB0d2lnIG5vZGUKKyAqIEBrZXk6CisgKgorICovCitzdGF0aWMgdm9pZCBjaGVja19qbm9k
ZXMoem5vZGUgKnR3aWcsIGNvbnN0IHJlaXNlcjRfa2V5ICprZXksIGludCBjb3VudCkKK3sKKyNp
ZiBSRUlTRVI0X0RFQlVHCisJY29vcmRfdCBjOworCXJlaXNlcjRfa2V5IG5vZGVfa2V5LCBqbm9k
ZV9rZXk7CisKKwlqbm9kZV9rZXkgPSAqa2V5OworCisJYXNzZXJ0KCIiLCB0d2lnICE9IE5VTEwp
OworCWFzc2VydCgiIiwgem5vZGVfZ2V0X2xldmVsKHR3aWcpID09IFRXSUdfTEVWRUwpOworCWFz
c2VydCgiIiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKHR3aWcpKTsKKworCXpsb2FkKHR3aWcpOwor
CS8qIGdldCB0aGUgc21hbGxlc3Qga2V5IGluIHR3aWcgbm9kZSAqLworCWNvb3JkX2luaXRfZmly
c3RfdW5pdCgmYywgdHdpZyk7CisJdW5pdF9rZXlfYnlfY29vcmQoJmMsICZub2RlX2tleSk7CisJ
YXNzZXJ0KCIiLCBrZXlsZSgmbm9kZV9rZXksICZqbm9kZV9rZXkpKTsKKworCWNvb3JkX2luaXRf
bGFzdF91bml0KCZjLCB0d2lnKTsKKwl1bml0X2tleV9ieV9jb29yZCgmYywgJm5vZGVfa2V5KTsK
KwlpZiAoaXRlbV9wbHVnaW5fYnlfY29vcmQoJmMpLT5zLmZpbGUuYXBwZW5kX2tleSkKKwkJaXRl
bV9wbHVnaW5fYnlfY29vcmQoJmMpLT5zLmZpbGUuYXBwZW5kX2tleSgmYywgJm5vZGVfa2V5KTsK
KwlzZXRfa2V5X29mZnNldCgmam5vZGVfa2V5LAorCQkgICAgICAgZ2V0X2tleV9vZmZzZXQoJmpu
b2RlX2tleSkgKyAobG9mZl90KWNvdW50ICogUEFHRV9TSVpFIC0gMSk7CisJYXNzZXJ0KCIiLCBr
ZXlsdCgmam5vZGVfa2V5LCAmbm9kZV9rZXkpKTsKKwl6cmVsc2UodHdpZyk7CisjZW5kaWYKK30K
KworLyoqCisgKiBhcHBlbmRfbGFzdF9leHRlbnQgLSBhcHBlbmQgbGFzdCBmaWxlIGl0ZW0KKyAq
IEB1Zl9jb29yZDogY29vcmQgdG8gc3RhcnQgaW5zZXJ0aW9uIGZyb20KKyAqIEBqbm9kZXM6IGFy
cmF5IG9mIGpub2RlcworICogQGNvdW50OiBudW1iZXIgb2Ygam5vZGVzIGluIHRoZSBhcnJheQor
ICoKKyAqIFRoZXJlIGlzIGFscmVhZHkgYXQgbGVhc3Qgb25lIGV4dGVudCBpdGVtIG9mIGZpbGUg
QGlub2RlIGluIHRoZSB0cmVlLiBBcHBlbmQKKyAqIHRoZSBsYXN0IG9mIHRoZW0gd2l0aCB1bmFs
bG9jYXRlZCBleHRlbnQgdW5pdCBvZiB3aWR0aCBAY291bnQuIEFzc2lnbgorICogZmFrZSBibG9j
ayBudW1iZXJzIHRvIGpub2RlcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBpbnNlcnRlZCBleHRlbnQu
CisgKi8KK3N0YXRpYyBpbnQgYXBwZW5kX2xhc3RfZXh0ZW50KHVmX2Nvb3JkX3QgKnVmX2Nvb3Jk
LCBjb25zdCByZWlzZXI0X2tleSAqa2V5LAorCQkJICAgICAgam5vZGUgKipqbm9kZXMsIGludCBj
b3VudCkKK3sKKwlpbnQgcmVzdWx0OworCXJlaXNlcjRfZXh0ZW50IG5ld19leHQ7CisJcmVpc2Vy
NF9pdGVtX2RhdGEgaWRhdGE7CisJY29vcmRfdCAqY29vcmQ7CisJc3RydWN0IGV4dGVudF9jb29y
ZF9leHRlbnNpb24gKmV4dF9jb29yZDsKKwlyZWlzZXI0X2V4dGVudCAqZXh0OworCXJlaXNlcjRf
YmxvY2tfbnIgYmxvY2s7CisJam5vZGUgKm5vZGU7CisJaW50IGk7CisKKwljb29yZCA9ICZ1Zl9j
b29yZC0+Y29vcmQ7CisJZXh0X2Nvb3JkID0gJnVmX2Nvb3JkLT5leHRlbnNpb24uZXh0ZW50Owor
CWV4dCA9IGV4dF9ieV9leHRfY29vcmQodWZfY29vcmQpOworCisJLyogY2hlY2sgY29ycmVjdG5l
c3Mgb2YgcG9zaXRpb24gaW4gdGhlIGl0ZW0gKi8KKwlhc3NlcnQoInZzLTIyOCIsIGNvb3JkLT51
bml0X3BvcyA9PSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKSk7CisJYXNzZXJ0KCJ2cy0xMzEx
IiwgY29vcmQtPmJldHdlZW4gPT0gQUZURVJfVU5JVCk7CisJYXNzZXJ0KCJ2cy0xMzAyIiwgZXh0
X2Nvb3JkLT5wb3NfaW5fdW5pdCA9PSBleHRfY29vcmQtPndpZHRoIC0gMSk7CisKKwlpZiAoIWNh
bl9hcHBlbmQoa2V5LCBjb29yZCkpIHsKKwkJLyogaG9sZSBleHRlbnQgaGFzIHRvIGJlIGluc2Vy
dGVkICovCisJCXJlc3VsdCA9IGFwcGVuZF9ob2xlKGNvb3JkLCB1Zl9jb29yZC0+bGgsIGtleSk7
CisJCXVmX2Nvb3JkLT52YWxpZCA9IDA7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJaWYgKGNv
dW50ID09IDApCisJCXJldHVybiAwOworCisJYXNzZXJ0KCIiLCBnZXRfa2V5X29mZnNldChrZXkp
ID09IChsb2ZmX3QpaW5kZXhfam5vZGUoam5vZGVzWzBdKSAqIFBBR0VfU0laRSk7CisKKwlpbm9k
ZV9hZGRfYmxvY2tzKG1hcHBpbmdfam5vZGUoam5vZGVzWzBdKS0+aG9zdCwgY291bnQpOworCisJ
c3dpdGNoIChzdGF0ZV9vZl9leHRlbnQoZXh0KSkgeworCWNhc2UgVU5BTExPQ0FURURfRVhURU5U
OgorCQkvKgorCQkgKiBsYXN0IGV4dGVudCB1bml0IG9mIHRoZSBmaWxlIGlzIHVuYWxsb2NhdGVk
IG9uZS4gSW5jcmVhc2UKKwkJICogaXRzIHdpZHRoIGJ5IEBjb3VudAorCQkgKi8KKwkJcmVpc2Vy
NF9zZXRfZXh0ZW50KGV4dCwgVU5BTExPQ0FURURfRVhURU5UX1NUQVJULAorCQkJCSAgIGV4dGVu
dF9nZXRfd2lkdGgoZXh0KSArIGNvdW50KTsKKwkJem5vZGVfbWFrZV9kaXJ0eShjb29yZC0+bm9k
ZSk7CisKKwkJLyogdXBkYXRlIGNvb3JkIGV4dGVuc2lvbiAqLworCQlleHRfY29vcmQtPndpZHRo
ICs9IGNvdW50OworCQlPTl9ERUJVRyhleHRlbnRfc2V0X3dpZHRoCisJCQkgKCZ1Zl9jb29yZC0+
ZXh0ZW5zaW9uLmV4dGVudC5leHRlbnQsCisJCQkgIGV4dF9jb29yZC0+d2lkdGgpKTsKKwkJYnJl
YWs7CisKKwljYXNlIEhPTEVfRVhURU5UOgorCWNhc2UgQUxMT0NBVEVEX0VYVEVOVDoKKwkJLyoK
KwkJICogbGFzdCBleHRlbnQgdW5pdCBvZiB0aGUgZmlsZSBpcyBlaXRoZXIgaG9sZSBvciBhbGxv
Y2F0ZWQKKwkJICogb25lLiBBcHBlbmQgb25lIHVuYWxsb2NhdGVkIGV4dGVudCBvZiB3aWR0aCBA
Y291bnQKKwkJICovCisJCXJlaXNlcjRfc2V0X2V4dGVudCgmbmV3X2V4dCwgVU5BTExPQ0FURURf
RVhURU5UX1NUQVJULCBjb3VudCk7CisJCWluaXRfbmV3X2V4dGVudCgmaWRhdGEsICZuZXdfZXh0
LCAxKTsKKwkJcmVzdWx0ID0gaW5zZXJ0X2ludG9faXRlbShjb29yZCwgdWZfY29vcmQtPmxoLCBr
ZXksICZpZGF0YSwgMCk7CisJCXVmX2Nvb3JkLT52YWxpZCA9IDA7CisJCWlmIChyZXN1bHQpCisJ
CQlyZXR1cm4gcmVzdWx0OworCQlicmVhazsKKworCWRlZmF1bHQ6CisJCXJldHVybiBSRVRFUlIo
LUVJTyk7CisJfQorCisJLyoKKwkgKiBtYWtlIHN1cmUgdGhhdCB3ZSBob2xkIGxvbmcgdGVybSBs
b2NrZWQgdHdpZyBub2RlIGNvbnRhaW5pbmcgYWxsCisJICogam5vZGVzIHdlIGFyZSBhYm91dCB0
byBjYXB0dXJlCisJICovCisJY2hlY2tfam5vZGVzKHVmX2Nvb3JkLT5saC0+bm9kZSwga2V5LCBj
b3VudCk7CisKKwkvKgorCSAqIGFzc2lnbiBmYWtlIGJsb2NrIG51bWJlcnMgdG8gYWxsIGpub2Rl
cy4gRklYTUU6IG1ha2Ugc3VyZSB3aGV0aGVyCisJICogdHdpZyBub2RlIGNvbnRhaW5pbmcgaW5z
ZXJ0ZWQgZXh0ZW50IGl0ZW0gaXMgbG9ja2VkCisJICovCisJYmxvY2sgPSBmYWtlX2Jsb2NrbnJf
dW5mb3JtYXR0ZWQoY291bnQpOworCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSArKywgYmxvY2sg
KyspIHsKKwkJbm9kZSA9IGpub2Rlc1tpXTsKKwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCQlK
Rl9TRVQobm9kZSwgSk5PREVfQ1JFQVRFRCk7CisJCWpub2RlX3NldF9ibG9jayhub2RlLCAmYmxv
Y2spOworIAkJcmVzdWx0ID0gcmVpc2VyNF90cnlfY2FwdHVyZShub2RlLCBaTk9ERV9XUklURV9M
T0NLLCAwKTsKKwkJQlVHX09OKHJlc3VsdCAhPSAwKTsKKwkJam5vZGVfbWFrZV9kaXJ0eV9sb2Nr
ZWQobm9kZSk7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCX0KKwlyZXR1cm4gY291bnQ7
Cit9CisKKy8qKgorICogaW5zZXJ0X2ZpcnN0X2hvbGUgLSBpbnNlciBob2xlIGV4dGVudCBpbnRv
IHRyZWUKKyAqIEBjb29yZDoKKyAqIEBsaDoKKyAqIEBrZXk6CisgKgorICoKKyAqLworc3RhdGlj
IGludCBpbnNlcnRfZmlyc3RfaG9sZShjb29yZF90ICpjb29yZCwgbG9ja19oYW5kbGUgKmxoLAor
CQkJICAgICBjb25zdCByZWlzZXI0X2tleSAqa2V5KQoreworCXJlaXNlcjRfZXh0ZW50IG5ld19l
eHQ7CisJcmVpc2VyNF9pdGVtX2RhdGEgaWRhdGE7CisJcmVpc2VyNF9rZXkgaXRlbV9rZXk7CisJ
cmVpc2VyNF9ibG9ja19uciBob2xlX3dpZHRoOworCisJLyogQGNvb3JkIG11c3QgYmUgc2V0IGZv
ciBpbnNlcnRpbmcgb2YgbmV3IGl0ZW0gKi8KKwlhc3NlcnQoInZzLTcxMSIsIGNvb3JkX2lzX2Jl
dHdlZW5faXRlbXMoY29vcmQpKTsKKworCWl0ZW1fa2V5ID0gKmtleTsKKwlzZXRfa2V5X29mZnNl
dCgmaXRlbV9rZXksIDB1bGwpOworCisJaG9sZV93aWR0aCA9ICgoZ2V0X2tleV9vZmZzZXQoa2V5
KSArIGN1cnJlbnRfYmxvY2tzaXplIC0gMSkgPj4KKwkJICAgICAgY3VycmVudF9ibG9ja3NpemVf
Yml0cyk7CisJYXNzZXJ0KCJ2cy03MTAiLCBob2xlX3dpZHRoID4gMCk7CisKKwkvKiBjb21wb3Nl
IGJvZHkgb2YgaG9sZSBleHRlbnQgYW5kIGluc2VydCBpdGVtIGludG8gdHJlZSAqLworCXJlaXNl
cjRfc2V0X2V4dGVudCgmbmV3X2V4dCwgSE9MRV9FWFRFTlRfU1RBUlQsIGhvbGVfd2lkdGgpOwor
CWluaXRfbmV3X2V4dGVudCgmaWRhdGEsICZuZXdfZXh0LCAxKTsKKwlyZXR1cm4gaW5zZXJ0X2V4
dGVudF9ieV9jb29yZChjb29yZCwgJmlkYXRhLCAmaXRlbV9rZXksIGxoKTsKK30KKworCisvKioK
KyAqIGluc2VydF9maXJzdF9leHRlbnQgLSBpbnNlcnQgZmlyc3QgZmlsZSBpdGVtCisgKiBAaW5v
ZGU6IGlub2RlIG9mIGZpbGUKKyAqIEB1Zl9jb29yZDogY29vcmQgdG8gc3RhcnQgaW5zZXJ0aW9u
IGZyb20KKyAqIEBqbm9kZXM6IGFycmF5IG9mIGpub2RlcworICogQGNvdW50OiBudW1iZXIgb2Yg
am5vZGVzIGluIHRoZSBhcnJheQorICogQGlub2RlOgorICoKKyAqIFRoZXJlIGFyZSBubyBpdGVt
cyBvZiBmaWxlIEBpbm9kZSBpbiB0aGUgdHJlZSB5ZXQuIEluc2VydCB1bmFsbG9jYXRlZCBleHRl
bnQKKyAqIG9mIHdpZHRoIEBjb3VudCBpbnRvIHRyZWUgb3IgaG9sZSBleHRlbnQgaWYgd3JpdGlu
ZyBub3QgdG8gdGhlCisgKiBiZWdpbm5pbmcuIEFzc2lnbiBmYWtlIGJsb2NrIG51bWJlcnMgdG8g
am5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGluc2VydGVkCisgKiB1bmFsbG9jYXRlZCBleHRl
bnQuIFJldHVybnMgbnVtYmVyIG9mIGpub2RlcyBvciBlcnJvciBjb2RlLgorICovCitzdGF0aWMg
aW50IGluc2VydF9maXJzdF9leHRlbnQodWZfY29vcmRfdCAqdWZfY29vcmQsIGNvbnN0IHJlaXNl
cjRfa2V5ICprZXksCisJCQkgICAgICAgam5vZGUgKipqbm9kZXMsIGludCBjb3VudCwKKwkJCSAg
ICAgICBzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCWludCByZXN1bHQ7CisJaW50IGk7CisJcmVp
c2VyNF9leHRlbnQgbmV3X2V4dDsKKwlyZWlzZXI0X2l0ZW1fZGF0YSBpZGF0YTsKKwlyZWlzZXI0
X2Jsb2NrX25yIGJsb2NrOworCXN0cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKwlqbm9k
ZSAqbm9kZTsKKworCS8qIGZpcnN0IGV4dGVudCBpbnNlcnRpb24gc3RhcnRzIGF0IGxlYWYgbGV2
ZWwgKi8KKwlhc3NlcnQoInZzLTcxOSIsIHpub2RlX2dldF9sZXZlbCh1Zl9jb29yZC0+Y29vcmQu
bm9kZSkgPT0gTEVBRl9MRVZFTCk7CisJYXNzZXJ0KCJ2cy03MTEiLCBjb29yZF9pc19iZXR3ZWVu
X2l0ZW1zKCZ1Zl9jb29yZC0+Y29vcmQpKTsKKworCWlmIChnZXRfa2V5X29mZnNldChrZXkpICE9
IDApIHsKKwkJcmVzdWx0ID0gaW5zZXJ0X2ZpcnN0X2hvbGUoJnVmX2Nvb3JkLT5jb29yZCwgdWZf
Y29vcmQtPmxoLCBrZXkpOworCQl1Zl9jb29yZC0+dmFsaWQgPSAwOworCQl1Zl9pbmZvID0gdW5p
eF9maWxlX2lub2RlX2RhdGEoaW5vZGUpOworCisJCS8qCisJCSAqIGZpcnN0IGl0ZW0gaW5zZXJ0
aW9uIGlzIG9ubHkgcG9zc2libGUgd2hlbiB3cml0aW5nIHRvIGVtcHR5CisJCSAqIGZpbGUgb3Ig
cGVyZm9ybWluZyB0YWlsIGNvbnZlcnNpb24KKwkJICovCisJCWFzc2VydCgiIiwgKHVmX2luZm8t
PmNvbnRhaW5lciA9PSBVRl9DT05UQUlORVJfRU1QVFkgfHwKKwkJCSAgICAocmVpc2VyNF9pbm9k
ZV9nZXRfZmxhZyhpbm9kZSwKKwkJCQkJCSAgICBSRUlTRVI0X1BBUlRfTUlYRUQpICYmCisJCQkg
ICAgIHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWcoaW5vZGUsCisJCQkJCQkgICAgUkVJU0VSNF9QQVJU
X0lOX0NPTlYpKSkpOworCQkvKiBpZiBmaWxlIHdhcyBlbXB0eSAtIHVwZGF0ZSBpdHMgc3RhdGUg
Ki8KKwkJaWYgKHJlc3VsdCA9PSAwICYmIHVmX2luZm8tPmNvbnRhaW5lciA9PSBVRl9DT05UQUlO
RVJfRU1QVFkpCisJCQl1Zl9pbmZvLT5jb250YWluZXIgPSBVRl9DT05UQUlORVJfRVhURU5UUzsK
KwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwlpZiAoY291bnQgPT0gMCkKKwkJcmV0dXJuIDA7CisK
Kwlpbm9kZV9hZGRfYmxvY2tzKG1hcHBpbmdfam5vZGUoam5vZGVzWzBdKS0+aG9zdCwgY291bnQp
OworCisJLyoKKwkgKiBwcmVwYXJlIGZvciB0cmVlIG1vZGlmaWNhdGlvbjogY29tcG9zZSBib2R5
IG9mIGl0ZW0gYW5kIGl0ZW0gZGF0YQorCSAqIHN0cnVjdHVyZSBuZWVkZWQgZm9yIGluc2VydGlv
bgorCSAqLworCXJlaXNlcjRfc2V0X2V4dGVudCgmbmV3X2V4dCwgVU5BTExPQ0FURURfRVhURU5U
X1NUQVJULCBjb3VudCk7CisJaW5pdF9uZXdfZXh0ZW50KCZpZGF0YSwgJm5ld19leHQsIDEpOwor
CisJLyogaW5zZXJ0IGV4dGVudCBpdGVtIGludG8gdGhlIHRyZWUgKi8KKwlyZXN1bHQgPSBpbnNl
cnRfZXh0ZW50X2J5X2Nvb3JkKCZ1Zl9jb29yZC0+Y29vcmQsICZpZGF0YSwga2V5LAorCQkJCQl1
Zl9jb29yZC0+bGgpOworCWlmIChyZXN1bHQpCisJCXJldHVybiByZXN1bHQ7CisKKwkvKgorCSAq
IG1ha2Ugc3VyZSB0aGF0IHdlIGhvbGQgbG9uZyB0ZXJtIGxvY2tlZCB0d2lnIG5vZGUgY29udGFp
bmluZyBhbGwKKwkgKiBqbm9kZXMgd2UgYXJlIGFib3V0IHRvIGNhcHR1cmUKKwkgKi8KKwljaGVj
a19qbm9kZXModWZfY29vcmQtPmxoLT5ub2RlLCBrZXksIGNvdW50KTsKKwkvKgorCSAqIGFzc2ln
biBmYWtlIGJsb2NrIG51bWJlcnMgdG8gYWxsIGpub2RlcywgY2FwdHVyZSBhbmQgbWFyayB0aGVt
IGRpcnR5CisJICovCisJYmxvY2sgPSBmYWtlX2Jsb2NrbnJfdW5mb3JtYXR0ZWQoY291bnQpOwor
CWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSArKywgYmxvY2sgKyspIHsKKwkJbm9kZSA9IGpub2Rl
c1tpXTsKKwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCQlKRl9TRVQobm9kZSwgSk5PREVfQ1JF
QVRFRCk7CisJCWpub2RlX3NldF9ibG9jayhub2RlLCAmYmxvY2spOworIAkJcmVzdWx0ID0gcmVp
c2VyNF90cnlfY2FwdHVyZShub2RlLCBaTk9ERV9XUklURV9MT0NLLCAwKTsKKwkJQlVHX09OKHJl
c3VsdCAhPSAwKTsKKwkJam5vZGVfbWFrZV9kaXJ0eV9sb2NrZWQobm9kZSk7CisJCXNwaW5fdW5s
b2NrX2pub2RlKG5vZGUpOworCX0KKworCS8qCisJICogaW52YWxpZGF0ZSBjb29yZGluYXRlLCBy
ZXNlYXJjaCBtdXN0IGJlIHBlcmZvcm1lZCB0byBjb250aW51ZQorCSAqIGJlY2F1c2Ugd3JpdGUg
d2lsbCBjb250aW51ZSBvbiB0d2lnIGxldmVsCisJICovCisJdWZfY29vcmQtPnZhbGlkID0gMDsK
KwlyZXR1cm4gY291bnQ7Cit9CisKKy8qKgorICogcGx1Z19ob2xlIC0gcmVwbGFjZSBob2xlIGV4
dGVudCB3aXRoIHVuYWxsb2NhdGVkIGFuZCBob2xlcworICogQHVmX2Nvb3JkOgorICogQGtleToK
KyAqIEBub2RlOgorICogQGg6IHN0cnVjdHVyZSBjb250YWluaW5nIGNvb3JkaW5hdGUsIGxvY2sg
aGFuZGxlLCBrZXksIGV0YworICoKKyAqIENyZWF0ZXMgYW4gdW5hbGxvY2F0ZWQgZXh0ZW50IG9m
IHdpZHRoIDEgd2l0aGluIGEgaG9sZS4gSW4gd29yc3QgY2FzZSB0d28KKyAqIGFkZGl0aW9uYWwg
ZXh0ZW50cyBjYW4gYmUgY3JlYXRlZC4KKyAqLworc3RhdGljIGludCBwbHVnX2hvbGUodWZfY29v
cmRfdCAqdWZfY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICprZXksIGludCAqaG93KQoreworCXN0
cnVjdCByZXBsYWNlX2hhbmRsZSByaDsKKwlyZWlzZXI0X2V4dGVudCAqZXh0OworCXJlaXNlcjRf
YmxvY2tfbnIgd2lkdGgsIHBvc19pbl91bml0OworCWNvb3JkX3QgKmNvb3JkOworCXN0cnVjdCBl
eHRlbnRfY29vcmRfZXh0ZW5zaW9uICpleHRfY29vcmQ7CisJaW50IHJldHVybl9pbnNlcnRlZF9w
b3NpdGlvbjsKKworIAljaGVja191Zl9jb29yZCh1Zl9jb29yZCwga2V5KTsKKworCXJoLmNvb3Jk
ID0gY29vcmRfYnlfdWZfY29vcmQodWZfY29vcmQpOworCXJoLmxoID0gdWZfY29vcmQtPmxoOwor
CXJoLmZsYWdzID0gMDsKKworCWNvb3JkID0gY29vcmRfYnlfdWZfY29vcmQodWZfY29vcmQpOwor
CWV4dF9jb29yZCA9IGV4dF9jb29yZF9ieV91Zl9jb29yZCh1Zl9jb29yZCk7CisJZXh0ID0gZXh0
X2J5X2V4dF9jb29yZCh1Zl9jb29yZCk7CisKKwl3aWR0aCA9IGV4dF9jb29yZC0+d2lkdGg7CisJ
cG9zX2luX3VuaXQgPSBleHRfY29vcmQtPnBvc19pbl91bml0OworCisJKmhvdyA9IDA7CisJaWYg
KHdpZHRoID09IDEpIHsKKwkJcmVpc2VyNF9zZXRfZXh0ZW50KGV4dCwgVU5BTExPQ0FURURfRVhU
RU5UX1NUQVJULCAxKTsKKwkJem5vZGVfbWFrZV9kaXJ0eShjb29yZC0+bm9kZSk7CisJCS8qIHVw
ZGF0ZSB1Zl9jb29yZCAqLworCQlPTl9ERUJVRyhleHRfY29vcmQtPmV4dGVudCA9ICpleHQpOwor
CQkqaG93ID0gMTsKKwkJcmV0dXJuIDA7CisJfSBlbHNlIGlmIChwb3NfaW5fdW5pdCA9PSAwKSB7
CisJCS8qIHdlIGRlYWwgd2l0aCBmaXJzdCBlbGVtZW50IG9mIGV4dGVudCAqLworCQlpZiAoY29v
cmQtPnVuaXRfcG9zKSB7CisJCQkvKiB0aGVyZSBpcyBhbiBleHRlbnQgdG8gdGhlIGxlZnQgKi8K
KwkJCWlmIChzdGF0ZV9vZl9leHRlbnQoZXh0IC0gMSkgPT0gVU5BTExPQ0FURURfRVhURU5UKSB7
CisJCQkJLyoKKwkJCQkgKiBsZWZ0IG5laWdoYm9yaW5nIHVuaXQgaXMgYW4gdW5hbGxvY2F0ZWQK
KwkJCQkgKiBleHRlbnQuIEluY3JlYXNlIGl0cyB3aWR0aCBhbmQgZGVjcmVhc2UKKwkJCQkgKiB3
aWR0aCBvZiBob2xlCisJCQkJICovCisJCQkJZXh0ZW50X3NldF93aWR0aChleHQgLSAxLAorCQkJ
CQkJIGV4dGVudF9nZXRfd2lkdGgoZXh0IC0gMSkgKyAxKTsKKwkJCQlleHRlbnRfc2V0X3dpZHRo
KGV4dCwgd2lkdGggLSAxKTsKKwkJCQl6bm9kZV9tYWtlX2RpcnR5KGNvb3JkLT5ub2RlKTsKKwor
CQkJCS8qIHVwZGF0ZSBjb29yZCBleHRlbnNpb24gKi8KKwkJCQljb29yZC0+dW5pdF9wb3MtLTsK
KwkJCQlleHRfY29vcmQtPndpZHRoID0gZXh0ZW50X2dldF93aWR0aChleHQgLSAxKTsKKwkJCQll
eHRfY29vcmQtPnBvc19pbl91bml0ID0gZXh0X2Nvb3JkLT53aWR0aCAtIDE7CisJCQkJZXh0X2Nv
b3JkLT5leHRfb2Zmc2V0IC09IHNpemVvZihyZWlzZXI0X2V4dGVudCk7CisJCQkJT05fREVCVUco
ZXh0X2Nvb3JkLT5leHRlbnQgPQorCQkJCQkgKmV4dGVudF9ieV9jb29yZChjb29yZCkpOworCQkJ
CSpob3cgPSAyOworCQkJCXJldHVybiAwOworCQkJfQorCQl9CisJCS8qIGV4dGVudCBmb3IgcmVw
bGFjZSAqLworCQlyZWlzZXI0X3NldF9leHRlbnQoJnJoLm92ZXJ3cml0ZSwgVU5BTExPQ0FURURf
RVhURU5UX1NUQVJULCAxKTsKKwkJLyogZXh0ZW50IHRvIGJlIGluc2VydGVkICovCisJCXJlaXNl
cjRfc2V0X2V4dGVudCgmcmgubmV3X2V4dGVudHNbMF0sIEhPTEVfRVhURU5UX1NUQVJULAorCQkJ
CSAgIHdpZHRoIC0gMSk7CisJCXJoLm5yX25ld19leHRlbnRzID0gMTsKKworCQkvKiBoYXZlIHJl
aXNlcjRfcmVwbGFjZV9leHRlbnQgdG8gcmV0dXJuIHdpdGggQGNvb3JkIGFuZAorCQkgICBAdWZf
Y29vcmQtPmxoIHNldCB0byB1bml0IHdoaWNoIHdhcyByZXBsYWNlZCAqLworCQlyZXR1cm5faW5z
ZXJ0ZWRfcG9zaXRpb24gPSAwOworCQkqaG93ID0gMzsKKwl9IGVsc2UgaWYgKHBvc19pbl91bml0
ID09IHdpZHRoIC0gMSkgeworCQkvKiB3ZSBkZWFsIHdpdGggbGFzdCBlbGVtZW50IG9mIGV4dGVu
dCAqLworCQlpZiAoY29vcmQtPnVuaXRfcG9zIDwgbnJfdW5pdHNfZXh0ZW50KGNvb3JkKSAtIDEp
IHsKKwkJCS8qIHRoZXJlIGlzIGFuIGV4dGVudCB1bml0IHRvIHRoZSByaWdodCAqLworCQkJaWYg
KHN0YXRlX29mX2V4dGVudChleHQgKyAxKSA9PSBVTkFMTE9DQVRFRF9FWFRFTlQpIHsKKwkJCQkv
KgorCQkJCSAqIHJpZ2h0IG5laWdoYm9yaW5nIHVuaXQgaXMgYW4gdW5hbGxvY2F0ZWQKKwkJCQkg
KiBleHRlbnQuIEluY3JlYXNlIGl0cyB3aWR0aCBhbmQgZGVjcmVhc2UKKwkJCQkgKiB3aWR0aCBv
ZiBob2xlCisJCQkJICovCisJCQkJZXh0ZW50X3NldF93aWR0aChleHQgKyAxLAorCQkJCQkJIGV4
dGVudF9nZXRfd2lkdGgoZXh0ICsgMSkgKyAxKTsKKwkJCQlleHRlbnRfc2V0X3dpZHRoKGV4dCwg
d2lkdGggLSAxKTsKKwkJCQl6bm9kZV9tYWtlX2RpcnR5KGNvb3JkLT5ub2RlKTsKKworCQkJCS8q
IHVwZGF0ZSBjb29yZCBleHRlbnNpb24gKi8KKwkJCQljb29yZC0+dW5pdF9wb3MrKzsKKwkJCQll
eHRfY29vcmQtPndpZHRoID0gZXh0ZW50X2dldF93aWR0aChleHQgKyAxKTsKKwkJCQlleHRfY29v
cmQtPnBvc19pbl91bml0ID0gMDsKKwkJCQlleHRfY29vcmQtPmV4dF9vZmZzZXQgKz0gc2l6ZW9m
KHJlaXNlcjRfZXh0ZW50KTsKKwkJCQlPTl9ERUJVRyhleHRfY29vcmQtPmV4dGVudCA9CisJCQkJ
CSAqZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKSk7CisJCQkJKmhvdyA9IDQ7CisJCQkJcmV0dXJuIDA7
CisJCQl9CisJCX0KKwkJLyogZXh0ZW50IGZvciByZXBsYWNlICovCisJCXJlaXNlcjRfc2V0X2V4
dGVudCgmcmgub3ZlcndyaXRlLCBIT0xFX0VYVEVOVF9TVEFSVCwgd2lkdGggLSAxKTsKKwkJLyog
ZXh0ZW50IHRvIGJlIGluc2VydGVkICovCisJCXJlaXNlcjRfc2V0X2V4dGVudCgmcmgubmV3X2V4
dGVudHNbMF0sIFVOQUxMT0NBVEVEX0VYVEVOVF9TVEFSVCwKKwkJCQkgICAxKTsKKwkJcmgubnJf
bmV3X2V4dGVudHMgPSAxOworCisJCS8qIGhhdmUgcmVpc2VyNF9yZXBsYWNlX2V4dGVudCB0byBy
ZXR1cm4gd2l0aCBAY29vcmQgYW5kCisJCSAgIEB1Zl9jb29yZC0+bGggc2V0IHRvIHVuaXQgd2hp
Y2ggd2FzIGluc2VydGVkICovCisJCXJldHVybl9pbnNlcnRlZF9wb3NpdGlvbiA9IDE7CisJCSpo
b3cgPSA1OworCX0gZWxzZSB7CisJCS8qIGV4dGVudCBmb3IgcmVwbGFjZSAqLworCQlyZWlzZXI0
X3NldF9leHRlbnQoJnJoLm92ZXJ3cml0ZSwgSE9MRV9FWFRFTlRfU1RBUlQsCisJCQkJICAgcG9z
X2luX3VuaXQpOworCQkvKiBleHRlbnRzIHRvIGJlIGluc2VydGVkICovCisJCXJlaXNlcjRfc2V0
X2V4dGVudCgmcmgubmV3X2V4dGVudHNbMF0sIFVOQUxMT0NBVEVEX0VYVEVOVF9TVEFSVCwKKwkJ
CQkgICAxKTsKKwkJcmVpc2VyNF9zZXRfZXh0ZW50KCZyaC5uZXdfZXh0ZW50c1sxXSwgSE9MRV9F
WFRFTlRfU1RBUlQsCisJCQkJICAgd2lkdGggLSBwb3NfaW5fdW5pdCAtIDEpOworCQlyaC5ucl9u
ZXdfZXh0ZW50cyA9IDI7CisKKwkJLyogaGF2ZSByZWlzZXI0X3JlcGxhY2VfZXh0ZW50IHRvIHJl
dHVybiB3aXRoIEBjb29yZCBhbmQKKwkJICAgQHVmX2Nvb3JkLT5saCBzZXQgdG8gZmlyc3Qgb2Yg
dW5pdHMgd2hpY2ggd2VyZSBpbnNlcnRlZCAqLworCQlyZXR1cm5faW5zZXJ0ZWRfcG9zaXRpb24g
PSAxOworCQkqaG93ID0gNjsKKwl9CisJdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZyaC5wYXN0
ZV9rZXkpOworCXNldF9rZXlfb2Zmc2V0KCZyaC5wYXN0ZV9rZXksIGdldF9rZXlfb2Zmc2V0KCZy
aC5wYXN0ZV9rZXkpICsKKwkJICAgICAgIGV4dGVudF9nZXRfd2lkdGgoJnJoLm92ZXJ3cml0ZSkg
KiBjdXJyZW50X2Jsb2Nrc2l6ZSk7CisKKwl1Zl9jb29yZC0+dmFsaWQgPSAwOworCXJldHVybiBy
ZWlzZXI0X3JlcGxhY2VfZXh0ZW50KCZyaCwgcmV0dXJuX2luc2VydGVkX3Bvc2l0aW9uKTsKK30K
KworLyoqCisgKiBvdmVyd3JpdGVfb25lX2Jsb2NrIC0KKyAqIEB1Zl9jb29yZDoKKyAqIEBrZXk6
CisgKiBAbm9kZToKKyAqCisgKiBJZiBAbm9kZSBjb3JyZXNwb25kcyB0byBob2xlIGV4dGVudCAt
IGNyZWF0ZSB1bmFsbG9jYXRlZCBleHRlbnQgZm9yIGl0IGFuZAorICogYXNzaWduIGZha2UgYmxv
Y2sgbnVtYmVyLiBJZiBAbm9kZSBjb3JyZXNwb25kcyB0byBhbGxvY2F0ZWQgZXh0ZW50IC0gYXNz
aWduCisgKiBibG9jayBudW1iZXIgb2Ygam5vZGUKKyAqLworc3RhdGljIGludCBvdmVyd3JpdGVf
b25lX2Jsb2NrKHVmX2Nvb3JkX3QgKnVmX2Nvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqa2V5LAor
CQkJICAgICAgIGpub2RlICpub2RlLCBpbnQgKmhvbGVfcGx1Z2dlZCkKK3sKKwlpbnQgcmVzdWx0
OworCXN0cnVjdCBleHRlbnRfY29vcmRfZXh0ZW5zaW9uICpleHRfY29vcmQ7CisJcmVpc2VyNF9l
eHRlbnQgKmV4dDsKKwlyZWlzZXI0X2Jsb2NrX25yIGJsb2NrOworCWludCBob3c7CisKKwlhc3Nl
cnQoInZzLTEzMTIiLCB1Zl9jb29yZC0+Y29vcmQuYmV0d2VlbiA9PSBBVF9VTklUKTsKKworCXJl
c3VsdCA9IDA7CisJZXh0X2Nvb3JkID0gZXh0X2Nvb3JkX2J5X3VmX2Nvb3JkKHVmX2Nvb3JkKTsK
KwljaGVja191Zl9jb29yZCh1Zl9jb29yZCwgTlVMTCk7CisJZXh0ID0gZXh0X2J5X2V4dF9jb29y
ZCh1Zl9jb29yZCk7CisJYXNzZXJ0KCIiLCBzdGF0ZV9vZl9leHRlbnQoZXh0KSAhPSBVTkFMTE9D
QVRFRF9FWFRFTlQpOworCisJc3dpdGNoIChzdGF0ZV9vZl9leHRlbnQoZXh0KSkgeworCWNhc2Ug
QUxMT0NBVEVEX0VYVEVOVDoKKwkJYmxvY2sgPSBleHRlbnRfZ2V0X3N0YXJ0KGV4dCkgKyBleHRf
Y29vcmQtPnBvc19pbl91bml0OworCQlicmVhazsKKworCWNhc2UgSE9MRV9FWFRFTlQ6CisJCWlu
b2RlX2FkZF9ibG9ja3MobWFwcGluZ19qbm9kZShub2RlKS0+aG9zdCwgMSk7CisJCXJlc3VsdCA9
IHBsdWdfaG9sZSh1Zl9jb29yZCwga2V5LCAmaG93KTsKKwkJaWYgKHJlc3VsdCkKKwkJCXJldHVy
biByZXN1bHQ7CisJCWJsb2NrID0gZmFrZV9ibG9ja25yX3VuZm9ybWF0dGVkKDEpOworCQlpZiAo
aG9sZV9wbHVnZ2VkKQorCQkJKmhvbGVfcGx1Z2dlZCA9IDE7CisJCUpGX1NFVChub2RlLCBKTk9E
RV9DUkVBVEVEKTsKKwkJYnJlYWs7CisKKwlkZWZhdWx0OgorCQlyZXR1cm4gUkVURVJSKC1FSU8p
OworCX0KKworCWpub2RlX3NldF9ibG9jayhub2RlLCAmYmxvY2spOworCXJldHVybiAwOworfQor
CisvKioKKyAqIG1vdmVfY29vcmQgLSBtb3ZlIGNvb3JkaW5hdGUgZm9yd2FyZAorICogQHVmX2Nv
b3JkOgorICoKKyAqIE1vdmUgY29vcmRpbmF0ZSBvbmUgZGF0YSBibG9jayBwb2ludGVyIGZvcndh
cmQuIFJldHVybiAxIGlmIGNvb3JkIGlzIHNldCB0bworICogdGhlIGxhc3Qgb25lIGFscmVhZHkg
b3IgaXMgaW52YWxpZC4KKyAqLworc3RhdGljIGludCBtb3ZlX2Nvb3JkKHVmX2Nvb3JkX3QgKnVm
X2Nvb3JkKQoreworCXN0cnVjdCBleHRlbnRfY29vcmRfZXh0ZW5zaW9uICpleHRfY29vcmQ7CisK
KwlpZiAodWZfY29vcmQtPnZhbGlkID09IDApCisJCXJldHVybiAxOworCWV4dF9jb29yZCA9ICZ1
Zl9jb29yZC0+ZXh0ZW5zaW9uLmV4dGVudDsKKwlleHRfY29vcmQtPnBvc19pbl91bml0ICsrOwor
CWlmIChleHRfY29vcmQtPnBvc19pbl91bml0IDwgZXh0X2Nvb3JkLT53aWR0aCkKKwkJLyogY29v
cmRpbmF0ZSBtb3ZlZCB3aXRoaW4gdGhlIHVuaXQgKi8KKwkJcmV0dXJuIDA7CisKKwkvKiBlbmQg
b2YgdW5pdCBpcyByZWFjaGVkLiBUcnkgdG8gbW92ZSB0byBuZXh0IHVuaXQgKi8KKwlleHRfY29v
cmQtPnBvc19pbl91bml0ID0gMDsKKwl1Zl9jb29yZC0+Y29vcmQudW5pdF9wb3MgKys7CisJaWYg
KHVmX2Nvb3JkLT5jb29yZC51bml0X3BvcyA8IGV4dF9jb29yZC0+bnJfdW5pdHMpIHsKKwkJLyog
Y29vcmRpbmF0ZSBtb3ZlZCB0byBuZXh0IHVuaXQgKi8KKwkJZXh0X2Nvb3JkLT5leHRfb2Zmc2V0
ICs9IHNpemVvZihyZWlzZXI0X2V4dGVudCk7CisJCWV4dF9jb29yZC0+d2lkdGggPQorCQkJZXh0
ZW50X2dldF93aWR0aChleHRfYnlfb2Zmc2V0CisJCQkJCSAodWZfY29vcmQtPmNvb3JkLm5vZGUs
CisJCQkJCSAgZXh0X2Nvb3JkLT5leHRfb2Zmc2V0KSk7CisJCU9OX0RFQlVHKGV4dF9jb29yZC0+
ZXh0ZW50ID0KKwkJCSAqZXh0X2J5X29mZnNldCh1Zl9jb29yZC0+Y29vcmQubm9kZSwKKwkJCQkJ
ZXh0X2Nvb3JkLT5leHRfb2Zmc2V0KSk7CisJCXJldHVybiAwOworCX0KKwkvKiBlbmQgb2YgaXRl
bSBpcyByZWFjaGVkICovCisJdWZfY29vcmQtPnZhbGlkID0gMDsKKwlyZXR1cm4gMTsKK30KKwor
LyoqCisgKiBvdmVyd3JpdGVfZXh0ZW50IC0KKyAqIEBpbm9kZToKKyAqCisgKiBSZXR1cm5zIG51
bWJlciBvZiBoYW5kbGVkIGpub2Rlcy4KKyAqLworc3RhdGljIGludCBvdmVyd3JpdGVfZXh0ZW50
KHVmX2Nvb3JkX3QgKnVmX2Nvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqa2V5LAorCQkJICAgIGpu
b2RlICoqam5vZGVzLCBpbnQgY291bnQsIGludCAqcGx1Z2dlZF9ob2xlKQoreworCWludCByZXN1
bHQ7CisJcmVpc2VyNF9rZXkgazsKKwlpbnQgaTsKKwlqbm9kZSAqbm9kZTsKKworCWsgPSAqa2V5
OworCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSArKykgeworCQlub2RlID0gam5vZGVzW2ldOwor
CQlpZiAoKmpub2RlX2dldF9ibG9jayhub2RlKSA9PSAwKSB7CisJCQlyZXN1bHQgPSBvdmVyd3Jp
dGVfb25lX2Jsb2NrKHVmX2Nvb3JkLCAmaywgbm9kZSwgcGx1Z2dlZF9ob2xlKTsKKwkJCWlmIChy
ZXN1bHQpCisJCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQkvKgorCQkgKiBtYWtlIHN1cmUgdGhh
dCB3ZSBob2xkIGxvbmcgdGVybSBsb2NrZWQgdHdpZyBub2RlIGNvbnRhaW5pbmcKKwkJICogYWxs
IGpub2RlcyB3ZSBhcmUgYWJvdXQgdG8gY2FwdHVyZQorCQkgKi8KKwkJY2hlY2tfam5vZGVzKHVm
X2Nvb3JkLT5saC0+bm9kZSwgJmssIDEpOworCQkvKgorCQkgKiBhc3NpZ24gZmFrZSBibG9jayBu
dW1iZXJzIHRvIGFsbCBqbm9kZXMsIGNhcHR1cmUgYW5kIG1hcmsKKwkJICogdGhlbSBkaXJ0eQor
CQkgKi8KKwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCQlyZXN1bHQgPSByZWlzZXI0X3RyeV9j
YXB0dXJlKG5vZGUsIFpOT0RFX1dSSVRFX0xPQ0ssIDApOworCQlCVUdfT04ocmVzdWx0ICE9IDAp
OworCQlqbm9kZV9tYWtlX2RpcnR5X2xvY2tlZChub2RlKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUo
bm9kZSk7CisKKwkJaWYgKHVmX2Nvb3JkLT52YWxpZCA9PSAwKQorCQkJcmV0dXJuIGkgKyAxOwor
CisJCWNoZWNrX3VmX2Nvb3JkKHVmX2Nvb3JkLCAmayk7CisKKwkJaWYgKG1vdmVfY29vcmQodWZf
Y29vcmQpKSB7CisJCQkvKgorCQkJICogZmFpbGVkIHRvIG1vdmUgdG8gdGhlIG5leHQgbm9kZSBw
b2ludGVyLiBFaXRoZXIgZW5kCisJCQkgKiBvZiBmaWxlIG9yIGVuZCBvZiB0d2lnIG5vZGUgaXMg
cmVhY2hlZC4gSW4gdGhlIGxhdGVyCisJCQkgKiBjYXNlIHdlIG1pZ2h0IGdvIHRvIHRoZSByaWdo
dCBuZWlnaGJvci4KKwkJCSAqLworCQkJdWZfY29vcmQtPnZhbGlkID0gMDsKKwkJCXJldHVybiBp
ICsgMTsKKwkJfQorCQlzZXRfa2V5X29mZnNldCgmaywgZ2V0X2tleV9vZmZzZXQoJmspICsgUEFH
RV9TSVpFKTsKKwl9CisKKwlyZXR1cm4gY291bnQ7Cit9CisKKy8qKgorICogcmVpc2VyNF91cGRh
dGVfZXh0ZW50CisgKiBAZmlsZToKKyAqIEBqbm9kZXM6CisgKiBAY291bnQ6CisgKiBAb2ZmOgor
ICoKKyAqLworaW50IHJlaXNlcjRfdXBkYXRlX2V4dGVudChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBq
bm9kZSAqbm9kZSwgbG9mZl90IHBvcywKKwkJICBpbnQgKnBsdWdnZWRfaG9sZSkKK3sKKwlpbnQg
cmVzdWx0OworCXpub2RlICpsb2FkZWQ7CisJdWZfY29vcmRfdCB1Zl9jb29yZDsKKwljb29yZF90
ICpjb29yZDsKKwlsb2NrX2hhbmRsZSBsaDsKKwlyZWlzZXI0X2tleSBrZXk7CisKKwlhc3NlcnQo
IiIsIHJlaXNlcjRfbG9ja19jb3VudGVycygpLT5kX3JlZnMgPT0gMCk7CisKKwlrZXlfYnlfaW5v
ZGVfYW5kX29mZnNldF9jb21tb24oaW5vZGUsIHBvcywgJmtleSk7CisKKwlpbml0X3VmX2Nvb3Jk
KCZ1Zl9jb29yZCwgJmxoKTsKKwljb29yZCA9ICZ1Zl9jb29yZC5jb29yZDsKKwlyZXN1bHQgPSBm
aW5kX2ZpbGVfaXRlbV9ub2hpbnQoY29vcmQsICZsaCwgJmtleSwKKwkJCQkgICAgICAgWk5PREVf
V1JJVEVfTE9DSywgaW5vZGUpOworCWlmIChJU19DQktFUlIocmVzdWx0KSkgeworCQlhc3NlcnQo
IiIsIHJlaXNlcjRfbG9ja19jb3VudGVycygpLT5kX3JlZnMgPT0gMCk7CisJCXJldHVybiByZXN1
bHQ7CisJfQorCisJcmVzdWx0ID0gemxvYWQoY29vcmQtPm5vZGUpOworCUJVR19PTihyZXN1bHQg
IT0gMCk7CisJbG9hZGVkID0gY29vcmQtPm5vZGU7CisKKwlpZiAoY29vcmQtPmJldHdlZW4gPT0g
QUZURVJfVU5JVCkgeworCQkvKgorCQkgKiBhcHBlbmQgZXhpc3RpbmcgZXh0ZW50IGl0ZW0gd2l0
aCB1bmFsbG9jYXRlZCBleHRlbnQgb2Ygd2lkdGgKKwkJICogbnJfam5vZGVzCisJCSAqLworCQlp
bml0X2Nvb3JkX2V4dGVuc2lvbl9leHRlbnQoJnVmX2Nvb3JkLAorCQkJCQkgICAgZ2V0X2tleV9v
ZmZzZXQoJmtleSkpOworCQlyZXN1bHQgPSBhcHBlbmRfbGFzdF9leHRlbnQoJnVmX2Nvb3JkLCAm
a2V5LAorCQkJCQkgICAgJm5vZGUsIDEpOworCX0gZWxzZSBpZiAoY29vcmQtPmJldHdlZW4gPT0g
QVRfVU5JVCkgeworCQkvKgorCQkgKiBvdmVyd3JpdGUKKwkJICogbm90IG9wdGltYWwgeWV0LiBX
aWxsIGJlIG9wdGltaXplZCBpZiBuZXcgd3JpdGUgd2lsbCBzaG93CisJCSAqIHBlcmZvcm1hbmNl
IHdpbi4KKwkJICovCisJCWluaXRfY29vcmRfZXh0ZW5zaW9uX2V4dGVudCgmdWZfY29vcmQsCisJ
CQkJCSAgICBnZXRfa2V5X29mZnNldCgma2V5KSk7CisJCXJlc3VsdCA9IG92ZXJ3cml0ZV9leHRl
bnQoJnVmX2Nvb3JkLCAma2V5LAorCQkJCQkgICZub2RlLCAxLCBwbHVnZ2VkX2hvbGUpOworCX0g
ZWxzZSB7CisJCS8qCisJCSAqIHRoZXJlIGFyZSBubyBpdGVtcyBvZiB0aGlzIGZpbGUgaW4gdGhl
IHRyZWUgeWV0LiBDcmVhdGUKKwkJICogZmlyc3QgaXRlbSBvZiB0aGUgZmlsZSBpbnNlcnRpbmcg
b25lIHVuYWxsb2NhdGVkIGV4dGVudCBvZgorCQkgKiB3aWR0aCBucl9qbm9kZXMKKwkJICovCisJ
CXJlc3VsdCA9IGluc2VydF9maXJzdF9leHRlbnQoJnVmX2Nvb3JkLCAma2V5LCAmbm9kZSwgMSwg
aW5vZGUpOworCX0KKwlhc3NlcnQoIiIsIHJlc3VsdCA9PSAxIHx8IHJlc3VsdCA8IDApOworCXpy
ZWxzZShsb2FkZWQpOworCWRvbmVfbGgoJmxoKTsKKwlhc3NlcnQoIiIsIHJlaXNlcjRfbG9ja19j
b3VudGVycygpLT5kX3JlZnMgPT0gMCk7CisJcmV0dXJuIChyZXN1bHQgPT0gMSkgPyAwIDogcmVz
dWx0OworfQorCisvKioKKyAqIHVwZGF0ZV9leHRlbnRzCisgKiBAZmlsZToKKyAqIEBqbm9kZXM6
CisgKiBAY291bnQ6CisgKiBAb2ZmOgorICoKKyAqLworc3RhdGljIGludCB1cGRhdGVfZXh0ZW50
cyhzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGlub2RlICppbm9kZSwKKwkJCSAgam5vZGUgKipq
bm9kZXMsIGludCBjb3VudCwgbG9mZl90IHBvcykKK3sKKwlzdHJ1Y3QgaGludCBoaW50OworCXJl
aXNlcjRfa2V5IGtleTsKKwlpbnQgcmVzdWx0OworCXpub2RlICpsb2FkZWQ7CisKKwlyZXN1bHQg
PSBsb2FkX2ZpbGVfaGludChmaWxlLCAmaGludCk7CisJQlVHX09OKHJlc3VsdCAhPSAwKTsKKwor
CWlmIChjb3VudCAhPSAwKQorCQkvKgorCQkgKiBjb3VudCA9PSAwIGlzIHNwZWNpYWwgY2FzZTog
ZXhwYW5kaW5nIHRydW5jYXRlCisJCSAqLworCQlwb3MgPSAobG9mZl90KWluZGV4X2pub2RlKGpu
b2Rlc1swXSkgPDwgUEFHRV9TSElGVDsKKwlrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24o
aW5vZGUsIHBvcywgJmtleSk7CisKKwlhc3NlcnQoIiIsIHJlaXNlcjRfbG9ja19jb3VudGVycygp
LT5kX3JlZnMgPT0gMCk7CisKKwlkbyB7CisJCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVtKCZoaW50
LCAma2V5LCBaTk9ERV9XUklURV9MT0NLLCBpbm9kZSk7CisJCWlmIChJU19DQktFUlIocmVzdWx0
KSkgeworCQkJYXNzZXJ0KCIiLCByZWlzZXI0X2xvY2tfY291bnRlcnMoKS0+ZF9yZWZzID09IDAp
OworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCisJCXJlc3VsdCA9IHpsb2FkKGhpbnQuZXh0X2Nv
b3JkLmNvb3JkLm5vZGUpOworCQlCVUdfT04ocmVzdWx0ICE9IDApOworCQlsb2FkZWQgPSBoaW50
LmV4dF9jb29yZC5jb29yZC5ub2RlOworCisJCWlmIChoaW50LmV4dF9jb29yZC5jb29yZC5iZXR3
ZWVuID09IEFGVEVSX1VOSVQpIHsKKwkJCS8qCisJCQkgKiBhcHBlbmQgZXhpc3RpbmcgZXh0ZW50
IGl0ZW0gd2l0aCB1bmFsbG9jYXRlZCBleHRlbnQKKwkJCSAqIG9mIHdpZHRoIG5yX2pub2Rlcwor
CQkJICovCisJCQlpZiAoaGludC5leHRfY29vcmQudmFsaWQgPT0gMCkKKwkJCQkvKiBOT1RFOiBn
ZXQgc3RhdGlzdGljcyBvbiB0aGlzICovCisJCQkJaW5pdF9jb29yZF9leHRlbnNpb25fZXh0ZW50
KCZoaW50LmV4dF9jb29yZCwKKwkJCQkJCQkgICAgZ2V0X2tleV9vZmZzZXQoJmtleSkpOworCQkJ
cmVzdWx0ID0gYXBwZW5kX2xhc3RfZXh0ZW50KCZoaW50LmV4dF9jb29yZCwgJmtleSwKKwkJCQkJ
CSAgICBqbm9kZXMsIGNvdW50KTsKKwkJfSBlbHNlIGlmIChoaW50LmV4dF9jb29yZC5jb29yZC5i
ZXR3ZWVuID09IEFUX1VOSVQpIHsKKwkJCS8qCisJCQkgKiBvdmVyd3JpdGUKKwkJCSAqIG5vdCBv
cHRpbWFsIHlldC4gV2lsbCBiZSBvcHRpbWl6ZWQgaWYgbmV3IHdyaXRlIHdpbGwKKwkJCSAqIHNo
b3cgcGVyZm9ybWFuY2Ugd2luLgorCQkJICovCisJCQlpZiAoaGludC5leHRfY29vcmQudmFsaWQg
PT0gMCkKKwkJCQkvKiBOT1RFOiBnZXQgc3RhdGlzdGljcyBvbiB0aGlzICovCisJCQkJaW5pdF9j
b29yZF9leHRlbnNpb25fZXh0ZW50KCZoaW50LmV4dF9jb29yZCwKKwkJCQkJCQkgICAgZ2V0X2tl
eV9vZmZzZXQoJmtleSkpOworCQkJcmVzdWx0ID0gb3ZlcndyaXRlX2V4dGVudCgmaGludC5leHRf
Y29vcmQsICZrZXksCisJCQkJCQkgIGpub2RlcywgY291bnQsIE5VTEwpOworCQl9IGVsc2Ugewor
CQkJLyoKKwkJCSAqIHRoZXJlIGFyZSBubyBpdGVtcyBvZiB0aGlzIGZpbGUgaW4gdGhlIHRyZWUK
KwkJCSAqIHlldC4gQ3JlYXRlIGZpcnN0IGl0ZW0gb2YgdGhlIGZpbGUgaW5zZXJ0aW5nIG9uZQor
CQkJICogdW5hbGxvY2F0ZWQgZXh0ZW50IG9mICogd2lkdGggbnJfam5vZGVzCisJCQkgKi8KKwkJ
CXJlc3VsdCA9IGluc2VydF9maXJzdF9leHRlbnQoJmhpbnQuZXh0X2Nvb3JkLCAma2V5LAorCQkJ
CQkJICAgICBqbm9kZXMsIGNvdW50LCBpbm9kZSk7CisJCX0KKwkJenJlbHNlKGxvYWRlZCk7CisJ
CWlmIChyZXN1bHQgPCAwKSB7CisJCQlkb25lX2xoKGhpbnQuZXh0X2Nvb3JkLmxoKTsKKwkJCWJy
ZWFrOworCQl9CisKKwkJam5vZGVzICs9IHJlc3VsdDsKKwkJY291bnQgLT0gcmVzdWx0OworCQlz
ZXRfa2V5X29mZnNldCgma2V5LCBnZXRfa2V5X29mZnNldCgma2V5KSArIHJlc3VsdCAqIFBBR0Vf
U0laRSk7CisKKwkJLyogc2VhbCBhbmQgdW5sb2NrIHpub2RlICovCisJCWlmIChoaW50LmV4dF9j
b29yZC52YWxpZCkKKwkJCXJlaXNlcjRfc2V0X2hpbnQoJmhpbnQsICZrZXksIFpOT0RFX1dSSVRF
X0xPQ0spOworCQllbHNlCisJCQlyZWlzZXI0X3Vuc2V0X2hpbnQoJmhpbnQpOworCisJfSB3aGls
ZSAoY291bnQgPiAwKTsKKworCXNhdmVfZmlsZV9oaW50KGZpbGUsICZoaW50KTsKKwlhc3NlcnQo
IiIsIHJlaXNlcjRfbG9ja19jb3VudGVycygpLT5kX3JlZnMgPT0gMCk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyoqCisgKiB3cml0ZV9leHRlbnRfcmVzZXJ2ZV9zcGFjZSAtIHJlc2VydmUgc3Bh
Y2UgZm9yIGV4dGVudCB3cml0ZSBvcGVyYXRpb24KKyAqIEBpbm9kZToKKyAqCisgKiBFc3RpbWF0
ZXMgYW5kIHJlc2VydmVzIHNwYWNlIHdoaWNoIG1heSBiZSByZXF1aXJlZCBmb3Igd3JpdGluZwor
ICogV1JJVEVfR1JBTlVMQVJJVFkgcGFnZXMgb2YgZmlsZS4KKyAqLworc3RhdGljIGludCB3cml0
ZV9leHRlbnRfcmVzZXJ2ZV9zcGFjZShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCV9fdTY0IGNv
dW50OworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCS8qCisJICogdG8gd3JpdGUgV1JJVEVfR1JB
TlVMQVJJVFkgcGFnZXMgdG8gYSBmaWxlIGJ5IGV4dGVudHMgd2UgaGF2ZSB0bworCSAqIHJlc2Vy
dmUgZGlzayBzcGFjZSBmb3I6CisKKwkgKiAxLiBmaW5kX2ZpbGVfaXRlbSBtYXkgaGF2ZSB0byBp
bnNlcnQgZW1wdHkgbm9kZSB0byB0aGUgdHJlZSAoZW1wdHkKKwkgKiBsZWFmIG5vZGUgYmV0d2Vl
biB0d28gZXh0ZW50IGl0ZW1zKS4gVGhpcyByZXF1aXJlcyAxIGJsb2NrIGFuZAorCSAqIG51bWJl
ciBvZiBibG9ja3Mgd2hpY2ggYXJlIG5lY2Vzc2FyeSB0byBwZXJmb3JtIGluc2VydGlvbiBvZiBh
bgorCSAqIGludGVybmFsIGl0ZW0gaW50byB0d2lnIGxldmVsLgorCisJICogMi4gZm9yIGVhY2gg
b2Ygd3JpdHRlbiBwYWdlcyB0aGVyZSBtaWdodCBiZSBuZWVkZWQgMSBibG9jayBhbmQKKwkgKiBu
dW1iZXIgb2YgYmxvY2tzIHdoaWNoIG1pZ2h0IGJlIG5lY2Vzc2FyeSB0byBwZXJmb3JtIGluc2Vy
dGlvbiBvZiBvcgorCSAqIHBhc3RlIHRvIGFuIGV4dGVudCBpdGVtLgorCisJICogMy4gc3RhdCBk
YXRhIHVwZGF0ZQorCSAqLworCXRyZWUgPSByZWlzZXI0X3RyZWVfYnlfaW5vZGUoaW5vZGUpOwor
CWNvdW50ID0gZXN0aW1hdGVfb25lX2luc2VydF9pdGVtKHRyZWUpICsKKwkJV1JJVEVfR1JBTlVM
QVJJVFkgKiAoMSArIGVzdGltYXRlX29uZV9pbnNlcnRfaW50b19pdGVtKHRyZWUpKSArCisJCWVz
dGltYXRlX29uZV9pbnNlcnRfaXRlbSh0cmVlKTsKKwlncmFiX3NwYWNlX2VuYWJsZSgpOworCXJl
dHVybiByZWlzZXI0X2dyYWJfc3BhY2UoY291bnQsIDAgLyogZmxhZ3MgKi8pOworfQorCisvKgor
ICogZmlsZW1hcF9jb3B5X2Zyb21fdXNlciBubyBsb25nZXIgZXhpc3RzIGluIGdlbmVyaWMgY29k
ZSwgYmVjYXVzZSBpdAorICogaXMgZGVhZGxvY2t5IChjb3B5aW5nIGZyb20gdXNlciB3aGlsZSBo
b2xkaW5nIHRoZSBwYWdlIGxvY2sgaXMgYmFkKS4KKyAqIEFzIGEgdGVtcG9yYXJ5IGZpeCBmb3Ig
cmVpc2VyNCwganVzdCBkZWZpbmUgaXQgaGVyZS4KKyAqLworc3RhdGljIGlubGluZSBzaXplX3QK
K2ZpbGVtYXBfY29weV9mcm9tX3VzZXIoc3RydWN0IHBhZ2UgKnBhZ2UsIHVuc2lnbmVkIGxvbmcg
b2Zmc2V0LAorCQkJY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwgdW5zaWduZWQgYnl0ZXMpCit7CisJ
Y2hhciAqa2FkZHI7CisJaW50IGxlZnQ7CisKKwlrYWRkciA9IGttYXBfYXRvbWljKHBhZ2UpOwor
CWxlZnQgPSBfX2NvcHlfZnJvbV91c2VyX2luYXRvbWljKGthZGRyICsgb2Zmc2V0LCBidWYsIGJ5
dGVzKTsKKwlrdW5tYXBfYXRvbWljKGthZGRyKTsKKworCWlmIChsZWZ0ICE9IDApIHsKKwkJLyog
RG8gaXQgdGhlIHNsb3cgd2F5ICovCisJCWthZGRyID0ga21hcChwYWdlKTsKKwkJbGVmdCA9IF9f
Y29weV9mcm9tX3VzZXIoa2FkZHIgKyBvZmZzZXQsIGJ1ZiwgYnl0ZXMpOworCQlrdW5tYXAocGFn
ZSk7CisJfQorCXJldHVybiBieXRlcyAtIGxlZnQ7Cit9CisKKy8qKgorICogcmVpc2VyNF93cml0
ZV9leHRlbnQgLSB3cml0ZSBtZXRob2Qgb2YgZXh0ZW50IGl0ZW0gcGx1Z2luCisgKiBAZmlsZTog
ZmlsZSB0byB3cml0ZSB0bworICogQGJ1ZjogYWRkcmVzcyBvZiB1c2VyLXNwYWNlIGJ1ZmZlcgor
ICogQGNvdW50OiBudW1iZXIgb2YgYnl0ZXMgdG8gd3JpdGUKKyAqIEBwb3M6IHBvc2l0aW9uIGlu
IGZpbGUgdG8gd3JpdGUgdG8KKyAqCisgKi8KK3NzaXplX3QgcmVpc2VyNF93cml0ZV9leHRlbnQo
c3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBpbm9kZSAqIGlub2RlLAorCQkJICAgICBjb25zdCBj
aGFyIF9fdXNlciAqYnVmLCBzaXplX3QgY291bnQsIGxvZmZfdCAqcG9zKQoreworCWludCBoYXZl
X3RvX3VwZGF0ZV9leHRlbnQ7CisJaW50IG5yX3BhZ2VzLCBucl9kaXJ0eTsKKwlzdHJ1Y3QgcGFn
ZSAqcGFnZTsKKwlqbm9kZSAqam5vZGVzW1dSSVRFX0dSQU5VTEFSSVRZICsgMV07CisJdW5zaWdu
ZWQgbG9uZyBpbmRleDsKKwl1bnNpZ25lZCBsb25nIGVuZDsKKwlpbnQgaTsKKwlpbnQgdG9fcGFn
ZSwgcGFnZV9vZmY7CisJc2l6ZV90IGxlZnQsIHdyaXR0ZW47CisJaW50IHJlc3VsdCA9IDA7CisK
KwlpZiAod3JpdGVfZXh0ZW50X3Jlc2VydmVfc3BhY2UoaW5vZGUpKQorCQlyZXR1cm4gUkVURVJS
KC1FTk9TUEMpOworCisJaWYgKGNvdW50ID09IDApIHsKKwkJLyogdHJ1bmNhdGUgY2FzZSAqLwor
CQl1cGRhdGVfZXh0ZW50cyhmaWxlLCBpbm9kZSwgam5vZGVzLCAwLCAqcG9zKTsKKwkJcmV0dXJu
IDA7CisJfQorCisJQlVHX09OKGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gIT0g
TlVMTCk7CisKKwlsZWZ0ID0gY291bnQ7CisJaW5kZXggPSAqcG9zID4+IFBBR0VfU0hJRlQ7CisJ
LyogY2FsY3VsYXRlIG51bWJlciBvZiBwYWdlcyB3aGljaCBhcmUgdG8gYmUgd3JpdHRlbiAqLwor
ICAgICAgCWVuZCA9ICgoKnBvcyArIGNvdW50IC0gMSkgPj4gUEFHRV9TSElGVCk7CisJbnJfcGFn
ZXMgPSBlbmQgLSBpbmRleCArIDE7CisJbnJfZGlydHkgPSAwOworCWFzc2VydCgiIiwgbnJfcGFn
ZXMgPD0gV1JJVEVfR1JBTlVMQVJJVFkgKyAxKTsKKworCS8qIGdldCBwYWdlcyBhbmQgam5vZGVz
ICovCisJZm9yIChpID0gMDsgaSA8IG5yX3BhZ2VzOyBpICsrKSB7CisJCXBhZ2UgPSBmaW5kX29y
X2NyZWF0ZV9wYWdlKGlub2RlLT5pX21hcHBpbmcsIGluZGV4ICsgaSwKKwkJCQkJICAgcmVpc2Vy
NF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCQlpZiAocGFnZSA9PSBOVUxMKSB7CisJCQlucl9wYWdl
cyA9IGk7CisJCQlyZXN1bHQgPSBSRVRFUlIoLUVOT01FTSk7CisJCQlnb3RvIG91dDsKKwkJfQor
CisJCWpub2Rlc1tpXSA9IGpub2RlX29mX3BhZ2UocGFnZSk7CisJCWlmIChJU19FUlIoam5vZGVz
W2ldKSkgeworCQkJdW5sb2NrX3BhZ2UocGFnZSk7CisJCQlwdXRfcGFnZShwYWdlKTsKKwkJCW5y
X3BhZ2VzID0gaTsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRU5PTUVNKTsKKwkJCWdvdG8gb3V0Owor
CQl9CisJCS8qIHByZXZlbnQgam5vZGUgYW5kIHBhZ2UgZnJvbSBkaXNjb25uZWN0aW5nICovCisJ
CUpGX1NFVChqbm9kZXNbaV0sIEpOT0RFX1dSSVRFX1BSRVBBUkVEKTsKKwkJdW5sb2NrX3BhZ2Uo
cGFnZSk7CisJfQorCisJQlVHX09OKGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20g
IT0gTlVMTCk7CisKKwloYXZlX3RvX3VwZGF0ZV9leHRlbnQgPSAwOworCisJcGFnZV9vZmYgPSAo
KnBvcyAmIChQQUdFX1NJWkUgLSAxKSk7CisJZm9yIChpID0gMDsgaSA8IG5yX3BhZ2VzOyBpICsr
KSB7CisJCXRvX3BhZ2UgPSBQQUdFX1NJWkUgLSBwYWdlX29mZjsKKwkJaWYgKHRvX3BhZ2UgPiBs
ZWZ0KQorCQkJdG9fcGFnZSA9IGxlZnQ7CisJCXBhZ2UgPSBqbm9kZV9wYWdlKGpub2Rlc1tpXSk7
CisJCWlmIChwYWdlX29mZnNldChwYWdlKSA8IGlub2RlLT5pX3NpemUgJiYKKwkJICAgICFQYWdl
VXB0b2RhdGUocGFnZSkgJiYgdG9fcGFnZSAhPSBQQUdFX1NJWkUpIHsKKwkJCS8qCisJCQkgKiB0
aGUgYWJvdmUgaXMgbm90IG9wdGltYWwgZm9yIHBhcnRpYWwgd3JpdGUgdG8gbGFzdAorCQkJICog
cGFnZSBvZiBmaWxlIHdoZW4gZmlsZSBzaXplIGlzIG5vdCBhdCBib3VuZGFyeSBvZgorCQkJICog
cGFnZQorCQkJICovCisJCQlsb2NrX3BhZ2UocGFnZSk7CisJCQlpZiAoIVBhZ2VVcHRvZGF0ZShw
YWdlKSkgeworCQkJCXJlc3VsdCA9IHJlYWRwYWdlX3VuaXhfZmlsZShOVUxMLCBwYWdlKTsKKwkJ
CQlCVUdfT04ocmVzdWx0ICE9IDApOworCQkJCS8qIHdhaXQgZm9yIHJlYWQgY29tcGxldGlvbiAq
LworCQkJCWxvY2tfcGFnZShwYWdlKTsKKwkJCQlCVUdfT04oIVBhZ2VVcHRvZGF0ZShwYWdlKSk7
CisJCQl9IGVsc2UKKwkJCQlyZXN1bHQgPSAwOworCQkJdW5sb2NrX3BhZ2UocGFnZSk7CisJCX0K
KworCQlCVUdfT04oZ2V0X2N1cnJlbnRfY29udGV4dCgpLT50cmFucy0+YXRvbSAhPSBOVUxMKTsK
KwkJZmF1bHRfaW5fcGFnZXNfcmVhZGFibGUoYnVmLCB0b19wYWdlKTsKKwkJQlVHX09OKGdldF9j
dXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gIT0gTlVMTCk7CisKKwkJbG9ja19wYWdlKHBh
Z2UpOworCQlpZiAoIVBhZ2VVcHRvZGF0ZShwYWdlKSAmJiB0b19wYWdlICE9IFBBR0VfU0laRSkK
KwkJCXplcm9fdXNlcl9zZWdtZW50cyhwYWdlLCAwLCBwYWdlX29mZiwKKwkJCQkJICAgcGFnZV9v
ZmYgKyB0b19wYWdlLAorCQkJCQkgICBQQUdFX1NJWkUpOworCisJCXdyaXR0ZW4gPSBmaWxlbWFw
X2NvcHlfZnJvbV91c2VyKHBhZ2UsIHBhZ2Vfb2ZmLCBidWYsIHRvX3BhZ2UpOworCQlpZiAodW5s
aWtlbHkod3JpdHRlbiAhPSB0b19wYWdlKSkgeworCQkJdW5sb2NrX3BhZ2UocGFnZSk7CisJCQly
ZXN1bHQgPSBSRVRFUlIoLUVGQVVMVCk7CisJCQlicmVhazsKKwkJfQorCisJCWZsdXNoX2RjYWNo
ZV9wYWdlKHBhZ2UpOworCQlzZXRfcGFnZV9kaXJ0eV9ub3RhZyhwYWdlKTsKKwkJdW5sb2NrX3Bh
Z2UocGFnZSk7CisJCW5yX2RpcnR5Kys7CisKKwkJbWFya19wYWdlX2FjY2Vzc2VkKHBhZ2UpOwor
CQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7CisKKwkJaWYgKGpub2Rlc1tpXS0+YmxvY2tuciA9PSAw
KQorCQkJaGF2ZV90b191cGRhdGVfZXh0ZW50ICsrOworCisJCXBhZ2Vfb2ZmID0gMDsKKwkJYnVm
ICs9IHRvX3BhZ2U7CisJCWxlZnQgLT0gdG9fcGFnZTsKKwkJQlVHX09OKGdldF9jdXJyZW50X2Nv
bnRleHQoKS0+dHJhbnMtPmF0b20gIT0gTlVMTCk7CisJfQorCisJaWYgKGhhdmVfdG9fdXBkYXRl
X2V4dGVudCkgeworCQl1cGRhdGVfZXh0ZW50cyhmaWxlLCBpbm9kZSwgam5vZGVzLCBucl9kaXJ0
eSwgKnBvcyk7CisJfSBlbHNlIHsKKwkJZm9yIChpID0gMDsgaSA8IG5yX2RpcnR5OyBpICsrKSB7
CisJCQlpbnQgcmV0OworCQkJc3Bpbl9sb2NrX2pub2RlKGpub2Rlc1tpXSk7CisJCQlyZXQgPSBy
ZWlzZXI0X3RyeV9jYXB0dXJlKGpub2Rlc1tpXSwKKwkJCQkJCSAgICAgWk5PREVfV1JJVEVfTE9D
SywgMCk7CisJCQlCVUdfT04ocmV0ICE9IDApOworCQkJam5vZGVfbWFrZV9kaXJ0eV9sb2NrZWQo
am5vZGVzW2ldKTsKKwkJCXNwaW5fdW5sb2NrX2pub2RlKGpub2Rlc1tpXSk7CisJCX0KKwl9Citv
dXQ6CisJZm9yIChpID0gMDsgaSA8IG5yX3BhZ2VzOyBpICsrKSB7CisJCXB1dF9wYWdlKGpub2Rl
X3BhZ2Uoam5vZGVzW2ldKSk7CisJCUpGX0NMUihqbm9kZXNbaV0sIEpOT0RFX1dSSVRFX1BSRVBB
UkVEKTsKKwkJanB1dChqbm9kZXNbaV0pOworCX0KKworCS8qIHRoZSBvbmx5IGVycm9ycyBoYW5k
bGVkIHNvIGZhciBpcyBFTk9NRU0gYW5kCisJICAgRUZBVUxUIG9uIGNvcHlfZnJvbV91c2VyICAq
LworCisJcmV0dXJuIChjb3VudCAtIGxlZnQpID8gKGNvdW50IC0gbGVmdCkgOiByZXN1bHQ7Cit9
CisKK2ludCByZWlzZXI0X2RvX3JlYWRwYWdlX2V4dGVudChyZWlzZXI0X2V4dGVudCAqIGV4dCwg
cmVpc2VyNF9ibG9ja19uciBwb3MsCisJCQkgICAgICAgc3RydWN0IHBhZ2UgKnBhZ2UpCit7CisJ
am5vZGUgKmo7CisJc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmc7CisJdW5zaWduZWQgbG9u
ZyBpbmRleDsKKwlvaWRfdCBvaWQ7CisJcmVpc2VyNF9ibG9ja19uciBibG9jazsKKworCW1hcHBp
bmcgPSBwYWdlLT5tYXBwaW5nOworCW9pZCA9IGdldF9pbm9kZV9vaWQobWFwcGluZy0+aG9zdCk7
CisJaW5kZXggPSBwYWdlLT5pbmRleDsKKworCXN3aXRjaCAoc3RhdGVfb2ZfZXh0ZW50KGV4dCkp
IHsKKwljYXNlIEhPTEVfRVhURU5UOgorCQkvKgorCQkgKiBpdCBpcyBwb3NzaWJsZSB0byBoYXZl
IGhvbGUgcGFnZSB3aXRoIGpub2RlLCBpZiBwYWdlIHdhcworCQkgKiBlZmx1c2hlZCBwcmV2aW91
c2x5LgorCQkgKi8KKwkJaiA9IGpmaW5kKG1hcHBpbmcsIGluZGV4KTsKKwkJaWYgKGogPT0gTlVM
TCkgeworCQkJemVyb191c2VyKHBhZ2UsIDAsIFBBR0VfU0laRSk7CisJCQlTZXRQYWdlVXB0b2Rh
dGUocGFnZSk7CisJCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJCXJldHVybiAwOworCQl9CisJCXNw
aW5fbG9ja19qbm9kZShqKTsKKwkJaWYgKCFqbm9kZV9wYWdlKGopKSB7CisJCQlqbm9kZV9hdHRh
Y2hfcGFnZShqLCBwYWdlKTsKKwkJfSBlbHNlIHsKKwkJCUJVR19PTihqbm9kZV9wYWdlKGopICE9
IHBhZ2UpOworCQkJYXNzZXJ0KCJ2cy0xNTA0Iiwgam5vZGVfcGFnZShqKSA9PSBwYWdlKTsKKwkJ
fQorCQlibG9jayA9ICpqbm9kZV9nZXRfaW9fYmxvY2soaik7CisJCXNwaW5fdW5sb2NrX2pub2Rl
KGopOworCQlpZiAoYmxvY2sgPT0gMCkgeworCQkJemVyb191c2VyKHBhZ2UsIDAsIFBBR0VfU0la
RSk7CisJCQlTZXRQYWdlVXB0b2RhdGUocGFnZSk7CisJCQl1bmxvY2tfcGFnZShwYWdlKTsKKwkJ
CWpwdXQoaik7CisJCQlyZXR1cm4gMDsKKwkJfQorCQlicmVhazsKKworCWNhc2UgQUxMT0NBVEVE
X0VYVEVOVDoKKwkJaiA9IGpub2RlX29mX3BhZ2UocGFnZSk7CisJCWlmIChJU19FUlIoaikpCisJ
CQlyZXR1cm4gUFRSX0VSUihqKTsKKwkJaWYgKCpqbm9kZV9nZXRfYmxvY2soaikgPT0gMCkgewor
CQkJcmVpc2VyNF9ibG9ja19uciBibG9ja25yOworCisJCQlibG9ja25yID0gZXh0ZW50X2dldF9z
dGFydChleHQpICsgcG9zOworCQkJam5vZGVfc2V0X2Jsb2NrKGosICZibG9ja25yKTsKKwkJfSBl
bHNlCisJCQlhc3NlcnQoInZzLTE0MDMiLAorCQkJICAgICAgIGotPmJsb2NrbnIgPT0gZXh0ZW50
X2dldF9zdGFydChleHQpICsgcG9zKTsKKwkJYnJlYWs7CisKKwljYXNlIFVOQUxMT0NBVEVEX0VY
VEVOVDoKKwkJaiA9IGpmaW5kKG1hcHBpbmcsIGluZGV4KTsKKwkJYXNzZXJ0KCJuaWtpdGEtMjY4
OCIsIGopOworCQlhc3NlcnQoInZzLTE0MjYiLCBqbm9kZV9wYWdlKGopID09IE5VTEwpOworCisJ
CXNwaW5fbG9ja19qbm9kZShqKTsKKwkJam5vZGVfYXR0YWNoX3BhZ2UoaiwgcGFnZSk7CisJCXNw
aW5fdW5sb2NrX2pub2RlKGopOworCQlicmVhazsKKworCWRlZmF1bHQ6CisJCXdhcm5pbmcoInZz
LTk1NyIsICJ3cm9uZyBleHRlbnRcbiIpOworCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCX0KKwor
CUJVR19PTihqID09IDApOworCXJlaXNlcjRfcGFnZV9pbyhwYWdlLCBqLCBSRUFELCByZWlzZXI0
X2N0eF9nZnBfbWFza19nZXQoKSk7CisJanB1dChqKTsKKwlyZXR1cm4gMDsKK30KKworLyogSW1w
bGVtZW50cyBwbHVnaW4tPnUuaXRlbS5zLmZpbGUucmVhZCBvcGVyYXRpb24gZm9yIGV4dGVudCBp
dGVtcy4gKi8KK2ludCByZWlzZXI0X3JlYWRfZXh0ZW50KHN0cnVjdCBmaWxlICpmaWxlLCBmbG93
X3QgKmZsb3csIGhpbnRfdCAqaGludCkKK3sKKwlpbnQgcmVzdWx0OworCXN0cnVjdCBwYWdlICpw
YWdlOworCXVuc2lnbmVkIGxvbmcgcGFnZV9pZHg7CisJdW5zaWduZWQgbG9uZyBwYWdlX29mZjsg
Lyogb2Zmc2V0IHdpdGhpbiB0aGUgcGFnZSB0byBzdGFydCByZWFkIGZyb20gKi8KKwl1bnNpZ25l
ZCBsb25nIHBhZ2VfY250OyAvKiBieXRlcyB3aGljaCBjYW4gYmUgcmVhZCBmcm9tIHRoZSBwYWdl
IHdoaWNoCisJCQkJICAgY29udGFpbnMgZmlsZV9vZmYgKi8KKwlzdHJ1Y3QgYWRkcmVzc19zcGFj
ZSAqbWFwcGluZzsKKwlsb2ZmX3QgZmlsZV9vZmY7IC8qIG9mZnNldCBpbiBhIGZpbGUgdG8gc3Rh
cnQgcmVhZCBmcm9tICovCisJdWZfY29vcmRfdCAqdWZfY29vcmQ7CisJY29vcmRfdCAqY29vcmQ7
CisJc3RydWN0IGV4dGVudF9jb29yZF9leHRlbnNpb24gKmV4dF9jb29yZDsKKwljaGFyICprYWRk
cjsKKworCWFzc2VydCgidnMtMTM1MyIsIGN1cnJlbnRfYmxvY2tzaXplID09IFBBR0VfU0laRSk7
CisJYXNzZXJ0KCJ2cy01NzIiLCBmbG93LT51c2VyID09IDEpOworCWFzc2VydCgidnMtMTM1MSIs
IGZsb3ctPmxlbmd0aCA+IDApOworCisJdWZfY29vcmQgPSAmaGludC0+ZXh0X2Nvb3JkOworCisJ
Y2hlY2tfdWZfY29vcmQodWZfY29vcmQsIE5VTEwpOworCWFzc2VydCgidnMtMzMiLCB1Zl9jb29y
ZC0+bGggPT0gJmhpbnQtPmxoKTsKKworCWNvb3JkID0gJnVmX2Nvb3JkLT5jb29yZDsKKwlhc3Nl
cnQoInZzLTExMTkiLCB6bm9kZV9pc19ybG9ja2VkKGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJ2
cy0xMTIwIiwgem5vZGVfaXNfbG9hZGVkKGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJ2cy0xMjU2
IiwgY29vcmRfbWF0Y2hlc19rZXlfZXh0ZW50KGNvb3JkLCAmZmxvdy0+a2V5KSk7CisKKwltYXBw
aW5nID0gZmlsZV9pbm9kZShmaWxlKS0+aV9tYXBwaW5nOworCWV4dF9jb29yZCA9ICZ1Zl9jb29y
ZC0+ZXh0ZW5zaW9uLmV4dGVudDsKKworCWZpbGVfb2ZmID0gZ2V0X2tleV9vZmZzZXQoJmZsb3ct
PmtleSk7CisJcGFnZV9vZmYgPSAodW5zaWduZWQgbG9uZykoZmlsZV9vZmYgJiAoUEFHRV9TSVpF
IC0gMSkpOworCXBhZ2VfY250ID0gUEFHRV9TSVpFIC0gcGFnZV9vZmY7CisKKwlwYWdlX2lkeCA9
ICh1bnNpZ25lZCBsb25nKShmaWxlX29mZiA+PiBQQUdFX1NISUZUKTsKKworCS8qIHdlIHN0YXJ0
IGhhdmluZyB0d2lnIG5vZGUgcmVhZCBsb2NrZWQuIEhvd2V2ZXIsIHdlIGRvIG5vdCB3YW50IHRv
CisJICAga2VlcCB0aGF0IGxvY2sgYWxsIHRoZSB0aW1lIHJlYWRhaGVhZCB3b3Jrcy4gU28sIHNl
dCBhIHNlYWwgYW5kCisJICAgcmVsZWFzZSB0d2lnIG5vZGUuICovCisJcmVpc2VyNF9zZXRfaGlu
dChoaW50LCAmZmxvdy0+a2V5LCBaTk9ERV9SRUFEX0xPQ0spOworCS8qICZoaW50LT5saCBpcyBk
b25lLWVkICovCisKKwlkbyB7CisJCXJlaXNlcjRfdHhuX3Jlc3RhcnRfY3VycmVudCgpOworCQlw
YWdlID0gcmVhZF9tYXBwaW5nX3BhZ2UobWFwcGluZywgcGFnZV9pZHgsIGZpbGUpOworCQlpZiAo
SVNfRVJSKHBhZ2UpKQorCQkJcmV0dXJuIFBUUl9FUlIocGFnZSk7CisJCWxvY2tfcGFnZShwYWdl
KTsKKwkJaWYgKCFQYWdlVXB0b2RhdGUocGFnZSkpIHsKKwkJCXVubG9ja19wYWdlKHBhZ2UpOwor
CQkJcHV0X3BhZ2UocGFnZSk7CisJCQl3YXJuaW5nKCJqbWFjZC05NzE3OCIsCisJCQkJImV4dGVu
dF9yZWFkOiBwYWdlIGlzIG5vdCB1cCB0byBkYXRlIik7CisJCQlyZXR1cm4gUkVURVJSKC1FSU8p
OworCQl9CisJCW1hcmtfcGFnZV9hY2Nlc3NlZChwYWdlKTsKKwkJdW5sb2NrX3BhZ2UocGFnZSk7
CisKKwkJLyogSWYgdXNlcnMgY2FuIGJlIHdyaXRpbmcgdG8gdGhpcyBwYWdlIHVzaW5nIGFyYml0
cmFyeSB2aXJ0dWFsCisJCSAgIGFkZHJlc3NlcywgdGFrZSBjYXJlIGFib3V0IHBvdGVudGlhbCBh
bGlhc2luZyBiZWZvcmUgcmVhZGluZworCQkgICB0aGUgcGFnZSBvbiB0aGUga2VybmVsIHNpZGUu
CisJCSAqLworCQlpZiAobWFwcGluZ193cml0YWJseV9tYXBwZWQobWFwcGluZykpCisJCQlmbHVz
aF9kY2FjaGVfcGFnZShwYWdlKTsKKworCQlhc3NlcnQoIm5pa2l0YS0zMDM0IiwgcmVpc2VyNF9z
Y2hlZHVsYWJsZSgpKTsKKworCQkvKiBudW1iZXIgb2YgYnl0ZXMgd2hpY2ggYXJlIHRvIGJlIHJl
YWQgZnJvbSB0aGUgcGFnZSAqLworCQlpZiAocGFnZV9jbnQgPiBmbG93LT5sZW5ndGgpCisJCQlw
YWdlX2NudCA9IGZsb3ctPmxlbmd0aDsKKworCQlyZXN1bHQgPSBmYXVsdF9pbl9wYWdlc193cml0
ZWFibGUoZmxvdy0+ZGF0YSwgcGFnZV9jbnQpOworCQlpZiAocmVzdWx0KSB7CisJCQlwdXRfcGFn
ZShwYWdlKTsKKwkJCXJldHVybiBSRVRFUlIoLUVGQVVMVCk7CisJCX0KKworCQlrYWRkciA9IGtt
YXBfYXRvbWljKHBhZ2UpOworCQlyZXN1bHQgPSBfX2NvcHlfdG9fdXNlcl9pbmF0b21pYyhmbG93
LT5kYXRhLAorCQkJCQkJIGthZGRyICsgcGFnZV9vZmYsIHBhZ2VfY250KTsKKwkJa3VubWFwX2F0
b21pYyhrYWRkcik7CisJCWlmIChyZXN1bHQgIT0gMCkgeworCQkJa2FkZHIgPSBrbWFwKHBhZ2Up
OworCQkJcmVzdWx0ID0gX19jb3B5X3RvX3VzZXIoZmxvdy0+ZGF0YSwKKwkJCQkJCWthZGRyICsg
cGFnZV9vZmYsIHBhZ2VfY250KTsKKwkJCWt1bm1hcChwYWdlKTsKKwkJCWlmICh1bmxpa2VseShy
ZXN1bHQpKQorCQkJCXJldHVybiBSRVRFUlIoLUVGQVVMVCk7CisJCX0KKwkJcHV0X3BhZ2UocGFn
ZSk7CisKKwkJLyogaW5jcmVhc2UgKGZsb3ctPmtleSkgb2Zmc2V0LAorCQkgKiB1cGRhdGUgKGZs
b3ctPmRhdGEpIHVzZXIgYXJlYSBwb2ludGVyCisJCSAqLworCQltb3ZlX2Zsb3dfZm9yd2FyZChm
bG93LCBwYWdlX2NudCk7CisKKwkJcGFnZV9vZmYgPSAwOworCQlwYWdlX2lkeCsrOworCisJfSB3
aGlsZSAoZmxvdy0+bGVuZ3RoKTsKKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIHBsdWdpbi0+cy5m
aWxlLnJlYWRwYWdlCisgKgorICogcmVpc2VyNF9yZWFkLT51bml4X2ZpbGVfcmVhZC0+cGFnZV9j
YWNoZV9yZWFkYWhlYWQtPgorICogLT5yZWlzZXI0X3JlYWRwYWdlX2Rpc3BhdGNoLT5yZWFkcGFn
ZV91bml4X2ZpbGUtPnJlYWRwYWdlX2V4dGVudAorICogb3IKKyAqIGZpbGVtYXBfZmF1bHQtPnJl
aXNlcjRfcmVhZHBhZ2VfZGlzcGF0Y2gtPnJlYWRwYWdlX3VuaXhfZmlsZS0+CisgKiAtPnJlYWRw
YWdlX2V4dGVudAorICoKKyAqIEF0IHRoZSBiZWdpbm5pbmc6IGNvb3JkLT5ub2RlIGlzIHJlYWQg
bG9ja2VkLCB6bG9hZGVkLCBwYWdlIGlzCisgKiBsb2NrZWQsIGNvb3JkIGlzIHNldCB0byBleGlz
dGluZyB1bml0IGluc2lkZSBvZiBleHRlbnQgaXRlbSAoaXQKKyAqIGlzIG5vdCBuZWNlc3Nhcnkg
dGhhdCBjb29yZCBtYXRjaGVzIHRvIHBhZ2UtPmluZGV4KQorICovCitpbnQgcmVpc2VyNF9yZWFk
cGFnZV9leHRlbnQodm9pZCAqdnAsIHN0cnVjdCBwYWdlICpwYWdlKQoreworCXVmX2Nvb3JkX3Qg
KnVmX2Nvb3JkID0gdnA7CisJT05fREVCVUcoY29vcmRfdCAqIGNvb3JkID0gJnVmX2Nvb3JkLT5j
b29yZCk7CisJT05fREVCVUcocmVpc2VyNF9rZXkga2V5KTsKKworCWFzc2VydCgidnMtMTA0MCIs
IFBhZ2VMb2NrZWQocGFnZSkpOworCWFzc2VydCgidnMtMTA1MCIsICFQYWdlVXB0b2RhdGUocGFn
ZSkpOworCWFzc2VydCgidnMtMTAzOSIsIHBhZ2UtPm1hcHBpbmcgJiYgcGFnZS0+bWFwcGluZy0+
aG9zdCk7CisKKwlhc3NlcnQoInZzLTEwNDQiLCB6bm9kZV9pc19sb2FkZWQoY29vcmQtPm5vZGUp
KTsKKwlhc3NlcnQoInZzLTc1OCIsIGl0ZW1faXNfZXh0ZW50KGNvb3JkKSk7CisJYXNzZXJ0KCJ2
cy0xMDQ2IiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpOworCWFzc2VydCgidnMtMTA0
NSIsIHpub2RlX2lzX3Jsb2NrZWQoY29vcmQtPm5vZGUpKTsKKwlhc3NlcnQoInZzLTEwNDciLAor
CSAgICAgICBwYWdlLT5tYXBwaW5nLT5ob3N0LT5pX2lubyA9PQorCSAgICAgICBnZXRfa2V5X29i
amVjdGlkKGl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KSkpOworCWNoZWNrX3VmX2Nvb3Jk
KHVmX2Nvb3JkLCBOVUxMKTsKKworCXJldHVybiByZWlzZXI0X2RvX3JlYWRwYWdlX2V4dGVudChl
eHRfYnlfZXh0X2Nvb3JkKHVmX2Nvb3JkKSwKKwkJCQl1Zl9jb29yZC0+ZXh0ZW5zaW9uLmV4dGVu
dC5wb3NfaW5fdW5pdCwKKwkJCQlwYWdlKTsKK30KKworaW50IGdldF9ibG9ja19hZGRyZXNzX2V4
dGVudChjb25zdCBjb29yZF90ICpjb29yZCwgc2VjdG9yX3QgYmxvY2ssCisJCQkgICAgIHNlY3Rv
cl90ICpyZXN1bHQpCit7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKworCWlmICghY29vcmRfaXNf
ZXhpc3RpbmdfdW5pdChjb29yZCkpCisJCXJldHVybiBSRVRFUlIoLUVJTlZBTCk7CisKKwlleHQg
PSBleHRlbnRfYnlfY29vcmQoY29vcmQpOworCisJaWYgKHN0YXRlX29mX2V4dGVudChleHQpICE9
IEFMTE9DQVRFRF9FWFRFTlQpCisJCS8qIEZJWE1FOiBiYWQgdGhpbmdzIG1heSBoYXBwZW4gaWYg
aXQgaXMgdW5hbGxvY2F0ZWQgZXh0ZW50ICovCisJCSpyZXN1bHQgPSAwOworCWVsc2UgeworCQly
ZWlzZXI0X2tleSBrZXk7CisKKwkJdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZrZXkpOworCQlh
c3NlcnQoInZzLTE2NDUiLAorCQkgICAgICAgYmxvY2sgPj0gZ2V0X2tleV9vZmZzZXQoJmtleSkg
Pj4gY3VycmVudF9ibG9ja3NpemVfYml0cyk7CisJCWFzc2VydCgidnMtMTY0NiIsCisJCSAgICAg
ICBibG9jayA8CisJCSAgICAgICAoZ2V0X2tleV9vZmZzZXQoJmtleSkgPj4gY3VycmVudF9ibG9j
a3NpemVfYml0cykgKworCQkgICAgICAgZXh0ZW50X2dldF93aWR0aChleHQpKTsKKwkJKnJlc3Vs
dCA9CisJCSAgICBleHRlbnRfZ2V0X3N0YXJ0KGV4dCkgKyAoYmxvY2sgLQorCQkJCQkgICAgIChn
ZXRfa2V5X29mZnNldCgma2V5KSA+PgorCQkJCQkgICAgICBjdXJyZW50X2Jsb2Nrc2l6ZV9iaXRz
KSk7CisJfQorCXJldHVybiAwOworfQorCisvKgorICBwbHVnaW4tPnUuaXRlbS5zLmZpbGUuYXBw
ZW5kX2tleQorICBrZXkgb2YgZmlyc3QgYnl0ZSB3aGljaCBpcyB0aGUgbmV4dCB0byBsYXN0IGJ5
dGUgYnkgYWRkcmVzc2VkIGJ5IHRoaXMgZXh0ZW50CisqLworcmVpc2VyNF9rZXkgKmFwcGVuZF9r
ZXlfZXh0ZW50KGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgcmVpc2VyNF9rZXkgKiBrZXkpCit7CisJ
aXRlbV9rZXlfYnlfY29vcmQoY29vcmQsIGtleSk7CisJc2V0X2tleV9vZmZzZXQoa2V5LAorCQkg
ICAgICAgZ2V0X2tleV9vZmZzZXQoa2V5KSArIHJlaXNlcjRfZXh0ZW50X3NpemUoY29vcmQsCisJ
CQkJCQkJCSBucl91bml0c19leHRlbnQKKwkJCQkJCQkJIChjb29yZCkpKTsKKworCWFzc2VydCgi
dnMtNjEwIiwgZ2V0X2tleV9vZmZzZXQoa2V5KQorCSAgICAgICAmJiAoZ2V0X2tleV9vZmZzZXQo
a2V5KSAmIChjdXJyZW50X2Jsb2Nrc2l6ZSAtIDEpKSA9PSAwKTsKKwlyZXR1cm4ga2V5OworfQor
CisvKiBwbHVnaW4tPnUuaXRlbS5zLmZpbGUuaW5pdF9jb29yZF9leHRlbnNpb24gKi8KK3ZvaWQg
aW5pdF9jb29yZF9leHRlbnNpb25fZXh0ZW50KHVmX2Nvb3JkX3QgKiB1Zl9jb29yZCwgbG9mZl90
IGxvb2t1cGVkKQoreworCWNvb3JkX3QgKmNvb3JkOworCXN0cnVjdCBleHRlbnRfY29vcmRfZXh0
ZW5zaW9uICpleHRfY29vcmQ7CisJcmVpc2VyNF9rZXkga2V5OworCWxvZmZfdCBvZmZzZXQ7CisK
Kwlhc3NlcnQoInZzLTEyOTUiLCB1Zl9jb29yZC0+dmFsaWQgPT0gMCk7CisKKwljb29yZCA9ICZ1
Zl9jb29yZC0+Y29vcmQ7CisJYXNzZXJ0KCJ2cy0xMjg4IiwgY29vcmRfaXNfaXBsdWdfc2V0KGNv
b3JkKSk7CisJYXNzZXJ0KCJ2cy0xMzI3Iiwgem5vZGVfaXNfbG9hZGVkKGNvb3JkLT5ub2RlKSk7
CisKKwlpZiAoY29vcmQtPmJldHdlZW4gIT0gQUZURVJfVU5JVCAmJiBjb29yZC0+YmV0d2VlbiAh
PSBBVF9VTklUKQorCQlyZXR1cm47CisKKwlleHRfY29vcmQgPSAmdWZfY29vcmQtPmV4dGVuc2lv
bi5leHRlbnQ7CisJZXh0X2Nvb3JkLT5ucl91bml0cyA9IG5yX3VuaXRzX2V4dGVudChjb29yZCk7
CisJZXh0X2Nvb3JkLT5leHRfb2Zmc2V0ID0KKwkgICAgKGNoYXIgKilleHRlbnRfYnlfY29vcmQo
Y29vcmQpIC0gemRhdGEoY29vcmQtPm5vZGUpOworCWV4dF9jb29yZC0+d2lkdGggPSBleHRlbnRf
Z2V0X3dpZHRoKGV4dGVudF9ieV9jb29yZChjb29yZCkpOworCU9OX0RFQlVHKGV4dF9jb29yZC0+
ZXh0ZW50ID0gKmV4dGVudF9ieV9jb29yZChjb29yZCkpOworCXVmX2Nvb3JkLT52YWxpZCA9IDE7
CisKKwkvKiBwb3NfaW5fdW5pdCBpcyB0aGUgb25seSB1bmluaXRpYWxpemVkIGZpZWxkIGluIGV4
dGVuZGVkIGNvb3JkICovCisJaWYgKGNvb3JkLT5iZXR3ZWVuID09IEFGVEVSX1VOSVQpIHsKKwkJ
YXNzZXJ0KCJ2cy0xMzMwIiwKKwkJICAgICAgIGNvb3JkLT51bml0X3BvcyA9PSBucl91bml0c19l
eHRlbnQoY29vcmQpIC0gMSk7CisKKwkJZXh0X2Nvb3JkLT5wb3NfaW5fdW5pdCA9IGV4dF9jb29y
ZC0+d2lkdGggLSAxOworCX0gZWxzZSB7CisJCS8qIEFUX1VOSVQgKi8KKwkJdW5pdF9rZXlfYnlf
Y29vcmQoY29vcmQsICZrZXkpOworCQlvZmZzZXQgPSBnZXRfa2V5X29mZnNldCgma2V5KTsKKwor
CQlhc3NlcnQoInZzLTEzMjgiLCBvZmZzZXQgPD0gbG9va3VwZWQpOworCQlhc3NlcnQoInZzLTEz
MjkiLAorCQkgICAgICAgbG9va3VwZWQgPAorCQkgICAgICAgb2Zmc2V0ICsgZXh0X2Nvb3JkLT53
aWR0aCAqIGN1cnJlbnRfYmxvY2tzaXplKTsKKwkJZXh0X2Nvb3JkLT5wb3NfaW5fdW5pdCA9CisJ
CSAgICAoKGxvb2t1cGVkIC0gb2Zmc2V0KSA+PiBjdXJyZW50X2Jsb2Nrc2l6ZV9iaXRzKTsKKwl9
Cit9CisKKy8qCisgKiBMb2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICogbW9kZS1uYW1lOiAiTEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAorICogdGFiLXdp
ZHRoOiA4CisgKiBmaWxsLWNvbHVtbjogNzkKKyAqIHNjcm9sbC1zdGVwOiAxCisgKiBFbmQ6Cisg
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9wbHVnaW4vaXRlbS9leHRlbnRfZmx1c2hfb3BzLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQv
cGx1Z2luL2l0ZW0vZXh0ZW50X2ZsdXNoX29wcy5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9y
ZWlzZXI0L3BsdWdpbi9pdGVtL2V4dGVudF9mbHVzaF9vcHMuYwkxOTcwLTAxLTAxIDAxOjAwOjAw
LjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0v
ZXh0ZW50X2ZsdXNoX29wcy5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDY4MjIyMjk0ICswMTAwCkBA
IC0wLDAgKzEsNjg2IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJl
aXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisKKyNpbmNsdWRl
ICJpdGVtLmgiCisjaW5jbHVkZSAiLi4vLi4vdHJlZS5oIgorI2luY2x1ZGUgIi4uLy4uL2pub2Rl
LmgiCisjaW5jbHVkZSAiLi4vLi4vc3VwZXIuaCIKKyNpbmNsdWRlICIuLi8uLi9mbHVzaC5oIgor
I2luY2x1ZGUgIi4uLy4uL2NhcnJ5LmgiCisjaW5jbHVkZSAiLi4vb2JqZWN0LmgiCisKKyNpbmNs
dWRlIDxsaW51eC9wYWdlbWFwLmg+CisKK3N0YXRpYyByZWlzZXI0X2Jsb2NrX25yIGV4dGVudF91
bml0X3N0YXJ0KGNvbnN0IGNvb3JkX3QgKiBpdGVtKTsKKworLyogUmV0dXJuIGVpdGhlciBmaXJz
dCBvciBsYXN0IGV4dGVudCAoZGVwZW5kaW5nIG9uIEBzaWRlKSBvZiB0aGUgaXRlbQorICAgQGNv
b3JkIGlzIHNldCB0by4gU2V0IEBwb3NfaW5fdW5pdCBlaXRoZXIgdG8gZmlyc3Qgb3IgdG8gbGFz
dCBibG9jaworICAgb2YgZXh0ZW50LiAqLworc3RhdGljIHJlaXNlcjRfZXh0ZW50ICpleHRlbnRf
dXRtb3N0X2V4dChjb25zdCBjb29yZF90ICogY29vcmQsIHNpZGVvZiBzaWRlLAorCQkJCQkgcmVp
c2VyNF9ibG9ja19uciAqIHBvc19pbl91bml0KQoreworCXJlaXNlcjRfZXh0ZW50ICpleHQ7CisK
KwlpZiAoc2lkZSA9PSBMRUZUX1NJREUpIHsKKwkJLyogZ2V0IGZpcnN0IGV4dGVudCBvZiBpdGVt
ICovCisJCWV4dCA9IGV4dGVudF9pdGVtKGNvb3JkKTsKKwkJKnBvc19pbl91bml0ID0gMDsKKwl9
IGVsc2UgeworCQkvKiBnZXQgbGFzdCBleHRlbnQgb2YgaXRlbSBhbmQgbGFzdCBwb3NpdGlvbiB3
aXRoaW4gaXQgKi8KKwkJYXNzZXJ0KCJ2cy0zNjMiLCBzaWRlID09IFJJR0hUX1NJREUpOworCQll
eHQgPSBleHRlbnRfaXRlbShjb29yZCkgKyBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKTsKKwkJ
KnBvc19pbl91bml0ID0gZXh0ZW50X2dldF93aWR0aChleHQpIC0gMTsKKwl9CisKKwlyZXR1cm4g
ZXh0OworfQorCisvKiBpdGVtX3BsdWdpbi0+Zi51dG1vc3RfY2hpbGQgKi8KKy8qIFJldHVybiB0
aGUgY2hpbGQuIENvb3JkIGlzIHNldCB0byBleHRlbnQgaXRlbS4gRmluZCBqbm9kZSBjb3JyZXNw
b25kaW5nCisgICBlaXRoZXIgdG8gZmlyc3Qgb3IgdG8gbGFzdCB1bmZvcm1hdHRlZCBub2RlIHBv
aW50ZWQgYnkgdGhlIGl0ZW0gKi8KK2ludCB1dG1vc3RfY2hpbGRfZXh0ZW50KGNvbnN0IGNvb3Jk
X3QgKiBjb29yZCwgc2lkZW9mIHNpZGUsIGpub2RlICoqIGNoaWxkcCkKK3sKKwlyZWlzZXI0X2V4
dGVudCAqZXh0OworCXJlaXNlcjRfYmxvY2tfbnIgcG9zX2luX3VuaXQ7CisKKwlleHQgPSBleHRl
bnRfdXRtb3N0X2V4dChjb29yZCwgc2lkZSwgJnBvc19pbl91bml0KTsKKworCXN3aXRjaCAoc3Rh
dGVfb2ZfZXh0ZW50KGV4dCkpIHsKKwljYXNlIEhPTEVfRVhURU5UOgorCQkqY2hpbGRwID0gTlVM
TDsKKwkJcmV0dXJuIDA7CisJY2FzZSBBTExPQ0FURURfRVhURU5UOgorCWNhc2UgVU5BTExPQ0FU
RURfRVhURU5UOgorCQlicmVhazsKKwlkZWZhdWx0OgorCQkvKiB0aGlzIHNob3VsZCBuZXZlciBo
YXBwZW4gKi8KKwkJYXNzZXJ0KCJ2cy0xNDE3IiwgMCk7CisJfQorCisJeworCQlyZWlzZXI0X2tl
eSBrZXk7CisJCXJlaXNlcjRfdHJlZSAqdHJlZTsKKwkJdW5zaWduZWQgbG9uZyBpbmRleDsKKwor
CQlpZiAoc2lkZSA9PSBMRUZUX1NJREUpIHsKKwkJCS8qIGdldCBrZXkgb2YgZmlyc3QgYnl0ZSBh
ZGRyZXNzZWQgYnkgdGhlIGV4dGVudCAqLworCQkJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZr
ZXkpOworCQl9IGVsc2UgeworCQkJLyogZ2V0IGtleSBvZiBieXRlIHdoaWNoIG5leHQgYWZ0ZXIg
bGFzdCBieXRlIGFkZHJlc3NlZCBieSB0aGUgZXh0ZW50ICovCisJCQlhcHBlbmRfa2V5X2V4dGVu
dChjb29yZCwgJmtleSk7CisJCX0KKworCQlhc3NlcnQoInZzLTU0NCIsCisJCSAgICAgICAoZ2V0
X2tleV9vZmZzZXQoJmtleSkgPj4gUEFHRV9TSElGVCkgPCB+MHVsKTsKKwkJLyogaW5kZXggb2Yg
Zmlyc3Qgb3IgbGFzdCAoZGVwZW5kaW5nIG9uIEBzaWRlKSBwYWdlIGFkZHJlc3NlZAorCQkgICBi
eSB0aGUgZXh0ZW50ICovCisJCWluZGV4ID0KKwkJICAgICh1bnNpZ25lZCBsb25nKShnZXRfa2V5
X29mZnNldCgma2V5KSA+PiBQQUdFX1NISUZUKTsKKwkJaWYgKHNpZGUgPT0gUklHSFRfU0lERSkK
KwkJCWluZGV4LS07CisKKwkJdHJlZSA9IGNvb3JkLT5ub2RlLT56am5vZGUudHJlZTsKKwkJKmNo
aWxkcCA9IGpsb29rdXAodHJlZSwgZ2V0X2tleV9vYmplY3RpZCgma2V5KSwgaW5kZXgpOworCX0K
KworCXJldHVybiAwOworfQorCisvKiBpdGVtX3BsdWdpbi0+Zi51dG1vc3RfY2hpbGRfcmVhbF9i
bG9jayAqLworLyogUmV0dXJuIHRoZSBjaGlsZCdzIGJsb2NrLCBpZiBhbGxvY2F0ZWQuICovCitp
bnQKK3V0bW9zdF9jaGlsZF9yZWFsX2Jsb2NrX2V4dGVudChjb25zdCBjb29yZF90ICogY29vcmQs
IHNpZGVvZiBzaWRlLAorCQkJICAgICAgIHJlaXNlcjRfYmxvY2tfbnIgKiBibG9jaykKK3sKKwly
ZWlzZXI0X2V4dGVudCAqZXh0OworCisJZXh0ID0gZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKTsKKwor
CXN3aXRjaCAoc3RhdGVfb2ZfZXh0ZW50KGV4dCkpIHsKKwljYXNlIEFMTE9DQVRFRF9FWFRFTlQ6
CisJCSpibG9jayA9IGV4dGVudF9nZXRfc3RhcnQoZXh0KTsKKwkJaWYgKHNpZGUgPT0gUklHSFRf
U0lERSkKKwkJCSpibG9jayArPSBleHRlbnRfZ2V0X3dpZHRoKGV4dCkgLSAxOworCQlicmVhazsK
KwljYXNlIEhPTEVfRVhURU5UOgorCWNhc2UgVU5BTExPQ0FURURfRVhURU5UOgorCQkqYmxvY2sg
PSAwOworCQlicmVhazsKKwlkZWZhdWx0OgorCQkvKiB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW4g
Ki8KKwkJYXNzZXJ0KCJ2cy0xNDE4IiwgMCk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIGl0
ZW1fcGx1Z2luLT5mLnNjYW4gKi8KKy8qIFBlcmZvcm1zIGxlZnR3YXJkIHNjYW5uaW5nIHN0YXJ0
aW5nIGZyb20gYW4gdW5mb3JtYXR0ZWQgbm9kZSBhbmQgaXRzIHBhcmVudCBjb29yZGluYXRlLgor
ICAgVGhpcyBzY2FuIGNvbnRpbnVlcywgYWR2YW5jaW5nIHRoZSBwYXJlbnQgY29vcmRpbmF0ZSwg
dW50aWwgZWl0aGVyIGl0IGVuY291bnRlcnMgYQorICAgZm9ybWF0dGVkIGNoaWxkIG9yIGl0IGZp
bmlzaGVzIHNjYW5uaW5nIHRoaXMgbm9kZS4KKworICAgSWYgdW5hbGxvY2F0ZWQsIHRoZSBlbnRp
cmUgZXh0ZW50IG11c3QgYmUgZGlydHkgYW5kIGluIHRoZSBzYW1lIGF0b20uICAoQWN0dWFsbHks
IEknbQorICAgbm90IHN1cmUgdGhpcyBpcyBsYXN0IHByb3BlcnR5IChzYW1lIGF0b20pIGlzIGVu
Zm9yY2VkLCBidXQgaXQgc2hvdWxkIGJlIHRoZSBjYXNlIHNpbmNlCisgICBvbmUgYXRvbSBtdXN0
IHdyaXRlIHRoZSBwYXJlbnQgYW5kIHRoZSBvdGhlcnMgbXVzdCByZWFkIHRoZSBwYXJlbnQsIHRo
dXMgZnVzaW5nPykuICBJbgorICAgYW55IGNhc2UsIHRoZSBjb2RlIGJlbG93IGFzc2VydHMgdGhp
cyBjYXNlIGZvciB1bmFsbG9jYXRlZCBleHRlbnRzLiAgVW5hbGxvY2F0ZWQKKyAgIGV4dGVudHMg
YXJlIHRodXMgb3B0aW1pemVkIGJlY2F1c2Ugd2UgY2FuIHNraXAgdG8gdGhlIGVuZHBvaW50IHdo
ZW4gc2Nhbm5pbmcuCisKKyAgIEl0IHJldHVybnMgY29udHJvbCB0byByZWlzZXI0X3NjYW5fZXh0
ZW50LCBoYW5kbGVzIHRoZXNlIHRlcm1pbmF0aW5nIGNvbmRpdGlvbnMsCisgICBlLmcuLCBieSBs
b2FkaW5nIHRoZSBuZXh0IHR3aWcuCisqLworaW50IHJlaXNlcjRfc2Nhbl9leHRlbnQoZmx1c2hf
c2NhbiAqIHNjYW4pCit7CisJY29vcmRfdCBjb29yZDsKKwlqbm9kZSAqbmVpZ2hib3I7CisJdW5z
aWduZWQgbG9uZyBzY2FuX2luZGV4LCB1bml0X2luZGV4LCB1bml0X3dpZHRoLCBzY2FuX21heCwg
c2Nhbl9kaXN0OworCXJlaXNlcjRfYmxvY2tfbnIgdW5pdF9zdGFydDsKKwlfX3U2NCBvaWQ7CisJ
cmVpc2VyNF9rZXkga2V5OworCWludCByZXQgPSAwLCBhbGxvY2F0ZWQsIGluY3I7CisJcmVpc2Vy
NF90cmVlICp0cmVlOworCisJaWYgKCFKRl9JU1NFVChzY2FuLT5ub2RlLCBKTk9ERV9ESVJUWSkp
IHsKKwkJc2Nhbi0+c3RvcCA9IDE7CisJCXJldHVybiAwOwkvKiBSYWNlIHdpdGggdHJ1bmNhdGUs
IHRoaXMgbm9kZSBpcyBhbHJlYWR5CisJCQkJICogdHJ1bmNhdGVkLiAqLworCX0KKworCWNvb3Jk
X2R1cCgmY29vcmQsICZzY2FuLT5wYXJlbnRfY29vcmQpOworCisJYXNzZXJ0KCJqbWFjZC0xNDA0
IiwgIXJlaXNlcjRfc2Nhbl9maW5pc2hlZChzY2FuKSk7CisJYXNzZXJ0KCJqbWFjZC0xNDA1Iiwg
am5vZGVfZ2V0X2xldmVsKHNjYW4tPm5vZGUpID09IExFQUZfTEVWRUwpOworCWFzc2VydCgiam1h
Y2QtMTQwNiIsIGpub2RlX2lzX3VuZm9ybWF0dGVkKHNjYW4tPm5vZGUpKTsKKworCS8qIFRoZSBz
Y2FuX2luZGV4IHZhcmlhYmxlIGNvcnJlc3BvbmRzIHRvIHRoZSBjdXJyZW50IHBhZ2UgaW5kZXgg
b2YgdGhlCisJICAgdW5mb3JtYXR0ZWQgYmxvY2sgc2NhbiBwb3NpdGlvbi4gKi8KKwlzY2FuX2lu
ZGV4ID0gaW5kZXhfam5vZGUoc2Nhbi0+bm9kZSk7CisKKwlhc3NlcnQoImptYWNkLTc4ODkiLCBp
dGVtX2lzX2V4dGVudCgmY29vcmQpKTsKKworICAgICAgcmVwZWF0OgorCS8qIG9iamVjdGlkIG9m
IGZpbGUgKi8KKwlvaWQgPSBnZXRfa2V5X29iamVjdGlkKGl0ZW1fa2V5X2J5X2Nvb3JkKCZjb29y
ZCwgJmtleSkpOworCisJYWxsb2NhdGVkID0gIWV4dGVudF9pc191bmFsbG9jYXRlZCgmY29vcmQp
OworCS8qIEdldCB0aGUgdmFsdWVzIG9mIHRoaXMgZXh0ZW50IHVuaXQ6ICovCisJdW5pdF9pbmRl
eCA9IGV4dGVudF91bml0X2luZGV4KCZjb29yZCk7CisJdW5pdF93aWR0aCA9IGV4dGVudF91bml0
X3dpZHRoKCZjb29yZCk7CisJdW5pdF9zdGFydCA9IGV4dGVudF91bml0X3N0YXJ0KCZjb29yZCk7
CisKKwlhc3NlcnQoImptYWNkLTcxODciLCB1bml0X3dpZHRoID4gMCk7CisJYXNzZXJ0KCJqbWFj
ZC03MTg4Iiwgc2Nhbl9pbmRleCA+PSB1bml0X2luZGV4KTsKKwlhc3NlcnQoImptYWNkLTcxODki
LCBzY2FuX2luZGV4IDw9IHVuaXRfaW5kZXggKyB1bml0X3dpZHRoIC0gMSk7CisKKwkvKiBEZXBl
bmRpbmcgb24gdGhlIHNjYW4gZGlyZWN0aW9uLCB3ZSBzZXQgZGlmZmVyZW50IG1heGltdW0gdmFs
dWVzIGZvciBzY2FuX2luZGV4CisJICAgKHNjYW5fbWF4KSBhbmQgdGhlIG51bWJlciBvZiBub2Rl
cyB0aGF0IHdvdWxkIGJlIHBhc3NlZCBpZiB0aGUgc2NhbiBnb2VzIHRoZQorCSAgIGVudGlyZSB3
YXkgKHNjYW5fZGlzdCkuICBJbmNyIGlzIGFuIGludGVnZXIgcmVmbGVjdGluZyB0aGUgaW5jcmVt
ZW50YWwKKwkgICBkaXJlY3Rpb24gb2Ygc2Nhbl9pbmRleC4gKi8KKwlpZiAocmVpc2VyNF9zY2Fu
bmluZ19sZWZ0KHNjYW4pKSB7CisJCXNjYW5fbWF4ID0gdW5pdF9pbmRleDsKKwkJc2Nhbl9kaXN0
ID0gc2Nhbl9pbmRleCAtIHVuaXRfaW5kZXg7CisJCWluY3IgPSAtMTsKKwl9IGVsc2UgeworCQlz
Y2FuX21heCA9IHVuaXRfaW5kZXggKyB1bml0X3dpZHRoIC0gMTsKKwkJc2Nhbl9kaXN0ID0gc2Nh
bl9tYXggLSB1bml0X2luZGV4OworCQlpbmNyID0gKzE7CisJfQorCisJdHJlZSA9IGNvb3JkLm5v
ZGUtPnpqbm9kZS50cmVlOworCisJLyogSWYgdGhlIGV4dGVudCBpcyBhbGxvY2F0ZWQgd2UgaGF2
ZSB0byBjaGVjayBlYWNoIG9mIGl0cyBibG9ja3MuICBJZiB0aGUgZXh0ZW50CisJICAgaXMgdW5h
bGxvY2F0ZWQgd2UgY2FuIHNraXAgdG8gdGhlIHNjYW5fbWF4LiAqLworCWlmIChhbGxvY2F0ZWQp
IHsKKwkJZG8geworCQkJbmVpZ2hib3IgPSBqbG9va3VwKHRyZWUsIG9pZCwgc2Nhbl9pbmRleCk7
CisJCQlpZiAobmVpZ2hib3IgPT0gTlVMTCkKKwkJCQlnb3RvIHN0b3Bfc2FtZV9wYXJlbnQ7CisK
KwkJCWlmIChzY2FuLT5ub2RlICE9IG5laWdoYm9yCisJCQkgICAgJiYgIXJlaXNlcjRfc2Nhbl9n
b3RvKHNjYW4sIG5laWdoYm9yKSkgeworCQkJCS8qIEBuZWlnaGJvciB3YXMganB1dCgpIGJ5IHJl
aXNlcjRfc2Nhbl9nb3RvICovCisJCQkJZ290byBzdG9wX3NhbWVfcGFyZW50OworCQkJfQorCisJ
CQlyZXQgPSBzY2FuX3NldF9jdXJyZW50KHNjYW4sIG5laWdoYm9yLCAxLCAmY29vcmQpOworCQkJ
aWYgKHJldCAhPSAwKSB7CisJCQkJZ290byBleGl0OworCQkJfQorCisJCQkvKiByZWZlcmVuY2Ug
dG8gQG5laWdoYm9yIGlzIHN0b3JlZCBpbiBAc2Nhbiwgbm8gbmVlZAorCQkJICAgdG8ganB1dCgp
LiAqLworCQkJc2Nhbl9pbmRleCArPSBpbmNyOworCisJCX0gd2hpbGUgKGluY3IgKyBzY2FuX21h
eCAhPSBzY2FuX2luZGV4KTsKKworCX0gZWxzZSB7CisJCS8qIE9wdGltaXplZCBjYXNlIGZvciB1
bmFsbG9jYXRlZCBleHRlbnRzLCBza2lwIHRvIHRoZSBlbmQuICovCisJCW5laWdoYm9yID0gamxv
b2t1cCh0cmVlLCBvaWQsIHNjYW5fbWF4IC8qaW5kZXggKi8gKTsKKwkJaWYgKG5laWdoYm9yID09
IE5VTEwpIHsKKwkJCS8qIFJhY2Ugd2l0aCB0cnVuY2F0ZSAqLworCQkJc2Nhbi0+c3RvcCA9IDE7
CisJCQlyZXQgPSAwOworCQkJZ290byBleGl0OworCQl9CisKKwkJYXNzZXJ0KCJ6YW0tMTA0MyIs
CisJCSAgICAgICByZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZShqbm9kZV9nZXRfYmxvY2sobmVpZ2hi
b3IpKSk7CisKKwkJcmV0ID0gc2Nhbl9zZXRfY3VycmVudChzY2FuLCBuZWlnaGJvciwgc2Nhbl9k
aXN0LCAmY29vcmQpOworCQlpZiAocmV0ICE9IDApIHsKKwkJCWdvdG8gZXhpdDsKKwkJfQorCX0K
KworCWlmIChjb29yZF9zaWRlb2ZfdW5pdCgmY29vcmQsIHNjYW4tPmRpcmVjdGlvbikgPT0gMAor
CSAgICAmJiBpdGVtX2lzX2V4dGVudCgmY29vcmQpKSB7CisJCS8qIENvbnRpbnVlIGFzIGxvbmcg
YXMgdGhlcmUgYXJlIG1vcmUgZXh0ZW50IHVuaXRzLiAqLworCisJCXNjYW5faW5kZXggPQorCQkg
ICAgZXh0ZW50X3VuaXRfaW5kZXgoJmNvb3JkKSArCisJCSAgICAocmVpc2VyNF9zY2FubmluZ19s
ZWZ0KHNjYW4pID8KKwkJICAgICBleHRlbnRfdW5pdF93aWR0aCgmY29vcmQpIC0gMSA6IDApOwor
CQlnb3RvIHJlcGVhdDsKKwl9CisKKwlpZiAoMCkgeworCSAgICAgIHN0b3Bfc2FtZV9wYXJlbnQ6
CisKKwkJLyogSWYgd2UgYXJlIHNjYW5uaW5nIGxlZnQgYW5kIHdlIHN0b3AgaW4gdGhlIG1pZGRs
ZSBvZiBhbiBhbGxvY2F0ZWQKKwkJICAgZXh0ZW50LCB3ZSBrbm93IHRoZSBwcmVjZWRlciBpbW1l
ZGlhdGVseS4uICovCisJCS8qIG1pZGRsZSBvZiBleHRlbnQgaXMgKHNjYW5faW5kZXggLSB1bml0
X2luZGV4KSAhPSAwLiAqLworCQlpZiAocmVpc2VyNF9zY2FubmluZ19sZWZ0KHNjYW4pICYmCisJ
CSAgICAoc2Nhbl9pbmRleCAtIHVuaXRfaW5kZXgpICE9IDApIHsKKwkJCS8qIEZJWE1FKEIpOiBT
b21lb25lIHNob3VsZCBzdGVwLXRocm91Z2ggYW5kIHZlcmlmeSB0aGF0IHRoaXMgcHJlY2VkZXIK
KwkJCSAgIGNhbGN1bGF0aW9uIGlzIGluZGVlZCBjb3JyZWN0LiAqLworCQkJLyogQHVuaXRfc3Rh
cnQgaXMgc3RhcnRpbmcgYmxvY2sgKG51bWJlcikgb2YgZXh0ZW50CisJCQkgICB1bml0LiBGbHVz
aCBzdG9wcGVkIGF0IHRoZSBAc2Nhbl9pbmRleCBibG9jayBmcm9tCisJCQkgICB0aGUgYmVnaW5u
aW5nIG9mIHRoZSBmaWxlLCB3aGljaCBpcyAoc2Nhbl9pbmRleCAtCisJCQkgICB1bml0X2luZGV4
KSBibG9jayB3aXRoaW4gZXh0ZW50LgorCQkJICovCisJCQlpZiAodW5pdF9zdGFydCkgeworCQkJ
CS8qIHNraXAgcHJlY2VkZXIgdXBkYXRlIHdoZW4gd2UgYXJlIGF0IGhvbGUgKi8KKwkJCQlzY2Fu
LT5wcmVjZWRlcl9ibGsgPQorCQkJCSAgICB1bml0X3N0YXJ0ICsgc2Nhbl9pbmRleCAtIHVuaXRf
aW5kZXg7CisJCQkJY2hlY2tfcHJlY2VkZXIoc2Nhbi0+cHJlY2VkZXJfYmxrKTsKKwkJCX0KKwkJ
fQorCisJCS8qIEluIHRoaXMgY2FzZSwgd2UgbGVhdmUgY29vcmQgc2V0IHRvIHRoZSBwYXJlbnQg
b2Ygc2Nhbi0+bm9kZS4gKi8KKwkJc2Nhbi0+c3RvcCA9IDE7CisKKwl9IGVsc2UgeworCQkvKiBJ
biB0aGlzIGNhc2UsIHdlIGFyZSBzdGlsbCBzY2FubmluZywgY29vcmQgaXMgc2V0IHRvIHRoZSBu
ZXh0IGl0ZW0gd2hpY2ggaXMKKwkJICAgZWl0aGVyIG9mZi10aGUtZW5kIG9mIHRoZSBub2RlIG9y
IG5vdCBhbiBleHRlbnQuICovCisJCWFzc2VydCgiam1hY2QtODkxMiIsIHNjYW4tPnN0b3AgPT0g
MCk7CisJCWFzc2VydCgiam1hY2QtNzgxMiIsCisJCSAgICAgICAoY29vcmRfaXNfYWZ0ZXJfc2lk
ZW9mX3VuaXQoJmNvb3JkLCBzY2FuLT5kaXJlY3Rpb24pCisJCQl8fCAhaXRlbV9pc19leHRlbnQo
JmNvb3JkKSkpOworCX0KKworCXJldCA9IDA7CisgICAgICBleGl0OgorCXJldHVybiByZXQ7Cit9
CisKKy8qKgorICogV2hlbiBvbiBmbHVzaCB0aW1lIHVuYWxsb2NhdGVkIGV4dGVudCBpcyB0byBi
ZSByZXBsYWNlZCB3aXRoIGFsbG9jYXRlZCBvbmUKKyAqIGl0IG1heSBoYXBwZW4gdGhhdCBvbmUg
dW5hbGxvY2F0ZWQgZXh0ZW50IHdpbGwgaGF2ZSB0byBiZSByZXBsYWNlZCB3aXRoIHNldAorICog
b2YgYWxsb2NhdGVkIGV4dGVudHMuIEluIHRoaXMgY2FzZSBpbnNlcnRfaW50b19pdGVtIHdpbGwg
YmUgY2FsbGVkIHdoaWNoIG1heQorICogaGF2ZSB0byBhZGQgbmV3IG5vZGVzIGludG8gdHJlZS4g
U3BhY2UgZm9yIHRoYXQgaXMgdGFrZW4gZnJvbSBpbnZpb2xhYmxlCisgKiByZXNlcnZlICg1JSku
CisgKi8KK3N0YXRpYyByZWlzZXI0X2Jsb2NrX25yIHJlc2VydmVfcmVwbGFjZSh2b2lkKQorewor
CXJlaXNlcjRfYmxvY2tfbnIgZ3JhYmJlZCwgbmVlZGVkOworCisJZ3JhYmJlZCA9IGdldF9jdXJy
ZW50X2NvbnRleHQoKS0+Z3JhYmJlZF9ibG9ja3M7CisJbmVlZGVkID0gZXN0aW1hdGVfb25lX2lu
c2VydF9pbnRvX2l0ZW0oY3VycmVudF90cmVlKTsKKwljaGVja19tZSgidnBmLTM0MCIsICFyZWlz
ZXI0X2dyYWJfc3BhY2VfZm9yY2UobmVlZGVkLCBCQV9SRVNFUlZFRCkpOworCXJldHVybiBncmFi
YmVkOworfQorCitzdGF0aWMgdm9pZCBmcmVlX3JlcGxhY2VfcmVzZXJ2ZWQocmVpc2VyNF9ibG9j
a19uciBncmFiYmVkKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4OworCisJY3R4ID0gZ2V0X2N1
cnJlbnRfY29udGV4dCgpOworCWdyYWJiZWQyZnJlZShjdHgsIGdldF9zdXBlcl9wcml2YXRlKGN0
eC0+c3VwZXIpLAorCQkgICAgIGN0eC0+Z3JhYmJlZF9ibG9ja3MgLSBncmFiYmVkKTsKK30KKwor
LyogQmxvY2sgb2Zmc2V0IG9mIGZpcnN0IGJsb2NrIGFkZHJlc3NlZCBieSB1bml0ICovCitfX3U2
NCBleHRlbnRfdW5pdF9pbmRleChjb25zdCBjb29yZF90ICogaXRlbSkKK3sKKwlyZWlzZXI0X2tl
eSBrZXk7CisKKwlhc3NlcnQoInZzLTY0OCIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoaXRlbSkp
OworCXVuaXRfa2V5X2J5X2Nvb3JkKGl0ZW0sICZrZXkpOworCXJldHVybiBnZXRfa2V5X29mZnNl
dCgma2V5KSA+PiBjdXJyZW50X2Jsb2Nrc2l6ZV9iaXRzOworfQorCisvKiBBVURJVCBzaG91bGRu
J3QgcmV0dXJuIHZhbHVlIGJlIG9mIHJlaXNlcjRfYmxvY2tfbnIgdHlwZT8KKyAgIEpvc2gncyBh
bnN3ZXI6IHdobyBrbm93cz8gIElzIGEgIm51bWJlciBvZiBibG9ja3MiIHRoZSBzYW1lIHR5cGUg
YXMgImJsb2NrIG9mZnNldCI/ICovCitfX3U2NCBleHRlbnRfdW5pdF93aWR0aChjb25zdCBjb29y
ZF90ICogaXRlbSkKK3sKKwlhc3NlcnQoInZzLTY0OSIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQo
aXRlbSkpOworCXJldHVybiB3aWR0aF9ieV9jb29yZChpdGVtKTsKK30KKworLyogU3RhcnRpbmcg
YmxvY2sgbG9jYXRpb24gb2YgdGhpcyB1bml0ICovCitzdGF0aWMgcmVpc2VyNF9ibG9ja19uciBl
eHRlbnRfdW5pdF9zdGFydChjb25zdCBjb29yZF90ICogaXRlbSkKK3sKKwlyZXR1cm4gZXh0ZW50
X2dldF9zdGFydChleHRlbnRfYnlfY29vcmQoaXRlbSkpOworfQorCisvKioKKyAqIHNwbGl0X2Fs
bG9jYXRlZF9leHRlbnQgLQorICogQGNvb3JkOgorICogQHBvc19pbl91bml0OgorICoKKyAqIHJl
cGxhY2UgYWxsb2NhdGVkIGV4dGVudCB3aXRoIHR3byBhbGxvY2F0ZWQgZXh0ZW50cworICovCitp
bnQgc3BsaXRfYWxsb2NhdGVkX2V4dGVudChjb29yZF90ICpjb29yZCwgcmVpc2VyNF9ibG9ja19u
ciBwb3NfaW5fdW5pdCkKK3sKKwlpbnQgcmVzdWx0OworCXN0cnVjdCByZXBsYWNlX2hhbmRsZSAq
aDsKKwlyZWlzZXI0X2V4dGVudCAqZXh0OworCXJlaXNlcjRfYmxvY2tfbnIgZ3JhYmJlZDsKKwor
CWV4dCA9IGV4dGVudF9ieV9jb29yZChjb29yZCk7CisJYXNzZXJ0KCJ2cy0xNDEwIiwgc3RhdGVf
b2ZfZXh0ZW50KGV4dCkgPT0gQUxMT0NBVEVEX0VYVEVOVCk7CisJYXNzZXJ0KCJ2cy0xNDExIiwg
ZXh0ZW50X2dldF93aWR0aChleHQpID4gcG9zX2luX3VuaXQpOworCisJaCA9IGttYWxsb2Moc2l6
ZW9mKCpoKSwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChoID09IE5VTEwpCisJ
CXJldHVybiBSRVRFUlIoLUVOT01FTSk7CisJaC0+Y29vcmQgPSBjb29yZDsKKwloLT5saCA9IHpu
b2RlX2xoKGNvb3JkLT5ub2RlKTsKKwloLT5wa2V5ID0gJmgtPmtleTsKKwl1bml0X2tleV9ieV9j
b29yZChjb29yZCwgaC0+cGtleSk7CisJc2V0X2tleV9vZmZzZXQoaC0+cGtleSwKKwkJICAgICAg
IChnZXRfa2V5X29mZnNldChoLT5wa2V5KSArCisJCQlwb3NfaW5fdW5pdCAqIGN1cnJlbnRfYmxv
Y2tzaXplKSk7CisJcmVpc2VyNF9zZXRfZXh0ZW50KCZoLT5vdmVyd3JpdGUsIGV4dGVudF9nZXRf
c3RhcnQoZXh0KSwKKwkJCSAgIHBvc19pbl91bml0KTsKKwlyZWlzZXI0X3NldF9leHRlbnQoJmgt
Pm5ld19leHRlbnRzWzBdLAorCQkJICAgZXh0ZW50X2dldF9zdGFydChleHQpICsgcG9zX2luX3Vu
aXQsCisJCQkgICBleHRlbnRfZ2V0X3dpZHRoKGV4dCkgLSBwb3NfaW5fdW5pdCk7CisJaC0+bnJf
bmV3X2V4dGVudHMgPSAxOworCWgtPmZsYWdzID0gQ09QSV9ET05UX1NISUZUX0xFRlQ7CisJaC0+
cGFzdGVfa2V5ID0gaC0+a2V5OworCisJLyogcmVzZXJ2ZSBzcGFjZSBmb3IgZXh0ZW50IHVuaXQg
cGFzdGUsIEBncmFiYmVkIGlzIHJlc2VydmVkIGJlZm9yZSAqLworCWdyYWJiZWQgPSByZXNlcnZl
X3JlcGxhY2UoKTsKKwlyZXN1bHQgPSByZWlzZXI0X3JlcGxhY2VfZXh0ZW50KGgsIDAgLyogbGVh
dmUgQGNvb3JkIHNldCB0byBvdmVyd3JpdHRlbgorCQkJCQkJZXh0ZW50ICovKTsKKwkvKiByZXN0
b3JlIHJlc2VydmVkICovCisJZnJlZV9yZXBsYWNlX3Jlc2VydmVkKGdyYWJiZWQpOworCWtmcmVl
KGgpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJlcGxhY2UgZXh0ZW50IEBleHQgYnkgZXh0
ZW50IEByZXBsYWNlLiBUcnkgdG8gbWVyZ2UgQHJlcGxhY2Ugd2l0aCBwcmV2aW91cyBleHRlbnQg
b2YgdGhlIGl0ZW0gKGlmIHRoZXJlIGlzCisgICBvbmUpLiBSZXR1cm4gMSBpZiBpdCBzdWNjZWVk
ZWQsIDAgLSBvdGhlcndpc2UgKi8KK3N0YXRpYyBpbnQgdHJ5X3RvX21lcmdlX3dpdGhfbGVmdChj
b29yZF90ICpjb29yZCwgcmVpc2VyNF9leHRlbnQgKmV4dCwKKwkJICAgICAgIHJlaXNlcjRfZXh0
ZW50ICpyZXBsYWNlKQoreworCWFzc2VydCgidnMtMTQxNSIsIGV4dGVudF9ieV9jb29yZChjb29y
ZCkgPT0gZXh0KTsKKworCWlmIChjb29yZC0+dW5pdF9wb3MgPT0gMAorCSAgICB8fCBzdGF0ZV9v
Zl9leHRlbnQoZXh0IC0gMSkgIT0gQUxMT0NBVEVEX0VYVEVOVCkKKwkJLyogQGV4dCBlaXRoZXIg
ZG9lcyBub3QgZXhpc3Qgb3IgaXMgbm90IGFsbG9jYXRlZCBleHRlbnQgKi8KKwkJcmV0dXJuIDA7
CisJaWYgKGV4dGVudF9nZXRfc3RhcnQoZXh0IC0gMSkgKyBleHRlbnRfZ2V0X3dpZHRoKGV4dCAt
IDEpICE9CisJICAgIGV4dGVudF9nZXRfc3RhcnQocmVwbGFjZSkpCisJCXJldHVybiAwOworCisJ
Lyogd2UgY2FuIGdsdWUsIHdpZGVuIHByZXZpb3VzIHVuaXQgKi8KKwlleHRlbnRfc2V0X3dpZHRo
KGV4dCAtIDEsCisJCQkgZXh0ZW50X2dldF93aWR0aChleHQgLSAxKSArIGV4dGVudF9nZXRfd2lk
dGgocmVwbGFjZSkpOworCisJaWYgKGV4dGVudF9nZXRfd2lkdGgoZXh0KSAhPSBleHRlbnRfZ2V0
X3dpZHRoKHJlcGxhY2UpKSB7CisJCS8qIG1ha2UgY3VycmVudCBleHRlbnQgbmFycm93ZXIgKi8K
KwkJaWYgKHN0YXRlX29mX2V4dGVudChleHQpID09IEFMTE9DQVRFRF9FWFRFTlQpCisJCQlleHRl
bnRfc2V0X3N0YXJ0KGV4dCwKKwkJCQkJIGV4dGVudF9nZXRfc3RhcnQoZXh0KSArCisJCQkJCSBl
eHRlbnRfZ2V0X3dpZHRoKHJlcGxhY2UpKTsKKwkJZXh0ZW50X3NldF93aWR0aChleHQsCisJCQkJ
IGV4dGVudF9nZXRfd2lkdGgoZXh0KSAtCisJCQkJIGV4dGVudF9nZXRfd2lkdGgocmVwbGFjZSkp
OworCX0gZWxzZSB7CisJCS8qIGN1cnJlbnQgZXh0ZW50IGNvbXBsZXRlbHkgZ2x1ZWQgd2l0aCBp
dHMgbGVmdCBuZWlnaGJvciwgcmVtb3ZlIGl0ICovCisJCWNvb3JkX3QgZnJvbSwgdG87CisKKwkJ
Y29vcmRfZHVwKCZmcm9tLCBjb29yZCk7CisJCWZyb20udW5pdF9wb3MgPSBucl91bml0c19leHRl
bnQoY29vcmQpIC0gMTsKKwkJY29vcmRfZHVwKCZ0bywgJmZyb20pOworCisJCS8qIGN1cnJlbnRs
eSBjdXQgZnJvbSBleHRlbnQgY2FuIGN1dCBlaXRoZXIgZnJvbSB0aGUgYmVnaW5uaW5nIG9yIGZy
b20gdGhlIGVuZC4gTW92ZSBwbGFjZSB3aGljaCBnb3QKKwkJICAgZnJlZWQgYWZ0ZXIgdW5pdCBy
ZW1vdmFsIHRvIGVuZCBvZiBpdGVtICovCisJCW1lbW1vdmUoZXh0LCBleHQgKyAxLAorCQkJKGZy
b20udW5pdF9wb3MgLQorCQkJIGNvb3JkLT51bml0X3BvcykgKiBzaXplb2YocmVpc2VyNF9leHRl
bnQpKTsKKwkJLyogd2lwZSBwYXJ0IG9mIGl0ZW0gd2hpY2ggaXMgZ29pbmcgdG8gYmUgY3V0LCBz
byB0aGF0IG5vZGVfY2hlY2sgd2lsbCBub3QgYmUgY29uZnVzZWQgKi8KKwkJY3V0X25vZGVfY29u
dGVudCgmZnJvbSwgJnRvLCBOVUxMLCBOVUxMLCBOVUxMKTsKKwl9CisJem5vZGVfbWFrZV9kaXJ0
eShjb29yZC0+bm9kZSk7CisJLyogbW92ZSBjb29yZCBiYWNrICovCisJY29vcmQtPnVuaXRfcG9z
LS07CisJcmV0dXJuIDE7Cit9CisKKy8qKgorICogY29udmVydF9leHRlbnQgLSByZXBsYWNlIGV4
dGVudCB3aXRoIDIgb25lcworICogQGNvb3JkOiBjb29yZGluYXRlIG9mIGV4dGVudCB0byBiZSBy
ZXBsYWNlZAorICogQHJlcGxhY2U6IGV4dGVudCB0byBvdmVyd3JpdGUgdGhlIG9uZSBAY29vcmQg
aXMgc2V0IHRvCisgKgorICogT3ZlcndyaXRlcyBleHRlbnQgQGNvb3JkIGlzIHNldCB0byBhbmQg
cGFzdGUgb25lIGV4dGVudCB1bml0IGFmdGVyCisgKiBvdmVyd3JpdHRlbiBvbmUgaWYgQHJlcGxh
Y2UgaXMgc2hvcnRlciB0aGFuIGluaXRpYWwgZXh0ZW50CisgKi8KK2ludCBjb252ZXJ0X2V4dGVu
dChjb29yZF90ICpjb29yZCwgcmVpc2VyNF9leHRlbnQgKnJlcGxhY2UpCit7CisJaW50IHJlc3Vs
dDsKKwlzdHJ1Y3QgcmVwbGFjZV9oYW5kbGUgKmg7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKwly
ZWlzZXI0X2Jsb2NrX25yIHN0YXJ0LCB3aWR0aCwgbmV3X3dpZHRoOworCXJlaXNlcjRfYmxvY2tf
bnIgZ3JhYmJlZDsKKwlleHRlbnRfc3RhdGUgc3RhdGU7CisKKwlleHQgPSBleHRlbnRfYnlfY29v
cmQoY29vcmQpOworCXN0YXRlID0gc3RhdGVfb2ZfZXh0ZW50KGV4dCk7CisJc3RhcnQgPSBleHRl
bnRfZ2V0X3N0YXJ0KGV4dCk7CisJd2lkdGggPSBleHRlbnRfZ2V0X3dpZHRoKGV4dCk7CisJbmV3
X3dpZHRoID0gZXh0ZW50X2dldF93aWR0aChyZXBsYWNlKTsKKworCWFzc2VydCgidnMtMTQ1OCIs
IChzdGF0ZSA9PSBVTkFMTE9DQVRFRF9FWFRFTlQgfHwKKwkJCSAgIHN0YXRlID09IEFMTE9DQVRF
RF9FWFRFTlQpKTsKKwlhc3NlcnQoInZzLTE0NTkiLCB3aWR0aCA+PSBuZXdfd2lkdGgpOworCisJ
aWYgKHRyeV90b19tZXJnZV93aXRoX2xlZnQoY29vcmQsIGV4dCwgcmVwbGFjZSkpIHsKKwkJLyog
bWVyZ2VkIEByZXBsYWNlIHdpdGggbGVmdCBuZWlnaGJvci4gQ3VycmVudCB1bml0IGlzIGVpdGhl
cgorCQkgICByZW1vdmVkIG9yIG5hcnJvd2VkICovCisJCXJldHVybiAwOworCX0KKworCWlmICh3
aWR0aCA9PSBuZXdfd2lkdGgpIHsKKwkJLyogcmVwbGFjZSBjdXJyZW50IGV4dGVudCB3aXRoIEBy
ZXBsYWNlICovCisJCSpleHQgPSAqcmVwbGFjZTsKKwkJem5vZGVfbWFrZV9kaXJ0eShjb29yZC0+
bm9kZSk7CisJCXJldHVybiAwOworCX0KKworCWggPSBrbWFsbG9jKHNpemVvZigqaCksIHJlaXNl
cjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwlpZiAoaCA9PSBOVUxMKQorCQlyZXR1cm4gUkVURVJS
KC1FTk9NRU0pOworCWgtPmNvb3JkID0gY29vcmQ7CisJaC0+bGggPSB6bm9kZV9saChjb29yZC0+
bm9kZSk7CisJaC0+cGtleSA9ICZoLT5rZXk7CisJdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsIGgt
PnBrZXkpOworCXNldF9rZXlfb2Zmc2V0KGgtPnBrZXksCisJCSAgICAgICAoZ2V0X2tleV9vZmZz
ZXQoaC0+cGtleSkgKyBuZXdfd2lkdGggKiBjdXJyZW50X2Jsb2Nrc2l6ZSkpOworCWgtPm92ZXJ3
cml0ZSA9ICpyZXBsYWNlOworCisJLyogcmVwbGFjZSBAZXh0IHdpdGggQHJlcGxhY2UgYW5kIHBh
ZGRpbmcgZXh0ZW50ICovCisJcmVpc2VyNF9zZXRfZXh0ZW50KCZoLT5uZXdfZXh0ZW50c1swXSwK
KwkJCSAgIChzdGF0ZSA9PSBBTExPQ0FURURfRVhURU5UKSA/CisJCQkgICAoc3RhcnQgKyBuZXdf
d2lkdGgpIDoKKwkJCSAgIFVOQUxMT0NBVEVEX0VYVEVOVF9TVEFSVCwKKwkJCSAgIHdpZHRoIC0g
bmV3X3dpZHRoKTsKKwloLT5ucl9uZXdfZXh0ZW50cyA9IDE7CisJaC0+ZmxhZ3MgPSBDT1BJX0RP
TlRfU0hJRlRfTEVGVDsKKwloLT5wYXN0ZV9rZXkgPSBoLT5rZXk7CisKKwkvKiByZXNlcnZlIHNw
YWNlIGZvciBleHRlbnQgdW5pdCBwYXN0ZSwgQGdyYWJiZWQgaXMgcmVzZXJ2ZWQgYmVmb3JlICov
CisJZ3JhYmJlZCA9IHJlc2VydmVfcmVwbGFjZSgpOworCXJlc3VsdCA9IHJlaXNlcjRfcmVwbGFj
ZV9leHRlbnQoaCwgMCAvKiBsZWF2ZSBAY29vcmQgc2V0IHRvIG92ZXJ3cml0dGVuCisJCQkJCQll
eHRlbnQgKi8pOworCisJLyogcmVzdG9yZSByZXNlcnZlZCAqLworCWZyZWVfcmVwbGFjZV9yZXNl
cnZlZChncmFiYmVkKTsKKwlrZnJlZShoKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAq
IGFzc2lnbl9yZWFsX2Jsb2NrbnJzCisgKiBAZmx1c2hfcG9zOgorICogQG9pZDogb2JqZWN0aWQg
b2YgZmlsZSBqbm9kZXMgdG8gYXNzaWduIGJsb2NrIG51bWJlciB0byBiZWxvbmdzIHRvCisgKiBA
aW5kZXg6IGZpcnN0IGpub2RlIG9uIHRoZSByYW5nZQorICogQGNvdW50OiBudW1iZXIgb2Ygam5v
ZGVzIHRvIGFzc2lnbiBibG9jayBudW1iZXJzIHRvCisgKiBAZmlyc3Q6IHN0YXJ0IG9mIGFsbG9j
YXRlZCBibG9jayByYW5nZQorICoKKyAqIEFzc2lnbnMgYmxvY2sgbnVtYmVycyB0byBlYWNoIG9m
IEBjb3VudCBqbm9kZXMuIEluZGV4IG9mIGZpcnN0IGpub2RlIGlzCisgKiBAaW5kZXguIEpub2Rl
cyBnZXQgbG9va3VwZWQgd2l0aCBqbG9va3VwLgorICovCit2b2lkIGFzc2lnbl9yZWFsX2Jsb2Nr
bnJzKGZsdXNoX3Bvc190ICpmbHVzaF9wb3MsIG9pZF90IG9pZCwKKwkJCSAgdW5zaWduZWQgbG9u
ZyBpbmRleCwgcmVpc2VyNF9ibG9ja19uciBjb3VudCwKKwkJCSAgcmVpc2VyNF9ibG9ja19uciBm
aXJzdCkKK3sKKwl1bnNpZ25lZCBsb25nIGk7CisJcmVpc2VyNF90cmVlICp0cmVlOworCXR4bl9h
dG9tICphdG9tOworCWludCBucjsKKworCWF0b20gPSBhdG9tX2xvY2tlZF9ieV9mcShmbHVzaF9w
b3MtPmZxKTsKKwlhc3NlcnQoInZzLTE0NjgiLCBhdG9tKTsKKwlCVUdfT04oYXRvbSA9PSBOVUxM
KTsKKworCW5yID0gMDsKKwl0cmVlID0gY3VycmVudF90cmVlOworCWZvciAoaSA9IDA7IGkgPCBj
b3VudDsgKytpLCArK2luZGV4KSB7CisJCWpub2RlICpub2RlOworCisJCW5vZGUgPSBqbG9va3Vw
KHRyZWUsIG9pZCwgaW5kZXgpOworCQlhc3NlcnQoIiIsIG5vZGUgIT0gTlVMTCk7CisJCUJVR19P
Tihub2RlID09IE5VTEwpOworCisJCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwkJYXNzZXJ0KCIi
LCAham5vZGVfaXNfZmx1c2hwcmVwcGVkKG5vZGUpKTsKKwkJYXNzZXJ0KCJ2cy0xNDc1Iiwgbm9k
ZS0+YXRvbSA9PSBhdG9tKTsKKwkJYXNzZXJ0KCJ2cy0xNDc2IiwgYXRvbWljX3JlYWQoJm5vZGUt
PnhfY291bnQpID4gMCk7CisKKwkJSkZfQ0xSKG5vZGUsIEpOT0RFX0ZMVVNIX1JFU0VSVkVEKTsK
KwkJam5vZGVfc2V0X2Jsb2NrKG5vZGUsICZmaXJzdCk7CisJCXVuZm9ybWF0dGVkX21ha2VfcmVs
b2Mobm9kZSwgZmx1c2hfcG9zLT5mcSk7CisJCU9OX0RFQlVHKGNvdW50X2pub2RlKG5vZGUtPmF0
b20sIG5vZGUsIE5PREVfTElTVChub2RlKSwKKwkJCQkgICAgIEZRX0xJU1QsIDApKTsKKwkJc3Bp
bl91bmxvY2tfam5vZGUobm9kZSk7CisJCWZpcnN0Kys7CisKKwkJYXRvbWljX2RlYygmbm9kZS0+
eF9jb3VudCk7CisJCW5yICsrOworCX0KKworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJcmV0
dXJuOworfQorCisvKioKKyAqIGFsbG9jYXRlZF9leHRlbnRfc2x1bV9zaXplCisgKiBAZmx1c2hf
cG9zOgorICogQG9pZDoKKyAqIEBpbmRleDoKKyAqIEBjb3VudDoKKyAqCisgKgorICovCitpbnQg
YWxsb2NhdGVkX2V4dGVudF9zbHVtX3NpemUoZmx1c2hfcG9zX3QgKmZsdXNoX3Bvcywgb2lkX3Qg
b2lkLAorCQkJICAgICAgIHVuc2lnbmVkIGxvbmcgaW5kZXgsIHVuc2lnbmVkIGxvbmcgY291bnQp
Cit7CisJdW5zaWduZWQgbG9uZyBpOworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKwl0eG5fYXRvbSAq
YXRvbTsKKwlpbnQgbnI7CisKKwlhdG9tID0gYXRvbV9sb2NrZWRfYnlfZnEocmVpc2VyNF9wb3Nf
ZnEoZmx1c2hfcG9zKSk7CisJYXNzZXJ0KCJ2cy0xNDY4IiwgYXRvbSk7CisKKwluciA9IDA7CisJ
dHJlZSA9IGN1cnJlbnRfdHJlZTsKKwlmb3IgKGkgPSAwOyBpIDwgY291bnQ7ICsraSwgKytpbmRl
eCkgeworCQlqbm9kZSAqbm9kZTsKKworCQlub2RlID0gamxvb2t1cCh0cmVlLCBvaWQsIGluZGV4
KTsKKwkJaWYgKCFub2RlKQorCQkJYnJlYWs7CisKKwkJaWYgKGpub2RlX2NoZWNrX2ZsdXNocHJl
cHBlZChub2RlKSkgeworCQkJYXRvbWljX2RlYygmbm9kZS0+eF9jb3VudCk7CisJCQlicmVhazsK
KwkJfQorCisJCWlmIChub2RlLT5hdG9tICE9IGF0b20pIHsKKwkJCS8qCisJCQkgKiB0aGlzIGlz
IHBvc3NpYmxlIG9uIG92ZXJ3cml0ZTogZXh0ZW50X3dyaXRlIG1heQorCQkJICogY2FwdHVyZSBz
ZXZlcmFsIHVuZm9ybWF0dGVkIG5vZGVzIHdpdGhvdXQgY2FwdHVyaW5nCisJCQkgKiBhbnkgZm9y
bWF0dGVkIG5vZGVzLgorCQkJICovCisJCQlhdG9taWNfZGVjKCZub2RlLT54X2NvdW50KTsKKwkJ
CWJyZWFrOworCQl9CisKKwkJYXNzZXJ0KCJ2cy0xNDc2IiwgYXRvbWljX3JlYWQoJm5vZGUtPnhf
Y291bnQpID4gMSk7CisJCWF0b21pY19kZWMoJm5vZGUtPnhfY291bnQpOworCQluciArKzsKKwl9
CisKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworCXJldHVybiBucjsKK30KKworLyogaWYgQGtl
eSBpcyBnbHVlYWJsZSB0byB0aGUgaXRlbSBAY29vcmQgaXMgc2V0IHRvICovCitzdGF0aWMgaW50
IG11c3RfaW5zZXJ0KGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqa2V5
KQoreworCXJlaXNlcjRfa2V5IGxhc3Q7CisKKwlpZiAoaXRlbV9pZF9ieV9jb29yZChjb29yZCkg
PT0gRVhURU5UX1BPSU5URVJfSUQKKwkgICAgJiYga2V5ZXEoYXBwZW5kX2tleV9leHRlbnQoY29v
cmQsICZsYXN0KSwga2V5KSkKKwkJcmV0dXJuIDA7CisJcmV0dXJuIDE7Cit9CisKKy8qKgorICog
Y29weSBleHRlbnQgQGNvcHkgdG8gdGhlIGVuZCBvZiBAbm9kZS4KKyAqIEl0IG1heSBoYXZlIHRv
IGVpdGhlciBpbnNlcnQgbmV3IGl0ZW0gYWZ0ZXIgdGhlIGxhc3Qgb25lLAorICogb3IgYXBwZW5k
IGxhc3QgaXRlbSwgb3IgbW9kaWZ5IGxhc3QgdW5pdCBvZiBsYXN0IGl0ZW0gdG8gaGF2ZQorICog
Z3JlYXRlciB3aWR0aAorICovCitpbnQgcHV0X3VuaXRfdG9fZW5kKHpub2RlICpub2RlLAorCQkg
ICAgY29uc3QgcmVpc2VyNF9rZXkgKmtleSwgcmVpc2VyNF9leHRlbnQgKmNvcHlfZXh0KQorewor
CWludCByZXN1bHQ7CisJY29vcmRfdCBjb29yZDsKKwljb3BfaW5zZXJ0X2ZsYWcgZmxhZ3M7CisJ
cmVpc2VyNF9leHRlbnQgKmxhc3RfZXh0OworCXJlaXNlcjRfaXRlbV9kYXRhIGRhdGE7CisKKwkv
KiBzZXQgY29vcmQgYWZ0ZXIgbGFzdCB1bml0IGluIGFuIGl0ZW0gKi8KKwljb29yZF9pbml0X2xh
c3RfdW5pdCgmY29vcmQsIG5vZGUpOworCWNvb3JkLmJldHdlZW4gPSBBRlRFUl9VTklUOworCisJ
ZmxhZ3MgPQorCSAgICBDT1BJX0RPTlRfU0hJRlRfTEVGVCB8IENPUElfRE9OVF9TSElGVF9SSUdI
VCB8IENPUElfRE9OVF9BTExPQ0FURTsKKwlpZiAobXVzdF9pbnNlcnQoJmNvb3JkLCBrZXkpKSB7
CisJCXJlc3VsdCA9CisJCSAgICBpbnNlcnRfYnlfY29vcmQoJmNvb3JkLCBpbml0X25ld19leHRl
bnQoJmRhdGEsIGNvcHlfZXh0LCAxKSwKKwkJCQkgICAga2V5LCBOVUxMIC8qbGggKi8gLCBmbGFn
cyk7CisKKwl9IGVsc2UgeworCQkvKiB0cnkgdG8gZ2x1ZSB3aXRoIGxhc3QgdW5pdCAqLworCQls
YXN0X2V4dCA9IGV4dGVudF9ieV9jb29yZCgmY29vcmQpOworCQlpZiAoc3RhdGVfb2ZfZXh0ZW50
KGxhc3RfZXh0KSAmJgorCQkgICAgZXh0ZW50X2dldF9zdGFydChsYXN0X2V4dCkgKyBleHRlbnRf
Z2V0X3dpZHRoKGxhc3RfZXh0KSA9PQorCQkgICAgZXh0ZW50X2dldF9zdGFydChjb3B5X2V4dCkp
IHsKKwkJCS8qIHdpZGVuIGxhc3QgdW5pdCBvZiBub2RlICovCisJCQlleHRlbnRfc2V0X3dpZHRo
KGxhc3RfZXh0LAorCQkJCQkgZXh0ZW50X2dldF93aWR0aChsYXN0X2V4dCkgKworCQkJCQkgZXh0
ZW50X2dldF93aWR0aChjb3B5X2V4dCkpOworCQkJem5vZGVfbWFrZV9kaXJ0eShub2RlKTsKKwkJ
CXJldHVybiAwOworCQl9CisKKwkJLyogRklYTUU6IHB1dCBhbiBhc3NlcnRpb24gaGVyZSB0aGF0
IHdlIGNhbiBub3QgbWVyZ2UgbGFzdCB1bml0IGluIEBub2RlIGFuZCBuZXcgdW5pdCAqLworCQly
ZXN1bHQgPQorCQkgICAgaW5zZXJ0X2ludG9faXRlbSgmY29vcmQsIE5VTEwgLypsaCAqLyAsIGtl
eSwKKwkJCQkgICAgIGluaXRfbmV3X2V4dGVudCgmZGF0YSwgY29weV9leHQsIDEpLAorCQkJCSAg
ICAgZmxhZ3MpOworCX0KKworCWFzc2VydCgidnMtNDM4IiwgcmVzdWx0ID09IDAgfHwgcmVzdWx0
ID09IC1FX05PREVfRlVMTCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworaW50IGtleV9ieV9vZmZz
ZXRfZXh0ZW50KHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBvZmYsIHJlaXNlcjRfa2V5ICog
a2V5KQoreworCXJldHVybiBrZXlfYnlfaW5vZGVfYW5kX29mZnNldF9jb21tb24oaW5vZGUsIG9m
Ziwga2V5KTsKK30KKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24t
c3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4Cisg
KiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEKKyAq
IEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3BsdWdpbi9pdGVtL2V4dGVudC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Bs
dWdpbi9pdGVtL2V4dGVudC5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9pdGVtL2V4dGVudC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBs
aW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9leHRlbnQuaAkyMDIwLTAyLTA1IDIw
OjUzOjQxLjQ2ODIyMjI5NCArMDEwMApAQCAtMCwwICsxLDIzMSBAQAorLyogQ29weXJpZ2h0IDIw
MDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlz
ZXI0L1JFQURNRSAqLworCisjaWZuZGVmIF9fUkVJU0VSNF9FWFRFTlRfSF9fCisjZGVmaW5lIF9f
UkVJU0VSNF9FWFRFTlRfSF9fCisKKy8qIG9uIGRpc2sgZXh0ZW50ICovCit0eXBlZGVmIHN0cnVj
dCB7CisJcmVpc2VyNF9kYmxvY2tfbnIgc3RhcnQ7CisJcmVpc2VyNF9kYmxvY2tfbnIgd2lkdGg7
Cit9IHJlaXNlcjRfZXh0ZW50OworCitzdHJ1Y3QgZXh0ZW50X3N0YXQgeworCWludCB1bmFsbG9j
YXRlZF91bml0czsKKwlpbnQgdW5hbGxvY2F0ZWRfYmxvY2tzOworCWludCBhbGxvY2F0ZWRfdW5p
dHM7CisJaW50IGFsbG9jYXRlZF9ibG9ja3M7CisJaW50IGhvbGVfdW5pdHM7CisJaW50IGhvbGVf
YmxvY2tzOworfTsKKworLyogZXh0ZW50cyBpbiBhbiBleHRlbnQgaXRlbSBjYW4gYmUgZWl0aGVy
IGhvbGVzLCBvciB1bmFsbG9jYXRlZCBvciBhbGxvY2F0ZWQKKyAgIGV4dGVudHMgKi8KK3R5cGVk
ZWYgZW51bSB7CisJSE9MRV9FWFRFTlQsCisJVU5BTExPQ0FURURfRVhURU5ULAorCUFMTE9DQVRF
RF9FWFRFTlQKK30gZXh0ZW50X3N0YXRlOworCisjZGVmaW5lIEhPTEVfRVhURU5UX1NUQVJUIDAK
KyNkZWZpbmUgVU5BTExPQ0FURURfRVhURU5UX1NUQVJUIDEKKyNkZWZpbmUgVU5BTExPQ0FURURf
RVhURU5UX1NUQVJUMiAyCisKK3N0cnVjdCBleHRlbnRfY29vcmRfZXh0ZW5zaW9uIHsKKwlyZWlz
ZXI0X2Jsb2NrX25yIHBvc19pbl91bml0OworCXJlaXNlcjRfYmxvY2tfbnIgd2lkdGg7CS8qIHdp
ZHRoIG9mIGN1cnJlbnQgdW5pdCAqLworCXBvc19pbl9ub2RlX3QgbnJfdW5pdHM7CS8qIG51bWJl
ciBvZiB1bml0cyAqLworCWludCBleHRfb2Zmc2V0OwkJLyogb2Zmc2V0IGZyb20gdGhlIGJlZ2lu
bmluZyBvZiB6ZGF0YSgpICovCisJdW5zaWduZWQgbG9uZyBleHBlY3RlZF9wYWdlOworI2lmIFJF
SVNFUjRfREVCVUcKKwlyZWlzZXI0X2V4dGVudCBleHRlbnQ7CisjZW5kaWYKK307CisKKy8qIG1h
Y3JvcyB0byBzZXQvZ2V0IGZpZWxkcyBvZiBvbi1kaXNrIGV4dGVudCAqLworc3RhdGljIGlubGlu
ZSByZWlzZXI0X2Jsb2NrX25yIGV4dGVudF9nZXRfc3RhcnQoY29uc3QgcmVpc2VyNF9leHRlbnQg
KiBleHQpCit7CisJcmV0dXJuIGxlNjRfdG9fY3B1KGV4dC0+c3RhcnQpOworfQorCitzdGF0aWMg
aW5saW5lIHJlaXNlcjRfYmxvY2tfbnIgZXh0ZW50X2dldF93aWR0aChjb25zdCByZWlzZXI0X2V4
dGVudCAqIGV4dCkKK3sKKwlyZXR1cm4gbGU2NF90b19jcHUoZXh0LT53aWR0aCk7Cit9CisKK2V4
dGVybiBfX3U2NCByZWlzZXI0X2N1cnJlbnRfYmxvY2tfY291bnQodm9pZCk7CisKK3N0YXRpYyBp
bmxpbmUgdm9pZAorZXh0ZW50X3NldF9zdGFydChyZWlzZXI0X2V4dGVudCAqIGV4dCwgcmVpc2Vy
NF9ibG9ja19uciBzdGFydCkKK3sKKwljYXNzZXJ0KHNpemVvZihleHQtPnN0YXJ0KSA9PSA4KTsK
Kwlhc3NlcnQoIm5pa2l0YS0yNTEwIiwKKwkgICAgICAgZXJnbyhzdGFydCA+IDEsIHN0YXJ0IDwg
cmVpc2VyNF9jdXJyZW50X2Jsb2NrX2NvdW50KCkpKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19s
ZTY0KHN0YXJ0KSwgJmV4dC0+c3RhcnQpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK2V4dGVu
dF9zZXRfd2lkdGgocmVpc2VyNF9leHRlbnQgKiBleHQsIHJlaXNlcjRfYmxvY2tfbnIgd2lkdGgp
Cit7CisJY2Fzc2VydChzaXplb2YoZXh0LT53aWR0aCkgPT0gOCk7CisJYXNzZXJ0KCIiLCB3aWR0
aCA+IDApOworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlNjQod2lkdGgpLCAmZXh0LT53aWR0aCk7
CisJYXNzZXJ0KCJuaWtpdGEtMjUxMSIsCisJICAgICAgIGVyZ28oZXh0ZW50X2dldF9zdGFydChl
eHQpID4gMSwKKwkJICAgIGV4dGVudF9nZXRfc3RhcnQoZXh0KSArIHdpZHRoIDw9CisJCSAgICBy
ZWlzZXI0X2N1cnJlbnRfYmxvY2tfY291bnQoKSkpOworfQorCisjZGVmaW5lIGV4dGVudF9pdGVt
KGNvb3JkKSAJCQkJCVwKKyh7CQkJCQkJCQlcCisJYXNzZXJ0KCJuaWtpdGEtMzE0MyIsIGl0ZW1f
aXNfZXh0ZW50KGNvb3JkKSk7CQlcCisJKChyZWlzZXI0X2V4dGVudCAqKWl0ZW1fYm9keV9ieV9j
b29yZCAoY29vcmQpKTsJCVwKK30pCisKKyNkZWZpbmUgZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKQkJ
CQkJXAorKHsJCQkJCQkJCVwKKwlhc3NlcnQoIm5pa2l0YS0zMTQ0IiwgaXRlbV9pc19leHRlbnQo
Y29vcmQpKTsJCVwKKwkoZXh0ZW50X2l0ZW0gKGNvb3JkKSArIChjb29yZCktPnVuaXRfcG9zKTsJ
CVwKK30pCisKKyNkZWZpbmUgd2lkdGhfYnlfY29vcmQoY29vcmQpIAkJCQkJXAorKHsJCQkJCQkJ
CVwKKwlhc3NlcnQoIm5pa2l0YS0zMTQ1IiwgaXRlbV9pc19leHRlbnQoY29vcmQpKTsJCVwKKwll
eHRlbnRfZ2V0X3dpZHRoIChleHRlbnRfYnlfY29vcmQoY29vcmQpKTsJCVwKK30pCisKK3N0cnVj
dCBjYXJyeV9jdXRfZGF0YTsKK3N0cnVjdCBjYXJyeV9raWxsX2RhdGE7CisKKy8qIHBsdWdpbi0+
dS5pdGVtLmIuKiAqLworcmVpc2VyNF9rZXkgKm1heF9rZXlfaW5zaWRlX2V4dGVudChjb25zdCBj
b29yZF90ICosIHJlaXNlcjRfa2V5ICopOworaW50IGNhbl9jb250YWluX2tleV9leHRlbnQoY29u
c3QgY29vcmRfdCAqIGNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwKKwkJCSAgIGNvbnN0
IHJlaXNlcjRfaXRlbV9kYXRhICopOworaW50IG1lcmdlYWJsZV9leHRlbnQoY29uc3QgY29vcmRf
dCAqIHAxLCBjb25zdCBjb29yZF90ICogcDIpOworcG9zX2luX25vZGVfdCBucl91bml0c19leHRl
bnQoY29uc3QgY29vcmRfdCAqKTsKK2xvb2t1cF9yZXN1bHQgbG9va3VwX2V4dGVudChjb25zdCBy
ZWlzZXI0X2tleSAqLCBsb29rdXBfYmlhcywgY29vcmRfdCAqKTsKK3ZvaWQgaW5pdF9jb29yZF9l
eHRlbnQoY29vcmRfdCAqKTsKK2ludCBpbml0X2V4dGVudChjb29yZF90ICosIHJlaXNlcjRfaXRl
bV9kYXRhICopOworaW50IHBhc3RlX2V4dGVudChjb29yZF90ICosIHJlaXNlcjRfaXRlbV9kYXRh
ICosIGNhcnJ5X3BsdWdpbl9pbmZvICopOworaW50IGNhbl9zaGlmdF9leHRlbnQodW5zaWduZWQg
ZnJlZV9zcGFjZSwKKwkJICAgICBjb29yZF90ICogc291cmNlLCB6bm9kZSAqIHRhcmdldCwgc2hp
ZnRfZGlyZWN0aW9uLAorCQkgICAgIHVuc2lnbmVkICpzaXplLCB1bnNpZ25lZCB3YW50KTsKK3Zv
aWQgY29weV91bml0c19leHRlbnQoY29vcmRfdCAqIHRhcmdldCwgY29vcmRfdCAqIHNvdXJjZSwg
dW5zaWduZWQgZnJvbSwKKwkJICAgICAgIHVuc2lnbmVkIGNvdW50LCBzaGlmdF9kaXJlY3Rpb24g
d2hlcmVfaXNfZnJlZV9zcGFjZSwKKwkJICAgICAgIHVuc2lnbmVkIGZyZWVfc3BhY2UpOworaW50
IGtpbGxfaG9va19leHRlbnQoY29uc3QgY29vcmRfdCAqLCBwb3NfaW5fbm9kZV90IGZyb20sIHBv
c19pbl9ub2RlX3QgY291bnQsCisJCSAgICAgc3RydWN0IGNhcnJ5X2tpbGxfZGF0YSAqKTsKK2lu
dCBjcmVhdGVfaG9va19leHRlbnQoY29uc3QgY29vcmRfdCAqIGNvb3JkLCB2b2lkICphcmcpOwor
aW50IGN1dF91bml0c19leHRlbnQoY29vcmRfdCAqIGNvb3JkLCBwb3NfaW5fbm9kZV90IGZyb20s
IHBvc19pbl9ub2RlX3QgdG8sCisJCSAgICAgc3RydWN0IGNhcnJ5X2N1dF9kYXRhICosIHJlaXNl
cjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwKKwkJICAgICByZWlzZXI0X2tleSAqIG5ld19maXJz
dCk7CitpbnQga2lsbF91bml0c19leHRlbnQoY29vcmRfdCAqIGNvb3JkLCBwb3NfaW5fbm9kZV90
IGZyb20sIHBvc19pbl9ub2RlX3QgdG8sCisJCSAgICAgIHN0cnVjdCBjYXJyeV9raWxsX2RhdGEg
KiwgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgICAgICByZWlzZXI0X2tleSAq
IG5ld19maXJzdCk7CityZWlzZXI0X2tleSAqdW5pdF9rZXlfZXh0ZW50KGNvbnN0IGNvb3JkX3Qg
KiwgcmVpc2VyNF9rZXkgKik7CityZWlzZXI0X2tleSAqbWF4X3VuaXRfa2V5X2V4dGVudChjb25z
dCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOwordm9pZCBwcmludF9leHRlbnQoY29uc3QgY2hh
ciAqLCBjb29yZF90ICopOworaW50IHV0bW9zdF9jaGlsZF9leHRlbnQoY29uc3QgY29vcmRfdCAq
IGNvb3JkLCBzaWRlb2Ygc2lkZSwgam5vZGUgKiogY2hpbGQpOworaW50IHV0bW9zdF9jaGlsZF9y
ZWFsX2Jsb2NrX2V4dGVudChjb25zdCBjb29yZF90ICogY29vcmQsIHNpZGVvZiBzaWRlLAorCQkJ
CSAgIHJlaXNlcjRfYmxvY2tfbnIgKiBibG9jayk7Cit2b2lkIGl0ZW1fc3RhdF9leHRlbnQoY29u
c3QgY29vcmRfdCAqIGNvb3JkLCB2b2lkICp2cCk7CitpbnQgcmVpc2VyNF9jaGVja19leHRlbnQo
Y29uc3QgY29vcmRfdCAqIGNvb3JkLCBjb25zdCBjaGFyICoqZXJyb3IpOworCisvKiBwbHVnaW4t
PnUuaXRlbS5zLmZpbGUuKiAqLworc3NpemVfdCByZWlzZXI0X3dyaXRlX2V4dGVudChzdHJ1Y3Qg
ZmlsZSAqLCBzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwKKwkJCSAgICAgY29uc3QgY2hhciBfX3VzZXIg
Kiwgc2l6ZV90LCBsb2ZmX3QgKik7CitpbnQgcmVpc2VyNF9yZWFkX2V4dGVudChzdHJ1Y3QgZmls
ZSAqLCBmbG93X3QgKiwgaGludF90ICopOworaW50IHJlaXNlcjRfcmVhZHBhZ2VfZXh0ZW50KHZv
aWQgKiwgc3RydWN0IHBhZ2UgKik7CitpbnQgcmVpc2VyNF9kb19yZWFkcGFnZV9leHRlbnQocmVp
c2VyNF9leHRlbnQqLCByZWlzZXI0X2Jsb2NrX25yLCBzdHJ1Y3QgcGFnZSopOworcmVpc2VyNF9r
ZXkgKmFwcGVuZF9rZXlfZXh0ZW50KGNvbnN0IGNvb3JkX3QgKiwgcmVpc2VyNF9rZXkgKik7Cit2
b2lkIGluaXRfY29vcmRfZXh0ZW5zaW9uX2V4dGVudCh1Zl9jb29yZF90ICosIGxvZmZfdCBvZmZz
ZXQpOworaW50IGdldF9ibG9ja19hZGRyZXNzX2V4dGVudChjb25zdCBjb29yZF90ICosIHNlY3Rv
cl90IGJsb2NrLAorCQkJICAgICBzZWN0b3JfdCAqIHJlc3VsdCk7CisKKy8qIHRoZXNlIGFyZSB1
c2VkIGluIGZsdXNoLmMKKyAgIEZJWE1FLVZTOiBzaG91bGQgdGhleSBiZSBzb21ld2hlcmUgaW4g
aXRlbV9wbHVnaW4/ICovCitpbnQgYWxsb2NhdGVfZXh0ZW50X2l0ZW1faW5fcGxhY2UoY29vcmRf
dCAqLCBsb2NrX2hhbmRsZSAqLCBmbHVzaF9wb3NfdCAqIHBvcyk7CitpbnQgYWxsb2NhdGVfYW5k
X2NvcHlfZXh0ZW50KHpub2RlICogbGVmdCwgY29vcmRfdCAqIHJpZ2h0LCBmbHVzaF9wb3NfdCAq
IHBvcywKKwkJCSAgICAgcmVpc2VyNF9rZXkgKiBzdG9wX2tleSk7CisKK2ludCBleHRlbnRfaXNf
dW5hbGxvY2F0ZWQoY29uc3QgY29vcmRfdCAqIGl0ZW0pOwkvKiBUcnVlIGlmIHRoaXMgZXh0ZW50
IGlzIHVuYWxsb2NhdGVkIChpLmUuLCBub3QgYSBob2xlLCBub3QgYWxsb2NhdGVkKS4gKi8KK19f
dTY0IGV4dGVudF91bml0X2luZGV4KGNvbnN0IGNvb3JkX3QgKiBpdGVtKTsJLyogQmxvY2sgb2Zm
c2V0IG9mIHRoaXMgdW5pdC4gKi8KK19fdTY0IGV4dGVudF91bml0X3dpZHRoKGNvbnN0IGNvb3Jk
X3QgKiBpdGVtKTsJLyogTnVtYmVyIG9mIGJsb2NrcyBpbiB0aGlzIHVuaXQuICovCisKKy8qIHBs
dWdpbi0+dS5pdGVtLmYuICovCitpbnQgcmVpc2VyNF9zY2FuX2V4dGVudChmbHVzaF9zY2FuICog
c2Nhbik7CitleHRlcm4gaW50IGtleV9ieV9vZmZzZXRfZXh0ZW50KHN0cnVjdCBpbm9kZSAqLCBs
b2ZmX3QsIHJlaXNlcjRfa2V5ICopOworCityZWlzZXI0X2l0ZW1fZGF0YSAqaW5pdF9uZXdfZXh0
ZW50KHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSwgdm9pZCAqZXh0X3VuaXQsCisJCQkJICAgaW50
IG5yX2V4dGVudHMpOworcmVpc2VyNF9ibG9ja19uciByZWlzZXI0X2V4dGVudF9zaXplKGNvbnN0
IGNvb3JkX3QgKiBjb29yZCwgcG9zX2luX25vZGVfdCBucik7CitleHRlbnRfc3RhdGUgc3RhdGVf
b2ZfZXh0ZW50KHJlaXNlcjRfZXh0ZW50ICogZXh0KTsKK3ZvaWQgcmVpc2VyNF9zZXRfZXh0ZW50
KHJlaXNlcjRfZXh0ZW50ICosIHJlaXNlcjRfYmxvY2tfbnIgc3RhcnQsCisJCQlyZWlzZXI0X2Js
b2NrX25yIHdpZHRoKTsKK2ludCByZWlzZXI0X3VwZGF0ZV9leHRlbnQoc3RydWN0IGlub2RlICos
IGpub2RlICosIGxvZmZfdCBwb3MsCisJCQkgIGludCAqcGx1Z2dlZF9ob2xlKTsKKworI2luY2x1
ZGUgIi4uLy4uL2Nvb3JkLmgiCisjaW5jbHVkZSAiLi4vLi4vbG9jay5oIgorI2luY2x1ZGUgIi4u
Ly4uL3RhcC5oIgorCitzdHJ1Y3QgcmVwbGFjZV9oYW5kbGUgeworCS8qIHRoZXNlIGFyZSB0byBi
ZSBzZXQgYmVmb3JlIGNhbGxpbmcgcmVpc2VyNF9yZXBsYWNlX2V4dGVudCAqLworCWNvb3JkX3Qg
KmNvb3JkOworCWxvY2tfaGFuZGxlICpsaDsKKwlyZWlzZXI0X2tleSBrZXk7CisJcmVpc2VyNF9r
ZXkgKnBrZXk7CisJcmVpc2VyNF9leHRlbnQgb3ZlcndyaXRlOworCXJlaXNlcjRfZXh0ZW50IG5l
d19leHRlbnRzWzJdOworCWludCBucl9uZXdfZXh0ZW50czsKKwl1bnNpZ25lZCBmbGFnczsKKwor
CS8qIHRoZXNlIGFyZSB1c2VkIGJ5IHJlaXNlcjRfcmVwbGFjZV9leHRlbnQgKi8KKwlyZWlzZXI0
X2l0ZW1fZGF0YSBpdGVtOworCWNvb3JkX3QgY29vcmRfYWZ0ZXI7CisJbG9ja19oYW5kbGUgbGhf
YWZ0ZXI7CisJdGFwX3Qgd2F0Y2g7CisJcmVpc2VyNF9rZXkgcGFzdGVfa2V5OworI2lmIFJFSVNF
UjRfREVCVUcKKwlyZWlzZXI0X2V4dGVudCBvcmlnX2V4dDsKKwlyZWlzZXI0X2tleSB0bXA7Cisj
ZW5kaWYKK307CisKKy8qIHRoaXMgc3RydWN0dXJlIGlzIGttYWxsb2NlZCBiZWZvcmUgY2FsbGlu
ZyBtYWtlX2V4dGVudCB0byBhdm9pZCBleGNlc3NpdmUKKyAgIHN0YWNrIGNvbnN1bXB0aW9uIG9u
IHBsdWdfaG9sZS0+cmVpc2VyNF9yZXBsYWNlX2V4dGVudCAqLworc3RydWN0IG1ha2VfZXh0ZW50
X2hhbmRsZSB7CisJdWZfY29vcmRfdCAqdWZfY29vcmQ7CisJcmVpc2VyNF9ibG9ja19uciBibG9j
a25yOworCWludCBjcmVhdGVkOworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CisJdW5pb24geworCQlz
dHJ1Y3QgeworCQl9IGFwcGVuZDsKKwkJc3RydWN0IHJlcGxhY2VfaGFuZGxlIHJlcGxhY2U7CisJ
fSB1OworfTsKKworaW50IHJlaXNlcjRfcmVwbGFjZV9leHRlbnQoc3RydWN0IHJlcGxhY2VfaGFu
ZGxlICosCisJCQkgICBpbnQgcmV0dXJuX2luc2VydGVkX3Bvc2l0aW9uKTsKK2xvY2tfaGFuZGxl
ICp6bm9kZV9saCh6bm9kZSAqKTsKKworLyogdGhlIHJlaXNlcjQgcmVwYWNrZXIgc3VwcG9ydCAq
Lworc3RydWN0IHJlcGFja2VyX2N1cnNvcjsKK2V4dGVybiBpbnQgcHJvY2Vzc19leHRlbnRfYmFj
a3dhcmRfZm9yX3JlcGFja2luZyh0YXBfdCAqLAorCQkJCQkJIHN0cnVjdCByZXBhY2tlcl9jdXJz
b3IgKik7CitleHRlcm4gaW50IG1hcmtfZXh0ZW50X2Zvcl9yZXBhY2tpbmcodGFwX3QgKiwgaW50
KTsKKworI2RlZmluZSBjb29yZF9ieV91Zl9jb29yZCh1Zl9jb29yZCkgKCYoKHVmX2Nvb3JkKS0+
Y29vcmQpKQorI2RlZmluZSBleHRfY29vcmRfYnlfdWZfY29vcmQodWZfY29vcmQpICgmKCh1Zl9j
b29yZCktPmV4dGVuc2lvbi5leHRlbnQpKQorCisvKiBfX1JFSVNFUjRfRVhURU5UX0hfXyAqLwor
I2VuZGlmCisvKgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTog
IksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13
aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8t
ZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9leHRl
bnRfaXRlbV9vcHMuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9leHRlbnRf
aXRlbV9vcHMuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9l
eHRlbnRfaXRlbV9vcHMuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vZXh0ZW50X2l0ZW1fb3BzLmMJMjAy
MC0wMi0wNSAyMDo1Mzo0MS40NjkyMjIzMDIgKzAxMDAKQEAgLTAsMCArMSw4ODggQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUgIml0ZW0uaCIKKyNpbmNsdWRlICIu
Li8uLi9pbm9kZS5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWVfd2Fsay5oIgkvKiBjaGVja19zaWJs
aW5nX2xpc3QoKSAqLworI2luY2x1ZGUgIi4uLy4uL3BhZ2VfY2FjaGUuaCIKKyNpbmNsdWRlICIu
Li8uLi9jYXJyeS5oIgorCisvKiBpdGVtX3BsdWdpbi0+Yi5tYXhfa2V5X2luc2lkZSAqLworcmVp
c2VyNF9rZXkgKm1heF9rZXlfaW5zaWRlX2V4dGVudChjb25zdCBjb29yZF90ICogY29vcmQsIHJl
aXNlcjRfa2V5ICoga2V5KQoreworCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCBrZXkpOworCXNl
dF9rZXlfb2Zmc2V0KGtleSwgZ2V0X2tleV9vZmZzZXQocmVpc2VyNF9tYXhfa2V5KCkpKTsKKwly
ZXR1cm4ga2V5OworfQorCisvKiBpdGVtX3BsdWdpbi0+Yi5jYW5fY29udGFpbl9rZXkKKyAgIHRo
aXMgY2hlY2tzIHdoZXRoZXIgQGtleSBvZiBAZGF0YSBpcyBtYXRjaGluZyB0byBwb3NpdGlvbiBz
ZXQgYnkgQGNvb3JkICovCitpbnQKK2Nhbl9jb250YWluX2tleV9leHRlbnQoY29uc3QgY29vcmRf
dCAqIGNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwKKwkJICAgICAgIGNvbnN0IHJlaXNl
cjRfaXRlbV9kYXRhICogZGF0YSkKK3sKKwlyZWlzZXI0X2tleSBpdGVtX2tleTsKKworCWlmIChp
dGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCkgIT0gZGF0YS0+aXBsdWcpCisJCXJldHVybiAwOwor
CisJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZpdGVtX2tleSk7CisJaWYgKGdldF9rZXlfbG9j
YWxpdHkoa2V5KSAhPSBnZXRfa2V5X2xvY2FsaXR5KCZpdGVtX2tleSkgfHwKKwkgICAgZ2V0X2tl
eV9vYmplY3RpZChrZXkpICE9IGdldF9rZXlfb2JqZWN0aWQoJml0ZW1fa2V5KSB8fAorCSAgICBn
ZXRfa2V5X29yZGVyaW5nKGtleSkgIT0gZ2V0X2tleV9vcmRlcmluZygmaXRlbV9rZXkpKQorCQly
ZXR1cm4gMDsKKworCXJldHVybiAxOworfQorCisvKiBpdGVtX3BsdWdpbi0+Yi5tZXJnZWFibGUK
KyAgIGZpcnN0IGl0ZW0gaXMgb2YgZXh0ZW50IHR5cGUgKi8KKy8qIEF1ZGl0ZWQgYnk6IGdyZWVu
KDIwMDIuMDYuMTMpICovCitpbnQgbWVyZ2VhYmxlX2V4dGVudChjb25zdCBjb29yZF90ICogcDEs
IGNvbnN0IGNvb3JkX3QgKiBwMikKK3sKKwlyZWlzZXI0X2tleSBrZXkxLCBrZXkyOworCisJYXNz
ZXJ0KCJ2cy0yOTkiLCBpdGVtX2lkX2J5X2Nvb3JkKHAxKSA9PSBFWFRFTlRfUE9JTlRFUl9JRCk7
CisJLyogRklYTUUtVlM6IFdoaWNoIGlzIGl0PyBBc3NlcnQgb3IgcmV0dXJuIDAgKi8KKwlpZiAo
aXRlbV9pZF9ieV9jb29yZChwMikgIT0gRVhURU5UX1BPSU5URVJfSUQpIHsKKwkJcmV0dXJuIDA7
CisJfQorCisJaXRlbV9rZXlfYnlfY29vcmQocDEsICZrZXkxKTsKKwlpdGVtX2tleV9ieV9jb29y
ZChwMiwgJmtleTIpOworCWlmIChnZXRfa2V5X2xvY2FsaXR5KCZrZXkxKSAhPSBnZXRfa2V5X2xv
Y2FsaXR5KCZrZXkyKSB8fAorCSAgICBnZXRfa2V5X29iamVjdGlkKCZrZXkxKSAhPSBnZXRfa2V5
X29iamVjdGlkKCZrZXkyKSB8fAorCSAgICBnZXRfa2V5X29yZGVyaW5nKCZrZXkxKSAhPSBnZXRf
a2V5X29yZGVyaW5nKCZrZXkyKSB8fAorCSAgICBnZXRfa2V5X3R5cGUoJmtleTEpICE9IGdldF9r
ZXlfdHlwZSgma2V5MikpCisJCXJldHVybiAwOworCWlmIChnZXRfa2V5X29mZnNldCgma2V5MSkg
KworCSAgICByZWlzZXI0X2V4dGVudF9zaXplKHAxLCBucl91bml0c19leHRlbnQocDEpKSAhPQor
CSAgICBnZXRfa2V5X29mZnNldCgma2V5MikpCisJCXJldHVybiAwOworCXJldHVybiAxOworfQor
CisvKiBpdGVtX3BsdWdpbi0+Yi5ucl91bml0cyAqLworcG9zX2luX25vZGVfdCBucl91bml0c19l
eHRlbnQoY29uc3QgY29vcmRfdCAqIGNvb3JkKQoreworCS8qIGxlbmd0aCBvZiBleHRlbnQgaXRl
bSBoYXMgdG8gYmUgbXVsdGlwbGUgb2YgZXh0ZW50IHNpemUgKi8KKwlhc3NlcnQoInZzLTE0MjQi
LAorCSAgICAgICAoaXRlbV9sZW5ndGhfYnlfY29vcmQoY29vcmQpICUgc2l6ZW9mKHJlaXNlcjRf
ZXh0ZW50KSkgPT0gMCk7CisJcmV0dXJuIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKSAvIHNp
emVvZihyZWlzZXI0X2V4dGVudCk7Cit9CisKKy8qIGl0ZW1fcGx1Z2luLT5iLmxvb2t1cCAqLwor
bG9va3VwX3Jlc3VsdAorbG9va3VwX2V4dGVudChjb25zdCByZWlzZXI0X2tleSAqIGtleSwgbG9v
a3VwX2JpYXMgYmlhcyBVTlVTRURfQVJHLAorCSAgICAgIGNvb3JkX3QgKiBjb29yZCkKK3sJCQkJ
Lyogem5vZGUgYW5kIGl0ZW1fcG9zIGFyZQorCQkJCSAgIHNldCB0byBhbiBleHRlbnQgaXRlbSB0
bworCQkJCSAgIGxvb2sgdGhyb3VnaCAqLworCXJlaXNlcjRfa2V5IGl0ZW1fa2V5OworCXJlaXNl
cjRfYmxvY2tfbnIgbG9va3VwZWQsIG9mZnNldDsKKwl1bnNpZ25lZCBpLCBucl91bml0czsKKwly
ZWlzZXI0X2V4dGVudCAqZXh0OworCXVuc2lnbmVkIGJsb2Nrc2l6ZTsKKwl1bnNpZ25lZCBjaGFy
IGJsb2Nrc2l6ZV9iaXRzOworCisJaXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZpdGVtX2tleSk7
CisJb2Zmc2V0ID0gZ2V0X2tleV9vZmZzZXQoJml0ZW1fa2V5KTsKKworCS8qIGtleSB3ZSBhcmUg
bG9va2luZyBmb3IgbXVzdCBiZSBncmVhdGVyIHRoYW4ga2V5IG9mIGl0ZW0gQGNvb3JkICovCisJ
YXNzZXJ0KCJ2cy00MTQiLCBrZXlndChrZXksICZpdGVtX2tleSkpOworCisJYXNzZXJ0KCJ1bWth
LTk5OTQ1IiwKKwkgICAgICAgIWtleWd0KGtleSwgbWF4X2tleV9pbnNpZGVfZXh0ZW50KGNvb3Jk
LCAmaXRlbV9rZXkpKSk7CisKKwlleHQgPSBleHRlbnRfaXRlbShjb29yZCk7CisJYXNzZXJ0KCJ2
cy0xMzUwIiwgKGNoYXIgKilleHQgPT0gKHpkYXRhKGNvb3JkLT5ub2RlKSArIGNvb3JkLT5vZmZz
ZXQpKTsKKworCWJsb2Nrc2l6ZSA9IGN1cnJlbnRfYmxvY2tzaXplOworCWJsb2Nrc2l6ZV9iaXRz
ID0gY3VycmVudF9ibG9ja3NpemVfYml0czsKKworCS8qIG9mZnNldCB3ZSBhcmUgbG9va2luZyBm
b3IgKi8KKwlsb29rdXBlZCA9IGdldF9rZXlfb2Zmc2V0KGtleSk7CisKKwlucl91bml0cyA9IG5y
X3VuaXRzX2V4dGVudChjb29yZCk7CisJLyogZ28gdGhyb3VnaCBhbGwgZXh0ZW50cyB1bnRpbCB0
aGUgb25lIHdoaWNoIGFkZHJlc3MgZ2l2ZW4gb2Zmc2V0ICovCisJZm9yIChpID0gMDsgaSA8IG5y
X3VuaXRzOyBpKyssIGV4dCsrKSB7CisJCW9mZnNldCArPSAoZXh0ZW50X2dldF93aWR0aChleHQp
IDw8IGJsb2Nrc2l6ZV9iaXRzKTsKKwkJaWYgKG9mZnNldCA+IGxvb2t1cGVkKSB7CisJCQkvKiBk
ZXNpcmVkIGJ5dGUgaXMgc29tZXdoZXJlIGluIHRoaXMgZXh0ZW50ICovCisJCQljb29yZC0+dW5p
dF9wb3MgPSBpOworCQkJY29vcmQtPmJldHdlZW4gPSBBVF9VTklUOworCQkJcmV0dXJuIENCS19D
T09SRF9GT1VORDsKKwkJfQorCX0KKworCS8qIHNldCBjb29yZCBhZnRlciBsYXN0IHVuaXQgKi8K
Kwljb29yZC0+dW5pdF9wb3MgPSBucl91bml0cyAtIDE7CisJY29vcmQtPmJldHdlZW4gPSBBRlRF
Ul9VTklUOworCXJldHVybiBDQktfQ09PUkRfRk9VTkQ7Cit9CisKKy8qIGl0ZW1fcGx1Z2luLT5i
LnBhc3RlCisgICBpdGVtIEBjb29yZCBpcyBzZXQgdG8gaGFzIGJlZW4gYXBwZW5kZWQgd2l0aCBA
ZGF0YS0+bGVuZ3RoIG9mIGZyZWUKKyAgIHNwYWNlLiBkYXRhLT5kYXRhIGNvbnRhaW5zIGRhdGEg
dG8gYmUgcGFzdGVkIGludG8gdGhlIGl0ZW0gaW4gcG9zaXRpb24KKyAgIEBjb29yZC0+aW5faXRl
bS51bml0X3Bvcy4gSXQgbXVzdCBmaXQgaW50byB0aGF0IGZyZWUgc3BhY2UuCisgICBAY29vcmQg
bXVzdCBiZSBzZXQgYmV0d2VlbiB1bml0cy4KKyovCitpbnQKK3Bhc3RlX2V4dGVudChjb29yZF90
ICogY29vcmQsIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSwKKwkgICAgIGNhcnJ5X3BsdWdpbl9p
bmZvICogaW5mbyBVTlVTRURfQVJHKQoreworCXVuc2lnbmVkIG9sZF9ucl91bml0czsKKwlyZWlz
ZXI0X2V4dGVudCAqZXh0OworCWludCBpdGVtX2xlbmd0aDsKKworCWV4dCA9IGV4dGVudF9pdGVt
KGNvb3JkKTsKKwlpdGVtX2xlbmd0aCA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKKwlv
bGRfbnJfdW5pdHMgPSAoaXRlbV9sZW5ndGggLSBkYXRhLT5sZW5ndGgpIC8gc2l6ZW9mKHJlaXNl
cjRfZXh0ZW50KTsKKworCS8qIHRoaXMgaXMgYWxzbyB1c2VkIHRvIGNvcHkgZXh0ZW50IGludG8g
bmV3bHkgY3JlYXRlZCBpdGVtLCBzbworCSAgIG9sZF9ucl91bml0cyBjb3VsZCBiZSAwICovCisJ
YXNzZXJ0KCJ2cy0yNjAiLCBpdGVtX2xlbmd0aCA+PSBkYXRhLT5sZW5ndGgpOworCisJLyogbWFr
ZSBzdXJlIHRoYXQgY29vcmQgaXMgc2V0IHByb3Blcmx5ICovCisJYXNzZXJ0KCJ2cy0zNSIsCisJ
ICAgICAgICgoIWNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoY29vcmQpKQorCQl8fCAoIW9sZF9ucl91
bml0cyAmJiAhY29vcmQtPnVuaXRfcG9zKSkpOworCisJLyogZmlyc3QgdW5pdCB0byBiZSBtb3Zl
ZCAqLworCXN3aXRjaCAoY29vcmQtPmJldHdlZW4pIHsKKwljYXNlIEFGVEVSX1VOSVQ6CisJCWNv
b3JkLT51bml0X3BvcysrOworCQkvKiBmYWxsIHRocm91Z2ggKi8KKwljYXNlIEJFRk9SRV9VTklU
OgorCQljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7CisJCWJyZWFrOworCWNhc2UgQVRfVU5JVDoK
KwkJYXNzZXJ0KCJ2cy0zMzEiLCAhb2xkX25yX3VuaXRzICYmICFjb29yZC0+dW5pdF9wb3MpOwor
CQlicmVhazsKKwlkZWZhdWx0OgorCQlpbXBvc3NpYmxlKCJ2cy0zMzAiLCAiY29vcmQgaXMgc2V0
IGltcHJvcGVybHkiKTsKKwl9CisKKwkvKiBwcmVwYXJlIHNwYWNlIGZvciBuZXcgdW5pdHMgKi8K
KwltZW1tb3ZlKGV4dCArIGNvb3JkLT51bml0X3BvcyArIGRhdGEtPmxlbmd0aCAvIHNpemVvZihy
ZWlzZXI0X2V4dGVudCksCisJCWV4dCArIGNvb3JkLT51bml0X3BvcywKKwkJKG9sZF9ucl91bml0
cyAtIGNvb3JkLT51bml0X3BvcykgKiBzaXplb2YocmVpc2VyNF9leHRlbnQpKTsKKworCS8qIGNv
cHkgbmV3IGRhdGEgZnJvbSBrZXJuZWwgc3BhY2UgKi8KKwlhc3NlcnQoInZzLTU1NiIsIGRhdGEt
PnVzZXIgPT0gMCk7CisJbWVtY3B5KGV4dCArIGNvb3JkLT51bml0X3BvcywgZGF0YS0+ZGF0YSwg
KHVuc2lnbmVkKWRhdGEtPmxlbmd0aCk7CisKKwkvKiBhZnRlciBwYXN0ZSBAY29vcmQgaXMgc2V0
IHRvIGZpcnN0IG9mIHBhc3RlZCB1bml0cyAqLworCWFzc2VydCgidnMtMzMyIiwgY29vcmRfaXNf
ZXhpc3RpbmdfdW5pdChjb29yZCkpOworCWFzc2VydCgidnMtMzMzIiwKKwkgICAgICAgIW1lbWNt
cChkYXRhLT5kYXRhLCBleHRlbnRfYnlfY29vcmQoY29vcmQpLAorCQkgICAgICAgKHVuc2lnbmVk
KWRhdGEtPmxlbmd0aCkpOworCXJldHVybiAwOworfQorCisvKiBpdGVtX3BsdWdpbi0+Yi5jYW5f
c2hpZnQgKi8KK2ludAorY2FuX3NoaWZ0X2V4dGVudCh1bnNpZ25lZCBmcmVlX3NwYWNlLCBjb29y
ZF90ICogc291cmNlLAorCQkgem5vZGUgKiB0YXJnZXQgVU5VU0VEX0FSRywgc2hpZnRfZGlyZWN0
aW9uIHBlbmQgVU5VU0VEX0FSRywKKwkJIHVuc2lnbmVkICpzaXplLCB1bnNpZ25lZCB3YW50KQor
eworCSpzaXplID0gaXRlbV9sZW5ndGhfYnlfY29vcmQoc291cmNlKTsKKwlpZiAoKnNpemUgPiBm
cmVlX3NwYWNlKQorCQkvKiBuZXZlciBzcGxpdCBhIHVuaXQgb2YgZXh0ZW50IGl0ZW0gKi8KKwkJ
KnNpemUgPSBmcmVlX3NwYWNlIC0gZnJlZV9zcGFjZSAlIHNpemVvZihyZWlzZXI0X2V4dGVudCk7
CisKKwkvKiB3ZSBjYW4gc2hpZnQgKnNpemUgYnl0ZXMsIGNhbGN1bGF0ZSBob3cgbWFueSBkbyB3
ZSB3YW50IHRvIHNoaWZ0ICovCisJaWYgKCpzaXplID4gd2FudCAqIHNpemVvZihyZWlzZXI0X2V4
dGVudCkpCisJCSpzaXplID0gd2FudCAqIHNpemVvZihyZWlzZXI0X2V4dGVudCk7CisKKwlpZiAo
KnNpemUgJSBzaXplb2YocmVpc2VyNF9leHRlbnQpICE9IDApCisJCWltcG9zc2libGUoInZzLTEx
OSIsICJXcm9uZyBleHRlbnQgc2l6ZTogJWkgJXpkIiwgKnNpemUsCisJCQkgICBzaXplb2YocmVp
c2VyNF9leHRlbnQpKTsKKwlyZXR1cm4gKnNpemUgLyBzaXplb2YocmVpc2VyNF9leHRlbnQpOwor
Cit9CisKKy8qIGl0ZW1fcGx1Z2luLT5iLmNvcHlfdW5pdHMgKi8KK3ZvaWQKK2NvcHlfdW5pdHNf
ZXh0ZW50KGNvb3JkX3QgKiB0YXJnZXQsIGNvb3JkX3QgKiBzb3VyY2UsCisJCSAgdW5zaWduZWQg
ZnJvbSwgdW5zaWduZWQgY291bnQsCisJCSAgc2hpZnRfZGlyZWN0aW9uIHdoZXJlX2lzX2ZyZWVf
c3BhY2UsIHVuc2lnbmVkIGZyZWVfc3BhY2UpCit7CisJY2hhciAqZnJvbV9leHQsICp0b19leHQ7
CisKKwlhc3NlcnQoInZzLTIxNyIsIGZyZWVfc3BhY2UgPT0gY291bnQgKiBzaXplb2YocmVpc2Vy
NF9leHRlbnQpKTsKKworCWZyb21fZXh0ID0gaXRlbV9ib2R5X2J5X2Nvb3JkKHNvdXJjZSk7CisJ
dG9fZXh0ID0gaXRlbV9ib2R5X2J5X2Nvb3JkKHRhcmdldCk7CisKKwlpZiAod2hlcmVfaXNfZnJl
ZV9zcGFjZSA9PSBTSElGVF9MRUZUKSB7CisJCWFzc2VydCgidnMtMjE1IiwgZnJvbSA9PSAwKTsK
KworCQkvKiBBdCB0aGlzIG1vbWVudCwgaXRlbSBsZW5ndGggd2FzIGFscmVhZHkgdXBkYXRlZCBp
biB0aGUgaXRlbQorCQkgICBoZWFkZXIgYnkgc2hpZnRpbmcgY29kZSwgaGVuY2UgbnJfdW5pdHNf
ZXh0ZW50KCkgd2lsbAorCQkgICByZXR1cm4gIm5ldyIgbnVtYmVyIG9mIHVuaXRzLS0tb25lIHdl
IG9idGFpbiBhZnRlciBjb3B5aW5nCisJCSAgIHVuaXRzLgorCQkgKi8KKwkJdG9fZXh0ICs9CisJ
CSAgICAobnJfdW5pdHNfZXh0ZW50KHRhcmdldCkgLSBjb3VudCkgKiBzaXplb2YocmVpc2VyNF9l
eHRlbnQpOworCX0gZWxzZSB7CisJCXJlaXNlcjRfa2V5IGtleTsKKwkJY29vcmRfdCBjb29yZDsK
KworCQlhc3NlcnQoInZzLTIxNiIsCisJCSAgICAgICBmcm9tICsgY291bnQgPT0gY29vcmRfbGFz
dF91bml0X3Bvcyhzb3VyY2UpICsgMSk7CisKKwkJZnJvbV9leHQgKz0gaXRlbV9sZW5ndGhfYnlf
Y29vcmQoc291cmNlKSAtIGZyZWVfc3BhY2U7CisKKwkJLyogbmV3IHVuaXRzIGFyZSBpbnNlcnRl
ZCBiZWZvcmUgZmlyc3QgdW5pdCBpbiBhbiBpdGVtLAorCQkgICB0aGVyZWZvcmUsIHdlIGhhdmUg
dG8gdXBkYXRlIGl0ZW0ga2V5ICovCisJCWNvb3JkID0gKnNvdXJjZTsKKwkJY29vcmQudW5pdF9w
b3MgPSBmcm9tOworCQl1bml0X2tleV9leHRlbnQoJmNvb3JkLCAma2V5KTsKKworCQlub2RlX3Bs
dWdpbl9ieV9ub2RlKHRhcmdldC0+bm9kZSktPnVwZGF0ZV9pdGVtX2tleSh0YXJnZXQsICZrZXks
CisJCQkJCQkJCSAgIE5VTEwgLyppbmZvICovKTsKKwl9CisKKwltZW1jcHkodG9fZXh0LCBmcm9t
X2V4dCwgZnJlZV9zcGFjZSk7Cit9CisKKy8qIGl0ZW1fcGx1Z2luLT5iLmNyZWF0ZV9ob29rCisg
ICBAYXJnIGlzIHpub2RlIG9mIGxlYWYgbm9kZSBmb3Igd2hpY2ggd2UgbmVlZCB0byB1cGRhdGUg
cmlnaHQgZGVsaW1pdGluZyBrZXkgKi8KK2ludCBjcmVhdGVfaG9va19leHRlbnQoY29uc3QgY29v
cmRfdCAqIGNvb3JkLCB2b2lkICphcmcpCit7CisJY29vcmRfdCAqY2hpbGRfY29vcmQ7CisJem5v
ZGUgKm5vZGU7CisJcmVpc2VyNF9rZXkga2V5OworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCWlm
ICghYXJnKQorCQlyZXR1cm4gMDsKKworCWNoaWxkX2Nvb3JkID0gYXJnOworCXRyZWUgPSB6bm9k
ZV9nZXRfdHJlZShjb29yZC0+bm9kZSk7CisKKwlhc3NlcnQoIm5pa2l0YS0zMjQ2Iiwgem5vZGVf
Z2V0X2xldmVsKGNoaWxkX2Nvb3JkLT5ub2RlKSA9PSBMRUFGX0xFVkVMKTsKKworCXdyaXRlX2xv
Y2tfdHJlZSh0cmVlKTsKKwl3cml0ZV9sb2NrX2RrKHRyZWUpOworCS8qIGZpbmQgYSBub2RlIG9u
IHRoZSBsZWZ0IGxldmVsIGZvciB3aGljaCByaWdodCBkZWxpbWl0aW5nIGtleSBoYXMgdG8KKwkg
ICBiZSB1cGRhdGVkICovCisJaWYgKGNvb3JkX3dydChjaGlsZF9jb29yZCkgPT0gQ09PUkRfT05f
VEhFX0xFRlQpIHsKKwkJYXNzZXJ0KCJ2cy00MTEiLCB6bm9kZV9pc19sZWZ0X2Nvbm5lY3RlZChj
aGlsZF9jb29yZC0+bm9kZSkpOworCQlub2RlID0gY2hpbGRfY29vcmQtPm5vZGUtPmxlZnQ7CisJ
fSBlbHNlIHsKKwkJYXNzZXJ0KCJ2cy00MTIiLCBjb29yZF93cnQoY2hpbGRfY29vcmQpID09IENP
T1JEX09OX1RIRV9SSUdIVCk7CisJCW5vZGUgPSBjaGlsZF9jb29yZC0+bm9kZTsKKwkJYXNzZXJ0
KCJuaWtpdGEtMzMxNCIsIG5vZGUgIT0gTlVMTCk7CisJfQorCisJaWYgKG5vZGUgIT0gTlVMTCkg
eworCQl6bm9kZV9zZXRfcmRfa2V5KG5vZGUsIGl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5
KSk7CisKKwkJYXNzZXJ0KCJuaWtpdGEtMzI4MiIsIGNoZWNrX3NpYmxpbmdfbGlzdChub2RlKSk7
CisJCS8qIGJyZWFrIHNpYmxpbmcgbGlua3MgKi8KKwkJaWYgKFpGX0lTU0VUKG5vZGUsIEpOT0RF
X1JJR0hUX0NPTk5FQ1RFRCkgJiYgbm9kZS0+cmlnaHQpIHsKKwkJCU9OX0RFQlVHKG5vZGUtPnJp
Z2h0LT5sZWZ0X3ZlcnNpb24gPQorCQkJCSBhdG9taWNfaW5jX3JldHVybigmZGVsaW1fa2V5X3Zl
cnNpb24pOworCQkJCSBub2RlLT5yaWdodF92ZXJzaW9uID0KKwkJCQkgYXRvbWljX2luY19yZXR1
cm4oJmRlbGltX2tleV92ZXJzaW9uKTspOworCisJCQlub2RlLT5yaWdodC0+bGVmdCA9IE5VTEw7
CisJCQlub2RlLT5yaWdodCA9IE5VTEw7CisJCX0KKwl9CisJd3JpdGVfdW5sb2NrX2RrKHRyZWUp
OworCXdyaXRlX3VubG9ja190cmVlKHRyZWUpOworCXJldHVybiAwOworfQorCisjZGVmaW5lIElU
RU1fVEFJTF9LSUxMRUQgMAorI2RlZmluZSBJVEVNX0hFQURfS0lMTEVEIDEKKyNkZWZpbmUgSVRF
TV9LSUxMRUQgMgorCisvKiBpdGVtX3BsdWdpbi0+Yi5raWxsX2hvb2sKKyAgIHRoaXMgaXMgY2Fs
bGVkIHdoZW4gQGNvdW50IHVuaXRzIHN0YXJ0aW5nIGZyb20gQGZyb20tdGggb25lIGFyZSBnb2lu
ZyB0byBiZSByZW1vdmVkCisgICAqLworaW50CitraWxsX2hvb2tfZXh0ZW50KGNvbnN0IGNvb3Jk
X3QgKiBjb29yZCwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IGNvdW50LAorCQkg
c3RydWN0IGNhcnJ5X2tpbGxfZGF0YSAqa2RhdGEpCit7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsK
KwlyZWlzZXI0X2Jsb2NrX25yIHN0YXJ0LCBsZW5ndGg7CisJY29uc3QgcmVpc2VyNF9rZXkgKnBm
cm9tX2tleSwgKnB0b19rZXk7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlyZWlzZXI0X3RyZWUg
KnRyZWU7CisJcGdvZmZfdCBmcm9tX29mZiwgdG9fb2ZmLCBvZmZzZXQsIHNraXA7CisJaW50IHJl
dHZhbDsKKworCS8qIHRoZXNlIGFyZSBsb2NhdGVkIGluIG1lbW9yeSBrbWFsbG9jLWVkIGJ5IGtp
bGxfbm9kZV9jb250ZW50ICovCisJcmVpc2VyNF9rZXkgKm1pbl9pdGVtX2tleSwgKm1heF9pdGVt
X2tleSwgKmZyb21fa2V5LCAqdG9fa2V5LCAqa2V5OworCWNvb3JkX3QgKmR1cCwgKm5leHQ7CisK
Kwlhc3NlcnQoInphbS04MTEiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQoY29vcmQtPm5vZGUpKTsK
Kwlhc3NlcnQoIm5pa2l0YS0zMzE1Iiwga2RhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2cy0zNCIs
IGtkYXRhLT5idWYgIT0gTlVMTCk7CisKKwkvKiBtYXAgc3RydWN0dXJlcyB0byBrZGF0YS0+YnVm
ICovCisJbWluX2l0ZW1fa2V5ID0gKHJlaXNlcjRfa2V5ICopIChrZGF0YS0+YnVmKTsKKwltYXhf
aXRlbV9rZXkgPSBtaW5faXRlbV9rZXkgKyAxOworCWZyb21fa2V5ID0gbWF4X2l0ZW1fa2V5ICsg
MTsKKwl0b19rZXkgPSBmcm9tX2tleSArIDE7CisJa2V5ID0gdG9fa2V5ICsgMTsKKwlkdXAgPSAo
Y29vcmRfdCAqKSAoa2V5ICsgMSk7CisJbmV4dCA9IGR1cCArIDE7CisKKwlpdGVtX2tleV9ieV9j
b29yZChjb29yZCwgbWluX2l0ZW1fa2V5KTsKKwltYXhfaXRlbV9rZXlfYnlfY29vcmQoY29vcmQs
IG1heF9pdGVtX2tleSk7CisKKwlpZiAoa2RhdGEtPnBhcmFtcy5mcm9tX2tleSkgeworCQlwZnJv
bV9rZXkgPSBrZGF0YS0+cGFyYW1zLmZyb21fa2V5OworCQlwdG9fa2V5ID0ga2RhdGEtPnBhcmFt
cy50b19rZXk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ2cy0xNTQ5IiwgZnJvbSA9PSBjb29yZC0+
dW5pdF9wb3MpOworCQl1bml0X2tleV9ieV9jb29yZChjb29yZCwgZnJvbV9rZXkpOworCQlwZnJv
bV9rZXkgPSBmcm9tX2tleTsKKworCQljb29yZF9kdXAoZHVwLCBjb29yZCk7CisJCWR1cC0+dW5p
dF9wb3MgPSBmcm9tICsgY291bnQgLSAxOworCQltYXhfdW5pdF9rZXlfYnlfY29vcmQoZHVwLCB0
b19rZXkpOworCQlwdG9fa2V5ID0gdG9fa2V5OworCX0KKworCWlmICgha2V5bHQocHRvX2tleSwg
bWF4X2l0ZW1fa2V5KSkgeworCQlpZiAoIWtleWd0KHBmcm9tX2tleSwgbWluX2l0ZW1fa2V5KSkg
eworCQkJem5vZGUgKmxlZnQsICpyaWdodDsKKworCQkJLyogaXRlbSBpcyB0byBiZSByZW1vdmVk
IGNvbXBsZXRlbHkgKi8KKwkJCWFzc2VydCgibmlraXRhLTMzMTYiLCBrZGF0YS0+bGVmdCAhPSBO
VUxMCisJCQkgICAgICAgJiYga2RhdGEtPnJpZ2h0ICE9IE5VTEwpOworCisJCQlsZWZ0ID0ga2Rh
dGEtPmxlZnQtPm5vZGU7CisJCQlyaWdodCA9IGtkYXRhLT5yaWdodC0+bm9kZTsKKworCQkJdHJl
ZSA9IGN1cnJlbnRfdHJlZTsKKwkJCS8qIHdlIGhhdmUgdG8gZG8gdHdvIHRoaW5nczoKKwkJCSAq
CisJCQkgKiAgICAgMS4gbGluayBsZWZ0IGFuZCByaWdodCBmb3JtYXR0ZWQgbmVpZ2hib3JzIG9m
CisJCQkgKiAgICAgICAgZXh0ZW50IGJlaW5nIHJlbW92ZWQsIGFuZAorCQkJICoKKwkJCSAqICAg
ICAyLiB1cGRhdGUgdGhlaXIgZGVsaW1pdGluZyBrZXlzLgorCQkJICoKKwkJCSAqIGF0b21pY2l0
eSBvZiB0aGVzZSBvcGVyYXRpb25zIGlzIHByb3RlY3RlZCBieQorCQkJICogdGFraW5nIGRrLWxv
Y2sgYW5kIHRyZWUtbG9jay4KKwkJCSAqLworCQkJLyogaWYgbmVpZ2hib3JzIG9mIGl0ZW0gYmVp
bmcgcmVtb3ZlZCBhcmUgem5vZGVzIC0KKwkJCSAqIGxpbmsgdGhlbSAqLworCQkJd3JpdGVfbG9j
a190cmVlKHRyZWUpOworCQkJd3JpdGVfbG9ja19kayh0cmVlKTsKKwkJCWxpbmtfbGVmdF9hbmRf
cmlnaHQobGVmdCwgcmlnaHQpOworCQkJaWYgKGxlZnQpIHsKKwkJCQkvKiB1cGRhdGUgcmlnaHQg
ZGVsaW1pdGluZyBrZXkgb2YgbGVmdAorCQkJCSAqIG5laWdoYm9yIG9mIGV4dGVudCBpdGVtICov
CisJCQkJLypjb29yZF90IG5leHQ7CisJCQkJICAgcmVpc2VyNF9rZXkga2V5OyAqLworCisJCQkJ
Y29vcmRfZHVwKG5leHQsIGNvb3JkKTsKKworCQkJCWlmIChjb29yZF9uZXh0X2l0ZW0obmV4dCkp
CisJCQkJCSprZXkgPSAqem5vZGVfZ2V0X3JkX2tleShjb29yZC0+bm9kZSk7CisJCQkJZWxzZQor
CQkJCQlpdGVtX2tleV9ieV9jb29yZChuZXh0LCBrZXkpOworCQkJCXpub2RlX3NldF9yZF9rZXko
bGVmdCwga2V5KTsKKwkJCX0KKwkJCXdyaXRlX3VubG9ja19kayh0cmVlKTsKKwkJCXdyaXRlX3Vu
bG9ja190cmVlKHRyZWUpOworCisJCQlmcm9tX29mZiA9CisJCQkgICAgZ2V0X2tleV9vZmZzZXQo
bWluX2l0ZW1fa2V5KSA+PiBQQUdFX1NISUZUOworCQkJdG9fb2ZmID0KKwkJCSAgICAoZ2V0X2tl
eV9vZmZzZXQobWF4X2l0ZW1fa2V5KSArCisJCQkgICAgIDEpID4+IFBBR0VfU0hJRlQ7CisJCQly
ZXR2YWwgPSBJVEVNX0tJTExFRDsKKwkJfSBlbHNlIHsKKwkJCS8qIHRhaWwgb2YgaXRlbSBpcyB0
byBiZSByZW1vdmVkICovCisJCQlmcm9tX29mZiA9CisJCQkgICAgKGdldF9rZXlfb2Zmc2V0KHBm
cm9tX2tleSkgKyBQQUdFX1NJWkUgLQorCQkJICAgICAxKSA+PiBQQUdFX1NISUZUOworCQkJdG9f
b2ZmID0KKwkJCSAgICAoZ2V0X2tleV9vZmZzZXQobWF4X2l0ZW1fa2V5KSArCisJCQkgICAgIDEp
ID4+IFBBR0VfU0hJRlQ7CisJCQlyZXR2YWwgPSBJVEVNX1RBSUxfS0lMTEVEOworCQl9CisJfSBl
bHNlIHsKKwkJLyogaGVhZCBvZiBpdGVtIGlzIHRvIGJlIHJlbW92ZWQgKi8KKwkJYXNzZXJ0KCJ2
cy0xNTcxIiwga2V5ZXEocGZyb21fa2V5LCBtaW5faXRlbV9rZXkpKTsKKwkJYXNzZXJ0KCJ2cy0x
NTcyIiwKKwkJICAgICAgIChnZXRfa2V5X29mZnNldChwZnJvbV9rZXkpICYgKFBBR0VfU0laRSAt
IDEpKSA9PQorCQkgICAgICAgMCk7CisJCWFzc2VydCgidnMtMTU3MyIsCisJCSAgICAgICAoKGdl
dF9rZXlfb2Zmc2V0KHB0b19rZXkpICsgMSkgJiAoUEFHRV9TSVpFIC0KKwkJCQkJCQkgMSkpID09
IDApOworCisJCWlmIChrZGF0YS0+bGVmdC0+bm9kZSkgeworCQkJLyogdXBkYXRlIHJpZ2h0IGRl
bGltaXRpbmcga2V5IG9mIGxlZnQgbmVpZ2hib3Igb2YgZXh0ZW50IGl0ZW0gKi8KKwkJCS8qcmVp
c2VyNF9rZXkga2V5OyAqLworCisJCQkqa2V5ID0gKnB0b19rZXk7CisJCQlzZXRfa2V5X29mZnNl
dChrZXksIGdldF9rZXlfb2Zmc2V0KHB0b19rZXkpICsgMSk7CisKKwkJCXdyaXRlX2xvY2tfZGso
Y3VycmVudF90cmVlKTsKKwkJCXpub2RlX3NldF9yZF9rZXkoa2RhdGEtPmxlZnQtPm5vZGUsIGtl
eSk7CisJCQl3cml0ZV91bmxvY2tfZGsoY3VycmVudF90cmVlKTsKKwkJfQorCisJCWZyb21fb2Zm
ID0gZ2V0X2tleV9vZmZzZXQocGZyb21fa2V5KSA+PiBQQUdFX1NISUZUOworCQl0b19vZmYgPSAo
Z2V0X2tleV9vZmZzZXQocHRvX2tleSkgKyAxKSA+PiBQQUdFX1NISUZUOworCQlyZXR2YWwgPSBJ
VEVNX0hFQURfS0lMTEVEOworCX0KKworCWlub2RlID0ga2RhdGEtPmlub2RlOworCWFzc2VydCgi
dnMtMTU0NSIsIGlub2RlICE9IE5VTEwpOworCWlmIChpbm9kZSAhPSBOVUxMKQorCQkvKiB0YWtl
IGNhcmUgb2YgcGFnZXMgYW5kIGpub2RlcyBjb3JyZXNwb25kaW5nIHRvIHBhcnQgb2YgaXRlbSBi
ZWluZyBraWxsZWQgKi8KKwkJcmVpc2VyNF9pbnZhbGlkYXRlX3BhZ2VzKGlub2RlLT5pX21hcHBp
bmcsIGZyb21fb2ZmLAorCQkJCQkgdG9fb2ZmIC0gZnJvbV9vZmYsCisJCQkJCSBrZGF0YS0+cGFy
YW1zLnRydW5jYXRlKTsKKworCWV4dCA9IGV4dGVudF9pdGVtKGNvb3JkKSArIGZyb207CisJb2Zm
c2V0ID0KKwkgICAgKGdldF9rZXlfb2Zmc2V0KG1pbl9pdGVtX2tleSkgKworCSAgICAgcmVpc2Vy
NF9leHRlbnRfc2l6ZShjb29yZCwgZnJvbSkpID4+IFBBR0VfU0hJRlQ7CisKKwlhc3NlcnQoInZz
LTE1NTEiLCBmcm9tX29mZiA+PSBvZmZzZXQpOworCWFzc2VydCgidnMtMTU1MiIsIGZyb21fb2Zm
IC0gb2Zmc2V0IDw9IGV4dGVudF9nZXRfd2lkdGgoZXh0KSk7CisJc2tpcCA9IGZyb21fb2ZmIC0g
b2Zmc2V0OworCW9mZnNldCA9IGZyb21fb2ZmOworCisJd2hpbGUgKG9mZnNldCA8IHRvX29mZikg
eworCQlsZW5ndGggPSBleHRlbnRfZ2V0X3dpZHRoKGV4dCkgLSBza2lwOworCQlpZiAoc3RhdGVf
b2ZfZXh0ZW50KGV4dCkgPT0gSE9MRV9FWFRFTlQpIHsKKwkJCXNraXAgPSAwOworCQkJb2Zmc2V0
ICs9IGxlbmd0aDsKKwkJCWV4dCsrOworCQkJY29udGludWU7CisJCX0KKworCQlpZiAob2Zmc2V0
ICsgbGVuZ3RoID4gdG9fb2ZmKSB7CisJCQlsZW5ndGggPSB0b19vZmYgLSBvZmZzZXQ7CisJCX0K
KworCQlpbm9kZV9zdWJfYmxvY2tzKGlub2RlLCBsZW5ndGgpOworCisJCWlmIChzdGF0ZV9vZl9l
eHRlbnQoZXh0KSA9PSBVTkFMTE9DQVRFRF9FWFRFTlQpIHsKKwkJCS8qIHNvbWUgam5vZGVzIGNv
cnJlc3BvbmRpbmcgdG8gdGhpcyB1bmFsbG9jYXRlZCBleHRlbnQgKi8KKwkJCWZha2VfYWxsb2Nh
dGVkMmZyZWUobGVuZ3RoLCAwIC8qIHVuZm9ybWF0dGVkICovICk7CisKKwkJCXNraXAgPSAwOwor
CQkJb2Zmc2V0ICs9IGxlbmd0aDsKKwkJCWV4dCsrOworCQkJY29udGludWU7CisJCX0KKworCQlh
c3NlcnQoInZzLTEyMTgiLCBzdGF0ZV9vZl9leHRlbnQoZXh0KSA9PSBBTExPQ0FURURfRVhURU5U
KTsKKworCQlpZiAobGVuZ3RoICE9IDApIHsKKwkJCXN0YXJ0ID0gZXh0ZW50X2dldF9zdGFydChl
eHQpICsgc2tpcDsKKworCQkJLyogQkFfREVGRVIgYml0IHBhcmFtZXRlciBpcyB0dXJuZWQgb24g
YmVjYXVzZSBibG9ja3Mgd2hpY2ggZ2V0IGZyZWVkIGFyZSBub3Qgc2FmZSB0byBiZSBmcmVlZAor
CQkJICAgaW1tZWRpYXRlbHkgKi8KKwkJCXJlaXNlcjRfZGVhbGxvY19ibG9ja3MoJnN0YXJ0LCAm
bGVuZ3RoLAorCQkJCQkgICAgICAgMCAvKiBub3QgdXNlZCAqLyAsCisJCQkJCSAgICAgICBCQV9E
RUZFUgorCQkJCQkgICAgICAgLyogdW5mb3JtYXR0ZWQgd2l0aCBkZWZlciAqLyApOworCQl9CisJ
CXNraXAgPSAwOworCQlvZmZzZXQgKz0gbGVuZ3RoOworCQlleHQrKzsKKwl9CisJcmV0dXJuIHJl
dHZhbDsKK30KKworLyogaXRlbV9wbHVnaW4tPmIua2lsbF91bml0cyAqLworaW50CitraWxsX3Vu
aXRzX2V4dGVudChjb29yZF90ICogY29vcmQsIHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25v
ZGVfdCB0bywKKwkJICBzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICprZGF0YSwgcmVpc2VyNF9rZXkg
KiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgIHJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0KQoreworCXJl
aXNlcjRfZXh0ZW50ICpleHQ7CisJcmVpc2VyNF9rZXkgaXRlbV9rZXk7CisJcG9zX2luX25vZGVf
dCBjb3VudDsKKwlyZWlzZXI0X2tleSBmcm9tX2tleSwgdG9fa2V5OworCWNvbnN0IHJlaXNlcjRf
a2V5ICpwZnJvbV9rZXksICpwdG9fa2V5OworCWxvZmZfdCBvZmY7CisJaW50IHJlc3VsdDsKKwor
CWFzc2VydCgidnMtMTU0MSIsCisJICAgICAgICgoa2RhdGEtPnBhcmFtcy5mcm9tX2tleSA9PSBO
VUxMICYmIGtkYXRhLT5wYXJhbXMudG9fa2V5ID09IE5VTEwpCisJCXx8IChrZGF0YS0+cGFyYW1z
LmZyb21fa2V5ICE9IE5VTEwKKwkJICAgICYmIGtkYXRhLT5wYXJhbXMudG9fa2V5ICE9IE5VTEwp
KSk7CisKKwlpZiAoa2RhdGEtPnBhcmFtcy5mcm9tX2tleSkgeworCQlwZnJvbV9rZXkgPSBrZGF0
YS0+cGFyYW1zLmZyb21fa2V5OworCQlwdG9fa2V5ID0ga2RhdGEtPnBhcmFtcy50b19rZXk7CisJ
fSBlbHNlIHsKKwkJY29vcmRfdCBkdXA7CisKKwkJLyogY2FsY3VsYXRlIGtleSByYW5nZSBvZiBr
aWxsICovCisJCWFzc2VydCgidnMtMTU0OSIsIGZyb20gPT0gY29vcmQtPnVuaXRfcG9zKTsKKwkJ
dW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZmcm9tX2tleSk7CisJCXBmcm9tX2tleSA9ICZmcm9t
X2tleTsKKworCQljb29yZF9kdXAoJmR1cCwgY29vcmQpOworCQlkdXAudW5pdF9wb3MgPSB0bzsK
KwkJbWF4X3VuaXRfa2V5X2J5X2Nvb3JkKCZkdXAsICZ0b19rZXkpOworCQlwdG9fa2V5ID0gJnRv
X2tleTsKKwl9CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJml0ZW1fa2V5KTsKKworI2lm
IFJFSVNFUjRfREVCVUcKKwl7CisJCXJlaXNlcjRfa2V5IG1heF9pdGVtX2tleTsKKworCQltYXhf
aXRlbV9rZXlfYnlfY29vcmQoY29vcmQsICZtYXhfaXRlbV9rZXkpOworCisJCWlmIChuZXdfZmly
c3QpIHsKKwkJCS8qIGhlYWQgb2YgaXRlbSBpcyB0byBiZSBjdXQgKi8KKwkJCWFzc2VydCgidnMt
MTU0MiIsIGtleWVxKHBmcm9tX2tleSwgJml0ZW1fa2V5KSk7CisJCQlhc3NlcnQoInZzLTE1Mzgi
LCBrZXlsdChwdG9fa2V5LCAmbWF4X2l0ZW1fa2V5KSk7CisJCX0gZWxzZSB7CisJCQkvKiB0YWls
IG9mIGl0ZW0gaXMgdG8gYmUgY3V0ICovCisJCQlhc3NlcnQoInZzLTE1NDAiLCBrZXlndChwZnJv
bV9rZXksICZpdGVtX2tleSkpOworCQkJYXNzZXJ0KCJ2cy0xNTQzIiwgIWtleWx0KHB0b19rZXks
ICZtYXhfaXRlbV9rZXkpKTsKKwkJfQorCX0KKyNlbmRpZgorCisJaWYgKHNtYWxsZXN0X3JlbW92
ZWQpCisJCSpzbWFsbGVzdF9yZW1vdmVkID0gKnBmcm9tX2tleTsKKworCWlmIChuZXdfZmlyc3Qp
IHsKKwkJLyogaXRlbSBoZWFkIGlzIGN1dC4gSXRlbSBrZXkgd2lsbCBjaGFuZ2UuIFRoaXMgbmV3
IGtleSBpcyBjYWxjdWxhdGVkIGhlcmUgKi8KKwkJYXNzZXJ0KCJ2cy0xNTU2IiwKKwkJICAgICAg
IChnZXRfa2V5X29mZnNldChwdG9fa2V5KSAmIChQQUdFX1NJWkUgLSAxKSkgPT0KKwkJICAgICAg
IChQQUdFX1NJWkUgLSAxKSk7CisJCSpuZXdfZmlyc3QgPSAqcHRvX2tleTsKKwkJc2V0X2tleV9v
ZmZzZXQobmV3X2ZpcnN0LCBnZXRfa2V5X29mZnNldChuZXdfZmlyc3QpICsgMSk7CisJfQorCisJ
Y291bnQgPSB0byAtIGZyb20gKyAxOworCXJlc3VsdCA9IGtpbGxfaG9va19leHRlbnQoY29vcmQs
IGZyb20sIGNvdW50LCBrZGF0YSk7CisJaWYgKHJlc3VsdCA9PSBJVEVNX1RBSUxfS0lMTEVEKSB7
CisJCWFzc2VydCgidnMtMTU1MyIsCisJCSAgICAgICBnZXRfa2V5X29mZnNldChwZnJvbV9rZXkp
ID49CisJCSAgICAgICBnZXRfa2V5X29mZnNldCgmaXRlbV9rZXkpICsKKwkJICAgICAgIHJlaXNl
cjRfZXh0ZW50X3NpemUoY29vcmQsIGZyb20pKTsKKwkJb2ZmID0KKwkJICAgIGdldF9rZXlfb2Zm
c2V0KHBmcm9tX2tleSkgLQorCQkJKGdldF9rZXlfb2Zmc2V0KCZpdGVtX2tleSkgKworCQkJIHJl
aXNlcjRfZXh0ZW50X3NpemUoY29vcmQsIGZyb20pKTsKKwkJaWYgKG9mZikgeworCQkJLyogdW5p
dCBAZnJvbSBpcyB0byBiZSBjdXQgcGFydGlhbGx5LiBJdHMgd2lkdGggZGVjcmVhc2VzICovCisJ
CQlleHQgPSBleHRlbnRfaXRlbShjb29yZCkgKyBmcm9tOworCQkJZXh0ZW50X3NldF93aWR0aChl
eHQsCisJCQkJCSAob2ZmICsgUEFHRV9TSVpFIC0KKwkJCQkJICAxKSA+PiBQQUdFX1NISUZUKTsK
KwkJCWNvdW50LS07CisJCX0KKwl9IGVsc2UgeworCQlfX3U2NCBtYXhfdG9fb2Zmc2V0OworCQlf
X3U2NCByZXN0OworCisJCWFzc2VydCgidnMtMTU3NSIsIHJlc3VsdCA9PSBJVEVNX0hFQURfS0lM
TEVEKTsKKwkJYXNzZXJ0KCIiLCBmcm9tID09IDApOworCQlhc3NlcnQoIiIsCisJCSAgICAgICAo
KGdldF9rZXlfb2Zmc2V0KHB0b19rZXkpICsgMSkgJiAoUEFHRV9TSVpFIC0KKwkJCQkJCQkgMSkp
ID09IDApOworCQlhc3NlcnQoIiIsCisJCSAgICAgICBnZXRfa2V5X29mZnNldChwdG9fa2V5KSAr
IDEgPgorCQkgICAgICAgZ2V0X2tleV9vZmZzZXQoJml0ZW1fa2V5KSArCisJCSAgICAgICByZWlz
ZXI0X2V4dGVudF9zaXplKGNvb3JkLCB0bykpOworCQltYXhfdG9fb2Zmc2V0ID0KKwkJICAgIGdl
dF9rZXlfb2Zmc2V0KCZpdGVtX2tleSkgKworCQkJcmVpc2VyNF9leHRlbnRfc2l6ZShjb29yZCwg
dG8gKyAxKSAtIDE7CisJCWFzc2VydCgiIiwgZ2V0X2tleV9vZmZzZXQocHRvX2tleSkgPD0gbWF4
X3RvX29mZnNldCk7CisKKwkJcmVzdCA9CisJCSAgICAobWF4X3RvX29mZnNldCAtCisJCSAgICAg
Z2V0X2tleV9vZmZzZXQocHRvX2tleSkpID4+IFBBR0VfU0hJRlQ7CisJCWlmIChyZXN0KSB7CisJ
CQkvKiB1bml0IEB0byBpcyB0byBiZSBjdXQgcGFydGlhbGx5ICovCisJCQlleHQgPSBleHRlbnRf
aXRlbShjb29yZCkgKyB0bzsKKworCQkJYXNzZXJ0KCIiLCBleHRlbnRfZ2V0X3dpZHRoKGV4dCkg
PiByZXN0KTsKKworCQkJaWYgKHN0YXRlX29mX2V4dGVudChleHQpID09IEFMTE9DQVRFRF9FWFRF
TlQpCisJCQkJZXh0ZW50X3NldF9zdGFydChleHQsCisJCQkJCQkgZXh0ZW50X2dldF9zdGFydChl
eHQpICsKKwkJCQkJCSAoZXh0ZW50X2dldF93aWR0aChleHQpIC0KKwkJCQkJCSAgcmVzdCkpOwor
CisJCQlleHRlbnRfc2V0X3dpZHRoKGV4dCwgcmVzdCk7CisJCQljb3VudC0tOworCQl9CisJfQor
CXJldHVybiBjb3VudCAqIHNpemVvZihyZWlzZXI0X2V4dGVudCk7Cit9CisKKy8qIGl0ZW1fcGx1
Z2luLT5iLmN1dF91bml0cworICAgdGhpcyBpcyB0b28gc2ltaWxhciB0byBraWxsX3VuaXRzX2V4
dGVudCAqLworaW50CitjdXRfdW5pdHNfZXh0ZW50KGNvb3JkX3QgKiBjb29yZCwgcG9zX2luX25v
ZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCQkgc3RydWN0IGNhcnJ5X2N1dF9kYXRhICpj
ZGF0YSwgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgcmVpc2VyNF9rZXkgKiBu
ZXdfZmlyc3QpCit7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKwlyZWlzZXI0X2tleSBpdGVtX2tl
eTsKKwlwb3NfaW5fbm9kZV90IGNvdW50OworCXJlaXNlcjRfa2V5IGZyb21fa2V5LCB0b19rZXk7
CisJY29uc3QgcmVpc2VyNF9rZXkgKnBmcm9tX2tleSwgKnB0b19rZXk7CisJbG9mZl90IG9mZjsK
KworCWFzc2VydCgidnMtMTU0MSIsCisJICAgICAgICgoY2RhdGEtPnBhcmFtcy5mcm9tX2tleSA9
PSBOVUxMICYmIGNkYXRhLT5wYXJhbXMudG9fa2V5ID09IE5VTEwpCisJCXx8IChjZGF0YS0+cGFy
YW1zLmZyb21fa2V5ICE9IE5VTEwKKwkJICAgICYmIGNkYXRhLT5wYXJhbXMudG9fa2V5ICE9IE5V
TEwpKSk7CisKKwlpZiAoY2RhdGEtPnBhcmFtcy5mcm9tX2tleSkgeworCQlwZnJvbV9rZXkgPSBj
ZGF0YS0+cGFyYW1zLmZyb21fa2V5OworCQlwdG9fa2V5ID0gY2RhdGEtPnBhcmFtcy50b19rZXk7
CisJfSBlbHNlIHsKKwkJY29vcmRfdCBkdXA7CisKKwkJLyogY2FsY3VsYXRlIGtleSByYW5nZSBv
ZiBraWxsICovCisJCWNvb3JkX2R1cCgmZHVwLCBjb29yZCk7CisJCWR1cC51bml0X3BvcyA9IGZy
b207CisJCXVuaXRfa2V5X2J5X2Nvb3JkKCZkdXAsICZmcm9tX2tleSk7CisKKwkJZHVwLnVuaXRf
cG9zID0gdG87CisJCW1heF91bml0X2tleV9ieV9jb29yZCgmZHVwLCAmdG9fa2V5KTsKKworCQlw
ZnJvbV9rZXkgPSAmZnJvbV9rZXk7CisJCXB0b19rZXkgPSAmdG9fa2V5OworCX0KKworCWFzc2Vy
dCgidnMtMTU1NSIsCisJICAgICAgIChnZXRfa2V5X29mZnNldChwZnJvbV9rZXkpICYgKFBBR0Vf
U0laRSAtIDEpKSA9PSAwKTsKKwlhc3NlcnQoInZzLTE1NTYiLAorCSAgICAgICAoZ2V0X2tleV9v
ZmZzZXQocHRvX2tleSkgJiAoUEFHRV9TSVpFIC0gMSkpID09CisJICAgICAgIChQQUdFX1NJWkUg
LSAxKSk7CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJml0ZW1fa2V5KTsKKworI2lmIFJF
SVNFUjRfREVCVUcKKwl7CisJCXJlaXNlcjRfa2V5IG1heF9pdGVtX2tleTsKKworCQlhc3NlcnQo
InZzLTE1ODQiLAorCQkgICAgICAgZ2V0X2tleV9sb2NhbGl0eShwZnJvbV9rZXkpID09CisJCSAg
ICAgICBnZXRfa2V5X2xvY2FsaXR5KCZpdGVtX2tleSkpOworCQlhc3NlcnQoInZzLTE1ODUiLAor
CQkgICAgICAgZ2V0X2tleV90eXBlKHBmcm9tX2tleSkgPT0gZ2V0X2tleV90eXBlKCZpdGVtX2tl
eSkpOworCQlhc3NlcnQoInZzLTE1ODYiLAorCQkgICAgICAgZ2V0X2tleV9vYmplY3RpZChwZnJv
bV9rZXkpID09CisJCSAgICAgICBnZXRfa2V5X29iamVjdGlkKCZpdGVtX2tleSkpOworCQlhc3Nl
cnQoInZzLTE1ODciLAorCQkgICAgICAgZ2V0X2tleV9vcmRlcmluZyhwZnJvbV9rZXkpID09CisJ
CSAgICAgICBnZXRfa2V5X29yZGVyaW5nKCZpdGVtX2tleSkpOworCisJCW1heF9pdGVtX2tleV9i
eV9jb29yZChjb29yZCwgJm1heF9pdGVtX2tleSk7CisKKwkJaWYgKG5ld19maXJzdCAhPSBOVUxM
KSB7CisJCQkvKiBoZWFkIG9mIGl0ZW0gaXMgdG8gYmUgY3V0ICovCisJCQlhc3NlcnQoInZzLTE1
NDIiLCBrZXllcShwZnJvbV9rZXksICZpdGVtX2tleSkpOworCQkJYXNzZXJ0KCJ2cy0xNTM4Iiwg
a2V5bHQocHRvX2tleSwgJm1heF9pdGVtX2tleSkpOworCQl9IGVsc2UgeworCQkJLyogdGFpbCBv
ZiBpdGVtIGlzIHRvIGJlIGN1dCAqLworCQkJYXNzZXJ0KCJ2cy0xNTQwIiwga2V5Z3QocGZyb21f
a2V5LCAmaXRlbV9rZXkpKTsKKwkJCWFzc2VydCgidnMtMTU0MyIsIGtleWVxKHB0b19rZXksICZt
YXhfaXRlbV9rZXkpKTsKKwkJfQorCX0KKyNlbmRpZgorCisJaWYgKHNtYWxsZXN0X3JlbW92ZWQp
CisJCSpzbWFsbGVzdF9yZW1vdmVkID0gKnBmcm9tX2tleTsKKworCWlmIChuZXdfZmlyc3QpIHsK
KwkJLyogaXRlbSBoZWFkIGlzIGN1dC4gSXRlbSBrZXkgd2lsbCBjaGFuZ2UuIFRoaXMgbmV3IGtl
eSBpcyBjYWxjdWxhdGVkIGhlcmUgKi8KKwkJKm5ld19maXJzdCA9ICpwdG9fa2V5OworCQlzZXRf
a2V5X29mZnNldChuZXdfZmlyc3QsIGdldF9rZXlfb2Zmc2V0KG5ld19maXJzdCkgKyAxKTsKKwl9
CisKKwljb3VudCA9IHRvIC0gZnJvbSArIDE7CisKKwlhc3NlcnQoInZzLTE1NTMiLAorCSAgICAg
ICBnZXRfa2V5X29mZnNldChwZnJvbV9rZXkpID49CisJICAgICAgIGdldF9rZXlfb2Zmc2V0KCZp
dGVtX2tleSkgKyByZWlzZXI0X2V4dGVudF9zaXplKGNvb3JkLCBmcm9tKSk7CisJb2ZmID0KKwkg
ICAgZ2V0X2tleV9vZmZzZXQocGZyb21fa2V5KSAtIChnZXRfa2V5X29mZnNldCgmaXRlbV9rZXkp
ICsKKwkJCQkJIHJlaXNlcjRfZXh0ZW50X3NpemUoY29vcmQsIGZyb20pKTsKKwlpZiAob2ZmKSB7
CisJCS8qIHRhaWwgb2YgdW5pdCBAZnJvbSBpcyB0byBiZSBjdXQgcGFydGlhbGx5LiBJdHMgd2lk
dGggZGVjcmVhc2VzICovCisJCWFzc2VydCgidnMtMTU4MiIsIG5ld19maXJzdCA9PSBOVUxMKTsK
KwkJZXh0ID0gZXh0ZW50X2l0ZW0oY29vcmQpICsgZnJvbTsKKwkJZXh0ZW50X3NldF93aWR0aChl
eHQsIG9mZiA+PiBQQUdFX1NISUZUKTsKKwkJY291bnQtLTsKKwl9CisKKwlhc3NlcnQoInZzLTE1
NTQiLAorCSAgICAgICBnZXRfa2V5X29mZnNldChwdG9fa2V5KSA8PQorCSAgICAgICBnZXRfa2V5
X29mZnNldCgmaXRlbV9rZXkpICsKKwkgICAgICAgcmVpc2VyNF9leHRlbnRfc2l6ZShjb29yZCwg
dG8gKyAxKSAtIDEpOworCW9mZiA9CisJCShnZXRfa2V5X29mZnNldCgmaXRlbV9rZXkpICsKKwkJ
IHJlaXNlcjRfZXh0ZW50X3NpemUoY29vcmQsIHRvICsgMSkgLSAxKSAtCisJCWdldF9rZXlfb2Zm
c2V0KHB0b19rZXkpOworCWlmIChvZmYpIHsKKwkJLyogQHRvX2tleSBpcyBzbWFsbGVyIHRoYW4g
bWF4IGtleSBvZiB1bml0IEB0by4gVW5pdCBAdG8gd2lsbCBub3QgYmUgcmVtb3ZlZC4gSXQgZ2V0
cyBzdGFydCBpbmNyZWFzZWQKKwkJICAgYW5kIHdpZHRoIGRlY3JlYXNlZC4gKi8KKwkJYXNzZXJ0
KCJ2cy0xNTgzIiwgKG9mZiAmIChQQUdFX1NJWkUgLSAxKSkgPT0gMCk7CisJCWV4dCA9IGV4dGVu
dF9pdGVtKGNvb3JkKSArIHRvOworCQlpZiAoc3RhdGVfb2ZfZXh0ZW50KGV4dCkgPT0gQUxMT0NB
VEVEX0VYVEVOVCkKKwkJCWV4dGVudF9zZXRfc3RhcnQoZXh0LAorCQkJCQkgZXh0ZW50X2dldF9z
dGFydChleHQpICsKKwkJCQkJIChleHRlbnRfZ2V0X3dpZHRoKGV4dCkgLQorCQkJCQkgIChvZmYg
Pj4gUEFHRV9TSElGVCkpKTsKKworCQlleHRlbnRfc2V0X3dpZHRoKGV4dCwgKG9mZiA+PiBQQUdF
X1NISUZUKSk7CisJCWNvdW50LS07CisJfQorCXJldHVybiBjb3VudCAqIHNpemVvZihyZWlzZXI0
X2V4dGVudCk7Cit9CisKKy8qIGl0ZW1fcGx1Z2luLT5iLnVuaXRfa2V5ICovCityZWlzZXI0X2tl
eSAqdW5pdF9rZXlfZXh0ZW50KGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgcmVpc2VyNF9rZXkgKiBr
ZXkpCit7CisJYXNzZXJ0KCJ2cy0zMDAiLCBjb29yZF9pc19leGlzdGluZ191bml0KGNvb3JkKSk7
CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwga2V5KTsKKwlzZXRfa2V5X29mZnNldChrZXks
CisJCSAgICAgICAoZ2V0X2tleV9vZmZzZXQoa2V5KSArCisJCQlyZWlzZXI0X2V4dGVudF9zaXpl
KGNvb3JkLCBjb29yZC0+dW5pdF9wb3MpKSk7CisKKwlyZXR1cm4ga2V5OworfQorCisvKiBpdGVt
X3BsdWdpbi0+Yi5tYXhfdW5pdF9rZXkgKi8KK3JlaXNlcjRfa2V5ICptYXhfdW5pdF9rZXlfZXh0
ZW50KGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgcmVpc2VyNF9rZXkgKiBrZXkpCit7CisJYXNzZXJ0
KCJ2cy0zMDAiLCBjb29yZF9pc19leGlzdGluZ191bml0KGNvb3JkKSk7CisKKwlpdGVtX2tleV9i
eV9jb29yZChjb29yZCwga2V5KTsKKwlzZXRfa2V5X29mZnNldChrZXksCisJCSAgICAgICAoZ2V0
X2tleV9vZmZzZXQoa2V5KSArCisJCQlyZWlzZXI0X2V4dGVudF9zaXplKGNvb3JkLCBjb29yZC0+
dW5pdF9wb3MgKyAxKSAtIDEpKTsKKwlyZXR1cm4ga2V5OworfQorCisvKiBpdGVtX3BsdWdpbi0+
Yi5lc3RpbWF0ZQorICAgaXRlbV9wbHVnaW4tPmIuaXRlbV9kYXRhX2J5X2Zsb3cgKi8KKworI2lm
IFJFSVNFUjRfREVCVUcKKworLyogaXRlbV9wbHVnaW4tPmIuY2hlY2sKKyAgIHVzZWQgZm9yIGRl
YnVnZ2luZywgZXZlcnkgaXRlbSBzaG91bGQgaGF2ZSBoZXJlIHRoZSBtb3N0IGNvbXBsZXRlCisg
ICBwb3NzaWJsZSBjaGVjayBvZiB0aGUgY29uc2lzdGVuY3kgb2YgdGhlIGl0ZW0gdGhhdCB0aGUg
aW52ZW50b3IgY2FuCisgICBjb25zdHJ1Y3QKKyovCitpbnQgcmVpc2VyNF9jaGVja19leHRlbnQo
Y29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0gdG8gY2hlY2sgKi8sCisJCQkg
Y29uc3QgY2hhciAqKmVycm9yIC8qIHdoZXJlIHRvIHN0b3JlIGVycm9yIG1lc3NhZ2UgKi8pCit7
CisJcmVpc2VyNF9leHRlbnQgKmV4dCwgKmZpcnN0OworCXVuc2lnbmVkIGksIGo7CisJcmVpc2Vy
NF9ibG9ja19uciBzdGFydCwgd2lkdGgsIGJsa19jbnQ7CisJdW5zaWduZWQgbnVtX3VuaXRzOwor
CXJlaXNlcjRfdHJlZSAqdHJlZTsKKwlvaWRfdCBvaWQ7CisJcmVpc2VyNF9rZXkga2V5OworCWNv
b3JkX3Qgc2NhbjsKKworCWFzc2VydCgidnMtOTMzIiwgUkVJU0VSNF9ERUJVRyk7CisKKwlpZiAo
em5vZGVfZ2V0X2xldmVsKGNvb3JkLT5ub2RlKSAhPSBUV0lHX0xFVkVMKSB7CisJCSplcnJvciA9
ICJFeHRlbnQgb24gdGhlIHdyb25nIGxldmVsIjsKKwkJcmV0dXJuIC0xOworCX0KKwlpZiAoaXRl
bV9sZW5ndGhfYnlfY29vcmQoY29vcmQpICUgc2l6ZW9mKHJlaXNlcjRfZXh0ZW50KSAhPSAwKSB7
CisJCSplcnJvciA9ICJXcm9uZyBpdGVtIHNpemUiOworCQlyZXR1cm4gLTE7CisJfQorCWV4dCA9
IGZpcnN0ID0gZXh0ZW50X2l0ZW0oY29vcmQpOworCWJsa19jbnQgPSByZWlzZXI0X2Jsb2NrX2Nv
dW50KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSk7CisJbnVtX3VuaXRzID0gY29vcmRfbnVtX3Vu
aXRzKGNvb3JkKTsKKwl0cmVlID0gem5vZGVfZ2V0X3RyZWUoY29vcmQtPm5vZGUpOworCWl0ZW1f
a2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KTsKKwlvaWQgPSBnZXRfa2V5X29iamVjdGlkKCZrZXkp
OworCWNvb3JkX2R1cCgmc2NhbiwgY29vcmQpOworCisJZm9yIChpID0gMDsgaSA8IG51bV91bml0
czsgKytpLCArK2V4dCkgeworCQlfX3U2NCBpbmRleDsKKworCQlzY2FuLnVuaXRfcG9zID0gaTsK
KwkJaW5kZXggPSBleHRlbnRfdW5pdF9pbmRleCgmc2Nhbik7CisKKyNpZiAwCisJCS8qIGNoZWNr
IHRoYXQgYWxsIGpub2RlcyBhcmUgcHJlc2VudCBmb3IgdGhlIHVuYWxsb2NhdGVkCisJCSAqIGV4
dGVudCAqLworCQlpZiAoc3RhdGVfb2ZfZXh0ZW50KGV4dCkgPT0gVU5BTExPQ0FURURfRVhURU5U
KSB7CisJCQlmb3IgKGogPSAwOyBqIDwgZXh0ZW50X2dldF93aWR0aChleHQpOyBqKyspIHsKKwkJ
CQlqbm9kZSAqbm9kZTsKKworCQkJCW5vZGUgPSBqbG9va3VwKHRyZWUsIG9pZCwgaW5kZXggKyBq
KTsKKwkJCQlpZiAobm9kZSA9PSBOVUxMKSB7CisJCQkJCXByaW50X2Nvb3JkKCJzY2FuIiwgJnNj
YW4sIDApOworCQkJCQkqZXJyb3IgPSAiSm5vZGUgbWlzc2luZyI7CisJCQkJCXJldHVybiAtMTsK
KwkJCQl9CisJCQkJanB1dChub2RlKTsKKwkJCX0KKwkJfQorI2VuZGlmCisKKwkJc3RhcnQgPSBl
eHRlbnRfZ2V0X3N0YXJ0KGV4dCk7CisJCWlmIChzdGFydCA8IDIpCisJCQljb250aW51ZTsKKwkJ
LyogZXh0ZW50IGlzIGFsbG9jYXRlZCBvbmUgKi8KKwkJd2lkdGggPSBleHRlbnRfZ2V0X3dpZHRo
KGV4dCk7CisJCWlmIChzdGFydCA+PSBibGtfY250KSB7CisJCQkqZXJyb3IgPSAiU3RhcnQgdG9v
IGxhcmdlIjsKKwkJCXJldHVybiAtMTsKKwkJfQorCQlpZiAoc3RhcnQgKyB3aWR0aCA+IGJsa19j
bnQpIHsKKwkJCSplcnJvciA9ICJFbmQgdG9vIGxhcmdlIjsKKwkJCXJldHVybiAtMTsKKwkJfQor
CQkvKiBtYWtlIHN1cmUgdGhhdCB0aGlzIGV4dGVudCBkb2VzIG5vdCBvdmVybGFwIHdpdGggb3Ro
ZXIKKwkJICAgYWxsb2NhdGVkIGV4dGVudHMgZXh0ZW50cyAqLworCQlmb3IgKGogPSAwOyBqIDwg
aTsgaisrKSB7CisJCQlpZiAoc3RhdGVfb2ZfZXh0ZW50KGZpcnN0ICsgaikgIT0gQUxMT0NBVEVE
X0VYVEVOVCkKKwkJCQljb250aW51ZTsKKwkJCWlmICghCisJCQkgICAgKChleHRlbnRfZ2V0X3N0
YXJ0KGV4dCkgPj0KKwkJCSAgICAgIGV4dGVudF9nZXRfc3RhcnQoZmlyc3QgKyBqKSArCisJCQkg
ICAgICBleHRlbnRfZ2V0X3dpZHRoKGZpcnN0ICsgaikpCisJCQkgICAgIHx8IChleHRlbnRfZ2V0
X3N0YXJ0KGV4dCkgKworCQkJCSBleHRlbnRfZ2V0X3dpZHRoKGV4dCkgPD0KKwkJCQkgZXh0ZW50
X2dldF9zdGFydChmaXJzdCArIGopKSkpIHsKKwkJCQkqZXJyb3IgPSAiRXh0ZW50IG92ZXJsYXBz
IHdpdGggb3RoZXJzIjsKKwkJCQlyZXR1cm4gLTE7CisJCQl9CisJCX0KKworCX0KKworCXJldHVy
biAwOworfQorCisjZW5kaWYJCQkJLyogUkVJU0VSNF9ERUJVRyAqLworCisvKgorICAgTG9jYWwg
dmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTog
IkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1
bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRl
cmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vaW50ZXJu
YWwuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9pbnRlcm5hbC5jCi0tLSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2ludGVybmFsLmMJMTk3MC0w
MS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3BsdWdpbi9pdGVtL2ludGVybmFsLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NjkyMjIzMDIgKzAx
MDAKQEAgLTAsMCArMSw0MDUgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhh
bnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyog
SW1wbGVtZW50YXRpb24gb2YgaW50ZXJuYWwtaXRlbSBwbHVnaW4gbWV0aG9kcy4gKi8KKworI2lu
Y2x1ZGUgIi4uLy4uL2ZvcndhcmQuaCIKKyNpbmNsdWRlICIuLi8uLi9kZWJ1Zy5oIgorI2luY2x1
ZGUgIi4uLy4uL2Rmb3JtYXQuaCIKKyNpbmNsdWRlICIuLi8uLi9rZXkuaCIKKyNpbmNsdWRlICIu
Li8uLi9jb29yZC5oIgorI2luY2x1ZGUgImludGVybmFsLmgiCisjaW5jbHVkZSAiaXRlbS5oIgor
I2luY2x1ZGUgIi4uL25vZGUvbm9kZS5oIgorI2luY2x1ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1
ZGUgIi4uLy4uL2pub2RlLmgiCisjaW5jbHVkZSAiLi4vLi4vem5vZGUuaCIKKyNpbmNsdWRlICIu
Li8uLi90cmVlX3dhbGsuaCIKKyNpbmNsdWRlICIuLi8uLi90cmVlX21vZC5oIgorI2luY2x1ZGUg
Ii4uLy4uL3RyZWUuaCIKKyNpbmNsdWRlICIuLi8uLi9zdXBlci5oIgorI2luY2x1ZGUgIi4uLy4u
L2Jsb2NrX2FsbG9jLmgiCisKKy8qIHNlZSBpbnRlcm5hbC5oIGZvciBleHBsYW5hdGlvbiAqLwor
CisvKiBwbHVnaW4tPnUuaXRlbS5iLm1lcmdlYWJsZSAqLworaW50IG1lcmdlYWJsZV9pbnRlcm5h
bChjb25zdCBjb29yZF90ICogcDEgVU5VU0VEX0FSRyAvKiBmaXJzdCBpdGVtICovICwKKwkJICAg
ICAgIGNvbnN0IGNvb3JkX3QgKiBwMiBVTlVTRURfQVJHIC8qIHNlY29uZCBpdGVtICovICkKK3sK
KwkvKiBpbnRlcm5hbCBpdGVtcyBhcmUgbm90IG1lcmdlYWJsZSAqLworCXJldHVybiAwOworfQor
CisvKiAtPmxvb2t1cCgpIG1ldGhvZCBmb3IgaW50ZXJuYWwgaXRlbXMgKi8KK2xvb2t1cF9yZXN1
bHQgbG9va3VwX2ludGVybmFsKGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSB0byBsb29r
IHVwICovICwKKwkJCSAgICAgIGxvb2t1cF9iaWFzIGJpYXMgVU5VU0VEX0FSRyAvKiBsb29rdXAg
YmlhcyAqLyAsCisJCQkgICAgICBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAqLyAp
Cit7CisJcmVpc2VyNF9rZXkgdWtleTsKKworCXN3aXRjaCAoa2V5Y21wKHVuaXRfa2V5X2J5X2Nv
b3JkKGNvb3JkLCAmdWtleSksIGtleSkpIHsKKwlkZWZhdWx0OgorCQlpbXBvc3NpYmxlKCIiLCAi
a2V5Y21wKCk/ISIpOworCWNhc2UgTEVTU19USEFOOgorCQkvKiBGSVhNRS1WUzogQUZURVJfSVRF
TSB1c2VkIHRvIGJlIGhlcmUuIEJ1dCB3aXRoIG5ldyBjb29yZAorCQkgICBpdGVtIHBsdWdpbiBj
YW4gbm90IGJlIHRha2VuIHVzaW5nIGNvb3JkIHNldCB0aGlzIHdheSAqLworCQlhc3NlcnQoInZz
LTY4MSIsIGNvb3JkLT51bml0X3BvcyA9PSAwKTsKKwkJY29vcmQtPmJldHdlZW4gPSBBRlRFUl9V
TklUOworCQkvKiBmYWxsIHRocm91Z2ggKi8KKwljYXNlIEVRVUFMX1RPOgorCQlyZXR1cm4gQ0JL
X0NPT1JEX0ZPVU5EOworCWNhc2UgR1JFQVRFUl9USEFOOgorCQlyZXR1cm4gQ0JLX0NPT1JEX05P
VEZPVU5EOworCX0KK30KKworLyogcmV0dXJuIGJvZHkgb2YgaW50ZXJuYWwgaXRlbSBhdCBAY29v
cmQgKi8KK3N0YXRpYyBpbnRlcm5hbF9pdGVtX2xheW91dCAqaW50ZXJuYWxfYXQoY29uc3QgY29v
cmRfdCAqIGNvb3JkCS8qIGNvb3JkIG9mCisJCQkJCQkJCSAqIGl0ZW0gKi8gKQoreworCWFzc2Vy
dCgibmlraXRhLTYwNyIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE2NTAiLAor
CSAgICAgICBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCkgPT0KKwkgICAgICAgaXRlbV9wbHVn
aW5fYnlfaWQoTk9ERV9QT0lOVEVSX0lEKSk7CisJcmV0dXJuIChpbnRlcm5hbF9pdGVtX2xheW91
dCAqKSBpdGVtX2JvZHlfYnlfY29vcmQoY29vcmQpOworfQorCit2b2lkIHJlaXNlcjRfdXBkYXRl
X2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwKKwkJCSAgICAgY29uc3QgcmVpc2VyNF9i
bG9ja19uciAqIGJsb2NrbnIpCit7CisJaW50ZXJuYWxfaXRlbV9sYXlvdXQgKml0ZW0gPSBpbnRl
cm5hbF9hdChjb29yZCk7CisJYXNzZXJ0KCJuaWtpdGEtMjk1OSIsIHJlaXNlcjRfYmxvY2tucl9p
c19zYW5lKGJsb2NrbnIpKTsKKworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlNjQoKmJsb2NrbnIp
LCAmaXRlbS0+cG9pbnRlcik7Cit9CisKKy8qIHJldHVybiBjaGlsZCBibG9jayBudW1iZXIgc3Rv
cmVkIGluIHRoZSBpbnRlcm5hbCBpdGVtIGF0IEBjb29yZCAqLworc3RhdGljIHJlaXNlcjRfYmxv
Y2tfbnIgcG9pbnRlcl9hdChjb25zdCBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAq
LyApCit7CisJYXNzZXJ0KCJuaWtpdGEtNjA4IiwgY29vcmQgIT0gTlVMTCk7CisJcmV0dXJuIGxl
NjRfdG9fY3B1KGdldF91bmFsaWduZWQoJmludGVybmFsX2F0KGNvb3JkKS0+cG9pbnRlcikpOwor
fQorCisvKiBnZXQgem5vZGUgcG9pbnRlZCB0byBieSBpbnRlcm5hbCBAaXRlbSAqLworc3RhdGlj
IHpub2RlICp6bm9kZV9hdChjb25zdCBjb29yZF90ICogaXRlbSAvKiBjb29yZCBvZiBpdGVtICov
ICwKKwkJICAgICAgIHpub2RlICogcGFyZW50IC8qIHBhcmVudCBub2RlICovICkKK3sKKwlyZXR1
cm4gY2hpbGRfem5vZGUoaXRlbSwgcGFyZW50LCAxLCAwKTsKK30KKworLyogc3RvcmUgcG9pbnRl
ciBmcm9tIGludGVybmFsIGl0ZW0gaW50byAiYmxvY2siLiBJbXBsZW1lbnRhdGlvbiBvZgorICAg
IC0+ZG93bl9saW5rKCkgbWV0aG9kICovCit2b2lkIGRvd25fbGlua19pbnRlcm5hbChjb25zdCBj
b29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAqLyAsCisJCQljb25zdCByZWlzZXI0X2tl
eSAqIGtleSBVTlVTRURfQVJHCS8qIGtleSB0byBnZXQKKwkJCQkJCQkJICogcG9pbnRlciBmb3Ig
Ki8gLAorCQkJcmVpc2VyNF9ibG9ja19uciAqIGJsb2NrIC8qIHJlc3VsdGluZyBibG9jayBudW1i
ZXIgKi8gKQoreworCU9OX0RFQlVHKHJlaXNlcjRfa2V5IGl0ZW1fa2V5KTsKKworCWFzc2VydCgi
bmlraXRhLTYwOSIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTYxMSIsIGJsb2Nr
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTYxMiIsIChrZXkgPT0gTlVMTCkgfHwKKwkgICAg
ICAgLyogdHdpZyBob3Jyb3JzICovCisJICAgICAgICh6bm9kZV9nZXRfbGV2ZWwoY29vcmQtPm5v
ZGUpID09IFRXSUdfTEVWRUwpCisJICAgICAgIHx8IGtleWxlKGl0ZW1fa2V5X2J5X2Nvb3JkKGNv
b3JkLCAmaXRlbV9rZXkpLCBrZXkpKTsKKworCSpibG9jayA9IHBvaW50ZXJfYXQoY29vcmQpOwor
CWFzc2VydCgibmlraXRhLTI5NjAiLCByZWlzZXI0X2Jsb2NrbnJfaXNfc2FuZShibG9jaykpOwor
fQorCisvKiBHZXQgdGhlIGNoaWxkJ3MgYmxvY2sgbnVtYmVyLCBvciAwIGlmIHRoZSBibG9jayBp
cyB1bmFsbG9jYXRlZC4gKi8KK2ludAordXRtb3N0X2NoaWxkX3JlYWxfYmxvY2tfaW50ZXJuYWwo
Y29uc3QgY29vcmRfdCAqIGNvb3JkLCBzaWRlb2Ygc2lkZSBVTlVTRURfQVJHLAorCQkJCSByZWlz
ZXI0X2Jsb2NrX25yICogYmxvY2spCit7CisJYXNzZXJ0KCJqbWFjZC0yMDU5IiwgY29vcmQgIT0g
TlVMTCk7CisKKwkqYmxvY2sgPSBwb2ludGVyX2F0KGNvb3JkKTsKKwlhc3NlcnQoIm5pa2l0YS0y
OTYxIiwgcmVpc2VyNF9ibG9ja25yX2lzX3NhbmUoYmxvY2spKTsKKworCWlmIChyZWlzZXI0X2Js
b2NrbnJfaXNfZmFrZShibG9jaykpIHsKKwkJKmJsb2NrID0gMDsKKwl9CisKKwlyZXR1cm4gMDsK
K30KKworLyogUmV0dXJuIHRoZSBjaGlsZC4gKi8KK2ludAordXRtb3N0X2NoaWxkX2ludGVybmFs
KGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgc2lkZW9mIHNpZGUgVU5VU0VEX0FSRywKKwkJICAgICAg
am5vZGUgKiogY2hpbGRwKQoreworCXJlaXNlcjRfYmxvY2tfbnIgYmxvY2sgPSBwb2ludGVyX2F0
KGNvb3JkKTsKKwl6bm9kZSAqY2hpbGQ7CisKKwlhc3NlcnQoImptYWNkLTIwNTkiLCBjaGlsZHAg
IT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjk2MiIsIHJlaXNlcjRfYmxvY2tucl9pc19zYW5l
KCZibG9jaykpOworCisJY2hpbGQgPSB6bG9vayh6bm9kZV9nZXRfdHJlZShjb29yZC0+bm9kZSks
ICZibG9jayk7CisKKwlpZiAoSVNfRVJSKGNoaWxkKSkgeworCQlyZXR1cm4gUFRSX0VSUihjaGls
ZCk7CisJfQorCisJKmNoaWxkcCA9IFpKTk9ERShjaGlsZCk7CisKKwlyZXR1cm4gMDsKK30KKwor
I2lmIFJFSVNFUjRfREVCVUcKKworc3RhdGljIHZvaWQgY2hlY2tfbGluayh6bm9kZSAqIGxlZnQs
IHpub2RlICogcmlnaHQpCit7CisJem5vZGUgKnNjYW47CisKKwlmb3IgKHNjYW4gPSBsZWZ0OyBz
Y2FuICE9IHJpZ2h0OyBzY2FuID0gc2Nhbi0+cmlnaHQpIHsKKwkJaWYgKFpGX0lTU0VUKHNjYW4s
IEpOT0RFX1JJUCkpCisJCQlicmVhazsKKwkJaWYgKHpub2RlX2lzX3JpZ2h0X2Nvbm5lY3RlZChz
Y2FuKSAmJiBzY2FuLT5yaWdodCAhPSBOVUxMKSB7CisJCQlpZiAoWkZfSVNTRVQoc2Nhbi0+cmln
aHQsIEpOT0RFX1JJUCkpCisJCQkJYnJlYWs7CisJCQlhc3NlcnQoIm5pa2l0YS0zMjg1IiwKKwkJ
CSAgICAgICB6bm9kZV9pc19sZWZ0X2Nvbm5lY3RlZChzY2FuLT5yaWdodCkpOworCQkJYXNzZXJ0
KCJuaWtpdGEtMzI2NSIsCisJCQkgICAgICAgZXJnbyhzY2FuICE9IGxlZnQsCisJCQkJICAgIFpG
X0lTU0VUKHNjYW4sIEpOT0RFX0hFQVJEX0JBTlNIRUUpKSk7CisJCQlhc3NlcnQoIm5pa2l0YS0z
Mjg0Iiwgc2Nhbi0+cmlnaHQtPmxlZnQgPT0gc2Nhbik7CisJCX0gZWxzZQorCQkJYnJlYWs7CisJ
fQorfQorCitpbnQgY2hlY2tfX2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY29uc3Qg
Y2hhciAqKmVycm9yKQoreworCXJlaXNlcjRfYmxvY2tfbnIgYmxrOworCXpub2RlICpjaGlsZDsK
Kwljb29yZF90IGNweTsKKworCWJsayA9IHBvaW50ZXJfYXQoY29vcmQpOworCWlmICghcmVpc2Vy
NF9ibG9ja25yX2lzX3NhbmUoJmJsaykpIHsKKwkJKmVycm9yID0gIkludmFsaWQgcG9pbnRlciI7
CisJCXJldHVybiAtMTsKKwl9CisJY29vcmRfZHVwKCZjcHksIGNvb3JkKTsKKwljaGlsZCA9IHpu
b2RlX2F0KCZjcHksIGNweS5ub2RlKTsKKwlpZiAoY2hpbGQgIT0gTlVMTCkgeworCQl6bm9kZSAq
bGVmdF9jaGlsZDsKKwkJem5vZGUgKnJpZ2h0X2NoaWxkOworCisJCWxlZnRfY2hpbGQgPSByaWdo
dF9jaGlsZCA9IE5VTEw7CisKKwkJYXNzZXJ0KCJuaWtpdGEtMzI1NiIsIHpub2RlX2ludmFyaWFu
dChjaGlsZCkpOworCQlpZiAoY29vcmRfcHJldl9pdGVtKCZjcHkpID09IDAgJiYgaXRlbV9pc19p
bnRlcm5hbCgmY3B5KSkgeworCQkJbGVmdF9jaGlsZCA9IHpub2RlX2F0KCZjcHksIGNweS5ub2Rl
KTsKKwkJCWlmIChsZWZ0X2NoaWxkICE9IE5VTEwpIHsKKwkJCQlyZWFkX2xvY2tfdHJlZSh6bm9k
ZV9nZXRfdHJlZShjaGlsZCkpOworCQkJCWNoZWNrX2xpbmsobGVmdF9jaGlsZCwgY2hpbGQpOwor
CQkJCXJlYWRfdW5sb2NrX3RyZWUoem5vZGVfZ2V0X3RyZWUoY2hpbGQpKTsKKwkJCQl6cHV0KGxl
ZnRfY2hpbGQpOworCQkJfQorCQl9CisJCWNvb3JkX2R1cCgmY3B5LCBjb29yZCk7CisJCWlmIChj
b29yZF9uZXh0X2l0ZW0oJmNweSkgPT0gMCAmJiBpdGVtX2lzX2ludGVybmFsKCZjcHkpKSB7CisJ
CQlyaWdodF9jaGlsZCA9IHpub2RlX2F0KCZjcHksIGNweS5ub2RlKTsKKwkJCWlmIChyaWdodF9j
aGlsZCAhPSBOVUxMKSB7CisJCQkJcmVhZF9sb2NrX3RyZWUoem5vZGVfZ2V0X3RyZWUoY2hpbGQp
KTsKKwkJCQljaGVja19saW5rKGNoaWxkLCByaWdodF9jaGlsZCk7CisJCQkJcmVhZF91bmxvY2tf
dHJlZSh6bm9kZV9nZXRfdHJlZShjaGlsZCkpOworCQkJCXpwdXQocmlnaHRfY2hpbGQpOworCQkJ
fQorCQl9CisJCXpwdXQoY2hpbGQpOworCX0KKwlyZXR1cm4gMDsKK30KKworI2VuZGlmICAvKiAg
UkVJU0VSNF9ERUJVRyAgKi8KKworLyogcmV0dXJuIHRydWUgb25seSBpZiB0aGlzIGl0ZW0gcmVh
bGx5IHBvaW50cyB0byAiYmxvY2siICovCisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAyLjA2LjE0
KSAqLworaW50IGhhc19wb2ludGVyX3RvX2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCAv
KiBjb29yZCBvZiBpdGVtICovICwKKwkJCSAgICBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogYmxv
Y2sJLyogYmxvY2sgbnVtYmVyIHRvCisJCQkJCQkJCSAqIGNoZWNrICovICkKK3sKKwlhc3NlcnQo
Im5pa2l0YS02MTMiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02MTQiLCBibG9j
ayAhPSBOVUxMKTsKKworCXJldHVybiBwb2ludGVyX2F0KGNvb3JkKSA9PSAqYmxvY2s7Cit9CisK
Ky8qIGhvb2sgY2FsbGVkIGJ5IC0+Y3JlYXRlX2l0ZW0oKSBtZXRob2Qgb2Ygbm9kZSBwbHVnaW4g
YWZ0ZXIgbmV3IGludGVybmFsCisgICBpdGVtIHdhcyBqdXN0IGNyZWF0ZWQuCisKKyAgIFRoaXMg
aXMgcG9pbnQgd2hlcmUgcG9pbnRlciB0byBuZXcgbm9kZSBpcyBpbnNlcnRlZCBpbnRvIHRyZWUu
IEluaXRpYWxpemUKKyAgIHBhcmVudCBwb2ludGVyIGluIGNoaWxkIHpub2RlLCBpbnNlcnQgY2hp
bGQgaW50byBzaWJsaW5nIGxpc3QgYW5kIHNsdW0uCisKKyovCitpbnQgY3JlYXRlX2hvb2tfaW50
ZXJuYWwoY29uc3QgY29vcmRfdCAqIGl0ZW0gLyogY29vcmQgb2YgaXRlbSAqLyAsCisJCQkgdm9p
ZCAqYXJnIC8qIGNoaWxkJ3MgbGVmdCBuZWlnaGJvciwgaWYgYW55ICovICkKK3sKKwl6bm9kZSAq
Y2hpbGQ7CisJX191NjQgY2hpbGRfcHRyOworCisJYXNzZXJ0KCJuaWtpdGEtMTI1MiIsIGl0ZW0g
IT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTI1MyIsIGl0ZW0tPm5vZGUgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTE4MSIsIHpub2RlX2dldF9sZXZlbChpdGVtLT5ub2RlKSA+IExFQUZf
TEVWRUwpOworCWFzc2VydCgibmlraXRhLTE0NTAiLCBpdGVtLT51bml0X3BvcyA9PSAwKTsKKwor
CS8qCisJICogcHJlcGFyaW5nIHRvIGl0ZW0gaW5zZXJ0aW9uIGJ1aWxkX2NoaWxkX3B0cl9kYXRh
IHNldHMgcG9pbnRlciB0bworCSAqIGRhdGEgdG8gYmUgaW5zZXJ0ZWQgdG8gam5vZGUncyBibG9j
a25yIHdoaWNoIGlzIGluIGNwdSBieXRlCisJICogb3JkZXIuIE5vZGUncyBjcmVhdGVfaXRlbSBz
aW1wbHkgY29waWVkIHRob3NlIGRhdGEuIEFzIHJlc3VsdCB3ZQorCSAqIGhhdmUgY2hpbGQgcG9p
bnRlciBpbiBjcHUncyBieXRlIG9yZGVyLiBDb252ZXJ0IGNvbnRlbnQgb2YgaW50ZXJuYWwKKwkg
KiBpdGVtIHRvIGxpdHRsZSBlbmRpYW4gYnl0ZSBvcmRlci4KKwkgKi8KKwljaGlsZF9wdHIgPSBn
ZXRfdW5hbGlnbmVkKChfX3U2NCAqKWl0ZW1fYm9keV9ieV9jb29yZChpdGVtKSk7CisJcmVpc2Vy
NF91cGRhdGVfaW50ZXJuYWwoaXRlbSwgJmNoaWxkX3B0cik7CisKKwljaGlsZCA9IHpub2RlX2F0
KGl0ZW0sIGl0ZW0tPm5vZGUpOworCWlmIChjaGlsZCAhPSBOVUxMICYmICFJU19FUlIoY2hpbGQp
KSB7CisJCXpub2RlICpsZWZ0OworCQlpbnQgcmVzdWx0ID0gMDsKKwkJcmVpc2VyNF90cmVlICp0
cmVlOworCisJCWxlZnQgPSBhcmc7CisJCXRyZWUgPSB6bm9kZV9nZXRfdHJlZShpdGVtLT5ub2Rl
KTsKKwkJd3JpdGVfbG9ja190cmVlKHRyZWUpOworCQl3cml0ZV9sb2NrX2RrKHRyZWUpOworCQlh
c3NlcnQoIm5pa2l0YS0xNDAwIiwgKGNoaWxkLT5pbl9wYXJlbnQubm9kZSA9PSBOVUxMKQorCQkg
ICAgICAgfHwgKHpub2RlX2Fib3ZlX3Jvb3QoY2hpbGQtPmluX3BhcmVudC5ub2RlKSkpOworCQkr
K2l0ZW0tPm5vZGUtPmNfY291bnQ7CisJCWNvb3JkX3RvX3BhcmVudF9jb29yZChpdGVtLCAmY2hp
bGQtPmluX3BhcmVudCk7CisJCXNpYmxpbmdfbGlzdF9pbnNlcnRfbm9sb2NrKGNoaWxkLCBsZWZ0
KTsKKworCQlhc3NlcnQoIm5pa2l0YS0zMjk3IiwgWkZfSVNTRVQoY2hpbGQsIEpOT0RFX09SUEhB
TikpOworCQlaRl9DTFIoY2hpbGQsIEpOT0RFX09SUEhBTik7CisKKwkJaWYgKChsZWZ0ICE9IE5V
TEwpICYmICFrZXllcSh6bm9kZV9nZXRfcmRfa2V5KGxlZnQpLAorCQkJCQkgICAgIHpub2RlX2dl
dF9yZF9rZXkoY2hpbGQpKSkgeworCQkJem5vZGVfc2V0X3JkX2tleShjaGlsZCwgem5vZGVfZ2V0
X3JkX2tleShsZWZ0KSk7CisJCX0KKwkJd3JpdGVfdW5sb2NrX2RrKHRyZWUpOworCQl3cml0ZV91
bmxvY2tfdHJlZSh0cmVlKTsKKwkJenB1dChjaGlsZCk7CisJCXJldHVybiByZXN1bHQ7CisJfSBl
bHNlIHsKKwkJaWYgKGNoaWxkID09IE5VTEwpCisJCQljaGlsZCA9IEVSUl9QVFIoLUVJTyk7CisJ
CXJldHVybiBQVFJfRVJSKGNoaWxkKTsKKwl9Cit9CisKKy8qIGhvb2sgY2FsbGVkIGJ5IC0+Y3V0
X2FuZF9raWxsKCkgbWV0aG9kIG9mIG5vZGUgcGx1Z2luIGp1c3QgYmVmb3JlIGludGVybmFsCisg
ICBpdGVtIGlzIHJlbW92ZWQuCisKKyAgIFRoaXMgaXMgcG9pbnQgd2hlcmUgZW1wdHkgbm9kZSBp
cyByZW1vdmVkIGZyb20gdGhlIHRyZWUuIENsZWFyIHBhcmVudAorICAgcG9pbnRlciBpbiBjaGls
ZCwgYW5kIG1hcmsgbm9kZSBmb3IgcGVuZGluZyBkZWxldGlvbi4KKworICAgTm9kZSB3aWxsIGJl
IGFjdHVhbGx5IGRlbGV0ZWQgbGF0ZXIgYW5kIGluIHNldmVyYWwgaW5zdGFsbGF0aW9uczoKKwor
ICAgIC4gd2hlbiBsYXN0IGxvY2sgb24gdGhpcyBub2RlIHdpbGwgYmUgcmVsZWFzZWQsIG5vZGUg
d2lsbCBiZSByZW1vdmVkIGZyb20KKyAgICB0aGUgc2libGluZyBsaXN0IGFuZCBpdHMgbG9jayB3
aWxsIGJlIGludmFsaWRhdGVkCisKKyAgICAuIHdoZW4gbGFzdCByZWZlcmVuY2UgdG8gdGhpcyBu
b2RlIHdpbGwgYmUgZHJvcHBlZCwgYml0bWFwIHdpbGwgYmUgdXBkYXRlZAorICAgIGFuZCBub2Rl
IHdpbGwgYmUgYWN0dWFsbHkgcmVtb3ZlZCBmcm9tIHRoZSBtZW1vcnkuCisKKyovCitpbnQga2ls
bF9ob29rX2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBpdGVtIC8qIGNvb3JkIG9mIGl0ZW0gKi8g
LAorCQkgICAgICAgcG9zX2luX25vZGVfdCBmcm9tIFVOVVNFRF9BUkcgLyogc3RhcnQgdW5pdCAq
LyAsCisJCSAgICAgICBwb3NfaW5fbm9kZV90IGNvdW50IFVOVVNFRF9BUkcgLyogc3RvcCB1bml0
ICovICwKKwkJICAgICAgIHN0cnVjdCBjYXJyeV9raWxsX2RhdGEgKnAgVU5VU0VEX0FSRykKK3sK
Kwl6bm9kZSAqY2hpbGQ7CisJaW50IHJlc3VsdCA9IDA7CisKKwlhc3NlcnQoIm5pa2l0YS0xMjIy
IiwgaXRlbSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjI0IiwgZnJvbSA9PSAwKTsKKwlh
c3NlcnQoIm5pa2l0YS0xMjI1IiwgY291bnQgPT0gMSk7CisKKwljaGlsZCA9IHpub2RlX2F0KGl0
ZW0sIGl0ZW0tPm5vZGUpOworCWlmIChjaGlsZCA9PSBOVUxMKQorCQlyZXR1cm4gMDsKKwlpZiAo
SVNfRVJSKGNoaWxkKSkKKwkJcmV0dXJuIFBUUl9FUlIoY2hpbGQpOworCXJlc3VsdCA9IHpsb2Fk
KGNoaWxkKTsKKwlpZiAocmVzdWx0KSB7CisJCXpwdXQoY2hpbGQpOworCQlyZXR1cm4gcmVzdWx0
OworCX0KKwlpZiAobm9kZV9pc19lbXB0eShjaGlsZCkpIHsKKwkJcmVpc2VyNF90cmVlICp0cmVl
OworCisJCWFzc2VydCgibmlraXRhLTEzOTciLCB6bm9kZV9pc193cml0ZV9sb2NrZWQoY2hpbGQp
KTsKKwkJYXNzZXJ0KCJuaWtpdGEtMTM5OCIsIGNoaWxkLT5jX2NvdW50ID09IDApOworCQlhc3Nl
cnQoIm5pa2l0YS0yNTQ2IiwgWkZfSVNTRVQoY2hpbGQsIEpOT0RFX0hFQVJEX0JBTlNIRUUpKTsK
KworCQl0cmVlID0gem5vZGVfZ2V0X3RyZWUoaXRlbS0+bm9kZSk7CisJCXdyaXRlX2xvY2tfdHJl
ZSh0cmVlKTsKKwkJaW5pdF9wYXJlbnRfY29vcmQoJmNoaWxkLT5pbl9wYXJlbnQsIE5VTEwpOwor
CQktLWl0ZW0tPm5vZGUtPmNfY291bnQ7CisJCXdyaXRlX3VubG9ja190cmVlKHRyZWUpOworCX0g
ZWxzZSB7CisJCXdhcm5pbmcoIm5pa2l0YS0xMjIzIiwKKwkJCSJDb3dhcmRseSByZWZ1c2UgdG8g
cmVtb3ZlIGxpbmsgdG8gbm9uLWVtcHR5IG5vZGUiKTsKKwkJcmVzdWx0ID0gUkVURVJSKC1FSU8p
OworCX0KKwl6cmVsc2UoY2hpbGQpOworCXpwdXQoY2hpbGQpOworCXJldHVybiByZXN1bHQ7Cit9
CisKKy8qIGhvb2sgY2FsbGVkIGJ5IC0+c2hpZnQoKSBub2RlIHBsdWdpbiBtZXRob2Qgd2hlbiBp
dGVybmFsIGl0ZW0gd2FzIGp1c3QKKyAgIG1vdmVkIGZyb20gb25lIG5vZGUgdG8gYW5vdGhlci4K
KworICAgVXBkYXRlIHBhcmVudCBwb2ludGVyIGluIGNoaWxkIGFuZCBjX2NvdW50cyBpbiBvbGQg
YW5kIG5ldyBwYXJlbnQKKworKi8KK2ludCBzaGlmdF9ob29rX2ludGVybmFsKGNvbnN0IGNvb3Jk
X3QgKiBpdGVtIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkJdW5zaWduZWQgZnJvbSBVTlVTRURf
QVJHIC8qIHN0YXJ0IHVuaXQgKi8gLAorCQkJdW5zaWduZWQgY291bnQgVU5VU0VEX0FSRyAvKiBz
dG9wIHVuaXQgKi8gLAorCQkJem5vZGUgKiBvbGRfbm9kZSAvKiBvbGQgcGFyZW50ICovICkKK3sK
Kwl6bm9kZSAqY2hpbGQ7CisJem5vZGUgKm5ld19ub2RlOworCXJlaXNlcjRfdHJlZSAqdHJlZTsK
KworCWFzc2VydCgibmlraXRhLTEyNzYiLCBpdGVtICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTEyNzciLCBmcm9tID09IDApOworCWFzc2VydCgibmlraXRhLTEyNzgiLCBjb3VudCA9PSAxKTsK
Kwlhc3NlcnQoIm5pa2l0YS0xNDUxIiwgaXRlbS0+dW5pdF9wb3MgPT0gMCk7CisKKwluZXdfbm9k
ZSA9IGl0ZW0tPm5vZGU7CisJYXNzZXJ0KCJuaWtpdGEtMjEzMiIsIG5ld19ub2RlICE9IG9sZF9u
b2RlKTsKKwl0cmVlID0gem5vZGVfZ2V0X3RyZWUoaXRlbS0+bm9kZSk7CisJY2hpbGQgPSBjaGls
ZF96bm9kZShpdGVtLCBvbGRfbm9kZSwgMSwgMCk7CisJaWYgKGNoaWxkID09IE5VTEwpCisJCXJl
dHVybiAwOworCWlmICghSVNfRVJSKGNoaWxkKSkgeworCQl3cml0ZV9sb2NrX3RyZWUodHJlZSk7
CisJCSsrbmV3X25vZGUtPmNfY291bnQ7CisJCWFzc2VydCgibmlraXRhLTEzOTUiLCB6bm9kZV9w
YXJlbnQoY2hpbGQpID09IG9sZF9ub2RlKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMTM5NiIsIG9sZF9u
b2RlLT5jX2NvdW50ID4gMCk7CisJCWNvb3JkX3RvX3BhcmVudF9jb29yZChpdGVtLCAmY2hpbGQt
PmluX3BhcmVudCk7CisJCWFzc2VydCgibmlraXRhLTE3ODEiLCB6bm9kZV9wYXJlbnQoY2hpbGQp
ID09IG5ld19ub2RlKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMTc4MiIsCisJCSAgICAgICBjaGVja190
cmVlX3BvaW50ZXIoaXRlbSwgY2hpbGQpID09IE5TX0ZPVU5EKTsKKwkJLS1vbGRfbm9kZS0+Y19j
b3VudDsKKwkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisJCXpwdXQoY2hpbGQpOworCQlyZXR1
cm4gMDsKKwl9IGVsc2UKKwkJcmV0dXJuIFBUUl9FUlIoY2hpbGQpOworfQorCisvKiBwbHVnaW4t
PnUuaXRlbS5iLm1heF9rZXlfaW5zaWRlIC0gbm90IGRlZmluZWQgKi8KKworLyogcGx1Z2luLT51
Lml0ZW0uYi5ucl91bml0cyAtIGl0ZW0uYzpzaW5nbGVfdW5pdCAqLworCisvKiBNYWtlIExpbnVz
IGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksm
UiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0
aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVy
ZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9pbnRlcm5h
bC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2ludGVybmFsLmgKLS0tIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vaW50ZXJuYWwuaAkxOTcwLTAx
LTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQv
cGx1Z2luL2l0ZW0vaW50ZXJuYWwuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ2OTIyMjMwMiArMDEw
MApAQCAtMCwwICsxLDU3IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5z
IFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisvKiBJbnRl
cm5hbCBpdGVtIGNvbnRhaW5zIGRvd24tbGluayB0byB0aGUgY2hpbGQgb2YgdGhlIGludGVybmFs
L3R3aWcKKyAgIG5vZGUgaW4gYSB0cmVlLiBJdCBpcyBpbnRlcm5hbCBpdGVtcyB0aGF0IGFyZSBh
Y3R1YWxseSB1c2VkIGR1cmluZworICAgdHJlZSB0cmF2ZXJzYWwuICovCisKKyNpZiAhZGVmaW5l
ZCggX19GU19SRUlTRVI0X1BMVUdJTl9JVEVNX0lOVEVSTkFMX0hfXyApCisjZGVmaW5lIF9fRlNf
UkVJU0VSNF9QTFVHSU5fSVRFTV9JTlRFUk5BTF9IX18KKworI2luY2x1ZGUgIi4uLy4uL2Zvcndh
cmQuaCIKKyNpbmNsdWRlICIuLi8uLi9kZm9ybWF0LmgiCisKKy8qIG9uLWRpc2sgbGF5b3V0IG9m
IGludGVybmFsIGl0ZW0gKi8KK3R5cGVkZWYgc3RydWN0IGludGVybmFsX2l0ZW1fbGF5b3V0IHsK
KwkvKiAgMCAqLyByZWlzZXI0X2RibG9ja19uciBwb2ludGVyOworCS8qICA0ICovCit9IGludGVy
bmFsX2l0ZW1fbGF5b3V0OworCitzdHJ1Y3QgY3V0X2xpc3Q7CisKK2ludCBtZXJnZWFibGVfaW50
ZXJuYWwoY29uc3QgY29vcmRfdCAqIHAxLCBjb25zdCBjb29yZF90ICogcDIpOworbG9va3VwX3Jl
c3VsdCBsb29rdXBfaW50ZXJuYWwoY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksIGxvb2t1cF9iaWFz
IGJpYXMsCisJCQkgICAgICBjb29yZF90ICogY29vcmQpOworLyogc3RvcmUgcG9pbnRlciBmcm9t
IGludGVybmFsIGl0ZW0gaW50byAiYmxvY2siLiBJbXBsZW1lbnRhdGlvbiBvZgorICAgIC0+ZG93
bl9saW5rKCkgbWV0aG9kICovCitleHRlcm4gdm9pZCBkb3duX2xpbmtfaW50ZXJuYWwoY29uc3Qg
Y29vcmRfdCAqIGNvb3JkLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwKKwkJCSAgICAgICByZWlz
ZXI0X2Jsb2NrX25yICogYmxvY2spOworZXh0ZXJuIGludCBoYXNfcG9pbnRlcl90b19pbnRlcm5h
bChjb25zdCBjb29yZF90ICogY29vcmQsCisJCQkJICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAq
IGJsb2NrKTsKK2V4dGVybiBpbnQgY3JlYXRlX2hvb2tfaW50ZXJuYWwoY29uc3QgY29vcmRfdCAq
IGl0ZW0sIHZvaWQgKmFyZyk7CitleHRlcm4gaW50IGtpbGxfaG9va19pbnRlcm5hbChjb25zdCBj
b29yZF90ICogaXRlbSwgcG9zX2luX25vZGVfdCBmcm9tLAorCQkJICAgICAgcG9zX2luX25vZGVf
dCBjb3VudCwgc3RydWN0IGNhcnJ5X2tpbGxfZGF0YSAqKTsKK2V4dGVybiBpbnQgc2hpZnRfaG9v
a19pbnRlcm5hbChjb25zdCBjb29yZF90ICogaXRlbSwgdW5zaWduZWQgZnJvbSwKKwkJCSAgICAg
ICB1bnNpZ25lZCBjb3VudCwgem5vZGUgKiBvbGRfbm9kZSk7CitleHRlcm4gdm9pZCByZWlzZXI0
X3ByaW50X2ludGVybmFsKGNvbnN0IGNoYXIgKnByZWZpeCwgY29vcmRfdCAqIGNvb3JkKTsKKwor
ZXh0ZXJuIGludCB1dG1vc3RfY2hpbGRfaW50ZXJuYWwoY29uc3QgY29vcmRfdCAqIGNvb3JkLCBz
aWRlb2Ygc2lkZSwKKwkJCQkgam5vZGUgKiogY2hpbGQpOworaW50IHV0bW9zdF9jaGlsZF9yZWFs
X2Jsb2NrX2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgc2lkZW9mIHNpZGUsCisJCQkJ
ICAgICByZWlzZXI0X2Jsb2NrX25yICogYmxvY2spOworCitleHRlcm4gdm9pZCByZWlzZXI0X3Vw
ZGF0ZV9pbnRlcm5hbChjb25zdCBjb29yZF90ICogY29vcmQsCisJCQkJICAgIGNvbnN0IHJlaXNl
cjRfYmxvY2tfbnIgKiBibG9ja25yKTsKKy8qIEZJWE1FOiByZWlzZXJmcyBoYXMgY2hlY2tfaW50
ZXJuYWwgKi8KK2V4dGVybiBpbnQgY2hlY2tfX2ludGVybmFsKGNvbnN0IGNvb3JkX3QgKiBjb29y
ZCwgY29uc3QgY2hhciAqKmVycm9yKTsKKworLyogX19GU19SRUlTRVI0X1BMVUdJTl9JVEVNX0lO
VEVSTkFMX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2
YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAi
TEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVt
bjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2l0ZW0uYyBsaW51eC01LjQuMTcvZnMvcmVp
c2VyNC9wbHVnaW4vaXRlbS9pdGVtLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
cGx1Z2luL2l0ZW0vaXRlbS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisr
KyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9pdGVtLmMJMjAyMC0wMi0wNSAy
MDo1Mzo0MS40NjkyMjIzMDIgKzAxMDAKQEAgLTAsMCArMSw3MTkgQEAKKy8qIENvcHlyaWdodCAy
MDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVp
c2VyNC9SRUFETUUgKi8KKworLyogZGVmaW5pdGlvbiBvZiBpdGVtIHBsdWdpbnMuICovCisKKyNp
bmNsdWRlICIuLi8uLi9mb3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vLi4vZGVidWcuaCIKKyNpbmNs
dWRlICIuLi8uLi9rZXkuaCIKKyNpbmNsdWRlICIuLi8uLi9jb29yZC5oIgorI2luY2x1ZGUgIi4u
L3BsdWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICJzZGUuaCIKKyNpbmNsdWRlICJpbnRlcm5hbC5o
IgorI2luY2x1ZGUgIml0ZW0uaCIKKyNpbmNsdWRlICJzdGF0aWNfc3RhdC5oIgorI2luY2x1ZGUg
Ii4uL3BsdWdpbi5oIgorI2luY2x1ZGUgIi4uLy4uL3pub2RlLmgiCisjaW5jbHVkZSAiLi4vLi4v
dHJlZS5oIgorI2luY2x1ZGUgIi4uLy4uL2NvbnRleHQuaCIKKyNpbmNsdWRlICJjdGFpbC5oIgor
CisvKiByZXR1cm4gcG9pbnRlciB0byBpdGVtIGJvZHkgKi8KK3ZvaWQgaXRlbV9ib2R5X2J5X2Nv
b3JkX2hhcmQoY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5ICovICkKK3sKKwlhc3Nl
cnQoIm5pa2l0YS0zMjQiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjUiLCBj
b29yZC0+bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjYiLCB6bm9kZV9pc19sb2Fk
ZWQoY29vcmQtPm5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjAwIiwgY29vcmQtPm9mZnNldCA9
PSBJTlZBTElEX09GRlNFVCk7CisKKwljb29yZC0+b2Zmc2V0ID0KKwkgICAgbm9kZV9wbHVnaW5f
Ynlfbm9kZShjb29yZC0+bm9kZSktPml0ZW1fYnlfY29vcmQoY29vcmQpIC0KKwkgICAgemRhdGEo
Y29vcmQtPm5vZGUpOworCU9OX0RFQlVHKGNvb3JkLT5ib2R5X3YgPSBjb29yZC0+bm9kZS0+dGlt
ZXNfbG9ja2VkKTsKK30KKwordm9pZCAqaXRlbV9ib2R5X2J5X2Nvb3JkX2Vhc3koY29uc3QgY29v
cmRfdCAqIGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5ICovICkKK3sKKwlyZXR1cm4gemRhdGEoY29v
cmQtPm5vZGUpICsgY29vcmQtPm9mZnNldDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworaW50
IGl0ZW1fYm9keV9pc192YWxpZChjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJcmV0dXJuCisJ
ICAgIGNvb3JkLT5vZmZzZXQgPT0KKwkgICAgbm9kZV9wbHVnaW5fYnlfbm9kZShjb29yZC0+bm9k
ZSktPml0ZW1fYnlfY29vcmQoY29vcmQpIC0KKwkgICAgemRhdGEoY29vcmQtPm5vZGUpOworfQor
CisjZW5kaWYKKworLyogcmV0dXJuIGxlbmd0aCBvZiBpdGVtIGF0IEBjb29yZCAqLworcG9zX2lu
X25vZGVfdCBpdGVtX2xlbmd0aF9ieV9jb29yZChjb25zdCBjb29yZF90ICogY29vcmQgLyogY29v
cmQgdG8gcXVlcnkgKi8gKQoreworCWludCBsZW47CisKKwlhc3NlcnQoIm5pa2l0YS0zMjciLCBj
b29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjgiLCBjb29yZC0+bm9kZSAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS0zMjkiLCB6bm9kZV9pc19sb2FkZWQoY29vcmQtPm5vZGUpKTsK
KworCWxlbiA9IG5vZGVfcGx1Z2luX2J5X25vZGUoY29vcmQtPm5vZGUpLT5sZW5ndGhfYnlfY29v
cmQoY29vcmQpOworCXJldHVybiBsZW47Cit9CisKK3ZvaWQgb2J0YWluX2l0ZW1fcGx1Z2luKGNv
bnN0IGNvb3JkX3QgKiBjb29yZCkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zMzAiLCBjb29yZCAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMzEiLCBjb29yZC0+bm9kZSAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS0zMzIiLCB6bm9kZV9pc19sb2FkZWQoY29vcmQtPm5vZGUpKTsKKworCWNvb3Jk
X3NldF9pcGx1ZygoY29vcmRfdCAqKSBjb29yZCwKKwkJCW5vZGVfcGx1Z2luX2J5X25vZGUoY29v
cmQtPm5vZGUpLT4KKwkJCXBsdWdpbl9ieV9jb29yZChjb29yZCkpOworCWFzc2VydCgibmlraXRh
LTI0NzkiLAorCSAgICAgICBjb29yZF9pcGx1Zyhjb29yZCkgPT0KKwkgICAgICAgbm9kZV9wbHVn
aW5fYnlfbm9kZShjb29yZC0+bm9kZSktPnBsdWdpbl9ieV9jb29yZChjb29yZCkpOworfQorCisv
KiByZXR1cm4gaWQgb2YgaXRlbSAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNSkg
Ki8KK2l0ZW1faWQgaXRlbV9pZF9ieV9jb29yZChjb25zdCBjb29yZF90ICogY29vcmQgLyogY29v
cmQgdG8gcXVlcnkgKi8gKQoreworCWFzc2VydCgidnMtNTM5IiwgY29vcmQgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJ2cy01MzgiLCBjb29yZC0+bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInZzLTUzNyIs
IHpub2RlX2lzX2xvYWRlZChjb29yZC0+bm9kZSkpOworCWFzc2VydCgidnMtNTM2IiwgaXRlbV9w
bHVnaW5fYnlfY29vcmQoY29vcmQpICE9IE5VTEwpOworCWFzc2VydCgidnMtNTQwIiwKKwkgICAg
ICAgaXRlbV9pZF9ieV9wbHVnaW4oaXRlbV9wbHVnaW5fYnlfY29vcmQoY29vcmQpKSA8IExBU1Rf
SVRFTV9JRCk7CisKKwlyZXR1cm4gaXRlbV9pZF9ieV9wbHVnaW4oaXRlbV9wbHVnaW5fYnlfY29v
cmQoY29vcmQpKTsKK30KKworLyogcmV0dXJuIGtleSBvZiBpdGVtIGF0IEBjb29yZCAqLworLyog
QXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNSkgKi8KK3JlaXNlcjRfa2V5ICppdGVtX2tleV9i
eV9jb29yZChjb25zdCBjb29yZF90ICogY29vcmQgLyogY29vcmQgdG8gcXVlcnkgKi8gLAorCQkJ
ICAgICAgIHJlaXNlcjRfa2V5ICoga2V5IC8qIHJlc3VsdCAqLyApCit7CisJYXNzZXJ0KCJuaWtp
dGEtMzM4IiwgY29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzM5IiwgY29vcmQtPm5v
ZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzQwIiwgem5vZGVfaXNfbG9hZGVkKGNvb3Jk
LT5ub2RlKSk7CisKKwlyZXR1cm4gbm9kZV9wbHVnaW5fYnlfbm9kZShjb29yZC0+bm9kZSktPmtl
eV9hdChjb29yZCwga2V5KTsKK30KKworLyogdGhpcyByZXR1cm5zIG1heCBrZXkgaW4gdGhlIGl0
ZW0gKi8KK3JlaXNlcjRfa2V5ICptYXhfaXRlbV9rZXlfYnlfY29vcmQoY29uc3QgY29vcmRfdCAq
IGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5ICovICwKKwkJCQkgICByZWlzZXI0X2tleSAqIGtleSAv
KiByZXN1bHQgKi8gKQoreworCWNvb3JkX3QgbGFzdDsKKworCWFzc2VydCgibmlraXRhLTMzOCIs
IGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMzOSIsIGNvb3JkLT5ub2RlICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTM0MCIsIHpub2RlX2lzX2xvYWRlZChjb29yZC0+bm9kZSkp
OworCisJLyogbWFrZSBjb29yZCBwb2ludGluZyB0byBsYXN0IGl0ZW0ncyB1bml0ICovCisJY29v
cmRfZHVwKCZsYXN0LCBjb29yZCk7CisJbGFzdC51bml0X3BvcyA9IGNvb3JkX251bV91bml0cygm
bGFzdCkgLSAxOworCWFzc2VydCgidnMtMTU2MCIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoJmxh
c3QpKTsKKworCW1heF91bml0X2tleV9ieV9jb29yZCgmbGFzdCwga2V5KTsKKwlyZXR1cm4ga2V5
OworfQorCisvKiByZXR1cm4ga2V5IG9mIHVuaXQgYXQgQGNvb3JkICovCityZWlzZXI0X2tleSAq
dW5pdF9rZXlfYnlfY29vcmQoY29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5
ICovICwKKwkJCSAgICAgICByZWlzZXI0X2tleSAqIGtleSAvKiByZXN1bHQgKi8gKQoreworCWFz
c2VydCgibmlraXRhLTc3MiIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTc3NCIs
IGNvb3JkLT5ub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTc3NSIsIHpub2RlX2lzX2xv
YWRlZChjb29yZC0+bm9kZSkpOworCisJaWYgKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+
Yi51bml0X2tleSAhPSBOVUxMKQorCQlyZXR1cm4gaXRlbV9wbHVnaW5fYnlfY29vcmQoY29vcmQp
LT5iLnVuaXRfa2V5KGNvb3JkLCBrZXkpOworCWVsc2UKKwkJcmV0dXJuIGl0ZW1fa2V5X2J5X2Nv
b3JkKGNvb3JkLCBrZXkpOworfQorCisvKiByZXR1cm4gdGhlIGJpZ2dlc3Qga2V5IGNvbnRhaW5l
ZCB0aGUgdW5pdCBAY29vcmQgKi8KK3JlaXNlcjRfa2V5ICptYXhfdW5pdF9rZXlfYnlfY29vcmQo
Y29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5ICovICwKKwkJCQkgICByZWlz
ZXI0X2tleSAqIGtleSAvKiByZXN1bHQgKi8gKQoreworCWFzc2VydCgibmlraXRhLTc3MiIsIGNv
b3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTc3NCIsIGNvb3JkLT5ub2RlICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTc3NSIsIHpub2RlX2lzX2xvYWRlZChjb29yZC0+bm9kZSkpOwor
CisJaWYgKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+Yi5tYXhfdW5pdF9rZXkgIT0gTlVM
TCkKKwkJcmV0dXJuIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3JkKS0+Yi5tYXhfdW5pdF9rZXko
Y29vcmQsIGtleSk7CisJZWxzZQorCQlyZXR1cm4gdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsIGtl
eSk7Cit9CisKKy8qIC0+bWF4X2tleV9pbnNpZGUoKSBtZXRob2QgZm9yIGl0ZW1zIGNvbnNpc3Rp
bmcgb2YgZXhhY3RseSBvbmUga2V5IChsaWtlCisgICAgc3RhdC1kYXRhKSAqLworc3RhdGljIHJl
aXNlcjRfa2V5ICptYXhfa2V5X2luc2lkZV9zaW5nbGVfa2V5KGNvbnN0IGNvb3JkX3QgKgorCQkJ
CQkgICAgICBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJCQkJICAgICAgcmVpc2VyNF9r
ZXkgKgorCQkJCQkgICAgICByZXN1bHQgLyogcmVzdWx0aW5nIGtleSAqLyApCit7CisJYXNzZXJ0
KCJuaWtpdGEtNjA0IiwgY29vcmQgIT0gTlVMTCk7CisKKwkvKiBjb29yZCAtPiBrZXkgaXMgc3Rh
cnRpbmcga2V5IG9mIHRoaXMgaXRlbSBhbmQgaXQgaGFzIHRvIGJlIGFscmVhZHkKKwkgICBmaWxs
ZWQgaW4gKi8KKwlyZXR1cm4gdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsIHJlc3VsdCk7Cit9CisK
Ky8qIC0+bnJfdW5pdHMoKSBtZXRob2QgZm9yIGl0ZW1zIGNvbnNpc3Rpbmcgb2YgZXhhY3RseSBv
bmUgdW5pdCBhbHdheXMgKi8KK3Bvc19pbl9ub2RlX3QKK25yX3VuaXRzX3NpbmdsZV91bml0KGNv
bnN0IGNvb3JkX3QgKiBjb29yZCBVTlVTRURfQVJHIC8qIGNvb3JkIG9mIGl0ZW0gKi8gKQorewor
CXJldHVybiAxOworfQorCitzdGF0aWMgaW50CitwYXN0ZV9ub19wYXN0ZShjb29yZF90ICogY29v
cmQgVU5VU0VEX0FSRywKKwkgICAgICAgcmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhIFVOVVNFRF9B
UkcsCisJICAgICAgIGNhcnJ5X3BsdWdpbl9pbmZvICogaW5mbyBVTlVTRURfQVJHKQoreworCXJl
dHVybiAwOworfQorCisvKiBkZWZhdWx0IC0+ZmFzdF9wYXN0ZSgpIG1ldGhvZCAqLworc3RhdGlj
IGludAorYWdyZWVfdG9fZmFzdF9vcChjb25zdCBjb29yZF90ICogY29vcmQgVU5VU0VEX0FSRyAv
KiBjb29yZCBvZiBpdGVtICovICkKK3sKKwlyZXR1cm4gMTsKK30KKworaW50IGl0ZW1fY2FuX2Nv
bnRhaW5fa2V5KGNvbnN0IGNvb3JkX3QgKiBpdGVtIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLAorCQkJ
IGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSB0byBjaGVjayAqLyAsCisJCQkgY29uc3Qg
cmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhCS8qIHBhcmFtZXRlcnMgb2YgaXRlbQorCQkJCQkJCSAq
IGJlaW5nIGNyZWF0ZWQgKi8gKQoreworCWl0ZW1fcGx1Z2luICppcGx1ZzsKKwlyZWlzZXI0X2tl
eSBtaW5fa2V5X2luX2l0ZW07CisJcmVpc2VyNF9rZXkgbWF4X2tleV9pbl9pdGVtOworCisJYXNz
ZXJ0KCJuaWtpdGEtMTY1OCIsIGl0ZW0gIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTY1OSIs
IGtleSAhPSBOVUxMKTsKKworCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQoaXRlbSk7CisJ
aWYgKGlwbHVnLT5iLmNhbl9jb250YWluX2tleSAhPSBOVUxMKQorCQlyZXR1cm4gaXBsdWctPmIu
Y2FuX2NvbnRhaW5fa2V5KGl0ZW0sIGtleSwgZGF0YSk7CisJZWxzZSB7CisJCWFzc2VydCgibmlr
aXRhLTE2ODEiLCBpcGx1Zy0+Yi5tYXhfa2V5X2luc2lkZSAhPSBOVUxMKTsKKwkJaXRlbV9rZXlf
YnlfY29vcmQoaXRlbSwgJm1pbl9rZXlfaW5faXRlbSk7CisJCWlwbHVnLT5iLm1heF9rZXlfaW5z
aWRlKGl0ZW0sICZtYXhfa2V5X2luX2l0ZW0pOworCisJCS8qIGNhbiBjb250YWluIGtleSBpZgor
CQkgICBtaW5fa2V5X2luX2l0ZW0gPD0ga2V5ICYmCisJCSAgIGtleSA8PSBtYXhfa2V5X2luX2l0
ZW0KKwkJICovCisJCXJldHVybiBrZXlsZSgmbWluX2tleV9pbl9pdGVtLCBrZXkpCisJCSAgICAm
JiBrZXlsZShrZXksICZtYXhfa2V5X2luX2l0ZW0pOworCX0KK30KKworLyogbWVyZ2VhYmxlIG1l
dGhvZCBmb3Igbm9uIG1lcmdlYWJsZSBpdGVtcyAqLworc3RhdGljIGludAorbm90X21lcmdlYWJs
ZShjb25zdCBjb29yZF90ICogaTEgVU5VU0VEX0FSRywgY29uc3QgY29vcmRfdCAqIGkyIFVOVVNF
RF9BUkcpCit7CisJcmV0dXJuIDA7Cit9CisKKy8qIHJldHVybiAwIGlmIEBpdGVtMSBhbmQgQGl0
ZW0yIGFyZSBub3QgbWVyZ2VhYmxlLCAhMCAtIG90aGVyd2lzZSAqLworaW50IGFyZV9pdGVtc19t
ZXJnZWFibGUoY29uc3QgY29vcmRfdCAqIGkxIC8qIGNvb3JkIG9mIGZpcnN0IGl0ZW0gKi8gLAor
CQkJY29uc3QgY29vcmRfdCAqIGkyIC8qIGNvb3JkIG9mIHNlY29uZCBpdGVtICovICkKK3sKKwlp
dGVtX3BsdWdpbiAqaXBsdWc7CisJcmVpc2VyNF9rZXkgazE7CisJcmVpc2VyNF9rZXkgazI7CisK
Kwlhc3NlcnQoIm5pa2l0YS0xMzM2IiwgaTEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTMz
NyIsIGkyICE9IE5VTEwpOworCisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChpMSk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTMzOCIsIGlwbHVnICE9IE5VTEwpOworCisJLyogTk9URS1OSUtJVEEg
YXJlX2l0ZW1zX21lcmdlYWJsZSgpIGlzIGFsc28gY2FsbGVkIGJ5IGFzc2VydGlvbnMgaW4KKwkg
ICBzaGlmdGluZyBjb2RlIHdoZW4gbm9kZXMgYXJlIGluICJzdXNwZW5kZWQiIHN0YXRlLiAqLwor
CWFzc2VydCgibmlraXRhLTE2NjMiLAorCSAgICAgICBrZXlsZShpdGVtX2tleV9ieV9jb29yZChp
MSwgJmsxKSwgaXRlbV9rZXlfYnlfY29vcmQoaTIsICZrMikpKTsKKworCWlmIChpcGx1Zy0+Yi5t
ZXJnZWFibGUgIT0gTlVMTCkgeworCQlyZXR1cm4gaXBsdWctPmIubWVyZ2VhYmxlKGkxLCBpMik7
CisJfSBlbHNlIGlmIChpcGx1Zy0+Yi5tYXhfa2V5X2luc2lkZSAhPSBOVUxMKSB7CisJCWlwbHVn
LT5iLm1heF9rZXlfaW5zaWRlKGkxLCAmazEpOworCQlpdGVtX2tleV9ieV9jb29yZChpMiwgJmsy
KTsKKworCQkvKiBtZXJnZWFibGUgaWYgLT5tYXhfa2V5X2luc2lkZSgpID49IGtleSBvZiBpMjsg
Ki8KKwkJcmV0dXJuIGtleWdlKGlwbHVnLT5iLm1heF9rZXlfaW5zaWRlKGkxLCAmazEpLAorCQkJ
ICAgICBpdGVtX2tleV9ieV9jb29yZChpMiwgJmsyKSk7CisJfSBlbHNlIHsKKwkJaXRlbV9rZXlf
YnlfY29vcmQoaTEsICZrMSk7CisJCWl0ZW1fa2V5X2J5X2Nvb3JkKGkyLCAmazIpOworCisJCXJl
dHVybgorCQkgICAgKGdldF9rZXlfbG9jYWxpdHkoJmsxKSA9PSBnZXRfa2V5X2xvY2FsaXR5KCZr
MikpICYmCisJCSAgICAoZ2V0X2tleV9vYmplY3RpZCgmazEpID09IGdldF9rZXlfb2JqZWN0aWQo
JmsyKSkKKwkJICAgICYmIChpcGx1ZyA9PSBpdGVtX3BsdWdpbl9ieV9jb29yZChpMikpOworCX0K
K30KKworaW50IGl0ZW1faXNfZXh0ZW50KGNvbnN0IGNvb3JkX3QgKiBpdGVtKQoreworCWFzc2Vy
dCgidnMtNDgyIiwgY29vcmRfaXNfZXhpc3RpbmdfaXRlbShpdGVtKSk7CisJcmV0dXJuIGl0ZW1f
aWRfYnlfY29vcmQoaXRlbSkgPT0gRVhURU5UX1BPSU5URVJfSUQ7Cit9CisKK2ludCBpdGVtX2lz
X3RhaWwoY29uc3QgY29vcmRfdCAqIGl0ZW0pCit7CisJYXNzZXJ0KCJ2cy00ODIiLCBjb29yZF9p
c19leGlzdGluZ19pdGVtKGl0ZW0pKTsKKwlyZXR1cm4gaXRlbV9pZF9ieV9jb29yZChpdGVtKSA9
PSBGT1JNQVRUSU5HX0lEOworfQorCisjaWYgUkVJU0VSNF9ERUJVRworCitpbnQgaXRlbV9pc19z
dGF0ZGF0YShjb25zdCBjb29yZF90ICogaXRlbSkKK3sKKwlhc3NlcnQoInZzLTUxNiIsIGNvb3Jk
X2lzX2V4aXN0aW5nX2l0ZW0oaXRlbSkpOworCXJldHVybiBwbHVnaW5fb2ZfZ3JvdXAoaXRlbV9w
bHVnaW5fYnlfY29vcmQoaXRlbSksIFNUQVRfREFUQV9JVEVNX1RZUEUpOworfQorCitpbnQgaXRl
bV9pc19jdGFpbChjb25zdCBjb29yZF90ICogaXRlbSkKK3sKKwlhc3NlcnQoImVkd2FyZC14eCIs
IGNvb3JkX2lzX2V4aXN0aW5nX2l0ZW0oaXRlbSkpOworCXJldHVybiBpdGVtX2lkX2J5X2Nvb3Jk
KGl0ZW0pID09IENUQUlMX0lEOworfQorCisjZW5kaWYgIC8qICBSRUlTRVI0X0RFQlVHICAqLwor
CitzdGF0aWMgaW50IGNoYW5nZV9pdGVtKHN0cnVjdCBpbm9kZSAqaW5vZGUsCisJCSAgICAgICBy
ZWlzZXI0X3BsdWdpbiAqIHBsdWdpbiwKKwkJICAgICAgIHBzZXRfbWVtYmVyIG1lbWIpCit7CisJ
LyogY2Fubm90IGNoYW5nZSBjb25zdGl0dWVudCBpdGVtIChzZCwgb3IgZGlyX2l0ZW0pICovCisJ
cmV0dXJuIFJFVEVSUigtRUlOVkFMKTsKK30KKworc3RhdGljIHJlaXNlcjRfcGx1Z2luX29wcyBp
dGVtX3BsdWdpbl9vcHMgPSB7CisJLmluaXQgPSBOVUxMLAorCS5sb2FkID0gTlVMTCwKKwkuc2F2
ZV9sZW4gPSBOVUxMLAorCS5zYXZlID0gTlVMTCwKKwkuY2hhbmdlID0gY2hhbmdlX2l0ZW0KK307
CisKK2l0ZW1fcGx1Z2luIGl0ZW1fcGx1Z2luc1tMQVNUX0lURU1fSURdID0geworCVtTVEFUSUNf
U1RBVF9EQVRBX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfSVRFTV9Q
TFVHSU5fVFlQRSwKKwkJCS5pZCA9IFNUQVRJQ19TVEFUX0RBVEFfSUQsCisJCQkuZ3JvdXBzID0g
KDEgPDwgU1RBVF9EQVRBX0lURU1fVFlQRSksCisJCQkucG9wcyA9ICZpdGVtX3BsdWdpbl9vcHMs
CisJCQkubGFiZWwgPSAic2QiLAorCQkJLmRlc2MgPSAic3RhdC1kYXRhIiwKKwkJCS5saW5rYWdl
ID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5iID0geworCQkJLm1heF9rZXlfaW5zaWRlID0gbWF4
X2tleV9pbnNpZGVfc2luZ2xlX2tleSwKKwkJCS5jYW5fY29udGFpbl9rZXkgPSBOVUxMLAorCQkJ
Lm1lcmdlYWJsZSA9IG5vdF9tZXJnZWFibGUsCisJCQkubnJfdW5pdHMgPSBucl91bml0c19zaW5n
bGVfdW5pdCwKKwkJCS5sb29rdXAgPSBOVUxMLAorCQkJLmluaXQgPSBOVUxMLAorCQkJLnBhc3Rl
ID0gcGFzdGVfbm9fcGFzdGUsCisJCQkuZmFzdF9wYXN0ZSA9IE5VTEwsCisJCQkuY2FuX3NoaWZ0
ID0gTlVMTCwKKwkJCS5jb3B5X3VuaXRzID0gTlVMTCwKKwkJCS5jcmVhdGVfaG9vayA9IE5VTEws
CisJCQkua2lsbF9ob29rID0gTlVMTCwKKwkJCS5zaGlmdF9ob29rID0gTlVMTCwKKwkJCS5jdXRf
dW5pdHMgPSBOVUxMLAorCQkJLmtpbGxfdW5pdHMgPSBOVUxMLAorCQkJLnVuaXRfa2V5ID0gTlVM
TCwKKwkJCS5tYXhfdW5pdF9rZXkgPSBOVUxMLAorCQkJLmVzdGltYXRlID0gTlVMTCwKKwkJCS5p
dGVtX2RhdGFfYnlfZmxvdyA9IE5VTEwsCisjaWYgUkVJU0VSNF9ERUJVRworCQkJLmNoZWNrID0g
TlVMTAorI2VuZGlmCisJCX0sCisJCS5mID0geworCQkJLnV0bW9zdF9jaGlsZCA9IE5VTEwsCisJ
CQkudXRtb3N0X2NoaWxkX3JlYWxfYmxvY2sgPSBOVUxMLAorCQkJLnVwZGF0ZSA9IE5VTEwsCisJ
CQkuc2NhbiA9IE5VTEwsCisJCQkuY29udmVydCA9IE5VTEwKKwkJfSwKKwkJLnMgPSB7CisJCQku
c2QgPSB7CisJCQkJLmluaXRfaW5vZGUgPSBpbml0X2lub2RlX3N0YXRpY19zZCwKKwkJCQkuc2F2
ZV9sZW4gPSBzYXZlX2xlbl9zdGF0aWNfc2QsCisJCQkJLnNhdmUgPSBzYXZlX3N0YXRpY19zZAor
CQkJfQorCQl9CisJfSwKKwlbU0lNUExFX0RJUl9FTlRSWV9JRF0gPSB7CisJCS5oID0geworCQkJ
LnR5cGVfaWQgPSBSRUlTRVI0X0lURU1fUExVR0lOX1RZUEUsCisJCQkuaWQgPSBTSU1QTEVfRElS
X0VOVFJZX0lELAorCQkJLmdyb3VwcyA9ICgxIDw8IERJUl9FTlRSWV9JVEVNX1RZUEUpLAorCQkJ
LnBvcHMgPSAmaXRlbV9wbHVnaW5fb3BzLAorCQkJLmxhYmVsID0gImRlIiwKKwkJCS5kZXNjID0g
ImRpcmVjdG9yeSBlbnRyeSIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQku
YiA9IHsKKwkJCS5tYXhfa2V5X2luc2lkZSA9IG1heF9rZXlfaW5zaWRlX3NpbmdsZV9rZXksCisJ
CQkuY2FuX2NvbnRhaW5fa2V5ID0gTlVMTCwKKwkJCS5tZXJnZWFibGUgPSBOVUxMLAorCQkJLm5y
X3VuaXRzID0gbnJfdW5pdHNfc2luZ2xlX3VuaXQsCisJCQkubG9va3VwID0gTlVMTCwKKwkJCS5p
bml0ID0gTlVMTCwKKwkJCS5wYXN0ZSA9IE5VTEwsCisJCQkuZmFzdF9wYXN0ZSA9IE5VTEwsCisJ
CQkuY2FuX3NoaWZ0ID0gTlVMTCwKKwkJCS5jb3B5X3VuaXRzID0gTlVMTCwKKwkJCS5jcmVhdGVf
aG9vayA9IE5VTEwsCisJCQkua2lsbF9ob29rID0gTlVMTCwKKwkJCS5zaGlmdF9ob29rID0gTlVM
TCwKKwkJCS5jdXRfdW5pdHMgPSBOVUxMLAorCQkJLmtpbGxfdW5pdHMgPSBOVUxMLAorCQkJLnVu
aXRfa2V5ID0gTlVMTCwKKwkJCS5tYXhfdW5pdF9rZXkgPSBOVUxMLAorCQkJLmVzdGltYXRlID0g
TlVMTCwKKwkJCS5pdGVtX2RhdGFfYnlfZmxvdyA9IE5VTEwsCisjaWYgUkVJU0VSNF9ERUJVRwor
CQkJLmNoZWNrID0gTlVMTAorI2VuZGlmCisJCX0sCisJCS5mID0geworCQkJLnV0bW9zdF9jaGls
ZCA9IE5VTEwsCisJCQkudXRtb3N0X2NoaWxkX3JlYWxfYmxvY2sgPSBOVUxMLAorCQkJLnVwZGF0
ZSA9IE5VTEwsCisJCQkuc2NhbiA9IE5VTEwsCisJCQkuY29udmVydCA9IE5VTEwKKwkJfSwKKwkJ
LnMgPSB7CisJCQkuZGlyID0geworCQkJCS5leHRyYWN0X2tleSA9IGV4dHJhY3Rfa2V5X2RlLAor
CQkJCS51cGRhdGVfa2V5ID0gdXBkYXRlX2tleV9kZSwKKwkJCQkuZXh0cmFjdF9uYW1lID0gZXh0
cmFjdF9uYW1lX2RlLAorCQkJCS5leHRyYWN0X2ZpbGVfdHlwZSA9IGV4dHJhY3RfZmlsZV90eXBl
X2RlLAorCQkJCS5hZGRfZW50cnkgPSBhZGRfZW50cnlfZGUsCisJCQkJLnJlbV9lbnRyeSA9IHJl
bV9lbnRyeV9kZSwKKwkJCQkubWF4X25hbWVfbGVuID0gbWF4X25hbWVfbGVuX2RlCisJCQl9CisJ
CX0KKwl9LAorCVtDT01QT1VORF9ESVJfSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0g
UkVJU0VSNF9JVEVNX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gQ09NUE9VTkRfRElSX0lELAorCQkJ
Lmdyb3VwcyA9ICgxIDw8IERJUl9FTlRSWV9JVEVNX1RZUEUpLAorCQkJLnBvcHMgPSAmaXRlbV9w
bHVnaW5fb3BzLAorCQkJLmxhYmVsID0gImNkZSIsCisJCQkuZGVzYyA9ICJjb21wcmVzc2VkIGRp
cmVjdG9yeSBlbnRyeSIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuYiA9
IHsKKwkJCS5tYXhfa2V5X2luc2lkZSA9IG1heF9rZXlfaW5zaWRlX2NkZSwKKwkJCS5jYW5fY29u
dGFpbl9rZXkgPSBjYW5fY29udGFpbl9rZXlfY2RlLAorCQkJLm1lcmdlYWJsZSA9IG1lcmdlYWJs
ZV9jZGUsCisJCQkubnJfdW5pdHMgPSBucl91bml0c19jZGUsCisJCQkubG9va3VwID0gbG9va3Vw
X2NkZSwKKwkJCS5pbml0ID0gaW5pdF9jZGUsCisJCQkucGFzdGUgPSBwYXN0ZV9jZGUsCisJCQku
ZmFzdF9wYXN0ZSA9IGFncmVlX3RvX2Zhc3Rfb3AsCisJCQkuY2FuX3NoaWZ0ID0gY2FuX3NoaWZ0
X2NkZSwKKwkJCS5jb3B5X3VuaXRzID0gY29weV91bml0c19jZGUsCisJCQkuY3JlYXRlX2hvb2sg
PSBOVUxMLAorCQkJLmtpbGxfaG9vayA9IE5VTEwsCisJCQkuc2hpZnRfaG9vayA9IE5VTEwsCisJ
CQkuY3V0X3VuaXRzID0gY3V0X3VuaXRzX2NkZSwKKwkJCS5raWxsX3VuaXRzID0ga2lsbF91bml0
c19jZGUsCisJCQkudW5pdF9rZXkgPSB1bml0X2tleV9jZGUsCisJCQkubWF4X3VuaXRfa2V5ID0g
dW5pdF9rZXlfY2RlLAorCQkJLmVzdGltYXRlID0gZXN0aW1hdGVfY2RlLAorCQkJLml0ZW1fZGF0
YV9ieV9mbG93ID0gTlVMTCwKKyNpZiBSRUlTRVI0X0RFQlVHCisJCQkuY2hlY2sgPSByZWlzZXI0
X2NoZWNrX2NkZQorI2VuZGlmCisJCX0sCisJCS5mID0geworCQkJLnV0bW9zdF9jaGlsZCA9IE5V
TEwsCisJCQkudXRtb3N0X2NoaWxkX3JlYWxfYmxvY2sgPSBOVUxMLAorCQkJLnVwZGF0ZSA9IE5V
TEwsCisJCQkuc2NhbiA9IE5VTEwsCisJCQkuY29udmVydCA9IE5VTEwKKwkJfSwKKwkJLnMgPSB7
CisJCQkuZGlyID0geworCQkJCS5leHRyYWN0X2tleSA9IGV4dHJhY3Rfa2V5X2NkZSwKKwkJCQku
dXBkYXRlX2tleSA9IHVwZGF0ZV9rZXlfY2RlLAorCQkJCS5leHRyYWN0X25hbWUgPSBleHRyYWN0
X25hbWVfY2RlLAorCQkJCS5leHRyYWN0X2ZpbGVfdHlwZSA9IGV4dHJhY3RfZmlsZV90eXBlX2Rl
LAorCQkJCS5hZGRfZW50cnkgPSBhZGRfZW50cnlfY2RlLAorCQkJCS5yZW1fZW50cnkgPSByZW1f
ZW50cnlfY2RlLAorCQkJCS5tYXhfbmFtZV9sZW4gPSBtYXhfbmFtZV9sZW5fY2RlCisJCQl9CisJ
CX0KKwl9LAorCVtOT0RFX1BPSU5URVJfSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0g
UkVJU0VSNF9JVEVNX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gTk9ERV9QT0lOVEVSX0lELAorCQkJ
Lmdyb3VwcyA9ICgxIDw8IElOVEVSTkFMX0lURU1fVFlQRSksCisJCQkucG9wcyA9IE5VTEwsCisJ
CQkubGFiZWwgPSAiaW50ZXJuYWwiLAorCQkJLmRlc2MgPSAiaW50ZXJuYWwgaXRlbSIsCisJCQku
bGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuYiA9IHsKKwkJCS5tYXhfa2V5X2luc2lk
ZSA9IE5VTEwsCisJCQkuY2FuX2NvbnRhaW5fa2V5ID0gTlVMTCwKKwkJCS5tZXJnZWFibGUgPSBt
ZXJnZWFibGVfaW50ZXJuYWwsCisJCQkubnJfdW5pdHMgPSBucl91bml0c19zaW5nbGVfdW5pdCwK
KwkJCS5sb29rdXAgPSBsb29rdXBfaW50ZXJuYWwsCisJCQkuaW5pdCA9IE5VTEwsCisJCQkucGFz
dGUgPSBOVUxMLAorCQkJLmZhc3RfcGFzdGUgPSBOVUxMLAorCQkJLmNhbl9zaGlmdCA9IE5VTEws
CisJCQkuY29weV91bml0cyA9IE5VTEwsCisJCQkuY3JlYXRlX2hvb2sgPSBjcmVhdGVfaG9va19p
bnRlcm5hbCwKKwkJCS5raWxsX2hvb2sgPSBraWxsX2hvb2tfaW50ZXJuYWwsCisJCQkuc2hpZnRf
aG9vayA9IHNoaWZ0X2hvb2tfaW50ZXJuYWwsCisJCQkuY3V0X3VuaXRzID0gTlVMTCwKKwkJCS5r
aWxsX3VuaXRzID0gTlVMTCwKKwkJCS51bml0X2tleSA9IE5VTEwsCisJCQkubWF4X3VuaXRfa2V5
ID0gTlVMTCwKKwkJCS5lc3RpbWF0ZSA9IE5VTEwsCisJCQkuaXRlbV9kYXRhX2J5X2Zsb3cgPSBO
VUxMLAorI2lmIFJFSVNFUjRfREVCVUcKKwkJCS5jaGVjayA9IGNoZWNrX19pbnRlcm5hbAorI2Vu
ZGlmCisJCX0sCisJCS5mID0geworCQkJLnV0bW9zdF9jaGlsZCA9IHV0bW9zdF9jaGlsZF9pbnRl
cm5hbCwKKwkJCS51dG1vc3RfY2hpbGRfcmVhbF9ibG9jayA9CisJCQl1dG1vc3RfY2hpbGRfcmVh
bF9ibG9ja19pbnRlcm5hbCwKKwkJCS51cGRhdGUgPSByZWlzZXI0X3VwZGF0ZV9pbnRlcm5hbCwK
KwkJCS5zY2FuID0gTlVMTCwKKwkJCS5jb252ZXJ0ID0gTlVMTAorCQl9LAorCQkucyA9IHsKKwkJ
CS5pbnRlcm5hbCA9IHsKKwkJCQkuZG93bl9saW5rID0gZG93bl9saW5rX2ludGVybmFsLAorCQkJ
CS5oYXNfcG9pbnRlcl90byA9IGhhc19wb2ludGVyX3RvX2ludGVybmFsCisJCQl9CisJCX0KKwl9
LAorCVtFWFRFTlRfUE9JTlRFUl9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlT
RVI0X0lURU1fUExVR0lOX1RZUEUsCisJCQkuaWQgPSBFWFRFTlRfUE9JTlRFUl9JRCwKKwkJCS5n
cm91cHMgPSAoMSA8PCBVTklYX0ZJTEVfTUVUQURBVEFfSVRFTV9UWVBFKSwKKwkJCS5wb3BzID0g
TlVMTCwKKwkJCS5sYWJlbCA9ICJleHRlbnQiLAorCQkJLmRlc2MgPSAiZXh0ZW50IGl0ZW0iLAor
CQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmIgPSB7CisJCQkubWF4X2tleV9p
bnNpZGUgPSBtYXhfa2V5X2luc2lkZV9leHRlbnQsCisJCQkuY2FuX2NvbnRhaW5fa2V5ID0gY2Fu
X2NvbnRhaW5fa2V5X2V4dGVudCwKKwkJCS5tZXJnZWFibGUgPSBtZXJnZWFibGVfZXh0ZW50LAor
CQkJLm5yX3VuaXRzID0gbnJfdW5pdHNfZXh0ZW50LAorCQkJLmxvb2t1cCA9IGxvb2t1cF9leHRl
bnQsCisJCQkuaW5pdCA9IE5VTEwsCisJCQkucGFzdGUgPSBwYXN0ZV9leHRlbnQsCisJCQkuZmFz
dF9wYXN0ZSA9IGFncmVlX3RvX2Zhc3Rfb3AsCisJCQkuY2FuX3NoaWZ0ID0gY2FuX3NoaWZ0X2V4
dGVudCwKKwkJCS5jcmVhdGVfaG9vayA9IGNyZWF0ZV9ob29rX2V4dGVudCwKKwkJCS5jb3B5X3Vu
aXRzID0gY29weV91bml0c19leHRlbnQsCisJCQkua2lsbF9ob29rID0ga2lsbF9ob29rX2V4dGVu
dCwKKwkJCS5zaGlmdF9ob29rID0gTlVMTCwKKwkJCS5jdXRfdW5pdHMgPSBjdXRfdW5pdHNfZXh0
ZW50LAorCQkJLmtpbGxfdW5pdHMgPSBraWxsX3VuaXRzX2V4dGVudCwKKwkJCS51bml0X2tleSA9
IHVuaXRfa2V5X2V4dGVudCwKKwkJCS5tYXhfdW5pdF9rZXkgPSBtYXhfdW5pdF9rZXlfZXh0ZW50
LAorCQkJLmVzdGltYXRlID0gTlVMTCwKKwkJCS5pdGVtX2RhdGFfYnlfZmxvdyA9IE5VTEwsCisj
aWYgUkVJU0VSNF9ERUJVRworCQkJLmNoZWNrID0gcmVpc2VyNF9jaGVja19leHRlbnQKKyNlbmRp
ZgorCQl9LAorCQkuZiA9IHsKKwkJCS51dG1vc3RfY2hpbGQgPSB1dG1vc3RfY2hpbGRfZXh0ZW50
LAorCQkJLnV0bW9zdF9jaGlsZF9yZWFsX2Jsb2NrID0KKwkJCXV0bW9zdF9jaGlsZF9yZWFsX2Js
b2NrX2V4dGVudCwKKwkJCS51cGRhdGUgPSBOVUxMLAorCQkJLnNjYW4gPSByZWlzZXI0X3NjYW5f
ZXh0ZW50LAorCQkJLmNvbnZlcnQgPSBOVUxMLAorCQkJLmtleV9ieV9vZmZzZXQgPSBrZXlfYnlf
b2Zmc2V0X2V4dGVudAorCQl9LAorCQkucyA9IHsKKwkJCS5maWxlID0geworCQkJCS53cml0ZSA9
IHJlaXNlcjRfd3JpdGVfZXh0ZW50LAorCQkJCS5yZWFkID0gcmVpc2VyNF9yZWFkX2V4dGVudCwK
KwkJCQkucmVhZHBhZ2UgPSByZWlzZXI0X3JlYWRwYWdlX2V4dGVudCwKKwkJCQkuZ2V0X2Jsb2Nr
ID0gZ2V0X2Jsb2NrX2FkZHJlc3NfZXh0ZW50LAorCQkJCS5hcHBlbmRfa2V5ID0gYXBwZW5kX2tl
eV9leHRlbnQsCisJCQkJLmluaXRfY29vcmRfZXh0ZW5zaW9uID0KKwkJCQlpbml0X2Nvb3JkX2V4
dGVuc2lvbl9leHRlbnQKKwkJCX0KKwkJfQorCX0sCisJW0ZPUk1BVFRJTkdfSURdID0geworCQku
aCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9JVEVNX1BMVUdJTl9UWVBFLAorCQkJLmlkID0g
Rk9STUFUVElOR19JRCwKKwkJCS5ncm91cHMgPSAoMSA8PCBVTklYX0ZJTEVfTUVUQURBVEFfSVRF
TV9UWVBFKSwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJib2R5IiwKKwkJCS5kZXNj
ID0gImJvZHkgKG9yIHRhaWw/KSBpdGVtIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJ
CX0sCisJCS5iID0geworCQkJLm1heF9rZXlfaW5zaWRlID0gbWF4X2tleV9pbnNpZGVfdGFpbCwK
KwkJCS5jYW5fY29udGFpbl9rZXkgPSBjYW5fY29udGFpbl9rZXlfdGFpbCwKKwkJCS5tZXJnZWFi
bGUgPSBtZXJnZWFibGVfdGFpbCwKKwkJCS5ucl91bml0cyA9IG5yX3VuaXRzX3RhaWwsCisJCQku
bG9va3VwID0gbG9va3VwX3RhaWwsCisJCQkuaW5pdCA9IE5VTEwsCisJCQkucGFzdGUgPSBwYXN0
ZV90YWlsLAorCQkJLmZhc3RfcGFzdGUgPSBhZ3JlZV90b19mYXN0X29wLAorCQkJLmNhbl9zaGlm
dCA9IGNhbl9zaGlmdF90YWlsLAorCQkJLmNyZWF0ZV9ob29rID0gTlVMTCwKKwkJCS5jb3B5X3Vu
aXRzID0gY29weV91bml0c190YWlsLAorCQkJLmtpbGxfaG9vayA9IGtpbGxfaG9va190YWlsLAor
CQkJLnNoaWZ0X2hvb2sgPSBOVUxMLAorCQkJLmN1dF91bml0cyA9IGN1dF91bml0c190YWlsLAor
CQkJLmtpbGxfdW5pdHMgPSBraWxsX3VuaXRzX3RhaWwsCisJCQkudW5pdF9rZXkgPSB1bml0X2tl
eV90YWlsLAorCQkJLm1heF91bml0X2tleSA9IHVuaXRfa2V5X3RhaWwsCisJCQkuZXN0aW1hdGUg
PSBOVUxMLAorCQkJLml0ZW1fZGF0YV9ieV9mbG93ID0gTlVMTCwKKyNpZiBSRUlTRVI0X0RFQlVH
CisJCQkuY2hlY2sgPSBOVUxMCisjZW5kaWYKKwkJfSwKKwkJLmYgPSB7CisJCQkudXRtb3N0X2No
aWxkID0gTlVMTCwKKwkJCS51dG1vc3RfY2hpbGRfcmVhbF9ibG9jayA9IE5VTEwsCisJCQkudXBk
YXRlID0gTlVMTCwKKwkJCS5zY2FuID0gTlVMTCwKKwkJCS5jb252ZXJ0ID0gTlVMTAorCQl9LAor
CQkucyA9IHsKKwkJCS5maWxlID0geworCQkJCS53cml0ZSA9IHJlaXNlcjRfd3JpdGVfdGFpbCwK
KwkJCQkucmVhZCA9IHJlaXNlcjRfcmVhZF90YWlsLAorCQkJCS5yZWFkcGFnZSA9IHJlYWRwYWdl
X3RhaWwsCisJCQkJLmdldF9ibG9jayA9IGdldF9ibG9ja19hZGRyZXNzX3RhaWwsCisJCQkJLmFw
cGVuZF9rZXkgPSBhcHBlbmRfa2V5X3RhaWwsCisJCQkJLmluaXRfY29vcmRfZXh0ZW5zaW9uID0K
KwkJCQlpbml0X2Nvb3JkX2V4dGVuc2lvbl90YWlsCisJCQl9CisJCX0KKwl9LAorCVtDVEFJTF9J
RF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0lURU1fUExVR0lOX1RZUEUs
CisJCQkuaWQgPSBDVEFJTF9JRCwKKwkJCS5ncm91cHMgPSAoMSA8PCBVTklYX0ZJTEVfTUVUQURB
VEFfSVRFTV9UWVBFKSwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJjdGFpbCIsCisJ
CQkuZGVzYyA9ICJjcnlwdGNvbXByZXNzIHRhaWwgaXRlbSIsCisJCQkubGlua2FnZSA9IHtOVUxM
LCBOVUxMfQorCQl9LAorCQkuYiA9IHsKKwkJCS5tYXhfa2V5X2luc2lkZSA9IG1heF9rZXlfaW5z
aWRlX3RhaWwsCisJCQkuY2FuX2NvbnRhaW5fa2V5ID0gY2FuX2NvbnRhaW5fa2V5X2N0YWlsLAor
CQkJLm1lcmdlYWJsZSA9IG1lcmdlYWJsZV9jdGFpbCwKKwkJCS5ucl91bml0cyA9IG5yX3VuaXRz
X2N0YWlsLAorCQkJLmxvb2t1cCA9IE5VTEwsCisJCQkuaW5pdCA9IGluaXRfY3RhaWwsCisJCQku
cGFzdGUgPSBwYXN0ZV9jdGFpbCwKKwkJCS5mYXN0X3Bhc3RlID0gYWdyZWVfdG9fZmFzdF9vcCwK
KwkJCS5jYW5fc2hpZnQgPSBjYW5fc2hpZnRfY3RhaWwsCisJCQkuY3JlYXRlX2hvb2sgPSBjcmVh
dGVfaG9va19jdGFpbCwKKwkJCS5jb3B5X3VuaXRzID0gY29weV91bml0c19jdGFpbCwKKwkJCS5r
aWxsX2hvb2sgPSBraWxsX2hvb2tfY3RhaWwsCisJCQkuc2hpZnRfaG9vayA9IHNoaWZ0X2hvb2tf
Y3RhaWwsCisJCQkuY3V0X3VuaXRzID0gY3V0X3VuaXRzX2N0YWlsLAorCQkJLmtpbGxfdW5pdHMg
PSBraWxsX3VuaXRzX2N0YWlsLAorCQkJLnVuaXRfa2V5ID0gdW5pdF9rZXlfdGFpbCwKKwkJCS5t
YXhfdW5pdF9rZXkgPSB1bml0X2tleV90YWlsLAorCQkJLmVzdGltYXRlID0gZXN0aW1hdGVfY3Rh
aWwsCisJCQkuaXRlbV9kYXRhX2J5X2Zsb3cgPSBOVUxMLAorI2lmIFJFSVNFUjRfREVCVUcKKwkJ
CS5jaGVjayA9IGNoZWNrX2N0YWlsCisjZW5kaWYKKwkJfSwKKwkJLmYgPSB7CisJCQkudXRtb3N0
X2NoaWxkID0gdXRtb3N0X2NoaWxkX2N0YWlsLAorCQkJLyogRklYTUUtRURXQVJEOiB3cml0ZSB0
aGlzICovCisJCQkudXRtb3N0X2NoaWxkX3JlYWxfYmxvY2sgPSBOVUxMLAorCQkJLnVwZGF0ZSA9
IE5VTEwsCisJCQkuc2NhbiA9IHNjYW5fY3RhaWwsCisJCQkuY29udmVydCA9IGNvbnZlcnRfY3Rh
aWwKKwkJfSwKKwkJLnMgPSB7CisJCQkuZmlsZSA9IHsKKwkJCQkud3JpdGUgPSBOVUxMLAorCQkJ
CS5yZWFkID0gcmVhZF9jdGFpbCwKKwkJCQkucmVhZHBhZ2UgPSByZWFkcGFnZV9jdGFpbCwKKwkJ
CQkuZ2V0X2Jsb2NrID0gZ2V0X2Jsb2NrX2FkZHJlc3NfdGFpbCwKKwkJCQkuYXBwZW5kX2tleSA9
IGFwcGVuZF9rZXlfY3RhaWwsCisJCQkJLmluaXRfY29vcmRfZXh0ZW5zaW9uID0KKwkJCQlpbml0
X2Nvb3JkX2V4dGVuc2lvbl90YWlsCisJCQl9CisJCX0KKwl9LAorCVtCTEFDS19CT1hfSURdID0g
eworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9JVEVNX1BMVUdJTl9UWVBFLAorCQkJ
LmlkID0gQkxBQ0tfQk9YX0lELAorCQkJLmdyb3VwcyA9ICgxIDw8IE9USEVSX0lURU1fVFlQRSks
CisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAiYmxhY2tib3giLAorCQkJLmRlc2MgPSAi
YmxhY2sgYm94IGl0ZW0iLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmIg
PSB7CisJCQkubWF4X2tleV9pbnNpZGUgPSBOVUxMLAorCQkJLmNhbl9jb250YWluX2tleSA9IE5V
TEwsCisJCQkubWVyZ2VhYmxlID0gbm90X21lcmdlYWJsZSwKKwkJCS5ucl91bml0cyA9IG5yX3Vu
aXRzX3NpbmdsZV91bml0LAorCQkJLyogdG8gbmVlZCBmb3IgLT5sb29rdXAgbWV0aG9kICovCisJ
CQkubG9va3VwID0gTlVMTCwKKwkJCS5pbml0ID0gTlVMTCwKKwkJCS5wYXN0ZSA9IE5VTEwsCisJ
CQkuZmFzdF9wYXN0ZSA9IE5VTEwsCisJCQkuY2FuX3NoaWZ0ID0gTlVMTCwKKwkJCS5jb3B5X3Vu
aXRzID0gTlVMTCwKKwkJCS5jcmVhdGVfaG9vayA9IE5VTEwsCisJCQkua2lsbF9ob29rID0gTlVM
TCwKKwkJCS5zaGlmdF9ob29rID0gTlVMTCwKKwkJCS5jdXRfdW5pdHMgPSBOVUxMLAorCQkJLmtp
bGxfdW5pdHMgPSBOVUxMLAorCQkJLnVuaXRfa2V5ID0gTlVMTCwKKwkJCS5tYXhfdW5pdF9rZXkg
PSBOVUxMLAorCQkJLmVzdGltYXRlID0gTlVMTCwKKwkJCS5pdGVtX2RhdGFfYnlfZmxvdyA9IE5V
TEwsCisjaWYgUkVJU0VSNF9ERUJVRworCQkJLmNoZWNrID0gTlVMTAorI2VuZGlmCisJCX0KKwl9
Cit9OworCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1p
bmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1v
ZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9wbHVnaW4vaXRlbS9pdGVtLmggbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0v
aXRlbS5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL2l0ZW0u
aAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2Zz
L3JlaXNlcjQvcGx1Z2luL2l0ZW0vaXRlbS5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDY5MjIyMzAy
ICswMTAwCkBAIC0wLDAgKzEsMzk4IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBi
eSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisK
Ky8qIGZpcnN0IHJlYWQgYmFsYW5jZS5jIGNvbW1lbnRzIGJlZm9yZSByZWFkaW5nIHRoaXMgKi8K
KworLyogQW4gaXRlbV9wbHVnaW4gaW1wbGVtZW50cyBhbGwgb2YgdGhlIG9wZXJhdGlvbnMgcmVx
dWlyZWQgZm9yCisgICBiYWxhbmNpbmcgdGhhdCBhcmUgaXRlbSBzcGVjaWZpYy4gKi8KKworLyog
YW4gaXRlbSBwbHVnaW4gYWxzbyBpbXBsZW1lbnRzIG90aGVyIG9wZXJhdGlvbnMgdGhhdCBhcmUg
c3BlY2lmaWMgdG8gdGhhdAorICAgaXRlbS4gIFRoZXNlIGdvIGludG8gdGhlIGl0ZW0gc3BlY2lm
aWMgb3BlcmF0aW9ucyBwb3J0aW9uIG9mIHRoZSBpdGVtCisgICBoYW5kbGVyLCBhbmQgYWxsIG9m
IHRoZSBpdGVtIHNwZWNpZmljIHBvcnRpb25zIG9mIHRoZSBpdGVtIGhhbmRsZXIgYXJlIHB1dAor
ICAgaW50byBhIHVuaW9uLiAqLworCisjaWYgIWRlZmluZWQoIF9fUkVJU0VSNF9JVEVNX0hfXyAp
CisjZGVmaW5lIF9fUkVJU0VSNF9JVEVNX0hfXworCisjaW5jbHVkZSAiLi4vLi4vZm9yd2FyZC5o
IgorI2luY2x1ZGUgIi4uL3BsdWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICIuLi8uLi9kZm9ybWF0
LmgiCisjaW5jbHVkZSAiLi4vLi4vc2VhbC5oIgorI2luY2x1ZGUgIi4uLy4uL3BsdWdpbi9maWxl
L2ZpbGUuaCIKKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IGZpbGUsIHN0
cnVjdCBpbm9kZSAgKi8KKyNpbmNsdWRlIDxsaW51eC9tbS5oPgkJLyogZm9yIHN0cnVjdCBwYWdl
ICovCisjaW5jbHVkZSA8bGludXgvZGNhY2hlLmg+CS8qIGZvciBzdHJ1Y3QgZGVudHJ5ICovCisK
K3R5cGVkZWYgZW51bSB7CisJU1RBVF9EQVRBX0lURU1fVFlQRSwKKwlESVJfRU5UUllfSVRFTV9U
WVBFLAorCUlOVEVSTkFMX0lURU1fVFlQRSwKKwlVTklYX0ZJTEVfTUVUQURBVEFfSVRFTV9UWVBF
LAorCU9USEVSX0lURU1fVFlQRQorfSBpdGVtX3R5cGVfaWQ7CisKKy8qIHRoaXMgaXMgdGhlIHBh
cnQgb2YgZWFjaCBpdGVtIHBsdWdpbiB0aGF0IGFsbCBpdGVtcyBhcmUgZXhwZWN0ZWQgdG8KKyAg
IHN1cHBvcnQgb3IgYXQgbGVhc3QgZXhwbGljaXRseSBmYWlsIHRvIHN1cHBvcnQgYnkgc2V0dGlu
ZyB0aGUKKyAgIHBvaW50ZXIgdG8gbnVsbC4gKi8KK3N0cnVjdCBiYWxhbmNlX29wcyB7CisJLyog
b3BlcmF0aW9ucyBjYWxsZWQgYnkgYmFsYW5jaW5nCisKKwkgICBJdCBpcyBpbnRlcmVzdGluZyB0
byBjb25zaWRlciB0aGF0IHNvbWUgb2YgdGhlc2UgaXRlbQorCSAgIG9wZXJhdGlvbnMgY291bGQg
YmUgZ2l2ZW4gc291cmNlcyBvciB0YXJnZXRzIHRoYXQgYXJlIG5vdAorCSAgIHJlYWxseSBpdGVt
cyBpbiBub2Rlcy4gIFRoaXMgY291bGQgYmUgb2svdXNlZnVsLgorCisJICovCisJLyogbWF4aW1h
bCBrZXkgdGhhdCBjYW4gX3Bvc3NpYmx5XyBiZSBvY2N1cGllZCBieSB0aGlzIGl0ZW0KKworCSAg
IFdoZW4gaW5zZXJ0aW5nLCBhbmQgbm9kZSAtPmxvb2t1cCgpIG1ldGhvZCAoY2FsbGVkIGJ5CisJ
ICAgY29vcmRfYnlfa2V5KCkpIHJlYWNoZXMgYW4gaXRlbSBhZnRlciBiaW5hcnkgc2VhcmNoLAor
CSAgIHRoZSAgLT5tYXhfa2V5X2luc2lkZSgpIGl0ZW0gcGx1Z2luIG1ldGhvZCBpcyB1c2VkIHRv
IGRldGVybWluZQorCSAgIHdoZXRoZXIgbmV3IGl0ZW0gc2hvdWxkIHBhc3RlZCBpbnRvIGV4aXN0
aW5nIGl0ZW0KKwkgICAobmV3X2tleTw9bWF4X2tleV9pbnNpZGUoKSkgb3IgbmV3IGl0ZW0gaGFz
IHRvIGJlIGNyZWF0ZWQKKwkgICAobmV3X2tleT5tYXhfa2V5X2luc2lkZSgpKS4KKworCSAgIEZv
ciBpdGVtcyB0aGF0IG9jY3VweSBleGFjdGx5IG9uZSBrZXkgKGxpa2Ugc3RhdC1kYXRhKQorCSAg
IHRoaXMgbWV0aG9kIHNob3VsZCByZXR1cm4gdGhpcyBrZXkuIEZvciBpdGVtcyB0aGF0IGNhbgor
CSAgIGdyb3cgaW5kZWZpbml0ZWx5IChleHRlbnQsIGRpcmVjdG9yeSBpdGVtKSB0aGlzIHNob3Vs
ZAorCSAgIHJldHVybiByZWlzZXI0X21heF9rZXkoKS4KKworCSAgIEZvciBleGFtcGxlIGV4dGVu
dCB3aXRoIHRoZSBrZXkKKworCSAgIChMT0NBTElUWSw0LE9CSklELFNUQVJUSU5HLU9GRlNFVCks
IGFuZCBsZW5ndGggQkxLIGJsb2NrcywKKworCSAgIC0+bWF4X2tleV9pbnNpZGUgaXMgKExPQ0FM
SVRZLDQsT0JKSUQsMHhmZmZmZmZmZmZmZmZmZmZmKSwgYW5kCisJICovCisJcmVpc2VyNF9rZXkg
KigqbWF4X2tleV9pbnNpZGUpIChjb25zdCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOworCisJ
LyogdHJ1ZSBpZiBpdGVtIEBjb29yZCBjYW4gbWVyZ2UgZGF0YSBhdCBAa2V5LiAqLworCWludCAo
KmNhbl9jb250YWluX2tleSkgKGNvbnN0IGNvb3JkX3QgKiwgY29uc3QgcmVpc2VyNF9rZXkgKiwK
KwkJCQljb25zdCByZWlzZXI0X2l0ZW1fZGF0YSAqKTsKKwkvKiBtZXJnZWFibGUoKSAtIGNoZWNr
IGl0ZW1zIGZvciBtZXJnZWFiaWxpdHkKKworCSAgIE9wdGlvbmFsIG1ldGhvZC4gUmV0dXJucyB0
cnVlIGlmIHR3byBpdGVtcyBjYW4gYmUgbWVyZ2VkLgorCisJICovCisJaW50ICgqbWVyZ2VhYmxl
KSAoY29uc3QgY29vcmRfdCAqLCBjb25zdCBjb29yZF90ICopOworCisJLyogbnVtYmVyIG9mIGF0
b21pYyB0aGluZ3MgaW4gYW4gaXRlbS4KKwkgICBOT1RFIEZPUiBDT05UUklCVVRPUlM6IHVzZSBh
IGdlbmVyaWMgbWV0aG9kCisJICAgbnJfdW5pdHNfc2luZ2xlX3VuaXQoKSBmb3Igc29saWQgKGF0
b21pYykgaXRlbXMsIGFzCisJICAgdHJlZSBvcGVyYXRpb25zIHVzZSBpdCBhcyBhIGNyaXRlcmlv
biBvZiBzb2xpZG5lc3MKKwkgICAoc2VlIGlzX3NvbGlkX2l0ZW0gbWFjcm8pICovCisJcG9zX2lu
X25vZGVfdCgqbnJfdW5pdHMpIChjb25zdCBjb29yZF90ICopOworCisJLyogc2VhcmNoIHdpdGhp
biBpdGVtIGZvciBhIHVuaXQgd2l0aGluIHRoZSBpdGVtLCBhbmQgcmV0dXJuIGEKKwkgICBwb2lu
dGVyIHRvIGl0LiAgVGhpcyBjYW4gYmUgdXNlZCB0byBjYWxjdWxhdGUgaG93IG1hbnkKKwkgICBi
eXRlcyB0byBzaHJpbmsgYW4gaXRlbSBpZiB5b3UgdXNlIHBvaW50ZXIgYXJpdGhtZXRpYyBhbmQK
KwkgICBjb21wYXJlIHRvIHRoZSBzdGFydCBvZiB0aGUgaXRlbSBib2R5IGlmIHRoZSBpdGVtJ3Mg
ZGF0YQorCSAgIGFyZSBjb250aW51b3VzIGluIHRoZSBub2RlLCBpZiB0aGUgaXRlbSdzIGRhdGEg
YXJlIG5vdAorCSAgIGNvbnRpbnVvdXMgaW4gdGhlIG5vZGUsIGFsbCBzb3J0cyBvZiBvdGhlciB0
aGluZ3MgYXJlIG1heWJlCisJICAgZ29pbmcgdG8gYnJlYWsgYXMgd2VsbC4gKi8KKwkgbG9va3Vw
X3Jlc3VsdCgqbG9va3VwKSAoY29uc3QgcmVpc2VyNF9rZXkgKiwgbG9va3VwX2JpYXMsIGNvb3Jk
X3QgKik7CisJLyogbWV0aG9kIGNhbGxlZCBieSBvZGVfcGx1Z2luLT5jcmVhdGVfaXRlbSgpIHRv
IGluaXRpYWxpc2UgbmV3CisJICAgaXRlbSAqLworCWludCAoKmluaXQpIChjb29yZF90ICogdGFy
Z2V0LCBjb29yZF90ICogZnJvbSwKKwkJICAgICByZWlzZXI0X2l0ZW1fZGF0YSAqIGRhdGEpOwor
CS8qIG1ldGhvZCBjYWxsZWQgKGUuZy4sIGJ5IHJlaXNlcjRfcmVzaXplX2l0ZW0oKSkgdG8gcGxh
Y2UgbmV3IGRhdGEKKwkgICBpbnRvIGl0ZW0gd2hlbiBpdCBncm93cyAqLworCWludCAoKnBhc3Rl
KSAoY29vcmRfdCAqLCByZWlzZXI0X2l0ZW1fZGF0YSAqLCBjYXJyeV9wbHVnaW5faW5mbyAqKTsK
KwkvKiByZXR1cm4gdHJ1ZSBpZiBwYXN0ZSBpbnRvIEBjb29yZCBpcyBhbGxvd2VkIHRvIHNraXAK
KwkgICBjYXJyeS4gVGhhdCBpcywgaWYgc3VjaCBwYXN0ZSB3b3VsZCByZXF1aXJlIGFueSBjaGFu
Z2VzCisJICAgYXQgdGhlIHBhcmVudCBsZXZlbAorCSAqLworCWludCAoKmZhc3RfcGFzdGUpIChj
b25zdCBjb29yZF90ICopOworCS8qIGhvdyBtYW55IGJ1dCBub3QgbW9yZSB0aGFuIEB3YW50IHVu
aXRzIG9mIEBzb3VyY2UgY2FuIGJlCisJICAgc2hpZnRlZCBpbnRvIEB0YXJnZXQgbm9kZS4gSWYg
cGVuZCA9PSBhcHBlbmQgLSB3ZSB0cnkgdG8KKwkgICBhcHBlbmQgbGFzdCBpdGVtIG9mIEB0YXJn
ZXQgYnkgZmlyc3QgdW5pdHMgb2YgQHNvdXJjZS4gSWYKKwkgICBwZW5kID09IHByZXBlbmQgLSB3
ZSB0cnkgdG8gInByZXBlbmQiIGZpcnN0IGl0ZW0gaW4gQHRhcmdldAorCSAgIGJ5IGxhc3QgdW5p
dHMgb2YgQHNvdXJjZS4gQHRhcmdldCBub2RlIGhhcyBAZnJlZV9zcGFjZQorCSAgIGJ5dGVzIG9m
IGZyZWUgc3BhY2UuIFRvdGFsIHNpemUgb2YgdGhvc2UgdW5pdHMgYXJlIHJldHVybmVkCisJICAg
dmlhIEBzaXplLgorCisJICAgQHRhcmdldCBpcyBub3QgTlVMTCBpZiBzaGlmdGluZyB0byB0aGUg
bWVyZ2VhYmxlIGl0ZW0gYW5kCisJICAgTlVMTCBpcyBuZXcgaXRlbSB3aWxsIGJlIGNyZWF0ZWQg
ZHVyaW5nIHNoaWZ0aW5nLgorCSAqLworCWludCAoKmNhbl9zaGlmdCkgKHVuc2lnbmVkIGZyZWVf
c3BhY2UsIGNvb3JkX3QgKiwKKwkJCSAgem5vZGUgKiwgc2hpZnRfZGlyZWN0aW9uLCB1bnNpZ25l
ZCAqc2l6ZSwKKwkJCSAgdW5zaWduZWQgd2FudCk7CisKKwkvKiBzdGFydGluZyBvZmYgQGZyb20t
dGggdW5pdCBvZiBpdGVtIEBzb3VyY2UgYXBwZW5kIG9yCisJICAgcHJlcGVuZCBAY291bnQgdW5p
dHMgdG8gQHRhcmdldC4gQHRhcmdldCBoYXMgYmVlbiBhbHJlYWR5CisJICAgZXhwYW5kZWQgYnkg
QGZyZWVfc3BhY2UgYnl0ZXMuIFRoYXQgbXVzdCBiZSBleGFjdGx5IHdoYXQgaXMKKwkgICBuZWVk
ZWQgZm9yIHRob3NlIGl0ZW1zIGluIEB0YXJnZXQuIElmIEB3aGVyZV9pc19mcmVlX3NwYWNlCisJ
ICAgPT0gU0hJRlRfTEVGVCAtIGZyZWUgc3BhY2UgaXMgYXQgdGhlIGVuZCBvZiBAdGFyZ2V0IGl0
ZW0sCisJICAgb3RoZXJzaXplIC0gaXQgaXMgaW4gdGhlIGJlZ2lubmluZyBvZiBpdC4gKi8KKwl2
b2lkICgqY29weV91bml0cykgKGNvb3JkX3QgKiwgY29vcmRfdCAqLAorCQkJICAgIHVuc2lnbmVk
IGZyb20sIHVuc2lnbmVkIGNvdW50LAorCQkJICAgIHNoaWZ0X2RpcmVjdGlvbiB3aGVyZV9pc19m
cmVlX3NwYWNlLAorCQkJICAgIHVuc2lnbmVkIGZyZWVfc3BhY2UpOworCisJaW50ICgqY3JlYXRl
X2hvb2spIChjb25zdCBjb29yZF90ICosIHZvaWQgKik7CisJLyogZG8gd2hhdGV2ZXIgaXMgbmVj
ZXNzYXJ5IHRvIGRvIHdoZW4gQGNvdW50IHVuaXRzIHN0YXJ0aW5nCisJICAgZnJvbSBAZnJvbS10
aCBvbmUgYXJlIHJlbW92ZWQgZnJvbSB0aGUgdHJlZSAqLworCS8qIEZJWE1FLVZTOiB0aGlzIGlz
IHVzZWQgdG8gYmUgaGVyZSBmb3IsIGluIHBhcnRpY3VsYXIsCisJICAgZXh0ZW50cyBhbmQgaXRl
bXMgb2YgaW50ZXJuYWwgdHlwZSB0byBmcmVlIGJsb2NrcyB0aGV5IHBvaW50CisJICAgdG8gYXQg
dGhlIHNhbWUgdGltZSB3aXRoIHJlbW92aW5nIGl0ZW1zIGZyb20gYQorCSAgIHRyZWUuIFByb2Js
ZW1zIHN0YXJ0LCBob3dldmVyLCB3aGVuIGRlYWxsb2NfYmxvY2sgZmFpbHMgZHVlCisJICAgdG8g
c29tZSByZWFzb24uIEl0ZW0gZ2V0cyByZW1vdmVkLCBidXQgYmxvY2tzIGl0IHBvaW50ZWQgdG8K
KwkgICBhcmUgbm90IGZyZWVkLiBJdCBpcyBub3QgY2xlYXIgaG93IHRvIGZpeCB0aGlzIGZvciBp
dGVtcyBvZgorCSAgIGludGVybmFsIHR5cGUgYmVjYXVzZSBhIG5lZWQgdG8gcmVtb3ZlIGludGVy
bmFsIGl0ZW0gbWF5CisJICAgYXBwZWFyIGluIHRoZSBtaWRkbGUgb2YgYmFsYW5jaW5nLCBhbmQg
dGhlcmUgaXMgbm8gd2F5IHRvCisJICAgdW5kbyBjaGFuZ2VzIG1hZGUuIE9UT0gsIGlmIHNwYWNl
IGFsbG9jYXRvciBpbnZvbHZlcworCSAgIGJhbGFuY2luZyB0byBwZXJmb3JtIGRlYWxsb2NfYmxv
Y2sgLSB0aGlzIHdpbGwgcHJvYmFibHkKKwkgICBicmVhayBiYWxhbmNpbmcgZHVlIHRvIGRlYWRs
b2NrIGlzc3VlcworCSAqLworCWludCAoKmtpbGxfaG9vaykgKGNvbnN0IGNvb3JkX3QgKiwgcG9z
X2luX25vZGVfdCBmcm9tLAorCQkJICBwb3NfaW5fbm9kZV90IGNvdW50LCBzdHJ1Y3QgY2Fycnlf
a2lsbF9kYXRhICopOworCWludCAoKnNoaWZ0X2hvb2spIChjb25zdCBjb29yZF90ICosIHVuc2ln
bmVkIGZyb20sIHVuc2lnbmVkIGNvdW50LAorCQkJICAgem5vZGUgKiBfbm9kZSk7CisKKwkvKiB1
bml0IEAqZnJvbSBjb250YWlucyBAZnJvbV9rZXkuIHVuaXQgQCp0byBjb250YWlucyBAdG9fa2V5
LiBDdXQgYWxsIGtleXMgYmV0d2VlbiBAZnJvbV9rZXkgYW5kIEB0b19rZXkKKwkgICBpbmNsdWRp
bmcgYm91bmRhcmllcy4gV2hlbiB1bml0cyBhcmUgY3V0IGZyb20gaXRlbSBiZWdpbm5pbmcgLSBt
b3ZlIHNwYWNlIHdoaWNoIGdldHMgZnJlZWQgdG8gaGVhZCBvZgorCSAgIGl0ZW0uIFdoZW4gdW5p
dHMgYXJlIGN1dCBmcm9tIGl0ZW0gZW5kIC0gbW92ZSBmcmVlZCBzcGFjZSB0byBpdGVtIGVuZC4g
V2hlbiB1bml0cyBhcmUgY3V0IGZyb20gdGhlIG1pZGRsZSBvZgorCSAgIGl0ZW0gLSBtb3ZlIGZy
ZWVkIHNwYWNlIHRvIGl0ZW0gaGVhZC4gUmV0dXJuIGFtb3VudCBvZiBzcGFjZSB3aGljaCBnb3Qg
ZnJlZWQuIFNhdmUgc21hbGxlc3QgcmVtb3ZlZCBrZXkgaW4KKwkgICBAc21hbGxlc3RfcmVtb3Zl
ZCBpZiBpdCBpcyBub3QgMC4gU2F2ZSBuZXcgZmlyc3QgaXRlbSBrZXkgaW4gQG5ld19maXJzdF9r
ZXkgaWYgaXQgaXMgbm90IDAKKwkgKi8KKwlpbnQgKCpjdXRfdW5pdHMpIChjb29yZF90ICosIHBv
c19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywKKwkJCSAgc3RydWN0IGNhcnJ5X2N1
dF9kYXRhICosCisJCQkgIHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwKKwkJCSAgcmVp
c2VyNF9rZXkgKiBuZXdfZmlyc3Rfa2V5KTsKKworCS8qIGxpa2UgY3V0X3VuaXRzLCBleGNlcHQg
dGhhdCB0aGVzZSB1bml0cyBhcmUgcmVtb3ZlZCBmcm9tIHRoZQorCSAgIHRyZWUsIG5vdCBvbmx5
IGZyb20gYSBub2RlICovCisJaW50ICgqa2lsbF91bml0cykgKGNvb3JkX3QgKiwgcG9zX2luX25v
ZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCQkJICAgc3RydWN0IGNhcnJ5X2tpbGxfZGF0
YSAqLAorCQkJICAgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkJICAgcmVpc2Vy
NF9rZXkgKiBuZXdfZmlyc3QpOworCisJLyogaWYgQGtleV9vZl9jb29yZCA9PSAxIC0gcmV0dXJu
ZWQga2V5IG9mIGNvb3JkLCBvdGhlcndpc2UgLQorCSAgIGtleSBvZiB1bml0IGlzIHJldHVybmVk
LiBJZiBAY29vcmQgaXMgbm90IHNldCB0byBjZXJ0YWluCisJICAgdW5pdCAtIEVSUl9QVFIoLUVO
T0VOVCkgaXMgcmV0dXJuZWQgKi8KKwlyZWlzZXI0X2tleSAqKCp1bml0X2tleSkgKGNvbnN0IGNv
b3JkX3QgKiwgcmVpc2VyNF9rZXkgKik7CisJcmVpc2VyNF9rZXkgKigqbWF4X3VuaXRfa2V5KSAo
Y29uc3QgY29vcmRfdCAqLCByZWlzZXI0X2tleSAqKTsKKwkvKiBlc3RpbWF0ZSBob3cgbXVjaCBz
cGFjZSBpcyBuZWVkZWQgZm9yIHBhc3RlIEBkYXRhIGludG8gaXRlbSBhdAorCSAgIEBjb29yZC4g
aWYgQGNvb3JkPT0wIC0gZXN0aW1hdGUgaW5zZXJ0aW9uLCBvdGhlcndpc2UgLSBlc3RpbWF0ZQor
CSAgIHBhc3RpbmcKKwkgKi8KKwlpbnQgKCplc3RpbWF0ZSkgKGNvbnN0IGNvb3JkX3QgKiwgY29u
c3QgcmVpc2VyNF9pdGVtX2RhdGEgKik7CisKKwkvKiBjb252ZXJ0cyBmbG93IEBmIHRvIGl0ZW0g
ZGF0YS4gQGNvb3JkID09IDAgb24gaW5zZXJ0ICovCisJaW50ICgqaXRlbV9kYXRhX2J5X2Zsb3cp
IChjb25zdCBjb29yZF90ICosIGNvbnN0IGZsb3dfdCAqLAorCQkJCSAgcmVpc2VyNF9pdGVtX2Rh
dGEgKik7CisKKwkvKnZvaWQgKCpzaG93KSAoc3RydWN0IHNlcV9maWxlICosIGNvb3JkX3QgKik7
ICovCisKKyNpZiBSRUlTRVI0X0RFQlVHCisJLyogdXNlZCBmb3IgZGVidWdnaW5nLCBldmVyeSBp
dGVtIHNob3VsZCBoYXZlIGhlcmUgdGhlIG1vc3QKKwkgICBjb21wbGV0ZSBwb3NzaWJsZSBjaGVj
ayBvZiB0aGUgY29uc2lzdGVuY3kgb2YgdGhlIGl0ZW0gdGhhdAorCSAgIHRoZSBpbnZlbnRvciBj
YW4gY29uc3RydWN0ICovCisJaW50ICgqY2hlY2spIChjb25zdCBjb29yZF90ICosIGNvbnN0IGNo
YXIgKiplcnJvcik7CisjZW5kaWYKKworfTsKKworc3RydWN0IGZsdXNoX29wcyB7CisJLyogcmV0
dXJuIHRoZSByaWdodCBvciBsZWZ0IGNoaWxkIG9mIEBjb29yZCwgb25seSBpZiBpdCBpcyBpbiBt
ZW1vcnkgKi8KKwlpbnQgKCp1dG1vc3RfY2hpbGQpIChjb25zdCBjb29yZF90ICosIHNpZGVvZiBz
aWRlLCBqbm9kZSAqKiBjaGlsZCk7CisKKwkvKiByZXR1cm4gd2hldGhlciB0aGUgcmlnaHQgb3Ig
bGVmdCBjaGlsZCBvZiBAY29vcmQgaGFzIGEgbm9uLWZha2UKKwkgICBibG9jayBudW1iZXIuICov
CisJaW50ICgqdXRtb3N0X2NoaWxkX3JlYWxfYmxvY2spIChjb25zdCBjb29yZF90ICosIHNpZGVv
ZiBzaWRlLAorCQkJCQlyZWlzZXI0X2Jsb2NrX25yICopOworCS8qIHJlbG9jYXRlIGNoaWxkIGF0
IEBjb29yZCB0byB0aGUgQGJsb2NrICovCisJdm9pZCAoKnVwZGF0ZSkgKGNvbnN0IGNvb3JkX3Qg
KiwgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqKTsKKwkvKiBjb3VudCB1bmZvcm1hdHRlZCBub2Rl
cyBwZXIgaXRlbSBmb3IgbGVhdmUgcmVsb2NhdGlvbiBwb2xpY3ksIGV0Yy4uICovCisJaW50ICgq
c2NhbikgKGZsdXNoX3NjYW4gKiBzY2FuKTsKKwkvKiBjb252ZXJ0IGl0ZW0gYnkgZmx1c2ggKi8K
KwlpbnQgKCpjb252ZXJ0KSAoZmx1c2hfcG9zX3QgKiBwb3MpOworCS8qIGJhY2t3YXJkIG1hcHBp
bmcgZnJvbSBqbm9kZSBvZmZzZXQgdG8gYSBrZXkuICAqLworCWludCAoKmtleV9ieV9vZmZzZXQp
IChzdHJ1Y3QgaW5vZGUgKiwgbG9mZl90LCByZWlzZXI0X2tleSAqKTsKK307CisKKy8qIG9wZXJh
dGlvbnMgc3BlY2lmaWMgdG8gdGhlIGRpcmVjdG9yeSBpdGVtICovCitzdHJ1Y3QgZGlyX2VudHJ5
X2lvcHMgeworCS8qIGV4dHJhY3Qgc3RhdC1kYXRhIGtleSBmcm9tIGRpcmVjdG9yeSBlbnRyeSBh
dCBAY29vcmQgYW5kIHBsYWNlIGl0CisJICAgaW50byBAa2V5LiAqLworCWludCAoKmV4dHJhY3Rf
a2V5KSAoY29uc3QgY29vcmRfdCAqLCByZWlzZXI0X2tleSAqIGtleSk7CisJLyogdXBkYXRlIG9i
amVjdCBrZXkgaW4gaXRlbS4gKi8KKwlpbnQgKCp1cGRhdGVfa2V5KSAoY29uc3QgY29vcmRfdCAq
LCBjb25zdCByZWlzZXI0X2tleSAqLCBsb2NrX2hhbmRsZSAqKTsKKwkvKiBleHRyYWN0IG5hbWUg
ZnJvbSBkaXJlY3RvcnkgZW50cnkgYXQgQGNvb3JkIGFuZCByZXR1cm4gaXQgKi8KKwljaGFyICoo
KmV4dHJhY3RfbmFtZSkgKGNvbnN0IGNvb3JkX3QgKiwgY2hhciAqYnVmKTsKKwkvKiBleHRyYWN0
IGZpbGUgdHlwZSAoRFRfKiBzdHVmZikgZnJvbSBkaXJlY3RvcnkgZW50cnkgYXQgQGNvb3JkIGFu
ZAorCSAgIHJldHVybiBpdCAqLworCXVuc2lnbmVkICgqZXh0cmFjdF9maWxlX3R5cGUpIChjb25z
dCBjb29yZF90ICopOworCWludCAoKmFkZF9lbnRyeSkgKHN0cnVjdCBpbm9kZSAqIGRpciwKKwkJ
CSAgY29vcmRfdCAqLCBsb2NrX2hhbmRsZSAqLAorCQkJICBjb25zdCBzdHJ1Y3QgZGVudHJ5ICog
bmFtZSwKKwkJCSAgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5KTsKKwlpbnQgKCpyZW1f
ZW50cnkpIChzdHJ1Y3QgaW5vZGUgKiBkaXIsIGNvbnN0IHN0cnVjdCBxc3RyICogbmFtZSwKKwkJ
CSAgY29vcmRfdCAqLCBsb2NrX2hhbmRsZSAqLAorCQkJICByZWlzZXI0X2Rpcl9lbnRyeV9kZXNj
ICogZW50cnkpOworCWludCAoKm1heF9uYW1lX2xlbikgKGNvbnN0IHN0cnVjdCBpbm9kZSAqIGRp
cik7Cit9OworCisvKiBvcGVyYXRpb25zIHNwZWNpZmljIHRvIGl0ZW1zIHJlZ3VsYXIgKHVuaXgp
IGZpbGUgbWV0YWRhdGEgYXJlIGJ1aWx0IG9mICovCitzdHJ1Y3QgZmlsZV9pb3BzeworCXNzaXpl
X3QgKCp3cml0ZSkgKHN0cnVjdCBmaWxlICosIHN0cnVjdCBpbm9kZSAqLAorCQkJICBjb25zdCBj
aGFyIF9fdXNlciAqLCBzaXplX3QsIGxvZmZfdCAqcG9zKTsKKwlpbnQgKCpyZWFkKSAoc3RydWN0
IGZpbGUgKiwgZmxvd190ICosIGhpbnRfdCAqKTsKKwlpbnQgKCpyZWFkcGFnZSkgKHZvaWQgKiwg
c3RydWN0IHBhZ2UgKik7CisJaW50ICgqZ2V0X2Jsb2NrKSAoY29uc3QgY29vcmRfdCAqLCBzZWN0
b3JfdCwgc2VjdG9yX3QgKik7CisJLyoKKwkgKiBrZXkgb2YgZmlyc3QgYnl0ZSB3aGljaCBpcyBu
b3QgYWRkcmVzc2VkIGJ5IHRoZSBpdGVtIEBjb29yZCBpcyBzZXQKKwkgKiB0by4KKwkgKiBGb3Ig
ZXhhbXBsZSwgZm9yIGV4dGVudCBpdGVtIHdpdGggdGhlIGtleQorCSAqCisJICogKExPQ0FMSVRZ
LDQsT0JKSUQsU1RBUlRJTkctT0ZGU0VUKSwgYW5kIGxlbmd0aCBCTEsgYmxvY2tzLAorCSAqCisJ
ICogLT5hcHBlbmRfa2V5IGlzCisJICoKKwkgKiAoTE9DQUxJVFksNCxPQkpJRCxTVEFSVElORy1P
RkZTRVQgKyBCTEsgKiBibG9ja19zaXplKQorCSAqLworCXJlaXNlcjRfa2V5ICooKmFwcGVuZF9r
ZXkpIChjb25zdCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOworCisJdm9pZCAoKmluaXRfY29v
cmRfZXh0ZW5zaW9uKSAodWZfY29vcmRfdCAqLCBsb2ZmX3QpOworfTsKKworLyogb3BlcmF0aW9u
cyBzcGVjaWZpYyB0byBpdGVtcyBvZiBzdGF0IGRhdGEgdHlwZSAqLworc3RydWN0IHNkX2lvcHMg
eworCWludCAoKmluaXRfaW5vZGUpIChzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwgY2hhciAqc2QsIGlu
dCBsZW4pOworCWludCAoKnNhdmVfbGVuKSAoc3RydWN0IGlub2RlICogaW5vZGUpOworCWludCAo
KnNhdmUpIChzdHJ1Y3QgaW5vZGUgKiBpbm9kZSwgY2hhciAqKmFyZWEpOworfTsKKworLyogb3Bl
cmF0aW9ucyBzcGVjaWZpYyB0byBpbnRlcm5hbCBpdGVtICovCitzdHJ1Y3QgaW50ZXJuYWxfaW9w
c3sKKwkvKiBhbGwgdHJlZSB0cmF2ZXJzYWwgd2FudCB0byBrbm93IGZyb20gaW50ZXJuYWwgaXRl
bSBpcyB3aGVyZQorCSAgIHRvIGdvIG5leHQuICovCisJdm9pZCAoKmRvd25fbGluaykgKGNvbnN0
IGNvb3JkX3QgKiBjb29yZCwKKwkJCSAgIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCByZWlzZXI0
X2Jsb2NrX25yICogYmxvY2spOworCS8qIGNoZWNrIHRoYXQgZ2l2ZW4gaW50ZXJuYWwgaXRlbSBj
b250YWlucyBnaXZlbiBwb2ludGVyLiAqLworCWludCAoKmhhc19wb2ludGVyX3RvKSAoY29uc3Qg
Y29vcmRfdCAqIGNvb3JkLAorCQkJICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBibG9j
ayk7Cit9OworCitzdHJ1Y3QgaXRlbV9wbHVnaW4geworCS8qIGdlbmVyaWMgZmllbGRzICovCisJ
cGx1Z2luX2hlYWRlciBoOworCS8qIG1ldGhvZHMgY29tbW9uIGZvciBhbGwgaXRlbSB0eXBlcyAq
LworCXN0cnVjdCBiYWxhbmNlX29wcyBiOyAvKiBiYWxhbmNlIG9wZXJhdGlvbnMgKi8KKyAJc3Ry
dWN0IGZsdXNoX29wcyBmOyAgIC8qIGZsdXNoIG9wZXJhdGVzIHdpdGggaXRlbXMgdmlhIHRoaXMg
bWV0aG9kcyAqLworCisJLyogbWV0aG9kcyBzcGVjaWZpYyB0byBwYXJ0aWN1bGFyIHR5cGUgb2Yg
aXRlbSAqLworCXVuaW9uIHsKKwkJc3RydWN0IGRpcl9lbnRyeV9pb3BzIGRpcjsKKwkJc3RydWN0
ICAgICAgZmlsZV9pb3BzIGZpbGU7CisJCXN0cnVjdCAgICAgICAgc2RfaW9wcyBzZDsKKwkJc3Ry
dWN0ICBpbnRlcm5hbF9pb3BzIGludGVybmFsOworCX0gczsKK307CisKKyNkZWZpbmUgaXNfc29s
aWRfaXRlbShpcGx1ZykgKChpcGx1ZyktPmIubnJfdW5pdHMgPT0gbnJfdW5pdHNfc2luZ2xlX3Vu
aXQpCisKK3N0YXRpYyBpbmxpbmUgaXRlbV9pZCBpdGVtX2lkX2J5X3BsdWdpbihpdGVtX3BsdWdp
biAqIHBsdWdpbikKK3sKKwlyZXR1cm4gcGx1Z2luLT5oLmlkOworfQorCitzdGF0aWMgaW5saW5l
IGNoYXIgZ2V0X2lwbHVnaWQoaXRlbV9wbHVnaW4gKiBpcGx1ZykKK3sKKwlhc3NlcnQoIm5pa2l0
YS0yODM4IiwgaXBsdWcgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjgzOSIsIGlwbHVnLT5o
LmlkIDwgMHhmZik7CisJcmV0dXJuIChjaGFyKWl0ZW1faWRfYnlfcGx1Z2luKGlwbHVnKTsKK30K
KworZXh0ZXJuIHVuc2lnbmVkIGxvbmcgem5vZGVfdGltZXNfbG9ja2VkKGNvbnN0IHpub2RlICog
eik7CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBjb29yZF9zZXRfaXBsdWcoY29vcmRfdCAqIGNvb3Jk
LCBpdGVtX3BsdWdpbiAqIGlwbHVnKQoreworCWFzc2VydCgibmlraXRhLTI4MzciLCBjb29yZCAh
PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yODM4IiwgaXBsdWcgIT0gTlVMTCk7CisJY29vcmQt
PmlwbHVnaWQgPSBnZXRfaXBsdWdpZChpcGx1Zyk7CisJT05fREVCVUcoY29vcmQtPnBsdWdfdiA9
IHpub2RlX3RpbWVzX2xvY2tlZChjb29yZC0+bm9kZSkpOworfQorCitzdGF0aWMgaW5saW5lIGl0
ZW1fcGx1Z2luICpjb29yZF9pcGx1Zyhjb25zdCBjb29yZF90ICogY29vcmQpCit7CisJYXNzZXJ0
KCJuaWtpdGEtMjgzMyIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI4MzQiLCBj
b29yZC0+aXBsdWdpZCAhPSBJTlZBTElEX1BMVUdJRCk7CisJYXNzZXJ0KCJuaWtpdGEtMzU0OSIs
IGNvb3JkLT5wbHVnX3YgPT0gem5vZGVfdGltZXNfbG9ja2VkKGNvb3JkLT5ub2RlKSk7CisJcmV0
dXJuIChpdGVtX3BsdWdpbiAqKSBwbHVnaW5fYnlfaWQoUkVJU0VSNF9JVEVNX1BMVUdJTl9UWVBF
LAorCQkJCQkgICAgY29vcmQtPmlwbHVnaWQpOworfQorCitleHRlcm4gaW50IGl0ZW1fY2FuX2Nv
bnRhaW5fa2V5KGNvbnN0IGNvb3JkX3QgKiBpdGVtLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwK
KwkJCQljb25zdCByZWlzZXI0X2l0ZW1fZGF0YSAqKTsKK2V4dGVybiBpbnQgYXJlX2l0ZW1zX21l
cmdlYWJsZShjb25zdCBjb29yZF90ICogaTEsIGNvbnN0IGNvb3JkX3QgKiBpMik7CitleHRlcm4g
aW50IGl0ZW1faXNfZXh0ZW50KGNvbnN0IGNvb3JkX3QgKik7CitleHRlcm4gaW50IGl0ZW1faXNf
dGFpbChjb25zdCBjb29yZF90ICopOworZXh0ZXJuIGludCBpdGVtX2lzX3N0YXRkYXRhKGNvbnN0
IGNvb3JkX3QgKiBpdGVtKTsKK2V4dGVybiBpbnQgaXRlbV9pc19jdGFpbChjb25zdCBjb29yZF90
ICopOworCitleHRlcm4gcG9zX2luX25vZGVfdCBpdGVtX2xlbmd0aF9ieV9jb29yZChjb25zdCBj
b29yZF90ICogY29vcmQpOworZXh0ZXJuIHBvc19pbl9ub2RlX3QgbnJfdW5pdHNfc2luZ2xlX3Vu
aXQoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKK2V4dGVybiBpdGVtX2lkIGl0ZW1faWRfYnlfY29v
cmQoY29uc3QgY29vcmRfdCAqIGNvb3JkIC8qIGNvb3JkIHRvIHF1ZXJ5ICovICk7CitleHRlcm4g
cmVpc2VyNF9rZXkgKml0ZW1fa2V5X2J5X2Nvb3JkKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgcmVp
c2VyNF9rZXkgKiBrZXkpOworZXh0ZXJuIHJlaXNlcjRfa2V5ICptYXhfaXRlbV9rZXlfYnlfY29v
cmQoY29uc3QgY29vcmRfdCAqLCByZWlzZXI0X2tleSAqKTsKK2V4dGVybiByZWlzZXI0X2tleSAq
dW5pdF9rZXlfYnlfY29vcmQoY29uc3QgY29vcmRfdCAqIGNvb3JkLCByZWlzZXI0X2tleSAqIGtl
eSk7CitleHRlcm4gcmVpc2VyNF9rZXkgKm1heF91bml0X2tleV9ieV9jb29yZChjb25zdCBjb29y
ZF90ICogY29vcmQsCisJCQkJCSAgcmVpc2VyNF9rZXkgKiBrZXkpOworZXh0ZXJuIHZvaWQgb2J0
YWluX2l0ZW1fcGx1Z2luKGNvbnN0IGNvb3JkX3QgKiBjb29yZCk7CisKKyNpZiBkZWZpbmVkKFJF
SVNFUjRfREVCVUcpCitleHRlcm4gaW50IHpub2RlX2lzX2xvYWRlZChjb25zdCB6bm9kZSAqIG5v
ZGUpOworI2VuZGlmCisKKy8qIHJldHVybiBwbHVnaW4gb2YgaXRlbSBhdCBAY29vcmQgKi8KK3N0
YXRpYyBpbmxpbmUgaXRlbV9wbHVnaW4gKml0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvbnN0IGNvb3Jk
X3QgKgorCQkJCQkJY29vcmQgLyogY29vcmQgdG8gcXVlcnkgKi8gKQoreworCWFzc2VydCgibmlr
aXRhLTMzMCIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMzMSIsIGNvb3JkLT5u
b2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMzMiIsIHpub2RlX2lzX2xvYWRlZChjb29y
ZC0+bm9kZSkpOworCisJaWYgKHVubGlrZWx5KCFjb29yZF9pc19pcGx1Z19zZXQoY29vcmQpKSkK
KwkJb2J0YWluX2l0ZW1fcGx1Z2luKGNvb3JkKTsKKwlyZXR1cm4gY29vcmRfaXBsdWcoY29vcmQp
OworfQorCisvKiB0aGlzIHJldHVybnMgdHJ1ZSBpZiBpdGVtIGlzIG9mIGludGVybmFsIHR5cGUg
Ki8KK3N0YXRpYyBpbmxpbmUgaW50IGl0ZW1faXNfaW50ZXJuYWwoY29uc3QgY29vcmRfdCAqIGl0
ZW0pCit7CisJYXNzZXJ0KCJ2cy00ODMiLCBjb29yZF9pc19leGlzdGluZ19pdGVtKGl0ZW0pKTsK
KwlyZXR1cm4gcGx1Z2luX29mX2dyb3VwKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGl0ZW0pLCBJTlRF
Uk5BTF9JVEVNX1RZUEUpOworfQorCitleHRlcm4gdm9pZCBpdGVtX2JvZHlfYnlfY29vcmRfaGFy
ZChjb29yZF90ICogY29vcmQpOworZXh0ZXJuIHZvaWQgKml0ZW1fYm9keV9ieV9jb29yZF9lYXN5
KGNvbnN0IGNvb3JkX3QgKiBjb29yZCk7CisjaWYgUkVJU0VSNF9ERUJVRworZXh0ZXJuIGludCBp
dGVtX2JvZHlfaXNfdmFsaWQoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKKyNlbmRpZgorCisvKiBy
ZXR1cm4gcG9pbnRlciB0byBpdGVtIGJvZHkgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZCAqaXRlbV9i
b2R5X2J5X2Nvb3JkKGNvbnN0IGNvb3JkX3QgKgorCQkJCSAgICAgICBjb29yZCAvKiBjb29yZCB0
byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEtMzI0IiwgY29vcmQgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMzI1IiwgY29vcmQtPm5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtMzI2Iiwgem5vZGVfaXNfbG9hZGVkKGNvb3JkLT5ub2RlKSk7CisKKwlpZiAoY29vcmQtPm9m
ZnNldCA9PSBJTlZBTElEX09GRlNFVCkKKwkJaXRlbV9ib2R5X2J5X2Nvb3JkX2hhcmQoKGNvb3Jk
X3QgKikgY29vcmQpOworCWFzc2VydCgibmlraXRhLTMyMDEiLCBpdGVtX2JvZHlfaXNfdmFsaWQo
Y29vcmQpKTsKKwlhc3NlcnQoIm5pa2l0YS0zNTUwIiwgY29vcmQtPmJvZHlfdiA9PSB6bm9kZV90
aW1lc19sb2NrZWQoY29vcmQtPm5vZGUpKTsKKwlyZXR1cm4gaXRlbV9ib2R5X2J5X2Nvb3JkX2Vh
c3koY29vcmQpOworfQorCisvKiBfX1JFSVNFUjRfSVRFTV9IX18gKi8KKyNlbmRpZgorLyogTWFr
ZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5
bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0
YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBF
bmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9y
ZWlzZXI0L3BsdWdpbi9pdGVtL01ha2VmaWxlIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdp
bi9pdGVtL01ha2VmaWxlCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9p
dGVtL01ha2VmaWxlCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9NYWtlZmlsZQkyMDIwLTAyLTA1IDIwOjUz
OjQxLjQ3MDIyMjMxMCArMDEwMApAQCAtMCwwICsxLDE4IEBACitvYmotJChDT05GSUdfUkVJU0VS
NF9GUykgKz0gaXRlbV9wbHVnaW5zLm8KKworaXRlbV9wbHVnaW5zLW9ianMgOj0JCVwKKwlpdGVt
Lm8JCQlcCisJc3RhdGljX3N0YXQubwkJXAorCXNkZS5vCQkJXAorCWNkZS5vCQkJXAorCWJsYWNr
Ym94Lm8JCVwKKwlpbnRlcm5hbC5vCQlcCisJdGFpbC5vCQkJXAorCWN0YWlsLm8JCQlcCisJZXh0
ZW50Lm8JCVwKKwlleHRlbnRfaXRlbV9vcHMubwlcCisJZXh0ZW50X2ZpbGVfb3BzLm8JXAorCWV4
dGVudF9mbHVzaF9vcHMubworCisKKwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3NkZS5jIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L3BsdWdpbi9pdGVtL3NkZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0
L3BsdWdpbi9pdGVtL3NkZS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisr
KyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9zZGUuYwkyMDIwLTAyLTA1IDIw
OjUzOjQxLjQ3MDIyMjMxMCArMDEwMApAQCAtMCwwICsxLDE4NiBAQAorLyogQ29weXJpZ2h0IDIw
MDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlz
ZXI0L1JFQURNRSAqLworCisvKiBEaXJlY3RvcnkgZW50cnkgaW1wbGVtZW50YXRpb24gKi8KKyNp
bmNsdWRlICIuLi8uLi9mb3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vLi4vZGVidWcuaCIKKyNpbmNs
dWRlICIuLi8uLi9kZm9ybWF0LmgiCisjaW5jbHVkZSAiLi4vLi4va2Fzc2lnbi5oIgorI2luY2x1
ZGUgIi4uLy4uL2Nvb3JkLmgiCisjaW5jbHVkZSAic2RlLmgiCisjaW5jbHVkZSAiaXRlbS5oIgor
I2luY2x1ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1ZGUgIi4uLy4uL3pub2RlLmgiCisjaW5jbHVk
ZSAiLi4vLi4vY2FycnkuaCIKKyNpbmNsdWRlICIuLi8uLi90cmVlLmgiCisjaW5jbHVkZSAiLi4v
Li4vaW5vZGUuaCIKKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IGlub2Rl
ICovCisjaW5jbHVkZSA8bGludXgvZGNhY2hlLmg+CS8qIGZvciBzdHJ1Y3QgZGVudHJ5ICovCisK
Ky8qIC0+ZXh0cmFjdF9rZXkoKSBtZXRob2Qgb2Ygc2ltcGxlIGRpcmVjdG9yeSBpdGVtIHBsdWdp
bi4gKi8KK2ludCBleHRyYWN0X2tleV9kZShjb25zdCBjb29yZF90ICogY29vcmQgLyogY29vcmQg
b2YgaXRlbSAqLyAsCisJCSAgIHJlaXNlcjRfa2V5ICoga2V5IC8qIHJlc3VsdGluZyBrZXkgKi8g
KQoreworCWRpcmVjdG9yeV9lbnRyeV9mb3JtYXQgKmRlbnQ7CisKKwlhc3NlcnQoIm5pa2l0YS0x
NDU4IiwgY29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTQ1OSIsIGtleSAhPSBOVUxM
KTsKKworCWRlbnQgPSAoZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdCAqKSBpdGVtX2JvZHlfYnlfY29v
cmQoY29vcmQpOworCWFzc2VydCgibmlraXRhLTExNTgiLCBpdGVtX2xlbmd0aF9ieV9jb29yZChj
b29yZCkgPj0gKGludClzaXplb2YgKmRlbnQpOworCXJldHVybiBleHRyYWN0X2tleV9mcm9tX2lk
KCZkZW50LT5pZCwga2V5KTsKK30KKworaW50Cit1cGRhdGVfa2V5X2RlKGNvbnN0IGNvb3JkX3Qg
KiBjb29yZCwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksCisJICAgICAgbG9ja19oYW5kbGUgKiBs
aCBVTlVTRURfQVJHKQoreworCWRpcmVjdG9yeV9lbnRyeV9mb3JtYXQgKmRlbnQ7CisJb2JqX2tl
eV9pZCBvYmpfaWQ7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTIzNDIiLCBjb29y
ZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMzQzIiwga2V5ICE9IE5VTEwpOworCisJZGVu
dCA9IChkaXJlY3RvcnlfZW50cnlfZm9ybWF0ICopIGl0ZW1fYm9keV9ieV9jb29yZChjb29yZCk7
CisJcmVzdWx0ID0gYnVpbGRfb2JqX2tleV9pZChrZXksICZvYmpfaWQpOworCWlmIChyZXN1bHQg
PT0gMCkgeworCQlkZW50LT5pZCA9IG9ial9pZDsKKwkJem5vZGVfbWFrZV9kaXJ0eShjb29yZC0+
bm9kZSk7CisJfQorCXJldHVybiAwOworfQorCitjaGFyICpleHRyYWN0X2RlbnRfbmFtZShjb25z
dCBjb29yZF90ICogY29vcmQsIGRpcmVjdG9yeV9lbnRyeV9mb3JtYXQgKiBkZW50LAorCQkJY2hh
ciAqYnVmKQoreworCXJlaXNlcjRfa2V5IGtleTsKKworCXVuaXRfa2V5X2J5X2Nvb3JkKGNvb3Jk
LCAma2V5KTsKKwlpZiAoZ2V0X2tleV90eXBlKCZrZXkpICE9IEtFWV9GSUxFX05BTUVfTUlOT1Ip
CisJCXJlaXNlcjRfcHJpbnRfYWRkcmVzcygib29wcyIsIHpub2RlX2dldF9ibG9jayhjb29yZC0+
bm9kZSkpOworCWlmICghaXNfbG9uZ25hbWVfa2V5KCZrZXkpKSB7CisJCWlmIChpc19kb3Rfa2V5
KCZrZXkpKQorCQkJcmV0dXJuIChjaGFyICopIi4iOworCQllbHNlCisJCQlyZXR1cm4gZXh0cmFj
dF9uYW1lX2Zyb21fa2V5KCZrZXksIGJ1Zik7CisJfSBlbHNlCisJCXJldHVybiAoY2hhciAqKWRl
bnQtPm5hbWU7Cit9CisKKy8qIC0+ZXh0cmFjdF9uYW1lKCkgbWV0aG9kIG9mIHNpbXBsZSBkaXJl
Y3RvcnkgaXRlbSBwbHVnaW4uICovCitjaGFyICpleHRyYWN0X25hbWVfZGUoY29uc3QgY29vcmRf
dCAqIGNvb3JkIC8qIGNvb3JkIG9mIGl0ZW0gKi8gLCBjaGFyICpidWYpCit7CisJZGlyZWN0b3J5
X2VudHJ5X2Zvcm1hdCAqZGVudDsKKworCWFzc2VydCgibmlraXRhLTE0NjAiLCBjb29yZCAhPSBO
VUxMKTsKKworCWRlbnQgPSAoZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdCAqKSBpdGVtX2JvZHlfYnlf
Y29vcmQoY29vcmQpOworCXJldHVybiBleHRyYWN0X2RlbnRfbmFtZShjb29yZCwgZGVudCwgYnVm
KTsKK30KKworLyogLT5leHRyYWN0X2ZpbGVfdHlwZSgpIG1ldGhvZCBvZiBzaW1wbGUgZGlyZWN0
b3J5IGl0ZW0gcGx1Z2luLiAqLwordW5zaWduZWQgZXh0cmFjdF9maWxlX3R5cGVfZGUoY29uc3Qg
Y29vcmRfdCAqIGNvb3JkIFVOVVNFRF9BUkcJLyogY29vcmQgb2YKKwkJCQkJCQkJICogaXRlbSAq
LyApCit7CisJYXNzZXJ0KCJuaWtpdGEtMTc2NCIsIGNvb3JkICE9IE5VTEwpOworCS8qIHdlIGRv
bid0IHN0b3JlIGZpbGUgdHlwZSBpbiB0aGUgZGlyZWN0b3J5IGVudHJ5IHlldC4KKworCSAgIEJ1
dCBzZWUgY29tbWVudHMgYXQga2Fzc2lnbi5oOm9ial9rZXlfaWQKKwkgKi8KKwlyZXR1cm4gRFRf
VU5LTk9XTjsKK30KKworaW50IGFkZF9lbnRyeV9kZShzdHJ1Y3QgaW5vZGUgKmRpciAvKiBkaXJl
Y3Rvcnkgb2YgaXRlbSAqLyAsCisJCSBjb29yZF90ICogY29vcmQgLyogY29vcmQgb2YgaXRlbSAq
LyAsCisJCSBsb2NrX2hhbmRsZSAqIGxoIC8qIGluc2VydGlvbiBsb2NrIGhhbmRsZSAqLyAsCisJ
CSBjb25zdCBzdHJ1Y3QgZGVudHJ5ICpkZSAvKiBuYW1lIHRvIGFkZCAqLyAsCisJCSByZWlzZXI0
X2Rpcl9lbnRyeV9kZXNjICogZW50cnkJLyogcGFyYW1ldGVycyBvZiBuZXcgZGlyZWN0b3J5CisJ
CQkJCQkgKiBlbnRyeSAqLyApCit7CisJcmVpc2VyNF9pdGVtX2RhdGEgZGF0YTsKKwlkaXJlY3Rv
cnlfZW50cnlfZm9ybWF0ICpkZW50OworCWludCByZXN1bHQ7CisJY29uc3QgY2hhciAqbmFtZTsK
KwlpbnQgbGVuOworCWludCBsb25nbmFtZTsKKworCW5hbWUgPSBkZS0+ZF9uYW1lLm5hbWU7CisJ
bGVuID0gZGUtPmRfbmFtZS5sZW47CisJYXNzZXJ0KCJuaWtpdGEtMTE2MyIsIHN0cmxlbihuYW1l
KSA9PSBsZW4pOworCisJbG9uZ25hbWUgPSBpc19sb25nbmFtZShuYW1lLCBsZW4pOworCisJZGF0
YS5sZW5ndGggPSBzaXplb2YgKmRlbnQ7CisJaWYgKGxvbmduYW1lKQorCQlkYXRhLmxlbmd0aCAr
PSBsZW4gKyAxOworCWRhdGEuZGF0YSA9IE5VTEw7CisJZGF0YS51c2VyID0gMDsKKwlkYXRhLmlw
bHVnID0gaXRlbV9wbHVnaW5fYnlfaWQoU0lNUExFX0RJUl9FTlRSWV9JRCk7CisKKwlpbm9kZV9h
ZGRfYnl0ZXMoZGlyLCBkYXRhLmxlbmd0aCk7CisKKwlyZXN1bHQgPSBpbnNlcnRfYnlfY29vcmQo
Y29vcmQsICZkYXRhLCAmZW50cnktPmtleSwgbGgsIDAgLypmbGFncyAqLyApOworCWlmIChyZXN1
bHQgIT0gMCkKKwkJcmV0dXJuIHJlc3VsdDsKKworCWRlbnQgPSAoZGlyZWN0b3J5X2VudHJ5X2Zv
cm1hdCAqKSBpdGVtX2JvZHlfYnlfY29vcmQoY29vcmQpOworCWJ1aWxkX2lub2RlX2tleV9pZChl
bnRyeS0+b2JqLCAmZGVudC0+aWQpOworCWlmIChsb25nbmFtZSkgeworCQltZW1jcHkoZGVudC0+
bmFtZSwgbmFtZSwgbGVuKTsKKwkJcHV0X3VuYWxpZ25lZCgwLCAmZGVudC0+bmFtZVtsZW5dKTsK
Kwl9CisJcmV0dXJuIDA7Cit9CisKK2ludCByZW1fZW50cnlfZGUoc3RydWN0IGlub2RlICpkaXIg
LyogZGlyZWN0b3J5IG9mIGl0ZW0gKi8gLAorCQkgY29uc3Qgc3RydWN0IHFzdHIgKm5hbWUgVU5V
U0VEX0FSRywKKwkJIGNvb3JkX3QgKiBjb29yZCAvKiBjb29yZCBvZiBpdGVtICovICwKKwkJIGxv
Y2tfaGFuZGxlICogbGggVU5VU0VEX0FSRwkvKiBsb2NrIGhhbmRsZSBmb3IKKwkJCQkJCSAqIHJl
bW92YWwgKi8gLAorCQkgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5IFVOVVNFRF9BUkcJ
LyogcGFyYW1ldGVycyBvZgorCQkJCQkJCQkgKiBkaXJlY3RvcnkgZW50cnkKKwkJCQkJCQkJICog
YmVpbmcgcmVtb3ZlZCAqLyApCit7CisJY29vcmRfdCBzaGFkb3c7CisJaW50IHJlc3VsdDsKKwlp
bnQgbGVuZ3RoOworCisJbGVuZ3RoID0gaXRlbV9sZW5ndGhfYnlfY29vcmQoY29vcmQpOworCWlm
IChpbm9kZV9nZXRfYnl0ZXMoZGlyKSA8IGxlbmd0aCkgeworCQl3YXJuaW5nKCJuaWtpdGEtMjYy
NyIsICJEaXIgaXMgYnJva2U6ICVsbHU6ICVsbHUiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZyln
ZXRfaW5vZGVfb2lkKGRpciksCisJCQlpbm9kZV9nZXRfYnl0ZXMoZGlyKSk7CisKKwkJcmV0dXJu
IFJFVEVSUigtRUlPKTsKKwl9CisKKwkvKiBjdXRfbm9kZSgpIGlzIHN1cHBvc2VkIHRvIHRha2Ug
cG9pbnRlcnMgdG8gX2RpZmZlcmVudF8KKwkgICBjb29yZHMsIGJlY2F1c2UgaXQgd2lsbCBtb2Rp
ZnkgdGhlbSB3aXRob3V0IHJlc3BlY3QgdG8KKwkgICBwb3NzaWJsZSBhbGlhc2luZy4gVG8gd29y
ayBhcm91bmQgdGhpcywgY3JlYXRlIHRlbXBvcmFyeSBjb3B5CisJICAgb2YgQGNvb3JkLgorCSAq
LworCWNvb3JkX2R1cCgmc2hhZG93LCBjb29yZCk7CisJcmVzdWx0ID0KKwkgICAga2lsbF9ub2Rl
X2NvbnRlbnQoY29vcmQsICZzaGFkb3csIE5VTEwsIE5VTEwsIE5VTEwsIE5VTEwsIE5VTEwsIDAp
OworCWlmIChyZXN1bHQgPT0gMCkgeworCQlpbm9kZV9zdWJfYnl0ZXMoZGlyLCBsZW5ndGgpOwor
CX0KKwlyZXR1cm4gcmVzdWx0OworfQorCitpbnQgbWF4X25hbWVfbGVuX2RlKGNvbnN0IHN0cnVj
dCBpbm9kZSAqZGlyKQoreworCXJldHVybiByZWlzZXI0X3RyZWVfYnlfaW5vZGUoZGlyKS0+bnBs
dWctPm1heF9pdGVtX3NpemUoKSAtCisJCXNpemVvZihkaXJlY3RvcnlfZW50cnlfZm9ybWF0KSAt
IDI7Cit9CisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBj
LWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2lj
LW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6
CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlz
ZXI0L3BsdWdpbi9pdGVtL3NkZS5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVt
L3NkZS5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3NkZS5o
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vaXRlbS9zZGUuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MDIyMjMxMCAr
MDEwMApAQCAtMCwwICsxLDY2IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBI
YW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisKKy8q
IERpcmVjdG9yeSBlbnRyeS4gKi8KKworI2lmICFkZWZpbmVkKCBfX0ZTX1JFSVNFUjRfUExVR0lO
X0RJUkVDVE9SWV9FTlRSWV9IX18gKQorI2RlZmluZSBfX0ZTX1JFSVNFUjRfUExVR0lOX0RJUkVD
VE9SWV9FTlRSWV9IX18KKworI2luY2x1ZGUgIi4uLy4uL2ZvcndhcmQuaCIKKyNpbmNsdWRlICIu
Li8uLi9kZm9ybWF0LmgiCisjaW5jbHVkZSAiLi4vLi4va2Fzc2lnbi5oIgorI2luY2x1ZGUgIi4u
Ly4uL2tleS5oIgorCisjaW5jbHVkZSA8bGludXgvZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9kY2Fj
aGUuaD4JLyogZm9yIHN0cnVjdCBkZW50cnkgKi8KKwordHlwZWRlZiBzdHJ1Y3QgZGlyZWN0b3J5
X2VudHJ5X2Zvcm1hdCB7CisJLyoga2V5IG9mIG9iamVjdCBzdGF0LWRhdGEuIEl0J3Mgbm90IG5l
Y2Vzc2FyeSB0byBzdG9yZSB3aG9sZQorCSAgIGtleSBoZXJlLCBiZWNhdXNlIGl0J3MgYWx3YXlz
IGtleSBvZiBzdGF0LWRhdGEsIHNvIG1pbm9yCisJICAgcGFja2luZyBsb2NhbGl0eSBhbmQgb2Zm
c2V0IGNhbiBiZSBvbWl0dGVkIGhlcmUuIEJ1dCB0aGlzCisJICAgcmVsaWVzIG9uIHBhcnRpY3Vs
YXIga2V5IGFsbG9jYXRpb24gc2NoZW1lIGZvciBzdGF0LWRhdGEsIHNvLAorCSAgIGZvciBleHRl
bnNpYmlsaXR5IHNha2UsIHdob2xlIGtleSBjYW4gYmUgc3RvcmVkIGhlcmUuCisKKwkgICBXZSBz
dG9yZSBrZXkgYXMgYXJyYXkgb2YgYnl0ZXMsIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCA4LWJ5dGUK
KwkgICBhbGlnbm1lbnQgb2YgZGlyIGVudHJpZXMuCisJICovCisJb2JqX2tleV9pZCBpZDsKKwkv
KiBmaWxlIG5hbWUuIE51bGwgdGVybWluYXRlZCBzdHJpbmcuICovCisJZDggbmFtZVswXTsKK30g
ZGlyZWN0b3J5X2VudHJ5X2Zvcm1hdDsKKwordm9pZCBwcmludF9kZShjb25zdCBjaGFyICpwcmVm
aXgsIGNvb3JkX3QgKiBjb29yZCk7CitpbnQgZXh0cmFjdF9rZXlfZGUoY29uc3QgY29vcmRfdCAq
IGNvb3JkLCByZWlzZXI0X2tleSAqIGtleSk7CitpbnQgdXBkYXRlX2tleV9kZShjb25zdCBjb29y
ZF90ICogY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkgIGxvY2tfaGFuZGxlICog
bGgpOworY2hhciAqZXh0cmFjdF9uYW1lX2RlKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY2hhciAq
YnVmKTsKK3Vuc2lnbmVkIGV4dHJhY3RfZmlsZV90eXBlX2RlKGNvbnN0IGNvb3JkX3QgKiBjb29y
ZCk7CitpbnQgYWRkX2VudHJ5X2RlKHN0cnVjdCBpbm9kZSAqZGlyLCBjb29yZF90ICogY29vcmQs
CisJCSBsb2NrX2hhbmRsZSAqIGxoLCBjb25zdCBzdHJ1Y3QgZGVudHJ5ICpuYW1lLAorCQkgcmVp
c2VyNF9kaXJfZW50cnlfZGVzYyAqIGVudHJ5KTsKK2ludCByZW1fZW50cnlfZGUoc3RydWN0IGlu
b2RlICpkaXIsIGNvbnN0IHN0cnVjdCBxc3RyICpuYW1lLCBjb29yZF90ICogY29vcmQsCisJCSBs
b2NrX2hhbmRsZSAqIGxoLCByZWlzZXI0X2Rpcl9lbnRyeV9kZXNjICogZW50cnkpOworaW50IG1h
eF9uYW1lX2xlbl9kZShjb25zdCBzdHJ1Y3QgaW5vZGUgKmRpcik7CisKK2ludCBkZV9yZW1fYW5k
X3NocmluayhzdHJ1Y3QgaW5vZGUgKmRpciwgY29vcmRfdCAqIGNvb3JkLCBpbnQgbGVuZ3RoKTsK
KworY2hhciAqZXh0cmFjdF9kZW50X25hbWUoY29uc3QgY29vcmRfdCAqIGNvb3JkLAorCQkJZGly
ZWN0b3J5X2VudHJ5X2Zvcm1hdCAqIGRlbnQsIGNoYXIgKmJ1Zik7CisKKyNpZiBSRUlTRVI0X0xB
UkdFX0tFWQorI2RlZmluZSBERV9OQU1FX0JVRl9MRU4gKDI0KQorI2Vsc2UKKyNkZWZpbmUgREVf
TkFNRV9CVUZfTEVOICgxNikKKyNlbmRpZgorCisvKiBfX0ZTX1JFSVNFUjRfUExVR0lOX0RJUkVD
VE9SWV9FTlRSWV9IX18gKi8KKyNlbmRpZgorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9j
YWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFt
ZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1j
b2x1bW46IDEyMAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgt
NS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9zdGF0aWNfc3RhdC5jIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3N0YXRpY19zdGF0LmMKLS0tIGxpbnV4LTUuNC4x
Ny5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vc3RhdGljX3N0YXQuYwkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2lu
L2l0ZW0vc3RhdGljX3N0YXQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MDIyMjMxMCArMDEwMApA
QCAtMCwwICsxLDExMTQgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMg
UmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworLyogc3Rh
dCBkYXRhIG1hbmlwdWxhdGlvbi4gKi8KKworI2luY2x1ZGUgIi4uLy4uL2ZvcndhcmQuaCIKKyNp
bmNsdWRlICIuLi8uLi9zdXBlci5oIgorI2luY2x1ZGUgIi4uLy4uL3Zmc19vcHMuaCIKKyNpbmNs
dWRlICIuLi8uLi9pbm9kZS5oIgorI2luY2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5jbHVkZSAi
Li4vLi4vZGZvcm1hdC5oIgorI2luY2x1ZGUgIi4uL29iamVjdC5oIgorI2luY2x1ZGUgIi4uL3Bs
dWdpbi5oIgorI2luY2x1ZGUgIi4uL3BsdWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICJzdGF0aWNf
c3RhdC5oIgorI2luY2x1ZGUgIml0ZW0uaCIKKworI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+Cisj
aW5jbHVkZSA8bGludXgvZnMuaD4KKworLyogc2VlIHN0YXRpY19zdGF0LmggZm9yIGV4cGxhbmF0
aW9uICovCisKKy8qIGhlbHBlciBmdW5jdGlvbiB1c2VkIHdoaWxlIHdlIGFyZSBkdW1waW5nL2xv
YWRpbmcgaW5vZGUvcGx1Z2luIHN0YXRlCisgICAgdG8vZnJvbSB0aGUgc3RhdC1kYXRhLiAqLwor
CitzdGF0aWMgdm9pZCBtb3ZlX29uKGludCAqbGVuZ3RoIC8qIHNwYWNlIHJlbWFpbmluZyBpbiBz
dGF0LWRhdGEgKi8gLAorCQkgICAgY2hhciAqKmFyZWEgLyogY3VycmVudCBjb29yZCBpbiBzdGF0
IGRhdGEgKi8gLAorCQkgICAgaW50IHNpemVfb2YgLyogaG93IG1hbnkgYnl0ZXMgdG8gbW92ZSBm
b3J3YXJkICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS02MTUiLCBsZW5ndGggIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtNjE2IiwgYXJlYSAhPSBOVUxMKTsKKworCSpsZW5ndGggLT0gc2l6ZV9v
ZjsKKwkqYXJlYSArPSBzaXplX29mOworCisJYXNzZXJ0KCJuaWtpdGEtNjE3IiwgKmxlbmd0aCA+
PSAwKTsKK30KKworLyogaGVscGVyIGZ1bmN0aW9uIHVzZWQgd2hpbGUgbG9hZGluZyBpbm9kZS9w
bHVnaW4gc3RhdGUgZnJvbSBzdGF0LWRhdGEuCisgICAgQ29tcGxhaW4gaWYgdGhlcmUgaXMgbGVz
cyBzcGFjZSBpbiBzdGF0LWRhdGEgdGhhbiB3YXMgZXhwZWN0ZWQuCisgICAgQ2FuIG9ubHkgaGFw
cGVuIG9uIGRpc2sgY29ycnVwdGlvbi4gKi8KK3N0YXRpYyBpbnQgbm90X2Vub3VnaF9zcGFjZShz
dHJ1Y3QgaW5vZGUgKmlub2RlIC8qIG9iamVjdCBiZWluZyBwcm9jZXNzZWQgKi8gLAorCQkJICAg
IGNvbnN0IGNoYXIgKndoZXJlIC8qIGVycm9yIG1lc3NhZ2UgKi8gKQoreworCWFzc2VydCgibmlr
aXRhLTYxOCIsIGlub2RlICE9IE5VTEwpOworCisJd2FybmluZygibmlraXRhLTYxOSIsICJOb3Qg
ZW5vdWdoIHNwYWNlIGluICVsbHUgd2hpbGUgbG9hZGluZyAlcyIsCisJCSh1bnNpZ25lZCBsb25n
IGxvbmcpZ2V0X2lub2RlX29pZChpbm9kZSksIHdoZXJlKTsKKworCXJldHVybiBSRVRFUlIoLUVJ
TlZBTCk7Cit9CisKKy8qIGhlbHBlciBmdW5jdGlvbiB1c2VkIHdoaWxlIGxvYWRpbmcgaW5vZGUv
cGx1Z2luIHN0YXRlIGZyb20KKyAgICBzdGF0LWRhdGEuIENhbGwgaXQgaWYgaW52YWxpZCBwbHVn
aW4gaWQgd2FzIGZvdW5kLiAqLworc3RhdGljIGludCB1bmtub3duX3BsdWdpbihyZWlzZXI0X3Bs
dWdpbl9pZCBpZCAvKiBpbnZhbGlkIGlkICovICwKKwkJCSAgc3RydWN0IGlub2RlICppbm9kZSAv
KiBvYmplY3QgYmVpbmcgcHJvY2Vzc2VkICovICkKK3sKKwl3YXJuaW5nKCJuaWtpdGEtNjIwIiwg
IlVua25vd24gcGx1Z2luICVpIGluICVsbHUiLAorCQlpZCwgKHVuc2lnbmVkIGxvbmcgbG9uZyln
ZXRfaW5vZGVfb2lkKGlub2RlKSk7CisKKwlyZXR1cm4gUkVURVJSKC1FSU5WQUwpOworfQorCisv
KiB0aGlzIGlzIGluc3RhbGxlZCBhcyAtPmluaXRfaW5vZGUoKSBtZXRob2Qgb2YKKyAgICBpdGVt
X3BsdWdpbnNbIFNUQVRJQ19TVEFUX0RBVEFfSVQgXSAoZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9p
dGVtLmMpLgorICAgIENvcGllcyBkYXRhIGZyb20gb24tZGlzayBzdGF0LWRhdGEgZm9ybWF0IGlu
dG8gaW5vZGUuCisgICAgSGFuZGxlcyBzdGF0LWRhdGEgZXh0ZW5zaW9ucy4gKi8KKy8qIHdhcyBz
ZF9sb2FkICovCitpbnQgaW5pdF9pbm9kZV9zdGF0aWNfc2Qoc3RydWN0IGlub2RlICppbm9kZSAv
KiBvYmplY3QgYmVpbmcgcHJvY2Vzc2VkICovICwKKwkJCSBjaGFyICpzZCAvKiBzdGF0LWRhdGEg
Ym9keSAqLyAsCisJCQkgaW50IGxlbiAvKiBsZW5ndGggb2Ygc3RhdC1kYXRhICovICkKK3sKKwlp
bnQgcmVzdWx0OworCWludCBiaXQ7CisJaW50IGNodW5rOworCV9fdTE2IG1hc2s7CisJX191NjQg
YmlnbWFzazsKKwlyZWlzZXI0X3N0YXRfZGF0YV9iYXNlICpzZF9iYXNlOworCXJlaXNlcjRfaW5v
ZGUgKnN0YXRlOworCisJYXNzZXJ0KCJuaWtpdGEtNjI1IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtNjI2Iiwgc2QgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSAwOworCXNkX2Jhc2Ug
PSAocmVpc2VyNF9zdGF0X2RhdGFfYmFzZSAqKSBzZDsKKwlzdGF0ZSA9IHJlaXNlcjRfaW5vZGVf
ZGF0YShpbm9kZSk7CisJbWFzayA9IGxlMTZfdG9fY3B1KGdldF91bmFsaWduZWQoJnNkX2Jhc2Ut
PmV4dG1hc2spKTsKKwliaWdtYXNrID0gbWFzazsKKwlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlu
b2RlLCBSRUlTRVI0X1NETEVOX0tOT1dOKTsKKworCW1vdmVfb24oJmxlbiwgJnNkLCBzaXplb2Yg
KnNkX2Jhc2UpOworCWZvciAoYml0ID0gMCwgY2h1bmsgPSAwOworCSAgICAgbWFzayAhPSAwIHx8
IGJpdCA8PSBMQVNUX0lNUE9SVEFOVF9TRF9FWFRFTlNJT047CisJICAgICArK2JpdCwgbWFzayA+
Pj0gMSkgeworCQlpZiAoKChiaXQgKyAxKSAlIDE2KSAhPSAwKSB7CisJCQkvKiBoYW5kbGUgZXh0
ZW5zaW9uICovCisJCQlzZF9leHRfcGx1Z2luICpzZHBsdWc7CisKKwkJCWlmIChiaXQgPj0gTEFT
VF9TRF9FWFRFTlNJT04pIHsKKwkJCQl3YXJuaW5nKCJ2cGYtMTkwNCIsCisJCQkJCSJObyBzdWNo
IGV4dGVuc2lvbiAlaSBpbiBpbm9kZSAlbGx1IiwKKwkJCQkJYml0LAorCQkJCQkodW5zaWduZWQg
bG9uZyBsb25nKQorCQkJCQlnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisKKwkJCQlyZXN1bHQgPSBS
RVRFUlIoLUVJTlZBTCk7CisJCQkJYnJlYWs7CisJCQl9CisKKwkJCXNkcGx1ZyA9IHNkX2V4dF9w
bHVnaW5fYnlfaWQoYml0KTsKKwkJCWlmIChzZHBsdWcgPT0gTlVMTCkgeworCQkJCXdhcm5pbmco
Im5pa2l0YS02MjciLAorCQkJCQkiTm8gc3VjaCBleHRlbnNpb24gJWkgaW4gaW5vZGUgJWxsdSIs
CisJCQkJCWJpdCwKKwkJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKKwkJCQkJZ2V0X2lub2RlX29p
ZChpbm9kZSkpOworCisJCQkJcmVzdWx0ID0gUkVURVJSKC1FSU5WQUwpOworCQkJCWJyZWFrOwor
CQkJfQorCQkJaWYgKG1hc2sgJiAxKSB7CisJCQkJYXNzZXJ0KCJuaWtpdGEtNjI4Iiwgc2RwbHVn
LT5wcmVzZW50KTsKKwkJCQkvKiBhbGlnbm1lbnQgaXMgbm90IHN1cHBvcnRlZCBpbiBub2RlIGxh
eW91dAorCQkJCSAgIHBsdWdpbiB5ZXQuCisJCQkJICAgcmVzdWx0ID0gYWxpZ24oIGlub2RlLCAm
bGVuLCAmc2QsCisJCQkJICAgc2RwbHVnIC0+IGFsaWdubWVudCApOworCQkJCSAgIGlmKCByZXN1
bHQgIT0gMCApCisJCQkJICAgcmV0dXJuIHJlc3VsdDsgKi8KKwkJCQlyZXN1bHQgPSBzZHBsdWct
PnByZXNlbnQoaW5vZGUsICZzZCwgJmxlbik7CisJCQl9IGVsc2UgaWYgKHNkcGx1Zy0+YWJzZW50
ICE9IE5VTEwpCisJCQkJcmVzdWx0ID0gc2RwbHVnLT5hYnNlbnQoaW5vZGUpOworCQkJaWYgKHJl
c3VsdCkKKwkJCQlicmVhazsKKwkJCS8qIGVsc2UsIHdlIGFyZSBsb29raW5nIGF0IHRoZSBsYXN0
IGJpdCBpbiAxNi1iaXQKKwkJCSAgIHBvcnRpb24gb2YgYml0bWFzayAqLworCQl9IGVsc2UgaWYg
KG1hc2sgJiAxKSB7CisJCQkvKiBuZXh0IHBvcnRpb24gb2YgYml0bWFzayAqLworCQkJaWYgKGxl
biA8IChpbnQpc2l6ZW9mKGQxNikpIHsKKwkJCQl3YXJuaW5nKCJuaWtpdGEtNjI5IiwKKwkJCQkJ
Ik5vIHNwYWNlIGZvciBiaXRtYXAgaW4gaW5vZGUgJWxsdSIsCisJCQkJCSh1bnNpZ25lZCBsb25n
IGxvbmcpCisJCQkJCWdldF9pbm9kZV9vaWQoaW5vZGUpKTsKKworCQkJCXJlc3VsdCA9IFJFVEVS
UigtRUlOVkFMKTsKKwkJCQlicmVhazsKKwkJCX0KKwkJCW1hc2sgPSBsZTE2X3RvX2NwdShnZXRf
dW5hbGlnbmVkKChkMTYgKilzZCkpOworCQkJYmlnbWFzayA8PD0gMTY7CisJCQliaWdtYXNrIHw9
IG1hc2s7CisJCQltb3ZlX29uKCZsZW4sICZzZCwgc2l6ZW9mKGQxNikpOworCQkJKytjaHVuazsK
KwkJCWlmIChjaHVuayA9PSAzKSB7CisJCQkJaWYgKCEobWFzayAmIDB4ODAwMCkpIHsKKwkJCQkJ
LyogY2xlYXIgbGFzdCBiaXQgKi8KKwkJCQkJbWFzayAmPSB+MHg4MDAwOworCQkJCQljb250aW51
ZTsKKwkJCQl9CisJCQkJLyogdG9vIG11Y2ggKi8KKwkJCQl3YXJuaW5nKCJuaWtpdGEtNjMwIiwK
KwkJCQkJIlRvbyBtYW55IGV4dGVuc2lvbnMgaW4gJWxsdSIsCisJCQkJCSh1bnNpZ25lZCBsb25n
IGxvbmcpCisJCQkJCWdldF9pbm9kZV9vaWQoaW5vZGUpKTsKKworCQkJCXJlc3VsdCA9IFJFVEVS
UigtRUlOVkFMKTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfSBlbHNlCisJCQkvKiBiaXRtYXNrIGV4
aGF1c3RlZCAqLworCQkJYnJlYWs7CisJfQorCXN0YXRlLT5leHRtYXNrID0gYmlnbWFzazsKKwkv
KiBjb21tb24gaW5pdGlhbGlzYXRpb25zICovCisJaWYgKGxlbiAtIChiaXQgLyAxNiAqIHNpemVv
ZihkMTYpKSA+IDApIHsKKwkJLyogYWxpZ25tZW50IGluIHNhdmVfbGVuX3N0YXRpY19zZCgpIGlz
IHRha2VuIGludG8gYWNjb3VudAorCQkgICAtZWR3YXJkICovCisJCXdhcm5pbmcoIm5pa2l0YS02
MzEiLCAidW51c2VkIHNwYWNlIGluIGlub2RlICVsbHUiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9u
ZylnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisJfQorCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyog
ZXN0aW1hdGVzIHNpemUgb2Ygc3RhdC1kYXRhIHJlcXVpcmVkIHRvIHN0b3JlIGlub2RlLgorICAg
IEluc3RhbGxlZCBhcyAtPnNhdmVfbGVuKCkgbWV0aG9kIG9mCisgICAgaXRlbV9wbHVnaW5zWyBT
VEFUSUNfU1RBVF9EQVRBX0lUIF0gKGZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vaXRlbS5jKS4gKi8K
Ky8qIHdhcyBzZF9sZW4gKi8KK2ludCBzYXZlX2xlbl9zdGF0aWNfc2Qoc3RydWN0IGlub2RlICpp
bm9kZSAvKiBvYmplY3QgYmVpbmcgcHJvY2Vzc2VkICovICkKK3sKKwl1bnNpZ25lZCBpbnQgcmVz
dWx0OworCV9fdTY0IG1hc2s7CisJaW50IGJpdDsKKworCWFzc2VydCgibmlraXRhLTYzMiIsIGlu
b2RlICE9IE5VTEwpOworCisJcmVzdWx0ID0gc2l6ZW9mKHJlaXNlcjRfc3RhdF9kYXRhX2Jhc2Up
OworCW1hc2sgPSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpLT5leHRtYXNrOworCWZvciAoYml0
ID0gMDsgbWFzayAhPSAwOyArK2JpdCwgbWFzayA+Pj0gMSkgeworCQlpZiAobWFzayAmIDEpIHsK
KwkJCXNkX2V4dF9wbHVnaW4gKnNkcGx1ZzsKKworCQkJc2RwbHVnID0gc2RfZXh0X3BsdWdpbl9i
eV9pZChiaXQpOworCQkJYXNzZXJ0KCJuaWtpdGEtNjMzIiwgc2RwbHVnICE9IE5VTEwpOworCQkJ
LyoKKwkJCSAgbm8gYWxpZ21lbnQgc3VwcG9ydAorCQkJICByZXN1bHQgKz0KKwkJCSAgcmVpc2Vy
NF9yb3VuZF91cChyZXN1bHQsIHNkcGx1ZyAtPiBhbGlnbm1lbnQpIC0KKwkJCSAgcmVzdWx0Owor
CQkJKi8KKwkJCXJlc3VsdCArPSBzZHBsdWctPnNhdmVfbGVuKGlub2RlKTsKKwkJfQorCX0KKwly
ZXN1bHQgKz0gYml0IC8gMTYgKiBzaXplb2YoZDE2KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisv
KiBzYXZlcyBpbm9kZSBpbnRvIHN0YXQtZGF0YS4KKyAgICBJbnN0YWxsZWQgYXMgLT5zYXZlKCkg
bWV0aG9kIG9mCisgICAgaXRlbV9wbHVnaW5zWyBTVEFUSUNfU1RBVF9EQVRBX0lUIF0gKGZzL3Jl
aXNlcjQvcGx1Z2luL2l0ZW0vaXRlbS5jKS4gKi8KKy8qIHdhcyBzZF9zYXZlICovCitpbnQgc2F2
ZV9zdGF0aWNfc2Qoc3RydWN0IGlub2RlICppbm9kZSAvKiBvYmplY3QgYmVpbmcgcHJvY2Vzc2Vk
ICovICwKKwkJICAgY2hhciAqKmFyZWEgLyogd2hlcmUgdG8gc2F2ZSBzdGF0LWRhdGEgKi8gKQor
eworCWludCByZXN1bHQ7CisJX191NjQgZW1hc2s7CisJaW50IGJpdDsKKwl1bnNpZ25lZCBpbnQg
bGVuOworCXJlaXNlcjRfc3RhdF9kYXRhX2Jhc2UgKnNkX2Jhc2U7CisKKwlhc3NlcnQoIm5pa2l0
YS02MzQiLCBpbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02MzUiLCBhcmVhICE9IE5V
TEwpOworCisJcmVzdWx0ID0gMDsKKwllbWFzayA9IHJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSkt
PmV4dG1hc2s7CisJc2RfYmFzZSA9IChyZWlzZXI0X3N0YXRfZGF0YV9iYXNlICopICogYXJlYTsK
KwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTE2KChfX3UxNikoZW1hc2sgJiAweGZmZmYpKSwgJnNk
X2Jhc2UtPmV4dG1hc2spOworCS8qY3B1dG9kMTYoKHVuc2lnbmVkKShlbWFzayAmIDB4ZmZmZiks
ICZzZF9iYXNlLT5leHRtYXNrKTsqLworCisJKmFyZWEgKz0gc2l6ZW9mICpzZF9iYXNlOworCWxl
biA9IDB4ZmZmZmZmZmZ1OworCWZvciAoYml0ID0gMDsgZW1hc2sgIT0gMDsgKytiaXQsIGVtYXNr
ID4+PSAxKSB7CisJCWlmIChlbWFzayAmIDEpIHsKKwkJCWlmICgoYml0ICsgMSkgJSAxNiAhPSAw
KSB7CisJCQkJc2RfZXh0X3BsdWdpbiAqc2RwbHVnOworCQkJCXNkcGx1ZyA9IHNkX2V4dF9wbHVn
aW5fYnlfaWQoYml0KTsKKwkJCQlhc3NlcnQoIm5pa2l0YS02MzYiLCBzZHBsdWcgIT0gTlVMTCk7
CisJCQkJLyogbm8gYWxpZ25tZW50IHN1cHBvcnQgeWV0CisJCQkJICAgYWxpZ24oIGlub2RlLCAm
bGVuLCBhcmVhLAorCQkJCSAgIHNkcGx1ZyAtPiBhbGlnbm1lbnQgKTsgKi8KKwkJCQlyZXN1bHQg
PSBzZHBsdWctPnNhdmUoaW5vZGUsIGFyZWEpOworCQkJCWlmIChyZXN1bHQpCisJCQkJCWJyZWFr
OworCQkJfSBlbHNlIHsKKwkJCQlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTE2KChfX3UxNikoZW1h
c2sgJiAweGZmZmYpKSwKKwkJCQkJICAgICAgKGQxNiAqKSgqYXJlYSkpOworCQkJCS8qY3B1dG9k
MTYoKHVuc2lnbmVkKShlbWFzayAmIDB4ZmZmZiksCisJCQkJICAoZDE2ICopICogYXJlYSk7Ki8K
KwkJCQkqYXJlYSArPSBzaXplb2YoZDE2KTsKKwkJCX0KKwkJfQorCX0KKwlyZXR1cm4gcmVzdWx0
OworfQorCisvKiBzdGF0LWRhdGEgZXh0ZW5zaW9uIGhhbmRsaW5nIGZ1bmN0aW9ucy4gKi8KKwor
c3RhdGljIGludCBwcmVzZW50X2x3X3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0IGJl
aW5nIHByb2Nlc3NlZCAqLyAsCisJCQkgY2hhciAqKmFyZWEgLyogcG9zaXRpb24gaW4gc3RhdC1k
YXRhICovICwKKwkJCSBpbnQgKmxlbiAvKiByZW1haW5pbmcgbGVuZ3RoICovICkKK3sKKwlpZiAo
KmxlbiA+PSAoaW50KXNpemVvZihyZWlzZXI0X2xpZ2h0X3dlaWdodF9zdGF0KSkgeworCQlyZWlz
ZXI0X2xpZ2h0X3dlaWdodF9zdGF0ICpzZF9sdzsKKworCQlzZF9sdyA9IChyZWlzZXI0X2xpZ2h0
X3dlaWdodF9zdGF0ICopICogYXJlYTsKKworCQlpbm9kZS0+aV9tb2RlID0gbGUxNl90b19jcHUo
Z2V0X3VuYWxpZ25lZCgmc2RfbHctPm1vZGUpKTsKKwkJc2V0X25saW5rKGlub2RlLCBsZTMyX3Rv
X2NwdShnZXRfdW5hbGlnbmVkKCZzZF9sdy0+bmxpbmspKSk7CisJCWlub2RlLT5pX3NpemUgPSBs
ZTY0X3RvX2NwdShnZXRfdW5hbGlnbmVkKCZzZF9sdy0+c2l6ZSkpOworCQlpZiAoKGlub2RlLT5p
X21vZGUgJiBTX0lGTVQpID09IChTX0lGUkVHIHwgU19JRklGTykpIHsKKwkJCWlub2RlLT5pX21v
ZGUgJj0gflNfSUZJRk87CisJCQl3YXJuaW5nKCIiLCAicGFydGlhbGx5IGNvbnZlcnRlZCBmaWxl
IGlzIGVuY291bnRlcmVkIik7CisJCQlyZWlzZXI0X2lub2RlX3NldF9mbGFnKGlub2RlLCBSRUlT
RVI0X1BBUlRfTUlYRUQpOworCQl9CisJCW1vdmVfb24obGVuLCBhcmVhLCBzaXplb2YgKnNkX2x3
KTsKKwkJcmV0dXJuIDA7CisJfSBlbHNlCisJCXJldHVybiBub3RfZW5vdWdoX3NwYWNlKGlub2Rl
LCAibHcgc2QiKTsKK30KKworc3RhdGljIGludCBzYXZlX2xlbl9sd19zZChzdHJ1Y3QgaW5vZGUg
Kmlub2RlIFVOVVNFRF9BUkcJLyogb2JqZWN0IGJlaW5nCisJCQkJCQkJCSAqIHByb2Nlc3NlZCAq
LyApCit7CisJcmV0dXJuIHNpemVvZihyZWlzZXI0X2xpZ2h0X3dlaWdodF9zdGF0KTsKK30KKwor
c3RhdGljIGludCBzYXZlX2x3X3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0IGJlaW5n
IHByb2Nlc3NlZCAqLyAsCisJCSAgICAgIGNoYXIgKiphcmVhIC8qIHBvc2l0aW9uIGluIHN0YXQt
ZGF0YSAqLyApCit7CisJcmVpc2VyNF9saWdodF93ZWlnaHRfc3RhdCAqc2Q7CisJbW9kZV90IGRl
bHRhOworCisJYXNzZXJ0KCJuaWtpdGEtMjcwNSIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTI3MDYiLCBhcmVhICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI3MDciLCAqYXJl
YSAhPSBOVUxMKTsKKworCXNkID0gKHJlaXNlcjRfbGlnaHRfd2VpZ2h0X3N0YXQgKikgKiBhcmVh
OworCisJZGVsdGEgPSAocmVpc2VyNF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwKKwkJCQkJUkVJU0VS
NF9QQVJUX01JWEVEKSA/IFNfSUZJRk8gOiAwKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTE2
KGlub2RlLT5pX21vZGUgfCBkZWx0YSksICZzZC0+bW9kZSk7CisJcHV0X3VuYWxpZ25lZChjcHVf
dG9fbGUzMihpbm9kZS0+aV9ubGluayksICZzZC0+bmxpbmspOworCXB1dF91bmFsaWduZWQoY3B1
X3RvX2xlNjQoKF9fdTY0KSBpbm9kZS0+aV9zaXplKSwgJnNkLT5zaXplKTsKKwkqYXJlYSArPSBz
aXplb2YgKnNkOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IHByZXNlbnRfdW5peF9zZChz
dHJ1Y3QgaW5vZGUgKmlub2RlIC8qIG9iamVjdCBiZWluZyBwcm9jZXNzZWQgKi8gLAorCQkJICAg
Y2hhciAqKmFyZWEgLyogcG9zaXRpb24gaW4gc3RhdC1kYXRhICovICwKKwkJCSAgIGludCAqbGVu
IC8qIHJlbWFpbmluZyBsZW5ndGggKi8gKQoreworCWFzc2VydCgibmlraXRhLTYzNyIsIGlub2Rl
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTYzOCIsIGFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtNjM5IiwgKmFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjQwIiwgbGVu
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTY0MSIsICpsZW4gPiAwKTsKKworCWlmICgqbGVu
ID49IChpbnQpc2l6ZW9mKHJlaXNlcjRfdW5peF9zdGF0KSkgeworCQlyZWlzZXI0X3VuaXhfc3Rh
dCAqc2Q7CisKKwkJc2QgPSAocmVpc2VyNF91bml4X3N0YXQgKikgKiBhcmVhOworCisJCWlfdWlk
X3dyaXRlKGlub2RlLCBsZTMyX3RvX2NwdShnZXRfdW5hbGlnbmVkKCZzZC0+dWlkKSkpOworCQlp
X2dpZF93cml0ZShpbm9kZSwgbGUzMl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2QtPmdpZCkpKTsK
KwkJaW5vZGUtPmlfYXRpbWUudHZfc2VjID0gbGUzMl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2Qt
PmF0aW1lKSk7CisJCWlub2RlLT5pX210aW1lLnR2X3NlYyA9IGxlMzJfdG9fY3B1KGdldF91bmFs
aWduZWQoJnNkLT5tdGltZSkpOworCQlpbm9kZS0+aV9jdGltZS50dl9zZWMgPSBsZTMyX3RvX2Nw
dShnZXRfdW5hbGlnbmVkKCZzZC0+Y3RpbWUpKTsKKwkJaWYgKFNfSVNCTEsoaW5vZGUtPmlfbW9k
ZSkgfHwgU19JU0NIUihpbm9kZS0+aV9tb2RlKSkKKwkJCWlub2RlLT5pX3JkZXYgPSBsZTY0X3Rv
X2NwdShnZXRfdW5hbGlnbmVkKCZzZC0+dS5yZGV2KSk7CisJCWVsc2UKKwkJCWlub2RlX3NldF9i
eXRlcyhpbm9kZSwgKGxvZmZfdCkgbGU2NF90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2QtPnUuYnl0
ZXMpKSk7CisJCW1vdmVfb24obGVuLCBhcmVhLCBzaXplb2YgKnNkKTsKKwkJcmV0dXJuIDA7CisJ
fSBlbHNlCisJCXJldHVybiBub3RfZW5vdWdoX3NwYWNlKGlub2RlLCAidW5peCBzZCIpOworfQor
CitzdGF0aWMgaW50IGFic2VudF91bml4X3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0
IGJlaW5nIHByb2Nlc3NlZCAqLyApCit7CisJaV91aWRfd3JpdGUoaW5vZGUsIGdldF9zdXBlcl9w
cml2YXRlKGlub2RlLT5pX3NiKS0+ZGVmYXVsdF91aWQpOworCWlfZ2lkX3dyaXRlKGlub2RlLCBn
ZXRfc3VwZXJfcHJpdmF0ZShpbm9kZS0+aV9zYiktPmRlZmF1bHRfZ2lkKTsKKwlpbm9kZS0+aV9h
dGltZSA9IGlub2RlLT5pX210aW1lID0gaW5vZGUtPmlfY3RpbWUgPSBjdXJyZW50X3RpbWUoaW5v
ZGUpOworCWlub2RlX3NldF9ieXRlcyhpbm9kZSwgaW5vZGUtPmlfc2l6ZSk7CisJLyogbWFyayBp
bm9kZSBhcyBsaWdodHdlaWdodCwgc28gdGhhdCBjYWxsZXIgKGxvb2t1cF9jb21tb24pIHdpbGwK
KwkgICBjb21wbGV0ZSBpbml0aWFsaXNhdGlvbiBieSBjb3B5aW5nIFt1Z11pZCBmcm9tIGEgcGFy
ZW50LiAqLworCXJlaXNlcjRfaW5vZGVfc2V0X2ZsYWcoaW5vZGUsIFJFSVNFUjRfTElHSFRfV0VJ
R0hUKTsKKwlyZXR1cm4gMDsKK30KKworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNCkg
Ki8KK3N0YXRpYyBpbnQgc2F2ZV9sZW5fdW5peF9zZChzdHJ1Y3QgaW5vZGUgKmlub2RlIFVOVVNF
RF9BUkcJLyogb2JqZWN0IGJlaW5nCisJCQkJCQkJCSAqIHByb2Nlc3NlZCAqLyApCit7CisJcmV0
dXJuIHNpemVvZihyZWlzZXI0X3VuaXhfc3RhdCk7Cit9CisKK3N0YXRpYyBpbnQgc2F2ZV91bml4
X3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAqLyAsCisJ
CQljaGFyICoqYXJlYSAvKiBwb3NpdGlvbiBpbiBzdGF0LWRhdGEgKi8gKQoreworCXJlaXNlcjRf
dW5peF9zdGF0ICpzZDsKKworCWFzc2VydCgibmlraXRhLTY0MiIsIGlub2RlICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTY0MyIsIGFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjQ0
IiwgKmFyZWEgIT0gTlVMTCk7CisKKwlzZCA9IChyZWlzZXI0X3VuaXhfc3RhdCAqKSAqIGFyZWE7
CisJcHV0X3VuYWxpZ25lZChjcHVfdG9fbGUzMihpX3VpZF9yZWFkKGlub2RlKSksICZzZC0+dWlk
KTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTMyKGlfZ2lkX3JlYWQoaW5vZGUpKSwgJnNkLT5n
aWQpOworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlMzIoKF9fdTMyKSBpbm9kZS0+aV9hdGltZS50
dl9zZWMpLCAmc2QtPmF0aW1lKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTMyKChfX3UzMikg
aW5vZGUtPmlfY3RpbWUudHZfc2VjKSwgJnNkLT5jdGltZSk7CisJcHV0X3VuYWxpZ25lZChjcHVf
dG9fbGUzMigoX191MzIpIGlub2RlLT5pX210aW1lLnR2X3NlYyksICZzZC0+bXRpbWUpOworCWlm
IChTX0lTQkxLKGlub2RlLT5pX21vZGUpIHx8IFNfSVNDSFIoaW5vZGUtPmlfbW9kZSkpCisJCXB1
dF91bmFsaWduZWQoY3B1X3RvX2xlNjQoaW5vZGUtPmlfcmRldiksICZzZC0+dS5yZGV2KTsKKwll
bHNlCisJCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlNjQoKF9fdTY0KSBpbm9kZV9nZXRfYnl0ZXMo
aW5vZGUpKSwgJnNkLT51LmJ5dGVzKTsKKwkqYXJlYSArPSBzaXplb2YgKnNkOworCXJldHVybiAw
OworfQorCitzdGF0aWMgaW50CitwcmVzZW50X2xhcmdlX3RpbWVzX3NkKHN0cnVjdCBpbm9kZSAq
aW5vZGUgLyogb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAqLyAsCisJCSAgICAgICBjaGFyICoqYXJl
YSAvKiBwb3NpdGlvbiBpbiBzdGF0LWRhdGEgKi8gLAorCQkgICAgICAgaW50ICpsZW4gLyogcmVt
YWluaW5nIGxlbmd0aCAqLyApCit7CisJaWYgKCpsZW4gPj0gKGludClzaXplb2YocmVpc2VyNF9s
YXJnZV90aW1lc19zdGF0KSkgeworCQlyZWlzZXI0X2xhcmdlX3RpbWVzX3N0YXQgKnNkX2x0Owor
CisJCXNkX2x0ID0gKHJlaXNlcjRfbGFyZ2VfdGltZXNfc3RhdCAqKSAqIGFyZWE7CisKKwkJaW5v
ZGUtPmlfYXRpbWUudHZfbnNlYyA9IGxlMzJfdG9fY3B1KGdldF91bmFsaWduZWQoJnNkX2x0LT5h
dGltZSkpOworCQlpbm9kZS0+aV9tdGltZS50dl9uc2VjID0gbGUzMl90b19jcHUoZ2V0X3VuYWxp
Z25lZCgmc2RfbHQtPm10aW1lKSk7CisJCWlub2RlLT5pX2N0aW1lLnR2X25zZWMgPSBsZTMyX3Rv
X2NwdShnZXRfdW5hbGlnbmVkKCZzZF9sdC0+Y3RpbWUpKTsKKworCQltb3ZlX29uKGxlbiwgYXJl
YSwgc2l6ZW9mICpzZF9sdCk7CisJCXJldHVybiAwOworCX0gZWxzZQorCQlyZXR1cm4gbm90X2Vu
b3VnaF9zcGFjZShpbm9kZSwgImxhcmdlIHRpbWVzIHNkIik7Cit9CisKK3N0YXRpYyBpbnQKK3Nh
dmVfbGVuX2xhcmdlX3RpbWVzX3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgVU5VU0VEX0FSRworCQkJ
Lyogb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAqLyApCit7CisJcmV0dXJuIHNpemVvZihyZWlzZXI0
X2xhcmdlX3RpbWVzX3N0YXQpOworfQorCitzdGF0aWMgaW50CitzYXZlX2xhcmdlX3RpbWVzX3Nk
KHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAqLyAsCisJCSAg
ICBjaGFyICoqYXJlYSAvKiBwb3NpdGlvbiBpbiBzdGF0LWRhdGEgKi8gKQoreworCXJlaXNlcjRf
bGFyZ2VfdGltZXNfc3RhdCAqc2Q7CisKKwlhc3NlcnQoIm5pa2l0YS0yODE3IiwgaW5vZGUgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjgxOCIsIGFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtMjgxOSIsICphcmVhICE9IE5VTEwpOworCisJc2QgPSAocmVpc2VyNF9sYXJnZV90aW1l
c19zdGF0ICopICogYXJlYTsKKworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlMzIoKF9fdTMyKSBp
bm9kZS0+aV9hdGltZS50dl9uc2VjKSwgJnNkLT5hdGltZSk7CisJcHV0X3VuYWxpZ25lZChjcHVf
dG9fbGUzMigoX191MzIpIGlub2RlLT5pX2N0aW1lLnR2X25zZWMpLCAmc2QtPmN0aW1lKTsKKwlw
dXRfdW5hbGlnbmVkKGNwdV90b19sZTMyKChfX3UzMikgaW5vZGUtPmlfbXRpbWUudHZfbnNlYyks
ICZzZC0+bXRpbWUpOworCisJKmFyZWEgKz0gc2l6ZW9mICpzZDsKKwlyZXR1cm4gMDsKK30KKwor
Lyogc3ltbGluayBzdGF0IGRhdGEgZXh0ZW5zaW9uICovCisKKy8qIGFsbG9jYXRlIG1lbW9yeSBm
b3Igc3ltbGluayB0YXJnZXQgYW5kIGF0dGFjaCBpdCB0byBpbm9kZS0+aV9wcml2YXRlICovCitz
dGF0aWMgaW50CitzeW1saW5rX3RhcmdldF90b19pbm9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBj
b25zdCBjaGFyICp0YXJnZXQsIGludCBsZW4pCit7CisJYXNzZXJ0KCJ2cy04NDUiLCBpbm9kZS0+
aV9wcml2YXRlID09IE5VTEwpOworCWFzc2VydCgidnMtODQ2IiwgIXJlaXNlcjRfaW5vZGVfZ2V0
X2ZsYWcoaW5vZGUsCisJCQkJCQkgUkVJU0VSNF9HRU5FUklDX1BUUl9VU0VEKSk7CisJLyogRklY
TUUtVlM6IHRoaXMgaXMgcHJvbmUgdG8gZGVhZGxvY2suIE5vdCBtb3JlIHRoYW4gb3RoZXIgc2lt
aWxhcgorCSAgIHBsYWNlcywgdGhvdWdoICovCisJaW5vZGUtPmlfcHJpdmF0ZSA9IGttYWxsb2Mo
KHNpemVfdCkgbGVuICsgMSwKKwkJCQkgICByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJ
aWYgKCFpbm9kZS0+aV9wcml2YXRlKQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJbWVt
Y3B5KChjaGFyICopKGlub2RlLT5pX3ByaXZhdGUpLCB0YXJnZXQsIChzaXplX3QpIGxlbik7CisJ
KChjaGFyICopKGlub2RlLT5pX3ByaXZhdGUpKVtsZW5dID0gMDsKKwlyZWlzZXI0X2lub2RlX3Nl
dF9mbGFnKGlub2RlLCBSRUlTRVI0X0dFTkVSSUNfUFRSX1VTRUQpOworCXJldHVybiAwOworfQor
CisvKiB0aGlzIGlzIGNhbGxlZCBvbiByZWFkX2lub2RlLiBUaGVyZSBpcyBub3RoaW5nIHRvIGRv
IGFjdHVhbGx5LCBidXQgc29tZQorICAgc2FuaXR5IGNoZWNrcyAqLworc3RhdGljIGludCBwcmVz
ZW50X3N5bWxpbmtfc2Qoc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFyZWEsIGludCAqbGVu
KQoreworCWludCByZXN1bHQ7CisJaW50IGxlbmd0aDsKKwlyZWlzZXI0X3N5bWxpbmtfc3RhdCAq
c2Q7CisKKwlsZW5ndGggPSAoaW50KWlub2RlLT5pX3NpemU7CisJLyoKKwkgKiAqbGVuIGlzIG51
bWJlciBvZiBieXRlcyBpbiBzdGF0IGRhdGEgaXRlbSBmcm9tICphcmVhIHRvIHRoZSBlbmQgb2YK
KwkgKiBpdGVtLiBJdCBtdXN0IGJlIG5vdCBsZXNzIHRoYW4gc2l6ZSBvZiBzeW1saW5rICsgMSBm
b3IgZW5kaW5nIDAKKwkgKi8KKwlpZiAobGVuZ3RoID4gKmxlbikKKwkJcmV0dXJuIG5vdF9lbm91
Z2hfc3BhY2UoaW5vZGUsICJzeW1saW5rIik7CisKKwlpZiAoKigqYXJlYSArIGxlbmd0aCkgIT0g
MCkgeworCQl3YXJuaW5nKCJ2cy04NDAiLCAiU3ltbGluayBpcyBub3QgemVybyB0ZXJtaW5hdGVk
Iik7CisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJfQorCisJc2QgPSAocmVpc2VyNF9zeW1saW5r
X3N0YXQgKikgKiBhcmVhOworCXJlc3VsdCA9IHN5bWxpbmtfdGFyZ2V0X3RvX2lub2RlKGlub2Rl
LCBzZC0+Ym9keSwgbGVuZ3RoKTsKKworCW1vdmVfb24obGVuLCBhcmVhLCBsZW5ndGggKyAxKTsK
KwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgaW50IHNhdmVfbGVuX3N5bWxpbmtfc2Qoc3Ry
dWN0IGlub2RlICppbm9kZSkKK3sKKwlyZXR1cm4gaW5vZGUtPmlfc2l6ZSArIDE7Cit9CisKKy8q
IHRoaXMgaXMgY2FsbGVkIG9uIGNyZWF0ZSBhbmQgdXBkYXRlIHN0YXQgZGF0YS4gRG8gbm90aGlu
ZyBvbiB1cGRhdGUgYnV0CisgICB1cGRhdGUgQGFyZWEgKi8KK3N0YXRpYyBpbnQgc2F2ZV9zeW1s
aW5rX3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNoYXIgKiphcmVhKQoreworCWludCByZXN1bHQ7
CisJaW50IGxlbmd0aDsKKwlyZWlzZXI0X3N5bWxpbmtfc3RhdCAqc2Q7CisKKwlsZW5ndGggPSAo
aW50KWlub2RlLT5pX3NpemU7CisJLyogaW5vZGUtPmlfc2l6ZSBtdXN0IGJlIHNldCBhbHJlYWR5
ICovCisJYXNzZXJ0KCJ2cy04NDEiLCBsZW5ndGgpOworCisJcmVzdWx0ID0gMDsKKwlzZCA9IChy
ZWlzZXI0X3N5bWxpbmtfc3RhdCAqKSAqIGFyZWE7CisJaWYgKCFyZWlzZXI0X2lub2RlX2dldF9m
bGFnKGlub2RlLCBSRUlTRVI0X0dFTkVSSUNfUFRSX1VTRUQpKSB7CisJCWNvbnN0IGNoYXIgKnRh
cmdldDsKKworCQl0YXJnZXQgPSAoY29uc3QgY2hhciAqKShpbm9kZS0+aV9wcml2YXRlKTsKKwkJ
aW5vZGUtPmlfcHJpdmF0ZSA9IE5VTEw7CisKKwkJcmVzdWx0ID0gc3ltbGlua190YXJnZXRfdG9f
aW5vZGUoaW5vZGUsIHRhcmdldCwgbGVuZ3RoKTsKKworCQkvKiBjb3B5IHN5bWxpbmsgdG8gc3Rh
dCBkYXRhICovCisJCW1lbWNweShzZC0+Ym9keSwgdGFyZ2V0LCAoc2l6ZV90KSBsZW5ndGgpOwor
CQkoKmFyZWEpW2xlbmd0aF0gPSAwOworCX0gZWxzZSB7CisJCS8qIHRoZXJlIGlzIG5vdGhpbmcg
dG8gZG8gaW4gdXBkYXRlIGJ1dCBtb3ZlIGFyZWEgKi8KKwkJYXNzZXJ0KCJ2cy04NDQiLAorCQkg
ICAgICAgIW1lbWNtcChpbm9kZS0+aV9wcml2YXRlLCBzZC0+Ym9keSwKKwkJCSAgICAgICAoc2l6
ZV90KSBsZW5ndGggKyAxKSk7CisJfQorCisJKmFyZWEgKz0gKGxlbmd0aCArIDEpOworCXJldHVy
biByZXN1bHQ7Cit9CisKK3N0YXRpYyBpbnQgcHJlc2VudF9mbGFnc19zZChzdHJ1Y3QgaW5vZGUg
Kmlub2RlIC8qIG9iamVjdCBiZWluZyBwcm9jZXNzZWQgKi8gLAorCQkJICAgIGNoYXIgKiphcmVh
IC8qIHBvc2l0aW9uIGluIHN0YXQtZGF0YSAqLyAsCisJCQkgICAgaW50ICpsZW4gLyogcmVtYWlu
aW5nIGxlbmd0aCAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEtNjQ1IiwgaW5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtNjQ2IiwgYXJlYSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02
NDciLCAqYXJlYSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02NDgiLCBsZW4gIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtNjQ5IiwgKmxlbiA+IDApOworCisJaWYgKCpsZW4gPj0gKGludClz
aXplb2YocmVpc2VyNF9mbGFnc19zdGF0KSkgeworCQlyZWlzZXI0X2ZsYWdzX3N0YXQgKnNkOwor
CisJCXNkID0gKHJlaXNlcjRfZmxhZ3Nfc3RhdCAqKSAqIGFyZWE7CisJCWlub2RlLT5pX2ZsYWdz
ID0gbGUzMl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2QtPmZsYWdzKSk7CisJCW1vdmVfb24obGVu
LCBhcmVhLCBzaXplb2YgKnNkKTsKKwkJcmV0dXJuIDA7CisJfSBlbHNlCisJCXJldHVybiBub3Rf
ZW5vdWdoX3NwYWNlKGlub2RlLCAiZ2VuZXJhdGlvbiBhbmQgYXR0cnMiKTsKK30KKworLyogQXVk
aXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNCkgKi8KK3N0YXRpYyBpbnQgc2F2ZV9sZW5fZmxhZ3Nf
c2Qoc3RydWN0IGlub2RlICppbm9kZSBVTlVTRURfQVJHCS8qIG9iamVjdCBiZWluZworCQkJCQkJ
CQkgKiBwcm9jZXNzZWQgKi8gKQoreworCXJldHVybiBzaXplb2YocmVpc2VyNF9mbGFnc19zdGF0
KTsKK30KKworc3RhdGljIGludCBzYXZlX2ZsYWdzX3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUgLyog
b2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAqLyAsCisJCQkgY2hhciAqKmFyZWEgLyogcG9zaXRpb24g
aW4gc3RhdC1kYXRhICovICkKK3sKKwlyZWlzZXI0X2ZsYWdzX3N0YXQgKnNkOworCisJYXNzZXJ0
KCJuaWtpdGEtNjUwIiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjUxIiwgYXJl
YSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS02NTIiLCAqYXJlYSAhPSBOVUxMKTsKKworCXNk
ID0gKHJlaXNlcjRfZmxhZ3Nfc3RhdCAqKSAqIGFyZWE7CisJcHV0X3VuYWxpZ25lZChjcHVfdG9f
bGUzMihpbm9kZS0+aV9mbGFncyksICZzZC0+ZmxhZ3MpOworCSphcmVhICs9IHNpemVvZiAqc2Q7
CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgYWJzZW50X3BsdWdpbl9zZChzdHJ1Y3QgaW5v
ZGUgKmlub2RlKTsKK3N0YXRpYyBpbnQgcHJlc2VudF9wbHVnaW5fc2Qoc3RydWN0IGlub2RlICpp
bm9kZSAvKiBvYmplY3QgYmVpbmcgcHJvY2Vzc2VkICovICwKKwkJCSAgICAgY2hhciAqKmFyZWEg
LyogcG9zaXRpb24gaW4gc3RhdC1kYXRhICovICwKKwkJCSAgICAgaW50ICpsZW4gLyogcmVtYWlu
aW5nIGxlbmd0aCAqLywKKwkJCSAgICAgaW50IGlzX3BzZXQgLyogMSBpZiBwbHVnaW4gc2V0LCAw
IGlmIGhlaXIgc2V0LiAqLykKK3sKKwlyZWlzZXI0X3BsdWdpbl9zdGF0ICpzZDsKKwlyZWlzZXI0
X3BsdWdpbiAqcGx1Z2luOworCXJlaXNlcjRfaW5vZGUgKmluZm87CisJaW50IGk7CisJX191MTYg
bWFzazsKKwlpbnQgcmVzdWx0OworCWludCBudW1fb2ZfcGx1Z2luczsKKworCWFzc2VydCgibmlr
aXRhLTY1MyIsIGlub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTY1NCIsIGFyZWEgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjU1IiwgKmFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtNjU2IiwgbGVuICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTY1NyIsICpsZW4gPiAw
KTsKKworCWlmICgqbGVuIDwgKGludClzaXplb2YocmVpc2VyNF9wbHVnaW5fc3RhdCkpCisJCXJl
dHVybiBub3RfZW5vdWdoX3NwYWNlKGlub2RlLCAicGx1Z2luIik7CisKKwlzZCA9IChyZWlzZXI0
X3BsdWdpbl9zdGF0ICopICogYXJlYTsKKwlpbmZvID0gcmVpc2VyNF9pbm9kZV9kYXRhKGlub2Rl
KTsKKworCW1hc2sgPSAwOworCW51bV9vZl9wbHVnaW5zID0gbGUxNl90b19jcHUoZ2V0X3VuYWxp
Z25lZCgmc2QtPnBsdWdpbnNfbm8pKTsKKwltb3ZlX29uKGxlbiwgYXJlYSwgc2l6ZW9mICpzZCk7
CisJcmVzdWx0ID0gMDsKKwlmb3IgKGkgPSAwOyBpIDwgbnVtX29mX3BsdWdpbnM7ICsraSkgewor
CQlyZWlzZXI0X3BsdWdpbl9zbG90ICpzbG90OworCQlyZWlzZXI0X3BsdWdpbl90eXBlIHR5cGU7
CisJCXBzZXRfbWVtYmVyIG1lbWI7CisKKwkJc2xvdCA9IChyZWlzZXI0X3BsdWdpbl9zbG90ICop
ICogYXJlYTsKKwkJaWYgKCpsZW4gPCAoaW50KXNpemVvZiAqc2xvdCkKKwkJCXJldHVybiBub3Rf
ZW5vdWdoX3NwYWNlKGlub2RlLCAiYWRkaXRpb25hbCBwbHVnaW4iKTsKKworCQltZW1iID0gbGUx
Nl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc2xvdC0+cHNldF9tZW1iKSk7CisJCXR5cGUgPSBhc2V0
X21lbWJlcl90b190eXBlX3Vuc2FmZShtZW1iKTsKKworCQlpZiAodHlwZSA9PSBSRUlTRVI0X1BM
VUdJTl9UWVBFUykgeworCQkJd2FybmluZygibmlraXRhLTM1MDIiLAorCQkJCSJ3cm9uZyAlcyBt
ZW1iZXIgKCVpKSBmb3IgJWxsdSIsIGlzX3BzZXQgPworCQkJCSJwc2V0IiA6ICJoc2V0IiwgbWVt
YiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQoaW5vZGUpKTsKKwkJCXJl
dHVybiBSRVRFUlIoLUVJTlZBTCk7CisJCX0KKwkJcGx1Z2luID0gcGx1Z2luX2J5X2Rpc2tfaWQo
cmVpc2VyNF90cmVlX2J5X2lub2RlKGlub2RlKSwKKwkJCQkJICAgdHlwZSwgJnNsb3QtPmlkKTsK
KwkJaWYgKHBsdWdpbiA9PSBOVUxMKQorCQkJcmV0dXJuIHVua25vd25fcGx1Z2luKGxlMTZfdG9f
Y3B1KGdldF91bmFsaWduZWQoJnNsb3QtPmlkKSksIGlub2RlKTsKKworCQkvKiBwbHVnaW4gaXMg
bG9hZGVkIGludG8gaW5vZGUsIG1hcmsgdGhpcyBpbnRvIGlub2RlJ3MKKwkJICAgYml0bWFzayBv
ZiBsb2FkZWQgbm9uLXN0YW5kYXJkIHBsdWdpbnMgKi8KKwkJaWYgKCEobWFzayAmICgxIDw8IG1l
bWIpKSkgeworCQkJbWFzayB8PSAoMSA8PCBtZW1iKTsKKwkJfSBlbHNlIHsKKwkJCXdhcm5pbmco
Im5pa2l0YS02NTgiLCAiZHVwbGljYXRlIHBsdWdpbiBmb3IgJWxsdSIsCisJCQkJKHVuc2lnbmVk
IGxvbmcgbG9uZylnZXRfaW5vZGVfb2lkKGlub2RlKSk7CisJCQlyZXR1cm4gUkVURVJSKC1FSU5W
QUwpOworCQl9CisJCW1vdmVfb24obGVuLCBhcmVhLCBzaXplb2YgKnNsb3QpOworCQkvKiBsb2Fk
IHBsdWdpbiBkYXRhLCBpZiBhbnkgKi8KKwkJaWYgKHBsdWdpbi0+aC5wb3BzICE9IE5VTEwgJiYg
cGx1Z2luLT5oLnBvcHMtPmxvYWQpCisJCQlyZXN1bHQgPSBwbHVnaW4tPmgucG9wcy0+bG9hZChp
bm9kZSwgcGx1Z2luLCBhcmVhLCBsZW4pOworCQllbHNlCisJCQlyZXN1bHQgPSBhc2V0X3NldF91
bnNhZmUoaXNfcHNldCA/ICZpbmZvLT5wc2V0IDoKKwkJCQkJCSAmaW5mby0+aHNldCwgbWVtYiwg
cGx1Z2luKTsKKwkJaWYgKHJlc3VsdCkKKwkJCXJldHVybiByZXN1bHQ7CisJfQorCWlmIChpc19w
c2V0KSB7CisJCS8qIGlmIG9iamVjdCBwbHVnaW4gd2Fzbid0IGxvYWRlZCBmcm9tIHN0YXQtZGF0
YSwgZ3Vlc3MgaXQgYnkKKwkJICAgbW9kZSBiaXRzICovCisJCXBsdWdpbiA9IGZpbGVfcGx1Z2lu
X3RvX3BsdWdpbihpbm9kZV9maWxlX3BsdWdpbihpbm9kZSkpOworCQlpZiAocGx1Z2luID09IE5V
TEwpCisJCQlyZXN1bHQgPSBhYnNlbnRfcGx1Z2luX3NkKGlub2RlKTsKKwkJaW5mby0+cGx1Z2lu
X21hc2sgPSBtYXNrOworCX0gZWxzZQorCQlpbmZvLT5oZWlyX21hc2sgPSBtYXNrOworCisJcmV0
dXJuIHJlc3VsdDsKK30KKworc3RhdGljIGludCBwcmVzZW50X3BzZXRfc2Qoc3RydWN0IGlub2Rl
ICppbm9kZSwgY2hhciAqKmFyZWEsIGludCAqbGVuKSB7CisJcmV0dXJuIHByZXNlbnRfcGx1Z2lu
X3NkKGlub2RlLCBhcmVhLCBsZW4sIDEgLyogcHNldCAqLyk7Cit9CisKKy8qIERldGVybWluZSBv
YmplY3QgcGx1Z2luIGZvciBAaW5vZGUgYmFzZWQgb24gaV9tb2RlLgorCisgICBNYW55IG9iamVj
dHMgaW4gcmVpc2VyNCBmaWxlIHN5c3RlbSBhcmUgY29udHJvbGxlZCBieSBzdGFuZGFyZCBvYmpl
Y3QKKyAgIHBsdWdpbnMgdGhhdCBlbXVsYXRlIHRyYWRpdGlvbmFsIHVuaXggb2JqZWN0czogdW5p
eCBmaWxlLCBkaXJlY3RvcnksIHN5bWxpbmssIGZpZm8sIGFuZCBzbyBvbi4KKworICAgRm9yIHN1
Y2ggZmlsZXMgd2UgZG9uJ3QgZXhwbGljaXRseSBzdG9yZSBwbHVnaW4gaWQgaW4gb2JqZWN0IHN0
YXQKKyAgIGRhdGEuIFJhdGhlciByZXF1aXJlZCBwbHVnaW4gaXMgZ3Vlc3NlZCBmcm9tIG1vZGUg
Yml0cywgd2hlcmUgZmlsZSAidHlwZSIKKyAgIGlzIGVuY29kZWQgKHNlZSBzdGF0KDIpKS4KKyov
CitzdGF0aWMgaW50CitndWVzc19wbHVnaW5fYnlfbW9kZShzdHJ1Y3QgaW5vZGUgKmlub2RlIC8q
IG9iamVjdCB0byBndWVzcyBwbHVnaW5zIGZvciAqLyApCit7CisJaW50IGZwbHVnX2lkOworCWlu
dCBkcGx1Z19pZDsKKwlyZWlzZXI0X2lub2RlICppbmZvOworCisJYXNzZXJ0KCJuaWtpdGEtNzM2
IiwgaW5vZGUgIT0gTlVMTCk7CisKKwlkcGx1Z19pZCA9IGZwbHVnX2lkID0gLTE7CisKKwlzd2l0
Y2ggKGlub2RlLT5pX21vZGUgJiBTX0lGTVQpIHsKKwljYXNlIFNfSUZTT0NLOgorCWNhc2UgU19J
RkJMSzoKKwljYXNlIFNfSUZDSFI6CisJY2FzZSBTX0lGSUZPOgorCQlmcGx1Z19pZCA9IFNQRUNJ
QUxfRklMRV9QTFVHSU5fSUQ7CisJCWJyZWFrOworCWNhc2UgU19JRkxOSzoKKwkJZnBsdWdfaWQg
PSBTWU1MSU5LX0ZJTEVfUExVR0lOX0lEOworCQlicmVhazsKKwljYXNlIFNfSUZESVI6CisJCWZw
bHVnX2lkID0gRElSRUNUT1JZX0ZJTEVfUExVR0lOX0lEOworCQlkcGx1Z19pZCA9IEhBU0hFRF9E
SVJfUExVR0lOX0lEOworCQlicmVhazsKKwlkZWZhdWx0OgorCQl3YXJuaW5nKCJuaWtpdGEtNzM3
IiwgIndyb25nIGZpbGUgbW9kZTogJW8iLCBpbm9kZS0+aV9tb2RlKTsKKwkJcmV0dXJuIFJFVEVS
UigtRUlPKTsKKwljYXNlIFNfSUZSRUc6CisJCWZwbHVnX2lkID0gVU5JWF9GSUxFX1BMVUdJTl9J
RDsKKwkJYnJlYWs7CisJfQorCWluZm8gPSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpOworCXNl
dF9wbHVnaW4oJmluZm8tPnBzZXQsIFBTRVRfRklMRSwgKGZwbHVnX2lkID49IDApID8KKwkJICAg
cGx1Z2luX2J5X2lkKFJFSVNFUjRfRklMRV9QTFVHSU5fVFlQRSwgZnBsdWdfaWQpIDogTlVMTCk7
CisJc2V0X3BsdWdpbigmaW5mby0+cHNldCwgUFNFVF9ESVIsIChkcGx1Z19pZCA+PSAwKSA/CisJ
CSAgIHBsdWdpbl9ieV9pZChSRUlTRVI0X0RJUl9QTFVHSU5fVFlQRSwgZHBsdWdfaWQpIDogTlVM
TCk7CisJcmV0dXJuIDA7Cit9CisKKy8qIEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTQpICov
CitzdGF0aWMgaW50IGFic2VudF9wbHVnaW5fc2Qoc3RydWN0IGlub2RlICppbm9kZSAvKiBvYmpl
Y3QgYmVpbmcgcHJvY2Vzc2VkICovICkKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtp
dGEtNjU5IiwgaW5vZGUgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSBndWVzc19wbHVnaW5fYnlfbW9k
ZShpbm9kZSk7CisJLyogaWYgbW9kZSB3YXMgd3JvbmcsIGd1ZXNzX3BsdWdpbl9ieV9tb2RlKCkg
cmV0dXJucyAicmVndWxhciBmaWxlIiwKKwkgICBidXQgc2V0dXBfaW5vZGVfb3BzKCkgd2lsbCBj
YWxsIG1ha2VfYmFkX2lub2RlKCkuCisJICAgQW5vdGhlciwgbW9yZSBsb2dpY2FsIGJ1dCBiaXQg
bW9yZSBjb21wbGV4IHNvbHV0aW9uIGlzIHRvIGFkZAorCSAgICJiYWQtZmlsZSBwbHVnaW4iLiAq
LworCS8qIEZJWE1FLVZTOiBhY3RpdmF0ZSB3YXMgY2FsbGVkIGhlcmUgKi8KKwlyZXR1cm4gcmVz
dWx0OworfQorCisvKiBoZWxwZXIgZnVuY3Rpb24gZm9yIHBsdWdpbl9zZF9zYXZlX2xlbigpOiBj
YWxjdWxhdGUgaG93IG11Y2ggc3BhY2UKKyAgICByZXF1aXJlZCB0byBzYXZlIHN0YXRlIG9mIGdp
dmVuIHBsdWdpbiAqLworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xNCkgKi8KK3N0YXRp
YyBpbnQgbGVuX2ZvcihyZWlzZXI0X3BsdWdpbiAqIHBsdWdpbiAvKiBwbHVnaW4gdG8gc2F2ZSAq
LyAsCisJCSAgIHN0cnVjdCBpbm9kZSAqaW5vZGUgLyogb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCAq
LyAsCisJCSAgIHBzZXRfbWVtYmVyIG1lbWIsCisJCSAgIGludCBsZW4sIGludCBpc19wc2V0KQor
eworCXJlaXNlcjRfaW5vZGUgKmluZm87CisJYXNzZXJ0KCJuaWtpdGEtNjYxIiwgaW5vZGUgIT0g
TlVMTCk7CisKKwlpZiAocGx1Z2luID09IE5VTEwpCisJCXJldHVybiBsZW47CisKKwlpbmZvID0g
cmVpc2VyNF9pbm9kZV9kYXRhKGlub2RlKTsKKwlpZiAoaXNfcHNldCA/CisJICAgIGluZm8tPnBs
dWdpbl9tYXNrICYgKDEgPDwgbWVtYikgOgorCSAgICBpbmZvLT5oZWlyX21hc2sgJiAoMSA8PCBt
ZW1iKSkgeworCQlsZW4gKz0gc2l6ZW9mKHJlaXNlcjRfcGx1Z2luX3Nsb3QpOworCQlpZiAocGx1
Z2luLT5oLnBvcHMgJiYgcGx1Z2luLT5oLnBvcHMtPnNhdmVfbGVuICE9IE5VTEwpIHsKKwkJCS8q
CisJCQkgKiBub24tc3RhbmRhcmQgcGx1Z2luLCBjYWxsIG1ldGhvZAorCQkJICogY29tbWVudGVk
IGFzIGl0IGlzIGluY29tcGF0aWJsZSB3aXRoIGFsaWdubWVudAorCQkJICogcG9saWN5IGluIHNh
dmVfcGx1ZygpIC1lZHdhcmQKKwkJCSAqCisJCQkgKiBsZW4gPSByZWlzZXI0X3JvdW5kX3VwKGxl
biwKKwkJCSAqIHBsdWdpbi0+aC5wb3BzLT5hbGlnbm1lbnQpOworCQkJICovCisJCQlsZW4gKz0g
cGx1Z2luLT5oLnBvcHMtPnNhdmVfbGVuKGlub2RlLCBwbHVnaW4pOworCQl9CisJfQorCXJldHVy
biBsZW47Cit9CisKKy8qIGNhbGN1bGF0ZSBob3cgbXVjaCBzcGFjZSBpcyByZXF1aXJlZCB0byBz
YXZlIHN0YXRlIG9mIGFsbCBwbHVnaW5zLAorICAgIGFzc29jaWF0ZWQgd2l0aCBpbm9kZSAqLwor
c3RhdGljIGludCBzYXZlX2xlbl9wbHVnaW5fc2Qoc3RydWN0IGlub2RlICppbm9kZSAvKiBvYmpl
Y3QgYmVpbmcgcHJvY2Vzc2VkICovLAorCQkJICAgICAgaW50IGlzX3BzZXQpCit7CisJaW50IGxl
bjsKKwlpbnQgbGFzdDsKKwlyZWlzZXI0X2lub2RlICpzdGF0ZTsKKwlwc2V0X21lbWJlciBtZW1i
OworCisJYXNzZXJ0KCJuaWtpdGEtNjYzIiwgaW5vZGUgIT0gTlVMTCk7CisKKwlzdGF0ZSA9IHJl
aXNlcjRfaW5vZGVfZGF0YShpbm9kZSk7CisKKwkvKiBjb21tb24gY2FzZTogbm8gbm9uLXN0YW5k
YXJkIHBsdWdpbnMgKi8KKwlpZiAoaXNfcHNldCA/IHN0YXRlLT5wbHVnaW5fbWFzayA9PSAwIDog
c3RhdGUtPmhlaXJfbWFzayA9PSAwKQorCQlyZXR1cm4gMDsKKwlsZW4gPSBzaXplb2YocmVpc2Vy
NF9wbHVnaW5fc3RhdCk7CisJbGFzdCA9IFBTRVRfTEFTVDsKKworCWZvciAobWVtYiA9IDA7IG1l
bWIgPCBsYXN0OyArK21lbWIpIHsKKwkgICAgICBsZW4gPSBsZW5fZm9yKGFzZXRfZ2V0KGlzX3Bz
ZXQgPyBzdGF0ZS0+cHNldCA6IHN0YXRlLT5oc2V0LCBtZW1iKSwKKwkJCSAgICBpbm9kZSwgbWVt
YiwgbGVuLCBpc19wc2V0KTsKKwl9CisJYXNzZXJ0KCJuaWtpdGEtNjY0IiwgbGVuID4gKGludClz
aXplb2YocmVpc2VyNF9wbHVnaW5fc3RhdCkpOworCXJldHVybiBsZW47Cit9CisKK3N0YXRpYyBp
bnQgc2F2ZV9sZW5fcHNldF9zZChzdHJ1Y3QgaW5vZGUgKmlub2RlKSB7CisJcmV0dXJuIHNhdmVf
bGVuX3BsdWdpbl9zZChpbm9kZSwgMSAvKiBwc2V0ICovKTsKK30KKworLyogaGVscGVyIGZ1bmN0
aW9uIGZvciBwbHVnaW5fc2Rfc2F2ZSgpOiBzYXZlIHBsdWdpbiwgYXNzb2NpYXRlZCB3aXRoCisg
ICAgaW5vZGUuICovCitzdGF0aWMgaW50IHNhdmVfcGx1ZyhyZWlzZXI0X3BsdWdpbiAqIHBsdWdp
biAvKiBwbHVnaW4gdG8gc2F2ZSAqLyAsCisJCSAgICAgc3RydWN0IGlub2RlICppbm9kZSAvKiBv
YmplY3QgYmVpbmcgcHJvY2Vzc2VkICovICwKKwkJICAgICBpbnQgbWVtYiAvKiB3aGF0IGVsZW1l
bnQgb2YgcHNldCBpcyBzYXZlZCAqLyAsCisJCSAgICAgY2hhciAqKmFyZWEgLyogcG9zaXRpb24g
aW4gc3RhdC1kYXRhICovICwKKwkJICAgICBpbnQgKmNvdW50CS8qIGluY3JlbWVudGVkIGlmIHBs
dWdpbiB3ZXJlIGFjdHVhbGx5IHNhdmVkLiAqLywKKwkJICAgICBpbnQgaXNfcHNldCAvKiAxIGZv
ciBwbHVnaW4gc2V0LCAwIGZvciBoZWlyIHNldCAqLykKK3sKKwlyZWlzZXI0X3BsdWdpbl9zbG90
ICpzbG90OworCWludCBmYWtlX2xlbjsKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEt
NjY1IiwgaW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjY2IiwgYXJlYSAhPSBOVUxM
KTsKKwlhc3NlcnQoIm5pa2l0YS02NjciLCAqYXJlYSAhPSBOVUxMKTsKKworCWlmIChwbHVnaW4g
PT0gTlVMTCkKKwkJcmV0dXJuIDA7CisKKwlpZiAoaXNfcHNldCA/CisJICAgICEocmVpc2VyNF9p
bm9kZV9kYXRhKGlub2RlKS0+cGx1Z2luX21hc2sgJiAoMSA8PCBtZW1iKSkgOgorCSAgICAhKHJl
aXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPmhlaXJfbWFzayAmICgxIDw8IG1lbWIpKSkKKwkJcmV0
dXJuIDA7CisJc2xvdCA9IChyZWlzZXI0X3BsdWdpbl9zbG90ICopICogYXJlYTsKKwlwdXRfdW5h
bGlnbmVkKGNwdV90b19sZTE2KG1lbWIpLCAmc2xvdC0+cHNldF9tZW1iKTsKKwlwdXRfdW5hbGln
bmVkKGNwdV90b19sZTE2KHBsdWdpbi0+aC5pZCksICZzbG90LT5pZCk7CisJZmFrZV9sZW4gPSAo
aW50KTB4ZmZmZjsKKwltb3ZlX29uKCZmYWtlX2xlbiwgYXJlYSwgc2l6ZW9mICpzbG90KTsKKwkr
Kypjb3VudDsKKwlyZXN1bHQgPSAwOworCWlmIChwbHVnaW4tPmgucG9wcyAhPSBOVUxMKSB7CisJ
CWlmIChwbHVnaW4tPmgucG9wcy0+c2F2ZSAhPSBOVUxMKQorCQkJcmVzdWx0ID0gcGx1Z2luLT5o
LnBvcHMtPnNhdmUoaW5vZGUsIHBsdWdpbiwgYXJlYSk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9
CisKKy8qIHNhdmUgc3RhdGUgb2YgYWxsIG5vbi1zdGFuZGFyZCBwbHVnaW5zIGFzc29jaWF0ZWQg
d2l0aCBpbm9kZSAqLworc3RhdGljIGludCBzYXZlX3BsdWdpbl9zZChzdHJ1Y3QgaW5vZGUgKmlu
b2RlIC8qIG9iamVjdCBiZWluZyBwcm9jZXNzZWQgKi8gLAorCQkJICBjaGFyICoqYXJlYSAvKiBw
b3NpdGlvbiBpbiBzdGF0LWRhdGEgKi8sCisJCQkgIGludCBpc19wc2V0IC8qIDEgZm9yIHBzZXQs
IDAgZm9yIGhzZXQgKi8pCit7CisJaW50IGZha2VfbGVuOworCWludCByZXN1bHQgPSAwOworCWlu
dCBudW1fb2ZfcGx1Z2luczsKKwlyZWlzZXI0X3BsdWdpbl9zdGF0ICpzZDsKKwlyZWlzZXI0X2lu
b2RlICpzdGF0ZTsKKwlwc2V0X21lbWJlciBtZW1iOworCisJYXNzZXJ0KCJuaWtpdGEtNjY5Iiwg
aW5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNjcwIiwgYXJlYSAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS02NzEiLCAqYXJlYSAhPSBOVUxMKTsKKworCXN0YXRlID0gcmVpc2VyNF9p
bm9kZV9kYXRhKGlub2RlKTsKKwlpZiAoaXNfcHNldCA/IHN0YXRlLT5wbHVnaW5fbWFzayA9PSAw
IDogc3RhdGUtPmhlaXJfbWFzayA9PSAwKQorCQlyZXR1cm4gMDsKKwlzZCA9IChyZWlzZXI0X3Bs
dWdpbl9zdGF0ICopICogYXJlYTsKKwlmYWtlX2xlbiA9IChpbnQpMHhmZmZmOworCW1vdmVfb24o
JmZha2VfbGVuLCBhcmVhLCBzaXplb2YgKnNkKTsKKworCW51bV9vZl9wbHVnaW5zID0gMDsKKwlm
b3IgKG1lbWIgPSAwOyBtZW1iIDwgUFNFVF9MQVNUOyArK21lbWIpIHsKKwkJcmVzdWx0ID0gc2F2
ZV9wbHVnKGFzZXRfZ2V0KGlzX3BzZXQgPyBzdGF0ZS0+cHNldCA6IHN0YXRlLT5oc2V0LAorCQkJ
CQkgICAgbWVtYiksCisJCQkJICAgaW5vZGUsIG1lbWIsIGFyZWEsICZudW1fb2ZfcGx1Z2lucywg
aXNfcHNldCk7CisJCWlmIChyZXN1bHQgIT0gMCkKKwkJCWJyZWFrOworCX0KKworCXB1dF91bmFs
aWduZWQoY3B1X3RvX2xlMTYoKF9fdTE2KW51bV9vZl9wbHVnaW5zKSwgJnNkLT5wbHVnaW5zX25v
KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCitzdGF0aWMgaW50IHNhdmVfcHNldF9zZChzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBjaGFyICoqYXJlYSkgeworCXJldHVybiBzYXZlX3BsdWdpbl9zZChpbm9k
ZSwgYXJlYSwgMSAvKiBwc2V0ICovKTsKK30KKworc3RhdGljIGludCBwcmVzZW50X2hzZXRfc2Qo
c3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFyZWEsIGludCAqbGVuKSB7CisJcmV0dXJuIHBy
ZXNlbnRfcGx1Z2luX3NkKGlub2RlLCBhcmVhLCBsZW4sIDAgLyogaHNldCAqLyk7Cit9CisKK3N0
YXRpYyBpbnQgc2F2ZV9sZW5faHNldF9zZChzdHJ1Y3QgaW5vZGUgKmlub2RlKSB7CisJcmV0dXJu
IHNhdmVfbGVuX3BsdWdpbl9zZChpbm9kZSwgMCAvKiBwc2V0ICovKTsKK30KKworc3RhdGljIGlu
dCBzYXZlX2hzZXRfc2Qoc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFyZWEpIHsKKwlyZXR1
cm4gc2F2ZV9wbHVnaW5fc2QoaW5vZGUsIGFyZWEsIDAgLyogaHNldCAqLyk7Cit9CisKKy8qIGhl
bHBlciBmdW5jdGlvbiBmb3IgY3J5cHRvX3NkX3ByZXNlbnQoKSwgY3J5cHRvX3NkX3NhdmUuCisg
ICBFeHRyYWN0IGNyeXB0byBpbmZvIGZyb20gc3RhdC1kYXRhIGFuZCBhdHRhY2ggaXQgdG8gaW5v
ZGUgKi8KK3N0YXRpYyBpbnQgZXh0cmFjdF9jcnlwdG9faW5mbyAoc3RydWN0IGlub2RlICogaW5v
ZGUsCisJCQkJcmVpc2VyNF9jcnlwdG9fc3RhdCAqIHNkKQoreworCXN0cnVjdCByZWlzZXI0X2Ny
eXB0b19pbmZvICogaW5mbzsKKwlhc3NlcnQoImVkd2FyZC0xMSIsICFpbm9kZV9jcnlwdG9faW5m
byhpbm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTE0MTMiLAorCSAgICAgICAhcmVpc2VyNF9pbm9k
ZV9nZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9DUllQVE9fU1RBVF9MT0FERUQpKTsKKwkvKiBjcmVh
dGUgYW5kIGF0dGFjaCBhIGNyeXB0by1zdGF0IHdpdGhvdXQgc2VjcmV0IGtleSBsb2FkZWQgKi8K
KwlpbmZvID0gcmVpc2VyNF9hbGxvY19jcnlwdG9faW5mbyhpbm9kZSk7CisJaWYgKElTX0VSUihp
bmZvKSkKKwkJcmV0dXJuIFBUUl9FUlIoaW5mbyk7CisJaW5mby0+a2V5c2l6ZSA9IGxlMTZfdG9f
Y3B1KGdldF91bmFsaWduZWQoJnNkLT5rZXlzaXplKSk7CisJbWVtY3B5KGluZm8tPmtleWlkLCBz
ZC0+a2V5aWQsIGlub2RlX2RpZ2VzdF9wbHVnaW4oaW5vZGUpLT5maXBzaXplKTsKKwlyZWlzZXI0
X2F0dGFjaF9jcnlwdG9faW5mbyhpbm9kZSwgaW5mbyk7CisJcmVpc2VyNF9pbm9kZV9zZXRfZmxh
Zyhpbm9kZSwgUkVJU0VSNF9DUllQVE9fU1RBVF9MT0FERUQpOworCXJldHVybiAwOworfQorCisv
KiBjcnlwdG8gc3RhdC1kYXRhIGV4dGVuc2lvbiAqLworCitzdGF0aWMgaW50IHByZXNlbnRfY3J5
cHRvX3NkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNoYXIgKiphcmVhLCBpbnQgKmxlbikKK3sKKwlp
bnQgcmVzdWx0OworCXJlaXNlcjRfY3J5cHRvX3N0YXQgKnNkOworCWRpZ2VzdF9wbHVnaW4gKmRw
bHVnID0gaW5vZGVfZGlnZXN0X3BsdWdpbihpbm9kZSk7CisKKwlhc3NlcnQoImVkd2FyZC0wNiIs
IGRwbHVnICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTY4NCIsIGRwbHVnLT5maXBzaXplKTsK
Kwlhc3NlcnQoImVkd2FyZC0wNyIsIGFyZWEgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMDgi
LCAqYXJlYSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0wOSIsIGxlbiAhPSBOVUxMKTsKKwlh
c3NlcnQoImVkd2FyZC0xMCIsICpsZW4gPiAwKTsKKworCWlmICgqbGVuIDwgKGludClzaXplb2Yo
cmVpc2VyNF9jcnlwdG9fc3RhdCkpIHsKKwkJcmV0dXJuIG5vdF9lbm91Z2hfc3BhY2UoaW5vZGUs
ICJjcnlwdG8tc2QiKTsKKwl9CisJLyogKmxlbiBpcyBudW1iZXIgb2YgYnl0ZXMgaW4gc3RhdCBk
YXRhIGl0ZW0gZnJvbSAqYXJlYSB0byB0aGUgZW5kIG9mCisJICAgaXRlbS4gSXQgbXVzdCBiZSBu
b3QgbGVzcyB0aGFuIHNpemUgb2YgdGhpcyBleHRlbnNpb24gKi8KKwlhc3NlcnQoImVkd2FyZC03
NSIsIHNpemVvZigqc2QpICsgZHBsdWctPmZpcHNpemUgPD0gKmxlbik7CisKKwlzZCA9IChyZWlz
ZXI0X2NyeXB0b19zdGF0ICopICogYXJlYTsKKwlyZXN1bHQgPSBleHRyYWN0X2NyeXB0b19pbmZv
KGlub2RlLCBzZCk7CisJbW92ZV9vbihsZW4sIGFyZWEsIHNpemVvZigqc2QpICsgZHBsdWctPmZp
cHNpemUpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworc3RhdGljIGludCBzYXZlX2xlbl9jcnlw
dG9fc2Qoc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZXR1cm4gc2l6ZW9mKHJlaXNlcjRfY3J5
cHRvX3N0YXQpICsKKwkJaW5vZGVfZGlnZXN0X3BsdWdpbihpbm9kZSktPmZpcHNpemU7Cit9CisK
K3N0YXRpYyBpbnQgc2F2ZV9jcnlwdG9fc2Qoc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFy
ZWEpCit7CisJaW50IHJlc3VsdCA9IDA7CisJcmVpc2VyNF9jcnlwdG9fc3RhdCAqc2Q7CisJc3Ry
dWN0IHJlaXNlcjRfY3J5cHRvX2luZm8gKiBpbmZvID0gaW5vZGVfY3J5cHRvX2luZm8oaW5vZGUp
OworCWRpZ2VzdF9wbHVnaW4gKmRwbHVnID0gaW5vZGVfZGlnZXN0X3BsdWdpbihpbm9kZSk7CisK
Kwlhc3NlcnQoImVkd2FyZC0xMiIsIGRwbHVnICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTEz
IiwgYXJlYSAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xNCIsICphcmVhICE9IE5VTEwpOwor
CWFzc2VydCgiZWR3YXJkLTE1IiwgaW5mbyAhPSBOVUxMKTsKKwlhc3NlcnQoImVkd2FyZC0xNDE0
IiwgaW5mby0+a2V5aWQgIT0gTlVMTCk7CisJYXNzZXJ0KCJlZHdhcmQtMTQxNSIsIGluZm8tPmtl
eXNpemUgIT0gMCk7CisJYXNzZXJ0KCJlZHdhcmQtNzYiLCByZWlzZXI0X2lub2RlX2RhdGEoaW5v
ZGUpICE9IE5VTEwpOworCisJaWYgKCFyZWlzZXI0X2lub2RlX2dldF9mbGFnKGlub2RlLCBSRUlT
RVI0X0NSWVBUT19TVEFUX0xPQURFRCkpIHsKKwkJLyogZmlsZSBpcyBqdXN0IGNyZWF0ZWQgKi8K
KwkJc2QgPSAocmVpc2VyNF9jcnlwdG9fc3RhdCAqKSAqYXJlYTsKKwkJLyogY29weSBldmVyeXRo
aW5nIGJ1dCBwcml2YXRlIGtleSB0byB0aGUgZGlzayBzdGF0LWRhdGEgKi8KKwkJcHV0X3VuYWxp
Z25lZChjcHVfdG9fbGUxNihpbmZvLT5rZXlzaXplKSwgJnNkLT5rZXlzaXplKTsKKwkJbWVtY3B5
KHNkLT5rZXlpZCwgaW5mby0+a2V5aWQsIChzaXplX3QpIGRwbHVnLT5maXBzaXplKTsKKwkJcmVp
c2VyNF9pbm9kZV9zZXRfZmxhZyhpbm9kZSwgUkVJU0VSNF9DUllQVE9fU1RBVF9MT0FERUQpOwor
CX0KKwkqYXJlYSArPSAoc2l6ZW9mKCpzZCkgKyBkcGx1Zy0+Zmlwc2l6ZSk7CisJcmV0dXJuIHJl
c3VsdDsKK30KKworc3RhdGljIGludCBlaW8oc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFy
ZWEsIGludCAqbGVuKQoreworCXJldHVybiBSRVRFUlIoLUVJTyk7Cit9CisKK3NkX2V4dF9wbHVn
aW4gc2RfZXh0X3BsdWdpbnNbTEFTVF9TRF9FWFRFTlNJT05dID0geworCVtMSUdIVF9XRUlHSFRf
U1RBVF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X1NEX0VYVF9QTFVHSU5f
VFlQRSwKKwkJCS5pZCA9IExJR0hUX1dFSUdIVF9TVEFULAorCQkJLnBvcHMgPSBOVUxMLAorCQkJ
LmxhYmVsID0gImxpZ2h0LXdlaWdodCBzZCIsCisJCQkuZGVzYyA9ICJzZCBmb3IgbGlnaHQtd2Vp
Z2h0IGZpbGVzIiwKKwkJCS5saW5rYWdlID0ge05VTEwsTlVMTH0KKwkJfSwKKwkJLnByZXNlbnQg
PSBwcmVzZW50X2x3X3NkLAorCQkuYWJzZW50ID0gTlVMTCwKKwkJLnNhdmVfbGVuID0gc2F2ZV9s
ZW5fbHdfc2QsCisJCS5zYXZlID0gc2F2ZV9sd19zZCwKKwkJLmFsaWdubWVudCA9IDgKKwl9LAor
CVtVTklYX1NUQVRdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9TRF9FWFRf
UExVR0lOX1RZUEUsCisJCQkuaWQgPSBVTklYX1NUQVQsCisJCQkucG9wcyA9IE5VTEwsCisJCQku
bGFiZWwgPSAidW5peC1zZCIsCisJCQkuZGVzYyA9ICJ1bml4IHN0YXQtZGF0YSBmaWVsZHMiLAor
CQkJLmxpbmthZ2UgPSB7TlVMTCxOVUxMfQorCQl9LAorCQkucHJlc2VudCA9IHByZXNlbnRfdW5p
eF9zZCwKKwkJLmFic2VudCA9IGFic2VudF91bml4X3NkLAorCQkuc2F2ZV9sZW4gPSBzYXZlX2xl
bl91bml4X3NkLAorCQkuc2F2ZSA9IHNhdmVfdW5peF9zZCwKKwkJLmFsaWdubWVudCA9IDgKKwl9
LAorCVtMQVJHRV9USU1FU19TVEFUXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNF
UjRfU0RfRVhUX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gTEFSR0VfVElNRVNfU1RBVCwKKwkJCS5w
b3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICI2NHRpbWUtc2QiLAorCQkJLmRlc2MgPSAibmFub3Nl
Y29uZCByZXNvbHV0aW9uIGZvciB0aW1lcyIsCisJCQkubGlua2FnZSA9IHtOVUxMLE5VTEx9CisJ
CX0sCisJCS5wcmVzZW50ID0gcHJlc2VudF9sYXJnZV90aW1lc19zZCwKKwkJLmFic2VudCA9IE5V
TEwsCisJCS5zYXZlX2xlbiA9IHNhdmVfbGVuX2xhcmdlX3RpbWVzX3NkLAorCQkuc2F2ZSA9IHNh
dmVfbGFyZ2VfdGltZXNfc2QsCisJCS5hbGlnbm1lbnQgPSA4CisJfSwKKwlbU1lNTElOS19TVEFU
XSA9IHsKKwkJLyogc3RhdCBkYXRhIG9mIHN5bWxpbmsgaGFzIHRoaXMgZXh0ZW5zaW9uICovCisJ
CS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X1NEX0VYVF9QTFVHSU5fVFlQRSwKKwkJCS5p
ZCA9IFNZTUxJTktfU1RBVCwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJzeW1saW5r
LXNkIiwKKwkJCS5kZXNjID0KKwkJCSJzdGF0IGRhdGEgaXMgYXBwZW5kZWQgd2l0aCBzeW1saW5r
IG5hbWUiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCxOVUxMfQorCQl9LAorCQkucHJlc2VudCA9IHBy
ZXNlbnRfc3ltbGlua19zZCwKKwkJLmFic2VudCA9IE5VTEwsCisJCS5zYXZlX2xlbiA9IHNhdmVf
bGVuX3N5bWxpbmtfc2QsCisJCS5zYXZlID0gc2F2ZV9zeW1saW5rX3NkLAorCQkuYWxpZ25tZW50
ID0gOAorCX0sCisJW1BMVUdJTl9TVEFUXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJF
SVNFUjRfU0RfRVhUX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gUExVR0lOX1NUQVQsCisJCQkucG9w
cyA9IE5VTEwsCisJCQkubGFiZWwgPSAicGx1Z2luLXNkIiwKKwkJCS5kZXNjID0gInBsdWdpbiBz
dGF0LWRhdGEgZmllbGRzIiwKKwkJCS5saW5rYWdlID0ge05VTEwsTlVMTH0KKwkJfSwKKwkJLnBy
ZXNlbnQgPSBwcmVzZW50X3BzZXRfc2QsCisJCS5hYnNlbnQgPSBhYnNlbnRfcGx1Z2luX3NkLAor
CQkuc2F2ZV9sZW4gPSBzYXZlX2xlbl9wc2V0X3NkLAorCQkuc2F2ZSA9IHNhdmVfcHNldF9zZCwK
KwkJLmFsaWdubWVudCA9IDgKKwl9LAorCVtIRUlSX1NUQVRdID0geworCQkuaCA9IHsKKwkJCS50
eXBlX2lkID0gUkVJU0VSNF9TRF9FWFRfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBIRUlSX1NUQVQs
CisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAiaGVpci1wbHVnaW4tc2QiLAorCQkJLmRl
c2MgPSAiaGVpciBwbHVnaW4gc3RhdC1kYXRhIGZpZWxkcyIsCisJCQkubGlua2FnZSA9IHtOVUxM
LE5VTEx9CisJCX0sCisJCS5wcmVzZW50ID0gcHJlc2VudF9oc2V0X3NkLAorCQkuYWJzZW50ID0g
TlVMTCwKKwkJLnNhdmVfbGVuID0gc2F2ZV9sZW5faHNldF9zZCwKKwkJLnNhdmUgPSBzYXZlX2hz
ZXRfc2QsCisJCS5hbGlnbm1lbnQgPSA4CisJfSwKKwlbRkxBR1NfU1RBVF0gPSB7CisJCS5oID0g
eworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X1NEX0VYVF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEZM
QUdTX1NUQVQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAiZmxhZ3Mtc2QiLAorCQkJ
LmRlc2MgPSAiaW5vZGUgYml0IGZsYWdzIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJ
CX0sCisJCS5wcmVzZW50ID0gcHJlc2VudF9mbGFnc19zZCwKKwkJLmFic2VudCA9IE5VTEwsCisJ
CS5zYXZlX2xlbiA9IHNhdmVfbGVuX2ZsYWdzX3NkLAorCQkuc2F2ZSA9IHNhdmVfZmxhZ3Nfc2Qs
CisJCS5hbGlnbm1lbnQgPSA4CisJfSwKKwlbQ0FQQUJJTElUSUVTX1NUQVRdID0geworCQkuaCA9
IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9TRF9FWFRfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBD
QVBBQklMSVRJRVNfU1RBVCwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJjYXBhYmls
aXRpZXMtc2QiLAorCQkJLmRlc2MgPSAiY2FwYWJpbGl0aWVzIiwKKwkJCS5saW5rYWdlID0ge05V
TEwsIE5VTEx9CisJCX0sCisJCS5wcmVzZW50ID0gZWlvLAorCQkuYWJzZW50ID0gTlVMTCwKKwkJ
LnNhdmVfbGVuID0gc2F2ZV9sZW5fZmxhZ3Nfc2QsCisJCS5zYXZlID0gc2F2ZV9mbGFnc19zZCwK
KwkJLmFsaWdubWVudCA9IDgKKwl9LAorCVtDUllQVE9fU1RBVF0gPSB7CisJCS5oID0geworCQkJ
LnR5cGVfaWQgPSBSRUlTRVI0X1NEX0VYVF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IENSWVBUT19T
VEFULAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0gImNyeXB0by1zZCIsCisJCQkuZGVz
YyA9ICJzZWNyZXQga2V5IHNpemUgYW5kIGlkIiwKKwkJCS5saW5rYWdlID0ge05VTEwsIE5VTEx9
CisJCX0sCisJCS5wcmVzZW50ID0gcHJlc2VudF9jcnlwdG9fc2QsCisJCS5hYnNlbnQgPSBOVUxM
LAorCQkuc2F2ZV9sZW4gPSBzYXZlX2xlbl9jcnlwdG9fc2QsCisJCS5zYXZlID0gc2F2ZV9jcnlw
dG9fc2QsCisJCS5hbGlnbm1lbnQgPSA4CisJfQorfTsKKworLyogTWFrZSBMaW51cyBoYXBweS4K
KyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBt
b2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAg
IGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNl
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vc3RhdGljX3N0YXQuaCBs
aW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9zdGF0aWNfc3RhdC5oCi0tLSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3N0YXRpY19zdGF0LmgJMTk3MC0w
MS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3BsdWdpbi9pdGVtL3N0YXRpY19zdGF0LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NzAyMjIzMTAg
KzAxMDAKQEAgLTAsMCArMSwyMjQgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5
IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKwor
LyogVGhpcyBkZXNjcmliZXMgdGhlIHN0YXRpY19zdGF0IGl0ZW0sIHVzZWQgdG8gaG9sZCBhbGwg
aW5mb3JtYXRpb24gbmVlZGVkIGJ5IHRoZSBzdGF0KCkgc3lzY2FsbC4KKworSW4gdGhlIGNhc2Ug
d2hlcmUgZWFjaCBmaWxlIGhhcyBub3QgbGVzcyB0aGFuIHRoZSBmaWVsZHMgbmVlZGVkIGJ5IHRo
ZQorc3RhdCgpIHN5c2NhbGwsIGl0IGlzIG1vcmUgY29tcGFjdCB0byBzdG9yZSB0aG9zZSBmaWVs
ZHMgaW4gdGhpcworc3RydWN0LgorCitJZiB0aGlzIGl0ZW0gZG9lcyBub3QgZXhpc3QsIHRoZW4g
YWxsIHN0YXRzIGFyZSBkeW5hbWljYWxseSByZXNvbHZlZC4KK0F0IHRoZSBtb21lbnQsIHdlIGVp
dGhlciByZXNvbHZlIGFsbCBzdGF0cyBkeW5hbWljYWxseSBvciBhbGwgb2YgdGhlbQorc3RhdGlj
YWxseS4gIElmIHlvdSB0aGluayB0aGlzIGlzIG5vdCBmdWxseSBvcHRpbWFsLCBhbmQgdGhlIHJl
c3Qgb2YKK3JlaXNlcjQgaXMgd29ya2luZywgdGhlbiBmaXggaXQuLi46LSkKKworKi8KKworI2lm
ICFkZWZpbmVkKCBfX0ZTX1JFSVNFUjRfUExVR0lOX0lURU1fU1RBVElDX1NUQVRfSF9fICkKKyNk
ZWZpbmUgX19GU19SRUlTRVI0X1BMVUdJTl9JVEVNX1NUQVRJQ19TVEFUX0hfXworCisjaW5jbHVk
ZSAiLi4vLi4vZm9yd2FyZC5oIgorI2luY2x1ZGUgIi4uLy4uL2Rmb3JtYXQuaCIKKworI2luY2x1
ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IGlub2RlICovCisKKy8qIFN0YXQgZGF0YSBs
YXlvdXQ6IGdvYWxzIGFuZCBpbXBsZW1lbnRhdGlvbi4KKworICAgV2Ugd2FudCB0byBiZSBhYmxl
IHRvIGhhdmUgbGlnaHR3ZWlnaHQgZmlsZXMgd2hpY2ggaGF2ZSBjb21wbGV0ZSBmbGV4aWJpbGl0
eSBpbiB3aGF0IHNlbWFudGljIG1ldGFkYXRhIGlzIGF0dGFjaGVkIHRvCisgICB0aGVtLCBpbmNs
dWRpbmcgbm90IGhhdmluZyBzZW1hbnRpYyBtZXRhZGF0YSBhdHRhY2hlZCB0byB0aGVtLgorCisg
ICBUaGVyZSBpcyBvbmUgcHJvYmxlbSB3aXRoIGRvaW5nIHRoYXQsIHdoaWNoIGlzIHRoYXQgaWYg
aW4gZmFjdCB5b3UgaGF2ZSBleGFjdGx5IHRoZSBzYW1lIG1ldGFkYXRhIGZvciBtb3N0IGZpbGVz
IHlvdQorICAgd2FudCB0byBzdG9yZSwgdGhlbiBpdCB0YWtlcyBtb3JlIHNwYWNlIHRvIHN0b3Jl
IHRoYXQgbWV0YWRhdGEgaW4gYSBkeW5hbWljYWxseSBzaXplZCBzdHJ1Y3R1cmUgdGhhbiBpbiBh
IHN0YXRpY2FsbHkKKyAgIHNpemVkIHN0cnVjdHVyZSBiZWNhdXNlIHRoZSBzdGF0aWNhbGx5IHNp
emVkIHN0cnVjdHVyZSBrbm93cyB3aXRob3V0IHJlY29yZGluZyBpdCB3aGF0IHRoZSBuYW1lcyBh
bmQgbGVuZ3RocyBvZiB0aGUKKyAgIGF0dHJpYnV0ZXMgYXJlLgorCisgICBUaGlzIGxlYWRzIHRv
IGEgbmF0dXJhbCBjb21wcm9taXNlLCB3aGljaCBpcyB0byBzcGVjaWFsIGNhc2UgdGhvc2UgZmls
ZXMgd2hpY2ggaGF2ZSBzaW1wbHkgdGhlIHN0YW5kYXJkIHVuaXggZmlsZQorICAgYXR0cmlidXRl
cywgYW5kIG9ubHkgZW1wbG95IHRoZSBmdWxsIGR5bmFtaWMgc3RhdCBkYXRhIG1lY2hhbmlzbSBm
b3IgdGhvc2UgZmlsZXMgdGhhdCBkaWZmZXIgZnJvbSB0aGUgc3RhbmRhcmQgdW5peAorICAgZmls
ZSBpbiB0aGVpciB1c2Ugb2YgZmlsZSBhdHRyaWJ1dGVzLgorCisgICBZZXQgdGhpcyBjb21wcm9t
aXNlIGRlc2VydmVzIHRvIGJlIGNvbXByb21pc2VkIGEgbGl0dGxlLgorCisgICBXZSBhY2NvbW1v
ZGF0ZSB0aGUgY2FzZSB3aGVyZSB5b3UgaGF2ZSBubyBtb3JlIHRoYW4gdGhlIHN0YW5kYXJkIHVu
aXggZmlsZSBhdHRyaWJ1dGVzIGJ5IHVzaW5nIGFuICJleHRlbnNpb24KKyAgIGJpdG1hc2siOiBl
YWNoIGJpdCBpbiBpdCBpbmRpY2F0ZXMgcHJlc2VuY2Ugb3IgYWJzZW5jZSBvZiBvciBwYXJ0aWN1
bGFyIHN0YXQgZGF0YSBleHRlbnNpb24gKHNlZSBzZF9leHRfYml0cyBlbnVtKS4KKworICAgSWYg
dGhlIGZpcnN0IGJpdCBvZiB0aGUgZXh0ZW5zaW9uIGJpdG1hc2sgYml0IGlzIDAsIHdlIGhhdmUg
bGlnaHQtd2VpZ2h0IGZpbGUgd2hvc2UgYXR0cmlidXRlcyBhcmUgZWl0aGVyIGluaGVyaXRlZAor
ICAgZnJvbSBwYXJlbnQgZGlyZWN0b3J5IChhcyB1aWQsIGdpZCkgb3IgaW5pdGlhbGlzZWQgdG8g
c29tZSBzYW5lIHZhbHVlcy4KKworICAgVG8gY2FwaXRhbGl6ZSBvbiBleGlzdGluZyBjb2RlIGlu
ZnJhc3RydWN0dXJlLCBleHRlbnNpb25zIGFyZQorICAgaW1wbGVtZW50ZWQgYXMgcGx1Z2lucyBv
ZiB0eXBlIFJFSVNFUjRfU0RfRVhUX1BMVUdJTl9UWVBFLgorICAgRWFjaCBzdGF0LWRhdGEgZXh0
ZW5zaW9uIHBsdWdpbiBpbXBsZW1lbnRzIGZvdXIgbWV0aG9kczoKKworICAgIC0+cHJlc2VudCgp
IGNhbGxlZCBieSBzZF9sb2FkKCkgd2hlbiB0aGlzIGV4dGVuc2lvbiBpcyBmb3VuZCBpbiBzdGF0
LWRhdGEKKyAgICAtPmFic2VudCgpIGNhbGxlZCBieSBzZF9sb2FkKCkgd2hlbiB0aGlzIGV4dGVu
c2lvbiBpcyBub3QgZm91bmQgaW4gc3RhdC1kYXRhCisgICAgLT5zYXZlX2xlbigpIGNhbGxlZCBi
eSBzZF9sZW4oKSB0byBjYWxjdWxhdGUgdG90YWwgbGVuZ3RoIG9mIHN0YXQtZGF0YQorICAgIC0+
c2F2ZSgpIGNhbGxlZCBieSBzZF9zYXZlKCkgdG8gc3RvcmUgZXh0ZW5zaW9uIGRhdGEgaW50byBz
dGF0LWRhdGEKKworICAgIEltcGxlbWVudGF0aW9uIGlzIGluIGZzL3JlaXNlcjQvcGx1Z2luL2l0
ZW0vc3RhdGljX3N0YXQuYworKi8KKworLyogc3RhdC1kYXRhIGV4dGVuc2lvbi4gUGxlYXNlIG9y
ZGVyIHRoaXMgYnkgcHJlc3VtZWQgZnJlcXVlbmN5IG9mIHVzZSAqLwordHlwZWRlZiBlbnVtIHsK
KwkvKiBzdXBwb3J0IGZvciBsaWdodC13ZWlnaHQgZmlsZXMgKi8KKwlMSUdIVF9XRUlHSFRfU1RB
VCwKKwkvKiBkYXRhIHJlcXVpcmVkIHRvIGltcGxlbWVudCB1bml4IHN0YXQoMikgY2FsbC4gTGF5
b3V0IGlzIGluCisJICAgcmVpc2VyNF91bml4X3N0YXQuIElmIHRoaXMgaXMgbm90IHByZXNlbnQs
IGZpbGUgaXMgbGlnaHQtd2VpZ2h0ICovCisJVU5JWF9TVEFULAorCS8qIHRoaXMgY29udGFpbnMg
YWRkaXRpb25hbCBzZXQgb2YgMzJiaXQgW2FuY110aW1lIGZpZWxkcyB0byBpbXBsZW1lbnQKKwkg
ICBuYW5vc2Vjb25kIHJlc29sdXRpb24uIExheW91dCBpcyBpbiByZWlzZXI0X2xhcmdlX3RpbWVz
X3N0YXQuIFVzYWdlCisJICAgaWYgdGhpcyBleHRlbnNpb24gaXMgZ292ZXJuZWQgYnkgMzJiaXR0
aW1lcyBtb3VudCBvcHRpb24uICovCisJTEFSR0VfVElNRVNfU1RBVCwKKwkvKiBzdGF0IGRhdGEg
aGFzIGxpbmsgbmFtZSBpbmNsdWRlZCAqLworCVNZTUxJTktfU1RBVCwKKwkvKiBvbi1kaXNrIHNs
b3RzIG9mIG5vbi1zdGFuZGFyZCBwbHVnaW5zIGZvciBtYWluIHBsdWdpbiB0YWJsZQorCSAgIChA
cmVpc2VyNF9pbm9kZS0+cHNldCksIHRoYXQgaXMsIHBsdWdpbnMgdGhhdCBjYW5ub3QgYmUgZGVk
dWNlZAorCSAgIGZyb20gZmlsZSBtb2RlIGJpdHMpLCBmb3IgZXhhbXBsZSwgYWdncmVnYXRpb24s
IGludGVycG9sYXRpb24gZXRjLiAqLworCVBMVUdJTl9TVEFULAorCS8qIHRoaXMgZXh0ZW5zaW9u
IGNvbnRhaW5zIHBlcnNpc3RlbnQgaW5vZGUgZmxhZ3MuIFRoZXNlIGZsYWdzIGFyZQorCSAgIHNp
bmdsZSBiaXRzOiBpbW11dGFibGUsIGFwcGVuZCwgb25seSwgZXRjLiBMYXlvdXQgaXMgaW4KKwkg
ICByZWlzZXI0X2ZsYWdzX3N0YXQuICovCisJRkxBR1NfU1RBVCwKKwkvKiB0aGlzIGV4dGVuc2lv
biBjb250YWlucyBjYXBhYmlsaXRpZXMgc2V0cywgYXNzb2NpYXRlZCB3aXRoIHRoaXMKKwkgICBm
aWxlLiBMYXlvdXQgaXMgaW4gcmVpc2VyNF9jYXBhYmlsaXRpZXNfc3RhdCAqLworCUNBUEFCSUxJ
VElFU19TVEFULAorCS8qIHRoaXMgZXh0ZW5zaW9uIGNvbnRhaW5zIHNpemUgYW5kIHB1YmxpYyBp
ZCBvZiB0aGUgc2VjcmV0IGtleS4KKwkgICBMYXlvdXQgaXMgaW4gcmVpc2VyNF9jcnlwdG9fc3Rh
dCAqLworCUNSWVBUT19TVEFULAorCS8qIG9uLWRpc2sgc2xvdHMgb2Ygbm9uLWRlZmF1bHQgcGx1
Z2lucyBmb3IgaW5oZXJpdGFuY2UsIHdoaWNoCisJICAgYXJlIGV4dHJhY3RlZCB0byBzcGVjaWFs
IHBsdWdpbiB0YWJsZSAoQHJlaXNlcjRfaW5vZGUtPmhzZXQpLgorCSAgIEJ5IGRlZmF1bHQsIGNo
aWxkcmVuIG9mIHRoZSBvYmplY3Qgd2lsbCBpbmhlcml0IHBsdWdpbnMgZnJvbQorCSAgIGl0cyBt
YWluIHBsdWdpbiB0YWJsZSAocHNldCkuICovCisJSEVJUl9TVEFULAorCUxBU1RfU0RfRVhURU5T
SU9OLAorCS8qCisJICogaW5pdF9pbm9kZV9zdGF0aWNfc2QoKSBpdGVyYXRlcyBvdmVyIGV4dGVu
c2lvbiBtYXNrIHVudGlsIGFsbAorCSAqIG5vbi16ZXJvIGJpdHMgYXJlIHByb2Nlc3NlZC4gVGhp
cyBtZWFucywgdGhhdCBuZWl0aGVyIC0+cHJlc2VudCgpLAorCSAqIG5vciAtPmFic2VudCgpIG1l
dGhvZHMgd2lsbCBiZSBjYWxsZWQgZm9yIHN0YXQtZGF0YSBleHRlbnNpb25zIHRoYXQKKwkgKiBn
byBhZnRlciBsYXN0IHByZXNlbnQgZXh0ZW5zaW9uLiBCdXQgc29tZSBiYXNpYyBleHRlbnNpb25z
LCB3ZSB3YW50CisJICogZWl0aGVyIC0+YWJzZW50KCkgb3IgLT5wcmVzZW50KCkgbWV0aG9kIHRv
IGJlIGNhbGxlZCwgYmVjYXVzZSB0aGVzZQorCSAqIGV4dGVuc2lvbnMgc2V0IHVwIHNvbWV0aGlu
ZyBpbiBpbm9kZSBldmVuIHdoZW4gdGhleSBhcmUgbm90CisJICogcHJlc2VudC4gVGhpcyBpcyB3
aGF0IExBU1RfSU1QT1JUQU5UX1NEX0VYVEVOU0lPTiBpcyBmb3I6IGZvciBhbGwKKwkgKiBleHRl
bnNpb25zIGJlZm9yZSBhbmQgaW5jbHVkaW5nIExBU1RfSU1QT1JUQU5UX1NEX0VYVEVOU0lPTiBl
aXRoZXIKKwkgKiAtPnByZXNlbnQoKSwgb3IgLT5hYnNlbnQoKSBtZXRob2Qgd2lsbCBiZSBjYWxs
ZWQsIGluZGVwZW5kZW50bHkgb2YKKwkgKiB3aGF0IG90aGVyIGV4dGVuc2lvbnMgYXJlIHByZXNl
bnQuCisJICovCisJTEFTVF9JTVBPUlRBTlRfU0RfRVhURU5TSU9OID0gUExVR0lOX1NUQVQKK30g
c2RfZXh0X2JpdHM7CisKKy8qIG1pbmltYWwgc3RhdC1kYXRhLiBUaGlzIGFsbG93cyB0byBzdXBw
b3J0IGxpZ2h0LXdlaWdodCBmaWxlcy4gKi8KK3R5cGVkZWYgc3RydWN0IHJlaXNlcjRfc3RhdF9k
YXRhX2Jhc2UgeworCS8qICAwICovIF9fbGUxNiBleHRtYXNrOworCS8qICAyICovCit9IFBBQ0tF
RCByZWlzZXI0X3N0YXRfZGF0YV9iYXNlOworCit0eXBlZGVmIHN0cnVjdCByZWlzZXI0X2xpZ2h0
X3dlaWdodF9zdGF0IHsKKwkvKiAgMCAqLyBfX2xlMTYgbW9kZTsKKwkvKiAgMiAqLyBfX2xlMzIg
bmxpbms7CisJLyogIDYgKi8gX19sZTY0IHNpemU7CisJLyogc2l6ZSBpbiBieXRlcyAqLworCS8q
IDE0ICovCit9IFBBQ0tFRCByZWlzZXI0X2xpZ2h0X3dlaWdodF9zdGF0OworCit0eXBlZGVmIHN0
cnVjdCByZWlzZXI0X3VuaXhfc3RhdCB7CisJLyogb3duZXIgaWQgKi8KKwkvKiAgMCAqLyBfX2xl
MzIgdWlkOworCS8qIGdyb3VwIGlkICovCisJLyogIDQgKi8gX19sZTMyIGdpZDsKKwkvKiBhY2Nl
c3MgdGltZSAqLworCS8qICA4ICovIF9fbGUzMiBhdGltZTsKKwkvKiBtb2RpZmljYXRpb24gdGlt
ZSAqLworCS8qIDEyICovIF9fbGUzMiBtdGltZTsKKwkvKiBjaGFuZ2UgdGltZSAqLworCS8qIDE2
ICovIF9fbGUzMiBjdGltZTsKKwl1bmlvbiB7CisJCS8qIG1pbm9yOm1ham9yIGZvciBkZXZpY2Ug
ZmlsZXMgKi8KKwkJLyogMjAgKi8gX19sZTY0IHJkZXY7CisJCS8qIGJ5dGVzIHVzZWQgYnkgZmls
ZSAqLworCQkvKiAyMCAqLyBfX2xlNjQgYnl0ZXM7CisJfSB1OworCS8qIDI4ICovCit9IFBBQ0tF
RCByZWlzZXI0X3VuaXhfc3RhdDsKKworLyogc3ltbGluayBzdG9yZWQgYXMgcGFydCBvZiBpbm9k
ZSAqLwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9zeW1saW5rX3N0YXQgeworCWNoYXIgYm9keVsw
XTsKK30gUEFDS0VEIHJlaXNlcjRfc3ltbGlua19zdGF0OworCit0eXBlZGVmIHN0cnVjdCByZWlz
ZXI0X3BsdWdpbl9zbG90IHsKKwkvKiAgMCAqLyBfX2xlMTYgcHNldF9tZW1iOworCS8qICAyICov
IF9fbGUxNiBpZDsKKwkvKiAgNCAqLy8qIGhlcmUgcGx1Z2luIHN0b3JlcyBpdHMgcGVyc2lzdGVu
dCBzdGF0ZSAqLworfSBQQUNLRUQgcmVpc2VyNF9wbHVnaW5fc2xvdDsKKworLyogc3RhdC1kYXRh
IGV4dGVuc2lvbiBmb3IgZmlsZXMgd2l0aCBub24tc3RhbmRhcmQgcGx1Z2luLiAqLwordHlwZWRl
ZiBzdHJ1Y3QgcmVpc2VyNF9wbHVnaW5fc3RhdCB7CisJLyogbnVtYmVyIG9mIGFkZGl0aW9uYWwg
cGx1Z2lucywgYXNzb2NpYXRlZCB3aXRoIHRoaXMgb2JqZWN0ICovCisJLyogIDAgKi8gX19sZTE2
IHBsdWdpbnNfbm87CisJLyogIDIgKi8gcmVpc2VyNF9wbHVnaW5fc2xvdCBzbG90WzBdOworCS8q
ICAyICovCit9IFBBQ0tFRCByZWlzZXI0X3BsdWdpbl9zdGF0OworCisvKiBzdGF0LWRhdGEgZXh0
ZW5zaW9uIGZvciBpbm9kZSBmbGFncy4gQ3VycmVudGx5IGl0IGlzIGp1c3QgZml4ZWQtd2lkdGgg
MzIKKyAqIGJpdCBtYXNrLiBJZiBuZWVkIGFyaXNlLCB0aGlzIGNhbiBiZSByZXBsYWNlZCB3aXRo
IHZhcmlhYmxlIHdpZHRoCisgKiBiaXRtYXNrLiAqLwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9m
bGFnc19zdGF0IHsKKwkvKiAgMCAqLyBfX2xlMzIgZmxhZ3M7CisJLyogIDQgKi8KK30gUEFDS0VE
IHJlaXNlcjRfZmxhZ3Nfc3RhdDsKKwordHlwZWRlZiBzdHJ1Y3QgcmVpc2VyNF9jYXBhYmlsaXRp
ZXNfc3RhdCB7CisJLyogIDAgKi8gX19sZTMyIGVmZmVjdGl2ZTsKKwkvKiAgOCAqLyBfX2xlMzIg
cGVybWl0dGVkOworCS8qIDE2ICovCit9IFBBQ0tFRCByZWlzZXI0X2NhcGFiaWxpdGllc19zdGF0
OworCit0eXBlZGVmIHN0cnVjdCByZWlzZXI0X2NsdXN0ZXJfc3RhdCB7CisvKiB0aGlzIGRlZmlu
ZXMgY2x1c3RlciBzaXplIChhbiBhdHRyaWJ1dGUgb2YgY3J5cHRjb21wcmVzcyBvYmplY3RzKSBh
cyBQQUdFX1NJWkUgPDwgY2x1c3RlciBzaGlmdCAqLworCS8qIDAgKi8gZDggY2x1c3Rlcl9zaGlm
dDsKKwkvKiAxICovCit9IFBBQ0tFRCByZWlzZXI0X2NsdXN0ZXJfc3RhdDsKKwordHlwZWRlZiBz
dHJ1Y3QgcmVpc2VyNF9jcnlwdG9fc3RhdCB7CisJLyogc2VjcmV0IGtleSBzaXplLCBiaXRzICov
CisJLyogIDAgKi8gZDE2IGtleXNpemU7CisJLyogc2VjcmV0IGtleSBpZCAqLworCS8qICAyICov
IGQ4IGtleWlkWzBdOworCS8qIDIgKi8KK30gUEFDS0VEIHJlaXNlcjRfY3J5cHRvX3N0YXQ7CisK
K3R5cGVkZWYgc3RydWN0IHJlaXNlcjRfbGFyZ2VfdGltZXNfc3RhdCB7CisJLyogYWNjZXNzIHRp
bWUgKi8KKwkvKiAwICovIGQzMiBhdGltZTsKKwkvKiBtb2RpZmljYXRpb24gdGltZSAqLworCS8q
IDQgKi8gZDMyIG10aW1lOworCS8qIGNoYW5nZSB0aW1lICovCisJLyogOCAqLyBkMzIgY3RpbWU7
CisJLyogMTIgKi8KK30gUEFDS0VEIHJlaXNlcjRfbGFyZ2VfdGltZXNfc3RhdDsKKworLyogdGhp
cyBzdHJ1Y3R1cmUgaXMgZmlsbGVkIGJ5IHNkX2l0ZW1fc3RhdCAqLwordHlwZWRlZiBzdHJ1Y3Qg
c2Rfc3RhdCB7CisJaW50IGRpcnM7CisJaW50IGZpbGVzOworCWludCBvdGhlcnM7Cit9IHNkX3N0
YXQ7CisKKy8qIHBsdWdpbi0+aXRlbS5jb21tb24uKiAqLworZXh0ZXJuIHZvaWQgcHJpbnRfc2Qo
Y29uc3QgY2hhciAqcHJlZml4LCBjb29yZF90ICogY29vcmQpOworZXh0ZXJuIHZvaWQgaXRlbV9z
dGF0X3N0YXRpY19zZChjb25zdCBjb29yZF90ICogY29vcmQsIHZvaWQgKnZwKTsKKworLyogcGx1
Z2luLT5pdGVtLnMuc2QuKiAqLworZXh0ZXJuIGludCBpbml0X2lub2RlX3N0YXRpY19zZChzdHJ1
Y3QgaW5vZGUgKmlub2RlLCBjaGFyICpzZCwgaW50IGxlbik7CitleHRlcm4gaW50IHNhdmVfbGVu
X3N0YXRpY19zZChzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKK2V4dGVybiBpbnQgc2F2ZV9zdGF0aWNf
c2Qoc3RydWN0IGlub2RlICppbm9kZSwgY2hhciAqKmFyZWEpOworCisvKiBfX0ZTX1JFSVNFUjRf
UExVR0lOX0lURU1fU1RBVElDX1NUQVRfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBo
YXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6
IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vdGFpbC5jIGxp
bnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3RhaWwuYwotLS0gbGludXgtNS40LjE3
Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS90YWlsLmMJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3Rh
aWwuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MTIyMjMxOCArMDEwMApAQCAtMCwwICsxLDgxMCBA
QAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2lu
ZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAiaXRlbS5oIgorI2lu
Y2x1ZGUgIi4uLy4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4vLi4vcGFnZV9jYWNoZS5oIgorI2lu
Y2x1ZGUgIi4uLy4uL2NhcnJ5LmgiCisjaW5jbHVkZSAiLi4vLi4vdmZzX29wcy5oIgorCisjaW5j
bHVkZSA8YXNtL3VhY2Nlc3MuaD4KKyNpbmNsdWRlIDxsaW51eC9zd2FwLmg+CisjaW5jbHVkZSA8
bGludXgvd3JpdGViYWNrLmg+CisKKy8qIHBsdWdpbi0+dS5pdGVtLmIubWF4X2tleV9pbnNpZGUg
Ki8KK3JlaXNlcjRfa2V5ICptYXhfa2V5X2luc2lkZV90YWlsKGNvbnN0IGNvb3JkX3QgKmNvb3Jk
LCByZWlzZXI0X2tleSAqa2V5KQoreworCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCBrZXkpOwor
CXNldF9rZXlfb2Zmc2V0KGtleSwgZ2V0X2tleV9vZmZzZXQocmVpc2VyNF9tYXhfa2V5KCkpKTsK
KwlyZXR1cm4ga2V5OworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLmNhbl9jb250YWluX2tleSAq
LworaW50IGNhbl9jb250YWluX2tleV90YWlsKGNvbnN0IGNvb3JkX3QgKmNvb3JkLCBjb25zdCBy
ZWlzZXI0X2tleSAqa2V5LAorCQkJIGNvbnN0IHJlaXNlcjRfaXRlbV9kYXRhICpkYXRhKQorewor
CXJlaXNlcjRfa2V5IGl0ZW1fa2V5OworCisJaWYgKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNvb3Jk
KSAhPSBkYXRhLT5pcGx1ZykKKwkJcmV0dXJuIDA7CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29y
ZCwgJml0ZW1fa2V5KTsKKwlpZiAoZ2V0X2tleV9sb2NhbGl0eShrZXkpICE9IGdldF9rZXlfbG9j
YWxpdHkoJml0ZW1fa2V5KSB8fAorCSAgICBnZXRfa2V5X29iamVjdGlkKGtleSkgIT0gZ2V0X2tl
eV9vYmplY3RpZCgmaXRlbV9rZXkpKQorCQlyZXR1cm4gMDsKKworCXJldHVybiAxOworfQorCisv
KiBwbHVnaW4tPnUuaXRlbS5iLm1lcmdlYWJsZQorICAgZmlyc3QgaXRlbSBpcyBvZiB0YWlsIHR5
cGUgKi8KKy8qIEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTQpICovCitpbnQgbWVyZ2VhYmxl
X3RhaWwoY29uc3QgY29vcmRfdCAqcDEsIGNvbnN0IGNvb3JkX3QgKnAyKQoreworCXJlaXNlcjRf
a2V5IGtleTEsIGtleTI7CisKKwlhc3NlcnQoInZzLTUzNSIsIHBsdWdpbl9vZl9ncm91cChpdGVt
X3BsdWdpbl9ieV9jb29yZChwMSksCisJCQkJCSBVTklYX0ZJTEVfTUVUQURBVEFfSVRFTV9UWVBF
KSk7CisJYXNzZXJ0KCJ2cy0zNjUiLCBpdGVtX2lkX2J5X2Nvb3JkKHAxKSA9PSBGT1JNQVRUSU5H
X0lEKTsKKworCWlmIChpdGVtX2lkX2J5X2Nvb3JkKHAyKSAhPSBGT1JNQVRUSU5HX0lEKSB7CisJ
CS8qIHNlY29uZCBpdGVtIGlzIG9mIGFub3RoZXIgdHlwZSAqLworCQlyZXR1cm4gMDsKKwl9CisK
KwlpdGVtX2tleV9ieV9jb29yZChwMSwgJmtleTEpOworCWl0ZW1fa2V5X2J5X2Nvb3JkKHAyLCAm
a2V5Mik7CisJaWYgKGdldF9rZXlfbG9jYWxpdHkoJmtleTEpICE9IGdldF9rZXlfbG9jYWxpdHko
JmtleTIpIHx8CisJICAgIGdldF9rZXlfb2JqZWN0aWQoJmtleTEpICE9IGdldF9rZXlfb2JqZWN0
aWQoJmtleTIpCisJICAgIHx8IGdldF9rZXlfdHlwZSgma2V5MSkgIT0gZ2V0X2tleV90eXBlKCZr
ZXkyKSkgeworCQkvKiBpdGVtcyBvZiBkaWZmZXJlbnQgb2JqZWN0cyAqLworCQlyZXR1cm4gMDsK
Kwl9CisJaWYgKGdldF9rZXlfb2Zmc2V0KCZrZXkxKSArIG5yX3VuaXRzX3RhaWwocDEpICE9IGdl
dF9rZXlfb2Zmc2V0KCZrZXkyKSkgeworCQkvKiBub3QgYWRqYWNlbnQgaXRlbXMgKi8KKwkJcmV0
dXJuIDA7CisJfQorCXJldHVybiAxOworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLnByaW50Cisg
ICBwbHVnaW4tPnUuaXRlbS5iLmNoZWNrICovCisKKy8qIHBsdWdpbi0+dS5pdGVtLmIubnJfdW5p
dHMgKi8KK3Bvc19pbl9ub2RlX3QgbnJfdW5pdHNfdGFpbChjb25zdCBjb29yZF90ICogY29vcmQp
Cit7CisJcmV0dXJuIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKK30KKworLyogcGx1Z2lu
LT51Lml0ZW0uYi5sb29rdXAgKi8KK2xvb2t1cF9yZXN1bHQKK2xvb2t1cF90YWlsKGNvbnN0IHJl
aXNlcjRfa2V5ICoga2V5LCBsb29rdXBfYmlhcyBiaWFzLCBjb29yZF90ICogY29vcmQpCit7CisJ
cmVpc2VyNF9rZXkgaXRlbV9rZXk7CisJX191NjQgbG9va3VwZWQsIG9mZnNldDsKKwl1bnNpZ25l
ZCBucl91bml0czsKKworCWl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAmaXRlbV9rZXkpOworCW9m
ZnNldCA9IGdldF9rZXlfb2Zmc2V0KGl0ZW1fa2V5X2J5X2Nvb3JkKGNvb3JkLCAmaXRlbV9rZXkp
KTsKKwlucl91bml0cyA9IG5yX3VuaXRzX3RhaWwoY29vcmQpOworCisJLyoga2V5IHdlIGFyZSBs
b29raW5nIGZvciBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBrZXkgb2YgaXRlbSBAY29vcmQgKi8KKwlh
c3NlcnQoInZzLTQxNiIsIGtleWd0KGtleSwgJml0ZW1fa2V5KSk7CisKKwkvKiBvZmZzZXQgd2Ug
YXJlIGxvb2tpbmcgZm9yICovCisJbG9va3VwZWQgPSBnZXRfa2V5X29mZnNldChrZXkpOworCisJ
aWYgKGxvb2t1cGVkID49IG9mZnNldCAmJiBsb29rdXBlZCA8IG9mZnNldCArIG5yX3VuaXRzKSB7
CisJCS8qIGJ5dGUgd2UgYXJlIGxvb2tpbmcgZm9yIGlzIGluIHRoaXMgaXRlbSAqLworCQljb29y
ZC0+dW5pdF9wb3MgPSBsb29rdXBlZCAtIG9mZnNldDsKKwkJY29vcmQtPmJldHdlZW4gPSBBVF9V
TklUOworCQlyZXR1cm4gQ0JLX0NPT1JEX0ZPVU5EOworCX0KKworCS8qIHNldCBjb29yZCBhZnRl
ciBsYXN0IHVuaXQgKi8KKwljb29yZC0+dW5pdF9wb3MgPSBucl91bml0cyAtIDE7CisJY29vcmQt
PmJldHdlZW4gPSBBRlRFUl9VTklUOworCXJldHVybiBiaWFzID09CisJICAgIEZJTkRfTUFYX05P
VF9NT1JFX1RIQU4gPyBDQktfQ09PUkRfRk9VTkQgOiBDQktfQ09PUkRfTk9URk9VTkQ7Cit9CisK
Ky8qIHBsdWdpbi0+dS5pdGVtLmIucGFzdGUgKi8KK2ludAorcGFzdGVfdGFpbChjb29yZF90ICpj
b29yZCwgcmVpc2VyNF9pdGVtX2RhdGEgKmRhdGEsCisJICAgY2FycnlfcGx1Z2luX2luZm8gKmlu
Zm8gVU5VU0VEX0FSRykKK3sKKwl1bnNpZ25lZCBvbGRfaXRlbV9sZW5ndGg7CisJY2hhciAqaXRl
bTsKKworCS8qIGxlbmd0aCB0aGUgaXRlbSBoYWQgYmVmb3JlIHJlc2l6aW5nIGhhcyBiZWVuIHBl
cmZvcm1lZCAqLworCW9sZF9pdGVtX2xlbmd0aCA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3Jk
KSAtIGRhdGEtPmxlbmd0aDsKKworCS8qIHRhaWwgaXRlbXMgbmV2ZXIgZ2V0IHBhc3RlZCBpbiB0
aGUgbWlkZGxlICovCisJYXNzZXJ0KCJ2cy0zNjMiLAorCSAgICAgICAoY29vcmQtPnVuaXRfcG9z
ID09IDAgJiYgY29vcmQtPmJldHdlZW4gPT0gQkVGT1JFX1VOSVQpIHx8CisJICAgICAgIChjb29y
ZC0+dW5pdF9wb3MgPT0gb2xkX2l0ZW1fbGVuZ3RoIC0gMSAmJgorCQljb29yZC0+YmV0d2VlbiA9
PSBBRlRFUl9VTklUKSB8fAorCSAgICAgICAoY29vcmQtPnVuaXRfcG9zID09IDAgJiYgb2xkX2l0
ZW1fbGVuZ3RoID09IDAKKwkJJiYgY29vcmQtPmJldHdlZW4gPT0gQVRfVU5JVCkpOworCisJaXRl
bSA9IGl0ZW1fYm9keV9ieV9jb29yZChjb29yZCk7CisJaWYgKGNvb3JkLT51bml0X3BvcyA9PSAw
KQorCQkvKiBtYWtlIHNwYWNlIGZvciBwYXN0ZWQgZGF0YSB3aGVuIHBhc3RpbmcgYXQgdGhlIGJl
Z2lubmluZyBvZgorCQkgICB0aGUgaXRlbSAqLworCQltZW1tb3ZlKGl0ZW0gKyBkYXRhLT5sZW5n
dGgsIGl0ZW0sIG9sZF9pdGVtX2xlbmd0aCk7CisKKwlpZiAoY29vcmQtPmJldHdlZW4gPT0gQUZU
RVJfVU5JVCkKKwkJY29vcmQtPnVuaXRfcG9zKys7CisKKwlpZiAoZGF0YS0+ZGF0YSkgeworCQlh
c3NlcnQoInZzLTU1NCIsIGRhdGEtPnVzZXIgPT0gMCB8fCBkYXRhLT51c2VyID09IDEpOworCQlp
ZiAoZGF0YS0+dXNlcikgeworCQkJYXNzZXJ0KCJuaWtpdGEtMzAzNSIsIHJlaXNlcjRfc2NoZWR1
bGFibGUoKSk7CisJCQkvKiBjb3B5IGZyb20gdXNlciBzcGFjZSAqLworCQkJaWYgKF9fY29weV9m
cm9tX3VzZXIoaXRlbSArIGNvb3JkLT51bml0X3BvcywKKwkJCQkJICAgICAoY29uc3QgY2hhciBf
X3VzZXIgKilkYXRhLT5kYXRhLAorCQkJCQkgICAgICh1bnNpZ25lZClkYXRhLT5sZW5ndGgpKQor
CQkJCXJldHVybiBSRVRFUlIoLUVGQVVMVCk7CisJCX0gZWxzZQorCQkJLyogY29weSBmcm9tIGtl
cm5lbCBzcGFjZSAqLworCQkJbWVtY3B5KGl0ZW0gKyBjb29yZC0+dW5pdF9wb3MsIGRhdGEtPmRh
dGEsCisJCQkgICAgICAgKHVuc2lnbmVkKWRhdGEtPmxlbmd0aCk7CisJfSBlbHNlIHsKKwkJbWVt
c2V0KGl0ZW0gKyBjb29yZC0+dW5pdF9wb3MsIDAsICh1bnNpZ25lZClkYXRhLT5sZW5ndGgpOwor
CX0KKwlyZXR1cm4gMDsKK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5mYXN0X3Bhc3RlICovCisK
Ky8qIHBsdWdpbi0+dS5pdGVtLmIuY2FuX3NoaWZ0CisgICBudW1iZXIgb2YgdW5pdHMgaXMgcmV0
dXJuZWQgdmlhIHJldHVybiB2YWx1ZSwgbnVtYmVyIG9mIGJ5dGVzIHZpYSBAc2l6ZS4gRm9yCisg
ICB0YWlsIGl0ZW1zIHRoZXkgY29pbmNpZGUgKi8KK2ludAorY2FuX3NoaWZ0X3RhaWwodW5zaWdu
ZWQgZnJlZV9zcGFjZSwgY29vcmRfdCAqIHNvdXJjZSBVTlVTRURfQVJHLAorCSAgICAgICB6bm9k
ZSAqIHRhcmdldCBVTlVTRURfQVJHLCBzaGlmdF9kaXJlY3Rpb24gZGlyZWN0aW9uIFVOVVNFRF9B
UkcsCisJICAgICAgIHVuc2lnbmVkICpzaXplLCB1bnNpZ25lZCB3YW50KQoreworCS8qIG1ha2Ug
c3VyZSB0aGF0IHRoYXQgd2UgZG8gbm90IHdhbnQgdG8gc2hpZnQgbW9yZSB0aGFuIHdlIGhhdmUg
Ki8KKwlhc3NlcnQoInZzLTM2NCIsIHdhbnQgPiAwCisJICAgICAgICYmIHdhbnQgPD0gKHVuc2ln
bmVkKWl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKHNvdXJjZSkpOworCisJKnNpemUgPSBtaW4od2FudCwg
ZnJlZV9zcGFjZSk7CisJcmV0dXJuICpzaXplOworfQorCisvKiBwbHVnaW4tPnUuaXRlbS5iLmNv
cHlfdW5pdHMgKi8KK3ZvaWQKK2NvcHlfdW5pdHNfdGFpbChjb29yZF90ICogdGFyZ2V0LCBjb29y
ZF90ICogc291cmNlLAorCQl1bnNpZ25lZCBmcm9tLCB1bnNpZ25lZCBjb3VudCwKKwkJc2hpZnRf
ZGlyZWN0aW9uIHdoZXJlX2lzX2ZyZWVfc3BhY2UsCisJCXVuc2lnbmVkIGZyZWVfc3BhY2UgVU5V
U0VEX0FSRykKK3sKKwkvKiBtYWtlIHN1cmUgdGhhdCBpdGVtIEB0YXJnZXQgaXMgZXhwYW5kZWQg
YWxyZWFkeSAqLworCWFzc2VydCgidnMtMzY2IiwgKHVuc2lnbmVkKWl0ZW1fbGVuZ3RoX2J5X2Nv
b3JkKHRhcmdldCkgPj0gY291bnQpOworCWFzc2VydCgidnMtMzcwIiwgZnJlZV9zcGFjZSA+PSBj
b3VudCk7CisKKwlpZiAod2hlcmVfaXNfZnJlZV9zcGFjZSA9PSBTSElGVF9MRUZUKSB7CisJCS8q
IGFwcGVuZCBpdGVtIEB0YXJnZXQgd2l0aCBAY291bnQgZmlyc3QgYnl0ZXMgb2YgQHNvdXJjZSAq
LworCQlhc3NlcnQoInZzLTM2NSIsIGZyb20gPT0gMCk7CisKKwkJbWVtY3B5KChjaGFyICopaXRl
bV9ib2R5X2J5X2Nvb3JkKHRhcmdldCkgKworCQkgICAgICAgaXRlbV9sZW5ndGhfYnlfY29vcmQo
dGFyZ2V0KSAtIGNvdW50LAorCQkgICAgICAgKGNoYXIgKilpdGVtX2JvZHlfYnlfY29vcmQoc291
cmNlKSwgY291bnQpOworCX0gZWxzZSB7CisJCS8qIHRhcmdldCBpdGVtIGlzIG1vdmVkIHRvIHJp
Z2h0IGFscmVhZHkgKi8KKwkJcmVpc2VyNF9rZXkga2V5OworCisJCWFzc2VydCgidnMtMzY3IiwK
KwkJICAgICAgICh1bnNpZ25lZClpdGVtX2xlbmd0aF9ieV9jb29yZChzb3VyY2UpID09IGZyb20g
KyBjb3VudCk7CisKKwkJbWVtY3B5KChjaGFyICopaXRlbV9ib2R5X2J5X2Nvb3JkKHRhcmdldCks
CisJCSAgICAgICAoY2hhciAqKWl0ZW1fYm9keV9ieV9jb29yZChzb3VyY2UpICsgZnJvbSwgY291
bnQpOworCisJCS8qIG5ldyB1bml0cyBhcmUgaW5zZXJ0ZWQgYmVmb3JlIGZpcnN0IHVuaXQgaW4g
YW4gaXRlbSwKKwkJICAgdGhlcmVmb3JlLCB3ZSBoYXZlIHRvIHVwZGF0ZSBpdGVtIGtleSAqLwor
CQlpdGVtX2tleV9ieV9jb29yZChzb3VyY2UsICZrZXkpOworCQlzZXRfa2V5X29mZnNldCgma2V5
LCBnZXRfa2V5X29mZnNldCgma2V5KSArIGZyb20pOworCisJCW5vZGVfcGx1Z2luX2J5X25vZGUo
dGFyZ2V0LT5ub2RlKS0+dXBkYXRlX2l0ZW1fa2V5KHRhcmdldCwgJmtleSwKKwkJCQkJCQkJICAg
TlVMTCAvKmluZm8gKi8pOworCX0KK30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5jcmVhdGVfaG9v
ayAqLworCisvKiBpdGVtX3BsdWdpbi0+Yi5raWxsX2hvb2sKKyAgIHRoaXMgaXMgY2FsbGVkIHdo
ZW4gQGNvdW50IHVuaXRzIHN0YXJ0aW5nIGZyb20gQGZyb20tdGggb25lIGFyZSBnb2luZyB0byBi
ZSByZW1vdmVkCisgICAqLworaW50CitraWxsX2hvb2tfdGFpbChjb25zdCBjb29yZF90ICogY29v
cmQsIHBvc19pbl9ub2RlX3QgZnJvbSwKKwkgICAgICAgcG9zX2luX25vZGVfdCBjb3VudCwgc3Ry
dWN0IGNhcnJ5X2tpbGxfZGF0YSAqa2RhdGEpCit7CisJcmVpc2VyNF9rZXkga2V5OworCWxvZmZf
dCBzdGFydCwgZW5kOworCisJYXNzZXJ0KCJ2cy0xNTc3Iiwga2RhdGEpOworCWFzc2VydCgidnMt
MTU3OSIsIGtkYXRhLT5pbm9kZSk7CisKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJmtleSk7
CisJc3RhcnQgPSBnZXRfa2V5X29mZnNldCgma2V5KSArIGZyb207CisJZW5kID0gc3RhcnQgKyBj
b3VudDsKKwlmYWtlX2tpbGxfaG9va190YWlsKGtkYXRhLT5pbm9kZSwgc3RhcnQsIGVuZCwga2Rh
dGEtPnBhcmFtcy50cnVuY2F0ZSk7CisJcmV0dXJuIDA7Cit9CisKKy8qIHBsdWdpbi0+dS5pdGVt
LmIuc2hpZnRfaG9vayAqLworCisvKiBoZWxwZXIgZm9yIGtpbGxfdW5pdHNfdGFpbCBhbmQgY3V0
X3VuaXRzX3RhaWwgKi8KK3N0YXRpYyBpbnQKK2RvX2N1dF9vcl9raWxsKGNvb3JkX3QgKiBjb29y
ZCwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCSAgICAgICByZWlzZXI0
X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsIHJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0KQoreworCXBv
c19pbl9ub2RlX3QgY291bnQ7CisKKwkvKiB0aGlzIG1ldGhvZCBpcyBvbmx5IGNhbGxlZCB0byBy
ZW1vdmUgcGFydCBvZiBpdGVtICovCisJYXNzZXJ0KCJ2cy0zNzQiLCAodG8gLSBmcm9tICsgMSkg
PCBpdGVtX2xlbmd0aF9ieV9jb29yZChjb29yZCkpOworCS8qIHRhaWxzIGl0ZW1zIGFyZSBuZXZl
ciBjdXQgZnJvbSB0aGUgbWlkZGxlIG9mIGFuIGl0ZW0gKi8KKwlhc3NlcnQoInZzLTM5NiIsIGVy
Z28oZnJvbSAhPSAwLCB0byA9PSBjb29yZF9sYXN0X3VuaXRfcG9zKGNvb3JkKSkpOworCWFzc2Vy
dCgidnMtMTU1OCIsIGVyZ28oZnJvbSA9PSAwLCB0byA8IGNvb3JkX2xhc3RfdW5pdF9wb3MoY29v
cmQpKSk7CisKKwljb3VudCA9IHRvIC0gZnJvbSArIDE7CisKKwlpZiAoc21hbGxlc3RfcmVtb3Zl
ZCkgeworCQkvKiBzdG9yZSBzbWFsbGVzdCBrZXkgcmVtb3ZlZCAqLworCQlpdGVtX2tleV9ieV9j
b29yZChjb29yZCwgc21hbGxlc3RfcmVtb3ZlZCk7CisJCXNldF9rZXlfb2Zmc2V0KHNtYWxsZXN0
X3JlbW92ZWQsCisJCQkgICAgICAgZ2V0X2tleV9vZmZzZXQoc21hbGxlc3RfcmVtb3ZlZCkgKyBm
cm9tKTsKKwl9CisJaWYgKG5ld19maXJzdCkgeworCQkvKiBoZWFkIG9mIGl0ZW0gaXMgY3V0ICov
CisJCWFzc2VydCgidnMtMTUyOSIsIGZyb20gPT0gMCk7CisKKwkJaXRlbV9rZXlfYnlfY29vcmQo
Y29vcmQsIG5ld19maXJzdCk7CisJCXNldF9rZXlfb2Zmc2V0KG5ld19maXJzdCwKKwkJCSAgICAg
ICBnZXRfa2V5X29mZnNldChuZXdfZmlyc3QpICsgZnJvbSArIGNvdW50KTsKKwl9CisKKwlpZiAo
UkVJU0VSNF9ERUJVRykKKwkJbWVtc2V0KChjaGFyICopaXRlbV9ib2R5X2J5X2Nvb3JkKGNvb3Jk
KSArIGZyb20sIDAsIGNvdW50KTsKKwlyZXR1cm4gY291bnQ7Cit9CisKKy8qIHBsdWdpbi0+dS5p
dGVtLmIuY3V0X3VuaXRzICovCitpbnQKK2N1dF91bml0c190YWlsKGNvb3JkX3QgKiBjb29yZCwg
cG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCSAgICAgICBzdHJ1Y3QgY2Fy
cnlfY3V0X2RhdGEgKmNkYXRhIFVOVVNFRF9BUkcsCisJICAgICAgIHJlaXNlcjRfa2V5ICogc21h
bGxlc3RfcmVtb3ZlZCwgcmVpc2VyNF9rZXkgKiBuZXdfZmlyc3QpCit7CisJcmV0dXJuIGRvX2N1
dF9vcl9raWxsKGNvb3JkLCBmcm9tLCB0bywgc21hbGxlc3RfcmVtb3ZlZCwgbmV3X2ZpcnN0KTsK
K30KKworLyogcGx1Z2luLT51Lml0ZW0uYi5raWxsX3VuaXRzICovCitpbnQKK2tpbGxfdW5pdHNf
dGFpbChjb29yZF90ICogY29vcmQsIHBvc19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0
bywKKwkJc3RydWN0IGNhcnJ5X2tpbGxfZGF0YSAqa2RhdGEsIHJlaXNlcjRfa2V5ICogc21hbGxl
c3RfcmVtb3ZlZCwKKwkJcmVpc2VyNF9rZXkgKiBuZXdfZmlyc3QpCit7CisJa2lsbF9ob29rX3Rh
aWwoY29vcmQsIGZyb20sIHRvIC0gZnJvbSArIDEsIGtkYXRhKTsKKwlyZXR1cm4gZG9fY3V0X29y
X2tpbGwoY29vcmQsIGZyb20sIHRvLCBzbWFsbGVzdF9yZW1vdmVkLCBuZXdfZmlyc3QpOworfQor
CisvKiBwbHVnaW4tPnUuaXRlbS5iLnVuaXRfa2V5ICovCityZWlzZXI0X2tleSAqdW5pdF9rZXlf
dGFpbChjb25zdCBjb29yZF90ICogY29vcmQsIHJlaXNlcjRfa2V5ICoga2V5KQoreworCWFzc2Vy
dCgidnMtMzc1IiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpOworCisJaXRlbV9rZXlf
YnlfY29vcmQoY29vcmQsIGtleSk7CisJc2V0X2tleV9vZmZzZXQoa2V5LCAoZ2V0X2tleV9vZmZz
ZXQoa2V5KSArIGNvb3JkLT51bml0X3BvcykpOworCisJcmV0dXJuIGtleTsKK30KKworLyogcGx1
Z2luLT51Lml0ZW0uYi5lc3RpbWF0ZQorICAgcGx1Z2luLT51Lml0ZW0uYi5pdGVtX2RhdGFfYnlf
ZmxvdyAqLworCisvKiB0YWlsIHJlZHBhZ2UgZnVuY3Rpb24uIEl0IGlzIGNhbGxlZCBmcm9tIHJl
YWRwYWdlX3RhaWwoKS4gKi8KK3N0YXRpYyBpbnQgZG9fcmVhZHBhZ2VfdGFpbCh1Zl9jb29yZF90
ICp1Zl9jb29yZCwgc3RydWN0IHBhZ2UgKnBhZ2UpCit7CisJdGFwX3QgdGFwOworCWludCByZXN1
bHQ7CisJY29vcmRfdCBjb29yZDsKKwlsb2NrX2hhbmRsZSBsaDsKKwlpbnQgY291bnQsIG1hcHBl
ZDsKKwlzdHJ1Y3QgaW5vZGUgKmlub2RlOworCWNoYXIgKnBhZ2VkYXRhOworCisJLyogc2F2aW5n
IHBhc3NlZCBjb29yZCBpbiBvcmRlciB0byBkbyBub3QgbW92ZSBpdCBieSB0YXAuICovCisJaW5p
dF9saCgmbGgpOworCWNvcHlfbGgoJmxoLCB1Zl9jb29yZC0+bGgpOworCWlub2RlID0gcGFnZS0+
bWFwcGluZy0+aG9zdDsKKwljb29yZF9kdXAoJmNvb3JkLCAmdWZfY29vcmQtPmNvb3JkKTsKKwor
CXJlaXNlcjRfdGFwX2luaXQoJnRhcCwgJmNvb3JkLCAmbGgsIFpOT0RFX1JFQURfTE9DSyk7CisK
KwlpZiAoKHJlc3VsdCA9IHJlaXNlcjRfdGFwX2xvYWQoJnRhcCkpKQorCQlnb3RvIG91dF90YXBf
ZG9uZTsKKworCS8qIGxvb2t1cCB1bnRpbCBwYWdlIGlzIGZpbGxlZCB1cC4gKi8KKwlmb3IgKG1h
cHBlZCA9IDA7IG1hcHBlZCA8IFBBR0VfU0laRTsgKSB7CisJCS8qIG51bWJlciBvZiBieXRlcyB0
byBiZSBjb3BpZWQgdG8gcGFnZSAqLworCQljb3VudCA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKCZj
b29yZCkgLSBjb29yZC51bml0X3BvczsKKwkJaWYgKGNvdW50ID4gUEFHRV9TSVpFIC0gbWFwcGVk
KQorCQkJY291bnQgPSBQQUdFX1NJWkUgLSBtYXBwZWQ7CisKKwkJLyogYXR0YWNoIEBwYWdlIHRv
IGFkZHJlc3Mgc3BhY2UgYW5kIGdldCBkYXRhIGFkZHJlc3MgKi8KKwkJcGFnZWRhdGEgPSBrbWFw
X2F0b21pYyhwYWdlKTsKKworCQkvKiBjb3B5IHRhaWwgaXRlbSB0byBwYWdlICovCisJCW1lbWNw
eShwYWdlZGF0YSArIG1hcHBlZCwKKwkJICAgICAgICgoY2hhciAqKWl0ZW1fYm9keV9ieV9jb29y
ZCgmY29vcmQpICsgY29vcmQudW5pdF9wb3MpLAorCQkgICAgICAgY291bnQpOworCQltYXBwZWQg
Kz0gY291bnQ7CisKKwkJZmx1c2hfZGNhY2hlX3BhZ2UocGFnZSk7CisKKwkJLyogZGV0dGFjaCBw
YWdlIGZyb20gYWRkcmVzcyBzcGFjZSAqLworCQlrdW5tYXBfYXRvbWljKHBhZ2VkYXRhKTsKKwor
CQkvKiBHZXR0aW5nIG5leHQgdGFpbCBpdGVtLiAqLworCQlpZiAobWFwcGVkIDwgUEFHRV9TSVpF
KSB7CisJCQkvKgorCQkJICogdW5sb2NrIHBhZ2UgaW4gb3JkZXIgdG8gYXZvaWQga2VlcCBpdCBs
b2NrZWQKKwkJCSAqIGR1cmluZyB0cmVlIGxvb2t1cCwgd2hpY2ggdGFrZXMgbG9uZyB0ZXJtIGxv
Y2tzCisJCQkgKi8KKwkJCXVubG9ja19wYWdlKHBhZ2UpOworCisJCQkvKiBnZXR0aW5nIHJpZ2h0
IG5laWdoYm91ci4gKi8KKwkJCXJlc3VsdCA9IGdvX2Rpcl9lbCgmdGFwLCBSSUdIVF9TSURFLCAw
KTsKKworCQkJLyogbG9jayBwYWdlIGJhY2sgKi8KKwkJCWxvY2tfcGFnZShwYWdlKTsKKwkJCWlm
IChQYWdlVXB0b2RhdGUocGFnZSkpIHsKKwkJCQkvKgorCQkJCSAqIGFub3RoZXIgdGhyZWFkIHJl
YWQgdGhlIHBhZ2UsIHdlIGhhdmUKKwkJCQkgKiBub3RoaW5nIHRvIGRvCisJCQkJICovCisJCQkJ
cmVzdWx0ID0gMDsKKwkJCQlnb3RvIG91dF91bmxvY2tfcGFnZTsKKwkJCX0KKworCQkJaWYgKHJl
c3VsdCkgeworCQkJCWlmIChyZXN1bHQgPT0gLUVfTk9fTkVJR0hCT1IpIHsKKwkJCQkJLyoKKwkJ
CQkJICogcmlndGggbmVpZ2hib3IgaXMgbm90IGEgZm9ybWF0dGVkCisJCQkJCSAqIG5vZGUKKwkJ
CQkJICovCisJCQkJCXJlc3VsdCA9IDA7CisJCQkJCWdvdG8gZG9uZTsKKwkJCQl9IGVsc2Ugewor
CQkJCQlnb3RvIG91dF90YXBfcmVsc2U7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlpZiAoIWlu
b2RlX2ZpbGVfcGx1Z2luKGlub2RlKS0+CisJCQkJICAgIG93bnNfaXRlbShpbm9kZSwgJmNvb3Jk
KSkgeworCQkJCQkvKiBpdGVtIG9mIGFub3RoZXIgZmlsZSBpcyBmb3VuZCAqLworCQkJCQlyZXN1
bHQgPSAwOworCQkJCQlnb3RvIGRvbmU7CisJCQkJfQorCQkJfQorCQl9CisJfQorCisgZG9uZToK
KwlpZiAobWFwcGVkICE9IFBBR0VfU0laRSkKKwkJemVyb191c2VyX3NlZ21lbnQocGFnZSwgbWFw
cGVkLCBQQUdFX1NJWkUpOworCVNldFBhZ2VVcHRvZGF0ZShwYWdlKTsKKyBvdXRfdW5sb2NrX3Bh
Z2U6CisJdW5sb2NrX3BhZ2UocGFnZSk7Cisgb3V0X3RhcF9yZWxzZToKKwlyZWlzZXI0X3RhcF9y
ZWxzZSgmdGFwKTsKKyBvdXRfdGFwX2RvbmU6CisJcmVpc2VyNF90YXBfZG9uZSgmdGFwKTsKKwly
ZXR1cm4gcmVzdWx0OworfQorCisvKgorICogcGx1Z2luLT5zLmZpbGUucmVhZHBhZ2UKKyAqCisg
KiByZWlzZXI0X3JlYWRfZGlzcGF0Y2gtPnJlYWRfdW5peF9maWxlLT5wYWdlX2NhY2hlX3JlYWRh
aGVhZC0+CisgKiAtPnJlaXNlcjRfcmVhZHBhZ2VfZGlzcGF0Y2gtPnJlYWRwYWdlX3VuaXhfZmls
ZS0+cmVhZHBhZ2VfdGFpbAorICogb3IKKyAqIGZpbGVtYXBfZmF1bHQtPnJlaXNlcjRfcmVhZHBh
Z2VfZGlzcGF0Y2gtPnJlYWRwYWdlX3VuaXhfZmlsZS0+cmVhZHBhZ2VfdGFpbAorICoKKyAqIEF0
IHRoZSBiZWdpbm5pbmc6IGNvb3JkLT5ub2RlIGlzIHJlYWQgbG9ja2VkLCB6bG9hZGVkLCBwYWdl
IGlzIGxvY2tlZCwKKyAqIGNvb3JkIGlzIHNldCB0byBleGlzdGluZyB1bml0IGluc2lkZSBvZiB0
YWlsIGl0ZW0uCisgKi8KK2ludCByZWFkcGFnZV90YWlsKHZvaWQgKnZwLCBzdHJ1Y3QgcGFnZSAq
cGFnZSkKK3sKKwl1Zl9jb29yZF90ICp1Zl9jb29yZCA9IHZwOworCU9OX0RFQlVHKGNvb3JkX3Qg
KiBjb29yZCA9ICZ1Zl9jb29yZC0+Y29vcmQpOworCU9OX0RFQlVHKHJlaXNlcjRfa2V5IGtleSk7
CisKKwlhc3NlcnQoInVta2EtMjUxNSIsIFBhZ2VMb2NrZWQocGFnZSkpOworCWFzc2VydCgidW1r
YS0yNTE2IiwgIVBhZ2VVcHRvZGF0ZShwYWdlKSk7CisJYXNzZXJ0KCJ1bWthLTI1MTciLCAhanBy
aXZhdGUocGFnZSkgJiYgIVBhZ2VQcml2YXRlKHBhZ2UpKTsKKwlhc3NlcnQoInVta2EtMjUxOCIs
IHBhZ2UtPm1hcHBpbmcgJiYgcGFnZS0+bWFwcGluZy0+aG9zdCk7CisKKwlhc3NlcnQoInVta2Et
MjUxOSIsIHpub2RlX2lzX2xvYWRlZChjb29yZC0+bm9kZSkpOworCWFzc2VydCgidW1rYS0yNTIw
IiwgaXRlbV9pc190YWlsKGNvb3JkKSk7CisJYXNzZXJ0KCJ1bWthLTI1MjEiLCBjb29yZF9pc19l
eGlzdGluZ191bml0KGNvb3JkKSk7CisJYXNzZXJ0KCJ1bWthLTI1MjIiLCB6bm9kZV9pc19ybG9j
a2VkKGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJ1bWthLTI1MjMiLAorCSAgICAgICBwYWdlLT5t
YXBwaW5nLT5ob3N0LT5pX2lubyA9PQorCSAgICAgICBnZXRfa2V5X29iamVjdGlkKGl0ZW1fa2V5
X2J5X2Nvb3JkKGNvb3JkLCAma2V5KSkpOworCisJcmV0dXJuIGRvX3JlYWRwYWdlX3RhaWwodWZf
Y29vcmQsIHBhZ2UpOworfQorCisvKioKKyAqIG92ZXJ3cml0ZV90YWlsCisgKiBAZmxvdzoKKyAq
IEBjb29yZDoKKyAqCisgKiBPdmVyd3JpdGVzIHRhaWwgaXRlbSBvciBpdHMgcGFydCBieSB1c2Vy
IGRhdGEuIFJldHVybnMgbnVtYmVyIG9mIGJ5dGVzCisgKiB3cml0dGVuIG9yIGVycm9yIGNvZGUu
CisgKi8KK3N0YXRpYyBpbnQgb3ZlcndyaXRlX3RhaWwoZmxvd190ICpmbG93LCBjb29yZF90ICpj
b29yZCkKK3sKKwl1bnNpZ25lZCBjb3VudDsKKworCWFzc2VydCgidnMtNTcwIiwgZmxvdy0+dXNl
ciA9PSAxKTsKKwlhc3NlcnQoInZzLTk0NiIsIGZsb3ctPmRhdGEpOworCWFzc2VydCgidnMtOTQ3
IiwgY29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpOworCWFzc2VydCgidnMtOTQ4Iiwgem5v
ZGVfaXNfd3JpdGVfbG9ja2VkKGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzAzNiIs
IHJlaXNlcjRfc2NoZWR1bGFibGUoKSk7CisKKwljb3VudCA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3Jk
KGNvb3JkKSAtIGNvb3JkLT51bml0X3BvczsKKwlpZiAoY291bnQgPiBmbG93LT5sZW5ndGgpCisJ
CWNvdW50ID0gZmxvdy0+bGVuZ3RoOworCisJaWYgKF9fY29weV9mcm9tX3VzZXIoKGNoYXIgKilp
dGVtX2JvZHlfYnlfY29vcmQoY29vcmQpICsgY29vcmQtPnVuaXRfcG9zLAorCQkJICAgICAoY29u
c3QgY2hhciBfX3VzZXIgKilmbG93LT5kYXRhLCBjb3VudCkpCisJCXJldHVybiBSRVRFUlIoLUVG
QVVMVCk7CisKKwl6bm9kZV9tYWtlX2RpcnR5KGNvb3JkLT5ub2RlKTsKKwlyZXR1cm4gY291bnQ7
Cit9CisKKy8qKgorICogaW5zZXJ0X2ZpcnN0X3RhaWwKKyAqIEBpbm9kZToKKyAqIEBmbG93Ogor
ICogQGNvb3JkOgorICogQGxoOgorICoKKyAqIFJldHVybnMgbnVtYmVyIG9mIGJ5dGVzIHdyaXR0
ZW4gb3IgZXJyb3IgY29kZS4KKyAqLworc3RhdGljIHNzaXplX3QgaW5zZXJ0X2ZpcnN0X3RhaWwo
c3RydWN0IGlub2RlICppbm9kZSwgZmxvd190ICpmbG93LAorCQkJCSBjb29yZF90ICpjb29yZCwg
bG9ja19oYW5kbGUgKmxoKQoreworCWludCByZXN1bHQ7CisJbG9mZl90IHRvX3dyaXRlOworCXN0
cnVjdCB1bml4X2ZpbGVfaW5mbyAqdWZfaW5mbzsKKworCWlmIChnZXRfa2V5X29mZnNldCgmZmxv
dy0+a2V5KSAhPSAwKSB7CisJCS8qCisJCSAqIGZpbGUgaXMgZW1wdHkgYW5kIHdlIGhhdmUgdG8g
d3JpdGUgbm90IHRvIHRoZSBiZWdpbm5pbmcgb2YKKwkJICogZmlsZS4gQ3JlYXRlIGEgaG9sZSBh
dCB0aGUgYmVnaW5uaW5nIG9mIGZpbGUuIE9uIHN1Y2Nlc3MKKwkJICogaW5zZXJ0X2Zsb3cgcmV0
dXJucyAwIGFzIG51bWJlciBvZiB3cml0dGVuIGJ5dGVzIHdoaWNoIGlzCisJCSAqIHdoYXQgd2Ug
aGF2ZSB0byByZXR1cm4gb24gcGFkZGluZyBhIGZpbGUgd2l0aCBob2xlcworCQkgKi8KKwkJZmxv
dy0+ZGF0YSA9IE5VTEw7CisJCWZsb3ctPmxlbmd0aCA9IGdldF9rZXlfb2Zmc2V0KCZmbG93LT5r
ZXkpOworCQlzZXRfa2V5X29mZnNldCgmZmxvdy0+a2V5LCAwKTsKKwkJLyoKKwkJICogaG9sZXMg
aW4gZmlsZXMgYnVpbHQgb2YgdGFpbHMgYXJlIHN0b3JlZCBqdXN0IGxpa2UgaWYgdGhlcmUKKwkJ
ICogd2VyZSByZWFsIGRhdGEgd2hpY2ggYXJlIGFsbCB6ZXJvcy4KKwkJICovCisJCWlub2RlX2Fk
ZF9ieXRlcyhpbm9kZSwgZmxvdy0+bGVuZ3RoKTsKKwkJcmVzdWx0ID0gcmVpc2VyNF9pbnNlcnRf
Zmxvdyhjb29yZCwgbGgsIGZsb3cpOworCQlpZiAoZmxvdy0+bGVuZ3RoKQorCQkJaW5vZGVfc3Vi
X2J5dGVzKGlub2RlLCBmbG93LT5sZW5ndGgpOworCisJCXVmX2luZm8gPSB1bml4X2ZpbGVfaW5v
ZGVfZGF0YShpbm9kZSk7CisKKwkJLyoKKwkJICogZmlyc3QgaXRlbSBpbnNlcnRpb24gaXMgb25s
eSBwb3NzaWJsZSB3aGVuIHdyaXRpbmcgdG8gZW1wdHkKKwkJICogZmlsZSBvciBwZXJmb3JtaW5n
IHRhaWwgY29udmVyc2lvbgorCQkgKi8KKwkJYXNzZXJ0KCIiLCAodWZfaW5mby0+Y29udGFpbmVy
ID09IFVGX0NPTlRBSU5FUl9FTVBUWSB8fAorCQkJICAgIChyZWlzZXI0X2lub2RlX2dldF9mbGFn
KGlub2RlLAorCQkJCQkJICAgIFJFSVNFUjRfUEFSVF9NSVhFRCkgJiYKKwkJCSAgICAgcmVpc2Vy
NF9pbm9kZV9nZXRfZmxhZyhpbm9kZSwKKwkJCQkJCSAgICBSRUlTRVI0X1BBUlRfSU5fQ09OVikp
KSk7CisJCS8qIGlmIGZpbGUgd2FzIGVtcHR5IC0gdXBkYXRlIGl0cyBzdGF0ZSAqLworCQlpZiAo
cmVzdWx0ID09IDAgJiYgdWZfaW5mby0+Y29udGFpbmVyID09IFVGX0NPTlRBSU5FUl9FTVBUWSkK
KwkJCXVmX2luZm8tPmNvbnRhaW5lciA9IFVGX0NPTlRBSU5FUl9UQUlMUzsKKwkJcmV0dXJuIHJl
c3VsdDsKKwl9CisKKwlpbm9kZV9hZGRfYnl0ZXMoaW5vZGUsIGZsb3ctPmxlbmd0aCk7CisKKwl0
b193cml0ZSA9IGZsb3ctPmxlbmd0aDsKKwlyZXN1bHQgPSByZWlzZXI0X2luc2VydF9mbG93KGNv
b3JkLCBsaCwgZmxvdyk7CisJaWYgKGZsb3ctPmxlbmd0aCkKKwkJaW5vZGVfc3ViX2J5dGVzKGlu
b2RlLCBmbG93LT5sZW5ndGgpOworCXJldHVybiAodG9fd3JpdGUgLSBmbG93LT5sZW5ndGgpID8g
KHRvX3dyaXRlIC0gZmxvdy0+bGVuZ3RoKSA6IHJlc3VsdDsKK30KKworLyoqCisgKiBhcHBlbmRf
dGFpbAorICogQGlub2RlOgorICogQGZsb3c6CisgKiBAY29vcmQ6CisgKiBAbGg6CisgKgorICog
UmV0dXJucyBudW1iZXIgb2YgYnl0ZXMgd3JpdHRlbiBvciBlcnJvciBjb2RlLgorICovCitzdGF0
aWMgc3NpemVfdCBhcHBlbmRfdGFpbChzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkJICAgZmxvd190
ICpmbG93LCBjb29yZF90ICpjb29yZCwgbG9ja19oYW5kbGUgKmxoKQoreworCWludCByZXN1bHQ7
CisJcmVpc2VyNF9rZXkgYXBwZW5kX2tleTsKKwlsb2ZmX3QgdG9fd3JpdGU7CisKKwlpZiAoIWtl
eWVxKCZmbG93LT5rZXksIGFwcGVuZF9rZXlfdGFpbChjb29yZCwgJmFwcGVuZF9rZXkpKSkgewor
CQlmbG93LT5kYXRhID0gTlVMTDsKKwkJZmxvdy0+bGVuZ3RoID0gZ2V0X2tleV9vZmZzZXQoJmZs
b3ctPmtleSkgLSBnZXRfa2V5X29mZnNldCgmYXBwZW5kX2tleSk7CisJCXNldF9rZXlfb2Zmc2V0
KCZmbG93LT5rZXksIGdldF9rZXlfb2Zmc2V0KCZhcHBlbmRfa2V5KSk7CisJCS8qCisJCSAqIGhv
bGVzIGluIGZpbGVzIGJ1aWx0IG9mIHRhaWxzIGFyZSBzdG9yZWQganVzdCBsaWtlIGlmIHRoZXJl
CisJCSAqIHdlcmUgcmVhbCBkYXRhIHdoaWNoIGFyZSBhbGwgemVyb3MuCisJCSAqLworCQlpbm9k
ZV9hZGRfYnl0ZXMoaW5vZGUsIGZsb3ctPmxlbmd0aCk7CisJCXJlc3VsdCA9IHJlaXNlcjRfaW5z
ZXJ0X2Zsb3coY29vcmQsIGxoLCBmbG93KTsKKwkJaWYgKGZsb3ctPmxlbmd0aCkKKwkJCWlub2Rl
X3N1Yl9ieXRlcyhpbm9kZSwgZmxvdy0+bGVuZ3RoKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisK
Kwlpbm9kZV9hZGRfYnl0ZXMoaW5vZGUsIGZsb3ctPmxlbmd0aCk7CisKKwl0b193cml0ZSA9IGZs
b3ctPmxlbmd0aDsKKwlyZXN1bHQgPSByZWlzZXI0X2luc2VydF9mbG93KGNvb3JkLCBsaCwgZmxv
dyk7CisJaWYgKGZsb3ctPmxlbmd0aCkKKwkJaW5vZGVfc3ViX2J5dGVzKGlub2RlLCBmbG93LT5s
ZW5ndGgpOworCXJldHVybiAodG9fd3JpdGUgLSBmbG93LT5sZW5ndGgpID8gKHRvX3dyaXRlIC0g
Zmxvdy0+bGVuZ3RoKSA6IHJlc3VsdDsKK30KKworLyoqCisgKiB3cml0ZV90YWlsX3Jlc2VydmVf
c3BhY2UgLSByZXNlcnZlIHNwYWNlIGZvciB0YWlsIHdyaXRlIG9wZXJhdGlvbgorICogQGlub2Rl
OgorICoKKyAqIEVzdGltYXRlcyBhbmQgcmVzZXJ2ZXMgc3BhY2Ugd2hpY2ggbWF5IGJlIHJlcXVp
cmVkIGZvciB3cml0aW5nIG9uZSBmbG93IHRvIGEKKyAqIGZpbGUKKyAqLworc3RhdGljIGludCB3
cml0ZV9leHRlbnRfcmVzZXJ2ZV9zcGFjZShzdHJ1Y3QgaW5vZGUgKmlub2RlKQoreworCV9fdTY0
IGNvdW50OworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCS8qCisJICogdG8gd3JpdGUgb25lIGZs
b3cgdG8gYSBmaWxlIGJ5IHRhaWxzIHdlIGhhdmUgdG8gcmVzZXJ2ZSBkaXNrIHNwYWNlIGZvcjoK
KworCSAqIDEuIGZpbmRfZmlsZV9pdGVtIG1heSBoYXZlIHRvIGluc2VydCBlbXB0eSBub2RlIHRv
IHRoZSB0cmVlIChlbXB0eQorCSAqIGxlYWYgbm9kZSBiZXR3ZWVuIHR3byBleHRlbnQgaXRlbXMp
LiBUaGlzIHJlcXVpcmVzIDEgYmxvY2sgYW5kCisJICogbnVtYmVyIG9mIGJsb2NrcyB3aGljaCBh
cmUgbmVjZXNzYXJ5IHRvIHBlcmZvcm0gaW5zZXJ0aW9uIG9mIGFuCisJICogaW50ZXJuYWwgaXRl
bSBpbnRvIHR3aWcgbGV2ZWwuCisJICoKKwkgKiAyLiBmbG93IGluc2VydGlvbgorCSAqCisJICog
My4gc3RhdCBkYXRhIHVwZGF0ZQorCSAqLworCXRyZWUgPSByZWlzZXI0X3RyZWVfYnlfaW5vZGUo
aW5vZGUpOworCWNvdW50ID0gZXN0aW1hdGVfb25lX2luc2VydF9pdGVtKHRyZWUpICsKKwkJZXN0
aW1hdGVfaW5zZXJ0X2Zsb3codHJlZS0+aGVpZ2h0KSArCisJCWVzdGltYXRlX29uZV9pbnNlcnRf
aXRlbSh0cmVlKTsKKwlncmFiX3NwYWNlX2VuYWJsZSgpOworCXJldHVybiByZWlzZXI0X2dyYWJf
c3BhY2UoY291bnQsIDAgLyogZmxhZ3MgKi8pOworfQorCisjZGVmaW5lIFBBR0VfUEVSX0ZMT1cg
NAorCitzdGF0aWMgbG9mZl90IGZhdWx0aW5fdXNlcl9wYWdlcyhjb25zdCBjaGFyIF9fdXNlciAq
YnVmLCBzaXplX3QgY291bnQpCit7CisJbG9mZl90IGZhdWx0ZWQ7CisJaW50IHRvX2ZhdWx0Owor
CisJaWYgKGNvdW50ID4gUEFHRV9QRVJfRkxPVyAqIFBBR0VfU0laRSkKKwkJY291bnQgPSBQQUdF
X1BFUl9GTE9XICogUEFHRV9TSVpFOworCWZhdWx0ZWQgPSAwOworCXdoaWxlIChjb3VudCA+IDAp
IHsKKwkJdG9fZmF1bHQgPSBQQUdFX1NJWkU7CisJCWlmIChjb3VudCA8IHRvX2ZhdWx0KQorCQkJ
dG9fZmF1bHQgPSBjb3VudDsKKwkJZmF1bHRfaW5fcGFnZXNfcmVhZGFibGUoYnVmICsgZmF1bHRl
ZCwgdG9fZmF1bHQpOworCQljb3VudCAtPSB0b19mYXVsdDsKKwkJZmF1bHRlZCArPSB0b19mYXVs
dDsKKwl9CisJcmV0dXJuIGZhdWx0ZWQ7Cit9CisKK3NzaXplX3QgcmVpc2VyNF93cml0ZV90YWls
X25vcmVzZXJ2ZShzdHJ1Y3QgZmlsZSAqZmlsZSwKKwkJCQkgICAgIHN0cnVjdCBpbm9kZSAqIGlu
b2RlLAorCQkJCSAgICAgY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJCQkgICAgIHNpemVfdCBj
b3VudCwgbG9mZl90ICpwb3MpCit7CisJc3RydWN0IGhpbnQgaGludDsKKwlpbnQgcmVzdWx0Owor
CWZsb3dfdCBmbG93OworCWNvb3JkX3QgKmNvb3JkOworCWxvY2tfaGFuZGxlICpsaDsKKwl6bm9k
ZSAqbG9hZGVkOworCisJYXNzZXJ0KCJlZHdhcmQtMTU0OCIsIGlub2RlICE9IE5VTEwpOworCisJ
cmVzdWx0ID0gbG9hZF9maWxlX2hpbnQoZmlsZSwgJmhpbnQpOworCUJVR19PTihyZXN1bHQgIT0g
MCk7CisKKwlmbG93Lmxlbmd0aCA9IGZhdWx0aW5fdXNlcl9wYWdlcyhidWYsIGNvdW50KTsKKwlm
bG93LnVzZXIgPSAxOworCW1lbWNweSgmZmxvdy5kYXRhLCAmYnVmLCBzaXplb2YoYnVmKSk7CisJ
Zmxvdy5vcCA9IFdSSVRFX09QOworCWtleV9ieV9pbm9kZV9hbmRfb2Zmc2V0X2NvbW1vbihpbm9k
ZSwgKnBvcywgJmZsb3cua2V5KTsKKworCXJlc3VsdCA9IGZpbmRfZmlsZV9pdGVtKCZoaW50LCAm
Zmxvdy5rZXksIFpOT0RFX1dSSVRFX0xPQ0ssIGlub2RlKTsKKwlpZiAoSVNfQ0JLRVJSKHJlc3Vs
dCkpCisJCXJldHVybiByZXN1bHQ7CisKKwljb29yZCA9ICZoaW50LmV4dF9jb29yZC5jb29yZDsK
KwlsaCA9IGhpbnQuZXh0X2Nvb3JkLmxoOworCisJcmVzdWx0ID0gemxvYWQoY29vcmQtPm5vZGUp
OworCUJVR19PTihyZXN1bHQgIT0gMCk7CisJbG9hZGVkID0gY29vcmQtPm5vZGU7CisKKwlpZiAo
Y29vcmQtPmJldHdlZW4gPT0gQUZURVJfVU5JVCkgeworCQkvKiBhcHBlbmQgd2l0aCBkYXRhIG9y
IGhvbGUgKi8KKwkJcmVzdWx0ID0gYXBwZW5kX3RhaWwoaW5vZGUsICZmbG93LCBjb29yZCwgbGgp
OworCX0gZWxzZSBpZiAoY29vcmQtPmJldHdlZW4gPT0gQVRfVU5JVCkgeworCQkvKiBvdmVyd3Jp
dGUgKi8KKwkJcmVzdWx0ID0gb3ZlcndyaXRlX3RhaWwoJmZsb3csIGNvb3JkKTsKKwl9IGVsc2Ug
eworCQkvKiBubyBpdGVtcyBvZiB0aGlzIGZpbGUgeWV0LiBpbnNlcnQgZGF0YSBvciBob2xlICov
CisJCXJlc3VsdCA9IGluc2VydF9maXJzdF90YWlsKGlub2RlLCAmZmxvdywgY29vcmQsIGxoKTsK
Kwl9CisJenJlbHNlKGxvYWRlZCk7CisJaWYgKHJlc3VsdCA8IDApIHsKKwkJZG9uZV9saChsaCk7
CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogc2VhbCBhbmQgdW5sb2NrIHpub2RlICovCisJ
aGludC5leHRfY29vcmQudmFsaWQgPSAwOworCWlmIChoaW50LmV4dF9jb29yZC52YWxpZCkKKwkJ
cmVpc2VyNF9zZXRfaGludCgmaGludCwgJmZsb3cua2V5LCBaTk9ERV9XUklURV9MT0NLKTsKKwll
bHNlCisJCXJlaXNlcjRfdW5zZXRfaGludCgmaGludCk7CisKKwlzYXZlX2ZpbGVfaGludChmaWxl
LCAmaGludCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiByZWlzZXI0X3dyaXRlX3Rh
aWwgLSB3cml0ZSBtZXRob2Qgb2YgdGFpbCBpdGVtIHBsdWdpbgorICogQGZpbGU6IGZpbGUgdG8g
d3JpdGUgdG8KKyAqIEBidWY6IGFkZHJlc3Mgb2YgdXNlci1zcGFjZSBidWZmZXIKKyAqIEBjb3Vu
dDogbnVtYmVyIG9mIGJ5dGVzIHRvIHdyaXRlCisgKiBAcG9zOiBwb3NpdGlvbiBpbiBmaWxlIHRv
IHdyaXRlIHRvCisgKgorICogUmV0dXJucyBudW1iZXIgb2Ygd3JpdHRlbiBieXRlcyBvciBlcnJv
ciBjb2RlLgorICovCitzc2l6ZV90IHJlaXNlcjRfd3JpdGVfdGFpbChzdHJ1Y3QgZmlsZSAqZmls
ZSwKKwkJCSAgIHN0cnVjdCBpbm9kZSAqIGlub2RlLAorCQkJICAgY29uc3QgY2hhciBfX3VzZXIg
KmJ1ZiwKKwkJCSAgIHNpemVfdCBjb3VudCwgbG9mZl90ICpwb3MpCit7CisJaWYgKHdyaXRlX2V4
dGVudF9yZXNlcnZlX3NwYWNlKGlub2RlKSkKKwkJcmV0dXJuIFJFVEVSUigtRU5PU1BDKTsKKwly
ZXR1cm4gcmVpc2VyNF93cml0ZV90YWlsX25vcmVzZXJ2ZShmaWxlLCBpbm9kZSwgYnVmLCBjb3Vu
dCwgcG9zKTsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworc3RhdGljIGludAorY29vcmRfbWF0
Y2hlc19rZXlfdGFpbChjb25zdCBjb29yZF90ICogY29vcmQsIGNvbnN0IHJlaXNlcjRfa2V5ICog
a2V5KQoreworCXJlaXNlcjRfa2V5IGl0ZW1fa2V5OworCisJYXNzZXJ0KCJ2cy0xMzU2IiwgY29v
cmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpOworCWFzc2VydCgidnMtMTM1NCIsIGtleWx0KGtl
eSwgYXBwZW5kX2tleV90YWlsKGNvb3JkLCAmaXRlbV9rZXkpKSk7CisJYXNzZXJ0KCJ2cy0xMzU1
Iiwga2V5Z2Uoa2V5LCBpdGVtX2tleV9ieV9jb29yZChjb29yZCwgJml0ZW1fa2V5KSkpOworCXJl
dHVybiBnZXRfa2V5X29mZnNldChrZXkpID09CisJICAgIGdldF9rZXlfb2Zmc2V0KCZpdGVtX2tl
eSkgKyBjb29yZC0+dW5pdF9wb3M7CisKK30KKworI2VuZGlmCisKKy8qIHBsdWdpbi0+dS5pdGVt
LnMuZmlsZS5yZWFkICovCitpbnQgcmVpc2VyNF9yZWFkX3RhaWwoc3RydWN0IGZpbGUgKmZpbGUg
VU5VU0VEX0FSRywgZmxvd190ICpmLCBoaW50X3QgKmhpbnQpCit7CisJdW5zaWduZWQgY291bnQ7
CisJaW50IGl0ZW1fbGVuZ3RoOworCWNvb3JkX3QgKmNvb3JkOworCXVmX2Nvb3JkX3QgKnVmX2Nv
b3JkOworCisJdWZfY29vcmQgPSAmaGludC0+ZXh0X2Nvb3JkOworCWNvb3JkID0gJnVmX2Nvb3Jk
LT5jb29yZDsKKworCWFzc2VydCgidnMtNTcxIiwgZi0+dXNlciA9PSAxKTsKKwlhc3NlcnQoInZz
LTU3MSIsIGYtPmRhdGEpOworCWFzc2VydCgidnMtOTY3IiwgY29vcmQgJiYgY29vcmQtPm5vZGUp
OworCWFzc2VydCgidnMtMTExNyIsIHpub2RlX2lzX3Jsb2NrZWQoY29vcmQtPm5vZGUpKTsKKwlh
c3NlcnQoInZzLTExMTgiLCB6bm9kZV9pc19sb2FkZWQoY29vcmQtPm5vZGUpKTsKKworCWFzc2Vy
dCgibmlraXRhLTMwMzciLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCWFzc2VydCgidnMtMTM1
NyIsIGNvb3JkX21hdGNoZXNfa2V5X3RhaWwoY29vcmQsICZmLT5rZXkpKTsKKworCS8qIGNhbGN1
bGF0ZSBudW1iZXIgb2YgYnl0ZXMgdG8gcmVhZCBvZmYgdGhlIGl0ZW0gKi8KKwlpdGVtX2xlbmd0
aCA9IGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKGNvb3JkKTsKKwljb3VudCA9IGl0ZW1fbGVuZ3RoX2J5
X2Nvb3JkKGNvb3JkKSAtIGNvb3JkLT51bml0X3BvczsKKwlpZiAoY291bnQgPiBmLT5sZW5ndGgp
CisJCWNvdW50ID0gZi0+bGVuZ3RoOworCisJLyogdXNlciBwYWdlIGhhcyB0byBiZSBicm91Z2h0
IGluIHNvIHRoYXQgbWFqb3IgcGFnZSBmYXVsdCBkb2VzIG5vdAorCSAqIG9jY3VyIGhlcmUgd2hl
biBsb25ndGVtIGxvY2sgaXMgaGVsZCAqLworCWlmIChfX2NvcHlfdG9fdXNlcigoY2hhciBfX3Vz
ZXIgKilmLT5kYXRhLAorCQkJICAgKChjaGFyICopaXRlbV9ib2R5X2J5X2Nvb3JkKGNvb3JkKSAr
IGNvb3JkLT51bml0X3BvcyksCisJCQkgICBjb3VudCkpCisJCXJldHVybiBSRVRFUlIoLUVGQVVM
VCk7CisKKwkvKiBwcm9iYWJseSBtYXJrX3BhZ2VfYWNjZXNzZWQoKSBzaG91bGQgb25seSBiZSBj
YWxsZWQgaWYKKwkgKiBjb29yZC0+dW5pdF9wb3MgaXMgemVyby4gKi8KKwltYXJrX3BhZ2VfYWNj
ZXNzZWQoem5vZGVfcGFnZShjb29yZC0+bm9kZSkpOworCW1vdmVfZmxvd19mb3J3YXJkKGYsIGNv
dW50KTsKKworCWNvb3JkLT51bml0X3BvcyArPSBjb3VudDsKKwlpZiAoaXRlbV9sZW5ndGggPT0g
Y29vcmQtPnVuaXRfcG9zKSB7CisJCWNvb3JkLT51bml0X3Bvcy0tOworCQljb29yZC0+YmV0d2Vl
biA9IEFGVEVSX1VOSVQ7CisJfQorCXJlaXNlcjRfc2V0X2hpbnQoaGludCwgJmYtPmtleSwgWk5P
REVfUkVBRF9MT0NLKTsKKwlyZXR1cm4gMDsKK30KKworLyoKKyAgIHBsdWdpbi0+dS5pdGVtLnMu
ZmlsZS5hcHBlbmRfa2V5CisgICBrZXkgb2YgZmlyc3QgYnl0ZSB3aGljaCBpcyB0aGUgbmV4dCB0
byBsYXN0IGJ5dGUgYnkgYWRkcmVzc2VkIGJ5IHRoaXMgaXRlbQorKi8KK3JlaXNlcjRfa2V5ICph
cHBlbmRfa2V5X3RhaWwoY29uc3QgY29vcmRfdCAqIGNvb3JkLCByZWlzZXI0X2tleSAqIGtleSkK
K3sKKwlpdGVtX2tleV9ieV9jb29yZChjb29yZCwga2V5KTsKKwlzZXRfa2V5X29mZnNldChrZXks
IGdldF9rZXlfb2Zmc2V0KGtleSkgKyBpdGVtX2xlbmd0aF9ieV9jb29yZChjb29yZCkpOworCXJl
dHVybiBrZXk7Cit9CisKKy8qIHBsdWdpbi0+dS5pdGVtLnMuZmlsZS5pbml0X2Nvb3JkX2V4dGVu
c2lvbiAqLwordm9pZCBpbml0X2Nvb3JkX2V4dGVuc2lvbl90YWlsKHVmX2Nvb3JkX3QgKiB1Zl9j
b29yZCwgbG9mZl90IGxvb2t1cGVkKQoreworCXVmX2Nvb3JkLT52YWxpZCA9IDE7Cit9CisKKy8q
CisgIHBsdWdpbi0+dS5pdGVtLnMuZmlsZS5nZXRfYmxvY2sKKyovCitpbnQKK2dldF9ibG9ja19h
ZGRyZXNzX3RhaWwoY29uc3QgY29vcmRfdCAqIGNvb3JkLCBzZWN0b3JfdCBsYmxvY2ssIHNlY3Rv
cl90ICogYmxvY2spCit7CisJYXNzZXJ0KCJuaWtpdGEtMzI1MiIsIHpub2RlX2dldF9sZXZlbChj
b29yZC0+bm9kZSkgPT0gTEVBRl9MRVZFTCk7CisKKwlpZiAocmVpc2VyNF9ibG9ja25yX2lzX2Zh
a2Uoem5vZGVfZ2V0X2Jsb2NrKGNvb3JkLT5ub2RlKSkpCisJCS8qIGlmIG5vZGUgaGFzJ250IG9i
dGFpbmV0IGl0cyBibG9jayBudW1iZXIgeWV0LCByZXR1cm4gMC4KKwkJICogTGV0cyBhdm9pZCB1
cHNldHRpbmcgdXNlcnMgd2l0aCBzb21lIGNvc21pYyBudW1iZXJzIGJleW9uZAorCQkgKiB0aGUg
ZGV2aWNlIGNhcGFjaXR5LiovCisJCSpibG9jayA9IDA7CisJZWxzZQorCQkqYmxvY2sgPSAqem5v
ZGVfZ2V0X2Jsb2NrKGNvb3JkLT5ub2RlKTsKKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIExvY2Fs
IHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6
ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29s
dW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9pdGVtL3RhaWwu
aCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS90YWlsLmgKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0vdGFpbC5oCTE5NzAtMDEtMDEgMDE6MDA6
MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vaXRl
bS90YWlsLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NzEyMjIzMTggKzAxMDAKQEAgLTAsMCArMSw1
OSBAQAorLyogQ29weXJpZ2h0IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisjaWYgIWRlZmluZWQoIF9fUkVJU0VSNF9U
QUlMX0hfXyApCisjZGVmaW5lIF9fUkVJU0VSNF9UQUlMX0hfXworCitzdHJ1Y3QgdGFpbF9jb29y
ZF9leHRlbnNpb24geworCWludCBub3RfdXNlZDsKK307CisKK3N0cnVjdCBjdXRfbGlzdDsKKwor
LyogcGx1Z2luLT51Lml0ZW0uYi4qICovCityZWlzZXI0X2tleSAqbWF4X2tleV9pbnNpZGVfdGFp
bChjb25zdCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOworaW50IGNhbl9jb250YWluX2tleV90
YWlsKGNvbnN0IGNvb3JkX3QgKiBjb29yZCwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCQkg
Y29uc3QgcmVpc2VyNF9pdGVtX2RhdGEgKik7CitpbnQgbWVyZ2VhYmxlX3RhaWwoY29uc3QgY29v
cmRfdCAqIHAxLCBjb25zdCBjb29yZF90ICogcDIpOworcG9zX2luX25vZGVfdCBucl91bml0c190
YWlsKGNvbnN0IGNvb3JkX3QgKik7Citsb29rdXBfcmVzdWx0IGxvb2t1cF90YWlsKGNvbnN0IHJl
aXNlcjRfa2V5ICosIGxvb2t1cF9iaWFzLCBjb29yZF90ICopOworaW50IHBhc3RlX3RhaWwoY29v
cmRfdCAqLCByZWlzZXI0X2l0ZW1fZGF0YSAqLCBjYXJyeV9wbHVnaW5faW5mbyAqKTsKK2ludCBj
YW5fc2hpZnRfdGFpbCh1bnNpZ25lZCBmcmVlX3NwYWNlLCBjb29yZF90ICogc291cmNlLAorCQkg
ICB6bm9kZSAqIHRhcmdldCwgc2hpZnRfZGlyZWN0aW9uLCB1bnNpZ25lZCAqc2l6ZSwKKwkJICAg
dW5zaWduZWQgd2FudCk7Cit2b2lkIGNvcHlfdW5pdHNfdGFpbChjb29yZF90ICogdGFyZ2V0LCBj
b29yZF90ICogc291cmNlLCB1bnNpZ25lZCBmcm9tLAorCQkgICAgIHVuc2lnbmVkIGNvdW50LCBz
aGlmdF9kaXJlY3Rpb24sIHVuc2lnbmVkIGZyZWVfc3BhY2UpOworaW50IGtpbGxfaG9va190YWls
KGNvbnN0IGNvb3JkX3QgKiwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IGNvdW50
LAorCQkgICBzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICopOworaW50IGN1dF91bml0c190YWlsKGNv
b3JkX3QgKiwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCQkgICBzdHJ1
Y3QgY2FycnlfY3V0X2RhdGEgKiwgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkg
ICByZWlzZXI0X2tleSAqIG5ld19maXJzdCk7CitpbnQga2lsbF91bml0c190YWlsKGNvb3JkX3Qg
KiwgcG9zX2luX25vZGVfdCBmcm9tLCBwb3NfaW5fbm9kZV90IHRvLAorCQkgICAgc3RydWN0IGNh
cnJ5X2tpbGxfZGF0YSAqLCByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJCSAgICBy
ZWlzZXI0X2tleSAqIG5ld19maXJzdCk7CityZWlzZXI0X2tleSAqdW5pdF9rZXlfdGFpbChjb25z
dCBjb29yZF90ICosIHJlaXNlcjRfa2V5ICopOworCisvKiBwbHVnaW4tPnUuaXRlbS5zLiogKi8K
K3NzaXplX3QgcmVpc2VyNF93cml0ZV90YWlsX25vcmVzZXJ2ZShzdHJ1Y3QgZmlsZSAqZmlsZSwg
c3RydWN0IGlub2RlICogaW5vZGUsCisJCQkJICAgICBjb25zdCBjaGFyIF9fdXNlciAqYnVmLCBz
aXplX3QgY291bnQsCisJCQkJICAgICBsb2ZmX3QgKnBvcyk7Citzc2l6ZV90IHJlaXNlcjRfd3Jp
dGVfdGFpbChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGlub2RlICogaW5vZGUsCisJCQkgICBj
b25zdCBjaGFyIF9fdXNlciAqYnVmLCBzaXplX3QgY291bnQsIGxvZmZfdCAqcG9zKTsKK2ludCBy
ZWlzZXI0X3JlYWRfdGFpbChzdHJ1Y3QgZmlsZSAqLCBmbG93X3QgKiwgaGludF90ICopOworaW50
IHJlYWRwYWdlX3RhaWwodm9pZCAqdnAsIHN0cnVjdCBwYWdlICpwYWdlKTsKK3JlaXNlcjRfa2V5
ICphcHBlbmRfa2V5X3RhaWwoY29uc3QgY29vcmRfdCAqLCByZWlzZXI0X2tleSAqKTsKK3ZvaWQg
aW5pdF9jb29yZF9leHRlbnNpb25fdGFpbCh1Zl9jb29yZF90ICosIGxvZmZfdCBvZmZzZXQpOwor
aW50IGdldF9ibG9ja19hZGRyZXNzX3RhaWwoY29uc3QgY29vcmRfdCAqLCBzZWN0b3JfdCwgc2Vj
dG9yX3QgKik7CisKKy8qIF9fUkVJU0VSNF9UQUlMX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2Ug
TGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxl
OiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFi
LXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5k
OgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC9wbHVnaW4vTWFrZWZpbGUgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL01ha2Vm
aWxlCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9NYWtlZmlsZQkxOTcw
LTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvcGx1Z2luL01ha2VmaWxlCTIwMjAtMDItMDUgMjA6NTM6NDEuNDcxMjIyMzE4ICswMTAwCkBA
IC0wLDAgKzEsMjYgQEAKK29iai0kKENPTkZJR19SRUlTRVI0X0ZTKSArPSBwbHVnaW5zLm8KKwor
cGx1Z2lucy1vYmpzIDo9CQkJXAorCXBsdWdpbi5vCQlcCisJcGx1Z2luX3NldC5vCQlcCisJb2Jq
ZWN0Lm8JCVwKKwlpbm9kZV9vcHMubwkJXAorCWlub2RlX29wc19yZW5hbWUubwlcCisJZmlsZV9v
cHMubwkJXAorCWZpbGVfb3BzX3JlYWRkaXIubwlcCisJZmlsZV9wbHVnaW5fY29tbW9uLm8JXAor
CWRpcl9wbHVnaW5fY29tbW9uLm8JXAorCWRpZ2VzdC5vCQlcCisJaGFzaC5vCQkJXAorCWZpYnJh
dGlvbi5vCQlcCisJdGFpbF9wb2xpY3kubwkJXAorCXJlZ3VsYXIubworCitvYmotJChDT05GSUdf
UkVJU0VSNF9GUykgKz0gaXRlbS8KK29iai0kKENPTkZJR19SRUlTRVI0X0ZTKSArPSBmaWxlLwor
b2JqLSQoQ09ORklHX1JFSVNFUjRfRlMpICs9IGRpci8KK29iai0kKENPTkZJR19SRUlTRVI0X0ZT
KSArPSBub2RlLworb2JqLSQoQ09ORklHX1JFSVNFUjRfRlMpICs9IGNvbXByZXNzLworb2JqLSQo
Q09ORklHX1JFSVNFUjRfRlMpICs9IHNwYWNlLworb2JqLSQoQ09ORklHX1JFSVNFUjRfRlMpICs9
IGRpc2tfZm9ybWF0Lworb2JqLSQoQ09ORklHX1JFSVNFUjRfRlMpICs9IHNlY3VyaXR5LwpkaWZm
IC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9ub2RlL01ha2VmaWxlIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL01ha2Vm
aWxlCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL01ha2VmaWxl
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vbm9kZS9NYWtlZmlsZQkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MTIyMjMx
OCArMDEwMApAQCAtMCwwICsxLDYgQEAKK29iai0kKENPTkZJR19SRUlTRVI0X0ZTKSArPSBub2Rl
X3BsdWdpbnMubworCitub2RlX3BsdWdpbnMtb2JqcyA6PQlcCisJbm9kZS5vCQlcCisJbm9kZTQw
Lm8JXAorCW5vZGU0MS5vCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5v
cmlnL2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZTQwLmMgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvcGx1Z2luL25vZGUvbm9kZTQwLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
cGx1Z2luL25vZGUvbm9kZTQwLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAK
KysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGU0MC5jCTIwMjAtMDIt
MDUgMjA6NTM6NDEuNDcyMjIyMzI1ICswMTAwCkBAIC0wLDAgKzEsMzA3NCBAQAorLyogQ29weXJp
Z2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBi
eSByZWlzZXI0L1JFQURNRSAqLworCisjaW5jbHVkZSAiLi4vLi4vZGVidWcuaCIKKyNpbmNsdWRl
ICIuLi8uLi9rZXkuaCIKKyNpbmNsdWRlICIuLi8uLi9jb29yZC5oIgorI2luY2x1ZGUgIi4uL3Bs
dWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICIuLi9pdGVtL2l0ZW0uaCIKKyNpbmNsdWRlICJub2Rl
LmgiCisjaW5jbHVkZSAibm9kZTQwLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luLmgiCisjaW5jbHVk
ZSAiLi4vLi4vam5vZGUuaCIKKyNpbmNsdWRlICIuLi8uLi96bm9kZS5oIgorI2luY2x1ZGUgIi4u
Ly4uL3Bvb2wuaCIKKyNpbmNsdWRlICIuLi8uLi9jYXJyeS5oIgorI2luY2x1ZGUgIi4uLy4uL3Rh
cC5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWUuaCIKKyNpbmNsdWRlICIuLi8uLi9zdXBlci5oIgor
I2luY2x1ZGUgIi4uLy4uL3JlaXNlcjQuaCIKKworI2luY2x1ZGUgPGFzbS91YWNjZXNzLmg+Cisj
aW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9wcmVmZXRjaC5oPgorCisv
KiBsZWFmIDQwIGZvcm1hdDoKKworICBbbm9kZSBoZWFkZXIgfCBpdGVtIDAsIGl0ZW0gMSwgLi4s
IGl0ZW0gTi0xIHwgIGZyZWUgc3BhY2UgfCBpdGVtX2hlYWQgTi0xLCAuLiBpdGVtX2hlYWQgMSwg
aXRlbSBoZWFkIDAgXQorICAgcGx1Z2luX2lkICgxNikgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBrZXkKKyAgIGZyZWVfc3BhY2UgKDE2KSAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGx1Z2luaWQgKDE2KQorICAgZnJl
ZV9zcGFjZV9zdGFydCAoMTYpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBvZmZzZXQgKDE2KQorICAgbGV2ZWwgKDgpCisgICBudW1faXRlbXMgKDE2KQorICAgbWFnaWMg
KDMyKQorICAgZmx1c2hfdGltZSAoMzIpCisqLworLyogTklLSVRBLUZJWE1FLUhBTlM6IEkgdG9s
ZCB5b3UgZ3V5cyBub3QgbGVzcyB0aGFuIDEwIHRpbWVzIHRvIG5vdCBjYWxsIGl0IHI0ZnMuICBD
aGFuZ2UgdG8gIlJlSXMiLiAqLworLyogbWFnaWMgbnVtYmVyIHRoYXQgaXMgc3RvcmVkIGluIC0+
bWFnaWMgZmllbGQgb2Ygbm9kZSBoZWFkZXIgKi8KK3N0YXRpYyBjb25zdCBfX3UzMiBSRUlTRVI0
X05PREU0MF9NQUdJQyA9IDB4NTIzNDQ2NTM7CS8qICgqKF9fdTMyICopIlI0RlMiKTsgKi8KKwor
c3RhdGljIGludCBwcmVwYXJlX2Zvcl91cGRhdGUoem5vZGUgKiBsZWZ0LCB6bm9kZSAqIHJpZ2h0
LAorCQkJICAgICAgY2FycnlfcGx1Z2luX2luZm8gKiBpbmZvKTsKKworLyogaGVhZGVyIG9mIG5v
ZGUgb2YgcmVpc2VyNDAgZm9ybWF0IGlzIGF0IHRoZSBiZWdpbm5pbmcgb2Ygbm9kZSAqLworc3Rh
dGljIGlubGluZSBub2RlNDBfaGVhZGVyICpub2RlNDBfbm9kZV9oZWFkZXIoY29uc3Qgem5vZGUg
KiBub2RlCS8qIG5vZGUgdG8KKwkJCQkJCQkJCSAqIHF1ZXJ5ICovICkKK3sKKwlhc3NlcnQoIm5p
a2l0YS01NjciLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTU2OCIsIHpub2RlX3Bh
Z2Uobm9kZSkgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNTY5IiwgemRhdGEobm9kZSkgIT0g
TlVMTCk7CisJcmV0dXJuIChub2RlNDBfaGVhZGVyICopIHpkYXRhKG5vZGUpOworfQorCisvKiBm
dW5jdGlvbnMgdG8gZ2V0L3NldCBmaWVsZHMgb2Ygbm9kZTQwX2hlYWRlciAqLworI2RlZmluZSBu
aDQwX2dldF9tYWdpYyhuaCkgbGUzMl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmKG5oKS0+bWFnaWMp
KQorI2RlZmluZSBuaDQwX2dldF9mcmVlX3NwYWNlKG5oKSBsZTE2X3RvX2NwdShnZXRfdW5hbGln
bmVkKCYobmgpLT5mcmVlX3NwYWNlKSkKKyNkZWZpbmUgbmg0MF9nZXRfZnJlZV9zcGFjZV9zdGFy
dChuaCkgbGUxNl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmKG5oKS0+ZnJlZV9zcGFjZV9zdGFydCkp
CisjZGVmaW5lIG5oNDBfZ2V0X2xldmVsKG5oKSBnZXRfdW5hbGlnbmVkKCYobmgpLT5sZXZlbCkK
KyNkZWZpbmUgbmg0MF9nZXRfbnVtX2l0ZW1zKG5oKSBsZTE2X3RvX2NwdShnZXRfdW5hbGlnbmVk
KCYobmgpLT5ucl9pdGVtcykpCisjZGVmaW5lIG5oNDBfZ2V0X2ZsdXNoX2lkKG5oKSBsZTY0X3Rv
X2NwdShnZXRfdW5hbGlnbmVkKCYobmgpLT5mbHVzaF9pZCkpCisKKyNkZWZpbmUgbmg0MF9zZXRf
bWFnaWMobmgsIHZhbHVlKSBwdXRfdW5hbGlnbmVkKGNwdV90b19sZTMyKHZhbHVlKSwgJihuaCkt
Pm1hZ2ljKQorI2RlZmluZSBuaDQwX3NldF9mcmVlX3NwYWNlKG5oLCB2YWx1ZSkgcHV0X3VuYWxp
Z25lZChjcHVfdG9fbGUxNih2YWx1ZSksICYobmgpLT5mcmVlX3NwYWNlKQorI2RlZmluZSBuaDQw
X3NldF9mcmVlX3NwYWNlX3N0YXJ0KG5oLCB2YWx1ZSkgcHV0X3VuYWxpZ25lZChjcHVfdG9fbGUx
Nih2YWx1ZSksICYobmgpLT5mcmVlX3NwYWNlX3N0YXJ0KQorI2RlZmluZSBuaDQwX3NldF9sZXZl
bChuaCwgdmFsdWUpIHB1dF91bmFsaWduZWQodmFsdWUsICYobmgpLT5sZXZlbCkKKyNkZWZpbmUg
bmg0MF9zZXRfbnVtX2l0ZW1zKG5oLCB2YWx1ZSkgcHV0X3VuYWxpZ25lZChjcHVfdG9fbGUxNih2
YWx1ZSksICYobmgpLT5ucl9pdGVtcykKKyNkZWZpbmUgbmg0MF9zZXRfbWtmc19pZChuaCwgdmFs
dWUpIHB1dF91bmFsaWduZWQoY3B1X3RvX2xlMzIodmFsdWUpLCAmKG5oKS0+bWtmc19pZCkKKwor
LyogcGx1Z2luIGZpZWxkIG9mIG5vZGUgaGVhZGVyIHNob3VsZCBiZSByZWFkL3NldCBieQorICAg
cGx1Z2luX2J5X2Rpc2tfaWQvc2F2ZV9kaXNrX3BsdWdpbiAqLworCisvKiBhcnJheSBvZiBpdGVt
IGhlYWRlcnMgaXMgYXQgdGhlIGVuZCBvZiBub2RlICovCitzdGF0aWMgaW5saW5lIGl0ZW1faGVh
ZGVyNDAgKm5vZGU0MF9paF9hdChjb25zdCB6bm9kZSAqIG5vZGUsIHVuc2lnbmVkIHBvcykKK3sK
KwlyZXR1cm4gKGl0ZW1faGVhZGVyNDAgKikgKHpkYXRhKG5vZGUpICsgem5vZGVfc2l6ZShub2Rl
KSkgLSBwb3MgLSAxOworfQorCisvKiAoIHBhZ2VfYWRkcmVzcyggbm9kZSAtPiBwZyApICsgUEFH
RV9DQUNIRV9TSVpFICkgLSBwb3MgLSAxCisgKi8KK3N0YXRpYyBpbmxpbmUgaXRlbV9oZWFkZXI0
MCAqbm9kZTQwX2loX2F0X2Nvb3JkKGNvbnN0IGNvb3JkX3QgKiBjb29yZCkKK3sKKwlyZXR1cm4g
KGl0ZW1faGVhZGVyNDAgKikgKHpkYXRhKGNvb3JkLT5ub2RlKSArCisJCQkJICB6bm9kZV9zaXpl
KGNvb3JkLT5ub2RlKSkgLSAoY29vcmQtPml0ZW1fcG9zKSAtCisJICAgIDE7Cit9CisKKy8qIGZ1
bmN0aW9ucyB0byBnZXQvc2V0IGZpZWxkcyBvZiBpdGVtX2hlYWRlcjQwICovCisjZGVmaW5lIGlo
NDBfZ2V0X29mZnNldChpaCkgbGUxNl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmKGloKS0+b2Zmc2V0
KSkKKworI2RlZmluZSBpaDQwX3NldF9vZmZzZXQoaWgsIHZhbHVlKSBwdXRfdW5hbGlnbmVkKGNw
dV90b19sZTE2KHZhbHVlKSwgJihpaCktPm9mZnNldCkKKworLyogcGx1Z2luIGZpZWxkIG9mIGl0
ZW0gaGVhZGVyIHNob3VsZCBiZSByZWFkL3NldCBieQorICAgcGx1Z2luX2J5X2Rpc2tfaWQvc2F2
ZV9kaXNrX3BsdWdpbiAqLworCisvKiBwbHVnaW4gbWV0aG9kcyAqLworCisvKiBwbHVnaW4tPnUu
bm9kZS5pdGVtX292ZXJoZWFkCisgICBsb29rIGZvciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhv
ZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmggKi8KK3NpemVfdAoraXRlbV9vdmVyaGVhZF9ub2RlNDAo
Y29uc3Qgem5vZGUgKiBub2RlIFVOVVNFRF9BUkcsIGZsb3dfdCAqIGYgVU5VU0VEX0FSRykKK3sK
KwlyZXR1cm4gc2l6ZW9mKGl0ZW1faGVhZGVyNDApOworfQorCisvKiBwbHVnaW4tPnUubm9kZS5m
cmVlX3NwYWNlCisgICBsb29rIGZvciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVn
aW4vbm9kZS9ub2RlLmggKi8KK3NpemVfdCBmcmVlX3NwYWNlX25vZGU0MCh6bm9kZSAqIG5vZGUp
Cit7CisJYXNzZXJ0KCJuaWtpdGEtNTc3Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS01NzgiLCB6bm9kZV9pc19sb2FkZWQobm9kZSkpOworCWFzc2VydCgibmlraXRhLTU3OSIsIHpk
YXRhKG5vZGUpICE9IE5VTEwpOworCisJcmV0dXJuIG5oNDBfZ2V0X2ZyZWVfc3BhY2Uobm9kZTQw
X25vZGVfaGVhZGVyKG5vZGUpKTsKK30KKworLyogcHJpdmF0ZSBpbmxpbmUgdmVyc2lvbiBvZiBu
b2RlNDBfbnVtX29mX2l0ZW1zKCkgZm9yIHVzZSBpbiB0aGlzIGZpbGUuIFRoaXMKKyAgIGlzIG5l
Y2Vzc2FyeSwgYmVjYXVzZSBhZGRyZXNzIG9mIG5vZGU0MF9udW1fb2ZfaXRlbXMoKSBpcyB0YWtl
biBhbmQgaXQgaXMKKyAgIG5ldmVyIGlubGluZWQgYXMgYSByZXN1bHQuICovCitzdGF0aWMgaW5s
aW5lIHNob3J0IG5vZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwoY29uc3Qgem5vZGUgKiBub2Rl
KQoreworCXJldHVybiBuaDQwX2dldF9udW1faXRlbXMobm9kZTQwX25vZGVfaGVhZGVyKG5vZGUp
KTsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKK3N0YXRpYyBpbmxpbmUgdm9pZCBjaGVja19udW1f
aXRlbXMoY29uc3Qgem5vZGUgKiBub2RlKQoreworCWFzc2VydCgibmlraXRhLTI3NDkiLAorCSAg
ICAgICBub2RlNDBfbnVtX29mX2l0ZW1zX2ludGVybmFsKG5vZGUpID09IG5vZGUtPm5yX2l0ZW1z
KTsKKwlhc3NlcnQoIm5pa2l0YS0yNzQ2Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKG5vZGUpKTsK
K30KKyNlbHNlCisjZGVmaW5lIGNoZWNrX251bV9pdGVtcyhub2RlKSBub29wCisjZW5kaWYKKwor
LyogcGx1Z2luLT51Lm5vZGUubnVtX29mX2l0ZW1zCisgICBsb29rIGZvciBkZXNjcmlwdGlvbiBv
ZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmggKi8KK2ludCBudW1fb2ZfaXRlbXNf
bm9kZTQwKGNvbnN0IHpub2RlICogbm9kZSkKK3sKKwlyZXR1cm4gbm9kZTQwX251bV9vZl9pdGVt
c19pbnRlcm5hbChub2RlKTsKK30KKworc3RhdGljIHZvaWQKK25vZGU0MF9zZXRfbnVtX2l0ZW1z
KHpub2RlICogbm9kZSwgbm9kZTQwX2hlYWRlciAqIG5oLCB1bnNpZ25lZCB2YWx1ZSkKK3sKKwlh
c3NlcnQoIm5pa2l0YS0yNzUxIiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yNzUw
IiwgbmggPT0gbm9kZTQwX25vZGVfaGVhZGVyKG5vZGUpKTsKKworCWNoZWNrX251bV9pdGVtcyhu
b2RlKTsKKwluaDQwX3NldF9udW1faXRlbXMobmgsIHZhbHVlKTsKKwlub2RlLT5ucl9pdGVtcyA9
IHZhbHVlOworCWNoZWNrX251bV9pdGVtcyhub2RlKTsKK30KKworLyogcGx1Z2luLT51Lm5vZGUu
aXRlbV9ieV9jb29yZAorICAgbG9vayBmb3IgZGVzY3JpcHRpb24gb2YgdGhpcyBtZXRob2QgaW4g
cGx1Z2luL25vZGUvbm9kZS5oICovCitjaGFyICppdGVtX2J5X2Nvb3JkX25vZGU0MChjb25zdCBj
b29yZF90ICogY29vcmQpCit7CisJaXRlbV9oZWFkZXI0MCAqaWg7CisJY2hhciAqcDsKKworCS8q
IEBjb29yZCBpcyBzZXQgdG8gZXhpc3RpbmcgaXRlbSAqLworCWFzc2VydCgibmlraXRhLTU5NiIs
IGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgidnMtMjU1IiwgY29vcmRfaXNfZXhpc3RpbmdfaXRl
bShjb29yZCkpOworCisJaWggPSBub2RlNDBfaWhfYXRfY29vcmQoY29vcmQpOworCXAgPSB6ZGF0
YShjb29yZC0+bm9kZSkgKyBpaDQwX2dldF9vZmZzZXQoaWgpOworCXJldHVybiBwOworfQorCisv
KiBwbHVnaW4tPnUubm9kZS5sZW5ndGhfYnlfY29vcmQKKyAgIGxvb2sgZm9yIGRlc2NyaXB0aW9u
IG9mIHRoaXMgbWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaCAqLworaW50IGxlbmd0aF9ieV9j
b29yZF9ub2RlNDAoY29uc3QgY29vcmRfdCAqIGNvb3JkKQoreworCWl0ZW1faGVhZGVyNDAgKmlo
OworCWludCByZXN1bHQ7CisKKwkvKiBAY29vcmQgaXMgc2V0IHRvIGV4aXN0aW5nIGl0ZW0gKi8K
Kwlhc3NlcnQoInZzLTI1NiIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgidnMtMjU3IiwgY29v
cmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkpOworCisJaWggPSBub2RlNDBfaWhfYXRfY29vcmQo
Y29vcmQpOworCWlmICgoaW50KWNvb3JkLT5pdGVtX3BvcyA9PQorCSAgICBub2RlNDBfbnVtX29m
X2l0ZW1zX2ludGVybmFsKGNvb3JkLT5ub2RlKSAtIDEpCisJCXJlc3VsdCA9CisJCSAgICBuaDQw
X2dldF9mcmVlX3NwYWNlX3N0YXJ0KG5vZGU0MF9ub2RlX2hlYWRlcihjb29yZC0+bm9kZSkpIC0K
KwkJICAgIGloNDBfZ2V0X29mZnNldChpaCk7CisJZWxzZQorCQlyZXN1bHQgPSBpaDQwX2dldF9v
ZmZzZXQoaWggLSAxKSAtIGloNDBfZ2V0X29mZnNldChpaCk7CisKKwlyZXR1cm4gcmVzdWx0Owor
fQorCitzdGF0aWMgcG9zX2luX25vZGVfdAorbm9kZTQwX2l0ZW1fbGVuZ3RoKGNvbnN0IHpub2Rl
ICogbm9kZSwgcG9zX2luX25vZGVfdCBpdGVtX3BvcykKK3sKKwlpdGVtX2hlYWRlcjQwICppaDsK
Kwlwb3NfaW5fbm9kZV90IHJlc3VsdDsKKworCS8qIEBjb29yZCBpcyBzZXQgdG8gZXhpc3Rpbmcg
aXRlbSAqLworCWFzc2VydCgidnMtMjU2Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInZzLTI1
NyIsIG5vZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwobm9kZSkgPiBpdGVtX3Bvcyk7CisKKwlp
aCA9IG5vZGU0MF9paF9hdChub2RlLCBpdGVtX3Bvcyk7CisJaWYgKGl0ZW1fcG9zID09IG5vZGU0
MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwobm9kZSkgLSAxKQorCQlyZXN1bHQgPQorCQkgICAgbmg0
MF9nZXRfZnJlZV9zcGFjZV9zdGFydChub2RlNDBfbm9kZV9oZWFkZXIobm9kZSkpIC0KKwkJICAg
IGloNDBfZ2V0X29mZnNldChpaCk7CisJZWxzZQorCQlyZXN1bHQgPSBpaDQwX2dldF9vZmZzZXQo
aWggLSAxKSAtIGloNDBfZ2V0X29mZnNldChpaCk7CisKKwlyZXR1cm4gcmVzdWx0OworfQorCisv
KiBwbHVnaW4tPnUubm9kZS5wbHVnaW5fYnlfY29vcmQKKyAgIGxvb2sgZm9yIGRlc2NyaXB0aW9u
IG9mIHRoaXMgbWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaCAqLworaXRlbV9wbHVnaW4gKnBs
dWdpbl9ieV9jb29yZF9ub2RlNDAoY29uc3QgY29vcmRfdCAqIGNvb3JkKQoreworCWl0ZW1faGVh
ZGVyNDAgKmloOworCWl0ZW1fcGx1Z2luICpyZXN1bHQ7CisKKwkvKiBAY29vcmQgaXMgc2V0IHRv
IGV4aXN0aW5nIGl0ZW0gKi8KKwlhc3NlcnQoInZzLTI1OCIsIGNvb3JkICE9IE5VTEwpOworCWFz
c2VydCgidnMtMjU5IiwgY29vcmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkpOworCisJaWggPSBu
b2RlNDBfaWhfYXRfY29vcmQoY29vcmQpOworCS8qIHBhc3MgTlVMTCBpbiBzdGVhZCBvZiBjdXJy
ZW50IHRyZWUuIFRoaXMgaXMgdGltZSBjcml0aWNhbCBjYWxsLiAqLworCXJlc3VsdCA9IGl0ZW1f
cGx1Z2luX2J5X2Rpc2tfaWQoTlVMTCwgJmloLT5wbHVnaW5faWQpOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qIHBsdWdpbi0+dS5ub2RlLmtleV9hdAorICAgbG9vayBmb3IgZGVzY3JpcHRpb24g
b2YgdGhpcyBtZXRob2QgaW4gcGx1Z2luL25vZGUvbm9kZS5oICovCityZWlzZXI0X2tleSAqa2V5
X2F0X25vZGU0MChjb25zdCBjb29yZF90ICogY29vcmQsIHJlaXNlcjRfa2V5ICoga2V5KQorewor
CWl0ZW1faGVhZGVyNDAgKmloOworCisJYXNzZXJ0KCJuaWtpdGEtMTc2NSIsIGNvb3JkX2lzX2V4
aXN0aW5nX2l0ZW0oY29vcmQpKTsKKworCS8qIEBjb29yZCBpcyBzZXQgdG8gZXhpc3RpbmcgaXRl
bSAqLworCWloID0gbm9kZTQwX2loX2F0X2Nvb3JkKGNvb3JkKTsKKwltZW1jcHkoa2V5LCAmaWgt
PmtleSwgc2l6ZW9mKHJlaXNlcjRfa2V5KSk7CisJcmV0dXJuIGtleTsKK30KKworLyogVlMtRklY
TUUtSEFOUzogcGxlYXNlIHJldmlldyB3aGV0aGVyIHRoZSBiZWxvdyBhcmUgcHJvcGVybHkgZGlz
YWJsZWQgd2hlbiBkZWJ1Z2dpbmcgaXMgZGlzYWJsZWQgKi8KKworI2RlZmluZSBOT0RFX0lOQ1NU
QVQobiwgY291bnRlcikJCQkJCQlcCisJcmVpc2VyNF9zdGF0X2luY19hdF9sZXZlbCh6bm9kZV9n
ZXRfbGV2ZWwobiksIG5vZGUubG9va3VwLmNvdW50ZXIpCisKKyNkZWZpbmUgTk9ERV9BRERTVEFU
KG4sIGNvdW50ZXIsIHZhbCkJCQkJCQlcCisJcmVpc2VyNF9zdGF0X2FkZF9hdF9sZXZlbCh6bm9k
ZV9nZXRfbGV2ZWwobiksIG5vZGUubG9va3VwLmNvdW50ZXIsIHZhbCkKKworLyogcGx1Z2luLT51
Lm5vZGUubG9va3VwCisgICBsb29rIGZvciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBw
bHVnaW4vbm9kZS9ub2RlLmggKi8KK25vZGVfc2VhcmNoX3Jlc3VsdCBsb29rdXBfbm9kZTQwKHpu
b2RlICogbm9kZSAvKiBub2RlIHRvIHF1ZXJ5ICovICwKKwkJCQkgY29uc3QgcmVpc2VyNF9rZXkg
KiBrZXkgLyoga2V5IHRvIGxvb2sgZm9yICovICwKKwkJCQkgbG9va3VwX2JpYXMgYmlhcyAvKiBz
ZWFyY2ggYmlhcyAqLyAsCisJCQkJIGNvb3JkX3QgKiBjb29yZCAvKiByZXN1bHRpbmcgY29vcmQg
Ki8gKQoreworCWludCBsZWZ0OworCWludCByaWdodDsKKwlpbnQgZm91bmQ7CisJaW50IGl0ZW1z
OworCisJaXRlbV9oZWFkZXI0MCAqbGVmdGg7CisJaXRlbV9oZWFkZXI0MCAqcmlnaHRoOworCisJ
aXRlbV9wbHVnaW4gKmlwbHVnOworCWl0ZW1faGVhZGVyNDAgKmJzdG9wOworCWl0ZW1faGVhZGVy
NDAgKmloOworCWNtcF90IG9yZGVyOworCisJYXNzZXJ0KCJuaWtpdGEtNTgzIiwgbm9kZSAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS01ODQiLCBrZXkgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtNTg1IiwgY29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjY5MyIsIHpub2RlX2lz
X2FueV9sb2NrZWQobm9kZSkpOworCWNhc3NlcnQoUkVJU0VSNF9TRVFfU0VBUkNIX0JSRUFLID4g
Mik7CisKKwlpdGVtcyA9IG5vZGVfbnVtX2l0ZW1zKG5vZGUpOworCisJaWYgKHVubGlrZWx5KGl0
ZW1zID09IDApKSB7CisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdChjb29yZCwgbm9kZSk7CisJCXJl
dHVybiBOU19OT1RfRk9VTkQ7CisJfQorCisJLyogYmluYXJ5IHNlYXJjaCBmb3IgaXRlbSB0aGF0
IGNhbiBjb250YWluIGdpdmVuIGtleSAqLworCWxlZnQgPSAwOworCXJpZ2h0ID0gaXRlbXMgLSAx
OworCWNvb3JkLT5ub2RlID0gbm9kZTsKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7CisJZm91
bmQgPSAwOworCisJbGVmdGggPSBub2RlNDBfaWhfYXQobm9kZSwgbGVmdCk7CisJcmlnaHRoID0g
bm9kZTQwX2loX2F0KG5vZGUsIHJpZ2h0KTsKKworCS8qIEl0IGlzIGtub3duIHRoYXQgZm9yIHNt
YWxsIGFycmF5cyBzZXF1ZW50aWFsIHNlYXJjaCBpcyBvbiBhdmVyYWdlCisJICAgbW9yZSBlZmZp
Y2llbnQgdGhhbiBiaW5hcnkuIFRoaXMgaXMgYmVjYXVzZSBzZXF1ZW50aWFsIHNlYXJjaCBpcwor
CSAgIGNvZGVkIGFzIHRpZ2h0IGxvb3AgdGhhdCBjYW4gYmUgYmV0dGVyIG9wdGltaXplZCBieSBj
b21waWxlcnMgYW5kCisJICAgZm9yIHNtYWxsIGFycmF5IHNpemUgZ2FpbiBmcm9tIHRoaXMgb3B0
aW1pemF0aW9uIG1ha2VzIHNlcXVlbnRpYWwKKwkgICBzZWFyY2ggdGhlIHdpbm5lci4gQW5vdGhl
ciwgbWF5YmUgbW9yZSBpbXBvcnRhbnQsIHJlYXNvbiBmb3IgdGhpcywKKwkgICBpcyB0aGF0IHNl
cXVlbnRpYWwgYXJyYXkgaXMgbW9yZSBDUFUgY2FjaGUgZnJpZW5kbHksIHdoZXJlYXMgYmluYXJ5
CisJICAgc2VhcmNoIGVmZmVjdGl2ZWx5IGRlc3Ryb3lzIENQVSBjYWNoaW5nLgorCisJICAgQ3Jp
dGljYWwgaGVyZSBpcyB0aGUgbm90aW9uIG9mICJzbWFsbG5lc3MiLiBSZWFzb25hYmxlIHZhbHVl
IG9mCisJICAgUkVJU0VSNF9TRVFfU0VBUkNIX0JSRUFLIGNhbiBiZSBmb3VuZCBieSBwbGF5aW5n
IHdpdGggY29kZSBpbgorCSAgIGZzL3JlaXNlcjQvdWxldmVsL3VsZXZlbC5jOnRlc3Rfc2VhcmNo
KCkuCisKKwkgICBEb24ndCB0cnkgdG8gZnVydGhlciBvcHRpbWl6ZSBzZXF1ZW50aWFsIHNlYXJj
aCBieSBzY2FubmluZyBmcm9tCisJICAgcmlnaHQgdG8gbGVmdCBpbiBhdHRlbXB0IHRvIHVzZSBt
b3JlIGVmZmljaWVudCBsb29wIHRlcm1pbmF0aW9uCisJICAgY29uZGl0aW9uIChjb21wYXJpc29u
IHdpdGggMCkuIFRoaXMgZG9lc24ndCB3b3JrLgorCisJICovCisKKwl3aGlsZSAocmlnaHQgLSBs
ZWZ0ID49IFJFSVNFUjRfU0VRX1NFQVJDSF9CUkVBSykgeworCQlpbnQgbWVkaWFuOworCQlpdGVt
X2hlYWRlcjQwICptZWRpYW5oOworCisJCW1lZGlhbiA9IChsZWZ0ICsgcmlnaHQpIC8gMjsKKwkJ
bWVkaWFuaCA9IG5vZGU0MF9paF9hdChub2RlLCBtZWRpYW4pOworCisJCWFzc2VydCgibmlraXRh
LTEwODQiLCBtZWRpYW4gPj0gMCk7CisJCWFzc2VydCgibmlraXRhLTEwODUiLCBtZWRpYW4gPCBp
dGVtcyk7CisJCXN3aXRjaCAoa2V5Y21wKGtleSwgJm1lZGlhbmgtPmtleSkpIHsKKwkJY2FzZSBM
RVNTX1RIQU46CisJCQlyaWdodCA9IG1lZGlhbjsKKwkJCXJpZ2h0aCA9IG1lZGlhbmg7CisJCQli
cmVhazsKKwkJZGVmYXVsdDoKKwkJCXdyb25nX3JldHVybl92YWx1ZSgibmlraXRhLTU4NiIsICJr
ZXljbXAiKTsKKwkJY2FzZSBHUkVBVEVSX1RIQU46CisJCQlsZWZ0ID0gbWVkaWFuOworCQkJbGVm
dGggPSBtZWRpYW5oOworCQkJYnJlYWs7CisJCWNhc2UgRVFVQUxfVE86CisJCQlkbyB7CisJCQkJ
LS1tZWRpYW47CisJCQkJLyogaGVhZGVycyBhcmUgb3JkZXJlZCBmcm9tIHJpZ2h0IHRvIGxlZnQg
Ki8KKwkJCQkrK21lZGlhbmg7CisJCQl9IHdoaWxlIChtZWRpYW4gPj0gMCAmJiBrZXllcShrZXks
ICZtZWRpYW5oLT5rZXkpKTsKKwkJCXJpZ2h0ID0gbGVmdCA9IG1lZGlhbiArIDE7CisJCQlpaCA9
IGxlZnRoID0gcmlnaHRoID0gbWVkaWFuaCAtIDE7CisJCQlmb3VuZCA9IDE7CisJCQlicmVhazsK
KwkJfQorCX0KKwkvKiBzZXF1ZW50aWFsIHNjYW4uIEl0ZW0gaGVhZGVycywgYW5kLCB0aGVyZWZv
cmUsIGtleXMgYXJlIHN0b3JlZCBhdAorCSAgIHRoZSByaWdodG1vc3QgcGFydCBvZiBhIG5vZGUg
ZnJvbSByaWdodCB0byBsZWZ0LiBXZSBhcmUgdHJ5aW5nIHRvCisJICAgYWNjZXNzIG1lbW9yeSBm
cm9tIGxlZnQgdG8gcmlnaHQsIGFuZCBoZW5jZSwgc2NhbiBpbiBfZGVzY2VuZGluZ18KKwkgICBv
cmRlciBvZiBpdGVtIG51bWJlcnMuCisJICovCisJaWYgKCFmb3VuZCkgeworCQlmb3IgKGxlZnQg
PSByaWdodCwgaWggPSByaWdodGg7IGxlZnQgPj0gMDsgKytpaCwgLS1sZWZ0KSB7CisJCQljbXBf
dCBjb21wYXJpc29uOworCisJCQlwcmVmZXRjaGtleSgmKGloICsgMSktPmtleSk7CisJCQljb21w
YXJpc29uID0ga2V5Y21wKCZpaC0+a2V5LCBrZXkpOworCQkJaWYgKGNvbXBhcmlzb24gPT0gR1JF
QVRFUl9USEFOKQorCQkJCWNvbnRpbnVlOworCQkJaWYgKGNvbXBhcmlzb24gPT0gRVFVQUxfVE8p
IHsKKwkJCQlmb3VuZCA9IDE7CisJCQkJZG8geworCQkJCQktLWxlZnQ7CisJCQkJCSsraWg7CisJ
CQkJfSB3aGlsZSAobGVmdCA+PSAwICYmIGtleWVxKCZpaC0+a2V5LCBrZXkpKTsKKwkJCQkrK2xl
ZnQ7CisJCQkJLS1paDsKKwkJCX0gZWxzZSB7CisJCQkJYXNzZXJ0KCJuaWtpdGEtMTI1NiIsIGNv
bXBhcmlzb24gPT0gTEVTU19USEFOKTsKKwkJCX0KKwkJCWJyZWFrOworCQl9CisJCWlmICh1bmxp
a2VseShsZWZ0IDwgMCkpCisJCQlsZWZ0ID0gMDsKKwl9CisKKwlhc3NlcnQoIm5pa2l0YS0zMjEy
IiwgcmlnaHQgPj0gbGVmdCk7CisJYXNzZXJ0KCJuaWtpdGEtMzIxNCIsCisJICAgICAgIGVxdWko
Zm91bmQsIGtleWVxKCZub2RlNDBfaWhfYXQobm9kZSwgbGVmdCktPmtleSwga2V5KSkpOworCisJ
Y29vcmRfc2V0X2l0ZW1fcG9zKGNvb3JkLCBsZWZ0KTsKKwljb29yZC0+dW5pdF9wb3MgPSAwOwor
CWNvb3JkLT5iZXR3ZWVuID0gQVRfVU5JVDsKKworCS8qIGtleSA8IGxlZnRtb3N0IGtleSBpbiBh
IG1vZGUgb3Igbm9kZSBpcyBjb3JydXB0ZWQgYW5kIGtleXMKKwkgICBhcmUgbm90IHNvcnRlZCAg
Ki8KKwlic3RvcCA9IG5vZGU0MF9paF9hdChub2RlLCAodW5zaWduZWQpbGVmdCk7CisJb3JkZXIg
PSBrZXljbXAoJmJzdG9wLT5rZXksIGtleSk7CisJaWYgKHVubGlrZWx5KG9yZGVyID09IEdSRUFU
RVJfVEhBTikpIHsKKwkJaWYgKHVubGlrZWx5KGxlZnQgIT0gMCkpIHsKKwkJCS8qIHNjcmV3IHVw
ICovCisJCQl3YXJuaW5nKCJuaWtpdGEtNTg3IiwgIktleSBsZXNzIHRoYW4gJWkga2V5IGluIGEg
bm9kZSIsCisJCQkJbGVmdCk7CisJCQlyZWlzZXI0X3ByaW50X2tleSgia2V5Iiwga2V5KTsKKwkJ
CXJlaXNlcjRfcHJpbnRfa2V5KCJtaW4iLCAmYnN0b3AtPmtleSk7CisJCQlwcmludF9jb29yZF9j
b250ZW50KCJjb29yZCIsIGNvb3JkKTsKKwkJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJCX0gZWxz
ZSB7CisJCQljb29yZC0+YmV0d2VlbiA9IEJFRk9SRV9VTklUOworCQkJcmV0dXJuIE5TX05PVF9G
T1VORDsKKwkJfQorCX0KKwkvKiBsZWZ0IDw9IGtleSwgb2sgKi8KKwlpcGx1ZyA9IGl0ZW1fcGx1
Z2luX2J5X2Rpc2tfaWQoem5vZGVfZ2V0X3RyZWUobm9kZSksICZic3RvcC0+cGx1Z2luX2lkKTsK
KworCWlmICh1bmxpa2VseShpcGx1ZyA9PSBOVUxMKSkgeworCQl3YXJuaW5nKCJuaWtpdGEtNTg4
IiwgIlVua25vd24gcGx1Z2luICVpIiwKKwkJCWxlMTZfdG9fY3B1KGdldF91bmFsaWduZWQoJmJz
dG9wLT5wbHVnaW5faWQpKSk7CisJCXJlaXNlcjRfcHJpbnRfa2V5KCJrZXkiLCBrZXkpOworCQlw
cmludF9jb29yZF9jb250ZW50KCJjb29yZCIsIGNvb3JkKTsKKwkJcmV0dXJuIFJFVEVSUigtRUlP
KTsKKwl9CisKKwljb29yZF9zZXRfaXBsdWcoY29vcmQsIGlwbHVnKTsKKworCS8qIGlmIGV4YWN0
IGtleSBmcm9tIGl0ZW0gaGVhZGVyIHdhcyBmb3VuZCBieSBiaW5hcnkgc2VhcmNoLCBubworCSAg
IGZ1cnRoZXIgY2hlY2tzIGFyZSBuZWNlc3NhcnkuICovCisJaWYgKGZvdW5kKSB7CisJCWFzc2Vy
dCgibmlraXRhLTEyNTkiLCBvcmRlciA9PSBFUVVBTF9UTyk7CisJCXJldHVybiBOU19GT1VORDsK
Kwl9CisJaWYgKGlwbHVnLT5iLm1heF9rZXlfaW5zaWRlICE9IE5VTEwpIHsKKwkJcmVpc2VyNF9r
ZXkgbWF4X2l0ZW1fa2V5OworCisJCS8qIGtleSA+IG1heF9pdGVtX2tleSAtLS0gb3V0c2lkZSBv
ZiBhbiBpdGVtICovCisJCWlmIChrZXlndChrZXksIGlwbHVnLT5iLm1heF9rZXlfaW5zaWRlKGNv
b3JkLCAmbWF4X2l0ZW1fa2V5KSkpIHsKKwkJCWNvb3JkLT51bml0X3BvcyA9IDA7CisJCQljb29y
ZC0+YmV0d2VlbiA9IEFGVEVSX0lURU07CisJCQkvKiBGSVhNRS1WUzoga2V5IHdlIGFyZSBsb29r
aW5nIGZvciBkb2VzIG5vdCBmaXQgaW50bworCQkJICAgZm91bmQgaXRlbS4gUmV0dXJuIE5TX05P
VF9GT1VORCB0aGVuLiBXaXRob3V0IHRoYXQKKwkJCSAgIHRoZSBmb2xsb3dpbmcgY2FzZSBkb2Vz
IG5vdCB3b3JrOiB0aGVyZSBpcyBleHRlbnQgb2YKKwkJCSAgIGZpbGUgMTAwMDAsIDEwMDAxLiBG
aWxlIDEwMDAwLCAxMDAwMiBoYXMgYmVlbiBqdXN0CisJCQkgICBjcmVhdGVkLiBXaGVuIHdyaXRp
bmcgdG8gcG9zaXRpb24gMCBpbiB0aGF0IGZpbGUgLQorCQkJICAgdHJhdmVyc2VfdHJlZSB3aWxs
IHN0b3AgaGVyZSBvbiB0d2lnIGxldmVsLiBXaGVuIHdlCisJCQkgICB3YW50IGl0IHRvIGdvIGRv
d24gdG8gbGVhZiBsZXZlbAorCQkJICovCisJCQlyZXR1cm4gTlNfTk9UX0ZPVU5EOworCQl9CisJ
fQorCisJaWYgKGlwbHVnLT5iLmxvb2t1cCAhPSBOVUxMKSB7CisJCXJldHVybiBpcGx1Zy0+Yi5s
b29rdXAoa2V5LCBiaWFzLCBjb29yZCk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJuaWtpdGEtMTI2
MCIsIG9yZGVyID09IExFU1NfVEhBTik7CisJCWNvb3JkLT5iZXR3ZWVuID0gQUZURVJfVU5JVDsK
KwkJcmV0dXJuIChiaWFzID09IEZJTkRfRVhBQ1QpID8gTlNfTk9UX0ZPVU5EIDogTlNfRk9VTkQ7
CisJfQorfQorCisjdW5kZWYgTk9ERV9BRERTVEFUCisjdW5kZWYgTk9ERV9JTkNTVEFUCisKKy8q
IHBsdWdpbi0+dS5ub2RlLmVzdGltYXRlCisgICBsb29rIGZvciBkZXNjcmlwdGlvbiBvZiB0aGlz
IG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmggKi8KK3NpemVfdCBlc3RpbWF0ZV9ub2RlNDAo
em5vZGUgKiBub2RlKQoreworCXNpemVfdCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS01OTci
LCBub2RlICE9IE5VTEwpOworCisJcmVzdWx0ID0gZnJlZV9zcGFjZV9ub2RlNDAobm9kZSkgLSBz
aXplb2YoaXRlbV9oZWFkZXI0MCk7CisKKwlyZXR1cm4gKHJlc3VsdCA+IDApID8gcmVzdWx0IDog
MDsKK30KKworLyogcGx1Z2luLT51Lm5vZGUuY2hlY2sKKyAgIGxvb2sgZm9yIGRlc2NyaXB0aW9u
IG9mIHRoaXMgbWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaCAqLworaW50IGNoZWNrX25vZGU0
MChjb25zdCB6bm9kZSAqIG5vZGUgLyogbm9kZSB0byBjaGVjayAqLyAsCisJCSBfX3UzMiBmbGFn
cyAvKiBjaGVjayBmbGFncyAqLyAsCisJCSBjb25zdCBjaGFyICoqZXJyb3IgLyogd2hlcmUgdG8g
c3RvcmUgZXJyb3IgbWVzc2FnZSAqLyApCit7CisJaW50IG5yX2l0ZW1zOworCWludCBpOworCXJl
aXNlcjRfa2V5IHByZXY7CisJdW5zaWduZWQgb2xkX29mZnNldDsKKwl0cmVlX2xldmVsIGxldmVs
OworCWNvb3JkX3QgY29vcmQ7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTU4MCIs
IG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNTgxIiwgZXJyb3IgIT0gTlVMTCk7CisJ
YXNzZXJ0KCJuaWtpdGEtMjk0OCIsIHpub2RlX2lzX2xvYWRlZChub2RlKSk7CisKKwlpZiAoWkZf
SVNTRVQobm9kZSwgSk5PREVfSEVBUkRfQkFOU0hFRSkpCisJCXJldHVybiAwOworCisJYXNzZXJ0
KCJuaWtpdGEtNTgyIiwgemRhdGEobm9kZSkgIT0gTlVMTCk7CisKKwlucl9pdGVtcyA9IG5vZGU0
MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwobm9kZSk7CisJaWYgKG5yX2l0ZW1zIDwgMCkgeworCQkq
ZXJyb3IgPSAiTmVnYXRpdmUgbnVtYmVyIG9mIGl0ZW1zIjsKKwkJcmV0dXJuIC0xOworCX0KKwor
CWlmIChmbGFncyAmIFJFSVNFUjRfTk9ERV9ES0VZUykKKwkJcHJldiA9ICp6bm9kZV9nZXRfbGRf
a2V5KCh6bm9kZSAqKSBub2RlKTsKKwllbHNlCisJCXByZXYgPSAqcmVpc2VyNF9taW5fa2V5KCk7
CisKKwlvbGRfb2Zmc2V0ID0gMDsKKwljb29yZF9pbml0X3plcm8oJmNvb3JkKTsKKwljb29yZC5u
b2RlID0gKHpub2RlICopIG5vZGU7CisJY29vcmQudW5pdF9wb3MgPSAwOworCWNvb3JkLmJldHdl
ZW4gPSBBVF9VTklUOworCWxldmVsID0gem5vZGVfZ2V0X2xldmVsKG5vZGUpOworCWZvciAoaSA9
IDA7IGkgPCBucl9pdGVtczsgaSsrKSB7CisJCWl0ZW1faGVhZGVyNDAgKmloOworCQlyZWlzZXI0
X2tleSB1bml0X2tleTsKKwkJdW5zaWduZWQgajsKKworCQlpaCA9IG5vZGU0MF9paF9hdChub2Rl
LCAodW5zaWduZWQpaSk7CisJCWNvb3JkX3NldF9pdGVtX3BvcygmY29vcmQsIGkpOworCQlpZiAo
KGloNDBfZ2V0X29mZnNldChpaCkgPj0KKwkJICAgICB6bm9kZV9zaXplKG5vZGUpIC0gbnJfaXRl
bXMgKiBzaXplb2YoaXRlbV9oZWFkZXI0MCkpIHx8CisJCSAgICAoaWg0MF9nZXRfb2Zmc2V0KGlo
KSA8IHNpemVvZihub2RlNDBfaGVhZGVyKSkpIHsKKwkJCSplcnJvciA9ICJPZmZzZXQgaXMgb3V0
IG9mIGJvdW5kcyI7CisJCQlyZXR1cm4gLTE7CisJCX0KKwkJaWYgKGloNDBfZ2V0X29mZnNldChp
aCkgPD0gb2xkX29mZnNldCkgeworCQkJKmVycm9yID0gIk9mZnNldHMgYXJlIGluIHdyb25nIG9y
ZGVyIjsKKwkJCXJldHVybiAtMTsKKwkJfQorCQlpZiAoKGkgPT0gMCkgJiYgKGloNDBfZ2V0X29m
ZnNldChpaCkgIT0gc2l6ZW9mKG5vZGU0MF9oZWFkZXIpKSkgeworCQkJKmVycm9yID0gIldyb25n
IG9mZnNldCBvZiBmaXJzdCBpdGVtIjsKKwkJCXJldHVybiAtMTsKKwkJfQorCQlvbGRfb2Zmc2V0
ID0gaWg0MF9nZXRfb2Zmc2V0KGloKTsKKworCQlpZiAoa2V5Z3QoJnByZXYsICZpaC0+a2V5KSkg
eworCQkJKmVycm9yID0gIktleXMgYXJlIGluIHdyb25nIG9yZGVyIjsKKwkJCXJldHVybiAtMTsK
KwkJfQorCQlpZiAoIWtleWVxKCZpaC0+a2V5LCB1bml0X2tleV9ieV9jb29yZCgmY29vcmQsICZ1
bml0X2tleSkpKSB7CisJCQkqZXJyb3IgPSAiV3Jvbmcga2V5IG9mIGZpcnN0IHVuaXQiOworCQkJ
cmV0dXJuIC0xOworCQl9CisJCXByZXYgPSBpaC0+a2V5OworCQlmb3IgKGogPSAwOyBqIDwgY29v
cmRfbnVtX3VuaXRzKCZjb29yZCk7ICsraikgeworCQkJY29vcmQudW5pdF9wb3MgPSBqOworCQkJ
dW5pdF9rZXlfYnlfY29vcmQoJmNvb3JkLCAmdW5pdF9rZXkpOworCQkJaWYgKGtleWd0KCZwcmV2
LCAmdW5pdF9rZXkpKSB7CisJCQkJKmVycm9yID0gIlVuaXQga2V5cyBhcmUgaW4gd3Jvbmcgb3Jk
ZXIiOworCQkJCXJldHVybiAtMTsKKwkJCX0KKwkJCXByZXYgPSB1bml0X2tleTsKKwkJfQorCQlj
b29yZC51bml0X3BvcyA9IDA7CisJCWlmIChsZXZlbCAhPSBUV0lHX0xFVkVMICYmIGl0ZW1faXNf
ZXh0ZW50KCZjb29yZCkpIHsKKwkJCSplcnJvciA9ICJleHRlbnQgb24gdGhlIHdyb25nIGxldmVs
IjsKKwkJCXJldHVybiAtMTsKKwkJfQorCQlpZiAobGV2ZWwgPT0gTEVBRl9MRVZFTCAmJiBpdGVt
X2lzX2ludGVybmFsKCZjb29yZCkpIHsKKwkJCSplcnJvciA9ICJpbnRlcm5hbCBpdGVtIG9uIHRo
ZSB3cm9uZyBsZXZlbCI7CisJCQlyZXR1cm4gLTE7CisJCX0KKwkJaWYgKGxldmVsICE9IExFQUZf
TEVWRUwgJiYKKwkJICAgICFpdGVtX2lzX2ludGVybmFsKCZjb29yZCkgJiYgIWl0ZW1faXNfZXh0
ZW50KCZjb29yZCkpIHsKKwkJCSplcnJvciA9ICJ3cm9uZyBpdGVtIG9uIHRoZSBpbnRlcm5hbCBs
ZXZlbCI7CisJCQlyZXR1cm4gLTE7CisJCX0KKwkJaWYgKGxldmVsID4gVFdJR19MRVZFTCAmJiAh
aXRlbV9pc19pbnRlcm5hbCgmY29vcmQpKSB7CisJCQkqZXJyb3IgPSAibm9uLWludGVybmFsIGl0
ZW0gb24gdGhlIGludGVybmFsIGxldmVsIjsKKwkJCXJldHVybiAtMTsKKwkJfQorI2lmIFJFSVNF
UjRfREVCVUcKKwkJaWYgKGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZjb29yZCktPmIuY2hlY2sKKwkJ
ICAgICYmIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZjb29yZCktPmIuY2hlY2soJmNvb3JkLCBlcnJv
cikpCisJCQlyZXR1cm4gLTE7CisjZW5kaWYKKwkJaWYgKGkpIHsKKwkJCWNvb3JkX3QgcHJldl9j
b29yZDsKKwkJCS8qIHR3byBuZWlnaGJvcmluZyBpdGVtcyBjYW4gbm90IGJlIG1lcmdlYWJsZSAq
LworCQkJY29vcmRfZHVwKCZwcmV2X2Nvb3JkLCAmY29vcmQpOworCQkJY29vcmRfcHJldl9pdGVt
KCZwcmV2X2Nvb3JkKTsKKwkJCWlmIChhcmVfaXRlbXNfbWVyZ2VhYmxlKCZwcmV2X2Nvb3JkLCAm
Y29vcmQpKSB7CisJCQkJKmVycm9yID0gIm1lcmdlYWJsZSBpdGVtcyBpbiBvbmUgbm9kZSI7CisJ
CQkJcmV0dXJuIC0xOworCQkJfQorCisJCX0KKwl9CisKKwlpZiAoKGZsYWdzICYgUkVJU0VSNF9O
T0RFX0RLRVlTKSAmJiAhbm9kZV9pc19lbXB0eShub2RlKSkgeworCQljb29yZF90IGNvb3JkOwor
CQlpdGVtX3BsdWdpbiAqaXBsdWc7CisKKwkJY29vcmRfaW5pdF9sYXN0X3VuaXQoJmNvb3JkLCBu
b2RlKTsKKwkJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZCgmY29vcmQpOworCQlpZiAoKGl0
ZW1faXNfZXh0ZW50KCZjb29yZCkgfHwgaXRlbV9pc190YWlsKCZjb29yZCkpICYmCisJCSAgICBp
cGx1Zy0+cy5maWxlLmFwcGVuZF9rZXkgIT0gTlVMTCkgeworCQkJcmVpc2VyNF9rZXkgbWtleTsK
KworCQkJaXBsdWctPnMuZmlsZS5hcHBlbmRfa2V5KCZjb29yZCwgJm1rZXkpOworCQkJc2V0X2tl
eV9vZmZzZXQoJm1rZXksIGdldF9rZXlfb2Zmc2V0KCZta2V5KSAtIDEpOworCQkJcmVhZF9sb2Nr
X2RrKGN1cnJlbnRfdHJlZSk7CisJCQlyZXN1bHQgPSBrZXlndCgmbWtleSwgem5vZGVfZ2V0X3Jk
X2tleSgoem5vZGUgKikgbm9kZSkpOworCQkJcmVhZF91bmxvY2tfZGsoY3VycmVudF90cmVlKTsK
KwkJCWlmIChyZXN1bHQpIHsKKwkJCQkqZXJyb3IgPSAia2V5IG9mIHJpZ2h0bW9zdCBpdGVtIGlz
IHRvbyBsYXJnZSI7CisJCQkJcmV0dXJuIC0xOworCQkJfQorCQl9CisJfQorCWlmIChmbGFncyAm
IFJFSVNFUjRfTk9ERV9ES0VZUykgeworCQlyZWFkX2xvY2tfdHJlZShjdXJyZW50X3RyZWUpOwor
CQlyZWFkX2xvY2tfZGsoY3VycmVudF90cmVlKTsKKworCQlmbGFncyB8PSBSRUlTRVI0X05PREVf
VFJFRV9TVEFCTEU7CisKKwkJaWYgKGtleWd0KCZwcmV2LCB6bm9kZV9nZXRfcmRfa2V5KCh6bm9k
ZSAqKSBub2RlKSkpIHsKKwkJCWlmIChmbGFncyAmIFJFSVNFUjRfTk9ERV9UUkVFX1NUQUJMRSkg
eworCQkJCSplcnJvciA9ICJMYXN0IGtleSBpcyBncmVhdGVyIHRoYW4gcmRrZXkiOworCQkJCXJl
YWRfdW5sb2NrX2RrKGN1cnJlbnRfdHJlZSk7CisJCQkJcmVhZF91bmxvY2tfdHJlZShjdXJyZW50
X3RyZWUpOworCQkJCXJldHVybiAtMTsKKwkJCX0KKwkJfQorCQlpZiAoa2V5Z3QKKwkJICAgICh6
bm9kZV9nZXRfbGRfa2V5KCh6bm9kZSAqKSBub2RlKSwKKwkJICAgICB6bm9kZV9nZXRfcmRfa2V5
KCh6bm9kZSAqKSBub2RlKSkpIHsKKwkJCSplcnJvciA9ICJsZGtleSBpcyBncmVhdGVyIHRoYW4g
cmRrZXkiOworCQkJcmVhZF91bmxvY2tfZGsoY3VycmVudF90cmVlKTsKKwkJCXJlYWRfdW5sb2Nr
X3RyZWUoY3VycmVudF90cmVlKTsKKwkJCXJldHVybiAtMTsKKwkJfQorCQlpZiAoWkZfSVNTRVQo
bm9kZSwgSk5PREVfTEVGVF9DT05ORUNURUQpICYmCisJCSAgICAobm9kZS0+bGVmdCAhPSBOVUxM
KSAmJgorCQkgICAgIVpGX0lTU0VUKG5vZGUtPmxlZnQsIEpOT0RFX0hFQVJEX0JBTlNIRUUpICYm
CisJCSAgICBlcmdvKGZsYWdzICYgUkVJU0VSNF9OT0RFX1RSRUVfU1RBQkxFLAorCQkJICFrZXll
cSh6bm9kZV9nZXRfcmRfa2V5KG5vZGUtPmxlZnQpLAorCQkJCXpub2RlX2dldF9sZF9rZXkoKHpu
b2RlICopIG5vZGUpKSkKKwkJICAgICYmIGVyZ28oIShmbGFncyAmIFJFSVNFUjRfTk9ERV9UUkVF
X1NUQUJMRSksCisJCQkgICAga2V5Z3Qoem5vZGVfZ2V0X3JkX2tleShub2RlLT5sZWZ0KSwKKwkJ
CQkgIHpub2RlX2dldF9sZF9rZXkoKHpub2RlICopIG5vZGUpKSkpIHsKKwkJCSplcnJvciA9ICJs
ZWZ0IHJka2V5IG9yIGxka2V5IGlzIHdyb25nIjsKKyAJCQlyZWFkX3VubG9ja19kayhjdXJyZW50
X3RyZWUpOworCQkJcmVhZF91bmxvY2tfdHJlZShjdXJyZW50X3RyZWUpOworCQkJcmV0dXJuIC0x
OworCQl9CisJCWlmIChaRl9JU1NFVChub2RlLCBKTk9ERV9SSUdIVF9DT05ORUNURUQpICYmCisJ
CSAgICAobm9kZS0+cmlnaHQgIT0gTlVMTCkgJiYKKwkJICAgICFaRl9JU1NFVChub2RlLT5yaWdo
dCwgSk5PREVfSEVBUkRfQkFOU0hFRSkgJiYKKwkJICAgIGVyZ28oZmxhZ3MgJiBSRUlTRVI0X05P
REVfVFJFRV9TVEFCTEUsCisJCQkgIWtleWVxKHpub2RlX2dldF9yZF9rZXkoKHpub2RlICopIG5v
ZGUpLAorCQkJCXpub2RlX2dldF9sZF9rZXkobm9kZS0+cmlnaHQpKSkKKwkJICAgICYmIGVyZ28o
IShmbGFncyAmIFJFSVNFUjRfTk9ERV9UUkVFX1NUQUJMRSksCisJCQkgICAga2V5Z3Qoem5vZGVf
Z2V0X3JkX2tleSgoem5vZGUgKikgbm9kZSksCisJCQkJICB6bm9kZV9nZXRfbGRfa2V5KG5vZGUt
PnJpZ2h0KSkpKSB7CisJCQkqZXJyb3IgPSAicmRrZXkgb3IgcmlnaHQgbGRrZXkgaXMgd3Jvbmci
OworIAkJCXJlYWRfdW5sb2NrX2RrKGN1cnJlbnRfdHJlZSk7CisJCQlyZWFkX3VubG9ja190cmVl
KGN1cnJlbnRfdHJlZSk7CisJCQlyZXR1cm4gLTE7CisJCX0KKworCQlyZWFkX3VubG9ja19kayhj
dXJyZW50X3RyZWUpOworCQlyZWFkX3VubG9ja190cmVlKGN1cnJlbnRfdHJlZSk7CisJfQorCisJ
cmV0dXJuIDA7Cit9CisKK2ludCBwYXJzZV9ub2RlNDBfY29tbW9uKHpub2RlICpub2RlLCBjb25z
dCBfX3UzMiBtYWdpYykKK3sKKwlub2RlNDBfaGVhZGVyICpoZWFkZXI7CisJaW50IHJlc3VsdDsK
KwlkOCBsZXZlbDsKKworCWhlYWRlciA9IG5vZGU0MF9ub2RlX2hlYWRlcigoem5vZGUgKikgbm9k
ZSk7CisJcmVzdWx0ID0gLUVJTzsKKwlsZXZlbCA9IG5oNDBfZ2V0X2xldmVsKGhlYWRlcik7CisJ
aWYgKHVubGlrZWx5KCgoX191OCkgem5vZGVfZ2V0X2xldmVsKG5vZGUpKSAhPSBsZXZlbCkpCisJ
CXdhcm5pbmcoIm5pa2l0YS00OTQiLCAiV3JvbmcgbGV2ZWwgZm91bmQgaW4gbm9kZTogJWkgIT0g
JWkiLAorCQkJem5vZGVfZ2V0X2xldmVsKG5vZGUpLCBsZXZlbCk7CisJZWxzZSBpZiAodW5saWtl
bHkobmg0MF9nZXRfbWFnaWMoaGVhZGVyKSAhPSBtYWdpYykpCisJCXdhcm5pbmcoIm5pa2l0YS00
OTUiLAorCQkJIldyb25nIG1hZ2ljIGluIHRyZWUgbm9kZTogd2FudCAleCwgZ290ICV4IiwKKwkJ
CW1hZ2ljLCBuaDQwX2dldF9tYWdpYyhoZWFkZXIpKTsKKwllbHNlIHsKKwkJbm9kZS0+bnJfaXRl
bXMgPSBub2RlNDBfbnVtX29mX2l0ZW1zX2ludGVybmFsKG5vZGUpOworCQlyZXN1bHQgPSAwOwor
CX0KKwlyZXR1cm4gUkVURVJSKHJlc3VsdCk7Cit9CisKKy8qCisgKiBwbHVnaW4tPnUubm9kZS5w
YXJzZQorICogbG9vayBmb3IgZGVzY3JpcHRpb24gb2YgdGhpcyBtZXRob2QgaW4gcGx1Z2luL25v
ZGUvbm9kZS5oCisgKi8KK2ludCBwYXJzZV9ub2RlNDAoem5vZGUgKm5vZGUgLyogbm9kZSB0byBw
YXJzZSAqLykKK3sKKwlyZXR1cm4gcGFyc2Vfbm9kZTQwX2NvbW1vbihub2RlLCBSRUlTRVI0X05P
REU0MF9NQUdJQyk7Cit9CisKKy8qCisgKiBjb21tb24gcGFydCBvZiAtPmluaXRfbm9kZSgpIGZv
ciBhbGwgbm9kZXMsCisgKiB3aGljaCBjb250YWluIG5vZGU0MF9oZWFkZXIgYXQgdGhlIGJlZ2lu
bmluZworICovCitpbnQgaW5pdF9ub2RlNDBfY29tbW9uKHpub2RlICpub2RlLCBub2RlX3BsdWdp
biAqbnBsdWcsCisJCSAgICAgICBzaXplX3Qgbm9kZV9oZWFkZXJfc2l6ZSwgY29uc3QgX191MzIg
bWFnaWMpCit7CisJbm9kZTQwX2hlYWRlciAqaGVhZGVyNDA7CisKKwlhc3NlcnQoIm5pa2l0YS01
NzAiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTU3MiIsIHpkYXRhKG5vZGUpICE9
IE5VTEwpOworCisJaGVhZGVyNDAgPSBub2RlNDBfbm9kZV9oZWFkZXIobm9kZSk7CisJbWVtc2V0
KGhlYWRlcjQwLCAwLCBzaXplb2Yobm9kZTQwX2hlYWRlcikpOworCisJbmg0MF9zZXRfZnJlZV9z
cGFjZShoZWFkZXI0MCwgem5vZGVfc2l6ZShub2RlKSAtIG5vZGVfaGVhZGVyX3NpemUpOworCW5o
NDBfc2V0X2ZyZWVfc3BhY2Vfc3RhcnQoaGVhZGVyNDAsIG5vZGVfaGVhZGVyX3NpemUpOworCS8q
CisJICogc2FuZSBoeXBvdGhlc2lzOiAwIGluIENQVSBmb3JtYXQgaXMgMCBpbiBkaXNrIGZvcm1h
dAorCSAqLworCXNhdmVfcGx1Z2luX2lkKG5vZGVfcGx1Z2luX3RvX3BsdWdpbihucGx1ZyksCisJ
CSAgICAgICAmaGVhZGVyNDAtPmNvbW1vbl9oZWFkZXIucGx1Z2luX2lkKTsKKwluaDQwX3NldF9s
ZXZlbChoZWFkZXI0MCwgem5vZGVfZ2V0X2xldmVsKG5vZGUpKTsKKwluaDQwX3NldF9tYWdpYyho
ZWFkZXI0MCwgbWFnaWMpOworCW5oNDBfc2V0X21rZnNfaWQoaGVhZGVyNDAsIHJlaXNlcjRfbWtm
c19pZChyZWlzZXI0X2dldF9jdXJyZW50X3NiKCkpKTsKKwkvKgorCSAqIG5yX2l0ZW1zOiAwCisJ
ICogZmxhZ3M6IDAKKwkgKi8KKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIHBsdWdpbi0+dS5ub2Rl
LmluaXQKKyAqIGxvb2sgZm9yIGRlc2NyaXB0aW9uIG9mIHRoaXMgbWV0aG9kIGluIHBsdWdpbi9u
b2RlL25vZGUuaAorICovCitpbnQgaW5pdF9ub2RlNDAoem5vZGUgKm5vZGUgLyogbm9kZSB0byBp
bml0aWFsaXNlICovKQoreworCXJldHVybiBpbml0X25vZGU0MF9jb21tb24obm9kZSwgbm9kZV9w
bHVnaW5fYnlfaWQoTk9ERTQwX0lEKSwKKwkJCQkgIHNpemVvZihub2RlNDBfaGVhZGVyKSwgUkVJ
U0VSNF9OT0RFNDBfTUFHSUMpOworfQorCisjaWZkZWYgR1VFU1NfRVhJU1RTCitpbnQgZ3Vlc3Nf
bm9kZTQwX2NvbW1vbihjb25zdCB6bm9kZSAqbm9kZSwgcmVpc2VyNF9ub2RlX2lkIGlkLAorCQkJ
Y29uc3QgX191MzIgbWFnaWMpCit7CisJbm9kZTQwX2hlYWRlciAqaGVhZGVyOworCisJYXNzZXJ0
KCJuaWtpdGEtMTA1OCIsIG5vZGUgIT0gTlVMTCk7CisJaGVhZGVyID0gbm9kZTQwX25vZGVfaGVh
ZGVyKG5vZGUpOworCXJldHVybiAobmg0MF9nZXRfbWFnaWMoaGVhZGVyKSA9PSBtYWdpYykgJiYK
KwkJKGlkID09IHBsdWdpbl9ieV9kaXNrX2lkKHpub2RlX2dldF90cmVlKG5vZGUpLAorCQkJCSAg
ICAgICBSRUlTRVI0X05PREVfUExVR0lOX1RZUEUsCisJCQkJICAgICAgICZoZWFkZXItPmNvbW1v
bl9oZWFkZXIucGx1Z2luX2lkKS0+aC5pZCk7Cit9CisKK2ludCBndWVzc19ub2RlNDAoY29uc3Qg
em5vZGUgKm5vZGUgLyogbm9kZSB0byBndWVzcyBwbHVnaW4gb2YgKi8pCit7CisJcmV0dXJuIGd1
ZXNzX25vZGU0MF9jb21tb24obm9kZSwgTk9ERTQwX0lELCBSRUlTRVI0X05PREU0MF9NQUdJQyk7
Cit9CisjZW5kaWYKKworLyogcGx1Z2luLT51Lm5vZGUuY2hhZ2VfaXRlbV9zaXplCisgICBsb29r
IGZvciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmggKi8K
K3ZvaWQgY2hhbmdlX2l0ZW1fc2l6ZV9ub2RlNDAoY29vcmRfdCAqIGNvb3JkLCBpbnQgYnkpCit7
CisJbm9kZTQwX2hlYWRlciAqbmg7CisJaXRlbV9oZWFkZXI0MCAqaWg7CisJY2hhciAqaXRlbV9k
YXRhOworCWludCBpdGVtX2xlbmd0aDsKKwl1bnNpZ25lZCBpOworCisJLyogbWFrZSBzdXJlIHRo
YXQgQGl0ZW0gaXMgY29vcmQgb2YgZXhpc3RpbmcgaXRlbSAqLworCWFzc2VydCgidnMtMjEwIiwg
Y29vcmRfaXNfZXhpc3RpbmdfaXRlbShjb29yZCkpOworCisJbmggPSBub2RlNDBfbm9kZV9oZWFk
ZXIoY29vcmQtPm5vZGUpOworCisJaXRlbV9kYXRhID0gaXRlbV9ieV9jb29yZF9ub2RlNDAoY29v
cmQpOworCWl0ZW1fbGVuZ3RoID0gbGVuZ3RoX2J5X2Nvb3JkX25vZGU0MChjb29yZCk7CisKKwkv
KiBtb3ZlIGl0ZW0gYm9kaWVzICovCisJaWggPSBub2RlNDBfaWhfYXRfY29vcmQoY29vcmQpOwor
CW1lbW1vdmUoaXRlbV9kYXRhICsgaXRlbV9sZW5ndGggKyBieSwgaXRlbV9kYXRhICsgaXRlbV9s
ZW5ndGgsCisJCW5oNDBfZ2V0X2ZyZWVfc3BhY2Vfc3RhcnQobm9kZTQwX25vZGVfaGVhZGVyKGNv
b3JkLT5ub2RlKSkgLQorCQkoaWg0MF9nZXRfb2Zmc2V0KGloKSArIGl0ZW1fbGVuZ3RoKSk7CisK
KwkvKiB1cGRhdGUgb2Zmc2V0cyBvZiBtb3ZlZCBpdGVtcyAqLworCWZvciAoaSA9IGNvb3JkLT5p
dGVtX3BvcyArIDE7IGkgPCBuaDQwX2dldF9udW1faXRlbXMobmgpOyBpKyspIHsKKwkJaWggPSBu
b2RlNDBfaWhfYXQoY29vcmQtPm5vZGUsIGkpOworCQlpaDQwX3NldF9vZmZzZXQoaWgsIGloNDBf
Z2V0X29mZnNldChpaCkgKyBieSk7CisJfQorCisJLyogdXBkYXRlIG5vZGUgaGVhZGVyICovCisJ
bmg0MF9zZXRfZnJlZV9zcGFjZShuaCwgbmg0MF9nZXRfZnJlZV9zcGFjZShuaCkgLSBieSk7CisJ
bmg0MF9zZXRfZnJlZV9zcGFjZV9zdGFydChuaCwgbmg0MF9nZXRfZnJlZV9zcGFjZV9zdGFydChu
aCkgKyBieSk7Cit9CisKK3N0YXRpYyBpbnQgc2hvdWxkX25vdGlmeV9wYXJlbnQoY29uc3Qgem5v
ZGUgKiBub2RlKQoreworCS8qIEZJWE1FX0pNQUNEIFRoaXMgbG9va3MgZXF1aXZhbGVudCB0byB6
bm9kZV9pc19yb290KCksIHJpZ2h0PyAtam9zaCAqLworCXJldHVybiAhZGlza19hZGRyX2VxKHpu
b2RlX2dldF9ibG9jayhub2RlKSwKKwkJCSAgICAgJnpub2RlX2dldF90cmVlKG5vZGUpLT5yb290
X2Jsb2NrKTsKK30KKworLyogcGx1Z2luLT51Lm5vZGUuY3JlYXRlX2l0ZW0KKyAgIGxvb2sgZm9y
IGRlc2NyaXB0aW9uIG9mIHRoaXMgbWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaCAqLworaW50
CitjcmVhdGVfaXRlbV9ub2RlNDAoY29vcmRfdCAqdGFyZ2V0LCBjb25zdCByZWlzZXI0X2tleSAq
a2V5LAorCQkgICByZWlzZXI0X2l0ZW1fZGF0YSAqZGF0YSwgY2FycnlfcGx1Z2luX2luZm8gKmlu
Zm8pCit7CisJbm9kZTQwX2hlYWRlciAqbmg7CisJaXRlbV9oZWFkZXI0MCAqaWg7CisJdW5zaWdu
ZWQgb2Zmc2V0OworCXVuc2lnbmVkIGk7CisKKwluaCA9IG5vZGU0MF9ub2RlX2hlYWRlcih0YXJn
ZXQtPm5vZGUpOworCisJYXNzZXJ0KCJ2cy0yMTIiLCBjb29yZF9pc19iZXR3ZWVuX2l0ZW1zKHRh
cmdldCkpOworCS8qIG5vZGUgbXVzdCBoYXZlIGVub3VnaCBmcmVlIHNwYWNlICovCisJYXNzZXJ0
KCJ2cy0yNTQiLAorCSAgICAgICBmcmVlX3NwYWNlX25vZGU0MCh0YXJnZXQtPm5vZGUpID49CisJ
ICAgICAgIGRhdGEtPmxlbmd0aCArIHNpemVvZihpdGVtX2hlYWRlcjQwKSk7CisJYXNzZXJ0KCJ2
cy0xNDEwIiwgZGF0YS0+bGVuZ3RoID49IDApOworCisJaWYgKGNvb3JkX3NldF90b19yaWdodCh0
YXJnZXQpKQorCQkvKiB0aGVyZSBhcmUgbm90IGl0ZW1zIHRvIHRoZSByaWdodCBvZiBAdGFyZ2V0
LCBzbywgbmV3IGl0ZW0KKwkJICAgd2lsbCBiZSBpbnNlcnRlZCBhZnRlciBsYXN0IG9uZSAqLwor
CQljb29yZF9zZXRfaXRlbV9wb3ModGFyZ2V0LCBuaDQwX2dldF9udW1faXRlbXMobmgpKTsKKwor
CWlmICh0YXJnZXQtPml0ZW1fcG9zIDwgbmg0MF9nZXRfbnVtX2l0ZW1zKG5oKSkgeworCQkvKiB0
aGVyZSBhcmUgaXRlbXMgdG8gYmUgbW92ZWQgdG8gcHJlcGFyZSBzcGFjZSBmb3IgbmV3CisJCSAg
IGl0ZW0gKi8KKwkJaWggPSBub2RlNDBfaWhfYXRfY29vcmQodGFyZ2V0KTsKKwkJLyogbmV3IGl0
ZW0gd2lsbCBzdGFydCBhdCB0aGlzIG9mZnNldCAqLworCQlvZmZzZXQgPSBpaDQwX2dldF9vZmZz
ZXQoaWgpOworCisJCW1lbW1vdmUoemRhdGEodGFyZ2V0LT5ub2RlKSArIG9mZnNldCArIGRhdGEt
Pmxlbmd0aCwKKwkJCXpkYXRhKHRhcmdldC0+bm9kZSkgKyBvZmZzZXQsCisJCQluaDQwX2dldF9m
cmVlX3NwYWNlX3N0YXJ0KG5oKSAtIG9mZnNldCk7CisJCS8qIHVwZGF0ZSBoZWFkZXJzIG9mIG1v
dmVkIGl0ZW1zICovCisJCWZvciAoaSA9IHRhcmdldC0+aXRlbV9wb3M7IGkgPCBuaDQwX2dldF9u
dW1faXRlbXMobmgpOyBpKyspIHsKKwkJCWloID0gbm9kZTQwX2loX2F0KHRhcmdldC0+bm9kZSwg
aSk7CisJCQlpaDQwX3NldF9vZmZzZXQoaWgsIGloNDBfZ2V0X29mZnNldChpaCkgKyBkYXRhLT5s
ZW5ndGgpOworCQl9CisKKwkJLyogQGloIGlzIHNldCB0byBpdGVtIGhlYWRlciBvZiB0aGUgbGFz
dCBpdGVtLCBtb3ZlIGl0ZW0gaGVhZGVycyAqLworCQltZW1tb3ZlKGloIC0gMSwgaWgsCisJCQlz
aXplb2YoaXRlbV9oZWFkZXI0MCkgKiAobmg0MF9nZXRfbnVtX2l0ZW1zKG5oKSAtCisJCQkJCQkg
dGFyZ2V0LT5pdGVtX3BvcykpOworCX0gZWxzZSB7CisJCS8qIG5ldyBpdGVtIHdpbGwgc3RhcnQg
YXQgdGhpcyBvZmZzZXQgKi8KKwkJb2Zmc2V0ID0gbmg0MF9nZXRfZnJlZV9zcGFjZV9zdGFydChu
aCk7CisJfQorCisJLyogbWFrZSBpdGVtIGhlYWRlciBmb3IgdGhlIG5ldyBpdGVtICovCisJaWgg
PSBub2RlNDBfaWhfYXRfY29vcmQodGFyZ2V0KTsKKwltZW1jcHkoJmloLT5rZXksIGtleSwgc2l6
ZW9mKHJlaXNlcjRfa2V5KSk7CisJaWg0MF9zZXRfb2Zmc2V0KGloLCBvZmZzZXQpOworCXNhdmVf
cGx1Z2luX2lkKGl0ZW1fcGx1Z2luX3RvX3BsdWdpbihkYXRhLT5pcGx1ZyksICZpaC0+cGx1Z2lu
X2lkKTsKKworCS8qIHVwZGF0ZSBub2RlIGhlYWRlciAqLworCW5oNDBfc2V0X2ZyZWVfc3BhY2Uo
bmgsCisJCQkgICAgbmg0MF9nZXRfZnJlZV9zcGFjZShuaCkgLSBkYXRhLT5sZW5ndGggLQorCQkJ
ICAgIHNpemVvZihpdGVtX2hlYWRlcjQwKSk7CisJbmg0MF9zZXRfZnJlZV9zcGFjZV9zdGFydChu
aCwKKwkJCQkgIG5oNDBfZ2V0X2ZyZWVfc3BhY2Vfc3RhcnQobmgpICsgZGF0YS0+bGVuZ3RoKTsK
Kwlub2RlNDBfc2V0X251bV9pdGVtcyh0YXJnZXQtPm5vZGUsIG5oLCBuaDQwX2dldF9udW1faXRl
bXMobmgpICsgMSk7CisKKwkvKiBGSVhNRTogY2hlY2sgaG93IGRvZXMgY3JlYXRlX2l0ZW0gd29y
ayB3aGVuIGJldHdlZW4gaXMgc2V0IHRvIEJFRk9SRV9VTklUICovCisJdGFyZ2V0LT51bml0X3Bv
cyA9IDA7CisJdGFyZ2V0LT5iZXR3ZWVuID0gQVRfVU5JVDsKKwljb29yZF9jbGVhcl9pcGx1Zyh0
YXJnZXQpOworCisJLyogaW5pdGlhbGl6ZSBpdGVtICovCisJaWYgKGRhdGEtPmlwbHVnLT5iLmlu
aXQgIT0gTlVMTCkgeworCQlkYXRhLT5pcGx1Zy0+Yi5pbml0KHRhcmdldCwgTlVMTCwgZGF0YSk7
CisJfQorCS8qIGNvcHkgaXRlbSBib2R5ICovCisJaWYgKGRhdGEtPmlwbHVnLT5iLnBhc3RlICE9
IE5VTEwpIHsKKwkJZGF0YS0+aXBsdWctPmIucGFzdGUodGFyZ2V0LCBkYXRhLCBpbmZvKTsKKwl9
IGVsc2UgaWYgKGRhdGEtPmRhdGEgIT0gTlVMTCkgeworCQlpZiAoZGF0YS0+dXNlcikgeworCQkJ
LyogQVVESVQ6IEFyZSB3ZSByZWFsbHkgc2hvdWxkIG5vdCBjaGVjayB0aGF0IHBvaW50ZXIKKwkJ
CSAgIGZyb20gdXNlcnNwYWNlIHdhcyB2YWxpZCBhbmQgZGF0YSBieXRlcyB3ZXJlCisJCQkgICBh
dmFpbGFibGU/IEhvdyB3aWxsIHdlIHJldHVybiAtRUZBVUxUIG9mIHNvbWUga2luZAorCQkJICAg
d2l0aG91dCB0aGlzIGNoZWNrPyAqLworCQkJYXNzZXJ0KCJuaWtpdGEtMzAzOCIsIHJlaXNlcjRf
c2NoZWR1bGFibGUoKSk7CisJCQkvKiBjb3B5IGRhdGEgZnJvbSB1c2VyIHNwYWNlICovCisJCQlp
ZiAoX19jb3B5X2Zyb21fdXNlcih6ZGF0YSh0YXJnZXQtPm5vZGUpICsgb2Zmc2V0LAorCQkJCQkg
ICAgIChjb25zdCBjaGFyIF9fdXNlciAqKWRhdGEtPmRhdGEsCisJCQkJCSAgICAgKHVuc2lnbmVk
KWRhdGEtPmxlbmd0aCkpCisJCQkJcmV0dXJuIFJFVEVSUigtRUZBVUxUKTsKKwkJfSBlbHNlCisJ
CQkvKiBjb3B5IGZyb20ga2VybmVsIHNwYWNlICovCisJCQltZW1jcHkoemRhdGEodGFyZ2V0LT5u
b2RlKSArIG9mZnNldCwgZGF0YS0+ZGF0YSwKKwkJCSAgICAgICAodW5zaWduZWQpZGF0YS0+bGVu
Z3RoKTsKKwl9CisKKwlpZiAodGFyZ2V0LT5pdGVtX3BvcyA9PSAwKSB7CisJCS8qIGxlZnQgZGVs
aW1pdGluZyBrZXkgaGFzIHRvIGJlIHVwZGF0ZWQgKi8KKwkJcHJlcGFyZV9mb3JfdXBkYXRlKE5V
TEwsIHRhcmdldC0+bm9kZSwgaW5mbyk7CisJfQorCisJaWYgKGl0ZW1fcGx1Z2luX2J5X2Nvb3Jk
KHRhcmdldCktPmIuY3JlYXRlX2hvb2sgIT0gTlVMTCkgeworCQlpdGVtX3BsdWdpbl9ieV9jb29y
ZCh0YXJnZXQpLT5iLmNyZWF0ZV9ob29rKHRhcmdldCwgZGF0YS0+YXJnKTsKKwl9CisKKwlyZXR1
cm4gMDsKK30KKworLyogcGx1Z2luLT51Lm5vZGUudXBkYXRlX2l0ZW1fa2V5CisgICBsb29rIGZv
ciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmggKi8KK3Zv
aWQKK3VwZGF0ZV9pdGVtX2tleV9ub2RlNDAoY29vcmRfdCAqIHRhcmdldCwgY29uc3QgcmVpc2Vy
NF9rZXkgKiBrZXksCisJCSAgICAgICBjYXJyeV9wbHVnaW5faW5mbyAqIGluZm8pCit7CisJaXRl
bV9oZWFkZXI0MCAqaWg7CisKKwlpaCA9IG5vZGU0MF9paF9hdF9jb29yZCh0YXJnZXQpOworCW1l
bWNweSgmaWgtPmtleSwga2V5LCBzaXplb2YocmVpc2VyNF9rZXkpKTsKKworCWlmICh0YXJnZXQt
Pml0ZW1fcG9zID09IDApIHsKKwkJcHJlcGFyZV9mb3JfdXBkYXRlKE5VTEwsIHRhcmdldC0+bm9k
ZSwgaW5mbyk7CisJfQorfQorCisvKiB0aGlzIGJpdHMgZW5jb2RlIGN1dCBtb2RlICovCisjZGVm
aW5lIENNT0RFX1RBSUwgMQorI2RlZmluZSBDTU9ERV9XSE9MRSAyCisjZGVmaW5lIENNT0RFX0hF
QUQgNAorCitzdHJ1Y3QgY3V0NDBfaW5mbyB7CisJaW50IG1vZGU7CisJcG9zX2luX25vZGVfdCB0
YWlsX3JlbW92ZWQ7CS8qIHBvc2l0aW9uIG9mIGl0ZW0gd2hpY2ggZ2V0cyB0YWlsIHJlbW92ZWQg
Ki8KKwlwb3NfaW5fbm9kZV90IGZpcnN0X3JlbW92ZWQ7CS8qIHBvc2l0aW9uIG9mIGZpcnN0IHRo
ZSBsZWZ0bW9zdCBpdGVtIGFtb25nIGl0ZW1zIHJlbW92ZWQgY29tcGxldGVseSAqLworCXBvc19p
bl9ub2RlX3QgcmVtb3ZlZF9jb3VudDsJLyogbnVtYmVyIG9mIGl0ZW1zIHJlbW92ZWQgY29tcGxl
dGVseSAqLworCXBvc19pbl9ub2RlX3QgaGVhZF9yZW1vdmVkOwkvKiBwb3NpdGlvbiBvZiBpdGVt
IHdoaWNoIGdldHMgaGVhZCByZW1vdmVkICovCisKKwlwb3NfaW5fbm9kZV90IGZyZWVkX3NwYWNl
X3N0YXJ0OworCXBvc19pbl9ub2RlX3QgZnJlZWRfc3BhY2VfZW5kOworCXBvc19pbl9ub2RlX3Qg
Zmlyc3RfbW92ZWQ7CisJcG9zX2luX25vZGVfdCBoZWFkX3JlbW92ZWRfbG9jYXRpb247Cit9Owor
CitzdGF0aWMgdm9pZCBpbml0X2NpbmZvKHN0cnVjdCBjdXQ0MF9pbmZvICpjaW5mbykKK3sKKwlj
aW5mby0+bW9kZSA9IDA7CisJY2luZm8tPnRhaWxfcmVtb3ZlZCA9IE1BWF9QT1NfSU5fTk9ERTsK
KwljaW5mby0+Zmlyc3RfcmVtb3ZlZCA9IE1BWF9QT1NfSU5fTk9ERTsKKwljaW5mby0+cmVtb3Zl
ZF9jb3VudCA9IE1BWF9QT1NfSU5fTk9ERTsKKwljaW5mby0+aGVhZF9yZW1vdmVkID0gTUFYX1BP
U19JTl9OT0RFOworCWNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCA9IE1BWF9QT1NfSU5fTk9ERTsK
KwljaW5mby0+ZnJlZWRfc3BhY2VfZW5kID0gTUFYX1BPU19JTl9OT0RFOworCWNpbmZvLT5maXJz
dF9tb3ZlZCA9IE1BWF9QT1NfSU5fTk9ERTsKKwljaW5mby0+aGVhZF9yZW1vdmVkX2xvY2F0aW9u
ID0gTUFYX1BPU19JTl9OT0RFOworfQorCisvKiBjb21wbGV0ZSBjdXRfbm9kZTQwL2tpbGxfbm9k
ZTQwIGNvbnRlbnQgYnkgcmVtb3ZpbmcgdGhlIGdhcCBjcmVhdGVkIGJ5ICovCitzdGF0aWMgdm9p
ZCBjb21wYWN0KHpub2RlICogbm9kZSwgc3RydWN0IGN1dDQwX2luZm8gKmNpbmZvKQoreworCW5v
ZGU0MF9oZWFkZXIgKm5oOworCWl0ZW1faGVhZGVyNDAgKmloOworCXBvc19pbl9ub2RlX3QgZnJl
ZWQ7CisJcG9zX2luX25vZGVfdCBwb3MsIG5yX2l0ZW1zOworCisJYXNzZXJ0KCJ2cy0xNTI2Iiwg
KGNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCAhPSBNQVhfUE9TX0lOX05PREUgJiYKKwkJCSAgIGNp
bmZvLT5mcmVlZF9zcGFjZV9lbmQgIT0gTUFYX1BPU19JTl9OT0RFICYmCisJCQkgICBjaW5mby0+
Zmlyc3RfbW92ZWQgIT0gTUFYX1BPU19JTl9OT0RFKSk7CisJYXNzZXJ0KCJ2cy0xNTIzIiwgY2lu
Zm8tPmZyZWVkX3NwYWNlX2VuZCA+PSBjaW5mby0+ZnJlZWRfc3BhY2Vfc3RhcnQpOworCisJbmgg
PSBub2RlNDBfbm9kZV9oZWFkZXIobm9kZSk7CisJbnJfaXRlbXMgPSBuaDQwX2dldF9udW1faXRl
bXMobmgpOworCisJLyogcmVtb3ZlIGdhcCBtYWRlIHVwIGJ5IHJlbW92YWwgKi8KKwltZW1tb3Zl
KHpkYXRhKG5vZGUpICsgY2luZm8tPmZyZWVkX3NwYWNlX3N0YXJ0LAorCQl6ZGF0YShub2RlKSAr
IGNpbmZvLT5mcmVlZF9zcGFjZV9lbmQsCisJCW5oNDBfZ2V0X2ZyZWVfc3BhY2Vfc3RhcnQobmgp
IC0gY2luZm8tPmZyZWVkX3NwYWNlX2VuZCk7CisKKwkvKiB1cGRhdGUgaXRlbSBoZWFkZXJzIG9m
IG1vdmVkIGl0ZW1zIC0gY2hhbmdlIHRoZWlyIGxvY2F0aW9ucyAqLworCXBvcyA9IGNpbmZvLT5m
aXJzdF9tb3ZlZDsKKwlpaCA9IG5vZGU0MF9paF9hdChub2RlLCBwb3MpOworCWlmIChjaW5mby0+
aGVhZF9yZW1vdmVkX2xvY2F0aW9uICE9IE1BWF9QT1NfSU5fTk9ERSkgeworCQlhc3NlcnQoInZz
LTE1ODAiLCBwb3MgPT0gY2luZm8tPmhlYWRfcmVtb3ZlZCk7CisJCWloNDBfc2V0X29mZnNldChp
aCwgY2luZm8tPmhlYWRfcmVtb3ZlZF9sb2NhdGlvbik7CisJCXBvcysrOworCQlpaC0tOworCX0K
KworCWZyZWVkID0gY2luZm8tPmZyZWVkX3NwYWNlX2VuZCAtIGNpbmZvLT5mcmVlZF9zcGFjZV9z
dGFydDsKKwlmb3IgKDsgcG9zIDwgbnJfaXRlbXM7IHBvcysrLCBpaC0tKSB7CisJCWFzc2VydCgi
dnMtMTU4MSIsIGloID09IG5vZGU0MF9paF9hdChub2RlLCBwb3MpKTsKKwkJaWg0MF9zZXRfb2Zm
c2V0KGloLCBpaDQwX2dldF9vZmZzZXQoaWgpIC0gZnJlZWQpOworCX0KKworCS8qIGZyZWUgc3Bh
Y2Ugc3RhcnQgbW92ZWQgdG8gcmlnaHQgKi8KKwluaDQwX3NldF9mcmVlX3NwYWNlX3N0YXJ0KG5o
LCBuaDQwX2dldF9mcmVlX3NwYWNlX3N0YXJ0KG5oKSAtIGZyZWVkKTsKKworCWlmIChjaW5mby0+
cmVtb3ZlZF9jb3VudCAhPSBNQVhfUE9TX0lOX05PREUpIHsKKwkJLyogbnVtYmVyIG9mIGl0ZW1z
IGNoYW5nZWQuIFJlbW92ZSBpdGVtIGhlYWRlcnMgb2YgdGhvc2UgaXRlbXMgKi8KKwkJaWggPSBu
b2RlNDBfaWhfYXQobm9kZSwgbnJfaXRlbXMgLSAxKTsKKwkJbWVtbW92ZShpaCArIGNpbmZvLT5y
ZW1vdmVkX2NvdW50LCBpaCwKKwkJCXNpemVvZihpdGVtX2hlYWRlcjQwKSAqIChucl9pdGVtcyAt
CisJCQkJCQkgY2luZm8tPnJlbW92ZWRfY291bnQgLQorCQkJCQkJIGNpbmZvLT5maXJzdF9yZW1v
dmVkKSk7CisJCWZyZWVkICs9IHNpemVvZihpdGVtX2hlYWRlcjQwKSAqIGNpbmZvLT5yZW1vdmVk
X2NvdW50OworCQlub2RlNDBfc2V0X251bV9pdGVtcyhub2RlLCBuaCwgbnJfaXRlbXMgLSBjaW5m
by0+cmVtb3ZlZF9jb3VudCk7CisJfQorCisJLyogdG90YWwgYW1vdW50IG9mIGZyZWUgc3BhY2Ug
aW5jcmVhc2VkICovCisJbmg0MF9zZXRfZnJlZV9zcGFjZShuaCwgbmg0MF9nZXRfZnJlZV9zcGFj
ZShuaCkgKyBmcmVlZCk7Cit9CisKK2ludCBzaHJpbmtfaXRlbV9ub2RlNDAoY29vcmRfdCAqIGNv
b3JkLCBpbnQgZGVsdGEpCit7CisJbm9kZTQwX2hlYWRlciAqbmg7CisJaXRlbV9oZWFkZXI0MCAq
aWg7CisJcG9zX2luX25vZGVfdCBwb3M7CisJcG9zX2luX25vZGVfdCBucl9pdGVtczsKKwljaGFy
ICplbmQ7CisJem5vZGUgKm5vZGU7CisJaW50IG9mZjsKKworCWFzc2VydCgibmlraXRhLTM0ODci
LCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNDg4IiwgZGVsdGEgPj0gMCk7CisK
Kwlub2RlID0gY29vcmQtPm5vZGU7CisJbmggPSBub2RlNDBfbm9kZV9oZWFkZXIobm9kZSk7CisJ
bnJfaXRlbXMgPSBuaDQwX2dldF9udW1faXRlbXMobmgpOworCisJaWggPSBub2RlNDBfaWhfYXRf
Y29vcmQoY29vcmQpOworCWFzc2VydCgibmlraXRhLTM0ODkiLCBkZWx0YSA8PSBsZW5ndGhfYnlf
Y29vcmRfbm9kZTQwKGNvb3JkKSk7CisJb2ZmID0gaWg0MF9nZXRfb2Zmc2V0KGloKSArIGxlbmd0
aF9ieV9jb29yZF9ub2RlNDAoY29vcmQpOworCWVuZCA9IHpkYXRhKG5vZGUpICsgb2ZmOworCisJ
LyogcmVtb3ZlIGdhcCBtYWRlIHVwIGJ5IHJlbW92YWwgKi8KKwltZW1tb3ZlKGVuZCAtIGRlbHRh
LCBlbmQsIG5oNDBfZ2V0X2ZyZWVfc3BhY2Vfc3RhcnQobmgpIC0gb2ZmKTsKKworCS8qIHVwZGF0
ZSBpdGVtIGhlYWRlcnMgb2YgbW92ZWQgaXRlbXMgLSBjaGFuZ2UgdGhlaXIgbG9jYXRpb25zICov
CisJcG9zID0gY29vcmQtPml0ZW1fcG9zICsgMTsKKwlpaCA9IG5vZGU0MF9paF9hdChub2RlLCBw
b3MpOworCWZvciAoOyBwb3MgPCBucl9pdGVtczsgcG9zKyssIGloLS0pIHsKKwkJYXNzZXJ0KCJu
aWtpdGEtMzQ5MCIsIGloID09IG5vZGU0MF9paF9hdChub2RlLCBwb3MpKTsKKwkJaWg0MF9zZXRf
b2Zmc2V0KGloLCBpaDQwX2dldF9vZmZzZXQoaWgpIC0gZGVsdGEpOworCX0KKworCS8qIGZyZWUg
c3BhY2Ugc3RhcnQgbW92ZWQgdG8gbGVmdCAqLworCW5oNDBfc2V0X2ZyZWVfc3BhY2Vfc3RhcnQo
bmgsIG5oNDBfZ2V0X2ZyZWVfc3BhY2Vfc3RhcnQobmgpIC0gZGVsdGEpOworCS8qIHRvdGFsIGFt
b3VudCBvZiBmcmVlIHNwYWNlIGluY3JlYXNlZCAqLworCW5oNDBfc2V0X2ZyZWVfc3BhY2Uobmgs
IG5oNDBfZ2V0X2ZyZWVfc3BhY2UobmgpICsgZGVsdGEpOworCS8qCisJICogVGhpcyBtZXRob2Qg
ZG9lcyBfbm90XyBjaGFuZ2VzIG51bWJlciBvZiBpdGVtcy4gSGVuY2UsIGl0IGNhbm5vdAorCSAq
IG1ha2Ugbm9kZSBlbXB0eS4gQWxzbyBpdCBkb2Vzbid0IHJlbW92ZSBpdGVtcyBhdCBhbGwsIHdo
aWNoIG1lYW5zCisJICogdGhhdCBubyBrZXlzIGhhdmUgdG8gYmUgdXBkYXRlZCBlaXRoZXIuCisJ
ICovCisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiBFdmFsdWF0ZSBjdXQgbW9kZSwgaWYga2V5IHJh
bmdlIGhhcyBiZWVuIHNwZWNpZmllZC4KKyAqCisgKiBUaGlzIGlzIGZvciB0aGUgY2FzZSB3aGVu
IHVuaXRzIGFyZSBub3QgbWluaW1hbCBvYmplY3RzCisgKiBhZGRyZXNzZWQgYnkga2V5cy4KKyAq
CisgKiBUaGlzIGRvZXNuJ3Qgd29yayB3aGVuIHJhbmdlIGNvbnRhaW5zIG9iamVjdHMgd2l0aAor
ICogbm9uLXVuaXF1ZSBrZXlzIChlLmcuIGRpcmVjdG9yeSBpdGVtcykuCisgKi8KK3N0YXRpYyBp
bnQgcGFyc2VfY3V0X2J5X2tleV9yYW5nZShzdHJ1Y3QgY3V0NDBfaW5mbyAqY2luZm8sCisJCQkJ
ICBjb25zdCBzdHJ1Y3QgY3V0X2tpbGxfcGFyYW1zICpwYXJhbXMpCit7CisJcmVpc2VyNF9rZXkg
bWluX2Zyb21fa2V5LCBtYXhfdG9fa2V5OworCWNvbnN0IHJlaXNlcjRfa2V5ICpmcm9tX2tleSA9
IHBhcmFtcy0+ZnJvbV9rZXk7CisJY29uc3QgcmVpc2VyNF9rZXkgKnRvX2tleSA9IHBhcmFtcy0+
dG9fa2V5OworCS8qCisJICogY2FsY3VsYXRlIG1pbmltYWwga2V5IHN0b3JlZCBpbiBmaXJzdCBp
dGVtCisJICogb2YgaXRlbXMgdG8gYmUgY3V0IChwYXJhbXMtPmZyb20pCisJICovCisJaXRlbV9r
ZXlfYnlfY29vcmQocGFyYW1zLT5mcm9tLCAmbWluX2Zyb21fa2V5KTsKKwkvKgorCSAqIGNhbGN1
bGF0ZSBtYXhpbWFsIGtleSBzdG9yZWQgaW4gbGFzdCBpdGVtCisJICogb2YgaXRlbXMgdG8gYmUg
Y3V0IChwYXJhbXMtPnRvKQorCSAqLworCW1heF9pdGVtX2tleV9ieV9jb29yZChwYXJhbXMtPnRv
LCAmbWF4X3RvX2tleSk7CisKKwlpZiAocGFyYW1zLT5mcm9tLT5pdGVtX3BvcyA9PSBwYXJhbXMt
PnRvLT5pdGVtX3BvcykgeworCQlpZiAoa2V5bHQoJm1pbl9mcm9tX2tleSwgZnJvbV9rZXkpCisJ
CSAgICAmJiBrZXlsdCh0b19rZXksICZtYXhfdG9fa2V5KSkKKwkJCXJldHVybiAxOworCisJCWlm
IChrZXlndChmcm9tX2tleSwgJm1pbl9mcm9tX2tleSkpIHsKKwkJCS8qIHRhaWwgb2YgaXRlbSBp
cyB0byBiZSBjdXQgY3V0ICovCisJCQljaW5mby0+dGFpbF9yZW1vdmVkID0gcGFyYW1zLT5mcm9t
LT5pdGVtX3BvczsKKwkJCWNpbmZvLT5tb2RlIHw9IENNT0RFX1RBSUw7CisJCX0gZWxzZSBpZiAo
a2V5bHQodG9fa2V5LCAmbWF4X3RvX2tleSkpIHsKKwkJCS8qIGhlYWQgb2YgaXRlbSBpcyB0byBi
ZSBjdXQgKi8KKwkJCWNpbmZvLT5oZWFkX3JlbW92ZWQgPSBwYXJhbXMtPmZyb20tPml0ZW1fcG9z
OworCQkJY2luZm8tPm1vZGUgfD0gQ01PREVfSEVBRDsKKwkJfSBlbHNlIHsKKwkJCS8qIGl0ZW0g
aXMgcmVtb3ZlZCBjb21wbGV0ZWx5ICovCisJCQljaW5mby0+Zmlyc3RfcmVtb3ZlZCA9IHBhcmFt
cy0+ZnJvbS0+aXRlbV9wb3M7CisJCQljaW5mby0+cmVtb3ZlZF9jb3VudCA9IDE7CisJCQljaW5m
by0+bW9kZSB8PSBDTU9ERV9XSE9MRTsKKwkJfQorCX0gZWxzZSB7CisJCWNpbmZvLT5maXJzdF9y
ZW1vdmVkID0gcGFyYW1zLT5mcm9tLT5pdGVtX3BvcyArIDE7CisJCWNpbmZvLT5yZW1vdmVkX2Nv
dW50ID0KKwkJCXBhcmFtcy0+dG8tPml0ZW1fcG9zIC0gcGFyYW1zLT5mcm9tLT5pdGVtX3BvcyAt
IDE7CisKKwkJaWYgKGtleWd0KGZyb21fa2V5LCAmbWluX2Zyb21fa2V5KSkgeworCQkJLyogZmly
c3QgaXRlbSBpcyBub3QgY3V0IGNvbXBsZXRlbHkgKi8KKwkJCWNpbmZvLT50YWlsX3JlbW92ZWQg
PSBwYXJhbXMtPmZyb20tPml0ZW1fcG9zOworCQkJY2luZm8tPm1vZGUgfD0gQ01PREVfVEFJTDsK
KwkJfSBlbHNlIHsKKwkJCWNpbmZvLT5maXJzdF9yZW1vdmVkLS07CisJCQljaW5mby0+cmVtb3Zl
ZF9jb3VudCsrOworCQl9CisJCWlmIChrZXlsdCh0b19rZXksICZtYXhfdG9fa2V5KSkgeworCQkJ
LyogbGFzdCBpdGVtIGlzIG5vdCBjdXQgY29tcGxldGVseSAqLworCQkJY2luZm8tPmhlYWRfcmVt
b3ZlZCA9IHBhcmFtcy0+dG8tPml0ZW1fcG9zOworCQkJY2luZm8tPm1vZGUgfD0gQ01PREVfSEVB
RDsKKwkJfSBlbHNlIHsKKwkJCWNpbmZvLT5yZW1vdmVkX2NvdW50Kys7CisJCX0KKwkJaWYgKGNp
bmZvLT5yZW1vdmVkX2NvdW50KQorCQkJY2luZm8tPm1vZGUgfD0gQ01PREVfV0hPTEU7CisJfQor
CXJldHVybiAwOworfQorCisvKgorICogRXZhbHVhdGUgY3V0IG1vZGUsIGlmIHRoZSBrZXkgcmFu
Z2UgaGFzbid0IGJlZW4gc3BlY2lmaWVkLgorICogSW4gdGhpcyBjYXNlIHRoZSByYW5nZSBjYW4g
aW5jbHVkZSBvYmplY3RzIHdpdGggbm9uLXVuaXF1ZQorICoga2V5cyAoZS5nLiBkaXJlY3Rvcnkg
ZW50cmllcykuCisgKgorICogVGhpcyBkb2Vzbid0IHdvcmsgd2hlbiB1bml0cyBhcmUgbm90IHRo
ZSBtaW5pbWFsIG9iamVjdHMKKyAqIGFkZHJlc3NlZCBieSBrZXlzIChlLmcuIGJ5dGVzIGluIGZp
bGUncyBib2R5IHN0b3JlZCBpbgorICogdW5mb3JtYXR0ZWQgbm9kZXMpLgorICovCitzdGF0aWMg
aW50IHBhcnNlX2N1dF9ieV9jb29yZF9yYW5nZShzdHJ1Y3QgY3V0NDBfaW5mbyAqY2luZm8sCisJ
CQkJICAgIGNvbnN0IHN0cnVjdCBjdXRfa2lsbF9wYXJhbXMgKnBhcmFtcykKK3sKKwljb29yZF90
ICpmcm9tID0gcGFyYW1zLT5mcm9tOworCWNvb3JkX3QgKnRvID0gcGFyYW1zLT50bzsKKworCWlm
IChmcm9tLT5pdGVtX3BvcyA9PSB0by0+aXRlbV9wb3MpIHsKKwkJLyoKKwkJICogY3V0IGlzIHBl
cmZvcm1lZCBvbiBvbmx5IG9uZSBpdGVtCisJCSAqLworCQlpZiAoZnJvbS0+dW5pdF9wb3MgPiAw
ICYmCisJCSAgICB0by0+dW5pdF9wb3MgPCBjb29yZF9sYXN0X3VuaXRfcG9zKHRvKSkKKwkJCS8q
CisJCQkgKiBjdXQgZnJvbSB0aGUgbWlkZGxlIG9mIGl0ZW0KKwkJCSAqLworCQkJcmV0dXJuIDE7
CisJCWlmIChmcm9tLT51bml0X3BvcyA+IDApIHsKKwkJCS8qCisJCQkgKiB0YWlsIG9mIGl0ZW0g
aXMgdG8gYmUgY3V0CisJCQkgKi8KKwkJCWNpbmZvLT50YWlsX3JlbW92ZWQgPSBwYXJhbXMtPmZy
b20tPml0ZW1fcG9zOworCQkJY2luZm8tPm1vZGUgfD0gQ01PREVfVEFJTDsKKwkJfSBlbHNlIGlm
ICh0by0+dW5pdF9wb3MgPCBjb29yZF9sYXN0X3VuaXRfcG9zKHRvKSkgeworCQkJLyoKKwkJCSAq
IGhlYWQgb2YgaXRlbSBpcyB0byBiZSBjdXQKKwkJCSAqLworCQkJY2luZm8tPmhlYWRfcmVtb3Zl
ZCA9IHBhcmFtcy0+ZnJvbS0+aXRlbV9wb3M7CisJCQljaW5mby0+bW9kZSB8PSBDTU9ERV9IRUFE
OworCQl9IGVsc2UgeworCQkJLyoKKwkJCSAqIGl0ZW0gaXMgcmVtb3ZlZCBjb21wbGV0ZWx5CisJ
CQkgKi8KKwkJCWFzc2VydCgiZWR3YXJkLTE2MzEiLAorCQkJICAgICAgIGZyb20tPnVuaXRfcG9z
ID09IDAgJiYKKwkJCSAgICAgICB0by0+dW5pdF9wb3MgPT0gY29vcmRfbGFzdF91bml0X3Bvcyh0
bykpOworCisJCQljaW5mby0+Zmlyc3RfcmVtb3ZlZCA9IHBhcmFtcy0+ZnJvbS0+aXRlbV9wb3M7
CisJCQljaW5mby0+cmVtb3ZlZF9jb3VudCA9IDE7CisJCQljaW5mby0+bW9kZSB8PSBDTU9ERV9X
SE9MRTsKKwkJfQorCX0gZWxzZSB7CisJCWNpbmZvLT5maXJzdF9yZW1vdmVkID0gZnJvbS0+aXRl
bV9wb3MgKyAxOworCQljaW5mby0+cmVtb3ZlZF9jb3VudCA9CisJCQl0by0+aXRlbV9wb3MgLSBm
cm9tLT5pdGVtX3BvcyAtIDE7CisKKwkJaWYgKGZyb20tPnVuaXRfcG9zID4gMCkgeworCQkJLyoK
KwkJCSAqIGZpcnN0IGl0ZW0gaXMgbm90IGN1dCBjb21wbGV0ZWx5CisJCQkgKi8KKwkJCWNpbmZv
LT50YWlsX3JlbW92ZWQgPSBmcm9tLT5pdGVtX3BvczsKKwkJCWNpbmZvLT5tb2RlIHw9IENNT0RF
X1RBSUw7CisJCX0gZWxzZSB7CisJCQljaW5mby0+Zmlyc3RfcmVtb3ZlZC0tOworCQkJY2luZm8t
PnJlbW92ZWRfY291bnQrKzsKKwkJfQorCQlpZiAodG8tPnVuaXRfcG9zIDwgY29vcmRfbGFzdF91
bml0X3Bvcyh0bykpIHsKKwkJCS8qCisJCQkgKiBsYXN0IGl0ZW0gaXMgbm90IGN1dCBjb21wbGV0
ZWx5CisJCQkgKi8KKwkJCWNpbmZvLT5oZWFkX3JlbW92ZWQgPSB0by0+aXRlbV9wb3M7CisJCQlj
aW5mby0+bW9kZSB8PSBDTU9ERV9IRUFEOworCQl9IGVsc2UgeworCQkJY2luZm8tPnJlbW92ZWRf
Y291bnQrKzsKKwkJfQorCQlpZiAoY2luZm8tPnJlbW92ZWRfY291bnQpCisJCQljaW5mby0+bW9k
ZSB8PSBDTU9ERV9XSE9MRTsKKwl9CisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiB0aGlzIGlzIHVz
ZWQgYnkgY3V0X25vZGU0MCBhbmQga2lsbF9ub2RlNDAuIEl0IGFuYWx5c2VzIGlucHV0IHBhcmFt
ZXRlcnMKKyAqIGFuZCBjYWxjdWxhdGVzIGN1dCBtb2RlLiBUaGVyZSBhcmUgMiB0eXBlcyBvZiBj
dXQuIEZpcnN0IGlzIHdoZW4gYSB1bml0IGlzCisgKiByZW1vdmVkIGZyb20gdGhlIG1pZGRsZSBv
ZiBhbiBpdGVtLiAgSW4gdGhpcyBjYXNlIHRoaXMgZnVuY3Rpb24gcmV0dXJucyAxLgorICogQWxs
IHRoZSByZXN0IGZpdHMgaW50byBzZWNvbmQgY2FzZTogMCBvciAxIG9mIGl0ZW1zIGdldHRpbmcg
dGFpbCBjdXQsIDAgb3IKKyAqIG1vcmUgaXRlbXMgcmVtb3ZlZCBjb21wbGV0ZWx5IGFuZCAwIG9y
IDEgaXRlbSBnZXR0aW5nIGhlYWQgY3V0LiBGdW5jdGlvbgorICogcmV0dXJucyAwIGluIHRoaXMg
Y2FzZQorICovCitzdGF0aWMgaW50IHBhcnNlX2N1dChzdHJ1Y3QgY3V0NDBfaW5mbyAqY2luZm8s
CisJCSAgICAgY29uc3Qgc3RydWN0IGN1dF9raWxsX3BhcmFtcyAqcGFyYW1zKQoreworCWluaXRf
Y2luZm8oY2luZm8pOworCWlmIChwYXJhbXMtPmZyb21fa2V5ID09IE5VTEwpIHsKKwkJLyoKKwkJ
ICogY3V0IGtleSByYW5nZSBpcyBub3QgZGVmaW5lZCBpbiBpbnB1dCBwYXJhbWV0ZXJzCisJCSAq
LworCQlhc3NlcnQoInZzLTE1MTMiLCBwYXJhbXMtPnRvX2tleSA9PSBOVUxMKTsKKwkJcmV0dXJu
IHBhcnNlX2N1dF9ieV9jb29yZF9yYW5nZShjaW5mbywgcGFyYW1zKTsKKwl9IGVsc2UKKwkJcmV0
dXJuIHBhcnNlX2N1dF9ieV9rZXlfcmFuZ2UoY2luZm8sIHBhcmFtcyk7Cit9CisKK3N0YXRpYyB2
b2lkCitjYWxsX2tpbGxfaG9va3Moem5vZGUgKiBub2RlLCBwb3NfaW5fbm9kZV90IGZyb20sIHBv
c19pbl9ub2RlX3QgY291bnQsCisJCWNhcnJ5X2tpbGxfZGF0YSAqIGtkYXRhKQoreworCWNvb3Jk
X3QgY29vcmQ7CisJaXRlbV9wbHVnaW4gKmlwbHVnOworCXBvc19pbl9ub2RlX3QgcG9zOworCisJ
Y29vcmQubm9kZSA9IG5vZGU7CisJY29vcmQudW5pdF9wb3MgPSAwOworCWNvb3JkLmJldHdlZW4g
PSBBVF9VTklUOworCWZvciAocG9zID0gMDsgcG9zIDwgY291bnQ7IHBvcysrKSB7CisJCWNvb3Jk
X3NldF9pdGVtX3BvcygmY29vcmQsIGZyb20gKyBwb3MpOworCQljb29yZC51bml0X3BvcyA9IDA7
CisJCWNvb3JkLmJldHdlZW4gPSBBVF9VTklUOworCQlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2Nv
b3JkKCZjb29yZCk7CisJCWlmIChpcGx1Zy0+Yi5raWxsX2hvb2spIHsKKwkJCWlwbHVnLT5iLmtp
bGxfaG9vaygmY29vcmQsIDAsIGNvb3JkX251bV91bml0cygmY29vcmQpLAorCQkJCQkgICBrZGF0
YSk7CisJCX0KKwl9Cit9CisKKy8qIHRoaXMgaXMgdXNlZCB0byBraWxsIGl0ZW0gcGFydGlhbGx5
ICovCitzdGF0aWMgcG9zX2luX25vZGVfdAora2lsbF91bml0cyhjb29yZF90ICogY29vcmQsIHBv
c19pbl9ub2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywgdm9pZCAqZGF0YSwKKwkgICByZWlz
ZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsIHJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0X2tleSkK
K3sKKwlzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICprZGF0YTsKKwlpdGVtX3BsdWdpbiAqaXBsdWc7
CisKKwlrZGF0YSA9IGRhdGE7CisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCk7
CisKKwlhc3NlcnQoInZzLTE1MjQiLCBpcGx1Zy0+Yi5raWxsX3VuaXRzKTsKKwlyZXR1cm4gaXBs
dWctPmIua2lsbF91bml0cyhjb29yZCwgZnJvbSwgdG8sIGtkYXRhLCBzbWFsbGVzdF9yZW1vdmVk
LAorCQkJCSAgIG5ld19maXJzdF9rZXkpOworfQorCisvKiBjYWxsIGl0ZW0gcGx1Z2luIHRvIGN1
dCB0YWlsIG9mIGZpbGUgKi8KK3N0YXRpYyBwb3NfaW5fbm9kZV90CitraWxsX3RhaWwoY29vcmRf
dCAqIGNvb3JkLCB2b2lkICpkYXRhLCByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQpCit7
CisJc3RydWN0IGNhcnJ5X2tpbGxfZGF0YSAqa2RhdGE7CisJcG9zX2luX25vZGVfdCB0bzsKKwor
CWtkYXRhID0gZGF0YTsKKwl0byA9IGNvb3JkX2xhc3RfdW5pdF9wb3MoY29vcmQpOworCXJldHVy
biBraWxsX3VuaXRzKGNvb3JkLCBjb29yZC0+dW5pdF9wb3MsIHRvLCBrZGF0YSwgc21hbGxlc3Rf
cmVtb3ZlZCwKKwkJCSAgTlVMTCk7Cit9CisKKy8qIGNhbGwgaXRlbSBwbHVnaW4gdG8gY3V0IGhl
YWQgb2YgaXRlbSAqLworc3RhdGljIHBvc19pbl9ub2RlX3QKK2tpbGxfaGVhZChjb29yZF90ICog
Y29vcmQsIHZvaWQgKmRhdGEsIHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwKKwkgIHJl
aXNlcjRfa2V5ICogbmV3X2ZpcnN0X2tleSkKK3sKKwlyZXR1cm4ga2lsbF91bml0cyhjb29yZCwg
MCwgY29vcmQtPnVuaXRfcG9zLCBkYXRhLCBzbWFsbGVzdF9yZW1vdmVkLAorCQkJICBuZXdfZmly
c3Rfa2V5KTsKK30KKworLyogdGhpcyBpcyB1c2VkIHRvIGN1dCBpdGVtIHBhcnRpYWxseSAqLwor
c3RhdGljIHBvc19pbl9ub2RlX3QKK2N1dF91bml0cyhjb29yZF90ICogY29vcmQsIHBvc19pbl9u
b2RlX3QgZnJvbSwgcG9zX2luX25vZGVfdCB0bywgdm9pZCAqZGF0YSwKKwkgIHJlaXNlcjRfa2V5
ICogc21hbGxlc3RfcmVtb3ZlZCwgcmVpc2VyNF9rZXkgKiBuZXdfZmlyc3Rfa2V5KQoreworCWNh
cnJ5X2N1dF9kYXRhICpjZGF0YTsKKwlpdGVtX3BsdWdpbiAqaXBsdWc7CisKKwljZGF0YSA9IGRh
dGE7CisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChjb29yZCk7CisJYXNzZXJ0KCJ2cy0z
MDIiLCBpcGx1Zy0+Yi5jdXRfdW5pdHMpOworCXJldHVybiBpcGx1Zy0+Yi5jdXRfdW5pdHMoY29v
cmQsIGZyb20sIHRvLCBjZGF0YSwgc21hbGxlc3RfcmVtb3ZlZCwKKwkJCQkgIG5ld19maXJzdF9r
ZXkpOworfQorCisvKiBjYWxsIGl0ZW0gcGx1Z2luIHRvIGN1dCB0YWlsIG9mIGZpbGUgKi8KK3N0
YXRpYyBwb3NfaW5fbm9kZV90CitjdXRfdGFpbChjb29yZF90ICogY29vcmQsIHZvaWQgKmRhdGEs
IHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCkKK3sKKwljYXJyeV9jdXRfZGF0YSAqY2Rh
dGE7CisJcG9zX2luX25vZGVfdCB0bzsKKworCWNkYXRhID0gZGF0YTsKKwl0byA9IGNvb3JkX2xh
c3RfdW5pdF9wb3MoY2RhdGEtPnBhcmFtcy5mcm9tKTsKKwlyZXR1cm4gY3V0X3VuaXRzKGNvb3Jk
LCBjb29yZC0+dW5pdF9wb3MsIHRvLCBkYXRhLCBzbWFsbGVzdF9yZW1vdmVkLCBOVUxMKTsKK30K
KworLyogY2FsbCBpdGVtIHBsdWdpbiB0byBjdXQgaGVhZCBvZiBpdGVtICovCitzdGF0aWMgcG9z
X2luX25vZGVfdAorY3V0X2hlYWQoY29vcmRfdCAqIGNvb3JkLCB2b2lkICpkYXRhLCByZWlzZXI0
X2tleSAqIHNtYWxsZXN0X3JlbW92ZWQsCisJIHJlaXNlcjRfa2V5ICogbmV3X2ZpcnN0X2tleSkK
K3sKKwlyZXR1cm4gY3V0X3VuaXRzKGNvb3JkLCAwLCBjb29yZC0+dW5pdF9wb3MsIGRhdGEsIHNt
YWxsZXN0X3JlbW92ZWQsCisJCQkgbmV3X2ZpcnN0X2tleSk7Cit9CisKKy8qIHRoaXMgcmV0dXJu
cyAxIG9mIGtleSBvZiBmaXJzdCBpdGVtIGNoYW5nZWQsIDAgLSBpZiBpdCBkaWQgbm90ICovCitz
dGF0aWMgaW50CitwcmVwYXJlX2Zvcl9jb21wYWN0KHN0cnVjdCBjdXQ0MF9pbmZvICpjaW5mbywK
KwkJICAgIGNvbnN0IHN0cnVjdCBjdXRfa2lsbF9wYXJhbXMgKnBhcmFtcywgaW50IGlzX2N1dCwK
KwkJICAgIHZvaWQgKmRhdGEsIGNhcnJ5X3BsdWdpbl9pbmZvICogaW5mbykKK3sKKwl6bm9kZSAq
bm9kZTsKKwlpdGVtX2hlYWRlcjQwICppaDsKKwlwb3NfaW5fbm9kZV90IGZyZWVkOworCXBvc19p
bl9ub2RlX3QgaXRlbV9wb3M7CisJY29vcmRfdCBjb29yZDsKKwlyZWlzZXI0X2tleSBuZXdfZmly
c3Rfa2V5OworCXBvc19pbl9ub2RlX3QoKmtpbGxfdW5pdHNfZikgKGNvb3JkX3QgKiwgcG9zX2lu
X25vZGVfdCwgcG9zX2luX25vZGVfdCwKKwkJCQkgICAgICB2b2lkICosIHJlaXNlcjRfa2V5ICos
IHJlaXNlcjRfa2V5ICopOworCXBvc19pbl9ub2RlX3QoKmtpbGxfdGFpbF9mKSAoY29vcmRfdCAq
LCB2b2lkICosIHJlaXNlcjRfa2V5ICopOworCXBvc19pbl9ub2RlX3QoKmtpbGxfaGVhZF9mKSAo
Y29vcmRfdCAqLCB2b2lkICosIHJlaXNlcjRfa2V5ICosCisJCQkJICAgICByZWlzZXI0X2tleSAq
KTsKKwlpbnQgcmV0dmFsOworCisJcmV0dmFsID0gMDsKKworCW5vZGUgPSBwYXJhbXMtPmZyb20t
Pm5vZGU7CisKKwlhc3NlcnQoInZzLTE4NCIsIG5vZGUgPT0gcGFyYW1zLT50by0+bm9kZSk7CisJ
YXNzZXJ0KCJ2cy0zMTIiLCAhbm9kZV9pc19lbXB0eShub2RlKSk7CisJYXNzZXJ0KCJ2cy0yOTci
LAorCSAgICAgICBjb29yZF9jb21wYXJlKHBhcmFtcy0+ZnJvbSwgcGFyYW1zLT50bykgIT0gQ09P
UkRfQ01QX09OX1JJR0hUKTsKKworCWlmIChpc19jdXQpIHsKKwkJa2lsbF91bml0c19mID0gY3V0
X3VuaXRzOworCQlraWxsX3RhaWxfZiA9IGN1dF90YWlsOworCQlraWxsX2hlYWRfZiA9IGN1dF9o
ZWFkOworCX0gZWxzZSB7CisJCWtpbGxfdW5pdHNfZiA9IGtpbGxfdW5pdHM7CisJCWtpbGxfdGFp
bF9mID0ga2lsbF90YWlsOworCQlraWxsX2hlYWRfZiA9IGtpbGxfaGVhZDsKKwl9CisKKwlpZiAo
cGFyc2VfY3V0KGNpbmZvLCBwYXJhbXMpID09IDEpIHsKKwkJLyogY3V0IGZyb20gdGhlIG1pZGRs
ZSBvZiBpdGVtICovCisJCWZyZWVkID0KKwkJICAgIGtpbGxfdW5pdHNfZihwYXJhbXMtPmZyb20s
IHBhcmFtcy0+ZnJvbS0+dW5pdF9wb3MsCisJCQkJIHBhcmFtcy0+dG8tPnVuaXRfcG9zLCBkYXRh
LAorCQkJCSBwYXJhbXMtPnNtYWxsZXN0X3JlbW92ZWQsIE5VTEwpOworCisJCWl0ZW1fcG9zID0g
cGFyYW1zLT5mcm9tLT5pdGVtX3BvczsKKwkJaWggPSBub2RlNDBfaWhfYXQobm9kZSwgaXRlbV9w
b3MpOworCQljaW5mby0+ZnJlZWRfc3BhY2Vfc3RhcnQgPQorCQkgICAgaWg0MF9nZXRfb2Zmc2V0
KGloKSArIG5vZGU0MF9pdGVtX2xlbmd0aChub2RlLAorCQkJCQkJCSAgICAgaXRlbV9wb3MpIC0g
ZnJlZWQ7CisJCWNpbmZvLT5mcmVlZF9zcGFjZV9lbmQgPSBjaW5mby0+ZnJlZWRfc3BhY2Vfc3Rh
cnQgKyBmcmVlZDsKKwkJY2luZm8tPmZpcnN0X21vdmVkID0gaXRlbV9wb3MgKyAxOworCX0gZWxz
ZSB7CisJCWFzc2VydCgidnMtMTUyMSIsIChjaW5mby0+dGFpbF9yZW1vdmVkICE9IE1BWF9QT1Nf
SU5fTk9ERSB8fAorCQkJCSAgIGNpbmZvLT5maXJzdF9yZW1vdmVkICE9IE1BWF9QT1NfSU5fTk9E
RSB8fAorCQkJCSAgIGNpbmZvLT5oZWFkX3JlbW92ZWQgIT0gTUFYX1BPU19JTl9OT0RFKSk7CisK
KwkJc3dpdGNoIChjaW5mby0+bW9kZSkgeworCQljYXNlIENNT0RFX1RBSUw6CisJCQkvKiBvbmUg
aXRlbSBnZXRzIGN1dCBwYXJ0aWFsbHkgZnJvbSBpdHMgZW5kICovCisJCQlhc3NlcnQoInZzLTE1
NjIiLAorCQkJICAgICAgIGNpbmZvLT50YWlsX3JlbW92ZWQgPT0gcGFyYW1zLT5mcm9tLT5pdGVt
X3Bvcyk7CisKKwkJCWZyZWVkID0KKwkJCSAgICBraWxsX3RhaWxfZihwYXJhbXMtPmZyb20sIGRh
dGEsCisJCQkJCXBhcmFtcy0+c21hbGxlc3RfcmVtb3ZlZCk7CisKKwkJCWl0ZW1fcG9zID0gY2lu
Zm8tPnRhaWxfcmVtb3ZlZDsKKwkJCWloID0gbm9kZTQwX2loX2F0KG5vZGUsIGl0ZW1fcG9zKTsK
KwkJCWNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCA9CisJCQkgICAgaWg0MF9nZXRfb2Zmc2V0KGlo
KSArIG5vZGU0MF9pdGVtX2xlbmd0aChub2RlLAorCQkJCQkJCQkgICAgIGl0ZW1fcG9zKSAtCisJ
CQkgICAgZnJlZWQ7CisJCQljaW5mby0+ZnJlZWRfc3BhY2VfZW5kID0KKwkJCSAgICBjaW5mby0+
ZnJlZWRfc3BhY2Vfc3RhcnQgKyBmcmVlZDsKKwkJCWNpbmZvLT5maXJzdF9tb3ZlZCA9IGNpbmZv
LT50YWlsX3JlbW92ZWQgKyAxOworCQkJYnJlYWs7CisKKwkJY2FzZSBDTU9ERV9XSE9MRToKKwkJ
CS8qIG9uZSBvciBtb3JlIGl0ZW1zIGdldCByZW1vdmVkIGNvbXBsZXRlbHkgKi8KKwkJCWFzc2Vy
dCgidnMtMTU2MyIsCisJCQkgICAgICAgY2luZm8tPmZpcnN0X3JlbW92ZWQgPT0gcGFyYW1zLT5m
cm9tLT5pdGVtX3Bvcyk7CisJCQlhc3NlcnQoInZzLTE1NjQiLCBjaW5mby0+cmVtb3ZlZF9jb3Vu
dCA+IDAKKwkJCSAgICAgICAmJiBjaW5mby0+cmVtb3ZlZF9jb3VudCAhPSBNQVhfUE9TX0lOX05P
REUpOworCisJCQkvKiBjYWxsIGtpbGwgaG9vayBmb3IgYWxsIGl0ZW1zIHJlbW92ZWQgY29tcGxl
dGVseSAqLworCQkJaWYgKGlzX2N1dCA9PSAwKQorCQkJCWNhbGxfa2lsbF9ob29rcyhub2RlLCBj
aW5mby0+Zmlyc3RfcmVtb3ZlZCwKKwkJCQkJCWNpbmZvLT5yZW1vdmVkX2NvdW50LCBkYXRhKTsK
KworCQkJaXRlbV9wb3MgPSBjaW5mby0+Zmlyc3RfcmVtb3ZlZDsKKwkJCWloID0gbm9kZTQwX2lo
X2F0KG5vZGUsIGl0ZW1fcG9zKTsKKworCQkJaWYgKHBhcmFtcy0+c21hbGxlc3RfcmVtb3ZlZCkK
KwkJCQltZW1jcHkocGFyYW1zLT5zbWFsbGVzdF9yZW1vdmVkLCAmaWgtPmtleSwKKwkJCQkgICAg
ICAgc2l6ZW9mKHJlaXNlcjRfa2V5KSk7CisKKwkJCWNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCA9
IGloNDBfZ2V0X29mZnNldChpaCk7CisKKwkJCWl0ZW1fcG9zICs9IChjaW5mby0+cmVtb3ZlZF9j
b3VudCAtIDEpOworCQkJaWggLT0gKGNpbmZvLT5yZW1vdmVkX2NvdW50IC0gMSk7CisJCQljaW5m
by0+ZnJlZWRfc3BhY2VfZW5kID0KKwkJCSAgICBpaDQwX2dldF9vZmZzZXQoaWgpICsgbm9kZTQw
X2l0ZW1fbGVuZ3RoKG5vZGUsCisJCQkJCQkJCSAgICAgaXRlbV9wb3MpOworCQkJY2luZm8tPmZp
cnN0X21vdmVkID0gaXRlbV9wb3MgKyAxOworCQkJaWYgKGNpbmZvLT5maXJzdF9yZW1vdmVkID09
IDApCisJCQkJLyoga2V5IG9mIGZpcnN0IGl0ZW0gb2YgdGhlIG5vZGUgY2hhbmdlcyAqLworCQkJ
CXJldHZhbCA9IDE7CisJCQlicmVhazsKKworCQljYXNlIENNT0RFX0hFQUQ6CisJCQkvKiBvbmUg
aXRlbSBnZXRzIGN1dCBwYXJ0aWFsbHkgZnJvbSBpdHMgaGVhZCAqLworCQkJYXNzZXJ0KCJ2cy0x
NTY1IiwKKwkJCSAgICAgICBjaW5mby0+aGVhZF9yZW1vdmVkID09IHBhcmFtcy0+ZnJvbS0+aXRl
bV9wb3MpOworCisJCQlmcmVlZCA9CisJCQkgICAga2lsbF9oZWFkX2YocGFyYW1zLT50bywgZGF0
YSwKKwkJCQkJcGFyYW1zLT5zbWFsbGVzdF9yZW1vdmVkLAorCQkJCQkmbmV3X2ZpcnN0X2tleSk7
CisKKwkJCWl0ZW1fcG9zID0gY2luZm8tPmhlYWRfcmVtb3ZlZDsKKwkJCWloID0gbm9kZTQwX2lo
X2F0KG5vZGUsIGl0ZW1fcG9zKTsKKwkJCWNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCA9IGloNDBf
Z2V0X29mZnNldChpaCk7CisJCQljaW5mby0+ZnJlZWRfc3BhY2VfZW5kID0gaWg0MF9nZXRfb2Zm
c2V0KGloKSArIGZyZWVkOworCQkJY2luZm8tPmZpcnN0X21vdmVkID0gY2luZm8tPmhlYWRfcmVt
b3ZlZCArIDE7CisKKwkJCS8qIGl0ZW0gaGVhZCBpcyByZW1vdmVkLCB0aGVyZWZvcmUsIGl0ZW0g
a2V5IGNoYW5nZWQgKi8KKwkJCWNvb3JkLm5vZGUgPSBub2RlOworCQkJY29vcmRfc2V0X2l0ZW1f
cG9zKCZjb29yZCwgaXRlbV9wb3MpOworCQkJY29vcmQudW5pdF9wb3MgPSAwOworCQkJY29vcmQu
YmV0d2VlbiA9IEFUX1VOSVQ7CisJCQl1cGRhdGVfaXRlbV9rZXlfbm9kZTQwKCZjb29yZCwgJm5l
d19maXJzdF9rZXksIE5VTEwpOworCQkJaWYgKGl0ZW1fcG9zID09IDApCisJCQkJLyoga2V5IG9m
IGZpcnN0IGl0ZW0gb2YgdGhlIG5vZGUgY2hhbmdlcyAqLworCQkJCXJldHZhbCA9IDE7CisJCQli
cmVhazsKKworCQljYXNlIENNT0RFX1RBSUwgfCBDTU9ERV9XSE9MRToKKwkJCS8qIG9uZSBpdGVt
IGdldHMgY3V0IGZyb20gaXRzIGVuZCBhbmQgb25lIG9yIG1vcmUgaXRlbXMgZ2V0IHJlbW92ZWQg
Y29tcGxldGVseSAqLworCQkJYXNzZXJ0KCJ2cy0xNTY2IiwKKwkJCSAgICAgICBjaW5mby0+dGFp
bF9yZW1vdmVkID09IHBhcmFtcy0+ZnJvbS0+aXRlbV9wb3MpOworCQkJYXNzZXJ0KCJ2cy0xNTY3
IiwKKwkJCSAgICAgICBjaW5mby0+Zmlyc3RfcmVtb3ZlZCA9PSBjaW5mby0+dGFpbF9yZW1vdmVk
ICsgMSk7CisJCQlhc3NlcnQoInZzLTE1NjQiLCBjaW5mby0+cmVtb3ZlZF9jb3VudCA+IDAKKwkJ
CSAgICAgICAmJiBjaW5mby0+cmVtb3ZlZF9jb3VudCAhPSBNQVhfUE9TX0lOX05PREUpOworCisJ
CQlmcmVlZCA9CisJCQkgICAga2lsbF90YWlsX2YocGFyYW1zLT5mcm9tLCBkYXRhLAorCQkJCQlw
YXJhbXMtPnNtYWxsZXN0X3JlbW92ZWQpOworCisJCQlpdGVtX3BvcyA9IGNpbmZvLT50YWlsX3Jl
bW92ZWQ7CisJCQlpaCA9IG5vZGU0MF9paF9hdChub2RlLCBpdGVtX3Bvcyk7CisJCQljaW5mby0+
ZnJlZWRfc3BhY2Vfc3RhcnQgPQorCQkJICAgIGloNDBfZ2V0X29mZnNldChpaCkgKyBub2RlNDBf
aXRlbV9sZW5ndGgobm9kZSwKKwkJCQkJCQkJICAgICBpdGVtX3BvcykgLQorCQkJICAgIGZyZWVk
OworCisJCQkvKiBjYWxsIGtpbGwgaG9vayBmb3IgYWxsIGl0ZW1zIHJlbW92ZWQgY29tcGxldGVs
eSAqLworCQkJaWYgKGlzX2N1dCA9PSAwKQorCQkJCWNhbGxfa2lsbF9ob29rcyhub2RlLCBjaW5m
by0+Zmlyc3RfcmVtb3ZlZCwKKwkJCQkJCWNpbmZvLT5yZW1vdmVkX2NvdW50LCBkYXRhKTsKKwor
CQkJaXRlbV9wb3MgKz0gY2luZm8tPnJlbW92ZWRfY291bnQ7CisJCQlpaCAtPSBjaW5mby0+cmVt
b3ZlZF9jb3VudDsKKwkJCWNpbmZvLT5mcmVlZF9zcGFjZV9lbmQgPQorCQkJICAgIGloNDBfZ2V0
X29mZnNldChpaCkgKyBub2RlNDBfaXRlbV9sZW5ndGgobm9kZSwKKwkJCQkJCQkJICAgICBpdGVt
X3Bvcyk7CisJCQljaW5mby0+Zmlyc3RfbW92ZWQgPSBpdGVtX3BvcyArIDE7CisJCQlicmVhazsK
KworCQljYXNlIENNT0RFX1dIT0xFIHwgQ01PREVfSEVBRDoKKwkJCS8qIG9uZSBvciBtb3JlIGl0
ZW1zIGdldCByZW1vdmVkIGNvbXBsZXRlbHkgYW5kIG9uZSBpdGVtIGdldHMgY3V0IHBhcnRpYWxs
eSBmcm9tIGl0cyBoZWFkICovCisJCQlhc3NlcnQoInZzLTE1NjgiLAorCQkJICAgICAgIGNpbmZv
LT5maXJzdF9yZW1vdmVkID09IHBhcmFtcy0+ZnJvbS0+aXRlbV9wb3MpOworCQkJYXNzZXJ0KCJ2
cy0xNTY0IiwgY2luZm8tPnJlbW92ZWRfY291bnQgPiAwCisJCQkgICAgICAgJiYgY2luZm8tPnJl
bW92ZWRfY291bnQgIT0gTUFYX1BPU19JTl9OT0RFKTsKKwkJCWFzc2VydCgidnMtMTU2OSIsCisJ
CQkgICAgICAgY2luZm8tPmhlYWRfcmVtb3ZlZCA9PQorCQkJICAgICAgIGNpbmZvLT5maXJzdF9y
ZW1vdmVkICsgY2luZm8tPnJlbW92ZWRfY291bnQpOworCisJCQkvKiBjYWxsIGtpbGwgaG9vayBm
b3IgYWxsIGl0ZW1zIHJlbW92ZWQgY29tcGxldGVseSAqLworCQkJaWYgKGlzX2N1dCA9PSAwKQor
CQkJCWNhbGxfa2lsbF9ob29rcyhub2RlLCBjaW5mby0+Zmlyc3RfcmVtb3ZlZCwKKwkJCQkJCWNp
bmZvLT5yZW1vdmVkX2NvdW50LCBkYXRhKTsKKworCQkJaXRlbV9wb3MgPSBjaW5mby0+Zmlyc3Rf
cmVtb3ZlZDsKKwkJCWloID0gbm9kZTQwX2loX2F0KG5vZGUsIGl0ZW1fcG9zKTsKKworCQkJaWYg
KHBhcmFtcy0+c21hbGxlc3RfcmVtb3ZlZCkKKwkJCQltZW1jcHkocGFyYW1zLT5zbWFsbGVzdF9y
ZW1vdmVkLCAmaWgtPmtleSwKKwkJCQkgICAgICAgc2l6ZW9mKHJlaXNlcjRfa2V5KSk7CisKKwkJ
CWZyZWVkID0KKwkJCSAgICBraWxsX2hlYWRfZihwYXJhbXMtPnRvLCBkYXRhLCBOVUxMLCAmbmV3
X2ZpcnN0X2tleSk7CisKKwkJCWNpbmZvLT5mcmVlZF9zcGFjZV9zdGFydCA9IGloNDBfZ2V0X29m
ZnNldChpaCk7CisKKwkJCWloID0gbm9kZTQwX2loX2F0KG5vZGUsIGNpbmZvLT5oZWFkX3JlbW92
ZWQpOworCQkJLyogdGhpcyBpcyB0aGUgbW9zdCBjb21wbGV4IGNhc2UuIEl0ZW0gd2hpY2ggZ290
IGhlYWQgcmVtb3ZlZCBhbmQgaXRlbXMgd2hpY2ggYXJlIHRvIGJlIG1vdmVkCisJCQkgICBpbnRh
Y3QgY2hhbmdlIHRoZWlyIGxvY2F0aW9uIGRpZmZlcmVudGx5LiAqLworCQkJY2luZm8tPmZyZWVk
X3NwYWNlX2VuZCA9IGloNDBfZ2V0X29mZnNldChpaCkgKyBmcmVlZDsKKwkJCWNpbmZvLT5maXJz
dF9tb3ZlZCA9IGNpbmZvLT5oZWFkX3JlbW92ZWQ7CisJCQljaW5mby0+aGVhZF9yZW1vdmVkX2xv
Y2F0aW9uID0gY2luZm8tPmZyZWVkX3NwYWNlX3N0YXJ0OworCisJCQkvKiBpdGVtIGhlYWQgaXMg
cmVtb3ZlZCwgdGhlcmVmb3JlLCBpdGVtIGtleSBjaGFuZ2VkICovCisJCQljb29yZC5ub2RlID0g
bm9kZTsKKwkJCWNvb3JkX3NldF9pdGVtX3BvcygmY29vcmQsIGNpbmZvLT5oZWFkX3JlbW92ZWQp
OworCQkJY29vcmQudW5pdF9wb3MgPSAwOworCQkJY29vcmQuYmV0d2VlbiA9IEFUX1VOSVQ7CisJ
CQl1cGRhdGVfaXRlbV9rZXlfbm9kZTQwKCZjb29yZCwgJm5ld19maXJzdF9rZXksIE5VTEwpOwor
CisJCQlhc3NlcnQoInZzLTE1NzkiLCBjaW5mby0+Zmlyc3RfcmVtb3ZlZCA9PSAwKTsKKwkJCS8q
IGtleSBvZiBmaXJzdCBpdGVtIG9mIHRoZSBub2RlIGNoYW5nZXMgKi8KKwkJCXJldHZhbCA9IDE7
CisJCQlicmVhazsKKworCQljYXNlIENNT0RFX1RBSUwgfCBDTU9ERV9IRUFEOgorCQkJLyogb25l
IGl0ZW0gZ2V0IGN1dCBmcm9tIGl0cyBlbmQgYW5kIGl0cyBuZWlnaGJvciBnZXRzIGN1dCBmcm9t
IGl0cyB0YWlsICovCisJCQlpbXBvc3NpYmxlKCJ2cy0xNTc2IiwgInRoaXMgY2FuIG5vdCBoYXBw
ZW4gY3VycmVudGx5Iik7CisJCQlicmVhazsKKworCQljYXNlIENNT0RFX1RBSUwgfCBDTU9ERV9X
SE9MRSB8IENNT0RFX0hFQUQ6CisJCQlpbXBvc3NpYmxlKCJ2cy0xNTc3IiwgInRoaXMgY2FuIG5v
dCBoYXBwZW4gY3VycmVudGx5Iik7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCWltcG9zc2li
bGUoInZzLTE1NzgiLCAidW5leHBlY3RlZCBjdXQgbW9kZSIpOworCQkJYnJlYWs7CisJCX0KKwl9
CisJcmV0dXJuIHJldHZhbDsKK30KKworLyogcGx1Z2luLT51Lm5vZGUua2lsbAorICAgcmV0dXJu
IHZhbHVlIGlzIG51bWJlciBvZiBpdGVtcyByZW1vdmVkIGNvbXBsZXRlbHkgKi8KK2ludCBraWxs
X25vZGU0MChzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICprZGF0YSwgY2FycnlfcGx1Z2luX2luZm8g
KiBpbmZvKQoreworCXpub2RlICpub2RlOworCXN0cnVjdCBjdXQ0MF9pbmZvIGNpbmZvOworCWlu
dCBmaXJzdF9rZXlfY2hhbmdlZDsKKworCW5vZGUgPSBrZGF0YS0+cGFyYW1zLmZyb20tPm5vZGU7
CisKKwlmaXJzdF9rZXlfY2hhbmdlZCA9CisJICAgIHByZXBhcmVfZm9yX2NvbXBhY3QoJmNpbmZv
LCAma2RhdGEtPnBhcmFtcywgMCAvKiBub3QgY3V0ICovICwga2RhdGEsCisJCQkJaW5mbyk7CisJ
Y29tcGFjdChub2RlLCAmY2luZm8pOworCisJaWYgKGluZm8pIHsKKwkJLyogaXQgaXMgbm90IGNh
bGxlZCBieSBub2RlNDBfc2hpZnQsIHNvIHdlIGhhdmUgdG8gdGFrZSBjYXJlCisJCSAgIG9mIGNo
YW5nZXMgb24gdXBwZXIgbGV2ZWxzICovCisJCWlmIChub2RlX2lzX2VtcHR5KG5vZGUpCisJCSAg
ICAmJiAhKGtkYXRhLT5mbGFncyAmIERFTEVURV9SRVRBSU5fRU1QVFkpKQorCQkJLyogYWxsIGNv
bnRlbnRzIG9mIG5vZGUgaXMgZGVsZXRlZCAqLworCQkJcHJlcGFyZV9yZW1vdmFsX25vZGU0MChu
b2RlLCBpbmZvKTsKKwkJZWxzZSBpZiAoZmlyc3Rfa2V5X2NoYW5nZWQpIHsKKwkJCXByZXBhcmVf
Zm9yX3VwZGF0ZShOVUxMLCBub2RlLCBpbmZvKTsKKwkJfQorCX0KKworCWNvb3JkX2NsZWFyX2lw
bHVnKGtkYXRhLT5wYXJhbXMuZnJvbSk7CisJY29vcmRfY2xlYXJfaXBsdWcoa2RhdGEtPnBhcmFt
cy50byk7CisKKwl6bm9kZV9tYWtlX2RpcnR5KG5vZGUpOworCXJldHVybiBjaW5mby5yZW1vdmVk
X2NvdW50ID09IE1BWF9QT1NfSU5fTk9ERSA/IDAgOiBjaW5mby5yZW1vdmVkX2NvdW50OworfQor
CisvKiBwbHVnaW4tPnUubm9kZS5jdXQKKyAgIHJldHVybiB2YWx1ZSBpcyBudW1iZXIgb2YgaXRl
bXMgcmVtb3ZlZCBjb21wbGV0ZWx5ICovCitpbnQgY3V0X25vZGU0MChzdHJ1Y3QgY2FycnlfY3V0
X2RhdGEgKmNkYXRhLCBjYXJyeV9wbHVnaW5faW5mbyAqIGluZm8pCit7CisJem5vZGUgKm5vZGU7
CisJc3RydWN0IGN1dDQwX2luZm8gY2luZm87CisJaW50IGZpcnN0X2tleV9jaGFuZ2VkOworCisJ
bm9kZSA9IGNkYXRhLT5wYXJhbXMuZnJvbS0+bm9kZTsKKworCWZpcnN0X2tleV9jaGFuZ2VkID0K
KwkgICAgcHJlcGFyZV9mb3JfY29tcGFjdCgmY2luZm8sICZjZGF0YS0+cGFyYW1zLCAxIC8qIG5v
dCBjdXQgKi8gLCBjZGF0YSwKKwkJCQlpbmZvKTsKKwljb21wYWN0KG5vZGUsICZjaW5mbyk7CisK
KwlpZiAoaW5mbykgeworCQkvKiBpdCBpcyBub3QgY2FsbGVkIGJ5IG5vZGU0MF9zaGlmdCwgc28g
d2UgaGF2ZSB0byB0YWtlIGNhcmUKKwkJICAgb2YgY2hhbmdlcyBvbiB1cHBlciBsZXZlbHMgKi8K
KwkJaWYgKG5vZGVfaXNfZW1wdHkobm9kZSkpCisJCQkvKiBhbGwgY29udGVudHMgb2Ygbm9kZSBp
cyBkZWxldGVkICovCisJCQlwcmVwYXJlX3JlbW92YWxfbm9kZTQwKG5vZGUsIGluZm8pOworCQll
bHNlIGlmIChmaXJzdF9rZXlfY2hhbmdlZCkgeworCQkJcHJlcGFyZV9mb3JfdXBkYXRlKE5VTEws
IG5vZGUsIGluZm8pOworCQl9CisJfQorCisJY29vcmRfY2xlYXJfaXBsdWcoY2RhdGEtPnBhcmFt
cy5mcm9tKTsKKwljb29yZF9jbGVhcl9pcGx1ZyhjZGF0YS0+cGFyYW1zLnRvKTsKKworCXpub2Rl
X21ha2VfZGlydHkobm9kZSk7CisJcmV0dXJuIGNpbmZvLnJlbW92ZWRfY291bnQgPT0gTUFYX1BP
U19JTl9OT0RFID8gMCA6IGNpbmZvLnJlbW92ZWRfY291bnQ7Cit9CisKKy8qIHRoaXMgc3RydWN0
dXJlIGlzIHVzZWQgYnkgc2hpZnQgbWV0aG9kIG9mIG5vZGU0MCBwbHVnaW4gKi8KK3N0cnVjdCBz
aGlmdF9wYXJhbXMgeworCXNoaWZ0X2RpcmVjdGlvbiBwZW5kOwkvKiB3aGVuIEBwZW5kID09IGFw
cGVuZCAtIHdlIGFyZSBzaGlmdGluZyB0bworCQkJCSAgIGxlZnQsIHdoZW4gQHBlbmQgPT0gcHJl
cGVuZCAtIHRvIHJpZ2h0ICovCisJY29vcmRfdCB3aXNoX3N0b3A7CS8qIHdoZW4gc2hpZnRpbmcg
dG8gbGVmdCB0aGlzIGlzIGxhc3QgdW5pdCB3ZQorCQkJCSAgIHdhbnQgc2hpZnRlZCwgd2hlbiBz
aGlmdGluZyB0byByaWdodCAtIHRoaXMKKwkJCQkgICBpcyBzZXQgdG8gdW5pdCB3ZSB3YW50IHRv
IHN0YXJ0IHNoaWZ0aW5nCisJCQkJICAgZnJvbSAqLworCXpub2RlICp0YXJnZXQ7CisJaW50IGV2
ZXJ5dGhpbmc7CQkvKiBpdCBpcyBzZXQgdG8gMSBpZiBldmVyeXRoaW5nIHdlIGhhdmUgdG8gc2hp
ZnQgaXMKKwkJCQkgICBzaGlmdGVkLCAwIC0gb3RoZXJ3aXNlICovCisKKwkvKiBGSVhNRS1WUzog
Z2V0IHJpZCBvZiByZWFkX3N0b3AgKi8KKworCS8qIHRoZXNlIGFyZSBzZXQgYnkgZXN0aW1hdGVf
c2hpZnQgKi8KKwljb29yZF90IHJlYWxfc3RvcDsJLyogdGhpcyB3aWxsIGJlIHNldCB0byBsYXN0
IHVuaXQgd2hpY2ggd2lsbCBiZQorCQkJCSAgIHJlYWxseSBzaGlmdGVkICovCisKKwkvKiBjb29y
ZGluYXRlIGluIHNvdXJjZSBub2RlIGJlZm9yZSBvcGVyYXRpb24gb2YgdW5pdCB3aGljaCBiZWNv
bWVzCisJICAgZmlyc3QgYWZ0ZXIgc2hpZnQgdG8gbGVmdCBvZiBsYXN0IGFmdGVyIHNoaWZ0IHRv
IHJpZ2h0ICovCisJdW5pb24geworCQljb29yZF90IGZ1dHVyZV9maXJzdDsKKwkJY29vcmRfdCBm
dXR1cmVfbGFzdDsKKwl9IHU7CisKKwl1bnNpZ25lZCBtZXJnaW5nX3VuaXRzOwkvKiBudW1iZXIg
b2YgdW5pdHMgb2YgZmlyc3QgaXRlbSB3aGljaCBoYXZlIHRvCisJCQkJICAgYmUgbWVyZ2VkIHdp
dGggbGFzdCBpdGVtIG9mIHRhcmdldCBub2RlICovCisJdW5zaWduZWQgbWVyZ2luZ19ieXRlczsJ
LyogbnVtYmVyIG9mIGJ5dGVzIGluIHRob3NlIHVuaXRzICovCisKKwl1bnNpZ25lZCBlbnRpcmU7
CS8qIGl0ZW1zIHNoaWZ0ZWQgaW4gdGhlaXIgZW50aXJldHkgKi8KKwl1bnNpZ25lZCBlbnRpcmVf
Ynl0ZXM7CS8qIG51bWJlciBvZiBieXRlcyBpbiB0aG9zZSBpdGVtcyAqLworCisJdW5zaWduZWQg
cGFydF91bml0czsJLyogbnVtYmVyIG9mIHVuaXRzIG9mIHBhcnRpYWxseSBjb3BpZWQgaXRlbSAq
LworCXVuc2lnbmVkIHBhcnRfYnl0ZXM7CS8qIG51bWJlciBvZiBieXRlcyBpbiB0aG9zZSB1bml0
cyAqLworCisJdW5zaWduZWQgc2hpZnRfYnl0ZXM7CS8qIHRvdGFsIG51bWJlciBvZiBieXRlcyBp
biBpdGVtcyBzaGlmdGVkIChpdGVtCisJCQkJICAgaGVhZGVycyBub3QgaW5jbHVkZWQpICovCisK
K307CisKK3N0YXRpYyBpbnQgaXRlbV9jcmVhdGlvbl9vdmVyaGVhZChjb29yZF90ICppdGVtKQor
eworCXJldHVybiBub2RlX3BsdWdpbl9ieV9jb29yZChpdGVtKS0+aXRlbV9vdmVyaGVhZChpdGVt
LT5ub2RlLCBOVUxMKTsKK30KKworLyogaG93IG1hbnkgdW5pdHMgYXJlIHRoZXJlIGluIEBzb3Vy
Y2Ugc3RhcnRpbmcgZnJvbSBzb3VyY2UtPnVuaXRfcG9zCisgICBidXQgbm90IGZ1cnRoZXIgdGhh
biBAc3RvcF9jb29yZCAqLworc3RhdGljIGludAord2FudGVkX3VuaXRzKGNvb3JkX3QgKnNvdXJj
ZSwgY29vcmRfdCAqc3RvcF9jb29yZCwgc2hpZnRfZGlyZWN0aW9uIHBlbmQpCit7CisJaWYgKHBl
bmQgPT0gU0hJRlRfTEVGVCkgeworCQlhc3NlcnQoInZzLTE4MSIsIHNvdXJjZS0+dW5pdF9wb3Mg
PT0gMCk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ2cy0xODIiLAorCQkgICAgICAgc291cmNlLT51
bml0X3BvcyA9PSBjb29yZF9sYXN0X3VuaXRfcG9zKHNvdXJjZSkpOworCX0KKworCWlmIChzb3Vy
Y2UtPml0ZW1fcG9zICE9IHN0b3BfY29vcmQtPml0ZW1fcG9zKSB7CisJCS8qIEBzb3VyY2UgYW5k
IEBzdG9wX2Nvb3JkIGFyZSBkaWZmZXJlbnQgaXRlbXMgKi8KKwkJcmV0dXJuIGNvb3JkX2xhc3Rf
dW5pdF9wb3Moc291cmNlKSArIDE7CisJfQorCisJaWYgKHBlbmQgPT0gU0hJRlRfTEVGVCkgewor
CQlyZXR1cm4gc3RvcF9jb29yZC0+dW5pdF9wb3MgKyAxOworCX0gZWxzZSB7CisJCXJldHVybiBz
b3VyY2UtPnVuaXRfcG9zIC0gc3RvcF9jb29yZC0+dW5pdF9wb3MgKyAxOworCX0KK30KKworLyog
dGhpcyBjYWxjdWxhdGVzIHdoYXQgY2FuIGJlIGNvcGllZCBmcm9tIEBzaGlmdC0+d2lzaF9zdG9w
Lm5vZGUgdG8KKyAgIEBzaGlmdC0+dGFyZ2V0ICovCitzdGF0aWMgdm9pZAorZXN0aW1hdGVfc2hp
ZnQoc3RydWN0IHNoaWZ0X3BhcmFtcyAqc2hpZnQsIGNvbnN0IHJlaXNlcjRfY29udGV4dCAqIGN0
eCkKK3sKKwl1bnNpZ25lZCB0YXJnZXRfZnJlZV9zcGFjZSwgc2l6ZTsKKwlwb3NfaW5fbm9kZV90
IHN0b3BfaXRlbTsJLyogaXRlbSB3aGljaCBlc3RpbWF0aW5nIHNob3VsZCBub3QgY29uc2lkZXIg
Ki8KKwl1bnNpZ25lZCB3YW50OwkJLyogbnVtYmVyIG9mIHVuaXRzIG9mIGl0ZW0gd2Ugd2FudCBz
aGlmdGVkICovCisJY29vcmRfdCBzb3VyY2U7CQkvKiBpdGVtIGJlaW5nIGVzdGltYXRlZCAqLwor
CWl0ZW1fcGx1Z2luICppcGx1ZzsKKworCS8qIHNoaWZ0aW5nIHRvIGxlZnQvcmlnaHQgc3RhcnRz
IGZyb20gZmlyc3QvbGFzdCB1bml0cyBvZgorCSAgIEBzaGlmdC0+d2lzaF9zdG9wLm5vZGUgKi8K
KwlpZiAoc2hpZnQtPnBlbmQgPT0gU0hJRlRfTEVGVCkgeworCQljb29yZF9pbml0X2ZpcnN0X3Vu
aXQoJnNvdXJjZSwgc2hpZnQtPndpc2hfc3RvcC5ub2RlKTsKKwl9IGVsc2UgeworCQljb29yZF9p
bml0X2xhc3RfdW5pdCgmc291cmNlLCBzaGlmdC0+d2lzaF9zdG9wLm5vZGUpOworCX0KKwlzaGlm
dC0+cmVhbF9zdG9wID0gc291cmNlOworCisJLyogZnJlZSBzcGFjZSBpbiB0YXJnZXQgbm9kZSBh
bmQgbnVtYmVyIG9mIGl0ZW1zIGluIHNvdXJjZSAqLworCXRhcmdldF9mcmVlX3NwYWNlID0gem5v
ZGVfZnJlZV9zcGFjZShzaGlmdC0+dGFyZ2V0KTsKKworCXNoaWZ0LT5ldmVyeXRoaW5nID0gMDsK
KwlpZiAoIW5vZGVfaXNfZW1wdHkoc2hpZnQtPnRhcmdldCkpIHsKKwkJLyogdGFyZ2V0IG5vZGUg
aXMgbm90IGVtcHR5LCBjaGVjayBmb3IgYm91bmRhcnkgaXRlbXMKKwkJICAgbWVyZ2VhYmlsaXR5
ICovCisJCWNvb3JkX3QgdG87CisKKwkJLyogaXRlbSB3ZSB0cnkgdG8gbWVyZ2UgQHNvdXJjZSB3
aXRoICovCisJCWlmIChzaGlmdC0+cGVuZCA9PSBTSElGVF9MRUZUKSB7CisJCQljb29yZF9pbml0
X2xhc3RfdW5pdCgmdG8sIHNoaWZ0LT50YXJnZXQpOworCQl9IGVsc2UgeworCQkJY29vcmRfaW5p
dF9maXJzdF91bml0KCZ0bywgc2hpZnQtPnRhcmdldCk7CisJCX0KKworCQlpZiAoKHNoaWZ0LT5w
ZW5kID09IFNISUZUX0xFRlQpID8gYXJlX2l0ZW1zX21lcmdlYWJsZSgmdG8sCisJCQkJCQkJCSAg
ICAgICZzb3VyY2UpIDoKKwkJICAgIGFyZV9pdGVtc19tZXJnZWFibGUoJnNvdXJjZSwgJnRvKSkg
eworCQkJLyogaG93IG1hbnkgdW5pdHMgb2YgQHNvdXJjZSBkbyB3ZSB3YW50IHRvIG1lcmdlIHRv
CisJCQkgICBpdGVtIEB0byAqLworCQkJd2FudCA9CisJCQkgICAgd2FudGVkX3VuaXRzKCZzb3Vy
Y2UsICZzaGlmdC0+d2lzaF9zdG9wLAorCQkJCQkgc2hpZnQtPnBlbmQpOworCisJCQkvKiBob3cg
bWFueSB1bml0cyBvZiBAc291cmNlIHdlIGNhbiBtZXJnZSB0byBpdGVtCisJCQkgICBAdG8gKi8K
KwkJCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQoJnNvdXJjZSk7CisJCQlpZiAoaXBsdWct
PmIuY2FuX3NoaWZ0ICE9IE5VTEwpCisJCQkJc2hpZnQtPm1lcmdpbmdfdW5pdHMgPQorCQkJCSAg
ICBpcGx1Zy0+Yi5jYW5fc2hpZnQodGFyZ2V0X2ZyZWVfc3BhY2UsCisJCQkJCQkgICAgICAgJnNv
dXJjZSwgc2hpZnQtPnRhcmdldCwKKwkJCQkJCSAgICAgICBzaGlmdC0+cGVuZCwgJnNpemUsCisJ
CQkJCQkgICAgICAgd2FudCk7CisJCQllbHNlIHsKKwkJCQlzaGlmdC0+bWVyZ2luZ191bml0cyA9
IDA7CisJCQkJc2l6ZSA9IDA7CisJCQl9CisJCQlzaGlmdC0+bWVyZ2luZ19ieXRlcyA9IHNpemU7
CisJCQlzaGlmdC0+c2hpZnRfYnl0ZXMgKz0gc2l6ZTsKKwkJCS8qIHVwZGF0ZSBzdG9wIGNvb3Jk
IHRvIGJlIHNldCB0byBsYXN0IHVuaXQgb2YgQHNvdXJjZQorCQkJICAgd2UgY2FuIG1lcmdlIHRv
IEB0YXJnZXQgKi8KKwkJCWlmIChzaGlmdC0+bWVyZ2luZ191bml0cykKKwkJCQkvKiBhdCBsZWFz
dCBvbmUgdW5pdCBjYW4gYmUgc2hpZnRlZCAqLworCQkJCXNoaWZ0LT5yZWFsX3N0b3AudW5pdF9w
b3MgPQorCQkJCSAgICAoc2hpZnQtPm1lcmdpbmdfdW5pdHMgLSBzb3VyY2UudW5pdF9wb3MgLQor
CQkJCSAgICAgMSkgKiBzaGlmdC0+cGVuZDsKKwkJCWVsc2UgeworCQkJCS8qIG5vdGhpbmcgY2Fu
IGJlIHNoaWZ0ZWQgKi8KKwkJCQlpZiAoc2hpZnQtPnBlbmQgPT0gU0hJRlRfTEVGVCkKKwkJCQkJ
Y29vcmRfaW5pdF9iZWZvcmVfZmlyc3RfaXRlbSgmc2hpZnQtPgorCQkJCQkJCQkgICAgIHJlYWxf
c3RvcCwKKwkJCQkJCQkJICAgICBzb3VyY2UuCisJCQkJCQkJCSAgICAgbm9kZSk7CisJCQkJZWxz
ZQorCQkJCQljb29yZF9pbml0X2FmdGVyX2xhc3RfaXRlbSgmc2hpZnQtPgorCQkJCQkJCQkgICBy
ZWFsX3N0b3AsCisJCQkJCQkJCSAgIHNvdXJjZS5ub2RlKTsKKwkJCX0KKwkJCWFzc2VydCgibmlr
aXRhLTIwODEiLCBzaGlmdC0+cmVhbF9zdG9wLnVuaXRfcG9zICsgMSk7CisKKwkJCWlmIChzaGlm
dC0+bWVyZ2luZ191bml0cyAhPSB3YW50KSB7CisJCQkJLyogd2UgY291bGQgbm90IGNvcHkgYXMg
bWFueSBhcyB3ZSB3YW50LCBzbywKKwkJCQkgICB0aGVyZSBpcyBubyByZWFzb24gZm9yIGVzdGlt
YXRpbmcgYW55CisJCQkJICAgbG9uZ2VyICovCisJCQkJcmV0dXJuOworCQkJfQorCisJCQl0YXJn
ZXRfZnJlZV9zcGFjZSAtPSBzaXplOworCQkJY29vcmRfYWRkX2l0ZW1fcG9zKCZzb3VyY2UsIHNo
aWZ0LT5wZW5kKTsKKwkJfQorCX0KKworCS8qIG51bWJlciBvZiBpdGVtIG5vdGhpbmcgb2Ygd2hp
Y2ggd2Ugd2FudCB0byBzaGlmdCAqLworCXN0b3BfaXRlbSA9IHNoaWZ0LT53aXNoX3N0b3AuaXRl
bV9wb3MgKyBzaGlmdC0+cGVuZDsKKworCS8qIGNhbGN1bGF0ZSBob3cgbWFueSBpdGVtcyBjYW4g
YmUgY29waWVkIGludG8gZ2l2ZW4gZnJlZQorCSAgIHNwYWNlIGFzIHdob2xlICovCisJZm9yICg7
IHNvdXJjZS5pdGVtX3BvcyAhPSBzdG9wX2l0ZW07CisJICAgICBjb29yZF9hZGRfaXRlbV9wb3Mo
JnNvdXJjZSwgc2hpZnQtPnBlbmQpKSB7CisJCWlmIChzaGlmdC0+cGVuZCA9PSBTSElGVF9SSUdI
VCkKKwkJCXNvdXJjZS51bml0X3BvcyA9IGNvb3JkX2xhc3RfdW5pdF9wb3MoJnNvdXJjZSk7CisK
KwkJLyogaG93IG1hbnkgdW5pdHMgb2YgQHNvdXJjZSBkbyB3ZSB3YW50IHRvIGNvcHkgKi8KKwkJ
d2FudCA9IHdhbnRlZF91bml0cygmc291cmNlLCAmc2hpZnQtPndpc2hfc3RvcCwgc2hpZnQtPnBl
bmQpOworCisJCWlmICh3YW50ID09IGNvb3JkX2xhc3RfdW5pdF9wb3MoJnNvdXJjZSkgKyAxKSB7
CisJCQkvKiB3ZSB3YW50IHRoaXMgaXRlbSB0byBiZSBjb3BpZWQgZW50aXJlbHkgKi8KKwkJCXNp
emUgPQorCQkJICAgIGl0ZW1fbGVuZ3RoX2J5X2Nvb3JkKCZzb3VyY2UpICsKKwkJCSAgICBpdGVt
X2NyZWF0aW9uX292ZXJoZWFkKCZzb3VyY2UpOworCQkJaWYgKHNpemUgPD0gdGFyZ2V0X2ZyZWVf
c3BhY2UpIHsKKwkJCQkvKiBpdGVtIGZpdHMgaW50byB0YXJnZXQgbm9kZSBhcyB3aG9sZSAqLwor
CQkJCXRhcmdldF9mcmVlX3NwYWNlIC09IHNpemU7CisJCQkJc2hpZnQtPnNoaWZ0X2J5dGVzICs9
CisJCQkJICAgIHNpemUgLSBpdGVtX2NyZWF0aW9uX292ZXJoZWFkKCZzb3VyY2UpOworCQkJCXNo
aWZ0LT5lbnRpcmVfYnl0ZXMgKz0KKwkJCQkgICAgc2l6ZSAtIGl0ZW1fY3JlYXRpb25fb3Zlcmhl
YWQoJnNvdXJjZSk7CisJCQkJc2hpZnQtPmVudGlyZSsrOworCisJCQkJLyogdXBkYXRlIHNoaWZ0
LT5yZWFsX3N0b3AgY29vcmQgdG8gYmUgc2V0IHRvCisJCQkJICAgbGFzdCB1bml0IG9mIEBzb3Vy
Y2Ugd2UgY2FuIG1lcmdlIHRvCisJCQkJICAgQHRhcmdldCAqLworCQkJCXNoaWZ0LT5yZWFsX3N0
b3AgPSBzb3VyY2U7CisJCQkJaWYgKHNoaWZ0LT5wZW5kID09IFNISUZUX0xFRlQpCisJCQkJCXNo
aWZ0LT5yZWFsX3N0b3AudW5pdF9wb3MgPQorCQkJCQkgICAgY29vcmRfbGFzdF91bml0X3Bvcygm
c2hpZnQtPgorCQkJCQkJCQlyZWFsX3N0b3ApOworCQkJCWVsc2UKKwkJCQkJc2hpZnQtPnJlYWxf
c3RvcC51bml0X3BvcyA9IDA7CisJCQkJY29udGludWU7CisJCQl9CisJCX0KKworCQkvKiB3ZSBy
ZWFjaCBoZXJlIG9ubHkgZm9yIGFuIGl0ZW0gd2hpY2ggZG9lcyBub3QgZml0IGludG8KKwkJICAg
dGFyZ2V0IG5vZGUgaW4gaXRzIGVudGlyZXR5LiBUaGlzIGl0ZW0gbWF5IGJlIGVpdGhlcgorCQkg
ICBwYXJ0aWFsbHkgc2hpZnRlZCwgb3Igbm90IHNoaWZ0ZWQgYXQgYWxsLiBXZSB3aWxsIGhhdmUg
dG8KKwkJICAgY3JlYXRlIG5ldyBpdGVtIGluIHRhcmdldCBub2RlLCBzbyBkZWNyZWFzZSBhbW91
dCBvZiBmcmVlCisJCSAgIHNwYWNlIGJ5IGFuIGl0ZW0gY3JlYXRpb24gb3ZlcmhlYWQuIFdlIGNh
biByZWFjaCBoZXJlIGFsc28KKwkJICAgaWYgc3RvcCBjb29yZCBpcyBpbiB0aGlzIGl0ZW0gKi8K
KwkJaWYgKHRhcmdldF9mcmVlX3NwYWNlID49CisJCSAgICAodW5zaWduZWQpaXRlbV9jcmVhdGlv
bl9vdmVyaGVhZCgmc291cmNlKSkgeworCQkJdGFyZ2V0X2ZyZWVfc3BhY2UgLT0gaXRlbV9jcmVh
dGlvbl9vdmVyaGVhZCgmc291cmNlKTsKKwkJCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQo
JnNvdXJjZSk7CisJCQlpZiAoaXBsdWctPmIuY2FuX3NoaWZ0KSB7CisJCQkJc2hpZnQtPnBhcnRf
dW5pdHMgPSBpcGx1Zy0+Yi5jYW5fc2hpZnQodGFyZ2V0X2ZyZWVfc3BhY2UsCisJCQkJCQkJCSAg
ICAgICAmc291cmNlLAorCQkJCQkJCQkgICAgICAgTlVMTCwgLyogdGFyZ2V0ICovCisJCQkJCQkJ
CSAgICAgICBzaGlmdC0+cGVuZCwKKwkJCQkJCQkJICAgICAgICZzaXplLAorCQkJCQkJCQkgICAg
ICAgd2FudCk7CisJCQl9IGVsc2UgeworCQkJCXRhcmdldF9mcmVlX3NwYWNlID0gMDsKKwkJCQlz
aGlmdC0+cGFydF91bml0cyA9IDA7CisJCQkJc2l6ZSA9IDA7CisJCQl9CisJCX0gZWxzZSB7CisJ
CQl0YXJnZXRfZnJlZV9zcGFjZSA9IDA7CisJCQlzaGlmdC0+cGFydF91bml0cyA9IDA7CisJCQlz
aXplID0gMDsKKwkJfQorCQlzaGlmdC0+cGFydF9ieXRlcyA9IHNpemU7CisJCXNoaWZ0LT5zaGlm
dF9ieXRlcyArPSBzaXplOworCisJCS8qIHNldCBAc2hpZnQtPnJlYWxfc3RvcCB0byBsYXN0IHVu
aXQgb2YgQHNvdXJjZSB3ZSBjYW4gbWVyZ2UKKwkJICAgdG8gQHNoaWZ0LT50YXJnZXQgKi8KKwkJ
aWYgKHNoaWZ0LT5wYXJ0X3VuaXRzKSB7CisJCQlzaGlmdC0+cmVhbF9zdG9wID0gc291cmNlOwor
CQkJc2hpZnQtPnJlYWxfc3RvcC51bml0X3BvcyA9CisJCQkgICAgKHNoaWZ0LT5wYXJ0X3VuaXRz
IC0gc291cmNlLnVuaXRfcG9zIC0KKwkJCSAgICAgMSkgKiBzaGlmdC0+cGVuZDsKKwkJCWFzc2Vy
dCgibmlraXRhLTIwODIiLCBzaGlmdC0+cmVhbF9zdG9wLnVuaXRfcG9zICsgMSk7CisJCX0KKwor
CQlpZiAod2FudCAhPSBzaGlmdC0+cGFydF91bml0cykKKwkJCS8qIG5vdCBldmVyeXRoaW5nIHdh
bnRlZCB3ZXJlIHNoaWZ0ZWQgKi8KKwkJCXJldHVybjsKKwkJYnJlYWs7CisJfQorCisJc2hpZnQt
PmV2ZXJ5dGhpbmcgPSAxOworfQorCitzdGF0aWMgdm9pZAorY29weV91bml0cyhjb29yZF90ICog
dGFyZ2V0LCBjb29yZF90ICogc291cmNlLCB1bnNpZ25lZCBmcm9tLCB1bnNpZ25lZCBjb3VudCwK
KwkgICBzaGlmdF9kaXJlY3Rpb24gZGlyLCB1bnNpZ25lZCBmcmVlX3NwYWNlKQoreworCWl0ZW1f
cGx1Z2luICppcGx1ZzsKKworCWFzc2VydCgibmlraXRhLTE0NjMiLCB0YXJnZXQgIT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtMTQ2NCIsIHNvdXJjZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0xNDY1IiwgZnJvbSArIGNvdW50IDw9IGNvb3JkX251bV91bml0cyhzb3VyY2UpKTsKKworCWlw
bHVnID0gaXRlbV9wbHVnaW5fYnlfY29vcmQoc291cmNlKTsKKwlhc3NlcnQoIm5pa2l0YS0xNDY4
IiwgaXBsdWcgPT0gaXRlbV9wbHVnaW5fYnlfY29vcmQodGFyZ2V0KSk7CisJaXBsdWctPmIuY29w
eV91bml0cyh0YXJnZXQsIHNvdXJjZSwgZnJvbSwgY291bnQsIGRpciwgZnJlZV9zcGFjZSk7CisK
KwlpZiAoZGlyID09IFNISUZUX1JJR0hUKSB7CisJCS8qIEZJWE1FLVZTOiB0aGlzIGxvb2tzIG5v
dCBuZWNlc3NhcnkuIHVwZGF0ZV9pdGVtX2tleSB3YXMKKwkJICAgY2FsbGVkIGFscmVhZHkgYnkg
Y29weV91bml0cyBtZXRob2QgKi8KKwkJcmVpc2VyNF9rZXkgc3BsaXRfa2V5OworCisJCWFzc2Vy
dCgibmlraXRhLTE0NjkiLCB0YXJnZXQtPnVuaXRfcG9zID09IDApOworCisJCXVuaXRfa2V5X2J5
X2Nvb3JkKHRhcmdldCwgJnNwbGl0X2tleSk7CisJCW5vZGVfcGx1Z2luX2J5X2Nvb3JkKHRhcmdl
dCktPnVwZGF0ZV9pdGVtX2tleSh0YXJnZXQsCisJCQkJCQkJICAgICAgJnNwbGl0X2tleSwgTlVM
TCk7CisJfQorfQorCisvKiBjb3B5IHBhcnQgb2YgQHNoaWZ0LT5yZWFsX3N0b3Aubm9kZSBzdGFy
dGluZyBlaXRoZXIgZnJvbSBpdHMgYmVnaW5uaW5nIG9yCisgICBmcm9tIGl0cyBlbmQgYW5kIGVu
ZGluZyBhdCBAc2hpZnQtPnJlYWxfc3RvcCB0byBlaXRoZXIgdGhlIGVuZCBvciB0aGUKKyAgIGJl
Z2lubmluZyBvZiBAc2hpZnQtPnRhcmdldCAqLworc3RhdGljIHZvaWQgY29weShzdHJ1Y3Qgc2hp
ZnRfcGFyYW1zICpzaGlmdCwgc2l6ZV90IG5vZGVfaGVhZGVyX3NpemUpCit7CisJbm9kZTQwX2hl
YWRlciAqbmg7CisJY29vcmRfdCBmcm9tOworCWNvb3JkX3QgdG87CisJaXRlbV9oZWFkZXI0MCAq
ZnJvbV9paCwgKnRvX2loOworCWludCBmcmVlX3NwYWNlX3N0YXJ0OworCWludCBuZXdfaXRlbXM7
CisJdW5zaWduZWQgb2xkX2l0ZW1zOworCWludCBvbGRfb2Zmc2V0OworCXVuc2lnbmVkIGk7CisK
KwluaCA9IG5vZGU0MF9ub2RlX2hlYWRlcihzaGlmdC0+dGFyZ2V0KTsKKwlmcmVlX3NwYWNlX3N0
YXJ0ID0gbmg0MF9nZXRfZnJlZV9zcGFjZV9zdGFydChuaCk7CisJb2xkX2l0ZW1zID0gbmg0MF9n
ZXRfbnVtX2l0ZW1zKG5oKTsKKwluZXdfaXRlbXMgPSBzaGlmdC0+ZW50aXJlICsgKHNoaWZ0LT5w
YXJ0X3VuaXRzID8gMSA6IDApOworCWFzc2VydCgidnMtMTg1IiwKKwkgICAgICAgc2hpZnQtPnNo
aWZ0X2J5dGVzID09CisJICAgICAgIHNoaWZ0LT5tZXJnaW5nX2J5dGVzICsgc2hpZnQtPmVudGly
ZV9ieXRlcyArIHNoaWZ0LT5wYXJ0X2J5dGVzKTsKKworCWZyb20gPSBzaGlmdC0+d2lzaF9zdG9w
OworCisJY29vcmRfaW5pdF9maXJzdF91bml0KCZ0bywgc2hpZnQtPnRhcmdldCk7CisKKwkvKiBO
T1RFOk5JS0lUQS0+VlMgbm90IHN1cmUgd2hhdCBJIGFtIGRvaW5nOiBzaGlmdC0+dGFyZ2V0IGlz
IGVtcHR5LAorCSAgIGhlbmNlIHRvLmJldHdlZW4gaXMgc2V0IHRvIEVNUFRZX05PREUgYWJvdmUu
IExvb2tzIGxpa2Ugd2Ugd2FudCBpdAorCSAgIHRvIGJlIEFUX1VOSVQuCisKKwkgICBPaCwgd29u
ZGVycyBvZiAtPmJldHdlZW5lc3MuLi4KKworCSAqLworCXRvLmJldHdlZW4gPSBBVF9VTklUOwor
CisJaWYgKHNoaWZ0LT5wZW5kID09IFNISUZUX0xFRlQpIHsKKwkJLyogY29weWluZyB0byBsZWZ0
ICovCisKKwkJY29vcmRfc2V0X2l0ZW1fcG9zKCZmcm9tLCAwKTsKKwkJZnJvbV9paCA9IG5vZGU0
MF9paF9hdChmcm9tLm5vZGUsIDApOworCisJCWNvb3JkX3NldF9pdGVtX3BvcygmdG8sCisJCQkJ
ICAgbm9kZTQwX251bV9vZl9pdGVtc19pbnRlcm5hbCh0by5ub2RlKSAtIDEpOworCQlpZiAoc2hp
ZnQtPm1lcmdpbmdfdW5pdHMpIHsKKwkJCS8qIGV4cGFuZCBsYXN0IGl0ZW0sIHNvIHRoYXQgcGx1
Z2luIG1ldGhvZHMgd2lsbCBzZWUKKwkJCSAgIGNvcnJlY3QgZGF0YSAqLworCQkJZnJlZV9zcGFj
ZV9zdGFydCArPSBzaGlmdC0+bWVyZ2luZ19ieXRlczsKKwkJCW5oNDBfc2V0X2ZyZWVfc3BhY2Vf
c3RhcnQobmgsCisJCQkJCQkgICh1bnNpZ25lZClmcmVlX3NwYWNlX3N0YXJ0KTsKKwkJCW5oNDBf
c2V0X2ZyZWVfc3BhY2UobmgsCisJCQkJCSAgICBuaDQwX2dldF9mcmVlX3NwYWNlKG5oKSAtCisJ
CQkJCSAgICBzaGlmdC0+bWVyZ2luZ19ieXRlcyk7CisKKwkJCS8qIGFwcGVuZGluZyBsYXN0IGl0
ZW0gb2YgQHRhcmdldCAqLworCQkJY29weV91bml0cygmdG8sICZmcm9tLCAwLAkvKiBzdGFydGlu
ZyBmcm9tIDAtdGggdW5pdCAqLworCQkJCSAgIHNoaWZ0LT5tZXJnaW5nX3VuaXRzLCBTSElGVF9M
RUZULAorCQkJCSAgIHNoaWZ0LT5tZXJnaW5nX2J5dGVzKTsKKwkJCWNvb3JkX2luY19pdGVtX3Bv
cygmZnJvbSk7CisJCQlmcm9tX2loLS07CisJCQljb29yZF9pbmNfaXRlbV9wb3MoJnRvKTsKKwkJ
fQorCisJCXRvX2loID0gbm9kZTQwX2loX2F0KHNoaWZ0LT50YXJnZXQsIG9sZF9pdGVtcyk7CisJ
CWlmIChzaGlmdC0+ZW50aXJlKSB7CisJCQkvKiBjb3B5IEBlbnRpcmUgaXRlbXMgZW50aXJlbHkg
Ki8KKworCQkJLyogY29weSBpdGVtIGhlYWRlcnMgKi8KKwkJCW1lbWNweSh0b19paCAtIHNoaWZ0
LT5lbnRpcmUgKyAxLAorCQkJICAgICAgIGZyb21faWggLSBzaGlmdC0+ZW50aXJlICsgMSwKKwkJ
CSAgICAgICBzaGlmdC0+ZW50aXJlICogc2l6ZW9mKGl0ZW1faGVhZGVyNDApKTsKKwkJCS8qIHVw
ZGF0ZSBpdGVtIGhlYWRlciBvZmZzZXQgKi8KKwkJCW9sZF9vZmZzZXQgPSBpaDQwX2dldF9vZmZz
ZXQoZnJvbV9paCk7CisJCQkvKiBBVURJVDogTG9va3MgbGlrZSBpZiB3ZSBjYWxjdWxhdGUgb2xk
X29mZnNldCArIGZyZWVfc3BhY2Vfc3RhcnQgaGVyZSBpbnN0ZWFkIG9mIGp1c3Qgb2xkX29mZnNl
dCwgd2UgY2FuIHBlcmZvcm0gb25lICJhZGQiIG9wZXJhdGlvbiBsZXNzIHBlciBlYWNoIGl0ZXJh
dGlvbiAqLworCQkJZm9yIChpID0gMDsgaSA8IHNoaWZ0LT5lbnRpcmU7IGkrKywgdG9faWgtLSwg
ZnJvbV9paC0tKQorCQkJCWloNDBfc2V0X29mZnNldCh0b19paCwKKwkJCQkJCWloNDBfZ2V0X29m
ZnNldChmcm9tX2loKSAtCisJCQkJCQlvbGRfb2Zmc2V0ICsgZnJlZV9zcGFjZV9zdGFydCk7CisK
KwkJCS8qIGNvcHkgaXRlbSBib2RpZXMgKi8KKwkJCW1lbWNweSh6ZGF0YShzaGlmdC0+dGFyZ2V0
KSArIGZyZWVfc3BhY2Vfc3RhcnQsIHpkYXRhKGZyb20ubm9kZSkgKyBvbGRfb2Zmc2V0LAkvKmlo
NDBfZ2V0X29mZnNldCAoZnJvbV9paCksICovCisJCQkgICAgICAgc2hpZnQtPmVudGlyZV9ieXRl
cyk7CisKKwkJCWNvb3JkX2FkZF9pdGVtX3BvcygmZnJvbSwgKGludClzaGlmdC0+ZW50aXJlKTsK
KwkJCWNvb3JkX2FkZF9pdGVtX3BvcygmdG8sIChpbnQpc2hpZnQtPmVudGlyZSk7CisJCX0KKwor
CQluaDQwX3NldF9mcmVlX3NwYWNlX3N0YXJ0KG5oLAorCQkJCQkgIGZyZWVfc3BhY2Vfc3RhcnQg
KworCQkJCQkgIHNoaWZ0LT5zaGlmdF9ieXRlcyAtCisJCQkJCSAgc2hpZnQtPm1lcmdpbmdfYnl0
ZXMpOworCQluaDQwX3NldF9mcmVlX3NwYWNlKG5oLAorCQkJCSAgICBuaDQwX2dldF9mcmVlX3Nw
YWNlKG5oKSAtCisJCQkJICAgIChzaGlmdC0+c2hpZnRfYnl0ZXMgLSBzaGlmdC0+bWVyZ2luZ19i
eXRlcyArCisJCQkJICAgICBzaXplb2YoaXRlbV9oZWFkZXI0MCkgKiBuZXdfaXRlbXMpKTsKKwor
CQkvKiB1cGRhdGUgbm9kZSBoZWFkZXIgKi8KKwkJbm9kZTQwX3NldF9udW1faXRlbXMoc2hpZnQt
PnRhcmdldCwgbmgsIG9sZF9pdGVtcyArIG5ld19pdGVtcyk7CisJCWFzc2VydCgidnMtMTcwIiwK
KwkJICAgICAgIG5oNDBfZ2V0X2ZyZWVfc3BhY2UobmgpIDwgem5vZGVfc2l6ZShzaGlmdC0+dGFy
Z2V0KSk7CisKKwkJaWYgKHNoaWZ0LT5wYXJ0X3VuaXRzKSB7CisJCQkvKiBjb3B5IGhlYWRpbmcg
cGFydCAoQHBhcnQgdW5pdHMpIG9mIEBzb3VyY2UgaXRlbSBhcworCQkJICAgYSBuZXcgaXRlbSBp
bnRvIEB0YXJnZXQtPm5vZGUgKi8KKworCQkJLyogY29weSBpdGVtIGhlYWRlciBvZiBwYXJ0aWFs
bHkgY29waWVkIGl0ZW0gKi8KKwkJCWNvb3JkX3NldF9pdGVtX3BvcygmdG8sCisJCQkJCSAgIG5v
ZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwodG8ubm9kZSkKKwkJCQkJICAgLSAxKTsKKwkJCW1l
bWNweSh0b19paCwgZnJvbV9paCwgc2l6ZW9mKGl0ZW1faGVhZGVyNDApKTsKKwkJCWloNDBfc2V0
X29mZnNldCh0b19paCwKKwkJCQkJbmg0MF9nZXRfZnJlZV9zcGFjZV9zdGFydChuaCkgLQorCQkJ
CQlzaGlmdC0+cGFydF9ieXRlcyk7CisJCQlpZiAoaXRlbV9wbHVnaW5fYnlfY29vcmQoJnRvKS0+
Yi5pbml0KQorCQkJCWl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZ0byktPmIuaW5pdCgmdG8sICZmcm9t
LAorCQkJCQkJCQkgIE5VTEwpOworCQkJY29weV91bml0cygmdG8sICZmcm9tLCAwLCBzaGlmdC0+
cGFydF91bml0cywgU0hJRlRfTEVGVCwKKwkJCQkgICBzaGlmdC0+cGFydF9ieXRlcyk7CisJCX0K
KworCX0gZWxzZSB7CisJCS8qIGNvcHlpbmcgdG8gcmlnaHQgKi8KKworCQljb29yZF9zZXRfaXRl
bV9wb3MoJmZyb20sCisJCQkJICAgbm9kZTQwX251bV9vZl9pdGVtc19pbnRlcm5hbChmcm9tLm5v
ZGUpIC0gMSk7CisJCWZyb21faWggPSBub2RlNDBfaWhfYXRfY29vcmQoJmZyb20pOworCisJCWNv
b3JkX3NldF9pdGVtX3BvcygmdG8sIDApOworCisJCS8qIHByZXBhcmUgc3BhY2UgZm9yIG5ldyBp
dGVtcyAqLworCQltZW1tb3ZlKHpkYXRhKHRvLm5vZGUpICsgbm9kZV9oZWFkZXJfc2l6ZSArCisJ
CQlzaGlmdC0+c2hpZnRfYnl0ZXMsCisJCQl6ZGF0YSh0by5ub2RlKSArIG5vZGVfaGVhZGVyX3Np
emUsCisJCQlmcmVlX3NwYWNlX3N0YXJ0IC0gbm9kZV9oZWFkZXJfc2l6ZSk7CisJCS8qIHVwZGF0
ZSBpdGVtIGhlYWRlcnMgb2YgbW92ZWQgaXRlbXMgKi8KKwkJdG9faWggPSBub2RlNDBfaWhfYXQo
dG8ubm9kZSwgMCk7CisJCS8qIGZpcnN0IGl0ZW0gZ2V0cyBAbWVyZ2luZ19ieXRlcyBsb25nZXIu
IGZyZWUgc3BhY2UgYXBwZWFycworCQkgICBhdCBpdHMgYmVnaW5uaW5nICovCisJCWlmICghbm9k
ZV9pc19lbXB0eSh0by5ub2RlKSkKKwkJCWloNDBfc2V0X29mZnNldCh0b19paCwKKwkJCQkJaWg0
MF9nZXRfb2Zmc2V0KHRvX2loKSArCisJCQkJCXNoaWZ0LT5zaGlmdF9ieXRlcyAtCisJCQkJCXNo
aWZ0LT5tZXJnaW5nX2J5dGVzKTsKKworCQlmb3IgKGkgPSAxOyBpIDwgb2xkX2l0ZW1zOyBpKysp
CisJCQlpaDQwX3NldF9vZmZzZXQodG9faWggLSBpLAorCQkJCQlpaDQwX2dldF9vZmZzZXQodG9f
aWggLSBpKSArCisJCQkJCXNoaWZ0LT5zaGlmdF9ieXRlcyk7CisKKwkJLyogbW92ZSBpdGVtIGhl
YWRlcnMgdG8gbWFrZSBzcGFjZSBmb3IgbmV3IGl0ZW1zICovCisJCW1lbW1vdmUodG9faWggLSBv
bGRfaXRlbXMgKyAxIC0gbmV3X2l0ZW1zLAorCQkJdG9faWggLSBvbGRfaXRlbXMgKyAxLAorCQkJ
c2l6ZW9mKGl0ZW1faGVhZGVyNDApICogb2xkX2l0ZW1zKTsKKwkJdG9faWggLT0gKG5ld19pdGVt
cyAtIDEpOworCisJCW5oNDBfc2V0X2ZyZWVfc3BhY2Vfc3RhcnQobmgsCisJCQkJCSAgZnJlZV9z
cGFjZV9zdGFydCArCisJCQkJCSAgc2hpZnQtPnNoaWZ0X2J5dGVzKTsKKwkJbmg0MF9zZXRfZnJl
ZV9zcGFjZShuaCwKKwkJCQkgICAgbmg0MF9nZXRfZnJlZV9zcGFjZShuaCkgLQorCQkJCSAgICAo
c2hpZnQtPnNoaWZ0X2J5dGVzICsKKwkJCQkgICAgIHNpemVvZihpdGVtX2hlYWRlcjQwKSAqIG5l
d19pdGVtcykpOworCisJCS8qIHVwZGF0ZSBub2RlIGhlYWRlciAqLworCQlub2RlNDBfc2V0X251
bV9pdGVtcyhzaGlmdC0+dGFyZ2V0LCBuaCwgb2xkX2l0ZW1zICsgbmV3X2l0ZW1zKTsKKwkJYXNz
ZXJ0KCJ2cy0xNzAiLAorCQkgICAgICAgbmg0MF9nZXRfZnJlZV9zcGFjZShuaCkgPCB6bm9kZV9z
aXplKHNoaWZ0LT50YXJnZXQpKTsKKworCQlpZiAoc2hpZnQtPm1lcmdpbmdfdW5pdHMpIHsKKwkJ
CWNvb3JkX2FkZF9pdGVtX3BvcygmdG8sIG5ld19pdGVtcyk7CisJCQl0by51bml0X3BvcyA9IDA7
CisJCQl0by5iZXR3ZWVuID0gQVRfVU5JVDsKKwkJCS8qIHByZXBlbmQgZmlyc3QgaXRlbSBvZiBA
dG8gKi8KKwkJCWNvcHlfdW5pdHMoJnRvLCAmZnJvbSwKKwkJCQkgICBjb29yZF9sYXN0X3VuaXRf
cG9zKCZmcm9tKSAtCisJCQkJICAgc2hpZnQtPm1lcmdpbmdfdW5pdHMgKyAxLAorCQkJCSAgIHNo
aWZ0LT5tZXJnaW5nX3VuaXRzLCBTSElGVF9SSUdIVCwKKwkJCQkgICBzaGlmdC0+bWVyZ2luZ19i
eXRlcyk7CisJCQljb29yZF9kZWNfaXRlbV9wb3MoJmZyb20pOworCQkJZnJvbV9paCsrOworCQl9
CisKKwkJaWYgKHNoaWZ0LT5lbnRpcmUpIHsKKwkJCS8qIGNvcHkgQGVudGlyZSBpdGVtcyBlbnRp
cmVseSAqLworCisJCQkvKiBjb3B5IGl0ZW0gaGVhZGVycyAqLworCQkJbWVtY3B5KHRvX2loLCBm
cm9tX2loLAorCQkJICAgICAgIHNoaWZ0LT5lbnRpcmUgKiBzaXplb2YoaXRlbV9oZWFkZXI0MCkp
OworCisJCQkvKiB1cGRhdGUgaXRlbSBoZWFkZXIgb2Zmc2V0ICovCisJCQlvbGRfb2Zmc2V0ID0K
KwkJCSAgICBpaDQwX2dldF9vZmZzZXQoZnJvbV9paCArIHNoaWZ0LT5lbnRpcmUgLSAxKTsKKwkJ
CS8qIEFVRElUOiBvbGRfb2Zmc2V0ICsgc2l6ZW9mIChub2RlNDBfaGVhZGVyKSArIHNoaWZ0LT5w
YXJ0X2J5dGVzIGNhbGN1bGF0aW9uIGNhbiBiZSB0YWtlbiBvZmYgdGhlIGxvb3AuICovCisJCQlm
b3IgKGkgPSAwOyBpIDwgc2hpZnQtPmVudGlyZTsgaSsrLCB0b19paCsrLCBmcm9tX2loKyspCisJ
CQkJaWg0MF9zZXRfb2Zmc2V0KHRvX2loLAorCQkJCQkJaWg0MF9nZXRfb2Zmc2V0KGZyb21faWgp
IC0KKwkJCQkJCW9sZF9vZmZzZXQgKworCQkJCQkJbm9kZV9oZWFkZXJfc2l6ZSArCisJCQkJCQlz
aGlmdC0+cGFydF9ieXRlcyk7CisJCQkvKiBjb3B5IGl0ZW0gYm9kaWVzICovCisJCQljb29yZF9h
ZGRfaXRlbV9wb3MoJmZyb20sIC0oaW50KShzaGlmdC0+ZW50aXJlIC0gMSkpOworCQkJbWVtY3B5
KHpkYXRhKHRvLm5vZGUpICsgbm9kZV9oZWFkZXJfc2l6ZSArCisJCQkgICAgICAgc2hpZnQtPnBh
cnRfYnl0ZXMsIGl0ZW1fYnlfY29vcmRfbm9kZTQwKCZmcm9tKSwKKwkJCSAgICAgICBzaGlmdC0+
ZW50aXJlX2J5dGVzKTsKKwkJCWNvb3JkX2RlY19pdGVtX3BvcygmZnJvbSk7CisJCX0KKworCQlp
ZiAoc2hpZnQtPnBhcnRfdW5pdHMpIHsKKwkJCWNvb3JkX3NldF9pdGVtX3BvcygmdG8sIDApOwor
CQkJdG8udW5pdF9wb3MgPSAwOworCQkJdG8uYmV0d2VlbiA9IEFUX1VOSVQ7CisJCQkvKiBjb3B5
IGhlYWRpbmcgcGFydCAoQHBhcnQgdW5pdHMpIG9mIEBzb3VyY2UgaXRlbSBhcworCQkJICAgYSBu
ZXcgaXRlbSBpbnRvIEB0YXJnZXQtPm5vZGUgKi8KKworCQkJLyogY29weSBpdGVtIGhlYWRlciBv
ZiBwYXJ0aWFsbHkgY29waWVkIGl0ZW0gKi8KKwkJCW1lbWNweSh0b19paCwgZnJvbV9paCwgc2l6
ZW9mKGl0ZW1faGVhZGVyNDApKTsKKwkJCWloNDBfc2V0X29mZnNldCh0b19paCwgbm9kZV9oZWFk
ZXJfc2l6ZSk7CisJCQlpZiAoaXRlbV9wbHVnaW5fYnlfY29vcmQoJnRvKS0+Yi5pbml0KQorCQkJ
CWl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZ0byktPmIuaW5pdCgmdG8sICZmcm9tLAorCQkJCQkJCQkg
IE5VTEwpOworCQkJY29weV91bml0cygmdG8sICZmcm9tLAorCQkJCSAgIGNvb3JkX2xhc3RfdW5p
dF9wb3MoJmZyb20pIC0KKwkJCQkgICBzaGlmdC0+cGFydF91bml0cyArIDEsIHNoaWZ0LT5wYXJ0
X3VuaXRzLAorCQkJCSAgIFNISUZUX1JJR0hULCBzaGlmdC0+cGFydF9ieXRlcyk7CisJCX0KKwl9
Cit9CisKKy8qIHJlbW92ZSBldmVyeXRoaW5nIGVpdGhlciBiZWZvcmUgb3IgYWZ0ZXIgQGZhY3Rf
c3RvcC4gTnVtYmVyIG9mIGl0ZW1zCisgICByZW1vdmVkIGNvbXBsZXRlbHkgaXMgcmV0dXJuZWQg
Ki8KK3N0YXRpYyBpbnQgZGVsZXRlX2NvcGllZChzdHJ1Y3Qgc2hpZnRfcGFyYW1zICpzaGlmdCkK
K3sKKwljb29yZF90IGZyb207CisJY29vcmRfdCB0bzsKKwlzdHJ1Y3QgY2FycnlfY3V0X2RhdGEg
Y2RhdGE7CisKKwlpZiAoc2hpZnQtPnBlbmQgPT0gU0hJRlRfTEVGVCkgeworCQkvKiB3ZSB3ZXJl
IHNoaWZ0aW5nIHRvIGxlZnQsIHJlbW92ZSBldmVyeXRoaW5nIGZyb20gdGhlCisJCSAgIGJlZ2lu
bmluZyBvZiBAc2hpZnQtPndpc2hfc3RvcC0+bm9kZSB1cHRvCisJCSAgIEBzaGlmdC0+d2lzaF9z
dG9wICovCisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmZnJvbSwgc2hpZnQtPnJlYWxfc3RvcC5u
b2RlKTsKKwkJdG8gPSBzaGlmdC0+cmVhbF9zdG9wOworCisJCS8qIHN0b3JlIG9sZCBjb29yZGlu
YXRlIG9mIHVuaXQgd2hpY2ggd2lsbCBiZSBmaXJzdCBhZnRlcgorCQkgICBzaGlmdCB0byBsZWZ0
ICovCisJCXNoaWZ0LT51LmZ1dHVyZV9maXJzdCA9IHRvOworCQljb29yZF9uZXh0X3VuaXQoJnNo
aWZ0LT51LmZ1dHVyZV9maXJzdCk7CisJfSBlbHNlIHsKKwkJLyogd2Ugd2VyZSBzaGlmdGluZyB0
byByaWdodCwgcmVtb3ZlIGV2ZXJ5dGhpbmcgZnJvbQorCQkgICBAc2hpZnQtPnN0b3BfY29vcmQg
dXB0byB0byBlbmQgb2YKKwkJICAgQHNoaWZ0LT5zdG9wX2Nvb3JkLT5ub2RlICovCisJCWZyb20g
PSBzaGlmdC0+cmVhbF9zdG9wOworCQljb29yZF9pbml0X2xhc3RfdW5pdCgmdG8sIGZyb20ubm9k
ZSk7CisKKwkJLyogc3RvcmUgb2xkIGNvb3JkaW5hdGUgb2YgdW5pdCB3aGljaCB3aWxsIGJlIGxh
c3QgYWZ0ZXIKKwkJICAgc2hpZnQgdG8gcmlnaHQgKi8KKwkJc2hpZnQtPnUuZnV0dXJlX2xhc3Qg
PSBmcm9tOworCQljb29yZF9wcmV2X3VuaXQoJnNoaWZ0LT51LmZ1dHVyZV9sYXN0KTsKKwl9CisK
KwljZGF0YS5wYXJhbXMuZnJvbSA9ICZmcm9tOworCWNkYXRhLnBhcmFtcy50byA9ICZ0bzsKKwlj
ZGF0YS5wYXJhbXMuZnJvbV9rZXkgPSBOVUxMOworCWNkYXRhLnBhcmFtcy50b19rZXkgPSBOVUxM
OworCWNkYXRhLnBhcmFtcy5zbWFsbGVzdF9yZW1vdmVkID0gTlVMTDsKKwlyZXR1cm4gY3V0X25v
ZGU0MCgmY2RhdGEsIE5VTEwpOworfQorCisvKiBzb21ldGhpbmcgd2FzIG1vdmVkIGJldHdlZW4g
QGxlZnQgYW5kIEByaWdodC4gQWRkIGNhcnJ5IG9wZXJhdGlvbiB0byBAaW5mbworICAgbGlzdCB0
byBoYXZlIGNhcnJ5IHRvIHVwZGF0ZSBkZWxpbWl0aW5nIGtleSBiZXR3ZWVuIHRoZW0gKi8KK3N0
YXRpYyBpbnQKK3ByZXBhcmVfZm9yX3VwZGF0ZSh6bm9kZSAqIGxlZnQsIHpub2RlICogcmlnaHQs
IGNhcnJ5X3BsdWdpbl9pbmZvICogaW5mbykKK3sKKwljYXJyeV9vcCAqb3A7CisJY2Fycnlfbm9k
ZSAqY247CisKKwlpZiAoaW5mbyA9PSBOVUxMKQorCQkvKiBub3doZXJlIHRvIHNlbmQgb3BlcmF0
aW9uIHRvLiAqLworCQlyZXR1cm4gMDsKKworCWlmICghc2hvdWxkX25vdGlmeV9wYXJlbnQocmln
aHQpKQorCQlyZXR1cm4gMDsKKworCW9wID0gbm9kZV9wb3N0X2NhcnJ5KGluZm8sIENPUF9VUERB
VEUsIHJpZ2h0LCAxKTsKKwlpZiAoSVNfRVJSKG9wKSB8fCBvcCA9PSBOVUxMKQorCQlyZXR1cm4g
b3AgPyBQVFJfRVJSKG9wKSA6IC1FSU87CisKKwlpZiAobGVmdCAhPSBOVUxMKSB7CisJCWNhcnJ5
X25vZGUgKnJlZmVyZW5jZTsKKworCQlpZiAoaW5mby0+ZG9pbmcpCisJCQlyZWZlcmVuY2UgPSBp
bnNlcnRfY2Fycnlfbm9kZShpbmZvLT5kb2luZywKKwkJCQkJCSAgICAgIGluZm8tPnRvZG8sIGxl
ZnQpOworCQllbHNlCisJCQlyZWZlcmVuY2UgPSBvcC0+bm9kZTsKKwkJYXNzZXJ0KCJuaWtpdGEt
Mjk5MiIsIHJlZmVyZW5jZSAhPSBOVUxMKTsKKwkJY24gPSByZWlzZXI0X2FkZF9jYXJyeShpbmZv
LT50b2RvLCBQT09MT19CRUZPUkUsIHJlZmVyZW5jZSk7CisJCWlmIChJU19FUlIoY24pKQorCQkJ
cmV0dXJuIFBUUl9FUlIoY24pOworCQljbi0+cGFyZW50ID0gMTsKKwkJY24tPm5vZGUgPSBsZWZ0
OworCQlpZiAoWkZfSVNTRVQobGVmdCwgSk5PREVfT1JQSEFOKSkKKwkJCWNuLT5sZWZ0X2JlZm9y
ZSA9IDE7CisJCW9wLT51LnVwZGF0ZS5sZWZ0ID0gY247CisJfSBlbHNlCisJCW9wLT51LnVwZGF0
ZS5sZWZ0ID0gTlVMTDsKKwlyZXR1cm4gMDsKK30KKworLyogcGx1Z2luLT51Lm5vZGUucHJlcGFy
ZV9yZW1vdmFsCisgICB0byBkZWxldGUgYSBwb2ludGVyIHRvIEBlbXB0eSBmcm9tIHRoZSB0cmVl
IGFkZCBjb3JyZXNwb25kaW5nIGNhcnJ5CisgICBvcGVyYXRpb24gKGRlbGV0ZSkgdG8gQGluZm8g
bGlzdCAqLworaW50IHByZXBhcmVfcmVtb3ZhbF9ub2RlNDAoem5vZGUgKiBlbXB0eSwgY2Fycnlf
cGx1Z2luX2luZm8gKiBpbmZvKQoreworCWNhcnJ5X29wICpvcDsKKwlyZWlzZXI0X3RyZWUgKnRy
ZWU7CisKKwlpZiAoIXNob3VsZF9ub3RpZnlfcGFyZW50KGVtcHR5KSkKKwkJcmV0dXJuIDA7CisJ
LyogYWxyZWFkeSBvbiBhIHJvYWQgdG8gU3R5eCAqLworCWlmIChaRl9JU1NFVChlbXB0eSwgSk5P
REVfSEVBUkRfQkFOU0hFRSkpCisJCXJldHVybiAwOworCW9wID0gbm9kZV9wb3N0X2NhcnJ5KGlu
Zm8sIENPUF9ERUxFVEUsIGVtcHR5LCAxKTsKKwlpZiAoSVNfRVJSKG9wKSB8fCBvcCA9PSBOVUxM
KQorCQlyZXR1cm4gUkVURVJSKG9wID8gUFRSX0VSUihvcCkgOiAtRUlPKTsKKworCW9wLT51LmRl
bGV0ZS5jaGlsZCA9IE5VTEw7CisJb3AtPnUuZGVsZXRlLmZsYWdzID0gMDsKKworCS8qIGZhcmUg
dGhlZSB3ZWxsICovCisJdHJlZSA9IHpub2RlX2dldF90cmVlKGVtcHR5KTsKKwlyZWFkX2xvY2tf
dHJlZSh0cmVlKTsKKwl3cml0ZV9sb2NrX2RrKHRyZWUpOworCXpub2RlX3NldF9sZF9rZXkoZW1w
dHksIHpub2RlX2dldF9yZF9rZXkoZW1wdHkpKTsKKwlpZiAoem5vZGVfaXNfbGVmdF9jb25uZWN0
ZWQoZW1wdHkpICYmIGVtcHR5LT5sZWZ0KQorCQl6bm9kZV9zZXRfcmRfa2V5KGVtcHR5LT5sZWZ0
LCB6bm9kZV9nZXRfcmRfa2V5KGVtcHR5KSk7CisJd3JpdGVfdW5sb2NrX2RrKHRyZWUpOworCXJl
YWRfdW5sb2NrX3RyZWUodHJlZSk7CisKKwlaRl9TRVQoZW1wdHksIEpOT0RFX0hFQVJEX0JBTlNI
RUUpOworCXJldHVybiAwOworfQorCisvKiBzb21ldGhpbmcgd2VyZSBzaGlmdGVkIGZyb20gQGlu
c2VydF9jb29yZC0+bm9kZSB0byBAc2hpZnQtPnRhcmdldCwgdXBkYXRlCisgICBAaW5zZXJ0X2Nv
b3JkIGNvcnJlc3BvbmRpbmdseSAqLworc3RhdGljIHZvaWQKK2FkanVzdF9jb29yZChjb29yZF90
ICogaW5zZXJ0X2Nvb3JkLCBzdHJ1Y3Qgc2hpZnRfcGFyYW1zICpzaGlmdCwgaW50IHJlbW92ZWQs
CisJICAgICBpbnQgaW5jbHVkaW5nX2luc2VydF9jb29yZCkKK3sKKwkvKiBpdGVtIHBsdWdpbiB3
YXMgaW52YWxpZGF0ZWQgYnkgc2hpZnRpbmcgKi8KKwljb29yZF9jbGVhcl9pcGx1ZyhpbnNlcnRf
Y29vcmQpOworCisJaWYgKG5vZGVfaXNfZW1wdHkoc2hpZnQtPndpc2hfc3RvcC5ub2RlKSkgewor
CQlhc3NlcnQoInZzLTI0MiIsIHNoaWZ0LT5ldmVyeXRoaW5nKTsKKwkJaWYgKGluY2x1ZGluZ19p
bnNlcnRfY29vcmQpIHsKKwkJCWlmIChzaGlmdC0+cGVuZCA9PSBTSElGVF9SSUdIVCkgeworCQkJ
CS8qIHNldCBAaW5zZXJ0X2Nvb3JkIGJlZm9yZSBmaXJzdCB1bml0IG9mCisJCQkJICAgQHNoaWZ0
LT50YXJnZXQgbm9kZSAqLworCQkJCWNvb3JkX2luaXRfYmVmb3JlX2ZpcnN0X2l0ZW0oaW5zZXJ0
X2Nvb3JkLAorCQkJCQkJCSAgICAgc2hpZnQtPnRhcmdldCk7CisJCQl9IGVsc2UgeworCQkJCS8q
IHNldCBAaW5zZXJ0X2Nvb3JkIGFmdGVyIGxhc3QgaW4gdGFyZ2V0IG5vZGUgKi8KKwkJCQljb29y
ZF9pbml0X2FmdGVyX2xhc3RfaXRlbShpbnNlcnRfY29vcmQsCisJCQkJCQkJICAgc2hpZnQtPnRh
cmdldCk7CisJCQl9CisJCX0gZWxzZSB7CisJCQkvKiBzZXQgQGluc2VydF9jb29yZCBpbnNpZGUg
b2YgZW1wdHkgbm9kZS4gVGhlcmUgaXMKKwkJCSAgIG9ubHkgb25lIHBvc3NpYmxlIGNvb3JkIHdp
dGhpbiBhbiBlbXB0eQorCQkJICAgbm9kZS4gaW5pdF9maXJzdF91bml0IHdpbGwgc2V0IHRoYXQg
Y29vcmQgKi8KKwkJCWNvb3JkX2luaXRfZmlyc3RfdW5pdChpbnNlcnRfY29vcmQsCisJCQkJCSAg
ICAgIHNoaWZ0LT53aXNoX3N0b3Aubm9kZSk7CisJCX0KKwkJcmV0dXJuOworCX0KKworCWlmIChz
aGlmdC0+cGVuZCA9PSBTSElGVF9SSUdIVCkgeworCQkvKiB0aGVyZSB3YXMgc2hpZnRpbmcgdG8g
cmlnaHQgKi8KKwkJaWYgKHNoaWZ0LT5ldmVyeXRoaW5nKSB7CisJCQkvKiBldmVyeXRoaW5nIHdh
bnRlZCB3YXMgc2hpZnRlZCAqLworCQkJaWYgKGluY2x1ZGluZ19pbnNlcnRfY29vcmQpIHsKKwkJ
CQkvKiBAaW5zZXJ0X2Nvb3JkIGlzIHNldCBiZWZvcmUgZmlyc3QgdW5pdCBvZgorCQkJCSAgIEB0
byBub2RlICovCisJCQkJY29vcmRfaW5pdF9iZWZvcmVfZmlyc3RfaXRlbShpbnNlcnRfY29vcmQs
CisJCQkJCQkJICAgICBzaGlmdC0+dGFyZ2V0KTsKKwkJCQlpbnNlcnRfY29vcmQtPmJldHdlZW4g
PSBCRUZPUkVfVU5JVDsKKwkJCX0gZWxzZSB7CisJCQkJLyogQGluc2VydF9jb29yZCBpcyBzZXQg
YWZ0ZXIgbGFzdCB1bml0IG9mCisJCQkJICAgQGluc2VydC0+bm9kZSAqLworCQkJCWNvb3JkX2lu
aXRfbGFzdF91bml0KGluc2VydF9jb29yZCwKKwkJCQkJCSAgICAgc2hpZnQtPndpc2hfc3RvcC5u
b2RlKTsKKwkJCQlpbnNlcnRfY29vcmQtPmJldHdlZW4gPSBBRlRFUl9VTklUOworCQkJfQorCQl9
CisJCXJldHVybjsKKwl9CisKKwkvKiB0aGVyZSB3YXMgc2hpZnRpbmcgdG8gbGVmdCAqLworCWlm
IChzaGlmdC0+ZXZlcnl0aGluZykgeworCQkvKiBldmVyeXRoaW5nIHdhbnRlZCB3YXMgc2hpZnRl
ZCAqLworCQlpZiAoaW5jbHVkaW5nX2luc2VydF9jb29yZCkgeworCQkJLyogQGluc2VydF9jb29y
ZCBpcyBzZXQgYWZ0ZXIgbGFzdCB1bml0IGluIEB0byBub2RlICovCisJCQljb29yZF9pbml0X2Fm
dGVyX2xhc3RfaXRlbShpbnNlcnRfY29vcmQsIHNoaWZ0LT50YXJnZXQpOworCQl9IGVsc2Ugewor
CQkJLyogQGluc2VydF9jb29yZCBpcyBzZXQgYmVmb3JlIGZpcnN0IHVuaXQgaW4gdGhlIHNhbWUK
KwkJCSAgIG5vZGUgKi8KKwkJCWNvb3JkX2luaXRfYmVmb3JlX2ZpcnN0X2l0ZW0oaW5zZXJ0X2Nv
b3JkLAorCQkJCQkJICAgICBzaGlmdC0+d2lzaF9zdG9wLm5vZGUpOworCQl9CisJCXJldHVybjsK
Kwl9CisKKwkvKiBGSVhNRS1WUzogdGhlIGNvZGUgYmVsb3cgaXMgY29tcGxpY2F0ZWQgYmVjYXVz
ZSB3aXRoIGJldHdlZW4gPT0KKwkgICBBRlRFUl9JVEVNIHVuaXRfcG9zIGlzIHNldCB0byAwICov
CisKKwlpZiAoIXJlbW92ZWQpIHsKKwkJLyogbm8gaXRlbXMgd2VyZSBzaGlmdGVkIGVudGlyZWx5
ICovCisJCWFzc2VydCgidnMtMTk1Iiwgc2hpZnQtPm1lcmdpbmdfdW5pdHMgPT0gMAorCQkgICAg
ICAgfHwgc2hpZnQtPnBhcnRfdW5pdHMgPT0gMCk7CisKKwkJaWYgKHNoaWZ0LT5yZWFsX3N0b3Au
aXRlbV9wb3MgPT0gaW5zZXJ0X2Nvb3JkLT5pdGVtX3BvcykgeworCQkJaWYgKHNoaWZ0LT5tZXJn
aW5nX3VuaXRzKSB7CisJCQkJaWYgKGluc2VydF9jb29yZC0+YmV0d2VlbiA9PSBBRlRFUl9VTklU
KSB7CisJCQkJCWFzc2VydCgibmlraXRhLTE0NDEiLAorCQkJCQkgICAgICAgaW5zZXJ0X2Nvb3Jk
LT51bml0X3BvcyA+PQorCQkJCQkgICAgICAgc2hpZnQtPm1lcmdpbmdfdW5pdHMpOworCQkJCQlp
bnNlcnRfY29vcmQtPnVuaXRfcG9zIC09CisJCQkJCSAgICBzaGlmdC0+bWVyZ2luZ191bml0czsK
KwkJCQl9IGVsc2UgaWYgKGluc2VydF9jb29yZC0+YmV0d2VlbiA9PSBCRUZPUkVfVU5JVCkgewor
CQkJCQlhc3NlcnQoIm5pa2l0YS0yMDkwIiwKKwkJCQkJICAgICAgIGluc2VydF9jb29yZC0+dW5p
dF9wb3MgPgorCQkJCQkgICAgICAgc2hpZnQtPm1lcmdpbmdfdW5pdHMpOworCQkJCQlpbnNlcnRf
Y29vcmQtPnVuaXRfcG9zIC09CisJCQkJCSAgICBzaGlmdC0+bWVyZ2luZ191bml0czsKKwkJCQl9
CisKKwkJCQlhc3NlcnQoIm5pa2l0YS0yMDgzIiwKKwkJCQkgICAgICAgaW5zZXJ0X2Nvb3JkLT51
bml0X3BvcyArIDEpOworCQkJfSBlbHNlIHsKKwkJCQlpZiAoaW5zZXJ0X2Nvb3JkLT5iZXR3ZWVu
ID09IEFGVEVSX1VOSVQpIHsKKwkJCQkJYXNzZXJ0KCJuaWtpdGEtMTQ0MiIsCisJCQkJCSAgICAg
ICBpbnNlcnRfY29vcmQtPnVuaXRfcG9zID49CisJCQkJCSAgICAgICBzaGlmdC0+cGFydF91bml0
cyk7CisJCQkJCWluc2VydF9jb29yZC0+dW5pdF9wb3MgLT0KKwkJCQkJICAgIHNoaWZ0LT5wYXJ0
X3VuaXRzOworCQkJCX0gZWxzZSBpZiAoaW5zZXJ0X2Nvb3JkLT5iZXR3ZWVuID09IEJFRk9SRV9V
TklUKSB7CisJCQkJCWFzc2VydCgibmlraXRhLTIwODkiLAorCQkJCQkgICAgICAgaW5zZXJ0X2Nv
b3JkLT51bml0X3BvcyA+CisJCQkJCSAgICAgICBzaGlmdC0+cGFydF91bml0cyk7CisJCQkJCWlu
c2VydF9jb29yZC0+dW5pdF9wb3MgLT0KKwkJCQkJICAgIHNoaWZ0LT5wYXJ0X3VuaXRzOworCQkJ
CX0KKworCQkJCWFzc2VydCgibmlraXRhLTIwODQiLAorCQkJCSAgICAgICBpbnNlcnRfY29vcmQt
PnVuaXRfcG9zICsgMSk7CisJCQl9CisJCX0KKwkJcmV0dXJuOworCX0KKworCS8qIHdlIHNoaWZ0
ZWQgdG8gbGVmdCBhbmQgdGhlcmUgd2FzIG5vIGVub3VnaCBzcGFjZSBmb3IgZXZlcnl0aGluZyAq
LworCXN3aXRjaCAoaW5zZXJ0X2Nvb3JkLT5iZXR3ZWVuKSB7CisJY2FzZSBBRlRFUl9VTklUOgor
CWNhc2UgQkVGT1JFX1VOSVQ6CisJCWlmIChzaGlmdC0+cmVhbF9zdG9wLml0ZW1fcG9zID09IGlu
c2VydF9jb29yZC0+aXRlbV9wb3MpCisJCQlpbnNlcnRfY29vcmQtPnVuaXRfcG9zIC09IHNoaWZ0
LT5wYXJ0X3VuaXRzOworCQkvKiBmYWxsIHRocm91Z2ggKi8KKwljYXNlIEFGVEVSX0lURU06CisJ
CWNvb3JkX2FkZF9pdGVtX3BvcyhpbnNlcnRfY29vcmQsIC1yZW1vdmVkKTsKKwkJYnJlYWs7CisJ
ZGVmYXVsdDoKKwkJaW1wb3NzaWJsZSgibmlraXRhLTIwODciLCAibm90IHJlYWR5Iik7CisJfQor
CWFzc2VydCgibmlraXRhLTIwODUiLCBpbnNlcnRfY29vcmQtPnVuaXRfcG9zICsgMSk7Cit9CisK
K3N0YXRpYyBpbnQgY2FsbF9zaGlmdF9ob29rcyhzdHJ1Y3Qgc2hpZnRfcGFyYW1zICpzaGlmdCkK
K3sKKwl1bnNpZ25lZCBpLCBzaGlmdGVkOworCWNvb3JkX3QgY29vcmQ7CisJaXRlbV9wbHVnaW4g
KmlwbHVnOworCisJYXNzZXJ0KCJ2cy0yNzUiLCAhbm9kZV9pc19lbXB0eShzaGlmdC0+dGFyZ2V0
KSk7CisKKwkvKiBudW1iZXIgb2YgaXRlbXMgc2hpZnQgdG91Y2hlcyAqLworCXNoaWZ0ZWQgPQor
CSAgICBzaGlmdC0+ZW50aXJlICsgKHNoaWZ0LT5tZXJnaW5nX3VuaXRzID8gMSA6IDApICsKKwkg
ICAgKHNoaWZ0LT5wYXJ0X3VuaXRzID8gMSA6IDApOworCisJaWYgKHNoaWZ0LT5wZW5kID09IFNI
SUZUX0xFRlQpIHsKKwkJLyogbW92ZWQgaXRlbXMgYXJlIGF0IHRoZSBlbmQgKi8KKwkJY29vcmRf
aW5pdF9sYXN0X3VuaXQoJmNvb3JkLCBzaGlmdC0+dGFyZ2V0KTsKKwkJY29vcmQudW5pdF9wb3Mg
PSAwOworCisJCWFzc2VydCgidnMtMjc5Iiwgc2hpZnQtPnBlbmQgPT0gMSk7CisJCWZvciAoaSA9
IDA7IGkgPCBzaGlmdGVkOyBpKyspIHsKKwkJCXVuc2lnbmVkIGZyb20sIGNvdW50OworCisJCQlp
cGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZjb29yZCk7CisJCQlpZiAoaSA9PSAwICYmIHNo
aWZ0LT5wYXJ0X3VuaXRzKSB7CisJCQkJYXNzZXJ0KCJ2cy0yNzciLAorCQkJCSAgICAgICBjb29y
ZF9udW1fdW5pdHMoJmNvb3JkKSA9PQorCQkJCSAgICAgICBzaGlmdC0+cGFydF91bml0cyk7CisJ
CQkJY291bnQgPSBzaGlmdC0+cGFydF91bml0czsKKwkJCQlmcm9tID0gMDsKKwkJCX0gZWxzZSBp
ZiAoaSA9PSBzaGlmdGVkIC0gMSAmJiBzaGlmdC0+bWVyZ2luZ191bml0cykgeworCQkJCWNvdW50
ID0gc2hpZnQtPm1lcmdpbmdfdW5pdHM7CisJCQkJZnJvbSA9IGNvb3JkX251bV91bml0cygmY29v
cmQpIC0gY291bnQ7CisJCQl9IGVsc2UgeworCQkJCWNvdW50ID0gY29vcmRfbnVtX3VuaXRzKCZj
b29yZCk7CisJCQkJZnJvbSA9IDA7CisJCQl9CisKKwkJCWlmIChpcGx1Zy0+Yi5zaGlmdF9ob29r
KSB7CisJCQkJaXBsdWctPmIuc2hpZnRfaG9vaygmY29vcmQsIGZyb20sIGNvdW50LAorCQkJCQkJ
ICAgIHNoaWZ0LT53aXNoX3N0b3Aubm9kZSk7CisJCQl9CisJCQljb29yZF9hZGRfaXRlbV9wb3Mo
JmNvb3JkLCAtc2hpZnQtPnBlbmQpOworCQl9CisJfSBlbHNlIHsKKwkJLyogbW92ZWQgaXRlbXMg
YXJlIGF0IHRoZSBiZWdpbm5pbmcgKi8KKwkJY29vcmRfaW5pdF9maXJzdF91bml0KCZjb29yZCwg
c2hpZnQtPnRhcmdldCk7CisKKwkJYXNzZXJ0KCJ2cy0yNzgiLCBzaGlmdC0+cGVuZCA9PSAtMSk7
CisJCWZvciAoaSA9IDA7IGkgPCBzaGlmdGVkOyBpKyspIHsKKwkJCXVuc2lnbmVkIGZyb20sIGNv
dW50OworCisJCQlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKCZjb29yZCk7CisJCQlpZiAo
aSA9PSAwICYmIHNoaWZ0LT5wYXJ0X3VuaXRzKSB7CisJCQkJYXNzZXJ0KCJ2cy0yNzciLAorCQkJ
CSAgICAgICBjb29yZF9udW1fdW5pdHMoJmNvb3JkKSA9PQorCQkJCSAgICAgICBzaGlmdC0+cGFy
dF91bml0cyk7CisJCQkJY291bnQgPSBjb29yZF9udW1fdW5pdHMoJmNvb3JkKTsKKwkJCQlmcm9t
ID0gMDsKKwkJCX0gZWxzZSBpZiAoaSA9PSBzaGlmdGVkIC0gMSAmJiBzaGlmdC0+bWVyZ2luZ191
bml0cykgeworCQkJCWNvdW50ID0gc2hpZnQtPm1lcmdpbmdfdW5pdHM7CisJCQkJZnJvbSA9IDA7
CisJCQl9IGVsc2UgeworCQkJCWNvdW50ID0gY29vcmRfbnVtX3VuaXRzKCZjb29yZCk7CisJCQkJ
ZnJvbSA9IDA7CisJCQl9CisKKwkJCWlmIChpcGx1Zy0+Yi5zaGlmdF9ob29rKSB7CisJCQkJaXBs
dWctPmIuc2hpZnRfaG9vaygmY29vcmQsIGZyb20sIGNvdW50LAorCQkJCQkJICAgIHNoaWZ0LT53
aXNoX3N0b3Aubm9kZSk7CisJCQl9CisJCQljb29yZF9hZGRfaXRlbV9wb3MoJmNvb3JkLCAtc2hp
ZnQtPnBlbmQpOworCQl9CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIHNoaWZ0IHRvIGxlZnQg
aXMgY29tcGxldGVkLiBSZXR1cm4gMSBpZiB1bml0IEBvbGQgd2FzIG1vdmVkIHRvIGxlZnQgbmVp
Z2hib3IgKi8KK3N0YXRpYyBpbnQKK3VuaXRfbW92ZWRfbGVmdChjb25zdCBzdHJ1Y3Qgc2hpZnRf
cGFyYW1zICpzaGlmdCwgY29uc3QgY29vcmRfdCAqIG9sZCkKK3sKKwlhc3NlcnQoInZzLTk0NCIs
IHNoaWZ0LT5yZWFsX3N0b3Aubm9kZSA9PSBvbGQtPm5vZGUpOworCisJaWYgKHNoaWZ0LT5yZWFs
X3N0b3AuaXRlbV9wb3MgPCBvbGQtPml0ZW1fcG9zKQorCQlyZXR1cm4gMDsKKwlpZiAoc2hpZnQt
PnJlYWxfc3RvcC5pdGVtX3BvcyA9PSBvbGQtPml0ZW1fcG9zKSB7CisJCWlmIChzaGlmdC0+cmVh
bF9zdG9wLnVuaXRfcG9zIDwgb2xkLT51bml0X3BvcykKKwkJCXJldHVybiAwOworCX0KKwlyZXR1
cm4gMTsKK30KKworLyogc2hpZnQgdG8gcmlnaHQgaXMgY29tcGxldGVkLiBSZXR1cm4gMSBpZiB1
bml0IEBvbGQgd2FzIG1vdmVkIHRvIHJpZ2h0CisgICBuZWlnaGJvciAqLworc3RhdGljIGludAor
dW5pdF9tb3ZlZF9yaWdodChjb25zdCBzdHJ1Y3Qgc2hpZnRfcGFyYW1zICpzaGlmdCwgY29uc3Qg
Y29vcmRfdCAqIG9sZCkKK3sKKwlhc3NlcnQoInZzLTk0NCIsIHNoaWZ0LT5yZWFsX3N0b3Aubm9k
ZSA9PSBvbGQtPm5vZGUpOworCisJaWYgKHNoaWZ0LT5yZWFsX3N0b3AuaXRlbV9wb3MgPiBvbGQt
Pml0ZW1fcG9zKQorCQlyZXR1cm4gMDsKKwlpZiAoc2hpZnQtPnJlYWxfc3RvcC5pdGVtX3BvcyA9
PSBvbGQtPml0ZW1fcG9zKSB7CisJCWlmIChzaGlmdC0+cmVhbF9zdG9wLnVuaXRfcG9zID4gb2xk
LT51bml0X3BvcykKKwkJCXJldHVybiAwOworCX0KKwlyZXR1cm4gMTsKK30KKworLyogY29vcmQg
QG9sZCB3YXMgc2V0IGluIG5vZGUgZnJvbSB3aGljaCBzaGlmdCB3YXMgcGVyZm9ybWVkLiBXaGF0
IHdhcyBzaGlmdGVkCisgICBpcyBzdG9yZWQgaW4gQHNoaWZ0LiBVcGRhdGUgQG9sZCBjb3JyZXNw
b25kaW5nbHkgdG8gcGVyZm9ybWVkIHNoaWZ0ICovCitzdGF0aWMgY29vcmRfdCAqYWRqdXN0X2Nv
b3JkMihjb25zdCBzdHJ1Y3Qgc2hpZnRfcGFyYW1zICpzaGlmdCwKKwkJCSAgICAgIGNvbnN0IGNv
b3JkX3QgKiBvbGQsIGNvb3JkX3QgKiBuZXcpCit7CisJY29vcmRfY2xlYXJfaXBsdWcobmV3KTsK
KwluZXctPmJldHdlZW4gPSBvbGQtPmJldHdlZW47CisKKwljb29yZF9jbGVhcl9pcGx1ZyhuZXcp
OworCWlmIChvbGQtPm5vZGUgPT0gc2hpZnQtPnRhcmdldCkgeworCQlpZiAoc2hpZnQtPnBlbmQg
PT0gU0hJRlRfTEVGVCkgeworCQkJLyogY29vcmQgd2hpY2ggaXMgc2V0IGluc2lkZSBvZiBsZWZ0
IG5laWdoYm9yIGRvZXMgbm90CisJCQkgICBjaGFuZ2UgZHVyaW5nIHNoaWZ0IHRvIGxlZnQgKi8K
KwkJCWNvb3JkX2R1cChuZXcsIG9sZCk7CisJCQlyZXR1cm4gbmV3OworCQl9CisJCW5ldy0+bm9k
ZSA9IG9sZC0+bm9kZTsKKwkJY29vcmRfc2V0X2l0ZW1fcG9zKG5ldywKKwkJCQkgICBvbGQtPml0
ZW1fcG9zICsgc2hpZnQtPmVudGlyZSArCisJCQkJICAgKHNoaWZ0LT5wYXJ0X3VuaXRzID8gMSA6
IDApKTsKKwkJbmV3LT51bml0X3BvcyA9IG9sZC0+dW5pdF9wb3M7CisJCWlmIChvbGQtPml0ZW1f
cG9zID09IDAgJiYgc2hpZnQtPm1lcmdpbmdfdW5pdHMpCisJCQluZXctPnVuaXRfcG9zICs9IHNo
aWZ0LT5tZXJnaW5nX3VuaXRzOworCQlyZXR1cm4gbmV3OworCX0KKworCWFzc2VydCgidnMtOTc3
Iiwgb2xkLT5ub2RlID09IHNoaWZ0LT53aXNoX3N0b3Aubm9kZSk7CisJaWYgKHNoaWZ0LT5wZW5k
ID09IFNISUZUX0xFRlQpIHsKKwkJaWYgKHVuaXRfbW92ZWRfbGVmdChzaGlmdCwgb2xkKSkgewor
CQkJLyogdW5pdCBAb2xkIG1vdmVkIHRvIGxlZnQgbmVpZ2hib3IuIENhbGN1bGF0ZSBpdHMKKwkJ
CSAgIGNvb3JkaW5hdGUgdGhlcmUgKi8KKwkJCW5ldy0+bm9kZSA9IHNoaWZ0LT50YXJnZXQ7CisJ
CQljb29yZF9zZXRfaXRlbV9wb3MobmV3LAorCQkJCQkgICBub2RlX251bV9pdGVtcyhzaGlmdC0+
dGFyZ2V0KSAtCisJCQkJCSAgIHNoaWZ0LT5lbnRpcmUgLQorCQkJCQkgICAoc2hpZnQtPnBhcnRf
dW5pdHMgPyAxIDogMCkgKworCQkJCQkgICBvbGQtPml0ZW1fcG9zKTsKKworCQkJbmV3LT51bml0
X3BvcyA9IG9sZC0+dW5pdF9wb3M7CisJCQlpZiAoc2hpZnQtPm1lcmdpbmdfdW5pdHMpIHsKKwkJ
CQljb29yZF9kZWNfaXRlbV9wb3MobmV3KTsKKwkJCQlpZiAob2xkLT5pdGVtX3BvcyA9PSAwKSB7
CisJCQkJCS8qIHVuaXRfcG9zIG9ubHkgY2hhbmdlcyBpZiBpdGVtIGdvdAorCQkJCQkgICBtZXJn
ZWQgKi8KKwkJCQkJbmV3LT51bml0X3BvcyA9CisJCQkJCSAgICBjb29yZF9udW1fdW5pdHMobmV3
KSAtCisJCQkJCSAgICAoc2hpZnQtPm1lcmdpbmdfdW5pdHMgLQorCQkJCQkgICAgIG9sZC0+dW5p
dF9wb3MpOworCQkJCX0KKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8qIHVuaXQgQG9sZCBkaWQgbm90
IG1vdmUgdG8gbGVmdCBuZWlnaGJvci4KKworCQkJICAgVXNlIF9ub2NoZWNrLCBiZWNhdXNlIEBv
bGQgaXMgb3V0c2lkZSBvZiBpdHMgbm9kZS4KKwkJCSAqLworCQkJY29vcmRfZHVwX25vY2hlY2so
bmV3LCBvbGQpOworCQkJY29vcmRfYWRkX2l0ZW1fcG9zKG5ldywKKwkJCQkJICAgLXNoaWZ0LT51
LmZ1dHVyZV9maXJzdC5pdGVtX3Bvcyk7CisJCQlpZiAobmV3LT5pdGVtX3BvcyA9PSAwKQorCQkJ
CW5ldy0+dW5pdF9wb3MgLT0gc2hpZnQtPnUuZnV0dXJlX2ZpcnN0LnVuaXRfcG9zOworCQl9CisJ
fSBlbHNlIHsKKwkJaWYgKHVuaXRfbW92ZWRfcmlnaHQoc2hpZnQsIG9sZCkpIHsKKwkJCS8qIHVu
aXQgQG9sZCBtb3ZlZCB0byByaWdodCBuZWlnaGJvciAqLworCQkJbmV3LT5ub2RlID0gc2hpZnQt
PnRhcmdldDsKKwkJCWNvb3JkX3NldF9pdGVtX3BvcyhuZXcsCisJCQkJCSAgIG9sZC0+aXRlbV9w
b3MgLQorCQkJCQkgICBzaGlmdC0+cmVhbF9zdG9wLml0ZW1fcG9zKTsKKwkJCWlmIChuZXctPml0
ZW1fcG9zID09IDApIHsKKwkJCQkvKiB1bml0IEBvbGQgbWlnaHQgY2hhbmdlIHVuaXQgcG9zICov
CisJCQkJY29vcmRfc2V0X2l0ZW1fcG9zKG5ldywKKwkJCQkJCSAgIG9sZC0+dW5pdF9wb3MgLQor
CQkJCQkJICAgc2hpZnQtPnJlYWxfc3RvcC51bml0X3Bvcyk7CisJCQl9CisJCX0gZWxzZSB7CisJ
CQkvKiB1bml0IEBvbGQgZGlkIG5vdCBtb3ZlIHRvIHJpZ2h0IG5laWdoYm9yLCB0aGVyZWZvcmUK
KwkJCSAgIGl0IGRpZCBub3QgY2hhbmdlICovCisJCQljb29yZF9kdXAobmV3LCBvbGQpOworCQl9
CisJfQorCWNvb3JkX3NldF9pcGx1ZyhuZXcsIGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKG5ldykpOwor
CXJldHVybiBuZXc7Cit9CisKKy8qIHRoaXMgaXMgY2FsbGVkIHdoZW4gc2hpZnQgaXMgY29tcGxl
dGVkIChzb21ldGhpbmcgb2Ygc291cmNlIG5vZGUgaXMgY29waWVkCisgICB0byB0YXJnZXQgYW5k
IGRlbGV0ZWQgaW4gc291cmNlKSB0byB1cGRhdGUgYWxsIHRhcHMgc2V0IGluIGN1cnJlbnQKKyAg
IGNvbnRleHQgKi8KK3N0YXRpYyB2b2lkIHVwZGF0ZV90YXBzKGNvbnN0IHN0cnVjdCBzaGlmdF9w
YXJhbXMgKnNoaWZ0KQoreworCXRhcF90ICp0YXA7CisJY29vcmRfdCBuZXc7CisKKwlmb3JfYWxs
X3RhcHModGFwKSB7CisJCS8qIHVwZGF0ZSBvbmx5IHRhcHMgc2V0IHRvIG5vZGVzIHBhcnRpY2lw
YXRpbmcgaW4gc2hpZnQgKi8KKwkJaWYgKHRhcC0+Y29vcmQtPm5vZGUgPT0gc2hpZnQtPndpc2hf
c3RvcC5ub2RlCisJCSAgICB8fCB0YXAtPmNvb3JkLT5ub2RlID09IHNoaWZ0LT50YXJnZXQpCisJ
CQl0YXBfdG9fY29vcmQodGFwLAorCQkJCSAgICAgYWRqdXN0X2Nvb3JkMihzaGlmdCwgdGFwLT5j
b29yZCwgJm5ldykpOworCX0KK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworc3RydWN0IHNoaWZ0
X2NoZWNrIHsKKwlyZWlzZXI0X2tleSBrZXk7CisJX191MTYgcGx1Z2luX2lkOworCXVuaW9uIHsK
KwkJX191NjQgYnl0ZXM7CisJCV9fdTY0IGVudHJpZXM7CisJCXZvaWQgKnVudXNlZDsKKwl9IHU7
Cit9OworCit2b2lkICpzaGlmdF9jaGVja19wcmVwYXJlKGNvbnN0IHpub2RlICogbGVmdCwgY29u
c3Qgem5vZGUgKiByaWdodCkKK3sKKwlwb3NfaW5fbm9kZV90IGksIG5yX2l0ZW1zOworCWludCBt
ZXJnZWFibGU7CisJc3RydWN0IHNoaWZ0X2NoZWNrICpkYXRhOworCWl0ZW1faGVhZGVyNDAgKmlo
OworCisJaWYgKG5vZGVfaXNfZW1wdHkobGVmdCkgfHwgbm9kZV9pc19lbXB0eShyaWdodCkpCisJ
CW1lcmdlYWJsZSA9IDA7CisJZWxzZSB7CisJCWNvb3JkX3QgbCwgcjsKKworCQljb29yZF9pbml0
X2xhc3RfdW5pdCgmbCwgbGVmdCk7CisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmciwgcmlnaHQp
OworCQltZXJnZWFibGUgPSBhcmVfaXRlbXNfbWVyZ2VhYmxlKCZsLCAmcik7CisJfQorCW5yX2l0
ZW1zID0KKwkgICAgbm9kZTQwX251bV9vZl9pdGVtc19pbnRlcm5hbChsZWZ0KSArCisJICAgIG5v
ZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwocmlnaHQpIC0gKG1lcmdlYWJsZSA/IDEgOiAwKTsK
KwlkYXRhID0KKwkJa21hbGxvYyhzaXplb2Yoc3RydWN0IHNoaWZ0X2NoZWNrKSAqIG5yX2l0ZW1z
LAorCQkJcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChkYXRhICE9IE5VTEwpIHsK
KwkJY29vcmRfdCBjb29yZDsKKwkJcG9zX2luX25vZGVfdCBpdGVtX3BvczsKKworCQljb29yZF9p
bml0X2ZpcnN0X3VuaXQoJmNvb3JkLCBsZWZ0KTsKKwkJaSA9IDA7CisKKwkJZm9yIChpdGVtX3Bv
cyA9IDA7CisJCSAgICAgaXRlbV9wb3MgPCBub2RlNDBfbnVtX29mX2l0ZW1zX2ludGVybmFsKGxl
ZnQpOworCQkgICAgIGl0ZW1fcG9zKyspIHsKKworCQkJY29vcmRfc2V0X2l0ZW1fcG9zKCZjb29y
ZCwgaXRlbV9wb3MpOworCQkJaWggPSBub2RlNDBfaWhfYXRfY29vcmQoJmNvb3JkKTsKKworCQkJ
ZGF0YVtpXS5rZXkgPSBpaC0+a2V5OworCQkJZGF0YVtpXS5wbHVnaW5faWQgPSBsZTE2X3RvX2Nw
dShnZXRfdW5hbGlnbmVkKCZpaC0+cGx1Z2luX2lkKSk7CisJCQlzd2l0Y2ggKGRhdGFbaV0ucGx1
Z2luX2lkKSB7CisJCQljYXNlIENUQUlMX0lEOgorCQkJY2FzZSBGT1JNQVRUSU5HX0lEOgorCQkJ
CWRhdGFbaV0udS5ieXRlcyA9IGNvb3JkX251bV91bml0cygmY29vcmQpOworCQkJCWJyZWFrOwor
CQkJY2FzZSBFWFRFTlRfUE9JTlRFUl9JRDoKKwkJCQlkYXRhW2ldLnUuYnl0ZXMgPQorCQkJCQly
ZWlzZXI0X2V4dGVudF9zaXplKCZjb29yZCwKKwkJCQkJCSAgICAgICBjb29yZF9udW1fdW5pdHMo
JmNvb3JkKSk7CisJCQkJYnJlYWs7CisJCQljYXNlIENPTVBPVU5EX0RJUl9JRDoKKwkJCQlkYXRh
W2ldLnUuZW50cmllcyA9IGNvb3JkX251bV91bml0cygmY29vcmQpOworCQkJCWJyZWFrOworCQkJ
ZGVmYXVsdDoKKwkJCQlkYXRhW2ldLnUudW51c2VkID0gTlVMTDsKKwkJCQlicmVhazsKKwkJCX0K
KwkJCWkrKzsKKwkJfQorCisJCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmY29vcmQsIHJpZ2h0KTsK
KworCQlpZiAobWVyZ2VhYmxlKSB7CisJCQlhc3NlcnQoInZzLTE2MDkiLCBpICE9IDApOworCisJ
CQlpaCA9IG5vZGU0MF9paF9hdF9jb29yZCgmY29vcmQpOworCisJCQlhc3NlcnQoInZzLTE1ODki
LAorCQkJICAgICAgIGRhdGFbaSAtIDFdLnBsdWdpbl9pZCA9PQorCQkJICAgICAgIGxlMTZfdG9f
Y3B1KGdldF91bmFsaWduZWQoJmloLT5wbHVnaW5faWQpKSk7CisJCQlzd2l0Y2ggKGRhdGFbaSAt
IDFdLnBsdWdpbl9pZCkgeworCQkJY2FzZSBDVEFJTF9JRDoKKwkJCWNhc2UgRk9STUFUVElOR19J
RDoKKwkJCQlkYXRhW2kgLSAxXS51LmJ5dGVzICs9IGNvb3JkX251bV91bml0cygmY29vcmQpOwor
CQkJCWJyZWFrOworCQkJY2FzZSBFWFRFTlRfUE9JTlRFUl9JRDoKKwkJCQlkYXRhW2kgLSAxXS51
LmJ5dGVzICs9CisJCQkJICAgIHJlaXNlcjRfZXh0ZW50X3NpemUoJmNvb3JkLAorCQkJCQkJY29v
cmRfbnVtX3VuaXRzKCZjb29yZCkpOworCQkJCWJyZWFrOworCQkJY2FzZSBDT01QT1VORF9ESVJf
SUQ6CisJCQkJZGF0YVtpIC0gMV0udS5lbnRyaWVzICs9CisJCQkJICAgIGNvb3JkX251bV91bml0
cygmY29vcmQpOworCQkJCWJyZWFrOworCQkJZGVmYXVsdDoKKwkJCQlpbXBvc3NpYmxlKCJ2cy0x
NjA1IiwgIndyb25nIG1lcmdlYWJsZSBpdGVtIik7CisJCQkJYnJlYWs7CisJCQl9CisJCQlpdGVt
X3BvcyA9IDE7CisJCX0gZWxzZQorCQkJaXRlbV9wb3MgPSAwOworCQlmb3IgKDsgaXRlbV9wb3Mg
PCBub2RlNDBfbnVtX29mX2l0ZW1zX2ludGVybmFsKHJpZ2h0KTsKKwkJICAgICBpdGVtX3Bvcysr
KSB7CisKKwkJCWFzc2VydCgidnMtMTYwNCIsIGkgPCBucl9pdGVtcyk7CisJCQljb29yZF9zZXRf
aXRlbV9wb3MoJmNvb3JkLCBpdGVtX3Bvcyk7CisJCQlpaCA9IG5vZGU0MF9paF9hdF9jb29yZCgm
Y29vcmQpOworCisJCQlkYXRhW2ldLmtleSA9IGloLT5rZXk7CisJCQlkYXRhW2ldLnBsdWdpbl9p
ZCA9IGxlMTZfdG9fY3B1KGdldF91bmFsaWduZWQoJmloLT5wbHVnaW5faWQpKTsKKwkJCXN3aXRj
aCAoZGF0YVtpXS5wbHVnaW5faWQpIHsKKwkJCWNhc2UgQ1RBSUxfSUQ6CisJCQljYXNlIEZPUk1B
VFRJTkdfSUQ6CisJCQkJZGF0YVtpXS51LmJ5dGVzID0gY29vcmRfbnVtX3VuaXRzKCZjb29yZCk7
CisJCQkJYnJlYWs7CisJCQljYXNlIEVYVEVOVF9QT0lOVEVSX0lEOgorCQkJCWRhdGFbaV0udS5i
eXRlcyA9CisJCQkJICAgIHJlaXNlcjRfZXh0ZW50X3NpemUoJmNvb3JkLAorCQkJCQkJY29vcmRf
bnVtX3VuaXRzKCZjb29yZCkpOworCQkJCWJyZWFrOworCQkJY2FzZSBDT01QT1VORF9ESVJfSUQ6
CisJCQkJZGF0YVtpXS51LmVudHJpZXMgPSBjb29yZF9udW1fdW5pdHMoJmNvb3JkKTsKKwkJCQli
cmVhazsKKwkJCWRlZmF1bHQ6CisJCQkJZGF0YVtpXS51LnVudXNlZCA9IE5VTEw7CisJCQkJYnJl
YWs7CisJCQl9CisJCQlpKys7CisJCX0KKwkJYXNzZXJ0KCJ2cy0xNjA2IiwgaSA9PSBucl9pdGVt
cyk7CisJfQorCXJldHVybiBkYXRhOworfQorCit2b2lkIHNoaWZ0X2NoZWNrKHZvaWQgKnZwLCBj
b25zdCB6bm9kZSAqIGxlZnQsIGNvbnN0IHpub2RlICogcmlnaHQpCit7CisJcG9zX2luX25vZGVf
dCBpLCBucl9pdGVtczsKKwljb29yZF90IGNvb3JkOworCV9fdTY0IGxhc3RfYnl0ZXM7CisJaW50
IG1lcmdlYWJsZTsKKwlpdGVtX2hlYWRlcjQwICppaDsKKwlwb3NfaW5fbm9kZV90IGl0ZW1fcG9z
OworCXN0cnVjdCBzaGlmdF9jaGVjayAqZGF0YTsKKworCWRhdGEgPSAoc3RydWN0IHNoaWZ0X2No
ZWNrICopdnA7CisKKwlpZiAoZGF0YSA9PSBOVUxMKQorCQlyZXR1cm47CisKKwlpZiAobm9kZV9p
c19lbXB0eShsZWZ0KSB8fCBub2RlX2lzX2VtcHR5KHJpZ2h0KSkKKwkJbWVyZ2VhYmxlID0gMDsK
KwllbHNlIHsKKwkJY29vcmRfdCBsLCByOworCisJCWNvb3JkX2luaXRfbGFzdF91bml0KCZsLCBs
ZWZ0KTsKKwkJY29vcmRfaW5pdF9maXJzdF91bml0KCZyLCByaWdodCk7CisJCW1lcmdlYWJsZSA9
IGFyZV9pdGVtc19tZXJnZWFibGUoJmwsICZyKTsKKwl9CisKKwlucl9pdGVtcyA9CisJICAgIG5v
ZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwobGVmdCkgKworCSAgICBub2RlNDBfbnVtX29mX2l0
ZW1zX2ludGVybmFsKHJpZ2h0KSAtIChtZXJnZWFibGUgPyAxIDogMCk7CisKKwlpID0gMDsKKwls
YXN0X2J5dGVzID0gMDsKKworCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmY29vcmQsIGxlZnQpOwor
CisJZm9yIChpdGVtX3BvcyA9IDA7IGl0ZW1fcG9zIDwgbm9kZTQwX251bV9vZl9pdGVtc19pbnRl
cm5hbChsZWZ0KTsKKwkgICAgIGl0ZW1fcG9zKyspIHsKKworCQljb29yZF9zZXRfaXRlbV9wb3Mo
JmNvb3JkLCBpdGVtX3Bvcyk7CisJCWloID0gbm9kZTQwX2loX2F0X2Nvb3JkKCZjb29yZCk7CisK
KwkJYXNzZXJ0KCJ2cy0xNjExIiwgaSA9PSBpdGVtX3Bvcyk7CisJCWFzc2VydCgidnMtMTU5MCIs
IGtleWVxKCZpaC0+a2V5LCAmZGF0YVtpXS5rZXkpKTsKKwkJYXNzZXJ0KCJ2cy0xNTkxIiwKKwkJ
ICAgICAgIGxlMTZfdG9fY3B1KGdldF91bmFsaWduZWQoJmloLT5wbHVnaW5faWQpKSA9PSBkYXRh
W2ldLnBsdWdpbl9pZCk7CisJCWlmICgoaSA8IChub2RlNDBfbnVtX29mX2l0ZW1zX2ludGVybmFs
KGxlZnQpIC0gMSkpCisJCSAgICB8fCAhbWVyZ2VhYmxlKSB7CisJCQlzd2l0Y2ggKGRhdGFbaV0u
cGx1Z2luX2lkKSB7CisJCQljYXNlIENUQUlMX0lEOgorCQkJY2FzZSBGT1JNQVRUSU5HX0lEOgor
CQkJCWFzc2VydCgidnMtMTU5MiIsCisJCQkJICAgICAgIGRhdGFbaV0udS5ieXRlcyA9PQorCQkJ
CSAgICAgICBjb29yZF9udW1fdW5pdHMoJmNvb3JkKSk7CisJCQkJYnJlYWs7CisJCQljYXNlIEVY
VEVOVF9QT0lOVEVSX0lEOgorCQkJCWFzc2VydCgidnMtMTU5MyIsCisJCQkJICAgICAgIGRhdGFb
aV0udS5ieXRlcyA9PQorCQkJCSAgICAgICByZWlzZXI0X2V4dGVudF9zaXplKCZjb29yZCwKKwkJ
CQkJCQkgICBjb29yZF9udW1fdW5pdHMKKwkJCQkJCQkgICAoJmNvb3JkKSkpOworCQkJCWJyZWFr
OworCQkJY2FzZSBDT01QT1VORF9ESVJfSUQ6CisJCQkJYXNzZXJ0KCJ2cy0xNTk0IiwKKwkJCQkg
ICAgICAgZGF0YVtpXS51LmVudHJpZXMgPT0KKwkJCQkgICAgICAgY29vcmRfbnVtX3VuaXRzKCZj
b29yZCkpOworCQkJCWJyZWFrOworCQkJZGVmYXVsdDoKKwkJCQlicmVhazsKKwkJCX0KKwkJfQor
CQlpZiAoaXRlbV9wb3MgPT0gKG5vZGU0MF9udW1fb2ZfaXRlbXNfaW50ZXJuYWwobGVmdCkgLSAx
KQorCQkgICAgJiYgbWVyZ2VhYmxlKSB7CisJCQlzd2l0Y2ggKGRhdGFbaV0ucGx1Z2luX2lkKSB7
CisJCQljYXNlIENUQUlMX0lEOgorCQkJY2FzZSBGT1JNQVRUSU5HX0lEOgorCQkJCWxhc3RfYnl0
ZXMgPSBjb29yZF9udW1fdW5pdHMoJmNvb3JkKTsKKwkJCQlicmVhazsKKwkJCWNhc2UgRVhURU5U
X1BPSU5URVJfSUQ6CisJCQkJbGFzdF9ieXRlcyA9CisJCQkJICAgIHJlaXNlcjRfZXh0ZW50X3Np
emUoJmNvb3JkLAorCQkJCQkJY29vcmRfbnVtX3VuaXRzKCZjb29yZCkpOworCQkJCWJyZWFrOwor
CQkJY2FzZSBDT01QT1VORF9ESVJfSUQ6CisJCQkJbGFzdF9ieXRlcyA9IGNvb3JkX251bV91bml0
cygmY29vcmQpOworCQkJCWJyZWFrOworCQkJZGVmYXVsdDoKKwkJCQlpbXBvc3NpYmxlKCJ2cy0x
NTk1IiwgIndyb25nIG1lcmdlYWJsZSBpdGVtIik7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKwkJ
aSsrOworCX0KKworCWNvb3JkX2luaXRfZmlyc3RfdW5pdCgmY29vcmQsIHJpZ2h0KTsKKwlpZiAo
bWVyZ2VhYmxlKSB7CisJCWloID0gbm9kZTQwX2loX2F0X2Nvb3JkKCZjb29yZCk7CisKKwkJYXNz
ZXJ0KCJ2cy0xNTg5IiwKKwkJICAgICAgIGRhdGFbaSAtIDFdLnBsdWdpbl9pZCA9PSBsZTE2X3Rv
X2NwdShnZXRfdW5hbGlnbmVkKCZpaC0+cGx1Z2luX2lkKSkpOworCQlhc3NlcnQoInZzLTE2MDgi
LCBsYXN0X2J5dGVzICE9IDApOworCQlzd2l0Y2ggKGRhdGFbaSAtIDFdLnBsdWdpbl9pZCkgewor
CQljYXNlIENUQUlMX0lEOgorCQljYXNlIEZPUk1BVFRJTkdfSUQ6CisJCQlhc3NlcnQoInZzLTE1
OTYiLAorCQkJICAgICAgIGRhdGFbaSAtIDFdLnUuYnl0ZXMgPT0KKwkJCSAgICAgICBsYXN0X2J5
dGVzICsgY29vcmRfbnVtX3VuaXRzKCZjb29yZCkpOworCQkJYnJlYWs7CisKKwkJY2FzZSBFWFRF
TlRfUE9JTlRFUl9JRDoKKwkJCWFzc2VydCgidnMtMTU5NyIsCisJCQkgICAgICAgZGF0YVtpIC0g
MV0udS5ieXRlcyA9PQorCQkJICAgICAgIGxhc3RfYnl0ZXMgKyByZWlzZXI0X2V4dGVudF9zaXpl
KCZjb29yZCwKKwkJCQkJCQkJY29vcmRfbnVtX3VuaXRzCisJCQkJCQkJCSgmY29vcmQpKSk7CisJ
CQlicmVhazsKKworCQljYXNlIENPTVBPVU5EX0RJUl9JRDoKKwkJCWFzc2VydCgidnMtMTU5OCIs
CisJCQkgICAgICAgZGF0YVtpIC0gMV0udS5ieXRlcyA9PQorCQkJICAgICAgIGxhc3RfYnl0ZXMg
KyBjb29yZF9udW1fdW5pdHMoJmNvb3JkKSk7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCWlt
cG9zc2libGUoInZzLTE1OTkiLCAid3JvbmcgbWVyZ2VhYmxlIGl0ZW0iKTsKKwkJCWJyZWFrOwor
CQl9CisJCWl0ZW1fcG9zID0gMTsKKwl9IGVsc2UKKwkJaXRlbV9wb3MgPSAwOworCisJZm9yICg7
IGl0ZW1fcG9zIDwgbm9kZTQwX251bV9vZl9pdGVtc19pbnRlcm5hbChyaWdodCk7IGl0ZW1fcG9z
KyspIHsKKworCQljb29yZF9zZXRfaXRlbV9wb3MoJmNvb3JkLCBpdGVtX3Bvcyk7CisJCWloID0g
bm9kZTQwX2loX2F0X2Nvb3JkKCZjb29yZCk7CisKKwkJYXNzZXJ0KCJ2cy0xNjEyIiwga2V5ZXEo
JmloLT5rZXksICZkYXRhW2ldLmtleSkpOworCQlhc3NlcnQoInZzLTE2MTMiLAorCQkgICAgICAg
bGUxNl90b19jcHUoZ2V0X3VuYWxpZ25lZCgmaWgtPnBsdWdpbl9pZCkpID09IGRhdGFbaV0ucGx1
Z2luX2lkKTsKKwkJc3dpdGNoIChkYXRhW2ldLnBsdWdpbl9pZCkgeworCQljYXNlIENUQUlMX0lE
OgorCQljYXNlIEZPUk1BVFRJTkdfSUQ6CisJCQlhc3NlcnQoInZzLTE2MDAiLAorCQkJICAgICAg
IGRhdGFbaV0udS5ieXRlcyA9PSBjb29yZF9udW1fdW5pdHMoJmNvb3JkKSk7CisJCQlicmVhazsK
KwkJY2FzZSBFWFRFTlRfUE9JTlRFUl9JRDoKKwkJCWFzc2VydCgidnMtMTYwMSIsCisJCQkgICAg
ICAgZGF0YVtpXS51LmJ5dGVzID09CisJCQkgICAgICAgcmVpc2VyNF9leHRlbnRfc2l6ZSgmY29v
cmQsCisJCQkJCQkgICBjb29yZF9udW1fdW5pdHMKKwkJCQkJCSAgICgmY29vcmQpKSk7CisJCQli
cmVhazsKKwkJY2FzZSBDT01QT1VORF9ESVJfSUQ6CisJCQlhc3NlcnQoInZzLTE2MDIiLAorCQkJ
ICAgICAgIGRhdGFbaV0udS5lbnRyaWVzID09IGNvb3JkX251bV91bml0cygmY29vcmQpKTsKKwkJ
CWJyZWFrOworCQlkZWZhdWx0OgorCQkJYnJlYWs7CisJCX0KKwkJaSsrOworCX0KKworCWFzc2Vy
dCgidnMtMTYwMyIsIGkgPT0gbnJfaXRlbXMpOworCWtmcmVlKGRhdGEpOworfQorCisjZW5kaWYK
KworLyoKKyAqIGNvbW1vbiBwYXJ0IG9mIC0+c2hpZnQoKSBmb3IgYWxsIG5vZGVzLAorICogd2hp
Y2ggY29udGFpbiBub2RlNDBfaGVhZGVyIGF0IHRoZSBiZWdpbm5pbmcgYW5kCisgKiB0aGUgdGFi
bGUgb2YgaXRlbSBoZWFkZXJzIGF0IHRoZSBlbmQKKyAqLworaW50IHNoaWZ0X25vZGU0MF9jb21t
b24oY29vcmRfdCAqZnJvbSwgem5vZGUgKnRvLAorCQkJc2hpZnRfZGlyZWN0aW9uIHBlbmQsCisJ
CQlpbnQgZGVsZXRlX2NoaWxkLCAvKiBpZiBAZnJvbS0+bm9kZSBiZWNvbWVzIGVtcHR5LAorCQkJ
CQkgICAqIGl0IHdpbGwgYmUgZGVsZXRlZCBmcm9tIHRoZQorCQkJCQkgICAqIHRyZWUgaWYgdGhp
cyBpcyBzZXQgdG8gMSAqLworCQkJaW50IGluY2x1ZGluZ19zdG9wX2Nvb3JkLAorCQkJY2Fycnlf
cGx1Z2luX2luZm8gKmluZm8sCisJCQlzaXplX3Qgbm9kZV9oZWFkZXJfc2l6ZSkKK3sKKwlzdHJ1
Y3Qgc2hpZnRfcGFyYW1zIHNoaWZ0OworCWludCByZXN1bHQ7CisJem5vZGUgKmxlZnQsICpyaWdo
dDsKKwl6bm9kZSAqc291cmNlOworCWludCB0YXJnZXRfZW1wdHk7CisKKwlhc3NlcnQoIm5pa2l0
YS0yMTYxIiwgY29vcmRfY2hlY2soZnJvbSkpOworCisJbWVtc2V0KCZzaGlmdCwgMCwgc2l6ZW9m
KHNoaWZ0KSk7CisJc2hpZnQucGVuZCA9IHBlbmQ7CisJc2hpZnQud2lzaF9zdG9wID0gKmZyb207
CisJc2hpZnQudGFyZ2V0ID0gdG87CisKKwlhc3NlcnQoIm5pa2l0YS0xNDczIiwgem5vZGVfaXNf
d3JpdGVfbG9ja2VkKGZyb20tPm5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0xNDc0Iiwgem5vZGVf
aXNfd3JpdGVfbG9ja2VkKHRvKSk7CisKKwlzb3VyY2UgPSBmcm9tLT5ub2RlOworCisJLyogc2V0
IEBzaGlmdC53aXNoX3N0b3AgdG8gcmlnaHRtb3N0L2xlZnRtb3N0IHVuaXQgYW1vbmcgdW5pdHMg
d2Ugd2FudAorCSAgIHNoaWZ0ZWQgKi8KKwlpZiAocGVuZCA9PSBTSElGVF9MRUZUKSB7CisJCXJl
c3VsdCA9IGNvb3JkX3NldF90b19sZWZ0KCZzaGlmdC53aXNoX3N0b3ApOworCQlsZWZ0ID0gdG87
CisJCXJpZ2h0ID0gZnJvbS0+bm9kZTsKKwl9IGVsc2UgeworCQlyZXN1bHQgPSBjb29yZF9zZXRf
dG9fcmlnaHQoJnNoaWZ0Lndpc2hfc3RvcCk7CisJCWxlZnQgPSBmcm9tLT5ub2RlOworCQlyaWdo
dCA9IHRvOworCX0KKworCWlmIChyZXN1bHQpIHsKKwkJLyogbW92ZSBpbnNlcnRpb24gY29vcmQg
ZXZlbiBpZiB0aGVyZSBpcyBub3RoaW5nIHRvIG1vdmUgKi8KKwkJaWYgKGluY2x1ZGluZ19zdG9w
X2Nvb3JkKSB7CisJCQkvKiBtb3ZlIGluc2VydGlvbiBjb29yZCAoQGZyb20pICovCisJCQlpZiAo
cGVuZCA9PSBTSElGVF9MRUZUKSB7CisJCQkJLyogYWZ0ZXIgbGFzdCBpdGVtIGluIHRhcmdldCBu
b2RlICovCisJCQkJY29vcmRfaW5pdF9hZnRlcl9sYXN0X2l0ZW0oZnJvbSwgdG8pOworCQkJfSBl
bHNlIHsKKwkJCQkvKiBiZWZvcmUgZmlyc3QgaXRlbSBpbiB0YXJnZXQgbm9kZSAqLworCQkJCWNv
b3JkX2luaXRfYmVmb3JlX2ZpcnN0X2l0ZW0oZnJvbSwgdG8pOworCQkJfQorCQl9CisKKwkJaWYg
KGRlbGV0ZV9jaGlsZCAmJiBub2RlX2lzX2VtcHR5KHNoaWZ0Lndpc2hfc3RvcC5ub2RlKSkKKwkJ
CXJlc3VsdCA9CisJCQkgICAgcHJlcGFyZV9yZW1vdmFsX25vZGU0MChzaGlmdC53aXNoX3N0b3Au
bm9kZSwgaW5mbyk7CisJCWVsc2UKKwkJCXJlc3VsdCA9IDA7CisJCS8qIHRoZXJlIGlzIG5vdGhp
bmcgdG8gc2hpZnQgKi8KKwkJYXNzZXJ0KCJuaWtpdGEtMjA3OCIsIGNvb3JkX2NoZWNrKGZyb20p
KTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwl0YXJnZXRfZW1wdHkgPSBub2RlX2lzX2VtcHR5
KHRvKTsKKworCS8qIHdoZW4gZmlyc3Qgbm9kZSBwbHVnaW4gd2l0aCBpdGVtIGJvZHkgY29tcHJl
c3Npb24gaXMgaW1wbGVtZW50ZWQsCisJICAgdGhpcyBtdXN0IGJlIGNoYW5nZWQgdG8gY2FsbCBu
b2RlIHNwZWNpZmljIHBsdWdpbiAqLworCisJLyogc2hpZnQtPnN0b3BfY29vcmQgaXMgdXBkYXRl
ZCB0byBsYXN0IHVuaXQgd2hpY2ggcmVhbGx5IHdpbGwgYmUKKwkgICBzaGlmdGVkICovCisJZXN0
aW1hdGVfc2hpZnQoJnNoaWZ0LCBnZXRfY3VycmVudF9jb250ZXh0KCkpOworCWlmICghc2hpZnQu
c2hpZnRfYnl0ZXMpIHsKKwkJLyogd2UgY291bGQgbm90IHNoaWZ0IGFueXRoaW5nICovCisJCWFz
c2VydCgibmlraXRhLTIwNzkiLCBjb29yZF9jaGVjayhmcm9tKSk7CisJCXJldHVybiAwOworCX0K
KworCWNvcHkoJnNoaWZ0LCBub2RlX2hlYWRlcl9zaXplKTsKKworCS8qIHJlc3VsdCB2YWx1ZSBv
ZiB0aGlzIGlzIGltcG9ydGFudC4gSXQgaXMgdXNlZCBieSBhZGp1c3RfY29vcmQgYmVsb3cgKi8K
KwlyZXN1bHQgPSBkZWxldGVfY29waWVkKCZzaGlmdCk7CisKKwlhc3NlcnQoInZzLTE2MTAiLCBy
ZXN1bHQgPj0gMCk7CisJYXNzZXJ0KCJ2cy0xNDcxIiwKKwkgICAgICAgKChyZWlzZXI0X2NvbnRl
eHQgKikgY3VycmVudC0+am91cm5hbF9pbmZvKS0+bWFnaWMgPT0KKwkgICAgICAgY29udGV4dF9t
YWdpYyk7CisKKwkvKiBpdGVtIHdoaWNoIGhhcyBiZWVuIG1vdmVkIGZyb20gb25lIG5vZGUgdG8g
YW5vdGhlciBtaWdodCB3YW50IHRvIGRvCisJICAgc29tZXRoaW5nIG9uIHRoYXQgZXZlbnQuIFRo
aXMgY2FuIGJlIGRvbmUgYnkgaXRlbSdzIHNoaWZ0X2hvb2sKKwkgICBtZXRob2QsIHdoaWNoIHdp
bGwgYmUgbm93IGNhbGxlZCBmb3IgZXZlcnkgbW92ZWQgaXRlbXMgKi8KKwljYWxsX3NoaWZ0X2hv
b2tzKCZzaGlmdCk7CisKKwlhc3NlcnQoInZzLTE0NzIiLAorCSAgICAgICAoKHJlaXNlcjRfY29u
dGV4dCAqKSBjdXJyZW50LT5qb3VybmFsX2luZm8pLT5tYWdpYyA9PQorCSAgICAgICBjb250ZXh0
X21hZ2ljKTsKKworCXVwZGF0ZV90YXBzKCZzaGlmdCk7CisKKwlhc3NlcnQoInZzLTE0NzMiLAor
CSAgICAgICAoKHJlaXNlcjRfY29udGV4dCAqKSBjdXJyZW50LT5qb3VybmFsX2luZm8pLT5tYWdp
YyA9PQorCSAgICAgICBjb250ZXh0X21hZ2ljKTsKKworCS8qIGFkanVzdCBAZnJvbSBwb2ludGVy
IGluIGFjY29yZGFuY2Ugd2l0aCBAaW5jbHVkaW5nX3N0b3BfY29vcmQgZmxhZworCSAgIGFuZCBh
bW91bnQgb2YgZGF0YSB3aGljaCB3YXMgcmVhbGx5IHNoaWZ0ZWQgKi8KKwlhZGp1c3RfY29vcmQo
ZnJvbSwgJnNoaWZ0LCByZXN1bHQsIGluY2x1ZGluZ19zdG9wX2Nvb3JkKTsKKworCWlmICh0YXJn
ZXRfZW1wdHkpCisJCS8qCisJCSAqIGl0ZW1zIHdlcmUgc2hpZnRlZCBpbnRvIGVtcHR5IG5vZGUu
IFVwZGF0ZSBkZWxpbWl0aW5nIGtleS4KKwkJICovCisJCXJlc3VsdCA9IHByZXBhcmVfZm9yX3Vw
ZGF0ZShOVUxMLCBsZWZ0LCBpbmZvKTsKKworCS8qIGFkZCB1cGRhdGUgb3BlcmF0aW9uIHRvIEBp
bmZvLCB3aGljaCBpcyB0aGUgbGlzdCBvZiBvcGVyYXRpb25zIHRvCisJICAgYmUgcGVyZm9ybWVk
IG9uIGEgaGlnaGVyIGxldmVsICovCisJcmVzdWx0ID0gcHJlcGFyZV9mb3JfdXBkYXRlKGxlZnQs
IHJpZ2h0LCBpbmZvKTsKKwlpZiAoIXJlc3VsdCAmJiBub2RlX2lzX2VtcHR5KHNvdXJjZSkgJiYg
ZGVsZXRlX2NoaWxkKSB7CisJCS8qIGFsbCBjb250ZW50cyBvZiBAZnJvbS0+bm9kZSBpcyBtb3Zl
ZCB0byBAdG8gYW5kIEBmcm9tLT5ub2RlCisJCSAgIGhhcyB0byBiZSByZW1vdmVkIGZyb20gdGhl
IHRyZWUsIHNvLCBvbiBoaWdoZXIgbGV2ZWwgd2UKKwkJICAgd2lsbCBiZSByZW1vdmluZyB0aGUg
cG9pbnRlciB0byBub2RlIEBmcm9tLT5ub2RlICovCisJCXJlc3VsdCA9IHByZXBhcmVfcmVtb3Zh
bF9ub2RlNDAoc291cmNlLCBpbmZvKTsKKwl9CisJYXNzZXJ0KCJuaWtpdGEtMjA4MCIsIGNvb3Jk
X2NoZWNrKGZyb20pKTsKKwlyZXR1cm4gcmVzdWx0ID8gcmVzdWx0IDogKGludClzaGlmdC5zaGlm
dF9ieXRlczsKK30KKworLyoKKyAqIHBsdWdpbi0+dS5ub2RlLnNoaWZ0CisgKiBsb29rIGZvciBk
ZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmgKKyAqLworaW50
IHNoaWZ0X25vZGU0MChjb29yZF90ICpmcm9tLCB6bm9kZSAqdG8sCisJCSBzaGlmdF9kaXJlY3Rp
b24gcGVuZCwKKwkJIGludCBkZWxldGVfY2hpbGQsIC8qIGlmIEBmcm9tLT5ub2RlIGJlY29tZXMg
ZW1wdHksCisJCQkJICAgICogaXQgd2lsbCBiZSBkZWxldGVkIGZyb20gdGhlCisJCQkJICAgICog
dHJlZSBpZiB0aGlzIGlzIHNldCB0byAxICovCisJCSBpbnQgaW5jbHVkaW5nX3N0b3BfY29vcmQs
CisJCSBjYXJyeV9wbHVnaW5faW5mbyAqaW5mbykKK3sKKwlyZXR1cm4gc2hpZnRfbm9kZTQwX2Nv
bW1vbihmcm9tLCB0bywgcGVuZCwgZGVsZXRlX2NoaWxkLAorCQkJCSAgIGluY2x1ZGluZ19zdG9w
X2Nvb3JkLCBpbmZvLAorCQkJCSAgIHNpemVvZihub2RlNDBfaGVhZGVyKSk7Cit9CisKKy8qIHBs
dWdpbi0+dS5ub2RlLmZhc3RfaW5zZXJ0KCkKKyAgIGxvb2sgZm9yIGRlc2NyaXB0aW9uIG9mIHRo
aXMgbWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaCAqLworaW50IGZhc3RfaW5zZXJ0X25vZGU0
MChjb25zdCBjb29yZF90ICogY29vcmQgVU5VU0VEX0FSRyAvKiBub2RlIHRvIHF1ZXJ5ICovICkK
K3sKKwlyZXR1cm4gMTsKK30KKworLyogcGx1Z2luLT51Lm5vZGUuZmFzdF9wYXN0ZSgpCisgICBs
b29rIGZvciBkZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmgg
Ki8KK2ludCBmYXN0X3Bhc3RlX25vZGU0MChjb25zdCBjb29yZF90ICogY29vcmQgVU5VU0VEX0FS
RyAvKiBub2RlIHRvIHF1ZXJ5ICovICkKK3sKKwlyZXR1cm4gMTsKK30KKworLyogcGx1Z2luLT51
Lm5vZGUuZmFzdF9jdXQoKQorICAgbG9vayBmb3IgZGVzY3JpcHRpb24gb2YgdGhpcyBtZXRob2Qg
aW4gcGx1Z2luL25vZGUvbm9kZS5oICovCitpbnQgZmFzdF9jdXRfbm9kZTQwKGNvbnN0IGNvb3Jk
X3QgKiBjb29yZCBVTlVTRURfQVJHIC8qIG5vZGUgdG8gcXVlcnkgKi8gKQoreworCXJldHVybiAx
OworfQorCisvKiBwbHVnaW4tPnUubm9kZS5tb2RpZnkgLSBub3QgZGVmaW5lZCAqLworCisvKiBw
bHVnaW4tPnUubm9kZS5tYXhfaXRlbV9zaXplICovCitpbnQgbWF4X2l0ZW1fc2l6ZV9ub2RlNDAo
dm9pZCkKK3sKKwlyZXR1cm4gcmVpc2VyNF9nZXRfY3VycmVudF9zYigpLT5zX2Jsb2Nrc2l6ZSAt
IHNpemVvZihub2RlNDBfaGVhZGVyKSAtCisJICAgIHNpemVvZihpdGVtX2hlYWRlcjQwKTsKK30K
KworLyogcGx1Z2luLT51Lm5vZGUuc2V0X2l0ZW1fcGx1Z2luICovCitpbnQgc2V0X2l0ZW1fcGx1
Z2luX25vZGU0MChjb29yZF90ICpjb29yZCwgaXRlbV9pZCBpZCkKK3sKKwlpdGVtX2hlYWRlcjQw
ICppaDsKKworCWloID0gbm9kZTQwX2loX2F0X2Nvb3JkKGNvb3JkKTsKKwlwdXRfdW5hbGlnbmVk
KGNwdV90b19sZTE2KGlkKSwgJmloLT5wbHVnaW5faWQpOworCWNvb3JkLT5pcGx1Z2lkID0gaWQ7
CisJcmV0dXJuIDA7Cit9CisKKy8qCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDog
OAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDog
MQorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9wbHVnaW4vbm9kZS9ub2RlNDAuaCBsaW51eC01LjQuMTcvZnMvcmVpc2Vy
NC9wbHVnaW4vbm9kZS9ub2RlNDAuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9w
bHVnaW4vbm9kZS9ub2RlNDAuaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAor
KysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZTQwLmgJMjAyMC0wMi0w
NSAyMDo1Mzo0MS40NzMyMjIzMzMgKzAxMDAKQEAgLTAsMCArMSwxMzAgQEAKKy8qIENvcHlyaWdo
dCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkg
cmVpc2VyNC9SRUFETUUgKi8KKworI2lmICFkZWZpbmVkKCBfX1JFSVNFUjRfTk9ERTQwX0hfXyAp
CisjZGVmaW5lIF9fUkVJU0VSNF9OT0RFNDBfSF9fCisKKyNpbmNsdWRlICIuLi8uLi9mb3J3YXJk
LmgiCisjaW5jbHVkZSAiLi4vLi4vZGZvcm1hdC5oIgorI2luY2x1ZGUgIm5vZGUuaCIKKworI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKKy8qIGZvcm1hdCBvZiBub2RlIGhlYWRlciBmb3IgNDAg
bm9kZSBsYXlvdXRzLiBLZWVwIGJsb2F0IG91dCBvZiB0aGlzIHN0cnVjdC4gICovCit0eXBlZGVm
IHN0cnVjdCBub2RlNDBfaGVhZGVyIHsKKwkvKiBpZGVudGlmaWVyIG9mIG5vZGUgcGx1Z2luLiBN
dXN0IGJlIGxvY2F0ZWQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nCisJICAgb2YgYSBub2RlLiAqLwor
CWNvbW1vbl9ub2RlX2hlYWRlciBjb21tb25faGVhZGVyOwkvKiB0aGlzIGlzIDE2IGJpdHMgKi8K
KwkvKiBudW1iZXIgb2YgaXRlbXMuIFNob3VsZCBiZSBmaXJzdCBlbGVtZW50IGluIHRoZSBub2Rl
IGhlYWRlciwKKwkgICBiZWNhdXNlIHdlIGhhdmVuJ3QgeWV0IGZpbmFsbHkgZGVjaWRlZCB3aGV0
aGVyIGl0IHNob3VsZG4ndCBnbyBpbnRvCisJICAgY29tbW9uX2hlYWRlci4KKwkgKi8KKy8qIE5J
S0lUQS1GSVhNRS1IQU5TOiBDcmVhdGUgYSBtYWNybyBzdWNoIHRoYXQgaWYgdGhlcmUgaXMgb25s
eSBvbmUKKyAqIG5vZGUgZm9ybWF0IGF0IGNvbXBpbGUgdGltZSwgYW5kIGl0IGlzIHRoaXMgb25l
LCBhY2Nlc3NlcyBkbyBub3QgZnVuY3Rpb24gZGVyZWZlcmVuY2Ugd2hlbgorICogYWNjZXNzaW5n
IHRoZXNlIGZpZWxkcyAoYW5kIG90aGVyd2lzZSB0aGV5IGRvKS4gIFByb2JhYmx5IDgwJSBvZiB1
c2VycyB3aWxsIG9ubHkgaGF2ZSBvbmUgbm9kZSBmb3JtYXQgYXQgYSB0aW1lIHRocm91Z2hvdXQg
dGhlIGxpZmUgb2YgcmVpc2VyNC4gICovCisJZDE2IG5yX2l0ZW1zOworCS8qIGZyZWUgc3BhY2Ug
aW4gbm9kZSBtZWFzdXJlZCBpbiBieXRlcyAqLworCWQxNiBmcmVlX3NwYWNlOworCS8qIG9mZnNl
dCB0byBzdGFydCBvZiBmcmVlIHNwYWNlIGluIG5vZGUgKi8KKwlkMTYgZnJlZV9zcGFjZV9zdGFy
dDsKKwkvKiBmb3IgcmVpc2VyNF9mc2NrLiAgV2hlbiBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGlz
IGEgZnJlZQorCSAgIGJsb2NrIGlzIGNvcnJ1cHRlZCwgYW5kIHdlIHRyeSB0byByZWNvdmVyIGV2
ZXJ5dGhpbmcgZXZlbgorCSAgIGlmIG1hcmtlZCBhcyBmcmVlZCwgdGhlbiBvbGQgdmVyc2lvbnMg
b2YgZGF0YSBtYXkKKwkgICBkdXBsaWNhdGUgbmV3ZXIgdmVyc2lvbnMsIGFuZCB0aGlzIGZpZWxk
IGFsbG93cyB1cyB0bworCSAgIHJlc3RvcmUgdGhlIG5ld2VyIHZlcnNpb24uICBBbHNvIHVzZWZ1
bCBmb3Igd2hlbiB1c2VycworCSAgIHdobyBkb24ndCBoYXZlIHRoZSBuZXcgdHJhc2hjYW4gaW5z
dGFsbGVkIG9uIHRoZWlyIGxpbnV4IGRpc3RybworCSAgIGRlbGV0ZSB0aGUgd3JvbmcgZmlsZXMg
YW5kIHNlbmQgdXMgZGVzcGVyYXRlIGVtYWlscworCSAgIG9mZmVyaW5nICQyNSBmb3IgdGhlbSBi
YWNrLiAgKi8KKworCS8qIG1hZ2ljIGZpZWxkIHdlIG5lZWQgdG8gdGVsbCBmb3JtYXR0ZWQgbm9k
ZXMgTklLSVRBLUZJWE1FLUhBTlM6IGltcHJvdmUgdGhpcyBjb21tZW50ICovCisJZDMyIG1hZ2lj
OworCS8qIGZsdXNoc3RhbXAgaXMgbWFkZSBvZiBta19pZCBhbmQgd3JpdGVfY291bnRlci4gbWtf
aWQgaXMgYW4KKwkgICBpZCBnZW5lcmF0ZWQgcmFuZG9tbHkgYXQgbWtyZWlzZXJmcyB0aW1lLiBT
byB3ZSBjYW4ganVzdAorCSAgIHNraXAgYWxsIG5vZGVzIHdpdGggZGlmZmVyZW50IG1rX2lkLiB3
cml0ZV9jb3VudGVyIGlzIGQ2NAorCSAgIGluY3JlbWVudGluZyBjb3VudGVyIG9mIHdyaXRlcyBv
biBkaXNrLiBJdCBpcyB1c2VkIGZvcgorCSAgIGNob29zaW5nIHRoZSBuZXdlc3QgZGF0YSBhdCBm
c2NrIHRpbWUuIE5JS0lUQS1GSVhNRS1IQU5TOiB3aHkgd2FzIGZpZWxkIG5hbWUgY2hhbmdlZCBi
dXQgbm90IGNvbW1lbnQ/ICovCisKKwlkMzIgbWtmc19pZDsKKwlkNjQgZmx1c2hfaWQ7CisJLyog
bm9kZSBmbGFncyB0byBiZSB1c2VkIGJ5IGZzY2sgKHJlaXNlcjRjayBvciByZWlzZXI0ZnNjaz8p
CisJICAgYW5kIHJlcGFja2VyIE5JS0lUQS1GSVhNRS1IQU5TOiBzYXkgbW9yZSBvciByZWZlcmVu
Y2UgZWxzZXdoZXJlIHRoYXQgc2F5cyBtb3JlICovCisJZDE2IGZsYWdzOworCisJLyogMSBpcyBs
ZWFmIGxldmVsLCAyIGlzIHR3aWcgbGV2ZWwsIHJvb3QgaXMgdGhlIG51bWVyaWNhbGx5CisJICAg
bGFyZ2VzdCBsZXZlbCAqLworCWQ4IGxldmVsOworCisJZDggcGFkOworfSBQQUNLRUQgbm9kZTQw
X2hlYWRlcjsKKworLyogaXRlbSBoZWFkZXJzIGFyZSBub3Qgc3RhbmRhcmQgYWNyb3NzIGFsbCBu
b2RlIGxheW91dHMsIHBhc3MKKyAgIHBvc19pbl9ub2RlIHRvIGZ1bmN0aW9ucyBpbnN0ZWFkICov
Cit0eXBlZGVmIHN0cnVjdCBpdGVtX2hlYWRlcjQwIHsKKwkvKiBrZXkgb2YgaXRlbSAqLworCS8q
ICAwICovIHJlaXNlcjRfa2V5IGtleTsKKwkvKiBvZmZzZXQgZnJvbSBzdGFydCBvZiBhIG5vZGUg
bWVhc3VyZWQgaW4gOC1ieXRlIGNodW5rcyAqLworCS8qIDI0ICovIGQxNiBvZmZzZXQ7CisJLyog
MjYgKi8gZDE2IGZsYWdzOworCS8qIDI4ICovIGQxNiBwbHVnaW5faWQ7Cit9IFBBQ0tFRCBpdGVt
X2hlYWRlcjQwOworCitzaXplX3QgaXRlbV9vdmVyaGVhZF9ub2RlNDAoY29uc3Qgem5vZGUgKiBu
b2RlLCBmbG93X3QgKiBhZmxvdyk7CitzaXplX3QgZnJlZV9zcGFjZV9ub2RlNDAoem5vZGUgKiBu
b2RlKTsKK25vZGVfc2VhcmNoX3Jlc3VsdCBsb29rdXBfbm9kZTQwKHpub2RlICogbm9kZSwgY29u
c3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCQkJIGxvb2t1cF9iaWFzIGJpYXMsIGNvb3JkX3QgKiBj
b29yZCk7CitpbnQgbnVtX29mX2l0ZW1zX25vZGU0MChjb25zdCB6bm9kZSAqIG5vZGUpOworY2hh
ciAqaXRlbV9ieV9jb29yZF9ub2RlNDAoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKK2ludCBsZW5n
dGhfYnlfY29vcmRfbm9kZTQwKGNvbnN0IGNvb3JkX3QgKiBjb29yZCk7CitpdGVtX3BsdWdpbiAq
cGx1Z2luX2J5X2Nvb3JkX25vZGU0MChjb25zdCBjb29yZF90ICogY29vcmQpOworcmVpc2VyNF9r
ZXkgKmtleV9hdF9ub2RlNDAoY29uc3QgY29vcmRfdCAqIGNvb3JkLCByZWlzZXI0X2tleSAqIGtl
eSk7CitzaXplX3QgZXN0aW1hdGVfbm9kZTQwKHpub2RlICogbm9kZSk7CitpbnQgY2hlY2tfbm9k
ZTQwKGNvbnN0IHpub2RlICogbm9kZSwgX191MzIgZmxhZ3MsIGNvbnN0IGNoYXIgKiplcnJvcik7
CitpbnQgcGFyc2Vfbm9kZTQwX2NvbW1vbih6bm9kZSAqbm9kZSwgY29uc3QgX191MzIgbWFnaWMp
OworaW50IHBhcnNlX25vZGU0MCh6bm9kZSAqIG5vZGUpOworaW50IGluaXRfbm9kZTQwX2NvbW1v
bih6bm9kZSAqbm9kZSwgbm9kZV9wbHVnaW4gKm5wbHVnLAorCQkgICAgICAgc2l6ZV90IG5vZGVf
aGVhZGVyX3NpemUsIGNvbnN0IF9fdTMyIG1hZ2ljKTsKK2ludCBpbml0X25vZGU0MCh6bm9kZSAq
bm9kZSk7CisKKyNpZmRlZiBHVUVTU19FWElTVFMKK2ludCBndWVzc19ub2RlNDBfY29tbW9uKGNv
bnN0IHpub2RlICpub2RlLCByZWlzZXI0X25vZGVfaWQgaWQsCisJCQljb25zdCBfX3UzMiBtYWdp
Yyk7CitpbnQgZ3Vlc3Nfbm9kZTQwKGNvbnN0IHpub2RlICpub2RlKTsKKyNlbmRpZgorCit2b2lk
IGNoYW5nZV9pdGVtX3NpemVfbm9kZTQwKGNvb3JkX3QgKiBjb29yZCwgaW50IGJ5KTsKK2ludCBj
cmVhdGVfaXRlbV9ub2RlNDAoY29vcmRfdCAqIHRhcmdldCwgY29uc3QgcmVpc2VyNF9rZXkgKiBr
ZXksCisJCSAgICAgICByZWlzZXI0X2l0ZW1fZGF0YSAqIGRhdGEsIGNhcnJ5X3BsdWdpbl9pbmZv
ICogaW5mbyk7Cit2b2lkIHVwZGF0ZV9pdGVtX2tleV9ub2RlNDAoY29vcmRfdCAqIHRhcmdldCwg
Y29uc3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCQkgICAgY2FycnlfcGx1Z2luX2luZm8gKiBpbmZv
KTsKK2ludCBraWxsX25vZGU0MChzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICosIGNhcnJ5X3BsdWdp
bl9pbmZvICopOworaW50IGN1dF9ub2RlNDAoc3RydWN0IGNhcnJ5X2N1dF9kYXRhICosIGNhcnJ5
X3BsdWdpbl9pbmZvICopOworaW50IHNoaWZ0X25vZGU0MF9jb21tb24oY29vcmRfdCAqZnJvbSwg
em5vZGUgKnRvLCBzaGlmdF9kaXJlY3Rpb24gcGVuZCwKKwkJCWludCBkZWxldGVfY2hpbGQsIGlu
dCBpbmNsdWRpbmdfc3RvcF9jb29yZCwKKwkJCWNhcnJ5X3BsdWdpbl9pbmZvICppbmZvLCBzaXpl
X3Qgbmhfc2l6ZSk7CitpbnQgc2hpZnRfbm9kZTQwKGNvb3JkX3QgKmZyb20sIHpub2RlICp0bywg
c2hpZnRfZGlyZWN0aW9uIHBlbmQsCisJCSBpbnQgZGVsZXRlX2NoaWxkLCBpbnQgaW5jbHVkaW5n
X3N0b3BfY29vcmQsCisJCSBjYXJyeV9wbHVnaW5faW5mbyAqaW5mbyk7CitpbnQgZmFzdF9pbnNl
cnRfbm9kZTQwKGNvbnN0IGNvb3JkX3QgKiBjb29yZCk7CitpbnQgZmFzdF9wYXN0ZV9ub2RlNDAo
Y29uc3QgY29vcmRfdCAqIGNvb3JkKTsKK2ludCBmYXN0X2N1dF9ub2RlNDAoY29uc3QgY29vcmRf
dCAqIGNvb3JkKTsKK2ludCBtYXhfaXRlbV9zaXplX25vZGU0MCh2b2lkKTsKK2ludCBwcmVwYXJl
X3JlbW92YWxfbm9kZTQwKHpub2RlICogZW1wdHksIGNhcnJ5X3BsdWdpbl9pbmZvICogaW5mbyk7
CitpbnQgc2V0X2l0ZW1fcGx1Z2luX25vZGU0MChjb29yZF90ICogY29vcmQsIGl0ZW1faWQgaWQp
OworaW50IHNocmlua19pdGVtX25vZGU0MChjb29yZF90ICogY29vcmQsIGludCBkZWx0YSk7CisK
KyNpZiBSRUlTRVI0X0RFQlVHCit2b2lkICpzaGlmdF9jaGVja19wcmVwYXJlKGNvbnN0IHpub2Rl
ICpsZWZ0LCBjb25zdCB6bm9kZSAqcmlnaHQpOwordm9pZCBzaGlmdF9jaGVjayh2b2lkICp2cCwg
Y29uc3Qgem5vZGUgKmxlZnQsIGNvbnN0IHpub2RlICpyaWdodCk7CisjZW5kaWYKKworLyogX19S
RUlTRVI0X05PREU0MF9IX18gKi8KKyNlbmRpZgorLyoKKyAgIExvY2FsIHZhcmlhYmxlczoKKyAg
IGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFz
aWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNj
cm9sbC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGU0MS5jIGxpbnV4LTUuNC4x
Ny9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGU0MS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGU0MS5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAw
MDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vbm9kZS9ub2RlNDEu
YwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MzIyMjMzMyArMDEwMApAQCAtMCwwICsxLDEzNyBAQAor
LyoKKyAqIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNp
bmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUKKyAqLworCisjaW5jbHVkZSAiLi4vLi4vZGVi
dWcuaCIKKyNpbmNsdWRlICIuLi8uLi9rZXkuaCIKKyNpbmNsdWRlICIuLi8uLi9jb29yZC5oIgor
I2luY2x1ZGUgIi4uL3BsdWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICIuLi9pdGVtL2l0ZW0uaCIK
KyNpbmNsdWRlICJub2RlLmgiCisjaW5jbHVkZSAibm9kZTQxLmgiCisjaW5jbHVkZSAiLi4vcGx1
Z2luLmgiCisjaW5jbHVkZSAiLi4vLi4vam5vZGUuaCIKKyNpbmNsdWRlICIuLi8uLi96bm9kZS5o
IgorI2luY2x1ZGUgIi4uLy4uL3Bvb2wuaCIKKyNpbmNsdWRlICIuLi8uLi9jYXJyeS5oIgorI2lu
Y2x1ZGUgIi4uLy4uL3RhcC5oIgorI2luY2x1ZGUgIi4uLy4uL3RyZWUuaCIKKyNpbmNsdWRlICIu
Li8uLi9zdXBlci5oIgorI2luY2x1ZGUgIi4uLy4uL2NoZWNrc3VtLmgiCisjaW5jbHVkZSAiLi4v
Li4vcmVpc2VyNC5oIgorCisjaW5jbHVkZSA8YXNtL3VhY2Nlc3MuaD4KKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L3ByZWZldGNoLmg+CisKKy8qCisgKiBub2RlNDEg
bGF5b3V0IGl0IGFsbW9zdCB0aGUgc2FtZSBhcyBub2RlNDA6CisgKiBub2RlNDFfaGVhZGVyIGlz
IGF0IHRoZSBiZWdpbm5pbmcgYW5kIGEgdGFibGUgb2YgaXRlbSBoZWFkZXJzCisgKiBpcyBhdCB0
aGUgZW5kLiBUaGVyIGRpZmZlcmVuY2UgaXMgdGhhdCBub2RlNDFfaGVhZGVyIGNvbnRhaW5zCisg
KiBhIDMyLWJpdCBjaGVja3N1bSAoc2VlIG5vZGU0MS5oKQorICovCisKK3N0YXRpYyBjb25zdCBf
X3UzMiBSRUlTRVI0X05PREU0MV9NQUdJQyA9IDB4MTkwNTE5NjY7CisKK3N0YXRpYyBpbmxpbmUg
bm9kZTQxX2hlYWRlciAqbm9kZTQxX25vZGVfaGVhZGVyKGNvbnN0IHpub2RlICpub2RlKQorewor
CWFzc2VydCgiZWR3YXJkLTE2MzQiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTE2
MzUiLCB6bm9kZV9wYWdlKG5vZGUpICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTE2MzYiLCB6
ZGF0YShub2RlKSAhPSBOVUxMKTsKKworCXJldHVybiAobm9kZTQxX2hlYWRlciAqKXpkYXRhKG5v
ZGUpOworfQorCitpbnQgY3N1bV9ub2RlNDEoem5vZGUgKm5vZGUsIGludCBjaGVjaykKK3sKKwlf
X3UzMiBjcHVfY3N1bTsKKworCWNwdV9jc3VtID0gcmVpc2VyNF9jcmMzMmMoZ2V0X2N1cnJlbnRf
c3VwZXJfcHJpdmF0ZSgpLT5jc3VtX3RmbSwKKwkJCQkgIH4wLAorCQkJCSAgemRhdGEobm9kZSks
CisJCQkJICBzaXplb2Yoc3RydWN0IG5vZGU0MF9oZWFkZXIpKTsKKwljcHVfY3N1bSA9IHJlaXNl
cjRfY3JjMzJjKGdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUoKS0+Y3N1bV90Zm0sCisJCQkJICBj
cHVfY3N1bSwKKwkJCQkgIHpkYXRhKG5vZGUpICsgc2l6ZW9mKHN0cnVjdCBub2RlNDFfaGVhZGVy
KSwKKwkJCQkgIHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKS0+c19ibG9ja3NpemUgLQorCQkJCSAg
c2l6ZW9mKG5vZGU0MV9oZWFkZXIpKTsKKwlpZiAoY2hlY2spCisJCXJldHVybiBjcHVfY3N1bSA9
PSBuaDQxX2dldF9jc3VtKG5vZGU0MV9ub2RlX2hlYWRlcihub2RlKSk7CisJZWxzZSB7CisJCW5o
NDFfc2V0X2NzdW0obm9kZTQxX25vZGVfaGVhZGVyKG5vZGUpLCBjcHVfY3N1bSk7CisJCXJldHVy
biAxOworCX0KK30KKworLyoKKyAqIHBsdWdpbi0+dS5ub2RlLnBhcnNlCisgKiBsb29rIGZvciBk
ZXNjcmlwdGlvbiBvZiB0aGlzIG1ldGhvZCBpbiBwbHVnaW4vbm9kZS9ub2RlLmgKKyAqLworaW50
IHBhcnNlX25vZGU0MSh6bm9kZSAqbm9kZSAvKiBub2RlIHRvIHBhcnNlICovKQoreworCWludCBy
ZXQ7CisKKwlyZXQgPSBjc3VtX25vZGU0MShub2RlLCAxLyogY2hlY2sgKi8pOworCWlmICghcmV0
KSB7CisJCXdhcm5pbmcoImVkd2FyZC0xNjQ1IiwKKwkJCSJibG9jayAlbGx1OiBiYWQgY2hlY2tz
dW0uIEZTQ0s/IiwKKwkJCSpqbm9kZV9nZXRfYmxvY2soWkpOT0RFKG5vZGUpKSk7CisJCXJlaXNl
cjRfaGFuZGxlX2Vycm9yKCk7CisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJfQorCXJldHVybiBw
YXJzZV9ub2RlNDBfY29tbW9uKG5vZGUsIFJFSVNFUjRfTk9ERTQxX01BR0lDKTsKK30KKworLyoK
KyAqIHBsdWdpbi0+dS5ub2RlLmluaXQKKyAqIGxvb2sgZm9yIGRlc2NyaXB0aW9uIG9mIHRoaXMg
bWV0aG9kIGluIHBsdWdpbi9ub2RlL25vZGUuaAorICovCitpbnQgaW5pdF9ub2RlNDEoem5vZGUg
Km5vZGUgLyogbm9kZSB0byBpbml0aWFsaXNlICovKQoreworCXJldHVybiBpbml0X25vZGU0MF9j
b21tb24obm9kZSwgbm9kZV9wbHVnaW5fYnlfaWQoTk9ERTQxX0lEKSwKKwkJCQkgIHNpemVvZihu
b2RlNDFfaGVhZGVyKSwgUkVJU0VSNF9OT0RFNDFfTUFHSUMpOworfQorCisvKgorICogcGx1Z2lu
LT51Lm5vZGUuc2hpZnQKKyAqIGxvb2sgZm9yIGRlc2NyaXB0aW9uIG9mIHRoaXMgbWV0aG9kIGlu
IHBsdWdpbi9ub2RlL25vZGUuaAorICovCitpbnQgc2hpZnRfbm9kZTQxKGNvb3JkX3QgKmZyb20s
IHpub2RlICp0bywKKwkJIHNoaWZ0X2RpcmVjdGlvbiBwZW5kLAorCQkgaW50IGRlbGV0ZV9jaGls
ZCwgLyogaWYgQGZyb20tPm5vZGUgYmVjb21lcyBlbXB0eSwKKwkJCQkgICAgKiBpdCB3aWxsIGJl
IGRlbGV0ZWQgZnJvbSB0aGUKKwkJCQkgICAgKiB0cmVlIGlmIHRoaXMgaXMgc2V0IHRvIDEgKi8K
KwkJIGludCBpbmNsdWRpbmdfc3RvcF9jb29yZCwKKwkJIGNhcnJ5X3BsdWdpbl9pbmZvICppbmZv
KQoreworCXJldHVybiBzaGlmdF9ub2RlNDBfY29tbW9uKGZyb20sIHRvLCBwZW5kLCBkZWxldGVf
Y2hpbGQsCisJCQkJICAgaW5jbHVkaW5nX3N0b3BfY29vcmQsIGluZm8sCisJCQkJICAgc2l6ZW9m
KG5vZGU0MV9oZWFkZXIpKTsKK30KKworI2lmZGVmIEdVRVNTX0VYSVNUUworaW50IGd1ZXNzX25v
ZGU0MShjb25zdCB6bm9kZSAqbm9kZSAvKiBub2RlIHRvIGd1ZXNzIHBsdWdpbiBvZiAqLykKK3sK
KwlyZXR1cm4gZ3Vlc3Nfbm9kZTQwX2NvbW1vbihub2RlLCBOT0RFNDFfSUQsIFJFSVNFUjRfTk9E
RTQxX01BR0lDKTsKK30KKyNlbmRpZgorCisvKgorICogcGx1Z2luLT51Lm5vZGUubWF4X2l0ZW1f
c2l6ZQorICovCitpbnQgbWF4X2l0ZW1fc2l6ZV9ub2RlNDEodm9pZCkKK3sKKwlyZXR1cm4gcmVp
c2VyNF9nZXRfY3VycmVudF9zYigpLT5zX2Jsb2Nrc2l6ZSAtIHNpemVvZihub2RlNDFfaGVhZGVy
KSAtCisJCXNpemVvZihpdGVtX2hlYWRlcjQwKTsKK30KKworLyoKKyAgIExvY2FsIHZhcmlhYmxl
czoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAg
IGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiA4MAor
ICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNl
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZTQxLmggbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZTQxLmgKLS0tIGxpbnV4LTUuNC4xNy5v
cmlnL2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZTQxLmgJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25v
ZGU0MS5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDczMjIyMzMzICswMTAwCkBAIC0wLDAgKzEsNTAg
QEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNp
bmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2lmICFkZWZpbmVkKCBfX1JFSVNF
UjRfTk9ERTQxX0hfXyApCisjZGVmaW5lIF9fUkVJU0VSNF9OT0RFNDFfSF9fCisKKyNpbmNsdWRl
ICIuLi8uLi9mb3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vLi4vZGZvcm1hdC5oIgorI2luY2x1ZGUg
Im5vZGU0MC5oIgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKKy8qCisgKiBub2RlNDEgbGF5
b3V0OiB0aGUgc2FtZSBhcyBub2RlNDAsIGJ1dCB3aXRoIDMyLWJpdCBjaGVja3N1bQorICovCisK
K3R5cGVkZWYgc3RydWN0IG5vZGU0MV9oZWFkZXIgeworCW5vZGU0MF9oZWFkZXIgaGVhZDsKKwlk
MzIgY3N1bTsKK30gUEFDS0VEIG5vZGU0MV9oZWFkZXI7CisKKy8qCisgKiBmdW5jdGlvbnMgdG8g
Z2V0L3NldCBmaWVsZHMgb2Ygbm9kZTQxX2hlYWRlcgorICovCisjZGVmaW5lIG5oNDFfZ2V0X2Nz
dW0obmgpIGxlMzJfdG9fY3B1KGdldF91bmFsaWduZWQoJihuaCktPmNzdW0pKQorI2RlZmluZSBu
aDQxX3NldF9jc3VtKG5oLCB2YWx1ZSkgcHV0X3VuYWxpZ25lZChjcHVfdG9fbGUzMih2YWx1ZSks
ICYobmgpLT5jc3VtKQorCitpbnQgaW5pdF9ub2RlNDEoem5vZGUgKiBub2RlKTsKK2ludCBwYXJz
ZV9ub2RlNDEoem5vZGUgKm5vZGUpOworaW50IG1heF9pdGVtX3NpemVfbm9kZTQxKHZvaWQpOwor
aW50IHNoaWZ0X25vZGU0MShjb29yZF90ICpmcm9tLCB6bm9kZSAqdG8sIHNoaWZ0X2RpcmVjdGlv
biBwZW5kLAorCQkgaW50IGRlbGV0ZV9jaGlsZCwgaW50IGluY2x1ZGluZ19zdG9wX2Nvb3JkLAor
CQkgY2FycnlfcGx1Z2luX2luZm8gKmluZm8pOworaW50IGNzdW1fbm9kZTQxKHpub2RlICpub2Rl
LCBpbnQgY2hlY2spOworCisjaWZkZWYgR1VFU1NfRVhJU1RTCitpbnQgZ3Vlc3Nfbm9kZTQxKGNv
bnN0IHpub2RlICogbm9kZSk7CisjZW5kaWYKK2V4dGVybiB2b2lkIHJlaXNlcjRfaGFuZGxlX2Vy
cm9yKHZvaWQpOworCisvKiBfX1JFSVNFUjRfTk9ERTQxX0hfXyAqLworI2VuZGlmCisvKgorICAg
TG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUt
bmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmls
bC1jb2x1bW46IDgwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0t
bm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vbm9kZS9u
b2RlLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZS5jCi0tLSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGUuYwkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2lu
L25vZGUvbm9kZS5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDczMjIyMzMzICswMTAwCkBAIC0wLDAg
KzEsMTcwIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwg
bGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisKKy8qIE5vZGUgcGx1Z2lu
IGludGVyZmFjZS4KKworICAgRGVzY3JpcHRpb246IFRoZSB0cmVlIHByb3ZpZGVzIHRoZSBhYnN0
cmFjdGlvbiBvZiBmbG93cywgd2hpY2ggaXQKKyAgIGludGVybmFsbHkgZnJhZ21lbnRzIGludG8g
aXRlbXMgd2hpY2ggaXQgc3RvcmVzIGluIG5vZGVzLgorCisgICBBIGtleV9hdG9tIGlzIGEgcGll
Y2Ugb2YgZGF0YSBib3VuZCB0byBhIHNpbmdsZSBrZXkuCisKKyAgIEZvciByZWFzb25hYmxlIHNw
YWNlIGVmZmljaWVuY3kgdG8gYmUgYWNoaWV2ZWQgaXQgaXMgb2Z0ZW4KKyAgIG5lY2Vzc2FyeSB0
byBzdG9yZSBrZXlfYXRvbXMgaW4gdGhlIG5vZGVzIGluIHRoZSBmb3JtIG9mIGl0ZW1zLCB3aGVy
ZQorICAgYW4gaXRlbSBpcyBhIHNlcXVlbmNlIG9mIGtleV9hdG9tcyBvZiB0aGUgc2FtZSBvciBz
aW1pbGFyIHR5cGUuIEl0IGlzCisgICBtb3JlIHNwYWNlLWVmZmljaWVudCwgYmVjYXVzZSB0aGUg
aXRlbSBjYW4gaW1wbGVtZW50ICh2ZXJ5KQorICAgZWZmaWNpZW50IGNvbXByZXNzaW9uIG9mIGtl
eV9hdG9tJ3MgYm9kaWVzIHVzaW5nIGludGVybmFsIGtub3dsZWRnZQorICAgYWJvdXQgdGhlaXIg
c2VtYW50aWNzLCBhbmQgaXQgY2FuIG9mdGVuIGF2b2lkIGhhdmluZyBhIGtleSBmb3IgZWFjaAor
ICAga2V5X2F0b20uIEVhY2ggdHlwZSBvZiBpdGVtIGhhcyBzcGVjaWZpYyBvcGVyYXRpb25zIGlt
cGxlbWVudGVkIGJ5IGl0cworICAgaXRlbSBoYW5kbGVyIChzZWUgYmFsYW5jZS5jKS4KKworICAg
UmF0aW9uYWxlOiB0aGUgcmVzdCBvZiB0aGUgY29kZSAoc3BlY2lmaWNhbGx5IGJhbGFuY2luZyBy
b3V0aW5lcykKKyAgIGFjY2Vzc2VzIGxlYWYgbGV2ZWwgbm9kZXMgdGhyb3VnaCB0aGlzIGludGVy
ZmFjZS4gVGhpcyB3YXkgd2UgY2FuCisgICBpbXBsZW1lbnQgdmFyaW91cyBibG9jayBsYXlvdXRz
IGFuZCBldmVuIGNvbWJpbmUgdmFyaW91cyBsYXlvdXRzCisgICB3aXRoaW4gdGhlIHNhbWUgdHJl
ZS4gQmFsYW5jaW5nL2FsbG9jYXRpbmcgYWxnb3JpdGhtcyBzaG91bGQgbm90CisgICBjYXJlIGFi
b3V0IHBlY3VsaWFyaXRpZXMgb2Ygc3BsaXR0aW5nL21lcmdpbmcgc3BlY2lmaWMgaXRlbSB0eXBl
cywKKyAgIGJ1dCByYXRoZXIgc2hvdWxkIGxlYXZlIHRoYXQgdG8gdGhlIGl0ZW0ncyBpdGVtIGhh
bmRsZXIuCisKKyAgIEl0ZW1zLCBpbmNsdWRpbmcgdGhvc2UgdGhhdCBwcm92aWRlIHRoZSBhYnN0
cmFjdGlvbiBvZiBmbG93cywgaGF2ZQorICAgdGhlIHByb3BlcnR5IHRoYXQgaWYgeW91IG1vdmUg
dGhlbSBpbiBwYXJ0IG9yIGluIHdob2xlIHRvIGFub3RoZXIKKyAgIG5vZGUsIHRoZSBiYWxhbmNp
bmcgY29kZSBpbnZva2VzIHRoZWlyIGlzX2xlZnRfbWVyZ2VhYmxlKCkKKyAgIGl0ZW1fb3BlcmF0
aW9uIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZSBtZXJnZWFibGUgd2l0aCB0aGVpciBuZXcKKyAg
IG5laWdoYm9yIGluIHRoZSBub2RlIHlvdSBoYXZlIG1vdmVkIHRoZW0gdG8uICBGb3Igc29tZSBp
dGVtcyB0aGUKKyAgIGlzX2xlZnRfbWVyZ2VhYmxlKCkgZnVuY3Rpb24gYWx3YXlzIHJldHVybnMg
bnVsbC4KKworICAgV2hlbiBtb3ZpbmcgdGhlIGJvZGllcyBvZiBpdGVtcyBmcm9tIG9uZSBub2Rl
IHRvIGFub3RoZXI6CisKKyAgICAgaWYgYSBwYXJ0aWFsIGl0ZW0gaXMgc2hpZnRlZCB0byBhbm90
aGVyIG5vZGUgdGhlIGJhbGFuY2luZyBjb2RlIGludm9rZXMKKyAgICAgYW4gaXRlbSBoYW5kbGVy
IG1ldGhvZCB0byBoYW5kbGUgdGhlIGl0ZW0gc3BsaXR0aW5nLgorCisgICAgIGlmIHRoZSBiYWxh
bmNpbmcgY29kZSBuZWVkcyB0byBtZXJnZSB3aXRoIGFuIGl0ZW0gaW4gdGhlIG5vZGUgaXQKKyAg
ICAgaXMgc2hpZnRpbmcgdG8sIGl0IHdpbGwgaW52b2tlIGFuIGl0ZW0gaGFuZGxlciBtZXRob2Qg
dG8gaGFuZGxlCisgICAgIHRoZSBpdGVtIG1lcmdpbmcuCisKKyAgICAgaWYgaXQgbmVlZHMgdG8g
bW92ZSB3aG9sZSBpdGVtIGJvZGllcyB1bmNoYW5nZWQsIHRoZSBiYWxhbmNpbmcgY29kZSB1c2Vz
IHhtZW1jcHkoKQorICAgICBhZGp1c3RpbmcgdGhlIGl0ZW0gaGVhZGVycyBhZnRlciB0aGUgbW92
ZSBpcyBkb25lIHVzaW5nIHRoZSBub2RlIGhhbmRsZXIuCisqLworCisjaW5jbHVkZSAiLi4vLi4v
Zm9yd2FyZC5oIgorI2luY2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisjaW5jbHVkZSAiLi4vLi4va2V5
LmgiCisjaW5jbHVkZSAiLi4vLi4vY29vcmQuaCIKKyNpbmNsdWRlICIuLi9wbHVnaW5faGVhZGVy
LmgiCisjaW5jbHVkZSAiLi4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAibm9kZS5oIgorI2luY2x1
ZGUgIi4uL3BsdWdpbi5oIgorI2luY2x1ZGUgIi4uLy4uL3pub2RlLmgiCisjaW5jbHVkZSAiLi4v
Li4vdHJlZS5oIgorI2luY2x1ZGUgIi4uLy4uL3N1cGVyLmgiCisjaW5jbHVkZSAiLi4vLi4vcmVp
c2VyNC5oIgorCisvKioKKyAqIGxlZnRtb3N0X2tleV9pbl9ub2RlIC0gZ2V0IHRoZSBzbWFsbGVz
dCBrZXkgaW4gbm9kZQorICogQG5vZGU6CisgKiBAa2V5OiBzdG9yZSByZXN1bHQgaGVyZQorICoK
KyAqIFN0b3JlcyB0aGUgbGVmdG1vc3Qga2V5IG9mIEBub2RlIGluIEBrZXkuCisgKi8KK3JlaXNl
cjRfa2V5ICpsZWZ0bW9zdF9rZXlfaW5fbm9kZShjb25zdCB6bm9kZSAqbm9kZSwgcmVpc2VyNF9r
ZXkgKmtleSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xNjM0Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS0xNjM1Iiwga2V5ICE9IE5VTEwpOworCisJaWYgKCFub2RlX2lzX2VtcHR5KG5v
ZGUpKSB7CisJCWNvb3JkX3QgZmlyc3RfaXRlbTsKKworCQljb29yZF9pbml0X2ZpcnN0X3VuaXQo
JmZpcnN0X2l0ZW0sICh6bm9kZSAqKSBub2RlKTsKKwkJaXRlbV9rZXlfYnlfY29vcmQoJmZpcnN0
X2l0ZW0sIGtleSk7CisJfSBlbHNlCisJCSprZXkgPSAqcmVpc2VyNF9tYXhfa2V5KCk7CisJcmV0
dXJuIGtleTsKK30KKworbm9kZV9wbHVnaW4gbm9kZV9wbHVnaW5zW0xBU1RfTk9ERV9JRF0gPSB7
CisJW05PREU0MF9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X05PREVf
UExVR0lOX1RZUEUsCisJCQkuaWQgPSBOT0RFNDBfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQku
bGFiZWwgPSAidW5pZmllZCIsCisJCQkuZGVzYyA9ICJ1bmlmaWVkIG5vZGUgbGF5b3V0IiwKKwkJ
CS5saW5rYWdlID0ge05VTEwsIE5VTEx9CisJCX0sCisJCS5pdGVtX292ZXJoZWFkID0gaXRlbV9v
dmVyaGVhZF9ub2RlNDAsCisJCS5mcmVlX3NwYWNlID0gZnJlZV9zcGFjZV9ub2RlNDAsCisJCS5s
b29rdXAgPSBsb29rdXBfbm9kZTQwLAorCQkubnVtX29mX2l0ZW1zID0gbnVtX29mX2l0ZW1zX25v
ZGU0MCwKKwkJLml0ZW1fYnlfY29vcmQgPSBpdGVtX2J5X2Nvb3JkX25vZGU0MCwKKwkJLmxlbmd0
aF9ieV9jb29yZCA9IGxlbmd0aF9ieV9jb29yZF9ub2RlNDAsCisJCS5wbHVnaW5fYnlfY29vcmQg
PSBwbHVnaW5fYnlfY29vcmRfbm9kZTQwLAorCQkua2V5X2F0ID0ga2V5X2F0X25vZGU0MCwKKwkJ
LmVzdGltYXRlID0gZXN0aW1hdGVfbm9kZTQwLAorCQkuY2hlY2sgPSBjaGVja19ub2RlNDAsCisJ
CS5wYXJzZSA9IHBhcnNlX25vZGU0MCwKKwkJLmluaXQgPSBpbml0X25vZGU0MCwKKyNpZmRlZiBH
VUVTU19FWElTVFMKKwkJLmd1ZXNzID0gZ3Vlc3Nfbm9kZTQwLAorI2VuZGlmCisJCS5jaGFuZ2Vf
aXRlbV9zaXplID0gY2hhbmdlX2l0ZW1fc2l6ZV9ub2RlNDAsCisJCS5jcmVhdGVfaXRlbSA9IGNy
ZWF0ZV9pdGVtX25vZGU0MCwKKwkJLnVwZGF0ZV9pdGVtX2tleSA9IHVwZGF0ZV9pdGVtX2tleV9u
b2RlNDAsCisJCS5jdXRfYW5kX2tpbGwgPSBraWxsX25vZGU0MCwKKwkJLmN1dCA9IGN1dF9ub2Rl
NDAsCisJCS5zaGlmdCA9IHNoaWZ0X25vZGU0MCwKKwkJLnNocmlua19pdGVtID0gc2hyaW5rX2l0
ZW1fbm9kZTQwLAorCQkuZmFzdF9pbnNlcnQgPSBmYXN0X2luc2VydF9ub2RlNDAsCisJCS5mYXN0
X3Bhc3RlID0gZmFzdF9wYXN0ZV9ub2RlNDAsCisJCS5mYXN0X2N1dCA9IGZhc3RfY3V0X25vZGU0
MCwKKwkJLm1heF9pdGVtX3NpemUgPSBtYXhfaXRlbV9zaXplX25vZGU0MCwKKwkJLnByZXBhcmVf
cmVtb3ZhbCA9IHByZXBhcmVfcmVtb3ZhbF9ub2RlNDAsCisJCS5zZXRfaXRlbV9wbHVnaW4gPSBz
ZXRfaXRlbV9wbHVnaW5fbm9kZTQwCisJfSwKKwlbTk9ERTQxX0lEXSA9IHsKKwkJLmggPSB7CisJ
CQkudHlwZV9pZCA9IFJFSVNFUjRfTk9ERV9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IE5PREU0MV9J
RCwKKwkJCS5wb3BzID0gTlVMTCwKKwkJCS5sYWJlbCA9ICJub2RlNDEiLAorCQkJLmRlc2MgPSAi
bm9kZTQxIGxheW91dCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaXRl
bV9vdmVyaGVhZCA9IGl0ZW1fb3ZlcmhlYWRfbm9kZTQwLAorCQkuZnJlZV9zcGFjZSA9IGZyZWVf
c3BhY2Vfbm9kZTQwLAorCQkubG9va3VwID0gbG9va3VwX25vZGU0MCwKKwkJLm51bV9vZl9pdGVt
cyA9IG51bV9vZl9pdGVtc19ub2RlNDAsCisJCS5pdGVtX2J5X2Nvb3JkID0gaXRlbV9ieV9jb29y
ZF9ub2RlNDAsCisJCS5sZW5ndGhfYnlfY29vcmQgPSBsZW5ndGhfYnlfY29vcmRfbm9kZTQwLAor
CQkucGx1Z2luX2J5X2Nvb3JkID0gcGx1Z2luX2J5X2Nvb3JkX25vZGU0MCwKKwkJLmtleV9hdCA9
IGtleV9hdF9ub2RlNDAsCisJCS5lc3RpbWF0ZSA9IGVzdGltYXRlX25vZGU0MCwKKwkJLmNoZWNr
ID0gTlVMTCwKKwkJLnBhcnNlID0gcGFyc2Vfbm9kZTQxLAorCQkuaW5pdCA9IGluaXRfbm9kZTQx
LAorI2lmZGVmIEdVRVNTX0VYSVNUUworCQkuZ3Vlc3MgPSBndWVzc19ub2RlNDEsCisjZW5kaWYK
KwkJLmNoYW5nZV9pdGVtX3NpemUgPSBjaGFuZ2VfaXRlbV9zaXplX25vZGU0MCwKKwkJLmNyZWF0
ZV9pdGVtID0gY3JlYXRlX2l0ZW1fbm9kZTQwLAorCQkudXBkYXRlX2l0ZW1fa2V5ID0gdXBkYXRl
X2l0ZW1fa2V5X25vZGU0MCwKKwkJLmN1dF9hbmRfa2lsbCA9IGtpbGxfbm9kZTQwLAorCQkuY3V0
ID0gY3V0X25vZGU0MCwKKwkJLnNoaWZ0ID0gc2hpZnRfbm9kZTQxLAorCQkuc2hyaW5rX2l0ZW0g
PSBzaHJpbmtfaXRlbV9ub2RlNDAsCisJCS5mYXN0X2luc2VydCA9IGZhc3RfaW5zZXJ0X25vZGU0
MCwKKwkJLmZhc3RfcGFzdGUgPSBmYXN0X3Bhc3RlX25vZGU0MCwKKwkJLmZhc3RfY3V0ID0gZmFz
dF9jdXRfbm9kZTQwLAorCQkubWF4X2l0ZW1fc2l6ZSA9IG1heF9pdGVtX3NpemVfbm9kZTQxLAor
CQkucHJlcGFyZV9yZW1vdmFsID0gcHJlcGFyZV9yZW1vdmFsX25vZGU0MCwKKwkJLnNldF9pdGVt
X3BsdWdpbiA9IHNldF9pdGVtX3BsdWdpbl9ub2RlNDAsCisJCS5jc3VtID0gY3N1bV9ub2RlNDEK
Kwl9Cit9OworCisvKgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHls
ZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRh
Yi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAgIEVu
ZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3Jl
aXNlcjQvcGx1Z2luL25vZGUvbm9kZS5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9u
b2RlL25vZGUuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vbm9kZS9u
b2RlLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4x
Ny9mcy9yZWlzZXI0L3BsdWdpbi9ub2RlL25vZGUuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3MzIy
MjMzMyArMDEwMApAQCAtMCwwICsxLDI3NSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIw
MDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAq
LworCisvKiBXZSBuZWVkIGEgZGVmaW5pdGlvbiBvZiB0aGUgZGVmYXVsdCBub2RlIGxheW91dCBo
ZXJlLiAqLworCisvKiBHZW5lcmFsbHkgc3BlYWtpbmcsIGl0IGlzIGJlc3QgdG8gaGF2ZSBmcmVl
IHNwYWNlIGluIHRoZSBtaWRkbGUgb2YgdGhlCisgICBub2RlIHNvIHRoYXQgdHdvIHNldHMgb2Yg
dGhpbmdzIGNhbiBncm93IHRvd2FyZHMgaXQsIGFuZCB0byBoYXZlIHRoZQorICAgaXRlbSBib2Rp
ZXMgb24gdGhlIGxlZnQgc28gdGhhdCB0aGUgbGFzdCBvbmUgb2YgdGhlbSBncm93cyBpbnRvIGZy
ZWUKKyAgIHNwYWNlLiAgV2Ugb3B0aW1pemUgZm9yIHRoZSBjYXNlIHdoZXJlIHdlIGFwcGVuZCBu
ZXcgaXRlbXMgdG8gdGhlIGVuZAorICAgb2YgdGhlIG5vZGUsIG9yIGdyb3cgdGhlIGxhc3QgaXRl
bSwgYmVjYXVzZSBpdCBodXJ0cyBub3RoaW5nIHRvIHNvCisgICBvcHRpbWl6ZSBhbmQgaXQgaXMg
YSBjb21tb24gc3BlY2lhbCBjYXNlIHRvIGRvIG1hc3NpdmUgaW5zZXJ0aW9ucyBpbgorICAgaW5j
cmVhc2luZyBrZXkgb3JkZXIgKGFuZCBvbmUgb2YgY2FzZXMgbW9yZSBsaWtlbHkgdG8gaGF2ZSBh
IHJlYWwgdXNlcgorICAgbm90aWNlIHRoZSBkZWxheSB0aW1lIGZvcikuCisKKyAgIGZvcm1hdHRl
ZCBsZWFmIGRlZmF1bHQgbGF5b3V0OiAobGVhZjEpCisKKyAgIHxub2RlIGhlYWRlcjppdGVtIGJv
ZGllczpmcmVlIHNwYWNlOmtleSArIHBsdWdpbmlkICsgaXRlbSBvZmZzZXR8CisKKyAgIFdlIGdy
b3cgdG93YXJkcyB0aGUgbWlkZGxlLCBvcHRpbWl6aW5nIGxheW91dCBmb3IgdGhlIGNhc2Ugd2hl
cmUgd2UKKyAgIGFwcGVuZCBuZXcgaXRlbXMgdG8gdGhlIGVuZCBvZiB0aGUgbm9kZS4gIFRoZSBu
b2RlIGhlYWRlciBpcyBmaXhlZAorICAgbGVuZ3RoLiAgS2V5cywgYW5kIGl0ZW0gb2Zmc2V0cyBw
bHVzIHBsdWdpbmlkcyBmb3IgdGhlIGl0ZW1zCisgICBjb3JyZXNwb25kaW5nIHRvIHRoZW0gYXJl
IGluIGluY3JlYXNpbmcga2V5IG9yZGVyLCBhbmQgYXJlIGZpeGVkCisgICBsZW5ndGguICBJdGVt
IG9mZnNldHMgYXJlIHJlbGF0aXZlIHRvIHN0YXJ0IG9mIG5vZGUgKDE2IGJpdHMgY3JlYXRpbmcK
KyAgIGEgbm9kZSBzaXplIGxpbWl0IG9mIDY0aywgMTIgYml0cyBtaWdodCBiZSBhIGJldHRlciBj
aG9pY2UuLi4uKS4gIEl0ZW0KKyAgIGJvZGllcyBhcmUgaW4gZGVjcmVhc2luZyBrZXkgb3JkZXIu
ICBJdGVtIGJvZGllcyBoYXZlIGEgdmFyaWFibGUgc2l6ZS4KKyAgIFRoZXJlIGlzIGEgb25lIHRv
IG9uZSB0byBvbmUgbWFwcGluZyBvZiBrZXlzIHRvIGl0ZW0gb2Zmc2V0cyB0byBpdGVtCisgICBi
b2RpZXMuICBJdGVtIG9mZnNldHMgY29uc2lzdCBvZiBwb2ludGVycyB0byB0aGUgemVyb3RoIGJ5
dGUgb2YgdGhlCisgICBpdGVtIGJvZHkuICBJdGVtIGxlbmd0aCBlcXVhbHMgdGhlIHN0YXJ0IG9m
IHRoZSBuZXh0IGl0ZW0gbWludXMgdGhlCisgICBzdGFydCBvZiB0aGlzIGl0ZW0sIGV4Y2VwdCB0
aGUgemVyb3RoIGl0ZW0gd2hvc2UgbGVuZ3RoIGVxdWFscyB0aGUgZW5kCisgICBvZiB0aGUgbm9k
ZSBtaW51cyB0aGUgc3RhcnQgb2YgdGhhdCBpdGVtIChwbHVzIGEgYnl0ZSkuICBJbiBvdGhlcgor
ICAgd29yZHMsIHRoZSBpdGVtIGxlbmd0aCBpcyBub3QgcmVjb3JkZWQgYW55d2hlcmUsIGFuZCBp
dCBkb2VzIG5vdCBuZWVkCisgICB0byBiZSBzaW5jZSBpdCBpcyBjb21wdXRhYmxlLgorCisgICBM
ZWFmIHZhcmlhYmxlIGxlbmd0aCBpdGVtcyBhbmQga2V5cyBsYXlvdXQgOiAobHZhcikKKworICAg
fG5vZGUgaGVhZGVyOmtleSBvZmZzZXQgKyBpdGVtIG9mZnNldCArIHBsdWdpbmlkIHRyaXBsZXRz
OmZyZWUgc3BhY2U6a2V5IGJvZGllczppdGVtIGJvZGllc3wKKworICAgV2UgZ3JvdyB0b3dhcmRz
IHRoZSBtaWRkbGUsIG9wdGltaXppbmcgbGF5b3V0IGZvciB0aGUgY2FzZSB3aGVyZSB3ZQorICAg
YXBwZW5kIG5ldyBpdGVtcyB0byB0aGUgZW5kIG9mIHRoZSBub2RlLiAgVGhlIG5vZGUgaGVhZGVy
IGlzIGZpeGVkCisgICBsZW5ndGguICBLZXlzIGFuZCBpdGVtIG9mZnNldHMgZm9yIHRoZSBpdGVt
cyBjb3JyZXNwb25kaW5nIHRvIHRoZW0gYXJlCisgICBpbiBpbmNyZWFzaW5nIGtleSBvcmRlciwg
YW5kIGtleXMgYXJlIHZhcmlhYmxlIGxlbmd0aC4gIEl0ZW0gb2Zmc2V0cworICAgYXJlIHJlbGF0
aXZlIHRvIHN0YXJ0IG9mIG5vZGUgKDE2IGJpdHMpLiAgSXRlbSBib2RpZXMgYXJlIGluCisgICBk
ZWNyZWFzaW5nIGtleSBvcmRlci4gIEl0ZW0gYm9kaWVzIGhhdmUgYSB2YXJpYWJsZSBzaXplLiAg
VGhlcmUgaXMgYQorICAgb25lIHRvIG9uZSB0byBvbmUgbWFwcGluZyBvZiBrZXlzIHRvIGl0ZW0g
b2Zmc2V0cyB0byBpdGVtIGJvZGllcy4KKyAgIEl0ZW0gb2Zmc2V0cyBjb25zaXN0IG9mIHBvaW50
ZXJzIHRvIHRoZSB6ZXJvdGggYnl0ZSBvZiB0aGUgaXRlbSBib2R5LgorICAgSXRlbSBsZW5ndGgg
ZXF1YWxzIHRoZSBzdGFydCBvZiB0aGUgbmV4dCBpdGVtJ3Mga2V5IG1pbnVzIHRoZSBzdGFydCBv
ZgorICAgdGhpcyBpdGVtLCBleGNlcHQgdGhlIHplcm90aCBpdGVtIHdob3NlIGxlbmd0aCBlcXVh
bHMgdGhlIGVuZCBvZiB0aGUKKyAgIG5vZGUgbWludXMgdGhlIHN0YXJ0IG9mIHRoYXQgaXRlbSAo
cGx1cyBhIGJ5dGUpLgorCisgICBsZWFmIGNvbXByZXNzZWQga2V5cyBsYXlvdXQ6IChsY29tcCkK
KworICAgfG5vZGUgaGVhZGVyOmtleSBvZmZzZXQgKyBrZXkgaW5oZXJpdCArIGl0ZW0gb2Zmc2V0
IHBhaXJzOmZyZWUgc3BhY2U6a2V5IGJvZGllczppdGVtIGJvZGllc3wKKworICAgV2UgZ3JvdyB0
b3dhcmRzIHRoZSBtaWRkbGUsIG9wdGltaXppbmcgbGF5b3V0IGZvciB0aGUgY2FzZSB3aGVyZSB3
ZQorICAgYXBwZW5kIG5ldyBpdGVtcyB0byB0aGUgZW5kIG9mIHRoZSBub2RlLiAgVGhlIG5vZGUg
aGVhZGVyIGlzIGZpeGVkCisgICBsZW5ndGguICBLZXlzIGFuZCBpdGVtIG9mZnNldHMgZm9yIHRo
ZSBpdGVtcyBjb3JyZXNwb25kaW5nIHRvIHRoZW0gYXJlCisgICBpbiBpbmNyZWFzaW5nIGtleSBv
cmRlciwgYW5kIGtleXMgYXJlIHZhcmlhYmxlIGxlbmd0aC4gIFRoZSAia2V5CisgICBpbmhlcml0
IiBmaWVsZCBpbmRpY2F0ZXMgaG93IG11Y2ggb2YgdGhlIGtleSBwcmVmaXggaXMgaWRlbnRpY2Fs
IHRvCisgICB0aGUgcHJldmlvdXMga2V5IChzdGVtIGNvbXByZXNzaW9uIGFzIGRlc2NyaWJlZCBp
biAiTWFuYWdpbmcKKyAgIEdpZ2FieXRlcyIgaXMgdXNlZCkuICBrZXlfaW5oZXJpdCBpcyBhIG9u
ZSBieXRlIGludGVnZXIuICBUaGUKKyAgIGludHJhLW5vZGUgc2VhcmNoZXMgcGVyZm9ybWVkIHRo
cm91Z2ggdGhpcyBsYXlvdXQgYXJlIGxpbmVhciBzZWFyY2hlcywKKyAgIGFuZCB0aGlzIGlzIHRo
ZW9yaXplZCB0byBub3QgaHVydCBwZXJmb3JtYW5jZSBtdWNoIGR1ZSB0byB0aGUgaGlnaAorICAg
Y29zdCBvZiBwcm9jZXNzb3Igc3RhbGxzIG9uIG1vZGVybiBDUFVzLCBhbmQgdGhlIHNtYWxsIG51
bWJlciBvZiBrZXlzCisgICBpbiBhIHNpbmdsZSBub2RlLiAgSXRlbSBvZmZzZXRzIGFyZSByZWxh
dGl2ZSB0byBzdGFydCBvZiBub2RlICgxNgorICAgYml0cykuICBJdGVtIGJvZGllcyBhcmUgaW4g
ZGVjcmVhc2luZyBrZXkgb3JkZXIuICBJdGVtIGJvZGllcyBoYXZlIGEKKyAgIHZhcmlhYmxlIHNp
emUuICBUaGVyZSBpcyBhIG9uZSB0byBvbmUgdG8gb25lIG1hcHBpbmcgb2Yga2V5cyB0byBpdGVt
CisgICBvZmZzZXRzIHRvIGl0ZW0gYm9kaWVzLiAgSXRlbSBvZmZzZXRzIGNvbnNpc3Qgb2YgcG9p
bnRlcnMgdG8gdGhlCisgICB6ZXJvdGggYnl0ZSBvZiB0aGUgaXRlbSBib2R5LiAgSXRlbSBsZW5n
dGggZXF1YWxzIHRoZSBzdGFydCBvZiB0aGUKKyAgIG5leHQgaXRlbSBtaW51cyB0aGUgc3RhcnQg
b2YgdGhpcyBpdGVtLCBleGNlcHQgdGhlIHplcm90aCBpdGVtIHdob3NlCisgICBsZW5ndGggZXF1
YWxzIHRoZSBlbmQgb2YgdGhlIG5vZGUgbWludXMgdGhlIHN0YXJ0IG9mIHRoYXQgaXRlbSAocGx1
cyBhCisgICBieXRlKS4gIEluIG90aGVyIHdvcmRzLCBpdGVtIGxlbmd0aCBhbmQga2V5IGxlbmd0
aCBpcyBub3QgcmVjb3JkZWQKKyAgIGFueXdoZXJlLCBhbmQgaXQgZG9lcyBub3QgbmVlZCB0byBi
ZSBzaW5jZSBpdCBpcyBjb21wdXRhYmxlLgorCisgICBpbnRlcm5hbCBub2RlIGRlZmF1bHQgbGF5
b3V0OiAoaWRlZjEpCisKKyAgIGp1c3QgbGlrZSBsZGVmMSBleGNlcHQgdGhhdCBpdGVtIGJvZGll
cyBhcmUgZWl0aGVyIGJsb2NrbnJzIG9mCisgICBjaGlsZHJlbiBvciBleHRlbnRzLCBhbmQgbW92
aW5nIHRoZW0gbWF5IHJlcXVpcmUgdXBkYXRpbmcgcGFyZW50CisgICBwb2ludGVycyBpbiB0aGUg
bm9kZXMgdGhhdCB0aGV5IHBvaW50IHRvLgorKi8KKworLyogVGhlcmUgaXMgYW4gaW5oZXJlbnQg
My13YXkgdHJhZGVvZmYgYmV0d2VlbiBvcHRpbWl6aW5nIGFuZAorICAgZXhjaGFuZ2luZyBkaXNr
cyBiZXR3ZWVuIGRpZmZlcmVudCBhcmNoaXRlY3R1cmVzIGFuZCBjb2RlCisgICBjb21wbGV4aXR5
LiAgVGhpcyBpcyBvcHRpbWFsIGFuZCBzaW1wbGUgYW5kIGluZXhjaGFuZ2VhYmxlLgorICAgU29t
ZW9uZSBlbHNlIGNhbiBkbyB0aGUgY29kZSBmb3IgZXhjaGFuZ2luZyBkaXNrcyBhbmQgbWFrZSBp
dAorICAgY29tcGxleC4gSXQgd291bGQgbm90IGJlIHRoYXQgaGFyZC4gIFVzaW5nIG90aGVyIHRo
YW4gdGhlIFBBR0VfU0laRQorICAgbWlnaHQgYmUgc3Vib3B0aW1hbC4KKyovCisKKyNpZiAhZGVm
aW5lZCggX19SRUlTRVI0X05PREVfSF9fICkKKyNkZWZpbmUgX19SRUlTRVI0X05PREVfSF9fCisK
KyNkZWZpbmUgTEVBRjQwX05PREVfU0laRSBQQUdFX0NBQ0hFX1NJWkUKKworI2luY2x1ZGUgIi4u
Ly4uL2Rmb3JtYXQuaCIKKyNpbmNsdWRlICIuLi9wbHVnaW5faGVhZGVyLmgiCisKKyNpbmNsdWRl
IDxsaW51eC90eXBlcy5oPgorCit0eXBlZGVmIGVudW0geworCU5TX0ZPVU5EID0gMCwKKwlOU19O
T1RfRk9VTkQgPSAtRU5PRU5UCit9IG5vZGVfc2VhcmNoX3Jlc3VsdDsKKworLyogTWF4aW1hbCBw
b3NzaWJsZSBzcGFjZSBvdmVyaGVhZCBmb3IgY3JlYXRpb24gb2YgbmV3IGl0ZW0gaW4gYSBub2Rl
ICovCisjZGVmaW5lIFJFSVNFUjRfTk9ERV9NQVhfT1ZFUkhFQUQgKCBzaXplb2YoIHJlaXNlcjRf
a2V5ICkgKyAzMiApCisKK3R5cGVkZWYgZW51bSB7CisJUkVJU0VSNF9OT0RFX0RLRVlTID0gKDEg
PDwgMCksCisJUkVJU0VSNF9OT0RFX1RSRUVfU1RBQkxFID0gKDEgPDwgMSkKK30gcmVpc2VyNF9u
b2RlX2NoZWNrX2ZsYWc7CisKKy8qIGN1dCBhbmQgY3V0X2FuZF9raWxsIGhhdmUgdG9vIGxvbmcg
bGlzdCBvZiBwYXJhbWV0ZXJzLiBUaGlzIHN0cnVjdHVyZSBpcyBqdXN0IHRvIHNhZmUgc29tZSBz
cGFjZSBvbiBzdGFjayAqLworc3RydWN0IGN1dF9saXN0IHsKKwljb29yZF90ICpmcm9tOworCWNv
b3JkX3QgKnRvOworCWNvbnN0IHJlaXNlcjRfa2V5ICpmcm9tX2tleTsKKwljb25zdCByZWlzZXI0
X2tleSAqdG9fa2V5OworCXJlaXNlcjRfa2V5ICpzbWFsbGVzdF9yZW1vdmVkOworCWNhcnJ5X3Bs
dWdpbl9pbmZvICppbmZvOworCV9fdTMyIGZsYWdzOworCXN0cnVjdCBpbm9kZSAqaW5vZGU7CS8q
IHRoaXMgaXMgdG8gcGFzcyBsaXN0IG9mIGVmbHVzaGVkIGpub2RlcyBkb3duIHRvIGV4dGVudF9r
aWxsX2hvb2sgKi8KKwlsb2NrX2hhbmRsZSAqbGVmdDsKKwlsb2NrX2hhbmRsZSAqcmlnaHQ7Cit9
OworCitzdHJ1Y3QgY2FycnlfY3V0X2RhdGE7CitzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhOworCisv
KiBUaGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIG5vZGUgcGx1Z2luIGlzIHRvIHN0b3JlIGFuZCBn
aXZlIGFjY2VzcworICAgdG8gdGhlIHNlcXVlbmNlIG9mIGl0ZW1zIHdpdGhpbiB0aGUgbm9kZS4g
ICovCit0eXBlZGVmIHN0cnVjdCBub2RlX3BsdWdpbiB7CisJLyogZ2VuZXJpYyBwbHVnaW4gZmll
bGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCisJLyogY2FsY3VsYXRlcyB0aGUgYW1vdW50IG9m
IHNwYWNlIHRoYXQgd2lsbCBiZSByZXF1aXJlZCB0byBzdG9yZSBhbgorCSAgIGl0ZW0gd2hpY2gg
aXMgaW4gYWRkaXRpb24gdG8gdGhlIHNwYWNlIGNvbnN1bWVkIGJ5IHRoZSBpdGVtIGJvZHkuCisJ
ICAgKHRoZSBzcGFjZSBjb25zdW1lZCBieSB0aGUgaXRlbSBib2R5IGNhbiBiZSBnb3R0ZW4gYnkg
Y2FsbGluZworCSAgIGl0ZW0tPmVzdGltYXRlKSAqLworCSBzaXplX3QoKml0ZW1fb3ZlcmhlYWQp
IChjb25zdCB6bm9kZSAqIG5vZGUsIGZsb3dfdCAqIGYpOworCisJLyogcmV0dXJucyBmcmVlIHNw
YWNlIGJ5IGxvb2tpbmcgaW50byBub2RlIChpLmUuLCB3aXRob3V0IHVzaW5nCisJICAgem5vZGUt
PmZyZWVfc3BhY2UpLiAqLworCSBzaXplX3QoKmZyZWVfc3BhY2UpICh6bm9kZSAqIG5vZGUpOwor
CS8qIHNlYXJjaCB3aXRoaW4gdGhlIG5vZGUgZm9yIHRoZSBvbmUgaXRlbSB3aGljaCBtaWdodAor
CSAgIGNvbnRhaW4gdGhlIGtleSwgaW52b2tpbmcgaXRlbS0+c2VhcmNoX3dpdGhpbiB0byBzZWFy
Y2ggd2l0aGluCisJICAgdGhhdCBpdGVtIHRvIHNlZSBpZiBpdCBpcyBpbiB0aGVyZSAqLworCSBu
b2RlX3NlYXJjaF9yZXN1bHQoKmxvb2t1cCkgKHpub2RlICogbm9kZSwgY29uc3QgcmVpc2VyNF9r
ZXkgKiBrZXksCisJCQkJICAgICAgbG9va3VwX2JpYXMgYmlhcywgY29vcmRfdCAqIGNvb3JkKTsK
KwkvKiBudW1iZXIgb2YgaXRlbXMgaW4gbm9kZSAqLworCWludCAoKm51bV9vZl9pdGVtcykgKGNv
bnN0IHpub2RlICogbm9kZSk7CisKKwkvKiBzdG9yZSBpbmZvcm1hdGlvbiBhYm91dCBpdGVtIGlu
IEBjb29yZCBpbiBAZGF0YSAqLworCS8qIGJyZWFrIGludG8gc2V2ZXJhbCBub2RlIG9wcywgZG9u
J3QgYWRkIGFueSBtb3JlIHVzZXMgb2YgdGhpcyBiZWZvcmUgZG9pbmcgc28gKi8KKwkvKmludCAo
ICppdGVtX2F0ICkoIGNvbnN0IGNvb3JkX3QgKmNvb3JkLCByZWlzZXI0X2l0ZW1fZGF0YSAqZGF0
YSApOyAqLworCWNoYXIgKigqaXRlbV9ieV9jb29yZCkgKGNvbnN0IGNvb3JkX3QgKiBjb29yZCk7
CisJaW50ICgqbGVuZ3RoX2J5X2Nvb3JkKSAoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKKwlpdGVt
X3BsdWdpbiAqKCpwbHVnaW5fYnlfY29vcmQpIChjb25zdCBjb29yZF90ICogY29vcmQpOworCisJ
Lyogc3RvcmUgaXRlbSBrZXkgaW4gQGtleSAqLworCXJlaXNlcjRfa2V5ICooKmtleV9hdCkgKGNv
bnN0IGNvb3JkX3QgKiBjb29yZCwgcmVpc2VyNF9rZXkgKiBrZXkpOworCS8qIGNvbnNlcnZhdGl2
ZWx5IGVzdGltYXRlIHdoZXRoZXIgdW5pdCBvZiB3aGF0IHNpemUgY2FuIGZpdAorCSAgIGludG8g
bm9kZS4gVGhpcyBlc3RpbWF0aW9uIHNob3VsZCBiZSBwZXJmb3JtZWQgd2l0aG91dAorCSAgIGFj
dHVhbGx5IGxvb2tpbmcgaW50byB0aGUgbm9kZSdzIGNvbnRlbnQgKGZyZWUgc3BhY2UgaXMgc2F2
ZWQgaW4KKwkgICB6bm9kZSkuICovCisJIHNpemVfdCgqZXN0aW1hdGUpICh6bm9kZSAqIG5vZGUp
OworCisJLyogcGVyZm9ybXMgZXZlcnkgY29uc2lzdGVuY3kgY2hlY2sgdGhlIG5vZGUgcGx1Z2lu
IGF1dGhvciBjb3VsZAorCSAgIGltYWdpbmUuIE9wdGlvbmFsLiAqLworCWludCAoKmNoZWNrKSAo
Y29uc3Qgem5vZGUgKiBub2RlLCBfX3UzMiBmbGFncywgY29uc3QgY2hhciAqKmVycm9yKTsKKwor
CS8qIENhbGxlZCB3aGVuIG5vZGUgaXMgcmVhZCBpbnRvIG1lbW9yeSBhbmQgbm9kZSBwbHVnaW4g
aXMKKwkgICBhbHJlYWR5IGRldGVjdGVkLiBUaGlzIHNob3VsZCByZWFkIHNvbWUgZGF0YSBpbnRv
IHpub2RlIChsaWtlIGZyZWUKKwkgICBzcGFjZSBjb3VudGVyKSBhbmQsIG9wdGlvbmFsbHksIGNo
ZWNrIGRhdGEgY29uc2lzdGVuY3kuCisJICovCisJaW50ICgqcGFyc2UpICh6bm9kZSAqIG5vZGUp
OworCS8qIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBvbiBhIG5ldyBub2RlIHRvIGluaXRpYWxpc2Ug
cGx1Z2luIHNwZWNpZmljCisJICAgZGF0YSAoaGVhZGVyLCBldGMuKSAqLworCWludCAoKmluaXQp
ICh6bm9kZSAqIG5vZGUpOworCS8qIENoZWNrIHdoZXRoZXIgQG5vZGUgY29udGVudCBjb25mb3Jt
cyB0byB0aGlzIHBsdWdpbiBmb3JtYXQuCisJICAgUHJvYmFibHkgb25seSB1c2VmdWwgYWZ0ZXIg
c3VwcG9ydCBmb3Igb2xkIFYzLnggZm9ybWF0cyBpcyBhZGRlZC4KKwkgICBVbmNvbW1lbnQgYWZ0
ZXIgNC4wIG9ubHkuCisJICovCisJLyogICAgICBpbnQgKCAqZ3Vlc3MgKSggY29uc3Qgem5vZGUg
Km5vZGUgKTsgKi8KKyNpZiBSRUlTRVI0X0RFQlVHCisJdm9pZCAoKnByaW50KSAoY29uc3QgY2hh
ciAqcHJlZml4LCBjb25zdCB6bm9kZSAqIG5vZGUsIF9fdTMyIGZsYWdzKTsKKyNlbmRpZgorCS8q
IGNoYW5nZSBzaXplIG9mIEBpdGVtIGJ5IEBieSBieXRlcy4gQGl0ZW0tPm5vZGUgaGFzIGVub3Vn
aCBmcmVlCisJICAgc3BhY2UuIFdoZW4gQGJ5ID4gMCAtIGZyZWUgc3BhY2UgaXMgYXBwZW5kZWQg
dG8gZW5kIG9mIGl0ZW0uIFdoZW4KKwkgICBAYnkgPCAwIC0gaXRlbSBpcyB0cnVuY2F0ZWQgLSBp
dCBpcyBhc3N1bWVkIHRoYXQgbGFzdCBAYnkgYnl0ZXMgaWYKKwkgICB0aGUgaXRlbSBhcmUgZnJl
ZWQgYWxyZWFkeSAqLworCXZvaWQgKCpjaGFuZ2VfaXRlbV9zaXplKSAoY29vcmRfdCAqIGl0ZW0s
IGludCBieSk7CisKKwkvKiBjcmVhdGUgbmV3IGl0ZW0gQGxlbmd0aCBieXRlcyBsb25nIGluIGNv
b3JkIEB0YXJnZXQgKi8KKwlpbnQgKCpjcmVhdGVfaXRlbSkgKGNvb3JkX3QgKiB0YXJnZXQsIGNv
bnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJICAgIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSwg
Y2FycnlfcGx1Z2luX2luZm8gKiBpbmZvKTsKKworCS8qIHVwZGF0ZSBrZXkgb2YgaXRlbS4gKi8K
Kwl2b2lkICgqdXBkYXRlX2l0ZW1fa2V5KSAoY29vcmRfdCAqIHRhcmdldCwgY29uc3QgcmVpc2Vy
NF9rZXkgKiBrZXksCisJCQkJIGNhcnJ5X3BsdWdpbl9pbmZvICogaW5mbyk7CisKKwlpbnQgKCpj
dXRfYW5kX2tpbGwpIChzdHJ1Y3QgY2Fycnlfa2lsbF9kYXRhICosIGNhcnJ5X3BsdWdpbl9pbmZv
ICopOworCWludCAoKmN1dCkgKHN0cnVjdCBjYXJyeV9jdXRfZGF0YSAqLCBjYXJyeV9wbHVnaW5f
aW5mbyAqKTsKKworCS8qCisJICogc2hyaW5rIGl0ZW0gcG9pbnRlZCB0byBieSBAY29vcmQgYnkg
QGRlbHRhIGJ5dGVzLgorCSAqLworCWludCAoKnNocmlua19pdGVtKSAoY29vcmRfdCAqIGNvb3Jk
LCBpbnQgZGVsdGEpOworCisJLyogY29weSBhcyBtdWNoIGFzIHBvc3NpYmxlIGJ1dCBub3QgbW9y
ZSB0aGFuIHVwIHRvIEBzdG9wIGZyb20KKwkgICBAc3RvcC0+bm9kZSB0byBAdGFyZ2V0LiBJZiAo
cGVuZCA9PSBhcHBlbmQpIHRoZW4gZGF0YSBmcm9tIGJlZ2lubmluZyBvZgorCSAgIEBzdG9wLT5u
b2RlIGFyZSBjb3BpZWQgdG8gdGhlIGVuZCBvZiBAdGFyZ2V0LiBJZiAocGVuZCA9PSBwcmVwZW5k
KSB0aGVuCisJICAgZGF0YSBmcm9tIHRoZSBlbmQgb2YgQHN0b3AtPm5vZGUgYXJlIGNvcGllZCB0
byB0aGUgYmVnaW5uaW5nIG9mCisJICAgQHRhcmdldC4gQ29waWVkIGRhdGEgYXJlIHJlbW92ZWQg
ZnJvbSBAc3RvcC0+bm9kZS4gSW5mb3JtYXRpb24KKwkgICBhYm91dCB3aGF0IHRvIGRvIG9uIHVw
cGVyIGxldmVsIGlzIHN0b3JlZCBpbiBAdG9kbyAqLworCWludCAoKnNoaWZ0KSAoY29vcmRfdCAq
IHN0b3AsIHpub2RlICogdGFyZ2V0LCBzaGlmdF9kaXJlY3Rpb24gcGVuZCwKKwkJICAgICAgaW50
IGRlbGV0ZV9ub2RlLCBpbnQgaW5jbHVkaW5nX2luc2VydF9jb29yZCwKKwkJICAgICAgY2Fycnlf
cGx1Z2luX2luZm8gKiBpbmZvKTsKKwkvKiByZXR1cm4gdHJ1ZSBpZiB0aGlzIG5vZGUgYWxsb3dz
IHNraXAgY2FycnkoKSBpbiBzb21lIHNpdHVhdGlvbnMKKwkgICAoc2VlIGZzL3JlaXNlcjQvdHJl
ZS5jOmluc2VydF9ieV9jb29yZCgpKS4gUmVpc2VyMy54IGZvcm1hdAorCSAgIGVtdWxhdGlvbiBk
b2Vzbid0LgorCisJICAgVGhpcyB3aWxsIHNwZWVkdXAgaW5zZXJ0aW9ucyB0aGF0IGRvZXNuJ3Qg
cmVxdWlyZSB1cGRhdGVzIHRvIHRoZQorCSAgIHBhcmVudCwgYnkgYnlwYXNzaW5nIGluaXRpYWxp
c2F0aW9uIG9mIGNhcnJ5KCkgc3RydWN0dXJlcy4gSXQncworCSAgIGJlbGlldmVkIHRoYXQgbWFq
b3JpdHkgb2YgaW5zZXJ0aW9ucyB3aWxsIGZpdCB0aGVyZS4KKworCSAqLworCWludCAoKmZhc3Rf
aW5zZXJ0KSAoY29uc3QgY29vcmRfdCAqIGNvb3JkKTsKKwlpbnQgKCpmYXN0X3Bhc3RlKSAoY29u
c3QgY29vcmRfdCAqIGNvb3JkKTsKKwlpbnQgKCpmYXN0X2N1dCkgKGNvbnN0IGNvb3JkX3QgKiBj
b29yZCk7CisJLyogdGhpcyBsaW1pdHMgbWF4IHNpemUgb2YgaXRlbSB3aGljaCBjYW4gYmUgaW5z
ZXJ0ZWQgaW50byBhIG5vZGUgYW5kCisJICAgbnVtYmVyIG9mIGJ5dGVzIGl0ZW0gaW4gYSBub2Rl
IG1heSBiZSBhcHBlbmRlZCB3aXRoICovCisJaW50ICgqbWF4X2l0ZW1fc2l6ZSkgKHZvaWQpOwor
CWludCAoKnByZXBhcmVfcmVtb3ZhbCkgKHpub2RlICogZW1wdHksIGNhcnJ5X3BsdWdpbl9pbmZv
ICogaW5mbyk7CisJLyogY2hhbmdlIHBsdWdpbiBpZCBvZiBpdGVtcyB3aGljaCBhcmUgaW4gYSBu
b2RlIGFscmVhZHkuIEN1cnJlbnRseSBpdCBpcyBVc2VkIGluIHRhaWwgY29udmVyc2lvbiBmb3Ig
cmVndWxhcgorCSAqIGZpbGVzICovCisJaW50ICgqc2V0X2l0ZW1fcGx1Z2luKSAoY29vcmRfdCAq
IGNvb3JkLCBpdGVtX2lkKTsKKwkvKiBjYWxjdWxhdGUgYW5kIGNoZWNrL3VwZGF0ZSB6bm9kZSdz
IGNoZWNrc3VtCisJICAgKGlmIEBjaGVjayBpcyB0cnVlLCB0aGVuIGNoZWNrLCBvdGhlcndpc2Ug
dXBkYXRlKSAqLworCWludCAoKmNzdW0pKHpub2RlICpub2RlLCBpbnQgY2hlY2spOworfSBub2Rl
X3BsdWdpbjsKKwordHlwZWRlZiBlbnVtIHsKKwlOT0RFNDBfSUQsIC8qIHN0YW5kYXJkIHVuaWZp
ZWQgbm9kZSBsYXlvdXQgdXNlZCBmb3IgYm90aCwKKwkJICAgICAgbGVhZiBhbmQgaW50ZXJuYWwg
bm9kZXMgKi8KKwlOT0RFNDFfSUQsIC8qIG5vZGUgbGF5b3V0IHdpdGggYSBjaGVja3N1bSAqLwor
CUxBU1RfTk9ERV9JRAorfSByZWlzZXI0X25vZGVfaWQ7CisKK2V4dGVybiByZWlzZXI0X2tleSAq
bGVmdG1vc3Rfa2V5X2luX25vZGUoY29uc3Qgem5vZGUgKiBub2RlLCByZWlzZXI0X2tleSAqIGtl
eSk7CisjaWYgUkVJU0VSNF9ERUJVRworZXh0ZXJuIHZvaWQgcHJpbnRfbm9kZV9jb250ZW50KGNv
bnN0IGNoYXIgKnByZWZpeCwgY29uc3Qgem5vZGUgKiBub2RlLAorCQkJICAgICAgIF9fdTMyIGZs
YWdzKTsKKyNlbmRpZgorCitleHRlcm4gdm9pZCBpbmRlbnRfem5vZGUoY29uc3Qgem5vZGUgKiBu
b2RlKTsKKwordHlwZWRlZiBzdHJ1Y3QgY29tbW9uX25vZGVfaGVhZGVyIHsKKwkvKgorCSAqIGlk
ZW50aWZpZXIgb2Ygbm9kZSBwbHVnaW4uIE11c3QgYmUgbG9jYXRlZCBhdCB0aGUgdmVyeSBiZWdp
bm5pbmcgb2YKKwkgKiBhIG5vZGUuCisJICovCisJX19sZTE2IHBsdWdpbl9pZDsKK30gY29tbW9u
X25vZGVfaGVhZGVyOworCisvKiBfX1JFSVNFUjRfTk9ERV9IX18gKi8KKyNlbmRpZgorLyoKKyAq
IExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2Rl
LW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZp
bGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4g
LS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9vYmpl
Y3QuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vb2JqZWN0LmMKLS0tIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL29iamVjdC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAu
MDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vb2JqZWN0
LmMJMjAyMC0wMi0wNSAyMDo1NDoxOC4yMjY1MDg3MDIgKzAxMDAKQEAgLTAsMCArMSw1NTQgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qCisgKiBFeGFtcGxlcyBvZiBv
YmplY3QgcGx1Z2luczogZmlsZSwgZGlyZWN0b3J5LCBzeW1saW5rLCBzcGVjaWFsIGZpbGUuCisg
KgorICogUGx1Z2lucyBhc3NvY2lhdGVkIHdpdGggaW5vZGU6CisgKgorICogUGx1Z2luIG9mIGlu
b2RlIGlzIHBsdWdpbiByZWZlcmVuY2VkIGJ5IHBsdWdpbi1pZCBmaWVsZCBvZiBvbi1kaXNrCisg
KiBzdGF0LWRhdGEuIEhvdyB3ZSBzdG9yZSB0aGlzIHBsdWdpbiBpbiBpbi1jb3JlIGlub2RlIGlz
IG5vdAorICogaW1wb3J0YW50LiBDdXJyZW50bHkgcG9pbnRlcnMgYXJlIHVzZWQsIGFub3RoZXIg
dmFyaWFudCBpcyB0byBzdG9yZSBvZmZzZXRzCisgKiBhbmQgZG8gYXJyYXkgbG9va3VwIG9uIGVh
Y2ggYWNjZXNzLgorICoKKyAqIE5vdywgZWFjaCBpbm9kZSBoYXMgb25lIHNlbGVjdGVkIHBsdWdp
bjogb2JqZWN0IHBsdWdpbiB0aGF0CisgKiBkZXRlcm1pbmVzIHdoYXQgdHlwZSBvZiBmaWxlIHRo
aXMgb2JqZWN0IGlzOiBkaXJlY3RvcnksIHJlZ3VsYXIgZXRjLgorICoKKyAqIFRoaXMgbWFpbiBw
bHVnaW4gY2FuIHVzZSBvdGhlciBwbHVnaW5zIHRoYXQgYXJlIHRodXMgc3Vib3JkaW5hdGVkIHRv
CisgKiBpdC4gRGlyZWN0b3J5IGluc3RhbmNlIG9mIG9iamVjdCBwbHVnaW4gdXNlcyBoYXNoOyBy
ZWd1bGFyIGZpbGUKKyAqIGluc3RhbmNlIHVzZXMgdGFpbCBwb2xpY3kgcGx1Z2luLgorICoKKyAq
IE9iamVjdCBwbHVnaW4gaXMgZWl0aGVyIHRha2VuIGZyb20gaWQgaW4gc3RhdC1kYXRhIG9yIGd1
ZXNzZWQgZnJvbQorICogaV9tb2RlIGJpdHMuIE9uY2UgaXQgaXMgZXN0YWJsaXNoZWQgd2UgYXNr
IGl0IHRvIGluc3RhbGwgaXRzCisgKiBzdWJvcmRpbmF0ZSBwbHVnaW5zLCBieSBsb29raW5nIGFn
YWluIGluIHN0YXQtZGF0YSBvciBpbmhlcml0aW5nIHRoZW0KKyAqIGZyb20gcGFyZW50LgorICoK
KyAqIEhvdyBuZXcgaW5vZGUgaXMgaW5pdGlhbGl6ZWQgZHVyaW5nIC0+cmVhZF9pbm9kZSgpOgor
ICogMSByZWFkIHN0YXQtZGF0YSBhbmQgaW5pdGlhbGl6ZSBpbm9kZSBmaWVsZHM6IGlfc2l6ZSwg
aV9tb2RlLAorICogICBpX2dlbmVyYXRpb24sIGNhcGFiaWxpdGllcyBldGMuCisgKiAyIHJlYWQg
cGx1Z2luIGlkIGZyb20gc3RhdCBkYXRhIG9yIHRyeSB0byBndWVzcyBwbHVnaW4gaWQKKyAqICAg
ZnJvbSBpbm9kZS0+aV9tb2RlIGJpdHMgaWYgcGx1Z2luIGlkIGlzIG1pc3NpbmcuCisgKiAzIENh
bGwgLT5pbml0X2lub2RlKCkgbWV0aG9kIG9mIHN0YXQtZGF0YSBwbHVnaW4gdG8gaW5pdGlhbGlz
ZSBpbm9kZSBmaWVsZHMuCisgKgorICogTklLSVRBLUZJWE1FLUhBTlM6IGNhbiB5b3Ugc2F5IGEg
bGl0dGxlIGFib3V0IDEgYmVpbmcgZG9uZSBiZWZvcmUgMz8gIFdoYXQKKyAqIGlmIHN0YXQgZGF0
YSBkb2VzIGNvbnRhaW4gaV9zaXplLCBldGMuLCBkdWUgdG8gaXQgYmVpbmcgYW4gdW51c3VhbCBw
bHVnaW4/CisgKgorICogNCBDYWxsIC0+YWN0aXZhdGUoKSBtZXRob2Qgb2Ygb2JqZWN0J3MgcGx1
Z2luLiBQbHVnaW4gaXMgZWl0aGVyIHJlYWQgZnJvbQorICogICAgZnJvbSBzdGF0LWRhdGEgb3Ig
Z3Vlc3NlZCBmcm9tIG1vZGUgYml0cworICogNSBDYWxsIC0+aW5oZXJpdCgpIG1ldGhvZCBvZiBv
YmplY3QgcGx1Z2luIHRvIGluaGVyaXQgYXMgeWV0IHVuIGluaXRpYWxpemVkCisgKiAgICBwbHVn
aW5zIGZyb20gcGFyZW50LgorICoKKyAqIEVhc3kgaW5kdWN0aW9uIHByb3ZlcyB0aGF0IG9uIGxh
c3Qgc3RlcCBhbGwgcGx1Z2lucyBvZiBpbm9kZSB3b3VsZCBiZQorICogaW5pdGlhbGl6ZWQuCisg
KgorICogV2hlbiBjcmVhdGluZyBuZXcgb2JqZWN0OgorICogMSBvYnRhaW4gb2JqZWN0IHBsdWdp
biBpZCAoc2VlIG5leHQgcGVyaW9kKQorICogTklLSVRBLUZJWE1FLUhBTlM6IHBlcmlvZD8KKyAq
IDIgLT5pbnN0YWxsKCkgdGhpcyBwbHVnaW4KKyAqIDMgLT5pbmhlcml0KCkgdGhlIHJlc3QgZnJv
bSB0aGUgcGFyZW50CisgKgorICogV2UgbmVlZCBzb21lIGV4YW1wbGVzIG9mIGNyZWF0aW5nIGFu
IG9iamVjdCB3aXRoIGRlZmF1bHQgYW5kIG5vbi1kZWZhdWx0CisgKiBwbHVnaW4gaWRzLiAgTmlr
aXRhLCBwbGVhc2UgY3JlYXRlIHRoZW0uCisgKi8KKworI2luY2x1ZGUgIi4uL2lub2RlLmgiCisK
K2ludCBfYnVnb3Aodm9pZCkKK3sKKwlCVUdfT04oMSk7CisJcmV0dXJuIDA7Cit9CisKKyNkZWZp
bmUgYnVnb3AgKCh2b2lkICopX2J1Z29wKQorCitzdGF0aWMgaW50IGZsb3dfYnlfaW5vZGVfYnVn
b3Aoc3RydWN0IGlub2RlICppbm9kZSwgY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJCSAgICAg
ICBpbnQgdXNlciwgbG9mZl90IHNpemUsCisJCQkgICAgICAgbG9mZl90IG9mZiwgcndfb3Agb3As
IGZsb3dfdCAqZikKK3sKKwlCVUdfT04oMSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQg
a2V5X2J5X2lub2RlX2J1Z29wKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvZmZfdCBvZmYsIHJlaXNl
cjRfa2V5ICprZXkpCit7CisJQlVHX09OKDEpOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50
IF9kdW1teW9wKHZvaWQpCit7CisJcmV0dXJuIDA7Cit9CisKKyNkZWZpbmUgZHVtbXlvcCAoKHZv
aWQgKilfZHVtbXlvcCkKKworc3RhdGljIGludCBjaGFuZ2VfZmlsZShzdHJ1Y3QgaW5vZGUgKmlu
b2RlLAorCQkgICAgICAgcmVpc2VyNF9wbHVnaW4gKiBwbHVnaW4sCisJCSAgICAgICBwc2V0X21l
bWJlciBtZW1iKQoreworCS8qIGNhbm5vdCBjaGFuZ2Ugb2JqZWN0IHBsdWdpbiBvZiBhbHJlYWR5
IGV4aXN0aW5nIG9iamVjdCAqLworCWlmIChtZW1iID09IFBTRVRfRklMRSkKKwkJcmV0dXJuIFJF
VEVSUigtRUlOVkFMKTsKKworCS8qIENoYW5nZSBQU0VUX0NSRUFURSAqLworCXJldHVybiBhc2V0
X3NldF91bnNhZmUoJnJlaXNlcjRfaW5vZGVfZGF0YShpbm9kZSktPnBzZXQsIG1lbWIsIHBsdWdp
bik7Cit9CisKK3N0YXRpYyByZWlzZXI0X3BsdWdpbl9vcHMgZmlsZV9wbHVnaW5fb3BzID0gewor
CS5jaGFuZ2UgPSBjaGFuZ2VfZmlsZQorfTsKKworc3RhdGljIHN0cnVjdCBpbm9kZV9vcGVyYXRp
b25zICAgICAgICAgbnVsbF9pX29wcyA9IHsuY3JlYXRlID0gTlVMTH07CitzdGF0aWMgc3RydWN0
IGZpbGVfb3BlcmF0aW9ucyAgICAgICAgICBudWxsX2Zfb3BzID0gey5vd25lciA9IE5VTEx9Owor
c3RhdGljIHN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMgbnVsbF9hX29wcyA9IHsud3Jp
dGVwYWdlID0gTlVMTH07CisKKy8qCisgKiBSZWlzZXI0IHByb3ZpZGVzIGZvciBWRlMgZWl0aGVy
IGRpc3BhdGNoZXIsIG9yIGNvbW1vbiAoZm9wLAorICogaW9wLCBhb3ApIG1ldGhvZC4KKyAqCisg
KiBEaXNwYXRjaGVycyAoc3VmZml4ZWQgd2l0aCAiZGlzcGF0Y2giKSBwYXNzIG1hbmFnZW1lbnQg
dG8KKyAqIHByb3BlciBwbHVnaW4gaW4gYWNjb3JkYW5jZSB3aXRoIHBsdWdpbiB0YWJsZSAocHNl
dCkgbG9jYXRlZAorICogaW4gdGhlIHByaXZhdGUgcGFydCBvZiBpbm9kZS4KKyAqCisgKiBDb21t
b24gbWV0aG9kcyBhcmUgTk9UIHByZWZpeGVkIHdpdGggImRpc3BhdGNoIi4gVGhleSBhcmUKKyAq
IHRoZSBzYW1lIGZvciBhbGwgcGx1Z2lucyBvZiBGSUxFIGludGVyZmFjZSwgYW5kLCBoZW5jZSwg
bm8KKyAqIGRpc3BhdGNoaW5nIGlzIG5lZWRlZC4KKyAqLworCisvKgorICogVkZTIG1ldGhvZHMg
Zm9yIHJlZ3VsYXIgZmlsZXMKKyAqLworc3RhdGljIHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIHJl
Z3VsYXJfZmlsZV9pX29wcyA9IHsKKwkucGVybWlzc2lvbiA9IHJlaXNlcjRfcGVybWlzc2lvbl9j
b21tb24sCisJLnNldGF0dHIgPSByZWlzZXI0X3NldGF0dHJfZGlzcGF0Y2gsCisJLmdldGF0dHIg
PSByZWlzZXI0X2dldGF0dHJfY29tbW9uCit9Oworc3RhdGljIHN0cnVjdCBmaWxlX29wZXJhdGlv
bnMgcmVndWxhcl9maWxlX2Zfb3BzID0geworCS5sbHNlZWsgPSBnZW5lcmljX2ZpbGVfbGxzZWVr
LAorCS5yZWFkID0gcmVpc2VyNF9yZWFkX2Rpc3BhdGNoLAorCS53cml0ZSA9IHJlaXNlcjRfd3Jp
dGVfZGlzcGF0Y2gsCisJLnJlYWRfaXRlciA9IGdlbmVyaWNfZmlsZV9yZWFkX2l0ZXIsCisJLnVu
bG9ja2VkX2lvY3RsID0gcmVpc2VyNF9pb2N0bF9kaXNwYXRjaCwKKyNpZmRlZiBDT05GSUdfQ09N
UEFUCisJLmNvbXBhdF9pb2N0bCA9IHJlaXNlcjRfaW9jdGxfZGlzcGF0Y2gsCisjZW5kaWYKKwku
bW1hcCA9IHJlaXNlcjRfbW1hcF9kaXNwYXRjaCwKKwkub3BlbiA9IHJlaXNlcjRfb3Blbl9kaXNw
YXRjaCwKKwkucmVsZWFzZSA9IHJlaXNlcjRfcmVsZWFzZV9kaXNwYXRjaCwKKwkuZnN5bmMgPSBy
ZWlzZXI0X3N5bmNfZmlsZV9jb21tb24sCisJLnNwbGljZV9yZWFkID0gZ2VuZXJpY19maWxlX3Nw
bGljZV9yZWFkLAorfTsKK3N0YXRpYyBzdHJ1Y3QgYWRkcmVzc19zcGFjZV9vcGVyYXRpb25zIHJl
Z3VsYXJfZmlsZV9hX29wcyA9IHsKKwkud3JpdGVwYWdlID0gcmVpc2VyNF93cml0ZXBhZ2UsCisJ
LnJlYWRwYWdlID0gcmVpc2VyNF9yZWFkcGFnZV9kaXNwYXRjaCwKKwkvLy5zeW5jX3BhZ2UgPSBi
bG9ja19zeW5jX3BhZ2UsCisJLndyaXRlcGFnZXMgPSByZWlzZXI0X3dyaXRlcGFnZXNfZGlzcGF0
Y2gsCisJLnNldF9wYWdlX2RpcnR5ID0gcmVpc2VyNF9zZXRfcGFnZV9kaXJ0eSwKKwkucmVhZHBh
Z2VzID0gcmVpc2VyNF9yZWFkcGFnZXNfZGlzcGF0Y2gsCisJLndyaXRlX2JlZ2luID0gcmVpc2Vy
NF93cml0ZV9iZWdpbl9kaXNwYXRjaCwKKwkud3JpdGVfZW5kID0gcmVpc2VyNF93cml0ZV9lbmRf
ZGlzcGF0Y2gsCisJLmJtYXAgPSByZWlzZXI0X2JtYXBfZGlzcGF0Y2gsCisJLmludmFsaWRhdGVw
YWdlID0gcmVpc2VyNF9pbnZhbGlkYXRlcGFnZSwKKwkucmVsZWFzZXBhZ2UgPSByZWlzZXI0X3Jl
bGVhc2VwYWdlLAorCS5taWdyYXRlcGFnZSA9IHJlaXNlcjRfbWlncmF0ZXBhZ2UsCisJLmJhdGNo
X2xvY2tfdGFidSA9IDEKK307CisKKy8qIFZGUyBtZXRob2RzIGZvciBzeW1saW5rIGZpbGVzICov
CitzdGF0aWMgc3RydWN0IGlub2RlX29wZXJhdGlvbnMgc3ltbGlua19maWxlX2lfb3BzID0gewor
CS5nZXRfbGluayA9IHJlaXNlcjRfZ2V0X2xpbmtfY29tbW9uLAorCS5wZXJtaXNzaW9uID0gcmVp
c2VyNF9wZXJtaXNzaW9uX2NvbW1vbiwKKwkuc2V0YXR0ciA9IHJlaXNlcjRfc2V0YXR0cl9jb21t
b24sCisJLmdldGF0dHIgPSByZWlzZXI0X2dldGF0dHJfY29tbW9uCit9OworCisvKiBWRlMgbWV0
aG9kcyBmb3Igc3BlY2lhbCBmaWxlcyAqLworc3RhdGljIHN0cnVjdCBpbm9kZV9vcGVyYXRpb25z
IHNwZWNpYWxfZmlsZV9pX29wcyA9IHsKKwkucGVybWlzc2lvbiA9IHJlaXNlcjRfcGVybWlzc2lv
bl9jb21tb24sCisJLnNldGF0dHIgPSByZWlzZXI0X3NldGF0dHJfY29tbW9uLAorCS5nZXRhdHRy
ID0gcmVpc2VyNF9nZXRhdHRyX2NvbW1vbgorfTsKKworLyogVkZTIG1ldGhvZHMgZm9yIGRpcmVj
dG9yaWVzICovCitzdGF0aWMgc3RydWN0IGlub2RlX29wZXJhdGlvbnMgZGlyZWN0b3J5X2lfb3Bz
ID0geworCS5jcmVhdGUgPSByZWlzZXI0X2NyZWF0ZV9jb21tb24sCisJLmxvb2t1cCA9IHJlaXNl
cjRfbG9va3VwX2NvbW1vbiwKKwkubGluayA9IHJlaXNlcjRfbGlua19jb21tb24sCisJLnVubGlu
ayA9IHJlaXNlcjRfdW5saW5rX2NvbW1vbiwKKwkuc3ltbGluayA9IHJlaXNlcjRfc3ltbGlua19j
b21tb24sCisJLm1rZGlyID0gcmVpc2VyNF9ta2Rpcl9jb21tb24sCisJLnJtZGlyID0gcmVpc2Vy
NF91bmxpbmtfY29tbW9uLAorCS5ta25vZCA9IHJlaXNlcjRfbWtub2RfY29tbW9uLAorCS5yZW5h
bWUgPSByZWlzZXI0X3JlbmFtZTJfY29tbW9uLAorCS5wZXJtaXNzaW9uID0gcmVpc2VyNF9wZXJt
aXNzaW9uX2NvbW1vbiwKKwkuc2V0YXR0ciA9IHJlaXNlcjRfc2V0YXR0cl9jb21tb24sCisJLmdl
dGF0dHIgPSByZWlzZXI0X2dldGF0dHJfY29tbW9uCit9Oworc3RhdGljIHN0cnVjdCBmaWxlX29w
ZXJhdGlvbnMgZGlyZWN0b3J5X2Zfb3BzID0geworCS5sbHNlZWsgPSByZWlzZXI0X2xsc2Vla19k
aXJfY29tbW9uLAorCS5yZWFkID0gZ2VuZXJpY19yZWFkX2RpciwKKwkuaXRlcmF0ZSA9IHJlaXNl
cjRfaXRlcmF0ZV9jb21tb24sCisJLnJlbGVhc2UgPSByZWlzZXI0X3JlbGVhc2VfZGlyX2NvbW1v
biwKKwkuZnN5bmMgPSByZWlzZXI0X3N5bmNfY29tbW9uCit9Oworc3RhdGljIHN0cnVjdCBhZGRy
ZXNzX3NwYWNlX29wZXJhdGlvbnMgZGlyZWN0b3J5X2Ffb3BzID0geworCS53cml0ZXBhZ2VzID0g
ZHVtbXlvcCwKK307CisKKy8qCisgKiBEZWZpbml0aW9ucyBvZiBvYmplY3QgcGx1Z2lucy4KKyAq
LworCitmaWxlX3BsdWdpbiBmaWxlX3BsdWdpbnNbTEFTVF9GSUxFX1BMVUdJTl9JRF0gPSB7CisJ
W1VOSVhfRklMRV9QTFVHSU5fSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VS
NF9GSUxFX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gVU5JWF9GSUxFX1BMVUdJTl9JRCwKKwkJCS5n
cm91cHMgPSAoMSA8PCBSRUlTRVI0X1JFR1VMQVJfRklMRSksCisJCQkucG9wcyA9ICZmaWxlX3Bs
dWdpbl9vcHMsCisJCQkubGFiZWwgPSAicmVnIiwKKwkJCS5kZXNjID0gInJlZ3VsYXIgZmlsZSIs
CisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfSwKKwkJfSwKKwkJLyoKKwkJICogaW52YXJpYW50
IHZmcyBvcHMKKwkJICovCisJCS5pbm9kZV9vcHMgPSAmcmVndWxhcl9maWxlX2lfb3BzLAorCQku
ZmlsZV9vcHMgPSAmcmVndWxhcl9maWxlX2Zfb3BzLAorCQkuYXNfb3BzID0gJnJlZ3VsYXJfZmls
ZV9hX29wcywKKwkJLyoKKwkJICogcHJpdmF0ZSBpX29wcworCQkgKi8KKwkJLnNldGF0dHIgPSBz
ZXRhdHRyX3VuaXhfZmlsZSwKKwkJLm9wZW4gPSBvcGVuX3VuaXhfZmlsZSwKKwkJLnJlYWQgPSBy
ZWFkX3VuaXhfZmlsZSwKKwkJLndyaXRlID0gd3JpdGVfdW5peF9maWxlLAorCQkuaW9jdGwgPSBp
b2N0bF91bml4X2ZpbGUsCisJCS5tbWFwID0gbW1hcF91bml4X2ZpbGUsCisJCS5yZWxlYXNlID0g
cmVsZWFzZV91bml4X2ZpbGUsCisJCS8qCisJCSAqIHByaXZhdGUgZl9vcHMKKwkJICovCisJCS5y
ZWFkcGFnZSA9IHJlYWRwYWdlX3VuaXhfZmlsZSwKKwkJLnJlYWRwYWdlcyA9IHJlYWRwYWdlc191
bml4X2ZpbGUsCisJCS53cml0ZXBhZ2VzID0gd3JpdGVwYWdlc191bml4X2ZpbGUsCisJCS53cml0
ZV9iZWdpbiA9IHdyaXRlX2JlZ2luX3VuaXhfZmlsZSwKKwkJLndyaXRlX2VuZCA9IHdyaXRlX2Vu
ZF91bml4X2ZpbGUsCisJCS8qCisJCSAqIHByaXZhdGUgYV9vcHMKKwkJICovCisJCS5ibWFwID0g
Ym1hcF91bml4X2ZpbGUsCisJCS8qCisJCSAqIG90aGVyIHByaXZhdGUgbWV0aG9kcworCQkgKi8K
KwkJLndyaXRlX3NkX2J5X2lub2RlID0gd3JpdGVfc2RfYnlfaW5vZGVfY29tbW9uLAorCQkuZmxv
d19ieV9pbm9kZSA9IGZsb3dfYnlfaW5vZGVfdW5peF9maWxlLAorCQkua2V5X2J5X2lub2RlID0g
a2V5X2J5X2lub2RlX2FuZF9vZmZzZXRfY29tbW9uLAorCQkuc2V0X3BsdWdfaW5faW5vZGUgPSBz
ZXRfcGx1Z19pbl9pbm9kZV9jb21tb24sCisJCS5hZGp1c3RfdG9fcGFyZW50ID0gYWRqdXN0X3Rv
X3BhcmVudF9jb21tb24sCisJCS5jcmVhdGVfb2JqZWN0ID0gcmVpc2VyNF9jcmVhdGVfb2JqZWN0
X2NvbW1vbiwKKwkJLmRlbGV0ZV9vYmplY3QgPSBkZWxldGVfb2JqZWN0X3VuaXhfZmlsZSwKKwkJ
LmFkZF9saW5rID0gcmVpc2VyNF9hZGRfbGlua19jb21tb24sCisJCS5yZW1fbGluayA9IHJlaXNl
cjRfcmVtX2xpbmtfY29tbW9uLAorCQkub3duc19pdGVtID0gb3duc19pdGVtX3VuaXhfZmlsZSwK
KwkJLmNhbl9hZGRfbGluayA9IGNhbl9hZGRfbGlua19jb21tb24sCisJCS5kZXRhY2ggPSBkdW1t
eW9wLAorCQkuYmluZCA9IGR1bW15b3AsCisJCS5zYWZlbGluayA9IHNhZmVsaW5rX2NvbW1vbiwK
KwkJLmVzdGltYXRlID0geworCQkJLmNyZWF0ZSA9IGVzdGltYXRlX2NyZWF0ZV9jb21tb24sCisJ
CQkudXBkYXRlID0gZXN0aW1hdGVfdXBkYXRlX2NvbW1vbiwKKwkJCS51bmxpbmsgPSBlc3RpbWF0
ZV91bmxpbmtfY29tbW9uCisJCX0sCisJCS5pbml0X2lub2RlX2RhdGEgPSBpbml0X2lub2RlX2Rh
dGFfdW5peF9maWxlLAorCQkuY3V0X3RyZWVfd29ya2VyID0gY3V0X3RyZWVfd29ya2VyX2NvbW1v
biwKKwkJLndpcmUgPSB7CisJCQkud3JpdGUgPSB3aXJlX3dyaXRlX2NvbW1vbiwKKwkJCS5yZWFk
ID0gd2lyZV9yZWFkX2NvbW1vbiwKKwkJCS5nZXQgPSB3aXJlX2dldF9jb21tb24sCisJCQkuc2l6
ZSA9IHdpcmVfc2l6ZV9jb21tb24sCisJCQkuZG9uZSA9IHdpcmVfZG9uZV9jb21tb24KKwkJfQor
CX0sCisJW0RJUkVDVE9SWV9GSUxFX1BMVUdJTl9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVf
aWQgPSBSRUlTRVI0X0ZJTEVfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBESVJFQ1RPUllfRklMRV9Q
TFVHSU5fSUQsCisJCQkuZ3JvdXBzID0gKDEgPDwgUkVJU0VSNF9ESVJFQ1RPUllfRklMRSksCisJ
CQkucG9wcyA9ICZmaWxlX3BsdWdpbl9vcHMsCisJCQkubGFiZWwgPSAiZGlyIiwKKwkJCS5kZXNj
ID0gImRpcmVjdG9yeSIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaW5v
ZGVfb3BzID0gJm51bGxfaV9vcHMsCisJCS5maWxlX29wcyA9ICZudWxsX2Zfb3BzLAorCQkuYXNf
b3BzID0gJm51bGxfYV9vcHMsCisKKwkJLndyaXRlX3NkX2J5X2lub2RlID0gd3JpdGVfc2RfYnlf
aW5vZGVfY29tbW9uLAorCQkuZmxvd19ieV9pbm9kZSA9IGZsb3dfYnlfaW5vZGVfYnVnb3AsCisJ
CS5rZXlfYnlfaW5vZGUgPSBrZXlfYnlfaW5vZGVfYnVnb3AsCisJCS5zZXRfcGx1Z19pbl9pbm9k
ZSA9IHNldF9wbHVnX2luX2lub2RlX2NvbW1vbiwKKwkJLmFkanVzdF90b19wYXJlbnQgPSBhZGp1
c3RfdG9fcGFyZW50X2NvbW1vbl9kaXIsCisJCS5jcmVhdGVfb2JqZWN0ID0gcmVpc2VyNF9jcmVh
dGVfb2JqZWN0X2NvbW1vbiwKKwkJLmRlbGV0ZV9vYmplY3QgPSByZWlzZXI0X2RlbGV0ZV9kaXJf
Y29tbW9uLAorCQkuYWRkX2xpbmsgPSByZWlzZXI0X2FkZF9saW5rX2NvbW1vbiwKKwkJLnJlbV9s
aW5rID0gcmVtX2xpbmtfY29tbW9uX2RpciwKKwkJLm93bnNfaXRlbSA9IG93bnNfaXRlbV9jb21t
b25fZGlyLAorCQkuY2FuX2FkZF9saW5rID0gY2FuX2FkZF9saW5rX2NvbW1vbiwKKwkJLmNhbl9y
ZW1fbGluayA9IGNhbl9yZW1fbGlua19jb21tb25fZGlyLAorCQkuZGV0YWNoID0gcmVpc2VyNF9k
ZXRhY2hfY29tbW9uX2RpciwKKwkJLmJpbmQgPSByZWlzZXI0X2JpbmRfY29tbW9uX2RpciwKKwkJ
LnNhZmVsaW5rID0gc2FmZWxpbmtfY29tbW9uLAorCQkuZXN0aW1hdGUgPSB7CisJCQkuY3JlYXRl
ID0gZXN0aW1hdGVfY3JlYXRlX2NvbW1vbl9kaXIsCisJCQkudXBkYXRlID0gZXN0aW1hdGVfdXBk
YXRlX2NvbW1vbiwKKwkJCS51bmxpbmsgPSBlc3RpbWF0ZV91bmxpbmtfY29tbW9uX2RpcgorCQl9
LAorCQkud2lyZSA9IHsKKwkJCS53cml0ZSA9IHdpcmVfd3JpdGVfY29tbW9uLAorCQkJLnJlYWQg
PSB3aXJlX3JlYWRfY29tbW9uLAorCQkJLmdldCA9IHdpcmVfZ2V0X2NvbW1vbiwKKwkJCS5zaXpl
ID0gd2lyZV9zaXplX2NvbW1vbiwKKwkJCS5kb25lID0gd2lyZV9kb25lX2NvbW1vbgorCQl9LAor
CQkuaW5pdF9pbm9kZV9kYXRhID0gaW5pdF9pbm9kZV9vcmRlcmluZywKKwkJLmN1dF90cmVlX3dv
cmtlciA9IGN1dF90cmVlX3dvcmtlcl9jb21tb24sCisJfSwKKwlbU1lNTElOS19GSUxFX1BMVUdJ
Tl9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X0ZJTEVfUExVR0lOX1RZ
UEUsCisJCQkuaWQgPSBTWU1MSU5LX0ZJTEVfUExVR0lOX0lELAorCQkJLmdyb3VwcyA9ICgxIDw8
IFJFSVNFUjRfU1lNTElOS19GSUxFKSwKKwkJCS5wb3BzID0gJmZpbGVfcGx1Z2luX29wcywKKwkJ
CS5sYWJlbCA9ICJzeW1saW5rIiwKKwkJCS5kZXNjID0gInN5bWJvbGljIGxpbmsiLAorCQkJLmxp
bmthZ2UgPSB7TlVMTCxOVUxMfQorCQl9LAorCQkuaW5vZGVfb3BzID0gJnN5bWxpbmtfZmlsZV9p
X29wcywKKwkJLyogaW5vZGUtPmlfZm9wIG9mIHN5bWxpbmsgaXMgaW5pdGlhbGl6ZWQKKwkJICAg
YnkgTlVMTCBpbiBzZXR1cF9pbm9kZV9vcHMgKi8KKwkJLmZpbGVfb3BzID0gJm51bGxfZl9vcHMs
CisJCS5hc19vcHMgPSAmbnVsbF9hX29wcywKKworCQkud3JpdGVfc2RfYnlfaW5vZGUgPSB3cml0
ZV9zZF9ieV9pbm9kZV9jb21tb24sCisJCS5zZXRfcGx1Z19pbl9pbm9kZSA9IHNldF9wbHVnX2lu
X2lub2RlX2NvbW1vbiwKKwkJLmFkanVzdF90b19wYXJlbnQgPSBhZGp1c3RfdG9fcGFyZW50X2Nv
bW1vbiwKKwkJLmNyZWF0ZV9vYmplY3QgPSByZWlzZXI0X2NyZWF0ZV9zeW1saW5rLAorCQkuZGVs
ZXRlX29iamVjdCA9IHJlaXNlcjRfZGVsZXRlX29iamVjdF9jb21tb24sCisJCS5hZGRfbGluayA9
IHJlaXNlcjRfYWRkX2xpbmtfY29tbW9uLAorCQkucmVtX2xpbmsgPSByZWlzZXI0X3JlbV9saW5r
X2NvbW1vbiwKKwkJLmNhbl9hZGRfbGluayA9IGNhbl9hZGRfbGlua19jb21tb24sCisJCS5kZXRh
Y2ggPSBkdW1teW9wLAorCQkuYmluZCA9IGR1bW15b3AsCisJCS5zYWZlbGluayA9IHNhZmVsaW5r
X2NvbW1vbiwKKwkJLmVzdGltYXRlID0geworCQkJLmNyZWF0ZSA9IGVzdGltYXRlX2NyZWF0ZV9j
b21tb24sCisJCQkudXBkYXRlID0gZXN0aW1hdGVfdXBkYXRlX2NvbW1vbiwKKwkJCS51bmxpbmsg
PSBlc3RpbWF0ZV91bmxpbmtfY29tbW9uCisJCX0sCisJCS5pbml0X2lub2RlX2RhdGEgPSBpbml0
X2lub2RlX29yZGVyaW5nLAorCQkuY3V0X3RyZWVfd29ya2VyID0gY3V0X3RyZWVfd29ya2VyX2Nv
bW1vbiwKKwkJLmRlc3Ryb3lfaW5vZGUgPSBkZXN0cm95X2lub2RlX3N5bWxpbmssCisJCS53aXJl
ID0geworCQkJLndyaXRlID0gd2lyZV93cml0ZV9jb21tb24sCisJCQkucmVhZCA9IHdpcmVfcmVh
ZF9jb21tb24sCisJCQkuZ2V0ID0gd2lyZV9nZXRfY29tbW9uLAorCQkJLnNpemUgPSB3aXJlX3Np
emVfY29tbW9uLAorCQkJLmRvbmUgPSB3aXJlX2RvbmVfY29tbW9uCisJCX0KKwl9LAorCVtTUEVD
SUFMX0ZJTEVfUExVR0lOX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRf
RklMRV9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IFNQRUNJQUxfRklMRV9QTFVHSU5fSUQsCisJCQku
Z3JvdXBzID0gKDEgPDwgUkVJU0VSNF9TUEVDSUFMX0ZJTEUpLAorCQkJLnBvcHMgPSAmZmlsZV9w
bHVnaW5fb3BzLAorCQkJLmxhYmVsID0gInNwZWNpYWwiLAorCQkJLmRlc2MgPQorCQkJInNwZWNp
YWw6IGZpZm8sIGRldmljZSBvciBzb2NrZXQiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0K
KwkJfSwKKwkJLmlub2RlX29wcyA9ICZzcGVjaWFsX2ZpbGVfaV9vcHMsCisJCS8qIGZpbGVfb3Bz
IG9mIHNwZWNpYWwgZmlsZXMgKHNvY2tldHMsIGJsb2NrLCBjaGFyLCBmaWZvKSBhcmUKKwkJICAg
aW5pdGlhbGl6ZWQgYnkgaW5pdF9zcGVjaWFsX2lub2RlLiAqLworCQkuZmlsZV9vcHMgPSAmbnVs
bF9mX29wcywKKwkJLmFzX29wcyA9ICZudWxsX2Ffb3BzLAorCisJCS53cml0ZV9zZF9ieV9pbm9k
ZSA9IHdyaXRlX3NkX2J5X2lub2RlX2NvbW1vbiwKKwkJLnNldF9wbHVnX2luX2lub2RlID0gc2V0
X3BsdWdfaW5faW5vZGVfY29tbW9uLAorCQkuYWRqdXN0X3RvX3BhcmVudCA9IGFkanVzdF90b19w
YXJlbnRfY29tbW9uLAorCQkuY3JlYXRlX29iamVjdCA9IHJlaXNlcjRfY3JlYXRlX29iamVjdF9j
b21tb24sCisJCS5kZWxldGVfb2JqZWN0ID0gcmVpc2VyNF9kZWxldGVfb2JqZWN0X2NvbW1vbiwK
KwkJLmFkZF9saW5rID0gcmVpc2VyNF9hZGRfbGlua19jb21tb24sCisJCS5yZW1fbGluayA9IHJl
aXNlcjRfcmVtX2xpbmtfY29tbW9uLAorCQkub3duc19pdGVtID0gb3duc19pdGVtX2NvbW1vbiwK
KwkJLmNhbl9hZGRfbGluayA9IGNhbl9hZGRfbGlua19jb21tb24sCisJCS5kZXRhY2ggPSBkdW1t
eW9wLAorCQkuYmluZCA9IGR1bW15b3AsCisJCS5zYWZlbGluayA9IHNhZmVsaW5rX2NvbW1vbiwK
KwkJLmVzdGltYXRlID0geworCQkJLmNyZWF0ZSA9IGVzdGltYXRlX2NyZWF0ZV9jb21tb24sCisJ
CQkudXBkYXRlID0gZXN0aW1hdGVfdXBkYXRlX2NvbW1vbiwKKwkJCS51bmxpbmsgPSBlc3RpbWF0
ZV91bmxpbmtfY29tbW9uCisJCX0sCisJCS5pbml0X2lub2RlX2RhdGEgPSBpbml0X2lub2RlX29y
ZGVyaW5nLAorCQkuY3V0X3RyZWVfd29ya2VyID0gY3V0X3RyZWVfd29ya2VyX2NvbW1vbiwKKwkJ
LndpcmUgPSB7CisJCQkud3JpdGUgPSB3aXJlX3dyaXRlX2NvbW1vbiwKKwkJCS5yZWFkID0gd2ly
ZV9yZWFkX2NvbW1vbiwKKwkJCS5nZXQgPSB3aXJlX2dldF9jb21tb24sCisJCQkuc2l6ZSA9IHdp
cmVfc2l6ZV9jb21tb24sCisJCQkuZG9uZSA9IHdpcmVfZG9uZV9jb21tb24KKwkJfQorCX0sCisJ
W0NSWVBUQ09NUFJFU1NfRklMRV9QTFVHSU5fSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lk
ID0gUkVJU0VSNF9GSUxFX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gQ1JZUFRDT01QUkVTU19GSUxF
X1BMVUdJTl9JRCwKKwkJCS5ncm91cHMgPSAoMSA8PCBSRUlTRVI0X1JFR1VMQVJfRklMRSksCisJ
CQkucG9wcyA9ICZmaWxlX3BsdWdpbl9vcHMsCisJCQkubGFiZWwgPSAiY3J5cHRjb21wcmVzcyIs
CisJCQkuZGVzYyA9ICJjcnlwdGNvbXByZXNzIGZpbGUiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwg
TlVMTH0KKwkJfSwKKwkJLmlub2RlX29wcyA9ICZyZWd1bGFyX2ZpbGVfaV9vcHMsCisJCS5maWxl
X29wcyA9ICZyZWd1bGFyX2ZpbGVfZl9vcHMsCisJCS5hc19vcHMgPSAmcmVndWxhcl9maWxlX2Ff
b3BzLAorCisJCS5zZXRhdHRyID0gc2V0YXR0cl9jcnlwdGNvbXByZXNzLAorCQkub3BlbiA9IG9w
ZW5fY3J5cHRjb21wcmVzcywKKwkJLnJlYWQgPSByZWFkX2NyeXB0Y29tcHJlc3MsCisJCS53cml0
ZSA9IHdyaXRlX2NyeXB0Y29tcHJlc3MsCisJCS5pb2N0bCA9IGlvY3RsX2NyeXB0Y29tcHJlc3Ms
CisJCS5tbWFwID0gbW1hcF9jcnlwdGNvbXByZXNzLAorCQkucmVsZWFzZSA9IHJlbGVhc2VfY3J5
cHRjb21wcmVzcywKKworCQkucmVhZHBhZ2UgPSByZWFkcGFnZV9jcnlwdGNvbXByZXNzLAorCQku
cmVhZHBhZ2VzID0gcmVhZHBhZ2VzX2NyeXB0Y29tcHJlc3MsCisJCS53cml0ZXBhZ2VzID0gd3Jp
dGVwYWdlc19jcnlwdGNvbXByZXNzLAorCQkud3JpdGVfYmVnaW4gPSB3cml0ZV9iZWdpbl9jcnlw
dGNvbXByZXNzLAorCQkud3JpdGVfZW5kID0gd3JpdGVfZW5kX2NyeXB0Y29tcHJlc3MsCisKKwkJ
LmJtYXAgPSBibWFwX2NyeXB0Y29tcHJlc3MsCisKKwkJLndyaXRlX3NkX2J5X2lub2RlID0gd3Jp
dGVfc2RfYnlfaW5vZGVfY29tbW9uLAorCQkuZmxvd19ieV9pbm9kZSA9IGZsb3dfYnlfaW5vZGVf
Y3J5cHRjb21wcmVzcywKKwkJLmtleV9ieV9pbm9kZSA9IGtleV9ieV9pbm9kZV9jcnlwdGNvbXBy
ZXNzLAorCQkuc2V0X3BsdWdfaW5faW5vZGUgPSBzZXRfcGx1Z19pbl9pbm9kZV9jb21tb24sCisJ
CS5hZGp1c3RfdG9fcGFyZW50ID0gYWRqdXN0X3RvX3BhcmVudF9jcnlwdGNvbXByZXNzLAorCQku
Y3JlYXRlX29iamVjdCA9IGNyZWF0ZV9vYmplY3RfY3J5cHRjb21wcmVzcywKKwkJLmRlbGV0ZV9v
YmplY3QgPSBkZWxldGVfb2JqZWN0X2NyeXB0Y29tcHJlc3MsCisJCS5hZGRfbGluayA9IHJlaXNl
cjRfYWRkX2xpbmtfY29tbW9uLAorCQkucmVtX2xpbmsgPSByZWlzZXI0X3JlbV9saW5rX2NvbW1v
biwKKwkJLm93bnNfaXRlbSA9IG93bnNfaXRlbV9jb21tb24sCisJCS5jYW5fYWRkX2xpbmsgPSBj
YW5fYWRkX2xpbmtfY29tbW9uLAorCQkuZGV0YWNoID0gZHVtbXlvcCwKKwkJLmJpbmQgPSBkdW1t
eW9wLAorCQkuc2FmZWxpbmsgPSBzYWZlbGlua19jb21tb24sCisJCS5lc3RpbWF0ZSA9IHsKKwkJ
CS5jcmVhdGUgPSBlc3RpbWF0ZV9jcmVhdGVfY29tbW9uLAorCQkJLnVwZGF0ZSA9IGVzdGltYXRl
X3VwZGF0ZV9jb21tb24sCisJCQkudW5saW5rID0gZXN0aW1hdGVfdW5saW5rX2NvbW1vbgorCQl9
LAorCQkuaW5pdF9pbm9kZV9kYXRhID0gaW5pdF9pbm9kZV9kYXRhX2NyeXB0Y29tcHJlc3MsCisJ
CS5jdXRfdHJlZV93b3JrZXIgPSBjdXRfdHJlZV93b3JrZXJfY3J5cHRjb21wcmVzcywKKwkJLmRl
c3Ryb3lfaW5vZGUgPSBkZXN0cm95X2lub2RlX2NyeXB0Y29tcHJlc3MsCisJCS53aXJlID0gewor
CQkJLndyaXRlID0gd2lyZV93cml0ZV9jb21tb24sCisJCQkucmVhZCA9IHdpcmVfcmVhZF9jb21t
b24sCisJCQkuZ2V0ID0gd2lyZV9nZXRfY29tbW9uLAorCQkJLnNpemUgPSB3aXJlX3NpemVfY29t
bW9uLAorCQkJLmRvbmUgPSB3aXJlX2RvbmVfY29tbW9uCisJCX0KKwl9Cit9OworCitzdGF0aWMg
aW50IGNoYW5nZV9kaXIoc3RydWN0IGlub2RlICppbm9kZSwKKwkJICAgICAgcmVpc2VyNF9wbHVn
aW4gKiBwbHVnaW4sCisJCSAgICAgIHBzZXRfbWVtYmVyIG1lbWIpCit7CisJLyogY2Fubm90IGNo
YW5nZSBkaXIgcGx1Z2luIG9mIGFscmVhZHkgZXhpc3Rpbmcgb2JqZWN0ICovCisJcmV0dXJuIFJF
VEVSUigtRUlOVkFMKTsKK30KKworc3RhdGljIHJlaXNlcjRfcGx1Z2luX29wcyBkaXJfcGx1Z2lu
X29wcyA9IHsKKwkuY2hhbmdlID0gY2hhbmdlX2RpcgorfTsKKworLyoKKyAqIGRlZmluaXRpb24g
b2YgZGlyZWN0b3J5IHBsdWdpbnMKKyAqLworCitkaXJfcGx1Z2luIGRpcl9wbHVnaW5zW0xBU1Rf
RElSX0lEXSA9IHsKKwkvKiBzdGFuZGFyZCBoYXNoZWQgZGlyZWN0b3J5IHBsdWdpbiAqLworCVtI
QVNIRURfRElSX1BMVUdJTl9JRF0gPSB7CisJCS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0
X0RJUl9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEhBU0hFRF9ESVJfUExVR0lOX0lELAorCQkJLnBv
cHMgPSAmZGlyX3BsdWdpbl9vcHMsCisJCQkubGFiZWwgPSAiZGlyIiwKKwkJCS5kZXNjID0gImhh
c2hlZCBkaXJlY3RvcnkiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmlu
b2RlX29wcyA9ICZkaXJlY3RvcnlfaV9vcHMsCisJCS5maWxlX29wcyA9ICZkaXJlY3RvcnlfZl9v
cHMsCisJCS5hc19vcHMgPSAmZGlyZWN0b3J5X2Ffb3BzLAorCisJCS5nZXRfcGFyZW50ID0gZ2V0
X3BhcmVudF9jb21tb24sCisJCS5pc19uYW1lX2FjY2VwdGFibGUgPSBpc19uYW1lX2FjY2VwdGFi
bGVfY29tbW9uLAorCQkuYnVpbGRfZW50cnlfa2V5ID0gYnVpbGRfZW50cnlfa2V5X2hhc2hlZCwK
KwkJLmJ1aWxkX3JlYWRkaXJfa2V5ID0gYnVpbGRfcmVhZGRpcl9rZXlfY29tbW9uLAorCQkuYWRk
X2VudHJ5ID0gcmVpc2VyNF9hZGRfZW50cnlfY29tbW9uLAorCQkucmVtX2VudHJ5ID0gcmVpc2Vy
NF9yZW1fZW50cnlfY29tbW9uLAorCQkuaW5pdCA9IHJlaXNlcjRfZGlyX2luaXRfY29tbW9uLAor
CQkuZG9uZSA9IHJlaXNlcjRfZGlyX2RvbmVfY29tbW9uLAorCQkuYXR0YWNoID0gcmVpc2VyNF9h
dHRhY2hfY29tbW9uLAorCQkuZGV0YWNoID0gcmVpc2VyNF9kZXRhY2hfY29tbW9uLAorCQkuZXN0
aW1hdGUgPSB7CisJCQkuYWRkX2VudHJ5ID0gZXN0aW1hdGVfYWRkX2VudHJ5X2NvbW1vbiwKKwkJ
CS5yZW1fZW50cnkgPSBlc3RpbWF0ZV9yZW1fZW50cnlfY29tbW9uLAorCQkJLnVubGluayA9IGRp
cl9lc3RpbWF0ZV91bmxpbmtfY29tbW9uCisJCX0KKwl9LAorCS8qIGhhc2hlZCBkaXJlY3Rvcnkg
Zm9yIHdoaWNoIHNlZWtkaXIvdGVsbGRpciBhcmUgZ3VhcmFudGVlZCB0bworCSAqIHdvcmsuIEJy
YWluLWRhbWFnZS4gKi8KKwlbU0VFS0FCTEVfSEFTSEVEX0RJUl9QTFVHSU5fSURdID0geworCQku
aCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9ESVJfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBT
RUVLQUJMRV9IQVNIRURfRElSX1BMVUdJTl9JRCwKKwkJCS5wb3BzID0gJmRpcl9wbHVnaW5fb3Bz
LAorCQkJLmxhYmVsID0gImRpcjMyIiwKKwkJCS5kZXNjID0gImRpcmVjdG9yeSBoYXNoZWQgd2l0
aCAzMSBiaXQgaGFzaCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuaW5v
ZGVfb3BzID0gJmRpcmVjdG9yeV9pX29wcywKKwkJLmZpbGVfb3BzID0gJmRpcmVjdG9yeV9mX29w
cywKKwkJLmFzX29wcyA9ICZkaXJlY3RvcnlfYV9vcHMsCisKKwkJLmdldF9wYXJlbnQgPSBnZXRf
cGFyZW50X2NvbW1vbiwKKwkJLmlzX25hbWVfYWNjZXB0YWJsZSA9IGlzX25hbWVfYWNjZXB0YWJs
ZV9jb21tb24sCisJCS5idWlsZF9lbnRyeV9rZXkgPSBidWlsZF9lbnRyeV9rZXlfc2Vla2FibGUs
CisJCS5idWlsZF9yZWFkZGlyX2tleSA9IGJ1aWxkX3JlYWRkaXJfa2V5X2NvbW1vbiwKKwkJLmFk
ZF9lbnRyeSA9IHJlaXNlcjRfYWRkX2VudHJ5X2NvbW1vbiwKKwkJLnJlbV9lbnRyeSA9IHJlaXNl
cjRfcmVtX2VudHJ5X2NvbW1vbiwKKwkJLmluaXQgPSByZWlzZXI0X2Rpcl9pbml0X2NvbW1vbiwK
KwkJLmRvbmUgPSByZWlzZXI0X2Rpcl9kb25lX2NvbW1vbiwKKwkJLmF0dGFjaCA9IHJlaXNlcjRf
YXR0YWNoX2NvbW1vbiwKKwkJLmRldGFjaCA9IHJlaXNlcjRfZGV0YWNoX2NvbW1vbiwKKwkJLmVz
dGltYXRlID0geworCQkJLmFkZF9lbnRyeSA9IGVzdGltYXRlX2FkZF9lbnRyeV9jb21tb24sCisJ
CQkucmVtX2VudHJ5ID0gZXN0aW1hdGVfcmVtX2VudHJ5X2NvbW1vbiwKKwkJCS51bmxpbmsgPSBk
aXJfZXN0aW1hdGVfdW5saW5rX2NvbW1vbgorCQl9CisJfQorfTsKKworLyogTWFrZSBMaW51cyBo
YXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6
IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL29iamVjdC5oIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9vYmplY3QuaAotLS0gbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vb2JqZWN0LmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAg
KzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9vYmplY3QuaAkyMDIwLTAy
LTA1IDIwOjUzOjQxLjQ3NDIyMjM0MSArMDEwMApAQCAtMCwwICsxLDExNyBAQAorLyogQ29weXJp
Z2h0IDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICog
cmVpc2VyNC9SRUFETUUgKi8KKworLyogRGVjbGFyYXRpb24gb2Ygb2JqZWN0IHBsdWdpbiBmdW5j
dGlvbnMuICovCisKKyNpZiAhZGVmaW5lZChfX0ZTX1JFSVNFUjRfUExVR0lOX09CSkVDVF9IX18p
CisjZGVmaW5lIF9fRlNfUkVJU0VSNF9QTFVHSU5fT0JKRUNUX0hfXworCisjaW5jbHVkZSAiLi4v
dHlwZV9zYWZlX2hhc2guaCIKKworLyogY29tbW9uIGltcGxlbWVudGF0aW9ucyBvZiBpbm9kZSBv
cGVyYXRpb25zICovCitpbnQgcmVpc2VyNF9jcmVhdGVfY29tbW9uKHN0cnVjdCBpbm9kZSAqcGFy
ZW50LCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCisJCQkgIHVtb2RlX3QgbW9kZSwgYm9vbCk7Citz
dHJ1Y3QgZGVudHJ5ICpyZWlzZXI0X2xvb2t1cF9jb21tb24oc3RydWN0IGlub2RlICpwYXJlbnQs
CisJCQkJICAgICAgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAorCQkJCSAgICAgIHVuc2lnbmVkIGlu
dCk7CitpbnQgcmVpc2VyNF9saW5rX2NvbW1vbihzdHJ1Y3QgZGVudHJ5ICpleGlzdGluZywgc3Ry
dWN0IGlub2RlICpwYXJlbnQsCisJCQlzdHJ1Y3QgZGVudHJ5ICpuZXduYW1lKTsKK2ludCByZWlz
ZXI0X3VubGlua19jb21tb24oc3RydWN0IGlub2RlICpwYXJlbnQsIHN0cnVjdCBkZW50cnkgKnZp
Y3RpbSk7CitpbnQgcmVpc2VyNF9ta2Rpcl9jb21tb24oc3RydWN0IGlub2RlICpwYXJlbnQsIHN0
cnVjdCBkZW50cnkgKmRlbnRyeSwgdW1vZGVfdCBtb2RlKTsKK2ludCByZWlzZXI0X3N5bWxpbmtf
Y29tbW9uKHN0cnVjdCBpbm9kZSAqcGFyZW50LCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCisJCSAg
IGNvbnN0IGNoYXIgKmxpbmtuYW1lKTsKK2ludCByZWlzZXI0X21rbm9kX2NvbW1vbihzdHJ1Y3Qg
aW5vZGUgKnBhcmVudCwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LAorCQkgdW1vZGVfdCBtb2RlLCBk
ZXZfdCByZGV2KTsKK2ludCByZWlzZXI0X3JlbmFtZTJfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2xk
X2Rpciwgc3RydWN0IGRlbnRyeSAqb2xkX25hbWUsCisJCQkgICBzdHJ1Y3QgaW5vZGUgKm5ld19k
aXIsIHN0cnVjdCBkZW50cnkgKm5ld19uYW1lLAorCQkJICAgdW5zaWduZWQgZmxhZ3MpOworY29u
c3QgY2hhciAqcmVpc2VyNF9nZXRfbGlua19jb21tb24oc3RydWN0IGRlbnRyeSAqLCBzdHJ1Y3Qg
aW5vZGUgKmlub2RlLAorCQkJCSAgICBzdHJ1Y3QgZGVsYXllZF9jYWxsICpkb25lKTsKK2ludCBy
ZWlzZXI0X3Blcm1pc3Npb25fY29tbW9uKHN0cnVjdCBpbm9kZSAqLCBpbnQgbWFzayk7CitpbnQg
cmVpc2VyNF9zZXRhdHRyX2NvbW1vbihzdHJ1Y3QgZGVudHJ5ICosIHN0cnVjdCBpYXR0ciAqKTsK
K2ludCByZWlzZXI0X2dldGF0dHJfY29tbW9uKGNvbnN0IHN0cnVjdCBwYXRoICpwYXRoLCBzdHJ1
Y3Qga3N0YXQgKnN0YXQsCisJCQkgICB1MzIgcmVxdWVzdF9tYXNrLCB1bnNpZ25lZCBpbnQgZmxh
Z3MpOworCisvKiBjb21tb24gaW1wbGVtZW50YXRpb25zIG9mIGZpbGUgb3BlcmF0aW9ucyAqLwor
bG9mZl90IHJlaXNlcjRfbGxzZWVrX2Rpcl9jb21tb24oc3RydWN0IGZpbGUgKiwgbG9mZl90IG9m
ZiwgaW50IG9yaWdpbik7CitpbnQgcmVpc2VyNF9pdGVyYXRlX2NvbW1vbihzdHJ1Y3QgZmlsZSAq
LCBzdHJ1Y3QgZGlyX2NvbnRleHQgKmNvbnRleHQpOworaW50IHJlaXNlcjRfcmVsZWFzZV9kaXJf
Y29tbW9uKHN0cnVjdCBpbm9kZSAqLCBzdHJ1Y3QgZmlsZSAqKTsKK2ludCByZWlzZXI0X3N5bmNf
Y29tbW9uKHN0cnVjdCBmaWxlICosIGxvZmZfdCwgbG9mZl90LCBpbnQgZGF0YXN5bmMpOworCisv
KiBmaWxlIHBsdWdpbiBvcGVyYXRpb25zOiBjb21tb24gaW1wbGVtZW50YXRpb25zICovCitpbnQg
d3JpdGVfc2RfYnlfaW5vZGVfY29tbW9uKHN0cnVjdCBpbm9kZSAqKTsKK2ludCBrZXlfYnlfaW5v
ZGVfYW5kX29mZnNldF9jb21tb24oc3RydWN0IGlub2RlICosIGxvZmZfdCwgcmVpc2VyNF9rZXkg
Kik7CitpbnQgc2V0X3BsdWdfaW5faW5vZGVfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBz
dHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJCSAgICAgcmVpc2VyNF9vYmplY3RfY3JlYXRlX2RhdGEg
Kik7CitpbnQgYWRqdXN0X3RvX3BhcmVudF9jb21tb24oc3RydWN0IGlub2RlICpvYmplY3QsIHN0
cnVjdCBpbm9kZSAqcGFyZW50LAorCQkJICAgIHN0cnVjdCBpbm9kZSAqcm9vdCk7CitpbnQgYWRq
dXN0X3RvX3BhcmVudF9jb21tb25fZGlyKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgaW5v
ZGUgKnBhcmVudCwKKwkJCQlzdHJ1Y3QgaW5vZGUgKnJvb3QpOworaW50IGFkanVzdF90b19wYXJl
bnRfY3J5cHRjb21wcmVzcyhzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGlub2RlICpwYXJl
bnQsCisJCQkJICAgc3RydWN0IGlub2RlICpyb290KTsKK2ludCByZWlzZXI0X2NyZWF0ZV9vYmpl
Y3RfY29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJ
CQkgcmVpc2VyNF9vYmplY3RfY3JlYXRlX2RhdGEgKik7CitpbnQgcmVpc2VyNF9kZWxldGVfb2Jq
ZWN0X2NvbW1vbihzdHJ1Y3QgaW5vZGUgKik7CitpbnQgcmVpc2VyNF9kZWxldGVfZGlyX2NvbW1v
bihzdHJ1Y3QgaW5vZGUgKik7CitpbnQgcmVpc2VyNF9hZGRfbGlua19jb21tb24oc3RydWN0IGlu
b2RlICpvYmplY3QsIHN0cnVjdCBpbm9kZSAqcGFyZW50KTsKK2ludCByZWlzZXI0X3JlbV9saW5r
X2NvbW1vbihzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGlub2RlICpwYXJlbnQpOworaW50
IHJlbV9saW5rX2NvbW1vbl9kaXIoc3RydWN0IGlub2RlICpvYmplY3QsIHN0cnVjdCBpbm9kZSAq
cGFyZW50KTsKK2ludCBvd25zX2l0ZW1fY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqLCBjb25z
dCBjb29yZF90ICopOworaW50IG93bnNfaXRlbV9jb21tb25fZGlyKGNvbnN0IHN0cnVjdCBpbm9k
ZSAqLCBjb25zdCBjb29yZF90ICopOworaW50IGNhbl9hZGRfbGlua19jb21tb24oY29uc3Qgc3Ry
dWN0IGlub2RlICopOworaW50IGNhbl9yZW1fbGlua19jb21tb25fZGlyKGNvbnN0IHN0cnVjdCBp
bm9kZSAqKTsKK2ludCByZWlzZXI0X2RldGFjaF9jb21tb25fZGlyKHN0cnVjdCBpbm9kZSAqY2hp
bGQsIHN0cnVjdCBpbm9kZSAqcGFyZW50KTsKK2ludCByZWlzZXI0X2JpbmRfY29tbW9uX2Rpcihz
dHJ1Y3QgaW5vZGUgKmNoaWxkLCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCk7CitpbnQgc2FmZWxpbmtf
Y29tbW9uKHN0cnVjdCBpbm9kZSAqLCByZWlzZXI0X3NhZmVfbGlua190LCBfX3U2NCB2YWx1ZSk7
CityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX2NyZWF0ZV9jb21tb24oY29uc3Qgc3RydWN0IGlu
b2RlICopOworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9jcmVhdGVfY29tbW9uX2Rpcihjb25z
dCBzdHJ1Y3QgaW5vZGUgKik7CityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX3VwZGF0ZV9jb21t
b24oY29uc3Qgc3RydWN0IGlub2RlICopOworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV91bmxp
bmtfY29tbW9uKGNvbnN0IHN0cnVjdCBpbm9kZSAqLAorCQkJCQljb25zdCBzdHJ1Y3QgaW5vZGUg
Kik7CityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX3VubGlua19jb21tb25fZGlyKGNvbnN0IHN0
cnVjdCBpbm9kZSAqLAorCQkJCQkgICAgY29uc3Qgc3RydWN0IGlub2RlICopOworY2hhciAqd2ly
ZV93cml0ZV9jb21tb24oc3RydWN0IGlub2RlICosIGNoYXIgKnN0YXJ0KTsKK2NoYXIgKndpcmVf
cmVhZF9jb21tb24oY2hhciAqYWRkciwgcmVpc2VyNF9vYmplY3Rfb25fd2lyZSAqKTsKK3N0cnVj
dCBkZW50cnkgKndpcmVfZ2V0X2NvbW1vbihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKiwgcmVpc2VyNF9v
YmplY3Rfb25fd2lyZSAqKTsKK2ludCB3aXJlX3NpemVfY29tbW9uKHN0cnVjdCBpbm9kZSAqKTsK
K3ZvaWQgd2lyZV9kb25lX2NvbW1vbihyZWlzZXI0X29iamVjdF9vbl93aXJlICopOworCisvKiBk
aXIgcGx1Z2luIG9wZXJhdGlvbnM6IGNvbW1vbiBpbXBsZW1lbnRhdGlvbnMgKi8KK3N0cnVjdCBk
ZW50cnkgKmdldF9wYXJlbnRfY29tbW9uKHN0cnVjdCBpbm9kZSAqY2hpbGQpOworaW50IGlzX25h
bWVfYWNjZXB0YWJsZV9jb21tb24oY29uc3Qgc3RydWN0IGlub2RlICosIGNvbnN0IGNoYXIgKm5h
bWUsIGludCBsZW4pOwordm9pZCBidWlsZF9lbnRyeV9rZXlfY29tbW9uKGNvbnN0IHN0cnVjdCBp
bm9kZSAqLAorCQkJICAgIGNvbnN0IHN0cnVjdCBxc3RyICpxbmFtZSwgcmVpc2VyNF9rZXkgKik7
CitpbnQgYnVpbGRfcmVhZGRpcl9rZXlfY29tbW9uKHN0cnVjdCBmaWxlICpkaXIsIHJlaXNlcjRf
a2V5ICopOworaW50IHJlaXNlcjRfYWRkX2VudHJ5X2NvbW1vbihzdHJ1Y3QgaW5vZGUgKm9iamVj
dCwgc3RydWN0IGRlbnRyeSAqd2hlcmUsCisJCSAgICAgcmVpc2VyNF9vYmplY3RfY3JlYXRlX2Rh
dGEgKiAsIHJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgKik7CitpbnQgcmVpc2VyNF9yZW1fZW50cnlf
Y29tbW9uKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgZGVudHJ5ICp3aGVyZSwKKwkJICAg
ICByZWlzZXI0X2Rpcl9lbnRyeV9kZXNjICopOworaW50IHJlaXNlcjRfZGlyX2luaXRfY29tbW9u
KHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgaW5vZGUgKnBhcmVudCwKKwkJCSAgICByZWlz
ZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqKTsKK2ludCByZWlzZXI0X2Rpcl9kb25lX2NvbW1vbihz
dHJ1Y3QgaW5vZGUgKik7CitpbnQgcmVpc2VyNF9hdHRhY2hfY29tbW9uKHN0cnVjdCBpbm9kZSAq
Y2hpbGQsIHN0cnVjdCBpbm9kZSAqcGFyZW50KTsKK2ludCByZWlzZXI0X2RldGFjaF9jb21tb24o
c3RydWN0IGlub2RlICpvYmplY3QsIHN0cnVjdCBpbm9kZSAqcGFyZW50KTsKK3JlaXNlcjRfYmxv
Y2tfbnIgZXN0aW1hdGVfYWRkX2VudHJ5X2NvbW1vbihjb25zdCBzdHJ1Y3QgaW5vZGUgKik7City
ZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX3JlbV9lbnRyeV9jb21tb24oY29uc3Qgc3RydWN0IGlu
b2RlICopOworcmVpc2VyNF9ibG9ja19uciBkaXJfZXN0aW1hdGVfdW5saW5rX2NvbW1vbihjb25z
dCBzdHJ1Y3QgaW5vZGUgKiwKKwkJCQkJICAgIGNvbnN0IHN0cnVjdCBpbm9kZSAqKTsKKworLyog
dGhlc2UgYXJlIGVzc2VudGlhbCBwYXJ0cyBvZiBjb21tb24gaW1wbGVtZW50YXRpb25zLCB0aGV5
IGFyZSB0byBtYWtlCisgICBjdXN0b21pemVkIGltcGxlbWVudGF0aW9ucyBlYXNpZXIgKi8KKwor
LyogbWVyZWx5IHVzZWZ1bCBmdW5jdGlvbnMgKi8KK2ludCBsb29rdXBfc2Qoc3RydWN0IGlub2Rl
ICosIHpub2RlX2xvY2tfbW9kZSwgY29vcmRfdCAqLCBsb2NrX2hhbmRsZSAqICwKKwkgICAgICBj
b25zdCByZWlzZXI0X2tleSAqICwgaW50IHNpbGVudCk7CisKKy8qIF9fRlNfUkVJU0VSNF9QTFVH
SU5fT0JKRUNUX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2Nh
bCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1l
OiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNv
bHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9wbHVnaW4uYyBsaW51eC01LjQuMTcvZnMvcmVp
c2VyNC9wbHVnaW4vcGx1Z2luLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1
Z2luL3BsdWdpbi5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51
eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vcGx1Z2luLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40
NzQyMjIzNDEgKzAxMDAKQEAgLTAsMCArMSw1NjkgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAy
LCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQv
UkVBRE1FICovCisKKy8qIEJhc2ljIHBsdWdpbiBpbmZyYXN0cnVjdHVyZSwgbG9va3VwIGV0Yy4g
Ki8KKworLyogUExVR0lOUzoKKworICAgUGx1Z2lucyBhcmUgaW50ZXJuYWwgUmVpc2VyNCAibW9k
dWxlcyIgb3IgIm9iamVjdHMiIHVzZWQgdG8gaW5jcmVhc2UKKyAgIGV4dGVuc2liaWxpdHkgYW5k
IGFsbG93IGV4dGVybmFsIHVzZXJzIHRvIGVhc2lseSBhZGFwdCByZWlzZXI0IHRvCisgICB0aGVp
ciBuZWVkcy4KKworICAgUGx1Z2lucyBhcmUgY2xhc3NpZmllZCBpbnRvIHNldmVyYWwgZGlzam9p
bnQgInR5cGVzIi4gUGx1Z2lucworICAgYmVsb25naW5nIHRvIHRoZSBwYXJ0aWN1bGFyIHBsdWdp
biB0eXBlIGFyZSB0ZXJtZWQgImluc3RhbmNlcyIgb2YKKyAgIHRoaXMgdHlwZS4gRXhpc3Rpbmcg
dHlwZXMgYXJlIGxpc3RlZCBieSBlbnVtIHJlaXNlcjRfcGx1Z2luX3R5cGUKKyAgIChzZWUgcGx1
Z2luL3BsdWdpbl9oZWFkZXIuaCkKKworTklLSVRBLUZJWE1FLUhBTlM6IHVwZGF0ZSB0aGlzIGxp
c3QsIGFuZCByZXZpZXcgdGhpcyBlbnRpcmUgY29tbWVudCBmb3IgY3VycmVuY3kKKworICAgT2Jq
ZWN0IChmaWxlKSBwbHVnaW4gZGV0ZXJtaW5lcyBob3cgZ2l2ZW4gZmlsZS1zeXN0ZW0gb2JqZWN0
IHNlcnZlcworICAgc3RhbmRhcmQgVkZTIHJlcXVlc3RzIGZvciByZWFkLCB3cml0ZSwgc2Vlaywg
bW1hcCBldGMuIEluc3RhbmNlcyBvZgorICAgZmlsZSBwbHVnaW5zIGFyZTogcmVndWxhciBmaWxl
LCBkaXJlY3RvcnksIHN5bWxpbmsuIEFub3RoZXIgZXhhbXBsZQorICAgb2YgZmlsZSBwbHVnaW4g
aXMgYXVkaXQgcGx1Z2luLCB0aGF0IG9wdGlvbmFsbHkgcmVjb3JkcyBhY2Nlc3NlcyB0bworICAg
dW5kZXJseWluZyBvYmplY3QgYW5kIGZvcndhcmRzIHJlcXVlc3RzIHRvIGl0LgorCisgICBIYXNo
IHBsdWdpbnMgY29tcHV0ZSBoYXNoZXMgdXNlZCBieSByZWlzZXI0IHRvIHN0b3JlIGFuZCBsb2Nh
dGUKKyAgIGZpbGVzIHdpdGhpbiBkaXJlY3Rvcmllcy4gSW5zdGFuY2VzIG9mIGhhc2ggcGx1Z2lu
IHR5cGUgYXJlOiByNSwKKyAgIHRlYSwgcnVwYXNvdi4KKworICAgVGFpbCBwbHVnaW5zIChvciwg
bW9yZSBwcmVjaXNlbHksIHRhaWwgcG9saWN5IHBsdWdpbnMpIGRldGVybWluZQorICAgd2hlbiBs
YXN0IHBhcnQgb2YgdGhlIGZpbGUgc2hvdWxkIGJlIHN0b3JlZCBpbiBhIGZvcm1hdHRlZCBpdGVt
LgorCisgICBTY29wZSBhbmQgbG9va3VwOgorCisgICBsYWJlbCBzdWNoIHRoYXQgcGFpciAoIHR5
cGVfbGFiZWwsIHBsdWdpbl9sYWJlbCApIGlzIHVuaXF1ZS4gIFRoaXMKKyAgIHBhaXIgaXMgYSBn
bG9iYWxseSBwZXJzaXN0ZW50IGFuZCB1c2VyLXZpc2libGUgcGx1Z2luCisgICBpZGVudGlmaWVy
LiBJbnRlcm5hbGx5IGtlcm5lbCBtYWludGFpbnMgcGx1Z2lucyBhbmQgcGx1Z2luIHR5cGVzIGlu
CisgICBhcnJheXMgdXNpbmcgYW4gaW5kZXggaW50byB0aG9zZSBhcnJheXMgYXMgcGx1Z2luIGFu
ZCBwbHVnaW4gdHlwZQorICAgaWRlbnRpZmllcnMuIEZpbGUtc3lzdGVtIGluIHR1cm4sIGFsc28g
bWFpbnRhaW5zIHBlcnNpc3RlbnQKKyAgICJkaWN0aW9uYXJ5IiB3aGljaCBpcyBtYXBwaW5nIGZy
b20gcGx1Z2luIGxhYmVsIHRvIG51bWVyaWNhbAorICAgaWRlbnRpZmllciB3aGljaCBpcyBzdG9y
ZWQgaW4gZmlsZS1zeXN0ZW0gb2JqZWN0cy4gIFRoYXQgaXMsIHdlCisgICBzdG9yZSB0aGUgb2Zm
c2V0IGludG8gdGhlIHBsdWdpbiBhcnJheSBmb3IgdGhhdCBwbHVnaW4gdHlwZSBhcyB0aGUKKyAg
IHBsdWdpbiBpZCBpbiB0aGUgc3RhdCBkYXRhIG9mIHRoZSBmaWxlc3lzdGVtIG9iamVjdC4KKwor
ICAgSW50ZXJuYWwga2VybmVsIHBsdWdpbiB0eXBlIGlkZW50aWZpZXIgKGluZGV4IGluIHBsdWdp
bnNbXSBhcnJheSkgaXMKKyAgIG9mIHR5cGUgcmVpc2VyNF9wbHVnaW5fdHlwZS4gU2V0IG9mIGF2
YWlsYWJsZSBwbHVnaW4gdHlwZXMgaXMKKyAgIGN1cnJlbnRseSBzdGF0aWMsIGJ1dCBkeW5hbWlj
IGxvYWRpbmcgZG9lc24ndCBzZWVtIHRvIHBvc2UKKyAgIGluc3VybW91bnRhYmxlIHByb2JsZW1z
LgorCisgICBXaXRoaW4gZWFjaCB0eXBlIHBsdWdpbnMgYXJlIGFkZHJlc3NlZCBieSB0aGUgaWRl
bnRpZmllcnMgb2YgdHlwZQorICAgcmVpc2VyNF9wbHVnaW5faWQgKGluZGljZXMgaW4gcmVpc2Vy
NF9wbHVnaW5fdHlwZV9kYXRhLmJ1aWx0aW5bXSkuCisgICBTdWNoIGlkZW50aWZpZXJzIGFyZSBv
bmx5IHJlcXVpcmVkIHRvIGJlIHVuaXF1ZSB3aXRoaW4gb25lIHR5cGUsCisgICBub3QgZ2xvYmFs
bHkuCisKKyAgIFRodXMsIHBsdWdpbiBpbiBtZW1vcnkgaXMgdW5pcXVlbHkgaWRlbnRpZmllZCBi
eSB0aGUgcGFpciAodHlwZV9pZCwKKyAgIGlkKS4KKworICAgVXNhZ2U6CisKKyAgIFRoZXJlIGV4
aXN0cyBvbmx5IG9uZSBpbnN0YW5jZSBvZiBlYWNoIHBsdWdpbiBpbnN0YW5jZSwgYnV0IHRoaXMK
KyAgIHNpbmdsZSBpbnN0YW5jZSBjYW4gYmUgYXNzb2NpYXRlZCB3aXRoIG1hbnkgZW50aXRpZXMg
KGZpbGUtc3lzdGVtCisgICBvYmplY3RzLCBpdGVtcywgbm9kZXMsIHRyYW5zYWN0aW9ucywgZmls
ZS1kZXNjcmlwdG9ycyBldGMuKS4gRW50aXR5CisgICB0byB3aGljaCBwbHVnaW4gb2YgZ2l2ZW4g
dHlwZSBpcyB0ZXJtZWQgKGR1ZSB0byB0aGUgbGFjayBvZgorICAgaW1hZ2luYXRpb24pICJzdWJq
ZWN0IiBvZiB0aGlzIHBsdWdpbiB0eXBlIGFuZCwgYnkgYWJ1c2Ugb2YKKyAgIHRlcm1pbm9sb2d5
LCBzdWJqZWN0IG9mIHBhcnRpY3VsYXIgaW5zdGFuY2Ugb2YgdGhpcyB0eXBlIHRvIHdoaWNoCisg
ICBpdCdzIGF0dGFjaGVkIGN1cnJlbnRseS4gRm9yIGV4YW1wbGUsIGlub2RlIGlzIHN1YmplY3Qg
b2Ygb2JqZWN0CisgICBwbHVnaW4gdHlwZS4gSW5vZGUgcmVwcmVzZW50aW5nIGRpcmVjdG9yeSBp
cyBzdWJqZWN0IG9mIGRpcmVjdG9yeQorICAgcGx1Z2luLCBoYXNoIHBsdWdpbiB0eXBlIGFuZCBz
b21lIHBhcnRpY3VsYXIgaW5zdGFuY2Ugb2YgaGFzaCBwbHVnaW4KKyAgIHR5cGUuIElub2RlLCBy
ZXByZXNlbnRpbmcgcmVndWxhciBmaWxlIGlzIHN1YmplY3Qgb2YgInJlZ3VsYXIgZmlsZSIKKyAg
IHBsdWdpbiwgdGFpbC1wb2xpY3kgcGx1Z2luIHR5cGUgZXRjLgorCisgICBXaXRoIGVhY2ggc3Vi
amVjdCB0aGUgcGx1Z2luIHBvc3NpYmx5IHN0b3JlcyBzb21lIHN0YXRlLiBGb3IgZXhhbXBsZSwK
KyAgIHRoZSBzdGF0ZSBvZiBhIGRpcmVjdG9yeSBwbHVnaW4gKGluc3RhbmNlIG9mIG9iamVjdCBw
bHVnaW4gdHlwZSkgaXMgcG9pbnRlcgorICAgdG8gaGFzaCBwbHVnaW4gKGlmIGRpcmVjdG9yaWVz
IGFsd2F5cyB1c2UgaGFzaGluZyB0aGF0IGlzKS4KKworICAgSW50ZXJmYWNlOgorCisgICBJbiBh
ZGRpdGlvbiB0byBhIHNjYWxhciBpZGVudGlmaWVyLCBlYWNoIHBsdWdpbiB0eXBlIGFuZCBwbHVn
aW4KKyAgIHByb3BlciBoYXMgYSAibGFiZWwiOiBzaG9ydCBzdHJpbmcgYW5kIGEgImRlc2NyaXB0
aW9uIi0tLWxvbmdlcgorICAgZGVzY3JpcHRpdmUgc3RyaW5nLiBMYWJlbHMgYW5kIGRlc2NyaXB0
aW9ucyBvZiBwbHVnaW4gdHlwZXMgYXJlCisgICBoYXJkLWNvZGVkIGludG8gcGx1Z2luc1tdIGFy
cmF5LCBkZWNsYXJlZCBhbmQgZGVmaW5lZCBpbgorICAgcGx1Z2luLmMuIExhYmVsIGFuZCBkZXNj
cmlwdGlvbiBvZiBwbHVnaW4gYXJlIHN0b3JlZCBpbiAubGFiZWwgYW5kCisgICAuZGVzYyBmaWVs
ZHMgb2YgcmVpc2VyNF9wbHVnaW5faGVhZGVyIHJlc3BlY3RpdmVseS4gSXQncyBwb3NzaWJsZSB0
bworICAgbG9jYXRlIHBsdWdpbiBieSB0aGUgcGFpciBvZiBsYWJlbHMuCisKKyAgIEZlYXR1cmVz
IChub3QgaW1wbGVtZW50ZWQpOgorCisgICAgLiB1c2VyLWxldmVsIHBsdWdpbiBtYW5pcHVsYXRp
b25zOgorICAgICAgKyByZWlzZXI0KCJmaWxlbmFtZS8uLmZpbGVfcGx1Z2luPD0nYXVkaXQnIik7
CisgICAgICArIHdyaXRlKG9wZW4oImZpbGVuYW1lLy4uZmlsZV9wbHVnaW4iKSwgImF1ZGl0Iiwg
OCk7CisKKyAgICAuIHVzZXIgbGV2ZWwgdXRpbGl0aWVzIGxzcGx1ZyBhbmQgY2hwbHVnIHRvIG1h
bmlwdWxhdGUgcGx1Z2lucy4KKyAgICAgIFV0aWxpdGllcyBhcmUgbm90IG9mIHByaW1hcnkgcHJp
b3JpdHkuIFBvc3NpYmx5IHRoZXkgd2lsbCBiZSBub3QKKyAgICAgIHdvcmtpbmcgb24gdjQuMAor
CisgICBOSUtJVEEtRklYTUUtSEFOUzogdGhpcyBzaG91bGQgYmUgYSBta3JlaXNlcmZzIG9wdGlv
biBub3QgYSBtb3VudAorICAgb3B0aW9uLCBkbyB5b3UgYWdyZWU/ICBJIGRvbid0IHRoaW5rIHRo
YXQgc3BlY2lmeWluZyBpdCBhdCBtb3VudCB0aW1lLAorICAgYW5kIHRoZW4gY2hhbmdpbmcgaXQg
d2l0aCBlYWNoIG1vdW50LCBpcyBhIGdvb2QgbW9kZWwgZm9yIHVzYWdlLgorCisgICAgLiBtb3Vu
dCBvcHRpb24gInBsdWciIHRvIHNldC11cCBwbHVnaW5zIG9mIHJvb3QtZGlyZWN0b3J5LgorICAg
ICAgInBsdWc9Zm9vOmJhciIgd2lsbCBzZXQgImJhciIgYXMgZGVmYXVsdCBwbHVnaW4gb2YgdHlw
ZSAiZm9vIi4KKworICAgTGltaXRhdGlvbnM6CisKKyAgICAuIGVhY2ggcGx1Z2luIHR5cGUgaGFz
IHRvIHByb3ZpZGUgYXQgbGVhc3Qgb25lIGJ1aWx0aW4KKyAgICAgIHBsdWdpbi4gVGhpcyBpcyB0
ZWNobmljYWwgbGltaXRhdGlvbiBhbmQgaXQgY2FuIGJlIGxpZnRlZCBpbiB0aGUKKyAgICAgIGZ1
dHVyZS4KKworICAgVE9ETzoKKworICAgTmV3IHBsdWdpbiB0eXBlcy9wbHVnaW5nczoKKyAgIFRo
aW5ncyB3ZSBzaG91bGQgYmUgYWJsZSB0byBzZXBhcmF0ZWx5IGNob29zZSB0byBpbmhlcml0Ogor
CisgICBzZWN1cml0eSBwbHVnaW5zCisKKyAgIHN0YXQgZGF0YQorCisgICBmaWxlIGJvZGllcwor
CisgICBmaWxlIHBsdWdpbnMKKworICAgZGlyIHBsdWdpbnMKKworICAgIC4gcGVybTphY2wKKwor
ICAgIC4gYXVkaS0tLWF1ZGl0IHBsdWdpbiBpbnRlcmNlcHRpbmcgYW5kIHBvc3NpYmx5IGxvZ2dp
bmcgYWxsCisgICAgICBhY2Nlc3NlcyB0byBvYmplY3QuIFJlcXVpcmVzIHRvIHB1dCBzdHViIGZ1
bmN0aW9ucyBpbiBmaWxlX29wZXJhdGlvbnMKKyAgICAgIGluIHN0ZWFkIG9mIGdlbmVyaWNfZmls
ZV8qLgorCitOSUtJVEEtRklYTUUtSEFOUzogd2h5IG1ha2Ugb3ZlcmZsb3dzIGEgcGx1Z2luPwor
ICAgIC4gb3Zlci0tLWhhbmRsZSBoYXNoIG92ZXJmbG93cworCisgICAgLiBzcW50LS0taGFuZGxl
IGRpZmZlcmVudCBhY2Nlc3MgcGF0dGVybnMgYW5kIGluc3RydW1lbnRzIHJlYWQtYWhlYWQKKwor
TklLSVRBLUZJWE1FLUhBTlM6IGRlc2NyaWJlIHRoZSBsaW5lIGJlbG93IGluIG1vcmUgZGV0YWls
LgorCisgICAgLiBoaWVyLS0taGFuZGxlIGluaGVyaXRhbmNlIG9mIHBsdWdpbnMgYWxvbmcgZmls
ZS1zeXN0ZW0gaGllcmFyY2h5CisKKyAgIERpZmZlcmVudCBraW5kcyBvZiBpbmhlcml0YW5jZTog
b24gY3JlYXRpb24gdnMuIG9uIGFjY2Vzcy4KKyAgIENvbXBhdGlibGUvaW5jb21wYXRpYmxlIHBs
dWdpbnMuCisgICBJbmhlcml0YW5jZSBmb3IgbXVsdGktbGlua2VkIGZpbGVzLgorICAgTGF5ZXJl
ZCBwbHVnaW5zLgorICAgTm90aW9uIG9mIHBsdWdpbiBjb250ZXh0IGlzIGFiYW5kb25lZC4KKwor
RWFjaCBmaWxlIGlzIGFzc29jaWF0ZWQKKyAgIHdpdGggb25lIHBsdWdpbiBhbmQgZGVwZW5kYW50
IHBsdWdpbnMgKGhhc2gsIGV0Yy4pIGFyZSBzdG9yZWQgYXMKKyAgIG1haW4gcGx1Z2luIHN0YXRl
LiBOb3csIGlmIHdlIGhhdmUgcGx1Z2lucyB1c2VkIGZvciByZWd1bGFyIGZpbGVzCisgICBidXQg
bm90IGZvciBkaXJlY3RvcmllcywgaG93IHN1Y2ggcGx1Z2lucyB3b3VsZCBiZSBpbmhlcml0ZWQ/
CisgICAgLiBhbHdheXMgc3RvcmUgdGhlbSB3aXRoIGRpcmVjdG9yaWVzIGFsc28KKworTklLVElB
LUZJWE1FLUhBTlM6IERvIHRoZSBsaW5lIGFib3ZlLiAgSXQgaXMgbm90IGV4Y2x1c2l2ZSBvZiBk
b2luZwordGhlIGxpbmUgYmVsb3cgd2hpY2ggaXMgYWxzbyB1c2VmdWwuCisKKyAgICAuIHVzZSBp
bmhlcml0YW5jZSBoaWVyYXJjaHksIGluZGVwZW5kZW50IG9mIGZpbGUtc3lzdGVtIG5hbWVzcGFj
ZQorKi8KKworI2luY2x1ZGUgIi4uL2RlYnVnLmgiCisjaW5jbHVkZSAiLi4vZGZvcm1hdC5oIgor
I2luY2x1ZGUgInBsdWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICJpdGVtL3N0YXRpY19zdGF0Lmgi
CisjaW5jbHVkZSAibm9kZS9ub2RlLmgiCisjaW5jbHVkZSAic2VjdXJpdHkvcGVybS5oIgorI2lu
Y2x1ZGUgInNwYWNlL3NwYWNlX2FsbG9jYXRvci5oIgorI2luY2x1ZGUgImRpc2tfZm9ybWF0L2Rp
c2tfZm9ybWF0LmgiCisjaW5jbHVkZSAicGx1Z2luLmgiCisjaW5jbHVkZSAiLi4vcmVpc2VyNC5o
IgorI2luY2x1ZGUgIi4uL2pub2RlLmgiCisjaW5jbHVkZSAiLi4vaW5vZGUuaCIKKworI2luY2x1
ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Jsb2NrICAqLworCisvKgorICog
aW5pdF9wbHVnaW5zIC0gaW5pdGlhbGl6ZSBwbHVnaW4gc3ViLXN5c3RlbS4KKyAqIEp1c3QgY2Fs
bCB0aGlzIG9uY2Ugb24gcmVpc2VyNCBzdGFydHVwLgorICoKKyAqIEluaXRpYWxpemVzIHBsdWdp
biBzdWItc3lzdGVtLiBJdCBpcyBwYXJ0IG9mIHJlaXNlcjQgbW9kdWxlCisgKiBpbml0aWFsaXph
dGlvbi4gRm9yIGVhY2ggcGx1Z2luIG9mIGVhY2ggdHlwZSBpbml0IG1ldGhvZCBpcyBjYWxsZWQg
YW5kIGVhY2gKKyAqIHBsdWdpbiBpcyBwdXQgaW50byBsaXN0IG9mIHBsdWdpbnMuCisgKi8KK2lu
dCBpbml0X3BsdWdpbnModm9pZCkKK3sKKwlyZWlzZXI0X3BsdWdpbl90eXBlIHR5cGVfaWQ7CisK
Kwlmb3IgKHR5cGVfaWQgPSAwOyB0eXBlX2lkIDwgUkVJU0VSNF9QTFVHSU5fVFlQRVM7ICsrdHlw
ZV9pZCkgeworCQlzdHJ1Y3QgcmVpc2VyNF9wbHVnaW5fdHlwZV9kYXRhICpwdHlwZTsKKwkJaW50
IGk7CisKKwkJcHR5cGUgPSAmcGx1Z2luc1t0eXBlX2lkXTsKKwkJYXNzZXJ0KCJuaWtpdGEtMzUw
OCIsIHB0eXBlLT5sYWJlbCAhPSBOVUxMKTsKKwkJYXNzZXJ0KCJuaWtpdGEtMzUwOSIsIHB0eXBl
LT50eXBlX2lkID09IHR5cGVfaWQpOworCisJCUlOSVRfTElTVF9IRUFEKCZwdHlwZS0+cGx1Z2lu
c19saXN0KTsKKy8qIE5JS0lUQS1GSVhNRS1IQU5TOiBjaGFuZ2UgYnVpbHRpbl9udW0gdG8gc29t
ZSBvdGhlciBuYW1lIGxhY2tpbmcgdGhlIHRlcm0KKyAqIGJ1aWx0aW4uICovCisJCWZvciAoaSA9
IDA7IGkgPCBwdHlwZS0+YnVpbHRpbl9udW07ICsraSkgeworCQkJcmVpc2VyNF9wbHVnaW4gKnBs
dWdpbjsKKworCQkJcGx1Z2luID0gcGx1Z2luX2F0KHB0eXBlLCBpKTsKKworCQkJaWYgKHBsdWdp
bi0+aC5sYWJlbCA9PSBOVUxMKQorCQkJCS8qIHVuaW5pdGlhbGl6ZWQgc2xvdCBlbmNvdW50ZXJl
ZCAqLworCQkJCWNvbnRpbnVlOworCQkJYXNzZXJ0KCJuaWtpdGEtMzQ0NSIsIHBsdWdpbi0+aC50
eXBlX2lkID09IHR5cGVfaWQpOworCQkJcGx1Z2luLT5oLmlkID0gaTsKKwkJCWlmIChwbHVnaW4t
PmgucG9wcyAhPSBOVUxMICYmCisJCQkgICAgcGx1Z2luLT5oLnBvcHMtPmluaXQgIT0gTlVMTCkg
eworCQkJCWludCByZXN1bHQ7CisKKwkJCQlyZXN1bHQgPSBwbHVnaW4tPmgucG9wcy0+aW5pdChw
bHVnaW4pOworCQkJCWlmIChyZXN1bHQgIT0gMCkKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCX0K
KwkJCUlOSVRfTElTVF9IRUFEKCZwbHVnaW4tPmgubGlua2FnZSk7CisJCQlsaXN0X2FkZF90YWls
KCZwbHVnaW4tPmgubGlua2FnZSwgJnB0eXBlLT5wbHVnaW5zX2xpc3QpOworCQl9CisJfQorCXJl
dHVybiAwOworfQorCisvKiB0cnVlIGlmIHBsdWdpbiB0eXBlIGlkIGlzIHZhbGlkICovCitpbnQg
aXNfcGx1Z2luX3R5cGVfdmFsaWQocmVpc2VyNF9wbHVnaW5fdHlwZSB0eXBlKQoreworCS8qICJ0
eXBlIiBpcyB1bnNpZ25lZCwgc28gbm8gY29tcGFyaXNvbiB3aXRoIDAgaXMKKwkgICBuZWNlc3Nh
cnkgKi8KKwlyZXR1cm4gKHR5cGUgPCBSRUlTRVI0X1BMVUdJTl9UWVBFUyk7Cit9CisKKy8qIHRy
dWUgaWYgcGx1Z2luIGlkIGlzIHZhbGlkICovCitpbnQgaXNfcGx1Z2luX2lkX3ZhbGlkKHJlaXNl
cjRfcGx1Z2luX3R5cGUgdHlwZSwgcmVpc2VyNF9wbHVnaW5faWQgaWQpCit7CisJYXNzZXJ0KCJu
aWtpdGEtMTY1MyIsIGlzX3BsdWdpbl90eXBlX3ZhbGlkKHR5cGUpKTsKKwlyZXR1cm4gaWQgPCBw
bHVnaW5zW3R5cGVdLmJ1aWx0aW5fbnVtOworfQorCisvKiByZXR1cm4gcGx1Z2luIGJ5IGl0cyBA
dHlwZSBhbmQgQGlkLgorCisgICBCb3RoIGFyZ3VtZW50cyBhcmUgY2hlY2tlZCBmb3IgdmFsaWRu
ZXNzOiB0aGlzIGlzIHN1cHBvc2VkIHRvIGJlIGNhbGxlZAorICAgZnJvbSB1c2VyLWxldmVsLgor
CitOSUtJVEEtRklYTUUtSEFOUzogRG8geW91IGluc3RlYWQgbWVhbiB0aGF0IHRoaXMgY2hlY2tz
IGlkcyBjcmVhdGVkIGluCit1c2VyIHNwYWNlLCBhbmQgcGFzc2VkIHRvIHRoZSBmaWxlc3lzdGVt
IGJ5IHVzZSBvZiBtZXRob2QgZmlsZXM/IFlvdXIKK2NvbW1lbnQgcmVhbGx5IGNvbmZ1c2VkIG1l
IG9uIHRoZSBmaXJzdCByZWFkaW5nLi4uLgorCisqLworcmVpc2VyNF9wbHVnaW4gKnBsdWdpbl9i
eV91bnNhZmVfaWQocmVpc2VyNF9wbHVnaW5fdHlwZSB0eXBlIC8qIHBsdWdpbiB0eXBlCisJCQkJ
CQkJCSAqIHVuY2hlY2tlZCAqLywKKwkJCQkgICAgcmVpc2VyNF9wbHVnaW5faWQgaWQJLyogcGx1
Z2luIGlkLAorCQkJCQkJCQkgKiB1bmNoZWNrZWQgKi8pCit7CisJaWYgKGlzX3BsdWdpbl90eXBl
X3ZhbGlkKHR5cGUpKSB7CisJCWlmIChpc19wbHVnaW5faWRfdmFsaWQodHlwZSwgaWQpKQorCQkJ
cmV0dXJuIHBsdWdpbl9hdCgmcGx1Z2luc1t0eXBlXSwgaWQpOworCQllbHNlCisJCQkvKiBpZCBv
dXQgb2YgYm91bmRzICovCisJCQl3YXJuaW5nKCJuaWtpdGEtMjkxMyIsCisJCQkJIkludmFsaWQg
cGx1Z2luIGlkOiBbJWk6JWldIiwgdHlwZSwgaWQpOworCX0gZWxzZQorCQkvKiB0eXBlX2lkIG91
dCBvZiBib3VuZHMgKi8KKwkJd2FybmluZygibmlraXRhLTI5MTQiLCAiSW52YWxpZCB0eXBlX2lk
OiAlaSIsIHR5cGUpOworCXJldHVybiBOVUxMOworfQorCisvKioKKyAqIHNhdmVfcGx1Z2luX2lk
IC0gc3RvcmUgcGx1Z2luIGlkIGluIGRpc2sgZm9ybWF0CisgKiBAcGx1Z2luOiBwbHVnaW4gdG8g
Y29udmVydAorICogQGFyZWE6IHdoZXJlIHRvIHN0b3JlIHJlc3VsdAorICoKKyAqIFB1dHMgaWQg
b2YgQHBsdWdpbiBpbiBsaXR0bGUgZW5kaWFuIGZvcm1hdCB0byBhZGRyZXNzIEBhcmVhLgorICov
CitpbnQgc2F2ZV9wbHVnaW5faWQocmVpc2VyNF9wbHVnaW4gKnBsdWdpbiAvKiBwbHVnaW4gdG8g
Y29udmVydCAqLyAsCisJCSAgIGQxNiAqIGFyZWEvKiB3aGVyZSB0byBzdG9yZSByZXN1bHQgKi8p
Cit7CisJYXNzZXJ0KCJuaWtpdGEtMTI2MSIsIHBsdWdpbiAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS0xMjYyIiwgYXJlYSAhPSBOVUxMKTsKKworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlMTYo
cGx1Z2luLT5oLmlkKSwgYXJlYSk7CisJcmV0dXJuIDA7Cit9CisKKy8qIGxpc3Qgb2YgYWxsIHBs
dWdpbnMgb2YgZ2l2ZW4gdHlwZSAqLworc3RydWN0IGxpc3RfaGVhZCAqZ2V0X3BsdWdpbl9saXN0
KHJlaXNlcjRfcGx1Z2luX3R5cGUgdHlwZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xMDU2IiwgaXNf
cGx1Z2luX3R5cGVfdmFsaWQodHlwZSkpOworCXJldHVybiAmcGx1Z2luc1t0eXBlXS5wbHVnaW5z
X2xpc3Q7Cit9CisKK3N0YXRpYyB2b2lkIHVwZGF0ZV9wc2V0X21hc2socmVpc2VyNF9pbm9kZSAq
IGluZm8sIHBzZXRfbWVtYmVyIG1lbWIpCit7CisJc3RydWN0IGRlbnRyeSAqcm9vdGRpcjsKKwly
ZWlzZXI0X2lub2RlICpyb290OworCisJYXNzZXJ0KCJlZHdhcmQtMTQ0MyIsIG1lbWIgIT0gUFNF
VF9GSUxFKTsKKworCXJvb3RkaXIgPSBpbm9kZV9ieV9yZWlzZXI0X2lub2RlKGluZm8pLT5pX3Ni
LT5zX3Jvb3Q7CisJaWYgKHJvb3RkaXIgIT0gTlVMTCkgeworCQlyb290ID0gcmVpc2VyNF9pbm9k
ZV9kYXRhKHJvb3RkaXItPmRfaW5vZGUpOworCQkvKgorCQkgKiBpZiBpbm9kZSBpcyBkaWZmZXJl
bnQgZnJvbSB0aGUgZGVmYXVsdCBvbmUsIG9yIHdlIGFyZQorCQkgKiBjaGFuZ2luZyBwbHVnaW4g
b2Ygcm9vdCBkaXJlY3RvcnksIHVwZGF0ZSBwbHVnaW5fbWFzaworCQkgKi8KKwkJaWYgKGFzZXRf
Z2V0KGluZm8tPnBzZXQsIG1lbWIpICE9CisJCSAgICBhc2V0X2dldChyb290LT5wc2V0LCBtZW1i
KSB8fAorCQkgICAgaW5mbyA9PSByb290KQorCQkJaW5mby0+cGx1Z2luX21hc2sgfD0gKDEgPDwg
bWVtYik7CisJCWVsc2UKKwkJCWluZm8tPnBsdWdpbl9tYXNrICY9IH4oMSA8PCBtZW1iKTsKKwl9
Cit9CisKKy8qIEdldCBzcGVjaWZpZWQgcGx1Z2luIHNldCBtZW1iZXIgZnJvbSBwYXJlbnQsCisg
ICBvciBmcm9tIGZzLWRlZmF1bHRzIChpZiBubyBwYXJlbnQgaXMgZ2l2ZW4pIGFuZAorICAgaW5z
dGFsbCB0aGUgcmVzdWx0IHRvIHBzZXQgb2YgQHNlbGYgKi8KK2ludCBncmFiX3BsdWdpbl9wc2V0
KHN0cnVjdCBpbm9kZSAqc2VsZiwKKwkJICAgICBzdHJ1Y3QgaW5vZGUgKmFuY2VzdG9yLAorCQkg
ICAgIHBzZXRfbWVtYmVyIG1lbWIpCit7CisJcmVpc2VyNF9wbHVnaW4gKnBsdWc7CisJcmVpc2Vy
NF9pbm9kZSAqaW5mbzsKKwlpbnQgcmVzdWx0ID0gMDsKKworCS8qIERvIG5vdCBncmFiIGlmIGlu
aXRpYWxpc2VkIGFscmVhZHkuICovCisJaW5mbyA9IHJlaXNlcjRfaW5vZGVfZGF0YShzZWxmKTsK
KwlpZiAoYXNldF9nZXQoaW5mby0+cHNldCwgbWVtYikgIT0gTlVMTCkKKwkJcmV0dXJuIDA7CisJ
aWYgKGFuY2VzdG9yKSB7CisJCXJlaXNlcjRfaW5vZGUgKnBhcmVudDsKKworCQlwYXJlbnQgPSBy
ZWlzZXI0X2lub2RlX2RhdGEoYW5jZXN0b3IpOworCQlwbHVnID0gYXNldF9nZXQocGFyZW50LT5o
c2V0LCBtZW1iKSA/IDoKKwkJCWFzZXRfZ2V0KHBhcmVudC0+cHNldCwgbWVtYik7CisJfSBlbHNl
CisJCXBsdWcgPSBnZXRfZGVmYXVsdF9wbHVnaW4obWVtYik7CisKKwlyZXN1bHQgPSBzZXRfcGx1
Z2luKCZpbmZvLT5wc2V0LCBtZW1iLCBwbHVnKTsKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJaWYg
KCFhbmNlc3RvciB8fCBzZWxmLT5pX3NiLT5zX3Jvb3QtPmRfaW5vZGUgIT0gc2VsZikKKwkJCXVw
ZGF0ZV9wc2V0X21hc2soaW5mbywgbWVtYik7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8q
IFRha2UgbWlzc2luZyBwc2V0IG1lbWJlcnMgZnJvbSByb290IGlub2RlICovCitpbnQgZmluaXNo
X3BzZXQoc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZWlzZXI0X3BsdWdpbiAqcGx1ZzsKKwly
ZWlzZXI0X2lub2RlICpyb290OworCXJlaXNlcjRfaW5vZGUgKmluZm87CisJcHNldF9tZW1iZXIg
bWVtYjsKKwlpbnQgcmVzdWx0ID0gMDsKKworCXJvb3QgPSByZWlzZXI0X2lub2RlX2RhdGEoaW5v
ZGUtPmlfc2ItPnNfcm9vdC0+ZF9pbm9kZSk7CisJaW5mbyA9IHJlaXNlcjRfaW5vZGVfZGF0YShp
bm9kZSk7CisKKwlhc3NlcnQoImVkd2FyZC0xNDU1Iiwgcm9vdCAhPSBOVUxMKTsKKwlhc3NlcnQo
ImVkd2FyZC0xNDU2IiwgaW5mbyAhPSBOVUxMKTsKKworCS8qIGZpbGUgYW5kIGRpcmVjdG9yeSBw
bHVnaW5zIGFyZSBhbHJlYWR5IGluaXRpYWxpemVkLiAqLworCWZvciAobWVtYiA9IFBTRVRfRElS
ICsgMTsgbWVtYiA8IFBTRVRfTEFTVDsgKyttZW1iKSB7CisKKwkJLyogRG8gbm90IGdyYWIgaWYg
aW5pdGlhbGlzZWQgYWxyZWFkeS4gKi8KKwkJaWYgKGFzZXRfZ2V0KGluZm8tPnBzZXQsIG1lbWIp
ICE9IE5VTEwpCisJCQljb250aW51ZTsKKworCQlwbHVnID0gYXNldF9nZXQocm9vdC0+cHNldCwg
bWVtYik7CisJCXJlc3VsdCA9IHNldF9wbHVnaW4oJmluZm8tPnBzZXQsIG1lbWIsIHBsdWcpOwor
CQlpZiAocmVzdWx0ICE9IDApCisJCQlicmVhazsKKwl9CisJaWYgKHJlc3VsdCAhPSAwKSB7CisJ
CXdhcm5pbmcoIm5pa2l0YS0zNDQ3IiwKKwkJCSJDYW5ub3Qgc2V0IHVwIHBsdWdpbnMgZm9yICVs
bGkiLAorCQkJKHVuc2lnbmVkIGxvbmcgbG9uZykKKwkJCWdldF9pbm9kZV9vaWQoaW5vZGUpKTsK
Kwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworaW50IGZvcmNlX3BsdWdpbl9wc2V0KHN0cnVjdCBp
bm9kZSAqc2VsZiwgcHNldF9tZW1iZXIgbWVtYiwKKwkJICAgICAgcmVpc2VyNF9wbHVnaW4gKiBw
bHVnKQoreworCXJlaXNlcjRfaW5vZGUgKmluZm87CisJaW50IHJlc3VsdCA9IDA7CisKKwlpZiAo
IXNlbGYtPmlfc2ItPnNfcm9vdCB8fCBzZWxmLT5pX3NiLT5zX3Jvb3QtPmRfaW5vZGUgPT0gc2Vs
ZikgeworCQkvKiBDaGFuZ2luZyBwc2V0IGluIHRoZSByb290IG9iamVjdC4gKi8KKwkJcmV0dXJu
IFJFVEVSUigtRUlOVkFMKTsKKwl9CisKKwlpbmZvID0gcmVpc2VyNF9pbm9kZV9kYXRhKHNlbGYp
OworCWlmIChwbHVnLT5oLnBvcHMgIT0gTlVMTCAmJiBwbHVnLT5oLnBvcHMtPmNoYW5nZSAhPSBO
VUxMKQorCQlyZXN1bHQgPSBwbHVnLT5oLnBvcHMtPmNoYW5nZShzZWxmLCBwbHVnLCBtZW1iKTsK
KwllbHNlCisJCXJlc3VsdCA9IGFzZXRfc2V0X3Vuc2FmZSgmaW5mby0+cHNldCwgbWVtYiwgcGx1
Zyk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJCV9fdTE2IG9sZG1hc2sgPSBpbmZvLT5wbHVnaW5f
bWFzazsKKworCQl1cGRhdGVfcHNldF9tYXNrKGluZm8sIG1lbWIpOworCQlpZiAob2xkbWFzayAh
PSBpbmZvLT5wbHVnaW5fbWFzaykKKwkJCXJlaXNlcjRfaW5vZGVfY2xyX2ZsYWcoc2VsZiwgUkVJ
U0VSNF9TRExFTl9LTk9XTik7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKK3N0cnVjdCByZWlz
ZXI0X3BsdWdpbl90eXBlX2RhdGEgcGx1Z2luc1tSRUlTRVI0X1BMVUdJTl9UWVBFU10gPSB7CisJ
LyogQzkwIGluaXRpYWxpemVycyAqLworCVtSRUlTRVI0X0ZJTEVfUExVR0lOX1RZUEVdID0gewor
CQkudHlwZV9pZCA9IFJFSVNFUjRfRklMRV9QTFVHSU5fVFlQRSwKKwkJLmxhYmVsID0gImZpbGUi
LAorCQkuZGVzYyA9ICJPYmplY3QgcGx1Z2lucyIsCisJCS5idWlsdGluX251bSA9IHNpemVvZl9h
cnJheShmaWxlX3BsdWdpbnMpLAorCQkuYnVpbHRpbiA9IGZpbGVfcGx1Z2lucywKKwkJLnBsdWdp
bnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwKKwkJLnNpemUgPSBzaXplb2YoZmlsZV9wbHVnaW4pCisJ
fSwKKwlbUkVJU0VSNF9ESVJfUExVR0lOX1RZUEVdID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRf
RElSX1BMVUdJTl9UWVBFLAorCQkubGFiZWwgPSAiZGlyIiwKKwkJLmRlc2MgPSAiRGlyZWN0b3J5
IHBsdWdpbnMiLAorCQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXkoZGlyX3BsdWdpbnMpLAor
CQkuYnVpbHRpbiA9IGRpcl9wbHVnaW5zLAorCQkucGx1Z2luc19saXN0ID0ge05VTEwsIE5VTEx9
LAorCQkuc2l6ZSA9IHNpemVvZihkaXJfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfSEFTSF9QTFVH
SU5fVFlQRV0gPSB7CisJCS50eXBlX2lkID0gUkVJU0VSNF9IQVNIX1BMVUdJTl9UWVBFLAorCQku
bGFiZWwgPSAiaGFzaCIsCisJCS5kZXNjID0gIkRpcmVjdG9yeSBoYXNoZXMiLAorCQkuYnVpbHRp
bl9udW0gPSBzaXplb2ZfYXJyYXkoaGFzaF9wbHVnaW5zKSwKKwkJLmJ1aWx0aW4gPSBoYXNoX3Bs
dWdpbnMsCisJCS5wbHVnaW5zX2xpc3QgPSB7TlVMTCwgTlVMTH0sCisJCS5zaXplID0gc2l6ZW9m
KGhhc2hfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfRklCUkFUSU9OX1BMVUdJTl9UWVBFXSA9IHsK
KwkJLnR5cGVfaWQgPQorCQlSRUlTRVI0X0ZJQlJBVElPTl9QTFVHSU5fVFlQRSwKKwkJLmxhYmVs
ID0gImZpYnJhdGlvbiIsCisJCS5kZXNjID0gIkRpcmVjdG9yeSBmaWJyYXRpb25zIiwKKwkJLmJ1
aWx0aW5fbnVtID0gc2l6ZW9mX2FycmF5KGZpYnJhdGlvbl9wbHVnaW5zKSwKKwkJLmJ1aWx0aW4g
PSBmaWJyYXRpb25fcGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9CXtOVUxMLCBOVUxMfSwKKwkJ
LnNpemUgPSBzaXplb2YoZmlicmF0aW9uX3BsdWdpbikKKwl9LAorCVtSRUlTRVI0X0NJUEhFUl9Q
TFVHSU5fVFlQRV0gPSB7CisJCS50eXBlX2lkID0gUkVJU0VSNF9DSVBIRVJfUExVR0lOX1RZUEUs
CisJCS5sYWJlbCA9ICJjaXBoZXIiLAorCQkuZGVzYyA9ICJDaXBoZXIgcGx1Z2lucyIsCisJCS5i
dWlsdGluX251bSA9IHNpemVvZl9hcnJheShjaXBoZXJfcGx1Z2lucyksCisJCS5idWlsdGluID0g
Y2lwaGVyX3BsdWdpbnMsCisJCS5wbHVnaW5zX2xpc3QgPQl7TlVMTCwgTlVMTH0sCisJCS5zaXpl
ID0gc2l6ZW9mKGNpcGhlcl9wbHVnaW4pCisJfSwKKwlbUkVJU0VSNF9ESUdFU1RfUExVR0lOX1RZ
UEVdID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRfRElHRVNUX1BMVUdJTl9UWVBFLAorCQkubGFi
ZWwgPSAiZGlnZXN0IiwKKwkJLmRlc2MgPSAiRGlnZXN0IHBsdWdpbnMiLAorCQkuYnVpbHRpbl9u
dW0gPSBzaXplb2ZfYXJyYXkoZGlnZXN0X3BsdWdpbnMpLAorCQkuYnVpbHRpbiA9IGRpZ2VzdF9w
bHVnaW5zLAorCQkucGx1Z2luc19saXN0ID0Je05VTEwsIE5VTEx9LAorCQkuc2l6ZSA9IHNpemVv
ZihkaWdlc3RfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEVd
ID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUsCisJCS5s
YWJlbCA9ICJjb21wcmVzc2lvbiIsCisJCS5kZXNjID0gIkNvbXByZXNzaW9uIHBsdWdpbnMiLAor
CQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXkoY29tcHJlc3Npb25fcGx1Z2lucyksCisJCS5i
dWlsdGluID0gY29tcHJlc3Npb25fcGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBO
VUxMfSwKKwkJLnNpemUgPSBzaXplb2YoY29tcHJlc3Npb25fcGx1Z2luKQorCX0sCisJW1JFSVNF
UjRfRk9STUFUVElOR19QTFVHSU5fVFlQRV0gPSB7CisJCS50eXBlX2lkID0gUkVJU0VSNF9GT1JN
QVRUSU5HX1BMVUdJTl9UWVBFLAorCQkubGFiZWwgPSAiZm9ybWF0dGluZyIsCisJCS5kZXNjID0g
IlRhaWwgaW5saW5pbmcgcG9saWNpZXMiLAorCQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXko
Zm9ybWF0dGluZ19wbHVnaW5zKSwKKwkJLmJ1aWx0aW4gPSBmb3JtYXR0aW5nX3BsdWdpbnMsCisJ
CS5wbHVnaW5zX2xpc3QgPSB7TlVMTCwgTlVMTH0sCisJCS5zaXplID0gc2l6ZW9mKGZvcm1hdHRp
bmdfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfUEVSTV9QTFVHSU5fVFlQRV0gPSB7CisJCS50eXBl
X2lkID0gUkVJU0VSNF9QRVJNX1BMVUdJTl9UWVBFLAorCQkubGFiZWwgPSAicGVybSIsCisJCS5k
ZXNjID0gIlBlcm1pc3Npb24gY2hlY2tzIiwKKwkJLmJ1aWx0aW5fbnVtID0gc2l6ZW9mX2FycmF5
KHBlcm1fcGx1Z2lucyksCisJCS5idWlsdGluID0gcGVybV9wbHVnaW5zLAorCQkucGx1Z2luc19s
aXN0ID0ge05VTEwsIE5VTEx9LAorCQkuc2l6ZSA9IHNpemVvZihwZXJtX3BsdWdpbikKKwl9LAor
CVtSRUlTRVI0X0lURU1fUExVR0lOX1RZUEVdID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRfSVRF
TV9QTFVHSU5fVFlQRSwKKwkJLmxhYmVsID0gIml0ZW0iLAorCQkuZGVzYyA9ICJJdGVtIGhhbmRs
ZXJzIiwKKwkJLmJ1aWx0aW5fbnVtID0gc2l6ZW9mX2FycmF5KGl0ZW1fcGx1Z2lucyksCisJCS5i
dWlsdGluID0gaXRlbV9wbHVnaW5zLAorCQkucGx1Z2luc19saXN0ID0ge05VTEwsIE5VTEx9LAor
CQkuc2l6ZSA9IHNpemVvZihpdGVtX3BsdWdpbikKKwl9LAorCVtSRUlTRVI0X05PREVfUExVR0lO
X1RZUEVdID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRfTk9ERV9QTFVHSU5fVFlQRSwKKwkJLmxh
YmVsID0gIm5vZGUiLAorCQkuZGVzYyA9ICJub2RlIGxheW91dCBoYW5kbGVycyIsCisJCS5idWls
dGluX251bSA9IHNpemVvZl9hcnJheShub2RlX3BsdWdpbnMpLAorCQkuYnVpbHRpbiA9IG5vZGVf
cGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwKKwkJLnNpemUgPSBzaXpl
b2Yobm9kZV9wbHVnaW4pCisJfSwKKwlbUkVJU0VSNF9TRF9FWFRfUExVR0lOX1RZUEVdID0gewor
CQkudHlwZV9pZCA9IFJFSVNFUjRfU0RfRVhUX1BMVUdJTl9UWVBFLAorCQkubGFiZWwgPSAic2Rf
ZXh0IiwKKwkJLmRlc2MgPSAiUGFydHMgb2Ygc3RhdC1kYXRhIiwKKwkJLmJ1aWx0aW5fbnVtID0g
c2l6ZW9mX2FycmF5KHNkX2V4dF9wbHVnaW5zKSwKKwkJLmJ1aWx0aW4gPSBzZF9leHRfcGx1Z2lu
cywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwKKwkJLnNpemUgPSBzaXplb2Yoc2Rf
ZXh0X3BsdWdpbikKKwl9LAorCVtSRUlTRVI0X0ZPUk1BVF9QTFVHSU5fVFlQRV0gPSB7CisJCS50
eXBlX2lkID0gUkVJU0VSNF9GT1JNQVRfUExVR0lOX1RZUEUsCisJCS5sYWJlbCA9ICJkaXNrX2xh
eW91dCIsCisJCS5kZXNjID0gImRlZmluZXMgZmlsZXN5c3RlbSBvbiBkaXNrIGxheW91dCIsCisJ
CS5idWlsdGluX251bSA9IHNpemVvZl9hcnJheShmb3JtYXRfcGx1Z2lucyksCisJCS5idWlsdGlu
ID0gZm9ybWF0X3BsdWdpbnMsCisJCS5wbHVnaW5zX2xpc3QgPSB7TlVMTCwgTlVMTH0sCisJCS5z
aXplID0gc2l6ZW9mKGRpc2tfZm9ybWF0X3BsdWdpbikKKwl9LAorCVtSRUlTRVI0X0pOT0RFX1BM
VUdJTl9UWVBFXSA9IHsKKwkJLnR5cGVfaWQgPSBSRUlTRVI0X0pOT0RFX1BMVUdJTl9UWVBFLAor
CQkubGFiZWwgPSAiam5vZGUiLAorCQkuZGVzYyA9ICJkZWZpbmVzIGtpbmQgb2Ygam5vZGUiLAor
CQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXkoam5vZGVfcGx1Z2lucyksCisJCS5idWlsdGlu
ID0gam5vZGVfcGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwKKwkJLnNp
emUgPSBzaXplb2Yoam5vZGVfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfQ09NUFJFU1NJT05fTU9E
RV9QTFVHSU5fVFlQRV0gPSB7CisJCS50eXBlX2lkID0gUkVJU0VSNF9DT01QUkVTU0lPTl9NT0RF
X1BMVUdJTl9UWVBFLAorCQkubGFiZWwgPSAiY29tcHJlc3Npb25fbW9kZSIsCisJCS5kZXNjID0g
IkRlZmluZXMgY29tcHJlc3Npb24gbW9kZSIsCisJCS5idWlsdGluX251bSA9IHNpemVvZl9hcnJh
eShjb21wcmVzc2lvbl9tb2RlX3BsdWdpbnMpLAorCQkuYnVpbHRpbiA9IGNvbXByZXNzaW9uX21v
ZGVfcGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwKKwkJLnNpemUgPSBz
aXplb2YoY29tcHJlc3Npb25fbW9kZV9wbHVnaW4pCisJfSwKKwlbUkVJU0VSNF9DTFVTVEVSX1BM
VUdJTl9UWVBFXSA9IHsKKwkJLnR5cGVfaWQgPSBSRUlTRVI0X0NMVVNURVJfUExVR0lOX1RZUEUs
CisJCS5sYWJlbCA9ICJjbHVzdGVyIiwKKwkJLmRlc2MgPSAiRGVmaW5lcyBjbHVzdGVyIHNpemUi
LAorCQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXkoY2x1c3Rlcl9wbHVnaW5zKSwKKwkJLmJ1
aWx0aW4gPSBjbHVzdGVyX3BsdWdpbnMsCisJCS5wbHVnaW5zX2xpc3QgPSB7TlVMTCwgTlVMTH0s
CisJCS5zaXplID0gc2l6ZW9mKGNsdXN0ZXJfcGx1Z2luKQorCX0sCisJW1JFSVNFUjRfVFhNT0Rf
UExVR0lOX1RZUEVdID0geworCQkudHlwZV9pZCA9IFJFSVNFUjRfVFhNT0RfUExVR0lOX1RZUEUs
CisJCS5sYWJlbCA9ICJ0eG1vZCIsCisJCS5kZXNjID0gIkRlZmluZXMgdHJhbnNhY3Rpb24gbW9k
ZWwiLAorCQkuYnVpbHRpbl9udW0gPSBzaXplb2ZfYXJyYXkodHhtb2RfcGx1Z2lucyksCisJCS5i
dWlsdGluID0gdHhtb2RfcGx1Z2lucywKKwkJLnBsdWdpbnNfbGlzdCA9IHtOVUxMLCBOVUxMfSwK
KwkJLnNpemUgPSBzaXplb2YodHhtb2RfcGx1Z2luKQorCX0KK307CisKKy8qCisgKiBMb2NhbCB2
YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICogbW9kZS1uYW1lOiAi
TEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAorICogdGFiLXdpZHRoOiA4CisgKiBmaWxsLWNvbHVt
bjogMTIwCisgKiBFbmQ6CisgKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40
LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vcGx1Z2luLmggbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvcGx1Z2luL3BsdWdpbi5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdp
bi9wbHVnaW4uaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgt
NS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3BsdWdpbi5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDc1
MjIyMzQ5ICswMTAwCkBAIC0wLDAgKzEsOTk5IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwg
MjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JF
QURNRSAqLworCisvKiBCYXNpYyBwbHVnaW4gZGF0YS10eXBlcy4KKyAgIHNlZSBmcy9yZWlzZXI0
L3BsdWdpbi9wbHVnaW4uYyBmb3IgZGV0YWlscyAqLworCisjaWYgIWRlZmluZWQoX19GU19SRUlT
RVI0X1BMVUdJTl9UWVBFU19IX18pCisjZGVmaW5lIF9fRlNfUkVJU0VSNF9QTFVHSU5fVFlQRVNf
SF9fCisKKyNpbmNsdWRlICIuLi9mb3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vZGVidWcuaCIKKyNp
bmNsdWRlICIuLi9kZm9ybWF0LmgiCisjaW5jbHVkZSAiLi4va2V5LmgiCisjaW5jbHVkZSAiY29t
cHJlc3MvY29tcHJlc3MuaCIKKyNpbmNsdWRlICJjcnlwdG8vY2lwaGVyLmgiCisjaW5jbHVkZSAi
cGx1Z2luX2hlYWRlci5oIgorI2luY2x1ZGUgIml0ZW0vc3RhdGljX3N0YXQuaCIKKyNpbmNsdWRl
ICJpdGVtL2ludGVybmFsLmgiCisjaW5jbHVkZSAiaXRlbS9zZGUuaCIKKyNpbmNsdWRlICJpdGVt
L2NkZS5oIgorI2luY2x1ZGUgIml0ZW0vaXRlbS5oIgorI2luY2x1ZGUgIm5vZGUvbm9kZS5oIgor
I2luY2x1ZGUgIm5vZGUvbm9kZTQxLmgiCisjaW5jbHVkZSAic2VjdXJpdHkvcGVybS5oIgorI2lu
Y2x1ZGUgImZpYnJhdGlvbi5oIgorCisjaW5jbHVkZSAic3BhY2UvYml0bWFwLmgiCisjaW5jbHVk
ZSAic3BhY2Uvc3BhY2VfYWxsb2NhdG9yLmgiCisKKyNpbmNsdWRlICJkaXNrX2Zvcm1hdC9kaXNr
X2Zvcm1hdDQwLmgiCisjaW5jbHVkZSAiZGlza19mb3JtYXQvZGlza19mb3JtYXQuaCIKKworI2lu
Y2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Jsb2NrLCBhZGRyZXNzX3Nw
YWNlICAqLworI2luY2x1ZGUgPGxpbnV4L21tLmg+CQkvKiBmb3Igc3RydWN0IHBhZ2UgKi8KKyNp
bmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgkvKiBmb3Igc3RydWN0IGJ1ZmZlcl9oZWFkICov
CisjaW5jbHVkZSA8bGludXgvZGNhY2hlLmg+CS8qIGZvciBzdHJ1Y3QgZGVudHJ5ICovCisjaW5j
bHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9jcnlwdG8uaD4KKwordHlwZWRl
ZiBzdHJ1Y3QgcmVpc2VyNF9vYmplY3Rfb25fd2lyZSByZWlzZXI0X29iamVjdF9vbl93aXJlOwor
CisvKgorICogRmlsZSBwbHVnaW4uICBEZWZpbmVzIHRoZSBzZXQgb2YgbWV0aG9kcyB0aGF0IGZp
bGUgcGx1Z2lucyBpbXBsZW1lbnQsIHNvbWUKKyAqIG9mIHdoaWNoIGFyZSBvcHRpb25hbC4KKyAq
CisgKiBBIGZpbGUgcGx1Z2luIG9mZmVycyB0byB0aGUgY2FsbGVyIGFuIGludGVyZmFjZSBmb3Ig
SU8gKCB3cml0aW5nIHRvIGFuZC9vcgorICogcmVhZGluZyBmcm9tKSB0byB3aGF0IHRoZSBjYWxs
ZXIgc2VlcyBhcyBvbmUgc2VxdWVuY2Ugb2YgYnl0ZXMuICBBbiBJTyB0byBpdAorICogbWF5IGFm
ZmVjdCBtb3JlIHRoYW4gb25lIHBoeXNpY2FsIHNlcXVlbmNlIG9mIGJ5dGVzLCBvciBubyBwaHlz
aWNhbCBzZXF1ZW5jZQorICogb2YgYnl0ZXMsIGl0IG1heSBhZmZlY3Qgc2VxdWVuY2VzIG9mIGJ5
dGVzIG9mZmVyZWQgYnkgb3RoZXIgZmlsZSBwbHVnaW5zIHRvCisgKiB0aGUgc2VtYW50aWMgbGF5
ZXIsIGFuZCB0aGUgZmlsZSBwbHVnaW4gbWF5IGludm9rZSBvdGhlciBwbHVnaW5zIGFuZAorICog
ZGVsZWdhdGUgd29yayB0byB0aGVtLCBidXQgaXRzIGludGVyZmFjZSBpcyBzdHJ1Y3R1cmVkIGZv
ciBvZmZlcmluZyB0aGUKKyAqIGNhbGxlciB0aGUgYWJpbGl0eSB0byByZWFkIGFuZC9vciB3cml0
ZSB3aGF0IHRoZSBjYWxsZXIgc2VlcyBhcyBiZWluZyBhCisgKiBzaW5nbGUgc2VxdWVuY2Ugb2Yg
Ynl0ZXMuCisgKgorICogVGhlIGZpbGUgcGx1Z2luIG11c3QgcHJlc2VudCBhIHNlcXVlbmNlIG9m
IGJ5dGVzIHRvIHRoZSBjYWxsZXIsIGJ1dCBpdCBkb2VzCisgKiBub3QgbmVjZXNzYXJpbHkgaGF2
ZSB0byBzdG9yZSBhIHNlcXVlbmNlIG9mIGJ5dGVzLCBpdCBkb2VzIG5vdCBuZWNlc3NhcmlseQor
ICogaGF2ZSB0byBzdXBwb3J0IGVmZmljaWVudCB0cmVlIHRyYXZlcnNhbCB0byBhbnkgb2Zmc2V0
IGluIHRoZSBzZXF1ZW5jZSBvZgorICogYnl0ZXMgKHRhaWwgYW5kIGV4dGVudCBpdGVtcywgd2hv
c2Uga2V5cyBjb250YWluIG9mZnNldHMsIGRvIGhvd2V2ZXIgcHJvdmlkZQorICogZWZmaWNpZW50
IG5vbi1zZXF1ZW50aWFsIGxvb2t1cCBvZiBhbnkgb2Zmc2V0IGluIHRoZSBzZXF1ZW5jZSBvZiBi
eXRlcykuCisgKgorICogRGlyZWN0b3J5IHBsdWdpbnMgcHJvdmlkZSBtZXRob2RzIGZvciBzZWxl
Y3RpbmcgZmlsZSBwbHVnaW5zIGJ5IHJlc29sdmluZyBhCisgKiBuYW1lIGZvciB0aGVtLgorICoK
KyAqIFRoZSBmdW5jdGlvbmFsaXR5IG90aGVyIGZpbGVzeXN0ZW1zIGNhbGwgYW4gYXR0cmlidXRl
LCBhbmQgcmlnaWRseSB0aWUKKyAqIHRvZ2V0aGVyLCB3ZSBkZWNvbXBvc2UgaW50byBvcnRob2dv
bmFsIHNlbGVjdGFibGUgZmVhdHVyZXMgb2YgZmlsZXMuICBVc2luZworICogdGhlIHRlcm1pbm9s
b2d5IHdlIHdpbGwgZGVmaW5lIG5leHQsIGFuIGF0dHJpYnV0ZSBpcyBhIHBlcmhhcHMgY29uc3Ry
YWluZWQsCisgKiBwZXJoYXBzIHN0YXRpYyBsZW5ndGgsIGZpbGUgd2hvc2UgcGFyZW50IGhhcyBh
IHVuaS1jb3VudC1pbnRyYS1saW5rIHRvIGl0LAorICogd2hpY2ggbWlnaHQgYmUgZ3JhbmRwYXJl
bnQtbWFqb3ItcGFja2VkLCBhbmQgd2hvc2UgcGFyZW50IGhhcyBhIGRlbGV0aW9uCisgKiBtZXRo
b2QgdGhhdCBkZWxldGVzIGl0LgorICoKKyAqIEZpbGUgcGx1Z2lucyBjYW4gaW1wbGVtZW50IGNv
bnN0cmFpbnRzLgorICoKKyAqIEZpbGVzIGNhbiBiZSBvZiB2YXJpYWJsZSBsZW5ndGggKGUuZy4g
cmVndWxhciB1bml4IGZpbGVzKSwgb3Igb2Ygc3RhdGljCisgKiBsZW5ndGggKGUuZy4gc3RhdGlj
IHNpemVkIGF0dHJpYnV0ZXMpLgorICoKKyAqIEFuIG9iamVjdCBtYXkgaGF2ZSBtYW55IHNlcXVl
bmNlcyBvZiBieXRlcywgYW5kIG1hbnkgZmlsZSBwbHVnaW5zLCBidXQsIGl0CisgKiBoYXMgZXhh
Y3RseSBvbmUgb2JqZWN0aWQuICBJdCBpcyB1c3VhbGx5IGRlc2lyYWJsZSB0aGF0IGFuIG9iamVj
dCBoYXMgYQorICogZGVsZXRpb24gbWV0aG9kIHdoaWNoIGRlbGV0ZXMgZXZlcnkgaXRlbSB3aXRo
IHRoYXQgb2JqZWN0aWQuICBJdGVtcyBjYW5ub3QKKyAqIGluIGdlbmVyYWwgYmUgZm91bmQgYnkg
anVzdCB0aGVpciBvYmplY3RpZHMuICBUaGlzIG1lYW5zIHRoYXQgYW4gb2JqZWN0IG11c3QKKyAq
IGhhdmUgZWl0aGVyIGEgbWV0aG9kIGJ1aWx0IGludG8gaXRzIGRlbGV0aW9uIHBsdWdpbiBtZXRo
b2QgZm9yIGtub3dpbmcgd2hhdAorICogaXRlbXMgbmVlZCB0byBiZSBkZWxldGVkLCBvciBsaW5r
cyBzdG9yZWQgd2l0aCB0aGUgb2JqZWN0IHRoYXQgcHJvdmlkZSB0aGUKKyAqIHBsdWdpbiB3aXRo
IGEgbWV0aG9kIGZvciBmaW5kaW5nIHRob3NlIGl0ZW1zLiAgRGVsZXRpbmcgYSBmaWxlIHdpdGhp
biBhbgorICogb2JqZWN0IG1heSBvciBtYXkgbm90IGhhdmUgdGhlIGVmZmVjdCBvZiBkZWxldGlu
ZyB0aGUgZW50aXJlIG9iamVjdCwKKyAqIGRlcGVuZGluZyBvbiB0aGUgZmlsZSBwbHVnaW4ncyBk
ZWxldGlvbiBtZXRob2QuCisgKgorICogTElOSyBUQVhPTk9NWToKKyAqCisgKiBNYW55IG9iamVj
dHMgaGF2ZSBhIHJlZmVyZW5jZSBjb3VudCwgYW5kIHdoZW4gdGhlIHJlZmVyZW5jZSBjb3VudCBy
ZWFjaGVzIDAKKyAqIHRoZSBvYmplY3QncyBkZWxldGlvbiBtZXRob2QgaXMgaW52b2tlZC4gIFNv
bWUgbGlua3MgZW1ib2R5IGEgcmVmZXJlbmNlCisgKiBjb3VudCBpbmNyZWFzZSAoImNvdW50bGlu
a3MiKSwgYW5kIG90aGVycyBkbyBub3QgKCJub2NvdW50bGlua3MiKS4KKyAqCisgKiBTb21lIGxp
bmtzIGFyZSBiaS1kaXJlY3Rpb25hbCBsaW5rcyAoImJpbGlua3MiKSwgYW5kIHNvbWUgYXJlCisg
KiB1bmktZGlyZWN0aW9uYWwoInVuaWxpbmtzIikuCisgKgorICogU29tZSBsaW5rcyBhcmUgYmV0
d2VlbiBwYXJ0cyBvZiB0aGUgc2FtZSBvYmplY3QgKCJpbnRyYWxpbmtzIiksIGFuZCBzb21lIGFy
ZQorICogYmV0d2VlbiBkaWZmZXJlbnQgb2JqZWN0cyAoImludGVybGlua3MiKS4KKyAqCisgKiBQ
QUNLSU5HIFRBWE9OT01ZOgorICoKKyAqIFNvbWUgaXRlbXMgb2YgYW4gb2JqZWN0IGFyZSBzdG9y
ZWQgd2l0aCBhIG1ham9yIHBhY2tpbmcgbG9jYWxpdHkgYmFzZWQgb24KKyAqIHRoZWlyIG9iamVj
dCdzIG9iamVjdGlkIChlLmcuIHVuaXggZGlyZWN0b3J5IGl0ZW1zIGluIHBsYW4gQSksIGFuZCB0
aGVzZSBhcmUKKyAqIGNhbGxlZCAic2VsZi1tYWpvci1wYWNrZWQiLgorICoKKyAqIFNvbWUgaXRl
bXMgb2YgYW4gb2JqZWN0IGFyZSBzdG9yZWQgd2l0aCBhIG1ham9yIHBhY2tpbmcgbG9jYWxpdHkg
YmFzZWQgb24KKyAqIHRoZWlyIHNlbWFudGljIHBhcmVudCBvYmplY3QncyBvYmplY3RpZCAoZS5n
LiB1bml4IGZpbGUgYm9kaWVzIGluIHBsYW4gQSksCisgKiBhbmQgdGhlc2UgYXJlIGNhbGxlZCAi
cGFyZW50LW1ham9yLXBhY2tlZCIuCisgKgorICogU29tZSBpdGVtcyBvZiBhbiBvYmplY3QgYXJl
IHN0b3JlZCB3aXRoIGEgbWFqb3IgcGFja2luZyBsb2NhbGl0eSBiYXNlZCBvbgorICogdGhlaXIg
c2VtYW50aWMgZ3JhbmRwYXJlbnQsIGFuZCB0aGVzZSBhcmUgY2FsbGVkICJncmFuZHBhcmVudC1t
YWpvci1wYWNrZWQiLgorICogTm93IGNhcmVmdWxseSBub3RpY2UgdGhhdCB3ZSBydW4gaW50byB0
cm91YmxlIHdpdGgga2V5IGxlbmd0aCBpZiB3ZSBoYXZlIHRvCisgKiBzdG9yZSBhIDggYnl0ZSBt
YWpvcittaW5vciBncmFuZHBhcmVudCBiYXNlZCBwYWNraW5nIGxvY2FsaXR5LCBhbiA4IGJ5dGUK
KyAqIHBhcmVudCBvYmplY3RpZCwgYW4gOCBieXRlIGF0dHJpYnV0ZSBvYmplY3RpZCwgYW5kIGFu
IDggYnl0ZSBvZmZzZXQsIGFsbCBpbgorICogYSAyNCBieXRlIGtleS4gIE9uZSBvZiB0aGVzZSBm
aWVsZHMgbXVzdCBiZSBzYWNyaWZpY2VkIGlmIGFuIGl0ZW0gaXMgdG8gYmUKKyAqIGdyYW5kcGFy
ZW50LW1ham9yLXBhY2tlZCwgYW5kIHdoaWNoIHRvIHNhY3JpZmljZSBpcyBsZWZ0IHRvIHRoZSBp
dGVtIGF1dGhvcgorICogY2hvb3NpbmcgdG8gbWFrZSB0aGUgaXRlbSBncmFuZHBhcmVudC1tYWpv
ci1wYWNrZWQuICBZb3UgY2Fubm90IG1ha2UgdGFpbAorICogaXRlbXMgYW5kIGV4dGVudCBpdGVt
cyBncmFuZHBhcmVudC1tYWpvci1wYWNrZWQsIHRob3VnaCB5b3UgY291bGQgbWFrZSB0aGVtCisg
KiBzZWxmLW1ham9yLXBhY2tlZCAodXN1YWxseSB0aGV5IGFyZSBwYXJlbnQtbWFqb3ItcGFja2Vk
KS4KKyAqCisgKiBJbiB0aGUgY2FzZSBvZiBBQ0xzICh3aGljaCBhcmUgY29tcG9zZWQgb2YgZml4
ZWQgbGVuZ3RoIEFDRXMgd2hpY2ggY29uc2lzdAorICogb2Yge3N1YmplY3QtdHlwZSwgc3ViamVj
dCwgYW5kIHBlcm1pc3Npb24gYml0bWFza30gdHJpcGxlcyksIGl0IG1ha2VzIHNlbnNlCisgKiB0
byBub3QgaGF2ZSBhbiBvZmZzZXQgZmllbGQgaW4gdGhlIEFDRSBpdGVtIGtleSwgYW5kIHRvIGFs
bG93IGR1cGxpY2F0ZSBrZXlzCisgKiBmb3IgQUNFcy4gIFRodXMsIHRoZSBzZXQgb2YgQUNFUyBm
b3IgYSBnaXZlbiBmaWxlIGlzIGZvdW5kIGJ5IGxvb2tpbmcgZm9yIGEKKyAqIGtleSBjb25zaXN0
aW5nIG9mIHRoZSBvYmplY3RpZCBvZiB0aGUgZ3JhbmRwYXJlbnQgKHRodXMgZ3JvdXBpbmcgYWxs
IEFDTHMgaW4KKyAqIGEgZGlyZWN0b3J5IHRvZ2V0aGVyKSwgdGhlIG1pbm9yIHBhY2tpbmcgbG9j
YWxpdHkgb2YgQUNFLCB0aGUgb2JqZWN0aWQgb2YKKyAqIHRoZSBmaWxlLCBhbmQgMC4KKyAqCisg
KiBJTyBpbnZvbHZlcyBtb3ZpbmcgZGF0YSBmcm9tIG9uZSBsb2NhdGlvbiB0byBhbm90aGVyLCB3
aGljaCBtZWFucyB0aGF0IHR3bworICogbG9jYXRpb25zIG11c3QgYmUgc3BlY2lmaWVkLCBzb3Vy
Y2UgYW5kIGRlc3RpbmF0aW9uLgorICoKKyAqIFRoaXMgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBj
YW4gYmUgaW4gdGhlIGZpbGVzeXN0ZW0sIG9yIHRoZXkgY2FuIGJlIGEKKyAqIHBvaW50ZXIgaW4g
dGhlIHVzZXIgcHJvY2VzcyBhZGRyZXNzIHNwYWNlIHBsdXMgYSBieXRlIGNvdW50LgorICoKKyAq
IElmIGJvdGggc291cmNlIGFuZCBkZXN0aW5hdGlvbiBhcmUgaW4gdGhlIGZpbGVzeXN0ZW0sIHRo
ZW4gYXQgbGVhc3Qgb25lIG9mCisgKiB0aGVtIG11c3QgYmUgcmVwcmVzZW50YWJsZSBhcyBhIHB1
cmUgc3RyZWFtIG9mIGJ5dGVzICh3aGljaCB3ZSBjYWxsIGEgZmxvdywKKyAqIGFuZCBkZWZpbmUg
YXMgYSBzdHJ1Y3QgY29udGFpbmluZyBhIGtleSwgYSBkYXRhIHBvaW50ZXIsIGFuZCBhIGxlbmd0
aCkuCisgKiBUaGlzIG1heSBtZWFuIGNvbnZlcnRpbmcgb25lIG9mIHRoZW0gaW50byBhIGZsb3cu
ICBXZSBwcm92aWRlIGEgZ2VuZXJpYworICogY2FzdF9pbnRvX2Zsb3coKSBtZXRob2QsIHdoaWNo
IHdpbGwgd29yayBmb3IgYW55IHBsdWdpbiBzdXBwb3J0aW5nCisgKiByZWFkX2Zsb3coKSwgdGhv
dWdoIGl0IGlzIGluZWZmaWNpZW50bHkgaW1wbGVtZW50ZWQgaW4gdGhhdCBpdCB0ZW1wb3Jhcmls
eQorICogc3RvcmVzIHRoZSBmbG93IGluIGEgYnVmZmVyIChRdWVzdGlvbjogd2hhdCB0byBkbyB3
aXRoIGh1Z2UgZmxvd3MgdGhhdAorICogY2Fubm90IGZpdCBpbnRvIG1lbW9yeT8gIEFuc3dlcjog
d2UgbXVzdCBub3QgY29udmVydCB0aGVtIGFsbCBhdCBvbmNlLiApCisgKgorICogUGVyZm9ybWlu
ZyBhIHdyaXRlIHJlcXVpcmVzIHJlc29sdmluZyB0aGUgd3JpdGUgcmVxdWVzdCBpbnRvIGEgZmxv
dyBkZWZpbmluZworICogdGhlIHNvdXJjZSwgYW5kIGEgbWV0aG9kIHRoYXQgcGVyZm9ybXMgdGhl
IHdyaXRlLCBhbmQgYSBrZXkgdGhhdCBkZWZpbmVzCisgKiB3aGVyZSBpbiB0aGUgdHJlZSB0aGUg
d3JpdGUgaXMgdG8gZ28uCisgKgorICogUGVyZm9ybWluZyBhIHJlYWQgcmVxdWlyZXMgcmVzb2x2
aW5nIHRoZSByZWFkIHJlcXVlc3QgaW50byBhIGZsb3cgZGVmaW5pbmcKKyAqIHRoZSB0YXJnZXQs
IGFuZCBhIG1ldGhvZCB0aGF0IHBlcmZvcm1zIHRoZSByZWFkLCBhbmQgYSBrZXkgdGhhdCBkZWZp
bmVzCisgKiB3aGVyZSBpbiB0aGUgdHJlZSB0aGUgcmVhZCBpcyB0byBjb21lIGZyb20uCisgKgor
ICogVGhlcmUgd2lsbCBleGlzdCBmaWxlIHBsdWdpbnMgd2hpY2ggaGF2ZSBubyBwbHVnaW5pZCBz
dG9yZWQgb24gdGhlIGRpc2sgZm9yCisgKiB0aGVtLCBhbmQgd2hpY2ggYXJlIG9ubHkgaW52b2tl
ZCBieSBvdGhlciBwbHVnaW5zLgorICovCisKKy8qCisgKiBUaGlzIHNob3VsZCBiZSBpbmNyZW1l
bnRlZCBpbiBldmVyeSByZWxlYXNlIHdoaWNoIGFkZHMgb25lCisgKiBvciBtb3JlIG5ldyBwbHVn
aW5zLgorICogTk9URTogTWFrZSBzdXJlIHRoYXQgcmVzcGVjdGl2ZSBtYXJjbyBpcyBhbHNvIGlu
Y3JlbWVudGVkIGluCisgKiB0aGUgbmV3IHJlbGVhc2Ugb2YgcmVpc2VyNHByb2dzLgorICovCisj
ZGVmaW5lIFBMVUdJTl9MSUJSQVJZX1ZFUlNJT04gMgorCisgLyogZW51bWVyYXRpb24gb2YgZmll
bGRzIHdpdGhpbiBwbHVnaW5fc2V0ICovCit0eXBlZGVmIGVudW0geworCVBTRVRfRklMRSwKKwlQ
U0VUX0RJUiwJCS8qIFBTRVRfRklMRSBhbmQgUFNFVF9ESVIgc2hvdWxkIGJlIGZpcnN0CisJCQkJ
ICogZWxlbWVudHM6IGlub2RlLmM6cmVhZF9pbm9kZSgpIGRlcGVuZHMgb24KKwkJCQkgKiB0aGlz
LiAqLworCVBTRVRfUEVSTSwKKwlQU0VUX0ZPUk1BVFRJTkcsCisJUFNFVF9IQVNILAorCVBTRVRf
RklCUkFUSU9OLAorCVBTRVRfU0QsCisJUFNFVF9ESVJfSVRFTSwKKwlQU0VUX0NJUEhFUiwKKwlQ
U0VUX0RJR0VTVCwKKwlQU0VUX0NPTVBSRVNTSU9OLAorCVBTRVRfQ09NUFJFU1NJT05fTU9ERSwK
KwlQU0VUX0NMVVNURVIsCisJUFNFVF9DUkVBVEUsCisJUFNFVF9MQVNUCit9IHBzZXRfbWVtYmVy
OworCisvKiBidWlsdGluIGZpbGUtcGx1Z2lucyAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiByZWd1
bGFyIGZpbGUgKi8KKwlVTklYX0ZJTEVfUExVR0lOX0lELAorCS8qIGRpcmVjdG9yeSAqLworCURJ
UkVDVE9SWV9GSUxFX1BMVUdJTl9JRCwKKwkvKiBzeW1saW5rICovCisJU1lNTElOS19GSUxFX1BM
VUdJTl9JRCwKKwkvKiBmb3Igb2JqZWN0cyBjb21wbGV0ZWx5IGhhbmRsZWQgYnkgdGhlIFZGUzog
Zmlmb3MsIGRldmljZXMsCisJICAgc29ja2V0cyAgKi8KKwlTUEVDSUFMX0ZJTEVfUExVR0lOX0lE
LAorCS8qIHJlZ3VsYXIgY3J5cHRjb21wcmVzcyBmaWxlICovCisJQ1JZUFRDT01QUkVTU19GSUxF
X1BMVUdJTl9JRCwKKwkvKiBudW1iZXIgb2YgZmlsZSBwbHVnaW5zLiBVc2VkIGFzIHNpemUgb2Yg
YXJyYXlzIHRvIGhvbGQKKwkgICBmaWxlIHBsdWdpbnMuICovCisJTEFTVF9GSUxFX1BMVUdJTl9J
RAorfSByZWlzZXI0X2ZpbGVfaWQ7CisKK3R5cGVkZWYgc3RydWN0IGZpbGVfcGx1Z2luIHsKKwor
CS8qIGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCisJLyogVkZTIG1ldGhv
ZHMgKi8KKwlzdHJ1Y3QgaW5vZGVfb3BlcmF0aW9ucyAqIGlub2RlX29wczsKKwlzdHJ1Y3QgZmls
ZV9vcGVyYXRpb25zICogZmlsZV9vcHM7CisJc3RydWN0IGFkZHJlc3Nfc3BhY2Vfb3BlcmF0aW9u
cyAqIGFzX29wczsKKwkvKioKKwkgKiBQcml2YXRlIG1ldGhvZHMuIFRoZXNlIGFyZSBvcHRpb25h
bC4gSWYgdXNlZCB0aGV5IHdpbGwgYWxsb3cgeW91CisJICogdG8gbWluaW1pemUgdGhlIGFtb3Vu
dCBvZiBjb2RlIG5lZWRlZCB0byBpbXBsZW1lbnQgYSBkZXZpYXRpb24KKwkgKiBmcm9tIHNvbWUg
b3RoZXIgbWV0aG9kIHRoYXQgYWxzbyB1c2VzIHRoZW0uCisJICovCisJLyoKKwkgKiBwcml2YXRl
IGlub2RlX29wcworCSAqLworCWludCAoKnNldGF0dHIpKHN0cnVjdCBkZW50cnkgKiwgc3RydWN0
IGlhdHRyICopOworCS8qCisJICogcHJpdmF0ZSBmaWxlX29wcworCSAqLworCS8qIGRvIHdoYXRl
dmVyIGlzIG5lY2Vzc2FyeSB0byBkbyB3aGVuIG9iamVjdCBpcyBvcGVuZWQgKi8KKwlpbnQgKCpv
cGVuKSAoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpOworCXNzaXplX3Qg
KCpyZWFkKSAoc3RydWN0IGZpbGUgKiwgY2hhciBfX3VzZXIgKmJ1Ziwgc2l6ZV90IHJlYWRfYW1v
dW50LAorCQkJbG9mZl90ICpvZmYpOworCS8qIHdyaXRlIGFzIG11Y2ggYXMgcG9zc2libGUgYnl0
ZXMgZnJvbSBub21pbmF0ZWQgQHdyaXRlX2Ftb3VudAorCSAqIGJlZm9yZSBwbHVnaW4gc2NoZWR1
bGluZyBpcyBvY2N1cnJlZC4gU2F2ZSBzY2hlZHVsaW5nIHN0YXRlCisJICogaW4gQGNvbnQgKi8K
Kwlzc2l6ZV90ICgqd3JpdGUpIChzdHJ1Y3QgZmlsZSAqLCBjb25zdCBjaGFyIF9fdXNlciAqYnVm
LAorCQkJICBzaXplX3Qgd3JpdGVfYW1vdW50LCBsb2ZmX3QgKiBvZmYsCisJCQkgIHN0cnVjdCBk
aXNwYXRjaF9jb250ZXh0ICogY29udCk7CisJaW50ICgqaW9jdGwpIChzdHJ1Y3QgZmlsZSAqZmls
cCwgdW5zaWduZWQgaW50IGNtZCwgdW5zaWduZWQgbG9uZyBhcmcpOworCWludCAoKm1tYXApIChz
dHJ1Y3QgZmlsZSAqLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKik7CisJaW50ICgqcmVsZWFzZSkg
KHN0cnVjdCBpbm9kZSAqLCBzdHJ1Y3QgZmlsZSAqKTsKKwkvKgorCSAqIHByaXZhdGUgYV9vcHMK
KwkgKi8KKwlpbnQgKCpyZWFkcGFnZSkgKHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgcGFnZSAq
cGFnZSk7CisJaW50ICgqcmVhZHBhZ2VzKShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGFkZHJl
c3Nfc3BhY2UgKm1hcHBpbmcsCisJCQkgIHN0cnVjdCBsaXN0X2hlYWQgKnBhZ2VzLCB1bnNpZ25l
ZCBucl9wYWdlcyk7CisJaW50ICgqd3JpdGVwYWdlcykoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1h
cHBpbmcsCisJCQkgIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqd2JjKTsKKwlpbnQgKCp3cml0
ZV9iZWdpbikoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwYWdlICpwYWdlLAorCQkJICAgbG9m
Zl90IHBvcywgdW5zaWduZWQgbGVuLCB2b2lkICoqZnNkYXRhKTsKKwlpbnQgKCp3cml0ZV9lbmQp
KHN0cnVjdCBmaWxlICpmaWxlLCBzdHJ1Y3QgcGFnZSAqcGFnZSwKKwkJCSBsb2ZmX3QgcG9zLCB1
bnNpZ25lZCBjb3BpZWQsIHZvaWQgKmZzZGF0YSk7CisJc2VjdG9yX3QgKCpibWFwKSAoc3RydWN0
IGFkZHJlc3Nfc3BhY2UgKiBtYXBwaW5nLCBzZWN0b3JfdCBsYmxvY2spOworCS8qIG90aGVyIHBy
aXZhdGUgbWV0aG9kcyAqLworCS8qIHNhdmUgaW5vZGUgY2FjaGVkIHN0YXQtZGF0YSBvbnRvIGRp
c2suIEl0IHdhcyBjYWxsZWQKKwkgICByZWlzZXJmc191cGRhdGVfc2QoKSBpbiAzLnggKi8KKwlp
bnQgKCp3cml0ZV9zZF9ieV9pbm9kZSkgKHN0cnVjdCBpbm9kZSAqKTsKKwkvKgorCSAqIENvbnN0
cnVjdCBmbG93IGludG8gQGZsb3cgYWNjb3JkaW5nIHRvIHVzZXItc3VwcGxpZWQgZGF0YS4KKwkg
KgorCSAqIFRoaXMgaXMgdXNlZCBieSByZWFkL3dyaXRlIG1ldGhvZHMgdG8gY29uc3RydWN0IGEg
ZmxvdyB0bworCSAqIHdyaXRlL3JlYWQuIC0+Zmxvd19ieV9pbm9kZSgpIGlzIHBsdWdpbiBtZXRo
b2QsIHJhdGhlciB0aGFuIHNpbmdsZQorCSAqIGdsb2JhbCBpbXBsZW1lbnRhdGlvbiwgYmVjYXVz
ZSBrZXkgaW4gYSBmbG93IHVzZWQgYnkgcGx1Z2luIG1heQorCSAqIGRlcGVuZCBvbiBkYXRhIGlu
IGEgQGJ1Zi4KKwkgKgorCSAqIE5JS0lUQS1GSVhNRS1IQU5TOiBwbGVhc2UgY3JlYXRlIHN0YXRp
c3RpY3Mgb24gd2hhdCBmdW5jdGlvbnMgYXJlCisJICogZGVyZWZlcmVuY2VkIGhvdyBvZnRlbiBm
b3IgdGhlIG1vbmdvIGJlbmNobWFyay4gIFlvdSBjYW4gc3VwZXJ2aXNlCisJICogRWxlbmEgZG9p
bmcgdGhpcyBmb3IgeW91IGlmIHRoYXQgaGVscHMuICBFbWFpbCBtZSB0aGUgbGlzdCBvZiB0aGUK
KwkgKiB0b3AgMTAsIHdpdGggdGhlaXIgY291bnRzLCBhbmQgYW4gZXN0aW1hdGUgb2YgdGhlIHRv
dGFsIG51bWJlciBvZgorCSAqIENQVSBjeWNsZXMgc3BlbnQgZGVyZWZlcmVuY2luZyBhcyBhIHBl
cmNlbnRhZ2Ugb2YgQ1BVIGN5Y2xlcyBzcGVudAorCSAqIHByb2Nlc3NpbmcgKG5vbi1pZGxlIHBy
b2Nlc3NpbmcpLiAgSWYgdGhlIHRvdGFsIHBlcmNlbnQgaXMsIHNheSwKKwkgKiBsZXNzIHRoYW4g
MSUsIGl0IHdpbGwgbWFrZSBvdXIgY29kaW5nIGRpc2N1c3Npb25zIG11Y2ggZWFzaWVyLCBhbmQK
KwkgKiBrZWVwIG1lIGZyb20gcXVlc3Rpb25pbmcgd2hldGhlciBmdW5jdGlvbnMgbGlrZSB0aGUg
YmVsb3cgYXJlIHRvbworCSAqIGZyZXF1ZW50bHkgY2FsbGVkIHRvIGJlIGRlcmVmZXJlbmNlZC4g
IElmIHRoZSB0b3RhbCBwZXJjZW50IGlzIG1vcmUKKwkgKiB0aGFuIDElLCBwZXJoYXBzIHByaXZh
dGUgbWV0aG9kcyBzaG91bGQgYmUgbGlzdGVkIGluIGEgInJlcXVpcmVkIgorCSAqIGNvbW1lbnQg
YXQgdGhlIHRvcCBvZiBlYWNoIHBsdWdpbiAod2l0aCBzdGVybiBsYW5ndWFnZSBhYm91dCBob3cg
aWYKKwkgKiB0aGUgY29tbWVudCBpcyBtaXNzaW5nIGl0IHdpbGwgbm90IGJlIGFjY2VwdGVkIGJ5
IHRoZSBtYWludGFpbmVyKSwKKwkgKiBhbmQgaW1wbGVtZW50ZWQgdXNpbmcgbWFjcm9zIG5vdCBk
ZXJlZmVyZW5jZWQgZnVuY3Rpb25zLiAgSG93IGFib3V0CisJICogcmVwbGFjaW5nIHRoaXMgd2hv
bGUgcHJpdmF0ZSBtZXRob2RzIHBhcnQgb2YgdGhlIHN0cnVjdCB3aXRoIGEKKwkgKiB0aG9yb3Vn
aCBkb2N1bWVudGF0aW9uIG9mIHdoYXQgdGhlIHN0YW5kYXJkIGhlbHBlciBmdW5jdGlvbnMgYXJl
IGZvcgorCSAqIHVzZSBpbiBjb25zdHJ1Y3RpbmcgcGx1Z2lucz8gIEkgdGhpbmsgdXNlcnMgaGF2
ZSBiZWVuIGFza2luZyBmb3IKKwkgKiB0aGF0LCB0aG91Z2ggbm90IGluIHNvIG1hbnkgd29yZHMu
CisJICovCisJaW50ICgqZmxvd19ieV9pbm9kZSkgKHN0cnVjdCBpbm9kZSAqLCBjb25zdCBjaGFy
IF9fdXNlciAqYnVmLAorCQkJICAgICAgaW50IHVzZXIsIGxvZmZfdCBzaXplLAorCQkJICAgICAg
bG9mZl90IG9mZiwgcndfb3Agb3AsIGZsb3dfdCAqKTsKKwkvKgorCSAqIFJldHVybiB0aGUga2V5
IHVzZWQgdG8gcmV0cmlldmUgYW4gb2Zmc2V0IG9mIGEgZmlsZS4gSXQgaXMgdXNlZCBieQorCSAq
IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgLT5mbG93X2J5X2lub2RlKCkgbWV0aG9kCisJICog
KGNvbW1vbl9idWlsZF9mbG93KCkpIGFuZCwgYW1vbmcgb3RoZXIgdGhpbmdzLCB0byBnZXQgdG8g
dGhlIGV4dGVudAorCSAqIGZyb20gam5vZGUgb2YgdW5mb3JtYXR0ZWQgbm9kZS4KKwkgKi8KKwlp
bnQgKCprZXlfYnlfaW5vZGUpIChzdHJ1Y3QgaW5vZGUgKiwgbG9mZl90IG9mZiwgcmVpc2VyNF9r
ZXkgKik7CisKKwkvKiBOSUtJVEEtRklYTUUtSEFOUzogdGhpcyBjb21tZW50IGlzIG5vdCBhcyBj
bGVhciB0byBvdGhlcnMgYXMgeW91CisJICogdGhpbmsuLi4uICovCisJLyoKKwkgKiBzZXQgdGhl
IHBsdWdpbiBmb3IgYSBmaWxlLiAgQ2FsbGVkIGR1cmluZyBmaWxlIGNyZWF0aW9uIGluIGNyZWF0
KCkKKwkgKiBidXQgbm90IHJlaXNlcjQoKSB1bmxlc3MgYW4gaW5vZGUgYWxyZWFkeSBleGlzdHMg
Zm9yIHRoZSBmaWxlLgorCSAqLworCWludCAoKnNldF9wbHVnX2luX2lub2RlKSAoc3RydWN0IGlu
b2RlICppbm9kZSwgc3RydWN0IGlub2RlICpwYXJlbnQsCisJCQkJICByZWlzZXI0X29iamVjdF9j
cmVhdGVfZGF0YSAqKTsKKworCS8qIE5JS0lUQS1GSVhNRS1IQU5TOiBjb21tZW50IGFuZCBuYW1l
IHNlZW0gdG8gc2F5IGRpZmZlcmVudCB0aGluZ3MsCisJICogYXJlIHlvdSBzZXR0aW5nIHVwIHRo
ZSBvYmplY3QgaXRzZWxmIGFsc28gb3IganVzdCBhZGp1c3RpbmcgdGhlCisJICogcGFyZW50Py4u
Li4gKi8KKwkvKiBzZXQgdXAgcGx1Z2lucyBmb3IgbmV3IEBvYmplY3QgY3JlYXRlZCBpbiBAcGFy
ZW50LiBAcm9vdCBpcyByb290CisJICAgZGlyZWN0b3J5LiAqLworCWludCAoKmFkanVzdF90b19w
YXJlbnQpIChzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGlub2RlICpwYXJlbnQsCisJCQkJ
IHN0cnVjdCBpbm9kZSAqcm9vdCk7CisJLyoKKwkgKiB0aGlzIGRvZXMgd2hhdGV2ZXIgaXMgbmVj
ZXNzYXJ5IHRvIGRvIHdoZW4gb2JqZWN0IGlzIGNyZWF0ZWQuIEZvcgorCSAqIGluc3RhbmNlLCBm
b3IgdW5peCBmaWxlcyBzdGF0IGRhdGEgaXMgaW5zZXJ0ZWQuIEl0IGlzIHN1cHBvc2VkIHRvIGJl
CisJICogY2FsbGVkIGJ5IGNyZWF0ZSBvZiBzdHJ1Y3QgaW5vZGVfb3BlcmF0aW9ucy4KKwkgKi8K
KwlpbnQgKCpjcmVhdGVfb2JqZWN0KSAoc3RydWN0IGlub2RlICpvYmplY3QsIHN0cnVjdCBpbm9k
ZSAqcGFyZW50LAorCQkJICAgICAgcmVpc2VyNF9vYmplY3RfY3JlYXRlX2RhdGEgKik7CisJLyoK
KwkgKiB0aGlzIG1ldGhvZCBzaG91bGQgY2hlY2sgUkVJU0VSNF9OT19TRCBhbmQgc2V0IFJFSVNF
UjRfTk9fU0Qgb24KKwkgKiBzdWNjZXNzLiBEZWxldGlvbiBvZiBhbiBvYmplY3QgdXN1YWxseSBp
bmNsdWRlcyByZW1vdmFsIG9mIGl0ZW1zCisJICogYnVpbGRpbmcgZmlsZSBib2R5IChmb3IgZGly
ZWN0b3JpZXMgdGhpcyBpcyByZW1vdmFsIG9mICIuIiBhbmQgIi4uIikKKwkgKiBhbmQgcmVtb3Zh
bCBvZiBzdGF0LWRhdGEgaXRlbS4KKwkgKi8KKwlpbnQgKCpkZWxldGVfb2JqZWN0KSAoc3RydWN0
IGlub2RlICopOworCisJLyogYWRkIGxpbmsgZnJvbSBAcGFyZW50IHRvIEBvYmplY3QgKi8KKwlp
bnQgKCphZGRfbGluaykgKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1Y3QgaW5vZGUgKnBhcmVu
dCk7CisKKwkvKiByZW1vdmUgbGluayBmcm9tIEBwYXJlbnQgdG8gQG9iamVjdCAqLworCWludCAo
KnJlbV9saW5rKSAoc3RydWN0IGlub2RlICpvYmplY3QsIHN0cnVjdCBpbm9kZSAqcGFyZW50KTsK
KworCS8qCisJICogcmV0dXJuIHRydWUgaWYgaXRlbSBhZGRyZXNzZWQgYnkgQGNvb3JkIGJlbG9u
Z3MgdG8gQGlub2RlLiAgVGhpcyBpcworCSAqIHVzZWQgYnkgcmVhZC93cml0ZSB0byBwcm9wZXJs
eSBzbGljZSBmbG93IGludG8gaXRlbXMgaW4gcHJlc2VuY2Ugb2YKKwkgKiBtdWx0aXBsZSBrZXkg
YXNzaWdubWVudCBwb2xpY2llcywgYmVjYXVzZSBpdGVtcyBvZiBhIGZpbGUgYXJlIG5vdAorCSAq
IG5lY2Vzc2FyaWx5IGNvbnRpZ3VvdXMgaW4gYSBrZXkgc3BhY2UsIGZvciBleGFtcGxlLCBpbiBh
IHBsYW4tYi4KKwkgKi8KKwlpbnQgKCpvd25zX2l0ZW0pIChjb25zdCBzdHJ1Y3QgaW5vZGUgKiwg
Y29uc3QgY29vcmRfdCAqKTsKKworCS8qIGNoZWNrcyB3aGV0aGVyIHlldCBhbm90aGVyIGhhcmQg
bGlua3MgdG8gdGhpcyBvYmplY3QgY2FuIGJlCisJICAgYWRkZWQgICovCisJaW50ICgqY2FuX2Fk
ZF9saW5rKSAoY29uc3Qgc3RydWN0IGlub2RlICopOworCisJLyogY2hlY2tzIHdoZXRoZXIgaGFy
ZCBsaW5rcyB0byB0aGlzIG9iamVjdCBjYW4gYmUgcmVtb3ZlZCAqLworCWludCAoKmNhbl9yZW1f
bGluaykgKGNvbnN0IHN0cnVjdCBpbm9kZSAqKTsKKworCS8qIG5vdCBlbXB0eSBmb3IgRElSRUNU
T1JZX0ZJTEVfUExVR0lOX0lEIG9ubHkgY3VycmVudGx5LiBJdCBjYWxscworCSAgIGRldGFjaCBv
ZiBkaXJlY3RvcnkgcGx1Z2luIHRvIHJlbW92ZSAiLi4iICovCisJaW50ICgqZGV0YWNoKSAoc3Ry
dWN0IGlub2RlICpjaGlsZCwgc3RydWN0IGlub2RlICpwYXJlbnQpOworCisJLyogY2FsbGVkIHdo
ZW4gQGNoaWxkIHdhcyBqdXN0IGxvb2tlZCB1cCBpbiB0aGUgQHBhcmVudC4gSXQgaXMgbm90CisJ
ICAgZW1wdHkgZm9yIERJUkVDVE9SWV9GSUxFX1BMVUdJTl9JRCBvbmx5IHdoZXJlIGl0IGNhbGxz
IGF0dGFjaCBvZgorCSAgIGRpcmVjdG9yeSBwbHVnaW4gKi8KKwlpbnQgKCpiaW5kKSAoc3RydWN0
IGlub2RlICpjaGlsZCwgc3RydWN0IGlub2RlICpwYXJlbnQpOworCisJLyogcHJvY2VzcyBzYWZl
LWxpbmsgZHVyaW5nIG1vdW50ICovCisJaW50ICgqc2FmZWxpbmspIChzdHJ1Y3QgaW5vZGUgKm9i
amVjdCwgcmVpc2VyNF9zYWZlX2xpbmtfdCBsaW5rLAorCQkJIF9fdTY0IHZhbHVlKTsKKworCS8q
IFRoZSBjb3VwbGUgb2YgZXN0aW1hdGUgbWV0aG9kcyBmb3IgYWxsIGZpbGUgb3BlcmF0aW9ucyAq
LworCXN0cnVjdCB7CisJCXJlaXNlcjRfYmxvY2tfbnIoKmNyZWF0ZSkgKGNvbnN0IHN0cnVjdCBp
bm9kZSAqKTsKKwkJcmVpc2VyNF9ibG9ja19ucigqdXBkYXRlKSAoY29uc3Qgc3RydWN0IGlub2Rl
ICopOworCQlyZWlzZXI0X2Jsb2NrX25yKCp1bmxpbmspIChjb25zdCBzdHJ1Y3QgaW5vZGUgKiwK
KwkJCQkJICAgY29uc3Qgc3RydWN0IGlub2RlICopOworCX0gZXN0aW1hdGU7CisKKwkvKgorCSAq
IHJlaXNlcjQgc3BlY2lmaWMgcGFydCBvZiBpbm9kZSBoYXMgYSB1bmlvbiBvZiBzdHJ1Y3R1cmVz
IHdoaWNoIGFyZQorCSAqIHNwZWNpZmljIHRvIGEgcGx1Z2luLiBUaGlzIG1ldGhvZCBpcyBjYWxs
ZWQgd2hlbiBpbm9kZSBpcyByZWFkCisJICogKHJlYWRfaW5vZGUpIGFuZCB3aGVuIGZpbGUgaXMg
Y3JlYXRlZCAoY29tbW9uX2NyZWF0ZV9jaGlsZCkgc28gdGhhdAorCSAqIGZpbGUgcGx1Z2luIGNv
dWxkIGluaXRpYWxpemUgaXRzIGlub2RlIGRhdGEKKwkgKi8KKwl2b2lkICgqaW5pdF9pbm9kZV9k
YXRhKSAoc3RydWN0IGlub2RlICosIHJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhICogLAorCQkJ
CSBpbnQpOworCisJLyoKKwkgKiBUaGlzIG1ldGhvZCBwZXJmb3JtcyBwcm9ncmVzc2l2ZSBkZWxl
dGlvbiBvZiBpdGVtcyBhbmQgd2hvbGUgbm9kZXMKKwkgKiBmcm9tIHJpZ2h0IHRvIGxlZnQuCisJ
ICoKKwkgKiBAdGFwOiB0aGUgcG9pbnQgZGVsZXRpb24gcHJvY2VzcyBiZWdpbnMgZnJvbSwKKwkg
KiBAZnJvbV9rZXk6IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGRlbGV0ZWQga2V5IHJhbmdlLAorCSAq
IEB0b19rZXk6IHRoZSBlbmQgb2YgdGhlIGRlbGV0ZWQga2V5IHJhbmdlLAorCSAqIEBzbWFsbGVz
dF9yZW1vdmVkOiB0aGUgc21hbGxlc3QgcmVtb3ZlZCBrZXksCisJICoKKwkgKiBAcmV0dXJuOiAw
IGlmIHN1Y2Nlc3MsIGVycm9yIGNvZGUgb3RoZXJ3aXNlLCAtRV9SRVBFQVQgbWVhbnMgdGhhdAor
CSAqIGxvbmcgY3V0X3RyZWUgb3BlcmF0aW9uIHdhcyBpbnRlcnJ1cHRlZCBmb3IgYWxsb3dpbmcg
YXRvbSBjb21taXQgLgorCSAqLworCWludCAoKmN1dF90cmVlX3dvcmtlcikgKHRhcF90ICosIGNv
bnN0IHJlaXNlcjRfa2V5ICogZnJvbV9rZXksCisJCQkJY29uc3QgcmVpc2VyNF9rZXkgKiB0b19r
ZXksCisJCQkJcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLCBzdHJ1Y3QgaW5vZGUgKiwK
KwkJCQlpbnQsIGludCAqKTsKKworCS8qIGNhbGxlZCBmcm9tIC0+ZGVzdHJveV9pbm9kZSgpICov
CisJdm9pZCAoKmRlc3Ryb3lfaW5vZGUpIChzdHJ1Y3QgaW5vZGUgKik7CisKKwkvKgorCSAqIG1l
dGhvZHMgdG8gc2VyaWFsaXplIG9iamVjdCBpZGVudGlmeS4gVGhpcyBpcyB1c2VkLCBmb3IgZXhh
bXBsZSwgYnkKKwkgKiByZWlzZXI0X3tlbixkZX1jb2RlX2ZoKCkuCisJICovCisJc3RydWN0IHsK
KwkJLyogc3RvcmUgb2JqZWN0J3MgaWRlbnRpdHkgYXQgQGFyZWEgKi8KKwkJY2hhciAqKCp3cml0
ZSkgKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNoYXIgKmFyZWEpOworCQkvKiBwYXJzZSBvYmplY3Qg
ZnJvbSB3aXJlIHRvIHRoZSBAb2JqICovCisJCWNoYXIgKigqcmVhZCkgKGNoYXIgKmFyZWEsIHJl
aXNlcjRfb2JqZWN0X29uX3dpcmUgKiBvYmopOworCQkvKiBnaXZlbiBvYmplY3QgaWRlbnRpdHkg
aW4gQG9iaiwgZmluZCBvciBjcmVhdGUgaXRzIGRlbnRyeSAqLworCQlzdHJ1Y3QgZGVudHJ5ICoo
KmdldCkgKHN0cnVjdCBzdXBlcl9ibG9jayAqcywKKwkJCQkgICAgICAgcmVpc2VyNF9vYmplY3Rf
b25fd2lyZSAqIG9iaik7CisJCS8qIGhvdyBtYW55IGJ5dGVzIC0+d2lyZS53cml0ZSgpIGNvbnN1
bWVzICovCisJCWludCAoKnNpemUpIChzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKKwkJLyogZmluaXNo
IHdpdGggb2JqZWN0IGlkZW50aWZ5ICovCisJCXZvaWQgKCpkb25lKSAocmVpc2VyNF9vYmplY3Rf
b25fd2lyZSAqIG9iaik7CisJfSB3aXJlOworfSBmaWxlX3BsdWdpbjsKKworZXh0ZXJuIGZpbGVf
cGx1Z2luIGZpbGVfcGx1Z2luc1tMQVNUX0ZJTEVfUExVR0lOX0lEXTsKKworc3RydWN0IHJlaXNl
cjRfb2JqZWN0X29uX3dpcmUgeworCWZpbGVfcGx1Z2luICpwbHVnaW47CisJdW5pb24geworCQlz
dHJ1Y3QgeworCQkJb2JqX2tleV9pZCBrZXlfaWQ7CisJCX0gc3RkOworCQl2b2lkICpnZW5lcmlj
OworCX0gdTsKK307CisKKy8qIGJ1aWx0aW4gZGlyLXBsdWdpbnMgKi8KK3R5cGVkZWYgZW51bSB7
CisJSEFTSEVEX0RJUl9QTFVHSU5fSUQsCisJU0VFS0FCTEVfSEFTSEVEX0RJUl9QTFVHSU5fSUQs
CisJTEFTVF9ESVJfSUQKK30gcmVpc2VyNF9kaXJfaWQ7CisKK3R5cGVkZWYgc3RydWN0IGRpcl9w
bHVnaW4geworCS8qIGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCisJc3Ry
dWN0IGlub2RlX29wZXJhdGlvbnMgKiBpbm9kZV9vcHM7CisJc3RydWN0IGZpbGVfb3BlcmF0aW9u
cyAqIGZpbGVfb3BzOworCXN0cnVjdCBhZGRyZXNzX3NwYWNlX29wZXJhdGlvbnMgKiBhc19vcHM7
CisKKwkvKgorCSAqIHByaXZhdGUgbWV0aG9kczogVGhlc2UgYXJlIG9wdGlvbmFsLiAgSWYgdXNl
ZCB0aGV5IHdpbGwgYWxsb3cgeW91IHRvCisJICogbWluaW1pemUgdGhlIGFtb3VudCBvZiBjb2Rl
IG5lZWRlZCB0byBpbXBsZW1lbnQgYSBkZXZpYXRpb24gZnJvbQorCSAqIHNvbWUgb3RoZXIgbWV0
aG9kIHRoYXQgdXNlcyB0aGVtLiAgWW91IGNvdWxkIGxvZ2ljYWxseSBhcmd1ZSB0aGF0CisJICog
dGhleSBzaG91bGQgYmUgYSBzZXBhcmF0ZSB0eXBlIG9mIHBsdWdpbi4KKwkgKi8KKworCXN0cnVj
dCBkZW50cnkgKigqZ2V0X3BhcmVudCkgKHN0cnVjdCBpbm9kZSAqY2hpbGRkaXIpOworCisJLyoK
KwkgKiBjaGVjayB3aGV0aGVyICJuYW1lIiBpcyBhY2NlcHRhYmxlIG5hbWUgdG8gYmUgaW5zZXJ0
ZWQgaW50byB0aGlzCisJICogb2JqZWN0LiBPcHRpb25hbGx5IGltcGxlbWVudGVkIGJ5IGRpcmVj
dG9yeS1saWtlIG9iamVjdHMuICBDYW4gY2hlY2sKKwkgKiBmb3IgbWF4aW1hbCBsZW5ndGgsIHJl
c2VydmVkIHN5bWJvbHMgZXRjCisJICovCisJaW50ICgqaXNfbmFtZV9hY2NlcHRhYmxlKSAoY29u
c3Qgc3RydWN0IGlub2RlICppbm9kZSwgY29uc3QgY2hhciAqbmFtZSwKKwkJCQkgICBpbnQgbGVu
KTsKKworCXZvaWQgKCpidWlsZF9lbnRyeV9rZXkpIChjb25zdCBzdHJ1Y3QgaW5vZGUgKmRpciAv
KiBkaXJlY3Rvcnkgd2hlcmUKKwkJCQkJCQkgICogZW50cnkgaXMgKG9yIHdpbGwKKwkJCQkJCQkg
ICogYmUpIGluLiovICwKKwkJCQkgY29uc3Qgc3RydWN0IHFzdHIgKm5hbWUgLyogbmFtZSBvZiBm
aWxlCisJCQkJCQkJICAqIHJlZmVyZW5jZWQgYnkgdGhpcworCQkJCQkJCSAgKiBlbnRyeSAqLyAs
CisJCQkJIHJlaXNlcjRfa2V5ICogcmVzdWx0CS8qIHJlc3VsdGluZyBrZXkgb2YKKwkJCQkJCQkg
KiBkaXJlY3RvcnkgZW50cnkgKi8gKTsKKwlpbnQgKCpidWlsZF9yZWFkZGlyX2tleSkgKHN0cnVj
dCBmaWxlICpkaXIsIHJlaXNlcjRfa2V5ICogcmVzdWx0KTsKKwlpbnQgKCphZGRfZW50cnkpIChz
dHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0IGRlbnRyeSAqd2hlcmUsCisJCQkgIHJlaXNlcjRf
b2JqZWN0X2NyZWF0ZV9kYXRhICogZGF0YSwKKwkJCSAgcmVpc2VyNF9kaXJfZW50cnlfZGVzYyAq
IGVudHJ5KTsKKwlpbnQgKCpyZW1fZW50cnkpIChzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgc3RydWN0
IGRlbnRyeSAqd2hlcmUsCisJCQkgIHJlaXNlcjRfZGlyX2VudHJ5X2Rlc2MgKiBlbnRyeSk7CisK
KwkvKgorCSAqIGluaXRpYWxpemUgZGlyZWN0b3J5IHN0cnVjdHVyZSBmb3IgbmV3bHkgY3JlYXRl
ZCBvYmplY3QuIEZvciBub3JtYWwKKwkgKiB1bml4IGRpcmVjdG9yaWVzLCBpbnNlcnQgZG90IGFu
ZCBkb3Rkb3QuCisJICovCisJaW50ICgqaW5pdCkgKHN0cnVjdCBpbm9kZSAqb2JqZWN0LCBzdHJ1
Y3QgaW5vZGUgKnBhcmVudCwKKwkJICAgICByZWlzZXI0X29iamVjdF9jcmVhdGVfZGF0YSAqIGRh
dGEpOworCisJLyogZGVzdHJveSBkaXJlY3RvcnkgKi8KKwlpbnQgKCpkb25lKSAoc3RydWN0IGlu
b2RlICpjaGlsZCk7CisKKwkvKiBjYWxsZWQgd2hlbiBAc3ViZGlyIHdhcyBqdXN0IGxvb2tlZCB1
cCBpbiB0aGUgQGRpciAqLworCWludCAoKmF0dGFjaCkgKHN0cnVjdCBpbm9kZSAqc3ViZGlyLCBz
dHJ1Y3QgaW5vZGUgKmRpcik7CisJaW50ICgqZGV0YWNoKSAoc3RydWN0IGlub2RlICpzdWJkaXIs
IHN0cnVjdCBpbm9kZSAqZGlyKTsKKworCXN0cnVjdCB7CisJCXJlaXNlcjRfYmxvY2tfbnIoKmFk
ZF9lbnRyeSkgKGNvbnN0IHN0cnVjdCBpbm9kZSAqKTsKKwkJcmVpc2VyNF9ibG9ja19ucigqcmVt
X2VudHJ5KSAoY29uc3Qgc3RydWN0IGlub2RlICopOworCQlyZWlzZXI0X2Jsb2NrX25yKCp1bmxp
bmspIChjb25zdCBzdHJ1Y3QgaW5vZGUgKiwKKwkJCQkJICAgY29uc3Qgc3RydWN0IGlub2RlICop
OworCX0gZXN0aW1hdGU7Cit9IGRpcl9wbHVnaW47CisKK2V4dGVybiBkaXJfcGx1Z2luIGRpcl9w
bHVnaW5zW0xBU1RfRElSX0lEXTsKKwordHlwZWRlZiBzdHJ1Y3QgZm9ybWF0dGluZ19wbHVnaW4g
eworCS8qIGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCS8qIHJldHVybnMg
bm9uLXplcm8gaWZmIGZpbGUncyB0YWlsIGhhcyB0byBiZSBzdG9yZWQKKwkgICBpbiBhIGRpcmVj
dCBpdGVtLiAqLworCWludCAoKmhhdmVfdGFpbCkgKGNvbnN0IHN0cnVjdCBpbm9kZSAqaW5vZGUs
IGxvZmZfdCBzaXplKTsKK30gZm9ybWF0dGluZ19wbHVnaW47CisKKy8qKgorICogUGx1Z2lucyBv
ZiB0aGlzIGludGVyZmFjZSBpbXBsZW1lbnQgZGlmZmVyZW50IHRyYW5zYWN0aW9uIG1vZGVscy4K
KyAqIFRyYW5zYWN0aW9uIG1vZGVsIGlzIGEgaGlnaC1sZXZlbCBibG9jayBhbGxvY2F0b3IsIHdo
aWNoIGFzc2lnbnMgYmxvY2sKKyAqIG51bWJlcnMgdG8gZGlydHkgbm9kZXMsIGFuZCwgdGhlcmVi
eSwgZGVjaWRlcywgaG93IGluZGl2aWR1YWwgZGlydHkKKyAqIG5vZGVzIG9mIGFuIGF0b20gd2ls
bCBiZSBjb21taXR0ZWQuCisgICovCit0eXBlZGVmIHN0cnVjdCB0eG1vZF9wbHVnaW4geworCS8q
IGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCS8qKgorCSAqIGFsbG9jYXRl
IGJsb2NrcyBpbiB0aGUgRk9SV0FSRCBQQVJFTlQtRklSU1QgY29udGV4dAorCSAqIGZvciBmb3Jt
YXR0ZWQgbm9kZXMKKwkgKi8KKwlpbnQgKCpmb3J3YXJkX2FsbG9jX2Zvcm1hdHRlZCkoem5vZGUg
Km5vZGUsIGNvbnN0IGNvb3JkX3QgKnBhcmVudF9jb29yZCwKKwkJCSAgICAgICBmbHVzaF9wb3Nf
dCAqcG9zKTsgLy93YXMgYWxsb2NhdGVfem5vZGVfbG9hZGVkCisJLyoqCisJICogYWxsb2NhdGUg
YmxvY2tzIGluIHRoZSBSRVZFUlNFIFBBUkVOVC1GSVJTVCBjb250ZXh0CisJICogZm9yIGZvcm1h
dHRlZCBub2RlcworCSAqLworCWludCAoKnJldmVyc2VfYWxsb2NfZm9ybWF0dGVkKShqbm9kZSAq
IG5vZGUsCisJCQkJICAgICAgIGNvbnN0IGNvb3JkX3QgKnBhcmVudF9jb29yZCwKKwkJCQkgICAg
ICAgZmx1c2hfcG9zX3QgKnBvcyk7IC8vIHdhcyByZXZlcnNlX3JlbG9jYXRlX3Rlc3QKKwkvKioK
KwkgKiBhbGxvY2F0ZSBibG9ja3MgaW4gdGhlIEZPUldBUkQgUEFSRU5ULUZJUlNUIGNvbnRleHQK
KwkgKiBmb3IgdW5mb3JtYXR0ZWQgbm9kZXMuCisJICoKKwkgKiBUaGlzIGlzIGNhbGxlZCBieSBo
YW5kbGVfcG9zX29uX3R3aWcgdG8gcHJvY2VlZCBleHRlbnQgdW5pdAorCSAqIGZsdXNoX3Bvcy0+
Y29vcmQgaXMgc2V0IHRvLiBJdCBpcyB0byBwcmVwYXJlIGZvciBmbHVzaGluZworCSAqIHNlcXVl
bmNlIG9mIG5vdCBmbHVzaHByZXBwZWQgbm9kZXMgKHNsdW0pLiBJdCBzdXBwb3NlcyB0aGF0CisJ
ICogc2x1bSBzdGFydHMgYXQgZmx1c2hfcG9zLT5wb3NfaW5fdW5pdCBwb3NpdGlvbiB3aXRoaW4g
dGhlIGV4dGVudAorCSAqLworCWludCAoKmZvcndhcmRfYWxsb2NfdW5mb3JtYXR0ZWQpKGZsdXNo
X3Bvc190ICpmbHVzaF9wb3MpOyAvL3dhcyByZWlzZXI0X2FsbG9jX2V4dGVudAorCS8qKgorCSAq
IGFsbG9jYWxlIGJsb2NrcyBmb3IgdW5mb3JtYXR0ZWQgbm9kZXMgaW4gc3F1ZWV6ZV9yaWdodF90
d2lnKCkuCisgCSAqIEBjb29yZCBpcyBzZXQgdG8gZXh0ZW50IHVuaXQKKwkgKi8KKwlzcXVlZXpl
X3Jlc3VsdCAoKnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWQpKHpub2RlICpsZWZ0LAorCQkJCWNv
bnN0IGNvb3JkX3QgKmNvb3JkLAorCQkJCWZsdXNoX3Bvc190ICpmbHVzaF9wb3MsCisJCQkJcmVp
c2VyNF9rZXkgKnN0b3Bfa2V5KTsgLy8gd2FzX3NxdWFsbG9jX2V4dGVudAorfSB0eG1vZF9wbHVn
aW47CisKK3R5cGVkZWYgc3RydWN0IGhhc2hfcGx1Z2luIHsKKwkvKiBnZW5lcmljIGZpZWxkcyAq
LworCXBsdWdpbl9oZWFkZXIgaDsKKwkvKiBjb21wdXRlcyBoYXNoIG9mIHRoZSBnaXZlbiBuYW1l
ICovCisJIF9fdTY0KCpoYXNoKSAoY29uc3QgdW5zaWduZWQgY2hhciAqbmFtZSwgaW50IGxlbik7
Cit9IGhhc2hfcGx1Z2luOworCit0eXBlZGVmIHN0cnVjdCBjaXBoZXJfcGx1Z2luIHsKKwkvKiBn
ZW5lcmljIGZpZWxkcyAqLworCXBsdWdpbl9oZWFkZXIgaDsKKwlzdHJ1Y3QgY3J5cHRvX2Jsa2Np
cGhlciAqICgqYWxsb2MpICh2b2lkKTsKKwl2b2lkICgqZnJlZSkgKHN0cnVjdCBjcnlwdG9fYmxr
Y2lwaGVyICp0Zm0pOworCS8qIE9mZnNldCB0cmFuc2xhdG9yLiBGb3IgZWFjaCBvZmZzZXQgdGhp
cyByZXR1cm5zIChrICogb2Zmc2V0KSwgd2hlcmUKKwkgICBrIChrID49IDEpIGlzIGFuIGV4cGFu
c2lvbiBmYWN0b3Igb2YgdGhlIGNpcGhlciBhbGdvcml0aG0uCisJICAgRm9yIGFsbCBzeW1tZXRy
aWMgYWxnb3JpdGhtcyBrID09IDEuIEZvciBhc3ltbWV0cmljIGFsZ29yaXRobXMgKHdoaWNoCisJ
ICAgaW5mbGF0ZSBkYXRhKSBvZmZzZXQgdHJhbnNsYXRpb24gZ3VhcmFudGVlcyB0aGF0IGFsbCBk
aXNrIGNsdXN0ZXIncworCSAgIHVuaXRzIHdpbGwgaGF2ZSBrZXlzIHNtYWxsZXIgdGhlbiBuZXh0
IGNsdXN0ZXIncyBvbmUuCisJICovCisJIGxvZmZfdCgqc2NhbGUpIChzdHJ1Y3QgaW5vZGUgKmlu
b2RlLCBzaXplX3QgYmxvY2tzaXplLCBsb2ZmX3Qgc3JjKTsKKwkvKiBDaXBoZXIgYWxnb3JpdGht
cyBjYW4gYWNjZXB0IGRhdGEgb25seSBieSBjaHVua3Mgb2YgY2lwaGVyIGJsb2NrCisJICAgc2l6
ZS4gVGhpcyBtZXRob2QgaXMgdG8gYWxpZ24gYW55IGZsb3cgdXAgdG8gY2lwaGVyIGJsb2NrIHNp
emUgd2hlbgorCSAgIHdlIHBhc3MgaXQgdG8gY2lwaGVyIGFsZ29yaXRobS4gVG8gYWxpZ24gbWVh
bnMgdG8gYXBwZW5kIHBhZGRpbmcgb2YKKwkgICBzcGVjaWFsIGZvcm1hdCBzcGVjaWZpYyB0byB0
aGUgY2lwaGVyIGFsZ29yaXRobSAqLworCWludCAoKmFsaWduX3N0cmVhbSkgKF9fdTggKnRhaWws
IGludCBjbHVzdF9zaXplLCBpbnQgYmxvY2tzaXplKTsKKwkvKiBsb3ctbGV2ZWwga2V5IG1hbmFn
ZXIgKGNoZWNrLCBpbnN0YWxsLCBldGMuLikgKi8KKwlpbnQgKCpzZXRrZXkpIChzdHJ1Y3QgY3J5
cHRvX3RmbSAqdGZtLCBjb25zdCBfX3U4ICprZXksCisJCSAgICAgICB1bnNpZ25lZCBpbnQga2V5
bGVuKTsKKwkvKiBtYWluIHRleHQgcHJvY2Vzc2luZyBwcm9jZWR1cmVzICovCisJdm9pZCAoKmVu
Y3J5cHQpIChfX3UzMiAqZXhwa2V5LCBfX3U4ICpkc3QsIGNvbnN0IF9fdTggKnNyYyk7CisJdm9p
ZCAoKmRlY3J5cHQpIChfX3UzMiAqZXhwa2V5LCBfX3U4ICpkc3QsIGNvbnN0IF9fdTggKnNyYyk7
Cit9IGNpcGhlcl9wbHVnaW47CisKK3R5cGVkZWYgc3RydWN0IGRpZ2VzdF9wbHVnaW4geworCS8q
IGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCS8qIGZpbmdlcnByaW50IHNp
emUgaW4gYnl0ZXMgKi8KKwlpbnQgZmlwc2l6ZTsKKwlzdHJ1Y3QgY3J5cHRvX2hhc2ggKiAoKmFs
bG9jKSAodm9pZCk7CisJdm9pZCAoKmZyZWUpIChzdHJ1Y3QgY3J5cHRvX2hhc2ggKnRmbSk7Cit9
IGRpZ2VzdF9wbHVnaW47CisKK3R5cGVkZWYgc3RydWN0IGNvbXByZXNzaW9uX3BsdWdpbiB7CisJ
LyogZ2VuZXJpYyBmaWVsZHMgKi8KKwlwbHVnaW5faGVhZGVyIGg7CisJaW50ICgqaW5pdCkgKHZv
aWQpOworCS8qIHRoZSBtYXhpbXVtIG51bWJlciBvZiBieXRlcyB0aGUgc2l6ZSBvZiB0aGUgImNv
bXByZXNzZWQiIGRhdGEgY2FuCisJICogZXhjZWVkIHRoZSB1bmNvbXByZXNzZWQgZGF0YS4gKi8K
KwlpbnQgKCpvdmVycnVuKSAodW5zaWduZWQgc3JjX2xlbik7CisJIGNvYV90KCphbGxvYykgKHRm
bV9hY3Rpb24gYWN0KTsKKwl2b2lkICgqZnJlZSkgKGNvYV90IGNvYSwgdGZtX2FjdGlvbiBhY3Qp
OworCS8qIG1pbmltYWwgc2l6ZSBvZiB0aGUgZmxvdyB3ZSBzdGlsbCB0cnkgdG8gY29tcHJlc3Mg
Ki8KKwlpbnQgKCptaW5fc2l6ZV9kZWZsYXRlKSAodm9pZCk7CisJIF9fdTMyKCpjaGVja3N1bSkg
KGNoYXIgKmRhdGEsIF9fdTMyIGxlbmd0aCk7CisJLyogbWFpbiB0cmFuc2Zvcm0gcHJvY2VkdXJl
cyAqLworCXZvaWQgKCpjb21wcmVzcykgKGNvYV90IGNvYSwgX191OCAqc3JjX2ZpcnN0LCBzaXpl
X3Qgc3JjX2xlbiwKKwkJCSAgX191OCAqZHN0X2ZpcnN0LCBzaXplX3QgKmRzdF9sZW4pOworCXZv
aWQgKCpkZWNvbXByZXNzKSAoY29hX3QgY29hLCBfX3U4ICpzcmNfZmlyc3QsIHNpemVfdCBzcmNf
bGVuLAorCQkJICAgIF9fdTggKmRzdF9maXJzdCwgc2l6ZV90ICpkc3RfbGVuKTsKK30gY29tcHJl
c3Npb25fcGx1Z2luOworCit0eXBlZGVmIHN0cnVjdCBjb21wcmVzc2lvbl9tb2RlX3BsdWdpbiB7
CisJLyogZ2VuZXJpYyBmaWVsZHMgKi8KKwlwbHVnaW5faGVhZGVyIGg7CisJLyogdGhpcyBpcyBj
YWxsZWQgd2hlbiBlc3RpbWF0aW5nIGNvbXByZXNzaWJpbGl0eQorCSAgIG9mIGEgbG9naWNhbCBj
bHVzdGVyIGJ5IGl0cyBjb250ZW50ICovCisJaW50ICgqc2hvdWxkX2RlZmxhdGUpIChzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBjbG9mZl90IGluZGV4KTsKKwkvKiB0aGlzIGlzIGNhbGxlZCB3aGVuIHJl
c3VsdHMgb2YgY29tcHJlc3Npb24gc2hvdWxkIGJlIHNhdmVkICovCisJaW50ICgqYWNjZXB0X2hv
b2spIChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjbG9mZl90IGluZGV4KTsKKwkvKiB0aGlzIGlzIGNh
bGxlZCB3aGVuIHJlc3VsdHMgb2YgY29tcHJlc3Npb24gc2hvdWxkIGJlIGRpc2NhcmRlZCAqLwor
CWludCAoKmRpc2NhcmRfaG9vaykgKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNsb2ZmX3QgaW5kZXgp
OworfSBjb21wcmVzc2lvbl9tb2RlX3BsdWdpbjsKKwordHlwZWRlZiBzdHJ1Y3QgY2x1c3Rlcl9w
bHVnaW4geworCS8qIGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCWludCBz
aGlmdDsKK30gY2x1c3Rlcl9wbHVnaW47CisKK3R5cGVkZWYgc3RydWN0IHNkX2V4dF9wbHVnaW4g
eworCS8qIGdlbmVyaWMgZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworCWludCAoKnByZXNl
bnQpIChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBjaGFyICoqYXJlYSwgaW50ICpsZW4pOworCWludCAo
KmFic2VudCkgKHN0cnVjdCBpbm9kZSAqaW5vZGUpOworCWludCAoKnNhdmVfbGVuKSAoc3RydWN0
IGlub2RlICppbm9kZSk7CisJaW50ICgqc2F2ZSkgKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGNoYXIg
KiphcmVhKTsKKwkvKiBhbGlnbm1lbnQgcmVxdWlyZW1lbnQgZm9yIHRoaXMgc3RhdC1kYXRhIHBh
cnQgKi8KKwlpbnQgYWxpZ25tZW50OworfSBzZF9leHRfcGx1Z2luOworCisvKiB0aGlzIHBsdWdp
biBjb250YWlucyBtZXRob2RzIHRvIGFsbG9jYXRlIG9iamVjdGlkIGZvciBuZXdseSBjcmVhdGVk
IGZpbGVzLAorICAgdG8gZGVhbGxvY2F0ZSBvYmplY3RpZCB3aGVuIGZpbGUgZ2V0cyByZW1vdmVk
LCB0byByZXBvcnQgbnVtYmVyIG9mIHVzZWQgYW5kCisgICBmcmVlIG9iamVjdGlkcyAqLwordHlw
ZWRlZiBzdHJ1Y3Qgb2lkX2FsbG9jYXRvcl9wbHVnaW4geworCS8qIGdlbmVyaWMgZmllbGRzICov
CisJcGx1Z2luX2hlYWRlciBoOworCWludCAoKmluaXRfb2lkX2FsbG9jYXRvcikgKHJlaXNlcjRf
b2lkX2FsbG9jYXRvciAqIG1hcCwgX191NjQgbnJfZmlsZXMsCisJCQkJICAgX191NjQgb2lkcyk7
CisJLyogdXNlZCB0byByZXBvcnQgc3RhdGZzLT5mX2ZpbGVzICovCisJIF9fdTY0KCpvaWRzX3Vz
ZWQpIChyZWlzZXI0X29pZF9hbGxvY2F0b3IgKiBtYXApOworCS8qIGdldCBuZXh0IG9pZCB0byB1
c2UgKi8KKwkgX191NjQoKm5leHRfb2lkKSAocmVpc2VyNF9vaWRfYWxsb2NhdG9yICogbWFwKTsK
KwkvKiB1c2VkIHRvIHJlcG9ydCBzdGF0ZnMtPmZfZmZyZWUgKi8KKwkgX191NjQoKm9pZHNfZnJl
ZSkgKHJlaXNlcjRfb2lkX2FsbG9jYXRvciAqIG1hcCk7CisJLyogYWxsb2NhdGUgbmV3IG9iamVj
dGlkICovCisJaW50ICgqYWxsb2NhdGVfb2lkKSAocmVpc2VyNF9vaWRfYWxsb2NhdG9yICogbWFw
LCBvaWRfdCAqKTsKKwkvKiByZWxlYXNlIG9iamVjdGlkICovCisJaW50ICgqcmVsZWFzZV9vaWQp
IChyZWlzZXI0X29pZF9hbGxvY2F0b3IgKiBtYXAsIG9pZF90KTsKKwkvKiBob3cgbWFueSBwYWdl
cyB0byByZXNlcnZlIGluIHRyYW5zYWN0aW9uIGZvciBhbGxvY2F0aW9uIG9mIG5ldworCSAgIG9i
amVjdGlkICovCisJaW50ICgqb2lkX3Jlc2VydmVfYWxsb2NhdGUpIChyZWlzZXI0X29pZF9hbGxv
Y2F0b3IgKiBtYXApOworCS8qIGhvdyBtYW55IHBhZ2VzIHRvIHJlc2VydmUgaW4gdHJhbnNhY3Rp
b24gZm9yIGZyZWVpbmcgb2YgYW4KKwkgICBvYmplY3RpZCAqLworCWludCAoKm9pZF9yZXNlcnZl
X3JlbGVhc2UpIChyZWlzZXI0X29pZF9hbGxvY2F0b3IgKiBtYXApOworCXZvaWQgKCpwcmludF9p
bmZvKSAoY29uc3QgY2hhciAqLCByZWlzZXI0X29pZF9hbGxvY2F0b3IgKik7Cit9IG9pZF9hbGxv
Y2F0b3JfcGx1Z2luOworCisvKiBkaXNrIGxheW91dCBwbHVnaW46IHRoaXMgc3BlY2lmaWVzIHN1
cGVyIGJsb2NrLCBqb3VybmFsLCBiaXRtYXAgKGlmIHRoZXJlCisgICBhcmUgYW55KSBsb2NhdGlv
bnMsIGV0YyAqLwordHlwZWRlZiBzdHJ1Y3QgZGlza19mb3JtYXRfcGx1Z2luIHsKKwkvKiBnZW5l
cmljIGZpZWxkcyAqLworCXBsdWdpbl9oZWFkZXIgaDsKKwkvKiByZXBsYXkgam91cm5hbCwgaW5p
dGlhbGl6ZSBzdXBlcl9pbmZvX2RhdGEsIGV0YyAqLworCWludCAoKmluaXRfZm9ybWF0KSAoc3Ry
dWN0IHN1cGVyX2Jsb2NrICosIHZvaWQgKmRhdGEpOworCisJLyoga2V5IG9mIHJvb3QgZGlyZWN0
b3J5IHN0YXQgZGF0YSAqLworCWNvbnN0IHJlaXNlcjRfa2V5ICogKCpyb290X2Rpcl9rZXkpIChj
b25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CisKKwlpbnQgKCpyZWxlYXNlKSAoc3RydWN0IHN1
cGVyX2Jsb2NrICopOworCWpub2RlICogKCpsb2dfc3VwZXIpIChzdHJ1Y3Qgc3VwZXJfYmxvY2sg
Kik7CisJaW50ICgqY2hlY2tfb3BlbikgKGNvbnN0IHN0cnVjdCBpbm9kZSAqb2JqZWN0KTsKKwlp
bnQgKCp2ZXJzaW9uX3VwZGF0ZSkgKHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK30gZGlza19mb3Jt
YXRfcGx1Z2luOworCitzdHJ1Y3Qgam5vZGVfcGx1Z2luIHsKKwkvKiBnZW5lcmljIGZpZWxkcyAq
LworCXBsdWdpbl9oZWFkZXIgaDsKKwlpbnQgKCppbml0KSAoam5vZGUgKiBub2RlKTsKKwlpbnQg
KCpwYXJzZSkgKGpub2RlICogbm9kZSk7CisJc3RydWN0IGFkZHJlc3Nfc3BhY2UgKigqbWFwcGlu
ZykgKGNvbnN0IGpub2RlICogbm9kZSk7CisJdW5zaWduZWQgbG9uZyAoKmluZGV4KSAoY29uc3Qg
am5vZGUgKiBub2RlKTsKKwlqbm9kZSAqICgqY2xvbmUpIChqbm9kZSAqIG5vZGUpOworfTsKKwor
LyogcGx1Z2luIGluc3RhbmNlLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICovCisvKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8KKy8qIFRoaXMgaXMg
IndyYXBwZXIiIHVuaW9uIGZvciBhbGwgdHlwZXMgb2YgcGx1Z2lucy4gTW9zdCBvZiB0aGUgY29k
ZSB1c2VzICAqLworLyogcGx1Z2lucyBvZiBwYXJ0aWN1bGFyIHR5cGUgKGZpbGVfcGx1Z2luLCBk
aXJfcGx1Z2luLCBldGMuKSAgcmF0aGVyIHRoYW4gICovCisvKiBvcGVyYXRlcyB3aXRoIHBvaW50
ZXJzIHRvIHJlaXNlcjRfcGx1Z2luLiBUaGlzIHVuaW9uIGlzIG9ubHkgdXNlZCBpbiAgICAgKi8K
Ky8qIHNvbWUgZ2VuZXJpYyBjb2RlIGluIHBsdWdpbi9wbHVnaW4uYyB0aGF0IG9wZXJhdGVzIG9u
IGFsbCAgICAgICAgICAgICAgICAqLworLyogcGx1Z2lucy4gVGVjaG5pY2FsbHkgc3BlYWtpbmcg
cHVycG9zZSBvZiB0aGlzIHVuaW9uIGlzIHRvIGFkZCB0eXBlICAgICAgICovCisvKiBzYWZldHkg
dG8gc2FpZCBnZW5lcmljIGNvZGU6IGVhY2ggcGx1Z2luIHR5cGUgKGZpbGVfcGx1Z2luLCBmb3Ig
ICAgICAgICAgKi8KKy8qIGV4YW1wbGUpLCBjb250YWlucyBwbHVnaW5faGVhZGVyIGFzIGl0cyBm
aXJzdCBtZW1lYmVyLiBUaGlzIGZpcnN0IG1lbWJlciAqLworLyogaXMgbG9jYXRlZCBhdCB0aGUg
c2FtZSBwbGFjZSBpbiBtZW1vcnkgYXMgLmggbWVtYmVyIG9mICAgICAgICAgICAgICAgICAgICov
CisvKiByZWlzZXI0X3BsdWdpbi4gR2VuZXJpYyBjb2RlLCBvYnRhaW5zIHBvaW50ZXIgdG8gcmVp
c2VyNF9wbHVnaW4gYW5kICAgICAgKi8KKy8qIGxvb2tzIGluIHRoZSAuaCB3aGljaCBpcyBoZWFk
ZXIgb2YgcGx1Z2luIHR5cGUgbG9jYXRlZCBpbiB1bmlvbi4gVGhpcyAgICAqLworLyogYWxsb3dz
IHRvIGF2b2lkIHR5cGUtY2FzdHMuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICovCit1bmlvbiByZWlzZXI0X3BsdWdpbiB7CisJLyogZ2VuZXJpYyBmaWVsZHMg
Ki8KKwlwbHVnaW5faGVhZGVyIGg7CisJLyogZmlsZSBwbHVnaW4gKi8KKwlmaWxlX3BsdWdpbiBm
aWxlOworCS8qIGRpcmVjdG9yeSBwbHVnaW4gKi8KKwlkaXJfcGx1Z2luIGRpcjsKKwkvKiBoYXNo
IHBsdWdpbiwgdXNlZCBieSBkaXJlY3RvcnkgcGx1Z2luICovCisJaGFzaF9wbHVnaW4gaGFzaDsK
KwkvKiBmaWJyYXRpb24gcGx1Z2luIHVzZWQgYnkgZGlyZWN0b3J5IHBsdWdpbiAqLworCWZpYnJh
dGlvbl9wbHVnaW4gZmlicmF0aW9uOworCS8qIGNpcGhlciB0cmFuc2Zvcm0gcGx1Z2luLCB1c2Vk
IGJ5IGZpbGUgcGx1Z2luICovCisJY2lwaGVyX3BsdWdpbiBjaXBoZXI7CisJLyogZGlnZXN0IHRy
YW5zZm9ybSBwbHVnaW4sIHVzZWQgYnkgZmlsZSBwbHVnaW4gKi8KKwlkaWdlc3RfcGx1Z2luIGRp
Z2VzdDsKKwkvKiBjb21wcmVzc2lvbiB0cmFuc2Zvcm0gcGx1Z2luLCB1c2VkIGJ5IGZpbGUgcGx1
Z2luICovCisJY29tcHJlc3Npb25fcGx1Z2luIGNvbXByZXNzaW9uOworCS8qIHRhaWwgcGx1Z2lu
LCB1c2VkIGJ5IGZpbGUgcGx1Z2luICovCisJZm9ybWF0dGluZ19wbHVnaW4gZm9ybWF0dGluZzsK
KwkvKiBwZXJtaXNzaW9uIHBsdWdpbiAqLworCXBlcm1fcGx1Z2luIHBlcm07CisJLyogbm9kZSBw
bHVnaW4gKi8KKwlub2RlX3BsdWdpbiBub2RlOworCS8qIGl0ZW0gcGx1Z2luICovCisJaXRlbV9w
bHVnaW4gaXRlbTsKKwkvKiBzdGF0LWRhdGEgZXh0ZW5zaW9uIHBsdWdpbiAqLworCXNkX2V4dF9w
bHVnaW4gc2RfZXh0OworCS8qIGRpc2sgbGF5b3V0IHBsdWdpbiAqLworCWRpc2tfZm9ybWF0X3Bs
dWdpbiBmb3JtYXQ7CisJLyogb2JqZWN0IGlkIGFsbG9jYXRvciBwbHVnaW4gKi8KKwlvaWRfYWxs
b2NhdG9yX3BsdWdpbiBvaWRfYWxsb2NhdG9yOworCS8qIHBsdWdpbiBmb3IgZGlmZmVyZW50IGpu
b2RlIHR5cGVzICovCisJam5vZGVfcGx1Z2luIGpub2RlOworCS8qIGNvbXByZXNzaW9uIG1vZGUg
cGx1Z2luLCB1c2VkIGJ5IG9iamVjdCBwbHVnaW4gKi8KKwljb21wcmVzc2lvbl9tb2RlX3BsdWdp
biBjb21wcmVzc2lvbl9tb2RlOworCS8qIGNsdXN0ZXIgcGx1Z2luLCB1c2VkIGJ5IG9iamVjdCBw
bHVnaW4gKi8KKwljbHVzdGVyX3BsdWdpbiBjbHVzdDsKKwkvKiB0cmFuc2FjdGlvbiBtb2RlIHBs
dWdpbiAqLworCXR4bW9kX3BsdWdpbiB0eG1vZDsKKwkvKiBwbGFjZS1ob2xkZXIgZm9yIG5ldyBw
bHVnaW4gdHlwZXMgdGhhdCBjYW4gYmUgcmVnaXN0ZXJlZAorCSAgIGR5bmFtaWNhbGx5LCBhbmQg
dXNlZCBieSBvdGhlciBkeW5hbWljYWxseSBsb2FkZWQgcGx1Z2lucy4gICovCisJdm9pZCAqZ2Vu
ZXJpYzsKK307CisKK3N0cnVjdCByZWlzZXI0X3BsdWdpbl9vcHMgeworCS8qIGNhbGxlZCB3aGVu
IHBsdWdpbiBpcyBpbml0aWFsaXplZCAqLworCWludCAoKmluaXQpIChyZWlzZXI0X3BsdWdpbiAq
IHBsdWdpbik7CisJLyogY2FsbGVkIHdoZW4gcGx1Z2luIGlzIHVubG9hZGVkICovCisJaW50ICgq
ZG9uZSkgKHJlaXNlcjRfcGx1Z2luICogcGx1Z2luKTsKKwkvKiBsb2FkIGdpdmVuIHBsdWdpbiBm
cm9tIGRpc2sgKi8KKwlpbnQgKCpsb2FkKSAoc3RydWN0IGlub2RlICppbm9kZSwKKwkJICAgICBy
ZWlzZXI0X3BsdWdpbiAqIHBsdWdpbiwgY2hhciAqKmFyZWEsIGludCAqbGVuKTsKKwkvKiBob3cg
bWFueSBzcGFjZSBpcyByZXF1aXJlZCB0byBzdG9yZSB0aGlzIHBsdWdpbidzIHN0YXRlCisJICAg
aW4gc3RhdC1kYXRhICovCisJaW50ICgqc2F2ZV9sZW4pIChzdHJ1Y3QgaW5vZGUgKmlub2RlLCBy
ZWlzZXI0X3BsdWdpbiAqIHBsdWdpbik7CisJLyogc2F2ZSBwZXJzaXN0ZW50IHBsdWdpbi1kYXRh
IHRvIGRpc2sgKi8KKwlpbnQgKCpzYXZlKSAoc3RydWN0IGlub2RlICppbm9kZSwgcmVpc2VyNF9w
bHVnaW4gKiBwbHVnaW4sCisJCSAgICAgY2hhciAqKmFyZWEpOworCS8qIGFsaWdubWVudCByZXF1
aXJlbWVudCBmb3Igb24tZGlzayBzdGF0ZSBvZiB0aGlzIHBsdWdpbgorCSAgIGluIG51bWJlciBv
ZiBieXRlcyAqLworCWludCBhbGlnbm1lbnQ7CisJLyogaW5zdGFsbCBpdHNlbGYgaW50byBnaXZl
biBpbm9kZS4gVGhpcyBjYW4gcmV0dXJuIGVycm9yCisJICAgKGUuZy4sIHlvdSBjYW5ub3QgY2hh
bmdlIGhhc2ggb2Ygbm9uLWVtcHR5IGRpcmVjdG9yeSkuICovCisJaW50ICgqY2hhbmdlKSAoc3Ry
dWN0IGlub2RlICppbm9kZSwgcmVpc2VyNF9wbHVnaW4gKiBwbHVnaW4sCisJCSAgICAgICBwc2V0
X21lbWJlciBtZW1iKTsKKwkvKiBpbnN0YWxsIGl0c2VsZiBpbnRvIGdpdmVuIGlub2RlLiBUaGlz
IGNhbiByZXR1cm4gZXJyb3IKKwkgICAoZS5nLiwgeW91IGNhbm5vdCBjaGFuZ2UgaGFzaCBvZiBu
b24tZW1wdHkgZGlyZWN0b3J5KS4gKi8KKwlpbnQgKCppbmhlcml0KSAoc3RydWN0IGlub2RlICpp
bm9kZSwgc3RydWN0IGlub2RlICpwYXJlbnQsCisJCQlyZWlzZXI0X3BsdWdpbiAqIHBsdWdpbik7
Cit9OworCisvKiBmdW5jdGlvbnMgaW1wbGVtZW50ZWQgaW4gZnMvcmVpc2VyNC9wbHVnaW4vcGx1
Z2luLmMgKi8KKworLyogc3RvcmVzIHBsdWdpbiByZWZlcmVuY2UgaW4gcmVpc2VyNC1zcGVjaWZp
YyBwYXJ0IG9mIGlub2RlICovCitleHRlcm4gaW50IHNldF9vYmplY3RfcGx1Z2luKHN0cnVjdCBp
bm9kZSAqaW5vZGUsIHJlaXNlcjRfcGx1Z2luX2lkIGlkKTsKK2V4dGVybiBpbnQgaW5pdF9wbHVn
aW5zKHZvaWQpOworCisvKiBidWlsdGluIHBsdWdpbnMgKi8KKworLyogYnVpbHRpbiBoYXNoLXBs
dWdpbnMgKi8KKwordHlwZWRlZiBlbnVtIHsKKwlSVVBBU09WX0hBU0hfSUQsCisJUjVfSEFTSF9J
RCwKKwlURUFfSEFTSF9JRCwKKwlGTlYxX0hBU0hfSUQsCisJREVHRU5FUkFURV9IQVNIX0lELAor
CUxBU1RfSEFTSF9JRAorfSByZWlzZXI0X2hhc2hfaWQ7CisKKy8qIGJ1aWx0aW4gY2lwaGVyIHBs
dWdpbnMgKi8KKwordHlwZWRlZiBlbnVtIHsKKwlOT05FX0NJUEhFUl9JRCwKKwlMQVNUX0NJUEhF
Ul9JRAorfSByZWlzZXI0X2NpcGhlcl9pZDsKKworLyogYnVpbHRpbiBkaWdlc3QgcGx1Z2lucyAq
LworCit0eXBlZGVmIGVudW0geworCVNIQTI1Nl8zMl9ESUdFU1RfSUQsCisJTEFTVF9ESUdFU1Rf
SUQKK30gcmVpc2VyNF9kaWdlc3RfaWQ7CisKKy8qIGJ1aWx0aW4gY29tcHJlc3Npb24gbW9kZSBw
bHVnaW5zICovCit0eXBlZGVmIGVudW0geworCU5PTkVfQ09NUFJFU1NJT05fTU9ERV9JRCwKKwlM
QVRURF9DT01QUkVTU0lPTl9NT0RFX0lELAorCVVMVElNX0NPTVBSRVNTSU9OX01PREVfSUQsCisJ
Rk9SQ0VfQ09NUFJFU1NJT05fTU9ERV9JRCwKKwlDT05WWF9DT01QUkVTU0lPTl9NT0RFX0lELAor
CUxBU1RfQ09NUFJFU1NJT05fTU9ERV9JRAorfSByZWlzZXI0X2NvbXByZXNzaW9uX21vZGVfaWQ7
CisKKy8qIGJ1aWx0aW4gY2x1c3RlciBwbHVnaW5zICovCit0eXBlZGVmIGVudW0geworCUNMVVNU
RVJfNjRLX0lELAorCUNMVVNURVJfMzJLX0lELAorCUNMVVNURVJfMTZLX0lELAorCUNMVVNURVJf
OEtfSUQsCisJQ0xVU1RFUl80S19JRCwKKwlMQVNUX0NMVVNURVJfSUQKK30gcmVpc2VyNF9jbHVz
dGVyX2lkOworCisvKiBidWlsdGluIHRhaWwgcGFja2luZyBwb2xpY2llcyAqLwordHlwZWRlZiBl
bnVtIHsKKwlORVZFUl9UQUlMU19GT1JNQVRUSU5HX0lELAorCUFMV0FZU19UQUlMU19GT1JNQVRU
SU5HX0lELAorCVNNQUxMX0ZJTEVfRk9STUFUVElOR19JRCwKKwlMQVNUX1RBSUxfRk9STUFUVElO
R19JRAorfSByZWlzZXI0X2Zvcm1hdHRpbmdfaWQ7CisKKy8qIGJ1aWx0aW4gdHJhbnNhY3Rpb24g
bW9kZWxzICovCit0eXBlZGVmIGVudW0geworCUhZQlJJRF9UWE1PRF9JRCwKKwlKT1VSTkFMX1RY
TU9EX0lELAorCVdBX1RYTU9EX0lELAorCUxBU1RfVFhNT0RfSUQKK30gcmVpc2VyNF90eG1vZF9p
ZDsKKworCisvKiBkYXRhIHR5cGUgdXNlZCB0byBwYWNrIHBhcmFtZXRlcnMgdGhhdCB3ZSBwYXNz
IHRvIHZmcyBvYmplY3QgY3JlYXRpb24KKyAgIGZ1bmN0aW9uIGNyZWF0ZV9vYmplY3QoKSAqLwor
c3RydWN0IHJlaXNlcjRfb2JqZWN0X2NyZWF0ZV9kYXRhIHsKKwkvKiBwbHVnaW4gdG8gY29udHJv
bCBjcmVhdGVkIG9iamVjdCAqLworCXJlaXNlcjRfZmlsZV9pZCBpZDsKKwkvKiBtb2RlIG9mIHJl
Z3VsYXIgZmlsZSwgZGlyZWN0b3J5IG9yIHNwZWNpYWwgZmlsZSAqLworLyogd2hhdCBoYXBwZW5z
IGlmIHNvbWUgb3RoZXIgc29ydCBvZiBwZXJtIHBsdWdpbiBpcyBpbiB1c2U/ICovCisJdW1vZGVf
dCBtb2RlOworCS8qIHJkZXYgb2Ygc3BlY2lhbCBmaWxlICovCisJZGV2X3QgcmRldjsKKwkvKiBz
eW1saW5rIHRhcmdldCAqLworCWNvbnN0IGNoYXIgKm5hbWU7CisJLyogYWRkIGhlcmUgc29tZXRo
aW5nIGZvciBub24tc3RhbmRhcmQgb2JqZWN0cyB5b3UgaW52ZW50LCBsaWtlCisJICAgcXVlcnkg
Zm9yIGludGVycG9sYXRpb24gZmlsZSBldGMuICovCisKKwlzdHJ1Y3QgcmVpc2VyNF9jcnlwdG9f
aW5mbyAqY3J5cHRvOworCisJc3RydWN0IGlub2RlICpwYXJlbnQ7CisJc3RydWN0IGRlbnRyeSAq
ZGVudHJ5OworfTsKKworLyogZGVzY3JpcHRpb24gb2YgZGlyZWN0b3J5IGVudHJ5IGJlaW5nIGNy
ZWF0ZWQvZGVzdHJveWVkL3NvdWdodCBmb3IKKworICAgSXQgaXMgcGFzc2VkIGRvd24gdG8gdGhl
IGRpcmVjdG9yeSBwbHVnaW4gYW5kIGZhcnRoZXIgdG8gdGhlCisgICBkaXJlY3RvcnkgaXRlbSBw
bHVnaW4gbWV0aG9kcy4gQ3JlYXRpb24gb2YgbmV3IGRpcmVjdG9yeSBpcyBkb25lIGluCisgICBz
ZXZlcmFsIHN0YWdlczogZmlyc3Qgd2Ugc2VhcmNoIGZvciBhbiBlbnRyeSB3aXRoIHRoZSBzYW1l
IG5hbWUsIHRoZW4KKyAgIGNyZWF0ZSBuZXcgb25lLiByZWlzZXI0X2Rpcl9lbnRyeV9kZXNjIGlz
IHVzZWQgdG8gc3RvcmUgc29tZSBpbmZvcm1hdGlvbgorICAgY29sbGVjdGVkIGF0IHNvbWUgc3Rh
Z2Ugb2YgdGhpcyBwcm9jZXNzIGFuZCByZXF1aXJlZCBsYXRlcjoga2V5IG9mCisgICBpdGVtIHRo
YXQgd2Ugd2FudCB0byBpbnNlcnQvZGVsZXRlIGFuZCBwb2ludGVyIHRvIGFuIG9iamVjdCB0aGF0
IHdpbGwKKyAgIGJlIGJvdW5kIGJ5IHRoZSBuZXcgZGlyZWN0b3J5IGVudHJ5LiBQcm9iYWJseSBz
b21lIG1vcmUgZmllbGRzIHdpbGwKKyAgIGJlIGFkZGVkIHRoZXJlLgorCisqLworc3RydWN0IHJl
aXNlcjRfZGlyX2VudHJ5X2Rlc2MgeworCS8qIGtleSBvZiBkaXJlY3RvcnkgZW50cnkgKi8KKwly
ZWlzZXI0X2tleSBrZXk7CisJLyogb2JqZWN0IGJvdW5kIGJ5IHRoaXMgZW50cnkuICovCisJc3Ry
dWN0IGlub2RlICpvYmo7Cit9OworCisjZGVmaW5lIE1BWF9QTFVHSU5fVFlQRV9MQUJFTF9MRU4g
IDMyCisjZGVmaW5lIE1BWF9QTFVHSU5fUExVR19MQUJFTF9MRU4gIDMyCisKKyNkZWZpbmUgUExV
R0lOX0JZX0lEKFRZUEUsIElELCBGSUVMRCkJCQkJCVwKK3N0YXRpYyBpbmxpbmUgVFlQRSAqVFlQ
RSAjIyBfYnlfaWQocmVpc2VyNF9wbHVnaW5faWQgaWQpCQlcCit7CQkJCQkJCQkJXAorCXJlaXNl
cjRfcGx1Z2luICpwbHVnaW4gPSBwbHVnaW5fYnlfaWQoSUQsIGlkKTsJCQlcCisJcmV0dXJuIHBs
dWdpbiA/ICZwbHVnaW4tPkZJRUxEIDogTlVMTDsJCQkJXAorfQkJCQkJCQkJCVwKK3N0YXRpYyBp
bmxpbmUgVFlQRSAqVFlQRSAjIyBfYnlfZGlza19pZChyZWlzZXI0X3RyZWUgKiB0cmVlLCBkMTYg
KmlkKQlcCit7CQkJCQkJCQkJXAorCXJlaXNlcjRfcGx1Z2luICpwbHVnaW4gPSBwbHVnaW5fYnlf
ZGlza19pZCh0cmVlLCBJRCwgaWQpOwlcCisJcmV0dXJuIHBsdWdpbiA/ICZwbHVnaW4tPkZJRUxE
IDogTlVMTDsJCQkJXAorfQkJCQkJCQkJCVwKK3N0YXRpYyBpbmxpbmUgVFlQRSAqVFlQRSAjIyBf
YnlfdW5zYWZlX2lkKHJlaXNlcjRfcGx1Z2luX2lkIGlkKQkgICAgICAgIFwKK3sJCQkJCQkJCQlc
CisJcmVpc2VyNF9wbHVnaW4gKnBsdWdpbiA9IHBsdWdpbl9ieV91bnNhZmVfaWQoSUQsIGlkKTsJ
CVwKKwlyZXR1cm4gcGx1Z2luID8gJnBsdWdpbi0+RklFTEQgOiBOVUxMOwkJCQlcCit9CQkJCQkJ
CQkJXAorc3RhdGljIGlubGluZSByZWlzZXI0X3BsdWdpbiogVFlQRSAjIyBfdG9fcGx1Z2luKFRZ
UEUqIHBsdWdpbikJICAgICAgICBcCit7CQkJCQkJCQkJXAorCXJldHVybiAocmVpc2VyNF9wbHVn
aW4gKikgcGx1Z2luOwkJCQlcCit9CQkJCQkJCQkJXAorc3RhdGljIGlubGluZSByZWlzZXI0X3Bs
dWdpbl9pZCBUWVBFICMjIF9pZChUWVBFKiBwbHVnaW4pCQlcCit7CQkJCQkJCQkJXAorCXJldHVy
biBUWVBFICMjIF90b19wbHVnaW4ocGx1Z2luKS0+aC5pZDsJCQlcCit9CQkJCQkJCQkJXAordHlw
ZWRlZiBzdHJ1Y3QgeyBpbnQgZm9vOyB9IFRZUEUgIyMgX3BsdWdpbl9kdW1teQorCitzdGF0aWMg
aW5saW5lIGludCBnZXRfcmVsZWFzZV9udW1iZXJfbWFqb3Iodm9pZCkKK3sKKwlyZXR1cm4gTEFT
VF9GT1JNQVRfSUQgLSAxOworfQorCitzdGF0aWMgaW5saW5lIGludCBnZXRfcmVsZWFzZV9udW1i
ZXJfbWlub3Iodm9pZCkKK3sKKwlyZXR1cm4gUExVR0lOX0xJQlJBUllfVkVSU0lPTjsKK30KKwor
UExVR0lOX0JZX0lEKGl0ZW1fcGx1Z2luLCBSRUlTRVI0X0lURU1fUExVR0lOX1RZUEUsIGl0ZW0p
OworUExVR0lOX0JZX0lEKGZpbGVfcGx1Z2luLCBSRUlTRVI0X0ZJTEVfUExVR0lOX1RZUEUsIGZp
bGUpOworUExVR0lOX0JZX0lEKGRpcl9wbHVnaW4sIFJFSVNFUjRfRElSX1BMVUdJTl9UWVBFLCBk
aXIpOworUExVR0lOX0JZX0lEKG5vZGVfcGx1Z2luLCBSRUlTRVI0X05PREVfUExVR0lOX1RZUEUs
IG5vZGUpOworUExVR0lOX0JZX0lEKHNkX2V4dF9wbHVnaW4sIFJFSVNFUjRfU0RfRVhUX1BMVUdJ
Tl9UWVBFLCBzZF9leHQpOworUExVR0lOX0JZX0lEKHBlcm1fcGx1Z2luLCBSRUlTRVI0X1BFUk1f
UExVR0lOX1RZUEUsIHBlcm0pOworUExVR0lOX0JZX0lEKGhhc2hfcGx1Z2luLCBSRUlTRVI0X0hB
U0hfUExVR0lOX1RZUEUsIGhhc2gpOworUExVR0lOX0JZX0lEKGZpYnJhdGlvbl9wbHVnaW4sIFJF
SVNFUjRfRklCUkFUSU9OX1BMVUdJTl9UWVBFLCBmaWJyYXRpb24pOworUExVR0lOX0JZX0lEKGNp
cGhlcl9wbHVnaW4sIFJFSVNFUjRfQ0lQSEVSX1BMVUdJTl9UWVBFLCBjaXBoZXIpOworUExVR0lO
X0JZX0lEKGRpZ2VzdF9wbHVnaW4sIFJFSVNFUjRfRElHRVNUX1BMVUdJTl9UWVBFLCBkaWdlc3Qp
OworUExVR0lOX0JZX0lEKGNvbXByZXNzaW9uX3BsdWdpbiwgUkVJU0VSNF9DT01QUkVTU0lPTl9Q
TFVHSU5fVFlQRSwgY29tcHJlc3Npb24pOworUExVR0lOX0JZX0lEKGZvcm1hdHRpbmdfcGx1Z2lu
LCBSRUlTRVI0X0ZPUk1BVFRJTkdfUExVR0lOX1RZUEUsIGZvcm1hdHRpbmcpOworUExVR0lOX0JZ
X0lEKGRpc2tfZm9ybWF0X3BsdWdpbiwgUkVJU0VSNF9GT1JNQVRfUExVR0lOX1RZUEUsIGZvcm1h
dCk7CitQTFVHSU5fQllfSUQoam5vZGVfcGx1Z2luLCBSRUlTRVI0X0pOT0RFX1BMVUdJTl9UWVBF
LCBqbm9kZSk7CitQTFVHSU5fQllfSUQoY29tcHJlc3Npb25fbW9kZV9wbHVnaW4sIFJFSVNFUjRf
Q09NUFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwKKwkgICAgIGNvbXByZXNzaW9uX21vZGUpOwor
UExVR0lOX0JZX0lEKGNsdXN0ZXJfcGx1Z2luLCBSRUlTRVI0X0NMVVNURVJfUExVR0lOX1RZUEUs
IGNsdXN0KTsKK1BMVUdJTl9CWV9JRCh0eG1vZF9wbHVnaW4sIFJFSVNFUjRfVFhNT0RfUExVR0lO
X1RZUEUsIHR4bW9kKTsKKworZXh0ZXJuIGludCBzYXZlX3BsdWdpbl9pZChyZWlzZXI0X3BsdWdp
biAqIHBsdWdpbiwgZDE2ICogYXJlYSk7CisKK2V4dGVybiBzdHJ1Y3QgbGlzdF9oZWFkICpnZXRf
cGx1Z2luX2xpc3QocmVpc2VyNF9wbHVnaW5fdHlwZSB0eXBlX2lkKTsKKworI2RlZmluZSBmb3Jf
YWxsX3BsdWdpbnMocHR5cGUsIHBsdWdpbikJCQkJCQkJXAorZm9yIChwbHVnaW4gPSBsaXN0X2Vu
dHJ5KGdldF9wbHVnaW5fbGlzdChwdHlwZSktPm5leHQsIHJlaXNlcjRfcGx1Z2luLCBoLmxpbmth
Z2UpOwlcCisgICAgIGdldF9wbHVnaW5fbGlzdChwdHlwZSkgIT0gJnBsdWdpbi0+aC5saW5rYWdl
OwkJCQkJXAorICAgICBwbHVnaW4gPSBsaXN0X2VudHJ5KHBsdWdpbi0+aC5saW5rYWdlLm5leHQs
IHJlaXNlcjRfcGx1Z2luLCBoLmxpbmthZ2UpKQorCisKK2V4dGVybiBpbnQgZ3JhYl9wbHVnaW5f
cHNldChzdHJ1Y3QgaW5vZGUgKnNlbGYsIHN0cnVjdCBpbm9kZSAqYW5jZXN0b3IsCisJCQkgICAg
cHNldF9tZW1iZXIgbWVtYik7CitleHRlcm4gaW50IGZvcmNlX3BsdWdpbl9wc2V0KHN0cnVjdCBp
bm9kZSAqc2VsZiwgcHNldF9tZW1iZXIgbWVtYiwKKwkJCSAgICAgcmVpc2VyNF9wbHVnaW4gKnBs
dWcpOworZXh0ZXJuIGludCBmaW5pc2hfcHNldChzdHJ1Y3QgaW5vZGUgKmlub2RlKTsKKworLyog
ZGVmaW5lZCBpbiBmcy9yZWlzZXI0L3BsdWdpbi9vYmplY3QuYyAqLworZXh0ZXJuIGZpbGVfcGx1
Z2luIGZpbGVfcGx1Z2luc1tMQVNUX0ZJTEVfUExVR0lOX0lEXTsKKy8qIGRlZmluZWQgaW4gZnMv
cmVpc2VyNC9wbHVnaW4vb2JqZWN0LmMgKi8KK2V4dGVybiBkaXJfcGx1Z2luIGRpcl9wbHVnaW5z
W0xBU1RfRElSX0lEXTsKKy8qIGRlZmluZWQgaW4gZnMvcmVpc2VyNC9wbHVnaW4vaXRlbS9zdGF0
aWNfc3RhdC5jICovCitleHRlcm4gc2RfZXh0X3BsdWdpbiBzZF9leHRfcGx1Z2luc1tMQVNUX1NE
X0VYVEVOU0lPTl07CisvKiBkZWZpbmVkIGluIGZzL3JlaXNlcjQvcGx1Z2luL2hhc2guYyAqLwor
ZXh0ZXJuIGhhc2hfcGx1Z2luIGhhc2hfcGx1Z2luc1tMQVNUX0hBU0hfSURdOworLyogZGVmaW5l
ZCBpbiBmcy9yZWlzZXI0L3BsdWdpbi9maWJyYXRpb24uYyAqLworZXh0ZXJuIGZpYnJhdGlvbl9w
bHVnaW4gZmlicmF0aW9uX3BsdWdpbnNbTEFTVF9GSUJSQVRJT05fSURdOworLyogZGVmaW5lZCBp
biBmcy9yZWlzZXI0L3BsdWdpbi90eG1vZC5jICovCitleHRlcm4gdHhtb2RfcGx1Z2luIHR4bW9k
X3BsdWdpbnNbTEFTVF9UWE1PRF9JRF07CisvKiBkZWZpbmVkIGluIGZzL3JlaXNlcjQvcGx1Z2lu
L2NyeXB0LmMgKi8KK2V4dGVybiBjaXBoZXJfcGx1Z2luIGNpcGhlcl9wbHVnaW5zW0xBU1RfQ0lQ
SEVSX0lEXTsKKy8qIGRlZmluZWQgaW4gZnMvcmVpc2VyNC9wbHVnaW4vZGlnZXN0LmMgKi8KK2V4
dGVybiBkaWdlc3RfcGx1Z2luIGRpZ2VzdF9wbHVnaW5zW0xBU1RfRElHRVNUX0lEXTsKKy8qIGRl
ZmluZWQgaW4gZnMvcmVpc2VyNC9wbHVnaW4vY29tcHJlc3MvY29tcHJlc3MuYyAqLworZXh0ZXJu
IGNvbXByZXNzaW9uX3BsdWdpbiBjb21wcmVzc2lvbl9wbHVnaW5zW0xBU1RfQ09NUFJFU1NJT05f
SURdOworLyogZGVmaW5lZCBpbiBmcy9yZWlzZXI0L3BsdWdpbi9jb21wcmVzcy9jb21wcmVzc2lv
bl9tb2RlLmMgKi8KK2V4dGVybiBjb21wcmVzc2lvbl9tb2RlX3BsdWdpbgorY29tcHJlc3Npb25f
bW9kZV9wbHVnaW5zW0xBU1RfQ09NUFJFU1NJT05fTU9ERV9JRF07CisvKiBkZWZpbmVkIGluIGZz
L3JlaXNlcjQvcGx1Z2luL2NsdXN0ZXIuYyAqLworZXh0ZXJuIGNsdXN0ZXJfcGx1Z2luIGNsdXN0
ZXJfcGx1Z2luc1tMQVNUX0NMVVNURVJfSURdOworLyogZGVmaW5lZCBpbiBmcy9yZWlzZXI0L3Bs
dWdpbi90YWlsLmMgKi8KK2V4dGVybiBmb3JtYXR0aW5nX3BsdWdpbiBmb3JtYXR0aW5nX3BsdWdp
bnNbTEFTVF9UQUlMX0ZPUk1BVFRJTkdfSURdOworLyogZGVmaW5lZCBpbiBmcy9yZWlzZXI0L3Bs
dWdpbi9zZWN1cml0eS9zZWN1cml0eS5jICovCitleHRlcm4gcGVybV9wbHVnaW4gcGVybV9wbHVn
aW5zW0xBU1RfUEVSTV9JRF07CisvKiBkZWZpbmVkIGluIGZzL3JlaXNlcjQvcGx1Z2luL2l0ZW0v
aXRlbS5jICovCitleHRlcm4gaXRlbV9wbHVnaW4gaXRlbV9wbHVnaW5zW0xBU1RfSVRFTV9JRF07
CisvKiBkZWZpbmVkIGluIGZzL3JlaXNlcjQvcGx1Z2luL25vZGUvbm9kZS5jICovCitleHRlcm4g
bm9kZV9wbHVnaW4gbm9kZV9wbHVnaW5zW0xBU1RfTk9ERV9JRF07CisvKiBkZWZpbmVkIGluIGZz
L3JlaXNlcjQvcGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0LmMgKi8KK2V4dGVybiBkaXNr
X2Zvcm1hdF9wbHVnaW4gZm9ybWF0X3BsdWdpbnNbTEFTVF9GT1JNQVRfSURdOworCisvKiBfX0ZT
X1JFSVNFUjRfUExVR0lOX1RZUEVTX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFw
cHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgor
ICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4
CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVy
ZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9wbHVnaW5faGVhZGVyLmgg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3BsdWdpbl9oZWFkZXIuaAotLS0gbGludXgt
NS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vcGx1Z2luX2hlYWRlci5oCTE5NzAtMDEtMDEg
MDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVn
aW4vcGx1Z2luX2hlYWRlci5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDc1MjIyMzQ5ICswMTAwCkBA
IC0wLDAgKzEsMTUwIEBACisvKiBDb3B5cmlnaHQgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwg
bGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisKKy8qIHBsdWdpbiBoZWFk
ZXIuIERhdGEgc3RydWN0dXJlcyByZXF1aXJlZCBieSBhbGwgcGx1Z2luIHR5cGVzLiAqLworCisj
aWYgIWRlZmluZWQoX19QTFVHSU5fSEVBREVSX0hfXykKKyNkZWZpbmUgX19QTFVHSU5fSEVBREVS
X0hfXworCisvKiBwbHVnaW4gZGF0YS10eXBlcyBhbmQgY29uc3RhbnRzICovCisKKyNpbmNsdWRl
ICIuLi9kZWJ1Zy5oIgorI2luY2x1ZGUgIi4uL2Rmb3JtYXQuaCIKKworLyogVGhlIGxpc3Qgb2Yg
UmVpc2VyNCBpbnRlcmZhY2VzICovCit0eXBlZGVmIGVudW0geworCVJFSVNFUjRfRklMRV9QTFVH
SU5fVFlQRSwgICAgICAgICAgICAgLyogbWFuYWdlIFZGUyBvYmplY3RzICovCisJUkVJU0VSNF9E
SVJfUExVR0lOX1RZUEUsICAgICAgICAgICAgICAvKiBtYW5hZ2UgZGlyZWN0b3JpZXMgKi8KKwlS
RUlTRVI0X0lURU1fUExVR0lOX1RZUEUsICAgICAgICAgICAgIC8qIG1hbmFnZSBpdGVtcyAqLwor
CVJFSVNFUjRfTk9ERV9QTFVHSU5fVFlQRSwgICAgICAgICAgICAgLyogbWFuYWdlIGZvcm1hdHRl
ZCBub2RlcyAqLworCVJFSVNFUjRfSEFTSF9QTFVHSU5fVFlQRSwgICAgICAgICAgICAgLyogaGFz
aCBtZXRob2RzICovCisJUkVJU0VSNF9GSUJSQVRJT05fUExVR0lOX1RZUEUsICAgICAgICAvKiBk
aXJlY3RvcnkgZmlicmF0aW9ucyAqLworCVJFSVNFUjRfRk9STUFUVElOR19QTFVHSU5fVFlQRSwg
ICAgICAgLyogZGlzcGF0Y2hpbmcgcG9saWN5ICovCisJUkVJU0VSNF9QRVJNX1BMVUdJTl9UWVBF
LCAgICAgICAgICAgICAvKiBzdHViICh2YWNhbmN5KSAqLworCVJFSVNFUjRfU0RfRVhUX1BMVUdJ
Tl9UWVBFLCAgICAgICAgICAgLyogbWFuYWdlIHN0YXQtZGF0YSBleHRlbnNpb25zICovCisJUkVJ
U0VSNF9GT1JNQVRfUExVR0lOX1RZUEUsICAgICAgICAgICAvKiBkaXNrIGZvcm1hdCBzcGVjaWZp
Y2F0aW9ucyAqLworCVJFSVNFUjRfSk5PREVfUExVR0lOX1RZUEUsICAgICAgICAgICAgLyogbWFu
YWdlIGluLW1lbW9yeSBoZWFkZXJzICovCisJUkVJU0VSNF9DSVBIRVJfUExVR0lOX1RZUEUsICAg
ICAgICAgICAvKiBjaXBoZXIgdHJhbnNmb3JtIG1ldGhvZHMgKi8KKwlSRUlTRVI0X0RJR0VTVF9Q
TFVHSU5fVFlQRSwgICAgICAgICAgIC8qIGRpZ2VzdCB0cmFuc2Zvcm0gbWV0aG9kcyAqLworCVJF
SVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUsICAgICAgLyogY29tcHJlc3Npb24gbWV0aG9k
cyAqLworCVJFSVNFUjRfQ09NUFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwgLyogZGlzcGF0Y2hp
bmcgcG9saWNpZXMgKi8KKwlSRUlTRVI0X0NMVVNURVJfUExVR0lOX1RZUEUsICAgICAgICAgIC8q
IG1hbmFnZSBsb2dpY2FsIGNsdXN0ZXJzICovCisJUkVJU0VSNF9UWE1PRF9QTFVHSU5fVFlQRSwg
ICAgICAgICAgICAvKiB0cmFuc2FjdGlvbiBtb2RlbHMgKi8KKwlSRUlTRVI0X1BMVUdJTl9UWVBF
UworfSByZWlzZXI0X3BsdWdpbl90eXBlOworCisvKiBTdXBwb3J0ZWQgcGx1Z2luIGdyb3VwcyAq
LwordHlwZWRlZiBlbnVtIHsKKwlSRUlTRVI0X0RJUkVDVE9SWV9GSUxFLAorCVJFSVNFUjRfUkVH
VUxBUl9GSUxFLAorCVJFSVNFUjRfU1lNTElOS19GSUxFLAorCVJFSVNFUjRfU1BFQ0lBTF9GSUxF
LAorfSBmaWxlX3BsdWdpbl9ncm91cDsKKworc3RydWN0IHJlaXNlcjRfcGx1Z2luX29wczsKKy8q
IGdlbmVyaWMgcGx1Z2luIG9wZXJhdGlvbnMsIHN1cHBvcnRlZCBieSBlYWNoCisgICAgcGx1Z2lu
IHR5cGUuICovCit0eXBlZGVmIHN0cnVjdCByZWlzZXI0X3BsdWdpbl9vcHMgcmVpc2VyNF9wbHVn
aW5fb3BzOworCisvKiB0aGUgY29tbW9uIHBhcnQgb2YgYWxsIHBsdWdpbiBpbnN0YW5jZXMuICov
Cit0eXBlZGVmIHN0cnVjdCBwbHVnaW5faGVhZGVyIHsKKwkvKiBwbHVnaW4gdHlwZSAqLworCXJl
aXNlcjRfcGx1Z2luX3R5cGUgdHlwZV9pZDsKKwkvKiBpZCBvZiB0aGlzIHBsdWdpbiAqLworCXJl
aXNlcjRfcGx1Z2luX2lkIGlkOworCS8qIGJpdG1hc2sgb2YgZ3JvdXBzIHRoZSBwbHVnaW4gYmVs
b25ncyB0by4gKi8KKwlyZWlzZXI0X3BsdWdpbl9ncm91cHMgZ3JvdXBzOworCS8qIHBsdWdpbiBv
cGVyYXRpb25zICovCisJcmVpc2VyNF9wbHVnaW5fb3BzICpwb3BzOworLyogTklLSVRBLUZJWE1F
LUhBTlM6IHVzYWdlIG9mIGFuZCBhY2Nlc3MgdG8gbGFiZWwgYW5kIGRlc2MgaXMgbm90IGNvbW1l
bnRlZCBhbmQKKyAqIGRlZmluZWQuICovCisJLyogc2hvcnQgbGFiZWwgb2YgdGhpcyBwbHVnaW4g
Ki8KKwljb25zdCBjaGFyICpsYWJlbDsKKwkvKiBkZXNjcmlwdGl2ZSBzdHJpbmcuLiAqLworCWNv
bnN0IGNoYXIgKmRlc2M7CisJLyogbGlzdCBsaW5rYWdlICovCisJc3RydWN0IGxpc3RfaGVhZCBs
aW5rYWdlOworfSBwbHVnaW5faGVhZGVyOworCisjZGVmaW5lIHBsdWdpbl9vZl9ncm91cChwbHVn
LCBncm91cCkgKHBsdWctPmguZ3JvdXBzICYgKDEgPDwgZ3JvdXApKQorCisvKiBQUklWQVRFIElO
VEVSRkFDRVMgKi8KKy8qIE5JS0lUQS1GSVhNRS1IQU5TOiB3aGF0IGlzIHRoaXMgZm9yIGFuZCB3
aHkgZG9lcyBpdCBkdXBsaWNhdGUgd2hhdCBpcyBpbgorICogcGx1Z2luX2hlYWRlcj8gKi8KKy8q
IHBsdWdpbiB0eXBlIHJlcHJlc2VudGF0aW9uLiAqLworc3RydWN0IHJlaXNlcjRfcGx1Z2luX3R5
cGVfZGF0YSB7CisJLyogaW50ZXJuYWwgcGx1Z2luIHR5cGUgaWRlbnRpZmllci4gU2hvdWxkIGNv
aW5jaWRlIHdpdGgKKwkgICBpbmRleCBvZiB0aGlzIGl0ZW0gaW4gcGx1Z2luc1tdIGFycmF5LiAq
LworCXJlaXNlcjRfcGx1Z2luX3R5cGUgdHlwZV9pZDsKKwkvKiBzaG9ydCBzeW1ib2xpYyBsYWJl
bCBvZiB0aGlzIHBsdWdpbiB0eXBlLiBTaG91bGQgYmUgbm8gbG9uZ2VyCisJICAgdGhhbiBNQVhf
UExVR0lOX1RZUEVfTEFCRUxfTEVOIGNoYXJhY3RlcnMgaW5jbHVkaW5nICdcMCcuICovCisJY29u
c3QgY2hhciAqbGFiZWw7CisJLyogcGx1Z2luIHR5cGUgZGVzY3JpcHRpb24gbG9uZ2VyIHRoYW4g
LmxhYmVsICovCisJY29uc3QgY2hhciAqZGVzYzsKKworLyogTklLSVRBLUZJWE1FLUhBTlM6IGRl
ZmluZSBidWlsdC1pbiAqLworCS8qIG51bWJlciBvZiBidWlsdC1pbiBwbHVnaW4gaW5zdGFuY2Vz
IG9mIHRoaXMgdHlwZSAqLworCWludCBidWlsdGluX251bTsKKwkvKiBhcnJheSBvZiBidWlsdC1p
biBwbHVnaW5zICovCisJdm9pZCAqYnVpbHRpbjsKKwlzdHJ1Y3QgbGlzdF9oZWFkIHBsdWdpbnNf
bGlzdDsKKwlzaXplX3Qgc2l6ZTsKK307CisKK2V4dGVybiBzdHJ1Y3QgcmVpc2VyNF9wbHVnaW5f
dHlwZV9kYXRhIHBsdWdpbnNbUkVJU0VSNF9QTFVHSU5fVFlQRVNdOworCitpbnQgaXNfcGx1Z2lu
X3R5cGVfdmFsaWQocmVpc2VyNF9wbHVnaW5fdHlwZSB0eXBlKTsKK2ludCBpc19wbHVnaW5faWRf
dmFsaWQocmVpc2VyNF9wbHVnaW5fdHlwZSB0eXBlLCByZWlzZXI0X3BsdWdpbl9pZCBpZCk7CisK
K3N0YXRpYyBpbmxpbmUgcmVpc2VyNF9wbHVnaW4gKnBsdWdpbl9hdChzdHJ1Y3QgcmVpc2VyNF9w
bHVnaW5fdHlwZV9kYXRhICpwdHlwZSwKKwkJCQkJaW50IGkpCit7CisJY2hhciAqYnVpbHRpbjsK
KworCWJ1aWx0aW4gPSBwdHlwZS0+YnVpbHRpbjsKKwlyZXR1cm4gKHJlaXNlcjRfcGx1Z2luICop
IChidWlsdGluICsgaSAqIHB0eXBlLT5zaXplKTsKK30KKworLyogcmV0dXJuIHBsdWdpbiBieSBp
dHMgQHR5cGVfaWQgYW5kIEBpZCAqLworc3RhdGljIGlubGluZSByZWlzZXI0X3BsdWdpbiAqcGx1
Z2luX2J5X2lkKHJlaXNlcjRfcGx1Z2luX3R5cGUgdHlwZSwKKwkJCQkJICAgcmVpc2VyNF9wbHVn
aW5faWQgaWQpCit7CisJYXNzZXJ0KCJuaWtpdGEtMTY1MSIsIGlzX3BsdWdpbl90eXBlX3ZhbGlk
KHR5cGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0xNjUyIiwgaXNfcGx1Z2luX2lkX3ZhbGlkKHR5cGUs
IGlkKSk7CisJcmV0dXJuIHBsdWdpbl9hdCgmcGx1Z2luc1t0eXBlXSwgaWQpOworfQorCitleHRl
cm4gcmVpc2VyNF9wbHVnaW4gKnBsdWdpbl9ieV91bnNhZmVfaWQocmVpc2VyNF9wbHVnaW5fdHlw
ZSB0eXBlX2lkLAorCQkJCQkgICByZWlzZXI0X3BsdWdpbl9pZCBpZCk7CisKKy8qKgorICogcGx1
Z2luX2J5X2Rpc2tfaWQgLSBnZXQgcmVpc2VyNF9wbHVnaW4KKyAqIEB0eXBlX2lkOiBwbHVnaW4g
dHlwZSBpZAorICogQGRpZDogcGx1Z2luIGlkIGluIGRpc2sgZm9ybWF0CisgKgorICogUmV0dXJu
cyByZWlzZXI0X3BsdWdpbiBieSBwbHVnaW4gdHlwZSBpZCBhbiBkcGx1Z2luX2lkLgorICovCitz
dGF0aWMgaW5saW5lIHJlaXNlcjRfcGx1Z2luICpwbHVnaW5fYnlfZGlza19pZChyZWlzZXI0X3Ry
ZWUgKiB0cmVlIFVOVVNFRF9BUkcsCisJCQkJCQlyZWlzZXI0X3BsdWdpbl90eXBlIHR5cGVfaWQs
CisJCQkJCQlfX2xlMTYgKnBsdWdpbl9pZCkKK3sKKwkvKgorCSAqIHdoYXQgd2Ugc2hvdWxkIGRv
IHByb3Blcmx5IGlzIHRvIG1haW50YWluIHdpdGhpbiBlYWNoIGZpbGUtc3lzdGVtIGEKKwkgKiBk
aWN0aW9uYXJ5IHRoYXQgbWFwcyBvbi1kaXNrIHBsdWdpbiBpZHMgdG8gInVuaXZlcnNhbCIgaWRz
LiBUaGlzCisJICogZGljdGlvbmFyeSB3aWxsIGJlIHJlc29sdmVkIG9uIG1vdW50IHRpbWUsIHNv
IHRoYXQgdGhpcyBmdW5jdGlvbgorCSAqIHdpbGwgcGVyZm9ybSBqdXN0IG9uZSBhZGRpdGlvbmFs
IGFycmF5IGxvb2t1cC4KKwkgKi8KKwlyZXR1cm4gcGx1Z2luX2J5X3Vuc2FmZV9pZCh0eXBlX2lk
LCBsZTE2X3RvX2NwdSgqcGx1Z2luX2lkKSk7Cit9CisKKy8qIF9fUExVR0lOX0hFQURFUl9IX18g
Ki8KKyNlbmRpZgorCisvKgorICogTG9jYWwgdmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1z
dHlsZTogIksmUiIKKyAqIG1vZGUtbmFtZTogIkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAq
IHRhYi13aWR0aDogOAorICogZmlsbC1jb2x1bW46IDc5CisgKiBFbmQ6CisgKi8KZGlmZiAtdXJO
IC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vcGx1
Z2luX3NldC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9wbHVnaW5fc2V0LmMKLS0t
IGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3BsdWdpbl9zZXQuYwkxOTcwLTAx
LTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQv
cGx1Z2luL3BsdWdpbl9zZXQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3NTIyMjM0OSArMDEwMApA
QCAtMCwwICsxLDM4NyBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBS
ZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKy8qIFRo
aXMgZmlsZSBjb250YWlucyBSZWlzZXI0IHBsdWdpbiBzZXQgb3BlcmF0aW9ucyAqLworCisvKiBw
bHVnaW4gc2V0cworICoKKyAqIEVhY2ggZmlsZSBpbiByZWlzZXI0IGlzIGNvbnRyb2xsZWQgYnkg
YSB3aG9sZSBzZXQgb2YgcGx1Z2lucyAoZmlsZSBwbHVnaW4sCisgKiBkaXJlY3RvcnkgcGx1Z2lu
LCBoYXNoIHBsdWdpbiwgdGFpbCBwb2xpY3kgcGx1Z2luLCBzZWN1cml0eSBwbHVnaW4sIGV0Yy4p
CisgKiBhc3NpZ25lZCAoaW5oZXJpdGVkLCBkZWR1Y2VkIGZyb20gbW9kZSBiaXRzLCBldGMuKSBh
dCBjcmVhdGlvbiB0aW1lLiBUaGlzCisgKiBzZXQgb2YgcGx1Z2lucyAoc28gY2FsbGVkIHBzZXQp
IGlzIGRlc2NyaWJlZCBieSBzdHJ1Y3R1cmUgcGx1Z2luX3NldCAoc2VlCisgKiBwbHVnaW4vcGx1
Z2luX3NldC5oKSwgd2hpY2ggY29udGFpbnMgcG9pbnRlcnMgdG8gYWxsIHJlcXVpcmVkIHBsdWdp
bnMuCisgKgorICogQ2hpbGRyZW4gY2FuIGluaGVyaXQgc29tZSBwc2V0IG1lbWJlcnMgZnJvbSB0
aGVpciBwYXJlbnQsIGhvd2V2ZXIgc29tZXRpbWVzCisgKiBpdCBpcyB1c2VmdWwgdG8gc3BlY2lm
eSBtZW1iZXJzIGRpZmZlcmVudCBmcm9tIHBhcmVudCBvbmVzLiBTaW5jZSBvYmplY3QncworICog
cHNldCBjYW4gbm90IGJlIGVhc2lseSBjaGFuZ2VkIHdpdGhvdXQgZmF0YWwgY29uc2VxdWVuY2Vz
LCB3ZSB1c2UgZm9yIHRoaXMKKyAqIHB1cnBvc2UgYW5vdGhlciBzcGVjaWFsIHBsdWdpbiB0YWJs
ZSAoc28gY2FsbGVkIGhzZXQsIG9yIGhlaXIgc2V0KSBkZXNjcmliZWQKKyAqIGJ5IHRoZSBzYW1l
IHN0cnVjdHVyZS4KKyAqCisgKiBJbm9kZSBvbmx5IHN0b3JlcyBhIHBvaW50ZXJzIHRvIHBzZXQg
YW5kIGhzZXQuIERpZmZlcmVudCBpbm9kZXMgd2l0aCB0aGUKKyAqIHNhbWUgc2V0IG9mIHBzZXQg
KGhzZXQpIG1lbWJlcnMgcG9pbnQgdG8gdGhlIHNhbWUgcHNldCAoaHNldCkuIFRoaXMgaXMKKyAq
IGFyY2hpdmVkIGJ5IHN0b3JpbmcgcHNldHMgYW5kIGhzZXRzIGluIGdsb2JhbCBoYXNoIHRhYmxl
LiBSYWNlcyBhcmUgYXZvaWRlZAorICogYnkgc2ltcGxlIChhbmQgZWZmaWNpZW50IHNvIGZhcikg
c29sdXRpb24gb2YgbmV2ZXIgcmVjeWNsaW5nIHBzZXRzLCBldmVuCisgKiB3aGVuIGxhc3QgaW5v
ZGUgcG9pbnRpbmcgdG8gaXQgaXMgZGVzdHJveWVkLgorICovCisKKyNpbmNsdWRlICIuLi9kZWJ1
Zy5oIgorI2luY2x1ZGUgIi4uL3N1cGVyLmgiCisjaW5jbHVkZSAicGx1Z2luX3NldC5oIgorCisj
aW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L3N0ZGRlZi5oPgorCisvKiBz
bGFiIGZvciBwbHVnaW4gc2V0cyAqLworc3RhdGljIHN0cnVjdCBrbWVtX2NhY2hlICpwbHVnaW5f
c2V0X3NsYWI7CisKK3N0YXRpYyBzcGlubG9ja190IHBsdWdpbl9zZXRfbG9ja1s4XSBfX2NhY2hl
bGluZV9hbGlnbmVkX2luX3NtcCA9IHsKKwlfX1NQSU5fTE9DS19VTkxPQ0tFRChwbHVnaW5fc2V0
X2xvY2tbMF0pLAorCV9fU1BJTl9MT0NLX1VOTE9DS0VEKHBsdWdpbl9zZXRfbG9ja1sxXSksCisJ
X19TUElOX0xPQ0tfVU5MT0NLRUQocGx1Z2luX3NldF9sb2NrWzJdKSwKKwlfX1NQSU5fTE9DS19V
TkxPQ0tFRChwbHVnaW5fc2V0X2xvY2tbM10pLAorCV9fU1BJTl9MT0NLX1VOTE9DS0VEKHBsdWdp
bl9zZXRfbG9ja1s0XSksCisJX19TUElOX0xPQ0tfVU5MT0NLRUQocGx1Z2luX3NldF9sb2NrWzVd
KSwKKwlfX1NQSU5fTE9DS19VTkxPQ0tFRChwbHVnaW5fc2V0X2xvY2tbNl0pLAorCV9fU1BJTl9M
T0NLX1VOTE9DS0VEKHBsdWdpbl9zZXRfbG9ja1s3XSkKK307CisKKy8qIGhhc2ggdGFibGUgc3Vw
cG9ydCAqLworCisjZGVmaW5lIFBTX1RBQkxFX1NJWkUgKDMyKQorCitzdGF0aWMgaW5saW5lIHBs
dWdpbl9zZXQgKmNhc3RfdG8oY29uc3QgdW5zaWduZWQgbG9uZyAqYSkKK3sKKwlyZXR1cm4gY29u
dGFpbmVyX29mKGEsIHBsdWdpbl9zZXQsIGhhc2h2YWwpOworfQorCitzdGF0aWMgaW5saW5lIGlu
dCBwc2VxKGNvbnN0IHVuc2lnbmVkIGxvbmcgKmExLCBjb25zdCB1bnNpZ25lZCBsb25nICphMikK
K3sKKwlwbHVnaW5fc2V0ICpzZXQxOworCXBsdWdpbl9zZXQgKnNldDI7CisKKwkvKiBtYWtlIHN1
cmUgZmllbGRzIGFyZSBub3QgbWlzc2VkIGluIHRoZSBjb2RlIGJlbG93ICovCisJY2Fzc2VydChz
aXplb2YgKnNldDEgPT0KKwkJc2l6ZW9mIHNldDEtPmhhc2h2YWwgKworCQlzaXplb2Ygc2V0MS0+
bGluayArCisJCXNpemVvZiBzZXQxLT5maWxlICsKKwkJc2l6ZW9mIHNldDEtPmRpciArCisJCXNp
emVvZiBzZXQxLT5wZXJtICsKKwkJc2l6ZW9mIHNldDEtPmZvcm1hdHRpbmcgKworCQlzaXplb2Yg
c2V0MS0+aGFzaCArCisJCXNpemVvZiBzZXQxLT5maWJyYXRpb24gKworCQlzaXplb2Ygc2V0MS0+
c2QgKworCQlzaXplb2Ygc2V0MS0+ZGlyX2l0ZW0gKworCQlzaXplb2Ygc2V0MS0+Y2lwaGVyICsK
KwkJc2l6ZW9mIHNldDEtPmRpZ2VzdCArCisJCXNpemVvZiBzZXQxLT5jb21wcmVzc2lvbiArCisJ
CXNpemVvZiBzZXQxLT5jb21wcmVzc2lvbl9tb2RlICsKKwkJc2l6ZW9mIHNldDEtPmNsdXN0ZXIg
KworCQlzaXplb2Ygc2V0MS0+Y3JlYXRlKTsKKworCXNldDEgPSBjYXN0X3RvKGExKTsKKwlzZXQy
ID0gY2FzdF90byhhMik7CisJcmV0dXJuCisJICAgIHNldDEtPmhhc2h2YWwgPT0gc2V0Mi0+aGFz
aHZhbCAmJgorCSAgICBzZXQxLT5maWxlID09IHNldDItPmZpbGUgJiYKKwkgICAgc2V0MS0+ZGly
ID09IHNldDItPmRpciAmJgorCSAgICBzZXQxLT5wZXJtID09IHNldDItPnBlcm0gJiYKKwkgICAg
c2V0MS0+Zm9ybWF0dGluZyA9PSBzZXQyLT5mb3JtYXR0aW5nICYmCisJICAgIHNldDEtPmhhc2gg
PT0gc2V0Mi0+aGFzaCAmJgorCSAgICBzZXQxLT5maWJyYXRpb24gPT0gc2V0Mi0+ZmlicmF0aW9u
ICYmCisJICAgIHNldDEtPnNkID09IHNldDItPnNkICYmCisJICAgIHNldDEtPmRpcl9pdGVtID09
IHNldDItPmRpcl9pdGVtICYmCisJICAgIHNldDEtPmNpcGhlciA9PSBzZXQyLT5jaXBoZXIgJiYK
KwkgICAgc2V0MS0+ZGlnZXN0ID09IHNldDItPmRpZ2VzdCAmJgorCSAgICBzZXQxLT5jb21wcmVz
c2lvbiA9PSBzZXQyLT5jb21wcmVzc2lvbiAmJgorCSAgICBzZXQxLT5jb21wcmVzc2lvbl9tb2Rl
ID09IHNldDItPmNvbXByZXNzaW9uX21vZGUgJiYKKwkgICAgc2V0MS0+Y2x1c3RlciA9PSBzZXQy
LT5jbHVzdGVyICYmCisJICAgIHNldDEtPmNyZWF0ZSA9PSBzZXQyLT5jcmVhdGU7Cit9CisKKyNk
ZWZpbmUgSEFTSF9GSUVMRChoYXNoLCBzZXQsIGZpZWxkKQkJXAorKHsJCQkJCQlcCisJKGhhc2gp
ICs9ICh1bnNpZ25lZCBsb25nKShzZXQpLT5maWVsZCA+PiAyOwlcCit9KQorCitzdGF0aWMgaW5s
aW5lIHVuc2lnbmVkIGxvbmcgY2FsY3VsYXRlX2hhc2goY29uc3QgcGx1Z2luX3NldCAqIHNldCkK
K3sKKwl1bnNpZ25lZCBsb25nIHJlc3VsdDsKKworCXJlc3VsdCA9IDA7CisJSEFTSF9GSUVMRChy
ZXN1bHQsIHNldCwgZmlsZSk7CisJSEFTSF9GSUVMRChyZXN1bHQsIHNldCwgZGlyKTsKKwlIQVNI
X0ZJRUxEKHJlc3VsdCwgc2V0LCBwZXJtKTsKKwlIQVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBmb3Jt
YXR0aW5nKTsKKwlIQVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBoYXNoKTsKKwlIQVNIX0ZJRUxEKHJl
c3VsdCwgc2V0LCBmaWJyYXRpb24pOworCUhBU0hfRklFTEQocmVzdWx0LCBzZXQsIHNkKTsKKwlI
QVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBkaXJfaXRlbSk7CisJSEFTSF9GSUVMRChyZXN1bHQsIHNl
dCwgY2lwaGVyKTsKKwlIQVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBkaWdlc3QpOworCUhBU0hfRklF
TEQocmVzdWx0LCBzZXQsIGNvbXByZXNzaW9uKTsKKwlIQVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBj
b21wcmVzc2lvbl9tb2RlKTsKKwlIQVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBjbHVzdGVyKTsKKwlI
QVNIX0ZJRUxEKHJlc3VsdCwgc2V0LCBjcmVhdGUpOworCXJldHVybiByZXN1bHQgJiAoUFNfVEFC
TEVfU0laRSAtIDEpOworfQorCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcKK3BzaGFzaChw
c19oYXNoX3RhYmxlICogdGFibGUsIGNvbnN0IHVuc2lnbmVkIGxvbmcgKmEpCit7CisJcmV0dXJu
ICphOworfQorCisvKiBUaGUgaGFzaCB0YWJsZSBkZWZpbml0aW9uICovCisjZGVmaW5lIEtNQUxM
T0Moc2l6ZSkga21hbGxvYygoc2l6ZSksIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKQorI2Rl
ZmluZSBLRlJFRShwdHIsIHNpemUpIGtmcmVlKHB0cikKK1RZUEVfU0FGRV9IQVNIX0RFRklORShw
cywgcGx1Z2luX3NldCwgdW5zaWduZWQgbG9uZywgaGFzaHZhbCwgbGluaywgcHNoYXNoLAorCQkg
ICAgICBwc2VxKTsKKyN1bmRlZiBLRlJFRQorI3VuZGVmIEtNQUxMT0MKKworc3RhdGljIHBzX2hh
c2hfdGFibGUgcHNfdGFibGU7CitzdGF0aWMgcGx1Z2luX3NldCBlbXB0eV9zZXQgPSB7CisJLmhh
c2h2YWwgPSAwLAorCS5maWxlID0gTlVMTCwKKwkuZGlyID0gTlVMTCwKKwkucGVybSA9IE5VTEws
CisJLmZvcm1hdHRpbmcgPSBOVUxMLAorCS5oYXNoID0gTlVMTCwKKwkuZmlicmF0aW9uID0gTlVM
TCwKKwkuc2QgPSBOVUxMLAorCS5kaXJfaXRlbSA9IE5VTEwsCisJLmNpcGhlciA9IE5VTEwsCisJ
LmRpZ2VzdCA9IE5VTEwsCisJLmNvbXByZXNzaW9uID0gTlVMTCwKKwkuY29tcHJlc3Npb25fbW9k
ZSA9IE5VTEwsCisJLmNsdXN0ZXIgPSBOVUxMLAorCS5jcmVhdGUgPSBOVUxMLAorCS5saW5rID0g
e05VTEx9Cit9OworCitwbHVnaW5fc2V0ICpwbHVnaW5fc2V0X2dldF9lbXB0eSh2b2lkKQorewor
CXJldHVybiAmZW1wdHlfc2V0OworfQorCit2b2lkIHBsdWdpbl9zZXRfcHV0KHBsdWdpbl9zZXQg
KiBzZXQpCit7Cit9CisKK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyAqcHNldF9maWVsZChw
bHVnaW5fc2V0ICogc2V0LCBpbnQgb2Zmc2V0KQoreworCXJldHVybiAodW5zaWduZWQgbG9uZyAq
KSgoKGNoYXIgKilzZXQpICsgb2Zmc2V0KTsKK30KKworc3RhdGljIGludCBwbHVnaW5fc2V0X2Zp
ZWxkKHBsdWdpbl9zZXQgKiogc2V0LCBjb25zdCB1bnNpZ25lZCBsb25nIHZhbCwKKwkJCSAgICBj
b25zdCBpbnQgb2Zmc2V0KQoreworCXVuc2lnbmVkIGxvbmcgKnNwb3Q7CisJc3BpbmxvY2tfdCAq
bG9jazsKKwlwbHVnaW5fc2V0IHJlcGxpY2E7CisJcGx1Z2luX3NldCAqdHdpbjsKKwlwbHVnaW5f
c2V0ICpwc2FsOworCXBsdWdpbl9zZXQgKm9yaWc7CisKKwlhc3NlcnQoIm5pa2l0YS0yOTAyIiwg
c2V0ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI5MDQiLCAqc2V0ICE9IE5VTEwpOworCisJ
c3BvdCA9IHBzZXRfZmllbGQoKnNldCwgb2Zmc2V0KTsKKwlpZiAodW5saWtlbHkoKnNwb3QgPT0g
dmFsKSkKKwkJcmV0dXJuIDA7CisKKwlyZXBsaWNhID0gKihvcmlnID0gKnNldCk7CisJKnBzZXRf
ZmllbGQoJnJlcGxpY2EsIG9mZnNldCkgPSB2YWw7CisJcmVwbGljYS5oYXNodmFsID0gY2FsY3Vs
YXRlX2hhc2goJnJlcGxpY2EpOworCXJjdV9yZWFkX2xvY2soKTsKKwl0d2luID0gcHNfaGFzaF9m
aW5kKCZwc190YWJsZSwgJnJlcGxpY2EuaGFzaHZhbCk7CisJaWYgKHVubGlrZWx5KHR3aW4gPT0g
TlVMTCkpIHsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CisJCXBzYWwgPSBrbWVtX2NhY2hlX2FsbG9j
KHBsdWdpbl9zZXRfc2xhYiwKKwkJCQkJcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCQlp
ZiAocHNhbCA9PSBOVUxMKQorCQkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKwkJKnBzYWwgPSBy
ZXBsaWNhOworCQlsb2NrID0gJnBsdWdpbl9zZXRfbG9ja1tyZXBsaWNhLmhhc2h2YWwgJiA3XTsK
KwkJc3Bpbl9sb2NrKGxvY2spOworCQl0d2luID0gcHNfaGFzaF9maW5kKCZwc190YWJsZSwgJnJl
cGxpY2EuaGFzaHZhbCk7CisJCWlmIChsaWtlbHkodHdpbiA9PSBOVUxMKSkgeworCQkJKnNldCA9
IHBzYWw7CisJCQlwc19oYXNoX2luc2VydF9yY3UoJnBzX3RhYmxlLCBwc2FsKTsKKwkJfSBlbHNl
IHsKKwkJCSpzZXQgPSB0d2luOworCQkJa21lbV9jYWNoZV9mcmVlKHBsdWdpbl9zZXRfc2xhYiwg
cHNhbCk7CisJCX0KKwkJc3Bpbl91bmxvY2sobG9jayk7CisJfSBlbHNlIHsKKwkJcmN1X3JlYWRf
dW5sb2NrKCk7CisJCSpzZXQgPSB0d2luOworCX0KKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHN0
cnVjdCB7CisJaW50IG9mZnNldDsKKwlyZWlzZXI0X3BsdWdpbl9ncm91cHMgZ3JvdXBzOworCXJl
aXNlcjRfcGx1Z2luX3R5cGUgdHlwZTsKK30gcHNldF9kZXNjcltQU0VUX0xBU1RdID0geworCVtQ
U0VUX0ZJTEVdID0geworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3NldCwgZmlsZSksCisJ
CS50eXBlID0gUkVJU0VSNF9GSUxFX1BMVUdJTl9UWVBFLAorCQkuZ3JvdXBzID0gMAorCX0sCisJ
W1BTRVRfRElSXSA9IHsKKwkJLm9mZnNldCA9IG9mZnNldG9mKHBsdWdpbl9zZXQsIGRpciksCisJ
CS50eXBlID0gUkVJU0VSNF9ESVJfUExVR0lOX1RZUEUsCisJCS5ncm91cHMgPSAwCisJfSwKKwlb
UFNFVF9QRVJNXSA9IHsKKwkJLm9mZnNldCA9IG9mZnNldG9mKHBsdWdpbl9zZXQsIHBlcm0pLAor
CQkudHlwZSA9IFJFSVNFUjRfUEVSTV9QTFVHSU5fVFlQRSwKKwkJLmdyb3VwcyA9IDAKKwl9LAor
CVtQU0VUX0ZPUk1BVFRJTkddID0geworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3NldCwg
Zm9ybWF0dGluZyksCisJCS50eXBlID0gUkVJU0VSNF9GT1JNQVRUSU5HX1BMVUdJTl9UWVBFLAor
CQkuZ3JvdXBzID0gMAorCX0sCisJW1BTRVRfSEFTSF0gPSB7CisJCS5vZmZzZXQgPSBvZmZzZXRv
ZihwbHVnaW5fc2V0LCBoYXNoKSwKKwkJLnR5cGUgPSBSRUlTRVI0X0hBU0hfUExVR0lOX1RZUEUs
CisJCS5ncm91cHMgPSAwCisJfSwKKwlbUFNFVF9GSUJSQVRJT05dID0geworCQkub2Zmc2V0ID0g
b2Zmc2V0b2YocGx1Z2luX3NldCwgZmlicmF0aW9uKSwKKwkJLnR5cGUgPSBSRUlTRVI0X0ZJQlJB
VElPTl9QTFVHSU5fVFlQRSwKKwkJLmdyb3VwcyA9IDAKKwl9LAorCVtQU0VUX1NEXSA9IHsKKwkJ
Lm9mZnNldCA9IG9mZnNldG9mKHBsdWdpbl9zZXQsIHNkKSwKKwkJLnR5cGUgPSBSRUlTRVI0X0lU
RU1fUExVR0lOX1RZUEUsCisJCS5ncm91cHMgPSAoMSA8PCBTVEFUX0RBVEFfSVRFTV9UWVBFKQor
CX0sCisJW1BTRVRfRElSX0lURU1dID0geworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3Nl
dCwgZGlyX2l0ZW0pLAorCQkudHlwZSA9IFJFSVNFUjRfSVRFTV9QTFVHSU5fVFlQRSwKKwkJLmdy
b3VwcyA9ICgxIDw8IERJUl9FTlRSWV9JVEVNX1RZUEUpCisJfSwKKwlbUFNFVF9DSVBIRVJdID0g
eworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3NldCwgY2lwaGVyKSwKKwkJLnR5cGUgPSBS
RUlTRVI0X0NJUEhFUl9QTFVHSU5fVFlQRSwKKwkJLmdyb3VwcyA9IDAKKwl9LAorCVtQU0VUX0RJ
R0VTVF0gPSB7CisJCS5vZmZzZXQgPSBvZmZzZXRvZihwbHVnaW5fc2V0LCBkaWdlc3QpLAorCQku
dHlwZSA9IFJFSVNFUjRfRElHRVNUX1BMVUdJTl9UWVBFLAorCQkuZ3JvdXBzID0gMAorCX0sCisJ
W1BTRVRfQ09NUFJFU1NJT05dID0geworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3NldCwg
Y29tcHJlc3Npb24pLAorCQkudHlwZSA9IFJFSVNFUjRfQ09NUFJFU1NJT05fUExVR0lOX1RZUEUs
CisJCS5ncm91cHMgPSAwCisJfSwKKwlbUFNFVF9DT01QUkVTU0lPTl9NT0RFXSA9IHsKKwkJLm9m
ZnNldCA9IG9mZnNldG9mKHBsdWdpbl9zZXQsIGNvbXByZXNzaW9uX21vZGUpLAorCQkudHlwZSA9
IFJFSVNFUjRfQ09NUFJFU1NJT05fTU9ERV9QTFVHSU5fVFlQRSwKKwkJLmdyb3VwcyA9IDAKKwl9
LAorCVtQU0VUX0NMVVNURVJdID0geworCQkub2Zmc2V0ID0gb2Zmc2V0b2YocGx1Z2luX3NldCwg
Y2x1c3RlciksCisJCS50eXBlID0gUkVJU0VSNF9DTFVTVEVSX1BMVUdJTl9UWVBFLAorCQkuZ3Jv
dXBzID0gMAorCX0sCisJW1BTRVRfQ1JFQVRFXSA9IHsKKwkJLm9mZnNldCA9IG9mZnNldG9mKHBs
dWdpbl9zZXQsIGNyZWF0ZSksCisJCS50eXBlID0gUkVJU0VSNF9GSUxFX1BMVUdJTl9UWVBFLAor
CQkuZ3JvdXBzID0gKDEgPDwgUkVJU0VSNF9SRUdVTEFSX0ZJTEUpCisJfQorfTsKKworI2RlZmlu
ZSBERUZJTkVfUFNFVF9PUFMoUFJFRklYKQkJCQkJCSAgICAgICBcCisJcmVpc2VyNF9wbHVnaW5f
dHlwZSBQUkVGSVgjI19tZW1iZXJfdG9fdHlwZV91bnNhZmUocHNldF9tZW1iZXIgbWVtYikgICBc
Cit7CQkJCQkJCQkgICAgICAgICAgICAgICBcCisJaWYgKG1lbWIgPiBQU0VUX0xBU1QpCQkJCQkJ
ICAgICAgIFwKKwkJcmV0dXJuIFJFSVNFUjRfUExVR0lOX1RZUEVTOwkJCQkgICAgICAgXAorCXJl
dHVybiBwc2V0X2Rlc2NyW21lbWJdLnR5cGU7CQkJCQkgICAgICAgXAorfQkJCQkJCQkJCSAgICAg
ICBcCisJCQkJCQkJCQkgICAgICAgXAoraW50IFBSRUZJWCMjX3NldF91bnNhZmUocGx1Z2luX3Nl
dCAqKiBzZXQsIHBzZXRfbWVtYmVyIG1lbWIsCQkgICAgICAgXAorCQkgICAgIHJlaXNlcjRfcGx1
Z2luICogcGx1Z2luKQkJCQkgICAgICAgXAorewkJCQkJCQkJCSAgICAgICBcCisJYXNzZXJ0KCJu
aWtpdGEtMzQ5MiIsIHNldCAhPSBOVUxMKTsJCQkJICAgICAgIFwKKwlhc3NlcnQoIm5pa2l0YS0z
NDkzIiwgKnNldCAhPSBOVUxMKTsJCQkJICAgICAgIFwKKwlhc3NlcnQoIm5pa2l0YS0zNDk0Iiwg
cGx1Z2luICE9IE5VTEwpOwkJCQkgICAgICAgXAorCWFzc2VydCgibmlraXRhLTM0OTUiLCAwIDw9
IG1lbWIgJiYgbWVtYiA8IFBTRVRfTEFTVCk7CQkgICAgICAgXAorCWFzc2VydCgibmlraXRhLTM0
OTYiLCBwbHVnaW4tPmgudHlwZV9pZCA9PSBwc2V0X2Rlc2NyW21lbWJdLnR5cGUpOyAgICAgXAor
CQkJCQkJCQkJICAgICAgIFwKKwlpZiAocHNldF9kZXNjclttZW1iXS5ncm91cHMpCQkJCQkgICAg
ICAgXAorCQlpZiAoIShwc2V0X2Rlc2NyW21lbWJdLmdyb3VwcyAmIHBsdWdpbi0+aC5ncm91cHMp
KQkgICAgICAgXAorCQkJcmV0dXJuIC1FSU5WQUw7CQkJCQkgICAgICAgXAorCQkJCQkJCQkJICAg
ICAgIFwKKwlyZXR1cm4gcGx1Z2luX3NldF9maWVsZChzZXQsCQkJCQkgICAgICAgXAorCQkJKHVu
c2lnbmVkIGxvbmcpcGx1Z2luLCBwc2V0X2Rlc2NyW21lbWJdLm9mZnNldCk7ICAgICAgIFwKK30J
CQkJCQkJCQkgICAgICAgXAorCQkJCQkJCQkJICAgICAgIFwKK3JlaXNlcjRfcGx1Z2luICpQUkVG
SVgjI19nZXQocGx1Z2luX3NldCAqIHNldCwgcHNldF9tZW1iZXIgbWVtYikJICAgICAgIFwKK3sJ
CQkJCQkJCQkgICAgICAgXAorCWFzc2VydCgibmlraXRhLTM0OTciLCBzZXQgIT0gTlVMTCk7CQkJ
CSAgICAgICBcCisJYXNzZXJ0KCJuaWtpdGEtMzQ5OCIsIDAgPD0gbWVtYiAmJiBtZW1iIDwgUFNF
VF9MQVNUKTsJCSAgICAgICBcCisJCQkJCQkJCQkgICAgICAgXAorCXJldHVybiAqKHJlaXNlcjRf
cGx1Z2luICoqKSAoKChjaGFyICopc2V0KSArIHBzZXRfZGVzY3JbbWVtYl0ub2Zmc2V0KTsgXAor
fQorCitERUZJTkVfUFNFVF9PUFMoYXNldCk7CisKK2ludCBzZXRfcGx1Z2luKHBsdWdpbl9zZXQg
Kiogc2V0LCBwc2V0X21lbWJlciBtZW1iLCByZWlzZXI0X3BsdWdpbiAqIHBsdWdpbikKK3sKKwly
ZXR1cm4gcGx1Z2luX3NldF9maWVsZChzZXQsCisJCSh1bnNpZ25lZCBsb25nKXBsdWdpbiwgcHNl
dF9kZXNjclttZW1iXS5vZmZzZXQpOworfQorCisvKioKKyAqIGluaXRfcGx1Z2luX3NldCAtIGNy
ZWF0ZSBwbHVnaW4gc2V0IGNhY2hlIGFuZCBoYXNoIHRhYmxlCisgKgorICogSW5pdGlhbGl6ZXMg
c2xhYiBjYWNoZSBvZiBwbHVnaW5fc2V0LXMgYW5kIHRoZWlyIGhhc2ggdGFibGUuIEl0IGlzIHBh
cnQgb2YKKyAqIHJlaXNlcjQgbW9kdWxlIGluaXRpYWxpemF0aW9uLgorICovCitpbnQgaW5pdF9w
bHVnaW5fc2V0KHZvaWQpCit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IHBzX2hhc2hfaW5p
dCgmcHNfdGFibGUsIFBTX1RBQkxFX1NJWkUpOworCWlmIChyZXN1bHQgPT0gMCkgeworCQlwbHVn
aW5fc2V0X3NsYWIgPSBrbWVtX2NhY2hlX2NyZWF0ZSgicGx1Z2luX3NldCIsCisJCQkJCQkgICAg
c2l6ZW9mKHBsdWdpbl9zZXQpLCAwLAorCQkJCQkJICAgIFNMQUJfSFdDQUNIRV9BTElHTiwKKwkJ
CQkJCSAgICBOVUxMKTsKKwkJaWYgKHBsdWdpbl9zZXRfc2xhYiA9PSBOVUxMKQorCQkJcmVzdWx0
ID0gUkVURVJSKC1FTk9NRU0pOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIGRv
bmVfcGx1Z2luX3NldCAtIGRlbGV0ZSBwbHVnaW5fc2V0IGNhY2hlIGFuZCBwbHVnaW5fc2V0IGhh
c2ggdGFibGUKKyAqCisgKiBUaGlzIGlzIGNhbGxlZCBvbiByZWlzZXI0IG1vZHVsZSB1bmxvYWRp
bmcgb3Igc3lzdGVtIHNodXRkb3duLgorICovCit2b2lkIGRvbmVfcGx1Z2luX3NldCh2b2lkKQor
eworCXBsdWdpbl9zZXQgKmN1ciwgKm5leHQ7CisKKwlmb3JfYWxsX2luX2h0YWJsZSgmcHNfdGFi
bGUsIHBzLCBjdXIsIG5leHQpIHsKKwkJcHNfaGFzaF9yZW1vdmUoJnBzX3RhYmxlLCBjdXIpOwor
CQlrbWVtX2NhY2hlX2ZyZWUocGx1Z2luX3NldF9zbGFiLCBjdXIpOworCX0KKwlkZXN0cm95X3Jl
aXNlcjRfY2FjaGUoJnBsdWdpbl9zZXRfc2xhYik7CisJcHNfaGFzaF9kb25lKCZwc190YWJsZSk7
Cit9CisKKy8qCisgKiBMb2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICogbW9kZS1uYW1lOiAiTEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAorICogdGFiLXdp
ZHRoOiA4CisgKiBmaWxsLWNvbHVtbjogMTIwCisgKiBFbmQ6CisgKi8KZGlmZiAtdXJOIC0tbm8t
ZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vcGx1Z2luX3Nl
dC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9wbHVnaW5fc2V0LmgKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3BsdWdpbl9zZXQuaAkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2lu
L3BsdWdpbl9zZXQuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3NTIyMjM0OSArMDEwMApAQCAtMCww
ICsxLDc4IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwg
bGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisvKiBSZWlzZXI0
IHBsdWdpbiBzZXQgZGVmaW5pdGlvbi4KKyAgIFNlZSBmcy9yZWlzZXI0L3BsdWdpbi9wbHVnaW5f
c2V0LmMgZm9yIGRldGFpbHMgKi8KKworI2lmICFkZWZpbmVkKF9fUExVR0lOX1NFVF9IX18pCisj
ZGVmaW5lIF9fUExVR0lOX1NFVF9IX18KKworI2luY2x1ZGUgIi4uL3R5cGVfc2FmZV9oYXNoLmgi
CisjaW5jbHVkZSAicGx1Z2luLmgiCisKKyNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPgorCitz
dHJ1Y3QgcGx1Z2luX3NldDsKK3R5cGVkZWYgc3RydWN0IHBsdWdpbl9zZXQgcGx1Z2luX3NldDsK
KworVFlQRV9TQUZFX0hBU0hfREVDTEFSRShwcywgcGx1Z2luX3NldCk7CisKK3N0cnVjdCBwbHVn
aW5fc2V0IHsKKwl1bnNpZ25lZCBsb25nIGhhc2h2YWw7CisJLyogcGx1Z2luIG9mIGZpbGUgKi8K
KwlmaWxlX3BsdWdpbiAqZmlsZTsKKwkvKiBwbHVnaW4gb2YgZGlyICovCisJZGlyX3BsdWdpbiAq
ZGlyOworCS8qIHBlcm0gcGx1Z2luIGZvciB0aGlzIGZpbGUgKi8KKwlwZXJtX3BsdWdpbiAqcGVy
bTsKKwkvKiB0YWlsIHBvbGljeSBwbHVnaW4uIE9ubHkgbWVhbmluZ2Z1bCBmb3IgcmVndWxhciBm
aWxlcyAqLworCWZvcm1hdHRpbmdfcGx1Z2luICpmb3JtYXR0aW5nOworCS8qIGhhc2ggcGx1Z2lu
LiBPbmx5IG1lYW5pbmdmdWwgZm9yIGRpcmVjdG9yaWVzLiAqLworCWhhc2hfcGx1Z2luICpoYXNo
OworCS8qIGZpYnJhdGlvbiBwbHVnaW4uIE9ubHkgbWVhbmluZ2Z1bCBmb3IgZGlyZWN0b3JpZXMu
ICovCisJZmlicmF0aW9uX3BsdWdpbiAqZmlicmF0aW9uOworCS8qIHBsdWdpbiBvZiBzdGF0LWRh
dGEgKi8KKwlpdGVtX3BsdWdpbiAqc2Q7CisJLyogcGx1Z2luIG9mIGl0ZW1zIGEgZGlyZWN0b3J5
IGlzIGJ1aWx0IG9mICovCisJaXRlbV9wbHVnaW4gKmRpcl9pdGVtOworCS8qIGNpcGhlciBwbHVn
aW4gKi8KKwljaXBoZXJfcGx1Z2luICpjaXBoZXI7CisJLyogZGlnZXN0IHBsdWdpbiAqLworCWRp
Z2VzdF9wbHVnaW4gKmRpZ2VzdDsKKwkvKiBjb21wcmVzc2lvbiBwbHVnaW4gKi8KKwljb21wcmVz
c2lvbl9wbHVnaW4gKmNvbXByZXNzaW9uOworCS8qIGNvbXByZXNzaW9uIG1vZGUgcGx1Z2luICov
CisJY29tcHJlc3Npb25fbW9kZV9wbHVnaW4gKmNvbXByZXNzaW9uX21vZGU7CisJLyogY2x1c3Rl
ciBwbHVnaW4gKi8KKwljbHVzdGVyX3BsdWdpbiAqY2x1c3RlcjsKKwkvKiB0aGlzIHNwZWNpZmll
cyBmaWxlIHBsdWdpbiBvZiByZWd1bGFyIGNoaWxkcmVuLgorCSAgIG9ubHkgbWVhbmluZ2Z1bCBm
b3IgZGlyZWN0b3JpZXMgKi8KKwlmaWxlX3BsdWdpbiAqY3JlYXRlOworCXBzX2hhc2hfbGluayBs
aW5rOworfTsKKworZXh0ZXJuIHBsdWdpbl9zZXQgKnBsdWdpbl9zZXRfZ2V0X2VtcHR5KHZvaWQp
OworZXh0ZXJuIHZvaWQgcGx1Z2luX3NldF9wdXQocGx1Z2luX3NldCAqIHNldCk7CisKK2V4dGVy
biBpbnQgaW5pdF9wbHVnaW5fc2V0KHZvaWQpOworZXh0ZXJuIHZvaWQgZG9uZV9wbHVnaW5fc2V0
KHZvaWQpOworCitleHRlcm4gcmVpc2VyNF9wbHVnaW4gKmFzZXRfZ2V0KHBsdWdpbl9zZXQgKiBz
ZXQsIHBzZXRfbWVtYmVyIG1lbWIpOworZXh0ZXJuIGludCBzZXRfcGx1Z2luKHBsdWdpbl9zZXQg
Kiogc2V0LCBwc2V0X21lbWJlciBtZW1iLAorCQkgICAgICByZWlzZXI0X3BsdWdpbiAqIHBsdWdp
bik7CitleHRlcm4gaW50IGFzZXRfc2V0X3Vuc2FmZShwbHVnaW5fc2V0ICoqIHNldCwgcHNldF9t
ZW1iZXIgbWVtYiwKKwkJCSAgIHJlaXNlcjRfcGx1Z2luICogcGx1Z2luKTsKK2V4dGVybiByZWlz
ZXI0X3BsdWdpbl90eXBlIGFzZXRfbWVtYmVyX3RvX3R5cGVfdW5zYWZlKHBzZXRfbWVtYmVyIG1l
bWIpOworCisvKiBfX1BMVUdJTl9TRVRfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBo
YXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6
IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVm
ZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3NlY3VyaXR5L01ha2Vm
aWxlIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9zZWN1cml0eS9NYWtlZmlsZQotLS0g
bGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vc2VjdXJpdHkvTWFrZWZpbGUJMTk3
MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L3BsdWdpbi9zZWN1cml0eS9NYWtlZmlsZQkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3NTIyMjM0
OSArMDEwMApAQCAtMCwwICsxLDQgQEAKK29iai0kKENPTkZJR19SRUlTRVI0X0ZTKSArPSBzZWN1
cml0eV9wbHVnaW5zLm8KKworc2VjdXJpdHlfcGx1Z2lucy1vYmpzIDo9CVwKKwlwZXJtLm8KZGlm
ZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVn
aW4vc2VjdXJpdHkvcGVybS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9zZWN1cml0
eS9wZXJtLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3NlY3VyaXR5
L3Blcm0uYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3NlY3VyaXR5L3Blcm0uYwkyMDIwLTAyLTA1IDIwOjUzOjQx
LjQ3NjIyMjM1NiArMDEwMApAQCAtMCwwICsxLDMzIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAw
MiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVB
RE1FICovCisKKy8qCisgKiBUaGlzIGZpbGUgY29udGFpbnMgaW1wbGVtZW50YXRpb24gb2YgcGVy
bWlzc2lvbiBwbHVnaW5zLgorICogU2VlIHRoZSBjb21tZW50cyBpbiBwZXJtLmgKKyAqLworCisj
aW5jbHVkZSAiLi4vcGx1Z2luLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luX2hlYWRlci5oIgorI2lu
Y2x1ZGUgIi4uLy4uL2RlYnVnLmgiCisKK3Blcm1fcGx1Z2luIHBlcm1fcGx1Z2luc1tMQVNUX1BF
Uk1fSURdID0geworCVtOVUxMX1BFUk1fSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0g
UkVJU0VSNF9QRVJNX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gTlVMTF9QRVJNX0lELAorCQkJLnBv
cHMgPSBOVUxMLAorCQkJLmxhYmVsID0gIm51bGwiLAorCQkJLmRlc2MgPSAic3R1YiBwZXJtaXNz
aW9uIHBsdWdpbiIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9CisJfQorfTsKKwor
LyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisg
KiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6IDgK
KyAqIGZpbGwtY29sdW1uOiA3OQorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3NlY3VyaXR5L3Blcm0uaCBs
aW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vc2VjdXJpdHkvcGVybS5oCi0tLSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9zZWN1cml0eS9wZXJtLmgJMTk3MC0wMS0wMSAw
MTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdp
bi9zZWN1cml0eS9wZXJtLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NzYyMjIzNTYgKzAxMDAKQEAg
LTAsMCArMSwzOCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlz
ZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisvKiBQZXJtIChz
aG9ydCBmb3IgInBlcm1pc3Npb25zIikgcGx1Z2lucyBjb21tb24gc3R1ZmYuICovCisKKyNpZiAh
ZGVmaW5lZCggX19SRUlTRVI0X1BFUk1fSF9fICkKKyNkZWZpbmUgX19SRUlTRVI0X1BFUk1fSF9f
CisKKyNpbmNsdWRlICIuLi8uLi9mb3J3YXJkLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luX2hlYWRl
ci5oIgorCisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKworLyogRGVmaW5pdGlvbiBvZiBwZXJt
aXNzaW9uIHBsdWdpbiAqLworLyogTklLSVRBLUZJWE1FLUhBTlM6IGRlZmluZSB3aGF0IHRoaXMg
aXMgdGFyZ2V0ZWQgZm9yLgorICAgSXQgZG9lcyBub3Qgc2VlbSB0byBiZSBpbnRlbmRlZCBmb3Ig
dXNlIHdpdGggc3lzX3JlaXNlcjQuICBFeHBsYWluLiAqLworCisvKiBOT1RFLUVEV0FSRDogVGhp
cyBzZWVtcyB0byBiZSBpbnRlbmRlZCBmb3IgZGVwcmVjYXRlZCBzeXNfcmVpc2VyNC4KKyAgIENv
bnNpZGVyIGl0IGxpa2UgYSB0ZW1wb3JhcnkgInNlYW0iIGFuZCByZXNlcnZlZCBwc2V0IG1lbWJl
ci4KKyAgIElmIHlvdSBoYXZlIHNvbWV0aGluZyB1c2VmdWxsIHRvIGFkZCwgdGhlbiByZW5hbWUg
dGhpcyBwbHVnaW4gYW5kIGFkZCBoZXJlICovCit0eXBlZGVmIHN0cnVjdCBwZXJtX3BsdWdpbiB7
CisJLyogZ2VuZXJpYyBwbHVnaW4gZmllbGRzICovCisJcGx1Z2luX2hlYWRlciBoOworfSBwZXJt
X3BsdWdpbjsKKwordHlwZWRlZiBlbnVtIHsgTlVMTF9QRVJNX0lELCBMQVNUX1BFUk1fSUQgfSBy
ZWlzZXI0X3Blcm1faWQ7CisKKy8qIF9fUkVJU0VSNF9QRVJNX0hfXyAqLworI2VuZGlmCisKKy8q
IE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9u
LXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAor
ICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11
ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9z
cGFjZS9iaXRtYXAuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vc3BhY2UvYml0bWFw
LmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3NwYWNlL2JpdG1hcC5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC9wbHVnaW4vc3BhY2UvYml0bWFwLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40NzYyMjIz
NTYgKzAxMDAKQEAgLTAsMCArMSwxNjA5IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAw
MyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICov
CisKKyNpbmNsdWRlICIuLi8uLi9kZWJ1Zy5oIgorI2luY2x1ZGUgIi4uLy4uL2Rmb3JtYXQuaCIK
KyNpbmNsdWRlICIuLi8uLi90eG5tZ3IuaCIKKyNpbmNsdWRlICIuLi8uLi9qbm9kZS5oIgorI2lu
Y2x1ZGUgIi4uLy4uL2Jsb2NrX2FsbG9jLmgiCisjaW5jbHVkZSAiLi4vLi4vdHJlZS5oIgorI2lu
Y2x1ZGUgIi4uLy4uL3N1cGVyLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luLmgiCisjaW5jbHVkZSAi
c3BhY2VfYWxsb2NhdG9yLmgiCisjaW5jbHVkZSAiYml0bWFwLmgiCisKKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Js
b2NrICAqLworI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+CisjaW5jbHVkZSA8YXNtL2RpdjY0Lmg+
CisKKy8qIFByb3Bvc2VkIChidXQgZGlzY2FyZGVkKSBvcHRpbWl6YXRpb246IGR5bmFtaWMgbG9h
ZGluZy91bmxvYWRpbmcgb2YgYml0bWFwCisgKiBibG9ja3MKKworICAgQSB1c2VmdWwgb3B0aW1p
emF0aW9uIG9mIHJlaXNlcjQgYml0bWFwIGhhbmRsaW5nIHdvdWxkIGJlIGR5bmFtaWMgYml0bWFw
CisgICBibG9ja3MgbG9hZGluZy91bmxvYWRpbmcgd2hpY2ggaXMgZGlmZmVyZW50IGZyb20gdjMu
eCB3aGVyZSBhbGwgYml0bWFwCisgICBibG9ja3MgYXJlIGxvYWRlZCBhdCBtb3VudCB0aW1lLgor
CisgICBUbyBpbXBsZW1lbnQgYml0bWFwIGJsb2NrcyB1bmxvYWRpbmcgd2UgbmVlZCB0byBjb3Vu
dCBiaXRtYXAgYmxvY2sgdXNhZ2UKKyAgIGFuZCBkZXRlY3QgY3VycmVudGx5IHVudXNlZCBibG9j
a3MgYWxsb3dpbmcgdGhlbSB0byBiZSB1bmxvYWRlZC4gSXQgaXMgbm90CisgICBhIHNpbXBsZSB0
YXNrIHNpbmNlIHdlIGFsbG93IHNldmVyYWwgdGhyZWFkcyB0byBtb2RpZnkgb25lIGJpdG1hcCBi
bG9jaworICAgc2ltdWx0YW5lb3VzbHkuCisKKyAgIEJyaWVmbHkgc3BlYWtpbmcsIHRoZSBmb2xs
b3dpbmcgc2NoZW1hIGlzIHByb3Bvc2VkOiB3ZSBjb3VudCBpbiBzcGVjaWFsCisgICB2YXJpYWJs
ZSBhc3NvY2lhdGVkIHdpdGggZWFjaCBiaXRtYXAgYmxvY2suIFRoYXQgaXMgZm9yIGNvdW50aW5n
IG9mIGJsb2NrCisgICBhbGxvYy9kZWFsbG9jIG9wZXJhdGlvbnMgb24gdGhhdCBiaXRtYXAgYmxv
Y2suIFdpdGggYSBkZWZlcnJlZCBibG9jaworICAgZGVhbGxvY2F0aW9uIGZlYXR1cmUgb2YgcmVp
c2VyNCBhbGwgdGhvc2Ugb3BlcmF0aW9uIHdpbGwgYmUgcmVwcmVzZW50ZWQgaW4KKyAgIGF0b20g
ZGlydHkvZGVsZXRlZCBsaXN0cyBhcyBqbm9kZXMgZm9yIGZyZXNobHkgYWxsb2NhdGVkIG9yIGRl
bGV0ZWQKKyAgIG5vZGVzLgorCisgICBTbywgd2UgaW5jcmVtZW50IHVzYWdlIGNvdW50ZXIgZm9y
IGVhY2ggbmV3IG5vZGUgYWxsb2NhdGVkIG9yIGRlbGV0ZWQsIGFuZAorICAgZGVjcmVtZW50IGl0
IGF0IGF0b20gY29tbWl0IG9uZSB0aW1lIGZvciBlYWNoIG5vZGUgZnJvbSB0aGUgZGlydHkvZGVs
ZXRlZAorICAgYXRvbSdzIGxpc3QuICBPZiBjb3Vyc2UsIGZyZXNobHkgYWxsb2NhdGVkIG5vZGUg
ZGVsZXRpb24gYW5kIG5vZGUgcmV1c2luZworICAgZnJvbSBhdG9tIGRlbGV0ZWQgKGlmIHdlIGRv
IHNvKSBsaXN0IHNob3VsZCBkZWNyZW1lbnQgYml0bWFwIHVzYWdlIGNvdW50ZXIKKyAgIGFsc28u
CisKKyAgIFRoaXMgc2NoZW1hIHNlZW1zIHRvIGJlIHdvcmtpbmcgYnV0IHRoYXQgcmVmZXJlbmNl
IGNvdW50aW5nIGlzCisgICBub3QgZWFzeSB0byBkZWJ1Zy4gSSB0aGluayB3ZSBzaG91bGQgYWdy
ZWUgd2l0aCBIYW5zIGFuZCBkbyBub3QgaW1wbGVtZW50CisgICBpdCBpbiB2NC4wLiBDdXJyZW50
IGNvZGUgaW1wbGVtZW50cyAib24tZGVtYW5kIiBiaXRtYXAgYmxvY2tzIGxvYWRpbmcgb25seS4K
KworICAgRm9yIHNpbXBsaWNpdHkgYWxsIGJpdG1hcCBub2RlcyAoYm90aCBjb21taXQgYW5kIHdv
cmtpbmcgYml0bWFwIGJsb2NrcykgYXJlCisgICBsb2FkZWQgaW50byBtZW1vcnkgb24gZnMgbW91
bnQgdGltZSBvciBlYWNoIGJpdG1hcCBub2RlcyBhcmUgbG9hZGVkIGF0IHRoZQorICAgZmlyc3Qg
YWNjZXNzIHRvIGl0LCB0aGUgImRvbnRfbG9hZF9iaXRtYXAiIG1vdW50IG9wdGlvbiBjb250cm9s
cyB3aGV0aGVyCisgICBiaW10YXAgbm9kZXMgc2hvdWxkIGJlIGxvYWRlZCBhdCBtb3VudCB0aW1l
LiBEeW5hbWljIHVubG9hZGluZyBvZiBiaXRtYXAKKyAgIG5vZGVzIGN1cnJlbnRseSBpcyBub3Qg
c3VwcG9ydGVkLiAqLworCisjZGVmaW5lIENIRUNLU1VNX1NJWkUgICAgNAorCisjZGVmaW5lIEJZ
VEVTX1BFUl9MT05HICAgKHNpemVvZihsb25nKSkKKworI2lmIEJJVFNfUEVSX0xPTkcgPT0gNjQK
KyMgIGRlZmluZSBMT05HX0lOVF9TSElGVCAoNikKKyNlbHNlCisjICBkZWZpbmUgTE9OR19JTlRf
U0hJRlQgKDUpCisjZW5kaWYKKworI2RlZmluZSBMT05HX0lOVF9NQVNLIChCSVRTX1BFUl9MT05H
IC0gMVVMKQorCit0eXBlZGVmIHVuc2lnbmVkIGxvbmcgdWxvbmdfdDsKKworI2RlZmluZSBibWFw
X3NpemUoYmxvY2tzaXplKQkgICAgKChibG9ja3NpemUpIC0gQ0hFQ0tTVU1fU0laRSkKKyNkZWZp
bmUgYm1hcF9iaXRfY291bnQoYmxvY2tzaXplKSAgIChibWFwX3NpemUoYmxvY2tzaXplKSA8PCAz
KQorCisvKiBCbG9jayBhbGxvY2F0aW9uL2RlYWxsb2NhdGlvbiBhcmUgZG9uZSB0aHJvdWdoIHNw
ZWNpYWwgYml0bWFwIG9iamVjdHMgd2hpY2gKKyAgIGFyZSBhbGxvY2F0ZWQgaW4gYW4gYXJyYXkg
YXQgZnMgbW91bnQuICovCitzdHJ1Y3QgYml0bWFwX25vZGUgeworCXN0cnVjdCBtdXRleCBtdXRl
eDsJLyogbG9uZyB0ZXJtIGxvY2sgb2JqZWN0ICovCisKKwlqbm9kZSAqd2pub2RlOwkJLyogai1u
b2RlcyBmb3IgV09SS0lORyAuLi4gKi8KKwlqbm9kZSAqY2pub2RlOwkJLyogLi4uIGFuZCBDT01N
SVQgYml0bWFwIGJsb2NrcyAqLworCisJYm1hcF9vZmZfdCBmaXJzdF96ZXJvX2JpdDsJLyogZm9y
IHNraXBfYnVzeSBvcHRpb24gaW1wbGVtZW50YXRpb24gKi8KKworCWF0b21pY190IGxvYWRlZDsJ
LyogYSBmbGFnIHdoaWNoIHNob3dzIHRoYXQgYm5vZGUgaXMgbG9hZGVkCisJCQkJICogYWxyZWFk
eSAqLworfTsKKworc3RhdGljIGlubGluZSBjaGFyICpibm9kZV93b3JraW5nX2RhdGEoc3RydWN0
IGJpdG1hcF9ub2RlICpibm9kZSkKK3sKKwljaGFyICpkYXRhOworCisJZGF0YSA9IGpkYXRhKGJu
b2RlLT53am5vZGUpOworCWFzc2VydCgiemFtLTQyOSIsIGRhdGEgIT0gTlVMTCk7CisKKwlyZXR1
cm4gZGF0YSArIENIRUNLU1VNX1NJWkU7Cit9CisKK3N0YXRpYyBpbmxpbmUgY2hhciAqYm5vZGVf
Y29tbWl0X2RhdGEoY29uc3Qgc3RydWN0IGJpdG1hcF9ub2RlICpibm9kZSkKK3sKKwljaGFyICpk
YXRhOworCisJZGF0YSA9IGpkYXRhKGJub2RlLT5jam5vZGUpOworCWFzc2VydCgiemFtLTQzMCIs
IGRhdGEgIT0gTlVMTCk7CisKKwlyZXR1cm4gZGF0YSArIENIRUNLU1VNX1NJWkU7Cit9CisKK3N0
YXRpYyBpbmxpbmUgX191MzIgYm5vZGVfY29tbWl0X2NyYyhjb25zdCBzdHJ1Y3QgYml0bWFwX25v
ZGUgKmJub2RlKQoreworCWNoYXIgKmRhdGE7CisKKwlkYXRhID0gamRhdGEoYm5vZGUtPmNqbm9k
ZSk7CisJYXNzZXJ0KCJ2cGYtMjYxIiwgZGF0YSAhPSBOVUxMKTsKKworCXJldHVybiBsZTMyX3Rv
X2NwdShnZXRfdW5hbGlnbmVkKChkMzIgKilkYXRhKSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9p
ZCBibm9kZV9zZXRfY29tbWl0X2NyYyhzdHJ1Y3QgYml0bWFwX25vZGUgKmJub2RlLCBfX3UzMiBj
cmMpCit7CisJY2hhciAqZGF0YTsKKworCWRhdGEgPSBqZGF0YShibm9kZS0+Y2pub2RlKTsKKwlh
c3NlcnQoInZwZi0yNjEiLCBkYXRhICE9IE5VTEwpOworCisJcHV0X3VuYWxpZ25lZChjcHVfdG9f
bGUzMihjcmMpLCAoZDMyICopZGF0YSk7Cit9CisKKy8qIFpBTS1GSVhNRS1IQU5TOiBpcyB0aGUg
aWRlYSB0aGF0IHRoaXMgbWlnaHQgYmUgYSB1bmlvbiBzb21lZGF5PyBoYXZpbmcKKyAqIHdyaXR0
ZW4gdGhlIGNvZGUsIGRvZXMgdGhpcyBhZGRlZCBhYnN0cmFjdGlvbiBzdGlsbCBoYXZlICovCisv
KiBBTlNXRVIoWmFtKTogTm8sIHRoZSBhYnN0cmFjdGlvbnMgaXMgaW4gdGhlIGxldmVsIGFib3Zl
IChleGFjdCBwbGFjZSBpcyB0aGUKKyAqIHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yIHN0cnVjdHVy
ZSkgKi8KKy8qIFpBTS1GSVhNRS1IQU5TOiBJIGRvbid0IHVuZGVyc3RhbmQgeW91ciBlbmdsaXNo
IGluIGNvbW1lbnQgYWJvdmUuICovCisvKiBGSVhNRS1IQU5TKFphbSk6IEkgZG9uJ3QgdW5kZXJz
dGFuZCB0aGUgcXVlc3Rpb25zIGxpa2UgIm1pZ2h0IGJlIGEgdW5pb24KKyAqIHNvbWVkYXk/Ii4g
V2hhdCB0aGV5IGFib3V0PyAgSWYgdGhlcmUgaXMgYSByZWFzb24gdG8gaGF2ZSBhIHVuaW9uLCBp
dCBzaG91bGQKKyAqIGJlIGEgdW5pb24sIGlmIG5vdCwgaXQgc2hvdWxkIG5vdCBiZSBhIHVuaW9u
LiAgIi4ubWlnaHQgYmUgc29tZWRheSIgbWVhbnMgbm8KKyAqIHJlYXNvbi4gKi8KK3N0cnVjdCBi
aXRtYXBfYWxsb2NhdG9yX2RhdGEgeworCS8qIGFuIGFycmF5IGZvciBiaXRtYXAgYmxvY2tzIGRp
cmVjdCBhY2Nlc3MgKi8KKwlzdHJ1Y3QgYml0bWFwX25vZGUgKmJpdG1hcDsKK307CisKKyNkZWZp
bmUgZ2V0X2JhcnJheShzdXBlcikgXAorKCgoc3RydWN0IGJpdG1hcF9hbGxvY2F0b3JfZGF0YSAq
KShnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPnNwYWNlX2FsbG9jYXRvci51LmdlbmVyaWMpKSAt
PiBiaXRtYXApCisKKyNkZWZpbmUgZ2V0X2Jub2RlKHN1cGVyLCBpKSAoZ2V0X2JhcnJheShzdXBl
cikgKyBpKQorCisvKiBhbGxvY2F0ZSBhbmQgaW5pdGlhbGl6ZSBqbm9kZSB3aXRoIEpOT0RFX0JJ
VE1BUCB0eXBlICovCitzdGF0aWMgam5vZGUgKmJuZXcodm9pZCkKK3sKKwlqbm9kZSAqamFsID0g
amFsbG9jKCk7CisKKwlpZiAoamFsKQorCQlqbm9kZV9pbml0KGphbCwgY3VycmVudF90cmVlLCBK
Tk9ERV9CSVRNQVApOworCisJcmV0dXJuIGphbDsKK30KKworLyogdGhpcyBmaWxlIGNvbnRhaW5z
OgorICAgLSBiaXRtYXAgYmFzZWQgaW1wbGVtZW50YXRpb24gb2Ygc3BhY2UgYWxsb2NhdGlvbiBw
bHVnaW4KKyAgIC0gYWxsIHRoZSBoZWxwZXIgZnVuY3Rpb25zIGxpa2Ugc2V0IGJpdCwgZmluZF9m
aXJzdF96ZXJvX2JpdCwgZXRjICovCisKKy8qIEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTIp
ICovCitzdGF0aWMgaW50IGZpbmRfbmV4dF96ZXJvX2JpdF9pbl93b3JkKHVsb25nX3Qgd29yZCwg
aW50IHN0YXJ0X2JpdCkKK3sKKwl1bG9uZ190IG1hc2sgPSAxVUwgPDwgc3RhcnRfYml0OworCWlu
dCBpID0gc3RhcnRfYml0OworCisJd2hpbGUgKCh3b3JkICYgbWFzaykgIT0gMCkgeworCQltYXNr
IDw8PSAxOworCQlpZiAoKytpID49IEJJVFNfUEVSX0xPTkcpCisJCQlicmVhazsKKwl9CisKKwly
ZXR1cm4gaTsKK30KKworI2luY2x1ZGUgPGxpbnV4L2JpdG9wcy5oPgorCisjaWYgQklUU19QRVJf
TE9ORyA9PSA2NAorCisjZGVmaW5lIE9GRihhZGRyKSAgKCgodWxvbmdfdCkoYWRkcikgJiAoQllU
RVNfUEVSX0xPTkcgLSAxKSkgPDwgMykKKyNkZWZpbmUgQkFTRShhZGRyKSAoKHVsb25nX3QqKSAo
KHVsb25nX3QpKGFkZHIpICYgfihCWVRFU19QRVJfTE9ORyAtIDEpKSkKKworc3RhdGljIGlubGlu
ZSB2b2lkIHJlaXNlcjRfc2V0X2JpdChpbnQgbnIsIHZvaWQgKmFkZHIpCit7CisJX190ZXN0X2Fu
ZF9zZXRfYml0X2xlKG5yICsgT0ZGKGFkZHIpLCBCQVNFKGFkZHIpKTsKK30KKworc3RhdGljIGlu
bGluZSB2b2lkIHJlaXNlcjRfY2xlYXJfYml0KGludCBuciwgdm9pZCAqYWRkcikKK3sKKwlfX3Rl
c3RfYW5kX2NsZWFyX2JpdF9sZShuciArIE9GRihhZGRyKSwgQkFTRShhZGRyKSk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgaW50IHJlaXNlcjRfdGVzdF9iaXQoaW50IG5yLCB2b2lkICphZGRyKQorewor
CXJldHVybiB0ZXN0X2JpdF9sZShuciArIE9GRihhZGRyKSwgQkFTRShhZGRyKSk7Cit9CitzdGF0
aWMgaW5saW5lIGludCByZWlzZXI0X2ZpbmRfbmV4dF96ZXJvX2JpdCh2b2lkICphZGRyLCBpbnQg
bWF4b2Zmc2V0LAorCQkJCQkgICAgIGludCBvZmZzZXQpCit7CisJaW50IG9mZiA9IE9GRihhZGRy
KTsKKworCXJldHVybiBmaW5kX25leHRfemVyb19iaXRfbGUoQkFTRShhZGRyKSwgbWF4b2Zmc2V0
ICsgb2ZmLAorCQkJCSAgICAgb2Zmc2V0ICsgb2ZmKSAtIG9mZjsKK30KKworI2Vsc2UKKworI2Rl
ZmluZSByZWlzZXI0X3NldF9iaXQobnIsIGFkZHIpICAgIF9fdGVzdF9hbmRfc2V0X2JpdF9sZShu
ciwgYWRkcikKKyNkZWZpbmUgcmVpc2VyNF9jbGVhcl9iaXQobnIsIGFkZHIpICBfX3Rlc3RfYW5k
X2NsZWFyX2JpdF9sZShuciwgYWRkcikKKyNkZWZpbmUgcmVpc2VyNF90ZXN0X2JpdChuciwgYWRk
cikgIHRlc3RfYml0X2xlKG5yLCBhZGRyKQorCisjZGVmaW5lIHJlaXNlcjRfZmluZF9uZXh0X3pl
cm9fYml0KGFkZHIsIG1heG9mZnNldCwgb2Zmc2V0KSBcCitmaW5kX25leHRfemVyb19iaXRfbGUo
YWRkciwgbWF4b2Zmc2V0LCBvZmZzZXQpCisjZW5kaWYKKworLyogU2VhcmNoIGZvciBhIHNldCBi
aXQgaW4gdGhlIGJpdCBhcnJheSBbQHN0YXJ0X29mZnNldCwgQG1heF9vZmZzZXRbLCBvZmZzZXRz
CisgKiBhcmUgY291bnRlZCBmcm9tIEBhZGRyLCByZXR1cm4gdGhlIG9mZnNldCBvZiB0aGUgZmly
c3QgYml0IGlmIGl0IGlzIGZvdW5kLAorICogQG1heG9mZnNldCBvdGhlcndpc2UuICovCitzdGF0
aWMgYm1hcF9vZmZfdCBfX3JlaXNlcjRfZmluZF9uZXh0X3NldF9iaXQodm9pZCAqYWRkciwgYm1h
cF9vZmZfdCBtYXhfb2Zmc2V0LAorCQkJCQkgICAgICBibWFwX29mZl90IHN0YXJ0X29mZnNldCkK
K3sKKwl1bG9uZ190ICpiYXNlID0gYWRkcjsKKwkvKiBzdGFydF9vZmZzZXQgaXMgaW4gYml0cywg
Y29udmVydCBpdCB0byBieXRlIG9mZnNldCB3aXRoaW4gYml0bWFwLiAqLworCWludCB3b3JkX25y
ID0gc3RhcnRfb2Zmc2V0ID4+IExPTkdfSU5UX1NISUZUOworCS8qIGJpdCBudW1iZXIgd2l0aGlu
IHRoZSBieXRlLiAqLworCWludCBiaXRfbnIgPSBzdGFydF9vZmZzZXQgJiBMT05HX0lOVF9NQVNL
OworCWludCBtYXhfd29yZF9uciA9IChtYXhfb2Zmc2V0IC0gMSkgPj4gTE9OR19JTlRfU0hJRlQ7
CisKKwlhc3NlcnQoInphbS0zODciLCBtYXhfb2Zmc2V0ICE9IDApOworCisJLyogVW5hbGlnbmVk
IEBzdGFydF9vZmZzZXQgY2FzZS4gICovCisJaWYgKGJpdF9uciAhPSAwKSB7CisJCWJtYXBfbnJf
dCBucjsKKworCQluciA9IGZpbmRfbmV4dF96ZXJvX2JpdF9pbl93b3JkKH4oYmFzZVt3b3JkX25y
XSksIGJpdF9ucik7CisKKwkJaWYgKG5yIDwgQklUU19QRVJfTE9ORykKKwkJCXJldHVybiAod29y
ZF9uciA8PCBMT05HX0lOVF9TSElGVCkgKyBucjsKKworCQkrK3dvcmRfbnI7CisJfQorCisJLyog
RmFzdCBzY2FuIHRyb3VnaCBhbGlnbmVkIHdvcmRzLiAqLworCXdoaWxlICh3b3JkX25yIDw9IG1h
eF93b3JkX25yKSB7CisJCWlmIChiYXNlW3dvcmRfbnJdICE9IDApIHsKKwkJCXJldHVybiAod29y
ZF9uciA8PCBMT05HX0lOVF9TSElGVCkKKwkJCSAgICArIGZpbmRfbmV4dF96ZXJvX2JpdF9pbl93
b3JkKH4oYmFzZVt3b3JkX25yXSksIDApOworCQl9CisKKwkJKyt3b3JkX25yOworCX0KKworCXJl
dHVybiBtYXhfb2Zmc2V0OworfQorCisjaWYgQklUU19QRVJfTE9ORyA9PSA2NAorCitzdGF0aWMg
Ym1hcF9vZmZfdCByZWlzZXI0X2ZpbmRfbmV4dF9zZXRfYml0KHZvaWQgKmFkZHIsIGJtYXBfb2Zm
X3QgbWF4X29mZnNldCwKKwkJCQkJICAgIGJtYXBfb2ZmX3Qgc3RhcnRfb2Zmc2V0KQoreworCWJt
YXBfb2ZmX3Qgb2ZmID0gT0ZGKGFkZHIpOworCisJcmV0dXJuIF9fcmVpc2VyNF9maW5kX25leHRf
c2V0X2JpdChCQVNFKGFkZHIpLCBtYXhfb2Zmc2V0ICsgb2ZmLAorCQkJCQkgICBzdGFydF9vZmZz
ZXQgKyBvZmYpIC0gb2ZmOworfQorCisjZWxzZQorI2RlZmluZSByZWlzZXI0X2ZpbmRfbmV4dF9z
ZXRfYml0KGFkZHIsIG1heF9vZmZzZXQsIHN0YXJ0X29mZnNldCkgXAorICBfX3JlaXNlcjRfZmlu
ZF9uZXh0X3NldF9iaXQoYWRkciwgbWF4X29mZnNldCwgc3RhcnRfb2Zmc2V0KQorI2VuZGlmCisK
Ky8qIHNlYXJjaCBmb3IgdGhlIGZpcnN0IHNldCBiaXQgaW4gc2luZ2xlIHdvcmQuICovCitzdGF0
aWMgaW50IGZpbmRfbGFzdF9zZXRfYml0X2luX3dvcmQodWxvbmdfdCB3b3JkLCBpbnQgc3RhcnRf
Yml0KQoreworCXVsb25nX3QgYml0X21hc2s7CisJaW50IG5yID0gc3RhcnRfYml0OworCisJYXNz
ZXJ0KCJ6YW0tOTY1Iiwgc3RhcnRfYml0IDwgQklUU19QRVJfTE9ORyk7CisJYXNzZXJ0KCJ6YW0t
OTY2Iiwgc3RhcnRfYml0ID49IDApOworCisJYml0X21hc2sgPSAoMVVMIDw8IG5yKTsKKworCXdo
aWxlIChiaXRfbWFzayAhPSAwKSB7CisJCWlmIChiaXRfbWFzayAmIHdvcmQpCisJCQlyZXR1cm4g
bnI7CisJCWJpdF9tYXNrID4+PSAxOworCQluci0tOworCX0KKwlyZXR1cm4gQklUU19QRVJfTE9O
RzsKK30KKworLyogU2VhcmNoIGJpdG1hcCBmb3IgYSBzZXQgYml0IGluIGJhY2t3YXJkIGRpcmVj
dGlvbiBmcm9tIHRoZSBlbmQgdG8gdGhlCisgKiBiZWdpbm5pbmcgb2YgZ2l2ZW4gcmVnaW9uCisg
KgorICogQHJlc3VsdDogcmVzdWx0IG9mZnNldCBvZiB0aGUgbGFzdCBzZXQgYml0CisgKiBAYWRk
cjogICBiYXNlIG1lbW9yeSBhZGRyZXNzLAorICogQGxvd19vZmY6ICBsb3cgZW5kIG9mIHRoZSBz
ZWFyY2ggcmVnaW9uLCBlZGdlIGJpdCBpbmNsdWRlZCBpbnRvIHRoZSByZWdpb24sCisgKiBAaGln
aF9vZmY6IGhpZ2ggZW5kIG9mIHRoZSBzZWFyY2ggcmVnaW9uLCBlZGdlIGJpdCBpbmNsdWRlZCBp
bnRvIHRoZSByZWdpb24sCisgKgorICogQHJldHVybjogMCAtIHNldCBiaXQgd2FzIGZvdW5kLCAt
MSBvdGhlcndpc2UuCisgKi8KK3N0YXRpYyBpbnQKK3JlaXNlcjRfZmluZF9sYXN0X3NldF9iaXQo
Ym1hcF9vZmZfdCAqIHJlc3VsdCwgdm9pZCAqYWRkciwgYm1hcF9vZmZfdCBsb3dfb2ZmLAorCQkJ
ICBibWFwX29mZl90IGhpZ2hfb2ZmKQoreworCXVsb25nX3QgKmJhc2UgPSBhZGRyOworCWludCBs
YXN0X3dvcmQ7CisJaW50IGZpcnN0X3dvcmQ7CisJaW50IGxhc3RfYml0OworCWludCBucjsKKwor
CWFzc2VydCgiemFtLTk2MiIsIGhpZ2hfb2ZmID49IGxvd19vZmYpOworCisJbGFzdF93b3JkID0g
aGlnaF9vZmYgPj4gTE9OR19JTlRfU0hJRlQ7CisJbGFzdF9iaXQgPSBoaWdoX29mZiAmIExPTkdf
SU5UX01BU0s7CisJZmlyc3Rfd29yZCA9IGxvd19vZmYgPj4gTE9OR19JTlRfU0hJRlQ7CisKKwlp
ZiAobGFzdF9iaXQgPCBCSVRTX1BFUl9MT05HKSB7CisJCW5yID0gZmluZF9sYXN0X3NldF9iaXRf
aW5fd29yZChiYXNlW2xhc3Rfd29yZF0sIGxhc3RfYml0KTsKKwkJaWYgKG5yIDwgQklUU19QRVJf
TE9ORykgeworCQkJKnJlc3VsdCA9IChsYXN0X3dvcmQgPDwgTE9OR19JTlRfU0hJRlQpICsgbnI7
CisJCQlyZXR1cm4gMDsKKwkJfQorCQktLWxhc3Rfd29yZDsKKwl9CisJd2hpbGUgKGxhc3Rfd29y
ZCA+PSBmaXJzdF93b3JkKSB7CisJCWlmIChiYXNlW2xhc3Rfd29yZF0gIT0gMHgwKSB7CisJCQls
YXN0X2JpdCA9CisJCQkgICAgZmluZF9sYXN0X3NldF9iaXRfaW5fd29yZChiYXNlW2xhc3Rfd29y
ZF0sCisJCQkJCQkgICAgICBCSVRTX1BFUl9MT05HIC0gMSk7CisJCQlhc3NlcnQoInphbS05NzIi
LCBsYXN0X2JpdCA8IEJJVFNfUEVSX0xPTkcpOworCQkJKnJlc3VsdCA9IChsYXN0X3dvcmQgPDwg
TE9OR19JTlRfU0hJRlQpICsgbGFzdF9iaXQ7CisJCQlyZXR1cm4gMDsKKwkJfQorCQktLWxhc3Rf
d29yZDsKKwl9CisKKwlyZXR1cm4gLTE7CQkvKiBzZXQgYml0IG5vdCBmb3VuZCAqLworfQorCisv
KiBTZWFyY2ggYml0bWFwIGZvciBhIGNsZWFyIGJpdCBpbiBiYWNrd2FyZCBkaXJlY3Rpb24gZnJv
bSB0aGUgZW5kIHRvIHRoZQorICogYmVnaW5uaW5nIG9mIGdpdmVuIHJlZ2lvbiAqLworc3RhdGlj
IGludAorcmVpc2VyNF9maW5kX2xhc3RfemVyb19iaXQoYm1hcF9vZmZfdCAqIHJlc3VsdCwgdm9p
ZCAqYWRkciwgYm1hcF9vZmZfdCBsb3dfb2ZmLAorCQkJICAgYm1hcF9vZmZfdCBoaWdoX29mZikK
K3sKKwl1bG9uZ190ICpiYXNlID0gYWRkcjsKKwlpbnQgbGFzdF93b3JkOworCWludCBmaXJzdF93
b3JkOworCWludCBsYXN0X2JpdDsKKwlpbnQgbnI7CisKKwlsYXN0X3dvcmQgPSBoaWdoX29mZiA+
PiBMT05HX0lOVF9TSElGVDsKKwlsYXN0X2JpdCA9IGhpZ2hfb2ZmICYgTE9OR19JTlRfTUFTSzsK
KwlmaXJzdF93b3JkID0gbG93X29mZiA+PiBMT05HX0lOVF9TSElGVDsKKworCWlmIChsYXN0X2Jp
dCA8IEJJVFNfUEVSX0xPTkcpIHsKKwkJbnIgPSBmaW5kX2xhc3Rfc2V0X2JpdF9pbl93b3JkKH5i
YXNlW2xhc3Rfd29yZF0sIGxhc3RfYml0KTsKKwkJaWYgKG5yIDwgQklUU19QRVJfTE9ORykgewor
CQkJKnJlc3VsdCA9IChsYXN0X3dvcmQgPDwgTE9OR19JTlRfU0hJRlQpICsgbnI7CisJCQlyZXR1
cm4gMDsKKwkJfQorCQktLWxhc3Rfd29yZDsKKwl9CisJd2hpbGUgKGxhc3Rfd29yZCA+PSBmaXJz
dF93b3JkKSB7CisJCWlmIChiYXNlW2xhc3Rfd29yZF0gIT0gKHVsb25nX3QpICgtMSkpIHsKKwkJ
CSpyZXN1bHQgPSAobGFzdF93b3JkIDw8IExPTkdfSU5UX1NISUZUKSArCisJCQkgICAgZmluZF9s
YXN0X3NldF9iaXRfaW5fd29yZCh+YmFzZVtsYXN0X3dvcmRdLAorCQkJCQkJICAgICAgQklUU19Q
RVJfTE9ORyAtIDEpOworCQkJcmV0dXJuIDA7CisJCX0KKwkJLS1sYXN0X3dvcmQ7CisJfQorCisJ
cmV0dXJuIC0xOwkJLyogemVybyBiaXQgbm90IGZvdW5kICovCit9CisKKy8qIEF1ZGl0ZWQgYnk6
IGdyZWVuKDIwMDIuMDYuMTIpICovCitzdGF0aWMgdm9pZCByZWlzZXI0X2NsZWFyX2JpdHMoY2hh
ciAqYWRkciwgYm1hcF9vZmZfdCBzdGFydCwgYm1hcF9vZmZfdCBlbmQpCit7CisJaW50IGZpcnN0
X2J5dGU7CisJaW50IGxhc3RfYnl0ZTsKKworCXVuc2lnbmVkIGNoYXIgZmlyc3RfYnl0ZV9tYXNr
ID0gMHhGRjsKKwl1bnNpZ25lZCBjaGFyIGxhc3RfYnl0ZV9tYXNrID0gMHhGRjsKKworCWFzc2Vy
dCgiemFtLTQxMCIsIHN0YXJ0IDwgZW5kKTsKKworCWZpcnN0X2J5dGUgPSBzdGFydCA+PiAzOwor
CWxhc3RfYnl0ZSA9IChlbmQgLSAxKSA+PiAzOworCisJaWYgKGxhc3RfYnl0ZSA+IGZpcnN0X2J5
dGUgKyAxKQorCQltZW1zZXQoYWRkciArIGZpcnN0X2J5dGUgKyAxLCAwLAorCQkgICAgICAgKHNp
emVfdCkgKGxhc3RfYnl0ZSAtIGZpcnN0X2J5dGUgLSAxKSk7CisKKwlmaXJzdF9ieXRlX21hc2sg
Pj49IDggLSAoc3RhcnQgJiAweDcpOworCWxhc3RfYnl0ZV9tYXNrIDw8PSAoKGVuZCAtIDEpICYg
MHg3KSArIDE7CisKKwlpZiAoZmlyc3RfYnl0ZSA9PSBsYXN0X2J5dGUpIHsKKwkJYWRkcltmaXJz
dF9ieXRlXSAmPSAoZmlyc3RfYnl0ZV9tYXNrIHwgbGFzdF9ieXRlX21hc2spOworCX0gZWxzZSB7
CisJCWFkZHJbZmlyc3RfYnl0ZV0gJj0gZmlyc3RfYnl0ZV9tYXNrOworCQlhZGRyW2xhc3RfYnl0
ZV0gJj0gbGFzdF9ieXRlX21hc2s7CisJfQorfQorCisvKiBBdWRpdGVkIGJ5OiBncmVlbigyMDAy
LjA2LjEyKSAqLworLyogWkFNLUZJWE1FLUhBTlM6IGNvbW1lbnQgdGhpcyAqLworc3RhdGljIHZv
aWQgcmVpc2VyNF9zZXRfYml0cyhjaGFyICphZGRyLCBibWFwX29mZl90IHN0YXJ0LCBibWFwX29m
Zl90IGVuZCkKK3sKKwlpbnQgZmlyc3RfYnl0ZTsKKwlpbnQgbGFzdF9ieXRlOworCisJdW5zaWdu
ZWQgY2hhciBmaXJzdF9ieXRlX21hc2sgPSAweEZGOworCXVuc2lnbmVkIGNoYXIgbGFzdF9ieXRl
X21hc2sgPSAweEZGOworCisJYXNzZXJ0KCJ6YW0tMzg2Iiwgc3RhcnQgPCBlbmQpOworCisJZmly
c3RfYnl0ZSA9IHN0YXJ0ID4+IDM7CisJbGFzdF9ieXRlID0gKGVuZCAtIDEpID4+IDM7CisKKwlp
ZiAobGFzdF9ieXRlID4gZmlyc3RfYnl0ZSArIDEpCisJCW1lbXNldChhZGRyICsgZmlyc3RfYnl0
ZSArIDEsIDB4RkYsCisJCSAgICAgICAoc2l6ZV90KSAobGFzdF9ieXRlIC0gZmlyc3RfYnl0ZSAt
IDEpKTsKKworCWZpcnN0X2J5dGVfbWFzayA8PD0gc3RhcnQgJiAweDc7CisJbGFzdF9ieXRlX21h
c2sgPj49IDcgLSAoKGVuZCAtIDEpICYgMHg3KTsKKworCWlmIChmaXJzdF9ieXRlID09IGxhc3Rf
Ynl0ZSkgeworCQlhZGRyW2ZpcnN0X2J5dGVdIHw9IChmaXJzdF9ieXRlX21hc2sgJiBsYXN0X2J5
dGVfbWFzayk7CisJfSBlbHNlIHsKKwkJYWRkcltmaXJzdF9ieXRlXSB8PSBmaXJzdF9ieXRlX21h
c2s7CisJCWFkZHJbbGFzdF9ieXRlXSB8PSBsYXN0X2J5dGVfbWFzazsKKwl9Cit9CisKKyNkZWZp
bmUgQURMRVJfQkFTRSAgICA2NTUyMQorI2RlZmluZSBBRExFUl9OTUFYICAgIDU1NTIKKworLyog
Q2FsY3VsYXRlcyB0aGUgYWRsZXIzMiBjaGVja3N1bSBmb3IgdGhlIGRhdGEgcG9pbnRlZCBieSBg
ZGF0YWAgb2YgdGhlCisgICAgbGVuZ3RoIGBsZW5gLiBUaGlzIGZ1bmN0aW9uIHdhcyBvcmlnaW5h
bGx5IHRha2VuIGZyb20gemxpYiwgdmVyc2lvbiAxLjEuMywKKyAgICBKdWx5IDl0aCwgMTk5OC4K
KworICAgIENvcHlyaWdodCAoQykgMTk5NS0xOTk4IEplYW4tbG91cCBHYWlsbHkgYW5kIE1hcmsg
QWRsZXIKKworICAgIFRoaXMgc29mdHdhcmUgaXMgcHJvdmlkZWQgJ2FzLWlzJywgd2l0aG91dCBh
bnkgZXhwcmVzcyBvciBpbXBsaWVkCisgICAgd2FycmFudHkuICBJbiBubyBldmVudCB3aWxsIHRo
ZSBhdXRob3JzIGJlIGhlbGQgbGlhYmxlIGZvciBhbnkgZGFtYWdlcworICAgIGFyaXNpbmcgZnJv
bSB0aGUgdXNlIG9mIHRoaXMgc29mdHdhcmUuCisKKyAgICBQZXJtaXNzaW9uIGlzIGdyYW50ZWQg
dG8gYW55b25lIHRvIHVzZSB0aGlzIHNvZnR3YXJlIGZvciBhbnkgcHVycG9zZSwKKyAgICBpbmNs
dWRpbmcgY29tbWVyY2lhbCBhcHBsaWNhdGlvbnMsIGFuZCB0byBhbHRlciBpdCBhbmQgcmVkaXN0
cmlidXRlIGl0CisgICAgZnJlZWx5LCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgcmVzdHJpY3Rp
b25zOgorCisgICAgMS4gVGhlIG9yaWdpbiBvZiB0aGlzIHNvZnR3YXJlIG11c3Qgbm90IGJlIG1p
c3JlcHJlc2VudGVkOyB5b3UgbXVzdCBub3QKKwljbGFpbSB0aGF0IHlvdSB3cm90ZSB0aGUgb3Jp
Z2luYWwgc29mdHdhcmUuIElmIHlvdSB1c2UgdGhpcyBzb2Z0d2FyZQorCWluIGEgcHJvZHVjdCwg
YW4gYWNrbm93bGVkZ21lbnQgaW4gdGhlIHByb2R1Y3QgZG9jdW1lbnRhdGlvbiB3b3VsZCBiZQor
CWFwcHJlY2lhdGVkIGJ1dCBpcyBub3QgcmVxdWlyZWQuCisgICAgMi4gQWx0ZXJlZCBzb3VyY2Ug
dmVyc2lvbnMgbXVzdCBiZSBwbGFpbmx5IG1hcmtlZCBhcyBzdWNoLCBhbmQgbXVzdCBub3QgYmUK
KwltaXNyZXByZXNlbnRlZCBhcyBiZWluZyB0aGUgb3JpZ2luYWwgc29mdHdhcmUuCisgICAgMy4g
VGhpcyBub3RpY2UgbWF5IG5vdCBiZSByZW1vdmVkIG9yIGFsdGVyZWQgZnJvbSBhbnkgc291cmNl
IGRpc3RyaWJ1dGlvbi4KKworICAgIEplYW4tbG91cCBHYWlsbHkgICAgICAgIE1hcmsgQWRsZXIK
KyAgICBqbG91cEBnemlwLm9yZyAgICAgICAgICBtYWRsZXJAYWx1bW5pLmNhbHRlY2guZWR1CisK
KyAgICBUaGUgYWJvdmUgY29tbWVudCBhcHBsaWVzIG9ubHkgdG8gdGhlIHJlaXNlcjRfYWRsZXIz
MiBmdW5jdGlvbi4KKyovCisKK19fdTMyIHJlaXNlcjRfYWRsZXIzMihjaGFyICpkYXRhLCBfX3Uz
MiBsZW4pCit7CisJdW5zaWduZWQgY2hhciAqdCA9IGRhdGE7CisJX191MzIgczEgPSAxOworCV9f
dTMyIHMyID0gMDsKKwlpbnQgazsKKworCXdoaWxlIChsZW4gPiAwKSB7CisJCWsgPSBsZW4gPCBB
RExFUl9OTUFYID8gbGVuIDogQURMRVJfTk1BWDsKKwkJbGVuIC09IGs7CisKKwkJd2hpbGUgKGst
LSkgeworCQkJczEgKz0gKnQrKzsKKwkJCXMyICs9IHMxOworCQl9CisKKwkJczEgJT0gQURMRVJf
QkFTRTsKKwkJczIgJT0gQURMRVJfQkFTRTsKKwl9CisJcmV0dXJuIChzMiA8PCAxNikgfCBzMTsK
K30KKworI2RlZmluZSBzYl9ieV9ibm9kZShibm9kZSkgXAorCSgoc3RydWN0IHN1cGVyX2Jsb2Nr
ICopam5vZGVfZ2V0X3RyZWUoYm5vZGUtPndqbm9kZSktPnN1cGVyKQorCitzdGF0aWMgX191MzIg
Ym5vZGVfY2FsY19jcmMoY29uc3Qgc3RydWN0IGJpdG1hcF9ub2RlICpibm9kZSwgdW5zaWduZWQg
bG9uZyBzaXplKQoreworCXJldHVybiByZWlzZXI0X2FkbGVyMzIoYm5vZGVfY29tbWl0X2RhdGEo
Ym5vZGUpLCBibWFwX3NpemUoc2l6ZSkpOworfQorCitzdGF0aWMgaW50Citibm9kZV9jaGVja19h
ZGxlcjMyKGNvbnN0IHN0cnVjdCBiaXRtYXBfbm9kZSAqYm5vZGUsIHVuc2lnbmVkIGxvbmcgc2l6
ZSkKK3sKKwlpZiAoYm5vZGVfY2FsY19jcmMoYm5vZGUsIHNpemUpICE9IGJub2RlX2NvbW1pdF9j
cmMoYm5vZGUpKSB7CisJCWJtYXBfbnJfdCBibWFwOworCisJCWJtYXAgPSBibm9kZSAtIGdldF9i
bm9kZShzYl9ieV9ibm9kZShibm9kZSksIDApOworCisJCXdhcm5pbmcoInZwZi0yNjMiLAorCQkJ
IkNoZWNrc3VtIGZvciB0aGUgYml0bWFwIGJsb2NrICVsbHUgaXMgaW5jb3JyZWN0IiwKKwkJCWJt
YXApOworCisJCXJldHVybiBSRVRFUlIoLUVJTyk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKyNk
ZWZpbmUgUkVJU0VSNF9DSEVDS19CTUFQX0NSQyAoMCkKKworI2lmIFJFSVNFUjRfQ0hFQ0tfQk1B
UF9DUkMKK3N0YXRpYyBpbnQgYm5vZGVfY2hlY2tfY3JjKGNvbnN0IHN0cnVjdCBiaXRtYXBfbm9k
ZSAqYm5vZGUpCit7CisJcmV0dXJuIGJub2RlX2NoZWNrX2FkbGVyMzIoYm5vZGUsCisJCQkJICAg
Ym1hcF9zaXplKHNiX2J5X2Jub2RlKGJub2RlKS0+c19ibG9ja3NpemUpKTsKK30KKworLyogUkVJ
U0VSNF9DSEVDS19CTUFQX0NSQyAqLworI2Vsc2UKKworI2RlZmluZSBibm9kZV9jaGVja19jcmMo
Ym5vZGUpICgwKQorCisvKiBSRUlTRVI0X0NIRUNLX0JNQVBfQ1JDICovCisjZW5kaWYKKworLyog
UmVjYWxjdWxhdGVzIHRoZSBhZGxlcjMyIGNoZWNrc3VtIGZvciBvbmx5IDEgYnl0ZSBjaGFuZ2Uu
CisgICAgYWRsZXIgLSBwcmV2aW91cyBhZGxlciBjaGVja3N1bQorICAgIG9sZF9kYXRhLCBkYXRh
IC0gb2xkLCBuZXcgYnl0ZSB2YWx1ZXMuCisgICAgdGFpbCA9PSAoY2h1bmsgLSBvZmZzZXQpIDog
bGVuZ3RoLCBjaGVja3N1bSB3YXMgY2FsY3VsYXRlZCBmb3IsIC0gb2Zmc2V0IG9mCisgICAgdGhl
IGNoYW5nZWQgYnl0ZSB3aXRoaW4gdGhpcyBjaHVuay4KKyAgICBUaGlzIGZ1bmN0aW9uIGNhbiBi
ZSB1c2VkIGZvciBjaGVja3N1bSBjYWxjdWxhdGlvbiBvcHRpbWlzYXRpb24uCisqLworCitzdGF0
aWMgX191MzIKK2FkbGVyMzJfcmVjYWxjKF9fdTMyIGFkbGVyLCB1bnNpZ25lZCBjaGFyIG9sZF9k
YXRhLCB1bnNpZ25lZCBjaGFyIGRhdGEsCisJICAgICAgIF9fdTMyIHRhaWwpCit7CisJX191MzIg
ZGVsdGEgPSBkYXRhIC0gb2xkX2RhdGEgKyAyICogQURMRVJfQkFTRTsKKwlfX3UzMiBzMSA9IGFk
bGVyICYgMHhmZmZmOworCV9fdTMyIHMyID0gKGFkbGVyID4+IDE2KSAmIDB4ZmZmZjsKKworCXMx
ID0gKGRlbHRhICsgczEpICUgQURMRVJfQkFTRTsKKwlzMiA9IChkZWx0YSAqIHRhaWwgKyBzMikg
JSBBRExFUl9CQVNFOworCisJcmV0dXJuIChzMiA8PCAxNikgfCBzMTsKK30KKworI2RlZmluZSBM
SU1JVCh2YWwsIGJvdW5kYXJ5KSAoKHZhbCkgPiAoYm91bmRhcnkpID8gKGJvdW5kYXJ5KSA6ICh2
YWwpKQorCisvKioKKyAqIGdldF9ucl9iaXRtYXAgLSBjYWxjdWxhdGUgbnVtYmVyIG9mIGJpdG1h
cCBibG9ja3MKKyAqIEBzdXBlcjogc3VwZXIgYmxvY2sgd2l0aCBpbml0aWFsaXplZCBibG9ja3Np
emUgYW5kIGJsb2NrIGNvdW50CisgKgorICogQ2FsY3VsYXRlcyBudW1iZXIgb2YgYml0bWFwIGJs
b2NrcyBvZiBhIGZpbGVzeXN0ZW0gd2hpY2ggdXNlcyBiaXRtYXBzIHRvCisgKiBtYWludGFpbiBm
cmVlIGRpc2sgc3BhY2UuIEl0IGFzc3VtZXMgdGhhdCBlYWNoIGJpdG1hcCBhZGRyZXNzZXMgdGhl
IHNhbWUKKyAqIG51bWJlciBvZiBibG9ja3Mgd2hpY2ggaXMgY2FsY3VsYXRlZCBieSBibWFwX2Js
b2NrX2NvdW50IG1hY3JvIGRlZmluZWQgaW4KKyAqIGFib3ZlLiBOdW1iZXIgb2YgYmxvY2tzIGlu
IHRoZSBmaWxlc3lzdGVtIGhhcyB0byBiZSBpbml0aWFsaXplZCBpbiByZWlzZXI0CisgKiBwcml2
YXRlIGRhdGEgb2Ygc3VwZXIgYmxvY2sgYWxyZWFkeSBzbyB0aGF0IGl0IGNhbiBiZSBvYnRhaW5l
ZCB2aWEKKyAqIHJlaXNlcjRfYmxvY2tfY291bnQoKS4gVW5mb3J0dW5hdGVseSwgbnVtYmVyIG9m
IGJsb2NrcyBhZGRyZXNzZWQgYnkgYSBiaXRtYXAKKyAqIGlzIG5vdCBwb3dlciBvZiAyIGJlY2F1
c2UgNCBieXRlcyBhcmUgdXNlZCBmb3IgY2hlY2tzdW0uIFRoZXJlZm9yZSwgd2UgaGF2ZQorICog
dG8gdXNlIHNwZWNpYWwgZnVuY3Rpb24gdG8gZGl2aWRlIGFuZCBtb2R1bG8gNjRiaXRzIGZpbGVz
eXN0ZW0gYmxvY2sKKyAqIGNvdW50ZXJzLgorICoKKyAqIEV4YW1wbGU6IHN1cHBvc2UgZmlsZXN5
c3RlbSBoYXZlIDMyNzY4IGJsb2Nrcy4gQmxvY2tzaXplIGlzIDQwOTYuIEVhY2ggYml0bWFwCisg
KiBibG9jayBhZGRyZXNzZXMgKDQwOTYgLSA0KSAqIDggPSAzMjczNiBibG9ja3MuIE51bWJlciBv
ZiBiaXRtYXBzIHRvIGFkZHJlc3MKKyAqIGFsbCAzMjc2OCBibG9ja3MgaXMgY2FsY3VsYXRlZCBh
cyAoMzI3NjggLSAxKSAvIDMyNzM2ICsgMSA9IDIuCisgKi8KK3N0YXRpYyBibWFwX25yX3QgZ2V0
X25yX2JtYXAoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwl1NjQgcXVvdGll
bnQ7CisKKwlhc3NlcnQoInphbS0zOTMiLCByZWlzZXI0X2Jsb2NrX2NvdW50KHN1cGVyKSAhPSAw
KTsKKworCXF1b3RpZW50ID0gcmVpc2VyNF9ibG9ja19jb3VudChzdXBlcikgLSAxOworCWRvX2Rp
dihxdW90aWVudCwgYm1hcF9iaXRfY291bnQoc3VwZXItPnNfYmxvY2tzaXplKSk7CisJcmV0dXJu
IHF1b3RpZW50ICsgMTsKK30KKworLyoqCisgKiBwYXJzZV9ibG9ja25yIC0gY2FsY3VsYXRlIGJp
dG1hcCBudW1iZXIgYW5kIG9mZnNldCBpbiBpdCBieSBibG9jayBudW1iZXIKKyAqIEBibG9jazog
cG9pbnRlciB0byBibG9jayBudW1iZXIgdG8gY2FsY3VsYXRlIGxvY2F0aW9uIGluIGJpdG1hcCBv
ZgorICogQGJtYXA6IHBvaW50ZXIgd2hlcmUgdG8gc3RvcmUgYml0bWFwIGJsb2NrIG51bWJlcgor
ICogQG9mZnNldDogcG9pbnRlciB3aGVyZSB0byBzdG9yZSBvZmZzZXQgd2l0aGluIGJpdG1hcCBi
bG9jaworICoKKyAqIENhbGN1bGF0ZXMgbG9jYXRpb24gb2YgYml0IHdoaWNoIGlzIHJlc3BvbnNp
YmxlIGZvciBhbGxvY2F0aW9uL2ZyZWVpbmcgb2YKKyAqIGJsb2NrIEAqYmxvY2suIFRoYXQgbG9j
YXRpb24gaXMgcmVwcmVzZW50ZWQgYnkgYml0bWFwIGJsb2NrIG51bWJlciBhbmQgb2Zmc2V0Cisg
KiB3aXRoaW4gdGhhdCBiaXRtYXAgYmxvY2suCisgKi8KK3N0YXRpYyB2b2lkCitwYXJzZV9ibG9j
a25yKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKmJsb2NrLCBibWFwX25yX3QgKmJtYXAsCisJICAg
ICAgYm1hcF9vZmZfdCAqb2Zmc2V0KQoreworCXN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIgPSBn
ZXRfY3VycmVudF9jb250ZXh0KCktPnN1cGVyOworCXU2NCBxdW90aWVudCA9ICpibG9jazsKKwor
CSpvZmZzZXQgPSBkb19kaXYocXVvdGllbnQsIGJtYXBfYml0X2NvdW50KHN1cGVyLT5zX2Jsb2Nr
c2l6ZSkpOworCSpibWFwID0gcXVvdGllbnQ7CisKKwlhc3NlcnQoInphbS00MzMiLCAqYm1hcCA8
IGdldF9ucl9ibWFwKHN1cGVyKSk7CisJYXNzZXJ0KCIiLCAqb2Zmc2V0IDwgYm1hcF9iaXRfY291
bnQoc3VwZXItPnNfYmxvY2tzaXplKSk7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiBBdWRp
dGVkIGJ5OiBncmVlbigyMDAyLjA2LjEyKSAqLworc3RhdGljIHZvaWQKK2NoZWNrX2Jsb2NrX3Jh
bmdlKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBzdGFydCwgY29uc3QgcmVpc2VyNF9ibG9ja19u
ciAqIGxlbikKK3sKKwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gcmVpc2VyNF9nZXRfY3VycmVu
dF9zYigpOworCisJYXNzZXJ0KCJ6YW0tNDM2Iiwgc2IgIT0gTlVMTCk7CisKKwlhc3NlcnQoInph
bS00NTUiLCBzdGFydCAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS00MzciLCAqc3RhcnQgIT0gMCk7
CisJYXNzZXJ0KCJ6YW0tNTQxIiwgIXJlaXNlcjRfYmxvY2tucl9pc19mYWtlKHN0YXJ0KSk7CisJ
YXNzZXJ0KCJ6YW0tNDQxIiwgKnN0YXJ0IDwgcmVpc2VyNF9ibG9ja19jb3VudChzYikpOworCisJ
aWYgKGxlbiAhPSBOVUxMKSB7CisJCWFzc2VydCgiemFtLTQzOCIsICpsZW4gIT0gMCk7CisJCWFz
c2VydCgiemFtLTQ0MiIsICpzdGFydCArICpsZW4gPD0gcmVpc2VyNF9ibG9ja19jb3VudChzYikp
OworCX0KK30KKworc3RhdGljIHZvaWQgY2hlY2tfYm5vZGVfbG9hZGVkKGNvbnN0IHN0cnVjdCBi
aXRtYXBfbm9kZSAqYm5vZGUpCit7CisJYXNzZXJ0KCJ6YW0tNDg1IiwgYm5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0KCJ6YW0tNDgzIiwgam5vZGVfcGFnZShibm9kZS0+d2pub2RlKSAhPSBOVUxMKTsK
Kwlhc3NlcnQoInphbS00ODQiLCBqbm9kZV9wYWdlKGJub2RlLT5jam5vZGUpICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTI4MjAiLCBqbm9kZV9pc19sb2FkZWQoYm5vZGUtPndqbm9kZSkpOwor
CWFzc2VydCgibmlraXRhLTI4MjEiLCBqbm9kZV9pc19sb2FkZWQoYm5vZGUtPmNqbm9kZSkpOwor
fQorCisjZWxzZQorCisjICBkZWZpbmUgY2hlY2tfYmxvY2tfcmFuZ2Uoc3RhcnQsIGxlbikgZG8g
eyAvKiBub3RoaW5nICovfSB3aGlsZSgwKQorIyAgZGVmaW5lIGNoZWNrX2Jub2RlX2xvYWRlZChi
bm9kZSkgICAgIGRvIHsgLyogbm90aGluZyAqL30gd2hpbGUoMCkKKworI2VuZGlmCisKKy8qIG1v
ZGlmeSBibm9kZS0+Zmlyc3RfemVyb19iaXQgKGlmIHdlIGZyZWUgYml0cyBiZWZvcmUpOyBibm9k
ZSBzaG91bGQgYmUKKyAgIHNwaW4tbG9ja2VkICovCitzdGF0aWMgaW5saW5lIHZvaWQKK2FkanVz
dF9maXJzdF96ZXJvX2JpdChzdHJ1Y3QgYml0bWFwX25vZGUgKmJub2RlLCBibWFwX29mZl90IG9m
ZnNldCkKK3sKKwlpZiAob2Zmc2V0IDwgYm5vZGUtPmZpcnN0X3plcm9fYml0KQorCQlibm9kZS0+
Zmlyc3RfemVyb19iaXQgPSBvZmZzZXQ7Cit9CisKKy8qIHJldHVybiBhIHBoeXNpY2FsIGRpc2sg
YWRkcmVzcyBmb3IgbG9naWNhbCBiaXRtYXAgbnVtYmVyIEBibWFwICovCisvKiBGSVhNRS1WUzog
dGhpcyBpcyBzb21laG93IHJlbGF0ZWQgdG8gZGlzayBsYXlvdXQ/ICovCisvKiBaQU0tRklYTUUt
SEFOUzogeW91ciBhbnN3ZXIgaXM/IFVzZSBub3QgbW9yZSB0aGFuIG9uZSBmdW5jdGlvbiBkZXJl
ZmVyZW5jZQorICogcGVyIGJsb2NrIGFsbG9jYXRpb24gc28gdGhhdCBwZXJmb3JtYW5jZSBpcyBu
b3QgYWZmZWN0ZWQuICBQcm9iYWJseSB0aGlzCisgKiB3aG9sZSBmaWxlIHNob3VsZCBiZSBjb25z
aWRlcmVkIHBhcnQgb2YgdGhlIGRpc2sgbGF5b3V0IHBsdWdpbiwgYW5kIG90aGVyCisgKiBkaXNr
IGxheW91dHMgY2FuIHVzZSBvdGhlciBkZWZpbmVzIGFuZCBlZmZpY2llbmN5IHdpbGwgbm90IGJl
IHNpZ25pZmljYW50bHkKKyAqIGFmZmVjdGVkLiAgKi8KKworI2RlZmluZSBSRUlTRVI0X0ZJUlNU
X0JJVE1BUF9CTE9DSyBcCisJKChSRUlTRVI0X01BU1RFUl9PRkZTRVQgLyBQQUdFX1NJWkUpICsg
MikKKworLyogQXVkaXRlZCBieTogZ3JlZW4oMjAwMi4wNi4xMikgKi8KK3N0YXRpYyB2b2lkCitn
ZXRfYml0bWFwX2Jsb2NrbnIoc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciwgYm1hcF9ucl90IGJt
YXAsCisJCSAgIHJlaXNlcjRfYmxvY2tfbnIgKiBibnIpCit7CisKKwlhc3NlcnQoInphbS0zOTAi
LCBibWFwIDwgZ2V0X25yX2JtYXAoc3VwZXIpKTsKKworI2lmZGVmIENPTkZJR19SRUlTRVI0X0JB
REJMT0NLUworI2RlZmluZSBCSVRNQVBfUExVR0lOX0RJU0tNQVBfSUQgKCgweGMwZTE8PDE2KSB8
ICgweGUwZmYpKQorCS8qIENoZWNrIGlmIHRoZSBkaXNrbWFwIGhhdmUgdGhpcyBhbHJlYWR5LCBm
aXJzdC4gKi8KKwlpZiAocmVpc2VyNF9nZXRfZGlza21hcF92YWx1ZShCSVRNQVBfUExVR0lOX0RJ
U0tNQVBfSUQsIGJtYXAsIGJucikgPT0gMCkKKwkJcmV0dXJuOwkJLyogRm91bmQgaXQgaW4gZGlz
a21hcCAqLworI2VuZGlmCisJLyogRklYTUVfWkFNOiBiZWZvcmUgZGlzY3Vzc2luZyBvZiBkaXNr
IGxheW91dHMgYW5kIGRpc2sgZm9ybWF0CisJICAgcGx1Z2lucyBJIGltcGxlbWVudCBiaXRtYXAg
bG9jYXRpb24gc2NoZW1lIHdoaWNoIGlzIGNsb3NlIHRvIHNjaGVtZQorCSAgIHVzZWQgaW4gcmVp
c2VyIDMuNiAqLworCWlmIChibWFwID09IDApIHsKKwkJKmJuciA9IFJFSVNFUjRfRklSU1RfQklU
TUFQX0JMT0NLOworCX0gZWxzZSB7CisJCSpibnIgPSBibWFwICogYm1hcF9iaXRfY291bnQoc3Vw
ZXItPnNfYmxvY2tzaXplKTsKKwl9Cit9CisKKy8qIGNvbnN0cnVjdCBhIGZha2UgYmxvY2sgbnVt
YmVyIGZvciBzaGFkb3cgYml0bWFwIChXT1JLSU5HIEJJVE1BUCkgYmxvY2sgKi8KKy8qIEF1ZGl0
ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTIpICovCitzdGF0aWMgdm9pZCBnZXRfd29ya2luZ19iaXRt
YXBfYmxvY2tucihibWFwX25yX3QgYm1hcCwgcmVpc2VyNF9ibG9ja19uciAqIGJucikKK3sKKwkq
Ym5yID0KKwkgICAgKHJlaXNlcjRfYmxvY2tfbnIpICgoYm1hcCAmIH5SRUlTRVI0X0JMT0NLTlJf
U1RBVFVTX0JJVF9NQVNLKSB8CisJCQkJUkVJU0VSNF9CSVRNQVBfQkxPQ0tTX1NUQVRVU19WQUxV
RSk7Cit9CisKKy8qIGJub2RlIHN0cnVjdHVyZSBpbml0aWFsaXphdGlvbiAqLworc3RhdGljIHZv
aWQKK2luaXRfYm5vZGUoc3RydWN0IGJpdG1hcF9ub2RlICpibm9kZSwKKwkgICBzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnN1cGVyIFVOVVNFRF9BUkcsIGJtYXBfbnJfdCBibWFwIFVOVVNFRF9BUkcpCit7
CisJbWVtc2V0KGJub2RlLCAwLCBzaXplb2Yoc3RydWN0IGJpdG1hcF9ub2RlKSk7CisKKwltdXRl
eF9pbml0KCZibm9kZS0+bXV0ZXgpOworCWF0b21pY19zZXQoJmJub2RlLT5sb2FkZWQsIDApOwor
fQorCitzdGF0aWMgdm9pZCByZWxlYXNlKGpub2RlICogbm9kZSkKK3sKKwlqcmVsc2Uobm9kZSk7
CisJSkZfU0VUKG5vZGUsIEpOT0RFX0hFQVJEX0JBTlNIRUUpOworCWpwdXQobm9kZSk7Cit9CisK
Ky8qIFRoaXMgZnVuY3Rpb24gaXMgZm9yIGludGVybmFsIGJpdG1hcC5jIHVzZSBiZWNhdXNlIGl0
IGFzc3VtZXMgdGhhdCBqbm9kZSBpcworICAgaW4gdW5kZXIgZnVsbCBjb250cm9sIG9mIHRoaXMg
dGhyZWFkICovCitzdGF0aWMgdm9pZCBkb25lX2Jub2RlKHN0cnVjdCBiaXRtYXBfbm9kZSAqYm5v
ZGUpCit7CisJaWYgKGJub2RlKSB7CisJCWF0b21pY19zZXQoJmJub2RlLT5sb2FkZWQsIDApOwor
CQlpZiAoYm5vZGUtPndqbm9kZSAhPSBOVUxMKQorCQkJcmVsZWFzZShibm9kZS0+d2pub2RlKTsK
KwkJaWYgKGJub2RlLT5jam5vZGUgIT0gTlVMTCkKKwkJCXJlbGVhc2UoYm5vZGUtPmNqbm9kZSk7
CisJCWJub2RlLT53am5vZGUgPSBibm9kZS0+Y2pub2RlID0gTlVMTDsKKwl9Cit9CisKKy8qIFpB
TS1GSVhNRS1IQU5TOiBjb21tZW50IHRoaXMuICBDYWxsZWQgb25seSBieSBsb2FkX2FuZF9sb2Nr
X2Jub2RlKCkqLworc3RhdGljIGludCBwcmVwYXJlX2Jub2RlKHN0cnVjdCBiaXRtYXBfbm9kZSAq
Ym5vZGUsIGpub2RlICoqY2pub2RlX3JldCwKKwkJCSBqbm9kZSAqKndqbm9kZV9yZXQpCit7CisJ
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcjsKKwlqbm9kZSAqY2pub2RlOworCWpub2RlICp3am5v
ZGU7CisJYm1hcF9ucl90IGJtYXA7CisJaW50IHJldDsKKworCXN1cGVyID0gcmVpc2VyNF9nZXRf
Y3VycmVudF9zYigpOworCisJKndqbm9kZV9yZXQgPSB3am5vZGUgPSBibmV3KCk7CisJaWYgKHdq
bm9kZSA9PSBOVUxMKSB7CisJCSpjam5vZGVfcmV0ID0gTlVMTDsKKwkJcmV0dXJuIFJFVEVSUigt
RU5PTUVNKTsKKwl9CisKKwkqY2pub2RlX3JldCA9IGNqbm9kZSA9IGJuZXcoKTsKKwlpZiAoY2pu
b2RlID09IE5VTEwpCisJCXJldHVybiBSRVRFUlIoLUVOT01FTSk7CisKKwlibWFwID0gYm5vZGUg
LSBnZXRfYm5vZGUoc3VwZXIsIDApOworCisJZ2V0X3dvcmtpbmdfYml0bWFwX2Jsb2NrbnIoYm1h
cCwgJndqbm9kZS0+YmxvY2tucik7CisJZ2V0X2JpdG1hcF9ibG9ja25yKHN1cGVyLCBibWFwLCAm
Y2pub2RlLT5ibG9ja25yKTsKKworCWpyZWYoY2pub2RlKTsKKwlqcmVmKHdqbm9kZSk7CisKKwkv
KiBsb2FkIGNvbW1pdCBiaXRtYXAgKi8KKwlyZXQgPSBqbG9hZF9nZnAoY2pub2RlLCBHRlBfTk9G
UywgMSk7CisKKwlpZiAocmV0KQorCQlnb3RvIGVycm9yOworCisJLyogYWxsb2NhdGUgbWVtb3J5
IGZvciB3b3JraW5nIGJpdG1hcCBibG9jay4gTm90ZSB0aGF0IGZvcgorCSAqIGJpdG1hcHMgamlu
aXRfbmV3KCkgZG9lc24ndCBhY3R1YWxseSBtb2RpZmllcyBub2RlIGNvbnRlbnQsCisJICogc28g
cGFyYWxsZWwgY2FsbHMgdG8gdGhpcyBhcmUgb2suICovCisJcmV0ID0gamluaXRfbmV3KHdqbm9k
ZSwgR0ZQX05PRlMpOworCisJaWYgKHJldCAhPSAwKSB7CisJCWpyZWxzZShjam5vZGUpOworCQln
b3RvIGVycm9yOworCX0KKworCXJldHVybiAwOworCisgICAgICBlcnJvcjoKKwlqcHV0KGNqbm9k
ZSk7CisJanB1dCh3am5vZGUpOworCSp3am5vZGVfcmV0ID0gKmNqbm9kZV9yZXQgPSBOVUxMOwor
CXJldHVybiByZXQ7CisKK30KKworLyogQ2hlY2sgdGhlIGJub2RlIGRhdGEgb24gcmVhZC4gKi8K
K3N0YXRpYyBpbnQgY2hlY2tfc3RydWN0X2Jub2RlKHN0cnVjdCBiaXRtYXBfbm9kZSAqYm5vZGUs
IF9fdTMyIGJsa3NpemUpCit7CisJdm9pZCAqZGF0YTsKKwlpbnQgcmV0OworCisJLyogQ2hlY2sg
Q1JDICovCisJcmV0ID0gYm5vZGVfY2hlY2tfYWRsZXIzMihibm9kZSwgYmxrc2l6ZSk7CisKKwlp
ZiAocmV0KSB7CisJCXJldHVybiByZXQ7CisJfQorCisJZGF0YSA9IGpkYXRhKGJub2RlLT5jam5v
ZGUpICsgQ0hFQ0tTVU1fU0laRTsKKworCS8qIENoZWNrIHRoZSB2ZXJ5IGZpcnN0IGJpdCAtLSBp
dCBtdXN0IGJlIGJ1c3kuICovCisJaWYgKCFyZWlzZXI0X3Rlc3RfYml0KDAsIGRhdGEpKSB7CisJ
CXdhcm5pbmcoInZwZi0xMzYyIiwgIlRoZSBhbGxvY2F0b3IgYmxvY2sgJWxsdSBpcyBub3QgbWFy
a2VkICIKKwkJCSJhcyB1c2VkLiIsICh1bnNpZ25lZCBsb25nIGxvbmcpYm5vZGUtPmNqbm9kZS0+
YmxvY2tucik7CisKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8q
IGxvYWQgYml0bWFwIGJsb2NrcyAib24tZGVtYW5kIiAqLworc3RhdGljIGludCBsb2FkX2FuZF9s
b2NrX2Jub2RlKHN0cnVjdCBiaXRtYXBfbm9kZSAqYm5vZGUpCit7CisJaW50IHJldDsKKworCWpu
b2RlICpjam5vZGU7CisJam5vZGUgKndqbm9kZTsKKworCWFzc2VydCgibmlraXRhLTMwNDAiLCBy
ZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCisvKiBaQU0tRklYTUUtSEFOUzogc2luY2UgYml0bWFw
cyBhcmUgbmV2ZXIgdW5sb2FkZWQsIHRoaXMgZG9lcyBub3QKKyAqIG5lZWQgdG8gYmUgYXRvbWlj
LCByaWdodD8gSnVzdCBsZWF2ZSBhIGNvbW1lbnQgdGhhdCBpZiBiaXRtYXBzIHdlcmUKKyAqIHVu
bG9hZGFibGUsIHRoaXMgd291bGQgbmVlZCB0byBiZSBhdG9taWMuICAqLworCWlmIChhdG9taWNf
cmVhZCgmYm5vZGUtPmxvYWRlZCkpIHsKKwkJLyogYml0bWFwIGlzIGFscmVhZHkgbG9hZGVkLCBu
b3RoaW5nIHRvIGRvICovCisJCWNoZWNrX2Jub2RlX2xvYWRlZChibm9kZSk7CisJCW11dGV4X2xv
Y2soJmJub2RlLT5tdXRleCk7CisJCWFzc2VydCgibmlraXRhLTI4MjciLCBhdG9taWNfcmVhZCgm
Ym5vZGUtPmxvYWRlZCkpOworCQlyZXR1cm4gMDsKKwl9CisKKwlyZXQgPSBwcmVwYXJlX2Jub2Rl
KGJub2RlLCAmY2pub2RlLCAmd2pub2RlKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJ
bXV0ZXhfbG9jaygmYm5vZGUtPm11dGV4KTsKKworCWlmICghYXRvbWljX3JlYWQoJmJub2RlLT5s
b2FkZWQpKSB7CisJCWFzc2VydCgibmlraXRhLTI4MjIiLCBjam5vZGUgIT0gTlVMTCk7CisJCWFz
c2VydCgibmlraXRhLTI4MjMiLCB3am5vZGUgIT0gTlVMTCk7CisJCWFzc2VydCgibmlraXRhLTI4
MjQiLCBqbm9kZV9pc19sb2FkZWQoY2pub2RlKSk7CisJCWFzc2VydCgibmlraXRhLTI4MjUiLCBq
bm9kZV9pc19sb2FkZWQod2pub2RlKSk7CisKKwkJYm5vZGUtPndqbm9kZSA9IHdqbm9kZTsKKwkJ
Ym5vZGUtPmNqbm9kZSA9IGNqbm9kZTsKKworCQlyZXQgPSBjaGVja19zdHJ1Y3RfYm5vZGUoYm5v
ZGUsIGN1cnJlbnRfYmxvY2tzaXplKTsKKwkJaWYgKHVubGlrZWx5KHJldCAhPSAwKSkKKwkJCWdv
dG8gZXJyb3I7CisKKwkJYXRvbWljX3NldCgmYm5vZGUtPmxvYWRlZCwgMSk7CisJCS8qIHdvcmtp
bmcgYml0bWFwIGlzIGluaXRpYWxpemVkIGJ5IG9uLWRpc2sKKwkJICogY29tbWl0IGJpdG1hcC4g
VGhpcyBzaG91bGQgYmUgcGVyZm9ybWVkCisJCSAqIHVuZGVyIG11dGV4LiAqLworCQltZW1jcHko
Ym5vZGVfd29ya2luZ19kYXRhKGJub2RlKSwKKwkJICAgICAgIGJub2RlX2NvbW1pdF9kYXRhKGJu
b2RlKSwKKwkJICAgICAgIGJtYXBfc2l6ZShjdXJyZW50X2Jsb2Nrc2l6ZSkpOworCX0gZWxzZQor
CQkvKiByYWNlOiBzb21lb25lIGFscmVhZHkgbG9hZGVkIGJpdG1hcAorCQkgKiB3aGlsZSB3ZSB3
ZXJlIGJ1c3kgaW5pdGlhbGl6aW5nIGRhdGEuICovCisJCWNoZWNrX2Jub2RlX2xvYWRlZChibm9k
ZSk7CisJcmV0dXJuIDA7CisKKyBlcnJvcjoKKwlyZWxlYXNlKHdqbm9kZSk7CisJcmVsZWFzZShj
am5vZGUpOworCWJub2RlLT53am5vZGUgPSBOVUxMOworCWJub2RlLT5jam5vZGUgPSBOVUxMOwor
CW11dGV4X3VubG9jaygmYm5vZGUtPm11dGV4KTsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMg
dm9pZCByZWxlYXNlX2FuZF91bmxvY2tfYm5vZGUoc3RydWN0IGJpdG1hcF9ub2RlICpibm9kZSkK
K3sKKwljaGVja19ibm9kZV9sb2FkZWQoYm5vZGUpOworCW11dGV4X3VubG9jaygmYm5vZGUtPm11
dGV4KTsKK30KKworLyogVGhpcyBmdW5jdGlvbiBkb2VzIGFsbCBibG9jayBhbGxvY2F0aW9uIHdv
cmsgYnV0IG9ubHkgZm9yIG9uZSBiaXRtYXAKKyAgIGJsb2NrLiovCisvKiBGSVhNRV9aQU06IEl0
IGRvZXMgbm90IGFsbG93IHVzIHRvIGFsbG9jYXRlIGJsb2NrIHJhbmdlcyBhY3Jvc3MgYml0bWFw
CisgICBibG9jayByZXNwb25zaWJpbGl0eSB6b25lIGJvdW5kYXJpZXMuIFRoaXMgaGFkIG5vIHNl
bnNlIGluIHYzLjYgYnV0IG1heQorICAgaGF2ZSBpdCBpbiB2NC54ICovCisvKiBaQU0tRklYTUUt
SEFOUzogZG8geW91IG1lYW4gc2VhcmNoIG9uZSBiaXRtYXAgYmxvY2sgZm9yd2FyZD8gKi8KK3N0
YXRpYyBpbnQKK3NlYXJjaF9vbmVfYml0bWFwX2ZvcndhcmQoYm1hcF9ucl90IGJtYXAsIGJtYXBf
b2ZmX3QgKiBvZmZzZXQsCisJCQkgIGJtYXBfb2ZmX3QgbWF4X29mZnNldCwgaW50IG1pbl9sZW4s
IGludCBtYXhfbGVuKQoreworCXN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIgPSBnZXRfY3VycmVu
dF9jb250ZXh0KCktPnN1cGVyOworCXN0cnVjdCBiaXRtYXBfbm9kZSAqYm5vZGUgPSBnZXRfYm5v
ZGUoc3VwZXIsIGJtYXApOworCisJY2hhciAqZGF0YTsKKworCWJtYXBfb2ZmX3Qgc2VhcmNoX2Vu
ZDsKKwlibWFwX29mZl90IHN0YXJ0OworCWJtYXBfb2ZmX3QgZW5kOworCisJaW50IHNldF9maXJz
dF96ZXJvX2JpdCA9IDA7CisKKwlpbnQgcmV0OworCisJYXNzZXJ0KCJ6YW0tMzY0IiwgbWluX2xl
biA+IDApOworCWFzc2VydCgiemFtLTM2NSIsIG1heF9sZW4gPj0gbWluX2xlbik7CisJYXNzZXJ0
KCJ6YW0tMzY2IiwgKm9mZnNldCA8PSBtYXhfb2Zmc2V0KTsKKworCXJldCA9IGxvYWRfYW5kX2xv
Y2tfYm5vZGUoYm5vZGUpOworCisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCWRhdGEgPSBi
bm9kZV93b3JraW5nX2RhdGEoYm5vZGUpOworCisJc3RhcnQgPSAqb2Zmc2V0OworCisJaWYgKGJu
b2RlLT5maXJzdF96ZXJvX2JpdCA+PSBzdGFydCkgeworCQlzdGFydCA9IGJub2RlLT5maXJzdF96
ZXJvX2JpdDsKKwkJc2V0X2ZpcnN0X3plcm9fYml0ID0gMTsKKwl9CisKKwl3aGlsZSAoc3RhcnQg
KyBtaW5fbGVuIDwgbWF4X29mZnNldCkgeworCisJCXN0YXJ0ID0KKwkJICAgIHJlaXNlcjRfZmlu
ZF9uZXh0X3plcm9fYml0KChsb25nICopZGF0YSwgbWF4X29mZnNldCwgc3RhcnQpOworCQlpZiAo
c2V0X2ZpcnN0X3plcm9fYml0KSB7CisJCQlibm9kZS0+Zmlyc3RfemVyb19iaXQgPSBzdGFydDsK
KwkJCXNldF9maXJzdF96ZXJvX2JpdCA9IDA7CisJCX0KKwkJaWYgKHN0YXJ0ID49IG1heF9vZmZz
ZXQpCisJCQlicmVhazsKKworCQlzZWFyY2hfZW5kID0gTElNSVQoc3RhcnQgKyBtYXhfbGVuLCBt
YXhfb2Zmc2V0KTsKKwkJZW5kID0KKwkJICAgIHJlaXNlcjRfZmluZF9uZXh0X3NldF9iaXQoKGxv
bmcgKilkYXRhLCBzZWFyY2hfZW5kLCBzdGFydCk7CisJCWlmIChlbmQgPj0gc3RhcnQgKyBtaW5f
bGVuKSB7CisJCQkvKiB3ZSBjYW4ndCB0cnVzdCBmaW5kX25leHRfc2V0X2JpdCByZXN1bHQgaWYg
c2V0IGJpdAorCQkJICAgd2FzIG5vdCBmb3VudCwgcmVzdWx0IG1heSBiZSBiaWdnZXIgdGhhbgor
CQkJICAgbWF4X29mZnNldCAqLworCQkJaWYgKGVuZCA+IHNlYXJjaF9lbmQpCisJCQkJZW5kID0g
c2VhcmNoX2VuZDsKKworCQkJcmV0ID0gZW5kIC0gc3RhcnQ7CisJCQkqb2Zmc2V0ID0gc3RhcnQ7
CisKKwkJCXJlaXNlcjRfc2V0X2JpdHMoZGF0YSwgc3RhcnQsIGVuZCk7CisKKwkJCS8qIEZJWE1F
OiB3ZSBtYXkgYWR2YW5jZSBmaXJzdF96ZXJvX2JpdCBpZiBbc3RhcnQsCisJCQkgICBlbmRdIHJl
Z2lvbiBvdmVybGFwcyB0aGUgZmlyc3RfemVyb19iaXQgcG9pbnQgKi8KKworCQkJYnJlYWs7CisJ
CX0KKworCQlzdGFydCA9IGVuZCArIDE7CisJfQorCisJcmVsZWFzZV9hbmRfdW5sb2NrX2Jub2Rl
KGJub2RlKTsKKworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQKK3NlYXJjaF9vbmVfYml0
bWFwX2JhY2t3YXJkKGJtYXBfbnJfdCBibWFwLCBibWFwX29mZl90ICogc3RhcnRfb2Zmc2V0LAor
CQkJICAgYm1hcF9vZmZfdCBlbmRfb2Zmc2V0LCBpbnQgbWluX2xlbiwgaW50IG1heF9sZW4pCit7
CisJc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciA9IGdldF9jdXJyZW50X2NvbnRleHQoKS0+c3Vw
ZXI7CisJc3RydWN0IGJpdG1hcF9ub2RlICpibm9kZSA9IGdldF9ibm9kZShzdXBlciwgYm1hcCk7
CisJY2hhciAqZGF0YTsKKwlibWFwX29mZl90IHN0YXJ0OworCWludCByZXQ7CisKKwlhc3NlcnQo
InphbS05NTgiLCBtaW5fbGVuID4gMCk7CisJYXNzZXJ0KCJ6YW0tOTU5IiwgbWF4X2xlbiA+PSBt
aW5fbGVuKTsKKwlhc3NlcnQoInphbS05NjAiLCAqc3RhcnRfb2Zmc2V0ID49IGVuZF9vZmZzZXQp
OworCisJcmV0ID0gbG9hZF9hbmRfbG9ja19ibm9kZShibm9kZSk7CisJaWYgKHJldCkKKwkJcmV0
dXJuIHJldDsKKworCWRhdGEgPSBibm9kZV93b3JraW5nX2RhdGEoYm5vZGUpOworCXN0YXJ0ID0g
KnN0YXJ0X29mZnNldDsKKworCXdoaWxlICgxKSB7CisJCWJtYXBfb2ZmX3QgZW5kLCBzZWFyY2hf
ZW5kOworCisJCS8qIEZpbmQgdGhlIGJlZ2lubmluZyBvZiB0aGUgemVybyBmaWxsZWQgcmVnaW9u
ICovCisJCWlmIChyZWlzZXI0X2ZpbmRfbGFzdF96ZXJvX2JpdCgmc3RhcnQsIGRhdGEsIGVuZF9v
ZmZzZXQsIHN0YXJ0KSkKKwkJCWJyZWFrOworCQkvKiBJcyB0aGVyZSBtb3JlIHRoYW4gYG1pbl9s
ZW4nIGJpdHMgZnJvbSBgc3RhcnQnIHRvCisJCSAqIGBlbmRfb2Zmc2V0Jz8gICovCisJCWlmIChz
dGFydCA8IGVuZF9vZmZzZXQgKyBtaW5fbGVuIC0gMSkKKwkJCWJyZWFrOworCisJCS8qIERvIG5v
dCBzZWFyY2ggdG8gYGVuZF9vZmZzZXQnIGlmIHdlIG5lZWQgdG8gZmluZCBsZXNzIHRoYW4KKwkJ
ICogYG1heF9sZW4nIHplcm8gYml0cy4gKi8KKwkJaWYgKGVuZF9vZmZzZXQgKyBtYXhfbGVuIC0g
MSA8IHN0YXJ0KQorCQkJc2VhcmNoX2VuZCA9IHN0YXJ0IC0gbWF4X2xlbiArIDE7CisJCWVsc2UK
KwkJCXNlYXJjaF9lbmQgPSBlbmRfb2Zmc2V0OworCisJCWlmIChyZWlzZXI0X2ZpbmRfbGFzdF9z
ZXRfYml0KCZlbmQsIGRhdGEsIHNlYXJjaF9lbmQsIHN0YXJ0KSkKKwkJCWVuZCA9IHNlYXJjaF9l
bmQ7CisJCWVsc2UKKwkJCWVuZCsrOworCisJCWlmIChlbmQgKyBtaW5fbGVuIDw9IHN0YXJ0ICsg
MSkgeworCQkJaWYgKGVuZCA8IHNlYXJjaF9lbmQpCisJCQkJZW5kID0gc2VhcmNoX2VuZDsKKwkJ
CXJldCA9IHN0YXJ0IC0gZW5kICsgMTsKKwkJCSpzdGFydF9vZmZzZXQgPSBlbmQ7CS8qIGBlbmQn
IGlzIGxvd2VzdCBvZmZzZXQgKi8KKwkJCWFzc2VydCgiemFtLTk4NyIsCisJCQkgICAgICAgcmVp
c2VyNF9maW5kX25leHRfc2V0X2JpdChkYXRhLCBzdGFydCArIDEsCisJCQkJCQkJIGVuZCkgPj0g
c3RhcnQgKyAxKTsKKwkJCXJlaXNlcjRfc2V0X2JpdHMoZGF0YSwgZW5kLCBzdGFydCArIDEpOwor
CQkJYnJlYWs7CisJCX0KKworCQlpZiAoZW5kIDw9IGVuZF9vZmZzZXQpCisJCQkvKiBsZWZ0IHNl
YXJjaCBib3VuZGFyeSByZWFjaGVkLiAqLworCQkJYnJlYWs7CisJCXN0YXJ0ID0gZW5kIC0gMTsK
Kwl9CisKKwlyZWxlYXNlX2FuZF91bmxvY2tfYm5vZGUoYm5vZGUpOworCXJldHVybiByZXQ7Cit9
CisKKy8qIGFsbG9jYXRlIGNvbnRpZ3VvdXMgcmFuZ2Ugb2YgYmxvY2tzIGluIGJpdG1hcCAqLwor
c3RhdGljIGludCBiaXRtYXBfYWxsb2NfZm9yd2FyZChyZWlzZXI0X2Jsb2NrX25yICogc3RhcnQs
CisJCQkJY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGVuZCwgaW50IG1pbl9sZW4sCisJCQkJaW50
IG1heF9sZW4pCit7CisJYm1hcF9ucl90IGJtYXAsIGVuZF9ibWFwOworCWJtYXBfb2ZmX3Qgb2Zm
c2V0LCBlbmRfb2Zmc2V0OworCWludCBsZW47CisKKwlyZWlzZXI0X2Jsb2NrX25yIHRtcDsKKwor
CXN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIgPSBnZXRfY3VycmVudF9jb250ZXh0KCktPnN1cGVy
OworCWNvbnN0IGJtYXBfb2ZmX3QgbWF4X29mZnNldCA9IGJtYXBfYml0X2NvdW50KHN1cGVyLT5z
X2Jsb2Nrc2l6ZSk7CisKKwlwYXJzZV9ibG9ja25yKHN0YXJ0LCAmYm1hcCwgJm9mZnNldCk7CisK
Kwl0bXAgPSAqZW5kIC0gMTsKKwlwYXJzZV9ibG9ja25yKCZ0bXAsICZlbmRfYm1hcCwgJmVuZF9v
ZmZzZXQpOworCSsrZW5kX29mZnNldDsKKworCWFzc2VydCgiemFtLTM1OCIsIGVuZF9ibWFwID49
IGJtYXApOworCWFzc2VydCgiemFtLTM1OSIsIGVyZ28oZW5kX2JtYXAgPT0gYm1hcCwgZW5kX29m
ZnNldCA+PSBvZmZzZXQpKTsKKworCWZvciAoOyBibWFwIDwgZW5kX2JtYXA7IGJtYXArKywgb2Zm
c2V0ID0gMCkgeworCQlsZW4gPQorCQkgICAgc2VhcmNoX29uZV9iaXRtYXBfZm9yd2FyZChibWFw
LCAmb2Zmc2V0LCBtYXhfb2Zmc2V0LAorCQkJCQkgICAgICBtaW5fbGVuLCBtYXhfbGVuKTsKKwkJ
aWYgKGxlbiAhPSAwKQorCQkJZ290byBvdXQ7CisJfQorCisJbGVuID0KKwkgICAgc2VhcmNoX29u
ZV9iaXRtYXBfZm9yd2FyZChibWFwLCAmb2Zmc2V0LCBlbmRfb2Zmc2V0LCBtaW5fbGVuLAorCQkJ
CSAgICAgIG1heF9sZW4pOworICAgICAgb3V0OgorCSpzdGFydCA9IGJtYXAgKiBtYXhfb2Zmc2V0
ICsgb2Zmc2V0OworCXJldHVybiBsZW47Cit9CisKKy8qIGFsbG9jYXRlIGNvbnRpZ3VvdXMgcmFu
Z2Ugb2YgYmxvY2tzIGluIGJpdG1hcCAoZnJvbSBAc3RhcnQgdG8gQGVuZCBpbgorICogYmFja3dh
cmQgZGlyZWN0aW9uKSAqLworc3RhdGljIGludCBiaXRtYXBfYWxsb2NfYmFja3dhcmQocmVpc2Vy
NF9ibG9ja19uciAqIHN0YXJ0LAorCQkJCSBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogZW5kLCBp
bnQgbWluX2xlbiwKKwkJCQkgaW50IG1heF9sZW4pCit7CisJYm1hcF9ucl90IGJtYXAsIGVuZF9i
bWFwOworCWJtYXBfb2ZmX3Qgb2Zmc2V0LCBlbmRfb2Zmc2V0OworCWludCBsZW47CisJc3RydWN0
IHN1cGVyX2Jsb2NrICpzdXBlciA9IGdldF9jdXJyZW50X2NvbnRleHQoKS0+c3VwZXI7CisJY29u
c3QgYm1hcF9vZmZfdCBtYXhfb2Zmc2V0ID0gYm1hcF9iaXRfY291bnQoc3VwZXItPnNfYmxvY2tz
aXplKTsKKworCXBhcnNlX2Jsb2NrbnIoc3RhcnQsICZibWFwLCAmb2Zmc2V0KTsKKwlwYXJzZV9i
bG9ja25yKGVuZCwgJmVuZF9ibWFwLCAmZW5kX29mZnNldCk7CisKKwlhc3NlcnQoInphbS05NjEi
LCBlbmRfYm1hcCA8PSBibWFwKTsKKwlhc3NlcnQoInphbS05NjIiLCBlcmdvKGVuZF9ibWFwID09
IGJtYXAsIGVuZF9vZmZzZXQgPD0gb2Zmc2V0KSk7CisKKwlmb3IgKDsgYm1hcCA+IGVuZF9ibWFw
OyBibWFwLS0sIG9mZnNldCA9IG1heF9vZmZzZXQgLSAxKSB7CisJCWxlbiA9CisJCSAgICBzZWFy
Y2hfb25lX2JpdG1hcF9iYWNrd2FyZChibWFwLCAmb2Zmc2V0LCAwLCBtaW5fbGVuLAorCQkJCQkg
ICAgICAgbWF4X2xlbik7CisJCWlmIChsZW4gIT0gMCkKKwkJCWdvdG8gb3V0OworCX0KKworCWxl
biA9CisJICAgIHNlYXJjaF9vbmVfYml0bWFwX2JhY2t3YXJkKGJtYXAsICZvZmZzZXQsIGVuZF9v
ZmZzZXQsIG1pbl9sZW4sCisJCQkJICAgICAgIG1heF9sZW4pOworICAgICAgb3V0OgorCSpzdGFy
dCA9IGJtYXAgKiBtYXhfb2Zmc2V0ICsgb2Zmc2V0OworCXJldHVybiBsZW47Cit9CisKKy8qIHBs
dWdpbi0+dS5zcGFjZV9hbGxvY2F0b3IuYWxsb2NfYmxvY2tzKCkgKi8KK3N0YXRpYyBpbnQgYWxs
b2NfYmxvY2tzX2ZvcndhcmQocmVpc2VyNF9ibG9ja25yX2hpbnQgKmhpbnQsIGludCBuZWVkZWQs
CisJCQkJcmVpc2VyNF9ibG9ja19uciAqc3RhcnQsIHJlaXNlcjRfYmxvY2tfbnIgKmxlbikKK3sK
KwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5zdXBl
cjsKKwlpbnQgYWN0dWFsX2xlbjsKKworCXJlaXNlcjRfYmxvY2tfbnIgc2VhcmNoX3N0YXJ0Owor
CXJlaXNlcjRfYmxvY2tfbnIgc2VhcmNoX2VuZDsKKworCWFzc2VydCgiemFtLTM5OCIsIHN1cGVy
ICE9IE5VTEwpOworCWFzc2VydCgiemFtLTQxMiIsIGhpbnQgIT0gTlVMTCk7CisJYXNzZXJ0KCJ6
YW0tMzk3IiwgaGludC0+YmxrIDw9IHJlaXNlcjRfYmxvY2tfY291bnQoc3VwZXIpKTsKKworCWlm
IChoaW50LT5tYXhfZGlzdCA9PSAwKQorCQlzZWFyY2hfZW5kID0gcmVpc2VyNF9ibG9ja19jb3Vu
dChzdXBlcik7CisJZWxzZQorCQlzZWFyY2hfZW5kID0KKwkJICAgIExJTUlUKGhpbnQtPmJsayAr
IGhpbnQtPm1heF9kaXN0LAorCQkJICByZWlzZXI0X2Jsb2NrX2NvdW50KHN1cGVyKSk7CisKKwkv
KiBXZSB1c2UgQGhpbnQgLT4gYmxrIGFzIGEgc2VhcmNoIHN0YXJ0IGFuZCBzZWFyY2ggZnJvbSBp
dCB0byB0aGUgZW5kCisJICAgb2YgdGhlIGRpc2sgb3IgaW4gZ2l2ZW4gcmVnaW9uIGlmIEBoaW50
IC0+IG1heF9kaXN0IGlzIG5vdCB6ZXJvICovCisJc2VhcmNoX3N0YXJ0ID0gaGludC0+YmxrOwor
CisJYWN0dWFsX2xlbiA9CisJICAgIGJpdG1hcF9hbGxvY19mb3J3YXJkKCZzZWFyY2hfc3RhcnQs
ICZzZWFyY2hfZW5kLCAxLCBuZWVkZWQpOworCisJLyogVGhlcmUgaXMgb25seSBvbmUgYml0bWFw
IHNlYXJjaCBpZiBtYXhfZGlzdCB3YXMgc3BlY2lmaWVkIG9yIGZpcnN0CisJICAgcGFzcyB3YXMg
ZnJvbSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBiaXRtYXAuIFdlIGFsc28gZG8gb25lIHBhc3MgZm9y
CisJICAgc2Nhbm5pbmcgYml0bWFwIGluIGJhY2t3YXJkIGRpcmVjdGlvbi4gKi8KKwlpZiAoIShh
Y3R1YWxfbGVuICE9IDAgfHwgaGludC0+bWF4X2Rpc3QgIT0gMCB8fCBzZWFyY2hfc3RhcnQgPT0g
MCkpIHsKKwkJLyogbmV4dCBzdGVwIGlzIGEgc2Nhbm5pbmcgZnJvbSAwIHRvIHNlYXJjaF9zdGFy
dCAqLworCQlzZWFyY2hfZW5kID0gc2VhcmNoX3N0YXJ0OworCQlzZWFyY2hfc3RhcnQgPSAwOwor
CQlhY3R1YWxfbGVuID0KKwkJICAgIGJpdG1hcF9hbGxvY19mb3J3YXJkKCZzZWFyY2hfc3RhcnQs
ICZzZWFyY2hfZW5kLCAxLCBuZWVkZWQpOworCX0KKwlpZiAoYWN0dWFsX2xlbiA9PSAwKQorCQly
ZXR1cm4gUkVURVJSKC1FTk9TUEMpOworCWlmIChhY3R1YWxfbGVuIDwgMCkKKwkJcmV0dXJuIFJF
VEVSUihhY3R1YWxfbGVuKTsKKwkqbGVuID0gYWN0dWFsX2xlbjsKKwkqc3RhcnQgPSBzZWFyY2hf
c3RhcnQ7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgYWxsb2NfYmxvY2tzX2JhY2t3YXJk
KHJlaXNlcjRfYmxvY2tucl9oaW50ICogaGludCwgaW50IG5lZWRlZCwKKwkJCQkgcmVpc2VyNF9i
bG9ja19uciAqIHN0YXJ0LAorCQkJCSByZWlzZXI0X2Jsb2NrX25yICogbGVuKQoreworCXJlaXNl
cjRfYmxvY2tfbnIgc2VhcmNoX3N0YXJ0OworCXJlaXNlcjRfYmxvY2tfbnIgc2VhcmNoX2VuZDsK
KwlpbnQgYWN0dWFsX2xlbjsKKworCU9OX0RFQlVHKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIg
PSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCkpOworCisJYXNzZXJ0KCJ6YW0tOTY5Iiwgc3VwZXIg
IT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tOTcwIiwgaGludCAhPSBOVUxMKTsKKwlhc3NlcnQoInph
bS05NzEiLCBoaW50LT5ibGsgPD0gcmVpc2VyNF9ibG9ja19jb3VudChzdXBlcikpOworCisJc2Vh
cmNoX3N0YXJ0ID0gaGludC0+YmxrOworCWlmIChoaW50LT5tYXhfZGlzdCA9PSAwIHx8IHNlYXJj
aF9zdGFydCA8PSBoaW50LT5tYXhfZGlzdCkKKwkJc2VhcmNoX2VuZCA9IDA7CisJZWxzZQorCQlz
ZWFyY2hfZW5kID0gc2VhcmNoX3N0YXJ0IC0gaGludC0+bWF4X2Rpc3Q7CisKKwlhY3R1YWxfbGVu
ID0KKwkgICAgYml0bWFwX2FsbG9jX2JhY2t3YXJkKCZzZWFyY2hfc3RhcnQsICZzZWFyY2hfZW5k
LCAxLCBuZWVkZWQpOworCWlmIChhY3R1YWxfbGVuID09IDApCisJCXJldHVybiBSRVRFUlIoLUVO
T1NQQyk7CisJaWYgKGFjdHVhbF9sZW4gPCAwKQorCQlyZXR1cm4gUkVURVJSKGFjdHVhbF9sZW4p
OworCSpsZW4gPSBhY3R1YWxfbGVuOworCSpzdGFydCA9IHNlYXJjaF9zdGFydDsKKwlyZXR1cm4g
MDsKK30KKworLyogcGx1Z2luLT51LnNwYWNlX2FsbG9jYXRvci5hbGxvY19ibG9ja3MoKSAqLwor
aW50IHJlaXNlcjRfYWxsb2NfYmxvY2tzX2JpdG1hcChyZWlzZXI0X3NwYWNlX2FsbG9jYXRvciAq
IGFsbG9jYXRvciwKKwkJCQlyZWlzZXI0X2Jsb2NrbnJfaGludCAqIGhpbnQsIGludCBuZWVkZWQs
CisJCQkJcmVpc2VyNF9ibG9ja19uciAqIHN0YXJ0LCByZWlzZXI0X2Jsb2NrX25yICogbGVuKQor
eworCWlmIChoaW50LT5iYWNrd2FyZCkKKwkJcmV0dXJuIGFsbG9jX2Jsb2Nrc19iYWNrd2FyZCho
aW50LCBuZWVkZWQsIHN0YXJ0LCBsZW4pOworCXJldHVybiBhbGxvY19ibG9ja3NfZm9yd2FyZCho
aW50LCBuZWVkZWQsIHN0YXJ0LCBsZW4pOworfQorCisvKiBwbHVnaW4tPnUuc3BhY2VfYWxsb2Nh
dG9yLmRlYWxsb2NfYmxvY2tzKCkuICovCisvKiBJdCBqdXN0IGZyZWVzIGJsb2NrcyBpbiBXT1JL
SU5HIEJJVE1BUC4gVXN1YWxseSBmb3JtYXR0ZWQgYW4gdW5mb3JtYXR0ZWQKKyAgIG5vZGVzIGRl
bGV0aW9uIGlzIGRlZmVycmVkIHVudGlsIHRyYW5zYWN0aW9uIGNvbW1pdC4gIEhvd2V2ZXIsIGRl
YWxsb2NhdGlvbgorICAgb2YgdGVtcG9yYXJ5IG9iamVjdHMgbGlrZSB3YW5kZXJlZCBibG9ja3Mg
YW5kIHRyYW5zYWN0aW9uIGNvbW1pdCByZWNvcmRzCisgICByZXF1aXJlcyBpbW1lZGlhdGUgbm9k
ZSBkZWxldGlvbiBmcm9tIFdPUktJTkcgQklUTUFQLiovCit2b2lkIHJlaXNlcjRfZGVhbGxvY19i
bG9ja3NfYml0bWFwKHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yICogYWxsb2NhdG9yLAorCQkJCSAg
IHJlaXNlcjRfYmxvY2tfbnIgc3RhcnQsIHJlaXNlcjRfYmxvY2tfbnIgbGVuKQoreworCXN0cnVj
dCBzdXBlcl9ibG9jayAqc3VwZXIgPSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCk7CisKKwlibWFw
X25yX3QgYm1hcDsKKwlibWFwX29mZl90IG9mZnNldDsKKworCXN0cnVjdCBiaXRtYXBfbm9kZSAq
Ym5vZGU7CisJaW50IHJldDsKKworCWFzc2VydCgiemFtLTQ2OCIsIGxlbiAhPSAwKTsKKwljaGVj
a19ibG9ja19yYW5nZSgmc3RhcnQsICZsZW4pOworCisJcGFyc2VfYmxvY2tucigmc3RhcnQsICZi
bWFwLCAmb2Zmc2V0KTsKKworCWFzc2VydCgiemFtLTQ2OSIsIG9mZnNldCArIGxlbiA8PSBibWFw
X2JpdF9jb3VudChzdXBlci0+c19ibG9ja3NpemUpKTsKKworCWJub2RlID0gZ2V0X2Jub2RlKHN1
cGVyLCBibWFwKTsKKworCWFzc2VydCgiemFtLTQ3MCIsIGJub2RlICE9IE5VTEwpOworCisJcmV0
ID0gbG9hZF9hbmRfbG9ja19ibm9kZShibm9kZSk7CisJYXNzZXJ0KCJ6YW0tNDgxIiwgcmV0ID09
IDApOworCisJcmVpc2VyNF9jbGVhcl9iaXRzKGJub2RlX3dvcmtpbmdfZGF0YShibm9kZSksIG9m
ZnNldCwKKwkJCSAgIChibWFwX29mZl90KSAob2Zmc2V0ICsgbGVuKSk7CisKKwlhZGp1c3RfZmly
c3RfemVyb19iaXQoYm5vZGUsIG9mZnNldCk7CisKKwlyZWxlYXNlX2FuZF91bmxvY2tfYm5vZGUo
Ym5vZGUpOworfQorCitzdGF0aWMgaW50IGNoZWNrX2Jsb2Nrc19vbmVfYml0bWFwKGJtYXBfbnJf
dCBibWFwLCBibWFwX29mZl90IHN0YXJ0X29mZnNldCwKKyAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIGJtYXBfb2ZmX3QgZW5kX29mZnNldCwgaW50IGRlc2lyZWQpCit7CisJc3Ry
dWN0IHN1cGVyX2Jsb2NrICpzdXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKwlzdHJ1
Y3QgYml0bWFwX25vZGUgKmJub2RlID0gZ2V0X2Jub2RlKHN1cGVyLCBibWFwKTsKKwlpbnQgcmV0
OworCisJYXNzZXJ0KCJuaWtpdGEtMjIxNSIsIGJub2RlICE9IE5VTEwpOworCisJcmV0ID0gbG9h
ZF9hbmRfbG9ja19ibm9kZShibm9kZSk7CisJYXNzZXJ0KCJ6YW0tNjI2IiwgcmV0ID09IDApOwor
CisJYXNzZXJ0KCJuaWtpdGEtMjIxNiIsIGpub2RlX2lzX2xvYWRlZChibm9kZS0+d2pub2RlKSk7
CisKKwlpZiAoZGVzaXJlZCkgeworCQlyZXQgPSByZWlzZXI0X2ZpbmRfbmV4dF96ZXJvX2JpdChi
bm9kZV93b3JraW5nX2RhdGEoYm5vZGUpLAorCQkJCQkJICBlbmRfb2Zmc2V0LCBzdGFydF9vZmZz
ZXQpCisJCSAgICAgID49IGVuZF9vZmZzZXQ7CisJfSBlbHNlIHsKKwkJcmV0ID0gcmVpc2VyNF9m
aW5kX25leHRfc2V0X2JpdChibm9kZV93b3JraW5nX2RhdGEoYm5vZGUpLAorCQkJCQkJIGVuZF9v
ZmZzZXQsIHN0YXJ0X29mZnNldCkKKwkJICAgICAgPj0gZW5kX29mZnNldDsKKwl9CisKKwlyZWxl
YXNlX2FuZF91bmxvY2tfYm5vZGUoYm5vZGUpOworCisJcmV0dXJuIHJldDsKK30KKworLyogcGx1
Z2luLT51LnNwYWNlX2FsbG9jYXRvci5jaGVja19ibG9ja3MoKS4gKi8KK2ludCByZWlzZXI0X2No
ZWNrX2Jsb2Nrc19iaXRtYXAoY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIHN0YXJ0LAorCQkJCSBj
b25zdCByZWlzZXI0X2Jsb2NrX25yICogbGVuLCBpbnQgZGVzaXJlZCkKK3sKKwlzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnN1cGVyID0gcmVpc2VyNF9nZXRfY3VycmVudF9zYigpOworCisJcmVpc2VyNF9i
bG9ja19uciBlbmQ7CisJYm1hcF9ucl90IGJtYXAsIGVuZF9ibWFwOworCWJtYXBfb2ZmX3Qgb2Zm
c2V0LCBlbmRfb2Zmc2V0OworCWNvbnN0IGJtYXBfb2ZmX3QgbWF4X29mZnNldCA9IGJtYXBfYml0
X2NvdW50KHN1cGVyLT5zX2Jsb2Nrc2l6ZSk7CisKKwlhc3NlcnQoImludGVsZngtOSIsIHN0YXJ0
ICE9IE5VTEwpOworCWFzc2VydCgiaW50ZWxmeC0xMCIsIGVyZ28obGVuICE9IE5VTEwsICpsZW4g
PiAwKSk7CisKKwlpZiAobGVuICE9IE5VTEwpIHsKKwkJY2hlY2tfYmxvY2tfcmFuZ2Uoc3RhcnQs
IGxlbik7CisJCWVuZCA9ICpzdGFydCArICpsZW4gLSAxOworCX0gZWxzZSB7CisJCS8qIG9uIG5l
eHQgbGluZSwgZW5kIGlzIHVzZWQgYXMgdGVtcG9yYXJ5IGxlbiBmb3IgY2hlY2tfYmxvY2tfcmFu
Z2UoKSAqLworCQllbmQgPSAxOyBjaGVja19ibG9ja19yYW5nZShzdGFydCwgJmVuZCk7CisJCWVu
ZCA9ICpzdGFydDsKKwl9CisKKwlwYXJzZV9ibG9ja25yKHN0YXJ0LCAmYm1hcCwgJm9mZnNldCk7
CisKKwlpZiAoZW5kID09ICpzdGFydCkgeworCQllbmRfYm1hcCA9IGJtYXA7CisJCWVuZF9vZmZz
ZXQgPSBvZmZzZXQ7CisJfSBlbHNlIHsKKwkJcGFyc2VfYmxvY2tucigmZW5kLCAmZW5kX2JtYXAs
ICZlbmRfb2Zmc2V0KTsKKwl9CisJKytlbmRfb2Zmc2V0OworCisJYXNzZXJ0KCJpbnRlbGZ4LTQi
LCBlbmRfYm1hcCA+PSBibWFwKTsKKwlhc3NlcnQoImludGVsZngtNSIsIGVyZ28oZW5kX2JtYXAg
PT0gYm1hcCwgZW5kX29mZnNldCA+PSBvZmZzZXQpKTsKKworCWZvciAoOyBibWFwIDwgZW5kX2Jt
YXA7IGJtYXArKywgb2Zmc2V0ID0gMCkgeworCQlpZiAoIWNoZWNrX2Jsb2Nrc19vbmVfYml0bWFw
KGJtYXAsIG9mZnNldCwgbWF4X29mZnNldCwgZGVzaXJlZCkpIHsKKwkJCXJldHVybiAwOworCQl9
CisJfQorCXJldHVybiBjaGVja19ibG9ja3Nfb25lX2JpdG1hcChibWFwLCBvZmZzZXQsIGVuZF9v
ZmZzZXQsIGRlc2lyZWQpOworfQorCisvKiBjb25kaXRpb25hbCBpbnNlcnRpb24gb2YgQG5vZGUg
aW50byBhdG9tJ3Mgb3ZlcndyaXRlIHNldCAgaWYgaXQgd2FzIG5vdCB0aGVyZSAqLworc3RhdGlj
IHZvaWQgY29uZF9hZGRfdG9fb3ZlcndyaXRlX3NldCh0eG5fYXRvbSAqIGF0b20sIGpub2RlICog
bm9kZSkKK3sKKwlhc3NlcnQoInphbS01NDYiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydCgiemFt
LTU0NyIsIGF0b20tPnN0YWdlID09IEFTVEFHRV9QUkVfQ09NTUlUKTsKKwlhc3NlcnQoInphbS01
NDgiLCBub2RlICE9IE5VTEwpOworCisJc3Bpbl9sb2NrX2F0b20oYXRvbSk7CisJc3Bpbl9sb2Nr
X2pub2RlKG5vZGUpOworCisJaWYgKG5vZGUtPmF0b20gPT0gTlVMTCkgeworCQlKRl9TRVQobm9k
ZSwgSk5PREVfT1ZSV1IpOworCQlpbnNlcnRfaW50b19hdG9tX292cndyX2xpc3QoYXRvbSwgbm9k
ZSk7CisJfSBlbHNlIHsKKwkJYXNzZXJ0KCJ6YW0tNTQ5Iiwgbm9kZS0+YXRvbSA9PSBhdG9tKTsK
Kwl9CisKKwlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20p
OworfQorCisvKiBhbiBhY3RvciB3aGljaCBhcHBsaWVzIGRlbGV0ZSBzZXQgdG8gQ09NTUlUIGJp
dG1hcCBwYWdlcyBhbmQgbGluayBtb2RpZmllZAorICAgcGFnZXMgaW4gYSBzaW5nbGUtbGlua2Vk
IGxpc3QgKi8KK3N0YXRpYyBpbnQKK2FwcGx5X2RzZXRfdG9fY29tbWl0X2JtYXAodHhuX2F0b20g
KiBhdG9tLCBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogc3RhcnQsCisJCQkgIGNvbnN0IHJlaXNl
cjRfYmxvY2tfbnIgKiBsZW4sIHZvaWQgKmRhdGEpCit7CisKKwlibWFwX25yX3QgYm1hcDsKKwli
bWFwX29mZl90IG9mZnNldDsKKwlpbnQgcmV0OworCisJbG9uZyBsb25nICpibG9ja3NfZnJlZWRf
cCA9IGRhdGE7CisKKwlzdHJ1Y3QgYml0bWFwX25vZGUgKmJub2RlOworCisJc3RydWN0IHN1cGVy
X2Jsb2NrICpzYiA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKworCWNoZWNrX2Jsb2NrX3Jh
bmdlKHN0YXJ0LCBsZW4pOworCisJcGFyc2VfYmxvY2tucihzdGFydCwgJmJtYXAsICZvZmZzZXQp
OworCisJLyogRklYTUUtWkFNOiB3ZSBhc3N1bWUgdGhhdCBhbGwgYmxvY2sgcmFuZ2VzIGFyZSBh
bGxvY2F0ZWQgYnkgdGhpcworCSAgIGJpdG1hcC1iYXNlZCBhbGxvY2F0b3IgYW5kIGVhY2ggYmxv
Y2sgcmFuZ2UgY2FuJ3QgZ28gb3ZlciBhIHpvbmUgb2YKKwkgICByZXNwb25zaWJpbGl0eSBvZiBv
bmUgYml0bWFwIGJsb2NrOyBzYW1lIGFzc3VtcHRpb24gaXMgdXNlZCBpbgorCSAgIG90aGVyIGpv
dXJuYWwgaG9va3MgaW4gYml0bWFwIGNvZGUuICovCisJYm5vZGUgPSBnZXRfYm5vZGUoc2IsIGJt
YXApOworCWFzc2VydCgiemFtLTQ0OCIsIGJub2RlICE9IE5VTEwpOworCisJLyogaXQgaXMgc2Fm
ZSB0byB1bmxvY2sgYXRvbSB3aXRoIGlzIGluIEFTVEFHRV9QUkVfQ09NTUlUICovCisJYXNzZXJ0
KCJ6YW0tNzY3IiwgYXRvbS0+c3RhZ2UgPT0gQVNUQUdFX1BSRV9DT01NSVQpOworCXJldCA9IGxv
YWRfYW5kX2xvY2tfYm5vZGUoYm5vZGUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkv
KiBwdXQgYm5vZGUgaW50byBhdG9tJ3Mgb3ZlcndyaXRlIHNldCAqLworCWNvbmRfYWRkX3RvX292
ZXJ3cml0ZV9zZXQoYXRvbSwgYm5vZGUtPmNqbm9kZSk7CisKKwlkYXRhID0gYm5vZGVfY29tbWl0
X2RhdGEoYm5vZGUpOworCisJcmV0ID0gYm5vZGVfY2hlY2tfY3JjKGJub2RlKTsKKwlpZiAocmV0
ICE9IDApCisJCXJldHVybiByZXQ7CisKKwlpZiAobGVuICE9IE5VTEwpIHsKKwkJLyogRklYTUUt
WkFNOiBhIGNoZWNrIHRoYXQgYWxsIGJpdHMgYXJlIHNldCBzaG91bGQgYmUgdGhlcmUgKi8KKwkJ
YXNzZXJ0KCJ6YW0tNDQzIiwKKwkJICAgICAgIG9mZnNldCArICpsZW4gPD0gYm1hcF9iaXRfY291
bnQoc2ItPnNfYmxvY2tzaXplKSk7CisJCXJlaXNlcjRfY2xlYXJfYml0cyhkYXRhLCBvZmZzZXQs
IChibWFwX29mZl90KSAob2Zmc2V0ICsgKmxlbikpOworCisJCSgqYmxvY2tzX2ZyZWVkX3ApICs9
ICpsZW47CisJfSBlbHNlIHsKKwkJcmVpc2VyNF9jbGVhcl9iaXQob2Zmc2V0LCBkYXRhKTsKKwkJ
KCpibG9ja3NfZnJlZWRfcCkrKzsKKwl9CisKKwlibm9kZV9zZXRfY29tbWl0X2NyYyhibm9kZSwg
Ym5vZGVfY2FsY19jcmMoYm5vZGUsIHNiLT5zX2Jsb2Nrc2l6ZSkpOworCisJcmVsZWFzZV9hbmRf
dW5sb2NrX2Jub2RlKGJub2RlKTsKKworCXJldHVybiAwOworfQorCisvKiBwbHVnaW4tPnUuc3Bh
Y2VfYWxsb2NhdG9yLnByZV9jb21taXRfaG9vaygpLiAqLworLyogSXQganVzdCBhcHBsaWVzIHRy
YW5zYWN0aW9uIGNoYW5nZXMgdG8gZnMtd2lkZSBDT01NSVQgQklUTUFQLCBob3BpbmcgdGhlCisg
ICByZXN0IGlzIGRvbmUgYnkgdHJhbnNhY3Rpb24gbWFuYWdlciAoYWxsb2NhdGUgd2FuZGVyZWQg
bG9jYXRpb25zIGZvciBDT01NSVQKKyAgIEJJVE1BUCBibG9ja3MsIGNvcHkgQ09NTUlUIEJJVE1B
UCBibG9ja3MgZGF0YSkuICovCisvKiBPbmx5IG9uZSBpbnN0YW5jZSBvZiB0aGlzIGZ1bmN0aW9u
IGNhbiBiZSBydW5uaW5nIGF0IG9uZSBnaXZlbiB0aW1lLCBiZWNhdXNlCisgICBvbmx5IG9uZSB0
cmFuc2FjdGlvbiBjYW4gYmUgY29tbWl0dGVkIGEgdGltZSwgdGhlcmVmb3JlIGl0IGlzIHNhZmUg
dG8gYWNjZXNzCisgICBzb21lIGdsb2JhbCB2YXJpYWJsZXMgd2l0aG91dCBhbnkgbG9ja2luZyAq
LworCitpbnQgcmVpc2VyNF9wcmVfY29tbWl0X2hvb2tfYml0bWFwKHZvaWQpCit7CisJc3RydWN0
IHN1cGVyX2Jsb2NrICpzdXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKwl0eG5fYXRv
bSAqYXRvbTsKKworCWxvbmcgbG9uZyBibG9ja3NfZnJlZWQgPSAwOworCisJYXRvbSA9IGdldF9j
dXJyZW50X2F0b21fbG9ja2VkKCk7CisJYXNzZXJ0KCJ6YW0tODc2IiwgYXRvbS0+c3RhZ2UgPT0g
QVNUQUdFX1BSRV9DT01NSVQpOworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisKKwl7CQkJLyog
c2NhbiBhdG9tJ3MgY2FwdHVyZWQgbGlzdCBhbmQgZmluZCBhbGwgZnJlc2hseSBhbGxvY2F0ZWQg
bm9kZXMsCisJCQkJICogbWFyayBjb3JyZXNwb25kZWQgYml0cyBpbiBDT01NSVQgQklUTUFQIGFz
IHVzZWQgKi8KKwkJc3RydWN0IGxpc3RfaGVhZCAqaGVhZCA9IEFUT01fQ0xFQU5fTElTVChhdG9t
KTsKKwkJam5vZGUgKm5vZGUgPSBsaXN0X2VudHJ5KGhlYWQtPm5leHQsIGpub2RlLCBjYXB0dXJl
X2xpbmspOworCisJCXdoaWxlIChoZWFkICE9ICZub2RlLT5jYXB0dXJlX2xpbmspIHsKKwkJCS8q
IHdlIGRldGVjdCBmcmVzaGx5IGFsbG9jYXRlZCBqbm9kZXMgKi8KKwkJCWlmIChKRl9JU1NFVChu
b2RlLCBKTk9ERV9SRUxPQykpIHsKKwkJCQlpbnQgcmV0OworCQkJCWJtYXBfbnJfdCBibWFwOwor
CisJCQkJYm1hcF9vZmZfdCBvZmZzZXQ7CisJCQkJYm1hcF9vZmZfdCBpbmRleDsKKwkJCQlzdHJ1
Y3QgYml0bWFwX25vZGUgKmJuOworCQkJCV9fdTMyIHNpemUgPSBibWFwX3NpemUoc3VwZXItPnNf
YmxvY2tzaXplKTsKKwkJCQlfX3UzMiBjcmM7CisJCQkJY2hhciBieXRlOworCisJCQkJYXNzZXJ0
KCJ6YW0tNTU5IiwgIUpGX0lTU0VUKG5vZGUsIEpOT0RFX09WUldSKSk7CisJCQkJYXNzZXJ0KCJ6
YW0tNDYwIiwKKwkJCQkgICAgICAgIXJlaXNlcjRfYmxvY2tucl9pc19mYWtlKCZub2RlLT5ibG9j
a25yKSk7CisKKwkJCQlwYXJzZV9ibG9ja25yKCZub2RlLT5ibG9ja25yLCAmYm1hcCwgJm9mZnNl
dCk7CisJCQkJYm4gPSBnZXRfYm5vZGUoc3VwZXIsIGJtYXApOworCisJCQkJaW5kZXggPSBvZmZz
ZXQgPj4gMzsKKwkJCQlhc3NlcnQoInZwZi0yNzYiLCBpbmRleCA8IHNpemUpOworCisJCQkJcmV0
ID0gYm5vZGVfY2hlY2tfY3JjKGJub2RlKTsKKwkJCQlpZiAocmV0ICE9IDApCisJCQkJCXJldHVy
biByZXQ7CisKKwkJCQljaGVja19ibm9kZV9sb2FkZWQoYm4pOworCQkJCWxvYWRfYW5kX2xvY2tf
Ym5vZGUoYm4pOworCisJCQkJYnl0ZSA9ICooYm5vZGVfY29tbWl0X2RhdGEoYm4pICsgaW5kZXgp
OworCQkJCXJlaXNlcjRfc2V0X2JpdChvZmZzZXQsIGJub2RlX2NvbW1pdF9kYXRhKGJuKSk7CisK
KwkJCQljcmMgPSBhZGxlcjMyX3JlY2FsYyhibm9kZV9jb21taXRfY3JjKGJuKSwgYnl0ZSwKKwkJ
CQkJCSAgICAgKihibm9kZV9jb21taXRfZGF0YShibikgKworCQkJCQkJICAgICAgIGluZGV4KSwK
KwkJCQkJCSAgICAgc2l6ZSAtIGluZGV4KSwKKwkJCQkgICAgYm5vZGVfc2V0X2NvbW1pdF9jcmMo
Ym4sIGNyYyk7CisKKwkJCQlyZWxlYXNlX2FuZF91bmxvY2tfYm5vZGUoYm4pOworCisJCQkJcmV0
ID0gYm5vZGVfY2hlY2tfY3JjKGJuKTsKKwkJCQlpZiAocmV0ICE9IDApCisJCQkJCXJldHVybiBy
ZXQ7CisKKwkJCQkvKiB3b3JraW5nIG9mIHRoaXMgZGVwZW5kcyBvbiBob3cgaXQgaW5zZXJ0cwor
CQkJCSAgIG5ldyBqLW5vZGUgaW50byBjbGVhbiBsaXN0LCBiZWNhdXNlIHdlIGFyZQorCQkJCSAg
IHNjYW5uaW5nIHRoZSBzYW1lIGxpc3Qgbm93LiBJdCBpcyBPSywgaWYKKwkJCQkgICBpbnNlcnRp
b24gaXMgZG9uZSB0byB0aGUgbGlzdCBmcm9udCAqLworCQkJCWNvbmRfYWRkX3RvX292ZXJ3cml0
ZV9zZXQoYXRvbSwgYm4tPmNqbm9kZSk7CisJCQl9CisKKwkJCW5vZGUgPSBsaXN0X2VudHJ5KG5v
ZGUtPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5rKTsKKwkJfQorCX0KKwor
CWF0b21fZHNldF9kZWZlcnJlZF9hcHBseShhdG9tLCBhcHBseV9kc2V0X3RvX2NvbW1pdF9ibWFw
LCAmYmxvY2tzX2ZyZWVkLCAwKTsKKworCWJsb2Nrc19mcmVlZCAtPSBhdG9tLT5ucl9ibG9ja3Nf
YWxsb2NhdGVkOworCisJeworCQlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCisJ
CXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKworCQlzcGluX2xvY2tfcmVpc2Vy
NF9zdXBlcihzYmluZm8pOworCQlzYmluZm8tPmJsb2Nrc19mcmVlX2NvbW1pdHRlZCArPSBibG9j
a3NfZnJlZWQ7CisJCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3VwZXIoc2JpbmZvKTsKKwl9CisKKwly
ZXR1cm4gMDsKK30KKworLyogcGx1Z2luLT51LnNwYWNlX2FsbG9jYXRvci5pbml0X2FsbG9jYXRv
cgorICAgIGNvbnN0cnVjdG9yIG9mIHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yIG9iamVjdC4gSXQg
aXMgY2FsbGVkIG9uIGZzIG1vdW50ICovCitpbnQgcmVpc2VyNF9pbml0X2FsbG9jYXRvcl9iaXRt
YXAocmVpc2VyNF9zcGFjZV9hbGxvY2F0b3IgKiBhbGxvY2F0b3IsCisJCQkJICBzdHJ1Y3Qgc3Vw
ZXJfYmxvY2sgKnN1cGVyLCB2b2lkICphcmcpCit7CisJc3RydWN0IGJpdG1hcF9hbGxvY2F0b3Jf
ZGF0YSAqZGF0YSA9IE5VTEw7CisJYm1hcF9ucl90IGJpdG1hcF9ibG9ja3NfbnI7CisJYm1hcF9u
cl90IGk7CisKKwlhc3NlcnQoIm5pa2l0YS0zMDM5IiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsK
KworCS8qIGdldHRpbmcgbWVtb3J5IGZvciBiaXRtYXAgYWxsb2NhdG9yIHByaXZhdGUgZGF0YSBo
b2xkZXIgKi8KKwlkYXRhID0KKwkJa21hbGxvYyhzaXplb2Yoc3RydWN0IGJpdG1hcF9hbGxvY2F0
b3JfZGF0YSksCisJCQlyZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisKKwlpZiAoZGF0YSA9
PSBOVUxMKQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJLyogYWxsb2NhdGlvbiBhbmQg
aW5pdGlhbGl6YXRpb24gZm9yIHRoZSBhcnJheSBvZiBibm9kZXMgKi8KKwliaXRtYXBfYmxvY2tz
X25yID0gZ2V0X25yX2JtYXAoc3VwZXIpOworCisJLyogRklYTUUtWkFNOiBpdCBpcyBub3QgY2xl
YXIgd2hhdCB0byBkbyB3aXRoIGh1Z2UgbnVtYmVyIG9mIGJpdG1hcHMKKwkgICB3aGljaCBpcyBi
aWdnZXIgdGhhbiAyXjMyICg9IDggKiA0MDk2ICogNDA5NiAqIDJeMzIgYnl0ZXMgPSA1Ljc2ZSsx
NywKKwkgICBtYXkgSSBuZXZlciBtZWV0IHNvbWVvbmUgd2hvIHN0aWxsIHVzZXMgdGhlIGlhMzIg
YXJjaGl0ZWN0dXJlIHdoZW4KKwkgICBzdG9yYWdlIGRldmljZXMgb2YgdGhhdCBzaXplIGVudGVy
IHRoZSBtYXJrZXQsIGFuZCB3YW50cyB0byB1c2UgaWEzMgorCSAgIHdpdGggdGhhdCBzdG9yYWdl
IGRldmljZSwgbXVjaCBsZXNzIHJlaXNlcjQuIDstKSAtSGFucykuIEttYWxsb2MgaXMgbm90IHBv
c3NpYmxlIGFuZCwKKwkgICBwcm9iYWJseSwgYW5vdGhlciBkeW5hbWljIGRhdGEgc3RydWN0dXJl
IHNob3VsZCByZXBsYWNlIGEgc3RhdGljCisJICAgYXJyYXkgb2YgYm5vZGVzLiAqLworCS8qZGF0
YS0+Yml0bWFwID0gcmVpc2VyNF9rbWFsbG9jKChzaXplX3QpIChzaXplb2YgKHN0cnVjdCBiaXRt
YXBfbm9kZSkgKiBiaXRtYXBfYmxvY2tzX25yKSwgR0ZQX0tFUk5FTCk7ICovCisJZGF0YS0+Yml0
bWFwID0gcmVpc2VyNF92bWFsbG9jKHNpemVvZihzdHJ1Y3QgYml0bWFwX25vZGUpICogYml0bWFw
X2Jsb2Nrc19ucik7CisJaWYgKGRhdGEtPmJpdG1hcCA9PSBOVUxMKSB7CisJCWtmcmVlKGRhdGEp
OworCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCX0KKworCWZvciAoaSA9IDA7IGkgPCBiaXRt
YXBfYmxvY2tzX25yOyBpKyspCisJCWluaXRfYm5vZGUoZGF0YS0+Yml0bWFwICsgaSwgc3VwZXIs
IGkpOworCisJYWxsb2NhdG9yLT51LmdlbmVyaWMgPSBkYXRhOworCisjaWYgUkVJU0VSNF9ERUJV
RworCWdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+bWluX2Jsb2Nrc191c2VkICs9IGJpdG1hcF9i
bG9ja3NfbnI7CisjZW5kaWYKKworCS8qIExvYWQgYWxsIGJpdG1hcCBibG9ja3MgYXQgbW91bnQg
dGltZS4gKi8KKwlpZiAoIXRlc3RfYml0CisJICAgIChSRUlTRVI0X0RPTlRfTE9BRF9CSVRNQVAs
ICZnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPmZzX2ZsYWdzKSkgeworCQlfX3U2NCBzdGFydF90
aW1lLCBlbGFwc2VkX3RpbWU7CisJCXN0cnVjdCBiaXRtYXBfbm9kZSAqYm5vZGU7CisJCWludCBy
ZXQ7CisKKwkJaWYgKFJFSVNFUjRfREVCVUcpCisJCQlwcmludGsoS0VSTl9JTkZPICJsb2FkaW5n
IHJlaXNlcjQgYml0bWFwLi4uIik7CisJCXN0YXJ0X3RpbWUgPSBqaWZmaWVzOworCisJCWZvciAo
aSA9IDA7IGkgPCBiaXRtYXBfYmxvY2tzX25yOyBpKyspIHsKKwkJCWJub2RlID0gZGF0YS0+Yml0
bWFwICsgaTsKKwkJCXJldCA9IGxvYWRfYW5kX2xvY2tfYm5vZGUoYm5vZGUpOworCQkJaWYgKHJl
dCkgeworCQkJCXJlaXNlcjRfZGVzdHJveV9hbGxvY2F0b3JfYml0bWFwKGFsbG9jYXRvciwKKwkJ
CQkJCQkJIHN1cGVyKTsKKwkJCQlyZXR1cm4gcmV0OworCQkJfQorCQkJcmVsZWFzZV9hbmRfdW5s
b2NrX2Jub2RlKGJub2RlKTsKKwkJfQorCisJCWVsYXBzZWRfdGltZSA9IGppZmZpZXMgLSBzdGFy
dF90aW1lOworCQlpZiAoUkVJU0VSNF9ERUJVRykKKwkJCXByaW50aygiLi4uZG9uZSAoJWxsdSBq
aWZmaWVzKVxuIiwKKwkJCSAgICAgICAodW5zaWduZWQgbG9uZyBsb25nKWVsYXBzZWRfdGltZSk7
CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIHBsdWdpbi0+dS5zcGFjZV9hbGxvY2F0b3IuZGVz
dHJveV9hbGxvY2F0b3IKKyAgIGRlc3RydWN0b3IuIEl0IGlzIGNhbGxlZCBvbiBmcyB1bm1vdW50
ICovCitpbnQgcmVpc2VyNF9kZXN0cm95X2FsbG9jYXRvcl9iaXRtYXAocmVpc2VyNF9zcGFjZV9h
bGxvY2F0b3IgKiBhbGxvY2F0b3IsCisJCQkJICAgICBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVy
KQoreworCWJtYXBfbnJfdCBiaXRtYXBfYmxvY2tzX25yOworCWJtYXBfbnJfdCBpOworCisJc3Ry
dWN0IGJpdG1hcF9hbGxvY2F0b3JfZGF0YSAqZGF0YSA9IGFsbG9jYXRvci0+dS5nZW5lcmljOwor
CisJYXNzZXJ0KCJ6YW0tNDE0IiwgZGF0YSAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS0zNzYiLCBk
YXRhLT5iaXRtYXAgIT0gTlVMTCk7CisKKwliaXRtYXBfYmxvY2tzX25yID0gZ2V0X25yX2JtYXAo
c3VwZXIpOworCisJZm9yIChpID0gMDsgaSA8IGJpdG1hcF9ibG9ja3NfbnI7IGkrKykgeworCQlz
dHJ1Y3QgYml0bWFwX25vZGUgKmJub2RlID0gZGF0YS0+Yml0bWFwICsgaTsKKworCQltdXRleF9s
b2NrKCZibm9kZS0+bXV0ZXgpOworCisjaWYgUkVJU0VSNF9ERUJVRworCQlpZiAoYXRvbWljX3Jl
YWQoJmJub2RlLT5sb2FkZWQpKSB7CisJCQlqbm9kZSAqd2ogPSBibm9kZS0+d2pub2RlOworCQkJ
am5vZGUgKmNqID0gYm5vZGUtPmNqbm9kZTsKKworCQkJYXNzZXJ0KCJ6YW0tNDgwIiwgam5vZGVf
cGFnZShjaikgIT0gTlVMTCk7CisJCQlhc3NlcnQoInphbS02MzMiLCBqbm9kZV9wYWdlKHdqKSAh
PSBOVUxMKTsKKworCQkJYXNzZXJ0KCJ6YW0tNjM0IiwKKwkJCSAgICAgICBtZW1jbXAoamRhdGEo
d2opLCBqZGF0YSh3aiksCisJCQkJICAgICAgYm1hcF9zaXplKHN1cGVyLT5zX2Jsb2Nrc2l6ZSkp
ID09IDApOworCisJCX0KKyNlbmRpZgorCQlkb25lX2Jub2RlKGJub2RlKTsKKwkJbXV0ZXhfdW5s
b2NrKCZibm9kZS0+bXV0ZXgpOworCX0KKworCXZmcmVlKGRhdGEtPmJpdG1hcCk7CisJa2ZyZWUo
ZGF0YSk7CisKKwlhbGxvY2F0b3ItPnUuZ2VuZXJpYyA9IE5VTEw7CisKKwlyZXR1cm4gMDsKK30K
KworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIi
CisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4CisgKiB0YWItd2lkdGg6
IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogc2Nyb2xsLXN0ZXA6IDEKKyAqIEVuZDoKKyAqLwpk
aWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3Bs
dWdpbi9zcGFjZS9iaXRtYXAuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vc3BhY2Uv
Yml0bWFwLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3NwYWNlL2Jp
dG1hcC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC9wbHVnaW4vc3BhY2UvYml0bWFwLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40
NzcyMjIzNjQgKzAxMDAKQEAgLTAsMCArMSw0NyBAQAorLyogQ29weXJpZ2h0IDIwMDIsIDIwMDMg
YnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLwor
CisjaWYgIWRlZmluZWQgKF9fUkVJU0VSNF9QTFVHSU5fU1BBQ0VfQklUTUFQX0hfXykKKyNkZWZp
bmUgX19SRUlTRVI0X1BMVUdJTl9TUEFDRV9CSVRNQVBfSF9fCisKKyNpbmNsdWRlICIuLi8uLi9k
Zm9ybWF0LmgiCisjaW5jbHVkZSAiLi4vLi4vYmxvY2tfYWxsb2MuaCIKKworI2luY2x1ZGUgPGxp
bnV4L3R5cGVzLmg+CS8qIGZvciBfX3U/PyAgKi8KKyNpbmNsdWRlIDxsaW51eC9mcy5oPgkJLyog
Zm9yIHN0cnVjdCBzdXBlcl9ibG9jayAgKi8KKy8qIEVEV0FSRC1GSVhNRS1IQU5TOiB3cml0ZSBz
b21ldGhpbmcgYXMgaW5mb3JtYXRpdmUgYXMgdGhlIGJlbG93IGZvciBldmVyeSAuaCBmaWxlIGxh
Y2tpbmcgaXQuICovCisvKiBkZWNsYXJhdGlvbnMgb2YgZnVuY3Rpb25zIGltcGxlbWVudGluZyBt
ZXRob2RzIG9mIHNwYWNlIGFsbG9jYXRvciBwbHVnaW4gZm9yCisgICBiaXRtYXAgYmFzZWQgYWxs
b2NhdG9yLiBUaGUgZnVuY3Rpb25zIHRoZW1zZWx2ZXMgYXJlIGluIGJpdG1hcC5jICovCitleHRl
cm4gaW50IHJlaXNlcjRfaW5pdF9hbGxvY2F0b3JfYml0bWFwKHJlaXNlcjRfc3BhY2VfYWxsb2Nh
dG9yICosCisJCQkJCSBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKiwgdm9pZCAqKTsKK2V4dGVybiBpbnQg
cmVpc2VyNF9kZXN0cm95X2FsbG9jYXRvcl9iaXRtYXAocmVpc2VyNF9zcGFjZV9hbGxvY2F0b3Ig
KiwKKwkJCQkJICAgIHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9h
bGxvY19ibG9ja3NfYml0bWFwKHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yICosCisJCQkJICAgICAg
IHJlaXNlcjRfYmxvY2tucl9oaW50ICosIGludCBuZWVkZWQsCisJCQkJICAgICAgIHJlaXNlcjRf
YmxvY2tfbnIgKiBzdGFydCwKKwkJCQkgICAgICAgcmVpc2VyNF9ibG9ja19uciAqIGxlbik7Citl
eHRlcm4gaW50IHJlaXNlcjRfY2hlY2tfYmxvY2tzX2JpdG1hcChjb25zdCByZWlzZXI0X2Jsb2Nr
X25yICosCisJCQkJCWNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiwgaW50KTsKK2V4dGVybiB2b2lk
IHJlaXNlcjRfZGVhbGxvY19ibG9ja3NfYml0bWFwKHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yICos
CisJCQkJCSAgcmVpc2VyNF9ibG9ja19uciwKKwkJCQkJICByZWlzZXI0X2Jsb2NrX25yKTsKK2V4
dGVybiBpbnQgcmVpc2VyNF9wcmVfY29tbWl0X2hvb2tfYml0bWFwKHZvaWQpOworCisjZGVmaW5l
IHJlaXNlcjRfcG9zdF9jb21taXRfaG9va19iaXRtYXAoKSBkb3t9d2hpbGUoMCkKKyNkZWZpbmUg
cmVpc2VyNF9wb3N0X3dyaXRlX2JhY2tfaG9va19iaXRtYXAoKSBkb3t9d2hpbGUoMCkKKyNkZWZp
bmUgcmVpc2VyNF9wcmludF9pbmZvX2JpdG1hcChwcmVmLCBhbCkgZG97fXdoaWxlKDApCisKK3R5
cGVkZWYgX191NjQgYm1hcF9ucl90OwordHlwZWRlZiBfX3UzMiBibWFwX29mZl90OworCisjZW5k
aWYJCQkJLyogX19SRUlTRVI0X1BMVUdJTl9TUEFDRV9CSVRNQVBfSF9fICovCisKKy8qIE1ha2Ug
TGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxl
OiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFi
LXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5k
OgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC9wbHVnaW4vc3BhY2UvTWFrZWZpbGUgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2lu
L3NwYWNlL01ha2VmaWxlCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3BsdWdpbi9z
cGFjZS9NYWtlZmlsZQkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGlu
dXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3NwYWNlL01ha2VmaWxlCTIwMjAtMDItMDUgMjA6
NTM6NDEuNDc3MjIyMzY0ICswMTAwCkBAIC0wLDAgKzEsNCBAQAorb2JqLSQoQ09ORklHX1JFSVNF
UjRfRlMpICs9IHNwYWNlX3BsdWdpbnMubworCitzcGFjZV9wbHVnaW5zLW9ianMgOj0gXAorCWJp
dG1hcC5vCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3Jl
aXNlcjQvcGx1Z2luL3NwYWNlL3NwYWNlX2FsbG9jYXRvci5oIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L3BsdWdpbi9zcGFjZS9zcGFjZV9hbGxvY2F0b3IuaAotLS0gbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wbHVnaW4vc3BhY2Uvc3BhY2VfYWxsb2NhdG9yLmgJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi9z
cGFjZS9zcGFjZV9hbGxvY2F0b3IuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3NzIyMjM2NCArMDEw
MApAQCAtMCwwICsxLDgwIEBACisvKiBDb3B5cmlnaHQgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNl
ciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJlaXNlcjQvUkVBRE1FICovCisKKyNpZm5kZWYgX19T
UEFDRV9BTExPQ0FUT1JfSF9fCisjZGVmaW5lIF9fU1BBQ0VfQUxMT0NBVE9SX0hfXworCisjaW5j
bHVkZSAiLi4vLi4vZm9yd2FyZC5oIgorI2luY2x1ZGUgImJpdG1hcC5oIgorLyogTklLSVRBLUZJ
WE1FLUhBTlM6IHN1cmVseSB0aGlzIGNvdWxkIHVzZSBhIGNvbW1lbnQuIFNvbWV0aGluZyBhYm91
dCBob3cgYml0bWFwIGlzIHRoZSBvbmx5IHNwYWNlIGFsbG9jYXRvciBmb3Igbm93LAorICogYnV0
Li4uICovCisjZGVmaW5lIERFRl9TUEFDRV9BTExPQ0FUT1IoYWxsb2NhdG9yKQkJCQkJCQkJCQkJ
XAorCQkJCQkJCQkJCQkJCQkJXAorc3RhdGljIGlubGluZSBpbnQgc2FfaW5pdF9hbGxvY2F0b3Ig
KHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yICogYWwsIHN0cnVjdCBzdXBlcl9ibG9jayAqcywgdm9p
ZCAqIG9wYXF1ZSkJCVwKK3sJCQkJCQkJCQkJCQkJCQlcCisJcmV0dXJuIHJlaXNlcjRfaW5pdF9h
bGxvY2F0b3JfIyNhbGxvY2F0b3IgKGFsLCBzLCBvcGFxdWUpOwkgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCit9CQkJCQkJCQkJCQkJCQkJXAorCQkJCQkJ
CQkJCQkJCQkJXAorc3RhdGljIGlubGluZSB2b2lkIHNhX2Rlc3Ryb3lfYWxsb2NhdG9yIChyZWlz
ZXI0X3NwYWNlX2FsbG9jYXRvciAqYWwsIHN0cnVjdCBzdXBlcl9ibG9jayAqcykJCQkJXAorewkJ
CQkJCQkJCQkJCQkJCVwKKwlyZWlzZXI0X2Rlc3Ryb3lfYWxsb2NhdG9yXyMjYWxsb2NhdG9yIChh
bCwgcyk7CQkJCQkJCQkJXAorfQkJCQkJCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJCQkJCVwKK3N0
YXRpYyBpbmxpbmUgaW50IHNhX2FsbG9jX2Jsb2NrcyAocmVpc2VyNF9zcGFjZV9hbGxvY2F0b3Ig
KmFsLCByZWlzZXI0X2Jsb2NrbnJfaGludCAqIGhpbnQsIAkJCQlcCisJCQkJICAgaW50IG5lZWRl
ZCwgcmVpc2VyNF9ibG9ja19uciAqIHN0YXJ0LCByZWlzZXI0X2Jsb2NrX25yICogbGVuKQkJCVwK
K3sJCQkJCQkJCQkJCQkJCQlcCisJcmV0dXJuIHJlaXNlcjRfYWxsb2NfYmxvY2tzXyMjYWxsb2Nh
dG9yIChhbCwgaGludCwgbmVlZGVkLCBzdGFydCwgbGVuKTsJCQkJCQlcCit9CQkJCQkJCQkJCQkJ
CQkJXAorc3RhdGljIGlubGluZSB2b2lkIHNhX2RlYWxsb2NfYmxvY2tzIChyZWlzZXI0X3NwYWNl
X2FsbG9jYXRvciAqIGFsLCByZWlzZXI0X2Jsb2NrX25yIHN0YXJ0LCByZWlzZXI0X2Jsb2NrX25y
IGxlbikJXAorewkJCQkJCQkJCQkJCQkJCVwKKwlyZWlzZXI0X2RlYWxsb2NfYmxvY2tzXyMjYWxs
b2NhdG9yIChhbCwgc3RhcnQsIGxlbik7CQkJCQkJCQlcCit9CQkJCQkJCQkJCQkJCQkJXAorCQkJ
CQkJCQkJCQkJCQkJXAorc3RhdGljIGlubGluZSBpbnQgc2FfY2hlY2tfYmxvY2tzIChjb25zdCBy
ZWlzZXI0X2Jsb2NrX25yICogc3RhcnQsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBlbmQsIGlu
dCBkZXNpcmVkKSAJCVwKK3sJCQkJCQkJCQkJCQkJCQlcCisJcmV0dXJuIHJlaXNlcjRfY2hlY2tf
YmxvY2tzXyMjYWxsb2NhdG9yIChzdGFydCwgZW5kLCBkZXNpcmVkKTsJCQkJCQkJICAgICAgICBc
Cit9CQkJCQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQkJCQkJXAorc3RhdGljIGlubGluZSB2b2lk
IHNhX3ByZV9jb21taXRfaG9vayAodm9pZCkJCQkJCQkJCQkJXAoreyAJCQkJCQkJCQkJCQkJCQlc
CisJcmVpc2VyNF9wcmVfY29tbWl0X2hvb2tfIyNhbGxvY2F0b3IgKCk7CQkJCQkJCQkJCVwKK30J
CQkJCQkJCQkJCQkJCQlcCisJCQkJCQkJCQkJCQkJCQlcCitzdGF0aWMgaW5saW5lIHZvaWQgc2Ff
cG9zdF9jb21taXRfaG9vayAodm9pZCkgCQkJCQkJCQkJCVwKK3sgCQkJCQkJCQkJCQkJCQkJXAor
CXJlaXNlcjRfcG9zdF9jb21taXRfaG9va18jI2FsbG9jYXRvciAoKTsJCQkJCQkJCQlcCit9CQkJ
CQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQkJCQkJXAorc3RhdGljIGlubGluZSB2b2lkIHNhX3Bv
c3Rfd3JpdGVfYmFja19ob29rICh2b2lkKSAJCQkJCQkJCQlcCit7IAkJCQkJCQkJCQkJCQkJCVwK
KwlyZWlzZXI0X3Bvc3Rfd3JpdGVfYmFja19ob29rXyMjYWxsb2NhdG9yKCk7CQkJCQkJCQkJXAor
fQkJCQkJCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJCQkJCVwKK3N0YXRpYyBpbmxpbmUgdm9pZCBz
YV9wcmludF9pbmZvKGNvbnN0IGNoYXIgKiBwcmVmaXgsIHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9y
ICogYWwpCQkJCQlcCit7CQkJCQkJCQkJCQkJCQkJXAorCXJlaXNlcjRfcHJpbnRfaW5mb18jI2Fs
bG9jYXRvciAocHJlZml4LCBhbCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCit9CisKK0RFRl9TUEFDRV9BTExPQ0FU
T1IoYml0bWFwKQorCisvKiB0aGlzIG9iamVjdCBpcyBwYXJ0IG9mIHJlaXNlcjQgcHJpdmF0ZSBp
bi1jb3JlIHN1cGVyIGJsb2NrICovCitzdHJ1Y3QgcmVpc2VyNF9zcGFjZV9hbGxvY2F0b3Igewor
CXVuaW9uIHsKKwkJLyogc3BhY2UgYWxsb2NhdG9ycyBtaWdodCB1c2UgdGhpcyBwb2ludGVyIHRv
IHJlZmVyZW5jZSB0aGVpcgorCQkgKiBkYXRhLiAqLworCQl2b2lkICpnZW5lcmljOworCX0gdTsK
K307CisKKy8qIF9fU1BBQ0VfQUxMT0NBVE9SX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGlu
dXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdp
ZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9wbHVnaW4vdGFpbF9wb2xpY3kuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wbHVnaW4vdGFp
bF9wb2xpY3kuYwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9wbHVnaW4vdGFpbF9w
b2xpY3kuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40
LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3RhaWxfcG9saWN5LmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40
NzcyMjIzNjQgKzAxMDAKQEAgLTAsMCArMSwxMTMgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAy
LCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQv
UkVBRE1FICovCisKKy8qIEZvcm1hdHRpbmcgcG9saWN5IHBsdWdpbnMgKi8KKworLyoKKyAqIEZv
cm1hdHRpbmcgcG9saWN5IHBsdWdpbiBpcyB1c2VkIGJ5IG9iamVjdCBwbHVnaW4gKG9mIHJlZ3Vs
YXIgZmlsZSkgdG8KKyAqIGNvbnZlcnQgZmlsZSBiZXR3ZWVuIHR3byByZXByZXNlbnRhdGlvbnMu
CisgKgorICogQ3VycmVudGx5IGZvbGxvd2luZyBwb2xpY2llcyBhcmUgaW1wbGVtZW50ZWQ6Cisg
KiAgbmV2ZXIgc3RvcmUgZmlsZSBpbiBmb3JtYXR0ZWQgbm9kZXMKKyAqICBhbHdheXMgc3RvcmUg
ZmlsZSBpbiBmb3JtYXR0ZWQgbm9kZXMKKyAqICBzdG9yZSBmaWxlIGluIGZvcm1hdHRlZCBub2Rl
cyBpZiBmaWxlIGlzIHNtYWxsZXIgdGhhbiA0IGJsb2NrcyAoZGVmYXVsdCkKKyAqLworCisjaW5j
bHVkZSAiLi4vdHJlZS5oIgorI2luY2x1ZGUgIi4uL2lub2RlLmgiCisjaW5jbHVkZSAiLi4vc3Vw
ZXIuaCIKKyNpbmNsdWRlICJvYmplY3QuaCIKKyNpbmNsdWRlICJwbHVnaW4uaCIKKyNpbmNsdWRl
ICJub2RlL25vZGUuaCIKKyNpbmNsdWRlICJwbHVnaW5faGVhZGVyLmgiCisKKyNpbmNsdWRlIDxs
aW51eC9wYWdlbWFwLmg+CisjaW5jbHVkZSA8bGludXgvZnMuaD4JCS8qIEZvciBzdHJ1Y3QgaW5v
ZGUgKi8KKworLyoqCisgKiBoYXZlX2Zvcm1hdHRpbmdfbmV2ZXIgLQorICogQGlub2RlOgorICog
QHNpemU6CisgKgorICoKKyAqLworLyogTmV2ZXIgc3RvcmUgZmlsZSdzIHRhaWwgYXMgZGlyZWN0
IGl0ZW0gKi8KKy8qIEF1ZGl0ZWQgYnk6IGdyZWVuKDIwMDIuMDYuMTIpICovCitzdGF0aWMgaW50
IGhhdmVfZm9ybWF0dGluZ19uZXZlcihjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlIFVOVVNFRF9B
UkcKKwkJICAgICAgLyogaW5vZGUgdG8gb3BlcmF0ZSBvbiAqLyAsCisJCSAgICAgIGxvZmZfdCBz
aXplIFVOVVNFRF9BUkcvKiBuZXcgb2JqZWN0IHNpemUgKi8pCit7CisJcmV0dXJuIDA7Cit9CisK
Ky8qIEFsd2F5cyBzdG9yZSBmaWxlJ3MgdGFpbCBhcyBkaXJlY3QgaXRlbSAqLworLyogQXVkaXRl
ZCBieTogZ3JlZW4oMjAwMi4wNi4xMikgKi8KK3N0YXRpYyBpbnQKK2hhdmVfZm9ybWF0dGluZ19h
bHdheXMoY29uc3Qgc3RydWN0IGlub2RlICppbm9kZSBVTlVTRURfQVJHCisJCSAgICAgICAvKiBp
bm9kZSB0byBvcGVyYXRlIG9uICovICwKKwkJICAgICAgIGxvZmZfdCBzaXplIFVOVVNFRF9BUkcv
KiBuZXcgb2JqZWN0IHNpemUgKi8pCit7CisJcmV0dXJuIDE7Cit9CisKKy8qIFRoaXMgZnVuY3Rp
b24gbWFrZXMgdGVzdCBpZiB3ZSBzaG91bGQgc3RvcmUgZmlsZSBkZW5vdGVkIEBpbm9kZSBhcyB0
YWlscyBvbmx5CisgICBvciBhcyBleHRlbnRzIG9ubHkuICovCitzdGF0aWMgaW50CitoYXZlX2Zv
cm1hdHRpbmdfZGVmYXVsdChjb25zdCBzdHJ1Y3QgaW5vZGUgKmlub2RlIFVOVVNFRF9BUkcKKwkJ
CS8qIGlub2RlIHRvIG9wZXJhdGUgb24gKi8gLAorCQkJbG9mZl90IHNpemUvKiBuZXcgb2JqZWN0
IHNpemUgKi8pCit7CisJYXNzZXJ0KCJ1bWthLTEyNTMiLCBpbm9kZSAhPSBOVUxMKTsKKworCWlm
IChzaXplID4gaW5vZGUtPmlfc2ItPnNfYmxvY2tzaXplICogNCkKKwkJcmV0dXJuIDA7CisKKwly
ZXR1cm4gMTsKK30KKworLyogdGFpbCBwbHVnaW5zICovCitmb3JtYXR0aW5nX3BsdWdpbiBmb3Jt
YXR0aW5nX3BsdWdpbnNbTEFTVF9UQUlMX0ZPUk1BVFRJTkdfSURdID0geworCVtORVZFUl9UQUlM
U19GT1JNQVRUSU5HX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfRk9S
TUFUVElOR19QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IE5FVkVSX1RBSUxTX0ZPUk1BVFRJTkdfSUQs
CisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAibmV2ZXIiLAorCQkJLmRlc2MgPSAiTmV2
ZXIgc3RvcmUgZmlsZSdzIHRhaWwiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwK
KwkJLmhhdmVfdGFpbCA9IGhhdmVfZm9ybWF0dGluZ19uZXZlcgorCX0sCisJW0FMV0FZU19UQUlM
U19GT1JNQVRUSU5HX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJFSVNFUjRfRk9S
TUFUVElOR19QTFVHSU5fVFlQRSwKKwkJCS5pZCA9IEFMV0FZU19UQUlMU19GT1JNQVRUSU5HX0lE
LAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0gImFsd2F5cyIsCisJCQkuZGVzYyA9CSJB
bHdheXMgc3RvcmUgZmlsZSdzIHRhaWwiLAorCQkJLmxpbmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJ
fSwKKwkJLmhhdmVfdGFpbCA9IGhhdmVfZm9ybWF0dGluZ19hbHdheXMKKwl9LAorCVtTTUFMTF9G
SUxFX0ZPUk1BVFRJTkdfSURdID0geworCQkuaCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9G
T1JNQVRUSU5HX1BMVUdJTl9UWVBFLAorCQkJLmlkID0gU01BTExfRklMRV9GT1JNQVRUSU5HX0lE
LAorCQkJLnBvcHMgPSBOVUxMLAorCQkJLmxhYmVsID0gIjRibG9ja3MiLAorCQkJLmRlc2MgPSAi
c3RvcmUgZmlsZXMgc2hvcnRlciB0aGFuIDQgYmxvY2tzIGluIHRhaWwgaXRlbXMiLAorCQkJLmxp
bmthZ2UgPSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmhhdmVfdGFpbCA9IGhhdmVfZm9ybWF0dGlu
Z19kZWZhdWx0CisJfQorfTsKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50
YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0
OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogRW5kOgorICovCmRp
ZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1
Z2luL3R4bW9kLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvcGx1Z2luL3R4bW9kLmMKLS0tIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcGx1Z2luL3R4bW9kLmMJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3BsdWdpbi90
eG1vZC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDc3MjIyMzY0ICswMTAwCkBAIC0wLDAgKzEsMTIz
OCBAQAorI2luY2x1ZGUgIi4uL2ZvcndhcmQuaCIKKyNpbmNsdWRlICIuLi9kZWJ1Zy5oIgorI2lu
Y2x1ZGUgIi4uL2Nvb3JkLmgiCisjaW5jbHVkZSAiLi4vcGx1Z2luL3BsdWdpbi5oIgorI2luY2x1
ZGUgIi4uL2pub2RlLmgiCisjaW5jbHVkZSAiLi4vem5vZGUuaCIKKyNpbmNsdWRlICIuLi9ibG9j
a19hbGxvYy5oIgorI2luY2x1ZGUgIi4uL3JlaXNlcjQuaCIKKyNpbmNsdWRlICIuLi9mbHVzaC5o
IgorCisvKgorICogVGhpcyBmaWxlIGNvbnRhaW5zIGltcGxlbWVudGF0aW9uIG9mIGRpZmZlcmVu
dCB0cmFuc2FjdGlvbiBtb2RlbHMuCisgKgorICogVHJhbnNhY3Rpb24gbW9kZWwgaXMgYSBoaWdo
LWxldmVsIGJsb2NrIGFsbG9jYXRvciwgd2hpY2ggYXNzaWducyBibG9jaworICogbnVtYmVycyB0
byBkaXJ0eSBub2RlcywgYW5kLCB0aGVyZWJ5LCBkZWNpZGVzLCBob3cgdGhvc2Ugbm9kZXMgd2ls
bCBiZQorICogY29tbWl0dGVkLgorICoKKyAqIEV2ZXJ5IGRpcnR5IG5vZGUgb2YgcmVpc2VyNCBh
dG9tIGNhbiBiZSBjb21taXR0ZWQgYnkgZWl0aGVyIG9mIHRoZQorICogZm9sbG93aW5nIHR3byB3
YXlzOgorICogMSkgdmlhIGpvdXJuYWw7CisgKiAyKSB1c2luZyAid3JpdGUtYW55d2hlcmUiIHRl
Y2huaXF1ZS4KKyAqCisgKiBJZiB0aGUgYWxsb2NhdG9yIGRvZXNuJ3QgY2hhbmdlIG9uLWRpc2sg
bG9jYXRpb24gb2YgYSBub2RlLCB0aGVuCisgKiB0aGlzIG5vZGUgd2lsbCBiZSBjb21taXR0ZWQg
dXNpbmcgam91cm5hbGxpbmcgdGVjaG5pcXVlIChvdmVyd3JpdGUpLgorICogT3RoZXJ3aXNlLCBp
dCB3aWxsIGJlIGNvbWl0dGVkIHZpYSB3cml0ZS1hbnl3aGVyZSB0ZWNobmlxdWUgKHJlbG9jYXRl
KToKKyAqCisgKiAgICAgICAgICAgIHJlbG9jYXRlICA8LS0tLSAgYWxsb2NhdGUgIC0tLSA+ICBv
dmVyd3JpdGUKKyAqCisgKiBTbywgaW4gb3VyIGludGVycHJldGF0aW9uIHRoZSAyIHRyYWRpdGlv
bmFsICJjbGFzc2ljIiBzdHJhdGVnaWVzIGluCisgKiBjb21taXR0aW5nIHRyYW5zYWN0aW9ucyAo
am91cm5hbGxpbmcgYW5kICJ3cml0ZS1hbnl3aGVyZSIpIGFyZSBqdXN0IHR3bworICogYm91bmRh
cnkgY2FzZXM6IDEpIHdoZW4gYWxsIG5vZGVzIGFyZSBvdmVyd3JpdHRlbiwgYW5kIDIpIHdoZW4g
YWxsIG5vZGVzCisgKiBhcmUgcmVsb2NhdGVkLgorICoKKyAqIEJlc2lkZXMgdGhvc2UgMiBib3Vu
ZGFyeSBjYXNlcyB3ZSBjYW4gaW1wbGVtZW50IGluIHJlaXNlcjQgdGhlIGluZmluaXRlCisgKiBz
ZXQgb2YgdGhlaXIgdmFyaW91cyBjb21iaW5hdGlvbnMsIHNvIHRoYXQgdXNlciBjYW4gY2hvb3Nl
IHdoYXQgaXMgcmVhbGx5CisgKiBzdWl0YWJsZSBmb3IgaGlzIG5lZWRzLgorICovCisKKy8qIGpu
b2RlX21ha2Vfd2FuZGVyX25vbG9jayA8LSBmaW5kX2ZsdXNoX3N0YXJ0X2pub2RlIChzcGVjaWFs
IGNhc2UgZm9yIHpub2RlLWFib3ZlLXJvb3QpCisgICAgICAgICAgICAgICAgICAgICAgICAgICAg
PC0gam5vZGVfbWFrZV93YW5kZXIgICovCit2b2lkIGpub2RlX21ha2Vfd2FuZGVyX25vbG9jayhq
bm9kZSAqIG5vZGUpOworCisvKiBqbm9kZV9tYWtlX3dhbmRlciA8LSB0eG1vZC5mb3J3YXJkX2Fs
bG9jX2Zvcm1hdHRlZCAqLwordm9pZCBqbm9kZV9tYWtlX3dhbmRlcihqbm9kZSAqIG5vZGUpOwor
CisvKiBqbm9kZV9tYWtlX3JlbG9jX25vbG9jayA8LSB6bm9kZV9tYWtlX3JlbG9jCisgICAgICAg
ICAgICAgICAgICAgICAgICAgICA8LSB1bmZvcm1hdHRlZF9tYWtlX3JlbG9jICovCitzdGF0aWMg
dm9pZCBqbm9kZV9tYWtlX3JlbG9jX25vbG9jayhmbHVzaF9xdWV1ZV90ICogZnEsIGpub2RlICog
bm9kZSk7CisKKworCisgICAgICAgICAgICAgICAgICAvKiBIYW5kbGUgZm9ybWF0dGVkIG5vZGVz
IGluIGZvcndhcmQgY29udGV4dCAqLworCisKKy8qKgorICogdHhtb2QuZm9yd2FyZF9hbGxvY19m
b3JtYXR0ZWQgPC0gYWxsb2NhdGVfem5vZGUgPC0gYWxsb2NfcG9zX2FuZF9hbmNlc3RvcnMgPC0g
am5vZGVfZmx1c2gKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDwtIGFsbG9jX29uZV9hbmNlc3RvciA8LSBhbGxvY19wb3NfYW5kX2FuY2VzdG9ycyA8
LSBqbm9kZV9mbHVzaAorICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICA8LSBhbGxvY19vbmVfYW5jZXN0b3IgKHJlY3Vyc2l2ZSkK
KyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwtIGxv
Y2tfcGFyZW50X2FuZF9hbGxvY2F0ZV96bm9kZSA8LSBzcXVhbGxvY191cHBlcl9sZXZlbHMgPC0g
Y2hlY2tfcGFyZW50c19hbmRfc3F1YWxsb2NfdXBwZXJfbGV2ZWxzIDwtIHNxdWFsbG9jX3VwcGVy
X2xldmVscyAocmVjdXJzaXZlKQorICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgPC0gaGFuZGxlX3Bvc19vbl9mb3JtYXR0ZWQKKyAqICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICA8LSBoYW5kbGVfcG9zX29uX2Zvcm1hdHRlZAorICogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDwtIGhhbmRsZV9wb3NfZW5kX29mX3R3aWcKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIDwtIGhhbmRsZV9wb3NfdG9fbGVhZgorICovCit2b2lkIHpu
b2RlX21ha2VfcmVsb2Moem5vZGUgKiB6LCBmbHVzaF9xdWV1ZV90ICogZnEpOworCisKKyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgLyogSGFuZGxlIHVuZm9ybWF0dGVkIG5vZGVzICovCisK
KworLyogdW5mb3JtYXR0ZWRfbWFrZV9yZWxvYyA8LSBhc3NpZ25fcmVhbF9ibG9ja25ycyA8LSB0
eG1vZC5mb3J3YXJkX2FsbG9jX3VuZm9ybWF0dGVkCisgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIDwtIHR4bW9kLnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0
ZWQKKyovCit2b2lkIHVuZm9ybWF0dGVkX21ha2VfcmVsb2Moam5vZGUgKm5vZGUsIGZsdXNoX3F1
ZXVlX3QgKmZxKTsKKworc3RhdGljIHZvaWQgZm9yd2FyZF9vdmVyd3JpdGVfdW5mb3JtYXR0ZWQo
Zmx1c2hfcG9zX3QgKmZsdXNoX3Bvcywgb2lkX3Qgb2lkLAorCQkJCSAgdW5zaWduZWQgbG9uZyBp
bmRleCwgcmVpc2VyNF9ibG9ja19uciB3aWR0aCk7CisKKy8qIG1hcmtfam5vZGVfb3ZlcndyaXRl
IDwtIGZvcndhcmRfb3ZlcndyaXRlX3VuZm9ybWF0dGVkIDwtIHR4bW9kLmZvcndhcmRfYWxsb2Nf
dW5mb3JtYXR0ZWQKKyAgICAgICAgICAgICAgICAgICAgICAgICAgIHNxdWVlemVfb3ZlcndyaXRl
X3VuZm9ybWF0dGVkIDwtIHR4bW9kLnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWQKKyovCitzdGF0
aWMgdm9pZCBtYXJrX2pub2RlX292ZXJ3cml0ZShzdHJ1Y3QgbGlzdF9oZWFkICpqbm9kZXMsIGpu
b2RlICpub2RlKTsKKworaW50IHNwbGl0X2FsbG9jYXRlZF9leHRlbnQoY29vcmRfdCAqY29vcmQs
IHJlaXNlcjRfYmxvY2tfbnIgcG9zX2luX3VuaXQpOworaW50IGFsbG9jYXRlZF9leHRlbnRfc2x1
bV9zaXplKGZsdXNoX3Bvc190ICpmbHVzaF9wb3MsIG9pZF90IG9pZCwKKwkJCSAgICAgICB1bnNp
Z25lZCBsb25nIGluZGV4LCB1bnNpZ25lZCBsb25nIGNvdW50KTsKK3ZvaWQgYWxsb2NhdGVfYmxv
Y2tzX3VuZm9ybWF0dGVkKHJlaXNlcjRfYmxvY2tucl9oaW50ICpwcmVjZWRlciwKKwkJCQkgcmVp
c2VyNF9ibG9ja19uciB3YW50ZWRfY291bnQsCisJCQkJIHJlaXNlcjRfYmxvY2tfbnIgKmZpcnN0
X2FsbG9jYXRlZCwKKwkJCQkgcmVpc2VyNF9ibG9ja19uciAqYWxsb2NhdGVkLAorCQkJCSBibG9j
a19zdGFnZV90IGJsb2NrX3N0YWdlKTsKK3ZvaWQgYXNzaWduX3JlYWxfYmxvY2tucnMoZmx1c2hf
cG9zX3QgKmZsdXNoX3Bvcywgb2lkX3Qgb2lkLAorCQkJICB1bnNpZ25lZCBsb25nIGluZGV4LCBy
ZWlzZXI0X2Jsb2NrX25yIGNvdW50LAorCQkJICByZWlzZXI0X2Jsb2NrX25yIGZpcnN0KTsKK2lu
dCBjb252ZXJ0X2V4dGVudChjb29yZF90ICpjb29yZCwgcmVpc2VyNF9leHRlbnQgKnJlcGxhY2Up
OworaW50IHB1dF91bml0X3RvX2VuZCh6bm9kZSAqbm9kZSwKKwkJICAgIGNvbnN0IHJlaXNlcjRf
a2V5ICprZXksIHJlaXNlcjRfZXh0ZW50ICpjb3B5X2V4dCk7CisKKy8qCisgKiB0eG1vZC5mb3J3
YXJkX2FsbG9jX3VuZm9ybWF0dGVkIDwtIGhhbmRsZV9wb3Nfb25fdHdpZworICogdHhtb2Quc3F1
ZWV6ZV9hbGxvY191bmZvcm1hdHRlZCA8LSBzcXVlZXplX3JpZ2h0X3R3aWcKKyAqLworCisvKiBD
b21tb24gZnVuY3Rpb25zICovCisKKy8qKgorICogTWFyayBub2RlIEpOT0RFX09WUldSIGFuZCBw
dXQgaXQgb24gYXRvbS0+b3ZlcndyaXRlX25vZGVzIGxpc3QuCisgKiBBdG9tIGxvY2sgYW5kIGpu
b2RlIGxvY2sgc2hvdWxkIGJlIHRha2VuIGJlZm9yZSBjYWxsaW5nIHRoaXMKKyAqIGZ1bmN0aW9u
LgorICovCit2b2lkIGpub2RlX21ha2Vfd2FuZGVyX25vbG9jayhqbm9kZSAqIG5vZGUpCit7CisJ
dHhuX2F0b20gKmF0b207CisKKwlhc3NlcnQoIm5pa2l0YS0yNDMyIiwgIUpGX0lTU0VUKG5vZGUs
IEpOT0RFX1JFTE9DKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzE1MyIsIEpGX0lTU0VUKG5vZGUsIEpO
T0RFX0RJUlRZKSk7CisJYXNzZXJ0KCJ6YW0tODk3IiwgIUpGX0lTU0VUKG5vZGUsIEpOT0RFX0ZM
VVNIX1FVRVVFRCkpOworCWFzc2VydCgibmlraXRhLTMzNjciLCAhcmVpc2VyNF9ibG9ja25yX2lz
X2Zha2Uoam5vZGVfZ2V0X2Jsb2NrKG5vZGUpKSk7CisKKwlhdG9tID0gbm9kZS0+YXRvbTsKKwor
CWFzc2VydCgiemFtLTg5NSIsIGF0b20gIT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tODk0IiwgYXRv
bV9pc19wcm90ZWN0ZWQoYXRvbSkpOworCisJSkZfU0VUKG5vZGUsIEpOT0RFX09WUldSKTsKKwkv
KiBtb3ZlIG5vZGUgdG8gYXRvbSdzIG92ZXJ3cml0ZSBsaXN0ICovCisJbGlzdF9tb3ZlX3RhaWwo
Jm5vZGUtPmNhcHR1cmVfbGluaywgQVRPTV9PVlJXUl9MSVNUKGF0b20pKTsKKwlPTl9ERUJVRyhj
b3VudF9qbm9kZShhdG9tLCBub2RlLCBESVJUWV9MSVNULCBPVlJXUl9MSVNULCAxKSk7Cit9CisK
Ky8qCisgKiBTYW1lIGFzIGpub2RlX21ha2Vfd2FuZGVyX25vbG9jaywgYnV0IGFsbCBuZWNlc3Nh
cnkgbG9ja3MKKyAqIGFyZSB0YWtlbiBpbnNpZGUgdGhpcyBmdW5jdGlvbi4KKyAqLwordm9pZCBq
bm9kZV9tYWtlX3dhbmRlcihqbm9kZSAqIG5vZGUpCit7CisJdHhuX2F0b20gKmF0b207CisKKwlz
cGluX2xvY2tfam5vZGUobm9kZSk7CisJYXRvbSA9IGpub2RlX2dldF9hdG9tKG5vZGUpOworCWFz
c2VydCgiemFtLTkxMyIsIGF0b20gIT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tOTE0IiwgIUpGX0lT
U0VUKG5vZGUsIEpOT0RFX1JFTE9DKSk7CisKKwlqbm9kZV9tYWtlX3dhbmRlcl9ub2xvY2sobm9k
ZSk7CisJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwlzcGluX3VubG9ja19qbm9kZShub2RlKTsK
K30KKworLyogdGhpcyBqdXN0IHNldHMgUkVMT0MgYml0ICAqLworc3RhdGljIHZvaWQgam5vZGVf
bWFrZV9yZWxvY19ub2xvY2soZmx1c2hfcXVldWVfdCAqIGZxLCBqbm9kZSAqIG5vZGUpCit7CisJ
YXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKwlhc3NlcnQoInphbS05MTYiLCBK
Rl9JU1NFVChub2RlLCBKTk9ERV9ESVJUWSkpOworCWFzc2VydCgiemFtLTkxNyIsICFKRl9JU1NF
VChub2RlLCBKTk9ERV9SRUxPQykpOworCWFzc2VydCgiemFtLTkxOCIsICFKRl9JU1NFVChub2Rl
LCBKTk9ERV9PVlJXUikpOworCWFzc2VydCgiemFtLTkyMCIsICFKRl9JU1NFVChub2RlLCBKTk9E
RV9GTFVTSF9RVUVVRUQpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMzY3IiwgIXJlaXNlcjRfYmxvY2tu
cl9pc19mYWtlKGpub2RlX2dldF9ibG9jayhub2RlKSkpOworCWpub2RlX3NldF9yZWxvYyhub2Rl
KTsKK30KKworLyoKKyAqIE1hcmsgem5vZGUgUkVMT0MgYW5kIHB1dCBpdCBvbiBmbHVzaCBxdWV1
ZQorICovCit2b2lkIHpub2RlX21ha2VfcmVsb2Moem5vZGUgKiB6LCBmbHVzaF9xdWV1ZV90ICog
ZnEpCit7CisJam5vZGUgKm5vZGU7CisJdHhuX2F0b20gKmF0b207CisKKwlub2RlID0gWkpOT0RF
KHopOworCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKworCWF0b20gPSBqbm9kZV9nZXRfYXRvbShu
b2RlKTsKKwlhc3NlcnQoInphbS05MTkiLCBhdG9tICE9IE5VTEwpOworCisJam5vZGVfbWFrZV9y
ZWxvY19ub2xvY2soZnEsIG5vZGUpOworCXF1ZXVlX2pub2RlKGZxLCBub2RlKTsKKworCXNwaW5f
dW5sb2NrX2F0b20oYXRvbSk7CisJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7Cit9CisKKy8qIE1h
cmsgdW5mb3JtYXR0ZWQgbm9kZSBSRUxPQyBhbmQgcHV0IGl0IG9uIGZsdXNoIHF1ZXVlICovCit2
b2lkIHVuZm9ybWF0dGVkX21ha2VfcmVsb2Moam5vZGUgKm5vZGUsIGZsdXNoX3F1ZXVlX3QgKmZx
KQoreworCWFzc2VydCgidnMtMTQ3OSIsIGpub2RlX2lzX3VuZm9ybWF0dGVkKG5vZGUpKTsKKwor
CWpub2RlX21ha2VfcmVsb2Nfbm9sb2NrKGZxLCBub2RlKTsKKwlxdWV1ZV9qbm9kZShmcSwgbm9k
ZSk7Cit9CisKKy8qKgorICogbWFya19qbm9kZV9vdmVyd3JpdGUgLSBhc3NpZ24gbm9kZSB0byBv
dmVyd3JpdGUgc2V0CisgKiBAam5vZGVzOiBvdmVyd3JpdGUgc2V0IGxpc3QgaGVhZAorICogQG5v
ZGU6IGpub2RlIHRvIGJlbG9uZyB0byBvdmVyd3JpdGUgc2V0CisgKgorICogU2V0cyBPVlJXUiBq
bm9kZSBzdGF0ZSBiaXQgYW5kIHB1dHMgQG5vZGUgdG8gdGhlIGVuZCBvZiBsaXN0IGhlYWQgQGpu
b2RlcworICogd2hpY2ggaXMgYW4gYWNjdW11bGF0b3IgZm9yIG5vZGVzIGJlZm9yZSB0aGV5IGdl
dCB0byBvdmVyd3JpdGUgc2V0IGxpc3Qgb2YKKyAqIGF0b20uCisgKi8KK3N0YXRpYyB2b2lkIG1h
cmtfam5vZGVfb3ZlcndyaXRlKHN0cnVjdCBsaXN0X2hlYWQgKmpub2Rlcywgam5vZGUgKm5vZGUp
Cit7CisJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCisJYXNzZXJ0KCJ6YW0tOTE3IiwgIUpGX0lT
U0VUKG5vZGUsIEpOT0RFX1JFTE9DKSk7CisJYXNzZXJ0KCJ6YW0tOTE4IiwgIUpGX0lTU0VUKG5v
ZGUsIEpOT0RFX09WUldSKSk7CisKKwlKRl9TRVQobm9kZSwgSk5PREVfT1ZSV1IpOworCWxpc3Rf
bW92ZV90YWlsKCZub2RlLT5jYXB0dXJlX2xpbmssIGpub2Rlcyk7CisJT05fREVCVUcoY291bnRf
am5vZGUobm9kZS0+YXRvbSwgbm9kZSwgRElSVFlfTElTVCwgT1ZSV1JfTElTVCwgMCkpOworCisJ
c3Bpbl91bmxvY2tfam5vZGUobm9kZSk7Cit9CisKK3N0YXRpYyBpbnQgZm9yd2FyZF9yZWxvY2F0
ZV91bmZvcm1hdHRlZChmbHVzaF9wb3NfdCAqZmx1c2hfcG9zLAorCQkJCQlyZWlzZXI0X2V4dGVu
dCAqZXh0LAorCQkJCQlleHRlbnRfc3RhdGUgc3RhdGUsCisJCQkJCW9pZF90IG9pZCwgX191NjQg
aW5kZXgsCisJCQkJCV9fdTY0IHdpZHRoLCBpbnQgKmV4aXQpCit7CisJaW50IHJlc3VsdDsKKwlj
b29yZF90ICpjb29yZDsKKwlyZWlzZXI0X2V4dGVudCByZXBsYWNlX2V4dDsKKwlyZWlzZXI0X2Js
b2NrX25yIHByb3RlY3RlZDsKKwlyZWlzZXI0X2Jsb2NrX25yIHN0YXJ0OworCXJlaXNlcjRfYmxv
Y2tfbnIgZmlyc3RfYWxsb2NhdGVkOworCV9fdTY0IGFsbG9jYXRlZDsKKwlibG9ja19zdGFnZV90
IGJsb2NrX3N0YWdlOworCisJKmV4aXQgPSAwOworCWNvb3JkID0gJmZsdXNoX3Bvcy0+Y29vcmQ7
CisJc3RhcnQgPSBleHRlbnRfZ2V0X3N0YXJ0KGV4dCk7CisKKwlpZiAoZmx1c2hfcG9zLT5wb3Nf
aW5fdW5pdCkgeworCQkvKgorCQkgKiBzcGxpdCBleHRlbnQgdW5pdCBpbnRvIHR3byBvbmVzCisJ
CSAqLworCQlyZXN1bHQgPSBzcGxpdF9hbGxvY2F0ZWRfZXh0ZW50KGNvb3JkLAorCQkJCQkJZmx1
c2hfcG9zLT5wb3NfaW5fdW5pdCk7CisJCWZsdXNoX3Bvcy0+cG9zX2luX3VuaXQgPSAwOworCQkq
ZXhpdCA9IDE7CisJCXJldHVybiByZXN1bHQ7CisJfQorCS8qCisJICogbGltaXQgbnVtYmVyIG9m
IG5vZGVzIHRvIGFsbG9jYXRlCisJICovCisJaWYgKGZsdXNoX3Bvcy0+bnJfdG9fd3JpdGUgPCB3
aWR0aCkKKwkJd2lkdGggPSBmbHVzaF9wb3MtPm5yX3RvX3dyaXRlOworCisJaWYgKHN0YXRlID09
IEFMTE9DQVRFRF9FWFRFTlQpIHsKKwkJLyoKKwkJICogYWxsIHByb3RlY3RlZCBub2RlcyBhcmUg
bm90IGZsdXNocHJlcHBlZCwgdGhlcmVmb3JlCisJCSAqIHRoZXkgYXJlIGNvdW50ZWQgYXMgZmx1
c2hfcmVzZXJ2ZWQKKwkJICovCisJCWJsb2NrX3N0YWdlID0gQkxPQ0tfRkxVU0hfUkVTRVJWRUQ7
CisJCXByb3RlY3RlZCA9IGFsbG9jYXRlZF9leHRlbnRfc2x1bV9zaXplKGZsdXNoX3Bvcywgb2lk
LAorCQkJCQkJICAgICAgIGluZGV4LCB3aWR0aCk7CisJCWlmIChwcm90ZWN0ZWQgPT0gMCkgewor
CQkJZmx1c2hfcG9zLT5zdGF0ZSA9IFBPU19JTlZBTElEOworCQkJZmx1c2hfcG9zLT5wb3NfaW5f
dW5pdCA9IDA7CisJCQkqZXhpdCA9IDE7CisJCQlyZXR1cm4gMDsKKwkJfQorCX0gZWxzZSB7CisJ
CWJsb2NrX3N0YWdlID0gQkxPQ0tfVU5BTExPQ0FURUQ7CisJCXByb3RlY3RlZCA9IHdpZHRoOwor
CX0KKwkvKgorCSAqIGxvb2sgYXQgcHJldmlvdXMgdW5pdCBpZiBwb3NzaWJsZS4gSWYgaXQgaXMg
YWxsb2NhdGVkLCBtYWtlCisJICogcHJlY2VkZXIgbW9yZSBwcmVjaXNlCisJICovCisJaWYgKGNv
b3JkLT51bml0X3BvcyAmJgorCSAgICAoc3RhdGVfb2ZfZXh0ZW50KGV4dCAtIDEpID09IEFMTE9D
QVRFRF9FWFRFTlQpKQorCQlyZWlzZXI0X3Bvc19oaW50KGZsdXNoX3BvcyktPmJsayA9CisJCQll
eHRlbnRfZ2V0X3N0YXJ0KGV4dCAtIDEpICsKKwkJCWV4dGVudF9nZXRfd2lkdGgoZXh0IC0gMSk7
CisJLyoKKwkgKiBhbGxvY2F0ZSBuZXcgYmxvY2sgbnVtYmVycyBmb3IgcHJvdGVjdGVkIG5vZGVz
CisJICovCisJYWxsb2NhdGVfYmxvY2tzX3VuZm9ybWF0dGVkKHJlaXNlcjRfcG9zX2hpbnQoZmx1
c2hfcG9zKSwKKwkJCQkgICAgcHJvdGVjdGVkLAorCQkJCSAgICAmZmlyc3RfYWxsb2NhdGVkLCAm
YWxsb2NhdGVkLAorCQkJCSAgICBibG9ja19zdGFnZSk7CisKKwlpZiAoc3RhdGUgPT0gQUxMT0NB
VEVEX0VYVEVOVCkKKwkJLyoKKwkJICogb24gcmVsb2NhdGluZyAtIGZyZWUgbm9kZXMgd2hpY2gg
YXJlIGdvaW5nIHRvIGJlCisJCSAqIHJlbG9jYXRlZAorCQkgKi8KKwkJcmVpc2VyNF9kZWFsbG9j
X2Jsb2Nrcygmc3RhcnQsICZhbGxvY2F0ZWQsIDAsIEJBX0RFRkVSKTsKKworCS8qIGFzc2lnbiBu
ZXcgYmxvY2sgbnVtYmVycyB0byBwcm90ZWN0ZWQgbm9kZXMgKi8KKwlhc3NpZ25fcmVhbF9ibG9j
a25ycyhmbHVzaF9wb3MsIG9pZCwgaW5kZXgsIGFsbG9jYXRlZCwgZmlyc3RfYWxsb2NhdGVkKTsK
KworCS8qIHByZXBhcmUgZXh0ZW50IHdoaWNoIHdpbGwgcmVwbGFjZSBjdXJyZW50IG9uZSAqLwor
CXJlaXNlcjRfc2V0X2V4dGVudCgmcmVwbGFjZV9leHQsIGZpcnN0X2FsbG9jYXRlZCwgYWxsb2Nh
dGVkKTsKKworCS8qIGFkanVzdCBleHRlbnQgaXRlbSAqLworCXJlc3VsdCA9IGNvbnZlcnRfZXh0
ZW50KGNvb3JkLCAmcmVwbGFjZV9leHQpOworCWlmIChyZXN1bHQgIT0gMCAmJiByZXN1bHQgIT0g
LUVOT01FTSkgeworCQl3YXJuaW5nKCJ2cy0xNDYxIiwKKwkJCSJGYWlsZWQgdG8gYWxsb2NhdGUg
ZXh0ZW50LiBTaG91bGQgbm90IGhhcHBlblxuIik7CisJCSpleGl0ID0gMTsKKwkJcmV0dXJuIHJl
c3VsdDsKKwl9CisJLyoKKwkgKiBicmVhayBmbHVzaDogd2UgcHJlcGFyZWQgZm9yIGZsdXNoaW5n
IGFzIG1hbnkgYmxvY2tzIGFzIHdlCisJICogd2VyZSBhc2tlZCBmb3IKKwkgKi8KKwlpZiAoZmx1
c2hfcG9zLT5ucl90b193cml0ZSA9PSBhbGxvY2F0ZWQpCisJCWZsdXNoX3Bvcy0+c3RhdGUgPSBQ
T1NfSU5WQUxJRDsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHNxdWVlemVfcmVzdWx0IHNxdWVl
emVfcmVsb2NhdGVfdW5mb3JtYXR0ZWQoem5vZGUgKmxlZnQsCisJCQkJCQkgICBjb25zdCBjb29y
ZF90ICpjb29yZCwKKwkJCQkJCSAgIGZsdXNoX3Bvc190ICpmbHVzaF9wb3MsCisJCQkJCQkgICBy
ZWlzZXI0X2tleSAqa2V5LAorCQkJCQkJICAgcmVpc2VyNF9rZXkgKnN0b3Bfa2V5KQoreworCWlu
dCByZXN1bHQ7CisJcmVpc2VyNF9leHRlbnQgKmV4dDsKKwlfX3U2NCBpbmRleDsKKwlfX3U2NCB3
aWR0aDsKKwlyZWlzZXI0X2Jsb2NrX25yIHN0YXJ0OworCWV4dGVudF9zdGF0ZSBzdGF0ZTsKKwlv
aWRfdCBvaWQ7CisJcmVpc2VyNF9ibG9ja19uciBmaXJzdF9hbGxvY2F0ZWQ7CisJX191NjQgYWxs
b2NhdGVkOworCV9fdTY0IHByb3RlY3RlZDsKKwlyZWlzZXI0X2V4dGVudCBjb3B5X2V4dGVudDsK
KwlibG9ja19zdGFnZV90IGJsb2NrX3N0YWdlOworCisJYXNzZXJ0KCJlZHdhcmQtMTYxMCIsIGZs
dXNoX3Bvcy0+cG9zX2luX3VuaXQgPT0gMCk7CisJYXNzZXJ0KCJlZHdhcmQtMTYxMSIsIGNvb3Jk
X2lzX2xlZnRtb3N0X3VuaXQoY29vcmQpKTsKKwlhc3NlcnQoImVkd2FyZC0xNjEyIiwgaXRlbV9p
c19leHRlbnQoY29vcmQpKTsKKworCWV4dCA9IGV4dGVudF9ieV9jb29yZChjb29yZCk7CisJaW5k
ZXggPSBleHRlbnRfdW5pdF9pbmRleChjb29yZCk7CisJc3RhcnQgPSBleHRlbnRfZ2V0X3N0YXJ0
KGV4dCk7CisJd2lkdGggPSBleHRlbnRfZ2V0X3dpZHRoKGV4dCk7CisJc3RhdGUgPSBzdGF0ZV9v
Zl9leHRlbnQoZXh0KTsKKwl1bml0X2tleV9ieV9jb29yZChjb29yZCwga2V5KTsKKwlvaWQgPSBn
ZXRfa2V5X29iamVjdGlkKGtleSk7CisKKwlhc3NlcnQoImVkd2FyZC0xNjEzIiwgc3RhdGUgIT0g
SE9MRV9FWFRFTlQpOworCisJaWYgKHN0YXRlID09IEFMTE9DQVRFRF9FWFRFTlQpIHsKKwkJLyoK
KwkJICogYWxsIHByb3RlY3RlZCBub2RlcyBhcmUgbm90IGZsdXNocHJlcHBlZCwKKwkJICogdGhl
cmVmb3JlIHRoZXkgYXJlIGNvdW50ZWQgYXMgZmx1c2hfcmVzZXJ2ZWQKKwkJICovCisJCWJsb2Nr
X3N0YWdlID0gQkxPQ0tfRkxVU0hfUkVTRVJWRUQ7CisJCXByb3RlY3RlZCA9IGFsbG9jYXRlZF9l
eHRlbnRfc2x1bV9zaXplKGZsdXNoX3Bvcywgb2lkLAorCQkJCQkJICAgICAgIGluZGV4LCB3aWR0
aCk7CisJCWlmIChwcm90ZWN0ZWQgPT0gMCkgeworCQkJZmx1c2hfcG9zLT5zdGF0ZSA9IFBPU19J
TlZBTElEOworCQkJZmx1c2hfcG9zLT5wb3NfaW5fdW5pdCA9IDA7CisJCQlyZXR1cm4gMDsKKwkJ
fQorCX0gZWxzZSB7CisJCWJsb2NrX3N0YWdlID0gQkxPQ0tfVU5BTExPQ0FURUQ7CisJCXByb3Rl
Y3RlZCA9IHdpZHRoOworCX0KKwkvKgorCSAqIGxvb2sgYXQgcHJldmlvdXMgdW5pdCBpZiBwb3Nz
aWJsZS4gSWYgaXQgaXMgYWxsb2NhdGVkLCBtYWtlCisJICogcHJlY2VkZXIgbW9yZSBwcmVjaXNl
CisJICovCisJaWYgKGNvb3JkLT51bml0X3BvcyAmJgorCSAgICAoc3RhdGVfb2ZfZXh0ZW50KGV4
dCAtIDEpID09IEFMTE9DQVRFRF9FWFRFTlQpKQorCQlyZWlzZXI0X3Bvc19oaW50KGZsdXNoX3Bv
cyktPmJsayA9CisJCQlleHRlbnRfZ2V0X3N0YXJ0KGV4dCAtIDEpICsKKwkJCWV4dGVudF9nZXRf
d2lkdGgoZXh0IC0gMSk7CisJLyoKKwkgKiBhbGxvY2F0ZSBuZXcgYmxvY2sgbnVtYmVycyBmb3Ig
cHJvdGVjdGVkIG5vZGVzCisJICovCisJYWxsb2NhdGVfYmxvY2tzX3VuZm9ybWF0dGVkKHJlaXNl
cjRfcG9zX2hpbnQoZmx1c2hfcG9zKSwKKwkJCQkgICAgcHJvdGVjdGVkLAorCQkJCSAgICAmZmly
c3RfYWxsb2NhdGVkLCAmYWxsb2NhdGVkLAorCQkJCSAgICBibG9ja19zdGFnZSk7CisJLyoKKwkg
KiBwcmVwYXJlIGV4dGVudCB3aGljaCB3aWxsIGJlIGNvcGllZCB0byBsZWZ0CisJICovCisJcmVp
c2VyNF9zZXRfZXh0ZW50KCZjb3B5X2V4dGVudCwgZmlyc3RfYWxsb2NhdGVkLCBhbGxvY2F0ZWQp
OworCXJlc3VsdCA9IHB1dF91bml0X3RvX2VuZChsZWZ0LCBrZXksICZjb3B5X2V4dGVudCk7CisK
KwlpZiAocmVzdWx0ID09IC1FX05PREVfRlVMTCkgeworCQkvKgorCQkgKiBmcmVlIGJsb2NrcyB3
aGljaCB3ZXJlIGp1c3QgYWxsb2NhdGVkCisJCSAqLworCQlyZWlzZXI0X2RlYWxsb2NfYmxvY2tz
KCZmaXJzdF9hbGxvY2F0ZWQsICZhbGxvY2F0ZWQsCisJCQkJICAgICAgIChzdGF0ZSA9PSBBTExP
Q0FURURfRVhURU5UKQorCQkJCSAgICAgICA/IEJMT0NLX0ZMVVNIX1JFU0VSVkVECisJCQkJICAg
ICAgIDogQkxPQ0tfVU5BTExPQ0FURUQsCisJCQkJICAgICAgIEJBX1BFUk1BTkVOVCk7CisJCS8q
CisJCSAqIHJld2luZCB0aGUgcHJlY2VkZXIKKwkJICovCisJCWZsdXNoX3Bvcy0+cHJlY2VkZXIu
YmxrID0gZmlyc3RfYWxsb2NhdGVkOworCQljaGVja19wcmVjZWRlcihmbHVzaF9wb3MtPnByZWNl
ZGVyLmJsayk7CisJCXJldHVybiBTUVVFRVpFX1RBUkdFVF9GVUxMOworCX0KKwlpZiAoc3RhdGUg
PT0gQUxMT0NBVEVEX0VYVEVOVCkgeworCQkvKgorCQkgKiBmcmVlIG5vZGVzIHdoaWNoIHdlcmUg
cmVsb2NhdGVkCisJCSAqLworCQlyZWlzZXI0X2RlYWxsb2NfYmxvY2tzKCZzdGFydCwgJmFsbG9j
YXRlZCwgMCwgQkFfREVGRVIpOworCX0KKwkvKgorCSAqIGFzc2lnbiBuZXcgYmxvY2sgbnVtYmVy
cyB0byBwcm90ZWN0ZWQgbm9kZXMKKwkgKi8KKwlhc3NpZ25fcmVhbF9ibG9ja25ycyhmbHVzaF9w
b3MsIG9pZCwgaW5kZXgsIGFsbG9jYXRlZCwKKwkJCSAgICAgZmlyc3RfYWxsb2NhdGVkKTsKKwlz
ZXRfa2V5X29mZnNldChrZXksCisJCSAgICAgICBnZXRfa2V5X29mZnNldChrZXkpICsKKwkJICAg
ICAgIChhbGxvY2F0ZWQgPDwgY3VycmVudF9ibG9ja3NpemVfYml0cykpOworCXJldHVybiBTUVVF
RVpFX0NPTlRJTlVFOworfQorCisvKioKKyAqIGZvcndhcmRfb3ZlcndyaXRlX3VuZm9ybWF0dGVk
IC0gcHV0IGJ1bmNoIG9mIGpub2RlcyB0byBvdmVyd3JpdGUgc2V0CisgKiBAZmx1c2hfcG9zOiBm
bHVzaCBwb3NpdGlvbgorICogQG9pZDogb2JqZWN0aWQgb2YgZmlsZSBqbm9kZXMgYmVsb25nIHRv
CisgKiBAaW5kZXg6IHN0YXJ0aW5nIGluZGV4CisgKiBAd2lkdGg6IGV4dGVudCB3aWR0aAorICoK
KyAqIFB1dHMgbm9kZXMgb2Ygb25lIGV4dGVudCAoZmlsZSBvYmplY3RpZCBAb2lkLCBleHRlbnQg
d2lkdGggQHdpZHRoKSB0byBhdG9tJ3MKKyAqIG92ZXJ3cml0ZSBzZXQuIFN0YXJ0aW5nIGZyb20g
dGhlIG9uZSB3aXRoIGluZGV4IEBpbmRleC4gSWYgZW5kIG9mIHNsdW0gaXMKKyAqIGRldGVjdGVk
IChub2RlIGlzIG5vdCBmb3VuZCBvciBmbHVzaHByZXBwZWQpIC0gc3RvcCBpdGVyYXRpbmcgYW5k
IHNldCBmbHVzaAorICogcG9zaXRpb24ncyBzdGF0ZSB0byBQT1NfSU5WQUxJRC4KKyAqLworc3Rh
dGljIHZvaWQgZm9yd2FyZF9vdmVyd3JpdGVfdW5mb3JtYXR0ZWQoZmx1c2hfcG9zX3QgKmZsdXNo
X3Bvcywgb2lkX3Qgb2lkLAorCQkJCQkgIHVuc2lnbmVkIGxvbmcgaW5kZXgsCisJCQkJCSAgcmVp
c2VyNF9ibG9ja19uciB3aWR0aCkKK3sKKwl1bnNpZ25lZCBsb25nIGk7CisJcmVpc2VyNF90cmVl
ICp0cmVlOworCWpub2RlICpub2RlOworCXR4bl9hdG9tICphdG9tOworCUxJU1RfSEVBRChqbm9k
ZXMpOworCisJdHJlZSA9IGN1cnJlbnRfdHJlZTsKKworCWF0b20gPSBhdG9tX2xvY2tlZF9ieV9m
cShyZWlzZXI0X3Bvc19mcShmbHVzaF9wb3MpKTsKKwlhc3NlcnQoInZzLTE0NzgiLCBhdG9tKTsK
KworCWZvciAoaSA9IGZsdXNoX3Bvcy0+cG9zX2luX3VuaXQ7IGkgPCB3aWR0aDsgaSsrLCBpbmRl
eCsrKSB7CisJCW5vZGUgPSBqbG9va3VwKHRyZWUsIG9pZCwgaW5kZXgpOworCQlpZiAoIW5vZGUp
IHsKKwkJCWZsdXNoX3Bvcy0+c3RhdGUgPSBQT1NfSU5WQUxJRDsKKwkJCWJyZWFrOworCQl9CisJ
CWlmIChqbm9kZV9jaGVja19mbHVzaHByZXBwZWQobm9kZSkpIHsKKwkJCWZsdXNoX3Bvcy0+c3Rh
dGUgPSBQT1NfSU5WQUxJRDsKKwkJCWF0b21pY19kZWMoJm5vZGUtPnhfY291bnQpOworCQkJYnJl
YWs7CisJCX0KKwkJaWYgKG5vZGUtPmF0b20gIT0gYXRvbSkgeworCQkJZmx1c2hfcG9zLT5zdGF0
ZSA9IFBPU19JTlZBTElEOworCQkJYXRvbWljX2RlYygmbm9kZS0+eF9jb3VudCk7CisJCQlicmVh
azsKKwkJfQorCQltYXJrX2pub2RlX292ZXJ3cml0ZSgmam5vZGVzLCBub2RlKTsKKwkJYXRvbWlj
X2RlYygmbm9kZS0+eF9jb3VudCk7CisJfQorCisJbGlzdF9zcGxpY2VfaW5pdCgmam5vZGVzLCBB
VE9NX09WUldSX0xJU1QoYXRvbSktPnByZXYpOworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7Cit9
CisKK3N0YXRpYyBzcXVlZXplX3Jlc3VsdCBzcXVlZXplX292ZXJ3cml0ZV91bmZvcm1hdHRlZCh6
bm9kZSAqbGVmdCwKKwkJCQkJCSAgICBjb25zdCBjb29yZF90ICpjb29yZCwKKwkJCQkJCSAgICBm
bHVzaF9wb3NfdCAqZmx1c2hfcG9zLAorCQkJCQkJICAgIHJlaXNlcjRfa2V5ICprZXksCisJCQkJ
CQkgICAgcmVpc2VyNF9rZXkgKnN0b3Bfa2V5KQoreworCWludCByZXN1bHQ7CisJcmVpc2VyNF9l
eHRlbnQgKmV4dDsKKwlfX3U2NCBpbmRleDsKKwlfX3U2NCB3aWR0aDsKKwlyZWlzZXI0X2Jsb2Nr
X25yIHN0YXJ0OworCWV4dGVudF9zdGF0ZSBzdGF0ZTsKKwlvaWRfdCBvaWQ7CisJcmVpc2VyNF9l
eHRlbnQgY29weV9leHRlbnQ7CisKKwlhc3NlcnQoInZzLTE0NTciLCBmbHVzaF9wb3MtPnBvc19p
bl91bml0ID09IDApOworCWFzc2VydCgidnMtMTQ2NyIsIGNvb3JkX2lzX2xlZnRtb3N0X3VuaXQo
Y29vcmQpKTsKKwlhc3NlcnQoInZzLTE0NjciLCBpdGVtX2lzX2V4dGVudChjb29yZCkpOworCisJ
ZXh0ID0gZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKTsKKwlpbmRleCA9IGV4dGVudF91bml0X2luZGV4
KGNvb3JkKTsKKwlzdGFydCA9IGV4dGVudF9nZXRfc3RhcnQoZXh0KTsKKwl3aWR0aCA9IGV4dGVu
dF9nZXRfd2lkdGgoZXh0KTsKKwlzdGF0ZSA9IHN0YXRlX29mX2V4dGVudChleHQpOworCXVuaXRf
a2V5X2J5X2Nvb3JkKGNvb3JkLCBrZXkpOworCW9pZCA9IGdldF9rZXlfb2JqZWN0aWQoa2V5KTsK
KwkvKgorCSAqIHRyeSB0byBjb3B5IHVuaXQgYXMgaXQgaXMgdG8gbGVmdCBuZWlnaGJvcgorCSAq
IGFuZCBtYWtlIGFsbCBmaXJzdCBub3QgZmx1c2hwcmVwcGVkIG5vZGVzCisJICogb3ZlcndyaXRl
IG5vZGVzCisJICovCisJcmVpc2VyNF9zZXRfZXh0ZW50KCZjb3B5X2V4dGVudCwgc3RhcnQsIHdp
ZHRoKTsKKworCXJlc3VsdCA9IHB1dF91bml0X3RvX2VuZChsZWZ0LCBrZXksICZjb3B5X2V4dGVu
dCk7CisJaWYgKHJlc3VsdCA9PSAtRV9OT0RFX0ZVTEwpCisJCXJldHVybiBTUVVFRVpFX1RBUkdF
VF9GVUxMOworCisJaWYgKHN0YXRlICE9IEhPTEVfRVhURU5UKQorCQlmb3J3YXJkX292ZXJ3cml0
ZV91bmZvcm1hdHRlZChmbHVzaF9wb3MsIG9pZCwgaW5kZXgsIHdpZHRoKTsKKworCXNldF9rZXlf
b2Zmc2V0KGtleSwKKwkJICAgICAgZ2V0X2tleV9vZmZzZXQoa2V5KSArICh3aWR0aCA8PCBjdXJy
ZW50X2Jsb2Nrc2l6ZV9iaXRzKSk7CisJcmV0dXJuIFNRVUVFWkVfQ09OVElOVUU7Cit9CisKKy8q
KioqKioqKioqKioqKioqKioqKioqKiogSFlCUklEIFRSQU5TQUNUSU9OIE1PREVMICoqKioqKioq
KioqKioqKioqKioqKioqKioqKiovCisKKy8qKgorICogVGhpcyBpcyB0aGUgZGVmYXVsdCB0cmFu
c2FjdGlvbiBtb2RlbCBzdWdnZXN0ZWQgYnkgSm9zaCBNYWNEb25hbGQgYW5kCisgKiBIYW5zIFJl
aXNlci4gVGhpcyB3YXMgdGhlIHNpbmdsZSBoYXJkY29kZWQgdHJhbnNhY3Rpb24gbW9kZSB0aWxs
IEZlYiAyMDE0CisgKiB3aGVuIEVkd2FyZCBpbnRyb2R1Y2VkIHB1cmUgSm91cm5hbGxpbmcgYW5k
IHB1cmUgV3JpdGUtQW55d2hlcmUuCisgKgorICogSW4gdGhpcyBtb2RlIGFsbCByZWxvY2F0ZS1v
dmVyd3JpdGUgZGVjaXNpb25zIGFyZSByZXN1bHQgb2YgYXR0ZW1wdHMgdG8KKyAqIGRlZnJhZ21l
bnQgYXRvbSdzIGxvY2FsaXR5LgorICovCisKKy8qIFJFVkVSU0UgUEFSRU5ULUZJUlNUIFJFTE9D
QVRJT04gUE9MSUNJRVMgKi8KKworLyogVGhpcyBpbXBsZW1lbnRzIHRoZSBpcy1pdC1jbG9zZS1l
bm91Z2gtdG8taXRzLXByZWNlZGVyPyB0ZXN0IGZvciByZWxvY2F0aW9uCisgICBpbiB0aGUgcmV2
ZXJzZSBwYXJlbnQtZmlyc3QgcmVsb2NhdGUgY29udGV4dC4gSGVyZSBhbGwgd2Uga25vdyBpcyB0
aGUKKyAgIHByZWNlZGVyIGFuZCB0aGUgYmxvY2sgbnVtYmVyLiBTaW5jZSB3ZSBhcmUgZ29pbmcg
aW4gcmV2ZXJzZSwgdGhlIHByZWNlZGVyCisgICBtYXkgc3RpbGwgYmUgcmVsb2NhdGVkIGFzIHdl
bGwsIHNvIHdlIGNhbid0IGFzayB0aGUgYmxvY2sgYWxsb2NhdG9yICJpcyB0aGVyZQorICAgYSBj
bG9zZXIgYmxvY2sgYXZhaWxhYmxlIHRvIHJlbG9jYXRlPyIgaGVyZS4gSW4gdGhlIF9mb3J3YXJk
XyBwYXJlbnQtZmlyc3QKKyAgIHJlbG9jYXRlIGNvbnRleHQgKG5vdCBoZXJlKSB3ZSBhY3R1YWxs
eSBjYWxsIHRoZSBibG9jayBhbGxvY2F0b3IgdG8gdHJ5IGFuZAorICAgZmluZCBhIGNsb3NlciBs
b2NhdGlvbi4KKyovCitzdGF0aWMgaW50IHJldmVyc2VfdHJ5X2RlZnJhZ21lbnRfaWZfY2xvc2Uo
Y29uc3QgcmVpc2VyNF9ibG9ja19uciAqIHBibGssCisJCQkJCSAgIGNvbnN0IHJlaXNlcjRfYmxv
Y2tfbnIgKiBuYmxrKQoreworCXJlaXNlcjRfYmxvY2tfbnIgZGlzdDsKKworCWFzc2VydCgiam1h
Y2QtNzcxMCIsICpwYmxrICE9IDAgJiYgKm5ibGsgIT0gMCk7CisJYXNzZXJ0KCJqbWFjZC03NzEx
IiwgIXJlaXNlcjRfYmxvY2tucl9pc19mYWtlKHBibGspKTsKKwlhc3NlcnQoImptYWNkLTc3MTIi
LCAhcmVpc2VyNF9ibG9ja25yX2lzX2Zha2UobmJsaykpOworCisJLyogRGlzdGFuY2UgaXMgdGhl
IGFic29sdXRlIHZhbHVlLiAqLworCWRpc3QgPSAoKnBibGsgPiAqbmJsaykgPyAoKnBibGsgLSAq
bmJsaykgOiAoKm5ibGsgLSAqcGJsayk7CisKKwkvKiBJZiB0aGUgYmxvY2sgaXMgbGVzcyB0aGFu
IEZMVVNIX1JFTE9DQVRFX0RJU1RBTkNFIGJsb2NrcyBhd2F5IGZyb20KKwkgICBpdHMgcHJlY2Vk
ZXIgYmxvY2ssIGRvIG5vdCByZWxvY2F0ZS4gKi8KKwlpZiAoZGlzdCA8PSBnZXRfY3VycmVudF9z
dXBlcl9wcml2YXRlKCktPmZsdXNoLnJlbG9jYXRlX2Rpc3RhbmNlKQorCQlyZXR1cm4gMDsKKwor
CXJldHVybiAxOworfQorCisvKioKKyAqIFRoaXMgZnVuY3Rpb24gaXMgYSBwcmVkaWNhdGUgdGhh
dCB0ZXN0cyBmb3IgcmVsb2NhdGlvbi4gQWx3YXlzIGNhbGxlZCBpbiB0aGUKKyAqIHJldmVyc2Ut
cGFyZW50LWZpcnN0IGNvbnRleHQsIHdoZW4gd2UgYXJlIGFza2luZyB3aGV0aGVyIHRoZSBjdXJy
ZW50IG5vZGUKKyAqIHNob3VsZCBiZSByZWxvY2F0ZWQgaW4gb3JkZXIgdG8gZXhwYW5kIHRoZSBm
bHVzaCBieSBkaXJ0eWluZyB0aGUgcGFyZW50IGxldmVsCisgKiAoYW5kIHRodXMgcHJvY2VlZGlu
ZyB0byBmbHVzaCB0aGF0IGxldmVsKS4gV2hlbiB0cmF2ZXJzaW5nIGluIHRoZSBmb3J3YXJkCisg
KiBwYXJlbnQtZmlyc3QgZGlyZWN0aW9uIChub3QgaGVyZSksIHJlbG9jYXRpb24gZGVjaXNpb25z
IGFyZSBoYW5kbGVkIGluIHR3bworICogcGxhY2VzOiBhbGxvY2F0ZV96bm9kZSgpIGFuZCBleHRl
bnRfbmVlZHNfYWxsb2NhdGlvbigpLgorICovCitzdGF0aWMgaW50IHJldmVyc2VfYWxsb2NfZm9y
bWF0dGVkX2h5YnJpZChqbm9kZSAqIG5vZGUsCisJCQkJCSAgY29uc3QgY29vcmRfdCAqcGFyZW50
X2Nvb3JkLAorCQkJCQkgIGZsdXNoX3Bvc190ICpwb3MpCit7CisJcmVpc2VyNF9ibG9ja19uciBw
YmxrID0gMDsKKwlyZWlzZXI0X2Jsb2NrX25yIG5ibGsgPSAwOworCisJYXNzZXJ0KCJqbWFjZC04
OTg5IiwgIWpub2RlX2lzX3Jvb3Qobm9kZSkpOworCS8qCisJICogVGhpcyBmdW5jdGlvbiBpcyBj
YWxsZWQgb25seSBmcm9tIHRoZQorCSAqIHJldmVyc2VfcmVsb2NhdGVfY2hlY2tfZGlydHlfcGFy
ZW50KCkgYW5kIG9ubHkgaWYgdGhlIHBhcmVudAorCSAqIG5vZGUgaXMgY2xlYW4uIFRoaXMgaW1w
bGllcyB0aGF0IHRoZSBwYXJlbnQgaGFzIHRoZSByZWFsIChpLmUuLCBub3QKKwkgKiBmYWtlKSBi
bG9jayBudW1iZXIsIGFuZCwgc28gZG9lcyB0aGUgY2hpbGQsIGJlY2F1c2Ugb3RoZXJ3aXNlIHRo
ZQorCSAqIHBhcmVudCB3b3VsZCBiZSBkaXJ0eS4KKwkgKi8KKworCS8qIE5ldyBub2RlcyBhcmUg
dHJlYXRlZCBhcyBpZiB0aGV5IGFyZSBiZWluZyByZWxvY2F0ZWQuICovCisJaWYgKEpGX0lTU0VU
KG5vZGUsIEpOT0RFX0NSRUFURUQpIHx8CisJICAgIChwb3MtPmxlYWZfcmVsb2NhdGUgJiYgam5v
ZGVfZ2V0X2xldmVsKG5vZGUpID09IExFQUZfTEVWRUwpKQorCQlyZXR1cm4gMTsKKworCS8qIEZp
bmQgdGhlIHByZWNlZGVyLiBGSVhNRShCKTogV2hlbiB0aGUgY2hpbGQgaXMgYW4gdW5mb3JtYXR0
ZWQsCisJICAgcHJldmlvdXNseSBleGlzdGluZyBub2RlLCB0aGUgY29vcmQgbWF5IGJlIGxlZnRt
b3N0IGV2ZW4gdGhvdWdoIHRoZQorCSAgIGNoaWxkIGlzIG5vdCB0aGUgcGFyZW50LWZpcnN0IHBy
ZWNlZGVyIG9mIHRoZSBwYXJlbnQuIElmIHRoZSBmaXJzdAorCSAgIGRpcnR5IG5vZGUgYXBwZWFy
cyBzb21ld2hlcmUgaW4gdGhlIG1pZGRsZSBvZiB0aGUgZmlyc3QgZXh0ZW50IHVuaXQsCisJICAg
dGhpcyBwcmVjZWRlciBjYWxjdWxhdGlvbiBpcyB3cm9uZy4KKwkgICBOZWVkcyBtb3JlIGxvZ2lj
IGluIGhlcmUuICovCisJaWYgKGNvb3JkX2lzX2xlZnRtb3N0X3VuaXQocGFyZW50X2Nvb3JkKSkg
eworCQlwYmxrID0gKnpub2RlX2dldF9ibG9jayhwYXJlbnRfY29vcmQtPm5vZGUpOworCX0gZWxz
ZSB7CisJCXBibGsgPSBwb3MtPnByZWNlZGVyLmJsazsKKwl9CisJY2hlY2tfcHJlY2VkZXIocGJs
ayk7CisKKwkvKiBJZiAocGJsayA9PSAwKSB0aGVuIHRoZSBwcmVjZWRlciBpc24ndCBhbGxvY2F0
ZWQgb3IgaXNuJ3Qga25vd246CisJICAgcmVsb2NhdGUuICovCisJaWYgKHBibGsgPT0gMCkKKwkJ
cmV0dXJuIDE7CisKKwluYmxrID0gKmpub2RlX2dldF9ibG9jayhub2RlKTsKKworCWlmIChyZWlz
ZXI0X2Jsb2NrbnJfaXNfZmFrZSgmbmJsaykpCisJCS8qIGNoaWxkIGlzIHVuYWxsb2NhdGVkLCBt
YXJrIHBhcmVudCBkaXJ0eSAqLworCQlyZXR1cm4gMTsKKworCXJldHVybiByZXZlcnNlX3RyeV9k
ZWZyYWdtZW50X2lmX2Nsb3NlKCZwYmxrLCAmbmJsayk7Cit9CisKKy8qKgorICogQSBzdWJyb3V0
aW5lIG9mIGZvcndhcmRfYWxsb2NfZm9ybWF0dGVkX2h5YnJpZCgpLCB0aGlzIGlzIGNhbGxlZCBm
aXJzdCB0byBzZWUKKyAqIGlmIHRoZXJlIGlzIGEgY2xvc2UgcG9zaXRpb24gdG8gcmVsb2NhdGUg
dG8uIEl0IG1heSByZXR1cm4gRU5PU1BDIGlmIHRoZXJlIGlzCisgKiBubyBjbG9zZSBwb3NpdGlv
bi4gSWYgdGhlcmUgaXMgbm8gY2xvc2UgcG9zaXRpb24gaXQgbWF5IG5vdCByZWxvY2F0ZS4gVGhp
cworICogdGFrZXMgY2FyZSBvZiB1cGRhdGluZyB0aGUgcGFyZW50IG5vZGUgd2l0aCB0aGUgcmVs
b2NhdGVkIGJsb2NrIGFkZHJlc3MuCisgKgorICogd2FzIGFsbG9jYXRlX3pub2RlX3VwZGF0ZSgp
CisgKi8KK3N0YXRpYyBpbnQgZm9yd2FyZF90cnlfZGVmcmFnbWVudF9sb2NhbGl0eSh6bm9kZSAq
IG5vZGUsCisJCQkJCSAgIGNvbnN0IGNvb3JkX3QgKnBhcmVudF9jb29yZCwKKwkJCQkJICAgZmx1
c2hfcG9zX3QgKnBvcykKK3sKKwlpbnQgcmV0OworCXJlaXNlcjRfYmxvY2tfbnIgYmxrOworCWxv
Y2tfaGFuZGxlIHViZXJfbG9jazsKKwlpbnQgZmx1c2hfcmVzZXJ2ZWRfdXNlZCA9IDA7CisJaW50
IGdyYWJiZWQ7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2Rh
dGEgKnNiaW5mbzsKKworCWluaXRfbGgoJnViZXJfbG9jayk7CisKKwljdHggPSBnZXRfY3VycmVu
dF9jb250ZXh0KCk7CisJc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY3R4LT5zdXBlcik7CisK
KwlncmFiYmVkID0gY3R4LT5ncmFiYmVkX2Jsb2NrczsKKworCXJldCA9IHpsb2FkKG5vZGUpOwor
CWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlpZiAoWkZfSVNTRVQobm9kZSwgSk5PREVfQ1JF
QVRFRCkpIHsKKwkJYXNzZXJ0KCJ6YW0tODE2IiwgcmVpc2VyNF9ibG9ja25yX2lzX2Zha2Uoem5v
ZGVfZ2V0X2Jsb2NrKG5vZGUpKSk7CisJCXBvcy0+cHJlY2VkZXIuYmxvY2tfc3RhZ2UgPSBCTE9D
S19VTkFMTE9DQVRFRDsKKwl9IGVsc2UgeworCQlwb3MtPnByZWNlZGVyLmJsb2NrX3N0YWdlID0g
QkxPQ0tfR1JBQkJFRDsKKworCQkvKiBUaGUgZGlzayBzcGFjZSBmb3IgcmVsb2NhdGluZyB0aGUg
QG5vZGUgaXMgYWxyZWFkeSByZXNlcnZlZAorCQkgKiBpbiAiZmx1c2ggcmVzZXJ2ZWQiIGNvdW50
ZXIgaWYgQG5vZGUgaXMgbGVhZiwgb3RoZXJ3aXNlIHdlCisJCSAqIGdyYWIgc3BhY2UgdXNpbmcg
QkFfUkVTRVJWRUQgKG1lYW5zIGdyYWIgc3BhY2UgZnJvbSB3aG9sZQorCQkgKiBkaXNrIG5vdCBm
cm9tIG9ubHkgOTUlKS4gKi8KKwkJaWYgKHpub2RlX2dldF9sZXZlbChub2RlKSA9PSBMRUFGX0xF
VkVMKSB7CisJCQkvKgorCQkJICogZWFybGllciAoZHVyaW5nIGRvX2pub2RlX21ha2VfZGlydHko
KSkgd2UgZGVjaWRlZAorCQkJICogdGhhdCBAbm9kZSBjYW4gcG9zc2libHkgZ28gaW50byBvdmVy
d3JpdGUgc2V0IGFuZAorCQkJICogcmVzZXJ2ZWQgYmxvY2sgZm9yIGl0cyB3YW5kZXJpbmcgbG9j
YXRpb24uCisJCQkgKi8KKwkJCXR4bl9hdG9tICphdG9tID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2Nr
ZWQoKTsKKwkJCWFzc2VydCgibmlraXRhLTM0NDkiLAorCQkJICAgICAgIFpGX0lTU0VUKG5vZGUs
IEpOT0RFX0ZMVVNIX1JFU0VSVkVEKSk7CisJCQlmbHVzaF9yZXNlcnZlZDJncmFiYmVkKGF0b20s
IChfX3U2NCkgMSk7CisJCQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQkJLyoKKwkJCSAqIHdl
IGFyZSB0cnlpbmcgdG8gbW92ZSBub2RlIGludG8gcmVsb2NhdGUKKwkJCSAqIHNldC4gQWxsb2Nh
dGlvbiBvZiByZWxvY2F0ZWQgcG9zaXRpb24gInVzZXMiCisJCQkgKiByZXNlcnZlZCBibG9jay4K
KwkJCSAqLworCQkJWkZfQ0xSKG5vZGUsIEpOT0RFX0ZMVVNIX1JFU0VSVkVEKTsKKwkJCWZsdXNo
X3Jlc2VydmVkX3VzZWQgPSAxOworCQl9IGVsc2UgeworCQkJcmV0ID0gcmVpc2VyNF9ncmFiX3Nw
YWNlX2ZvcmNlKChfX3U2NCkgMSwgQkFfUkVTRVJWRUQpOworCQkJaWYgKHJldCAhPSAwKQorCQkJ
CWdvdG8gZXhpdDsKKwkJfQorCX0KKworCS8qIFdlIG1heSBkbyBub3QgdXNlIDUlIG9mIHJlc2Vy
dmVkIGRpc2sgc3BhY2UgaGVyZSBhbmQgZmx1c2ggd2lsbCBub3QKKwkgICBwYWNrIHRpZ2h0bHku
ICovCisJcmV0ID0gcmVpc2VyNF9hbGxvY19ibG9jaygmcG9zLT5wcmVjZWRlciwgJmJsaywKKwkJ
CQkgIEJBX0ZPUk1BVFRFRCB8IEJBX1BFUk1BTkVOVCk7CisJaWYgKHJldCkKKwkJZ290byBleGl0
OworCisJaWYgKCFaRl9JU1NFVChub2RlLCBKTk9ERV9DUkVBVEVEKSAmJgorCSAgICAocmV0ID0g
cmVpc2VyNF9kZWFsbG9jX2Jsb2NrKHpub2RlX2dldF9ibG9jayhub2RlKSwgMCwKKwkJCQkJIEJB
X0RFRkVSIHwgQkFfRk9STUFUVEVEKSkpCisJCWdvdG8gZXhpdDsKKworCWlmIChsaWtlbHkoIXpu
b2RlX2lzX3Jvb3Qobm9kZSkpKSB7CisJCWl0ZW1fcGx1Z2luICppcGx1ZzsKKworCQlpcGx1ZyA9
IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKHBhcmVudF9jb29yZCk7CisJCWFzc2VydCgibmlraXRhLTI5
NTQiLCBpcGx1Zy0+Zi51cGRhdGUgIT0gTlVMTCk7CisJCWlwbHVnLT5mLnVwZGF0ZShwYXJlbnRf
Y29vcmQsICZibGspOworCisJCXpub2RlX21ha2VfZGlydHkocGFyZW50X2Nvb3JkLT5ub2RlKTsK
KworCX0gZWxzZSB7CisJCXJlaXNlcjRfdHJlZSAqdHJlZSA9IHpub2RlX2dldF90cmVlKG5vZGUp
OworCQl6bm9kZSAqdWJlcjsKKworCQkvKiBXZSB0YWtlIGEgbG9uZ3Rlcm0gbG9jayBvbiB0aGUg
ZmFrZSBub2RlIGluIG9yZGVyIHRvIGNoYW5nZQorCQkgICB0aGUgcm9vdCBibG9jayBudW1iZXIu
ICBUaGlzIG1heSBjYXVzZSBhdG9tIGZ1c2lvbi4gKi8KKwkJcmV0ID0gZ2V0X3ViZXJfem5vZGUo
dHJlZSwgWk5PREVfV1JJVEVfTE9DSywgWk5PREVfTE9DS19ISVBSSSwKKwkJCQkgICAgICZ1YmVy
X2xvY2spOworCQkvKiBUaGUgZmFrZSBub2RlIGNhbm5vdCBiZSBkZWxldGVkLCBhbmQgd2UgbXVz
dCBoYXZlIHByaW9yaXR5CisJCSAgIGhlcmUsIGFuZCBtYXkgbm90IGJlIGNvbmZ1c2VkIHdpdGgg
RU5PU1BDLiAqLworCQlhc3NlcnQoImptYWNkLTc0NDEyIiwKKwkJICAgICAgIHJldCAhPSAtRUlO
VkFMICYmIHJldCAhPSAtRV9ERUFETE9DSyAmJiByZXQgIT0gLUVOT1NQQyk7CisKKwkJaWYgKHJl
dCkKKwkJCWdvdG8gZXhpdDsKKworCQl1YmVyID0gdWJlcl9sb2NrLm5vZGU7CisKKwkJd3JpdGVf
bG9ja190cmVlKHRyZWUpOworCQl0cmVlLT5yb290X2Jsb2NrID0gYmxrOworCQl3cml0ZV91bmxv
Y2tfdHJlZSh0cmVlKTsKKworCQl6bm9kZV9tYWtlX2RpcnR5KHViZXIpOworCX0KKwlyZXQgPSB6
bm9kZV9yZWhhc2gobm9kZSwgJmJsayk7CitleGl0OgorCWlmIChyZXQpIHsKKwkJLyogR2V0IGZs
dXNoIHJlc2VydmVkIGJsb2NrIGJhY2sgaWYgc29tZXRoaW5nIGZhaWxzLCBiZWNhdXNlCisJCSAq
IGNhbGxlcnMgYXNzdW1lIHRoYXQgb24gZXJyb3IgYmxvY2sgd2Fzbid0IHJlbG9jYXRlZCBhbmQg
aXRzCisJCSAqIGZsdXNoIHJlc2VydmVkIGJsb2NrIHdhc24ndCB1c2VkLiAqLworCQlpZiAoZmx1
c2hfcmVzZXJ2ZWRfdXNlZCkgeworCQkJLyoKKwkJCSAqIG9rLCB3ZSBmYWlsZWQgdG8gbW92ZSBu
b2RlIGludG8gcmVsb2NhdGUKKwkJCSAqIHNldC4gUmVzdG9yZSBzdGF0dXMgcXVvLgorCQkJICov
CisJCQlncmFiYmVkMmZsdXNoX3Jlc2VydmVkKChfX3U2NCkgMSk7CisJCQlaRl9TRVQobm9kZSwg
Sk5PREVfRkxVU0hfUkVTRVJWRUQpOworCQl9CisJfQorCXpyZWxzZShub2RlKTsKKwlkb25lX2xo
KCZ1YmVyX2xvY2spOworCWdyYWJiZWQyZnJlZV9tYXJrKGdyYWJiZWQpOworCXJldHVybiByZXQ7
Cit9CisKKy8qCisgKiBNYWtlIHRoZSBmaW5hbCByZWxvY2F0ZS93YW5kZXIgZGVjaXNpb24gZHVy
aW5nCisgKiBmb3J3YXJkIHBhcmVudC1maXJzdCBzcXVhbGxvYyBmb3IgYSBmb3JtYXR0ZWQgbm9k
ZQorICovCitzdGF0aWMgaW50IGZvcndhcmRfYWxsb2NfZm9ybWF0dGVkX2h5YnJpZCh6bm9kZSAq
IG5vZGUsCisJCQkJCSAgY29uc3QgY29vcmRfdCAqcGFyZW50X2Nvb3JkLAorCQkJCQkgIGZsdXNo
X3Bvc190ICpwb3MpCit7CisJaW50IHJldDsKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2Jp
bmZvID0gZ2V0X2N1cnJlbnRfc3VwZXJfcHJpdmF0ZSgpOworCS8qKgorIAkgKiBGSVhNRShEKTog
V2UgaGF2ZSB0aGUgbm9kZSB3cml0ZS1sb2NrZWQgYW5kIHNob3VsZCBoYXZlIGNoZWNrZWQgZm9y
ICEKKwkgKiBhbGxvY2F0ZWQoKSBzb21ld2hlcmUgYmVmb3JlIHJlYWNoaW5nIHRoaXMgcG9pbnQs
IGJ1dCB0aGVyZSBjYW4gYmUgYQorCSAqIHJhY2UsIHNvIHRoaXMgYXNzZXJ0aW9uIGlzIGJvZ3Vz
LgorCSAqLworCWFzc2VydCgiZWR3YXJkLTE2MTQiLCB6bm9kZV9pc19sb2FkZWQobm9kZSkpOwor
CWFzc2VydCgiam1hY2QtNzk4NyIsICFqbm9kZV9jaGVja19mbHVzaHByZXBwZWQoWkpOT0RFKG5v
ZGUpKSk7CisJYXNzZXJ0KCJqbWFjZC03OTg4Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKG5vZGUp
KTsKKwlhc3NlcnQoImptYWNkLTc5ODkiLCBjb29yZF9pc19pbnZhbGlkKHBhcmVudF9jb29yZCkK
KwkgICAgICAgfHwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKHBhcmVudF9jb29yZC0+bm9kZSkpOwor
CisJaWYgKFpGX0lTU0VUKG5vZGUsIEpOT0RFX1JFUEFDSykgfHwgWkZfSVNTRVQobm9kZSwgSk5P
REVfQ1JFQVRFRCkgfHwKKwkgICAgem5vZGVfaXNfcm9vdChub2RlKSB8fAorCSAgICAvKgorCSAg
ICAgKiBXZSBoYXZlIGVub3VnaCBub2RlcyB0byByZWxvY2F0ZSBubyBtYXR0ZXIgd2hhdC4KKwkg
ICAgICovCisJICAgIChwb3MtPmxlYWZfcmVsb2NhdGUgIT0gMCAmJiB6bm9kZV9nZXRfbGV2ZWwo
bm9kZSkgPT0gTEVBRl9MRVZFTCkpIHsKKwkJLyoKKwkJICogTm8gbmVlZCB0byBkZWNpZGUgd2l0
aCBuZXcgbm9kZXMsIHRoZXkgYXJlIHRyZWF0ZWQgdGhlIHNhbWUKKwkJICogYXMgcmVsb2NhdGUu
IElmIHRoZSByb290IG5vZGUgaXMgZGlydHksIHJlbG9jYXRlLgorCQkgKi8KKwkJaWYgKHBvcy0+
cHJlY2VkZXIuYmxrID09IDApIHsKKwkJCS8qCisJCQkgKiBwcmVjZWRlciBpcyB1bmtub3duIGFu
ZCB3ZSBoYXZlIGRlY2lkZWQgdG8gcmVsb2NhdGUKKwkJCSAqIG5vZGUgLS0gdXNpbmcgb2YgZGVm
YXVsdCB2YWx1ZSBmb3Igc2VhcmNoIHN0YXJ0IGlzCisJCQkgKiBiZXR0ZXIgdGhhbiBzZWFyY2gg
ZnJvbSBibG9jayAjMC4KKwkJCSAqLworCQkJZ2V0X2Jsb2NrbnJfaGludF9kZWZhdWx0KCZwb3Mt
PnByZWNlZGVyLmJsayk7CisJCQljaGVja19wcmVjZWRlcihwb3MtPnByZWNlZGVyLmJsayk7CisJ
CX0KKwkJZ290byBiZXN0X3JlbG9jOworCisJfSBlbHNlIGlmIChwb3MtPnByZWNlZGVyLmJsayA9
PSAwKSB7CisJCS8qIElmIHdlIGRvbid0IGtub3cgdGhlIHByZWNlZGVyLCBsZWF2ZSBpdCB3aGVy
ZSBpdCBpcy4gKi8KKwkJam5vZGVfbWFrZV93YW5kZXIoWkpOT0RFKG5vZGUpKTsKKwl9IGVsc2Ug
eworCQkvKiBNYWtlIGEgZGVjaXNpb24gYmFzZWQgb24gYmxvY2sgZGlzdGFuY2UuICovCisJCXJl
aXNlcjRfYmxvY2tfbnIgZGlzdDsKKwkJcmVpc2VyNF9ibG9ja19uciBuYmxrID0gKnpub2RlX2dl
dF9ibG9jayhub2RlKTsKKworCQlhc3NlcnQoImptYWNkLTYxNzIiLCAhcmVpc2VyNF9ibG9ja25y
X2lzX2Zha2UoJm5ibGspKTsKKwkJYXNzZXJ0KCJqbWFjZC02MTczIiwgIXJlaXNlcjRfYmxvY2tu
cl9pc19mYWtlKCZwb3MtPnByZWNlZGVyLmJsaykpOworCQlhc3NlcnQoImptYWNkLTYxNzQiLCBw
b3MtPnByZWNlZGVyLmJsayAhPSAwKTsKKworCQlpZiAocG9zLT5wcmVjZWRlci5ibGsgPT0gbmJs
ayAtIDEpIHsKKwkJCS8qIElkZWFsLiAqLworCQkJam5vZGVfbWFrZV93YW5kZXIoWkpOT0RFKG5v
ZGUpKTsKKwkJfSBlbHNlIHsKKworCQkJZGlzdCA9CisJCQkgICAgKG5ibGsgPAorCQkJICAgICBw
b3MtPnByZWNlZGVyLmJsaykgPyAocG9zLT5wcmVjZWRlci5ibGsgLQorCQkJCQkJICAgbmJsaykg
OiAobmJsayAtCisJCQkJCQkJICAgIHBvcy0+cHJlY2VkZXIuYmxrKTsKKworCQkJLyogU2VlIGlm
IHdlIGNhbiBmaW5kIGEgY2xvc2VyIGJsb2NrCisJCQkgICAoZm9yd2FyZCBkaXJlY3Rpb24gb25s
eSkuICovCisJCQlwb3MtPnByZWNlZGVyLm1heF9kaXN0ID0KKwkJCSAgICBtaW4oKHJlaXNlcjRf
YmxvY2tfbnIpIHNiaW5mby0+Zmx1c2guCisJCQkJcmVsb2NhdGVfZGlzdGFuY2UsIGRpc3QpOwor
CQkJcG9zLT5wcmVjZWRlci5sZXZlbCA9IHpub2RlX2dldF9sZXZlbChub2RlKTsKKworCQkJcmV0
ID0gZm9yd2FyZF90cnlfZGVmcmFnbWVudF9sb2NhbGl0eShub2RlLAorCQkJCQkJCSAgICAgIHBh
cmVudF9jb29yZCwKKwkJCQkJCQkgICAgICBwb3MpOworCQkJcG9zLT5wcmVjZWRlci5tYXhfZGlz
dCA9IDA7CisKKwkJCWlmIChyZXQgJiYgKHJldCAhPSAtRU5PU1BDKSkKKwkJCQlyZXR1cm4gcmV0
OworCisJCQlpZiAocmV0ID09IDApIHsKKwkJCQkvKiBHb3QgYSBiZXR0ZXIgYWxsb2NhdGlvbi4g
Ki8KKwkJCQl6bm9kZV9tYWtlX3JlbG9jKG5vZGUsIHBvcy0+ZnEpOworCQkJfSBlbHNlIGlmIChk
aXN0IDwgc2JpbmZvLT5mbHVzaC5yZWxvY2F0ZV9kaXN0YW5jZSkgeworCQkJCS8qIFRoZSBwcmVz
ZW50IGFsbG9jYXRpb24gaXMgZ29vZCBlbm91Z2guICovCisJCQkJam5vZGVfbWFrZV93YW5kZXIo
WkpOT0RFKG5vZGUpKTsKKwkJCX0gZWxzZSB7CisJCQkJLyoKKwkJCQkgKiBPdGhlcndpc2UsIHRy
eSB0byByZWxvY2F0ZSB0byB0aGUgYmVzdAorCQkJCSAqIHBvc2l0aW9uLgorCQkJCSAqLworCQkJ
YmVzdF9yZWxvYzoKKwkJCQlyZXQgPSBmb3J3YXJkX3RyeV9kZWZyYWdtZW50X2xvY2FsaXR5KG5v
ZGUsCisJCQkJCQkJCSAgICAgIHBhcmVudF9jb29yZCwKKwkJCQkJCQkJICAgICAgcG9zKTsKKwkJ
CQlpZiAocmV0ICE9IDApCisJCQkJCXJldHVybiByZXQ7CisJCQkJLyoKKwkJCQkgKiBzZXQgSk5P
REVfUkVMT0MgYml0IF9hZnRlcl8gbm9kZSBnZXRzCisJCQkJICogYWxsb2NhdGVkCisJCQkJICov
CisJCQkJem5vZGVfbWFrZV9yZWxvYyhub2RlLCBwb3MtPmZxKTsKKwkJCX0KKwkJfQorCX0KKwkv
KgorCSAqIFRoaXMgaXMgdGhlIG5ldyBwcmVjZWRlcgorCSAqLworCXBvcy0+cHJlY2VkZXIuYmxr
ID0gKnpub2RlX2dldF9ibG9jayhub2RlKTsKKwljaGVja19wcmVjZWRlcihwb3MtPnByZWNlZGVy
LmJsayk7CisJcG9zLT5hbGxvY19jbnQgKz0gMTsKKworCWFzc2VydCgiam1hY2QtNDI3NyIsICFy
ZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZSgmcG9zLT5wcmVjZWRlci5ibGspKTsKKworCXJldHVybiAw
OworfQorCitzdGF0aWMgaW50IGZvcndhcmRfYWxsb2NfdW5mb3JtYXR0ZWRfaHlicmlkKGZsdXNo
X3Bvc190ICpmbHVzaF9wb3MpCit7CisJY29vcmRfdCAqY29vcmQ7CisJcmVpc2VyNF9leHRlbnQg
KmV4dDsKKwlvaWRfdCBvaWQ7CisJX191NjQgaW5kZXg7CisJX191NjQgd2lkdGg7CisJZXh0ZW50
X3N0YXRlIHN0YXRlOworCXJlaXNlcjRfa2V5IGtleTsKKworCWFzc2VydCgidnMtMTQ2OCIsIGZs
dXNoX3Bvcy0+c3RhdGUgPT0gUE9TX09OX0VQT0lOVCk7CisJYXNzZXJ0KCJ2cy0xNDY5IiwgY29v
cmRfaXNfZXhpc3RpbmdfdW5pdCgmZmx1c2hfcG9zLT5jb29yZCkKKwkgICAgICAgJiYgaXRlbV9p
c19leHRlbnQoJmZsdXNoX3Bvcy0+Y29vcmQpKTsKKworCWNvb3JkID0gJmZsdXNoX3Bvcy0+Y29v
cmQ7CisKKwlleHQgPSBleHRlbnRfYnlfY29vcmQoY29vcmQpOworCXN0YXRlID0gc3RhdGVfb2Zf
ZXh0ZW50KGV4dCk7CisJaWYgKHN0YXRlID09IEhPTEVfRVhURU5UKSB7CisJCWZsdXNoX3Bvcy0+
c3RhdGUgPSBQT1NfSU5WQUxJRDsKKwkJcmV0dXJuIDA7CisJfQorCWl0ZW1fa2V5X2J5X2Nvb3Jk
KGNvb3JkLCAma2V5KTsKKwlvaWQgPSBnZXRfa2V5X29iamVjdGlkKCZrZXkpOworCWluZGV4ID0g
ZXh0ZW50X3VuaXRfaW5kZXgoY29vcmQpICsgZmx1c2hfcG9zLT5wb3NfaW5fdW5pdDsKKwl3aWR0
aCA9IGV4dGVudF9nZXRfd2lkdGgoZXh0KTsKKworCWFzc2VydCgidnMtMTQ1NyIsIHdpZHRoID4g
Zmx1c2hfcG9zLT5wb3NfaW5fdW5pdCk7CisKKwlpZiAoZmx1c2hfcG9zLT5sZWFmX3JlbG9jYXRl
IHx8IHN0YXRlID09IFVOQUxMT0NBVEVEX0VYVEVOVCkgeworCQlpbnQgZXhpdDsKKwkJaW50IHJl
c3VsdDsKKwkJcmVzdWx0ID0gZm9yd2FyZF9yZWxvY2F0ZV91bmZvcm1hdHRlZChmbHVzaF9wb3Ms
IGV4dCwgc3RhdGUsCisJCQkJCQkgICAgICBvaWQsCisJCQkJCQkgICAgICBpbmRleCwgd2lkdGgs
ICZleGl0KTsKKwkJaWYgKGV4aXQpCisJCQlyZXR1cm4gcmVzdWx0OworCX0gZWxzZQorCQlmb3J3
YXJkX292ZXJ3cml0ZV91bmZvcm1hdHRlZChmbHVzaF9wb3MsIG9pZCwgaW5kZXgsIHdpZHRoKTsK
KworCWZsdXNoX3Bvcy0+cG9zX2luX3VuaXQgPSAwOworCXJldHVybiAwOworfQorCitzdGF0aWMg
c3F1ZWV6ZV9yZXN1bHQgc3F1ZWV6ZV9hbGxvY191bmZvcm1hdHRlZF9oeWJyaWQoem5vZGUgKmxl
ZnQsCisJCQkJCQkgICAgICAgY29uc3QgY29vcmRfdCAqY29vcmQsCisJCQkJCQkgICAgICAgZmx1
c2hfcG9zX3QgKmZsdXNoX3BvcywKKwkJCQkJCSAgICAgICByZWlzZXI0X2tleSAqc3RvcF9rZXkp
Cit7CisJc3F1ZWV6ZV9yZXN1bHQgcmV0OworCXJlaXNlcjRfa2V5IGtleTsKKwlyZWlzZXI0X2V4
dGVudCAqZXh0OworCWV4dGVudF9zdGF0ZSBzdGF0ZTsKKworCWV4dCA9IGV4dGVudF9ieV9jb29y
ZChjb29yZCk7CisJc3RhdGUgPSBzdGF0ZV9vZl9leHRlbnQoZXh0KTsKKworCWlmICgoZmx1c2hf
cG9zLT5sZWFmX3JlbG9jYXRlICYmIHN0YXRlID09IEFMTE9DQVRFRF9FWFRFTlQpIHx8CisJICAg
IChzdGF0ZSA9PSBVTkFMTE9DQVRFRF9FWFRFTlQpKQorCQkvKgorCQkgKiByZWxvY2F0ZQorCQkg
Ki8KKwkJcmV0ID0gc3F1ZWV6ZV9yZWxvY2F0ZV91bmZvcm1hdHRlZChsZWZ0LCBjb29yZCwKKwkJ
CQkJCSAgIGZsdXNoX3BvcywgJmtleSwgc3RvcF9rZXkpOworCWVsc2UKKwkJLyoKKwkJICogKHN0
YXRlID09IEFMTE9DQVRFRF9FWFRFTlQgJiYgIWZsdXNoX3Bvcy0+bGVhZl9yZWxvY2F0ZSkgfHwK
KwkJICogIHN0YXRlID09IEhPTEVfRVhURU5UIC0gb3ZlcndyaXRlCisJCSAqLworCQlyZXQgPSBz
cXVlZXplX292ZXJ3cml0ZV91bmZvcm1hdHRlZChsZWZ0LCBjb29yZCwKKwkJCQkJCSAgICBmbHVz
aF9wb3MsICZrZXksIHN0b3Bfa2V5KTsKKwlpZiAocmV0ID09IFNRVUVFWkVfQ09OVElOVUUpCisJ
CSpzdG9wX2tleSA9IGtleTsKKwlyZXR1cm4gcmV0OworfQorCisvKioqKioqKioqKioqKioqKioq
KioqKiogSk9VUk5BTCBUUkFOU0FDVElPTiBNT0RFTCAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLworCitzdGF0aWMgaW50IGZvcndhcmRfYWxsb2NfZm9ybWF0dGVkX2pvdXJuYWwoem5vZGUg
KiBub2RlLAorCQkJCQkgICBjb25zdCBjb29yZF90ICpwYXJlbnRfY29vcmQsCisJCQkJCSAgIGZs
dXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldDsKKworCWlmIChaRl9JU1NFVChub2RlLCBKTk9E
RV9DUkVBVEVEKSkgeworCQlpZiAocG9zLT5wcmVjZWRlci5ibGsgPT0gMCkgeworCQkJLyoKKwkJ
CSAqIHByZWNlZGVyIGlzIHVua25vd24gYW5kIHdlIGhhdmUgZGVjaWRlZCB0byByZWxvY2F0ZQor
CQkJICogbm9kZSAtLSB1c2luZyBvZiBkZWZhdWx0IHZhbHVlIGZvciBzZWFyY2ggc3RhcnQgaXMK
KwkJCSAqIGJldHRlciB0aGFuIHNlYXJjaCBmcm9tIGJsb2NrICMwLgorCQkJICovCisJCQlnZXRf
YmxvY2tucl9oaW50X2RlZmF1bHQoJnBvcy0+cHJlY2VkZXIuYmxrKTsKKwkJCWNoZWNrX3ByZWNl
ZGVyKHBvcy0+cHJlY2VkZXIuYmxrKTsKKwkJfQorCQlyZXQgPSBmb3J3YXJkX3RyeV9kZWZyYWdt
ZW50X2xvY2FsaXR5KG5vZGUsCisJCQkJCQkgICAgICBwYXJlbnRfY29vcmQsCisJCQkJCQkgICAg
ICBwb3MpOworCQlpZiAocmV0ICE9IDApIHsKKwkJCXdhcm5pbmcoImVkd2FyZC0xNjE1IiwKKwkJ
CQkiZm9yd2FyZCBkZWZyYWcgZmFpbGVkICglZCkiLCByZXQpOworCQkJcmV0dXJuIHJldDsKKwkJ
fQorCQkvKgorCQkgKiBzZXQgSk5PREVfUkVMT0MgYml0IF9hZnRlcl8gbm9kZSBnZXRzCisJCSAq
IGFsbG9jYXRlZAorCQkgKi8KKwkJem5vZGVfbWFrZV9yZWxvYyhub2RlLCBwb3MtPmZxKTsKKwl9
CisJZWxzZQorCQlqbm9kZV9tYWtlX3dhbmRlcihaSk5PREUobm9kZSkpOworCS8qCisJICogVGhp
cyBpcyB0aGUgbmV3IHByZWNlZGVyCisJICovCisJcG9zLT5wcmVjZWRlci5ibGsgPSAqem5vZGVf
Z2V0X2Jsb2NrKG5vZGUpOworCWNoZWNrX3ByZWNlZGVyKHBvcy0+cHJlY2VkZXIuYmxrKTsKKwlw
b3MtPmFsbG9jX2NudCArPSAxOworCisJYXNzZXJ0KCJlZHdhcmQtMTYxNiIsICFyZWlzZXI0X2Js
b2NrbnJfaXNfZmFrZSgmcG9zLT5wcmVjZWRlci5ibGspKTsKKwlyZXR1cm4gMDsKK30KKworc3Rh
dGljIGludCBmb3J3YXJkX2FsbG9jX3VuZm9ybWF0dGVkX2pvdXJuYWwoZmx1c2hfcG9zX3QgKmZs
dXNoX3BvcykKK3sKKworCWNvb3JkX3QgKmNvb3JkOworCXJlaXNlcjRfZXh0ZW50ICpleHQ7CisJ
b2lkX3Qgb2lkOworCV9fdTY0IGluZGV4OworCV9fdTY0IHdpZHRoOworCWV4dGVudF9zdGF0ZSBz
dGF0ZTsKKwlyZWlzZXI0X2tleSBrZXk7CisKKwlhc3NlcnQoImVkd2FyZC0xNjE3IiwgZmx1c2hf
cG9zLT5zdGF0ZSA9PSBQT1NfT05fRVBPSU5UKTsKKwlhc3NlcnQoImVkd2FyZC0xNjE4IiwgY29v
cmRfaXNfZXhpc3RpbmdfdW5pdCgmZmx1c2hfcG9zLT5jb29yZCkKKwkgICAgICAgJiYgaXRlbV9p
c19leHRlbnQoJmZsdXNoX3Bvcy0+Y29vcmQpKTsKKworCWNvb3JkID0gJmZsdXNoX3Bvcy0+Y29v
cmQ7CisKKwlleHQgPSBleHRlbnRfYnlfY29vcmQoY29vcmQpOworCXN0YXRlID0gc3RhdGVfb2Zf
ZXh0ZW50KGV4dCk7CisJaWYgKHN0YXRlID09IEhPTEVfRVhURU5UKSB7CisJCWZsdXNoX3Bvcy0+
c3RhdGUgPSBQT1NfSU5WQUxJRDsKKwkJcmV0dXJuIDA7CisJfQorCWl0ZW1fa2V5X2J5X2Nvb3Jk
KGNvb3JkLCAma2V5KTsKKwlvaWQgPSBnZXRfa2V5X29iamVjdGlkKCZrZXkpOworCWluZGV4ID0g
ZXh0ZW50X3VuaXRfaW5kZXgoY29vcmQpICsgZmx1c2hfcG9zLT5wb3NfaW5fdW5pdDsKKwl3aWR0
aCA9IGV4dGVudF9nZXRfd2lkdGgoZXh0KTsKKworCWFzc2VydCgiZWR3YXJkLTE2MTkiLCB3aWR0
aCA+IGZsdXNoX3Bvcy0+cG9zX2luX3VuaXQpOworCisJaWYgKHN0YXRlID09IFVOQUxMT0NBVEVE
X0VYVEVOVCkgeworCQlpbnQgZXhpdDsKKwkJaW50IHJlc3VsdDsKKwkJcmVzdWx0ID0gZm9yd2Fy
ZF9yZWxvY2F0ZV91bmZvcm1hdHRlZChmbHVzaF9wb3MsIGV4dCwgc3RhdGUsCisJCQkJCQkgICAg
ICBvaWQsCisJCQkJCQkgICAgICBpbmRleCwgd2lkdGgsICZleGl0KTsKKwkJaWYgKGV4aXQpCisJ
CQlyZXR1cm4gcmVzdWx0OworCX0KKwllbHNlCisJCS8qCisJCSAqIHN0YXRlID09IEFMTE9DQVRF
RF9FWFRFTlQKKwkJICoga2VlcCBvbGQgYWxsb2NhdGlvbgorCQkgKi8KKwkJZm9yd2FyZF9vdmVy
d3JpdGVfdW5mb3JtYXR0ZWQoZmx1c2hfcG9zLCBvaWQsIGluZGV4LCB3aWR0aCk7CisKKwlmbHVz
aF9wb3MtPnBvc19pbl91bml0ID0gMDsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHNxdWVlemVf
cmVzdWx0IHNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWRfam91cm5hbCh6bm9kZSAqbGVmdCwKKwkJ
CQkJCQljb25zdCBjb29yZF90ICpjb29yZCwKKwkJCQkJCQlmbHVzaF9wb3NfdCAqZmx1c2hfcG9z
LAorCQkJCQkJCXJlaXNlcjRfa2V5ICpzdG9wX2tleSkKK3sKKwlzcXVlZXplX3Jlc3VsdCByZXQ7
CisJcmVpc2VyNF9rZXkga2V5OworCXJlaXNlcjRfZXh0ZW50ICpleHQ7CisJZXh0ZW50X3N0YXRl
IHN0YXRlOworCisJZXh0ID0gZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKTsKKwlzdGF0ZSA9IHN0YXRl
X29mX2V4dGVudChleHQpOworCisJaWYgKHN0YXRlID09IFVOQUxMT0NBVEVEX0VYVEVOVCkKKwkJ
cmV0ID0gc3F1ZWV6ZV9yZWxvY2F0ZV91bmZvcm1hdHRlZChsZWZ0LCBjb29yZCwKKwkJCQkJCSAg
IGZsdXNoX3BvcywgJmtleSwgc3RvcF9rZXkpOworCWVsc2UKKwkJLyoKKwkJICogc3RhdGUgPT0g
QUxMT0NBVEVEX0VYVEVOVCB8fCBzdGF0ZSA9PSBIT0xFX0VYVEVOVAorCQkgKi8KKwkJcmV0ID0g
c3F1ZWV6ZV9vdmVyd3JpdGVfdW5mb3JtYXR0ZWQobGVmdCwgY29vcmQsCisJCQkJCQkgICAgZmx1
c2hfcG9zLCAma2V5LCBzdG9wX2tleSk7CisJaWYgKHJldCA9PSBTUVVFRVpFX0NPTlRJTlVFKQor
CQkqc3RvcF9rZXkgPSBrZXk7CisJcmV0dXJuIHJldDsKK30KKworLyoqKioqKioqKioqKioqKioq
KioqKiogIFdBIChXcml0ZS1Bbnl3aGVyZSkgVFJBTlNBQ1RJT04gTU9ERUwgICoqKioqKioqKioq
KioqKi8KKworc3RhdGljIGludCBmb3J3YXJkX2FsbG9jX2Zvcm1hdHRlZF93YSh6bm9kZSAqIG5v
ZGUsCisJCQkJICAgICAgY29uc3QgY29vcmRfdCAqcGFyZW50X2Nvb3JkLAorCQkJCSAgICAgIGZs
dXNoX3Bvc190ICpwb3MpCit7CisJaW50IHJldDsKKworCWFzc2VydCgiZWR3YXJkLTE2MjAiLCB6
bm9kZV9pc19sb2FkZWQobm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTE2MjEiLCAham5vZGVfY2hl
Y2tfZmx1c2hwcmVwcGVkKFpKTk9ERShub2RlKSkpOworCWFzc2VydCgiZWR3YXJkLTE2MjIiLCB6
bm9kZV9pc193cml0ZV9sb2NrZWQobm9kZSkpOworCWFzc2VydCgiZWR3YXJkLTE2MjMiLCBjb29y
ZF9pc19pbnZhbGlkKHBhcmVudF9jb29yZCkKKwkgICAgICAgfHwgem5vZGVfaXNfd3JpdGVfbG9j
a2VkKHBhcmVudF9jb29yZC0+bm9kZSkpOworCisJaWYgKHBvcy0+cHJlY2VkZXIuYmxrID09IDAp
IHsKKwkJLyoKKwkJICogcHJlY2VkZXIgaXMgdW5rbm93biBhbmQgd2UgaGF2ZSBkZWNpZGVkIHRv
IHJlbG9jYXRlCisJCSAqIG5vZGUgLS0gdXNpbmcgb2YgZGVmYXVsdCB2YWx1ZSBmb3Igc2VhcmNo
IHN0YXJ0IGlzCisJCSAqIGJldHRlciB0aGFuIHNlYXJjaCBmcm9tIGJsb2NrICMwLgorCQkgKi8K
KwkJZ2V0X2Jsb2NrbnJfaGludF9kZWZhdWx0KCZwb3MtPnByZWNlZGVyLmJsayk7CisJCWNoZWNr
X3ByZWNlZGVyKHBvcy0+cHJlY2VkZXIuYmxrKTsKKwl9CisJcmV0ID0gZm9yd2FyZF90cnlfZGVm
cmFnbWVudF9sb2NhbGl0eShub2RlLCBwYXJlbnRfY29vcmQsIHBvcyk7CisJaWYgKHJldCAmJiAo
cmV0ICE9IC1FTk9TUEMpKSB7CisJCXdhcm5pbmcoImVkd2FyZC0xNjI0IiwKKwkJCSJmb3J3YXJk
IGRlZnJhZyBmYWlsZWQgKCVkKSIsIHJldCk7CisJCXJldHVybiByZXQ7CisJfQorCWlmIChyZXQg
PT0gMCkKKwkJem5vZGVfbWFrZV9yZWxvYyhub2RlLCBwb3MtPmZxKTsKKwllbHNlIHsKKwkJcmV0
ID0gZm9yd2FyZF90cnlfZGVmcmFnbWVudF9sb2NhbGl0eShub2RlLCBwYXJlbnRfY29vcmQsIHBv
cyk7CisJCWlmIChyZXQpIHsKKwkJCXdhcm5pbmcoImVkd2FyZC0xNjI1IiwKKwkJCQkiZm9yd2Fy
ZCBkZWZyYWcgZmFpbGVkICglZCkiLCByZXQpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCQkvKiBz
ZXQgSk5PREVfUkVMT0MgYml0IF9hZnRlcl8gbm9kZSBnZXRzIGFsbG9jYXRlZCAqLworCQl6bm9k
ZV9tYWtlX3JlbG9jKG5vZGUsIHBvcy0+ZnEpOworCX0KKwkvKgorCSAqIFRoaXMgaXMgdGhlIG5l
dyBwcmVjZWRlcgorCSAqLworCXBvcy0+cHJlY2VkZXIuYmxrID0gKnpub2RlX2dldF9ibG9jayhu
b2RlKTsKKwljaGVja19wcmVjZWRlcihwb3MtPnByZWNlZGVyLmJsayk7CisJcG9zLT5hbGxvY19j
bnQgKz0gMTsKKworCWFzc2VydCgiZWR3YXJkLTE2MjYiLCAhcmVpc2VyNF9ibG9ja25yX2lzX2Zh
a2UoJnBvcy0+cHJlY2VkZXIuYmxrKSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgZm9y
d2FyZF9hbGxvY191bmZvcm1hdHRlZF93YShmbHVzaF9wb3NfdCAqZmx1c2hfcG9zKQoreworCWlu
dCBleGl0OworCWludCByZXN1bHQ7CisKKwljb29yZF90ICpjb29yZDsKKwlyZWlzZXI0X2V4dGVu
dCAqZXh0OworCW9pZF90IG9pZDsKKwlfX3U2NCBpbmRleDsKKwlfX3U2NCB3aWR0aDsKKwlleHRl
bnRfc3RhdGUgc3RhdGU7CisJcmVpc2VyNF9rZXkga2V5OworCisJYXNzZXJ0KCJlZHdhcmQtMTYy
NyIsIGZsdXNoX3Bvcy0+c3RhdGUgPT0gUE9TX09OX0VQT0lOVCk7CisJYXNzZXJ0KCJlZHdhcmQt
MTYyOCIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoJmZsdXNoX3Bvcy0+Y29vcmQpCisJICAgICAg
ICYmIGl0ZW1faXNfZXh0ZW50KCZmbHVzaF9wb3MtPmNvb3JkKSk7CisKKwljb29yZCA9ICZmbHVz
aF9wb3MtPmNvb3JkOworCisJZXh0ID0gZXh0ZW50X2J5X2Nvb3JkKGNvb3JkKTsKKwlzdGF0ZSA9
IHN0YXRlX29mX2V4dGVudChleHQpOworCWlmIChzdGF0ZSA9PSBIT0xFX0VYVEVOVCkgeworCQlm
bHVzaF9wb3MtPnN0YXRlID0gUE9TX0lOVkFMSUQ7CisJCXJldHVybiAwOworCX0KKworCWl0ZW1f
a2V5X2J5X2Nvb3JkKGNvb3JkLCAma2V5KTsKKwlvaWQgPSBnZXRfa2V5X29iamVjdGlkKCZrZXkp
OworCWluZGV4ID0gZXh0ZW50X3VuaXRfaW5kZXgoY29vcmQpICsgZmx1c2hfcG9zLT5wb3NfaW5f
dW5pdDsKKwl3aWR0aCA9IGV4dGVudF9nZXRfd2lkdGgoZXh0KTsKKworCWFzc2VydCgiZWR3YXJk
LTE2MjkiLCB3aWR0aCA+IGZsdXNoX3Bvcy0+cG9zX2luX3VuaXQpOworCWFzc2VydCgiZWR3YXJk
LTE2MzAiLAorCSAgICAgICBzdGF0ZSA9PSBBTExPQ0FURURfRVhURU5UIHx8IHN0YXRlID09IFVO
QUxMT0NBVEVEX0VYVEVOVCk7CisJLyoKKwkgKiBhbHdheXMgcmVsb2NhdGUKKwkgKi8KKwlyZXN1
bHQgPSBmb3J3YXJkX3JlbG9jYXRlX3VuZm9ybWF0dGVkKGZsdXNoX3BvcywgZXh0LCBzdGF0ZSwg
b2lkLAorCQkJCQkgICAgICBpbmRleCwgd2lkdGgsICZleGl0KTsKKwlpZiAoZXhpdCkKKwkJcmV0
dXJuIHJlc3VsdDsKKwlmbHVzaF9wb3MtPnBvc19pbl91bml0ID0gMDsKKwlyZXR1cm4gMDsKK30K
Kworc3RhdGljIHNxdWVlemVfcmVzdWx0IHNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWRfd2Eoem5v
ZGUgKmxlZnQsCisJCQkJCQkgICBjb25zdCBjb29yZF90ICpjb29yZCwKKwkJCQkJCSAgIGZsdXNo
X3Bvc190ICpmbHVzaF9wb3MsCisJCQkJCQkgICByZWlzZXI0X2tleSAqc3RvcF9rZXkpCit7CisJ
c3F1ZWV6ZV9yZXN1bHQgcmV0OworCXJlaXNlcjRfa2V5IGtleTsKKwlyZWlzZXI0X2V4dGVudCAq
ZXh0OworCWV4dGVudF9zdGF0ZSBzdGF0ZTsKKworCWV4dCA9IGV4dGVudF9ieV9jb29yZChjb29y
ZCk7CisJc3RhdGUgPSBzdGF0ZV9vZl9leHRlbnQoZXh0KTsKKworCWlmIChzdGF0ZSA9PSBIT0xF
X0VYVEVOVCkKKwkJLyoKKwkJICogaG9sZSBleHRlbnRzIGFyZSBoYW5kbGVkIGluIHNxdWVlemVf
b3ZlcndyaXRlCisJCSAqLworCQlyZXQgPSBzcXVlZXplX292ZXJ3cml0ZV91bmZvcm1hdHRlZChs
ZWZ0LCBjb29yZCwKKwkJCQkJCSAgICBmbHVzaF9wb3MsICZrZXksIHN0b3Bfa2V5KTsKKwllbHNl
CisJCXJldCA9IHNxdWVlemVfcmVsb2NhdGVfdW5mb3JtYXR0ZWQobGVmdCwgY29vcmQsCisJCQkJ
CQkgICBmbHVzaF9wb3MsICZrZXksIHN0b3Bfa2V5KTsKKwlpZiAocmV0ID09IFNRVUVFWkVfQ09O
VElOVUUpCisJCSpzdG9wX2tleSA9IGtleTsKKwlyZXR1cm4gcmV0OworfQorCisvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLworCit0eG1vZF9wbHVnaW4gdHhtb2RfcGx1Z2luc1tMQVNUX1RYTU9EX0lE
XSA9IHsKKwlbSFlCUklEX1RYTU9EX0lEXSA9IHsKKwkJLmggPSB7CisJCQkudHlwZV9pZCA9IFJF
SVNFUjRfVFhNT0RfUExVR0lOX1RZUEUsCisJCQkuaWQgPSBIWUJSSURfVFhNT0RfSUQsCisJCQku
cG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAiaHlicmlkIiwKKwkJCS5kZXNjID0JIkh5YnJpZCBU
cmFuc2FjdGlvbiBNb2RlbCIsCisJCQkubGlua2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQku
Zm9yd2FyZF9hbGxvY19mb3JtYXR0ZWQgPSBmb3J3YXJkX2FsbG9jX2Zvcm1hdHRlZF9oeWJyaWQs
CisJCS5yZXZlcnNlX2FsbG9jX2Zvcm1hdHRlZCA9IHJldmVyc2VfYWxsb2NfZm9ybWF0dGVkX2h5
YnJpZCwKKwkJLmZvcndhcmRfYWxsb2NfdW5mb3JtYXR0ZWQgPSBmb3J3YXJkX2FsbG9jX3VuZm9y
bWF0dGVkX2h5YnJpZCwKKwkJLnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWQgPSBzcXVlZXplX2Fs
bG9jX3VuZm9ybWF0dGVkX2h5YnJpZAorCX0sCisJW0pPVVJOQUxfVFhNT0RfSURdID0geworCQku
aCA9IHsKKwkJCS50eXBlX2lkID0gUkVJU0VSNF9UWE1PRF9QTFVHSU5fVFlQRSwKKwkJCS5pZCA9
IEpPVVJOQUxfVFhNT0RfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAiam91cm5h
bCIsCisJCQkuZGVzYyA9ICJKb3VybmFsbGluZyBUcmFuc2FjdGlvbiBNb2RlbCIsCisJCQkubGlu
a2FnZSA9IHtOVUxMLCBOVUxMfQorCQl9LAorCQkuZm9yd2FyZF9hbGxvY19mb3JtYXR0ZWQgPSBm
b3J3YXJkX2FsbG9jX2Zvcm1hdHRlZF9qb3VybmFsLAorCQkucmV2ZXJzZV9hbGxvY19mb3JtYXR0
ZWQgPSBOVUxMLAorCQkuZm9yd2FyZF9hbGxvY191bmZvcm1hdHRlZCA9IGZvcndhcmRfYWxsb2Nf
dW5mb3JtYXR0ZWRfam91cm5hbCwKKwkJLnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWQgPSBzcXVl
ZXplX2FsbG9jX3VuZm9ybWF0dGVkX2pvdXJuYWwKKwl9LAorCVtXQV9UWE1PRF9JRF0gPSB7CisJ
CS5oID0geworCQkJLnR5cGVfaWQgPSBSRUlTRVI0X1RYTU9EX1BMVUdJTl9UWVBFLAorCQkJLmlk
ID0gV0FfVFhNT0RfSUQsCisJCQkucG9wcyA9IE5VTEwsCisJCQkubGFiZWwgPSAid2EiLAorCQkJ
LmRlc2MgPQkiV3JpdGUtQW55d2hlcmUgVHJhbnNhY3Rpb24gTW9kZWwiLAorCQkJLmxpbmthZ2Ug
PSB7TlVMTCwgTlVMTH0KKwkJfSwKKwkJLmZvcndhcmRfYWxsb2NfZm9ybWF0dGVkID0gZm9yd2Fy
ZF9hbGxvY19mb3JtYXR0ZWRfd2EsCisJCS5yZXZlcnNlX2FsbG9jX2Zvcm1hdHRlZCA9IE5VTEws
CisJCS5mb3J3YXJkX2FsbG9jX3VuZm9ybWF0dGVkID0gZm9yd2FyZF9hbGxvY191bmZvcm1hdHRl
ZF93YSwKKwkJLnNxdWVlemVfYWxsb2NfdW5mb3JtYXR0ZWQgPSBzcXVlZXplX2FsbG9jX3VuZm9y
bWF0dGVkX3dhCisJfQorfTsKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50
YXRpb24tc3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0
OiA4CisgKiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogRW5kOgorICovCmRp
ZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcG9v
bC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Bvb2wuYwotLS0gbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9wb29sLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysr
IGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Bvb2wuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3ODIy
MjM3MiArMDEwMApAQCAtMCwwICsxLDIzMSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIw
MDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFE
TUUgKi8KKworLyogRmFzdCBwb29sIGFsbG9jYXRpb24uCisKKyAgIFRoZXJlIGFyZSBzaXR1YXRp
b25zIHdoZW4gc29tZSBzdWItc3lzdGVtIG5vcm1hbGx5IGFza3MgbWVtb3J5IGFsbG9jYXRvcgor
ICAgZm9yIG9ubHkgZmV3IG9iamVjdHMsIGJ1dCB1bmRlciBzb21lIGNpcmN1bXN0YW5jZXMgY291
bGQgcmVxdWlyZSBtdWNoCisgICBtb3JlLiBUeXBpY2FsIGFuZCBhY3R1YWxseSBtb3RpdmF0aW5n
IGV4YW1wbGUgaXMgdHJlZSBiYWxhbmNpbmcuIEl0IG5lZWRzCisgICB0byBrZWVwIHRyYWNrIG9m
IG5vZGVzIHRoYXQgd2VyZSBpbnZvbHZlZCBpbnRvIGl0LCBhbmQgaXQgaXMgd2VsbC1rbm93bgor
ICAgdGhhdCBpbiByZWFzb25hYmxlIHBhY2tlZCBiYWxhbmNlZCB0cmVlIG1vc3QgKDkyLjkzODEy
MSUpIHBlcmNlbnQgb2YgYWxsCisgICBiYWxhbmNpbmdzIGVuZCB1cCBhZnRlciB3b3JraW5nIHdp
dGggb25seSBmZXcgbm9kZXMgKDMuMTQxNTkyIG9uCisgICBhdmVyYWdlKS4gQnV0IGluIHJhcmUg
Y2FzZXMgYmFsYW5jaW5nIGNhbiBpbnZvbHZlIG11Y2ggbW9yZSBub2RlcworICAgKDMqdHJlZV9o
ZWlnaHQrMSBpbiBleHRyZW1hbCBzaXR1YXRpb24pLgorCisgICBPbiB0aGUgb25lIGhhbmQsIHdl
IGRvbid0IHdhbnQgdG8gcmVzb3J0IHRvIGR5bmFtaWMgYWxsb2NhdGlvbiAoc2xhYiwKKyAgICBt
YWxsb2MoKSwgZXRjLikgdG8gYWxsb2NhdGUgZGF0YSBzdHJ1Y3R1cmVzIHJlcXVpcmVkIHRvIGtl
ZXAgdHJhY2sgb2YKKyAgIG5vZGVzIGR1cmluZyBiYWxhbmNpbmcuIE9uIHRoZSBvdGhlciBoYW5k
LCB3ZSBjYW5ub3Qgc3RhdGljYWxseSBhbGxvY2F0ZQorICAgcmVxdWlyZWQgYW1vdW50IG9mIHNw
YWNlIG9uIHRoZSBzdGFjaywgYmVjYXVzZSBmaXJzdDogaXQgaXMgdXNlbGVzcyB3YXN0YWdlCisg
ICBvZiBwcmVjaW91cyByZXNvdXJjZSwgYW5kIHNlY29uZDogdGhpcyBhbW91bnQgaXMgdW5rbm93
biBpbiBhZHZhbmNlICh0cmVlCisgICBoZWlnaHQgY2FuIGNoYW5nZSkuCisKKyAgIFBvb2xzLCBp
bXBsZW1lbnRlZCBpbiB0aGlzIGZpbGUgYXJlIHNvbHV0aW9uIGZvciB0aGlzIHByb2JsZW06CisK
KyAgICAtIHNvbWUgY29uZmlndXJhYmxlIGFtb3VudCBvZiBvYmplY3RzIGlzIHN0YXRpY2FsbHkg
cHJlYWxsb2NhdGVkIG9uIHRoZQorICAgIHN0YWNrCisKKyAgICAtIGlmIHRoaXMgcHJlYWxsb2Nh
dGVkIHBvb2wgaXMgZXhoYXVzdGVkIGFuZCBtb3JlIG9iamVjdHMgaXMgcmVxdWVzdGVkCisgICAg
dGhleSBhcmUgYWxsb2NhdGVkIGR5bmFtaWNhbGx5LgorCisgICBQb29scyBlbmNhcHN1bGF0ZSBk
aXN0aW5jdGlvbiBiZXR3ZWVuIHN0YXRpY2FsbHkgYW5kIGR5bmFtaWNhbGx5IGFsbG9jYXRlZAor
ICAgb2JqZWN0cy4gQm90aCBhbGxvY2F0aW9uIGFuZCByZWN5Y2xpbmcgbG9vayBleGFjdGx5IHRo
ZSBzYW1lLgorCisgICBUbyBrZWVwIHRyYWNrIG9mIGR5bmFtaWNhbGx5IGFsbG9jYXRlZCBvYmpl
Y3RzLCBwb29sIGFkZHMgaXRzIG93biBsaW5rYWdlCisgICB0byBlYWNoIG9iamVjdC4KKworICAg
Tk9URS1OSUtJVEEgVGhpcyBsaW5rYWdlIGFsc28gY29udGFpbnMgc29tZSBiYWxhbmNpbmctc3Bl
Y2lmaWMgZGF0YS4gVGhpcworICAgaXMgbm90IHBlcmZlY3QuIE9uIHRoZSBvdGhlciBoYW5kLCBi
YWxhbmNpbmcgaXMgY3VycmVudGx5IHRoZSBvbmx5IGNsaWVudAorICAgb2YgcG9vbCBjb2RlLgor
CisgICBOT1RFLU5JS0lUQSBBbm90aGVyIGRlc2lyYWJsZSBmZWF0dXJlIGlzIHRvIHJld3JpdGUg
YWxsIHBvb2wgbWFuaXB1bGF0aW9uCisgICBmdW5jdGlvbnMgaW4gdGhlIHN0eWxlIG9mIHRzbGlz
dC90c2hhc2gsIGkuZS4sIG1ha2UgdGhlbSB1bnJlYWRhYmxlLCBidXQKKyAgIHR5cGUtc2FmZS4K
KworKi8KKworI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAicG9vbC5oIgorI2luY2x1ZGUg
InN1cGVyLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L2Vy
ci5oPgorCisvKiBpbml0aWFsaXplIG5ldyBwb29sIG9iamVjdCBAaCAqLworc3RhdGljIHZvaWQg
cmVpc2VyNF9pbml0X3Bvb2xfb2JqKHN0cnVjdCByZWlzZXI0X3Bvb2xfaGVhZGVyICpoKQorewor
CUlOSVRfTElTVF9IRUFEKCZoLT51c2FnZV9saW5rYWdlKTsKKwlJTklUX0xJU1RfSEVBRCgmaC0+
bGV2ZWxfbGlua2FnZSk7CisJSU5JVF9MSVNUX0hFQUQoJmgtPmV4dHJhX2xpbmthZ2UpOworfQor
CisvKiBpbml0aWFsaXplIG5ldyBwb29sICovCit2b2lkIHJlaXNlcjRfaW5pdF9wb29sKHN0cnVj
dCByZWlzZXI0X3Bvb2wgKnBvb2wgLyogcG9vbCB0byBpbml0aWFsaXplICovICwKKwkJICAgICAg
IHNpemVfdCBvYmpfc2l6ZSAvKiBzaXplIG9mIG9iamVjdHMgaW4gQHBvb2wgKi8gLAorCQkgICAg
ICAgaW50IG51bV9vZl9vYmpzIC8qIG51bWJlciBvZiBwcmVhbGxvY2F0ZWQgb2JqZWN0cyAqLyAs
CisJCSAgICAgICBjaGFyICpkYXRhLyogYXJlYSBmb3IgcHJlYWxsb2NhdGVkIG9iamVjdHMgKi8p
Cit7CisJc3RydWN0IHJlaXNlcjRfcG9vbF9oZWFkZXIgKmg7CisJaW50IGk7CisKKwlhc3NlcnQo
Im5pa2l0YS05NTUiLCBwb29sICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEwNDQiLCBvYmpf
c2l6ZSA+IDApOworCWFzc2VydCgibmlraXRhLTk1NiIsIG51bV9vZl9vYmpzID49IDApOworCWFz
c2VydCgibmlraXRhLTk1NyIsIGRhdGEgIT0gTlVMTCk7CisKKwltZW1zZXQocG9vbCwgMCwgc2l6
ZW9mICpwb29sKTsKKwlwb29sLT5vYmpfc2l6ZSA9IG9ial9zaXplOworCXBvb2wtPmRhdGEgPSBk
YXRhOworCUlOSVRfTElTVF9IRUFEKCZwb29sLT5mcmVlKTsKKwlJTklUX0xJU1RfSEVBRCgmcG9v
bC0+dXNlZCk7CisJSU5JVF9MSVNUX0hFQUQoJnBvb2wtPmV4dHJhKTsKKwltZW1zZXQoZGF0YSwg
MCwgb2JqX3NpemUgKiBudW1fb2Zfb2Jqcyk7CisJZm9yIChpID0gMDsgaSA8IG51bV9vZl9vYmpz
OyArK2kpIHsKKwkJaCA9IChzdHJ1Y3QgcmVpc2VyNF9wb29sX2hlYWRlciAqKSAoZGF0YSArIGkg
KiBvYmpfc2l6ZSk7CisJCXJlaXNlcjRfaW5pdF9wb29sX29iaihoKTsKKwkJLyogYWRkIHBvb2wg
aGVhZGVyIHRvIHRoZSBlbmQgb2YgcG9vbCdzIGZyZWUgbGlzdCAqLworCQlsaXN0X2FkZF90YWls
KCZoLT51c2FnZV9saW5rYWdlLCAmcG9vbC0+ZnJlZSk7CisJfQorfQorCisvKiByZWxlYXNlIHBv
b2wgcmVzb3VyY2VzCisKKyAgIFJlbGVhc2UgYWxsIHJlc291cmNlcyBhY3F1aXJlZCBieSB0aGlz
IHBvb2wsIHNwZWNpZmljYWxseSwgZHluYW1pY2FsbHkKKyAgIGFsbG9jYXRlZCBvYmplY3RzLgor
CisqLwordm9pZCByZWlzZXI0X2RvbmVfcG9vbChzdHJ1Y3QgcmVpc2VyNF9wb29sICpwb29sIFVO
VVNFRF9BUkcpCit7Cit9CisKKy8qIGFsbG9jYXRlIGNhcnJ5IG9iamVjdCBmcm9tIEBwb29sCisK
KyAgIEZpcnN0LCB0cnkgdG8gZ2V0IHByZWFsbG9jYXRlZCBvYmplY3QuIElmIHRoaXMgZmFpbHMs
IHJlc29ydCB0byBkeW5hbWljCisgICBhbGxvY2F0aW9uLgorCisqLworc3RhdGljIHZvaWQgKnJl
aXNlcjRfcG9vbF9hbGxvYyhzdHJ1Y3QgcmVpc2VyNF9wb29sICpwb29sKQoreworCXN0cnVjdCBy
ZWlzZXI0X3Bvb2xfaGVhZGVyICpyZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS05NTkiLCBwb29s
ICE9IE5VTEwpOworCisJaWYgKCFsaXN0X2VtcHR5KCZwb29sLT5mcmVlKSkgeworCQlzdHJ1Y3Qg
bGlzdF9oZWFkICpsaW5rYWdlOworCisJCWxpbmthZ2UgPSBwb29sLT5mcmVlLm5leHQ7CisJCWxp
c3RfZGVsKGxpbmthZ2UpOworCQlJTklUX0xJU1RfSEVBRChsaW5rYWdlKTsKKwkJcmVzdWx0ID0g
bGlzdF9lbnRyeShsaW5rYWdlLCBzdHJ1Y3QgcmVpc2VyNF9wb29sX2hlYWRlciwKKwkJCQkgICAg
dXNhZ2VfbGlua2FnZSk7CisJCUJVR19PTighbGlzdF9lbXB0eSgmcmVzdWx0LT5sZXZlbF9saW5r
YWdlKSB8fAorCQkgICAgICAgIWxpc3RfZW1wdHkoJnJlc3VsdC0+ZXh0cmFfbGlua2FnZSkpOwor
CX0gZWxzZSB7CisJCS8qIHBvb2wgaXMgZW1wdHkuIEV4dHJhIGFsbG9jYXRpb25zIGRvbid0IGRl
c2VydmUgZGVkaWNhdGVkCisJCSAgIHNsYWIgdG8gYmUgc2VydmVkIGZyb20sIGFzIHRoZXkgYXJl
IGV4cGVjdGVkIHRvIGJlIHJhcmUuICovCisJCXJlc3VsdCA9IGttYWxsb2MocG9vbC0+b2JqX3Np
emUsIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwkJaWYgKHJlc3VsdCAhPSAwKSB7CisJ
CQlyZWlzZXI0X2luaXRfcG9vbF9vYmoocmVzdWx0KTsKKwkJCWxpc3RfYWRkKCZyZXN1bHQtPmV4
dHJhX2xpbmthZ2UsICZwb29sLT5leHRyYSk7CisJCX0gZWxzZQorCQkJcmV0dXJuIEVSUl9QVFIo
UkVURVJSKC1FTk9NRU0pKTsKKwkJQlVHX09OKCFsaXN0X2VtcHR5KCZyZXN1bHQtPnVzYWdlX2xp
bmthZ2UpIHx8CisJCSAgICAgICAhbGlzdF9lbXB0eSgmcmVzdWx0LT5sZXZlbF9saW5rYWdlKSk7
CisJfQorCSsrcG9vbC0+b2JqczsKKwlsaXN0X2FkZCgmcmVzdWx0LT51c2FnZV9saW5rYWdlLCAm
cG9vbC0+dXNlZCk7CisJbWVtc2V0KHJlc3VsdCArIDEsIDAsIHBvb2wtPm9ial9zaXplIC0gc2l6
ZW9mICpyZXN1bHQpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJldHVybiBvYmplY3QgYmFj
ayB0byB0aGUgcG9vbCAqLwordm9pZCByZWlzZXI0X3Bvb2xfZnJlZShzdHJ1Y3QgcmVpc2VyNF9w
b29sICpwb29sLAorCQkgICAgICAgc3RydWN0IHJlaXNlcjRfcG9vbF9oZWFkZXIgKmgpCit7CisJ
YXNzZXJ0KCJuaWtpdGEtOTYxIiwgaCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS05NjIiLCBw
b29sICE9IE5VTEwpOworCisJLS1wb29sLT5vYmpzOworCWFzc2VydCgibmlraXRhLTk2MyIsIHBv
b2wtPm9ianMgPj0gMCk7CisKKwlsaXN0X2RlbF9pbml0KCZoLT51c2FnZV9saW5rYWdlKTsKKwls
aXN0X2RlbF9pbml0KCZoLT5sZXZlbF9saW5rYWdlKTsKKworCWlmIChsaXN0X2VtcHR5KCZoLT5l
eHRyYV9saW5rYWdlKSkKKwkJLyoKKwkJICogcG9vbCBoZWFkZXIgaXMgbm90IGFuIGV4dHJhIG9u
ZS4gUHVzaCBpdCBvbnRvIGZyZWUgbGlzdAorCQkgKiB1c2luZyB1c2FnZV9saW5rYWdlCisJCSAq
LworCQlsaXN0X2FkZCgmaC0+dXNhZ2VfbGlua2FnZSwgJnBvb2wtPmZyZWUpOworCWVsc2Ugewor
CQkvKiByZW1vdmUgcG9vbCBoZWFkZXIgZnJvbSBwb29sJ3MgZXh0cmEgbGlzdCBhbmQga2ZyZWUg
aXQgKi8KKwkJbGlzdF9kZWwoJmgtPmV4dHJhX2xpbmthZ2UpOworCQlrZnJlZShoKTsKKwl9Cit9
CisKKy8qIGFkZCBuZXcgb2JqZWN0IHRvIHRoZSBjYXJyeSBsZXZlbCBsaXN0CisKKyAgIENhcnJ5
IGxldmVsIGlzIEZJRk8gbW9zdCBvZiB0aGUgdGltZSwgYnV0IG5vdCBhbHdheXMuIENvbXBsaWNh
dGlvbnMgYXJpc2UKKyAgIHdoZW4gbWFrZV9zcGFjZSgpIGZ1bmN0aW9uIHRyaWVzIHRvIGdvIHRv
IHRoZSBsZWZ0IG5laWdoYm9yIGFuZCB0aHVzIGFkZHMKKyAgIGNhcnJ5IG5vZGUgYmVmb3JlIGV4
aXN0aW5nIG5vZGVzLCBhbmQgYWxzbywgd2hlbiB1cGRhdGluZyBkZWxpbWl0aW5nIGtleXMKKyAg
IGFmdGVyIG1vdmluZyBkYXRhIGJldHdlZW4gdHdvIG5vZGVzLCB3ZSB3YW50IGxlZnQgbm9kZSB0
byBiZSBsb2NrZWQgYmVmb3JlCisgICByaWdodCBub2RlLgorCisgICBMYXR0ZXIgY2FzZSBpcyBj
b25mdXNpbmcgYXQgdGhlIGZpcnN0IGdsYW5jZS4gUHJvYmxlbSBpcyB0aGF0IENPUF9VUERBVEUK
KyAgIG9wcmF0aW9uIHRoYXQgdXBkYXRlcyBkZWxpbWl0aW5nIGtleXMgaXMgc29tZXRpbWVzIGNh
bGxlZCB3aXRoIHR3byBub2RlcworICAgKHdoZW4gZGF0YSBhcmUgbW92ZWQgYmV0d2VlbiB0d28g
bm9kZXMpIGFuZCBzb21ldGltZXMgd2l0aCBvbmx5IG9uZSBub2RlCisgICAod2hlbiBsZWZ0bW9z
dCBpdGVtIGlzIGRlbGV0ZWQgaW4gYSBub2RlKS4gSW4gYW55IGNhc2Ugb3BlcmF0aW9uIGlzCisg
ICBzdXBwbGllZCB3aXRoIGF0IGxlYXN0IG5vZGUgd2hvc2UgbGVmdCBkZWxpbWl0aW5nIGtleSBp
cyB0byBiZSB1cGRhdGVkCisgICAodGhhdCBpcyAicmlnaHQiIG5vZGUpLgorCisgICBAcG9vbCAt
IGZyb20gd2hpY2ggdG8gYWxsb2NhdGUgbmV3IG9iamVjdDsKKyAgIEBsaXN0IC0gd2hlcmUgdG8g
YWRkIG9iamVjdDsKKyAgIEByZWZlcmVuY2UgLSBhZnRlciAob3IgYmVmb3JlKSB3aGljaCBleGlz
dGluZyBvYmplY3QgdG8gYWRkCisqLworc3RydWN0IHJlaXNlcjRfcG9vbF9oZWFkZXIgKnJlaXNl
cjRfYWRkX29iaihzdHJ1Y3QgcmVpc2VyNF9wb29sICpwb29sLAorCQkJCQkgc3RydWN0IGxpc3Rf
aGVhZCAqbGlzdCwKKwkJCQkJIHBvb2xfb3JkZXJpbmcgb3JkZXIsCisJCQkJCSBzdHJ1Y3QgcmVp
c2VyNF9wb29sX2hlYWRlciAqcmVmZXJlbmNlKQoreworCXN0cnVjdCByZWlzZXI0X3Bvb2xfaGVh
ZGVyICpyZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS05NzIiLCBwb29sICE9IE5VTEwpOworCisJ
cmVzdWx0ID0gcmVpc2VyNF9wb29sX2FsbG9jKHBvb2wpOworCWlmIChJU19FUlIocmVzdWx0KSkK
KwkJcmV0dXJuIHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTk3MyIsIHJlc3VsdCAhPSBOVUxM
KTsKKworCXN3aXRjaCAob3JkZXIpIHsKKwljYXNlIFBPT0xPX0JFRk9SRToKKwkJX19saXN0X2Fk
ZCgmcmVzdWx0LT5sZXZlbF9saW5rYWdlLAorCQkJICAgcmVmZXJlbmNlLT5sZXZlbF9saW5rYWdl
LnByZXYsCisJCQkgICAmcmVmZXJlbmNlLT5sZXZlbF9saW5rYWdlKTsKKwkJYnJlYWs7CisJY2Fz
ZSBQT09MT19BRlRFUjoKKwkJX19saXN0X2FkZCgmcmVzdWx0LT5sZXZlbF9saW5rYWdlLAorCQkJ
ICAgJnJlZmVyZW5jZS0+bGV2ZWxfbGlua2FnZSwKKwkJCSAgIHJlZmVyZW5jZS0+bGV2ZWxfbGlu
a2FnZS5uZXh0KTsKKwkJYnJlYWs7CisJY2FzZSBQT09MT19MQVNUOgorCQlsaXN0X2FkZF90YWls
KCZyZXN1bHQtPmxldmVsX2xpbmthZ2UsIGxpc3QpOworCQlicmVhazsKKwljYXNlIFBPT0xPX0ZJ
UlNUOgorCQlsaXN0X2FkZCgmcmVzdWx0LT5sZXZlbF9saW5rYWdlLCBsaXN0KTsKKwkJYnJlYWs7
CisJZGVmYXVsdDoKKwkJd3JvbmdfcmV0dXJuX3ZhbHVlKCJuaWtpdGEtOTI3IiwgIm9yZGVyIik7
CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2Nh
bCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1l
OiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNv
bHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3Bvb2wuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wb29s
LmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcG9vbC5oCTE5NzAtMDEtMDEgMDE6
MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9wb29sLmgJ
MjAyMC0wMi0wNSAyMDo1Mzo0MS40NzgyMjIzNzIgKzAxMDAKQEAgLTAsMCArMSw1NyBAQAorLyog
Q29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zl
cm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogRmFzdCBwb29sIGFsbG9jYXRpb24g
Ki8KKworI2lmbmRlZiBfX1JFSVNFUjRfUE9PTF9IX18KKyNkZWZpbmUgX19SRUlTRVI0X1BPT0xf
SF9fCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorCitzdHJ1Y3QgcmVpc2VyNF9wb29sIHsK
KwlzaXplX3Qgb2JqX3NpemU7CisJaW50IG9ianM7CisJY2hhciAqZGF0YTsKKwlzdHJ1Y3QgbGlz
dF9oZWFkIGZyZWU7CisJc3RydWN0IGxpc3RfaGVhZCB1c2VkOworCXN0cnVjdCBsaXN0X2hlYWQg
ZXh0cmE7Cit9OworCitzdHJ1Y3QgcmVpc2VyNF9wb29sX2hlYWRlciB7CisJLyogb2JqZWN0IGlz
IGVpdGhlciBvbiBmcmVlIG9yICJ1c2VkIiBsaXN0cyAqLworCXN0cnVjdCBsaXN0X2hlYWQgdXNh
Z2VfbGlua2FnZTsKKwlzdHJ1Y3QgbGlzdF9oZWFkIGxldmVsX2xpbmthZ2U7CisJc3RydWN0IGxp
c3RfaGVhZCBleHRyYV9saW5rYWdlOworfTsKKwordHlwZWRlZiBlbnVtIHsKKwlQT09MT19CRUZP
UkUsCisJUE9PTE9fQUZURVIsCisJUE9PTE9fTEFTVCwKKwlQT09MT19GSVJTVAorfSBwb29sX29y
ZGVyaW5nOworCisvKiBwb29sIG1hbmlwdWxhdGlvbiBmdW5jdGlvbnMgKi8KKworZXh0ZXJuIHZv
aWQgcmVpc2VyNF9pbml0X3Bvb2woc3RydWN0IHJlaXNlcjRfcG9vbCAqcG9vbCwgc2l6ZV90IG9i
al9zaXplLAorCQkJICAgICAgaW50IG51bV9vZl9vYmpzLCBjaGFyICpkYXRhKTsKK2V4dGVybiB2
b2lkIHJlaXNlcjRfZG9uZV9wb29sKHN0cnVjdCByZWlzZXI0X3Bvb2wgKnBvb2wpOworZXh0ZXJu
IHZvaWQgcmVpc2VyNF9wb29sX2ZyZWUoc3RydWN0IHJlaXNlcjRfcG9vbCAqcG9vbCwKKwkJCSAg
ICAgIHN0cnVjdCByZWlzZXI0X3Bvb2xfaGVhZGVyICpoKTsKK3N0cnVjdCByZWlzZXI0X3Bvb2xf
aGVhZGVyICpyZWlzZXI0X2FkZF9vYmooc3RydWN0IHJlaXNlcjRfcG9vbCAqcG9vbCwKKwkJCQkJ
IHN0cnVjdCBsaXN0X2hlYWQgKmxpc3QsCisJCQkJCSBwb29sX29yZGVyaW5nIG9yZGVyLAorCQkJ
CQkgc3RydWN0IHJlaXNlcjRfcG9vbF9oZWFkZXIgKnJlZmVyZW5jZSk7CisKKy8qIF9fUkVJU0VS
NF9QT09MX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2
YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAi
TEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVt
bjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3JlYWRhaGVhZC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Jl
YWRhaGVhZC5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3JlYWRhaGVhZC5jCTE5
NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVp
c2VyNC9yZWFkYWhlYWQuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3ODIyMjM3MiArMDEwMApAQCAt
MCwwICsxLDE0MCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlz
ZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1
ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJ0cmVlLmgiCisjaW5jbHVkZSAidHJlZV93YWxrLmgi
CisjaW5jbHVkZSAic3VwZXIuaCIKKyNpbmNsdWRlICJpbm9kZS5oIgorI2luY2x1ZGUgImtleS5o
IgorI2luY2x1ZGUgInpub2RlLmgiCisKKyNpbmNsdWRlIDxsaW51eC9zd2FwLmg+CQkvKiBmb3Ig
dG90YWxyYW1fcGFnZXMgKi8KKwordm9pZCByZWlzZXI0X2luaXRfcmFfaW5mbyhyYV9pbmZvX3Qg
KnJhaSkKK3sKKwlyYWktPmtleV90b19zdG9wID0gKnJlaXNlcjRfbWluX2tleSgpOworfQorCisv
KiBnbG9iYWwgZm9ybWF0dGVkIG5vZGUgcmVhZGFoZWFkIHBhcmFtZXRlci4gSXQgY2FuIGJlIHNl
dCBieSBtb3VudCBvcHRpb24KKyAqIC1vIHJlYWRhaGVhZDpOVU06MSAqLworc3RhdGljIGlubGlu
ZSBpbnQgcmFfYWRqYWNlbnRfb25seShpbnQgZmxhZ3MpCit7CisJcmV0dXJuIGZsYWdzICYgUkFf
QURKQUNFTlRfT05MWTsKK30KKworLyogdGhpcyBpcyB1c2VkIGJ5IGZvcm1hdHRlZF9yZWFkYWhl
YWQgdG8gZGVjaWRlIHdoZXRoZXIgcmVhZCBmb3IgcmlnaHQgbmVpZ2hib3IKKyAqIG9mIG5vZGUg
aXMgdG8gYmUgaXNzdWVkLiBJdCByZXR1cm5zIDEgaWYgcmlnaHQgbmVpZ2hib3IncyBmaXJzdCBr
ZXkgaXMgbGVzcworICogb3IgZXF1YWwgdG8gcmVhZGFoZWFkJ3Mgc3RvcCBrZXkgKi8KK3N0YXRp
YyBpbnQgc2hvdWxkX3JlYWRhaGVhZF9uZWlnaGJvcih6bm9kZSAqIG5vZGUsIHJhX2luZm9fdCAq
aW5mbykKK3sKKwlpbnQgcmVzdWx0OworCisJcmVhZF9sb2NrX2RrKHpub2RlX2dldF90cmVlKG5v
ZGUpKTsKKwlyZXN1bHQgPSBrZXlsZSh6bm9kZV9nZXRfcmRfa2V5KG5vZGUpLCAmaW5mby0+a2V5
X3RvX3N0b3ApOworCXJlYWRfdW5sb2NrX2RrKHpub2RlX2dldF90cmVlKG5vZGUpKTsKKwlyZXR1
cm4gcmVzdWx0OworfQorCisjZGVmaW5lIExPV19NRU1fUEVSQ0VOVEFHRSAoNSkKKworc3RhdGlj
IGludCBsb3dfb25fbWVtb3J5KHZvaWQpCit7CisJdW5zaWduZWQgaW50IGZyZWVwYWdlczsKKwor
CWZyZWVwYWdlcyA9IG5yX2ZyZWVfcGFnZXMoKTsKKwlyZXR1cm4gZnJlZXBhZ2VzIDwgKHRvdGFs
cmFtX3BhZ2VzKCkgKiBMT1dfTUVNX1BFUkNFTlRBR0UgLyAxMDApOworfQorCisvKiBzdGFydCBy
ZWFkIGZvciBAbm9kZSBhbmQgZm9yIGEgZmV3IG9mIGl0cyByaWdodCBuZWlnaGJvcnMgKi8KK3Zv
aWQgZm9ybWF0dGVkX3JlYWRhaGVhZCh6bm9kZSAqIG5vZGUsIHJhX2luZm9fdCAqaW5mbykKK3sK
KwlzdHJ1Y3QgZm9ybWF0dGVkX3JhX3BhcmFtcyAqcmFfcGFyYW1zOworCXpub2RlICpjdXI7CisJ
aW50IGk7CisJaW50IGdybl9mbGFnczsKKwlsb2NrX2hhbmRsZSBuZXh0X2xoOworCisJLyogZG8g
bm90aGluZyBpZiBub2RlIGJsb2NrIG51bWJlciBoYXMgbm90IGJlZW4gYXNzaWduZWQgdG8gbm9k
ZSAod2hpY2gKKwkgKiBtZWFucyBpdCBpcyBzdGlsbCBpbiBjYWNoZSkuICovCisJaWYgKHJlaXNl
cjRfYmxvY2tucl9pc19mYWtlKHpub2RlX2dldF9ibG9jayhub2RlKSkpCisJCXJldHVybjsKKwor
CXJhX3BhcmFtcyA9IGdldF9jdXJyZW50X3N1cGVyX3JhX3BhcmFtcygpOworCisJaWYgKHpub2Rl
X3BhZ2Uobm9kZSkgPT0gTlVMTCkKKwkJanN0YXJ0aW8oWkpOT0RFKG5vZGUpKTsKKworCWlmICh6
bm9kZV9nZXRfbGV2ZWwobm9kZSkgIT0gTEVBRl9MRVZFTCkKKwkJcmV0dXJuOworCisJLyogZG9u
J3Qgd2FzdGUgbWVtb3J5IGZvciByZWFkLWFoZWFkIHdoZW4gbG93IG9uIG1lbW9yeSAqLworCWlm
IChsb3dfb25fbWVtb3J5KCkpCisJCXJldHVybjsKKworCS8qIFdlIGNhbiBoYXZlIGxvY2tlZCBu
b2RlcyBvbiB1cHBlciB0cmVlIGxldmVscywgaW4gdGhpcyBzaXR1YXRpb24gbG9jaworCSAgIHBy
aW9yaXRpZXMgZG8gbm90IGhlbHAgdG8gcmVzb2x2ZSBkZWFkbG9ja3MsIHdlIGhhdmUgdG8gdXNl
IFRSWV9MT0NLCisJICAgaGVyZS4gKi8KKwlncm5fZmxhZ3MgPSAoR05fQ0FOX1VTRV9VUFBFUl9M
RVZFTFMgfCBHTl9UUllfTE9DSyk7CisKKwlpID0gMDsKKwljdXIgPSB6cmVmKG5vZGUpOworCWlu
aXRfbGgoJm5leHRfbGgpOworCXdoaWxlIChpIDwgcmFfcGFyYW1zLT5tYXgpIHsKKwkJY29uc3Qg
cmVpc2VyNF9ibG9ja19uciAqIG5leHRibGs7CisKKwkJaWYgKCFzaG91bGRfcmVhZGFoZWFkX25l
aWdoYm9yKGN1ciwgaW5mbykpCisJCQlicmVhazsKKworCQlpZiAocmVpc2VyNF9nZXRfcmlnaHRf
bmVpZ2hib3IKKwkJICAgICgmbmV4dF9saCwgY3VyLCBaTk9ERV9SRUFEX0xPQ0ssIGdybl9mbGFn
cykpCisJCQlicmVhazsKKworCQluZXh0YmxrID0gem5vZGVfZ2V0X2Jsb2NrKG5leHRfbGgubm9k
ZSk7CisJCWlmIChyZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZShuZXh0YmxrKSB8fAorCQkgICAgKHJh
X2FkamFjZW50X29ubHkocmFfcGFyYW1zLT5mbGFncykKKwkJICAgICAmJiAqbmV4dGJsayAhPSAq
em5vZGVfZ2V0X2Jsb2NrKGN1cikgKyAxKSkKKwkJCWJyZWFrOworCisJCXpwdXQoY3VyKTsKKwkJ
Y3VyID0genJlZihuZXh0X2xoLm5vZGUpOworCQlkb25lX2xoKCZuZXh0X2xoKTsKKwkJaWYgKHpu
b2RlX3BhZ2UoY3VyKSA9PSBOVUxMKQorCQkJanN0YXJ0aW8oWkpOT0RFKGN1cikpOworCQllbHNl
CisJCQkvKiBEbyBub3Qgc2NhbiByZWFkLWFoZWFkIHdpbmRvdyBpZiBwYWdlcyBhbHJlYWR5CisJ
CQkgKiBhbGxvY2F0ZWQgKGFuZCBpL28gYWxyZWFkeSBzdGFydGVkKS4gKi8KKwkJCWJyZWFrOwor
CisJCWkrKzsKKwl9CisJenB1dChjdXIpOworCWRvbmVfbGgoJm5leHRfbGgpOworfQorCit2b2lk
IHJlaXNlcjRfcmVhZGRpcl9yZWFkYWhlYWRfaW5pdChzdHJ1Y3QgaW5vZGUgKmRpciwgdGFwX3Qg
KnRhcCkKK3sKKwlyZWlzZXI0X2tleSAqc3RvcF9rZXk7CisKKwlhc3NlcnQoIm5pa2l0YS0zNTQy
IiwgZGlyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTM1NDMiLCB0YXAgIT0gTlVMTCk7CisK
KwlzdG9wX2tleSA9ICZ0YXAtPnJhX2luZm8ua2V5X3RvX3N0b3A7CisJLyogaW5pdGlhbGl6ZSBy
ZWFkZGlyIHJlYWRhaGVhZCBpbmZvcm1hdGlvbjogaW5jbHVkZSBpbnRvIHJlYWRhaGVhZAorCSAq
IHN0YXQgZGF0YSBvZiBhbGwgZmlsZXMgb2YgdGhlIGRpcmVjdG9yeSAqLworCXNldF9rZXlfbG9j
YWxpdHkoc3RvcF9rZXksIGdldF9pbm9kZV9vaWQoZGlyKSk7CisJc2V0X2tleV90eXBlKHN0b3Bf
a2V5LCBLRVlfU0RfTUlOT1IpOworCXNldF9rZXlfb3JkZXJpbmcoc3RvcF9rZXksIGdldF9rZXlf
b3JkZXJpbmcocmVpc2VyNF9tYXhfa2V5KCkpKTsKKwlzZXRfa2V5X29iamVjdGlkKHN0b3Bfa2V5
LCBnZXRfa2V5X29iamVjdGlkKHJlaXNlcjRfbWF4X2tleSgpKSk7CisJc2V0X2tleV9vZmZzZXQo
c3RvcF9rZXksIGdldF9rZXlfb2Zmc2V0KHJlaXNlcjRfbWF4X2tleSgpKSk7Cit9CisKKy8qCisg
ICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9k
ZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBm
aWxsLWNvbHVtbjogODAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcmVhZGFoZWFkLmggbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvcmVhZGFoZWFkLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvcmVhZGFo
ZWFkLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4x
Ny9mcy9yZWlzZXI0L3JlYWRhaGVhZC5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDc4MjIyMzcyICsw
MTAwCkBAIC0wLDAgKzEsNDIgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhh
bnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisK
KyNpZm5kZWYgX19SRUFEQUhFQURfSF9fCisjZGVmaW5lIF9fUkVBREFIRUFEX0hfXworCisjaW5j
bHVkZSAia2V5LmgiCisKK3R5cGVkZWYgZW51bSB7CisJUkFfQURKQUNFTlRfT05MWSA9IDEsCS8q
IG9ubHkgcmVxdWVzdHMgbm9kZXMgd2hpY2ggYXJlIGFkamFjZW50LgorCQkJCSAgIERlZmF1bHQg
aXMgTk8gKG5vdCBvbmx5IGFkamFjZW50KSAqLworfSByYV9nbG9iYWxfZmxhZ3M7CisKKy8qIHJl
aXNlcjQgc3VwZXIgYmxvY2sgaGFzIGEgZmllbGQgb2YgdGhpcyB0eXBlLgorICAgSXQgY29udHJv
bHMgcmVhZGFoZWFkIGR1cmluZyB0cmVlIHRyYXZlcnNhbHMgKi8KK3N0cnVjdCBmb3JtYXR0ZWRf
cmFfcGFyYW1zIHsKKwl1bnNpZ25lZCBsb25nIG1heDsJLyogcmVxdWVzdCBub3QgbW9yZSB0aGFu
IHRoaXMgYW1vdW50IG9mIG5vZGVzLgorCQkJCSAgIERlZmF1bHQgaXMgdG90YWxyYW1fcGFnZXMo
KSAvIDQgKi8KKwlpbnQgZmxhZ3M7Cit9OworCit0eXBlZGVmIHN0cnVjdCB7CisJcmVpc2VyNF9r
ZXkga2V5X3RvX3N0b3A7Cit9IHJhX2luZm9fdDsKKwordm9pZCBmb3JtYXR0ZWRfcmVhZGFoZWFk
KHpub2RlICogLCByYV9pbmZvX3QgKik7Cit2b2lkIHJlaXNlcjRfaW5pdF9yYV9pbmZvKHJhX2lu
Zm9fdCAqcmFpKTsKKworZXh0ZXJuIHZvaWQgcmVpc2VyNF9yZWFkZGlyX3JlYWRhaGVhZF9pbml0
KHN0cnVjdCBpbm9kZSAqZGlyLCB0YXBfdCAqdGFwKTsKKworLyogX19SRUFEQUhFQURfSF9fICov
CisjZW5kaWYKKworLyoKKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5
bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0
YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAt
LW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvUkVBRE1FIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L1JFQURNRQotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC9SRUFETUUJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L1JFQURNRQkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3ODIyMjM3MiArMDEw
MApAQCAtMCwwICsxLDEyOCBAQAorW0xJQ0VOU0lOR10KKworUmVpc2VyNCBpcyBoZXJlYnkgbGlj
ZW5zZWQgdW5kZXIgdGhlIEdOVSBHZW5lcmFsCitQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIuCisK
K1NvdXJjZSBjb2RlIGZpbGVzIHRoYXQgY29udGFpbiB0aGUgcGhyYXNlICJsaWNlbnNpbmcgZ292
ZXJuZWQgYnkKK3JlaXNlcjQvUkVBRE1FIiBhcmUgImdvdmVybmVkIGZpbGVzIiB0aHJvdWdob3V0
IHRoaXMgZmlsZS4gIEdvdmVybmVkCitmaWxlcyBhcmUgbGljZW5zZWQgdW5kZXIgdGhlIEdQTC4g
IFRoZSBwb3J0aW9ucyBvZiB0aGVtIG93bmVkIGJ5IEhhbnMKK1JlaXNlciwgb3IgYXV0aG9yaXpl
ZCB0byBiZSBsaWNlbnNlZCBieSBoaW0sIGhhdmUgYmVlbiBpbiB0aGUgcGFzdCwKK2FuZCBsaWtl
bHkgd2lsbCBiZSBpbiB0aGUgZnV0dXJlLCBsaWNlbnNlZCB0byBvdGhlciBwYXJ0aWVzIHVuZGVy
CitvdGhlciBsaWNlbnNlcy4gIElmIHlvdSBhZGQgeW91ciBjb2RlIHRvIGdvdmVybmVkIGZpbGVz
LCBhbmQgZG9uJ3QKK3dhbnQgaXQgdG8gYmUgb3duZWQgYnkgSGFucyBSZWlzZXIsIHB1dCB5b3Vy
IGNvcHlyaWdodCBsYWJlbCBvbiB0aGF0Citjb2RlIHNvIHRoZSBwb29yIGJsaWdodCBhbmQgaGlz
IGN1c3RvbWVycyBjYW4ga2VlcCB0aGluZ3Mgc3RyYWlnaHQuCitBbGwgcG9ydGlvbnMgb2YgZ292
ZXJuZWQgZmlsZXMgbm90IGxhYmVsZWQgb3RoZXJ3aXNlIGFyZSBvd25lZCBieSBIYW5zCitSZWlz
ZXIsIGFuZCBieSBhZGRpbmcgeW91ciBjb2RlIHRvIGl0LCB3aWRlbHkgZGlzdHJpYnV0aW5nIGl0
IHRvCitvdGhlcnMgb3Igc2VuZGluZyB1cyBhIHBhdGNoLCBhbmQgbGVhdmluZyB0aGUgc2VudGVu
Y2UgaW4gc3RhdGluZyB0aGF0CitsaWNlbnNpbmcgaXMgZ292ZXJuZWQgYnkgdGhlIHN0YXRlbWVu
dCBpbiB0aGlzIGZpbGUsIHlvdSBhY2NlcHQgdGhpcy4KK0l0IHdpbGwgYmUgYSBraW5kbmVzcyBp
ZiB5b3UgaWRlbnRpZnkgd2hldGhlciBIYW5zIFJlaXNlciBpcyBhbGxvd2VkCit0byBsaWNlbnNl
IGNvZGUgbGFiZWxlZCBhcyBvd25lZCBieSB5b3Ugb24geW91ciBiZWhhbGYgb3RoZXIgdGhhbgor
dW5kZXIgdGhlIEdQTCwgYmVjYXVzZSBoZSB3YW50cyB0byBrbm93IGlmIGl0IGlzIG9rYXkgdG8g
ZG8gc28gYW5kIHB1dAorYSBjaGVjayBpbiB0aGUgbWFpbCB0byB5b3UgKGZvciBub24tdHJpdmlh
bCBpbXByb3ZlbWVudHMpIHdoZW4gaGUKK21ha2VzIGhpcyBuZXh0IHNhbGUuICBIZSBtYWtlcyBu
byBndWFyYW50ZWVzIGFzIHRvIHRoZSBhbW91bnQgaWYgYW55LAordGhvdWdoIGhlIGZlZWxzIG1v
dGl2YXRlZCB0byBtb3RpdmF0ZSBjb250cmlidXRvcnMsIGFuZCB5b3UgY2FuIHN1cmVseQorZGlz
Y3VzcyB0aGlzIHdpdGggaGltIGJlZm9yZSBvciBhZnRlciBjb250cmlidXRpbmcuICBZb3UgaGF2
ZSB0aGUKK3JpZ2h0IHRvIGRlY2xpbmUgdG8gYWxsb3cgaGltIHRvIGxpY2Vuc2UgeW91ciBjb2Rl
IGNvbnRyaWJ1dGlvbiBvdGhlcgordGhhbiB1bmRlciB0aGUgR1BMLgorCitGdXJ0aGVyIGxpY2Vu
c2luZyBvcHRpb25zIGFyZSBhdmFpbGFibGUgZm9yIGNvbW1lcmNpYWwgYW5kL29yIG90aGVyCitp
bnRlcmVzdHMgZGlyZWN0bHkgZnJvbSBIYW5zIFJlaXNlcjogcmVpc2VyQG5hbWVzeXMuY29tLiAg
SWYgeW91IGludGVycHJldAordGhlIEdQTCBhcyBub3QgYWxsb3dpbmcgdGhvc2UgYWRkaXRpb25h
bCBsaWNlbnNpbmcgb3B0aW9ucywgeW91IHJlYWQKK2l0IHdyb25nbHksIGFuZCBSaWNoYXJkIFN0
YWxsbWFuIGFncmVlcyB3aXRoIG1lLCB3aGVuIGNhcmVmdWxseSByZWFkCit5b3UgY2FuIHNlZSB0
aGF0IHRob3NlIHJlc3RyaWN0aW9ucyBvbiBhZGRpdGlvbmFsIHRlcm1zIGRvIG5vdCBhcHBseQor
dG8gdGhlIG93bmVyIG9mIHRoZSBjb3B5cmlnaHQsIGFuZCBteSBpbnRlcnByZXRhdGlvbiBvZiB0
aGlzIHNoYWxsCitnb3Zlcm4gZm9yIHRoaXMgbGljZW5zZS4KKworW0VORCBMSUNFTlNJTkddCisK
K1JlaXNlcjQgaXMgYSBmaWxlIHN5c3RlbSBiYXNlZCBvbiBkYW5jaW5nIHRyZWUgYWxnb3JpdGht
cywgYW5kIGlzCitkZXNjcmliZWQgYXQgaHR0cDovL3d3dy5uYW1lc3lzLmNvbQorCitta2ZzLnJl
aXNlcjQgYW5kIG90aGVyIHV0aWxpdGllcyBhcmUgb24gb3VyIHdlYnBhZ2Ugb3Igd2hlcmV2ZXIg
eW91cgorTGludXggcHJvdmlkZXIgcHV0IHRoZW0uICBZb3UgcmVhbGx5IHdhbnQgdG8gYmUgcnVu
bmluZyB0aGUgbGF0ZXN0Cit2ZXJzaW9uIG9mZiB0aGUgd2Vic2l0ZSBpZiB5b3UgdXNlIGZzY2su
CisKK1llcywgaWYgeW91IHVwZGF0ZSB5b3VyIHJlaXNlcjQga2VybmVsIG1vZHVsZSB5b3UgZG8g
aGF2ZSB0bworcmVjb21waWxlIHlvdXIga2VybmVsLCBtb3N0IG9mIHRoZSB0aW1lLiAgVGhlIGVy
cm9ycyB5b3UgZ2V0IHdpbGwgYmUKK3F1aXRlIGNyeXB0aWMgaWYgeW91ciBmb3JnZXQgdG8gZG8g
c28uCisKK0hpZGVvdXMgQ29tbWVyY2lhbCBQaXRjaDogU3ByZWFkIHlvdXIgZGV2ZWxvcG1lbnQg
Y29zdHMgYWNyb3NzIG90aGVyIE9TCit2ZW5kb3JzLiAgU2VsZWN0IGZyb20gdGhlIGJlc3QgaW4g
dGhlIHdvcmxkLCBub3QgdGhlIGJlc3QgaW4geW91cgorYnVpbGRpbmcsIGJ5IGJ1eWluZyBmcm9t
IHRoaXJkIHBhcnR5IE9TIGNvbXBvbmVudCBzdXBwbGllcnMuICBMZXZlcmFnZQordGhlIHNvZnR3
YXJlIGNvbXBvbmVudCBkZXZlbG9wbWVudCBwb3dlciBvZiB0aGUgaW50ZXJuZXQuICBCZSB0aGUg
bW9zdAorYWdncmVzc2l2ZSBpbiB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSBjb21tZXJjaWFsIHBv
c3NpYmlsaXRpZXMgb2YKK2RlY2VudHJhbGl6ZWQgaW50ZXJuZXQgZGV2ZWxvcG1lbnQsIGFuZCBh
ZGQgdmFsdWUgdGhyb3VnaCB5b3VyIGJyYW5kZWQKK2ludGVncmF0aW9uIHRoYXQgeW91IHNlbGwg
YXMgYW4gb3BlcmF0aW5nIHN5c3RlbS4gIExldCB5b3VyIGNvbXBldGl0b3JzCitiZSB0aGUgb25l
cyB0byBjb21wZXRlIGFnYWluc3QgdGhlIGVudGlyZSBpbnRlcm5ldCBieSB0aGVtc2VsdmVzLiAg
QmUKK2hpcCwgZ2V0IHdpdGggdGhlIG5ldyBlY29ub21pYyB0cmVuZCwgYmVmb3JlIHlvdXIgY29t
cGV0aXRvcnMgZG8uICBTZW5kCitlbWFpbCB0byByZWlzZXJAbmFtZXN5cy5jb20KKworSGFucyBS
ZWlzZXIgd2FzIHRoZSBwcmltYXJ5IGFyY2hpdGVjdCBvZiBSZWlzZXI0LCBidXQgYSB3aG9sZSB0
ZWFtCitjaGlwcGVkIHRoZWlyIGlkZWFzIGluLiAgSGUgaW52ZXN0ZWQgZXZlcnl0aGluZyBoZSBo
YWQgaW50byBOYW1lc3lzCitmb3IgNS41IGRhcmsgeWVhcnMgb2Ygbm8gbW9uZXkgYmVmb3JlIFJl
aXNlcjMgZmluYWxseSBzdGFydGVkIHRvIHdvcmsgd2VsbAorZW5vdWdoIHRvIGJyaW5nIGluIG1v
bmV5LiAgSGUgb3ducyB0aGUgY29weXJpZ2h0LgorCitEQVJQQSB3YXMgdGhlIHByaW1hcnkgc3Bv
bnNvciBvZiBSZWlzZXI0LiAgREFSUEEgZG9lcyBub3QgZW5kb3JzZQorUmVpc2VyNCwgaXQgbWVy
ZWx5IHNwb25zb3JzIGl0LiAgREFSUEEgaXMsIGluIHNvbGVseSBIYW5zJ3MgcGVyc29uYWwKK29w
aW5pb24sIHVuaXF1ZSBpbiBpdHMgd2lsbGluZ25lc3MgdG8gaW52ZXN0IGludG8gdGhpbmdzIG1v
cmUKK3RoZW9yZXRpY2FsIHRoYW4gdGhlIFZDIGNvbW11bml0eSBjYW4gcmVhZGlseSB1bmRlcnN0
YW5kLCBhbmQgbW9yZQorbG9uZ3Rlcm0gdGhhbiBhbGxvd3MgdGhlbSB0byBiZSBzdXJlIHRoYXQg
dGhleSB3aWxsIGJlIHRoZSBvbmVzIHRvCitleHRyYWN0IHRoZSBlY29ub21pYyBiZW5lZml0cyBm
cm9tLiAgREFSUEEgYWxzbyBpbnRlZ3JhdGVkIHVzIGludG8gYQorc2VjdXJpdHkgY29tbXVuaXR5
IHRoYXQgdHJhbnNmb3JtZWQgb3VyIHNlY3VyaXR5IHdvcmxkdmlldy4KKworVmxhZGltaXIgU2F2
ZWxpZXYgaXMgb3VyIGxlYWQgcHJvZ3JhbW1lciwgd2l0aCB1cyBmcm9tIHRoZSBiZWdpbm5pbmcs
CithbmQgaGUgd29ya2VkIGxvbmcgaG91cnMgd3JpdGluZyB0aGUgY2xlYW5lc3QgY29kZS4gIFRo
aXMgaXMgd2h5IGhlIGlzCitub3cgdGhlIGxlYWQgcHJvZ3JhbW1lciBhZnRlciB5ZWFycyBvZiBj
b21taXRtZW50IHRvIG91ciB3b3JrLiAgSGUKK2Fsd2F5cyBtYWRlIHRoZSBlZmZvcnQgdG8gYmUg
dGhlIGJlc3QgaGUgY291bGQgYmUsIGFuZCB0byBtYWtlIGhpcworY29kZSB0aGUgYmVzdCB0aGF0
IGl0IGNvdWxkIGJlLiAgV2hhdCByZXN1bHRlZCB3YXMgcXVpdGUgcmVtYXJrYWJsZS4gSQorZG9u
J3QgdGhpbmsgdGhhdCBtb25leSBjYW4gZXZlciBtb3RpdmF0ZSBzb21lb25lIHRvIHdvcmsgdGhl
IHdheSBoZQorZGlkLCBoZSBpcyBvbmUgb2YgdGhlIG1vc3Qgc2VsZmxlc3MgbWVuIEkga25vdy4K
KworQWxleGFuZGVyIEx5YW1pbiB3YXMgb3VyIHN5c2FkbWluLCBhbmQgaGVscGVkIHRvIGVkdWNh
dGUgdXMgaW4KK3NlY3VyaXR5IGlzc3Vlcy4gIE1vc2NvdyBTdGF0ZSBVbml2ZXJzaXR5IGFuZCBJ
TVQgd2VyZSB2ZXJ5IGdlbmVyb3VzCitpbiB0aGUgaW50ZXJuZXQgYWNjZXNzIHRoZXkgcHJvdmlk
ZWQgdXMsIGFuZCBpbiBsb3RzIG9mIG90aGVyIGxpdHRsZQord2F5cyB0aGF0IGEgZ2VuZXJvdXMg
aW5zdGl0dXRpb24gY2FuIGJlLgorCitBbGV4YW5kZXIgWmFyb2NoZW50Y2V2IChzb21ldGltZXMg
a25vd24gYXMgemFtLCBvciBzYXNoYSksIHdyb3RlIHRoZQorbG9ja2luZyBjb2RlLCB0aGUgYmxv
Y2sgYWxsb2NhdG9yLCBhbmQgZmluaXNoZWQgdGhlIGZsdXNoaW5nIGNvZGUuCitIaXMgY29kZSBp
cyBhbHdheXMgY3J5c3RhbCBjbGVhbiBhbmQgd2VsbCBzdHJ1Y3R1cmVkLgorCitOaWtpdGEgRGFu
aWxvdiB3cm90ZSB0aGUgY29yZSBvZiB0aGUgYmFsYW5jaW5nIGNvZGUsIHRoZSBjb3JlIG9mIHRo
ZQorcGx1Z2lucyBjb2RlLCBhbmQgdGhlIGRpcmVjdG9yeSBjb2RlLiAgSGUgd29ya2VkIGEgc3Rl
YWR5IHBhY2Ugb2YgbG9uZworaG91cnMgdGhhdCBwcm9kdWNlZCBhIHdob2xlIGxvdCBvZiB3ZWxs
IGFic3RyYWN0ZWQgY29kZS4gIEhlIGlzIG91cgorc2VuaW9yIGNvbXB1dGVyIHNjaWVudGlzdC4K
KworVmxhZGltaXIgRGVtaWRvdiB3cm90ZSB0aGUgcGFyc2VyLiAgV3JpdGluZyBhbiBpbiBrZXJu
ZWwgcGFyc2VyIGlzCitzb21ldGhpbmcgdmVyeSBmZXcgcGVyc29ucyBoYXZlIHRoZSBza2lsbHMg
Zm9yLCBhbmQgaXQgaXMgdGhhbmtzIHRvCitoaW0gdGhhdCB3ZSBjYW4gc2F5IHRoYXQgdGhlIHBh
cnNlciBpcyByZWFsbHkgbm90IHNvIGJpZyBjb21wYXJlZCB0bwordmFyaW91cyBiaXRzIG9mIG91
ciBvdGhlciBjb2RlLCBhbmQgbWFraW5nIGEgcGFyc2VyIHdvcmsgaW4gdGhlIGtlcm5lbAord2Fz
IG5vdCBzbyBjb21wbGljYXRlZCBhcyBldmVyeW9uZSB3b3VsZCBpbWFnaW5lIG1haW5seSBiZWNh
dXNlIGl0IHdhcworaGltIGRvaW5nIGl0Li4uCisKK0pvc2h1YSBNY0RvbmFsZCB3cm90ZSB0aGUg
dHJhbnNhY3Rpb24gbWFuYWdlciwgYW5kIHRoZSBmbHVzaCBjb2RlLgorVGhlIGZsdXNoIGNvZGUg
dW5leHBlY3RlZGx5IHR1cm5lZCBvdXQgYmUgZXh0cmVtZWx5IGhhaXJ5IGZvciByZWFzb25zCit5
b3UgY2FuIHJlYWQgYWJvdXQgb24gb3VyIHdlYiBwYWdlLCBhbmQgaGUgZGlkIGEgZ3JlYXQgam9i
IG9uIGFuCitleHRyZW1lbHkgZGlmZmljdWx0IHRhc2suCisKK05pbmEgUmVpc2VyIGhhbmRsZWQg
b3VyIGFjY291bnRpbmcsIGdvdmVybm1lbnQgcmVsYXRpb25zLCBhbmQgbXVjaAorbW9yZS4KKwor
UmFtb24gUmVpc2VyIGRldmVsb3BlZCBvdXIgd2Vic2l0ZS4KKworQmV2ZXJseSBQYWxtZXIgZHJl
dyBvdXIgZ3JhcGhpY3MuCisKK1ZpdGFseSBGZXJ0bWFuIGRldmVsb3BlZCBsaWJyZXBhaXIsIHVz
ZXJzcGFjZSBwbHVnaW5zIHJlcGFpciBjb2RlLCBmc2NrCithbmQgd29ya2VkIHdpdGggVW1rYSBv
biBkZXZlbG9waW5nIGxpYnJlaXNlcjQgYW5kIHVzZXJzcGFjZSBwbHVnaW5zLgorCitZdXJ5IFVt
YW5ldHMgKGFrYSBVbWthKSBkZXZlbG9wZWQgbGlicmVpc2VyNCwgdXNlcnNwYWNlIHBsdWdpbnMg
YW5kCit1c2Vyc3BhY2UgdG9vbHMgKHJlaXNlcjRwcm9ncykuCisKK09sZWcgRHJva2luIChha2Eg
R3JlZW4pIGlzIHRoZSByZWxlYXNlIG1hbmFnZXIgd2hvIGZpeGVzIGV2ZXJ5dGhpbmcuCitJdCBp
cyBzbyBuaWNlIHRvIGhhdmUgc29tZW9uZSBsaWtlIHRoYXQgb24gdGhlIHRlYW0uICBIZSAocGx1
cyBDaHJpcworYW5kIEplZmYpIG1ha2UgaXQgcG9zc2libGUgZm9yIHRoZSBlbnRpcmUgcmVzdCBv
ZiB0aGUgTmFtZXN5cyB0ZWFtIHRvCitmb2N1cyBvbiBSZWlzZXI0LCBhbmQgaGUgZml4ZWQgYSB3
aG9sZSBsb3Qgb2YgUmVpc2VyNCBidWdzIGFsc28uICBJdAoraXMganVzdCBhbWF6aW5nIHRvIHdh
dGNoIGhpcyB0YWxlbnQgZm9yIHNwb3R0aW5nIGJ1Z3MgaW4gYWN0aW9uLgorCitFZHdhcmQgU2hp
c2hraW4gd3JvdGUgY3J5cHRjb21wcmVzcyBmaWxlIHBsdWdpbiAod2hpY2ggbWFuYWdlcyBmaWxl
cworYnVpbHQgb2YgZW5jcnlwdGVkIGFuZChvcikgY29tcHJlc3NlZCBib2RpZXMpIGFuZCBvdGhl
ciBwbHVnaW5zIHJlbGF0ZWQKK3RvIHRyYW5zcGFyZW50IGVuY3J5cHRpb24gYW5kIGNvbXByZXNz
aW9uIHN1cHBvcnQuCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvcmVpc2VyNC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3JlaXNlcjQuaAot
LS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9yZWlzZXI0LmgJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3JlaXNlcjQu
aAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ3OTIyMjM4MCArMDEwMApAQCAtMCwwICsxLDI2MCBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworCisvKiBkZWZpbml0aW9ucyBvZiBj
b21tb24gY29uc3RhbnRzIHVzZWQgYnkgcmVpc2VyNCAqLworCisjaWYgIWRlZmluZWQoIF9fUkVJ
U0VSNF9IX18gKQorI2RlZmluZSBfX1JFSVNFUjRfSF9fCisKKyNpbmNsdWRlIDxhc20vcGFyYW0u
aD4JCS8qIGZvciBIWiAqLworI2luY2x1ZGUgPGxpbnV4L2Vycm5vLmg+CisjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KKyNpbmNsdWRlIDxsaW51eC9mcy5oPgorI2luY2x1ZGUgPGxpbnV4L2hhcmRp
cnEuaD4KKyNpbmNsdWRlIDxsaW51eC9zY2hlZC5oPgorCisvKgorICogcmVpc2VyNCBjb21waWxh
dGlvbiBvcHRpb25zLgorICovCisKKyNpZiBkZWZpbmVkKENPTkZJR19SRUlTRVI0X0RFQlVHKQor
LyogdHVybiBvbiBhc3NlcnRpb24gY2hlY2tzICovCisjZGVmaW5lIFJFSVNFUjRfREVCVUcgKDEp
CisjZWxzZQorI2RlZmluZSBSRUlTRVI0X0RFQlVHICgwKQorI2VuZGlmCisKKyNkZWZpbmUgUkVJ
U0VSNF9TSEEyNTYgKDApCisKKy8qCisgKiBUdXJuIG9uIGxhcmdlIGtleXMgbW9kZS4gSW4gaGlz
IG1vZGUgKHdoaWNoIGlzIGRlZmF1bHQpLCByZWlzZXI0IGtleSBoYXMgNAorICogOC1ieXRlIGNv
bXBvbmVudHMuIEluIHRoZSBvbGQgInNtYWxsIGtleSIgbW9kZSwgaXQncyAzIDgtYnl0ZQorICog
Y29tcG9uZW50cy4gQWRkaXRpb25hbCBjb21wb25lbnQsIHJlZmVycmVkIHRvIGFzICJvcmRlcmlu
ZyIgaXMgdXNlZCB0bworICogb3JkZXIgaXRlbXMgZnJvbSB3aGljaCBnaXZlbiBvYmplY3QgaXMg
Y29tcG9zZWQgb2YuIEFzIHN1Y2gsIG9yZGVyaW5nIGlzCisgKiBwbGFjZWQgYmV0d2VlbiBsb2Nh
bGl0eSBhbmQgb2JqZWN0aWQuIEZvciBkaXJlY3RvcnkgaXRlbSBvcmRlcmluZyBjb250YWlucwor
ICogaW5pdGlhbCBwcmVmaXggb2YgdGhlIGZpbGUgbmFtZSB0aGlzIGl0ZW0gaXMgZm9yLiBUaGlz
IHNvcnRzIGFsbCBkaXJlY3RvcnkKKyAqIGl0ZW1zIHdpdGhpbiBnaXZlbiBkaXJlY3RvcnkgbGV4
aWNvZ3JhcGhpY2FsbHkgKGJ1dCBzZWUKKyAqIGZpYnJhdGlvbi5bY2hdKS4gRm9yIGZpbGUgYm9k
eSBhbmQgc3RhdC1kYXRhLCBvcmRlcmluZyBjb250YWlucyBpbml0aWFsCisgKiBwcmVmaXggb2Yg
dGhlIG5hbWUgZmlsZSB3YXMgaW5pdGlhbGx5IGNyZWF0ZWQgd2l0aC4gSW4gdGhlIGNvbW1vbiBj
YXNlCisgKiAoZmlsZXMgd2l0aCBzaW5nbGUgbmFtZSkgdGhpcyBhbGxvd3MgdG8gb3JkZXIgZmls
ZSBib2RpZXMgYW5kIHN0YXQtZGF0YXMgaW4KKyAqIHRoZSBzYW1lIG9yZGVyIGFzIHRoZWlyIHJl
c3BlY3RpdmUgZGlyZWN0b3J5IGVudHJpZXMsIHRodXMgc3BlZWRpbmcgdXAKKyAqIHJlYWRkaXIu
CisgKgorICogTm90ZSwgdGhhdCBrZXJuZWwgY2FuIG9ubHkgbW91bnQgZmlsZSBzeXN0ZW0gd2l0
aCB0aGUgc2FtZSBrZXkgc2l6ZSBhcyBvbmUKKyAqIGl0IGlzIGNvbXBpbGVkIGZvciwgc28gZmxp
cHBpbmcgdGhpcyBvcHRpb24gbWF5IHJlbmRlciB5b3VyIGRhdGEKKyAqIGluYWNjZXNzaWJsZS4K
KyAqLworI2RlZmluZSBSRUlTRVI0X0xBUkdFX0tFWSAoMSkKKy8qI2RlZmluZSBSRUlTRVI0X0xB
UkdFX0tFWSAoMCkqLworCisvKiNkZWZpbmUgR1VFU1NfRVhJU1RTIDEqLworCisvKgorICogUExF
QVNFIHVwZGF0ZSBmcy9yZWlzZXI0L2thdHRyLmM6c2hvd19vcHRpb25zKCkgd2hlbiBhZGRpbmcg
bmV3IGNvbXBpbGF0aW9uCisgKiBvcHRpb24KKyAqLworCisjZGVmaW5lIFJFSVNFUjRfU1VQRVJf
TUFHSUNfU1RSSU5HICJSZUlzRXI0IgorZXh0ZXJuIGNvbnN0IGludCBSRUlTRVI0X01BR0lDX09G
RlNFVDsJLyogb2Zmc2V0IHRvIG1hZ2ljIHN0cmluZyBmcm9tIHRoZQorCQkJCQkgKiBiZWdpbm5p
bmcgb2YgZGV2aWNlICovCisKKy8qIGhlcmUgZ28gdHVuYWJsZSBwYXJhbWV0ZXJzIHRoYXQgYXJl
IG5vdCB3b3J0aCBzcGVjaWFsIGVudHJ5IGluIGtlcm5lbAorICAgY29uZmlndXJhdGlvbiAqLwor
CisvKiBkZWZhdWx0IG51bWJlciBvZiBzbG90cyBpbiBjb29yZC1ieS1rZXkgY2FjaGVzICovCisj
ZGVmaW5lIENCS19DQUNIRV9TTE9UUyAgICAoMTYpCisvKiBob3cgbWFueSBlbGVtZW50YXJ5IHRy
ZWUgb3BlcmF0aW9uIHRvIGNhcnJ5IG9uIHRoZSBuZXh0IGxldmVsICovCisjZGVmaW5lIENBUlJJ
RVNfUE9PTF9TSVpFICAgICAgICAoNSkKKy8qIHNpemUgb2YgcG9vbCBvZiBwcmVhbGxvY2F0ZWQg
bm9kZXMgZm9yIGNhcnJ5IHByb2Nlc3MuICovCisjZGVmaW5lIE5PREVTX0xPQ0tFRF9QT09MX1NJ
WkUgICAoNSkKKworI2RlZmluZSBSRUlTRVI0X05FV19OT0RFX0ZMQUdTIChDT1BJX0xPQURfTEVG
VCB8IENPUElfTE9BRF9SSUdIVCB8IENPUElfR09fTEVGVCkKKyNkZWZpbmUgUkVJU0VSNF9ORVdf
RVhURU5UX0ZMQUdTIChDT1BJX0xPQURfTEVGVCB8IENPUElfTE9BRF9SSUdIVCB8IENPUElfR09f
TEVGVCkKKyNkZWZpbmUgUkVJU0VSNF9QQVNURV9GTEFHUyAoQ09QSV9HT19MRUZUKQorI2RlZmlu
ZSBSRUlTRVI0X0lOU0VSVF9GTEFHUyAoQ09QSV9HT19MRUZUKQorCisvKiB3ZSBhcmUgc3VwcG9y
dGluZyByZXNlcnZhdGlvbiBvZiBkaXNrIHNwYWNlIG9uIHVpZCBiYXNpcyAqLworI2RlZmluZSBS
RUlTRVI0X1NVUFBPUlRfVUlEX1NQQUNFX1JFU0VSVkFUSU9OICgwKQorLyogd2UgYXJlIHN1cHBv
cnRpbmcgcmVzZXJ2YXRpb24gb2YgZGlzayBzcGFjZSBmb3IgZ3JvdXBzICovCisjZGVmaW5lIFJF
SVNFUjRfU1VQUE9SVF9HSURfU1BBQ0VfUkVTRVJWQVRJT04gKDApCisvKiB3ZSBhcmUgc3VwcG9y
dGluZyByZXNlcnZhdGlvbiBvZiBkaXNrIHNwYWNlIGZvciByb290ICovCisjZGVmaW5lIFJFSVNF
UjRfU1VQUE9SVF9ST09UX1NQQUNFX1JFU0VSVkFUSU9OICgwKQorLyogd2UgdXNlIHJhcGlkIGZs
dXNoIG1vZGUsIHNlZSBmbHVzaC5jIGZvciBjb21tZW50cy4gICovCisjZGVmaW5lIFJFSVNFUjRf
VVNFX1JBUElEX0ZMVVNIICgxKQorCisvKgorICogc2V0IHRoaXMgdG8gMCBpZiB5b3UgZG9uJ3Qg
d2FudCB0byB1c2Ugd2FpdC1mb3ItZmx1c2ggaW4gLT53cml0ZXBhZ2UoKS4KKyAqLworI2RlZmlu
ZSBSRUlTRVI0X1VTRV9FTlREICgxKQorCisvKiBrZXkgYWxsb2NhdGlvbiBpcyBQbGFuLUEgKi8K
KyNkZWZpbmUgUkVJU0VSNF9QTEFOQV9LRVlfQUxMT0NBVElPTiAoMSkKKy8qIGtleSBhbGxvY2F0
aW9uIGZvbGxvd3MgZ29vZCBvbGQgMy54IHNjaGVtZSAqLworI2RlZmluZSBSRUlTRVI0XzNfNV9L
RVlfQUxMT0NBVElPTiAoMCkKKworLyogc2l6ZSBvZiBoYXNoLXRhYmxlIGZvciB6bm9kZXMgKi8K
KyNkZWZpbmUgUkVJU0VSNF9aTk9ERV9IQVNIX1RBQkxFX1NJWkUgKDEgPDwgMTMpCisKKy8qIG51
bWJlciBvZiBidWNrZXRzIGluIGxub2RlIGhhc2gtdGFibGUgKi8KKyNkZWZpbmUgTE5PREVfSFRB
QkxFX0JVQ0tFVFMgKDEwMjQpCisKKy8qIHNvbWUgcmlkaWN1bG91c2x5IGhpZ2ggbWF4aW1hbCBs
aW1pdCBvbiBoZWlnaHQgb2Ygem5vZGUgdHJlZS4gVGhpcworICAgIGlzIHVzZWQgaW4gZGVjbGFy
YXRpb24gb2YgdmFyaW91cyBwZXIgbGV2ZWwgYXJyYXlzIGFuZAorICAgIHRvIGFsbG9jYXRlIHN0
YXR0aXN0aWNzIGdhdGhlcmluZyBhcnJheSBmb3IgcGVyLWxldmVsIHN0YXRzLiAqLworI2RlZmlu
ZSBSRUlTRVI0X01BWF9aVFJFRV9IRUlHSFQgICAgICg4KQorCisjZGVmaW5lIFJFSVNFUjRfUEFO
SUNfTVNHX0JVRkZFUl9TSVpFICgxMDI0KQorCisvKiBJZiBhcnJheSBjb250YWlucyBsZXNzIHRo
YW4gUkVJU0VSNF9TRVFfU0VBUkNIX0JSRUFLIGVsZW1lbnRzIHRoZW4sCisgICBzZXF1ZW50aWFs
IHNlYXJjaCBpcyBvbiBhdmVyYWdlIGZhc3RlciB0aGFuIGJpbmFyeS4gVGhpcyBpcyBiZWNhdXNl
CisgICBvZiBiZXR0ZXIgb3B0aW1pemF0aW9uIGFuZCBiZWNhdXNlIHNlcXVlbnRpYWwgc2VhcmNo
IGlzIG1vcmUgQ1BVCisgICBjYWNoZSBmcmllbmRseS4gVGhpcyBudW1iZXIgKDI1KSB3YXMgZm91
bmQgYnkgZXhwZXJpbWVudHMgb24gZHVhbCBBTUQKKyAgIEF0aGxvbih0bSksIDE0MDBNSHouCisK
KyAgIE5PVEU6IHRlc3RpbmcgaW4ga2VybmVsIGhhcyBzaG93biB0aGF0IGJpbmFyeSBzZWFyY2gg
aXMgbW9yZSBlZmZlY3RpdmUgdGhhbgorICAgaW1wbGllZCBieSByZXN1bHRzIG9mIHRoZSB1c2Vy
IGxldmVsIGJlbmNobWFya2luZy4gUHJvYmFibHkgYmVjYXVzZSBpbiB0aGUKKyAgIG5vZGUga2V5
cyBhcmUgc2VwYXJhdGVkIGJ5IG90aGVyIGRhdGEuIFNvIHZhbHVlIHdhcyBhZGp1c3RlZCBhZnRl
ciBmZXcKKyAgIHRlc3RzLiBNb3JlIHRob3JvdWdoIHR1bmluZyBpcyBuZWVkZWQuCisqLworI2Rl
ZmluZSBSRUlTRVI0X1NFUV9TRUFSQ0hfQlJFQUsgICAgICAoMykKKworLyogZG9uJ3QgYWxsb3cg
dHJlZSB0byBiZSBsb3dlciB0aGFuIHRoaXMgKi8KKyNkZWZpbmUgUkVJU0VSNF9NSU5fVFJFRV9I
RUlHSFQgICAgICAgKFRXSUdfTEVWRUwpCisKKy8qIE5PVEUgTklLSVRBIHRoaXMgaXMgbm8gbG9u
Z2VyIHVzZWQ6IG1heGltYWwgYXRvbSBzaXplIGlzIGF1dG8tYWRqdXN0ZWQgdG8KKyAqIGF2YWls
YWJsZSBtZW1vcnkuICovCisvKiBEZWZhdWx0IHZhbHVlIG9mIG1heGltYWwgYXRvbSBzaXplLiBD
YW4gYmUgb3Zld3JpdHRlbiBieQorICAgdG1nci5hdG9tX21heF9zaXplIG1vdW50IG9wdGlvbi4g
QnkgZGVmYXVsdCBpbmZpbml0eS4gKi8KKyNkZWZpbmUgUkVJU0VSNF9BVE9NX01BWF9TSVpFICAg
ICAgICAgKCh1bnNpZ25lZCkofjApKQorCisvKiBEZWZhdWx0IHZhbHVlIG9mIG1heGltYWwgYXRv
bSBhZ2UgKGluIGppZmZpZXMpLiBBZnRlciByZWFjaGluZyB0aGlzIGFnZQorICAgYXRvbSB3aWxs
IGJlIGZvcmNlZCB0byBjb21taXQsIGVpdGhlciBzeW5jaHJvbm91c2x5IG9yIGFzeW5jaHJvbm91
c2x5LiBDYW4KKyAgIGJlIG92ZXJ3cml0dGVuIGJ5IHRtZ3IuYXRvbV9tYXhfYWdlIG1vdW50IG9w
dGlvbi4gKi8KKyNkZWZpbmUgUkVJU0VSNF9BVE9NX01BWF9BR0UgICAgICAgICAgKDYwMCAqIEha
KQorCisvKiBzbGVlcGluZyBwZXJpb2QgZm9yIGt0eG5tcmdkICovCisjZGVmaW5lIFJFSVNFUjRf
VFhOTUdSX1RJTUVPVVQgICg1ICogSFopCisKKy8qIHRpbWVvdXQgdG8gd2FpdCBmb3IgZW50IHRo
cmVhZCBpbiB3cml0ZXBhZ2UuIERlZmF1bHQ6IDMgbWlsbGlzZWNvbmRzLiAqLworI2RlZmluZSBS
RUlTRVI0X0VOVERfVElNRU9VVCAoMyAqIEhaIC8gMTAwMCkKKworLyogc3RhcnQgY29tcGxhaW5p
bmcgYWZ0ZXIgdGhhdCBtYW55IHJlc3RhcnRzIGluIGNvb3JkX2J5X2tleSgpLgorCisgICBUaGlz
IGVpdGhlciBtZWFucyBpbmNyZWRpYmx5IGhlYXZ5IGNvbnRlbnRpb24gZm9yIHRoaXMgcGFydCBv
ZiBhIHRyZWUsIG9yCisgICBzb21lIGNvcnJ1cHRpb24gb3IgYnVnLgorKi8KKyNkZWZpbmUgUkVJ
U0VSNF9DQktfSVRFUkFUSU9OU19MSU1JVCAgKDEwMCkKKworLyogcmV0dXJuIC1FSU8gYWZ0ZXIg
dGhhdCBtYW55IGl0ZXJhdGlvbnMgaW4gY29vcmRfYnlfa2V5KCkuCisKKyAgIEkgaGF2ZSB3aXRu
ZXNzZWQgbW9yZSB0aGFuIDgwMCBpdGVyYXRpb25zIChpbiAzMCB0aHJlYWQgdGVzdCkgYmVmb3Jl
IGNiaworICAgZmluaXNoZWQuIC0tbmlraXRhCisqLworI2RlZmluZSBSRUlTRVI0X01BWF9DQktf
SVRFUkFUSU9OUyAgICA1MDAwMDAKKworLyogcHV0IGEgcGVyLWlub2RlIGxpbWl0IG9uIG1heGlt
YWwgbnVtYmVyIG9mIGRpcmVjdG9yeSBlbnRyaWVzIHdpdGggaWRlbnRpY2FsCisgICBrZXlzIGlu
IGhhc2hlZCBkaXJlY3RvcnkuCisKKyAgIERpc2FibGUgdGhpcyB1bnRpbCBpbmhlcml0YW5jZSBp
bnRlcmZhY2VzIHN0YWJpbGl6ZTogd2UgbmVlZCBzb21lIHdheSB0bworICAgc2V0IHBlciBkaXJl
Y3RvcnkgbGltaXQuCisqLworI2RlZmluZSBSRUlTRVI0X1VTRV9DT0xMSVNJT05fTElNSVQgICAg
KDApCisKKy8qIElmIGZsdXNoIGZpbmRzIG1vcmUgdGhhbiBGTFVTSF9SRUxPQ0FURV9USFJFU0hP
TEQgYWRqYWNlbnQgZGlydHkgbGVhZi1sZXZlbAorICAgYmxvY2tzIGl0IHdpbGwgZm9yY2UgdGhl
bSB0byBiZSByZWxvY2F0ZWQuICovCisjZGVmaW5lIEZMVVNIX1JFTE9DQVRFX1RIUkVTSE9MRCA2
NAorLyogSWYgZmx1c2ggZmluZHMgY2FuIGZpbmQgYSBibG9jayBhbGxvY2F0aW9uIGNsb3NlciB0
aGFuIGF0IG1vc3QKKyAgIEZMVVNIX1JFTE9DQVRFX0RJU1RBTkNFIGZyb20gdGhlIHByZWNlZGVy
IGl0IHdpbGwgcmVsb2NhdGUgdG8gdGhhdCBwb3NpdGlvbi4KKyAqLworI2RlZmluZSBGTFVTSF9S
RUxPQ0FURV9ESVNUQU5DRSAgNjQKKworLyogSWYgd2UgaGF2ZSB3cml0dGVuIHRoaXMgbXVjaCBv
ciBtb3JlIGJsb2NrcyBiZWZvcmUgZW5jb3VudGVyaW5nIGJ1c3kgam5vZGUKKyAgIGluIGZsdXNo
IGxpc3QgLSBhYm9ydCBmbHVzaGluZyBob3BpbmcgdGhhdCBuZXh0IHRpbWUgd2UgZ2V0IGNhbGxl
ZAorICAgdGhpcyBqbm9kZSB3aWxsIGJlIGNsZWFuIGFscmVhZHksIGFuZCB3ZSB3aWxsIHNhdmUg
c29tZSBzZWVrcy4gKi8KKyNkZWZpbmUgRkxVU0hfV1JJVFRFTl9USFJFU0hPTEQgNTAKKworLyog
VGhlIG1heGltdW0gbnVtYmVyIG9mIG5vZGVzIHRvIHNjYW4gbGVmdCBvbiBhIGxldmVsIGR1cmlu
ZyBmbHVzaC4gKi8KKyNkZWZpbmUgRkxVU0hfU0NBTl9NQVhOT0RFUyAxMDAwMAorCisvKiBwZXIt
YXRvbSBsaW1pdCBvZiBmbHVzaGVycyAqLworI2RlZmluZSBBVE9NX01BWF9GTFVTSEVSUyAoMSkK
KworLyogZGVmYXVsdCB0cmFjaW5nIGJ1ZmZlciBzaXplICovCisjZGVmaW5lIFJFSVNFUjRfVFJB
Q0VfQlVGX1NJWkUgKDEgPDwgMTUpCisKKy8qIHdoYXQgc2l6ZSB1bml0cyBvZiBJTyB3ZSB3b3Vs
ZCBsaWtlIGNwLCBldGMuLCB0byB1c2UsIGluIHdyaXRpbmcgdG8KKyAgIHJlaXNlcjQuIEluIGJ5
dGVzLgorCisgICBDYW4gYmUgb3ZlcndyaXR0ZW4gYnkgb3B0aW1hbF9pb19zaXplIG1vdW50IG9w
dGlvbi4KKyovCisjZGVmaW5lIFJFSVNFUjRfT1BUSU1BTF9JT19TSVpFICg2NCAqIDEwMjQpCisK
Ky8qIHNlZSBjb21tZW50cyBpbiBpbm9kZS5jOm9pZF90b191aW5vKCkgKi8KKyNkZWZpbmUgUkVJ
U0VSNF9VSU5PX1NISUZUICgxIDw8IDMwKQorCisvKiBNYXJrIGZ1bmN0aW9uIGFyZ3VtZW50IGFz
IHVudXNlZCB0byBhdm9pZCBjb21waWxlciB3YXJuaW5ncy4gKi8KKyNkZWZpbmUgVU5VU0VEX0FS
RyBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKQorCisjaWYgKChfX0dOVUNfXyA9PSAzKSAmJiAoX19H
TlVDX01JTk9SX18gPj0gMykpIHx8IChfX0dOVUNfXyA+IDMpCisjZGVmaW5lIE5PTk5VTEwgX19h
dHRyaWJ1dGVfXygobm9ubnVsbCkpCisjZWxzZQorI2RlZmluZSBOT05OVUxMCisjZW5kaWYKKwor
LyogbWFzdGVyIHN1cGVyIGJsb2NrIG9mZnNldCBpbiBieXRlcy4qLworI2RlZmluZSBSRUlTRVI0
X01BU1RFUl9PRkZTRVQgNjU1MzYKKworLyogc2l6ZSBvZiBWRlMgYmxvY2sgKi8KKyNkZWZpbmUg
VkZTX0JMS1NJWkUgNTEyCisvKiBudW1iZXIgb2YgYml0cyBpbiBzaXplIG9mIFZGUyBibG9jayAo
NTEyPT0yXjkpICovCisjZGVmaW5lIFZGU19CTEtTSVpFX0JJVFMgOQorCisjZGVmaW5lIFJFSVNF
UjRfSSByZWlzZXI0X2lub2RlX2RhdGEKKworLyogaW1wbGljYXRpb24gKi8KKyNkZWZpbmUgZXJn
byhhbnRlY2VkZW50LCBjb25zZXF1ZW50KSAoIShhbnRlY2VkZW50KSB8fCAoY29uc2VxdWVudCkp
CisvKiBsb2dpY2FsIGVxdWl2YWxlbmNlICovCisjZGVmaW5lIGVxdWkocDEsIHAyKSAoZXJnbygo
cDEpLCAocDIpKSAmJiBlcmdvKChwMiksIChwMSkpKQorCisjZGVmaW5lIHNpemVvZl9hcnJheSh4
KSAoKGludCkgKHNpemVvZih4KSAvIHNpemVvZih4WzBdKSkpCisKKyNkZWZpbmUgTk9UX1lFVCAg
ICAgICAgICAgICAgICAgICAgICAgKDApCisKKy8qKiBSZWlzZXI0IHNwZWNpZmljIGVycm9yIGNv
ZGVzICoqLworCisjZGVmaW5lIFJFSVNFUjRfRVJST1JfQ09ERV9CQVNFIDEwMDAwCisKKy8qIE5l
aWdoYm9yIGlzIG5vdCBhdmFpbGFibGUgKHNpZGUgbmVpZ2hib3Igb3IgcGFyZW50KSAqLworI2Rl
ZmluZSBFX05PX05FSUdIQk9SICAoUkVJU0VSNF9FUlJPUl9DT0RFX0JBU0UpCisKKy8qIE5vZGUg
d2FzIG5vdCBmb3VuZCBpbiBjYWNoZSAqLworI2RlZmluZSBFX05PVF9JTl9DQUNIRSAoUkVJU0VS
NF9FUlJPUl9DT0RFX0JBU0UgKyAxKQorCisvKiBub2RlIGhhcyBubyBmcmVlIHNwYWNlIGVub3Vn
aCBmb3IgY29tcGxldGlvbiBvZiBiYWxhbmNpbmcgb3BlcmF0aW9uICovCisjZGVmaW5lIEVfTk9E
RV9GVUxMICAgIChSRUlTRVI0X0VSUk9SX0NPREVfQkFTRSArIDIpCisKKy8qIHJlcGVhdCBvcGVy
YXRpb24gKi8KKyNkZWZpbmUgRV9SRVBFQVQgICAgICAgKFJFSVNFUjRfRVJST1JfQ09ERV9CQVNF
ICsgMykKKworLyogZGVhZGxvY2sgaGFwcGVucyAqLworI2RlZmluZSBFX0RFQURMT0NLICAgICAo
UkVJU0VSNF9FUlJPUl9DT0RFX0JBU0UgKyA0KQorCisvKiBvcGVyYXRpb24gY2Fubm90IGJlIHBl
cmZvcm1lZCwgYmVjYXVzZSBpdCB3b3VsZCBibG9jayBhbmQgbm9uLWJsb2NraW5nIG1vZGUKKyAq
IHdhcyByZXF1ZXN0ZWQuICovCisjZGVmaW5lIEVfQkxPQ0sgICAgICAgIChSRUlTRVI0X0VSUk9S
X0NPREVfQkFTRSArIDUpCisKKy8qIHdhaXQgc29tZSBldmVudCAoZGVwZW5kcyBvbiBjb250ZXh0
KSwgdGhlbiByZXBlYXQgKi8KKyNkZWZpbmUgRV9XQUlUICAgICAgICAgKFJFSVNFUjRfRVJST1Jf
Q09ERV9CQVNFICsgNikKKworI2VuZGlmCQkJCS8qIF9fUkVJU0VSNF9IX18gKi8KKworLyogTWFr
ZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5
bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0
YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAt
LW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc2FmZV9saW5rLmMg
bGludXgtNS40LjE3L2ZzL3JlaXNlcjQvc2FmZV9saW5rLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmln
L2ZzL3JlaXNlcjQvc2FmZV9saW5rLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAx
MDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3NhZmVfbGluay5jCTIwMjAtMDItMDUgMjA6
NTM6NDEuNDc5MjIyMzgwICswMTAwCkBAIC0wLDAgKzEsMzU0IEBACisvKiBDb3B5cmlnaHQgMjAw
MywgMjAwNCBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0
L1JFQURNRSAqLworCisvKiBTYWZlLWxpbmtzLiAqLworCisvKgorICogU2FmZS1saW5rcyBhcmUg
dXNlZCB0byBtYWludGFpbiBmaWxlIHN5c3RlbSBjb25zaXN0ZW5jeSBkdXJpbmcgb3BlcmF0aW9u
cworICogdGhhdCBzcGF3bnMgbXVsdGlwbGUgdHJhbnNhY3Rpb25zLiBGb3IgZXhhbXBsZToKKyAq
CisgKiAgICAgMS4gVW5saW5rLiBVTklYIHN1cHBvcnRzICJvcGVuLWJ1dC11bmxpbmtlZCIgZmls
ZXMsIHRoYXQgaXMgZmlsZXMKKyAqICAgICB3aXRob3V0IHVzZXItdmlzaWJsZSBuYW1lcyBpbiB0
aGUgZmlsZSBzeXN0ZW0sIGJ1dCBzdGlsbCBvcGVuZWQgYnkgc29tZQorICogICAgIGFjdGl2ZSBw
cm9jZXNzLiBXaGF0IGhhcHBlbnMgaGVyZSBpcyB0aGF0IHVubGluayBwcm9wZXIgKGkuZS4sIHJl
bW92YWwKKyAqICAgICBvZiB0aGUgbGFzdCBmaWxlIG5hbWUpIGFuZCBmaWxlIGRlbGV0aW9uICh0
cnVuY2F0ZSBvZiBmaWxlIGJvZHkgdG8gemVybworICogICAgIGFuZCBkZWxldGlvbiBvZiBzdGF0
LWRhdGEsIHRoYXQgaGFwcGVucyB3aGVuIGxhc3QgZmlsZSBkZXNjcmlwdG9yIGlzCisgKiAgICAg
Y2xvc2VkKSwgbWF5IGJlbG9uZyB0byBkaWZmZXJlbnQgdHJhbnNhY3Rpb25zIFQxIGFuZCBUMi4g
SWYgYSBjcmFzaAorICogICAgIGhhcHBlbnMgYWZ0ZXIgVDEgY29tbWl0LCBidXQgYmVmb3JlIFQy
IGNvbW1pdCwgb24tZGlzayBmaWxlIHN5c3RlbSBoYXMKKyAqICAgICBhIGZpbGUgd2l0aG91dCBu
YW1lLCB0aGF0IGlzLCBkaXNrIHNwYWNlIGxlYWsuCisgKgorICogICAgIDIuIFRydW5jYXRlLiBU
cnVuY2F0ZSBvZiBsYXJnZSBmaWxlIG1heSBzcGF3biBtdWx0aXBsZSB0cmFuc2FjdGlvbnMuIElm
CisgKiAgICAgc3lzdGVtIGNyYXNoZXMgd2hpbGUgdHJ1bmNhdGUgd2FzIGluLXByb2dyZXNzLCBm
aWxlIGlzIGxlZnQgcGFydGlhbGx5CisgKiAgICAgdHJ1bmNhdGVkLCB3aGljaCB2aW9sYXRlcyAi
YXRvbWljaXR5IGd1YXJhbnRlZXMiIG9mIHJlaXNlcjQsIHZpei4gdGhhdAorICogICAgIGV2ZXJ5
IHN5c3RlbSBpcyBhdG9taWMuCisgKgorICogU2FmZS1saW5rcyBhZGRyZXNzIGJvdGggYWJvdmUg
Y2FzZXMuIEJhc2ljYWxseSwgc2FmZS1saW5rIGlzIGEgd2F5IHBvc3QKKyAqIHNvbWUgb3BlcmF0
aW9uIHRvIGJlIGV4ZWN1dGVkIGR1cmluZyBjb21taXQgb2Ygc29tZSBvdGhlciB0cmFuc2FjdGlv
biB0aGFuCisgKiBjdXJyZW50IG9uZS4gKEFub3RoZXIgd2F5IHRvIGxvb2sgYXQgdGhlIHNhZmUt
bGluayBpcyB0byBpbnRlcnByZXQgaXQgYXMgYQorICogbG9naWNhbCBsb2dnaW5nLikKKyAqCisg
KiBTcGVjaWZpY2FsbHksIGF0IHRoZSBiZWdpbm5pbmcgb2YgdW5saW5rIHNhZmUtbGluayBpbiBp
bnNlcnRlZCBpbiB0aGUKKyAqIHRyZWUuIFRoaXMgc2FmZS1saW5rIGlzIG5vcm1hbGx5IHJlbW92
ZWQgYnkgZmlsZSBkZWxldGlvbiBjb2RlIChkdXJpbmcKKyAqIHRyYW5zYWN0aW9uIFQyIGluIHRo
ZSBhYm92ZSB0ZXJtcykuIFRydW5jYXRlIGFsc28gaW5zZXJ0cyBzYWZlLWxpbmsgdGhhdCBpcwor
ICogbm9ybWFsbHkgcmVtb3ZlZCB3aGVuIHRydW5jYXRlIG9wZXJhdGlvbiBpcyBmaW5pc2hlZC4K
KyAqCisgKiBUaGlzIG1lYW5zLCB0aGF0IGluIHRoZSBjYXNlIG9mICJjbGVhbiB1bW91bnQiIHRo
ZXJlIGFyZSBubyBzYWZlLWxpbmtzIGluCisgKiB0aGUgdHJlZS4gSWYgc2FmZS1saW5rcyBhcmUg
b2JzZXJ2ZWQgZHVyaW5nIG1vdW50LCBpdCBtZWFucyB0aGF0IChhKSBzeXN0ZW0KKyAqIHdhcyB0
ZXJtaW5hdGVkIGFibm9ybWFsbHksIGFuZCAoYikgc2FmZS1saW5rIGNvcnJlc3BvbmQgdG8gdGhl
ICJwZW5kaW5nIgorICogKGkuZS4sIG5vdCBmaW5pc2hlZCkgb3BlcmF0aW9ucyB0aGF0IHdlcmUg
aW4tcHJvZ3Jlc3MgZHVyaW5nIHN5c3RlbQorICogdGVybWluYXRpb24uIEVhY2ggc2FmZS1saW5r
IHJlY29yZCBlbm91Z2ggaW5mb3JtYXRpb24gdG8gY29tcGxldGUKKyAqIGNvcnJlc3BvbmRpbmcg
b3BlcmF0aW9uLCBhbmQgbW91bnQgc2ltcGx5ICJyZXBsYXlzIiB0aGVtIChoZW5jZSwgdGhlCisg
KiBhbmFsb2d5IHdpdGggdGhlIGxvZ2ljYWwgbG9nZ2luZykuCisgKgorICogU2FmZS1saW5rcyBh
cmUgaW1wbGVtZW50ZWQgYXMgYmxhY2tib3ggaXRlbXMgKHNlZQorICogcGx1Z2luL2l0ZW0vYmxh
Y2tib3guW2NoXSkuCisgKgorICogRm9yIHRoZSByZWZlcmVuY2U6IGV4dDMgYWxzbyBoYXMgc2lt
aWxhciBtZWNoYW5pc20sIGl0J3MgY2FsbGVkICJhbiBvcnBoYW4KKyAqIGxpc3QiIHRoZXJlLgor
ICovCisKKyNpbmNsdWRlICJzYWZlX2xpbmsuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1
ZGUgImlub2RlLmgiCisKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9ibGFja2JveC5oIgorCisjaW5j
bHVkZSA8bGludXgvZnMuaD4KKworLyoKKyAqIE9uLWRpc2sgZm9ybWF0IG9mIHNhZmUtbGluay4K
KyAqLwordHlwZWRlZiBzdHJ1Y3Qgc2FmZWxpbmsgeworCXJlaXNlcjRfa2V5IHNka2V5OwkvKiBr
ZXkgb2Ygc3RhdC1kYXRhIGZvciB0aGUgZmlsZSBzYWZlLWxpbmsgaXMKKwkJCQkgKiBmb3IgKi8K
KwlkNjQgc2l6ZTsJCS8qIHNpemUgdG8gd2hpY2ggZmlsZSBzaG91bGQgYmUgdHJ1bmNhdGVkICov
Cit9IHNhZmVsaW5rX3Q7CisKKy8qCisgKiBsb2NhbGl0eSB3aGVyZSBzYWZlLWxpbmsgaXRlbXMg
YXJlIHN0b3JlZC4gTmV4dCB0byB0aGUgb2JqZWN0aWQgb2Ygcm9vdAorICogZGlyZWN0b3J5Lgor
ICovCitzdGF0aWMgb2lkX3Qgc2FmZV9saW5rX2xvY2FsaXR5KHJlaXNlcjRfdHJlZSAqIHRyZWUp
Cit7CisJcmV0dXJuIGdldF9rZXlfb2JqZWN0aWQoZ2V0X3N1cGVyX3ByaXZhdGUodHJlZS0+c3Vw
ZXIpLT5kZl9wbHVnLT4KKwkJCQlyb290X2Rpcl9rZXkodHJlZS0+c3VwZXIpKSArIDE7Cit9CisK
Ky8qCisgIENvbnN0cnVjdCBhIGtleSBmb3IgdGhlIHNhZmUtbGluay4gS2V5IGhhcyB0aGUgZm9s
bG93aW5nIGZvcm1hdDoKKworfCAgICAgICAgNjAgICAgIHwgNCB8ICAgICAgICA2NCAgICAgICAg
fCA0IHwgICAgICA2MCAgICAgICB8ICAgICAgICAgNjQgICAgICAgfAorKy0tLS0tLS0tLS0tLS0t
LSstLS0rLS0tLS0tLS0tLS0tLS0tLS0tKy0tLSstLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0t
LS0tLS0tKworfCAgIGxvY2FsaXR5ICAgIHwgMCB8ICAgICAgICAwICAgICAgICAgfCAwIHwgICBv
YmplY3RpZCAgICB8ICAgICBsaW5rIHR5cGUgICAgfAorKy0tLS0tLS0tLS0tLS0tLSstLS0rLS0t
LS0tLS0tLS0tLS0tLS0tKy0tLSstLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tKwor
fCAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAg
ICB8ICAgICAgICAgICAgICAgICAgfAorfCAgICAgOCBieXRlcyAgICAgICB8ICAgICA4IGJ5dGVz
ICAgICAgfCAgICAgIDggYnl0ZXMgICAgICB8ICAgICAgOCBieXRlcyAgICAgfAorCisgICBUaGlz
IGlzIGluIGxhcmdlIGtleXMgZm9ybWF0LiBJbiBzbWFsbCBrZXlzIGZvcm1hdCBzZWNvbmQgOCBi
eXRlIGNodW5rIGlzCisgICBvdXQuIExvY2FsaXR5IGlzIGEgY29uc3RhbnQgcmV0dXJuZWQgYnkg
c2FmZV9saW5rX2xvY2FsaXR5KCkuIG9iamVjdGlkIGlzCisgICBhbiBvaWQgb2YgYSBmaWxlIG9u
IHdoaWNoIG9wZXJhdGlvbiBwcm90ZWN0ZWQgYnkgdGhpcyBzYWZlLWxpbmsgaXMKKyAgIHBlcmZv
cm1lZC4gbGluay10eXBlIGlzIHVzZWQgdG8gZGlzdGluZ3Vpc2ggc2FmZS1saW5rcyBmb3IgZGlm
ZmVyZW50CisgICBvcGVyYXRpb25zLgorCisgKi8KK3N0YXRpYyByZWlzZXI0X2tleSAqYnVpbGRf
bGlua19rZXkocmVpc2VyNF90cmVlICogdHJlZSwgb2lkX3Qgb2lkLAorCQkJCSAgIHJlaXNlcjRf
c2FmZV9saW5rX3QgbGluaywgcmVpc2VyNF9rZXkgKiBrZXkpCit7CisJcmVpc2VyNF9rZXlfaW5p
dChrZXkpOworCXNldF9rZXlfbG9jYWxpdHkoa2V5LCBzYWZlX2xpbmtfbG9jYWxpdHkodHJlZSkp
OworCXNldF9rZXlfb2JqZWN0aWQoa2V5LCBvaWQpOworCXNldF9rZXlfb2Zmc2V0KGtleSwgbGlu
ayk7CisJcmV0dXJuIGtleTsKK30KKworLyoKKyAqIGhvdyBtdWNoIGRpc2sgc3BhY2UgaXMgbmVj
ZXNzYXJ5IHRvIGluc2VydCBhbmQgcmVtb3ZlIChpbiB0aGUKKyAqIGVycm9yLWhhbmRsaW5nIHBh
dGgpIHNhZmUtbGluay4KKyAqLworc3RhdGljIF9fdTY0IHNhZmVfbGlua190b2dyYWIocmVpc2Vy
NF90cmVlICogdHJlZSkKK3sKKwlyZXR1cm4KKwkgICAgLyogaW5zZXJ0IHNhZmUgbGluayAqLwor
CSAgICBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2l0ZW0odHJlZSkgKworCSAgICAvKiByZW1vdmUgc2Fm
ZSBsaW5rICovCisJICAgIGVzdGltYXRlX29uZV9pdGVtX3JlbW92YWwodHJlZSkgKworCSAgICAv
KiBkcmlsbCB0byB0aGUgbGVhZiBsZXZlbCBkdXJpbmcgaW5zZXJ0aW9uICovCisJICAgIDEgKyBl
c3RpbWF0ZV9vbmVfaW5zZXJ0X2l0ZW0odHJlZSkgKworCSAgICAvKgorCSAgICAgKiBwb3NzaWJs
ZSB1cGRhdGUgb2YgZXhpc3Rpbmcgc2FmZS1saW5rLiBBY3R1YWxseSwgaWYKKwkgICAgICogc2Fm
ZS1saW5rIGV4aXN0ZWQgYWxyZWFkeSAod2UgZmFpbGVkIHRvIHJlbW92ZSBpdCksIHRoZW4gbm8K
KwkgICAgICogaW5zZXJ0aW9uIGlzIG5lY2Vzc2FyeSwgc28gdGhpcyB0ZXJtIGlzIGFscmVhZHkg
ImNvdmVyZWQiLAorCSAgICAgKiBidXQgZm9yIHNpbXBsaWNpdHkgbGV0J3MgbGVmdCBpdC4KKwkg
ICAgICovCisJICAgIDE7Cit9CisKKy8qCisgKiBncmFiIGVub3VnaCBkaXNrIHNwYWNlIHRvIGlu
c2VydCBhbmQgcmVtb3ZlIChpbiB0aGUgZXJyb3ItaGFuZGxpbmcgcGF0aCkKKyAqIHNhZmUtbGlu
ay4KKyAqLworaW50IHNhZmVfbGlua19ncmFiKHJlaXNlcjRfdHJlZSAqIHRyZWUsIHJlaXNlcjRf
YmFfZmxhZ3NfdCBmbGFncykKK3sKKwlpbnQgcmVzdWx0OworCisJZ3JhYl9zcGFjZV9lbmFibGUo
KTsKKwkvKiBUaGUgc2JpbmZvLT5kZWxldGVfbXV0ZXggY2FuIGJlIHRha2VuIGhlcmUuCisJICog
c2FmZV9saW5rX3JlbGVhc2UoKSBzaG91bGQgYmUgY2FsbGVkIGJlZm9yZSBsZWF2aW5nIHJlaXNl
cjQKKwkgKiBjb250ZXh0LiAqLworCXJlc3VsdCA9CisJICAgIHJlaXNlcjRfZ3JhYl9yZXNlcnZl
ZCh0cmVlLT5zdXBlciwgc2FmZV9saW5rX3RvZ3JhYih0cmVlKSwgZmxhZ3MpOworCWdyYWJfc3Bh
Y2VfZW5hYmxlKCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoKKyAqIHJlbGVhc2UgdW51c2Vk
IGRpc2sgc3BhY2UgcmVzZXJ2ZWQgYnkgc2FmZV9saW5rX2dyYWIoKS4KKyAqLwordm9pZCBzYWZl
X2xpbmtfcmVsZWFzZShyZWlzZXI0X3RyZWUgKiB0cmVlKQoreworCXJlaXNlcjRfcmVsZWFzZV9y
ZXNlcnZlZCh0cmVlLT5zdXBlcik7Cit9CisKKy8qCisgKiBpbnNlcnQgaW50byB0cmVlIHNhZmUt
bGluayBmb3Igb3BlcmF0aW9uIEBsaW5rIG9uIGlub2RlIEBpbm9kZS4KKyAqLworaW50IHNhZmVf
bGlua19hZGQoc3RydWN0IGlub2RlICppbm9kZSwgcmVpc2VyNF9zYWZlX2xpbmtfdCBsaW5rKQor
eworCXJlaXNlcjRfa2V5IGtleTsKKwlzYWZlbGlua190IHNsOworCWludCBsZW5ndGg7CisJaW50
IHJlc3VsdDsKKwlyZWlzZXI0X3RyZWUgKnRyZWU7CisKKwlidWlsZF9zZF9rZXkoaW5vZGUsICZz
bC5zZGtleSk7CisJbGVuZ3RoID0gc2l6ZW9mIHNsLnNka2V5OworCisJaWYgKGxpbmsgPT0gU0FG
RV9UUlVOQ0FURSkgeworCQkvKgorCQkgKiBmb3IgdHJ1bmNhdGUgd2UgaGF2ZSB0byBzdG9yZSBm
aW5hbCBmaWxlIGxlbmd0aCBhbHNvLAorCQkgKiBleHBhbmQgaXRlbS4KKwkJICovCisJCWxlbmd0
aCArPSBzaXplb2Yoc2wuc2l6ZSk7CisJCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlNjQoaW5vZGUt
Pmlfc2l6ZSksICZzbC5zaXplKTsKKwl9CisJdHJlZSA9IHJlaXNlcjRfdHJlZV9ieV9pbm9kZShp
bm9kZSk7CisJYnVpbGRfbGlua19rZXkodHJlZSwgZ2V0X2lub2RlX29pZChpbm9kZSksIGxpbmss
ICZrZXkpOworCisJcmVzdWx0ID0gc3RvcmVfYmxhY2tfYm94KHRyZWUsICZrZXksICZzbCwgbGVu
Z3RoKTsKKwlpZiAocmVzdWx0ID09IC1FRVhJU1QpCisJCXJlc3VsdCA9IHVwZGF0ZV9ibGFja19i
b3godHJlZSwgJmtleSwgJnNsLCBsZW5ndGgpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qCisg
KiByZW1vdmUgc2FmZS1saW5rIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG9wZXJhdGlvbiBAbGluayBv
biBpbm9kZSBAaW5vZGUgZnJvbQorICogdGhlIHRyZWUuCisgKi8KK2ludCBzYWZlX2xpbmtfZGVs
KHJlaXNlcjRfdHJlZSAqIHRyZWUsIG9pZF90IG9pZCwgcmVpc2VyNF9zYWZlX2xpbmtfdCBsaW5r
KQoreworCXJlaXNlcjRfa2V5IGtleTsKKworCXJldHVybiBraWxsX2JsYWNrX2JveCh0cmVlLCBi
dWlsZF9saW5rX2tleSh0cmVlLCBvaWQsIGxpbmssICZrZXkpKTsKK30KKworLyoKKyAqIGluLW1l
bW9yeSBzdHJ1Y3R1cmUgdG8ga2VlcCBpbmZvcm1hdGlvbiBleHRyYWN0ZWQgZnJvbSBzYWZlLWxp
bmsuIFRoaXMgaXMKKyAqIHVzZWQgdG8gaXRlcmF0ZSBvdmVyIGFsbCBzYWZlLWxpbmtzLgorICov
CitzdHJ1Y3Qgc2FmZV9saW5rX2NvbnRleHQgeworCXJlaXNlcjRfdHJlZSAqdHJlZTsJLyogaW50
ZXJuYWwgdHJlZSAqLworCXJlaXNlcjRfa2V5IGtleTsJLyogc2FmZS1saW5rIGtleSAqLworCXJl
aXNlcjRfa2V5IHNka2V5OwkvKiBrZXkgb2Ygb2JqZWN0IHN0YXQtZGF0YSAqLworCXJlaXNlcjRf
c2FmZV9saW5rX3QgbGluazsJLyogc2FmZS1saW5rIHR5cGUgKi8KKwlvaWRfdCBvaWQ7CQkvKiBv
YmplY3Qgb2lkICovCisJX191NjQgc2l6ZTsJCS8qIGZpbmFsIHNpemUgZm9yIHRydW5jYXRlICov
Cit9OworCisvKgorICogc3RhcnQgaXRlcmF0aW5nIG92ZXIgYWxsIHNhZmUtbGlua3MuCisgKi8K
K3N0YXRpYyB2b2lkIHNhZmVfbGlua19pdGVyX2JlZ2luKHJlaXNlcjRfdHJlZSAqIHRyZWUsCisJ
CQkJIHN0cnVjdCBzYWZlX2xpbmtfY29udGV4dCAqY3R4KQoreworCWN0eC0+dHJlZSA9IHRyZWU7
CisJcmVpc2VyNF9rZXlfaW5pdCgmY3R4LT5rZXkpOworCXNldF9rZXlfbG9jYWxpdHkoJmN0eC0+
a2V5LCBzYWZlX2xpbmtfbG9jYWxpdHkodHJlZSkpOworCXNldF9rZXlfb2JqZWN0aWQoJmN0eC0+
a2V5LCBnZXRfa2V5X29iamVjdGlkKHJlaXNlcjRfbWF4X2tleSgpKSk7CisJc2V0X2tleV9vZmZz
ZXQoJmN0eC0+a2V5LCBnZXRfa2V5X29mZnNldChyZWlzZXI0X21heF9rZXkoKSkpOworfQorCisv
KgorICogcmV0dXJuIG5leHQgc2FmZS1saW5rLgorICovCitzdGF0aWMgaW50IHNhZmVfbGlua19p
dGVyX25leHQoc3RydWN0IHNhZmVfbGlua19jb250ZXh0ICpjdHgpCit7CisJaW50IHJlc3VsdDsK
KwlzYWZlbGlua190IHNsOworCisJcmVzdWx0ID0gbG9hZF9ibGFja19ib3goY3R4LT50cmVlLCAm
Y3R4LT5rZXksICZzbCwgc2l6ZW9mIHNsLCAwKTsKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJY3R4
LT5vaWQgPSBnZXRfa2V5X29iamVjdGlkKCZjdHgtPmtleSk7CisJCWN0eC0+bGluayA9IGdldF9r
ZXlfb2Zmc2V0KCZjdHgtPmtleSk7CisJCWN0eC0+c2RrZXkgPSBzbC5zZGtleTsKKwkJaWYgKGN0
eC0+bGluayA9PSBTQUZFX1RSVU5DQVRFKQorCQkJY3R4LT5zaXplID0gbGU2NF90b19jcHUoZ2V0
X3VuYWxpZ25lZCgmc2wuc2l6ZSkpOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisvKgorICog
Y2hlY2sgYXJlIHRoZXJlIGFueSBtb3JlIHNhZmUtbGlua3MgbGVmdCBpbiB0aGUgdHJlZS4KKyAq
Lworc3RhdGljIGludCBzYWZlX2xpbmtfaXRlcl9maW5pc2hlZChzdHJ1Y3Qgc2FmZV9saW5rX2Nv
bnRleHQgKmN0eCkKK3sKKwlyZXR1cm4gZ2V0X2tleV9sb2NhbGl0eSgmY3R4LT5rZXkpICE9IHNh
ZmVfbGlua19sb2NhbGl0eShjdHgtPnRyZWUpOworfQorCisvKgorICogZmluaXNoIHNhZmUtbGlu
ayBpdGVyYXRpb24uCisgKi8KK3N0YXRpYyB2b2lkIHNhZmVfbGlua19pdGVyX2VuZChzdHJ1Y3Qg
c2FmZV9saW5rX2NvbnRleHQgKmN0eCkKK3sKKwkvKiBub3RoaW5nIHNwZWNpYWwgKi8KK30KKwor
LyoKKyAqIHByb2Nlc3Mgc2luZ2xlIHNhZmUtbGluay4KKyAqLworc3RhdGljIGludCBwcm9jZXNz
X3NhZmVsaW5rKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIHJlaXNlcjRfc2FmZV9saW5rX3Qg
bGluaywKKwkJCSAgICByZWlzZXI0X2tleSAqIHNka2V5LCBvaWRfdCBvaWQsIF9fdTY0IHNpemUp
Cit7CisJc3RydWN0IGlub2RlICppbm9kZTsKKwlpbnQgcmVzdWx0OworCisJLyoKKwkgKiBvYnRh
aW4gb2JqZWN0IGlub2RlIGJ5IHJlaXNlcjRfaWdldCgpLCB0aGVuIGNhbGwgb2JqZWN0IHBsdWdp
bgorCSAqIC0+c2FmZWxpbmsoKSBtZXRob2QgdG8gZG8gYWN0dWFsIHdvcmssIHRoZW4gZGVsZXRl
IHNhZmUtbGluayBvbgorCSAqIHN1Y2Nlc3MuCisJICovCisJaW5vZGUgPSByZWlzZXI0X2lnZXQo
c3VwZXIsIHNka2V5LCAxKTsKKwlpZiAoIUlTX0VSUihpbm9kZSkpIHsKKwkJZmlsZV9wbHVnaW4g
KmZwbHVnOworCisJCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVnaW4oaW5vZGUpOworCQlhc3NlcnQo
Im5pa2l0YS0zNDI4IiwgZnBsdWcgIT0gTlVMTCk7CisJCWFzc2VydCgiIiwgb2lkID09IGdldF9p
bm9kZV9vaWQoaW5vZGUpKTsKKwkJaWYgKGZwbHVnLT5zYWZlbGluayAhPSBOVUxMKSB7CisJCQkv
KiByZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQgaXMgbm90IG5lY2Vzc2FyeSBiZWNhdXNlCisJ
CQkgKiBtb3VudGluZyBpcyBzaWdubGUgdGhyZWFkLiBIb3dldmVyLCB3aXRob3V0IGl0CisJCQkg
KiBkZWFkbG9jayBkZXRlY3Rpb24gY29kZSB3aWxsIGNvbXBsYWluIChzZWUKKwkJCSAqIG5pa2l0
YS0zMzYxKS4gKi8KKwkJCXJlaXNlcjRfdHhuX3Jlc3RhcnRfY3VycmVudCgpOworCQkJcmVzdWx0
ID0gZnBsdWctPnNhZmVsaW5rKGlub2RlLCBsaW5rLCBzaXplKTsKKwkJfSBlbHNlIHsKKwkJCXdh
cm5pbmcoIm5pa2l0YS0zNDMwIiwKKwkJCQkiQ2Fubm90IGhhbmRsZSBzYWZlbGluayBmb3IgJWxs
aSIsCisJCQkJKHVuc2lnbmVkIGxvbmcgbG9uZylvaWQpOworCQkJcmVpc2VyNF9wcmludF9rZXko
ImtleSIsIHNka2V5KTsKKwkJCXJlc3VsdCA9IDA7CisJCX0KKwkJaWYgKHJlc3VsdCAhPSAwKSB7
CisJCQl3YXJuaW5nKCJuaWtpdGEtMzQzMSIsCisJCQkJIkVycm9yIHByb2Nlc3Npbmcgc2FmZWxp
bmsgZm9yICVsbGk6ICVpIiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKW9pZCwgcmVzdWx0KTsK
KwkJfQorCQlyZWlzZXI0X2lnZXRfY29tcGxldGUoaW5vZGUpOworCQlpcHV0KGlub2RlKTsKKwkJ
aWYgKHJlc3VsdCA9PSAwKSB7CisJCQlyZXN1bHQgPSBzYWZlX2xpbmtfZ3JhYihyZWlzZXI0X2dl
dF90cmVlKHN1cGVyKSwKKwkJCQkJCUJBX0NBTl9DT01NSVQpOworCQkJaWYgKHJlc3VsdCA9PSAw
KQorCQkJCXJlc3VsdCA9CisJCQkJICAgIHNhZmVfbGlua19kZWwocmVpc2VyNF9nZXRfdHJlZShz
dXBlciksIG9pZCwKKwkJCQkJCSAgbGluayk7CisJCQlzYWZlX2xpbmtfcmVsZWFzZShyZWlzZXI0
X2dldF90cmVlKHN1cGVyKSk7CisJCQkvKgorCQkJICogcmVzdGFydCB0cmFuc2FjdGlvbjogaWYg
dGhlcmUgd2FzIGxhcmdlIG51bWJlciBvZgorCQkJICogc2FmZS1saW5rcywgdGhlaXIgcHJvY2Vz
c2luZyBtYXkgZmFpbCB0byBmaXQgaW50bworCQkJICogc2luZ2xlIHRyYW5zYWN0aW9uLgorCQkJ
ICovCisJCQlpZiAocmVzdWx0ID09IDApCisJCQkJcmVpc2VyNF90eG5fcmVzdGFydF9jdXJyZW50
KCk7CisJCX0KKwl9IGVsc2UKKwkJcmVzdWx0ID0gUFRSX0VSUihpbm9kZSk7CisJcmV0dXJuIHJl
c3VsdDsKK30KKworLyoKKyAqIGl0ZXJhdGUgb3ZlciBhbGwgc2FmZS1saW5rcyBpbiB0aGUgZmls
ZS1zeXN0ZW0gcHJvY2Vzc2luZyB0aGVtIG9uZSBieSBvbmUuCisgKi8KK2ludCBwcm9jZXNzX3Nh
ZmVsaW5rcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKQoreworCXN0cnVjdCBzYWZlX2xpbmtf
Y29udGV4dCBjdHg7CisJaW50IHJlc3VsdDsKKworCWlmIChzYl9yZG9ubHkoc3VwZXIpKQorCQkv
KiBkbyBub3RoaW5nIG9uIHRoZSByZWFkLW9ubHkgZmlsZSBzeXN0ZW0gKi8KKwkJcmV0dXJuIDA7
CisJc2FmZV9saW5rX2l0ZXJfYmVnaW4oJmdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+dHJlZSwg
JmN0eCk7CisJcmVzdWx0ID0gMDsKKwlkbyB7CisJCXJlc3VsdCA9IHNhZmVfbGlua19pdGVyX25l
eHQoJmN0eCk7CisJCWlmIChzYWZlX2xpbmtfaXRlcl9maW5pc2hlZCgmY3R4KSB8fCByZXN1bHQg
PT0gLUVOT0VOVCkgeworCQkJcmVzdWx0ID0gMDsKKwkJCWJyZWFrOworCQl9CisJCWlmIChyZXN1
bHQgPT0gMCkKKwkJCXJlc3VsdCA9IHByb2Nlc3Nfc2FmZWxpbmsoc3VwZXIsIGN0eC5saW5rLAor
CQkJCQkJICAmY3R4LnNka2V5LCBjdHgub2lkLAorCQkJCQkJICBjdHguc2l6ZSk7CisJfSB3aGls
ZSAocmVzdWx0ID09IDApOworCXNhZmVfbGlua19pdGVyX2VuZCgmY3R4KTsKKwlyZXR1cm4gcmVz
dWx0OworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAg
Yy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNp
Yy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Ny
b2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc2FmZV9saW5rLmggbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvc2FmZV9saW5rLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc2FmZV9saW5r
LmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9m
cy9yZWlzZXI0L3NhZmVfbGluay5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDc5MjIyMzgwICswMTAw
CkBAIC0wLDAgKzEsMjkgQEAKKy8qIENvcHlyaWdodCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNl
bnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIFNhZmUtbGlua3Mu
IFNlZSBzYWZlX2xpbmsuYyBmb3IgZGV0YWlscy4gKi8KKworI2lmICFkZWZpbmVkKF9fRlNfU0FG
RV9MSU5LX0hfXykKKyNkZWZpbmUgX19GU19TQUZFX0xJTktfSF9fCisKKyNpbmNsdWRlICJ0cmVl
LmgiCisKK2ludCBzYWZlX2xpbmtfZ3JhYihyZWlzZXI0X3RyZWUgKiB0cmVlLCByZWlzZXI0X2Jh
X2ZsYWdzX3QgZmxhZ3MpOwordm9pZCBzYWZlX2xpbmtfcmVsZWFzZShyZWlzZXI0X3RyZWUgKiB0
cmVlKTsKK2ludCBzYWZlX2xpbmtfYWRkKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHJlaXNlcjRfc2Fm
ZV9saW5rX3QgbGluayk7CitpbnQgc2FmZV9saW5rX2RlbChyZWlzZXI0X3RyZWUgKiwgb2lkX3Qg
b2lkLCByZWlzZXI0X3NhZmVfbGlua190IGxpbmspOworCitpbnQgcHJvY2Vzc19zYWZlbGlua3Mo
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcik7CisKKy8qIF9fRlNfU0FGRV9MSU5LX0hfXyAqLwor
I2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBj
LWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2lj
LW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6
CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlz
ZXI0L3NlYWwuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9zZWFsLmMKLS0tIGxpbnV4LTUuNC4x
Ny5vcmlnL2ZzL3JlaXNlcjQvc2VhbC5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICsw
MTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9zZWFsLmMJMjAyMC0wMi0wNSAyMDo1Mzo0
MS40NzkyMjIzODAgKzAxMDAKQEAgLTAsMCArMSwyMTkgQEAKKy8qIENvcHlyaWdodCAyMDAyLCAy
MDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9SRUFETUUg
Ki8KKy8qIFNlYWxzIGltcGxlbWVudGF0aW9uLiAqLworLyogU2VhbHMgYXJlICJ3ZWFrIiB0cmVl
IHBvaW50ZXJzLiBUaGV5IGFyZSBhbmFsb2dvdXMgdG8gdHJlZSBjb29yZHMgaW4KKyAgIGFsbG93
aW5nIHRvIGJ5cGFzcyB0cmVlIHRyYXZlcnNhbC4gQnV0IG5vcm1hbCB1c2FnZSBvZiBjb29yZHMg
aW1wbGllcyB0aGF0CisgICBub2RlIHBvaW50ZWQgdG8gYnkgY29vcmQgaXMgbG9ja2VkLCB3aGVy
ZWFzIHNlYWxzIGRvbid0IGtlZXAgYSBsb2NrIChvcgorICAgZXZlbiBhIHJlZmVyZW5jZSkgdG8g
em5vZGUuIEluIHN0ZWFkLCBlYWNoIHpub2RlIGNvbnRhaW5zIGEgdmVyc2lvbiBudW1iZXIsCisg
ICBpbmNyZWFzZWQgb24gZWFjaCB6bm9kZSBtb2RpZmljYXRpb24uIFRoaXMgdmVyc2lvbiBudW1i
ZXIgaXMgY29waWVkIGludG8gYQorICAgc2VhbCB3aGVuIHNlYWwgaXMgY3JlYXRlZC4gTGF0ZXIs
IG9uZSBjYW4gInZhbGlkYXRlIiBzZWFsIGJ5IGNhbGxpbmcKKyAgIHJlaXNlcjRfc2VhbF92YWxp
ZGF0ZSgpLiBJZiB6bm9kZSBpcyBpbiBjYWNoZSBhbmQgaXRzIHZlcnNpb24gbnVtYmVyIGlzCisg
ICBzdGlsbCB0aGUgc2FtZSwgc2VhbCBpcyAicHJpc3RpbmUiIGFuZCBjb29yZCBhc3NvY2lhdGVk
IHdpdGggaXQgY2FuIGJlCisgICByZS11c2VkIGltbWVkaWF0ZWx5LgorCisgICBJZiwgb24gdGhl
IG90aGVyIGhhbmQsIHpub2RlIGlzIG91dCBvZiBjYWNoZSwgb3IgaXQgaXMgb2J2aW91c2x5IGRp
ZmZlcmVudAorICAgb25lIGZyb20gdGhlIHpub2RlIHNlYWwgd2FzIGluaXRpYWxseSBhdHRhY2hl
ZCB0byAoZm9yIGV4YW1wbGUsIGl0IGlzIG9uCisgICB0aGUgZGlmZmVyZW50IGxldmVsLCBvciBp
cyBiZWluZyByZW1vdmVkIGZyb20gdGhlIHRyZWUpLCBzZWFsIGlzCisgICBpcnJlcGFyYWJseSBp
bnZhbGlkICgiYnVybmVkIikgYW5kIHRyZWUgdHJhdmVyc2FsIGhhcyB0byBiZSByZXBlYXRlZC4K
KworICAgT3RoZXJ3aXNlLCB0aGVyZSBpcyBzb21lIGhvcGUsIHRoYXQgd2hpbGUgem5vZGUgd2Fz
IG1vZGlmaWVkIChhbmQgc2VhbCB3YXMKKyAgICJicm9rZW4iIGFzIGEgcmVzdWx0KSwga2V5IGF0
dGFjaGVkIHRvIHRoZSBzZWFsIGlzIHN0aWxsIGluIHRoZSBub2RlLiBUaGlzCisgICBpcyBjaGVj
a2VkIGJ5IGZpcnN0IGNvbXBhcmluZyB0aGlzIGtleSB3aXRoIGRlbGltaXRpbmcga2V5cyBvZiBu
b2RlIGFuZCwgaWYKKyAgIGtleSBpcyBvaywgZG9pbmcgaW50cmEtbm9kZSBsb29rdXAuCisKKyAg
IFpub2RlIHZlcnNpb24gaXMgbWFpbnRhaW5lZCBpbiB0aGUgZm9sbG93aW5nIHdheToKKworICAg
dGhlcmUgaXMgcmVpc2VyNF90cmVlLnpub2RlX2Vwb2NoIGNvdW50ZXIuIFdoZW5ldmVyIG5ldyB6
bm9kZSBpcyBjcmVhdGVkLAorICAgem5vZGVfZXBvY2ggaXMgaW5jcmVtZW50ZWQgYW5kIGl0cyBu
ZXcgdmFsdWUgaXMgc3RvcmVkIGluIC0+dmVyc2lvbiBmaWVsZAorICAgb2YgbmV3IHpub2RlLiBX
aGVuZXZlciB6bm9kZSBpcyBkaXJ0aWVkICh3aGljaCBtZWFucyBpdCB3YXMgcHJvYmFibHkKKyAg
IG1vZGlmaWVkKSwgem5vZGVfZXBvY2ggaXMgYWxzbyBpbmNyZW1lbnRlZCBhbmQgaXRzIG5ldyB2
YWx1ZSBpcyBzdG9yZWQgaW4KKyAgIHpub2RlLT52ZXJzaW9uLiBUaGlzIGlzIGRvbmUgc28sIGJl
Y2F1c2UganVzdCBpbmNyZW1lbnRpbmcgem5vZGUtPnZlcnNpb24KKyAgIG9uIGVhY2ggdXBkYXRl
IGlzIG5vdCBlbm91Z2g6IGl0IG1heSBzbyBoYXBwZW4sIHRoYXQgem5vZGUgZ2V0IGRlbGV0ZWQs
IG5ldworICAgem5vZGUgaXMgYWxsb2NhdGVkIGZvciB0aGUgc2FtZSBkaXNrIGJsb2NrIGFuZCBn
ZXRzIHRoZSBzYW1lIHZlcnNpb24KKyAgIGNvdW50ZXIsIHRyaWNraW5nIHNlYWwgY29kZSBpbnRv
IGZhbHNlIHBvc2l0aXZlLgorKi8KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJk
ZWJ1Zy5oIgorI2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisjaW5jbHVkZSAi
c2VhbC5oIgorI2luY2x1ZGUgInBsdWdpbi9pdGVtL2l0ZW0uaCIKKyNpbmNsdWRlICJwbHVnaW4v
bm9kZS9ub2RlLmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJ6bm9kZS5oIgorI2lu
Y2x1ZGUgInN1cGVyLmgiCisKK3N0YXRpYyB6bm9kZSAqc2VhbF9ub2RlKGNvbnN0IHNlYWxfdCAq
c2VhbCk7CitzdGF0aWMgaW50IHNlYWxfbWF0Y2hlcyhjb25zdCBzZWFsX3QgKnNlYWwsIHpub2Rl
ICogbm9kZSk7CisKKy8qIGluaXRpYWxpc2Ugc2VhbC4gVGhpcyBjYW4gYmUgY2FsbGVkIHNldmVy
YWwgdGltZXMgb24gdGhlIHNhbWUgc2VhbC4gQGNvb3JkCisgICBhbmQgQGtleSBjYW4gYmUgTlVM
TC4gICovCit2b2lkIHJlaXNlcjRfc2VhbF9pbml0KHNlYWxfdCAqc2VhbCAvKiBzZWFsIHRvIGlu
aXRpYWxpc2UgKi8gLAorCQkgICAgICAgY29uc3QgY29vcmRfdCAqY29vcmQgLyogY29vcmQgQHNl
YWwgd2lsbCBiZQorCQkJCQkgICAgICAqCWF0dGFjaGVkIHRvICovICwKKwkJICAgICAgIGNvbnN0
IHJlaXNlcjRfa2V5ICoga2V5IFVOVVNFRF9BUkcgLyoga2V5IEBzZWFsIHdpbGwgYmUKKwkJCQkJ
CQkgICAqIGF0dGFjaGVkIHRvICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xODg2Iiwgc2VhbCAh
PSBOVUxMKTsKKwltZW1zZXQoc2VhbCwgMCwgc2l6ZW9mICpzZWFsKTsKKwlpZiAoY29vcmQgIT0g
TlVMTCkgeworCQl6bm9kZSAqbm9kZTsKKworCQlub2RlID0gY29vcmQtPm5vZGU7CisJCWFzc2Vy
dCgibmlraXRhLTE5ODciLCBub2RlICE9IE5VTEwpOworCQlzcGluX2xvY2tfem5vZGUobm9kZSk7
CisJCXNlYWwtPnZlcnNpb24gPSBub2RlLT52ZXJzaW9uOworCQlhc3NlcnQoIm5pa2l0YS0xOTg4
Iiwgc2VhbC0+dmVyc2lvbiAhPSAwKTsKKwkJc2VhbC0+YmxvY2sgPSAqem5vZGVfZ2V0X2Jsb2Nr
KG5vZGUpOworI2lmIFJFSVNFUjRfREVCVUcKKwkJc2VhbC0+Y29vcmQxID0gKmNvb3JkOworCQlp
ZiAoa2V5ICE9IE5VTEwpCisJCQlzZWFsLT5rZXkgPSAqa2V5OworI2VuZGlmCisJCXNwaW5fdW5s
b2NrX3pub2RlKG5vZGUpOworCX0KK30KKworLyogZmluaXNoIHdpdGggc2VhbCAqLwordm9pZCBy
ZWlzZXI0X3NlYWxfZG9uZShzZWFsX3QgKnNlYWwvKiBzZWFsIHRvIGNsZWFyICovKQoreworCWFz
c2VydCgibmlraXRhLTE4ODciLCBzZWFsICE9IE5VTEwpOworCXNlYWwtPnZlcnNpb24gPSAwOwor
fQorCisvKiB0cnVlIGlmIHNlYWwgd2FzIGluaXRpYWxpc2VkICovCitpbnQgcmVpc2VyNF9zZWFs
X2lzX3NldChjb25zdCBzZWFsX3QgKnNlYWwvKiBzZWFsIHRvIHF1ZXJ5ICovKQoreworCWFzc2Vy
dCgibmlraXRhLTE4OTAiLCBzZWFsICE9IE5VTEwpOworCXJldHVybiBzZWFsLT52ZXJzaW9uICE9
IDA7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiBoZWxwZXIgZnVuY3Rpb24gZm9yIHJlaXNl
cjRfc2VhbF92YWxpZGF0ZSgpLiBJdCBjaGVja3MgdGhhdCBpdGVtIGF0IEBjb29yZAorICogaGFz
IGV4cGVjdGVkIGtleS4gVGhpcyBpcyB0byBkZXRlY3QgY2FzZXMgd2hlcmUgbm9kZSB3YXMgbW9k
aWZpZWQgYnV0IHdhc24ndAorICogbWFya2VkIGRpcnR5LiAqLworc3RhdGljIGlubGluZSBpbnQg
Y2hlY2tfc2VhbF9tYXRjaChjb25zdCBjb29yZF90ICpjb29yZCAvKiBjb29yZCB0byBjaGVjayAq
LyAsCisJCQkJICAgY29uc3QgcmVpc2VyNF9rZXkgKmtfXy8qIGV4cGVjdGVkIGtleSAqLykKK3sK
KwlyZWlzZXI0X2tleSB1a2V5OworCisJLyogRklYTUUtVlM6IHdlIG9ubHkgY2FuIGNvbXBhcmUg
a2V5cyBmb3IgaXRlbXMgd2hvc2UgdW5pdHMKKwkgICByZXByZXNlbnQgZXhhY3RseSBvbmUga2V5
ICovCisJaWYgKGNvb3JkLT5iZXR3ZWVuICE9IEFUX1VOSVQpCisJCXJldHVybiAxOworCWlmICgh
Y29vcmRfaXNfZXhpc3RpbmdfdW5pdChjb29yZCkpCisJCXJldHVybiAwOworCWlmIChpdGVtX2lz
X2V4dGVudChjb29yZCkpCisJCXJldHVybiAxOworCWlmIChpdGVtX2lzX2N0YWlsKGNvb3JkKSkK
KwkJcmV0dXJuIGtleWdlKGtfXywgdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZ1a2V5KSk7CisJ
cmV0dXJuIGtleWVxKGtfXywgdW5pdF9rZXlfYnlfY29vcmQoY29vcmQsICZ1a2V5KSk7Cit9Cisj
ZW5kaWYKKworLyogdGhpcyBpcyB1c2VkIGJ5IHJlaXNlcjRfc2VhbF92YWxpZGF0ZS4gSXQgYWNj
ZXB0cyByZXR1cm4gdmFsdWUgb2YKKyAqIGxvbmd0ZXJtX2xvY2tfem5vZGUgYW5kIHJldHVybnMg
MSBpZiBpdCBjYW4gYmUgaW50ZXJwcmV0ZWQgYXMgc2VhbAorICogdmFsaWRhdGlvbiBmYWlsdXJl
LiBGb3IgaW5zdGFuY2UsIHdoZW4gbG9uZ3Rlcm1fbG9ja196bm9kZSByZXR1cm5zIC1FSU5WQUws
CisgKiByZWlzZXI0X3NlYWxfdmFsaWRhdGUgcmV0dXJucyAtRV9SRVBFQVQgYW5kIGNhbGxlciB3
aWxsIGNhbGwgdHJlIHNlYXJjaC4KKyAqIFdlIGNhbm5vdCBkbyB0aGlzIGluIGxvbmd0ZXJtX2xv
Y2tfem5vZGUoKSwgYmVjYXVzZSBzb21ldGltZXMgd2Ugd2FudCB0bworICogZGlzdGluZ3Vpc2gg
YmV0d2VlbiAtRUlOVkFMIGFuZCAtRV9SRVBFQVQuICovCitzdGF0aWMgaW50IHNob3VsZF9yZXBl
YXQoaW50IHJldHVybl9jb2RlKQoreworCXJldHVybiByZXR1cm5fY29kZSA9PSAtRUlOVkFMOwor
fQorCisvKiAocmUtKXZhbGlkYXRlIHNlYWwuCisKKyAgIENoZWNrcyB3aGV0aGVyIHNlYWwgaXMg
cHJpc3RpbmUsIGFuZCB0cnkgdG8gcmV2YWxpZGF0ZSBpdCBpZiBwb3NzaWJsZS4KKworICAgSWYg
c2VhbCB3YXMgYnVybmVkLCBvciBicm9rZW4gaXJyZXBhcmFibHksIHJldHVybiAtRV9SRVBFQVQu
CisKKyAgIE5PVEUtTklLSVRBIGN1cnJlbnRseSByZWlzZXI0X3NlYWxfdmFsaWRhdGUoKSByZXR1
cm5zIC1FX1JFUEVBVCBpZiBrZXkgd2UgYXJlCisgICBsb29raW5nIGZvciBpcyBpbiByYW5nZSBv
ZiBrZXlzIGNvdmVyZWQgYnkgdGhlIHNlYWxlZCBub2RlLCBidXQgaXRlbSB3YXNuJ3QKKyAgIGZv
dW5kIGJ5IG5vZGUgLT5sb29rdXAoKSBtZXRob2QuIEFsdGVybmF0aXZlIGlzIHRvIHJldHVybiAt
RU5PRU5UIGluIHRoaXMKKyAgIGNhc2UsIGJ1dCB0aGlzIHdvdWxkIGNvbXBsaWNhdGUgY2FsbGVy
cyBsb2dpYy4KKworKi8KK2ludCByZWlzZXI0X3NlYWxfdmFsaWRhdGUoc2VhbF90ICpzZWFsIC8q
IHNlYWwgdG8gdmFsaWRhdGUgKi8sCisJCQkgIGNvb3JkX3QgKmNvb3JkIC8qIGNvb3JkIHRvIHZh
bGlkYXRlIGFnYWluc3QgKi8sCisJCQkgIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSB0
byB2YWxpZGF0ZSBhZ2FpbnN0ICovLAorCQkJICBsb2NrX2hhbmRsZSAqIGxoIC8qIHJlc3VsdGlu
ZyBsb2NrIGhhbmRsZSAqLywKKwkJCSAgem5vZGVfbG9ja19tb2RlIG1vZGUgLyogbG9jayBub2Rl
ICovLAorCQkJICB6bm9kZV9sb2NrX3JlcXVlc3QgcmVxdWVzdC8qIGxvY2tpbmcgcHJpb3JpdHkg
Ki8pCit7CisJem5vZGUgKm5vZGU7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTE4
ODkiLCBzZWFsICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE4ODEiLCByZWlzZXI0X3NlYWxf
aXNfc2V0KHNlYWwpKTsKKwlhc3NlcnQoIm5pa2l0YS0xODgyIiwga2V5ICE9IE5VTEwpOworCWFz
c2VydCgibmlraXRhLTE4ODMiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xODg0
IiwgbGggIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTg4NSIsIGtleWVxKCZzZWFsLT5rZXks
IGtleSkpOworCWFzc2VydCgibmlraXRhLTE5ODkiLCBjb29yZHNfZXF1YWwoJnNlYWwtPmNvb3Jk
MSwgY29vcmQpKTsKKworCS8qIG9idGFpbiB6bm9kZSBieSBibG9jayBudW1iZXIgKi8KKwlub2Rl
ID0gc2VhbF9ub2RlKHNlYWwpOworCWlmICghbm9kZSkKKwkJLyogem5vZGUgd2Fzbid0IGluIGNh
Y2hlICovCisJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwkvKiB6bm9kZSB3YXMgaW4gY2Fj
aGUsIGxvY2sgaXQgKi8KKwlyZXN1bHQgPSBsb25ndGVybV9sb2NrX3pub2RlKGxoLCBub2RlLCBt
b2RlLCByZXF1ZXN0KTsKKwl6cHV0KG5vZGUpOworCWlmIChyZXN1bHQgPT0gMCkgeworCQlpZiAo
c2VhbF9tYXRjaGVzKHNlYWwsIG5vZGUpKSB7CisJCQkvKiBpZiBzZWFsIHZlcnNpb24gYW5kIHpu
b2RlIHZlcnNpb24KKwkJCSAgIGNvaW5jaWRlICovCisJCQlPTl9ERUJVRyhjb29yZF91cGRhdGVf
dihjb29yZCkpOworCQkJYXNzZXJ0KCJuaWtpdGEtMTk5MCIsCisJCQkgICAgICAgbm9kZSA9PSBz
ZWFsLT5jb29yZDEubm9kZSk7CisJCQlhc3NlcnQoIm5pa2l0YS0xODk4IiwKKwkJCSAgICAgICBX
SVRIX0RBVEFfUkVUKGNvb3JkLT5ub2RlLCAxLAorCQkJCQkgICAgIGNoZWNrX3NlYWxfbWF0Y2go
Y29vcmQsCisJCQkJCQkJICAgICAga2V5KSkpOworCQl9IGVsc2UKKwkJCXJlc3VsdCA9IFJFVEVS
UigtRV9SRVBFQVQpOworCX0KKwlpZiAocmVzdWx0ICE9IDApIHsKKwkJaWYgKHNob3VsZF9yZXBl
YXQocmVzdWx0KSkKKwkJCXJlc3VsdCA9IFJFVEVSUigtRV9SRVBFQVQpOworCQkvKiB1bmxvY2sg
bm9kZSBvbiBmYWlsdXJlICovCisJCWRvbmVfbGgobGgpOworCX0KKwlyZXR1cm4gcmVzdWx0Owor
fQorCisvKiBoZWxwZXJzIGZ1bmN0aW9ucyAqLworCisvKiBvYnRhaW4gcmVmZXJlbmNlIHRvIHpu
b2RlIHNlYWwgcG9pbnRzIHRvLCBpZiBpbiBjYWNoZSAqLworc3RhdGljIHpub2RlICpzZWFsX25v
ZGUoY29uc3Qgc2VhbF90ICpzZWFsLyogc2VhbCB0byBxdWVyeSAqLykKK3sKKwlhc3NlcnQoIm5p
a2l0YS0xODkxIiwgc2VhbCAhPSBOVUxMKTsKKwlyZXR1cm4gemxvb2soY3VycmVudF90cmVlLCAm
c2VhbC0+YmxvY2spOworfQorCisvKiB0cnVlIGlmIEBzZWFsIHZlcnNpb24gYW5kIEBub2RlIHZl
cnNpb24gY29pbmNpZGUgKi8KK3N0YXRpYyBpbnQgc2VhbF9tYXRjaGVzKGNvbnN0IHNlYWxfdCAq
c2VhbCAvKiBzZWFsIHRvIGNoZWNrICovICwKKwkJCXpub2RlICogbm9kZS8qIG5vZGUgdG8gY2hl
Y2sgKi8pCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTE5OTEiLCBzZWFsICE9
IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE5OTMiLCBub2RlICE9IE5VTEwpOworCisJc3Bpbl9s
b2NrX3pub2RlKG5vZGUpOworCXJlc3VsdCA9IChzZWFsLT52ZXJzaW9uID09IG5vZGUtPnZlcnNp
b24pOworCXNwaW5fdW5sb2NrX3pub2RlKG5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8q
IE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9u
LXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAor
ICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQor
ICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9zZWFsLmggbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvc2VhbC5oCi0tLSBsaW51
eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3NlYWwuaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAw
MDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvc2VhbC5oCTIwMjAtMDItMDUg
MjA6NTM6NDEuNDgwMjIyMzg4ICswMTAwCkBAIC0wLDAgKzEsNDkgQEAKKy8qIENvcHlyaWdodCAy
MDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkgcmVpc2VyNC9S
RUFETUUgKi8KKworLyogRGVjbGFyYXRpb24gb2Ygc2VhbHM6ICJ3ZWFrIiB0cmVlIHBvaW50ZXJz
LiBTZWUgc2VhbC5jIGZvciBjb21tZW50cy4gKi8KKworI2lmbmRlZiBfX1NFQUxfSF9fCisjZGVm
aW5lIF9fU0VBTF9IX18KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1Zy5o
IgorI2luY2x1ZGUgImRmb3JtYXQuaCIKKyNpbmNsdWRlICJrZXkuaCIKKyNpbmNsdWRlICJjb29y
ZC5oIgorCisvKiBmb3IgX191Pz8gdHlwZXMgKi8KKy8qI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+
Ki8KKworLyogc2VhbC4gU2VlIGNvbW1lbnQgYXQgdGhlIHRvcCBvZiBzZWFsLmMgKi8KK3R5cGVk
ZWYgc3RydWN0IHNlYWxfcyB7CisJLyogdmVyc2lvbiBvZiB6bm9kZSByZWNvcmRlciBhdCB0aGUg
dGltZSBvZiBzZWFsIGNyZWF0aW9uICovCisJX191NjQgdmVyc2lvbjsKKwkvKiBibG9jayBudW1i
ZXIgb2Ygem5vZGUgYXR0YWNoZWQgdG8gdGhpcyBzZWFsICovCisJcmVpc2VyNF9ibG9ja19uciBi
bG9jazsKKyNpZiBSRUlTRVI0X0RFQlVHCisJLyogY29vcmQgdGhpcyBzZWFsIGlzIGF0dGFjaGVk
IHRvLiBGb3IgZGVidWdnaW5nLiAqLworCWNvb3JkX3QgY29vcmQxOworCS8qIGtleSB0aGlzIHNl
YWwgaXMgYXR0YWNoZWQgdG8uIEZvciBkZWJ1Z2dpbmcuICovCisJcmVpc2VyNF9rZXkga2V5Owor
I2VuZGlmCit9IHNlYWxfdDsKKworZXh0ZXJuIHZvaWQgcmVpc2VyNF9zZWFsX2luaXQoc2VhbF90
ICosIGNvbnN0IGNvb3JkX3QgKiwgY29uc3QgcmVpc2VyNF9rZXkgKik7CitleHRlcm4gdm9pZCBy
ZWlzZXI0X3NlYWxfZG9uZShzZWFsX3QgKik7CitleHRlcm4gaW50IHJlaXNlcjRfc2VhbF9pc19z
ZXQoY29uc3Qgc2VhbF90ICopOworZXh0ZXJuIGludCByZWlzZXI0X3NlYWxfdmFsaWRhdGUoc2Vh
bF90ICosIGNvb3JkX3QgKiwKKwkJCSBjb25zdCByZWlzZXI0X2tleSAqLCBsb2NrX2hhbmRsZSAq
ICwKKwkJCSB6bm9kZV9sb2NrX21vZGUgbW9kZSwgem5vZGVfbG9ja19yZXF1ZXN0IHJlcXVlc3Qp
OworCisvKiBfX1NFQUxfSF9fICovCisjZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAg
IExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2Rl
LW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZp
bGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxp
bnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc2VhcmNoLmMgbGludXgtNS40LjE3L2ZzL3JlaXNl
cjQvc2VhcmNoLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc2VhcmNoLmMJMTk3
MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlz
ZXI0L3NlYXJjaC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDgxMjIyMzk1ICswMTAwCkBAIC0wLDAg
KzEsMTYxMiBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIs
IGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworI2luY2x1ZGUg
ImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUgImRmb3JtYXQuaCIKKyNp
bmNsdWRlICJrZXkuaCIKKyNpbmNsdWRlICJjb29yZC5oIgorI2luY2x1ZGUgInNlYWwuaCIKKyNp
bmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAicGx1Z2luL25vZGUvbm9kZS5o
IgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW4uaCIKKyNpbmNsdWRlICJqbm9kZS5oIgorI2luY2x1
ZGUgInpub2RlLmgiCisjaW5jbHVkZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0cmVlX3dh
bGsuaCIKKyNpbmNsdWRlICJ0cmVlLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgorI2luY2x1ZGUg
InN1cGVyLmgiCisjaW5jbHVkZSAiaW5vZGUuaCIKKworI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4K
Kworc3RhdGljIGNvbnN0IGNoYXIgKmJpYXNfbmFtZShsb29rdXBfYmlhcyBiaWFzKTsKKworLyog
dHJlZSBzZWFyY2hpbmcgYWxnb3JpdGhtLCBpbnRyYW5vZGUgc2VhcmNoaW5nIGFsZ29yaXRobXMg
YXJlIGluCisgICBwbHVnaW4vbm9kZS8gKi8KKworLyogdHJlZSBsb29rdXAgY2FjaGUKKyAqCisg
KiBUaGUgY29vcmQgYnkga2V5IGNhY2hlIGNvbnNpc3RzIG9mIHNtYWxsIGxpc3Qgb2YgcmVjZW50
bHkgYWNjZXNzZWQgbm9kZXMKKyAqIG1haW50YWluZWQgYWNjb3JkaW5nIHRvIHRoZSBMUlUgZGlz
Y2lwbGluZS4gQmVmb3JlIGRvaW5nIHJlYWwgdG9wLXRvLWRvd24KKyAqIHRyZWUgdHJhdmVyc2Fs
IHRoaXMgY2FjaGUgaXMgc2Nhbm5lZCBmb3Igbm9kZXMgdGhhdCBjYW4gY29udGFpbiBrZXkKKyAq
IHJlcXVlc3RlZC4KKyAqCisgKiBUaGUgZWZmaWNpZW5jeSBvZiBjb29yZCBjYWNoZSBkZXBlbmRz
IGhlYXZpbHkgb24gbG9jYWxpdHkgb2YgcmVmZXJlbmNlIGZvcgorICogdHJlZSBhY2Nlc3Nlcy4g
T3VyIHVzZXIgbGV2ZWwgc2ltdWxhdGlvbnMgc2hvdyByZWFzb25hYmx5IGdvb2QgaGl0IHJhdGlv
cworICogZm9yIGNvb3JkIGNhY2hlIHVuZGVyIG1vc3QgbG9hZHMgc28gZmFyLgorICovCisKKy8q
IEluaXRpYWxpc2UgY29vcmQgY2FjaGUgc2xvdCAqLworc3RhdGljIHZvaWQgY2JrX2NhY2hlX2lu
aXRfc2xvdChjYmtfY2FjaGVfc2xvdCAqc2xvdCkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zNDUiLCBz
bG90ICE9IE5VTEwpOworCisJSU5JVF9MSVNUX0hFQUQoJnNsb3QtPmxydSk7CisJc2xvdC0+bm9k
ZSA9IE5VTEw7Cit9CisKKy8qIEluaXRpYWxpemUgY29vcmQgY2FjaGUgKi8KK2ludCBjYmtfY2Fj
aGVfaW5pdChjYmtfY2FjaGUgKiBjYWNoZS8qIGNhY2hlIHRvIGluaXQgKi8pCit7CisJaW50IGk7
CisKKwlhc3NlcnQoIm5pa2l0YS0zNDYiLCBjYWNoZSAhPSBOVUxMKTsKKworCWNhY2hlLT5zbG90
ID0KKwkJa21hbGxvYyhzaXplb2YoY2JrX2NhY2hlX3Nsb3QpICogY2FjaGUtPm5yX3Nsb3RzLAor
CQkJcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCWlmIChjYWNoZS0+c2xvdCA9PSBOVUxM
KQorCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJSU5JVF9MSVNUX0hFQUQoJmNhY2hlLT5s
cnUpOworCWZvciAoaSA9IDA7IGkgPCBjYWNoZS0+bnJfc2xvdHM7ICsraSkgeworCQljYmtfY2Fj
aGVfaW5pdF9zbG90KGNhY2hlLT5zbG90ICsgaSk7CisJCWxpc3RfYWRkX3RhaWwoJigoY2FjaGUt
PnNsb3QgKyBpKS0+bHJ1KSwgJmNhY2hlLT5scnUpOworCX0KKwlyd2xvY2tfaW5pdCgmY2FjaGUt
Pmd1YXJkKTsKKwlyZXR1cm4gMDsKK30KKworLyogZnJlZSBjYmsgY2FjaGUgZGF0YSAqLwordm9p
ZCBjYmtfY2FjaGVfZG9uZShjYmtfY2FjaGUgKiBjYWNoZS8qIGNhY2hlIHRvIHJlbGVhc2UgKi8p
Cit7CisJYXNzZXJ0KCJuaWtpdGEtMjQ5MyIsIGNhY2hlICE9IE5VTEwpOworCWlmIChjYWNoZS0+
c2xvdCAhPSBOVUxMKSB7CisJCWtmcmVlKGNhY2hlLT5zbG90KTsKKwkJY2FjaGUtPnNsb3QgPSBO
VUxMOworCX0KK30KKworLyogbWFjcm8gdG8gaXRlcmF0ZSBvdmVyIGFsbCBjYmsgY2FjaGUgc2xv
dHMgKi8KKyNkZWZpbmUgZm9yX2FsbF9zbG90cyhjYWNoZSwgc2xvdCkJCQkJCSAgXAorCWZvciAo
KHNsb3QpID0gbGlzdF9lbnRyeSgoY2FjaGUpLT5scnUubmV4dCwgY2JrX2NhY2hlX3Nsb3QsIGxy
dSk7IFwKKwkgICAgICYoY2FjaGUpLT5scnUgIT0gJihzbG90KS0+bHJ1OwkJCQkgIFwKKwkgICAg
IChzbG90KSA9IGxpc3RfZW50cnkoc2xvdC0+bHJ1Lm5leHQsIGNia19jYWNoZV9zbG90LCBscnUp
KQorCisjaWYgUkVJU0VSNF9ERUJVRworLyogdGhpcyBmdW5jdGlvbiBhc3N1cmVzIHRoYXQgW2Ni
ay1jYWNoZS1pbnZhcmlhbnRdIGludmFyaWFudCBob2xkcyAqLworc3RhdGljIGludCBjYmtfY2Fj
aGVfaW52YXJpYW50KGNvbnN0IGNia19jYWNoZSAqIGNhY2hlKQoreworCWNia19jYWNoZV9zbG90
ICpzbG90OworCWludCByZXN1bHQ7CisJaW50IHVudXNlZDsKKworCWlmIChjYWNoZS0+bnJfc2xv
dHMgPT0gMCkKKwkJcmV0dXJuIDE7CisKKwlhc3NlcnQoIm5pa2l0YS0yNDY5IiwgY2FjaGUgIT0g
TlVMTCk7CisJdW51c2VkID0gMDsKKwlyZXN1bHQgPSAxOworCXJlYWRfbG9jaygmKChjYmtfY2Fj
aGUgKiljYWNoZSktPmd1YXJkKTsKKwlmb3JfYWxsX3Nsb3RzKGNhY2hlLCBzbG90KSB7CisJCS8q
IGluIExSVSBmaXJzdCBnbyBhbGwgYHVzZWQnIHNsb3RzIGZvbGxvd2VkIGJ5IGB1bnVzZWQnICov
CisJCWlmICh1bnVzZWQgJiYgKHNsb3QtPm5vZGUgIT0gTlVMTCkpCisJCQlyZXN1bHQgPSAwOwor
CQlpZiAoc2xvdC0+bm9kZSA9PSBOVUxMKQorCQkJdW51c2VkID0gMTsKKwkJZWxzZSB7CisJCQlj
YmtfY2FjaGVfc2xvdCAqc2NhbjsKKworCQkJLyogYWxsIGNhY2hlZCBub2RlcyBhcmUgZGlmZmVy
ZW50ICovCisJCQlzY2FuID0gc2xvdDsKKwkJCXdoaWxlIChyZXN1bHQpIHsKKwkJCQlzY2FuID0g
bGlzdF9lbnRyeShzY2FuLT5scnUubmV4dCwKKwkJCQkJCSAgY2JrX2NhY2hlX3Nsb3QsIGxydSk7
CisJCQkJaWYgKCZjYWNoZS0+bHJ1ID09ICZzY2FuLT5scnUpCisJCQkJCWJyZWFrOworCQkJCWlm
IChzbG90LT5ub2RlID09IHNjYW4tPm5vZGUpCisJCQkJCXJlc3VsdCA9IDA7CisJCQl9CisJCX0K
KwkJaWYgKCFyZXN1bHQpCisJCQlicmVhazsKKwl9CisJcmVhZF91bmxvY2soJigoY2JrX2NhY2hl
ICopY2FjaGUpLT5ndWFyZCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworI2VuZGlmCisKKy8qIFJl
bW92ZSByZWZlcmVuY2VzLCBpZiBhbnksIHRvIEBub2RlIGZyb20gY29vcmQgY2FjaGUgKi8KK3Zv
aWQgY2JrX2NhY2hlX2ludmFsaWRhdGUoY29uc3Qgem5vZGUgKiBub2RlIC8qIG5vZGUgdG8gcmVt
b3ZlIGZyb20gY2FjaGUgKi8gLAorCQkJICByZWlzZXI0X3RyZWUgKiB0cmVlLyogdHJlZSB0byBy
ZW1vdmUgbm9kZSBmcm9tICovKQoreworCWNia19jYWNoZV9zbG90ICpzbG90OworCWNia19jYWNo
ZSAqY2FjaGU7CisJaW50IGk7CisKKwlhc3NlcnQoIm5pa2l0YS0zNTAiLCBub2RlICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTE0NzkiLCBMT0NLX0NOVF9HVFoocndfbG9ja2VkX3RyZWUpKTsK
KworCWNhY2hlID0gJnRyZWUtPmNia19jYWNoZTsKKwlhc3NlcnQoIm5pa2l0YS0yNDcwIiwgY2Jr
X2NhY2hlX2ludmFyaWFudChjYWNoZSkpOworCisJd3JpdGVfbG9jaygmKGNhY2hlLT5ndWFyZCkp
OworCWZvciAoaSA9IDAsIHNsb3QgPSBjYWNoZS0+c2xvdDsgaSA8IGNhY2hlLT5ucl9zbG90czsg
KytpLCArK3Nsb3QpIHsKKwkJaWYgKHNsb3QtPm5vZGUgPT0gbm9kZSkgeworCQkJbGlzdF9tb3Zl
X3RhaWwoJnNsb3QtPmxydSwgJmNhY2hlLT5scnUpOworCQkJc2xvdC0+bm9kZSA9IE5VTEw7CisJ
CQlicmVhazsKKwkJfQorCX0KKwl3cml0ZV91bmxvY2soJihjYWNoZS0+Z3VhcmQpKTsKKwlhc3Nl
cnQoIm5pa2l0YS0yNDcxIiwgY2JrX2NhY2hlX2ludmFyaWFudChjYWNoZSkpOworfQorCisvKiBh
ZGQgdG8gdGhlIGNiay1jYWNoZSBpbiB0aGUgInRyZWUiIGluZm9ybWF0aW9uIGFib3V0ICJub2Rl
Ii4gVGhpcworICAgIGNhbiBhY3R1YWxseSBiZSB1cGRhdGUgb2YgZXhpc3Rpbmcgc2xvdCBpbiBh
IGNhY2hlLiAqLworc3RhdGljIHZvaWQgY2JrX2NhY2hlX2FkZChjb25zdCB6bm9kZSAqIG5vZGUv
KiBub2RlIHRvIGFkZCB0byB0aGUgY2FjaGUgKi8pCit7CisJY2JrX2NhY2hlICpjYWNoZTsKKwor
CWNia19jYWNoZV9zbG90ICpzbG90OworCWludCBpOworCisJYXNzZXJ0KCJuaWtpdGEtMzUyIiwg
bm9kZSAhPSBOVUxMKTsKKworCWNhY2hlID0gJnpub2RlX2dldF90cmVlKG5vZGUpLT5jYmtfY2Fj
aGU7CisJYXNzZXJ0KCJuaWtpdGEtMjQ3MiIsIGNia19jYWNoZV9pbnZhcmlhbnQoY2FjaGUpKTsK
KworCWlmIChjYWNoZS0+bnJfc2xvdHMgPT0gMCkKKwkJcmV0dXJuOworCisJd3JpdGVfbG9jaygm
KGNhY2hlLT5ndWFyZCkpOworCS8qIGZpbmQgc2xvdCB0byB1cGRhdGUvYWRkICovCisJZm9yIChp
ID0gMCwgc2xvdCA9IGNhY2hlLT5zbG90OyBpIDwgY2FjaGUtPm5yX3Nsb3RzOyArK2ksICsrc2xv
dCkgeworCQkvKiBvb3BzLCB0aGlzIG5vZGUgaXMgYWxyZWFkeSBpbiBhIGNhY2hlICovCisJCWlm
IChzbG90LT5ub2RlID09IG5vZGUpCisJCQlicmVhazsKKwl9CisJLyogaWYgYWxsIHNsb3RzIGFy
ZSB1c2VkLCByZXVzZSBsZWFzdCByZWNlbnRseSB1c2VkIG9uZSAqLworCWlmIChpID09IGNhY2hl
LT5ucl9zbG90cykgeworCQlzbG90ID0gbGlzdF9lbnRyeShjYWNoZS0+bHJ1LnByZXYsIGNia19j
YWNoZV9zbG90LCBscnUpOworCQlzbG90LT5ub2RlID0gKHpub2RlICopIG5vZGU7CisJfQorCWxp
c3RfbW92ZSgmc2xvdC0+bHJ1LCAmY2FjaGUtPmxydSk7CisJd3JpdGVfdW5sb2NrKCYoY2FjaGUt
Pmd1YXJkKSk7CisJYXNzZXJ0KCJuaWtpdGEtMjQ3MyIsIGNia19jYWNoZV9pbnZhcmlhbnQoY2Fj
aGUpKTsKK30KKworc3RhdGljIGludCBzZXR1cF9kZWxpbWl0aW5nX2tleXMoY2JrX2hhbmRsZSAq
IGgpOworc3RhdGljIGxvb2t1cF9yZXN1bHQgY29vcmRfYnlfaGFuZGxlKGNia19oYW5kbGUgKiBo
YW5kbGUpOworc3RhdGljIGxvb2t1cF9yZXN1bHQgdHJhdmVyc2VfdHJlZShjYmtfaGFuZGxlICog
aCk7CitzdGF0aWMgaW50IGNia19jYWNoZV9zZWFyY2goY2JrX2hhbmRsZSAqIGgpOworCitzdGF0
aWMgbGV2ZWxfbG9va3VwX3Jlc3VsdCBjYmtfbGV2ZWxfbG9va3VwKGNia19oYW5kbGUgKiBoKTsK
K3N0YXRpYyBsZXZlbF9sb29rdXBfcmVzdWx0IGNia19ub2RlX2xvb2t1cChjYmtfaGFuZGxlICog
aCk7CisKKy8qIGhlbHBlciBmdW5jdGlvbnMgKi8KKworc3RhdGljIHZvaWQgdXBkYXRlX3N0YWxl
X2RrKHJlaXNlcjRfdHJlZSAqIHRyZWUsIHpub2RlICogbm9kZSk7CisKKy8qIHJlbGVhc2UgcGFy
ZW50IG5vZGUgZHVyaW5nIHRyYXZlcnNhbCAqLworc3RhdGljIHZvaWQgcHV0X3BhcmVudChjYmtf
aGFuZGxlICogaCk7CisvKiBjaGVjayBjb25zaXN0ZW5jeSBvZiBmaWVsZHMgKi8KK3N0YXRpYyBp
bnQgc2FuaXR5X2NoZWNrKGNia19oYW5kbGUgKiBoKTsKKy8qIHJlbGVhc2UgcmVzb3VyY2VzIGlu
IGhhbmRsZSAqLworc3RhdGljIHZvaWQgaHB1dChjYmtfaGFuZGxlICogaCk7CisKK3N0YXRpYyBs
ZXZlbF9sb29rdXBfcmVzdWx0IHNlYXJjaF90b19sZWZ0KGNia19oYW5kbGUgKiBoKTsKKworLyog
cGFjayBudW1lcm91cyAobnVtYmVyb3VzIEkgc2hvdWxkIHNheSkgYXJndW1lbnRzIG9mIGNvb3Jk
X2J5X2tleSgpIGludG8KKyAqIGNia19oYW5kbGUgKi8KK3N0YXRpYyBjYmtfaGFuZGxlICpjYmtf
cGFjayhjYmtfaGFuZGxlICogaGFuZGxlLAorCQkJICAgIHJlaXNlcjRfdHJlZSAqIHRyZWUsCisJ
CQkgICAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCQkgICAgY29vcmRfdCAqY29vcmQsCisJ
CQkgICAgbG9ja19oYW5kbGUgKiBhY3RpdmVfbGgsCisJCQkgICAgbG9ja19oYW5kbGUgKiBwYXJl
bnRfbGgsCisJCQkgICAgem5vZGVfbG9ja19tb2RlIGxvY2tfbW9kZSwKKwkJCSAgICBsb29rdXBf
YmlhcyBiaWFzLAorCQkJICAgIHRyZWVfbGV2ZWwgbG9ja19sZXZlbCwKKwkJCSAgICB0cmVlX2xl
dmVsIHN0b3BfbGV2ZWwsCisJCQkgICAgX191MzIgZmxhZ3MsIHJhX2luZm9fdCAqaW5mbykKK3sK
KwltZW1zZXQoaGFuZGxlLCAwLCBzaXplb2YgKmhhbmRsZSk7CisKKwloYW5kbGUtPnRyZWUgPSB0
cmVlOworCWhhbmRsZS0+a2V5ID0ga2V5OworCWhhbmRsZS0+bG9ja19tb2RlID0gbG9ja19tb2Rl
OworCWhhbmRsZS0+YmlhcyA9IGJpYXM7CisJaGFuZGxlLT5sb2NrX2xldmVsID0gbG9ja19sZXZl
bDsKKwloYW5kbGUtPnN0b3BfbGV2ZWwgPSBzdG9wX2xldmVsOworCWhhbmRsZS0+Y29vcmQgPSBj
b29yZDsKKwkvKiBzZXQgZmxhZ3MuIFNlZSBjb21tZW50IGluIHRyZWUuaDpjYmtfZmxhZ3MgKi8K
KwloYW5kbGUtPmZsYWdzID0gZmxhZ3MgfCBDQktfVFJVU1RfREsgfCBDQktfVVNFX0NSQUJMT0NL
OworCisJaGFuZGxlLT5hY3RpdmVfbGggPSBhY3RpdmVfbGg7CisJaGFuZGxlLT5wYXJlbnRfbGgg
PSBwYXJlbnRfbGg7CisJaGFuZGxlLT5yYV9pbmZvID0gaW5mbzsKKwlyZXR1cm4gaGFuZGxlOwor
fQorCisvKiBtYWluIHRyZWUgbG9va3VwIHByb2NlZHVyZQorCisgICBDaGVjayBjb29yZCBjYWNo
ZS4gSWYga2V5IHdlIGFyZSBsb29raW5nIGZvciBpcyBub3QgZm91bmQgdGhlcmUsIGNhbGwgY2Jr
KCkKKyAgIHRvIGRvIHJlYWwgdHJlZSB0cmF2ZXJzYWwuCisKKyAgIEFzIHdlIGhhdmUgZXh0ZW50
cyBvbiB0aGUgdHdpZyBsZXZlbCwgQGxvY2tfbGV2ZWwgYW5kIEBzdG9wX2xldmVsIGNhbgorICAg
YmUgZGlmZmVyZW50IGZyb20gTEVBRl9MRVZFTCBhbmQgZWFjaCBvdGhlci4KKworICAgVGhyZWFk
IGNhbm5vdCBrZWVwIGFueSByZWlzZXI0IGxvY2tzICh0cmVlLCB6bm9kZSwgZGsgc3Bpbi1sb2Nr
cywgb3Igem5vZGUKKyAgIGxvbmcgdGVybSBsb2Nrcykgd2hpbGUgY2FsbGluZyB0aGlzLgorKi8K
K2xvb2t1cF9yZXN1bHQgY29vcmRfYnlfa2V5KHJlaXNlcjRfdHJlZSAqIHRyZWUJLyogdHJlZSB0
byBwZXJmb3JtIHNlYXJjaAorCQkJCQkJICogaW4uIFVzdWFsbHkgdGhpcyB0cmVlIGlzCisJCQkJ
CQkgKiBwYXJ0IG9mIGZpbGUtc3lzdGVtCisJCQkJCQkgKiBzdXBlci1ibG9jayAqLyAsCisJCQkg
ICBjb25zdCByZWlzZXI0X2tleSAqIGtleSAvKiBrZXkgdG8gbG9vayBmb3IgKi8gLAorCQkJICAg
Y29vcmRfdCAqY29vcmQJLyogd2hlcmUgdG8gc3RvcmUgZm91bmQKKwkJCQkJCSAqIHBvc2l0aW9u
IGluIGEgdHJlZS4gRmllbGRzCisJCQkJCQkgKiBpbiAiY29vcmQiIGFyZSBvbmx5IHZhbGlkIGlm
CisJCQkJCQkgKiBjb29yZF9ieV9rZXkoKSByZXR1cm5lZAorCQkJCQkJICogIkNCS19DT09SRF9G
T1VORCIgKi8gLAorCQkJICAgbG9ja19oYW5kbGUgKiBsaCwJLyogcmVzdWx0aW5nIGxvY2sgaGFu
ZGxlICovCisJCQkgICB6bm9kZV9sb2NrX21vZGUgbG9ja19tb2RlCS8qIHR5cGUgb2YgbG9va3Vw
IHdlCisJCQkJCQkJICogd2FudCBvbiBub2RlLiBQYXNzCisJCQkJCQkJICogWk5PREVfUkVBRF9M
T0NLIGhlcmUKKwkJCQkJCQkgKiBpZiB5b3Ugb25seSB3YW50IHRvCisJCQkJCQkJICogcmVhZCBp
dGVtIGZvdW5kIGFuZAorCQkJCQkJCSAqIFpOT0RFX1dSSVRFX0xPQ0sgaWYKKwkJCQkJCQkgKiB5
b3Ugd2FudCB0byBtb2RpZnkKKwkJCQkJCQkgKiBpdCAqLyAsCisJCQkgICBsb29rdXBfYmlhcyBi
aWFzCS8qIHdoYXQgdG8gcmV0dXJuIGlmIGNvb3JkCisJCQkJCQkgKiB3aXRoIGV4YWN0bHkgdGhl
IEBrZXkgaXMKKwkJCQkJCSAqIG5vdCBpbiB0aGUgdHJlZSAqLyAsCisJCQkgICB0cmVlX2xldmVs
IGxvY2tfbGV2ZWwvKiB0cmVlIGxldmVsIHdoZXJlIHRvIHN0YXJ0CisJCQkJCQkgKiB0YWtpbmcg
QGxvY2sgdHlwZSBvZgorCQkJCQkJICogbG9ja3MgKi8gLAorCQkJICAgdHJlZV9sZXZlbCBzdG9w
X2xldmVsLyogdHJlZSBsZXZlbCB0byBzdG9wLiBQYXNzCisJCQkJCQkgKiBMRUFGX0xFVkVMIG9y
IFRXSUdfTEVWRUwKKwkJCQkJCSAqIGhlcmUgSXRlbSBiZWluZyBsb29rZWQKKwkJCQkJCSAqIGZv
ciBoYXMgdG8gYmUgYmV0d2VlbgorCQkJCQkJICogQGxvY2tfbGV2ZWwgYW5kCisJCQkJCQkgKiBA
c3RvcF9sZXZlbCwgaW5jbHVzaXZlICovICwKKwkJCSAgIF9fdTMyIGZsYWdzIC8qIHNlYXJjaCBm
bGFncyAqLyAsCisJCQkgICByYV9pbmZvX3QgKgorCQkJICAgaW5mbworCQkJICAgLyogaW5mb3Jt
YXRpb24gYWJvdXQgZGVzaXJlZCB0cmVlIHRyYXZlcnNhbAorCQkJICAgICogcmVhZGFoZWFkICov
CisJCQkgICApCit7CisJY2JrX2hhbmRsZSBoYW5kbGU7CisJbG9ja19oYW5kbGUgcGFyZW50X2xo
OworCWxvb2t1cF9yZXN1bHQgcmVzdWx0OworCisJaW5pdF9saChsaCk7CisJaW5pdF9saCgmcGFy
ZW50X2xoKTsKKworCWFzc2VydCgibmlraXRhLTMwMjMiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkp
OworCisJYXNzZXJ0KCJuaWtpdGEtMzUzIiwgdHJlZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0zNTQiLCBrZXkgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzU1IiwgY29vcmQgIT0gTlVM
TCk7CisJYXNzZXJ0KCJuaWtpdGEtMzU2IiwgKGJpYXMgPT0gRklORF9FWEFDVCkKKwkgICAgICAg
fHwgKGJpYXMgPT0gRklORF9NQVhfTk9UX01PUkVfVEhBTikpOworCWFzc2VydCgibmlraXRhLTM1
NyIsIHN0b3BfbGV2ZWwgPj0gTEVBRl9MRVZFTCk7CisJLyogbm8gbG9ja3MgY2FuIGJlIGhlbGQg
ZHVyaW5nIHRyZWUgdHJhdmVyc2FsICovCisJYXNzZXJ0KCJuaWtpdGEtMjEwNCIsIGxvY2tfc3Rh
Y2tfaXNjbGVhbihnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKworCWNia19wYWNrKCZoYW5k
bGUsCisJCSB0cmVlLAorCQkga2V5LAorCQkgY29vcmQsCisJCSBsaCwKKwkJICZwYXJlbnRfbGgs
CisJCSBsb2NrX21vZGUsIGJpYXMsIGxvY2tfbGV2ZWwsIHN0b3BfbGV2ZWwsIGZsYWdzLCBpbmZv
KTsKKworCXJlc3VsdCA9IGNvb3JkX2J5X2hhbmRsZSgmaGFuZGxlKTsKKwlhc3NlcnQoIm5pa2l0
YS0zMjQ3IiwKKwkgICAgICAgZXJnbyghSVNfQ0JLRVJSKHJlc3VsdCksIGNvb3JkLT5ub2RlID09
IGxoLT5ub2RlKSk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogbGlrZSBjb29yZF9ieV9rZXko
KSwgYnV0IHN0YXJ0cyB0cmF2ZXJzYWwgZnJvbSB2cm9vdCBvZiBAb2JqZWN0IHJhdGhlciB0aGFu
CisgKiBmcm9tIHRyZWUgcm9vdC4gKi8KK2xvb2t1cF9yZXN1bHQgcmVpc2VyNF9vYmplY3RfbG9v
a3VwKHN0cnVjdCBpbm9kZSAqb2JqZWN0LAorCQkJCSAgICBjb25zdCByZWlzZXI0X2tleSAqIGtl
eSwKKwkJCQkgICAgY29vcmRfdCAqY29vcmQsCisJCQkJICAgIGxvY2tfaGFuZGxlICogbGgsCisJ
CQkJICAgIHpub2RlX2xvY2tfbW9kZSBsb2NrX21vZGUsCisJCQkJICAgIGxvb2t1cF9iaWFzIGJp
YXMsCisJCQkJICAgIHRyZWVfbGV2ZWwgbG9ja19sZXZlbCwKKwkJCQkgICAgdHJlZV9sZXZlbCBz
dG9wX2xldmVsLCBfX3UzMiBmbGFncywKKwkJCQkgICAgcmFfaW5mb190ICppbmZvKQoreworCWNi
a19oYW5kbGUgaGFuZGxlOworCWxvY2tfaGFuZGxlIHBhcmVudF9saDsKKwlsb29rdXBfcmVzdWx0
IHJlc3VsdDsKKworCWluaXRfbGgobGgpOworCWluaXRfbGgoJnBhcmVudF9saCk7CisKKwlhc3Nl
cnQoIm5pa2l0YS0zMDIzIiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKworCWFzc2VydCgibmlr
aXRhLTM1NCIsIGtleSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNTUiLCBjb29yZCAhPSBO
VUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNTYiLCAoYmlhcyA9PSBGSU5EX0VYQUNUKQorCSAgICAg
ICB8fCAoYmlhcyA9PSBGSU5EX01BWF9OT1RfTU9SRV9USEFOKSk7CisJYXNzZXJ0KCJuaWtpdGEt
MzU3Iiwgc3RvcF9sZXZlbCA+PSBMRUFGX0xFVkVMKTsKKwkvKiBubyBsb2NrcyBjYW4gYmUgaGVs
ZCBkdXJpbmcgdHJlZSBzZWFyY2ggYnkga2V5ICovCisJYXNzZXJ0KCJuaWtpdGEtMjEwNCIsIGxv
Y2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKworCWNia19wYWNr
KCZoYW5kbGUsCisJCSBvYmplY3QgIT0gTlVMTCA/IHJlaXNlcjRfdHJlZV9ieV9pbm9kZShvYmpl
Y3QpIDogY3VycmVudF90cmVlLAorCQkga2V5LAorCQkgY29vcmQsCisJCSBsaCwKKwkJICZwYXJl
bnRfbGgsCisJCSBsb2NrX21vZGUsIGJpYXMsIGxvY2tfbGV2ZWwsIHN0b3BfbGV2ZWwsIGZsYWdz
LCBpbmZvKTsKKwloYW5kbGUub2JqZWN0ID0gb2JqZWN0OworCisJcmVzdWx0ID0gY29vcmRfYnlf
aGFuZGxlKCZoYW5kbGUpOworCWFzc2VydCgibmlraXRhLTMyNDciLAorCSAgICAgICBlcmdvKCFJ
U19DQktFUlIocmVzdWx0KSwgY29vcmQtPm5vZGUgPT0gbGgtPm5vZGUpKTsKKwlyZXR1cm4gcmVz
dWx0OworfQorCisvKiBsb29rdXAgYnkgY2JrX2hhbmRsZS4gQ29tbW9uIHBhcnQgb2YgY29vcmRf
Ynlfa2V5KCkgYW5kCisgICByZWlzZXI0X29iamVjdF9sb29rdXAoKS4gKi8KK3N0YXRpYyBsb29r
dXBfcmVzdWx0IGNvb3JkX2J5X2hhbmRsZShjYmtfaGFuZGxlICogaGFuZGxlKQoreworCS8qCisJ
ICogZmlyc3QgY2hlY2sgY2JrX2NhY2hlICh3aGljaCBpcyBsb29rLWFzaWRlIGNhY2hlIGZvciBv
dXIgdHJlZSkgYW5kCisJICogb2YgdGhpcyBmYWlscywgc3RhcnQgdHJhdmVyc2FsLgorCSAqLwor
CS8qIGZpcnN0IGNoZWNrIHdoZXRoZXIgImtleSIgaXMgaW4gY2FjaGUgb2YgcmVjZW50IGxvb2t1
cHMuICovCisJaWYgKGNia19jYWNoZV9zZWFyY2goaGFuZGxlKSA9PSAwKQorCQlyZXR1cm4gaGFu
ZGxlLT5yZXN1bHQ7CisJZWxzZQorCQlyZXR1cm4gdHJhdmVyc2VfdHJlZShoYW5kbGUpOworfQor
CisvKiBFeGVjdXRlIGFjdG9yIGZvciBlYWNoIGl0ZW0gKG9yIHVuaXQsIGRlcGVuZGluZyBvbiBA
dGhyb3VnaF91bml0c19wKSwKKyAgIHN0YXJ0aW5nIGZyb20gQGNvb3JkLCByaWdodC13YXJkLCB1
bnRpbCBlaXRoZXI6CisKKyAgIC0gZW5kIG9mIHRoZSB0cmVlIGlzIHJlYWNoZWQKKyAgIC0gdW5m
b3JtYXR0ZWQgbm9kZSBpcyBtZXQKKyAgIC0gZXJyb3Igb2NjdXJyZWQKKyAgIC0gQGFjdG9yIHJl
dHVybnMgMCBvciBsZXNzCisKKyAgIEVycm9yIGNvZGUsIG9yIGxhc3QgYWN0b3IgcmV0dXJuIHZh
bHVlIGlzIHJldHVybmVkLgorCisgICBUaGlzIGlzIHVzZWQgYnkgcGx1Z2luL2Rpci9oYXNoZV9k
aXIuYzpyZWlzZXI0X2ZpbmRfZW50cnkoKSB0byBtb3ZlIHRocm91Z2gKKyAgIHNlcXVlbmNlIG9m
IGVudHJpZXMgd2l0aCBpZGVudGljYWwga2V5cyBhbmQgYWxpa2VzLgorKi8KK2ludCByZWlzZXI0
X2l0ZXJhdGVfdHJlZShyZWlzZXI0X3RyZWUgKiB0cmVlIC8qIHRyZWUgdG8gc2NhbiAqLyAsCisJ
CQkgY29vcmRfdCAqY29vcmQgLyogY29vcmQgdG8gc3RhcnQgZnJvbSAqLyAsCisJCQkgbG9ja19o
YW5kbGUgKiBsaCAvKiBsb2NrIGhhbmRsZSB0byBzdGFydCB3aXRoIGFuZCB0bworCQkJCQkgICAq
IHVwZGF0ZSBhbG9uZyB0aGUgd2F5ICovICwKKwkJCSB0cmVlX2l0ZXJhdGVfYWN0b3JfdCBhY3Rv
ciAvKiBmdW5jdGlvbiB0byBjYWxsIG9uIGVhY2gKKwkJCQkJCSAgICAgKiBpdGVtL3VuaXQgKi8g
LAorCQkJIHZvaWQgKmFyZyAvKiBhcmd1bWVudCB0byBwYXNzIHRvIEBhY3RvciAqLyAsCisJCQkg
em5vZGVfbG9ja19tb2RlIG1vZGUgLyogbG9jayBtb2RlIG9uIHNjYW5uZWQgbm9kZXMgKi8gLAor
CQkJIGludCB0aHJvdWdoX3VuaXRzX3AgLyogY2FsbCBAYWN0b3Igb24gZWFjaCBpdGVtIG9yIG9u
CisJCQkJCSAgICAgICoJZWFjaCB1bml0ICovICkKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0
KCJuaWtpdGEtMTE0MyIsIHRyZWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTE0NSIsIGNv
b3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTExNDYiLCBsaCAhPSBOVUxMKTsKKwlhc3Nl
cnQoIm5pa2l0YS0xMTQ3IiwgYWN0b3IgIT0gTlVMTCk7CisKKwlyZXN1bHQgPSB6bG9hZChjb29y
ZC0+bm9kZSk7CisJY29vcmRfY2xlYXJfaXBsdWcoY29vcmQpOworCWlmIChyZXN1bHQgIT0gMCkK
KwkJcmV0dXJuIHJlc3VsdDsKKwlpZiAoIWNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoY29vcmQpKSB7
CisJCXpyZWxzZShjb29yZC0+bm9kZSk7CisJCXJldHVybiAtRU5PRU5UOworCX0KKwl3aGlsZSAo
KHJlc3VsdCA9IGFjdG9yKHRyZWUsIGNvb3JkLCBsaCwgYXJnKSkgPiAwKSB7CisJCS8qIG1vdmUg
ZnVydGhlciAgKi8KKwkJaWYgKCh0aHJvdWdoX3VuaXRzX3AgJiYgY29vcmRfbmV4dF91bml0KGNv
b3JkKSkgfHwKKwkJICAgICghdGhyb3VnaF91bml0c19wICYmIGNvb3JkX25leHRfaXRlbShjb29y
ZCkpKSB7CisJCQlkbyB7CisJCQkJbG9ja19oYW5kbGUgY291cGxlOworCisJCQkJLyogbW92ZSB0
byB0aGUgbmV4dCBub2RlICAqLworCQkJCWluaXRfbGgoJmNvdXBsZSk7CisJCQkJcmVzdWx0ID0K
KwkJCQkgICAgcmVpc2VyNF9nZXRfcmlnaHRfbmVpZ2hib3IoJmNvdXBsZSwKKwkJCQkJCQkgICAg
ICAgY29vcmQtPm5vZGUsCisJCQkJCQkJICAgICAgIChpbnQpbW9kZSwKKwkJCQkJCQkgICAgICAg
R05fQ0FOX1VTRV9VUFBFUl9MRVZFTFMpOworCQkJCXpyZWxzZShjb29yZC0+bm9kZSk7CisJCQkJ
aWYgKHJlc3VsdCA9PSAwKSB7CisKKwkJCQkJcmVzdWx0ID0gemxvYWQoY291cGxlLm5vZGUpOwor
CQkJCQlpZiAocmVzdWx0ICE9IDApIHsKKwkJCQkJCWRvbmVfbGgoJmNvdXBsZSk7CisJCQkJCQly
ZXR1cm4gcmVzdWx0OworCQkJCQl9CisKKwkJCQkJY29vcmRfaW5pdF9maXJzdF91bml0KGNvb3Jk
LAorCQkJCQkJCSAgICAgIGNvdXBsZS5ub2RlKTsKKwkJCQkJZG9uZV9saChsaCk7CisJCQkJCW1v
dmVfbGgobGgsICZjb3VwbGUpOworCQkJCX0gZWxzZQorCQkJCQlyZXR1cm4gcmVzdWx0OworCQkJ
fSB3aGlsZSAobm9kZV9pc19lbXB0eShjb29yZC0+bm9kZSkpOworCQl9CisKKwkJYXNzZXJ0KCJu
aWtpdGEtMTE0OSIsIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoY29vcmQpKTsKKwl9CisJenJlbHNl
KGNvb3JkLT5ub2RlKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiByZXR1cm4gbG9ja2VkIHVi
ZXIgem5vZGUgZm9yIEB0cmVlICovCitpbnQgZ2V0X3ViZXJfem5vZGUocmVpc2VyNF90cmVlICog
dHJlZSwgem5vZGVfbG9ja19tb2RlIG1vZGUsCisJCSAgIHpub2RlX2xvY2tfcmVxdWVzdCBwcmks
IGxvY2tfaGFuZGxlICogbGgpCit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IGxvbmd0ZXJt
X2xvY2tfem5vZGUobGgsIHRyZWUtPnViZXIsIG1vZGUsIHByaSk7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworLyogdHJ1ZSBpZiBAa2V5IGlzIHN0cmljdGx5IHdpdGhpbiBAbm9kZQorCisgICB3ZSBh
cmUgbG9va2luZyBmb3IgcG9zc2libHkgbm9uLXVuaXF1ZSBrZXkgYW5kIGl0IGlzIGl0ZW0gaXMg
YXQgdGhlIGVkZ2Ugb2YKKyAgIEBub2RlLiBNYXkgYmUgaXQgaXMgaW4gdGhlIG5laWdoYm9yLgor
Ki8KK3N0YXRpYyBpbnQgem5vZGVfY29udGFpbnNfa2V5X3N0cmljdCh6bm9kZSAqIG5vZGUJLyog
bm9kZSB0byBjaGVjayBrZXkKKwkJCQkJCQkgKiBhZ2FpbnN0ICovICwKKwkJCQkgICAgIGNvbnN0
IHJlaXNlcjRfa2V5ICoKKwkJCQkgICAgIGtleSAvKiBrZXkgdG8gY2hlY2sgKi8gLAorCQkJCSAg
ICAgaW50IGlzdW5pcXVlKQoreworCWludCBhbnN3ZXI7CisKKwlhc3NlcnQoIm5pa2l0YS0xNzYw
Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xNzIyIiwga2V5ICE9IE5VTEwpOwor
CisJaWYgKGtleWdlKGtleSwgJm5vZGUtPnJkX2tleSkpCisJCXJldHVybiAwOworCisJYW5zd2Vy
ID0ga2V5Y21wKCZub2RlLT5sZF9rZXksIGtleSk7CisKKwlpZiAoaXN1bmlxdWUpCisJCXJldHVy
biBhbnN3ZXIgIT0gR1JFQVRFUl9USEFOOworCWVsc2UKKwkJcmV0dXJuIGFuc3dlciA9PSBMRVNT
X1RIQU47Cit9CisKKy8qCisgKiBWaXJ0dWFsIFJvb3QgKHZyb290KSBjb2RlLgorICoKKyAqICAg
ICBGb3IgZ2l2ZW4gZmlsZSBzeXN0ZW0gb2JqZWN0IChlLmcuLCByZWd1bGFyIGZpbGUgb3IgZGly
ZWN0b3J5KSBsZXQncworICogICAgIGRlZmluZSBpdHMgInZpcnR1YWwgcm9vdCIgYXMgbG93ZXN0
IGluIHRoZSB0cmVlICh0aGF0IGlzLCBmdXJ0aGVyZXN0CisgKiAgICAgZnJvbSB0aGUgdHJlZSBy
b290KSBub2RlIHN1Y2ggdGhhdCBhbGwgYm9keSBpdGVtcyBvZiBzYWlkIG9iamVjdCBhcmUKKyAq
ICAgICBsb2NhdGVkIGluIGEgdHJlZSByb290ZWQgYXQgdGhpcyBub2RlLgorICoKKyAqICAgICBP
bmNlIHZyb290IG9mIG9iamVjdCBpcyBmb3VuZCBhbGwgdHJlZSBsb29rdXBzIGZvciBpdGVtcyB3
aXRoaW4gYm9keSBvZgorICogICAgIHRoaXMgb2JqZWN0ICgib2JqZWN0IGxvb2t1cHMiKSBjYW4g
YmUgc3RhcnRlZCBmcm9tIGl0cyB2cm9vdCByYXRoZXIKKyAqICAgICB0aGFuIGZyb20gcmVhbCBy
b290LiBUaGlzIGhhcyBmb2xsb3dpbmcgYWR2YW50YWdlczoKKyAqCisgKiAgICAgICAgIDEuIGFt
b3VudCBvZiBub2RlcyB0cmF2ZXJzZWQgZHVyaW5nIGxvb2t1cCAoYW5kLCBoZW5jZSwgYW1vdW50
IG9mCisgKiAgICAgICAgIGtleSBjb21wYXJpc29ucyBtYWRlKSBkZWNyZWFzZXMsIGFuZAorICoK
KyAqICAgICAgICAgMi4gY29udGVudGlvbiBvbiB0cmVlIHJvb3QgaXMgZGVjcmVhc2VkLiBUaGlz
IGxhdHRlciB3YXMgYWN0dWFsbHkKKyAqICAgICAgICAgbW90aXZhdGluZyByZWFzb24gYmVoaW5k
IHZyb290LCBiZWNhdXNlIHNwaW4gbG9jayBvZiByb290IG5vZGUsCisgKiAgICAgICAgIHdoaWNo
IGlzIHRha2VuIHdoZW4gYWNxdWlyaW5nIGxvbmctdGVybSBsb2NrIG9uIHJvb3Qgbm9kZSBpcyB0
aGUKKyAqICAgICAgICAgaG90dGVzdCBsb2NrIGluIHRoZSByZWlzZXI0LgorICoKKyAqIEhvdyB0
byBmaW5kIHZyb290LgorICoKKyAqICAgICBXaGVuIHZyb290IG9mIG9iamVjdCBGIGlzIG5vdCB5
ZXQgZGV0ZXJtaW5lZCwgYWxsIG9iamVjdCBsb29rdXBzIHN0YXJ0CisgKiAgICAgZnJvbSB0aGUg
cm9vdCBvZiB0aGUgdHJlZS4gQXQgZWFjaCB0cmVlIGxldmVsIGR1cmluZyB0cmF2ZXJzYWwgd2Ug
aGF2ZQorICogICAgIGEgbm9kZSBOIHN1Y2ggdGhhdCBhIGtleSB3ZSBhcmUgbG9va2luZyBmb3Ig
KHdoaWNoIGlzIHRoZSBrZXkgaW5zaWRlCisgKiAgICAgb2JqZWN0J3MgYm9keSkgaXMgbG9jYXRl
ZCB3aXRoaW4gTi4gSW4gZnVuY3Rpb24gaGFuZGxlX3Zyb290KCkgY2FsbGVkCisgKiAgICAgZnJv
bSBjYmtfbGV2ZWxfbG9va3VwKCkgd2UgY2hlY2sgd2hldGhlciBOIGlzIHBvc3NpYmxlIHZyb290
IGZvcgorICogICAgIEYuIENoZWNrIGlzIHRyaXZpYWwtLS1pZiBuZWl0aGVyIGxlZnRtb3N0IG5v
ciByaWdodG1vc3QgaXRlbSBvZiBOCisgKiAgICAgYmVsb25ncyB0byBGIChhbmQgd2UgYWxyZWFk
eSBoYXZlIGhlbHBmdWwgLT5vd25zX2l0ZW0oKSBtZXRob2Qgb2YKKyAqICAgICBvYmplY3QgcGx1
Z2luIGZvciB0aGlzKSwgdGhlbiBOIGlzIHBvc3NpYmxlIHZyb290IG9mIEYuIFRoaXMsIG9mCisg
KiAgICAgY291cnNlLCByZWxpZXMgb24gdGhlIGFzc3VtcHRpb24gdGhhdCBlYWNoIG9iamVjdCBv
Y2N1cGllcyBjb250aWd1b3VzCisgKiAgICAgcmFuZ2Ugb2Yga2V5cyBpbiB0aGUgdHJlZS4KKyAq
CisgKiAgICAgVGh1cywgdHJhdmVyc2luZyB0cmVlIGRvd253YXJkIGFuZCBjaGVja2luZyBlYWNo
IG5vZGUgYXMgd2UgZ28sIHdlIGNhbgorICogICAgIGZpbmQgbG93ZXN0IHN1Y2ggbm9kZSwgd2hp
Y2gsIGJ5IGRlZmluaXRpb24sIGlzIHZyb290LgorICoKKyAqIEhvdyB0byB0cmFjayB2cm9vdC4K
KyAqCisgKiAgICAgTm9ob3cuIElmIGFjdHVhbCB2cm9vdCBjaGFuZ2VzLCBuZXh0IG9iamVjdCBs
b29rdXAgd2lsbCBqdXN0IHJlc3RhcnQKKyAqICAgICBmcm9tIHRoZSBhY3R1YWwgdHJlZSByb290
LCByZWZyZXNoaW5nIG9iamVjdCdzIHZyb290IGFsb25nIHRoZSB3YXkuCisgKgorICovCisKKy8q
CisgKiBDaGVjayB3aGV0aGVyIEBub2RlIGlzIHBvc3NpYmxlIHZyb290IG9mIEBvYmplY3QuCisg
Ki8KK3N0YXRpYyB2b2lkIGhhbmRsZV92cm9vdChzdHJ1Y3QgaW5vZGUgKm9iamVjdCwgem5vZGUg
KiBub2RlKQoreworCWZpbGVfcGx1Z2luICpmcGx1ZzsKKwljb29yZF90IGNvb3JkOworCisJZnBs
dWcgPSBpbm9kZV9maWxlX3BsdWdpbihvYmplY3QpOworCWFzc2VydCgibmlraXRhLTMzNTMiLCBm
cGx1ZyAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMzU0IiwgZnBsdWctPm93bnNfaXRlbSAh
PSBOVUxMKTsKKworCWlmICh1bmxpa2VseShub2RlX2lzX2VtcHR5KG5vZGUpKSkKKwkJcmV0dXJu
OworCisJY29vcmRfaW5pdF9maXJzdF91bml0KCZjb29yZCwgbm9kZSk7CisJLyoKKwkgKiBpZiBs
ZWZ0bW9zdCBpdGVtIG9mIEBub2RlIGJlbG9uZ3MgdG8gQG9iamVjdCwgd2UgY2Fubm90IGJlIHN1
cmUKKwkgKiB0aGF0IEBub2RlIGlzIHZyb290IG9mIEBvYmplY3QsIGJlY2F1c2UsIHNvbWUgaXRl
bXMgb2YgQG9iamVjdCBhcmUKKwkgKiBwcm9iYWJseSBpbiB0aGUgc3ViLXRyZWUgcm9vdGVkIGF0
IHRoZSBsZWZ0IG5laWdoYm9yIG9mIEBub2RlLgorCSAqLworCWlmIChmcGx1Zy0+b3duc19pdGVt
KG9iamVjdCwgJmNvb3JkKSkKKwkJcmV0dXJuOworCWNvb3JkX2luaXRfbGFzdF91bml0KCZjb29y
ZCwgbm9kZSk7CisJLyogbXV0YXRpcyBtdXRhbmRpcyBmb3IgdGhlIHJpZ2h0bW9zdCBpdGVtICov
CisJaWYgKGZwbHVnLT5vd25zX2l0ZW0ob2JqZWN0LCAmY29vcmQpKQorCQlyZXR1cm47CisJLyog
b3RoZXJ3aXNlLCBAbm9kZSBpcyBwb3NzaWJsZSB2cm9vdCBvZiBAb2JqZWN0ICovCisJaW5vZGVf
c2V0X3Zyb290KG9iamVjdCwgbm9kZSk7Cit9CisKKy8qCisgKiBoZWxwZXIgZnVuY3Rpb24gdXNl
ZCBieSB0cmF2ZXJzZSB0cmVlIHRvIHN0YXJ0IHRyZWUgdHJhdmVyc2FsIG5vdCBmcm9tIHRoZQor
ICogdHJlZSByb290LCBidXQgZnJvbSBAaC0+b2JqZWN0J3MgdnJvb3QsIGlmIHBvc3NpYmxlLgor
ICovCitzdGF0aWMgaW50IHByZXBhcmVfb2JqZWN0X2xvb2t1cChjYmtfaGFuZGxlICogaCkKK3sK
Kwl6bm9kZSAqdnJvb3Q7CisJaW50IHJlc3VsdDsKKworCXZyb290ID0gaW5vZGVfZ2V0X3Zyb290
KGgtPm9iamVjdCk7CisJaWYgKHZyb290ID09IE5VTEwpIHsKKwkJLyoKKwkJICogb2JqZWN0IGRv
ZXNuJ3QgaGF2ZSBrbm93biB2cm9vdCwgc3RhcnQgZnJvbSByZWFsIHRyZWUgcm9vdC4KKwkJICov
CisJCXJldHVybiBMT09LVVBfQ09OVDsKKwl9CisKKwloLT5sZXZlbCA9IHpub2RlX2dldF9sZXZl
bCh2cm9vdCk7CisJLyogdGFrZSBhIGxvbmctdGVybSBsb2NrIG9uIHZyb290ICovCisJaC0+cmVz
dWx0ID0gbG9uZ3Rlcm1fbG9ja196bm9kZShoLT5hY3RpdmVfbGgsIHZyb290LAorCQkJCQljYmtf
bG9ja19tb2RlKGgtPmxldmVsLCBoKSwKKwkJCQkJWk5PREVfTE9DS19MT1BSSSk7CisJcmVzdWx0
ID0gTE9PS1VQX1JFU1Q7CisJaWYgKGgtPnJlc3VsdCA9PSAwKSB7CisJCWludCBpc3VuaXF1ZTsK
KwkJaW50IGluc2lkZTsKKworCQlpc3VuaXF1ZSA9IGgtPmZsYWdzICYgQ0JLX1VOSVFVRTsKKwkJ
LyogY2hlY2sgdGhhdCBrZXkgaXMgaW5zaWRlIHZyb290ICovCisJCXJlYWRfbG9ja19kayhoLT50
cmVlKTsKKwkJaW5zaWRlID0gKHpub2RlX2NvbnRhaW5zX2tleV9zdHJpY3QodnJvb3QsIGgtPmtl
eSwgaXN1bmlxdWUpICYmCisJCQkgICFaRl9JU1NFVCh2cm9vdCwgSk5PREVfSEVBUkRfQkFOU0hF
RSkpOworCQlyZWFkX3VubG9ja19kayhoLT50cmVlKTsKKwkJaWYgKGluc2lkZSkgeworCQkJaC0+
cmVzdWx0ID0gemxvYWQodnJvb3QpOworCQkJaWYgKGgtPnJlc3VsdCA9PSAwKSB7CisJCQkJLyog
c2VhcmNoIGZvciBrZXkgaW4gdnJvb3QuICovCisJCQkJcmVzdWx0ID0gY2JrX25vZGVfbG9va3Vw
KGgpOworCQkJCXpyZWxzZSh2cm9vdCk7CS8qaC0+YWN0aXZlX2xoLT5ub2RlKTsgKi8KKwkJCQlp
ZiAoaC0+YWN0aXZlX2xoLT5ub2RlICE9IHZyb290KSB7CisJCQkJCXJlc3VsdCA9IExPT0tVUF9S
RVNUOworCQkJCX0gZWxzZSBpZiAocmVzdWx0ID09IExPT0tVUF9DT05UKSB7CisJCQkJCW1vdmVf
bGgoaC0+cGFyZW50X2xoLCBoLT5hY3RpdmVfbGgpOworCQkJCQloLT5mbGFncyAmPSB+Q0JLX0RL
U0VUOworCQkJCX0KKwkJCX0KKwkJfQorCX0KKworCXpwdXQodnJvb3QpOworCisJaWYgKElTX0NC
S0VSUihoLT5yZXN1bHQpIHx8IHJlc3VsdCA9PSBMT09LVVBfUkVTVCkKKwkJaHB1dChoKTsKKwly
ZXR1cm4gcmVzdWx0OworfQorCisvKiBtYWluIGZ1bmN0aW9uIHRoYXQgaGFuZGxlcyBjb21tb24g
cGFydHMgb2YgdHJlZSB0cmF2ZXJzYWw6IHN0YXJ0aW5nCisgICAgKGZha2Ugem5vZGUgaGFuZGxp
bmcpLCByZXN0YXJ0cywgZXJyb3IgaGFuZGxpbmcsIGNvbXBsZXRpb24gKi8KK3N0YXRpYyBsb29r
dXBfcmVzdWx0IHRyYXZlcnNlX3RyZWUoY2JrX2hhbmRsZSAqIGgvKiBzZWFyY2ggaGFuZGxlICov
KQoreworCWludCBkb25lOworCWludCBpdGVyYXRpb25zOworCWludCB2cm9vdF91c2VkOworCisJ
YXNzZXJ0KCJuaWtpdGEtMzY1IiwgaCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNjYiLCBo
LT50cmVlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTM2NyIsIGgtPmtleSAhPSBOVUxMKTsK
Kwlhc3NlcnQoIm5pa2l0YS0zNjgiLCBoLT5jb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0zNjkiLCAoaC0+YmlhcyA9PSBGSU5EX0VYQUNUKQorCSAgICAgICB8fCAoaC0+YmlhcyA9PSBG
SU5EX01BWF9OT1RfTU9SRV9USEFOKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzcwIiwgaC0+c3RvcF9s
ZXZlbCA+PSBMRUFGX0xFVkVMKTsKKwlhc3NlcnQoIm5pa2l0YS0yOTQ5IiwgIShoLT5mbGFncyAm
IENCS19ES1NFVCkpOworCWFzc2VydCgiemFtLTM1NSIsIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRf
Y3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKworCWRvbmUgPSAwOworCWl0ZXJhdGlvbnMgPSAwOwor
CXZyb290X3VzZWQgPSAwOworCisJLyogbG9vcCBmb3IgcmVzdGFydHMgKi8KK3Jlc3RhcnQ6CisK
Kwlhc3NlcnQoIm5pa2l0YS0zMDI0IiwgcmVpc2VyNF9zY2hlZHVsYWJsZSgpKTsKKworCWgtPnJl
c3VsdCA9IENCS19DT09SRF9GT1VORDsKKwkvKiBjb25uZWN0X3pub2RlKCkgbmVlZHMgaXQgKi8K
KwloLT5sZF9rZXkgPSAqcmVpc2VyNF9taW5fa2V5KCk7CisJaC0+cmRfa2V5ID0gKnJlaXNlcjRf
bWF4X2tleSgpOworCWgtPmZsYWdzIHw9IENCS19ES1NFVDsKKwloLT5lcnJvciA9IE5VTEw7CisK
KwlpZiAoIXZyb290X3VzZWQgJiYgaC0+b2JqZWN0ICE9IE5VTEwpIHsKKwkJdnJvb3RfdXNlZCA9
IDE7CisJCWRvbmUgPSBwcmVwYXJlX29iamVjdF9sb29rdXAoaCk7CisJCWlmIChkb25lID09IExP
T0tVUF9SRVNUKQorCQkJZ290byByZXN0YXJ0OworCQllbHNlIGlmIChkb25lID09IExPT0tVUF9E
T05FKQorCQkJcmV0dXJuIGgtPnJlc3VsdDsKKwl9CisJaWYgKGgtPnBhcmVudF9saC0+bm9kZSA9
PSBOVUxMKSB7CisJCWRvbmUgPQorCQkgICAgZ2V0X3ViZXJfem5vZGUoaC0+dHJlZSwgWk5PREVf
UkVBRF9MT0NLLCBaTk9ERV9MT0NLX0xPUFJJLAorCQkJCSAgIGgtPnBhcmVudF9saCk7CisKKwkJ
YXNzZXJ0KCJuaWtpdGEtMTYzNyIsIGRvbmUgIT0gLUVfREVBRExPQ0spOworCisJCWgtPmJsb2Nr
ID0gaC0+dHJlZS0+cm9vdF9ibG9jazsKKwkJaC0+bGV2ZWwgPSBoLT50cmVlLT5oZWlnaHQ7CisJ
CWgtPmNvb3JkLT5ub2RlID0gaC0+cGFyZW50X2xoLT5ub2RlOworCisJCWlmIChkb25lICE9IDAp
CisJCQlyZXR1cm4gZG9uZTsKKwl9CisKKwkvKiBsb29wIGRlc2NlbmRpbmcgYSB0cmVlICovCisJ
d2hpbGUgKCFkb25lKSB7CisKKwkJaWYgKHVubGlrZWx5KChpdGVyYXRpb25zID4gUkVJU0VSNF9D
QktfSVRFUkFUSU9OU19MSU1JVCkgJiYKKwkJCSAgICAgSVNfUE9XKGl0ZXJhdGlvbnMpKSkgewor
CQkJd2FybmluZygibmlraXRhLTE0ODEiLCAiVG9vIG1hbnkgaXRlcmF0aW9uczogJWkiLAorCQkJ
CWl0ZXJhdGlvbnMpOworCQkJcmVpc2VyNF9wcmludF9rZXkoImtleSIsIGgtPmtleSk7CisJCQkr
K2l0ZXJhdGlvbnM7CisJCX0gZWxzZSBpZiAodW5saWtlbHkoaXRlcmF0aW9ucyA+IFJFSVNFUjRf
TUFYX0NCS19JVEVSQVRJT05TKSkgeworCQkJaC0+ZXJyb3IgPQorCQkJICAgICJyZWlzZXItMjAx
ODogVG9vIG1hbnkgaXRlcmF0aW9ucy4gVHJlZSBjb3JydXB0ZWQsIG9yIChsZXNzIGxpa2VseSkg
c3RhcnZhdGlvbiBvY2N1cnJpbmcuIjsKKwkJCWgtPnJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJ
CWJyZWFrOworCQl9CisJCXN3aXRjaCAoY2JrX2xldmVsX2xvb2t1cChoKSkgeworCQljYXNlIExP
T0tVUF9DT05UOgorCQkJbW92ZV9saChoLT5wYXJlbnRfbGgsIGgtPmFjdGl2ZV9saCk7CisJCQlj
b250aW51ZTsKKwkJZGVmYXVsdDoKKwkJCXdyb25nX3JldHVybl92YWx1ZSgibmlraXRhLTM3MiIs
ICJjYmtfbGV2ZWwiKTsKKwkJY2FzZSBMT09LVVBfRE9ORToKKwkJCWRvbmUgPSAxOworCQkJYnJl
YWs7CisJCWNhc2UgTE9PS1VQX1JFU1Q6CisJCQlocHV0KGgpOworCQkJLyogZGVhZGxvY2sgYXZv
aWRhbmNlIGlzIG5vcm1hbCBjYXNlLiAqLworCQkJaWYgKGgtPnJlc3VsdCAhPSAtRV9ERUFETE9D
SykKKwkJCQkrK2l0ZXJhdGlvbnM7CisJCQlyZWlzZXI0X3ByZWVtcHRfcG9pbnQoKTsKKwkJCWdv
dG8gcmVzdGFydDsKKwkJfQorCX0KKwkvKiB0aGF0J3MgYWxsLiBUaGUgcmVzdCBpcyBlcnJvciBo
YW5kbGluZyAqLworCWlmICh1bmxpa2VseShoLT5lcnJvciAhPSBOVUxMKSkgeworCQl3YXJuaW5n
KCJuaWtpdGEtMzczIiwgIiVzOiBsZXZlbDogJWksICIKKwkJCSJsb2NrX2xldmVsOiAlaSwgc3Rv
cF9sZXZlbDogJWkgIgorCQkJImxvY2tfbW9kZTogJXMsIGJpYXM6ICVzIiwKKwkJCWgtPmVycm9y
LCBoLT5sZXZlbCwgaC0+bG9ja19sZXZlbCwgaC0+c3RvcF9sZXZlbCwKKwkJCWxvY2tfbW9kZV9u
YW1lKGgtPmxvY2tfbW9kZSksIGJpYXNfbmFtZShoLT5iaWFzKSk7CisJCXJlaXNlcjRfcHJpbnRf
YWRkcmVzcygiYmxvY2siLCAmaC0+YmxvY2spOworCQlyZWlzZXI0X3ByaW50X2tleSgia2V5Iiwg
aC0+a2V5KTsKKwkJcHJpbnRfY29vcmRfY29udGVudCgiY29vcmQiLCBoLT5jb29yZCk7CisJfQor
CS8qIGB1bmxpa2VseScgZXJyb3IgY2FzZSAqLworCWlmICh1bmxpa2VseShJU19DQktFUlIoaC0+
cmVzdWx0KSkpIHsKKwkJLyogZmFpbHVyZS4gZG8gY2xlYW51cCAqLworCQlocHV0KGgpOworCX0g
ZWxzZSB7CisJCWFzc2VydCgibmlraXRhLTE2MDUiLCBXSVRIX0RBVEFfUkVUCisJCSAgICAgICAo
aC0+Y29vcmQtPm5vZGUsIDEsCisJCQllcmdvKChoLT5yZXN1bHQgPT0gQ0JLX0NPT1JEX0ZPVU5E
KSAmJgorCQkJICAgICAoaC0+YmlhcyA9PSBGSU5EX0VYQUNUKSAmJgorCQkJICAgICAoIW5vZGVf
aXNfZW1wdHkoaC0+Y29vcmQtPm5vZGUpKSwKKwkJCSAgICAgY29vcmRfaXNfZXhpc3RpbmdfaXRl
bShoLT5jb29yZCkpKSk7CisJfQorCXJldHVybiBoLT5yZXN1bHQ7Cit9CisKKy8qIGZpbmQgZGVs
aW1pdGluZyBrZXlzIG9mIGNoaWxkCisKKyAgIERldGVybWluZSBsZWZ0IGFuZCByaWdodCBkZWxp
bWl0aW5nIGtleXMgZm9yIGNoaWxkIHBvaW50ZWQgdG8gYnkKKyAgIEBwYXJlbnRfY29vcmQuCisK
KyovCitzdGF0aWMgdm9pZCBmaW5kX2NoaWxkX2RlbGltaXRpbmdfa2V5cyh6bm9kZSAqIHBhcmVu
dAkvKiBwYXJlbnQgem5vZGUsIHBhc3NlZAorCQkJCQkJCSAqIGxvY2tlZCAqLyAsCisJCQkJICAg
ICAgIGNvbnN0IGNvb3JkX3QgKnBhcmVudF9jb29yZAorCQkJCQkJCS8qIGNvb3JkIHdoZXJlIHBv
aW50ZXIKKwkJCQkJCQkgKiB0byBjaGlsZCBpcyBzdG9yZWQKKwkJCQkJCQkgKi8gLAorCQkJCSAg
ICAgICByZWlzZXI0X2tleSAqIGxkCS8qIHdoZXJlIHRvIHN0b3JlIGxlZnQKKwkJCQkJCQkgKiBk
ZWxpbWl0aW5nIGtleSAqLyAsCisJCQkJICAgICAgIHJlaXNlcjRfa2V5ICogcmQJLyogd2hlcmUg
dG8gc3RvcmUgcmlnaHQKKwkJCQkJCQkgKiBkZWxpbWl0aW5nIGtleSAqLyApCit7CisJY29vcmRf
dCBuZWlnaGJvcjsKKworCWFzc2VydCgibmlraXRhLTE0ODQiLCBwYXJlbnQgIT0gTlVMTCk7CisJ
YXNzZXJ0X3J3X2xvY2tlZCgmKHpub2RlX2dldF90cmVlKHBhcmVudCktPmRrX2xvY2spKTsKKwor
CWNvb3JkX2R1cCgmbmVpZ2hib3IsIHBhcmVudF9jb29yZCk7CisKKwlpZiAobmVpZ2hib3IuYmV0
d2VlbiA9PSBBVF9VTklUKQorCQkvKiBpbWl0YXRlIGl0ZW0gLT5sb29rdXAoKSBiZWhhdmlvci4g
Ki8KKwkJbmVpZ2hib3IuYmV0d2VlbiA9IEFGVEVSX1VOSVQ7CisKKwlpZiAoY29vcmRfc2V0X3Rv
X2xlZnQoJm5laWdoYm9yKSA9PSAwKQorCQl1bml0X2tleV9ieV9jb29yZCgmbmVpZ2hib3IsIGxk
KTsKKwllbHNlIHsKKwkJYXNzZXJ0KCJuaWtpdGEtMTQ4NTEiLCAwKTsKKwkJKmxkID0gKnpub2Rl
X2dldF9sZF9rZXkocGFyZW50KTsKKwl9CisKKwljb29yZF9kdXAoJm5laWdoYm9yLCBwYXJlbnRf
Y29vcmQpOworCWlmIChuZWlnaGJvci5iZXR3ZWVuID09IEFUX1VOSVQpCisJCW5laWdoYm9yLmJl
dHdlZW4gPSBBRlRFUl9VTklUOworCWlmIChjb29yZF9zZXRfdG9fcmlnaHQoJm5laWdoYm9yKSA9
PSAwKQorCQl1bml0X2tleV9ieV9jb29yZCgmbmVpZ2hib3IsIHJkKTsKKwllbHNlCisJCSpyZCA9
ICp6bm9kZV9nZXRfcmRfa2V5KHBhcmVudCk7Cit9CisKKy8qCisgKiBzZXR1cCBkZWxpbWl0aW5n
IGtleXMgZm9yIGEgY2hpbGQKKyAqCisgKiBAcGFyZW50IHBhcmVudCBub2RlCisgKgorICogQGNv
b3JkIGxvY2F0aW9uIGluIEBwYXJlbnQgd2hlcmUgcG9pbnRlciB0byBAY2hpbGQgaXMKKyAqCisg
KiBAY2hpbGQgY2hpbGQgbm9kZQorICovCitpbnQKK3NldF9jaGlsZF9kZWxpbWl0aW5nX2tleXMo
em5vZGUgKiBwYXJlbnQsIGNvbnN0IGNvb3JkX3QgKmNvb3JkLCB6bm9kZSAqIGNoaWxkKQorewor
CXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgibmlraXRhLTI5NTIiLAorCSAgICAgICB6
bm9kZV9nZXRfbGV2ZWwocGFyZW50KSA9PSB6bm9kZV9nZXRfbGV2ZWwoY29vcmQtPm5vZGUpKTsK
KworCS8qIGZhc3QgY2hlY2sgd2l0aG91dCB0YWtpbmcgZGsgbG9jay4gVGhpcyBpcyBzYWZlLCBi
ZWNhdXNlCisJICogSk5PREVfREtTRVQgaXMgbmV2ZXIgY2xlYXJlZCBvbmNlIHNldC4gKi8KKwlp
ZiAoIVpGX0lTU0VUKGNoaWxkLCBKTk9ERV9ES1NFVCkpIHsKKwkJdHJlZSA9IHpub2RlX2dldF90
cmVlKHBhcmVudCk7CisJCXdyaXRlX2xvY2tfZGsodHJlZSk7CisJCWlmIChsaWtlbHkoIVpGX0lT
U0VUKGNoaWxkLCBKTk9ERV9ES1NFVCkpKSB7CisJCQlmaW5kX2NoaWxkX2RlbGltaXRpbmdfa2V5
cyhwYXJlbnQsIGNvb3JkLAorCQkJCQkJICAgJmNoaWxkLT5sZF9rZXksCisJCQkJCQkgICAmY2hp
bGQtPnJkX2tleSk7CisJCQlPTl9ERUJVRyhjaGlsZC0+bGRfa2V5X3ZlcnNpb24gPQorCQkJCSBh
dG9taWNfaW5jX3JldHVybigmZGVsaW1fa2V5X3ZlcnNpb24pOworCQkJCSBjaGlsZC0+cmRfa2V5
X3ZlcnNpb24gPQorCQkJCSBhdG9taWNfaW5jX3JldHVybigmZGVsaW1fa2V5X3ZlcnNpb24pOyk7
CisJCQlaRl9TRVQoY2hpbGQsIEpOT0RFX0RLU0VUKTsKKwkJfQorCQl3cml0ZV91bmxvY2tfZGso
dHJlZSk7CisJCXJldHVybiAxOworCX0KKwlyZXR1cm4gMDsKK30KKworLyogUGVyZm9ybSB0cmVl
IGxvb2t1cCBhdCBvbmUgbGV2ZWwuIFRoaXMgaXMgY2FsbGVkIGZyb20gY2JrX3RyYXZlcnNlKCkK
KyAgIGZ1bmN0aW9uIHRoYXQgZHJpdmVzIGxvb2t1cCB0aHJvdWdoIHRyZWUgYW5kIGNhbGxzIGNi
a19ub2RlX2xvb2t1cCgpIHRvCisgICBwZXJmb3JtIGxvb2t1cCB3aXRoaW4gb25lIG5vZGUuCisK
KyAgIFNlZSBjb21tZW50cyBpbiBhIGNvZGUuCisqLworc3RhdGljIGxldmVsX2xvb2t1cF9yZXN1
bHQgY2JrX2xldmVsX2xvb2t1cChjYmtfaGFuZGxlICogaC8qIHNlYXJjaCBoYW5kbGUgKi8pCit7
CisJaW50IHJldDsKKwlpbnQgc2V0ZGs7CisJaW50IGxka2V5c2V0ID0gMDsKKwlyZWlzZXI0X2tl
eSBsZGtleTsKKwlyZWlzZXI0X2tleSBrZXk7CisJem5vZGUgKmFjdGl2ZTsKKworCWFzc2VydCgi
bmlraXRhLTMwMjUiLCByZWlzZXI0X3NjaGVkdWxhYmxlKCkpOworCisJLyogYWNxdWlyZSByZWZl
cmVuY2UgdG8gQGFjdGl2ZSBub2RlICovCisJYWN0aXZlID0KKwkgICAgemdldChoLT50cmVlLCAm
aC0+YmxvY2ssIGgtPnBhcmVudF9saC0+bm9kZSwgaC0+bGV2ZWwsCisJCSByZWlzZXI0X2N0eF9n
ZnBfbWFza19nZXQoKSk7CisKKwlpZiAoSVNfRVJSKGFjdGl2ZSkpIHsKKwkJaC0+cmVzdWx0ID0g
UFRSX0VSUihhY3RpdmUpOworCQlyZXR1cm4gTE9PS1VQX0RPTkU7CisJfQorCisJLyogbG9jayBA
YWN0aXZlICovCisJaC0+cmVzdWx0ID0gbG9uZ3Rlcm1fbG9ja196bm9kZShoLT5hY3RpdmVfbGgs
CisJCQkJCWFjdGl2ZSwKKwkJCQkJY2JrX2xvY2tfbW9kZShoLT5sZXZlbCwgaCksCisJCQkJCVpO
T0RFX0xPQ0tfTE9QUkkpOworCS8qIGxvbmd0ZXJtX2xvY2tfem5vZGUoKSBhY3F1aXJlcyBhZGRp
dGlvbmFsIHJlZmVyZW5jZSB0byB6bm9kZSAod2hpY2gKKwkgICB3aWxsIGJlIGxhdGVyIHJlbGVh
c2VkIGJ5IGxvbmd0ZXJtX3VubG9ja196bm9kZSgpKS4gUmVsZWFzZQorCSAgIHJlZmVyZW5jZSBh
Y3F1aXJlZCBieSB6Z2V0KCkuCisJICovCisJenB1dChhY3RpdmUpOworCWlmICh1bmxpa2VseSho
LT5yZXN1bHQgIT0gMCkpCisJCWdvdG8gZmFpbF9vcl9yZXN0YXJ0OworCisJc2V0ZGsgPSAwOwor
CS8qIGlmIEBhY3RpdmUgaXMgYWNjZXNzZWQgZm9yIHRoZSBmaXJzdCB0aW1lLCBzZXR1cCBkZWxp
bWl0aW5nIGtleXMgb24KKwkgICBpdC4gRGVsaW1pdGluZyBrZXlzIGFyZSB0YWtlbiBmcm9tIHRo
ZSBwYXJlbnQgbm9kZS4gU2VlCisJICAgc2V0dXBfZGVsaW1pdGluZ19rZXlzKCkgZm9yIGRldGFp
bHMuCisJICovCisJaWYgKGgtPmZsYWdzICYgQ0JLX0RLU0VUKSB7CisJCXNldGRrID0gc2V0dXBf
ZGVsaW1pdGluZ19rZXlzKGgpOworCQloLT5mbGFncyAmPSB+Q0JLX0RLU0VUOworCX0gZWxzZSB7
CisJCXpub2RlICpwYXJlbnQ7CisKKwkJcGFyZW50ID0gaC0+cGFyZW50X2xoLT5ub2RlOworCQlo
LT5yZXN1bHQgPSB6bG9hZChwYXJlbnQpOworCQlpZiAodW5saWtlbHkoaC0+cmVzdWx0ICE9IDAp
KQorCQkJZ290byBmYWlsX29yX3Jlc3RhcnQ7CisKKwkJaWYgKCFaRl9JU1NFVChhY3RpdmUsIEpO
T0RFX0RLU0VUKSkKKwkJCXNldGRrID0gc2V0X2NoaWxkX2RlbGltaXRpbmdfa2V5cyhwYXJlbnQs
CisJCQkJCQkJICBoLT5jb29yZCwgYWN0aXZlKTsKKwkJZWxzZSB7CisJCQlyZWFkX2xvY2tfZGso
aC0+dHJlZSk7CisJCQlmaW5kX2NoaWxkX2RlbGltaXRpbmdfa2V5cyhwYXJlbnQsIGgtPmNvb3Jk
LCAmbGRrZXksCisJCQkJCQkgICAma2V5KTsKKwkJCXJlYWRfdW5sb2NrX2RrKGgtPnRyZWUpOwor
CQkJbGRrZXlzZXQgPSAxOworCQl9CisJCXpyZWxzZShwYXJlbnQpOworCX0KKworCS8qIHRoaXMg
aXMgdWdseSBrbHVkZ2UuIFJlbWluZGVyOiB0aGlzIGlzIG5lY2Vzc2FyeSwgYmVjYXVzZQorCSAg
IC0+bG9va3VwKCkgbWV0aG9kIHJldHVybnMgY29vcmQgd2l0aCAtPmJldHdlZW4gZmllbGQgcHJv
YmFibHkgc2V0CisJICAgdG8gc29tZXRoaW5nIGRpZmZlcmVudCBmcm9tIEFUX1VOSVQuCisJICov
CisJaC0+Y29vcmQtPmJldHdlZW4gPSBBVF9VTklUOworCisJaWYgKHpub2RlX2p1c3RfY3JlYXRl
ZChhY3RpdmUpICYmIChoLT5jb29yZC0+bm9kZSAhPSBOVUxMKSkgeworCQl3cml0ZV9sb2NrX3Ry
ZWUoaC0+dHJlZSk7CisJCS8qIGlmIHdlIGFyZSBnb2luZyB0byBsb2FkIHpub2RlIHJpZ2h0IG5v
dywgc2V0dXAKKwkJICAgLT5pbl9wYXJlbnQ6IGNvb3JkIHdoZXJlIHBvaW50ZXIgdG8gdGhpcyBu
b2RlIGlzIHN0b3JlZCBpbgorCQkgICBwYXJlbnQuCisJCSAqLworCQljb29yZF90b19wYXJlbnRf
Y29vcmQoaC0+Y29vcmQsICZhY3RpdmUtPmluX3BhcmVudCk7CisJCXdyaXRlX3VubG9ja190cmVl
KGgtPnRyZWUpOworCX0KKworCS8qIGNoZWNrIGNvbm5lY3RlZG5lc3Mgd2l0aG91dCBob2xkaW5n
IHRyZWUgbG9jay0tLWZhbHNlIG5lZ2F0aXZlcworCSAqIHdpbGwgYmUgcmUtY2hlY2tlZCBieSBj
b25uZWN0X3pub2RlKCksIGFuZCBmYWxzZSBwb3NpdGl2ZXMgYXJlCisJICogaW1wb3NzaWJsZS0t
LUBhY3RpdmUgY2Fubm90IHN1ZGRlbmx5IHR1cm4gaW50byB1bmNvbm5lY3RlZAorCSAqIHN0YXRl
LiAqLworCWlmICghem5vZGVfaXNfY29ubmVjdGVkKGFjdGl2ZSkpIHsKKwkJaC0+cmVzdWx0ID0g
Y29ubmVjdF96bm9kZShoLT5jb29yZCwgYWN0aXZlKTsKKwkJaWYgKHVubGlrZWx5KGgtPnJlc3Vs
dCAhPSAwKSkgeworCQkJcHV0X3BhcmVudChoKTsKKwkJCWdvdG8gZmFpbF9vcl9yZXN0YXJ0Owor
CQl9CisJfQorCisJamxvYWRfcHJlZmV0Y2goWkpOT0RFKGFjdGl2ZSkpOworCisJaWYgKHNldGRr
KQorCQl1cGRhdGVfc3RhbGVfZGsoaC0+dHJlZSwgYWN0aXZlKTsKKworCS8qIHB1dF9wYXJlbnQo
KSBjYW5ub3QgYmUgY2FsbGVkIGVhcmxpZXIsIGJlY2F1c2UgY29ubmVjdF96bm9kZSgpCisJICAg
YXNzdW1lcyBwYXJlbnQgbm9kZSBpcyByZWZlcmVuY2VkOyAqLworCXB1dF9wYXJlbnQoaCk7CisK
KwlpZiAoKCF6bm9kZV9jb250YWluc19rZXlfbG9jayhhY3RpdmUsIGgtPmtleSkgJiYKKwkgICAg
IChoLT5mbGFncyAmIENCS19UUlVTVF9ESykpCisJICAgIHx8IFpGX0lTU0VUKGFjdGl2ZSwgSk5P
REVfSEVBUkRfQkFOU0hFRSkpIHsKKwkJLyogMS4ga2V5IHdhcyBtb3ZlZCBvdXQgb2YgdGhpcyBu
b2RlIHdoaWxlIHRoaXMgdGhyZWFkIHdhcworCQkgICB3YWl0aW5nIGZvciB0aGUgbG9jay4gUmVz
dGFydC4gTW9yZSBlbGFib3JhdGUgc29sdXRpb24gaXMKKwkJICAgdG8gZGV0ZXJtaW5lIHdoZXJl
IGtleSBtb3ZlZCAodG8gdGhlIGxlZnQsIG9yIHRvIHRoZSByaWdodCkKKwkJICAgYW5kIHRyeSB0
byBmb2xsb3cgaXQgdGhyb3VnaCBzaWJsaW5nIHBvaW50ZXJzLgorCisJCSAgIDIuIG9yLCBub2Rl
IGl0c2VsZiBpcyBnb2luZyB0byBiZSByZW1vdmVkIGZyb20gdGhlCisJCSAgIHRyZWUuIFJlbGVh
c2UgbG9jayBhbmQgcmVzdGFydC4KKwkJICovCisJCWgtPnJlc3VsdCA9IC1FX1JFUEVBVDsKKwl9
CisJaWYgKGgtPnJlc3VsdCA9PSAtRV9SRVBFQVQpCisJCXJldHVybiBMT09LVVBfUkVTVDsKKwor
CWgtPnJlc3VsdCA9IHpsb2FkX3JhKGFjdGl2ZSwgaC0+cmFfaW5mbyk7CisJaWYgKGgtPnJlc3Vs
dCkKKwkJcmV0dXJuIExPT0tVUF9ET05FOworCisJLyogc2FuaXR5IGNoZWNrcyAqLworCWlmIChz
YW5pdHlfY2hlY2soaCkpIHsKKwkJenJlbHNlKGFjdGl2ZSk7CisJCXJldHVybiBMT09LVVBfRE9O
RTsKKwl9CisKKwkvKiBjaGVjayB0aGF0IGtleSBvZiBsZWZ0bW9zdCBpdGVtIGluIHRoZSBAYWN0
aXZlIGlzIHRoZSBzYW1lIGFzIGluCisJICogaXRzIHBhcmVudCAqLworCWlmIChsZGtleXNldCAm
JiAhbm9kZV9pc19lbXB0eShhY3RpdmUpICYmCisJICAgICFrZXllcShsZWZ0bW9zdF9rZXlfaW5f
bm9kZShhY3RpdmUsICZrZXkpLCAmbGRrZXkpKSB7CisJCXdhcm5pbmcoInZzLTM1MzMiLCAiS2V5
cyBhcmUgaW5jb25zaXN0ZW50LiBGc2NrPyIpOworCQlyZWlzZXI0X3ByaW50X2tleSgiaW5wYXJl
bnQiLCAmbGRrZXkpOworCQlyZWlzZXI0X3ByaW50X2tleSgiaW5jaGlsZCIsICZrZXkpOworCQlo
LT5yZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJCXpyZWxzZShhY3RpdmUpOworCQlyZXR1cm4gTE9P
S1VQX0RPTkU7CisJfQorCisJaWYgKGgtPm9iamVjdCAhPSBOVUxMKQorCQloYW5kbGVfdnJvb3Qo
aC0+b2JqZWN0LCBhY3RpdmUpOworCisJcmV0ID0gY2JrX25vZGVfbG9va3VwKGgpOworCisJLyog
aC0+YWN0aXZlX2xoLT5ub2RlIG1pZ2h0IGNoYW5nZSwgYnV0IGFjdGl2ZSBpcyB5ZXQgdG8gYmUg
enJlbHNlZCAqLworCXpyZWxzZShhY3RpdmUpOworCisJcmV0dXJuIHJldDsKKworZmFpbF9vcl9y
ZXN0YXJ0OgorCWlmIChoLT5yZXN1bHQgPT0gLUVfREVBRExPQ0spCisJCXJldHVybiBMT09LVVBf
UkVTVDsKKwlyZXR1cm4gTE9PS1VQX0RPTkU7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiBj
aGVjayBsZWZ0IGFuZCByaWdodCBkZWxpbWl0aW5nIGtleXMgb2YgYSB6bm9kZSAqLwordm9pZCBj
aGVja19ka2V5cyh6bm9kZSAqIG5vZGUpCit7CisJem5vZGUgKmxlZnQ7CisJem5vZGUgKnJpZ2h0
OworCisJcmVhZF9sb2NrX3RyZWUoY3VycmVudF90cmVlKTsKKwlyZWFkX2xvY2tfZGsoY3VycmVu
dF90cmVlKTsKKworCWFzc2VydCgidnMtMTcxMCIsIHpub2RlX2lzX2FueV9sb2NrZWQobm9kZSkp
OworCWFzc2VydCgidnMtMTE5NyIsCisJICAgICAgICFrZXlndCh6bm9kZV9nZXRfbGRfa2V5KG5v
ZGUpLCB6bm9kZV9nZXRfcmRfa2V5KG5vZGUpKSk7CisKKwlsZWZ0ID0gbm9kZS0+bGVmdDsKKwly
aWdodCA9IG5vZGUtPnJpZ2h0OworCisJaWYgKFpGX0lTU0VUKG5vZGUsIEpOT0RFX0xFRlRfQ09O
TkVDVEVEKSAmJiBaRl9JU1NFVChub2RlLCBKTk9ERV9ES1NFVCkKKwkgICAgJiYgbGVmdCAhPSBO
VUxMICYmIFpGX0lTU0VUKGxlZnQsIEpOT0RFX0RLU0VUKSkKKwkJLyogY2hlY2sgbGVmdCBuZWln
aGJvci4gTm90ZSB0aGF0IGxlZnQgbmVpZ2hib3IgaXMgbm90IGxvY2tlZCwKKwkJICAgc28gaXQg
bWlnaHQgZ2V0IHdyb25nIGRlbGltaXRpbmcga2V5cyB0aGVyZWZvcmUgKi8KKwkJYXNzZXJ0KCJ2
cy0xMTk4IiwKKwkJICAgICAgIChrZXllcSh6bm9kZV9nZXRfcmRfa2V5KGxlZnQpLCB6bm9kZV9n
ZXRfbGRfa2V5KG5vZGUpKQorCQkJfHwgWkZfSVNTRVQobGVmdCwgSk5PREVfSEVBUkRfQkFOU0hF
RSkpKTsKKworCWlmIChaRl9JU1NFVChub2RlLCBKTk9ERV9SSUdIVF9DT05ORUNURUQpICYmIFpG
X0lTU0VUKG5vZGUsIEpOT0RFX0RLU0VUKQorCSAgICAmJiByaWdodCAhPSBOVUxMICYmIFpGX0lT
U0VUKHJpZ2h0LCBKTk9ERV9ES1NFVCkpCisJCS8qIGNoZWNrIHJpZ2h0IG5laWdoYm9yLiBOb3Rl
IHRoYXQgcmlnaHQgbmVpZ2hib3IgaXMgbm90CisJCSAgIGxvY2tlZCwgc28gaXQgbWlnaHQgZ2V0
IHdyb25nIGRlbGltaXRpbmcga2V5cyB0aGVyZWZvcmUgICovCisJCWFzc2VydCgidnMtMTE5OSIs
CisJCSAgICAgICAoa2V5ZXEoem5vZGVfZ2V0X3JkX2tleShub2RlKSwgem5vZGVfZ2V0X2xkX2tl
eShyaWdodCkpCisJCQl8fCBaRl9JU1NFVChyaWdodCwgSk5PREVfSEVBUkRfQkFOU0hFRSkpKTsK
KworCXJlYWRfdW5sb2NrX2RrKGN1cnJlbnRfdHJlZSk7CisJcmVhZF91bmxvY2tfdHJlZShjdXJy
ZW50X3RyZWUpOworfQorI2VuZGlmCisKKy8qIHRydWUgaWYgQGtleSBpcyBsZWZ0IGRlbGltaXRp
bmcga2V5IG9mIEBub2RlICovCitzdGF0aWMgaW50IGtleV9pc19sZCh6bm9kZSAqIG5vZGUsIGNv
bnN0IHJlaXNlcjRfa2V5ICoga2V5KQoreworCWludCBsZDsKKworCWFzc2VydCgibmlraXRhLTE3
MTYiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE3NTgiLCBrZXkgIT0gTlVMTCk7
CisKKwlyZWFkX2xvY2tfZGsoem5vZGVfZ2V0X3RyZWUobm9kZSkpOworCWFzc2VydCgibmlraXRh
LTE3NTkiLCB6bm9kZV9jb250YWluc19rZXkobm9kZSwga2V5KSk7CisJbGQgPSBrZXllcSh6bm9k
ZV9nZXRfbGRfa2V5KG5vZGUpLCBrZXkpOworCXJlYWRfdW5sb2NrX2RrKHpub2RlX2dldF90cmVl
KG5vZGUpKTsKKwlyZXR1cm4gbGQ7Cit9CisKKy8qIFByb2Nlc3Mgb25lIG5vZGUgZHVyaW5nIHRy
ZWUgdHJhdmVyc2FsLgorCisgICBUaGlzIGlzIGNhbGxlZCBieSBjYmtfbGV2ZWxfbG9va3VwKCku
ICovCitzdGF0aWMgbGV2ZWxfbG9va3VwX3Jlc3VsdCBjYmtfbm9kZV9sb29rdXAoY2JrX2hhbmRs
ZSAqIGgvKiBzZWFyY2ggaGFuZGxlICovKQoreworCS8qIG5vZGUgcGx1Z2luIG9mIEBhY3RpdmUg
Ki8KKwlub2RlX3BsdWdpbiAqbnBsdWc7CisJLyogaXRlbSBwbHVnaW4gb2YgaXRlbSB0aGF0IHdh
cyBmb3VuZCAqLworCWl0ZW1fcGx1Z2luICppcGx1ZzsKKwkvKiBzZWFyY2ggYmlhcyAqLworCWxv
b2t1cF9iaWFzIG5vZGVfYmlhczsKKwkvKiBub2RlIHdlIGFyZSBvcGVyYXRpbmcgdXBvbiAqLwor
CXpub2RlICphY3RpdmU7CisJLyogdHJlZSB3ZSBhcmUgc2VhcmNoaW5nIGluICovCisJcmVpc2Vy
NF90cmVlICp0cmVlOworCS8qIHJlc3VsdCAqLworCWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5p
a2l0YS0zNzkiLCBoICE9IE5VTEwpOworCisJYWN0aXZlID0gaC0+YWN0aXZlX2xoLT5ub2RlOwor
CXRyZWUgPSBoLT50cmVlOworCisJbnBsdWcgPSBhY3RpdmUtPm5wbHVnOworCWFzc2VydCgibmlr
aXRhLTM4MCIsIG5wbHVnICE9IE5VTEwpOworCisJT05fREVCVUcoY2hlY2tfZGtleXMoYWN0aXZl
KSk7CisKKwkvKiByZXR1cm4gaXRlbSBmcm9tICJhY3RpdmUiIG5vZGUgd2l0aCBtYXhpbWFsIGtl
eSBub3QgZ3JlYXRlciB0aGFuCisJICAgImtleSIgICovCisJbm9kZV9iaWFzID0gaC0+YmlhczsK
KwlyZXN1bHQgPSBucGx1Zy0+bG9va3VwKGFjdGl2ZSwgaC0+a2V5LCBub2RlX2JpYXMsIGgtPmNv
b3JkKTsKKwlpZiAodW5saWtlbHkocmVzdWx0ICE9IE5TX0ZPVU5EICYmIHJlc3VsdCAhPSBOU19O
T1RfRk9VTkQpKSB7CisJCS8qIGVycm9yIG9jY3VycmVkICovCisJCWgtPnJlc3VsdCA9IHJlc3Vs
dDsKKwkJcmV0dXJuIExPT0tVUF9ET05FOworCX0KKwlpZiAoaC0+bGV2ZWwgPT0gaC0+c3RvcF9s
ZXZlbCkgeworCQkvKiB3ZWxjb21lIHRvIHRoZSBzdG9wIGxldmVsICovCisJCWFzc2VydCgibmlr
aXRhLTM4MSIsIGgtPmNvb3JkLT5ub2RlID09IGFjdGl2ZSk7CisJCWlmIChyZXN1bHQgPT0gTlNf
Rk9VTkQpIHsKKwkJCS8qIHN1Y2Nlc3Mgb2YgdHJlZSBsb29rdXAgKi8KKwkJCWlmICghKGgtPmZs
YWdzICYgQ0JLX1VOSVFVRSkKKwkJCSAgICAmJiBrZXlfaXNfbGQoYWN0aXZlLCBoLT5rZXkpKQor
CQkJCXJldHVybiBzZWFyY2hfdG9fbGVmdChoKTsKKwkJCWVsc2UKKwkJCQloLT5yZXN1bHQgPSBD
QktfQ09PUkRfRk9VTkQ7CisJCX0gZWxzZSB7CisJCQloLT5yZXN1bHQgPSBDQktfQ09PUkRfTk9U
Rk9VTkQ7CisJCX0KKwkJaWYgKCEoaC0+ZmxhZ3MgJiBDQktfSU5fQ0FDSEUpKQorCQkJY2JrX2Nh
Y2hlX2FkZChhY3RpdmUpOworCQlyZXR1cm4gTE9PS1VQX0RPTkU7CisJfQorCisJaWYgKGgtPmxl
dmVsID4gVFdJR19MRVZFTCAmJiByZXN1bHQgPT0gTlNfTk9UX0ZPVU5EKSB7CisJCWgtPmVycm9y
ID0gIm5vdCBmb3VuZCBvbiBpbnRlcm5hbCBub2RlIjsKKwkJaC0+cmVzdWx0ID0gcmVzdWx0Owor
CQlyZXR1cm4gTE9PS1VQX0RPTkU7CisJfQorCisJYXNzZXJ0KCJ2cy0zNjEiLCBoLT5sZXZlbCA+
IGgtPnN0b3BfbGV2ZWwpOworCisJaWYgKGhhbmRsZV9lb3R0bChoLCAmcmVzdWx0KSkgeworCQlh
c3NlcnQoInZzLTE2NzQiLCAocmVzdWx0ID09IExPT0tVUF9ET05FIHx8CisJCQkJICAgcmVzdWx0
ID09IExPT0tVUF9SRVNUKSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogZ28gZG93biB0
byBuZXh0IGxldmVsICovCisJY2hlY2tfbWUoInZzLTEyIiwgemxvYWQoaC0+Y29vcmQtPm5vZGUp
ID09IDApOworCWFzc2VydCgibmlraXRhLTIxMTYiLCBpdGVtX2lzX2ludGVybmFsKGgtPmNvb3Jk
KSk7CisJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChoLT5jb29yZCk7CisJaXBsdWctPnMu
aW50ZXJuYWwuZG93bl9saW5rKGgtPmNvb3JkLCBoLT5rZXksICZoLT5ibG9jayk7CisJenJlbHNl
KGgtPmNvb3JkLT5ub2RlKTsKKwktLWgtPmxldmVsOworCXJldHVybiBMT09LVVBfQ09OVDsJLyog
Y29udGludWUgKi8KK30KKworLyogc2NhbiBjYmtfY2FjaGUgc2xvdHMgbG9va2luZyBmb3IgYSBt
YXRjaCBmb3IgQGggKi8KK3N0YXRpYyBpbnQgY2JrX2NhY2hlX3NjYW5fc2xvdHMoY2JrX2hhbmRs
ZSAqIGgvKiBjYmsgaGFuZGxlICovKQoreworCWxldmVsX2xvb2t1cF9yZXN1bHQgbGxyOworCXpu
b2RlICpub2RlOworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKwljYmtfY2FjaGVfc2xvdCAqc2xvdDsK
KwljYmtfY2FjaGUgKmNhY2hlOworCXRyZWVfbGV2ZWwgbGV2ZWw7CisJaW50IGlzdW5pcXVlOwor
CWNvbnN0IHJlaXNlcjRfa2V5ICprZXk7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRh
LTEzMTciLCBoICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEzMTUiLCBoLT50cmVlICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTEzMTYiLCBoLT5rZXkgIT0gTlVMTCk7CisKKwl0cmVlID0g
aC0+dHJlZTsKKwljYWNoZSA9ICZ0cmVlLT5jYmtfY2FjaGU7CisJaWYgKGNhY2hlLT5ucl9zbG90
cyA9PSAwKQorCQkvKiBzaXplIG9mIGNiayBjYWNoZSB3YXMgc2V0IHRvIDAgYnkgbW91bnQgdGlt
ZSBvcHRpb24uICovCisJCXJldHVybiBSRVRFUlIoLUVOT0VOVCk7CisKKwlhc3NlcnQoIm5pa2l0
YS0yNDc0IiwgY2JrX2NhY2hlX2ludmFyaWFudChjYWNoZSkpOworCW5vZGUgPSBOVUxMOwkJLyog
dG8ga2VlcCBnY2MgaGFwcHkgKi8KKwlsZXZlbCA9IGgtPmxldmVsOworCWtleSA9IGgtPmtleTsK
Kwlpc3VuaXF1ZSA9IGgtPmZsYWdzICYgQ0JLX1VOSVFVRTsKKwlyZXN1bHQgPSBSRVRFUlIoLUVO
T0VOVCk7CisKKwkvKgorCSAqIHRoaXMgaXMgdGltZS1jcml0aWNhbCBmdW5jdGlvbiBhbmQgZHJh
Z29ucyBoYWQsIGhlbmNlLCBiZWVuIHNldHRsZWQKKwkgKiBoZXJlLgorCSAqCisJICogTG9vcCBi
ZWxvdyBzY2FucyBjYmsgY2FjaGUgc2xvdHMgdHJ5aW5nIHRvIGZpbmQgbWF0Y2hpbmcgbm9kZSB3
aXRoCisJICogc3VpdGFibGUgcmFuZ2Ugb2YgZGVsaW1pdGluZyBrZXlzIGFuZCBsb2NhdGVkIGF0
IHRoZSBoLT5sZXZlbC4KKwkgKgorCSAqIFNjYW4gaXMgZG9uZSB1bmRlciBjYmsgY2FjaGUgc3Bp
biBsb2NrIHRoYXQgcHJvdGVjdHMgc2xvdC0+bm9kZQorCSAqIHBvaW50ZXJzLiBJZiBzdWl0YWJs
ZSBub2RlIGlzIGZvdW5kIHdlIHdhbnQgdG8gcGluIGl0IGluCisJICogbWVtb3J5LiBCdXQgc2xv
dC0+bm9kZSBjYW4gcG9pbnQgdG8gdGhlIG5vZGUgd2l0aCB4X2NvdW50IDAKKwkgKiAodW5yZWZl
cmVuY2VkKS4gU3VjaCBub2RlIGNhbiBiZSByZWN5Y2xlZCBhdCBhbnkgbW9tZW50LCBvciBjYW4K
KwkgKiBhbHJlYWR5IGJlIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIHJlY3ljbGVkICh3aXRoaW4g
anB1dCgpKS4KKwkgKgorCSAqIEFzIHdlIGZvdW5kIG5vZGUgaW4gdGhlIGNiayBjYWNoZSwgaXQg
bWVhbnMgdGhhdCBqcHV0KCkgaGFzbid0IHlldAorCSAqIGNhbGxlZCBjYmtfY2FjaGVfaW52YWxp
ZGF0ZSgpLgorCSAqCisJICogV2UgYWNxdWlyZSByZWZlcmVuY2UgdG8gdGhlIG5vZGUgd2l0aG91
dCBob2xkaW5nIHRyZWUgbG9jaywgYW5kCisJICogbGF0ZXIsIGNoZWNrIG5vZGUncyBSSVAgYml0
LiBUaGlzIGF2b2lkcyByYWNlcyB3aXRoIGpwdXQoKS4KKwkgKi8KKworCXJjdV9yZWFkX2xvY2so
KTsKKwlyZWFkX2xvY2soJigoY2JrX2NhY2hlICopY2FjaGUpLT5ndWFyZCk7CisKKwlzbG90ID0g
bGlzdF9lbnRyeShjYWNoZS0+bHJ1Lm5leHQsIGNia19jYWNoZV9zbG90LCBscnUpOworCXNsb3Qg
PSBsaXN0X2VudHJ5KHNsb3QtPmxydS5wcmV2LCBjYmtfY2FjaGVfc2xvdCwgbHJ1KTsKKwlCVUdf
T04oJnNsb3QtPmxydSAhPSAmY2FjaGUtPmxydSk7Lyo/Pz8/Ki8KKwl3aGlsZSAoMSkgeworCisJ
CXNsb3QgPSBsaXN0X2VudHJ5KHNsb3QtPmxydS5uZXh0LCBjYmtfY2FjaGVfc2xvdCwgbHJ1KTsK
KworCQlpZiAoJmNhY2hlLT5scnUgIT0gJnNsb3QtPmxydSkKKwkJCW5vZGUgPSBzbG90LT5ub2Rl
OworCQllbHNlCisJCQlub2RlID0gTlVMTDsKKworCQlpZiAodW5saWtlbHkobm9kZSA9PSBOVUxM
KSkKKwkJCWJyZWFrOworCisJCS8qCisJCSAqIHRoaXMgaXMgKGhvcGVmdWxseSkgdGhlIG9ubHkg
cGxhY2UgaW4gdGhlIGNvZGUgd2hlcmUgd2UgYXJlCisJCSAqIHdvcmtpbmcgd2l0aCBkZWxpbWl0
aW5nIGtleXMgd2l0aG91dCBob2xkaW5nIGRrIGxvY2suIFRoaXMKKwkJICogaXMgZmluZSBoZXJl
LCBiZWNhdXNlIHRoaXMgaXMgb25seSAiZ3Vlc3MiIGFueXdheS0tLWtleXMKKwkJICogYXJlIHJl
Y2hlY2tlZCB1bmRlciBkayBsb2NrIGJlbG93LgorCQkgKi8KKwkJaWYgKHpub2RlX2dldF9sZXZl
bChub2RlKSA9PSBsZXZlbCAmJgorCQkgICAgLyogcmVpc2VyNF9taW5fa2V5IDwga2V5IDwgcmVp
c2VyNF9tYXhfa2V5ICovCisJCSAgICB6bm9kZV9jb250YWluc19rZXlfc3RyaWN0KG5vZGUsIGtl
eSwgaXN1bmlxdWUpKSB7CisJCQl6cmVmKG5vZGUpOworCQkJcmVzdWx0ID0gMDsKKwkJCXNwaW5f
bG9ja19wcmVmZXRjaCgmdHJlZS0+dHJlZV9sb2NrKTsKKwkJCWJyZWFrOworCQl9CisJfQorCXJl
YWRfdW5sb2NrKCYoKGNia19jYWNoZSAqKWNhY2hlKS0+Z3VhcmQpOworCisJYXNzZXJ0KCJuaWtp
dGEtMjQ3NSIsIGNia19jYWNoZV9pbnZhcmlhbnQoY2FjaGUpKTsKKworCWlmICh1bmxpa2VseShy
ZXN1bHQgPT0gMCAmJiBaRl9JU1NFVChub2RlLCBKTk9ERV9SSVApKSkKKwkJcmVzdWx0ID0gLUVO
T0VOVDsKKworCXJjdV9yZWFkX3VubG9jaygpOworCisJaWYgKHJlc3VsdCAhPSAwKSB7CisJCWgt
PnJlc3VsdCA9IENCS19DT09SRF9OT1RGT1VORDsKKwkJcmV0dXJuIFJFVEVSUigtRU5PRU5UKTsK
Kwl9CisKKwlyZXN1bHQgPQorCSAgICBsb25ndGVybV9sb2NrX3pub2RlKGgtPmFjdGl2ZV9saCwg
bm9kZSwgY2JrX2xvY2tfbW9kZShsZXZlbCwgaCksCisJCQkJWk5PREVfTE9DS19MT1BSSSk7CisJ
enB1dChub2RlKTsKKwlpZiAocmVzdWx0ICE9IDApCisJCXJldHVybiByZXN1bHQ7CisJcmVzdWx0
ID0gemxvYWQobm9kZSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0OworCisJ
LyogcmVjaGVjayBrZXlzICovCisJcmVhZF9sb2NrX2RrKHRyZWUpOworCXJlc3VsdCA9ICh6bm9k
ZV9jb250YWluc19rZXlfc3RyaWN0KG5vZGUsIGtleSwgaXN1bmlxdWUpICYmCisJCSFaRl9JU1NF
VChub2RlLCBKTk9ERV9IRUFSRF9CQU5TSEVFKSk7CisJcmVhZF91bmxvY2tfZGsodHJlZSk7CisJ
aWYgKHJlc3VsdCkgeworCQkvKiBkbyBsb29rdXAgaW5zaWRlIG5vZGUgKi8KKwkJbGxyID0gY2Jr
X25vZGVfbG9va3VwKGgpOworCQkvKiBpZiBjYmtfbm9kZV9sb29rdXAoKSB3YW5kZXJlZCB0byBh
bm90aGVyIG5vZGUgKGR1ZSB0byBlb3R0bAorCQkgICBvciBub24tdW5pcXVlIGtleXMpLCBhZGp1
c3QgQG5vZGUgKi8KKwkJLypub2RlID0gaC0+YWN0aXZlX2xoLT5ub2RlOyAqLworCisJCWlmIChs
bHIgIT0gTE9PS1VQX0RPTkUpIHsKKwkJCS8qIHJlc3RhcnQgb3IgY29udGludWUgb24gdGhlIG5l
eHQgbGV2ZWwgKi8KKwkJCXJlc3VsdCA9IFJFVEVSUigtRU5PRU5UKTsKKwkJfSBlbHNlIGlmIChJ
U19DQktFUlIoaC0+cmVzdWx0KSkKKwkJCS8qIGlvIG9yIG9vbSAqLworCQkJcmVzdWx0ID0gUkVU
RVJSKC1FTk9FTlQpOworCQllbHNlIHsKKwkJCS8qIGdvb2QuIEVpdGhlciBpdGVtIGZvdW5kIG9y
IGRlZmluaXRlbHkgbm90IGZvdW5kLiAqLworCQkJcmVzdWx0ID0gMDsKKworCQkJd3JpdGVfbG9j
aygmKGNhY2hlLT5ndWFyZCkpOworCQkJaWYgKHNsb3QtPm5vZGUgPT0gaC0+YWN0aXZlX2xoLT5u
b2RlKSB7CisJCQkJLyogaWYgdGhpcyBub2RlIGlzIHN0aWxsIGluIGNiayBjYWNoZS0tLW1vdmUK
KwkJCQkgICBpdHMgc2xvdCB0byB0aGUgaGVhZCBvZiB0aGUgTFJVIGxpc3QuICovCisJCQkJbGlz
dF9tb3ZlKCZzbG90LT5scnUsICZjYWNoZS0+bHJ1KTsKKwkJCX0KKwkJCXdyaXRlX3VubG9jaygm
KGNhY2hlLT5ndWFyZCkpOworCQl9CisJfSBlbHNlIHsKKwkJLyogcmFjZS4gV2hpbGUgdGhpcyB0
aHJlYWQgd2FzIHdhaXRpbmcgZm9yIHRoZSBsb2NrLCBub2RlIHdhcworCQkgICByZWJhbGFuY2Vk
IGFuZCBpdGVtIHdlIGFyZSBsb29raW5nIGZvciwgc2hpZnRlZCBvdXQgb2YgaXQKKwkJICAgKGlm
IGl0IGV2ZXIgd2FzIGhlcmUpLgorCisJCSAgIENvbnRpbnVpbmcgc2Nhbm5pbmcgaXMgYWxtb3N0
IGhvcGVsZXNzOiBub2RlIGtleSByYW5nZSB3YXMKKwkJICAgbW92ZWQgdG8sIGlzIGFsbW9zdCBj
ZXJ0YWlubHkgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgTFJVCisJCSAgIGxpc3QgYXQgdGhpcyB0
aW1lLCBiZWNhdXNlIGl0J3MgaG90LCBidXQgcmVzdGFydGluZworCQkgICBzY2FubmluZyBmcm9t
IHRoZSB2ZXJ5IGJlZ2lubmluZyBpcyBjb21wbGV4LiBKdXN0IHJldHVybiwKKwkJICAgc28gdGhh
dCBjYmsoKSB3aWxsIGJlIHBlcmZvcm1lZC4gVGhpcyBpcyBub3QgdGhhdAorCQkgICBpbXBvcnRh
bnQsIGJlY2F1c2Ugc3VjaCByYWNlcyBzaG91bGQgYmUgcmFyZS4gQXJlIHRoZXk/CisJCSAqLwor
CQlyZXN1bHQgPSBSRVRFUlIoLUVOT0VOVCk7CS8qIC1FUkFVR0hUICovCisJfQorCXpyZWxzZShu
b2RlKTsKKwlhc3NlcnQoIm5pa2l0YS0yNDc2IiwgY2JrX2NhY2hlX2ludmFyaWFudChjYWNoZSkp
OworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGxvb2sgZm9yIGl0ZW0gd2l0aCBnaXZlbiBrZXkg
aW4gdGhlIGNvb3JkIGNhY2hlCisKKyAgIFRoaXMgZnVuY3Rpb24sIGNhbGxlZCBieSBjb29yZF9i
eV9rZXkoKSwgc2NhbnMgImNvb3JkIGNhY2hlIiAoJmNia19jYWNoZSkKKyAgIHdoaWNoIGlzIGEg
c21hbGwgTFJVIGxpc3Qgb2Ygem5vZGVzIGFjY2Vzc2VkIGxhdGVseS4gRm9yIGVhY2ggem5vZGUg
aW4KKyAgIHpub2RlIGluIHRoaXMgbGlzdCwgaXQgY2hlY2tzIHdoZXRoZXIga2V5IHdlIGFyZSBs
b29raW5nIGZvciBmaXRzIGludG8ga2V5CisgICByYW5nZSBjb3ZlcmVkIGJ5IHRoaXMgbm9kZS4g
SWYgc28sIGFuZCBpbiBhZGRpdGlvbiwgbm9kZSBsaWVzIGF0IGFsbG93ZWQKKyAgIGxldmVsICh0
aGlzIGlzIHRvIGhhbmRsZSBleHRlbnRzIG9uIGEgdHdpZyBsZXZlbCksIG5vZGUgaXMgbG9ja2Vk
LCBhbmQKKyAgIGxvb2t1cCBpbnNpZGUgaXQgaXMgcGVyZm9ybWVkLgorCisgICB3ZSBuZWVkIGEg
bWVhc3VyZW1lbnQgb2YgdGhlIGNvc3Qgb2YgdGhpcyBjYWNoZSBzZWFyY2ggY29tcGFyZWQgdG8g
dGhlIGNvc3QKKyAgIG9mIGNvb3JkX2J5X2tleS4KKworKi8KK3N0YXRpYyBpbnQgY2JrX2NhY2hl
X3NlYXJjaChjYmtfaGFuZGxlICogaC8qIGNiayBoYW5kbGUgKi8pCit7CisJaW50IHJlc3VsdCA9
IDA7CisJdHJlZV9sZXZlbCBsZXZlbDsKKworCS8qIGFkZCBDQktfSU5fQ0FDSEUgdG8gdGhlIGhh
bmRsZSBmbGFncy4gVGhpcyBtZWFucyB0aGF0CisJICogY2JrX25vZGVfbG9va3VwKCkgYXNzdW1l
cyB0aGF0IGNia19jYWNoZSBpcyBzY2FubmVkIGFuZCB3b3VsZCBhZGQKKwkgKiBmb3VuZCBub2Rl
IHRvIHRoZSBjYWNoZS4gKi8KKwloLT5mbGFncyB8PSBDQktfSU5fQ0FDSEU7CisJZm9yIChsZXZl
bCA9IGgtPnN0b3BfbGV2ZWw7IGxldmVsIDw9IGgtPmxvY2tfbGV2ZWw7ICsrbGV2ZWwpIHsKKwkJ
aC0+bGV2ZWwgPSBsZXZlbDsKKwkJcmVzdWx0ID0gY2JrX2NhY2hlX3NjYW5fc2xvdHMoaCk7CisJ
CWlmIChyZXN1bHQgIT0gMCkgeworCQkJZG9uZV9saChoLT5hY3RpdmVfbGgpOworCQkJZG9uZV9s
aChoLT5wYXJlbnRfbGgpOworCQl9IGVsc2UgeworCQkJYXNzZXJ0KCJuaWtpdGEtMTMxOSIsICFJ
U19DQktFUlIoaC0+cmVzdWx0KSk7CisJCQlicmVhazsKKwkJfQorCX0KKwloLT5mbGFncyAmPSB+
Q0JLX0lOX0NBQ0hFOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHR5cGUgb2YgbG9jayB3ZSB3
YW50IHRvIG9idGFpbiBkdXJpbmcgdHJlZSB0cmF2ZXJzYWwuIE9uIHN0b3AgbGV2ZWwKKyAgICB3
ZSB3YW50IHR5cGUgb2YgbG9jayB1c2VyIGFza2VkIGZvciwgb24gdXBwZXIgbGV2ZWxzOiByZWFk
IGxvY2suICovCit6bm9kZV9sb2NrX21vZGUgY2JrX2xvY2tfbW9kZSh0cmVlX2xldmVsIGxldmVs
LCBjYmtfaGFuZGxlICogaCkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zODIiLCBoICE9IE5VTEwpOwor
CisJcmV0dXJuIChsZXZlbCA8PSBoLT5sb2NrX2xldmVsKSA/IGgtPmxvY2tfbW9kZSA6IFpOT0RF
X1JFQURfTE9DSzsKK30KKworLyogdXBkYXRlIG91dGRhdGVkIGRlbGltaXRpbmcga2V5cyAqLwor
c3RhdGljIHZvaWQgc3RhbGVfZGsocmVpc2VyNF90cmVlICogdHJlZSwgem5vZGUgKiBub2RlKQor
eworCXpub2RlICpyaWdodDsKKworCXJlYWRfbG9ja190cmVlKHRyZWUpOworCXdyaXRlX2xvY2tf
ZGsodHJlZSk7CisJcmlnaHQgPSBub2RlLT5yaWdodDsKKworCWlmIChaRl9JU1NFVChub2RlLCBK
Tk9ERV9SSUdIVF9DT05ORUNURUQpICYmCisJICAgIHJpZ2h0ICYmIFpGX0lTU0VUKHJpZ2h0LCBK
Tk9ERV9ES1NFVCkgJiYKKwkgICAgIWtleWVxKHpub2RlX2dldF9yZF9rZXkobm9kZSksIHpub2Rl
X2dldF9sZF9rZXkocmlnaHQpKSkKKwkJem5vZGVfc2V0X3JkX2tleShub2RlLCB6bm9kZV9nZXRf
bGRfa2V5KHJpZ2h0KSk7CisKKwl3cml0ZV91bmxvY2tfZGsodHJlZSk7CisJcmVhZF91bmxvY2tf
dHJlZSh0cmVlKTsKK30KKworLyogY2hlY2sgZm9yIHBvc3NpYmx5IG91dGRhdGVkIGRlbGltaXRp
bmcga2V5cywgYW5kIHVwZGF0ZSB0aGVtIGlmCisgKiBuZWNlc3NhcnkuICovCitzdGF0aWMgdm9p
ZCB1cGRhdGVfc3RhbGVfZGsocmVpc2VyNF90cmVlICogdHJlZSwgem5vZGUgKiBub2RlKQorewor
CXpub2RlICpyaWdodDsKKwlyZWlzZXI0X2tleSByZDsKKworCXJlYWRfbG9ja190cmVlKHRyZWUp
OworCXJlYWRfbG9ja19kayh0cmVlKTsKKwlyZCA9ICp6bm9kZV9nZXRfcmRfa2V5KG5vZGUpOwor
CXJpZ2h0ID0gbm9kZS0+cmlnaHQ7CisJaWYgKHVubGlrZWx5KFpGX0lTU0VUKG5vZGUsIEpOT0RF
X1JJR0hUX0NPTk5FQ1RFRCkgJiYKKwkJICAgICByaWdodCAmJiBaRl9JU1NFVChyaWdodCwgSk5P
REVfREtTRVQpICYmCisJCSAgICAgIWtleWVxKCZyZCwgem5vZGVfZ2V0X2xkX2tleShyaWdodCkp
KSkgeworCQlhc3NlcnQoIm5pa2l0YS0zODIxMSIsIFpGX0lTU0VUKG5vZGUsIEpOT0RFX0RLU0VU
KSk7CisJCXJlYWRfdW5sb2NrX2RrKHRyZWUpOworCQlyZWFkX3VubG9ja190cmVlKHRyZWUpOwor
CQlzdGFsZV9kayh0cmVlLCBub2RlKTsKKwkJcmV0dXJuOworCX0KKwlyZWFkX3VubG9ja19kayh0
cmVlKTsKKwlyZWFkX3VubG9ja190cmVlKHRyZWUpOworfQorCisvKgorICogaGFuZGxlIHNlYXJj
aGVzIGEgdGhlIG5vbi11bmlxdWUga2V5LgorICoKKyAqIFN1cHBvc2UgdGhhdCB3ZSBhcmUgbG9v
a2luZyBmb3IgYW4gaXRlbSB3aXRoIHBvc3NpYmx5IG5vbi11bmlxdWUga2V5IDEwMC4KKyAqCisg
KiBSb290IG5vZGUgY29udGFpbnMgdHdvIHBvaW50ZXJzOiBvbmUgdG8gYSBub2RlIHdpdGggbGVm
dCBkZWxpbWl0aW5nIGtleSAwLAorICogYW5kIGFub3RoZXIgdG8gYSBub2RlIHdpdGggbGVmdCBk
ZWxpbWl0aW5nIGtleSAxMDAuIEl0ZW0gd2UgaW50ZXJlc3RlZCBpbgorICogbWF5IHdlbGwgaGFw
cGVuIGluIHRoZSBzdWItdHJlZSByb290ZWQgYXQgdGhlIGZpcnN0IHBvaW50ZXIuCisgKgorICog
VG8gaGFuZGxlIHRoaXMgc2VhcmNoX3RvX2xlZnQoKSBpcyBjYWxsZWQgd2hlbiBzZWFyY2ggcmVh
Y2hlcyBzdG9wCisgKiBsZXZlbC4gVGhpcyBmdW5jdGlvbiBjaGVja3MgaXQgaXMgX3Bvc3NpYmxl
XyB0aGF0IGl0ZW0gd2UgYXJlIGxvb2tpbmcgZm9yCisgKiBpcyBpbiB0aGUgbGVmdCBuZWlnaGJv
ciAodGhpcyBjYW4gYmUgZG9uZSBieSBjb21wYXJpbmcgZGVsaW1pdGluZyBrZXlzKSBhbmQKKyAq
IGlmIHNvLCB0cmllcyB0byBsb2NrIGxlZnQgbmVpZ2hib3IgKHRoaXMgaXMgbG93IHByaW9yaXR5
IGxvY2ssIHNvIGl0IGNhbgorICogZGVhZGxvY2ssIHRyZWUgdHJhdmVyc2FsIGlzIGp1c3QgcmVz
dGFydGVkIGlmIGl0IGRpZCkgYW5kIHRoZW4gY2hlY2tzCisgKiB3aGV0aGVyIGxlZnQgbmVpZ2hi
b3IgYWN0dWFsbHkgY29udGFpbnMgaXRlbXMgd2l0aCBvdXIga2V5LgorICoKKyAqIE5vdGUgdGhh
dCB0aGlzIGlzIGRvbmUgb24gdGhlIHN0b3AgbGV2ZWwgb25seS4gSXQgaXMgcG9zc2libGUgdG8g
dHJ5IHN1Y2gKKyAqIGxlZnQtY2hlY2sgb24gZWFjaCBsZXZlbCwgYnV0IGFzIGR1cGxpY2F0ZSBr
ZXlzIGFyZSBzdXBwb3NlZCB0byBiZSByYXJlCisgKiAodmVyeSB1bmxpa2VseSB0aGF0IG1vcmUg
dGhhbiBvbmUgbm9kZSBpcyBjb21wbGV0ZWx5IGZpbGxlZCB3aXRoIGl0ZW1zIHdpdGgKKyAqIGR1
cGxpY2F0ZSBrZXlzKSwgaXQgc2lzIGNoZWFwZXIgdG8gc2NhbiB0byB0aGUgbGVmdCBvbiB0aGUg
c3RvcCBsZXZlbCBvbmNlLgorICoKKyAqLworc3RhdGljIGxldmVsX2xvb2t1cF9yZXN1bHQgc2Vh
cmNoX3RvX2xlZnQoY2JrX2hhbmRsZSAqIGgvKiBzZWFyY2ggaGFuZGxlICovKQoreworCWxldmVs
X2xvb2t1cF9yZXN1bHQgcmVzdWx0OworCWNvb3JkX3QgKmNvb3JkOworCXpub2RlICpub2RlOwor
CXpub2RlICpuZWlnaGJvcjsKKworCWxvY2tfaGFuZGxlIGxoOworCisJYXNzZXJ0KCJuaWtpdGEt
MTc2MSIsIGggIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTc2MiIsIGgtPmxldmVsID09IGgt
PnN0b3BfbGV2ZWwpOworCisJaW5pdF9saCgmbGgpOworCWNvb3JkID0gaC0+Y29vcmQ7CisJbm9k
ZSA9IGgtPmFjdGl2ZV9saC0+bm9kZTsKKwlhc3NlcnQoIm5pa2l0YS0xNzYzIiwgY29vcmRfaXNf
bGVmdG1vc3RfdW5pdChjb29yZCkpOworCisJaC0+cmVzdWx0ID0KKwkgICAgcmVpc2VyNF9nZXRf
bGVmdF9uZWlnaGJvcigmbGgsIG5vZGUsIChpbnQpaC0+bG9ja19tb2RlLAorCQkJCSAgICAgIEdO
X0NBTl9VU0VfVVBQRVJfTEVWRUxTKTsKKwluZWlnaGJvciA9IE5VTEw7CisJc3dpdGNoIChoLT5y
ZXN1bHQpIHsKKwljYXNlIC1FX0RFQURMT0NLOgorCQlyZXN1bHQgPSBMT09LVVBfUkVTVDsKKwkJ
YnJlYWs7CisJY2FzZSAwOnsKKwkJCW5vZGVfcGx1Z2luICpucGx1ZzsKKwkJCWNvb3JkX3QgY3Jk
OworCQkJbG9va3VwX2JpYXMgYmlhczsKKworCQkJbmVpZ2hib3IgPSBsaC5ub2RlOworCQkJaC0+
cmVzdWx0ID0gemxvYWQobmVpZ2hib3IpOworCQkJaWYgKGgtPnJlc3VsdCAhPSAwKSB7CisJCQkJ
cmVzdWx0ID0gTE9PS1VQX0RPTkU7CisJCQkJYnJlYWs7CisJCQl9CisKKwkJCW5wbHVnID0gbmVp
Z2hib3ItPm5wbHVnOworCisJCQljb29yZF9pbml0X3plcm8oJmNyZCk7CisJCQliaWFzID0gaC0+
YmlhczsKKwkJCWgtPmJpYXMgPSBGSU5EX0VYQUNUOworCQkJaC0+cmVzdWx0ID0KKwkJCSAgICBu
cGx1Zy0+bG9va3VwKG5laWdoYm9yLCBoLT5rZXksIGgtPmJpYXMsICZjcmQpOworCQkJaC0+Ymlh
cyA9IGJpYXM7CisKKwkJCWlmIChoLT5yZXN1bHQgPT0gTlNfTk9UX0ZPVU5EKSB7CisJY2FzZSAt
RV9OT19ORUlHSEJPUjoKKwkJCQloLT5yZXN1bHQgPSBDQktfQ09PUkRfRk9VTkQ7CisJCQkJaWYg
KCEoaC0+ZmxhZ3MgJiBDQktfSU5fQ0FDSEUpKQorCQkJCQljYmtfY2FjaGVfYWRkKG5vZGUpOwor
CWRlZmF1bHQ6CQkvKiBzb21lIG90aGVyIGVycm9yICovCisJCQkJcmVzdWx0ID0gTE9PS1VQX0RP
TkU7CisJCQl9IGVsc2UgaWYgKGgtPnJlc3VsdCA9PSBOU19GT1VORCkgeworCQkJCXJlYWRfbG9j
a19kayh6bm9kZV9nZXRfdHJlZShuZWlnaGJvcikpOworCQkJCWgtPnJkX2tleSA9ICp6bm9kZV9n
ZXRfbGRfa2V5KG5vZGUpOworCQkJCWxlZnRtb3N0X2tleV9pbl9ub2RlKG5laWdoYm9yLCAmaC0+
bGRfa2V5KTsKKwkJCQlyZWFkX3VubG9ja19kayh6bm9kZV9nZXRfdHJlZShuZWlnaGJvcikpOwor
CQkJCWgtPmZsYWdzIHw9IENCS19ES1NFVDsKKworCQkJCWgtPmJsb2NrID0gKnpub2RlX2dldF9i
bG9jayhuZWlnaGJvcik7CisJCQkJLyogY2xlYXIgY29vcmQtPm5vZGUgc28gdGhhdCBjYmtfbGV2
ZWxfbG9va3VwKCkKKwkJCQkgICB3b3VsZG4ndCBvdmVyd3JpdGUgcGFyZW50IGhpbnQgaW4gbmVp
Z2hib3IuCisKKwkJCQkgICBQYXJlbnQgaGludCB3YXMgc2V0IHVwIGJ5CisJCQkJICAgcmVpc2Vy
NF9nZXRfbGVmdF9uZWlnaGJvcigpCisJCQkJICovCisJCQkJLyogRklYTUU6IHdoeSBkbyB3ZSBo
YXZlIHRvIHNwaW5sb2NrIGhlcmU/ICovCisJCQkJd3JpdGVfbG9ja190cmVlKHpub2RlX2dldF90
cmVlKG5laWdoYm9yKSk7CisJCQkJaC0+Y29vcmQtPm5vZGUgPSBOVUxMOworCQkJCXdyaXRlX3Vu
bG9ja190cmVlKHpub2RlX2dldF90cmVlKG5laWdoYm9yKSk7CisJCQkJcmVzdWx0ID0gTE9PS1VQ
X0NPTlQ7CisJCQl9IGVsc2UgeworCQkJCXJlc3VsdCA9IExPT0tVUF9ET05FOworCQkJfQorCQkJ
aWYgKG5laWdoYm9yICE9IE5VTEwpCisJCQkJenJlbHNlKG5laWdoYm9yKTsKKwkJfQorCX0KKwlk
b25lX2xoKCZsaCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogZGVidWdnaW5nIGFpZDogcmV0
dXJuIHN5bWJvbGljIG5hbWUgb2Ygc2VhcmNoIGJpYXMgKi8KK3N0YXRpYyBjb25zdCBjaGFyICpi
aWFzX25hbWUobG9va3VwX2JpYXMgYmlhcy8qIGJpYXMgdG8gZ2V0IG5hbWUgb2YgKi8pCit7CisJ
aWYgKGJpYXMgPT0gRklORF9FWEFDVCkKKwkJcmV0dXJuICJleGFjdCI7CisJZWxzZSBpZiAoYmlh
cyA9PSBGSU5EX01BWF9OT1RfTU9SRV9USEFOKQorCQlyZXR1cm4gImxlZnQtc2xhbnQiOworLyog
CWVsc2UgaWYoIGJpYXMgPT0gUklHSFRfU0xBTlRfQklBUyApICovCisvKiAJCXJldHVybiAicmln
aHQtYmlhcyI7ICovCisJZWxzZSB7CisJCXN0YXRpYyBjaGFyIGJ1ZlszMF07CisKKwkJc3ByaW50
ZihidWYsICJ1bmtub3duOiAlaSIsIGJpYXMpOworCQlyZXR1cm4gYnVmOworCX0KK30KKworI2lm
IFJFSVNFUjRfREVCVUcKKy8qIGRlYnVnZ2luZyBhaWQ6IHByaW50IGh1bWFuIHJlYWRhYmxlIGlu
Zm9ybWF0aW9uIGFib3V0IEBwICovCit2b2lkIHByaW50X2Nvb3JkX2NvbnRlbnQoY29uc3QgY2hh
ciAqcHJlZml4IC8qIHByZWZpeCB0byBwcmludCAqLyAsCisJCQkgY29vcmRfdCAqcC8qIGNvb3Jk
IHRvIHByaW50ICovKQoreworCXJlaXNlcjRfa2V5IGtleTsKKworCWlmIChwID09IE5VTEwpIHsK
KwkJcHJpbnRrKCIlczogbnVsbFxuIiwgcHJlZml4KTsKKwkJcmV0dXJuOworCX0KKwlpZiAoKHAt
Pm5vZGUgIT0gTlVMTCkgJiYgem5vZGVfaXNfbG9hZGVkKHAtPm5vZGUpCisJICAgICYmIGNvb3Jk
X2lzX2V4aXN0aW5nX2l0ZW0ocCkpCisJCXByaW50aygiJXM6IGRhdGE6ICVwLCBsZW5ndGg6ICVp
XG4iLCBwcmVmaXgsCisJCSAgICAgICBpdGVtX2JvZHlfYnlfY29vcmQocCksIGl0ZW1fbGVuZ3Ro
X2J5X2Nvb3JkKHApKTsKKwlpZiAoem5vZGVfaXNfbG9hZGVkKHAtPm5vZGUpKSB7CisJCWl0ZW1f
a2V5X2J5X2Nvb3JkKHAsICZrZXkpOworCQlyZWlzZXI0X3ByaW50X2tleShwcmVmaXgsICZrZXkp
OworCX0KK30KKworLyogZGVidWdnaW5nIGFpZDogcHJpbnQgaHVtYW4gcmVhZGFibGUgaW5mb3Jt
YXRpb24gYWJvdXQgQGJsb2NrICovCit2b2lkIHJlaXNlcjRfcHJpbnRfYWRkcmVzcyhjb25zdCBj
aGFyICpwcmVmaXggLyogcHJlZml4IHRvIHByaW50ICovICwKKwkJICAgY29uc3QgcmVpc2VyNF9i
bG9ja19uciAqIGJsb2NrLyogYmxvY2sgbnVtYmVyIHRvIHByaW50ICovKQoreworCXByaW50aygi
JXM6ICVzXG4iLCBwcmVmaXgsIHNwcmludF9hZGRyZXNzKGJsb2NrKSk7Cit9CisjZW5kaWYKKwor
LyogcmV0dXJuIHN0cmluZyBjb250YWluaW5nIGh1bWFuIHJlYWRhYmxlIHJlcHJlc2VudGF0aW9u
IG9mIEBibG9jayAqLworY2hhciAqc3ByaW50X2FkZHJlc3MoY29uc3QgcmVpc2VyNF9ibG9ja19u
ciAqCisJCSAgICAgYmxvY2svKiBibG9jayBudW1iZXIgdG8gcHJpbnQgKi8pCit7CisJc3RhdGlj
IGNoYXIgYWRkcmVzc1szMF07CisKKwlpZiAoYmxvY2sgPT0gTlVMTCkKKwkJc3ByaW50ZihhZGRy
ZXNzLCAibnVsbCIpOworCWVsc2UgaWYgKHJlaXNlcjRfYmxvY2tucl9pc19mYWtlKGJsb2NrKSkK
KwkJc3ByaW50ZihhZGRyZXNzLCAiJWxseCIsICh1bnNpZ25lZCBsb25nIGxvbmcpKCpibG9jaykp
OworCWVsc2UKKwkJc3ByaW50ZihhZGRyZXNzLCAiJWxsdSIsICh1bnNpZ25lZCBsb25nIGxvbmcp
KCpibG9jaykpOworCXJldHVybiBhZGRyZXNzOworfQorCisvKiByZWxlYXNlIHBhcmVudCBub2Rl
IGR1cmluZyB0cmF2ZXJzYWwgKi8KK3N0YXRpYyB2b2lkIHB1dF9wYXJlbnQoY2JrX2hhbmRsZSAq
IGgvKiBzZWFyY2ggaGFuZGxlICovKQoreworCWFzc2VydCgibmlraXRhLTM4MyIsIGggIT0gTlVM
TCk7CisJaWYgKGgtPnBhcmVudF9saC0+bm9kZSAhPSBOVUxMKQorCQlsb25ndGVybV91bmxvY2tf
em5vZGUoaC0+cGFyZW50X2xoKTsKK30KKworLyogaGVscGVyIGZ1bmN0aW9uIHVzZWQgYnkgY29v
cmRfYnlfa2V5KCk6IHJlbGVhc2UgcmVmZXJlbmNlIHRvIHBhcmVudCB6bm9kZQorICAgc3RvcmVk
IGluIGhhbmRsZSBiZWZvcmUgcHJvY2Vzc2luZyBpdHMgY2hpbGQuICovCitzdGF0aWMgdm9pZCBo
cHV0KGNia19oYW5kbGUgKiBoLyogc2VhcmNoIGhhbmRsZSAqLykKK3sKKwlhc3NlcnQoIm5pa2l0
YS0zODUiLCBoICE9IE5VTEwpOworCWRvbmVfbGgoaC0+cGFyZW50X2xoKTsKKwlkb25lX2xoKGgt
PmFjdGl2ZV9saCk7Cit9CisKKy8qIEhlbHBlciBmdW5jdGlvbiB1c2VkIGJ5IGNiaygpOiB1cGRh
dGUgZGVsaW1pdGluZyBrZXlzIG9mIGNoaWxkIG5vZGUgKHN0b3JlZAorICAgaW4gaC0+YWN0aXZl
X2xoLT5ub2RlKSB1c2luZyBrZXkgdGFrZW4gZnJvbSBwYXJlbnQgb24gdGhlIHBhcmVudCBsZXZl
bC4gKi8KK3N0YXRpYyBpbnQgc2V0dXBfZGVsaW1pdGluZ19rZXlzKGNia19oYW5kbGUgKiBoLyog
c2VhcmNoIGhhbmRsZSAqLykKK3sKKwl6bm9kZSAqYWN0aXZlOworCXJlaXNlcjRfdHJlZSAqdHJl
ZTsKKworCWFzc2VydCgibmlraXRhLTEwODgiLCBoICE9IE5VTEwpOworCisJYWN0aXZlID0gaC0+
YWN0aXZlX2xoLT5ub2RlOworCisJLyogZmFzdCBjaGVjayB3aXRob3V0IHRha2luZyBkayBsb2Nr
LiBUaGlzIGlzIHNhZmUsIGJlY2F1c2UKKwkgKiBKTk9ERV9ES1NFVCBpcyBuZXZlciBjbGVhcmVk
IG9uY2Ugc2V0LiAqLworCWlmICghWkZfSVNTRVQoYWN0aXZlLCBKTk9ERV9ES1NFVCkpIHsKKwkJ
dHJlZSA9IHpub2RlX2dldF90cmVlKGFjdGl2ZSk7CisJCXdyaXRlX2xvY2tfZGsodHJlZSk7CisJ
CWlmICghWkZfSVNTRVQoYWN0aXZlLCBKTk9ERV9ES1NFVCkpIHsKKwkJCXpub2RlX3NldF9sZF9r
ZXkoYWN0aXZlLCAmaC0+bGRfa2V5KTsKKwkJCXpub2RlX3NldF9yZF9rZXkoYWN0aXZlLCAmaC0+
cmRfa2V5KTsKKwkJCVpGX1NFVChhY3RpdmUsIEpOT0RFX0RLU0VUKTsKKwkJfQorCQl3cml0ZV91
bmxvY2tfZGsodHJlZSk7CisJCXJldHVybiAxOworCX0KKwlyZXR1cm4gMDsKK30KKworLyogdHJ1
ZSBpZiBAYmxvY2sgbWFrZXMgc2Vuc2UgZm9yIHRoZSBAdHJlZS4gVXNlZCB0byBkZXRlY3QgY29y
cnVwdGVkIG5vZGUKKyAqIHBvaW50ZXJzICovCitzdGF0aWMgaW50CitibG9ja19ucl9pc19jb3Jy
ZWN0KHJlaXNlcjRfYmxvY2tfbnIgKiBibG9jayAvKiBibG9jayBudW1iZXIgdG8gY2hlY2sgKi8g
LAorCQkgICAgcmVpc2VyNF90cmVlICogdHJlZS8qIHRyZWUgdG8gY2hlY2sgYWdhaW5zdCAqLykK
K3sKKwlhc3NlcnQoIm5pa2l0YS03NTciLCBibG9jayAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS03NTgiLCB0cmVlICE9IE5VTEwpOworCisJLyogY2hlY2sgdG8gc2VlIGlmIGl0IGV4Y2VlZHMg
dGhlIHNpemUgb2YgdGhlIGRldmljZS4gKi8KKwlyZXR1cm4gcmVpc2VyNF9ibG9ja25yX2lzX3Nh
bmVfZm9yKHRyZWUtPnN1cGVyLCBibG9jayk7Cit9CisKKy8qIGNoZWNrIGNvbnNpc3RlbmN5IG9m
IGZpZWxkcyAqLworc3RhdGljIGludCBzYW5pdHlfY2hlY2soY2JrX2hhbmRsZSAqIGgvKiBzZWFy
Y2ggaGFuZGxlICovKQoreworCWFzc2VydCgibmlraXRhLTM4NCIsIGggIT0gTlVMTCk7CisKKwlp
ZiAoaC0+bGV2ZWwgPCBoLT5zdG9wX2xldmVsKSB7CisJCWgtPmVycm9yID0gIkJ1cmllZCB1bmRl
ciBsZWF2ZXMiOworCQloLT5yZXN1bHQgPSBSRVRFUlIoLUVJTyk7CisJCXJldHVybiBMT09LVVBf
RE9ORTsKKwl9IGVsc2UgaWYgKCFibG9ja19ucl9pc19jb3JyZWN0KCZoLT5ibG9jaywgaC0+dHJl
ZSkpIHsKKwkJaC0+ZXJyb3IgPSAiYmFkIGJsb2NrIG51bWJlciI7CisJCWgtPnJlc3VsdCA9IFJF
VEVSUigtRUlPKTsKKwkJcmV0dXJuIExPT0tVUF9ET05FOworCX0gZWxzZQorCQlyZXR1cm4gMDsK
K30KKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5k
ZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zm
c2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9sbC1z
dGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3N0YXR1c19mbGFncy5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0
L3N0YXR1c19mbGFncy5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3N0YXR1c19m
bGFncy5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC9zdGF0dXNfZmxhZ3MuYwkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4MTIyMjM5
NSArMDEwMApAQCAtMCwwICsxLDE4MCBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMg
YnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUg
Ki8KKworLyogRnVuY3Rpb25zIHRoYXQgZGVhbCB3aXRoIHJlaXNlcjQgc3RhdHVzIGJsb2NrLCBx
dWVyeSBzdGF0dXMgYW5kIHVwZGF0ZSBpdCwKKyAqIGlmIG5lZWRlZCAqLworCisjaW5jbHVkZSA8
bGludXgvYmlvLmg+CisjaW5jbHVkZSA8bGludXgvaGlnaG1lbS5oPgorI2luY2x1ZGUgPGxpbnV4
L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvYmxrZGV2Lmg+CisjaW5jbHVkZSAiZGVidWcuaCIKKyNp
bmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAic3RhdHVzX2ZsYWdzLmgiCisjaW5jbHVkZSAi
c3VwZXIuaCIKKworLyogVGhpcyBpcyBvdXIgZW5kIEkvTyBoYW5kbGVyIHRoYXQgbWFya3MgcGFn
ZSB1cHRvZGF0ZSBpZiBJTyB3YXMgc3VjY2Vzc2Z1bC4KKyAgIEl0IGFsc28gdW5jb25kaXRpb25h
bGx5IHVubG9ja3MgdGhlIHBhZ2UsIHNvIHdlIGNhbiBzZWUgdGhhdCBpbyB3YXMgZG9uZS4KKyAg
IFdlIGRvIG5vdCBmcmVlIGJpbywgYmVjYXVzZSB3ZSBob3BlIHRvIHJldXNlIHRoYXQuICovCitz
dGF0aWMgdm9pZCByZWlzZXI0X3N0YXR1c19lbmRpbyhzdHJ1Y3QgYmlvICpiaW8pCit7CisJaWYg
KCFiaW8tPmJpX3N0YXR1cykKKwkJU2V0UGFnZVVwdG9kYXRlKGJpby0+YmlfaW9fdmVjLT5idl9w
YWdlKTsKKwllbHNlIHsKKwkJQ2xlYXJQYWdlVXB0b2RhdGUoYmlvLT5iaV9pb192ZWMtPmJ2X3Bh
Z2UpOworCQlTZXRQYWdlRXJyb3IoYmlvLT5iaV9pb192ZWMtPmJ2X3BhZ2UpOworCX0KKwl1bmxv
Y2tfcGFnZShiaW8tPmJpX2lvX3ZlYy0+YnZfcGFnZSk7Cit9CisKKy8qIEluaXRpYWxpc2Ugc3Rh
dHVzIGNvZGUuIFRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgY2FsbGVkIGZyb20gdGhlIGRpc2sgZm9y
bWF0CisgICBjb2RlLiBibG9jayBwYXJlbWV0ZXIgaXMgd2hlcmUgc3RhdHVzIGJsb2NrIGxpdmVz
LiAqLworaW50IHJlaXNlcjRfc3RhdHVzX2luaXQocmVpc2VyNF9ibG9ja19uciBibG9jaykKK3sK
KwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gcmVpc2VyNF9nZXRfY3VycmVudF9zYigpOworCXN0
cnVjdCByZWlzZXI0X3N0YXR1cyAqc3RhdHVzcGFnZTsKKwlzdHJ1Y3QgYmlvICpiaW87CisJc3Ry
dWN0IHBhZ2UgKnBhZ2U7CisKKwlnZXRfc3VwZXJfcHJpdmF0ZShzYiktPnN0YXR1c19wYWdlID0g
TlVMTDsKKwlnZXRfc3VwZXJfcHJpdmF0ZShzYiktPnN0YXR1c19iaW8gPSBOVUxMOworCisJcGFn
ZSA9IGFsbG9jX3BhZ2VzKHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpLCAwKTsKKwlpZiAoIXBh
Z2UpCisJCXJldHVybiAtRU5PTUVNOworCisJYmlvID0gYmlvX2FsbG9jKHJlaXNlcjRfY3R4X2dm
cF9tYXNrX2dldCgpLCAxKTsKKwlpZiAoYmlvICE9IE5VTEwpIHsKKwkJYmlvLT5iaV9pdGVyLmJp
X3NlY3RvciA9IGJsb2NrICogKHNiLT5zX2Jsb2Nrc2l6ZSA+PiA5KTsKKwkJYmlvX3NldF9kZXYo
YmlvLCBzYi0+c19iZGV2KTsKKwkJYmlvLT5iaV9pb192ZWNbMF0uYnZfcGFnZSA9IHBhZ2U7CisJ
CWJpby0+YmlfaW9fdmVjWzBdLmJ2X2xlbiA9IHNiLT5zX2Jsb2Nrc2l6ZTsKKwkJYmlvLT5iaV9p
b192ZWNbMF0uYnZfb2Zmc2V0ID0gMDsKKwkJYmlvLT5iaV92Y250ID0gMTsKKwkJYmlvLT5iaV9p
dGVyLmJpX3NpemUgPSBzYi0+c19ibG9ja3NpemU7CisJCWJpby0+YmlfZW5kX2lvID0gcmVpc2Vy
NF9zdGF0dXNfZW5kaW87CisJfSBlbHNlIHsKKwkJX19mcmVlX3BhZ2VzKHBhZ2UsIDApOworCQly
ZXR1cm4gLUVOT01FTTsKKwl9CisJbG9ja19wYWdlKHBhZ2UpOworCWJpb19zZXRfb3BfYXR0cnMo
YmlvLCBSRUFELCAwKTsKKwlzdWJtaXRfYmlvKGJpbyk7CisJd2FpdF9vbl9wYWdlX2xvY2tlZChw
YWdlKTsKKwlpZiAoIVBhZ2VVcHRvZGF0ZShwYWdlKSkgeworCQl3YXJuaW5nKCJncmVlbi0yMDA3
IiwKKwkJCSJJL08gZXJyb3Igd2hpbGUgdHJpZWQgdG8gcmVhZCBzdGF0dXMgcGFnZVxuIik7CisJ
CXJldHVybiAtRUlPOworCX0KKworCXN0YXR1c3BhZ2UgPSAoc3RydWN0IHJlaXNlcjRfc3RhdHVz
ICopa21hcF9hdG9taWMocGFnZSk7CisJaWYgKG1lbWNtcAorCSAgICAoc3RhdHVzcGFnZS0+bWFn
aWMsIFJFSVNFUjRfU1RBVFVTX01BR0lDLAorCSAgICAgc2l6ZW9mKFJFSVNFUjRfU1RBVFVTX01B
R0lDKSkpIHsKKwkJLyogTWFnaWMgZG9lcyBub3QgbWF0Y2guICovCisJCWt1bm1hcF9hdG9taWMo
KGNoYXIgKilzdGF0dXNwYWdlKTsKKwkJd2FybmluZygiZ3JlZW4tMjAwOCIsICJXcm9uZyBtYWdp
YyBpbiBzdGF0dXMgYmxvY2tcbiIpOworCQlfX2ZyZWVfcGFnZXMocGFnZSwgMCk7CisJCWJpb19w
dXQoYmlvKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCWt1bm1hcF9hdG9taWMoKGNoYXIgKilz
dGF0dXNwYWdlKTsKKworCWdldF9zdXBlcl9wcml2YXRlKHNiKS0+c3RhdHVzX3BhZ2UgPSBwYWdl
OworCWdldF9zdXBlcl9wcml2YXRlKHNiKS0+c3RhdHVzX2JpbyA9IGJpbzsKKwlyZXR1cm4gMDsK
K30KKworLyogUXVlcnkgdGhlIHN0YXR1cyBvZiBmcy4gUmV0dXJucyBpZiB0aGUgRlMgY2FuIGJl
IHNhZmVseSBtb3VudGVkLgorICAgQWxzbyBpZiAic3RhdHVzIiBhbmQgImV4dGVuZGVkIiBwYXJh
bWV0ZXJzIGFyZSBnaXZlbiwgaXQgd2lsbCBmaWxsCisgICBhY3R1YWwgcGFydHMgb2Ygc3RhdHVz
IGZyb20gZGlzayB0aGVyZS4gKi8KK2ludCByZWlzZXI0X3N0YXR1c19xdWVyeSh1NjQgKnN0YXR1
cywgdTY0ICpleHRlbmRlZCkKK3sKKwlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gcmVpc2VyNF9n
ZXRfY3VycmVudF9zYigpOworCXN0cnVjdCByZWlzZXI0X3N0YXR1cyAqc3RhdHVzcGFnZTsKKwlp
bnQgcmV0dmFsOworCisJaWYgKCFnZXRfc3VwZXJfcHJpdmF0ZShzYiktPnN0YXR1c19wYWdlKQor
CSAgICAgICAgLyogTm8gc3RhdHVzIHBhZ2U/ICovCisJCXJldHVybiBSRUlTRVI0X1NUQVRVU19N
T1VOVF9VTktOT1dOOworCXN0YXR1c3BhZ2UgPSAoc3RydWN0IHJlaXNlcjRfc3RhdHVzICopCisJ
ICAgIGttYXBfYXRvbWljKGdldF9zdXBlcl9wcml2YXRlKHNiKS0+c3RhdHVzX3BhZ2UpOworCXN3
aXRjaCAoKGxvbmcpbGU2NF90b19jcHUoZ2V0X3VuYWxpZ25lZCgmc3RhdHVzcGFnZS0+c3RhdHVz
KSkpIHsKKwkvKiBGSVhNRTogdGhpcyBjYXN0IGlzIGEgaGFjayBmb3IgMzIgYml0IGFyY2hlcyB0
byB3b3JrLiAqLworCWNhc2UgUkVJU0VSNF9TVEFUVVNfT0s6CisJCXJldHZhbCA9IFJFSVNFUjRf
U1RBVFVTX01PVU5UX09LOworCQlicmVhazsKKwljYXNlIFJFSVNFUjRfU1RBVFVTX0NPUlJVUFRF
RDoKKwkJcmV0dmFsID0gUkVJU0VSNF9TVEFUVVNfTU9VTlRfV0FSTjsKKwkJYnJlYWs7CisJY2Fz
ZSBSRUlTRVI0X1NUQVRVU19EQU1BR0VEOgorCWNhc2UgUkVJU0VSNF9TVEFUVVNfREVTVFJPWUVE
OgorCWNhc2UgUkVJU0VSNF9TVEFUVVNfSU9FUlJPUjoKKwkJcmV0dmFsID0gUkVJU0VSNF9TVEFU
VVNfTU9VTlRfUk87CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldHZhbCA9IFJFSVNFUjRfU1RB
VFVTX01PVU5UX1VOS05PV047CisJCWJyZWFrOworCX0KKworCWlmIChzdGF0dXMpCisJCSpzdGF0
dXMgPSBsZTY0X3RvX2NwdShnZXRfdW5hbGlnbmVkKCZzdGF0dXNwYWdlLT5zdGF0dXMpKTsKKwlp
ZiAoZXh0ZW5kZWQpCisJCSpleHRlbmRlZCA9IGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJnN0
YXR1c3BhZ2UtPmV4dGVuZGVkX3N0YXR1cykpOworCisJa3VubWFwX2F0b21pYygoY2hhciAqKXN0
YXR1c3BhZ2UpOworCXJldHVybiByZXR2YWw7Cit9CisKKy8qIFRoaXMgZnVuY3Rpb24gc2hvdWxk
IGJlIGNhbGxlZCB3aGVuIHNvbWV0aGluZyBiYWQgaGFwcGVucyAoZS5nLiBmcm9tCisgICByZWlz
ZXI0X3BhbmljKS4gSXQgZmlsbHMgdGhlIHN0YXR1cyBzdHJ1Y3R1cmUgYW5kIHRyaWVzIHRvIHB1
c2ggaXQgdG8gZGlzay4qLworaW50IHJlaXNlcjRfc3RhdHVzX3dyaXRlKF9fdTY0IHN0YXR1cywg
X191NjQgZXh0ZW5kZWRfc3RhdHVzLCBjaGFyICptZXNzYWdlKQoreworCXN0cnVjdCBzdXBlcl9i
bG9jayAqc2IgPSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCk7CisJc3RydWN0IHJlaXNlcjRfc3Rh
dHVzICpzdGF0dXNwYWdlOworCXN0cnVjdCBiaW8gKmJpbyA9IGdldF9zdXBlcl9wcml2YXRlKHNi
KS0+c3RhdHVzX2JpbzsKKworCWlmICghZ2V0X3N1cGVyX3ByaXZhdGUoc2IpLT5zdGF0dXNfcGFn
ZSkKKwkgICAgICAgIC8qIE5vIHN0YXR1cyBwYWdlPyAqLworCQlyZXR1cm4gLTE7CisJc3RhdHVz
cGFnZSA9IChzdHJ1Y3QgcmVpc2VyNF9zdGF0dXMgKikKKwkgICAga21hcF9hdG9taWMoZ2V0X3N1
cGVyX3ByaXZhdGUoc2IpLT5zdGF0dXNfcGFnZSk7CisKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19s
ZTY0KHN0YXR1cyksICZzdGF0dXNwYWdlLT5zdGF0dXMpOworCXB1dF91bmFsaWduZWQoY3B1X3Rv
X2xlNjQoZXh0ZW5kZWRfc3RhdHVzKSwgJnN0YXR1c3BhZ2UtPmV4dGVuZGVkX3N0YXR1cyk7CisJ
c3RybmNweShzdGF0dXNwYWdlLT50ZXh0ZXJyb3IsIG1lc3NhZ2UsIFJFSVNFUjRfVEVYVEVSUk9S
X0xFTik7CisKKwlrdW5tYXBfYXRvbWljKChjaGFyICopc3RhdHVzcGFnZSk7CisJYmlvX3Jlc2V0
KGJpbyk7CisJYmlvX3NldF9kZXYoYmlvLCBzYi0+c19iZGV2KTsKKwliaW8tPmJpX2lvX3ZlY1sw
XS5idl9wYWdlID0gZ2V0X3N1cGVyX3ByaXZhdGUoc2IpLT5zdGF0dXNfcGFnZTsKKwliaW8tPmJp
X2lvX3ZlY1swXS5idl9sZW4gPSBzYi0+c19ibG9ja3NpemU7CisJYmlvLT5iaV9pb192ZWNbMF0u
YnZfb2Zmc2V0ID0gMDsKKwliaW8tPmJpX3ZjbnQgPSAxOworCWJpby0+YmlfaXRlci5iaV9zaXpl
ID0gc2ItPnNfYmxvY2tzaXplOworCWJpby0+YmlfZW5kX2lvID0gcmVpc2VyNF9zdGF0dXNfZW5k
aW87CisJbG9ja19wYWdlKGdldF9zdXBlcl9wcml2YXRlKHNiKS0+c3RhdHVzX3BhZ2UpOwkvKiBT
YWZlIGFzIG5vYm9keSBzaG91bGQKKwkJCQkJCQkgKiB0b3VjaCBvdXIgcGFnZS4gKi8KKwkvKgor
CSAqIFdlIGNhbiBibG9jayBub3csIGJ1dCB3ZSBoYXZlIG5vIG90aGVyIGNob2ljZSBhbnl3YXkK
KwkgKi8KKwliaW9fc2V0X29wX2F0dHJzKGJpbywgV1JJVEUsIDApOworCXN1Ym1pdF9iaW8oYmlv
KTsKKwkvKgorCSAqIFdlIGRvIG5vdCB3YWl0IGZvciBJTyBjb21wbGV0b24KKwkgKi8KKwlyZXR1
cm4gMDsKK30KKworLyogRnJlZXMgdGhlIHBhZ2Ugd2l0aCBzdGF0dXMgYW5kIGJpbyBzdHJ1Y3R1
cmUuIFNob3VsZCBiZSBjYWxsZWQgYnkgZGlzayBmb3JtYXQKKyAqIGF0IHVtb3VudCB0aW1lICov
CitpbnQgcmVpc2VyNF9zdGF0dXNfZmluaXNoKHZvaWQpCit7CisJc3RydWN0IHN1cGVyX2Jsb2Nr
ICpzYiA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKworCV9fZnJlZV9wYWdlcyhnZXRfc3Vw
ZXJfcHJpdmF0ZShzYiktPnN0YXR1c19wYWdlLCAwKTsKKwlnZXRfc3VwZXJfcHJpdmF0ZShzYikt
PnN0YXR1c19wYWdlID0gTlVMTDsKKwliaW9fcHV0KGdldF9zdXBlcl9wcml2YXRlKHNiKS0+c3Rh
dHVzX2Jpbyk7CisJZ2V0X3N1cGVyX3ByaXZhdGUoc2IpLT5zdGF0dXNfYmlvID0gTlVMTDsKKwly
ZXR1cm4gMDsKK30KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcv
ZnMvcmVpc2VyNC9zdGF0dXNfZmxhZ3MuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9zdGF0dXNf
ZmxhZ3MuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9zdGF0dXNfZmxhZ3MuaAkx
OTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvc3RhdHVzX2ZsYWdzLmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODEyMjIzOTUgKzAxMDAK
QEAgLTAsMCArMSw0NyBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBS
ZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyog
SGVyZSB3ZSBkZWNsYXJlIHN0cnVjdHVyZXMgYW5kIGZsYWdzIHRoYXQgc3RvcmUgcmVpc2VyNCBz
dGF0dXMgb24gZGlzay4KKyAgIFRoZSBzdGF0dXMgdGhhdCBoZWxwcyB1cyB0byBmaW5kIG91dCBp
ZiB0aGUgZmlsZXN5c3RlbSBpcyB2YWxpZCBvciBpZiBpdAorICAgY29udGFpbnMgc29tZSBjcml0
aWNhbCwgb3Igbm90IHNvIGNyaXRpY2FsIGVycm9ycyAqLworCisjaWYgIWRlZmluZWQoX19SRUlT
RVI0X1NUQVRVU19GTEFHU19IX18pCisjZGVmaW5lIF9fUkVJU0VSNF9TVEFUVVNfRkxBR1NfSF9f
CisKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisvKiBUaGVzZSBhcmUgbWFqb3Igc3RhdHVzIGZsYWdz
ICovCisjZGVmaW5lIFJFSVNFUjRfU1RBVFVTX09LIDAKKyNkZWZpbmUgUkVJU0VSNF9TVEFUVVNf
Q09SUlVQVEVEIDB4MQorI2RlZmluZSBSRUlTRVI0X1NUQVRVU19EQU1BR0VEIDB4MgorI2RlZmlu
ZSBSRUlTRVI0X1NUQVRVU19ERVNUUk9ZRUQgMHg0CisjZGVmaW5lIFJFSVNFUjRfU1RBVFVTX0lP
RVJST1IgMHg4CisKKy8qIFJldHVybiB2YWx1ZXMgZm9yIHJlaXNlcjRfc3RhdHVzX3F1ZXJ5KCkg
Ki8KKyNkZWZpbmUgUkVJU0VSNF9TVEFUVVNfTU9VTlRfT0sgMAorI2RlZmluZSBSRUlTRVI0X1NU
QVRVU19NT1VOVF9XQVJOIDEKKyNkZWZpbmUgUkVJU0VSNF9TVEFUVVNfTU9VTlRfUk8gMgorI2Rl
ZmluZSBSRUlTRVI0X1NUQVRVU19NT1VOVF9VTktOT1dOIC0xCisKKyNkZWZpbmUgUkVJU0VSNF9U
RVhURVJST1JfTEVOIDI1NgorCisjZGVmaW5lIFJFSVNFUjRfU1RBVFVTX01BR0lDICJSZWlTZVI0
U3RBVHVzQmwiCisvKiBXZSBwcm9iYWJseSBuZWVkIHRvIGtlZXAgaXRzIHNpemUgdW5kZXIgc2Vj
dG9yIHNpemUgd2hpY2ggaXMgNTEyIGJ5dGVzICovCitzdHJ1Y3QgcmVpc2VyNF9zdGF0dXMgewor
CWNoYXIgbWFnaWNbMTZdOworCWQ2NCBzdGF0dXM7CQkvKiBDdXJyZW50IEZTIHN0YXRlICovCisJ
ZDY0IGV4dGVuZGVkX3N0YXR1czsJLyogQW55IGFkZGl0aW9uYWwgaW5mbyB0aGF0IG1pZ2h0IGhh
dmUgc2Vuc2UgaW4KKwkJCQkgKiBhZGRpdGlvbiB0byAic3RhdHVzIi4gRS5nLiBsYXN0IHNlY3Rv
ciB3aGVyZQorCQkJCSAqIGlvIGVycm9yIGhhcHBlbmVkIGlmIHN0YXR1cyBpcworCQkJCSAqICJp
byBlcnJvciBlbmNvdW50ZXJlZCIgKi8KKwlkNjQgc3RhY2t0cmFjZVsxMF07CS8qIExhc3QgdGVu
IGZ1bmN0aW9uYWwgY2FsbHMgbWFkZSAoYWRkcmVzc2VzKSAqLworCWNoYXIgdGV4dGVycm9yW1JF
SVNFUjRfVEVYVEVSUk9SX0xFTl07CS8qIEFueSBlcnJvciBtZXNzYWdlIGlmCisJCQkJCQkgKiBh
cHByb3ByaWF0ZSwgb3RoZXJ3aXNlIGZpbGxlZAorCQkJCQkJICogd2l0aCB6ZXJvZXMgKi8KK307
CisKK2ludCByZWlzZXI0X3N0YXR1c19pbml0KHJlaXNlcjRfYmxvY2tfbnIgYmxvY2spOworaW50
IHJlaXNlcjRfc3RhdHVzX3F1ZXJ5KHU2NCAqc3RhdHVzLCB1NjQgKmV4dGVuZGVkKTsKK2ludCBy
ZWlzZXI0X3N0YXR1c193cml0ZSh1NjQgc3RhdHVzLCB1NjQgZXh0ZW5kZWRfc3RhdHVzLCBjaGFy
ICptZXNzYWdlKTsKK2ludCByZWlzZXI0X3N0YXR1c19maW5pc2godm9pZCk7CisKKyNlbmRpZgpk
aWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3N1
cGVyLmMgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvc3VwZXIuYwotLS0gbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC9zdXBlci5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAw
CisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC9zdXBlci5jCTIwMjAtMDItMDUgMjA6NTM6NDEu
NDgxMjIyMzk1ICswMTAwCkBAIC0wLDAgKzEsMzA2IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAw
MiwgMjAwMywgMjAwNCBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiBy
ZWlzZXI0L1JFQURNRSAqLworCisvKiBTdXBlci1ibG9jayBtYW5pcHVsYXRpb25zLiAqLworCisj
aW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAia2V5Lmgi
CisjaW5jbHVkZSAicGx1Z2luL3NlY3VyaXR5L3Blcm0uaCIKKyNpbmNsdWRlICJwbHVnaW4vc3Bh
Y2Uvc3BhY2VfYWxsb2NhdG9yLmgiCisjaW5jbHVkZSAicGx1Z2luL3BsdWdpbi5oIgorI2luY2x1
ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJ2ZnNfb3BzLmgiCisjaW5jbHVkZSAic3VwZXIuaCIKKyNp
bmNsdWRlICJyZWlzZXI0LmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkvKiBmb3IgX191
Pz8gICovCisjaW5jbHVkZSA8bGludXgvZnMuaD4JCS8qIGZvciBzdHJ1Y3Qgc3VwZXJfYmxvY2sg
ICovCisKK3N0YXRpYyBfX3U2NCByZXNlcnZlZF9mb3JfZ2lkKGNvbnN0IHN0cnVjdCBzdXBlcl9i
bG9jayAqc3VwZXIsIGdpZF90IGdpZCk7CitzdGF0aWMgX191NjQgcmVzZXJ2ZWRfZm9yX3VpZChj
b25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLCB1aWRfdCB1aWQpOworc3RhdGljIF9fdTY0
IHJlc2VydmVkX2Zvcl9yb290KGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpOworCisv
KiBSZXR1cm4gcmVpc2VyNC1zcGVjaWZpYyBwYXJ0IG9mIHN1cGVyIGJsb2NrICovCityZWlzZXI0
X3N1cGVyX2luZm9fZGF0YSAqZ2V0X3N1cGVyX3ByaXZhdGVfbm9jaGVjayhjb25zdCBzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnN1cGVyKQoreworCXJldHVybiAocmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEg
Kikgc3VwZXItPnNfZnNfaW5mbzsKK30KKworLyogUmV0dXJuIHJlaXNlcjQgZnN0eXBlOiB2YWx1
ZSB0aGF0IGlzIHJldHVybmVkIGluIC0+Zl90eXBlIGZpZWxkIGJ5IHN0YXRmcygpCisgKi8KK2xv
bmcgcmVpc2VyNF9zdGF0ZnNfdHlwZShjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyIFVO
VVNFRF9BUkcpCit7CisJYXNzZXJ0KCJuaWtpdGEtNDQ4Iiwgc3VwZXIgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtNDQ5IiwgaXNfcmVpc2VyNF9zdXBlcihzdXBlcikpOworCXJldHVybiAobG9u
ZylSRUlTRVI0X1NVUEVSX01BR0lDOworfQorCisvKiBmdW5jdGlvbnMgdG8gcmVhZC9tb2RpZnkg
ZmllbGRzIG9mIHJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICovCisKKy8qIGdldCBudW1iZXIgb2Yg
YmxvY2tzIGluIGZpbGUgc3lzdGVtICovCitfX3U2NCByZWlzZXI0X2Jsb2NrX2NvdW50KGNvbnN0
IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIJLyogc3VwZXIgYmxvY2sKKwkJCQkJCQkJICAgcXVl
cmllZCAqLyApCit7CisJYXNzZXJ0KCJ2cy00OTQiLCBzdXBlciAhPSBOVUxMKTsKKwlhc3NlcnQo
InZzLTQ5NSIsIGlzX3JlaXNlcjRfc3VwZXIoc3VwZXIpKTsKKwlyZXR1cm4gZ2V0X3N1cGVyX3By
aXZhdGUoc3VwZXIpLT5ibG9ja19jb3VudDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qCisg
KiBudW1iZXIgb2YgYmxvY2tzIGluIHRoZSBjdXJyZW50IGZpbGUgc3lzdGVtCisgKi8KK19fdTY0
IHJlaXNlcjRfY3VycmVudF9ibG9ja19jb3VudCh2b2lkKQoreworCXJldHVybiBnZXRfY3VycmVu
dF9zdXBlcl9wcml2YXRlKCktPmJsb2NrX2NvdW50OworfQorI2VuZGlmICAvKiAgUkVJU0VSNF9E
RUJVRyAgKi8KKworLyogc2V0IG51bWJlciBvZiBibG9jayBpbiBmaWxlc3lzdGVtICovCit2b2lk
IHJlaXNlcjRfc2V0X2Jsb2NrX2NvdW50KGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIs
IF9fdTY0IG5yKQoreworCWFzc2VydCgidnMtNTAxIiwgc3VwZXIgIT0gTlVMTCk7CisJYXNzZXJ0
KCJ2cy01MDIiLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisJZ2V0X3N1cGVyX3ByaXZhdGUo
c3VwZXIpLT5ibG9ja19jb3VudCA9IG5yOworCS8qCisJICogVGhlIHByb3BlciBjYWxjdWxhdGlv
biBvZiB0aGUgcmVzZXJ2ZWQgc3BhY2UgY291bnRlciAoJTUgb2YgZGV2aWNlCisJICogYmxvY2sg
Y291bnRlcikgd2UgbmVlZCBhIDY0IGJpdCBkaXZpc2lvbiB3aGljaCBpcyBtaXNzaW5nIGluIExp
bnV4CisJICogb24gaTM4NiBwbGF0Zm9ybS4gQmVjYXVzZSB3ZSBkbyBub3QgbmVlZCBhIHByZWNp
c2UgY2FsY3VsYXRpb24gaGVyZQorCSAqIHdlIGNhbiByZXBsYWNlIGEgZGl2NjQgb3BlcmF0aW9u
IGJ5IHRoaXMgY29tYmluYXRpb24gb2YKKwkgKiBtdWx0aXBsaWNhdGlvbiBhbmQgc2hpZnQ6IDUx
LiAvICgyXjEwKSA9PSAuMDQ5OCAuCisJICogRklYTUU6IHRoaXMgaXMgYSBidWcuIEl0IGNvbWVz
IHVwIG9ubHkgZm9yIHZlcnkgc21hbGwgZmlsZXN5c3RlbXMKKwkgKiB3aGljaCBwcm9iYWJseSBh
cmUgbmV2ZXIgdXNlZC4gTmV2ZXJ0aGVsZXNzLCBpdCBpcyBhIGJ1Zy4gTnVtYmVyIG9mCisJICog
cmVzZXJ2ZWQgYmxvY2tzIG11c3QgYmUgbm90IGxlc3MgdGhhbiBtYXhpbWFsIG51bWJlciBvZiBi
bG9ja3Mgd2hpY2gKKwkgKiBnZXQgZ3JhYmJlZCB3aXRoIEJBX1JFU0VSVkVELgorCSAqLworCWdl
dF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+YmxvY2tzX3Jlc2VydmVkID0gKChuciAqIDUxKSA+PiAx
MCk7Cit9CisKKy8qIGFtb3VudCBvZiBibG9ja3MgdXNlZCAoYWxsb2NhdGVkIGZvciBkYXRhKSBp
biBmaWxlIHN5c3RlbSAqLworX191NjQgcmVpc2VyNF9kYXRhX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnN1cGVyCS8qIHN1cGVyIGJsb2NrCisJCQkJCQkJCSAgIHF1ZXJpZWQgKi8g
KQoreworCWFzc2VydCgibmlraXRhLTQ1MiIsIHN1cGVyICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTQ1MyIsIGlzX3JlaXNlcjRfc3VwZXIoc3VwZXIpKTsKKwlyZXR1cm4gZ2V0X3N1cGVyX3By
aXZhdGUoc3VwZXIpLT5ibG9ja3NfdXNlZDsKK30KKworLyogc2V0IG51bWJlciBvZiBibG9jayB1
c2VkIGluIGZpbGVzeXN0ZW0gKi8KK3ZvaWQgcmVpc2VyNF9zZXRfZGF0YV9ibG9ja3MoY29uc3Qg
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciwgX191NjQgbnIpCit7CisJYXNzZXJ0KCJ2cy01MDMi
LCBzdXBlciAhPSBOVUxMKTsKKwlhc3NlcnQoInZzLTUwNCIsIGlzX3JlaXNlcjRfc3VwZXIoc3Vw
ZXIpKTsKKwlnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPmJsb2Nrc191c2VkID0gbnI7Cit9CisK
Ky8qIGFtb3VudCBvZiBmcmVlIGJsb2NrcyBpbiBmaWxlIHN5c3RlbSAqLworX191NjQgcmVpc2Vy
NF9mcmVlX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyCS8qIHN1cGVyIGJs
b2NrCisJCQkJCQkJCSAgIHF1ZXJpZWQgKi8gKQoreworCWFzc2VydCgibmlraXRhLTQ1NCIsIHN1
cGVyICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTQ1NSIsIGlzX3JlaXNlcjRfc3VwZXIoc3Vw
ZXIpKTsKKwlyZXR1cm4gZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5ibG9ja3NfZnJlZTsKK30K
KworLyogc2V0IG51bWJlciBvZiBibG9ja3MgZnJlZSBpbiBmaWxlc3lzdGVtICovCit2b2lkIHJl
aXNlcjRfc2V0X2ZyZWVfYmxvY2tzKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIF9f
dTY0IG5yKQoreworCWFzc2VydCgidnMtNTA1Iiwgc3VwZXIgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2
cy01MDYiLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisJZ2V0X3N1cGVyX3ByaXZhdGUoc3Vw
ZXIpLT5ibG9ja3NfZnJlZSA9IG5yOworfQorCisvKiBnZXQgbWtmcyB1bmlxdWUgaWRlbnRpZmll
ciAqLworX191MzIgcmVpc2VyNF9ta2ZzX2lkKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3Vw
ZXIJLyogc3VwZXIgYmxvY2sKKwkJCQkJCQkgICBxdWVyaWVkICovICkKK3sKKwlhc3NlcnQoInZw
Zi0yMjEiLCBzdXBlciAhPSBOVUxMKTsKKwlhc3NlcnQoInZwZi0yMjIiLCBpc19yZWlzZXI0X3N1
cGVyKHN1cGVyKSk7CisJcmV0dXJuIGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+bWtmc19pZDsK
K30KKworLyogYW1vdW50IG9mIGZyZWUgYmxvY2tzIGluIGZpbGUgc3lzdGVtICovCitfX3U2NCBy
ZWlzZXI0X2ZyZWVfY29tbWl0dGVkX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1
cGVyKQoreworCWFzc2VydCgidnMtNDk3Iiwgc3VwZXIgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2cy00
OTgiLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisJcmV0dXJuIGdldF9zdXBlcl9wcml2YXRl
KHN1cGVyKS0+YmxvY2tzX2ZyZWVfY29tbWl0dGVkOworfQorCisvKiBhbW91bnQgb2YgYmxvY2tz
IGluIHRoZSBmaWxlIHN5c3RlbSByZXNlcnZlZCBmb3IgQHVpZCBhbmQgQGdpZCAqLworbG9uZyBy
ZWlzZXI0X3Jlc2VydmVkX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyCS8q
IHN1cGVyIGJsb2NrCisJCQkJCQkJCSAgIHF1ZXJpZWQgKi8gLAorCQkJICAgICB1aWRfdCB1aWQg
LyogdXNlciBpZCAqLyAsCisJCQkgICAgIGdpZF90IGdpZC8qIGdyb3VwIGlkICovKQoreworCWxv
bmcgcmVzZXJ2ZWQ7CisKKwlhc3NlcnQoIm5pa2l0YS00NTYiLCBzdXBlciAhPSBOVUxMKTsKKwlh
c3NlcnQoIm5pa2l0YS00NTciLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisKKwlyZXNlcnZl
ZCA9IDA7CisJaWYgKFJFSVNFUjRfU1VQUE9SVF9HSURfU1BBQ0VfUkVTRVJWQVRJT04pCisJCXJl
c2VydmVkICs9IHJlc2VydmVkX2Zvcl9naWQoc3VwZXIsIGdpZCk7CisJaWYgKFJFSVNFUjRfU1VQ
UE9SVF9VSURfU1BBQ0VfUkVTRVJWQVRJT04pCisJCXJlc2VydmVkICs9IHJlc2VydmVkX2Zvcl91
aWQoc3VwZXIsIHVpZCk7CisJaWYgKFJFSVNFUjRfU1VQUE9SVF9ST09UX1NQQUNFX1JFU0VSVkFU
SU9OICYmICh1aWQgPT0gMCkpCisJCXJlc2VydmVkICs9IHJlc2VydmVkX2Zvcl9yb290KHN1cGVy
KTsKKwlyZXR1cm4gcmVzZXJ2ZWQ7Cit9CisKKy8qIGdldC9zZXQgdmFsdWUgb2YvdG8gZ3JhYmJl
ZCBibG9ja3MgY291bnRlciAqLworX191NjQgcmVpc2VyNF9ncmFiYmVkX2Jsb2Nrcyhjb25zdCBz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKiBzdXBlcikKK3sKKwlhc3NlcnQoInphbS01MTIiLCBzdXBlciAh
PSBOVUxMKTsKKwlhc3NlcnQoInphbS01MTMiLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisK
KwlyZXR1cm4gZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5ibG9ja3NfZ3JhYmJlZDsKK30KKwor
X191NjQgcmVpc2VyNF9mbHVzaF9yZXNlcnZlZChjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1
cGVyKQoreworCWFzc2VydCgidnBmLTI4NSIsIHN1cGVyICE9IE5VTEwpOworCWFzc2VydCgidnBm
LTI4NiIsIGlzX3JlaXNlcjRfc3VwZXIoc3VwZXIpKTsKKworCXJldHVybiBnZXRfc3VwZXJfcHJp
dmF0ZShzdXBlciktPmJsb2Nrc19mbHVzaF9yZXNlcnZlZDsKK30KKworLyogZ2V0L3NldCB2YWx1
ZSBvZi90byBjb3VudGVyIG9mIGZha2UgYWxsb2NhdGVkIGZvcm1hdHRlZCBibG9ja3MgKi8KK19f
dTY0IHJlaXNlcjRfZmFrZV9hbGxvY2F0ZWQoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBl
cikKK3sKKwlhc3NlcnQoInphbS01MTYiLCBzdXBlciAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS01
MTciLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisKKwlyZXR1cm4gZ2V0X3N1cGVyX3ByaXZh
dGUoc3VwZXIpLT5ibG9ja3NfZmFrZV9hbGxvY2F0ZWQ7Cit9CisKKy8qIGdldC9zZXQgdmFsdWUg
b2YvdG8gY291bnRlciBvZiBmYWtlIGFsbG9jYXRlZCB1bmZvcm1hdHRlZCBibG9ja3MgKi8KK19f
dTY0IHJlaXNlcjRfZmFrZV9hbGxvY2F0ZWRfdW5mb3JtYXR0ZWQoY29uc3Qgc3RydWN0IHN1cGVy
X2Jsb2NrICpzdXBlcikKK3sKKwlhc3NlcnQoInphbS01MTYiLCBzdXBlciAhPSBOVUxMKTsKKwlh
c3NlcnQoInphbS01MTciLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisKKwlyZXR1cm4gZ2V0
X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5ibG9ja3NfZmFrZV9hbGxvY2F0ZWRfdW5mb3JtYXR0ZWQ7
Cit9CisKKy8qIGdldC9zZXQgdmFsdWUgb2YvdG8gY291bnRlciBvZiBjbHVzdGVyZWQgYmxvY2tz
ICovCitfX3U2NCByZWlzZXI0X2NsdXN0ZXJlZF9ibG9ja3MoY29uc3Qgc3RydWN0IHN1cGVyX2Js
b2NrICpzdXBlcikKK3sKKwlhc3NlcnQoImVkd2FyZC02MDEiLCBzdXBlciAhPSBOVUxMKTsKKwlh
c3NlcnQoImVkd2FyZC02MDIiLCBpc19yZWlzZXI0X3N1cGVyKHN1cGVyKSk7CisKKwlyZXR1cm4g
Z2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5ibG9ja3NfY2x1c3RlcmVkOworfQorCisvKiBzcGFj
ZSBhbGxvY2F0b3IgdXNlZCBieSB0aGlzIGZpbGUgc3lzdGVtICovCityZWlzZXI0X3NwYWNlX2Fs
bG9jYXRvciAqIHJlaXNlcjRfZ2V0X3NwYWNlX2FsbG9jYXRvcihjb25zdCBzdHJ1Y3Qgc3VwZXJf
YmxvY2sKKwkJCQkJCSAgICAgICpzdXBlcikKK3sKKwlhc3NlcnQoIm5pa2l0YS0xOTY1Iiwgc3Vw
ZXIgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTk2NiIsIGlzX3JlaXNlcjRfc3VwZXIoc3Vw
ZXIpKTsKKwlyZXR1cm4gJmdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+c3BhY2VfYWxsb2NhdG9y
OworfQorCisvKiByZXR1cm4gZmFrZSBpbm9kZSB1c2VkIHRvIGJpbmQgZm9ybWF0dGVkIG5vZGVz
IGluIHRoZSBwYWdlIGNhY2hlICovCitzdHJ1Y3QgaW5vZGUgKnJlaXNlcjRfZ2V0X3N1cGVyX2Zh
a2UoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlhc3NlcnQoIm5pa2l0YS0x
NzU3Iiwgc3VwZXIgIT0gTlVMTCk7CisJcmV0dXJuIGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+
ZmFrZTsKK30KKworLyogcmV0dXJuIGZha2UgaW5vZGUgdXNlZCB0byBiaW5kIGNvcGllZCBvbiBj
YXB0dXJlIG5vZGVzIGluIHRoZSBwYWdlIGNhY2hlICovCitzdHJ1Y3QgaW5vZGUgKnJlaXNlcjRf
Z2V0X2NjX2Zha2UoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlhc3NlcnQo
Im5pa2l0YS0xNzU3Iiwgc3VwZXIgIT0gTlVMTCk7CisJcmV0dXJuIGdldF9zdXBlcl9wcml2YXRl
KHN1cGVyKS0+Y2M7Cit9CisKKy8qIHJldHVybiBmYWtlIGlub2RlIHVzZWQgdG8gYmluZCBiaXRt
YXBzIGFuZCBqb3VybmxhbCBoZWFkcyAqLworc3RydWN0IGlub2RlICpyZWlzZXI0X2dldF9iaXRt
YXBfZmFrZShjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKQoreworCWFzc2VydCgibmlr
aXRhLTE3NTcxIiwgc3VwZXIgIT0gTlVMTCk7CisJcmV0dXJuIGdldF9zdXBlcl9wcml2YXRlKHN1
cGVyKS0+Yml0bWFwOworfQorCisvKiB0cmVlIHVzZWQgYnkgdGhpcyBmaWxlIHN5c3RlbSAqLwor
cmVpc2VyNF90cmVlICpyZWlzZXI0X2dldF90cmVlKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAq
c3VwZXIpCit7CisJYXNzZXJ0KCJuaWtpdGEtNDYwIiwgc3VwZXIgIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtNDYxIiwgaXNfcmVpc2VyNF9zdXBlcihzdXBlcikpOworCXJldHVybiAmZ2V0X3N1
cGVyX3ByaXZhdGUoc3VwZXIpLT50cmVlOworfQorCisvKiBDaGVjayB0aGF0IEBzdXBlciBpcyAo
bG9va3MgbGlrZSkgcmVpc2VyNCBzdXBlciBibG9jay4gVGhpcyBpcyBtYWlubHkgZm9yCisgICB1
c2UgaW4gYXNzZXJ0aW9ucy4gKi8KK2ludCBpc19yZWlzZXI0X3N1cGVyKGNvbnN0IHN0cnVjdCBz
dXBlcl9ibG9jayAqc3VwZXIpCit7CisJcmV0dXJuCisJICAgIHN1cGVyICE9IE5VTEwgJiYKKwkg
ICAgZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpICE9IE5VTEwgJiYKKwkgICAgc3VwZXItPnNfb3Ag
PT0gJihnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPm9wcy5zdXBlcik7Cit9CisKK2ludCByZWlz
ZXI0X2lzX3NldChjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLCByZWlzZXI0X2ZzX2Zs
YWcgZikKK3sKKwlyZXR1cm4gdGVzdF9iaXQoKGludClmLCAmZ2V0X3N1cGVyX3ByaXZhdGUoc3Vw
ZXIpLT5mc19mbGFncyk7Cit9CisKKy8qIGFtb3VudCBvZiBibG9ja3MgcmVzZXJ2ZWQgZm9yIGdp
dmVuIGdyb3VwIGluIGZpbGUgc3lzdGVtICovCitzdGF0aWMgX191NjQgcmVzZXJ2ZWRfZm9yX2dp
ZChjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyIFVOVVNFRF9BUkcsCisJCQkgICAgICBn
aWRfdCBnaWQgVU5VU0VEX0FSRy8qIGdyb3VwIGlkICovKQoreworCXJldHVybiAwOworfQorCisv
KiBhbW91bnQgb2YgYmxvY2tzIHJlc2VydmVkIGZvciBnaXZlbiB1c2VyIGluIGZpbGUgc3lzdGVt
ICovCitzdGF0aWMgX191NjQgcmVzZXJ2ZWRfZm9yX3VpZChjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxv
Y2sgKnN1cGVyIFVOVVNFRF9BUkcsCisJCQkgICAgICB1aWRfdCB1aWQgVU5VU0VEX0FSRy8qIHVz
ZXIgaWQgKi8pCit7CisJcmV0dXJuIDA7Cit9CisKKy8qIGFtb3VudCBvZiBibG9ja3MgcmVzZXJ2
ZWQgZm9yIHN1cGVyIHVzZXIgaW4gZmlsZSBzeXN0ZW0gKi8KK3N0YXRpYyBfX3U2NCByZXNlcnZl
ZF9mb3Jfcm9vdChjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyIFVOVVNFRF9BUkcpCit7
CisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiB0cnVlIGlmIGJsb2NrIG51bWJlciBAYmxrIG1ha2Vz
IHNlbnNlIGZvciB0aGUgZmlsZSBzeXN0ZW0gYXQgQHN1cGVyLgorICovCitpbnQKK3JlaXNlcjRf
YmxvY2tucl9pc19zYW5lX2Zvcihjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLAorCQkJ
ICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBibGspCit7CisJcmVpc2VyNF9zdXBlcl9pbmZv
X2RhdGEgKnNiaW5mbzsKKworCWFzc2VydCgibmlraXRhLTI5NTciLCBzdXBlciAhPSBOVUxMKTsK
Kwlhc3NlcnQoIm5pa2l0YS0yOTU4IiwgYmxrICE9IE5VTEwpOworCisJaWYgKHJlaXNlcjRfYmxv
Y2tucl9pc19mYWtlKGJsaykpCisJCXJldHVybiAxOworCisJc2JpbmZvID0gZ2V0X3N1cGVyX3By
aXZhdGUoc3VwZXIpOworCXJldHVybiAqYmxrIDwgc2JpbmZvLT5ibG9ja19jb3VudDsKK30KKwor
I2lmIFJFSVNFUjRfREVCVUcKKy8qCisgKiB0cnVlLCBpZiBibG9jayBudW1iZXIgQGJsayBtYWtl
cyBzZW5zZSBmb3IgdGhlIGN1cnJlbnQgZmlsZSBzeXN0ZW0KKyAqLworaW50IHJlaXNlcjRfYmxv
Y2tucl9pc19zYW5lKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBibGspCit7CisJcmV0dXJuIHJl
aXNlcjRfYmxvY2tucl9pc19zYW5lX2ZvcihyZWlzZXI0X2dldF9jdXJyZW50X3NiKCksIGJsayk7
Cit9CisjZW5kaWYgIC8qICBSRUlTRVI0X0RFQlVHICAqLworCisvKiBNYWtlIExpbnVzIGhhcHB5
LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAg
IG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAor
ICAgZmlsbC1jb2x1bW46IDEyMAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVu
Y2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC9zdXBlci5oIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L3N1cGVyLmgKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc3VwZXIuaAkx
OTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3Jl
aXNlcjQvc3VwZXIuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4MjIyMjQwMyArMDEwMApAQCAtMCww
ICsxLDQ1NiBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFucyBS
ZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyog
U3VwZXItYmxvY2sgZnVuY3Rpb25zLiBTZWUgc3VwZXIuYyBmb3IgZGV0YWlscy4gKi8KKworI2lm
ICFkZWZpbmVkKF9fUkVJU0VSNF9TVVBFUl9IX18pCisjZGVmaW5lIF9fUkVJU0VSNF9TVVBFUl9I
X18KKworI2luY2x1ZGUgPGxpbnV4L2V4cG9ydGZzLmg+CisKKyNpbmNsdWRlICJ0cmVlLmgiCisj
aW5jbHVkZSAiZW50ZC5oIgorI2luY2x1ZGUgIndhbmRlci5oIgorI2luY2x1ZGUgImZzZGF0YS5o
IgorI2luY2x1ZGUgInBsdWdpbi9vYmplY3QuaCIKKyNpbmNsdWRlICJwbHVnaW4vc3BhY2Uvc3Bh
Y2VfYWxsb2NhdG9yLmgiCisKKy8qCisgKiBGbHVzaCBhbGdvcml0aG1zIHBhcmFtZXRlcnMuCisg
Ki8KK3N0cnVjdCBmbHVzaF9wYXJhbXMgeworCXVuc2lnbmVkIHJlbG9jYXRlX3RocmVzaG9sZDsK
Kwl1bnNpZ25lZCByZWxvY2F0ZV9kaXN0YW5jZTsKKwl1bnNpZ25lZCB3cml0dGVuX3RocmVzaG9s
ZDsKKwl1bnNpZ25lZCBzY2FuX21heG5vZGVzOworfTsKKwordHlwZWRlZiBlbnVtIHsKKwkvKgor
CSAqIFRydWUgaWYgdGhpcyBmaWxlIHN5c3RlbSBkb2Vzbid0IHN1cHBvcnQgaGFyZC1saW5rcyAo
bXVsdGlwbGUgbmFtZXMpCisJICogZm9yIGRpcmVjdG9yaWVzOiB0aGlzIGlzIGRlZmF1bHQgVU5J
WCBiZWhhdmlvci4KKwkgKgorCSAqIElmIGhhcmQtbGlua3Mgb24gZGlyZWN0b2lyZXMgYXJlIG5v
dCBhbGxvd2VkLCBmaWxlIHN5c3RlbSBpcyBBY3ljbGljCisJICogRGlyZWN0ZWQgR3JhcGggKG1v
ZHVsbyBkb3QsIGFuZCBkb3Rkb3QsIG9mIGNvdXJzZSkuCisJICoKKwkgKiBUaGlzIGlzIHVzZWQg
YnkgcmVpc2VyNF9saW5rKCkuCisJICovCisJUkVJU0VSNF9BREcgPSAwLAorCS8qCisJICogc2V0
IGlmIGFsbCBub2RlcyBpbiBpbnRlcm5hbCB0cmVlIGhhdmUgdGhlIHNhbWUgbm9kZSBsYXlvdXQg
cGx1Z2luLgorCSAqIElmIHNvLCB6bm9kZV9ndWVzc19wbHVnaW4oKSB3aWxsIHJldHVybiB0cmVl
LT5ub2RlX3BsdWdpbiBpbiBzdGVhZAorCSAqIG9mIGd1ZXNzaW5nIHBsdWdpbiBieSBwbHVnaW4g
aWQgc3RvcmVkIGluIHRoZSBub2RlLgorCSAqLworCVJFSVNFUjRfT05FX05PREVfUExVR0lOID0g
MSwKKwkvKiBpZiBzZXQsIGJzZCBnaWQgYXNzaWdubWVudCBpcyBzdXBwb3J0ZWQuICovCisJUkVJ
U0VSNF9CU0RfR0lEID0gMiwKKwkvKiBbbWFjXV90aW1lIGFyZSAzMiBiaXQgaW4gaW5vZGUgKi8K
KwlSRUlTRVI0XzMyX0JJVF9USU1FUyA9IDMsCisJLyogbG9hZCBhbGwgYml0bWFwIGJsb2NrcyBh
dCBtb3VudCB0aW1lICovCisJUkVJU0VSNF9ET05UX0xPQURfQklUTUFQID0gNSwKKwkvKiBlbmZv
cmNlIGF0b21pY2l0eSBkdXJpbmcgd3JpdGUoMikgKi8KKwlSRUlTRVI0X0FUT01JQ19XUklURSA9
IDYsCisJLyogZW5hYmxlIGlzc3Vpbmcgb2YgZGlzY2FyZCByZXF1ZXN0cyAqLworCVJFSVNFUjRf
RElTQ0FSRCA9IDgsCisJLyogZGlzYWJsZSBob2xlIHB1bmNoaW5nIGF0IGZsdXNoIHRpbWUgKi8K
KwlSRUlTRVI0X0RPTlRfUFVOQ0hfSE9MRVMgPSA5Cit9IHJlaXNlcjRfZnNfZmxhZzsKKworLyoK
KyAqIFZGUyByZWxhdGVkIG9wZXJhdGlvbiB2ZWN0b3JzLgorICovCitzdHJ1Y3Qgb2JqZWN0X29w
cyB7CisJc3RydWN0IHN1cGVyX29wZXJhdGlvbnMgc3VwZXI7CisJc3RydWN0IGRlbnRyeV9vcGVy
YXRpb25zIGRlbnRyeTsKKwlzdHJ1Y3QgZXhwb3J0X29wZXJhdGlvbnMgZXhwb3J0OworfTsKKwor
LyogcmVpc2VyNC1zcGVjaWZpYyBwYXJ0IG9mIHN1cGVyIGJsb2NrCisKKyAgIExvY2tpbmcKKwor
ICAgRmllbGRzIGltbXV0YWJsZSBhZnRlciBtb3VudDoKKworICAgIC0+b2lkKgorICAgIC0+c3Bh
Y2UqCisgICAgLT5kZWZhdWx0X1t1Z11pZAorICAgIC0+bWtmc19pZAorICAgIC0+dHJhY2VfZmxh
Z3MKKyAgICAtPmRlYnVnX2ZsYWdzCisgICAgLT5mc19mbGFncworICAgIC0+ZGZfcGx1ZworICAg
IC0+b3B0aW1hbF9pb19zaXplCisgICAgLT5wbHVnCisgICAgLT5mbHVzaAorICAgIC0+dSAoYmFk
IG5hbWUpCisgICAgLT50eG5tZ3IKKyAgICAtPnJhX3BhcmFtcworICAgIC0+ZnN1aWQKKyAgICAt
PmpvdXJuYWxfaGVhZGVyCisgICAgLT5qb3VybmFsX2Zvb3RlcgorCisgICBGaWVsZHMgcHJvdGVj
dGVkIGJ5IC0+bG5vZGVfZ3VhcmQKKworICAgIC0+bG5vZGVfaHRhYmxlCisKKyAgIEZpZWxkcyBw
cm90ZWN0ZWQgYnkgcGVyLXN1cGVyIGJsb2NrIHNwaW4gbG9jaworCisgICAgLT5ibG9ja19jb3Vu
dAorICAgIC0+YmxvY2tzX3VzZWQKKyAgICAtPmJsb2Nrc19mcmVlCisgICAgLT5ibG9ja3NfZnJl
ZV9jb21taXR0ZWQKKyAgICAtPmJsb2Nrc19ncmFiYmVkCisgICAgLT5ibG9ja3NfZmFrZV9hbGxv
Y2F0ZWRfdW5mb3JtYXR0ZWQKKyAgICAtPmJsb2Nrc19mYWtlX2FsbG9jYXRlZAorICAgIC0+Ymxv
Y2tzX2ZsdXNoX3Jlc2VydmVkCisgICAgLT5lZmx1c2hlZAorICAgIC0+YmxvY2tucl9oaW50X2Rl
ZmF1bHQKKworICAgQWZ0ZXIgam91cm5hbCByZXBsYXlpbmcgZHVyaW5nIG1vdW50LAorCisgICAg
LT5sYXN0X2NvbW1pdHRlZF90eAorCisgICBpcyBwcm90ZWN0ZWQgYnkgLT50bWdyLmNvbW1pdF9t
dXRleAorCisgICBJbnZhcmlhbnRzIGludm9sdmluZyB0aGlzIGRhdGEtdHlwZToKKworICAgICAg
W3NiLWJsb2NrLWNvdW50c10KKyAgICAgIFtzYi1ncmFiYmVkXQorICAgICAgW3NiLWZha2UtYWxs
b2NhdGVkXQorKi8KK3N0cnVjdCByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSB7CisJLyoKKwkgKiBn
dWFyZCBzcGlubG9jayB3aGljaCBwcm90ZWN0cyByZWlzZXI0IHN1cGVyIGJsb2NrIGZpZWxkcyAo
Y3VycmVudGx5CisJICogYmxvY2tzX2ZyZWUsIGJsb2Nrc19mcmVlX2NvbW1pdHRlZCkKKwkgKi8K
KwlzcGlubG9ja190IGd1YXJkOworCisJLyogbmV4dCBvaWQgdGhhdCB3aWxsIGJlIHJldHVybmVk
IGJ5IG9pZF9hbGxvY2F0ZSgpICovCisJb2lkX3QgbmV4dF90b191c2U7CisJLyogdG90YWwgbnVt
YmVyIG9mIHVzZWQgb2lkcyAqLworCW9pZF90IG9pZHNfaW5fdXNlOworCisJLyogc3BhY2UgbWFu
YWdlciBwbHVnaW4gKi8KKwlyZWlzZXI0X3NwYWNlX2FsbG9jYXRvciBzcGFjZV9hbGxvY2F0b3I7
CisKKwkvKiB0cmFuc2FjdGlvbiBtb2RlbCAqLworCXJlaXNlcjRfdHhtb2RfaWQgdHhtb2Q7CisK
KwkvKiByZWlzZXI0IGludGVybmFsIHRyZWUgKi8KKwlyZWlzZXI0X3RyZWUgdHJlZTsKKworCS8q
CisJICogZGVmYXVsdCB1c2VyIGlkIHVzZWQgZm9yIGxpZ2h0LXdlaWdodCBmaWxlcyB3aXRob3V0
IHRoZWlyIG93bgorCSAqIHN0YXQtZGF0YS4KKwkgKi8KKwlfX3UzMiBkZWZhdWx0X3VpZDsKKwor
CS8qCisJICogZGVmYXVsdCBncm91cCBpZCB1c2VkIGZvciBsaWdodC13ZWlnaHQgZmlsZXMgd2l0
aG91dCB0aGVpciBvd24KKwkgKiBzdGF0LWRhdGEuCisJICovCisJX191MzIgZGVmYXVsdF9naWQ7
CisKKwkvKiBta2ZzIGlkZW50aWZpZXIgZ2VuZXJhdGVkIGF0IG1rZnMgdGltZS4gKi8KKwlfX3Uz
MiBta2ZzX2lkOworCS8qIGFtb3VudCBvZiBibG9ja3MgaW4gYSBmaWxlIHN5c3RlbSAqLworCV9f
dTY0IGJsb2NrX2NvdW50OworCisJLyogaW52aW9sYWJsZSByZXNlcnZlICovCisJX191NjQgYmxv
Y2tzX3Jlc2VydmVkOworCisJLyogYW1vdW50IG9mIGJsb2NrcyB1c2VkIGJ5IGZpbGUgc3lzdGVt
IGRhdGEgYW5kIG1ldGEtZGF0YS4gKi8KKwlfX3U2NCBibG9ja3NfdXNlZDsKKworCS8qCisJICog
YW1vdW50IG9mIGZyZWUgYmxvY2tzLiBUaGlzIGlzICJ3b3JraW5nIiBmcmVlIGJsb2NrcyBjb3Vu
dGVyLiBJdCBpcworCSAqIGxpa2UgIndvcmtpbmciIGJpdG1hcCwgcGxlYXNlIHNlZSBibG9ja19h
bGxvYy5jIGZvciBkZXNjcmlwdGlvbi4KKwkgKi8KKwlfX3U2NCBibG9ja3NfZnJlZTsKKworCS8q
CisJICogZnJlZSBibG9jayBjb3VudCBmb3IgZnMgY29tbWl0dGVkIHN0YXRlLiBUaGlzIGlzICJj
b21taXQiIHZlcnNpb24gb2YKKwkgKiBmcmVlIGJsb2NrIGNvdW50ZXIuCisJICovCisJX191NjQg
YmxvY2tzX2ZyZWVfY29tbWl0dGVkOworCisJLyoKKwkgKiBudW1iZXIgb2YgYmxvY2tzIHJlc2Vy
dmVkIGZvciBmdXJ0aGVyIGFsbG9jYXRpb24sIGZvciBhbGwKKwkgKiB0aHJlYWRzLgorCSAqLwor
CV9fdTY0IGJsb2Nrc19ncmFiYmVkOworCisJLyogbnVtYmVyIG9mIGZha2UgYWxsb2NhdGVkIHVu
Zm9ybWF0dGVkIGJsb2NrcyBpbiB0cmVlLiAqLworCV9fdTY0IGJsb2Nrc19mYWtlX2FsbG9jYXRl
ZF91bmZvcm1hdHRlZDsKKworCS8qIG51bWJlciBvZiBmYWtlIGFsbG9jYXRlZCBmb3JtYXR0ZWQg
YmxvY2tzIGluIHRyZWUuICovCisJX191NjQgYmxvY2tzX2Zha2VfYWxsb2NhdGVkOworCisJLyog
bnVtYmVyIG9mIGJsb2NrcyByZXNlcnZlZCBmb3IgZmx1c2ggb3BlcmF0aW9ucy4gKi8KKwlfX3U2
NCBibG9ja3NfZmx1c2hfcmVzZXJ2ZWQ7CisKKwkvKiBudW1iZXIgb2YgYmxvY2tzIHJlc2VydmVk
IGZvciBjbHVzdGVyIG9wZXJhdGlvbnMuICovCisJX191NjQgYmxvY2tzX2NsdXN0ZXJlZDsKKwor
CS8qIHVuaXF1ZSBmaWxlLXN5c3RlbSBpZGVudGlmaWVyICovCisJX191MzIgZnN1aWQ7CisKKwkv
KiBPbi1kaXNrIGZvcm1hdCB2ZXJzaW9uLiBJZiBkb2VzIG5vdCBlcXVhbCB0byB0aGUgZGlza19m
b3JtYXQKKwkgICBwbHVnaW4gdmVyc2lvbiwgc29tZSBmb3JtYXQgdXBkYXRlcyAoZS5nLiBlbmxh
cmdpbmcgcGx1Z2luCisJICAgc2V0LCBldGMpIG1heSBoYXZlIHBsYWNlIG9uIG1vdW50LiAqLwor
CWludCB2ZXJzaW9uOworCisJLyogZmlsZS1zeXN0ZW0gd2lkZSBmbGFncy4gU2VlIHJlaXNlcjRf
ZnNfZmxhZyBlbnVtICovCisJdW5zaWduZWQgbG9uZyBmc19mbGFnczsKKworCS8qIHRyYW5zYWN0
aW9uIG1hbmFnZXIgKi8KKwl0eG5fbWdyIHRtZ3I7CisKKwkvKiBlbnQgdGhyZWFkICovCisJZW50
ZF9jb250ZXh0IGVudGQ7CisKKwkvKiBmYWtlIGlub2RlIHVzZWQgdG8gYmluZCBmb3JtYXR0ZWQg
bm9kZXMgKi8KKwlzdHJ1Y3QgaW5vZGUgKmZha2U7CisJLyogaW5vZGUgdXNlZCB0byBiaW5kIGJp
dG1hcHMgKGFuZCBqb3VybmFsIGhlYWRzKSAqLworCXN0cnVjdCBpbm9kZSAqYml0bWFwOworCS8q
IGlub2RlIHVzZWQgdG8gYmluZCBjb3BpZWQgb24gY2FwdHVyZSBub2RlcyAqLworCXN0cnVjdCBp
bm9kZSAqY2M7CisKKwkvKiBkaXNrIGxheW91dCBwbHVnaW4gKi8KKwlkaXNrX2Zvcm1hdF9wbHVn
aW4gKmRmX3BsdWc7CisKKwkvKiBkaXNrIGxheW91dCBzcGVjaWZpYyBwYXJ0IG9mIHJlaXNlcjQg
c3VwZXIgaW5mbyBkYXRhICovCisJdW5pb24geworCQlmb3JtYXQ0MF9zdXBlcl9pbmZvIGZvcm1h
dDQwOworCX0gdTsKKworCS8qIHZhbHVlIHdlIHJldHVybiBpbiBzdF9ibGtzaXplIG9uIHN0YXQo
MikgKi8KKwl1bnNpZ25lZCBsb25nIG9wdGltYWxfaW9fc2l6ZTsKKworCS8qIHBhcmFtZXRlcnMg
Zm9yIHRoZSBmbHVzaCBhbGdvcml0aG0gKi8KKwlzdHJ1Y3QgZmx1c2hfcGFyYW1zIGZsdXNoOwor
CisJLyogcG9pbnRlcnMgdG8gam5vZGVzIGZvciBqb3VybmFsIGhlYWRlciBhbmQgZm9vdGVyICov
CisJam5vZGUgKmpvdXJuYWxfaGVhZGVyOworCWpub2RlICpqb3VybmFsX2Zvb3RlcjsKKworCWpv
dXJuYWxfbG9jYXRpb24gamxvYzsKKworCS8qIGhlYWQgYmxvY2sgbnVtYmVyIG9mIGxhc3QgY29t
bWl0dGVkIHRyYW5zYWN0aW9uICovCisJX191NjQgbGFzdF9jb21taXR0ZWRfdHg7CisKKwkvKgor
CSAqIHdlIHJlbWVtYmVyIGxhc3Qgd3JpdHRlbiBsb2NhdGlvbiBmb3IgdXNpbmcgYXMgYSBoaW50
IGZvciBuZXcgYmxvY2sKKwkgKiBhbGxvY2F0aW9uCisJICovCisJX191NjQgYmxvY2tucl9oaW50
X2RlZmF1bHQ7CisKKwkvKiBjb21taXR0ZWQgbnVtYmVyIG9mIGZpbGVzIChvaWQgYWxsb2NhdG9y
IHN0YXRlIHZhcmlhYmxlICkgKi8KKwlfX3U2NCBucl9maWxlc19jb21taXR0ZWQ7CisKKwlzdHJ1
Y3QgZm9ybWF0dGVkX3JhX3BhcmFtcyByYV9wYXJhbXM7CisKKwkvKgorCSAqIEEgbXV0ZXggZm9y
IHNlcmlhbGl6aW5nIGN1dCB0cmVlIG9wZXJhdGlvbiBpZiBvdXQtb2YtZnJlZS1zcGFjZToKKwkg
KiB0aGUgb25seSBvbmUgY3V0X3RyZWUgdGhyZWFkIGlzIGFsbG93ZWQgdG8gZ3JhYiBzcGFjZSBm
cm9tIHJlc2VydmVkCisJICogYXJlYSAoaXQgaXMgNSUgb2YgZGlzayBzcGFjZSkKKwkgKi8KKwlz
dHJ1Y3QgbXV0ZXggZGVsZXRlX211dGV4OworCS8qIHRhc2sgb3duaW5nIC0+ZGVsZXRlX211dGV4
ICovCisJc3RydWN0IHRhc2tfc3RydWN0ICpkZWxldGVfbXV0ZXhfb3duZXI7CisKKwkvKiBEaXNr
bWFwJ3MgYmxvY2tudW1iZXIgKi8KKwlfX3U2NCBkaXNrbWFwX2Jsb2NrOworCisJLyogV2hhdCB0
byBkbyBpbiBjYXNlIG9mIGVycm9yICovCisJaW50IG9uZXJyb3I7CisKKwkvKiBvcGVyYXRpb25z
IGZvciBvYmplY3RzIG9uIHRoaXMgZmlsZSBzeXN0ZW0gKi8KKwlzdHJ1Y3Qgb2JqZWN0X29wcyBv
cHM7CisKKwkvKgorCSAqIHN0cnVjdHVyZSB0byBtYWludGFpbiBkX2N1cnNvcnMuIFNlZSBwbHVn
aW4vZmlsZV9vcHNfcmVhZGRpci5jIGZvcgorCSAqIG1vcmUgZGV0YWlscworCSAqLworCXN0cnVj
dCBkX2N1cnNvcl9pbmZvIGRfaW5mbzsKKwlzdHJ1Y3QgY3J5cHRvX3NoYXNoICpjc3VtX3RmbTsK
KworI2lmZGVmIENPTkZJR19SRUlTRVI0X0JBREJMT0NLUworCS8qIEFsdGVybmF0aXZlIG1hc3Rl
ciBzdXBlcmJsb2NrIG9mZnNldCAoaW4gYnl0ZXMpICovCisJdW5zaWduZWQgbG9uZyBhbHRzdXBl
cjsKKyNlbmRpZgorCXN0cnVjdCByZXBhY2tlciAqcmVwYWNrZXI7CisJc3RydWN0IHBhZ2UgKnN0
YXR1c19wYWdlOworCXN0cnVjdCBiaW8gKnN0YXR1c19iaW87CisKKyNpZiBSRUlTRVI0X0RFQlVH
CisJLyoKKwkgKiBtaW5pbXVtIHVzZWQgYmxvY2tzIHZhbHVlIChpbmNsdWRlcyBzdXBlciBibG9j
a3MsIGJpdG1hcCBibG9ja3MgYW5kCisJICogb3RoZXIgZnMgcmVzZXJ2ZWQgYXJlYXMpLCBkZXBl
bmRzIG9uIGZzIGZvcm1hdCBhbmQgZnMgc2l6ZS4KKwkgKi8KKwlfX3U2NCBtaW5fYmxvY2tzX3Vz
ZWQ7CisKKwkvKgorCSAqIHdoZW4gZGVidWdnaW5nIGlzIG9uLCBhbGwgam5vZGVzIChpbmNsdWRp
bmcgem5vZGVzLCBiaXRtYXBzLCBldGMuKQorCSAqIGFyZSBrZXB0IG9uIGEgbGlzdCBhbmNob3Jl
ZCBhdCBzYmluZm8tPmFsbF9qbm9kZXMuIFRoaXMgbGlzdCBpcworCSAqIHByb3RlY3RlZCBieSBz
YmluZm8tPmFsbF9ndWFyZCBzcGluIGxvY2suIFRoaXMgbG9jayBzaG91bGQgYmUgdGFrZW4KKwkg
KiB3aXRoIF9pcnEgbW9kaWZpZXIsIGJlY2F1c2UgaXQgaXMgYWxzbyBtb2RpZmllZCBmcm9tIGlu
dGVycnVwdAorCSAqIGNvbnRleHRzIChieSBSQ1UpLgorCSAqLworCXNwaW5sb2NrX3QgYWxsX2d1
YXJkOworCS8qIGxpc3Qgb2YgYWxsIGpub2RlcyAqLworCXN0cnVjdCBsaXN0X2hlYWQgYWxsX2pu
b2RlczsKKyNlbmRpZgorCXN0cnVjdCBkZW50cnkgKmRlYnVnZnNfcm9vdDsKK307CisKK2V4dGVy
biByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqZ2V0X3N1cGVyX3ByaXZhdGVfbm9jaGVjayhjb25z
dCBzdHJ1Y3QKKwkJCQkJCQkgIHN1cGVyX2Jsb2NrICogc3VwZXIpOworCisvKiBSZXR1cm4gcmVp
c2VyNC1zcGVjaWZpYyBwYXJ0IG9mIHN1cGVyIGJsb2NrICovCitzdGF0aWMgaW5saW5lIHJlaXNl
cjRfc3VwZXJfaW5mb19kYXRhICpnZXRfc3VwZXJfcHJpdmF0ZShjb25zdCBzdHJ1Y3QKKwkJCQkJ
CQkgc3VwZXJfYmxvY2sgKiBzdXBlcikKK3sKKwlhc3NlcnQoIm5pa2l0YS00NDciLCBzdXBlciAh
PSBOVUxMKTsKKworCXJldHVybiAocmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKikgc3VwZXItPnNf
ZnNfaW5mbzsKK30KKworLyogZ2V0IGVudCBjb250ZXh0IGZvciB0aGUgQHN1cGVyICovCitzdGF0
aWMgaW5saW5lIGVudGRfY29udGV4dCAqZ2V0X2VudGRfY29udGV4dChzdHJ1Y3Qgc3VwZXJfYmxv
Y2sgKnN1cGVyKQoreworCXJldHVybiAmZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5lbnRkOwor
fQorCisvKiAiQ3VycmVudCIgc3VwZXItYmxvY2s6IG1haW4gc3VwZXIgYmxvY2sgdXNlZCBkdXJp
bmcgY3VycmVudCBzeXN0ZW0KKyAgIGNhbGwuIFJlZmVyZW5jZSB0byB0aGlzIHN1cGVyIGJsb2Nr
IGlzIHN0b3JlZCBpbiByZWlzZXI0X2NvbnRleHQuICovCitzdGF0aWMgaW5saW5lIHN0cnVjdCBz
dXBlcl9ibG9jayAqcmVpc2VyNF9nZXRfY3VycmVudF9zYih2b2lkKQoreworCXJldHVybiBnZXRf
Y3VycmVudF9jb250ZXh0KCktPnN1cGVyOworfQorCisvKiBSZWlzZXI0LXNwZWNpZmljIHBhcnQg
b2YgImN1cnJlbnQiIHN1cGVyLWJsb2NrOiBtYWluIHN1cGVyIGJsb2NrIHVzZWQKKyAgIGR1cmlu
ZyBjdXJyZW50IHN5c3RlbSBjYWxsLiBSZWZlcmVuY2UgdG8gdGhpcyBzdXBlciBibG9jayBpcyBz
dG9yZWQgaW4KKyAgIHJlaXNlcjRfY29udGV4dC4gKi8KK3N0YXRpYyBpbmxpbmUgcmVpc2VyNF9z
dXBlcl9pbmZvX2RhdGEgKmdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUodm9pZCkKK3sKKwlyZXR1
cm4gZ2V0X3N1cGVyX3ByaXZhdGUocmVpc2VyNF9nZXRfY3VycmVudF9zYigpKTsKK30KKworc3Rh
dGljIGlubGluZSBzdHJ1Y3QgZm9ybWF0dGVkX3JhX3BhcmFtcyAqZ2V0X2N1cnJlbnRfc3VwZXJf
cmFfcGFyYW1zKHZvaWQpCit7CisJcmV0dXJuICYoZ2V0X2N1cnJlbnRfc3VwZXJfcHJpdmF0ZSgp
LT5yYV9wYXJhbXMpOworfQorCisvKgorICogdHJ1ZSwgaWYgQHRyZWUgcmVwcmVzZW50cyByZWFk
LW9ubHkgZmlsZSBzeXN0ZW0KKyAqLworc3RhdGljIGlubGluZSBpbnQgcm9mc190cmVlKHJlaXNl
cjRfdHJlZSAqIHRyZWUpCit7CisJcmV0dXJuIHNiX3Jkb25seSh0cmVlLT5zdXBlcik7Cit9CisK
Ky8qCisgKiB0cnVlLCBpZiBmaWxlIHN5c3RlbSB3aGVyZSBAbm9kZSBsaXZlcyBvbiwgaXMgcmVh
ZC1vbmx5CisgKi8KK3N0YXRpYyBpbmxpbmUgaW50IHJvZnNfam5vZGUoam5vZGUgKiBub2RlKQor
eworCXJldHVybiByb2ZzX3RyZWUoam5vZGVfZ2V0X3RyZWUobm9kZSkpOworfQorCitleHRlcm4g
X191NjQgcmVpc2VyNF9jdXJyZW50X2Jsb2NrX2NvdW50KHZvaWQpOworCitleHRlcm4gdm9pZCBi
dWlsZF9vYmplY3Rfb3BzKHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIHN0cnVjdCBvYmplY3Rf
b3BzICpvcHMpOworCisjZGVmaW5lIFJFSVNFUjRfU1VQRVJfTUFHSUMgMHg1MjM0NTM2MgkvKiAo
KihfX3UzMiAqKSJSNFNiIik7ICovCisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzcGluX2xvY2tfcmVp
c2VyNF9zdXBlcihyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvKQoreworCXNwaW5fbG9j
aygmKHNiaW5mby0+Z3VhcmQpKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHNwaW5fdW5sb2Nr
X3JlaXNlcjRfc3VwZXIocmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbykKK3sKKwlhc3Nl
cnRfc3Bpbl9sb2NrZWQoJihzYmluZm8tPmd1YXJkKSk7CisJc3Bpbl91bmxvY2soJihzYmluZm8t
Pmd1YXJkKSk7Cit9CisKK2V4dGVybiBfX3U2NCByZWlzZXI0X2ZsdXNoX3Jlc2VydmVkKGNvbnN0
IHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9pc19zZXQoY29uc3Qg
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciwgcmVpc2VyNF9mc19mbGFnIGYpOworZXh0ZXJuIGxv
bmcgcmVpc2VyNF9zdGF0ZnNfdHlwZShjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKTsK
K2V4dGVybiBfX3U2NCByZWlzZXI0X2Jsb2NrX2NvdW50KGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9j
ayAqc3VwZXIpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9zZXRfYmxvY2tfY291bnQoY29uc3Qgc3Ry
dWN0IHN1cGVyX2Jsb2NrICpzdXBlciwgX191NjQgbnIpOworZXh0ZXJuIF9fdTY0IHJlaXNlcjRf
ZGF0YV9ibG9ja3MoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcik7CitleHRlcm4gdm9p
ZCByZWlzZXI0X3NldF9kYXRhX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVy
LCBfX3U2NCBucik7CitleHRlcm4gX191NjQgcmVpc2VyNF9mcmVlX2Jsb2Nrcyhjb25zdCBzdHJ1
Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfc2V0X2ZyZWVfYmxv
Y2tzKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIF9fdTY0IG5yKTsKK2V4dGVybiBf
X3UzMiByZWlzZXI0X21rZnNfaWQoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcik7CisK
K2V4dGVybiBfX3U2NCByZWlzZXI0X2ZyZWVfY29tbWl0dGVkX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKnN1cGVyKTsKKworZXh0ZXJuIF9fdTY0IHJlaXNlcjRfZ3JhYmJlZF9ibG9j
a3MoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICopOworZXh0ZXJuIF9fdTY0IHJlaXNlcjRfZmFr
ZV9hbGxvY2F0ZWQoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICopOworZXh0ZXJuIF9fdTY0IHJl
aXNlcjRfZmFrZV9hbGxvY2F0ZWRfdW5mb3JtYXR0ZWQoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2Nr
ICopOworZXh0ZXJuIF9fdTY0IHJlaXNlcjRfY2x1c3RlcmVkX2Jsb2Nrcyhjb25zdCBzdHJ1Y3Qg
c3VwZXJfYmxvY2sgKik7CisKK2V4dGVybiBsb25nIHJlaXNlcjRfcmVzZXJ2ZWRfYmxvY2tzKGNv
bnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIsIHVpZF90IHVpZCwKKwkJCQkgICAgZ2lkX3Qg
Z2lkKTsKKworZXh0ZXJuIHJlaXNlcjRfc3BhY2VfYWxsb2NhdG9yICoKK3JlaXNlcjRfZ2V0X3Nw
YWNlX2FsbG9jYXRvcihjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKTsKK2V4dGVybiBy
ZWlzZXI0X29pZF9hbGxvY2F0b3IgKgorcmVpc2VyNF9nZXRfb2lkX2FsbG9jYXRvcihjb25zdCBz
dHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKTsKK2V4dGVybiBzdHJ1Y3QgaW5vZGUgKnJlaXNlcjRf
Z2V0X3N1cGVyX2Zha2UoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcik7CitleHRlcm4g
c3RydWN0IGlub2RlICpyZWlzZXI0X2dldF9jY19mYWtlKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9j
ayAqc3VwZXIpOworZXh0ZXJuIHN0cnVjdCBpbm9kZSAqcmVpc2VyNF9nZXRfYml0bWFwX2Zha2Uo
Y29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcik7CitleHRlcm4gcmVpc2VyNF90cmVlICpy
ZWlzZXI0X2dldF90cmVlKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpOworZXh0ZXJu
IGludCBpc19yZWlzZXI0X3N1cGVyKGNvbnN0IHN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXIpOwor
CitleHRlcm4gaW50IHJlaXNlcjRfYmxvY2tucl9pc19zYW5lKGNvbnN0IHJlaXNlcjRfYmxvY2tf
bnIgKiBibGspOworZXh0ZXJuIGludCByZWlzZXI0X2Jsb2NrbnJfaXNfc2FuZV9mb3IoY29uc3Qg
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlciwKKwkJCQkgICAgICAgY29uc3QgcmVpc2VyNF9ibG9j
a19uciAqIGJsayk7CitleHRlcm4gaW50IHJlaXNlcjRfZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXJf
YmxvY2sgKnMsIHZvaWQgKmRhdGEsIGludCBzaWxlbnQpOworZXh0ZXJuIGludCByZWlzZXI0X2Rv
bmVfc3VwZXIoc3RydWN0IHN1cGVyX2Jsb2NrICpzKTsKKworLyogc3RlcCBvZiBmaWxsIHN1cGVy
ICovCitleHRlcm4gaW50IHJlaXNlcjRfaW5pdF9mc19pbmZvKHN0cnVjdCBzdXBlcl9ibG9jayAq
KTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9uZV9mc19pbmZvKHN0cnVjdCBzdXBlcl9ibG9jayAq
KTsKK2V4dGVybiBpbnQgcmVpc2VyNF9pbml0X3N1cGVyX2RhdGEoc3RydWN0IHN1cGVyX2Jsb2Nr
ICosIGNoYXIgKm9wdF9zdHJpbmcpOworZXh0ZXJuIGludCByZWlzZXI0X2luaXRfcmVhZF9zdXBl
cihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKiwgaW50IHNpbGVudCk7CitleHRlcm4gaW50IHJlaXNlcjRf
aW5pdF9yb290X2lub2RlKHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK2V4dGVybiByZWlzZXI0X3Bs
dWdpbiAqZ2V0X2RlZmF1bHRfcGx1Z2luKHBzZXRfbWVtYmVyIG1lbWIpOworCisvKiBNYXhpbWFs
IHBvc3NpYmxlIG9iamVjdCBpZC4gKi8KKyNkZWZpbmUgIEFCU09MVVRFX01BWF9PSUQgKChvaWRf
dCl+MCkKKworI2RlZmluZSBPSURTX1JFU0VSVkVEICAoMSA8PCAxNikKK2ludCBvaWRfaW5pdF9h
bGxvY2F0b3Ioc3RydWN0IHN1cGVyX2Jsb2NrICosIG9pZF90IG5yX2ZpbGVzLCBvaWRfdCBuZXh0
KTsKK29pZF90IG9pZF9hbGxvY2F0ZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CitpbnQgb2lkX3Jl
bGVhc2Uoc3RydWN0IHN1cGVyX2Jsb2NrICosIG9pZF90KTsKK29pZF90IG9pZF9uZXh0KGNvbnN0
IHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKK3ZvaWQgb2lkX2NvdW50X2FsbG9jYXRlZCh2b2lkKTsK
K3ZvaWQgb2lkX2NvdW50X3JlbGVhc2VkKHZvaWQpOworbG9uZyBvaWRzX3VzZWQoY29uc3Qgc3Ry
dWN0IHN1cGVyX2Jsb2NrICopOworCisjaWYgUkVJU0VSNF9ERUJVRwordm9pZCBwcmludF9mc19p
bmZvKGNvbnN0IGNoYXIgKnByZWZpeCwgY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICopOworI2Vu
ZGlmCisKK2V4dGVybiB2b2lkIGRlc3Ryb3lfcmVpc2VyNF9jYWNoZShzdHJ1Y3Qga21lbV9jYWNo
ZSAqKik7CisKK2V4dGVybiBzdHJ1Y3Qgc3VwZXJfb3BlcmF0aW9ucyByZWlzZXI0X3N1cGVyX29w
ZXJhdGlvbnM7CitleHRlcm4gc3RydWN0IGV4cG9ydF9vcGVyYXRpb25zIHJlaXNlcjRfZXhwb3J0
X29wZXJhdGlvbnM7CitleHRlcm4gc3RydWN0IGRlbnRyeV9vcGVyYXRpb25zIHJlaXNlcjRfZGVu
dHJ5X29wZXJhdGlvbnM7CisKKy8qIF9fUkVJU0VSNF9TVVBFUl9IX18gKi8KKyNlbmRpZgorCisv
KgorICogTG9jYWwgdmFyaWFibGVzOgorICogYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAq
IG1vZGUtbmFtZTogIkxDIgorICogYy1iYXNpYy1vZmZzZXQ6IDgKKyAqIHRhYi13aWR0aDogOAor
ICogZmlsbC1jb2x1bW46IDEyMAorICogRW5kOgorICovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvc3VwZXJfb3BzLmMgbGludXgtNS40LjE3
L2ZzL3JlaXNlcjQvc3VwZXJfb3BzLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
c3VwZXJfb3BzLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3N1cGVyX29wcy5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDgyMjIy
NDAzICswMTAwCkBAIC0wLDAgKzEsNzkwIEBACisvKiBDb3B5cmlnaHQgMjAwNSBieSBIYW5zIFJl
aXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisjaW5j
bHVkZSAiaW5vZGUuaCIKKyNpbmNsdWRlICJwYWdlX2NhY2hlLmgiCisjaW5jbHVkZSAia3R4bm1n
cmQuaCIKKyNpbmNsdWRlICJmbHVzaC5oIgorI2luY2x1ZGUgInNhZmVfbGluay5oIgorI2luY2x1
ZGUgImNoZWNrc3VtLmgiCisKKyNpbmNsdWRlIDxsaW51eC92ZnMuaD4KKyNpbmNsdWRlIDxsaW51
eC93cml0ZWJhY2suaD4KKyNpbmNsdWRlIDxsaW51eC9tb3VudC5oPgorI2luY2x1ZGUgPGxpbnV4
L3NlcV9maWxlLmg+CisjaW5jbHVkZSA8bGludXgvZGVidWdmcy5oPgorI2luY2x1ZGUgPGxpbnV4
L2JhY2tpbmctZGV2Lmg+CisjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CisKKy8qIHNsYWIgY2Fj
aGUgZm9yIGlub2RlcyAqLworc3RhdGljIHN0cnVjdCBrbWVtX2NhY2hlICppbm9kZV9jYWNoZTsK
Kworc3RhdGljIHN0cnVjdCBkZW50cnkgKnJlaXNlcjRfZGVidWdmc19yb290ID0gTlVMTDsKKwor
LyoqCisgKiBpbml0X29uY2UgLSBjb25zdHJ1Y3RvciBmb3IgcmVpc2VyNCBpbm9kZXMKKyAqIEBj
YWNoZTogY2FjaGUgQG9iaiBiZWxvbmdzIHRvCisgKiBAb2JqOiBpbm9kZSB0byBiZSBpbml0aWFs
aXplZAorICoKKyAqIEluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIG5l
dyBwYWdlIGlzIGFsbG9jYXRlZCBieSByZWlzZXI0CisgKiBpbm9kZSBjYWNoZS4gSXQgaXMgc2V0
IG9uIGlub2RlIGNhY2hlIGNyZWF0aW9uLgorICovCitzdGF0aWMgdm9pZCBpbml0X29uY2Uodm9p
ZCAqb2JqKQoreworCXN0cnVjdCByZWlzZXI0X2lub2RlX29iamVjdCAqaW5mbzsKKworCWluZm8g
PSBvYmo7CisKKwkvKiBpbml0aWFsaXplIHZmcyBpbm9kZSAqLworCWlub2RlX2luaXRfb25jZSgm
aW5mby0+dmZzX2lub2RlKTsKKworCS8qCisJICogaW5pdGlhbGl6ZSByZWlzZXI0IHNwZWNpZmlj
IHBhcnQgZm8gaW5vZGUuCisJICogTk9URS1OSUtJVEEgYWRkIGhlcmUgaW5pdGlhbGl6YXRpb25z
IGZvciBsb2NrcywgbGlzdCBoZWFkcywKKwkgKiBldGMuIHRoYXQgd2lsbCBiZSBhZGRlZCB0byBv
dXIgcHJpdmF0ZSBpbm9kZSBwYXJ0LgorCSAqLworCUlOSVRfTElTVF9IRUFEKGdldF9yZWFkZGly
X2xpc3QoJmluZm8tPnZmc19pbm9kZSkpOworCWluaXRfcndzZW0oJmluZm8tPnAuY29udl9zZW0p
OworCS8qIGluaXQgc2VtYXBob3JlIHdoaWNoIGlzIHVzZWQgZHVyaW5nIGlub2RlIGxvYWRpbmcg
Ki8KKwlsb2FkaW5nX2luaXRfb25jZSgmaW5mby0+cCk7CisJSU5JVF9SQURJWF9UUkVFKGpub2Rl
X3RyZWVfYnlfcmVpc2VyNF9pbm9kZSgmaW5mby0+cCksCisJCQlHRlBfQVRPTUlDKTsKKyNpZiBS
RUlTRVI0X0RFQlVHCisJaW5mby0+cC5ucl9qbm9kZXMgPSAwOworI2VuZGlmCit9CisKKy8qKgor
ICogaW5pdF9pbm9kZXMgLSBjcmVhdGUgem5vZGUgY2FjaGUKKyAqCisgKiBJbml0aWFsaXplcyBz
bGFiIGNhY2hlIG9mIGlub2Rlcy4gSXQgaXMgcGFydCBvZiByZWlzZXI0IG1vZHVsZSBpbml0aWFs
aXphdGlvbgorICovCitzdGF0aWMgaW50IGluaXRfaW5vZGVzKHZvaWQpCit7CisJaW5vZGVfY2Fj
aGUgPSBrbWVtX2NhY2hlX2NyZWF0ZSgicmVpc2VyNF9pbm9kZSIsCisJCQkJCXNpemVvZihzdHJ1
Y3QgcmVpc2VyNF9pbm9kZV9vYmplY3QpLAorCQkJCQkwLAorCQkJCQlTTEFCX0hXQ0FDSEVfQUxJ
R04gfAorCQkJCQlTTEFCX1JFQ0xBSU1fQUNDT1VOVCwgaW5pdF9vbmNlKTsKKwlpZiAoaW5vZGVf
Y2FjaGUgPT0gTlVMTCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKwlyZXR1cm4gMDsKK30K
KworLyoqCisgKiBkb25lX2lub2RlcyAtIGRlbGV0ZSBpbm9kZSBjYWNoZQorICoKKyAqIFRoaXMg
aXMgY2FsbGVkIG9uIHJlaXNlcjQgbW9kdWxlIHVubG9hZGluZyBvciBzeXN0ZW0gc2h1dGRvd24u
CisgKi8KK3N0YXRpYyB2b2lkIGRvbmVfaW5vZGVzKHZvaWQpCit7CisJZGVzdHJveV9yZWlzZXI0
X2NhY2hlKCZpbm9kZV9jYWNoZSk7Cit9CisKKy8qKgorICogcmVpc2VyNF9hbGxvY19pbm9kZSAt
IGFsbG9jX2lub2RlIG9mIHN1cGVyIG9wZXJhdGlvbnMKKyAqIEBzdXBlcjogc3VwZXIgYmxvY2sg
bmV3IGlub2RlIGlzIGFsbG9jYXRlZCBmb3IKKyAqCisgKiBBbGxvY2F0ZXMgbmV3IGlub2RlLCBp
bml0aWFsaXplcyByZWlzZXI0IHNwZWNpZmljIHBhcnQgb2YgaXQuCisgKi8KK3N0YXRpYyBzdHJ1
Y3QgaW5vZGUgKnJlaXNlcjRfYWxsb2NfaW5vZGUoc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikK
K3sKKwlzdHJ1Y3QgcmVpc2VyNF9pbm9kZV9vYmplY3QgKm9iajsKKworCWFzc2VydCgibmlraXRh
LTE2OTYiLCBzdXBlciAhPSBOVUxMKTsKKwlvYmogPSBrbWVtX2NhY2hlX2FsbG9jKGlub2RlX2Nh
Y2hlLCByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJaWYgKG9iaiAhPSBOVUxMKSB7CisJ
CXJlaXNlcjRfaW5vZGUgKmluZm87CisKKwkJaW5mbyA9ICZvYmotPnA7CisKKwkJaW5mby0+cHNl
dCA9IHBsdWdpbl9zZXRfZ2V0X2VtcHR5KCk7CisJCWluZm8tPmhzZXQgPSBwbHVnaW5fc2V0X2dl
dF9lbXB0eSgpOworCQlpbmZvLT5leHRtYXNrID0gMDsKKwkJaW5mby0+bG9jYWxpdHlfaWQgPSAw
dWxsOworCQlpbmZvLT5wbHVnaW5fbWFzayA9IDA7CisJCWluZm8tPmhlaXJfbWFzayA9IDA7Cisj
aWYgIVJFSVNFUjRfSU5PX0lTX09JRAorCQlpbmZvLT5vaWRfaGkgPSAwOworI2VuZGlmCisJCXJl
aXNlcjRfc2VhbF9pbml0KCZpbmZvLT5zZF9zZWFsLCBOVUxMLCBOVUxMKTsKKwkJY29vcmRfaW5p
dF9pbnZhbGlkKCZpbmZvLT5zZF9jb29yZCwgTlVMTCk7CisJCWluZm8tPmZsYWdzID0gMDsKKwkJ
c3Bpbl9sb2NrX2luaXQoJmluZm8tPmd1YXJkKTsKKwkJLyogdGhpcyBkZWFscyB3aXRoIGluZm8n
cyBsb2FkaW5nIHNlbWFwaG9yZSAqLworCQlsb2FkaW5nX2FsbG9jKGluZm8pOworCQlpbmZvLT52
cm9vdCA9IFVCRVJfVFJFRV9BRERSOworCQlyZXR1cm4gJm9iai0+dmZzX2lub2RlOworCX0gZWxz
ZQorCQlyZXR1cm4gTlVMTDsKK30KKworLyoqCisgKiByZWlzZXI0X2Rlc3Ryb3lfaW5vZGUgLSBk
ZXN0cm95X2lub2RlIG9mIHN1cGVyIG9wZXJhdGlvbnMKKyAqIEBpbm9kZTogaW5vZGUgYmVpbmcg
ZGVzdHJveWVkCisgKgorICogUHV0cyByZWlzZXI0IHNwZWNpZmljIHBvcnRpb24gb2YgaW5vZGUs
IGZyZWVzIG1lbW9yeSBvY2N1cGllZCBieSBpbm9kZS4KKyAqLworc3RhdGljIHZvaWQgcmVpc2Vy
NF9kZXN0cm95X2lub2RlKHN0cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmVpc2VyNF9pbm9kZSAq
aW5mbzsKKworCWluZm8gPSByZWlzZXI0X2lub2RlX2RhdGEoaW5vZGUpOworCisJYXNzZXJ0KCJ2
cy0xMjIwIiwgaW5vZGVfaGFzX25vX2pub2RlcyhpbmZvKSk7CisKKwlpZiAoIWlzX2JhZF9pbm9k
ZShpbm9kZSkgJiYgaXNfaW5vZGVfbG9hZGVkKGlub2RlKSkgeworCQlmaWxlX3BsdWdpbiAqZnBs
dWcgPSBpbm9kZV9maWxlX3BsdWdpbihpbm9kZSk7CisJCWlmIChmcGx1Zy0+ZGVzdHJveV9pbm9k
ZSAhPSBOVUxMKQorCQkJZnBsdWctPmRlc3Ryb3lfaW5vZGUoaW5vZGUpOworCX0KKwlyZWlzZXI0
X2Rpc3Bvc2VfY3Vyc29ycyhpbm9kZSk7CisJaWYgKGluZm8tPnBzZXQpCisJCXBsdWdpbl9zZXRf
cHV0KGluZm8tPnBzZXQpOworCWlmIChpbmZvLT5oc2V0KQorCQlwbHVnaW5fc2V0X3B1dChpbmZv
LT5oc2V0KTsKKworCS8qCisJICogY2Fubm90IGFkZCBzaW1pbGFyIGFzc2VydGlvbiBhYm91dCAt
PmlfbGlzdCBhcyBwcnVuZV9pY2FjaGUgcmV0dXJuCisJICogaW5vZGUgaW50byBzbGFiIHdpdGgg
ZGFuZ2xpbmcgLT5saXN0LntuZXh0LHByZXZ9LiBUaGlzIGlzIHNhZmUsCisJICogYmVjYXVzZSB0
aGV5IGFyZSByZS1pbml0aWFsaXplZCBpbiB0aGUgbmV3X2lub2RlKCkuCisJICovCisJYXNzZXJ0
KCJuaWtpdGEtMjg5NSIsIGhsaXN0X2VtcHR5KCZpbm9kZS0+aV9kZW50cnkpKTsKKwlhc3NlcnQo
Im5pa2l0YS0yODk2IiwgaGxpc3RfdW5oYXNoZWQoJmlub2RlLT5pX2hhc2gpKTsKKwlhc3NlcnQo
Im5pa2l0YS0yODk4IiwgbGlzdF9lbXB0eV9jYXJlZnVsKGdldF9yZWFkZGlyX2xpc3QoaW5vZGUp
KSk7CisKKwkvKiB0aGlzIGRlYWxzIHdpdGggaW5mbydzIGxvYWRpbmcgc2VtYXBob3JlICovCisJ
bG9hZGluZ19kZXN0cm95KGluZm8pOworCisJa21lbV9jYWNoZV9mcmVlKGlub2RlX2NhY2hlLAor
CQkJY29udGFpbmVyX29mKGluZm8sIHN0cnVjdCByZWlzZXI0X2lub2RlX29iamVjdCwgcCkpOwor
fQorCisvKioKKyAqIHJlaXNlcjRfZGlydHlfaW5vZGUgLSBkaXJ0eV9pbm9kZSBvZiBzdXBlciBv
cGVyYXRpb25zCisgKiBAaW5vZGU6IGlub2RlIGJlaW5nIGRpcnRpZWQKKyAqCisgKiBVcGRhdGVz
IHN0YXQgZGF0YS4KKyAqLworc3RhdGljIHZvaWQgcmVpc2VyNF9kaXJ0eV9pbm9kZShzdHJ1Y3Qg
aW5vZGUgKmlub2RlLCBpbnQgZmxhZ3MpCit7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X2NvbnRl
eHQgKmN0eDsKKworCWlmICghaXNfaW5fcmVpc2VyNF9jb250ZXh0KCkpCisJCXJldHVybjsKKwlj
dHggPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisKKwlpZiAoY3R4LT5ybykgeworCQl3YXJuaW5n
KCJlZHdhcmQtMjIwMCIsCisJCQkiZmFpbGVkIHRvIG1ha2UgaW5vZGUgJWxsdSBkaXJ0eSAocmVh
ZC1vbmx5IEZTKSIsCisJCQkodW5zaWduZWQgbG9uZyBsb25nKWdldF9pbm9kZV9vaWQoaW5vZGUp
KTsKKwkJcmV0dXJuOworCX0KKwlhc3NlcnQoImVkd2FyZC0xNjA2IiwgIUlTX1JET05MWShpbm9k
ZSkpOworCWFzc2VydCgiZWR3YXJkLTE2MDciLAorCSAgICAgICAoaW5vZGVfZmlsZV9wbHVnaW4o
aW5vZGUpLT5lc3RpbWF0ZS51cGRhdGUoaW5vZGUpIDw9CisJCWN0eC0+Z3JhYmJlZF9ibG9ja3Mp
KTsKKworCWlmIChjdHgtPmxvY2tlZF9wYWdlKQorCQl1bmxvY2tfcGFnZShjdHgtPmxvY2tlZF9w
YWdlKTsKKworCXJlc3VsdCA9IHJlaXNlcjRfdXBkYXRlX3NkKGlub2RlKTsKKworCWlmIChjdHgt
PmxvY2tlZF9wYWdlKQorCQlsb2NrX3BhZ2UoY3R4LT5sb2NrZWRfcGFnZSk7CisJaWYgKHJlc3Vs
dCkKKwkJd2FybmluZygiZWR3YXJkLTE2MDUiLCAiZmFpbGVkIHRvIGRpcnR5IGlub2RlIGZvciAl
bGx1OiAlZCIsCisJCQlnZXRfaW5vZGVfb2lkKGlub2RlKSwgcmVzdWx0KTsKK30KKworLyoqCisg
KiAtPmV2aWN0X2lub2RlKCkgb2Ygc3VwZXIgb3BlcmF0aW9ucworICogQGlub2RlOiBpbm9kZSB0
byBkZWxldGUKKyAqCisgKiBDYWxscyBmaWxlIHBsdWdpbidzIGRlbGV0ZV9vYmplY3QgbWV0aG9k
IHRvIGRlbGV0ZSBvYmplY3QgaXRlbXMgZnJvbQorICogZmlsZXN5c3RlbSB0cmVlIGFuZCBjYWxs
cyBjbGVhcl9pbm9kZSgpLgorICovCitzdGF0aWMgdm9pZCByZWlzZXI0X2V2aWN0X2lub2RlKHN0
cnVjdCBpbm9kZSAqaW5vZGUpCit7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJZmlsZV9wbHVn
aW4gKmZwbHVnOworCisJY3R4ID0gcmVpc2VyNF9pbml0X2NvbnRleHQoaW5vZGUtPmlfc2IpOwor
CWlmIChJU19FUlIoY3R4KSkgeworCQl3YXJuaW5nKCJ2cy0xNSIsICJmYWlsZWQgdG8gaW5pdCBj
b250ZXh0Iik7CisJCXJldHVybjsKKwl9CisKKwlpZiAoaW5vZGUtPmlfbmxpbmsgPT0gMCAmJiBp
c19pbm9kZV9sb2FkZWQoaW5vZGUpKSB7CisJCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVnaW4oaW5v
ZGUpOworCQlpZiAoZnBsdWcgIT0gTlVMTCAmJiBmcGx1Zy0+ZGVsZXRlX29iamVjdCAhPSBOVUxM
KQorCQkJZnBsdWctPmRlbGV0ZV9vYmplY3QoaW5vZGUpOworCX0KKworCXRydW5jYXRlX2lub2Rl
X3BhZ2VzX2ZpbmFsKCZpbm9kZS0+aV9kYXRhKTsKKwlpbm9kZS0+aV9ibG9ja3MgPSAwOworCWNs
ZWFyX2lub2RlKGlub2RlKTsKKwlyZWlzZXI0X2V4aXRfY29udGV4dChjdHgpOworfQorCisvKioK
KyAqIHJlaXNlcjRfcHV0X3N1cGVyIC0gcHV0X3N1cGVyIG9mIHN1cGVyIG9wZXJhdGlvbnMKKyAq
IEBzdXBlcjogc3VwZXIgYmxvY2sgdG8gZnJlZQorICoKKyAqIFN0b3BzIGRhZW1vbnMsIHJlbGVh
c2UgcmVzb3VyY2VzLCB1bW91bnRzIGluIHNob3J0LgorICovCitzdGF0aWMgdm9pZCByZWlzZXI0
X3B1dF9zdXBlcihzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyKQoreworCXJlaXNlcjRfc3VwZXJf
aW5mb19kYXRhICpzYmluZm87CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisKKwlzYmluZm8gPSBn
ZXRfc3VwZXJfcHJpdmF0ZShzdXBlcik7CisJYXNzZXJ0KCJ2cy0xNjk5Iiwgc2JpbmZvKTsKKwor
CWRlYnVnZnNfcmVtb3ZlKHNiaW5mby0+dG1nci5kZWJ1Z2ZzX2F0b21fY291bnQpOworCWRlYnVn
ZnNfcmVtb3ZlKHNiaW5mby0+dG1nci5kZWJ1Z2ZzX2lkX2NvdW50KTsKKwlkZWJ1Z2ZzX3JlbW92
ZShzYmluZm8tPmRlYnVnZnNfcm9vdCk7CisKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChz
dXBlcik7CisJaWYgKElTX0VSUihjdHgpKSB7CisJCXdhcm5pbmcoInZzLTE3IiwgImZhaWxlZCB0
byBpbml0IGNvbnRleHQiKTsKKwkJcmV0dXJuOworCX0KKworCS8qIGhhdmUgZGlzayBmb3JtYXQg
cGx1Z2luIHRvIGZyZWUgaXRzIHJlc291cmNlcyAqLworCWlmIChnZXRfc3VwZXJfcHJpdmF0ZShz
dXBlciktPmRmX3BsdWctPnJlbGVhc2UpCisJCWdldF9zdXBlcl9wcml2YXRlKHN1cGVyKS0+ZGZf
cGx1Zy0+cmVsZWFzZShzdXBlcik7CisKKwlyZWlzZXI0X2RvbmVfZm9ybWF0dGVkX2Zha2Uoc3Vw
ZXIpOworCXJlaXNlcjRfZG9uZV9jc3VtX3RmbShzYmluZm8tPmNzdW1fdGZtKTsKKworCS8qIHN0
b3AgZGFlbW9uczoga3R4bm1nciBhbmQgZW50ZCAqLworCXJlaXNlcjRfZG9uZV9lbnRkKHN1cGVy
KTsKKwlyZWlzZXI0X2RvbmVfa3R4bm1ncmQoc3VwZXIpOworCXJlaXNlcjRfZG9uZV90eG5tZ3Io
JnNiaW5mby0+dG1ncik7CisKKwlhc3NlcnQoImVkd2FyZC0xODkwIiwgbGlzdF9lbXB0eSgmZ2V0
X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5hbGxfam5vZGVzKSk7CisJYXNzZXJ0KCJlZHdhcmQtMTg5
MSIsIGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gPT0gTlVMTCk7CisJcmVpc2Vy
NF9jaGVja19ibG9ja19jb3VudGVycyhzdXBlcik7CisKKwlyZWlzZXI0X2V4aXRfY29udGV4dChj
dHgpOworCXJlaXNlcjRfZG9uZV9mc19pbmZvKHN1cGVyKTsKK30KKworLyoqCisgKiByZWlzZXI0
X3N0YXRmcyAtIHN0YXRmcyBvZiBzdXBlciBvcGVyYXRpb25zCisgKiBAc3VwZXI6IHN1cGVyIGJs
b2NrIG9mIGZpbGUgc3lzdGVtIGluIHF1ZXJpZWQKKyAqIEBzdGFmczogYnVmZmVyIHRvIGZpbGwg
d2l0aCBzdGF0aXN0aWNzCisgKgorICogUmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dCBmaWxlc3lz
dGVtLgorICovCitzdGF0aWMgaW50IHJlaXNlcjRfc3RhdGZzKHN0cnVjdCBkZW50cnkgKmRlbnRy
eSwgc3RydWN0IGtzdGF0ZnMgKnN0YXRmcykKK3sKKwlzZWN0b3JfdCB0b3RhbDsKKwlzZWN0b3Jf
dCByZXNlcnZlZDsKKwlzZWN0b3JfdCBmcmVlOworCXNlY3Rvcl90IGZvcnJvb3Q7CisJc2VjdG9y
X3QgZGVsZXRlZDsKKwlyZWlzZXI0X2NvbnRleHQgKmN0eDsKKwlzdHJ1Y3Qgc3VwZXJfYmxvY2sg
KnN1cGVyID0gZGVudHJ5LT5kX3NiOworCisJYXNzZXJ0KCJuaWtpdGEtNDA4Iiwgc3VwZXIgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNDA5Iiwgc3RhdGZzICE9IE5VTEwpOworCisJY3R4ID0g
cmVpc2VyNF9pbml0X2NvbnRleHQoc3VwZXIpOworCWlmIChJU19FUlIoY3R4KSkKKwkJcmV0dXJu
IFBUUl9FUlIoY3R4KTsKKworCXN0YXRmcy0+Zl90eXBlID0gcmVpc2VyNF9zdGF0ZnNfdHlwZShz
dXBlcik7CisJc3RhdGZzLT5mX2JzaXplID0gc3VwZXItPnNfYmxvY2tzaXplOworCisJLyoKKwkg
KiA1JSBvZiB0b3RhbCBibG9jayBzcGFjZSBpcyByZXNlcnZlZC4gVGhpcyBpcyBuZWVkZWQgZm9y
IGZsdXNoIGFuZAorCSAqIGZvciB0cnVuY2F0ZXMgKHNvIHRoYXQgd2UgYXJlIGFibGUgdG8gcGVy
Zm9ybSB0cnVuY2F0ZS91bmxpbmsgZXZlbgorCSAqIG9uIHRoZSBvdGhlcndpc2UgY29tcGxldGVs
eSBmdWxsIGZpbGUgc3lzdGVtKS4gSWYgdGhpcyByZXNlcnZhdGlvbgorCSAqIGlzIGhpZGRlbiBm
cm9tIHN0YXRmcygyKSwgdXNlcnMgd2lsbCBtaXN0YWtlbmx5IGd1ZXNzIHRoYXQgdGhleQorCSAq
IGhhdmUgZW5vdWdoIGZyZWUgc3BhY2UgdG8gY29tcGxldGUgc29tZSBvcGVyYXRpb24sIHdoaWNo
IGlzCisJICogZnJ1c3RyYXRpbmcuCisJICoKKwkgKiBBbm90aGVyIHBvc3NpYmxlIHNvbHV0aW9u
IGlzIHRvIHN1YnRyYWN0IC0+YmxvY2tzX3Jlc2VydmVkIGZyb20KKwkgKiAtPmZfYmZyZWUsIGJ1
dCBjaGFuZ2luZyBhdmFpbGFibGUgc3BhY2Ugc2VlbXMgbGVzcyBpbnRydXNpdmUgdGhhbgorCSAq
IGxldHRpbmcgdXNlciB0byBzZWUgNSUgb2YgZGlzayBzcGFjZSB0byBiZSB1c2VkIGRpcmVjdGx5
IGFmdGVyCisJICogbWtmcy4KKwkgKi8KKwl0b3RhbCA9IHJlaXNlcjRfYmxvY2tfY291bnQoc3Vw
ZXIpOworCXJlc2VydmVkID0gZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5ibG9ja3NfcmVzZXJ2
ZWQ7CisJZGVsZXRlZCA9IHR4bm1ncl9jb3VudF9kZWxldGVkX2Jsb2NrcygpOworCWZyZWUgPSBy
ZWlzZXI0X2ZyZWVfYmxvY2tzKHN1cGVyKSArIGRlbGV0ZWQ7CisJZm9ycm9vdCA9IHJlaXNlcjRf
cmVzZXJ2ZWRfYmxvY2tzKHN1cGVyLCAwLCAwKTsKKworCS8qCisJICogVGhlc2UgY291bnRlcnMg
bWF5IGJlIGluIGluY29uc2lzdGVudCBzdGF0ZSBiZWNhdXNlIHdlIHRha2UgdGhlCisJICogdmFs
dWVzIHdpdGhvdXQga2VlcGluZyBhbnkgZ2xvYmFsIHNwaW5sb2NrLiAgSGVyZSB3ZSBkbyBhIHNh
bml0eQorCSAqIGNoZWNrIHRoYXQgZnJlZSBibG9jayBjb3VudGVyIGRvZXMgbm90IGV4Y2VlZCB0
aGUgbnVtYmVyIG9mIGFsbAorCSAqIGJsb2Nrcy4KKwkgKi8KKwlpZiAoZnJlZSA+IHRvdGFsKQor
CQlmcmVlID0gdG90YWw7CisJc3RhdGZzLT5mX2Jsb2NrcyA9IHRvdGFsIC0gcmVzZXJ2ZWQ7CisJ
LyogbWFrZSBzdXJlIHN0YXRmcy0+Zl9iZnJlZSBpcyBuZXZlciBsYXJnZXIgdGhhbiBzdGF0ZnMt
PmZfYmxvY2tzICovCisJaWYgKGZyZWUgPiByZXNlcnZlZCkKKwkJZnJlZSAtPSByZXNlcnZlZDsK
KwllbHNlCisJCWZyZWUgPSAwOworCXN0YXRmcy0+Zl9iZnJlZSA9IGZyZWU7CisKKwlpZiAoZnJl
ZSA+IGZvcnJvb3QpCisJCWZyZWUgLT0gZm9ycm9vdDsKKwllbHNlCisJCWZyZWUgPSAwOworCXN0
YXRmcy0+Zl9iYXZhaWwgPSBmcmVlOworCisJc3RhdGZzLT5mX2ZpbGVzID0gMDsKKwlzdGF0ZnMt
PmZfZmZyZWUgPSAwOworCisJLyogbWF4aW1hbCBhY2NlcHRhYmxlIG5hbWUgbGVuZ3RoIGRlcGVu
ZHMgb24gZGlyZWN0b3J5IHBsdWdpbi4gKi8KKwlhc3NlcnQoIm5pa2l0YS0zMzUxIiwgc3VwZXIt
PnNfcm9vdC0+ZF9pbm9kZSAhPSBOVUxMKTsKKwlzdGF0ZnMtPmZfbmFtZWxlbiA9IHJlaXNlcjRf
bWF4X2ZpbGVuYW1lX2xlbihzdXBlci0+c19yb290LT5kX2lub2RlKTsKKwlyZWlzZXI0X2V4aXRf
Y29udGV4dChjdHgpOworCXJldHVybiAwOworfQorCisvKioKKyAqIHJlaXNlcjRfd3JpdGViYWNr
X2lub2RlcyAtIHdyaXRlYmFja19pbm9kZXMgb2Ygc3VwZXIgb3BlcmF0aW9ucworICogQHN1cGVy
OgorICogQHdiOgorICogQHdiYzoKKyAqCisgKiBUaGlzIG1ldGhvZCBpcyBjYWxsZWQgYnkgYmFj
a2dyb3VuZCBhbmQgbm9uLWJhY2tnb3VuZCB3cml0ZWJhY2suCisgKiBSZWlzZXI0J3MgaW1wbGVt
ZW50YXRpb24gdXNlcyBnZW5lcmljX3dyaXRlYmFja19zYl9pbm9kZXMgdG8gY2FsbAorICogcmVp
c2VyNF93cml0ZXBhZ2VzX2Rpc3BhdGNoIGZvciBlYWNoIG9mIGRpcnR5IGlub2Rlcy4KKyAqIHJl
aXNlcjRfd3JpdGVwYWdlc19kaXNwYXRjaCBoYW5kbGVzIHBhZ2VzIGRpcnRpZWQgdmlhIHNoYXJl
ZAorICogbWFwcGluZyAtIGRpcnR5IHBhZ2VzIGdldCBpbnRvIGF0b21zLiBXcml0ZW91dCBpcyBj
YWxsZWQgdG8gZmx1c2gKKyAqIHNvbWUgYXRvbXMuCisgKi8KK3N0YXRpYyBsb25nIHJlaXNlcjRf
d3JpdGViYWNrX2lub2RlcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLAorCQkJCSAgICAgc3Ry
dWN0IGJkaV93cml0ZWJhY2sgKndiLAorCQkJCSAgICAgc3RydWN0IHdyaXRlYmFja19jb250cm9s
ICp3YmMsCisJCQkJICAgICBzdHJ1Y3Qgd2Jfd3JpdGViYWNrX3dvcmsgKndvcmssCisJCQkJICAg
ICBib29sIGZsdXNoX2FsbCkKK3sKKwlsb25nIHJlc3VsdDsKKwlyZWlzZXI0X2NvbnRleHQgKmN0
eDsKKworCWlmICh3YmMtPmZvcl9rdXBkYXRlKQorCQkvKiByZWlzZXI0IGhhcyBpdHMgb3duIG1l
YW5zIG9mIHBlcmlvZGljYWwgd3JpdGUtb3V0ICovCisJCWdvdG8gc2tpcDsKKworCXNwaW5fdW5s
b2NrKCZ3Yi0+bGlzdF9sb2NrKTsKKwljdHggPSByZWlzZXI0X2luaXRfY29udGV4dChzdXBlcik7
CisJaWYgKElTX0VSUihjdHgpKSB7CisJCXdhcm5pbmcoInZzLTEzIiwgImZhaWxlZCB0byBpbml0
IGNvbnRleHQiKTsKKwkJc3Bpbl9sb2NrKCZ3Yi0+bGlzdF9sb2NrKTsKKwkJZ290byBza2lwOwor
CX0KKwkvKgorCSAqIGNhbGwgcmVpc2VyNF93cml0ZXBhZ2VzIGZvciBlYWNoIG9mIGRpcnR5IGlu
b2RlcyB0byB0dXJuCisJICogZGlydHkgcGFnZXMgaW50byB0cmFuc2FjdGlvbnMgaWYgdGhleSB3
ZXJlIG5vdCB5ZXQuCisJICovCisJc3Bpbl9sb2NrKCZ3Yi0+bGlzdF9sb2NrKTsKKwlyZXN1bHQg
PSBnZW5lcmljX3dyaXRlYmFja19zYl9pbm9kZXMoc3VwZXIsIHdiLCB3YmMsIHdvcmssIGZsdXNo
X2FsbCk7CisJc3Bpbl91bmxvY2soJndiLT5saXN0X2xvY2spOworCisJaWYgKHJlc3VsdCA8PSAw
KQorCQlnb3RvIGV4aXQ7CisJd2JjLT5ucl90b193cml0ZSA9IHJlc3VsdDsKKworCS8qIGZsdXNo
IGdvZXMgaGVyZSAqLworCXJlaXNlcjRfd3JpdGVvdXQoc3VwZXIsIHdiYyk7CisgZXhpdDoKKwkv
KiBhdm9pZCByZWN1cnNpdmUgY2FsbHMgdG8gLT53cml0ZWJhY2tfaW5vZGVzICovCisJY29udGV4
dF9zZXRfY29tbWl0X2FzeW5jKGN0eCk7CisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlz
cGluX2xvY2soJndiLT5saXN0X2xvY2spOworCisJcmV0dXJuIHJlc3VsdDsKKyBza2lwOgorCXdy
aXRlYmFja19za2lwX3NiX2lub2RlcyhzdXBlciwgd2IpOworCXJldHVybiAwOworfQorCisvKiAt
PnN5bmNfZnMoKSBvZiBzdXBlciBvcGVyYXRpb25zICovCitzdGF0aWMgaW50IHJlaXNlcjRfc3lu
Y19mcyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnN1cGVyLCBpbnQgd2FpdCkKK3sKKwlyZWlzZXI0X2Nv
bnRleHQgKmN0eDsKKwlzdHJ1Y3QgYmRpX3dyaXRlYmFjayAqd2I7CisJc3RydWN0IHdiX3dyaXRl
YmFja193b3JrIHdvcmsgPSB7CisJCS5zYgkJPSBzdXBlciwKKwkJLnN5bmNfbW9kZQk9IFdCX1NZ
TkNfQUxMLAorCQkucmFuZ2VfY3ljbGljCT0gMCwKKwkJLm5yX3BhZ2VzCT0gTE9OR19NQVgsCisJ
CS5yZWFzb24JCT0gV0JfUkVBU09OX1NZTkMsCisJCS5mb3Jfc3luYwk9IDEsCisJfTsKKwlzdHJ1
Y3Qgd3JpdGViYWNrX2NvbnRyb2wgd2JjID0geworCQkuc3luY19tb2RlCT0gd29yay5zeW5jX21v
ZGUsCisJCS5yYW5nZV9jeWNsaWMJPSB3b3JrLnJhbmdlX2N5Y2xpYywKKwkJLnJhbmdlX3N0YXJ0
CT0gMCwKKwkJLnJhbmdlX2VuZAk9IExMT05HX01BWCwKKwl9OworCWN0eCA9IHJlaXNlcjRfaW5p
dF9jb250ZXh0KHN1cGVyKTsKKwlpZiAoSVNfRVJSKGN0eCkpIHsKKwkJd2FybmluZygiZWR3YXJk
LTE1NjciLCAiZmFpbGVkIHRvIGluaXQgY29udGV4dCIpOworCQlyZXR1cm4gUFRSX0VSUihjdHgp
OworCX0KKwkvKgorCSAqIFdlIGRvbid0IGNhcHR1cmUgc3VwZXJibG9jayBoZXJlLgorCSAqIFN1
cGVyYmxvY2sgaXMgY2FwdHVyZWQgb25seSBieSBvcGVyYXRpb25zLCB3aGljaCBjaGFuZ2UKKwkg
KiBpdHMgZmllbGRzIGRpZmZlcmVudCBmcm9tIGZyZWVfYmxvY2tzLCBucl9maWxlcywgbmV4dF9v
aWQuCisJICogQWZ0ZXIgc3lzdGVtIGNyYXNoIHRoZSBtZW50aW9uZWQgZmllbGRzIGFyZSByZWNv
dmVyZWQgZnJvbQorCSAqIGpvdXJuYWwgcmVjb3Jkcywgc2VlIHJlaXNlcjRfam91cm5hbF9yZWNv
dmVyX3NiX2RhdGEoKS4KKwkgKiBBbHNvIHN1cGVyYmxvY2sgaXMgY2FwdHVyZWQgYXQgZmluYWwg
Y29tbWl0IHdoZW4gcmVsZWFzaW5nCisJICogZGlzayBmb3JtYXQuCisJICovCisJd2IgPSAmaW5v
ZGVfdG9fYmRpKHJlaXNlcjRfZ2V0X3N1cGVyX2Zha2Uoc3VwZXIpKS0+d2I7CisJc3Bpbl9sb2Nr
KCZ3Yi0+bGlzdF9sb2NrKTsKKwlnZW5lcmljX3dyaXRlYmFja19zYl9pbm9kZXMoc3VwZXIsIHdi
LCAmd2JjLCAmd29yaywgdHJ1ZSk7CisJc3Bpbl91bmxvY2soJndiLT5saXN0X2xvY2spOworCXdi
Yy5ucl90b193cml0ZSA9IExPTkdfTUFYOworCS8qCisJICogKGZsdXNoIGdvZXMgaGVyZSkKKwkg
KiBjb21taXQgYWxsIHRyYW5zYWN0aW9ucworCSAqLworCXJlaXNlcjRfd3JpdGVvdXQoc3VwZXIs
ICZ3YmMpOworCisJcmVpc2VyNF9leGl0X2NvbnRleHQoY3R4KTsKKwlyZXR1cm4gMDsKK30KKwor
c3RhdGljIGludCByZWlzZXI0X3JlbW91bnQoc3RydWN0IHN1cGVyX2Jsb2NrICpzLCBpbnQgKm1v
dW50X2ZsYWdzLCBjaGFyICphcmcpCit7CisJc3luY19maWxlc3lzdGVtKHMpOworCXJldHVybiAw
OworfQorCisvKioKKyAqIHJlaXNlcjRfc2hvd19vcHRpb25zIC0gc2hvd19vcHRpb25zIG9mIHN1
cGVyIG9wZXJhdGlvbnMKKyAqIEBtOiBmaWxlIHdoZXJlIHRvIHdyaXRlIGluZm9ybWF0aW9uCisg
KiBAbW50OiBtb3VudCBzdHJ1Y3R1cmUKKyAqCisgKiBNYWtlcyByZWlzZXI0IG1vdW50IG9wdGlv
bnMgdmlzaWJsZSBpbiAvcHJvYy9tb3VudHMuCisgKi8KK3N0YXRpYyBpbnQgcmVpc2VyNF9zaG93
X29wdGlvbnMoc3RydWN0IHNlcV9maWxlICptLCBzdHJ1Y3QgZGVudHJ5ICpkZW50cnkpCit7CisJ
c3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcjsKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2Jp
bmZvOworCisJc3VwZXIgPSBkZW50cnktPmRfc2I7CisJc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZh
dGUoc3VwZXIpOworCisJc2VxX3ByaW50ZihtLCAiLGF0b21fbWF4X3NpemU9MHgleCIsIHNiaW5m
by0+dG1nci5hdG9tX21heF9zaXplKTsKKwlzZXFfcHJpbnRmKG0sICIsYXRvbV9tYXhfYWdlPTB4
JXgiLCBzYmluZm8tPnRtZ3IuYXRvbV9tYXhfYWdlKTsKKwlzZXFfcHJpbnRmKG0sICIsYXRvbV9t
aW5fc2l6ZT0weCV4Iiwgc2JpbmZvLT50bWdyLmF0b21fbWluX3NpemUpOworCXNlcV9wcmludGYo
bSwgIixhdG9tX21heF9mbHVzaGVycz0weCV4IiwKKwkJICAgc2JpbmZvLT50bWdyLmF0b21fbWF4
X2ZsdXNoZXJzKTsKKwlzZXFfcHJpbnRmKG0sICIsY2JrX2NhY2hlX3Nsb3RzPTB4JXgiLAorCQkg
ICBzYmluZm8tPnRyZWUuY2JrX2NhY2hlLm5yX3Nsb3RzKTsKKworCXJldHVybiAwOworfQorCitz
dHJ1Y3Qgc3VwZXJfb3BlcmF0aW9ucyByZWlzZXI0X3N1cGVyX29wZXJhdGlvbnMgPSB7CisJLmFs
bG9jX2lub2RlID0gcmVpc2VyNF9hbGxvY19pbm9kZSwKKwkuZGVzdHJveV9pbm9kZSA9IHJlaXNl
cjRfZGVzdHJveV9pbm9kZSwKKwkuZGlydHlfaW5vZGUgPSByZWlzZXI0X2RpcnR5X2lub2RlLAor
CS5ldmljdF9pbm9kZSA9IHJlaXNlcjRfZXZpY3RfaW5vZGUsCisJLnB1dF9zdXBlciA9IHJlaXNl
cjRfcHV0X3N1cGVyLAorCS5zeW5jX2ZzID0gcmVpc2VyNF9zeW5jX2ZzLAorCS5zdGF0ZnMgPSBy
ZWlzZXI0X3N0YXRmcywKKwkucmVtb3VudF9mcyA9IHJlaXNlcjRfcmVtb3VudCwKKwkud3JpdGVi
YWNrX2lub2RlcyA9IHJlaXNlcjRfd3JpdGViYWNrX2lub2RlcywKKwkuc2hvd19vcHRpb25zID0g
cmVpc2VyNF9zaG93X29wdGlvbnMKK307CisKKy8qKgorICogZmlsbF9zdXBlciAtIGluaXRpYWxp
emUgc3VwZXIgYmxvY2sgb24gbW91bnQKKyAqIEBzdXBlcjogc3VwZXIgYmxvY2sgdG8gZmlsbAor
ICogQGRhdGE6IHJlaXNlcjQgc3BlY2lmaWMgbW91bnQgb3B0aW9uCisgKiBAc2lsZW50OgorICoK
KyAqIFRoaXMgaXMgdG8gYmUgY2FsbGVkIGJ5IHJlaXNlcjRfZ2V0X3NiLiBNb3VudHMgZmlsZXN5
c3RlbS4KKyAqLworc3RhdGljIGludCBmaWxsX3N1cGVyKHN0cnVjdCBzdXBlcl9ibG9jayAqc3Vw
ZXIsIHZvaWQgKmRhdGEsIGludCBzaWxlbnQpCit7CisJcmVpc2VyNF9jb250ZXh0IGN0eDsKKwlp
bnQgcmVzdWx0OworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm87CisKKwlhc3NlcnQo
InphbS05ODkiLCBzdXBlciAhPSBOVUxMKTsKKworCXN1cGVyLT5zX29wID0gTlVMTDsKKwlpbml0
X3N0YWNrX2NvbnRleHQoJmN0eCwgc3VwZXIpOworCisJLyogYWxsb2NhdGUgcmVpc2VyNCBzcGVj
aWZpYyBzdXBlciBibG9jayAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9pbml0X2ZzX2luZm8o
c3VwZXIpKSAhPSAwKQorCQlnb3RvIGZhaWxlZF9pbml0X3NpbmZvOworCisJc2JpbmZvID0gZ2V0
X3N1cGVyX3ByaXZhdGUoc3VwZXIpOworCisJaWYgKChyZXN1bHQgPSByZWlzZXI0X2luaXRfY3N1
bV90Zm0oJnNiaW5mby0+Y3N1bV90Zm0pKSAhPSAwKQorCQlnb3RvIGZhaWxlZF9pbml0X2NzdW1f
dGZtOworCisJLyogaW5pdGlhbGl6ZSB2YXJpb3VzIHJlaXNlcjQgcGFyYW1ldGVycywgcGFyc2Ug
bW91bnQgb3B0aW9ucyAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9pbml0X3N1cGVyX2RhdGEo
c3VwZXIsIGRhdGEpKSAhPSAwKQorCQlnb3RvIGZhaWxlZF9pbml0X3N1cGVyX2RhdGE7CisKKwkv
KiByZWFkIHJlaXNlcjQgbWFzdGVyIHN1cGVyIGJsb2NrLCBpbml0aWFsaXplIGRpc2sgZm9ybWF0
IHBsdWdpbiAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9pbml0X3JlYWRfc3VwZXIoc3VwZXIs
IHNpbGVudCkpICE9IDApCisJCWdvdG8gZmFpbGVkX2luaXRfcmVhZF9zdXBlcjsKKworCS8qIGlu
aXRpYWxpemUgdHJhbnNhY3Rpb24gbWFuYWdlciAqLworCXJlaXNlcjRfaW5pdF90eG5tZ3IoJnNi
aW5mby0+dG1ncik7CisKKwkvKiBpbml0aWFsaXplIGt0eG5tZ3JkIGNvbnRleHQgYW5kIHN0YXJ0
IGtlcm5lbCB0aHJlYWQga3R4bm1yZ2QgKi8KKwlpZiAoKHJlc3VsdCA9IHJlaXNlcjRfaW5pdF9r
dHhubWdyZChzdXBlcikpICE9IDApCisJCWdvdG8gZmFpbGVkX2luaXRfa3R4bm1ncmQ7CisKKwkv
KiBpbml0aWFsaXplIGVudGQgY29udGV4dCBhbmQgc3RhcnQga2VybmVsIHRocmVhZCBlbnRkICov
CisJaWYgKChyZXN1bHQgPSByZWlzZXI0X2luaXRfZW50ZChzdXBlcikpICE9IDApCisJCWdvdG8g
ZmFpbGVkX2luaXRfZW50ZDsKKworCS8qIGluaXRpYWxpemUgYWRkcmVzcyBzcGFjZXMgZm9yIGZv
cm1hdHRlZCBub2RlcyBhbmQgYml0bWFwcyAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9pbml0
X2Zvcm1hdHRlZF9mYWtlKHN1cGVyKSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5pdF9mb3JtYXR0
ZWRfZmFrZTsKKworCS8qIGluaXRpYWxpemUgZGlzayBmb3JtYXQgcGx1Z2luICovCisJaWYgKChy
ZXN1bHQgPSBnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPmRmX3BsdWctPmluaXRfZm9ybWF0KHN1
cGVyLAorCQkJCQkJCQkgICAgZGF0YSkpICE9IDApCisJCWdvdG8gZmFpbGVkX2luaXRfZGlza19m
b3JtYXQ7CisKKwkvKgorCSAqIFRoZXJlIGFyZSBzb21lICdjb21taXR0ZWQnIHZlcnNpb25zIG9m
IHJlaXNlcjQgc3VwZXIgYmxvY2sgY291bnRlcnMsCisJICogd2hpY2ggY29ycmVzcG9uZCB0byBy
ZWlzZXI0IG9uLWRpc2sgc3RhdGUuIFRoZXNlIGNvdW50ZXJzIGFyZQorCSAqIGluaXRpYWxpemVk
IGhlcmUKKwkgKi8KKwlzYmluZm8tPmJsb2Nrc19mcmVlX2NvbW1pdHRlZCA9IHNiaW5mby0+Ymxv
Y2tzX2ZyZWU7CisJc2JpbmZvLT5ucl9maWxlc19jb21taXR0ZWQgPSBvaWRzX3VzZWQoc3VwZXIp
OworCisJLyogZ2V0IGlub2RlIG9mIHJvb3QgZGlyZWN0b3J5ICovCisJaWYgKChyZXN1bHQgPSBy
ZWlzZXI0X2luaXRfcm9vdF9pbm9kZShzdXBlcikpICE9IDApCisJCWdvdG8gZmFpbGVkX2luaXRf
cm9vdF9pbm9kZTsKKworCWlmICgocmVzdWx0ID0gZ2V0X3N1cGVyX3ByaXZhdGUoc3VwZXIpLT5k
Zl9wbHVnLT52ZXJzaW9uX3VwZGF0ZShzdXBlcikpICE9IDApCisJCWdvdG8gZmFpbGVkX3VwZGF0
ZV9mb3JtYXRfdmVyc2lvbjsKKworCXByb2Nlc3Nfc2FmZWxpbmtzKHN1cGVyKTsKKwlyZWlzZXI0
X2V4aXRfY29udGV4dCgmY3R4KTsKKworCXNiaW5mby0+ZGVidWdmc19yb290ID0gZGVidWdmc19j
cmVhdGVfZGlyKHN1cGVyLT5zX2lkLAorCQkJCQkJICByZWlzZXI0X2RlYnVnZnNfcm9vdCk7CisJ
aWYgKHNiaW5mby0+ZGVidWdmc19yb290KSB7CisJCXNiaW5mby0+dG1nci5kZWJ1Z2ZzX2F0b21f
Y291bnQgPQorCQkJZGVidWdmc19jcmVhdGVfdTMyKCJhdG9tX2NvdW50IiwgU19JRlJFR3xTX0lS
VVNSLAorCQkJCQkgICBzYmluZm8tPmRlYnVnZnNfcm9vdCwKKwkJCQkJICAgJnNiaW5mby0+dG1n
ci5hdG9tX2NvdW50KTsKKwkJc2JpbmZvLT50bWdyLmRlYnVnZnNfaWRfY291bnQgPQorCQkJZGVi
dWdmc19jcmVhdGVfdTMyKCJpZF9jb3VudCIsIFNfSUZSRUd8U19JUlVTUiwKKwkJCQkJICAgc2Jp
bmZvLT5kZWJ1Z2ZzX3Jvb3QsCisJCQkJCSAgICZzYmluZm8tPnRtZ3IuaWRfY291bnQpOworCX0K
KwlwcmludGsoInJlaXNlcjQ6ICVzOiB1c2luZyAlcy5cbiIsIHN1cGVyLT5zX2lkLAorCSAgICAg
ICB0eG1vZF9wbHVnaW5fYnlfaWQoc2JpbmZvLT50eG1vZCktPmguZGVzYyk7CisJcmV0dXJuIDA7
CisKKyBmYWlsZWRfdXBkYXRlX2Zvcm1hdF92ZXJzaW9uOgorIGZhaWxlZF9pbml0X3Jvb3RfaW5v
ZGU6CisJaWYgKHNiaW5mby0+ZGZfcGx1Zy0+cmVsZWFzZSkKKwkJc2JpbmZvLT5kZl9wbHVnLT5y
ZWxlYXNlKHN1cGVyKTsKKyBmYWlsZWRfaW5pdF9kaXNrX2Zvcm1hdDoKKwlyZWlzZXI0X2RvbmVf
Zm9ybWF0dGVkX2Zha2Uoc3VwZXIpOworIGZhaWxlZF9pbml0X2Zvcm1hdHRlZF9mYWtlOgorCXJl
aXNlcjRfZG9uZV9lbnRkKHN1cGVyKTsKKyBmYWlsZWRfaW5pdF9lbnRkOgorCXJlaXNlcjRfZG9u
ZV9rdHhubWdyZChzdXBlcik7CisgZmFpbGVkX2luaXRfa3R4bm1ncmQ6CisJcmVpc2VyNF9kb25l
X3R4bm1ncigmc2JpbmZvLT50bWdyKTsKKyBmYWlsZWRfaW5pdF9yZWFkX3N1cGVyOgorIGZhaWxl
ZF9pbml0X3N1cGVyX2RhdGE6CisgZmFpbGVkX2luaXRfY3N1bV90Zm06CisJcmVpc2VyNF9kb25l
X2ZzX2luZm8oc3VwZXIpOworIGZhaWxlZF9pbml0X3NpbmZvOgorCXJlaXNlcjRfZXhpdF9jb250
ZXh0KCZjdHgpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qKgorICogcmVpc2VyNF9tb3VudCAt
IG1vdW50IG9mIGZpbGVfc3lzdGVtX3R5cGUgb3BlcmF0aW9ucworICogQGZzX3R5cGU6CisgKiBA
ZmxhZ3M6IG1vdW50IGZsYWdzCisgKiBAZGV2X25hbWU6IGJsb2NrIGRldmljZSBmaWxlIG5hbWUK
KyAqIEBkYXRhOiBzcGVjaWZpYyBtb3VudCBvcHRpb25zCisgKgorICogUmVpc2VyNCBtb3VudCBl
bnRyeS4KKyAqLworc3RhdGljIHN0cnVjdCBkZW50cnkgKnJlaXNlcjRfbW91bnQoc3RydWN0IGZp
bGVfc3lzdGVtX3R5cGUgKmZzX3R5cGUsIGludCBmbGFncywKKwkJCQkgICAgY29uc3QgY2hhciAq
ZGV2X25hbWUsIHZvaWQgKmRhdGEpCit7CisJcmV0dXJuIG1vdW50X2JkZXYoZnNfdHlwZSwgZmxh
Z3MsIGRldl9uYW1lLCBkYXRhLCBmaWxsX3N1cGVyKTsKK30KKworLyogc3RydWN0dXJlIGRlc2Ny
aWJpbmcgdGhlIHJlaXNlcjQgZmlsZXN5c3RlbSBpbXBsZW1lbnRhdGlvbiAqLworc3RhdGljIHN0
cnVjdCBmaWxlX3N5c3RlbV90eXBlIHJlaXNlcjRfZnNfdHlwZSA9IHsKKwkub3duZXIgPSBUSElT
X01PRFVMRSwKKwkubmFtZSA9ICJyZWlzZXI0IiwKKwkuZnNfZmxhZ3MgPSBGU19SRVFVSVJFU19E
RVYsCisJLm1vdW50ID0gcmVpc2VyNF9tb3VudCwKKwkua2lsbF9zYiA9IGtpbGxfYmxvY2tfc3Vw
ZXIsCisJLm5leHQgPSBOVUxMCit9OworCit2b2lkIGRlc3Ryb3lfcmVpc2VyNF9jYWNoZShzdHJ1
Y3Qga21lbV9jYWNoZSAqKmNhY2hlcCkKK3sKKwlCVUdfT04oKmNhY2hlcCA9PSBOVUxMKTsKKwlr
bWVtX2NhY2hlX2Rlc3Ryb3koKmNhY2hlcCk7CisJKmNhY2hlcCA9IE5VTEw7Cit9CisKKy8qKgor
ICogaW5pdF9yZWlzZXI0IC0gcmVpc2VyNCBpbml0aWFsaXphdGlvbiBlbnRyeSBwb2ludAorICoK
KyAqIEluaXRpYWxpemVzIHJlaXNlcjQgc2xhYnMsIHJlZ2lzdGVycyByZWlzZXI0IGZpbGVzeXN0
ZW0gdHlwZS4gSXQgaXMgY2FsbGVkCisgKiBvbiBrZXJuZWwgaW5pdGlhbGl6YXRpb24gb3IgZHVy
aW5nIHJlaXNlcjQgbW9kdWxlIGxvYWQuCisgKi8KK3N0YXRpYyBpbnQgX19pbml0IGluaXRfcmVp
c2VyNCh2b2lkKQoreworCWludCByZXN1bHQ7CisKKwlwcmludGsoS0VSTl9JTkZPCisJICAgICAg
ICJMb2FkaW5nIFJlaXNlcjQgKGZvcm1hdCByZWxlYXNlOiA0LiVkLiVkKSAiCisJICAgICAgICJT
ZWUgd3d3Lm5hbWVzeXMuY29tIGZvciBhIGRlc2NyaXB0aW9uIG9mIFJlaXNlcjQuXG4iLAorCSAg
ICAgICBnZXRfcmVsZWFzZV9udW1iZXJfbWFqb3IoKSwKKwkgICAgICAgZ2V0X3JlbGVhc2VfbnVt
YmVyX21pbm9yKCkpOworCisJLyogaW5pdGlhbGl6ZSBzbGFiIGNhY2hlIG9mIGlub2RlcyAqLwor
CWlmICgocmVzdWx0ID0gaW5pdF9pbm9kZXMoKSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5vZGVf
Y2FjaGU7CisKKwkvKiBpbml0aWFsaXplIGNhY2hlIG9mIHpub2RlcyAqLworCWlmICgocmVzdWx0
ID0gaW5pdF96bm9kZXMoKSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5pdF96bm9kZXM7CisKKwkv
KiBpbml0aWFsaXplIGFsbCBwbHVnaW5zICovCisJaWYgKChyZXN1bHQgPSBpbml0X3BsdWdpbnMo
KSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5pdF9wbHVnaW5zOworCisJLyogaW5pdGlhbGl6ZSBj
YWNoZSBvZiBwbHVnaW5fc2V0LXMgYW5kIHBsdWdpbl9zZXQncyBoYXNoIHRhYmxlICovCisJaWYg
KChyZXN1bHQgPSBpbml0X3BsdWdpbl9zZXQoKSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5pdF9w
bHVnaW5fc2V0OworCisJLyogaW5pdGlhbGl6ZSBjYWNoZXMgb2YgdHhuX2F0b20tcyBhbmQgdHhu
X2hhbmRsZS1zICovCisJaWYgKChyZXN1bHQgPSBpbml0X3R4bm1ncl9zdGF0aWMoKSkgIT0gMCkK
KwkJZ290byBmYWlsZWRfaW5pdF90eG5tZ3Jfc3RhdGljOworCisJLyogaW5pdGlhbGl6ZSBjYWNo
ZSBvZiBqbm9kZXMgKi8KKwlpZiAoKHJlc3VsdCA9IGluaXRfam5vZGVzKCkpICE9IDApCisJCWdv
dG8gZmFpbGVkX2luaXRfam5vZGVzOworCisJLyogaW5pdGlhbGl6ZSBjYWNoZSBvZiBmbHVzaCBx
dWV1ZXMgKi8KKwlpZiAoKHJlc3VsdCA9IHJlaXNlcjRfaW5pdF9mcXMoKSkgIT0gMCkKKwkJZ290
byBmYWlsZWRfaW5pdF9mcXM7CisKKwkvKiBpbml0aWFsaXplIGNhY2hlIG9mIHN0cnVjdHVyZXMg
YXR0YWNoZWQgdG8gZGVudHJ5LT5kX2ZzZGF0YSAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9p
bml0X2RlbnRyeV9mc2RhdGEoKSkgIT0gMCkKKwkJZ290byBmYWlsZWRfaW5pdF9kZW50cnlfZnNk
YXRhOworCisJLyogaW5pdGlhbGl6ZSBjYWNoZSBvZiBzdHJ1Y3R1cmVzIGF0dGFjaGVkIHRvIGZp
bGUtPnByaXZhdGVfZGF0YSAqLworCWlmICgocmVzdWx0ID0gcmVpc2VyNF9pbml0X2ZpbGVfZnNk
YXRhKCkpICE9IDApCisJCWdvdG8gZmFpbGVkX2luaXRfZmlsZV9mc2RhdGE7CisKKwkvKgorCSAq
IGluaXRpYWxpemUgY2FjaGUgb2YgZF9jdXJzb3JzLiBTZWUgcGx1Z2luL2ZpbGVfb3BzX3JlYWRk
aXIuYyBmb3IKKwkgKiBtb3JlIGRldGFpbHMKKwkgKi8KKwlpZiAoKHJlc3VsdCA9IHJlaXNlcjRf
aW5pdF9kX2N1cnNvcigpKSAhPSAwKQorCQlnb3RvIGZhaWxlZF9pbml0X2RfY3Vyc29yOworCisJ
LyogaW5pdGlhbGl6ZSBjYWNoZSBvZiBibG9ja25yIHNldCBlbnRyaWVzICovCisJaWYgKChyZXN1
bHQgPSBibG9ja25yX3NldF9pbml0X3N0YXRpYygpKSAhPSAwKQorCQlnb3RvIGZhaWxlZF9pbml0
X2Jsb2NrbnJfc2V0OworCisJLyogaW5pdGlhbGl6ZSBjYWNoZSBvZiBibG9ja25yIGxpc3QgZW50
cmllcyAqLworCWlmICgocmVzdWx0ID0gYmxvY2tucl9saXN0X2luaXRfc3RhdGljKCkpICE9IDAp
CisJCWdvdG8gZmFpbGVkX2luaXRfYmxvY2tucl9saXN0OworCisJaWYgKChyZXN1bHQgPSByZWdp
c3Rlcl9maWxlc3lzdGVtKCZyZWlzZXI0X2ZzX3R5cGUpKSA9PSAwKSB7CisJCXJlaXNlcjRfZGVi
dWdmc19yb290ID0gZGVidWdmc19jcmVhdGVfZGlyKCJyZWlzZXI0IiwgTlVMTCk7CisJCXJldHVy
biAwOworCX0KKworCWJsb2NrbnJfbGlzdF9kb25lX3N0YXRpYygpOworIGZhaWxlZF9pbml0X2Js
b2NrbnJfbGlzdDoKKwlibG9ja25yX3NldF9kb25lX3N0YXRpYygpOworIGZhaWxlZF9pbml0X2Js
b2NrbnJfc2V0OgorCXJlaXNlcjRfZG9uZV9kX2N1cnNvcigpOworIGZhaWxlZF9pbml0X2RfY3Vy
c29yOgorCXJlaXNlcjRfZG9uZV9maWxlX2ZzZGF0YSgpOworIGZhaWxlZF9pbml0X2ZpbGVfZnNk
YXRhOgorCXJlaXNlcjRfZG9uZV9kZW50cnlfZnNkYXRhKCk7CisgZmFpbGVkX2luaXRfZGVudHJ5
X2ZzZGF0YToKKwlyZWlzZXI0X2RvbmVfZnFzKCk7CisgZmFpbGVkX2luaXRfZnFzOgorCWRvbmVf
am5vZGVzKCk7CisgZmFpbGVkX2luaXRfam5vZGVzOgorCWRvbmVfdHhubWdyX3N0YXRpYygpOwor
IGZhaWxlZF9pbml0X3R4bm1ncl9zdGF0aWM6CisJZG9uZV9wbHVnaW5fc2V0KCk7CisgZmFpbGVk
X2luaXRfcGx1Z2luX3NldDoKKyBmYWlsZWRfaW5pdF9wbHVnaW5zOgorCWRvbmVfem5vZGVzKCk7
CisgZmFpbGVkX2luaXRfem5vZGVzOgorCWRvbmVfaW5vZGVzKCk7CisgZmFpbGVkX2lub2RlX2Nh
Y2hlOgorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qKgorICogZG9uZV9yZWlzZXI0IC0gcmVpc2Vy
NCBleGl0IGVudHJ5IHBvaW50CisgKgorICogVW5yZWdpc3RlciByZWlzZXI0IGZpbGVzeXN0ZW0g
dHlwZSwgZGVsZXRlcyBjYWNoZXMuIEl0IGlzIGNhbGxlZCBvbiBzaHV0ZG93bgorICogb3IgYXQg
bW9kdWxlIHVubG9hZC4KKyAqLworc3RhdGljIHZvaWQgX19leGl0IGRvbmVfcmVpc2VyNCh2b2lk
KQoreworCWludCByZXN1bHQ7CisKKwlkZWJ1Z2ZzX3JlbW92ZShyZWlzZXI0X2RlYnVnZnNfcm9v
dCk7CisJcmVzdWx0ID0gdW5yZWdpc3Rlcl9maWxlc3lzdGVtKCZyZWlzZXI0X2ZzX3R5cGUpOwor
CUJVR19PTihyZXN1bHQgIT0gMCk7CisJYmxvY2tucl9saXN0X2RvbmVfc3RhdGljKCk7CisJYmxv
Y2tucl9zZXRfZG9uZV9zdGF0aWMoKTsKKwlyZWlzZXI0X2RvbmVfZF9jdXJzb3IoKTsKKwlyZWlz
ZXI0X2RvbmVfZmlsZV9mc2RhdGEoKTsKKwlyZWlzZXI0X2RvbmVfZGVudHJ5X2ZzZGF0YSgpOwor
CXJlaXNlcjRfZG9uZV9mcXMoKTsKKwlkb25lX2pub2RlcygpOworCWRvbmVfdHhubWdyX3N0YXRp
YygpOworCWRvbmVfcGx1Z2luX3NldCgpOworCWRvbmVfem5vZGVzKCk7CisJZGVzdHJveV9yZWlz
ZXI0X2NhY2hlKCZpbm9kZV9jYWNoZSk7Cit9CisKK21vZHVsZV9pbml0KGluaXRfcmVpc2VyNCk7
Cittb2R1bGVfZXhpdChkb25lX3JlaXNlcjQpOworCitNT0RVTEVfQUxJQVNfRlMoInJlaXNlcjQi
KTsKKworTU9EVUxFX0RFU0NSSVBUSU9OKCJSZWlzZXI0IGZpbGVzeXN0ZW0iKTsKK01PRFVMRV9B
VVRIT1IoIkhhbnMgUmVpc2VyIDxSZWlzZXJATmFtZXN5cy5DT00+Iik7CisKK01PRFVMRV9MSUNF
TlNFKCJHUEwiKTsKKworLyoKKyAqIExvY2FsIHZhcmlhYmxlczoKKyAqIGMtaW5kZW50YXRpb24t
c3R5bGU6ICJLJlIiCisgKiBtb2RlLW5hbWU6ICJMQyIKKyAqIGMtYmFzaWMtb2Zmc2V0OiA4Cisg
KiB0YWItd2lkdGg6IDgKKyAqIGZpbGwtY29sdW1uOiA3OQorICogRW5kOgorICovCmRpZmYgLXVy
TiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvdGFwLmMgbGlu
dXgtNS40LjE3L2ZzL3JlaXNlcjQvdGFwLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNl
cjQvdGFwLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3RhcC5jCTIwMjAtMDItMDUgMjA6NTM6NDEuNDgzMjIyNDExICswMTAw
CkBAIC0wLDAgKzEsMzc2IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5z
IFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisv
KgorICAgVHJlZSBBY2Nlc3MgUG9pbnRlciAodGFwKS4KKworICAgdGFwIGlzIGRhdGEgc3RydWN0
dXJlIGNvbWJpbmluZyBjb29yZCBhbmQgbG9jayBoYW5kbGUgKG1vc3RseSkuIEl0IGlzCisgICB1
c2VmdWwgd2hlbiBvbmUgaGFzIHRvIHNjYW4gdHJlZSBub2RlcyAoZm9yIGV4YW1wbGUsIGluIHJl
YWRkaXIsIG9yIGZsdXNoKSwKKyAgIGZvciB0YXAgZnVuY3Rpb25zIGFsbG93IHRvIG1vdmUgdGFw
IGluIGVpdGhlciBkaXJlY3Rpb24gdHJhbnNwYXJlbnRseQorICAgY3Jvc3NpbmcgdW5pdC9pdGVt
L25vZGUgYm9yZGVycy4KKworICAgVGFwIGRvZXNuJ3QgcHJvdmlkZSBhdXRvbWF0aWMgc3luY2hy
b25pemF0aW9uIG9mIGl0cyBmaWVsZHMgYXMgaXQgaXMKKyAgIHN1cHBvc2VkIHRvIGJlIHBlci10
aHJlYWQgb2JqZWN0LgorKi8KKworI2luY2x1ZGUgImZvcndhcmQuaCIKKyNpbmNsdWRlICJkZWJ1
Zy5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisjaW5jbHVkZSAidHJlZS5oIgorI2luY2x1ZGUgImNv
bnRleHQuaCIKKyNpbmNsdWRlICJ0YXAuaCIKKyNpbmNsdWRlICJ6bm9kZS5oIgorI2luY2x1ZGUg
InRyZWVfd2Fsay5oIgorCisjaWYgUkVJU0VSNF9ERUJVRworc3RhdGljIGludCB0YXBfaW52YXJp
YW50KGNvbnN0IHRhcF90ICp0YXApOworc3RhdGljIHZvaWQgdGFwX2NoZWNrKGNvbnN0IHRhcF90
ICp0YXApOworI2Vsc2UKKyNkZWZpbmUgdGFwX2NoZWNrKHRhcCkgbm9vcAorI2VuZGlmCisKKy8q
KiBsb2FkIG5vZGUgdGFwIGlzIHBvaW50aW5nIHRvLCBpZiBub3QgbG9hZGVkIGFscmVhZHkgKi8K
K2ludCByZWlzZXI0X3RhcF9sb2FkKHRhcF90ICp0YXApCit7CisJdGFwX2NoZWNrKHRhcCk7CisJ
aWYgKHRhcC0+bG9hZGVkID09IDApIHsKKwkJaW50IHJlc3VsdDsKKworCQlyZXN1bHQgPSB6bG9h
ZF9yYSh0YXAtPmNvb3JkLT5ub2RlLCAmdGFwLT5yYV9pbmZvKTsKKwkJaWYgKHJlc3VsdCAhPSAw
KQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJY29vcmRfY2xlYXJfaXBsdWcodGFwLT5jb29yZCk7CisJ
fQorCSsrdGFwLT5sb2FkZWQ7CisJdGFwX2NoZWNrKHRhcCk7CisJcmV0dXJuIDA7Cit9CisKKy8q
KiByZWxlYXNlIG5vZGUgdGFwIGlzIHBvaW50aW5nIHRvLiBEdWFsIHRvIHRhcF9sb2FkKCkgKi8K
K3ZvaWQgcmVpc2VyNF90YXBfcmVsc2UodGFwX3QgKnRhcCkKK3sKKwl0YXBfY2hlY2sodGFwKTsK
KwlpZiAodGFwLT5sb2FkZWQgPiAwKSB7CisJCS0tdGFwLT5sb2FkZWQ7CisJCWlmICh0YXAtPmxv
YWRlZCA9PSAwKQorCQkJenJlbHNlKHRhcC0+Y29vcmQtPm5vZGUpOworCX0KKwl0YXBfY2hlY2so
dGFwKTsKK30KKworLyoqCisgKiBpbml0IHRhcCB0byBjb25zaXN0IG9mIEBjb29yZCBhbmQgQGxo
LiBMb2NrcyBvbiBub2RlcyB3aWxsIGJlIGFjcXVpcmVkIHdpdGgKKyAqIEBtb2RlCisgKi8KK3Zv
aWQgcmVpc2VyNF90YXBfaW5pdCh0YXBfdCAqdGFwLCBjb29yZF90ICpjb29yZCwgbG9ja19oYW5k
bGUgKiBsaCwKKwkJICAgICAgem5vZGVfbG9ja19tb2RlIG1vZGUpCit7CisJdGFwLT5jb29yZCA9
IGNvb3JkOworCXRhcC0+bGggPSBsaDsKKwl0YXAtPm1vZGUgPSBtb2RlOworCXRhcC0+bG9hZGVk
ID0gMDsKKwlJTklUX0xJU1RfSEVBRCgmdGFwLT5saW5rYWdlKTsKKwlyZWlzZXI0X2luaXRfcmFf
aW5mbygmdGFwLT5yYV9pbmZvKTsKK30KKworLyoqIGFkZCBAdGFwIHRvIHRoZSBwZXItdGhyZWFk
IGxpc3Qgb2YgYWxsIHRhcHMgKi8KK3ZvaWQgcmVpc2VyNF90YXBfbW9uaXRvcih0YXBfdCAqdGFw
KQoreworCWFzc2VydCgibmlraXRhLTI2MjMiLCB0YXAgIT0gTlVMTCk7CisJdGFwX2NoZWNrKHRh
cCk7CisJbGlzdF9hZGQoJnRhcC0+bGlua2FnZSwgcmVpc2VyNF90YXBzX2xpc3QoKSk7CisJdGFw
X2NoZWNrKHRhcCk7Cit9CisKKy8qIGR1cGxpY2F0ZSBAc3JjIGludG8gQGRzdC4gQ29weSBsb2Nr
IGhhbmRsZS4gQGRzdCBpcyBub3QgaW5pdGlhbGx5CisgKiBsb2FkZWQuICovCit2b2lkIHJlaXNl
cjRfdGFwX2NvcHkodGFwX3QgKmRzdCwgdGFwX3QgKnNyYykKK3sKKwlhc3NlcnQoIm5pa2l0YS0z
MTkzIiwgc3JjICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMxOTQiLCBkc3QgIT0gTlVMTCk7
CisKKwkqZHN0LT5jb29yZCA9ICpzcmMtPmNvb3JkOworCWlmIChzcmMtPmxoLT5ub2RlKQorCQlj
b3B5X2xoKGRzdC0+bGgsIHNyYy0+bGgpOworCWRzdC0+bW9kZSA9IHNyYy0+bW9kZTsKKwlkc3Qt
PmxvYWRlZCA9IDA7CisJSU5JVF9MSVNUX0hFQUQoJmRzdC0+bGlua2FnZSk7CisJZHN0LT5yYV9p
bmZvID0gc3JjLT5yYV9pbmZvOworfQorCisvKiogZmluaXNoIHdpdGggQHRhcCAqLwordm9pZCBy
ZWlzZXI0X3RhcF9kb25lKHRhcF90ICp0YXApCit7CisJYXNzZXJ0KCJuaWtpdGEtMjU2NSIsIHRh
cCAhPSBOVUxMKTsKKwl0YXBfY2hlY2sodGFwKTsKKwlpZiAodGFwLT5sb2FkZWQgPiAwKQorCQl6
cmVsc2UodGFwLT5jb29yZC0+bm9kZSk7CisJZG9uZV9saCh0YXAtPmxoKTsKKwl0YXAtPmxvYWRl
ZCA9IDA7CisJbGlzdF9kZWxfaW5pdCgmdGFwLT5saW5rYWdlKTsKKwl0YXAtPmNvb3JkLT5ub2Rl
ID0gTlVMTDsKK30KKworLyoqCisgKiBtb3ZlIEB0YXAgdG8gdGhlIG5ldyBub2RlLCBsb2NrZWQg
d2l0aCBAdGFyZ2V0LiBMb2FkIEB0YXJnZXQsIGlmIEB0YXAgd2FzCisgKiBhbHJlYWR5IGxvYWRl
ZC4KKyAqLworaW50IHJlaXNlcjRfdGFwX21vdmUodGFwX3QgKnRhcCwgbG9ja19oYW5kbGUgKiB0
YXJnZXQpCit7CisJaW50IHJlc3VsdCA9IDA7CisKKwlhc3NlcnQoIm5pa2l0YS0yNTY3IiwgdGFw
ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI1NjgiLCB0YXJnZXQgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMjU3MCIsIHRhcmdldC0+bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0
YS0yNTY5IiwgdGFwLT5jb29yZC0+bm9kZSA9PSB0YXAtPmxoLT5ub2RlKTsKKworCXRhcF9jaGVj
ayh0YXApOworCWlmICh0YXAtPmxvYWRlZCA+IDApCisJCXJlc3VsdCA9IHpsb2FkX3JhKHRhcmdl
dC0+bm9kZSwgJnRhcC0+cmFfaW5mbyk7CisKKwlpZiAocmVzdWx0ID09IDApIHsKKwkJaWYgKHRh
cC0+bG9hZGVkID4gMCkKKwkJCXpyZWxzZSh0YXAtPmNvb3JkLT5ub2RlKTsKKwkJZG9uZV9saCh0
YXAtPmxoKTsKKwkJY29weV9saCh0YXAtPmxoLCB0YXJnZXQpOworCQl0YXAtPmNvb3JkLT5ub2Rl
ID0gdGFyZ2V0LT5ub2RlOworCQljb29yZF9jbGVhcl9pcGx1Zyh0YXAtPmNvb3JkKTsKKwl9CisJ
dGFwX2NoZWNrKHRhcCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBtb3ZlIEB0YXAg
dG8gQHRhcmdldC4gQWNxdWlyZSBsb2NrIG9uIEB0YXJnZXQsIGlmIEB0YXAgd2FzIGFscmVhZHkK
KyAqIGxvYWRlZC4KKyAqLworc3RhdGljIGludCB0YXBfdG8odGFwX3QgKnRhcCwgem5vZGUgKiB0
YXJnZXQpCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgibmlraXRhLTI2MjQiLCB0YXAgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjYyNSIsIHRhcmdldCAhPSBOVUxMKTsKKworCXRhcF9j
aGVjayh0YXApOworCXJlc3VsdCA9IDA7CisJaWYgKHRhcC0+Y29vcmQtPm5vZGUgIT0gdGFyZ2V0
KSB7CisJCWxvY2tfaGFuZGxlIGhlcmU7CisKKwkJaW5pdF9saCgmaGVyZSk7CisJCXJlc3VsdCA9
IGxvbmd0ZXJtX2xvY2tfem5vZGUoJmhlcmUsIHRhcmdldCwKKwkJCQkJICAgICB0YXAtPm1vZGUs
IFpOT0RFX0xPQ0tfSElQUkkpOworCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCXJlc3VsdCA9IHJl
aXNlcjRfdGFwX21vdmUodGFwLCAmaGVyZSk7CisJCQlkb25lX2xoKCZoZXJlKTsKKwkJfQorCX0K
Kwl0YXBfY2hlY2sodGFwKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIG1vdmUgQHRh
cCB0byBnaXZlbiBAdGFyZ2V0LCBsb2FkaW5nIGFuZCBsb2NraW5nIEB0YXJnZXQtPm5vZGUgaWYK
KyAqIG5lY2Vzc2FyeQorICovCitpbnQgdGFwX3RvX2Nvb3JkKHRhcF90ICp0YXAsIGNvb3JkX3Qg
KnRhcmdldCkKK3sKKwlpbnQgcmVzdWx0OworCisJdGFwX2NoZWNrKHRhcCk7CisJcmVzdWx0ID0g
dGFwX3RvKHRhcCwgdGFyZ2V0LT5ub2RlKTsKKwlpZiAocmVzdWx0ID09IDApCisJCWNvb3JkX2R1
cCh0YXAtPmNvb3JkLCB0YXJnZXQpOworCXRhcF9jaGVjayh0YXApOworCXJldHVybiByZXN1bHQ7
Cit9CisKKy8qKiByZXR1cm4gbGlzdCBvZiBhbGwgdGFwcyAqLworc3RydWN0IGxpc3RfaGVhZCAq
cmVpc2VyNF90YXBzX2xpc3Qodm9pZCkKK3sKKwlyZXR1cm4gJmdldF9jdXJyZW50X2NvbnRleHQo
KS0+dGFwczsKK30KKworLyoqIGhlbHBlciBmdW5jdGlvbiBmb3IgZ29fe25leHQscHJldn1fe2l0
ZW0sdW5pdCxub2RlfSgpICovCitpbnQgZ29fZGlyX2VsKHRhcF90ICp0YXAsIHNpZGVvZiBkaXIs
IGludCB1bml0c19wKQoreworCWNvb3JkX3QgZHVwOworCWNvb3JkX3QgKmNvb3JkOworCWludCBy
ZXN1bHQ7CisKKwlpbnQgKCpjb29yZF9kaXIpIChjb29yZF90ICopOworCWludCAoKmdldF9kaXJf
bmVpZ2hib3IpIChsb2NrX2hhbmRsZSAqLCB6bm9kZSAqLCBpbnQsIGludCk7CisJdm9pZCAoKmNv
b3JkX2luaXQpIChjb29yZF90ICosIGNvbnN0IHpub2RlICopOworCU9OX0RFQlVHKGludCAoKmNv
b3JkX2NoZWNrKSAoY29uc3QgY29vcmRfdCAqKSk7CisKKwlhc3NlcnQoIm5pa2l0YS0yNTU2Iiwg
dGFwICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI1NTciLCB0YXAtPmNvb3JkICE9IE5VTEwp
OworCWFzc2VydCgibmlraXRhLTI1NTgiLCB0YXAtPmxoICE9IE5VTEwpOworCWFzc2VydCgibmlr
aXRhLTI1NTkiLCB0YXAtPmNvb3JkLT5ub2RlICE9IE5VTEwpOworCisJdGFwX2NoZWNrKHRhcCk7
CisJaWYgKGRpciA9PSBMRUZUX1NJREUpIHsKKwkJY29vcmRfZGlyID0gdW5pdHNfcCA/IGNvb3Jk
X3ByZXZfdW5pdCA6IGNvb3JkX3ByZXZfaXRlbTsKKwkJZ2V0X2Rpcl9uZWlnaGJvciA9IHJlaXNl
cjRfZ2V0X2xlZnRfbmVpZ2hib3I7CisJCWNvb3JkX2luaXQgPSBjb29yZF9pbml0X2xhc3RfdW5p
dDsKKwl9IGVsc2UgeworCQljb29yZF9kaXIgPSB1bml0c19wID8gY29vcmRfbmV4dF91bml0IDog
Y29vcmRfbmV4dF9pdGVtOworCQlnZXRfZGlyX25laWdoYm9yID0gcmVpc2VyNF9nZXRfcmlnaHRf
bmVpZ2hib3I7CisJCWNvb3JkX2luaXQgPSBjb29yZF9pbml0X2ZpcnN0X3VuaXQ7CisJfQorCU9O
X0RFQlVHKGNvb3JkX2NoZWNrID0KKwkJIHVuaXRzX3AgPyBjb29yZF9pc19leGlzdGluZ191bml0
IDogY29vcmRfaXNfZXhpc3RpbmdfaXRlbSk7CisJYXNzZXJ0KCJuaWtpdGEtMjU2MCIsIGNvb3Jk
X2NoZWNrKHRhcC0+Y29vcmQpKTsKKworCWNvb3JkID0gdGFwLT5jb29yZDsKKwljb29yZF9kdXAo
JmR1cCwgY29vcmQpOworCWlmIChjb29yZF9kaXIoJmR1cCkgIT0gMCkgeworCQlkbyB7CisJCQkv
KiBtb3ZlIHRvIHRoZSBsZWZ0IG5laWdoYm9yaW5nIG5vZGUgKi8KKwkJCWxvY2tfaGFuZGxlIGR1
cDsKKworCQkJaW5pdF9saCgmZHVwKTsKKwkJCXJlc3VsdCA9CisJCQkgICAgZ2V0X2Rpcl9uZWln
aGJvcigmZHVwLCBjb29yZC0+bm9kZSwgKGludCl0YXAtPm1vZGUsCisJCQkJCSAgICAgR05fQ0FO
X1VTRV9VUFBFUl9MRVZFTFMpOworCQkJaWYgKHJlc3VsdCA9PSAwKSB7CisJCQkJcmVzdWx0ID0g
cmVpc2VyNF90YXBfbW92ZSh0YXAsICZkdXApOworCQkJCWlmIChyZXN1bHQgPT0gMCkKKwkJCQkJ
Y29vcmRfaW5pdCh0YXAtPmNvb3JkLCBkdXAubm9kZSk7CisJCQkJZG9uZV9saCgmZHVwKTsKKwkJ
CX0KKwkJCS8qIHNraXAgZW1wdHkgbm9kZXMgKi8KKwkJfSB3aGlsZSAoKHJlc3VsdCA9PSAwKSAm
JiBub2RlX2lzX2VtcHR5KGNvb3JkLT5ub2RlKSk7CisJfSBlbHNlIHsKKwkJcmVzdWx0ID0gMDsK
KwkJY29vcmRfZHVwKGNvb3JkLCAmZHVwKTsKKwl9CisJYXNzZXJ0KCJuaWtpdGEtMjU2NCIsIGVy
Z28oIXJlc3VsdCwgY29vcmRfY2hlY2sodGFwLT5jb29yZCkpKTsKKwl0YXBfY2hlY2sodGFwKTsK
KwlyZXR1cm4gcmVzdWx0OworfQorCisvKioKKyAqIG1vdmUgQHRhcCB0byB0aGUgbmV4dCB1bml0
LCB0cmFuc3BhcmVudGx5IGNyb3NzaW5nIGl0ZW0gYW5kIG5vZGUKKyAqIGJvdW5kYXJpZXMKKyAq
LworaW50IGdvX25leHRfdW5pdCh0YXBfdCAqdGFwKQoreworCXJldHVybiBnb19kaXJfZWwodGFw
LCBSSUdIVF9TSURFLCAxKTsKK30KKworLyoqCisgKiBtb3ZlIEB0YXAgdG8gdGhlIHByZXZpb3Vz
IHVuaXQsIHRyYW5zcGFyZW50bHkgY3Jvc3NpbmcgaXRlbSBhbmQgbm9kZQorICogYm91bmRhcmll
cworICovCitpbnQgZ29fcHJldl91bml0KHRhcF90ICp0YXApCit7CisJcmV0dXJuIGdvX2Rpcl9l
bCh0YXAsIExFRlRfU0lERSwgMSk7Cit9CisKKy8qKgorICogQHNoaWZ0IHRpbWVzIGFwcGx5IEBh
Y3RvciB0byB0aGUgQHRhcC4gVGhpcyBpcyB1c2VkIHRvIG1vdmUgQHRhcCBieQorICogQHNoaWZ0
IHVuaXRzIChvciBpdGVtcywgb3Igbm9kZXMpIGluIGVpdGhlciBkaXJlY3Rpb24uCisgKi8KK3N0
YXRpYyBpbnQgcmV3aW5kX3RvKHRhcF90ICp0YXAsIGdvX2FjdG9yX3QgYWN0b3IsIGludCBzaGlm
dCkKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEtMjU1NSIsIHNoaWZ0ID49IDAp
OworCWFzc2VydCgibmlraXRhLTI1NjIiLCB0YXAtPmNvb3JkLT5ub2RlID09IHRhcC0+bGgtPm5v
ZGUpOworCisJdGFwX2NoZWNrKHRhcCk7CisJcmVzdWx0ID0gcmVpc2VyNF90YXBfbG9hZCh0YXAp
OworCWlmIChyZXN1bHQgIT0gMCkKKwkJcmV0dXJuIHJlc3VsdDsKKworCWZvciAoOyBzaGlmdCA+
IDA7IC0tc2hpZnQpIHsKKwkJcmVzdWx0ID0gYWN0b3IodGFwKTsKKwkJYXNzZXJ0KCJuaWtpdGEt
MjU2MyIsIHRhcC0+Y29vcmQtPm5vZGUgPT0gdGFwLT5saC0+bm9kZSk7CisJCWlmIChyZXN1bHQg
IT0gMCkKKwkJCWJyZWFrOworCX0KKwlyZWlzZXI0X3RhcF9yZWxzZSh0YXApOworCXRhcF9jaGVj
ayh0YXApOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qKiBtb3ZlIEB0YXAgQHNoaWZ0IHVuaXRz
IHJpZ2h0d2FyZCAqLworaW50IHJld2luZF9yaWdodCh0YXBfdCAqdGFwLCBpbnQgc2hpZnQpCit7
CisJcmV0dXJuIHJld2luZF90byh0YXAsIGdvX25leHRfdW5pdCwgc2hpZnQpOworfQorCisvKiog
bW92ZSBAdGFwIEBzaGlmdCB1bml0cyBsZWZ0d2FyZCAqLworaW50IHJld2luZF9sZWZ0KHRhcF90
ICp0YXAsIGludCBzaGlmdCkKK3sKKwlyZXR1cm4gcmV3aW5kX3RvKHRhcCwgZ29fcHJldl91bml0
LCBzaGlmdCk7Cit9CisKKyNpZiBSRUlTRVI0X0RFQlVHCisvKiogZGVidWdnaW5nIGZ1bmN0aW9u
OiBwcmludCBAdGFwIGNvbnRlbnQgaW4gaHVtYW4gcmVhZGFibGUgZm9ybSAqLworc3RhdGljIHZv
aWQgcHJpbnRfdGFwKGNvbnN0IGNoYXIgKnByZWZpeCwgY29uc3QgdGFwX3QgKnRhcCkKK3sKKwlp
ZiAodGFwID09IE5VTEwpIHsKKwkJcHJpbnRrKCIlczogbnVsbCB0YXBcbiIsIHByZWZpeCk7CisJ
CXJldHVybjsKKwl9CisJcHJpbnRrKCIlczogbG9hZGVkOiAlaSwgaW4tbGlzdDogJWksIG5vZGU6
ICVwLCBtb2RlOiAlc1xuIiwgcHJlZml4LAorCSAgICAgICB0YXAtPmxvYWRlZCwgKCZ0YXAtPmxp
bmthZ2UgPT0gdGFwLT5saW5rYWdlLm5leHQgJiYKKwkJCSAgICAgJnRhcC0+bGlua2FnZSA9PSB0
YXAtPmxpbmthZ2UucHJldiksCisJICAgICAgIHRhcC0+bGgtPm5vZGUsCisJICAgICAgIGxvY2tf
bW9kZV9uYW1lKHRhcC0+bW9kZSkpOworCXByaW50X2Nvb3JkKCJcdGNvb3JkIiwgdGFwLT5jb29y
ZCwgMCk7Cit9CisKKy8qKiBjaGVjayBbdGFwLXNhbmVdIGludmFyaWFudCAqLworc3RhdGljIGlu
dCB0YXBfaW52YXJpYW50KGNvbnN0IHRhcF90ICp0YXApCit7CisJLyogW3RhcC1zYW5lXSBpbnZh
cmlhbnQgKi8KKworCWlmICh0YXAgPT0gTlVMTCkKKwkJcmV0dXJuIDE7CisJLyogdGFwLT5tb2Rl
IGlzIG9uZSBvZgorCSAqCisJICoge1pOT0RFX05PX0xPQ0ssIFpOT0RFX1JFQURfTE9DSywgWk5P
REVfV1JJVEVfTE9DS30sIGFuZAorCSAqLworCWlmICh0YXAtPm1vZGUgIT0gWk5PREVfTk9fTE9D
SyAmJgorCSAgICB0YXAtPm1vZGUgIT0gWk5PREVfUkVBRF9MT0NLICYmIHRhcC0+bW9kZSAhPSBa
Tk9ERV9XUklURV9MT0NLKQorCQlyZXR1cm4gMjsKKwkvKiB0YXAtPmNvb3JkICE9IE5VTEwsIGFu
ZCAqLworCWlmICh0YXAtPmNvb3JkID09IE5VTEwpCisJCXJldHVybiAzOworCS8qIHRhcC0+bGgg
IT0gTlVMTCwgYW5kICovCisJaWYgKHRhcC0+bGggPT0gTlVMTCkKKwkJcmV0dXJuIDQ7CisJLyog
dGFwLT5sb2FkZWQgPiAwID0+IHpub2RlX2lzX2xvYWRlZCh0YXAtPmNvb3JkLT5ub2RlKSwgYW5k
ICovCisJaWYgKCFlcmdvKHRhcC0+bG9hZGVkLCB6bm9kZV9pc19sb2FkZWQodGFwLT5jb29yZC0+
bm9kZSkpKQorCQlyZXR1cm4gNTsKKwkvKiB0YXAtPmNvb3JkLT5ub2RlID09IHRhcC0+bGgtPm5v
ZGUgaWYgdGFwLT5saC0+bm9kZSBpcyBub3QgMCAqLworCWlmICh0YXAtPmxoLT5ub2RlICE9IE5V
TEwgJiYgdGFwLT5jb29yZC0+bm9kZSAhPSB0YXAtPmxoLT5ub2RlKQorCQlyZXR1cm4gNjsKKwly
ZXR1cm4gMDsKK30KKworLyoqIGRlYnVnZ2luZyBmdW5jdGlvbjogY2hlY2sgaW50ZXJuYWwgQHRh
cCBjb25zaXN0ZW5jeSAqLworc3RhdGljIHZvaWQgdGFwX2NoZWNrKGNvbnN0IHRhcF90ICp0YXAp
Cit7CisJaW50IHJlc3VsdDsKKworCXJlc3VsdCA9IHRhcF9pbnZhcmlhbnQodGFwKTsKKwlpZiAo
cmVzdWx0ICE9IDApIHsKKwkJcHJpbnRfdGFwKCJicm9rZW4iLCB0YXApOworCQlyZWlzZXI0X3Bh
bmljKCJuaWtpdGEtMjgzMSIsICJ0YXAgYnJva2VuOiAlaVxuIiwgcmVzdWx0KTsKKwl9Cit9Cisj
ZW5kaWYKKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMt
aW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMt
b2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9s
bC1zdGVwOiAxCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01
LjQuMTcub3JpZy9mcy9yZWlzZXI0L3RhcC5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3RhcC5o
Ci0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3RhcC5oCTE5NzAtMDEtMDEgMDE6MDA6
MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC90YXAuaAkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ4MzIyMjQxMSArMDEwMApAQCAtMCwwICsxLDcwIEBACisvKiBDb3B5
cmlnaHQgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5IHJl
aXNlcjQvUkVBRE1FICovCisKKy8qIFRyZWUgQWNjZXNzIFBvaW50ZXJzLiBTZWUgdGFwLmMgZm9y
IG1vcmUgZGV0YWlscy4gKi8KKworI2lmICFkZWZpbmVkKF9fUkVJU0VSNF9UQVBfSF9fKQorI2Rl
ZmluZSBfX1JFSVNFUjRfVEFQX0hfXworCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUg
InJlYWRhaGVhZC5oIgorCisvKioKKyAgICB0cmVlX2FjY2Vzc19wb2ludGVyIGFrYSB0YXAuIERh
dGEgc3RydWN0dXJlIGNvbWJpbmluZyBjb29yZF90IGFuZCBsb2NrCisgICAgaGFuZGxlLgorICAg
IEludmFyaWFudHMgaW52b2x2aW5nIHRoaXMgZGF0YS10eXBlLCBzZWUgZG9jL2xvY2stb3JkZXJp
bmcgZm9yIGRldGFpbHM6CisKKyAgICAgIFt0YXAtc2FuZV0KKyAqLworc3RydWN0IHRyZWVfYWNj
ZXNzX3BvaW50ZXIgeworCS8qIGNvb3JkIHRhcCBpcyBhdCAqLworCWNvb3JkX3QgKmNvb3JkOwor
CS8qIGxvY2sgaGFuZGxlIG9uIC0+Y29vcmQtPm5vZGUgKi8KKwlsb2NrX2hhbmRsZSAqbGg7CisJ
LyogbW9kZSBvZiBsb2NrIGFjcXVpcmVkIGJ5IHRoaXMgdGFwICovCisJem5vZGVfbG9ja19tb2Rl
IG1vZGU7CisJLyogaW5jcmVtZW50ZWQgYnkgcmVpc2VyNF90YXBfbG9hZCgpLgorCSAgIERlY3Jl
bWVudGVkIGJ5IHJlaXNlcjRfdGFwX3JlbHNlKCkuICovCisJaW50IGxvYWRlZDsKKwkvKiBsaXN0
IG9mIHRhcHMgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGxpbmthZ2U7CisJLyogcmVhZC1haGVhZCBo
aW50ICovCisJcmFfaW5mb190IHJhX2luZm87Cit9OworCit0eXBlZGVmIGludCAoKmdvX2FjdG9y
X3QpICh0YXBfdCAqdGFwKTsKKworZXh0ZXJuIGludCByZWlzZXI0X3RhcF9sb2FkKHRhcF90ICp0
YXApOworZXh0ZXJuIHZvaWQgcmVpc2VyNF90YXBfcmVsc2UodGFwX3QgKnRhcCk7CitleHRlcm4g
dm9pZCByZWlzZXI0X3RhcF9pbml0KHRhcF90ICp0YXAsIGNvb3JkX3QgKmNvb3JkLCBsb2NrX2hh
bmRsZSAqIGxoLAorCQkgICAgIHpub2RlX2xvY2tfbW9kZSBtb2RlKTsKK2V4dGVybiB2b2lkIHJl
aXNlcjRfdGFwX21vbml0b3IodGFwX3QgKnRhcCk7CitleHRlcm4gdm9pZCByZWlzZXI0X3RhcF9j
b3B5KHRhcF90ICpkc3QsIHRhcF90ICpzcmMpOworZXh0ZXJuIHZvaWQgcmVpc2VyNF90YXBfZG9u
ZSh0YXBfdCAqdGFwKTsKK2V4dGVybiBpbnQgcmVpc2VyNF90YXBfbW92ZSh0YXBfdCAqdGFwLCBs
b2NrX2hhbmRsZSAqIHRhcmdldCk7CitleHRlcm4gaW50IHRhcF90b19jb29yZCh0YXBfdCAqdGFw
LCBjb29yZF90ICp0YXJnZXQpOworCitleHRlcm4gaW50IGdvX2Rpcl9lbCh0YXBfdCAqdGFwLCBz
aWRlb2YgZGlyLCBpbnQgdW5pdHNfcCk7CitleHRlcm4gaW50IGdvX25leHRfdW5pdCh0YXBfdCAq
dGFwKTsKK2V4dGVybiBpbnQgZ29fcHJldl91bml0KHRhcF90ICp0YXApOworZXh0ZXJuIGludCBy
ZXdpbmRfcmlnaHQodGFwX3QgKnRhcCwgaW50IHNoaWZ0KTsKK2V4dGVybiBpbnQgcmV3aW5kX2xl
ZnQodGFwX3QgKnRhcCwgaW50IHNoaWZ0KTsKKworZXh0ZXJuIHN0cnVjdCBsaXN0X2hlYWQgKnJl
aXNlcjRfdGFwc19saXN0KHZvaWQpOworCisjZGVmaW5lIGZvcl9hbGxfdGFwcyh0YXApCQkJCQkJ
ICAgICAgIFwKKwlmb3IgKHRhcCA9IGxpc3RfZW50cnkocmVpc2VyNF90YXBzX2xpc3QoKS0+bmV4
dCwgdGFwX3QsIGxpbmthZ2UpOyAgICAgIFwKKwkgICAgIHJlaXNlcjRfdGFwc19saXN0KCkgIT0g
JnRhcC0+bGlua2FnZTsJCQkgICAgICAgXAorCSAgICAgdGFwID0gbGlzdF9lbnRyeSh0YXAtPmxp
bmthZ2UubmV4dCwgdGFwX3QsIGxpbmthZ2UpKQorCisvKiBfX1JFSVNFUjRfVEFQX0hfXyAqLwor
I2VuZGlmCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1p
bmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1v
ZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Nyb2xs
LXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUu
NC4xNy5vcmlnL2ZzL3JlaXNlcjQvdHJlZS5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3RyZWUu
YwotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC90cmVlLmMJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3RyZWUuYwky
MDIwLTAyLTA1IDIwOjUzOjQxLjQ4NDIyMjQxOSArMDEwMApAQCAtMCwwICsxLDE4ODQgQEAKKy8q
IENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292
ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qCisgKiBLRVlTIElOIEEgVFJFRS4K
KyAqCisgKiBUaGUgdHJlZSBjb25zaXN0cyBvZiBub2RlcyBsb2NhdGVkIG9uIHRoZSBkaXNrLiBO
b2RlIGluIHRoZSB0cmVlIGlzIGVpdGhlcgorICogZm9ybWF0dGVkIG9yIHVuZm9ybWF0dGVkLiBG
b3JtYXR0ZWQgbm9kZSBpcyBvbmUgdGhhdCBoYXMgc3RydWN0dXJlCisgKiB1bmRlcnN0b29kIGJ5
IHRoZSB0cmVlIGJhbGFuY2luZyBhbmQgdHJhdmVyc2FsIGNvZGUuIEZvcm1hdHRlZCBub2RlcyBh
cmUKKyAqIGZ1cnRoZXIgY2xhc3NpZmllZCBpbnRvIGxlYWYgYW5kIGludGVybmFsIG5vZGVzLiBM
YXR0ZXIgZGlzdGluY3Rpb25zIGlzCisgKiAoYWxtb3N0KSBvZiBvbmx5IGhpc3RvcmljYWwgaW1w
b3J0YW5jZTogZ2VuZXJhbCBzdHJ1Y3R1cmUgb2YgbGVhdmVzIGFuZAorICogaW50ZXJuYWwgbm9k
ZXMgaXMgdGhlIHNhbWUgaW4gUmVpc2VyNC4gVW5mb3JtYXR0ZWQgbm9kZXMgY29udGFpbiByYXcg
ZGF0YQorICogdGhhdCBhcmUgcGFydCBvZiBib2RpZXMgb2Ygb3JkaW5hcnkgZmlsZXMgYW5kIGF0
dHJpYnV0ZXMuCisgKgorICogRWFjaCBub2RlIGluIHRoZSB0cmVlIHNwYXducyBzb21lIGludGVy
dmFsIGluIHRoZSBrZXkgc3BhY2UuIEtleSByYW5nZXMgZm9yCisgKiBhbGwgbm9kZXMgaW4gdGhl
IHRyZWUgYXJlIGRpc2pvaW50LiBBY3R1YWxseSwgdGhpcyBvbmx5IGhvbGRzIGluIHNvbWUgd2Vh
aworICogc2Vuc2UsIGJlY2F1c2Ugb2YgdGhlIG5vbi11bmlxdWUga2V5czogaW50ZXJzZWN0aW9u
IG9mIGtleSByYW5nZXMgZm9yCisgKiBkaWZmZXJlbnQgbm9kZXMgaXMgZWl0aGVyIGVtcHR5LCBv
ciBjb25zaXN0cyBvZiBleGFjdGx5IG9uZSBrZXkuCisgKgorICogRm9ybWF0dGVkIG5vZGUgY29u
c2lzdHMgb2YgYSBzZXF1ZW5jZSBvZiBpdGVtcy4gRWFjaCBpdGVtIHNwYXducyBzb21lCisgKiBp
bnRlcnZhbCBpbiBrZXkgc3BhY2UuIEtleSByYW5nZXMgZm9yIGFsbCBpdGVtcyBpbiBhIHRyZWUg
YXJlIGRpc2pvaW50LAorICogbW9kdWxvIG5vbi11bmlxdWUga2V5cyBhZ2Fpbi4gSXRlbXMgd2l0
aGluIG5vZGVzIGFyZSBvcmRlcmVkIGluIHRoZSBrZXkKKyAqIG9yZGVyIG9mIHRoZSBzbWFsbGVz
dCBrZXkgaW4gYSBpdGVtLgorICoKKyAqIFBhcnRpY3VsYXIgdHlwZSBvZiBpdGVtIGNhbiBiZSBm
dXJ0aGVyIHNwbGl0IGludG8gdW5pdHMuIFVuaXQgaXMgcGllY2Ugb2YKKyAqIGl0ZW0gdGhhdCBj
YW4gYmUgY3V0IGZyb20gaXRlbSBhbmQgbW92ZWQgaW50byBhbm90aGVyIGl0ZW0gb2YgdGhlIHNh
bWUKKyAqIHRpbWUuIFVuaXRzIGFyZSB1c2VkIGJ5IGJhbGFuY2luZyBjb2RlIHRvIHJlcGFjayBk
YXRhIGR1cmluZyBiYWxhbmNpbmcuCisgKgorICogVW5pdCBjYW4gYmUgZnVydGhlciBzcGxpdCBp
bnRvIHNtYWxsZXIgZW50aXRpZXMgKGZvciBleGFtcGxlLCBleHRlbnQgdW5pdAorICogcmVwcmVz
ZW50cyBzZXZlcmFsIHBhZ2VzLCBhbmQgaXQgaXMgbmF0dXJhbCBmb3IgZXh0ZW50IGNvZGUgdG8g
b3BlcmF0ZSBvbgorICogcGFydGljdWxhciBwYWdlcyBhbmQgZXZlbiBieXRlcyB3aXRoaW4gb25l
IHVuaXQpLCBidXQgdGhpcyBpcyBvZiBubworICogcmVsZXZhbmNlIHRvIHRoZSBnZW5lcmljIGJh
bGFuY2luZyBhbmQgbG9va3VwIGNvZGUuCisgKgorICogQWx0aG91Z2ggaXRlbSBpcyBzYWlkIHRv
ICJzcGF3biIgcmFuZ2Ugb3IgaW50ZXJ2YWwgb2Yga2V5cywgaXQgaXMgbm90CisgKiBuZWNlc3Nh
cnkgdGhhdCBpdGVtIGNvbnRhaW5zIHBpZWNlIG9mIGRhdGEgYWRkcmVzc2FibGUgYnkgZWFjaCBh
bmQgZXZlcnkKKyAqIGtleSBpbiB0aGlzIHJhbmdlLiBGb3IgZXhhbXBsZSwgY29tcG91bmQgZGly
ZWN0b3J5IGl0ZW0sIGNvbnNpc3Rpbmcgb2YKKyAqIHVuaXRzIGNvcnJlc3BvbmRpbmcgdG8gZGly
ZWN0b3J5IGVudHJpZXMgYW5kIGtleWVkIGJ5IGhhc2hlcyBvZiBmaWxlIG5hbWVzLAorICogbG9v
a3MgbW9yZSBhcyBoYXZpbmcgImRpc2NyZXRlIHNwZWN0cnVtIjogb25seSBzb21lIGRpc2pvaW50
IGtleXMgaW5zaWRlCisgKiByYW5nZSBvY2N1cGllZCBieSB0aGlzIGl0ZW0gcmVhbGx5IGFkZHJl
c3MgZGF0YS4KKyAqCisgKiBObyB0aGFuIGxlc3MsIGVhY2ggaXRlbSBhbHdheXMgaGFzIHdlbGwt
ZGVmaW5lZCBsZWFzdCAobWluaW1hbCkga2V5LCB0aGF0CisgKiBpcyByZWNvcmRlZCBpbiBpdGVt
IGhlYWRlciwgc3RvcmVkIGluIHRoZSBub2RlIHRoaXMgaXRlbSBpcyBpbi4gQWxzbywgaXRlbQor
ICogcGx1Z2luIGNhbiBvcHRpb25hbGx5IGRlZmluZSBtZXRob2QgLT5tYXhfa2V5X2luc2lkZSgp
IHJldHVybmluZyBtYXhpbWFsCisgKiBrZXkgdGhhdCBjYW4gX3Bvc3NpYmx5XyBiZSBsb2NhdGVk
IHdpdGhpbiB0aGlzIGl0ZW0uIFRoaXMgbWV0aG9kIGlzIHVzZWQKKyAqIChtYWlubHkpIHRvIGRl
dGVybWluZSB3aGVuIGdpdmVuIHBpZWNlIG9mIGRhdGEgc2hvdWxkIGJlIG1lcmdlZCBpbnRvCisg
KiBleGlzdGluZyBpdGVtLCBpbiBzdGVhZCBvZiBjcmVhdGluZyBuZXcgb25lLiBCZWNhdXNlIG9m
IHRoaXMsIGV2ZW4gdGhvdWdoCisgKiAtPm1heF9rZXlfaW5zaWRlKCkgY2FuIGJlIGxhcmdlciB0
aGF0IGFueSBrZXkgYWN0dWFsbHkgbG9jYXRlZCBpbiB0aGUgaXRlbSwKKyAqIGludGVydmFscwor
ICoKKyAqIFsgcmVpc2VyNF9taW5fa2V5KCBpdGVtICksIC0+bWF4X2tleV9pbnNpZGUoIGl0ZW0g
KSBdCisgKgorICogYXJlIHN0aWxsIGRpc2pvaW50IGZvciBhbGwgaXRlbXMgd2l0aGluIHRoZSBf
c2FtZV8gbm9kZS4KKyAqCisgKiBJbiBtZW1vcnkgbm9kZSBpcyByZXByZXNlbnRlZCBieSB6bm9k
ZS4gSXQgcGxheXMgc2V2ZXJhbCByb2xlczoKKyAqCisgKiAgLiBzb21ldGhpbmcgbG9ja3MgYXJl
IHRha2VuIG9uCisgKgorICogIC4gc29tZXRoaW5nIHRyYWNrZWQgYnkgdHJhbnNhY3Rpb24gbWFu
YWdlciAodGhpcyBpcyBnb2luZyB0byBjaGFuZ2UpCisgKgorICogIC4gc29tZXRoaW5nIHVzZWQg
dG8gYWNjZXNzIG5vZGUgZGF0YQorICoKKyAqICAuIHNvbWV0aGluZyB1c2VkIHRvIG1haW50YWlu
IHRyZWUgc3RydWN0dXJlIGluIG1lbW9yeTogc2libGluZyBhbmQKKyAqICBwYXJlbnRhbCBsaW5r
YWdlLgorICoKKyAqICAuIHNvbWV0aGluZyB1c2VkIHRvIG9yZ2FuaXplIG5vZGVzIGludG8gInNs
dW1zIgorICoKKyAqIE1vcmUgb24gem5vZGVzIHNlZSBpbiB6bm9kZS5bY2hdCisgKgorICogREVM
SU1JVElORyBLRVlTCisgKgorICogICBUbyBzaW1wbGlmeSBiYWxhbmNpbmcsIGFsbG93IHNvbWUg
ZmxleGliaWxpdHkgaW4gbG9ja2luZyBhbmQgc3BlZWQgdXAKKyAqICAgaW1wb3J0YW50IGNvb3Jk
IGNhY2hlIG9wdGltaXphdGlvbiwgd2Uga2VlcCBkZWxpbWl0aW5nIGtleXMgb2Ygbm9kZXMgaW4K
KyAqICAgbWVtb3J5LiBEZXBlbmRpbmcgb24gZGlzayBmb3JtYXQgKGltcGxlbWVudGVkIGJ5IGFw
cHJvcHJpYXRlIG5vZGUgcGx1Z2luKQorICogICBub2RlIG9uIGRpc2sgY2FuIHJlY29yZCBib3Ro
IGxlZnQgYW5kIHJpZ2h0IGRlbGltaXRpbmcga2V5LCBvbmx5IG9uZSBvZgorICogICB0aGVtLCBv
ciBub25lLiBTdGlsbCwgb3VyIGJhbGFuY2luZyBhbmQgdHJlZSB0cmF2ZXJzYWwgY29kZSBrZWVw
IGJvdGgKKyAqICAgZGVsaW1pdGluZyBrZXlzIGZvciBhIG5vZGUgdGhhdCBpcyBpbiBtZW1vcnkg
c3RvcmVkIGluIHRoZSB6bm9kZS4gV2hlbgorICogICBub2RlIGlzIGZpcnN0IGJyb3VnaHQgaW50
byBtZW1vcnkgZHVyaW5nIHRyZWUgdHJhdmVyc2FsLCBpdHMgbGVmdAorICogICBkZWxpbWl0aW5n
IGtleSBpcyB0YWtlbiBmcm9tIGl0cyBwYXJlbnQsIGFuZCBpdHMgcmlnaHQgZGVsaW1pdGluZyBr
ZXkgaXMKKyAqICAgZWl0aGVyIG5leHQga2V5IGluIGl0cyBwYXJlbnQsIG9yIGlzIHJpZ2h0IGRl
bGltaXRpbmcga2V5IG9mIHBhcmVudCBpZgorICogICBub2RlIGlzIHRoZSByaWdodG1vc3QgY2hp
bGQgb2YgcGFyZW50LgorICoKKyAqICAgUGh5c2ljYWwgY29uc2lzdGVuY3kgb2YgZGVsaW1pdGlu
ZyBrZXkgaXMgcHJvdGVjdGVkIGJ5IHNwZWNpYWwgZGsKKyAqICAgcmVhZC13cml0ZSBsb2NrLiBU
aGF0IGlzLCBkZWxpbWl0aW5nIGtleXMgY2FuIG9ubHkgYmUgaW5zcGVjdGVkIG9yCisgKiAgIG1v
ZGlmaWVkIHVuZGVyIHRoaXMgbG9jay4gQnV0IGRrIGxvY2sgaXMgb25seSBzdWZmaWNpZW50IGZv
ciBmYXN0CisgKiAgICJwZXNzaW1pc3RpYyIgY2hlY2ssIGJlY2F1c2UgdG8gc2ltcGxpZnkgY29k
ZSBhbmQgdG8gZGVjcmVhc2UgbG9jaworICogICBjb250ZW50aW9uLCBiYWxhbmNpbmcgKGNhcnJ5
KSBvbmx5IHVwZGF0ZXMgZGVsaW1pdGluZyBrZXlzIHJpZ2h0IGJlZm9yZQorICogICB1bmxvY2tp
bmcgYWxsIGxvY2tlZCBub2RlcyBvbiB0aGUgZ2l2ZW4gdHJlZSBsZXZlbC4gRm9yIGV4YW1wbGUs
CisgKiAgIGNvb3JkLWJ5LWtleSBjYWNoZSBzY2FucyBMUlUgbGlzdCBvZiByZWNlbnRseSBhY2Nl
c3NlZCB6bm9kZXMuIEZvciBlYWNoCisgKiAgIG5vZGUgaXQgZmlyc3QgZG9lcyBmYXN0IGNoZWNr
IHVuZGVyIGRrIHNwaW4gbG9jay4gSWYga2V5IGxvb2tlZCBmb3IgaXMKKyAqICAgbm90IGJldHdl
ZW4gZGVsaW1pdGluZyBrZXlzIGZvciB0aGlzIG5vZGUsIG5leHQgbm9kZSBpcyBpbnNwZWN0ZWQg
YW5kIHNvCisgKiAgIG9uLiBJZiBrZXkgaXMgaW5zaWRlIG9mIHRoZSBrZXkgcmFuZ2UsIGxvbmcg
dGVybSBsb2NrIGlzIHRha2VuIG9uIG5vZGUKKyAqICAgYW5kIGtleSByYW5nZSBpcyByZWNoZWNr
ZWQuCisgKgorICogQ09PUkRJTkFURVMKKyAqCisgKiAgIFRvIGZpbmQgc29tZXRoaW5nIGluIHRo
ZSB0cmVlLCB5b3Ugc3VwcGx5IGEga2V5LCBhbmQgdGhlIGtleSBpcyByZXNvbHZlZAorICogICBi
eSBjb29yZF9ieV9rZXkoKSBpbnRvIGEgY29vcmQgKGNvb3JkaW5hdGUpIHRoYXQgaXMgdmFsaWQg
YXMgbG9uZyBhcyB0aGUKKyAqICAgbm9kZSB0aGUgY29vcmQgcG9pbnRzIHRvIHJlbWFpbnMgbG9j
a2VkLiAgQXMgbWVudGlvbmVkIGFib3ZlIHRyZWVzCisgKiAgIGNvbnNpc3Qgb2Ygbm9kZXMgdGhh
dCBjb25zaXN0IG9mIGl0ZW1zIHRoYXQgY29uc2lzdCBvZiB1bml0cy4gQSB1bml0IGlzCisgKiAg
IHRoZSBzbWFsbGVzdCBhbmQgaW5kaXZpc2libGUgcGllY2Ugb2YgdHJlZSBhcyBmYXIgYXMgYmFs
YW5jaW5nIGFuZCB0cmVlCisgKiAgIHNlYXJjaCBhcmUgY29uY2VybmVkLiBFYWNoIG5vZGUsIGl0
ZW0sIGFuZCB1bml0IGNhbiBiZSBhZGRyZXNzZWQgYnkKKyAqICAgZ2l2aW5nIGl0cyBsZXZlbCBp
biB0aGUgdHJlZSBhbmQgdGhlIGtleSBvY2N1cGllZCBieSB0aGlzIGVudGl0eS4gIEEgbm9kZQor
ICogICBrbm93cyB3aGF0IHRoZSBrZXkgcmFuZ2VzIGFyZSBvZiB0aGUgaXRlbXMgd2l0aGluIGl0
LCBhbmQgaG93IHRvIGZpbmQgaXRzCisgKiAgIGl0ZW1zIGFuZCBpbnZva2UgdGhlaXIgaXRlbSBo
YW5kbGVycywgYnV0IGl0IGRvZXMgbm90IGtub3cgaG93IHRvIGFjY2VzcworICogICBpbmRpdmlk
dWFsIHVuaXRzIHdpdGhpbiBpdHMgaXRlbXMgZXhjZXB0IHRocm91Z2ggdGhlIGl0ZW0gaGFuZGxl
cnMuCisgKiAgIGNvb3JkIGlzIGEgc3RydWN0dXJlIGNvbnRhaW5pbmcgYSBwb2ludGVyIHRvIHRo
ZSBub2RlLCB0aGUgb3JkaW5hbCBudW1iZXIKKyAqICAgb2YgdGhlIGl0ZW0gd2l0aGluIHRoaXMg
bm9kZSAoYSBzb3J0IG9mIGl0ZW0gb2Zmc2V0KSwgYW5kIHRoZSBvcmRpbmFsCisgKiAgIG51bWJl
ciBvZiB0aGUgdW5pdCB3aXRoaW4gdGhpcyBpdGVtLgorICoKKyAqIFRSRUUgTE9PS1VQCisgKgor
ICogICBUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIGFjY2VzcyB0byB0aGUgdHJlZTogbG9va3VwIGFu
ZCBtb2RpZmljYXRpb24uCisgKgorICogICBMb29rdXAgaXMgYSBzZWFyY2ggZm9yIHRoZSBrZXkg
aW4gdGhlIHRyZWUuIFNlYXJjaCBjYW4gbG9vayBmb3IgZWl0aGVyCisgKiAgIGV4YWN0bHkgdGhl
IGtleSBnaXZlbiB0byBpdCwgb3IgZm9yIHRoZSBsYXJnZXN0IGtleSB0aGF0IGlzIG5vdCBncmVh
dGVyCisgKiAgIHRoYW4gdGhlIGtleSBnaXZlbiB0byBpdC4gVGhpcyBkaXN0aW5jdGlvbiBpcyBk
ZXRlcm1pbmVkIGJ5ICJiaWFzIgorICogICBwYXJhbWV0ZXIgb2Ygc2VhcmNoIHJvdXRpbmUgKGNv
b3JkX2J5X2tleSgpKS4gY29vcmRfYnlfa2V5KCkgZWl0aGVyCisgKiAgIHJldHVybnMgZXJyb3Ig
KGtleSBpcyBub3QgaW4gdGhlIHRyZWUsIG9yIHNvbWUga2luZCBvZiBleHRlcm5hbCBlcnJvcgor
ICogICBvY2N1cnJlZCksIG9yIHN1Y2Nlc3NmdWxseSByZXNvbHZlcyBrZXkgaW50byBjb29yZC4K
KyAqCisgKiAgIFRoaXMgcmVzb2x1dGlvbiBpcyBkb25lIGJ5IHRyYXZlcnNpbmcgdHJlZSB0b3At
dG8tYm90dG9tIGZyb20gcm9vdCBsZXZlbAorICogICB0byB0aGUgZGVzaXJlZCBsZXZlbC4gT24g
bGV2ZWxzIGFib3ZlIHR3aWcgbGV2ZWwgKGxldmVsIG9uZSBhYm92ZSB0aGUKKyAqICAgbGVhZiBs
ZXZlbCkgbm9kZXMgY29uc2lzdCBleGNsdXNpdmVseSBvZiBpbnRlcm5hbCBpdGVtcy4gSW50ZXJu
YWwgaXRlbSBpcworICogICBub3RoaW5nIG1vcmUgdGhhbiBwb2ludGVyIHRvIHRoZSB0cmVlIG5v
ZGUgb24gdGhlIGNoaWxkIGxldmVsLiBPbiB0d2lnCisgKiAgIGxldmVsIG5vZGVzIGNvbnNpc3Qg
b2YgaW50ZXJuYWwgaXRlbXMgaW50ZXJtaXhlZCB3aXRoIGV4dGVudAorICogICBpdGVtcy4gSW50
ZXJuYWwgaXRlbXMgZm9ybSBub3JtYWwgc2VhcmNoIHRyZWUgc3RydWN0dXJlIHVzZWQgYnkgdHJh
dmVyc2FsCisgKiAgIHRvIGRlc2NlbnQgdGhyb3VnaCB0aGUgdHJlZS4KKyAqCisgKiBUUkVFIExP
T0tVUCBPUFRJTUlaQVRJT05TCisgKgorICogVHJlZSBsb29rdXAgZGVzY3JpYmVkIGFib3ZlIGlz
IGV4cGVuc2l2ZSBldmVuIGlmIGFsbCBub2RlcyB0cmF2ZXJzZWQgYXJlCisgKiBhbHJlYWR5IGlu
IHRoZSBtZW1vcnk6IGZvciBlYWNoIG5vZGUgYmluYXJ5IHNlYXJjaCB3aXRoaW4gaXQgaGFzIHRv
IGJlCisgKiBwZXJmb3JtZWQgYW5kIGJpbmFyeSBzZWFyY2hlcyBhcmUgQ1BVIGNvbnN1bWluZyBh
bmQgdGVuZCB0byBkZXN0cm95IENQVQorICogY2FjaGVzLgorICoKKyAqIFNldmVyYWwgb3B0aW1p
emF0aW9ucyBhcmUgdXNlZCB0byB3b3JrIGFyb3VuZCB0aGlzOgorICoKKyAqICAgLiBjYmtfY2Fj
aGUgKGxvb2stYXNpZGUgY2FjaGUgZm9yIHRyZWUgdHJhdmVyc2Fscywgc2VlIHNlYXJjaC5jIGZv
cgorICogICBkZXRhaWxzKQorICoKKyAqICAgLiBzZWFscyAoc2VlIHNlYWwuW2NoXSkKKyAqCisg
KiAgIC4gdnJvb3QgKHNlZSBzZWFyY2guYykKKyAqCisgKiBHZW5lcmFsIHNlYXJjaC1ieS1rZXkg
aXMgbGF5ZXJlZCB0aHVzbHk6CisgKgorICogICAgICAgICAgICAgICAgICAgW2NoZWNrIHNlYWws
IGlmIGFueV0gICAtLW9rLS0+IGRvbmUKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgfAor
ICogICAgICAgICAgICAgICAgICAgICAgICAgZmFpbGVkCisgKiAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHwKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgVgorICogICAgICAgICAgICAg
ICAgICAgICBbdnJvb3QgZGVmaW5lZF0gLS1uby0tPiBub2RlID0gdHJlZV9yb290CisgKiAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgfAorICogICAgICAgICAg
ICAgICAgICAgICAgICAgIHllcyAgICAgICAgICAgICAgICAgIHwKKyAqICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8CisgKiAgICAgICAgICAgICAgICAgICAg
ICAgICAgIFYgICAgICAgICAgICAgICAgICAgfAorICogICAgICAgICAgICAgICAgICAgICAgIG5v
ZGUgPSB2cm9vdCAgICAgICAgICAgIHwKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgICAgICAgICAgICB8CisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwg
ICAgICAgICAgICAgfAorICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAg
ICAgICAgIHwKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgViAgICAgICAgICAg
ICBWCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY2hlY2sgY2JrX2NhY2hlIGZvciBr
ZXldICAtLW9rLS0+IGRvbmUKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHwKKyAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsZWQKKyAq
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKKyAqICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFYKKyAqICAgICAgICAgICAgICAgICAgICAgICBb
c3RhcnQgdHJlZSB0cmF2ZXJzYWwgZnJvbSBub2RlXQorICoKKyAqLworCisjaW5jbHVkZSAiZm9y
d2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorI2luY2x1
ZGUgImtleS5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisjaW5jbHVkZSAicGx1Z2luL2l0ZW0vc3Rh
dGljX3N0YXQuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAicGx1
Z2luL25vZGUvbm9kZS5oIgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW4uaCIKKyNpbmNsdWRlICJ0
eG5tZ3IuaCIKKyNpbmNsdWRlICJqbm9kZS5oIgorI2luY2x1ZGUgInpub2RlLmgiCisjaW5jbHVk
ZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJ0cmVlX3dhbGsuaCIKKyNpbmNsdWRlICJjYXJy
eS5oIgorI2luY2x1ZGUgImNhcnJ5X29wcy5oIgorI2luY2x1ZGUgInRhcC5oIgorI2luY2x1ZGUg
InRyZWUuaCIKKyNpbmNsdWRlICJ2ZnNfb3BzLmgiCisjaW5jbHVkZSAicGFnZV9jYWNoZS5oIgor
I2luY2x1ZGUgInN1cGVyLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgorI2luY2x1ZGUgImlub2Rl
LmgiCisKKyNpbmNsdWRlIDxsaW51eC9mcy5oPgkJLyogZm9yIHN0cnVjdCBzdXBlcl9ibG9jayAg
Ki8KKyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorCisvKiBEaXNrIGFkZHJlc3MgKGJsb2Nr
IG51bWJlcikgbmV2ZXIgZXZlciB1c2VkIGZvciBhbnkgcmVhbCB0cmVlIG5vZGUuIFRoaXMgaXMK
KyAgIHVzZWQgYXMgYmxvY2sgbnVtYmVyIG9mICJ1YmVyIiB6bm9kZS4KKworICAgSW52YWxpZCBi
bG9jayBhZGRyZXNzZXMgYXJlIDAgYnkgdHJhZGl0aW9uLgorCisqLworY29uc3QgcmVpc2VyNF9i
bG9ja19uciBVQkVSX1RSRUVfQUREUiA9IDB1bGw7CisKKyNkZWZpbmUgQ1VUX1RSRUVfTUlOX0lU
RVJBVElPTlMgNjQKKworc3RhdGljIGludCBmaW5kX2NoaWxkX2J5X2FkZHIoem5vZGUgKiBwYXJl
bnQsIHpub2RlICogY2hpbGQsIGNvb3JkX3QgKnJlc3VsdCk7CisKKy8qIHJldHVybiBub2RlIHBs
dWdpbiBvZiBjb29yZC0+bm9kZSAqLworbm9kZV9wbHVnaW4gKm5vZGVfcGx1Z2luX2J5X2Nvb3Jk
KGNvbnN0IGNvb3JkX3QgKmNvb3JkKQoreworCWFzc2VydCgidnMtMSIsIGNvb3JkICE9IE5VTEwp
OworCWFzc2VydCgidnMtMiIsIGNvb3JkLT5ub2RlICE9IE5VTEwpOworCisJcmV0dXJuIGNvb3Jk
LT5ub2RlLT5ucGx1ZzsKK30KKworLyogaW5zZXJ0IGl0ZW0gaW50byB0cmVlLiBGaWVsZHMgb2Yg
QGNvb3JkIGFyZSB1cGRhdGVkIHNvIHRoYXQgdGhleSBjYW4gYmUKKyAqIHVzZWQgYnkgY29uc2Vx
dWVudCBpbnNlcnQgb3BlcmF0aW9uLiAqLworaW5zZXJ0X3Jlc3VsdCBpbnNlcnRfYnlfa2V5KHJl
aXNlcjRfdHJlZSAqIHRyZWUJLyogdHJlZSB0byBpbnNlcnQgbmV3IGl0ZW0KKwkJCQkJCSAqIGlu
dG8gKi8gLAorCQkJICAgIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSBvZiBuZXcgaXRl
bSAqLyAsCisJCQkgICAgcmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhCS8qIHBhcmFtZXRlcnMgZm9y
IGl0ZW0KKwkJCQkJCQkgKiBjcmVhdGlvbiAqLyAsCisJCQkgICAgY29vcmRfdCAqY29vcmQgLyog
cmVzdWx0aW5nIGluc2VydGlvbiBjb29yZCAqLyAsCisJCQkgICAgbG9ja19oYW5kbGUgKiBsaAkv
KiByZXN1bHRpbmcgbG9jaworCQkJCQkJICogaGFuZGxlICovICwKKwkJCSAgICB0cmVlX2xldmVs
IHN0b3BfbGV2ZWwgLyogbGV2ZWwgd2hlcmUgdG8gaW5zZXJ0ICovICwKKwkJCSAgICBfX3UzMiBm
bGFncy8qIGluc2VydGlvbiBmbGFncyAqLykKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJu
aWtpdGEtMzU4IiwgdHJlZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zNjAiLCBjb29yZCAh
PSBOVUxMKTsKKworCXJlc3VsdCA9IGNvb3JkX2J5X2tleSh0cmVlLCBrZXksIGNvb3JkLCBsaCwg
Wk5PREVfV1JJVEVfTE9DSywKKwkJCSAgICAgIEZJTkRfRVhBQ1QsIHN0b3BfbGV2ZWwsIHN0b3Bf
bGV2ZWwsCisJCQkgICAgICBmbGFncyB8IENCS19GT1JfSU5TRVJULCBOVUxMLypyYV9pbmZvICov
KTsKKwlzd2l0Y2ggKHJlc3VsdCkgeworCWRlZmF1bHQ6CisJCWJyZWFrOworCWNhc2UgQ0JLX0NP
T1JEX0ZPVU5EOgorCQlyZXN1bHQgPSBJQktfQUxSRUFEWV9FWElTVFM7CisJCWJyZWFrOworCWNh
c2UgQ0JLX0NPT1JEX05PVEZPVU5EOgorCQlhc3NlcnQoIm5pa2l0YS0yMDE3IiwgY29vcmQtPm5v
ZGUgIT0gTlVMTCk7CisJCXJlc3VsdCA9IGluc2VydF9ieV9jb29yZChjb29yZCwgZGF0YSwga2V5
LCBsaCwgMC8qZmxhZ3MgKi8pOworCQlicmVhazsKKwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKwor
LyogaW5zZXJ0IGl0ZW0gYnkgY2FsbGluZyBjYXJyeS4gSGVscGVyIGZ1bmN0aW9uIGNhbGxlZCBp
ZiBzaG9ydC1jdXQKKyAgIGluc2VydGlvbiBmYWlsZWQgICovCitzdGF0aWMgaW5zZXJ0X3Jlc3Vs
dCBpbnNlcnRfd2l0aF9jYXJyeV9ieV9jb29yZChjb29yZF90ICpjb29yZCwKKwkJCQkJLyogY29v
cmQgd2hlcmUgdG8gaW5zZXJ0ICovCisJCQkJCQlsb2NrX2hhbmRsZSAqIGxoLAorCQkJCQkvKiBs
b2NrIGhhbmRsZSBvZiBpbnNlcnRpb24gbm9kZSAqLworCQkJCQkJcmVpc2VyNF9pdGVtX2RhdGEg
KiBkYXRhLAorCQkJCQkvKiBwYXJhbWV0ZXJzIG9mIG5ldyBpdGVtICovCisJCQkJCQljb25zdCBy
ZWlzZXI0X2tleSAqIGtleSwKKwkJCQkJLyoga2V5IG9mIG5ldyBpdGVtICovCisJCQkJCQljYXJy
eV9vcGNvZGUgY29wLAorCQkJCQkvKiBjYXJyeSBvcGVyYXRpb24gdG8gcGVyZm9ybSAqLworCQkJ
CQkJY29wX2luc2VydF9mbGFnIGZsYWdzCisJCQkJCS8qIGNhcnJ5IGZsYWdzICovICkKK3sKKwlp
bnQgcmVzdWx0OworCWNhcnJ5X3Bvb2wgKnBvb2w7CisJY2FycnlfbGV2ZWwgKmxvd2VzdF9sZXZl
bDsKKwljYXJyeV9pbnNlcnRfZGF0YSAqY2RhdGE7CisJY2Fycnlfb3AgKm9wOworCisJYXNzZXJ0
KCJ1bWthLTMxNCIsIGNvb3JkICE9IE5VTEwpOworCisJLyogYWxsb2NhdGUgY2FycnlfcG9vbCBh
bmQgMyBjYXJyeV9sZXZlbC1zICovCisJcG9vbCA9CisJICAgIGluaXRfY2FycnlfcG9vbChzaXpl
b2YoKnBvb2wpICsgMyAqIHNpemVvZigqbG93ZXN0X2xldmVsKSArCisJCQkgICAgc2l6ZW9mKCpj
ZGF0YSkpOworCWlmIChJU19FUlIocG9vbCkpCisJCXJldHVybiBQVFJfRVJSKHBvb2wpOworCWxv
d2VzdF9sZXZlbCA9IChjYXJyeV9sZXZlbCAqKSAocG9vbCArIDEpOworCWluaXRfY2FycnlfbGV2
ZWwobG93ZXN0X2xldmVsLCBwb29sKTsKKworCW9wID0gcmVpc2VyNF9wb3N0X2NhcnJ5KGxvd2Vz
dF9sZXZlbCwgY29wLCBjb29yZC0+bm9kZSwgMCk7CisJaWYgKElTX0VSUihvcCkgfHwgKG9wID09
IE5VTEwpKSB7CisJCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKwkJcmV0dXJuIFJFVEVSUihvcCA/
IFBUUl9FUlIob3ApIDogLUVJTyk7CisJfQorCWNkYXRhID0gKGNhcnJ5X2luc2VydF9kYXRhICop
IChsb3dlc3RfbGV2ZWwgKyAzKTsKKwljZGF0YS0+Y29vcmQgPSBjb29yZDsKKwljZGF0YS0+ZGF0
YSA9IGRhdGE7CisJY2RhdGEtPmtleSA9IGtleTsKKwlvcC0+dS5pbnNlcnQuZCA9IGNkYXRhOwor
CWlmIChmbGFncyA9PSAwKQorCQlmbGFncyA9IHpub2RlX2dldF90cmVlKGNvb3JkLT5ub2RlKS0+
Y2FycnkuaW5zZXJ0X2ZsYWdzOworCW9wLT51Lmluc2VydC5mbGFncyA9IGZsYWdzOworCW9wLT51
Lmluc2VydC50eXBlID0gQ09QVF9JVEVNX0RBVEE7CisJb3AtPnUuaW5zZXJ0LmNoaWxkID0gTlVM
TDsKKwlpZiAobGggIT0gTlVMTCkgeworCQlhc3NlcnQoIm5pa2l0YS0zMjQ1IiwgbGgtPm5vZGUg
PT0gY29vcmQtPm5vZGUpOworCQlsb3dlc3RfbGV2ZWwtPnRyYWNrX3R5cGUgPSBDQVJSWV9UUkFD
S19DSEFOR0U7CisJCWxvd2VzdF9sZXZlbC0+dHJhY2tlZCA9IGxoOworCX0KKworCXJlc3VsdCA9
IHJlaXNlcjRfY2FycnkobG93ZXN0X2xldmVsLCBOVUxMKTsKKwlkb25lX2NhcnJ5X3Bvb2wocG9v
bCk7CisKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBmb3JtIGNhcnJ5IHF1ZXVlIHRvIHBlcmZv
cm0gcGFzdGUgb2YgQGRhdGEgd2l0aCBAa2V5IGF0IEBjb29yZCwgYW5kIGxhdW5jaAorICAgaXRz
IGV4ZWN1dGlvbiBieSBjYWxsaW5nIGNhcnJ5KCkuCisKKyAgIEluc3RydWN0IGNhcnJ5IHRvIHVw
ZGF0ZSBAbGggaXQgYWZ0ZXIgYmFsYW5jaW5nIGluc2VydGlvbiBjb29yZCBtb3ZlcyBpbnRvCisg
ICBkaWZmZXJlbnQgYmxvY2suCisKKyovCitzdGF0aWMgaW50IHBhc3RlX3dpdGhfY2FycnkoY29v
cmRfdCAqY29vcmQsCS8qIGNvb3JkIG9mIHBhc3RlICovCisJCQkgICAgbG9ja19oYW5kbGUgKiBs
aCwJLyogbG9jayBoYW5kbGUgb2Ygbm9kZQorCQkJCQkJICogd2hlcmUgaXRlbSBpcworCQkJCQkJ
ICogcGFzdGVkICovCisJCQkgICAgcmVpc2VyNF9pdGVtX2RhdGEgKiBkYXRhLAkvKiBwYXJhbWV0
ZXJzIG9mIG5ldworCQkJCQkJCSAqIGl0ZW0gKi8KKwkJCSAgICBjb25zdCByZWlzZXI0X2tleSAq
IGtleSwJLyoga2V5IG9mIG5ldyBpdGVtICovCisJCQkgICAgdW5zaWduZWQgZmxhZ3MvKiBwYXN0
ZSBmbGFncyAqLykKK3sKKwlpbnQgcmVzdWx0OworCWNhcnJ5X3Bvb2wgKnBvb2w7CisJY2Fycnlf
bGV2ZWwgKmxvd2VzdF9sZXZlbDsKKwljYXJyeV9pbnNlcnRfZGF0YSAqY2RhdGE7CisJY2Fycnlf
b3AgKm9wOworCisJYXNzZXJ0KCJ1bWthLTMxNSIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgi
dW1rYS0zMTYiLCBrZXkgIT0gTlVMTCk7CisKKwlwb29sID0KKwkgICAgaW5pdF9jYXJyeV9wb29s
KHNpemVvZigqcG9vbCkgKyAzICogc2l6ZW9mKCpsb3dlc3RfbGV2ZWwpICsKKwkJCSAgICBzaXpl
b2YoKmNkYXRhKSk7CisJaWYgKElTX0VSUihwb29sKSkKKwkJcmV0dXJuIFBUUl9FUlIocG9vbCk7
CisJbG93ZXN0X2xldmVsID0gKGNhcnJ5X2xldmVsICopIChwb29sICsgMSk7CisJaW5pdF9jYXJy
eV9sZXZlbChsb3dlc3RfbGV2ZWwsIHBvb2wpOworCisJb3AgPSByZWlzZXI0X3Bvc3RfY2Fycnko
bG93ZXN0X2xldmVsLCBDT1BfUEFTVEUsIGNvb3JkLT5ub2RlLCAwKTsKKwlpZiAoSVNfRVJSKG9w
KSB8fCAob3AgPT0gTlVMTCkpIHsKKwkJZG9uZV9jYXJyeV9wb29sKHBvb2wpOworCQlyZXR1cm4g
UkVURVJSKG9wID8gUFRSX0VSUihvcCkgOiAtRUlPKTsKKwl9CisJY2RhdGEgPSAoY2FycnlfaW5z
ZXJ0X2RhdGEgKikgKGxvd2VzdF9sZXZlbCArIDMpOworCWNkYXRhLT5jb29yZCA9IGNvb3JkOwor
CWNkYXRhLT5kYXRhID0gZGF0YTsKKwljZGF0YS0+a2V5ID0ga2V5OworCW9wLT51LnBhc3RlLmQg
PSBjZGF0YTsKKwlpZiAoZmxhZ3MgPT0gMCkKKwkJZmxhZ3MgPSB6bm9kZV9nZXRfdHJlZShjb29y
ZC0+bm9kZSktPmNhcnJ5LnBhc3RlX2ZsYWdzOworCW9wLT51LnBhc3RlLmZsYWdzID0gZmxhZ3M7
CisJb3AtPnUucGFzdGUudHlwZSA9IENPUFRfSVRFTV9EQVRBOworCWlmIChsaCAhPSBOVUxMKSB7
CisJCWxvd2VzdF9sZXZlbC0+dHJhY2tfdHlwZSA9IENBUlJZX1RSQUNLX0NIQU5HRTsKKwkJbG93
ZXN0X2xldmVsLT50cmFja2VkID0gbGg7CisJfQorCisJcmVzdWx0ID0gcmVpc2VyNF9jYXJyeShs
b3dlc3RfbGV2ZWwsIE5VTEwpOworCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKworCXJldHVybiBy
ZXN1bHQ7Cit9CisKKy8qIGluc2VydCBpdGVtIGF0IHRoZSBnaXZlbiBjb29yZC4KKworICAgRmly
c3QgdHJ5IHRvIHNraXAgY2FycnkgYnkgZGlyZWN0bHkgY2FsbGluZyAtPmNyZWF0ZV9pdGVtKCkg
bWV0aG9kIG9mIG5vZGUKKyAgIHBsdWdpbi4gSWYgdGhpcyBpcyBpbXBvc3NpYmxlICh0aGVyZSBp
cyBub3QgZW5vdWdoIGZyZWUgc3BhY2UgaW4gdGhlIG5vZGUsCisgICBvciBsZWZ0bW9zdCBpdGVt
IGluIHRoZSBub2RlIGlzIGNyZWF0ZWQpLCBjYWxsIGluc2VydF93aXRoX2NhcnJ5X2J5X2Nvb3Jk
KCkKKyAgIHRoYXQgd2lsbCBkbyBmdWxsIGNhcnJ5KCkuCisKKyovCitpbnNlcnRfcmVzdWx0IGlu
c2VydF9ieV9jb29yZChjb29yZF90ICpjb29yZAkvKiBjb29yZCB3aGVyZSB0bworCQkJCQkJICog
aW5zZXJ0LiBjb29yZC0+bm9kZSBoYXMKKwkJCQkJCSAqIHRvIGJlIHdyaXRlIGxvY2tlZCBieQor
CQkJCQkJICogY2FsbGVyICovICwKKwkJCSAgICAgIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YQkv
KiBkYXRhIHRvIGJlCisJCQkJCQkJICogaW5zZXJ0ZWQgKi8gLAorCQkJICAgICAgY29uc3QgcmVp
c2VyNF9rZXkgKiBrZXkgLyoga2V5IG9mIG5ldyBpdGVtICovICwKKwkJCSAgICAgIGxvY2tfaGFu
ZGxlICogbGgJLyogbG9jayBoYW5kbGUgb2Ygd3JpdGUKKwkJCQkJCSAqIGxvY2sgb24gbm9kZSAq
LyAsCisJCQkgICAgICBfX3UzMiBmbGFncy8qIGluc2VydGlvbiBmbGFncyAqLykKK3sKKwl1bnNp
Z25lZCBpdGVtX3NpemU7CisJaW50IHJlc3VsdDsKKwl6bm9kZSAqbm9kZTsKKworCWFzc2VydCgi
dnMtMjQ3IiwgY29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2cy0yNDgiLCBkYXRhICE9IE5VTEwp
OworCWFzc2VydCgidnMtMjQ5IiwgZGF0YS0+bGVuZ3RoID49IDApOworCWFzc2VydCgibmlraXRh
LTExOTEiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQoY29vcmQtPm5vZGUpKTsKKworCW5vZGUgPSBj
b29yZC0+bm9kZTsKKwljb29yZF9jbGVhcl9pcGx1Zyhjb29yZCk7CisJcmVzdWx0ID0gemxvYWQo
bm9kZSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0OworCisJaXRlbV9zaXpl
ID0gc3BhY2VfbmVlZGVkKG5vZGUsIE5VTEwsIGRhdGEsIDEpOworCWlmIChpdGVtX3NpemUgPiB6
bm9kZV9mcmVlX3NwYWNlKG5vZGUpICYmCisJICAgIChmbGFncyAmIENPUElfRE9OVF9TSElGVF9M
RUZUKSAmJiAoZmxhZ3MgJiBDT1BJX0RPTlRfU0hJRlRfUklHSFQpCisJICAgICYmIChmbGFncyAm
IENPUElfRE9OVF9BTExPQ0FURSkpIHsKKwkJLyogd2UgYXJlIGZvcmNlZCB0byB1c2UgZnJlZSBz
cGFjZSBvZiBjb29yZC0+bm9kZSBhbmQgbmV3IGl0ZW0KKwkJICAgZG9lcyBub3QgZml0IGludG8g
aXQuCisKKwkJICAgQ3VycmVudGx5IHdlIGdldCBoZXJlIG9ubHkgd2hlbiB3ZSBhbGxvY2F0ZSBh
bmQgY29weSB1bml0cworCQkgICBvZiBleHRlbnQgaXRlbSBmcm9tIGEgbm9kZSB0byBpdHMgbGVm
dCBuZWlnaGJvciBkdXJpbmcKKwkJICAgInNxdWFsbG9jIi1pbmcuICBJZiBAbm9kZSAodGhpcyBp
cyBsZWZ0IG5laWdoYm9yKSBkb2VzIG5vdAorCQkgICBoYXZlIGVub3VnaCBmcmVlIHNwYWNlIC0g
d2UgZG8gbm90IHdhbnQgdG8gYXR0ZW1wdCBhbnkKKwkJICAgc2hpZnRpbmcgYW5kIGFsbG9jYXRp
b25zIGJlY2F1c2Ugd2UgYXJlIGluIHNxdWVlemluZyBhbmQKKwkJICAgZXZlcnl0aGluZyB0byB0
aGUgbGVmdCBvZiBAbm9kZSBpcyB0aWdodGx5IHBhY2tlZC4KKwkJICovCisJCXJlc3VsdCA9IC1F
X05PREVfRlVMTDsKKwl9IGVsc2UgaWYgKChpdGVtX3NpemUgPD0gem5vZGVfZnJlZV9zcGFjZShu
b2RlKSkgJiYKKwkJICAgIWNvb3JkX2lzX2JlZm9yZV9sZWZ0bW9zdChjb29yZCkgJiYKKwkJICAg
KG5vZGVfcGx1Z2luX2J5X25vZGUobm9kZSktPmZhc3RfaW5zZXJ0ICE9IE5VTEwpCisJCSAgICYm
IG5vZGVfcGx1Z2luX2J5X25vZGUobm9kZSktPmZhc3RfaW5zZXJ0KGNvb3JkKSkgeworCQkvKiBz
aG9ydGN1dCBpbnNlcnRpb24gd2l0aG91dCBjYXJyeSgpIG92ZXJoZWFkLgorCisJCSAgIE9ubHkg
cG9zc2libGUgaWY6CisKKwkJICAgLSB0aGVyZSBpcyBlbm91Z2ggZnJlZSBzcGFjZQorCisJCSAg
IC0gaW5zZXJ0aW9uIGlzIG5vdCBpbnRvIHRoZSBsZWZ0bW9zdCBwb3NpdGlvbiBpbiBhIG5vZGUK
KwkJICAgKG90aGVyd2lzZSBpdCB3b3VsZCByZXF1aXJlIHVwZGF0aW5nIG9mIGRlbGltaXRpbmcg
a2V5IGluIGEKKwkJICAgcGFyZW50KQorCisJCSAgIC0gbm9kZSBwbHVnaW4gYWdyZWVzIHdpdGgg
dGhpcworCisJCSAqLworCQlyZXN1bHQgPQorCQkgICAgbm9kZV9wbHVnaW5fYnlfbm9kZShub2Rl
KS0+Y3JlYXRlX2l0ZW0oY29vcmQsIGtleSwgZGF0YSwKKwkJCQkJCQkgICBOVUxMKTsKKwkJem5v
ZGVfbWFrZV9kaXJ0eShub2RlKTsKKwl9IGVsc2UgeworCQkvKiBvdGhlcndpc2UgZG8gZnVsbC1m
bGVkZ2VkIGNhcnJ5KCkuICovCisJCXJlc3VsdCA9CisJCSAgICBpbnNlcnRfd2l0aF9jYXJyeV9i
eV9jb29yZChjb29yZCwgbGgsIGRhdGEsIGtleSwgQ09QX0lOU0VSVCwKKwkJCQkJICAgICAgIGZs
YWdzKTsKKwl9CisJenJlbHNlKG5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIEBjb29y
ZCBpcyBzZXQgdG8gbGVhZiBsZXZlbCBhbmQgQGRhdGEgaXMgdG8gYmUgaW5zZXJ0ZWQgdG8gdHdp
ZyBsZXZlbCAqLworaW5zZXJ0X3Jlc3VsdAoraW5zZXJ0X2V4dGVudF9ieV9jb29yZChjb29yZF90
ICpjb29yZCwgICAgICAgICAvKiBjb29yZCB3aGVyZSB0byBpbnNlcnQuCisJCQkJICAgICAgICAg
ICAgICAgICogY29vcmQtPm5vZGUgaGFzIHRvIGJlIHdyaXRlCisJCQkJCSAgICAgICAgKiBsb2Nr
ZWQgYnkgY2FsbGVyICovCisJCSAgICAgICByZWlzZXI0X2l0ZW1fZGF0YSAqZGF0YSwvKiBkYXRh
IHRvIGJlIGluc2VydGVkICovCisJCSAgICAgICBjb25zdCByZWlzZXI0X2tleSAqa2V5LCAvKiBr
ZXkgb2YgbmV3IGl0ZW0gKi8KKwkJICAgICAgIGxvY2tfaGFuZGxlICpsaCAgICAgICAgIC8qIGxv
Y2sgaGFuZGxlIG9mIHdyaXRlIGxvY2sKKwkJCQkJCSAgb24gbm9kZSAqLykKK3sKKwlhc3NlcnQo
InZzLTQwNSIsIGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgidnMtNDA2IiwgZGF0YSAhPSBOVUxM
KTsKKwlhc3NlcnQoInZzLTQwNyIsIGRhdGEtPmxlbmd0aCA+IDApOworCWFzc2VydCgidnMtNDA4
Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKGNvb3JkLT5ub2RlKSk7CisJYXNzZXJ0KCJ2cy00MDki
LCB6bm9kZV9nZXRfbGV2ZWwoY29vcmQtPm5vZGUpID09IExFQUZfTEVWRUwpOworCisJcmV0dXJu
IGluc2VydF93aXRoX2NhcnJ5X2J5X2Nvb3JkKGNvb3JkLCBsaCwgZGF0YSwga2V5LCBDT1BfRVhU
RU5ULAorCQkJCQkgIDAgLypmbGFncyAqLyApOworfQorCisvKiBJbnNlcnQgaW50byB0aGUgaXRl
bSBhdCB0aGUgZ2l2ZW4gY29vcmQuCisKKyAgIEZpcnN0IHRyeSB0byBza2lwIGNhcnJ5IGJ5IGRp
cmVjdGx5IGNhbGxpbmcgLT5wYXN0ZSgpIG1ldGhvZCBvZiBpdGVtCisgICBwbHVnaW4uIElmIHRo
aXMgaXMgaW1wb3NzaWJsZSAodGhlcmUgaXMgbm90IGVub3VnaCBmcmVlIHNwYWNlIGluIHRoZSBu
b2RlLAorICAgb3Igd2UgYXJlIHBhc3RpbmcgaW50byBsZWZ0bW9zdCBwb3NpdGlvbiBpbiB0aGUg
bm9kZSksIGNhbGwKKyAgIHBhc3RlX3dpdGhfY2FycnkoKSB0aGF0IHdpbGwgZG8gZnVsbCBjYXJy
eSgpLgorCisqLworLyogcGFzdGVfaW50b19pdGVtICovCitpbnQgaW5zZXJ0X2ludG9faXRlbShj
b29yZF90ICogY29vcmQgLyogY29vcmQgb2YgcGFzdGluZyAqLyAsCisJCSAgICAgbG9ja19oYW5k
bGUgKiBsaCAvKiBsb2NrIGhhbmRsZSBvbiBub2RlIGludm9sdmVkICovICwKKwkJICAgICBjb25z
dCByZWlzZXI0X2tleSAqIGtleSAvKiBrZXkgb2YgdW5pdCBiZWluZyBwYXN0ZWQgKi8gLAorCQkg
ICAgIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSAvKiBwYXJhbWV0ZXJzIGZvciBuZXcgdW5pdCAq
LyAsCisJCSAgICAgdW5zaWduZWQgZmxhZ3MgLyogaW5zZXJ0L3Bhc3RlIGZsYWdzICovICkKK3sK
KwlpbnQgcmVzdWx0OworCWludCBzaXplX2NoYW5nZTsKKwlub2RlX3BsdWdpbiAqbnBsdWc7CisJ
aXRlbV9wbHVnaW4gKmlwbHVnOworCisJYXNzZXJ0KCJ1bWthLTMxNyIsIGNvb3JkICE9IE5VTEwp
OworCWFzc2VydCgidW1rYS0zMTgiLCBrZXkgIT0gTlVMTCk7CisKKwlpcGx1ZyA9IGl0ZW1fcGx1
Z2luX2J5X2Nvb3JkKGNvb3JkKTsKKwlucGx1ZyA9IG5vZGVfcGx1Z2luX2J5X2Nvb3JkKGNvb3Jk
KTsKKworCWFzc2VydCgibmlraXRhLTE0ODAiLCBpcGx1ZyA9PSBkYXRhLT5pcGx1Zyk7CisKKwlz
aXplX2NoYW5nZSA9IHNwYWNlX25lZWRlZChjb29yZC0+bm9kZSwgY29vcmQsIGRhdGEsIDApOwor
CWlmIChzaXplX2NoYW5nZSA+IChpbnQpem5vZGVfZnJlZV9zcGFjZShjb29yZC0+bm9kZSkgJiYK
KwkgICAgKGZsYWdzICYgQ09QSV9ET05UX1NISUZUX0xFRlQpICYmIChmbGFncyAmIENPUElfRE9O
VF9TSElGVF9SSUdIVCkKKwkgICAgJiYgKGZsYWdzICYgQ09QSV9ET05UX0FMTE9DQVRFKSkgewor
CQkvKiB3ZSBhcmUgZm9yY2VkIHRvIHVzZSBmcmVlIHNwYWNlIG9mIGNvb3JkLT5ub2RlIGFuZCBu
ZXcgZGF0YQorCQkgICBkb2VzIG5vdCBmaXQgaW50byBpdC4gKi8KKwkJcmV0dXJuIC1FX05PREVf
RlVMTDsKKwl9CisKKwkvKiBzaG9ydGN1dCBwYXN0ZSB3aXRob3V0IGNhcnJ5KCkgb3ZlcmhlYWQu
CisKKwkgICBPbmx5IHBvc3NpYmxlIGlmOgorCisJICAgLSB0aGVyZSBpcyBlbm91Z2ggZnJlZSBz
cGFjZQorCisJICAgLSBwYXN0ZSBpcyBub3QgaW50byB0aGUgbGVmdG1vc3QgdW5pdCBpbiBhIG5v
ZGUgKG90aGVyd2lzZQorCSAgIGl0IHdvdWxkIHJlcXVpcmUgdXBkYXRpbmcgb2YgZGVsaW1pdGlu
ZyBrZXkgaW4gYSBwYXJlbnQpCisKKwkgICAtIG5vZGUgcGx1Z2luIGFncmVlcyB3aXRoIHRoaXMK
KworCSAgIC0gaXRlbSBwbHVnaW4gYWdyZWVzIHdpdGggdXMKKwkgKi8KKwlpZiAoc2l6ZV9jaGFu
Z2UgPD0gKGludCl6bm9kZV9mcmVlX3NwYWNlKGNvb3JkLT5ub2RlKSAmJgorCSAgICAoY29vcmQt
Pml0ZW1fcG9zICE9IDAgfHwKKwkgICAgIGNvb3JkLT51bml0X3BvcyAhPSAwIHx8IGNvb3JkLT5i
ZXR3ZWVuID09IEFGVEVSX1VOSVQpICYmCisJICAgIGNvb3JkLT51bml0X3BvcyAhPSAwICYmIG5w
bHVnLT5mYXN0X3Bhc3RlICE9IE5VTEwgJiYKKwkgICAgbnBsdWctPmZhc3RfcGFzdGUoY29vcmQp
ICYmCisJICAgIGlwbHVnLT5iLmZhc3RfcGFzdGUgIT0gTlVMTCAmJiBpcGx1Zy0+Yi5mYXN0X3Bh
c3RlKGNvb3JkKSkgeworCQlpZiAoc2l6ZV9jaGFuZ2UgPiAwKQorCQkJbnBsdWctPmNoYW5nZV9p
dGVtX3NpemUoY29vcmQsIHNpemVfY2hhbmdlKTsKKwkJLyogTk9URS1OSUtJVEE6IGh1aD8gd2hl
cmUgQGtleSBpcyB1c2VkPyAqLworCQlyZXN1bHQgPSBpcGx1Zy0+Yi5wYXN0ZShjb29yZCwgZGF0
YSwgTlVMTCk7CisJCWlmIChzaXplX2NoYW5nZSA8IDApCisJCQlucGx1Zy0+Y2hhbmdlX2l0ZW1f
c2l6ZShjb29yZCwgc2l6ZV9jaGFuZ2UpOworCQl6bm9kZV9tYWtlX2RpcnR5KGNvb3JkLT5ub2Rl
KTsKKwl9IGVsc2UKKwkJLyogb3RoZXJ3aXNlIGRvIGZ1bGwtZmxlZGdlZCBjYXJyeSgpLiAqLwor
CQlyZXN1bHQgPSBwYXN0ZV93aXRoX2NhcnJ5KGNvb3JkLCBsaCwgZGF0YSwga2V5LCBmbGFncyk7
CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogdGhpcyBlaXRoZXIgYXBwZW5kcyBvciB0cnVuY2F0
ZXMgaXRlbSBAY29vcmQgKi8KK2ludCByZWlzZXI0X3Jlc2l6ZV9pdGVtKGNvb3JkX3QgKiBjb29y
ZCAvKiBjb29yZCBvZiBpdGVtIGJlaW5nIHJlc2l6ZWQgKi8gLAorCQkJcmVpc2VyNF9pdGVtX2Rh
dGEgKiBkYXRhIC8qIHBhcmFtZXRlcnMgb2YgcmVzaXplICovICwKKwkJCXJlaXNlcjRfa2V5ICog
a2V5IC8qIGtleSBvZiBuZXcgdW5pdCAqLyAsCisJCQlsb2NrX2hhbmRsZSAqIGxoCS8qIGxvY2sg
aGFuZGxlIG9mIG5vZGUKKwkJCQkJCSAqIGJlaW5nIG1vZGlmaWVkICovICwKKwkJCWNvcF9pbnNl
cnRfZmxhZyBmbGFncyAvKiBjYXJyeSBmbGFncyAqLyApCit7CisJaW50IHJlc3VsdDsKKwl6bm9k
ZSAqbm9kZTsKKworCWFzc2VydCgibmlraXRhLTM2MiIsIGNvb3JkICE9IE5VTEwpOworCWFzc2Vy
dCgibmlraXRhLTM2MyIsIGRhdGEgIT0gTlVMTCk7CisJYXNzZXJ0KCJ2cy0yNDUiLCBkYXRhLT5s
ZW5ndGggIT0gMCk7CisKKwlub2RlID0gY29vcmQtPm5vZGU7CisJY29vcmRfY2xlYXJfaXBsdWco
Y29vcmQpOworCXJlc3VsdCA9IHpsb2FkKG5vZGUpOworCWlmIChyZXN1bHQgIT0gMCkKKwkJcmV0
dXJuIHJlc3VsdDsKKworCWlmIChkYXRhLT5sZW5ndGggPCAwKQorCQlyZXN1bHQgPSBub2RlX3Bs
dWdpbl9ieV9jb29yZChjb29yZCktPnNocmlua19pdGVtKGNvb3JkLAorCQkJCQkJCQkgIC1kYXRh
LT5sZW5ndGgpOworCWVsc2UKKwkJcmVzdWx0ID0gaW5zZXJ0X2ludG9faXRlbShjb29yZCwgbGgs
IGtleSwgZGF0YSwgZmxhZ3MpOworCisJenJlbHNlKG5vZGUpOworCXJldHVybiByZXN1bHQ7Cit9
CisKKy8qIGluc2VydCBmbG93IEBmICovCitpbnQgcmVpc2VyNF9pbnNlcnRfZmxvdyhjb29yZF90
ICogY29vcmQsIGxvY2tfaGFuZGxlICogbGgsIGZsb3dfdCAqIGYpCit7CisJaW50IHJlc3VsdDsK
KwljYXJyeV9wb29sICpwb29sOworCWNhcnJ5X2xldmVsICpsb3dlc3RfbGV2ZWw7CisJcmVpc2Vy
NF9pdGVtX2RhdGEgKmRhdGE7CisJY2Fycnlfb3AgKm9wOworCisJcG9vbCA9CisJICAgIGluaXRf
Y2FycnlfcG9vbChzaXplb2YoKnBvb2wpICsgMyAqIHNpemVvZigqbG93ZXN0X2xldmVsKSArCisJ
CQkgICAgc2l6ZW9mKCpkYXRhKSk7CisJaWYgKElTX0VSUihwb29sKSkKKwkJcmV0dXJuIFBUUl9F
UlIocG9vbCk7CisJbG93ZXN0X2xldmVsID0gKGNhcnJ5X2xldmVsICopIChwb29sICsgMSk7CisJ
aW5pdF9jYXJyeV9sZXZlbChsb3dlc3RfbGV2ZWwsIHBvb2wpOworCisJb3AgPSByZWlzZXI0X3Bv
c3RfY2FycnkobG93ZXN0X2xldmVsLCBDT1BfSU5TRVJUX0ZMT1csIGNvb3JkLT5ub2RlLAorCQkJ
MCAvKiBvcGVyYXRlIGRpcmVjdGx5IG9uIGNvb3JkIC0+IG5vZGUgKi8gKTsKKwlpZiAoSVNfRVJS
KG9wKSB8fCAob3AgPT0gTlVMTCkpIHsKKwkJZG9uZV9jYXJyeV9wb29sKHBvb2wpOworCQlyZXR1
cm4gUkVURVJSKG9wID8gUFRSX0VSUihvcCkgOiAtRUlPKTsKKwl9CisKKwkvKiB0aGVzZSBhcmUg
cGVybWFuZW50IGR1cmluZyBpbnNlcnRfZmxvdyAqLworCWRhdGEgPSAocmVpc2VyNF9pdGVtX2Rh
dGEgKikgKGxvd2VzdF9sZXZlbCArIDMpOworCWRhdGEtPnVzZXIgPSAxOworCWRhdGEtPmlwbHVn
ID0gaXRlbV9wbHVnaW5fYnlfaWQoRk9STUFUVElOR19JRCk7CisJZGF0YS0+YXJnID0gTlVMTDsK
KwkvKiBkYXRhLmxlbmd0aCBhbmQgZGF0YS5kYXRhIHdpbGwgYmUgc2V0IGJlZm9yZSBjYWxsaW5n
IHBhc3RlIG9yCisJICAgaW5zZXJ0ICovCisJZGF0YS0+bGVuZ3RoID0gMDsKKwlkYXRhLT5kYXRh
ID0gTlVMTDsKKworCW9wLT51Lmluc2VydF9mbG93LmZsYWdzID0gMDsKKwlvcC0+dS5pbnNlcnRf
Zmxvdy5pbnNlcnRfcG9pbnQgPSBjb29yZDsKKwlvcC0+dS5pbnNlcnRfZmxvdy5mbG93ID0gZjsK
KwlvcC0+dS5pbnNlcnRfZmxvdy5kYXRhID0gZGF0YTsKKwlvcC0+dS5pbnNlcnRfZmxvdy5uZXdf
bm9kZXMgPSAwOworCisJbG93ZXN0X2xldmVsLT50cmFja190eXBlID0gQ0FSUllfVFJBQ0tfQ0hB
TkdFOworCWxvd2VzdF9sZXZlbC0+dHJhY2tlZCA9IGxoOworCisJcmVzdWx0ID0gcmVpc2VyNF9j
YXJyeShsb3dlc3RfbGV2ZWwsIE5VTEwpOworCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKworCXJl
dHVybiByZXN1bHQ7Cit9CisKKy8qIEdpdmVuIGEgY29vcmQgaW4gcGFyZW50IG5vZGUsIG9idGFp
biBhIHpub2RlIGZvciB0aGUgY29ycmVzcG9uZGluZyBjaGlsZCAqLworem5vZGUgKmNoaWxkX3pu
b2RlKGNvbnN0IGNvb3JkX3QgKiBwYXJlbnRfY29vcmQJLyogY29vcmQgb2YgcG9pbnRlciB0bwor
CQkJCQkJICogY2hpbGQgKi8gLAorCQkgICB6bm9kZSAqIHBhcmVudCAvKiBwYXJlbnQgb2YgY2hp
bGQgKi8gLAorCQkgICBpbnQgaW5jb3JlX3AJLyogaWYgITAgb25seSByZXR1cm4gY2hpbGQgaWYg
YWxyZWFkeSBpbgorCQkJCSAqIG1lbW9yeSAqLyAsCisJCSAgIGludCBzZXR1cF9ka2V5c19wCS8q
IGlmICEwIHVwZGF0ZSBkZWxpbWl0aW5nIGtleXMgb2YKKwkJCQkJICogY2hpbGQgKi8gKQorewor
CXpub2RlICpjaGlsZDsKKworCWFzc2VydCgibmlraXRhLTEzNzQiLCBwYXJlbnRfY29vcmQgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTQ4MiIsIHBhcmVudCAhPSBOVUxMKTsKKyNpZiBSRUlT
RVI0X0RFQlVHCisJaWYgKHNldHVwX2RrZXlzX3ApCisJCWFzc2VydF9yd19ub3RfbG9ja2VkKCYo
em5vZGVfZ2V0X3RyZWUocGFyZW50KS0+ZGtfbG9jaykpOworI2VuZGlmCisJYXNzZXJ0KCJuaWtp
dGEtMjk0NyIsIHpub2RlX2lzX2FueV9sb2NrZWQocGFyZW50KSk7CisKKwlpZiAoem5vZGVfZ2V0
X2xldmVsKHBhcmVudCkgPD0gTEVBRl9MRVZFTCkgeworCQkvKiB0cnlpbmcgdG8gZ2V0IGNoaWxk
IG9mIGxlYWYgbm9kZSAqLworCQl3YXJuaW5nKCJuaWtpdGEtMTIxNyIsICJDaGlsZCBvZiBtYWl6
ZT8iKTsKKwkJcmV0dXJuIEVSUl9QVFIoUkVURVJSKC1FSU8pKTsKKwl9CisJaWYgKGl0ZW1faXNf
aW50ZXJuYWwocGFyZW50X2Nvb3JkKSkgeworCQlyZWlzZXI0X2Jsb2NrX25yIGFkZHI7CisJCWl0
ZW1fcGx1Z2luICppcGx1ZzsKKwkJcmVpc2VyNF90cmVlICp0cmVlOworCisJCWlwbHVnID0gaXRl
bV9wbHVnaW5fYnlfY29vcmQocGFyZW50X2Nvb3JkKTsKKwkJYXNzZXJ0KCJ2cy01MTIiLCBpcGx1
Zy0+cy5pbnRlcm5hbC5kb3duX2xpbmspOworCQlpcGx1Zy0+cy5pbnRlcm5hbC5kb3duX2xpbmso
cGFyZW50X2Nvb3JkLCBOVUxMLCAmYWRkcik7CisKKwkJdHJlZSA9IHpub2RlX2dldF90cmVlKHBh
cmVudCk7CisJCWlmIChpbmNvcmVfcCkKKwkJCWNoaWxkID0gemxvb2sodHJlZSwgJmFkZHIpOwor
CQllbHNlCisJCQljaGlsZCA9CisJCQkgICAgemdldCh0cmVlLCAmYWRkciwgcGFyZW50LAorCQkJ
CSB6bm9kZV9nZXRfbGV2ZWwocGFyZW50KSAtIDEsCisJCQkJIHJlaXNlcjRfY3R4X2dmcF9tYXNr
X2dldCgpKTsKKwkJaWYgKChjaGlsZCAhPSBOVUxMKSAmJiAhSVNfRVJSKGNoaWxkKSAmJiBzZXR1
cF9ka2V5c19wKQorCQkJc2V0X2NoaWxkX2RlbGltaXRpbmdfa2V5cyhwYXJlbnQsIHBhcmVudF9j
b29yZCwgY2hpbGQpOworCX0gZWxzZSB7CisJCXdhcm5pbmcoIm5pa2l0YS0xNDgzIiwgIkludGVy
bmFsIGl0ZW0gZXhwZWN0ZWQiKTsKKwkJY2hpbGQgPSBFUlJfUFRSKFJFVEVSUigtRUlPKSk7CisJ
fQorCXJldHVybiBjaGlsZDsKK30KKworLyogcmVtb3ZlIHpub2RlIGZyb20gdHJhbnNhY3Rpb24g
Ki8KK3N0YXRpYyB2b2lkIHVuY2FwdHVyZV96bm9kZSh6bm9kZSAqIG5vZGUpCit7CisJc3RydWN0
IHBhZ2UgKnBhZ2U7CisKKwlhc3NlcnQoInphbS0xMDAxIiwgWkZfSVNTRVQobm9kZSwgSk5PREVf
SEVBUkRfQkFOU0hFRSkpOworCisJaWYgKCFyZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZSh6bm9kZV9n
ZXRfYmxvY2sobm9kZSkpKSB7CisJCWludCByZXQ7CisKKwkJLyogQW4gYWxyZWFkeSBhbGxvY2F0
ZWQgYmxvY2sgZ29lcyByaWdodCB0byB0aGUgYXRvbSdzIGRlbGV0ZSBzZXQuICovCisJCXJldCA9
CisJCSAgICByZWlzZXI0X2RlYWxsb2NfYmxvY2soem5vZGVfZ2V0X2Jsb2NrKG5vZGUpLCAwLAor
CQkJCQkgIEJBX0RFRkVSIHwgQkFfRk9STUFUVEVEKTsKKwkJaWYgKHJldCkKKwkJCXdhcm5pbmco
InphbS05NDIiLAorCQkJCSJjYW5cJ3QgYWRkIGEgYmxvY2sgKCVsbHUpIG51bWJlciB0byBhdG9t
J3MgZGVsZXRlIHNldFxuIiwKKwkJCQkodW5zaWduZWQgbG9uZyBsb25nKSgqem5vZGVfZ2V0X2Js
b2NrKG5vZGUpKSk7CisKKwkJc3Bpbl9sb2NrX3pub2RlKG5vZGUpOworCQkvKiBIZXJlIHdlIHJl
dHVybiBmbHVzaCByZXNlcnZlZCBibG9jayB3aGljaCB3YXMgcmVzZXJ2ZWQgYXQgdGhlCisJCSAq
IG1vbWVudCB3aGVuIHRoaXMgYWxsb2NhdGVkIG5vZGUgd2FzIG1hcmtlZCBkaXJ0eSBhbmQgc3Rp
bGwKKwkJICogbm90IHVzZWQgYnkgZmx1c2ggaW4gbm9kZSByZWxvY2F0aW9uIHByb2NlZHVyZS4g
ICovCisJCWlmIChaRl9JU1NFVChub2RlLCBKTk9ERV9GTFVTSF9SRVNFUlZFRCkpIHsKKwkJCXR4
bl9hdG9tICphdG9tOworCisJCQlhdG9tID0gam5vZGVfZ2V0X2F0b20oWkpOT0RFKG5vZGUpKTsK
KwkJCWFzc2VydCgiemFtLTkzOSIsIGF0b20gIT0gTlVMTCk7CisJCQlzcGluX3VubG9ja196bm9k
ZShub2RlKTsKKwkJCWZsdXNoX3Jlc2VydmVkMmdyYWJiZWQoYXRvbSwgKF9fdTY0KSAxKTsKKwkJ
CXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJCX0gZWxzZQorCQkJc3Bpbl91bmxvY2tfem5vZGUo
bm9kZSk7CisJfSBlbHNlIHsKKwkJLyogem5vZGUgaGFzIGFzc2lnbmVkIGJsb2NrIHdoaWNoIGlz
IGNvdW50ZWQgYXMgImZha2UKKwkJICAgYWxsb2NhdGVkIi4gUmV0dXJuIGl0IGJhY2sgdG8gImZy
ZWUgYmxvY2tzIikgKi8KKwkJZmFrZV9hbGxvY2F0ZWQyZnJlZSgoX191NjQpIDEsIEJBX0ZPUk1B
VFRFRCk7CisJfQorCisJLyoKKwkgKiB1bmNhcHR1cmUgcGFnZSBmcm9tIHRyYW5zYWN0aW9uLiBU
aGVyZSBpcyBhIHBvc3NpYmlsaXR5IG9mIGEgcmFjZQorCSAqIHdpdGggLT5yZWxlYXNlcGFnZSgp
OiByZWlzZXI0X3JlbGVhc2VwYWdlKCkgZGV0YWNoZXMgcGFnZSBmcm9tIHRoaXMKKwkgKiBqbm9k
ZSBhbmQgd2UgaGF2ZSBub3RoaW5nIHRvIHVuY2FwdHVyZS4gVG8gYXZvaWQgdGhpcywgZ2V0CisJ
ICogcmVmZXJlbmNlIG9mIG5vZGUtPnBnIHVuZGVyIGpub2RlIHNwaW4gbG9jay4gcmVpc2VyNF91
bmNhcHR1cmVfcGFnZSgpCisJICogd2lsbCBkZWFsIHdpdGggcmVsZWFzZWQgcGFnZSBpdHNlbGYu
CisJICovCisJc3Bpbl9sb2NrX3pub2RlKG5vZGUpOworCXBhZ2UgPSB6bm9kZV9wYWdlKG5vZGUp
OworCWlmIChsaWtlbHkocGFnZSAhPSBOVUxMKSkgeworCQkvKgorCQkgKiByZWlzZXI0X3VuY2Fw
dHVyZV9wYWdlKCkgY2FuIG9ubHkgYmUgY2FsbGVkIHdoZW4gd2UgYXJlIHN1cmUKKwkJICogdGhh
dCB6bm9kZSBpcyBwaW5uZWQgaW4gbWVtb3J5LCB3aGljaCB3ZSBhcmUsIGJlY2F1c2UKKwkJICog
Zm9yZ2V0X3pub2RlKCkgaXMgb25seSBjYWxsZWQgZnJvbSBsb25ndGVybV91bmxvY2tfem5vZGUo
KS4KKwkJICovCisJCWdldF9wYWdlKHBhZ2UpOworCQlzcGluX3VubG9ja196bm9kZShub2RlKTsK
KwkJbG9ja19wYWdlKHBhZ2UpOworCQlyZWlzZXI0X3VuY2FwdHVyZV9wYWdlKHBhZ2UpOworCQl1
bmxvY2tfcGFnZShwYWdlKTsKKwkJcHV0X3BhZ2UocGFnZSk7CisJfSBlbHNlIHsKKwkJdHhuX2F0
b20gKmF0b207CisKKwkJLyogaGFuZGxlICJmbHVzaCBxdWV1ZWQiIHpub2RlcyAqLworCQl3aGls
ZSAoMSkgeworCQkJYXRvbSA9IGpub2RlX2dldF9hdG9tKFpKTk9ERShub2RlKSk7CisJCQlhc3Nl
cnQoInphbS05NDMiLCBhdG9tICE9IE5VTEwpOworCisJCQlpZiAoIVpGX0lTU0VUKG5vZGUsIEpO
T0RFX0ZMVVNIX1FVRVVFRCkKKwkJCSAgICB8fCAhYXRvbS0+bnJfcnVubmluZ19xdWV1ZXMpCisJ
CQkJYnJlYWs7CisKKwkJCXNwaW5fdW5sb2NrX3pub2RlKG5vZGUpOworCQkJcmVpc2VyNF9hdG9t
X3dhaXRfZXZlbnQoYXRvbSk7CisJCQlzcGluX2xvY2tfem5vZGUobm9kZSk7CisJCX0KKworCQly
ZWlzZXI0X3VuY2FwdHVyZV9ibG9jayhaSk5PREUobm9kZSkpOworCQlzcGluX3VubG9ja19hdG9t
KGF0b20pOworCQl6cHV0KG5vZGUpOworCX0KK30KKworLyogVGhpcyBpcyBjYWxsZWQgZnJvbSBs
b25ndGVybV91bmxvY2tfem5vZGUoKSB3aGVuIGxhc3QgbG9jayBpcyByZWxlYXNlZCBmcm9tCisg
ICB0aGUgbm9kZSB0aGF0IGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgdHJlZS4gQXQgdGhpcyBw
b2ludCBub2RlIGlzIHJlbW92ZWQKKyAgIGZyb20gc2libGluZyBsaXN0IGFuZCBpdHMgbG9jayBp
cyBpbnZhbGlkYXRlZC4gKi8KK3ZvaWQgZm9yZ2V0X3pub2RlKGxvY2tfaGFuZGxlICogaGFuZGxl
KQoreworCXpub2RlICpub2RlOworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgidW1r
YS0zMTkiLCBoYW5kbGUgIT0gTlVMTCk7CisKKwlub2RlID0gaGFuZGxlLT5ub2RlOworCXRyZWUg
PSB6bm9kZV9nZXRfdHJlZShub2RlKTsKKworCWFzc2VydCgidnMtMTY0Iiwgem5vZGVfaXNfd3Jp
dGVfbG9ja2VkKG5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjgwIiwgWkZfSVNTRVQobm9kZSwg
Sk5PREVfSEVBUkRfQkFOU0hFRSkpOworCWFzc2VydF9yd19sb2NrZWQoJihub2RlLT5sb2NrLmd1
YXJkKSk7CisKKwkvKiBXZSBhc3N1bWUgdGhhdCB0aGlzIG5vZGUgd2FzIGRldGFjaGVkIGZyb20g
aXRzIHBhcmVudCBiZWZvcmUKKwkgKiB1bmxvY2tpbmcsIGl0IGdpdmVzIG5vIHdheSB0byByZWFj
aCB0aGlzIG5vZGUgZnJvbSBwYXJlbnQgdGhyb3VnaCBhCisJICogZG93biBsaW5rLiAgVGhlIG5v
ZGUgc2hvdWxkIGhhdmUgbm8gY2hpbGRyZW4gYW5kLCB0aGVyZWJ5LCBjYW4ndCBiZQorCSAqIHJl
YWNoZWQgZnJvbSB0aGVtIGJ5IHRoZWlyIHBhcmVudCBwb2ludGVycy4gIFRoZSBvbmx5IHdheSB0
byBvYnRhaW4gYQorCSAqIHJlZmVyZW5jZSB0byB0aGUgbm9kZSBpcyB0byB1c2Ugc2libGluZyBw
b2ludGVycyBmcm9tIGl0cyBsZWZ0IGFuZAorCSAqIHJpZ2h0IG5laWdoYm9ycy4gIEluIHRoZSBu
ZXh0IHNldmVyYWwgbGluZXMgd2UgcmVtb3ZlIHRoZSBub2RlIGZyb20KKwkgKiB0aGUgc2libGlu
ZyBsaXN0LiAqLworCisJd3JpdGVfbG9ja190cmVlKHRyZWUpOworCXNpYmxpbmdfbGlzdF9yZW1v
dmUobm9kZSk7CisJem5vZGVfcmVtb3ZlKG5vZGUsIHRyZWUpOworCXdyaXRlX3VubG9ja190cmVl
KHRyZWUpOworCisJLyogSGVyZSB3ZSBzZXQgSk5PREVfRFlJTkcgYW5kIGNhbmNlbCBhbGwgcGVu
ZGluZyBsb2NrIHJlcXVlc3RzLiAgSXQKKwkgKiBmb3JjZXMgYWxsIGxvY2sgcmVxdWVzdG9yIHRo
cmVhZHMgdG8gcmVwZWF0IGl0ZXJhdGlvbnMgb2YgZ2V0dGluZworCSAqIGxvY2sgb24gYSBjaGls
ZCwgbmVpZ2hib3Igb3IgcGFyZW50IG5vZGUuICBCdXQsIHRob3NlIHRocmVhZHMgY2FuJ3QKKwkg
KiBjb21lIHRvIHRoaXMgbm9kZSBhZ2FpbiwgYmVjYXVzZSB0aGlzIG5vZGUgaXMgbm8gbG9uZ2Vy
IGEgY2hpbGQsCisJICogbmVpZ2hib3Igb3IgcGFyZW50IG9mIGFueSBvdGhlciBub2RlLiAgVGhp
cyBvcmRlciBvZiB6bm9kZQorCSAqIGludmFsaWRhdGlvbiBkb2VzIG5vdCBhbGxvdyBvdGhlciB0
aHJlYWRzIHRvIHdhc3RlIGNwdSB0aW1lIGlzIGEgYnVzeQorCSAqIGxvb3AsIHRyeWluZyB0byBs
b2NrIGR5aW5nIG9iamVjdC4gIFRoZSBleGNlcHRpb24gaXMgaW4gdGhlIGZsdXNoCisJICogY29k
ZSB3aGVuIHdlIHRha2Ugbm9kZSBkaXJlY3RseSBmcm9tIGF0b20ncyBjYXB0dXJlIGxpc3QuKi8K
KwlyZWlzZXI0X2ludmFsaWRhdGVfbG9jayhoYW5kbGUpOworCXVuY2FwdHVyZV96bm9kZShub2Rl
KTsKK30KKworLyogQ2hlY2sgdGhhdCBpbnRlcm5hbCBpdGVtIGF0IEBwb2ludGVyIHJlYWxseSBj
b250YWlucyBwb2ludGVyIHRvIEBjaGlsZC4gKi8KK2ludCBjaGVja190cmVlX3BvaW50ZXIoY29u
c3QgY29vcmRfdCAqIHBvaW50ZXIJLyogd291bGQtYmUgcG9pbnRlciB0bworCQkJCQkJICogQGNo
aWxkICovICwKKwkJICAgICAgIGNvbnN0IHpub2RlICogY2hpbGQgLyogY2hpbGQgem5vZGUgKi8g
KQoreworCWFzc2VydCgibmlraXRhLTEwMTYiLCBwb2ludGVyICE9IE5VTEwpOworCWFzc2VydCgi
bmlraXRhLTEwMTciLCBjaGlsZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMDE4IiwgcG9p
bnRlci0+bm9kZSAhPSBOVUxMKTsKKworCWFzc2VydCgibmlraXRhLTEzMjUiLCB6bm9kZV9pc19h
bnlfbG9ja2VkKHBvaW50ZXItPm5vZGUpKTsKKworCWFzc2VydCgibmlraXRhLTI5ODUiLAorCSAg
ICAgICB6bm9kZV9nZXRfbGV2ZWwocG9pbnRlci0+bm9kZSkgPT0gem5vZGVfZ2V0X2xldmVsKGNo
aWxkKSArIDEpOworCisJY29vcmRfY2xlYXJfaXBsdWcoKGNvb3JkX3QgKikgcG9pbnRlcik7CisK
KwlpZiAoY29vcmRfaXNfZXhpc3RpbmdfdW5pdChwb2ludGVyKSkgeworCQlpdGVtX3BsdWdpbiAq
aXBsdWc7CisJCXJlaXNlcjRfYmxvY2tfbnIgYWRkcjsKKworCQlpZiAoaXRlbV9pc19pbnRlcm5h
bChwb2ludGVyKSkgeworCQkJaXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9jb29yZChwb2ludGVyKTsK
KwkJCWFzc2VydCgidnMtNTEzIiwgaXBsdWctPnMuaW50ZXJuYWwuZG93bl9saW5rKTsKKwkJCWlw
bHVnLT5zLmludGVybmFsLmRvd25fbGluayhwb2ludGVyLCBOVUxMLCAmYWRkcik7CisJCQkvKiBj
aGVjayB0aGF0IGNhY2hlZCB2YWx1ZSBpcyBjb3JyZWN0ICovCisJCQlpZiAoZGlza19hZGRyX2Vx
KCZhZGRyLCB6bm9kZV9nZXRfYmxvY2soY2hpbGQpKSkgeworCQkJCXJldHVybiBOU19GT1VORDsK
KwkJCX0KKwkJfQorCX0KKwkvKiB3YXJuaW5nICgiam1hY2QtMTAwMiIsICJ0cmVlIHBvaW50ZXIg
aW5jb3JyZWN0Iik7ICovCisJcmV0dXJuIE5TX05PVF9GT1VORDsKK30KKworLyogZmluZCBjb29y
ZCBvZiBwb2ludGVyIHRvIG5ldyBAY2hpbGQgaW4gQHBhcmVudC4KKworICAgRmluZCB0aGUgJmNv
b3JkX3QgaW4gdGhlIEBwYXJlbnQgd2hlcmUgcG9pbnRlciB0byBhIGdpdmVuIEBjaGlsZCB3aWxs
CisgICBiZSBpbi4KKworKi8KK2ludCBmaW5kX25ld19jaGlsZF9wdHIoem5vZGUgKiBwYXJlbnQg
LyogcGFyZW50IHpub2RlLCBwYXNzZWQgbG9ja2VkICovICwKKwkJICAgICAgIHpub2RlICoKKwkJ
ICAgICAgIGNoaWxkIFVOVVNFRF9BUkcgLyogY2hpbGQgem5vZGUsIHBhc3NlZCBsb2NrZWQgKi8g
LAorCQkgICAgICAgem5vZGUgKiBsZWZ0IC8qIGxlZnQgYnJvdGhlciBvZiBuZXcgbm9kZSAqLyAs
CisJCSAgICAgICBjb29yZF90ICogcmVzdWx0IC8qIHdoZXJlIHJlc3VsdCBpcyBzdG9yZWQgaW4g
Ki8gKQoreworCWludCByZXQ7CisKKwlhc3NlcnQoIm5pa2l0YS0xNDg2IiwgcGFyZW50ICE9IE5V
TEwpOworCWFzc2VydCgibmlraXRhLTE0ODciLCBjaGlsZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS0xNDg4IiwgcmVzdWx0ICE9IE5VTEwpOworCisJcmV0ID0gZmluZF9jaGlsZF9wdHIocGFy
ZW50LCBsZWZ0LCByZXN1bHQpOworCWlmIChyZXQgIT0gTlNfRk9VTkQpIHsKKwkJd2FybmluZygi
bmlraXRhLTE0ODkiLCAiQ2Fubm90IGZpbmQgYnJvdGhlciBwb3NpdGlvbjogJWkiLCByZXQpOwor
CQlyZXR1cm4gUkVURVJSKC1FSU8pOworCX0gZWxzZSB7CisJCXJlc3VsdC0+YmV0d2VlbiA9IEFG
VEVSX1VOSVQ7CisJCXJldHVybiBSRVRFUlIoTlNfTk9UX0ZPVU5EKTsKKwl9Cit9CisKKy8qIGZp
bmQgY29vcmQgb2YgcG9pbnRlciB0byBAY2hpbGQgaW4gQHBhcmVudC4KKworICAgRmluZCB0aGUg
JmNvb3JkX3QgaW4gdGhlIEBwYXJlbnQgd2hlcmUgcG9pbnRlciB0byBhIGdpdmVuIEBjaGlsZCBp
cyBpbi4KKworKi8KK2ludCBmaW5kX2NoaWxkX3B0cih6bm9kZSAqIHBhcmVudCAvKiBwYXJlbnQg
em5vZGUsIHBhc3NlZCBsb2NrZWQgKi8gLAorCQkgICB6bm9kZSAqIGNoaWxkIC8qIGNoaWxkIHpu
b2RlLCBwYXNzZWQgbG9ja2VkICovICwKKwkJICAgY29vcmRfdCAqIHJlc3VsdCAvKiB3aGVyZSBy
ZXN1bHQgaXMgc3RvcmVkIGluICovICkKK3sKKwlpbnQgbG9va3VwX3JlczsKKwlub2RlX3BsdWdp
biAqbnBsdWc7CisJLyogbGVmdCBkZWxpbWl0aW5nIGtleSBvZiBhIGNoaWxkICovCisJcmVpc2Vy
NF9rZXkgbGQ7CisJcmVpc2VyNF90cmVlICp0cmVlOworCisJYXNzZXJ0KCJuaWtpdGEtOTM0Iiwg
cGFyZW50ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTkzNSIsIGNoaWxkICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTkzNiIsIHJlc3VsdCAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS0zNTYi
LCB6bm9kZV9pc19sb2FkZWQocGFyZW50KSk7CisKKwljb29yZF9pbml0X3plcm8ocmVzdWx0KTsK
KwlyZXN1bHQtPm5vZGUgPSBwYXJlbnQ7CisKKwlucGx1ZyA9IHBhcmVudC0+bnBsdWc7CisJYXNz
ZXJ0KCJuaWtpdGEtOTM5IiwgbnBsdWcgIT0gTlVMTCk7CisKKwl0cmVlID0gem5vZGVfZ2V0X3Ry
ZWUocGFyZW50KTsKKwkvKiBOT1RFLU5JS0lUQSB0YWtpbmcgcmVhZC1sb2NrIG9uIHRyZWUgaGVy
ZSBhc3N1bWVzIHRoYXQgQHJlc3VsdCBpcworCSAqIG5vdCBhbGlhc2VkIHRvIC0+aW5fcGFyZW50
IG9mIHNvbWUgem5vZGUuIE90aGVyd2lzZSwKKwkgKiBwYXJlbnRfY29vcmRfdG9fY29vcmQoKSBi
ZWxvdyB3b3VsZCBtb2RpZnkgZGF0YSBwcm90ZWN0ZWQgYnkgdHJlZQorCSAqIGxvY2suICovCisJ
cmVhZF9sb2NrX3RyZWUodHJlZSk7CisJLyogZmFzdCBwYXRoLiBUcnkgdG8gdXNlIGNhY2hlZCB2
YWx1ZS4gTG9jayB0cmVlIHRvIGtlZXAKKwkgICBub2RlLT5wb3NfaW5fcGFyZW50IGFuZCBwb3Mt
PipfYmxvY2tuciBjb25zaXN0ZW50LiAqLworCWlmIChjaGlsZC0+aW5fcGFyZW50Lml0ZW1fcG9z
ICsgMSAhPSAwKSB7CisJCXBhcmVudF9jb29yZF90b19jb29yZCgmY2hpbGQtPmluX3BhcmVudCwg
cmVzdWx0KTsKKwkJaWYgKGNoZWNrX3RyZWVfcG9pbnRlcihyZXN1bHQsIGNoaWxkKSA9PSBOU19G
T1VORCkgeworCQkJcmVhZF91bmxvY2tfdHJlZSh0cmVlKTsKKwkJCXJldHVybiBOU19GT1VORDsK
KwkJfQorCisJCWNoaWxkLT5pbl9wYXJlbnQuaXRlbV9wb3MgPSAodW5zaWduZWQgc2hvcnQpfjA7
CisJfQorCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7CisKKwkvKiBpcyBhYm92ZSBmYWlsZWQsIGZp
bmQgc29tZSBrZXkgZnJvbSBAY2hpbGQuIFdlIGFyZSBsb29raW5nIGZvciB0aGUKKwkgICBsZWFz
dCBrZXkgaW4gYSBjaGlsZC4gKi8KKwlyZWFkX2xvY2tfZGsodHJlZSk7CisJbGQgPSAqem5vZGVf
Z2V0X2xkX2tleShjaGlsZCk7CisJcmVhZF91bmxvY2tfZGsodHJlZSk7CisJLyoKKwkgKiBub3cs
IGxvb2t1cCBwYXJlbnQgd2l0aCBrZXkganVzdCBmb3VuZC4gTm90ZSwgdGhhdCBsZWZ0IGRlbGlt
aXRpbmcKKwkgKiBrZXkgZG9lc24ndCBpZGVudGlmeSBub2RlIHVuaXF1ZWx5LCBiZWNhdXNlIChp
biBleHRyZW1lbHkgcmFyZQorCSAqIGNhc2UpIHR3byBub2RlcyBjYW4gaGF2ZSBlcXVhbCBsZWZ0
IGRlbGltaXRpbmcga2V5cywgaWYgb25lIG9mIHRoZW0KKwkgKiBpcyBjb21wbGV0ZWx5IGZpbGxl
ZCB3aXRoIGRpcmVjdG9yeSBlbnRyaWVzIHRoYXQgYWxsIGhhcHBlbmVkIHRvIGJlCisJICogaGFz
aCBjb2xsaXNpb24uIEJ1dCwgd2UgY2hlY2sgYmxvY2sgbnVtYmVyIGluIGNoZWNrX3RyZWVfcG9p
bnRlcigpCisJICogYW5kLCBzbywgYXJlIHNhZmUuCisJICovCisJbG9va3VwX3JlcyA9IG5wbHVn
LT5sb29rdXAocGFyZW50LCAmbGQsIEZJTkRfRVhBQ1QsIHJlc3VsdCk7CisJLyogdXBkYXRlIGNh
Y2hlZCBwb3NfaW5fbm9kZSAqLworCWlmIChsb29rdXBfcmVzID09IE5TX0ZPVU5EKSB7CisJCXdy
aXRlX2xvY2tfdHJlZSh0cmVlKTsKKwkJY29vcmRfdG9fcGFyZW50X2Nvb3JkKHJlc3VsdCwgJmNo
aWxkLT5pbl9wYXJlbnQpOworCQl3cml0ZV91bmxvY2tfdHJlZSh0cmVlKTsKKwkJbG9va3VwX3Jl
cyA9IGNoZWNrX3RyZWVfcG9pbnRlcihyZXN1bHQsIGNoaWxkKTsKKwl9CisJaWYgKGxvb2t1cF9y
ZXMgPT0gTlNfTk9UX0ZPVU5EKQorCQlsb29rdXBfcmVzID0gZmluZF9jaGlsZF9ieV9hZGRyKHBh
cmVudCwgY2hpbGQsIHJlc3VsdCk7CisJcmV0dXJuIGxvb2t1cF9yZXM7Cit9CisKKy8qIGZpbmQg
Y29vcmQgb2YgcG9pbnRlciB0byBAY2hpbGQgaW4gQHBhcmVudCBieSBzY2FubmluZworCisgICBG
aW5kIHRoZSAmY29vcmRfdCBpbiB0aGUgQHBhcmVudCB3aGVyZSBwb2ludGVyIHRvIGEgZ2l2ZW4g
QGNoaWxkCisgICBpcyBpbiBieSBzY2FubmluZyBhbGwgaW50ZXJuYWwgaXRlbXMgaW4gQHBhcmVu
dCBhbmQgY29tcGFyaW5nIGJsb2NrCisgICBudW1iZXJzIGluIHRoZW0gd2l0aCB0aGF0IG9mIEBj
aGlsZC4KKworKi8KK3N0YXRpYyBpbnQgZmluZF9jaGlsZF9ieV9hZGRyKHpub2RlICogcGFyZW50
IC8qIHBhcmVudCB6bm9kZSwgcGFzc2VkIGxvY2tlZCAqLyAsCisJCQkgICAgICB6bm9kZSAqIGNo
aWxkIC8qIGNoaWxkIHpub2RlLCBwYXNzZWQgbG9ja2VkICovICwKKwkJCSAgICAgIGNvb3JkX3Qg
KiByZXN1bHQgLyogd2hlcmUgcmVzdWx0IGlzIHN0b3JlZCBpbiAqLyApCit7CisJaW50IHJldDsK
KworCWFzc2VydCgibmlraXRhLTEzMjAiLCBwYXJlbnQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtMTMyMSIsIGNoaWxkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEzMjIiLCByZXN1bHQg
IT0gTlVMTCk7CisKKwlyZXQgPSBOU19OT1RfRk9VTkQ7CisKKwlmb3JfYWxsX3VuaXRzKHJlc3Vs
dCwgcGFyZW50KSB7CisJCWlmIChjaGVja190cmVlX3BvaW50ZXIocmVzdWx0LCBjaGlsZCkgPT0g
TlNfRk9VTkQpIHsKKwkJCXdyaXRlX2xvY2tfdHJlZSh6bm9kZV9nZXRfdHJlZShwYXJlbnQpKTsK
KwkJCWNvb3JkX3RvX3BhcmVudF9jb29yZChyZXN1bHQsICZjaGlsZC0+aW5fcGFyZW50KTsKKwkJ
CXdyaXRlX3VubG9ja190cmVlKHpub2RlX2dldF90cmVlKHBhcmVudCkpOworCQkJcmV0ID0gTlNf
Rk9VTkQ7CisJCQlicmVhazsKKwkJfQorCX0KKwlyZXR1cm4gcmV0OworfQorCisvKiB0cnVlLCBp
ZiBAYWRkciBpcyAidW5hbGxvY2F0ZWQgYmxvY2sgbnVtYmVyIiwgd2hpY2ggaXMganVzdCBhZGRy
ZXNzLCB3aXRoCisgICBoaWdoZXN0IGJpdCBzZXQuICovCitpbnQgaXNfZGlza19hZGRyX3VuYWxs
b2NhdGVkKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBhZGRyCS8qIGFkZHJlc3MgdG8KKwkJCQkJ
CQkJICogY2hlY2sgKi8gKQoreworCWFzc2VydCgibmlraXRhLTE3NjYiLCBhZGRyICE9IE5VTEwp
OworCWNhc3NlcnQoc2l6ZW9mKHJlaXNlcjRfYmxvY2tfbnIpID09IDgpOworCXJldHVybiAoKmFk
ZHIgJiBSRUlTRVI0X0JMT0NLTlJfU1RBVFVTX0JJVF9NQVNLKSA9PQorCSAgICBSRUlTRVI0X1VO
QUxMT0NBVEVEX1NUQVRVU19WQUxVRTsKK30KKworLyogcmV0dXJucyB0cnVlIGlmIHJlbW92aW5n
IGJ5dGVzIG9mIGdpdmVuIHJhbmdlIG9mIGtleSBbZnJvbV9rZXksIHRvX2tleV0KKyAgIGNhdXNl
cyByZW1vdmluZyBvZiB3aG9sZSBpdGVtIEBmcm9tICovCitzdGF0aWMgaW50CitpdGVtX3JlbW92
ZWRfY29tcGxldGVseShjb29yZF90ICogZnJvbSwgY29uc3QgcmVpc2VyNF9rZXkgKiBmcm9tX2tl
eSwKKwkJCWNvbnN0IHJlaXNlcjRfa2V5ICogdG9fa2V5KQoreworCWl0ZW1fcGx1Z2luICppcGx1
ZzsKKwlyZWlzZXI0X2tleSBrZXlfaW5faXRlbTsKKworCWFzc2VydCgidW1rYS0zMjUiLCBmcm9t
ICE9IE5VTEwpOworCWFzc2VydCgiIiwgaXRlbV9pc19leHRlbnQoZnJvbSkpOworCisJLyogY2hl
Y2sgZmlyc3Qga2V5IGp1c3QgZm9yIGNhc2UgKi8KKwlpdGVtX2tleV9ieV9jb29yZChmcm9tLCAm
a2V5X2luX2l0ZW0pOworCWlmIChrZXlndChmcm9tX2tleSwgJmtleV9pbl9pdGVtKSkKKwkJcmV0
dXJuIDA7CisKKwkvKiBjaGVjayBsYXN0IGtleSAqLworCWlwbHVnID0gaXRlbV9wbHVnaW5fYnlf
Y29vcmQoZnJvbSk7CisJYXNzZXJ0KCJ2cy02MTEiLCBpcGx1ZyAmJiBpcGx1Zy0+cy5maWxlLmFw
cGVuZF9rZXkpOworCisJaXBsdWctPnMuZmlsZS5hcHBlbmRfa2V5KGZyb20sICZrZXlfaW5faXRl
bSk7CisJc2V0X2tleV9vZmZzZXQoJmtleV9pbl9pdGVtLCBnZXRfa2V5X29mZnNldCgma2V5X2lu
X2l0ZW0pIC0gMSk7CisKKwlpZiAoa2V5bHQodG9fa2V5LCAma2V5X2luX2l0ZW0pKQorCQkvKiBs
YXN0IGJ5dGUgaXMgbm90IHJlbW92ZWQgKi8KKwkJcmV0dXJuIDA7CisJcmV0dXJuIDE7Cit9CisK
Ky8qIGhlbHBlciBmdW5jdGlvbiBmb3IgcHJlcGFyZV90d2lnX2tpbGwoKTogQGxlZnQgYW5kIEBy
aWdodCBhcmUgZm9ybWF0dGVkCisgKiBuZWlnaGJvcnMgb2YgZXh0ZW50IGl0ZW0gYmVpbmcgY29t
cGxldGVseSByZW1vdmVkLiBMb2FkIGFuZCBsb2NrIG5laWdoYm9ycworICogYW5kIHN0b3JlIGxv
Y2sgaGFuZGxlcyBpbnRvIEBjZGF0YSBmb3IgbGF0ZXIgdXNlIGJ5IGtpbGxfaG9va19leHRlbnQo
KSAqLworc3RhdGljIGludAorcHJlcGFyZV9jaGlsZHJlbih6bm9kZSAqIGxlZnQsIHpub2RlICog
cmlnaHQsIGNhcnJ5X2tpbGxfZGF0YSAqIGtkYXRhKQoreworCWludCByZXN1bHQ7CisJaW50IGxl
ZnRfbG9hZGVkOworCWludCByaWdodF9sb2FkZWQ7CisKKwlyZXN1bHQgPSAwOworCWxlZnRfbG9h
ZGVkID0gcmlnaHRfbG9hZGVkID0gMDsKKworCWlmIChsZWZ0ICE9IE5VTEwpIHsKKwkJcmVzdWx0
ID0gemxvYWQobGVmdCk7CisJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJbGVmdF9sb2FkZWQgPSAx
OworCQkJcmVzdWx0ID0gbG9uZ3Rlcm1fbG9ja196bm9kZShrZGF0YS0+bGVmdCwgbGVmdCwKKwkJ
CQkJCSAgICAgWk5PREVfUkVBRF9MT0NLLAorCQkJCQkJICAgICBaTk9ERV9MT0NLX0xPUFJJKTsK
KwkJfQorCX0KKwlpZiAocmVzdWx0ID09IDAgJiYgcmlnaHQgIT0gTlVMTCkgeworCQlyZXN1bHQg
PSB6bG9hZChyaWdodCk7CisJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJcmlnaHRfbG9hZGVkID0g
MTsKKwkJCXJlc3VsdCA9IGxvbmd0ZXJtX2xvY2tfem5vZGUoa2RhdGEtPnJpZ2h0LCByaWdodCwK
KwkJCQkJCSAgICAgWk5PREVfUkVBRF9MT0NLLAorCQkJCQkJICAgICBaTk9ERV9MT0NLX0hJUFJJ
IHwKKwkJCQkJCSAgICAgWk5PREVfTE9DS19OT05CTE9DSyk7CisJCX0KKwl9CisJaWYgKHJlc3Vs
dCAhPSAwKSB7CisJCWRvbmVfbGgoa2RhdGEtPmxlZnQpOworCQlkb25lX2xoKGtkYXRhLT5yaWdo
dCk7CisJCWlmIChsZWZ0X2xvYWRlZCAhPSAwKQorCQkJenJlbHNlKGxlZnQpOworCQlpZiAocmln
aHRfbG9hZGVkICE9IDApCisJCQl6cmVsc2UocmlnaHQpOworCX0KKwlyZXR1cm4gcmVzdWx0Owor
fQorCitzdGF0aWMgdm9pZCBkb25lX2NoaWxkcmVuKGNhcnJ5X2tpbGxfZGF0YSAqIGtkYXRhKQor
eworCWlmIChrZGF0YS0+bGVmdCAhPSBOVUxMICYmIGtkYXRhLT5sZWZ0LT5ub2RlICE9IE5VTEwp
IHsKKwkJenJlbHNlKGtkYXRhLT5sZWZ0LT5ub2RlKTsKKwkJZG9uZV9saChrZGF0YS0+bGVmdCk7
CisJfQorCWlmIChrZGF0YS0+cmlnaHQgIT0gTlVMTCAmJiBrZGF0YS0+cmlnaHQtPm5vZGUgIT0g
TlVMTCkgeworCQl6cmVsc2Uoa2RhdGEtPnJpZ2h0LT5ub2RlKTsKKwkJZG9uZV9saChrZGF0YS0+
cmlnaHQpOworCX0KK30KKworLyogcGFydCBvZiBjdXRfbm9kZS4gSXQgaXMgY2FsbGVkIHdoZW4g
Y3V0X25vZGUgaXMgY2FsbGVkIHRvIHJlbW92ZSBvciBjdXQgcGFydAorICAgb2YgZXh0ZW50IGl0
ZW0uIFdoZW4gaGVhZCBvZiB0aGF0IGl0ZW0gaXMgcmVtb3ZlZCAtIHdlIGhhdmUgdG8gdXBkYXRl
IHJpZ2h0CisgICBkZWxpbWl0aW5nIG9mIGxlZnQgbmVpZ2hib3Igb2YgZXh0ZW50LiBXaGVuIGl0
ZW0gaXMgcmVtb3ZlZCBjb21wbGV0ZWx5IC0gd2UKKyAgIGhhdmUgdG8gc2V0IHNpYmxpbmcgbGlu
ayBiZXR3ZWVuIGxlZnQgYW5kIHJpZ2h0IG5laWdoYm9yIG9mIHJlbW92ZWQKKyAgIGV4dGVudC4g
VGhpcyBtYXkgcmV0dXJuIC1FX0RFQURMT0NLIGJlY2F1c2Ugb2YgdHJ5aW5nIHRvIGdldCBsZWZ0
IG5laWdoYm9yCisgICBsb2NrZWQuIFNvLCBjYWxsZXIgc2hvdWxkIHJlcGVhdCBhbiBhdHRlbXB0
CisqLworLyogQXVkaXRlZCBieTogdW1rYSAoMjAwMi4wNi4xNikgKi8KK3N0YXRpYyBpbnQKK3By
ZXBhcmVfdHdpZ19raWxsKGNhcnJ5X2tpbGxfZGF0YSAqIGtkYXRhLCB6bm9kZSAqIGxvY2tlZF9s
ZWZ0X25laWdoYm9yKQoreworCWludCByZXN1bHQ7CisJcmVpc2VyNF9rZXkga2V5OworCWxvY2tf
aGFuZGxlIGxlZnRfbGg7CisJbG9ja19oYW5kbGUgcmlnaHRfbGg7CisJY29vcmRfdCBsZWZ0X2Nv
b3JkOworCWNvb3JkX3QgKmZyb207CisJem5vZGUgKmxlZnRfY2hpbGQ7CisJem5vZGUgKnJpZ2h0
X2NoaWxkOworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKwlpbnQgbGVmdF96bG9hZGVkX2hlcmUsIHJp
Z2h0X3psb2FkZWRfaGVyZTsKKworCWZyb20gPSBrZGF0YS0+cGFyYW1zLmZyb207CisJYXNzZXJ0
KCJ1bWthLTMyNiIsIGZyb20gIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTMyNyIsIGtkYXRhLT5w
YXJhbXMudG8gIT0gTlVMTCk7CisKKwkvKiBmb3Igb25lIGV4dGVudCBpdGVtIG9ubHkgeWV0ICov
CisJYXNzZXJ0KCJ2cy01OTEiLCBpdGVtX2lzX2V4dGVudChmcm9tKSk7CisJYXNzZXJ0KCJ2cy01
OTIiLCBmcm9tLT5pdGVtX3BvcyA9PSBrZGF0YS0+cGFyYW1zLnRvLT5pdGVtX3Bvcyk7CisKKwlp
ZiAoKGtkYXRhLT5wYXJhbXMuZnJvbV9rZXkKKwkgICAgICYmIGtleWd0KGtkYXRhLT5wYXJhbXMu
ZnJvbV9rZXksIGl0ZW1fa2V5X2J5X2Nvb3JkKGZyb20sICZrZXkpKSkKKwkgICAgfHwgZnJvbS0+
dW5pdF9wb3MgIT0gMCkgeworCQkvKiBoZWFkIG9mIGl0ZW0gQGZyb20gaXMgbm90IHJlbW92ZWQs
IHRoZXJlIGlzIG5vdGhpbmcgdG8KKwkJICAgd29ycnkgYWJvdXQgKi8KKwkJcmV0dXJuIDA7CisJ
fQorCisJcmVzdWx0ID0gMDsKKwlsZWZ0X3psb2FkZWRfaGVyZSA9IDA7CisJcmlnaHRfemxvYWRl
ZF9oZXJlID0gMDsKKworCWxlZnRfY2hpbGQgPSByaWdodF9jaGlsZCA9IE5VTEw7CisKKwljb29y
ZF9kdXAoJmxlZnRfY29vcmQsIGZyb20pOworCWluaXRfbGgoJmxlZnRfbGgpOworCWluaXRfbGgo
JnJpZ2h0X2xoKTsKKwlpZiAoY29vcmRfcHJldl91bml0KCZsZWZ0X2Nvb3JkKSkgeworCQkvKiBA
ZnJvbSBpcyBsZWZ0bW9zdCBpdGVtIGluIGl0cyBub2RlICovCisJCWlmICghbG9ja2VkX2xlZnRf
bmVpZ2hib3IpIHsKKwkJCXJlc3VsdCA9CisJCQkgICAgcmVpc2VyNF9nZXRfbGVmdF9uZWlnaGJv
cigmbGVmdF9saCwgZnJvbS0+bm9kZSwKKwkJCQkJCSAgICAgIFpOT0RFX1JFQURfTE9DSywKKwkJ
CQkJCSAgICAgIEdOX0NBTl9VU0VfVVBQRVJfTEVWRUxTKTsKKwkJCXN3aXRjaCAocmVzdWx0KSB7
CisJCQljYXNlIDA6CisJCQkJYnJlYWs7CisJCQljYXNlIC1FX05PX05FSUdIQk9SOgorCQkJCS8q
IHRoZXJlIGlzIG5vIGZvcm1hdHRlZCBub2RlIHRvIHRoZSBsZWZ0IG9mCisJCQkJICAgZnJvbS0+
bm9kZSAqLworCQkJCXdhcm5pbmcoInZzLTYwNSIsCisJCQkJCSJleHRlbnQgaXRlbSBoYXMgc21h
bGxlc3Qga2V5IGluICIKKwkJCQkJInRoZSB0cmVlIGFuZCBpdCBpcyBhYm91dCB0byBiZSByZW1v
dmVkIik7CisJCQkJcmV0dXJuIDA7CisJCQljYXNlIC1FX0RFQURMT0NLOgorCQkJCS8qIG5lZWQg
dG8gcmVzdGFydCAqLworCQkJZGVmYXVsdDoKKwkJCQlyZXR1cm4gcmVzdWx0OworCQkJfQorCisJ
CQkvKiB3ZSBoYXZlIGFjcXVpcmVkIGxlZnQgbmVpZ2hib3Igb2YgZnJvbS0+bm9kZSAqLworCQkJ
cmVzdWx0ID0gemxvYWQobGVmdF9saC5ub2RlKTsKKwkJCWlmIChyZXN1bHQpCisJCQkJZ290byBk
b25lOworCisJCQlsb2NrZWRfbGVmdF9uZWlnaGJvciA9IGxlZnRfbGgubm9kZTsKKwkJfSBlbHNl
IHsKKwkJCS8qIHNxdWFsbG9jX3JpZ2h0X3R3aWdfY3V0IHNob3VsZCBoYXZlIHN1cHBsaWVkIGxv
Y2tlZAorCQkJICogbGVmdCBuZWlnaGJvciAqLworCQkJYXNzZXJ0KCJ2cy04MzQiLAorCQkJICAg
ICAgIHpub2RlX2lzX3dyaXRlX2xvY2tlZChsb2NrZWRfbGVmdF9uZWlnaGJvcikpOworCQkJcmVz
dWx0ID0gemxvYWQobG9ja2VkX2xlZnRfbmVpZ2hib3IpOworCQkJaWYgKHJlc3VsdCkKKwkJCQly
ZXR1cm4gcmVzdWx0OworCQl9CisKKwkJbGVmdF96bG9hZGVkX2hlcmUgPSAxOworCQljb29yZF9p
bml0X2xhc3RfdW5pdCgmbGVmdF9jb29yZCwgbG9ja2VkX2xlZnRfbmVpZ2hib3IpOworCX0KKwor
CWlmICghaXRlbV9pc19pbnRlcm5hbCgmbGVmdF9jb29yZCkpIHsKKwkJLyogd2hhdCBlbHNlIGJ1
dCBleHRlbnQgY2FuIGJlIG9uIHR3aWcgbGV2ZWwgKi8KKwkJYXNzZXJ0KCJ2cy02MDYiLCBpdGVt
X2lzX2V4dGVudCgmbGVmdF9jb29yZCkpOworCisJCS8qIHRoZXJlIGlzIG5vIGxlZnQgZm9ybWF0
dGVkIGNoaWxkICovCisJCWlmIChsZWZ0X3psb2FkZWRfaGVyZSkKKwkJCXpyZWxzZShsb2NrZWRf
bGVmdF9uZWlnaGJvcik7CisJCWRvbmVfbGgoJmxlZnRfbGgpOworCQlyZXR1cm4gMDsKKwl9CisK
Kwl0cmVlID0gem5vZGVfZ2V0X3RyZWUobGVmdF9jb29yZC5ub2RlKTsKKwlsZWZ0X2NoaWxkID0g
Y2hpbGRfem5vZGUoJmxlZnRfY29vcmQsIGxlZnRfY29vcmQubm9kZSwgMSwgMCk7CisKKwlpZiAo
SVNfRVJSKGxlZnRfY2hpbGQpKSB7CisJCXJlc3VsdCA9IFBUUl9FUlIobGVmdF9jaGlsZCk7CisJ
CWdvdG8gZG9uZTsKKwl9CisKKwkvKiBsZWZ0IGNoaWxkIGlzIGFjcXVpcmVkLCBjYWxjdWxhdGUg
bmV3IHJpZ2h0IGRlbGltaXRpbmcga2V5IGZvciBpdAorCSAgIGFuZCBnZXQgcmlnaHQgY2hpbGQg
aWYgaXQgaXMgbmVjZXNzYXJ5ICovCisJaWYgKGl0ZW1fcmVtb3ZlZF9jb21wbGV0ZWx5CisJICAg
IChmcm9tLCBrZGF0YS0+cGFyYW1zLmZyb21fa2V5LCBrZGF0YS0+cGFyYW1zLnRvX2tleSkpIHsK
KwkJLyogdHJ5IHRvIGdldCByaWdodCBjaGlsZCBvZiByZW1vdmVkIGl0ZW0gKi8KKwkJY29vcmRf
dCByaWdodF9jb29yZDsKKworCQlhc3NlcnQoInZzLTYwNyIsCisJCSAgICAgICBrZGF0YS0+cGFy
YW1zLnRvLT51bml0X3BvcyA9PQorCQkgICAgICAgY29vcmRfbGFzdF91bml0X3BvcyhrZGF0YS0+
cGFyYW1zLnRvKSk7CisJCWNvb3JkX2R1cCgmcmlnaHRfY29vcmQsIGtkYXRhLT5wYXJhbXMudG8p
OworCQlpZiAoY29vcmRfbmV4dF91bml0KCZyaWdodF9jb29yZCkpIHsKKwkJCS8qIEB0byBpcyBy
aWdodG1vc3QgdW5pdCBpbiB0aGUgbm9kZSAqLworCQkJcmVzdWx0ID0KKwkJCSAgICByZWlzZXI0
X2dldF9yaWdodF9uZWlnaGJvcigmcmlnaHRfbGgsIGZyb20tPm5vZGUsCisJCQkJCQkgICAgICAg
Wk5PREVfUkVBRF9MT0NLLAorCQkJCQkJICAgICAgIEdOX0NBTl9VU0VfVVBQRVJfTEVWRUxTKTsK
KwkJCXN3aXRjaCAocmVzdWx0KSB7CisJCQljYXNlIDA6CisJCQkJcmVzdWx0ID0gemxvYWQocmln
aHRfbGgubm9kZSk7CisJCQkJaWYgKHJlc3VsdCkKKwkJCQkJZ290byBkb25lOworCisJCQkJcmln
aHRfemxvYWRlZF9oZXJlID0gMTsKKwkJCQljb29yZF9pbml0X2ZpcnN0X3VuaXQoJnJpZ2h0X2Nv
b3JkLAorCQkJCQkJICAgICAgcmlnaHRfbGgubm9kZSk7CisJCQkJaXRlbV9rZXlfYnlfY29vcmQo
JnJpZ2h0X2Nvb3JkLCAma2V5KTsKKwkJCQlicmVhazsKKworCQkJY2FzZSAtRV9OT19ORUlHSEJP
UjoKKwkJCQkvKiB0aGVyZSBpcyBubyBmb3JtYXR0ZWQgbm9kZSB0byB0aGUgcmlnaHQgb2YKKwkJ
CQkgICBmcm9tLT5ub2RlICovCisJCQkJcmVhZF9sb2NrX2RrKHRyZWUpOworCQkJCWtleSA9ICp6
bm9kZV9nZXRfcmRfa2V5KGZyb20tPm5vZGUpOworCQkJCXJlYWRfdW5sb2NrX2RrKHRyZWUpOwor
CQkJCXJpZ2h0X2Nvb3JkLm5vZGUgPSBOVUxMOworCQkJCXJlc3VsdCA9IDA7CisJCQkJYnJlYWs7
CisJCQlkZWZhdWx0OgorCQkJCS8qIHJlYWwgZXJyb3IgKi8KKwkJCQlnb3RvIGRvbmU7CisJCQl9
CisJCX0gZWxzZSB7CisJCQkvKiB0aGVyZSBpcyBhbiBpdGVtIHRvIHRoZSByaWdodCBvZiBAZnJv
bSAtIHRha2UgaXRzIGtleSAqLworCQkJaXRlbV9rZXlfYnlfY29vcmQoJnJpZ2h0X2Nvb3JkLCAm
a2V5KTsKKwkJfQorCisJCS8qIHRyeSB0byBnZXQgcmlnaHQgY2hpbGQgb2YgQGZyb20gKi8KKwkJ
aWYgKHJpZ2h0X2Nvb3JkLm5vZGUgJiYJLyogdGhlcmUgaXMgcmlnaHQgbmVpZ2hib3Igb2YgQGZy
b20gKi8KKwkJICAgIGl0ZW1faXNfaW50ZXJuYWwoJnJpZ2h0X2Nvb3JkKSkgewkvKiBpdCBpcyBp
bnRlcm5hbCBpdGVtICovCisJCQlyaWdodF9jaGlsZCA9IGNoaWxkX3pub2RlKCZyaWdodF9jb29y
ZCwKKwkJCQkJCSAgcmlnaHRfY29vcmQubm9kZSwgMSwgMCk7CisKKwkJCWlmIChJU19FUlIocmln
aHRfY2hpbGQpKSB7CisJCQkJcmVzdWx0ID0gUFRSX0VSUihyaWdodF9jaGlsZCk7CisJCQkJZ290
byBkb25lOworCQkJfQorCisJCX0KKwkJLyogd2hvbGUgZXh0ZW50IGlzIHJlbW92ZWQgYmV0d2Vl
biB6bm9kZXMgbGVmdF9jaGlsZCBhbmQgcmlnaHRfY2hpbGQuIFByZXBhcmUgdGhlbSBmb3IgbGlu
a2luZyBhbmQKKwkJICAgdXBkYXRlIG9mIHJpZ2h0IGRlbGltaXRpbmcga2V5IG9mIGxlZnRfY2hp
bGQgKi8KKwkJcmVzdWx0ID0gcHJlcGFyZV9jaGlsZHJlbihsZWZ0X2NoaWxkLCByaWdodF9jaGls
ZCwga2RhdGEpOworCX0gZWxzZSB7CisJCS8qIGhlYWQgb2YgaXRlbSBAdG8gaXMgcmVtb3ZlZC4g
bGVmdF9jaGlsZCBoYXMgdG8gZ2V0IHJpZ2h0IGRlbGltdGluZyBrZXkgdXBkYXRlLiBQcmVwYXJl
IGl0IGZvciB0aGF0ICovCisJCXJlc3VsdCA9IHByZXBhcmVfY2hpbGRyZW4obGVmdF9jaGlsZCwg
TlVMTCwga2RhdGEpOworCX0KKworICAgICAgZG9uZToKKwlpZiAocmlnaHRfY2hpbGQpCisJCXpw
dXQocmlnaHRfY2hpbGQpOworCWlmIChyaWdodF96bG9hZGVkX2hlcmUpCisJCXpyZWxzZShyaWdo
dF9saC5ub2RlKTsKKwlkb25lX2xoKCZyaWdodF9saCk7CisKKwlpZiAobGVmdF9jaGlsZCkKKwkJ
enB1dChsZWZ0X2NoaWxkKTsKKwlpZiAobGVmdF96bG9hZGVkX2hlcmUpCisJCXpyZWxzZShsb2Nr
ZWRfbGVmdF9uZWlnaGJvcik7CisJZG9uZV9saCgmbGVmdF9saCk7CisJcmV0dXJuIHJlc3VsdDsK
K30KKworLyogdGhpcyBpcyB1c2VkIHRvIHJlbW92ZSBwYXJ0IG9mIG5vZGUgY29udGVudCBiZXR3
ZWVuIGNvb3JkaW5hdGVzIEBmcm9tIGFuZCBAdG8uIFVuaXRzIHRvIHdoaWNoIEBmcm9tIGFuZCBA
dG8gYXJlIHNldAorICAgYXJlIHRvIGJlIGN1dCBjb21wbGV0ZWx5ICovCisvKiBmb3IgdHJ5X3Rv
X21lcmdlX3dpdGhfbGVmdCwgZGVsZXRlX2NvcGllZCwgcmVpc2VyNF9kZWxldGVfbm9kZSAqLwor
aW50IGN1dF9ub2RlX2NvbnRlbnQoY29vcmRfdCAqIGZyb20sIGNvb3JkX3QgKiB0bywgY29uc3Qg
cmVpc2VyNF9rZXkgKiBmcm9tX2tleSwJLyogZmlyc3Qga2V5IHRvIGJlIHJlbW92ZWQgKi8KKwkJ
ICAgICBjb25zdCByZWlzZXI0X2tleSAqIHRvX2tleSwJLyogbGFzdCBrZXkgdG8gYmUgcmVtb3Zl
ZCAqLworCQkgICAgIHJlaXNlcjRfa2V5ICoKKwkJICAgICBzbWFsbGVzdF9yZW1vdmVkIC8qIHNt
YWxsZXN0IGtleSBhY3R1YWxseSByZW1vdmVkICovICkKK3sKKwlpbnQgcmVzdWx0OworCWNhcnJ5
X3Bvb2wgKnBvb2w7CisJY2FycnlfbGV2ZWwgKmxvd2VzdF9sZXZlbDsKKwljYXJyeV9jdXRfZGF0
YSAqY3V0X2RhdGE7CisJY2Fycnlfb3AgKm9wOworCisJYXNzZXJ0KCJ2cy0xNzE1IiwgY29vcmRf
Y29tcGFyZShmcm9tLCB0bykgIT0gQ09PUkRfQ01QX09OX1JJR0hUKTsKKworCXBvb2wgPQorCSAg
ICBpbml0X2NhcnJ5X3Bvb2woc2l6ZW9mKCpwb29sKSArIDMgKiBzaXplb2YoKmxvd2VzdF9sZXZl
bCkgKworCQkJICAgIHNpemVvZigqY3V0X2RhdGEpKTsKKwlpZiAoSVNfRVJSKHBvb2wpKQorCQly
ZXR1cm4gUFRSX0VSUihwb29sKTsKKwlsb3dlc3RfbGV2ZWwgPSAoY2FycnlfbGV2ZWwgKikgKHBv
b2wgKyAxKTsKKwlpbml0X2NhcnJ5X2xldmVsKGxvd2VzdF9sZXZlbCwgcG9vbCk7CisKKwlvcCA9
IHJlaXNlcjRfcG9zdF9jYXJyeShsb3dlc3RfbGV2ZWwsIENPUF9DVVQsIGZyb20tPm5vZGUsIDAp
OworCWFzc2VydCgidnMtMTUwOSIsIG9wICE9IDApOworCWlmIChJU19FUlIob3ApKSB7CisJCWRv
bmVfY2FycnlfcG9vbChwb29sKTsKKwkJcmV0dXJuIFBUUl9FUlIob3ApOworCX0KKworCWN1dF9k
YXRhID0gKGNhcnJ5X2N1dF9kYXRhICopIChsb3dlc3RfbGV2ZWwgKyAzKTsKKwljdXRfZGF0YS0+
cGFyYW1zLmZyb20gPSBmcm9tOworCWN1dF9kYXRhLT5wYXJhbXMudG8gPSB0bzsKKwljdXRfZGF0
YS0+cGFyYW1zLmZyb21fa2V5ID0gZnJvbV9rZXk7CisJY3V0X2RhdGEtPnBhcmFtcy50b19rZXkg
PSB0b19rZXk7CisJY3V0X2RhdGEtPnBhcmFtcy5zbWFsbGVzdF9yZW1vdmVkID0gc21hbGxlc3Rf
cmVtb3ZlZDsKKworCW9wLT51LmN1dF9vcl9raWxsLmlzX2N1dCA9IDE7CisJb3AtPnUuY3V0X29y
X2tpbGwudS5jdXQgPSBjdXRfZGF0YTsKKworCXJlc3VsdCA9IHJlaXNlcjRfY2FycnkobG93ZXN0
X2xldmVsLCBOVUxMKTsKKwlkb25lX2NhcnJ5X3Bvb2wocG9vbCk7CisKKwlyZXR1cm4gcmVzdWx0
OworfQorCisvKiBjdXQgcGFydCBvZiB0aGUgbm9kZQorCisgICBDdXQgcGFydCBvciB3aG9sZSBj
b250ZW50IG9mIG5vZGUuCisKKyAgIGN1dCBkYXRhIGJldHdlZW4gQGZyb20gYW5kIEB0byBvZiBA
ZnJvbS0+bm9kZSBhbmQgY2FsbCBjYXJyeSgpIHRvIG1ha2UKKyAgIGNvcnJlc3BvbmRpbmcgY2hh
bmdlcyBpbiB0aGUgdHJlZS4gQGZyb20tPm5vZGUgbWF5IGJlY29tZSBlbXB0eS4gSWYgc28gLQor
ICAgcG9pbnRlciB0byBpdCB3aWxsIGJlIHJlbW92ZWQuIE5laWdoYm9yaW5nIG5vZGVzIGFyZSBu
b3QgY2hhbmdlZC4gU21hbGxlc3QKKyAgIHJlbW92ZWQga2V5IGlzIHN0b3JlZCBpbiBAc21hbGxl
c3RfcmVtb3ZlZAorCisqLworaW50IGtpbGxfbm9kZV9jb250ZW50KGNvb3JkX3QgKiBmcm9tLAkv
KiBjb29yZCBvZiB0aGUgZmlyc3QgdW5pdC9pdGVtIHRoYXQgd2lsbCBiZSBlbGltaW5hdGVkICov
CisJCSAgICAgIGNvb3JkX3QgKiB0bywJLyogY29vcmQgb2YgdGhlIGxhc3QgdW5pdC9pdGVtIHRo
YXQgd2lsbCBiZSBlbGltaW5hdGVkICovCisJCSAgICAgIGNvbnN0IHJlaXNlcjRfa2V5ICogZnJv
bV9rZXksCS8qIGZpcnN0IGtleSB0byBiZSByZW1vdmVkICovCisJCSAgICAgIGNvbnN0IHJlaXNl
cjRfa2V5ICogdG9fa2V5LAkvKiBsYXN0IGtleSB0byBiZSByZW1vdmVkICovCisJCSAgICAgIHJl
aXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwJLyogc21hbGxlc3Qga2V5IGFjdHVhbGx5IHJl
bW92ZWQgKi8KKwkJICAgICAgem5vZGUgKiBsb2NrZWRfbGVmdF9uZWlnaGJvciwJLyogdGhpcyBp
cyBzZXQgd2hlbiBraWxsX25vZGVfY29udGVudCBpcyBjYWxsZWQgd2l0aCBsZWZ0IG5laWdoYm9y
CisJCQkJCQkJICogbG9ja2VkIChpbiBzcXVhbGxvY19yaWdodF90d2lnX2N1dCwgbmFtZWx5KSAq
LworCQkgICAgICBzdHJ1Y3QgaW5vZGUgKmlub2RlLAkvKiBpbm9kZSBvZiBmaWxlIHdob3NlIGl0
ZW0gKG9yIGl0cyBwYXJ0KSBpcyB0byBiZSBraWxsZWQuIFRoaXMgaXMgbmVjZXNzYXJ5IHRvCisJ
CQkJCQkgICBpbnZhbGlkYXRlIHBhZ2VzIHRvZ2V0aGVyIHdpdGggaXRlbSBwb2ludGluZyB0byB0
aGVtICovCisJCSAgICAgIGludCB0cnVuY2F0ZSkKK3sJCQkJLyogdGhpcyBjYWxsIGlzIG1hZGUg
Zm9yIGZpbGUgdHJ1bmNhdGUpICAqLworCWludCByZXN1bHQ7CisJY2FycnlfcG9vbCAqcG9vbDsK
KwljYXJyeV9sZXZlbCAqbG93ZXN0X2xldmVsOworCWNhcnJ5X2tpbGxfZGF0YSAqa2RhdGE7CisJ
bG9ja19oYW5kbGUgKmxlZnRfY2hpbGQ7CisJbG9ja19oYW5kbGUgKnJpZ2h0X2NoaWxkOworCWNh
cnJ5X29wICpvcDsKKworCWFzc2VydCgidW1rYS0zMjgiLCBmcm9tICE9IE5VTEwpOworCWFzc2Vy
dCgidnMtMzE2IiwgIW5vZGVfaXNfZW1wdHkoZnJvbS0+bm9kZSkpOworCWFzc2VydCgibmlraXRh
LTE4MTIiLCBjb29yZF9pc19leGlzdGluZ191bml0KGZyb20pCisJICAgICAgICYmIGNvb3JkX2lz
X2V4aXN0aW5nX3VuaXQodG8pKTsKKworCS8qIGFsbG9jYXRlIGNhcnJ5X3Bvb2wsIDMgY2Fycnlf
bGV2ZWwtcywgY2Fycnlfa2lsbF9kYXRhIGFuZCBzdHJ1Y3R1cmVzIGZvciBraWxsX2hvb2tfZXh0
ZW50ICovCisJcG9vbCA9IGluaXRfY2FycnlfcG9vbChzaXplb2YoKnBvb2wpICsgMyAqIHNpemVv
ZigqbG93ZXN0X2xldmVsKSArCisJCQkgICAgICAgc2l6ZW9mKGNhcnJ5X2tpbGxfZGF0YSkgKwor
CQkJICAgICAgIDIgKiBzaXplb2YobG9ja19oYW5kbGUpICsKKwkJCSAgICAgICA1ICogc2l6ZW9m
KHJlaXNlcjRfa2V5KSArIDIgKiBzaXplb2YoY29vcmRfdCkpOworCWlmIChJU19FUlIocG9vbCkp
CisJCXJldHVybiBQVFJfRVJSKHBvb2wpOworCisJbG93ZXN0X2xldmVsID0gKGNhcnJ5X2xldmVs
ICopIChwb29sICsgMSk7CisJaW5pdF9jYXJyeV9sZXZlbChsb3dlc3RfbGV2ZWwsIHBvb2wpOwor
CisJa2RhdGEgPSAoY2Fycnlfa2lsbF9kYXRhICopIChsb3dlc3RfbGV2ZWwgKyAzKTsKKwlsZWZ0
X2NoaWxkID0gKGxvY2tfaGFuZGxlICopIChrZGF0YSArIDEpOworCXJpZ2h0X2NoaWxkID0gbGVm
dF9jaGlsZCArIDE7CisKKwlpbml0X2xoKGxlZnRfY2hpbGQpOworCWluaXRfbGgocmlnaHRfY2hp
bGQpOworCisJa2RhdGEtPnBhcmFtcy5mcm9tID0gZnJvbTsKKwlrZGF0YS0+cGFyYW1zLnRvID0g
dG87CisJa2RhdGEtPnBhcmFtcy5mcm9tX2tleSA9IGZyb21fa2V5OworCWtkYXRhLT5wYXJhbXMu
dG9fa2V5ID0gdG9fa2V5OworCWtkYXRhLT5wYXJhbXMuc21hbGxlc3RfcmVtb3ZlZCA9IHNtYWxs
ZXN0X3JlbW92ZWQ7CisJa2RhdGEtPnBhcmFtcy50cnVuY2F0ZSA9IHRydW5jYXRlOworCWtkYXRh
LT5mbGFncyA9IDA7CisJa2RhdGEtPmlub2RlID0gaW5vZGU7CisJa2RhdGEtPmxlZnQgPSBsZWZ0
X2NoaWxkOworCWtkYXRhLT5yaWdodCA9IHJpZ2h0X2NoaWxkOworCS8qIG1lbW9yeSBmb3IgNSBy
ZWlzZXI0X2tleSBhbmQgMiBjb29yZF90IHdpbGwgYmUgdXNlZCBpbiBraWxsX2hvb2tfZXh0ZW50
ICovCisJa2RhdGEtPmJ1ZiA9IChjaGFyICopKHJpZ2h0X2NoaWxkICsgMSk7CisKKwlpZiAoem5v
ZGVfZ2V0X2xldmVsKGZyb20tPm5vZGUpID09IFRXSUdfTEVWRUwgJiYgaXRlbV9pc19leHRlbnQo
ZnJvbSkpIHsKKwkJLyogbGVmdCBjaGlsZCBvZiBleHRlbnQgaXRlbSBtYXkgaGF2ZSB0byBnZXQg
dXBkYXRlZCByaWdodAorCQkgICBkZWxpbWl0aW5nIGtleSBhbmQgdG8gZ2V0IGxpbmtlZCB3aXRo
IHJpZ2h0IGNoaWxkIG9mIGV4dGVudAorCQkgICBAZnJvbSBpZiBpdCB3aWxsIGJlIHJlbW92ZWQg
Y29tcGxldGVseSAqLworCQlyZXN1bHQgPSBwcmVwYXJlX3R3aWdfa2lsbChrZGF0YSwgbG9ja2Vk
X2xlZnRfbmVpZ2hib3IpOworCQlpZiAocmVzdWx0KSB7CisJCQlkb25lX2NoaWxkcmVuKGtkYXRh
KTsKKwkJCWRvbmVfY2FycnlfcG9vbChwb29sKTsKKwkJCXJldHVybiByZXN1bHQ7CisJCX0KKwl9
CisKKwlvcCA9IHJlaXNlcjRfcG9zdF9jYXJyeShsb3dlc3RfbGV2ZWwsIENPUF9DVVQsIGZyb20t
Pm5vZGUsIDApOworCWlmIChJU19FUlIob3ApIHx8IChvcCA9PSBOVUxMKSkgeworCQlkb25lX2No
aWxkcmVuKGtkYXRhKTsKKwkJZG9uZV9jYXJyeV9wb29sKHBvb2wpOworCQlyZXR1cm4gUkVURVJS
KG9wID8gUFRSX0VSUihvcCkgOiAtRUlPKTsKKwl9CisKKwlvcC0+dS5jdXRfb3Jfa2lsbC5pc19j
dXQgPSAwOworCW9wLT51LmN1dF9vcl9raWxsLnUua2lsbCA9IGtkYXRhOworCisJcmVzdWx0ID0g
cmVpc2VyNF9jYXJyeShsb3dlc3RfbGV2ZWwsIE5VTEwpOworCisJZG9uZV9jaGlsZHJlbihrZGF0
YSk7CisJZG9uZV9jYXJyeV9wb29sKHBvb2wpOworCXJldHVybiByZXN1bHQ7Cit9CisKK3ZvaWQK
K2Zha2Vfa2lsbF9ob29rX3RhaWwoc3RydWN0IGlub2RlICppbm9kZSwgbG9mZl90IHN0YXJ0LCBs
b2ZmX3QgZW5kLCBpbnQgdHJ1bmNhdGUpCit7CisJaWYgKHJlaXNlcjRfaW5vZGVfZ2V0X2ZsYWco
aW5vZGUsIFJFSVNFUjRfSEFTX01NQVApKSB7CisJCXBnb2ZmX3Qgc3RhcnRfcGcsIGVuZF9wZzsK
KworCQlzdGFydF9wZyA9IHN0YXJ0ID4+IFBBR0VfU0hJRlQ7CisJCWVuZF9wZyA9IChlbmQgLSAx
KSA+PiBQQUdFX1NISUZUOworCisJCWlmICgoc3RhcnQgJiAoUEFHRV9TSVpFIC0gMSkpID09IDAp
IHsKKwkJCS8qCisJCQkgKiBraWxsIHVwIHRvIHRoZSBwYWdlIGJvdW5kYXJ5LgorCQkJICovCisJ
CQlhc3NlcnQoInZzLTEyMzQ1NiIsIHN0YXJ0X3BnID09IGVuZF9wZyk7CisJCQlyZWlzZXI0X2lu
dmFsaWRhdGVfcGFnZXMoaW5vZGUtPmlfbWFwcGluZywgc3RhcnRfcGcsIDEsCisJCQkJCQkgdHJ1
bmNhdGUpOworCQl9IGVsc2UgaWYgKHN0YXJ0X3BnICE9IGVuZF9wZykgeworCQkJLyoKKwkJCSAq
IHBhZ2UgYm91bmRhcnkgaXMgd2l0aGluIGtpbGxlZCBwb3J0aW9uIG9mIG5vZGUuCisJCQkgKi8K
KwkJCWFzc2VydCgidnMtNjU0MzIxIiwgZW5kX3BnIC0gc3RhcnRfcGcgPT0gMSk7CisJCQlyZWlz
ZXI0X2ludmFsaWRhdGVfcGFnZXMoaW5vZGUtPmlfbWFwcGluZywgZW5kX3BnLAorCQkJCQkJIGVu
ZF9wZyAtIHN0YXJ0X3BnLCAxKTsKKwkJfQorCX0KKwlpbm9kZV9zdWJfYnl0ZXMoaW5vZGUsIGVu
ZCAtIHN0YXJ0KTsKK30KKworLyoqCisgKiBEZWxldGUgd2hvbGUgQG5vZGUgZnJvbSB0aGUgcmVp
c2VyNCB0cmVlIHdpdGhvdXQgbG9hZGluZyBpdC4KKyAqCisgKiBAbGVmdDogbG9ja2VkIGxlZnQg
bmVpZ2hib3IsCisgKiBAbm9kZTogbm9kZSB0byBiZSBkZWxldGVkLAorICogQHNtYWxsZXN0X3Jl
bW92ZWQ6IGxlZnRtb3N0IGtleSBvZiBkZWxldGVkIG5vZGUsCisgKiBAb2JqZWN0OiBpbm9kZSBw
b2ludGVyLCBpZiB3ZSB0cnVuY2F0ZSBhIGZpbGUgYm9keS4KKyAqIEB0cnVuY2F0ZTogdHJ1ZSBp
ZiBjYWxsZWQgZm9yIGZpbGUgdHJ1bmNhdGUuCisgKgorICogQHJldHVybjogMCBpZiBzdWNjZXNz
LCBlcnJvciBjb2RlIG90aGVyd2lzZS4KKyAqCisgKiBOT1RFOiBpZiBAb2JqZWN0IT1OVUxMIHdl
IGFzc3VtZSB0aGF0IEBzbWFsbGVzdF9yZW1vdmVkICE9IE5VTEwgYW5kIGl0CisgKiBjb250YWlu
cyB0aGUgcmlnaHQgdmFsdWUgb2YgdGhlIHNtYWxsZXN0IHJlbW92ZWQga2V5IGZyb20gdGhlIHBy
ZXZpb3VzCisgKiBjdXRfd29ya2VyKCkgaXRlcmF0aW9uLiAgVGhpcyBpcyBuZWVkZWQgZm9yIHBy
b3BlciBhY2NvdW50aW5nIG9mCisgKiAiaV9ibG9ja3MiIGFuZCAiaV9ieXRlcyIgZmllbGRzIG9m
IHRoZSBAb2JqZWN0LgorICovCitpbnQgcmVpc2VyNF9kZWxldGVfbm9kZSh6bm9kZSAqIG5vZGUs
IHJlaXNlcjRfa2V5ICogc21hbGxlc3RfcmVtb3ZlZCwKKwkJCXN0cnVjdCBpbm9kZSAqb2JqZWN0
LCBpbnQgdHJ1bmNhdGUpCit7CisJbG9ja19oYW5kbGUgcGFyZW50X2xvY2s7CisJY29vcmRfdCBj
dXRfZnJvbTsKKwljb29yZF90IGN1dF90bzsKKwlyZWlzZXI0X3RyZWUgKnRyZWU7CisJaW50IHJl
dDsKKworCWFzc2VydCgiemFtLTkzNyIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tOTMz
Iiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKG5vZGUpKTsKKwlhc3NlcnQoInphbS05OTkiLCBzbWFs
bGVzdF9yZW1vdmVkICE9IE5VTEwpOworCisJaW5pdF9saCgmcGFyZW50X2xvY2spOworCisJcmV0
ID0gcmVpc2VyNF9nZXRfcGFyZW50KCZwYXJlbnRfbG9jaywgbm9kZSwgWk5PREVfV1JJVEVfTE9D
Syk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCWFzc2VydCgiemFtLTkzNCIsICF6bm9k
ZV9hYm92ZV9yb290KHBhcmVudF9sb2NrLm5vZGUpKTsKKworCXJldCA9IHpsb2FkKHBhcmVudF9s
b2NrLm5vZGUpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbGVkX25venJlbHNlOworCisJcmV0ID0g
ZmluZF9jaGlsZF9wdHIocGFyZW50X2xvY2subm9kZSwgbm9kZSwgJmN1dF9mcm9tKTsKKwlpZiAo
cmV0KQorCQlnb3RvIGZhaWxlZDsKKworCS8qIGRlY3JlbWVudCBjaGlsZCBjb3VudGVyIGFuZCBz
ZXQgcGFyZW50IHBvaW50ZXIgdG8gTlVMTCBiZWZvcmUKKwkgICBkZWxldGluZyB0aGUgbGlzdCBm
cm9tIHBhcmVudCBub2RlIGJlY2F1c2Ugb2YgY2hlY2tzIGluCisJICAgaW50ZXJuYWxfa2lsbF9p
dGVtX2hvb2sgKHdlIGNhbiBkZWxldGUgdGhlIGxhc3QgaXRlbSBmcm9tIHRoZSBwYXJlbnQKKwkg
ICBub2RlLCB0aGUgcGFyZW50IG5vZGUgaXMgZ29pbmcgdG8gYmUgZGVsZXRlZCBhbmQgaXRzIGNf
Y291bnQgc2hvdWxkCisJICAgYmUgemVybykuICovCisKKwl0cmVlID0gem5vZGVfZ2V0X3RyZWUo
bm9kZSk7CisJd3JpdGVfbG9ja190cmVlKHRyZWUpOworCWluaXRfcGFyZW50X2Nvb3JkKCZub2Rl
LT5pbl9wYXJlbnQsIE5VTEwpOworCS0tcGFyZW50X2xvY2subm9kZS0+Y19jb3VudDsKKwl3cml0
ZV91bmxvY2tfdHJlZSh0cmVlKTsKKworCWFzc2VydCgiemFtLTk4OSIsIGl0ZW1faXNfaW50ZXJu
YWwoJmN1dF9mcm9tKSk7CisKKwkvKiBAbm9kZSBzaG91bGQgYmUgZGVsZXRlZCBhZnRlciB1bmxv
Y2tpbmcuICovCisJWkZfU0VUKG5vZGUsIEpOT0RFX0hFQVJEX0JBTlNIRUUpOworCisJLyogcmVt
b3ZlIGEgcG9pbnRlciBmcm9tIHRoZSBwYXJlbnQgbm9kZSB0byB0aGUgbm9kZSBiZWluZyBkZWxl
dGVkLiAqLworCWNvb3JkX2R1cCgmY3V0X3RvLCAmY3V0X2Zyb20pOworCS8qIEZJWE1FOiBzaG91
bGRuJ3QgdGhpcyBiZSBraWxsX25vZGVfY29udGVudCAqLworCXJldCA9IGN1dF9ub2RlX2NvbnRl
bnQoJmN1dF9mcm9tLCAmY3V0X3RvLCBOVUxMLCBOVUxMLCBOVUxMKTsKKwlpZiAocmV0KQorCQkv
KiBGSVhNRShaYW0pOiBTaG91bGQgd2UgcmUtY29ubmVjdCB0aGUgbm9kZSB0byBpdHMgcGFyZW50
IGlmCisJCSAqIGN1dF9ub2RlIGZhaWxzPyAqLworCQlnb3RvIGZhaWxlZDsKKworCXsKKwkJcmVp
c2VyNF90cmVlICp0cmVlID0gY3VycmVudF90cmVlOworCQlfX3U2NCBzdGFydF9vZmZzZXQgPSAw
LCBlbmRfb2Zmc2V0ID0gMDsKKworCQlyZWFkX2xvY2tfdHJlZSh0cmVlKTsKKwkJd3JpdGVfbG9j
a19kayh0cmVlKTsKKwkJaWYgKG9iamVjdCkgeworCQkJLyogV2UgdXNlIEBzbWFsbGVzdF9yZW1v
dmVkIGFuZCB0aGUgbGVmdCBkZWxpbWl0aW5nIG9mCisJCQkgKiB0aGUgY3VycmVudCBub2RlIGZv
ciBAb2JqZWN0LT5pX2Jsb2NrcywgaV9ieXRlcworCQkJICogY2FsY3VsYXRpb24uICBXZSBhc3N1
bWUgdGhhdCB0aGUgaXRlbXMgYWZ0ZXIgdGhlCisJCQkgKiAqQHNtYWxsZXN0X3JlbW92ZWQga2V5
IGhhdmUgYmVlbiBkZWxldGVkIGZyb20gdGhlCisJCQkgKiBmaWxlIGJvZHkuICovCisJCQlzdGFy
dF9vZmZzZXQgPSBnZXRfa2V5X29mZnNldCh6bm9kZV9nZXRfbGRfa2V5KG5vZGUpKTsKKwkJCWVu
ZF9vZmZzZXQgPSBnZXRfa2V5X29mZnNldChzbWFsbGVzdF9yZW1vdmVkKTsKKwkJfQorCisJCWFz
c2VydCgiemFtLTEwMjEiLCB6bm9kZV9pc19jb25uZWN0ZWQobm9kZSkpOworCQlpZiAobm9kZS0+
bGVmdCkKKwkJCXpub2RlX3NldF9yZF9rZXkobm9kZS0+bGVmdCwgem5vZGVfZ2V0X3JkX2tleShu
b2RlKSk7CisKKwkJKnNtYWxsZXN0X3JlbW92ZWQgPSAqem5vZGVfZ2V0X2xkX2tleShub2RlKTsK
KworCQl3cml0ZV91bmxvY2tfZGsodHJlZSk7CisJCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7CisK
KwkJaWYgKG9iamVjdCkgeworCQkJLyogd2UgdXNlZCB0byBwZXJmb3JtIGFjdGlvbnMgd2hpY2gg
YXJlIHRvIGJlIHBlcmZvcm1lZCBvbiBpdGVtcyBvbiB0aGVpciByZW1vdmFsIGZyb20gdHJlZSBp
bgorCQkJICAgc3BlY2lhbCBpdGVtIG1ldGhvZCAtIGtpbGxfaG9vay4gSGVyZSBmb3Igb3B0aW1p
emF0aW9uIHJlYXNvbnMgd2UgYXZvaWQgcmVhZGluZyBub2RlCisJCQkgICBjb250YWluaW5nIGl0
ZW0gd2UgcmVtb3ZlIGFuZCBjYW4gbm90IGNhbGwgaXRlbSdzIGtpbGwgaG9vay4gSW5zdGVhZCB3
ZSBjYWxsIGZ1bmN0aW9uIHdoaWNoCisJCQkgICBkb2VzIGV4YWN0bHkgdGhlIHNhbWUgdGhpbmdz
IGFzIHRhaWwga2lsbCBob29rIGluIGFzc3VtcHRpb24gdGhhdCBub2RlIHdlIGF2b2lkIHJlYWRp
bmcKKwkJCSAgIGNvbnRhaW5zIG9ubHkgb25lIGl0ZW0gYW5kIHRoYXQgaXRlbSBpcyBhIHRhaWwg
b25lLiAqLworCQkJZmFrZV9raWxsX2hvb2tfdGFpbChvYmplY3QsIHN0YXJ0X29mZnNldCwgZW5k
X29mZnNldCwKKwkJCQkJICAgIHRydW5jYXRlKTsKKwkJfQorCX0KKyAgICAgIGZhaWxlZDoKKwl6
cmVsc2UocGFyZW50X2xvY2subm9kZSk7CisgICAgICBmYWlsZWRfbm96cmVsc2U6CisJZG9uZV9s
aCgmcGFyZW50X2xvY2spOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBjYW5fZGVs
ZXRlKGNvbnN0IHJlaXNlcjRfa2V5ICprZXksIHpub2RlICpub2RlKQoreworCWludCByZXN1bHQ7
CisKKwlyZWFkX2xvY2tfZGsoY3VycmVudF90cmVlKTsKKwlyZXN1bHQgPSBrZXlsZShrZXksIHpu
b2RlX2dldF9sZF9rZXkobm9kZSkpOworCXJlYWRfdW5sb2NrX2RrKGN1cnJlbnRfdHJlZSk7CisJ
cmV0dXJuIHJlc3VsdDsKK30KKworLyoqCisgKiBUaGlzIHN1YnJvdXRpbmUgaXMgbm90IG9wdGlt
YWwgYnV0IGltcGxlbWVudGF0aW9uIHNlZW1zIHRvCisgKiBiZSBlYXNpZXIpLgorICoKKyAqIEB0
YXA6IHRoZSBwb2ludCBkZWxldGlvbiBwcm9jZXNzIGJlZ2lucyBmcm9tLAorICogQGZyb21fa2V5
OiB0aGUgYmVnaW5uaW5nIG9mIHRoZSBkZWxldGVkIGtleSByYW5nZSwKKyAqIEB0b19rZXk6IHRo
ZSBlbmQgb2YgdGhlIGRlbGV0ZWQga2V5IHJhbmdlLAorICogQHNtYWxsZXN0X3JlbW92ZWQ6IHRo
ZSBzbWFsbGVzdCByZW1vdmVkIGtleSwKKyAqIEB0cnVuY2F0ZTogdHJ1ZSBpZiBjYWxsZWQgZm9y
IGZpbGUgdHJ1bmNhdGUuCisgKiBAcHJvZ3Jlc3M6IHJldHVybiB0cnVlIGlmIGEgcHJvZ3Jlc3Mg
aW4gZmlsZSBpdGVtcyBkZWxldGlvbnMgd2FzIG1hZGUsCisgKiAgICAgICAgICAgIEBzbWFsbGVz
dF9yZW1vdmVkIHZhbHVlIGlzIGFjdHVhbCBpbiB0aGF0IGNhc2UuCisgKgorICogQHJldHVybjog
MCBpZiBzdWNjZXNzLCBlcnJvciBjb2RlIG90aGVyd2lzZSwgLUVfUkVQRUFUIG1lYW5zIHRoYXQg
bG9uZworICogcmVpc2VyNF9jdXRfdHJlZSBvcGVyYXRpb24gd2FzIGludGVycnVwdGVkIGZvciBh
bGxvd2luZyBhdG9tIGNvbW1pdC4KKyAqLworaW50CitjdXRfdHJlZV93b3JrZXJfY29tbW9uKHRh
cF90ICogdGFwLCBjb25zdCByZWlzZXI0X2tleSAqIGZyb21fa2V5LAorCQkgICAgICAgY29uc3Qg
cmVpc2VyNF9rZXkgKiB0b19rZXksCisJCSAgICAgICByZWlzZXI0X2tleSAqIHNtYWxsZXN0X3Jl
bW92ZWQsIHN0cnVjdCBpbm9kZSAqb2JqZWN0LAorCQkgICAgICAgaW50IHRydW5jYXRlLCBpbnQg
KnByb2dyZXNzKQoreworCWxvY2tfaGFuZGxlIG5leHRfbm9kZV9sb2NrOworCWNvb3JkX3QgbGVm
dF9jb29yZDsKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJ6YW0tOTMxIiwgdGFwLT5jb29yZC0+
bm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS05MzIiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQo
dGFwLT5jb29yZC0+bm9kZSkpOworCisJKnByb2dyZXNzID0gMDsKKwlpbml0X2xoKCZuZXh0X25v
ZGVfbG9jayk7CisKKwl3aGlsZSAoMSkgeworCQl6bm9kZSAqbm9kZTsJLyogbm9kZSBmcm9tIHdo
aWNoIGl0ZW1zIGFyZSBjdXQgKi8KKwkJbm9kZV9wbHVnaW4gKm5wbHVnOwkvKiBub2RlIHBsdWdp
biBmb3IgQG5vZGUgKi8KKworCQlub2RlID0gdGFwLT5jb29yZC0+bm9kZTsKKworCQkvKiBNb3Zl
IG5leHRfbm9kZV9sb2NrIHRvIHRoZSBuZXh0IG5vZGUgb24gdGhlIGxlZnQuICovCisJCXJlc3Vs
dCA9CisJCSAgICByZWlzZXI0X2dldF9sZWZ0X25laWdoYm9yKCZuZXh0X25vZGVfbG9jaywgbm9k
ZSwKKwkJCQkJICAgICAgWk5PREVfV1JJVEVfTE9DSywKKwkJCQkJICAgICAgR05fQ0FOX1VTRV9V
UFBFUl9MRVZFTFMpOworCQlpZiAocmVzdWx0ICE9IDAgJiYgcmVzdWx0ICE9IC1FX05PX05FSUdI
Qk9SKQorCQkJYnJlYWs7CisJCS8qIENoZWNrIGNhbiB3ZSBkZWxldGUgdGhlIG5vZGUgYXMgYSB3
aG9sZS4gKi8KKwkJaWYgKCpwcm9ncmVzcyAmJiB6bm9kZV9nZXRfbGV2ZWwobm9kZSkgPT0gTEVB
Rl9MRVZFTCAmJgorCQkgICAgY2FuX2RlbGV0ZShmcm9tX2tleSwgbm9kZSkpIHsKKwkJCXJlc3Vs
dCA9IHJlaXNlcjRfZGVsZXRlX25vZGUobm9kZSwgc21hbGxlc3RfcmVtb3ZlZCwKKwkJCQkJCSAg
ICAgb2JqZWN0LCB0cnVuY2F0ZSk7CisJCX0gZWxzZSB7CisJCQlyZXN1bHQgPSByZWlzZXI0X3Rh
cF9sb2FkKHRhcCk7CisJCQlpZiAocmVzdWx0KQorCQkJCXJldHVybiByZXN1bHQ7CisKKwkJCS8q
IFByZXBhcmUgdGhlIHNlY29uZCAocmlnaHQpIHBvaW50IGZvciBjdXRfbm9kZSgpICovCisJCQlp
ZiAoKnByb2dyZXNzKQorCQkJCWNvb3JkX2luaXRfbGFzdF91bml0KHRhcC0+Y29vcmQsIG5vZGUp
OworCisJCQllbHNlIGlmIChpdGVtX3BsdWdpbl9ieV9jb29yZCh0YXAtPmNvb3JkKS0+Yi5sb29r
dXAgPT0KKwkJCQkgTlVMTCkKKwkJCQkvKiBzZXQgcmlnaHRtb3N0IHVuaXQgZm9yIHRoZSBpdGVt
cyB3aXRob3V0IGxvb2t1cCBtZXRob2QgKi8KKwkJCQl0YXAtPmNvb3JkLT51bml0X3BvcyA9CisJ
CQkJICAgIGNvb3JkX2xhc3RfdW5pdF9wb3ModGFwLT5jb29yZCk7CisKKwkJCW5wbHVnID0gbm9k
ZS0+bnBsdWc7CisKKwkJCWFzc2VydCgidnMtNjg2IiwgbnBsdWcpOworCQkJYXNzZXJ0KCJ2cy02
ODciLCBucGx1Zy0+bG9va3VwKTsKKworCQkJLyogbGVmdF9jb29yZCBpcyBsZWZ0bW9zdCB1bml0
IGN1dCBmcm9tIEBub2RlICovCisJCQlyZXN1bHQgPSBucGx1Zy0+bG9va3VwKG5vZGUsIGZyb21f
a2V5LAorCQkJCQkgICAgICAgRklORF9NQVhfTk9UX01PUkVfVEhBTiwKKwkJCQkJICAgICAgICZs
ZWZ0X2Nvb3JkKTsKKworCQkJaWYgKElTX0NCS0VSUihyZXN1bHQpKQorCQkJCWJyZWFrOworCisJ
CQkvKiBhZGp1c3QgY29vcmRpbmF0ZXMgc28gdGhhdCB0aGV5IGFyZSBzZXQgdG8gZXhpc3Rpbmcg
dW5pdHMgKi8KKwkJCWlmIChjb29yZF9zZXRfdG9fcmlnaHQoJmxlZnRfY29vcmQpCisJCQkgICAg
fHwgY29vcmRfc2V0X3RvX2xlZnQodGFwLT5jb29yZCkpIHsKKwkJCQlyZXN1bHQgPSAwOworCQkJ
CWJyZWFrOworCQkJfQorCisJCQlpZiAoY29vcmRfY29tcGFyZSgmbGVmdF9jb29yZCwgdGFwLT5j
b29yZCkgPT0KKwkJCSAgICBDT09SRF9DTVBfT05fUklHSFQpIHsKKwkJCQkvKiBrZXlzIGZyb20g
QGZyb21fa2V5IHRvIEB0b19rZXkgYXJlIG5vdCBpbiB0aGUgdHJlZSAqLworCQkJCXJlc3VsdCA9
IDA7CisJCQkJYnJlYWs7CisJCQl9CisKKwkJCWlmIChsZWZ0X2Nvb3JkLml0ZW1fcG9zICE9IHRh
cC0+Y29vcmQtPml0ZW1fcG9zKSB7CisJCQkJLyogZG8gbm90IGFsbG93IHRvIGN1dCBtb3JlIHRo
YW4gb25lIGl0ZW0uIEl0IGlzIGFkZGVkIHRvIHNvbHZlIHByb2JsZW0gb2YgdHJ1bmNhdGluZwor
CQkJCSAgIHBhcnRpYWxseSBjb252ZXJ0ZWQgZmlsZXMuIElmIGZpbGUgaXMgcGFydGlhbGx5IGNv
bnZlcnRlZCB0aGVyZSBtYXkgZXhpc3QgYSB0d2lnIG5vZGUKKwkJCQkgICBjb250YWluaW5nIGJv
dGggaW50ZXJuYWwgaXRlbSBvciBpdGVtcyBwb2ludGluZyB0byBsZWFmIG5vZGVzIHdpdGggZm9y
bWF0dGluZyBpdGVtcworCQkJCSAgIGFuZCBleHRlbnQgaXRlbS4gV2UgZG8gbm90IHdhbnQgdG8g
a2lsbCBpbnRlcm5hbCBpdGVtcyBiZWluZyBhdCB0d2lnIG5vZGUgaGVyZQorCQkJCSAgIGJlY2F1
c2UgY3V0X3RyZWVfd29ya2VyIGFzc3VtZXMga2lsbGluZyB0aGVtIGZyb20gbGV2ZWwgbGV2ZWwg
Ki8KKwkJCQljb29yZF9kdXAoJmxlZnRfY29vcmQsIHRhcC0+Y29vcmQpOworCQkJCWFzc2VydCgi
dnMtMTY1MiIsCisJCQkJICAgICAgIGNvb3JkX2lzX2V4aXN0aW5nX3VuaXQoJmxlZnRfY29vcmQp
KTsKKwkJCQlsZWZ0X2Nvb3JkLnVuaXRfcG9zID0gMDsKKwkJCX0KKworCQkJLyogY3V0IGRhdGEg
ZnJvbSBvbmUgbm9kZSAqLworCQkJLyogKnNtYWxsZXN0X3JlbW92ZWQgPSAqcmVpc2VyNF9taW5f
a2V5KCk7ICovCisJCQlyZXN1bHQgPQorCQkJICAgIGtpbGxfbm9kZV9jb250ZW50KCZsZWZ0X2Nv
b3JkLCB0YXAtPmNvb3JkLCBmcm9tX2tleSwKKwkJCQkJICAgICAgdG9fa2V5LCBzbWFsbGVzdF9y
ZW1vdmVkLAorCQkJCQkgICAgICBuZXh0X25vZGVfbG9jay5ub2RlLCBvYmplY3QsCisJCQkJCSAg
ICAgIHRydW5jYXRlKTsKKwkJCXJlaXNlcjRfdGFwX3JlbHNlKHRhcCk7CisJCX0KKwkJaWYgKHJl
c3VsdCkKKwkJCWJyZWFrOworCisJCSsrKCpwcm9ncmVzcyk7CisKKwkJLyogQ2hlY2sgd2hldGhl
ciBhbGwgaXRlbXMgd2l0aCBrZXlzID49IGZyb21fa2V5IHdlcmUgcmVtb3ZlZAorCQkgKiBmcm9t
IHRoZSB0cmVlLiAqLworCQlpZiAoa2V5bGUoc21hbGxlc3RfcmVtb3ZlZCwgZnJvbV9rZXkpKQor
CQkJLyogcmVzdWx0ID0gMDsgKi8KKwkJCWJyZWFrOworCisJCWlmIChuZXh0X25vZGVfbG9jay5u
b2RlID09IE5VTEwpCisJCQlicmVhazsKKworCQlyZXN1bHQgPSByZWlzZXI0X3RhcF9tb3ZlKHRh
cCwgJm5leHRfbm9kZV9sb2NrKTsKKwkJZG9uZV9saCgmbmV4dF9ub2RlX2xvY2spOworCQlpZiAo
cmVzdWx0KQorCQkJYnJlYWs7CisKKwkJLyogQnJlYWsgbG9uZyByZWlzZXI0X2N1dF90cmVlIG9w
ZXJhdGlvbiAoZGVsZXRpb24gb2YgYSBsYXJnZQorCQkgICBmaWxlKSBpZiBhdG9tIHJlcXVpcmVz
IGNvbW1pdC4gKi8KKwkJaWYgKCpwcm9ncmVzcyA+IENVVF9UUkVFX01JTl9JVEVSQVRJT05TCisJ
CSAgICAmJiBjdXJyZW50X2F0b21fc2hvdWxkX2NvbW1pdCgpKSB7CisJCQlyZXN1bHQgPSAtRV9S
RVBFQVQ7CisJCQlicmVhazsKKwkJfQorCX0KKwlkb25lX2xoKCZuZXh0X25vZGVfbG9jayk7CisJ
LyogYXNzZXJ0KCJ2cy0zMDEiLCAha2V5ZXEoJnNtYWxsZXN0X3JlbW92ZWQsIHJlaXNlcjRfbWlu
X2tleSgpKSk7ICovCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogdGhlcmUgaXMgYSBmdW5kYW1l
bnRhbCBwcm9ibGVtIHdpdGggb3B0aW1pemluZyBkZWxldGVzOiBWRlMgZG9lcyBpdAorICAgb25l
IGZpbGUgYXQgYSB0aW1lLiAgQW5vdGhlciBwcm9ibGVtIGlzIHRoYXQgaWYgYW4gaXRlbSBjYW4g
YmUKKyAgIGFueXRoaW5nLCB0aGVuIGRlbGV0aW5nIGl0ZW1zIG11c3QgYmUgZG9uZSBvbmUgYXQg
YSB0aW1lLiAgSXQganVzdAorICAgc2VlbXMgY2xlYW4gdG8gd3JpdGVzIHRoaXMgdG8gc3BlY2lm
eSBhIGZyb20gYW5kIGEgdG8ga2V5LCBhbmQgY3V0CisgICBldmVyeXRoaW5nIGJldHdlZW4gdGhl
bSB0aG91Z2guICAqLworCisvKiB1c2UgdGhpcyBmdW5jdGlvbiB3aXRoIGNhcmUgaWYgZGVsZXRp
bmcgbW9yZSB0aGFuIHdoYXQgaXMgcGFydCBvZiBhIHNpbmdsZSBmaWxlLiAqLworLyogZG8gbm90
IHVzZSB0aGlzIHdoZW4gY3V0dGluZyBhIHNpbmdsZSBpdGVtLCBpdCBpcyBzdWJvcHRpbWFsIGZv
ciB0aGF0ICovCisKKy8qIFlvdSBhcmUgZW5jb3VyYWdlZCB0byB3cml0ZSBwbHVnaW4gc3BlY2lm
aWMgdmVyc2lvbnMgb2YgdGhpcy4gIEl0CisgICBjYW5ub3QgYmUgb3B0aW1hbCBmb3IgYWxsIHBs
dWdpbnMgYmVjYXVzZSBpdCB3b3JrcyBpdGVtIGF0IGEgdGltZSwKKyAgIGFuZCBzb21lIHBsdWdp
bnMgY291bGQgc29tZXRpbWVzIHdvcmsgbm9kZSBhdCBhIHRpbWUuIFJlZ3VsYXIgZmlsZXMKKyAg
IGhvd2V2ZXIgYXJlIG5vdCBvcHRpbWl6YWJsZSB0byB3b3JrIG5vZGUgYXQgYSB0aW1lIGJlY2F1
c2Ugb2YKKyAgIGV4dGVudHMgbmVlZGluZyB0byBmcmVlIHRoZSBibG9ja3MgdGhleSBwb2ludCB0
by4KKworICAgT3B0aW1pemF0aW9ucyBjb21wYXJlZCB0byB2MyBjb2RlOgorCisgICBJdCBkb2Vz
IG5vdCBiYWxhbmNlICh0aGF0IHRhc2sgaXMgbGVmdCB0byBtZW1vcnkgcHJlc3N1cmUgY29kZSku
CisKKyAgIE5vZGVzIGFyZSBkZWxldGVkIG9ubHkgaWYgZW1wdHkuCisKKyAgIFVzZXMgZXh0ZW50
cy4KKworICAgUGVyZm9ybXMgcmVhZC1haGVhZCBvZiBmb3JtYXR0ZWQgbm9kZXMgd2hvc2UgY29u
dGVudHMgYXJlIHBhcnQgb2YKKyAgIHRoZSBkZWxldGlvbi4KKyovCisKKy8qKgorICogRGVsZXRl
IGV2ZXJ5dGhpbmcgZnJvbSB0aGUgcmVpc2VyNCB0cmVlIGJldHdlZW4gdHdvIGtleXM6IEBmcm9t
X2tleSBhbmQKKyAqIEB0b19rZXkuCisgKgorICogQGZyb21fa2V5OiB0aGUgYmVnaW5uaW5nIG9m
IHRoZSBkZWxldGVkIGtleSByYW5nZSwKKyAqIEB0b19rZXk6IHRoZSBlbmQgb2YgdGhlIGRlbGV0
ZWQga2V5IHJhbmdlLAorICogQHNtYWxsZXN0X3JlbW92ZWQ6IHRoZSBzbWFsbGVzdCByZW1vdmVk
IGtleSwKKyAqIEBvYmplY3Q6IG93bmVyIG9mIGN1dHRpbmcgaXRlbXMuCisgKiBAdHJ1bmNhdGU6
IHRydWUgaWYgY2FsbGVkIGZvciBmaWxlIHRydW5jYXRlLgorICogQHByb2dyZXNzOiByZXR1cm4g
dHJ1ZSBpZiBhIHByb2dyZXNzIGluIGZpbGUgaXRlbXMgZGVsZXRpb25zIHdhcyBtYWRlLAorICog
ICAgICAgICAgICBAc21hbGxlc3RfcmVtb3ZlZCB2YWx1ZSBpcyBhY3R1YWwgaW4gdGhhdCBjYXNl
LgorICoKKyAqIEByZXR1cm46IDAgaWYgc3VjY2VzcywgZXJyb3IgY29kZSBvdGhlcndpc2UsIC1F
X1JFUEVBVCBtZWFucyB0aGF0IGxvbmcgY3V0X3RyZWUKKyAqIG9wZXJhdGlvbiB3YXMgaW50ZXJy
dXB0ZWQgZm9yIGFsbG93aW5nIGF0b20gY29tbWl0IC4KKyAqLworCitpbnQgcmVpc2VyNF9jdXRf
dHJlZV9vYmplY3QocmVpc2VyNF90cmVlICogdHJlZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBmcm9t
X2tleSwKKwkJCSAgICBjb25zdCByZWlzZXI0X2tleSAqIHRvX2tleSwKKwkJCSAgICByZWlzZXI0
X2tleSAqIHNtYWxsZXN0X3JlbW92ZWRfcCwKKwkJCSAgICBzdHJ1Y3QgaW5vZGUgKm9iamVjdCwg
aW50IHRydW5jYXRlLCBpbnQgKnByb2dyZXNzKQoreworCWxvY2tfaGFuZGxlIGxvY2s7CisJaW50
IHJlc3VsdDsKKwl0YXBfdCB0YXA7CisJY29vcmRfdCByaWdodF9jb29yZDsKKwlyZWlzZXI0X2tl
eSBzbWFsbGVzdF9yZW1vdmVkOworCWludCAoKmN1dF90cmVlX3dvcmtlcikgKHRhcF90ICosIGNv
bnN0IHJlaXNlcjRfa2V5ICosCisJCQkJY29uc3QgcmVpc2VyNF9rZXkgKiwgcmVpc2VyNF9rZXkg
KiwKKwkJCQlzdHJ1Y3QgaW5vZGUgKiwgaW50LCBpbnQgKik7CisJU1RPUkVfQ09VTlRFUlM7CisK
Kwlhc3NlcnQoInVta2EtMzI5IiwgdHJlZSAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMzMwIiwg
ZnJvbV9rZXkgIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTMzMSIsIHRvX2tleSAhPSBOVUxMKTsK
Kwlhc3NlcnQoInphbS05MzYiLCBrZXlsZShmcm9tX2tleSwgdG9fa2V5KSk7CisKKwlpZiAoc21h
bGxlc3RfcmVtb3ZlZF9wID09IE5VTEwpCisJCXNtYWxsZXN0X3JlbW92ZWRfcCA9ICZzbWFsbGVz
dF9yZW1vdmVkOworCisJaW5pdF9saCgmbG9jayk7CisKKwlkbyB7CisJCS8qIEZpbmQgcmlnaHRt
b3N0IGl0ZW0gdG8gY3V0IGF3YXkgZnJvbSB0aGUgdHJlZS4gKi8KKwkJcmVzdWx0ID0gcmVpc2Vy
NF9vYmplY3RfbG9va3VwKG9iamVjdCwgdG9fa2V5LCAmcmlnaHRfY29vcmQsCisJCQkJCSAgICAg
ICAmbG9jaywgWk5PREVfV1JJVEVfTE9DSywKKwkJCQkJICAgICAgIEZJTkRfTUFYX05PVF9NT1JF
X1RIQU4sCisJCQkJCSAgICAgICBUV0lHX0xFVkVMLCBMRUFGX0xFVkVMLAorCQkJCQkgICAgICAg
Q0JLX1VOSVFVRSwgTlVMTCAvKnJhX2luZm8gKi8pOworCQlpZiAocmVzdWx0ICE9IENCS19DT09S
RF9GT1VORCkKKwkJCWJyZWFrOworCQlpZiAob2JqZWN0ID09IE5VTEwKKwkJICAgIHx8IGlub2Rl
X2ZpbGVfcGx1Z2luKG9iamVjdCktPmN1dF90cmVlX3dvcmtlciA9PSBOVUxMKQorCQkJY3V0X3Ry
ZWVfd29ya2VyID0gY3V0X3RyZWVfd29ya2VyX2NvbW1vbjsKKwkJZWxzZQorCQkJY3V0X3RyZWVf
d29ya2VyID0KKwkJCSAgICBpbm9kZV9maWxlX3BsdWdpbihvYmplY3QpLT5jdXRfdHJlZV93b3Jr
ZXI7CisJCXJlaXNlcjRfdGFwX2luaXQoJnRhcCwgJnJpZ2h0X2Nvb3JkLCAmbG9jaywgWk5PREVf
V1JJVEVfTE9DSyk7CisJCXJlc3VsdCA9CisJCSAgICBjdXRfdHJlZV93b3JrZXIoJnRhcCwgZnJv
bV9rZXksIHRvX2tleSwgc21hbGxlc3RfcmVtb3ZlZF9wLAorCQkJCSAgICBvYmplY3QsIHRydW5j
YXRlLCBwcm9ncmVzcyk7CisJCXJlaXNlcjRfdGFwX2RvbmUoJnRhcCk7CisKKwkJcmVpc2VyNF9w
cmVlbXB0X3BvaW50KCk7CisKKwl9IHdoaWxlICgwKTsKKworCWRvbmVfbGgoJmxvY2spOworCisJ
aWYgKHJlc3VsdCkgeworCQlzd2l0Y2ggKHJlc3VsdCkgeworCQljYXNlIC1FX05PX05FSUdIQk9S
OgorCQkJcmVzdWx0ID0gMDsKKwkJCWJyZWFrOworCQljYXNlIC1FX0RFQURMT0NLOgorCQkJcmVz
dWx0ID0gLUVfUkVQRUFUOworCQljYXNlIC1FX1JFUEVBVDoKKwkJY2FzZSAtRU5PTUVNOgorCQlj
YXNlIC1FTk9FTlQ6CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCXdhcm5pbmcoIm5pa2l0YS0y
ODYxIiwgImZhaWx1cmU6ICVpIiwgcmVzdWx0KTsKKwkJfQorCX0KKworCUNIRUNLX0NPVU5URVJT
OworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJlcGVhdCByZWlzZXI0X2N1dF90cmVlX29iamVj
dCB1bnRpbCBldmVyeXRoaW5nIGlzIGRlbGV0ZWQuCisgKiB1bmxpa2UgY3V0X2ZpbGVfaXRlbXMs
IGl0IGRvZXMgbm90IGVuZCBjdXJyZW50IHRyYW5zYWN0aW9uIGlmIC1FX1JFUEVBVAorICogaXMg
cmV0dXJuZWQgYnkgY3V0X3RyZWVfb2JqZWN0LiAqLworaW50IHJlaXNlcjRfY3V0X3RyZWUocmVp
c2VyNF90cmVlICogdHJlZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBmcm9tLAorCQkgICAgIGNvbnN0
IHJlaXNlcjRfa2V5ICogdG8sIHN0cnVjdCBpbm9kZSAqaW5vZGUsIGludCB0cnVuY2F0ZSkKK3sK
KwlpbnQgcmVzdWx0OworCWludCBwcm9ncmVzczsKKworCWRvIHsKKwkJcmVzdWx0ID0gcmVpc2Vy
NF9jdXRfdHJlZV9vYmplY3QodHJlZSwgZnJvbSwgdG8sIE5VTEwsCisJCQkJCQkgaW5vZGUsIHRy
dW5jYXRlLCAmcHJvZ3Jlc3MpOworCX0gd2hpbGUgKHJlc3VsdCA9PSAtRV9SRVBFQVQpOworCisJ
cmV0dXJuIHJlc3VsdDsKK30KKworLyogZmluaXNoaW5nIHJlaXNlcjQgaW5pdGlhbGl6YXRpb24g
Ki8KK2ludCByZWlzZXI0X2luaXRfdHJlZShyZWlzZXI0X3RyZWUgKiB0cmVlCS8qIHBvaW50ZXIg
dG8gc3RydWN0dXJlIGJlaW5nCisJCQkJCSAqIGluaXRpYWxpemVkICovICwKKwkgICAgICBjb25z
dCByZWlzZXI0X2Jsb2NrX25yICogcm9vdF9ibG9jawkvKiBhZGRyZXNzIG9mIGEgcm9vdCBibG9j
aworCQkJCQkJCSAqIG9uIGEgZGlzayAqLyAsCisJICAgICAgdHJlZV9sZXZlbCBoZWlnaHQgLyog
aGVpZ2h0IG9mIGEgdHJlZSAqLyAsCisJICAgICAgbm9kZV9wbHVnaW4gKiBucGx1ZyAvKiBkZWZh
dWx0IG5vZGUgcGx1Z2luICovICkKK3sKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEt
MzA2IiwgdHJlZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDciLCByb290X2Jsb2NrICE9
IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMwOCIsIGhlaWdodCA+IDApOworCWFzc2VydCgibmlr
aXRhLTMwOSIsIG5wbHVnICE9IE5VTEwpOworCWFzc2VydCgiemFtLTU4NyIsIHRyZWUtPnN1cGVy
ICE9IE5VTEwpOworCWFzc2VydCgiZWR3YXJkLTE3MSIsIGdldF9jdXJyZW50X2NvbnRleHQoKSAh
PSBOVUxMKTsKKwkvKgorCSAqIFdlJ2xsIHBlcmZvcm0gY29zdGx5IG1lbW9yeSBhbGxvY2F0aW9u
cyBmb3Igem5vZGUgaGFzaCB0YWJsZSwgZXRjLgorCSAqIFNvLCBzZXQgcHJvcGVyIGFsbG9jYXRp
b24gZmxhZ3MKKwkgKi8KKwlnZXRfY3VycmVudF9jb250ZXh0KCktPmdmcF9tYXNrIHw9IChfX0dG
UF9OT1dBUk4pOworCisJdHJlZS0+cm9vdF9ibG9jayA9ICpyb290X2Jsb2NrOworCXRyZWUtPmhl
aWdodCA9IGhlaWdodDsKKwl0cmVlLT5lc3RpbWF0ZV9vbmVfaW5zZXJ0ID0gY2FsY19lc3RpbWF0
ZV9vbmVfaW5zZXJ0KGhlaWdodCk7CisJdHJlZS0+bnBsdWcgPSBucGx1ZzsKKworCXRyZWUtPnpu
b2RlX2Vwb2NoID0gMXVsbDsKKworCWNia19jYWNoZV9pbml0KCZ0cmVlLT5jYmtfY2FjaGUpOwor
CisJcmVzdWx0ID0gem5vZGVzX3RyZWVfaW5pdCh0cmVlKTsKKwlpZiAocmVzdWx0ID09IDApCisJ
CXJlc3VsdCA9IGpub2Rlc190cmVlX2luaXQodHJlZSk7CisJaWYgKHJlc3VsdCA9PSAwKSB7CisJ
CXRyZWUtPnViZXIgPSB6Z2V0KHRyZWUsICZVQkVSX1RSRUVfQUREUiwgTlVMTCwgMCwKKwkJCQkg
IHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgpKTsKKwkJaWYgKElTX0VSUih0cmVlLT51YmVyKSkg
eworCQkJcmVzdWx0ID0gUFRSX0VSUih0cmVlLT51YmVyKTsKKwkJCXRyZWUtPnViZXIgPSBOVUxM
OworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHJlbGVhc2UgcmVzb3VyY2VzIGFz
c29jaWF0ZWQgd2l0aCBAdHJlZSAqLwordm9pZCByZWlzZXI0X2RvbmVfdHJlZShyZWlzZXI0X3Ry
ZWUgKiB0cmVlIC8qIHRyZWUgdG8gcmVsZWFzZSAqLyApCit7CisJaWYgKHRyZWUgPT0gTlVMTCkK
KwkJcmV0dXJuOworCisJaWYgKHRyZWUtPnViZXIgIT0gTlVMTCkgeworCQl6cHV0KHRyZWUtPnVi
ZXIpOworCQl0cmVlLT51YmVyID0gTlVMTDsKKwl9CisJem5vZGVzX3RyZWVfZG9uZSh0cmVlKTsK
Kwlqbm9kZXNfdHJlZV9kb25lKHRyZWUpOworCWNia19jYWNoZV9kb25lKCZ0cmVlLT5jYmtfY2Fj
aGUpOworfQorCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgorICAg
Yy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1iYXNp
Yy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAgc2Ny
b2xsLXN0ZXA6IDEKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvdHJlZS5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3Ry
ZWUuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC90cmVlLmgJMTk3MC0wMS0wMSAw
MTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3RyZWUu
aAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4NDIyMjQxOSArMDEwMApAQCAtMCwwICsxLDU3NyBAQAor
LyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogVHJlZSBvcGVyYXRpb25zLiBT
ZWUgZnMvcmVpc2VyNC90cmVlLmMgZm9yIGNvbW1lbnRzICovCisKKyNpZiAhZGVmaW5lZCggX19S
RUlTRVI0X1RSRUVfSF9fICkKKyNkZWZpbmUgX19SRUlTRVI0X1RSRUVfSF9fCisKKyNpbmNsdWRl
ICJmb3J3YXJkLmgiCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisj
aW5jbHVkZSAicGx1Z2luL25vZGUvbm9kZS5oIgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW4uaCIK
KyNpbmNsdWRlICJ6bm9kZS5oIgorI2luY2x1ZGUgInRhcC5oIgorCisjaW5jbHVkZSA8bGludXgv
dHlwZXMuaD4JLyogZm9yIF9fdT8/ICAqLworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Ig
c3RydWN0IHN1cGVyX2Jsb2NrICAqLworI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5j
bHVkZSA8bGludXgvc2NoZWQuaD4JLyogZm9yIHN0cnVjdCB0YXNrX3N0cnVjdCAqLworCisvKiBm
aWN0aXZlIGJsb2NrIG51bWJlciBuZXZlciBhY3R1YWxseSB1c2VkICovCitleHRlcm4gY29uc3Qg
cmVpc2VyNF9ibG9ja19uciBVQkVSX1RSRUVfQUREUjsKKworLyogJmNia19jYWNoZV9zbG90IC0g
ZW50cnkgaW4gYSBjb29yZCBjYWNoZS4KKworICAgVGhpcyBpcyBlbnRyeSBpbiBhIGNvb3JkX2J5
X2tleSAoY2JrKSBjYWNoZSwgcmVwcmVzZW50ZWQgYnkKKyAgICZjYmtfY2FjaGUuCisKKyovCit0
eXBlZGVmIHN0cnVjdCBjYmtfY2FjaGVfc2xvdCB7CisJLyogY2FjaGVkIG5vZGUgKi8KKwl6bm9k
ZSAqbm9kZTsKKwkvKiBsaW5rYWdlIHRvIHRoZSBuZXh0IGNiayBjYWNoZSBzbG90IGluIGEgTFJV
IG9yZGVyICovCisJc3RydWN0IGxpc3RfaGVhZCBscnU7Cit9IGNia19jYWNoZV9zbG90OworCisv
KiAmY2JrX2NhY2hlIC0gY29vcmQgY2FjaGUuIFRoaXMgaXMgcGFydCBvZiByZWlzZXI0X3RyZWUu
CisKKyAgIGNia19jYWNoZSBpcyBzdXBwb3NlZCB0byBzcGVlZCB1cCB0cmVlIGxvb2t1cHMgYnkg
Y2FjaGluZyByZXN1bHRzIG9mIHJlY2VudAorICAgc3VjY2Vzc2Z1bCBsb29rdXBzICh3ZSBkb24n
dCBjYWNoZSBuZWdhdGl2ZSByZXN1bHRzIGFzIGRlbnRyeSBjYWNoZQorICAgZG9lcykuIENhY2hl
IGNvbnNpc3RzIG9mIHJlbGF0aXZlbHkgc21hbGwgbnVtYmVyIG9mIGVudHJpZXMga2VwdCBpbiBh
IExSVQorICAgb3JkZXIuIEVhY2ggZW50cnkgKCZjYmtfY2FjaGVfc2xvdCkgY29udGFpbnMgYSBw
b2ludGVyIHRvIHpub2RlLCBmcm9tCisgICB3aGljaCB3ZSBjYW4gb2J0YWluIGEgcmFuZ2Ugb2Yg
a2V5cyB0aGF0IGNvdmVyZWQgYnkgdGhpcyB6bm9kZS4gQmVmb3JlCisgICBlbWJhcmtpbmcgaW50
byByZWFsIHRyZWUgdHJhdmVyc2FsIHdlIHNjYW4gY2JrX2NhY2hlIHNsb3QgYnkgc2xvdCBhbmQg
Zm9yCisgICBlYWNoIHNsb3QgY2hlY2sgd2hldGhlciBrZXkgd2UgYXJlIGxvb2tpbmcgZm9yIGlz
IGJldHdlZW4gbWluaW1hbCBhbmQKKyAgIG1heGltYWwga2V5cyBmb3Igbm9kZSBwb2ludGVkIHRv
IGJ5IHRoaXMgc2xvdC4gSWYgbm8gbWF0Y2ggaXMgZm91bmQsIHJlYWwKKyAgIHRyZWUgdHJhdmVy
c2FsIGlzIHBlcmZvcm1lZCBhbmQgaWYgcmVzdWx0IGlzIHN1Y2Nlc3NmdWwsIGFwcHJvcHJpYXRl
IGVudHJ5CisgICBpcyBpbnNlcnRlZCBpbnRvIGNhY2hlLCBwb3NzaWJseSBwdWxsaW5nIGxlYXN0
IHJlY2VudGx5IHVzZWQgZW50cnkgb3V0IG9mCisgICBpdC4KKworICAgVHJlZSBzcGluIGxvY2sg
aXMgdXNlZCB0byBwcm90ZWN0IGNvb3JkIGNhY2hlLiBJZiBjb250ZW50aW9uIGZvciB0aGlzCisg
ICBsb2NrIHByb3ZlcyB0byBiZSB0b28gaGlnaCwgbW9yZSBmaW5lciBncmFpbmVkIGxvY2tpbmcg
Y2FuIGJlIGFkZGVkLgorCisgICBJbnZhcmlhbnRzIGludm9sdmluZyBwYXJ0cyBvZiB0aGlzIGRh
dGEtdHlwZToKKworICAgICAgW2Niay1jYWNoZS1pbnZhcmlhbnRdCisqLwordHlwZWRlZiBzdHJ1
Y3QgY2JrX2NhY2hlIHsKKwkvKiBzZXJpYWxpemF0b3IgKi8KKwlyd2xvY2tfdCBndWFyZDsKKwlp
bnQgbnJfc2xvdHM7CisJLyogaGVhZCBvZiBMUlUgbGlzdCBvZiBjYWNoZSBzbG90cyAqLworCXN0
cnVjdCBsaXN0X2hlYWQgbHJ1OworCS8qIGFjdHVhbCBhcnJheSBvZiBzbG90cyAqLworCWNia19j
YWNoZV9zbG90ICpzbG90OworfSBjYmtfY2FjaGU7CisKKy8qIGxldmVsX2xvb2t1cF9yZXN1bHQg
LSBwb3NzaWJsZSBvdXRjb21lIG9mIGxvb2tpbmcgdXAga2V5IGF0IHNvbWUgbGV2ZWwuCisgICBU
aGlzIGlzIHVzZWQgYnkgY29vcmRfYnlfa2V5IHdoZW4gdHJhdmVyc2luZyB0cmVlIGRvd253YXJk
LiAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBjb250aW51ZSB0byB0aGUgbmV4dCBsZXZlbCAqLwor
CUxPT0tVUF9DT05ULAorCS8qIGRvbmUuIEVpdGhlciByZXF1aXJlZCBpdGVtIHdhcyBmb3VuZCwg
b3Igd2UgY2FuIHByb3ZlIGl0CisJICAgZG9lc24ndCBleGlzdCwgb3Igc29tZSBlcnJvciBvY2N1
cnJlZC4gKi8KKwlMT09LVVBfRE9ORSwKKwkvKiByZXN0YXJ0IHRyYXZlcnNhbCBmcm9tIHRoZSBy
b290LiBJbmZhbW91cyAicmVwZXRpdGlvbiIuICovCisJTE9PS1VQX1JFU1QKK30gbGV2ZWxfbG9v
a3VwX3Jlc3VsdDsKKworLyogICAgVGhpcyBpcyByZXByZXNlbnRhdGlvbiBvZiBpbnRlcm5hbCBy
ZWlzZXI0IHRyZWUgd2hlcmUgYWxsIGZpbGUtc3lzdGVtCisgICBkYXRhIGFuZCBtZXRhLWRhdGEg
YXJlIHN0b3JlZC4gVGhpcyBzdHJ1Y3R1cmUgaXMgcGFzc2VkIHRvIGFsbCB0cmVlCisgICBtYW5p
cHVsYXRpb24gZnVuY3Rpb25zLiBJdCdzIGRpZmZlcmVudCBmcm9tIHRoZSBzdXBlciBibG9jayBi
ZWNhdXNlOgorICAgd2UgZG9uJ3Qgd2FudCB0byBsaW1pdCBvdXJzZWx2ZXMgdG8gc3RyaWN0bHkg
b25lIHRvIG9uZSBtYXBwaW5nCisgICBiZXR3ZWVuIHN1cGVyIGJsb2NrcyBhbmQgdHJlZXMsIGFu
ZCwgYmVjYXVzZSB0aGV5IGFyZSBsb2dpY2FsbHkKKyAgIGRpZmZlcmVudDogdGhlcmUgYXJlIHRo
aW5ncyBpbiBhIHN1cGVyIGJsb2NrIHRoYXQgaGF2ZSBubyByZWxhdGlvbiB0bworICAgdGhlIHRy
ZWUgKGJpdG1hcHMsIGpvdXJuYWxsaW5nIGFyZWEsIG1vdW50IG9wdGlvbnMsIGV0Yy4pIGFuZCB0
aGVyZQorICAgYXJlIHRoaW5ncyBpbiBhIHRyZWUgdGhhdCBiZWFyIG5vIHJlbGF0aW9uIHRvIHRo
ZSBzdXBlciBibG9jaywgbGlrZQorICAgdHJlZSBvZiB6bm9kZXMuCisKKyAgIEF0IHRoaXMgdGlt
ZSwgdGhlcmUgaXMgb25seSBvbmUgdHJlZQorICAgcGVyIGZpbGVzeXN0ZW0sIGFuZCB0aGlzIHN0
cnVjdCBpcyBwYXJ0IG9mIHRoZSBzdXBlciBibG9jay4gIFdlIG9ubHkKKyAgIGNhbGwgdGhlIHN1
cGVyIGJsb2NrIHRoZSBzdXBlciBibG9jayBmb3IgaGlzdG9yaWNhbCByZWFzb25zIChtb3N0Cisg
ICBvdGhlciBmaWxlc3lzdGVtcyBjYWxsIHRoZSBwZXIgZmlsZXN5c3RlbSBtZXRhZGF0YSB0aGUg
c3VwZXIgYmxvY2spLgorKi8KKworc3RydWN0IHJlaXNlcjRfdHJlZSB7CisJLyogYmxvY2tfbnIg
PT0gMCBpcyBmYWtlIHpub2RlLiBXcml0ZSBsb2NrIGl0LCB3aGlsZSBjaGFuZ2luZworCSAgIHRy
ZWUgaGVpZ2h0LiAqLworCS8qIGRpc2sgYWRkcmVzcyBvZiByb290IG5vZGUgb2YgYSB0cmVlICov
CisJcmVpc2VyNF9ibG9ja19uciByb290X2Jsb2NrOworCisJLyogbGV2ZWwgb2YgdGhlIHJvb3Qg
bm9kZS4gSWYgdGhpcyBpcyAxLCB0cmVlIGNvbnNpc3RzIG9mIHJvb3QKKwkgICBub2RlIG9ubHkg
Ki8KKwl0cmVlX2xldmVsIGhlaWdodDsKKworCS8qCisJICogdGhpcyBpcyBjYWNoZWQgaGVyZSBh
dm9pZCBjYWxsaW5nIHBsdWdpbnMgdGhyb3VnaCBmdW5jdGlvbgorCSAqIGRlcmVmZXJlbmNlIGFs
bCB0aGUgdGltZS4KKwkgKi8KKwlfX3U2NCBlc3RpbWF0ZV9vbmVfaW5zZXJ0OworCisJLyogY2Fj
aGUgb2YgcmVjZW50IHRyZWUgbG9va3VwIHJlc3VsdHMgKi8KKwljYmtfY2FjaGUgY2JrX2NhY2hl
OworCisJLyogaGFzaCB0YWJsZSB0byBsb29rIHVwIHpub2RlcyBieSBibG9jayBudW1iZXIuICov
CisJel9oYXNoX3RhYmxlIHpoYXNoX3RhYmxlOworCXpfaGFzaF90YWJsZSB6ZmFrZV90YWJsZTsK
KwkvKiBoYXNoIHRhYmxlIHRvIGxvb2sgdXAgam5vZGVzIGJ5IGlub2RlIGFuZCBvZmZzZXQuICov
CisJal9oYXNoX3RhYmxlIGpoYXNoX3RhYmxlOworCisJLyogbG9jayBwcm90ZWN0aW5nOgorCSAg
IC0gcGFyZW50IHBvaW50ZXJzLAorCSAgIC0gc2libGluZyBwb2ludGVycywKKwkgICAtIHpub2Rl
IGhhc2ggdGFibGUKKwkgICAtIGNvb3JkIGNhY2hlCisJICovCisJLyogTk9URTogVGhlICJnaWFu
dCIgdHJlZSBsb2NrIGNhbiBiZSByZXBsYWNlZCBieSBtb3JlIHNwaW4gbG9ja3MsCisJICAgaG9w
aW5nIHRoZXkgd2lsbCBiZSBsZXNzIGNvbnRlbnRlZC4gV2UgY2FuIHVzZSBvbmUgc3BpbiBsb2Nr
IHBlciBvbmUKKwkgICB6bm9kZSBoYXNoIGJ1Y2tldC4gIFdpdGggYWRkaW5nIG9mIHNvbWUgY29k
ZSBjb21wbGV4aXR5LCBzaWJsaW5nCisJICAgcG9pbnRlcnMgY2FuIGJlIHByb3RlY3RlZCBieSBi
b3RoIHpub2RlIHNwaW4gbG9ja3MuICBIb3dldmVyIGl0IGxvb2tzCisJICAgbW9yZSBTTVAgc2Nh
bGFibGUgd2Ugc2hvdWxkIHRlc3QgdGhpcyBsb2NraW5nIGNoYW5nZSBvbiBuLXdheXMgKG4gPgor
CSAgIDQpIFNNUCBtYWNoaW5lcy4gIEN1cnJlbnQgNC13YXlzIG1hY2hpbmUgdGVzdCBkb2VzIG5v
dCBzaG93IHRoYXQgdHJlZQorCSAgIGxvY2sgaXMgY29udGVudGVkIGFuZCBpdCBpcyBhIGJvdHRs
ZW5lY2sgKDIwMDMuMDcuMjUpLiAqLworCisJcndsb2NrX3QgdHJlZV9sb2NrOworCisJLyogbG9j
ayBwcm90ZWN0aW5nIGRlbGltaXRpbmcga2V5cyAqLworCXJ3bG9ja190IGRrX2xvY2s7CisKKwkv
KiBzcGluIGxvY2sgcHJvdGVjdGluZyB6bm9kZV9lcG9jaCAqLworCXNwaW5sb2NrX3QgZXBvY2hf
bG9jazsKKwkvKiB2ZXJzaW9uIHN0YW1wIHVzZWQgdG8gbWFyayB6bm9kZSB1cGRhdGVzLiBTZWUg
c2VhbC5bY2hdIGZvciBtb3JlCisJICogaW5mb3JtYXRpb24uICovCisJX191NjQgem5vZGVfZXBv
Y2g7CisKKwl6bm9kZSAqdWJlcjsKKwlub2RlX3BsdWdpbiAqbnBsdWc7CisJc3RydWN0IHN1cGVy
X2Jsb2NrICpzdXBlcjsKKwlzdHJ1Y3QgeworCQkvKiBjYXJyeSBmbGFncyB1c2VkIGZvciBpbnNl
cnRpb24gb2YgbmV3IG5vZGVzICovCisJCV9fdTMyIG5ld19ub2RlX2ZsYWdzOworCQkvKiBjYXJy
eSBmbGFncyB1c2VkIGZvciBpbnNlcnRpb24gb2YgbmV3IGV4dGVudHMgKi8KKwkJX191MzIgbmV3
X2V4dGVudF9mbGFnczsKKwkJLyogY2FycnkgZmxhZ3MgdXNlZCBmb3IgcGFzdGUgb3BlcmF0aW9u
cyAqLworCQlfX3UzMiBwYXN0ZV9mbGFnczsKKwkJLyogY2FycnkgZmxhZ3MgdXNlZCBmb3IgaW5z
ZXJ0IG9wZXJhdGlvbnMgKi8KKwkJX191MzIgaW5zZXJ0X2ZsYWdzOworCX0gY2Fycnk7Cit9Owor
CitleHRlcm4gaW50IHJlaXNlcjRfaW5pdF90cmVlKHJlaXNlcjRfdHJlZSAqIHRyZWUsCisJCQkg
ICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiByb290X2Jsb2NrLAorCQkJICAgICB0cmVlX2xl
dmVsIGhlaWdodCwgbm9kZV9wbHVnaW4gKiBkZWZhdWx0X3BsdWdpbik7CitleHRlcm4gdm9pZCBy
ZWlzZXI0X2RvbmVfdHJlZShyZWlzZXI0X3RyZWUgKiB0cmVlKTsKKworLyogY2JrIGZsYWdzOiBv
cHRpb25zIGZvciBjb29yZF9ieV9rZXkoKSAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBjb29yZF9i
eV9rZXkoKSBpcyBjYWxsZWQgZm9yIGluc2VydGlvbi4gVGhpcyBpcyBuZWNlc3NhcnkgYmVjYXVz
ZQorCSAgIG9mIGV4dGVudHMgYmVpbmcgbG9jYXRlZCBhdCB0aGUgdHdpZyBsZXZlbC4gRm9yIGV4
cGxhbmF0aW9uLCBzZWUKKwkgICBjb21tZW50IGp1c3QgYWJvdmUgaXNfbmV4dF9pdGVtX2ludGVy
bmFsKCkuCisJICovCisJQ0JLX0ZPUl9JTlNFUlQgPSAoMSA8PCAwKSwKKwkvKiBjb29yZF9ieV9r
ZXkoKSBpcyBjYWxsZWQgd2l0aCBrZXkgdGhhdCBpcyBrbm93biB0byBiZSB1bmlxdWUgKi8KKwlD
QktfVU5JUVVFID0gKDEgPDwgMSksCisJLyogY29vcmRfYnlfa2V5KCkgY2FuIHRydXN0IGRlbGlt
aXRpbmcga2V5cy4gVGhpcyBvcHRpb25zIGlzIG5vdCB1c2VyCisJICAgYWNjZXNzaWJsZS4gY29v
cmRfYnlfa2V5KCkgd2lsbCBzZXQgaXQgYXV0b21hdGljYWxseS4gSXQgd2lsbCBiZQorCSAgIG9u
bHkgY2xlYXJlZCBieSBzcGVjaWFsLWNhc2UgaW4gZXh0ZW50cy1vbi10aGUtdHdpZy1sZXZlbCBo
YW5kbGluZworCSAgIHdoZXJlIGl0IGlzIG5lY2Vzc2FyeSB0byBpbnNlcnQgaXRlbSB3aXRoIGEg
a2V5IHNtYWxsZXIgdGhhbgorCSAgIGxlZnRtb3N0IGtleSBpbiBhIG5vZGUuIFRoaXMgaXMgbmVj
ZXNzYXJ5IGJlY2F1c2Ugb2YgZXh0ZW50cyBiZWluZworCSAgIGxvY2F0ZWQgYXQgdGhlIHR3aWcg
bGV2ZWwuIEZvciBleHBsYW5hdGlvbiwgc2VlIGNvbW1lbnQganVzdCBhYm92ZQorCSAgIGlzX25l
eHRfaXRlbV9pbnRlcm5hbCgpLgorCSAqLworCUNCS19UUlVTVF9ESyA9ICgxIDw8IDIpLAorCUNC
S19SRUFEQSA9ICgxIDw8IDMpLAkvKiBvcmlnaW5hbDogcmVhZGFoZWFkIGxlYXZlcyB3aGljaCBj
b250YWluIGl0ZW1zIG9mIGNlcnRhaW4gZmlsZSAqLworCUNCS19SRUFERElSX1JBID0gKDEgPDwg
NCksCS8qIHJlYWRkaXI6IHJlYWRhaGVhZCB3aG9sZSBkaXJlY3RvcnkgYW5kIGFsbCBpdHMgc3Rh
dCBkYXRhcyAqLworCUNCS19ES1NFVCA9ICgxIDw8IDUpLAorCUNCS19FWFRFTkRFRF9DT09SRCA9
ICgxIDw8IDYpLAkvKiBjb29yZF90IGlzIGFjdHVhbGx5ICovCisJQ0JLX0lOX0NBQ0hFID0gKDEg
PDwgNyksCS8qIG5vZGUgaXMgYWxyZWFkeSBpbiBjYWNoZSAqLworCUNCS19VU0VfQ1JBQkxPQ0sg
PSAoMSA8PCA4KQkvKiB1c2UgY3JhYl9sb2NrIGluIHN0ZWFkIG9mIGxvbmcgdGVybQorCQkJCQkg
KiBsb2NrICovCit9IGNia19mbGFnczsKKworLyogaW5zZXJ0aW9uIG91dGNvbWUuIElCSyA9IGlu
c2VydCBieSBrZXkgKi8KK3R5cGVkZWYgZW51bSB7CisJSUJLX0lOU0VSVF9PSyA9IDAsCisJSUJL
X0FMUkVBRFlfRVhJU1RTID0gLUVFWElTVCwKKwlJQktfSU9fRVJST1IgPSAtRUlPLAorCUlCS19O
T19TUEFDRSA9IC1FX05PREVfRlVMTCwKKwlJQktfT09NID0gLUVOT01FTQorfSBpbnNlcnRfcmVz
dWx0OworCisjZGVmaW5lIElTX0NCS0VSUihlcnIpICgoZXJyKSAhPSBDQktfQ09PUkRfRk9VTkQg
JiYgKGVycikgIT0gQ0JLX0NPT1JEX05PVEZPVU5EKQorCit0eXBlZGVmIGludCAoKnRyZWVfaXRl
cmF0ZV9hY3Rvcl90KSAocmVpc2VyNF90cmVlICogdHJlZSwgY29vcmRfdCAqIGNvb3JkLAorCQkJ
CSAgICAgbG9ja19oYW5kbGUgKiBsaCwgdm9pZCAqYXJnKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9p
dGVyYXRlX3RyZWUocmVpc2VyNF90cmVlICogdHJlZSwgY29vcmRfdCAqIGNvb3JkLAorCQkJCWxv
Y2tfaGFuZGxlICogbGgsCisJCQkJdHJlZV9pdGVyYXRlX2FjdG9yX3QgYWN0b3IsIHZvaWQgKmFy
ZywKKwkJCQl6bm9kZV9sb2NrX21vZGUgbW9kZSwgaW50IHRocm91Z2hfdW5pdHNfcCk7CitleHRl
cm4gaW50IGdldF91YmVyX3pub2RlKHJlaXNlcjRfdHJlZSAqIHRyZWUsIHpub2RlX2xvY2tfbW9k
ZSBtb2RlLAorCQkJICB6bm9kZV9sb2NrX3JlcXVlc3QgcHJpLCBsb2NrX2hhbmRsZSAqIGxoKTsK
KworLyogcmV0dXJuIG5vZGUgcGx1Z2luIG9mIEBub2RlICovCitzdGF0aWMgaW5saW5lIG5vZGVf
cGx1Z2luICpub2RlX3BsdWdpbl9ieV9ub2RlKGNvbnN0IHpub2RlICoKKwkJCQkJICAgICAgIG5v
ZGUgLyogbm9kZSB0byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJ2cy0yMTMiLCBub2RlICE9IE5V
TEwpOworCWFzc2VydCgidnMtMjE0Iiwgem5vZGVfaXNfbG9hZGVkKG5vZGUpKTsKKworCXJldHVy
biBub2RlLT5ucGx1ZzsKK30KKworLyogbnVtYmVyIG9mIGl0ZW1zIGluIEBub2RlICovCitzdGF0
aWMgaW5saW5lIHBvc19pbl9ub2RlX3Qgbm9kZV9udW1faXRlbXMoY29uc3Qgem5vZGUgKiBub2Rl
KQoreworCWFzc2VydCgibmlraXRhLTI3NTQiLCB6bm9kZV9pc19sb2FkZWQobm9kZSkpOworCWFz
c2VydCgibmlraXRhLTI0NjgiLAorCSAgICAgICBub2RlX3BsdWdpbl9ieV9ub2RlKG5vZGUpLT5u
dW1fb2ZfaXRlbXMobm9kZSkgPT0gbm9kZS0+bnJfaXRlbXMpOworCisJcmV0dXJuIG5vZGUtPm5y
X2l0ZW1zOworfQorCisvKiBSZXR1cm4gdGhlIG51bWJlciBvZiBpdGVtcyBhdCB0aGUgcHJlc2Vu
dCBub2RlLiAgQXNzZXJ0cyBjb29yZC0+bm9kZSAhPQorICAgTlVMTC4gKi8KK3N0YXRpYyBpbmxp
bmUgdW5zaWduZWQgY29vcmRfbnVtX2l0ZW1zKGNvbnN0IGNvb3JkX3QgKiBjb29yZCkKK3sKKwlh
c3NlcnQoImptYWNkLTk4MDUiLCBjb29yZC0+bm9kZSAhPSBOVUxMKTsKKworCXJldHVybiBub2Rl
X251bV9pdGVtcyhjb29yZC0+bm9kZSk7Cit9CisKKy8qIHRydWUgaWYgQG5vZGUgaXMgZW1wdHkg
Ki8KK3N0YXRpYyBpbmxpbmUgaW50IG5vZGVfaXNfZW1wdHkoY29uc3Qgem5vZGUgKiBub2RlKQor
eworCXJldHVybiBub2RlX251bV9pdGVtcyhub2RlKSA9PSAwOworfQorCit0eXBlZGVmIGVudW0g
eworCVNISUZURURfU09NRVRISU5HID0gMCwKKwlTSElGVF9OT19TUEFDRSA9IC1FX05PREVfRlVM
TCwKKwlTSElGVF9JT19FUlJPUiA9IC1FSU8sCisJU0hJRlRfT09NID0gLUVOT01FTSwKK30gc2hp
ZnRfcmVzdWx0OworCitleHRlcm4gbm9kZV9wbHVnaW4gKm5vZGVfcGx1Z2luX2J5X2Nvb3JkKGNv
bnN0IGNvb3JkX3QgKiBjb29yZCk7CitleHRlcm4gaW50IGlzX2Nvb3JkX2luX25vZGUoY29uc3Qg
Y29vcmRfdCAqIGNvb3JkKTsKK2V4dGVybiBpbnQga2V5X2luX25vZGUoY29uc3QgcmVpc2VyNF9r
ZXkgKiwgY29uc3QgY29vcmRfdCAqKTsKK2V4dGVybiB2b2lkIGNvb3JkX2l0ZW1fbW92ZV90byhj
b29yZF90ICogY29vcmQsIGludCBpdGVtcyk7CitleHRlcm4gdm9pZCBjb29yZF91bml0X21vdmVf
dG8oY29vcmRfdCAqIGNvb3JkLCBpbnQgdW5pdHMpOworCisvKiB0aGVyZSBhcmUgdHdvIHR5cGVz
IG9mIHJlcGV0aXRpdmUgYWNjZXNzZXMgKHJhKTogaW50cmEtc3lzY2FsbAorICAgKGxvY2FsKSBh
bmQgaW50ZXItc3lzY2FsbCAoZ2xvYmFsKS4gTG9jYWwgcmEgaXMgdXNlZCB3aGVuCisgICBkdXJp
bmcgc2luZ2xlIHN5c2NhbGwgd2UgYWRkL2RlbGV0ZSBzZXZlcmFsIGl0ZW1zIGFuZCB1bml0cyBp
biB0aGUKKyAgIHNhbWUgcGxhY2UgaW4gYSB0cmVlLiBOb3RlIHRoYXQgcGxhbi1BIGZyYWdtZW50
cyBsb2NhbCByYSBieQorICAgc2VwYXJhdGluZyBzdGF0LWRhdGEgYW5kIGZpbGUgYm9keSBpbiBr
ZXktc3BhY2UuIEdsb2JhbCByYSBpcworICAgdXNlZCB3aGVuIHVzZXIgZG9lcyByZXBldGl0aXZl
IG1vZGlmaWNhdGlvbnMgaW4gdGhlIHNhbWUgcGxhY2UgaW4gYQorICAgdHJlZS4KKworICAgT3Vy
IHJhIGltcGxlbWVudGF0aW9uIHNlcnZlcyBmb2xsb3dpbmcgcHVycG9zZXM6CisgICAgMSBpdCBh
ZmZlY3RzIGJhbGFuY2luZyBkZWNpc2lvbnMgc28gdGhhdCBuZXh0IG9wZXJhdGlvbiBpbiBhIHJv
dworICAgICAgY2FuIGJlIHBlcmZvcm1lZCBmYXN0ZXI7CisgICAgMiBpdCBhZmZlY3RzIGxvd2Vy
LWxldmVsIHJlYWQtYWhlYWQgaW4gcGFnZS1jYWNoZTsKKyAgICAzIGl0IGFsbG93cyB0byBhdm9p
ZCB1bm5lY2Vzc2FyeSBsb29rdXBzIGJ5IG1haW50YWluaW5nIHNvbWUgc3RhdGUKKyAgICAgIGFj
cm9zcyBzZXZlcmFsIG9wZXJhdGlvbnMgKHRoaXMgaXMgb25seSBmb3IgbG9jYWwgcmEpOworICAg
IDQgaXQgbGVhdmVzIHJvb20gZm9yIGxhenktbWljcm8tYmFsYW5jaW5nOiB3aGVuIHdlIHN0YXJ0
IGEgc2VxdWVuY2Ugb2YKKyAgICAgIG9wZXJhdGlvbnMgdGhleSBhcmUgcGVyZm9ybWVkIHdpdGhv
dXQgYWN0dWFsbHkgZG9pbmcgYW55IGludHJhLW5vZGUKKyAgICAgIHNoaWZ0cywgdW50aWwgd2Ug
ZmluaXNoIHNlcXVlbmNlIG9yIHNjb3BlIG9mIHNlcXVlbmNlIGxlYXZlcworICAgICAgY3VycmVu
dCBub2RlLCBvbmx5IHRoZW4gd2UgcmVhbGx5IHBhY2sgbm9kZSAobG9jYWwgcmEgb25seSkuCisq
LworCisvKiBhbm90aGVyIHRoaW5nIHRoYXQgY2FuIGJlIHVzZWZ1bCBpcyB0byBrZWVwIHBlci10
cmVlIGFuZC9vcgorICAgcGVyLXByb2Nlc3MgY2FjaGUgb2YgcmVjZW50IGxvb2t1cHMuIFRoaXMg
Y2FjaGUgY2FuIGJlIG9yZ2FuaXNlZCBhcyBhCisgICBsaXN0IG9mIGJsb2NrIG51bWJlcnMgb2Yg
Zm9ybWF0dGVkIG5vZGVzIHNvcnRlZCBieSBzdGFydGluZyBrZXkgaW4KKyAgIHRoaXMgbm9kZS4g
QmFsYW5jaW5ncyBzaG91bGQgaW52YWxpZGF0ZSBhcHByb3ByaWF0ZSBwYXJ0cyBvZiB0aGlzCisg
ICBjYWNoZS4KKyovCisKK2xvb2t1cF9yZXN1bHQgY29vcmRfYnlfa2V5KHJlaXNlcjRfdHJlZSAq
IHRyZWUsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJICAgY29vcmRfdCAqIGNvb3JkLCBs
b2NrX2hhbmRsZSAqIGhhbmRsZSwKKwkJCSAgIHpub2RlX2xvY2tfbW9kZSBsb2NrLCBsb29rdXBf
YmlhcyBiaWFzLAorCQkJICAgdHJlZV9sZXZlbCBsb2NrX2xldmVsLCB0cmVlX2xldmVsIHN0b3Bf
bGV2ZWwsCisJCQkgICBfX3UzMiBmbGFncywgcmFfaW5mb190ICopOworCitsb29rdXBfcmVzdWx0
IHJlaXNlcjRfb2JqZWN0X2xvb2t1cChzdHJ1Y3QgaW5vZGUgKm9iamVjdCwKKwkJCQkgICAgY29u
c3QgcmVpc2VyNF9rZXkgKiBrZXksCisJCQkJICAgIGNvb3JkX3QgKiBjb29yZCwKKwkJCQkgICAg
bG9ja19oYW5kbGUgKiBsaCwKKwkJCQkgICAgem5vZGVfbG9ja19tb2RlIGxvY2tfbW9kZSwKKwkJ
CQkgICAgbG9va3VwX2JpYXMgYmlhcywKKwkJCQkgICAgdHJlZV9sZXZlbCBsb2NrX2xldmVsLAor
CQkJCSAgICB0cmVlX2xldmVsIHN0b3BfbGV2ZWwsCisJCQkJICAgIF9fdTMyIGZsYWdzLCByYV9p
bmZvX3QgKiBpbmZvKTsKKworaW5zZXJ0X3Jlc3VsdCBpbnNlcnRfYnlfa2V5KHJlaXNlcjRfdHJl
ZSAqIHRyZWUsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJICAgIHJlaXNlcjRfaXRlbV9k
YXRhICogZGF0YSwgY29vcmRfdCAqIGNvb3JkLAorCQkJICAgIGxvY2tfaGFuZGxlICogbGgsCisJ
CQkgICAgdHJlZV9sZXZlbCBzdG9wX2xldmVsLCBfX3UzMiBmbGFncyk7CitpbnNlcnRfcmVzdWx0
IGluc2VydF9ieV9jb29yZChjb29yZF90ICogY29vcmQsCisJCQkgICAgICByZWlzZXI0X2l0ZW1f
ZGF0YSAqIGRhdGEsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LAorCQkJICAgICAgbG9ja19oYW5k
bGUgKiBsaCwgX191MzIpOworaW5zZXJ0X3Jlc3VsdCBpbnNlcnRfZXh0ZW50X2J5X2Nvb3JkKGNv
b3JkX3QgKiBjb29yZCwKKwkJCQkgICAgIHJlaXNlcjRfaXRlbV9kYXRhICogZGF0YSwKKwkJCQkg
ICAgIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5LCBsb2NrX2hhbmRsZSAqIGxoKTsKK2ludCBjdXRf
bm9kZV9jb250ZW50KGNvb3JkX3QgKiBmcm9tLCBjb29yZF90ICogdG8sIGNvbnN0IHJlaXNlcjRf
a2V5ICogZnJvbV9rZXksCisJCSAgICAgY29uc3QgcmVpc2VyNF9rZXkgKiB0b19rZXksCisJCSAg
ICAgcmVpc2VyNF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkKTsKK2ludCBraWxsX25vZGVfY29udGVu
dChjb29yZF90ICogZnJvbSwgY29vcmRfdCAqIHRvLAorCQkgICAgICBjb25zdCByZWlzZXI0X2tl
eSAqIGZyb21fa2V5LCBjb25zdCByZWlzZXI0X2tleSAqIHRvX2tleSwKKwkJICAgICAgcmVpc2Vy
NF9rZXkgKiBzbWFsbGVzdF9yZW1vdmVkLAorCQkgICAgICB6bm9kZSAqIGxvY2tlZF9sZWZ0X25l
aWdoYm9yLCBzdHJ1Y3QgaW5vZGUgKmlub2RlLAorCQkgICAgICBpbnQgdHJ1bmNhdGUpOworCitp
bnQgcmVpc2VyNF9yZXNpemVfaXRlbShjb29yZF90ICogY29vcmQsIHJlaXNlcjRfaXRlbV9kYXRh
ICogZGF0YSwKKwkJCXJlaXNlcjRfa2V5ICoga2V5LCBsb2NrX2hhbmRsZSAqIGxoLCBjb3BfaW5z
ZXJ0X2ZsYWcpOworaW50IGluc2VydF9pbnRvX2l0ZW0oY29vcmRfdCAqIGNvb3JkLCBsb2NrX2hh
bmRsZSAqIGxoLCBjb25zdCByZWlzZXI0X2tleSAqIGtleSwKKwkJICAgICByZWlzZXI0X2l0ZW1f
ZGF0YSAqIGRhdGEsIHVuc2lnbmVkKTsKK2ludCByZWlzZXI0X2luc2VydF9mbG93KGNvb3JkX3Qg
KiBjb29yZCwgbG9ja19oYW5kbGUgKiBsaCwgZmxvd190ICogZik7CitpbnQgZmluZF9uZXdfY2hp
bGRfcHRyKHpub2RlICogcGFyZW50LCB6bm9kZSAqIGNoaWxkLCB6bm9kZSAqIGxlZnQsCisJCSAg
ICAgICBjb29yZF90ICogcmVzdWx0KTsKKworaW50IHNoaWZ0X3JpZ2h0X29mX2J1dF9leGNsdWRp
bmdfaW5zZXJ0X2Nvb3JkKGNvb3JkX3QgKiBpbnNlcnRfY29vcmQpOworaW50IHNoaWZ0X2xlZnRf
b2ZfYW5kX2luY2x1ZGluZ19pbnNlcnRfY29vcmQoY29vcmRfdCAqIGluc2VydF9jb29yZCk7CisK
K3ZvaWQgZmFrZV9raWxsX2hvb2tfdGFpbChzdHJ1Y3QgaW5vZGUgKiwgbG9mZl90IHN0YXJ0LCBs
b2ZmX3QgZW5kLCBpbnQpOworCitleHRlcm4gaW50IGN1dF90cmVlX3dvcmtlcl9jb21tb24odGFw
X3QgKiwgY29uc3QgcmVpc2VyNF9rZXkgKiwKKwkJCQkgIGNvbnN0IHJlaXNlcjRfa2V5ICosIHJl
aXNlcjRfa2V5ICosCisJCQkJICBzdHJ1Y3QgaW5vZGUgKiwgaW50LCBpbnQgKik7CitleHRlcm4g
aW50IHJlaXNlcjRfY3V0X3RyZWVfb2JqZWN0KHJlaXNlcjRfdHJlZSAqLCBjb25zdCByZWlzZXI0
X2tleSAqLAorCQkJCSAgIGNvbnN0IHJlaXNlcjRfa2V5ICosIHJlaXNlcjRfa2V5ICosCisJCQkJ
ICAgc3RydWN0IGlub2RlICosIGludCwgaW50ICopOworZXh0ZXJuIGludCByZWlzZXI0X2N1dF90
cmVlKHJlaXNlcjRfdHJlZSAqIHRyZWUsIGNvbnN0IHJlaXNlcjRfa2V5ICogZnJvbSwKKwkJCSAg
ICBjb25zdCByZWlzZXI0X2tleSAqIHRvLCBzdHJ1Y3QgaW5vZGUgKiwgaW50KTsKKworZXh0ZXJu
IGludCByZWlzZXI0X2RlbGV0ZV9ub2RlKHpub2RlICosIHJlaXNlcjRfa2V5ICosIHN0cnVjdCBp
bm9kZSAqLCBpbnQpOworZXh0ZXJuIGludCBjaGVja190cmVlX3BvaW50ZXIoY29uc3QgY29vcmRf
dCAqIHBvaW50ZXIsIGNvbnN0IHpub2RlICogY2hpbGQpOworZXh0ZXJuIGludCBmaW5kX25ld19j
aGlsZF9wdHIoem5vZGUgKiBwYXJlbnQsIHpub2RlICogY2hpbGQgVU5VU0VEX0FSRywKKwkJCSAg
ICAgIHpub2RlICogbGVmdCwgY29vcmRfdCAqIHJlc3VsdCk7CitleHRlcm4gaW50IGZpbmRfY2hp
bGRfcHRyKHpub2RlICogcGFyZW50LCB6bm9kZSAqIGNoaWxkLCBjb29yZF90ICogcmVzdWx0KTsK
K2V4dGVybiBpbnQgc2V0X2NoaWxkX2RlbGltaXRpbmdfa2V5cyh6bm9kZSAqIHBhcmVudCwgY29u
c3QgY29vcmRfdCAqIGluX3BhcmVudCwKKwkJCQkgICAgIHpub2RlICogY2hpbGQpOworZXh0ZXJu
IHpub2RlICpjaGlsZF96bm9kZShjb25zdCBjb29yZF90ICogaW5fcGFyZW50LCB6bm9kZSAqIHBh
cmVudCwKKwkJCSAgaW50IGluY29yZV9wLCBpbnQgc2V0dXBfZGtleXNfcCk7CisKK2V4dGVybiBp
bnQgY2JrX2NhY2hlX2luaXQoY2JrX2NhY2hlICogY2FjaGUpOworZXh0ZXJuIHZvaWQgY2JrX2Nh
Y2hlX2RvbmUoY2JrX2NhY2hlICogY2FjaGUpOworZXh0ZXJuIHZvaWQgY2JrX2NhY2hlX2ludmFs
aWRhdGUoY29uc3Qgem5vZGUgKiBub2RlLCByZWlzZXI0X3RyZWUgKiB0cmVlKTsKKworZXh0ZXJu
IGNoYXIgKnNwcmludF9hZGRyZXNzKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBibG9jayk7CisK
KyNpZiBSRUlTRVI0X0RFQlVHCitleHRlcm4gdm9pZCBwcmludF9jb29yZF9jb250ZW50KGNvbnN0
IGNoYXIgKnByZWZpeCwgY29vcmRfdCAqIHApOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9wcmludF9h
ZGRyZXNzKGNvbnN0IGNoYXIgKnByZWZpeCwKKwkJCWNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBi
bG9jayk7CitleHRlcm4gdm9pZCBwcmludF90cmVlX3JlYyhjb25zdCBjaGFyICpwcmVmaXgsIHJl
aXNlcjRfdHJlZSAqIHRyZWUsCisJCQkgICBfX3UzMiBmbGFncyk7CitleHRlcm4gdm9pZCBjaGVj
a19ka2V5cyh6bm9kZSAqbm9kZSk7CisjZWxzZQorI2RlZmluZSBwcmludF9jb29yZF9jb250ZW50
KHAsIGMpIG5vb3AKKyNkZWZpbmUgcmVpc2VyNF9wcmludF9hZGRyZXNzKHAsIGIpIG5vb3AKKyNl
bmRpZgorCitleHRlcm4gdm9pZCBmb3JnZXRfem5vZGUobG9ja19oYW5kbGUgKiBoYW5kbGUpOwor
ZXh0ZXJuIGludCBkZWFsbG9jYXRlX3pub2RlKHpub2RlICogbm9kZSk7CisKK2V4dGVybiBpbnQg
aXNfZGlza19hZGRyX3VuYWxsb2NhdGVkKGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBhZGRyKTsK
KworLyogc3RydWN0IHVzZWQgaW50ZXJuYWxseSB0byBwYWNrIGFsbCBudW1lcm91cyBhcmd1bWVu
dHMgb2YgdHJlZSBsb29rdXAuCisgICAgVXNlZCB0byBhdm9pZCBwYXNzaW5nIGEgbG90IG9mIGFy
Z3VtZW50cyB0byBoZWxwZXIgZnVuY3Rpb25zLiAqLwordHlwZWRlZiBzdHJ1Y3QgY2JrX2hhbmRs
ZSB7CisJLyogdHJlZSB3ZSBhcmUgaW4gKi8KKwlyZWlzZXI0X3RyZWUgKnRyZWU7CisJLyoga2V5
IHdlIGFyZSBnb2luZyBhZnRlciAqLworCWNvbnN0IHJlaXNlcjRfa2V5ICprZXk7CisJLyogY29v
cmQgd2Ugd2lsbCBzdG9yZSByZXN1bHQgaW4gKi8KKwljb29yZF90ICpjb29yZDsKKwkvKiB0eXBl
IG9mIGxvY2sgdG8gdGFrZSBvbiB0YXJnZXQgbm9kZSAqLworCXpub2RlX2xvY2tfbW9kZSBsb2Nr
X21vZGU7CisJLyogbG9va3VwIGJpYXMuIFNlZSBjb21tZW50cyBhdCB0aGUgZGVjbGFyYXRpb24g
b2YgbG9va3VwX2JpYXMgKi8KKwlsb29rdXBfYmlhcyBiaWFzOworCS8qIGxvY2sgbGV2ZWw6IGxl
dmVsIHN0YXJ0aW5nIGZyb20gd2hpY2ggdHJlZSB0cmF2ZXJzYWwgc3RhcnRzIHRha2luZworCSAq
IHdyaXRlIGxvY2tzLiAqLworCXRyZWVfbGV2ZWwgbG9ja19sZXZlbDsKKwkvKiBsZXZlbCB3aGVy
ZSBzZWFyY2ggd2lsbCBzdG9wLiBFaXRoZXIgaXRlbSB3aWxsIGJlIGZvdW5kIGJldHdlZW4KKwkg
ICBsb2NrX2xldmVsIGFuZCBzdG9wX2xldmVsLCBvciBDQktfQ09PUkRfTk9URk9VTkQgd2lsbCBi
ZQorCSAgIHJldHVybmVkLgorCSAqLworCXRyZWVfbGV2ZWwgc3RvcF9sZXZlbDsKKwkvKiBsZXZl
bCB3ZSBhcmUgY3VycmVudGx5IGF0ICovCisJdHJlZV9sZXZlbCBsZXZlbDsKKwkvKiBibG9jayBu
dW1iZXIgb2YgQGFjdGl2ZSBub2RlLiBUcmVlIHRyYXZlcnNhbCBvcGVyYXRlcyBvbiB0d28KKwkg
ICBub2RlczogYWN0aXZlIGFuZCBwYXJlbnQuICAqLworCXJlaXNlcjRfYmxvY2tfbnIgYmxvY2s7
CisJLyogcHV0IGhlcmUgZXJyb3IgbWVzc2FnZSB0byBiZSBwcmludGVkIGJ5IGNhbGxlciAqLwor
CWNvbnN0IGNoYXIgKmVycm9yOworCS8qIHJlc3VsdCBwYXNzZWQgYmFjayB0byBjYWxsZXIgKi8K
KwlpbnQgcmVzdWx0OworCS8qIGxvY2sgaGFuZGxlcyBmb3IgYWN0aXZlIGFuZCBwYXJlbnQgKi8K
Kwlsb2NrX2hhbmRsZSAqcGFyZW50X2xoOworCWxvY2tfaGFuZGxlICphY3RpdmVfbGg7CisJcmVp
c2VyNF9rZXkgbGRfa2V5OworCXJlaXNlcjRfa2V5IHJkX2tleTsKKwkvKiBmbGFncywgcGFzc2Vk
IHRvIHRoZSBjYmsgcm91dGluZS4gQml0cyBvZiB0aGlzIGJpdG1hc2sgYXJlIGRlZmluZWQKKwkg
ICBpbiB0cmVlLmg6Y2JrX2ZsYWdzIGVudW0uICovCisJX191MzIgZmxhZ3M7CisJcmFfaW5mb190
ICpyYV9pbmZvOworCXN0cnVjdCBpbm9kZSAqb2JqZWN0OworfSBjYmtfaGFuZGxlOworCitleHRl
cm4gem5vZGVfbG9ja19tb2RlIGNia19sb2NrX21vZGUodHJlZV9sZXZlbCBsZXZlbCwgY2JrX2hh
bmRsZSAqIGgpOworCisvKiBlb3R0bC5jICovCitleHRlcm4gaW50IGhhbmRsZV9lb3R0bChjYmtf
aGFuZGxlICpoLCBpbnQgKm91dGNvbWUpOworCitpbnQgbG9va3VwX211bHRpa2V5KGNia19oYW5k
bGUgKiBoYW5kbGUsIGludCBucl9rZXlzKTsKK2ludCBsb29rdXBfY291cGxlKHJlaXNlcjRfdHJl
ZSAqIHRyZWUsCisJCSAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkxLCBjb25zdCByZWlzZXI0X2tl
eSAqIGtleTIsCisJCSAgY29vcmRfdCAqIGNvb3JkMSwgY29vcmRfdCAqIGNvb3JkMiwKKwkJICBs
b2NrX2hhbmRsZSAqIGxoMSwgbG9ja19oYW5kbGUgKiBsaDIsCisJCSAgem5vZGVfbG9ja19tb2Rl
IGxvY2tfbW9kZSwgbG9va3VwX2JpYXMgYmlhcywKKwkJICB0cmVlX2xldmVsIGxvY2tfbGV2ZWws
IHRyZWVfbGV2ZWwgc3RvcF9sZXZlbCwgX191MzIgZmxhZ3MsCisJCSAgaW50ICpyZXN1bHQxLCBp
bnQgKnJlc3VsdDIpOworCitzdGF0aWMgaW5saW5lIHZvaWQgcmVhZF9sb2NrX3RyZWUocmVpc2Vy
NF90cmVlICp0cmVlKQoreworCS8qIGNoZWNrIHRoYXQgdHJlZSBpcyBub3QgbG9ja2VkICovCisJ
YXNzZXJ0KCIiLCAoTE9DS19DTlRfTklMKHJ3X2xvY2tlZF90cmVlKSAmJgorCQkgICAgTE9DS19D
TlRfTklMKHJlYWRfbG9ja2VkX3RyZWUpICYmCisJCSAgICBMT0NLX0NOVF9OSUwod3JpdGVfbG9j
a2VkX3RyZWUpKSk7CisJLyogY2hlY2sgdGhhdCBzcGlubG9ja3Mgb2YgbG93ZXIgcHJpb3JpdGll
cyBhcmUgbm90IGhlbGQgKi8KKwlhc3NlcnQoIiIsIChMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRf
dHhuaCkgJiYKKwkJICAgIExPQ0tfQ05UX05JTChyd19sb2NrZWRfZGspICYmCisJCSAgICBMT0NL
X0NOVF9OSUwoc3Bpbl9sb2NrZWRfc3RhY2spKSk7CisKKwlyZWFkX2xvY2soJih0cmVlLT50cmVl
X2xvY2spKTsKKworCUxPQ0tfQ05UX0lOQyhyZWFkX2xvY2tlZF90cmVlKTsKKwlMT0NLX0NOVF9J
TkMocndfbG9ja2VkX3RyZWUpOworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tlZCk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgdm9pZCByZWFkX3VubG9ja190cmVlKHJlaXNlcjRfdHJlZSAqdHJlZSkKK3sK
Kwlhc3NlcnQoIm5pa2l0YS0xMzc1IiwgTE9DS19DTlRfR1RaKHJlYWRfbG9ja2VkX3RyZWUpKTsK
Kwlhc3NlcnQoIm5pa2l0YS0xMzc2IiwgTE9DS19DTlRfR1RaKHJ3X2xvY2tlZF90cmVlKSk7CisJ
YXNzZXJ0KCJuaWtpdGEtMTM3NiIsIExPQ0tfQ05UX0dUWihzcGluX2xvY2tlZCkpOworCisJTE9D
S19DTlRfREVDKHJlYWRfbG9ja2VkX3RyZWUpOworCUxPQ0tfQ05UX0RFQyhyd19sb2NrZWRfdHJl
ZSk7CisJTE9DS19DTlRfREVDKHNwaW5fbG9ja2VkKTsKKworCXJlYWRfdW5sb2NrKCYodHJlZS0+
dHJlZV9sb2NrKSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCB3cml0ZV9sb2NrX3RyZWUocmVp
c2VyNF90cmVlICp0cmVlKQoreworCS8qIGNoZWNrIHRoYXQgdHJlZSBpcyBub3QgbG9ja2VkICov
CisJYXNzZXJ0KCIiLCAoTE9DS19DTlRfTklMKHJ3X2xvY2tlZF90cmVlKSAmJgorCQkgICAgTE9D
S19DTlRfTklMKHJlYWRfbG9ja2VkX3RyZWUpICYmCisJCSAgICBMT0NLX0NOVF9OSUwod3JpdGVf
bG9ja2VkX3RyZWUpKSk7CisJLyogY2hlY2sgdGhhdCBzcGlubG9ja3Mgb2YgbG93ZXIgcHJpb3Jp
dGllcyBhcmUgbm90IGhlbGQgKi8KKwlhc3NlcnQoIiIsIChMT0NLX0NOVF9OSUwoc3Bpbl9sb2Nr
ZWRfdHhuaCkgJiYKKwkJICAgIExPQ0tfQ05UX05JTChyd19sb2NrZWRfZGspICYmCisJCSAgICBM
T0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfc3RhY2spKSk7CisKKwl3cml0ZV9sb2NrKCYodHJlZS0+
dHJlZV9sb2NrKSk7CisKKwlMT0NLX0NOVF9JTkMod3JpdGVfbG9ja2VkX3RyZWUpOworCUxPQ0tf
Q05UX0lOQyhyd19sb2NrZWRfdHJlZSk7CisJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKK30K
Kworc3RhdGljIGlubGluZSB2b2lkIHdyaXRlX3VubG9ja190cmVlKHJlaXNlcjRfdHJlZSAqdHJl
ZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xMzc1IiwgTE9DS19DTlRfR1RaKHdyaXRlX2xvY2tlZF90
cmVlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMTM3NiIsIExPQ0tfQ05UX0dUWihyd19sb2NrZWRfdHJl
ZSkpOworCWFzc2VydCgibmlraXRhLTEzNzYiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWQpKTsK
KworCUxPQ0tfQ05UX0RFQyh3cml0ZV9sb2NrZWRfdHJlZSk7CisJTE9DS19DTlRfREVDKHJ3X2xv
Y2tlZF90cmVlKTsKKwlMT0NLX0NOVF9ERUMoc3Bpbl9sb2NrZWQpOworCisJd3JpdGVfdW5sb2Nr
KCYodHJlZS0+dHJlZV9sb2NrKSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCByZWFkX2xvY2tf
ZGsocmVpc2VyNF90cmVlICp0cmVlKQoreworCS8qIGNoZWNrIHRoYXQgZGsgaXMgbm90IGxvY2tl
ZCAqLworCWFzc2VydCgiIiwgKExPQ0tfQ05UX05JTChyd19sb2NrZWRfZGspICYmCisJCSAgICBM
T0NLX0NOVF9OSUwocmVhZF9sb2NrZWRfZGspICYmCisJCSAgICBMT0NLX0NOVF9OSUwod3JpdGVf
bG9ja2VkX2RrKSkpOworCS8qIGNoZWNrIHRoYXQgc3BpbmxvY2tzIG9mIGxvd2VyIHByaW9yaXRp
ZXMgYXJlIG5vdCBoZWxkICovCisJYXNzZXJ0KCIiLCBMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRf
c3RhY2spKTsKKworCXJlYWRfbG9jaygmKCh0cmVlKS0+ZGtfbG9jaykpOworCisJTE9DS19DTlRf
SU5DKHJlYWRfbG9ja2VkX2RrKTsKKwlMT0NLX0NOVF9JTkMocndfbG9ja2VkX2RrKTsKKwlMT0NL
X0NOVF9JTkMoc3Bpbl9sb2NrZWQpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgcmVhZF91bmxv
Y2tfZGsocmVpc2VyNF90cmVlICp0cmVlKQoreworCWFzc2VydCgibmlraXRhLTEzNzUiLCBMT0NL
X0NOVF9HVFoocmVhZF9sb2NrZWRfZGspKTsKKwlhc3NlcnQoIm5pa2l0YS0xMzc2IiwgTE9DS19D
TlRfR1RaKHJ3X2xvY2tlZF9kaykpOworCWFzc2VydCgibmlraXRhLTEzNzYiLCBMT0NLX0NOVF9H
VFooc3Bpbl9sb2NrZWQpKTsKKworCUxPQ0tfQ05UX0RFQyhyZWFkX2xvY2tlZF9kayk7CisJTE9D
S19DTlRfREVDKHJ3X2xvY2tlZF9kayk7CisJTE9DS19DTlRfREVDKHNwaW5fbG9ja2VkKTsKKwor
CXJlYWRfdW5sb2NrKCYodHJlZS0+ZGtfbG9jaykpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQg
d3JpdGVfbG9ja19kayhyZWlzZXI0X3RyZWUgKnRyZWUpCit7CisJLyogY2hlY2sgdGhhdCBkayBp
cyBub3QgbG9ja2VkICovCisJYXNzZXJ0KCIiLCAoTE9DS19DTlRfTklMKHJ3X2xvY2tlZF9kaykg
JiYKKwkJICAgIExPQ0tfQ05UX05JTChyZWFkX2xvY2tlZF9kaykgJiYKKwkJICAgIExPQ0tfQ05U
X05JTCh3cml0ZV9sb2NrZWRfZGspKSk7CisJLyogY2hlY2sgdGhhdCBzcGlubG9ja3Mgb2YgbG93
ZXIgcHJpb3JpdGllcyBhcmUgbm90IGhlbGQgKi8KKwlhc3NlcnQoIiIsIExPQ0tfQ05UX05JTChz
cGluX2xvY2tlZF9zdGFjaykpOworCisJd3JpdGVfbG9jaygmKCh0cmVlKS0+ZGtfbG9jaykpOwor
CisJTE9DS19DTlRfSU5DKHdyaXRlX2xvY2tlZF9kayk7CisJTE9DS19DTlRfSU5DKHJ3X2xvY2tl
ZF9kayk7CisJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKK30KKworc3RhdGljIGlubGluZSB2
b2lkIHdyaXRlX3VubG9ja19kayhyZWlzZXI0X3RyZWUgKnRyZWUpCit7CisJYXNzZXJ0KCJuaWtp
dGEtMTM3NSIsIExPQ0tfQ05UX0dUWih3cml0ZV9sb2NrZWRfZGspKTsKKwlhc3NlcnQoIm5pa2l0
YS0xMzc2IiwgTE9DS19DTlRfR1RaKHJ3X2xvY2tlZF9kaykpOworCWFzc2VydCgibmlraXRhLTEz
NzYiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWQpKTsKKworCUxPQ0tfQ05UX0RFQyh3cml0ZV9s
b2NrZWRfZGspOworCUxPQ0tfQ05UX0RFQyhyd19sb2NrZWRfZGspOworCUxPQ0tfQ05UX0RFQyhz
cGluX2xvY2tlZCk7CisKKwl3cml0ZV91bmxvY2soJih0cmVlLT5ka19sb2NrKSk7Cit9CisKKy8q
IGVzdGltYXRlIGFwaS4gSW1wbGVtZW50YXRpb24gaXMgaW4gZXN0aW1hdGUuYyAqLworcmVpc2Vy
NF9ibG9ja19uciBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2l0ZW0ocmVpc2VyNF90cmVlICopOworcmVp
c2VyNF9ibG9ja19uciBlc3RpbWF0ZV9vbmVfaW5zZXJ0X2ludG9faXRlbShyZWlzZXI0X3RyZWUg
Kik7CityZWlzZXI0X2Jsb2NrX25yIGVzdGltYXRlX2luc2VydF9mbG93KHRyZWVfbGV2ZWwpOwor
cmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9vbmVfaXRlbV9yZW1vdmFsKHJlaXNlcjRfdHJlZSAq
KTsKK3JlaXNlcjRfYmxvY2tfbnIgY2FsY19lc3RpbWF0ZV9vbmVfaW5zZXJ0KHRyZWVfbGV2ZWwp
OworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV9kaXJ0eV9jbHVzdGVyKHN0cnVjdCBpbm9kZSAq
KTsKK3JlaXNlcjRfYmxvY2tfbnIgZXN0aW1hdGVfaW5zZXJ0X2NsdXN0ZXIoc3RydWN0IGlub2Rl
ICopOworcmVpc2VyNF9ibG9ja19uciBlc3RpbWF0ZV91cGRhdGVfY2x1c3RlcihzdHJ1Y3QgaW5v
ZGUgKik7CisKKy8qIF9fUkVJU0VSNF9UUkVFX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGlu
dXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAi
SyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdp
ZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5kOgor
Ki8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC90cmVlX21vZC5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3RyZWVfbW9kLmMKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvdHJlZV9tb2QuYwkxOTcwLTAxLTAxIDAxOjAwOjAwLjAw
MDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvdHJlZV9tb2QuYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ4NDIyMjQxOSArMDEwMApAQCAtMCwwICsxLDM4NyBAQAorLyogQ29w
eXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5l
ZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyoKKyAqIEZ1bmN0aW9ucyB0byBhZGQvZGVs
ZXRlIG5ldyBub2RlcyB0by9mcm9tIHRoZSB0cmVlLgorICoKKyAqIEZ1bmN0aW9ucyBmcm9tIHRo
aXMgZmlsZSBhcmUgdXNlZCBieSBjYXJyeSAoc2VlIGNhcnJ5KikgdG8gaGFuZGxlOgorICoKKyAq
ICAgICAuIGluc2VydGlvbiBvZiBuZXcgZm9ybWF0dGVkIG5vZGUgaW50byB0cmVlCisgKgorICog
ICAgIC4gYWRkaXRpb24gb2YgbmV3IHRyZWUgcm9vdCwgaW5jcmVhc2luZyB0cmVlIGhlaWdodAor
ICoKKyAqICAgICAuIHJlbW92aW5nIHRyZWUgcm9vdCwgZGVjcmVhc2luZyB0cmVlIGhlaWdodAor
ICoKKyAqLworCisjaW5jbHVkZSAiZm9yd2FyZC5oIgorI2luY2x1ZGUgImRlYnVnLmgiCisjaW5j
bHVkZSAiZGZvcm1hdC5oIgorI2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisj
aW5jbHVkZSAicGx1Z2luL3BsdWdpbi5oIgorI2luY2x1ZGUgImpub2RlLmgiCisjaW5jbHVkZSAi
em5vZGUuaCIKKyNpbmNsdWRlICJ0cmVlX21vZC5oIgorI2luY2x1ZGUgImJsb2NrX2FsbG9jLmgi
CisjaW5jbHVkZSAidHJlZV93YWxrLmgiCisjaW5jbHVkZSAidHJlZS5oIgorI2luY2x1ZGUgInN1
cGVyLmgiCisKKyNpbmNsdWRlIDxsaW51eC9lcnIuaD4KKworc3RhdGljIGludCBhZGRfY2hpbGRf
cHRyKHpub2RlICogcGFyZW50LCB6bm9kZSAqIGNoaWxkKTsKKy8qIHdhcm5pbmcgb25seSBpc3N1
ZWQgaWYgZXJyb3IgaXMgbm90IC1FX1JFUEVBVCAqLworI2RlZmluZSBld2FybmluZyggZXJyb3Is
IC4uLiApCQkJXAorCWlmKCAoIGVycm9yICkgIT0gLUVfUkVQRUFUICkJCVwKKwkJd2FybmluZygg
X19WQV9BUkdTX18gKQorCisvKiBhbGxvY2F0ZSBuZXcgbm9kZSBvbiB0aGUgQGxldmVsIGFuZCBp
bW1lZGlhdGVseSBvbiB0aGUgcmlnaHQgb2YgQGJyb3RoZXIuICovCit6bm9kZSAqIHJlaXNlcjRf
bmV3X25vZGUoem5vZGUgKiBicm90aGVyIC8qIGV4aXN0aW5nIGxlZnQgbmVpZ2hib3IKKwkJCQkJ
ICAqICBvZiBuZXcgbm9kZSAqLywKKwkJCSB0cmVlX2xldmVsIGxldmVsIC8qIHRyZWUgbGV2ZWwg
YXQgd2hpY2ggbmV3IG5vZGUgaXMgdG8KKwkJCQkJICAgKiBiZSBhbGxvY2F0ZWQgKi8pCit7CisJ
em5vZGUgKnJlc3VsdDsKKwlpbnQgcmV0Y29kZTsKKwlyZWlzZXI0X2Jsb2NrX25yIGJsb2NrbnI7
CisKKwlhc3NlcnQoIm5pa2l0YS05MzAiLCBicm90aGVyICE9IE5VTEwpOworCWFzc2VydCgidW1r
YS0yNjQiLCBsZXZlbCA8IFJFQUxfTUFYX1pUUkVFX0hFSUdIVCk7CisKKwlyZXRjb2RlID0gYXNz
aWduX2Zha2VfYmxvY2tucl9mb3JtYXR0ZWQoJmJsb2NrbnIpOworCWlmIChyZXRjb2RlID09IDAp
IHsKKwkJcmVzdWx0ID0KKwkJICAgIHpnZXQoem5vZGVfZ2V0X3RyZWUoYnJvdGhlciksICZibG9j
a25yLCBOVUxMLCBsZXZlbCwKKwkJCSByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQoKSk7CisJCWlm
IChJU19FUlIocmVzdWx0KSkgeworCQkJZXdhcm5pbmcoUFRSX0VSUihyZXN1bHQpLCAibmlraXRh
LTkyOSIsCisJCQkJICJDYW5ub3QgYWxsb2NhdGUgem5vZGUgZm9yIGNhcnJ5OiAlbGkiLAorCQkJ
CSBQVFJfRVJSKHJlc3VsdCkpOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQkvKiBjaGVhcCB0
ZXN0LCBjYW4gYmUgZXhlY3V0ZWQgZXZlbiB3aGVuIGRlYnVnZ2luZyBpcyBvZmYgKi8KKwkJaWYg
KCF6bm9kZV9qdXN0X2NyZWF0ZWQocmVzdWx0KSkgeworCQkJd2FybmluZygibmlraXRhLTIyMTMi
LAorCQkJCSJBbGxvY2F0ZWQgYWxyZWFkeSBleGlzdGluZyBibG9jazogJWxsdSIsCisJCQkJKHVu
c2lnbmVkIGxvbmcgbG9uZylibG9ja25yKTsKKwkJCXpwdXQocmVzdWx0KTsKKwkJCXJldHVybiBF
UlJfUFRSKFJFVEVSUigtRUlPKSk7CisJCX0KKworCQlhc3NlcnQoIm5pa2l0YS05MzEiLCByZXN1
bHQgIT0gTlVMTCk7CisJCXJlc3VsdC0+bnBsdWcgPSB6bm9kZV9nZXRfdHJlZShicm90aGVyKS0+
bnBsdWc7CisJCWFzc2VydCgibmlraXRhLTkzMyIsIHJlc3VsdC0+bnBsdWcgIT0gTlVMTCk7CisK
KwkJcmV0Y29kZSA9IHppbml0X25ldyhyZXN1bHQsIHJlaXNlcjRfY3R4X2dmcF9tYXNrX2dldCgp
KTsKKwkJaWYgKHJldGNvZGUgPT0gMCkgeworCQkJWkZfU0VUKHJlc3VsdCwgSk5PREVfQ1JFQVRF
RCk7CisJCQl6cmVsc2UocmVzdWx0KTsKKwkJfSBlbHNlIHsKKwkJCXpwdXQocmVzdWx0KTsKKwkJ
CXJlc3VsdCA9IEVSUl9QVFIocmV0Y29kZSk7CisJCX0KKwl9IGVsc2UgeworCQkvKiBmYWlsdXJl
IHRvIGFsbG9jYXRlIG5ldyBub2RlIGR1cmluZyBiYWxhbmNpbmcuCisJCSAgIFRoaXMgc2hvdWxk
IG5ldmVyIGhhcHBlbi4gRXZlci4gUmV0dXJuaW5nIC1FX1JFUEVBVAorCQkgICBpcyBub3Qgdmlh
YmxlIHNvbHV0aW9uLCBiZWNhdXNlICJvdXQgb2YgZGlzayBzcGFjZSIKKwkJICAgaXMgbm90IHRy
YW5zaWVudCBlcnJvciB0aGF0IHdpbGwgZ28gYXdheSBieSBpdHNlbGYuCisJCSAqLworCQlld2Fy
bmluZyhyZXRjb2RlLCAibmlraXRhLTkyOCIsCisJCQkgIkNhbm5vdCBhbGxvY2F0ZSBibG9jayBm
b3IgY2Fycnk6ICVpIiwgcmV0Y29kZSk7CisJCXJlc3VsdCA9IEVSUl9QVFIocmV0Y29kZSk7CisJ
fQorCWFzc2VydCgibmlraXRhLTEwNzEiLCByZXN1bHQgIT0gTlVMTCk7CisJcmV0dXJuIHJlc3Vs
dDsKK30KKworLyogYWxsb2NhdGUgbmV3IHJvb3QgYW5kIGFkZCBpdCB0byB0aGUgdHJlZQorCisg
ICBUaGlzIGhlbHBlciBmdW5jdGlvbiBpcyBjYWxsZWQgYnkgYWRkX25ld19yb290KCkuCisKKyov
Cit6bm9kZSAqcmVpc2VyNF9hZGRfdHJlZV9yb290KHpub2RlICogb2xkX3Jvb3QgLyogZXhpc3Rp
bmcgdHJlZSByb290ICovICwKKwkJICAgICB6bm9kZSAqIGZha2UgLyogImZha2UiIHpub2RlICov
ICkKK3sKKwlyZWlzZXI0X3RyZWUgKnRyZWUgPSB6bm9kZV9nZXRfdHJlZShvbGRfcm9vdCk7CisJ
em5vZGUgKm5ld19yb290ID0gTlVMTDsJLyogdG8gc2h1dCBnY2MgdXAgKi8KKwlpbnQgcmVzdWx0
OworCisJYXNzZXJ0KCJuaWtpdGEtMTA2OSIsIG9sZF9yb290ICE9IE5VTEwpOworCWFzc2VydCgi
dW1rYS0yNjIiLCBmYWtlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0yNjMiLCB0cmVlICE9IE5V
TEwpOworCisJLyogImZha2UiIHpub2RlLS0tb25lIGFsd2F5cyBoYW5naW5nIGp1c3QgYWJvdmUg
Y3VycmVudCByb290LiBUaGlzCisJICAgbm9kZSBpcyBsb2NrZWQgd2hlbiBuZXcgcm9vdCBpcyBj
cmVhdGVkIG9yIGV4aXN0aW5nIHJvb3QgaXMKKwkgICBkZWxldGVkLiBEb3dud2FyZCB0cmVlIHRy
YXZlcnNhbCB0YWtlcyBsb2NrIG9uIGl0IGJlZm9yZSB0YWtpbmcKKwkgICBsb2NrIG9uIGEgcm9v
dCBub2RlLiBUaGlzIGF2b2lkcyByYWNlIGNvbmRpdGlvbnMgd2l0aCByb290CisJICAgbWFuaXB1
bGF0aW9ucy4KKworCSAqLworCWFzc2VydCgibmlraXRhLTEzNDgiLCB6bm9kZV9hYm92ZV9yb290
KGZha2UpKTsKKwlhc3NlcnQoIm5pa2l0YS0xMjExIiwgem5vZGVfaXNfcm9vdChvbGRfcm9vdCkp
OworCisJcmVzdWx0ID0gMDsKKwlpZiAodHJlZS0+aGVpZ2h0ID49IFJFQUxfTUFYX1pUUkVFX0hF
SUdIVCkgeworCQl3YXJuaW5nKCJuaWtpdGEtMTM0NCIsICJUcmVlIGlzIHRvbyB0YWxsOiAlaSIs
IHRyZWUtPmhlaWdodCk7CisJCS8qIGV4dDIgcmV0dXJucyAtRU5PU1BDIHdoZW4gaXQgcnVucyBv
dXQgb2YgZnJlZSBpbm9kZXMgd2l0aCBhCisJCSAgIGZvbGxvd2luZyBjb21tZW50IChmcy9leHQy
L2lhbGxvYy5jOjQ0MSk6IElzIGl0IHJlYWxseQorCQkgICBFTk9TUEM/CisKKwkJICAgLUVYRlVM
TD8gLUVJTlZBTD8KKwkJICovCisJCXJlc3VsdCA9IFJFVEVSUigtRU5PU1BDKTsKKwl9IGVsc2Ug
eworCQkvKiBBbGxvY2F0ZSBibG9jayBmb3IgbmV3IHJvb3QuIEl0J3Mgbm90IHRoYXQKKwkJICAg
aW1wb3J0YW50IHdoZXJlIGl0IHdpbGwgYmUgYWxsb2NhdGVkLCBhcyByb290IGlzCisJCSAgIGFs
bW9zdCBhbHdheXMgaW4gbWVtb3J5LiBNb3Jlb3ZlciwgYWxsb2NhdGUgb24KKwkJICAgZmx1c2gg
Y2FuIGJlIGdvaW5nIGhlcmUuCisJCSAqLworCQlhc3NlcnQoIm5pa2l0YS0xNDQ4Iiwgem5vZGVf
aXNfcm9vdChvbGRfcm9vdCkpOworCQluZXdfcm9vdCA9IHJlaXNlcjRfbmV3X25vZGUoZmFrZSwg
dHJlZS0+aGVpZ2h0ICsgMSk7CisJCWlmICghSVNfRVJSKG5ld19yb290KSAmJiAocmVzdWx0ID0g
emxvYWQobmV3X3Jvb3QpKSA9PSAwKSB7CisJCQlsb2NrX2hhbmRsZSBybGg7CisKKwkJCWluaXRf
bGgoJnJsaCk7CisJCQlyZXN1bHQgPQorCQkJICAgIGxvbmd0ZXJtX2xvY2tfem5vZGUoJnJsaCwg
bmV3X3Jvb3QsCisJCQkJCQlaTk9ERV9XUklURV9MT0NLLAorCQkJCQkJWk5PREVfTE9DS19MT1BS
SSk7CisJCQlpZiAocmVzdWx0ID09IDApIHsKKwkJCQlwYXJlbnRfY29vcmRfdCAqaW5fcGFyZW50
OworCisJCQkJem5vZGVfbWFrZV9kaXJ0eShmYWtlKTsKKworCQkJCS8qIG5ldyByb290IGlzIGEg
Y2hpbGQgb2YgImZha2UiIG5vZGUgKi8KKwkJCQl3cml0ZV9sb2NrX3RyZWUodHJlZSk7CisKKwkJ
CQkrK3RyZWUtPmhlaWdodDsKKworCQkJCS8qIHJlY2FsY3VsYXRlIG1heCBiYWxhbmNlIG92ZXJo
ZWFkICovCisJCQkJdHJlZS0+ZXN0aW1hdGVfb25lX2luc2VydCA9CisJCQkJCWNhbGNfZXN0aW1h
dGVfb25lX2luc2VydCh0cmVlLT5oZWlnaHQpOworCisJCQkJdHJlZS0+cm9vdF9ibG9jayA9ICp6
bm9kZV9nZXRfYmxvY2sobmV3X3Jvb3QpOworCQkJCWluX3BhcmVudCA9ICZuZXdfcm9vdC0+aW5f
cGFyZW50OworCQkJCWluaXRfcGFyZW50X2Nvb3JkKGluX3BhcmVudCwgZmFrZSk7CisJCQkJLyog
bWFudWFsbHkgaW5zZXJ0IG5ldyByb290IGludG8gc2libGluZworCQkJCSAqIGxpc3QuIFdpdGgg
dGhpcyBhbGwgbm9kZXMgaW52b2x2ZWQgaW50bworCQkJCSAqIGJhbGFuY2luZyBhcmUgY29ubmVj
dGVkIGFmdGVyIGJhbGFuY2luZyBpcworCQkJCSAqIGRvbmUtLS11c2VmdWwgaW52YXJpYW50IHRv
IGNoZWNrLiAqLworCQkJCXNpYmxpbmdfbGlzdF9pbnNlcnRfbm9sb2NrKG5ld19yb290LCBOVUxM
KTsKKwkJCQl3cml0ZV91bmxvY2tfdHJlZSh0cmVlKTsKKworCQkJCS8qIGluc2VydCBpbnRvIG5l
dyByb290IHBvaW50ZXIgdG8gdGhlCisJCQkJICAgQG9sZF9yb290LiAqLworCQkJCWFzc2VydCgi
bmlraXRhLTExMTAiLAorCQkJCSAgICAgICBXSVRIX0RBVEEobmV3X3Jvb3QsCisJCQkJCQkgbm9k
ZV9pc19lbXB0eShuZXdfcm9vdCkpKTsKKwkJCQl3cml0ZV9sb2NrX2RrKHRyZWUpOworCQkJCXpu
b2RlX3NldF9sZF9rZXkobmV3X3Jvb3QsIHJlaXNlcjRfbWluX2tleSgpKTsKKwkJCQl6bm9kZV9z
ZXRfcmRfa2V5KG5ld19yb290LCByZWlzZXI0X21heF9rZXkoKSk7CisJCQkJd3JpdGVfdW5sb2Nr
X2RrKHRyZWUpOworCQkJCWlmIChSRUlTRVI0X0RFQlVHKSB7CisJCQkJCVpGX0NMUihvbGRfcm9v
dCwgSk5PREVfTEVGVF9DT05ORUNURUQpOworCQkJCQlaRl9DTFIob2xkX3Jvb3QsIEpOT0RFX1JJ
R0hUX0NPTk5FQ1RFRCk7CisJCQkJCVpGX1NFVChvbGRfcm9vdCwgSk5PREVfT1JQSEFOKTsKKwkJ
CQl9CisJCQkJcmVzdWx0ID0gYWRkX2NoaWxkX3B0cihuZXdfcm9vdCwgb2xkX3Jvb3QpOworCQkJ
CWRvbmVfbGgoJnJsaCk7CisJCQl9CisJCQl6cmVsc2UobmV3X3Jvb3QpOworCQl9CisJfQorCWlm
IChyZXN1bHQgIT0gMCkKKwkJbmV3X3Jvb3QgPSBFUlJfUFRSKHJlc3VsdCk7CisJcmV0dXJuIG5l
d19yb290OworfQorCisvKiBidWlsZCAmcmVpc2VyNF9pdGVtX2RhdGEgZm9yIGluc2VydGluZyBj
aGlsZCBwb2ludGVyCisKKyAgIEJ1aWxkICZyZWlzZXI0X2l0ZW1fZGF0YSB0aGF0IGNhbiBiZSBs
YXRlciB1c2VkIHRvIGluc2VydCBwb2ludGVyIHRvIEBjaGlsZAorICAgaW4gaXRzIHBhcmVudC4K
KworKi8KK3ZvaWQgYnVpbGRfY2hpbGRfcHRyX2RhdGEoem5vZGUgKiBjaGlsZAkvKiBub2RlIHBv
aW50ZXIgdG8gd2hpY2ggd2lsbCBiZQorCQkJCQkgKiBpbnNlcnRlZCAqLyAsCisJCQkgIHJlaXNl
cjRfaXRlbV9kYXRhICogZGF0YSAvKiB3aGVyZSB0byBzdG9yZSByZXN1bHQgKi8gKQoreworCWFz
c2VydCgibmlraXRhLTExMTYiLCBjaGlsZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMTE3
IiwgZGF0YSAhPSBOVUxMKTsKKworCS8qCisJICogTk9URTogdXNlIGFkZHJlc3Mgb2YgY2hpbGQn
cyBibG9ja25yIGFzIGFkZHJlc3Mgb2YgZGF0YSB0byBiZQorCSAqIGluc2VydGVkLiBBcyByZXN1
bHQgb2YgdGhpcyBkYXRhIGdldHMgaW50byBvbi1kaXNrIHN0cnVjdHVyZSBpbiBjcHUKKwkgKiBi
eXRlIG9yZGVyLiBpbnRlcm5hbCdzIGNyZWF0ZV9ob29rIGNvbnZlcnRzIGl0IHRvIGxpdHRsZSBl
bmRpYW4gYnl0ZQorCSAqIG9yZGVyLgorCSAqLworCWRhdGEtPmRhdGEgPSAoY2hhciAqKXpub2Rl
X2dldF9ibG9jayhjaGlsZCk7CisJLyogZGF0YSAtPiBkYXRhIGlzIGtlcm5lbCBzcGFjZSAqLwor
CWRhdGEtPnVzZXIgPSAwOworCWRhdGEtPmxlbmd0aCA9IHNpemVvZihyZWlzZXI0X2Jsb2NrX25y
KTsKKwkvKiBGSVhNRS1WUzogaGFyZGNvZGVkIGludGVybmFsIGl0ZW0/ICovCisKKwkvKiBBVURJ
VDogSXMgaXQgcG9zc2libGUgdGhhdCAiaXRlbV9wbHVnaW5fYnlfaWQiIG1heSBmaW5kIG5vdGhp
bmc/ICovCisJZGF0YS0+aXBsdWcgPSBpdGVtX3BsdWdpbl9ieV9pZChOT0RFX1BPSU5URVJfSUQp
OworfQorCisvKiBhZGQgcG9pbnRlciB0byBAY2hpbGQgaW50byBlbXB0eSBAcGFyZW50LgorCisg
ICBUaGlzIGlzIHVzZWQgd2hlbiBwb2ludGVyIHRvIG9sZCByb290IGlzIGluc2VydGVkIGludG8g
bmV3IHJvb3Qgd2hpY2ggaXMKKyAgIGVtcHR5LgorKi8KK3N0YXRpYyBpbnQgYWRkX2NoaWxkX3B0
cih6bm9kZSAqIHBhcmVudCwgem5vZGUgKiBjaGlsZCkKK3sKKwljb29yZF90IGNvb3JkOworCXJl
aXNlcjRfaXRlbV9kYXRhIGRhdGE7CisJaW50IHJlc3VsdDsKKwlyZWlzZXI0X2tleSBrZXk7CisK
Kwlhc3NlcnQoIm5pa2l0YS0xMTExIiwgcGFyZW50ICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTExMTIiLCBjaGlsZCAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0xMTE1IiwKKwkgICAgICAg
em5vZGVfZ2V0X2xldmVsKHBhcmVudCkgPT0gem5vZGVfZ2V0X2xldmVsKGNoaWxkKSArIDEpOwor
CisJcmVzdWx0ID0gemxvYWQocGFyZW50KTsKKwlpZiAocmVzdWx0ICE9IDApCisJCXJldHVybiBy
ZXN1bHQ7CisJYXNzZXJ0KCJuaWtpdGEtMTExMyIsIG5vZGVfaXNfZW1wdHkocGFyZW50KSk7CisJ
Y29vcmRfaW5pdF9maXJzdF91bml0KCZjb29yZCwgcGFyZW50KTsKKworCWJ1aWxkX2NoaWxkX3B0
cl9kYXRhKGNoaWxkLCAmZGF0YSk7CisJZGF0YS5hcmcgPSBOVUxMOworCisJcmVhZF9sb2NrX2Rr
KHpub2RlX2dldF90cmVlKHBhcmVudCkpOworCWtleSA9ICp6bm9kZV9nZXRfbGRfa2V5KGNoaWxk
KTsKKwlyZWFkX3VubG9ja19kayh6bm9kZV9nZXRfdHJlZShwYXJlbnQpKTsKKworCXJlc3VsdCA9
IG5vZGVfcGx1Z2luX2J5X25vZGUocGFyZW50KS0+Y3JlYXRlX2l0ZW0oJmNvb3JkLCAma2V5LCAm
ZGF0YSwKKwkJCQkJCQkgIE5VTEwpOworCXpub2RlX21ha2VfZGlydHkocGFyZW50KTsKKwl6cmVs
c2UocGFyZW50KTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBhY3R1YWxseSByZW1vdmUgdHJl
ZSByb290ICovCitzdGF0aWMgaW50IHJlaXNlcjRfa2lsbF9yb290KHJlaXNlcjRfdHJlZSAqIHRy
ZWUgLyogdHJlZSBmcm9tIHdoaWNoIHJvb3QgaXMKKwkJCQkJCSAgKiBiZWluZyByZW1vdmVkICov
LAorCQkJICAgICB6bm9kZSAqIG9sZF9yb290IC8qIHJvb3Qgbm9kZSB0aGF0IGlzIGJlaW5nCisJ
CQkJCSAgICAgICAqIHJlbW92ZWQgKi8gLAorCQkJICAgICB6bm9kZSAqIG5ld19yb290CS8qIG5l
dyByb290LS0tc29sZSBjaGlsZCBvZgorCQkJCQkJICogQG9sZF9yb290ICovLAorCQkgICAgIGNv
bnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBuZXdfcm9vdF9ibGsgLyogZGlzayBhZGRyZXNzIG9mCisJ
CQkJCQkJICAgICogQG5ld19yb290ICovKQoreworCXpub2RlICp1YmVyOworCWludCByZXN1bHQ7
CisJbG9ja19oYW5kbGUgaGFuZGxlX2Zvcl91YmVyOworCisJYXNzZXJ0KCJ1bWthLTI2NSIsIHRy
ZWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTE5OCIsIG5ld19yb290ICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTExOTkiLAorCSAgICAgICB6bm9kZV9nZXRfbGV2ZWwobmV3X3Jvb3Qp
ICsgMSA9PSB6bm9kZV9nZXRfbGV2ZWwob2xkX3Jvb3QpKTsKKworCWFzc2VydCgibmlraXRhLTEy
MDEiLCB6bm9kZV9pc193cml0ZV9sb2NrZWQob2xkX3Jvb3QpKTsKKworCWFzc2VydCgibmlraXRh
LTEyMDMiLAorCSAgICAgICBkaXNrX2FkZHJfZXEobmV3X3Jvb3RfYmxrLCB6bm9kZV9nZXRfYmxv
Y2sobmV3X3Jvb3QpKSk7CisKKwlpbml0X2xoKCZoYW5kbGVfZm9yX3ViZXIpOworCS8qIG9idGFp
biBhbmQgbG9jayAiZmFrZSIgem5vZGUgcHJvdGVjdGluZyBjaGFuZ2VzIGluIHRyZWUgaGVpZ2h0
LiAqLworCXJlc3VsdCA9IGdldF91YmVyX3pub2RlKHRyZWUsIFpOT0RFX1dSSVRFX0xPQ0ssIFpO
T0RFX0xPQ0tfSElQUkksCisJCQkJJmhhbmRsZV9mb3JfdWJlcik7CisJaWYgKHJlc3VsdCA9PSAw
KSB7CisJCXViZXIgPSBoYW5kbGVfZm9yX3ViZXIubm9kZTsKKworCQl6bm9kZV9tYWtlX2RpcnR5
KHViZXIpOworCisJCS8qIGRvbid0IHRha2UgbG9uZyB0ZXJtIGxvY2sgYSBAbmV3X3Jvb3QuIFRh
a2Ugc3BpbmxvY2suICovCisKKwkJd3JpdGVfbG9ja190cmVlKHRyZWUpOworCisJCXRyZWUtPnJv
b3RfYmxvY2sgPSAqbmV3X3Jvb3RfYmxrOworCQktLXRyZWUtPmhlaWdodDsKKworCQkvKiByZWNh
bGN1bGF0ZSBtYXggYmFsYW5jZSBvdmVyaGVhZCAqLworCQl0cmVlLT5lc3RpbWF0ZV9vbmVfaW5z
ZXJ0ID0KKwkJCWNhbGNfZXN0aW1hdGVfb25lX2luc2VydCh0cmVlLT5oZWlnaHQpOworCisJCWFz
c2VydCgibmlraXRhLTEyMDIiLAorCQkgICAgICAgdHJlZS0+aGVpZ2h0ID09IHpub2RlX2dldF9s
ZXZlbChuZXdfcm9vdCkpOworCisJCS8qIG5ldyByb290IGlzIGNoaWxkIG9uICJmYWtlIiBub2Rl
ICovCisJCWluaXRfcGFyZW50X2Nvb3JkKCZuZXdfcm9vdC0+aW5fcGFyZW50LCB1YmVyKTsKKwkJ
Kyt1YmVyLT5jX2NvdW50OworCisJCS8qIHNpYmxpbmdfbGlzdF9pbnNlcnRfbm9sb2NrKG5ld19y
b290LCBOVUxMKTsgKi8KKwkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisKKwkJLyogcmVpbml0
aWFsaXNlIG9sZCByb290LiAqLworCQlyZXN1bHQgPSBpbml0X3pub2RlKFpKTk9ERShvbGRfcm9v
dCkpOworCQl6bm9kZV9tYWtlX2RpcnR5KG9sZF9yb290KTsKKwkJaWYgKHJlc3VsdCA9PSAwKSB7
CisJCQlhc3NlcnQoIm5pa2l0YS0xMjc5Iiwgbm9kZV9pc19lbXB0eShvbGRfcm9vdCkpOworCQkJ
WkZfU0VUKG9sZF9yb290LCBKTk9ERV9IRUFSRF9CQU5TSEVFKTsKKwkJCW9sZF9yb290LT5jX2Nv
dW50ID0gMDsKKwkJfQorCX0KKwlkb25lX2xoKCZoYW5kbGVfZm9yX3ViZXIpOworCisJcmV0dXJu
IHJlc3VsdDsKK30KKworLyogcmVtb3ZlIHRyZWUgcm9vdAorCisgICBUaGlzIGZ1bmN0aW9uIHJl
bW92ZXMgdHJlZSByb290LCBkZWNyZWFzaW5nIHRyZWUgaGVpZ2h0IGJ5IG9uZS4gIFRyZWUgcm9v
dAorICAgYW5kIGl0cyBvbmx5IGNoaWxkICh0aGF0IGlzIGdvaW5nIHRvIGJlY29tZSBuZXcgdHJl
ZSByb290KSBhcmUgd3JpdGUgbG9ja2VkCisgICBhdCB0aGUgZW50cnkuCisKKyAgIFRvIHJlbW92
ZSB0cmVlIHJvb3Qgd2UgbmVlZCB0byB0YWtlIGxvY2sgb24gc3BlY2lhbCAiZmFrZSIgem5vZGUg
dGhhdAorICAgcHJvdGVjdHMgY2hhbmdlcyBvZiB0cmVlIGhlaWdodC4gU2VlIGNvbW1lbnRzIGlu
IHJlaXNlcjRfYWRkX3RyZWVfcm9vdCgpIGZvcgorICAgbW9yZSBvbiB0aGlzLgorCisgICBBbHNv
IHBhcmVudCBwb2ludGVycyBoYXZlIHRvIGJlIHVwZGF0ZWQgaW4KKyAgIG9sZCBhbmQgbmV3IHJv
b3QuIFRvIHNpbXBsaWZ5IGNvZGUsIGZ1bmN0aW9uIGlzIHNwbGl0IGludG8gdHdvIHBhcnRzOiBv
dXRlcgorICAgcmVpc2VyNF9raWxsX3RyZWVfcm9vdCgpIGNvbGxlY3RzIGFsbCBuZWNlc3Nhcnkg
YXJndW1lbnRzIGFuZCBjYWxscworICAgcmVpc2VyNF9raWxsX3Jvb3QoKSB0byBkbyB0aGUgYWN0
dWFsIGpvYi4KKworKi8KK2ludCByZWlzZXI0X2tpbGxfdHJlZV9yb290KHpub2RlICogb2xkX3Jv
b3QgLyogdHJlZSByb290IHRoYXQgd2UgYXJlCisJCQkJCSAgICAgICByZW1vdmluZyovKQorewor
CWludCByZXN1bHQ7CisJY29vcmRfdCBkb3duX2xpbms7CisJem5vZGUgKm5ld19yb290OworCXJl
aXNlcjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgidW1rYS0yNjYiLCBjdXJyZW50X3RyZWUgIT0g
TlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMTE5NCIsIG9sZF9yb290ICE9IE5VTEwpOworCWFzc2Vy
dCgibmlraXRhLTExOTYiLCB6bm9kZV9pc19yb290KG9sZF9yb290KSk7CisJYXNzZXJ0KCJuaWtp
dGEtMTIwMCIsIG5vZGVfbnVtX2l0ZW1zKG9sZF9yb290KSA9PSAxKTsKKwlhc3NlcnQoIm5pa2l0
YS0xNDAxIiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKG9sZF9yb290KSk7CisKKwljb29yZF9pbml0
X2ZpcnN0X3VuaXQoJmRvd25fbGluaywgb2xkX3Jvb3QpOworCisJdHJlZSA9IHpub2RlX2dldF90
cmVlKG9sZF9yb290KTsKKwluZXdfcm9vdCA9IGNoaWxkX3pub2RlKCZkb3duX2xpbmssIG9sZF9y
b290LCAwLCAxKTsKKwlpZiAoIUlTX0VSUihuZXdfcm9vdCkpIHsKKwkJcmVzdWx0ID0KKwkJCXJl
aXNlcjRfa2lsbF9yb290KHRyZWUsIG9sZF9yb290LCBuZXdfcm9vdCwKKwkJCQkJICB6bm9kZV9n
ZXRfYmxvY2sobmV3X3Jvb3QpKTsKKwkJenB1dChuZXdfcm9vdCk7CisJfSBlbHNlCisJCXJlc3Vs
dCA9IFBUUl9FUlIobmV3X3Jvb3QpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogTWFrZSBM
aW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6
ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWIt
d2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisgICBFbmQ6
CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlz
ZXI0L3RyZWVfbW9kLmggbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvdHJlZV9tb2QuaAotLS0gbGlu
dXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC90cmVlX21vZC5oCTE5NzAtMDEtMDEgMDE6MDA6MDAu
MDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC90cmVlX21vZC5oCTIw
MjAtMDItMDUgMjA6NTM6NDEuNDg0MjIyNDE5ICswMTAwCkBAIC0wLDAgKzEsMjkgQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIEZ1bmN0aW9ucyB0byBhZGQvZGVsZXRl
IG5ldyBub2RlcyB0by9mcm9tIHRoZSB0cmVlLiBTZWUgdHJlZV9tb2QuYyBmb3IKKyAqIGNvbW1l
bnRzLiAqLworCisjaWYgIWRlZmluZWQoIF9fUkVJU0VSNF9UUkVFX01PRF9IX18gKQorI2RlZmlu
ZSBfX1JFSVNFUjRfVFJFRV9NT0RfSF9fCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisKK3pub2Rl
ICpyZWlzZXI0X25ld19ub2RlKHpub2RlICogYnJvdGhlciwgdHJlZV9sZXZlbCBsZXZlbCk7Cit6
bm9kZSAqcmVpc2VyNF9hZGRfdHJlZV9yb290KHpub2RlICogb2xkX3Jvb3QsIHpub2RlICogZmFr
ZSk7CitpbnQgcmVpc2VyNF9raWxsX3RyZWVfcm9vdCh6bm9kZSAqIG9sZF9yb290KTsKK3ZvaWQg
YnVpbGRfY2hpbGRfcHRyX2RhdGEoem5vZGUgKiBjaGlsZCwgcmVpc2VyNF9pdGVtX2RhdGEgKiBk
YXRhKTsKKworLyogX19SRUlTRVI0X1RSRUVfTU9EX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2Ug
TGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxl
OiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFi
LXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBzY3JvbGwtc3RlcDogMQorICAgRW5k
OgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMvcmVp
c2VyNC90cmVlX3dhbGsuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC90cmVlX3dhbGsuYwotLS0g
bGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC90cmVlX3dhbGsuYwkxOTcwLTAxLTAxIDAxOjAw
OjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvdHJlZV93YWxr
LmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODUyMjI0MjYgKzAxMDAKQEAgLTAsMCArMSw5MjcgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIFJvdXRpbmVzIGFuZCBtYWNy
b3MgdG86CisKKyAgIGdldF9sZWZ0X25laWdoYm9yKCkKKworICAgZ2V0X3JpZ2h0X25laWdoYm9y
KCkKKworICAgZ2V0X3BhcmVudCgpCisKKyAgIGdldF9maXJzdF9jaGlsZCgpCisKKyAgIGdldF9s
YXN0X2NoaWxkKCkKKworICAgdmFyaW91cyByb3V0aW5lcyB0byB3YWxrIHRoZSB3aG9sZSB0cmVl
IGFuZCBkbyB0aGluZ3MgdG8gaXQgbGlrZQorICAgcmVwYWNrIGl0LCBvciBtb3ZlIGl0IHRvIHRl
cnRpYXJ5IHN0b3JhZ2UuICBQbGVhc2UgbWFrZSB0aGVtIGFzCisgICBnZW5lcmljIGFzIGlzIHJl
YXNvbmFibGUuCisKKyovCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisjaW5jbHVkZSAiZGVidWcu
aCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAiY29vcmQuaCIKKyNpbmNsdWRlICJw
bHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJ6bm9kZS5o
IgorI2luY2x1ZGUgInRyZWVfd2Fsay5oIgorI2luY2x1ZGUgInRyZWUuaCIKKyNpbmNsdWRlICJz
dXBlci5oIgorCisvKiBUaGVzZSBtYWNyb3MgYXJlIHVzZWQgaW50ZXJuYWxseSBpbiB0cmVlX3dh
bGsuYyBpbiBhdHRlbXB0IHRvIG1ha2UKKyAgIGxvY2tfbmVpZ2hib3IoKSBjb2RlIHVzYWJsZSB0
byBidWlsZCBsb2NrX3BhcmVudCgpLCBsb2NrX3JpZ2h0X25laWdoYm9yLAorICAgbG9ja19sZWZ0
X25laWdoYm9yICovCisjZGVmaW5lIEdFVF9OT0RFX0JZX1BUUl9PRkZTRVQobm9kZSwgb2ZmKSAo
Kih6bm9kZSoqKSgoKHVuc2lnbmVkIGxvbmcpKG5vZGUpKSArIChvZmYpKSkKKyNkZWZpbmUgRklF
TERfT0ZGU0VUKG5hbWUpICBvZmZzZXRvZih6bm9kZSwgbmFtZSkKKyNkZWZpbmUgUEFSRU5UX1BU
Ul9PRkZTRVQgRklFTERfT0ZGU0VUKGluX3BhcmVudC5ub2RlKQorI2RlZmluZSBMRUZUX1BUUl9P
RkZTRVQgICBGSUVMRF9PRkZTRVQobGVmdCkKKyNkZWZpbmUgUklHSFRfUFRSX09GRlNFVCAgRklF
TERfT0ZGU0VUKHJpZ2h0KQorCisvKiBUaGlzIGlzIHRoZSBnZW5lcmljIHByb2NlZHVyZSB0byBn
ZXQgYW5kIGxvY2sgYGdlbmVyaWMnIG5laWdoYm9yIChsZWZ0IG9yCisgICAgcmlnaHQgbmVpZ2hi
b3Igb3IgcGFyZW50KS4gSXQgaW1wbGVtZW50cyBjb21tb24gYWxnb3JpdGhtIGZvciBhbGwgY2Fz
ZXMgb2YKKyAgICBnZXR0aW5nIGxvY2sgb24gbmVpZ2hib3Igbm9kZSwgb25seSB6bm9kZSBzdHJ1
Y3R1cmUgZmllbGQgaXMgZGlmZmVyZW50IGluCisgICAgZWFjaCBjYXNlLiBUaGlzIGlzIHBhcmFt
ZXRlcml6ZWQgYnkgcHRyX29mZnNldCBhcmd1bWVudCwgd2hpY2ggaXMgYnl0ZQorICAgIG9mZnNl
dCBmb3IgdGhlIHBvaW50ZXIgdG8gdGhlIGRlc2lyZWQgbmVpZ2hib3Igd2l0aGluIHRoZSBjdXJy
ZW50IG5vZGUncworICAgIHpub2RlIHN0cnVjdHVyZS4gVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUg
Y2FsbGVkIHdpdGggdGhlIHRyZWUgbG9jayBoZWxkICovCitzdGF0aWMgaW50IGxvY2tfbmVpZ2hi
b3IoCisJCQkJLyogcmVzdWx0aW5nIGxvY2sgaGFuZGxlICovCisJCQkJbG9ja19oYW5kbGUgKiBy
ZXN1bHQsCisJCQkJLyogem5vZGUgdG8gbG9jayAqLworCQkJCXpub2RlICogbm9kZSwKKwkJCQkv
KiBwb2ludGVyIHRvIG5laWdoYm9yIChvciBwYXJlbnQpIHpub2RlIGZpZWxkIG9mZnNldCwgaW4g
Ynl0ZXMgZnJvbQorCQkJCSAgIHRoZSBiYXNlIGFkZHJlc3Mgb2Ygem5vZGUgc3RydWN0dXJlICAq
LworCQkJCWludCBwdHJfb2Zmc2V0LAorCQkJCS8qIGxvY2sgbW9kZSBmb3IgbG9uZ3Rlcm1fbG9j
a196bm9kZSBjYWxsICovCisJCQkJem5vZGVfbG9ja19tb2RlIG1vZGUsCisJCQkJLyogbG9jayBy
ZXF1ZXN0IGZvciBsb25ndGVybV9sb2NrX3pub2RlIGNhbGwgKi8KKwkJCQl6bm9kZV9sb2NrX3Jl
cXVlc3QgcmVxLAorCQkJCS8qIEdOXyogZmxhZ3MgKi8KKwkJCQlpbnQgZmxhZ3MsIGludCBybG9j
a2VkKQoreworCXJlaXNlcjRfdHJlZSAqdHJlZSA9IHpub2RlX2dldF90cmVlKG5vZGUpOworCXpu
b2RlICpuZWlnaGJvcjsKKwlpbnQgcmV0OworCisJYXNzZXJ0KCJ1bWthLTIzNiIsIG5vZGUgIT0g
TlVMTCk7CisJYXNzZXJ0KCJ1bWthLTIzNyIsIHRyZWUgIT0gTlVMTCk7CisJYXNzZXJ0X3J3X2xv
Y2tlZCgmKHRyZWUtPnRyZWVfbG9jaykpOworCisJaWYgKGZsYWdzICYgR05fVFJZX0xPQ0spCisJ
CXJlcSB8PSBaTk9ERV9MT0NLX05PTkJMT0NLOworCWlmIChmbGFncyAmIEdOX1NBTUVfQVRPTSkK
KwkJcmVxIHw9IFpOT0RFX0xPQ0tfRE9OVF9GVVNFOworCisJLyogZ2V0IG5laWdoYm9yJ3MgYWRk
cmVzcyBieSB1c2luZyBvZiBzaWJsaW5nIGxpbmssIHF1aXQgd2hpbGUgbG9vcAorCSAgIChhbmQg
cmV0dXJuKSBpZiBsaW5rIGlzIG5vdCBhdmFpbGFibGUuICovCisJd2hpbGUgKDEpIHsKKwkJbmVp
Z2hib3IgPSBHRVRfTk9ERV9CWV9QVFJfT0ZGU0VUKG5vZGUsIHB0cl9vZmZzZXQpOworCisJCS8q
IHJldHVybiAtRV9OT19ORUlHSEJPUiBpZiBwYXJlbnQgb3Igc2lkZSBwb2ludGVyIGlzIE5VTEwg
b3IgaWYKKwkJICogbm9kZSBwb2ludGVkIGJ5IGl0IGlzIG5vdCBjb25uZWN0ZWQuCisJCSAqCisJ
CSAqIEhvd2V2ZXIsIEdOX0FMTE9XX05PVF9DT05ORUNURUQgb3B0aW9uIG1hc2tzICJjb25uZWN0
ZWQiCisJCSAqIGNoZWNrIGFuZCBhbGxvd3MgcGFzc2luZyByZWZlcmVuY2UgdG8gbm90IGNvbm5l
Y3RlZCB6bm9kZSB0bworCQkgKiBzdWJzZXF1ZW50IGxvbmd0ZXJtX2xvY2tfem5vZGUoKSBjYWxs
LiAgVGhpcyBraWxscyBwb3NzaWJsZQorCQkgKiBidXN5IGxvb3AgaWYgd2UgYXJlIHRyeWluZyB0
byBnZXQgbG9uZ3Rlcm0gbG9jayBvbiBsb2NrZWQgYnV0CisJCSAqIG5vdCB5ZXQgY29ubmVjdGVk
IHBhcmVudCBub2RlLiAqLworCQlpZiAobmVpZ2hib3IgPT0gTlVMTCB8fCAhKChmbGFncyAmIEdO
X0FMTE9XX05PVF9DT05ORUNURUQpCisJCQkJCSAgfHwgem5vZGVfaXNfY29ubmVjdGVkKG5laWdo
Ym9yKSkpIHsKKwkJCXJldHVybiBSRVRFUlIoLUVfTk9fTkVJR0hCT1IpOworCQl9CisKKwkJLyog
cHJvdGVjdCBpdCBmcm9tIGRlbGV0aW9uLiAqLworCQl6cmVmKG5laWdoYm9yKTsKKworCQlybG9j
a2VkID8gcmVhZF91bmxvY2tfdHJlZSh0cmVlKSA6IHdyaXRlX3VubG9ja190cmVlKHRyZWUpOwor
CisJCXJldCA9IGxvbmd0ZXJtX2xvY2tfem5vZGUocmVzdWx0LCBuZWlnaGJvciwgbW9kZSwgcmVx
KTsKKworCQkvKiBUaGUgbG9jayBoYW5kbGUgb2J0YWlucyBpdHMgb3duIHJlZmVyZW5jZSwgcmVs
ZWFzZSB0aGUgb25lIGZyb20gYWJvdmUuICovCisJCXpwdXQobmVpZ2hib3IpOworCisJCXJsb2Nr
ZWQgPyByZWFkX2xvY2tfdHJlZSh0cmVlKSA6IHdyaXRlX2xvY2tfdHJlZSh0cmVlKTsKKworCQkv
KiByZXN0YXJ0IGlmIG5vZGUgd2UgZ290IHJlZmVyZW5jZSB0byBpcyBiZWluZworCQkgICBpbnZh
bGlkYXRlZC4gd2Ugc2hvdWxkIG5vdCBnZXQgcmVmZXJlbmNlIHRvIHRoaXMgbm9kZQorCQkgICBh
Z2Fpbi4gKi8KKwkJaWYgKHJldCA9PSAtRUlOVkFMKQorCQkJY29udGludWU7CisJCWlmIChyZXQp
CisJCQlyZXR1cm4gcmV0OworCisJCS8qIGNoZWNrIGlmIG5laWdoYm9yIGxpbmsgc3RpbGwgcG9p
bnRzIHRvIGp1c3QgbG9ja2VkIHpub2RlOworCQkgICB0aGUgbGluayBjb3VsZCBoYXZlIGJlZW4g
Y2hhbmdlZCB3aGlsZSB0aGUgcHJvY2VzcyBzbGVwdC4gKi8KKwkJaWYgKG5laWdoYm9yID09IEdF
VF9OT0RFX0JZX1BUUl9PRkZTRVQobm9kZSwgcHRyX29mZnNldCkpCisJCQlyZXR1cm4gMDsKKwor
CQkvKiB6bm9kZSB3YXMgbG9ja2VkIGJ5IG1pc3Rha2U7IHVubG9jayBpdCBhbmQgcmVzdGFydCBs
b2NraW5nCisJCSAgIHByb2Nlc3MgZnJvbSBiZWdpbm5pbmcuICovCisJCXJsb2NrZWQgPyByZWFk
X3VubG9ja190cmVlKHRyZWUpIDogd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisJCWxvbmd0ZXJt
X3VubG9ja196bm9kZShyZXN1bHQpOworCQlybG9ja2VkID8gcmVhZF9sb2NrX3RyZWUodHJlZSkg
OiB3cml0ZV9sb2NrX3RyZWUodHJlZSk7CisJfQorfQorCisvKiBnZXQgcGFyZW50IG5vZGUgd2l0
aCBsb25ndGVybSBsb2NrLCBhY2NlcHRzIEdOKiBmbGFncy4gKi8KK2ludCByZWlzZXI0X2dldF9w
YXJlbnRfZmxhZ3MobG9ja19oYW5kbGUgKiBsaCAvKiByZXN1bHRpbmcgbG9jayBoYW5kbGUgKi8g
LAorCQkJICAgICB6bm9kZSAqIG5vZGUgLyogY2hpbGQgbm9kZSAqLyAsCisJCQkgICAgIHpub2Rl
X2xvY2tfbW9kZSBtb2RlCisJCQkgICAgIC8qIHR5cGUgb2YgbG9jazogcmVhZCBvciB3cml0ZSAq
LyAsCisJCQkgICAgIGludCBmbGFncyAvKiBHTl8qIGZsYWdzICovICkKK3sKKwlpbnQgcmVzdWx0
OworCisJcmVhZF9sb2NrX3RyZWUoem5vZGVfZ2V0X3RyZWUobm9kZSkpOworCXJlc3VsdCA9IGxv
Y2tfbmVpZ2hib3IobGgsIG5vZGUsIFBBUkVOVF9QVFJfT0ZGU0VULCBtb2RlLAorCQkJICAgICAg
IFpOT0RFX0xPQ0tfSElQUkksIGZsYWdzLCAxKTsKKwlyZWFkX3VubG9ja190cmVlKHpub2RlX2dl
dF90cmVlKG5vZGUpKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiB3cmFwcGVyIGZ1bmN0aW9u
IHRvIGxvY2sgcmlnaHQgb3IgbGVmdCBuZWlnaGJvciBkZXBlbmRpbmcgb24gR05fR09fTEVGVAor
ICAgYml0IGluIEBmbGFncyBwYXJhbWV0ZXIgICovCisvKiBBdWRpdGVkIGJ5OiB1bWthICgyMDAy
LjA2LjE0KSAqLworc3RhdGljIGlubGluZSBpbnQKK2xvY2tfc2lkZV9uZWlnaGJvcihsb2NrX2hh
bmRsZSAqIHJlc3VsdCwKKwkJICAgem5vZGUgKiBub2RlLCB6bm9kZV9sb2NrX21vZGUgbW9kZSwg
aW50IGZsYWdzLCBpbnQgcmxvY2tlZCkKK3sKKwlpbnQgcmV0OworCWludCBwdHJfb2Zmc2V0Owor
CXpub2RlX2xvY2tfcmVxdWVzdCByZXE7CisKKwlpZiAoZmxhZ3MgJiBHTl9HT19MRUZUKSB7CisJ
CXB0cl9vZmZzZXQgPSBMRUZUX1BUUl9PRkZTRVQ7CisJCXJlcSA9IFpOT0RFX0xPQ0tfTE9QUkk7
CisJfSBlbHNlIHsKKwkJcHRyX29mZnNldCA9IFJJR0hUX1BUUl9PRkZTRVQ7CisJCXJlcSA9IFpO
T0RFX0xPQ0tfSElQUkk7CisJfQorCisJcmV0ID0KKwkgICAgbG9ja19uZWlnaGJvcihyZXN1bHQs
IG5vZGUsIHB0cl9vZmZzZXQsIG1vZGUsIHJlcSwgZmxhZ3MsIHJsb2NrZWQpOworCisJaWYgKHJl
dCA9PSAtRV9OT19ORUlHSEJPUikJLyogaWYgd2Ugd2FsayBsZWZ0IG9yIHJpZ2h0IC1FX05PX05F
SUdIQk9SIGRvZXMgbm90CisJCQkJCSAqIGd1YXJhbnRlZSB0aGF0IG5laWdoYm9yIGlzIGFic2Vu
dCBpbiB0aGUKKwkJCQkJICogdHJlZTsgaW4gdGhpcyBjYXNlIHdlIHJldHVybiAtRU5PRU5UIC0t
CisJCQkJCSAqIG1lYW5zIG5laWdoYm9yIGF0IGxlYXN0IG5vdCBmb3VuZCBpbgorCQkJCQkgKiBj
YWNoZSAqLworCQlyZXR1cm4gUkVURVJSKC1FTk9FTlQpOworCisJcmV0dXJuIHJldDsKK30KKwor
I2lmIFJFSVNFUjRfREVCVUcKKworaW50IGNoZWNrX3NpYmxpbmdfbGlzdCh6bm9kZSAqIG5vZGUp
Cit7CisJem5vZGUgKnNjYW47CisJem5vZGUgKm5leHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0zMjgz
IiwgTE9DS19DTlRfR1RaKHdyaXRlX2xvY2tlZF90cmVlKSk7CisKKwlpZiAobm9kZSA9PSBOVUxM
KQorCQlyZXR1cm4gMTsKKworCWlmIChaRl9JU1NFVChub2RlLCBKTk9ERV9SSVApKQorCQlyZXR1
cm4gMTsKKworCWFzc2VydCgibmlraXRhLTMyNzAiLCBub2RlICE9IE5VTEwpOworCWFzc2VydF9y
d193cml0ZV9sb2NrZWQoJih6bm9kZV9nZXRfdHJlZShub2RlKS0+dHJlZV9sb2NrKSk7CisKKwlm
b3IgKHNjYW4gPSBub2RlOyB6bm9kZV9pc19sZWZ0X2Nvbm5lY3RlZChzY2FuKTsgc2NhbiA9IG5l
eHQpIHsKKwkJbmV4dCA9IHNjYW4tPmxlZnQ7CisJCWlmIChuZXh0ICE9IE5VTEwgJiYgIVpGX0lT
U0VUKG5leHQsIEpOT0RFX1JJUCkpIHsKKwkJCWFzc2VydCgibmlraXRhLTMyNzEiLCB6bm9kZV9p
c19yaWdodF9jb25uZWN0ZWQobmV4dCkpOworCQkJYXNzZXJ0KCJuaWtpdGEtMzI3MiIsIG5leHQt
PnJpZ2h0ID09IHNjYW4pOworCQl9IGVsc2UKKwkJCWJyZWFrOworCX0KKwlmb3IgKHNjYW4gPSBu
b2RlOyB6bm9kZV9pc19yaWdodF9jb25uZWN0ZWQoc2Nhbik7IHNjYW4gPSBuZXh0KSB7CisJCW5l
eHQgPSBzY2FuLT5yaWdodDsKKwkJaWYgKG5leHQgIT0gTlVMTCAmJiAhWkZfSVNTRVQobmV4dCwg
Sk5PREVfUklQKSkgeworCQkJYXNzZXJ0KCJuaWtpdGEtMzI3MyIsIHpub2RlX2lzX2xlZnRfY29u
bmVjdGVkKG5leHQpKTsKKwkJCWFzc2VydCgibmlraXRhLTMyNzQiLCBuZXh0LT5sZWZ0ID09IHNj
YW4pOworCQl9IGVsc2UKKwkJCWJyZWFrOworCX0KKwlyZXR1cm4gMTsKK30KKworI2VuZGlmCisK
Ky8qIFpub2RlIHNpYmxpbmcgcG9pbnRlcnMgbWFpbnRlbmVuY2UuICovCisKKy8qIFpub2RlIHNp
YmxpbmcgcG9pbnRlcnMgYXJlIGVzdGFibGlzaGVkIGJldHdlZW4gYW55IG5laWdoYm9yZWQgbm9k
ZXMgd2hpY2ggYXJlCisgICBpbiBjYWNoZS4gIFRoZXJlIGFyZSB0d28gem5vZGUgc3RhdGUgYml0
cyAoSk5PREVfTEVGVF9DT05ORUNURUQsCisgICBKTk9ERV9SSUdIVF9DT05ORUNURUQpLCBpZiBs
ZWZ0IG9yIHJpZ2h0IHNpYmxpbmcgcG9pbnRlciBjb250YWlucyBhY3R1YWwKKyAgIHZhbHVlIChl
dmVuIE5VTEwpLCBjb3JyZXNwb25kZWQgSk5PREVfKl9DT05ORUNURUQgYml0IGlzIHNldC4KKwor
ICAgUmVpc2VyNCB0cmVlIG9wZXJhdGlvbnMgd2hpY2ggbWF5IGFsbG9jYXRlIG5ldyB6bm9kZXMg
KENCSywgdHJlZSBiYWxhbmNpbmcpCisgICB0YWtlIGNhcmUgYWJvdXQgc2VhcmNoaW5nIChoYXNo
IHRhYmxlIGxvb2t1cCBtYXkgYmUgcmVxdWlyZWQpIG9mIHpub2RlCisgICBuZWlnaGJvcnMsIGVz
dGFibGlzaGluZyBzaWJsaW5nIHBvaW50ZXJzIGJldHdlZW4gdGhlbSBhbmQgc2V0dGluZworICAg
Sk5PREVfKl9DT05ORUNURUQgc3RhdGUgYml0cy4gKi8KKworLyogYWRqdXN0aW5nIG9mIHNpYmxp
bmcgcG9pbnRlcnMgYW5kIGBjb25uZWN0ZWQnIHN0YXRlcyBmb3IgdHdvCisgICBuZWlnaGJvcnM7
IHdvcmtzIGlmIG9uZSBuZWlnaGJvciBpcyBOVUxMICh3YXMgbm90IGZvdW5kKS4gKi8KKworLyog
RklYTUUtVlM6IHRoaXMgaXMgdW5zdGF0aWMtZWQgdG8gdXNlIGluIHRyZWUuYyBpbiBwcmVwYXJl
X3R3aWdfY3V0ICovCit2b2lkIGxpbmtfbGVmdF9hbmRfcmlnaHQoem5vZGUgKiBsZWZ0LCB6bm9k
ZSAqIHJpZ2h0KQoreworCWFzc2VydCgibmlraXRhLTMyNzUiLCBjaGVja19zaWJsaW5nX2xpc3Qo
bGVmdCkpOworCWFzc2VydCgibmlraXRhLTMyNzUiLCBjaGVja19zaWJsaW5nX2xpc3QocmlnaHQp
KTsKKworCWlmIChsZWZ0ICE9IE5VTEwpIHsKKwkJaWYgKGxlZnQtPnJpZ2h0ID09IE5VTEwpIHsK
KwkJCWxlZnQtPnJpZ2h0ID0gcmlnaHQ7CisJCQlaRl9TRVQobGVmdCwgSk5PREVfUklHSFRfQ09O
TkVDVEVEKTsKKworCQkJT05fREVCVUcobGVmdC0+cmlnaHRfdmVyc2lvbiA9CisJCQkJIGF0b21p
Y19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCQkgICAgKTsKKworCQl9IGVsc2Ug
aWYgKFpGX0lTU0VUKGxlZnQtPnJpZ2h0LCBKTk9ERV9IRUFSRF9CQU5TSEVFKQorCQkJICAgJiYg
bGVmdC0+cmlnaHQgIT0gcmlnaHQpIHsKKworCQkJT05fREVCVUcobGVmdC0+cmlnaHQtPmxlZnRf
dmVyc2lvbiA9CisJCQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJ
CQkJIGxlZnQtPnJpZ2h0X3ZlcnNpb24gPQorCQkJCSBhdG9taWNfaW5jX3JldHVybigmZGVsaW1f
a2V5X3ZlcnNpb24pOyk7CisKKwkJCWxlZnQtPnJpZ2h0LT5sZWZ0ID0gTlVMTDsKKwkJCWxlZnQt
PnJpZ2h0ID0gcmlnaHQ7CisJCQlaRl9TRVQobGVmdCwgSk5PREVfUklHSFRfQ09OTkVDVEVEKTsK
KwkJfSBlbHNlCisJCQkvKgorCQkJICogdGhlcmUgaXMgYSByYWNlIGNvbmRpdGlvbiBpbiByZW5l
d19zaWJsaW5nX2xpbmsoKQorCQkJICogYW5kIGFzc2VydGlvbnMgYmVsb3cgY2hlY2sgdGhhdCBp
dCBpcyBvbmx5IG9uZQorCQkJICogdGhlcmUuIFRocmVhZCBUMSBjYWxscyByZW5ld19zaWJsaW5n
X2xpbmsoKSB3aXRob3V0CisJCQkgKiBHTl9OT19BTExPQyBmbGFnLiB6bG9vaygpIGRvZXNuJ3Qg
ZmluZCBuZWlnaGJvcgorCQkJICogbm9kZSwgYnV0IGJlZm9yZSBUMSBnZXRzIHRvIHRoZQorCQkJ
ICogbGlua19sZWZ0X2FuZF9yaWdodCgpLCBhbm90aGVyIHRocmVhZCBUMiBjcmVhdGVzCisJCQkg
KiBuZWlnaGJvciBub2RlIGFuZCBjb25uZWN0cyBpdC4gY2hlY2sgZm9yCisJCQkgKiBsZWZ0LT5y
aWdodCA9PSBOVUxMIGFib3ZlIHByb3RlY3RzIFQxIGZyb20KKwkJCSAqIG92ZXJ3cml0aW5nIGNv
cnJlY3QgbGVmdC0+cmlnaHQgcG9pbnRlciBpbnN0YWxsZWQKKwkJCSAqIGJ5IFQyLgorCQkJICov
CisJCQlhc3NlcnQoIm5pa2l0YS0zMzAyIiwKKwkJCSAgICAgICByaWdodCA9PSBOVUxMIHx8IGxl
ZnQtPnJpZ2h0ID09IHJpZ2h0KTsKKwl9CisJaWYgKHJpZ2h0ICE9IE5VTEwpIHsKKwkJaWYgKHJp
Z2h0LT5sZWZ0ID09IE5VTEwpIHsKKwkJCXJpZ2h0LT5sZWZ0ID0gbGVmdDsKKwkJCVpGX1NFVChy
aWdodCwgSk5PREVfTEVGVF9DT05ORUNURUQpOworCisJCQlPTl9ERUJVRyhyaWdodC0+bGVmdF92
ZXJzaW9uID0KKwkJCQkgYXRvbWljX2luY19yZXR1cm4oJmRlbGltX2tleV92ZXJzaW9uKTsKKwkJ
CSAgICApOworCisJCX0gZWxzZSBpZiAoWkZfSVNTRVQocmlnaHQtPmxlZnQsIEpOT0RFX0hFQVJE
X0JBTlNIRUUpCisJCQkgICAmJiByaWdodC0+bGVmdCAhPSBsZWZ0KSB7CisKKwkJCU9OX0RFQlVH
KHJpZ2h0LT5sZWZ0LT5yaWdodF92ZXJzaW9uID0KKwkJCQkgYXRvbWljX2luY19yZXR1cm4oJmRl
bGltX2tleV92ZXJzaW9uKTsKKwkJCQkgcmlnaHQtPmxlZnRfdmVyc2lvbiA9CisJCQkJIGF0b21p
Y19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7KTsKKworCQkJcmlnaHQtPmxlZnQtPnJp
Z2h0ID0gTlVMTDsKKwkJCXJpZ2h0LT5sZWZ0ID0gbGVmdDsKKwkJCVpGX1NFVChyaWdodCwgSk5P
REVfTEVGVF9DT05ORUNURUQpOworCisJCX0gZWxzZQorCQkJYXNzZXJ0KCJuaWtpdGEtMzMwMyIs
CisJCQkgICAgICAgbGVmdCA9PSBOVUxMIHx8IHJpZ2h0LT5sZWZ0ID09IGxlZnQpOworCX0KKwlh
c3NlcnQoIm5pa2l0YS0zMjc1IiwgY2hlY2tfc2libGluZ19saXN0KGxlZnQpKTsKKwlhc3NlcnQo
Im5pa2l0YS0zMjc1IiwgY2hlY2tfc2libGluZ19saXN0KHJpZ2h0KSk7Cit9CisKKy8qIEF1ZGl0
ZWQgYnk6IHVta2EgKDIwMDIuMDYuMTQpICovCitzdGF0aWMgdm9pZCBsaW5rX3pub2Rlcyh6bm9k
ZSAqIGZpcnN0LCB6bm9kZSAqIHNlY29uZCwgaW50IHRvX2xlZnQpCit7CisJaWYgKHRvX2xlZnQp
CisJCWxpbmtfbGVmdF9hbmRfcmlnaHQoc2Vjb25kLCBmaXJzdCk7CisJZWxzZQorCQlsaW5rX2xl
ZnRfYW5kX3JpZ2h0KGZpcnN0LCBzZWNvbmQpOworfQorCisvKiBnZXR0aW5nIG9mIG5leHQgKHRv
IGxlZnQgb3IgdG8gcmlnaHQsIGRlcGVuZCBvbiBnbl90b19sZWZ0IGJpdCBpbiBmbGFncykKKyAg
IGNvb3JkJ3MgdW5pdCBwb3NpdGlvbiBpbiBob3Jpem9udGFsIGRpcmVjdGlvbiwgZXZlbiBhY3Jv
c3Mgbm9kZQorICAgYm91bmRhcnkuIFNob3VsZCBiZSBjYWxsZWQgdW5kZXIgdHJlZSBsb2NrLCBp
dCBwcm90ZWN0cyBub25leGlzdGVuY2Ugb2YKKyAgIHNpYmxpbmcgbGluayBvbiBwYXJlbnQgbGV2
ZWwsIGlmIGxvY2tfc2lkZV9uZWlnaGJvcigpIGZhaWxzIHdpdGgKKyAgIC1FTk9FTlQuICovCitz
dGF0aWMgaW50IGZhcl9uZXh0X2Nvb3JkKGNvb3JkX3QgKiBjb29yZCwgbG9ja19oYW5kbGUgKiBo
YW5kbGUsIGludCBmbGFncykKK3sKKwlpbnQgcmV0OworCXpub2RlICpub2RlOworCXJlaXNlcjRf
dHJlZSAqdHJlZTsKKworCWFzc2VydCgidW1rYS0yNDMiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3Nl
cnQoInVta2EtMjQ0IiwgaGFuZGxlICE9IE5VTEwpOworCWFzc2VydCgiemFtLTEwNjkiLCBoYW5k
bGUtPm5vZGUgPT0gTlVMTCk7CisKKwlyZXQgPQorCSAgICAoZmxhZ3MgJiBHTl9HT19MRUZUKSA/
IGNvb3JkX3ByZXZfdW5pdChjb29yZCkgOgorCSAgICBjb29yZF9uZXh0X3VuaXQoY29vcmQpOwor
CWlmICghcmV0KQorCQlyZXR1cm4gMDsKKworCXJldCA9CisJICAgIGxvY2tfc2lkZV9uZWlnaGJv
cihoYW5kbGUsIGNvb3JkLT5ub2RlLCBaTk9ERV9SRUFEX0xPQ0ssIGZsYWdzLCAwKTsKKwlpZiAo
cmV0KQorCQlyZXR1cm4gcmV0OworCisJbm9kZSA9IGhhbmRsZS0+bm9kZTsKKwl0cmVlID0gem5v
ZGVfZ2V0X3RyZWUobm9kZSk7CisJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisKKwljb29yZF9p
bml0X3plcm8oY29vcmQpOworCisJLyogV2UgYXZvaWQgc3luY2hyb25vdXMgcmVhZCBoZXJlIGlm
IGl0IGlzIHNwZWNpZmllZCBieSBmbGFnLiAqLworCWlmICgoZmxhZ3MgJiBHTl9BU1lOQykgJiYg
em5vZGVfcGFnZShoYW5kbGUtPm5vZGUpID09IE5VTEwpIHsKKwkJcmV0ID0ganN0YXJ0aW8oWkpO
T0RFKGhhbmRsZS0+bm9kZSkpOworCQlpZiAoIXJldCkKKwkJCXJldCA9IC1FX1JFUEVBVDsKKwkJ
Z290byBlcnJvcl9sb2NrZWQ7CisJfQorCisJLyogY29ycmVzcG9uZGVkIHpyZWxzZSgpIHNob3Vs
ZCBiZSBjYWxsZWQgYnkgdGhlIGNsaWVudHMgb2YKKwkgICBmYXJfbmV4dF9jb29yZCgpLCBpbiBw
bGFjZSB3aGVuIHRoaXMgbm9kZSBnZXRzIHVubG9ja2VkLiAqLworCXJldCA9IHpsb2FkKGhhbmRs
ZS0+bm9kZSk7CisJaWYgKHJldCkKKwkJZ290byBlcnJvcl9sb2NrZWQ7CisKKwlpZiAoZmxhZ3Mg
JiBHTl9HT19MRUZUKQorCQljb29yZF9pbml0X2xhc3RfdW5pdChjb29yZCwgbm9kZSk7CisJZWxz
ZQorCQljb29yZF9pbml0X2ZpcnN0X3VuaXQoY29vcmQsIG5vZGUpOworCisJaWYgKDApIHsKKwkg
ICAgICBlcnJvcl9sb2NrZWQ6CisJCWxvbmd0ZXJtX3VubG9ja196bm9kZShoYW5kbGUpOworCX0K
Kwl3cml0ZV9sb2NrX3RyZWUodHJlZSk7CisJcmV0dXJuIHJldDsKK30KKworLyogVmVyeSBzaWdu
aWZpY2FudCBmdW5jdGlvbiB3aGljaCBwZXJmb3JtcyBhIHN0ZXAgaW4gaG9yaXpvbnRhbCBkaXJl
Y3Rpb24KKyAgIHdoZW4gc2libGluZyBwb2ludGVyIGlzIG5vdCBhdmFpbGFibGUuICBBY3R1YWxs
eSwgaXQgaXMgb25seSBmdW5jdGlvbiB3aGljaAorICAgZG9lcyBpdC4KKyAgIE5vdGU6IHRoaXMg
ZnVuY3Rpb24gZG9lcyBub3QgcmVzdG9yZSBsb2NraW5nIHN0YXR1cyBhdCBleGl0LAorICAgY2Fs
bGVyIHNob3VsZCBkb2VzIGNhcmUgYWJvdXQgcHJvcGVyIHVubG9ja2luZyBhbmQgenJlbHNpbmcg
Ki8KK3N0YXRpYyBpbnQKK3JlbmV3X3NpYmxpbmdfbGluayhjb29yZF90ICogY29vcmQsIGxvY2tf
aGFuZGxlICogaGFuZGxlLCB6bm9kZSAqIGNoaWxkLAorCQkgICB0cmVlX2xldmVsIGxldmVsLCBp
bnQgZmxhZ3MsIGludCAqbnJfbG9ja2VkKQoreworCWludCByZXQ7CisJaW50IHRvX2xlZnQgPSBm
bGFncyAmIEdOX0dPX0xFRlQ7CisJcmVpc2VyNF9ibG9ja19uciBkYTsKKwkvKiBwYXJlbnQgb2Yg
dGhlIG5laWdoYm9yIG5vZGU7IHdlIHNldCBpdCB0byBwYXJlbnQgdW50aWwgbm90IHNoYXJpbmcK
KwkgICBvZiBvbmUgcGFyZW50IGJldHdlZW4gY2hpbGQgYW5kIG5laWdoYm9yIG5vZGUgaXMgZGV0
ZWN0ZWQgKi8KKwl6bm9kZSAqc2lkZV9wYXJlbnQgPSBjb29yZC0+bm9kZTsKKwlyZWlzZXI0X3Ry
ZWUgKnRyZWUgPSB6bm9kZV9nZXRfdHJlZShjaGlsZCk7CisJem5vZGUgKm5laWdoYm9yID0gTlVM
TDsKKworCWFzc2VydCgidW1rYS0yNDUiLCBjb29yZCAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2Et
MjQ2IiwgaGFuZGxlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0yNDciLCBjaGlsZCAhPSBOVUxM
KTsKKwlhc3NlcnQoInVta2EtMzAzIiwgdHJlZSAhPSBOVUxMKTsKKworCWluaXRfbGgoaGFuZGxl
KTsKKwl3cml0ZV9sb2NrX3RyZWUodHJlZSk7CisJcmV0ID0gZmFyX25leHRfY29vcmQoY29vcmQs
IGhhbmRsZSwgZmxhZ3MpOworCisJaWYgKHJldCkgeworCQlpZiAocmV0ICE9IC1FTk9FTlQpIHsK
KwkJCXdyaXRlX3VubG9ja190cmVlKHRyZWUpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0gZWxz
ZSB7CisJCWl0ZW1fcGx1Z2luICppcGx1ZzsKKworCQlpZiAoaGFuZGxlLT5ub2RlICE9IE5VTEwp
IHsKKwkJCSgqbnJfbG9ja2VkKSsrOworCQkJc2lkZV9wYXJlbnQgPSBoYW5kbGUtPm5vZGU7CisJ
CX0KKworCQkvKiBkb2VzIGNvb3JkIG9iamVjdCBwb2ludHMgdG8gaW50ZXJuYWwgaXRlbT8gV2Ug
ZG8gbm90CisJCSAgIHN1cHBvcnQgc2libGluZyBwb2ludGVycyBiZXR3ZWVuIHpub2RlIGZvciBm
b3JtYXR0ZWQgYW5kCisJCSAgIHVuZm9ybWF0dGVkIG5vZGVzIGFuZCByZXR1cm4gLUVfTk9fTkVJ
R0hCT1IgaW4gdGhhdCBjYXNlLiAqLworCQlpcGx1ZyA9IGl0ZW1fcGx1Z2luX2J5X2Nvb3JkKGNv
b3JkKTsKKwkJaWYgKCFpdGVtX2lzX2ludGVybmFsKGNvb3JkKSkgeworCQkJbGlua196bm9kZXMo
Y2hpbGQsIE5VTEwsIHRvX2xlZnQpOworCQkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisJCQkv
KiB3ZSBrbm93IHRoZXJlIGNhbid0IGJlIGZvcm1hdHRlZCBuZWlnaGJvciAqLworCQkJcmV0dXJu
IFJFVEVSUigtRV9OT19ORUlHSEJPUik7CisJCX0KKwkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7
CisKKwkJaXBsdWctPnMuaW50ZXJuYWwuZG93bl9saW5rKGNvb3JkLCBOVUxMLCAmZGEpOworCisJ
CWlmIChmbGFncyAmIEdOX05PX0FMTE9DKSB7CisJCQluZWlnaGJvciA9IHpsb29rKHRyZWUsICZk
YSk7CisJCX0gZWxzZSB7CisJCQluZWlnaGJvciA9CisJCQkgICAgemdldCh0cmVlLCAmZGEsIHNp
ZGVfcGFyZW50LCBsZXZlbCwKKwkJCQkgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCQl9
CisKKwkJaWYgKElTX0VSUihuZWlnaGJvcikpIHsKKwkJCXJldCA9IFBUUl9FUlIobmVpZ2hib3Ip
OworCQkJcmV0dXJuIHJldDsKKwkJfQorCisJCWlmIChuZWlnaGJvcikKKwkJCS8qIHVwZGF0ZSBk
ZWxpbWl0aW5nIGtleXMgKi8KKwkJCXNldF9jaGlsZF9kZWxpbWl0aW5nX2tleXMoY29vcmQtPm5v
ZGUsIGNvb3JkLCBuZWlnaGJvcik7CisKKwkJd3JpdGVfbG9ja190cmVlKHRyZWUpOworCX0KKwor
CWlmIChsaWtlbHkobmVpZ2hib3IgPT0gTlVMTCB8fAorCQkgICAoem5vZGVfZ2V0X2xldmVsKGNo
aWxkKSA9PSB6bm9kZV9nZXRfbGV2ZWwobmVpZ2hib3IpCisJCSAgICAmJiBjaGlsZCAhPSBuZWln
aGJvcikpKQorCQlsaW5rX3pub2RlcyhjaGlsZCwgbmVpZ2hib3IsIHRvX2xlZnQpOworCWVsc2Ug
eworCQl3YXJuaW5nKCJuaWtpdGEtMzUzMiIsCisJCQkiU2libGluZyBub2RlcyBvbiB0aGUgZGlm
ZmVyZW50IGxldmVsczogJWkgIT0gJWlcbiIsCisJCQl6bm9kZV9nZXRfbGV2ZWwoY2hpbGQpLCB6
bm9kZV9nZXRfbGV2ZWwobmVpZ2hib3IpKTsKKwkJcmV0ID0gUkVURVJSKC1FSU8pOworCX0KKwor
CXdyaXRlX3VubG9ja190cmVlKHRyZWUpOworCisJLyogaWYgR05fTk9fQUxMT0MgaXNuJ3Qgc2V0
IHdlIGtlZXAgcmVmZXJlbmNlIHRvIG5laWdoYm9yIHpub2RlICovCisJaWYgKG5laWdoYm9yICE9
IE5VTEwgJiYgKGZsYWdzICYgR05fTk9fQUxMT0MpKQorCQkvKiBhdG9taWNfZGVjKCZaSk5PREUo
bmVpZ2hib3IpLT54X2NvdW50KTsgKi8KKwkJenB1dChuZWlnaGJvcik7CisKKwlyZXR1cm4gcmV0
OworfQorCisvKiBUaGlzIGZ1bmN0aW9uIGlzIGZvciBlc3RhYmxpc2hpbmcgb2Ygb25lIHNpZGUg
cmVsYXRpb24uICovCisvKiBBdWRpdGVkIGJ5OiB1bWthICgyMDAyLjA2LjE0KSAqLworc3RhdGlj
IGludCBjb25uZWN0X29uZV9zaWRlKGNvb3JkX3QgKiBjb29yZCwgem5vZGUgKiBub2RlLCBpbnQg
ZmxhZ3MpCit7CisJY29vcmRfdCBsb2NhbDsKKwlsb2NrX2hhbmRsZSBoYW5kbGU7CisJaW50IG5y
X2xvY2tlZDsKKwlpbnQgcmV0OworCisJYXNzZXJ0KCJ1bWthLTI0OCIsIGNvb3JkICE9IE5VTEwp
OworCWFzc2VydCgidW1rYS0yNDkiLCBub2RlICE9IE5VTEwpOworCisJY29vcmRfZHVwX25vY2hl
Y2soJmxvY2FsLCBjb29yZCk7CisKKwlpbml0X2xoKCZoYW5kbGUpOworCisJcmV0ID0KKwkgICAg
cmVuZXdfc2libGluZ19saW5rKCZsb2NhbCwgJmhhbmRsZSwgbm9kZSwgem5vZGVfZ2V0X2xldmVs
KG5vZGUpLAorCQkJICAgICAgIGZsYWdzIHwgR05fTk9fQUxMT0MsICZucl9sb2NrZWQpOworCisJ
aWYgKGhhbmRsZS5ub2RlICE9IE5VTEwpIHsKKwkJLyogY29tcGxlbWVudGFyeSBvcGVyYXRpb25z
IGZvciB6bG9hZCgpIGFuZCBsb2NrKCkgaW4gZmFyX25leHRfY29vcmQoKSAqLworCQl6cmVsc2Uo
aGFuZGxlLm5vZGUpOworCQlsb25ndGVybV91bmxvY2tfem5vZGUoJmhhbmRsZSk7CisJfQorCisJ
Lyogd2UgY2F0Y2ggZXJyb3IgY29kZXMgd2hpY2ggYXJlIG5vdCBpbnRlcmVzdGluZyBmb3IgdXMg
YmVjYXVzZSB3ZQorCSAgIHJ1biByZW5ld19zaWJsaW5nX2xpbmsoKSBvbmx5IGZvciB6bm9kZSBj
b25uZWN0aW9uLiAqLworCWlmIChyZXQgPT0gLUVOT0VOVCB8fCByZXQgPT0gLUVfTk9fTkVJR0hC
T1IpCisJCXJldHVybiAwOworCisJcmV0dXJuIHJldDsKK30KKworLyogaWYgQGNoaWxkIGlzIG5v
dCBpbiBgY29ubmVjdGVkJyBzdGF0ZSwgcGVyZm9ybXMgaGFzaCBzZWFyY2hlcyBmb3IgbGVmdCBh
bmQKKyAgIHJpZ2h0IG5laWdoYm9yIG5vZGVzIGFuZCBlc3RhYmxpc2hlcyBob3Jpem9udGFsIHNp
YmxpbmcgbGlua3MgKi8KKy8qIEF1ZGl0ZWQgYnk6IHVta2EgKDIwMDIuMDYuMTQpLCB1bWthICgy
MDAyLjA2LjE1KSAqLworaW50IGNvbm5lY3Rfem5vZGUoY29vcmRfdCAqIHBhcmVudF9jb29yZCwg
em5vZGUgKiBjaGlsZCkKK3sKKwlyZWlzZXI0X3RyZWUgKnRyZWUgPSB6bm9kZV9nZXRfdHJlZShj
aGlsZCk7CisJaW50IHJldCA9IDA7CisKKwlhc3NlcnQoInphbS0zMzAiLCBwYXJlbnRfY29vcmQg
IT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0tMzMxIiwgY2hpbGQgIT0gTlVMTCk7CisJYXNzZXJ0KCJ6
YW0tMzMyIiwgcGFyZW50X2Nvb3JkLT5ub2RlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0zMDUi
LCB0cmVlICE9IE5VTEwpOworCisJLyogaXQgaXMgdHJpdmlhbCB0byBgY29ubmVjdCcgcm9vdCB6
bm9kZSBiZWNhdXNlIGl0IGNhbid0IGhhdmUKKwkgICBuZWlnaGJvcnMgKi8KKwlpZiAoem5vZGVf
YWJvdmVfcm9vdChwYXJlbnRfY29vcmQtPm5vZGUpKSB7CisJCWNoaWxkLT5sZWZ0ID0gTlVMTDsK
KwkJY2hpbGQtPnJpZ2h0ID0gTlVMTDsKKwkJWkZfU0VUKGNoaWxkLCBKTk9ERV9MRUZUX0NPTk5F
Q1RFRCk7CisJCVpGX1NFVChjaGlsZCwgSk5PREVfUklHSFRfQ09OTkVDVEVEKTsKKworCQlPTl9E
RUJVRyhjaGlsZC0+bGVmdF92ZXJzaW9uID0KKwkJCSBhdG9taWNfaW5jX3JldHVybigmZGVsaW1f
a2V5X3ZlcnNpb24pOworCQkJIGNoaWxkLT5yaWdodF92ZXJzaW9uID0KKwkJCSBhdG9taWNfaW5j
X3JldHVybigmZGVsaW1fa2V5X3ZlcnNpb24pOyk7CisKKwkJcmV0dXJuIDA7CisJfQorCisJLyog
bG9hZCBwYXJlbnQgbm9kZSAqLworCWNvb3JkX2NsZWFyX2lwbHVnKHBhcmVudF9jb29yZCk7CisJ
cmV0ID0gemxvYWQocGFyZW50X2Nvb3JkLT5ub2RlKTsKKworCWlmIChyZXQgIT0gMCkKKwkJcmV0
dXJuIHJldDsKKworCS8qIHByb3RlY3QgYGNvbm5lY3RlZCcgc3RhdGUgY2hlY2sgYnkgdHJlZV9s
b2NrICovCisJcmVhZF9sb2NrX3RyZWUodHJlZSk7CisKKwlpZiAoIXpub2RlX2lzX3JpZ2h0X2Nv
bm5lY3RlZChjaGlsZCkpIHsKKwkJcmVhZF91bmxvY2tfdHJlZSh0cmVlKTsKKwkJLyogY29ubmVj
dCByaWdodCAoZGVmYXVsdCBpcyByaWdodCkgKi8KKwkJcmV0ID0gY29ubmVjdF9vbmVfc2lkZShw
YXJlbnRfY29vcmQsIGNoaWxkLCBHTl9OT19BTExPQyk7CisJCWlmIChyZXQpCisJCQlnb3RvIHpy
ZWxzZV9hbmRfcmV0OworCisJCXJlYWRfbG9ja190cmVlKHRyZWUpOworCX0KKworCXJldCA9IHpu
b2RlX2lzX2xlZnRfY29ubmVjdGVkKGNoaWxkKTsKKworCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7
CisKKwlpZiAoIXJldCkgeworCQlyZXQgPQorCQkgICAgY29ubmVjdF9vbmVfc2lkZShwYXJlbnRf
Y29vcmQsIGNoaWxkLAorCQkJCSAgICAgR05fTk9fQUxMT0MgfCBHTl9HT19MRUZUKTsKKwl9IGVs
c2UKKwkJcmV0ID0gMDsKKworICAgICAgenJlbHNlX2FuZF9yZXQ6CisJenJlbHNlKHBhcmVudF9j
b29yZC0+bm9kZSk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiB0aGlzIGZ1bmN0aW9uIGlzIGxp
a2UgcmVuZXdfc2libGluZ19saW5rKCkgYnV0IGFsbG9jYXRlcyBuZWlnaGJvciBub2RlIGlmCisg
ICBpdCBkb2Vzbid0IGV4aXN0IGFuZCBgY29ubmVjdHMnIGl0LiBJdCBtYXkgcmVxdWlyZSBtYWtp
bmcgdHdvIHN0ZXBzIGluCisgICBob3Jpem9udGFsIGRpcmVjdGlvbiwgZmlyc3Qgb25lIGZvciBu
ZWlnaGJvciBub2RlIGZpbmRpbmcvYWxsb2NhdGlvbiwKKyAgIHNlY29uZCBvbmUgaXMgZm9yIGZp
bmRpbmcgbmVpZ2hib3Igb2YgbmVpZ2hib3IgdG8gY29ubmVjdCBmcmVzaGx5IGFsbG9jYXRlZAor
ICAgem5vZGUuICovCisvKiBBdWRpdGVkIGJ5OiB1bWthICgyMDAyLjA2LjE0KSwgdW1rYSAoMjAw
Mi4wNi4xNSkgKi8KK3N0YXRpYyBpbnQKK3JlbmV3X25laWdoYm9yKGNvb3JkX3QgKiBjb29yZCwg
em5vZGUgKiBub2RlLCB0cmVlX2xldmVsIGxldmVsLCBpbnQgZmxhZ3MpCit7CisJY29vcmRfdCBs
b2NhbDsKKwlsb2NrX2hhbmRsZSBlbXB0eVsyXTsKKwlyZWlzZXI0X3RyZWUgKnRyZWUgPSB6bm9k
ZV9nZXRfdHJlZShub2RlKTsKKwl6bm9kZSAqbmVpZ2hib3IgPSBOVUxMOworCWludCBucl9sb2Nr
ZWQgPSAwOworCWludCByZXQ7CisKKwlhc3NlcnQoInVta2EtMjUwIiwgY29vcmQgIT0gTlVMTCk7
CisJYXNzZXJ0KCJ1bWthLTI1MSIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTMwNyIs
IHRyZWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTMwOCIsIGxldmVsIDw9IHRyZWUtPmhlaWdo
dCk7CisKKwkvKiB1bWthICgyMDAyLjA2LjE0KQorCSAgIEhlcmUgcHJvYmFibHkgc2hvdWxkIGJl
IGEgY2hlY2sgZm9yIGdpdmVuICJsZXZlbCIgdmFsaWRuZXNzLgorCSAgIFNvbWV0aGluZyBsaWtl
IGFzc2VydCgieHh4LXl5eSIsIGxldmVsIDwgUkVBTF9NQVhfWlRSRUVfSEVJR0hUKTsKKwkgKi8K
KworCWNvb3JkX2R1cCgmbG9jYWwsIGNvb3JkKTsKKworCXJldCA9CisJICAgIHJlbmV3X3NpYmxp
bmdfbGluaygmbG9jYWwsICZlbXB0eVswXSwgbm9kZSwgbGV2ZWwsCisJCQkgICAgICAgZmxhZ3Mg
JiB+R05fTk9fQUxMT0MsICZucl9sb2NrZWQpOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJ
LyogdHJlZSBsb2NrIGlzIG5vdCBuZWVkZWQgaGVyZSBiZWNhdXNlIHdlIGtlZXAgcGFyZW50IG5v
ZGUocykgbG9ja2VkCisJICAgYW5kIHJlZmVyZW5jZSB0byBuZWlnaGJvciB6bm9kZSBpbmNyZW1l
bnRlZCAqLworCW5laWdoYm9yID0gKGZsYWdzICYgR05fR09fTEVGVCkgPyBub2RlLT5sZWZ0IDog
bm9kZS0+cmlnaHQ7CisKKwlyZWFkX2xvY2tfdHJlZSh0cmVlKTsKKwlyZXQgPSB6bm9kZV9pc19j
b25uZWN0ZWQobmVpZ2hib3IpOworCXJlYWRfdW5sb2NrX3RyZWUodHJlZSk7CisJaWYgKHJldCkg
eworCQlyZXQgPSAwOworCQlnb3RvIG91dDsKKwl9CisKKwlyZXQgPQorCSAgICByZW5ld19zaWJs
aW5nX2xpbmsoJmxvY2FsLCAmZW1wdHlbbnJfbG9ja2VkXSwgbmVpZ2hib3IsIGxldmVsLAorCQkJ
ICAgICAgIGZsYWdzIHwgR05fTk9fQUxMT0MsICZucl9sb2NrZWQpOworCS8qIHNlY29uZCByZW5l
d19zaWJsaW5nX2xpbmsoKSBjYWxsIGlzIHVzZWQgZm9yIHpub2RlIGNvbm5lY3Rpb24gb25seSwK
KwkgICBzbyB3ZSBjYW4gbGl2ZSB3aXRoIHRoZXNlIGVycm9ycyAqLworCWlmICgtRU5PRU5UID09
IHJldCB8fCAtRV9OT19ORUlHSEJPUiA9PSByZXQpCisJCXJldCA9IDA7CisKKyAgICAgIG91dDoK
KworCWZvciAoLS1ucl9sb2NrZWQ7IG5yX2xvY2tlZCA+PSAwOyAtLW5yX2xvY2tlZCkgeworCQl6
cmVsc2UoZW1wdHlbbnJfbG9ja2VkXS5ub2RlKTsKKwkJbG9uZ3Rlcm1fdW5sb2NrX3pub2RlKCZl
bXB0eVtucl9sb2NrZWRdKTsKKwl9CisKKwlpZiAobmVpZ2hib3IgIT0gTlVMTCkKKwkJLyogZGVj
cmVtZW50IHpub2RlIHJlZmVyZW5jZSBjb3VudGVyIHdpdGhvdXQgYWN0dWFsbHkKKwkJICAgcmVs
ZWFzaW5nIGl0LiAqLworCQlhdG9taWNfZGVjKCZaSk5PREUobmVpZ2hib3IpLT54X2NvdW50KTsK
KworCXJldHVybiByZXQ7Cit9CisKKy8qCisgICByZWlzZXI0X2dldF9uZWlnaGJvcigpIC0tIGxv
Y2sgbm9kZSdzIG5laWdoYm9yLgorCisgICByZWlzZXI0X2dldF9uZWlnaGJvcigpIGxvY2tzIG5v
ZGUncyBuZWlnaGJvciAobGVmdCBvciByaWdodCBvbmUsIGRlcGVuZHMgb24KKyAgIGdpdmVuIHBh
cmFtZXRlcikgdXNpbmcgc2libGluZyBsaW5rIHRvIGl0LiBJZiBzaWJsaW5nIGxpbmsgaXMgbm90
IGF2YWlsYWJsZQorICAgKGkuZS4gbmVpZ2hib3Igem5vZGUgaXMgbm90IGluIGNhY2hlKSBhbmQg
ZmxhZ3MgYWxsb3cgcmVhZCBibG9ja3MsIHdlIGdvIG9uZQorICAgbGV2ZWwgdXAgZm9yIGluZm9y
bWF0aW9uIGFib3V0IG5laWdoYm9yJ3MgZGlzayBhZGRyZXNzLiBXZSBsb2NrIG5vZGUncworICAg
cGFyZW50LCBpZiBpdCBpcyBjb21tb24gcGFyZW50IGZvciBib3RoICdub2RlJyBhbmQgaXRzIG5l
aWdoYm9yLCBuZWlnaGJvcidzCisgICBkaXNrIGFkZHJlc3MgaXMgaW4gbmV4dCAodG8gbGVmdCBv
ciB0byByaWdodCkgZG93biBsaW5rIGZyb20gbGluayB0aGF0IHBvaW50cworICAgdG8gb3JpZ2lu
YWwgbm9kZS4gSWYgbm90LCB3ZSBuZWVkIHRvIGxvY2sgcGFyZW50J3MgbmVpZ2hib3IsIHJlYWQg
aXRzIGNvbnRlbnQKKyAgIGFuZCB0YWtlIGZpcnN0KGxhc3QpIGRvd25saW5rIHdpdGggbmVpZ2hi
b3IncyBkaXNrIGFkZHJlc3MuICBUaGF0IGxvY2tpbmcKKyAgIGNvdWxkIGJlIGRvbmUgYnkgdXNp
bmcgc2libGluZyBsaW5rIGFuZCBsb2NrX25laWdoYm9yKCkgZnVuY3Rpb24sIGlmIHNpYmxpbmcK
KyAgIGxpbmsgZXhpc3RzLiBJbiBhbm90aGVyIGNhc2Ugd2UgaGF2ZSB0byBnbyBsZXZlbCB1cCBh
Z2FpbiB1bnRpbCB3ZSBmaW5kCisgICBjb21tb24gcGFyZW50IG9yIHZhbGlkIHNpYmxpbmcgbGlu
ay4gVGhlbiBnbyBkb3duCisgICBhbGxvY2F0aW5nL2Nvbm5lY3RpbmcvbG9ja2luZy9yZWFkaW5n
IG5vZGVzIHVudGlsIG5laWdoYm9yIG9mIGZpcnN0IG9uZSBpcworICAgbG9ja2VkLgorCisgICBA
bmVpZ2hib3I6ICByZXN1bHQgbG9jayBoYW5kbGUsCisgICBAbm9kZTogYSBub2RlIHdoaWNoIHdl
IGxvY2sgbmVpZ2hib3Igb2YsCisgICBAbG9ja19tb2RlOiBsb2NrIG1vZGUge0xNX1JFQUQsIExN
X1dSSVRFfSwKKyAgIEBmbGFnczogbG9naWNhbCBPUiBvZiB7R05fKn0gKHNlZSBkZXNjcmlwdGlv
biBhYm92ZSkgc3Vic2V0LgorCisgICBAcmV0dXJuOiAwIGlmIHN1Y2Nlc3MsIG5lZ2F0aXZlIHZh
bHVlIGlmIGxvY2sgd2FzIGltcG9zc2libGUgZHVlIHRvIGFuIGVycm9yCisgICBvciBsYWNrIG9m
IG5laWdoYm9yIG5vZGUuCisqLworCisvKiBBdWRpdGVkIGJ5OiB1bWthICgyMDAyLjA2LjE0KSwg
dW1rYSAoMjAwMi4wNi4xNSkgKi8KK2ludAorcmVpc2VyNF9nZXRfbmVpZ2hib3IobG9ja19oYW5k
bGUgKiBuZWlnaGJvciwgem5vZGUgKiBub2RlLAorCQkgICAgIHpub2RlX2xvY2tfbW9kZSBsb2Nr
X21vZGUsIGludCBmbGFncykKK3sKKwlyZWlzZXI0X3RyZWUgKnRyZWUgPSB6bm9kZV9nZXRfdHJl
ZShub2RlKTsKKwlsb2NrX2hhbmRsZSBwYXRoW1JFQUxfTUFYX1pUUkVFX0hFSUdIVF07CisKKwlj
b29yZF90IGNvb3JkOworCisJdHJlZV9sZXZlbCBiYXNlX2xldmVsOworCXRyZWVfbGV2ZWwgaCA9
IDA7CisJaW50IHJldDsKKworCWFzc2VydCgidW1rYS0yNTIiLCB0cmVlICE9IE5VTEwpOworCWFz
c2VydCgidW1rYS0yNTMiLCBuZWlnaGJvciAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMjU0Iiwg
bm9kZSAhPSBOVUxMKTsKKworCWJhc2VfbGV2ZWwgPSB6bm9kZV9nZXRfbGV2ZWwobm9kZSk7CisK
Kwlhc3NlcnQoInVta2EtMzEwIiwgYmFzZV9sZXZlbCA8PSB0cmVlLT5oZWlnaHQpOworCisJY29v
cmRfaW5pdF96ZXJvKCZjb29yZCk7CisKKyAgICAgIGFnYWluOgorCS8qIGZpcnN0LCB3ZSB0cnkg
dG8gdXNlIHNpbXBsZSBsb2NrX25laWdoYm9yKCkgd2hpY2ggcmVxdWlyZXMgc2libGluZworCSAg
IGxpbmsgZXhpc3RlbmNlICovCisJcmVhZF9sb2NrX3RyZWUodHJlZSk7CisJcmV0ID0gbG9ja19z
aWRlX25laWdoYm9yKG5laWdoYm9yLCBub2RlLCBsb2NrX21vZGUsIGZsYWdzLCAxKTsKKwlyZWFk
X3VubG9ja190cmVlKHRyZWUpOworCWlmICghcmV0KSB7CisJCS8qIGxvYWQgem5vZGUgY29udGVu
dCBpZiBpdCB3YXMgc3BlY2lmaWVkICovCisJCWlmIChmbGFncyAmIEdOX0xPQURfTkVJR0hCT1Ip
IHsKKwkJCXJldCA9IHpsb2FkKG5vZGUpOworCQkJaWYgKHJldCkKKwkJCQlsb25ndGVybV91bmxv
Y2tfem5vZGUobmVpZ2hib3IpOworCQl9CisJCXJldHVybiByZXQ7CisJfQorCisJLyogb25seSAt
RU5PRU5UIG1lYW5zIHdlIG1heSBsb29rIHVwd2FyZCBhbmQgdHJ5IHRvIGNvbm5lY3QKKwkgICBA
bm9kZSB3aXRoIGl0cyBuZWlnaGJvciAoaWYgQGZsYWdzIGFsbG93IHVzIHRvIGRvIGl0KSAqLwor
CWlmIChyZXQgIT0gLUVOT0VOVCB8fCAhKGZsYWdzICYgR05fQ0FOX1VTRV9VUFBFUl9MRVZFTFMp
KQorCQlyZXR1cm4gcmV0OworCisJLyogYmVmb3JlIGVzdGFibGlzaGluZyBvZiBzaWJsaW5nIGxp
bmsgd2UgbG9jayBwYXJlbnQgbm9kZTsgaXQgaXMKKwkgICByZXF1aXJlZCBieSByZW5ld19uZWln
aGJvcigpIHRvIHdvcmsuICAqLworCWluaXRfbGgoJnBhdGhbMF0pOworCXJldCA9IHJlaXNlcjRf
Z2V0X3BhcmVudCgmcGF0aFswXSwgbm9kZSwgWk5PREVfUkVBRF9MT0NLKTsKKwlpZiAocmV0KQor
CQlyZXR1cm4gcmV0OworCWlmICh6bm9kZV9hYm92ZV9yb290KHBhdGhbMF0ubm9kZSkpIHsKKwkJ
bG9uZ3Rlcm1fdW5sb2NrX3pub2RlKCZwYXRoWzBdKTsKKwkJcmV0dXJuIFJFVEVSUigtRV9OT19O
RUlHSEJPUik7CisJfQorCisJd2hpbGUgKDEpIHsKKwkJem5vZGUgKmNoaWxkID0gKGggPT0gMCkg
PyBub2RlIDogcGF0aFtoIC0gMV0ubm9kZTsKKwkJem5vZGUgKnBhcmVudCA9IHBhdGhbaF0ubm9k
ZTsKKworCQlyZXQgPSB6bG9hZChwYXJlbnQpOworCQlpZiAocmV0KQorCQkJYnJlYWs7CisKKwkJ
cmV0ID0gZmluZF9jaGlsZF9wdHIocGFyZW50LCBjaGlsZCwgJmNvb3JkKTsKKworCQlpZiAocmV0
KSB7CisJCQl6cmVsc2UocGFyZW50KTsKKwkJCWJyZWFrOworCQl9CisKKwkJLyogdHJ5IHRvIGVz
dGFibGlzaCBtaXNzaW5nIHNpYmxpbmcgbGluayAqLworCQlyZXQgPSByZW5ld19uZWlnaGJvcigm
Y29vcmQsIGNoaWxkLCBoICsgYmFzZV9sZXZlbCwgZmxhZ3MpOworCisJCXpyZWxzZShwYXJlbnQp
OworCisJCXN3aXRjaCAocmV0KSB7CisJCWNhc2UgMDoKKwkJCS8qIHVubG9ja2luZyBvZiBwYXJl
bnQgem5vZGUgcHJldmVudHMgc2ltcGxlCisJCQkgICBkZWFkbG9jayBzaXR1YXRpb24gKi8KKwkJ
CWRvbmVfbGgoJnBhdGhbaF0pOworCisJCQkvKiBkZXBlbmQgb24gdHJlZSBsZXZlbCB3ZSBzdGF5
IG9uIHdlIHJlcGVhdCBmaXJzdAorCQkJICAgbG9ja2luZyBhdHRlbXB0IC4uLiAgKi8KKwkJCWlm
IChoID09IDApCisJCQkJZ290byBhZ2FpbjsKKworCQkJLyogLi4uIG9yIHJlcGVhdCBlc3RhYmxp
c2hpbmcgb2Ygc2libGluZyBsaW5rIGF0CisJCQkgICBvbmUgbGV2ZWwgYmVsb3cuICovCisJCQkt
LWg7CisJCQlicmVhazsKKworCQljYXNlIC1FTk9FTlQ6CisJCQkvKiBzaWJsaW5nIGxpbmsgaXMg
bm90IGF2YWlsYWJsZSAtLSB3ZSBnbworCQkJICAgdXB3YXJkLiAqLworCQkJaW5pdF9saCgmcGF0
aFtoICsgMV0pOworCQkJcmV0ID0KKwkJCSAgICByZWlzZXI0X2dldF9wYXJlbnQoJnBhdGhbaCAr
IDFdLCBwYXJlbnQsCisJCQkJCSAgICAgICBaTk9ERV9SRUFEX0xPQ0spOworCQkJaWYgKHJldCkK
KwkJCQlnb3RvIGZhaWw7CisJCQkrK2g7CisJCQlpZiAoem5vZGVfYWJvdmVfcm9vdChwYXRoW2hd
Lm5vZGUpKSB7CisJCQkJcmV0ID0gUkVURVJSKC1FX05PX05FSUdIQk9SKTsKKwkJCQlnb3RvIGZh
aWw7CisJCQl9CisJCQlicmVhazsKKworCQljYXNlIC1FX0RFQURMT0NLOgorCQkJLyogdGhlcmUg
d2FzIGxvY2sgcmVxdWVzdCBmcm9tIGhpLXByaSBsb2NrZXIuIGlmCisJCQkgICBpdCBpcyBwb3Nz
aWJsZSB3ZSB1bmxvY2sgbGFzdCBwYXJlbnQgbm9kZSBhbmQKKwkJCSAgIHJlLWxvY2sgaXQgYWdh
aW4uICovCisJCQlmb3IgKDsgcmVpc2VyNF9jaGVja19kZWFkbG9jaygpOyBoLS0pIHsKKwkJCQlk
b25lX2xoKCZwYXRoW2hdKTsKKwkJCQlpZiAoaCA9PSAwKQorCQkJCQlnb3RvIGZhaWw7CisJCQl9
CisKKwkJCWJyZWFrOworCisJCWRlZmF1bHQ6CS8qIG90aGVyIGVycm9ycy4gKi8KKwkJCWdvdG8g
ZmFpbDsKKwkJfQorCX0KKyAgICAgIGZhaWw6CisJT05fREVCVUcoY2hlY2tfbG9ja19ub2RlX2Rh
dGEobm9kZSkpOworCU9OX0RFQlVHKGNoZWNrX2xvY2tfZGF0YSgpKTsKKworCS8qIHVubG9jayBw
YXRoICovCisJZG8geworCQkvKiBGSVhNRS1aYW06IHdoZW4gd2UgZ2V0IGhlcmUgZnJvbSBjYXNl
IC1FX0RFQURMT0NLJ3MgZ290bworCQkgICBmYWlsOyBwYXRoWzBdIGlzIGFscmVhZHkgZG9uZV9s
aC1lZCwgdGhlcmVmb3JlCisJCSAgIGxvbmd0ZXJtX3VubG9ja196bm9kZSgmcGF0aFtoXSk7IGlz
IG5vdCBhcHBsaWNhYmxlICovCisJCWRvbmVfbGgoJnBhdGhbaF0pOworCQktLWg7CisJfSB3aGls
ZSAoaCArIDEgIT0gMCk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiByZW1vdmUgbm9kZSBmcm9t
IHNpYmxpbmcgbGlzdCAqLworLyogQXVkaXRlZCBieTogdW1rYSAoMjAwMi4wNi4xNCkgKi8KK3Zv
aWQgc2libGluZ19saXN0X3JlbW92ZSh6bm9kZSAqIG5vZGUpCit7CisJcmVpc2VyNF90cmVlICp0
cmVlOworCisJdHJlZSA9IHpub2RlX2dldF90cmVlKG5vZGUpOworCWFzc2VydCgidW1rYS0yNTUi
LCBub2RlICE9IE5VTEwpOworCWFzc2VydF9yd193cml0ZV9sb2NrZWQoJih0cmVlLT50cmVlX2xv
Y2spKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjc1IiwgY2hlY2tfc2libGluZ19saXN0KG5vZGUpKTsK
KworCXdyaXRlX2xvY2tfZGsodHJlZSk7CisJaWYgKHpub2RlX2lzX3JpZ2h0X2Nvbm5lY3RlZChu
b2RlKSAmJiBub2RlLT5yaWdodCAhPSBOVUxMICYmCisJICAgIHpub2RlX2lzX2xlZnRfY29ubmVj
dGVkKG5vZGUpICYmIG5vZGUtPmxlZnQgIT0gTlVMTCkgeworCQlhc3NlcnQoInphbS0zMjI0NSIs
CisJCSAgICAgICBrZXllcSh6bm9kZV9nZXRfcmRfa2V5KG5vZGUpLAorCQkJICAgICB6bm9kZV9n
ZXRfbGRfa2V5KG5vZGUtPnJpZ2h0KSkpOworCQl6bm9kZV9zZXRfcmRfa2V5KG5vZGUtPmxlZnQs
IHpub2RlX2dldF9sZF9rZXkobm9kZS0+cmlnaHQpKTsKKwl9CisJd3JpdGVfdW5sb2NrX2RrKHRy
ZWUpOworCisJaWYgKHpub2RlX2lzX3JpZ2h0X2Nvbm5lY3RlZChub2RlKSAmJiBub2RlLT5yaWdo
dCAhPSBOVUxMKSB7CisJCWFzc2VydCgiemFtLTMyMiIsIHpub2RlX2lzX2xlZnRfY29ubmVjdGVk
KG5vZGUtPnJpZ2h0KSk7CisJCW5vZGUtPnJpZ2h0LT5sZWZ0ID0gbm9kZS0+bGVmdDsKKwkJT05f
REVCVUcobm9kZS0+cmlnaHQtPmxlZnRfdmVyc2lvbiA9CisJCQkgYXRvbWljX2luY19yZXR1cm4o
JmRlbGltX2tleV92ZXJzaW9uKTsKKwkJICAgICk7CisJfQorCWlmICh6bm9kZV9pc19sZWZ0X2Nv
bm5lY3RlZChub2RlKSAmJiBub2RlLT5sZWZ0ICE9IE5VTEwpIHsKKwkJYXNzZXJ0KCJ6YW0tMzIz
Iiwgem5vZGVfaXNfcmlnaHRfY29ubmVjdGVkKG5vZGUtPmxlZnQpKTsKKwkJbm9kZS0+bGVmdC0+
cmlnaHQgPSBub2RlLT5yaWdodDsKKwkJT05fREVCVUcobm9kZS0+bGVmdC0+cmlnaHRfdmVyc2lv
biA9CisJCQkgYXRvbWljX2luY19yZXR1cm4oJmRlbGltX2tleV92ZXJzaW9uKTsKKwkJICAgICk7
CisJfQorCisJWkZfQ0xSKG5vZGUsIEpOT0RFX0xFRlRfQ09OTkVDVEVEKTsKKwlaRl9DTFIobm9k
ZSwgSk5PREVfUklHSFRfQ09OTkVDVEVEKTsKKwlPTl9ERUJVRyhub2RlLT5sZWZ0ID0gbm9kZS0+
cmlnaHQgPSBOVUxMOworCQkgbm9kZS0+bGVmdF92ZXJzaW9uID0gYXRvbWljX2luY19yZXR1cm4o
JmRlbGltX2tleV92ZXJzaW9uKTsKKwkJIG5vZGUtPnJpZ2h0X3ZlcnNpb24gPSBhdG9taWNfaW5j
X3JldHVybigmZGVsaW1fa2V5X3ZlcnNpb24pOyk7CisJYXNzZXJ0KCJuaWtpdGEtMzI3NiIsIGNo
ZWNrX3NpYmxpbmdfbGlzdChub2RlKSk7Cit9CisKKy8qIGRpc2Nvbm5lY3Qgbm9kZSBmcm9tIHNp
YmxpbmcgbGlzdCAqLwordm9pZCBzaWJsaW5nX2xpc3RfZHJvcCh6bm9kZSAqIG5vZGUpCit7CisJ
em5vZGUgKnJpZ2h0OworCXpub2RlICpsZWZ0OworCisJYXNzZXJ0KCJuaWtpdGEtMjQ2NCIsIG5v
ZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzI3NyIsIGNoZWNrX3NpYmxpbmdfbGlzdChu
b2RlKSk7CisKKwlyaWdodCA9IG5vZGUtPnJpZ2h0OworCWlmIChyaWdodCAhPSBOVUxMKSB7CisJ
CWFzc2VydCgibmlraXRhLTI0NjUiLCB6bm9kZV9pc19sZWZ0X2Nvbm5lY3RlZChyaWdodCkpOwor
CQlyaWdodC0+bGVmdCA9IE5VTEw7CisJCU9OX0RFQlVHKHJpZ2h0LT5sZWZ0X3ZlcnNpb24gPQor
CQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCSAgICApOworCX0K
KwlsZWZ0ID0gbm9kZS0+bGVmdDsKKwlpZiAobGVmdCAhPSBOVUxMKSB7CisJCWFzc2VydCgiemFt
LTMyMyIsIHpub2RlX2lzX3JpZ2h0X2Nvbm5lY3RlZChsZWZ0KSk7CisJCWxlZnQtPnJpZ2h0ID0g
TlVMTDsKKwkJT05fREVCVUcobGVmdC0+cmlnaHRfdmVyc2lvbiA9CisJCQkgYXRvbWljX2luY19y
ZXR1cm4oJmRlbGltX2tleV92ZXJzaW9uKTsKKwkJICAgICk7CisJfQorCVpGX0NMUihub2RlLCBK
Tk9ERV9MRUZUX0NPTk5FQ1RFRCk7CisJWkZfQ0xSKG5vZGUsIEpOT0RFX1JJR0hUX0NPTk5FQ1RF
RCk7CisJT05fREVCVUcobm9kZS0+bGVmdCA9IG5vZGUtPnJpZ2h0ID0gTlVMTDsKKwkJIG5vZGUt
PmxlZnRfdmVyc2lvbiA9IGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJ
CSBub2RlLT5yaWdodF92ZXJzaW9uID0gYXRvbWljX2luY19yZXR1cm4oJmRlbGltX2tleV92ZXJz
aW9uKTspOworfQorCisvKiBJbnNlcnQgbmV3IG5vZGUgaW50byBzaWJsaW5nIGxpc3QuIFJlZ3Vs
YXIgYmFsYW5jaW5nIGluc2VydHMgbmV3IG5vZGUKKyAgIGFmdGVyIChhdCByaWdodCBzaWRlKSBl
eGlzdGluZyBhbmQgbG9ja2VkIG5vZGUgKEBiZWZvcmUpLCBleGNlcHQgb25lIGNhc2UKKyAgIG9m
IGFkZGluZyBuZXcgdHJlZSByb290IG5vZGUuIEBiZWZvcmUgc2hvdWxkIGJlIE5VTEwgaW4gdGhh
dCBjYXNlLiAqLwordm9pZCBzaWJsaW5nX2xpc3RfaW5zZXJ0X25vbG9jayh6bm9kZSAqIG5ldywg
em5vZGUgKiBiZWZvcmUpCit7CisJYXNzZXJ0KCJ6YW0tMzM0IiwgbmV3ICE9IE5VTEwpOworCWFz
c2VydCgibmlraXRhLTMyOTgiLCAhem5vZGVfaXNfbGVmdF9jb25uZWN0ZWQobmV3KSk7CisJYXNz
ZXJ0KCJuaWtpdGEtMzI5OSIsICF6bm9kZV9pc19yaWdodF9jb25uZWN0ZWQobmV3KSk7CisJYXNz
ZXJ0KCJuaWtpdGEtMzMwMCIsIG5ldy0+bGVmdCA9PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0z
MzAxIiwgbmV3LT5yaWdodCA9PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjc4IiwgY2hlY2tf
c2libGluZ19saXN0KG5ldykpOworCWFzc2VydCgibmlraXRhLTMyNzkiLCBjaGVja19zaWJsaW5n
X2xpc3QoYmVmb3JlKSk7CisKKwlpZiAoYmVmb3JlICE9IE5VTEwpIHsKKwkJYXNzZXJ0KCJ6YW0t
MzMzIiwgem5vZGVfaXNfY29ubmVjdGVkKGJlZm9yZSkpOworCQluZXctPnJpZ2h0ID0gYmVmb3Jl
LT5yaWdodDsKKwkJbmV3LT5sZWZ0ID0gYmVmb3JlOworCQlPTl9ERUJVRyhuZXctPnJpZ2h0X3Zl
cnNpb24gPQorCQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCQkg
bmV3LT5sZWZ0X3ZlcnNpb24gPQorCQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVy
c2lvbik7KTsKKwkJaWYgKGJlZm9yZS0+cmlnaHQgIT0gTlVMTCkgeworCQkJYmVmb3JlLT5yaWdo
dC0+bGVmdCA9IG5ldzsKKwkJCU9OX0RFQlVHKGJlZm9yZS0+cmlnaHQtPmxlZnRfdmVyc2lvbiA9
CisJCQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCQkgICAgKTsK
KwkJfQorCQliZWZvcmUtPnJpZ2h0ID0gbmV3OworCQlPTl9ERUJVRyhiZWZvcmUtPnJpZ2h0X3Zl
cnNpb24gPQorCQkJIGF0b21pY19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCSAg
ICApOworCX0gZWxzZSB7CisJCW5ldy0+cmlnaHQgPSBOVUxMOworCQluZXctPmxlZnQgPSBOVUxM
OworCQlPTl9ERUJVRyhuZXctPnJpZ2h0X3ZlcnNpb24gPQorCQkJIGF0b21pY19pbmNfcmV0dXJu
KCZkZWxpbV9rZXlfdmVyc2lvbik7CisJCQkgbmV3LT5sZWZ0X3ZlcnNpb24gPQorCQkJIGF0b21p
Y19pbmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbik7KTsKKwl9CisJWkZfU0VUKG5ldywgSk5P
REVfTEVGVF9DT05ORUNURUQpOworCVpGX1NFVChuZXcsIEpOT0RFX1JJR0hUX0NPTk5FQ1RFRCk7
CisJYXNzZXJ0KCJuaWtpdGEtMzI4MCIsIGNoZWNrX3NpYmxpbmdfbGlzdChuZXcpKTsKKwlhc3Nl
cnQoIm5pa2l0YS0zMjgxIiwgY2hlY2tfc2libGluZ19saXN0KGJlZm9yZSkpOworfQorCisvKgor
ICAgTG9jYWwgdmFyaWFibGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1v
ZGUtbmFtZTogIkxDIgorICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAg
ZmlsbC1jb2x1bW46IDgwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3RyZWVfd2Fsay5oIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L3RyZWVfd2Fsay5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3RyZWVf
d2Fsay5oCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC90cmVlX3dhbGsuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4NTIyMjQyNiAr
MDEwMApAQCAtMCwwICsxLDEyNSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkg
SGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAqLworCisv
KiBkZWZpbml0aW9ucyBvZiByZWlzZXI0IHRyZWUgd2FsayBmdW5jdGlvbnMgKi8KKworI2lmbmRl
ZiBfX0ZTX1JFSVNFUjRfVFJFRV9XQUxLX0hfXworI2RlZmluZSBfX0ZTX1JFSVNFUjRfVFJFRV9X
QUxLX0hfXworCisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisKKy8q
IGVzdGFibGlzaGVzIGhvcml6b250YWwgbGlua3MgYmV0d2VlbiBjYWNoZWQgem5vZGVzICovCitp
bnQgY29ubmVjdF96bm9kZShjb29yZF90ICogY29vcmQsIHpub2RlICogbm9kZSk7CisKKy8qIHRy
ZWUgdHJhdmVyc2FsIGZ1bmN0aW9ucyAocmVpc2VyNF9nZXRfcGFyZW50KCksIHJlaXNlcjRfZ2V0
X25laWdoYm9yKCkpCisgIGhhdmUgdGhlIGZvbGxvd2luZyBjb21tb24gYXJndW1lbnRzOgorCisg
IHJldHVybiBjb2RlczoKKworICBAcmV0dXJuIDogMCAgICAgICAgLSBPSywKKworWkFNLUZJWE1F
LUhBTlM6IHdyb25nIHJldHVybiBjb2RlIG5hbWUuICBDaGFuZ2UgdGhlbSBhbGwuCisJICAgIC1F
Tk9FTlQgIC0gbmVpZ2hib3IgaXMgbm90IGluIGNhY2hlLCB3aGF0IGlzIGRldGVjdGVkIGJ5IHNp
YmxpbmcKKwkgICAgICAgICAgICAgICBsaW5rIGFic2VuY2UuCisKKyAgICAgICAgICAgIC1FX05P
X05FSUdIQk9SIC0gd2UgYXJlIHN1cmUgdGhhdCBuZWlnaGJvciAob3IgcGFyZW50KSBub2RlIGNh
bm5vdCBiZQorICAgICAgICAgICAgICAgICAgICAgICBmb3VuZCAoYmVjYXVzZSB3ZSBhcmUgbGVm
dC0vcmlnaHQtIG1vc3Qgbm9kZSBvZiB0aGUKKwkJICAgICAgIHRyZWUsIGZvciBleGFtcGxlKS4g
QWxzbywgdGhpcyByZXR1cm4gY29kZSBpcyBmb3IKKwkJICAgICAgIHJlaXNlcjRfZ2V0X3BhcmVu
dCgpIHdoZW4gd2Ugc2VlIG5vIHBhcmVudCBsaW5rIC0tIGl0CisJCSAgICAgICBtZWFucyB0aGF0
IG91ciBub2RlIGlzIHJvb3Qgbm9kZS4KKworICAgICAgICAgICAgLUVfREVBRExPQ0sgLSBkZWFk
bG9jayBkZXRlY3RlZCAocmVxdWVzdCBmcm9tIGhpZ2gtcHJpb3JpdHkgcHJvY2VzcworCSAgICAg
ICAgICAgICAgIHJlY2VpdmVkKSwgb3RoZXIgZXJyb3IgY29kZXMgYXJlIGNvbmZvcm1lZCB0bwor
CQkgICAgICAgL3Vzci9pbmNsdWRlL2FzbS9lcnJuby5oIC4KKyovCisKK2ludAorcmVpc2VyNF9n
ZXRfcGFyZW50X2ZsYWdzKGxvY2tfaGFuZGxlICogcmVzdWx0LCB6bm9kZSAqIG5vZGUsCisJCQkg
em5vZGVfbG9ja19tb2RlIG1vZGUsIGludCBmbGFncyk7CisKKy8qIGJpdHMgZGVmaW5pdGlvbiBm
b3IgcmVpc2VyNF9nZXRfbmVpZ2hib3IgZnVuY3Rpb24gYGZsYWdzJyBhcmcuICovCit0eXBlZGVm
IGVudW0geworCS8qIElmIHNpYmxpbmcgcG9pbnRlciBpcyBOVUxMLCB0aGlzIGZsYWcgYWxsb3dz
IGdldF9uZWlnaGJvcigpIHRvIHRyeSB0bworCSAqIGZpbmQgbm90IGFsbG9jYXRlZCBub3QgY29u
bmVjdGVkIG5laWdib3IgYnkgZ29pbmcgdGhvdWdoIHVwcGVyCisJICogbGV2ZWxzICovCisJR05f
Q0FOX1VTRV9VUFBFUl9MRVZFTFMgPSAweDEsCisJLyogbG9ja2luZyBsZWZ0IG5laWdoYm9yIGlu
c3RlYWQgb2YgcmlnaHQgb25lICovCisJR05fR09fTEVGVCA9IDB4MiwKKwkvKiBhdXRvbWF0aWNh
bGx5IGxvYWQgbmVpZ2hib3Igbm9kZSBjb250ZW50ICovCisJR05fTE9BRF9ORUlHSEJPUiA9IDB4
NCwKKwkvKiByZXR1cm4gLUVfUkVQRUFUIGlmIGNhbid0IGxvY2sgICovCisJR05fVFJZX0xPQ0sg
PSAweDgsCisJLyogdXNlZCBpbnRlcm5hbGx5IGluIHRyZWVfd2Fsay5jLCBjYXVzZXMgcmVuZXdf
c2libGluZyB0byBub3QKKwkgICBhbGxvY2F0ZSBuZWlnaGJvciB6bm9kZSwgYnV0IG9ubHkgc2Vh
cmNoIGZvciBpdCBpbiB6bm9kZSBjYWNoZSAqLworCUdOX05PX0FMTE9DID0gMHgxMCwKKwkvKiBk
byBub3QgZ28gYWNyb3NzIGF0b20gYm91bmRhcmllcyAqLworCUdOX1NBTUVfQVRPTSA9IDB4MjAs
CisJLyogYWxsb3cgdG8gbG9jayBub3QgY29ubmVjdGVkIG5vZGVzICovCisJR05fQUxMT1dfTk9U
X0NPTk5FQ1RFRCA9IDB4NDAsCisJLyogIEF2b2lkIHN5bmNocm9ub3VzIGpsb2FkLCBpbnN0ZWFk
LCBjYWxsIGpzdGFydGlvKCkgYW5kIHJldHVybiAtRV9SRVBFQVQuICovCisJR05fQVNZTkMgPSAw
eDgwCit9IHpub2RlX2dldF9uZWlnYm9yX2ZsYWdzOworCisvKiBBIGNvbW1vbmx5IHVzZWQgd3Jh
cHBlciBmb3IgcmVpc2VyNF9nZXRfcGFyZW50X2ZsYWdzKCkuICovCitzdGF0aWMgaW5saW5lIGlu
dCByZWlzZXI0X2dldF9wYXJlbnQobG9ja19oYW5kbGUgKiByZXN1bHQsIHpub2RlICogbm9kZSwK
KwkJCQkgICAgIHpub2RlX2xvY2tfbW9kZSBtb2RlKQoreworCXJldHVybiByZWlzZXI0X2dldF9w
YXJlbnRfZmxhZ3MocmVzdWx0LCBub2RlLCBtb2RlLAorCQkJCQlHTl9BTExPV19OT1RfQ09OTkVD
VEVEKTsKK30KKworaW50IHJlaXNlcjRfZ2V0X25laWdoYm9yKGxvY2tfaGFuZGxlICogbmVpZ2hi
b3IsIHpub2RlICogbm9kZSwKKwkJCSB6bm9kZV9sb2NrX21vZGUgbG9ja19tb2RlLCBpbnQgZmxh
Z3MpOworCisvKiB0aGVyZSBhcmUgd3JhcHBlcnMgZm9yIG1vc3QgY29tbW9uIHVzYWdlcyBvZiBy
ZWlzZXI0X2dldF9uZWlnaGJvcigpICovCitzdGF0aWMgaW5saW5lIGludAorcmVpc2VyNF9nZXRf
bGVmdF9uZWlnaGJvcihsb2NrX2hhbmRsZSAqIHJlc3VsdCwgem5vZGUgKiBub2RlLCBpbnQgbG9j
a19tb2RlLAorCQkJICBpbnQgZmxhZ3MpCit7CisJcmV0dXJuIHJlaXNlcjRfZ2V0X25laWdoYm9y
KHJlc3VsdCwgbm9kZSwgbG9ja19tb2RlLAorCQkJCSAgICBmbGFncyB8IEdOX0dPX0xFRlQpOwor
fQorCitzdGF0aWMgaW5saW5lIGludAorcmVpc2VyNF9nZXRfcmlnaHRfbmVpZ2hib3IobG9ja19o
YW5kbGUgKiByZXN1bHQsIHpub2RlICogbm9kZSwgaW50IGxvY2tfbW9kZSwKKwkJCSAgIGludCBm
bGFncykKK3sKKwlPTl9ERUJVRyhjaGVja19sb2NrX25vZGVfZGF0YShub2RlKSk7CisJT05fREVC
VUcoY2hlY2tfbG9ja19kYXRhKCkpOworCXJldHVybiByZWlzZXI0X2dldF9uZWlnaGJvcihyZXN1
bHQsIG5vZGUsIGxvY2tfbW9kZSwKKwkJCQkgICAgZmxhZ3MgJiAofkdOX0dPX0xFRlQpKTsKK30K
KworZXh0ZXJuIHZvaWQgc2libGluZ19saXN0X3JlbW92ZSh6bm9kZSAqIG5vZGUpOworZXh0ZXJu
IHZvaWQgc2libGluZ19saXN0X2Ryb3Aoem5vZGUgKiBub2RlKTsKK2V4dGVybiB2b2lkIHNpYmxp
bmdfbGlzdF9pbnNlcnRfbm9sb2NrKHpub2RlICogbmV3LCB6bm9kZSAqIGJlZm9yZSk7CitleHRl
cm4gdm9pZCBsaW5rX2xlZnRfYW5kX3JpZ2h0KHpub2RlICogbGVmdCwgem5vZGUgKiByaWdodCk7
CisKKy8qIEZ1bmN0aW9ucyBjYWxsZWQgYnkgdHJlZV93YWxrKCkgd2hlbiB0cmVlX3dhbGsoKSAu
Li4gICovCitzdHJ1Y3QgdHJlZV93YWxrX2FjdG9yIHsKKwkvKiAuLi4gbWVldHMgYSBmb3JtYXR0
ZWQgbm9kZSwgKi8KKwlpbnQgKCpwcm9jZXNzX3pub2RlKSAodGFwX3QgKiwgdm9pZCAqKTsKKwkv
KiAuLi4gbWVldHMgYW4gZXh0ZW50LCAqLworCWludCAoKnByb2Nlc3NfZXh0ZW50KSAodGFwX3Qg
Kiwgdm9pZCAqKTsKKwkvKiAuLi4gYmVnaW5zIHRyZWUgdHJhdmVyc2FsIG9yIHJlcGVhdHMgaXQg
YWZ0ZXIgLUVfUkVQRUFUIHdhcyByZXR1cm5lZCBieQorCSAqIG5vZGUgb3IgZXh0ZW50IHByb2Nl
c3NpbmcgZnVuY3Rpb25zLiAqLworCWludCAoKmJlZm9yZSkgKHZvaWQgKik7Cit9OworCisjaWYg
UkVJU0VSNF9ERUJVRworaW50IGNoZWNrX3NpYmxpbmdfbGlzdCh6bm9kZSAqIG5vZGUpOworI2Vs
c2UKKyNkZWZpbmUgY2hlY2tfc2libGluZ19saXN0KG4pICgxKQorI2VuZGlmCisKKyNlbmRpZgkJ
CQkvKiBfX0ZTX1JFSVNFUjRfVFJFRV9XQUxLX0hfXyAqLworCisvKgorICAgTG9jYWwgdmFyaWFi
bGVzOgorICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgor
ICAgYy1iYXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEy
MAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9y
aWcvZnMvcmVpc2VyNC90eG5tZ3IuYyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC90eG5tZ3IuYwot
LS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC90eG5tZ3IuYwkxOTcwLTAxLTAxIDAxOjAw
OjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvdHhubWdyLmMJ
MjAyMC0wMi0wNSAyMDo1Mzo0MS40ODYyMjI0MzQgKzAxMDAKQEAgLTAsMCArMSwzMTYzIEBACisv
KiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdv
dmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAqLworCisvKiBKb3NodWEgTWFjRG9uYWxkIHdy
b3RlIHRoZSBmaXJzdCBkcmFmdCBvZiB0aGlzIGNvZGUuICovCisKKy8qIFpBTS1MT05HVEVSTS1G
SVhNRS1IQU5TOiBUaGUgbG9ja2luZyBpbiB0aGlzIGZpbGUgaXMgYmFkbHkgZGVzaWduZWQsIGFu
ZCBhCitmaWxlc3lzdGVtIHNjYWxlcyBvbmx5IGFzIHdlbGwgYXMgaXRzIHdvcnN0IGxvY2tpbmcg
ZGVzaWduLiAgWW91IG5lZWQgdG8KK3N1YnN0YW50aWFsbHkgcmVzdHJ1Y3R1cmUgdGhpcyBjb2Rl
LiBKb3NoIHdhcyBub3QgYXMgZXhwZXJpZW5jZWQgYSBwcm9ncmFtbWVyCithcyB5b3UuICBQYXJ0
aWN1bGFybHkgcmV2aWV3IGhvdyB0aGUgbG9ja2luZyBzdHlsZSBkaWZmZXJzIGZyb20gd2hhdCB5
b3UgZGlkCitmb3Igem5vZGVzIHVzaW5ndCBoaS1sbyBwcmlvcml0eSBsb2NraW5nLCBhbmQgcHJl
c2VudCB0byBtZSBhbiBvcGluaW9uIG9uCit3aGV0aGVyIHRoZSBkaWZmZXJlbmNlcyBhcmUgd2Vs
bCBmb3VuZGVkLiAgKi8KKworLyogSSBjYW5ub3QgaGVscCBidXQgdG8gZGlzYWdyZWUgd2l0aCB0
aGUgc2VudGltZW50IGFib3ZlLiBMb2NraW5nIG9mCisgKiB0cmFuc2FjdGlvbiBtYW5hZ2VyIGlz
IF9ub3RfIGJhZGx5IGRlc2lnbmVkLCBhbmQsIGF0IHRoZSB2ZXJ5IGxlYXN0LCBpcyBub3QKKyAq
IHRoZSBzY2FsaW5nIGJvdHRsZW5lY2suIFNjYWxpbmcgYm90dGxlbmVjayBpcyBfZXhhY3RseV8g
aGktbG8gcHJpb3JpdHkKKyAqIGxvY2tpbmcgb24gem5vZGVzLCBlc3BlY2lhbGx5IG9uIHRoZSBy
b290IG5vZGUgb2YgdGhlIHRyZWUuIC0tbmlraXRhLAorICogMjAwMy4xMC4xMyAqLworCisvKiBU
aGUgdHhubWdyIGlzIGEgc2V0IG9mIGludGVyZmFjZXMgdGhhdCBrZWVwIHRyYWNrIG9mIGF0b21z
IGFuZCB0cmFuc2NyYXNoIGhhbmRsZXMuICBUaGUKKyAgIHR4bm1nciBwcm9jZXNzZXMgY2FwdHVy
ZV9ibG9jayByZXF1ZXN0cyBhbmQgbWFuYWdlcyB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gam5v
ZGVzIGFuZAorICAgYXRvbXMgdGhyb3VnaCB0aGUgdmFyaW91cyBzdGFnZXMgb2YgYSB0cmFuc2Ny
YXNoLCBhbmQgaXQgYWxzbyBvdmVyc2VlcyB0aGUgZnVzaW9uIGFuZAorICAgY2FwdHVyZS1vbi1j
b3B5IHByb2Nlc3Nlcy4gIFRoZSBtYWluIGRpZmZpY3VsdHkgd2l0aCB0aGlzIHRhc2sgaXMgbWFp
bnRhaW5pbmcgYQorICAgZGVhZGxvY2stZnJlZSBsb2NrIG9yZGVyaW5nIGJldHdlZW4gYXRvbXMg
YW5kIGpub2Rlcy9oYW5kbGVzLiAgVGhlIHJlYXNvbiBmb3IgdGhlCisgICBkaWZmaWN1bHR5IGlz
IHRoYXQgam5vZGVzLCBoYW5kbGVzLCBhbmQgYXRvbXMgY29udGFpbiBwb2ludGVyIGNpcmNsZXMs
IGFuZCB0aGUgY3ljbGUKKyAgIG11c3QgYmUgYnJva2VuLiAgVGhlIG1haW4gcmVxdWlyZW1lbnQg
aXMgdGhhdCBhdG9tLWZ1c2lvbiBiZSBkZWFkbG9jayBmcmVlLCBzbyBvbmNlIHlvdQorICAgaG9s
ZCB0aGUgYXRvbV9sb2NrIHlvdSBtYXkgdGhlbiB3YWl0IHRvIGFjcXVpcmUgYW55IGpub2RlIG9y
IGhhbmRsZSBsb2NrLiAgVGhpcyBpbXBsaWVzCisgICB0aGF0IGFueSB0aW1lIHlvdSBjaGVjayB0
aGUgYXRvbS1wb2ludGVyIG9mIGEgam5vZGUgb3IgaGFuZGxlIGFuZCB0aGVuIHRyeSB0byBsb2Nr
IHRoYXQKKyAgIGF0b20sIHlvdSBtdXN0IHVzZSB0cnlsb2NrKCkgYW5kIHBvc3NpYmx5IHJldmVy
c2UgdGhlIG9yZGVyLgorCisgICBUaGlzIGNvZGUgaW1wbGVtZW50cyB0aGUgZGVzaWduIGRvY3Vt
ZW50ZWQgYXQ6CisKKyAgICAgaHR0cDovL25hbWVzeXMuY29tL3R4bi1kb2MuaHRtbAorCitaQU0t
RklYTUUtSEFOUzogdXBkYXRlIHY0Lmh0bWwgdG8gY29udGFpbiBhbGwgb2YgdGhlIGluZm9ybWF0
aW9uIHByZXNlbnQgaW4gdGhlIGFib3ZlIChidXQgdXBkYXRlZCksIGFuZCB0aGVuIHJlbW92ZSB0
aGUKK2Fib3ZlIGRvY3VtZW50IGFuZCByZWZlcmVuY2UgdGhlIG5ldy4gIEJlIHN1cmUgdG8gcHJv
dmlkZSBzb21lIGNyZWRpdCB0byBKb3NoLiAgSSBhbHJlYWR5IGhhdmUgc29tZSB3cml0aW5ncyBv
biB0aGlzCit0b3BpYyBpbiB2NC5odG1sLCBidXQgdGhleSBhcmUgbGFja2luZyBpbiBkZXRhaWxz
IHByZXNlbnQgaW4gdGhlIGFib3ZlLiAgQ3VyZSB0aGF0LiAgUmVtZW1iZXIgdG8gd3JpdGUgZm9y
IHRoZSBicmlnaHQgMTIKK3llYXIgb2xkIC0tLSBkZWZpbmUgYWxsIHRlY2huaWNhbCB0ZXJtcyB1
c2VkLgorCisqLworCisvKiBUaG91Z2h0cyBvbiB0aGUgZXh0ZXJuYWwgdHJhbnNhY3Rpb24gaW50
ZXJmYWNlOgorCisgICBJbiB0aGUgY3VycmVudCBjb2RlLCBhIFRSQU5TQ1JBU0ggaGFuZGxlIGlz
IGNyZWF0ZWQgaW1wbGljaXRseSBieSByZWlzZXI0X2luaXRfY29udGV4dCgpICh3aGljaAorICAg
Y3JlYXRlcyBzdGF0ZSB0aGF0IGxhc3RzIGZvciB0aGUgZHVyYXRpb24gb2YgYSBzeXN0ZW0gY2Fs
bCBhbmQgaXMgY2FsbGVkIGF0IHRoZSBzdGFydAorICAgb2YgUmVpc2VyRlMgbWV0aG9kcyBpbXBs
ZW1lbnRpbmcgVkZTIG9wZXJhdGlvbnMpLCBhbmQgY2xvc2VkIGJ5IHJlaXNlcjRfZXhpdF9jb250
ZXh0KCksCisgICBvY2N1cHlpbmcgdGhlIHNjb3BlIG9mIGEgc2luZ2xlIHN5c3RlbSBjYWxsLiAg
V2Ugd2lzaCB0byBnaXZlIGNlcnRhaW4gYXBwbGljYXRpb25zIGFuCisgICBpbnRlcmZhY2UgdG8g
YmVnaW4gYW5kIGNsb3NlIChjb21taXQpIHRyYW5zYWN0aW9ucy4gIFNpbmNlIG91ciBpbXBsZW1l
bnRhdGlvbiBvZgorICAgdHJhbnNhY3Rpb25zIGRvZXMgbm90IHlldCBzdXBwb3J0IGlzb2xhdGlv
biwgYWxsb3dpbmcgYW4gYXBwbGljYXRpb24gdG8gb3BlbiBhCisgICB0cmFuc2FjdGlvbiBpbXBs
aWVzIHRydXN0aW5nIGl0IHRvIGxhdGVyIGNsb3NlIHRoZSB0cmFuc2FjdGlvbi4gIFBhcnQgb2Yg
dGhlCisgICB0cmFuc2FjdGlvbiBpbnRlcmZhY2Ugd2lsbCBiZSBhaW1lZCBhdCBlbmFibGluZyB0
aGF0IHRydXN0LCBidXQgdGhlIGludGVyZmFjZSBmb3IKKyAgIGFjdHVhbGx5IHVzaW5nIHRyYW5z
YWN0aW9ucyBpcyBmYWlybHkgbmFycm93LgorCisgICBCRUdJTl9UUkFOU0NSQVNIOiBSZXR1cm5z
IGEgdHJhbnNjcmFzaCBpZGVudGlmaWVyLiAgSXQgc2hvdWxkIGJlIHBvc3NpYmxlIHRvIHRyYW5z
bGF0ZQorICAgdGhpcyBpZGVudGlmaWVyIGludG8gYSBzdHJpbmcgdGhhdCBhIHNoZWxsLXNjcmlw
dCBjb3VsZCB1c2UsIGFsbG93aW5nIHlvdSB0byBzdGFydCBhCisgICB0cmFuc2FjdGlvbiBieSBp
c3N1aW5nIGEgY29tbWFuZC4gIE9uY2Ugb3BlbiwgdGhlIHRyYW5zY3Jhc2ggc2hvdWxkIGJlIHNl
dCBpbiB0aGUgdGFzaworICAgc3RydWN0dXJlLCBhbmQgdGhlcmUgc2hvdWxkIGJlIG9wdGlvbnMg
KEkgc3VwcG9zZSkgdG8gYWxsb3cgaXQgdG8gYmUgY2FycmllZCBhY3Jvc3MKKyAgIGZvcmsvZXhl
Yy4gIEEgdHJhbnNjcmFzaCBoYXMgc2V2ZXJhbCBvcHRpb25zOgorCisgICAgIC0gUkVBRF9GVVNJ
Tkcgb3IgV1JJVEVfRlVTSU5HOiBUaGUgZGVmYXVsdCBwb2xpY3kgaXMgZm9yIHR4bi1jYXB0dXJl
IHRvIGNhcHR1cmUgb25seQorICAgICBvbiB3cml0ZXMgKFdSSVRFX0ZVU0lORykgYW5kIGFsbG93
ICJkaXJ0eSByZWFkcyIuICBJZiB0aGUgYXBwbGljYXRpb24gd2lzaGVzIHRvCisgICAgIGNhcHR1
cmUgb24gcmVhZHMgYXMgd2VsbCwgaXQgc2hvdWxkIHNldCBSRUFEX0ZVU0lORy4KKworICAgICAt
IFRJTUVPVVQ6IFNpbmNlIGEgbm9uLWlzb2xhdGVkIHRyYW5zY3Jhc2ggY2Fubm90IGJlIHVuZG9u
ZSwgZXZlcnkgdHJhbnNjcmFzaCBtdXN0CisgICAgIGV2ZW50dWFsbHkgY2xvc2UgKG9yIGVsc2Ug
dGhlIG1hY2hpbmUgbXVzdCBjcmFzaCkuICBJZiB0aGUgYXBwbGljYXRpb24gZGllcyBhbgorICAg
ICB1bmV4cGVjdGVkIGRlYXRoIHdpdGggYW4gb3BlbiB0cmFuc2NyYXNoLCBmb3IgZXhhbXBsZSwg
b3IgaWYgaXQgaGFuZ3MgZm9yIGEgbG9uZworICAgICBkdXJhdGlvbiwgb25lIHNvbHV0aW9uICh0
byBhdm9pZCBjcmFzaGluZyB0aGUgbWFjaGluZSkgaXMgdG8gc2ltcGx5IGNsb3NlIGl0IGFueXdh
eS4KKyAgICAgVGhpcyBpcyBhIGRhbmdlcm91cyBvcHRpb24sIGJ1dCBpdCBpcyBvbmUgd2F5IHRv
IHNvbHZlIHRoZSBwcm9ibGVtIHVudGlsIGlzb2xhdGVkCisgICAgIHRyYW5zY3Jhc2hlcyBhcmUg
YXZhaWxhYmxlIGZvciB1bnRydXN0ZWQgYXBwbGljYXRpb25zLgorCisgICAgIEl0IHNlZW1zIHRv
IGJlIHdoYXQgZGF0YWJhc2VzIGRvLCB0aG91Z2ggaXQgaXMgdW5jbGVhciBob3cgb25lIGF2b2lk
cyBhIERvUyBhdHRhY2sKKyAgICAgY3JlYXRpbmcgYSB2dWxuZXJhYmlsaXR5IGJhc2VkIG9uIHJl
c291cmNlIHN0YXJ2YXRpb24uICBHdWFyYW50ZWVpbmcgdGhhdCBzb21lCisgICAgIG1pbmltdW0g
YW1vdW50IG9mIGNvbXB1dGF0aW9uYWwgcmVzb3VyY2VzIGFyZSBtYWRlIGF2YWlsYWJsZSB3b3Vs
ZCBzZWVtIG1vcmUgY29ycmVjdAorICAgICB0aGFuIGd1YXJhbnRlZWluZyBzb21lIGFtb3VudCBv
ZiB0aW1lLiAgV2hlbiB3ZSBhZ2FpbiBoYXZlIHNvbWVvbmUgdG8gY29kZSB0aGUgd29yaywKKyAg
ICAgdGhpcyBpc3N1ZSBzaG91bGQgYmUgY29uc2lkZXJlZCBjYXJlZnVsbHkuICAtSGFucworCisg
ICBSRVNFUlZFX0JMT0NLUzogQSBydW5uaW5nIHRyYW5zY3Jhc2ggc2hvdWxkIGluZGljYXRlIHRv
IHRoZSB0cmFuc2FjdGlvbiBtYW5hZ2VyIGhvdworICAgbWFueSBkaXJ0eSBibG9ja3MgaXQgZXhw
ZWN0cy4gIFRoZSByZXNlcnZlX2Jsb2NrcyBpbnRlcmZhY2Ugc2hvdWxkIGJlIGNhbGxlZCBhdCBh
IHBvaW50CisgICB3aGVyZSBpdCBpcyBzYWZlIGZvciB0aGUgYXBwbGljYXRpb24gdG8gZmFpbCwg
YmVjYXVzZSB0aGUgc3lzdGVtIG1heSBub3QgYmUgYWJsZSB0bworICAgZ3JhbnQgdGhlIGFsbG9j
YXRpb24gYW5kIHRoZSBhcHBsaWNhdGlvbiBtdXN0IGJlIGFibGUgdG8gYmFjay1vdXQuICBGb3Ig
dGhpcyByZWFzb24sCisgICB0aGUgbnVtYmVyIG9mIHJlc2VydmUtYmxvY2tzIGNhbiBhbHNvIGJl
IHBhc3NlZCBhcyBhbiBhcmd1bWVudCB0byBCRUdJTl9UUkFOU0NSQVNILCBidXQKKyAgIHRoZSBh
cHBsaWNhdGlvbiBtYXkgYWxzbyB3aXNoIHRvIGV4dGVuZCB0aGUgYWxsb2NhdGlvbiBhZnRlciBi
ZWdpbm5pbmcgaXRzIHRyYW5zY3Jhc2guCisKKyAgIENMT1NFX1RSQU5TQ1JBU0g6IFRoZSBhcHBs
aWNhdGlvbiBjbG9zZXMgdGhlIHRyYW5zY3Jhc2ggd2hlbiBpdCBpcyBmaW5pc2hlZCBtYWtpbmcK
KyAgIG1vZGlmaWNhdGlvbnMgdGhhdCByZXF1aXJlIHRyYW5zYWN0aW9uIHByb3RlY3Rpb24uICBX
aGVuIGlzb2xhdGVkIHRyYW5zYWN0aW9ucyBhcmUKKyAgIHN1cHBvcnRlZCB0aGUgQ0xPU0Ugb3Bl
cmF0aW9uIGlzIHJlcGxhY2VkIGJ5IGVpdGhlciBDT01NSVQgb3IgQUJPUlQuICBGb3IgZXhhbXBs
ZSwgaWYgYQorICAgUkVTRVJWRV9CTE9DS1MgY2FsbCBmYWlscyBmb3IgdGhlIGFwcGxpY2F0aW9u
LCBpdCBzaG91bGQgImFib3J0IiBieSBjYWxsaW5nCisgICBDTE9TRV9UUkFOU0NSQVNILCBldmVu
IHRob3VnaCBpdCByZWFsbHkgY29tbWl0cyBhbnkgY2hhbmdlcyB0aGF0IHdlcmUgbWFkZSAod2hp
Y2ggaXMKKyAgIHdoeSwgZm9yIHNhZmV0eSwgdGhlIGFwcGxpY2F0aW9uIHNob3VsZCBjYWxsIFJF
U0VSVkVfQkxPQ0tTIGJlZm9yZSBtYWtpbmcgYW55IGNoYW5nZXMpLgorCisgICBGb3IgYWN0dWFs
bHkgaW1wbGVtZW50aW5nIHRoZXNlIG91dC1vZi1zeXN0ZW0tY2FsbC1zY29wcGVkIHRyYW5zY3Jh
c2hlcywgdGhlCisgICByZWlzZXI0X2NvbnRleHQgaGFzIGEgInR4bl9oYW5kbGUgKnRyYW5zIiBw
b2ludGVyIHRoYXQgbWF5IGJlIHNldCB0byBhbiBvcGVuCisgICB0cmFuc2NyYXNoLiAgQ3VycmVu
dGx5IHRoZXJlIGFyZSBubyBkeW5hbWljYWxseS1hbGxvY2F0ZWQgdHJhbnNjcmFzaGVzLCBidXQg
dGhlcmUgaXMgYQorICAgInN0cnVjdCBrbWVtX2NhY2hlICpfdHhuaF9zbGFiIiBjcmVhdGVkIGZv
ciB0aGF0IHB1cnBvc2UgaW4gdGhpcyBmaWxlLgorKi8KKworLyogRXh0ZW5kaW5nIHRoZSBvdGhl
ciBzeXN0ZW0gY2FsbCBpbnRlcmZhY2VzIGZvciBmdXR1cmUgdHJhbnNhY3Rpb24gZmVhdHVyZXM6
CisKKyAgIFNwZWNpYWxpemVkIGFwcGxpY2F0aW9ucyBtYXkgYmVuZWZpdCBmcm9tIHBhc3Npbmcg
ZmxhZ3MgdG8gdGhlIG9yZGluYXJ5IHN5c3RlbSBjYWxsCisgICBpbnRlcmZhY2Ugc3VjaCBhcyBy
ZWFkKCksIHdyaXRlKCksIG9yIHN0YXQoKS4gIEZvciBleGFtcGxlLCB0aGUgYXBwbGljYXRpb24g
c3BlY2lmaWVzCisgICBXUklURV9GVVNJTkcgYnkgZGVmYXVsdCBidXQgd2lzaGVzIHRvIGFkZCB0
aGF0IGEgY2VydGFpbiByZWFkKCkgY29tbWFuZCBzaG91bGQgYmUKKyAgIHRyZWF0ZWQgYXMgUkVB
RF9GVVNJTkcuICBCdXQgd2hpY2ggcmVhZD8gIElzIGl0IHRoZSBkaXJlY3RvcnktZW50cnkgcmVh
ZCwgdGhlIHN0YXQtZGF0YQorICAgcmVhZCwgb3IgdGhlIGZpbGUtZGF0YSByZWFkPyAgVGhlc2Ug
aXNzdWVzIGFyZSBzdHJhaWdodC1mb3J3YXJkLCBidXQgdGhlcmUgYXJlIGEgbG90IG9mCisgICB0
aGVtIGFuZCBhZGRpbmcgdGhlIG5lY2Vzc2FyeSBmbGFncy1wYXNzaW5nIGNvZGUgd2lsbCBiZSB0
ZWRpb3VzLgorCisgICBXaGVuIHN1cHBvcnRpbmcgaXNvbGF0ZWQgdHJhbnNhY3Rpb25zLCB0aGVy
ZSBpcyBhIGNvcnJlc3BvbmRpbmcgUkVBRF9NT0RJRllfV1JJVEUgKFJNVykKKyAgIGZsYWcsIHdo
aWNoIHNwZWNpZmllcyB0aGF0IGFsdGhvdWdoIGl0IGlzIGEgcmVhZCBvcGVyYXRpb24gYmVpbmcg
cmVxdWVzdGVkLCBhCisgICB3cml0ZS1sb2NrIHNob3VsZCBiZSB0YWtlbi4gIFRoZSByZWFzb24g
aXMgdGhhdCByZWFkLWxvY2tzIGFyZSBzaGFyZWQgd2hpbGUgd3JpdGUtbG9ja3MKKyAgIGFyZSBl
eGNsdXNpdmUsIHNvIHRha2luZyBhIHJlYWQtbG9jayB3aGVuIGEgbGF0ZXItd3JpdGUgaXMga25v
d24gaW4gYWR2YW5jZSB3aWxsIG9mdGVuCisgICBsZWFkcyB0byBkZWFkbG9jay4gIElmIGEgcmVh
ZGVyIGtub3dzIGl0IHdpbGwgd3JpdGUgbGF0ZXIsIGl0IHNob3VsZCBpc3N1ZSByZWFkCisgICBy
ZXF1ZXN0cyB3aXRoIHRoZSBSTVcgZmxhZyBzZXQuCisqLworCisvKgorICAgVGhlIHpub2RlL2F0
b20gZGVhZGxvY2sgYXZvaWRhbmNlLgorCisgICBGSVhNRShaYW0pOiB3cml0aW5nIG9mIHRoaXMg
Y29tbWVudCBpcyBpbiBwcm9ncmVzcy4KKworICAgVGhlIGF0b20ncyBzcGVjaWFsIHN0YWdlIEFT
VEFHRV9DQVBUVVJFX1dBSVQgaW50cm9kdWNlcyBhIGtpbmQgb2YgYXRvbSdzCisgICBsb25nLXRl
cm0gbG9ja2luZywgd2hpY2ggbWFrZXMgcmVpc2VyNCBsb2NraW5nIHNjaGVtZSBtb3JlIGNvbXBs
ZXguICBJdCBoYWQKKyAgIGRlYWRsb2NrcyB1bnRpbCB3ZSBpbXBsZW1lbnQgZGVhZGxvY2sgYXZv
aWRhbmNlIGFsZ29yaXRobXMuICBUaGF0IGRlYWRsb2NrcworICAgbG9va2VkIGFzIHRoZSBmb2xs
b3dpbmc6IG9uZSBzdG9wcGVkIHRocmVhZCB3YWl0cyBmb3IgYSBsb25nLXRlcm0gbG9jayBvbgor
ICAgem5vZGUsIHRoZSB0aHJlYWQgd2hvIG93bnMgdGhhdCBsb2NrIHdhaXRzIHdoZW4gZnVzaW9u
IHdpdGggYW5vdGhlciBhdG9tIHdpbGwKKyAgIGJlIGFsbG93ZWQuCisKKyAgIFRoZSBzb3VyY2Ug
b2YgdGhlIGRlYWRsb2NrcyBpcyBhbiBvcHRpbWl6YXRpb24gb2Ygbm90IGNhcHR1cmluZyBpbmRl
eCBub2RlcworICAgZm9yIHJlYWQuICBMZXQncyBwcm92ZSBpdC4gIFN1cHBvc2Ugd2UgaGF2ZSBk
dW1iIG5vZGUgY2FwdHVyaW5nIHNjaGVtZSB3aGljaAorICAgdW5jb25kaXRpb25hbGx5IGNhcHR1
cmVzIGVhY2ggYmxvY2sgYmVmb3JlIGxvY2tpbmcgaXQuCisKKyAgIFRoYXQgc2NoZW1lIGhhcyBu
byBkZWFkbG9ja3MuICBMZXQncyBiZWdpbiB3aXRoIHRoZSB0aHJlYWQgd2hpY2ggc3RhZ2UgaXMK
KyAgIEFTVEFHRV9DQVBUVVJFX1dBSVQgYW5kIGl0IHdhaXRzIGZvciBhIHpub2RlIGxvY2suICBU
aGUgdGhyZWFkIGNhbid0IHdhaXQgZm9yCisgICBhIGNhcHR1cmUgYmVjYXVzZSBpdCdzIHN0YWdl
IGFsbG93cyBmdXNpb24gd2l0aCBhbnkgYXRvbSBleGNlcHQgd2hpY2ggYXJlCisgICBiZWluZyBj
b21taXR0ZWQgY3VycmVudGx5LiBBIHByb2Nlc3Mgb2YgYXRvbSBjb21taXQgY2FuJ3QgZGVhZGxv
Y2sgYmVjYXVzZQorICAgYXRvbSBjb21taXQgcHJvY2VkdXJlIGRvZXMgbm90IGFjcXVpcmUgbG9j
a3MgYW5kIGRvZXMgbm90IGZ1c2Ugd2l0aCBvdGhlcgorICAgYXRvbXMuICBSZWlzZXI0IGRvZXMg
Y2FwdHVyaW5nIHJpZ2h0IGJlZm9yZSBnb2luZyB0byBzbGVlcCBpbnNpZGUgdGhlCisgICBsb25n
dGVydG1fbG9ja196bm9kZSgpIGZ1bmN0aW9uLCBpdCBtZWFucyB0aGUgem5vZGUgd2hpY2ggd2Ug
d2FudCB0byBsb2NrIGlzCisgICBhbHJlYWR5IGNhcHR1cmVkIGFuZCBpdHMgYXRvbSBpcyBpbiBB
U1RBR0VfQ0FQVFVSRV9XQUlUIHN0YWdlLiAgSWYgd2UKKyAgIGNvbnRpbnVlIHRoZSBhbmFseXNp
cyB3ZSB1bmRlcnN0YW5kIHRoYXQgbm8gb25lIHByb2Nlc3MgaW4gdGhlIHNlcXVlbmNlIG1heQor
ICAgd2FpdHMgYXRvbSBmdXNpb24uICBUaGVyZWJ5IHRoZXJlIGFyZSBubyBkZWFkbG9ja3Mgb2Yg
ZGVzY3JpYmVkIGtpbmQuCisKKyAgIFRoZSBjYXB0dXJpbmcgb3B0aW1pemF0aW9uIG1ha2VzIHRo
ZSBkZWFkbG9ja3MgcG9zc2libGUuICBBIHRocmVhZCBjYW4gd2FpdCBhCisgICBsb2NrIHdoaWNo
IG93bmVyIGRpZCBub3QgY2FwdHVyZWQgdGhhdCBub2RlLiAgVGhlIGxvY2sgb3duZXIncyBjdXJy
ZW50IGF0b20KKyAgIGlzIG5vdCBmdXNlZCB3aXRoIHRoZSBmaXJzdCBhdG9tIGFuZCBpdCBkb2Vz
IG5vdCBnZXQgYSBBU1RBR0VfQ0FQVFVSRV9XQUlUCisgICBzdGF0ZS4gQSBkZWFkbG9jayBpcyBw
b3NzaWJsZSB3aGVuIHRoYXQgYXRvbSBtZWV0cyBhbm90aGVyIG9uZSB3aGljaCBpcyBpbgorICAg
QVNUQUdFX0NBUFRVUkVfV0FJVCBhbHJlYWR5LgorCisgICBUaGUgZGVhZGxvY2sgYXZvaWRhbmNl
IHNjaGVtZSBpbmNsdWRlcyB0d28gYWxnb3JpdGhtczoKKworICAgRmlyc3QgYWxnb3JpdGhtIGlz
IHVzZWQgd2hlbiBhIHRocmVhZCBjYXB0dXJlcyBhIG5vZGUgd2hpY2ggaXMgbG9ja2VkIGJ1dCBu
b3QKKyAgIGNhcHR1cmVkIGJ5IGFub3RoZXIgdGhyZWFkLiAgVGhvc2Ugbm9kZXMgYXJlIG1hcmtl
ZCBNSVNTRURfSU5fQ0FQVFVSRSBhdCB0aGUKKyAgIG1vbWVudCB3ZSBza2lwIHRoZWlyIGNhcHR1
cmluZy4gIElmIHN1Y2ggYSBub2RlIChtYXJrZWQgTUlTU0VEX0lOX0NBUFRVUkUpIGlzCisgICBi
ZWluZyBjYXB0dXJlZCBieSBhIHRocmVhZCB3aXRoIGN1cnJlbnQgYXRvbSBpcyBpbiBBU1RBR0Vf
Q0FQVFVSRV9XQUlULCB0aGUKKyAgIHJvdXRpbmUgd2hpY2ggZm9yY2VzIGFsbCBsb2NrIG93bmVy
cyB0byBqb2luIHdpdGggY3VycmVudCBhdG9tIGlzIGV4ZWN1dGVkLgorCisgICBTZWNvbmQgYWxn
b3JpdGhtIGRvZXMgbm90IGFsbG93IHRvIHNraXAgY2FwdHVyaW5nIG9mIGFscmVhZHkgY2FwdHVy
ZWQgbm9kZXMuCisKKyAgIEJvdGggYWxnb3JpdGhtcyB0b2dldGhlciBwcmV2ZW50IHdhaXRpbmcg
YSBsb25ndGVybSBsb2NrIHdpdGhvdXQgYXRvbSBmdXNpb24KKyAgIHdpdGggYXRvbXMgb2YgYWxs
IGxvY2sgb3duZXJzLCB3aGljaCBpcyBhIGtleSB0aGluZyBmb3IgZ2V0dGluZyBhdG9tL3pub2Rl
CisgICBsb2NraW5nIGRlYWRsb2Nrcy4KKyovCisKKy8qCisgKiBUcmFuc2FjdGlvbnMgYW5kIG1t
YXAoMikuCisgKgorICogICAgIDEuIFRyYW5zYWN0aW9ucyBhcmUgbm90IHN1cHBvcnRlZCBmb3Ig
YWNjZXNzZXMgdGhyb3VnaCBtbWFwKDIpLCBiZWNhdXNlCisgKiAgICAgdGhpcyB3b3VsZCBlZmZl
Y3RpdmVseSBhbW91bnQgdG8gdXNlci1sZXZlbCB0cmFuc2FjdGlvbnMgd2hvc2UgZHVyYXRpb24K
KyAqICAgICBpcyBiZXlvbmQgY29udHJvbCBvZiB0aGUga2VybmVsLgorICoKKyAqICAgICAyLiBU
aGF0IHNhaWQsIHdlIHN0aWxsIHdhbnQgdG8gcHJlc2VydmUgc29tZSBkZWNlbmN5IHdpdGggcmVn
YXJkIHRvCisgKiAgICAgbW1hcCgyKS4gRHVyaW5nIG5vcm1hbCB3cml0ZSgyKSBjYWxsLCBmb2xs
b3dpbmcgc2VxdWVuY2Ugb2YgZXZlbnRzCisgKiAgICAgaGFwcGVuczoKKyAqCisgKiAgICAgICAg
IDEuIHBhZ2UgaXMgY3JlYXRlZDsKKyAqCisgKiAgICAgICAgIDIuIGpub2RlIGlzIGNyZWF0ZWQs
IGRpcnRpZWQgYW5kIGNhcHR1cmVkIGludG8gY3VycmVudCBhdG9tLgorICoKKyAqICAgICAgICAg
My4gZXh0ZW50IGlzIGluc2VydGVkIGFuZCBtb2RpZmllZC4KKyAqCisgKiAgICAgU3RlcHMgKDIp
IGFuZCAoMykgdGFrZSBwbGFjZSB1bmRlciBsb25nIHRlcm0gbG9jayBvbiB0aGUgdHdpZyBub2Rl
LgorICoKKyAqICAgICBXaGVuIGZpbGUgaXMgYWNjZXNzZWQgdGhyb3VnaCBtbWFwKDIpIHBhZ2Ug
aXMgYWx3YXlzIGNyZWF0ZWQgZHVyaW5nCisgKiAgICAgcGFnZSBmYXVsdC4KKyAqICAgICBBZnRl
ciB0aGlzIChpbiByZWlzZXI0X3JlYWRwYWdlX2Rpc3BhdGNoKCktPnJlaXNlcjRfcmVhZHBhZ2Vf
ZXh0ZW50KCkpOgorICoKKyAqICAgICAgICAgMS4gaWYgYWNjZXNzIGlzIG1hZGUgdG8gbm9uLWhv
bGUgcGFnZSBuZXcgam5vZGUgaXMgY3JlYXRlZCwgKGlmCisgKiAgICAgICAgIG5lY2Vzc2FyeSkK
KyAqCisgKiAgICAgICAgIDIuIGlmIGFjY2VzcyBpcyBtYWRlIHRvIHRoZSBob2xlIHBhZ2UsIGpu
b2RlIGlzIG5vdCBjcmVhdGVkIChYWFgKKyAqICAgICAgICAgbm90IGNsZWFyIHdoeSkuCisgKgor
ICogICAgIEFsc28sIGV2ZW4gaWYgcGFnZSBpcyBjcmVhdGVkIGJ5IHdyaXRlIHBhZ2UgZmF1bHQg
aXQgaXMgbm90IG1hcmtlZAorICogICAgIGRpcnR5IGltbWVkaWF0ZWx5IGJ5IGhhbmRsZV9tbV9m
YXVsdCgpLiBQcm9iYWJseSB0aGlzIGlzIHRvIGF2b2lkIHJhY2VzCisgKiAgICAgd2l0aCBwYWdl
IHdyaXRlLW91dC4KKyAqCisgKiAgICAgRGlydHkgYml0IGluc3RhbGxlZCBieSBoYXJkd2FyZSBp
cyBvbmx5IHRyYW5zZmVycmVkIHRvIHRoZSBzdHJ1Y3QgcGFnZQorICogICAgIGxhdGVyLCB3aGVu
IHBhZ2UgaXMgdW5tYXBwZWQgKGluIHphcF9wdGVfcmFuZ2UoKSwgb3IKKyAqICAgICB0cnlfdG9f
dW5tYXBfb25lKCkpLgorICoKKyAqICAgICBTbywgd2l0aCBtbWFwKDIpIHdlIGhhdmUgdG8gaGFu
ZGxlIGZvbGxvd2luZyBpcmtzb21lIHNpdHVhdGlvbnM6CisgKgorICogICAgICAgICAxLiB0aGVy
ZSBleGlzdHMgbW9kaWZpZWQgcGFnZSAoY2xlYW4gb3IgZGlydHkpIHdpdGhvdXQgam5vZGUKKyAq
CisgKiAgICAgICAgIDIuIHRoZXJlIGV4aXN0cyBtb2RpZmllZCBwYWdlIChjbGVhbiBvciBkaXJ0
eSkgd2l0aCBjbGVhbiBqbm9kZQorICoKKyAqICAgICAgICAgMy4gY2xlYW4gcGFnZSB3aGljaCBp
cyBhIHBhcnQgb2YgYXRvbSBjYW4gYmUgdHJhbnNwYXJlbnRseSBtb2RpZmllZAorICogICAgICAg
ICBhdCBhbnkgbW9tZW50IHRocm91Z2ggbWFwcGluZyB3aXRob3V0IGJlY29taW5nIGRpcnR5Lgor
ICoKKyAqICAgICAoMSkgYW5kICgyKSBjYW4gbGVhZCB0byB0aGUgb3V0LW9mLW1lbW9yeSBzaXR1
YXRpb246IC0+d3JpdGVwYWdlKCkKKyAqICAgICBkb2Vzbid0IGtub3cgd2hhdCB0byBkbyB3aXRo
IHN1Y2ggcGFnZXMgYW5kIC0+c3luY19zYigpLy0+d3JpdGVwYWdlcygpCisgKiAgICAgZG9uJ3Qg
c2VlIHRoZW0sIGJlY2F1c2UgdGhlc2UgbWV0aG9kcyBvcGVyYXRlIG9uIGF0b21zLgorICoKKyAq
ICAgICAoMykgY2FuIGxlYWQgdG8gdGhlIGxvc3Mgb2YgZGF0YTogc3VwcG9zZSB3ZSBoYXZlIGRp
cnR5IHBhZ2Ugd2l0aCBkaXJ0eQorICogICAgIGNhcHR1cmVkIGpub2RlIGNhcHR1cmVkIGJ5IHNv
bWUgYXRvbS4gQXMgcGFydCBvZiBlYXJseSBmbHVzaCAoZm9yCisgKiAgICAgZXhhbXBsZSkgcGFn
ZSB3YXMgd3JpdHRlbiBvdXQuIERpcnR5IGJpdCB3YXMgY2xlYXJlZCBvbiBib3RoIHBhZ2UgYW5k
CisgKiAgICAgam5vZGUuIEFmdGVyIHRoaXMgcGFnZSBpcyBtb2RpZmllZCB0aHJvdWdoIG1hcHBp
bmcsIGJ1dCBrZXJuZWwgZG9lc24ndAorICogICAgIG5vdGljZSBhbmQganVzdCBkaXNjYXJkcyBw
YWdlIGFuZCBqbm9kZSBhcyBwYXJ0IG9mIGNvbW1pdC4gKFhYWAorICogICAgIGFjdHVhbGx5IGl0
IGRvZXNuJ3QsIGJlY2F1c2UgdG8gcmVjbGFpbSBwYWdlIC0+cmVsZWFzZXBhZ2UoKSBoYXMgdG8g
YmUKKyAqICAgICBjYWxsZWQgYW5kIGJlZm9yZSB0aGlzIGRpcnR5IGJpdCB3aWxsIGJlIHRyYW5z
ZmVycmVkIHRvIHRoZSBzdHJ1Y3QKKyAqICAgICBwYWdlKS4KKyAqCisgKi8KKworI2luY2x1ZGUg
ImRlYnVnLmgiCisjaW5jbHVkZSAidHhubWdyLmgiCisjaW5jbHVkZSAiam5vZGUuaCIKKyNpbmNs
dWRlICJ6bm9kZS5oIgorI2luY2x1ZGUgImJsb2NrX2FsbG9jLmgiCisjaW5jbHVkZSAidHJlZS5o
IgorI2luY2x1ZGUgIndhbmRlci5oIgorI2luY2x1ZGUgImt0eG5tZ3JkLmgiCisjaW5jbHVkZSAi
c3VwZXIuaCIKKyNpbmNsdWRlICJwYWdlX2NhY2hlLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgor
I2luY2x1ZGUgInZmc19vcHMuaCIKKyNpbmNsdWRlICJpbm9kZS5oIgorI2luY2x1ZGUgImZsdXNo
LmgiCisjaW5jbHVkZSAiZGlzY2FyZC5oIgorCisjaW5jbHVkZSA8YXNtL2F0b21pYy5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgvZnMuaD4KKyNpbmNsdWRlIDxs
aW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNsdWRlIDxsaW51eC9wYWdl
bWFwLmg+CisjaW5jbHVkZSA8bGludXgvd3JpdGViYWNrLmg+CisjaW5jbHVkZSA8bGludXgvc3dh
cC5oPgkJLyogZm9yIHRvdGFscmFtX3BhZ2VzICovCisKK3N0YXRpYyB2b2lkIGF0b21fZnJlZSh0
eG5fYXRvbSAqIGF0b20pOworCitzdGF0aWMgaW50IGNvbW1pdF90eG5oKHR4bl9oYW5kbGUgKiB0
eG5oKTsKKworc3RhdGljIHZvaWQgd2FrZXVwX2F0b21fd2FpdGZvcl9saXN0KHR4bl9hdG9tICog
YXRvbSk7CitzdGF0aWMgdm9pZCB3YWtldXBfYXRvbV93YWl0aW5nX2xpc3QodHhuX2F0b20gKiBh
dG9tKTsKKworc3RhdGljIHZvaWQgY2FwdHVyZV9hc3NpZ25fdHhuaF9ub2xvY2sodHhuX2F0b20g
KiBhdG9tLCB0eG5faGFuZGxlICogdHhuaCk7CisKK3N0YXRpYyB2b2lkIGNhcHR1cmVfYXNzaWdu
X2Jsb2NrX25vbG9jayh0eG5fYXRvbSAqIGF0b20sIGpub2RlICogbm9kZSk7CisKK3N0YXRpYyB2
b2lkIGZ1c2Vfbm90X2Z1c2VkX2xvY2tfb3duZXJzKHR4bl9oYW5kbGUgKiB0eG5oLCB6bm9kZSAq
IG5vZGUpOworCitzdGF0aWMgaW50IGNhcHR1cmVfaW5pdF9mdXNpb24oam5vZGUgKiBub2RlLCB0
eG5faGFuZGxlICogdHhuaCwKKwkJCSAgICAgICB0eG5fY2FwdHVyZSBtb2RlKTsKKworc3RhdGlj
IGludCBjYXB0dXJlX2Z1c2Vfd2FpdCh0eG5faGFuZGxlICosIHR4bl9hdG9tICosIHR4bl9hdG9t
ICosIHR4bl9jYXB0dXJlKTsKKworc3RhdGljIHZvaWQgY2FwdHVyZV9mdXNlX2ludG8odHhuX2F0
b20gKiBzbWFsbCwgdHhuX2F0b20gKiBsYXJnZSk7CisKK3ZvaWQgcmVpc2VyNF9pbnZhbGlkYXRl
X2xpc3Qoc3RydWN0IGxpc3RfaGVhZCAqKTsKKworLyogR0VORVJJQyBTVFJVQ1RVUkVTICovCisK
K3R5cGVkZWYgc3RydWN0IF90eG5fd2FpdF9saW5rcyB0eG5fd2FpdF9saW5rczsKKworc3RydWN0
IF90eG5fd2FpdF9saW5rcyB7CisJbG9ja19zdGFjayAqX2xvY2tfc3RhY2s7CisJc3RydWN0IGxp
c3RfaGVhZCBfZndhaXRmb3JfbGluazsKKwlzdHJ1Y3QgbGlzdF9oZWFkIF9md2FpdGluZ19saW5r
OworCWludCAoKndhaXRmb3JfY2IpICh0eG5fYXRvbSAqIGF0b20sIHN0cnVjdCBfdHhuX3dhaXRf
bGlua3MgKiB3bGlua3MpOworCWludCAoKndhaXRpbmdfY2IpICh0eG5fYXRvbSAqIGF0b20sIHN0
cnVjdCBfdHhuX3dhaXRfbGlua3MgKiB3bGlua3MpOworfTsKKworLyogRklYTUU6IEluIHRoZW9y
eSwgd2Ugc2hvdWxkIGJlIHVzaW5nIHRoZSBzbGFiIGNhY2hlIGluaXQgJiBkZXN0cnVjdG9yCisg
ICBtZXRob2RzIGluc3RlYWQgb2YsIGUuZy4sIGpub2RlX2luaXQsIGV0Yy4gKi8KK3N0YXRpYyBz
dHJ1Y3Qga21lbV9jYWNoZSAqX2F0b21fc2xhYiA9IE5VTEw7CisvKiB0aGlzIGlzIGZvciB1c2Vy
LXZpc2libGUsIGNyb3NzIHN5c3RlbS1jYWxsIHRyYW5zYWN0aW9ucy4gKi8KK3N0YXRpYyBzdHJ1
Y3Qga21lbV9jYWNoZSAqX3R4bmhfc2xhYiA9IE5VTEw7CisKKy8qKgorICogaW5pdF90eG5tZ3Jf
c3RhdGljIC0gY3JlYXRlIHRyYW5zYWN0aW9uIG1hbmFnZXIgc2xhYiBjYWNoZXMKKyAqCisgKiBJ
bml0aWFsaXplcyBjYWNoZXMgb2YgdHhuLWF0b21zIGFuZCB0eG5faGFuZGxlLiBJdCBpcyBwYXJ0
IG9mIHJlaXNlcjQgbW9kdWxlCisgKiBpbml0aWFsaXphdGlvbi4KKyAqLworaW50IGluaXRfdHhu
bWdyX3N0YXRpYyh2b2lkKQoreworCWFzc2VydCgiam1hY2QtNjAwIiwgX2F0b21fc2xhYiA9PSBO
VUxMKTsKKwlhc3NlcnQoImptYWNkLTYwMSIsIF90eG5oX3NsYWIgPT0gTlVMTCk7CisKKwlPTl9E
RUJVRyhhdG9taWNfc2V0KCZmbHVzaF9jbnQsIDApKTsKKworCV9hdG9tX3NsYWIgPSBrbWVtX2Nh
Y2hlX2NyZWF0ZSgidHhuX2F0b20iLCBzaXplb2YodHhuX2F0b20pLCAwLAorCQkJCSAgICAgICBT
TEFCX0hXQ0FDSEVfQUxJR04gfAorCQkJCSAgICAgICBTTEFCX1JFQ0xBSU1fQUNDT1VOVCwgTlVM
TCk7CisJaWYgKF9hdG9tX3NsYWIgPT0gTlVMTCkKKwkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsK
KworCV90eG5oX3NsYWIgPSBrbWVtX2NhY2hlX2NyZWF0ZSgidHhuX2hhbmRsZSIsIHNpemVvZih0
eG5faGFuZGxlKSwgMCwKKwkJCSAgICAgIFNMQUJfSFdDQUNIRV9BTElHTiwgTlVMTCk7CisJaWYg
KF90eG5oX3NsYWIgPT0gTlVMTCkgeworCQlrbWVtX2NhY2hlX2Rlc3Ryb3koX2F0b21fc2xhYik7
CisJCV9hdG9tX3NsYWIgPSBOVUxMOworCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCX0KKwor
CXJldHVybiAwOworfQorCisvKioKKyAqIGRvbmVfdHhubWdyX3N0YXRpYyAtIGRlbGV0ZSB0eG5f
YXRvbSBhbmQgdHhuX2hhbmRsZSBjYWNoZXMKKyAqCisgKiBUaGlzIGlzIGNhbGxlZCBvbiByZWlz
ZXI0IG1vZHVsZSB1bmxvYWRpbmcgb3Igc3lzdGVtIHNodXRkb3duLgorICovCit2b2lkIGRvbmVf
dHhubWdyX3N0YXRpYyh2b2lkKQoreworCWRlc3Ryb3lfcmVpc2VyNF9jYWNoZSgmX2F0b21fc2xh
Yik7CisJZGVzdHJveV9yZWlzZXI0X2NhY2hlKCZfdHhuaF9zbGFiKTsKK30KKworLyoqCisgKiBp
bml0X3R4bm1nciAtIGluaXRpYWxpemUgYSBuZXcgdHJhbnNhY3Rpb24gbWFuYWdlcgorICogQG1n
cjogcG9pbnRlciB0byB0cmFuc2FjdGlvbiBtYW5hZ2VyIGVtYmVkZGVkIGluIHJlaXNlcjQgc3Vw
ZXIgYmxvY2sKKyAqCisgKiBUaGlzIGlzIGNhbGxlZCBvbiBtb3VudC4gTWFrZXMgbmVjZXNzYXJ5
IGluaXRpYWxpemF0aW9ucy4KKyAqLwordm9pZCByZWlzZXI0X2luaXRfdHhubWdyKHR4bl9tZ3Ig
Km1ncikKK3sKKwlhc3NlcnQoInVta2EtMTY5IiwgbWdyICE9IE5VTEwpOworCisJbWdyLT5hdG9t
X2NvdW50ID0gMDsKKwltZ3ItPmlkX2NvdW50ID0gMTsKKwlJTklUX0xJU1RfSEVBRCgmbWdyLT5h
dG9tc19saXN0KTsKKwlzcGluX2xvY2tfaW5pdCgmbWdyLT50bWdyX2xvY2spOworCW11dGV4X2lu
aXQoJm1nci0+Y29tbWl0X211dGV4KTsKK30KKworLyoqCisgKiByZWlzZXI0X2RvbmVfdHhubWdy
IC0gc3RvcCB0cmFuc2FjdGlvbiBtYW5hZ2VyCisgKiBAbWdyOiBwb2ludGVyIHRvIHRyYW5zYWN0
aW9uIG1hbmFnZXIgZW1iZWRkZWQgaW4gcmVpc2VyNCBzdXBlciBibG9jaworICoKKyAqIFRoaXMg
aXMgY2FsbGVkIG9uIHVtb3VudC4gRG9lcyBzYW5pdHkgY2hlY2tzLgorICovCit2b2lkIHJlaXNl
cjRfZG9uZV90eG5tZ3IodHhuX21nciAqbWdyKQoreworCWFzc2VydCgidW1rYS0xNzAiLCBtZ3Ig
IT0gTlVMTCk7CisJYXNzZXJ0KCJ1bWthLTE3MDEiLCBsaXN0X2VtcHR5X2NhcmVmdWwoJm1nci0+
YXRvbXNfbGlzdCkpOworCWFzc2VydCgidW1rYS0xNzAyIiwgbWdyLT5hdG9tX2NvdW50ID09IDAp
OworfQorCisvKiBJbml0aWFsaXplIGEgdHJhbnNhY3Rpb24gaGFuZGxlLiAqLworLyogQXVkaXRl
ZCBieTogdW1rYSAoMjAwMi4wNi4xMykgKi8KK3N0YXRpYyB2b2lkIHR4bmhfaW5pdCh0eG5faGFu
ZGxlICogdHhuaCwgdHhuX21vZGUgbW9kZSkKK3sKKwlhc3NlcnQoInVta2EtMTcxIiwgdHhuaCAh
PSBOVUxMKTsKKworCXR4bmgtPm1vZGUgPSBtb2RlOworCXR4bmgtPmF0b20gPSBOVUxMOworCXJl
aXNlcjRfY3R4X2dmcF9tYXNrX3NldCgpOworCXR4bmgtPmZsYWdzID0gMDsKKwlzcGluX2xvY2tf
aW5pdCgmdHhuaC0+aGxvY2spOworCUlOSVRfTElTVF9IRUFEKCZ0eG5oLT50eG5oX2xpbmspOwor
fQorCisjaWYgUkVJU0VSNF9ERUJVRworLyogQ2hlY2sgaWYgYSB0cmFuc2FjdGlvbiBoYW5kbGUg
aXMgY2xlYW4uICovCitzdGF0aWMgaW50IHR4bmhfaXNjbGVhbih0eG5faGFuZGxlICogdHhuaCkK
K3sKKwlhc3NlcnQoInVta2EtMTcyIiwgdHhuaCAhPSBOVUxMKTsKKwlyZXR1cm4gdHhuaC0+YXRv
bSA9PSBOVUxMICYmCisJCUxPQ0tfQ05UX05JTChzcGluX2xvY2tlZF90eG5oKTsKK30KKyNlbmRp
ZgorCisvKiBJbml0aWFsaXplIGFuIGF0b20uICovCitzdGF0aWMgdm9pZCBhdG9tX2luaXQodHhu
X2F0b20gKiBhdG9tKQoreworCWludCBsZXZlbDsKKworCWFzc2VydCgidW1rYS0xNzMiLCBhdG9t
ICE9IE5VTEwpOworCisJbWVtc2V0KGF0b20sIDAsIHNpemVvZih0eG5fYXRvbSkpOworCisJYXRv
bS0+c3RhZ2UgPSBBU1RBR0VfRlJFRTsKKwlhdG9tLT5zdGFydF90aW1lID0gamlmZmllczsKKwor
CWZvciAobGV2ZWwgPSAwOyBsZXZlbCA8IFJFQUxfTUFYX1pUUkVFX0hFSUdIVCArIDE7IGxldmVs
ICs9IDEpCisJCUlOSVRfTElTVF9IRUFEKEFUT01fRElSVFlfTElTVChhdG9tLCBsZXZlbCkpOwor
CisJSU5JVF9MSVNUX0hFQUQoQVRPTV9DTEVBTl9MSVNUKGF0b20pKTsKKwlJTklUX0xJU1RfSEVB
RChBVE9NX09WUldSX0xJU1QoYXRvbSkpOworCUlOSVRfTElTVF9IRUFEKEFUT01fV0JfTElTVChh
dG9tKSk7CisJSU5JVF9MSVNUX0hFQUQoJmF0b20tPmlub2Rlcyk7CisJc3Bpbl9sb2NrX2luaXQo
JihhdG9tLT5hbG9jaykpOworCS8qIGxpc3Qgb2YgdHJhbnNhY3Rpb24gaGFuZGxlcyAqLworCUlO
SVRfTElTVF9IRUFEKCZhdG9tLT50eG5oX2xpc3QpOworCS8qIGxpbmsgdG8gdHJhbnNhY3Rpb24g
bWFuYWdlcidzIGxpc3Qgb2YgYXRvbXMgKi8KKwlJTklUX0xJU1RfSEVBRCgmYXRvbS0+YXRvbV9s
aW5rKTsKKwlJTklUX0xJU1RfSEVBRCgmYXRvbS0+ZndhaXRmb3JfbGlzdCk7CisJSU5JVF9MSVNU
X0hFQUQoJmF0b20tPmZ3YWl0aW5nX2xpc3QpOworCWJsb2NrbnJfc2V0X2luaXQoJmF0b20tPndh
bmRlcmVkX21hcCk7CisKKwlhdG9tX2RzZXRfaW5pdChhdG9tKTsKKworCWluaXRfYXRvbV9mcV9w
YXJ0cyhhdG9tKTsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKy8qIENoZWNrIGlmIGFuIGF0b20g
aXMgY2xlYW4uICovCitzdGF0aWMgaW50IGF0b21faXNjbGVhbih0eG5fYXRvbSAqIGF0b20pCit7
CisJaW50IGxldmVsOworCisJYXNzZXJ0KCJ1bWthLTE3NCIsIGF0b20gIT0gTlVMTCk7CisKKwlm
b3IgKGxldmVsID0gMDsgbGV2ZWwgPCBSRUFMX01BWF9aVFJFRV9IRUlHSFQgKyAxOyBsZXZlbCAr
PSAxKSB7CisJCWlmICghbGlzdF9lbXB0eV9jYXJlZnVsKEFUT01fRElSVFlfTElTVChhdG9tLCBs
ZXZlbCkpKSB7CisJCQlyZXR1cm4gMDsKKwkJfQorCX0KKworCXJldHVybglhdG9tLT5zdGFnZSA9
PSBBU1RBR0VfRlJFRSAmJgorCQlhdG9tLT50eG5oX2NvdW50ID09IDAgJiYKKwkJYXRvbS0+Y2Fw
dHVyZV9jb3VudCA9PSAwICYmCisJCWF0b21pY19yZWFkKCZhdG9tLT5yZWZjb3VudCkgPT0gMCAm
JgorCQkoJmF0b20tPmF0b21fbGluayA9PSBhdG9tLT5hdG9tX2xpbmsubmV4dCAmJgorCQkgJmF0
b20tPmF0b21fbGluayA9PSBhdG9tLT5hdG9tX2xpbmsucHJldikgJiYKKwkJbGlzdF9lbXB0eV9j
YXJlZnVsKCZhdG9tLT50eG5oX2xpc3QpICYmCisJCWxpc3RfZW1wdHlfY2FyZWZ1bChBVE9NX0NM
RUFOX0xJU1QoYXRvbSkpICYmCisJCWxpc3RfZW1wdHlfY2FyZWZ1bChBVE9NX09WUldSX0xJU1Qo
YXRvbSkpICYmCisJCWxpc3RfZW1wdHlfY2FyZWZ1bChBVE9NX1dCX0xJU1QoYXRvbSkpICYmCisJ
CWxpc3RfZW1wdHlfY2FyZWZ1bCgmYXRvbS0+ZndhaXRmb3JfbGlzdCkgJiYKKwkJbGlzdF9lbXB0
eV9jYXJlZnVsKCZhdG9tLT5md2FpdGluZ19saXN0KSAmJgorCQlhdG9tX2ZxX3BhcnRzX2FyZV9j
bGVhbihhdG9tKTsKK30KKyNlbmRpZgorCisvKiBCZWdpbiBhIHRyYW5zYWN0aW9uIGluIHRoaXMg
Y29udGV4dC4gIEN1cnJlbnRseSB0aGlzIHVzZXMgdGhlIHJlaXNlcjRfY29udGV4dCdzCisgICB0
cmFuc19pbl9jdHgsIHdoaWNoIG1lYW5zIHRoYXQgdHJhbnNhY3Rpb24gaGFuZGxlcyBhcmUgc3Rh
Y2stYWxsb2NhdGVkLiAgRXZlbnR1YWxseQorICAgdGhpcyB3aWxsIGJlIGV4dGVuZGVkIHRvIGFs
bG93IHRyYW5zYWN0aW9uIGhhbmRsZXMgdG8gc3BhbiBzZXZlcmFsIGNvbnRleHRzLiAqLworLyog
QXVkaXRlZCBieTogdW1rYSAoMjAwMi4wNi4xMykgKi8KK3ZvaWQgcmVpc2VyNF90eG5fYmVnaW4o
cmVpc2VyNF9jb250ZXh0ICogY29udGV4dCkKK3sKKwlhc3NlcnQoImptYWNkLTU0NCIsIGNvbnRl
eHQtPnRyYW5zID09IE5VTEwpOworCisJY29udGV4dC0+dHJhbnMgPSAmY29udGV4dC0+dHJhbnNf
aW5fY3R4OworCisJLyogRklYTUVfTEFURVJfSk1BQ0QgQ3VycmVudGx5IHRoZXJlJ3Mgbm8gd2F5
IHRvIGJlZ2luIGEgVFhOX1JFQURfRlVTSU5HCisJICAgdHJhbnNjcmFzaC4gIERlZmF1bHQgc2hv
dWxkIGJlIFRYTl9XUklURV9GVVNJTkcuICBBbHNvLCB0aGUgX3RyYW5zIHZhcmlhYmxlIGlzCisJ
ICAgc3RhY2sgYWxsb2NhdGVkIHJpZ2h0IG5vdywgYnV0IHdlIHdvdWxkIGxpa2UgdG8gYWxsb3cg
Zm9yIGR5bmFtaWNhbGx5IGFsbG9jYXRlZAorCSAgIHRyYW5zY3Jhc2hlcyB0aGF0IHNwYW4gbXVs
dGlwbGUgc3lzdGVtIGNhbGxzLgorCSAqLworCXR4bmhfaW5pdChjb250ZXh0LT50cmFucywgVFhO
X1dSSVRFX0ZVU0lORyk7Cit9CisKKy8qIEZpbmlzaCBhIHRyYW5zYWN0aW9uIGhhbmRsZSBjb250
ZXh0LiAqLworaW50IHJlaXNlcjRfdHhuX2VuZChyZWlzZXI0X2NvbnRleHQgKiBjb250ZXh0KQor
eworCWxvbmcgcmV0ID0gMDsKKwl0eG5faGFuZGxlICp0eG5oOworCisJYXNzZXJ0KCJ1bWthLTI4
MyIsIGNvbnRleHQgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMzAxMiIsIHJlaXNlcjRfc2No
ZWR1bGFibGUoKSk7CisJYXNzZXJ0KCJ2cy0yNCIsIGNvbnRleHQgPT0gZ2V0X2N1cnJlbnRfY29u
dGV4dCgpKTsKKwlhc3NlcnQoIm5pa2l0YS0yOTY3IiwgbG9ja19zdGFja19pc2NsZWFuKGdldF9j
dXJyZW50X2xvY2tfc3RhY2soKSkpOworCisJdHhuaCA9IGNvbnRleHQtPnRyYW5zOworCWlmICh0
eG5oICE9IE5VTEwpIHsKKwkJaWYgKHR4bmgtPmF0b20gIT0gTlVMTCkKKwkJCXJldCA9IGNvbW1p
dF90eG5oKHR4bmgpOworCQlhc3NlcnQoImptYWNkLTYzMyIsIHR4bmhfaXNjbGVhbih0eG5oKSk7
CisJCWNvbnRleHQtPnRyYW5zID0gTlVMTDsKKwl9CisJcmV0dXJuIHJldDsKK30KKwordm9pZCBy
ZWlzZXI0X3R4bl9yZXN0YXJ0KHJlaXNlcjRfY29udGV4dCAqIGNvbnRleHQpCit7CisJcmVpc2Vy
NF90eG5fZW5kKGNvbnRleHQpOworCXJlaXNlcjRfcHJlZW1wdF9wb2ludCgpOworCXJlaXNlcjRf
dHhuX2JlZ2luKGNvbnRleHQpOworfQorCit2b2lkIHJlaXNlcjRfdHhuX3Jlc3RhcnRfY3VycmVu
dCh2b2lkKQoreworCXJlaXNlcjRfdHhuX3Jlc3RhcnQoZ2V0X2N1cnJlbnRfY29udGV4dCgpKTsK
K30KKworLyogVFhOX0FUT00gKi8KKworLyogR2V0IHRoZSBhdG9tIGJlbG9uZ2luZyB0byBhIHR4
bmgsIHdoaWNoIGlzIG5vdCBsb2NrZWQuICBSZXR1cm4gdHhuaCBsb2NrZWQuIExvY2tzIGF0b20s
IGlmIGF0b20KKyAgIGlzIG5vdCBOVUxMLiAgVGhpcyBwZXJmb3JtcyB0aGUgbmVjZXNzYXJ5IHNw
aW5fdHJ5bG9jayB0byBicmVhayB0aGUgbG9jay1vcmRlcmluZyBjeWNsZS4gIE1heQorICAgcmV0
dXJuIE5VTEwuICovCitzdGF0aWMgdHhuX2F0b20gKnR4bmhfZ2V0X2F0b20odHhuX2hhbmRsZSAq
IHR4bmgpCit7CisJdHhuX2F0b20gKmF0b207CisKKwlhc3NlcnQoInVta2EtMTgwIiwgdHhuaCAh
PSBOVUxMKTsKKwlhc3NlcnRfc3Bpbl9ub3RfbG9ja2VkKCYodHhuaC0+aGxvY2spKTsKKworCXdo
aWxlICgxKSB7CisJCXNwaW5fbG9ja190eG5oKHR4bmgpOworCQlhdG9tID0gdHhuaC0+YXRvbTsK
KworCQlpZiAoYXRvbSA9PSBOVUxMKQorCQkJYnJlYWs7CisKKwkJaWYgKHNwaW5fdHJ5bG9ja19h
dG9tKGF0b20pKQorCQkJYnJlYWs7CisKKwkJYXRvbWljX2luYygmYXRvbS0+cmVmY291bnQpOwor
CisJCXNwaW5fdW5sb2NrX3R4bmgodHhuaCk7CisJCXNwaW5fbG9ja19hdG9tKGF0b20pOworCQlz
cGluX2xvY2tfdHhuaCh0eG5oKTsKKworCQlpZiAodHhuaC0+YXRvbSA9PSBhdG9tKSB7CisJCQlh
dG9taWNfZGVjKCZhdG9tLT5yZWZjb3VudCk7CisJCQlicmVhazsKKwkJfQorCisJCXNwaW5fdW5s
b2NrX3R4bmgodHhuaCk7CisJCWF0b21fZGVjX2FuZF91bmxvY2soYXRvbSk7CisJfQorCisJcmV0
dXJuIGF0b207Cit9CisKKy8qIEdldCB0aGUgY3VycmVudCBhdG9tIGFuZCBzcGlubG9jayBpdCBp
ZiBjdXJyZW50IGF0b20gcHJlc2VudC4gTWF5IHJldHVybiBOVUxMICAqLwordHhuX2F0b20gKmdl
dF9jdXJyZW50X2F0b21fbG9ja2VkX25vY2hlY2sodm9pZCkKK3sKKwlyZWlzZXI0X2NvbnRleHQg
KmN4OworCXR4bl9hdG9tICphdG9tOworCXR4bl9oYW5kbGUgKnR4bmg7CisKKwljeCA9IGdldF9j
dXJyZW50X2NvbnRleHQoKTsKKwlhc3NlcnQoInphbS00MzciLCBjeCAhPSBOVUxMKTsKKworCXR4
bmggPSBjeC0+dHJhbnM7CisJYXNzZXJ0KCJ6YW0tNDM1IiwgdHhuaCAhPSBOVUxMKTsKKworCWF0
b20gPSB0eG5oX2dldF9hdG9tKHR4bmgpOworCisJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwly
ZXR1cm4gYXRvbTsKK30KKworLyogR2V0IHRoZSBhdG9tIGJlbG9uZ2luZyB0byBhIGpub2RlLCB3
aGljaCBpcyBpbml0aWFsbHkgbG9ja2VkLiAgUmV0dXJuIHdpdGgKKyAgIGJvdGggam5vZGUgYW5k
IGF0b20gbG9ja2VkLiAgVGhpcyBwZXJmb3JtcyB0aGUgbmVjZXNzYXJ5IHNwaW5fdHJ5bG9jayB0
bworICAgYnJlYWsgdGhlIGxvY2stb3JkZXJpbmcgY3ljbGUuICBBc3N1bWVzIHRoZSBqbm9kZSBp
cyBhbHJlYWR5IGxvY2tlZCwgYW5kCisgICByZXR1cm5zIE5VTEwgaWYgYXRvbSBpcyBub3Qgc2V0
LiAqLwordHhuX2F0b20gKmpub2RlX2dldF9hdG9tKGpub2RlICogbm9kZSkKK3sKKwl0eG5fYXRv
bSAqYXRvbTsKKworCWFzc2VydCgidW1rYS0xODEiLCBub2RlICE9IE5VTEwpOworCisJd2hpbGUg
KDEpIHsKKwkJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKworCQlhdG9tID0g
bm9kZS0+YXRvbTsKKwkJLyogbm9kZSBpcyBub3QgaW4gYW55IGF0b20gKi8KKwkJaWYgKGF0b20g
PT0gTlVMTCkKKwkJCWJyZWFrOworCisJCS8qIElmIGF0b20gaXMgbm90IGxvY2tlZCwgZ3JhYiB0
aGUgbG9jayBhbmQgcmV0dXJuICovCisJCWlmIChzcGluX3RyeWxvY2tfYXRvbShhdG9tKSkKKwkJ
CWJyZWFrOworCisJCS8qIEF0IGxlYXN0IG9uZSBqbm9kZSBiZWxvbmdzIHRvIHRoaXMgYXRvbSBp
dCBndWFyYW50ZWVzIHRoYXQKKwkJICogYXRvbS0+cmVmY291bnQgPiAwLCB3ZSBjYW4gc2FmZWx5
IGluY3JlbWVudCByZWZjb3VudC4gKi8KKwkJYXRvbWljX2luYygmYXRvbS0+cmVmY291bnQpOwor
CQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKworCQkvKiByZS1hY3F1aXJlIHNwaW4gbG9ja3Mg
aW4gdGhlIHJpZ2h0IG9yZGVyICovCisJCXNwaW5fbG9ja19hdG9tKGF0b20pOworCQlzcGluX2xv
Y2tfam5vZGUobm9kZSk7CisKKwkJLyogY2hlY2sgaWYgbm9kZSBzdGlsbCBwb2ludHMgdG8gdGhl
IHNhbWUgYXRvbS4gKi8KKwkJaWYgKG5vZGUtPmF0b20gPT0gYXRvbSkgeworCQkJYXRvbWljX2Rl
YygmYXRvbS0+cmVmY291bnQpOworCQkJYnJlYWs7CisJCX0KKworCQkvKiByZWxlYXNpbmcgb2Yg
YXRvbSBsb2NrIGFuZCByZWZlcmVuY2UgcmVxdWlyZXMgbm90IGhvbGRpbmcKKwkJICogbG9ja3Mg
b24gam5vZGVzLiAgKi8KKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisKKwkJLyogV2UgZG8g
bm90IHN1cmUgdGhhdCB0aGlzIGF0b20gaGFzIGV4dHJhIHJlZmVyZW5jZXMgZXhjZXB0IG91cgor
CQkgKiBvbmUsIHNvIHdlIHNob3VsZCBjYWxsIHByb3BlciBmdW5jdGlvbiB3aGljaCBtYXkgZnJl
ZSBhdG9tIGlmCisJCSAqIGxhc3QgcmVmZXJlbmNlIGlzIHJlbGVhc2VkLiAqLworCQlhdG9tX2Rl
Y19hbmRfdW5sb2NrKGF0b20pOworCisJCS8qIGxvY2sgam5vZGUgYWdhaW4gZm9yIGdldHRpbmcg
dmFsaWQgbm9kZS0+YXRvbSBwb2ludGVyCisJCSAqIHZhbHVlLiAqLworCQlzcGluX2xvY2tfam5v
ZGUobm9kZSk7CisJfQorCisJcmV0dXJuIGF0b207Cit9CisKKy8qIFJldHVybnMgdHJ1ZSBpZiBA
bm9kZSBpcyBkaXJ0eSBhbmQgcGFydCBvZiB0aGUgc2FtZSBhdG9tIGFzIG9uZSBvZiBpdHMgbmVp
Z2hib3JzLiAgVXNlZAorICAgYnkgZmx1c2ggY29kZSB0byBpbmRpY2F0ZSB3aGV0aGVyIHRoZSBu
ZXh0IG5vZGUgKGluIHNvbWUgZGlyZWN0aW9uKSBpcyBzdWl0YWJsZSBmb3IKKyAgIGZsdXNoaW5n
LiAqLworaW50CitzYW1lX3NsdW1fY2hlY2soam5vZGUgKiBub2RlLCBqbm9kZSAqIGNoZWNrLCBp
bnQgYWxsb2NfY2hlY2ssIGludCBhbGxvY192YWx1ZSkKK3sKKwlpbnQgY29tcGF0OworCXR4bl9h
dG9tICphdG9tOworCisJYXNzZXJ0KCJ1bWthLTE4MiIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0
KCJ1bWthLTE4MyIsIGNoZWNrICE9IE5VTEwpOworCisJLyogTm90IHN1cmUgd2hhdCB0aGlzIGZ1
bmN0aW9uIGlzIHN1cHBvc2VkIHRvIGRvIGlmIHN1cHBsaWVkIHdpdGggQGNoZWNrIHRoYXQgaXMK
KwkgICBuZWl0aGVyIGZvcm1hdHRlZCBub3IgdW5mb3JtYXR0ZWQgKGJpdG1hcCBvciBzbykuICov
CisJYXNzZXJ0KCJuaWtpdGEtMjM3MyIsIGpub2RlX2lzX3pub2RlKGNoZWNrKQorCSAgICAgICB8
fCBqbm9kZV9pc191bmZvcm1hdHRlZChjaGVjaykpOworCisJLyogTmVlZCBhIGxvY2sgb24gQ0hF
Q0sgdG8gZ2V0IGl0cyBhdG9tIGFuZCB0byBjaGVjayB2YXJpb3VzIHN0YXRlIGJpdHMuCisJICAg
RG9uJ3QgbmVlZCBhIGxvY2sgb24gTk9ERSBvbmNlIHdlIGdldCB0aGUgYXRvbSBsb2NrLiAqLwor
CS8qIEl0IGlzIG5vdCBlbm91Z2ggdG8gbG9jayB0d28gbm9kZXMgYW5kIGNoZWNrIChub2RlLT5h
dG9tID09CisJICAgY2hlY2stPmF0b20pIGJlY2F1c2UgYXRvbSBjb3VsZCBiZSBsb2NrZWQgYW5k
IGJlaW5nIGZ1c2VkIGF0IHRoYXQKKwkgICBtb21lbnQsIGpub2RlcyBvZiB0aGUgYXRvbSBvZiB0
aGF0IHN0YXRlIChiZWluZyBmdXNlZCkgY2FuIHBvaW50IHRvCisJICAgZGlmZmVyZW50IG9iamVj
dHMsIGJ1dCB0aGUgYXRvbSBpcyB0aGUgc2FtZS4gKi8KKwlzcGluX2xvY2tfam5vZGUoY2hlY2sp
OworCisJYXRvbSA9IGpub2RlX2dldF9hdG9tKGNoZWNrKTsKKworCWlmIChhdG9tID09IE5VTEwp
IHsKKwkJY29tcGF0ID0gMDsKKwl9IGVsc2UgeworCQljb21wYXQgPSAobm9kZS0+YXRvbSA9PSBh
dG9tICYmIEpGX0lTU0VUKGNoZWNrLCBKTk9ERV9ESVJUWSkpOworCisJCWlmIChjb21wYXQgJiYg
am5vZGVfaXNfem5vZGUoY2hlY2spKSB7CisJCQljb21wYXQgJj0gem5vZGVfaXNfY29ubmVjdGVk
KEpaTk9ERShjaGVjaykpOworCQl9CisKKwkJaWYgKGNvbXBhdCAmJiBhbGxvY19jaGVjaykgewor
CQkJY29tcGF0ICY9IChhbGxvY192YWx1ZSA9PSBqbm9kZV9pc19mbHVzaHByZXBwZWQoY2hlY2sp
KTsKKwkJfQorCisJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJfQorCisJc3Bpbl91bmxvY2tf
am5vZGUoY2hlY2spOworCisJcmV0dXJuIGNvbXBhdDsKK30KKworLyogRGVjcmVtZW50IHRoZSBh
dG9tJ3MgcmVmZXJlbmNlIGNvdW50IGFuZCBpZiBpdCBmYWxscyB0byB6ZXJvLCBmcmVlIGl0LiAq
Lwordm9pZCBhdG9tX2RlY19hbmRfdW5sb2NrKHR4bl9hdG9tICogYXRvbSkKK3sKKwl0eG5fbWdy
ICptZ3IgPSAmZ2V0X3N1cGVyX3ByaXZhdGUocmVpc2VyNF9nZXRfY3VycmVudF9zYigpKS0+dG1n
cjsKKworCWFzc2VydCgidW1rYS0xODYiLCBhdG9tICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xv
Y2tlZCgmKGF0b20tPmFsb2NrKSk7CisJYXNzZXJ0KCJ6YW0tMTAzOSIsIGF0b21pY19yZWFkKCZh
dG9tLT5yZWZjb3VudCkgPiAwKTsKKworCWlmIChhdG9taWNfZGVjX2FuZF90ZXN0KCZhdG9tLT5y
ZWZjb3VudCkpIHsKKwkJLyogdGFrZSB0eG5tZ3IgbG9jayBhbmQgYXRvbSBsb2NrIGluIHByb3Bl
ciBvcmRlci4gKi8KKwkJaWYgKCFzcGluX3RyeWxvY2tfdHhubWdyKG1ncikpIHsKKwkJCS8qIFRo
aXMgYXRvbSBzaG91bGQgZXhpc3QgYWZ0ZXIgd2UgcmUtYWNxdWlyZSBpdHMKKwkJCSAqIHNwaW5s
b2NrLCBzbyB3ZSBpbmNyZW1lbnQgaXRzIHJlZmVyZW5jZSBjb3VudGVyLiAqLworCQkJYXRvbWlj
X2luYygmYXRvbS0+cmVmY291bnQpOworCQkJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwkJCXNw
aW5fbG9ja190eG5tZ3IobWdyKTsKKwkJCXNwaW5fbG9ja19hdG9tKGF0b20pOworCisJCQlpZiAo
IWF0b21pY19kZWNfYW5kX3Rlc3QoJmF0b20tPnJlZmNvdW50KSkgeworCQkJCXNwaW5fdW5sb2Nr
X2F0b20oYXRvbSk7CisJCQkJc3Bpbl91bmxvY2tfdHhubWdyKG1ncik7CisJCQkJcmV0dXJuOwor
CQkJfQorCQl9CisJCWFzc2VydF9zcGluX2xvY2tlZCgmKG1nci0+dG1ncl9sb2NrKSk7CisJCWF0
b21fZnJlZShhdG9tKTsKKwkJc3Bpbl91bmxvY2tfdHhubWdyKG1ncik7CisJfSBlbHNlCisJCXNw
aW5fdW5sb2NrX2F0b20oYXRvbSk7Cit9CisKKy8qIENyZWF0ZSBuZXcgYXRvbSBhbmQgY29ubmVj
dCBpdCB0byBnaXZlbiB0cmFuc2FjdGlvbiBoYW5kbGUuICBUaGlzIGFkZHMgdGhlCisgICBhdG9t
IHRvIHRoZSB0cmFuc2FjdGlvbiBtYW5hZ2VyJ3MgbGlzdCBhbmQgc2V0cyBpdHMgcmVmZXJlbmNl
IGNvdW50IHRvIDEsIGFuCisgICBhcnRpZmljaWFsIHJlZmVyZW5jZSB3aGljaCBpcyBrZXB0IHVu
dGlsIGl0IGNvbW1pdHMuICBXZSBwbGF5IHN0cmFuZ2UgZ2FtZXMKKyAgIHRvIGF2b2lkIGFsbG9j
YXRpb24gdW5kZXIgam5vZGUgJiB0eG5oIHNwaW5sb2Nrcy4qLworCitzdGF0aWMgaW50IGF0b21f
YmVnaW5fYW5kX2Fzc2lnbl90b190eG5oKHR4bl9hdG9tICoqIGF0b21fYWxsb2MsIHR4bl9oYW5k
bGUgKiB0eG5oKQoreworCXR4bl9hdG9tICphdG9tOworCXR4bl9tZ3IgKm1ncjsKKworCWlmIChS
RUlTRVI0X0RFQlVHICYmIHJvZnNfdHJlZShjdXJyZW50X3RyZWUpKSB7CisJCXdhcm5pbmcoIm5p
a2l0YS0zMzY2IiwgIkNyZWF0aW5nIGF0b20gb24gcm9mcyIpOworCQlkdW1wX3N0YWNrKCk7CisJ
fQorCisJaWYgKCphdG9tX2FsbG9jID09IE5VTEwpIHsKKwkJKCphdG9tX2FsbG9jKSA9IGttZW1f
Y2FjaGVfYWxsb2MoX2F0b21fc2xhYiwKKwkJCQkJCSByZWlzZXI0X2N0eF9nZnBfbWFza19nZXQo
KSk7CisKKwkJaWYgKCphdG9tX2FsbG9jID09IE5VTEwpCisJCQlyZXR1cm4gUkVURVJSKC1FTk9N
RU0pOworCX0KKworCS8qIGFuZCwgYWxzbywgdHhubWdyIHNwaW4gbG9jayBzaG91bGQgYmUgdGFr
ZW4gYmVmb3JlIGpub2RlIGFuZCB0eG5oCisJICAgbG9ja3MuICovCisJbWdyID0gJmdldF9zdXBl
cl9wcml2YXRlKHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSktPnRtZ3I7CisJc3Bpbl9sb2NrX3R4
bm1ncihtZ3IpOworCXNwaW5fbG9ja190eG5oKHR4bmgpOworCisJLyogQ2hlY2sgd2hldGhlciBu
ZXcgYXRvbSBzdGlsbCBuZWVkZWQgKi8KKwlpZiAodHhuaC0+YXRvbSAhPSBOVUxMKSB7CisJCS8q
IE5PVEUtTklLSVRBIHByb2JhYmx5IGl0IGlzIHJhdGhlciBiZXR0ZXIgdG8gZnJlZQorCQkgKiBh
dG9tX2FsbG9jIGhlcmUgdGhhbiB0aHJlYWQgaXQgdXAgdG8gcmVpc2VyNF90cnlfY2FwdHVyZSgp
ICovCisKKwkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJc3Bpbl91bmxvY2tfdHhubWdyKG1n
cik7CisKKwkJcmV0dXJuIC1FX1JFUEVBVDsKKwl9CisKKwlhdG9tID0gKmF0b21fYWxsb2M7CisJ
KmF0b21fYWxsb2MgPSBOVUxMOworCisJYXRvbV9pbml0KGF0b20pOworCisJYXNzZXJ0KCJqbWFj
ZC0xNyIsIGF0b21faXNjbGVhbihhdG9tKSk7CisKKyAgICAgICAgLyoKKwkgKiBsb2NrIG9yZGVy
aW5nIGlzIGJyb2tlbiBoZXJlLiBJdCBpcyBvaywgYXMgbG9uZyBhcyBAYXRvbSBpcyBuZXcKKwkg
KiBhbmQgaW5hY2Nlc3NpYmxlIGZvciBvdGhlcnMuIFdlIGNhbid0IHVzZSBzcGluX2xvY2tfYXRv
bSBvcgorCSAqIHNwaW5fbG9jaygmYXRvbS0+YWxvY2spIGJlY2F1c2UgdGhleSBjYXJlIGFib3V0
IGxvY2tpbmcKKwkgKiBkZXBlbmRlbmNpZXMuIHNwaW5fdHJ5bG9ja19sb2NrIGRvZXNuJ3QuCisJ
ICovCisJY2hlY2tfbWUoIiIsIHNwaW5fdHJ5bG9ja19hdG9tKGF0b20pKTsKKworCS8qIGFkZCBh
dG9tIHRvIHRoZSBlbmQgb2YgdHJhbnNhY3Rpb24gbWFuYWdlcidzIGxpc3Qgb2YgYXRvbXMgKi8K
KwlsaXN0X2FkZF90YWlsKCZhdG9tLT5hdG9tX2xpbmssICZtZ3ItPmF0b21zX2xpc3QpOworCWF0
b20tPmF0b21faWQgPSBtZ3ItPmlkX2NvdW50Kys7CisJbWdyLT5hdG9tX2NvdW50ICs9IDE7CisK
KwkvKiBSZWxlYXNlIHR4bm1nciBsb2NrICovCisJc3Bpbl91bmxvY2tfdHhubWdyKG1ncik7CisK
KwkvKiBPbmUgcmVmZXJlbmNlIHVudGlsIGl0IGNvbW1pdHMuICovCisJYXRvbWljX2luYygmYXRv
bS0+cmVmY291bnQpOworCWF0b20tPnN0YWdlID0gQVNUQUdFX0NBUFRVUkVfRlVTRTsKKwlhdG9t
LT5zdXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKwljYXB0dXJlX2Fzc2lnbl90eG5o
X25vbG9jayhhdG9tLCB0eG5oKTsKKworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJc3Bpbl91
bmxvY2tfdHhuaCh0eG5oKTsKKworCXJldHVybiAtRV9SRVBFQVQ7Cit9CisKKy8qIFJldHVybiB0
cnVlIGlmIGFuIGF0b20gaXMgY3VycmVudGx5ICJvcGVuIi4gKi8KK3N0YXRpYyBpbnQgYXRvbV9p
c29wZW4oY29uc3QgdHhuX2F0b20gKiBhdG9tKQoreworCWFzc2VydCgidW1rYS0xODUiLCBhdG9t
ICE9IE5VTEwpOworCisJcmV0dXJuIGF0b20tPnN0YWdlID4gMCAmJiBhdG9tLT5zdGFnZSA8IEFT
VEFHRV9QUkVfQ09NTUlUOworfQorCisvKiBSZXR1cm4gdGhlIG51bWJlciBvZiBwb2ludGVycyB0
byB0aGlzIGF0b20gdGhhdCBtdXN0IGJlIHVwZGF0ZWQgZHVyaW5nIGZ1c2lvbi4gIFRoaXMKKyAg
IGFwcHJveGltYXRlcyB0aGUgYW1vdW50IG9mIHdvcmsgdG8gYmUgZG9uZS4gIEZ1c2lvbiBjaG9v
c2VzIHRoZSBhdG9tIHdpdGggZmV3ZXIKKyAgIHBvaW50ZXJzIHRvIGZ1c2UgaW50byB0aGUgYXRv
bSB3aXRoIG1vcmUgcG9pbnRlcnMuICovCitzdGF0aWMgaW50IGF0b21fcG9pbnRlcl9jb3VudChj
b25zdCB0eG5fYXRvbSAqIGF0b20pCit7CisJYXNzZXJ0KCJ1bWthLTE4NyIsIGF0b20gIT0gTlVM
TCk7CisKKwkvKiBUaGlzIGlzIGEgbWVhc3VyZSBvZiB0aGUgYW1vdW50IG9mIHdvcmsgbmVlZGVk
IHRvIGZ1c2UgdGhpcyBhdG9tCisJICogaW50byBhbm90aGVyLiAqLworCXJldHVybiBhdG9tLT50
eG5oX2NvdW50ICsgYXRvbS0+Y2FwdHVyZV9jb3VudDsKK30KKworLyogQ2FsbGVkIGhvbGRpbmcg
dGhlIGF0b20gbG9jaywgdGhpcyByZW1vdmVzIHRoZSBhdG9tIGZyb20gdGhlIHRyYW5zYWN0aW9u
IG1hbmFnZXIgbGlzdAorICAgYW5kIGZyZWVzIGl0LiAqLworc3RhdGljIHZvaWQgYXRvbV9mcmVl
KHR4bl9hdG9tICogYXRvbSkKK3sKKwl0eG5fbWdyICptZ3IgPSAmZ2V0X3N1cGVyX3ByaXZhdGUo
cmVpc2VyNF9nZXRfY3VycmVudF9zYigpKS0+dG1ncjsKKworCWFzc2VydCgidW1rYS0xODgiLCBh
dG9tICE9IE5VTEwpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisKKwkv
KiBSZW1vdmUgZnJvbSB0aGUgdHhuX21ncidzIGF0b20gbGlzdCAqLworCWFzc2VydF9zcGluX2xv
Y2tlZCgmKG1nci0+dG1ncl9sb2NrKSk7CisJbWdyLT5hdG9tX2NvdW50IC09IDE7CisJbGlzdF9k
ZWxfaW5pdCgmYXRvbS0+YXRvbV9saW5rKTsKKworCS8qIENsZWFuIHRoZSBhdG9tICovCisJYXNz
ZXJ0KCJqbWFjZC0xNiIsCisJICAgICAgIChhdG9tLT5zdGFnZSA9PSBBU1RBR0VfSU5WQUxJRCB8
fCBhdG9tLT5zdGFnZSA9PSBBU1RBR0VfRE9ORSkpOworCWF0b20tPnN0YWdlID0gQVNUQUdFX0ZS
RUU7CisKKwlibG9ja25yX3NldF9kZXN0cm95KCZhdG9tLT53YW5kZXJlZF9tYXApOworCisJYXRv
bV9kc2V0X2Rlc3Ryb3koYXRvbSk7CisKKwlhc3NlcnQoImptYWNkLTE2IiwgYXRvbV9pc2NsZWFu
KGF0b20pKTsKKworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisKKwlrbWVtX2NhY2hlX2ZyZWUo
X2F0b21fc2xhYiwgYXRvbSk7Cit9CisKK3N0YXRpYyBpbnQgYXRvbV9pc19kb3RhcmQoY29uc3Qg
dHhuX2F0b20gKiBhdG9tKQoreworCXJldHVybiB0aW1lX2FmdGVyKGppZmZpZXMsIGF0b20tPnN0
YXJ0X3RpbWUgKworCQkJICBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCktPnRtZ3IuYXRvbV9t
YXhfYWdlKTsKK30KKworc3RhdGljIGludCBhdG9tX2Nhbl9iZV9jb21taXR0ZWQodHhuX2F0b20g
KiBhdG9tKQoreworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisJYXNzZXJ0
KCJ6YW0tODg1IiwgYXRvbS0+dHhuaF9jb3VudCA+IGF0b20tPm5yX3dhaXRlcnMpOworCXJldHVy
biBhdG9tLT50eG5oX2NvdW50ID09IGF0b20tPm5yX3dhaXRlcnMgKyAxOworfQorCisvKiBSZXR1
cm4gdHJ1ZSBpZiBhbiBhdG9tIHNob3VsZCBjb21taXQgbm93LiAgVGhpcyBpcyBkZXRlcm1pbmVk
IGJ5IGFnaW5nLCBhdG9tCisgICBzaXplIG9yIGF0b20gZmxhZ3MuICovCitzdGF0aWMgaW50IGF0
b21fc2hvdWxkX2NvbW1pdChjb25zdCB0eG5fYXRvbSAqIGF0b20pCit7CisJYXNzZXJ0KCJ1bWth
LTE4OSIsIGF0b20gIT0gTlVMTCk7CisJcmV0dXJuCisJICAgIChhdG9tLT5mbGFncyAmIEFUT01f
Rk9SQ0VfQ09NTUlUKSB8fAorCSAgICAoKHVuc2lnbmVkKWF0b21fcG9pbnRlcl9jb3VudChhdG9t
KSA+CisJICAgICBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCktPnRtZ3IuYXRvbV9tYXhfc2l6
ZSkKKwkgICAgfHwgYXRvbV9pc19kb3RhcmQoYXRvbSk7Cit9CisKKy8qIHJldHVybiAxIGlmIGN1
cnJlbnQgYXRvbSBleGlzdHMgYW5kIHJlcXVpcmVzIGNvbW1pdC4gKi8KK2ludCBjdXJyZW50X2F0
b21fc2hvdWxkX2NvbW1pdCh2b2lkKQoreworCXR4bl9hdG9tICphdG9tOworCWludCByZXN1bHQg
PSAwOworCisJYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkX25vY2hlY2soKTsKKwlpZiAo
YXRvbSkgeworCQlyZXN1bHQgPSBhdG9tX3Nob3VsZF9jb21taXQoYXRvbSk7CisJCXNwaW5fdW5s
b2NrX2F0b20oYXRvbSk7CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKK3N0YXRpYyBpbnQgYXRv
bV9zaG91bGRfY29tbWl0X2FzYXAoY29uc3QgdHhuX2F0b20gKiBhdG9tKQoreworCXVuc2lnbmVk
IGludCBjYXB0dXJlZDsKKwl1bnNpZ25lZCBpbnQgcGlubmVkcGFnZXM7CisKKwlhc3NlcnQoIm5p
a2l0YS0zMzA5IiwgYXRvbSAhPSBOVUxMKTsKKworCWNhcHR1cmVkID0gKHVuc2lnbmVkKWF0b20t
PmNhcHR1cmVfY291bnQ7CisJcGlubmVkcGFnZXMgPSAoY2FwdHVyZWQgPj4gUEFHRV9TSElGVCkg
KiBzaXplb2Yoem5vZGUpOworCisJcmV0dXJuIChwaW5uZWRwYWdlcyA+ICh0b3RhbHJhbV9wYWdl
cygpID4+IDMpKSB8fCAoYXRvbS0+Zmx1c2hlZCA+IDEwMCk7Cit9CisKK3N0YXRpYyBqbm9kZSAq
ZmluZF9maXJzdF9kaXJ0eV9pbl9saXN0KHN0cnVjdCBsaXN0X2hlYWQgKmhlYWQsIGludCBmbGFn
cykKK3sKKwlqbm9kZSAqZmlyc3RfZGlydHk7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGZpcnN0
X2RpcnR5LCBoZWFkLCBjYXB0dXJlX2xpbmspIHsKKwkJaWYgKCEoZmxhZ3MgJiBKTk9ERV9GTFVT
SF9DT01NSVQpKSB7CisJCQkvKgorCQkJICogc2tpcCBqbm9kZXMgd2hpY2ggImhlYXJkIGJhbnNo
ZWUiIG9yIGhhdmluZyBhY3RpdmUKKwkJCSAqIEkvTworCQkJICovCisJCQlpZiAoSkZfSVNTRVQo
Zmlyc3RfZGlydHksIEpOT0RFX0hFQVJEX0JBTlNIRUUpIHx8CisJCQkgICAgSkZfSVNTRVQoZmly
c3RfZGlydHksIEpOT0RFX1dSSVRFQkFDSykpCisJCQkJY29udGludWU7CisJCX0KKwkJcmV0dXJu
IGZpcnN0X2RpcnR5OworCX0KKwlyZXR1cm4gTlVMTDsKK30KKworLyogR2V0IGZpcnN0IGRpcnR5
IG5vZGUgZnJvbSB0aGUgYXRvbSdzIGRpcnR5X25vZGVzW25dIGxpc3RzOyByZXR1cm4gTlVMTCBp
ZiBhdG9tIGhhcyBubyBkaXJ0eQorICAgbm9kZXMgb24gYXRvbSdzIGxpc3RzICovCitqbm9kZSAq
ZmluZF9maXJzdF9kaXJ0eV9qbm9kZSh0eG5fYXRvbSAqIGF0b20sIGludCBmbGFncykKK3sKKwlq
bm9kZSAqZmlyc3RfZGlydHk7CisJdHJlZV9sZXZlbCBsZXZlbDsKKworCWFzc2VydF9zcGluX2xv
Y2tlZCgmKGF0b20tPmFsb2NrKSk7CisKKwkvKiBUaGUgZmx1c2ggc3RhcnRzIGZyb20gTEVBRl9M
RVZFTCAoPTEpLiAqLworCWZvciAobGV2ZWwgPSAxOyBsZXZlbCA8IFJFQUxfTUFYX1pUUkVFX0hF
SUdIVCArIDE7IGxldmVsICs9IDEpIHsKKwkJaWYgKGxpc3RfZW1wdHlfY2FyZWZ1bChBVE9NX0RJ
UlRZX0xJU1QoYXRvbSwgbGV2ZWwpKSkKKwkJCWNvbnRpbnVlOworCisJCWZpcnN0X2RpcnR5ID0K
KwkJICAgIGZpbmRfZmlyc3RfZGlydHlfaW5fbGlzdChBVE9NX0RJUlRZX0xJU1QoYXRvbSwgbGV2
ZWwpLAorCQkJCQkgICAgIGZsYWdzKTsKKwkJaWYgKGZpcnN0X2RpcnR5KQorCQkJcmV0dXJuIGZp
cnN0X2RpcnR5OworCX0KKworCS8qIHpub2RlLWFib3ZlLXJvb3QgaXMgb24gdGhlIGxpc3QgIzAu
ICovCisJcmV0dXJuIGZpbmRfZmlyc3RfZGlydHlfaW5fbGlzdChBVE9NX0RJUlRZX0xJU1QoYXRv
bSwgMCksIGZsYWdzKTsKK30KKworc3RhdGljIHZvaWQgZGlzcGF0Y2hfd2JfbGlzdCh0eG5fYXRv
bSAqIGF0b20sIGZsdXNoX3F1ZXVlX3QgKiBmcSkKK3sKKwlqbm9kZSAqY3VyOworCisJYXNzZXJ0
KCJ6YW0tOTA1IiwgYXRvbV9pc19wcm90ZWN0ZWQoYXRvbSkpOworCisJY3VyID0gbGlzdF9lbnRy
eShBVE9NX1dCX0xJU1QoYXRvbSktPm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOworCXdoaWxl
IChBVE9NX1dCX0xJU1QoYXRvbSkgIT0gJmN1ci0+Y2FwdHVyZV9saW5rKSB7CisJCWpub2RlICpu
ZXh0ID0gbGlzdF9lbnRyeShjdXItPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9s
aW5rKTsKKworCQlzcGluX2xvY2tfam5vZGUoY3VyKTsKKwkJaWYgKCFKRl9JU1NFVChjdXIsIEpO
T0RFX1dSSVRFQkFDSykpIHsKKwkJCWlmIChKRl9JU1NFVChjdXIsIEpOT0RFX0RJUlRZKSkgewor
CQkJCXF1ZXVlX2pub2RlKGZxLCBjdXIpOworCQkJfSBlbHNlIHsKKwkJCQkvKiBtb3ZlIGpub2Rl
IHRvIGF0b20ncyBjbGVhbiBsaXN0ICovCisJCQkJbGlzdF9tb3ZlX3RhaWwoJmN1ci0+Y2FwdHVy
ZV9saW5rLAorCQkJCQkgICAgICBBVE9NX0NMRUFOX0xJU1QoYXRvbSkpOworCQkJfQorCQl9CisJ
CXNwaW5fdW5sb2NrX2pub2RlKGN1cik7CisKKwkJY3VyID0gbmV4dDsKKwl9Cit9CisKKy8qIFNj
YW4gY3VycmVudCBhdG9tLT53cml0ZWJhY2tfbm9kZXMgbGlzdCwgcmUtc3VibWl0IGRpcnR5IGFu
ZCAhd3JpdGViYWNrCisgKiBqbm9kZXMgdG8gZGlzay4gKi8KK3N0YXRpYyBpbnQgc3VibWl0X3di
X2xpc3Qodm9pZCkKK3sKKwlpbnQgcmV0OworCWZsdXNoX3F1ZXVlX3QgKmZxOworCisJZnEgPSBn
ZXRfZnFfZm9yX2N1cnJlbnRfYXRvbSgpOworCWlmIChJU19FUlIoZnEpKQorCQlyZXR1cm4gUFRS
X0VSUihmcSk7CisKKwlkaXNwYXRjaF93Yl9saXN0KGZxLT5hdG9tLCBmcSk7CisJc3Bpbl91bmxv
Y2tfYXRvbShmcS0+YXRvbSk7CisKKwlyZXQgPSByZWlzZXI0X3dyaXRlX2ZxKGZxLCBOVUxMLCAx
KTsKKwlyZWlzZXI0X2ZxX3B1dChmcSk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBXYWl0IGNv
bXBsZXRpb24gb2YgYWxsIHdyaXRlcywgcmUtc3VibWl0IGF0b20gd3JpdGViYWNrIGxpc3QgaWYg
bmVlZGVkLiAqLworc3RhdGljIGludCBjdXJyZW50X2F0b21fY29tcGxldGVfd3JpdGVzKHZvaWQp
Cit7CisJaW50IHJldDsKKworCS8qIEVhY2ggam5vZGUgZnJvbSB0aGF0IGxpc3Qgd2FzIG1vZGlm
aWVkIGFuZCBkaXJ0aWVkIHdoZW4gaXQgaGFkIGkvbworCSAqIHJlcXVlc3QgcnVubmluZyBhbHJl
YWR5LiBBZnRlciBpL28gY29tcGxldGlvbiB3ZSBoYXZlIHRvIHJlc3VibWl0CisJICogdGhlbSB0
byBkaXNrIGFnYWluLiovCisJcmV0ID0gc3VibWl0X3diX2xpc3QoKTsKKwlpZiAocmV0IDwgMCkK
KwkJcmV0dXJuIHJldDsKKworCS8qIFdhaXQgYWxsIGkvbyBjb21wbGV0aW9uICovCisJcmV0ID0g
Y3VycmVudF9hdG9tX2ZpbmlzaF9hbGxfZnEoKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0Owor
CisJLyogU2NhbiB3YiBsaXN0IGFnYWluOyBhbGwgaS9vIHNob3VsZCBiZSBjb21wbGV0ZWQsIHdl
IHJlLXN1Ym1pdCBkaXJ0eQorCSAqIG5vZGVzIHRvIGRpc2sgKi8KKwlyZXQgPSBzdWJtaXRfd2Jf
bGlzdCgpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJLyogV2FpdCBhbGwgbm9k
ZXMgd2UganVzdCBzdWJtaXR0ZWQgKi8KKwlyZXR1cm4gY3VycmVudF9hdG9tX2ZpbmlzaF9hbGxf
ZnEoKTsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworc3RhdGljIHZvaWQgcmVpc2VyNF9pbmZv
X2F0b20oY29uc3QgY2hhciAqcHJlZml4LCBjb25zdCB0eG5fYXRvbSAqIGF0b20pCit7CisJaWYg
KGF0b20gPT0gTlVMTCkgeworCQlwcmludGsoIiVzOiBubyBhdG9tXG4iLCBwcmVmaXgpOworCQly
ZXR1cm47CisJfQorCisJcHJpbnRrKCIlczogcmVmY291bnQ6ICVpIGlkOiAlaSBmbGFnczogJXgg
dHhuaF9jb3VudDogJWkiCisJICAgICAgICIgY2FwdHVyZV9jb3VudDogJWkgc3RhZ2U6ICV4IHN0
YXJ0OiAlbHUsIGZsdXNoZWQ6ICVpXG4iLCBwcmVmaXgsCisJICAgICAgIGF0b21pY19yZWFkKCZh
dG9tLT5yZWZjb3VudCksIGF0b20tPmF0b21faWQsIGF0b20tPmZsYWdzLAorCSAgICAgICBhdG9t
LT50eG5oX2NvdW50LCBhdG9tLT5jYXB0dXJlX2NvdW50LCBhdG9tLT5zdGFnZSwKKwkgICAgICAg
YXRvbS0+c3RhcnRfdGltZSwgYXRvbS0+Zmx1c2hlZCk7Cit9CisKKyNlbHNlICAvKiAgUkVJU0VS
NF9ERUJVRyAgKi8KKworc3RhdGljIGlubGluZSB2b2lkIHJlaXNlcjRfaW5mb19hdG9tKGNvbnN0
IGNoYXIgKnByZWZpeCwgY29uc3QgdHhuX2F0b20gKiBhdG9tKSB7fQorCisjZW5kaWYgIC8qICBS
RUlTRVI0X0RFQlVHICAqLworCisjZGVmaW5lIFRPT01BTllGTFVTSEVTICgxIDw8IDEzKQorCisv
KiBDYWxsZWQgd2l0aCB0aGUgYXRvbSBsb2NrZWQgYW5kIG5vIG9wZW4gImFjdGl2ZSIgdHJhbnNh
Y3Rpb24gaGFuZGxlcnMgZXhjZXB0CisgICBvdXJzLCB0aGlzIGZ1bmN0aW9uIGNhbGxzIGZsdXNo
X2N1cnJlbnRfYXRvbSgpIHVudGlsIGFsbCBkaXJ0eSBub2RlcyBhcmUKKyAgIHByb2Nlc3NlZC4g
IFRoZW4gaXQgaW5pdGlhdGVzIGNvbW1pdCBwcm9jZXNzaW5nLgorCisgICBDYWxsZWQgYnkgdGhl
IHNpbmdsZSByZW1haW5pbmcgb3BlbiAiYWN0aXZlIiB0eG5oLCB3aGljaCBpcyBjbG9zaW5nLiBP
dGhlcgorICAgb3BlbiB0eG5ocyBiZWxvbmcgdG8gcHJvY2Vzc2VzIHdoaWNoIHdhaXQgYXRvbSBj
b21taXQgaW4gY29tbWl0X3R4bmgoKQorICAgcm91dGluZS4gVGhleSBhcmUgY291bnRlZCBhcyAi
d2FpdGVycyIgaW4gYXRvbS0+bnJfd2FpdGVycy4gIFRoZXJlZm9yZSBhcworICAgbG9uZyBhcyB3
ZSBob2xkIHRoZSBhdG9tIGxvY2sgbm9uZSBvZiB0aGUgam5vZGVzIGNhbiBiZSBjYXB0dXJlZCBh
bmQvb3IKKyAgIGxvY2tlZC4KKworICAgUmV0dXJuIHZhbHVlIGlzIGFuIGVycm9yIGNvZGUgaWYg
Y29tbWl0IGZhaWxzLgorKi8KK3N0YXRpYyBpbnQgY29tbWl0X2N1cnJlbnRfYXRvbShsb25nICpu
cl9zdWJtaXR0ZWQsIHR4bl9hdG9tICoqIGF0b20pCit7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2Rh
dGEgKnNiaW5mbyA9IGdldF9jdXJyZW50X3N1cGVyX3ByaXZhdGUoKTsKKwlsb25nIHJldCA9IDA7
CisJLyogaG93IG1hbnkgdGltZXMgam5vZGVfZmx1c2goKSB3YXMgY2FsbGVkIGFzIGEgcGFydCBv
ZiBhdHRlbXB0IHRvCisJICogY29tbWl0IHRoaXMgYXRvbS4gKi8KKwlpbnQgZmx1c2hpdGVyczsK
KworCWFzc2VydCgiemFtLTg4OCIsIGF0b20gIT0gTlVMTCAmJiAqYXRvbSAhPSBOVUxMKTsKKwlh
c3NlcnRfc3Bpbl9sb2NrZWQoJigoKmF0b20pLT5hbG9jaykpOworCWFzc2VydCgiemFtLTg4NyIs
IGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnMtPmF0b20gPT0gKmF0b20pOworCWFzc2VydCgi
am1hY2QtMTUxIiwgYXRvbV9pc29wZW4oKmF0b20pKTsKKworCWFzc2VydCgibmlraXRhLTMxODQi
LAorCSAgICAgICBnZXRfY3VycmVudF9zdXBlcl9wcml2YXRlKCktPmRlbGV0ZV9tdXRleF9vd25l
ciAhPSBjdXJyZW50KTsKKworCWZvciAoZmx1c2hpdGVycyA9IDA7OyArK2ZsdXNoaXRlcnMpIHsK
KwkJcmV0ID0KKwkJICAgIGZsdXNoX2N1cnJlbnRfYXRvbShKTk9ERV9GTFVTSF9XUklURV9CTE9D
S1MgfAorCQkJCSAgICAgICBKTk9ERV9GTFVTSF9DT01NSVQsCisJCQkJICAgICAgIExPTkdfTUFY
IC8qIG5yX3RvX3dyaXRlICovICwKKwkJCQkgICAgICAgbnJfc3VibWl0dGVkLCBhdG9tLCBOVUxM
KTsKKwkJaWYgKHJldCAhPSAtRV9SRVBFQVQpCisJCQlicmVhazsKKworCQkvKiBpZiBhdG9tJ3Mg
ZGlydHkgbGlzdCBjb250YWlucyBvbmUgem5vZGUgd2hpY2ggaXMKKwkJICAgSEVBUkRfQkFOU0hF
RSBhbmQgaXMgbG9ja2VkIHdlIGhhdmUgdG8gYWxsb3cgbG9jayBvd25lciB0bworCQkgICBjb250
aW51ZSBhbmQgdW5jYXB0dXJlIHRoYXQgem5vZGUgKi8KKwkJcmVpc2VyNF9wcmVlbXB0X3BvaW50
KCk7CisKKwkJKmF0b20gPSBnZXRfY3VycmVudF9hdG9tX2xvY2tlZCgpOworCQlpZiAoZmx1c2hp
dGVycyA+IFRPT01BTllGTFVTSEVTICYmIElTX1BPVyhmbHVzaGl0ZXJzKSkgeworCQkJd2Fybmlu
ZygibmlraXRhLTMxNzYiLAorCQkJCSJGbHVzaGluZyBsaWtlIG1hZDogJWkiLCBmbHVzaGl0ZXJz
KTsKKwkJCXJlaXNlcjRfaW5mb19hdG9tKCJhdG9tIiwgKmF0b20pOworCQkJREVCVUdPTihmbHVz
aGl0ZXJzID4gKDEgPDwgMjApKTsKKwkJfQorCX0KKworCWlmIChyZXQpCisJCXJldHVybiByZXQ7
CisKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJigoKmF0b20pLT5hbG9jaykpOworCisJaWYgKCFhdG9t
X2Nhbl9iZV9jb21taXR0ZWQoKmF0b20pKSB7CisJCXNwaW5fdW5sb2NrX2F0b20oKmF0b20pOwor
CQlyZXR1cm4gUkVURVJSKC1FX1JFUEVBVCk7CisJfQorCisJaWYgKCgqYXRvbSktPmNhcHR1cmVf
Y291bnQgPT0gMCkKKwkJZ290byBkb25lOworCisJLyogVXAgdG8gdGhpcyBwb2ludCB3ZSBoYXZl
IGJlZW4gZmx1c2hpbmcgYW5kIGFmdGVyIGZsdXNoIGlzIGNhbGxlZCB3ZQorCSAgIHJldHVybiAt
RV9SRVBFQVQuICBOb3cgd2UgY2FuIGNvbW1pdC4gIFdlIGNhbm5vdCByZXR1cm4gLUVfUkVQRUFU
CisJICAgYXQgdGhpcyBwb2ludCwgY29tbWl0IHNob3VsZCBiZSBzdWNjZXNzZnVsLiAqLworCXJl
aXNlcjRfYXRvbV9zZXRfc3RhZ2UoKmF0b20sIEFTVEFHRV9QUkVfQ09NTUlUKTsKKwlPTl9ERUJV
RygoKCphdG9tKS0+Y29tbWl0dGVyID0gY3VycmVudCkpOworCXNwaW5fdW5sb2NrX2F0b20oKmF0
b20pOworCisJcmV0ID0gY3VycmVudF9hdG9tX2NvbXBsZXRlX3dyaXRlcygpOworCWlmIChyZXQp
CisJCXJldHVybiByZXQ7CisKKwlhc3NlcnQoInphbS05MDYiLCBsaXN0X2VtcHR5KEFUT01fV0Jf
TElTVCgqYXRvbSkpKTsKKworCS8qIGlzb2xhdGUgY3JpdGljYWwgY29kZSBwYXRoIHdoaWNoIHNo
b3VsZCBiZSBleGVjdXRlZCBieSBvbmx5IG9uZQorCSAqIHRocmVhZCB1c2luZyB0bWdyIG11dGV4
ICovCisJbXV0ZXhfbG9jaygmc2JpbmZvLT50bWdyLmNvbW1pdF9tdXRleCk7CisKKwlyZXQgPSBy
ZWlzZXI0X3dyaXRlX2xvZ3MobnJfc3VibWl0dGVkKTsKKwlpZiAocmV0IDwgMCkKKwkJcmVpc2Vy
NF9wYW5pYygiemFtLTU5NyIsICJ3cml0ZSBsb2cgZmFpbGVkICglbGQpXG4iLCByZXQpOworCisJ
LyogVGhlIGF0b20tPm92cndyX25vZGVzIGxpc3QgaXMgcHJvY2Vzc2VkIHVuZGVyIGNvbW1pdCBt
dXRleCBoZWxkCisJICAgYmVjYXVzZSBvZiBiaXRtYXAgbm9kZXMgd2hpY2ggYXJlIGNhcHR1cmVk
IGJ5IHNwZWNpYWwgd2F5IGluCisJICAgcmVpc2VyNF9wcmVfY29tbWl0X2hvb2tfYml0bWFwKCks
IHRoYXQgd2F5IGRvZXMgbm90IGluY2x1ZGUKKwkgICBjYXB0dXJlX2Z1c2Vfd2FpdCgpIGFzIGEg
Y2FwdHVyaW5nIG9mIG90aGVyIG5vZGVzIGRvZXMgLS0gdGhlIGNvbW1pdAorCSAgIG11dGV4IGlz
IHVzZWQgZm9yIHRyYW5zYWN0aW9uIGlzb2xhdGlvbiBpbnN0ZWFkLiAqLworCXJlaXNlcjRfaW52
YWxpZGF0ZV9saXN0KEFUT01fT1ZSV1JfTElTVCgqYXRvbSkpOworCW11dGV4X3VubG9jaygmc2Jp
bmZvLT50bWdyLmNvbW1pdF9tdXRleCk7CisKKwlyZWlzZXI0X2ludmFsaWRhdGVfbGlzdChBVE9N
X0NMRUFOX0xJU1QoKmF0b20pKTsKKwlyZWlzZXI0X2ludmFsaWRhdGVfbGlzdChBVE9NX1dCX0xJ
U1QoKmF0b20pKTsKKwlhc3NlcnQoInphbS05MjciLCBsaXN0X2VtcHR5KCYoKmF0b20pLT5pbm9k
ZXMpKTsKKworCXNwaW5fbG9ja19hdG9tKCphdG9tKTsKKyBkb25lOgorCXJlaXNlcjRfYXRvbV9z
ZXRfc3RhZ2UoKmF0b20sIEFTVEFHRV9ET05FKTsKKwlPTl9ERUJVRygoKmF0b20pLT5jb21taXR0
ZXIgPSBOVUxMKTsKKworCS8qIEF0b20ncyBzdGF0ZSBjaGFuZ2VzLCBzbyB3YWtlIHVwIGV2ZXJ5
Ym9keSB3YWl0aW5nIGZvciB0aGlzCisJICAgZXZlbnQuICovCisJd2FrZXVwX2F0b21fd2FpdGlu
Z19saXN0KCphdG9tKTsKKworCS8qIERlY3JlbWVudCB0aGUgInVudGlsIGNvbW1pdCIgcmVmZXJl
bmNlLCBhdCBsZWFzdCBvbmUgdHhuaCAodGhlIGNhbGxlcikgaXMKKwkgICBzdGlsbCBvcGVuLiAq
LworCWF0b21pY19kZWMoJigqYXRvbSktPnJlZmNvdW50KTsKKworCWFzc2VydCgiam1hY2QtMTA3
MCIsIGF0b21pY19yZWFkKCYoKmF0b20pLT5yZWZjb3VudCkgPiAwKTsKKwlhc3NlcnQoImptYWNk
LTEwNjIiLCAoKmF0b20pLT5jYXB0dXJlX2NvdW50ID09IDApOworCUJVR19PTigoKmF0b20pLT5j
YXB0dXJlX2NvdW50ICE9IDApOworCWFzc2VydF9zcGluX2xvY2tlZCgmKCgqYXRvbSktPmFsb2Nr
KSk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBUWE5fVFhOSCAqLworCisvKioKKyAqIGZvcmNl
X2NvbW1pdF9hdG9tIC0gY29tbWl0IGN1cnJlbnQgYXRvbSBhbmQgd2FpdCBjb21taXQgY29tcGxl
dGlvbgorICogQHR4bmg6CisgKgorICogQ29tbWl0cyBjdXJyZW50IGF0b20gYW5kIHdhaXQgY29t
bWl0IGNvbXBsZXRpb247IGN1cnJlbnQgYXRvbSBhbmQgQHR4bmggaGF2ZQorICogdG8gYmUgc3Bp
bmxvY2tlZCBiZWZvcmUgY2FsbCwgdGhpcyBmdW5jdGlvbiB1bmxvY2tzIHRoZW0gb24gZXhpdC4K
KyAqLworaW50IGZvcmNlX2NvbW1pdF9hdG9tKHR4bl9oYW5kbGUgKnR4bmgpCit7CisJdHhuX2F0
b20gKmF0b207CisKKwlhc3NlcnQoInphbS04MzciLCB0eG5oICE9IE5VTEwpOworCWFzc2VydF9z
cGluX2xvY2tlZCgmKHR4bmgtPmhsb2NrKSk7CisJYXNzZXJ0KCJuaWtpdGEtMjk2NiIsIGxvY2tf
c3RhY2tfaXNjbGVhbihnZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKworCWF0b20gPSB0eG5o
LT5hdG9tOworCisJYXNzZXJ0KCJ6YW0tODM0IiwgYXRvbSAhPSBOVUxMKTsKKwlhc3NlcnRfc3Bp
bl9sb2NrZWQoJihhdG9tLT5hbG9jaykpOworCisJLyoKKwkgKiBTZXQgZmxhZ3MgZm9yIGF0b20g
YW5kIHR4bmg6IGZvcmNpbmcgYXRvbSBjb21taXQgYW5kIHdhaXRpbmcgZm9yCisJICogY29tbWl0
IGNvbXBsZXRpb24KKwkgKi8KKwl0eG5oLT5mbGFncyB8PSBUWE5IX1dBSVRfQ09NTUlUOworCWF0
b20tPmZsYWdzIHw9IEFUT01fRk9SQ0VfQ09NTUlUOworCisJc3Bpbl91bmxvY2tfdHhuaCh0eG5o
KTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworCisJLyogY29tbWl0IGlzIGhlcmUgKi8KKwly
ZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQoKTsKKwlyZXR1cm4gMDsKK30KKworLyogQ2FsbGVk
IHRvIGZvcmNlIGNvbW1pdCBvZiBhbnkgb3V0c3RhbmRpbmcgYXRvbXMuICBAY29tbWl0X2FsbF9h
dG9tcyBjb250cm9scworICogc2hvdWxkIHdlIGNvbW1pdCBhbGwgYXRvbXMgaW5jbHVkaW5nIG5l
dyBvbmVzIHdoaWNoIGFyZSBjcmVhdGVkIGFmdGVyIHRoaXMKKyAqIGZ1bmN0aW9ucyBpcyBjYWxs
ZWQuICovCitpbnQgdHhubWdyX2ZvcmNlX2NvbW1pdF9hbGwoc3RydWN0IHN1cGVyX2Jsb2NrICpz
dXBlciwgaW50IGNvbW1pdF9hbGxfYXRvbXMpCit7CisJaW50IHJldDsKKwl0eG5fYXRvbSAqYXRv
bTsKKwl0eG5fbWdyICptZ3I7CisJdHhuX2hhbmRsZSAqdHhuaDsKKwl1bnNpZ25lZCBsb25nIHN0
YXJ0X3RpbWUgPSBqaWZmaWVzOworCXJlaXNlcjRfY29udGV4dCAqY3R4ID0gZ2V0X2N1cnJlbnRf
Y29udGV4dCgpOworCisJYXNzZXJ0KCJuaWtpdGEtMjk2NSIsIGxvY2tfc3RhY2tfaXNjbGVhbihn
ZXRfY3VycmVudF9sb2NrX3N0YWNrKCkpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDU4IiwgcmVpc2Vy
NF9jb21taXRfY2hlY2tfbG9ja3MoKSk7CisKKwlyZWlzZXI0X3R4bl9yZXN0YXJ0X2N1cnJlbnQo
KTsKKworCW1nciA9ICZnZXRfc3VwZXJfcHJpdmF0ZShzdXBlciktPnRtZ3I7CisKKwl0eG5oID0g
Y3R4LT50cmFuczsKKworICAgICAgYWdhaW46CisKKwlzcGluX2xvY2tfdHhubWdyKG1ncik7CisK
KwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGF0b20sICZtZ3ItPmF0b21zX2xpc3QsIGF0b21fbGluaykg
eworCQlzcGluX2xvY2tfYXRvbShhdG9tKTsKKworCQkvKiBDb21taXQgYW55IGF0b20gd2hpY2gg
Y2FuIGJlIGNvbW1pdHRlZC4gIElmIEBjb21taXRfbmV3X2F0b21zCisJCSAqIGlzIG5vdCBzZXQg
d2UgY29tbWl0IG9ubHkgYXRvbXMgd2hpY2ggd2VyZSBjcmVhdGVkIGJlZm9yZQorCQkgKiB0aGlz
IGNhbGwgaXMgc3RhcnRlZC4gKi8KKwkJaWYgKGNvbW1pdF9hbGxfYXRvbXMKKwkJICAgIHx8IHRp
bWVfYmVmb3JlX2VxKGF0b20tPnN0YXJ0X3RpbWUsIHN0YXJ0X3RpbWUpKSB7CisJCQlpZiAoYXRv
bS0+c3RhZ2UgPD0gQVNUQUdFX1BPU1RfQ09NTUlUKSB7CisJCQkJc3Bpbl91bmxvY2tfdHhubWdy
KG1ncik7CisKKwkJCQlpZiAoYXRvbS0+c3RhZ2UgPCBBU1RBR0VfUFJFX0NPTU1JVCkgeworCQkJ
CQlzcGluX2xvY2tfdHhuaCh0eG5oKTsKKwkJCQkJLyogQWRkIGZvcmNlLWNvbnRleHQgdHhuaCAq
LworCQkJCQljYXB0dXJlX2Fzc2lnbl90eG5oX25vbG9jayhhdG9tLCB0eG5oKTsKKwkJCQkJcmV0
ID0gZm9yY2VfY29tbWl0X2F0b20odHhuaCk7CisJCQkJCWlmIChyZXQpCisJCQkJCQlyZXR1cm4g
cmV0OworCQkJCX0gZWxzZQorCQkJCQkvKiB3YWl0IGF0b20gY29tbWl0ICovCisJCQkJCXJlaXNl
cjRfYXRvbV93YWl0X2V2ZW50KGF0b20pOworCisJCQkJZ290byBhZ2FpbjsKKwkJCX0KKwkJfQor
CisJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJfQorCisjaWYgUkVJU0VSNF9ERUJVRworCWlm
IChjb21taXRfYWxsX2F0b21zKSB7CisJCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm8g
PSBnZXRfc3VwZXJfcHJpdmF0ZShzdXBlcik7CisJCXNwaW5fbG9ja19yZWlzZXI0X3N1cGVyKHNi
aW5mbyk7CisJCWFzc2VydCgiemFtLTgxMyIsCisJCSAgICAgICBzYmluZm8tPmJsb2Nrc19mYWtl
X2FsbG9jYXRlZF91bmZvcm1hdHRlZCA9PSAwKTsKKwkJYXNzZXJ0KCJ6YW0tODEyIiwgc2JpbmZv
LT5ibG9ja3NfZmFrZV9hbGxvY2F0ZWQgPT0gMCk7CisJCXNwaW5fdW5sb2NrX3JlaXNlcjRfc3Vw
ZXIoc2JpbmZvKTsKKwl9CisjZW5kaWYKKworCXNwaW5fdW5sb2NrX3R4bm1ncihtZ3IpOworCisJ
cmV0dXJuIDA7Cit9CisKKy8qIGNoZWNrIHdoZXRoZXIgY29tbWl0X3NvbWVfYXRvbXMoKSBjYW4g
Y29tbWl0IEBhdG9tLiBMb2NraW5nIGlzIHVwIHRvIHRoZQorICogY2FsbGVyICovCitzdGF0aWMg
aW50IGF0b21faXNfY29tbWl0dGFibGUodHhuX2F0b20gKiBhdG9tKQoreworCXJldHVybgorCSAg
ICBhdG9tLT5zdGFnZSA8IEFTVEFHRV9QUkVfQ09NTUlUICYmCisJICAgIGF0b20tPnR4bmhfY291
bnQgPT0gYXRvbS0+bnJfd2FpdGVycyAmJiBhdG9tX3Nob3VsZF9jb21taXQoYXRvbSk7Cit9CisK
Ky8qIGNhbGxlZCBwZXJpb2RpY2FsbHkgZnJvbSBrdHhubWdyZCB0byBjb21taXQgb2xkIGF0b21z
LiBSZWxlYXNlcyBrdHhubWdyZCBzcGluCisgKiBsb2NrIGF0IGV4aXQgKi8KK2ludCBjb21taXRf
c29tZV9hdG9tcyh0eG5fbWdyICogbWdyKQoreworCWludCByZXQgPSAwOworCXR4bl9hdG9tICph
dG9tOworCXR4bl9oYW5kbGUgKnR4bmg7CisJcmVpc2VyNF9jb250ZXh0ICpjdHg7CisJc3RydWN0
IGxpc3RfaGVhZCAqcG9zLCAqdG1wOworCisJY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgpOwor
CWFzc2VydCgibmlraXRhLTI0NDQiLCBjdHggIT0gTlVMTCk7CisKKwl0eG5oID0gY3R4LT50cmFu
czsKKwlzcGluX2xvY2tfdHhubWdyKG1ncik7CisKKwkvKgorCSAqIHRoaXMgaXMgdG8gYXZvaWQg
Z2NjIGNvbXBsYWluIHRoYXQgYXRvbSBtaWdodCBiZSB1c2VkCisJICogdW5pbml0aWFsaXplZAor
CSAqLworCWF0b20gPSBOVUxMOworCisJLyogbG9vayBmb3IgYXRvbSB0byBjb21taXQgKi8KKwls
aXN0X2Zvcl9lYWNoX3NhZmUocG9zLCB0bXAsICZtZ3ItPmF0b21zX2xpc3QpIHsKKwkJYXRvbSA9
IGxpc3RfZW50cnkocG9zLCB0eG5fYXRvbSwgYXRvbV9saW5rKTsKKwkJLyoKKwkJICogZmlyc3Qg
dGVzdCB3aXRob3V0IHRha2luZyBhdG9tIHNwaW4gbG9jaywgd2hldGhlciBpdCBpcworCQkgKiBl
bGlnaWJsZSBmb3IgY29tbWl0dGluZyBhdCBhbGwKKwkJICovCisJCWlmIChhdG9tX2lzX2NvbW1p
dHRhYmxlKGF0b20pKSB7CisJCQkvKiBub3csIHRha2Ugc3BpbiBsb2NrIGFuZCByZS1jaGVjayAq
LworCQkJc3Bpbl9sb2NrX2F0b20oYXRvbSk7CisJCQlpZiAoYXRvbV9pc19jb21taXR0YWJsZShh
dG9tKSkKKwkJCQlicmVhazsKKwkJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJCX0KKwl9CisK
KwlyZXQgPSAoJm1nci0+YXRvbXNfbGlzdCA9PSBwb3MpOworCXNwaW5fdW5sb2NrX3R4bm1nciht
Z3IpOworCisJaWYgKHJldCkgeworCQkvKiBub3RoaW5nIGZvdW5kICovCisJCXNwaW5fdW5sb2Nr
KCZtZ3ItPmRhZW1vbi0+Z3VhcmQpOworCQlyZXR1cm4gMDsKKwl9CisKKwlzcGluX2xvY2tfdHhu
aCh0eG5oKTsKKworCUJVR19PTihhdG9tID09IE5VTEwpOworCS8qIFNldCB0aGUgYXRvbSB0byBm
b3JjZSBjb21taXR0aW5nICovCisJYXRvbS0+ZmxhZ3MgfD0gQVRPTV9GT1JDRV9DT01NSVQ7CisK
KwkvKiBBZGQgZm9yY2UtY29udGV4dCB0eG5oICovCisJY2FwdHVyZV9hc3NpZ25fdHhuaF9ub2xv
Y2soYXRvbSwgdHhuaCk7CisKKwlzcGluX3VubG9ja190eG5oKHR4bmgpOworCXNwaW5fdW5sb2Nr
X2F0b20oYXRvbSk7CisKKwkvKiB3ZSBhcmUgYWJvdXQgdG8gcmVsZWFzZSBkYWVtb24gc3BpbiBs
b2NrLCBub3RpZnkgZGFlbW9uIGl0CisJICAgaGFzIHRvIHJlc2NhbiBhdG9tcyAqLworCW1nci0+
ZGFlbW9uLT5yZXNjYW4gPSAxOworCXNwaW5fdW5sb2NrKCZtZ3ItPmRhZW1vbi0+Z3VhcmQpOwor
CXJlaXNlcjRfdHhuX3Jlc3RhcnRfY3VycmVudCgpOworCXJldHVybiAwOworfQorCitzdGF0aWMg
aW50IHR4bl90cnlfdG9fZnVzZV9zbWFsbF9hdG9tKHR4bl9tZ3IgKiB0bWdyLCB0eG5fYXRvbSAq
IGF0b20pCit7CisJaW50IGF0b21fc3RhZ2U7CisJdHhuX2F0b20gKmF0b21fMjsKKwlpbnQgcmVw
ZWF0OworCisJYXNzZXJ0KCJ6YW0tMTA1MSIsIGF0b20tPnN0YWdlIDwgQVNUQUdFX1BSRV9DT01N
SVQpOworCisJYXRvbV9zdGFnZSA9IGF0b20tPnN0YWdlOworCXJlcGVhdCA9IDA7CisKKwlpZiAo
IXNwaW5fdHJ5bG9ja190eG5tZ3IodG1ncikpIHsKKwkJYXRvbWljX2luYygmYXRvbS0+cmVmY291
bnQpOworCQlzcGluX3VubG9ja19hdG9tKGF0b20pOworCQlzcGluX2xvY2tfdHhubWdyKHRtZ3Ip
OworCQlzcGluX2xvY2tfYXRvbShhdG9tKTsKKwkJcmVwZWF0ID0gMTsKKwkJaWYgKGF0b20tPnN0
YWdlICE9IGF0b21fc3RhZ2UpIHsKKwkJCXNwaW5fdW5sb2NrX3R4bm1ncih0bWdyKTsKKwkJCWF0
b21fZGVjX2FuZF91bmxvY2soYXRvbSk7CisJCQlyZXR1cm4gLUVfUkVQRUFUOworCQl9CisJCWF0
b21pY19kZWMoJmF0b20tPnJlZmNvdW50KTsKKwl9CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGF0
b21fMiwgJnRtZ3ItPmF0b21zX2xpc3QsIGF0b21fbGluaykgeworCQlpZiAoYXRvbSA9PSBhdG9t
XzIpCisJCQljb250aW51ZTsKKwkJLyoKKwkJICogaWYgdHJ5bG9jayBkb2VzIG5vdCBzdWNjZWVk
IHdlIGp1c3QgZG8gbm90IGZ1c2Ugd2l0aCB0aGF0CisJCSAqIGF0b20uCisJCSAqLworCQlpZiAo
c3Bpbl90cnlsb2NrX2F0b20oYXRvbV8yKSkgeworCQkJaWYgKGF0b21fMi0+c3RhZ2UgPCBBU1RB
R0VfUFJFX0NPTU1JVCkgeworCQkJCXNwaW5fdW5sb2NrX3R4bm1ncih0bWdyKTsKKwkJCQljYXB0
dXJlX2Z1c2VfaW50byhhdG9tXzIsIGF0b20pOworCQkJCS8qIGFsbCBsb2NrcyBhcmUgbG9zdCB3
ZSBjYW4gb25seSByZXBlYXQgaGVyZSAqLworCQkJCXJldHVybiAtRV9SRVBFQVQ7CisJCQl9CisJ
CQlzcGluX3VubG9ja19hdG9tKGF0b21fMik7CisJCX0KKwl9CisJYXRvbS0+ZmxhZ3MgfD0gQVRP
TV9DQU5DRUxfRlVTSU9OOworCXNwaW5fdW5sb2NrX3R4bm1ncih0bWdyKTsKKwlpZiAocmVwZWF0
KSB7CisJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJCXJldHVybiAtRV9SRVBFQVQ7CisJfQor
CXJldHVybiAwOworfQorCisvKiBDYWxscyBqbm9kZV9mbHVzaCBmb3IgY3VycmVudCBhdG9tIGlm
IGl0IGV4aXN0czsgaWYgbm90LCBqdXN0IHRha2UgYW5vdGhlcgorICAgYXRvbSBhbmQgY2FsbCBq
bm9kZV9mbHVzaCgpIGZvciBoaW0uICBJZiBjdXJyZW50IHRyYW5zYWN0aW9uIGhhbmRsZSBoYXMK
KyAgIGFscmVhZHkgYXNzaWduZWQgYXRvbSAoY3VycmVudCBhdG9tKSB3ZSBoYXZlIHRvIGNsb3Nl
IGN1cnJlbnQgdHJhbnNhY3Rpb24KKyAgIHByaW9yIHRvIHN3aXRjaCB0byBhbm90aGVyIGF0b20g
b3IgZG8gc29tZXRoaW5nIHdpdGggY3VycmVudCBhdG9tLiBUaGlzCisgICBjb2RlIHRyaWVzIHRv
IGZsdXNoIGN1cnJlbnQgYXRvbS4KKworICAgZmx1c2hfc29tZV9hdG9tKCkgaXMgY2FsbGVkIGFz
IHBhcnQgb2YgbWVtb3J5IGNsZWFyaW5nIHByb2Nlc3MuIEl0IGlzCisgICBpbnZva2VkIGZyb20g
YmFsYW5jZV9kaXJ0eV9wYWdlcygpLCBwZGZsdXNoZCwgYW5kIGVudGQuCisKKyAgIElmIHdlIGNh
biBmbHVzaCBubyBub2RlcywgYXRvbSBpcyBjb21taXR0ZWQsIGJlY2F1c2UgdGhpcyBmcmVlcyBt
ZW1vcnkuCisKKyAgIElmIGF0b20gaXMgdG9vIGxhcmdlIG9yIHRvbyBvbGQgaXQgaXMgY29tbWl0
dGVkIGFsc28uCisqLworaW50CitmbHVzaF9zb21lX2F0b20oam5vZGUgKiBzdGFydCwgbG9uZyAq
bnJfc3VibWl0dGVkLCBjb25zdCBzdHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKndiYywKKwkJaW50
IGZsYWdzKQoreworCXJlaXNlcjRfY29udGV4dCAqY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4dCgp
OworCXR4bl9tZ3IgKnRtZ3IgPSAmZ2V0X3N1cGVyX3ByaXZhdGUoY3R4LT5zdXBlciktPnRtZ3I7
CisJdHhuX2hhbmRsZSAqdHhuaCA9IGN0eC0+dHJhbnM7CisJdHhuX2F0b20gKmF0b207CisJaW50
IHJldDsKKworCUJVR19PTih3YmMtPm5yX3RvX3dyaXRlID09IDApOworCUJVR19PTigqbnJfc3Vi
bWl0dGVkICE9IDApOworCWFzc2VydCgiemFtLTEwNDIiLCB0eG5oICE9IE5VTEwpOworcmVwZWF0
OgorCWlmICh0eG5oLT5hdG9tID09IE5VTEwpIHsKKwkJLyogY3VycmVudCBhdG9tIGlzIG5vdCBh
dmFpbGFibGUsIHRha2UgZmlyc3QgZnJvbSB0eG5tZ3IgKi8KKwkJc3Bpbl9sb2NrX3R4bm1ncih0
bWdyKTsKKworCQkvKiB0cmF2ZXJzZSB0aGUgbGlzdCBvZiBhbGwgYXRvbXMgKi8KKwkJbGlzdF9m
b3JfZWFjaF9lbnRyeShhdG9tLCAmdG1nci0+YXRvbXNfbGlzdCwgYXRvbV9saW5rKSB7CisJCQkv
KiBsb2NrIGF0b20gYmVmb3JlIGNoZWNraW5nIGl0cyBzdGF0ZSAqLworCQkJc3Bpbl9sb2NrX2F0
b20oYXRvbSk7CisKKwkJCS8qCisJCQkgKiB3ZSBuZWVkIGFuIGF0b20gd2hpY2ggaXMgbm90IGJl
aW5nIGNvbW1pdHRlZCBhbmQKKwkJCSAqIHdoaWNoIGhhcyBubyBmbHVzaGVycyAoam5vZGVfZmx1
c2goKSBhZGQgb25lIGZsdXNoZXIKKwkJCSAqIGF0IHRoZSBiZWdpbm5pbmcgYW5kIHN1YnRyYWN0
IG9uZSBhdCB0aGUgZW5kKS4KKwkJCSAqLworCQkJaWYgKGF0b20tPnN0YWdlIDwgQVNUQUdFX1BS
RV9DT01NSVQgJiYKKwkJCSAgICBhdG9tLT5ucl9mbHVzaGVycyA9PSAwKSB7CisJCQkJc3Bpbl9s
b2NrX3R4bmgodHhuaCk7CisJCQkJY2FwdHVyZV9hc3NpZ25fdHhuaF9ub2xvY2soYXRvbSwgdHhu
aCk7CisJCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKworCQkJCWdvdG8gZm91bmQ7CisJCQl9
CisKKwkJCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJCX0KKworCQkvKgorCQkgKiBXcml0ZSB0
aHJvdHRsaW5nIGlzIGNhc2Ugb2Ygbm8gb25lIGF0b20gY2FuIGJlCisJCSAqIGZsdXNoZWQvY29t
bWl0dGVkLgorCQkgKi8KKwkJaWYgKCFjdXJyZW50X2lzX2ZsdXNoX2JkX3Rhc2soKSkgeworCQkJ
bGlzdF9mb3JfZWFjaF9lbnRyeShhdG9tLCAmdG1nci0+YXRvbXNfbGlzdCwgYXRvbV9saW5rKSB7
CisJCQkJc3Bpbl9sb2NrX2F0b20oYXRvbSk7CisJCQkJLyogUmVwZWF0IHRoZSBjaGVjayBmcm9t
IHRoZSBhYm92ZS4gKi8KKwkJCQlpZiAoYXRvbS0+c3RhZ2UgPCBBU1RBR0VfUFJFX0NPTU1JVAor
CQkJCSAgICAmJiBhdG9tLT5ucl9mbHVzaGVycyA9PSAwKSB7CisJCQkJCXNwaW5fbG9ja190eG5o
KHR4bmgpOworCQkJCQljYXB0dXJlX2Fzc2lnbl90eG5oX25vbG9jayhhdG9tLCB0eG5oKTsKKwkJ
CQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKworCQkJCQlnb3RvIGZvdW5kOworCQkJCX0KKwkJ
CQlpZiAoYXRvbS0+c3RhZ2UgPD0gQVNUQUdFX1BPU1RfQ09NTUlUKSB7CisJCQkJCXNwaW5fdW5s
b2NrX3R4bm1ncih0bWdyKTsKKwkJCQkJLyoKKwkJCQkJICogd2UganVzdCB3YWl0IHVudGlsIGF0
b20ncyBmbHVzaGVyCisJCQkJCSAqIG1ha2VzIGEgcHJvZ3Jlc3MgaW4gZmx1c2hpbmcgb3IKKwkJ
CQkJICogY29tbWl0dGluZyB0aGUgYXRvbQorCQkJCQkgKi8KKwkJCQkJcmVpc2VyNF9hdG9tX3dh
aXRfZXZlbnQoYXRvbSk7CisJCQkJCWdvdG8gcmVwZWF0OworCQkJCX0KKwkJCQlzcGluX3VubG9j
a19hdG9tKGF0b20pOworCQkJfQorCQl9CisJCXNwaW5fdW5sb2NrX3R4bm1ncih0bWdyKTsKKwkJ
cmV0dXJuIDA7CisJICAgICAgZm91bmQ6CisJCXNwaW5fdW5sb2NrX3R4bm1ncih0bWdyKTsKKwl9
IGVsc2UKKwkJYXRvbSA9IGdldF9jdXJyZW50X2F0b21fbG9ja2VkKCk7CisKKwlCVUdfT04oYXRv
bS0+c3VwZXIgIT0gY3R4LT5zdXBlcik7CisJYXNzZXJ0KCJ2cy0zNSIsIGF0b20tPnN1cGVyID09
IGN0eC0+c3VwZXIpOworCWlmIChzdGFydCkgeworCQlzcGluX2xvY2tfam5vZGUoc3RhcnQpOwor
CQlyZXQgPSAoYXRvbSA9PSBzdGFydC0+YXRvbSkgPyAxIDogMDsKKwkJc3Bpbl91bmxvY2tfam5v
ZGUoc3RhcnQpOworCQlpZiAocmV0ID09IDApCisJCQlzdGFydCA9IE5VTEw7CisJfQorCXJldCA9
IGZsdXNoX2N1cnJlbnRfYXRvbShmbGFncywgd2JjLT5ucl90b193cml0ZSwgbnJfc3VibWl0dGVk
LCAmYXRvbSwgc3RhcnQpOworCWlmIChyZXQgPT0gMCkgeworCQkvKiBmbHVzaF9jdXJyZW50X2F0
b20gcmV0dXJucyAwIG9ubHkgaWYgaXQgc3VibWl0dGVkIGZvciB3cml0ZQorCQkgICBub3RoaW5n
ICovCisJCUJVR19PTigqbnJfc3VibWl0dGVkICE9IDApOworCQlpZiAoKm5yX3N1Ym1pdHRlZCA9
PSAwIHx8IGF0b21fc2hvdWxkX2NvbW1pdF9hc2FwKGF0b20pKSB7CisJCQlpZiAoYXRvbS0+Y2Fw
dHVyZV9jb3VudCA8IHRtZ3ItPmF0b21fbWluX3NpemUgJiYKKwkJCSAgICAhKGF0b20tPmZsYWdz
ICYgQVRPTV9DQU5DRUxfRlVTSU9OKSkgeworCQkJCXJldCA9IHR4bl90cnlfdG9fZnVzZV9zbWFs
bF9hdG9tKHRtZ3IsIGF0b20pOworCQkJCWlmIChyZXQgPT0gLUVfUkVQRUFUKSB7CisJCQkJCXJl
aXNlcjRfcHJlZW1wdF9wb2ludCgpOworCQkJCQlnb3RvIHJlcGVhdDsKKwkJCQl9CisJCQl9CisJ
CQkvKiBpZiBlYXJseSBmbHVzaGluZyBjb3VsZCBub3QgbWFrZSBtb3JlIG5vZGVzIGNsZWFuLAor
CQkJICogb3IgYXRvbSBpcyB0b28gb2xkL2xhcmdlLAorCQkJICogd2UgZm9yY2UgY3VycmVudCBh
dG9tIHRvIGNvbW1pdCAqLworCQkJLyogd2FpdCBmb3IgY29tbWl0IGNvbXBsZXRpb24gYnV0IG9u
bHkgaWYgdGhpcworCQkJICogd291bGRuJ3Qgc3RhbGwgcGRmbHVzaGQgYW5kIGVudCB0aHJlYWQu
ICovCisJCQlpZiAoIWN0eC0+ZW50ZCkKKwkJCQl0eG5oLT5mbGFncyB8PSBUWE5IX1dBSVRfQ09N
TUlUOworCQkJYXRvbS0+ZmxhZ3MgfD0gQVRPTV9GT1JDRV9DT01NSVQ7CisJCX0KKwkJc3Bpbl91
bmxvY2tfYXRvbShhdG9tKTsKKwl9IGVsc2UgaWYgKHJldCA9PSAtRV9SRVBFQVQpIHsKKwkJaWYg
KCpucl9zdWJtaXR0ZWQgPT0gMCkgeworCQkJLyogbGV0IG90aGVycyB3aG8gaGFtcGVycyBmbHVz
aGluZyAoaG9sZCBsb25ndGVybSBsb2NrcywKKwkJCSAgIGZvciBpbnN0YW5jZSkgdG8gZnJlZSB0
aGUgd2F5IGZvciBmbHVzaCAqLworCQkJcmVpc2VyNF9wcmVlbXB0X3BvaW50KCk7CisJCQlnb3Rv
IHJlcGVhdDsKKwkJfQorCQlyZXQgPSAwOworCX0KKy8qCisJaWYgKCpucl9zdWJtaXR0ZWQgPiB3
YmMtPm5yX3RvX3dyaXRlKQorCQl3YXJuaW5nKCIiLCAiYXNrZWQgZm9yICVsZCwgd3JpdHRlbiAl
bGRcbiIsIHdiYy0+bnJfdG9fd3JpdGUsICpucl9zdWJtaXR0ZWQpOworKi8KKwlyZWlzZXI0X3R4
bl9yZXN0YXJ0KGN0eCk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBSZW1vdmUgcHJvY2Vzc2Vk
IG5vZGVzIGZyb20gYXRvbSdzIGNsZWFuIGxpc3QgKHRoZXJlYnkgcmVtb3ZlIHRoZW0gZnJvbSB0
cmFuc2FjdGlvbikuICovCit2b2lkIHJlaXNlcjRfaW52YWxpZGF0ZV9saXN0KHN0cnVjdCBsaXN0
X2hlYWQgKmhlYWQpCit7CisJd2hpbGUgKCFsaXN0X2VtcHR5KGhlYWQpKSB7CisJCWpub2RlICpu
b2RlOworCisJCW5vZGUgPSBsaXN0X2VudHJ5KGhlYWQtPm5leHQsIGpub2RlLCBjYXB0dXJlX2xp
bmspOworCQlzcGluX2xvY2tfam5vZGUobm9kZSk7CisJCXJlaXNlcjRfdW5jYXB0dXJlX2Jsb2Nr
KG5vZGUpOworCQlqcHV0KG5vZGUpOworCX0KK30KKworc3RhdGljIHZvaWQgaW5pdF93bGlua3Mo
dHhuX3dhaXRfbGlua3MgKiB3bGlua3MpCit7CisJd2xpbmtzLT5fbG9ja19zdGFjayA9IGdldF9j
dXJyZW50X2xvY2tfc3RhY2soKTsKKwlJTklUX0xJU1RfSEVBRCgmd2xpbmtzLT5fZndhaXRmb3Jf
bGluayk7CisJSU5JVF9MSVNUX0hFQUQoJndsaW5rcy0+X2Z3YWl0aW5nX2xpbmspOworCXdsaW5r
cy0+d2FpdGZvcl9jYiA9IE5VTEw7CisJd2xpbmtzLT53YWl0aW5nX2NiID0gTlVMTDsKK30KKwor
LyogQWRkIGF0b20gdG8gdGhlIGF0b20ncyB3YWl0Zm9yIGxpc3QgYW5kIHdhaXQgZm9yIHNvbWVi
b2R5IHRvIHdha2UgdXMgdXA7ICovCit2b2lkIHJlaXNlcjRfYXRvbV93YWl0X2V2ZW50KHR4bl9h
dG9tICogYXRvbSkKK3sKKwl0eG5fd2FpdF9saW5rcyBfd2xpbmtzOworCisJYXNzZXJ0X3NwaW5f
bG9ja2VkKCYoYXRvbS0+YWxvY2spKTsKKwlhc3NlcnQoIm5pa2l0YS0zMTU2IiwKKwkgICAgICAg
bG9ja19zdGFja19pc2NsZWFuKGdldF9jdXJyZW50X2xvY2tfc3RhY2soKSkgfHwKKwkgICAgICAg
YXRvbS0+bnJfcnVubmluZ19xdWV1ZXMgPiAwKTsKKworCWluaXRfd2xpbmtzKCZfd2xpbmtzKTsK
KwlsaXN0X2FkZF90YWlsKCZfd2xpbmtzLl9md2FpdGZvcl9saW5rLCAmYXRvbS0+ZndhaXRmb3Jf
bGlzdCk7CisJYXRvbWljX2luYygmYXRvbS0+cmVmY291bnQpOworCXNwaW5fdW5sb2NrX2F0b20o
YXRvbSk7CisKKwlyZWlzZXI0X3ByZXBhcmVfdG9fc2xlZXAoX3dsaW5rcy5fbG9ja19zdGFjayk7
CisJcmVpc2VyNF9nb190b19zbGVlcChfd2xpbmtzLl9sb2NrX3N0YWNrKTsKKworCXNwaW5fbG9j
a19hdG9tKGF0b20pOworCWxpc3RfZGVsKCZfd2xpbmtzLl9md2FpdGZvcl9saW5rKTsKKwlhdG9t
X2RlY19hbmRfdW5sb2NrKGF0b20pOworfQorCit2b2lkIHJlaXNlcjRfYXRvbV9zZXRfc3RhZ2Uo
dHhuX2F0b20gKiBhdG9tLCB0eG5fc3RhZ2Ugc3RhZ2UpCit7CisJYXNzZXJ0KCJuaWtpdGEtMzUz
NSIsIGF0b20gIT0gTlVMTCk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYoYXRvbS0+YWxvY2spKTsK
Kwlhc3NlcnQoIm5pa2l0YS0zNTM2Iiwgc3RhZ2UgPD0gQVNUQUdFX0lOVkFMSUQpOworCS8qIEV4
Y2Vsc2lvciEgKi8KKwlhc3NlcnQoIm5pa2l0YS0zNTM3Iiwgc3RhZ2UgPj0gYXRvbS0+c3RhZ2Up
OworCWlmIChhdG9tLT5zdGFnZSAhPSBzdGFnZSkgeworCQlhdG9tLT5zdGFnZSA9IHN0YWdlOwor
CQlyZWlzZXI0X2F0b21fc2VuZF9ldmVudChhdG9tKTsKKwl9Cit9CisKKy8qIHdha2UgYWxsIHRo
cmVhZHMgd2hpY2ggd2FpdCBmb3IgYW4gZXZlbnQgKi8KK3ZvaWQgcmVpc2VyNF9hdG9tX3NlbmRf
ZXZlbnQodHhuX2F0b20gKiBhdG9tKQoreworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFs
b2NrKSk7CisJd2FrZXVwX2F0b21fd2FpdGZvcl9saXN0KGF0b20pOworfQorCisvKiBJbmZvcm1z
IHR4biBtYW5hZ2VyIGNvZGUgdGhhdCBvd25lciBvZiB0aGlzIHR4bl9oYW5kbGUgc2hvdWxkIHdh
aXQgYXRvbSBjb21taXQgY29tcGxldGlvbiAoZm9yCisgICBleGFtcGxlLCBiZWNhdXNlIGl0IGRv
ZXMgZnN5bmMoMikpICovCitzdGF0aWMgaW50IHNob3VsZF93YWl0X2NvbW1pdCh0eG5faGFuZGxl
ICogaCkKK3sKKwlyZXR1cm4gaC0+ZmxhZ3MgJiBUWE5IX1dBSVRfQ09NTUlUOworfQorCit0eXBl
ZGVmIHN0cnVjdCBjb21taXRfZGF0YSB7CisJdHhuX2F0b20gKmF0b207CisJdHhuX2hhbmRsZSAq
dHhuaDsKKwlsb25nIG5yX3dyaXR0ZW47CisJLyogYXMgYW4gb3B0aW1pemF0aW9uIHdlIHN0YXJ0
IGNvbW1pdHRpbmcgYXRvbSBieSBmaXJzdCB0cnlpbmcgdG8KKwkgKiBmbHVzaCBpdCBmZXcgdGlt
ZXMgd2l0aG91dCBzd2l0Y2hpbmcgaW50byBBU1RBR0VfQ0FQVFVSRV9XQUlULiBUaGlzCisJICog
YWxsb3dzIHRvIHJlZHVjZSBzdGFsbHMgZHVlIHRvIG90aGVyIHRocmVhZHMgd2FpdGluZyBmb3Ig
YXRvbSBpbgorCSAqIEFTVEFHRV9DQVBUVVJFX1dBSVQgc3RhZ2UuIC0+cHJlZmx1c2ggaXMgY291
bnRlciBvZiB0aGVzZQorCSAqIHByZWxpbWluYXJ5IGZsdXNoZXMuICovCisJaW50IHByZWZsdXNo
OworCS8qIGhhdmUgd2Ugd2FpdGVkIG9uIGF0b20uICovCisJaW50IHdhaXQ7CisJaW50IGZhaWxl
ZDsKKwlpbnQgd2FrZV9rdHhubWdyZF91cDsKK30gY29tbWl0X2RhdGE7CisKKy8qCisgKiBDYWxs
ZWQgZnJvbSBjb21taXRfdHhuaCgpIHJlcGVhdGVkbHksIHVudGlsIGVpdGhlciBlcnJvciBoYXBw
ZW5zLCBvciBhdG9tCisgKiBjb21taXRzIHN1Y2Nlc3NmdWxseS4KKyAqLworc3RhdGljIGludCB0
cnlfY29tbWl0X3R4bmgoY29tbWl0X2RhdGEgKiBjZCkKK3sKKwlpbnQgcmVzdWx0OworCisJYXNz
ZXJ0KCJuaWtpdGEtMjk2OCIsIGxvY2tfc3RhY2tfaXNjbGVhbihnZXRfY3VycmVudF9sb2NrX3N0
YWNrKCkpKTsKKworCS8qIEdldCB0aGUgYXRvbSBhbmQgdHhuaCBsb2NrZWQuICovCisJY2QtPmF0
b20gPSB0eG5oX2dldF9hdG9tKGNkLT50eG5oKTsKKwlhc3NlcnQoImptYWNkLTMwOSIsIGNkLT5h
dG9tICE9IE5VTEwpOworCXNwaW5fdW5sb2NrX3R4bmgoY2QtPnR4bmgpOworCisJaWYgKGNkLT53
YWl0KSB7CisJCWNkLT5hdG9tLT5ucl93YWl0ZXJzLS07CisJCWNkLT53YWl0ID0gMDsKKwl9CisK
KwlpZiAoY2QtPmF0b20tPnN0YWdlID09IEFTVEFHRV9ET05FKQorCQlyZXR1cm4gMDsKKworCWlm
IChjZC0+ZmFpbGVkKQorCQlyZXR1cm4gMDsKKworCWlmIChhdG9tX3Nob3VsZF9jb21taXQoY2Qt
PmF0b20pKSB7CisJCS8qIGlmIGF0b20gaXMgX3ZlcnlfIGxhcmdlIHNjaGVkdWxlIGl0IGZvciBj
b21taXQgYXMgc29vbiBhcworCQkgKiBwb3NzaWJsZS4gKi8KKwkJaWYgKGF0b21fc2hvdWxkX2Nv
bW1pdF9hc2FwKGNkLT5hdG9tKSkgeworCQkJLyoKKwkJCSAqIFdoZW4gYXRvbSBpcyBpbiBQUkVf
Q09NTUlUIG9yIGxhdGVyIHN0YWdlIGZvbGxvd2luZworCQkJICogaW52YXJpYW50IChlbmNvZGVk
ICAgaW4gICAgYXRvbV9jYW5fYmVfY29tbWl0dGVkKCkpCisJCQkgKiBob2xkczogIHRoZXJlIGlz
IGV4YWN0bHkgb25lIG5vbi13YWl0ZXIgdHJhbnNhY3Rpb24KKwkJCSAqIGhhbmRsZSBvcGVuZWQg
IG9uIHRoaXMgYXRvbS4gIFdoZW4gIHRocmVhZCB3YW50cyB0bworCQkJICogd2FpdCAgdW50aWwg
YXRvbSAgY29tbWl0cyAoZm9yICBleGFtcGxlICBzeW5jKCkpIGl0CisJCQkgKiB3YWl0cyAgICBv
biAgICBhdG9tICBldmVudCAgICAgYWZ0ZXIgICAgIGluY3JlYXNpbmcKKwkJCSAqIGF0b20tPm5y
X3dhaXRlcnMgKHNlZSBibG93ICBpbiAgdGhpcyAgZnVuY3Rpb24pLiBJdAorCQkJICogY2Fubm90
IGJlIGd1YXJhbnRlZWQgdGhhdCBhdG9tIGlzIGFscmVhZHkgY29tbWl0dGVkCisJCQkgKiBhZnRl
ciAgICByZWNlaXZpbmcgZXZlbnQsICBzbyAgICAgbG9vcCBoYXMgICB0byAgYmUKKwkJCSAqIHJl
LXN0YXJ0ZWQuIEJ1dCAgaWYgIGF0b20gc3dpdGNoZWQgaW50byAgUFJFX0NPTU1JVAorCQkJICog
c3RhZ2UgYW5kIGJlY2FtZSAgdG9vICBsYXJnZSwgd2UgY2Fubm90ICBjaGFuZ2UgaXRzCisJCQkg
KiBzdGF0ZSBiYWNrICAgdG8gQ0FQVFVSRV9XQUlUIChhdG9tICBzdGFnZSBjYW4gIG9ubHkKKwkJ
CSAqIGluY3JlYXNlIG1vbm90b25pY2FsbHkpLCBoZW5jZSB0aGlzIGNoZWNrLgorCQkJICovCisJ
CQlpZiAoY2QtPmF0b20tPnN0YWdlIDwgQVNUQUdFX0NBUFRVUkVfV0FJVCkKKwkJCQlyZWlzZXI0
X2F0b21fc2V0X3N0YWdlKGNkLT5hdG9tLAorCQkJCQkJICAgICAgIEFTVEFHRV9DQVBUVVJFX1dB
SVQpOworCQkJY2QtPmF0b20tPmZsYWdzIHw9IEFUT01fRk9SQ0VfQ09NTUlUOworCQl9CisJCWlm
IChjZC0+dHhuaC0+ZmxhZ3MgJiBUWE5IX0RPTlRfQ09NTUlUKSB7CisJCQkvKgorCQkJICogdGhp
cyAgdGhyZWFkICh0cmFuc2FjdGlvbiAgaGFuZGxlICB0aGF0IGlzKSBkb2Vzbid0CisJCQkgKiB3
YW50IHRvIGNvbW1pdCAgYXRvbS4gTm90aWZ5IHdhaXRlcnMgdGhhdCBoYW5kbGUgaXMKKwkJCSAq
IGNsb3NlZC4gVGhpcyBjYW4gaGFwcGVuLCBmb3IgIGV4YW1wbGUsIHdoZW4gd2UgIGFyZQorCQkJ
ICogdW5kZXIgIFZGUyBkaXJlY3RvcnkgbG9jayAgYW5kIGRvbid0IHdhbnQgdG8gY29tbWl0CisJ
CQkgKiBhdG9tICByaWdodCAgIG5vdyB0byAgYXZvaWQgIHN0YWxsaW5nIG90aGVyIHRocmVhZHMK
KwkJCSAqIHdvcmtpbmcgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LgorCQkJICovCisKKwkJCS8qIFdh
a2UgIHRoZSBrdHhubWdyZCB1cCBpZiAgdGhlIGt0eG5tZ3JkIGlzIG5lZWRlZCB0bworCQkJICog
Y29tbWl0IHRoaXMgIGF0b206IG5vICBhdG9tICB3YWl0ZXJzICBhbmQgb25seSAgb25lCisJCQkg
KiAob3VyKSBvcGVuIHRyYW5zYWN0aW9uIGhhbmRsZS4gKi8KKwkJCWNkLT53YWtlX2t0eG5tZ3Jk
X3VwID0KKwkJCSAgICBjZC0+YXRvbS0+dHhuaF9jb3VudCA9PSAxICYmCisJCQkgICAgY2QtPmF0
b20tPm5yX3dhaXRlcnMgPT0gMDsKKwkJCXJlaXNlcjRfYXRvbV9zZW5kX2V2ZW50KGNkLT5hdG9t
KTsKKwkJCXJlc3VsdCA9IDA7CisJCX0gZWxzZSBpZiAoIWF0b21fY2FuX2JlX2NvbW1pdHRlZChj
ZC0+YXRvbSkpIHsKKwkJCWlmIChzaG91bGRfd2FpdF9jb21taXQoY2QtPnR4bmgpKSB7CisJCQkJ
Lyogc3luYygpOiB3YWl0IGZvciBjb21taXQgKi8KKwkJCQljZC0+YXRvbS0+bnJfd2FpdGVycysr
OworCQkJCWNkLT53YWl0ID0gMTsKKwkJCQlyZWlzZXI0X2F0b21fd2FpdF9ldmVudChjZC0+YXRv
bSk7CisJCQkJcmVzdWx0ID0gUkVURVJSKC1FX1JFUEVBVCk7CisJCQl9IGVsc2UgeworCQkJCXJl
c3VsdCA9IDA7CisJCQl9CisJCX0gZWxzZSBpZiAoY2QtPnByZWZsdXNoID4gMCAmJiAhaXNfY3Vy
cmVudF9rdHhubWdyZCgpKSB7CisJCQkvKgorCQkJICogb3B0aW1pemF0aW9uOiBmbHVzaCAgYXRv
bSB3aXRob3V0IHN3aXRjaGluZyBpdCBpbnRvCisJCQkgKiBBU1RBR0VfQ0FQVFVSRV9XQUlULgor
CQkJICoKKwkJCSAqIEJ1dCBkb24ndCAgZG8gdGhpcyBmb3IgIGt0eG5tZ3JkLCBiZWNhdXNlICBr
dHhubWdyZAorCQkJICogc2hvdWxkIG5ldmVyIGJsb2NrIG9uIGF0b20gZnVzaW9uLgorCQkJICov
CisJCQlyZXN1bHQgPSBmbHVzaF9jdXJyZW50X2F0b20oSk5PREVfRkxVU0hfV1JJVEVfQkxPQ0tT
LAorCQkJCQkJICAgIExPTkdfTUFYLCAmY2QtPm5yX3dyaXR0ZW4sCisJCQkJCQkgICAgJmNkLT5h
dG9tLCBOVUxMKTsKKwkJCWlmIChyZXN1bHQgPT0gMCkgeworCQkJCXNwaW5fdW5sb2NrX2F0b20o
Y2QtPmF0b20pOworCQkJCWNkLT5wcmVmbHVzaCA9IDA7CisJCQkJcmVzdWx0ID0gUkVURVJSKC1F
X1JFUEVBVCk7CisJCQl9IGVsc2UJLyogQXRvbXMgd2Fzbid0IGZsdXNoZWQKKwkJCQkgKiBjb21w
bGV0ZWx5LiBSaW5zZS4gUmVwZWF0LiAqLworCQkJCS0tY2QtPnByZWZsdXNoOworCQl9IGVsc2Ug
eworCQkJLyogV2UgY2hhbmdlICAgYXRvbSBzdGF0ZSAgdG8gICBBU1RBR0VfQ0FQVFVSRV9XQUlU
IHRvCisJCQkgICBwcmV2ZW50IGF0b20gZnVzaW9uIGFuZCBjb3VudCAgb3Vyc2VsZiBhcyBhbiBh
Y3RpdmUKKwkJCSAgIGZsdXNoZXIgKi8KKwkJCXJlaXNlcjRfYXRvbV9zZXRfc3RhZ2UoY2QtPmF0
b20sIEFTVEFHRV9DQVBUVVJFX1dBSVQpOworCQkJY2QtPmF0b20tPmZsYWdzIHw9IEFUT01fRk9S
Q0VfQ09NTUlUOworCisJCQlyZXN1bHQgPQorCQkJICAgIGNvbW1pdF9jdXJyZW50X2F0b20oJmNk
LT5ucl93cml0dGVuLCAmY2QtPmF0b20pOworCQkJaWYgKHJlc3VsdCAhPSAwICYmIHJlc3VsdCAh
PSAtRV9SRVBFQVQpCisJCQkJY2QtPmZhaWxlZCA9IDE7CisJCX0KKwl9IGVsc2UKKwkJcmVzdWx0
ID0gMDsKKworI2lmIFJFSVNFUjRfREVCVUcKKwlpZiAocmVzdWx0ID09IDApCisJCWFzc2VydF9z
cGluX2xvY2tlZCgmKGNkLT5hdG9tLT5hbG9jaykpOworI2VuZGlmCisKKwkvKiBwZXJmZWN0bHkg
dmFsaWQgYXNzZXJ0aW9uLCBleGNlcHQgdGhhdCB3aGVuIGF0b20vdHhuaCBpcyBub3QgbG9ja2Vk
CisJICogZnVzaW9uIGNhbiB0YWtlIHBsYWNlLCBhbmQgY2QtPmF0b20gcG9pbnRzIG5vd2hlcmUu
ICovCisJLyoKKwkgICBhc3NlcnQoImptYWNkLTEwMjgiLCBlcmdvKHJlc3VsdCAhPSAwLCBzcGlu
X2F0b21faXNfbm90X2xvY2tlZChjZC0+YXRvbSkpKTsKKwkgKi8KKwlyZXR1cm4gcmVzdWx0Owor
fQorCisvKiBDYWxsZWQgdG8gY29tbWl0IGEgdHJhbnNhY3Rpb24gaGFuZGxlLiAgVGhpcyBkZWNy
ZW1lbnRzIHRoZSBhdG9tJ3MgbnVtYmVyIG9mIG9wZW4KKyAgIGhhbmRsZXMgYW5kIGlmIGl0IGlz
IHRoZSBsYXN0IGhhbmRsZSB0byBjb21taXQgYW5kIHRoZSBhdG9tIHNob3VsZCBjb21taXQsIGlu
aXRpYXRlcworICAgYXRvbSBjb21taXQuIGlmIGNvbW1pdCBkb2VzIG5vdCBmYWlsLCByZXR1cm4g
bnVtYmVyIG9mIHdyaXR0ZW4gYmxvY2tzICovCitzdGF0aWMgaW50IGNvbW1pdF90eG5oKHR4bl9o
YW5kbGUgKiB0eG5oKQoreworCWNvbW1pdF9kYXRhIGNkOworCWFzc2VydCgidW1rYS0xOTIiLCB0
eG5oICE9IE5VTEwpOworCisJbWVtc2V0KCZjZCwgMCwgc2l6ZW9mIGNkKTsKKwljZC50eG5oID0g
dHhuaDsKKwljZC5wcmVmbHVzaCA9IDEwOworCisJLyogY2FsbHMgdHJ5X2NvbW1pdF90eG5oKCkg
dW50aWwgZWl0aGVyIGF0b20gY29tbWl0cywgb3IgZXJyb3IKKwkgKiBoYXBwZW5zICovCisJd2hp
bGUgKHRyeV9jb21taXRfdHhuaCgmY2QpICE9IDApCisJCXJlaXNlcjRfcHJlZW1wdF9wb2ludCgp
OworCisJc3Bpbl9sb2NrX3R4bmgodHhuaCk7CisKKwljZC5hdG9tLT50eG5oX2NvdW50IC09IDE7
CisJdHhuaC0+YXRvbSA9IE5VTEw7CisJLyogcmVtb3ZlIHRyYW5zYWN0aW9uIGhhbmRsZSBmcm9t
IGF0b20ncyBsaXN0IG9mIHRyYW5zYWN0aW9uIGhhbmRsZXMgKi8KKwlsaXN0X2RlbF9pbml0KCZ0
eG5oLT50eG5oX2xpbmspOworCisJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwlhdG9tX2RlY19h
bmRfdW5sb2NrKGNkLmF0b20pOworCS8qIGlmIHdlIGRvbid0IHdhbnQgdG8gZG8gYSBjb21taXQg
KFRYTkhfRE9OVF9DT01NSVQgaXMgc2V0LCBwcm9iYWJseQorCSAqIGJlY2F1c2UgaXQgdGFrZXMg
dGltZSkgYnkgY3VycmVudCB0aHJlYWQsIHdlIGRvIHRoYXQgd29yaworCSAqIGFzeW5jaHJvbm91
c2x5IGJ5IGt0eG5tZ3JkIGRhZW1vbi4gKi8KKwlpZiAoY2Qud2FrZV9rdHhubWdyZF91cCkKKwkJ
a3R4bm1ncmRfa2ljaygmZ2V0X2N1cnJlbnRfc3VwZXJfcHJpdmF0ZSgpLT50bWdyKTsKKworCXJl
dHVybiAwOworfQorCisvKiBUUllfQ0FQVFVSRSAqLworCisvKiBUaGlzIHJvdXRpbmUgYXR0ZW1w
dHMgYSBzaW5nbGUgYmxvY2stY2FwdHVyZSByZXF1ZXN0LiAgSXQgbWF5IHJldHVybiAtRV9SRVBF
QVQgaWYgc29tZQorICAgY29uZGl0aW9uIGluZGljYXRlcyB0aGF0IHRoZSByZXF1ZXN0IHNob3Vs
ZCBiZSByZXRyaWVkLCBhbmQgaXQgbWF5IGJsb2NrIGlmIHRoZQorICAgdHhuX2NhcHR1cmUgbW9k
ZSBkb2VzIG5vdCBpbmNsdWRlIHRoZSBUWE5fQ0FQVFVSRV9OT05CTE9DS0lORyByZXF1ZXN0IGZs
YWcuCisKKyAgIFRoaXMgcm91dGluZSBlbmNvZGVzIHRoZSBiYXNpYyBsb2dpYyBvZiBibG9jayBj
YXB0dXJpbmcgZGVzY3JpYmVkIGJ5OgorCisgICAgIGh0dHA6Ly9uYW1lc3lzLmNvbS92NC92NC5o
dG1sCisKKyAgIE91ciBnb2FsIGhlcmUgaXMgdG8gZW5zdXJlIHRoYXQgYW55IHR3byBibG9ja3Mg
dGhhdCBjb250YWluIGRlcGVuZGVudCBtb2RpZmljYXRpb25zCisgICBzaG91bGQgY29tbWl0IGF0
IHRoZSBzYW1lIHRpbWUuICBUaGlzIGZ1bmN0aW9uIGVuZm9yY2VzIHRoaXMgZGlzY2lwbGluZSBi
eSBpbml0aWF0aW5nCisgICBmdXNpb24gd2hlbmV2ZXIgYSB0cmFuc2FjdGlvbiBoYW5kbGUgYmVs
b25naW5nIHRvIG9uZSBhdG9tIHJlcXVlc3RzIHRvIHJlYWQgb3Igd3JpdGUgYQorICAgYmxvY2sg
YmVsb25naW5nIHRvIGFub3RoZXIgYXRvbSAoVFhOX0NBUFRVUkVfV1JJVEUgb3IgVFhOX0NBUFRV
UkVfUkVBRF9BVE9NSUMpLgorCisgICBJbiBhZGRpdGlvbiwgdGhpcyByb3V0aW5lIGhhbmRsZXMg
dGhlIGluaXRpYWwgYXNzaWdubWVudCBvZiBhdG9tcyB0byBibG9ja3MgYW5kCisgICB0cmFuc2Fj
dGlvbiBoYW5kbGVzLiAgVGhlc2UgYXJlIHBvc3NpYmxlIG91dGNvbWVzIG9mIHRoaXMgZnVuY3Rp
b246CisKKyAgIDEuIFRoZSBibG9jayBhbmQgaGFuZGxlIGFyZSBhbHJlYWR5IHBhcnQgb2YgdGhl
IHNhbWUgYXRvbTogcmV0dXJuIGltbWVkaWF0ZSBzdWNjZXNzCisKKyAgIDIuIFRoZSBibG9jayBp
cyBhc3NpZ25lZCBidXQgdGhlIGhhbmRsZSBpcyBub3Q6IGNhbGwgY2FwdHVyZV9hc3NpZ25fdHhu
aCB0byBhc3NpZ24KKyAgICAgIHRoZSBoYW5kbGUgdG8gdGhlIGJsb2NrJ3MgYXRvbS4KKworICAg
My4gVGhlIGhhbmRsZSBpcyBhc3NpZ25lZCBidXQgdGhlIGJsb2NrIGlzIG5vdDogY2FsbCBjYXB0
dXJlX2Fzc2lnbl9ibG9jayB0byBhc3NpZ24KKyAgICAgIHRoZSBibG9jayB0byB0aGUgaGFuZGxl
J3MgYXRvbS4KKworICAgNC4gQm90aCBoYW5kbGUgYW5kIGJsb2NrIGFyZSBhc3NpZ25lZCwgYnV0
IHRvIGRpZmZlcmVudCBhdG9tczogY2FsbCBjYXB0dXJlX2luaXRfZnVzaW9uCisgICAgICB0byBm
dXNlIGF0b21zLgorCisgICA1LiBOZWl0aGVyIGJsb2NrIG5vciBoYW5kbGUgYXJlIGFzc2lnbmVk
OiBjcmVhdGUgYSBuZXcgYXRvbSBhbmQgYXNzaWduIHRoZW0gYm90aC4KKworICAgNi4gQSByZWFk
IHJlcXVlc3QgZm9yIGEgbm9uLWNhcHR1cmVkIGJsb2NrOiByZXR1cm4gaW1tZWRpYXRlIHN1Y2Nl
c3MuCisKKyAgIFRoaXMgZnVuY3Rpb24gYWNxdWlyZXMgYW5kIHJlbGVhc2VzIHRoZSBoYW5kbGUn
cyBzcGlubG9jay4gIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkCisgICB1bmRlciB0aGUgam5vZGUg
bG9jayBhbmQgaWYgdGhlIHJldHVybiB2YWx1ZSBpcyAwLCBpdCByZXR1cm5zIHdpdGggdGhlIGpu
b2RlIGxvY2sgc3RpbGwKKyAgIGhlbGQuICBJZiB0aGUgcmV0dXJuIGlzIC1FX1JFUEVBVCBvciBz
b21lIG90aGVyIGVycm9yIGNvbmRpdGlvbiwgdGhlIGpub2RlIGxvY2sgaXMKKyAgIHJlbGVhc2Vk
LiAgVGhlIGV4dGVybmFsIGludGVyZmFjZSAocmVpc2VyNF90cnlfY2FwdHVyZSkgbWFuYWdlcyBy
ZS1hcXVpcmluZyB0aGUgam5vZGUKKyAgIGxvY2sgaW4gdGhlIGZhaWx1cmUgY2FzZS4KKyovCitz
dGF0aWMgaW50IHRyeV9jYXB0dXJlX2Jsb2NrKAorCXR4bl9oYW5kbGUgKiB0eG5oLCBqbm9kZSAq
IG5vZGUsIHR4bl9jYXB0dXJlIG1vZGUsCisJdHhuX2F0b20gKiogYXRvbV9hbGxvYykKK3sKKwl0
eG5fYXRvbSAqYmxvY2tfYXRvbTsKKwl0eG5fYXRvbSAqdHhuaF9hdG9tOworCisJLyogU2hvdWxk
IG5vdCBjYWxsIGNhcHR1cmUgZm9yIFJFQURfTk9OQ09NIHJlcXVlc3RzLCBoYW5kbGVkIGluIHJl
aXNlcjRfdHJ5X2NhcHR1cmUuICovCisJYXNzZXJ0KCJqbWFjZC01NjciLCBDQVBUVVJFX1RZUEUo
bW9kZSkgIT0gVFhOX0NBUFRVUkVfUkVBRF9OT05DT00pOworCisJLyogRklYTUUtWkFNLUhBTlM6
IEZJWE1FX0xBVEVSX0pNQUNEIFNob3VsZCBhc3NlcnQgdGhhdCBhdG9tLT50cmVlID09CisJICog
bm9kZS0+dHJlZSBzb21ld2hlcmUuICovCisJYXNzZXJ0KCJ1bWthLTE5NCIsIHR4bmggIT0gTlVM
TCk7CisJYXNzZXJ0KCJ1bWthLTE5NSIsIG5vZGUgIT0gTlVMTCk7CisKKwkvKiBUaGUgam5vZGUg
aXMgYWxyZWFkeSBsb2NrZWQhICBCZWluZyBjYWxsZWQgZnJvbSByZWlzZXI0X3RyeV9jYXB0dXJl
KCkuICovCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9kZS0+Z3VhcmQpKTsKKwlibG9ja19hdG9t
ID0gbm9kZS0+YXRvbTsKKworCS8qIEdldCB0eG5oIHNwaW5sb2NrLCB0aGlzIGFsbG93cyB1cyB0
byBjb21wYXJlIHR4bl9hdG9tIHBvaW50ZXJzIGJ1dCBpdCBkb2Vzbid0CisJICAgbGV0IHVzIHRv
dWNoIHRoZSBhdG9tcyB0aGVtc2VsdmVzLiAqLworCXNwaW5fbG9ja190eG5oKHR4bmgpOworCXR4
bmhfYXRvbSA9IHR4bmgtPmF0b207CisJLyogUHJvY2VzcyBvZiBjYXB0dXJpbmcgY29udGludWVz
IGludG8gb25lIG9mIGZvdXIgYnJhbmNoZXMgZGVwZW5kcyBvbgorCSAgIHdoaWNoIGF0b21zIGZy
b20gKGJsb2NrIGF0b20gKG5vZGUtPmF0b20pLCBjdXJyZW50IGF0b20gKHR4bmgtPmF0b20pKQor
CSAgIGV4aXN0LiAqLworCWlmICh0eG5oX2F0b20gPT0gTlVMTCkgeworCQlpZiAoYmxvY2tfYXRv
bSA9PSBOVUxMKSB7CisJCQlzcGluX3VubG9ja190eG5oKHR4bmgpOworCQkJc3Bpbl91bmxvY2tf
am5vZGUobm9kZSk7CisJCQkvKiBhc3NpZ24gZW1wdHkgYXRvbSB0byB0aGUgdHhuaCBhbmQgcmVw
ZWF0ICovCisJCQlyZXR1cm4gYXRvbV9iZWdpbl9hbmRfYXNzaWduX3RvX3R4bmgoYXRvbV9hbGxv
YywgdHhuaCk7CisJCX0gZWxzZSB7CisJCQlhdG9taWNfaW5jKCZibG9ja19hdG9tLT5yZWZjb3Vu
dCk7CisJCQkvKiBub2RlIHNwaW4tbG9jayBpc24ndCBuZWVkZWQgYW55bW9yZSAqLworCQkJc3Bp
bl91bmxvY2tfam5vZGUobm9kZSk7CisJCQlpZiAoIXNwaW5fdHJ5bG9ja19hdG9tKGJsb2NrX2F0
b20pKSB7CisJCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJCQlzcGluX2xvY2tfYXRvbShi
bG9ja19hdG9tKTsKKwkJCQlzcGluX2xvY2tfdHhuaCh0eG5oKTsKKwkJCX0KKwkJCS8qIHJlLWNo
ZWNrIHN0YXRlIGFmdGVyIGdldHRpbmcgdHhuaCBhbmQgdGhlIG5vZGUKKwkJCSAqIGF0b20gc3Bp
bi1sb2NrZWQgKi8KKwkJCWlmIChub2RlLT5hdG9tICE9IGJsb2NrX2F0b20gfHwgdHhuaC0+YXRv
bSAhPSBOVUxMKSB7CisJCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJCQlhdG9tX2RlY19h
bmRfdW5sb2NrKGJsb2NrX2F0b20pOworCQkJCXJldHVybiBSRVRFUlIoLUVfUkVQRUFUKTsKKwkJ
CX0KKwkJCWF0b21pY19kZWMoJmJsb2NrX2F0b20tPnJlZmNvdW50KTsKKwkJCWlmIChibG9ja19h
dG9tLT5zdGFnZSA+IEFTVEFHRV9DQVBUVVJFX1dBSVQgfHwKKwkJCSAgICAoYmxvY2tfYXRvbS0+
c3RhZ2UgPT0gQVNUQUdFX0NBUFRVUkVfV0FJVCAmJgorCQkJICAgICBibG9ja19hdG9tLT50eG5o
X2NvdW50ICE9IDApKQorCQkJCXJldHVybiBjYXB0dXJlX2Z1c2Vfd2FpdCh0eG5oLCBibG9ja19h
dG9tLCBOVUxMLCBtb2RlKTsKKwkJCWNhcHR1cmVfYXNzaWduX3R4bmhfbm9sb2NrKGJsb2NrX2F0
b20sIHR4bmgpOworCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJCXNwaW5fdW5sb2NrX2F0
b20oYmxvY2tfYXRvbSk7CisJCQlyZXR1cm4gUkVURVJSKC1FX1JFUEVBVCk7CisJCX0KKwl9IGVs
c2UgeworCQkvKiBJdCBpcyB0aW1lIHRvIHBlcmZvcm0gZGVhZGxvY2sgcHJldmVudGlvbiBjaGVj
ayBvdmVyIHRoZQorICAgICAgICAgICAgICAgICAgbm9kZSB3ZSB3YW50IHRvIGNhcHR1cmUuICBJ
dCBpcyBwb3NzaWJsZSB0aGlzIG5vZGUgd2FzIGxvY2tlZAorICAgICAgICAgICAgICAgICAgZm9y
IHJlYWQgd2l0aG91dCBjYXB0dXJpbmcgaXQuIFRoZSBvcHRpbWl6YXRpb24gd2hpY2ggYWxsb3dz
CisgICAgICAgICAgICAgICAgICB0byBkbyBpdCBoZWxwcyB1cyBpbiBrZWVwaW5nIGF0b21zIGlu
ZGVwZW5kZW50IGFzIGxvbmcgYXMKKyAgICAgICAgICAgICAgICAgIHBvc3NpYmxlIGJ1dCBpdCBt
YXkgY2F1c2UgbG9jay9mdXNlIGRlYWRsb2NrIHByb2JsZW1zLgorCisgICAgICAgICAgICAgICAg
ICBBIG51bWJlciBvZiBzaW1pbGFyIGRlYWRsb2NrIHNpdHVhdGlvbnMgd2l0aCBsb2NrZWQgYnV0
IG5vdAorICAgICAgICAgICAgICAgICAgY2FwdHVyZWQgbm9kZXMgd2VyZSBmb3VuZC4gIEluIGVh
Y2ggc2l0dWF0aW9uIHRoZXJlIGFyZSB0d28KKyAgICAgICAgICAgICAgICAgIG9yIG1vcmUgdGhy
ZWFkczogb25lIG9mIHRoZW0gZG9lcyBmbHVzaGluZyB3aGlsZSBhbm90aGVyIG9uZQorICAgICAg
ICAgICAgICAgICAgZG9lcyByb3V0aW5lIGJhbGFuY2luZyBvciB0cmVlIGxvb2t1cC4gIFRoZSBm
bHVzaGluZyB0aHJlYWQKKyAgICAgICAgICAgICAgICAgIChGKSBzbGVlcHMgaW4gbG9uZyB0ZXJt
IGxvY2tpbmcgcmVxdWVzdCBmb3Igbm9kZSAoTiksIGFub3RoZXIKKyAgICAgICAgICAgICAgICAg
IHRocmVhZCAoQSkgc2xlZXBzIGluIHRyeWluZyB0byBjYXB0dXJlIHNvbWUgbm9kZSBhbHJlYWR5
CisgICAgICAgICAgICAgICAgICBiZWxvbmdpbmcgdGhlIGF0b20gRiwgRiBoYXMgYSBzdGF0ZSB3
aGljaCBwcmV2ZW50cworICAgICAgICAgICAgICAgICAgaW1tZWRpYXRlbHkgZnVzaW9uIC4KKwor
ICAgICAgICAgICAgICAgICAgRGVhZGxvY2tzIG9mIHRoaXMga2luZCBjYW5ub3QgaGFwcGVuIGlm
IG5vZGUgTiB3YXMgcHJvcGVybHkKKyAgICAgICAgICAgICAgICAgIGNhcHR1cmVkIGJ5IHRocmVh
ZCBBLiBUaGUgRiB0aHJlYWQgZnVzZSBhdG9tcyBiZWZvcmUgbG9ja2luZworICAgICAgICAgICAg
ICAgICAgdGhlcmVmb3JlIGN1cnJlbnQgYXRvbSBvZiB0aHJlYWQgRiBhbmQgY3VycmVudCBhdG9t
IG9mIHRocmVhZAorICAgICAgICAgICAgICAgICAgQSBiZWNhbWUgdGhlIHNhbWUgYXRvbSBhbmQg
dGhyZWFkIEEgbWF5IHByb2NlZWQuICBUaGlzIGRvZXMKKyAgICAgICAgICAgICAgICAgIG5vdCB3
b3JrIGlmIG5vZGUgTiB3YXMgbm90IGNhcHR1cmVkIGJlY2F1c2UgdGhlIGZ1c2lvbiBvZgorICAg
ICAgICAgICAgICAgICAgYXRvbSBkb2VzIG5vdCBoYXBwZW5zLgorCisgICAgICAgICAgICAgICAg
ICBUaGUgZm9sbG93aW5nIHNjaGVtZSBzb2x2ZXMgdGhlIGRlYWRsb2NrOiBJZgorICAgICAgICAg
ICAgICAgICAgbG9uZ3Rlcm1fbG9ja196bm9kZSBsb2NrcyBhbmQgZG9lcyBub3QgY2FwdHVyZSBh
IHpub2RlLCB0aGF0CisgICAgICAgICAgICAgICAgICB6bm9kZSBpcyBtYXJrZWQgYXMgTUlTU0VE
X0lOX0NBUFRVUkUuICBBIG5vZGUgbWFya2VkIHRoaXMgd2F5CisgICAgICAgICAgICAgICAgICBp
cyBwcm9jZXNzZWQgYnkgdGhlIGNvZGUgYmVsb3cgd2hpY2ggcmVzdG9yZXMgdGhlIG1pc3NlZAor
ICAgICAgICAgICAgICAgICAgY2FwdHVyZSBhbmQgZnVzZXMgY3VycmVudCBhdG9tcyBvZiBhbGwg
dGhlIG5vZGUgbG9jayBvd25lcnMKKyAgICAgICAgICAgICAgICAgIGJ5IGNhbGxpbmcgdGhlIGZ1
c2Vfbm90X2Z1c2VkX2xvY2tfb3duZXJzKCkgZnVuY3Rpb24uICovCisJCWlmIChKRl9JU1NFVChu
b2RlLCBKTk9ERV9NSVNTRURfSU5fQ0FQVFVSRSkpIHsKKwkJCUpGX0NMUihub2RlLCBKTk9ERV9N
SVNTRURfSU5fQ0FQVFVSRSk7CisJCQlpZiAoam5vZGVfaXNfem5vZGUobm9kZSkgJiYgem5vZGVf
aXNfbG9ja2VkKEpaTk9ERShub2RlKSkpIHsKKwkJCQlzcGluX3VubG9ja190eG5oKHR4bmgpOwor
CQkJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCQkJCWZ1c2Vfbm90X2Z1c2VkX2xvY2tfb3du
ZXJzKHR4bmgsIEpaTk9ERShub2RlKSk7CisJCQkJcmV0dXJuIFJFVEVSUigtRV9SRVBFQVQpOwor
CQkJfQorCQl9CisJCWlmIChibG9ja19hdG9tID09IE5VTEwpIHsKKwkJCWF0b21pY19pbmMoJnR4
bmhfYXRvbS0+cmVmY291bnQpOworCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJCWlmICgh
c3Bpbl90cnlsb2NrX2F0b20odHhuaF9hdG9tKSkgeworCQkJCXNwaW5fdW5sb2NrX2pub2RlKG5v
ZGUpOworCQkJCXNwaW5fbG9ja19hdG9tKHR4bmhfYXRvbSk7CisJCQkJc3Bpbl9sb2NrX2pub2Rl
KG5vZGUpOworCQkJfQorCQkJaWYgKHR4bmgtPmF0b20gIT0gdHhuaF9hdG9tIHx8IG5vZGUtPmF0
b20gIT0gTlVMTAorCQkJCXx8IEpGX0lTU0VUKG5vZGUsIEpOT0RFX0lTX0RZSU5HKSkgeworCQkJ
CXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCQkJCWF0b21fZGVjX2FuZF91bmxvY2sodHhuaF9h
dG9tKTsKKwkJCQlyZXR1cm4gUkVURVJSKC1FX1JFUEVBVCk7CisJCQl9CisJCQlhdG9taWNfZGVj
KCZ0eG5oX2F0b20tPnJlZmNvdW50KTsKKwkJCWNhcHR1cmVfYXNzaWduX2Jsb2NrX25vbG9jayh0
eG5oX2F0b20sIG5vZGUpOworCQkJc3Bpbl91bmxvY2tfYXRvbSh0eG5oX2F0b20pOworCQl9IGVs
c2UgeworCQkJaWYgKHR4bmhfYXRvbSAhPSBibG9ja19hdG9tKSB7CisJCQkJaWYgKG1vZGUgJiBU
WE5fQ0FQVFVSRV9ET05UX0ZVU0UpIHsKKwkJCQkJc3Bpbl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJ
CQkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJCQkJCS8qIHdlIGFyZSBpbiBhICJuby1mdXNp
b24iIG1vZGUgYW5kIEBub2RlIGlzCisJCQkJCSAqIGFscmVhZHkgcGFydCBvZiB0cmFuc2FjdGlv
bi4gKi8KKwkJCQkJcmV0dXJuIFJFVEVSUigtRV9OT19ORUlHSEJPUik7CisJCQkJfQorCQkJCXJl
dHVybiBjYXB0dXJlX2luaXRfZnVzaW9uKG5vZGUsIHR4bmgsIG1vZGUpOworCQkJfQorCQkJc3Bp
bl91bmxvY2tfdHhuaCh0eG5oKTsKKwkJfQorCX0KKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHR4
bl9jYXB0dXJlCitidWlsZF9jYXB0dXJlX21vZGUoam5vZGUgKiBub2RlLCB6bm9kZV9sb2NrX21v
ZGUgbG9ja19tb2RlLCB0eG5fY2FwdHVyZSBmbGFncykKK3sKKwl0eG5fY2FwdHVyZSBjYXBfbW9k
ZTsKKworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJkKSk7CisKKwkvKiBGSVhNRV9K
TUFDRCBObyB3YXkgdG8gc2V0IFRYTl9DQVBUVVJFX1JFQURfTU9ESUZZIHlldC4gKi8KKworCWlm
IChsb2NrX21vZGUgPT0gWk5PREVfV1JJVEVfTE9DSykgeworCQljYXBfbW9kZSA9IFRYTl9DQVBU
VVJFX1dSSVRFOworCX0gZWxzZSBpZiAobm9kZS0+YXRvbSAhPSBOVUxMKSB7CisJCWNhcF9tb2Rl
ID0gVFhOX0NBUFRVUkVfV1JJVEU7CisJfSBlbHNlIGlmICgwICYmCQkvKiB0eG5oLT5tb2RlID09
IFRYTl9SRUFEX0ZVU0lORyAmJiAqLworCQkgICBqbm9kZV9nZXRfbGV2ZWwobm9kZSkgPT0gTEVB
Rl9MRVZFTCkgeworCQkvKiBOT1RFLU5JS0lUQSBUWE5fUkVBRF9GVVNJTkcgaXMgbm90IGN1cnJl
bnRseSB1c2VkICovCisJCS8qIFdlIG9ubHkgbmVlZCBhIFJFQURfRlVTSU5HIGNhcHR1cmUgYXQg
dGhlIGxlYWYgbGV2ZWwuICBUaGlzCisJCSAgIGlzIGJlY2F1c2UgdGhlIGludGVybmFsIGxldmVs
cyBvZiB0aGUgdHJlZSAodHdpZ3MgaW5jbHVkZWQpCisJCSAgIGFyZSByZWR1bmRhbnQgZnJvbSB0
aGUgcG9pbnQgb2YgdGhlIHVzZXIgdGhhdCBhc2tlZCBmb3IgYQorCQkgICByZWFkLWZ1c2luZyB0
cmFuc2NyYXNoLiAgVGhlIHVzZXIgb25seSB3YW50cyB0byByZWFkLWZ1c2UKKwkJICAgYXRvbXMg
ZHVlIHRvIHJlYWRpbmcgdW5jb21taXR0ZWQgZGF0YSB0aGF0IGFub3RoZXIgdXNlciBoYXMKKwkJ
ICAgd3JpdHRlbi4gIEl0IGlzIHRoZSBmaWxlIHN5c3RlbSB0aGF0IHJlYWRzL3dyaXRlcyB0aGUK
KwkJICAgaW50ZXJuYWwgdHJlZSBsZXZlbHMsIHRoZSB1c2VyIG9ubHkgcmVhZHMvd3JpdGVzIGxl
YXZlcy4gKi8KKwkJY2FwX21vZGUgPSBUWE5fQ0FQVFVSRV9SRUFEX0FUT01JQzsKKwl9IGVsc2Ug
eworCQkvKiBJbiB0aGlzIGNhc2UgKHJlYWQgbG9jayBhdCBhIG5vbi1sZWFmKSB0aGVyZSdzIG5v
IHJlYXNvbiB0bworCQkgKiBjYXB0dXJlLiAqLworCQkvKiBjYXBfbW9kZSA9IFRYTl9DQVBUVVJF
X1JFQURfTk9OQ09NOyAqLworCQlyZXR1cm4gMDsKKwl9CisKKwljYXBfbW9kZSB8PSAoZmxhZ3Mg
JiAoVFhOX0NBUFRVUkVfTk9OQkxPQ0tJTkcgfCBUWE5fQ0FQVFVSRV9ET05UX0ZVU0UpKTsKKwlh
c3NlcnQoIm5pa2l0YS0zMTg2IiwgY2FwX21vZGUgIT0gMCk7CisJcmV0dXJuIGNhcF9tb2RlOwor
fQorCisvKiBUaGlzIGlzIGFuIGV4dGVybmFsIGludGVyZmFjZSB0byB0cnlfY2FwdHVyZV9ibG9j
aygpLCBpdCBjYWxscworICAgdHJ5X2NhcHR1cmVfYmxvY2soKSByZXBlYXRlZGx5IGFzIGxvbmcg
YXMgLUVfUkVQRUFUIGlzIHJldHVybmVkLgorCisgICBAbm9kZTogICAgICAgICBub2RlIHRvIGNh
cHR1cmUsCisgICBAbG9ja19tb2RlOiAgICByZWFkIG9yIHdyaXRlIGxvY2sgaXMgdXNlZCBpbiBj
YXB0dXJlIG1vZGUgY2FsY3VsYXRpb24sCisgICBAZmxhZ3M6ICAgICAgICBzZWUgdHhuX2NhcHR1
cmUgZmxhZ3MgZW51bWVyYXRpb24sCisgICBAY2FuX2NvYyAgICAgOiBjYW4gY29weS1vbi1jYXB0
dXJlCisKKyAgIEByZXR1cm46IDAgLSBub2RlIHdhcyBzdWNjZXNzZnVsbHkgY2FwdHVyZWQsIC1F
X1JFUEVBVCAtIGNhcHR1cmUgcmVxdWVzdAorICAgICAgICAgICAgY2Fubm90IGJlIHByb2Nlc3Nl
ZCBpbW1lZGlhdGVseSBhcyBpdCB3YXMgcmVxdWVzdGVkIGluIGZsYWdzLAorCSAgICA8IDAgLSBv
dGhlciBlcnJvcnMuCisqLworaW50IHJlaXNlcjRfdHJ5X2NhcHR1cmUoam5vZGUgKm5vZGUsIHpu
b2RlX2xvY2tfbW9kZSBsb2NrX21vZGUsCisJCQl0eG5fY2FwdHVyZSBmbGFncykKK3sKKwl0eG5f
YXRvbSAqYXRvbV9hbGxvYyA9IE5VTEw7CisJdHhuX2NhcHR1cmUgY2FwX21vZGU7CisJdHhuX2hh
bmRsZSAqdHhuaCA9IGdldF9jdXJyZW50X2NvbnRleHQoKS0+dHJhbnM7CisJaW50IHJldDsKKwor
CWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJkKSk7CisKKyAgICAgIHJlcGVhdDoKKwlp
ZiAoSkZfSVNTRVQobm9kZSwgSk5PREVfSVNfRFlJTkcpKQorCQlyZXR1cm4gUkVURVJSKC1FSU5W
QUwpOworCWlmIChub2RlLT5hdG9tICE9IE5VTEwgJiYgdHhuaC0+YXRvbSA9PSBub2RlLT5hdG9t
KQorCQlyZXR1cm4gMDsKKwljYXBfbW9kZSA9IGJ1aWxkX2NhcHR1cmVfbW9kZShub2RlLCBsb2Nr
X21vZGUsIGZsYWdzKTsKKwlpZiAoY2FwX21vZGUgPT0gMCB8fAorCSAgICAoIShjYXBfbW9kZSAm
IFRYTl9DQVBUVVJFX1dUWVBFUykgJiYgbm9kZS0+YXRvbSA9PSBOVUxMKSkgeworCQkvKiBNYXJr
IHRoaXMgbm9kZSBhcyAiTUlTU0VEIi4gIEl0IGhlbHBzIGluIGZ1cnRoZXIgZGVhZGxvY2sKKwkJ
ICogYW5hbHlzaXMgKi8KKwkJaWYgKGpub2RlX2lzX3pub2RlKG5vZGUpKQorCQkJSkZfU0VUKG5v
ZGUsIEpOT0RFX01JU1NFRF9JTl9DQVBUVVJFKTsKKwkJcmV0dXJuIDA7CisJfQorCS8qIFJlcGVh
dCB0cnlfY2FwdHVyZSBhcyBsb25nIGFzIC1FX1JFUEVBVCBpcyByZXR1cm5lZC4gKi8KKwlyZXQg
PSB0cnlfY2FwdHVyZV9ibG9jayh0eG5oLCBub2RlLCBjYXBfbW9kZSwgJmF0b21fYWxsb2MpOwor
CS8qIFJlZ2FyZGxlc3Mgb2Ygbm9uX2Jsb2NraW5nOgorCisJICAgSWYgcmV0ID09IDAgdGhlbiBq
bm9kZSBpcyBzdGlsbCBsb2NrZWQuCisJICAgSWYgcmV0ICE9IDAgdGhlbiBqbm9kZSBpcyB1bmxv
Y2tlZC4KKwkgKi8KKyNpZiBSRUlTRVI0X0RFQlVHCisJaWYgKHJldCA9PSAwKQorCQlhc3NlcnRf
c3Bpbl9sb2NrZWQoJihub2RlLT5ndWFyZCkpOworCWVsc2UKKwkJYXNzZXJ0X3NwaW5fbm90X2xv
Y2tlZCgmKG5vZGUtPmd1YXJkKSk7CisjZW5kaWYKKwlhc3NlcnRfc3Bpbl9ub3RfbG9ja2VkKCYo
dHhuaC0+Z3VhcmQpKTsKKworCWlmIChyZXQgPT0gLUVfUkVQRUFUKSB7CisJCS8qIEVfUkVQRUFU
IGltcGxpZXMgYWxsIGxvY2tzIHdlcmUgcmVsZWFzZWQsIHRoZXJlZm9yZSB3ZSBuZWVkCisJCSAg
IHRvIHRha2UgdGhlIGpub2RlJ3MgbG9jayBhZ2Fpbi4gKi8KKwkJc3Bpbl9sb2NrX2pub2RlKG5v
ZGUpOworCisJCS8qIEFsdGhvdWdoIHRoaXMgbWF5IGFwcGVhciB0byBiZSBhIGJ1c3kgbG9vcCwg
aXQgaXMgbm90LgorCQkgICBUaGVyZSBhcmUgc2V2ZXJhbCBjb25kaXRpb25zIHRoYXQgY2F1c2Ug
RV9SRVBFQVQgdG8gYmUKKwkJICAgcmV0dXJuZWQgYnkgdGhlIGNhbGwgdG8gdHJ5X2NhcHR1cmVf
YmxvY2ssIGFsbCBjYXNlcworCQkgICBpbmRpY2F0aW5nIHNvbWUga2luZCBvZiBzdGF0ZSBjaGFu
Z2UgdGhhdCBtZWFucyB5b3Ugc2hvdWxkCisJCSAgIHJldHJ5IHRoZSByZXF1ZXN0IGFuZCB3aWxs
IGdldCBhIGRpZmZlcmVudCByZXN1bHQuICBJbiBzb21lCisJCSAgIGNhc2VzIHRoaXMgY291bGQg
YmUgYXZvaWRlZCB3aXRoIHNvbWUgZXh0cmEgY29kZSwgYnV0CisJCSAgIGdlbmVyYWxseSBpdCBp
cyBkb25lIGJlY2F1c2UgdGhlIG5lY2Vzc2FyeSBsb2NrcyB3ZXJlCisJCSAgIHJlbGVhc2VkIGFz
IGEgcmVzdWx0IG9mIHRoZSBvcGVyYXRpb24gYW5kIHJlcGVhdGluZyBpcyB0aGUKKwkJICAgc2lt
cGxlc3QgdGhpbmcgdG8gZG8gKGxlc3MgYnVnIHBvdGVudGlhbCkuICBUaGUgY2FzZXMgYXJlOgor
CQkgICBhdG9tIGZ1c2lvbiByZXR1cm5zIEVfUkVQRUFUIGFmdGVyIGl0IGNvbXBsZXRlcyAoam5v
ZGUgYW5kCisJCSAgIHR4bmggd2VyZSB1bmxvY2tlZCk7IHJhY2UgY29uZGl0aW9ucyBpbiBhc3Np
Z25fYmxvY2ssCisJCSAgIGFzc2lnbl90eG5oLCBhbmQgaW5pdF9mdXNpb24gcmV0dXJuIEVfUkVQ
RUFUICh0cnlsb2NrCisJCSAgIGZhaWx1cmUpOyBhZnRlciBnb2luZyB0byBzbGVlcCBpbiBjYXB0
dXJlX2Z1c2Vfd2FpdAorCQkgICAocmVxdWVzdCB3YXMgYmxvY2tlZCBidXQgbWF5IG5vdyBzdWNj
ZWVkKS4gIEknbSBub3QgcXVpdGUKKwkJICAgc3VyZSBob3cgY2FwdHVyZV9jb3B5IHdvcmtzIHll
dCwgYnV0IGl0IG1heSBhbHNvIHJldHVybgorCQkgICBFX1JFUEVBVC4gIFdoZW4gdGhlIHJlcXVl
c3QgaXMgbGVnaXRpbWF0ZWx5IGJsb2NrZWQsIHRoZQorCQkgICByZXF1ZXN0b3IgZ29lcyB0byBz
bGVlcCBpbiBmdXNlX3dhaXQsIHNvIHRoaXMgaXMgbm90IGEgYnVzeQorCQkgICBsb29wLiAqLwor
CQkvKiBOT1RFLU5JS0lUQTogc3RpbGwgZG9uJ3QgdW5kZXJzdGFuZDoKKworCQkgICB0cnlfY2Fw
dHVyZV9ibG9jay0+Y2FwdHVyZV9hc3NpZ25fdHhuaC0+c3Bpbl90cnlsb2NrX2F0b20tPkVfUkVQ
RUFUCisKKwkJICAgbG9va3MgbGlrZSBidXN5IGxvb3A/CisJCSAqLworCQlnb3RvIHJlcGVhdDsK
Kwl9CisKKwkvKiBmcmVlIGV4dHJhIGF0b20gb2JqZWN0IHRoYXQgd2FzIHBvc3NpYmx5IGFsbG9j
YXRlZCBieQorCSAgIHRyeV9jYXB0dXJlX2Jsb2NrKCkuCisKKwkgICBEbyB0aGlzIGJlZm9yZSBh
Y3F1aXJpbmcgam5vZGUgc3BpbiBsb2NrIHRvCisJICAgbWluaW1pemUgdGltZSBzcGVudCB1bmRl
ciBsb2NrLiAtLW5pa2l0YSAqLworCWlmIChhdG9tX2FsbG9jICE9IE5VTEwpIHsKKwkJa21lbV9j
YWNoZV9mcmVlKF9hdG9tX3NsYWIsIGF0b21fYWxsb2MpOworCX0KKworCWlmIChyZXQgIT0gMCkg
eworCQlpZiAocmV0ID09IC1FX0JMT0NLKSB7CisJCQlhc3NlcnQoIm5pa2l0YS0zMzYwIiwKKwkJ
CSAgICAgICBjYXBfbW9kZSAmIFRYTl9DQVBUVVJFX05PTkJMT0NLSU5HKTsKKwkJCXJldCA9IC1F
X1JFUEVBVDsKKwkJfQorCisJCS8qIEZhaWx1cmUgbWVhbnMgam5vZGUgaXMgbm90IGxvY2tlZC4g
IEZJWE1FX0xBVEVSX0pNQUNEIE1heQorCQkgICB3YW50IHRvIGZpeCB0aGUgYWJvdmUgY29kZSB0
byBhdm9pZCByZWxlYXNpbmcgdGhlIGxvY2sgYW5kCisJCSAgIHJlLWFjcXVpcmluZyBpdCwgYnV0
IHRoZXJlIGFyZSBjYXNlcyB3ZXJlIGZhaWx1cmUgb2NjdXJzCisJCSAgIHdoZW4gdGhlIGxvY2sg
aXMgbm90IGhlbGQsIGFuZCB0aG9zZSBjYXNlcyB3b3VsZCBuZWVkIHRvIGJlCisJCSAgIG1vZGlm
aWVkIHRvIHJlLXRha2UgdGhlIGxvY2suICovCisJCXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwl9
CisKKwkvKiBKbm9kZSBpcyBzdGlsbCBsb2NrZWQuICovCisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYo
bm9kZS0+Z3VhcmQpKTsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgdm9pZCByZWxlYXNlX3R3
b19hdG9tcyh0eG5fYXRvbSAqb25lLCB0eG5fYXRvbSAqdHdvKQoreworCXNwaW5fdW5sb2NrX2F0
b20ob25lKTsKKwlhdG9tX2RlY19hbmRfdW5sb2NrKHR3byk7CisJc3Bpbl9sb2NrX2F0b20ob25l
KTsKKwlhdG9tX2RlY19hbmRfdW5sb2NrKG9uZSk7Cit9CisKKy8qIFRoaXMgZnVuY3Rpb24gc2V0
cyB1cCBhIGNhbGwgdG8gdHJ5X2NhcHR1cmVfYmxvY2sgYW5kIHJlcGVhdHMgYXMgbG9uZyBhcyAt
RV9SRVBFQVQgaXMKKyAgIHJldHVybmVkIGJ5IHRoYXQgcm91dGluZS4gIFRoZSB0eG5fY2FwdHVy
ZSByZXF1ZXN0IG1vZGUgaXMgY29tcHV0ZWQgaGVyZSBkZXBlbmRpbmcgb24KKyAgIHRoZSB0cmFu
c2FjdGlvbiBoYW5kbGUncyB0eXBlIGFuZCB0aGUgbG9jayByZXF1ZXN0LiAgVGhpcyBpcyBjYWxs
ZWQgZnJvbSB0aGUgZGVwdGhzIG9mCisgICB0aGUgbG9jayBtYW5hZ2VyIHdpdGggdGhlIGpub2Rl
IGxvY2sgaGVsZCBhbmQgaXQgYWx3YXlzIHJldHVybnMgd2l0aCB0aGUgam5vZGUgbG9jaworICAg
aGVsZC4KKyovCisKKy8qIGZ1c2UgYWxsICdhY3RpdmUnIGF0b21zIG9mIGxvY2sgb3duZXJzIG9m
IGdpdmVuIG5vZGUuICovCitzdGF0aWMgdm9pZCBmdXNlX25vdF9mdXNlZF9sb2NrX293bmVycyh0
eG5faGFuZGxlICogdHhuaCwgem5vZGUgKiBub2RlKQoreworCWxvY2tfaGFuZGxlICpsaDsKKwlp
bnQgcmVwZWF0OworCXR4bl9hdG9tICphdG9taCwgKmF0b21mOworCXJlaXNlcjRfY29udGV4dCAq
bWUgPSBnZXRfY3VycmVudF9jb250ZXh0KCk7CisJcmVpc2VyNF9jb250ZXh0ICpjdHggPSBOVUxM
OworCisJYXNzZXJ0X3NwaW5fbm90X2xvY2tlZCgmKFpKTk9ERShub2RlKS0+Z3VhcmQpKTsKKwlh
c3NlcnRfc3Bpbl9ub3RfbG9ja2VkKCYodHhuaC0+aGxvY2spKTsKKworIHJlcGVhdDoKKwlyZXBl
YXQgPSAwOworCWF0b21oID0gdHhuaF9nZXRfYXRvbSh0eG5oKTsKKwlzcGluX3VubG9ja190eG5o
KHR4bmgpOworCWFzc2VydCgiemFtLTY5MiIsIGF0b21oICE9IE5VTEwpOworCisJc3Bpbl9sb2Nr
X3psb2NrKCZub2RlLT5sb2NrKTsKKwkvKiBpbnNwZWN0IGxpc3Qgb2YgbG9jayBvd25lcnMgKi8K
KwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGxoLCAmbm9kZS0+bG9jay5vd25lcnMsIG93bmVyc19saW5r
KSB7CisJCWN0eCA9IGdldF9jb250ZXh0X2J5X2xvY2tfc3RhY2sobGgtPm93bmVyKTsKKwkJaWYg
KGN0eCA9PSBtZSkKKwkJCWNvbnRpbnVlOworCQkvKiBiZWxvdyB3ZSB1c2UgdHdvIGFzc3VtcHRp
b25zIHRvIGF2b2lkIGFkZGl0aW9uIHNwaW4tbG9ja3MKKwkJICAgZm9yIGNoZWNraW5nIHRoZSBj
b25kaXRpb24gOgorCisJCSAgIDEpIGlmIHRoZSBsb2NrIHN0YWNrIGhhcyBsb2NrLCB0aGUgdHJh
bnNhY3Rpb24gc2hvdWxkIGJlCisJCSAgIG9wZW5lZCwgaS5lLiBjdHgtPnRyYW5zICE9IE5VTEw7
CisKKwkJICAgMikgcmVhZGluZyBvZiB3ZWxsLWFsaWduZWQgY3R4LT50cmFucy0+YXRvbSBpcyBh
dG9taWMsIGlmIGl0CisJCSAgIGVxdWFscyB0byB0aGUgYWRkcmVzcyBvZiBzcGluLWxvY2tlZCBh
dG9taCwgd2UgdGFrZSB0aGF0CisJCSAgIHRoZSBhdG9tcyBhcmUgdGhlIHNhbWUsIG5vdGhpbmcg
aGFzIHRvIGJlIGNhcHR1cmVkLiAqLworCQlpZiAoYXRvbWggIT0gY3R4LT50cmFucy0+YXRvbSkg
eworCQkJcmVpc2VyNF93YWtlX3VwKGxoLT5vd25lcik7CisJCQlyZXBlYXQgPSAxOworCQkJYnJl
YWs7CisJCX0KKwl9CisJaWYgKHJlcGVhdCkgeworCQlpZiAoIXNwaW5fdHJ5bG9ja190eG5oKGN0
eC0+dHJhbnMpKSB7CisJCQlzcGluX3VubG9ja196bG9jaygmbm9kZS0+bG9jayk7CisJCQlzcGlu
X3VubG9ja19hdG9tKGF0b21oKTsKKwkJCWdvdG8gcmVwZWF0OworCQl9CisJCWF0b21mID0gY3R4
LT50cmFucy0+YXRvbTsKKwkJaWYgKGF0b21mID09IE5VTEwpIHsKKwkJCWNhcHR1cmVfYXNzaWdu
X3R4bmhfbm9sb2NrKGF0b21oLCBjdHgtPnRyYW5zKTsKKwkJCS8qIHJlbGVhc2UgemxvY2sgbG9j
ayBfYWZ0ZXJfIGFzc2lnbmluZyB0aGUgYXRvbSB0byB0aGUKKwkJCSAqIHRyYW5zYWN0aW9uIGhh
bmRsZSwgb3RoZXJ3aXNlIHRoZSBsb2NrIG93bmVyIHRocmVhZAorCQkJICogbWF5IHVubG9jayBh
bGwgem5vZGVzLCBleGl0IGtlcm5lbCBjb250ZXh0IGFuZCBoZXJlCisJCQkgKiB3ZSB3b3VsZCBh
Y2Nlc3MgYW4gaW52YWxpZCB0cmFuc2FjdGlvbiBoYW5kbGUuICovCisJCQlzcGluX3VubG9ja196
bG9jaygmbm9kZS0+bG9jayk7CisJCQlzcGluX3VubG9ja19hdG9tKGF0b21oKTsKKwkJCXNwaW5f
dW5sb2NrX3R4bmgoY3R4LT50cmFucyk7CisJCQlnb3RvIHJlcGVhdDsKKwkJfQorCQlhc3NlcnQo
InphbS0xMDU5IiwgYXRvbWYgIT0gYXRvbWgpOworCQlzcGluX3VubG9ja196bG9jaygmbm9kZS0+
bG9jayk7CisJCWF0b21pY19pbmMoJmF0b21oLT5yZWZjb3VudCk7CisJCWF0b21pY19pbmMoJmF0
b21mLT5yZWZjb3VudCk7CisJCXNwaW5fdW5sb2NrX3R4bmgoY3R4LT50cmFucyk7CisJCWlmIChh
dG9tZiA+IGF0b21oKSB7CisJCQlzcGluX2xvY2tfYXRvbV9uZXN0ZWQoYXRvbWYpOworCQl9IGVs
c2UgeworCQkJc3Bpbl91bmxvY2tfYXRvbShhdG9taCk7CisJCQlzcGluX2xvY2tfYXRvbShhdG9t
Zik7CisJCQlzcGluX2xvY2tfYXRvbV9uZXN0ZWQoYXRvbWgpOworCQl9CisJCWlmIChhdG9taCA9
PSBhdG9tZiB8fCAhYXRvbV9pc29wZW4oYXRvbWgpIHx8ICFhdG9tX2lzb3BlbihhdG9tZikpIHsK
KwkJCXJlbGVhc2VfdHdvX2F0b21zKGF0b21mLCBhdG9taCk7CisJCQlnb3RvIHJlcGVhdDsKKwkJ
fQorCQlhdG9taWNfZGVjKCZhdG9taC0+cmVmY291bnQpOworCQlhdG9taWNfZGVjKCZhdG9tZi0+
cmVmY291bnQpOworCQljYXB0dXJlX2Z1c2VfaW50byhhdG9tZiwgYXRvbWgpOworCQlnb3RvIHJl
cGVhdDsKKwl9CisJc3Bpbl91bmxvY2tfemxvY2soJm5vZGUtPmxvY2spOworCXNwaW5fdW5sb2Nr
X2F0b20oYXRvbWgpOworfQorCisvKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgdG8gY2FwdHVyZSB1
bmZvcm1hdHRlZCBub2RlcyB2aWEgdGhlaXIgc3RydWN0IHBhZ2UKKyAgIHJlZmVyZW5jZS4gQ3Vy
cmVudGx5IGl0IGlzIG9ubHkgdXNlZCBpbiByZWlzZXI0X2ludmFsaWRhdGVwYWdlICovCitpbnQg
dHJ5X2NhcHR1cmVfcGFnZV90b19pbnZhbGlkYXRlKHN0cnVjdCBwYWdlICpwZykKK3sKKwlpbnQg
cmV0OworCWpub2RlICpub2RlOworCisJYXNzZXJ0KCJ1bWthLTI5MiIsIHBnICE9IE5VTEwpOwor
CWFzc2VydCgibmlraXRhLTI1OTciLCBQYWdlTG9ja2VkKHBnKSk7CisKKwlpZiAoSVNfRVJSKG5v
ZGUgPSBqbm9kZV9vZl9wYWdlKHBnKSkpIHsKKwkJcmV0dXJuIFBUUl9FUlIobm9kZSk7CisJfQor
CisJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCXVubG9ja19wYWdlKHBnKTsKKworCXJldCA9IHJl
aXNlcjRfdHJ5X2NhcHR1cmUobm9kZSwgWk5PREVfV1JJVEVfTE9DSywgMCk7CisJc3Bpbl91bmxv
Y2tfam5vZGUobm9kZSk7CisJanB1dChub2RlKTsKKwlsb2NrX3BhZ2UocGcpOworCXJldHVybiBy
ZXQ7Cit9CisKKy8qIFRoaXMgaW5mb3JtcyB0aGUgdHJhbnNhY3Rpb24gbWFuYWdlciB3aGVuIGEg
bm9kZSBpcyBkZWxldGVkLiAgQWRkIHRoZSBibG9jayB0byB0aGUKKyAgIGF0b20ncyBkZWxldGUg
c2V0IGFuZCB1bmNhcHR1cmUgdGhlIGJsb2NrLgorCitWUy1GSVhNRS1IQU5TOiB0aGlzIEVfUkVQ
RUFUIHBhcmFkaWdtIGNsdXR0ZXJzIHRoZSBjb2RlIGFuZCBjcmVhdGVzIGEgbmVlZCBmb3IKK2V4
cGxhbmF0aW9ucy4gIGZpbmQgYWxsIHRoZSBmdW5jdGlvbnMgdGhhdCB1c2UgaXQsIGFuZCB1bmxl
c3MgdGhlcmUgaXMgc29tZSB2ZXJ5Citnb29kIHJlYXNvbiB0byB1c2UgaXQgKEkgaGF2ZSBub3Qg
bm90aWNlZCBvbmUgc28gZmFyIGFuZCBJIGRvdWJ0IGl0IGV4aXN0cywgYnV0IG1heWJlIHNvbWV3
aGVyZSBzb21laG93Li4uLiksCittb3ZlIHRoZSBsb29wIHRvIGluc2lkZSB0aGUgZnVuY3Rpb24u
CisKK1ZTLUZJWE1FLUhBTlM6IGNhbiB0aGlzIGNvZGUgYmUgYXQgYWxsIHN0cmVhbWxpbmVkPyAg
SW4gcGFydGljdWxhciwgY2FuIHlvdSBsb2NrIGFuZCB1bmxvY2sgdGhlIGpub2RlIGZld2VyIHRp
bWVzPworICAqLwordm9pZCByZWlzZXI0X3VuY2FwdHVyZV9wYWdlKHN0cnVjdCBwYWdlICpwZykK
K3sKKwlqbm9kZSAqbm9kZTsKKwl0eG5fYXRvbSAqYXRvbTsKKworCWFzc2VydCgidW1rYS0xOTki
LCBwZyAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0zMTU1IiwgUGFnZUxvY2tlZChwZykpOwor
CisJY2xlYXJfcGFnZV9kaXJ0eV9mb3JfaW8ocGcpOworCisJcmVpc2VyNF93YWl0X3BhZ2Vfd3Jp
dGViYWNrKHBnKTsKKworCW5vZGUgPSBqcHJpdmF0ZShwZyk7CisJQlVHX09OKG5vZGUgPT0gTlVM
TCk7CisKKwlzcGluX2xvY2tfam5vZGUobm9kZSk7CisKKwlhdG9tID0gam5vZGVfZ2V0X2F0b20o
bm9kZSk7CisJaWYgKGF0b20gPT0gTlVMTCkgeworCQlhc3NlcnQoImptYWNkLTcxMTEiLCAhSkZf
SVNTRVQobm9kZSwgSk5PREVfRElSVFkpKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJ
CXJldHVybjsKKwl9CisKKwkvKiBXZSBjYW4gcmVtb3ZlIGpub2RlIGZyb20gdHJhbnNhY3Rpb24g
ZXZlbiBpZiBpdCBpcyBvbiBmbHVzaCBxdWV1ZQorCSAqIHByZXBwZWQgbGlzdCwgd2Ugb25seSBu
ZWVkIHRvIGJlIHN1cmUgdGhhdCBmbHVzaCBxdWV1ZSBpcyBub3QgYmVpbmcKKwkgKiB3cml0dGVu
IGJ5IHJlaXNlcjRfd3JpdGVfZnEoKS4gIHJlaXNlcjRfd3JpdGVfZnEoKSBkb2VzIG5vdCB1c2Ug
YXRvbQorCSAqIHNwaW4gbG9jayBmb3IgcHJvdGVjdGlvbiBvZiB0aGUgcHJlcHBlZCBub2RlcyBs
aXN0LCBpbnN0ZWFkCisJICogd3JpdGVfZnEoKSBpbmNyZW1lbnRzIGF0b20ncyBucl9ydW5uaW5n
X3F1ZXVlcyBjb3VudGVycyBmb3IgdGhlIHRpbWUKKwkgKiB3aGVuIHByZXBwZWQgbGlzdCBpcyBu
b3QgcHJvdGVjdGVkIGJ5IHNwaW4gbG9jay4gIEhlcmUgd2UgY2hlY2sgdGhpcworCSAqIGNvdW50
ZXIgaWYgd2Ugd2FudCB0byByZW1vdmUgam5vZGUgZnJvbSBmbHVzaCBxdWV1ZSBhbmQsIGlmIHRo
ZQorCSAqIGNvdW50ZXIgaXMgbm90IHplcm8sIHdhaXQgYWxsIHJlaXNlcjRfd3JpdGVfZnEoKSBm
b3IgdGhpcyBhdG9tIHRvCisJICogY29tcGxldGUuIFRoaXMgaXMgbm90IHNpZ25pZmljYW50IG92
ZXJoZWFkLiAqLworCXdoaWxlIChKRl9JU1NFVChub2RlLCBKTk9ERV9GTFVTSF9RVUVVRUQpICYm
IGF0b20tPm5yX3J1bm5pbmdfcXVldWVzKSB7CisJCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOwor
CQkvKgorCQkgKiBhdCB0aGlzIG1vbWVudCB3ZSB3YW50IHRvIHdhaXQgZm9yICJhdG9tIGV2ZW50
Iiwgdml6LiB3YWl0CisJCSAqIHVudGlsIEBub2RlIGNhbiBiZSByZW1vdmVkIGZyb20gZmx1c2gg
cXVldWUuIEJ1dAorCQkgKiByZWlzZXI0X2F0b21fd2FpdF9ldmVudCgpIGNhbm5vdCBiZSBjYWxs
ZWQgd2l0aCBwYWdlIGxvY2tlZCwKKwkJICogYmVjYXVzZSBpdCBkZWFkbG9ja3Mgd2l0aCBqbm9k
ZV9leHRlbnRfd3JpdGUoKS4gVW5sb2NrIHBhZ2UsCisJCSAqIGFmdGVyIG1ha2luZyBzdXJlICh0
aHJvdWdoIGdldF9wYWdlKCkpIHRoYXQgaXQgY2Fubm90CisJCSAqIGJlIHJlbGVhc2VkIGZyb20g
bWVtb3J5LgorCQkgKi8KKwkJZ2V0X3BhZ2UocGcpOworCQl1bmxvY2tfcGFnZShwZyk7CisJCXJl
aXNlcjRfYXRvbV93YWl0X2V2ZW50KGF0b20pOworCQlsb2NrX3BhZ2UocGcpOworCQkvKgorCQkg
KiBwYWdlIG1heSBoYXMgYmVlbiBkZXRhY2hlZCBieSAtPndyaXRlcGFnZSgpLT5yZWxlYXNlcGFn
ZSgpLgorCQkgKi8KKwkJcmVpc2VyNF93YWl0X3BhZ2Vfd3JpdGViYWNrKHBnKTsKKwkJc3Bpbl9s
b2NrX2pub2RlKG5vZGUpOworCQlwdXRfcGFnZShwZyk7CisJCWF0b20gPSBqbm9kZV9nZXRfYXRv
bShub2RlKTsKKy8qIFZTLUZJWE1FLUhBTlM6IGltcHJvdmUgdGhlIGNvbW1lbnRpbmcgaW4gdGhp
cyBmdW5jdGlvbiAqLworCQlpZiAoYXRvbSA9PSBOVUxMKSB7CisJCQlzcGluX3VubG9ja19qbm9k
ZShub2RlKTsKKwkJCXJldHVybjsKKwkJfQorCX0KKwlyZWlzZXI0X3VuY2FwdHVyZV9ibG9jayhu
b2RlKTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOworCWpwdXQobm9kZSk7Cit9CisKKy8qIHRo
aXMgaXMgdXNlZCBpbiBleHRlbnQncyBraWxsIGhvb2sgdG8gdW5jYXB0dXJlIGFuZCB1bmhhc2gg
am5vZGVzIGF0dGFjaGVkIHRvCisgKiBpbm9kZSdzIHRyZWUgb2Ygam5vZGVzICovCit2b2lkIHJl
aXNlcjRfdW5jYXB0dXJlX2pub2RlKGpub2RlICogbm9kZSkKK3sKKwl0eG5fYXRvbSAqYXRvbTsK
KworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJkKSk7CisJYXNzZXJ0KCIiLCBub2Rl
LT5wZyA9PSAwKTsKKworCWF0b20gPSBqbm9kZV9nZXRfYXRvbShub2RlKTsKKwlpZiAoYXRvbSA9
PSBOVUxMKSB7CisJCWFzc2VydCgiam1hY2QtNzExMSIsICFKRl9JU1NFVChub2RlLCBKTk9ERV9E
SVJUWSkpOworCQlzcGluX3VubG9ja19qbm9kZShub2RlKTsKKwkJcmV0dXJuOworCX0KKworCXJl
aXNlcjRfdW5jYXB0dXJlX2Jsb2NrKG5vZGUpOworCXNwaW5fdW5sb2NrX2F0b20oYXRvbSk7CisJ
anB1dChub2RlKTsKK30KKworLyogTm8tbG9ja2luZyB2ZXJzaW9uIG9mIGFzc2lnbl90eG5oLiAg
U2V0cyB0aGUgdHJhbnNhY3Rpb24gaGFuZGxlJ3MgYXRvbSBwb2ludGVyLAorICAgaW5jcmVhc2Vz
IGF0b20gcmVmY291bnQgYW5kIHR4bmhfY291bnQsIGFkZHMgdG8gdHhuaF9saXN0LiAqLworc3Rh
dGljIHZvaWQgY2FwdHVyZV9hc3NpZ25fdHhuaF9ub2xvY2sodHhuX2F0b20gKmF0b20sIHR4bl9o
YW5kbGUgKnR4bmgpCit7CisJYXNzZXJ0KCJ1bWthLTIwMCIsIGF0b20gIT0gTlVMTCk7CisJYXNz
ZXJ0KCJ1bWthLTIwMSIsIHR4bmggIT0gTlVMTCk7CisKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJih0
eG5oLT5obG9jaykpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKGF0b20tPmFsb2NrKSk7CisJYXNz
ZXJ0KCJqbWFjZC04MjQiLCB0eG5oLT5hdG9tID09IE5VTEwpOworCWFzc2VydCgibmlraXRhLTM1
NDAiLCBhdG9tX2lzb3BlbihhdG9tKSk7CisJQlVHX09OKHR4bmgtPmF0b20gIT0gTlVMTCk7CisK
KwlhdG9taWNfaW5jKCZhdG9tLT5yZWZjb3VudCk7CisJdHhuaC0+YXRvbSA9IGF0b207CisJcmVp
c2VyNF9jdHhfZ2ZwX21hc2tfc2V0KCk7CisJbGlzdF9hZGRfdGFpbCgmdHhuaC0+dHhuaF9saW5r
LCAmYXRvbS0+dHhuaF9saXN0KTsKKwlhdG9tLT50eG5oX2NvdW50ICs9IDE7Cit9CisKKy8qIE5v
LWxvY2tpbmcgdmVyc2lvbiBvZiBhc3NpZ25fYmxvY2suICBTZXRzIHRoZSBibG9jaydzIGF0b20g
cG9pbnRlciwgcmVmZXJlbmNlcyB0aGUKKyAgIGJsb2NrLCBhZGRzIGl0IHRvIHRoZSBjbGVhbiBv
ciBkaXJ0eSBjYXB0dXJlX2pub2RlIGxpc3QsIGluY3JlbWVudHMgY2FwdHVyZV9jb3VudC4gKi8K
K3N0YXRpYyB2b2lkIGNhcHR1cmVfYXNzaWduX2Jsb2NrX25vbG9jayh0eG5fYXRvbSAqYXRvbSwg
am5vZGUgKm5vZGUpCit7CisJYXNzZXJ0KCJ1bWthLTIwMiIsIGF0b20gIT0gTlVMTCk7CisJYXNz
ZXJ0KCJ1bWthLTIwMyIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9k
ZS0+Z3VhcmQpKTsKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihhdG9tLT5hbG9jaykpOworCWFzc2Vy
dCgiam1hY2QtMzIzIiwgbm9kZS0+YXRvbSA9PSBOVUxMKTsKKwlCVUdfT04oIWxpc3RfZW1wdHlf
Y2FyZWZ1bCgmbm9kZS0+Y2FwdHVyZV9saW5rKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzQ3MCIsICFK
Rl9JU1NFVChub2RlLCBKTk9ERV9ESVJUWSkpOworCisJLyogUG9pbnRlciBmcm9tIGpub2RlIHRv
IGF0b20gaXMgbm90IGNvdW50ZWQgaW4gYXRvbS0+cmVmY291bnQuICovCisJbm9kZS0+YXRvbSA9
IGF0b207CisKKwlsaXN0X2FkZF90YWlsKCZub2RlLT5jYXB0dXJlX2xpbmssIEFUT01fQ0xFQU5f
TElTVChhdG9tKSk7CisJYXRvbS0+Y2FwdHVyZV9jb3VudCArPSAxOworCS8qIHJlZmVyZW5jZSB0
byBqbm9kZSBpcyBhY3F1aXJlZCBieSBhdG9tLiAqLworCWpyZWYobm9kZSk7CisKKwlPTl9ERUJV
Ryhjb3VudF9qbm9kZShhdG9tLCBub2RlLCBOT1RfQ0FQVFVSRUQsIENMRUFOX0xJU1QsIDEpKTsK
KworCUxPQ0tfQ05UX0lOQyh0X3JlZnMpOworfQorCisvKiBjb21tb24gY29kZSBmb3IgZGlydHlp
bmcgYm90aCB1bmZvcm1hdHRlZCBqbm9kZXMgYW5kIGZvcm1hdHRlZCB6bm9kZXMuICovCitzdGF0
aWMgdm9pZCBkb19qbm9kZV9tYWtlX2RpcnR5KGpub2RlICogbm9kZSwgdHhuX2F0b20gKiBhdG9t
KQoreworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5vZGUtPmd1YXJkKSk7CisJYXNzZXJ0X3NwaW5f
bG9ja2VkKCYoYXRvbS0+YWxvY2spKTsKKwlhc3NlcnQoImptYWNkLTM5ODEiLCAhSkZfSVNTRVQo
bm9kZSwgSk5PREVfRElSVFkpKTsKKworCUpGX1NFVChub2RlLCBKTk9ERV9ESVJUWSk7CisKKwlp
ZiAoIUpGX0lTU0VUKG5vZGUsIEpOT0RFX0NMVVNURVJfUEFHRSkpCisJCWdldF9jdXJyZW50X2Nv
bnRleHQoKS0+bnJfbWFya2VkX2RpcnR5Kys7CisKKwkvKiBXZSBncmFiMmZsdXNoX3Jlc2VydmUg
b25lIGFkZGl0aW9uYWwgYmxvY2sgb25seSBpZiBub2RlIHdhcworCSAgIG5vdCBDUkVBVEVEIGFu
ZCBqbm9kZV9mbHVzaCBkaWQgbm90IHNvcnQgaXQgaW50byBuZWl0aGVyCisJICAgcmVsb2NhdGUg
c2V0IG5vciBvdmVyd3JpdGUgb25lLiBJZiBub2RlIGlzIGluIG92ZXJ3cml0ZSBvcgorCSAgIHJl
bG9jYXRlIHNldCB3ZSBhc3N1bWUgdGhhdCBhdG9tJ3MgZmx1c2ggcmVzZXJ2ZWQgY291bnRlciB3
YXMKKwkgICBhbHJlYWR5IGFkanVzdGVkLiAqLworCWlmICghSkZfSVNTRVQobm9kZSwgSk5PREVf
Q1JFQVRFRCkgJiYgIUpGX0lTU0VUKG5vZGUsIEpOT0RFX1JFTE9DKQorCSAgICAmJiAhSkZfSVNT
RVQobm9kZSwgSk5PREVfT1ZSV1IpICYmIGpub2RlX2lzX2xlYWYobm9kZSkKKwkgICAgJiYgIWpu
b2RlX2lzX2NsdXN0ZXJfcGFnZShub2RlKSkgeworCQlhc3NlcnQoInZzLTEwOTMiLCAhcmVpc2Vy
NF9ibG9ja25yX2lzX2Zha2UoJm5vZGUtPmJsb2NrbnIpKTsKKwkJYXNzZXJ0KCJ2cy0xNTA2Iiwg
Kmpub2RlX2dldF9ibG9jayhub2RlKSAhPSAwKTsKKwkJZ3JhYmJlZDJmbHVzaF9yZXNlcnZlZF9u
b2xvY2soYXRvbSwgKF9fdTY0KSAxKTsKKwkJSkZfU0VUKG5vZGUsIEpOT0RFX0ZMVVNIX1JFU0VS
VkVEKTsKKwl9CisKKwlpZiAoIUpGX0lTU0VUKG5vZGUsIEpOT0RFX0ZMVVNIX1FVRVVFRCkpIHsK
KwkJLyogSWYgdGhlIGF0b20gaXMgbm90IHNldCB5ZXQsIGl0IHdpbGwgYmUgYWRkZWQgdG8gdGhl
IGFwcHJvcHJpYXRlIGxpc3QgaW4KKwkJICAgY2FwdHVyZV9hc3NpZ25fYmxvY2tfbm9sb2NrLiAq
LworCQkvKiBTb21ldGltZXMgYSBub2RlIGlzIHNldCBkaXJ0eSBiZWZvcmUgYmVpbmcgY2FwdHVy
ZWQgLS0gdGhlIGNhc2UgZm9yIG5ldworCQkgICBqbm9kZXMuICBJbiB0aGF0IGNhc2UgdGhlIGpu
b2RlIHdpbGwgYmUgYWRkZWQgdG8gdGhlIGFwcHJvcHJpYXRlIGxpc3QKKwkJICAgaW4gY2FwdHVy
ZV9hc3NpZ25fYmxvY2tfbm9sb2NrLiBBbm90aGVyIHJlYXNvbiBub3QgdG8gcmUtbGluayBqbm9k
ZSBpcworCQkgICB0aGF0IGpub2RlIGlzIG9uIGEgZmx1c2ggcXVldWUgKHNlZSBmbHVzaC5jIGZv
ciBkZXRhaWxzKSAqLworCisJCWludCBsZXZlbCA9IGpub2RlX2dldF9sZXZlbChub2RlKTsKKwor
CQlhc3NlcnQoIm5pa2l0YS0zMTUyIiwgIUpGX0lTU0VUKG5vZGUsIEpOT0RFX09WUldSKSk7CisJ
CWFzc2VydCgiemFtLTY1NCIsIGF0b20tPnN0YWdlIDwgQVNUQUdFX1BSRV9DT01NSVQpOworCQlh
c3NlcnQoIm5pa2l0YS0yNjA3IiwgMCA8PSBsZXZlbCk7CisJCWFzc2VydCgibmlraXRhLTI2MDYi
LCBsZXZlbCA8PSBSRUFMX01BWF9aVFJFRV9IRUlHSFQpOworCisJCS8qIG1vdmUgbm9kZSB0byBh
dG9tJ3MgZGlydHkgbGlzdCAqLworCQlsaXN0X21vdmVfdGFpbCgmbm9kZS0+Y2FwdHVyZV9saW5r
LCBBVE9NX0RJUlRZX0xJU1QoYXRvbSwgbGV2ZWwpKTsKKwkJT05fREVCVUcoY291bnRfam5vZGUK
KwkJCSAoYXRvbSwgbm9kZSwgTk9ERV9MSVNUKG5vZGUpLCBESVJUWV9MSVNULCAxKSk7CisJfQor
fQorCisvKiBTZXQgdGhlIGRpcnR5IHN0YXR1cyBmb3IgdGhpcyAoc3BpbiBsb2NrZWQpIGpub2Rl
LiAqLwordm9pZCBqbm9kZV9tYWtlX2RpcnR5X2xvY2tlZChqbm9kZSAqIG5vZGUpCit7CisJYXNz
ZXJ0KCJ1bWthLTIwNCIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYobm9k
ZS0+Z3VhcmQpKTsKKworCWlmIChSRUlTRVI0X0RFQlVHICYmIHJvZnNfam5vZGUobm9kZSkpIHsK
KwkJd2FybmluZygibmlraXRhLTMzNjUiLCAiRGlydHlpbmcgam5vZGUgb24gcm9mcyIpOworCQlk
dW1wX3N0YWNrKCk7CisJfQorCisJLyogRmFzdCBjaGVjayBmb3IgYWxyZWFkeSBkaXJ0eSBub2Rl
ICovCisJaWYgKCFKRl9JU1NFVChub2RlLCBKTk9ERV9ESVJUWSkpIHsKKwkJdHhuX2F0b20gKmF0
b207CisKKwkJYXRvbSA9IGpub2RlX2dldF9hdG9tKG5vZGUpOworCQlhc3NlcnQoInZzLTEwOTQi
LCBhdG9tKTsKKwkJLyogQ2hlY2sgam5vZGUgZGlydHkgc3RhdHVzIGFnYWluIGJlY2F1c2Ugbm9k
ZSBzcGluIGxvY2sgbWlnaHQKKwkJICogYmUgcmVsZWFzZWQgaW5zaWRlIGpub2RlX2dldF9hdG9t
KCkuICovCisJCWlmIChsaWtlbHkoIUpGX0lTU0VUKG5vZGUsIEpOT0RFX0RJUlRZKSkpCisJCQlk
b19qbm9kZV9tYWtlX2RpcnR5KG5vZGUsIGF0b20pOworCQlzcGluX3VubG9ja19hdG9tKGF0b20p
OworCX0KK30KKworLyogU2V0IHRoZSBkaXJ0eSBzdGF0dXMgZm9yIHRoaXMgem5vZGUuICovCit2
b2lkIHpub2RlX21ha2VfZGlydHkoem5vZGUgKiB6KQoreworCWpub2RlICpub2RlOworCXN0cnVj
dCBwYWdlICpwYWdlOworCisJYXNzZXJ0KCJ1bWthLTIwNCIsIHogIT0gTlVMTCk7CisJYXNzZXJ0
KCJuaWtpdGEtMzI5MCIsIHpub2RlX2Fib3ZlX3Jvb3QoeikgfHwgem5vZGVfaXNfbG9hZGVkKHop
KTsKKwlhc3NlcnQoIm5pa2l0YS0zNTYwIiwgem5vZGVfaXNfd3JpdGVfbG9ja2VkKHopKTsKKwor
CW5vZGUgPSBaSk5PREUoeik7CisJLyogem5vZGUgaXMgbG9uZ3Rlcm0gbG9ja2VkLCB3ZSBjYW4g
Y2hlY2sgZGlydHkgYml0IHdpdGhvdXQgc3BpbmxvY2sgKi8KKwlpZiAoSkZfSVNTRVQobm9kZSwg
Sk5PREVfRElSVFkpKSB7CisJCS8qIHpub2RlIGlzIGRpcnR5IGFscmVhZHkuIEFsbCB3ZSBoYXZl
IHRvIGRvIGlzIHRvIGNoYW5nZSB6bm9kZSB2ZXJzaW9uICovCisJCXotPnZlcnNpb24gPSB6bm9k
ZV9idWlsZF92ZXJzaW9uKGpub2RlX2dldF90cmVlKG5vZGUpKTsKKwkJcmV0dXJuOworCX0KKwor
CXNwaW5fbG9ja19qbm9kZShub2RlKTsKKwlqbm9kZV9tYWtlX2RpcnR5X2xvY2tlZChub2RlKTsK
KwlwYWdlID0gam5vZGVfcGFnZShub2RlKTsKKwlpZiAocGFnZSAhPSBOVUxMKSB7CisJCS8qIHRo
aXMgaXMgdXNlZnVsIGFzc2VydGlvbiAoYWxsb3dzIG9uZSB0byBjaGVjayB0aGF0IG5vCisJCSAq
IG1vZGlmaWNhdGlvbnMgYXJlIGxvc3QgZHVlIHRvIHVwZGF0ZSBvZiBpbi1mbGlnaHQgcGFnZSks
CisJCSAqIGJ1dCBpdCByZXF1aXJlcyBsb2NraW5nIG9uIHBhZ2UgdG8gY2hlY2sgUEdfd3JpdGVi
YWNrCisJCSAqIGJpdC4gKi8KKwkJLyogYXNzZXJ0KCJuaWtpdGEtMzI5MiIsCisJCSAgICFQYWdl
V3JpdGViYWNrKHBhZ2UpIHx8IFpGX0lTU0VUKHosIEpOT0RFX1dSSVRFQkFDSykpOyAqLworCQln
ZXRfcGFnZShwYWdlKTsKKworCQkvKiBqbm9kZSBsb2NrIGlzIG5vdCBuZWVkZWQgZm9yIHRoZSBy
ZXN0IG9mCisJCSAqIHpub2RlX3NldF9kaXJ0eSgpLiAqLworCQlzcGluX3VubG9ja19qbm9kZShu
b2RlKTsKKwkJLyogcmVpc2VyNCBmaWxlIHdyaXRlIGNvZGUgY2FsbHMgc2V0X3BhZ2VfZGlydHkg
Zm9yCisJCSAqIHVuZm9ybWF0dGVkIG5vZGVzLCBmb3IgZm9ybWF0dGVkIG5vZGVzIHdlIGRvIGl0
IGhlcmUuICovCisJCXNldF9wYWdlX2RpcnR5X25vdGFnKHBhZ2UpOworCQlwdXRfcGFnZShwYWdl
KTsKKwkJLyogYnVtcCB2ZXJzaW9uIGNvdW50ZXIgaW4gem5vZGUgKi8KKwkJei0+dmVyc2lvbiA9
IHpub2RlX2J1aWxkX3ZlcnNpb24oam5vZGVfZ2V0X3RyZWUobm9kZSkpOworCX0gZWxzZSB7CisJ
CWFzc2VydCgiemFtLTU5NiIsIHpub2RlX2Fib3ZlX3Jvb3QoSlpOT0RFKG5vZGUpKSk7CisJCXNw
aW5fdW5sb2NrX2pub2RlKG5vZGUpOworCX0KKworCWFzc2VydCgibmlraXRhLTE5MDAiLCB6bm9k
ZV9pc193cml0ZV9sb2NrZWQoeikpOworCWFzc2VydCgiam1hY2QtOTc3NyIsIG5vZGUtPmF0b20g
IT0gTlVMTCk7Cit9CisKK2ludCByZWlzZXI0X3N5bmNfYXRvbSh0eG5fYXRvbSAqIGF0b20pCit7
CisJaW50IHJlc3VsdDsKKwl0eG5faGFuZGxlICp0eG5oOworCisJdHhuaCA9IGdldF9jdXJyZW50
X2NvbnRleHQoKS0+dHJhbnM7CisKKwlyZXN1bHQgPSAwOworCWlmIChhdG9tICE9IE5VTEwpIHsK
KwkJaWYgKGF0b20tPnN0YWdlIDwgQVNUQUdFX1BSRV9DT01NSVQpIHsKKwkJCXNwaW5fbG9ja190
eG5oKHR4bmgpOworCQkJY2FwdHVyZV9hc3NpZ25fdHhuaF9ub2xvY2soYXRvbSwgdHhuaCk7CisJ
CQlyZXN1bHQgPSBmb3JjZV9jb21taXRfYXRvbSh0eG5oKTsKKwkJfSBlbHNlIGlmIChhdG9tLT5z
dGFnZSA8IEFTVEFHRV9QT1NUX0NPTU1JVCkgeworCQkJLyogd2FpdCBhdG9tIGNvbW1pdCAqLwor
CQkJcmVpc2VyNF9hdG9tX3dhaXRfZXZlbnQoYXRvbSk7CisJCQkvKiB0cnkgb25jZSBtb3JlICov
CisJCQlyZXN1bHQgPSBSRVRFUlIoLUVfUkVQRUFUKTsKKwkJfSBlbHNlCisJCQlzcGluX3VubG9j
a19hdG9tKGF0b20pOworCX0KKwlyZXR1cm4gcmVzdWx0OworfQorCisjaWYgUkVJU0VSNF9ERUJV
RworCisvKiBtb3ZlIGpub2RlIGZvcm0gb25lIGxpc3QgdG8gYW5vdGhlcgorICAgY2FsbCB0aGlz
IGFmdGVyIGF0b20tPmNhcHR1cmVfY291bnQgaXMgdXBkYXRlZCAqLwordm9pZAorY291bnRfam5v
ZGUodHhuX2F0b20gKiBhdG9tLCBqbm9kZSAqIG5vZGUsIGF0b21fbGlzdCBvbGRfbGlzdCwKKwkg
ICAgYXRvbV9saXN0IG5ld19saXN0LCBpbnQgY2hlY2tfbGlzdHMpCit7CisJc3RydWN0IGxpc3Rf
aGVhZCAqcG9zOworCisJYXNzZXJ0KCJ6YW0tMTAxOCIsIGF0b21faXNfcHJvdGVjdGVkKGF0b20p
KTsKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihub2RlLT5ndWFyZCkpOworCWFzc2VydCgiIiwgTk9E
RV9MSVNUKG5vZGUpID09IG9sZF9saXN0KTsKKworCXN3aXRjaCAoTk9ERV9MSVNUKG5vZGUpKSB7
CisJY2FzZSBOT1RfQ0FQVFVSRUQ6CisJCWJyZWFrOworCWNhc2UgRElSVFlfTElTVDoKKwkJYXNz
ZXJ0KCIiLCBhdG9tLT5kaXJ0eSA+IDApOworCQlhdG9tLT5kaXJ0eS0tOworCQlicmVhazsKKwlj
YXNlIENMRUFOX0xJU1Q6CisJCWFzc2VydCgiIiwgYXRvbS0+Y2xlYW4gPiAwKTsKKwkJYXRvbS0+
Y2xlYW4tLTsKKwkJYnJlYWs7CisJY2FzZSBGUV9MSVNUOgorCQlhc3NlcnQoIiIsIGF0b20tPmZx
ID4gMCk7CisJCWF0b20tPmZxLS07CisJCWJyZWFrOworCWNhc2UgV0JfTElTVDoKKwkJYXNzZXJ0
KCIiLCBhdG9tLT53YiA+IDApOworCQlhdG9tLT53Yi0tOworCQlicmVhazsKKwljYXNlIE9WUldS
X0xJU1Q6CisJCWFzc2VydCgiIiwgYXRvbS0+b3Zyd3IgPiAwKTsKKwkJYXRvbS0+b3Zyd3ItLTsK
KwkJYnJlYWs7CisJZGVmYXVsdDoKKwkJaW1wb3NzaWJsZSgiIiwgIiIpOworCX0KKworCXN3aXRj
aCAobmV3X2xpc3QpIHsKKwljYXNlIE5PVF9DQVBUVVJFRDoKKwkJYnJlYWs7CisJY2FzZSBESVJU
WV9MSVNUOgorCQlhdG9tLT5kaXJ0eSsrOworCQlicmVhazsKKwljYXNlIENMRUFOX0xJU1Q6CisJ
CWF0b20tPmNsZWFuKys7CisJCWJyZWFrOworCWNhc2UgRlFfTElTVDoKKwkJYXRvbS0+ZnErKzsK
KwkJYnJlYWs7CisJY2FzZSBXQl9MSVNUOgorCQlhdG9tLT53YisrOworCQlicmVhazsKKwljYXNl
IE9WUldSX0xJU1Q6CisJCWF0b20tPm92cndyKys7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCWlt
cG9zc2libGUoIiIsICIiKTsKKwl9CisJQVNTSUdOX05PREVfTElTVChub2RlLCBuZXdfbGlzdCk7
CisJaWYgKDAgJiYgY2hlY2tfbGlzdHMpIHsKKwkJaW50IGNvdW50OworCQl0cmVlX2xldmVsIGxl
dmVsOworCisJCWNvdW50ID0gMDsKKworCQkvKiBmbHVzaCBxdWV1ZSBsaXN0ICovCisJCS8qIHJl
aXNlcjRfY2hlY2tfZnEoYXRvbSk7ICovCisKKwkJLyogZGlydHkgbGlzdCAqLworCQljb3VudCA9
IDA7CisJCWZvciAobGV2ZWwgPSAwOyBsZXZlbCA8IFJFQUxfTUFYX1pUUkVFX0hFSUdIVCArIDE7
IGxldmVsICs9IDEpIHsKKwkJCWxpc3RfZm9yX2VhY2gocG9zLCBBVE9NX0RJUlRZX0xJU1QoYXRv
bSwgbGV2ZWwpKQorCQkJCWNvdW50Kys7CisJCX0KKwkJaWYgKGNvdW50ICE9IGF0b20tPmRpcnR5
KQorCQkJd2FybmluZygiIiwgImRpcnR5IGNvdW50ZXIgJWQsIHJlYWwgJWRcbiIsIGF0b20tPmRp
cnR5LAorCQkJCWNvdW50KTsKKworCQkvKiBjbGVhbiBsaXN0ICovCisJCWNvdW50ID0gMDsKKwkJ
bGlzdF9mb3JfZWFjaChwb3MsIEFUT01fQ0xFQU5fTElTVChhdG9tKSkKKwkJCWNvdW50Kys7CisJ
CWlmIChjb3VudCAhPSBhdG9tLT5jbGVhbikKKwkJCXdhcm5pbmcoIiIsICJjbGVhbiBjb3VudGVy
ICVkLCByZWFsICVkXG4iLCBhdG9tLT5jbGVhbiwKKwkJCQljb3VudCk7CisKKwkJLyogd2IgbGlz
dCAqLworCQljb3VudCA9IDA7CisJCWxpc3RfZm9yX2VhY2gocG9zLCBBVE9NX1dCX0xJU1QoYXRv
bSkpCisJCQljb3VudCsrOworCQlpZiAoY291bnQgIT0gYXRvbS0+d2IpCisJCQl3YXJuaW5nKCIi
LCAid2IgY291bnRlciAlZCwgcmVhbCAlZFxuIiwgYXRvbS0+d2IsCisJCQkJY291bnQpOworCisJ
CS8qIG92ZXJ3cml0ZSBsaXN0ICovCisJCWNvdW50ID0gMDsKKwkJbGlzdF9mb3JfZWFjaChwb3Ms
IEFUT01fT1ZSV1JfTElTVChhdG9tKSkKKwkJCWNvdW50Kys7CisKKwkJaWYgKGNvdW50ICE9IGF0
b20tPm92cndyKQorCQkJd2FybmluZygiIiwgIm92cndyIGNvdW50ZXIgJWQsIHJlYWwgJWRcbiIs
IGF0b20tPm92cndyLAorCQkJCWNvdW50KTsKKwl9CisJYXNzZXJ0KCJ2cy0xNjI0IiwgYXRvbS0+
bnVtX3F1ZXVlZCA9PSBhdG9tLT5mcSk7CisJaWYgKGF0b20tPmNhcHR1cmVfY291bnQgIT0KKwkg
ICAgYXRvbS0+ZGlydHkgKyBhdG9tLT5jbGVhbiArIGF0b20tPm92cndyICsgYXRvbS0+d2IgKyBh
dG9tLT5mcSkgeworCQlwcmludGsKKwkJICAgICgiY291bnQgJWQsIGRpcnR5ICVkIGNsZWFuICVk
IG92cndyICVkIHdiICVkIGZxICVkXG4iLAorCQkgICAgIGF0b20tPmNhcHR1cmVfY291bnQsIGF0
b20tPmRpcnR5LCBhdG9tLT5jbGVhbiwgYXRvbS0+b3Zyd3IsCisJCSAgICAgYXRvbS0+d2IsIGF0
b20tPmZxKTsKKwkJYXNzZXJ0KCJ2cy0xNjIyIiwKKwkJICAgICAgIGF0b20tPmNhcHR1cmVfY291
bnQgPT0KKwkJICAgICAgIGF0b20tPmRpcnR5ICsgYXRvbS0+Y2xlYW4gKyBhdG9tLT5vdnJ3ciAr
IGF0b20tPndiICsKKwkJICAgICAgIGF0b20tPmZxKTsKKwl9Cit9CisKKyNlbmRpZgorCitpbnQg
cmVpc2VyNF9jYXB0dXJlX3N1cGVyX2Jsb2NrKHN0cnVjdCBzdXBlcl9ibG9jayAqcykKK3sKKwlp
bnQgcmVzdWx0OworCXpub2RlICp1YmVyOworCWxvY2tfaGFuZGxlIGxoOworCisJaW5pdF9saCgm
bGgpOworCXJlc3VsdCA9IGdldF91YmVyX3pub2RlKHJlaXNlcjRfZ2V0X3RyZWUocyksCisJCQkJ
Wk5PREVfV1JJVEVfTE9DSywgWk5PREVfTE9DS19MT1BSSSwgJmxoKTsKKwlpZiAocmVzdWx0KQor
CQlyZXR1cm4gcmVzdWx0OworCisJdWJlciA9IGxoLm5vZGU7CisJLyogR3JhYmJpbmcgb25lIGJs
b2NrIGZvciBzdXBlcmJsb2NrICovCisJcmVzdWx0ID0gcmVpc2VyNF9ncmFiX3NwYWNlX2ZvcmNl
KChfX3U2NCkgMSwgQkFfUkVTRVJWRUQpOworCWlmIChyZXN1bHQgIT0gMCkKKwkJcmV0dXJuIHJl
c3VsdDsKKworCXpub2RlX21ha2VfZGlydHkodWJlcik7CisKKwlkb25lX2xoKCZsaCk7CisJcmV0
dXJuIDA7Cit9CisKKy8qIFdha2V1cCBldmVyeSBoYW5kbGUgb24gdGhlIGF0b20ncyBXQUlURk9S
IGxpc3QgKi8KK3N0YXRpYyB2b2lkIHdha2V1cF9hdG9tX3dhaXRmb3JfbGlzdCh0eG5fYXRvbSAq
IGF0b20pCit7CisJdHhuX3dhaXRfbGlua3MgKndsaW5rczsKKworCWFzc2VydCgidW1rYS0yMTAi
LCBhdG9tICE9IE5VTEwpOworCisJLyogYXRvbSBpcyBsb2NrZWQgKi8KKwlsaXN0X2Zvcl9lYWNo
X2VudHJ5KHdsaW5rcywgJmF0b20tPmZ3YWl0Zm9yX2xpc3QsIF9md2FpdGZvcl9saW5rKSB7CisJ
CWlmICh3bGlua3MtPndhaXRmb3JfY2IgPT0gTlVMTCB8fAorCQkgICAgd2xpbmtzLT53YWl0Zm9y
X2NiKGF0b20sIHdsaW5rcykpCisJCQkvKiBXYWtlIHVwLiAqLworCQkJcmVpc2VyNF93YWtlX3Vw
KHdsaW5rcy0+X2xvY2tfc3RhY2spOworCX0KK30KKworLyogV2FrZXVwIGV2ZXJ5IGhhbmRsZSBv
biB0aGUgYXRvbSdzIFdBSVRJTkcgbGlzdCAqLworc3RhdGljIHZvaWQgd2FrZXVwX2F0b21fd2Fp
dGluZ19saXN0KHR4bl9hdG9tICogYXRvbSkKK3sKKwl0eG5fd2FpdF9saW5rcyAqd2xpbmtzOwor
CisJYXNzZXJ0KCJ1bWthLTIxMSIsIGF0b20gIT0gTlVMTCk7CisKKwkvKiBhdG9tIGlzIGxvY2tl
ZCAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkod2xpbmtzLCAmYXRvbS0+ZndhaXRpbmdfbGlzdCwg
X2Z3YWl0aW5nX2xpbmspIHsKKwkJaWYgKHdsaW5rcy0+d2FpdGluZ19jYiA9PSBOVUxMIHx8CisJ
CSAgICB3bGlua3MtPndhaXRpbmdfY2IoYXRvbSwgd2xpbmtzKSkKKwkJCS8qIFdha2UgdXAuICov
CisJCQlyZWlzZXI0X3dha2VfdXAod2xpbmtzLT5fbG9ja19zdGFjayk7CisJfQorfQorCisvKiBo
ZWxwZXIgZnVuY3Rpb24gdXNlZCBieSBjYXB0dXJlX2Z1c2Vfd2FpdCgpIHRvIGF2b2lkICJzcHVy
aW91cyB3YWtlLXVwcyIgKi8KK3N0YXRpYyBpbnQgd2FpdF9mb3JfZnVzaW9uKHR4bl9hdG9tICog
YXRvbSwgdHhuX3dhaXRfbGlua3MgKiB3bGlua3MpCit7CisJYXNzZXJ0KCJuaWtpdGEtMzMzMCIs
IGF0b20gIT0gTlVMTCk7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYoYXRvbS0+YWxvY2spKTsKKwor
CS8qIGF0b20tPnR4bmhfY291bnQgPT0gMSBpcyBmb3Igd2FraW5nIHdhaXRlcnMgdXAgaWYgd2Ug
YXJlIHJlbGVhc2luZworCSAqIGxhc3QgdHJhbnNhY3Rpb24gaGFuZGxlLiAqLworCXJldHVybiBh
dG9tLT5zdGFnZSAhPSBBU1RBR0VfQ0FQVFVSRV9XQUlUIHx8IGF0b20tPnR4bmhfY291bnQgPT0g
MTsKK30KKworLyogVGhlIGdlbmVyYWwgcHVycG9zZSBvZiB0aGlzIGZ1bmN0aW9uIGlzIHRvIHdh
aXQgb24gdGhlIGZpcnN0IG9mIHR3byBwb3NzaWJsZSBldmVudHMuCisgICBUaGUgc2l0dWF0aW9u
IGlzIHRoYXQgYSBoYW5kbGUgKGFuZCBpdHMgYXRvbSBhdG9taCkgaXMgYmxvY2tlZCB0cnlpbmcg
dG8gY2FwdHVyZSBhCisgICBibG9jayAoaS5lLiwgbm9kZSkgYnV0IHRoZSBub2RlJ3MgYXRvbSAo
YXRvbWYpIGlzIGluIHRoZSBDQVBUVVJFX1dBSVQgc3RhdGUuICBUaGUKKyAgIGhhbmRsZSdzIGF0
b20gKGF0b21oKSBpcyBub3QgaW4gdGhlIENBUFRVUkVfV0FJVCBzdGF0ZS4gIEhvd2V2ZXIsIGF0
b21oIGNvdWxkIGZ1c2Ugd2l0aAorICAgYW5vdGhlciBhdG9tIG9yLCBkdWUgdG8gYWdlLCBlbnRl
ciB0aGUgQ0FQVFVSRV9XQUlUIHN0YXRlIGl0c2VsZiwgYXQgd2hpY2ggcG9pbnQgaXQKKyAgIG5l
ZWRzIHRvIHVuYmxvY2sgdGhlIGhhbmRsZSB0byBhdm9pZCBkZWFkbG9jay4gIFdoZW4gdGhlIHR4
bmggaXMgdW5ibG9ja2VkIGl0IHdpbGwKKyAgIHByb2NlZWQgYW5kIGZ1c2UgdGhlIHR3byBhdG9t
cyBpbiB0aGUgQ0FQVFVSRV9XQUlUIHN0YXRlLgorCisgICBJbiBvdGhlciB3b3JkcywgaWYgZWl0
aGVyIGF0b21oIG9yIGF0b21mIGNoYW5nZSBzdGF0ZSwgdGhlIGhhbmRsZSB3aWxsIGJlIGF3YWtl
bmVkLAorICAgdGh1cyB0aGVyZSBhcmUgdHdvIGxpc3RzIHBlciBhdG9tOiBXQUlUSU5HIGFuZCBX
QUlURk9SLgorCisgICBUaGlzIGlzIGFsc28gY2FsbGVkIGJ5IGNhcHR1cmVfYXNzaWduX3R4bmgg
d2l0aCAoYXRvbWggPT0gTlVMTCkgdG8gd2FpdCBmb3IgYXRvbWYgdG8KKyAgIGNsb3NlIGJ1dCBp
dCBpcyBub3QgYXNzaWduZWQgdG8gYW4gYXRvbSBvZiBpdHMgb3duLgorCisgICBMb2NrIG9yZGVy
aW5nIGluIHRoaXMgbWV0aG9kOiBhbGwgZm91ciBsb2NrcyBhcmUgaGVsZDogSk5PREVfTE9DSywg
VFhOSF9MT0NLLAorICAgQk9USF9BVE9NX0xPQ0tTLiAgUmVzdWx0OiBhbGwgZm91ciBsb2NrcyBh
cmUgcmVsZWFzZWQuCisqLworc3RhdGljIGludCBjYXB0dXJlX2Z1c2Vfd2FpdCh0eG5faGFuZGxl
ICogdHhuaCwgdHhuX2F0b20gKiBhdG9tZiwKKwkJICAgIHR4bl9hdG9tICogYXRvbWgsIHR4bl9j
YXB0dXJlIG1vZGUpCit7CisJaW50IHJldDsKKwl0eG5fd2FpdF9saW5rcyB3bGlua3M7CisKKwlh
c3NlcnQoInVta2EtMjEzIiwgdHhuaCAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMjE0IiwgYXRv
bWYgIT0gTlVMTCk7CisKKwlpZiAoKG1vZGUgJiBUWE5fQ0FQVFVSRV9OT05CTE9DS0lORykgIT0g
MCkgeworCQlzcGluX3VubG9ja190eG5oKHR4bmgpOworCQlzcGluX3VubG9ja19hdG9tKGF0b21m
KTsKKworCQlpZiAoYXRvbWgpIHsKKwkJCXNwaW5fdW5sb2NrX2F0b20oYXRvbWgpOworCQl9CisK
KwkJcmV0dXJuIFJFVEVSUigtRV9CTE9DSyk7CisJfQorCisJLyogSW5pdGlhbGl6ZSB0aGUgd2Fp
dGluZyBsaXN0IGxpbmtzLiAqLworCWluaXRfd2xpbmtzKCZ3bGlua3MpOworCisJLyogQWRkIHR4
bmggdG8gYXRvbWYncyB3YWl0Zm9yIGxpc3QsIHVubG9jayBhdG9tZi4gKi8KKwlsaXN0X2FkZF90
YWlsKCZ3bGlua3MuX2Z3YWl0Zm9yX2xpbmssICZhdG9tZi0+ZndhaXRmb3JfbGlzdCk7CisJd2xp
bmtzLndhaXRmb3JfY2IgPSB3YWl0X2Zvcl9mdXNpb247CisJYXRvbWljX2luYygmYXRvbWYtPnJl
ZmNvdW50KTsKKwlzcGluX3VubG9ja19hdG9tKGF0b21mKTsKKworCWlmIChhdG9taCkgeworCQkv
KiBBZGQgdHhuaCB0byBhdG9taCdzIHdhaXRpbmcgbGlzdCwgdW5sb2NrIGF0b21oLiAqLworCQls
aXN0X2FkZF90YWlsKCZ3bGlua3MuX2Z3YWl0aW5nX2xpbmssICZhdG9taC0+ZndhaXRpbmdfbGlz
dCk7CisJCWF0b21pY19pbmMoJmF0b21oLT5yZWZjb3VudCk7CisJCXNwaW5fdW5sb2NrX2F0b20o
YXRvbWgpOworCX0KKworCS8qIEdvIHRvIHNsZWVwLiAqLworCXNwaW5fdW5sb2NrX3R4bmgodHhu
aCk7CisKKwlyZXQgPSByZWlzZXI0X3ByZXBhcmVfdG9fc2xlZXAod2xpbmtzLl9sb2NrX3N0YWNr
KTsKKwlpZiAocmV0ID09IDApIHsKKwkJcmVpc2VyNF9nb190b19zbGVlcCh3bGlua3MuX2xvY2tf
c3RhY2spOworCQlyZXQgPSBSRVRFUlIoLUVfUkVQRUFUKTsKKwl9CisKKwkvKiBSZW1vdmUgZnJv
bSB0aGUgd2FpdGZvciBsaXN0LiAqLworCXNwaW5fbG9ja19hdG9tKGF0b21mKTsKKworCWxpc3Rf
ZGVsKCZ3bGlua3MuX2Z3YWl0Zm9yX2xpbmspOworCWF0b21fZGVjX2FuZF91bmxvY2soYXRvbWYp
OworCisJaWYgKGF0b21oKSB7CisJCS8qIFJlbW92ZSBmcm9tIHRoZSB3YWl0aW5nIGxpc3QuICov
CisJCXNwaW5fbG9ja19hdG9tKGF0b21oKTsKKwkJbGlzdF9kZWwoJndsaW5rcy5fZndhaXRpbmdf
bGluayk7CisJCWF0b21fZGVjX2FuZF91bmxvY2soYXRvbWgpOworCX0KKwlyZXR1cm4gcmV0Owor
fQorCitzdGF0aWMgdm9pZCBsb2NrX3R3b19hdG9tcyh0eG5fYXRvbSAqIG9uZSwgdHhuX2F0b20g
KiB0d28pCit7CisJYXNzZXJ0KCJ6YW0tMTA2NyIsIG9uZSAhPSB0d28pOworCisJLyogbG9jayB0
aGUgYXRvbSB3aXRoIGxlc3NlciBhZGRyZXNzIGZpcnN0ICovCisJaWYgKG9uZSA8IHR3bykgewor
CQlzcGluX2xvY2tfYXRvbShvbmUpOworCQlzcGluX2xvY2tfYXRvbV9uZXN0ZWQodHdvKTsKKwl9
IGVsc2UgeworCQlzcGluX2xvY2tfYXRvbSh0d28pOworCQlzcGluX2xvY2tfYXRvbV9uZXN0ZWQo
b25lKTsKKwl9Cit9CisKKy8qIFBlcmZvcm0gdGhlIG5lY2Vzc2FyeSB3b3JrIHRvIHByZXBhcmUg
Zm9yIGZ1c2luZyB0d28gYXRvbXMsIHdoaWNoIGludm9sdmVzCisgKiBhY3F1aXJpbmcgdHdvIGF0
b20gbG9ja3MgaW4gdGhlIHByb3BlciBvcmRlci4gIElmIG9uZSBvZiB0aGUgbm9kZSdzIGF0b20g
aXMKKyAqIGJsb2NraW5nIGZ1c2lvbiAoaS5lLiwgaXQgaXMgaW4gdGhlIENBUFRVUkVfV0FJVCBz
dGFnZSkgYW5kIHRoZSBoYW5kbGUncworICogYXRvbSBpcyBub3QgdGhlbiB0aGUgaGFuZGxlJ3Mg
cmVxdWVzdCBpcyBwdXQgdG8gc2xlZXAuICBJZiB0aGUgbm9kZSdzIGF0b20KKyAqIGlzIGNvbW1p
dHRpbmcsIHRoZW4gdGhlIG5vZGUgY2FuIGJlIGNvcHktb24tY2FwdHVyZWQuICBPdGhlcndpc2Us
IHBpY2sgdGhlCisgKiBhdG9tIHdpdGggZmV3ZXIgcG9pbnRlcnMgdG8gYmUgZnVzZWQgaW50byB0
aGUgYXRvbSB3aXRoIG1vcmUgcG9pbnRlciBhbmQKKyAqIGNhbGwgY2FwdHVyZV9mdXNlX2ludG8u
CisgKi8KK3N0YXRpYyBpbnQgY2FwdHVyZV9pbml0X2Z1c2lvbihqbm9kZSAqbm9kZSwgdHhuX2hh
bmRsZSAqdHhuaCwgdHhuX2NhcHR1cmUgbW9kZSkKK3sKKwl0eG5fYXRvbSAqIHR4bmhfYXRvbSA9
IHR4bmgtPmF0b207CisJdHhuX2F0b20gKiBibG9ja19hdG9tID0gbm9kZS0+YXRvbTsKKworCWF0
b21pY19pbmMoJnR4bmhfYXRvbS0+cmVmY291bnQpOworCWF0b21pY19pbmMoJmJsb2NrX2F0b20t
PnJlZmNvdW50KTsKKworCXNwaW5fdW5sb2NrX3R4bmgodHhuaCk7CisJc3Bpbl91bmxvY2tfam5v
ZGUobm9kZSk7CisKKwlsb2NrX3R3b19hdG9tcyh0eG5oX2F0b20sIGJsb2NrX2F0b20pOworCisJ
aWYgKHR4bmgtPmF0b20gIT0gdHhuaF9hdG9tIHx8IG5vZGUtPmF0b20gIT0gYmxvY2tfYXRvbSAp
IHsKKwkJcmVsZWFzZV90d29fYXRvbXModHhuaF9hdG9tLCBibG9ja19hdG9tKTsKKwkJcmV0dXJu
IFJFVEVSUigtRV9SRVBFQVQpOworCX0KKworCWF0b21pY19kZWMoJnR4bmhfYXRvbS0+cmVmY291
bnQpOworCWF0b21pY19kZWMoJmJsb2NrX2F0b20tPnJlZmNvdW50KTsKKworCWFzc2VydCAoInph
bS0xMDY2IiwgYXRvbV9pc29wZW4odHhuaF9hdG9tKSk7CisKKwlpZiAodHhuaF9hdG9tLT5zdGFn
ZSA+PSBibG9ja19hdG9tLT5zdGFnZSB8fAorCSAgICAoYmxvY2tfYXRvbS0+c3RhZ2UgPT0gQVNU
QUdFX0NBUFRVUkVfV0FJVCAmJiBibG9ja19hdG9tLT50eG5oX2NvdW50ID09IDApKSB7CisJCWNh
cHR1cmVfZnVzZV9pbnRvKHR4bmhfYXRvbSwgYmxvY2tfYXRvbSk7CisJCXJldHVybiBSRVRFUlIo
LUVfUkVQRUFUKTsKKwl9CisJc3Bpbl9sb2NrX3R4bmgodHhuaCk7CisJcmV0dXJuIGNhcHR1cmVf
ZnVzZV93YWl0KHR4bmgsIGJsb2NrX2F0b20sIHR4bmhfYXRvbSwgbW9kZSk7Cit9CisKKy8qIFRo
aXMgZnVuY3Rpb24gc3BsaWNlcyB0b2dldGhlciB0d28gam5vZGUgbGlzdHMgKHNtYWxsIGFuZCBs
YXJnZSkgYW5kIHNldHMgYWxsIGpub2RlcyBpbgorICAgdGhlIHNtYWxsIGxpc3QgdG8gcG9pbnQg
dG8gdGhlIGxhcmdlIGF0b20uICBSZXR1cm5zIHRoZSBsZW5ndGggb2YgdGhlIGxpc3QuICovCitz
dGF0aWMgaW50CitjYXB0dXJlX2Z1c2Vfam5vZGVfbGlzdHModHhuX2F0b20gKmxhcmdlLCBzdHJ1
Y3QgbGlzdF9oZWFkICpsYXJnZV9oZWFkLAorCQkJIHN0cnVjdCBsaXN0X2hlYWQgKnNtYWxsX2hl
YWQpCit7CisJaW50IGNvdW50ID0gMDsKKwlqbm9kZSAqbm9kZTsKKworCWFzc2VydCgidW1rYS0y
MTgiLCBsYXJnZSAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMjE5IiwgbGFyZ2VfaGVhZCAhPSBO
VUxMKTsKKwlhc3NlcnQoInVta2EtMjIwIiwgc21hbGxfaGVhZCAhPSBOVUxMKTsKKwkvKiBzbWFs
bCBhdG9tIHNob3VsZCBiZSBsb2NrZWQgYWxzby4gKi8KKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihs
YXJnZS0+YWxvY2spKTsKKworCS8qIEZvciBldmVyeSBqbm9kZSBvbiBzbWFsbCdzIGNhcHR1cmUg
bGlzdC4uLiAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkobm9kZSwgc21hbGxfaGVhZCwgY2FwdHVy
ZV9saW5rKSB7CisJCWNvdW50ICs9IDE7CisKKwkJLyogV2l0aCB0aGUgam5vZGUgbG9jayBoZWxk
LCB1cGRhdGUgYXRvbSBwb2ludGVyLiAqLworCQlzcGluX2xvY2tfam5vZGUobm9kZSk7CisJCW5v
ZGUtPmF0b20gPSBsYXJnZTsKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9kZSk7CisJfQorCisJLyog
U3BsaWNlIHRoZSBsaXN0cy4gKi8KKwlsaXN0X3NwbGljZV9pbml0KHNtYWxsX2hlYWQsIGxhcmdl
X2hlYWQtPnByZXYpOworCisJcmV0dXJuIGNvdW50OworfQorCisvKiBUaGlzIGZ1bmN0aW9uIHNw
bGljZXMgdG9nZXRoZXIgdHdvIHR4bmggbGlzdHMgKHNtYWxsIGFuZCBsYXJnZSkgYW5kIHNldHMg
YWxsIHR4biBoYW5kbGVzIGluCisgICB0aGUgc21hbGwgbGlzdCB0byBwb2ludCB0byB0aGUgbGFy
Z2UgYXRvbS4gIFJldHVybnMgdGhlIGxlbmd0aCBvZiB0aGUgbGlzdC4gKi8KK3N0YXRpYyBpbnQK
K2NhcHR1cmVfZnVzZV90eG5oX2xpc3RzKHR4bl9hdG9tICpsYXJnZSwgc3RydWN0IGxpc3RfaGVh
ZCAqbGFyZ2VfaGVhZCwKKwkJCXN0cnVjdCBsaXN0X2hlYWQgKnNtYWxsX2hlYWQpCit7CisJaW50
IGNvdW50ID0gMDsKKwl0eG5faGFuZGxlICp0eG5oOworCisJYXNzZXJ0KCJ1bWthLTIyMSIsIGxh
cmdlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0yMjIiLCBsYXJnZV9oZWFkICE9IE5VTEwpOwor
CWFzc2VydCgidW1rYS0yMjMiLCBzbWFsbF9oZWFkICE9IE5VTEwpOworCisJLyogQWRqdXN0IGV2
ZXJ5IHR4bmggdG8gdGhlIG5ldyBhdG9tLiAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkodHhuaCwg
c21hbGxfaGVhZCwgdHhuaF9saW5rKSB7CisJCWNvdW50ICs9IDE7CisKKwkJLyogV2l0aCB0aGUg
dHhuaCBsb2NrIGhlbGQsIHVwZGF0ZSBhdG9tIHBvaW50ZXIuICovCisJCXNwaW5fbG9ja190eG5o
KHR4bmgpOworCQl0eG5oLT5hdG9tID0gbGFyZ2U7CisJCXNwaW5fdW5sb2NrX3R4bmgodHhuaCk7
CisJfQorCisJLyogU3BsaWNlIHRoZSB0eG5faGFuZGxlIGxpc3QuICovCisJbGlzdF9zcGxpY2Vf
aW5pdChzbWFsbF9oZWFkLCBsYXJnZV9oZWFkLT5wcmV2KTsKKworCXJldHVybiBjb3VudDsKK30K
KworLyogVGhpcyBmdW5jdGlvbiBmdXNlcyB0d28gYXRvbXMuICBUaGUgY2FwdHVyZWQgbm9kZXMg
YW5kIGhhbmRsZXMgYmVsb25naW5nIHRvIFNNQUxMIGFyZQorICAgYWRkZWQgdG8gTEFSR0UgYW5k
IHRoZWlyIC0+YXRvbSBwb2ludGVycyBhcmUgYWxsIHVwZGF0ZWQuICBUaGUgYXNzb2NpYXRlZCBj
b3VudHMgYXJlCisgICB1cGRhdGVkIGFzIHdlbGwsIGFuZCBhbnkgd2FpdGluZyBoYW5kbGVzIGJl
bG9uZ2luZyB0byBlaXRoZXIgYXJlIGF3YWtlbmVkLiAgRmluYWxseSB0aGUKKyAgIHNtYWxsZXIg
YXRvbSdzIHJlZmNvdW50IGlzIGRlY3JlbWVudGVkLgorKi8KK3N0YXRpYyB2b2lkIGNhcHR1cmVf
ZnVzZV9pbnRvKHR4bl9hdG9tICogc21hbGwsIHR4bl9hdG9tICogbGFyZ2UpCit7CisJaW50IGxl
dmVsOworCXVuc2lnbmVkIHpjb3VudCA9IDA7CisJdW5zaWduZWQgdGNvdW50ID0gMDsKKworCWFz
c2VydCgidW1rYS0yMjQiLCBzbWFsbCAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMjI1Iiwgc21h
bGwgIT0gTlVMTCk7CisKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihsYXJnZS0+YWxvY2spKTsKKwlh
c3NlcnRfc3Bpbl9sb2NrZWQoJihzbWFsbC0+YWxvY2spKTsKKworCWFzc2VydCgiam1hY2QtMjAx
IiwgYXRvbV9pc29wZW4oc21hbGwpKTsKKwlhc3NlcnQoImptYWNkLTIwMiIsIGF0b21faXNvcGVu
KGxhcmdlKSk7CisKKwkvKiBTcGxpY2UgYW5kIHVwZGF0ZSB0aGUgcGVyLWxldmVsIGRpcnR5IGpu
b2RlIGxpc3RzICovCisJZm9yIChsZXZlbCA9IDA7IGxldmVsIDwgUkVBTF9NQVhfWlRSRUVfSEVJ
R0hUICsgMTsgbGV2ZWwgKz0gMSkgeworCQl6Y291bnQgKz0KKwkJICAgIGNhcHR1cmVfZnVzZV9q
bm9kZV9saXN0cyhsYXJnZSwKKwkJCQkJICAgICBBVE9NX0RJUlRZX0xJU1QobGFyZ2UsIGxldmVs
KSwKKwkJCQkJICAgICBBVE9NX0RJUlRZX0xJU1Qoc21hbGwsIGxldmVsKSk7CisJfQorCisJLyog
U3BsaWNlIGFuZCB1cGRhdGUgdGhlIFtjbGVhbixkaXJ0eV0gam5vZGUgYW5kIHR4bmggbGlzdHMg
Ki8KKwl6Y291bnQgKz0KKwkgICAgY2FwdHVyZV9mdXNlX2pub2RlX2xpc3RzKGxhcmdlLCBBVE9N
X0NMRUFOX0xJU1QobGFyZ2UpLAorCQkJCSAgICAgQVRPTV9DTEVBTl9MSVNUKHNtYWxsKSk7CisJ
emNvdW50ICs9CisJICAgIGNhcHR1cmVfZnVzZV9qbm9kZV9saXN0cyhsYXJnZSwgQVRPTV9PVlJX
Ul9MSVNUKGxhcmdlKSwKKwkJCQkgICAgIEFUT01fT1ZSV1JfTElTVChzbWFsbCkpOworCXpjb3Vu
dCArPQorCSAgICBjYXB0dXJlX2Z1c2Vfam5vZGVfbGlzdHMobGFyZ2UsIEFUT01fV0JfTElTVChs
YXJnZSksCisJCQkJICAgICBBVE9NX1dCX0xJU1Qoc21hbGwpKTsKKwl6Y291bnQgKz0KKwkgICAg
Y2FwdHVyZV9mdXNlX2pub2RlX2xpc3RzKGxhcmdlLCAmbGFyZ2UtPmlub2RlcywgJnNtYWxsLT5p
bm9kZXMpOworCXRjb3VudCArPQorCSAgICBjYXB0dXJlX2Z1c2VfdHhuaF9saXN0cyhsYXJnZSwg
JmxhcmdlLT50eG5oX2xpc3QsCisJCQkJICAgICZzbWFsbC0+dHhuaF9saXN0KTsKKworCS8qIENo
ZWNrIG91ciBhY2NvdW50aW5nLiAqLworCWFzc2VydCgiam1hY2QtMTA2MyIsCisJICAgICAgIHpj
b3VudCArIHNtYWxsLT5udW1fcXVldWVkID09IHNtYWxsLT5jYXB0dXJlX2NvdW50KTsKKwlhc3Nl
cnQoImptYWNkLTEwNjUiLCB0Y291bnQgPT0gc21hbGwtPnR4bmhfY291bnQpOworCisJLyogc3Vt
IG51bWJlcnMgb2Ygd2FpdGVycyB0aHJlYWRzICovCisJbGFyZ2UtPm5yX3dhaXRlcnMgKz0gc21h
bGwtPm5yX3dhaXRlcnM7CisJc21hbGwtPm5yX3dhaXRlcnMgPSAwOworCisJLyogc3BsaWNlIGZs
dXNoIHF1ZXVlcyAqLworCXJlaXNlcjRfZnVzZV9mcShsYXJnZSwgc21hbGwpOworCisJLyogdXBk
YXRlIGNvdW50ZXIgb2Ygam5vZGUgb24gZXZlcnkgYXRvbScgbGlzdCAqLworCU9OX0RFQlVHKGxh
cmdlLT5kaXJ0eSArPSBzbWFsbC0+ZGlydHk7CisJCSBzbWFsbC0+ZGlydHkgPSAwOworCQkgbGFy
Z2UtPmNsZWFuICs9IHNtYWxsLT5jbGVhbjsKKwkJIHNtYWxsLT5jbGVhbiA9IDA7CisJCSBsYXJn
ZS0+b3Zyd3IgKz0gc21hbGwtPm92cndyOworCQkgc21hbGwtPm92cndyID0gMDsKKwkJIGxhcmdl
LT53YiArPSBzbWFsbC0+d2I7CisJCSBzbWFsbC0+d2IgPSAwOworCQkgbGFyZ2UtPmZxICs9IHNt
YWxsLT5mcTsKKwkJIHNtYWxsLT5mcSA9IDA7KTsKKworCS8qIGNvdW50IGZsdXNoZXJzIGluIHJl
c3VsdCBhdG9tICovCisJbGFyZ2UtPm5yX2ZsdXNoZXJzICs9IHNtYWxsLT5ucl9mbHVzaGVyczsK
KwlzbWFsbC0+bnJfZmx1c2hlcnMgPSAwOworCisJLyogdXBkYXRlIGNvdW50cyBvZiBmbHVzaGVk
IG5vZGVzICovCisJbGFyZ2UtPmZsdXNoZWQgKz0gc21hbGwtPmZsdXNoZWQ7CisJc21hbGwtPmZs
dXNoZWQgPSAwOworCisJLyogVHJhbnNmZXIgbGlzdCBjb3VudHMgdG8gbGFyZ2UuICovCisJbGFy
Z2UtPnR4bmhfY291bnQgKz0gc21hbGwtPnR4bmhfY291bnQ7CisJbGFyZ2UtPmNhcHR1cmVfY291
bnQgKz0gc21hbGwtPmNhcHR1cmVfY291bnQ7CisKKwkvKiBBZGQgYWxsIHR4bmggcmVmZXJlbmNl
cyB0byBsYXJnZS4gKi8KKwlhdG9taWNfYWRkKHNtYWxsLT50eG5oX2NvdW50LCAmbGFyZ2UtPnJl
ZmNvdW50KTsKKwlhdG9taWNfc3ViKHNtYWxsLT50eG5oX2NvdW50LCAmc21hbGwtPnJlZmNvdW50
KTsKKworCS8qIFJlc2V0IHNtYWxsIGNvdW50cyAqLworCXNtYWxsLT50eG5oX2NvdW50ID0gMDsK
KwlzbWFsbC0+Y2FwdHVyZV9jb3VudCA9IDA7CisKKwkvKiBBc3NpZ24gdGhlIG9sZGVzdCBzdGFy
dF90aW1lLCBtZXJnZSBmbGFncy4gKi8KKwlsYXJnZS0+c3RhcnRfdGltZSA9IG1pbihsYXJnZS0+
c3RhcnRfdGltZSwgc21hbGwtPnN0YXJ0X3RpbWUpOworCWxhcmdlLT5mbGFncyB8PSBzbWFsbC0+
ZmxhZ3M7CisKKwkvKiBNZXJnZSBibG9ja25yIHNldHMuICovCisJYmxvY2tucl9zZXRfbWVyZ2Uo
JnNtYWxsLT53YW5kZXJlZF9tYXAsICZsYXJnZS0+d2FuZGVyZWRfbWFwKTsKKworCS8qIE1lcmdl
IGRlbGV0ZSBzZXRzLiAqLworCWF0b21fZHNldF9tZXJnZShzbWFsbCwgbGFyZ2UpOworCisJLyog
TWVyZ2UgYWxsb2NhdGVkL2RlbGV0ZWQgZmlsZSBjb3VudHMgKi8KKwlsYXJnZS0+bnJfb2JqZWN0
c19kZWxldGVkICs9IHNtYWxsLT5ucl9vYmplY3RzX2RlbGV0ZWQ7CisJbGFyZ2UtPm5yX29iamVj
dHNfY3JlYXRlZCArPSBzbWFsbC0+bnJfb2JqZWN0c19jcmVhdGVkOworCisJc21hbGwtPm5yX29i
amVjdHNfZGVsZXRlZCA9IDA7CisJc21hbGwtPm5yX29iamVjdHNfY3JlYXRlZCA9IDA7CisKKwkv
KiBNZXJnZSBhbGxvY2F0ZWQgYmxvY2tzIGNvdW50cyAqLworCWxhcmdlLT5ucl9ibG9ja3NfYWxs
b2NhdGVkICs9IHNtYWxsLT5ucl9ibG9ja3NfYWxsb2NhdGVkOworCisJbGFyZ2UtPm5yX3J1bm5p
bmdfcXVldWVzICs9IHNtYWxsLT5ucl9ydW5uaW5nX3F1ZXVlczsKKwlzbWFsbC0+bnJfcnVubmlu
Z19xdWV1ZXMgPSAwOworCisJLyogTWVyZ2UgYmxvY2tzIHJlc2VydmVkIGZvciBvdmVyd3JpdGUg
c2V0LiAqLworCWxhcmdlLT5mbHVzaF9yZXNlcnZlZCArPSBzbWFsbC0+Zmx1c2hfcmVzZXJ2ZWQ7
CisJc21hbGwtPmZsdXNoX3Jlc2VydmVkID0gMDsKKworCWlmIChsYXJnZS0+c3RhZ2UgPCBzbWFs
bC0+c3RhZ2UpIHsKKwkJLyogTGFyZ2Ugb25seSBuZWVkcyB0byBub3RpZnkgaWYgaXQgaGFzIGNo
YW5nZWQgc3RhdGUuICovCisJCXJlaXNlcjRfYXRvbV9zZXRfc3RhZ2UobGFyZ2UsIHNtYWxsLT5z
dGFnZSk7CisJCXdha2V1cF9hdG9tX3dhaXRpbmdfbGlzdChsYXJnZSk7CisJfQorCisJcmVpc2Vy
NF9hdG9tX3NldF9zdGFnZShzbWFsbCwgQVNUQUdFX0lOVkFMSUQpOworCisJLyogTm90aWZ5IGFu
eSB3YWl0ZXJzLS1zbWFsbCBuZWVkcyB0byB1bmxvYWQgaXRzIHdhaXQgbGlzdHMuICBXYWl0ZXJz
CisJICAgYWN0dWFsbHkgcmVtb3ZlIHRoZW1zZWx2ZXMgZnJvbSB0aGUgbGlzdCBiZWZvcmUgcmV0
dXJuaW5nIGZyb20gdGhlCisJICAgZnVzZV93YWl0IGZ1bmN0aW9uLiAqLworCXdha2V1cF9hdG9t
X3dhaXRpbmdfbGlzdChzbWFsbCk7CisKKwkvKiBVbmxvY2sgYXRvbXMgKi8KKwlzcGluX3VubG9j
a19hdG9tKGxhcmdlKTsKKwlhdG9tX2RlY19hbmRfdW5sb2NrKHNtYWxsKTsKK30KKworLyogVFhO
TUdSIFNUVUZGICovCisKKy8qIFJlbGVhc2UgYSBibG9jayBmcm9tIHRoZSBhdG9tLCByZXZlcnNp
bmcgdGhlIGVmZmVjdHMgb2YgYmVpbmcgY2FwdHVyZWQsCisgICBkbyBub3QgcmVsZWFzZSBhdG9t
J3MgcmVmZXJlbmNlIHRvIGpub2RlIGR1ZSB0byBob2xkaW5nIHNwaW4tbG9ja3MuCisgICBDdXJy
ZW50bHkgdGhpcyBpcyBvbmx5IGNhbGxlZCB3aGVuIHRoZSBhdG9tIGNvbW1pdHMuCisKKyAgIE5P
VEU6IHRoaXMgZnVuY3Rpb24gZG9lcyBub3QgcmVsZWFzZSBhIChqb3VybmFsKSByZWZlcmVuY2Ug
dG8gam5vZGUKKyAgIGR1ZSB0byBsb2NraW5nIG9wdGltaXphdGlvbnMsIHlvdSBzaG91bGQgY2Fs
bCBqcHV0KCkgc29tZXdoZXJlIGFmdGVyCisgICBjYWxsaW5nIHJlaXNlcjRfdW5jYXB0dXJlX2Js
b2NrKCkuICovCit2b2lkIHJlaXNlcjRfdW5jYXB0dXJlX2Jsb2NrKGpub2RlICogbm9kZSkKK3sK
Kwl0eG5fYXRvbSAqYXRvbTsKKworCWFzc2VydCgidW1rYS0yMjYiLCBub2RlICE9IE5VTEwpOwor
CWF0b20gPSBub2RlLT5hdG9tOworCWFzc2VydCgidW1rYS0yMjgiLCBhdG9tICE9IE5VTEwpOwor
CisJYXNzZXJ0KCJqbWFjZC0xMDIxIiwgbm9kZS0+YXRvbSA9PSBhdG9tKTsKKwlhc3NlcnRfc3Bp
bl9sb2NrZWQoJihub2RlLT5ndWFyZCkpOworCWFzc2VydCgiam1hY2QtMTAyMyIsIGF0b21faXNf
cHJvdGVjdGVkKGF0b20pKTsKKworCUpGX0NMUihub2RlLCBKTk9ERV9ESVJUWSk7CisJSkZfQ0xS
KG5vZGUsIEpOT0RFX1JFTE9DKTsKKwlKRl9DTFIobm9kZSwgSk5PREVfT1ZSV1IpOworCUpGX0NM
Uihub2RlLCBKTk9ERV9DUkVBVEVEKTsKKwlKRl9DTFIobm9kZSwgSk5PREVfV1JJVEVCQUNLKTsK
KwlKRl9DTFIobm9kZSwgSk5PREVfUkVQQUNLKTsKKworCWxpc3RfZGVsX2luaXQoJm5vZGUtPmNh
cHR1cmVfbGluayk7CisJaWYgKEpGX0lTU0VUKG5vZGUsIEpOT0RFX0ZMVVNIX1FVRVVFRCkpIHsK
KwkJYXNzZXJ0KCJ6YW0tOTI1IiwgYXRvbV9pc29wZW4oYXRvbSkpOworCQlhc3NlcnQoInZzLTE2
MjMiLCBOT0RFX0xJU1Qobm9kZSkgPT0gRlFfTElTVCk7CisJCU9OX0RFQlVHKGF0b20tPm51bV9x
dWV1ZWQtLSk7CisJCUpGX0NMUihub2RlLCBKTk9ERV9GTFVTSF9RVUVVRUQpOworCX0KKwlhdG9t
LT5jYXB0dXJlX2NvdW50IC09IDE7CisJT05fREVCVUcoY291bnRfam5vZGUoYXRvbSwgbm9kZSwg
Tk9ERV9MSVNUKG5vZGUpLCBOT1RfQ0FQVFVSRUQsIDEpKTsKKwlub2RlLT5hdG9tID0gTlVMTDsK
KworCXNwaW5fdW5sb2NrX2pub2RlKG5vZGUpOworCUxPQ0tfQ05UX0RFQyh0X3JlZnMpOworfQor
CisvKiBVbmNvbmRpdGlvbmFsIGluc2VydCBvZiBqbm9kZSBpbnRvIGF0b20ncyBvdmVyd3JpdGUg
bGlzdC4gQ3VycmVudGx5IHVzZWQgaW4KKyAgIGJpdG1hcC1iYXNlZCBhbGxvY2F0b3IgY29kZSBm
b3IgYWRkaW5nIG1vZGlmaWVkIGJpdG1hcCBibG9ja3MgdGhlCisgICB0cmFuc2FjdGlvbi4gQGF0
b20gYW5kIEBub2RlIGFyZSBzcGluIGxvY2tlZCAqLwordm9pZCBpbnNlcnRfaW50b19hdG9tX292
cndyX2xpc3QodHhuX2F0b20gKiBhdG9tLCBqbm9kZSAqIG5vZGUpCit7CisJYXNzZXJ0KCJ6YW0t
NTM4IiwgYXRvbV9pc19wcm90ZWN0ZWQoYXRvbSkpOworCWFzc2VydF9zcGluX2xvY2tlZCgmKG5v
ZGUtPmd1YXJkKSk7CisJYXNzZXJ0KCJ6YW0tODk5IiwgSkZfSVNTRVQobm9kZSwgSk5PREVfT1ZS
V1IpKTsKKwlhc3NlcnQoInphbS01NDMiLCBub2RlLT5hdG9tID09IE5VTEwpOworCWFzc2VydCgi
dnMtMTQzMyIsICFqbm9kZV9pc191bmZvcm1hdHRlZChub2RlKSAmJiAham5vZGVfaXNfem5vZGUo
bm9kZSkpOworCisJbGlzdF9hZGQoJm5vZGUtPmNhcHR1cmVfbGluaywgQVRPTV9PVlJXUl9MSVNU
KGF0b20pKTsKKwlqcmVmKG5vZGUpOworCW5vZGUtPmF0b20gPSBhdG9tOworCWF0b20tPmNhcHR1
cmVfY291bnQrKzsKKwlPTl9ERUJVRyhjb3VudF9qbm9kZShhdG9tLCBub2RlLCBOT0RFX0xJU1Qo
bm9kZSksIE9WUldSX0xJU1QsIDEpKTsKK30KKworc3RhdGljIGludCBjb3VudF9kZWxldGVkX2Js
b2Nrc19hY3Rvcih0eG5fYXRvbSAqIGF0b20sCisJCQkJICAgICAgY29uc3QgcmVpc2VyNF9ibG9j
a19uciAqIGEsCisJCQkJICAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGIsIHZvaWQgKmRh
dGEpCit7CisJcmVpc2VyNF9ibG9ja19uciAqY291bnRlciA9IGRhdGE7CisKKwlhc3NlcnQoInph
bS05OTUiLCBkYXRhICE9IE5VTEwpOworCWFzc2VydCgiemFtLTk5NiIsIGEgIT0gTlVMTCk7CisJ
aWYgKGIgPT0gTlVMTCkKKwkJKmNvdW50ZXIgKz0gMTsKKwllbHNlCisJCSpjb3VudGVyICs9ICpi
OworCXJldHVybiAwOworfQorCityZWlzZXI0X2Jsb2NrX25yIHR4bm1ncl9jb3VudF9kZWxldGVk
X2Jsb2Nrcyh2b2lkKQoreworCXJlaXNlcjRfYmxvY2tfbnIgcmVzdWx0OworCXR4bl9tZ3IgKnRt
Z3IgPSAmZ2V0X3N1cGVyX3ByaXZhdGUocmVpc2VyNF9nZXRfY3VycmVudF9zYigpKS0+dG1ncjsK
Kwl0eG5fYXRvbSAqYXRvbTsKKworCXJlc3VsdCA9IDA7CisKKwlzcGluX2xvY2tfdHhubWdyKHRt
Z3IpOworCWxpc3RfZm9yX2VhY2hfZW50cnkoYXRvbSwgJnRtZ3ItPmF0b21zX2xpc3QsIGF0b21f
bGluaykgeworCQlzcGluX2xvY2tfYXRvbShhdG9tKTsKKwkJaWYgKGF0b21faXNvcGVuKGF0b20p
KQorCQkJYXRvbV9kc2V0X2RlZmVycmVkX2FwcGx5KGF0b20sIGNvdW50X2RlbGV0ZWRfYmxvY2tz
X2FjdG9yLCAmcmVzdWx0LCAwKTsKKwkJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwl9CisJc3Bp
bl91bmxvY2tfdHhubWdyKHRtZ3IpOworCisJcmV0dXJuIHJlc3VsdDsKK30KKwordm9pZCBhdG9t
X2RzZXRfaW5pdCh0eG5fYXRvbSAqYXRvbSkKK3sKKwlpZiAocmVpc2VyNF9pc19zZXQocmVpc2Vy
NF9nZXRfY3VycmVudF9zYigpLCBSRUlTRVI0X0RJU0NBUkQpKSB7CisJCWJsb2NrbnJfbGlzdF9p
bml0KCZhdG9tLT5kaXNjYXJkLmRlbGV0ZV9zZXQpOworCX0gZWxzZSB7CisJCWJsb2NrbnJfc2V0
X2luaXQoJmF0b20tPm5vZGlzY2FyZC5kZWxldGVfc2V0KTsKKwl9Cit9CisKK3ZvaWQgYXRvbV9k
c2V0X2Rlc3Ryb3kodHhuX2F0b20gKmF0b20pCit7CisJaWYgKHJlaXNlcjRfaXNfc2V0KHJlaXNl
cjRfZ2V0X2N1cnJlbnRfc2IoKSwgUkVJU0VSNF9ESVNDQVJEKSkgeworCQlibG9ja25yX2xpc3Rf
ZGVzdHJveSgmYXRvbS0+ZGlzY2FyZC5kZWxldGVfc2V0KTsKKwl9IGVsc2UgeworCQlibG9ja25y
X3NldF9kZXN0cm95KCZhdG9tLT5ub2Rpc2NhcmQuZGVsZXRlX3NldCk7CisJfQorfQorCit2b2lk
IGF0b21fZHNldF9tZXJnZSh0eG5fYXRvbSAqZnJvbSwgdHhuX2F0b20gKnRvKQoreworCWlmIChy
ZWlzZXI0X2lzX3NldChyZWlzZXI0X2dldF9jdXJyZW50X3NiKCksIFJFSVNFUjRfRElTQ0FSRCkp
IHsKKwkJYmxvY2tucl9saXN0X21lcmdlKCZmcm9tLT5kaXNjYXJkLmRlbGV0ZV9zZXQsICZ0by0+
ZGlzY2FyZC5kZWxldGVfc2V0KTsKKwl9IGVsc2UgeworCQlibG9ja25yX3NldF9tZXJnZSgmZnJv
bS0+bm9kaXNjYXJkLmRlbGV0ZV9zZXQsICZ0by0+bm9kaXNjYXJkLmRlbGV0ZV9zZXQpOworCX0K
K30KKworaW50IGF0b21fZHNldF9kZWZlcnJlZF9hcHBseSh0eG5fYXRvbSogYXRvbSwKKyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tucl9zZXRfYWN0b3JfZiBhY3RvciwKKyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCAqZGF0YSwKKyAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgaW50IGRlbGV0ZSkKK3sKKwlpbnQgcmV0OworCisJaWYgKHJlaXNlcjRfaXNfc2V0
KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSwgUkVJU0VSNF9ESVNDQVJEKSkgeworCQlyZXQgPSBi
bG9ja25yX2xpc3RfaXRlcmF0b3IoYXRvbSwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICZhdG9tLT5kaXNjYXJkLmRlbGV0ZV9zZXQsCisJCSAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBhY3RvciwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEsCisJCSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBkZWxldGUpOworCX0gZWxzZSB7CisJCXJldCA9IGJsb2NrbnJf
c2V0X2l0ZXJhdG9yKGF0b20sCisJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICZhdG9tLT5u
b2Rpc2NhcmQuZGVsZXRlX3NldCwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0b3Is
CisJCSAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEsCisJCSAgICAgICAgICAgICAgICAg
ICAgICAgICAgIGRlbGV0ZSk7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworZXh0ZXJuIGludCBh
dG9tX2RzZXRfZGVmZXJyZWRfYWRkX2V4dGVudCh0eG5fYXRvbSAqYXRvbSwKKyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCAqKm5ld19lbnRyeSwKKyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAq
c3RhcnQsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJl
aXNlcjRfYmxvY2tfbnIgKmxlbikKK3sKKwlpbnQgcmV0OworCisJaWYgKHJlaXNlcjRfaXNfc2V0
KHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKSwgUkVJU0VSNF9ESVNDQVJEKSkgeworCQlyZXQgPSBi
bG9ja25yX2xpc3RfYWRkX2V4dGVudChhdG9tLAorCQkgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAmYXRvbS0+ZGlzY2FyZC5kZWxldGVfc2V0LAorCQkgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAoYmxvY2tucl9saXN0X2VudHJ5KiopbmV3X2VudHJ5LAorCQkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBzdGFydCwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
bGVuKTsKKwl9IGVsc2UgeworCQlyZXQgPSBibG9ja25yX3NldF9hZGRfZXh0ZW50KGF0b20sCisJ
CSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJmF0b20tPm5vZGlzY2FyZC5kZWxldGVfc2V0
LAorCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChibG9ja25yX3NldF9lbnRyeSoqKW5l
d19lbnRyeSwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCwKKwkJICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBsZW4pOworCX0KKworCXJldHVybiByZXQ7Cit9CisKKy8q
CisgKiBMb2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICog
bW9kZS1uYW1lOiAiTEMiCisgKiBjLWJhc2ljLW9mZnNldDogOAorICogdGFiLXdpZHRoOiA4Cisg
KiBmaWxsLWNvbHVtbjogNzkKKyAqIEVuZDoKKyAqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5j
ZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3R4bm1nci5oIGxpbnV4LTUuNC4xNy9mcy9y
ZWlzZXI0L3R4bm1nci5oCi0tLSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3R4bm1nci5o
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMv
cmVpc2VyNC90eG5tZ3IuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4NzIyMjQ0MiArMDEwMApAQCAt
MCwwICsxLDc1NSBAQAorLyogQ29weXJpZ2h0IDIwMDEsIDIwMDIsIDIwMDMgYnkgSGFucyBSZWlz
ZXIsIGxpY2Vuc2luZyBnb3Zlcm5lZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogZGF0
YS10eXBlcyBhbmQgZnVuY3Rpb24gZGVjbGFyYXRpb25zIGZvciB0cmFuc2FjdGlvbiBtYW5hZ2Vy
LiBTZWUgdHhubWdyLmMKKyAqIGZvciBkZXRhaWxzLiAqLworCisjaWZuZGVmIF9fUkVJU0VSNF9U
WE5NR1JfSF9fCisjZGVmaW5lIF9fUkVJU0VSNF9UWE5NR1JfSF9fCisKKyNpbmNsdWRlICJmb3J3
YXJkLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgorCisjaW5jbHVkZSA8bGludXgvZnMuaD4KKyNp
bmNsdWRlIDxsaW51eC9tbS5oPgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8
bGludXgvc3BpbmxvY2suaD4KKyNpbmNsdWRlIDxhc20vYXRvbWljLmg+CisjaW5jbHVkZSA8bGlu
dXgvd2FpdC5oPgorCisvKiBUWVBFIERFQ0xBUkFUSU9OUyAqLworCisvKiBUaGlzIGVudW1lcmF0
aW9uIGRlc2NyaWJlcyB0aGUgcG9zc2libGUgdHlwZXMgb2YgYSBjYXB0dXJlIHJlcXVlc3QgKHJl
aXNlcjRfdHJ5X2NhcHR1cmUpLgorICAgQSBjYXB0dXJlIHJlcXVlc3QgZHluYW1pY2FsbHkgYXNz
aWducyBhIGJsb2NrIHRvIHRoZSBjYWxsaW5nIHRocmVhZCdzIHRyYW5zYWN0aW9uCisgICBoYW5k
bGUuICovCit0eXBlZGVmIGVudW0geworCS8qIEEgUkVBRF9BVE9NSUMgcmVxdWVzdCBpbmRpY2F0
ZXMgdGhhdCBhIGJsb2NrIHdpbGwgYmUgcmVhZCBhbmQgdGhhdCB0aGUgY2FsbGVyJ3MKKwkgICBh
dG9tIHNob3VsZCBmdXNlIGluIG9yZGVyIHRvIGVuc3VyZSB0aGF0IHRoZSBibG9jayBjb21taXRz
IGF0b21pY2FsbHkgd2l0aCB0aGUKKwkgICBjYWxsZXIuICovCisJVFhOX0NBUFRVUkVfUkVBRF9B
VE9NSUMgPSAoMSA8PCAwKSwKKworCS8qIEEgUkVBRF9OT05DT00gcmVxdWVzdCBpbmRpY2F0ZXMg
dGhhdCBhIGJsb2NrIHdpbGwgYmUgcmVhZCBhbmQgdGhhdCB0aGUgY2FsbGVyIGlzCisJICAgd2ls
bGluZyB0byByZWFkIGEgbm9uLWNvbW1pdHRlZCBibG9jayB3aXRob3V0IGNhdXNpbmcgYXRvbXMg
dG8gZnVzZS4gKi8KKwlUWE5fQ0FQVFVSRV9SRUFEX05PTkNPTSA9ICgxIDw8IDEpLAorCisJLyog
QSBSRUFEX01PRElGWSByZXF1ZXN0IGluZGljYXRlcyB0aGF0IGEgYmxvY2sgd2lsbCBiZSByZWFk
IGJ1dCB0aGF0IHRoZSBjYWxsZXIKKwkgICB3aXNoZXMgZm9yIHRoZSBibG9jayB0byBiZSBjYXB0
dXJlZCBhcyBpdCB3aWxsIGJlIHdyaXR0ZW4uICBUaGlzIGNhcHR1cmUgcmVxdWVzdAorCSAgIG1v
ZGUgaXMgbm90IGN1cnJlbnRseSB1c2VkLCBidXQgZXZlbnR1YWxseSBpdCB3aWxsIGJlIHVzZWZ1
bCBmb3IgcHJldmVudGluZworCSAgIGRlYWRsb2NrIGluIHJlYWQtbW9kaWZ5LXdyaXRlIGN5Y2xl
cy4gKi8KKwlUWE5fQ0FQVFVSRV9SRUFEX01PRElGWSA9ICgxIDw8IDIpLAorCisJLyogQSBXUklU
RSBjYXB0dXJlIHJlcXVlc3QgaW5kaWNhdGVzIHRoYXQgYSBibG9jayB3aWxsIGJlIG1vZGlmaWVk
IGFuZCB0aGF0IGF0b21zCisJICAgc2hvdWxkIGZ1c2UgdG8gbWFrZSB0aGUgY29tbWl0IGF0b21p
Yy4gKi8KKwlUWE5fQ0FQVFVSRV9XUklURSA9ICgxIDw8IDMpLAorCisJLyogQ0FQVFVSRV9UWVBF
UyBpcyBhIG1hc2sgb2YgdGhlIGZvdXIgYWJvdmUgY2FwdHVyZSB0eXBlcywgdXNlZCB0byBzZXBh
cmF0ZSB0aGUKKwkgICBleGNsdXNpdmUgdHlwZSBkZXNpZ25hdGlvbiBmcm9tIGV4dHJhIGJpdHMg
dGhhdCBtYXkgYmUgc3VwcGxpZWQgLS0gc2VlCisJICAgYmVsb3cuICovCisJVFhOX0NBUFRVUkVf
VFlQRVMgPSAoVFhOX0NBUFRVUkVfUkVBRF9BVE9NSUMgfAorCQkJICAgICBUWE5fQ0FQVFVSRV9S
RUFEX05PTkNPTSB8IFRYTl9DQVBUVVJFX1JFQURfTU9ESUZZIHwKKwkJCSAgICAgVFhOX0NBUFRV
UkVfV1JJVEUpLAorCisJLyogQSBzdWJzZXQgb2YgQ0FQVFVSRV9UWVBFUywgQ0FQVFVSRV9XVFlQ
RVMgaXMgYSBtYXNrIG9mIHJlcXVlc3QgdHlwZXMgdGhhdAorCSAgIGluZGljYXRlIG1vZGlmaWNh
dGlvbiB3aWxsIG9jY3VyLiAqLworCVRYTl9DQVBUVVJFX1dUWVBFUyA9IChUWE5fQ0FQVFVSRV9S
RUFEX01PRElGWSB8IFRYTl9DQVBUVVJFX1dSSVRFKSwKKworCS8qIEFuIG9wdGlvbiB0byByZWlz
ZXI0X3RyeV9jYXB0dXJlLCBOT05CTE9DS0lORyBpbmRpY2F0ZXMgdGhhdCB0aGUgY2FsbGVyIHdv
dWxkCisJICAgcHJlZmVyIG5vdCB0byBzbGVlcCB3YWl0aW5nIGZvciBhbiBhZ2luZyBhdG9tIHRv
IGNvbW1pdC4gKi8KKwlUWE5fQ0FQVFVSRV9OT05CTE9DS0lORyA9ICgxIDw8IDQpLAorCisJLyog
QW4gb3B0aW9uIHRvIHJlaXNlcjRfdHJ5X2NhcHR1cmUgdG8gcHJldmVudCBhdG9tIGZ1c2lvbiwg
anVzdCBzaW1wbGUKKwkgICBjYXB0dXJpbmcgaXMgYWxsb3dlZCAqLworCVRYTl9DQVBUVVJFX0RP
TlRfRlVTRSA9ICgxIDw8IDUpCisKKwkvKiBUaGlzIG1hY3JvIHNlbGVjdHMgb25seSB0aGUgZXhj
bHVzaXZlIGNhcHR1cmUgcmVxdWVzdCB0eXBlcywgc3RyaXBwaW5nIG91dCBhbnkKKwkgICBvcHRp
b25zIHRoYXQgd2VyZSBzdXBwbGllZCAoaS5lLiwgTk9OQkxPQ0tJTkcpLiAqLworI2RlZmluZSBD
QVBUVVJFX1RZUEUoeCkgKCh4KSAmIFRYTl9DQVBUVVJFX1RZUEVTKQorfSB0eG5fY2FwdHVyZTsK
KworLyogVGhlcmUgYXJlIHR3byBraW5kcyBvZiB0cmFuc2FjdGlvbiBoYW5kbGU6IFdSSVRFX0ZV
U0lORyBhbmQgUkVBRF9GVVNJTkcsIHRoZSBvbmx5CisgICBkaWZmZXJlbmNlIGlzIGluIHRoZSBo
YW5kbGluZyBvZiByZWFkIHJlcXVlc3RzLiAgQSBXUklURV9GVVNJTkcgdHJhbnNhY3Rpb24gaGFu
ZGxlCisgICBkZWZhdWx0cyByZWFkIGNhcHR1cmUgcmVxdWVzdHMgdG8gVFhOX0NBUFRVUkVfUkVB
RF9OT05DT00gd2hlcmVhcyBhIFJFQURfRlVTSU9ORworICAgdHJhbnNhY3Rpb24gaGFuZGxlIGRl
ZmF1bHRzIHRvIFRYTl9DQVBUVVJFX1JFQURfQVRPTUlDLiAqLwordHlwZWRlZiBlbnVtIHsKKwlU
WE5fV1JJVEVfRlVTSU5HID0gKDEgPDwgMCksCisJVFhOX1JFQURfRlVTSU5HID0gKDEgPDwgMSkg
fCBUWE5fV1JJVEVfRlVTSU5HLAkvKiBSRUFEIGltcGxpZXMgV1JJVEUgKi8KK30gdHhuX21vZGU7
CisKKy8qIEV2ZXJ5IGF0b20gaGFzIGEgc3RhZ2UsIHdoaWNoIGlzIG9uZSBvZiB0aGVzZSBleGNs
dXNpdmUgdmFsdWVzOiAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBJbml0aWFsbHkgYW4gYXRvbSBp
cyBmcmVlLiAqLworCUFTVEFHRV9GUkVFID0gMCwKKworCS8qIEFuIGF0b20gYmVnaW5zIGJ5IGVu
dGVyaW5nIHRoZSBDQVBUVVJFX0ZVU0Ugc3RhZ2UsIHdoZXJlIGl0IHByb2NlZWRzIHRvIGNhcHR1
cmUKKwkgICBibG9ja3MgYW5kIGZ1c2Ugd2l0aCBvdGhlciBhdG9tcy4gKi8KKwlBU1RBR0VfQ0FQ
VFVSRV9GVVNFID0gMSwKKworCS8qIFdlIG5lZWQgdG8gaGF2ZSBhIEFTVEFHRV9DQVBUVVJFX1NM
T1cgaW4gd2hpY2ggYW4gYXRvbSBmdXNlcyB3aXRoIG9uZSBub2RlIGZvciBldmVyeSBYIG5vZGVz
IGl0IGZsdXNoZXMgdG8gZGlzayB3aGVyZSBYID4gMS4gKi8KKworCS8qIFdoZW4gYW4gYXRvbSBy
ZWFjaGVzIGEgY2VydGFpbiBhZ2UgaXQgbXVzdCBkbyBhbGwgaXQgY2FuIHRvIGNvbW1pdC4gIEFu
IGF0b20gaW4KKwkgICB0aGUgQ0FQVFVSRV9XQUlUIHN0YWdlIHJlZnVzZXMgbmV3IHRyYW5zYWN0
aW9uIGhhbmRsZXMgYW5kIHByZXZlbnRzIGZ1c2lvbiBmcm9tCisJICAgYXRvbXMgaW4gdGhlIENB
UFRVUkVfRlVTRSBzdGFnZS4gKi8KKwlBU1RBR0VfQ0FQVFVSRV9XQUlUID0gMiwKKworCS8qIFdh
aXRpbmcgZm9yIEkvTyBiZWZvcmUgY29tbWl0LiAgQ29weS1vbi1jYXB0dXJlIChzZWUKKwkgICBo
dHRwOi8vbmFtZXN5cy5jb20vdjQvdjQuaHRtbCkuICovCisJQVNUQUdFX1BSRV9DT01NSVQgPSAz
LAorCisJLyogUG9zdC1jb21taXQgb3ZlcndyaXRlIEkvTy4gIFN0ZWFsLW9uLWNhcHR1cmUuICov
CisJQVNUQUdFX1BPU1RfQ09NTUlUID0gNCwKKworCS8qIEF0b20gd2hpY2ggd2FpdHMgZm9yIHRo
ZSByZW1vdmFsIG9mIHRoZSBsYXN0IHJlZmVyZW5jZSB0byAoaXQ/ICkgdG8KKwkgKiBiZSBkZWxl
dGVkIGZyb20gbWVtb3J5ICAqLworCUFTVEFHRV9ET05FID0gNSwKKworCS8qIGludmFsaWQgYXRv
bS4gKi8KKwlBU1RBR0VfSU5WQUxJRCA9IDYsCisKK30gdHhuX3N0YWdlOworCisvKiBDZXJ0YWlu
IGZsYWdzIG1heSBiZSBzZXQgaW4gdGhlIHR4bl9hdG9tLT5mbGFncyBmaWVsZC4gKi8KK3R5cGVk
ZWYgZW51bSB7CisJLyogSW5kaWNhdGVzIHRoYXQgdGhlIGF0b20gc2hvdWxkIGNvbW1pdCBhcyBz
b29uIGFzIHBvc3NpYmxlLiAqLworCUFUT01fRk9SQ0VfQ09NTUlUID0gKDEgPDwgMCksCisJLyog
dG8gYXZvaWQgZW5kbGVzcyBsb29wLCBtYXJrIHRoZSBhdG9tICh3aGljaCB3YXMgY29uc2lkZXJl
ZCBhcyB0b28KKwkgKiBzbWFsbCkgYWZ0ZXIgZmFpbGVkIGF0dGVtcHQgdG8gZnVzZSBpdC4gKi8K
KwlBVE9NX0NBTkNFTF9GVVNJT04gPSAoMSA8PCAxKQorfSB0eG5fZmxhZ3M7CisKKy8qIEZsYWdz
IGZvciBjb250cm9sbGluZyBjb21taXRfdHhuaCAqLwordHlwZWRlZiBlbnVtIHsKKwkvKiBXYWl0
IGNvbW1pdCBhdG9tIGNvbXBsZXRpb24gaW4gY29tbWl0X3R4bmggKi8KKwlUWE5IX1dBSVRfQ09N
TUlUID0gMHgyLAorCS8qIERvbid0IGNvbW1pdCBhdG9tIHdoZW4gdGhpcyBoYW5kbGUgaXMgY2xv
c2VkICovCisJVFhOSF9ET05UX0NPTU1JVCA9IDB4NAorfSB0eG5faGFuZGxlX2ZsYWdzX3Q7CisK
Ky8qIFRZUEUgREVGSU5JVElPTlMgKi8KKworLyogQSBub3RlIG9uIGxvY2sgb3JkZXJpbmc6IHRo
ZSBoYW5kbGUgJiBqbm9kZSBzcGlubG9jayBwcm90ZWN0cyByZWFkaW5nIG9mIHRoZWlyIC0+YXRv
bQorICAgZmllbGRzLCBzbyB0eXBpY2FsbHkgYW4gb3BlcmF0aW9uIG9uIHRoZSBhdG9tIHRocm91
Z2ggZWl0aGVyIG9mIHRoZXNlIG9iamVjdHMgbXVzdCAoMSkKKyAgIGxvY2sgdGhlIG9iamVjdCwg
KDIpIHJlYWQgdGhlIGF0b20gcG9pbnRlciwgKDMpIGxvY2sgdGhlIGF0b20uCisKKyAgIER1cmlu
ZyBhdG9tIGZ1c2lvbiwgdGhlIHByb2Nlc3MgaG9sZHMgbG9ja3Mgb24gYm90aCBhdG9tcyBhdCBv
bmNlLiAgVGhlbiwgaXQgaXRlcmF0ZXMKKyAgIHRocm91Z2ggdGhlIGxpc3Qgb2YgaGFuZGxlcyBh
bmQgcGFnZXMgaGVsZCBieSB0aGUgc21hbGxlciBvZiB0aGUgdHdvIGF0b21zLiAgRm9yIGVhY2gK
KyAgIGhhbmRsZSBhbmQgcGFnZSByZWZlcmVuY2luZyB0aGUgc21hbGxlciBhdG9tLCB0aGUgZnVz
aW5nIHByb2Nlc3MgbXVzdDogKDEpIGxvY2sgdGhlCisgICBvYmplY3QsIGFuZCAoMikgdXBkYXRl
IHRoZSBhdG9tIHBvaW50ZXIuCisKKyAgIFlvdSBjYW4gc2VlIHRoYXQgdGhlcmUgaXMgYSBjb25m
bGljdCBvZiBsb2NrIG9yZGVyaW5nIGhlcmUsIHNvIHRoZSBtb3JlLWNvbXBsZXgKKyAgIHByb2Nl
ZHVyZSBzaG91bGQgaGF2ZSBwcmlvcml0eSwgaS5lLiwgdGhlIGZ1c2luZyBwcm9jZXNzIGhhcyBw
cmlvcml0eSBzbyB0aGF0IGl0IGlzCisgICBndWFyYW50ZWVkIHRvIG1ha2UgcHJvZ3Jlc3MgYW5k
IHRvIGF2b2lkIHJlc3RhcnRzLgorCisgICBUaGlzIGRlY2lzaW9uLCBob3dldmVyLCBtZWFucyBh
ZGRpdGlvbmFsIGNvbXBsZXhpdHkgZm9yIGFxdWlyaW5nIHRoZSBhdG9tIGxvY2sgaW4gdGhlCisg
ICBmaXJzdCBwbGFjZS4KKworICAgVGhlIGdlbmVyYWwgb3JpZ2luYWwgcHJvY2VkdXJlIGZvbGxv
d2VkIGluIHRoZSBjb2RlIHdhczoKKworICAgICAgIFRYTl9PQkpFQ1QgKm9iaiA9IC4uLjsKKyAg
ICAgICBUWE5fQVRPTSAgICphdG9tOworCisgICAgICAgc3Bpbl9sb2NrICgmIG9iai0+X2xvY2sp
OworCisgICAgICAgYXRvbSA9IG9iai0+X2F0b207CisKKyAgICAgICBpZiAoISBzcGluX3RyeWxv
Y2tfYXRvbSAoYXRvbSkpCisgICAgICAgICB7CisgICAgICAgICAgIHNwaW5fdW5sb2NrICgmIG9i
ai0+X2xvY2spOworICAgICAgICAgICBSRVNUQVJUIE9QRVJBVElPTiwgVEhFUkUgV0FTIEEgUkFD
RTsKKyAgICAgICAgIH0KKworICAgICAgIEVMU0UgWU9VIEhBVkUgQk9USCBBVE9NIEFORCBPQkog
TE9DS0VECisKKyAgIEl0IGhhcyBob3dldmVyIGJlZW4gZm91bmQgdGhhdCB0aGlzIHdhc3RlcyBD
UFUgYSBsb3QgaW4gYSBtYW5uZXIgdGhhdCBpcworICAgaGFyZCB0byBwcm9maWxlLiBTbywgcHJv
cGVyIHJlZmNvdW50aW5nIHdhcyBhZGRlZCB0byBhdG9tcywgYW5kIG5ldworICAgc3RhbmRhcmQg
bG9ja2luZyBzZXF1ZW5jZSBpcyBsaWtlIGZvbGxvd2luZzoKKworICAgICAgIFRYTl9PQkpFQ1Qg
Km9iaiA9IC4uLjsKKyAgICAgICBUWE5fQVRPTSAgICphdG9tOworCisgICAgICAgc3Bpbl9sb2Nr
ICgmIG9iai0+X2xvY2spOworCisgICAgICAgYXRvbSA9IG9iai0+X2F0b207CisKKyAgICAgICBp
ZiAoISBzcGluX3RyeWxvY2tfYXRvbSAoYXRvbSkpCisgICAgICAgICB7CisgICAgICAgICAgIGF0
b21pY19pbmMgKCYgYXRvbS0+cmVmY291bnQpOworICAgICAgICAgICBzcGluX3VubG9jayAoJiBv
YmotPl9sb2NrKTsKKyAgICAgICAgICAgc3Bpbl9sb2NrICgmYXRvbS0+X2xvY2spOworICAgICAg
ICAgICBhdG9taWNfZGVjICgmIGF0b20tPnJlZmNvdW50KTsKKyAgICAgICAgICAgLy8gSEVSRSBh
dG9tIGlzIGxvY2tlZAorICAgICAgICAgICBzcGluX3VubG9jayAoJmF0b20tPl9sb2NrKTsKKyAg
ICAgICAgICAgUkVTVEFSVCBPUEVSQVRJT04sIFRIRVJFIFdBUyBBIFJBQ0U7CisgICAgICAgICB9
CisKKyAgICAgICBFTFNFIFlPVSBIQVZFIEJPVEggQVRPTSBBTkQgT0JKIExPQ0tFRAorCisgICAo
Y29yZSBvZiB0aGlzIGlzIGltcGxlbWVudGVkIGluIHRyeWxvY2tfdGhyb3R0bGUoKSBmdW5jdGlv
bikKKworICAgU2VlIHRoZSBqbm9kZV9nZXRfYXRvbSgpIGZ1bmN0aW9uIGZvciBhIGNvbW1vbiBj
YXNlLgorCisgICBBcyBhbiBhZGRpdGlvbmFsIChhbmQgaW1wb3J0YW50KSBvcHRpbWl6YXRpb24g
YWxsb3dpbmcgdG8gYXZvaWQgcmVzdGFydHMsCisgICBpdCBpcyBwb3NzaWJsZSB0byByZS1jaGVj
ayByZXF1aXJlZCBwcmUtY29uZGl0aW9ucyBhdCB0aGUgSEVSRSBwb2ludCBpbgorICAgY29kZSBh
Ym92ZSBhbmQgcHJvY2VlZCB3aXRob3V0IHJlc3RhcnRpbmcgaWYgdGhleSBhcmUgc3RpbGwgc2F0
aXNmaWVkLgorKi8KKworLyogQW4gYXRvbWljIHRyYW5zYWN0aW9uOiB0aGlzIGlzIHRoZSB1bmRl
cmx5aW5nIHN5c3RlbSByZXByZXNlbnRhdGlvbgorICAgb2YgYSB0cmFuc2FjdGlvbiwgbm90IHRo
ZSBvbmUgc2VlbiBieSBjbGllbnRzLgorCisgICBJbnZhcmlhbnRzIGludm9sdmluZyB0aGlzIGRh
dGEtdHlwZToKKworICAgICAgW3NiLWZha2UtYWxsb2NhdGVkXQorKi8KK3N0cnVjdCB0eG5fYXRv
bSB7CisJLyogVGhlIHNwaW5sb2NrIHByb3RlY3RpbmcgdGhlIGF0b20sIGhlbGQgZHVyaW5nIGZ1
c2lvbiBhbmQgdmFyaW91cyBvdGhlciBzdGF0ZQorCSAgIGNoYW5nZXMuICovCisJc3BpbmxvY2tf
dCBhbG9jazsKKworCS8qIFRoZSBhdG9tJ3MgcmVmZXJlbmNlIGNvdW50ZXIsIGluY3JlYXNpbmcg
KGluIGNhc2Ugb2YgYSBkdXBsaWNhdGlvbgorCSAgIG9mIGFuIGV4aXN0aW5nIHJlZmVyZW5jZSBv
ciB3aGVuIHdlIGFyZSBzdXJlIHRoYXQgc29tZSBvdGhlcgorCSAgIHJlZmVyZW5jZSBleGlzdHMp
IG1heSBiZSBkb25lIHdpdGhvdXQgdGFraW5nIHNwaW5sb2NrLCBkZWNyZW1lbnRpbmcKKwkgICBv
ZiB0aGUgcmVmLiBjb3VudGVyIHJlcXVpcmVzIGEgc3BpbmxvY2sgdG8gYmUgaGVsZC4KKworCSAg
IEVhY2ggdHJhbnNhY3Rpb24gaGFuZGxlIGNvdW50cyBpbiAtPnJlZmNvdW50LiBBbGwgam5vZGVz
IGNvdW50IGFzCisJICAgb25lIHJlZmVyZW5jZSBhY3F1aXJlZCBpbiBhdG9tX2JlZ2luX2FuZGxv
Y2soKSwgcmVsZWFzZWQgaW4KKwkgICBjb21taXRfY3VycmVudF9hdG9tKCkuCisJICovCisJYXRv
bWljX3QgcmVmY291bnQ7CisKKwkvKiBUaGUgYXRvbV9pZCBpZGVudGlmaWVzIHRoZSBhdG9tIGlu
IHBlcnNpc3RlbnQgcmVjb3JkcyBzdWNoIGFzIHRoZSBsb2cuICovCisJX191MzIgYXRvbV9pZDsK
KworCS8qIEZsYWdzIGhvbGRpbmcgYW55IG9mIHRoZSB0eG5fZmxhZ3MgZW51bWVyYXRlZCB2YWx1
ZXMgKGUuZy4sCisJICAgQVRPTV9GT1JDRV9DT01NSVQpLiAqLworCV9fdTMyIGZsYWdzOworCisJ
LyogTnVtYmVyIG9mIG9wZW4gaGFuZGxlcy4gKi8KKwlfX3UzMiB0eG5oX2NvdW50OworCisJLyog
VGhlIG51bWJlciBvZiB6bm9kZXMgY2FwdHVyZWQgYnkgdGhpcyBhdG9tLiAgRXF1YWwgdG8gdGhl
IHN1bSBvZiBsZW5ndGhzIG9mIHRoZQorCSAgIGRpcnR5X25vZGVzW2xldmVsXSBhbmQgY2xlYW5f
bm9kZXMgbGlzdHMuICovCisJX191MzIgY2FwdHVyZV9jb3VudDsKKworI2lmIFJFSVNFUjRfREVC
VUcKKwlpbnQgY2xlYW47CisJaW50IGRpcnR5OworCWludCBvdnJ3cjsKKwlpbnQgd2I7CisJaW50
IGZxOworI2VuZGlmCisKKwlfX3UzMiBmbHVzaGVkOworCisJLyogQ3VycmVudCB0cmFuc2FjdGlv
biBzdGFnZS4gKi8KKwl0eG5fc3RhZ2Ugc3RhZ2U7CisKKwkvKiBTdGFydCB0aW1lLiAqLworCXVu
c2lnbmVkIGxvbmcgc3RhcnRfdGltZTsKKworCS8qIFRoZSBhdG9tJ3MgZGVsZXRlIHNldHMuCisJ
ICAgInNpbXBsZSIgYXJlIGJsb2NrbnJfc2V0IGluc3RhbmNlcyBhbmQgYXJlIHVzZWQgd2hlbiBk
aXNjYXJkIGlzIGRpc2FibGVkLgorCSAgICJkaXNjYXJkIiBhcmUgYmxvY2tucl9saXN0IGluc3Rh
bmNlcyBhbmQgYXJlIHVzZWQgd2hlbiBkaXNjYXJkIGlzIGVuYWJsZWQuICovCisJdW5pb24gewor
CQlzdHJ1Y3QgeworCQkvKiBUaGUgYXRvbSdzIGRlbGV0ZSBzZXQuIEl0IGNvbGxlY3RzIGJsb2Nr
IG51bWJlcnMgb2YgdGhlIG5vZGVzCisJCSAgIHdoaWNoIHdlcmUgZGVsZXRlZCBkdXJpbmcgdGhl
IHRyYW5zYWN0aW9uLiAqLworCQkJc3RydWN0IGxpc3RfaGVhZCBkZWxldGVfc2V0OworCQl9IG5v
ZGlzY2FyZDsKKworCQlzdHJ1Y3QgeworCQkJLyogVGhlIGF0b20ncyBkZWxldGUgc2V0LiBJdCBj
b2xsZWN0cyBhbGwgYmxvY2tzIHRoYXQgaGF2ZSBiZWVuCisJCQkgICBkZWFsbG9jYXRlZCAoYm90
aCBpbW1lZGlhdGUgYW5kIGRlZmVycmVkKSBkdXJpbmcgdGhlIHRyYW5zYWN0aW9uLgorCQkJICAg
VGhlc2UgYmxvY2tzIGFyZSBjb25zaWRlcmVkIGZvciBkaXNjYXJkaW5nIGF0IGNvbW1pdCB0aW1l
LgorCQkJICAgRm9yIGRldGFpbHMgc2VlIGRpc2NhcmQuYyAqLworCQkJc3RydWN0IGxpc3RfaGVh
ZCBkZWxldGVfc2V0OworCQl9IGRpc2NhcmQ7CisJfTsKKworCS8qIFRoZSBhdG9tJ3Mgd2FuZGVy
ZWRfYmxvY2sgbWFwcGluZy4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIHdhbmRlcmVkX21hcDsKKwor
CS8qIFRoZSB0cmFuc2FjdGlvbidzIGxpc3Qgb2YgZGlydHkgY2FwdHVyZWQgbm9kZXMtLXBlciBs
ZXZlbC4gIEluZGV4CisJICAgYnkgKGxldmVsKS4gZGlydHlfbm9kZXNbMF0gaXMgZm9yIHpub2Rl
LWFib3ZlLXJvb3QgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGRpcnR5X25vZGVzW1JFQUxfTUFYX1pU
UkVFX0hFSUdIVCArIDFdOworCisJLyogVGhlIHRyYW5zYWN0aW9uJ3MgbGlzdCBvZiBjbGVhbiBj
YXB0dXJlZCBub2Rlcy4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGNsZWFuX25vZGVzOworCisJLyog
VGhlIGF0b20ncyBvdmVyd3JpdGUgc2V0ICovCisJc3RydWN0IGxpc3RfaGVhZCBvdnJ3cl9ub2Rl
czsKKworCS8qIG5vZGVzIHdoaWNoIGFyZSBiZWluZyB3cml0dGVuIHRvIGRpc2sgKi8KKwlzdHJ1
Y3QgbGlzdF9oZWFkIHdyaXRlYmFja19ub2RlczsKKworCS8qIGxpc3Qgb2YgaW5vZGVzICovCisJ
c3RydWN0IGxpc3RfaGVhZCBpbm9kZXM7CisKKwkvKiBMaXN0IG9mIGhhbmRsZXMgYXNzb2NpYXRl
ZCB3aXRoIHRoaXMgYXRvbS4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIHR4bmhfbGlzdDsKKworCS8q
IFRyYW5zYWN0aW9uIGxpc3QgbGluazogbGlzdCBvZiBhdG9tcyBpbiB0aGUgdHJhbnNhY3Rpb24g
bWFuYWdlci4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGF0b21fbGluazsKKworCS8qIExpc3Qgb2Yg
aGFuZGxlcyB3YWl0aW5nIEZPUiB0aGlzIGF0b206IHNlZSAnY2FwdHVyZV9mdXNlX3dhaXQnIGNv
bW1lbnQuICovCisJc3RydWN0IGxpc3RfaGVhZCBmd2FpdGZvcl9saXN0OworCisJLyogTGlzdCBv
ZiB0aGlzIGF0b20ncyBoYW5kbGVzIHRoYXQgYXJlIHdhaXRpbmc6IHNlZSAnY2FwdHVyZV9mdXNl
X3dhaXQnIGNvbW1lbnQuICovCisJc3RydWN0IGxpc3RfaGVhZCBmd2FpdGluZ19saXN0OworCisJ
LyogTnVtYmVycyBvZiBvYmplY3RzIHdoaWNoIHdlcmUgZGVsZXRlZC9jcmVhdGVkIGluIHRoaXMg
dHJhbnNhY3Rpb24KKwkgICB0aGVyZWJ5IG51bWJlcnMgb2Ygb2JqZWN0cyBJRHMgd2hpY2ggd2Vy
ZSByZWxlYXNlZC9kZWFsbG9jYXRlZC4gKi8KKwlpbnQgbnJfb2JqZWN0c19kZWxldGVkOworCWlu
dCBucl9vYmplY3RzX2NyZWF0ZWQ7CisJLyogbnVtYmVyIG9mIGJsb2NrcyBhbGxvY2F0ZWQgZHVy
aW5nIHRoZSB0cmFuc2FjdGlvbiAqLworCV9fdTY0IG5yX2Jsb2Nrc19hbGxvY2F0ZWQ7CisJLyog
QWxsIGF0b20ncyBmbHVzaCBxdWV1ZSBvYmplY3RzIGFyZSBvbiB0aGlzIGxpc3QgICovCisJc3Ry
dWN0IGxpc3RfaGVhZCBmbHVzaF9xdWV1ZXM7CisjaWYgUkVJU0VSNF9ERUJVRworCS8qIG51bWJl
ciBvZiBmbHVzaCBxdWV1ZXMgZm9yIHRoaXMgYXRvbS4gKi8KKwlpbnQgbnJfZmx1c2hfcXVldWVz
OworCS8qIE51bWJlciBvZiBqbm9kZXMgd2hpY2ggd2VyZSByZW1vdmVkIGZyb20gYXRvbSdzIGxp
c3RzIGFuZCBwdXQKKwkgICBvbiBmbHVzaF9xdWV1ZSAqLworCWludCBudW1fcXVldWVkOworI2Vu
ZGlmCisJLyogbnVtYmVyIG9mIHRocmVhZHMgd2hvIHdhaXQgZm9yIHRoaXMgYXRvbSB0byBjb21w
bGV0ZSBjb21taXQgKi8KKwlpbnQgbnJfd2FpdGVyczsKKwkvKiBudW1iZXIgb2YgdGhyZWFkcyB3
aGljaCBkbyBqbm9kZV9mbHVzaCgpIG92ZXIgdGhpcyBhdG9tICovCisJaW50IG5yX2ZsdXNoZXJz
OworCS8qIG51bWJlciBvZiBmbHVzaCBxdWV1ZXMgd2hpY2ggYXJlIElOX1VTRSBhbmQgam5vZGVz
IGZyb20gZnEtPnByZXBwZWQKKwkgICBhcmUgc3VibWl0dGVkIHRvIGRpc2sgYnkgdGhlIHJlaXNl
cjRfd3JpdGVfZnEoKSByb3V0aW5lLiAqLworCWludCBucl9ydW5uaW5nX3F1ZXVlczsKKwkvKiBB
IGNvdW50ZXIgb2YgZ3JhYmJlZCB1bmZvcm1hdHRlZCBub2Rlcywgc2VlIGEgZGVzY3JpcHRpb24g
b2YgdGhlCisJICogcmVpc2VyNCBzcGFjZSByZXNlcnZhdGlvbiBzY2hlbWUgYXQgYmxvY2tfYWxs
b2MuYyAqLworCXJlaXNlcjRfYmxvY2tfbnIgZmx1c2hfcmVzZXJ2ZWQ7CisjaWYgUkVJU0VSNF9E
RUJVRworCXZvaWQgKmNvbW1pdHRlcjsKKyNlbmRpZgorCXN0cnVjdCBzdXBlcl9ibG9jayAqc3Vw
ZXI7Cit9OworCisjZGVmaW5lIEFUT01fRElSVFlfTElTVChhdG9tLCBsZXZlbCkgKCYoYXRvbSkt
PmRpcnR5X25vZGVzW2xldmVsXSkKKyNkZWZpbmUgQVRPTV9DTEVBTl9MSVNUKGF0b20pICgmKGF0
b20pLT5jbGVhbl9ub2RlcykKKyNkZWZpbmUgQVRPTV9PVlJXUl9MSVNUKGF0b20pICgmKGF0b20p
LT5vdnJ3cl9ub2RlcykKKyNkZWZpbmUgQVRPTV9XQl9MSVNUKGF0b20pICgmKGF0b20pLT53cml0
ZWJhY2tfbm9kZXMpCisjZGVmaW5lIEFUT01fRlFfTElTVChmcSkgKCYoZnEpLT5wcmVwcGVkKQor
CisjZGVmaW5lIE5PREVfTElTVChub2RlKSAobm9kZSktPmxpc3QKKyNkZWZpbmUgQVNTSUdOX05P
REVfTElTVChub2RlLCBsaXN0KSBPTl9ERUJVRyhOT0RFX0xJU1Qobm9kZSkgPSBsaXN0KQorT05f
REVCVUcodm9pZAorCSBjb3VudF9qbm9kZSh0eG5fYXRvbSAqLCBqbm9kZSAqLCBhdG9tX2xpc3Qg
b2xkX2xpc3QsCisJCSAgICAgYXRvbV9saXN0IG5ld19saXN0LCBpbnQgY2hlY2tfbGlzdHMpKTsK
KworLyogQSB0cmFuc2FjdGlvbiBoYW5kbGU6IHRoZSBjbGllbnQgb2J0YWlucyBhbmQgY29tbWl0
cyB0aGlzIGhhbmRsZSB3aGljaCBpcyBhc3NpZ25lZCBieQorICAgdGhlIHN5c3RlbSB0byBhIHR4
bl9hdG9tLiAqLworc3RydWN0IHR4bl9oYW5kbGUgeworCS8qIFNwaW5sb2NrIHByb3RlY3Rpbmcg
LT5hdG9tIHBvaW50ZXIgKi8KKwlzcGlubG9ja190IGhsb2NrOworCisJLyogRmxhZ3MgZm9yIGNv
bnRyb2xsaW5nIGNvbW1pdF90eG5oKCkgYmVoYXZpb3IgKi8KKwkvKiBmcm9tIHR4bl9oYW5kbGVf
ZmxhZ3NfdCAqLworCXR4bl9oYW5kbGVfZmxhZ3NfdCBmbGFnczsKKworCS8qIFdoZXRoZXIgaXQg
aXMgUkVBRF9GVVNJTkcgb3IgV1JJVEVfRlVTSU5HLiAqLworCXR4bl9tb2RlIG1vZGU7CisKKwkv
KiBJZiBhc3NpZ25lZCwgdGhlIGF0b20gaXQgaXMgcGFydCBvZi4gKi8KKwl0eG5fYXRvbSAqYXRv
bTsKKworCS8qIFRyYW5zYWN0aW9uIGxpc3QgbGluay4gSGVhZCBpcyBpbiB0eG5fYXRvbS4gKi8K
KwlzdHJ1Y3QgbGlzdF9oZWFkIHR4bmhfbGluazsKK307CisKKy8qIFRoZSB0cmFuc2FjdGlvbiBt
YW5hZ2VyOiBvbmUgaXMgY29udGFpbmVkIGluIHRoZSByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAq
Lworc3RydWN0IHR4bl9tZ3IgeworCS8qIEEgc3BpbmxvY2sgcHJvdGVjdGluZyB0aGUgYXRvbSBs
aXN0LCBpZF9jb3VudCwgZmx1c2hfY29udHJvbCAqLworCXNwaW5sb2NrX3QgdG1ncl9sb2NrOwor
CisJLyogTGlzdCBvZiBhdG9tcy4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGF0b21zX2xpc3Q7CisK
KwkvKiBOdW1iZXIgb2YgYXRvbXMuICovCisJaW50IGF0b21fY291bnQ7CisKKwkvKiBBIGNvdW50
ZXIgdXNlZCB0byBhc3NpZ24gYXRvbS0+YXRvbV9pZCB2YWx1ZXMuICovCisJX191MzIgaWRfY291
bnQ7CisKKwkvKiBhIG11dGV4IG9iamVjdCBmb3IgY29tbWl0IHNlcmlhbGl6YXRpb24gKi8KKwlz
dHJ1Y3QgbXV0ZXggY29tbWl0X211dGV4OworCisJLyogYSBsaXN0IG9mIGFsbCB0eG5tcmdzIHNl
cnZlZCBieSBwYXJ0aWN1bGFyIGRhZW1vbi4gKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIGxpbmthZ2U7
CisKKwkvKiBkZXNjcmlwdGlvbiBvZiBkYWVtb24gZm9yIHRoaXMgdHhubWdyICovCisJa3R4bm1n
cmRfY29udGV4dCAqZGFlbW9uOworCisJLyogcGFyYW1ldGVycy4gQWRqdXN0YWJsZSB0aHJvdWdo
IG1vdW50IG9wdGlvbnMuICovCisJdW5zaWduZWQgaW50IGF0b21fbWF4X3NpemU7CisJdW5zaWdu
ZWQgaW50IGF0b21fbWF4X2FnZTsKKwl1bnNpZ25lZCBpbnQgYXRvbV9taW5fc2l6ZTsKKwkvKiBt
YXggbnVtYmVyIG9mIGNvbmN1cnJlbnQgZmx1c2hlcnMgZm9yIG9uZSBhdG9tLCAwIC0gdW5saW1p
dGVkLiAgKi8KKwl1bnNpZ25lZCBpbnQgYXRvbV9tYXhfZmx1c2hlcnM7CisJc3RydWN0IGRlbnRy
eSAqZGVidWdmc19hdG9tX2NvdW50OworCXN0cnVjdCBkZW50cnkgKmRlYnVnZnNfaWRfY291bnQ7
Cit9OworCisvKiBGVU5DVElPTiBERUNMQVJBVElPTlMgKi8KKworLyogVGhlc2UgYXJlIHRoZSBl
eHRlcm5hbGx5ICh3aXRoaW4gUmVpc2VyNCkgdmlzaWJsZSB0cmFuc2FjdGlvbiBmdW5jdGlvbnMs
IHRoZXJlZm9yZSB0aGV5CisgICBhcmUgcHJlZml4ZWQgd2l0aCAidHhuXyIuICBGb3IgY29tbWVu
dHMsIHNlZSB0eG5tZ3IuYy4gKi8KKworZXh0ZXJuIGludCBpbml0X3R4bm1ncl9zdGF0aWModm9p
ZCk7CitleHRlcm4gdm9pZCBkb25lX3R4bm1ncl9zdGF0aWModm9pZCk7CisKK2V4dGVybiB2b2lk
IHJlaXNlcjRfaW5pdF90eG5tZ3IodHhuX21nciAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZG9u
ZV90eG5tZ3IodHhuX21nciAqKTsKKworZXh0ZXJuIGludCByZWlzZXI0X3R4bl9yZXNlcnZlKGlu
dCByZXNlcnZlZCk7CisKK2V4dGVybiB2b2lkIHJlaXNlcjRfdHhuX2JlZ2luKHJlaXNlcjRfY29u
dGV4dCAqIGNvbnRleHQpOworZXh0ZXJuIGludCByZWlzZXI0X3R4bl9lbmQocmVpc2VyNF9jb250
ZXh0ICogY29udGV4dCk7CisKK2V4dGVybiB2b2lkIHJlaXNlcjRfdHhuX3Jlc3RhcnQocmVpc2Vy
NF9jb250ZXh0ICogY29udGV4dCk7CitleHRlcm4gdm9pZCByZWlzZXI0X3R4bl9yZXN0YXJ0X2N1
cnJlbnQodm9pZCk7CisKK2V4dGVybiBpbnQgdHhubWdyX2ZvcmNlX2NvbW1pdF9hbGwoc3RydWN0
IHN1cGVyX2Jsb2NrICosIGludCk7CitleHRlcm4gaW50IGN1cnJlbnRfYXRvbV9zaG91bGRfY29t
bWl0KHZvaWQpOworCitleHRlcm4gam5vZGUgKmZpbmRfZmlyc3RfZGlydHlfam5vZGUodHhuX2F0
b20gKiwgaW50KTsKKworZXh0ZXJuIGludCBjb21taXRfc29tZV9hdG9tcyh0eG5fbWdyICopOwor
ZXh0ZXJuIGludCBmb3JjZV9jb21taXRfYXRvbSh0eG5faGFuZGxlICopOworZXh0ZXJuIGludCBm
bHVzaF9jdXJyZW50X2F0b20oaW50LCBsb25nLCBsb25nICosIHR4bl9hdG9tICoqLCBqbm9kZSAq
KTsKKworZXh0ZXJuIGludCBmbHVzaF9zb21lX2F0b20oam5vZGUgKiwgbG9uZyAqLCBjb25zdCBz
dHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKiwgaW50KTsKKworZXh0ZXJuIHZvaWQgcmVpc2VyNF9h
dG9tX3NldF9zdGFnZSh0eG5fYXRvbSAqIGF0b20sIHR4bl9zdGFnZSBzdGFnZSk7CisKK2V4dGVy
biBpbnQgc2FtZV9zbHVtX2NoZWNrKGpub2RlICogYmFzZSwgam5vZGUgKiBjaGVjaywgaW50IGFs
bG9jX2NoZWNrLAorCQkJICAgaW50IGFsbG9jX3ZhbHVlKTsKK2V4dGVybiB2b2lkIGF0b21fZGVj
X2FuZF91bmxvY2sodHhuX2F0b20gKiBhdG9tKTsKKworZXh0ZXJuIGludCByZWlzZXI0X3RyeV9j
YXB0dXJlKGpub2RlICogbm9kZSwgem5vZGVfbG9ja19tb2RlIG1vZGUsIHR4bl9jYXB0dXJlIGZs
YWdzKTsKK2V4dGVybiBpbnQgdHJ5X2NhcHR1cmVfcGFnZV90b19pbnZhbGlkYXRlKHN0cnVjdCBw
YWdlICpwZyk7CisKK2V4dGVybiB2b2lkIHJlaXNlcjRfdW5jYXB0dXJlX3BhZ2Uoc3RydWN0IHBh
Z2UgKnBnKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfdW5jYXB0dXJlX2Jsb2NrKGpub2RlICopOwor
ZXh0ZXJuIHZvaWQgcmVpc2VyNF91bmNhcHR1cmVfam5vZGUoam5vZGUgKik7CisKK2V4dGVybiBp
bnQgcmVpc2VyNF9jYXB0dXJlX2lub2RlKHN0cnVjdCBpbm9kZSAqKTsKK2V4dGVybiBpbnQgcmVp
c2VyNF91bmNhcHR1cmVfaW5vZGUoc3RydWN0IGlub2RlICopOworCitleHRlcm4gdHhuX2F0b20g
KmdldF9jdXJyZW50X2F0b21fbG9ja2VkX25vY2hlY2sodm9pZCk7CisKKyNpZiBSRUlTRVI0X0RF
QlVHCisKKy8qKgorICogYXRvbV9pc19wcm90ZWN0ZWQgLSBtYWtlIHN1cmUgdGhhdCBub2JvZHkg
YnV0IHVzIGNhbiBkbyBhbnl0aGluZyB3aXRoIGF0b20KKyAqIEBhdG9tOiBhdG9tIHRvIGJlIGNo
ZWNrZWQKKyAqCisgKiBUaGlzIGlzIHVzZWQgdG8gYXNzZXJ0IHRoYXQgYXRvbSBlaXRoZXIgZW50
ZXJlZCBjb21taXQgc3RhZ2VzIG9yIGlzIHNwaW4KKyAqIGxvY2tlZC4KKyAqLworc3RhdGljIGlu
bGluZSBpbnQgYXRvbV9pc19wcm90ZWN0ZWQodHhuX2F0b20gKmF0b20pCit7CisJaWYgKGF0b20t
PnN0YWdlID49IEFTVEFHRV9QUkVfQ09NTUlUKQorCQlyZXR1cm4gMTsKKwlhc3NlcnRfc3Bpbl9s
b2NrZWQoJihhdG9tLT5hbG9jaykpOworCXJldHVybiAxOworfQorCisjZW5kaWYKKworLyogR2V0
IHRoZSBjdXJyZW50IGF0b20gYW5kIHNwaW5sb2NrIGl0IGlmIGN1cnJlbnQgYXRvbSBwcmVzZW50
LiBNYXkgbm90IHJldHVybiBOVUxMICovCitzdGF0aWMgaW5saW5lIHR4bl9hdG9tICpnZXRfY3Vy
cmVudF9hdG9tX2xvY2tlZCh2b2lkKQoreworCXR4bl9hdG9tICphdG9tOworCisJYXRvbSA9IGdl
dF9jdXJyZW50X2F0b21fbG9ja2VkX25vY2hlY2soKTsKKwlhc3NlcnQoInphbS03NjEiLCBhdG9t
ICE9IE5VTEwpOworCisJcmV0dXJuIGF0b207Cit9CisKK2V4dGVybiB0eG5fYXRvbSAqam5vZGVf
Z2V0X2F0b20oam5vZGUgKik7CisKK2V4dGVybiB2b2lkIHJlaXNlcjRfYXRvbV93YWl0X2V2ZW50
KHR4bl9hdG9tICopOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9hdG9tX3NlbmRfZXZlbnQodHhuX2F0
b20gKik7CisKK2V4dGVybiB2b2lkIGluc2VydF9pbnRvX2F0b21fb3Zyd3JfbGlzdCh0eG5fYXRv
bSAqIGF0b20sIGpub2RlICogbm9kZSk7CitleHRlcm4gaW50IHJlaXNlcjRfY2FwdHVyZV9zdXBl
cl9ibG9jayhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMpOworaW50IGNhcHR1cmVfYnVsayhqbm9kZSAq
KiwgaW50IGNvdW50KTsKKworLyogU2VlIHRoZSBjb21tZW50IG9uIHRoZSBmdW5jdGlvbiBibG9j
a25yc2V0LmM6YmxvY2tucl9zZXRfYWRkIGZvciB0aGUKKyAgIGNhbGxpbmcgY29udmVudGlvbiBv
ZiB0aGVzZSB0aHJlZSByb3V0aW5lcy4gKi8KK2V4dGVybiBpbnQgYmxvY2tucl9zZXRfaW5pdF9z
dGF0aWModm9pZCk7CitleHRlcm4gdm9pZCBibG9ja25yX3NldF9kb25lX3N0YXRpYyh2b2lkKTsK
K2V4dGVybiB2b2lkIGJsb2NrbnJfc2V0X2luaXQoc3RydWN0IGxpc3RfaGVhZCAqIGJzZXQpOwor
ZXh0ZXJuIHZvaWQgYmxvY2tucl9zZXRfZGVzdHJveShzdHJ1Y3QgbGlzdF9oZWFkICogYnNldCk7
CitleHRlcm4gdm9pZCBibG9ja25yX3NldF9tZXJnZShzdHJ1Y3QgbGlzdF9oZWFkICogZnJvbSwg
c3RydWN0IGxpc3RfaGVhZCAqIGludG8pOworZXh0ZXJuIGludCBibG9ja25yX3NldF9hZGRfZXh0
ZW50KHR4bl9hdG9tICogYXRvbSwKKwkJCQkgIHN0cnVjdCBsaXN0X2hlYWQgKiBic2V0LAorCQkJ
CSAgYmxvY2tucl9zZXRfZW50cnkgKiogbmV3X2JzZXAsCisJCQkJICBjb25zdCByZWlzZXI0X2Js
b2NrX25yICogc3RhcnQsCisJCQkJICBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogbGVuKTsKK2V4
dGVybiBpbnQgYmxvY2tucl9zZXRfYWRkX3BhaXIodHhuX2F0b20gKiBhdG9tLCBzdHJ1Y3QgbGlz
dF9oZWFkICogYnNldCwKKwkJCQlibG9ja25yX3NldF9lbnRyeSAqKiBuZXdfYnNlcCwKKwkJCQlj
b25zdCByZWlzZXI0X2Jsb2NrX25yICogYSwKKwkJCQljb25zdCByZWlzZXI0X2Jsb2NrX25yICog
Yik7CisKK3R5cGVkZWYgaW50ICgqYmxvY2tucl9zZXRfYWN0b3JfZikgKHR4bl9hdG9tICosIGNv
bnN0IHJlaXNlcjRfYmxvY2tfbnIgKiwKKwkJCQkgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAq
LCB2b2lkICopOworCitleHRlcm4gaW50IGJsb2NrbnJfc2V0X2l0ZXJhdG9yKHR4bl9hdG9tICog
YXRvbSwgc3RydWN0IGxpc3RfaGVhZCAqIGJzZXQsCisJCQkJYmxvY2tucl9zZXRfYWN0b3JfZiBh
Y3Rvciwgdm9pZCAqZGF0YSwKKwkJCQlpbnQgZGVsZXRlKTsKKworLyogVGhpcyBpcyB0aGUgYmxv
Y2sgbGlzdCBpbnRlcmZhY2UgKHNlZSBibG9ja25ybGlzdC5jKSAqLworZXh0ZXJuIGludCBibG9j
a25yX2xpc3RfaW5pdF9zdGF0aWModm9pZCk7CitleHRlcm4gdm9pZCBibG9ja25yX2xpc3RfZG9u
ZV9zdGF0aWModm9pZCk7CitleHRlcm4gdm9pZCBibG9ja25yX2xpc3RfaW5pdChzdHJ1Y3QgbGlz
dF9oZWFkICpibGlzdCk7CitleHRlcm4gdm9pZCBibG9ja25yX2xpc3RfZGVzdHJveShzdHJ1Y3Qg
bGlzdF9oZWFkICpibGlzdCk7CitleHRlcm4gdm9pZCBibG9ja25yX2xpc3RfbWVyZ2Uoc3RydWN0
IGxpc3RfaGVhZCAqZnJvbSwgc3RydWN0IGxpc3RfaGVhZCAqdG8pOworZXh0ZXJuIHZvaWQgYmxv
Y2tucl9saXN0X3NvcnRfYW5kX2pvaW4oc3RydWN0IGxpc3RfaGVhZCAqYmxpc3QpOworLyoqCisg
KiBUaGUgQGF0b20gc2hvdWxkIGJlIGxvY2tlZC4KKyAqLworZXh0ZXJuIGludCBibG9ja25yX2xp
c3RfYWRkX2V4dGVudCh0eG5fYXRvbSAqYXRvbSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgc3RydWN0IGxpc3RfaGVhZCAqYmxpc3QsCisgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIGJsb2NrbnJfbGlzdF9lbnRyeSAqKm5ld19lbnRyeSwKKyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqc3RhcnQsCisg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIg
Kmxlbik7CitleHRlcm4gaW50IGJsb2NrbnJfbGlzdF9pdGVyYXRvcih0eG5fYXRvbSAqYXRvbSwK
KyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cnVjdCBsaXN0X2hlYWQgKmJsaXN0
LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tucl9zZXRfYWN0b3JfZiBh
Y3RvciwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZvaWQgKmRhdGEsCisgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgZGVsZXRlKTsKKworLyogVGhlc2UgYXJl
IHdyYXBwZXJzIGZvciBhY2Nlc3NpbmcgYW5kIG1vZGlmeWluZyBhdG9tJ3MgZGVsZXRlIGxpc3Rz
LAorICAgZGVwZW5kaW5nIG9uIHdoZXRoZXIgZGlzY2FyZCBpcyBlbmFibGVkIG9yIG5vdC4KKyAg
IElmIGl0IGlzIGVuYWJsZWQsIChsZXNzIG1lbW9yeSBlZmZpY2llbnQpIGJsb2NrbnJfbGlzdCBp
cyB1c2VkIGZvciBkZWxldGUKKyAgIGxpc3Qgc3RvcmFnZS4gT3RoZXJ3aXNlLCBibG9ja25yX3Nl
dCBpcyB1c2VkIGZvciB0aGlzIHB1cnBvc2UuICovCitleHRlcm4gdm9pZCBhdG9tX2RzZXRfaW5p
dCh0eG5fYXRvbSAqYXRvbSk7CitleHRlcm4gdm9pZCBhdG9tX2RzZXRfZGVzdHJveSh0eG5fYXRv
bSAqYXRvbSk7CitleHRlcm4gdm9pZCBhdG9tX2RzZXRfbWVyZ2UodHhuX2F0b20gKmZyb20sIHR4
bl9hdG9tICp0byk7CitleHRlcm4gaW50IGF0b21fZHNldF9kZWZlcnJlZF9hcHBseSh0eG5fYXRv
bSogYXRvbSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrbnJfc2V0
X2FjdG9yX2YgYWN0b3IsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2lk
ICpkYXRhLAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50IGRlbGV0ZSk7
CitleHRlcm4gaW50IGF0b21fZHNldF9kZWZlcnJlZF9hZGRfZXh0ZW50KHR4bl9hdG9tICphdG9t
LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2lkICoqbmV3X2Vu
dHJ5LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWlz
ZXI0X2Jsb2NrX25yICpzdGFydCwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqbGVuKTsKKworLyogZmx1c2ggY29kZSB0YWtl
cyBjYXJlIGFib3V0IGhvdyB0byBmdXNlIGZsdXNoIHF1ZXVlcyAqLworZXh0ZXJuIHZvaWQgZmx1
c2hfaW5pdF9hdG9tKHR4bl9hdG9tICogYXRvbSk7CitleHRlcm4gdm9pZCBmbHVzaF9mdXNlX3F1
ZXVlcyh0eG5fYXRvbSAqIGxhcmdlLCB0eG5fYXRvbSAqIHNtYWxsKTsKKworc3RhdGljIGlubGlu
ZSB2b2lkIHNwaW5fbG9ja19hdG9tKHR4bl9hdG9tICphdG9tKQoreworCS8qIGNoZWNrIHRoYXQg
c3BpbmxvY2tzIG9mIGxvd2VyIHByaW9yaXRpZXMgYXJlIG5vdCBoZWxkICovCisJYXNzZXJ0KCIi
LCAoTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX3R4bmgpICYmCisJCSAgICBMT0NLX0NOVF9OSUwo
c3Bpbl9sb2NrZWRfYXRvbSkgJiYKKwkJICAgIExPQ0tfQ05UX05JTChzcGluX2xvY2tlZF9qbm9k
ZSkgJiYKKwkJICAgIExPQ0tfQ05UX05JTChzcGluX2xvY2tlZF96bG9jaykgJiYKKwkJICAgIExP
Q0tfQ05UX05JTChyd19sb2NrZWRfZGspICYmCisJCSAgICBMT0NLX0NOVF9OSUwocndfbG9ja2Vk
X3RyZWUpKSk7CisKKwlzcGluX2xvY2soJihhdG9tLT5hbG9jaykpOworCisJTE9DS19DTlRfSU5D
KHNwaW5fbG9ja2VkX2F0b20pOworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tlZCk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgdm9pZCBzcGluX2xvY2tfYXRvbV9uZXN0ZWQodHhuX2F0b20gKmF0b20pCit7
CisJYXNzZXJ0KCIiLCAoTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX3R4bmgpICYmCisJCSAgICBM
T0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfam5vZGUpICYmCisJCSAgICBMT0NLX0NOVF9OSUwoc3Bp
bl9sb2NrZWRfemxvY2spICYmCisJCSAgICBMT0NLX0NOVF9OSUwocndfbG9ja2VkX2RrKSAmJgor
CQkgICAgTE9DS19DTlRfTklMKHJ3X2xvY2tlZF90cmVlKSkpOworCisJc3Bpbl9sb2NrX25lc3Rl
ZCgmKGF0b20tPmFsb2NrKSwgU0lOR0xFX0RFUFRIX05FU1RJTkcpOworCisJTE9DS19DTlRfSU5D
KHNwaW5fbG9ja2VkX2F0b20pOworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tlZCk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgaW50IHNwaW5fdHJ5bG9ja19hdG9tKHR4bl9hdG9tICphdG9tKQoreworCWlm
IChzcGluX3RyeWxvY2soJihhdG9tLT5hbG9jaykpKSB7CisJCUxPQ0tfQ05UX0lOQyhzcGluX2xv
Y2tlZF9hdG9tKTsKKwkJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKKwkJcmV0dXJuIDE7CisJ
fQorCXJldHVybiAwOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl91bmxvY2tfYXRvbSh0
eG5fYXRvbSAqYXRvbSkKK3sKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihhdG9tLT5hbG9jaykpOwor
CWFzc2VydCgibmlraXRhLTEzNzUiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWRfYXRvbSkpOwor
CWFzc2VydCgibmlraXRhLTEzNzYiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWQpKTsKKworCUxP
Q0tfQ05UX0RFQyhzcGluX2xvY2tlZF9hdG9tKTsKKwlMT0NLX0NOVF9ERUMoc3Bpbl9sb2NrZWQp
OworCisJc3Bpbl91bmxvY2soJihhdG9tLT5hbG9jaykpOworfQorCitzdGF0aWMgaW5saW5lIHZv
aWQgc3Bpbl9sb2NrX3R4bmgodHhuX2hhbmRsZSAqdHhuaCkKK3sKKwkvKiBjaGVjayB0aGF0IHNw
aW5sb2NrcyBvZiBsb3dlciBwcmlvcml0aWVzIGFyZSBub3QgaGVsZCAqLworCWFzc2VydCgiIiwg
KExPQ0tfQ05UX05JTChyd19sb2NrZWRfZGspICYmCisJCSAgICBMT0NLX0NOVF9OSUwoc3Bpbl9s
b2NrZWRfemxvY2spICYmCisJCSAgICBMT0NLX0NOVF9OSUwocndfbG9ja2VkX3RyZWUpKSk7CisK
KwlzcGluX2xvY2soJih0eG5oLT5obG9jaykpOworCisJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2Vk
X3R4bmgpOworCUxPQ0tfQ05UX0lOQyhzcGluX2xvY2tlZCk7Cit9CisKK3N0YXRpYyBpbmxpbmUg
aW50IHNwaW5fdHJ5bG9ja190eG5oKHR4bl9oYW5kbGUgKnR4bmgpCit7CisJaWYgKHNwaW5fdHJ5
bG9jaygmKHR4bmgtPmhsb2NrKSkpIHsKKwkJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkX3R4bmgp
OworCQlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWQpOworCQlyZXR1cm4gMTsKKwl9CisJcmV0dXJu
IDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzcGluX3VubG9ja190eG5oKHR4bl9oYW5kbGUg
KnR4bmgpCit7CisJYXNzZXJ0X3NwaW5fbG9ja2VkKCYodHhuaC0+aGxvY2spKTsKKwlhc3NlcnQo
Im5pa2l0YS0xMzc1IiwgTE9DS19DTlRfR1RaKHNwaW5fbG9ja2VkX3R4bmgpKTsKKwlhc3NlcnQo
Im5pa2l0YS0xMzc2IiwgTE9DS19DTlRfR1RaKHNwaW5fbG9ja2VkKSk7CisKKwlMT0NLX0NOVF9E
RUMoc3Bpbl9sb2NrZWRfdHhuaCk7CisJTE9DS19DTlRfREVDKHNwaW5fbG9ja2VkKTsKKworCXNw
aW5fdW5sb2NrKCYodHhuaC0+aGxvY2spKTsKK30KKworI2RlZmluZSBzcGluX29yZGVyaW5nX3By
ZWRfdHhubWdyKHRtZ3IpCQlcCisJKCBMT0NLX0NOVF9OSUwoc3Bpbl9sb2NrZWRfYXRvbSkgJiYJ
XAorCSAgTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX3R4bmgpICYmCVwKKwkgIExPQ0tfQ05UX05J
TChzcGluX2xvY2tlZF9qbm9kZSkgJiYJXAorCSAgTE9DS19DTlRfTklMKHJ3X2xvY2tlZF96bG9j
aykgJiYJXAorCSAgTE9DS19DTlRfTklMKHJ3X2xvY2tlZF9kaykgJiYJCVwKKwkgIExPQ0tfQ05U
X05JTChyd19sb2NrZWRfdHJlZSkgKQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl9sb2NrX3R4
bm1ncih0eG5fbWdyICptZ3IpCit7CisJLyogY2hlY2sgdGhhdCBzcGlubG9ja3Mgb2YgbG93ZXIg
cHJpb3JpdGllcyBhcmUgbm90IGhlbGQgKi8KKwlhc3NlcnQoIiIsIChMT0NLX0NOVF9OSUwoc3Bp
bl9sb2NrZWRfYXRvbSkgJiYKKwkJICAgIExPQ0tfQ05UX05JTChzcGluX2xvY2tlZF90eG5oKSAm
JgorCQkgICAgTE9DS19DTlRfTklMKHNwaW5fbG9ja2VkX2pub2RlKSAmJgorCQkgICAgTE9DS19D
TlRfTklMKHNwaW5fbG9ja2VkX3psb2NrKSAmJgorCQkgICAgTE9DS19DTlRfTklMKHJ3X2xvY2tl
ZF9kaykgJiYKKwkJICAgIExPQ0tfQ05UX05JTChyd19sb2NrZWRfdHJlZSkpKTsKKworCXNwaW5f
bG9jaygmKG1nci0+dG1ncl9sb2NrKSk7CisKKwlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWRfdHhu
bWdyKTsKKwlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWQpOworfQorCitzdGF0aWMgaW5saW5lIGlu
dCBzcGluX3RyeWxvY2tfdHhubWdyKHR4bl9tZ3IgKm1ncikKK3sKKwlpZiAoc3Bpbl90cnlsb2Nr
KCYobWdyLT50bWdyX2xvY2spKSkgeworCQlMT0NLX0NOVF9JTkMoc3Bpbl9sb2NrZWRfdHhubWdy
KTsKKwkJTE9DS19DTlRfSU5DKHNwaW5fbG9ja2VkKTsKKwkJcmV0dXJuIDE7CisJfQorCXJldHVy
biAwOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3Bpbl91bmxvY2tfdHhubWdyKHR4bl9tZ3Ig
Km1ncikKK3sKKwlhc3NlcnRfc3Bpbl9sb2NrZWQoJihtZ3ItPnRtZ3JfbG9jaykpOworCWFzc2Vy
dCgibmlraXRhLTEzNzUiLCBMT0NLX0NOVF9HVFooc3Bpbl9sb2NrZWRfdHhubWdyKSk7CisJYXNz
ZXJ0KCJuaWtpdGEtMTM3NiIsIExPQ0tfQ05UX0dUWihzcGluX2xvY2tlZCkpOworCisJTE9DS19D
TlRfREVDKHNwaW5fbG9ja2VkX3R4bm1ncik7CisJTE9DS19DTlRfREVDKHNwaW5fbG9ja2VkKTsK
KworCXNwaW5fdW5sb2NrKCYobWdyLT50bWdyX2xvY2spKTsKK30KKwordHlwZWRlZiBlbnVtIHsK
KwlGUV9JTl9VU0UgPSAweDEKK30gZmx1c2hfcXVldWVfc3RhdGVfdDsKKwordHlwZWRlZiBzdHJ1
Y3QgZmx1c2hfcXVldWUgZmx1c2hfcXVldWVfdDsKKworLyogVGhpcyBpcyBhbiBhY2N1bXVsYXRv
ciBmb3Igam5vZGVzIHByZXBhcmVkIGZvciB3cml0aW5nIHRvIGRpc2suIEEgZmx1c2ggcXVldWUK
KyAgIGlzIGZpbGxlZCBieSB0aGUgam5vZGVfZmx1c2goKSByb3V0aW5lLCBhbmQgd3JpdHRlbiB0
byBkaXNrIHVuZGVyIG1lbW9yeQorICAgcHJlc3N1cmUgb3IgYXQgYXRvbSBjb21taXQgdGltZS4g
Ki8KKy8qIExPQ0tJTkc6IGZxIHN0YXRlIGFuZCBmcS0+YXRvbSBhcmUgcHJvdGVjdGVkIGJ5IGd1
YXJkIHNwaW5sb2NrLCBmcS0+bnJfcXVldWVkCisgICBmaWVsZCBhbmQgZnEtPnByZXBwZWQgbGlz
dCBjYW4gYmUgbW9kaWZpZWQgaWYgYXRvbSBpcyBzcGluLWxvY2tlZCBhbmQgZnEKKyAgIG9iamVj
dCBpcyAiaW4tdXNlIiBzdGF0ZS4gIEZvciByZWFkLW9ubHkgdHJhdmVyc2FsIG9mIHRoZSBmcS0+
cHJlcHBlZCBsaXN0CisgICBhbmQgcmVhZGluZyBvZiB0aGUgZnEtPm5yX3F1ZXVlZCBmaWVsZCBp
dCBpcyBlbm91Z2ggdG8ga2VlcCBmcSAiaW4tdXNlIiBvcgorICAgb25seSBoYXZlIGF0b20gc3Bp
bi1sb2NrZWQuICovCitzdHJ1Y3QgZmx1c2hfcXVldWUgeworCS8qIGxpbmthZ2UgZWxlbWVudCBp
cyB0aGUgZmlyc3QgaW4gdGhpcyBzdHJ1Y3R1cmUgdG8gbWFrZSBkZWJ1Z2dpbmcKKwkgICBlYXNp
ZXIuICBTZWUgZmllbGQgaW4gYXRvbSBzdHJ1Y3QgZm9yIGRlc2NyaXB0aW9uIG9mIGxpc3QuICov
CisJc3RydWN0IGxpc3RfaGVhZCBhbGluazsKKwkvKiBBIHNwaW5sb2NrIHRvIHByb3RlY3QgY2hh
bmdlcyBvZiBmcSBzdGF0ZSBhbmQgZnEtPmF0b20gcG9pbnRlciAqLworCXNwaW5sb2NrX3QgZ3Vh
cmQ7CisJLyogZmx1c2hfcXVldWUgc3RhdGU6IFtpbl91c2UgfCByZWFkeV0gKi8KKwlmbHVzaF9x
dWV1ZV9zdGF0ZV90IHN0YXRlOworCS8qIEEgbGlzdCB3aGljaCBjb250YWlucyBxdWV1ZWQgbm9k
ZXMsIHF1ZXVlZCBub2RlcyBhcmUgcmVtb3ZlZCBmcm9tIGFueQorCSAqIGF0b20ncyBsaXN0IGFu
ZCBwdXQgb24gdGhpcyAtPnByZXBwZWQgb25lLiAqLworCXN0cnVjdCBsaXN0X2hlYWQgcHJlcHBl
ZDsKKwkvKiBudW1iZXIgb2Ygc3VibWl0dGVkIGkvbyByZXF1ZXN0cyAqLworCWF0b21pY190IG5y
X3N1Ym1pdHRlZDsKKwkvKiBudW1iZXIgb2YgaS9vIGVycm9ycyAqLworCWF0b21pY190IG5yX2Vy
cm9yczsKKwkvKiBBbiBhdG9tIHRoaXMgZmx1c2ggcXVldWUgaXMgYXR0YWNoZWQgdG8gKi8KKwl0
eG5fYXRvbSAqYXRvbTsKKwkvKiBBIHdhaXQgcXVldWUgaGVhZCB0byB3YWl0IG9uIGkvbyBjb21w
bGV0aW9uICovCisJd2FpdF9xdWV1ZV9oZWFkX3Qgd2FpdDsKKyNpZiBSRUlTRVI0X0RFQlVHCisJ
LyogQSB0aHJlYWQgd2hpY2ggdG9vayB0aGlzIGZxIGluIGV4Y2x1c2l2ZSB1c2UsIE5VTEwgaWYg
ZnEgaXMgZnJlZSwKKwkgKiB1c2VkIGZvciBkZWJ1Z2dpbmcuICovCisJc3RydWN0IHRhc2tfc3Ry
dWN0ICpvd25lcjsKKyNlbmRpZgorfTsKKworZXh0ZXJuIGludCByZWlzZXI0X2ZxX2J5X2F0b20o
dHhuX2F0b20gKiwgZmx1c2hfcXVldWVfdCAqKik7CitleHRlcm4gdm9pZCByZWlzZXI0X2ZxX3B1
dF9ub2xvY2soZmx1c2hfcXVldWVfdCAqKTsKK2V4dGVybiB2b2lkIHJlaXNlcjRfZnFfcHV0KGZs
dXNoX3F1ZXVlX3QgKik7CitleHRlcm4gdm9pZCByZWlzZXI0X2Z1c2VfZnEodHhuX2F0b20gKiB0
bywgdHhuX2F0b20gKiBmcm9tKTsKK2V4dGVybiB2b2lkIHF1ZXVlX2pub2RlKGZsdXNoX3F1ZXVl
X3QgKiwgam5vZGUgKik7CisKK2V4dGVybiBpbnQgcmVpc2VyNF93cml0ZV9mcShmbHVzaF9xdWV1
ZV90ICosIGxvbmcgKiwgaW50KTsKK2V4dGVybiBpbnQgY3VycmVudF9hdG9tX2ZpbmlzaF9hbGxf
ZnEodm9pZCk7CitleHRlcm4gdm9pZCBpbml0X2F0b21fZnFfcGFydHModHhuX2F0b20gKik7CisK
K2V4dGVybiByZWlzZXI0X2Jsb2NrX25yIHR4bm1ncl9jb3VudF9kZWxldGVkX2Jsb2Nrcyh2b2lk
KTsKKworZXh0ZXJuIHZvaWQgem5vZGVfbWFrZV9kaXJ0eSh6bm9kZSAqIG5vZGUpOworZXh0ZXJu
IHZvaWQgam5vZGVfbWFrZV9kaXJ0eV9sb2NrZWQoam5vZGUgKiBub2RlKTsKKworZXh0ZXJuIGlu
dCByZWlzZXI0X3N5bmNfYXRvbSh0eG5fYXRvbSAqIGF0b20pOworCisjaWYgUkVJU0VSNF9ERUJV
RworZXh0ZXJuIGludCBhdG9tX2ZxX3BhcnRzX2FyZV9jbGVhbih0eG5fYXRvbSAqKTsKKyNlbmRp
ZgorCitleHRlcm4gdm9pZCBhZGRfZnFfdG9fYmlvKGZsdXNoX3F1ZXVlX3QgKiwgc3RydWN0IGJp
byAqKTsKK2V4dGVybiBmbHVzaF9xdWV1ZV90ICpnZXRfZnFfZm9yX2N1cnJlbnRfYXRvbSh2b2lk
KTsKKwordm9pZCByZWlzZXI0X2ludmFsaWRhdGVfbGlzdChzdHJ1Y3QgbGlzdF9oZWFkICogaGVh
ZCk7CisKKyMgZW5kaWYJCQkJLyogX19SRUlTRVI0X1RYTk1HUl9IX18gKi8KKworLyogTWFrZSBM
aW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6
ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWIt
d2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvdHlwZV9zYWZlX2hhc2gu
aCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC90eXBlX3NhZmVfaGFzaC5oCi0tLSBsaW51eC01LjQu
MTcub3JpZy9mcy9yZWlzZXI0L3R5cGVfc2FmZV9oYXNoLmgJMTk3MC0wMS0wMSAwMTowMDowMC4w
MDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3R5cGVfc2FmZV9oYXNo
LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODcyMjI0NDIgKzAxMDAKQEAgLTAsMCArMSwzMjAgQEAK
Ky8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcg
Z292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIEEgaGFzaCB0YWJsZSBjbGFz
cyB0aGF0IHVzZXMgaGFzaCBjaGFpbnMgKHNpbmdseS1saW5rZWQpIGFuZCBpcworICAgcGFyYW1l
dHJpemVkIHRvIHByb3ZpZGUgdHlwZSBzYWZldHkuICAqLworCisjaWZuZGVmIF9fUkVJU0VSNF9U
WVBFX1NBRkVfSEFTSF9IX18KKyNkZWZpbmUgX19SRUlTRVI0X1RZUEVfU0FGRV9IQVNIX0hfXwor
CisjaW5jbHVkZSAiZGVidWcuaCIKKworI2luY2x1ZGUgPGFzbS9lcnJuby5oPgorLyogU3RlcCAx
OiBVc2UgVFlQRV9TQUZFX0hBU0hfREVDTEFSRSgpIHRvIGRlZmluZSB0aGUgVEFCTEUgYW5kIExJ
Tksgb2JqZWN0cworICAgYmFzZWQgb24gdGhlIG9iamVjdCB0eXBlLiAgWW91IG5lZWQgdG8gZGVj
bGFyZSB0aGUgaXRlbSB0eXBlIGJlZm9yZQorICAgdGhpcyBkZWZpbml0aW9uLCBkZWZpbmUgaXQg
YWZ0ZXIgdGhpcyBkZWZpbml0aW9uLiAqLworI2RlZmluZSBUWVBFX1NBRkVfSEFTSF9ERUNMQVJF
KFBSRUZJWCxJVEVNX1RZUEUpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBcCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAor
dHlwZWRlZiBzdHJ1Y3QgUFJFRklYIyNfaGFzaF90YWJsZV8gIFBSRUZJWCMjX2hhc2hfdGFibGU7
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKK3R5cGVkZWYgc3RydWN0IFBS
RUZJWCMjX2hhc2hfbGlua18gICBQUkVGSVgjI19oYXNoX2xpbms7ICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBcCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAorc3RydWN0IFBSRUZJWCMjX2hhc2hfdGFibGVfICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKK3sgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgIElURU1fVFlQRSAgKipfdGFibGU7ICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgXAorICBfX3UzMiAgICAgICAgX2J1Y2tldHM7ICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKK307ICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgXAorc3RydWN0IFBSRUZJWCMjX2hhc2hfbGlua18gICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwK
K3sgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgIElURU1fVFlQRSAqX25l
eHQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgXAorfQorCisvKiBTdGVwIDI6IERlZmluZSB0aGUgb2JqZWN0
IHR5cGUgb2YgdGhlIGhhc2g6IGdpdmUgaXQgZmllbGQgb2YgdHlwZQorICAgUFJFRklYX2hhc2hf
bGluay4gKi8KKworLyogU3RlcCAzOiBVc2UgVFlQRV9TQUZFX0hBU0hfREVGSU5FIHRvIGRlZmlu
ZSB0aGUgaGFzaCB0YWJsZSBpbnRlcmZhY2UgdXNpbmcKKyAgIHRoZSB0eXBlIGFuZCBmaWVsZCBu
YW1lIHVzZWQgaW4gc3RlcCAzLiAgVGhlIGFyZ3VtZW50cyBhcmU6CisKKyAgIElURU1fVFlQRSAg
ICBUaGUgaXRlbSB0eXBlIGJlaW5nIGhhc2hlZAorICAgS0VZX1RZUEUgICAgIFRoZSB0eXBlIG9m
IGtleSBiZWluZyBoYXNoZWQKKyAgIEtFWV9OQU1FICAgICBUaGUgbmFtZSBvZiB0aGUga2V5IGZp
ZWxkIHdpdGhpbiB0aGUgaXRlbQorICAgTElOS19OQU1FICAgIFRoZSBuYW1lIG9mIHRoZSBsaW5r
IGZpZWxkIHdpdGhpbiB0aGUgaXRlbSwgd2hpY2ggeW91IG11c3QgbWFrZSB0eXBlIFBSRUZJWF9o
YXNoX2xpbmspCisgICBIQVNIX0ZVTkMgICAgVGhlIG5hbWUgb2YgdGhlIGhhc2ggZnVuY3Rpb24g
KG9yIG1hY3JvLCB0YWtlcyBjb25zdCBwb2ludGVyIHRvIGtleSkKKyAgIEVRX0ZVTkMgICAgICBU
aGUgbmFtZSBvZiB0aGUgZXF1YWxpdHkgZnVuY3Rpb24gKG9yIG1hY3JvLCB0YWtlcyBjb25zdCBw
b2ludGVyIHRvIHR3byBrZXlzKQorCisgICBJdCBpbXBsZW1lbnRzIHRoZXNlIGZ1bmN0aW9uczoK
KworICAgcHJlZml4X2hhc2hfaW5pdCAgICAgICAgICAgSW5pdGlhbGl6ZSB0aGUgdGFibGUgZ2l2
ZW4gaXRzIHNpemUuCisgICBwcmVmaXhfaGFzaF9pbnNlcnQgICAgICAgICBJbnNlcnQgYW4gaXRl
bQorICAgcHJlZml4X2hhc2hfaW5zZXJ0X2luZGV4ICAgSW5zZXJ0IGFuIGl0ZW0gdy8gcHJlY29t
cHV0ZWQgaGFzaF9pbmRleAorICAgcHJlZml4X2hhc2hfZmluZCAgICAgICAgICAgRmluZCBhbiBp
dGVtIGJ5IGtleQorICAgcHJlZml4X2hhc2hfZmluZF9pbmRleCAgICAgRmluZCBhbiBpdGVtIHcv
IHByZWNvbXB1dGVkIGhhc2hfaW5kZXgKKyAgIHByZWZpeF9oYXNoX3JlbW92ZSAgICAgICAgIFJl
bW92ZSBhbiBpdGVtLCByZXR1cm5zIDEgaWYgZm91bmQsIDAgaWYgbm90IGZvdW5kCisgICBwcmVm
aXhfaGFzaF9yZW1vdmVfaW5kZXggICBSZW1vdmUgYW4gaXRlbSB3LyBwcmVjb21wdXRlZCBoYXNo
X2luZGV4CisKKyAgIElmIHlvdSdkIGxpa2Ugc29tZXRoaW5nIHRvIGJlIGRvbmUgZGlmZmVyZW50
bHksIGZlZWwgZnJlZSB0byBhc2sgbWUKKyAgIGZvciBtb2RpZmljYXRpb25zLiAgQWRkaXRpb25h
bCBmZWF0dXJlcyB0aGF0IGNvdWxkIGJlIGFkZGVkIGJ1dAorICAgaGF2ZSBub3QgYmVlbjoKKwor
ICAgcHJlZml4X2hhc2hfcmVtb3ZlX2tleSAgICAgICAgICAgRmluZCBhbmQgcmVtb3ZlIGFuIGl0
ZW0gYnkga2V5CisgICBwcmVmaXhfaGFzaF9yZW1vdmVfa2V5X2luZGV4ICAgICBGaW5kIGFuZCBy
ZW1vdmUgYW4gaXRlbSBieSBrZXkgdy8gcHJlY29tcHV0ZWQgaGFzaF9pbmRleAorCisgICBUaGUg
aGFzaF9mdW5jdGlvbiBjdXJyZW50bHkgcmVjZWl2ZXMgb25seSB0aGUga2V5IGFzIGFuIGFyZ3Vt
ZW50LAorICAgbWVhbmluZyBpdCBtdXN0IHNvbWVob3cga25vdyB0aGUgbnVtYmVyIG9mIGJ1Y2tl
dHMuICBJZiB0aGlzIGlzIGEKKyAgIHByb2JsZW0gbGV0IG1lIGtub3cuCisKKyAgIFRoaXMgaGFz
aCB0YWJsZSB1c2VzIGEgc2luZ2xlLWxpbmtlZCBoYXNoIGNoYWluLiAgVGhpcyBtZWFucworICAg
aW5zZXJ0aW9uIGlzIGZhc3QgYnV0IGRlbGV0aW9uIHJlcXVpcmVzIHNlYXJjaGluZyB0aGUgY2hh
aW4uCisKKyAgIFRoZXJlIGlzIGFsc28gdGhlIGRvdWJseS1saW5rZWQgaGFzaCBjaGFpbiBhcHBy
b2FjaCwgdW5kZXIgd2hpY2gKKyAgIGRlbGV0aW9uIHJlcXVpcmVzIG5vIHNlYXJjaCBidXQgdGhl
IGNvZGUgaXMgbG9uZ2VyIGFuZCBpdCB0YWtlcyB0d28KKyAgIHBvaW50ZXJzIHBlciBpdGVtLgor
CisgICBUaGUgY2lyY3VsYXJseS1saW5rZWQgYXBwcm9hY2ggaGFzIHRoZSBzaG9ydGVzdCBjb2Rl
IGJ1dCByZXF1aXJlcworICAgdHdvIHBvaW50ZXJzIHBlciBidWNrZXQsIGRvdWJsaW5nIHRoZSBz
aXplIG9mIHRoZSBidWNrZXQgYXJyYXkgKGluCisgICBhZGRpdGlvbiB0byB0d28gcG9pbnRlcnMg
cGVyIGl0ZW0pLgorKi8KKyNkZWZpbmUgVFlQRV9TQUZFX0hBU0hfREVGSU5FKFBSRUZJWCxJVEVN
X1RZUEUsS0VZX1RZUEUsS0VZX05BTUUsTElOS19OQU1FLEhBU0hfRlVOQyxFUV9GVU5DKQlcCisJ
CQkJCQkJCQkJCVwKK3N0YXRpYyBfX2lubGluZV9fIHZvaWQJCQkJCQkJCQlcCitQUkVGSVgjI19j
aGVja19oYXNoIChQUkVGSVgjI19oYXNoX3RhYmxlICp0YWJsZSBVTlVTRURfQVJHLAkJCQlcCisJ
CSAgICAgX191MzIgICAgICAgICAgICAgICAgaGFzaCBVTlVTRURfQVJHKQkJCQlcCit7CQkJCQkJ
CQkJCQlcCisJYXNzZXJ0KCJuaWtpdGEtMjc4MCIsIGhhc2ggPCB0YWJsZS0+X2J1Y2tldHMpOwkJ
CQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0aWMgX19pbmxpbmVfXyBpbnQJ
CQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX2luaXQgKFBSRUZJWCMjX2hhc2hfdGFibGUgKmhhc2gs
CQkJCQkJXAorCQkgICAgX191MzIgICAgICAgICAgICAgICAgYnVja2V0cykJCQkJCVwKK3sJCQkJ
CQkJCQkJCVwKKyAgaGFzaC0+X3RhYmxlICAgPSAoSVRFTV9UWVBFKiopIEtNQUxMT0MgKHNpemVv
ZiAoSVRFTV9UWVBFKikgKiBidWNrZXRzKTsJCVwKKyAgaGFzaC0+X2J1Y2tldHMgPSBidWNrZXRz
OwkJCQkJCQkJXAorICBpZiAoaGFzaC0+X3RhYmxlID09IE5VTEwpCQkJCQkJCQlcCisgICAgewkJ
CQkJCQkJCQkJXAorICAgICAgcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsJCQkJCQkJCVwKKyAgICB9
CQkJCQkJCQkJCQlcCisgIG1lbXNldCAoaGFzaC0+X3RhYmxlLCAwLCBzaXplb2YgKElURU1fVFlQ
RSopICogYnVja2V0cyk7CQkJCVwKKyAgT05fREVCVUcocHJpbnRrKCNQUkVGSVggIl9oYXNoX3Rh
YmxlOiAlaSBidWNrZXRzXG4iLCBidWNrZXRzKSk7CQkJXAorICByZXR1cm4gMDsJCQkJCQkJCQkJ
XAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0aWMgX19pbmxpbmVfXyB2b2lkCQkJ
CQkJCQkJXAorUFJFRklYIyNfaGFzaF9kb25lIChQUkVGSVgjI19oYXNoX3RhYmxlICpoYXNoKQkJ
CQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAgaWYgKFJFSVNFUjRfREVCVUcgJiYgaGFzaC0+X3RhYmxl
ICE9IE5VTEwpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisJ
ICAgIF9fdTMyIGk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBcCisJICAgIGZvciAoaSA9IDAgOyBpIDwgaGFzaC0+X2J1
Y2tldHMgOyArKyBpKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisJCSAg
ICBhc3NlcnQoIm5pa2l0YS0yOTA1IiwgaGFzaC0+X3RhYmxlW2ldID09IE5VTEwpOyAgICAgICAg
ICAgICAgICAgICAgIFwKKyAgfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgIGlmICho
YXNoLT5fdGFibGUgIT0gTlVMTCkJCQkJCQkJCVwKKyAgICBLRlJFRSAoaGFzaC0+X3RhYmxlLCBz
aXplb2YgKElURU1fVFlQRSopICogaGFzaC0+X2J1Y2tldHMpOwkJCQlcCisgIGhhc2gtPl90YWJs
ZSA9IE5VTEw7CQkJCQkJCQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0aWMg
X19pbmxpbmVfXyB2b2lkCQkJCQkJCQkJXAorUFJFRklYIyNfaGFzaF9wcmVmZXRjaF9uZXh0IChJ
VEVNX1RZUEUgKml0ZW0pCQkJCQkJXAorewkJCQkJCQkJCQkJXAorCXByZWZldGNoKGl0ZW0tPkxJ
TktfTkFNRS5fbmV4dCk7CQkJCQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0
aWMgX19pbmxpbmVfXyB2b2lkCQkJCQkJCQkJXAorUFJFRklYIyNfaGFzaF9wcmVmZXRjaF9idWNr
ZXQgKFBSRUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsCQkJCVwKKwkJCSAgICAgICBfX3UzMiAgICAg
ICAgICAgICAgICBpbmRleCkJCQkJXAorewkJCQkJCQkJCQkJXAorCXByZWZldGNoKGhhc2gtPl90
YWJsZVtpbmRleF0pOyAgCQkJCQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0
aWMgX19pbmxpbmVfXyBJVEVNX1RZUEUqCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX2ZpbmRfaW5k
ZXggKFBSRUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsCQkJCQlcCisJCQkgIF9fdTMyICAgICAgICAg
ICAgICAgIGhhc2hfaW5kZXgsCQkJCVwKKwkJCSAgS0VZX1RZUEUgY29uc3QgICAgICAqZmluZF9r
ZXkpCQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAgSVRFTV9UWVBFICppdGVtOwkJCQkJCQkJCVwKKwkJ
CQkJCQkJCQkJXAorICBQUkVGSVgjI19jaGVja19oYXNoKGhhc2gsIGhhc2hfaW5kZXgpOwkJCQkJ
CVwKKwkJCQkJCQkJCQkJXAorICBmb3IgKGl0ZW0gID0gaGFzaC0+X3RhYmxlW2hhc2hfaW5kZXhd
OwkJCQkJCVwKKyAgICAgICBpdGVtICE9IE5VTEw7CQkJCQkJCQkJXAorICAgICAgIGl0ZW0gID0g
aXRlbS0+TElOS19OQU1FLl9uZXh0KQkJCQkJCQlcCisgICAgewkJCQkJCQkJCQkJXAorICAgICAg
cHJlZmV0Y2goaXRlbS0+TElOS19OQU1FLl9uZXh0KTsJCQkJCQkJXAorICAgICAgcHJlZmV0Y2go
aXRlbS0+TElOS19OQU1FLl9uZXh0ICsgb2Zmc2V0b2YoSVRFTV9UWVBFLCBLRVlfTkFNRSkpOwkJ
CVwKKyAgICAgIGlmIChFUV9GVU5DICgmIGl0ZW0tPktFWV9OQU1FLCBmaW5kX2tleSkpCQkJCQkJ
XAorICAgICAgICB7CQkJCQkJCQkJCVwKKyAgICAgICAgICByZXR1cm4gaXRlbTsJCQkJCQkJCQlc
CisgICAgICAgIH0JCQkJCQkJCQkJXAorICAgIH0JCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAor
ICByZXR1cm4gTlVMTDsJCQkJCQkJCQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitz
dGF0aWMgX19pbmxpbmVfXyBJVEVNX1RZUEUqCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX2ZpbmRf
aW5kZXhfbHJ1IChQUkVGSVgjI19oYXNoX3RhYmxlICpoYXNoLAkJCQlcCisJCQkgICAgICBfX3Uz
MiAgICAgICAgICAgICAgICBoYXNoX2luZGV4LAkJCQlcCisJCQkgICAgICBLRVlfVFlQRSBjb25z
dCAgICAgICpmaW5kX2tleSkJCQkJXAorewkJCQkJCQkJCQkJXAorICBJVEVNX1RZUEUgKiogaXRl
bSA9ICZoYXNoLT5fdGFibGVbaGFzaF9pbmRleF07ICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIFwKKwkJCQkJCQkJCQkJXAorICBQUkVGSVgjI19jaGVja19oYXNoKGhhc2gs
IGhhc2hfaW5kZXgpOwkJCQkJCVwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisg
IHdoaWxlICgqaXRlbSAhPSBOVUxMKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAorICAgIHByZWZldGNoKCYoKml0ZW0pLT5M
SU5LX05BTUUuX25leHQpOwkJCQkJCVwKKyAgICBpZiAoRVFfRlVOQyAoJigqaXRlbSktPktFWV9O
QU1FLCBmaW5kX2tleSkpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBc
CisgICAgICBJVEVNX1RZUEUgKmZvdW5kOyAJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAorICAgICAg
Zm91bmQgPSAqaXRlbTsgICAgCQkJCQkJCQlcCisgICAgICAqaXRlbSA9IGZvdW5kLT5MSU5LX05B
TUUuX25leHQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAorICAgICAgZm91bmQtPkxJTktfTkFNRS5fbmV4dCA9IGhhc2gtPl90YWJsZVtoYXNoX2lu
ZGV4XTsJCQkJXAorICAgICAgaGFzaC0+X3RhYmxlW2hhc2hfaW5kZXhdID0gZm91bmQ7CQkJCQkJ
CVwKKyAgICAgIHJldHVybiBmb3VuZDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAgfSAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgXAorICAgIGl0ZW0gPSAmKCppdGVtKS0+TElOS19OQU1FLl9uZXh0OyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKKyAgfQkJCQkJ
CQkJCQkJXAorICByZXR1cm4gTlVMTDsJCQkJCQkJCQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJ
CQkJCQlcCitzdGF0aWMgX19pbmxpbmVfXyBpbnQJCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX3Jl
bW92ZV9pbmRleCAoUFJFRklYIyNfaGFzaF90YWJsZSAqaGFzaCwJCQkJCVwKKwkJCSAgICBfX3Uz
MiAgICAgICAgICAgICAgICBoYXNoX2luZGV4LAkJCQlcCisJCQkgICAgSVRFTV9UWVBFICAgICAg
ICAgICAqZGVsX2l0ZW0pCQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAgSVRFTV9UWVBFICoqIGhhc2hf
aXRlbV9wID0gJmhhc2gtPl90YWJsZVtoYXNoX2luZGV4XTsgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBcCisJCQkJCQkJCQkJCVwKKyAgUFJFRklYIyNfY2hlY2tfaGFzaChoYXNoLCBo
YXNoX2luZGV4KTsJCQkJCQlcCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAorICB3
aGlsZSAoKmhhc2hfaXRlbV9wICE9IE5VTEwpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKKyAgICBwcmVmZXRjaCgmKCpoYXNoX2l0ZW1f
cCktPkxJTktfTkFNRS5fbmV4dCk7CQkJCQkJXAorICAgIGlmICgqaGFzaF9pdGVtX3AgPT0gZGVs
X2l0ZW0pIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIFwKKyAgICAgICpoYXNoX2l0ZW1fcCA9ICgqaGFzaF9pdGVtX3ApLT5MSU5LX05BTUUuX25l
eHQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgICAgICByZXR1cm4gMTsg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgXAorICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKKyAgICBo
YXNoX2l0ZW1fcCA9ICYoKmhhc2hfaXRlbV9wKS0+TElOS19OQU1FLl9uZXh0OyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBcCisgIH0JCQkJCQkJCQkJCVwKKyAgcmV0dXJuIDA7
CQkJCQkJCQkJCVwKK30JCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAorc3RhdGljIF9faW5saW5l
X18gdm9pZAkJCQkJCQkJCVwKK1BSRUZJWCMjX2hhc2hfaW5zZXJ0X2luZGV4IChQUkVGSVgjI19o
YXNoX3RhYmxlICpoYXNoLAkJCQkJXAorCQkJICAgIF9fdTMyICAgICAgICAgICAgICAgIGhhc2hf
aW5kZXgsCQkJCVwKKwkJCSAgICBJVEVNX1RZUEUgICAgICAgICAgICppbnNfaXRlbSkJCQkJXAor
ewkJCQkJCQkJCQkJXAorICBQUkVGSVgjI19jaGVja19oYXNoKGhhc2gsIGhhc2hfaW5kZXgpOwkJ
CQkJCVwKKwkJCQkJCQkJCQkJXAorICBpbnNfaXRlbS0+TElOS19OQU1FLl9uZXh0ID0gaGFzaC0+
X3RhYmxlW2hhc2hfaW5kZXhdOwkJCQkJXAorICBoYXNoLT5fdGFibGVbaGFzaF9pbmRleF0gID0g
aW5zX2l0ZW07CQkJCQkJCVwKK30JCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAorc3RhdGljIF9f
aW5saW5lX18gdm9pZAkJCQkJCQkJCVwKK1BSRUZJWCMjX2hhc2hfaW5zZXJ0X2luZGV4X3JjdSAo
UFJFRklYIyNfaGFzaF90YWJsZSAqaGFzaCwJCQkJXAorCQkJICAgICAgICBfX3UzMiAgICAgICAg
ICAgICAgICBoYXNoX2luZGV4LAkJCVwKKwkJCSAgICAgICAgSVRFTV9UWVBFICAgICAgICAgICAq
aW5zX2l0ZW0pCQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAgUFJFRklYIyNfY2hlY2tfaGFzaChoYXNo
LCBoYXNoX2luZGV4KTsJCQkJCQlcCisJCQkJCQkJCQkJCVwKKyAgaW5zX2l0ZW0tPkxJTktfTkFN
RS5fbmV4dCA9IGhhc2gtPl90YWJsZVtoYXNoX2luZGV4XTsJCQkJCVwKKyAgc21wX3dtYigpOyAg
ICAJCQkJCQkJCQlcCisgIGhhc2gtPl90YWJsZVtoYXNoX2luZGV4XSAgPSBpbnNfaXRlbTsJCQkJ
CQkJXAorfQkJCQkJCQkJCQkJXAorCQkJCQkJCQkJCQlcCitzdGF0aWMgX19pbmxpbmVfXyBJVEVN
X1RZUEUqCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX2ZpbmQgKFBSRUZJWCMjX2hhc2hfdGFibGUg
Kmhhc2gsCQkJCQkJXAorCSAgICAgICAgICAgIEtFWV9UWVBFIGNvbnN0ICAgICAgKmZpbmRfa2V5
KQkJCQkJXAorewkJCQkJCQkJCQkJXAorICByZXR1cm4gUFJFRklYIyNfaGFzaF9maW5kX2luZGV4
IChoYXNoLCBIQVNIX0ZVTkMoaGFzaCwgZmluZF9rZXkpLCBmaW5kX2tleSk7CQlcCit9CQkJCQkJ
CQkJCQlcCisJCQkJCQkJCQkJCVwKK3N0YXRpYyBfX2lubGluZV9fIElURU1fVFlQRSoJCQkJCQkJ
CVwKK1BSRUZJWCMjX2hhc2hfZmluZF9scnUgKFBSRUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsCQkJ
CQlcCisJICAgICAgICAgICAgICAgIEtFWV9UWVBFIGNvbnN0ICAgICAgKmZpbmRfa2V5KQkJCQkJ
XAorewkJCQkJCQkJCQkJXAorICByZXR1cm4gUFJFRklYIyNfaGFzaF9maW5kX2luZGV4X2xydSAo
aGFzaCwgSEFTSF9GVU5DKGhhc2gsIGZpbmRfa2V5KSwgZmluZF9rZXkpOwlcCit9CQkJCQkJCQkJ
CQlcCisJCQkJCQkJCQkJCVwKK3N0YXRpYyBfX2lubGluZV9fIGludAkJCQkJCQkJCVwKK1BSRUZJ
WCMjX2hhc2hfcmVtb3ZlIChQUkVGSVgjI19oYXNoX3RhYmxlICpoYXNoLAkJCQkJXAorCQkgICAg
ICBJVEVNX1RZUEUgICAgICAgICAgICpkZWxfaXRlbSkJCQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAg
cmV0dXJuIFBSRUZJWCMjX2hhc2hfcmVtb3ZlX2luZGV4IChoYXNoLCAgICAgIAkJCQkJXAorICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhBU0hfRlVOQyhoYXNoLCAmZGVsX2l0
ZW0tPktFWV9OQU1FKSwgZGVsX2l0ZW0pOwlcCit9CQkJCQkJCQkJCQlcCisJCQkJCQkJCQkJCVwK
K3N0YXRpYyBfX2lubGluZV9fIGludAkJCQkJCQkJCVwKK1BSRUZJWCMjX2hhc2hfcmVtb3ZlX3Jj
dSAoUFJFRklYIyNfaGFzaF90YWJsZSAqaGFzaCwJCQkJCVwKKwkJICAgICAgSVRFTV9UWVBFICAg
ICAgICAgICAqZGVsX2l0ZW0pCQkJCQlcCit7CQkJCQkJCQkJCQlcCisgIHJldHVybiBQUkVGSVgj
I19oYXNoX3JlbW92ZSAoaGFzaCwgZGVsX2l0ZW0pOwkJCQkJCVwKK30JCQkJCQkJCQkJCVwKKwkJ
CQkJCQkJCQkJXAorc3RhdGljIF9faW5saW5lX18gdm9pZAkJCQkJCQkJCVwKK1BSRUZJWCMjX2hh
c2hfaW5zZXJ0IChQUkVGSVgjI19oYXNoX3RhYmxlICpoYXNoLAkJCQkJXAorCQkgICAgICBJVEVN
X1RZUEUgICAgICAgICAgICppbnNfaXRlbSkJCQkJCVwKK3sJCQkJCQkJCQkJCVwKKyAgcmV0dXJu
IFBSRUZJWCMjX2hhc2hfaW5zZXJ0X2luZGV4IChoYXNoLCAgICAgIAkJCQkJXAorICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhBU0hfRlVOQyhoYXNoLCAmaW5zX2l0ZW0tPktF
WV9OQU1FKSwgaW5zX2l0ZW0pOwlcCit9CQkJCQkJCQkJCQlcCisJCQkJCQkJCQkJCVwKK3N0YXRp
YyBfX2lubGluZV9fIHZvaWQJCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX2luc2VydF9yY3UgKFBS
RUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsCQkJCQlcCisJCSAgICAgICAgICBJVEVNX1RZUEUgICAg
ICAgICAgICppbnNfaXRlbSkJCQkJXAorewkJCQkJCQkJCQkJXAorICByZXR1cm4gUFJFRklYIyNf
aGFzaF9pbnNlcnRfaW5kZXhfcmN1IChoYXNoLCBIQVNIX0ZVTkMoaGFzaCwgJmluc19pdGVtLT5L
RVlfTkFNRSksICAgCVwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
aW5zX2l0ZW0pOyAgICAgCQkJCVwKK30JCQkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAorc3RhdGlj
IF9faW5saW5lX18gSVRFTV9UWVBFICoJCQkJCQkJCVwKK1BSRUZJWCMjX2hhc2hfZmlyc3QgKFBS
RUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsIF9fdTMyIGluZCkJCQkJXAorewkJCQkJCQkJCQkJXAor
ICBJVEVNX1RZUEUgKmZpcnN0OwkJCQkJCQkJCVwKKwkJCQkJCQkJCQkJXAorICBmb3IgKGZpcnN0
ID0gTlVMTDsgaW5kIDwgaGFzaC0+X2J1Y2tldHM7ICsrIGluZCkgewkJCQkJXAorICAgIGZpcnN0
ID0gaGFzaC0+X3RhYmxlW2luZF07ICAJCQkJCQkJXAorICAgIGlmIChmaXJzdCAhPSBOVUxMKQkJ
CQkJCQkJCVwKKyAgICAgIGJyZWFrOwkJCQkJCQkJCQlcCisgIH0JCQkJCQkJCQkJCVwKKyAgcmV0
dXJuIGZpcnN0OwkJCQkJCQkJCQlcCit9CQkJCQkJCQkJCQlcCisJCQkJCQkJCQkJCVwKK3N0YXRp
YyBfX2lubGluZV9fIElURU1fVFlQRSAqCQkJCQkJCQlcCitQUkVGSVgjI19oYXNoX25leHQgKFBS
RUZJWCMjX2hhc2hfdGFibGUgKmhhc2gsCQkJCQkJXAorCQkgICAgSVRFTV9UWVBFICAgICAgICAg
ICAqaXRlbSkJCQkJCQlcCit7CQkJCQkJCQkJCQlcCisgIElURU1fVFlQRSAgKm5leHQ7CQkJCQkJ
CQkJXAorCQkJCQkJCQkJCQlcCisgIGlmIChpdGVtID09IE5VTEwpCQkJCQkJCQkJXAorICAgIHJl
dHVybiBOVUxMOwkJCQkJCQkJCVwKKyAgbmV4dCA9IGl0ZW0tPkxJTktfTkFNRS5fbmV4dDsJCQkJ
CQkJCVwKKyAgaWYgKG5leHQgPT0gTlVMTCkJCQkJCQkJCQlcCisgICAgbmV4dCA9IFBSRUZJWCMj
X2hhc2hfZmlyc3QgKGhhc2gsIEhBU0hfRlVOQyhoYXNoLCAmaXRlbS0+S0VZX05BTUUpICsgMSk7
CQlcCisgIHJldHVybiBuZXh0OwkJCQkJCQkJCQlcCit9CQkJCQkJCQkJCQlcCisJCQkJCQkJCQkJ
CVwKK3R5cGVkZWYgc3RydWN0IHt9IFBSRUZJWCMjX2hhc2hfZHVtbXkKKworI2RlZmluZSBmb3Jf
YWxsX2h0X2J1Y2tldHModGFibGUsIGhlYWQpCQkJCQlcCitmb3IgKChoZWFkKSA9ICYodGFibGUp
IC0+IF90YWJsZVsgMCBdIDsJCQkJCVwKKyAgICAgKGhlYWQpICE9ICYodGFibGUpIC0+IF90YWJs
ZVsgKHRhYmxlKSAtPiBfYnVja2V0cyBdIDsgKysgKGhlYWQpKQorCisjZGVmaW5lIGZvcl9hbGxf
aW5fYnVja2V0KGJ1Y2tldCwgaXRlbSwgbmV4dCwgZmllbGQpCQkJCVwKK2ZvciAoKGl0ZW0pID0g
KihidWNrZXQpLCAobmV4dCkgPSAoaXRlbSkgPyAoaXRlbSkgLT4gZmllbGQuX25leHQgOiBOVUxM
IDsJXAorICAgICAoaXRlbSkgIT0gTlVMTCA7CQkJCQkJCQlcCisgICAgIChpdGVtKSA9IChuZXh0
KSwgKG5leHQpID0gKGl0ZW0pID8gKGl0ZW0pIC0+IGZpZWxkLl9uZXh0IDogTlVMTCApCisKKyNk
ZWZpbmUgZm9yX2FsbF9pbl9odGFibGUodGFibGUsIHByZWZpeCwgaXRlbSwgbmV4dCkJXAorZm9y
ICgoaXRlbSkgPSBwcmVmaXggIyMgX2hhc2hfZmlyc3QgKCh0YWJsZSksIDApLCAJXAorICAgICAo
bmV4dCkgPSBwcmVmaXggIyMgX2hhc2hfbmV4dCAoKHRhYmxlKSwgKGl0ZW0pKSA7CVwKKyAgICAg
KGl0ZW0pICE9IE5VTEwgOwkJCQkJXAorICAgICAoaXRlbSkgPSAobmV4dCksIAkJCQkJXAorICAg
ICAobmV4dCkgPSBwcmVmaXggIyMgX2hhc2hfbmV4dCAoKHRhYmxlKSwgKGl0ZW0pKSkKKworLyog
X19SRUlTRVI0X1RZUEVfU0FGRV9IQVNIX0hfXyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMg
aGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZS
IgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRo
OiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisgICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJl
ZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3Zmc19vcHMuYyBsaW51eC01LjQu
MTcvZnMvcmVpc2VyNC92ZnNfb3BzLmMKLS0tIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQv
dmZzX29wcy5jCTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01
LjQuMTcvZnMvcmVpc2VyNC92ZnNfb3BzLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODcyMjI0NDIg
KzAxMDAKQEAgLTAsMCArMSwyNjAgQEAKKy8qIENvcHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5
IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJuZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICov
CisKKy8qIEludGVyZmFjZSB0byBWRlMuIFJlaXNlcjQge3N1cGVyfGV4cG9ydHxkZW50cnl9X29w
ZXJhdGlvbnMgYXJlIGRlZmluZWQKKyAgIGhlcmUuICovCisKKyNpbmNsdWRlICJmb3J3YXJkLmgi
CisjaW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAiY29v
cmQuaCIKKyNpbmNsdWRlICJwbHVnaW4vaXRlbS9pdGVtLmgiCisjaW5jbHVkZSAicGx1Z2luL2Zp
bGUvZmlsZS5oIgorI2luY2x1ZGUgInBsdWdpbi9zZWN1cml0eS9wZXJtLmgiCisjaW5jbHVkZSAi
cGx1Z2luL2Rpc2tfZm9ybWF0L2Rpc2tfZm9ybWF0LmgiCisjaW5jbHVkZSAicGx1Z2luL3BsdWdp
bi5oIgorI2luY2x1ZGUgInBsdWdpbi9wbHVnaW5fc2V0LmgiCisjaW5jbHVkZSAicGx1Z2luL29i
amVjdC5oIgorI2luY2x1ZGUgInR4bm1nci5oIgorI2luY2x1ZGUgImpub2RlLmgiCisjaW5jbHVk
ZSAiem5vZGUuaCIKKyNpbmNsdWRlICJibG9ja19hbGxvYy5oIgorI2luY2x1ZGUgInRyZWUuaCIK
KyNpbmNsdWRlICJ2ZnNfb3BzLmgiCisjaW5jbHVkZSAiaW5vZGUuaCIKKyNpbmNsdWRlICJwYWdl
X2NhY2hlLmgiCisjaW5jbHVkZSAia3R4bm1ncmQuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2lu
Y2x1ZGUgInJlaXNlcjQuaCIKKyNpbmNsdWRlICJlbnRkLmgiCisjaW5jbHVkZSAic3RhdHVzX2Zs
YWdzLmgiCisjaW5jbHVkZSAiZmx1c2guaCIKKyNpbmNsdWRlICJkc2NhbGUuaCIKKworI2luY2x1
ZGUgPGxpbnV4L3Byb2ZpbGUuaD4KKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUg
PGxpbnV4L21vdW50Lmg+CisjaW5jbHVkZSA8bGludXgvdmZzLmg+CisjaW5jbHVkZSA8bGludXgv
bW0uaD4KKyNpbmNsdWRlIDxsaW51eC9idWZmZXJfaGVhZC5oPgorI2luY2x1ZGUgPGxpbnV4L2Rj
YWNoZS5oPgorI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KKyNpbmNsdWRlIDxsaW51eC9wYWdlbWFw
Lmg+CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L3NlcV9maWxlLmg+
CisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPgorI2luY2x1ZGUgPGxpbnV4L2Jsa2Rldi5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3NlY3VyaXR5Lmg+CisjaW5jbHVkZSA8bGludXgvcmVib290Lmg+CisjaW5j
bHVkZSA8bGludXgvcmN1cGRhdGUuaD4KKworLyogdXBkYXRlIGlub2RlIHN0YXQtZGF0YSBieSBj
YWxsaW5nIHBsdWdpbiAqLworaW50IHJlaXNlcjRfdXBkYXRlX3NkKHN0cnVjdCBpbm9kZSAqb2Jq
ZWN0KQoreworCWZpbGVfcGx1Z2luICpmcGx1ZzsKKworCWFzc2VydCgibmlraXRhLTIzMzgiLCBv
YmplY3QgIT0gTlVMTCk7CisJLyogY2hlY2sgZm9yIHJlYWQtb25seSBmaWxlIHN5c3RlbS4gKi8K
KwlpZiAoSVNfUkRPTkxZKG9iamVjdCkpCisJCXJldHVybiAwOworCisJZnBsdWcgPSBpbm9kZV9m
aWxlX3BsdWdpbihvYmplY3QpOworCWFzc2VydCgibmlraXRhLTIzMzkiLCBmcGx1ZyAhPSBOVUxM
KTsKKwlyZXR1cm4gZnBsdWctPndyaXRlX3NkX2J5X2lub2RlKG9iamVjdCk7Cit9CisKKy8qIGhl
bHBlciBmdW5jdGlvbjogaW5jcmVhc2UgaW5vZGUgbmxpbmsgY291bnQgYW5kIGNhbGwgcGx1Z2lu
IG1ldGhvZCB0byBzYXZlCisgICB1cGRhdGVkIHN0YXQtZGF0YS4KKworICAgVXNlZCBieSBsaW5r
L2NyZWF0ZSBhbmQgZHVyaW5nIGNyZWF0aW9uIG9mIGRvdCBhbmQgZG90ZG90IGluIG1rZGlyCisq
LworaW50IHJlaXNlcjRfYWRkX25saW5rKHN0cnVjdCBpbm9kZSAqb2JqZWN0IC8qIG9iamVjdCB0
byB3aGljaCBsaW5rIGlzIGFkZGVkICovICwKKwkJICAgICAgc3RydWN0IGlub2RlICpwYXJlbnQg
LyogcGFyZW50IHdoZXJlIG5ldyBlbnRyeSB3aWxsIGJlICovCisJCSAgICAgICwKKwkJICAgICAg
aW50IHdyaXRlX3NkX3AJLyogdHJ1ZSBpZiBzdGF0LWRhdGEgaGFzIHRvIGJlCisJCQkJCSAqIHVw
ZGF0ZWQgKi8gKQoreworCWZpbGVfcGx1Z2luICpmcGx1ZzsKKwlpbnQgcmVzdWx0OworCisJYXNz
ZXJ0KCJuaWtpdGEtMTM1MSIsIG9iamVjdCAhPSBOVUxMKTsKKworCWZwbHVnID0gaW5vZGVfZmls
ZV9wbHVnaW4ob2JqZWN0KTsKKwlhc3NlcnQoIm5pa2l0YS0xNDQ1IiwgZnBsdWcgIT0gTlVMTCk7
CisKKwkvKiBhc2sgcGx1Z2luIHdoZXRoZXIgaXQgY2FuIGFkZCB5ZXQgYW5vdGhlciBsaW5rIHRv
IHRoaXMKKwkgICBvYmplY3QgKi8KKwlpZiAoIWZwbHVnLT5jYW5fYWRkX2xpbmsob2JqZWN0KSkK
KwkJcmV0dXJuIFJFVEVSUigtRU1MSU5LKTsKKworCWFzc2VydCgibmlraXRhLTIyMTEiLCBmcGx1
Zy0+YWRkX2xpbmsgIT0gTlVMTCk7CisJLyogY2FsbCBwbHVnaW4gdG8gZG8gYWN0dWFsIGFkZGl0
aW9uIG9mIGxpbmsgKi8KKwlyZXN1bHQgPSBmcGx1Zy0+YWRkX2xpbmsob2JqZWN0LCBwYXJlbnQp
OworCisJLyogb3B0aW9uYWxseSB1cGRhdGUgc3RhdCBkYXRhICovCisJaWYgKHJlc3VsdCA9PSAw
ICYmIHdyaXRlX3NkX3ApCisJCXJlc3VsdCA9IGZwbHVnLT53cml0ZV9zZF9ieV9pbm9kZShvYmpl
Y3QpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGhlbHBlciBmdW5jdGlvbjogZGVjcmVhc2Ug
aW5vZGUgbmxpbmsgY291bnQgYW5kIGNhbGwgcGx1Z2luIG1ldGhvZCB0byBzYXZlCisgICB1cGRh
dGVkIHN0YXQtZGF0YS4KKworICAgVXNlZCBieSB1bmxpbmsvY3JlYXRlCisqLworaW50IHJlaXNl
cjRfZGVsX25saW5rKHN0cnVjdCBpbm9kZSAqb2JqZWN0CS8qIG9iamVjdCBmcm9tIHdoaWNoIGxp
bmsgaXMKKwkJCQkJCSAqIHJlbW92ZWQgKi8gLAorCQkgICAgICBzdHJ1Y3QgaW5vZGUgKnBhcmVu
dCAvKiBwYXJlbnQgd2hlcmUgZW50cnkgd2FzICovICwKKwkJICAgICAgaW50IHdyaXRlX3NkX3AJ
LyogdHJ1ZSBpcyBzdGF0LWRhdGEgaGFzIHRvIGJlCisJCQkJCSAqIHVwZGF0ZWQgKi8gKQorewor
CWZpbGVfcGx1Z2luICpmcGx1ZzsKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJuaWtpdGEtMTM0
OSIsIG9iamVjdCAhPSBOVUxMKTsKKworCWZwbHVnID0gaW5vZGVfZmlsZV9wbHVnaW4ob2JqZWN0
KTsKKwlhc3NlcnQoIm5pa2l0YS0xMzUwIiwgZnBsdWcgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtp
dGEtMTQ0NiIsIG9iamVjdC0+aV9ubGluayA+IDApOworCWFzc2VydCgibmlraXRhLTIyMTAiLCBm
cGx1Zy0+cmVtX2xpbmsgIT0gTlVMTCk7CisKKwkvKiBjYWxsIHBsdWdpbiB0byBkbyBhY3R1YWwg
ZGVsZXRpb24gb2YgbGluayAqLworCXJlc3VsdCA9IGZwbHVnLT5yZW1fbGluayhvYmplY3QsIHBh
cmVudCk7CisKKwkvKiBvcHRpb25hbGx5IHVwZGF0ZSBzdGF0IGRhdGEgKi8KKwlpZiAocmVzdWx0
ID09IDAgJiYgd3JpdGVfc2RfcCkKKwkJcmVzdWx0ID0gZnBsdWctPndyaXRlX3NkX2J5X2lub2Rl
KG9iamVjdCk7CisJcmV0dXJuIHJlc3VsdDsKK30KKworLyogUmVsZWFzZSByZWlzZXI0IGRlbnRy
eS4gVGhpcyBpcyBkX29wLT5kX3JlbGVhc2UoKSBtZXRob2QuICovCitzdGF0aWMgdm9pZCByZWlz
ZXI0X2RfcmVsZWFzZShzdHJ1Y3QgZGVudHJ5ICpkZW50cnkgLyogZGVudHJ5IHJlbGVhc2VkICov
ICkKK3sKKwlyZWlzZXI0X2ZyZWVfZGVudHJ5X2ZzZGF0YShkZW50cnkpOworfQorCisvKgorICog
Q2FsbGVkIGJ5IHJlaXNlcjRfc3luY19pbm9kZXMoKSwgZHVyaW5nIHNwZWN1bGF0aXZlIHdyaXRl
LWJhY2sgKHRocm91Z2gKKyAqIHBkZmx1c2gsIG9yIGJhbGFuY2VfZGlydHlfcGFnZXMoKSkuCisg
Ki8KK3ZvaWQgcmVpc2VyNF93cml0ZW91dChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCBzdHJ1Y3Qg
d3JpdGViYWNrX2NvbnRyb2wgKndiYykKK3sKKwlsb25nIHdyaXR0ZW4gPSAwOworCWludCByZXBl
YXRzID0gMDsKKwlpbnQgcmVzdWx0OworCisJLyoKKwkgKiBQZXJmb3JtcyBlYXJseSBmbHVzaGlu
ZywgdHJ5aW5nIHRvIGZyZWUgc29tZSBtZW1vcnkuIElmIHRoZXJlCisJICogaXMgbm90aGluZyB0
byBmbHVzaCwgY29tbWl0cyBzb21lIGF0b21zLgorCSAqCisJICogQ29tbWl0IGFsbCBhdG9tcyBp
ZiByZWlzZXI0X3dyaXRlcGFnZXNfZGlzcGF0Y2goKSBpcyBjYWxsZWQKKwkgKiBmcm9tIHN5c19z
eW5jKCkgb3Igc3lzX2ZzeW5jKCkKKwkgKi8KKwlpZiAod2JjLT5zeW5jX21vZGUgIT0gV0JfU1lO
Q19OT05FKSB7CisJCXR4bm1ncl9mb3JjZV9jb21taXRfYWxsKHNiLCAwKTsKKwkJcmV0dXJuOwor
CX0KKworCUJVR19PTihyZWlzZXI0X2dldF9zdXBlcl9mYWtlKHNiKSA9PSBOVUxMKTsKKwlkbyB7
CisJCWxvbmcgbnJfc3VibWl0dGVkID0gMDsKKwkJam5vZGUgKm5vZGUgPSBOVUxMOworCisJCS8q
IGRvIG5vdCBwdXQgbW9yZSByZXF1ZXN0cyB0byBvdmVybG9hZCB3cml0ZSBxdWV1ZSAqLworCQlp
ZiAoYmRpX3dyaXRlX2Nvbmdlc3RlZChpbm9kZV90b19iZGkocmVpc2VyNF9nZXRfc3VwZXJfZmFr
ZShzYikpKSkgeworCQkJLy9ibGtfZmx1c2hfcGx1ZyhjdXJyZW50KTsKKwkJCWJyZWFrOworCQl9
CisJCXJlcGVhdHMrKzsKKwkJQlVHX09OKHdiYy0+bnJfdG9fd3JpdGUgPD0gMCk7CisKKwkJaWYg
KGdldF9jdXJyZW50X2NvbnRleHQoKS0+ZW50ZCkgeworCQkJZW50ZF9jb250ZXh0ICplbnQgPSBn
ZXRfZW50ZF9jb250ZXh0KHNiKTsKKworCQkJaWYgKGVudC0+Y3VyX3JlcXVlc3QtPm5vZGUpCisJ
CQkJLyoKKwkJCQkgKiB0aGlzIGlzIGVudCB0aHJlYWQgYW5kIGl0IG1hbmFnZWQgdG8gY2FwdHVy
ZQorCQkJCSAqIHJlcXVlc3RlZCBwYWdlIGl0c2VsZiAtIHN0YXJ0IGZsdXNoIGZyb20KKwkJCQkg
KiB0aGF0IHBhZ2UKKwkJCQkgKi8KKwkJCQlub2RlID0gZW50LT5jdXJfcmVxdWVzdC0+bm9kZTsK
KwkJfQorCisJCXJlc3VsdCA9IGZsdXNoX3NvbWVfYXRvbShub2RlLCAmbnJfc3VibWl0dGVkLCB3
YmMsCisJCQkJCSBKTk9ERV9GTFVTSF9XUklURV9CTE9DS1MpOworCQlpZiAocmVzdWx0ICE9IDAp
CisJCQl3YXJuaW5nKCJuaWtpdGEtMzEwMDEiLCAiRmx1c2ggZmFpbGVkOiAlaSIsIHJlc3VsdCk7
CisJCWlmIChub2RlKQorCQkJLyogZHJvcCB0aGUgcmVmZXJlbmNlIGFxdWlyZWQKKwkJCSAgIGlu
IGZpbmRfb3JfY3JlYXRlX2V4dGVudCgpICovCisJCQlqcHV0KG5vZGUpOworCQlpZiAoIW5yX3N1
Ym1pdHRlZCkKKwkJCWJyZWFrOworCisJCXdiYy0+bnJfdG9fd3JpdGUgLT0gbnJfc3VibWl0dGVk
OworCQl3cml0dGVuICs9IG5yX3N1Ym1pdHRlZDsKKwl9IHdoaWxlICh3YmMtPm5yX3RvX3dyaXRl
ID4gMCk7Cit9CisKKy8qIHRlbGwgVk0gaG93IG1hbnkgcGFnZXMgd2VyZSBkaXJ0aWVkICovCit2
b2lkIHJlaXNlcjRfdGhyb3R0bGVfd3JpdGUoc3RydWN0IGlub2RlICppbm9kZSkKK3sKKwlyZWlz
ZXI0X2NvbnRleHQgKmN0eDsKKworCWN0eCA9IGdldF9jdXJyZW50X2NvbnRleHQoKTsKKwlyZWlz
ZXI0X3R4bl9yZXN0YXJ0KGN0eCk7CisJY3VycmVudC0+am91cm5hbF9pbmZvID0gTlVMTDsKKwli
YWxhbmNlX2RpcnR5X3BhZ2VzX3JhdGVsaW1pdGVkKGlub2RlLT5pX21hcHBpbmcpOworCWN1cnJl
bnQtPmpvdXJuYWxfaW5mbyA9IGN0eDsKK30KKworY29uc3QgaW50IFJFSVNFUjRfTUFHSUNfT0ZG
U0VUID0gMTYgKiA0MDk2OwkvKiBvZmZzZXQgdG8gbWFnaWMgc3RyaW5nIGZyb20gdGhlCisJCQkJ
CQkgKiBiZWdpbm5pbmcgb2YgZGV2aWNlICovCisKKy8qCisgKiBSZWlzZXI0IGluaXRpYWxpemF0
aW9uL3NodXRkb3duLgorICoKKyAqIENvZGUgYmVsb3cgcGVyZm9ybXMgZ2xvYmFsIHJlaXNlcjQg
aW5pdGlhbGl6YXRpb24gdGhhdCBpcyBkb25lIGVpdGhlciBhcworICogcGFydCBvZiBrZXJuZWwg
aW5pdGlhbGl6YXRpb24gKHdoZW4gcmVpc2VyNCBpcyBzdGF0aWNhbGx5IGJ1aWx0LWluKSwgb3IK
KyAqIGR1cmluZyByZWlzZXI0IG1vZHVsZSBsb2FkICh3aGVuIGNvbXBpbGVkIGFzIG1vZHVsZSku
CisgKi8KKwordm9pZCByZWlzZXI0X2hhbmRsZV9lcnJvcih2b2lkKQoreworCXN0cnVjdCBzdXBl
cl9ibG9jayAqc2IgPSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCk7CisKKwlpZiAoIXNiKQorCQly
ZXR1cm47CisJcmVpc2VyNF9zdGF0dXNfd3JpdGUoUkVJU0VSNF9TVEFUVVNfREFNQUdFRCwgMCwK
KwkJCSAgICAgIkZpbGVzeXN0ZW0gZXJyb3Igb2NjdXJlZCIpOworCXN3aXRjaCAoZ2V0X3N1cGVy
X3ByaXZhdGUoc2IpLT5vbmVycm9yKSB7CisJY2FzZSAxOgorCQlyZWlzZXI0X3BhbmljKCJmb29i
YXItNDIiLCAiRmlsZXN5c3RlbSBlcnJvciBvY2N1cmVkXG4iKTsKKwlkZWZhdWx0OgorCQlpZiAo
c2JfcmRvbmx5KHNiKSkKKwkJCXJldHVybjsKKwkJc2ItPnNfZmxhZ3MgfD0gU0JfUkRPTkxZOwor
CQlicmVhazsKKwl9Cit9CisKK3N0cnVjdCBkZW50cnlfb3BlcmF0aW9ucyByZWlzZXI0X2RlbnRy
eV9vcGVyYXRpb25zID0geworCS5kX3JldmFsaWRhdGUgPSBOVUxMLAorCS5kX2hhc2ggPSBOVUxM
LAorCS5kX2NvbXBhcmUgPSBOVUxMLAorCS5kX2RlbGV0ZSA9IE5VTEwsCisJLmRfcmVsZWFzZSA9
IHJlaXNlcjRfZF9yZWxlYXNlLAorCS5kX2lwdXQgPSBOVUxMLAorfTsKKworLyogTWFrZSBMaW51
cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJL
JlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lk
dGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRl
cmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvdmZzX29wcy5oIGxpbnV4LTUu
NC4xNy9mcy9yZWlzZXI0L3Zmc19vcHMuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2Vy
NC92ZnNfb3BzLmgJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4
LTUuNC4xNy9mcy9yZWlzZXI0L3Zmc19vcHMuaAkyMDIwLTAyLTA1IDIwOjUzOjQxLjQ4NzIyMjQ0
MiArMDEwMApAQCAtMCwwICsxLDYwIEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwgMjAwMyBi
eSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JFQURNRSAq
LworCisvKiB2ZnNfb3BzLmMncyBleHBvcnRlZCBzeW1ib2xzICovCisKKyNpZiAhZGVmaW5lZCgg
X19GU19SRUlTRVI0X1ZGU19PUFNfSF9fICkKKyNkZWZpbmUgX19GU19SRUlTRVI0X1ZGU19PUFNf
SF9fCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisjaW5jbHVkZSAiY29vcmQuaCIKKyNpbmNsdWRl
ICJzZWFsLmgiCisjaW5jbHVkZSAicGx1Z2luL2ZpbGUvZmlsZS5oIgorI2luY2x1ZGUgInN1cGVy
LmgiCisjaW5jbHVkZSAicmVhZGFoZWFkLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgkv
KiBmb3IgbG9mZl90ICovCisjaW5jbHVkZSA8bGludXgvZnMuaD4JCS8qIGZvciBzdHJ1Y3QgYWRk
cmVzc19zcGFjZSAqLworI2luY2x1ZGUgPGxpbnV4L2RjYWNoZS5oPgkvKiBmb3Igc3RydWN0IGRl
bnRyeSAqLworI2luY2x1ZGUgPGxpbnV4L21tLmg+CisjaW5jbHVkZSA8bGludXgvYmFja2luZy1k
ZXYuaD4KKworLyogYWRkcmVzcyBzcGFjZSBvcGVyYXRpb25zICovCitpbnQgcmVpc2VyNF93cml0
ZXBhZ2Uoc3RydWN0IHBhZ2UgKiwgc3RydWN0IHdyaXRlYmFja19jb250cm9sICopOworaW50IHJl
aXNlcjRfc2V0X3BhZ2VfZGlydHkoc3RydWN0IHBhZ2UgKik7Cit2b2lkIHJlaXNlcjRfaW52YWxp
ZGF0ZXBhZ2Uoc3RydWN0IHBhZ2UgKiwgdW5zaWduZWQgaW50IG9mZnNldCwgdW5zaWduZWQgaW50
IGxlbmd0aCk7CitpbnQgcmVpc2VyNF9yZWxlYXNlcGFnZShzdHJ1Y3QgcGFnZSAqLCBnZnBfdCk7
CisKKyNpZmRlZiBDT05GSUdfTUlHUkFUSU9OCitpbnQgcmVpc2VyNF9taWdyYXRlcGFnZShzdHJ1
Y3QgYWRkcmVzc19zcGFjZSAqLCBzdHJ1Y3QgcGFnZSAqLAorCQkJc3RydWN0IHBhZ2UgKiwgZW51
bSBtaWdyYXRlX21vZGUpOworI2Vsc2UKKyNkZWZpbmUgcmVpc2VyNF9taWdyYXRlcGFnZSBOVUxM
CisjZW5kaWYgLyogQ09ORklHX01JR1JBVElPTiAqLworCitleHRlcm4gaW50IHJlaXNlcjRfdXBk
YXRlX3NkKHN0cnVjdCBpbm9kZSAqKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9hZGRfbmxpbmsoc3Ry
dWN0IGlub2RlICosIHN0cnVjdCBpbm9kZSAqLCBpbnQpOworZXh0ZXJuIGludCByZWlzZXI0X2Rl
bF9ubGluayhzdHJ1Y3QgaW5vZGUgKiwgc3RydWN0IGlub2RlICosIGludCk7CisKK2V4dGVybiBp
bnQgcmVpc2VyNF9zdGFydF91cF9pbyhzdHJ1Y3QgcGFnZSAqcGFnZSk7CitleHRlcm4gdm9pZCBy
ZWlzZXI0X3Rocm90dGxlX3dyaXRlKHN0cnVjdCBpbm9kZSAqKTsKK2V4dGVybiBpbnQgam5vZGVf
aXNfcmVsZWFzYWJsZShqbm9kZSAqKTsKKworI2RlZmluZSBDQVBUVVJFX0FQQUdFX0JVUlNUICgx
MDI0bCkKK3ZvaWQgcmVpc2VyNF93cml0ZW91dChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKiwgc3RydWN0
IHdyaXRlYmFja19jb250cm9sICopOworCitleHRlcm4gdm9pZCByZWlzZXI0X2hhbmRsZV9lcnJv
cih2b2lkKTsKKworLyogX19GU19SRUlTRVI0X1ZGU19PUFNfSF9fICovCisjZW5kaWYKKworLyog
TWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24t
c3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4Cisg
ICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiAxMjAKKyAgIHNjcm9sbC1zdGVwOiAxCisg
ICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3dhbmRlci5jIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3dhbmRlci5jCi0tLSBs
aW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3dhbmRlci5jCTE5NzAtMDEtMDEgMDE6MDA6MDAu
MDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC93YW5kZXIuYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ4ODIyMjQ1MCArMDEwMApAQCAtMCwwICsxLDE3NTcgQEAKKy8qIENv
cHlyaWdodCAyMDAxLCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkKKyAqIHJlaXNlcjQvUkVBRE1FICovCisKKy8qIFJlaXNlcjQgV2FuZGVyaW5nIExvZyAq
LworCisvKiBZb3Ugc2hvdWxkIHJlYWQgaHR0cDovL3d3dy5uYW1lc3lzLmNvbS90eG4tZG9jLmh0
bWwKKworICAgVGhhdCBkZXNjcmliZXMgaG93IGZpbGVzeXN0ZW0gb3BlcmF0aW9ucyBhcmUgcGVy
Zm9ybWVkIGFzIGF0b21pYworICAgdHJhbnNhY3Rpb25zLCBhbmQgaG93IHdlIHRyeSB0byBhcnJh
bmdlIGl0IHNvIHRoYXQgd2UgY2FuIHdyaXRlIG1vc3Qgb2YgdGhlCisgICBkYXRhIG9ubHkgb25j
ZSB3aGlsZSBwZXJmb3JtaW5nIHRoZSBvcGVyYXRpb24gYXRvbWljYWxseS4KKworICAgRm9yIHRo
ZSBwdXJwb3NlcyBvZiB0aGlzIGNvZGUsIGl0IGlzIGVub3VnaCBmb3IgaXQgdG8gdW5kZXJzdGFu
ZCB0aGF0IGl0CisgICBoYXMgYmVlbiB0b2xkIGEgZ2l2ZW4gYmxvY2sgc2hvdWxkIGJlIHdyaXR0
ZW4gZWl0aGVyIG9uY2UsIG9yIHR3aWNlIChpZgorICAgdHdpY2UgdGhlbiBvbmNlIHRvIHRoZSB3
YW5kZXJlZCBsb2NhdGlvbiBhbmQgb25jZSB0byB0aGUgcmVhbCBsb2NhdGlvbikuCisKKyAgIFRo
aXMgY29kZSBndWFyYW50ZWVzIHRoYXQgdGhvc2UgYmxvY2tzIHRoYXQgYXJlIGRlZmluZWQgdG8g
YmUgcGFydCBvZiBhbgorICAgYXRvbSBlaXRoZXIgYWxsIHRha2UgZWZmZWN0IG9yIG5vbmUgb2Yg
dGhlbSB0YWtlIGVmZmVjdC4KKworICAgVGhlICJyZWxvY2F0ZSBzZXQiIG9mIG5vZGVzIGFyZSBz
dWJtaXR0ZWQgdG8gd3JpdGUgYnkgdGhlIGpub2RlX2ZsdXNoKCkKKyAgIHJvdXRpbmUsIGFuZCB0
aGUgIm92ZXJ3cml0ZSBzZXQiIGlzIHN1Ym1pdHRlZCBieSByZWlzZXI0X3dyaXRlX2xvZygpLgor
ICAgVGhpcyBpcyBiZWNhdXNlIHdpdGggdGhlIG92ZXJ3cml0ZSBzZXQgd2Ugc2VlayB0byBvcHRp
bWl6ZSB3cml0ZXMsIGFuZAorICAgd2l0aCB0aGUgcmVsb2NhdGUgc2V0IHdlIHNlZWsgdG8gY2F1
c2UgZGlzayBvcmRlciB0byBjb3JyZWxhdGUgd2l0aCB0aGUKKyAgICJwYXJlbnQgZmlyc3Qgb3Jk
ZXIiIChwcmVvcmRlcikuCisKKyAgIHJlaXNlcjRfd3JpdGVfbG9nKCkgYWxsb2NhdGVzIGFuZCB3
cml0ZXMgd2FuZGVyZWQgYmxvY2tzIGFuZCBtYWludGFpbnMKKyAgIGFkZGl0aW9uYWwgb24tZGlz
ayBzdHJ1Y3R1cmVzIG9mIHRoZSBhdG9tIGFzIHdhbmRlciByZWNvcmRzIChlYWNoIHdhbmRlcgor
ICAgcmVjb3JkIG9jY3VwaWVzIG9uZSBibG9jaykgZm9yIHN0b3Jpbmcgb2YgdGhlICJ3YW5kZXJl
ZCBtYXAiIChhIHRhYmxlIHdoaWNoCisgICBjb250YWlucyBhIHJlbGF0aW9uIGJldHdlZW4gd2Fu
ZGVyZWQgYW5kIHJlYWwgYmxvY2sgbnVtYmVycykgYW5kIG90aGVyCisgICBpbmZvcm1hdGlvbiB3
aGljaCBtaWdodCBiZSBuZWVkZWQgYXQgdHJhbnNhY3Rpb24gcmVjb3ZlcnkgdGltZS4KKworICAg
VGhlIHdhbmRlciByZWNvcmRzIGFyZSB1bmlkaXJlY3Rpb25hbGx5IGxpbmtlZCBpbnRvIGEgY2ly
Y2xlOiBlYWNoIHdhbmRlcgorICAgcmVjb3JkIGNvbnRhaW5zIGEgYmxvY2sgbnVtYmVyIG9mIHRo
ZSBuZXh0IHdhbmRlciByZWNvcmQsIHRoZSBsYXN0IHdhbmRlcgorICAgcmVjb3JkIHBvaW50cyB0
byB0aGUgZmlyc3Qgb25lLgorCisgICBPbmUgd2FuZGVyIHJlY29yZCAobmFtZWQgInR4IGhlYWQi
IGluIHRoaXMgZmlsZSkgaGFzIGEgZm9ybWF0IHdoaWNoIGlzCisgICBkaWZmZXJlbnQgZnJvbSB0
aGUgb3RoZXIgd2FuZGVyIHJlY29yZHMuIFRoZSAidHggaGVhZCIgaGFzIGEgcmVmZXJlbmNlIHRv
IHRoZQorICAgInR4IGhlYWQiIGJsb2NrIG9mIHRoZSBwcmV2aW91c2x5IGNvbW1pdHRlZCBhdG9t
LiAgQWxzbywgInR4IGhlYWQiIGNvbnRhaW5zCisgICBmcyBpbmZvcm1hdGlvbiAodGhlIGZyZWUg
YmxvY2tzIGNvdW50ZXIsIGFuZCB0aGUgb2lkIGFsbG9jYXRvciBzdGF0ZSkgd2hpY2gKKyAgIGlz
IGxvZ2dlZCBpbiBhIHNwZWNpYWwgd2F5IC4KKworICAgVGhlcmUgYXJlIHR3byBqb3VybmFsIGNv
bnRyb2wgYmxvY2tzLCBuYW1lZCBqb3VybmFsIGhlYWRlciBhbmQgam91cm5hbAorICAgZm9vdGVy
IHdoaWNoIGhhdmUgZml4ZWQgb24tZGlzayBsb2NhdGlvbnMuICBUaGUgam91cm5hbCBoZWFkZXIg
aGFzIGEKKyAgIHJlZmVyZW5jZSB0byB0aGUgInR4IGhlYWQiIGJsb2NrIG9mIHRoZSBsYXN0IGNv
bW1pdHRlZCBhdG9tLiAgVGhlIGpvdXJuYWwKKyAgIGZvb3RlciBwb2ludHMgdG8gdGhlICJ0eCBo
ZWFkIiBvZiB0aGUgbGFzdCBmbHVzaGVkIGF0b20uICBUaGUgYXRvbSBpcworICAgInBsYXllZCIg
d2hlbiBhbGwgYmxvY2tzIGZyb20gaXRzIG92ZXJ3cml0ZSBzZXQgYXJlIHdyaXR0ZW4gdG8gZGlz
ayB0aGUKKyAgIHNlY29uZCB0aW1lIChpLmUuIHdyaXR0ZW4gdG8gdGhlaXIgcmVhbCBsb2NhdGlv
bnMpLgorCisgICBOT1RFOiBQZW9wbGUgd2hvIGtub3cgcmVpc2VyZnMgaW50ZXJuYWxzIGFuZCBp
dHMgam91cm5hbCBzdHJ1Y3R1cmUgbWlnaHQgYmUKKyAgIGNvbmZ1c2VkIHdpdGggdGhlc2UgdGVy
bXMgam91cm5hbCBmb290ZXIgYW5kIGpvdXJuYWwgaGVhZGVyLiBUaGVyZSBpcyBhIHRhYmxlCisg
ICB3aXRoIHRlcm1zIG9mIHNpbWlsYXIgc2VtYW50aWNzIGluIHJlaXNlcmZzIChyZWlzZXIzKSBh
bmQgcmVpc2VyNDoKKworICAgUkVJU0VSMyBURVJNICAgICAgICB8ICBSRUlTRVI0IFRFUk0gICAg
ICAgICB8IERFU0NSSVBUSU9OCisgICAtLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisgICBjb21taXQgcmVjb3Jk
ICAgICAgIHwgIGpvdXJuYWwgaGVhZGVyICAgICAgIHwgYXRvbWljIHdyaXRlIG9mIHRoaXMgcmVj
b3JkCisgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgIHwgZW5k
cyB0cmFuc2FjdGlvbiBjb21taXQKKyAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKyAgIGpvdXJuYWwgaGVh
ZGVyICAgICAgfCAgam91cm5hbCBmb290ZXIgICAgICAgfCBhdG9taWMgd3JpdGUgb2YgdGhpcyBy
ZWNvcmQKKyAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgfCBl
bmRzIHBvc3QtY29tbWl0IHdyaXRlcy4KKyAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAg
ICAgICAgICAgICAgICAgfCBBZnRlciBzdWNjZXNzZnVsCisgICAgICAgICAgICAgICAgICAgICAg
IHwgICAgICAgICAgICAgICAgICAgICAgIHwgd3JpdGluZyBvZiB0aGlzIGpvdXJuYWwKKyAgICAg
ICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgfCBibG9ja3MgKGluIHJl
aXNlcjMpIG9yCisgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAg
IHwgd2FuZGVyZWQgYmxvY2tzL3JlY29yZHMgYXJlCisgICAgICAgICAgICAgICAgICAgICAgIHwg
ICAgICAgICAgICAgICAgICAgICAgIHwgZnJlZSBmb3IgcmUtdXNlLgorICAgLS0tLS0tLS0tLS0t
LS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQorCisgICBUaGUgYXRvbSBjb21taXQgcHJvY2VzcyBpcyB0aGUgZm9sbG93aW5nOgorCisg
ICAxLiBUaGUgb3ZlcndyaXRlIHNldCBpcyB0YWtlbiBmcm9tIGF0b20ncyBjbGVhbiBsaXN0LCBh
bmQgaXRzIHNpemUgaXMKKyAgICAgIGNvdW50ZWQuCisKKyAgIDIuIFRoZSBudW1iZXIgb2YgbmVj
ZXNzYXJ5IHdhbmRlciByZWNvcmRzIChpbmNsdWRpbmcgdHggaGVhZCkgaXMgY2FsY3VsYXRlZCwK
KyAgICAgIGFuZCB0aGUgd2FuZGVyIHJlY29yZCBibG9ja3MgYXJlIGFsbG9jYXRlZC4KKworICAg
My4gQWxsb2NhdGUgd2FuZGVyZWQgYmxvY2tzIGFuZCBwb3B1bGF0ZSB3YW5kZXIgcmVjb3JkcyBi
eSB3YW5kZXJlZCBtYXAuCisKKyAgIDQuIHN1Ym1pdCB3cml0ZSByZXF1ZXN0cyBmb3Igd2FuZGVy
IHJlY29yZHMgYW5kIHdhbmRlcmVkIGJsb2Nrcy4KKworICAgNS4gd2FpdCB1bnRpbCBzdWJtaXR0
ZWQgd3JpdGUgcmVxdWVzdHMgY29tcGxldGUuCisKKyAgIDYuIHVwZGF0ZSBqb3VybmFsIGhlYWRl
cjogY2hhbmdlIHRoZSBwb2ludGVyIHRvIHRoZSBibG9jayBudW1iZXIgb2YganVzdAorICAgd3Jp
dHRlbiB0eCBoZWFkLCBzdWJtaXQgYW4gaS9vIGZvciBtb2RpZmllZCBqb3VybmFsIGhlYWRlciBi
bG9jayBhbmQgd2FpdAorICAgZm9yIGkvbyBjb21wbGV0aW9uLgorCisgICBOT1RFOiBUaGUgc3Bl
Y2lhbCBsb2dnaW5nIGZvciBiaXRtYXAgYmxvY2tzIGFuZCBzb21lIHJlaXNlcjQgc3VwZXIgYmxv
Y2sKKyAgIGZpZWxkcyBtYWtlcyBwcm9jZXNzZXMgb2YgYXRvbSBjb21taXQsIGZsdXNoIGFuZCBy
ZWNvdmVyaW5nIGEgYml0IG1vcmUKKyAgIGNvbXBsZXggKHNlZSBjb21tZW50cyBpbiB0aGUgc291
cmNlIGNvZGUgZm9yIGRldGFpbHMpLgorCisgICBUaGUgYXRvbSBwbGF5aW5nIHByb2Nlc3MgaXMg
dGhlIGZvbGxvd2luZzoKKworICAgMS4gV3JpdGUgYXRvbSdzIG92ZXJ3cml0ZSBzZXQgaW4tcGxh
Y2UuCisKKyAgIDIuIFdhaXQgb24gaS9vLgorCisgICAzLiBVcGRhdGUgam91cm5hbCBmb290ZXI6
IGNoYW5nZSB0aGUgcG9pbnRlciB0byBibG9jayBudW1iZXIgb2YgdHggaGVhZAorICAgYmxvY2sg
b2YgdGhlIGF0b20gd2UgY3VycmVudGx5IGZsdXNoaW5nLCBzdWJtaXQgYW4gaS9vLCB3YWl0IG9u
IGkvbworICAgY29tcGxldGlvbi4KKworICAgNC4gRnJlZSBkaXNrIHNwYWNlIHdoaWNoIHdhcyB1
c2VkIGZvciB3YW5kZXJlZCBibG9ja3MgYW5kIHdhbmRlciByZWNvcmRzLgorCisgICBBZnRlciB0
aGUgZnJlZWluZyBvZiB3YW5kZXJlZCBibG9ja3MgYW5kIHdhbmRlciByZWNvcmRzIHdlIGhhdmUg
dGhhdCBqb3VybmFsCisgICBmb290ZXIgcG9pbnRzIHRvIHRoZSBvbi1kaXNrIHN0cnVjdHVyZSB3
aGljaCBtaWdodCBiZSBvdmVyd3JpdHRlbiBzb29uLgorICAgTmVpdGhlciB0aGUgbG9nIHdyaXRl
ciBub3IgdGhlIGpvdXJuYWwgcmVjb3ZlcnkgcHJvY2VkdXJlIHVzZSB0aGF0IHBvaW50ZXIKKyAg
IGZvciBhY2Nlc3NpbmcgdGhlIGRhdGEuICBXaGVuIHRoZSBqb3VybmFsIHJlY292ZXJ5IHByb2Nl
ZHVyZSBmaW5kcyB0aGUgb2xkZXN0CisgICB0cmFuc2FjdGlvbiBpdCBjb21wYXJlcyB0aGUgam91
cm5hbCBmb290ZXIgcG9pbnRlciB2YWx1ZSB3aXRoIHRoZSAicHJldl90eCIKKyAgIHBvaW50ZXIg
dmFsdWUgaW4gdHggaGVhZCwgaWYgdmFsdWVzIGFyZSBlcXVhbCB0aGUgb2xkZXN0IG5vdCBmbHVz
aGVkCisgICB0cmFuc2FjdGlvbiBpcyBmb3VuZC4KKworICAgTk9URSBvbiBkaXNrIHNwYWNlIGxl
YWthZ2U6IHRoZSBpbmZvcm1hdGlvbiBhYm91dCBvZiB3aGF0IGJsb2NrcyBhbmQgaG93IG1hbnkK
KyAgIGJsb2NrcyBhcmUgYWxsb2NhdGVkIGZvciB3YW5kZXJlZCBibG9ja3MsIHdhbmRlcmVkIHJl
Y29yZHMgaXMgbm90IHdyaXR0ZW4gdG8KKyAgIHRoZSBkaXNrIGJlY2F1c2Ugb2Ygc3BlY2lhbCBs
b2dnaW5nIGZvciBiaXRtYXBzIGFuZCBzb21lIHN1cGVyIGJsb2NrcworICAgY291bnRlcnMuICBB
ZnRlciBhIHN5c3RlbSBjcmFzaCB3ZSB0aGUgcmVpc2VyNCBkb2VzIG5vdCByZW1lbWJlciB0aG9z
ZQorICAgb2JqZWN0cyBhbGxvY2F0aW9uLCB0aHVzIHdlIGhhdmUgbm8gc3VjaCBhIGtpbmQgb2Yg
ZGlzayBzcGFjZSBsZWFrYWdlLgorKi8KKworLyogU3BlY2lhbCBsb2dnaW5nIG9mIHJlaXNlcjQg
c3VwZXIgYmxvY2sgZmllbGRzLiAqLworCisvKiBUaGVyZSBhcmUgc29tZSByZWlzZXI0IHN1cGVy
IGJsb2NrIGZpZWxkcyAoZnJlZSBibG9jayBjb3VudCBhbmQgT0lEIGFsbG9jYXRvcgorICAgc3Rh
dGUgKG51bWJlciBvZiBmaWxlcyBhbmQgbmV4dCBmcmVlIE9JRCkgd2hpY2ggYXJlIGxvZ2dlZCBz
ZXBhcmF0ZWx5IGZyb20KKyAgIHN1cGVyIGJsb2NrIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGF0b20g
ZnVzaW9uLgorCisgICBTbywgdGhlIHJlaXNlcjQgc3VwZXIgYmxvY2sgY2FuIGJlIG5vdCBjYXB0
dXJlZCBieSBhIHRyYW5zYWN0aW9uIHdpdGgKKyAgIGFsbG9jYXRlcy9kZWFsbG9jYXRlcyBkaXNr
IGJsb2NrcyBvciBjcmVhdGUvZGVsZXRlIGZpbGUgb2JqZWN0cy4gIE1vcmVvdmVyLAorICAgdGhl
IHJlaXNlcjQgb24tZGlzayBzdXBlciBibG9jayBpcyBub3QgdG91Y2hlZCB3aGVuIHN1Y2ggYSB0
cmFuc2FjdGlvbiBpcworICAgY29tbWl0dGVkIGFuZCBmbHVzaGVkLiAgVGhvc2UgImNvdW50ZXJz
IGxvZ2dlZCBzcGVjaWFsbHkiIGFyZSBsb2dnZWQgaW4gInR4CisgICBoZWFkIiBibG9ja3MgYW5k
IGluIHRoZSBqb3VybmFsIGZvb3RlciBibG9jay4KKworICAgQSBzdGVwLWJ5LXN0ZXAgZGVzY3Jp
cHRpb24gb2Ygc3BlY2lhbCBsb2dnaW5nOgorCisgICAwLiBUaGUgcGVyLWF0b20gaW5mb3JtYXRp
b24gYWJvdXQgZGVsZXRlZCBvciBjcmVhdGVkIGZpbGVzIGFuZCBhbGxvY2F0ZWQgb3IKKyAgIGZy
ZWVkIGJsb2NrcyBpcyBjb2xsZWN0ZWQgZHVyaW5nIHRoZSB0cmFuc2FjdGlvbi4gIFRoZSBhdG9t
J3MKKyAgIC0+bnJfb2JqZWN0c19jcmVhdGVkIGFuZCAtPm5yX29iamVjdHNfZGVsZXRlZCBhcmUg
Zm9yIG9iamVjdAorICAgZGVsZXRpb24vY3JlYXRpb24gdHJhY2tpbmcsIHRoZSBudW1iZXJzIG9m
IGFsbG9jYXRlZCBhbmQgZnJlZWQgYmxvY2tzIGFyZQorICAgY2FsY3VsYXRlZCB1c2luZyBhdG9t
J3MgZGVsZXRlIHNldCBhbmQgYXRvbSdzIGNhcHR1cmUgbGlzdCAtLSBhbGwgbmV3IGFuZAorICAg
cmVsb2NhdGVkIG5vZGVzIHNob3VsZCBiZSBvbiBhdG9tJ3MgY2xlYW4gbGlzdCBhbmQgc2hvdWxk
IGhhdmUgSk5PREVfUkVMT0MKKyAgIGJpdCBzZXQuCisKKyAgIDEuIFRoZSAibG9nZ2VkIHNwZWNp
YWxseSIgcmVpc2VyNCBzdXBlciBibG9jayBmaWVsZHMgaGF2ZSB0aGVpciAiY29tbWl0dGVkIgor
ICAgdmVyc2lvbnMgaW4gdGhlIHJlaXNlcjQgaW4tbWVtb3J5IHN1cGVyIGJsb2NrLiAgVGhleSBn
ZXQgbW9kaWZpZWQgb25seSBhdAorICAgYXRvbSBjb21taXQgdGltZS4gIFRoZSBhdG9tJ3MgY29t
bWl0IHRocmVhZCBoYXMgYW4gZXhjbHVzaXZlIGFjY2VzcyB0byB0aG9zZQorICAgImNvbW1pdHRl
ZCIgZmllbGRzIGJlY2F1c2UgdGhlIGxvZyB3cml0ZXIgaW1wbGVtZW50YXRpb24gc3VwcG9ydHMg
b25seSBvbmUKKyAgIGF0b20gY29tbWl0IGEgdGltZSAodGhlcmUgaXMgYSBwZXItZnMgImNvbW1p
dCIgbXV0ZXgpLiAgQXQKKyAgIHRoYXQgdGltZSAiY29tbWl0dGVkIiBjb3VudGVycyBhcmUgbW9k
aWZpZWQgdXNpbmcgcGVyLWF0b20gaW5mb3JtYXRpb24KKyAgIGNvbGxlY3RlZCBkdXJpbmcgdGhl
IHRyYW5zYWN0aW9uLiBUaGVzZSBjb3VudGVycyBhcmUgc3RvcmVkIG9uIGRpc2sgYXMgYQorICAg
cGFydCBvZiB0eCBoZWFkIGJsb2NrIHdoZW4gYXRvbSBpcyBjb21taXR0ZWQuCisKKyAgIDIuIFdo
ZW4gdGhlIGF0b20gaXMgZmx1c2hlZCB0aGUgdmFsdWUgb2YgdGhlIGZyZWUgYmxvY2sgY291bnRl
ciBhbmQgdGhlIE9JRAorICAgYWxsb2NhdG9yIHN0YXRlIGdldCB3cml0dGVuIHRvIHRoZSBqb3Vy
bmFsIGZvb3RlciBibG9jay4gIEEgc3BlY2lhbCBqb3VybmFsCisgICBwcm9jZWR1cmUgKGpvdXJu
YWxfcmVjb3Zlcl9zYl9kYXRhKCkpIHRha2VzIHRob3NlIHZhbHVlcyBmcm9tIHRoZSBqb3VybmFs
CisgICBmb290ZXIgYW5kIHVwZGF0ZXMgdGhlIHJlaXNlcjQgaW4tbWVtb3J5IHN1cGVyIGJsb2Nr
LgorCisgICBOT1RFOiBUaGF0IG1lYW5zIGZyZWUgYmxvY2sgY291bnQgYW5kIE9JRCBhbGxvY2F0
b3Igc3RhdGUgYXJlIGxvZ2dlZAorICAgc2VwYXJhdGVseSBmcm9tIHRoZSByZWlzZXI0IHN1cGVy
IGJsb2NrIHJlZ2FyZGxlc3Mgb2YgdGhlIGZhY3QgdGhhdCB0aGUKKyAgIHJlaXNlcjQgc3VwZXIg
YmxvY2sgaGFzIGZpZWxkcyB0byBzdG9yZSBib3RoIHRoZSBmcmVlIGJsb2NrIGNvdW50ZXIgYW5k
IHRoZQorICAgT0lEIGFsbG9jYXRvci4KKworICAgV3JpdGluZyB0aGUgd2hvbGUgc3VwZXIgYmxv
Y2sgYXQgY29tbWl0IHRpbWUgcmVxdWlyZXMga25vd2luZyB0cnVlIHZhbHVlcyBvZgorICAgYWxs
IGl0cyBmaWVsZHMgd2l0aG91dCBjaGFuZ2VzIG1hZGUgYnkgbm90IHlldCBjb21taXR0ZWQgdHJh
bnNhY3Rpb25zLiBJdCBpcworICAgcG9zc2libGUgYnkgaGF2aW5nIHRoZWlyICJjb21taXR0ZWQi
IHZlcnNpb24gb2YgdGhlIHN1cGVyIGJsb2NrIGxpa2UgdGhlCisgICByZWlzZXI0IGJpdG1hcCBi
bG9ja3MgaGF2ZSAiY29tbWl0dGVkIiBhbmQgIndvcmtpbmciIHZlcnNpb25zLiAgSG93ZXZlciwK
KyAgIGFub3RoZXIgc2NoZW1lIHdhcyBpbXBsZW1lbnRlZCB3aGljaCBzdG9yZXMgc3BlY2lhbCBs
b2dnZWQgdmFsdWVzIGluIHRoZQorICAgdW51c2VkIGZyZWUgc3BhY2UgaW5zaWRlIHRyYW5zYWN0
aW9uIGhlYWQgYmxvY2suICBJbiBteSBvcGluaW9uIGl0IGhhcyBhbgorICAgYWR2YW50YWdlIG9m
IG5vdCB3cml0aW5nIHdob2xlIHN1cGVyIGJsb2NrIHdoZW4gb25seSBwYXJ0IG9mIGl0IHdhcwor
ICAgbW9kaWZpZWQuICovCisKKyNpbmNsdWRlICJkZWJ1Zy5oIgorI2luY2x1ZGUgImRmb3JtYXQu
aCIKKyNpbmNsdWRlICJ0eG5tZ3IuaCIKKyNpbmNsdWRlICJqbm9kZS5oIgorI2luY2x1ZGUgInpu
b2RlLmgiCisjaW5jbHVkZSAiYmxvY2tfYWxsb2MuaCIKKyNpbmNsdWRlICJwYWdlX2NhY2hlLmgi
CisjaW5jbHVkZSAid2FuZGVyLmgiCisjaW5jbHVkZSAicmVpc2VyNC5oIgorI2luY2x1ZGUgInN1
cGVyLmgiCisjaW5jbHVkZSAidmZzX29wcy5oIgorI2luY2x1ZGUgIndyaXRlb3V0LmgiCisjaW5j
bHVkZSAiaW5vZGUuaCIKKyNpbmNsdWRlICJlbnRkLmgiCisKKyNpbmNsdWRlIDxsaW51eC90eXBl
cy5oPgorI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Jsb2NrICAq
LworI2luY2x1ZGUgPGxpbnV4L21tLmg+CQkvKiBmb3Igc3RydWN0IHBhZ2UgKi8KKyNpbmNsdWRl
IDxsaW51eC9wYWdlbWFwLmg+CisjaW5jbHVkZSA8bGludXgvYmlvLmg+CQkvKiBmb3Igc3RydWN0
IGJpbyAqLworI2luY2x1ZGUgPGxpbnV4L2Jsa2Rldi5oPgorCitzdGF0aWMgaW50IHdyaXRlX2pu
b2Rlc190b19kaXNrX2V4dGVudCgKKwlqbm9kZSAqLCBpbnQsIGNvbnN0IHJlaXNlcjRfYmxvY2tf
bnIgKiwgZmx1c2hfcXVldWVfdCAqLCBpbnQpOworCisvKiBUaGUgY29tbWl0X2hhbmRsZSBpcyBh
IGNvbnRhaW5lciBmb3Igb2JqZWN0cyBuZWVkZWQgYXQgYXRvbSBjb21taXQgdGltZSAgKi8KK3N0
cnVjdCBjb21taXRfaGFuZGxlIHsKKwkvKiBBIHBvaW50ZXIgdG8gYXRvbSdzIGxpc3Qgb2YgT1ZS
V1Igbm9kZXMgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkICpvdmVyd3JpdGVfc2V0OworCS8qIGF0b20n
cyBvdmVyd3JpdGUgc2V0IHNpemUgKi8KKwlpbnQgb3ZlcndyaXRlX3NldF9zaXplOworCS8qIGpu
b2RlcyBmb3Igd2FuZGVyIHJlY29yZCBibG9ja3MgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkIHR4X2xp
c3Q7CisJLyogbnVtYmVyIG9mIHdhbmRlciByZWNvcmRzICovCisJX191MzIgdHhfc2l6ZTsKKwkv
KiAnY29tbWl0dGVkJyBzYiBjb3VudGVycyBhcmUgc2F2ZWQgaGVyZSB1bnRpbCBhdG9tIGlzIGNv
bXBsZXRlbHkKKwkgICBmbHVzaGVkICAqLworCV9fdTY0IGZyZWVfYmxvY2tzOworCV9fdTY0IG5y
X2ZpbGVzOworCV9fdTY0IG5leHRfb2lkOworCS8qIEEgcG9pbnRlciB0byB0aGUgYXRvbSB3aGlj
aCBpcyBiZWluZyBjb21taXR0ZWQgKi8KKwl0eG5fYXRvbSAqYXRvbTsKKwkvKiBBIHBvaW50ZXIg
dG8gY3VycmVudCBzdXBlciBibG9jayAqLworCXN0cnVjdCBzdXBlcl9ibG9jayAqc3VwZXI7CisJ
LyogVGhlIGNvdW50ZXIgb2YgbW9kaWZpZWQgYml0bWFwcyAqLworCXJlaXNlcjRfYmxvY2tfbnIg
bnJfYml0bWFwOworfTsKKworc3RhdGljIHZvaWQgaW5pdF9jb21taXRfaGFuZGxlKHN0cnVjdCBj
b21taXRfaGFuZGxlICpjaCwgdHhuX2F0b20gKmF0b20pCit7CisJbWVtc2V0KGNoLCAwLCBzaXpl
b2Yoc3RydWN0IGNvbW1pdF9oYW5kbGUpKTsKKwlJTklUX0xJU1RfSEVBRCgmY2gtPnR4X2xpc3Qp
OworCisJY2gtPmF0b20gPSBhdG9tOworCWNoLT5zdXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRf
c2IoKTsKK30KKworc3RhdGljIHZvaWQgZG9uZV9jb21taXRfaGFuZGxlKHN0cnVjdCBjb21taXRf
aGFuZGxlICpjaCkKK3sKKwlhc3NlcnQoInphbS02OTAiLCBsaXN0X2VtcHR5KCZjaC0+dHhfbGlz
dCkpOworfQorCisvKiBmaWxsIGpvdXJuYWwgaGVhZGVyIGJsb2NrIGRhdGEgICovCitzdGF0aWMg
dm9pZCBmb3JtYXRfam91cm5hbF9oZWFkZXIoc3RydWN0IGNvbW1pdF9oYW5kbGUgKmNoKQorewor
CXN0cnVjdCByZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvOworCXN0cnVjdCBqb3VybmFs
X2hlYWRlciAqaGVhZGVyOworCWpub2RlICp0eGhlYWQ7CisKKwlzYmluZm8gPSBnZXRfc3VwZXJf
cHJpdmF0ZShjaC0+c3VwZXIpOworCWFzc2VydCgiemFtLTQ3OSIsIHNiaW5mbyAhPSBOVUxMKTsK
Kwlhc3NlcnQoInphbS00ODAiLCBzYmluZm8tPmpvdXJuYWxfaGVhZGVyICE9IE5VTEwpOworCisJ
dHhoZWFkID0gbGlzdF9lbnRyeShjaC0+dHhfbGlzdC5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5r
KTsKKworCWpsb2FkKHNiaW5mby0+am91cm5hbF9oZWFkZXIpOworCisJaGVhZGVyID0gKHN0cnVj
dCBqb3VybmFsX2hlYWRlciAqKWpkYXRhKHNiaW5mby0+am91cm5hbF9oZWFkZXIpOworCWFzc2Vy
dCgiemFtLTQ4NCIsIGhlYWRlciAhPSBOVUxMKTsKKworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xl
NjQoKmpub2RlX2dldF9ibG9jayh0eGhlYWQpKSwKKwkJICAgICAgJmhlYWRlci0+bGFzdF9jb21t
aXR0ZWRfdHgpOworCisJanJlbHNlKHNiaW5mby0+am91cm5hbF9oZWFkZXIpOworfQorCisvKiBm
aWxsIGpvdXJuYWwgZm9vdGVyIGJsb2NrIGRhdGEgKi8KK3N0YXRpYyB2b2lkIGZvcm1hdF9qb3Vy
bmFsX2Zvb3RlcihzdHJ1Y3QgY29tbWl0X2hhbmRsZSAqY2gpCit7CisJc3RydWN0IHJlaXNlcjRf
c3VwZXJfaW5mb19kYXRhICpzYmluZm87CisJc3RydWN0IGpvdXJuYWxfZm9vdGVyICpmb290ZXI7
CisJam5vZGUgKnR4X2hlYWQ7CisKKwlzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShjaC0+c3Vw
ZXIpOworCisJdHhfaGVhZCA9IGxpc3RfZW50cnkoY2gtPnR4X2xpc3QubmV4dCwgam5vZGUsIGNh
cHR1cmVfbGluayk7CisKKwlhc3NlcnQoInphbS00OTMiLCBzYmluZm8gIT0gTlVMTCk7CisJYXNz
ZXJ0KCJ6YW0tNDk0Iiwgc2JpbmZvLT5qb3VybmFsX2hlYWRlciAhPSBOVUxMKTsKKworCWNoZWNr
X21lKCJ6YW0tNjkxIiwgamxvYWQoc2JpbmZvLT5qb3VybmFsX2Zvb3RlcikgPT0gMCk7CisKKwlm
b290ZXIgPSAoc3RydWN0IGpvdXJuYWxfZm9vdGVyICopamRhdGEoc2JpbmZvLT5qb3VybmFsX2Zv
b3Rlcik7CisJYXNzZXJ0KCJ6YW0tNDk1IiwgZm9vdGVyICE9IE5VTEwpOworCisJcHV0X3VuYWxp
Z25lZChjcHVfdG9fbGU2NCgqam5vZGVfZ2V0X2Jsb2NrKHR4X2hlYWQpKSwKKwkJICAgICAgJmZv
b3Rlci0+bGFzdF9mbHVzaGVkX3R4KTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KGNoLT5m
cmVlX2Jsb2NrcyksICZmb290ZXItPmZyZWVfYmxvY2tzKTsKKworCXB1dF91bmFsaWduZWQoY3B1
X3RvX2xlNjQoY2gtPm5yX2ZpbGVzKSwgJmZvb3Rlci0+bnJfZmlsZXMpOworCXB1dF91bmFsaWdu
ZWQoY3B1X3RvX2xlNjQoY2gtPm5leHRfb2lkKSwgJmZvb3Rlci0+bmV4dF9vaWQpOworCisJanJl
bHNlKHNiaW5mby0+am91cm5hbF9mb290ZXIpOworfQorCisvKiB3YW5kZXIgcmVjb3JkIGNhcGFj
aXR5IGRlcGVuZHMgb24gY3VycmVudCBibG9jayBzaXplICovCitzdGF0aWMgaW50IHdhbmRlcl9y
ZWNvcmRfY2FwYWNpdHkoY29uc3Qgc3RydWN0IHN1cGVyX2Jsb2NrICpzdXBlcikKK3sKKwlyZXR1
cm4gKHN1cGVyLT5zX2Jsb2Nrc2l6ZSAtCisJCXNpemVvZihzdHJ1Y3Qgd2FuZGVyX3JlY29yZF9o
ZWFkZXIpKSAvCisJICAgIHNpemVvZihzdHJ1Y3Qgd2FuZGVyX2VudHJ5KTsKK30KKworLyogRmls
bCBmaXJzdCB3YW5kZXIgcmVjb3JkICh0eCBoZWFkKSBpbiBhY2NvcmRhbmNlIHdpdGggc3VwcGxp
ZWQgZ2l2ZW4gZGF0YSAqLworc3RhdGljIHZvaWQgZm9ybWF0X3R4X2hlYWQoc3RydWN0IGNvbW1p
dF9oYW5kbGUgKmNoKQoreworCWpub2RlICp0eF9oZWFkOworCWpub2RlICpuZXh0OworCXN0cnVj
dCB0eF9oZWFkZXIgKmhlYWRlcjsKKworCXR4X2hlYWQgPSBsaXN0X2VudHJ5KGNoLT50eF9saXN0
Lm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOworCWFzc2VydCgiemFtLTY5MiIsICZjaC0+dHhf
bGlzdCAhPSAmdHhfaGVhZC0+Y2FwdHVyZV9saW5rKTsKKworCW5leHQgPSBsaXN0X2VudHJ5KHR4
X2hlYWQtPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5rKTsKKwlpZiAoJmNo
LT50eF9saXN0ID09ICZuZXh0LT5jYXB0dXJlX2xpbmspCisJCW5leHQgPSB0eF9oZWFkOworCisJ
aGVhZGVyID0gKHN0cnVjdCB0eF9oZWFkZXIgKilqZGF0YSh0eF9oZWFkKTsKKworCWFzc2VydCgi
emFtLTQ2MCIsIGhlYWRlciAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS00NjIiLCBjaC0+c3VwZXIt
PnNfYmxvY2tzaXplID49IHNpemVvZihzdHJ1Y3QgdHhfaGVhZGVyKSk7CisKKwltZW1zZXQoamRh
dGEodHhfaGVhZCksIDAsIChzaXplX3QpIGNoLT5zdXBlci0+c19ibG9ja3NpemUpOworCW1lbWNw
eShqZGF0YSh0eF9oZWFkKSwgVFhfSEVBREVSX01BR0lDLCBUWF9IRUFERVJfTUFHSUNfU0laRSk7
CisKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTMyKGNoLT50eF9zaXplKSwgJmhlYWRlci0+dG90
YWwpOworCXB1dF91bmFsaWduZWQoY3B1X3RvX2xlNjQoZ2V0X3N1cGVyX3ByaXZhdGUoY2gtPnN1
cGVyKS0+bGFzdF9jb21taXR0ZWRfdHgpLAorCQkgICAgICAmaGVhZGVyLT5wcmV2X3R4KTsKKwlw
dXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KCpqbm9kZV9nZXRfYmxvY2sobmV4dCkpLCAmaGVhZGVy
LT5uZXh0X2Jsb2NrKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KGNoLT5mcmVlX2Jsb2Nr
cyksICZoZWFkZXItPmZyZWVfYmxvY2tzKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KGNo
LT5ucl9maWxlcyksICZoZWFkZXItPm5yX2ZpbGVzKTsKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19s
ZTY0KGNoLT5uZXh0X29pZCksICZoZWFkZXItPm5leHRfb2lkKTsKK30KKworLyogcHJlcGFyZSBv
cmRpbmFyeSB3YW5kZXIgcmVjb3JkIGJsb2NrIChmaWxsIGFsbCBzZXJ2aWNlIGZpZWxkcykgKi8K
K3N0YXRpYyB2b2lkCitmb3JtYXRfd2FuZGVyX3JlY29yZChzdHJ1Y3QgY29tbWl0X2hhbmRsZSAq
Y2gsIGpub2RlICpub2RlLCBfX3UzMiBzZXJpYWwpCit7CisJc3RydWN0IHdhbmRlcl9yZWNvcmRf
aGVhZGVyICpMUkg7CisJam5vZGUgKm5leHQ7CisKKwlhc3NlcnQoInphbS00NjQiLCBub2RlICE9
IE5VTEwpOworCisJTFJIID0gKHN0cnVjdCB3YW5kZXJfcmVjb3JkX2hlYWRlciAqKWpkYXRhKG5v
ZGUpOworCW5leHQgPSBsaXN0X2VudHJ5KG5vZGUtPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwg
Y2FwdHVyZV9saW5rKTsKKworCWlmICgmY2gtPnR4X2xpc3QgPT0gJm5leHQtPmNhcHR1cmVfbGlu
aykKKwkJbmV4dCA9IGxpc3RfZW50cnkoY2gtPnR4X2xpc3QubmV4dCwgam5vZGUsIGNhcHR1cmVf
bGluayk7CisKKwlhc3NlcnQoInphbS00NjUiLCBMUkggIT0gTlVMTCk7CisJYXNzZXJ0KCJ6YW0t
NDYzIiwKKwkgICAgICAgY2gtPnN1cGVyLT5zX2Jsb2Nrc2l6ZSA+IHNpemVvZihzdHJ1Y3Qgd2Fu
ZGVyX3JlY29yZF9oZWFkZXIpKTsKKworCW1lbXNldChqZGF0YShub2RlKSwgMCwgKHNpemVfdCkg
Y2gtPnN1cGVyLT5zX2Jsb2Nrc2l6ZSk7CisJbWVtY3B5KGpkYXRhKG5vZGUpLCBXQU5ERVJfUkVD
T1JEX01BR0lDLCBXQU5ERVJfUkVDT1JEX01BR0lDX1NJWkUpOworCisJcHV0X3VuYWxpZ25lZChj
cHVfdG9fbGUzMihjaC0+dHhfc2l6ZSksICZMUkgtPnRvdGFsKTsKKwlwdXRfdW5hbGlnbmVkKGNw
dV90b19sZTMyKHNlcmlhbCksICZMUkgtPnNlcmlhbCk7CisJcHV0X3VuYWxpZ25lZChjcHVfdG9f
bGU2NCgqam5vZGVfZ2V0X2Jsb2NrKG5leHQpKSwgJkxSSC0+bmV4dF9ibG9jayk7Cit9CisKKy8q
IGFkZCBvbmUgd2FuZGVyZWQgbWFwIGVudHJ5IHRvIGZvcm1hdHRlZCB3YW5kZXIgcmVjb3JkICov
CitzdGF0aWMgdm9pZAorc3RvcmVfZW50cnkoam5vZGUgKiBub2RlLCBpbnQgaW5kZXgsIGNvbnN0
IHJlaXNlcjRfYmxvY2tfbnIgKiBhLAorCSAgICBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogYikK
K3sKKwljaGFyICpkYXRhOworCXN0cnVjdCB3YW5kZXJfZW50cnkgKnBhaXJzOworCisJZGF0YSA9
IGpkYXRhKG5vZGUpOworCWFzc2VydCgiemFtLTQ1MSIsIGRhdGEgIT0gTlVMTCk7CisKKwlwYWly
cyA9CisJICAgIChzdHJ1Y3Qgd2FuZGVyX2VudHJ5ICopKGRhdGEgKyBzaXplb2Yoc3RydWN0IHdh
bmRlcl9yZWNvcmRfaGVhZGVyKSk7CisKKwlwdXRfdW5hbGlnbmVkKGNwdV90b19sZTY0KCphKSwg
JnBhaXJzW2luZGV4XS5vcmlnaW5hbCk7CisJcHV0X3VuYWxpZ25lZChjcHVfdG9fbGU2NCgqYiks
ICZwYWlyc1tpbmRleF0ud2FuZGVyZWQpOworfQorCisvKiBjdXJyZW50bHksIHdhbmRlciByZWNv
cmRzIGNvbnRhaW5zIGNvbnRhaW4gb25seSB3YW5kZXJlZCBtYXAsIHdoaWNoIGRlcGVuZCBvbgor
ICAgb3ZlcndyaXRlIHNldCBzaXplICovCitzdGF0aWMgdm9pZCBnZXRfdHhfc2l6ZShzdHJ1Y3Qg
Y29tbWl0X2hhbmRsZSAqY2gpCit7CisJYXNzZXJ0KCJ6YW0tNDQwIiwgY2gtPm92ZXJ3cml0ZV9z
ZXRfc2l6ZSAhPSAwKTsKKwlhc3NlcnQoInphbS02OTUiLCBjaC0+dHhfc2l6ZSA9PSAwKTsKKwor
CS8qIGNvdW50IGFsbCBvcmRpbmFyeSB3YW5kZXIgcmVjb3JkcworCSAgICg8b3ZlcndyaXRlX3Nl
dF9zaXplPiAtIDEpIC8gPHdhbmRlcl9yZWNvcmRfY2FwYWNpdHk+ICsgMSBhbmQgYWRkIG9uZQor
CSAgIGZvciB0eCBoZWFkIGJsb2NrICovCisJY2gtPnR4X3NpemUgPQorCSAgICAoY2gtPm92ZXJ3
cml0ZV9zZXRfc2l6ZSAtIDEpIC8gd2FuZGVyX3JlY29yZF9jYXBhY2l0eShjaC0+c3VwZXIpICsK
KwkgICAgMjsKK30KKworLyogQSBzcGVjaWFsIHN0cnVjdHVyZSBmb3IgdXNpbmcgaW4gc3RvcmVf
d21hcF9hY3RvcigpIGZvciBzYXZpbmcgaXRzIHN0YXRlCisgICBiZXR3ZWVuIGNhbGxzICovCitz
dHJ1Y3Qgc3RvcmVfd21hcF9wYXJhbXMgeworCWpub2RlICpjdXI7CQkvKiBqbm9kZSBvZiBjdXJy
ZW50IHdhbmRlciByZWNvcmQgdG8gZmlsbCAqLworCWludCBpZHg7CQkvKiBmcmVlIGVsZW1lbnQg
aW5kZXggaW4gd2FuZGVyIHJlY29yZCAgKi8KKwlpbnQgY2FwYWNpdHk7CQkvKiBjYXBhY2l0eSAg
Ki8KKworI2lmIFJFSVNFUjRfREVCVUcKKwlzdHJ1Y3QgbGlzdF9oZWFkICp0eF9saXN0OworI2Vu
ZGlmCit9OworCisvKiBhbiBhY3RvciBmb3IgdXNlIGluIGJsb2NrbnJfc2V0X2l0ZXJhdG9yIHJv
dXRpbmUgd2hpY2ggcG9wdWxhdGVzIHRoZSBsaXN0CisgICBvZiBwcmUtZm9ybWF0dGVkIHdhbmRl
ciByZWNvcmRzIGJ5IHdhbmRlcmVkIG1hcCBpbmZvICovCitzdGF0aWMgaW50CitzdG9yZV93bWFw
X2FjdG9yKHR4bl9hdG9tICogYXRvbSBVTlVTRURfQVJHLCBjb25zdCByZWlzZXI0X2Jsb2NrX25y
ICogYSwKKwkJIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBiLCB2b2lkICpkYXRhKQoreworCXN0
cnVjdCBzdG9yZV93bWFwX3BhcmFtcyAqcGFyYW1zID0gZGF0YTsKKworCWlmIChwYXJhbXMtPmlk
eCA+PSBwYXJhbXMtPmNhcGFjaXR5KSB7CisJCS8qIGEgbmV3IHdhbmRlciByZWNvcmQgc2hvdWxk
IGJlIHRha2VuIGZyb20gdGhlIHR4X2xpc3QgKi8KKwkJcGFyYW1zLT5jdXIgPSBsaXN0X2VudHJ5
KHBhcmFtcy0+Y3VyLT5jYXB0dXJlX2xpbmsubmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJ
CWFzc2VydCgiemFtLTQ1NCIsCisJCSAgICAgICBwYXJhbXMtPnR4X2xpc3QgIT0gJnBhcmFtcy0+
Y3VyLT5jYXB0dXJlX2xpbmspOworCisJCXBhcmFtcy0+aWR4ID0gMDsKKwl9CisKKwlzdG9yZV9l
bnRyeShwYXJhbXMtPmN1ciwgcGFyYW1zLT5pZHgsIGEsIGIpOworCXBhcmFtcy0+aWR4Kys7CisK
KwlyZXR1cm4gMDsKK30KKworLyogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYWZ0ZXIgUmVsb2Nh
dGUgc2V0IGdldHMgd3JpdHRlbiB0byBkaXNrLCBPdmVyd3JpdGUKKyAgIHNldCBpcyB3cml0dGVu
IHRvIHdhbmRlcmVkIGxvY2F0aW9ucyBhbmQgYWxsIHdhbmRlciByZWNvcmRzIGFyZSB3cml0dGVu
CisgICBhbHNvLiBVcGRhdGVkIGpvdXJuYWwgaGVhZGVyIGJsb2NrcyBjb250YWlucyBhIHBvaW50
ZXIgKGJsb2NrIG51bWJlcikgdG8KKyAgIGZpcnN0IHdhbmRlciByZWNvcmQgb2YgdGhlIGp1c3Qg
d3JpdHRlbiB0cmFuc2FjdGlvbiAqLworc3RhdGljIGludCB1cGRhdGVfam91cm5hbF9oZWFkZXIo
c3RydWN0IGNvbW1pdF9oYW5kbGUgKmNoKQoreworCXN0cnVjdCByZWlzZXI0X3N1cGVyX2luZm9f
ZGF0YSAqc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY2gtPnN1cGVyKTsKKwlqbm9kZSAqamgg
PSBzYmluZm8tPmpvdXJuYWxfaGVhZGVyOworCWpub2RlICpoZWFkID0gbGlzdF9lbnRyeShjaC0+
dHhfbGlzdC5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5rKTsKKwlpbnQgcmV0OworCisJZm9ybWF0
X2pvdXJuYWxfaGVhZGVyKGNoKTsKKworCXJldCA9IHdyaXRlX2pub2Rlc190b19kaXNrX2V4dGVu
dChqaCwgMSwgam5vZGVfZ2V0X2Jsb2NrKGpoKSwgTlVMTCwKKwkJCQkJICBXUklURU9VVF9GTFVT
SF9GVUEpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKiBibGtfcnVuX2FkZHJlc3Nf
c3BhY2Uoc2JpbmZvLT5mYWtlLT5pX21hcHBpbmcpOworCSAqIGJsa19ydW5fcXVldWVzKCk7ICov
CisKKwlyZXQgPSBqd2FpdF9pbyhqaCwgV1JJVEUpOworCisJaWYgKHJldCkKKwkJcmV0dXJuIHJl
dDsKKworCXNiaW5mby0+bGFzdF9jb21taXR0ZWRfdHggPSAqam5vZGVfZ2V0X2Jsb2NrKGhlYWQp
OworCisJcmV0dXJuIDA7Cit9CisKKy8qIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIHdy
aXRlLWJhY2sgaXMgZmluaXNoZWQuIFdlIHVwZGF0ZSBqb3VybmFsCisgICBmb290ZXIgYmxvY2sg
YW5kIGZyZWUgYmxvY2tzIHdoaWNoIHdlcmUgb2NjdXBpZWQgYnkgd2FuZGVyZWQgYmxvY2tzIGFu
ZAorICAgdHJhbnNhY3Rpb24gd2FuZGVyIHJlY29yZHMgKi8KK3N0YXRpYyBpbnQgdXBkYXRlX2pv
dXJuYWxfZm9vdGVyKHN0cnVjdCBjb21taXRfaGFuZGxlICpjaCkKK3sKKwlyZWlzZXI0X3N1cGVy
X2luZm9fZGF0YSAqc2JpbmZvID0gZ2V0X3N1cGVyX3ByaXZhdGUoY2gtPnN1cGVyKTsKKworCWpu
b2RlICpqZiA9IHNiaW5mby0+am91cm5hbF9mb290ZXI7CisKKwlpbnQgcmV0OworCisJZm9ybWF0
X2pvdXJuYWxfZm9vdGVyKGNoKTsKKworCXJldCA9IHdyaXRlX2pub2Rlc190b19kaXNrX2V4dGVu
dChqZiwgMSwgam5vZGVfZ2V0X2Jsb2NrKGpmKSwgTlVMTCwKKwkJCQkJICBXUklURU9VVF9GTFVT
SF9GVUEpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKiBibGtfcnVuX2FkZHJlc3Nf
c3BhY2Uoc2JpbmZvLT5mYWtlLT5pX21hcHBpbmcpOworCSAqIGJsa19ydW5fcXVldWUoKTsgKi8K
KworCXJldCA9IGp3YWl0X2lvKGpmLCBXUklURSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsK
KworCXJldHVybiAwOworfQorCisvKiBmcmVlIGJsb2NrIG51bWJlcnMgb2Ygd2FuZGVyIHJlY29y
ZHMgb2YgYWxyZWFkeSB3cml0dGVuIGluIHBsYWNlIHRyYW5zYWN0aW9uICovCitzdGF0aWMgdm9p
ZCBkZWFsbG9jX3R4X2xpc3Qoc3RydWN0IGNvbW1pdF9oYW5kbGUgKmNoKQoreworCXdoaWxlICgh
bGlzdF9lbXB0eSgmY2gtPnR4X2xpc3QpKSB7CisJCWpub2RlICpjdXIgPSBsaXN0X2VudHJ5KGNo
LT50eF9saXN0Lm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOworCQlsaXN0X2RlbCgmY3VyLT5j
YXB0dXJlX2xpbmspOworCQlPTl9ERUJVRyhJTklUX0xJU1RfSEVBRCgmY3VyLT5jYXB0dXJlX2xp
bmspKTsKKwkJcmVpc2VyNF9kZWFsbG9jX2Jsb2NrKGpub2RlX2dldF9ibG9jayhjdXIpLCAwLAor
CQkJCSAgICAgIEJBX0RFRkVSIHwgQkFfRk9STUFUVEVEKTsKKworCQl1bnBpbl9qbm9kZV9kYXRh
KGN1cik7CisJCXJlaXNlcjRfZHJvcF9pb19oZWFkKGN1cik7CisJfQorfQorCisvKiBBbiBhY3Rv
ciBmb3IgdXNlIGluIGJsb2NrX25yX2l0ZXJhdG9yKCkgcm91dGluZSB3aGljaCBmcmVlcyB3YW5k
ZXJlZCBibG9ja3MKKyAgIGZyb20gYXRvbSdzIG92ZXJ3cml0ZSBzZXQuICovCitzdGF0aWMgaW50
CitkZWFsbG9jX3dtYXBfYWN0b3IodHhuX2F0b20gKiBhdG9tIFVOVVNFRF9BUkcsCisJCSAgIGNv
bnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBhIFVOVVNFRF9BUkcsCisJCSAgIGNvbnN0IHJlaXNlcjRf
YmxvY2tfbnIgKiBiLCB2b2lkICpkYXRhIFVOVVNFRF9BUkcpCit7CisKKwlhc3NlcnQoInphbS00
OTkiLCBiICE9IE5VTEwpOworCWFzc2VydCgiemFtLTUwMCIsICpiICE9IDApOworCWFzc2VydCgi
emFtLTUwMSIsICFyZWlzZXI0X2Jsb2NrbnJfaXNfZmFrZShiKSk7CisKKwlyZWlzZXI0X2RlYWxs
b2NfYmxvY2soYiwgMCwgQkFfREVGRVIgfCBCQV9GT1JNQVRURUQpOworCXJldHVybiAwOworfQor
CisvKiBmcmVlIHdhbmRlcmVkIGJsb2NrIGxvY2F0aW9ucyBvZiBhbHJlYWR5IHdyaXR0ZW4gaW4g
cGxhY2UgdHJhbnNhY3Rpb24gKi8KK3N0YXRpYyB2b2lkIGRlYWxsb2Nfd21hcChzdHJ1Y3QgY29t
bWl0X2hhbmRsZSAqY2gpCit7CisJYXNzZXJ0KCJ6YW0tNjk2IiwgY2gtPmF0b20gIT0gTlVMTCk7
CisKKwlibG9ja25yX3NldF9pdGVyYXRvcihjaC0+YXRvbSwgJmNoLT5hdG9tLT53YW5kZXJlZF9t
YXAsCisJCQkgICAgIGRlYWxsb2Nfd21hcF9hY3RvciwgTlVMTCwgMSk7Cit9CisKKy8qIGhlbHBl
ciBmdW5jdGlvbiBmb3IgYWxsb2Mgd2FuZGVyZWQgYmxvY2tzLCB3aGljaCByZWZpbGwgc2V0IG9m
IGJsb2NrCisgICBudW1iZXJzIG5lZWRlZCBmb3Igd2FuZGVyZWQgYmxvY2tzICAqLworc3RhdGlj
IGludAorZ2V0X21vcmVfd2FuZGVyZWRfYmxvY2tzKGludCBjb3VudCwgcmVpc2VyNF9ibG9ja19u
ciAqIHN0YXJ0LCBpbnQgKmxlbikKK3sKKwlyZWlzZXI0X2Jsb2NrbnJfaGludCBoaW50OworCWlu
dCByZXQ7CisKKwlyZWlzZXI0X2Jsb2NrX25yIHdpZGVfbGVuID0gY291bnQ7CisKKwkvKiBGSVhN
RS1aQU06IEEgc3BlY2lhbCBwb2xpY3kgbmVlZGVkIGZvciBhbGxvY2F0aW9uIG9mIHdhbmRlcmVk
IGJsb2NrcworCSAgIFpBTS1GSVhNRS1IQU5TOiB5ZXMsIHdoYXQgaGFwcGVuZWQgdG8gb3VyIGRp
c2N1c3Npb24gb2YgdXNpbmcgYSBmaXhlZAorCSAgIHJlc2VydmVkIGFsbG9jYXRpb24gYXJlYSBz
byBhcyB0byBnZXQgdGhlIGJlc3QgcXVhbGl0aWVzIG9mIGZpeGVkCisJICAgam91cm5hbHM/ICov
CisJcmVpc2VyNF9ibG9ja25yX2hpbnRfaW5pdCgmaGludCk7CisJaGludC5ibG9ja19zdGFnZSA9
IEJMT0NLX0dSQUJCRUQ7CisKKwlyZXQgPSByZWlzZXI0X2FsbG9jX2Jsb2NrcygmaGludCwgc3Rh
cnQsICZ3aWRlX2xlbiwKKwkJCQkgICBCQV9GT1JNQVRURUQgfCBCQV9VU0VfREVGQVVMVF9TRUFS
Q0hfU1RBUlQpOworCSpsZW4gPSAoaW50KXdpZGVfbGVuOworCisJcmV0dXJuIHJldDsKK30KKwor
LyoKKyAqIHJvbGwgYmFjayBjaGFuZ2VzIG1hZGUgYmVmb3JlIGlzc3VpbmcgQklPIGluIHRoZSBj
YXNlIG9mIElPIGVycm9yLgorICovCitzdGF0aWMgdm9pZCB1bmRvX2JpbyhzdHJ1Y3QgYmlvICpi
aW8pCit7CisJc3RydWN0IGJpb192ZWMgKmJ2ZWM7CisJc3RydWN0IGJ2ZWNfaXRlcl9hbGwgaXRl
cl9hbGw7CisKKwliaW9fZm9yX2VhY2hfc2VnbWVudF9hbGwoYnZlYywgYmlvLCBpdGVyX2FsbCkg
eworCQlzdHJ1Y3QgcGFnZSAqcGc7CisJCWpub2RlICpub2RlOworCisJCXBnID0gYnZlYy0+YnZf
cGFnZTsKKwkJZW5kX3BhZ2Vfd3JpdGViYWNrKHBnKTsKKwkJbm9kZSA9IGpwcml2YXRlKHBnKTsK
KwkJc3Bpbl9sb2NrX2pub2RlKG5vZGUpOworCQlKRl9DTFIobm9kZSwgSk5PREVfV1JJVEVCQUNL
KTsKKwkJSkZfU0VUKG5vZGUsIEpOT0RFX0RJUlRZKTsKKwkJc3Bpbl91bmxvY2tfam5vZGUobm9k
ZSk7CisJfQorCWJpb19wdXQoYmlvKTsKK30KKworLyogcHV0IG92ZXJ3cml0ZSBzZXQgYmFjayB0
byBhdG9tJ3MgY2xlYW4gbGlzdCAqLworc3RhdGljIHZvaWQgcHV0X292ZXJ3cml0ZV9zZXQoc3Ry
dWN0IGNvbW1pdF9oYW5kbGUgKmNoKQoreworCWpub2RlICpjdXI7CisKKwlsaXN0X2Zvcl9lYWNo
X2VudHJ5KGN1ciwgY2gtPm92ZXJ3cml0ZV9zZXQsIGNhcHR1cmVfbGluaykKKwkJanJlbHNlX3Rh
aWwoY3VyKTsKK30KKworLyogQ291bnQgb3ZlcndyaXRlIHNldCBzaXplLCBncmFiIGRpc2sgc3Bh
Y2UgZm9yIHdhbmRlcmVkIGJsb2NrcyBhbGxvY2F0aW9uLgorICAgU2luY2Ugd2UgaGF2ZSBhIHNl
cGFyYXRlIGxpc3QgZm9yIGF0b20ncyBvdmVyd3JpdGUgc2V0IHdlIGp1c3Qgc2NhbiB0aGUgbGlz
dCwKKyAgIGNvdW50IGJpdG1hcCBhbmQgb3RoZXIgbm90IGxlYWYgbm9kZXMgd2hpY2ggd2FuZGVy
ZWQgYmxvY2tzIGFsbG9jYXRpb24gd2UKKyAgIGhhdmUgdG8gZ3JhYiBzcGFjZSBmb3IuICovCitz
dGF0aWMgaW50IGdldF9vdmVyd3JpdGVfc2V0KHN0cnVjdCBjb21taXRfaGFuZGxlICpjaCkKK3sK
KwlpbnQgcmV0OworCWpub2RlICpjdXI7CisJX191NjQgbnJfbm90X2xlYXZlcyA9IDA7CisjaWYg
UkVJU0VSNF9ERUJVRworCV9fdTY0IG5yX2Zvcm1hdHRlZF9sZWF2ZXMgPSAwOworCV9fdTY0IG5y
X3VuZm9ybWF0dGVkX2xlYXZlcyA9IDA7CisjZW5kaWYKKworCWFzc2VydCgiemFtLTY5NyIsIGNo
LT5vdmVyd3JpdGVfc2V0X3NpemUgPT0gMCk7CisKKwljaC0+b3ZlcndyaXRlX3NldCA9IEFUT01f
T1ZSV1JfTElTVChjaC0+YXRvbSk7CisJY3VyID0gbGlzdF9lbnRyeShjaC0+b3ZlcndyaXRlX3Nl
dC0+bmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisKKwl3aGlsZSAoY2gtPm92ZXJ3cml0ZV9z
ZXQgIT0gJmN1ci0+Y2FwdHVyZV9saW5rKSB7CisJCWpub2RlICpuZXh0ID0gbGlzdF9lbnRyeShj
dXItPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5rKTsKKworCQkvKiBDb3Vu
dCBiaXRtYXAgbG9ja3MgZm9yIGdldHRpbmcgY29ycmVjdCBzdGF0aXN0aWNzIHdoYXQgbnVtYmVy
CisJCSAqIG9mIGJsb2NrcyB3ZXJlIGNsZWFyZWQgYnkgdGhlIHRyYW5zYWN0aW9uIGNvbW1pdC4g
Ki8KKwkJaWYgKGpub2RlX2dldF90eXBlKGN1cikgPT0gSk5PREVfQklUTUFQKQorCQkJY2gtPm5y
X2JpdG1hcCsrOworCisJCWFzc2VydCgiemFtLTkzOSIsIEpGX0lTU0VUKGN1ciwgSk5PREVfT1ZS
V1IpCisJCSAgICAgICB8fCBqbm9kZV9nZXRfdHlwZShjdXIpID09IEpOT0RFX0JJVE1BUCk7CisK
KwkJaWYgKGpub2RlX2lzX3pub2RlKGN1cikgJiYgem5vZGVfYWJvdmVfcm9vdChKWk5PREUoY3Vy
KSkpIHsKKwkJCS8qIHdlIHJlcGxhY2UgZmFrZSB6bm9kZSBieSBhbm90aGVyIChyZWFsKQorCQkJ
ICAgem5vZGUgd2hpY2ggaXMgc3VnZ2VzdGVkIGJ5IGRpc2tfbGF5b3V0CisJCQkgICBwbHVnaW4g
Ki8KKworCQkJLyogRklYTUU6IGl0IGxvb2tzIGxpa2UgZmFrZSB6bm9kZSBzaG91bGQgYmUKKwkJ
CSAgIHJlcGxhY2VkIGJ5IGpub2RlIHN1cHBsaWVkIGJ5CisJCQkgICBkaXNrX2xheW91dC4gKi8K
KworCQkJc3RydWN0IHN1cGVyX2Jsb2NrICpzID0gcmVpc2VyNF9nZXRfY3VycmVudF9zYigpOwor
CQkJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbyA9CisJCQkgICAgZ2V0X2N1cnJlbnRf
c3VwZXJfcHJpdmF0ZSgpOworCisJCQlpZiAoc2JpbmZvLT5kZl9wbHVnLT5sb2dfc3VwZXIpIHsK
KwkJCQlqbm9kZSAqc2ogPSBzYmluZm8tPmRmX3BsdWctPmxvZ19zdXBlcihzKTsKKworCQkJCWFz
c2VydCgiemFtLTU5MyIsIHNqICE9IE5VTEwpOworCisJCQkJaWYgKElTX0VSUihzaikpCisJCQkJ
CXJldHVybiBQVFJfRVJSKHNqKTsKKworCQkJCXNwaW5fbG9ja19qbm9kZShzaik7CisJCQkJSkZf
U0VUKHNqLCBKTk9ERV9PVlJXUik7CisJCQkJaW5zZXJ0X2ludG9fYXRvbV9vdnJ3cl9saXN0KGNo
LT5hdG9tLCBzaik7CisJCQkJc3Bpbl91bmxvY2tfam5vZGUoc2opOworCisJCQkJLyogamxvYWQg
aXQgYXMgdGhlIHJlc3Qgb2Ygb3ZlcndyaXRlIHNldCAqLworCQkJCWpsb2FkX2dmcChzaiwgcmVp
c2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCksIDApOworCisJCQkJY2gtPm92ZXJ3cml0ZV9zZXRfc2l6
ZSsrOworCQkJfQorCQkJc3Bpbl9sb2NrX2pub2RlKGN1cik7CisJCQlyZWlzZXI0X3VuY2FwdHVy
ZV9ibG9jayhjdXIpOworCQkJanB1dChjdXIpOworCisJCX0gZWxzZSB7CisJCQlpbnQgcmV0Owor
CQkJY2gtPm92ZXJ3cml0ZV9zZXRfc2l6ZSsrOworCQkJcmV0ID0gamxvYWRfZ2ZwKGN1ciwgcmVp
c2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCksIDApOworCQkJaWYgKHJldCkKKwkJCQlyZWlzZXI0X3Bh
bmljKCJ6YW0tNzgzIiwKKwkJCQkJICAgICAgImNhbm5vdCBsb2FkIGUtZmx1c2hlZCBqbm9kZSBi
YWNrIChyZXQgPSAlZClcbiIsCisJCQkJCSAgICAgIHJldCk7CisJCX0KKworCQkvKiBDb3VudCBu
b3QgbGVhdmVzIGhlcmUgYmVjYXVzZSB3ZSBoYXZlIHRvIGdyYWIgZGlzayBzcGFjZQorCQkgKiBm
b3Igd2FuZGVyZWQgYmxvY2tzLiBUaGV5IHdlcmUgbm90IGNvdW50ZWQgYXMgImZsdXNoCisJCSAq
IHJlc2VydmVkIi4gQ291bnRpbmcgc2hvdWxkIGJlIGRvbmUgX2FmdGVyXyBub2RlcyBhcmUgcGlu
bmVkCisJCSAqIGludG8gbWVtb3J5IGJ5IGpsb2FkKCkuICovCisJCWlmICgham5vZGVfaXNfbGVh
ZihjdXIpKQorCQkJbnJfbm90X2xlYXZlcysrOworCQllbHNlIHsKKyNpZiBSRUlTRVI0X0RFQlVH
CisJCQkvKiBhdCB0aGlzIHBvaW50IEBjdXIgZWl0aGVyIGhhcyBKTk9ERV9GTFVTSF9SRVNFUlZF
RAorCQkJICogb3IgaXMgZWZsdXNoZWQuIExvY2tpbmcgaXMgbm90IHN0cm9uZyBlbm91Z2ggdG8K
KwkJCSAqIHdyaXRlIGFuIGFzc2VydGlvbiBjaGVja2luZyBmb3IgdGhpcy4gKi8KKwkJCWlmIChq
bm9kZV9pc196bm9kZShjdXIpKQorCQkJCW5yX2Zvcm1hdHRlZF9sZWF2ZXMrKzsKKwkJCWVsc2UK
KwkJCQlucl91bmZvcm1hdHRlZF9sZWF2ZXMrKzsKKyNlbmRpZgorCQkJSkZfQ0xSKGN1ciwgSk5P
REVfRkxVU0hfUkVTRVJWRUQpOworCQl9CisKKwkJY3VyID0gbmV4dDsKKwl9CisKKwkvKiBHcmFi
IHNwYWNlIGZvciB3cml0aW5nICh3YW5kZXJlZCBibG9ja3MpIG9mIG5vdCBsZWF2ZXMgZm91bmQg
aW4KKwkgKiBvdmVyd3JpdGUgc2V0LiAqLworCXJldCA9IHJlaXNlcjRfZ3JhYl9zcGFjZV9mb3Jj
ZShucl9ub3RfbGVhdmVzLCBCQV9SRVNFUlZFRCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsK
KworCS8qIERpc2sgc3BhY2UgZm9yIGFsbG9jYXRpb24gb2Ygd2FuZGVyZWQgYmxvY2tzIG9mIGxl
YWYgbm9kZXMgYWxyZWFkeQorCSAqIHJlc2VydmVkIGFzICJmbHVzaCByZXNlcnZlZCIsIG1vdmUg
aXQgdG8gZ3JhYmJlZCBzcGFjZSBjb3VudGVyLiAqLworCXNwaW5fbG9ja19hdG9tKGNoLT5hdG9t
KTsKKwlhc3NlcnQoInphbS05NDAiLAorCSAgICAgICBucl9mb3JtYXR0ZWRfbGVhdmVzICsgbnJf
dW5mb3JtYXR0ZWRfbGVhdmVzIDw9CisJICAgICAgIGNoLT5hdG9tLT5mbHVzaF9yZXNlcnZlZCk7
CisJZmx1c2hfcmVzZXJ2ZWQyZ3JhYmJlZChjaC0+YXRvbSwgY2gtPmF0b20tPmZsdXNoX3Jlc2Vy
dmVkKTsKKwlzcGluX3VubG9ja19hdG9tKGNoLT5hdG9tKTsKKworCXJldHVybiBjaC0+b3Zlcndy
aXRlX3NldF9zaXplOworfQorCisvKioKKyAqIHdyaXRlX2pub2Rlc190b19kaXNrX2V4dGVudCAt
IHN1Ym1pdCB3cml0ZSByZXF1ZXN0CisgKiBAaGVhZDoKKyAqIEBmaXJzdDogZmlyc3Qgam5vZGUg
b2YgdGhlIGxpc3QKKyAqIEBucjogbnVtYmVyIG9mIGpub2RlcyBvbiB0aGUgbGlzdAorICogQGJs
b2NrX3A6CisgKiBAZnE6CisgKiBAZmxhZ3M6IHVzZWQgdG8gZGVjaWRlIHdoZXRoZXIgcGFnZSBp
cyB0byBnZXQgUEdfcmVjbGFpbSBmbGFnCisgKgorICogU3VibWl0cyBhIHdyaXRlIHJlcXVlc3Qg
Zm9yIEBuciBqbm9kZXMgYmVnaW5uaW5nIGZyb20gdGhlIEBmaXJzdCwgb3RoZXIKKyAqIGpub2Rl
cyBhcmUgYWZ0ZXIgdGhlIEBmaXJzdCBvbiB0aGUgZG91YmxlLWxpbmtlZCAiY2FwdHVyZSIgbGlz
dC4gIEFsbCBqbm9kZXMKKyAqIHdpbGwgYmUgd3JpdHRlbiB0byB0aGUgZGlzayByZWdpb24gb2Yg
QG5yIGJsb2NrcyBzdGFydGluZyB3aXRoIEBibG9ja19wIGJsb2NrCisgKiBudW1iZXIuICBJZiBA
ZnEgaXMgbm90IE5VTEwgaXQgbWVhbnMgdGhhdCB3YWl0aW5nIGZvciBpL28gY29tcGxldGlvbiB3
aWxsIGJlCisgKiBkb25lIG1vcmUgZWZmaWNpZW50bHkgYnkgdXNpbmcgZmx1c2hfcXVldWVfdCBv
YmplY3RzLgorICogVGhpcyBmdW5jdGlvbiBpcyB0aGUgb25lIHdoaWNoIHdyaXRlcyBsaXN0IG9m
IGpub2RlcyBpbiBiYXRjaCBtb2RlLiBJdCBkb2VzCisgKiBhbGwgbG93LWxldmVsIHRoaW5ncyBh
cyBiaW8gY29uc3RydWN0aW9uIGFuZCBwYWdlIHN0YXRlcyBtYW5pcHVsYXRpb24uCisgKgorICog
WkFNLUZJWE1FLUhBTlM6IGJyaWVmIG1lIG9uIHdoeSB0aGlzIGZ1bmN0aW9uIGV4aXN0cywgYW5k
IHdoeSBiaW9zIGFyZQorICogYWdncmVnYXRlZCBpbiB0aGlzIGZ1bmN0aW9uIGluc3RlYWQgb2Yg
YmVpbmcgbGVmdCB0byB0aGUgbGF5ZXJzIGJlbG93CisgKgorICogRklYTUU6IFpBTS0+SEFOUzog
V2hhdCBsYXllciBhcmUgeW91IHRhbGtpbmcgYWJvdXQ/IENhbiB5b3UgcG9pbnQgbWUgdG8gdGhh
dD8KKyAqIFdoeSB0aGF0IGxheWVyIG5lZWRlZD8gV2h5IEJJT3MgY2Fubm90IGJlIGNvbnN0cnVj
dGVkIGhlcmU/CisgKi8KK3N0YXRpYyBpbnQgd3JpdGVfam5vZGVzX3RvX2Rpc2tfZXh0ZW50KAor
CWpub2RlICpmaXJzdCwgaW50IG5yLCBjb25zdCByZWlzZXI0X2Jsb2NrX25yICpibG9ja19wLAor
CWZsdXNoX3F1ZXVlX3QgKmZxLCBpbnQgZmxhZ3MpCit7CisJc3RydWN0IHN1cGVyX2Jsb2NrICpz
dXBlciA9IHJlaXNlcjRfZ2V0X2N1cnJlbnRfc2IoKTsKKwlpbnQgb3BfZmxhZ3MgPSAoZmxhZ3Mg
JiBXUklURU9VVF9GTFVTSF9GVUEpID8gUkVRX1BSRUZMVVNIIHwgUkVRX0ZVQSA6IDA7CisJam5v
ZGUgKmN1ciA9IGZpcnN0OworCXJlaXNlcjRfYmxvY2tfbnIgYmxvY2s7CisKKwlhc3NlcnQoInph
bS01NzEiLCBmaXJzdCAhPSBOVUxMKTsKKwlhc3NlcnQoInphbS01NzIiLCBibG9ja19wICE9IE5V
TEwpOworCWFzc2VydCgiemFtLTU3MCIsIG5yID4gMCk7CisKKwlibG9jayA9ICpibG9ja19wOwor
CisJd2hpbGUgKG5yID4gMCkgeworCQlzdHJ1Y3QgYmlvICpiaW87CisJCWludCBucl9ibG9ja3Mg
PSBtaW4obnIsIEJJT19NQVhfUEFHRVMpOworCQlpbnQgaTsKKwkJaW50IG5yX3VzZWQ7CisKKwkJ
YmlvID0gYmlvX2FsbG9jKEdGUF9OT0lPLCBucl9ibG9ja3MpOworCQlpZiAoIWJpbykKKwkJCXJl
dHVybiBSRVRFUlIoLUVOT01FTSk7CisKKwkJYmlvX3NldF9kZXYoYmlvLCBzdXBlci0+c19iZGV2
KTsKKwkJYmlvLT5iaV9pdGVyLmJpX3NlY3RvciA9IGJsb2NrICogKHN1cGVyLT5zX2Jsb2Nrc2l6
ZSA+PiA5KTsKKwkJZm9yIChucl91c2VkID0gMCwgaSA9IDA7IGkgPCBucl9ibG9ja3M7IGkrKykg
eworCQkJc3RydWN0IHBhZ2UgKnBnOworCisJCQlwZyA9IGpub2RlX3BhZ2UoY3VyKTsKKwkJCWFz
c2VydCgiemFtLTU3MyIsIHBnICE9IE5VTEwpOworCisJCQlnZXRfcGFnZShwZyk7CisKKwkJCWxv
Y2tfYW5kX3dhaXRfcGFnZV93cml0ZWJhY2socGcpOworCisJCQlpZiAoIWJpb19hZGRfcGFnZShi
aW8sIHBnLCBzdXBlci0+c19ibG9ja3NpemUsIDApKSB7CisJCQkJLyoKKwkJCQkgKiB1bmRlcmx5
aW5nIGRldmljZSBpcyBzYXRpYXRlZC4gU3RvcCBhZGRpbmcKKwkJCQkgKiBwYWdlcyB0byB0aGUg
YmlvLgorCQkJCSAqLworCQkJCXVubG9ja19wYWdlKHBnKTsKKwkJCQlwdXRfcGFnZShwZyk7CisJ
CQkJYnJlYWs7CisJCQl9CisKKwkJCXNwaW5fbG9ja19qbm9kZShjdXIpOworCQkJYXNzZXJ0KCJu
aWtpdGEtMzE2NiIsCisJCQkgICAgICAgcGctPm1hcHBpbmcgPT0gam5vZGVfZ2V0X21hcHBpbmco
Y3VyKSk7CisJCQlhc3NlcnQoInphbS05MTIiLCAhSkZfSVNTRVQoY3VyLCBKTk9ERV9XUklURUJB
Q0spKTsKKyNpZiBSRUlTRVI0X0RFQlVHCisJCQlzcGluX2xvY2soJmN1ci0+bG9hZCk7CisJCQlh
c3NlcnQoIm5pa2l0YS0zMTY1IiwgIWpub2RlX2lzX3JlbGVhc2FibGUoY3VyKSk7CisJCQlzcGlu
X3VubG9jaygmY3VyLT5sb2FkKTsKKyNlbmRpZgorCQkJSkZfU0VUKGN1ciwgSk5PREVfV1JJVEVC
QUNLKTsKKwkJCUpGX0NMUihjdXIsIEpOT0RFX0RJUlRZKTsKKwkJCU9OX0RFQlVHKGN1ci0+d3Jp
dHRlbisrKTsKKworCQkJYXNzZXJ0KCJlZHdhcmQtMTY0NyIsCisJCQkgICAgICAgZXJnbyhqbm9k
ZV9pc196bm9kZShjdXIpLCBKRl9JU1NFVChjdXIsIEpOT0RFX1BBUlNFRCkpKTsKKwkJCXNwaW5f
dW5sb2NrX2pub2RlKGN1cik7CisJCQkvKgorCQkJICogdXBkYXRlIGNoZWNrc3VtCisJCQkgKi8K
KwkJCWlmIChqbm9kZV9pc196bm9kZShjdXIpKSB7CisJCQkJemxvYWQoSlpOT0RFKGN1cikpOwor
CQkJCWlmIChub2RlX3BsdWdpbl9ieV9ub2RlKEpaTk9ERShjdXIpKS0+Y3N1bSkKKwkJCQkJbm9k
ZV9wbHVnaW5fYnlfbm9kZShKWk5PREUoY3VyKSktPmNzdW0oSlpOT0RFKGN1ciksIDApOworCQkJ
CXpyZWxzZShKWk5PREUoY3VyKSk7CisJCQl9CisJCQlDbGVhclBhZ2VFcnJvcihwZyk7CisJCQlz
ZXRfcGFnZV93cml0ZWJhY2socGcpOworCisJCQlpZiAoZ2V0X2N1cnJlbnRfY29udGV4dCgpLT5l
bnRkKSB7CisJCQkJLyogdGhpcyBpcyBlbnQgdGhyZWFkICovCisJCQkJZW50ZF9jb250ZXh0ICpl
bnQgPSBnZXRfZW50ZF9jb250ZXh0KHN1cGVyKTsKKwkJCQlzdHJ1Y3Qgd2JxICpycSwgKm5leHQ7
CisKKwkJCQlzcGluX2xvY2soJmVudC0+Z3VhcmQpOworCisJCQkJaWYgKHBnID09IGVudC0+Y3Vy
X3JlcXVlc3QtPnBhZ2UpIHsKKwkJCQkJLyoKKwkJCQkJICogZW50ZCBpcyBjYWxsZWQgZm9yIHRo
aXMgcGFnZS4gVGhpcworCQkJCQkgKiByZXF1ZXN0IGlzIG5vdCBpbiB0aCBldG9kbyBsaXN0CisJ
CQkJCSAqLworCQkJCQllbnQtPmN1cl9yZXF1ZXN0LT53cml0dGVuID0gMTsKKwkJCQl9IGVsc2Ug
eworCQkJCQkvKgorCQkJCQkgKiBpZiB3ZSBoYXZlIHdyaXR0ZW4gYSBwYWdlIGZvciB3aGljaCB3
cml0ZXBhZ2UKKwkJCQkJICogaXMgY2FsbGVkIGZvciAtIG1vdmUgcmVxdWVzdCB0byBhbm90aGVy
IGxpc3QuCisJCQkJCSAqLworCQkJCQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocnEsIG5leHQs
ICZlbnQtPnRvZG9fbGlzdCwgbGluaykgeworCQkJCQkJYXNzZXJ0KCIiLCBycS0+bWFnaWMgPT0g
V0JRX01BR0lDKTsKKwkJCQkJCWlmIChwZyA9PSBycS0+cGFnZSkgeworCQkJCQkJCS8qCisJCQkJ
CQkJICogcmVtb3ZlIHJlcXVlc3QgZnJvbQorCQkJCQkJCSAqIGVudGQncyBxdWV1ZSwgYnV0IGRv
CisJCQkJCQkJICogbm90IHdha2UgdXAgYSB0aHJlYWQKKwkJCQkJCQkgKiB3aGljaCBwdXQgdGhp
cworCQkJCQkJCSAqIHJlcXVlc3QKKwkJCQkJCQkgKi8KKwkJCQkJCQlsaXN0X2RlbF9pbml0KCZy
cS0+bGluayk7CisJCQkJCQkJZW50LT5ucl90b2RvX3JlcXMgLS07CisJCQkJCQkJbGlzdF9hZGRf
dGFpbCgmcnEtPmxpbmssICZlbnQtPmRvbmVfbGlzdCk7CisJCQkJCQkJZW50LT5ucl9kb25lX3Jl
cXMgKys7CisJCQkJCQkJcnEtPndyaXR0ZW4gPSAxOworCQkJCQkJCWJyZWFrOworCQkJCQkJfQor
CQkJCQl9CisJCQkJfQorCQkJCXNwaW5fdW5sb2NrKCZlbnQtPmd1YXJkKTsKKwkJCX0KKworCQkJ
Y2xlYXJfcGFnZV9kaXJ0eV9mb3JfaW8ocGcpOworCisJCQl1bmxvY2tfcGFnZShwZyk7CisKKwkJ
CWN1ciA9IGxpc3RfZW50cnkoY3VyLT5jYXB0dXJlX2xpbmsubmV4dCwgam5vZGUsIGNhcHR1cmVf
bGluayk7CisJCQlucl91c2VkKys7CisJCX0KKwkJaWYgKG5yX3VzZWQgPiAwKSB7CisJCQlhc3Nl
cnQoIm5pa2l0YS0zNDUzIiwKKwkJCSAgICAgICBiaW8tPmJpX2l0ZXIuYmlfc2l6ZSA9PSBzdXBl
ci0+c19ibG9ja3NpemUgKiBucl91c2VkKTsKKworCQkJLyogQ2hlY2sgaWYgd2UgYXJlIGFsbG93
ZWQgdG8gd3JpdGUgYXQgYWxsICovCisJCQlpZiAoc2JfcmRvbmx5KHN1cGVyKSkKKwkJCQl1bmRv
X2JpbyhiaW8pOworCQkJZWxzZSB7CisJCQkJYWRkX2ZxX3RvX2JpbyhmcSwgYmlvKTsKKwkJCQli
aW9fZ2V0KGJpbyk7CisJCQkJYmlvX3NldF9vcF9hdHRycyhiaW8sIFdSSVRFLCBvcF9mbGFncyk7
CisJCQkJc3VibWl0X2JpbyhiaW8pOworCQkJCWJpb19wdXQoYmlvKTsKKwkJCX0KKworCQkJYmxv
Y2sgKz0gbnJfdXNlZCAtIDE7CisJCQl1cGRhdGVfYmxvY2tucl9oaW50X2RlZmF1bHQoc3VwZXIs
ICZibG9jayk7CisJCQlibG9jayArPSAxOworCQl9IGVsc2UgeworCQkJYmlvX3B1dChiaW8pOwor
CQl9CisJCW5yIC09IG5yX3VzZWQ7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIFRoaXMgaXMg
YSBwcm9jZWR1cmUgd2hpY2ggcmVjb3ZlcnMgYSBjb250aWd1b3VzIHNlcXVlbmNlcyBvZiBkaXNr
IGJsb2NrCisgICBudW1iZXJzIGluIHRoZSBnaXZlbiBsaXN0IG9mIGotbm9kZXMgYW5kIHN1Ym1p
dHMgd3JpdGUgcmVxdWVzdHMgb24gdGhpcworICAgcGVyLXNlcXVlbmNlIGJhc2lzICovCitpbnQK
K3dyaXRlX2pub2RlX2xpc3Qoc3RydWN0IGxpc3RfaGVhZCAqaGVhZCwgZmx1c2hfcXVldWVfdCAq
ZnEsCisJCSBsb25nICpucl9zdWJtaXR0ZWQsIGludCBmbGFncykKK3sKKwlpbnQgcmV0OworCWpu
b2RlICpiZWcgPSBsaXN0X2VudHJ5KGhlYWQtPm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOwor
CisJd2hpbGUgKGhlYWQgIT0gJmJlZy0+Y2FwdHVyZV9saW5rKSB7CisJCWludCBuciA9IDE7CisJ
CWpub2RlICpjdXIgPSBsaXN0X2VudHJ5KGJlZy0+Y2FwdHVyZV9saW5rLm5leHQsIGpub2RlLCBj
YXB0dXJlX2xpbmspOworCisJCXdoaWxlIChoZWFkICE9ICZjdXItPmNhcHR1cmVfbGluaykgewor
CQkJaWYgKCpqbm9kZV9nZXRfYmxvY2soY3VyKSAhPSAqam5vZGVfZ2V0X2Jsb2NrKGJlZykgKyBu
cikKKwkJCQlicmVhazsKKwkJCSsrbnI7CisJCQljdXIgPSBsaXN0X2VudHJ5KGN1ci0+Y2FwdHVy
ZV9saW5rLm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOworCQl9CisKKwkJcmV0ID0gd3JpdGVf
am5vZGVzX3RvX2Rpc2tfZXh0ZW50KAorCQkJYmVnLCBuciwgam5vZGVfZ2V0X2Jsb2NrKGJlZyks
IGZxLCBmbGFncyk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCisJCWlmIChucl9zdWJt
aXR0ZWQpCisJCQkqbnJfc3VibWl0dGVkICs9IG5yOworCisJCWJlZyA9IGN1cjsKKwl9CisKKwly
ZXR1cm4gMDsKK30KKworLyogYWRkIGdpdmVuIHdhbmRlcmVkIG1hcHBpbmcgdG8gYXRvbSdzIHdh
bmRlcmVkIG1hcCAqLworc3RhdGljIGludAorYWRkX3JlZ2lvbl90b193bWFwKGpub2RlICogY3Vy
LCBpbnQgbGVuLCBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogYmxvY2tfcCkKK3sKKwlpbnQgcmV0
OworCWJsb2NrbnJfc2V0X2VudHJ5ICpuZXdfYnNlcCA9IE5VTEw7CisJcmVpc2VyNF9ibG9ja19u
ciBibG9jazsKKworCXR4bl9hdG9tICphdG9tOworCisJYXNzZXJ0KCJ6YW0tNTY4IiwgYmxvY2tf
cCAhPSBOVUxMKTsKKwlibG9jayA9ICpibG9ja19wOworCWFzc2VydCgiemFtLTU2OSIsIGxlbiA+
IDApOworCisJd2hpbGUgKChsZW4tLSkgPiAwKSB7CisJCWRvIHsKKwkJCWF0b20gPSBnZXRfY3Vy
cmVudF9hdG9tX2xvY2tlZCgpOworCQkJYXNzZXJ0KCJ6YW0tNTM2IiwKKwkJCSAgICAgICAhcmVp
c2VyNF9ibG9ja25yX2lzX2Zha2Uoam5vZGVfZ2V0X2Jsb2NrKGN1cikpKTsKKwkJCXJldCA9CisJ
CQkgICAgYmxvY2tucl9zZXRfYWRkX3BhaXIoYXRvbSwgJmF0b20tPndhbmRlcmVkX21hcCwKKwkJ
CQkJCSAmbmV3X2JzZXAsCisJCQkJCQkgam5vZGVfZ2V0X2Jsb2NrKGN1ciksICZibG9jayk7CisJ
CX0gd2hpbGUgKHJldCA9PSAtRV9SRVBFQVQpOworCisJCWlmIChyZXQpIHsKKwkJCS8qIGRlYWxs
b2NhdGUgYmxvY2tzIHdoaWNoIHdlcmUgbm90IGFkZGVkIHRvIHdhbmRlcmVkCisJCQkgICBtYXAg
Ki8KKwkJCXJlaXNlcjRfYmxvY2tfbnIgd2lkZV9sZW4gPSBsZW47CisKKwkJCXJlaXNlcjRfZGVh
bGxvY19ibG9ja3MoJmJsb2NrLCAmd2lkZV9sZW4sCisJCQkJCSAgICAgICBCTE9DS19OT1RfQ09V
TlRFRCwKKwkJCQkJICAgICAgIEJBX0ZPUk1BVFRFRAorCQkJCQkgICAgICAgLyogZm9ybWF0dGVk
LCB3aXRob3V0IGRlZmVyICovICk7CisKKwkJCXJldHVybiByZXQ7CisJCX0KKworCQlzcGluX3Vu
bG9ja19hdG9tKGF0b20pOworCisJCWN1ciA9IGxpc3RfZW50cnkoY3VyLT5jYXB0dXJlX2xpbmsu
bmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJCSsrYmxvY2s7CisJfQorCisJcmV0dXJuIDA7
Cit9CisKKy8qIEFsbG9jYXRlIHdhbmRlcmVkIGJsb2NrcyBmb3IgY3VycmVudCBhdG9tJ3MgT1ZF
UldSSVRFIFNFVCBhbmQgaW1tZWRpYXRlbHkKKyAgIHN1Ym1pdCBJTyBmb3IgYWxsb2NhdGVkIGJs
b2Nrcy4gIFdlIGFzc3VtZSB0aGF0IGN1cnJlbnQgYXRvbSBpcyBpbiBhIHN0YWdlCisgICB3aGVu
IGFueSBhdG9tIGZ1c2lvbiBpcyBpbXBvc3NpYmxlIGFuZCBhdG9tIGlzIHVubG9ja2VkIGFuZCBp
dCBpcyBzYWZlLiAqLworc3RhdGljIGludCBhbGxvY193YW5kZXJlZF9ibG9ja3Moc3RydWN0IGNv
bW1pdF9oYW5kbGUgKmNoLCBmbHVzaF9xdWV1ZV90ICpmcSkKK3sKKwlyZWlzZXI0X2Jsb2NrX25y
IGJsb2NrOworCisJaW50IHJlc3Q7CisJaW50IGxlbjsKKwlpbnQgcmV0OworCisJam5vZGUgKmN1
cjsKKworCWFzc2VydCgiemFtLTUzNCIsIGNoLT5vdmVyd3JpdGVfc2V0X3NpemUgPiAwKTsKKwor
CXJlc3QgPSBjaC0+b3ZlcndyaXRlX3NldF9zaXplOworCisJY3VyID0gbGlzdF9lbnRyeShjaC0+
b3ZlcndyaXRlX3NldC0+bmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJd2hpbGUgKGNoLT5v
dmVyd3JpdGVfc2V0ICE9ICZjdXItPmNhcHR1cmVfbGluaykgeworCQlhc3NlcnQoInphbS01Njci
LCBKRl9JU1NFVChjdXIsIEpOT0RFX09WUldSKSk7CisKKwkJcmV0ID0gZ2V0X21vcmVfd2FuZGVy
ZWRfYmxvY2tzKHJlc3QsICZibG9jaywgJmxlbik7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0
OworCisJCXJlc3QgLT0gbGVuOworCisJCXJldCA9IGFkZF9yZWdpb25fdG9fd21hcChjdXIsIGxl
biwgJmJsb2NrKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisKKwkJcmV0ID0gd3JpdGVf
am5vZGVzX3RvX2Rpc2tfZXh0ZW50KGN1ciwgbGVuLCAmYmxvY2ssIGZxLCAwKTsKKwkJaWYgKHJl
dCkKKwkJCXJldHVybiByZXQ7CisKKwkJd2hpbGUgKChsZW4tLSkgPiAwKSB7CisJCQlhc3NlcnQo
InphbS02MDQiLAorCQkJICAgICAgIGNoLT5vdmVyd3JpdGVfc2V0ICE9ICZjdXItPmNhcHR1cmVf
bGluayk7CisJCQljdXIgPSBsaXN0X2VudHJ5KGN1ci0+Y2FwdHVyZV9saW5rLm5leHQsIGpub2Rl
LCBjYXB0dXJlX2xpbmspOworCQl9CisJfQorCisJcmV0dXJuIDA7Cit9CisKKy8qIGFsbG9jYXRl
IGdpdmVuIG51bWJlciBvZiBub2RlcyBvdmVyIHRoZSBqb3VybmFsIGFyZWEgYW5kIGxpbmsgdGhl
bSBpbnRvIGEKKyAgIGxpc3QsIHJldHVybiBwb2ludGVyIHRvIHRoZSBmaXJzdCBqbm9kZSBpbiB0
aGUgbGlzdCAqLworc3RhdGljIGludCBhbGxvY190eChzdHJ1Y3QgY29tbWl0X2hhbmRsZSAqY2gs
IGZsdXNoX3F1ZXVlX3QgKiBmcSkKK3sKKwlyZWlzZXI0X2Jsb2NrbnJfaGludCBoaW50OworCXJl
aXNlcjRfYmxvY2tfbnIgYWxsb2NhdGVkID0gMDsKKwlyZWlzZXI0X2Jsb2NrX25yIGZpcnN0LCBs
ZW47CisJam5vZGUgKmN1cjsKKwlqbm9kZSAqdHhoZWFkOworCWludCByZXQ7CisJcmVpc2VyNF9j
b250ZXh0ICpjdHg7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2RhdGEgKnNiaW5mbzsKKworCWFzc2Vy
dCgiemFtLTY5OCIsIGNoLT50eF9zaXplID4gMCk7CisJYXNzZXJ0KCJ6YW0tNjk5IiwgbGlzdF9l
bXB0eV9jYXJlZnVsKCZjaC0+dHhfbGlzdCkpOworCisJY3R4ID0gZ2V0X2N1cnJlbnRfY29udGV4
dCgpOworCXNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKGN0eC0+c3VwZXIpOworCisJd2hpbGUg
KGFsbG9jYXRlZCA8ICh1bnNpZ25lZCljaC0+dHhfc2l6ZSkgeworCQlsZW4gPSAoY2gtPnR4X3Np
emUgLSBhbGxvY2F0ZWQpOworCisJCXJlaXNlcjRfYmxvY2tucl9oaW50X2luaXQoJmhpbnQpOwor
CisJCWhpbnQuYmxvY2tfc3RhZ2UgPSBCTE9DS19HUkFCQkVEOworCisJCS8qIEZJWE1FOiB0aGVy
ZSBzaG91bGQgYmUgc29tZSBibG9jayBhbGxvY2F0aW9uIHBvbGljeSBmb3IKKwkJICAgbm9kZXMg
d2hpY2ggY29udGFpbiB3YW5kZXIgcmVjb3JkcyAqLworCisJCS8qIFdlIGFzc3VtZSB0aGF0IGRp
c2sgc3BhY2UgZm9yIHdhbmRlcmVkIHJlY29yZCBibG9ja3MgY2FuIGJlCisJCSAqIHRha2VuIGZy
b20gcmVzZXJ2ZWQgYXJlYS4gKi8KKwkJcmV0ID0gcmVpc2VyNF9hbGxvY19ibG9ja3MoJmhpbnQs
ICZmaXJzdCwgJmxlbiwKKwkJCQkJICAgQkFfRk9STUFUVEVEIHwgQkFfUkVTRVJWRUQgfAorCQkJ
CQkgICBCQV9VU0VfREVGQVVMVF9TRUFSQ0hfU1RBUlQpOworCQlyZWlzZXI0X2Jsb2NrbnJfaGlu
dF9kb25lKCZoaW50KTsKKworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKworCQlhbGxvY2F0
ZWQgKz0gbGVuOworCisJCS8qIGNyZWF0ZSBqbm9kZXMgZm9yIGFsbCB3YW5kZXIgcmVjb3JkcyAq
LworCQl3aGlsZSAobGVuLS0pIHsKKwkJCWN1ciA9IHJlaXNlcjRfYWxsb2NfaW9faGVhZCgmZmly
c3QpOworCisJCQlpZiAoY3VyID09IE5VTEwpIHsKKwkJCQlyZXQgPSBSRVRFUlIoLUVOT01FTSk7
CisJCQkJZ290byBmcmVlX25vdF9hc3NpZ25lZDsKKwkJCX0KKworCQkJcmV0ID0gamluaXRfbmV3
KGN1ciwgcmVpc2VyNF9jdHhfZ2ZwX21hc2tfZ2V0KCkpOworCisJCQlpZiAocmV0ICE9IDApIHsK
KwkJCQlqZnJlZShjdXIpOworCQkJCWdvdG8gZnJlZV9ub3RfYXNzaWduZWQ7CisJCQl9CisKKwkJ
CXBpbl9qbm9kZV9kYXRhKGN1cik7CisKKwkJCWxpc3RfYWRkX3RhaWwoJmN1ci0+Y2FwdHVyZV9s
aW5rLCAmY2gtPnR4X2xpc3QpOworCisJCQlmaXJzdCsrOworCQl9CisJfQorCisJeyAvKiBmb3Jt
YXQgYSBvbi1kaXNrIGxpbmtlZCBsaXN0IG9mIHdhbmRlciByZWNvcmRzICovCisJCWludCBzZXJp
YWwgPSAxOworCisJCXR4aGVhZCA9IGxpc3RfZW50cnkoY2gtPnR4X2xpc3QubmV4dCwgam5vZGUs
IGNhcHR1cmVfbGluayk7CisJCWZvcm1hdF90eF9oZWFkKGNoKTsKKworCQljdXIgPSBsaXN0X2Vu
dHJ5KHR4aGVhZC0+Y2FwdHVyZV9saW5rLm5leHQsIGpub2RlLCBjYXB0dXJlX2xpbmspOworCQl3
aGlsZSAoJmNoLT50eF9saXN0ICE9ICZjdXItPmNhcHR1cmVfbGluaykgeworCQkJZm9ybWF0X3dh
bmRlcl9yZWNvcmQoY2gsIGN1ciwgc2VyaWFsKyspOworCQkJY3VyID0gbGlzdF9lbnRyeShjdXIt
PmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9saW5rKTsKKwkJfQorCX0KKworCXsg
LyogRmlsbCB3YW5kZXIgcmVjb3JkcyB3aXRoIFdhbmRlcmVkIFNldCAqLworCQlzdHJ1Y3Qgc3Rv
cmVfd21hcF9wYXJhbXMgcGFyYW1zOworCQl0eG5fYXRvbSAqYXRvbTsKKworCQlwYXJhbXMuY3Vy
ID0gbGlzdF9lbnRyeSh0eGhlYWQtPmNhcHR1cmVfbGluay5uZXh0LCBqbm9kZSwgY2FwdHVyZV9s
aW5rKTsKKworCQlwYXJhbXMuaWR4ID0gMDsKKwkJcGFyYW1zLmNhcGFjaXR5ID0KKwkJICAgIHdh
bmRlcl9yZWNvcmRfY2FwYWNpdHkocmVpc2VyNF9nZXRfY3VycmVudF9zYigpKTsKKworCQlhdG9t
ID0gZ2V0X2N1cnJlbnRfYXRvbV9sb2NrZWQoKTsKKwkJYmxvY2tucl9zZXRfaXRlcmF0b3IoYXRv
bSwgJmF0b20tPndhbmRlcmVkX21hcCwKKwkJCQkgICAgICZzdG9yZV93bWFwX2FjdG9yLCAmcGFy
YW1zLCAwKTsKKwkJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKwl9CisKKwl7IC8qIHJlbHNlIGFs
bCBqbm9kZXMgZnJvbSB0eF9saXN0ICovCisJCWN1ciA9IGxpc3RfZW50cnkoY2gtPnR4X2xpc3Qu
bmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJCXdoaWxlICgmY2gtPnR4X2xpc3QgIT0gJmN1
ci0+Y2FwdHVyZV9saW5rKSB7CisJCQlqcmVsc2UoY3VyKTsKKwkJCWN1ciA9IGxpc3RfZW50cnko
Y3VyLT5jYXB0dXJlX2xpbmsubmV4dCwgam5vZGUsIGNhcHR1cmVfbGluayk7CisJCX0KKwl9CisK
KwlyZXQgPSB3cml0ZV9qbm9kZV9saXN0KCZjaC0+dHhfbGlzdCwgZnEsIE5VTEwsIDApOworCisJ
cmV0dXJuIHJldDsKKworICAgICAgZnJlZV9ub3RfYXNzaWduZWQ6CisJLyogV2UgZGVhbGxvY2F0
ZSBibG9ja3Mgbm90IHlldCBhc3NpZ25lZCB0byBqbm9kZXMgb24gdHhfbGlzdC4gVGhlCisJICAg
Y2FsbGVyIHRha2VzIGNhcmUgYWJvdXQgaW52YWxpZGF0aW5nIG9mIHR4IGxpc3QgICovCisJcmVp
c2VyNF9kZWFsbG9jX2Jsb2NrcygmZmlyc3QsICZsZW4sIEJMT0NLX05PVF9DT1VOVEVELCBCQV9G
T1JNQVRURUQpOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBjb21taXRfdHgoc3Ry
dWN0IGNvbW1pdF9oYW5kbGUgKmNoKQoreworCWZsdXNoX3F1ZXVlX3QgKmZxOworCWludCByZXQ7
CisKKwkvKiBHcmFiIG1vcmUgc3BhY2UgZm9yIHdhbmRlcmVkIHJlY29yZHMuICovCisJcmV0ID0g
cmVpc2VyNF9ncmFiX3NwYWNlX2ZvcmNlKChfX3U2NCkgKGNoLT50eF9zaXplKSwgQkFfUkVTRVJW
RUQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlmcSA9IGdldF9mcV9mb3JfY3VycmVu
dF9hdG9tKCk7CisJaWYgKElTX0VSUihmcSkpCisJCXJldHVybiBQVFJfRVJSKGZxKTsKKworCXNw
aW5fdW5sb2NrX2F0b20oZnEtPmF0b20pOworCWRvIHsKKwkJcmV0ID0gYWxsb2Nfd2FuZGVyZWRf
YmxvY2tzKGNoLCBmcSk7CisJCWlmIChyZXQpCisJCQlicmVhazsKKwkJcmV0ID0gYWxsb2NfdHgo
Y2gsIGZxKTsKKwkJaWYgKHJldCkKKwkJCWJyZWFrOworCX0gd2hpbGUgKDApOworCisJcmVpc2Vy
NF9mcV9wdXQoZnEpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisJcmV0ID0gY3VycmVudF9h
dG9tX2ZpbmlzaF9hbGxfZnEoKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCXJldHVybiB1
cGRhdGVfam91cm5hbF9oZWFkZXIoY2gpOworfQorCitzdGF0aWMgaW50IHdyaXRlX3R4X2JhY2so
c3RydWN0IGNvbW1pdF9oYW5kbGUgKiBjaCkKK3sKKwlmbHVzaF9xdWV1ZV90ICpmcTsKKwlpbnQg
cmV0OworCisJZnEgPSBnZXRfZnFfZm9yX2N1cnJlbnRfYXRvbSgpOworCWlmIChJU19FUlIoZnEp
KQorCQlyZXR1cm4gIFBUUl9FUlIoZnEpOworCXNwaW5fdW5sb2NrX2F0b20oZnEtPmF0b20pOwor
CXJldCA9IHdyaXRlX2pub2RlX2xpc3QoCisJCWNoLT5vdmVyd3JpdGVfc2V0LCBmcSwgTlVMTCwg
V1JJVEVPVVRfRk9SX1BBR0VfUkVDTEFJTSk7CisJcmVpc2VyNF9mcV9wdXQoZnEpOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisJcmV0ID0gY3VycmVudF9hdG9tX2ZpbmlzaF9hbGxfZnEoKTsK
KwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCXJldHVybiB1cGRhdGVfam91cm5hbF9mb290ZXIo
Y2gpOworfQorCisvKiBXZSBhc3N1bWUgdGhhdCBhdCB0aGlzIG1vbWVudCBhbGwgY2FwdHVyZWQg
YmxvY2tzIGFyZSBtYXJrZWQgYXMgUkVMT0Mgb3IKKyAgIFdBTkRFUiAoYmVsb25nIHRvIFJlbG9j
YXRlIG8gT3ZlcndyaXRlIHNldCksIGFsbCBub2RlcyBmcm9tIFJlbG9jYXRlIHNldAorICAgYXJl
IHN1Ym1pdHRlZCB0byB3cml0ZS4KKyovCisKK2ludCByZWlzZXI0X3dyaXRlX2xvZ3MobG9uZyAq
bnJfc3VibWl0dGVkKQoreworCXR4bl9hdG9tICphdG9tOworCXN0cnVjdCBzdXBlcl9ibG9jayAq
c3VwZXIgPSByZWlzZXI0X2dldF9jdXJyZW50X3NiKCk7CisJcmVpc2VyNF9zdXBlcl9pbmZvX2Rh
dGEgKnNiaW5mbyA9IGdldF9zdXBlcl9wcml2YXRlKHN1cGVyKTsKKwlzdHJ1Y3QgY29tbWl0X2hh
bmRsZSBjaDsKKwlpbnQgcmV0OworCisJd3JpdGVvdXRfbW9kZV9lbmFibGUoKTsKKworCS8qIGJs
b2NrIGFsbG9jYXRvciBtYXkgYWRkIGotbm9kZXMgdG8gdGhlIGNsZWFuX2xpc3QgKi8KKwlyZXQg
PSByZWlzZXI0X3ByZV9jb21taXRfaG9vaygpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisK
KwkvKiBObyBsb2NrcyBhcmUgcmVxdWlyZWQgaWYgd2UgdGFrZSBhdG9tIHdoaWNoIHN0YWdlID49
CisJICogQVNUQUdFX1BSRV9DT01NSVQgKi8KKwlhdG9tID0gZ2V0X2N1cnJlbnRfY29udGV4dCgp
LT50cmFucy0+YXRvbTsKKwlhc3NlcnQoInphbS05NjUiLCBhdG9tICE9IE5VTEwpOworCisJLyog
cmVsb2NhdGUgc2V0IGlzIG9uIHRoZSBhdG9tLT5jbGVhbl9ub2RlcyBsaXN0IGFmdGVyCisJICog
Y3VycmVudF9hdG9tX2NvbXBsZXRlX3dyaXRlcygpIGZpbmlzaGVzLiBJdCBjYW4gYmUgc2FmZWx5
CisJICogdW5jYXB0dXJlZCBhZnRlciBjb21taXRfbXV0ZXggaXMgbG9ja2VkLCBiZWNhdXNlIGFu
eSBhdG9tIHRoYXQKKwkgKiBjYXB0dXJlcyB0aGVzZSBub2RlcyBpcyBndWFyYW50ZWVkIHRvIGNv
bW1pdCBhZnRlciBjdXJyZW50IG9uZS4KKwkgKgorCSAqIFRoaXMgY2FuIG9ubHkgYmUgZG9uZSBh
ZnRlciByZWlzZXI0X3ByZV9jb21taXRfaG9vaygpLCBiZWNhdXNlIGl0IGlzIHdoZXJlCisJICog
ZWFybHkgZmx1c2hlZCBqbm9kZXMgd2l0aCBDUkVBVEVEIGJpdCBhcmUgdHJhbnNmZXJyZWQgdG8g
dGhlCisJICogb3ZlcndyaXRlIGxpc3QuICovCisJcmVpc2VyNF9pbnZhbGlkYXRlX2xpc3QoQVRP
TV9DTEVBTl9MSVNUKGF0b20pKTsKKwlzcGluX2xvY2tfYXRvbShhdG9tKTsKKwkvKiBUaGVyZSBt
aWdodCBiZSB3YWl0ZXJzIGZvciB0aGUgcmVsb2NhdGUgbm9kZXMgd2hpY2ggd2UgaGF2ZQorCSAq
IHJlbGVhc2VkLCB3YWtlIHRoZW0gdXAuICovCisJcmVpc2VyNF9hdG9tX3NlbmRfZXZlbnQoYXRv
bSk7CisJc3Bpbl91bmxvY2tfYXRvbShhdG9tKTsKKworCWlmIChSRUlTRVI0X0RFQlVHKSB7CisJ
CWludCBsZXZlbDsKKworCQlmb3IgKGxldmVsID0gMDsgbGV2ZWwgPCBSRUFMX01BWF9aVFJFRV9I
RUlHSFQgKyAxOyArK2xldmVsKQorCQkJYXNzZXJ0KCJuaWtpdGEtMzM1MiIsCisJCQkgICAgICAg
bGlzdF9lbXB0eV9jYXJlZnVsKEFUT01fRElSVFlfTElTVChhdG9tLCBsZXZlbCkpKTsKKwl9CisK
KwlzYmluZm8tPm5yX2ZpbGVzX2NvbW1pdHRlZCArPSAodW5zaWduZWQpYXRvbS0+bnJfb2JqZWN0
c19jcmVhdGVkOworCXNiaW5mby0+bnJfZmlsZXNfY29tbWl0dGVkIC09ICh1bnNpZ25lZClhdG9t
LT5ucl9vYmplY3RzX2RlbGV0ZWQ7CisKKwlpbml0X2NvbW1pdF9oYW5kbGUoJmNoLCBhdG9tKTsK
KworCWNoLmZyZWVfYmxvY2tzID0gc2JpbmZvLT5ibG9ja3NfZnJlZV9jb21taXR0ZWQ7CisJY2gu
bnJfZmlsZXMgPSBzYmluZm8tPm5yX2ZpbGVzX2NvbW1pdHRlZDsKKwkvKiBaQU0tRklYTUUtSEFO
UzogZW1haWwgbWUgd2hhdCB0aGUgY29udGVudGlvbiBsZXZlbCBpcyBmb3IgdGhlIHN1cGVyCisJ
ICogbG9jay4gKi8KKwljaC5uZXh0X29pZCA9IG9pZF9uZXh0KHN1cGVyKTsKKworCS8qIGNvdW50
IG92ZXJ3cml0ZSBzZXQgYW5kIHBsYWNlIGl0IGluIGEgc2VwYXJhdGUgbGlzdCAqLworCXJldCA9
IGdldF9vdmVyd3JpdGVfc2V0KCZjaCk7CisKKwlpZiAocmV0IDw9IDApIHsKKwkJLyogSXQgaXMg
cG9zc2libGUgdGhhdCBvdmVyd3JpdGUgc2V0IGlzIGVtcHR5IGhlcmUsIGl0IG1lYW5zCisJCSAg
IGFsbCBjYXB0dXJlZCBub2RlcyBhcmUgY2xlYW4gKi8KKwkJZ290byB1cF9hbmRfcmV0OworCX0K
KworCS8qIEluZm9ybSB0aGUgY2FsbGVyIGFib3V0IHdoYXQgbnVtYmVyIG9mIGRpcnR5IHBhZ2Vz
IHdpbGwgYmUKKwkgKiBzdWJtaXR0ZWQgdG8gZGlzay4gKi8KKwkqbnJfc3VibWl0dGVkICs9IGNo
Lm92ZXJ3cml0ZV9zZXRfc2l6ZSAtIGNoLm5yX2JpdG1hcDsKKworCS8qIGNvdW50IGFsbCByZWNv
cmRzIG5lZWRlZCBmb3Igc3RvcmluZyBvZiB0aGUgd2FuZGVyZWQgc2V0ICovCisJZ2V0X3R4X3Np
emUoJmNoKTsKKworCXJldCA9IGNvbW1pdF90eCgmY2gpOworCWlmIChyZXQpCisJCWdvdG8gdXBf
YW5kX3JldDsKKworCXNwaW5fbG9ja19hdG9tKGF0b20pOworCXJlaXNlcjRfYXRvbV9zZXRfc3Rh
Z2UoYXRvbSwgQVNUQUdFX1BPU1RfQ09NTUlUKTsKKwlzcGluX3VubG9ja19hdG9tKGF0b20pOwor
CXJlaXNlcjRfcG9zdF9jb21taXRfaG9vaygpOworCisJcmV0ID0gd3JpdGVfdHhfYmFjaygmY2gp
OworCisgICAgICB1cF9hbmRfcmV0OgorCWlmIChyZXQpIHsKKwkJLyogdGhlcmUgY291bGQgYmUg
ZnEgYXR0YWNoZWQgdG8gY3VycmVudCBhdG9tOyB0aGUgb25seSB3YXkgdG8KKwkJICAgcmVtb3Zl
IHRoZW0gaXM6ICovCisJCWN1cnJlbnRfYXRvbV9maW5pc2hfYWxsX2ZxKCk7CisJfQorCisJLyog
ZnJlZSBibG9ja3Mgb2YgZmx1c2hlZCB0cmFuc2FjdGlvbiAqLworCWRlYWxsb2NfdHhfbGlzdCgm
Y2gpOworCWRlYWxsb2Nfd21hcCgmY2gpOworCisJcmVpc2VyNF9wb3N0X3dyaXRlX2JhY2tfaG9v
aygpOworCisJcHV0X292ZXJ3cml0ZV9zZXQoJmNoKTsKKworCWRvbmVfY29tbWl0X2hhbmRsZSgm
Y2gpOworCisJd3JpdGVvdXRfbW9kZV9kaXNhYmxlKCk7CisKKwlyZXR1cm4gcmV0OworfQorCisv
KiBjb25zaXN0ZW5jeSBjaGVja3MgZm9yIGpvdXJuYWwgZGF0YS9jb250cm9sIGJsb2NrczogaGVh
ZGVyLCBmb290ZXIsIGxvZworICAgcmVjb3JkcywgdHJhbnNhY3Rpb25zIGhlYWQgYmxvY2tzLiBB
bGwgZnVuY3Rpb25zIHJldHVybiB6ZXJvIG9uIHN1Y2Nlc3MuICovCisKK3N0YXRpYyBpbnQgY2hl
Y2tfam91cm5hbF9oZWFkZXIoY29uc3Qgam5vZGUgKiBub2RlIFVOVVNFRF9BUkcpCit7CisJLyog
RklYTUU6IGpvdXJuYWwgaGVhZGVyIGhhcyBubyBtYWdpYyBmaWVsZCB5ZXQuICovCisJcmV0dXJu
IDA7Cit9CisKKy8qIHdhaXQgZm9yIHdyaXRlIGNvbXBsZXRpb24gZm9yIGFsbCBqbm9kZXMgZnJv
bSBnaXZlbiBsaXN0ICovCitzdGF0aWMgaW50IHdhaXRfb25fam5vZGVfbGlzdChzdHJ1Y3QgbGlz
dF9oZWFkICpoZWFkKQoreworCWpub2RlICpzY2FuOworCWludCByZXQgPSAwOworCisJbGlzdF9m
b3JfZWFjaF9lbnRyeShzY2FuLCBoZWFkLCBjYXB0dXJlX2xpbmspIHsKKwkJc3RydWN0IHBhZ2Ug
KnBnID0gam5vZGVfcGFnZShzY2FuKTsKKworCQlpZiAocGcpIHsKKwkJCWlmIChQYWdlV3JpdGVi
YWNrKHBnKSkKKwkJCQl3YWl0X29uX3BhZ2Vfd3JpdGViYWNrKHBnKTsKKworCQkJaWYgKFBhZ2VF
cnJvcihwZykpCisJCQkJcmV0Kys7CisJCX0KKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0
aWMgaW50IGNoZWNrX2pvdXJuYWxfZm9vdGVyKGNvbnN0IGpub2RlICogbm9kZSBVTlVTRURfQVJH
KQoreworCS8qIEZJWE1FOiBqb3VybmFsIGZvb3RlciBoYXMgbm8gbWFnaWMgZmllbGQgeWV0LiAq
LworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGNoZWNrX3R4X2hlYWQoY29uc3Qgam5vZGUg
KiBub2RlKQoreworCXN0cnVjdCB0eF9oZWFkZXIgKmhlYWRlciA9IChzdHJ1Y3QgdHhfaGVhZGVy
ICopamRhdGEobm9kZSk7CisKKwlpZiAobWVtY21wKCZoZWFkZXItPm1hZ2ljLCBUWF9IRUFERVJf
TUFHSUMsIFRYX0hFQURFUl9NQUdJQ19TSVpFKSAhPSAwKSB7CisJCXdhcm5pbmcoInphbS02Mjci
LCAidHggaGVhZCBhdCBibG9jayAlcyBjb3JydXB0ZWRcbiIsCisJCQlzcHJpbnRfYWRkcmVzcyhq
bm9kZV9nZXRfYmxvY2sobm9kZSkpKTsKKwkJcmV0dXJuIFJFVEVSUigtRUlPKTsKKwl9CisKKwly
ZXR1cm4gMDsKK30KKworc3RhdGljIGludCBjaGVja193YW5kZXJfcmVjb3JkKGNvbnN0IGpub2Rl
ICogbm9kZSkKK3sKKwlzdHJ1Y3Qgd2FuZGVyX3JlY29yZF9oZWFkZXIgKlJIID0KKwkgICAgKHN0
cnVjdCB3YW5kZXJfcmVjb3JkX2hlYWRlciAqKWpkYXRhKG5vZGUpOworCisJaWYgKG1lbWNtcCgm
UkgtPm1hZ2ljLCBXQU5ERVJfUkVDT1JEX01BR0lDLCBXQU5ERVJfUkVDT1JEX01BR0lDX1NJWkUp
ICE9CisJICAgIDApIHsKKwkJd2FybmluZygiemFtLTYyOCIsICJ3YW5kZXIgcmVjb3JkIGF0IGJs
b2NrICVzIGNvcnJ1cHRlZFxuIiwKKwkJCXNwcmludF9hZGRyZXNzKGpub2RlX2dldF9ibG9jayhu
b2RlKSkpOworCQlyZXR1cm4gUkVURVJSKC1FSU8pOworCX0KKworCXJldHVybiAwOworfQorCisv
KiBmaWxsIGNvbW1pdF9oYW5kbGVyIHN0cnVjdHVyZSBieSBldmVyeXRoaW5nIHdoYXQgaXMgbmVl
ZGVkIGZvciB1cGRhdGVfam91cm5hbF9mb290ZXIgKi8KK3N0YXRpYyBpbnQgcmVzdG9yZV9jb21t
aXRfaGFuZGxlKHN0cnVjdCBjb21taXRfaGFuZGxlICpjaCwgam5vZGUgKnR4X2hlYWQpCit7CisJ
c3RydWN0IHR4X2hlYWRlciAqVFhIOworCWludCByZXQ7CisKKwlyZXQgPSBqbG9hZCh0eF9oZWFk
KTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJVFhIID0gKHN0cnVjdCB0eF9oZWFkZXIg
KilqZGF0YSh0eF9oZWFkKTsKKworCWNoLT5mcmVlX2Jsb2NrcyA9IGxlNjRfdG9fY3B1KGdldF91
bmFsaWduZWQoJlRYSC0+ZnJlZV9ibG9ja3MpKTsKKwljaC0+bnJfZmlsZXMgPSBsZTY0X3RvX2Nw
dShnZXRfdW5hbGlnbmVkKCZUWEgtPm5yX2ZpbGVzKSk7CisJY2gtPm5leHRfb2lkID0gbGU2NF90
b19jcHUoZ2V0X3VuYWxpZ25lZCgmVFhILT5uZXh0X29pZCkpOworCisJanJlbHNlKHR4X2hlYWQp
OworCisJbGlzdF9hZGQoJnR4X2hlYWQtPmNhcHR1cmVfbGluaywgJmNoLT50eF9saXN0KTsKKwor
CXJldHVybiAwOworfQorCisvKiByZXBsYXkgb25lIHRyYW5zYWN0aW9uOiByZXN0b3JlIGFuZCB3
cml0ZSBvdmVyd3JpdGUgc2V0IGluIHBsYWNlICovCitzdGF0aWMgaW50IHJlcGxheV90cmFuc2Fj
dGlvbihjb25zdCBzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnMsCisJCQkgICAgICBqbm9kZSAqIHR4X2hl
YWQsCisJCQkgICAgICBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogbG9nX3JlY19ibG9ja19wLAor
CQkJICAgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGVuZF9ibG9jaywKKwkJCSAgICAgIHVu
c2lnbmVkIGludCBucl93YW5kZXJfcmVjb3JkcykKK3sKKwlyZWlzZXI0X2Jsb2NrX25yIGxvZ19y
ZWNfYmxvY2sgPSAqbG9nX3JlY19ibG9ja19wOworCXN0cnVjdCBjb21taXRfaGFuZGxlIGNoOwor
CUxJU1RfSEVBRChvdmVyd3JpdGVfc2V0KTsKKwlqbm9kZSAqbG9nOworCWludCByZXQ7CisKKwlp
bml0X2NvbW1pdF9oYW5kbGUoJmNoLCBOVUxMKTsKKwljaC5vdmVyd3JpdGVfc2V0ID0gJm92ZXJ3
cml0ZV9zZXQ7CisKKwlyZXN0b3JlX2NvbW1pdF9oYW5kbGUoJmNoLCB0eF9oZWFkKTsKKworCXdo
aWxlIChsb2dfcmVjX2Jsb2NrICE9ICplbmRfYmxvY2spIHsKKwkJc3RydWN0IHdhbmRlcl9yZWNv
cmRfaGVhZGVyICpoZWFkZXI7CisJCXN0cnVjdCB3YW5kZXJfZW50cnkgKmVudHJ5OworCisJCWlu
dCBpOworCisJCWlmIChucl93YW5kZXJfcmVjb3JkcyA9PSAwKSB7CisJCQl3YXJuaW5nKCJ6YW0t
NjMxIiwKKwkJCQkibnVtYmVyIG9mIHdhbmRlciByZWNvcmRzIGluIHRoZSBsaW5rZWQgbGlzdCIK
KwkJCQkiIGdyZWF0ZXIgdGhhbiBudW1iZXIgc3RvcmVkIGluIHR4IGhlYWQuXG4iKTsKKwkJCXJl
dCA9IFJFVEVSUigtRUlPKTsKKwkJCWdvdG8gZnJlZV9vd19zZXQ7CisJCX0KKworCQlsb2cgPSBy
ZWlzZXI0X2FsbG9jX2lvX2hlYWQoJmxvZ19yZWNfYmxvY2spOworCQlpZiAobG9nID09IE5VTEwp
CisJCQlyZXR1cm4gUkVURVJSKC1FTk9NRU0pOworCisJCXJldCA9IGpsb2FkKGxvZyk7CisJCWlm
IChyZXQgPCAwKSB7CisJCQlyZWlzZXI0X2Ryb3BfaW9faGVhZChsb2cpOworCQkJcmV0dXJuIHJl
dDsKKwkJfQorCisJCXJldCA9IGNoZWNrX3dhbmRlcl9yZWNvcmQobG9nKTsKKwkJaWYgKHJldCkg
eworCQkJanJlbHNlKGxvZyk7CisJCQlyZWlzZXI0X2Ryb3BfaW9faGVhZChsb2cpOworCQkJcmV0
dXJuIHJldDsKKwkJfQorCisJCWhlYWRlciA9IChzdHJ1Y3Qgd2FuZGVyX3JlY29yZF9oZWFkZXIg
KilqZGF0YShsb2cpOworCQlsb2dfcmVjX2Jsb2NrID0gbGU2NF90b19jcHUoZ2V0X3VuYWxpZ25l
ZCgmaGVhZGVyLT5uZXh0X2Jsb2NrKSk7CisKKwkJZW50cnkgPSAoc3RydWN0IHdhbmRlcl9lbnRy
eSAqKShoZWFkZXIgKyAxKTsKKworCQkvKiByZXN0b3JlIG92ZXJ3cml0ZSBzZXQgZnJvbSB3YW5k
ZXIgcmVjb3JkIGNvbnRlbnQgKi8KKwkJZm9yIChpID0gMDsgaSA8IHdhbmRlcl9yZWNvcmRfY2Fw
YWNpdHkocyk7IGkrKykgeworCQkJcmVpc2VyNF9ibG9ja19uciBibG9jazsKKwkJCWpub2RlICpu
b2RlOworCisJCQlibG9jayA9IGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJmVudHJ5LT53YW5k
ZXJlZCkpOworCQkJaWYgKGJsb2NrID09IDApCisJCQkJYnJlYWs7CisKKwkJCW5vZGUgPSByZWlz
ZXI0X2FsbG9jX2lvX2hlYWQoJmJsb2NrKTsKKwkJCWlmIChub2RlID09IE5VTEwpIHsKKwkJCQly
ZXQgPSBSRVRFUlIoLUVOT01FTSk7CisJCQkJLyoKKwkJCQkgKiBGSVhNRS1WUzo/Pz8KKwkJCQkg
Ki8KKwkJCQlqcmVsc2UobG9nKTsKKwkJCQlyZWlzZXI0X2Ryb3BfaW9faGVhZChsb2cpOworCQkJ
CWdvdG8gZnJlZV9vd19zZXQ7CisJCQl9CisKKwkJCXJldCA9IGpsb2FkKG5vZGUpOworCisJCQlp
ZiAocmV0IDwgMCkgeworCQkJCXJlaXNlcjRfZHJvcF9pb19oZWFkKG5vZGUpOworCQkJCS8qCisJ
CQkJICogRklYTUUtVlM6Pz8/CisJCQkJICovCisJCQkJanJlbHNlKGxvZyk7CisJCQkJcmVpc2Vy
NF9kcm9wX2lvX2hlYWQobG9nKTsKKwkJCQlnb3RvIGZyZWVfb3dfc2V0OworCQkJfQorCisJCQli
bG9jayA9IGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJmVudHJ5LT5vcmlnaW5hbCkpOworCisJ
CQlhc3NlcnQoInphbS02MDMiLCBibG9jayAhPSAwKTsKKworCQkJam5vZGVfc2V0X2Jsb2NrKG5v
ZGUsICZibG9jayk7CisKKwkJCWxpc3RfYWRkX3RhaWwoJm5vZGUtPmNhcHR1cmVfbGluaywgY2gu
b3ZlcndyaXRlX3NldCk7CisKKwkJCSsrZW50cnk7CisJCX0KKworCQlqcmVsc2UobG9nKTsKKwkJ
cmVpc2VyNF9kcm9wX2lvX2hlYWQobG9nKTsKKworCQktLW5yX3dhbmRlcl9yZWNvcmRzOworCX0K
KworCWlmIChucl93YW5kZXJfcmVjb3JkcyAhPSAwKSB7CisJCXdhcm5pbmcoInphbS02MzIiLCAi
bnVtYmVyIG9mIHdhbmRlciByZWNvcmRzIGluIHRoZSBsaW5rZWQgbGlzdCIKKwkJCSIgbGVzcyB0
aGFuIG51bWJlciBzdG9yZWQgaW4gdHggaGVhZC5cbiIpOworCQlyZXQgPSBSRVRFUlIoLUVJTyk7
CisJCWdvdG8gZnJlZV9vd19zZXQ7CisJfQorCisJewkJCS8qIHdyaXRlIHdhbmRlcmVkIHNldCBp
biBwbGFjZSAqLworCQl3cml0ZV9qbm9kZV9saXN0KGNoLm92ZXJ3cml0ZV9zZXQsIE5VTEwsIE5V
TEwsIDApOworCQlyZXQgPSB3YWl0X29uX2pub2RlX2xpc3QoY2gub3ZlcndyaXRlX3NldCk7CisK
KwkJaWYgKHJldCkgeworCQkJcmV0ID0gUkVURVJSKC1FSU8pOworCQkJZ290byBmcmVlX293X3Nl
dDsKKwkJfQorCX0KKworCXJldCA9IHVwZGF0ZV9qb3VybmFsX2Zvb3RlcigmY2gpOworCisgICAg
ICBmcmVlX293X3NldDoKKworCXdoaWxlICghbGlzdF9lbXB0eShjaC5vdmVyd3JpdGVfc2V0KSkg
eworCQlqbm9kZSAqY3VyID0gbGlzdF9lbnRyeShjaC5vdmVyd3JpdGVfc2V0LT5uZXh0LCBqbm9k
ZSwgY2FwdHVyZV9saW5rKTsKKwkJbGlzdF9kZWxfaW5pdCgmY3VyLT5jYXB0dXJlX2xpbmspOwor
CQlqcmVsc2UoY3VyKTsKKwkJcmVpc2VyNF9kcm9wX2lvX2hlYWQoY3VyKTsKKwl9CisKKwlsaXN0
X2RlbF9pbml0KCZ0eF9oZWFkLT5jYXB0dXJlX2xpbmspOworCisJZG9uZV9jb21taXRfaGFuZGxl
KCZjaCk7CisKKwlyZXR1cm4gcmV0OworfQorCisvKiBmaW5kIG9sZGVzdCBjb21taXR0ZWQgYW5k
IG5vdCBwbGF5ZWQgdHJhbnNhY3Rpb24gYW5kIHBsYXkgaXQuIFRoZSB0cmFuc2FjdGlvbgorICog
d2FzIGNvbW1pdHRlZCBhbmQgam91cm5hbCBoZWFkZXIgYmxvY2sgd2FzIHVwZGF0ZWQgYnV0IHRo
ZSBibG9ja3MgZnJvbSB0aGUKKyAqIHByb2Nlc3Mgb2Ygd3JpdGluZyB0aGUgYXRvbSdzIG92ZXJ3
cml0ZSBzZXQgaW4tcGxhY2UgYW5kIHVwZGF0aW5nIG9mIGpvdXJuYWwKKyAqIGZvb3RlciBibG9j
ayB3ZXJlIG5vdCBjb21wbGV0ZWQuIFRoaXMgZnVuY3Rpb24gY29tcGxldGVzIHRoZSBwcm9jZXNz
IGJ5CisgKiByZWNvdmVyaW5nIHRoZSBhdG9tJ3Mgb3ZlcndyaXRlIHNldCBmcm9tIHRoZWlyIHdh
bmRlcmVkIGxvY2F0aW9ucyBhbmQgd3JpdGVzCisgKiB0aGVtIGluLXBsYWNlIGFuZCB1cGRhdGlu
ZyB0aGUgam91cm5hbCBmb290ZXIuICovCitzdGF0aWMgaW50IHJlcGxheV9vbGRlc3RfdHJhbnNh
Y3Rpb24oc3RydWN0IHN1cGVyX2Jsb2NrICpzKQoreworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRh
ICpzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzKTsKKwlqbm9kZSAqamYgPSBzYmluZm8tPmpv
dXJuYWxfZm9vdGVyOworCXVuc2lnbmVkIGludCB0b3RhbDsKKwlzdHJ1Y3Qgam91cm5hbF9mb290
ZXIgKkY7CisJc3RydWN0IHR4X2hlYWRlciAqVDsKKworCXJlaXNlcjRfYmxvY2tfbnIgcHJldl90
eDsKKwlyZWlzZXI0X2Jsb2NrX25yIGxhc3RfZmx1c2hlZF90eDsKKwlyZWlzZXI0X2Jsb2NrX25y
IGxvZ19yZWNfYmxvY2sgPSAwOworCisJam5vZGUgKnR4X2hlYWQ7CisKKwlpbnQgcmV0OworCisJ
aWYgKChyZXQgPSBqbG9hZChqZikpIDwgMCkKKwkJcmV0dXJuIHJldDsKKworCUYgPSAoc3RydWN0
IGpvdXJuYWxfZm9vdGVyICopamRhdGEoamYpOworCisJbGFzdF9mbHVzaGVkX3R4ID0gbGU2NF90
b19jcHUoZ2V0X3VuYWxpZ25lZCgmRi0+bGFzdF9mbHVzaGVkX3R4KSk7CisKKwlqcmVsc2UoamYp
OworCisJaWYgKHNiaW5mby0+bGFzdF9jb21taXR0ZWRfdHggPT0gbGFzdF9mbHVzaGVkX3R4KSB7
CisJCS8qIGFsbCB0cmFuc2FjdGlvbnMgYXJlIHJlcGxheWVkICovCisJCXJldHVybiAwOworCX0K
KworCXByZXZfdHggPSBzYmluZm8tPmxhc3RfY29tbWl0dGVkX3R4OworCisJLyogc2VhcmNoaW5n
IGZvciBvbGRlc3Qgbm90IGZsdXNoZWQgdHJhbnNhY3Rpb24gKi8KKwl3aGlsZSAoMSkgeworCQl0
eF9oZWFkID0gcmVpc2VyNF9hbGxvY19pb19oZWFkKCZwcmV2X3R4KTsKKwkJaWYgKCF0eF9oZWFk
KQorCQkJcmV0dXJuIFJFVEVSUigtRU5PTUVNKTsKKworCQlyZXQgPSBqbG9hZCh0eF9oZWFkKTsK
KwkJaWYgKHJldCA8IDApIHsKKwkJCXJlaXNlcjRfZHJvcF9pb19oZWFkKHR4X2hlYWQpOworCQkJ
cmV0dXJuIHJldDsKKwkJfQorCisJCXJldCA9IGNoZWNrX3R4X2hlYWQodHhfaGVhZCk7CisJCWlm
IChyZXQpIHsKKwkJCWpyZWxzZSh0eF9oZWFkKTsKKwkJCXJlaXNlcjRfZHJvcF9pb19oZWFkKHR4
X2hlYWQpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCisJCVQgPSAoc3RydWN0IHR4X2hlYWRlciAq
KWpkYXRhKHR4X2hlYWQpOworCisJCXByZXZfdHggPSBsZTY0X3RvX2NwdShnZXRfdW5hbGlnbmVk
KCZULT5wcmV2X3R4KSk7CisKKwkJaWYgKHByZXZfdHggPT0gbGFzdF9mbHVzaGVkX3R4KQorCQkJ
YnJlYWs7CisKKwkJanJlbHNlKHR4X2hlYWQpOworCQlyZWlzZXI0X2Ryb3BfaW9faGVhZCh0eF9o
ZWFkKTsKKwl9CisKKwl0b3RhbCA9IGxlMzJfdG9fY3B1KGdldF91bmFsaWduZWQoJlQtPnRvdGFs
KSk7CisJbG9nX3JlY19ibG9jayA9IGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQoJlQtPm5leHRf
YmxvY2spKTsKKworCXBpbl9qbm9kZV9kYXRhKHR4X2hlYWQpOworCWpyZWxzZSh0eF9oZWFkKTsK
KworCXJldCA9CisJICAgIHJlcGxheV90cmFuc2FjdGlvbihzLCB0eF9oZWFkLCAmbG9nX3JlY19i
bG9jaywKKwkJCSAgICAgICBqbm9kZV9nZXRfYmxvY2sodHhfaGVhZCksIHRvdGFsIC0gMSk7CisK
Kwl1bnBpbl9qbm9kZV9kYXRhKHR4X2hlYWQpOworCXJlaXNlcjRfZHJvcF9pb19oZWFkKHR4X2hl
YWQpOworCisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKwlyZXR1cm4gLUVfUkVQRUFUOworfQor
CisvKiBUaGUgcmVpc2VyNCBqb3VybmFsIGN1cnJlbnQgaW1wbGVtZW50YXRpb24gd2FzIG9wdGlt
aXplZCB0byBub3QgdG8gY2FwdHVyZQorICAgc3VwZXIgYmxvY2sgaWYgY2VydGFpbiBzdXBlciBi
bG9ja3MgZmllbGRzIGFyZSBtb2RpZmllZC4gQ3VycmVudGx5LCB0aGUgc2V0CisgICBpcyAoPGZy
ZWUgYmxvY2sgY291bnQ+LCA8T0lEIGFsbG9jYXRvcj4pLiBUaGVzZSBmaWVsZHMgYXJlIGxvZ2dl
ZCBieQorICAgc3BlY2lhbCB3YXkgd2hpY2ggaW5jbHVkZXMgc3RvcmluZyB0aGVtIGluIGVhY2gg
dHJhbnNhY3Rpb24gaGVhZCBibG9jayBhdAorICAgYXRvbSBjb21taXQgdGltZSBhbmQgd3JpdGlu
ZyB0aGF0IGluZm9ybWF0aW9uIHRvIGpvdXJuYWwgZm9vdGVyIGJsb2NrIGF0CisgICBhdG9tIGZs
dXNoIHRpbWUuICBGb3IgZ2V0dGluZyBpbmZvIGZyb20gam91cm5hbCBmb290ZXIgYmxvY2sgdG8g
dGhlCisgICBpbi1tZW1vcnkgc3VwZXIgYmxvY2sgdGhlcmUgaXMgYSBzcGVjaWFsIGZ1bmN0aW9u
CisgICByZWlzZXI0X2pvdXJuYWxfcmVjb3Zlcl9zYl9kYXRhKCkgd2hpY2ggc2hvdWxkIGJlIGNh
bGxlZCBhZnRlciBkaXNrIGZvcm1hdAorICAgcGx1Z2luIHJlLXJlYWRzIHN1cGVyIGJsb2NrIGFm
dGVyIGpvdXJuYWwgcmVwbGF5aW5nLgorKi8KKworLyogZ2V0IHRoZSBpbmZvcm1hdGlvbiBmcm9t
IGpvdXJuYWwgZm9vdGVyIGluLW1lbW9yeSBzdXBlciBibG9jayAqLworaW50IHJlaXNlcjRfam91
cm5hbF9yZWNvdmVyX3NiX2RhdGEoc3RydWN0IHN1cGVyX2Jsb2NrICpzKQoreworCXJlaXNlcjRf
c3VwZXJfaW5mb19kYXRhICpzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzKTsKKwlzdHJ1Y3Qg
am91cm5hbF9mb290ZXIgKmpmOworCWludCByZXQ7CisKKwlhc3NlcnQoInphbS02NzMiLCBzYmlu
Zm8tPmpvdXJuYWxfZm9vdGVyICE9IE5VTEwpOworCisJcmV0ID0gamxvYWQoc2JpbmZvLT5qb3Vy
bmFsX2Zvb3Rlcik7CisJaWYgKHJldCAhPSAwKQorCQlyZXR1cm4gcmV0OworCisJcmV0ID0gY2hl
Y2tfam91cm5hbF9mb290ZXIoc2JpbmZvLT5qb3VybmFsX2Zvb3Rlcik7CisJaWYgKHJldCAhPSAw
KQorCQlnb3RvIG91dDsKKworCWpmID0gKHN0cnVjdCBqb3VybmFsX2Zvb3RlciAqKWpkYXRhKHNi
aW5mby0+am91cm5hbF9mb290ZXIpOworCisJLyogd2FzIHRoZXJlIGF0IGxlYXN0IG9uZSBmbHVz
aGVkIHRyYW5zYWN0aW9uPyAgKi8KKwlpZiAoamYtPmxhc3RfZmx1c2hlZF90eCkgeworCisJCS8q
IHJlc3RvcmUgZnJlZSBibG9jayBjb3VudGVyIGxvZ2dlZCBpbiB0aGlzIHRyYW5zYWN0aW9uICov
CisJCXJlaXNlcjRfc2V0X2ZyZWVfYmxvY2tzKHMsIGxlNjRfdG9fY3B1KGdldF91bmFsaWduZWQo
JmpmLT5mcmVlX2Jsb2NrcykpKTsKKworCQkvKiByZXN0b3JlIG9pZCBhbGxvY2F0b3Igc3RhdGUg
Ki8KKwkJb2lkX2luaXRfYWxsb2NhdG9yKHMsCisJCQkJICAgbGU2NF90b19jcHUoZ2V0X3VuYWxp
Z25lZCgmamYtPm5yX2ZpbGVzKSksCisJCQkJICAgbGU2NF90b19jcHUoZ2V0X3VuYWxpZ25lZCgm
amYtPm5leHRfb2lkKSkpOworCX0KKyAgICAgIG91dDoKKwlqcmVsc2Uoc2JpbmZvLT5qb3VybmFs
X2Zvb3Rlcik7CisJcmV0dXJuIHJldDsKK30KKworLyogcmVpc2VyNCByZXBsYXkgam91cm5hbCBw
cm9jZWR1cmUgKi8KK2ludCByZWlzZXI0X2pvdXJuYWxfcmVwbGF5KHN0cnVjdCBzdXBlcl9ibG9j
ayAqcykKK3sKKwlyZWlzZXI0X3N1cGVyX2luZm9fZGF0YSAqc2JpbmZvID0gZ2V0X3N1cGVyX3By
aXZhdGUocyk7CisJam5vZGUgKmpoLCAqamY7CisJc3RydWN0IGpvdXJuYWxfaGVhZGVyICpoZWFk
ZXI7CisJaW50IG5yX3R4X3JlcGxheWVkID0gMDsKKwlpbnQgcmV0OworCisJYXNzZXJ0KCJ6YW0t
NTgyIiwgc2JpbmZvICE9IE5VTEwpOworCisJamggPSBzYmluZm8tPmpvdXJuYWxfaGVhZGVyOwor
CWpmID0gc2JpbmZvLT5qb3VybmFsX2Zvb3RlcjsKKworCWlmICghamggfHwgIWpmKSB7CisJCS8q
IGl0IGlzIHBvc3NpYmxlIHRoYXQgZGlzayBsYXlvdXQgZG9lcyBub3Qgc3VwcG9ydCBqb3VybmFs
CisJCSAgIHN0cnVjdHVyZXMsIHdlIGp1c3Qgd2FybiBhYm91dCB0aGlzICovCisJCXdhcm5pbmco
InphbS01ODMiLAorCQkJImpvdXJuYWwgY29udHJvbCBibG9ja3Mgd2VyZSBub3QgbG9hZGVkIGJ5
IGRpc2sgbGF5b3V0IHBsdWdpbi4gICIKKwkJCSJqb3VybmFsIHJlcGxheWluZyBpcyBub3QgcG9z
c2libGUuXG4iKTsKKwkJcmV0dXJuIDA7CisJfQorCisJLyogVGFrZSBmcmVlIGJsb2NrIGNvdW50
IGZyb20gam91cm5hbCBmb290ZXIgYmxvY2suIFRoZSBmcmVlIGJsb2NrCisJICAgY291bnRlciB2
YWx1ZSBjb3JyZXNwb25kcyB0aGUgbGFzdCBmbHVzaGVkIHRyYW5zYWN0aW9uIHN0YXRlICovCisJ
cmV0ID0gamxvYWQoamYpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJcmV0ID0g
Y2hlY2tfam91cm5hbF9mb290ZXIoamYpOworCWlmIChyZXQpIHsKKwkJanJlbHNlKGpmKTsKKwkJ
cmV0dXJuIHJldDsKKwl9CisKKwlqcmVsc2UoamYpOworCisJLyogc3RvcmUgbGFzdCBjb21taXR0
ZWQgdHJhbnNhY3Rpb24gaW5mbyBpbiByZWlzZXI0IGluLW1lbW9yeSBzdXBlcgorCSAgIGJsb2Nr
ICovCisJcmV0ID0gamxvYWQoamgpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJ
cmV0ID0gY2hlY2tfam91cm5hbF9oZWFkZXIoamgpOworCWlmIChyZXQpIHsKKwkJanJlbHNlKGpo
KTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwloZWFkZXIgPSAoc3RydWN0IGpvdXJuYWxfaGVhZGVy
ICopamRhdGEoamgpOworCXNiaW5mby0+bGFzdF9jb21taXR0ZWRfdHggPSBsZTY0X3RvX2NwdShn
ZXRfdW5hbGlnbmVkKCZoZWFkZXItPmxhc3RfY29tbWl0dGVkX3R4KSk7CisKKwlqcmVsc2Uoamgp
OworCisJLyogcmVwbGF5IGNvbW1pdHRlZCB0cmFuc2FjdGlvbnMgKi8KKwl3aGlsZSAoKHJldCA9
IHJlcGxheV9vbGRlc3RfdHJhbnNhY3Rpb24ocykpID09IC1FX1JFUEVBVCkKKwkJbnJfdHhfcmVw
bGF5ZWQrKzsKKworCXJldHVybiByZXQ7Cit9CisKKy8qIGxvYWQgam91cm5hbCBjb250cm9sIGJs
b2NrIChlaXRoZXIgam91cm5hbCBoZWFkZXIgb3Igam91cm5hbCBmb290ZXIgYmxvY2spICovCitz
dGF0aWMgaW50Citsb2FkX2pvdXJuYWxfY29udHJvbF9ibG9jayhqbm9kZSAqKiBub2RlLCBjb25z
dCByZWlzZXI0X2Jsb2NrX25yICogYmxvY2spCit7CisJaW50IHJldDsKKworCSpub2RlID0gcmVp
c2VyNF9hbGxvY19pb19oZWFkKGJsb2NrKTsKKwlpZiAoISgqbm9kZSkpCisJCXJldHVybiBSRVRF
UlIoLUVOT01FTSk7CisKKwlyZXQgPSBqbG9hZCgqbm9kZSk7CisKKwlpZiAocmV0KSB7CisJCXJl
aXNlcjRfZHJvcF9pb19oZWFkKCpub2RlKTsKKwkJKm5vZGUgPSBOVUxMOworCQlyZXR1cm4gcmV0
OworCX0KKworCXBpbl9qbm9kZV9kYXRhKCpub2RlKTsKKwlqcmVsc2UoKm5vZGUpOworCisJcmV0
dXJuIDA7Cit9CisKKy8qIHVubG9hZCBqb3VybmFsIGhlYWRlciBvciBmb290ZXIgYW5kIGZyZWUg
am5vZGUgKi8KK3N0YXRpYyB2b2lkIHVubG9hZF9qb3VybmFsX2NvbnRyb2xfYmxvY2soam5vZGUg
Kiogbm9kZSkKK3sKKwlpZiAoKm5vZGUpIHsKKwkJdW5waW5fam5vZGVfZGF0YSgqbm9kZSk7CisJ
CXJlaXNlcjRfZHJvcF9pb19oZWFkKCpub2RlKTsKKwkJKm5vZGUgPSBOVUxMOworCX0KK30KKwor
LyogcmVsZWFzZSBqb3VybmFsIGNvbnRyb2wgYmxvY2tzICovCit2b2lkIHJlaXNlcjRfZG9uZV9q
b3VybmFsX2luZm8oc3RydWN0IHN1cGVyX2Jsb2NrICpzKQoreworCXJlaXNlcjRfc3VwZXJfaW5m
b19kYXRhICpzYmluZm8gPSBnZXRfc3VwZXJfcHJpdmF0ZShzKTsKKworCWFzc2VydCgiemFtLTQ3
NiIsIHNiaW5mbyAhPSBOVUxMKTsKKworCXVubG9hZF9qb3VybmFsX2NvbnRyb2xfYmxvY2soJnNi
aW5mby0+am91cm5hbF9oZWFkZXIpOworCXVubG9hZF9qb3VybmFsX2NvbnRyb2xfYmxvY2soJnNi
aW5mby0+am91cm5hbF9mb290ZXIpOworCXJjdV9iYXJyaWVyKCk7Cit9CisKKy8qIGxvYWQgam91
cm5hbCBjb250cm9sIGJsb2NrcyAqLworaW50IHJlaXNlcjRfaW5pdF9qb3VybmFsX2luZm8oc3Ry
dWN0IHN1cGVyX2Jsb2NrICpzKQoreworCXJlaXNlcjRfc3VwZXJfaW5mb19kYXRhICpzYmluZm8g
PSBnZXRfc3VwZXJfcHJpdmF0ZShzKTsKKwlqb3VybmFsX2xvY2F0aW9uICpsb2M7CisJaW50IHJl
dDsKKworCWxvYyA9ICZzYmluZm8tPmpsb2M7CisKKwlhc3NlcnQoInphbS02NTEiLCBsb2MgIT0g
TlVMTCk7CisJYXNzZXJ0KCJ6YW0tNjUyIiwgbG9jLT5oZWFkZXIgIT0gMCk7CisJYXNzZXJ0KCJ6
YW0tNjUzIiwgbG9jLT5mb290ZXIgIT0gMCk7CisKKwlyZXQgPSBsb2FkX2pvdXJuYWxfY29udHJv
bF9ibG9jaygmc2JpbmZvLT5qb3VybmFsX2hlYWRlciwgJmxvYy0+aGVhZGVyKTsKKworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXQgPSBsb2FkX2pvdXJuYWxfY29udHJvbF9ibG9jaygm
c2JpbmZvLT5qb3VybmFsX2Zvb3RlciwgJmxvYy0+Zm9vdGVyKTsKKworCWlmIChyZXQpIHsKKwkJ
dW5sb2FkX2pvdXJuYWxfY29udHJvbF9ibG9jaygmc2JpbmZvLT5qb3VybmFsX2hlYWRlcik7CisJ
fQorCisJcmV0dXJuIHJldDsKK30KKworLyogTWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZh
cmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24tc3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJM
QyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4CisgICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1u
OiA4MAorICAgRW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3
Lm9yaWcvZnMvcmVpc2VyNC93YW5kZXIuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC93YW5kZXIu
aAotLS0gbGludXgtNS40LjE3Lm9yaWcvZnMvcmVpc2VyNC93YW5kZXIuaAkxOTcwLTAxLTAxIDAx
OjAwOjAwLjAwMDAwMDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvd2FuZGVy
LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODgyMjI0NTAgKzAxMDAKQEAgLTAsMCArMSwxMzUgQEAK
Ky8qIENvcHlyaWdodCAyMDAyLCAyMDAzIGJ5IEhhbnMgUmVpc2VyLCBsaWNlbnNpbmcgZ292ZXJu
ZWQgYnkgcmVpc2VyNC9SRUFETUUgKi8KKworI2lmICFkZWZpbmVkIChfX0ZTX1JFSVNFUjRfV0FO
REVSX0hfXykKKyNkZWZpbmUgX19GU19SRUlTRVI0X1dBTkRFUl9IX18KKworI2luY2x1ZGUgImRm
b3JtYXQuaCIKKworI2luY2x1ZGUgPGxpbnV4L2ZzLmg+CQkvKiBmb3Igc3RydWN0IHN1cGVyX2Js
b2NrICAqLworCisvKiBSRUlTRVI0IEpPVVJOQUwgT04tRElTSyBEQVRBIFNUUlVDVFVSRVMgICAq
LworCisjZGVmaW5lIFRYX0hFQURFUl9NQUdJQyAgIlR4TWFnaWM0IgorI2RlZmluZSBXQU5ERVJf
UkVDT1JEX01BR0lDICJMb2dNYWdjNCIKKworI2RlZmluZSBUWF9IRUFERVJfTUFHSUNfU0laRSAg
KDgpCisjZGVmaW5lIFdBTkRFUl9SRUNPUkRfTUFHSUNfU0laRSAoOCkKKworLyogam91cm5hbCBo
ZWFkZXIgYmxvY2sgZm9ybWF0ICovCitzdHJ1Y3Qgam91cm5hbF9oZWFkZXIgeworCS8qIGxhc3Qg
d3JpdHRlbiB0cmFuc2FjdGlvbiBoZWFkIGxvY2F0aW9uICovCisJZDY0IGxhc3RfY29tbWl0dGVk
X3R4OworfTsKKwordHlwZWRlZiBzdHJ1Y3Qgam91cm5hbF9sb2NhdGlvbiB7CisJcmVpc2VyNF9i
bG9ja19uciBmb290ZXI7CisJcmVpc2VyNF9ibG9ja19uciBoZWFkZXI7Cit9IGpvdXJuYWxfbG9j
YXRpb247CisKKy8qIFRoZSB3YW5kZXIuYyBoZWFkIGNvbW1lbnQgZGVzY3JpYmVzIHVzYWdlIGFu
ZCBzZW1hbnRpYyBvZiBhbGwgdGhlc2Ugc3RydWN0dXJlcyAqLworLyogam91cm5hbCBmb290ZXIg
YmxvY2sgZm9ybWF0ICovCitzdHJ1Y3Qgam91cm5hbF9mb290ZXIgeworCS8qIGxhc3QgZmx1c2hl
ZCB0cmFuc2FjdGlvbiBsb2NhdGlvbi4gKi8KKwkvKiBUaGlzIGJsb2NrIG51bWJlciBpcyBubyBt
b3JlIHZhbGlkIGFmdGVyIHRoZSB0cmFuc2FjdGlvbiBpdCBwb2ludHMKKwkgICB0byBnZXRzIGZs
dXNoZWQsIHRoaXMgbnVtYmVyIGlzIHVzZWQgb25seSBhdCBqb3VybmFsIHJlcGxheWluZyB0aW1l
CisJICAgZm9yIGRldGVjdGlvbiBvZiB0aGUgZW5kIG9mIG9uLWRpc2sgbGlzdCBvZiBjb21taXR0
ZWQgdHJhbnNhY3Rpb25zCisJICAgd2hpY2ggd2VyZSBub3QgZmx1c2hlZCBjb21wbGV0ZWx5ICov
CisJZDY0IGxhc3RfZmx1c2hlZF90eDsKKworCS8qIGZyZWUgYmxvY2sgY291bnRlciBpcyB3cml0
dGVuIGluIGpvdXJuYWwgZm9vdGVyIGF0IHRyYW5zYWN0aW9uCisJICAgZmx1c2hpbmcgLCBub3Qg
aW4gc3VwZXIgYmxvY2sgYmVjYXVzZSBmcmVlIGJsb2NrcyBjb3VudGVyIGlzIGxvZ2dlZAorCSAg
IGJ5IGFub3RoZXIgd2F5IHRoYW4gc3VwZXIgYmxvY2sgZmllbGRzIChyb290IHBvaW50ZXIsIGZv
cgorCSAgIGV4YW1wbGUpLiAqLworCWQ2NCBmcmVlX2Jsb2NrczsKKworCS8qIG51bWJlciBvZiB1
c2VkIE9JRHMgYW5kIG1heGltYWwgdXNlZCBPSUQgYXJlIGxvZ2dlZCBzZXBhcmF0ZWx5IGZyb20K
KwkgICBzdXBlciBibG9jayAqLworCWQ2NCBucl9maWxlczsKKwlkNjQgbmV4dF9vaWQ7Cit9Owor
CisvKiBFYWNoIHdhbmRlciByZWNvcmQgKGV4Y2VwdCB0aGUgZmlyc3Qgb25lKSBoYXMgdW5pZmll
ZCBmb3JtYXQgd2l0aCB3YW5kZXIKKyAgIHJlY29yZCBoZWFkZXIgZm9sbG93ZWQgYnkgYW4gYXJy
YXkgb2YgbG9nIGVudHJpZXMgKi8KK3N0cnVjdCB3YW5kZXJfcmVjb3JkX2hlYWRlciB7CisJLyog
d2hlbiB0aGVyZSBpcyBubyBwcmVkZWZpbmVkIGxvY2F0aW9uIGZvciB3YW5kZXIgcmVjb3Jkcywg
dGhpcyBtYWdpYworCSAgIHN0cmluZyBzaG91bGQgaGVscCByZWlzZXI0ZnNjay4gKi8KKwljaGFy
IG1hZ2ljW1dBTkRFUl9SRUNPUkRfTUFHSUNfU0laRV07CisKKwkvKiB0cmFuc2FjdGlvbiBpZCAq
LworCWQ2NCBpZDsKKworCS8qIHRvdGFsIG51bWJlciBvZiB3YW5kZXIgcmVjb3JkcyBpbiBjdXJy
ZW50IHRyYW5zYWN0aW9uICAqLworCWQzMiB0b3RhbDsKKworCS8qIHRoaXMgYmxvY2sgbnVtYmVy
IGluIHRyYW5zYWN0aW9uICovCisJZDMyIHNlcmlhbDsKKworCS8qIG51bWJlciBvZiBwcmV2aW91
cyBibG9jayBpbiBjb21taXQgKi8KKwlkNjQgbmV4dF9ibG9jazsKK307CisKKy8qIFRoZSBmaXJz
dCB3YW5kZXIgcmVjb3JkICh0cmFuc2FjdGlvbiBoZWFkKSBvZiB3cml0dGVuIHRyYW5zYWN0aW9u
IGhhcyB0aGUKKyAgIHNwZWNpYWwgZm9ybWF0ICovCitzdHJ1Y3QgdHhfaGVhZGVyIHsKKwkvKiBt
YWdpYyBzdHJpbmcgbWFrZXMgZmlyc3QgYmxvY2sgaW4gdHJhbnNhY3Rpb24gZGlmZmVyZW50IGZy
b20gb3RoZXIKKwkgICBsb2dnZWQgYmxvY2tzLCBpdCBzaG91bGQgaGVscCBmc2NrLiAqLworCWNo
YXIgbWFnaWNbVFhfSEVBREVSX01BR0lDX1NJWkVdOworCisJLyogdHJhbnNhY3Rpb24gaWQgKi8K
KwlkNjQgaWQ7CisKKwkvKiB0b3RhbCBudW1iZXIgb2YgcmVjb3JkcyAoaW5jbHVkaW5nIHRoaXMg
Zmlyc3QgdHggaGVhZCkgaW4gdGhlCisJICAgdHJhbnNhY3Rpb24gKi8KKwlkMzIgdG90YWw7CisK
KwkvKiBhbGlnbiBuZXh0IGZpZWxkIHRvIDgtYnl0ZSBib3VuZGFyeTsgdGhpcyBmaWVsZCBhbHdh
eXMgaXMgemVybyAqLworCWQzMiBwYWRkaW5nOworCisJLyogYmxvY2sgbnVtYmVyIG9mIHByZXZp
b3VzIHRyYW5zYWN0aW9uIGhlYWQgKi8KKwlkNjQgcHJldl90eDsKKworCS8qIG5leHQgd2FuZGVy
IHJlY29yZCBsb2NhdGlvbiAqLworCWQ2NCBuZXh0X2Jsb2NrOworCisJLyogY29tbWl0dGVkIHZl
cnNpb25zIG9mIGZyZWUgYmxvY2tzIGNvdW50ZXIgKi8KKwlkNjQgZnJlZV9ibG9ja3M7CisKKwkv
KiBudW1iZXIgb2YgdXNlZCBPSURzIChucl9maWxlcykgYW5kIG1heGltYWwgdXNlZCBPSUQgYXJl
IGxvZ2dlZAorCSAgIHNlcGFyYXRlbHkgZnJvbSBzdXBlciBibG9jayAqLworCWQ2NCBucl9maWxl
czsKKwlkNjQgbmV4dF9vaWQ7Cit9OworCisvKiBBIHRyYW5zYWN0aW9uIGdldHMgd3JpdHRlbiB0
byBkaXNrIGFzIGEgc2V0IG9mIHdhbmRlciByZWNvcmRzIChlYWNoIHdhbmRlcgorICAgcmVjb3Jk
IHNpemUgaXMgZnMgYmxvY2spICovCisKKy8qIEFzIGl0IHdhcyB0b2xkIGFib3ZlIGEgd2FuZGVy
IFRoZSByZXN0IG9mIHdhbmRlciByZWNvcmQgaXMgZmlsbGVkIGJ5IHRoZXNlIGxvZyBlbnRyaWVz
LCB1bnVzZWQgc3BhY2UgZmlsbGVkCisgICBieSB6ZXJvZXMgKi8KK3N0cnVjdCB3YW5kZXJfZW50
cnkgeworCWQ2NCBvcmlnaW5hbDsJCS8qIGJsb2NrIG9yaWdpbmFsIGxvY2F0aW9uICovCisJZDY0
IHdhbmRlcmVkOwkJLyogYmxvY2sgd2FuZGVyZWQgbG9jYXRpb24gKi8KK307CisKKy8qIFJFSVNF
UjQgSk9VUk5BTCBXUklURVIgRlVOQ1RJT05TICAgKi8KKworZXh0ZXJuIGludCByZWlzZXI0X3dy
aXRlX2xvZ3MobG9uZyAqKTsKK2V4dGVybiBpbnQgcmVpc2VyNF9qb3VybmFsX3JlcGxheShzdHJ1
Y3Qgc3VwZXJfYmxvY2sgKik7CitleHRlcm4gaW50IHJlaXNlcjRfam91cm5hbF9yZWNvdmVyX3Ni
X2RhdGEoc3RydWN0IHN1cGVyX2Jsb2NrICopOworCitleHRlcm4gaW50IHJlaXNlcjRfaW5pdF9q
b3VybmFsX2luZm8oc3RydWN0IHN1cGVyX2Jsb2NrICopOworZXh0ZXJuIHZvaWQgcmVpc2VyNF9k
b25lX2pvdXJuYWxfaW5mbyhzdHJ1Y3Qgc3VwZXJfYmxvY2sgKik7CisKK2V4dGVybiBpbnQgd3Jp
dGVfam5vZGVfbGlzdChzdHJ1Y3QgbGlzdF9oZWFkICosIGZsdXNoX3F1ZXVlX3QgKiwgbG9uZyAq
LCBpbnQpOworCisjZW5kaWYJCQkJLyogX19GU19SRUlTRVI0X1dBTkRFUl9IX18gKi8KKworLyog
TWFrZSBMaW51cyBoYXBweS4KKyAgIExvY2FsIHZhcmlhYmxlczoKKyAgIGMtaW5kZW50YXRpb24t
c3R5bGU6ICJLJlIiCisgICBtb2RlLW5hbWU6ICJMQyIKKyAgIGMtYmFzaWMtb2Zmc2V0OiA4Cisg
ICB0YWItd2lkdGg6IDgKKyAgIGZpbGwtY29sdW1uOiA4MAorICAgc2Nyb2xsLXN0ZXA6IDEKKyAg
IEVuZDoKKyovCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2Zz
L3JlaXNlcjQvd3JpdGVvdXQuaCBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC93cml0ZW91dC5oCi0t
LSBsaW51eC01LjQuMTcub3JpZy9mcy9yZWlzZXI0L3dyaXRlb3V0LmgJMTk3MC0wMS0wMSAwMTow
MDowMC4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3dyaXRlb3V0
LmgJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODgyMjI0NTAgKzAxMDAKQEAgLTAsMCArMSwyMSBAQAor
LyogQ29weXJpZ2h0IDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBn
b3Zlcm5lZCBieSByZWlzZXI0L1JFQURNRSAgKi8KKworI2lmICFkZWZpbmVkIChfX0ZTX1JFSVNF
UjRfV1JJVEVPVVRfSF9fKQorCisjZGVmaW5lIFdSSVRFT1VUX1NJTkdMRV9TVFJFQU0gKDB4MSkK
KyNkZWZpbmUgV1JJVEVPVVRfRk9SX1BBR0VfUkVDTEFJTSAgKDB4MikKKyNkZWZpbmUgV1JJVEVP
VVRfRkxVU0hfRlVBICgweDQpCisKK2V4dGVybiBpbnQgcmVpc2VyNF9nZXRfd3JpdGVvdXRfZmxh
Z3Modm9pZCk7CisKKyNlbmRpZgkJCQkvKiBfX0ZTX1JFSVNFUjRfV1JJVEVPVVRfSF9fICovCisK
Ky8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6CisgICBjLWluZGVudGF0
aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBjLWJhc2ljLW9mZnNldDog
OAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogODAKKyAgIEVuZDoKKyovCmRpZmYg
LXVyTiAtLW5vLWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvem5vZGUu
YyBsaW51eC01LjQuMTcvZnMvcmVpc2VyNC96bm9kZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9m
cy9yZWlzZXI0L3pub2RlLmMJMTk3MC0wMS0wMSAwMTowMDowMC4wMDAwMDAwMDAgKzAxMDAKKysr
IGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3pub2RlLmMJMjAyMC0wMi0wNSAyMDo1Mzo0MS40ODky
MjI0NTggKzAxMDAKQEAgLTAsMCArMSwxMDI3IEBACisvKiBDb3B5cmlnaHQgMjAwMSwgMjAwMiwg
MjAwMyBieSBIYW5zIFJlaXNlciwgbGljZW5zaW5nIGdvdmVybmVkIGJ5CisgKiByZWlzZXI0L1JF
QURNRSAqLworLyogWm5vZGUgbWFuaXB1bGF0aW9uIGZ1bmN0aW9ucy4gKi8KKy8qIFpub2RlIGlz
IHRoZSBpbi1tZW1vcnkgaGVhZGVyIGZvciBhIHRyZWUgbm9kZS4gSXQgaXMgc3RvcmVkCisgICBz
ZXBhcmF0ZWx5IGZyb20gdGhlIG5vZGUgaXRzZWxmIHNvIHRoYXQgaXQgZG9lcyBub3QgZ2V0IHdy
aXR0ZW4gdG8KKyAgIGRpc2suICBJbiB0aGlzIHJlc3BlY3Qgem5vZGUgaXMgbGlrZSBidWZmZXIg
aGVhZCBvciBwYWdlIGhlYWQuIFdlCisgICBhbHNvIHVzZSB6bm9kZXMgZm9yIGFkZGl0aW9uYWwg
cmVpc2VyNCBzcGVjaWZpYyBwdXJwb3NlczoKKworICAgIC4gdGhleSBhcmUgb3JnYW5pemVkIGlu
dG8gdHJlZSBzdHJ1Y3R1cmUgd2hpY2ggaXMgYSBwYXJ0IG9mIHdob2xlCisgICAgICByZWlzZXI0
IHRyZWUuCisgICAgLiB0aGV5IGFyZSB1c2VkIHRvIGltcGxlbWVudCBub2RlIGdyYWluZWQgbG9j
a2luZworICAgIC4gdGhleSBhcmUgdXNlZCB0byBrZWVwIGFkZGl0aW9uYWwgc3RhdGUgYXNzb2Np
YXRlZCB3aXRoIGEKKyAgICAgIG5vZGUKKyAgICAuIHRoZXkgY29udGFpbiBsaW5rcyB0byBsaXN0
cyB1c2VkIGJ5IHRoZSB0cmFuc2FjdGlvbiBtYW5hZ2VyCisKKyAgIFpub2RlIGlzIGF0dGFjaGVk
IHRvIHNvbWUgdmFyaWFibGUgImJsb2NrIG51bWJlciIgd2hpY2ggaXMgaW5zdGFuY2Ugb2YKKyAg
IGZzL3JlaXNlcjQvdHJlZS5oOnJlaXNlcjRfYmxvY2tfbnIgdHlwZS4gWm5vZGUgY2FuIGV4aXN0
IHdpdGhvdXQKKyAgIGFwcHJvcHJpYXRlIG5vZGUgYmVpbmcgYWN0dWFsbHkgbG9hZGVkIGluIG1l
bW9yeS4gRXhpc3RlbmNlIG9mIHpub2RlIGl0c2VsZgorICAgaXMgcmVndWxhdGVkIGJ5IHJlZmVy
ZW5jZSBjb3VudCAoLT54X2NvdW50KSBpbiBpdC4gRWFjaCB0aW1lIHRocmVhZAorICAgYWNxdWly
ZXMgcmVmZXJlbmNlIHRvIHpub2RlIHRocm91Z2ggY2FsbCB0byB6Z2V0KCksIC0+eF9jb3VudCBp
cworICAgaW5jcmVtZW50ZWQgYW5kIGRlY3JlbWVudGVkIG9uIGNhbGwgdG8genB1dCgpLiAgRGF0
YSAoY29udGVudCBvZiBub2RlKSBhcmUKKyAgIGJyb3VnaHQgaW4gbWVtb3J5IHRocm91Z2ggY2Fs
bCB0byB6bG9hZCgpLCB3aGljaCBhbHNvIGluY3JlbWVudHMgLT5kX2NvdW50CisgICByZWZlcmVu
Y2UgY291bnRlci4gIHpsb2FkIGNhbiBibG9jayB3YWl0aW5nIG9uIElPLiAgQ2FsbCB0byB6cmVs
c2UoKQorICAgZGVjcmVhc2VzIHRoaXMgY291bnRlci4gQWxzbywgLT5jX2NvdW50IGtlZXBzIHRy
YWNrIG9mIG51bWJlciBvZiBjaGlsZAorICAgem5vZGVzIGFuZCBwcmV2ZW50cyBwYXJlbnQgem5v
ZGUgZnJvbSBiZWluZyByZWN5Y2xlZCB1bnRpbCBhbGwgb2YgaXRzCisgICBjaGlsZHJlbiBhcmUu
IC0+Y19jb3VudCBpcyBkZWNyZW1lbnRlZCB3aGVuZXZlciBjaGlsZCBnb2VzIG91dCBvZiBleGlz
dGVuY2UKKyAgIChiZWluZyBhY3R1YWxseSByZWN5Y2xlZCBpbiB6ZGVzdHJveSgpKSB3aGljaCBj
YW4gYmUgc29tZSB0aW1lIGFmdGVyIGxhc3QKKyAgIHJlZmVyZW5jZSB0byB0aGlzIGNoaWxkIGRp
ZXMgaWYgd2Ugc3VwcG9ydCBzb21lIGZvcm0gb2YgTFJVIGNhY2hlIGZvcgorICAgem5vZGVzLgor
CisqLworLyogRVZFUlkgWk5PREUnUyBTVE9SWQorCisgICAxLiBIaXMgaW5mYW5jeS4KKworICAg
T25jZSB1cG9uIGEgdGltZSwgdGhlIHpub2RlIHdhcyBib3JuIGRlZXAgaW5zaWRlIG9mIHpnZXQo
KSBieSBjYWxsIHRvCisgICB6YWxsb2MoKS4gQXQgdGhlIHJldHVybiBmcm9tIHpnZXQoKSB6bm9k
ZSBoYWQ6CisKKyAgICAuIHJlZmVyZW5jZSBjb3VudGVyICh4X2NvdW50KSBvZiAxCisgICAgLiBh
c3NpZ25lZCBibG9jayBudW1iZXIsIG1hcmtlZCBhcyB1c2VkIGluIGJpdG1hcAorICAgIC4gcG9p
bnRlciB0byBwYXJlbnQgem5vZGUuIFJvb3Qgem5vZGUgcGFyZW50IHBvaW50ZXIgcG9pbnRzCisg
ICAgICB0byBpdHMgZmF0aGVyOiAiZmFrZSIgem5vZGUuIFRoaXMsIGluIHR1cm4sIGhhcyBOVUxM
IHBhcmVudCBwb2ludGVyLgorICAgIC4gaGFzaCB0YWJsZSBsaW5rYWdlCisgICAgLiBubyBkYXRh
IGxvYWRlZCBmcm9tIGRpc2sKKyAgICAuIG5vIG5vZGUgcGx1Z2luCisgICAgLiBubyBzaWJsaW5n
IGxpbmthZ2UKKworICAgMi4gSGlzIGNoaWxkaG9vZAorCisgICBFYWNoIG5vZGUgaXMgZWl0aGVy
IGJyb3VnaHQgaW50byBtZW1vcnkgYXMgYSByZXN1bHQgb2YgdHJlZSB0cmF2ZXJzYWwsIG9yCisg
ICBjcmVhdGVkIGFmcmVzaCwgY3JlYXRpb24gb2YgdGhlIHJvb3QgYmVpbmcgYSBzcGVjaWFsIGNh
c2Ugb2YgdGhlIGxhdHRlci4gSW4KKyAgIGVpdGhlciBjYXNlIGl0J3MgaW5zZXJ0ZWQgaW50byBz
aWJsaW5nIGxpc3QuIFRoaXMgd2lsbCB0eXBpY2FsbHkgcmVxdWlyZQorICAgc29tZSBhbmNpbGxh
cnkgdHJlZSB0cmF2ZXJzaW5nLCBidXQgdWx0aW1hdGVseSBib3RoIHNpYmxpbmcgcG9pbnRlcnMg
d2lsbAorICAgZXhpc3QgYW5kIEpOT0RFX0xFRlRfQ09OTkVDVEVEIGFuZCBKTk9ERV9SSUdIVF9D
T05ORUNURUQgd2lsbCBiZSB0cnVlIGluCisgICB6am5vZGUuc3RhdGUuCisKKyAgIDMuIEhpcyB5
b3V0aC4KKworICAgSWYgem5vZGUgaXMgYm91bmQgdG8gYWxyZWFkeSBleGlzdGluZyBub2RlIGlu
IGEgdHJlZSwgaXRzIGNvbnRlbnQgaXMgcmVhZAorICAgZnJvbSB0aGUgZGlzayBieSBjYWxsIHRv
IHpsb2FkKCkuIEF0IHRoYXQgbW9tZW50LCBKTk9ERV9MT0FERUQgYml0IGlzIHNldAorICAgaW4g
empub2RlLnN0YXRlIGFuZCB6ZGF0YSgpIGZ1bmN0aW9uIHN0YXJ0cyB0byByZXR1cm4gbm9uIG51
bGwgZm9yIHRoaXMKKyAgIHpub2RlLiB6bG9hZCgpIGZ1cnRoZXIgY2FsbHMgenBhcnNlKCkgdGhh
dCBkZXRlcm1pbmVzIHdoaWNoIG5vZGUgbGF5b3V0CisgICB0aGlzIG5vZGUgaXMgcmVuZGVyZWQg
aW4sIGFuZCBzZXRzIC0+bnBsdWcgb24gc3VjY2Vzcy4KKworICAgSWYgem5vZGUgaXMgZm9yIG5l
dyBub2RlIGp1c3QgY3JlYXRlZCwgbWVtb3J5IGZvciBpdCBpcyBhbGxvY2F0ZWQgYW5kCisgICB6
aW5pdF9uZXcoKSBmdW5jdGlvbiBpcyBjYWxsZWQgdG8gaW5pdGlhbGlzZSBkYXRhLCBhY2NvcmRp
bmcgdG8gc2VsZWN0ZWQKKyAgIG5vZGUgbGF5b3V0LgorCisgICA0LiBIaXMgbWF0dXJpdHkuCisK
KyAgIEFmdGVyIHRoaXMgcG9pbnQsIHpub2RlIGxpbmdlcnMgaW4gbWVtb3J5IGZvciBzb21lIHRp
bWUuIFRocmVhZHMgY2FuCisgICBhY3F1aXJlIHJlZmVyZW5jZXMgdG8gem5vZGUgZWl0aGVyIGJ5
IGJsb2NrbnIgdGhyb3VnaCBjYWxsIHRvIHpnZXQoKSwgb3IgYnkKKyAgIGZvbGxvd2luZyBhIHBv
aW50ZXIgdG8gdW5hbGxvY2F0ZWQgem5vZGUgZnJvbSBpbnRlcm5hbCBpdGVtLiBFYWNoIHRpbWUK
KyAgIHJlZmVyZW5jZSB0byB6bm9kZSBpcyBvYnRhaW5lZCwgeF9jb3VudCBpcyBpbmNyZWFzZWQu
IFRocmVhZCBjYW4gcmVhZC93cml0ZQorICAgbG9jayB6bm9kZS4gWm5vZGUgZGF0YSBjYW4gYmUg
bG9hZGVkIHRocm91Z2ggY2FsbHMgdG8gemxvYWQoKSwgZF9jb3VudCB3aWxsCisgICBiZSBpbmNy
ZWFzZWQgYXBwcm9wcmlhdGVseS4gSWYgYWxsIHJlZmVyZW5jZXMgdG8gem5vZGUgYXJlIHJlbGVh
c2VkCisgICAoeF9jb3VudCBkcm9wcyB0byAwKSwgem5vZGUgaXMgbm90IHJlY3ljbGVkIGltbWVk
aWF0ZWx5LiBSYXRoZXIsIGl0IGlzCisgICBzdGlsbCBjYWNoZWQgaW4gdGhlIGhhc2ggdGFibGUg
aW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIGFjY2Vzc2VkCisgICBzaG9ydGx5LgorCisgICBU
aGVyZSBhcmUgdHdvIHdheXMgaW4gd2hpY2ggem5vZGUgZXhpc3RlbmNlIGNhbiBiZSB0ZXJtaW5h
dGVkOgorCisgICAgLiBzdWRkZW4gZGVhdGg6IG5vZGUgYm91bmQgdG8gdGhpcyB6bm9kZSBpcyBy
ZW1vdmVkIGZyb20gdGhlIHRyZWUKKyAgICAuIG92ZXJwb3B1bGF0aW9uOiB6bm9kZSBpcyBwdXJn
ZWQgb3V0IG9mIG1lbW9yeSBkdWUgdG8gbWVtb3J5IHByZXNzdXJlCisKKyAgIDUuIEhpcyBkZWF0
aC4KKworICAgRGVhdGggaXMgY29tcGxleCBwcm9jZXNzLgorCisgICBXaGVuIHdlIGlycmV2b2Nh
Ymx5IGNvbW1pdCBvdXJzZWx2ZXMgdG8gZGVjaXNpb24gdG8gcmVtb3ZlIG5vZGUgZnJvbSB0aGUK
KyAgIHRyZWUsIEpOT0RFX0hFQVJEX0JBTlNIRUUgYml0IGlzIHNldCBpbiB6am5vZGUuc3RhdGUg
b2YgY29ycmVzcG9uZGluZworICAgem5vZGUuIFRoaXMgaXMgZG9uZSBlaXRoZXIgaW4gLT5raWxs
X2hvb2soKSBvZiBpbnRlcm5hbCBpdGVtIG9yIGluCisgICByZWlzZXI0X2tpbGxfcm9vdCgpIGZ1
bmN0aW9uIHdoZW4gdHJlZSByb290IGlzIHJlbW92ZWQuCisKKyAgIEF0IHRoaXMgbW9tZW50IHpu
b2RlIHN0aWxsIGhhczoKKworICAgIC4gbG9ja3MgaGVsZCBvbiBpdCwgbmVjZXNzYXJ5IHdyaXRl
IG9uZXMKKyAgICAuIHJlZmVyZW5jZXMgdG8gaXQKKyAgICAuIGRpc2sgYmxvY2sgYXNzaWduZWQg
dG8gaXQKKyAgICAuIGRhdGEgbG9hZGVkIGZyb20gdGhlIGRpc2sKKyAgICAuIHBlbmRpbmcgcmVx
dWVzdHMgZm9yIGxvY2sKKworICAgQnV0IG9uY2UgSk5PREVfSEVBUkRfQkFOU0hFRSBiaXQgc2V0
LCBsYXN0IGNhbGwgdG8gdW5sb2NrX3pub2RlKCkgZG9lcyBub2RlCisgICBkZWxldGlvbi4gTm9k
ZSBkZWxldGlvbiBpbmNsdWRlcyB0d28gcGhhc2VzLiBGaXJzdCBhbGwgd2F5cyB0byBnZXQKKyAg
IHJlZmVyZW5jZXMgdG8gdGhhdCB6bm9kZSAoc2libGluZyBhbmQgcGFyZW50IGxpbmtzIGFuZCBo
YXNoIGxvb2t1cCB1c2luZworICAgYmxvY2sgbnVtYmVyIHN0b3JlZCBpbiBwYXJlbnQgbm9kZSkg
c2hvdWxkIGJlIGRlbGV0ZWQgLS0gaXQgaXMgZG9uZSB0aHJvdWdoCisgICBzaWJsaW5nX2xpc3Rf
cmVtb3ZlKCksIGFsc28gd2UgYXNzdW1lIHRoYXQgbm9ib2R5IHVzZXMgZG93biBsaW5rIGZyb20K
KyAgIHBhcmVudCBub2RlIGR1ZSB0byBpdHMgbm9uZXhpc3RlbmNlIG9yIHByb3BlciBwYXJlbnQg
bm9kZSBsb2NraW5nIGFuZAorICAgbm9ib2R5IHVzZXMgcGFyZW50IHBvaW50ZXJzIGZyb20gY2hp
bGRyZW4gZHVlIHRvIGFic2VuY2Ugb2YgdGhlbS4gU2Vjb25kIHdlCisgICBpbnZhbGlkYXRlIGFs
bCBwZW5kaW5nIGxvY2sgcmVxdWVzdHMgd2hpY2ggc3RpbGwgYXJlIG9uIHpub2RlJ3MgbG9jawor
ICAgcmVxdWVzdCBxdWV1ZSwgdGhpcyBpcyBkb25lIGJ5IHJlaXNlcjRfaW52YWxpZGF0ZV9sb2Nr
KCkuIEFub3RoZXIKKyAgIEpOT0RFX0lTX0RZSU5HIHpub2RlIHN0YXR1cyBiaXQgaXMgdXNlZCB0
byBpbnZhbGlkYXRlIHBlbmRpbmcgbG9jayByZXF1ZXN0cy4KKyAgIE9uY2UgaXQgc2V0IGFsbCBy
ZXF1ZXN0ZXJzIGFyZSBmb3JjZWQgdG8gcmV0dXJuIC1FSU5WQUwgZnJvbQorICAgbG9uZ3Rlcm1f
bG9ja196bm9kZSgpLiBGdXR1cmUgbG9ja2luZyBhdHRlbXB0cyBhcmUgbm90IHBvc3NpYmxlIGJl
Y2F1c2UgYWxsCisgICB3YXlzIHRvIGdldCByZWZlcmVuY2VzIHRvIHRoYXQgem5vZGUgYXJlIHJl
bW92ZWQgYWxyZWFkeS4gTGFzdCwgbm9kZSBpcworICAgdW5jYXB0dXJlZCBmcm9tIHRyYW5zYWN0
aW9uLgorCisgICBXaGVuIGxhc3QgcmVmZXJlbmNlIHRvIHRoZSBkeWluZyB6bm9kZSBpcyBqdXN0
IGFib3V0IHRvIGJlIHJlbGVhc2VkLAorICAgYmxvY2sgbnVtYmVyIGZvciB0aGlzIGxvY2sgaXMg
cmVsZWFzZWQgYW5kIHpub2RlIGlzIHJlbW92ZWQgZnJvbSB0aGUKKyAgIGhhc2ggdGFibGUuCisK
KyAgIE5vdyB6bm9kZSBjYW4gYmUgcmVjeWNsZWQuCisKKyAgIFtpdCdzIHBvc3NpYmxlIHRvIGZy
ZWUgYml0bWFwIGJsb2NrIGFuZCByZW1vdmUgem5vZGUgZnJvbSB0aGUgaGFzaAorICAgdGFibGUg
d2hlbiBsYXN0IGxvY2sgaXMgcmVsZWFzZWQuIFRoaXMgd2lsbCByZXN1bHQgaW4gaGF2aW5nCisg
ICByZWZlcmVuY2VkIGJ1dCBjb21wbGV0ZWx5IG9ycGhhbmVkIHpub2RlXQorCisgICA2LiBMaW1i
bworCisgICBBcyBoYXZlIGJlZW4gbWVudGlvbmVkIGFib3ZlIHpub2RlcyB3aXRoIHJlZmVyZW5j
ZSBjb3VudGVyIDAgYXJlCisgICBzdGlsbCBjYWNoZWQgaW4gYSBoYXNoIHRhYmxlLiBPbmNlIG1l
bW9yeSBwcmVzc3VyZSBpbmNyZWFzZXMgdGhleSBhcmUKKyAgIHB1cmdlZCBvdXQgb2YgdGhlcmUg
W3RoaXMgcmVxdWlyZXMgc29tZXRoaW5nIGxpa2UgTFJVIGxpc3QgZm9yCisgICBlZmZpY2llbnQg
aW1wbGVtZW50YXRpb24uIExSVSBsaXN0IHdvdWxkIGFsc28gZ3JlYXRseSBzaW1wbGlmeQorICAg
aW1wbGVtZW50YXRpb24gb2YgY29vcmQgY2FjaGUgdGhhdCB3b3VsZCBpbiB0aGlzIGNhc2UgbW9y
cGggdG8ganVzdAorICAgc2Nhbm5pbmcgc29tZSBpbml0aWFsIHNlZ21lbnQgb2YgTFJVIGxpc3Rd
LiBEYXRhIGxvYWRlZCBpbnRvCisgICB1bnJlZmVyZW5jZWQgem5vZGUgYXJlIGZsdXNoZWQgYmFj
ayB0byB0aGUgZHVyYWJsZSBzdG9yYWdlIGlmCisgICBuZWNlc3NhcnkgYW5kIG1lbW9yeSBpcyBm
cmVlZC4gWm5vZGVzIHRoZW1zZWx2ZXMgY2FuIGJlIHJlY3ljbGVkIGF0CisgICB0aGlzIHBvaW50
IHRvby4KKworKi8KKworI2luY2x1ZGUgImRlYnVnLmgiCisjaW5jbHVkZSAiZGZvcm1hdC5oIgor
I2luY2x1ZGUgImtleS5oIgorI2luY2x1ZGUgImNvb3JkLmgiCisjaW5jbHVkZSAicGx1Z2luL3Bs
dWdpbl9oZWFkZXIuaCIKKyNpbmNsdWRlICJwbHVnaW4vbm9kZS9ub2RlLmgiCisjaW5jbHVkZSAi
cGx1Z2luL3BsdWdpbi5oIgorI2luY2x1ZGUgInR4bm1nci5oIgorI2luY2x1ZGUgImpub2RlLmgi
CisjaW5jbHVkZSAiem5vZGUuaCIKKyNpbmNsdWRlICJibG9ja19hbGxvYy5oIgorI2luY2x1ZGUg
InRyZWUuaCIKKyNpbmNsdWRlICJ0cmVlX3dhbGsuaCIKKyNpbmNsdWRlICJzdXBlci5oIgorI2lu
Y2x1ZGUgInJlaXNlcjQuaCIKKworI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KKyNpbmNsdWRl
IDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNsdWRlIDxs
aW51eC9lcnIuaD4KKworc3RhdGljIHpfaGFzaF90YWJsZSAqZ2V0X2h0YWJsZShyZWlzZXI0X3Ry
ZWUgKiwKKwkJCQljb25zdCByZWlzZXI0X2Jsb2NrX25yICogY29uc3QgYmxvY2tucik7CitzdGF0
aWMgel9oYXNoX3RhYmxlICp6bm9kZV9nZXRfaHRhYmxlKGNvbnN0IHpub2RlICopOworc3RhdGlj
IHZvaWQgemRyb3Aoem5vZGUgKik7CisKKy8qIGhhc2ggdGFibGUgc3VwcG9ydCAqLworCisvKiBj
b21wYXJlIHR3byBibG9jayBudW1iZXJzIGZvciBlcXVhbGl0eS4gVXNlZCBieSBoYXNoLXRhYmxl
IG1hY3JvcyAqLworc3RhdGljIGlubGluZSBpbnQKK2Jsa25yZXEoY29uc3QgcmVpc2VyNF9ibG9j
a19uciAqIGIxLCBjb25zdCByZWlzZXI0X2Jsb2NrX25yICogYjIpCit7CisJYXNzZXJ0KCJuaWtp
dGEtNTM0IiwgYjEgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtNTM1IiwgYjIgIT0gTlVMTCk7
CisKKwlyZXR1cm4gKmIxID09ICpiMjsKK30KKworLyogSGFzaCB6bm9kZSBieSBibG9jayBudW1i
ZXIuIFVzZWQgYnkgaGFzaC10YWJsZSBtYWNyb3MgKi8KKy8qIEF1ZGl0ZWQgYnk6IHVta2EgKDIw
MDIuMDYuMTEpICovCitzdGF0aWMgaW5saW5lIF9fdTMyCitibGtucmhhc2hmbih6X2hhc2hfdGFi
bGUgKiB0YWJsZSwgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGIpCit7CisJYXNzZXJ0KCJuaWtp
dGEtNTM2IiwgYiAhPSBOVUxMKTsKKworCXJldHVybiAqYiAmIChSRUlTRVI0X1pOT0RFX0hBU0hf
VEFCTEVfU0laRSAtIDEpOworfQorCisvKiBUaGUgaGFzaCB0YWJsZSBkZWZpbml0aW9uICovCisj
ZGVmaW5lIEtNQUxMT0Moc2l6ZSkgcmVpc2VyNF92bWFsbG9jKHNpemUpCisjZGVmaW5lIEtGUkVF
KHB0ciwgc2l6ZSkgdmZyZWUocHRyKQorVFlQRV9TQUZFX0hBU0hfREVGSU5FKHosIHpub2RlLCBy
ZWlzZXI0X2Jsb2NrX25yLCB6am5vZGUua2V5LnosIHpqbm9kZS5saW5rLnosCisJCSAgICAgIGJs
a25yaGFzaGZuLCBibGtucmVxKTsKKyN1bmRlZiBLRlJFRQorI3VuZGVmIEtNQUxMT0MKKworLyog
c2xhYiBmb3Igem5vZGVzICovCitzdGF0aWMgc3RydWN0IGttZW1fY2FjaGUgKnpub2RlX2NhY2hl
OworCitpbnQgem5vZGVfc2hpZnRfb3JkZXI7CisKKy8qKgorICogaW5pdF96bm9kZXMgLSBjcmVh
dGUgem5vZGUgY2FjaGUKKyAqCisgKiBJbml0aWFsaXplcyBzbGFiIGNhY2hlIG9mIHpub2Rlcy4g
SXQgaXMgcGFydCBvZiByZWlzZXI0IG1vZHVsZSBpbml0aWFsaXphdGlvbi4KKyAqLworaW50IGlu
aXRfem5vZGVzKHZvaWQpCit7CisJem5vZGVfY2FjaGUgPSBrbWVtX2NhY2hlX2NyZWF0ZSgiem5v
ZGUiLCBzaXplb2Yoem5vZGUpLCAwLAorCQkJCQlTTEFCX0hXQ0FDSEVfQUxJR04gfAorCQkJCQlT
TEFCX1JFQ0xBSU1fQUNDT1VOVCwgTlVMTCk7CisJaWYgKHpub2RlX2NhY2hlID09IE5VTEwpCisJ
CXJldHVybiBSRVRFUlIoLUVOT01FTSk7CisKKwlmb3IgKHpub2RlX3NoaWZ0X29yZGVyID0gMDsg
KDEgPDwgem5vZGVfc2hpZnRfb3JkZXIpIDwgc2l6ZW9mKHpub2RlKTsKKwkgICAgICsrem5vZGVf
c2hpZnRfb3JkZXIpOworCS0tem5vZGVfc2hpZnRfb3JkZXI7CisJcmV0dXJuIDA7Cit9CisKKy8q
KgorICogZG9uZV96bm9kZXMgLSBkZWxldGUgem5vZGUgY2FjaGUKKyAqCisgKiBUaGlzIGlzIGNh
bGxlZCBvbiByZWlzZXI0IG1vZHVsZSB1bmxvYWRpbmcgb3Igc3lzdGVtIHNodXRkb3duLgorICov
Cit2b2lkIGRvbmVfem5vZGVzKHZvaWQpCit7CisJZGVzdHJveV9yZWlzZXI0X2NhY2hlKCZ6bm9k
ZV9jYWNoZSk7Cit9CisKKy8qIGNhbGwgdGhpcyB0byBpbml0aWFsaXNlIHRyZWUgb2Ygem5vZGVz
ICovCitpbnQgem5vZGVzX3RyZWVfaW5pdChyZWlzZXI0X3RyZWUgKiB0cmVlIC8qIHRyZWUgdG8g
aW5pdGlhbGlzZSB6bm9kZXMgZm9yICovICkKK3sKKwlpbnQgcmVzdWx0OworCWFzc2VydCgidW1r
YS0wNTAiLCB0cmVlICE9IE5VTEwpOworCisJcndsb2NrX2luaXQoJnRyZWUtPmRrX2xvY2spOwor
CisJcmVzdWx0ID0gel9oYXNoX2luaXQoJnRyZWUtPnpoYXNoX3RhYmxlLCBSRUlTRVI0X1pOT0RF
X0hBU0hfVEFCTEVfU0laRSk7CisJaWYgKHJlc3VsdCAhPSAwKQorCQlyZXR1cm4gcmVzdWx0Owor
CXJlc3VsdCA9IHpfaGFzaF9pbml0KCZ0cmVlLT56ZmFrZV90YWJsZSwgUkVJU0VSNF9aTk9ERV9I
QVNIX1RBQkxFX1NJWkUpOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIGZyZWUgdGhpcyB6bm9k
ZSAqLwordm9pZCB6ZnJlZSh6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gZnJlZSAqLyApCit7CisJ
YXNzZXJ0KCJuaWtpdGEtNDY1Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMTIw
Iiwgem5vZGVfcGFnZShub2RlKSA9PSBOVUxMKTsKKwlhc3NlcnQoIm5pa2l0YS0yMzAxIiwgbGlz
dF9lbXB0eV9jYXJlZnVsKCZub2RlLT5sb2NrLm93bmVycykpOworCWFzc2VydCgibmlraXRhLTIz
MDIiLCBsaXN0X2VtcHR5X2NhcmVmdWwoJm5vZGUtPmxvY2sucmVxdWVzdG9ycykpOworCWFzc2Vy
dCgibmlraXRhLTI2NjMiLCAobGlzdF9lbXB0eV9jYXJlZnVsKCZaSk5PREUobm9kZSktPmNhcHR1
cmVfbGluaykgJiYKKwkJCSAgICAgICBOT0RFX0xJU1QoWkpOT0RFKG5vZGUpKSA9PSBOT1RfQ0FQ
VFVSRUQpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjIwIiwgbGlzdF9lbXB0eSgmWkpOT0RFKG5vZGUp
LT5qbm9kZXMpKTsKKwlhc3NlcnQoIm5pa2l0YS0zMjkzIiwgIXpub2RlX2lzX3JpZ2h0X2Nvbm5l
Y3RlZChub2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzI5NCIsICF6bm9kZV9pc19sZWZ0X2Nvbm5l
Y3RlZChub2RlKSk7CisJYXNzZXJ0KCJuaWtpdGEtMzI5NSIsIG5vZGUtPmxlZnQgPT0gTlVMTCk7
CisJYXNzZXJ0KCJuaWtpdGEtMzI5NiIsIG5vZGUtPnJpZ2h0ID09IE5VTEwpOworCisJLyogbm90
IHlldCBwaGFzaF9qbm9kZV9kZXN0cm95KFpKTk9ERShub2RlKSk7ICovCisKKwlrbWVtX2NhY2hl
X2ZyZWUoem5vZGVfY2FjaGUsIG5vZGUpOworfQorCisvKiBjYWxsIHRoaXMgdG8gZnJlZSB0cmVl
IG9mIHpub2RlcyAqLwordm9pZCB6bm9kZXNfdHJlZV9kb25lKHJlaXNlcjRfdHJlZSAqIHRyZWUg
LyogdHJlZSB0byBmaW5pc2ggd2l0aCB6bm9kZXMgb2YgKi8gKQoreworCXpub2RlICpub2RlOwor
CXpub2RlICpuZXh0OworCXpfaGFzaF90YWJsZSAqenRhYmxlOworCisJLyogc2NhbiB6bm9kZSBo
YXNoLXRhYmxlcyBhbmQga2lsbCBhbGwgem5vZGVzLCB0aGVuIGZyZWUgaGFzaCB0YWJsZXMKKwkg
KiB0aGVtc2VsdmVzLiAqLworCisJYXNzZXJ0KCJuaWtpdGEtNzk1IiwgdHJlZSAhPSBOVUxMKTsK
KworCXp0YWJsZSA9ICZ0cmVlLT56aGFzaF90YWJsZTsKKworCWlmICh6dGFibGUtPl90YWJsZSAh
PSBOVUxMKSB7CisJCWZvcl9hbGxfaW5faHRhYmxlKHp0YWJsZSwgeiwgbm9kZSwgbmV4dCkgewor
CQkJbm9kZS0+Y19jb3VudCA9IDA7CisJCQlub2RlLT5pbl9wYXJlbnQubm9kZSA9IE5VTEw7CisJ
CQlhc3NlcnQoIm5pa2l0YS0yMTc5IiwgYXRvbWljX3JlYWQoJlpKTk9ERShub2RlKS0+eF9jb3Vu
dCkgPT0gMCk7CisJCQl6ZHJvcChub2RlKTsKKwkJfQorCisJCXpfaGFzaF9kb25lKCZ0cmVlLT56
aGFzaF90YWJsZSk7CisJfQorCisJenRhYmxlID0gJnRyZWUtPnpmYWtlX3RhYmxlOworCisJaWYg
KHp0YWJsZS0+X3RhYmxlICE9IE5VTEwpIHsKKwkJZm9yX2FsbF9pbl9odGFibGUoenRhYmxlLCB6
LCBub2RlLCBuZXh0KSB7CisJCQlub2RlLT5jX2NvdW50ID0gMDsKKwkJCW5vZGUtPmluX3BhcmVu
dC5ub2RlID0gTlVMTDsKKwkJCWFzc2VydCgibmlraXRhLTIxNzkiLCBhdG9taWNfcmVhZCgmWkpO
T0RFKG5vZGUpLT54X2NvdW50KSA9PSAwKTsKKwkJCXpkcm9wKG5vZGUpOworCQl9CisKKwkJel9o
YXNoX2RvbmUoJnRyZWUtPnpmYWtlX3RhYmxlKTsKKwl9Cit9CisKKy8qIFpOT0RFIFNUUlVDVFVS
RVMgKi8KKworLyogYWxsb2NhdGUgZnJlc2ggem5vZGUgKi8KK3pub2RlICp6YWxsb2MoZ2ZwX3Qg
Z2ZwX2ZsYWcgLyogYWxsb2NhdGlvbiBmbGFnICovICkKK3sKKwl6bm9kZSAqbm9kZTsKKworCW5v
ZGUgPSBrbWVtX2NhY2hlX2FsbG9jKHpub2RlX2NhY2hlLCBnZnBfZmxhZyk7CisJcmV0dXJuIG5v
ZGU7Cit9CisKKy8qIEluaXRpYWxpemUgZmllbGRzIG9mIHpub2RlCisgICBAbm9kZTogICAgem5v
ZGUgdG8gaW5pdGlhbGl6ZTsKKyAgIEBwYXJlbnQ6ICBwYXJlbnQgem5vZGU7CisgICBAdHJlZTog
ICAgdHJlZSB3ZSBhcmUgaW4uICovCit2b2lkIHppbml0KHpub2RlICogbm9kZSwgY29uc3Qgem5v
ZGUgKiBwYXJlbnQsIHJlaXNlcjRfdHJlZSAqIHRyZWUpCit7CisJYXNzZXJ0KCJuaWtpdGEtNDY2
Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoInVta2EtMjY4IiwgY3VycmVudF90cmVlICE9IE5V
TEwpOworCisJbWVtc2V0KG5vZGUsIDAsIHNpemVvZiAqbm9kZSk7CisKKwlhc3NlcnQoInVta2Et
MDUxIiwgdHJlZSAhPSBOVUxMKTsKKworCWpub2RlX2luaXQoJm5vZGUtPnpqbm9kZSwgdHJlZSwg
Sk5PREVfRk9STUFUVEVEX0JMT0NLKTsKKwlyZWlzZXI0X2luaXRfbG9jaygmbm9kZS0+bG9jayk7
CisJaW5pdF9wYXJlbnRfY29vcmQoJm5vZGUtPmluX3BhcmVudCwgcGFyZW50KTsKK30KKworLyoK
KyAqIHJlbW92ZSB6bm9kZSBmcm9tIGluZGljZXMuIFRoaXMgaXMgY2FsbGVkIGpwdXQoKSB3aGVu
IGxhc3QgcmVmZXJlbmNlIG9uCisgKiB6bm9kZSBpcyByZWxlYXNlZC4KKyAqLwordm9pZCB6bm9k
ZV9yZW1vdmUoem5vZGUgKiBub2RlIC8qIHpub2RlIHRvIHJlbW92ZSAqLyAsIHJlaXNlcjRfdHJl
ZSAqIHRyZWUpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjEwOCIsIG5vZGUgIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtNDcwIiwgbm9kZS0+Y19jb3VudCA9PSAwKTsKKwlhc3NlcnRfcndfd3JpdGVf
bG9ja2VkKCYodHJlZS0+dHJlZV9sb2NrKSk7CisKKwkvKiByZW1vdmUgcmVmZXJlbmNlIHRvIHRo
aXMgem5vZGUgZnJvbSBjYmsgY2FjaGUgKi8KKwljYmtfY2FjaGVfaW52YWxpZGF0ZShub2RlLCB0
cmVlKTsKKworCS8qIHVwZGF0ZSBjX2NvdW50IG9mIHBhcmVudCAqLworCWlmICh6bm9kZV9wYXJl
bnQobm9kZSkgIT0gTlVMTCkgeworCQlhc3NlcnQoIm5pa2l0YS00NzIiLCB6bm9kZV9wYXJlbnQo
bm9kZSktPmNfY291bnQgPiAwKTsKKwkJLyogZmF0aGVyLCBvbnRvIHlvdXIgaGFuZHMgSSBmb3J3
YXJkIG15IHNwaXJpdC4uLiAqLworCQl6bm9kZV9wYXJlbnQobm9kZSktPmNfY291bnQtLTsKKwkJ
bm9kZS0+aW5fcGFyZW50Lm5vZGUgPSBOVUxMOworCX0gZWxzZSB7CisJCS8qIG9ycGhhbmVkIHpu
b2RlPyEgUm9vdD8gKi8KKwl9CisKKwkvKiByZW1vdmUgem5vZGUgZnJvbSBoYXNoLXRhYmxlICov
CisJel9oYXNoX3JlbW92ZV9yY3Uoem5vZGVfZ2V0X2h0YWJsZShub2RlKSwgbm9kZSk7Cit9CisK
Ky8qIHpkcm9wKCkgLS0gUmVtb3ZlIHpub2RlIGZyb20gdGhlIHRyZWUuCisKKyAgIFRoaXMgaXMg
Y2FsbGVkIHdoZW4gem5vZGUgaXMgcmVtb3ZlZCBmcm9tIHRoZSBtZW1vcnkuICovCitzdGF0aWMg
dm9pZCB6ZHJvcCh6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gZmluaXNoIHdpdGggKi8gKQorewor
CWpkcm9wKFpKTk9ERShub2RlKSk7Cit9CisKKy8qCisgKiBwdXQgem5vZGUgaW50byByaWdodCBw
bGFjZSBpbiB0aGUgaGFzaCB0YWJsZS4gVGhpcyBpcyBjYWxsZWQgYnkgcmVsb2NhdGUKKyAqIGNv
ZGUuCisgKi8KK2ludCB6bm9kZV9yZWhhc2goem5vZGUgKiBub2RlIC8qIG5vZGUgdG8gcmVoYXNo
ICovICwKKwkJIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBuZXdfYmxvY2tfbnIgLyogbmV3IGJs
b2NrIG51bWJlciAqLyApCit7CisJel9oYXNoX3RhYmxlICpvbGR0YWJsZTsKKwl6X2hhc2hfdGFi
bGUgKm5ld3RhYmxlOworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgibmlraXRhLTIw
MTgiLCBub2RlICE9IE5VTEwpOworCisJdHJlZSA9IHpub2RlX2dldF90cmVlKG5vZGUpOworCW9s
ZHRhYmxlID0gem5vZGVfZ2V0X2h0YWJsZShub2RlKTsKKwluZXd0YWJsZSA9IGdldF9odGFibGUo
dHJlZSwgbmV3X2Jsb2NrX25yKTsKKworCXdyaXRlX2xvY2tfdHJlZSh0cmVlKTsKKwkvKiByZW1v
dmUgem5vZGUgZnJvbSBoYXNoLXRhYmxlICovCisJel9oYXNoX3JlbW92ZV9yY3Uob2xkdGFibGUs
IG5vZGUpOworCisJLyogYXNzZXJ0aW9uIG5vIGxvbmdlciB2YWxpZCBkdWUgdG8gUkNVICovCisJ
LyogYXNzZXJ0KCJuaWtpdGEtMjAxOSIsIHpfaGFzaF9maW5kKG5ld3RhYmxlLCBuZXdfYmxvY2tf
bnIpID09IE5VTEwpOyAqLworCisJLyogdXBkYXRlIGJsb2NrbnIgKi8KKwl6bm9kZV9zZXRfYmxv
Y2sobm9kZSwgbmV3X2Jsb2NrX25yKTsKKwlub2RlLT56am5vZGUua2V5LnogPSAqbmV3X2Jsb2Nr
X25yOworCisJLyogaW5zZXJ0IGl0IGludG8gaGFzaCAqLworCXpfaGFzaF9pbnNlcnRfcmN1KG5l
d3RhYmxlLCBub2RlKTsKKwl3cml0ZV91bmxvY2tfdHJlZSh0cmVlKTsKKwlyZXR1cm4gMDsKK30K
KworLyogWk5PREUgTE9PS1VQLCBHRVQsIFBVVCAqLworCisvKiB6bG9vaygpIC0gZ2V0IHpub2Rl
IHdpdGggZ2l2ZW4gYmxvY2tfbnIgaW4gYSBoYXNoIHRhYmxlIG9yIHJldHVybiBOVUxMCisKKyAg
IElmIHJlc3VsdCBpcyBub24tTlVMTCB0aGVuIHRoZSB6bm9kZSdzIHhfY291bnQgaXMgaW5jcmVt
ZW50ZWQuICBJbnRlcm5hbCB2ZXJzaW9uCisgICBhY2NlcHRzIHByZS1jb21wdXRlZCBoYXNoIGlu
ZGV4LiAgVGhlIGhhc2ggdGFibGUgaXMgYWNjZXNzZWQgdW5kZXIgY2FsbGVyJ3MKKyAgIHRyZWUt
Pmhhc2hfbG9jay4KKyovCit6bm9kZSAqemxvb2socmVpc2VyNF90cmVlICogdHJlZSwgY29uc3Qg
cmVpc2VyNF9ibG9ja19uciAqIGNvbnN0IGJsb2NrbnIpCit7CisJem5vZGUgKnJlc3VsdDsKKwlf
X3UzMiBoYXNoOworCXpfaGFzaF90YWJsZSAqaHRhYmxlOworCisJYXNzZXJ0KCJqbWFjZC01MDYi
LCB0cmVlICE9IE5VTEwpOworCWFzc2VydCgiam1hY2QtNTA3IiwgYmxvY2tuciAhPSBOVUxMKTsK
KworCWh0YWJsZSA9IGdldF9odGFibGUodHJlZSwgYmxvY2tucik7CisJaGFzaCA9IGJsa25yaGFz
aGZuKGh0YWJsZSwgYmxvY2tucik7CisKKwlyY3VfcmVhZF9sb2NrKCk7CisJcmVzdWx0ID0gel9o
YXNoX2ZpbmRfaW5kZXgoaHRhYmxlLCBoYXNoLCBibG9ja25yKTsKKworCWlmIChyZXN1bHQgIT0g
TlVMTCkgeworCQlhZGRfeF9yZWYoWkpOT0RFKHJlc3VsdCkpOworCQlyZXN1bHQgPSB6bm9kZV9y
aXBfY2hlY2sodHJlZSwgcmVzdWx0KTsKKwl9CisJcmN1X3JlYWRfdW5sb2NrKCk7CisKKwlyZXR1
cm4gcmVzdWx0OworfQorCisvKiByZXR1cm4gaGFzaCB0YWJsZSB3aGVyZSB6bm9kZSB3aXRoIGJs
b2NrIEBibG9ja25yIGlzIChvciBzaG91bGQgYmUpCisgKiBzdG9yZWQgKi8KK3N0YXRpYyB6X2hh
c2hfdGFibGUgKmdldF9odGFibGUocmVpc2VyNF90cmVlICogdHJlZSwKKwkJCQljb25zdCByZWlz
ZXI0X2Jsb2NrX25yICogY29uc3QgYmxvY2tucikKK3sKKwl6X2hhc2hfdGFibGUgKnRhYmxlOwor
CWlmIChpc19kaXNrX2FkZHJfdW5hbGxvY2F0ZWQoYmxvY2tucikpCisJCXRhYmxlID0gJnRyZWUt
PnpmYWtlX3RhYmxlOworCWVsc2UKKwkJdGFibGUgPSAmdHJlZS0+emhhc2hfdGFibGU7CisJcmV0
dXJuIHRhYmxlOworfQorCisvKiByZXR1cm4gaGFzaCB0YWJsZSB3aGVyZSB6bm9kZSBAbm9kZSBp
cyAob3Igc2hvdWxkIGJlKSBzdG9yZWQgKi8KK3N0YXRpYyB6X2hhc2hfdGFibGUgKnpub2RlX2dl
dF9odGFibGUoY29uc3Qgem5vZGUgKiBub2RlKQoreworCXJldHVybiBnZXRfaHRhYmxlKHpub2Rl
X2dldF90cmVlKG5vZGUpLCB6bm9kZV9nZXRfYmxvY2sobm9kZSkpOworfQorCisvKiB6Z2V0KCkg
LSBnZXQgem5vZGUgZnJvbSBoYXNoIHRhYmxlLCBhbGxvY2F0aW5nIGl0IGlmIG5lY2Vzc2FyeS4K
KworICAgRmlyc3QgYSBjYWxsIHRvIHpsb29rLCBsb2NhdGluZyBhIHgtcmVmZXJlbmNlZCB6bm9k
ZSBpZiBvbmUKKyAgIGV4aXN0cy4gIElmIHpub2RlIGlzIG5vdCBmb3VuZCwgYWxsb2NhdGUgbmV3
IG9uZSBhbmQgcmV0dXJuLiAgUmVzdWx0CisgICBpcyByZXR1cm5lZCB3aXRoIHhfY291bnQgcmVm
ZXJlbmNlIGluY3JlYXNlZC4KKworICAgTE9DS1MgVEFLRU46ICAgVFJFRV9MT0NLLCBaTk9ERV9M
T0NLCisgICBMT0NLIE9SREVSSU5HOiBOT05FCisqLworem5vZGUgKnpnZXQocmVpc2VyNF90cmVl
ICogdHJlZSwKKwkgICAgY29uc3QgcmVpc2VyNF9ibG9ja19uciAqIGNvbnN0IGJsb2NrbnIsCisJ
ICAgIHpub2RlICogcGFyZW50LCB0cmVlX2xldmVsIGxldmVsLCBnZnBfdCBnZnBfZmxhZykKK3sK
Kwl6bm9kZSAqcmVzdWx0OworCV9fdTMyIGhhc2hpOworCisJel9oYXNoX3RhYmxlICp6dGg7CisK
Kwlhc3NlcnQoImptYWNkLTUxMiIsIHRyZWUgIT0gTlVMTCk7CisJYXNzZXJ0KCJqbWFjZC01MTMi
LCBibG9ja25yICE9IE5VTEwpOworCWFzc2VydCgiam1hY2QtNTE0IiwgbGV2ZWwgPCBSRUlTRVI0
X01BWF9aVFJFRV9IRUlHSFQpOworCisJenRoID0gZ2V0X2h0YWJsZSh0cmVlLCBibG9ja25yKTsK
KwloYXNoaSA9IGJsa25yaGFzaGZuKHp0aCwgYmxvY2tucik7CisKKwkvKiBOT1RFLU5JS0lUQSBh
ZGRyZXNzLWFzLXVuYWxsb2NhdGVkLWJsb2NrbnIgc3RpbGwgaXMgbm90CisJICAgaW1wbGVtZW50
ZWQuICovCisKKwl6X2hhc2hfcHJlZmV0Y2hfYnVja2V0KHp0aCwgaGFzaGkpOworCisJcmN1X3Jl
YWRfbG9jaygpOworCS8qIEZpbmQgYSBtYXRjaGluZyBCTE9DS05SIGluIHRoZSBoYXNoIHRhYmxl
LiAgSWYgdGhlIHpub2RlIGlzIGZvdW5kLAorCSAgIHdlIG9idGFpbiBhbiByZWZlcmVuY2UgKHhf
Y291bnQpIGJ1dCB0aGUgem5vZGUgcmVtYWlucyB1bmxvY2tlZC4KKwkgICBIYXZlIHRvIHdvcnJ5
IGFib3V0IHJhY2UgY29uZGl0aW9ucyBsYXRlci4gKi8KKwlyZXN1bHQgPSB6X2hhc2hfZmluZF9p
bmRleCh6dGgsIGhhc2hpLCBibG9ja25yKTsKKwkvKiBBY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQg
ZGVzaWduLCB0aGUgaGFzaCB0YWJsZSBsb2NrIHByb3RlY3RzIG5ldworCSAgIHpub2RlIHJlZmVy
ZW5jZXMuICovCisJaWYgKHJlc3VsdCAhPSBOVUxMKSB7CisJCWFkZF94X3JlZihaSk5PREUocmVz
dWx0KSk7CisJCS8qIE5PVEUtTklLSVRBIGl0IHNob3VsZCBiZSBzbywgYnV0IHNwZWNpYWwgY2Fz
ZSBkdXJpbmcKKwkJICAgY3JlYXRpb24gb2YgbmV3IHJvb3QgbWFrZXMgc3VjaCBhc3NlcnRpb24g
aGlnaGx5CisJCSAgIGNvbXBsaWNhdGVkLiAgKi8KKwkJYXNzZXJ0KCJuaWtpdGEtMjEzMSIsIDEg
fHwgem5vZGVfcGFyZW50KHJlc3VsdCkgPT0gcGFyZW50IHx8CisJCSAgICAgICAoWkZfSVNTRVQo
cmVzdWx0LCBKTk9ERV9PUlBIQU4pCisJCQkmJiAoem5vZGVfcGFyZW50KHJlc3VsdCkgPT0gTlVM
TCkpKTsKKwkJcmVzdWx0ID0gem5vZGVfcmlwX2NoZWNrKHRyZWUsIHJlc3VsdCk7CisJfQorCisJ
cmN1X3JlYWRfdW5sb2NrKCk7CisKKwlpZiAoIXJlc3VsdCkgeworCQl6bm9kZSAqc2hhZG93Owor
CisJCXJlc3VsdCA9IHphbGxvYyhnZnBfZmxhZyk7CisJCWlmICghcmVzdWx0KSB7CisJCQlyZXR1
cm4gRVJSX1BUUihSRVRFUlIoLUVOT01FTSkpOworCQl9CisKKwkJemluaXQocmVzdWx0LCBwYXJl
bnQsIHRyZWUpOworCQlaSk5PREUocmVzdWx0KS0+YmxvY2tuciA9ICpibG9ja25yOworCQlaSk5P
REUocmVzdWx0KS0+a2V5LnogPSAqYmxvY2tucjsKKwkJcmVzdWx0LT5sZXZlbCA9IGxldmVsOwor
CisJCXdyaXRlX2xvY2tfdHJlZSh0cmVlKTsKKworCQlzaGFkb3cgPSB6X2hhc2hfZmluZF9pbmRl
eCh6dGgsIGhhc2hpLCBibG9ja25yKTsKKwkJaWYgKHVubGlrZWx5KHNoYWRvdyAhPSBOVUxMICYm
ICFaRl9JU1NFVChzaGFkb3csIEpOT0RFX1JJUCkpKSB7CisJCQlqbm9kZV9saXN0X3JlbW92ZSha
Sk5PREUocmVzdWx0KSk7CisJCQl6ZnJlZShyZXN1bHQpOworCQkJcmVzdWx0ID0gc2hhZG93Owor
CQl9IGVsc2UgeworCQkJcmVzdWx0LT52ZXJzaW9uID0gem5vZGVfYnVpbGRfdmVyc2lvbih0cmVl
KTsKKwkJCXpfaGFzaF9pbnNlcnRfaW5kZXhfcmN1KHp0aCwgaGFzaGksIHJlc3VsdCk7CisKKwkJ
CWlmIChwYXJlbnQgIT0gTlVMTCkKKwkJCQkrK3BhcmVudC0+Y19jb3VudDsKKwkJfQorCisJCWFk
ZF94X3JlZihaSk5PREUocmVzdWx0KSk7CisKKwkJd3JpdGVfdW5sb2NrX3RyZWUodHJlZSk7CisJ
fQorCisJYXNzZXJ0KCJpbnRlbGZ4LTYiLAorCSAgICAgICBlcmdvKCFyZWlzZXI0X2Jsb2NrbnJf
aXNfZmFrZShibG9ja25yKSAmJiAqYmxvY2tuciAhPSAwLAorCSAgICAgICAgICAgIHJlaXNlcjRf
Y2hlY2tfYmxvY2soYmxvY2tuciwgMSkpKTsKKworCS8qIENoZWNrIGZvciBpbnZhbGlkIHRyZWUg
bGV2ZWwsIHJldHVybiAtRUlPICovCisJaWYgKHVubGlrZWx5KHpub2RlX2dldF9sZXZlbChyZXN1
bHQpICE9IGxldmVsKSkgeworCQl3YXJuaW5nKCJqbWFjZC01MDQiLAorCQkJIldyb25nIGxldmVs
IGZvciBjYWNoZWQgYmxvY2sgJWxsdTogJWkgZXhwZWN0aW5nICVpIiwKKwkJCSh1bnNpZ25lZCBs
b25nIGxvbmcpKCpibG9ja25yKSwgem5vZGVfZ2V0X2xldmVsKHJlc3VsdCksCisJCQlsZXZlbCk7
CisJCXpwdXQocmVzdWx0KTsKKwkJcmV0dXJuIEVSUl9QVFIoUkVURVJSKC1FSU8pKTsKKwl9CisK
Kwlhc3NlcnQoIm5pa2l0YS0xMjI3Iiwgem5vZGVfaW52YXJpYW50KHJlc3VsdCkpOworCisJcmV0
dXJuIHJlc3VsdDsKK30KKworLyogWk5PREUgUExVR0lOUy9EQVRBICovCisKKy8qICJndWVzcyIg
cGx1Z2luIGZvciBub2RlIGxvYWRlZCBmcm9tIHRoZSBkaXNrLiBQbHVnaW4gaWQgb2Ygbm9kZSBw
bHVnaW4gaXMKKyAgIHN0b3JlZCBhdCB0aGUgZml4ZWQgb2Zmc2V0IGZyb20gdGhlIGJlZ2lubmlu
ZyBvZiB0aGUgbm9kZS4gKi8KK3N0YXRpYyBub2RlX3BsdWdpbiAqem5vZGVfZ3Vlc3NfcGx1Z2lu
KGNvbnN0IHpub2RlICogbm9kZQkvKiB6bm9kZSB0byBndWVzcworCQkJCQkJCQkgKiBwbHVnaW4g
b2YgKi8gKQoreworCXJlaXNlcjRfdHJlZSAqdHJlZTsKKworCWFzc2VydCgibmlraXRhLTEwNTMi
LCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEwNTUiLCB6ZGF0YShub2RlKSAhPSBO
VUxMKTsKKworCXRyZWUgPSB6bm9kZV9nZXRfdHJlZShub2RlKTsKKwlhc3NlcnQoInVta2EtMDUz
IiwgdHJlZSAhPSBOVUxMKTsKKworCWlmIChyZWlzZXI0X2lzX3NldCh0cmVlLT5zdXBlciwgUkVJ
U0VSNF9PTkVfTk9ERV9QTFVHSU4pKSB7CisJCXJldHVybiB0cmVlLT5ucGx1ZzsKKwl9IGVsc2Ug
eworCQlyZXR1cm4gbm9kZV9wbHVnaW5fYnlfZGlza19pZAorCQkgICAgKHRyZWUsICYoKGNvbW1v
bl9ub2RlX2hlYWRlciAqKSB6ZGF0YShub2RlKSktPnBsdWdpbl9pZCk7CisjaWZkZWYgR1VFU1Nf
RVhJU1RTCisJCXJlaXNlcjRfcGx1Z2luICpwbHVnaW47CisKKwkJLyogTk9URS1OSUtJVEEgYWRk
IGxvY2tpbmcgaGVyZSB3aGVuIGR5bmFtaWMgcGx1Z2lucyB3aWxsIGJlCisJCSAqIGltcGxlbWVu
dGVkICovCisJCWZvcl9hbGxfcGx1Z2lucyhSRUlTRVI0X05PREVfUExVR0lOX1RZUEUsIHBsdWdp
bikgeworCQkJaWYgKChwbHVnaW4tPnUubm9kZS5ndWVzcyAhPSBOVUxMKQorCQkJICAgICYmIHBs
dWdpbi0+dS5ub2RlLmd1ZXNzKG5vZGUpKQorCQkJCXJldHVybiBwbHVnaW47CisJCX0KKwkJd2Fy
bmluZygibmlraXRhLTEwNTciLCAiQ2Fubm90IGd1ZXNzIG5vZGUgcGx1Z2luIik7CisJCXByaW50
X3pub2RlKCJub2RlIiwgbm9kZSk7CisJCXJldHVybiBOVUxMOworI2VuZGlmCisJfQorfQorCisv
KiBwYXJzZSBub2RlIGhlYWRlciBhbmQgaW5zdGFsbCAtPm5vZGVfcGx1Z2luICovCitpbnQgenBh
cnNlKHpub2RlICogbm9kZSAvKiB6bm9kZSB0byBwYXJzZSAqLyApCit7CisJaW50IHJlc3VsdDsK
KworCWFzc2VydCgibmlraXRhLTEyMzMiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRh
LTIzNzAiLCB6ZGF0YShub2RlKSAhPSBOVUxMKTsKKworCWlmIChub2RlLT5ucGx1ZyA9PSBOVUxM
KSB7CisJCW5vZGVfcGx1Z2luICpucGx1ZzsKKworCQlucGx1ZyA9IHpub2RlX2d1ZXNzX3BsdWdp
bihub2RlKTsKKwkJaWYgKGxpa2VseShucGx1ZyAhPSBOVUxMKSkgeworCQkJcmVzdWx0ID0gbnBs
dWctPnBhcnNlKG5vZGUpOworCQkJaWYgKGxpa2VseShyZXN1bHQgPT0gMCkpCisJCQkJbm9kZS0+
bnBsdWcgPSBucGx1ZzsKKwkJfSBlbHNlIHsKKwkJCXJlc3VsdCA9IFJFVEVSUigtRUlPKTsKKwkJ
fQorCX0gZWxzZQorCQlyZXN1bHQgPSAwOworCXJldHVybiByZXN1bHQ7Cit9CisKKy8qIHpsb2Fk
IHdpdGggcmVhZGFoZWFkICovCitpbnQgemxvYWRfcmEoem5vZGUgKiBub2RlIC8qIHpub2RlIHRv
IGxvYWQgKi8gLCByYV9pbmZvX3QgKiBpbmZvKQoreworCWludCByZXN1bHQ7CisKKwlhc3NlcnQo
Im5pa2l0YS00ODQiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTEzNzciLCB6bm9k
ZV9pbnZhcmlhbnQobm9kZSkpOworCWFzc2VydCgiam1hY2QtNzc3MSIsICF6bm9kZV9hYm92ZV9y
b290KG5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0yMTI1IiwgYXRvbWljX3JlYWQoJlpKTk9ERShu
b2RlKS0+eF9jb3VudCkgPiAwKTsKKwlhc3NlcnQoIm5pa2l0YS0zMDE2IiwgcmVpc2VyNF9zY2hl
ZHVsYWJsZSgpKTsKKworCWlmIChpbmZvKQorCQlmb3JtYXR0ZWRfcmVhZGFoZWFkKG5vZGUsIGlu
Zm8pOworCisJcmVzdWx0ID0gamxvYWQoWkpOT0RFKG5vZGUpKTsKKwlhc3NlcnQoIm5pa2l0YS0x
Mzc4Iiwgem5vZGVfaW52YXJpYW50KG5vZGUpKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBs
b2FkIGNvbnRlbnQgb2Ygbm9kZSBpbnRvIG1lbW9yeSAqLworaW50IHpsb2FkKHpub2RlICpub2Rl
KQoreworCXJldHVybiB6bG9hZF9yYShub2RlLCBOVUxMKTsKK30KKworLyogY2FsbCBub2RlIHBs
dWdpbiB0byBpbml0aWFsaXNlIG5ld2x5IGFsbG9jYXRlZCBub2RlLiAqLworaW50IHppbml0X25l
dyh6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gaW5pdGlhbGlzZSAqLyAsIGdmcF90IGdmcF9mbGFn
cykKK3sKKwlyZXR1cm4gamluaXRfbmV3KFpKTk9ERShub2RlKSwgZ2ZwX2ZsYWdzKTsKK30KKwor
LyogZHJvcCByZWZlcmVuY2UgdG8gbm9kZSBkYXRhLiBXaGVuIGxhc3QgcmVmZXJlbmNlIGlzIGRy
b3BwZWQsIGRhdGEgYXJlCisgICB1bmxvYWRlZC4gKi8KK3ZvaWQgenJlbHNlKHpub2RlICogbm9k
ZSAvKiB6bm9kZSB0byByZWxlYXNlIHJlZmVyZW5jZXMgdG8gKi8gKQoreworCWFzc2VydCgibmlr
aXRhLTEzODEiLCB6bm9kZV9pbnZhcmlhbnQobm9kZSkpOworCWpyZWxzZShaSk5PREUobm9kZSkp
OworfQorCisvKiByZXR1cm5zIGZyZWUgc3BhY2UgaW4gbm9kZSAqLwordW5zaWduZWQgem5vZGVf
ZnJlZV9zcGFjZSh6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gcXVlcnkgKi8gKQoreworCWFzc2Vy
dCgibmlraXRhLTg1MiIsIG5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIG5vZGVfcGx1Z2luX2J5X25v
ZGUobm9kZSktPmZyZWVfc3BhY2Uobm9kZSk7Cit9CisKKy8qIGxlZnQgZGVsaW1pdGluZyBrZXkg
b2Ygem5vZGUgKi8KK3JlaXNlcjRfa2V5ICp6bm9kZV9nZXRfcmRfa2V5KHpub2RlICogbm9kZSAv
KiB6bm9kZSB0byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEtOTU4Iiwgbm9kZSAhPSBO
VUxMKTsKKwlhc3NlcnRfcndfbG9ja2VkKCYoem5vZGVfZ2V0X3RyZWUobm9kZSktPmRrX2xvY2sp
KTsKKwlhc3NlcnQoIm5pa2l0YS0zMDY3IiwgTE9DS19DTlRfR1RaKHJ3X2xvY2tlZF9kaykpOwor
CWFzc2VydCgibmlraXRhLTMwNjcxIiwgbm9kZS0+cmRfa2V5X3ZlcnNpb24gIT0gMCk7CisJcmV0
dXJuICZub2RlLT5yZF9rZXk7Cit9CisKKy8qIHJpZ2h0IGRlbGltaXRpbmcga2V5IG9mIHpub2Rl
ICovCityZWlzZXI0X2tleSAqem5vZGVfZ2V0X2xkX2tleSh6bm9kZSAqIG5vZGUgLyogem5vZGUg
dG8gcXVlcnkgKi8gKQoreworCWFzc2VydCgibmlraXRhLTk3NCIsIG5vZGUgIT0gTlVMTCk7CisJ
YXNzZXJ0X3J3X2xvY2tlZCgmKHpub2RlX2dldF90cmVlKG5vZGUpLT5ka19sb2NrKSk7CisJYXNz
ZXJ0KCJuaWtpdGEtMzA2OCIsIExPQ0tfQ05UX0dUWihyd19sb2NrZWRfZGspKTsKKwlhc3NlcnQo
Im5pa2l0YS0zMDY4MSIsIG5vZGUtPmxkX2tleV92ZXJzaW9uICE9IDApOworCXJldHVybiAmbm9k
ZS0+bGRfa2V5OworfQorCitPTl9ERUJVRyhhdG9taWNfdCBkZWxpbV9rZXlfdmVyc2lvbiA9IEFU
T01JQ19JTklUKDApOworICAgICkKKworLyogdXBkYXRlIHJpZ2h0LWRlbGltaXRpbmcga2V5IG9m
IEBub2RlICovCityZWlzZXI0X2tleSAqem5vZGVfc2V0X3JkX2tleSh6bm9kZSAqIG5vZGUsIGNv
bnN0IHJlaXNlcjRfa2V5ICoga2V5KQoreworCWFzc2VydCgibmlraXRhLTI5MzciLCBub2RlICE9
IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI5MzkiLCBrZXkgIT0gTlVMTCk7CisJYXNzZXJ0X3J3
X3dyaXRlX2xvY2tlZCgmKHpub2RlX2dldF90cmVlKG5vZGUpLT5ka19sb2NrKSk7CisJYXNzZXJ0
KCJuaWtpdGEtMzA2OSIsIExPQ0tfQ05UX0dUWih3cml0ZV9sb2NrZWRfZGspKTsKKwlhc3NlcnQo
Im5pa2l0YS0yOTQ0IiwKKwkgICAgICAgem5vZGVfaXNfYW55X2xvY2tlZChub2RlKSB8fAorCSAg
ICAgICB6bm9kZV9nZXRfbGV2ZWwobm9kZSkgIT0gTEVBRl9MRVZFTCB8fAorCSAgICAgICBrZXln
ZShrZXksICZub2RlLT5yZF9rZXkpIHx8CisJICAgICAgIGtleWVxKCZub2RlLT5yZF9rZXksIHJl
aXNlcjRfbWluX2tleSgpKSB8fAorCSAgICAgICBaRl9JU1NFVChub2RlLCBKTk9ERV9IRUFSRF9C
QU5TSEVFKSk7CisKKwlub2RlLT5yZF9rZXkgPSAqa2V5OworCU9OX0RFQlVHKG5vZGUtPnJkX2tl
eV92ZXJzaW9uID0gYXRvbWljX2luY19yZXR1cm4oJmRlbGltX2tleV92ZXJzaW9uKSk7CisJcmV0
dXJuICZub2RlLT5yZF9rZXk7Cit9CisKKy8qIHVwZGF0ZSBsZWZ0LWRlbGltaXRpbmcga2V5IG9m
IEBub2RlICovCityZWlzZXI0X2tleSAqem5vZGVfc2V0X2xkX2tleSh6bm9kZSAqIG5vZGUsIGNv
bnN0IHJlaXNlcjRfa2V5ICoga2V5KQoreworCWFzc2VydCgibmlraXRhLTI5NDAiLCBub2RlICE9
IE5VTEwpOworCWFzc2VydCgibmlraXRhLTI5NDEiLCBrZXkgIT0gTlVMTCk7CisJYXNzZXJ0X3J3
X3dyaXRlX2xvY2tlZCgmKHpub2RlX2dldF90cmVlKG5vZGUpLT5ka19sb2NrKSk7CisJYXNzZXJ0
KCJuaWtpdGEtMzA3MCIsIExPQ0tfQ05UX0dUWih3cml0ZV9sb2NrZWRfZGspKTsKKwlhc3NlcnQo
Im5pa2l0YS0yOTQzIiwKKwkgICAgICAgem5vZGVfaXNfYW55X2xvY2tlZChub2RlKSB8fCBrZXll
cSgmbm9kZS0+bGRfa2V5LAorCQkJCQkJICByZWlzZXI0X21pbl9rZXkoKSkpOworCisJbm9kZS0+
bGRfa2V5ID0gKmtleTsKKwlPTl9ERUJVRyhub2RlLT5sZF9rZXlfdmVyc2lvbiA9IGF0b21pY19p
bmNfcmV0dXJuKCZkZWxpbV9rZXlfdmVyc2lvbikpOworCXJldHVybiAmbm9kZS0+bGRfa2V5Owor
fQorCisvKiB0cnVlIGlmIEBrZXkgaXMgaW5zaWRlIGtleSByYW5nZSBmb3IgQG5vZGUgKi8KK2lu
dCB6bm9kZV9jb250YWluc19rZXkoem5vZGUgKiBub2RlIC8qIHpub2RlIHRvIGxvb2sgaW4gKi8g
LAorCQkgICAgICAgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkgLyoga2V5IHRvIGxvb2sgZm9yICov
ICkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xMjM3Iiwgbm9kZSAhPSBOVUxMKTsKKwlhc3NlcnQoIm5p
a2l0YS0xMjM4Iiwga2V5ICE9IE5VTEwpOworCisJLyogbGVmdF9kZWxpbWl0aW5nX2tleSA8PSBr
ZXkgPD0gcmlnaHRfZGVsaW1pdGluZ19rZXkgKi8KKwlyZXR1cm4ga2V5bGUoem5vZGVfZ2V0X2xk
X2tleShub2RlKSwga2V5KQorCSAgICAmJiBrZXlsZShrZXksIHpub2RlX2dldF9yZF9rZXkobm9k
ZSkpOworfQorCisvKiBzYW1lIGFzIHpub2RlX2NvbnRhaW5zX2tleSgpLCBidXQgbG9jayBkayBs
b2NrICovCitpbnQgem5vZGVfY29udGFpbnNfa2V5X2xvY2soem5vZGUgKiBub2RlIC8qIHpub2Rl
IHRvIGxvb2sgaW4gKi8gLAorCQkJICAgIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5IC8qIGtleSB0
byBsb29rIGZvciAqLyApCit7CisJaW50IHJlc3VsdDsKKworCWFzc2VydCgidW1rYS0wNTYiLCBu
b2RlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0wNTciLCBrZXkgIT0gTlVMTCk7CisKKwlyZWFk
X2xvY2tfZGsoem5vZGVfZ2V0X3RyZWUobm9kZSkpOworCXJlc3VsdCA9IHpub2RlX2NvbnRhaW5z
X2tleShub2RlLCBrZXkpOworCXJlYWRfdW5sb2NrX2RrKHpub2RlX2dldF90cmVlKG5vZGUpKTsK
KwlyZXR1cm4gcmVzdWx0OworfQorCisvKiBnZXQgcGFyZW50IHBvaW50ZXIsIGFzc3VtaW5nIHRy
ZWUgaXMgbm90IGxvY2tlZCAqLworem5vZGUgKnpub2RlX3BhcmVudF9ub2xvY2soY29uc3Qgem5v
ZGUgKiBub2RlIC8qIGNoaWxkIHpub2RlICovICkKK3sKKwlhc3NlcnQoIm5pa2l0YS0xNDQ0Iiwg
bm9kZSAhPSBOVUxMKTsKKwlyZXR1cm4gbm9kZS0+aW5fcGFyZW50Lm5vZGU7Cit9CisKKy8qIGdl
dCBwYXJlbnQgcG9pbnRlciBvZiB6bm9kZSAqLworem5vZGUgKnpub2RlX3BhcmVudChjb25zdCB6
bm9kZSAqIG5vZGUgLyogY2hpbGQgem5vZGUgKi8gKQoreworCWFzc2VydCgibmlraXRhLTEyMjYi
LCBub2RlICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTE0MDYiLCBMT0NLX0NOVF9HVFoocndf
bG9ja2VkX3RyZWUpKTsKKwlyZXR1cm4gem5vZGVfcGFyZW50X25vbG9jayhub2RlKTsKK30KKwor
LyogZGV0ZWN0IHViZXIgem5vZGUgdXNlZCB0byBwcm90ZWN0IGluLXN1cGVyYmxvY2sgdHJlZSBy
b290IHBvaW50ZXIgKi8KK2ludCB6bm9kZV9hYm92ZV9yb290KGNvbnN0IHpub2RlICogbm9kZSAv
KiB6bm9kZSB0byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJ1bWthLTA1OSIsIG5vZGUgIT0gTlVM
TCk7CisKKwlyZXR1cm4gZGlza19hZGRyX2VxKCZaSk5PREUobm9kZSktPmJsb2NrbnIsICZVQkVS
X1RSRUVfQUREUik7Cit9CisKKy8qIGNoZWNrIHRoYXQgQG5vZGUgaXMgcm9vdC0tLXRoYXQgaXRz
IGJsb2NrIG51bWJlciBpcyByZWNvcmRlciBpbiB0aGUgdHJlZSBhcworICAgdGhhdCBvZiByb290
IG5vZGUgKi8KKyNpZiBSRUlTRVI0X0RFQlVHCitzdGF0aWMgaW50IHpub2RlX2lzX3RydWVfcm9v
dChjb25zdCB6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gcXVlcnkgKi8gKQoreworCWFzc2VydCgi
dW1rYS0wNjAiLCBub2RlICE9IE5VTEwpOworCWFzc2VydCgidW1rYS0wNjEiLCBjdXJyZW50X3Ry
ZWUgIT0gTlVMTCk7CisKKwlyZXR1cm4gZGlza19hZGRyX2VxKHpub2RlX2dldF9ibG9jayhub2Rl
KSwKKwkJCSAgICAmem5vZGVfZ2V0X3RyZWUobm9kZSktPnJvb3RfYmxvY2spOworfQorI2VuZGlm
CisKKy8qIGNoZWNrIHRoYXQgQG5vZGUgaXMgcm9vdCAqLworaW50IHpub2RlX2lzX3Jvb3QoY29u
c3Qgem5vZGUgKiBub2RlIC8qIHpub2RlIHRvIHF1ZXJ5ICovICkKK3sKKwlyZXR1cm4gem5vZGVf
Z2V0X2xldmVsKG5vZGUpID09IHpub2RlX2dldF90cmVlKG5vZGUpLT5oZWlnaHQ7Cit9CisKKy8q
IFJldHVybnMgdHJ1ZSBpcyBAbm9kZSB3YXMganVzdCBjcmVhdGVkIGJ5IHpnZXQoKSBhbmQgd2Fz
bid0IGV2ZXIgbG9hZGVkCisgICBpbnRvIG1lbW9yeS4gKi8KKy8qIE5JS0lUQS1IQU5TOiB5ZXMg
Ki8KK2ludCB6bm9kZV9qdXN0X2NyZWF0ZWQoY29uc3Qgem5vZGUgKiBub2RlKQoreworCWFzc2Vy
dCgibmlraXRhLTIxODgiLCBub2RlICE9IE5VTEwpOworCXJldHVybiAoem5vZGVfcGFnZShub2Rl
KSA9PSBOVUxMKTsKK30KKworLyogb2J0YWluIHVwZGF0ZWQgLT56bm9kZV9lcG9jaC4gU2VlIHNl
YWwuYyBmb3IgZGVzY3JpcHRpb24uICovCitfX3U2NCB6bm9kZV9idWlsZF92ZXJzaW9uKHJlaXNl
cjRfdHJlZSAqIHRyZWUpCit7CisJX191NjQgcmVzdWx0OworCisJc3Bpbl9sb2NrKCZ0cmVlLT5l
cG9jaF9sb2NrKTsKKwlyZXN1bHQgPSArK3RyZWUtPnpub2RlX2Vwb2NoOworCXNwaW5fdW5sb2Nr
KCZ0cmVlLT5lcG9jaF9sb2NrKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCit2b2lkIGluaXRfbG9h
ZF9jb3VudChsb2FkX2NvdW50ICogZGgpCit7CisJYXNzZXJ0KCJuaWtpdGEtMjEwNSIsIGRoICE9
IE5VTEwpOworCW1lbXNldChkaCwgMCwgc2l6ZW9mICpkaCk7Cit9CisKK3ZvaWQgZG9uZV9sb2Fk
X2NvdW50KGxvYWRfY291bnQgKiBkaCkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMTA2IiwgZGggIT0g
TlVMTCk7CisJaWYgKGRoLT5ub2RlICE9IE5VTEwpIHsKKwkJZm9yICg7IGRoLT5kX3JlZiA+IDA7
IC0tZGgtPmRfcmVmKQorCQkJenJlbHNlKGRoLT5ub2RlKTsKKwkJZGgtPm5vZGUgPSBOVUxMOwor
CX0KK30KKworc3RhdGljIGludCBpbmNyX2xvYWRfY291bnQobG9hZF9jb3VudCAqIGRoKQorewor
CWludCByZXN1bHQ7CisKKwlhc3NlcnQoIm5pa2l0YS0yMTEwIiwgZGggIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMjExMSIsIGRoLT5ub2RlICE9IE5VTEwpOworCisJcmVzdWx0ID0gemxvYWQo
ZGgtPm5vZGUpOworCWlmIChyZXN1bHQgPT0gMCkKKwkJKytkaC0+ZF9yZWY7CisJcmV0dXJuIHJl
c3VsdDsKK30KKworaW50IGluY3JfbG9hZF9jb3VudF96bm9kZShsb2FkX2NvdW50ICogZGgsIHpu
b2RlICogbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yMTA3IiwgZGggIT0gTlVMTCk7CisJYXNz
ZXJ0KCJuaWtpdGEtMjE1OCIsIG5vZGUgIT0gTlVMTCk7CisJYXNzZXJ0KCJuaWtpdGEtMjEwOSIs
CisJICAgICAgIGVyZ28oZGgtPm5vZGUgIT0gTlVMTCwgKGRoLT5ub2RlID09IG5vZGUpIHx8IChk
aC0+ZF9yZWYgPT0gMCkpKTsKKworCWRoLT5ub2RlID0gbm9kZTsKKwlyZXR1cm4gaW5jcl9sb2Fk
X2NvdW50KGRoKTsKK30KKworaW50IGluY3JfbG9hZF9jb3VudF9qbm9kZShsb2FkX2NvdW50ICog
ZGgsIGpub2RlICogbm9kZSkKK3sKKwlpZiAoam5vZGVfaXNfem5vZGUobm9kZSkpIHsKKwkJcmV0
dXJuIGluY3JfbG9hZF9jb3VudF96bm9kZShkaCwgSlpOT0RFKG5vZGUpKTsKKwl9CisJcmV0dXJu
IDA7Cit9CisKK3ZvaWQgY29weV9sb2FkX2NvdW50KGxvYWRfY291bnQgKiBuZXcsIGxvYWRfY291
bnQgKiBvbGQpCit7CisJaW50IHJldCA9IDA7CisJZG9uZV9sb2FkX2NvdW50KG5ldyk7CisJbmV3
LT5ub2RlID0gb2xkLT5ub2RlOworCW5ldy0+ZF9yZWYgPSAwOworCisJd2hpbGUgKChuZXctPmRf
cmVmIDwgb2xkLT5kX3JlZikgJiYgKHJldCA9IGluY3JfbG9hZF9jb3VudChuZXcpKSA9PSAwKSB7
CisJfQorCisJYXNzZXJ0KCJqbWFjZC04NzU4OSIsIHJldCA9PSAwKTsKK30KKwordm9pZCBtb3Zl
X2xvYWRfY291bnQobG9hZF9jb3VudCAqIG5ldywgbG9hZF9jb3VudCAqIG9sZCkKK3sKKwlkb25l
X2xvYWRfY291bnQobmV3KTsKKwluZXctPm5vZGUgPSBvbGQtPm5vZGU7CisJbmV3LT5kX3JlZiA9
IG9sZC0+ZF9yZWY7CisJb2xkLT5ub2RlID0gTlVMTDsKKwlvbGQtPmRfcmVmID0gMDsKK30KKwor
LyogY29udmVydCBwYXJlbnQgcG9pbnRlciBpbnRvIGNvb3JkICovCit2b2lkIHBhcmVudF9jb29y
ZF90b19jb29yZChjb25zdCBwYXJlbnRfY29vcmRfdCAqIHBjb29yZCwgY29vcmRfdCAqIGNvb3Jk
KQoreworCWFzc2VydCgibmlraXRhLTMyMDQiLCBwY29vcmQgIT0gTlVMTCk7CisJYXNzZXJ0KCJu
aWtpdGEtMzIwNSIsIGNvb3JkICE9IE5VTEwpOworCisJY29vcmRfaW5pdF9maXJzdF91bml0X25v
Y2hlY2soY29vcmQsIHBjb29yZC0+bm9kZSk7CisJY29vcmRfc2V0X2l0ZW1fcG9zKGNvb3JkLCBw
Y29vcmQtPml0ZW1fcG9zKTsKKwljb29yZC0+YmV0d2VlbiA9IEFUX1VOSVQ7Cit9CisKKy8qIHBh
Y2sgY29vcmQgaW50byBwYXJlbnRfY29vcmRfdCAqLwordm9pZCBjb29yZF90b19wYXJlbnRfY29v
cmQoY29uc3QgY29vcmRfdCAqIGNvb3JkLCBwYXJlbnRfY29vcmRfdCAqIHBjb29yZCkKK3sKKwlh
c3NlcnQoIm5pa2l0YS0zMjA2IiwgcGNvb3JkICE9IE5VTEwpOworCWFzc2VydCgibmlraXRhLTMy
MDciLCBjb29yZCAhPSBOVUxMKTsKKworCXBjb29yZC0+bm9kZSA9IGNvb3JkLT5ub2RlOworCXBj
b29yZC0+aXRlbV9wb3MgPSBjb29yZC0+aXRlbV9wb3M7Cit9CisKKy8qIEluaXRpYWxpemUgYSBw
YXJlbnQgaGludCBwb2ludGVyLiAocGFyZW50IGhpbnQgcG9pbnRlciBpcyBhIGZpZWxkIGluIHpu
b2RlLAorICAgbG9vayBmb3IgY29tbWVudHMgdGhlcmUpICovCit2b2lkIGluaXRfcGFyZW50X2Nv
b3JkKHBhcmVudF9jb29yZF90ICogcGNvb3JkLCBjb25zdCB6bm9kZSAqIG5vZGUpCit7CisJcGNv
b3JkLT5ub2RlID0gKHpub2RlICopIG5vZGU7CisJcGNvb3JkLT5pdGVtX3BvcyA9ICh1bnNpZ25l
ZCBzaG9ydCl+MDsKK30KKworI2lmIFJFSVNFUjRfREVCVUcKKworLyogZGVidWdnaW5nIGFpZDog
em5vZGUgaW52YXJpYW50ICovCitzdGF0aWMgaW50IHpub2RlX2ludmFyaWFudF9mKGNvbnN0IHpu
b2RlICogbm9kZSAvKiB6bm9kZSB0byBjaGVjayAqLyAsCisJCQkgICAgIGNoYXIgY29uc3QgKipt
c2cJLyogd2hlcmUgdG8gc3RvcmUgZXJyb3IKKwkJCQkJCSAqIG1lc3NhZ2UsIGlmIGFueSAqLyAp
Cit7CisjZGVmaW5lIF9lcmdvKGFudCwgY29uKSAJCQkJCQlcCisJKCgqbXNnKSA9ICJ7IiAjYW50
ICJ9IGVyZ28geyIgI2NvbiAifSIsIGVyZ28oKGFudCksIChjb24pKSkKKworI2RlZmluZSBfZXF1
aShlMSwgZTIpIAkJCQkJCVwKKwkoKCptc2cpID0gInsiICNlMSAifSA8PT4geyIgI2UyICJ9Iiwg
ZXF1aSgoZTEpLCAoZTIpKSkKKworI2RlZmluZSBfY2hlY2soZXhwKSAoKCptc2cpID0gI2V4cCwg
KGV4cCkpCisKKwlyZXR1cm4gam5vZGVfaW52YXJpYW50X2YoWkpOT0RFKG5vZGUpLCBtc2cpICYm
CisJICAgIC8qIFt6bm9kZS1mYWtlXSBpbnZhcmlhbnQgKi8KKwkgICAgLyogZmFrZSB6bm9kZSBk
b2Vzbid0IGhhdmUgYSBwYXJlbnQsIGFuZCAqLworCSAgICBfZXJnbyh6bm9kZV9nZXRfbGV2ZWwo
bm9kZSkgPT0gMCwgem5vZGVfcGFyZW50KG5vZGUpID09IE5VTEwpICYmCisJICAgIC8qIHRoZXJl
IGlzIGFub3RoZXIgd2F5IHRvIGV4cHJlc3MgdGhpcyB2ZXJ5IGNoZWNrLCBhbmQgKi8KKwkgICAg
X2VyZ28oem5vZGVfYWJvdmVfcm9vdChub2RlKSwgem5vZGVfcGFyZW50KG5vZGUpID09IE5VTEwp
ICYmCisJICAgIC8qIGl0IGhhcyBzcGVjaWFsIGJsb2NrIG51bWJlciwgYW5kICovCisJICAgIF9l
cmdvKHpub2RlX2dldF9sZXZlbChub2RlKSA9PSAwLAorCQkgIGRpc2tfYWRkcl9lcSh6bm9kZV9n
ZXRfYmxvY2sobm9kZSksICZVQkVSX1RSRUVfQUREUikpICYmCisJICAgIC8qIGl0IGlzIHRoZSBv
bmx5IHpub2RlIHdpdGggc3VjaCBibG9jayBudW1iZXIsIGFuZCAqLworCSAgICBfZXJnbyghem5v
ZGVfYWJvdmVfcm9vdChub2RlKSAmJiB6bm9kZV9pc19sb2FkZWQobm9kZSksCisJCSAgIWRpc2tf
YWRkcl9lcSh6bm9kZV9nZXRfYmxvY2sobm9kZSksICZVQkVSX1RSRUVfQUREUikpICYmCisJICAg
IC8qIGl0IGlzIHBhcmVudCBvZiB0aGUgdHJlZSByb290IG5vZGUgKi8KKwkgICAgX2VyZ28oem5v
ZGVfaXNfdHJ1ZV9yb290KG5vZGUpLAorCQkgIHpub2RlX2Fib3ZlX3Jvb3Qoem5vZGVfcGFyZW50
KG5vZGUpKSkgJiYKKwkgICAgLyogW3pub2RlLWxldmVsXSBpbnZhcmlhbnQgKi8KKwkgICAgLyog
bGV2ZWwgb2YgcGFyZW50IHpub2RlIGlzIG9uZSBsYXJnZXIgdGhhbiB0aGF0IG9mIGNoaWxkLAor
CSAgICAgICBleGNlcHQgZm9yIHRoZSBmYWtlIHpub2RlLCBhbmQgKi8KKwkgICAgX2VyZ28oem5v
ZGVfcGFyZW50KG5vZGUpICYmICF6bm9kZV9hYm92ZV9yb290KHpub2RlX3BhcmVudChub2RlKSks
CisJCSAgem5vZGVfZ2V0X2xldmVsKHpub2RlX3BhcmVudChub2RlKSkgPT0KKwkJICB6bm9kZV9n
ZXRfbGV2ZWwobm9kZSkgKyAxKSAmJgorCSAgICAvKiBsZWZ0IG5laWdoYm9yIGlzIGF0IHRoZSBz
YW1lIGxldmVsLCBhbmQgKi8KKwkgICAgX2VyZ28oem5vZGVfaXNfbGVmdF9jb25uZWN0ZWQobm9k
ZSkgJiYgbm9kZS0+bGVmdCAhPSBOVUxMLAorCQkgIHpub2RlX2dldF9sZXZlbChub2RlKSA9PSB6
bm9kZV9nZXRfbGV2ZWwobm9kZS0+bGVmdCkpICYmCisJICAgIC8qIHJpZ2h0IG5laWdoYm9yIGlz
IGF0IHRoZSBzYW1lIGxldmVsICovCisJICAgIF9lcmdvKHpub2RlX2lzX3JpZ2h0X2Nvbm5lY3Rl
ZChub2RlKSAmJiBub2RlLT5yaWdodCAhPSBOVUxMLAorCQkgIHpub2RlX2dldF9sZXZlbChub2Rl
KSA9PSB6bm9kZV9nZXRfbGV2ZWwobm9kZS0+cmlnaHQpKSAmJgorCSAgICAvKiBbem5vZGUtY29u
bmVjdGVkXSBpbnZhcmlhbnQgKi8KKwkgICAgX2VyZ28obm9kZS0+bGVmdCAhPSBOVUxMLCB6bm9k
ZV9pc19sZWZ0X2Nvbm5lY3RlZChub2RlKSkgJiYKKwkgICAgX2VyZ28obm9kZS0+cmlnaHQgIT0g
TlVMTCwgem5vZGVfaXNfcmlnaHRfY29ubmVjdGVkKG5vZGUpKSAmJgorCSAgICBfZXJnbyghem5v
ZGVfaXNfcm9vdChub2RlKSAmJiBub2RlLT5sZWZ0ICE9IE5VTEwsCisJCSAgem5vZGVfaXNfcmln
aHRfY29ubmVjdGVkKG5vZGUtPmxlZnQpICYmCisJCSAgbm9kZS0+bGVmdC0+cmlnaHQgPT0gbm9k
ZSkgJiYKKwkgICAgX2VyZ28oIXpub2RlX2lzX3Jvb3Qobm9kZSkgJiYgbm9kZS0+cmlnaHQgIT0g
TlVMTCwKKwkJICB6bm9kZV9pc19sZWZ0X2Nvbm5lY3RlZChub2RlLT5yaWdodCkgJiYKKwkJICBu
b2RlLT5yaWdodC0+bGVmdCA9PSBub2RlKSAmJgorCSAgICAvKiBbem5vZGUtY19jb3VudF0gaW52
YXJpYW50ICovCisJICAgIC8qIGZvciBhbnkgem5vZGUsIGNfY291bnQgb2YgaXRzIHBhcmVudCBp
cyBncmVhdGVyIHRoYW4gMCAqLworCSAgICBfZXJnbyh6bm9kZV9wYXJlbnQobm9kZSkgIT0gTlVM
TCAmJgorCQkgICF6bm9kZV9hYm92ZV9yb290KHpub2RlX3BhcmVudChub2RlKSksCisJCSAgem5v
ZGVfcGFyZW50KG5vZGUpLT5jX2NvdW50ID4gMCkgJiYKKwkgICAgLyogbGVhdmVzIGRvbid0IGhh
dmUgY2hpbGRyZW4gKi8KKwkgICAgX2VyZ28oem5vZGVfZ2V0X2xldmVsKG5vZGUpID09IExFQUZf
TEVWRUwsCisJCSAgbm9kZS0+Y19jb3VudCA9PSAwKSAmJgorCSAgICBfY2hlY2sobm9kZS0+empu
b2RlLmpub2Rlcy5wcmV2ICE9IE5VTEwpICYmCisJICAgIF9jaGVjayhub2RlLT56am5vZGUuam5v
ZGVzLm5leHQgIT0gTlVMTCkgJiYKKwkgICAgLyogb3JwaGFuIGRvZXNuJ3QgaGF2ZSBhIHBhcmVu
dCAqLworCSAgICBfZXJnbyhaRl9JU1NFVChub2RlLCBKTk9ERV9PUlBIQU4pLCB6bm9kZV9wYXJl
bnQobm9kZSkgPT0gMCkgJiYKKwkgICAgLyogW3pub2RlLW1vZGlmeV0gaW52YXJpYW50ICovCisJ
ICAgIC8qIGlmIHpub2RlIGlzIG5vdCB3cml0ZS1sb2NrZWQsIGl0cyBjaGVja3N1bSByZW1haW5z
CisJICAgICAqIGludmFyaWFudCAqLworCSAgICAvKiB1bmZvcnR1bmF0ZWx5LCB6bG9jayBpcyB1
bm9yZGVyZWQgdy5yLnQuIGpub2RlX2xvY2ssIHNvIHdlCisJICAgICAqIGNhbm5vdCBjaGVjayB0
aGlzLiAqLworCSAgICAvKiBbem5vZGUtcmVmc10gaW52YXJpYW50ICovCisJICAgIC8qIG9ubHkg
cmVmZXJlbmNlZCB6bm9kZSBjYW4gYmUgbG9uZy10ZXJtIGxvY2tlZCAqLworCSAgICBfZXJnbyh6
bm9kZV9pc19sb2NrZWQobm9kZSksCisJCSAgYXRvbWljX3JlYWQoJlpKTk9ERShub2RlKS0+eF9j
b3VudCkgIT0gMCk7Cit9CisKKy8qIGRlYnVnZ2luZyBhaWQ6IGNoZWNrIHpub2RlIGludmFyaWFu
dCBhbmQgcGFuaWMgaWYgaXQgZG9lc24ndCBob2xkICovCitpbnQgem5vZGVfaW52YXJpYW50KHpu
b2RlICogbm9kZSAvKiB6bm9kZSB0byBjaGVjayAqLyApCit7CisJY2hhciBjb25zdCAqZmFpbGVk
X21zZzsKKwlpbnQgcmVzdWx0OworCisJYXNzZXJ0KCJ1bWthLTA2MyIsIG5vZGUgIT0gTlVMTCk7
CisJYXNzZXJ0KCJ1bWthLTA2NCIsIGN1cnJlbnRfdHJlZSAhPSBOVUxMKTsKKworCXNwaW5fbG9j
a196bm9kZShub2RlKTsKKwlyZWFkX2xvY2tfdHJlZSh6bm9kZV9nZXRfdHJlZShub2RlKSk7CisJ
cmVzdWx0ID0gem5vZGVfaW52YXJpYW50X2Yobm9kZSwgJmZhaWxlZF9tc2cpOworCWlmICghcmVz
dWx0KSB7CisJCS8qIHByaW50X3pub2RlKCJjb3JydXB0ZWQgbm9kZSIsIG5vZGUpOyAqLworCQl3
YXJuaW5nKCJqbWFjZC01NTUiLCAiQ29uZGl0aW9uICVzIGZhaWxlZCIsIGZhaWxlZF9tc2cpOwor
CX0KKwlyZWFkX3VubG9ja190cmVlKHpub2RlX2dldF90cmVlKG5vZGUpKTsKKwlzcGluX3VubG9j
a196bm9kZShub2RlKTsKKwlyZXR1cm4gcmVzdWx0OworfQorCisvKiByZXR1cm4gbm9uLTAgaWZm
IGRhdGEgYXJlIGxvYWRlZCBpbnRvIHpub2RlICovCitpbnQgem5vZGVfaXNfbG9hZGVkKGNvbnN0
IHpub2RlICogbm9kZSAvKiB6bm9kZSB0byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEt
NDk3Iiwgbm9kZSAhPSBOVUxMKTsKKwlyZXR1cm4gam5vZGVfaXNfbG9hZGVkKFpKTk9ERShub2Rl
KSk7Cit9CisKK3Vuc2lnbmVkIGxvbmcgem5vZGVfdGltZXNfbG9ja2VkKGNvbnN0IHpub2RlICog
eikKK3sKKwlyZXR1cm4gei0+dGltZXNfbG9ja2VkOworfQorCisjZW5kaWYJCQkJLyogUkVJU0VS
NF9ERUJVRyAqLworCisvKiBNYWtlIExpbnVzIGhhcHB5LgorICAgTG9jYWwgdmFyaWFibGVzOgor
ICAgYy1pbmRlbnRhdGlvbi1zdHlsZTogIksmUiIKKyAgIG1vZGUtbmFtZTogIkxDIgorICAgYy1i
YXNpYy1vZmZzZXQ6IDgKKyAgIHRhYi13aWR0aDogOAorICAgZmlsbC1jb2x1bW46IDEyMAorICAg
RW5kOgorKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvZnMv
cmVpc2VyNC96bm9kZS5oIGxpbnV4LTUuNC4xNy9mcy9yZWlzZXI0L3pub2RlLmgKLS0tIGxpbnV4
LTUuNC4xNy5vcmlnL2ZzL3JlaXNlcjQvem5vZGUuaAkxOTcwLTAxLTAxIDAxOjAwOjAwLjAwMDAw
MDAwMCArMDEwMAorKysgbGludXgtNS40LjE3L2ZzL3JlaXNlcjQvem5vZGUuaAkyMDIwLTAyLTA1
IDIwOjUzOjQxLjQ4OTIyMjQ1OCArMDEwMApAQCAtMCwwICsxLDQzNSBAQAorLyogQ29weXJpZ2h0
IDIwMDEsIDIwMDIsIDIwMDMsIDIwMDQgYnkgSGFucyBSZWlzZXIsIGxpY2Vuc2luZyBnb3Zlcm5l
ZCBieQorICogcmVpc2VyNC9SRUFETUUgKi8KKworLyogRGVjbGFyYXRpb24gb2Ygem5vZGUgKFph
bSdzIG5vZGUpLiBTZWUgem5vZGUuYyBmb3IgbW9yZSBkZXRhaWxzLiAqLworCisjaWZuZGVmIF9f
Wk5PREVfSF9fCisjZGVmaW5lIF9fWk5PREVfSF9fCisKKyNpbmNsdWRlICJmb3J3YXJkLmgiCisj
aW5jbHVkZSAiZGVidWcuaCIKKyNpbmNsdWRlICJkZm9ybWF0LmgiCisjaW5jbHVkZSAia2V5Lmgi
CisjaW5jbHVkZSAiY29vcmQuaCIKKyNpbmNsdWRlICJwbHVnaW4vbm9kZS9ub2RlLmgiCisjaW5j
bHVkZSAiam5vZGUuaCIKKyNpbmNsdWRlICJsb2NrLmgiCisjaW5jbHVkZSAicmVhZGFoZWFkLmgi
CisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+
CisjaW5jbHVkZSA8bGludXgvcGFnZW1hcC5oPgkvKiBmb3IgUEFHRV9DQUNIRV9TSVpFICovCisj
aW5jbHVkZSA8YXNtL2F0b21pYy5oPgorCisvKiB6bm9kZSB0cmFja3MgaXRzIHBvc2l0aW9uIHdp
dGhpbiBwYXJlbnQgKGludGVybmFsIGl0ZW0gaW4gYSBwYXJlbnQgbm9kZSwKKyAqIHRoYXQgY29u
dGFpbnMgem5vZGUncyBibG9jayBudW1iZXIpLiAqLwordHlwZWRlZiBzdHJ1Y3QgcGFyZW50X2Nv
b3JkIHsKKwl6bm9kZSAqbm9kZTsKKwlwb3NfaW5fbm9kZV90IGl0ZW1fcG9zOworfSBwYXJlbnRf
Y29vcmRfdDsKKworLyogJnpub2RlIC0gbm9kZSBpbiBhIHJlaXNlcjQgdHJlZS4KKworICAgTk9U
RS1OSUtJVEEgZmllbGRzIGluIHRoaXMgc3RydWN0IGhhdmUgdG8gYmUgcmVhcnJhbmdlZCAobGF0
ZXIpIHRvIHJlZHVjZQorICAgY2FjaGVsaW5lIHByZXNzdXJlLgorCisgICBMb2NraW5nOgorCisg
ICBMb25nIHRlcm06IGRhdGEgaW4gYSBkaXNrIG5vZGUgYXR0YWNoZWQgdG8gdGhpcyB6bm9kZSBh
cmUgcHJvdGVjdGVkCisgICBieSBsb25nIHRlcm0sIGRlYWRsb2NrIGF3YXJlIGxvY2sgLT5sb2Nr
OworCisgICBTcGluIGxvY2s6IHRoZSBmb2xsb3dpbmcgZmllbGRzIGFyZSBwcm90ZWN0ZWQgYnkg
dGhlIHNwaW4gbG9jazoKKworICAgIC0+bG9jaworCisgICBGb2xsb3dpbmcgZmllbGRzIGFyZSBw
cm90ZWN0ZWQgYnkgdGhlIGdsb2JhbCB0cmVlIGxvY2s6CisKKyAgICAtPmxlZnQKKyAgICAtPnJp
Z2h0CisgICAgLT5pbl9wYXJlbnQKKyAgICAtPmNfY291bnQKKworICAgRm9sbG93aW5nIGZpZWxk
cyBhcmUgcHJvdGVjdGVkIGJ5IHRoZSBnbG9iYWwgZGVsaW1pdGluZyBrZXkgbG9jayAoZGtfbG9j
ayk6CisKKyAgICAtPmxkX2tleSAodG8gdXBkYXRlIC0+bGRfa2V5IGxvbmctdGVybSBsb2NrIG9u
IHRoZSBub2RlIGlzIGFsc28gcmVxdWlyZWQpCisgICAgLT5yZF9rZXkKKworICAgRm9sbG93aW5n
IGZpZWxkcyBhcmUgcHJvdGVjdGVkIGJ5IHRoZSBsb25nIHRlcm0gbG9jazoKKworICAgIC0+bnJf
aXRlbXMKKworICAgLT5ub2RlX3BsdWdpbiBpcyBuZXZlciBjaGFuZ2VkIG9uY2Ugc2V0LiBUaGlz
IG1lYW5zIHRoYXQgYWZ0ZXIgY29kZSBtYWRlCisgICBpdHNlbGYgc3VyZSB0aGF0IGZpZWxkIGlz
IHZhbGlkIGl0IGNhbiBiZSBhY2Nlc3NlZCB3aXRob3V0IGFueSBhZGRpdGlvbmFsCisgICBsb2Nr
aW5nLgorCisgICAtPmxldmVsIGlzIGltbXV0YWJsZS4KKworICAgSW52YXJpYW50cyBpbnZvbHZp
bmcgdGhpcyBkYXRhLXR5cGU6CisKKyAgICAgIFt6bm9kZS1mYWtlXQorICAgICAgW3pub2RlLWxl
dmVsXQorICAgICAgW3pub2RlLWNvbm5lY3RlZF0KKyAgICAgIFt6bm9kZS1jX2NvdW50XQorICAg
ICAgW3pub2RlLXJlZnNdCisgICAgICBbam5vZGUtcmVmc10KKyAgICAgIFtqbm9kZS1xdWV1ZWRd
CisgICAgICBbem5vZGUtbW9kaWZ5XQorCisgICAgRm9yIHRoaXMgdG8gYmUgbWFkZSBpbnRvIGEg
Y2x1c3RlcmluZyBvciBOVU1BIGZpbGVzeXN0ZW0sIHdlIHdvdWxkIHdhbnQgdG8gZWxpbWluYXRl
IGFsbCBvZiB0aGUgZ2xvYmFsIGxvY2tzLgorICAgIFN1Z2dlc3Rpb25zIGZvciBob3cgdG8gZG8g
dGhhdCBhcmUgZGVzaXJlZC4qLworc3RydWN0IHpub2RlIHsKKwkvKiBFbWJlZGRlZCBqbm9kZS4g
Ki8KKwlqbm9kZSB6am5vZGU7CisKKwkvKiBjb250YWlucyB0aHJlZSBzdWJmaWVsZHMsIG5vZGUs
IHBvc19pbl9ub2RlLCBhbmQgcG9zX2luX3VuaXQuCisKKwkgICBwb3NfaW5fbm9kZSBhbmQgcG9z
X2luX3VuaXQgYXJlIG9ubHkgaGludHMgdGhhdCBhcmUgY2FjaGVkIHRvCisJICAgc3BlZWQgdXAg
bG9va3VwcyBkdXJpbmcgYmFsYW5jaW5nLiBUaGV5IGFyZSBub3QgcmVxdWlyZWQgdG8gYmUgdXAg
dG8KKwkgICBkYXRlLiBTeW5jaGVkIGluIGZpbmRfY2hpbGRfcHRyKCkuCisKKwkgICBUaGlzIHZh
bHVlIGFsbG93cyB1cyB0byBhdm9pZCBleHBlbnNpdmUgYmluYXJ5IHNlYXJjaGVzLgorCisJICAg
aW5fcGFyZW50LT5ub2RlIHBvaW50cyB0byB0aGUgcGFyZW50IG9mIHRoaXMgbm9kZSwgYW5kIGlz
IE5PVCBhCisJICAgaGludC4KKwkgKi8KKwlwYXJlbnRfY29vcmRfdCBpbl9wYXJlbnQ7CisKKwkv
KgorCSAqIHNpYmxpbmcgbGlzdCBwb2ludGVycworCSAqLworCisJLyogbGVmdC1uZWlnaGJvciAq
LworCXpub2RlICpsZWZ0OworCS8qIHJpZ2h0LW5laWdoYm9yICovCisJem5vZGUgKnJpZ2h0Owor
CisJLyogbG9uZyB0ZXJtIGxvY2sgb24gbm9kZSBjb250ZW50LiBUaGlzIGxvY2sgc3VwcG9ydHMg
ZGVhZGxvY2sKKwkgICBkZXRlY3Rpb24uIFNlZSBsb2NrLmMKKwkgKi8KKwl6bG9jayBsb2NrOwor
CisJLyogWW91IGNhbm5vdCByZW1vdmUgZnJvbSBtZW1vcnkgYSBub2RlIHRoYXQgaGFzIGNoaWxk
cmVuIGluCisJICAgbWVtb3J5LiBUaGlzIGlzIGJlY2F1c2Ugd2UgcmVseSBvbiB0aGUgZmFjdCB0
aGF0IHBhcmVudCBvZiBnaXZlbgorCSAgIG5vZGUgY2FuIGFsd2F5cyBiZSByZWFjaGVkIHdpdGhv
dXQgYmxvY2tpbmcgZm9yIGlvLiBXaGVuIHJlYWRpbmcgYQorCSAgIG5vZGUgaW50byBtZW1vcnkg
eW91IG11c3QgaW5jcmVhc2UgdGhlIGNfY291bnQgb2YgaXRzIHBhcmVudCwgd2hlbgorCSAgIHJl
bW92aW5nIGl0IGZyb20gbWVtb3J5IHlvdSBtdXN0IGRlY3JlYXNlIHRoZSBjX2NvdW50LiAgVGhp
cyBtYWtlcworCSAgIHRoZSBjb2RlIHNpbXBsZXIsIGFuZCB0aGUgY2FzZXMgd2hlcmUgaXQgaXMg
c3Vib3B0aW1hbCBhcmUgdHJ1bHkKKwkgICBvYnNjdXJlLgorCSAqLworCWludCBjX2NvdW50Owor
CisJLyogcGx1Z2luIG9mIG5vZGUgYXR0YWNoZWQgdG8gdGhpcyB6bm9kZS4gTlVMTCBpZiB6bm9k
ZSBpcyBub3QKKwkgICBsb2FkZWQuICovCisJbm9kZV9wbHVnaW4gKm5wbHVnOworCisJLyogdmVy
c2lvbiBvZiB6bm9kZSBkYXRhLiBUaGlzIGlzIGluY3JlYXNlZCBvbiBlYWNoIG1vZGlmaWNhdGlv
bi4gVGhpcworCSAqIGlzIG5lY2Vzc2FyeSB0byBpbXBsZW1lbnQgc2VhbHMgKHNlZSBzZWFsLltj
aF0pIGVmZmljaWVudGx5LiAqLworCV9fdTY0IHZlcnNpb247CisKKwkvKiBsZWZ0IGRlbGltaXRp
bmcga2V5LiBOZWNlc3NhcnkgdG8gZWZmaWNpZW50bHkgcGVyZm9ybQorCSAgIGJhbGFuY2luZyB3
aXRoIG5vZGUtbGV2ZWwgbG9ja2luZy4gS2VwdCBpbiBtZW1vcnkgb25seS4gKi8KKwlyZWlzZXI0
X2tleSBsZF9rZXk7CisJLyogcmlnaHQgZGVsaW1pdGluZyBrZXkuICovCisJcmVpc2VyNF9rZXkg
cmRfa2V5OworCisJLyogem5vZGUncyB0cmVlIGxldmVsICovCisJX191MTYgbGV2ZWw7CisJLyog
bnVtYmVyIG9mIGl0ZW1zIGluIHRoaXMgbm9kZS4gVGhpcyBmaWVsZCBpcyBtb2RpZmllZCBieSBu
b2RlCisJICogcGx1Z2luLiAqLworCV9fdTE2IG5yX2l0ZW1zOworCisjaWYgUkVJU0VSNF9ERUJV
RworCXZvaWQgKmNyZWF0b3I7CisJcmVpc2VyNF9rZXkgZmlyc3Rfa2V5OworCXVuc2lnbmVkIGxv
bmcgdGltZXNfbG9ja2VkOworCWludCBsZWZ0X3ZlcnNpb247CS8qIHdoZW4gbm9kZS0+bGVmdCB3
YXMgdXBkYXRlZCAqLworCWludCByaWdodF92ZXJzaW9uOwkvKiB3aGVuIG5vZGUtPnJpZ2h0IHdh
cyB1cGRhdGVkICovCisJaW50IGxkX2tleV92ZXJzaW9uOwkvKiB3aGVuIG5vZGUtPmxkX2tleSB3
YXMgdXBkYXRlZCAqLworCWludCByZF9rZXlfdmVyc2lvbjsJLyogd2hlbiBub2RlLT5yZF9rZXkg
d2FzIHVwZGF0ZWQgKi8KKyNlbmRpZgorCit9IF9fYXR0cmlidXRlX18gKChhbGlnbmVkKDE2KSkp
OworCitPTl9ERUJVRyhleHRlcm4gYXRvbWljX3QgZGVsaW1fa2V5X3ZlcnNpb247CisgICAgKQor
CisvKiBJbiBnZW5lcmFsIEkgdGhpbmsgdGhlc2UgbWFjcm9zIHNob3VsZCBub3QgYmUgZXhwb3Nl
ZC4gKi8KKyNkZWZpbmUgem5vZGVfaXNfbG9ja2VkKG5vZGUpICAgICAgICAgIChsb2NrX2lzX2xv
Y2tlZCgmbm9kZS0+bG9jaykpCisjZGVmaW5lIHpub2RlX2lzX3Jsb2NrZWQobm9kZSkgICAgICAg
ICAobG9ja19pc19ybG9ja2VkKCZub2RlLT5sb2NrKSkKKyNkZWZpbmUgem5vZGVfaXNfd2xvY2tl
ZChub2RlKSAgICAgICAgIChsb2NrX2lzX3dsb2NrZWQoJm5vZGUtPmxvY2spKQorI2RlZmluZSB6
bm9kZV9pc193bG9ja2VkX29uY2Uobm9kZSkgICAgKGxvY2tfaXNfd2xvY2tlZF9vbmNlKCZub2Rl
LT5sb2NrKSkKKyNkZWZpbmUgem5vZGVfY2FuX2JlX3Jsb2NrZWQobm9kZSkgICAgIChsb2NrX2Nh
bl9iZV9ybG9ja2VkKCZub2RlLT5sb2NrKSkKKyNkZWZpbmUgaXNfbG9ja19jb21wYXRpYmxlKG5v
ZGUsIG1vZGUpIChsb2NrX21vZGVfY29tcGF0aWJsZSgmbm9kZS0+bG9jaywgbW9kZSkpCisvKiBN
YWNyb3MgZm9yIGFjY2Vzc2luZyB0aGUgem5vZGUgc3RhdGUuICovCisjZGVmaW5lCVpGX0NMUihw
LGYpCSAgICAgICAgSkZfQ0xSICAoWkpOT0RFKHApLCAoZikpCisjZGVmaW5lCVpGX0lTU0VUKHAs
ZikJICAgICAgICBKRl9JU1NFVChaSk5PREUocCksIChmKSkKKyNkZWZpbmUJWkZfU0VUKHAsZikJ
CUpGX1NFVCAgKFpKTk9ERShwKSwgKGYpKQorZXh0ZXJuIHpub2RlICp6Z2V0KHJlaXNlcjRfdHJl
ZSAqIHRyZWUsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBjb25zdCBibG9jaywKKwkJICAgem5v
ZGUgKiBwYXJlbnQsIHRyZWVfbGV2ZWwgbGV2ZWwsIGdmcF90IGdmcF9mbGFnKTsKK2V4dGVybiB6
bm9kZSAqemxvb2socmVpc2VyNF90cmVlICogdHJlZSwgY29uc3QgcmVpc2VyNF9ibG9ja19uciAq
IGNvbnN0IGJsb2NrKTsKK2V4dGVybiBpbnQgemxvYWQoem5vZGUgKiBub2RlKTsKK2V4dGVybiBp
bnQgemxvYWRfcmEoem5vZGUgKiBub2RlLCByYV9pbmZvX3QgKiBpbmZvKTsKK2V4dGVybiBpbnQg
emluaXRfbmV3KHpub2RlICogbm9kZSwgZ2ZwX3QgZ2ZwX2ZsYWdzKTsKK2V4dGVybiB2b2lkIHpy
ZWxzZSh6bm9kZSAqIG5vZGUpOworZXh0ZXJuIHZvaWQgem5vZGVfY2hhbmdlX3BhcmVudCh6bm9k
ZSAqIG5ld19wYXJlbnQsIHJlaXNlcjRfYmxvY2tfbnIgKiBibG9jayk7CitleHRlcm4gdm9pZCB6
bm9kZV91cGRhdGVfY3N1bSh6bm9kZSAqbm9kZSk7CisKKy8qIHNpemUgb2YgZGF0YSBpbiB6bm9k
ZSAqLworc3RhdGljIGlubGluZSB1bnNpZ25lZAorem5vZGVfc2l6ZShjb25zdCB6bm9kZSAqIG5v
ZGUgVU5VU0VEX0FSRyAvKiB6bm9kZSB0byBxdWVyeSAqLyApCit7CisJYXNzZXJ0KCJuaWtpdGEt
MTQxNiIsIG5vZGUgIT0gTlVMTCk7CisJcmV0dXJuIFBBR0VfU0laRTsKK30KKworZXh0ZXJuIHZv
aWQgcGFyZW50X2Nvb3JkX3RvX2Nvb3JkKGNvbnN0IHBhcmVudF9jb29yZF90ICogcGNvb3JkLAor
CQkJCSAgY29vcmRfdCAqIGNvb3JkKTsKK2V4dGVybiB2b2lkIGNvb3JkX3RvX3BhcmVudF9jb29y
ZChjb25zdCBjb29yZF90ICogY29vcmQsCisJCQkJICBwYXJlbnRfY29vcmRfdCAqIHBjb29yZCk7
CitleHRlcm4gdm9pZCBpbml0X3BhcmVudF9jb29yZChwYXJlbnRfY29vcmRfdCAqIHBjb29yZCwg
Y29uc3Qgem5vZGUgKiBub2RlKTsKKworZXh0ZXJuIHVuc2lnbmVkIHpub2RlX2ZyZWVfc3BhY2Uo
em5vZGUgKiBub2RlKTsKKworZXh0ZXJuIHJlaXNlcjRfa2V5ICp6bm9kZV9nZXRfcmRfa2V5KHpu
b2RlICogbm9kZSk7CitleHRlcm4gcmVpc2VyNF9rZXkgKnpub2RlX2dldF9sZF9rZXkoem5vZGUg
KiBub2RlKTsKKworZXh0ZXJuIHJlaXNlcjRfa2V5ICp6bm9kZV9zZXRfcmRfa2V5KHpub2RlICog
bm9kZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkpOworZXh0ZXJuIHJlaXNlcjRfa2V5ICp6bm9k
ZV9zZXRfbGRfa2V5KHpub2RlICogbm9kZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkpOworCisv
KiBgY29ubmVjdGVkJyBzdGF0ZSBjaGVja3MgKi8KK3N0YXRpYyBpbmxpbmUgaW50IHpub2RlX2lz
X3JpZ2h0X2Nvbm5lY3RlZChjb25zdCB6bm9kZSAqIG5vZGUpCit7CisJcmV0dXJuIFpGX0lTU0VU
KG5vZGUsIEpOT0RFX1JJR0hUX0NPTk5FQ1RFRCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IHpu
b2RlX2lzX2xlZnRfY29ubmVjdGVkKGNvbnN0IHpub2RlICogbm9kZSkKK3sKKwlyZXR1cm4gWkZf
SVNTRVQobm9kZSwgSk5PREVfTEVGVF9DT05ORUNURUQpOworfQorCitzdGF0aWMgaW5saW5lIGlu
dCB6bm9kZV9pc19jb25uZWN0ZWQoY29uc3Qgem5vZGUgKiBub2RlKQoreworCXJldHVybiB6bm9k
ZV9pc19yaWdodF9jb25uZWN0ZWQobm9kZSkgJiYgem5vZGVfaXNfbGVmdF9jb25uZWN0ZWQobm9k
ZSk7Cit9CisKK2V4dGVybiBpbnQgem5vZGVfc2hpZnRfb3JkZXI7CitleHRlcm4gaW50IHpub2Rl
X3JlaGFzaCh6bm9kZSAqIG5vZGUsIGNvbnN0IHJlaXNlcjRfYmxvY2tfbnIgKiBuZXdfYmxvY2tf
bnIpOworZXh0ZXJuIHZvaWQgem5vZGVfcmVtb3ZlKHpub2RlICosIHJlaXNlcjRfdHJlZSAqKTsK
K2V4dGVybiB6bm9kZSAqem5vZGVfcGFyZW50KGNvbnN0IHpub2RlICogbm9kZSk7CitleHRlcm4g
em5vZGUgKnpub2RlX3BhcmVudF9ub2xvY2soY29uc3Qgem5vZGUgKiBub2RlKTsKK2V4dGVybiBp
bnQgem5vZGVfYWJvdmVfcm9vdChjb25zdCB6bm9kZSAqIG5vZGUpOworZXh0ZXJuIGludCBpbml0
X3pub2RlKGpub2RlICpub2RlKTsKK2V4dGVybiBpbnQgaW5pdF96bm9kZXModm9pZCk7CitleHRl
cm4gdm9pZCBkb25lX3pub2Rlcyh2b2lkKTsKK2V4dGVybiBpbnQgem5vZGVzX3RyZWVfaW5pdChy
ZWlzZXI0X3RyZWUgKiB6dHJlZSk7CitleHRlcm4gdm9pZCB6bm9kZXNfdHJlZV9kb25lKHJlaXNl
cjRfdHJlZSAqIHp0cmVlKTsKK2V4dGVybiBpbnQgem5vZGVfY29udGFpbnNfa2V5KHpub2RlICog
bm9kZSwgY29uc3QgcmVpc2VyNF9rZXkgKiBrZXkpOworZXh0ZXJuIGludCB6bm9kZV9jb250YWlu
c19rZXlfbG9jayh6bm9kZSAqIG5vZGUsIGNvbnN0IHJlaXNlcjRfa2V5ICoga2V5KTsKK2V4dGVy
biB1bnNpZ25lZCB6bm9kZV9zYXZlX2ZyZWVfc3BhY2Uoem5vZGUgKiBub2RlKTsKK2V4dGVybiB1
bnNpZ25lZCB6bm9kZV9yZWNvdmVyX2ZyZWVfc3BhY2Uoem5vZGUgKiBub2RlKTsKK2V4dGVybiB6
bm9kZSAqemFsbG9jKGdmcF90IGdmcF9mbGFnKTsKK2V4dGVybiB2b2lkIHppbml0KHpub2RlICos
IGNvbnN0IHpub2RlICogcGFyZW50LCByZWlzZXI0X3RyZWUgKik7CitleHRlcm4gaW50IHpwYXJz
ZSh6bm9kZSAqIG5vZGUpOworCitleHRlcm4gaW50IHpub2RlX2p1c3RfY3JlYXRlZChjb25zdCB6
bm9kZSAqIG5vZGUpOworCitleHRlcm4gdm9pZCB6ZnJlZSh6bm9kZSAqIG5vZGUpOworCisjaWYg
UkVJU0VSNF9ERUJVRworZXh0ZXJuIHZvaWQgcHJpbnRfem5vZGUoY29uc3QgY2hhciAqcHJlZml4
LCBjb25zdCB6bm9kZSAqIG5vZGUpOworI2Vsc2UKKyNkZWZpbmUgcHJpbnRfem5vZGUoIHAsIG4g
KSBub29wCisjZW5kaWYKKworLyogTWFrZSBpdCBsb29rIGxpa2UgdmFyaW91cyB6bm9kZSBmdW5j
dGlvbnMgZXhpc3QgaW5zdGVhZCBvZiB0cmVhdGluZyB6bm9kZXMgYXMKKyAgIGpub2RlcyBpbiB6
bm9kZS1zcGVjaWZpYyBjb2RlLiAqLworI2RlZmluZSB6bm9kZV9wYWdlKHgpICAgICAgICAgICAg
ICAgam5vZGVfcGFnZSAoIFpKTk9ERSh4KSApCisjZGVmaW5lIHpkYXRhKHgpICAgICAgICAgICAg
ICAgICAgICBqZGF0YSAoIFpKTk9ERSh4KSApCisjZGVmaW5lIHpub2RlX2dldF9ibG9jayh4KSAg
ICAgICAgICBqbm9kZV9nZXRfYmxvY2sgKCBaSk5PREUoeCkgKQorI2RlZmluZSB6bm9kZV9jcmVh
dGVkKHgpICAgICAgICAgICAgam5vZGVfY3JlYXRlZCAoIFpKTk9ERSh4KSApCisjZGVmaW5lIHpu
b2RlX3NldF9jcmVhdGVkKHgpICAgICAgICBqbm9kZV9zZXRfY3JlYXRlZCAoIFpKTk9ERSh4KSAp
CisjZGVmaW5lIHpub2RlX2NvbnZlcnRpYmxlKHgpICAgICAgICBqbm9kZV9jb252ZXJ0aWJsZSAo
WkpOT0RFKHgpKQorI2RlZmluZSB6bm9kZV9zZXRfY29udmVydGlibGUoeCkgICAgam5vZGVfc2V0
X2NvbnZlcnRpYmxlIChaSk5PREUoeCkpCisKKyNkZWZpbmUgem5vZGVfaXNfZGlydHkoeCkgICAg
ICAgICAgIGpub2RlX2lzX2RpcnR5ICAgICggWkpOT0RFKHgpICkKKyNkZWZpbmUgem5vZGVfY2hl
Y2tfZGlydHkoeCkgICAgICAgIGpub2RlX2NoZWNrX2RpcnR5ICggWkpOT0RFKHgpICkKKyNkZWZp
bmUgem5vZGVfbWFrZV9jbGVhbih4KSAgICAgICAgIGpub2RlX21ha2VfY2xlYW4gICAoIFpKTk9E
RSh4KSApCisjZGVmaW5lIHpub2RlX3NldF9ibG9jayh4LCBiKSAgICAgICBqbm9kZV9zZXRfYmxv
Y2sgKCBaSk5PREUoeCksIChiKSApCisKKyNkZWZpbmUgc3Bpbl9sb2NrX3pub2RlKHgpICAgICAg
ICAgIHNwaW5fbG9ja19qbm9kZSAoIFpKTk9ERSh4KSApCisjZGVmaW5lIHNwaW5fdW5sb2NrX3pu
b2RlKHgpICAgICAgICBzcGluX3VubG9ja19qbm9kZSAoIFpKTk9ERSh4KSApCisjZGVmaW5lIHNw
aW5fdHJ5bG9ja196bm9kZSh4KSAgICAgICBzcGluX3RyeWxvY2tfam5vZGUgKCBaSk5PREUoeCkg
KQorI2RlZmluZSBzcGluX3pub2RlX2lzX2xvY2tlZCh4KSAgICAgc3Bpbl9qbm9kZV9pc19sb2Nr
ZWQgKCBaSk5PREUoeCkgKQorI2RlZmluZSBzcGluX3pub2RlX2lzX25vdF9sb2NrZWQoeCkgc3Bp
bl9qbm9kZV9pc19ub3RfbG9ja2VkICggWkpOT0RFKHgpICkKKworI2lmIFJFSVNFUjRfREVCVUcK
K2V4dGVybiBpbnQgem5vZGVfeF9jb3VudF9pc19wcm90ZWN0ZWQoY29uc3Qgem5vZGUgKiBub2Rl
KTsKK2V4dGVybiBpbnQgem5vZGVfaW52YXJpYW50KHpub2RlICogbm9kZSk7CisjZW5kaWYKKwor
LyogYWNxdWlyZSByZWZlcmVuY2UgdG8gQG5vZGUgKi8KK3N0YXRpYyBpbmxpbmUgem5vZGUgKnpy
ZWYoem5vZGUgKiBub2RlKQoreworCS8qIGNoYW5nZSBvZiB4X2NvdW50IGZyb20gMCB0byAxIGlz
IHByb3RlY3RlZCBieSB0cmVlIHNwaW4tbG9jayAqLworCXJldHVybiBKWk5PREUoanJlZihaSk5P
REUobm9kZSkpKTsKK30KKworLyogcmVsZWFzZSByZWZlcmVuY2UgdG8gQG5vZGUgKi8KK3N0YXRp
YyBpbmxpbmUgdm9pZCB6cHV0KHpub2RlICogbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0zNTY0
Iiwgem5vZGVfaW52YXJpYW50KG5vZGUpKTsKKwlqcHV0KFpKTk9ERShub2RlKSk7Cit9CisKKy8q
IGdldCB0aGUgbGV2ZWwgZmllbGQgZm9yIGEgem5vZGUgKi8KK3N0YXRpYyBpbmxpbmUgdHJlZV9s
ZXZlbCB6bm9kZV9nZXRfbGV2ZWwoY29uc3Qgem5vZGUgKiBub2RlKQoreworCXJldHVybiBub2Rl
LT5sZXZlbDsKK30KKworLyogZ2V0IHRoZSBsZXZlbCBmaWVsZCBmb3IgYSBqbm9kZSAqLworc3Rh
dGljIGlubGluZSB0cmVlX2xldmVsIGpub2RlX2dldF9sZXZlbChjb25zdCBqbm9kZSAqIG5vZGUp
Cit7CisJaWYgKGpub2RlX2lzX3pub2RlKG5vZGUpKQorCQlyZXR1cm4gem5vZGVfZ2V0X2xldmVs
KEpaTk9ERShub2RlKSk7CisJZWxzZQorCQkvKiB1bmZvcm1hdHRlZCBub2RlcyBhcmUgYWxsIGF0
IHRoZSBMRUFGX0xFVkVMIGFuZCBmb3IKKwkJICAgInNlbWktZm9ybWF0dGVkIiBub2RlcyBsaWtl
IGJpdG1hcHMsIGxldmVsIGRvZXNuJ3QgbWF0dGVyLiAqLworCQlyZXR1cm4gTEVBRl9MRVZFTDsK
K30KKworLyogdHJ1ZSBpZiBqbm9kZSBpcyBvbiBsZWFmIGxldmVsICovCitzdGF0aWMgaW5saW5l
IGludCBqbm9kZV9pc19sZWFmKGNvbnN0IGpub2RlICogbm9kZSkKK3sKKwlpZiAoam5vZGVfaXNf
em5vZGUobm9kZSkpCisJCXJldHVybiAoem5vZGVfZ2V0X2xldmVsKEpaTk9ERShub2RlKSkgPT0g
TEVBRl9MRVZFTCk7CisJaWYgKGpub2RlX2dldF90eXBlKG5vZGUpID09IEpOT0RFX1VORk9STUFU
VEVEX0JMT0NLKQorCQlyZXR1cm4gMTsKKwlyZXR1cm4gMDsKK30KKworLyogcmV0dXJuIHpub2Rl
J3MgdHJlZSAqLworc3RhdGljIGlubGluZSByZWlzZXI0X3RyZWUgKnpub2RlX2dldF90cmVlKGNv
bnN0IHpub2RlICogbm9kZSkKK3sKKwlhc3NlcnQoIm5pa2l0YS0yNjkyIiwgbm9kZSAhPSBOVUxM
KTsKKwlyZXR1cm4gam5vZGVfZ2V0X3RyZWUoWkpOT0RFKG5vZGUpKTsKK30KKworLyogcmVzb2x2
ZSByYWNlIHdpdGggenB1dCAqLworc3RhdGljIGlubGluZSB6bm9kZSAqem5vZGVfcmlwX2NoZWNr
KHJlaXNlcjRfdHJlZSAqIHRyZWUsIHpub2RlICogbm9kZSkKK3sKKwlqbm9kZSAqajsKKworCWog
PSBqbm9kZV9yaXBfc3luYyh0cmVlLCBaSk5PREUobm9kZSkpOworCWlmIChsaWtlbHkoaiAhPSBO
VUxMKSkKKwkJbm9kZSA9IEpaTk9ERShqKTsKKwllbHNlCisJCW5vZGUgPSBOVUxMOworCXJldHVy
biBub2RlOworfQorCisjaWYgZGVmaW5lZChSRUlTRVI0X0RFQlVHKQoraW50IHpub2RlX2lzX2xv
YWRlZChjb25zdCB6bm9kZSAqIG5vZGUgLyogem5vZGUgdG8gcXVlcnkgKi8gKTsKKyNlbmRpZgor
CitleHRlcm4gX191NjQgem5vZGVfYnVpbGRfdmVyc2lvbihyZWlzZXI0X3RyZWUgKiB0cmVlKTsK
KworLyogRGF0YS1oYW5kbGVzLiAgQSBkYXRhIGhhbmRsZSBvYmplY3QgbWFuYWdlcyBwYWlyaW5n
IGNhbGxzIHRvIHpsb2FkKCkgYW5kIHpyZWxzZSgpLiAgV2UKKyAgIG11c3QgbG9hZCB0aGUgZGF0
YSBmb3IgYSBub2RlIGluIG1hbnkgcGxhY2VzLiAgV2UgY291bGQgZG8gdGhpcyBieSBzaW1wbHkg
Y2FsbGluZworICAgemxvYWQoKSBldmVyeXdoZXJlLCB0aGUgZGlmZmljdWx0eSBhcmlzZXMgd2hl
biB3ZSBtdXN0IHJlbGVhc2UgdGhlIGxvYWRlZCBkYXRhIGJ5CisgICBjYWxsaW5nIHpyZWxzZS4g
IEluIGEgZnVuY3Rpb24gd2l0aCBtYW55IHBvc3NpYmxlIGVycm9yL3JldHVybiBwYXRocywgaXQg
cmVxdWlyZXMgZXh0cmEKKyAgIHdvcmsgdG8gZmlndXJlIG91dCB3aGljaCBleGl0IHBhdGhzIG11
c3QgY2FsbCB6cmVsc2UgYW5kIHRob3NlIHdoaWNoIGRvIG5vdC4gIFRoZSBkYXRhCisgICBoYW5k
bGUgYXV0b21hdGljYWxseSBjYWxscyB6cmVsc2UgZm9yIGV2ZXJ5IHpsb2FkIHRoYXQgaXQgaXMg
cmVzcG9uc2libGUgZm9yLiAgSW4gdGhhdAorICAgc2Vuc2UsIGl0IGFjdHMgbXVjaCBsaWtlIGEg
bG9ja19oYW5kbGUuCisqLwordHlwZWRlZiBzdHJ1Y3QgbG9hZF9jb3VudCB7CisJem5vZGUgKm5v
ZGU7CisJaW50IGRfcmVmOworfSBsb2FkX2NvdW50OworCitleHRlcm4gdm9pZCBpbml0X2xvYWRf
Y291bnQobG9hZF9jb3VudCAqIGxjKTsJLyogSW5pdGlhbGl6ZSBhIGxvYWRfY291bnQgc2V0IHRo
ZSBjdXJyZW50IG5vZGUgdG8gTlVMTC4gKi8KK2V4dGVybiB2b2lkIGRvbmVfbG9hZF9jb3VudChs
b2FkX2NvdW50ICogZGgpOwkvKiBGaW5hbGl6ZSBhIGxvYWRfY291bnQ6IGNhbGwgenJlbHNlKCkg
aWYgbmVjZXNzYXJ5ICovCitleHRlcm4gaW50IGluY3JfbG9hZF9jb3VudF96bm9kZShsb2FkX2Nv
dW50ICogZGgsIHpub2RlICogbm9kZSk7CS8qIFNldCB0aGUgYXJndW1lbnQgem5vZGUgdG8gdGhl
IGN1cnJlbnQgbm9kZSwgY2FsbCB6bG9hZCgpLiAqLworZXh0ZXJuIGludCBpbmNyX2xvYWRfY291
bnRfam5vZGUobG9hZF9jb3VudCAqIGRoLCBqbm9kZSAqIG5vZGUpOwkvKiBJZiB0aGUgYXJndW1l
bnQgam5vZGUgaXMgZm9ybWF0dGVkLCBkbyB0aGUgc2FtZSBhcworCQkJCQkJCQkJICogaW5jcl9s
b2FkX2NvdW50X3pub2RlLCBvdGhlcndpc2UgZG8gbm90aGluZyAodW5mb3JtYXR0ZWQgbm9kZXMK
KwkJCQkJCQkJCSAqIGRvbid0IHJlcXVpcmUgemxvYWQvenJlbHNlIHRyZWF0bWVudCkuICovCitl
eHRlcm4gdm9pZCBtb3ZlX2xvYWRfY291bnQobG9hZF9jb3VudCAqIG5ldywgbG9hZF9jb3VudCAq
IG9sZCk7CS8qIE1vdmUgdGhlIGNvbnRlbnRzIG9mIGEgbG9hZF9jb3VudC4gIE9sZCBoYW5kbGUg
aXMgcmVsZWFzZWQuICovCitleHRlcm4gdm9pZCBjb3B5X2xvYWRfY291bnQobG9hZF9jb3VudCAq
IG5ldywgbG9hZF9jb3VudCAqIG9sZCk7CS8qIENvcHkgdGhlIGNvbnRlbnRzIG9mIGEgbG9hZF9j
b3VudC4gIE9sZCBoYW5kbGUgcmVtYWlucyBoZWxkLiAqLworCisvKiBWYXJpYWJsZSBpbml0aWFs
aXplcnMgZm9yIGxvYWRfY291bnQuICovCisjZGVmaW5lIElOSVRfTE9BRF9DT1VOVCAoIGxvYWRf
Y291bnQgKiApeyAubm9kZSA9IE5VTEwsIC5kX3JlZiA9IDAgfQorI2RlZmluZSBJTklUX0xPQURf
Q09VTlRfTk9ERSggbiApICggbG9hZF9jb3VudCApeyAubm9kZSA9ICggbiApLCAuZF9yZWYgPSAw
IH0KKy8qIEEgY29udmVuaWVuY2UgbWFjcm8gZm9yIHVzZSBpbiBhc3NlcnRpb25zIG9yIGRlYnVn
LW9ubHkgY29kZSwgd2hlcmUgbG9hZGVkCisgICBkYXRhIGlzIG9ubHkgcmVxdWlyZWQgdG8gcGVy
Zm9ybSB0aGUgZGVidWdnaW5nIGNoZWNrLiAgVGhpcyBtYWNybworICAgZW5jYXBzdWxhdGVzIGFu
IGV4cHJlc3Npb24gaW5zaWRlIGEgcGFpciBvZiBjYWxscyB0byB6bG9hZCgpL3pyZWxzZSgpLiAq
LworI2RlZmluZSBXSVRIX0RBVEEoIG5vZGUsIGV4cCApCQkJCVwKKyh7CQkJCQkJCVwKKwlsb25n
IF9fd2l0aF9kaF9yZXN1bHQ7CQkJCVwKKwl6bm9kZSAqX193aXRoX2RoX25vZGU7CQkJCVwKKwkJ
CQkJCQlcCisJX193aXRoX2RoX25vZGUgPSAoIG5vZGUgKTsJCQlcCisJX193aXRoX2RoX3Jlc3Vs
dCA9IHpsb2FkKCBfX3dpdGhfZGhfbm9kZSApOwlcCisJaWYoIF9fd2l0aF9kaF9yZXN1bHQgPT0g
MCApIHsJCQlcCisJCV9fd2l0aF9kaF9yZXN1bHQgPSAoIGxvbmcgKSggZXhwICk7CVwKKwkJenJl
bHNlKCBfX3dpdGhfZGhfbm9kZSApOwkJXAorCX0JCQkJCQlcCisJX193aXRoX2RoX3Jlc3VsdDsJ
CQkJXAorfSkKKworLyogU2FtZSBhcyBhYm92ZSwgYnV0IGFjY2VwdHMgYSByZXR1cm4gdmFsdWUg
aW4gY2FzZSB6bG9hZCBmYWlscy4gKi8KKyNkZWZpbmUgV0lUSF9EQVRBX1JFVCggbm9kZSwgcmV0
LCBleHAgKQkJCVwKKyh7CQkJCQkJCVwKKwlpbnQgX193aXRoX2RoX3Jlc3VsdDsJCQkJXAorCXpu
b2RlICpfX3dpdGhfZGhfbm9kZTsJCQkJXAorCQkJCQkJCVwKKwlfX3dpdGhfZGhfbm9kZSA9ICgg
bm9kZSApOwkJCVwKKwlfX3dpdGhfZGhfcmVzdWx0ID0gemxvYWQoIF9fd2l0aF9kaF9ub2RlICk7
CVwKKwlpZiggX193aXRoX2RoX3Jlc3VsdCA9PSAwICkgewkJCVwKKwkJX193aXRoX2RoX3Jlc3Vs
dCA9ICggaW50ICkoIGV4cCApOwlcCisJCXpyZWxzZSggX193aXRoX2RoX25vZGUgKTsJCVwKKwl9
IGVsc2UJCQkJCQlcCisJCV9fd2l0aF9kaF9yZXN1bHQgPSAoIHJldCApOwkJXAorCV9fd2l0aF9k
aF9yZXN1bHQ7CQkJCVwKK30pCisKKyNkZWZpbmUgV0lUSF9DT09SRChjb29yZCwgZXhwKQkJCVwK
Kyh7CQkJCQkJXAorCWNvb3JkX3QgKl9fY29vcmQ7CQkJXAorCQkJCQkJXAorCV9fY29vcmQgPSAo
Y29vcmQpOwkJCVwKKwljb29yZF9jbGVhcl9pcGx1ZyhfX2Nvb3JkKTsJCVwKKwlXSVRIX0RBVEEo
X19jb29yZC0+bm9kZSwgZXhwKTsJCVwKK30pCisKKyNpZiBSRUlTRVI0X0RFQlVHCisjZGVmaW5l
IFNUT1JFX0NPVU5URVJTCQkJCQkJXAorCXJlaXNlcjRfbG9ja19jbnRfaW5mbyBfX2VudHJ5X2Nv
dW50ZXJzID0JCVwKKwkJKnJlaXNlcjRfbG9ja19jb3VudGVycygpCisjZGVmaW5lIENIRUNLX0NP
VU5URVJTCQkJCQkJICAgICAgICBcCitPTl9ERUJVR19DT05URVhUKAkJCQkJCSAgICAgICAgXAor
KHsJCQkJCQkJICAgICAgICAJXAorCV9fZW50cnlfY291bnRlcnMueF9yZWZzID0gcmVpc2VyNF9s
b2NrX2NvdW50ZXJzKCkgLT4geF9yZWZzOwlcCisJX19lbnRyeV9jb3VudGVycy50X3JlZnMgPSBy
ZWlzZXI0X2xvY2tfY291bnRlcnMoKSAtPiB0X3JlZnM7CVwKKwlfX2VudHJ5X2NvdW50ZXJzLmRf
cmVmcyA9IHJlaXNlcjRfbG9ja19jb3VudGVycygpIC0+IGRfcmVmczsJXAorCWFzc2VydCgibmlr
aXRhLTIxNTkiLAkJCQkJICAgICAgICBcCisJICAgICAgICFtZW1jbXAoJl9fZW50cnlfY291bnRl
cnMsIHJlaXNlcjRfbG9ja19jb3VudGVycygpLAlcCisJCSAgICAgICBzaXplb2YgX19lbnRyeV9j
b3VudGVycykpOwkJICAgICAgICBcCit9KSApCisKKyNlbHNlCisjZGVmaW5lIFNUT1JFX0NPVU5U
RVJTCisjZGVmaW5lIENIRUNLX0NPVU5URVJTIG5vb3AKKyNlbmRpZgorCisvKiBfX1pOT0RFX0hf
XyAqLworI2VuZGlmCisKKy8qIE1ha2UgTGludXMgaGFwcHkuCisgICBMb2NhbCB2YXJpYWJsZXM6
CisgICBjLWluZGVudGF0aW9uLXN0eWxlOiAiSyZSIgorICAgbW9kZS1uYW1lOiAiTEMiCisgICBj
LWJhc2ljLW9mZnNldDogOAorICAgdGFiLXdpZHRoOiA4CisgICBmaWxsLWNvbHVtbjogMTIwCisg
ICBFbmQ6CisqLwpkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9p
bmNsdWRlL2xpbnV4L2ZzLmggbGludXgtNS40LjE3L2luY2x1ZGUvbGludXgvZnMuaAotLS0gbGlu
dXgtNS40LjE3Lm9yaWcvaW5jbHVkZS9saW51eC9mcy5oCTIwMjAtMDItMDEgMTA6MzQ6NTMuMDAw
MDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvaW5jbHVkZS9saW51eC9mcy5oCTIwMjAtMDIt
MDUgMjA6NTQ6MTguMjI4NTA4NzE4ICswMTAwCkBAIC0yNTAsNyArMjUwLDcgQEAKICAqLwogI2Rl
ZmluZSBGSUxFU1lTVEVNX01BWF9TVEFDS19ERVBUSCAyCiAKLS8qKiAKKy8qKgogICogZW51bSBw
b3NpdGl2ZV9hb3BfcmV0dXJucyAtIGFvcCByZXR1cm4gY29kZXMgd2l0aCBzcGVjaWZpYyBzZW1h
bnRpY3MKICAqCiAgKiBAQU9QX1dSSVRFUEFHRV9BQ1RJVkFURTogSW5mb3JtcyB0aGUgY2FsbGVy
IHRoYXQgcGFnZSB3cml0ZWJhY2sgaGFzCkBAIC0yNjAsNyArMjYwLDcgQEAKICAqIAkJCSAgICBi
ZSBhIGNhbmRpZGF0ZSBmb3Igd3JpdGViYWNrIGFnYWluIGluIHRoZSBuZWFyCiAgKiAJCQkgICAg
ZnV0dXJlLiAgT3RoZXIgY2FsbGVycyBtdXN0IGJlIGNhcmVmdWwgdG8gdW5sb2NrCiAgKiAJCQkg
ICAgdGhlIHBhZ2UgaWYgdGhleSBnZXQgdGhpcyByZXR1cm4uICBSZXR1cm5lZCBieQotICogCQkJ
ICAgIHdyaXRlcGFnZSgpOyAKKyAqIAkJCSAgICB3cml0ZXBhZ2UoKTsKICAqCiAgKiBAQU9QX1RS
VU5DQVRFRF9QQUdFOiBUaGUgQU9QIG1ldGhvZCB0aGF0IHdhcyBoYW5kZWQgYSBsb2NrZWQgcGFn
ZSBoYXMKICAqICAJCQl1bmxvY2tlZCBpdCBhbmQgdGhlIHBhZ2UgbWlnaHQgaGF2ZSBiZWVuIHRy
dW5jYXRlZC4KQEAgLTI5Miw2ICsyOTIsOCBAQAogc3RydWN0IHBhZ2U7CiBzdHJ1Y3QgYWRkcmVz
c19zcGFjZTsKIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbDsKK3N0cnVjdCB3Yl93cml0ZWJhY2tf
d29yazsKK3N0cnVjdCBiZGlfd3JpdGViYWNrOwogCiAvKgogICogV3JpdGUgbGlmZSB0aW1lIGhp
bnQgdmFsdWVzLgpAQCAtNDA3LDYgKzQwOSw3IEBACiAJaW50ICgqc3dhcF9hY3RpdmF0ZSkoc3Ry
dWN0IHN3YXBfaW5mb19zdHJ1Y3QgKnNpcywgc3RydWN0IGZpbGUgKmZpbGUsCiAJCQkJc2VjdG9y
X3QgKnNwYW4pOwogCXZvaWQgKCpzd2FwX2RlYWN0aXZhdGUpKHN0cnVjdCBmaWxlICpmaWxlKTsK
KwlpbnQgYmF0Y2hfbG9ja190YWJ1OwogfTsKIAogZXh0ZXJuIGNvbnN0IHN0cnVjdCBhZGRyZXNz
X3NwYWNlX29wZXJhdGlvbnMgZW1wdHlfYW9wczsKQEAgLTE5NTgsNiArMTk2MSwxNCBAQAogCWlu
dCAoKnJlbW91bnRfZnMpIChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKiwgaW50ICosIGNoYXIgKik7CiAJ
dm9pZCAoKnVtb3VudF9iZWdpbikgKHN0cnVjdCBzdXBlcl9ibG9jayAqKTsKIAorCWxvbmcgKCp3
cml0ZWJhY2tfaW5vZGVzKShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAorCQkJCSBzdHJ1Y3QgYmRp
X3dyaXRlYmFjayAqd2IsCisJCQkJIHN0cnVjdCB3cml0ZWJhY2tfY29udHJvbCAqd2JjLAorCQkJ
CSBzdHJ1Y3Qgd2Jfd3JpdGViYWNrX3dvcmsgKndvcmssCisJCQkJIGJvb2wgZmx1c2hfYWxsKTsK
Kwl2b2lkICgqc3luY19pbm9kZXMpIChzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLAorCQkJCXN0cnVj
dCB3cml0ZWJhY2tfY29udHJvbCAqd2JjKTsKKwogCWludCAoKnNob3dfb3B0aW9ucykoc3RydWN0
IHNlcV9maWxlICosIHN0cnVjdCBkZW50cnkgKik7CiAJaW50ICgqc2hvd19kZXZuYW1lKShzdHJ1
Y3Qgc2VxX2ZpbGUgKiwgc3RydWN0IGRlbnRyeSAqKTsKIAlpbnQgKCpzaG93X3BhdGgpKHN0cnVj
dCBzZXFfZmlsZSAqLCBzdHJ1Y3QgZGVudHJ5ICopOwpAQCAtMjczMCw2ICsyNzQxLDEzIEBACiBl
eHRlcm4gaW50IGludmFsaWRhdGVfaW5vZGVfcGFnZXMyX3JhbmdlKHN0cnVjdCBhZGRyZXNzX3Nw
YWNlICptYXBwaW5nLAogCQkJCQkgcGdvZmZfdCBzdGFydCwgcGdvZmZfdCBlbmQpOwogZXh0ZXJu
IGludCB3cml0ZV9pbm9kZV9ub3coc3RydWN0IGlub2RlICosIGludCk7CitleHRlcm4gdm9pZCB3
cml0ZWJhY2tfc2tpcF9zYl9pbm9kZXMoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKKwkJCQkgICAg
IHN0cnVjdCBiZGlfd3JpdGViYWNrICp3Yik7CitleHRlcm4gbG9uZyBnZW5lcmljX3dyaXRlYmFj
a19zYl9pbm9kZXMoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwKKwkJCQkJc3RydWN0IGJkaV93cml0
ZWJhY2sgKndiLAorCQkJCQlzdHJ1Y3Qgd3JpdGViYWNrX2NvbnRyb2wgKndiYywKKwkJCQkJc3Ry
dWN0IHdiX3dyaXRlYmFja193b3JrICp3b3JrLAorCQkJCQlib29sIGZsdXNoX2FsbCk7CiBleHRl
cm4gaW50IGZpbGVtYXBfZmRhdGF3cml0ZShzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqKTsKIGV4dGVy
biBpbnQgZmlsZW1hcF9mbHVzaChzdHJ1Y3QgYWRkcmVzc19zcGFjZSAqKTsKIGV4dGVybiBpbnQg
ZmlsZW1hcF9mZGF0YXdhaXRfa2VlcF9lcnJvcnMoc3RydWN0IGFkZHJlc3Nfc3BhY2UgKm1hcHBp
bmcpOwpAQCAtMzAwNCw3ICszMDIyLDcgQEAKIGV4dGVybiBzc2l6ZV90IGtlcm5lbF93cml0ZShz
dHJ1Y3QgZmlsZSAqLCBjb25zdCB2b2lkICosIHNpemVfdCwgbG9mZl90ICopOwogZXh0ZXJuIHNz
aXplX3QgX19rZXJuZWxfd3JpdGUoc3RydWN0IGZpbGUgKiwgY29uc3Qgdm9pZCAqLCBzaXplX3Qs
IGxvZmZfdCAqKTsKIGV4dGVybiBzdHJ1Y3QgZmlsZSAqIG9wZW5fZXhlYyhjb25zdCBjaGFyICop
OwotIAorCiAvKiBmcy9kY2FjaGUuYyAtLSBnZW5lcmljIGZzIHN1cHBvcnQgZnVuY3Rpb25zICov
CiBleHRlcm4gYm9vbCBpc19zdWJkaXIoc3RydWN0IGRlbnRyeSAqLCBzdHJ1Y3QgZGVudHJ5ICop
OwogZXh0ZXJuIGJvb2wgcGF0aF9pc191bmRlcihjb25zdCBzdHJ1Y3QgcGF0aCAqLCBjb25zdCBz
dHJ1Y3QgcGF0aCAqKTsKQEAgLTMwMTQsNiArMzAzMiw4IEBACiAjaW5jbHVkZSA8bGludXgvZXJy
Lmg+CiAKIC8qIG5lZWRlZCBmb3Igc3RhY2thYmxlIGZpbGUgc3lzdGVtIHN1cHBvcnQgKi8KK2V4
dGVybiBsb2ZmX3QgZGVmYXVsdF9sbHNlZWtfdW5sb2NrZWQoc3RydWN0IGZpbGUgKmZpbGUsIGxv
ZmZfdCBvZmZzZXQsCisJCQkJICAgICAgaW50IHdoZW5jZSk7CiBleHRlcm4gbG9mZl90IGRlZmF1
bHRfbGxzZWVrKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LCBpbnQgd2hlbmNlKTsK
IAogZXh0ZXJuIGxvZmZfdCB2ZnNfbGxzZWVrKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zm
c2V0LCBpbnQgd2hlbmNlKTsKQEAgLTMxMDgsNiArMzEyOCw4IEBACiBleHRlcm4gc3NpemVfdCBn
ZW5lcmljX2ZpbGVfZGlyZWN0X3dyaXRlKHN0cnVjdCBraW9jYiAqLCBzdHJ1Y3QgaW92X2l0ZXIg
Kik7CiBleHRlcm4gc3NpemVfdCBnZW5lcmljX3BlcmZvcm1fd3JpdGUoc3RydWN0IGZpbGUgKiwg
c3RydWN0IGlvdl9pdGVyICosIGxvZmZfdCk7CiAKK3NzaXplX3QgbmV3X3N5bmNfcmVhZChzdHJ1
Y3QgZmlsZSAqZmlscCwgY2hhciBfX3VzZXIgKmJ1Ziwgc2l6ZV90IGxlbiwKKwkJICAgICAgbG9m
Zl90ICpwcG9zKTsKIHNzaXplX3QgdmZzX2l0ZXJfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3Ry
dWN0IGlvdl9pdGVyICppdGVyLCBsb2ZmX3QgKnBwb3MsCiAJCXJ3Zl90IGZsYWdzKTsKIHNzaXpl
X3QgdmZzX2l0ZXJfd3JpdGUoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBpb3ZfaXRlciAqaXRl
ciwgbG9mZl90ICpwcG9zLApkaWZmIC11ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcu
b3JpZy9pbmNsdWRlL2xpbnV4L21tLmggbGludXgtNS40LjE3L2luY2x1ZGUvbGludXgvbW0uaAot
LS0gbGludXgtNS40LjE3Lm9yaWcvaW5jbHVkZS9saW51eC9tbS5oCTIwMjAtMDItMDEgMTA6MzQ6
NTMuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvaW5jbHVkZS9saW51eC9tbS5oCTIw
MjAtMDItMDUgMjA6NTM6NDEuNDkwMjIyNDY2ICswMTAwCkBAIC0xNTk4LDYgKzE1OTgsNyBAQAog
CQkJICBzdHJ1Y3QgYmRpX3dyaXRlYmFjayAqd2IpOwogaW50IHNldF9wYWdlX2RpcnR5KHN0cnVj
dCBwYWdlICpwYWdlKTsKIGludCBzZXRfcGFnZV9kaXJ0eV9sb2NrKHN0cnVjdCBwYWdlICpwYWdl
KTsKK2ludCBzZXRfcGFnZV9kaXJ0eV9ub3RhZyhzdHJ1Y3QgcGFnZSAqcGFnZSk7CiB2b2lkIF9f
Y2FuY2VsX2RpcnR5X3BhZ2Uoc3RydWN0IHBhZ2UgKnBhZ2UpOwogc3RhdGljIGlubGluZSB2b2lk
IGNhbmNlbF9kaXJ0eV9wYWdlKHN0cnVjdCBwYWdlICpwYWdlKQogewpkaWZmIC11ck4gLS1uby1k
ZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9pbmNsdWRlL2xpbnV4L3NjaGVkLmggbGludXgt
NS40LjE3L2luY2x1ZGUvbGludXgvc2NoZWQuaAotLS0gbGludXgtNS40LjE3Lm9yaWcvaW5jbHVk
ZS9saW51eC9zY2hlZC5oCTIwMjAtMDItMDEgMTA6MzQ6NTMuMDAwMDAwMDAwICswMTAwCisrKyBs
aW51eC01LjQuMTcvaW5jbHVkZS9saW51eC9zY2hlZC5oCTIwMjAtMDItMDUgMjA6NTM6NDEuNDkw
MjIyNDY2ICswMTAwCkBAIC0xNDQyLDYgKzE0NDIsNyBAQAogLyoKICAqIFBlciBwcm9jZXNzIGZs
YWdzCiAgKi8KKyNkZWZpbmUgUEZfRkxVU0hFUiAgICAgICAgICAgICAgMHgwMDAwMDAwMSAgICAg
IC8qIHJlc3BvbnNpYmxlIGZvciBkaXNrIHdyaXRlYmFjayAqLwogI2RlZmluZSBQRl9JRExFCQkJ
MHgwMDAwMDAwMgkvKiBJIGFtIGFuIElETEUgdGhyZWFkICovCiAjZGVmaW5lIFBGX0VYSVRJTkcJ
CTB4MDAwMDAwMDQJLyogR2V0dGluZyBzaHV0IGRvd24gKi8KICNkZWZpbmUgUEZfVkNQVQkJCTB4
MDAwMDAwMTAJLyogSSdtIGEgdmlydHVhbCBDUFUgKi8KZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVu
Y2UgbGludXgtNS40LjE3Lm9yaWcvaW5jbHVkZS9saW51eC93cml0ZWJhY2suaCBsaW51eC01LjQu
MTcvaW5jbHVkZS9saW51eC93cml0ZWJhY2suaAotLS0gbGludXgtNS40LjE3Lm9yaWcvaW5jbHVk
ZS9saW51eC93cml0ZWJhY2suaAkyMDIwLTAyLTAxIDEwOjM0OjUzLjAwMDAwMDAwMCArMDEwMAor
KysgbGludXgtNS40LjE3L2luY2x1ZGUvbGludXgvd3JpdGViYWNrLmgJMjAyMC0wMi0wNSAyMDo1
Mzo0MS40OTEyMjI0NzMgKzAxMDAKQEAgLTE3LDYgKzE3LDEyIEBACiAKIERFQ0xBUkVfUEVSX0NQ
VShpbnQsIGRpcnR5X3Rocm90dGxlX2xlYWtzKTsKIAorc3RhdGljIGlubGluZSBpbnQgaXNfZmx1
c2hfYmRfdGFzayhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCit7CisgICAgICAgcmV0dXJuIHRh
c2stPmZsYWdzICYgUEZfRkxVU0hFUjsKK30KKyNkZWZpbmUgY3VycmVudF9pc19mbHVzaF9iZF90
YXNrKCkgIGlzX2ZsdXNoX2JkX3Rhc2soY3VycmVudCkKKwogLyoKICAqIFRoZSAxLzQgcmVnaW9u
IHVuZGVyIHRoZSBnbG9iYWwgZGlydHkgdGhyZXNoIGlzIGZvciBzbW9vdGggZGlydHkgdGhyb3R0
bGluZzoKICAqCkBAIC0xODUsOCArMTkxLDI4IEBACiB9CiAKIC8qCisgKiBQYXNzZWQgaW50byB3
Yl93cml0ZWJhY2soKSwgZXNzZW50aWFsbHkgYSBzdWJzZXQgb2Ygd3JpdGViYWNrX2NvbnRyb2wK
KyAqLworc3RydWN0IHdiX3dyaXRlYmFja193b3JrIHsKKwlsb25nIG5yX3BhZ2VzOworCXN0cnVj
dCBzdXBlcl9ibG9jayAqc2I7CisJdW5zaWduZWQgbG9uZyAqb2xkZXJfdGhhbl90aGlzOworCWVu
dW0gd3JpdGViYWNrX3N5bmNfbW9kZXMgc3luY19tb2RlOworCXVuc2lnbmVkIGludCB0YWdnZWRf
d3JpdGVwYWdlczoxOworCXVuc2lnbmVkIGludCBmb3Jfa3VwZGF0ZToxOworCXVuc2lnbmVkIGlu
dCByYW5nZV9jeWNsaWM6MTsKKwl1bnNpZ25lZCBpbnQgZm9yX2JhY2tncm91bmQ6MTsKKwl1bnNp
Z25lZCBpbnQgZm9yX3N5bmM6MTsJLyogc3luYygyKSBXQl9TWU5DX0FMTCB3cml0ZWJhY2sgKi8K
Kwl1bnNpZ25lZCBpbnQgYXV0b19mcmVlOjE7CS8qIGZyZWUgb24gY29tcGxldGlvbiAqLworCWVu
dW0gd2JfcmVhc29uIHJlYXNvbjsJCS8qIHdoeSB3YXMgd3JpdGViYWNrIGluaXRpYXRlZD8gKi8K
KworCXN0cnVjdCBsaXN0X2hlYWQgbGlzdDsJCS8qIHBlbmRpbmcgd29yayBsaXN0ICovCisJc3Ry
dWN0IHdiX2NvbXBsZXRpb24gKmRvbmU7CS8qIHNldCBpZiB0aGUgY2FsbGVyIHdhaXRzICovCit9
OworCisvKgogICogZnMvZnMtd3JpdGViYWNrLmMKLSAqLwkKKyAqLwogc3RydWN0IGJkaV93cml0
ZWJhY2s7CiB2b2lkIHdyaXRlYmFja19pbm9kZXNfc2Ioc3RydWN0IHN1cGVyX2Jsb2NrICosIGVu
dW0gd2JfcmVhc29uIHJlYXNvbik7CiB2b2lkIHdyaXRlYmFja19pbm9kZXNfc2JfbnIoc3RydWN0
IHN1cGVyX2Jsb2NrICosIHVuc2lnbmVkIGxvbmcgbnIsCmRpZmYgLXVyTiAtLW5vLWRlcmVmZXJl
bmNlIGxpbnV4LTUuNC4xNy5vcmlnL21tL2ZpbGVtYXAuYyBsaW51eC01LjQuMTcvbW0vZmlsZW1h
cC5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9tbS9maWxlbWFwLmMJMjAyMC0wMi0wMSAxMDozNDo1
My4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9tbS9maWxlbWFwLmMJMjAyMC0wMi0w
NSAyMDo1Mzo0MS40OTEyMjI0NzMgKzAxMDAKQEAgLTE4NDEsNiArMTg0MSw3IEBACiAKIAlyZXR1
cm4gcmV0OwogfQorRVhQT1JUX1NZTUJPTChmaW5kX2dldF9wYWdlc19yYW5nZSk7CiAKIC8qKgog
ICogZmluZF9nZXRfcGFnZXNfY29udGlnIC0gZ2FuZyBjb250aWd1b3VzIHBhZ2VjYWNoZSBsb29r
dXAKZGlmZiAtdXJOIC0tbm8tZGVyZWZlcmVuY2UgbGludXgtNS40LjE3Lm9yaWcvbW0vcGFnZS13
cml0ZWJhY2suYyBsaW51eC01LjQuMTcvbW0vcGFnZS13cml0ZWJhY2suYwotLS0gbGludXgtNS40
LjE3Lm9yaWcvbW0vcGFnZS13cml0ZWJhY2suYwkyMDIwLTAyLTAxIDEwOjM0OjUzLjAwMDAwMDAw
MCArMDEwMAorKysgbGludXgtNS40LjE3L21tL3BhZ2Utd3JpdGViYWNrLmMJMjAyMC0wMi0wNSAy
MDo1Mzo0MS40OTEyMjI0NzMgKzAxMDAKQEAgLTI1MjAsNiArMjUyMCwzNSBAQAogRVhQT1JUX1NZ
TUJPTChhY2NvdW50X3BhZ2VfcmVkaXJ0eSk7CiAKIC8qCisgKiBzZXRfcGFnZV9kaXJ0eV9ub3Rh
ZygpIC0tIHNpbWlsYXIgdG8gX19zZXRfcGFnZV9kaXJ0eV9ub2J1ZmZlcnMoKQorICogZXhjZXB0
IGl0IGRvZXNuJ3QgdGFnIHRoZSBwYWdlIGRpcnR5IGluIHRoZSBwYWdlLWNhY2hlIHJhZGl4IHRy
ZWUuCisgKiBUaGlzIG1lYW5zIHRoYXQgdGhlIGFkZHJlc3Mgc3BhY2UgdXNpbmcgdGhpcyBjYW5u
b3QgdXNlIHRoZSByZWd1bGFyCisgKiBmaWxlbWFwIC0+d3JpdGVwYWdlcygpIGhlbHBlcnMgYW5k
IG11c3QgcHJvdmlkZSBpdHMgb3duIG1lYW5zIG9mCisgKiB0cmFja2luZyBhbmQgZmluZGluZyBu
b24tdGFnZ2VkIGRpcnR5IHBhZ2VzLgorICoKKyAqIE5PVEU6IGZ1cnRoZXJtb3JlLCB0aGlzIHZl
cnNpb24gYWxzbyBkb2Vzbid0IGhhbmRsZSB0cnVuY2F0ZSByYWNlcy4KKyAqLworaW50IHNldF9w
YWdlX2RpcnR5X25vdGFnKHN0cnVjdCBwYWdlICpwYWdlKQoreworCXN0cnVjdCBhZGRyZXNzX3Nw
YWNlICptYXBwaW5nID0gcGFnZS0+bWFwcGluZzsKKworCWxvY2tfcGFnZV9tZW1jZyhwYWdlKTsK
KwlpZiAoIVRlc3RTZXRQYWdlRGlydHkocGFnZSkpIHsKKwkJdW5zaWduZWQgbG9uZyBmbGFnczsK
KwkJV0FSTl9PTl9PTkNFKCFQYWdlUHJpdmF0ZShwYWdlKSAmJiAhUGFnZVVwdG9kYXRlKHBhZ2Up
KTsKKwkJbG9jYWxfaXJxX3NhdmUoZmxhZ3MpOworCQlhY2NvdW50X3BhZ2VfZGlydGllZChwYWdl
LCBtYXBwaW5nKTsKKwkJbG9jYWxfaXJxX3Jlc3RvcmUoZmxhZ3MpOworCQl1bmxvY2tfcGFnZV9t
ZW1jZyhwYWdlKTsKKwkJX19tYXJrX2lub2RlX2RpcnR5KG1hcHBpbmctPmhvc3QsIElfRElSVFlf
UEFHRVMpOworCQlyZXR1cm4gMTsKKwl9CisJdW5sb2NrX3BhZ2VfbWVtY2cocGFnZSk7CisJcmV0
dXJuIDA7Cit9CitFWFBPUlRfU1lNQk9MKHNldF9wYWdlX2RpcnR5X25vdGFnKTsKKworLyoKICAq
IFdoZW4gYSB3cml0ZXBhZ2UgaW1wbGVtZW50YXRpb24gZGVjaWRlcyB0aGF0IGl0IGRvZXNuJ3Qg
d2FudCB0byB3cml0ZSB0aGlzCiAgKiBwYWdlIGZvciBzb21lIHJlYXNvbiwgaXQgc2hvdWxkIHJl
ZGlydHkgdGhlIGxvY2tlZCBwYWdlIHZpYQogICogcmVkaXJ0eV9wYWdlX2Zvcl93cml0ZXBhZ2Uo
KSBhbmQgaXQgc2hvdWxkIHRoZW4gdW5sb2NrIHRoZSBwYWdlIGFuZCByZXR1cm4gMApkaWZmIC11
ck4gLS1uby1kZXJlZmVyZW5jZSBsaW51eC01LjQuMTcub3JpZy9tbS90cnVuY2F0ZS5jIGxpbnV4
LTUuNC4xNy9tbS90cnVuY2F0ZS5jCi0tLSBsaW51eC01LjQuMTcub3JpZy9tbS90cnVuY2F0ZS5j
CTIwMjAtMDItMDEgMTA6MzQ6NTMuMDAwMDAwMDAwICswMTAwCisrKyBsaW51eC01LjQuMTcvbW0v
dHJ1bmNhdGUuYwkyMDIwLTAyLTA1IDIwOjU0OjE4LjIyOTUwODcyNiArMDEwMApAQCAtMzYwLDYg
KzM2MCwxMyBAQAogCQkJCWNvbnRpbnVlOwogCQkJfQogCQkJcGFnZXZlY19hZGQoJmxvY2tlZF9w
dmVjLCBwYWdlKTsKKwkJCWlmIChtYXBwaW5nLT5hX29wcy0+YmF0Y2hfbG9ja190YWJ1KQorCQkJ
CS8qCisJCQkJICogdGhlIGZpbGUgc3lzdGVtIGRvZXNuJ3QgYWxsb3cgdG8gaG9sZAorCQkJCSAq
IG1hbnkgcGFnZXMgbG9ja2VkLCB3aGlsZSBjYWxsaW5nCisJCQkJICogLT5pbnZhbGlkYXRlcGFn
ZSgpIGZvciBvbmUgb2YgdGhlbQorCQkJCSAqLworCQkJCWJyZWFrOwogCQl9CiAJCWZvciAoaSA9
IDA7IGkgPCBwYWdldmVjX2NvdW50KCZsb2NrZWRfcHZlYyk7IGkrKykKIAkJCXRydW5jYXRlX2Ns
ZWFudXBfcGFnZShtYXBwaW5nLCBsb2NrZWRfcHZlYy5wYWdlc1tpXSk7CmRpZmYgLXVyTiAtLW5v
LWRlcmVmZXJlbmNlIGxpbnV4LTUuNC4xNy5vcmlnL21tL3Ztc2Nhbi5jIGxpbnV4LTUuNC4xNy9t
bS92bXNjYW4uYwotLS0gbGludXgtNS40LjE3Lm9yaWcvbW0vdm1zY2FuLmMJMjAyMC0wMi0wMSAx
MDozNDo1My4wMDAwMDAwMDAgKzAxMDAKKysrIGxpbnV4LTUuNC4xNy9tbS92bXNjYW4uYwkyMDIw
LTAyLTA1IDIwOjUzOjQxLjQ5MjIyMjQ4MSArMDEwMApAQCAtMzA3MCw3ICszMDcwLDExIEBACiAJ
cGdfZGF0YV90ICpsYXN0X3BnZGF0OwogCXN0cnVjdCB6b25lcmVmICp6OwogCXN0cnVjdCB6b25l
ICp6b25lOworCXZvaWQgKnNhdmVkOwogcmV0cnk6CisJc2F2ZWQgPSBjdXJyZW50LT5qb3VybmFs
X2luZm87IC8qIHNhdmUgam91cm5hbCBpbmZvICovCisJY3VycmVudC0+am91cm5hbF9pbmZvID0g
TlVMTDsKKwogCWRlbGF5YWNjdF9mcmVlcGFnZXNfc3RhcnQoKTsKIAogCWlmIChnbG9iYWxfcmVj
bGFpbShzYykpCkBAIC0zMTA3LDYgKzMxMTEsOCBAQAogCX0KIAogCWRlbGF5YWNjdF9mcmVlcGFn
ZXNfZW5kKCk7CisJLyogcmVzdG9yZSBqb3VybmFsIGluZm8gKi8KKwljdXJyZW50LT5qb3VybmFs
X2luZm8gPSBzYXZlZDsKIAogCWlmIChzYy0+bnJfcmVjbGFpbWVkKQogCQlyZXR1cm4gc2MtPm5y
X3JlY2xhaW1lZDsK
--797284133-1581690327=:13654--
