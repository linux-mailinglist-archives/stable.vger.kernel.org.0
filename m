Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id F384F1B89CB
	for <lists+stable@lfdr.de>; Sun, 26 Apr 2020 00:26:12 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726241AbgDYW0M (ORCPT <rfc822;lists+stable@lfdr.de>);
        Sat, 25 Apr 2020 18:26:12 -0400
Received: from imap2.colo.codethink.co.uk ([78.40.148.184]:55352 "EHLO
        imap2.colo.codethink.co.uk" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726232AbgDYW0M (ORCPT
        <rfc822;stable@vger.kernel.org>); Sat, 25 Apr 2020 18:26:12 -0400
X-Greylist: delayed 2325 seconds by postgrey-1.27 at vger.kernel.org; Sat, 25 Apr 2020 18:26:08 EDT
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126] helo=xylophone)
        by imap2.colo.codethink.co.uk with esmtpsa  (Exim 4.92 #3 (Debian))
        id 1jSSdt-0006qa-Kr; Sat, 25 Apr 2020 22:47:21 +0100
Message-ID: <86f25568f14f413d3d0edf45e37166caef7374cf.camel@codethink.co.uk>
Subject: [4.19-stable] Security fixes
From:   Ben Hutchings <ben.hutchings@codethink.co.uk>
To:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Sasha Levin <Alexander.Levin@microsoft.com>
Cc:     stable <stable@vger.kernel.org>
Date:   Sat, 25 Apr 2020 22:47:20 +0100
Organization: Codethink Ltd.
Content-Type: multipart/mixed; boundary="=-V4iPhaov5HOLyfPiL2Lp"
User-Agent: Evolution 3.30.5-1.1 
MIME-Version: 1.0
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org


--=-V4iPhaov5HOLyfPiL2Lp
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit

Here are some fixes that required backporting for 4.19.  All of them
are already present in later stable branches.

Ben.

-- 
Ben Hutchings, Software Developer                         Codethink Ltd
https://www.codethink.co.uk/                 Dale House, 35 Dale Street
                                     Manchester, M1 2HF, United Kingdom

--=-V4iPhaov5HOLyfPiL2Lp
Content-Type: application/mbox; name="security-4.19.mbox"
Content-Disposition: attachment; filename="security-4.19.mbox"
Content-Transfer-Encoding: base64

RnJvbSBiMTY4NmZkYTgwNjdjMGRhZTAwODhhZjlmOWE2MDRkZjhhNjc3ZjU1IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTYWJyaW5hIER1YnJvY2EgPHNkQHF1ZWFzeXNuYWlsLm5ldD4K
RGF0ZTogV2VkLCA0IERlYyAyMDE5IDE1OjM1OjUyICswMTAwClN1YmplY3Q6IG5ldDogaXB2Njog
YWRkIG5ldCBhcmd1bWVudCB0byBpcDZfZHN0X2xvb2t1cF9mbG93Cgpjb21taXQgYzRlODVmNzNh
ZmI2Mzg0MTIzZTVlZjFiYmEzMzE1YjJlM2FkMDMxZSB1cHN0cmVhbS4KClRoaXMgd2lsbCBiZSB1
c2VkIGluIHRoZSBjb252ZXJzaW9uIG9mIGlwdjZfc3R1YiB0byBpcDZfZHN0X2xvb2t1cF9mbG93
LAphcyBzb21lIG1vZHVsZXMgY3VycmVudGx5IHBhc3MgYSBuZXQgYXJndW1lbnQgd2l0aG91dCBh
IHNvY2tldCB0bwppcDZfZHN0X2xvb2t1cC4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIGNvbW1pdCAz
NDNkNjBhYWRhNWEgKCJpcHY2OiBjaGFuZ2UKaXB2Nl9zdHViX2ltcGwuaXB2Nl9kc3RfbG9va3Vw
IHRvIHRha2UgbmV0IGFyZ3VtZW50IikuCgpTaWduZWQtb2ZmLWJ5OiBTYWJyaW5hIER1YnJvY2Eg
PHNkQHF1ZWFzeXNuYWlsLm5ldD4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZl
bUBkYXZlbWxvZnQubmV0PgpbYndoOiBCYWNrcG9ydGVkIHRvIDQuMTk6IGFkanVzdCBjb250ZXh0
XQpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW4uaHV0Y2hpbmdzQGNvZGV0aGluay5j
by51az4KLS0tCiBpbmNsdWRlL25ldC9pcHY2LmggICAgICAgICAgICAgICB8IDIgKy0KIG5ldC9k
Y2NwL2lwdjYuYyAgICAgICAgICAgICAgICAgIHwgNiArKystLS0KIG5ldC9pcHY2L2FmX2luZXQ2
LmMgICAgICAgICAgICAgIHwgMiArLQogbmV0L2lwdjYvZGF0YWdyYW0uYyAgICAgICAgICAgICAg
fCAyICstCiBuZXQvaXB2Ni9pbmV0Nl9jb25uZWN0aW9uX3NvY2suYyB8IDQgKystLQogbmV0L2lw
djYvaXA2X291dHB1dC5jICAgICAgICAgICAgfCA4ICsrKystLS0tCiBuZXQvaXB2Ni9yYXcuYyAg
ICAgICAgICAgICAgICAgICB8IDIgKy0KIG5ldC9pcHY2L3N5bmNvb2tpZXMuYyAgICAgICAgICAg
IHwgMiArLQogbmV0L2lwdjYvdGNwX2lwdjYuYyAgICAgICAgICAgICAgfCA0ICsrLS0KIG5ldC9s
MnRwL2wydHBfaXA2LmMgICAgICAgICAgICAgIHwgMiArLQogbmV0L3NjdHAvaXB2Ni5jICAgICAg
ICAgICAgICAgICAgfCA0ICsrLS0KIDExIGZpbGVzIGNoYW5nZWQsIDE5IGluc2VydGlvbnMoKyks
IDE5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbmV0L2lwdjYuaCBiL2luY2x1
ZGUvbmV0L2lwdjYuaAppbmRleCBmZjMzZjQ5OGMxMzcuLjRjMmU0MDg4MmU4OCAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9uZXQvaXB2Ni5oCisrKyBiL2luY2x1ZGUvbmV0L2lwdjYuaApAQCAtOTU5LDcg
Kzk1OSw3IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHNrX2J1ZmYgKmlwNl9maW5pc2hfc2tiKHN0
cnVjdCBzb2NrICpzaykKIAogaW50IGlwNl9kc3RfbG9va3VwKHN0cnVjdCBuZXQgKm5ldCwgc3Ry
dWN0IHNvY2sgKnNrLCBzdHJ1Y3QgZHN0X2VudHJ5ICoqZHN0LAogCQkgICBzdHJ1Y3QgZmxvd2k2
ICpmbDYpOwotc3RydWN0IGRzdF9lbnRyeSAqaXA2X2RzdF9sb29rdXBfZmxvdyhjb25zdCBzdHJ1
Y3Qgc29jayAqc2ssIHN0cnVjdCBmbG93aTYgKmZsNiwKK3N0cnVjdCBkc3RfZW50cnkgKmlwNl9k
c3RfbG9va3VwX2Zsb3coc3RydWN0IG5ldCAqbmV0LCBjb25zdCBzdHJ1Y3Qgc29jayAqc2ssIHN0
cnVjdCBmbG93aTYgKmZsNiwKIAkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW42X2FkZHIgKmZpbmFs
X2RzdCk7CiBzdHJ1Y3QgZHN0X2VudHJ5ICppcDZfc2tfZHN0X2xvb2t1cF9mbG93KHN0cnVjdCBz
b2NrICpzaywgc3RydWN0IGZsb3dpNiAqZmw2LAogCQkJCQkgY29uc3Qgc3RydWN0IGluNl9hZGRy
ICpmaW5hbF9kc3QsCmRpZmYgLS1naXQgYS9uZXQvZGNjcC9pcHY2LmMgYi9uZXQvZGNjcC9pcHY2
LmMKaW5kZXggNThhNDAxZTljZjA5Li5iNDM4YmVkNjc0OWQgMTAwNjQ0Ci0tLSBhL25ldC9kY2Nw
L2lwdjYuYworKysgYi9uZXQvZGNjcC9pcHY2LmMKQEAgLTIxMSw3ICsyMTEsNyBAQCBzdGF0aWMg
aW50IGRjY3BfdjZfc2VuZF9yZXNwb25zZShjb25zdCBzdHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBy
ZXF1ZXN0X3NvY2sgKnJlcQogCWZpbmFsX3AgPSBmbDZfdXBkYXRlX2RzdCgmZmw2LCByY3VfZGVy
ZWZlcmVuY2UobnAtPm9wdCksICZmaW5hbCk7CiAJcmN1X3JlYWRfdW5sb2NrKCk7CiAKLQlkc3Qg
PSBpcDZfZHN0X2xvb2t1cF9mbG93KHNrLCAmZmw2LCBmaW5hbF9wKTsKKwlkc3QgPSBpcDZfZHN0
X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssICZmbDYsIGZpbmFsX3ApOwogCWlmIChJU19F
UlIoZHN0KSkgewogCQllcnIgPSBQVFJfRVJSKGRzdCk7CiAJCWRzdCA9IE5VTEw7CkBAIC0yODIs
NyArMjgyLDcgQEAgc3RhdGljIHZvaWQgZGNjcF92Nl9jdGxfc2VuZF9yZXNldChjb25zdCBzdHJ1
Y3Qgc29jayAqc2ssIHN0cnVjdCBza19idWZmICpyeHNrYikKIAlzZWN1cml0eV9za2JfY2xhc3Np
ZnlfZmxvdyhyeHNrYiwgZmxvd2k2X3RvX2Zsb3dpKCZmbDYpKTsKIAogCS8qIHNrID0gTlVMTCwg
YnV0IGl0IGlzIHNhZmUgZm9yIG5vdy4gUlNUIHNvY2tldCByZXF1aXJlZC4gKi8KLQlkc3QgPSBp
cDZfZHN0X2xvb2t1cF9mbG93KGN0bF9zaywgJmZsNiwgTlVMTCk7CisJZHN0ID0gaXA2X2RzdF9s
b29rdXBfZmxvdyhzb2NrX25ldChjdGxfc2spLCBjdGxfc2ssICZmbDYsIE5VTEwpOwogCWlmICgh
SVNfRVJSKGRzdCkpIHsKIAkJc2tiX2RzdF9zZXQoc2tiLCBkc3QpOwogCQlpcDZfeG1pdChjdGxf
c2ssIHNrYiwgJmZsNiwgMCwgTlVMTCwgMCk7CkBAIC05MTIsNyArOTEyLDcgQEAgc3RhdGljIGlu
dCBkY2NwX3Y2X2Nvbm5lY3Qoc3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3Qgc29ja2FkZHIgKnVhZGRy
LAogCW9wdCA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQobnAtPm9wdCwgbG9ja2RlcF9zb2Nr
X2lzX2hlbGQoc2spKTsKIAlmaW5hbF9wID0gZmw2X3VwZGF0ZV9kc3QoJmZsNiwgb3B0LCAmZmlu
YWwpOwogCi0JZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgJmZsNiwgZmluYWxfcCk7CisJ
ZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9w
KTsKIAlpZiAoSVNfRVJSKGRzdCkpIHsKIAkJZXJyID0gUFRSX0VSUihkc3QpOwogCQlnb3RvIGZh
aWx1cmU7CmRpZmYgLS1naXQgYS9uZXQvaXB2Ni9hZl9pbmV0Ni5jIGIvbmV0L2lwdjYvYWZfaW5l
dDYuYwppbmRleCA3OWZjZDk1NTBmZDIuLjVkYjg4YmU4YjZlYyAxMDA2NDQKLS0tIGEvbmV0L2lw
djYvYWZfaW5ldDYuYworKysgYi9uZXQvaXB2Ni9hZl9pbmV0Ni5jCkBAIC03NDAsNyArNzQwLDcg
QEAgaW50IGluZXQ2X3NrX3JlYnVpbGRfaGVhZGVyKHN0cnVjdCBzb2NrICpzaykKIAkJCQkJICZm
aW5hbCk7CiAJCXJjdV9yZWFkX3VubG9jaygpOwogCi0JCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zs
b3coc2ssICZmbDYsIGZpbmFsX3ApOworCQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tf
bmV0KHNrKSwgc2ssICZmbDYsIGZpbmFsX3ApOwogCQlpZiAoSVNfRVJSKGRzdCkpIHsKIAkJCXNr
LT5za19yb3V0ZV9jYXBzID0gMDsKIAkJCXNrLT5za19lcnJfc29mdCA9IC1QVFJfRVJSKGRzdCk7
CmRpZmYgLS1naXQgYS9uZXQvaXB2Ni9kYXRhZ3JhbS5jIGIvbmV0L2lwdjYvZGF0YWdyYW0uYwpp
bmRleCA5NzFhMGZkZjFmYmMuLjcyN2Y5NThkZDg2OSAxMDA2NDQKLS0tIGEvbmV0L2lwdjYvZGF0
YWdyYW0uYworKysgYi9uZXQvaXB2Ni9kYXRhZ3JhbS5jCkBAIC04OSw3ICs4OSw3IEBAIGludCBp
cDZfZGF0YWdyYW1fZHN0X3VwZGF0ZShzdHJ1Y3Qgc29jayAqc2ssIGJvb2wgZml4X3NrX3NhZGRy
KQogCWZpbmFsX3AgPSBmbDZfdXBkYXRlX2RzdCgmZmw2LCBvcHQsICZmaW5hbCk7CiAJcmN1X3Jl
YWRfdW5sb2NrKCk7CiAKLQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNrLCAmZmw2LCBmaW5h
bF9wKTsKKwlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssICZmbDYs
IGZpbmFsX3ApOwogCWlmIChJU19FUlIoZHN0KSkgewogCQllcnIgPSBQVFJfRVJSKGRzdCk7CiAJ
CWdvdG8gb3V0OwpkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvaW5ldDZfY29ubmVjdGlvbl9zb2NrLmMg
Yi9uZXQvaXB2Ni9pbmV0Nl9jb25uZWN0aW9uX3NvY2suYwppbmRleCA4OTBhZGFkY2RhMTYuLjky
ZmU5ZTU2NWRhMCAxMDA2NDQKLS0tIGEvbmV0L2lwdjYvaW5ldDZfY29ubmVjdGlvbl9zb2NrLmMK
KysrIGIvbmV0L2lwdjYvaW5ldDZfY29ubmVjdGlvbl9zb2NrLmMKQEAgLTUyLDcgKzUyLDcgQEAg
c3RydWN0IGRzdF9lbnRyeSAqaW5ldDZfY3NrX3JvdXRlX3JlcShjb25zdCBzdHJ1Y3Qgc29jayAq
c2ssCiAJZmw2LT5mbG93aTZfdWlkID0gc2stPnNrX3VpZDsKIAlzZWN1cml0eV9yZXFfY2xhc3Np
ZnlfZmxvdyhyZXEsIGZsb3dpNl90b19mbG93aShmbDYpKTsKIAotCWRzdCA9IGlwNl9kc3RfbG9v
a3VwX2Zsb3coc2ssIGZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhz
b2NrX25ldChzayksIHNrLCBmbDYsIGZpbmFsX3ApOwogCWlmIChJU19FUlIoZHN0KSkKIAkJcmV0
dXJuIE5VTEw7CiAKQEAgLTEwNyw3ICsxMDcsNyBAQCBzdGF0aWMgc3RydWN0IGRzdF9lbnRyeSAq
aW5ldDZfY3NrX3JvdXRlX3NvY2tldChzdHJ1Y3Qgc29jayAqc2ssCiAKIAlkc3QgPSBfX2luZXQ2
X2Nza19kc3RfY2hlY2soc2ssIG5wLT5kc3RfY29va2llKTsKIAlpZiAoIWRzdCkgewotCQlkc3Qg
PSBpcDZfZHN0X2xvb2t1cF9mbG93KHNrLCBmbDYsIGZpbmFsX3ApOworCQlkc3QgPSBpcDZfZHN0
X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssIGZsNiwgZmluYWxfcCk7CiAKIAkJaWYgKCFJ
U19FUlIoZHN0KSkKIAkJCWlwNl9kc3Rfc3RvcmUoc2ssIGRzdCwgTlVMTCwgTlVMTCk7CmRpZmYg
LS1naXQgYS9uZXQvaXB2Ni9pcDZfb3V0cHV0LmMgYi9uZXQvaXB2Ni9pcDZfb3V0cHV0LmMKaW5k
ZXggOTg4NmE4NGMyNTExLi4yMjY2NWUzNjM4YWMgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2lwNl9v
dXRwdXQuYworKysgYi9uZXQvaXB2Ni9pcDZfb3V0cHV0LmMKQEAgLTEwNzEsMTkgKzEwNzEsMTkg
QEAgRVhQT1JUX1NZTUJPTF9HUEwoaXA2X2RzdF9sb29rdXApOwogICoJSXQgcmV0dXJucyBhIHZh
bGlkIGRzdCBwb2ludGVyIG9uIHN1Y2Nlc3MsIG9yIGEgcG9pbnRlciBlbmNvZGVkCiAgKgllcnJv
ciBjb2RlLgogICovCi1zdHJ1Y3QgZHN0X2VudHJ5ICppcDZfZHN0X2xvb2t1cF9mbG93KGNvbnN0
IHN0cnVjdCBzb2NrICpzaywgc3RydWN0IGZsb3dpNiAqZmw2LAorc3RydWN0IGRzdF9lbnRyeSAq
aXA2X2RzdF9sb29rdXBfZmxvdyhzdHJ1Y3QgbmV0ICpuZXQsIGNvbnN0IHN0cnVjdCBzb2NrICpz
aywgc3RydWN0IGZsb3dpNiAqZmw2LAogCQkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbjZfYWRkciAq
ZmluYWxfZHN0KQogewogCXN0cnVjdCBkc3RfZW50cnkgKmRzdCA9IE5VTEw7CiAJaW50IGVycjsK
IAotCWVyciA9IGlwNl9kc3RfbG9va3VwX3RhaWwoc29ja19uZXQoc2spLCBzaywgJmRzdCwgZmw2
KTsKKwllcnIgPSBpcDZfZHN0X2xvb2t1cF90YWlsKG5ldCwgc2ssICZkc3QsIGZsNik7CiAJaWYg
KGVycikKIAkJcmV0dXJuIEVSUl9QVFIoZXJyKTsKIAlpZiAoZmluYWxfZHN0KQogCQlmbDYtPmRh
ZGRyID0gKmZpbmFsX2RzdDsKIAotCXJldHVybiB4ZnJtX2xvb2t1cF9yb3V0ZShzb2NrX25ldChz
ayksIGRzdCwgZmxvd2k2X3RvX2Zsb3dpKGZsNiksIHNrLCAwKTsKKwlyZXR1cm4geGZybV9sb29r
dXBfcm91dGUobmV0LCBkc3QsIGZsb3dpNl90b19mbG93aShmbDYpLCBzaywgMCk7CiB9CiBFWFBP
UlRfU1lNQk9MX0dQTChpcDZfZHN0X2xvb2t1cF9mbG93KTsKIApAQCAtMTExNSw3ICsxMTE1LDcg
QEAgc3RydWN0IGRzdF9lbnRyeSAqaXA2X3NrX2RzdF9sb29rdXBfZmxvdyhzdHJ1Y3Qgc29jayAq
c2ssIHN0cnVjdCBmbG93aTYgKmZsNiwKIAlpZiAoZHN0KQogCQlyZXR1cm4gZHN0OwogCi0JZHN0
ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgZmw2LCBmaW5hbF9kc3QpOworCWRzdCA9IGlwNl9k
c3RfbG9va3VwX2Zsb3coc29ja19uZXQoc2spLCBzaywgZmw2LCBmaW5hbF9kc3QpOwogCWlmIChj
b25uZWN0ZWQgJiYgIUlTX0VSUihkc3QpKQogCQlpcDZfc2tfZHN0X3N0b3JlX2Zsb3coc2ssIGRz
dF9jbG9uZShkc3QpLCBmbDYpOwogCmRpZmYgLS1naXQgYS9uZXQvaXB2Ni9yYXcuYyBiL25ldC9p
cHY2L3Jhdy5jCmluZGV4IGE0MTE1NmEwMGRkNC4uOGQxOTcyOWY4NTE2IDEwMDY0NAotLS0gYS9u
ZXQvaXB2Ni9yYXcuYworKysgYi9uZXQvaXB2Ni9yYXcuYwpAQCAtOTI4LDcgKzkyOCw3IEBAIHN0
YXRpYyBpbnQgcmF3djZfc2VuZG1zZyhzdHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBtc2doZHIgKm1z
Zywgc2l6ZV90IGxlbikKIAogCWZsNi5mbG93bGFiZWwgPSBpcDZfbWFrZV9mbG93aW5mbyhpcGM2
LnRjbGFzcywgZmw2LmZsb3dsYWJlbCk7CiAKLQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNr
LCAmZmw2LCBmaW5hbF9wKTsKKwlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNr
KSwgc2ssICZmbDYsIGZpbmFsX3ApOwogCWlmIChJU19FUlIoZHN0KSkgewogCQllcnIgPSBQVFJf
RVJSKGRzdCk7CiAJCWdvdG8gb3V0OwpkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvc3luY29va2llcy5j
IGIvbmV0L2lwdjYvc3luY29va2llcy5jCmluZGV4IGU5OTcxNDFhZWQ4Yy4uYTM3N2JlOGE5ZmI0
IDEwMDY0NAotLS0gYS9uZXQvaXB2Ni9zeW5jb29raWVzLmMKKysrIGIvbmV0L2lwdjYvc3luY29v
a2llcy5jCkBAIC0yNDAsNyArMjQwLDcgQEAgc3RydWN0IHNvY2sgKmNvb2tpZV92Nl9jaGVjayhz
dHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBza19idWZmICpza2IpCiAJCWZsNi5mbG93aTZfdWlkID0g
c2stPnNrX3VpZDsKIAkJc2VjdXJpdHlfcmVxX2NsYXNzaWZ5X2Zsb3cocmVxLCBmbG93aTZfdG9f
Zmxvd2koJmZsNikpOwogCi0JCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc2ssICZmbDYsIGZp
bmFsX3ApOworCQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssICZm
bDYsIGZpbmFsX3ApOwogCQlpZiAoSVNfRVJSKGRzdCkpCiAJCQlnb3RvIG91dF9mcmVlOwogCX0K
ZGlmZiAtLWdpdCBhL25ldC9pcHY2L3RjcF9pcHY2LmMgYi9uZXQvaXB2Ni90Y3BfaXB2Ni5jCmlu
ZGV4IDdiMGMyNDk4ZjQ2MS4uMmU3NmViZmRjOTA3IDEwMDY0NAotLS0gYS9uZXQvaXB2Ni90Y3Bf
aXB2Ni5jCisrKyBiL25ldC9pcHY2L3RjcF9pcHY2LmMKQEAgLTI2OCw3ICsyNjgsNyBAQCBzdGF0
aWMgaW50IHRjcF92Nl9jb25uZWN0KHN0cnVjdCBzb2NrICpzaywgc3RydWN0IHNvY2thZGRyICp1
YWRkciwKIAogCXNlY3VyaXR5X3NrX2NsYXNzaWZ5X2Zsb3coc2ssIGZsb3dpNl90b19mbG93aSgm
Zmw2KSk7CiAKLQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNrLCAmZmw2LCBmaW5hbF9wKTsK
Kwlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssICZmbDYsIGZpbmFs
X3ApOwogCWlmIChJU19FUlIoZHN0KSkgewogCQllcnIgPSBQVFJfRVJSKGRzdCk7CiAJCWdvdG8g
ZmFpbHVyZTsKQEAgLTg4NSw3ICs4ODUsNyBAQCBzdGF0aWMgdm9pZCB0Y3BfdjZfc2VuZF9yZXNw
b25zZShjb25zdCBzdHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBza19idWZmICpza2IsIHUzMgogCSAq
IFVuZGVybHlpbmcgZnVuY3Rpb24gd2lsbCB1c2UgdGhpcyB0byByZXRyaWV2ZSB0aGUgbmV0d29y
awogCSAqIG5hbWVzcGFjZQogCSAqLwotCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coY3RsX3Nr
LCAmZmw2LCBOVUxMKTsKKwlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KGN0bF9z
ayksIGN0bF9zaywgJmZsNiwgTlVMTCk7CiAJaWYgKCFJU19FUlIoZHN0KSkgewogCQlza2JfZHN0
X3NldChidWZmLCBkc3QpOwogCQlpcDZfeG1pdChjdGxfc2ssIGJ1ZmYsICZmbDYsIGZsNi5mbG93
aTZfbWFyaywgTlVMTCwgdGNsYXNzKTsKZGlmZiAtLWdpdCBhL25ldC9sMnRwL2wydHBfaXA2LmMg
Yi9uZXQvbDJ0cC9sMnRwX2lwNi5jCmluZGV4IDM3YTY5ZGYxN2NhYi4uMmYyOGY5OTEwYjkyIDEw
MDY0NAotLS0gYS9uZXQvbDJ0cC9sMnRwX2lwNi5jCisrKyBiL25ldC9sMnRwL2wydHBfaXA2LmMK
QEAgLTYxOSw3ICs2MTksNyBAQCBzdGF0aWMgaW50IGwydHBfaXA2X3NlbmRtc2coc3RydWN0IHNv
Y2sgKnNrLCBzdHJ1Y3QgbXNnaGRyICptc2csIHNpemVfdCBsZW4pCiAKIAlmbDYuZmxvd2xhYmVs
ID0gaXA2X21ha2VfZmxvd2luZm8oaXBjNi50Y2xhc3MsIGZsNi5mbG93bGFiZWwpOwogCi0JZHN0
ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgJmZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2Rz
dF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAlpZiAoSVNf
RVJSKGRzdCkpIHsKIAkJZXJyID0gUFRSX0VSUihkc3QpOwogCQlnb3RvIG91dDsKZGlmZiAtLWdp
dCBhL25ldC9zY3RwL2lwdjYuYyBiL25ldC9zY3RwL2lwdjYuYwppbmRleCA3NjU3MTk0ZjM5NmUu
LjczNmQ4Y2E5ODIxYiAxMDA2NDQKLS0tIGEvbmV0L3NjdHAvaXB2Ni5jCisrKyBiL25ldC9zY3Rw
L2lwdjYuYwpAQCAtMjg4LDcgKzI4OCw3IEBAIHN0YXRpYyB2b2lkIHNjdHBfdjZfZ2V0X2RzdChz
dHJ1Y3Qgc2N0cF90cmFuc3BvcnQgKnQsIHVuaW9uIHNjdHBfYWRkciAqc2FkZHIsCiAJZmluYWxf
cCA9IGZsNl91cGRhdGVfZHN0KGZsNiwgcmN1X2RlcmVmZXJlbmNlKG5wLT5vcHQpLCAmZmluYWwp
OwogCXJjdV9yZWFkX3VubG9jaygpOwogCi0JZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywg
Zmw2LCBmaW5hbF9wKTsKKwlkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwg
c2ssIGZsNiwgZmluYWxfcCk7CiAJaWYgKCFhc29jIHx8IHNhZGRyKSB7CiAJCXQtPmRzdCA9IGRz
dDsKIAkJbWVtY3B5KGZsLCAmX2ZsLCBzaXplb2YoX2ZsKSk7CkBAIC0zNDYsNyArMzQ2LDcgQEAg
c3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5p
b24gc2N0cF9hZGRyICpzYWRkciwKIAkJZmw2LT5zYWRkciA9IGxhZGRyLT5hLnY2LnNpbjZfYWRk
cjsKIAkJZmw2LT5mbDZfc3BvcnQgPSBsYWRkci0+YS52Ni5zaW42X3BvcnQ7CiAJCWZpbmFsX3Ag
PSBmbDZfdXBkYXRlX2RzdChmbDYsIHJjdV9kZXJlZmVyZW5jZShucC0+b3B0KSwgJmZpbmFsKTsK
LQkJYmRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc2ssIGZsNiwgZmluYWxfcCk7CisJCWJkc3Qg
PSBpcDZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHNrKSwgc2ssIGZsNiwgZmluYWxfcCk7CiAK
IAkJaWYgKElTX0VSUihiZHN0KSkKIAkJCWNvbnRpbnVlOwoKRnJvbSA0NWZhNTFmMmYwMTU2M2M5
MmUyZDBjOTlmMDlhZDBlOWZmZmQ1YzU5IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBT
YWJyaW5hIER1YnJvY2EgPHNkQHF1ZWFzeXNuYWlsLm5ldD4KRGF0ZTogV2VkLCA0IERlYyAyMDE5
IDE1OjM1OjUzICswMTAwClN1YmplY3Q6IG5ldDogaXB2Nl9zdHViOiB1c2UgaXA2X2RzdF9sb29r
dXBfZmxvdyBpbnN0ZWFkIG9mIGlwNl9kc3RfbG9va3VwCgpjb21taXQgNmM4OTkxZjQxNTQ2YzNj
NDcyNTAzZGZmMWVhOWRhYWRkZjkzMzFjMiB1cHN0cmVhbS4KCmlwdjZfc3R1YiB1c2VzIHRoZSBp
cDZfZHN0X2xvb2t1cCBmdW5jdGlvbiB0byBhbGxvdyBvdGhlciBtb2R1bGVzIHRvCnBlcmZvcm0g
SVB2NiBsb29rdXBzLiBIb3dldmVyLCB0aGlzIGZ1bmN0aW9uIHNraXBzIHRoZSBYRlJNIGxheWVy
CmVudGlyZWx5LgoKQWxsIHVzZXJzIG9mIGlwdjZfc3R1Yi0+aXA2X2RzdF9sb29rdXAgdXNlIGlw
X3JvdXRlX291dHB1dF9mbG93ICh2aWEgdGhlCmlwX3JvdXRlX291dHB1dF9rZXkgYW5kIGlwX3Jv
dXRlX291dHB1dCBoZWxwZXJzKSBmb3IgdGhlaXIgSVB2NCBsb29rdXBzLAp3aGljaCBjYWxscyB4
ZnJtX2xvb2t1cF9yb3V0ZSgpLiBUaGlzIHBhdGNoIGZpeGVzIHRoaXMgaW5jb25zaXN0ZW50CmJl
aGF2aW9yIGJ5IHN3aXRjaGluZyB0aGUgc3R1YiB0byBpcDZfZHN0X2xvb2t1cF9mbG93LCB3aGlj
aCBhbHNvIGNhbGxzCnhmcm1fbG9va3VwX3JvdXRlKCkuCgpUaGlzIHJlcXVpcmVzIHNvbWUgY2hh
bmdlcyBpbiBhbGwgdGhlIGNhbGxlcnMsIGFzIHRoZXNlIHR3byBmdW5jdGlvbnMKdGFrZSBkaWZm
ZXJlbnQgYXJndW1lbnRzIGFuZCBoYXZlIGRpZmZlcmVudCByZXR1cm4gdHlwZXMuCgpGaXhlczog
NWY4MWJkMmU1ZDgwICgiaXB2NjogZXhwb3J0IGEgc3R1YiBmb3IgSVB2NiBzeW1ib2xzIHVzZWQg
YnkgdnhsYW4iKQpSZXBvcnRlZC1ieTogWGl1bWVpIE11IDx4bXVAcmVkaGF0LmNvbT4KU2lnbmVk
LW9mZi1ieTogU2FicmluYSBEdWJyb2NhIDxzZEBxdWVhc3lzbmFpbC5uZXQ+ClNpZ25lZC1vZmYt
Ynk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KW2J3aDogQmFja3BvcnRl
ZCB0byA0LjE5OgogLSBEcm9wIGNoYW5nZSBpbiBsd3RfYnBmLmMKIC0gRGVsZXRlIG5vdy11bnVz
ZWQgInJldCIgaW4gbWx4NWVfcm91dGVfbG9va3VwX2lwdjYoKQogLSBJbml0aWFsaXNlICJvdXRf
ZGV2IiBpbiBtbHg1ZV9jcmVhdGVfZW5jYXBfaGVhZGVyX2lwdjYoKSB0byBhdm9pZAogICBpbnRy
b2R1Y2luZyBhIHNwdXJpb3VzICJtYXkgYmUgdXNlZCB1bmluaXRpYWxpc2VkIiB3YXJuaW5nCiAt
IEFkanVzdCBmaWxlbmFtZXMsIGNvbnRleHQsIGluZGVudGF0aW9uXQpTaWduZWQtb2ZmLWJ5OiBC
ZW4gSHV0Y2hpbmdzIDxiZW4uaHV0Y2hpbmdzQGNvZGV0aGluay5jby51az4KLS0tCiBkcml2ZXJz
L2luZmluaWJhbmQvY29yZS9hZGRyLmMgICAgICAgICAgICAgICAgICB8ICA3ICsrKy0tLS0KIGRy
aXZlcnMvaW5maW5pYmFuZC9zdy9yeGUvcnhlX25ldC5jICAgICAgICAgICAgIHwgIDggKysrKyst
LS0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L21lbGxhbm94L21seDUvY29yZS9lbl90Yy5jIHwgMTEg
KysrKystLS0tLS0KIGRyaXZlcnMvbmV0L2dlbmV2ZS5jICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHwgIDQgKysrLQogZHJpdmVycy9uZXQvdnhsYW4uYyAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgfCAgOCArKystLS0tLQogaW5jbHVkZS9uZXQvYWRkcmNvbmYuaCAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgNiArKysrLS0KIG5ldC9pcHY2L2FkZHJjb25mX2NvcmUuYyAgICAgICAg
ICAgICAgICAgICAgICAgIHwgMTEgKysrKysrLS0tLS0KIG5ldC9pcHY2L2FmX2luZXQ2LmMgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIG5ldC9tcGxzL2FmX21wbHMuYyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDcgKysrLS0tLQogbmV0L3RpcGMvdWRwX21lZGlh
LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgOSArKysrKystLS0KIDEwIGZpbGVzIGNo
YW5nZWQsIDM5IGluc2VydGlvbnMoKyksIDM0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvaW5maW5pYmFuZC9jb3JlL2FkZHIuYyBiL2RyaXZlcnMvaW5maW5pYmFuZC9jb3JlL2Fk
ZHIuYwppbmRleCA2ZTk2YTJmYjk3ZGMuLmRmOGY1Y2VlYTJkZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9pbmZpbmliYW5kL2NvcmUvYWRkci5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9jb3JlL2Fk
ZHIuYwpAQCAtNDA4LDE2ICs0MDgsMTUgQEAgc3RhdGljIGludCBhZGRyNl9yZXNvbHZlKHN0cnVj
dCBzb2NrYWRkcl9pbjYgKnNyY19pbiwKIAlzdHJ1Y3QgZmxvd2k2IGZsNjsKIAlzdHJ1Y3QgZHN0
X2VudHJ5ICpkc3Q7CiAJc3RydWN0IHJ0Nl9pbmZvICpydDsKLQlpbnQgcmV0OwogCiAJbWVtc2V0
KCZmbDYsIDAsIHNpemVvZiBmbDYpOwogCWZsNi5kYWRkciA9IGRzdF9pbi0+c2luNl9hZGRyOwog
CWZsNi5zYWRkciA9IHNyY19pbi0+c2luNl9hZGRyOwogCWZsNi5mbG93aTZfb2lmID0gYWRkci0+
Ym91bmRfZGV2X2lmOwogCi0JcmV0ID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXAoYWRkci0+
bmV0LCBOVUxMLCAmZHN0LCAmZmw2KTsKLQlpZiAocmV0IDwgMCkKLQkJcmV0dXJuIHJldDsKKwlk
c3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cF9mbG93KGFkZHItPm5ldCwgTlVMTCwgJmZs
NiwgTlVMTCk7CisJaWYgKElTX0VSUihkc3QpKQorCQlyZXR1cm4gUFRSX0VSUihkc3QpOwogCiAJ
cnQgPSAoc3RydWN0IHJ0Nl9pbmZvICopZHN0OwogCWlmIChpcHY2X2FkZHJfYW55KCZzcmNfaW4t
PnNpbjZfYWRkcikpIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9yeGUvcnhl
X25ldC5jIGIvZHJpdmVycy9pbmZpbmliYW5kL3N3L3J4ZS9yeGVfbmV0LmMKaW5kZXggNTRhZGQ3
MGMyMmI1Li43OTAzYmQ1YzYzOWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9y
eGUvcnhlX25ldC5jCisrKyBiL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9yeGUvcnhlX25ldC5jCkBA
IC0xNTQsMTAgKzE1NCwxMiBAQCBzdGF0aWMgc3RydWN0IGRzdF9lbnRyeSAqcnhlX2ZpbmRfcm91
dGU2KHN0cnVjdCBuZXRfZGV2aWNlICpuZGV2LAogCW1lbWNweSgmZmw2LmRhZGRyLCBkYWRkciwg
c2l6ZW9mKCpkYWRkcikpOwogCWZsNi5mbG93aTZfcHJvdG8gPSBJUFBST1RPX1VEUDsKIAotCWlm
ICh1bmxpa2VseShpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cChzb2NrX25ldChyZWN2X3NvY2tl
dHMuc2s2LT5zayksCi0JCQkJCQlyZWN2X3NvY2tldHMuc2s2LT5zaywgJm5kc3QsICZmbDYpKSkg
eworCW5kc3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cF9mbG93KHNvY2tfbmV0KHJlY3Zf
c29ja2V0cy5zazYtPnNrKSwKKwkJCQkJICAgICAgIHJlY3Zfc29ja2V0cy5zazYtPnNrLCAmZmw2
LAorCQkJCQkgICAgICAgTlVMTCk7CisJaWYgKHVubGlrZWx5KElTX0VSUihuZHN0KSkpIHsKIAkJ
cHJfZXJyX3JhdGVsaW1pdGVkKCJubyByb3V0ZSB0byAlcEk2XG4iLCBkYWRkcik7Ci0JCWdvdG8g
cHV0OworCQlyZXR1cm4gTlVMTDsKIAl9CiAKIAlpZiAodW5saWtlbHkobmRzdC0+ZXJyb3IpKSB7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9tbHg1L2NvcmUvZW5f
dGMuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L21lbGxhbm94L21seDUvY29yZS9lbl90Yy5jCmlu
ZGV4IGM4OTI4Y2U2OTE4NS4uMzA1MDg1Mzc3NGVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9l
dGhlcm5ldC9tZWxsYW5veC9tbHg1L2NvcmUvZW5fdGMuYworKysgYi9kcml2ZXJzL25ldC9ldGhl
cm5ldC9tZWxsYW5veC9tbHg1L2NvcmUvZW5fdGMuYwpAQCAtMjIxNywxMiArMjIxNywxMSBAQCBz
dGF0aWMgaW50IG1seDVlX3JvdXRlX2xvb2t1cF9pcHY2KHN0cnVjdCBtbHg1ZV9wcml2ICpwcml2
LAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0lORVQpICYmIElTX0VOQUJMRUQoQ09ORklHX0lQVjYp
CiAJc3RydWN0IG1seDVlX3JlcF9wcml2ICp1cGxpbmtfcnByaXY7CiAJc3RydWN0IG1seDVfZXN3
aXRjaCAqZXN3ID0gcHJpdi0+bWRldi0+cHJpdi5lc3dpdGNoOwotCWludCByZXQ7CiAKLQlyZXQg
PSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cChkZXZfbmV0KG1pcnJlZF9kZXYpLCBOVUxMLCAm
ZHN0LAotCQkJCQkgZmw2KTsKLQlpZiAocmV0IDwgMCkKLQkJcmV0dXJuIHJldDsKKwlkc3QgPSBp
cHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cF9mbG93KGRldl9uZXQobWlycmVkX2RldiksIE5VTEws
IGZsNiwKKwkJCQkJICAgICAgTlVMTCk7CisJaWYgKElTX0VSUihkc3QpKQorCQlyZXR1cm4gUFRS
X0VSUihkc3QpOwogCiAJaWYgKCEoKm91dF90dGwpKQogCQkqb3V0X3R0bCA9IGlwNl9kc3RfaG9w
bGltaXQoZHN0KTsKQEAgLTI0MjgsNyArMjQyNyw3IEBAIHN0YXRpYyBpbnQgbWx4NWVfY3JlYXRl
X2VuY2FwX2hlYWRlcl9pcHY2KHN0cnVjdCBtbHg1ZV9wcml2ICpwcml2LAogCWludCBtYXhfZW5j
YXBfc2l6ZSA9IE1MWDVfQ0FQX0VTVyhwcml2LT5tZGV2LCBtYXhfZW5jYXBfaGVhZGVyX3NpemUp
OwogCWludCBpcHY2X2VuY2FwX3NpemUgPSBFVEhfSExFTiArIHNpemVvZihzdHJ1Y3QgaXB2Nmhk
cikgKyBWWExBTl9ITEVOOwogCXN0cnVjdCBpcF90dW5uZWxfa2V5ICp0dW5fa2V5ID0gJmUtPnR1
bl9pbmZvLmtleTsKLQlzdHJ1Y3QgbmV0X2RldmljZSAqb3V0X2RldjsKKwlzdHJ1Y3QgbmV0X2Rl
dmljZSAqb3V0X2RldiA9IE5VTEw7CiAJc3RydWN0IG5laWdoYm91ciAqbiA9IE5VTEw7CiAJc3Ry
dWN0IGZsb3dpNiBmbDYgPSB7fTsKIAl1OCBudWRfc3RhdGUsIHRvcywgdHRsOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9uZXQvZ2VuZXZlLmMgYi9kcml2ZXJzL25ldC9nZW5ldmUuYwppbmRleCBmZjgz
NDA4NzMzZDQuLjM2NDQ0ZGU3MDFjZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZ2VuZXZlLmMK
KysrIGIvZHJpdmVycy9uZXQvZ2VuZXZlLmMKQEAgLTgwMSw3ICs4MDEsOSBAQCBzdGF0aWMgc3Ry
dWN0IGRzdF9lbnRyeSAqZ2VuZXZlX2dldF92Nl9kc3Qoc3RydWN0IHNrX2J1ZmYgKnNrYiwKIAkJ
aWYgKGRzdCkKIAkJCXJldHVybiBkc3Q7CiAJfQotCWlmIChpcHY2X3N0dWItPmlwdjZfZHN0X2xv
b2t1cChnZW5ldmUtPm5ldCwgZ3M2LT5zb2NrLT5zaywgJmRzdCwgZmw2KSkgeworCWRzdCA9IGlw
djZfc3R1Yi0+aXB2Nl9kc3RfbG9va3VwX2Zsb3coZ2VuZXZlLT5uZXQsIGdzNi0+c29jay0+c2ss
IGZsNiwKKwkJCQkJICAgICAgTlVMTCk7CisJaWYgKElTX0VSUihkc3QpKSB7CiAJCW5ldGRldl9k
YmcoZGV2LCAibm8gcm91dGUgdG8gJXBJNlxuIiwgJmZsNi0+ZGFkZHIpOwogCQlyZXR1cm4gRVJS
X1BUUigtRU5FVFVOUkVBQ0gpOwogCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L3Z4bGFuLmMg
Yi9kcml2ZXJzL25ldC92eGxhbi5jCmluZGV4IDY0NzUxYjA4OTQ4Mi4uN2VlMGJhZDE4NDY2IDEw
MDY0NAotLS0gYS9kcml2ZXJzL25ldC92eGxhbi5jCisrKyBiL2RyaXZlcnMvbmV0L3Z4bGFuLmMK
QEAgLTE5NjMsNyArMTk2Myw2IEBAIHN0YXRpYyBzdHJ1Y3QgZHN0X2VudHJ5ICp2eGxhbjZfZ2V0
X3JvdXRlKHN0cnVjdCB2eGxhbl9kZXYgKnZ4bGFuLAogCWJvb2wgdXNlX2NhY2hlID0gaXBfdHVu
bmVsX2RzdF9jYWNoZV91c2FibGUoc2tiLCBpbmZvKTsKIAlzdHJ1Y3QgZHN0X2VudHJ5ICpuZHN0
OwogCXN0cnVjdCBmbG93aTYgZmw2OwotCWludCBlcnI7CiAKIAlpZiAoIXNvY2s2KQogCQlyZXR1
cm4gRVJSX1BUUigtRUlPKTsKQEAgLTE5ODYsMTAgKzE5ODUsOSBAQCBzdGF0aWMgc3RydWN0IGRz
dF9lbnRyeSAqdnhsYW42X2dldF9yb3V0ZShzdHJ1Y3QgdnhsYW5fZGV2ICp2eGxhbiwKIAlmbDYu
Zmw2X2Rwb3J0ID0gZHBvcnQ7CiAJZmw2LmZsNl9zcG9ydCA9IHNwb3J0OwogCi0JZXJyID0gaXB2
Nl9zdHViLT5pcHY2X2RzdF9sb29rdXAodnhsYW4tPm5ldCwKLQkJCQkJIHNvY2s2LT5zb2NrLT5z
aywKLQkJCQkJICZuZHN0LCAmZmw2KTsKLQlpZiAodW5saWtlbHkoZXJyIDwgMCkpIHsKKwluZHN0
ID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXBfZmxvdyh2eGxhbi0+bmV0LCBzb2NrNi0+c29j
ay0+c2ssCisJCQkJCSAgICAgICAmZmw2LCBOVUxMKTsKKwlpZiAodW5saWtlbHkoSVNfRVJSKG5k
c3QpKSkgewogCQluZXRkZXZfZGJnKGRldiwgIm5vIHJvdXRlIHRvICVwSTZcbiIsIGRhZGRyKTsK
IAkJcmV0dXJuIEVSUl9QVFIoLUVORVRVTlJFQUNIKTsKIAl9CmRpZmYgLS1naXQgYS9pbmNsdWRl
L25ldC9hZGRyY29uZi5oIGIvaW5jbHVkZS9uZXQvYWRkcmNvbmYuaAppbmRleCA2ZGVmMDM1MWJj
YzMuLmM4ZDViYjhiMzYxNiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9uZXQvYWRkcmNvbmYuaAorKysg
Yi9pbmNsdWRlL25ldC9hZGRyY29uZi5oCkBAIC0yMzUsOCArMjM1LDEwIEBAIHN0cnVjdCBpcHY2
X3N0dWIgewogCQkJCSBjb25zdCBzdHJ1Y3QgaW42X2FkZHIgKmFkZHIpOwogCWludCAoKmlwdjZf
c29ja19tY19kcm9wKShzdHJ1Y3Qgc29jayAqc2ssIGludCBpZmluZGV4LAogCQkJCSBjb25zdCBz
dHJ1Y3QgaW42X2FkZHIgKmFkZHIpOwotCWludCAoKmlwdjZfZHN0X2xvb2t1cCkoc3RydWN0IG5l
dCAqbmV0LCBzdHJ1Y3Qgc29jayAqc2ssCi0JCQkgICAgICAgc3RydWN0IGRzdF9lbnRyeSAqKmRz
dCwgc3RydWN0IGZsb3dpNiAqZmw2KTsKKwlzdHJ1Y3QgZHN0X2VudHJ5ICooKmlwdjZfZHN0X2xv
b2t1cF9mbG93KShzdHJ1Y3QgbmV0ICpuZXQsCisJCQkJCQkgIGNvbnN0IHN0cnVjdCBzb2NrICpz
aywKKwkJCQkJCSAgc3RydWN0IGZsb3dpNiAqZmw2LAorCQkJCQkJICBjb25zdCBzdHJ1Y3QgaW42
X2FkZHIgKmZpbmFsX2RzdCk7CiAKIAlzdHJ1Y3QgZmliNl90YWJsZSAqKCpmaWI2X2dldF90YWJs
ZSkoc3RydWN0IG5ldCAqbmV0LCB1MzIgaWQpOwogCXN0cnVjdCBmaWI2X2luZm8gKigqZmliNl9s
b29rdXApKHN0cnVjdCBuZXQgKm5ldCwgaW50IG9pZiwKZGlmZiAtLWdpdCBhL25ldC9pcHY2L2Fk
ZHJjb25mX2NvcmUuYyBiL25ldC9pcHY2L2FkZHJjb25mX2NvcmUuYwppbmRleCA1Y2QwMDI5ZDkz
MGUuLjY2YTFhMGViMmVkMCAxMDA2NDQKLS0tIGEvbmV0L2lwdjYvYWRkcmNvbmZfY29yZS5jCisr
KyBiL25ldC9pcHY2L2FkZHJjb25mX2NvcmUuYwpAQCAtMTI3LDExICsxMjcsMTIgQEAgaW50IGlu
ZXQ2YWRkcl92YWxpZGF0b3Jfbm90aWZpZXJfY2FsbF9jaGFpbih1bnNpZ25lZCBsb25nIHZhbCwg
dm9pZCAqdikKIH0KIEVYUE9SVF9TWU1CT0woaW5ldDZhZGRyX3ZhbGlkYXRvcl9ub3RpZmllcl9j
YWxsX2NoYWluKTsKIAotc3RhdGljIGludCBlYWZub3N1cHBvcnRfaXB2Nl9kc3RfbG9va3VwKHN0
cnVjdCBuZXQgKm5ldCwgc3RydWN0IHNvY2sgKnUxLAotCQkJCQlzdHJ1Y3QgZHN0X2VudHJ5ICoq
dTIsCi0JCQkJCXN0cnVjdCBmbG93aTYgKnUzKQorc3RhdGljIHN0cnVjdCBkc3RfZW50cnkgKmVh
Zm5vc3VwcG9ydF9pcHY2X2RzdF9sb29rdXBfZmxvdyhzdHJ1Y3QgbmV0ICpuZXQsCisJCQkJCQkJ
ICAgY29uc3Qgc3RydWN0IHNvY2sgKnNrLAorCQkJCQkJCSAgIHN0cnVjdCBmbG93aTYgKmZsNiwK
KwkJCQkJCQkgICBjb25zdCBzdHJ1Y3QgaW42X2FkZHIgKmZpbmFsX2RzdCkKIHsKLQlyZXR1cm4g
LUVBRk5PU1VQUE9SVDsKKwlyZXR1cm4gRVJSX1BUUigtRUFGTk9TVVBQT1JUKTsKIH0KIAogc3Rh
dGljIHN0cnVjdCBmaWI2X3RhYmxlICplYWZub3N1cHBvcnRfZmliNl9nZXRfdGFibGUoc3RydWN0
IG5ldCAqbmV0LCB1MzIgaWQpCkBAIC0xNjksNyArMTcwLDcgQEAgZWFmbm9zdXBwb3J0X2lwNl9t
dHVfZnJvbV9maWI2KHN0cnVjdCBmaWI2X2luZm8gKmY2aSwgc3RydWN0IGluNl9hZGRyICpkYWRk
ciwKIH0KIAogY29uc3Qgc3RydWN0IGlwdjZfc3R1YiAqaXB2Nl9zdHViIF9fcmVhZF9tb3N0bHkg
PSAmKHN0cnVjdCBpcHY2X3N0dWIpIHsKLQkuaXB2Nl9kc3RfbG9va3VwICAgPSBlYWZub3N1cHBv
cnRfaXB2Nl9kc3RfbG9va3VwLAorCS5pcHY2X2RzdF9sb29rdXBfZmxvdyA9IGVhZm5vc3VwcG9y
dF9pcHY2X2RzdF9sb29rdXBfZmxvdywKIAkuZmliNl9nZXRfdGFibGUgICAgPSBlYWZub3N1cHBv
cnRfZmliNl9nZXRfdGFibGUsCiAJLmZpYjZfdGFibGVfbG9va3VwID0gZWFmbm9zdXBwb3J0X2Zp
YjZfdGFibGVfbG9va3VwLAogCS5maWI2X2xvb2t1cCAgICAgICA9IGVhZm5vc3VwcG9ydF9maWI2
X2xvb2t1cCwKZGlmZiAtLWdpdCBhL25ldC9pcHY2L2FmX2luZXQ2LmMgYi9uZXQvaXB2Ni9hZl9p
bmV0Ni5jCmluZGV4IDVkYjg4YmU4YjZlYy4uNWMyMzUxZGVlZGM4IDEwMDY0NAotLS0gYS9uZXQv
aXB2Ni9hZl9pbmV0Ni5jCisrKyBiL25ldC9pcHY2L2FmX2luZXQ2LmMKQEAgLTkwNCw3ICs5MDQs
NyBAQCBzdGF0aWMgc3RydWN0IHBlcm5ldF9vcGVyYXRpb25zIGluZXQ2X25ldF9vcHMgPSB7CiBz
dGF0aWMgY29uc3Qgc3RydWN0IGlwdjZfc3R1YiBpcHY2X3N0dWJfaW1wbCA9IHsKIAkuaXB2Nl9z
b2NrX21jX2pvaW4gPSBpcHY2X3NvY2tfbWNfam9pbiwKIAkuaXB2Nl9zb2NrX21jX2Ryb3AgPSBp
cHY2X3NvY2tfbWNfZHJvcCwKLQkuaXB2Nl9kc3RfbG9va3VwICAgPSBpcDZfZHN0X2xvb2t1cCwK
KwkuaXB2Nl9kc3RfbG9va3VwX2Zsb3cgPSBpcDZfZHN0X2xvb2t1cF9mbG93LAogCS5maWI2X2dl
dF90YWJsZQkgICA9IGZpYjZfZ2V0X3RhYmxlLAogCS5maWI2X3RhYmxlX2xvb2t1cCA9IGZpYjZf
dGFibGVfbG9va3VwLAogCS5maWI2X2xvb2t1cCAgICAgICA9IGZpYjZfbG9va3VwLApkaWZmIC0t
Z2l0IGEvbmV0L21wbHMvYWZfbXBscy5jIGIvbmV0L21wbHMvYWZfbXBscy5jCmluZGV4IGQ1YTRk
YjViM2ZlNy4uNzYyM2Q5YWVjNjM2IDEwMDY0NAotLS0gYS9uZXQvbXBscy9hZl9tcGxzLmMKKysr
IGIvbmV0L21wbHMvYWZfbXBscy5jCkBAIC02MTgsMTYgKzYxOCwxNSBAQCBzdGF0aWMgc3RydWN0
IG5ldF9kZXZpY2UgKmluZXQ2X2ZpYl9sb29rdXBfZGV2KHN0cnVjdCBuZXQgKm5ldCwKIAlzdHJ1
Y3QgbmV0X2RldmljZSAqZGV2OwogCXN0cnVjdCBkc3RfZW50cnkgKmRzdDsKIAlzdHJ1Y3QgZmxv
d2k2IGZsNjsKLQlpbnQgZXJyOwogCiAJaWYgKCFpcHY2X3N0dWIpCiAJCXJldHVybiBFUlJfUFRS
KC1FQUZOT1NVUFBPUlQpOwogCiAJbWVtc2V0KCZmbDYsIDAsIHNpemVvZihmbDYpKTsKIAltZW1j
cHkoJmZsNi5kYWRkciwgYWRkciwgc2l6ZW9mKHN0cnVjdCBpbjZfYWRkcikpOwotCWVyciA9IGlw
djZfc3R1Yi0+aXB2Nl9kc3RfbG9va3VwKG5ldCwgTlVMTCwgJmRzdCwgJmZsNik7Ci0JaWYgKGVy
cikKLQkJcmV0dXJuIEVSUl9QVFIoZXJyKTsKKwlkc3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xv
b2t1cF9mbG93KG5ldCwgTlVMTCwgJmZsNiwgTlVMTCk7CisJaWYgKElTX0VSUihkc3QpKQorCQly
ZXR1cm4gRVJSX0NBU1QoZHN0KTsKIAogCWRldiA9IGRzdC0+ZGV2OwogCWRldl9ob2xkKGRldik7
CmRpZmYgLS1naXQgYS9uZXQvdGlwYy91ZHBfbWVkaWEuYyBiL25ldC90aXBjL3VkcF9tZWRpYS5j
CmluZGV4IDM4MmM4NGQ5MzM5ZC4uMWQ2MjM1NDc5NzA2IDEwMDY0NAotLS0gYS9uZXQvdGlwYy91
ZHBfbWVkaWEuYworKysgYi9uZXQvdGlwYy91ZHBfbWVkaWEuYwpAQCAtMTg5LDEwICsxODksMTMg
QEAgc3RhdGljIGludCB0aXBjX3VkcF94bWl0KHN0cnVjdCBuZXQgKm5ldCwgc3RydWN0IHNrX2J1
ZmYgKnNrYiwKIAkJCS5zYWRkciA9IHNyYy0+aXB2NiwKIAkJCS5mbG93aTZfcHJvdG8gPSBJUFBS
T1RPX1VEUAogCQl9OwotCQllcnIgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cChuZXQsIHVi
LT51YnNvY2stPnNrLCAmbmRzdCwKLQkJCQkJCSAmZmw2KTsKLQkJaWYgKGVycikKKwkJbmRzdCA9
IGlwdjZfc3R1Yi0+aXB2Nl9kc3RfbG9va3VwX2Zsb3cobmV0LAorCQkJCQkJICAgICAgIHViLT51
YnNvY2stPnNrLAorCQkJCQkJICAgICAgICZmbDYsIE5VTEwpOworCQlpZiAoSVNfRVJSKG5kc3Qp
KSB7CisJCQllcnIgPSBQVFJfRVJSKG5kc3QpOwogCQkJZ290byB0eF9lcnJvcjsKKwkJfQogCQl0
dGwgPSBpcDZfZHN0X2hvcGxpbWl0KG5kc3QpOwogCQllcnIgPSB1ZHBfdHVubmVsNl94bWl0X3Nr
YihuZHN0LCB1Yi0+dWJzb2NrLT5zaywgc2tiLCBOVUxMLAogCQkJCQkgICAmc3JjLT5pcHY2LCAm
ZHN0LT5pcHY2LCAwLCB0dGwsIDAsCgpGcm9tIDA5NzQ0NWFhNjAzMjY3M2IyOTU5OTkxNjIxZDZi
M2I1MGM3OTlkZjMgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEphbiBLYXJhIDxqYWNr
QHN1c2UuY3o+CkRhdGU6IFRodSwgNiBGZWIgMjAyMCAxNToyODoxMiArMDEwMApTdWJqZWN0OiBi
bGt0cmFjZTogUHJvdGVjdCBxLT5ibGtfdHJhY2Ugd2l0aCBSQ1UKCmNvbW1pdCBjNzgwZTg2ZGQ0
OGVmNjQ2N2ExMTQ2Y2Y3ZDBmZTFlMDVhNjM1MDM5IHVwc3RyZWFtLgoKS0FTQU4gaXMgcmVwb3J0
aW5nIHRoYXQgX19ibGtfYWRkX3RyYWNlKCkgaGFzIGEgdXNlLWFmdGVyLWZyZWUgaXNzdWUKd2hl
biBhY2Nlc3NpbmcgcS0+YmxrX3RyYWNlLiBJbmRlZWQgdGhlIHN3aXRjaGluZyBvZiBibG9jayB0
cmFjaW5nIChhbmQKdGh1cyBldmVudHVhbCBmcmVlaW5nIG9mIHEtPmJsa190cmFjZSkgaXMgY29t
cGxldGVseSB1bnN5bmNocm9uaXplZCB3aXRoCnRoZSBjdXJyZW50bHkgcnVubmluZyB0cmFjaW5n
IGFuZCB0aHVzIGl0IGNhbiBoYXBwZW4gdGhhdCB0aGUgYmxrX3RyYWNlCnN0cnVjdHVyZSBpcyBi
ZWluZyBmcmVlZCBqdXN0IHdoaWxlIF9fYmxrX2FkZF90cmFjZSgpIHdvcmtzIG9uIGl0LgpQcm90
ZWN0IGFjY2Vzc2VzIHRvIHEtPmJsa190cmFjZSBieSBSQ1UgZHVyaW5nIHRyYWNpbmcgYW5kIG1h
a2Ugc3VyZSB3ZQp3YWl0IGZvciB0aGUgZW5kIG9mIFJDVSBncmFjZSBwZXJpb2Qgd2hlbiBzaHV0
dGluZyBkb3duIHRyYWNpbmcuIEx1Y2tpbHkKdGhhdCBpcyByYXJlIGVub3VnaCBldmVudCB0aGF0
IHdlIGNhbiBhZmZvcmQgdGhhdC4gTm90ZSB0aGF0IHBvc3Rwb25pbmcKdGhlIGZyZWVpbmcgb2Yg
YmxrX3RyYWNlIHRvIGFuIFJDVSBjYWxsYmFjayBzaG91bGQgYmV0dGVyIGJlIGF2b2lkZWQgYXMK
aXQgY291bGQgaGF2ZSB1bmV4cGVjdGVkIHVzZXIgdmlzaWJsZSBzaWRlLWVmZmVjdHMgYXMgZGVi
dWdmcyBmaWxlcwp3b3VsZCBiZSBzdGlsbCBleGlzdGluZyBmb3IgYSBzaG9ydCB3aGlsZSBibG9j
ayB0cmFjaW5nIGhhcyBiZWVuIHNodXQKZG93bi4KCkxpbms6IGh0dHBzOi8vYnVnemlsbGEua2Vy
bmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjA1NzExCkNDOiBzdGFibGVAdmdlci5rZXJuZWwub3Jn
ClJldmlld2VkLWJ5OiBDaGFpdGFueWEgS3Vsa2FybmkgPGNoYWl0YW55YS5rdWxrYXJuaUB3ZGMu
Y29tPgpSZXZpZXdlZC1ieTogTWluZyBMZWkgPG1pbmcubGVpQHJlZGhhdC5jb20+ClRlc3RlZC1i
eTogTWluZyBMZWkgPG1pbmcubGVpQHJlZGhhdC5jb20+ClJldmlld2VkLWJ5OiBCYXJ0IFZhbiBB
c3NjaGUgPGJ2YW5hc3NjaGVAYWNtLm9yZz4KUmVwb3J0ZWQtYnk6IFRyaXN0YW4gTWFkYW5pIDx0
cmlzdG1kQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogSmFuIEthcmEgPGphY2tAc3VzZS5jej4K
U2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgpbYndoOiBCYWNrcG9y
dGVkIHRvIDQuMTk6IGFkanVzdCBjb250ZXh0XQpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdz
IDxiZW4uaHV0Y2hpbmdzQGNvZGV0aGluay5jby51az4KLS0tCiBpbmNsdWRlL2xpbnV4L2Jsa2Rl
di5oICAgICAgIHwgICAyICstCiBpbmNsdWRlL2xpbnV4L2Jsa3RyYWNlX2FwaS5oIHwgIDE4ICsr
KystLQoga2VybmVsL3RyYWNlL2Jsa3RyYWNlLmMgICAgICB8IDExNCArKysrKysrKysrKysrKysr
KysrKysrKysrLS0tLS0tLS0tLQogMyBmaWxlcyBjaGFuZ2VkLCA5NyBpbnNlcnRpb25zKCspLCAz
NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2Jsa2Rldi5oIGIvaW5j
bHVkZS9saW51eC9ibGtkZXYuaAppbmRleCA2ZTY3YWViNTY5MjguLjc0NWIyZDBkY2Y3OCAxMDA2
NDQKLS0tIGEvaW5jbHVkZS9saW51eC9ibGtkZXYuaAorKysgYi9pbmNsdWRlL2xpbnV4L2Jsa2Rl
di5oCkBAIC02MjQsNyArNjI0LDcgQEAgc3RydWN0IHJlcXVlc3RfcXVldWUgewogCXVuc2lnbmVk
IGludAkJc2dfcmVzZXJ2ZWRfc2l6ZTsKIAlpbnQJCQlub2RlOwogI2lmZGVmIENPTkZJR19CTEtf
REVWX0lPX1RSQUNFCi0Jc3RydWN0IGJsa190cmFjZQkqYmxrX3RyYWNlOworCXN0cnVjdCBibGtf
dHJhY2UgX19yY3UJKmJsa190cmFjZTsKIAlzdHJ1Y3QgbXV0ZXgJCWJsa190cmFjZV9tdXRleDsK
ICNlbmRpZgogCS8qCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2Jsa3RyYWNlX2FwaS5oIGIv
aW5jbHVkZS9saW51eC9ibGt0cmFjZV9hcGkuaAppbmRleCA3YmIyZDhkZTlmMzAuLjNiNmZmNTkw
MmVkYyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9ibGt0cmFjZV9hcGkuaAorKysgYi9pbmNs
dWRlL2xpbnV4L2Jsa3RyYWNlX2FwaS5oCkBAIC01MSw5ICs1MSwxMyBAQCB2b2lkIF9fdHJhY2Vf
bm90ZV9tZXNzYWdlKHN0cnVjdCBibGtfdHJhY2UgKiwgc3RydWN0IGJsa2NnICpibGtjZywgY29u
c3QgY2hhciAqZgogICoqLwogI2RlZmluZSBibGtfYWRkX2Nncm91cF90cmFjZV9tc2cocSwgY2cs
IGZtdCwgLi4uKQkJCVwKIAlkbyB7CQkJCQkJCQlcCi0JCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0g
KHEpLT5ibGtfdHJhY2U7CQkJXAorCQlzdHJ1Y3QgYmxrX3RyYWNlICpidDsJCQkJCVwKKwkJCQkJ
CQkJCVwKKwkJcmN1X3JlYWRfbG9jaygpOwkJCQkJXAorCQlidCA9IHJjdV9kZXJlZmVyZW5jZSgo
cSktPmJsa190cmFjZSk7CQkJXAogCQlpZiAodW5saWtlbHkoYnQpKQkJCQkJXAogCQkJX190cmFj
ZV9ub3RlX21lc3NhZ2UoYnQsIGNnLCBmbXQsICMjX19WQV9BUkdTX18pO1wKKwkJcmN1X3JlYWRf
dW5sb2NrKCk7CQkJCQlcCiAJfSB3aGlsZSAoMCkKICNkZWZpbmUgYmxrX2FkZF90cmFjZV9tc2co
cSwgZm10LCAuLi4pCQkJCQlcCiAJYmxrX2FkZF9jZ3JvdXBfdHJhY2VfbXNnKHEsIE5VTEwsIGZt
dCwgIyNfX1ZBX0FSR1NfXykKQEAgLTYxLDEwICs2NSwxNCBAQCB2b2lkIF9fdHJhY2Vfbm90ZV9t
ZXNzYWdlKHN0cnVjdCBibGtfdHJhY2UgKiwgc3RydWN0IGJsa2NnICpibGtjZywgY29uc3QgY2hh
ciAqZgogCiBzdGF0aWMgaW5saW5lIGJvb2wgYmxrX3RyYWNlX25vdGVfbWVzc2FnZV9lbmFibGVk
KHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpxKQogewotCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+
YmxrX3RyYWNlOwotCWlmIChsaWtlbHkoIWJ0KSkKLQkJcmV0dXJuIGZhbHNlOwotCXJldHVybiBi
dC0+YWN0X21hc2sgJiBCTEtfVENfTk9USUZZOworCXN0cnVjdCBibGtfdHJhY2UgKmJ0OworCWJv
b2wgcmV0OworCisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHEtPmJs
a190cmFjZSk7CisJcmV0ID0gYnQgJiYgKGJ0LT5hY3RfbWFzayAmIEJMS19UQ19OT1RJRlkpOwor
CXJjdV9yZWFkX3VubG9jaygpOworCXJldHVybiByZXQ7CiB9CiAKIGV4dGVybiB2b2lkIGJsa19h
ZGRfZHJpdmVyX2RhdGEoc3RydWN0IHJlcXVlc3RfcXVldWUgKnEsIHN0cnVjdCByZXF1ZXN0ICpy
cSwKZGlmZiAtLWdpdCBhL2tlcm5lbC90cmFjZS9ibGt0cmFjZS5jIGIva2VybmVsL3RyYWNlL2Js
a3RyYWNlLmMKaW5kZXggMjg2OGQ4NWYxZmIxLi45OWY2Y2RiZjJmNTQgMTAwNjQ0Ci0tLSBhL2tl
cm5lbC90cmFjZS9ibGt0cmFjZS5jCisrKyBiL2tlcm5lbC90cmFjZS9ibGt0cmFjZS5jCkBAIC0z
MzYsNiArMzM2LDcgQEAgc3RhdGljIHZvaWQgcHV0X3Byb2JlX3JlZih2b2lkKQogCiBzdGF0aWMg
dm9pZCBibGtfdHJhY2VfY2xlYW51cChzdHJ1Y3QgYmxrX3RyYWNlICpidCkKIHsKKwlzeW5jaHJv
bml6ZV9yY3UoKTsKIAlibGtfdHJhY2VfZnJlZShidCk7CiAJcHV0X3Byb2JlX3JlZigpOwogfQpA
QCAtNjM2LDggKzYzNywxMCBAQCBzdGF0aWMgaW50IGNvbXBhdF9ibGtfdHJhY2Vfc2V0dXAoc3Ry
dWN0IHJlcXVlc3RfcXVldWUgKnEsIGNoYXIgKm5hbWUsCiBzdGF0aWMgaW50IF9fYmxrX3RyYWNl
X3N0YXJ0c3RvcChzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgaW50IHN0YXJ0KQogewogCWludCBy
ZXQ7Ci0Jc3RydWN0IGJsa190cmFjZSAqYnQgPSBxLT5ibGtfdHJhY2U7CisJc3RydWN0IGJsa190
cmFjZSAqYnQ7CiAKKwlidCA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQocS0+YmxrX3RyYWNl
LAorCQkJCSAgICAgICBsb2NrZGVwX2lzX2hlbGQoJnEtPmJsa190cmFjZV9tdXRleCkpOwogCWlm
IChidCA9PSBOVUxMKQogCQlyZXR1cm4gLUVJTlZBTDsKIApAQCAtNzQ2LDggKzc0OSw4IEBAIGlu
dCBibGtfdHJhY2VfaW9jdGwoc3RydWN0IGJsb2NrX2RldmljZSAqYmRldiwgdW5zaWduZWQgY21k
LCBjaGFyIF9fdXNlciAqYXJnKQogdm9pZCBibGtfdHJhY2Vfc2h1dGRvd24oc3RydWN0IHJlcXVl
c3RfcXVldWUgKnEpCiB7CiAJbXV0ZXhfbG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKLQotCWlm
IChxLT5ibGtfdHJhY2UpIHsKKwlpZiAocmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChxLT5ibGtf
dHJhY2UsCisJCQkJICAgICAgbG9ja2RlcF9pc19oZWxkKCZxLT5ibGtfdHJhY2VfbXV0ZXgpKSkg
ewogCQlfX2Jsa190cmFjZV9zdGFydHN0b3AocSwgMCk7CiAJCV9fYmxrX3RyYWNlX3JlbW92ZShx
KTsKIAl9CkBAIC03NTksOCArNzYyLDEwIEBAIHZvaWQgYmxrX3RyYWNlX3NodXRkb3duKHN0cnVj
dCByZXF1ZXN0X3F1ZXVlICpxKQogc3RhdGljIHVuaW9uIGtlcm5mc19ub2RlX2lkICoKIGJsa190
cmFjZV9iaW9fZ2V0X2NnaWQoc3RydWN0IHJlcXVlc3RfcXVldWUgKnEsIHN0cnVjdCBiaW8gKmJp
bykKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxr
X3RyYWNlICpidDsKIAorCS8qIFdlIGRvbid0IHVzZSB0aGUgJ2J0JyB2YWx1ZSBoZXJlIGV4Y2Vw
dCBhcyBhbiBvcHRpbWl6YXRpb24uLi4gKi8KKwlidCA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0
ZWQocS0+YmxrX3RyYWNlLCAxKTsKIAlpZiAoIWJ0IHx8ICEoYmxrX3RyYWNlcl9mbGFncy52YWwg
JiBUUkFDRV9CTEtfT1BUX0NHUk9VUCkpCiAJCXJldHVybiBOVUxMOwogCkBAIC04MDUsMTAgKzgx
MCwxNCBAQCBzdGF0aWMgdm9pZCBibGtfYWRkX3RyYWNlX3JxKHN0cnVjdCByZXF1ZXN0ICpycSwg
aW50IGVycm9yLAogCQkJICAgICB1bnNpZ25lZCBpbnQgbnJfYnl0ZXMsIHUzMiB3aGF0LAogCQkJ
ICAgICB1bmlvbiBrZXJuZnNfbm9kZV9pZCAqY2dpZCkKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpi
dCA9IHJxLT5xLT5ibGtfdHJhY2U7CisJc3RydWN0IGJsa190cmFjZSAqYnQ7CiAKLQlpZiAobGlr
ZWx5KCFidCkpCisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHJxLT5x
LT5ibGtfdHJhY2UpOworCWlmIChsaWtlbHkoIWJ0KSkgeworCQlyY3VfcmVhZF91bmxvY2soKTsK
IAkJcmV0dXJuOworCX0KIAogCWlmIChibGtfcnFfaXNfcGFzc3Rocm91Z2gocnEpKQogCQl3aGF0
IHw9IEJMS19UQ19BQ1QoQkxLX1RDX1BDKTsKQEAgLTgxNyw2ICs4MjYsNyBAQCBzdGF0aWMgdm9p
ZCBibGtfYWRkX3RyYWNlX3JxKHN0cnVjdCByZXF1ZXN0ICpycSwgaW50IGVycm9yLAogCiAJX19i
bGtfYWRkX3RyYWNlKGJ0LCBibGtfcnFfdHJhY2Vfc2VjdG9yKHJxKSwgbnJfYnl0ZXMsIHJlcV9v
cChycSksCiAJCQlycS0+Y21kX2ZsYWdzLCB3aGF0LCBlcnJvciwgMCwgTlVMTCwgY2dpZCk7CisJ
cmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKIHN0YXRpYyB2b2lkIGJsa19hZGRfdHJhY2VfcnFfaW5z
ZXJ0KHZvaWQgKmlnbm9yZSwKQEAgLTg2MiwxNCArODcyLDE5IEBAIHN0YXRpYyB2b2lkIGJsa19h
ZGRfdHJhY2VfcnFfY29tcGxldGUodm9pZCAqaWdub3JlLCBzdHJ1Y3QgcmVxdWVzdCAqcnEsCiBz
dGF0aWMgdm9pZCBibGtfYWRkX3RyYWNlX2JpbyhzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgc3Ry
dWN0IGJpbyAqYmlvLAogCQkJICAgICAgdTMyIHdoYXQsIGludCBlcnJvcikKIHsKLQlzdHJ1Y3Qg
YmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAot
CWlmIChsaWtlbHkoIWJ0KSkKKwlyY3VfcmVhZF9sb2NrKCk7CisJYnQgPSByY3VfZGVyZWZlcmVu
Y2UocS0+YmxrX3RyYWNlKTsKKwlpZiAobGlrZWx5KCFidCkpIHsKKwkJcmN1X3JlYWRfdW5sb2Nr
KCk7CiAJCXJldHVybjsKKwl9CiAKIAlfX2Jsa19hZGRfdHJhY2UoYnQsIGJpby0+YmlfaXRlci5i
aV9zZWN0b3IsIGJpby0+YmlfaXRlci5iaV9zaXplLAogCQkJYmlvX29wKGJpbyksIGJpby0+Ymlf
b3BmLCB3aGF0LCBlcnJvciwgMCwgTlVMTCwKIAkJCWJsa190cmFjZV9iaW9fZ2V0X2NnaWQocSwg
YmlvKSk7CisJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKIHN0YXRpYyB2b2lkIGJsa19hZGRfdHJh
Y2VfYmlvX2JvdW5jZSh2b2lkICppZ25vcmUsCkBAIC05MTQsMTEgKzkyOSwxNCBAQCBzdGF0aWMg
dm9pZCBibGtfYWRkX3RyYWNlX2dldHJxKHZvaWQgKmlnbm9yZSwKIAlpZiAoYmlvKQogCQlibGtf
YWRkX3RyYWNlX2JpbyhxLCBiaW8sIEJMS19UQV9HRVRSUSwgMCk7CiAJZWxzZSB7Ci0JCXN0cnVj
dCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCQlzdHJ1Y3QgYmxrX3RyYWNlICpidDsK
IAorCQlyY3VfcmVhZF9sb2NrKCk7CisJCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHEtPmJsa190cmFj
ZSk7CiAJCWlmIChidCkKIAkJCV9fYmxrX2FkZF90cmFjZShidCwgMCwgMCwgcncsIDAsIEJMS19U
QV9HRVRSUSwgMCwgMCwKIAkJCQkJTlVMTCwgTlVMTCk7CisJCXJjdV9yZWFkX3VubG9jaygpOwog
CX0KIH0KIApAQCAtOTMwLDI3ICs5NDgsMzUgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9z
bGVlcHJxKHZvaWQgKmlnbm9yZSwKIAlpZiAoYmlvKQogCQlibGtfYWRkX3RyYWNlX2JpbyhxLCBi
aW8sIEJMS19UQV9TTEVFUFJRLCAwKTsKIAllbHNlIHsKLQkJc3RydWN0IGJsa190cmFjZSAqYnQg
PSBxLT5ibGtfdHJhY2U7CisJCXN0cnVjdCBibGtfdHJhY2UgKmJ0OwogCisJCXJjdV9yZWFkX2xv
Y2soKTsKKwkJYnQgPSByY3VfZGVyZWZlcmVuY2UocS0+YmxrX3RyYWNlKTsKIAkJaWYgKGJ0KQog
CQkJX19ibGtfYWRkX3RyYWNlKGJ0LCAwLCAwLCBydywgMCwgQkxLX1RBX1NMRUVQUlEsCiAJCQkJ
CTAsIDAsIE5VTEwsIE5VTEwpOworCQlyY3VfcmVhZF91bmxvY2soKTsKIAl9CiB9CiAKIHN0YXRp
YyB2b2lkIGJsa19hZGRfdHJhY2VfcGx1Zyh2b2lkICppZ25vcmUsIHN0cnVjdCByZXF1ZXN0X3F1
ZXVlICpxKQogewotCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCXN0cnVj
dCBibGtfdHJhY2UgKmJ0OwogCisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJl
bmNlKHEtPmJsa190cmFjZSk7CiAJaWYgKGJ0KQogCQlfX2Jsa19hZGRfdHJhY2UoYnQsIDAsIDAs
IDAsIDAsIEJMS19UQV9QTFVHLCAwLCAwLCBOVUxMLCBOVUxMKTsKKwlyY3VfcmVhZF91bmxvY2so
KTsKIH0KIAogc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV91bnBsdWcodm9pZCAqaWdub3JlLCBz
dHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwKIAkJCQkgICAgdW5zaWduZWQgaW50IGRlcHRoLCBib29s
IGV4cGxpY2l0KQogewotCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCXN0
cnVjdCBibGtfdHJhY2UgKmJ0OwogCisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVm
ZXJlbmNlKHEtPmJsa190cmFjZSk7CiAJaWYgKGJ0KSB7CiAJCV9fYmU2NCBycGR1ID0gY3B1X3Rv
X2JlNjQoZGVwdGgpOwogCQl1MzIgd2hhdDsKQEAgLTk2MiwxNCArOTg4LDE3IEBAIHN0YXRpYyB2
b2lkIGJsa19hZGRfdHJhY2VfdW5wbHVnKHZvaWQgKmlnbm9yZSwgc3RydWN0IHJlcXVlc3RfcXVl
dWUgKnEsCiAKIAkJX19ibGtfYWRkX3RyYWNlKGJ0LCAwLCAwLCAwLCAwLCB3aGF0LCAwLCBzaXpl
b2YocnBkdSksICZycGR1LCBOVUxMKTsKIAl9CisJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKIHN0
YXRpYyB2b2lkIGJsa19hZGRfdHJhY2Vfc3BsaXQodm9pZCAqaWdub3JlLAogCQkJCXN0cnVjdCBy
ZXF1ZXN0X3F1ZXVlICpxLCBzdHJ1Y3QgYmlvICpiaW8sCiAJCQkJdW5zaWduZWQgaW50IHBkdSkK
IHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3Ry
YWNlICpidDsKIAorCXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShxLT5i
bGtfdHJhY2UpOwogCWlmIChidCkgewogCQlfX2JlNjQgcnBkdSA9IGNwdV90b19iZTY0KHBkdSk7
CiAKQEAgLTk3OCw2ICsxMDA3LDcgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9zcGxpdCh2
b2lkICppZ25vcmUsCiAJCQkJQkxLX1RBX1NQTElULCBiaW8tPmJpX3N0YXR1cywgc2l6ZW9mKHJw
ZHUpLAogCQkJCSZycGR1LCBibGtfdHJhY2VfYmlvX2dldF9jZ2lkKHEsIGJpbykpOwogCX0KKwly
Y3VfcmVhZF91bmxvY2soKTsKIH0KIAogLyoqCkBAIC05OTcsMTEgKzEwMjcsMTUgQEAgc3RhdGlj
IHZvaWQgYmxrX2FkZF90cmFjZV9iaW9fcmVtYXAodm9pZCAqaWdub3JlLAogCQkJCSAgICBzdHJ1
Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgc3RydWN0IGJpbyAqYmlvLAogCQkJCSAgICBkZXZfdCBkZXYs
IHNlY3Rvcl90IGZyb20pCiB7Ci0Jc3RydWN0IGJsa190cmFjZSAqYnQgPSBxLT5ibGtfdHJhY2U7
CisJc3RydWN0IGJsa190cmFjZSAqYnQ7CiAJc3RydWN0IGJsa19pb190cmFjZV9yZW1hcCByOwog
Ci0JaWYgKGxpa2VseSghYnQpKQorCXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVy
ZW5jZShxLT5ibGtfdHJhY2UpOworCWlmIChsaWtlbHkoIWJ0KSkgeworCQlyY3VfcmVhZF91bmxv
Y2soKTsKIAkJcmV0dXJuOworCX0KIAogCXIuZGV2aWNlX2Zyb20gPSBjcHVfdG9fYmUzMihkZXYp
OwogCXIuZGV2aWNlX3RvICAgPSBjcHVfdG9fYmUzMihiaW9fZGV2KGJpbykpOwpAQCAtMTAxMCw2
ICsxMDQ0LDcgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9iaW9fcmVtYXAodm9pZCAqaWdu
b3JlLAogCV9fYmxrX2FkZF90cmFjZShidCwgYmlvLT5iaV9pdGVyLmJpX3NlY3RvciwgYmlvLT5i
aV9pdGVyLmJpX3NpemUsCiAJCQliaW9fb3AoYmlvKSwgYmlvLT5iaV9vcGYsIEJMS19UQV9SRU1B
UCwgYmlvLT5iaV9zdGF0dXMsCiAJCQlzaXplb2YociksICZyLCBibGtfdHJhY2VfYmlvX2dldF9j
Z2lkKHEsIGJpbykpOworCXJjdV9yZWFkX3VubG9jaygpOwogfQogCiAvKioKQEAgLTEwMzAsMTEg
KzEwNjUsMTUgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9ycV9yZW1hcCh2b2lkICppZ25v
cmUsCiAJCQkJICAgc3RydWN0IHJlcXVlc3QgKnJxLCBkZXZfdCBkZXYsCiAJCQkJICAgc2VjdG9y
X3QgZnJvbSkKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1
Y3QgYmxrX3RyYWNlICpidDsKIAlzdHJ1Y3QgYmxrX2lvX3RyYWNlX3JlbWFwIHI7CiAKLQlpZiAo
bGlrZWx5KCFidCkpCisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHEt
PmJsa190cmFjZSk7CisJaWYgKGxpa2VseSghYnQpKSB7CisJCXJjdV9yZWFkX3VubG9jaygpOwog
CQlyZXR1cm47CisJfQogCiAJci5kZXZpY2VfZnJvbSA9IGNwdV90b19iZTMyKGRldik7CiAJci5k
ZXZpY2VfdG8gICA9IGNwdV90b19iZTMyKGRpc2tfZGV2dChycS0+cnFfZGlzaykpOwpAQCAtMTA0
Myw2ICsxMDgyLDcgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9ycV9yZW1hcCh2b2lkICpp
Z25vcmUsCiAJX19ibGtfYWRkX3RyYWNlKGJ0LCBibGtfcnFfcG9zKHJxKSwgYmxrX3JxX2J5dGVz
KHJxKSwKIAkJCXJxX2RhdGFfZGlyKHJxKSwgMCwgQkxLX1RBX1JFTUFQLCAwLAogCQkJc2l6ZW9m
KHIpLCAmciwgYmxrX3RyYWNlX3JlcXVlc3RfZ2V0X2NnaWQocSwgcnEpKTsKKwlyY3VfcmVhZF91
bmxvY2soKTsKIH0KIAogLyoqCkBAIC0xMDYwLDE0ICsxMTAwLDE5IEBAIHZvaWQgYmxrX2FkZF9k
cml2ZXJfZGF0YShzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwKIAkJCSBzdHJ1Y3QgcmVxdWVzdCAq
cnEsCiAJCQkgdm9pZCAqZGF0YSwgc2l6ZV90IGxlbikKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpi
dCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAotCWlmIChsaWtlbHko
IWJ0KSkKKwlyY3VfcmVhZF9sb2NrKCk7CisJYnQgPSByY3VfZGVyZWZlcmVuY2UocS0+YmxrX3Ry
YWNlKTsKKwlpZiAobGlrZWx5KCFidCkpIHsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJCXJldHVy
bjsKKwl9CiAKIAlfX2Jsa19hZGRfdHJhY2UoYnQsIGJsa19ycV90cmFjZV9zZWN0b3IocnEpLCBi
bGtfcnFfYnl0ZXMocnEpLCAwLCAwLAogCQkJCUJMS19UQV9EUlZfREFUQSwgMCwgbGVuLCBkYXRh
LAogCQkJCWJsa190cmFjZV9yZXF1ZXN0X2dldF9jZ2lkKHEsIHJxKSk7CisJcmN1X3JlYWRfdW5s
b2NrKCk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChibGtfYWRkX2RyaXZlcl9kYXRhKTsKIApAQCAt
MTU5NCw2ICsxNjM5LDcgQEAgc3RhdGljIGludCBibGtfdHJhY2VfcmVtb3ZlX3F1ZXVlKHN0cnVj
dCByZXF1ZXN0X3F1ZXVlICpxKQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCXB1dF9wcm9iZV9yZWYo
KTsKKwlzeW5jaHJvbml6ZV9yY3UoKTsKIAlibGtfdHJhY2VfZnJlZShidCk7CiAJcmV0dXJuIDA7
CiB9CkBAIC0xNzU1LDYgKzE4MDEsNyBAQCBzdGF0aWMgc3NpemVfdCBzeXNmc19ibGtfdHJhY2Vf
YXR0cl9zaG93KHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzdHJ1Y3QgaGRfc3RydWN0ICpwID0gZGV2
X3RvX3BhcnQoZGV2KTsKIAlzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcTsKIAlzdHJ1Y3QgYmxvY2tf
ZGV2aWNlICpiZGV2OworCXN0cnVjdCBibGtfdHJhY2UgKmJ0OwogCXNzaXplX3QgcmV0ID0gLUVO
WElPOwogCiAJYmRldiA9IGJkZ2V0KHBhcnRfZGV2dChwKSk7CkBAIC0xNzY3LDIxICsxODE0LDIz
IEBAIHN0YXRpYyBzc2l6ZV90IHN5c2ZzX2Jsa190cmFjZV9hdHRyX3Nob3coc3RydWN0IGRldmlj
ZSAqZGV2LAogCiAJbXV0ZXhfbG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKIAorCWJ0ID0gcmN1
X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChxLT5ibGtfdHJhY2UsCisJCQkJICAgICAgIGxvY2tkZXBf
aXNfaGVsZCgmcS0+YmxrX3RyYWNlX211dGV4KSk7CiAJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2Vu
YWJsZSkgewotCQlyZXQgPSBzcHJpbnRmKGJ1ZiwgIiV1XG4iLCAhIXEtPmJsa190cmFjZSk7CisJ
CXJldCA9IHNwcmludGYoYnVmLCAiJXVcbiIsICEhYnQpOwogCQlnb3RvIG91dF91bmxvY2tfYmRl
djsKIAl9CiAKLQlpZiAocS0+YmxrX3RyYWNlID09IE5VTEwpCisJaWYgKGJ0ID09IE5VTEwpCiAJ
CXJldCA9IHNwcmludGYoYnVmLCAiZGlzYWJsZWRcbiIpOwogCWVsc2UgaWYgKGF0dHIgPT0gJmRl
dl9hdHRyX2FjdF9tYXNrKQotCQlyZXQgPSBibGtfdHJhY2VfbWFzazJzdHIoYnVmLCBxLT5ibGtf
dHJhY2UtPmFjdF9tYXNrKTsKKwkJcmV0ID0gYmxrX3RyYWNlX21hc2syc3RyKGJ1ZiwgYnQtPmFj
dF9tYXNrKTsKIAllbHNlIGlmIChhdHRyID09ICZkZXZfYXR0cl9waWQpCi0JCXJldCA9IHNwcmlu
dGYoYnVmLCAiJXVcbiIsIHEtPmJsa190cmFjZS0+cGlkKTsKKwkJcmV0ID0gc3ByaW50ZihidWYs
ICIldVxuIiwgYnQtPnBpZCk7CiAJZWxzZSBpZiAoYXR0ciA9PSAmZGV2X2F0dHJfc3RhcnRfbGJh
KQotCQlyZXQgPSBzcHJpbnRmKGJ1ZiwgIiVsbHVcbiIsIHEtPmJsa190cmFjZS0+c3RhcnRfbGJh
KTsKKwkJcmV0ID0gc3ByaW50ZihidWYsICIlbGx1XG4iLCBidC0+c3RhcnRfbGJhKTsKIAllbHNl
IGlmIChhdHRyID09ICZkZXZfYXR0cl9lbmRfbGJhKQotCQlyZXQgPSBzcHJpbnRmKGJ1ZiwgIiVs
bHVcbiIsIHEtPmJsa190cmFjZS0+ZW5kX2xiYSk7CisJCXJldCA9IHNwcmludGYoYnVmLCAiJWxs
dVxuIiwgYnQtPmVuZF9sYmEpOwogCiBvdXRfdW5sb2NrX2JkZXY6CiAJbXV0ZXhfdW5sb2NrKCZx
LT5ibGtfdHJhY2VfbXV0ZXgpOwpAQCAtMTc5OCw2ICsxODQ3LDcgQEAgc3RhdGljIHNzaXplX3Qg
c3lzZnNfYmxrX3RyYWNlX2F0dHJfc3RvcmUoc3RydWN0IGRldmljZSAqZGV2LAogCXN0cnVjdCBi
bG9ja19kZXZpY2UgKmJkZXY7CiAJc3RydWN0IHJlcXVlc3RfcXVldWUgKnE7CiAJc3RydWN0IGhk
X3N0cnVjdCAqcDsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAl1NjQgdmFsdWU7CiAJc3NpemVf
dCByZXQgPSAtRUlOVkFMOwogCkBAIC0xODI4LDggKzE4NzgsMTAgQEAgc3RhdGljIHNzaXplX3Qg
c3lzZnNfYmxrX3RyYWNlX2F0dHJfc3RvcmUoc3RydWN0IGRldmljZSAqZGV2LAogCiAJbXV0ZXhf
bG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKIAorCWJ0ID0gcmN1X2RlcmVmZXJlbmNlX3Byb3Rl
Y3RlZChxLT5ibGtfdHJhY2UsCisJCQkJICAgICAgIGxvY2tkZXBfaXNfaGVsZCgmcS0+YmxrX3Ry
YWNlX211dGV4KSk7CiAJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2VuYWJsZSkgewotCQlpZiAoISF2
YWx1ZSA9PSAhIXEtPmJsa190cmFjZSkgeworCQlpZiAoISF2YWx1ZSA9PSAhIWJ0KSB7CiAJCQly
ZXQgPSAwOwogCQkJZ290byBvdXRfdW5sb2NrX2JkZXY7CiAJCX0KQEAgLTE4NDEsMTggKzE4OTMs
MTggQEAgc3RhdGljIHNzaXplX3Qgc3lzZnNfYmxrX3RyYWNlX2F0dHJfc3RvcmUoc3RydWN0IGRl
dmljZSAqZGV2LAogCX0KIAogCXJldCA9IDA7Ci0JaWYgKHEtPmJsa190cmFjZSA9PSBOVUxMKQor
CWlmIChidCA9PSBOVUxMKQogCQlyZXQgPSBibGtfdHJhY2Vfc2V0dXBfcXVldWUocSwgYmRldik7
CiAKIAlpZiAocmV0ID09IDApIHsKIAkJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2FjdF9tYXNrKQot
CQkJcS0+YmxrX3RyYWNlLT5hY3RfbWFzayA9IHZhbHVlOworCQkJYnQtPmFjdF9tYXNrID0gdmFs
dWU7CiAJCWVsc2UgaWYgKGF0dHIgPT0gJmRldl9hdHRyX3BpZCkKLQkJCXEtPmJsa190cmFjZS0+
cGlkID0gdmFsdWU7CisJCQlidC0+cGlkID0gdmFsdWU7CiAJCWVsc2UgaWYgKGF0dHIgPT0gJmRl
dl9hdHRyX3N0YXJ0X2xiYSkKLQkJCXEtPmJsa190cmFjZS0+c3RhcnRfbGJhID0gdmFsdWU7CisJ
CQlidC0+c3RhcnRfbGJhID0gdmFsdWU7CiAJCWVsc2UgaWYgKGF0dHIgPT0gJmRldl9hdHRyX2Vu
ZF9sYmEpCi0JCQlxLT5ibGtfdHJhY2UtPmVuZF9sYmEgPSB2YWx1ZTsKKwkJCWJ0LT5lbmRfbGJh
ID0gdmFsdWU7CiAJfQogCiBvdXRfdW5sb2NrX2JkZXY6CgpGcm9tIDAyMGQzN2U1NzFiYWNkYjNi
YTQzZTJiMzU5NzBmOWMxMWY1MWViMGMgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IENl
bmdpeiBDYW4gPGNlbmdpekBrZXJuZWwud3RmPgpEYXRlOiBXZWQsIDQgTWFyIDIwMjAgMTM6NTg6
MTkgKzAzMDAKU3ViamVjdDogYmxrdHJhY2U6IGZpeCBkZXJlZmVyZW5jZSBhZnRlciBudWxsIGNo
ZWNrCgpjb21taXQgMTUzMDMxYTMwMWJiMDcxOTRlOWMzNzQ2NmNmY2U4ZWFjYjk3NzYyMSB1cHN0
cmVhbS4KClRoZXJlIHdhcyBhIHJlY2VudCBjaGFuZ2UgaW4gYmxrdHJhY2UuYyB0aGF0IGFkZGVk
IGEgUkNVIHByb3RlY3Rpb24gdG8KYHEtPmJsa190cmFjZWAgaW4gb3JkZXIgdG8gZml4IGEgdXNl
LWFmdGVyLWZyZWUgaXNzdWUgZHVyaW5nIGFjY2Vzcy4KCkhvd2V2ZXIgdGhlIGNoYW5nZSBtaXNz
ZWQgYW4gZWRnZSBjYXNlIHRoYXQgY2FuIGxlYWQgdG8gZGVyZWZlcmVuY2luZyBvZgpgYnRgIHBv
aW50ZXIgZXZlbiB3aGVuIGl0J3MgTlVMTDoKCkNvdmVyaXR5IHN0YXRpYyBhbmFseXplciBtYXJr
ZWQgdGhpcyBhcyBhIEZPUldBUkRfTlVMTCBpc3N1ZSB3aXRoIENJRAoxNDYwNDU4LgoKYGBgCi9r
ZXJuZWwvdHJhY2UvYmxrdHJhY2UuYzogMTkwNCBpbiBzeXNmc19ibGtfdHJhY2VfYXR0cl9zdG9y
ZSgpCjE4OTggICAgICAgICAgICByZXQgPSAwOwoxODk5ICAgICAgICAgICAgaWYgKGJ0ID09IE5V
TEwpCjE5MDAgICAgICAgICAgICAgICAgICAgIHJldCA9IGJsa190cmFjZV9zZXR1cF9xdWV1ZShx
LCBiZGV2KTsKMTkwMQoxOTAyICAgICAgICAgICAgaWYgKHJldCA9PSAwKSB7CjE5MDMgICAgICAg
ICAgICAgICAgICAgIGlmIChhdHRyID09ICZkZXZfYXR0cl9hY3RfbWFzaykKPj4+ICAgICBDSUQg
MTQ2MDQ1ODogIE51bGwgcG9pbnRlciBkZXJlZmVyZW5jZXMgIChGT1JXQVJEX05VTEwpCj4+PiAg
ICAgRGVyZWZlcmVuY2luZyBudWxsIHBvaW50ZXIgImJ0Ii4KMTkwNCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBidC0+YWN0X21hc2sgPSB2YWx1ZTsKMTkwNSAgICAgICAgICAgICAgICAgICAg
ZWxzZSBpZiAoYXR0ciA9PSAmZGV2X2F0dHJfcGlkKQoxOTA2ICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGJ0LT5waWQgPSB2YWx1ZTsKMTkwNyAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAo
YXR0ciA9PSAmZGV2X2F0dHJfc3RhcnRfbGJhKQoxOTA4ICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIGJ0LT5zdGFydF9sYmEgPSB2YWx1ZTsKMTkwOSAgICAgICAgICAgICAgICAgICAgZWxzZSBp
ZiAoYXR0ciA9PSAmZGV2X2F0dHJfZW5kX2xiYSkKYGBgCgpBZGRlZCBhIHJlYXNzaWdubWVudCB3
aXRoIFJDVSBhbm5vdGF0aW9uIHRvIGZpeCB0aGUgaXNzdWUuCgpGaXhlczogYzc4MGU4NmRkNDgg
KCJibGt0cmFjZTogUHJvdGVjdCBxLT5ibGtfdHJhY2Ugd2l0aCBSQ1UiKQpSZXZpZXdlZC1ieTog
TWluZyBMZWkgPG1pbmcubGVpQHJlZGhhdC5jb20+ClJldmlld2VkLWJ5OiBCb2IgTGl1IDxib2Iu
bGl1QG9yYWNsZS5jb20+ClJldmlld2VkLWJ5OiBTdGV2ZW4gUm9zdGVkdCAoVk13YXJlKSA8cm9z
dGVkdEBnb29kbWlzLm9yZz4KU2lnbmVkLW9mZi1ieTogQ2VuZ2l6IENhbiA8Y2VuZ2l6QGtlcm5l
bC53dGY+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KU2lnbmVk
LW9mZi1ieTogQmVuIEh1dGNoaW5ncyA8YmVuLmh1dGNoaW5nc0Bjb2RldGhpbmsuY28udWs+Ci0t
LQoga2VybmVsL3RyYWNlL2Jsa3RyYWNlLmMgfCA1ICsrKystCiAxIGZpbGUgY2hhbmdlZCwgNCBp
bnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEva2VybmVsL3RyYWNlL2Js
a3RyYWNlLmMgYi9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYwppbmRleCA5OWY2Y2RiZjJmNTQuLjZj
ZWE4YmJjYTAzYyAxMDA2NDQKLS0tIGEva2VybmVsL3RyYWNlL2Jsa3RyYWNlLmMKKysrIGIva2Vy
bmVsL3RyYWNlL2Jsa3RyYWNlLmMKQEAgLTE4OTMsOCArMTg5MywxMSBAQCBzdGF0aWMgc3NpemVf
dCBzeXNmc19ibGtfdHJhY2VfYXR0cl9zdG9yZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJfQogCiAJ
cmV0ID0gMDsKLQlpZiAoYnQgPT0gTlVMTCkKKwlpZiAoYnQgPT0gTlVMTCkgewogCQlyZXQgPSBi
bGtfdHJhY2Vfc2V0dXBfcXVldWUocSwgYmRldik7CisJCWJ0ID0gcmN1X2RlcmVmZXJlbmNlX3By
b3RlY3RlZChxLT5ibGtfdHJhY2UsCisJCQkJbG9ja2RlcF9pc19oZWxkKCZxLT5ibGtfdHJhY2Vf
bXV0ZXgpKTsKKwl9CiAKIAlpZiAocmV0ID09IDApIHsKIAkJaWYgKGF0dHIgPT0gJmRldl9hdHRy
X2FjdF9tYXNrKQoKRnJvbSA1MzQ2NmFjODg3OWZjZWU0M2RkYWEzMzAzZDcxNGRjZGRmY2ViYzAy
IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBSYW5kYWxsIEh1YW5nIDxodWFuZ3JhbmRh
bGxAZ29vZ2xlLmNvbT4KRGF0ZTogRnJpLCAxOCBPY3QgMjAxOSAxNDo1NjoyMiArMDgwMApTdWJq
ZWN0OiBmMmZzOiBmaXggdG8gYXZvaWQgbWVtb3J5IGxlYWthZ2UgaW4gZjJmc19saXN0eGF0dHIK
CmNvbW1pdCA2ODgwNzhlN2YzNmMyOTNkYWUyNWIzMzhkZGM5ZTBhMjc5MGY2ZTA2IHVwc3RyZWFt
LgoKSW4gZjJmc19saXN0eGF0dHIsIHRoZXJlIGlzIG5vIGJvdW5kYXJ5IGNoZWNrIGJlZm9yZQpt
ZW1jcHkgZV9uYW1lIHRvIGJ1ZmZlci4KSWYgdGhlIGVfbmFtZV9sZW4gaXMgY29ycnVwdGVkLAp1
bmV4cGVjdGVkIG1lbW9yeSBjb250ZW50cyBtYXkgYmUgcmV0dXJuZWQgdG8gdGhlIGJ1ZmZlci4K
ClNpZ25lZC1vZmYtYnk6IFJhbmRhbGwgSHVhbmcgPGh1YW5ncmFuZGFsbEBnb29nbGUuY29tPgpS
ZXZpZXdlZC1ieTogQ2hhbyBZdSA8eXVjaGFvMEBodWF3ZWkuY29tPgpTaWduZWQtb2ZmLWJ5OiBK
YWVnZXVrIEtpbSA8amFlZ2V1a0BrZXJuZWwub3JnPgpbYndoOiBCYWNrcG9ydGVkIHRvIDQuMTk6
IFVzZSBmMmZzX21zZygpIGluc3RlYWQgb2YgZjJmc19lcnIoKV0KU2lnbmVkLW9mZi1ieTogQmVu
IEh1dGNoaW5ncyA8YmVuLmh1dGNoaW5nc0Bjb2RldGhpbmsuY28udWs+Ci0tLQogZnMvZjJmcy94
YXR0ci5jIHwgMTUgKysrKysrKysrKysrKystCiAxIGZpbGUgY2hhbmdlZCwgMTQgaW5zZXJ0aW9u
cygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2ZzL2YyZnMveGF0dHIuYyBiL2ZzL2Yy
ZnMveGF0dHIuYwppbmRleCAxZGFlNzRmN2NjY2EuLjIwMWU5ZGExNjkyYSAxMDA2NDQKLS0tIGEv
ZnMvZjJmcy94YXR0ci5jCisrKyBiL2ZzL2YyZnMveGF0dHIuYwpAQCAtNTM4LDggKzUzOCw5IEBA
IGludCBmMmZzX2dldHhhdHRyKHN0cnVjdCBpbm9kZSAqaW5vZGUsIGludCBpbmRleCwgY29uc3Qg
Y2hhciAqbmFtZSwKIHNzaXplX3QgZjJmc19saXN0eGF0dHIoc3RydWN0IGRlbnRyeSAqZGVudHJ5
LCBjaGFyICpidWZmZXIsIHNpemVfdCBidWZmZXJfc2l6ZSkKIHsKIAlzdHJ1Y3QgaW5vZGUgKmlu
b2RlID0gZF9pbm9kZShkZW50cnkpOworCW5pZF90IHhuaWQgPSBGMkZTX0koaW5vZGUpLT5pX3hh
dHRyX25pZDsKIAlzdHJ1Y3QgZjJmc194YXR0cl9lbnRyeSAqZW50cnk7Ci0Jdm9pZCAqYmFzZV9h
ZGRyOworCXZvaWQgKmJhc2VfYWRkciwgKmxhc3RfYmFzZV9hZGRyOwogCWludCBlcnJvciA9IDA7
CiAJc2l6ZV90IHJlc3QgPSBidWZmZXJfc2l6ZTsKIApAQCAtNTQ5LDYgKzU1MCw4IEBAIHNzaXpl
X3QgZjJmc19saXN0eGF0dHIoc3RydWN0IGRlbnRyeSAqZGVudHJ5LCBjaGFyICpidWZmZXIsIHNp
emVfdCBidWZmZXJfc2l6ZSkKIAlpZiAoZXJyb3IpCiAJCXJldHVybiBlcnJvcjsKIAorCWxhc3Rf
YmFzZV9hZGRyID0gKHZvaWQgKiliYXNlX2FkZHIgKyBYQVRUUl9TSVpFKHhuaWQsIGlub2RlKTsK
KwogCWxpc3RfZm9yX2VhY2hfeGF0dHIoZW50cnksIGJhc2VfYWRkcikgewogCQljb25zdCBzdHJ1
Y3QgeGF0dHJfaGFuZGxlciAqaGFuZGxlciA9CiAJCQlmMmZzX3hhdHRyX2hhbmRsZXIoZW50cnkt
PmVfbmFtZV9pbmRleCk7CkBAIC01NTYsNiArNTU5LDE2IEBAIHNzaXplX3QgZjJmc19saXN0eGF0
dHIoc3RydWN0IGRlbnRyeSAqZGVudHJ5LCBjaGFyICpidWZmZXIsIHNpemVfdCBidWZmZXJfc2l6
ZSkKIAkJc2l6ZV90IHByZWZpeF9sZW47CiAJCXNpemVfdCBzaXplOwogCisJCWlmICgodm9pZCAq
KShlbnRyeSkgKyBzaXplb2YoX191MzIpID4gbGFzdF9iYXNlX2FkZHIgfHwKKwkJCSh2b2lkICop
WEFUVFJfTkVYVF9FTlRSWShlbnRyeSkgPiBsYXN0X2Jhc2VfYWRkcikgeworCQkJZjJmc19tc2co
ZGVudHJ5LT5kX3NiLCBLRVJOX0VSUiwKKwkJCQkgImlub2RlICglbHUpIGhhcyBjb3JydXB0ZWQg
eGF0dHIiLAorCQkJCSBpbm9kZS0+aV9pbm8pOworCQkJc2V0X3NiaV9mbGFnKEYyRlNfSV9TQihp
bm9kZSksIFNCSV9ORUVEX0ZTQ0spOworCQkJZXJyb3IgPSAtRUZTQ09SUlVQVEVEOworCQkJZ290
byBjbGVhbnVwOworCQl9CisKIAkJaWYgKCFoYW5kbGVyIHx8IChoYW5kbGVyLT5saXN0ICYmICFo
YW5kbGVyLT5saXN0KGRlbnRyeSkpKQogCQkJY29udGludWU7CiAK


--=-V4iPhaov5HOLyfPiL2Lp--

