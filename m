Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 5CC1AC9BED
	for <lists+stable@lfdr.de>; Thu,  3 Oct 2019 12:15:55 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726364AbfJCKPN (ORCPT <rfc822;lists+stable@lfdr.de>);
        Thu, 3 Oct 2019 06:15:13 -0400
Received: from out1-smtp.messagingengine.com ([66.111.4.25]:59801 "EHLO
        out1-smtp.messagingengine.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726808AbfJCKPN (ORCPT
        <rfc822;stable@vger.kernel.org>); Thu, 3 Oct 2019 06:15:13 -0400
Received: from compute6.internal (compute6.nyi.internal [10.202.2.46])
        by mailout.nyi.internal (Postfix) with ESMTP id A81D621B24;
        Thu,  3 Oct 2019 06:15:12 -0400 (EDT)
Received: from mailfrontend2 ([10.202.2.163])
  by compute6.internal (MEProxy); Thu, 03 Oct 2019 06:15:12 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
        messagingengine.com; h=cc:content-transfer-encoding:content-type
        :date:from:message-id:mime-version:subject:to:x-me-proxy
        :x-me-proxy:x-me-sender:x-me-sender:x-sasl-enc; s=fm3; bh=XTgyw4
        BBT0LauJxAPO4upa5iaBnd7u1s4gHz8OFR+yw=; b=lvwMBDeXPW2HElikPiFK2X
        i5am5OpgSvhjHQBkyNDgc9Sa6CM/iPXuY6QRVQF8mFHal04SxeTZTvaXWs7Xe3QX
        k6Ja8uepQP7GUciHhzBbInlsQE4+jIcSoEbN0VhOoamxyrQfabQ8HoAANaet2jOB
        v6LJGIoseSfUSWhBvn7meAu6wUAPPnK35cIyYeRVFvxUKB+87jFZMBFwqWe9kznh
        NrMVAXUnyfn7i2YRA8gyT0SrG6n5YzH4axI1nXqFyJcU1jRikrhAOzDS+yb22rgc
        3Q5B7Awqq1Cxp+frgX7Cva9nMoi369gDCXMumTVGw3p1Jxl53sv0wxoMlD/UTEPg
        ==
X-ME-Sender: <xms:MMqVXeowTNgD1nDF5ENsqcPE_CU6HY4c5P0zJk9LwF7wj1sWTAGJzA>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgedufedrgeekgddvhecutefuodetggdotefrodftvf
    curfhrohhfihhlvgemucfhrghsthforghilhdpqfgfvfdpuffrtefokffrpgfnqfghnecu
    uegrihhlohhuthemuceftddtnecunecujfgurhepuffvhfffkfggtgfgsehtkeertddttd
    flnecuhfhrohhmpeeoghhrvghgkhhhsehlihhnuhigfhhouhhnuggrthhiohhnrdhorhhg
    qeenucffohhmrghinhepkhgvrhhnvghlrdhorhhgnecukfhppeekfedrkeeirdekledrud
    dtjeenucfrrghrrghmpehmrghilhhfrhhomhepghhrvghgsehkrhhorghhrdgtohhmnecu
    vehluhhsthgvrhfuihiivgepud
X-ME-Proxy: <xmx:MMqVXQfkz9d2OGKDmvWnPIsdVeg__xTvJTL5U9QQnqOnHdKxXamR1Q>
    <xmx:MMqVXcTAI0XEcD5tuJ9pkIsrR8bzl8yGBVxS_QcPw7LxaPIXoG7wTw>
    <xmx:MMqVXRaH86-QnpGL_hBNSNiLMdllJpGoLAVrOa4WLhSEMgmjFua_hQ>
    <xmx:MMqVXZTv8kgUc9sBVoRcc34yilnR0TXO7VqrS462JlEKHBot4nAPxQ>
Received: from localhost (83-86-89-107.cable.dynamic.v4.ziggo.nl [83.86.89.107])
        by mail.messagingengine.com (Postfix) with ESMTPA id 2F334D60057;
        Thu,  3 Oct 2019 06:15:12 -0400 (EDT)
Subject: FAILED: patch "[PATCH] staging: erofs: fix an error handling in erofs_readdir()" failed to apply to 5.3-stable tree
To:     gaoxiang25@huawei.com, gregkh@linuxfoundation.org, richard@nod.at,
        stable@vger.kernel.org, yuchao0@huawei.com
Cc:     <stable@vger.kernel.org>
From:   <gregkh@linuxfoundation.org>
Date:   Thu, 03 Oct 2019 12:15:11 +0200
Message-ID: <1570097711173101@kroah.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ANSI_X3.4-1968
Content-Transfer-Encoding: 8bit
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org


The patch below does not apply to the 5.3-stable tree.
If someone wants it applied there, or to any other stable or longterm
tree, then please email the backport, including the original git commit
id to <stable@vger.kernel.org>.

thanks,

greg k-h

------------------ original commit in Linus's tree ------------------

From acb383f1dcb4f1e79b66d4be3a0b6f519a957b0d Mon Sep 17 00:00:00 2001
From: Gao Xiang <gaoxiang25@huawei.com>
Date: Sun, 18 Aug 2019 20:54:57 +0800
Subject: [PATCH] staging: erofs: fix an error handling in erofs_readdir()

Richard observed a forever loop of erofs_read_raw_page() [1]
which can be generated by forcely setting ->u.i_blkaddr
to 0xdeadbeef (as my understanding block layer can
handle access beyond end of device correctly).

After digging into that, it seems the problem is highly
related with directories and then I found the root cause
is an improper error handling in erofs_readdir().

Let's fix it now.

[1] https://lore.kernel.org/r/1163995781.68824.1566084358245.JavaMail.zimbra@nod.at/

Reported-by: Richard Weinberger <richard@nod.at>
Fixes: 3aa8ec716e52 ("staging: erofs: add directory operations")
Cc: <stable@vger.kernel.org> # 4.19+
Reviewed-by: Chao Yu <yuchao0@huawei.com>
Signed-off-by: Gao Xiang <gaoxiang25@huawei.com>
Link: https://lore.kernel.org/r/20190818125457.25906-1-hsiangkao@aol.com
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/erofs/dir.c b/drivers/staging/erofs/dir.c
index 5f38382637e6..77ef856df9f3 100644
--- a/drivers/staging/erofs/dir.c
+++ b/drivers/staging/erofs/dir.c
@@ -82,8 +82,15 @@ static int erofs_readdir(struct file *f, struct dir_context *ctx)
 		unsigned int nameoff, maxsize;
 
 		dentry_page = read_mapping_page(mapping, i, NULL);
-		if (IS_ERR(dentry_page))
-			continue;
+		if (dentry_page == ERR_PTR(-ENOMEM)) {
+			err = -ENOMEM;
+			break;
+		} else if (IS_ERR(dentry_page)) {
+			errln("fail to readdir of logical block %u of nid %llu",
+			      i, EROFS_V(dir)->nid);
+			err = -EFSCORRUPTED;
+			break;
+		}
 
 		de = (struct erofs_dirent *)kmap(dentry_page);
 

