Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 5077F65B543
	for <lists+stable@lfdr.de>; Mon,  2 Jan 2023 17:44:49 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232542AbjABQos (ORCPT <rfc822;lists+stable@lfdr.de>);
        Mon, 2 Jan 2023 11:44:48 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44512 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230120AbjABQoq (ORCPT
        <rfc822;stable@vger.kernel.org>); Mon, 2 Jan 2023 11:44:46 -0500
Received: from mail-pl1-x635.google.com (mail-pl1-x635.google.com [IPv6:2607:f8b0:4864:20::635])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0F8A6B0
        for <stable@vger.kernel.org>; Mon,  2 Jan 2023 08:44:46 -0800 (PST)
Received: by mail-pl1-x635.google.com with SMTP id c2so2466702plc.5
        for <stable@vger.kernel.org>; Mon, 02 Jan 2023 08:44:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=kernel-dk.20210112.gappssmtp.com; s=20210112;
        h=subject:from:cc:to:content-language:user-agent:mime-version:date
         :message-id:from:to:cc:subject:date:message-id:reply-to;
        bh=dLOQtvbZp9ryNAzFoQcmE4t6SmVAHo1Xrpyt8BA3/mo=;
        b=4lTdamc6+4dsrJ15muZ0GU0n4QWKik78ljJ2wnffJA8f9Uyvq1W3a3ggxVQNdEeuIg
         KLyQSvOfgJAQfka7kuUJrv9o26qd0GNPVL4jzRPtDZIz7VnOdMcSxkS1y234t3jrrKVX
         8toBssQWnF/kutQChCdaSG7mmYTcckSKiCARvuN4BrkUglP2nvUHyxZARqGWoK6F3fo/
         tlCS7Sv3l0SuB6y6Ymh3zqS6ryyNa/sDQ3lQvy+FsCiLr6y+iFSAmr5137IkQuxvzdvO
         yh0gzrQBTRz6aUc1ulaw4W9+OgDg6P7zfDmBeoGctPtnb7Zoz9YaO3/4SD7oirTyAQ1v
         Bz/g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=subject:from:cc:to:content-language:user-agent:mime-version:date
         :message-id:x-gm-message-state:from:to:cc:subject:date:message-id
         :reply-to;
        bh=dLOQtvbZp9ryNAzFoQcmE4t6SmVAHo1Xrpyt8BA3/mo=;
        b=Esp4DSfcICLhOdXvYqmkiLOB0XClTDL/I35gt6MaM3N+SkxBus9+GhC6tE9sP+cjO7
         +n6VEdfzY78UuFKgqeC77CWpYWEKsj5oQCtGOk7XZSG6YQQfiAZSyfXvyGY+0zppEgnh
         R5kAI5d/42WTsA2OsVdlvlIm1ohwg33+0GKeJfqGmRdKrYw1cXAzJpEY8cO2dDw/xMTw
         ZfcNsGBaScTmHpdgPIunY62ZxDxo0TvAbmVNHjOGeP1Kgp/0aifQ52XF8nssTYVrHiwY
         F8rMaihPC+Vk/YdEROWeZZASeZrstgbA+IRNHF0jHU2jDxNfU9R0FKmoVeo5mqfqNnGD
         pJWg==
X-Gm-Message-State: AFqh2kp3iUgxEw+BsSw+cMItw9lYK9xzIQLXBHtNoUuiLbQIfcZIvwyh
        kMMZK5opBqYgAe7mp4h+4iAAfw==
X-Google-Smtp-Source: AMrXdXtbxjUMtq/bA25mfIxFQ6yuu4gYV4ukJhNsgYNwuLzbvJXKo0eBB/NUJ8MGpaeZa1GNRv8WRg==
X-Received: by 2002:a05:6a21:3288:b0:af:a896:850c with SMTP id yt8-20020a056a21328800b000afa896850cmr14578456pzb.5.1672677883391;
        Mon, 02 Jan 2023 08:44:43 -0800 (PST)
Received: from [192.168.1.136] ([198.8.77.157])
        by smtp.gmail.com with ESMTPSA id w30-20020aa79a1e000000b00574679561b4sm3907137pfj.134.2023.01.02.08.44.40
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Mon, 02 Jan 2023 08:44:41 -0800 (PST)
Content-Type: multipart/mixed; boundary="------------rm6sZf9Xaj1ai4CrnqwoExsd"
Message-ID: <5ad43b3a-c1a9-b830-c58a-163864fd07bc@kernel.dk>
Date:   Mon, 2 Jan 2023 09:44:39 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux aarch64; rv:102.0) Gecko/20100101
 Thunderbird/102.6.0
Content-Language: en-US
To:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc:     stable <stable@vger.kernel.org>
From:   Jens Axboe <axboe@kernel.dk>
Subject: 5.15-stable io_uring backport
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

This is a multi-part message in MIME format.
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Greg,

Here's the series we discussed before the break, no changes since then.
Last 3 patches are new stable backports, the rest is backporting the
5.15.85 io_uring codebase to 5.10-stable. This is done to make 5.10
maintainable wrt io_uring, and importantly, to bring back the native
io workers to 5.10-stable.

-- 
Jens Axboe

--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0063-io_uring-pass-in-EPOLL_URING_WAKE-for-eventfd-signal.patch"
Content-Disposition: attachment;
 filename*0="0063-io_uring-pass-in-EPOLL_URING_WAKE-for-eventfd-signal.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA0MDI5YzI4YjhkNjc5Mjc3OGJkYWRjNGU0MzFiZTMwMzAyZmY0YTNiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgMjMgRGVjIDIwMjIgMDc6MDQ6NDkgLTA3MDAKU3ViamVjdDogW1BBVENIIDYz
LzYzXSBpb191cmluZzogcGFzcyBpbiBFUE9MTF9VUklOR19XQUtFIGZvciBldmVudGZkCiBz
aWduYWxpbmcgYW5kIHdha2V1cHMKClsgVXBzdHJlYW0gY29tbWl0IDQ0NjQ4NTMyNzdkMGNj
ZGI5OTE0NjA4ZGQxMzMyZjBmYTJmOTg0NmYgXQoKUGFzcyBpbiBFUE9MTF9VUklOR19XQUtF
IHdoZW4gc2lnbmFsaW5nIGV2ZW50ZmQgb3IgZG9pbmcgcG9sbCByZWxhdGVkCndha3Vwcywg
c28gdGhhdCB3ZSBjYW4gY2hlY2sgZm9yIGEgY2lyY3VsYXIgZXZlbnQgZGVwZW5kZW5jeSBi
ZXR3ZWVuCmV2ZW50ZmQgYW5kIGVwb2xsLiBJZiB0aGlzIGZsYWcgaXMgc2V0IHdoZW4gb3Vy
IHdha2V1cCBoYW5kbGVycyBhcmUKY2FsbGVkLCB0aGVuIHdlIGtub3cgd2UgaGF2ZSBhIGRl
cGVuZGVuY3kgdGhhdCBuZWVkcyB0byB0ZXJtaW5hdGUKbXVsdGlzaG90IHJlcXVlc3RzLgoK
ZXZlbnRmZCBhbmQgZXBvbGwgYXJlIHRoZSBvbmx5IHN1Y2ggcG9zc2libGUgZGVwZW5kZW5j
aWVzLgoKQ2M6IHN0YWJsZUB2Z2VyLmtlcm5lbC5vcmcgIyA2LjAKU2lnbmVkLW9mZi1ieTog
SmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGlvX3VyaW5nL2lvX3VyaW5nLmMg
fCAyNyArKysrKysrKysrKysrKysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAyMCBp
bnNlcnRpb25zKCspLCA3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2lv
X3VyaW5nLmMgYi9pb191cmluZy9pb191cmluZy5jCmluZGV4IDQ3M2RiZDE4MzBhMy4uOTQ1
ZmFmMDM2YWQwIDEwMDY0NAotLS0gYS9pb191cmluZy9pb191cmluZy5jCisrKyBiL2lvX3Vy
aW5nL2lvX3VyaW5nLmMKQEAgLTE2MjYsMTMgKzE2MjYsMTUgQEAgc3RhdGljIHZvaWQgaW9f
Y3FyaW5nX2V2X3Bvc3RlZChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIAkgKiB3YWtlIGFz
IG1hbnkgd2FpdGVycyBhcyB3ZSBuZWVkIHRvLgogCSAqLwogCWlmICh3cV9oYXNfc2xlZXBl
cigmY3R4LT5jcV93YWl0KSkKLQkJd2FrZV91cF9hbGwoJmN0eC0+Y3Ffd2FpdCk7CisJCV9f
d2FrZV91cCgmY3R4LT5jcV93YWl0LCBUQVNLX05PUk1BTCwgMCwKKwkJCQlwb2xsX3RvX2tl
eShFUE9MTF9VUklOR19XQUtFIHwgRVBPTExJTikpOwogCWlmIChjdHgtPnNxX2RhdGEgJiYg
d2FpdHF1ZXVlX2FjdGl2ZSgmY3R4LT5zcV9kYXRhLT53YWl0KSkKIAkJd2FrZV91cCgmY3R4
LT5zcV9kYXRhLT53YWl0KTsKIAlpZiAoaW9fc2hvdWxkX3RyaWdnZXJfZXZmZChjdHgpKQot
CQlldmVudGZkX3NpZ25hbChjdHgtPmNxX2V2X2ZkLCAxKTsKKwkJZXZlbnRmZF9zaWduYWxf
bWFzayhjdHgtPmNxX2V2X2ZkLCAxLCBFUE9MTF9VUklOR19XQUtFKTsKIAlpZiAod2FpdHF1
ZXVlX2FjdGl2ZSgmY3R4LT5wb2xsX3dhaXQpKQotCQl3YWtlX3VwX2ludGVycnVwdGlibGUo
JmN0eC0+cG9sbF93YWl0KTsKKwkJX193YWtlX3VwKCZjdHgtPnBvbGxfd2FpdCwgVEFTS19J
TlRFUlJVUFRJQkxFLCAwLAorCQkJCXBvbGxfdG9fa2V5KEVQT0xMX1VSSU5HX1dBS0UgfCBF
UE9MTElOKSk7CiB9CiAKIHN0YXRpYyB2b2lkIGlvX2NxcmluZ19ldl9wb3N0ZWRfaW9wb2xs
KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQpAQCAtMTY0MiwxMiArMTY0NCwxNCBAQCBzdGF0
aWMgdm9pZCBpb19jcXJpbmdfZXZfcG9zdGVkX2lvcG9sbChzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCkKIAogCWlmIChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NRUE9MTCkgewogCQlp
ZiAod2FpdHF1ZXVlX2FjdGl2ZSgmY3R4LT5jcV93YWl0KSkKLQkJCXdha2VfdXBfYWxsKCZj
dHgtPmNxX3dhaXQpOworCQkJX193YWtlX3VwKCZjdHgtPmNxX3dhaXQsIFRBU0tfTk9STUFM
LCAwLAorCQkJCSAgcG9sbF90b19rZXkoRVBPTExfVVJJTkdfV0FLRSB8IEVQT0xMSU4pKTsK
IAl9CiAJaWYgKGlvX3Nob3VsZF90cmlnZ2VyX2V2ZmQoY3R4KSkKLQkJZXZlbnRmZF9zaWdu
YWwoY3R4LT5jcV9ldl9mZCwgMSk7CisJCWV2ZW50ZmRfc2lnbmFsX21hc2soY3R4LT5jcV9l
dl9mZCwgMSwgRVBPTExfVVJJTkdfV0FLRSk7CiAJaWYgKHdhaXRxdWV1ZV9hY3RpdmUoJmN0
eC0+cG9sbF93YWl0KSkKLQkJd2FrZV91cF9pbnRlcnJ1cHRpYmxlKCZjdHgtPnBvbGxfd2Fp
dCk7CisJCV9fd2FrZV91cCgmY3R4LT5wb2xsX3dhaXQsIFRBU0tfSU5URVJSVVBUSUJMRSwg
MCwKKwkJCQlwb2xsX3RvX2tleShFUE9MTF9VUklOR19XQUtFIHwgRVBPTExJTikpOwogfQog
CiAvKiBSZXR1cm5zIHRydWUgaWYgdGhlcmUgYXJlIG5vIGJhY2tsb2dnZWQgZW50cmllcyBh
ZnRlciB0aGUgZmx1c2ggKi8KQEAgLTU0NzcsOCArNTQ4MSwxNyBAQCBzdGF0aWMgaW50IGlv
X3BvbGxfd2FrZShzdHJ1Y3Qgd2FpdF9xdWV1ZV9lbnRyeSAqd2FpdCwgdW5zaWduZWQgbW9k
ZSwgaW50IHN5bmMsCiAJaWYgKG1hc2sgJiYgIShtYXNrICYgcG9sbC0+ZXZlbnRzKSkKIAkJ
cmV0dXJuIDA7CiAKLQlpZiAoaW9fcG9sbF9nZXRfb3duZXJzaGlwKHJlcSkpCisJaWYgKGlv
X3BvbGxfZ2V0X293bmVyc2hpcChyZXEpKSB7CisJCS8qCisJCSAqIElmIHdlIHRyaWdnZXIg
YSBtdWx0aXNob3QgcG9sbCBvZmYgb3VyIG93biB3YWtldXAgcGF0aCwKKwkJICogZGlzYWJs
ZSBtdWx0aXNob3QgYXMgdGhlcmUgaXMgYSBjaXJjdWxhciBkZXBlbmRlbmN5IGJldHdlZW4K
KwkJICogQ1EgcG9zdGluZyBhbmQgdHJpZ2dlcmluZyB0aGUgZXZlbnQuCisJCSAqLworCQlp
ZiAobWFzayAmIEVQT0xMX1VSSU5HX1dBS0UpCisJCQlwb2xsLT5ldmVudHMgfD0gRVBPTExP
TkVTSE9UOworCiAJCV9faW9fcG9sbF9leGVjdXRlKHJlcSwgbWFzayk7CisJfQogCXJldHVy
biAxOwogfQogCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0062-eventfd-provide-a-eventfd_signal_mask-helper.patch"
Content-Disposition: attachment;
 filename="0062-eventfd-provide-a-eventfd_signal_mask-helper.patch"
Content-Transfer-Encoding: base64

RnJvbSA1MzI3MDMxOWYxODRjMzU0OTljZjJmZmVhYzhhNzUwNzhiOTQ5MzRhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFN1biwgMjAgTm92IDIwMjIgMTA6MTM6NDQgLTA3MDAKU3ViamVjdDogW1BBVENIIDYy
LzYzXSBldmVudGZkOiBwcm92aWRlIGEgZXZlbnRmZF9zaWduYWxfbWFzaygpIGhlbHBlcgoK
WyBVcHN0cmVhbSBjb21taXQgMDNlMDJhY2RhOGUyNjdhODE4M2UxZTBlZDI4OWZmMWVmOWNk
N2VkOCBdCgpUaGlzIGlzIGlkZW50aWNhbCB0byBldmVudGZkX3NpZ25hbCgpLCBidXQgaXQg
YWxsb3dzIHRoZSBjYWxsZXIgdG8gcGFzcwppbiBhIG1hc2sgdG8gYmUgdXNlZCBmb3IgdGhl
IHBvbGwgd2FrZXVwIGtleS4gVGhlIHVzZSBjYXNlIGlzIGF2b2lkaW5nCnJlcGVhdGVkIG11
bHRpc2hvdCB0cmlnZ2VycyBpZiB3ZSBoYXZlIGEgZGVwZW5kZW5jeSBiZXR3ZWVuIGV2ZW50
ZmQgYW5kCmlvX3VyaW5nLgoKSWYgd2Ugc2V0dXAgYW4gZXZlbnRmZCBjb250ZXh0IGFuZCBy
ZWdpc3RlciB0aGF0IGFzIHRoZSBpb191cmluZyBldmVudGZkLAphbmQgYXQgdGhlIHNhbWUg
dGltZSBxdWV1ZSBhIG11bHRpc2hvdCBwb2xsIHJlcXVlc3QgZm9yIHRoZSBldmVudGZkCmNv
bnRleHQsIHRoZW4gYW55IENRRSBwb3N0ZWQgd2lsbCByZXBlYXRlZGx5IHRyaWdnZXIgdGhl
IG11bHRpc2hvdCByZXF1ZXN0CnVudGlsIGl0IHRlcm1pbmF0ZXMgd2hlbiB0aGUgQ1Egcmlu
ZyBvdmVyZmxvd3MuCgpJbiBwcmVwYXJhdGlvbiBmb3IgaW9fdXJpbmcgZGV0ZWN0aW5nIHRo
aXMgY2lyY3VsYXIgZGVwZW5kZW5jeSwgYWRkIHRoZQptZW50aW9uZWQgaGVscGVyIHNvIHRo
YXQgaW9fdXJpbmcgY2FuIHBhc3MgaW4gRVBPTExfVVJJTkcgYXMgcGFydCBvZiB0aGUKcG9s
bCB3YWtldXAga2V5LgoKQ2M6IHN0YWJsZUB2Z2VyLmtlcm5lbC5vcmcgIyA2LjAKW2F4Ym9l
OiBmb2xkIGluICFDT05GSUdfRVZFTlRGRCBmaXggZnJvbSBaaGFuZyBRaWxvbmddClNpZ25l
ZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBmcy9ldmVudGZk
LmMgICAgICAgICAgICB8IDM3ICsrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0t
LS0KIGluY2x1ZGUvbGludXgvZXZlbnRmZC5oIHwgIDcgKysrKysrKwogMiBmaWxlcyBjaGFu
Z2VkLCAyOCBpbnNlcnRpb25zKCspLCAxNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9m
cy9ldmVudGZkLmMgYi9mcy9ldmVudGZkLmMKaW5kZXggZGY0NjZlZjgxZGRkLi40YTE0Mjk1
Y2ZmZTAgMTAwNjQ0Ci0tLSBhL2ZzL2V2ZW50ZmQuYworKysgYi9mcy9ldmVudGZkLmMKQEAg
LTQ1LDIxICs0NSw3IEBAIHN0cnVjdCBldmVudGZkX2N0eCB7CiAJaW50IGlkOwogfTsKIAot
LyoqCi0gKiBldmVudGZkX3NpZ25hbCAtIEFkZHMgQG4gdG8gdGhlIGV2ZW50ZmQgY291bnRl
ci4KLSAqIEBjdHg6IFtpbl0gUG9pbnRlciB0byB0aGUgZXZlbnRmZCBjb250ZXh0LgotICog
QG46IFtpbl0gVmFsdWUgb2YgdGhlIGNvdW50ZXIgdG8gYmUgYWRkZWQgdG8gdGhlIGV2ZW50
ZmQgaW50ZXJuYWwgY291bnRlci4KLSAqICAgICAgICAgIFRoZSB2YWx1ZSBjYW5ub3QgYmUg
bmVnYXRpdmUuCi0gKgotICogVGhpcyBmdW5jdGlvbiBpcyBzdXBwb3NlZCB0byBiZSBjYWxs
ZWQgYnkgdGhlIGtlcm5lbCBpbiBwYXRocyB0aGF0IGRvIG5vdAotICogYWxsb3cgc2xlZXBp
bmcuIEluIHRoaXMgZnVuY3Rpb24gd2UgYWxsb3cgdGhlIGNvdW50ZXIgdG8gcmVhY2ggdGhl
IFVMTE9OR19NQVgKLSAqIHZhbHVlLCBhbmQgd2Ugc2lnbmFsIHRoaXMgYXMgb3ZlcmZsb3cg
Y29uZGl0aW9uIGJ5IHJldHVybmluZyBhIEVQT0xMRVJSCi0gKiB0byBwb2xsKDIpLgotICoK
LSAqIFJldHVybnMgdGhlIGFtb3VudCBieSB3aGljaCB0aGUgY291bnRlciB3YXMgaW5jcmVt
ZW50ZWQuICBUaGlzIHdpbGwgYmUgbGVzcwotICogdGhhbiBAbiBpZiB0aGUgY291bnRlciBo
YXMgb3ZlcmZsb3dlZC4KLSAqLwotX191NjQgZXZlbnRmZF9zaWduYWwoc3RydWN0IGV2ZW50
ZmRfY3R4ICpjdHgsIF9fdTY0IG4pCitfX3U2NCBldmVudGZkX3NpZ25hbF9tYXNrKHN0cnVj
dCBldmVudGZkX2N0eCAqY3R4LCBfX3U2NCBuLCB1bnNpZ25lZCBtYXNrKQogewogCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CiAKQEAgLTgwLDEyICs2NiwzMSBAQCBfX3U2NCBldmVudGZkX3Np
Z25hbChzdHJ1Y3QgZXZlbnRmZF9jdHggKmN0eCwgX191NjQgbikKIAkJbiA9IFVMTE9OR19N
QVggLSBjdHgtPmNvdW50OwogCWN0eC0+Y291bnQgKz0gbjsKIAlpZiAod2FpdHF1ZXVlX2Fj
dGl2ZSgmY3R4LT53cWgpKQotCQl3YWtlX3VwX2xvY2tlZF9wb2xsKCZjdHgtPndxaCwgRVBP
TExJTik7CisJCXdha2VfdXBfbG9ja2VkX3BvbGwoJmN0eC0+d3FoLCBFUE9MTElOIHwgbWFz
ayk7CiAJdGhpc19jcHVfZGVjKGV2ZW50ZmRfd2FrZV9jb3VudCk7CiAJc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmY3R4LT53cWgubG9jaywgZmxhZ3MpOwogCiAJcmV0dXJuIG47CiB9CisK
Ky8qKgorICogZXZlbnRmZF9zaWduYWwgLSBBZGRzIEBuIHRvIHRoZSBldmVudGZkIGNvdW50
ZXIuCisgKiBAY3R4OiBbaW5dIFBvaW50ZXIgdG8gdGhlIGV2ZW50ZmQgY29udGV4dC4KKyAq
IEBuOiBbaW5dIFZhbHVlIG9mIHRoZSBjb3VudGVyIHRvIGJlIGFkZGVkIHRvIHRoZSBldmVu
dGZkIGludGVybmFsIGNvdW50ZXIuCisgKiAgICAgICAgICBUaGUgdmFsdWUgY2Fubm90IGJl
IG5lZ2F0aXZlLgorICoKKyAqIFRoaXMgZnVuY3Rpb24gaXMgc3VwcG9zZWQgdG8gYmUgY2Fs
bGVkIGJ5IHRoZSBrZXJuZWwgaW4gcGF0aHMgdGhhdCBkbyBub3QKKyAqIGFsbG93IHNsZWVw
aW5nLiBJbiB0aGlzIGZ1bmN0aW9uIHdlIGFsbG93IHRoZSBjb3VudGVyIHRvIHJlYWNoIHRo
ZSBVTExPTkdfTUFYCisgKiB2YWx1ZSwgYW5kIHdlIHNpZ25hbCB0aGlzIGFzIG92ZXJmbG93
IGNvbmRpdGlvbiBieSByZXR1cm5pbmcgYSBFUE9MTEVSUgorICogdG8gcG9sbCgyKS4KKyAq
CisgKiBSZXR1cm5zIHRoZSBhbW91bnQgYnkgd2hpY2ggdGhlIGNvdW50ZXIgd2FzIGluY3Jl
bWVudGVkLiAgVGhpcyB3aWxsIGJlIGxlc3MKKyAqIHRoYW4gQG4gaWYgdGhlIGNvdW50ZXIg
aGFzIG92ZXJmbG93ZWQuCisgKi8KK19fdTY0IGV2ZW50ZmRfc2lnbmFsKHN0cnVjdCBldmVu
dGZkX2N0eCAqY3R4LCBfX3U2NCBuKQoreworCXJldHVybiBldmVudGZkX3NpZ25hbF9tYXNr
KGN0eCwgbiwgMCk7Cit9CiBFWFBPUlRfU1lNQk9MX0dQTChldmVudGZkX3NpZ25hbCk7CiAK
IHN0YXRpYyB2b2lkIGV2ZW50ZmRfZnJlZV9jdHgoc3RydWN0IGV2ZW50ZmRfY3R4ICpjdHgp
CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2V2ZW50ZmQuaCBiL2luY2x1ZGUvbGludXgv
ZXZlbnRmZC5oCmluZGV4IGRjNGZkOGE2NjQ0ZC4uY2UxY2Y0Mjc0MGJmIDEwMDY0NAotLS0g
YS9pbmNsdWRlL2xpbnV4L2V2ZW50ZmQuaAorKysgYi9pbmNsdWRlL2xpbnV4L2V2ZW50ZmQu
aApAQCAtMzksNiArMzksNyBAQCBzdHJ1Y3QgZmlsZSAqZXZlbnRmZF9mZ2V0KGludCBmZCk7
CiBzdHJ1Y3QgZXZlbnRmZF9jdHggKmV2ZW50ZmRfY3R4X2ZkZ2V0KGludCBmZCk7CiBzdHJ1
Y3QgZXZlbnRmZF9jdHggKmV2ZW50ZmRfY3R4X2ZpbGVnZXQoc3RydWN0IGZpbGUgKmZpbGUp
OwogX191NjQgZXZlbnRmZF9zaWduYWwoc3RydWN0IGV2ZW50ZmRfY3R4ICpjdHgsIF9fdTY0
IG4pOworX191NjQgZXZlbnRmZF9zaWduYWxfbWFzayhzdHJ1Y3QgZXZlbnRmZF9jdHggKmN0
eCwgX191NjQgbiwgdW5zaWduZWQgbWFzayk7CiBpbnQgZXZlbnRmZF9jdHhfcmVtb3ZlX3dh
aXRfcXVldWUoc3RydWN0IGV2ZW50ZmRfY3R4ICpjdHgsIHdhaXRfcXVldWVfZW50cnlfdCAq
d2FpdCwKIAkJCQkgIF9fdTY0ICpjbnQpOwogCkBAIC02Niw2ICs2NywxMiBAQCBzdGF0aWMg
aW5saW5lIGludCBldmVudGZkX3NpZ25hbChzdHJ1Y3QgZXZlbnRmZF9jdHggKmN0eCwgaW50
IG4pCiAJcmV0dXJuIC1FTk9TWVM7CiB9CiAKK3N0YXRpYyBpbmxpbmUgaW50IGV2ZW50ZmRf
c2lnbmFsX21hc2soc3RydWN0IGV2ZW50ZmRfY3R4ICpjdHgsIF9fdTY0IG4sCisJCQkJICAg
ICAgdW5zaWduZWQgbWFzaykKK3sKKwlyZXR1cm4gLUVOT1NZUzsKK30KKwogc3RhdGljIGlu
bGluZSB2b2lkIGV2ZW50ZmRfY3R4X3B1dChzdHJ1Y3QgZXZlbnRmZF9jdHggKmN0eCkKIHsK
IAotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0061-eventpoll-add-EPOLL_URING_WAKE-poll-wakeup-flag.patch"
Content-Disposition: attachment;
 filename*0="0061-eventpoll-add-EPOLL_URING_WAKE-poll-wakeup-flag.patch"
Content-Transfer-Encoding: base64

RnJvbSA1ZDBkNmMzZDcwYTc1MWFlMjE0ZTQ3MTk4OWZjNzI5OTU2YzZmY2NiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFN1biwgMjAgTm92IDIwMjIgMTA6MTA6NTMgLTA3MDAKU3ViamVjdDogW1BBVENIIDYx
LzYzXSBldmVudHBvbGw6IGFkZCBFUE9MTF9VUklOR19XQUtFIHBvbGwgd2FrZXVwIGZsYWcK
ClsgVXBzdHJlYW0gY29tbWl0IGNhZjFhZWFmZmMzYjA5NjQ5YTU2NzY5ZTU1OTMzM2FlMmM0
ZjE4MDIgXQoKV2UgY2FuIGhhdmUgZGVwZW5kZW5jaWVzIGJldHdlZW4gZXBvbGwgYW5kIGlv
X3VyaW5nLiBDb25zaWRlciBhbiBlcG9sbApjb250ZXh0LCBpZGVudGlmaWVkIGJ5IHRoZSBl
cGZkIGZpbGUgZGVzY3JpcHRvciwgYW5kIGFuIGlvX3VyaW5nIGZpbGUKZGVzY3JpcHRvciBp
ZGVudGlmaWVkIGJ5IGlvZmQuIElmIHdlIGFkZCBpb2ZkIHRvIHRoZSBlcGZkIGNvbnRleHQs
IGFuZAphcm0gYSBtdWx0aXNob3QgcG9sbCByZXF1ZXN0IGZvciBlcGZkIHdpdGggaW9mZCwg
dGhlbiB0aGUgbXVsdGlzaG90CnBvbGwgcmVxdWVzdCB3aWxsIHJlcGVhdGVkbHkgdHJpZ2dl
ciBhbmQgZ2VuZXJhdGUgZXZlbnRzIHVudGlsIHRlcm1pbmF0ZWQKYnkgQ1EgcmluZyBvdmVy
Zmxvdy4gVGhpcyBpc24ndCBhIGRlc2lyZWQgYmVoYXZpb3IuCgpBZGQgRVBPTExfVVJJTkcg
c28gdGhhdCBpb191cmluZyBjYW4gcGFzcyBpdCBpbiBhcyBwYXJ0IG9mIHRoZSBwb2xsIHdh
a2V1cAprZXksIGFuZCBpb191cmluZyBjYW4gY2hlY2sgZm9yIHRoYXQgdG8gZGV0ZWN0IGEg
cG90ZW50aWFsIHJlY3Vyc2l2ZQppbnZvY2F0aW9uLgoKQ2M6IHN0YWJsZUB2Z2VyLmtlcm5l
bC5vcmcgIyA2LjAKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRr
PgotLS0KIGZzL2V2ZW50cG9sbC5jICAgICAgICAgICAgICAgICB8IDE4ICsrKysrKysrKyst
LS0tLS0tLQogaW5jbHVkZS91YXBpL2xpbnV4L2V2ZW50cG9sbC5oIHwgIDYgKysrKysrCiAy
IGZpbGVzIGNoYW5nZWQsIDE2IGluc2VydGlvbnMoKyksIDggZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZnMvZXZlbnRwb2xsLmMgYi9mcy9ldmVudHBvbGwuYwppbmRleCAyZjFmMDUz
MTU3MDkuLjEzZDRjM2Q1MDQxMiAxMDA2NDQKLS0tIGEvZnMvZXZlbnRwb2xsLmMKKysrIGIv
ZnMvZXZlbnRwb2xsLmMKQEAgLTU0OCw3ICs1NDgsOCBAQCBzdGF0aWMgaW50IGVwX2NhbGxf
bmVzdGVkKHN0cnVjdCBuZXN0ZWRfY2FsbHMgKm5jYWxscywKICAqLwogI2lmZGVmIENPTkZJ
R19ERUJVR19MT0NLX0FMTE9DCiAKLXN0YXRpYyB2b2lkIGVwX3BvbGxfc2FmZXdha2Uoc3Ry
dWN0IGV2ZW50cG9sbCAqZXAsIHN0cnVjdCBlcGl0ZW0gKmVwaSkKK3N0YXRpYyB2b2lkIGVw
X3BvbGxfc2FmZXdha2Uoc3RydWN0IGV2ZW50cG9sbCAqZXAsIHN0cnVjdCBlcGl0ZW0gKmVw
aSwKKwkJCSAgICAgdW5zaWduZWQgcG9sbGZsYWdzKQogewogCXN0cnVjdCBldmVudHBvbGwg
KmVwX3NyYzsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwpAQCAtNTc5LDE2ICs1ODAsMTcgQEAg
c3RhdGljIHZvaWQgZXBfcG9sbF9zYWZld2FrZShzdHJ1Y3QgZXZlbnRwb2xsICplcCwgc3Ry
dWN0IGVwaXRlbSAqZXBpKQogCX0KIAlzcGluX2xvY2tfaXJxc2F2ZV9uZXN0ZWQoJmVwLT5w
b2xsX3dhaXQubG9jaywgZmxhZ3MsIG5lc3RzKTsKIAllcC0+bmVzdHMgPSBuZXN0cyArIDE7
Ci0Jd2FrZV91cF9sb2NrZWRfcG9sbCgmZXAtPnBvbGxfd2FpdCwgRVBPTExJTik7CisJd2Fr
ZV91cF9sb2NrZWRfcG9sbCgmZXAtPnBvbGxfd2FpdCwgRVBPTExJTiB8IHBvbGxmbGFncyk7
CiAJZXAtPm5lc3RzID0gMDsKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlcC0+cG9sbF93
YWl0LmxvY2ssIGZsYWdzKTsKIH0KIAogI2Vsc2UKIAotc3RhdGljIHZvaWQgZXBfcG9sbF9z
YWZld2FrZShzdHJ1Y3QgZXZlbnRwb2xsICplcCwgc3RydWN0IGVwaXRlbSAqZXBpKQorc3Rh
dGljIHZvaWQgZXBfcG9sbF9zYWZld2FrZShzdHJ1Y3QgZXZlbnRwb2xsICplcCwgc3RydWN0
IGVwaXRlbSAqZXBpLAorCQkJICAgICB1bnNpZ25lZCBwb2xsZmxhZ3MpCiB7Ci0Jd2FrZV91
cF9wb2xsKCZlcC0+cG9sbF93YWl0LCBFUE9MTElOKTsKKwl3YWtlX3VwX3BvbGwoJmVwLT5w
b2xsX3dhaXQsIEVQT0xMSU4gfCBwb2xsZmxhZ3MpOwogfQogCiAjZW5kaWYKQEAgLTgxNSw3
ICs4MTcsNyBAQCBzdGF0aWMgdm9pZCBlcF9mcmVlKHN0cnVjdCBldmVudHBvbGwgKmVwKQog
CiAJLyogV2UgbmVlZCB0byByZWxlYXNlIGFsbCB0YXNrcyB3YWl0aW5nIGZvciB0aGVzZSBm
aWxlICovCiAJaWYgKHdhaXRxdWV1ZV9hY3RpdmUoJmVwLT5wb2xsX3dhaXQpKQotCQllcF9w
b2xsX3NhZmV3YWtlKGVwLCBOVUxMKTsKKwkJZXBfcG9sbF9zYWZld2FrZShlcCwgTlVMTCwg
MCk7CiAKIAkvKgogCSAqIFdlIG5lZWQgdG8gbG9jayB0aGlzIGJlY2F1c2Ugd2UgY291bGQg
YmUgaGl0IGJ5CkBAIC0xMjg0LDcgKzEyODYsNyBAQCBzdGF0aWMgaW50IGVwX3BvbGxfY2Fs
bGJhY2sod2FpdF9xdWV1ZV9lbnRyeV90ICp3YWl0LCB1bnNpZ25lZCBtb2RlLCBpbnQgc3lu
YywgdgogCiAJLyogV2UgaGF2ZSB0byBjYWxsIHRoaXMgb3V0c2lkZSB0aGUgbG9jayAqLwog
CWlmIChwd2FrZSkKLQkJZXBfcG9sbF9zYWZld2FrZShlcCwgZXBpKTsKKwkJZXBfcG9sbF9z
YWZld2FrZShlcCwgZXBpLCBwb2xsZmxhZ3MgJiBFUE9MTF9VUklOR19XQUtFKTsKIAogCWlm
ICghKGVwaS0+ZXZlbnQuZXZlbnRzICYgRVBPTExFWENMVVNJVkUpKQogCQlld2FrZSA9IDE7
CkBAIC0xNTg5LDcgKzE1OTEsNyBAQCBzdGF0aWMgaW50IGVwX2luc2VydChzdHJ1Y3QgZXZl
bnRwb2xsICplcCwgY29uc3Qgc3RydWN0IGVwb2xsX2V2ZW50ICpldmVudCwKIAogCS8qIFdl
IGhhdmUgdG8gY2FsbCB0aGlzIG91dHNpZGUgdGhlIGxvY2sgKi8KIAlpZiAocHdha2UpCi0J
CWVwX3BvbGxfc2FmZXdha2UoZXAsIE5VTEwpOworCQllcF9wb2xsX3NhZmV3YWtlKGVwLCBO
VUxMLCAwKTsKIAogCXJldHVybiAwOwogCkBAIC0xNjkyLDcgKzE2OTQsNyBAQCBzdGF0aWMg
aW50IGVwX21vZGlmeShzdHJ1Y3QgZXZlbnRwb2xsICplcCwgc3RydWN0IGVwaXRlbSAqZXBp
LAogCiAJLyogV2UgaGF2ZSB0byBjYWxsIHRoaXMgb3V0c2lkZSB0aGUgbG9jayAqLwogCWlm
IChwd2FrZSkKLQkJZXBfcG9sbF9zYWZld2FrZShlcCwgTlVMTCk7CisJCWVwX3BvbGxfc2Fm
ZXdha2UoZXAsIE5VTEwsIDApOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9pbmNs
dWRlL3VhcGkvbGludXgvZXZlbnRwb2xsLmggYi9pbmNsdWRlL3VhcGkvbGludXgvZXZlbnRw
b2xsLmgKaW5kZXggOGEzNDMyZDBmMGRjLi5lNjg3NjU4ODQzYjEgMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvdWFwaS9saW51eC9ldmVudHBvbGwuaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgv
ZXZlbnRwb2xsLmgKQEAgLTQxLDYgKzQxLDEyIEBACiAjZGVmaW5lIEVQT0xMTVNHCShfX2Zv
cmNlIF9fcG9sbF90KTB4MDAwMDA0MDAKICNkZWZpbmUgRVBPTExSREhVUAkoX19mb3JjZSBf
X3BvbGxfdCkweDAwMDAyMDAwCiAKKy8qCisgKiBJbnRlcm5hbCBmbGFnIC0gd2FrZXVwIGdl
bmVyYXRlZCBieSBpb191cmluZywgdXNlZCB0byBkZXRlY3QgcmVjdXJzaW9uIGJhY2sKKyAq
IGludG8gdGhlIGlvX3VyaW5nIHBvbGwgaGFuZGxlci4KKyAqLworI2RlZmluZSBFUE9MTF9V
UklOR19XQUtFCSgoX19mb3JjZSBfX3BvbGxfdCkoMVUgPDwgMjcpKQorCiAvKiBTZXQgZXhj
bHVzaXZlIHdha2V1cCBtb2RlIGZvciB0aGUgdGFyZ2V0IGZpbGUgZGVzY3JpcHRvciAqLwog
I2RlZmluZSBFUE9MTEVYQ0xVU0lWRQkoKF9fZm9yY2UgX19wb2xsX3QpKDFVIDw8IDI4KSkK
IAotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0060-Revert-proc-don-t-allow-async-path-resolution-of-pro.patch"
Content-Disposition: attachment;
 filename*0="0060-Revert-proc-don-t-allow-async-path-resolution-of-pro.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSAyZDdiN2U2MzIwNTA0NzYzMDFlNGZkZmFmN2E1NTc1MWM5N2U2YTgzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMTUgRmViIDIwMjEgMTM6NDI6NDIgLTA3MDAKU3ViamVjdDogW1BBVENIIDYw
LzYzXSBSZXZlcnQgInByb2M6IGRvbid0IGFsbG93IGFzeW5jIHBhdGggcmVzb2x1dGlvbiBv
ZgogL3Byb2Mvc2VsZiBjb21wb25lbnRzIgoKWyBVcHN0cmVhbSBjb21taXQgOWU4ZDllODI5
YzIxNDJjZjFkNzc1NmU5ZWQyZTBiNGM3NTY5ZDg0YyBdCgpUaGlzIHJldmVydHMgY29tbWl0
IDhkNGMzZTc2ZTNiZTExYTY0ZGY5NWRkZWU1MmU5OTA5MmQ0MmZjMTkuCgpObyBsb25nZXIg
bmVlZGVkLCBhcyB0aGUgaW8td3Egd29ya2VyIHRocmVhZHMgaGF2ZSB0aGUgcmlnaHQgaWRl
bnRpdHkuCgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0t
LQogZnMvcHJvYy9zZWxmLmMgfCA3IC0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA3IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL3Byb2Mvc2VsZi5jIGIvZnMvcHJvYy9zZWxmLmMK
aW5kZXggY2M3MWNlMzQ2NmRjLi43MmNkNjliY2FmNGEgMTAwNjQ0Ci0tLSBhL2ZzL3Byb2Mv
c2VsZi5jCisrKyBiL2ZzL3Byb2Mvc2VsZi5jCkBAIC0xNiwxMyArMTYsNiBAQCBzdGF0aWMg
Y29uc3QgY2hhciAqcHJvY19zZWxmX2dldF9saW5rKHN0cnVjdCBkZW50cnkgKmRlbnRyeSwK
IAlwaWRfdCB0Z2lkID0gdGFza190Z2lkX25yX25zKGN1cnJlbnQsIG5zKTsKIAljaGFyICpu
YW1lOwogCi0JLyoKLQkgKiBOb3QgY3VycmVudGx5IHN1cHBvcnRlZC4gT25jZSB3ZSBjYW4g
aW5oZXJpdCBhbGwgb2Ygc3RydWN0IHBpZCwKLQkgKiB3ZSBjYW4gYWxsb3cgdGhpcy4KLQkg
Ki8KLQlpZiAoY3VycmVudC0+ZmxhZ3MgJiBQRl9LVEhSRUFEKQotCQlyZXR1cm4gRVJSX1BU
UigtRU9QTk9UU1VQUCk7Ci0KIAlpZiAoIXRnaWQpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9F
TlQpOwogCS8qIG1heCBsZW5ndGggb2YgdW5zaWduZWQgaW50IGluIGRlY2ltYWwgKyBOVUxM
IHRlcm0gKi8KLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0059-Revert-proc-don-t-allow-async-path-resolution-of-pro.patch"
Content-Disposition: attachment;
 filename*0="0059-Revert-proc-don-t-allow-async-path-resolution-of-pro.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSAzNjFiMmE1MjkzYjk5OGY4OTAzYTVkMzQzYWQ1Y2Y2ODNhMjk3MGZhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMTUgRmViIDIwMjEgMTM6NDI6MTggLTA3MDAKU3ViamVjdDogW1BBVENIIDU5
LzYzXSBSZXZlcnQgInByb2M6IGRvbid0IGFsbG93IGFzeW5jIHBhdGggcmVzb2x1dGlvbiBv
ZgogL3Byb2MvdGhyZWFkLXNlbGYgY29tcG9uZW50cyIKClsgVXBzdHJlYW0gY29tbWl0IDI1
ODc4OTBiNWUyODkyZGZlY2FhNWU1MTI2YmRhYzgwNzZhNGU2ZjcgXQoKVGhpcyByZXZlcnRz
IGNvbW1pdCAwZDQzNzBjZmUzNmI3ZjE3MTkxMjNiNjIxYTRlYzRkOWM3YTI1Zjg5LgoKTm8g
bG9uZ2VyIG5lZWRlZCwgYXMgdGhlIGlvLXdxIHdvcmtlciB0aHJlYWRzIGhhdmUgdGhlIHJp
Z2h0IGlkZW50aXR5LgoKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVs
LmRrPgotLS0KIGZzL3Byb2Mvc2VsZi5jICAgICAgICB8IDIgKy0KIGZzL3Byb2MvdGhyZWFk
X3NlbGYuYyB8IDcgLS0tLS0tLQogMiBmaWxlcyBjaGFuZ2VkLCAxIGluc2VydGlvbigrKSwg
OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9wcm9jL3NlbGYuYyBiL2ZzL3Byb2Mv
c2VsZi5jCmluZGV4IGE0MDEyMTU0ZTEwOS4uY2M3MWNlMzQ2NmRjIDEwMDY0NAotLS0gYS9m
cy9wcm9jL3NlbGYuYworKysgYi9mcy9wcm9jL3NlbGYuYwpAQCAtMjAsNyArMjAsNyBAQCBz
dGF0aWMgY29uc3QgY2hhciAqcHJvY19zZWxmX2dldF9saW5rKHN0cnVjdCBkZW50cnkgKmRl
bnRyeSwKIAkgKiBOb3QgY3VycmVudGx5IHN1cHBvcnRlZC4gT25jZSB3ZSBjYW4gaW5oZXJp
dCBhbGwgb2Ygc3RydWN0IHBpZCwKIAkgKiB3ZSBjYW4gYWxsb3cgdGhpcy4KIAkgKi8KLQlp
ZiAoY3VycmVudC0+ZmxhZ3MgJiBQRl9JT19XT1JLRVIpCisJaWYgKGN1cnJlbnQtPmZsYWdz
ICYgUEZfS1RIUkVBRCkKIAkJcmV0dXJuIEVSUl9QVFIoLUVPUE5PVFNVUFApOwogCiAJaWYg
KCF0Z2lkKQpkaWZmIC0tZ2l0IGEvZnMvcHJvYy90aHJlYWRfc2VsZi5jIGIvZnMvcHJvYy90
aHJlYWRfc2VsZi5jCmluZGV4IGQ1NjY4MWQ4NmQyOC4uYTU1MzI3M2ZiZDQxIDEwMDY0NAot
LS0gYS9mcy9wcm9jL3RocmVhZF9zZWxmLmMKKysrIGIvZnMvcHJvYy90aHJlYWRfc2VsZi5j
CkBAIC0xNywxMyArMTcsNiBAQCBzdGF0aWMgY29uc3QgY2hhciAqcHJvY190aHJlYWRfc2Vs
Zl9nZXRfbGluayhzdHJ1Y3QgZGVudHJ5ICpkZW50cnksCiAJcGlkX3QgcGlkID0gdGFza19w
aWRfbnJfbnMoY3VycmVudCwgbnMpOwogCWNoYXIgKm5hbWU7CiAKLQkvKgotCSAqIE5vdCBj
dXJyZW50bHkgc3VwcG9ydGVkLiBPbmNlIHdlIGNhbiBpbmhlcml0IGFsbCBvZiBzdHJ1Y3Qg
cGlkLAotCSAqIHdlIGNhbiBhbGxvdyB0aGlzLgotCSAqLwotCWlmIChjdXJyZW50LT5mbGFn
cyAmIFBGX0lPX1dPUktFUikKLQkJcmV0dXJuIEVSUl9QVFIoLUVPUE5PVFNVUFApOwotCiAJ
aWYgKCFwaWQpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9FTlQpOwogCW5hbWUgPSBrbWFsbG9j
KDEwICsgNiArIDEwICsgMSwgZGVudHJ5ID8gR0ZQX0tFUk5FTCA6IEdGUF9BVE9NSUMpOwot
LSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0058-net-remove-cmsg-restriction-from-io_uring-based-send.patch"
Content-Disposition: attachment;
 filename*0="0058-net-remove-cmsg-restriction-from-io_uring-based-send.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA4OWEyOTAwNWY1OTVkOTI5ZDhkNzg0ZjM0MjJmYjZhMzUwZjRiMDVmIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTcgRmViIDIwMjEgMTA6MTQ6MjEgLTA3MDAKU3ViamVjdDogW1BBVENIIDU4
LzYzXSBuZXQ6IHJlbW92ZSBjbXNnIHJlc3RyaWN0aW9uIGZyb20gaW9fdXJpbmcgYmFzZWQK
IHNlbmQvcmVjdm1zZyBjYWxscwoKWyBVcHN0cmVhbSBjb21taXQgZTU0OTM3OTYzZmEyNDk1
OTU4MjQ0MzlkYzgzOWM5NDgxODhkZWE4MyBdCgpObyBuZWVkIHRvIHJlc3RyaWN0IHRoZXNl
IGFueW1vcmUsIGFzIHRoZSB3b3JrZXIgdGhyZWFkcyBhcmUgZGlyZWN0CmNsb25lcyBvZiB0
aGUgb3JpZ2luYWwgdGFzay4gSGVuY2Ugd2Uga25vdyBmb3IgYSBmYWN0IHRoYXQgd2UgY2Fu
CnN1cHBvcnQgYW55dGhpbmcgdGhhdCB0aGUgcmVndWxhciB0YXNrIGNhbi4KClNpbmNlIHRo
ZSBvbmx5IHVzZXIgb2YgcHJvdG9fb3BzLT5mbGFncyB3YXMgdG8gZmxhZyBQUk9UT19DTVNH
X0RBVEFfT05MWSwKa2lsbCB0aGUgbWVtYmVyIGFuZCB0aGUgZmxhZyBkZWZpbml0aW9uIHRv
by4KClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBp
bmNsdWRlL2xpbnV4L25ldC5oIHwgIDMgLS0tCiBuZXQvaXB2NC9hZl9pbmV0LmMgIHwgIDEg
LQogbmV0L2lwdjYvYWZfaW5ldDYuYyB8ICAxIC0KIG5ldC9zb2NrZXQuYyAgICAgICAgfCAx
MCAtLS0tLS0tLS0tCiA0IGZpbGVzIGNoYW5nZWQsIDE1IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2luY2x1ZGUvbGludXgvbmV0LmggYi9pbmNsdWRlL2xpbnV4L25ldC5oCmluZGV4
IDBkY2Q1MWZlZWYwMi4uYWU3MTNjODUxMzQyIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4
L25ldC5oCisrKyBiL2luY2x1ZGUvbGludXgvbmV0LmgKQEAgLTQyLDggKzQyLDYgQEAgc3Ry
dWN0IG5ldDsKICNkZWZpbmUgU09DS19QQVNTQ1JFRAkJMwogI2RlZmluZSBTT0NLX1BBU1NT
RUMJCTQKIAotI2RlZmluZSBQUk9UT19DTVNHX0RBVEFfT05MWQkweDAwMDEKLQogI2lmbmRl
ZiBBUkNIX0hBU19TT0NLRVRfVFlQRVMKIC8qKgogICogZW51bSBzb2NrX3R5cGUgLSBTb2Nr
ZXQgdHlwZXMKQEAgLTEzOCw3ICsxMzYsNiBAQCB0eXBlZGVmIGludCAoKnNrX3JlYWRfYWN0
b3JfdCkocmVhZF9kZXNjcmlwdG9yX3QgKiwgc3RydWN0IHNrX2J1ZmYgKiwKIAogc3RydWN0
IHByb3RvX29wcyB7CiAJaW50CQlmYW1pbHk7Ci0JdW5zaWduZWQgaW50CWZsYWdzOwogCXN0
cnVjdCBtb2R1bGUJKm93bmVyOwogCWludAkJKCpyZWxlYXNlKSAgIChzdHJ1Y3Qgc29ja2V0
ICpzb2NrKTsKIAlpbnQJCSgqYmluZCkJICAgICAoc3RydWN0IHNvY2tldCAqc29jaywKZGlm
ZiAtLWdpdCBhL25ldC9pcHY0L2FmX2luZXQuYyBiL25ldC9pcHY0L2FmX2luZXQuYwppbmRl
eCA0ODIyM2MyNjQ5OTEuLjhkYWIwZDMxMWFiYSAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvYWZf
aW5ldC5jCisrKyBiL25ldC9pcHY0L2FmX2luZXQuYwpAQCAtMTAxNyw3ICsxMDE3LDYgQEAg
c3RhdGljIGludCBpbmV0X2NvbXBhdF9pb2N0bChzdHJ1Y3Qgc29ja2V0ICpzb2NrLCB1bnNp
Z25lZCBpbnQgY21kLCB1bnNpZ25lZCBsb24KIAogY29uc3Qgc3RydWN0IHByb3RvX29wcyBp
bmV0X3N0cmVhbV9vcHMgPSB7CiAJLmZhbWlseQkJICAgPSBQRl9JTkVULAotCS5mbGFncwkJ
ICAgPSBQUk9UT19DTVNHX0RBVEFfT05MWSwKIAkub3duZXIJCSAgID0gVEhJU19NT0RVTEUs
CiAJLnJlbGVhc2UJICAgPSBpbmV0X3JlbGVhc2UsCiAJLmJpbmQJCSAgID0gaW5ldF9iaW5k
LApkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvYWZfaW5ldDYuYyBiL25ldC9pcHY2L2FmX2luZXQ2
LmMKaW5kZXggZDMwYzlkOTQ5YzFiLi40ZGY5ZGM5Mzc1YzggMTAwNjQ0Ci0tLSBhL25ldC9p
cHY2L2FmX2luZXQ2LmMKKysrIGIvbmV0L2lwdjYvYWZfaW5ldDYuYwpAQCAtNjYxLDcgKzY2
MSw2IEBAIGludCBpbmV0Nl9yZWN2bXNnKHN0cnVjdCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBt
c2doZHIgKm1zZywgc2l6ZV90IHNpemUsCiAKIGNvbnN0IHN0cnVjdCBwcm90b19vcHMgaW5l
dDZfc3RyZWFtX29wcyA9IHsKIAkuZmFtaWx5CQkgICA9IFBGX0lORVQ2LAotCS5mbGFncwkJ
ICAgPSBQUk9UT19DTVNHX0RBVEFfT05MWSwKIAkub3duZXIJCSAgID0gVEhJU19NT0RVTEUs
CiAJLnJlbGVhc2UJICAgPSBpbmV0Nl9yZWxlYXNlLAogCS5iaW5kCQkgICA9IGluZXQ2X2Jp
bmQsCmRpZmYgLS1naXQgYS9uZXQvc29ja2V0LmMgYi9uZXQvc29ja2V0LmMKaW5kZXggNTZj
MjE4ZGM4MGNlLi44NjU3MTEyYTY4N2EgMTAwNjQ0Ci0tLSBhL25ldC9zb2NrZXQuYworKysg
Yi9uZXQvc29ja2V0LmMKQEAgLTI0MTksMTAgKzI0MTksNiBAQCBzdGF0aWMgaW50IF9fX3N5
c19zZW5kbXNnKHN0cnVjdCBzb2NrZXQgKnNvY2ssIHN0cnVjdCB1c2VyX21zZ2hkciBfX3Vz
ZXIgKm1zZywKIGxvbmcgX19zeXNfc2VuZG1zZ19zb2NrKHN0cnVjdCBzb2NrZXQgKnNvY2ss
IHN0cnVjdCBtc2doZHIgKm1zZywKIAkJCXVuc2lnbmVkIGludCBmbGFncykKIHsKLQkvKiBk
aXNhbGxvdyBhbmNpbGxhcnkgZGF0YSByZXF1ZXN0cyBmcm9tIHRoaXMgcGF0aCAqLwotCWlm
IChtc2ctPm1zZ19jb250cm9sIHx8IG1zZy0+bXNnX2NvbnRyb2xsZW4pCi0JCXJldHVybiAt
RUlOVkFMOwotCiAJcmV0dXJuIF9fX19zeXNfc2VuZG1zZyhzb2NrLCBtc2csIGZsYWdzLCBO
VUxMLCAwKTsKIH0KIApAQCAtMjYzMSwxMiArMjYyNyw2IEBAIGxvbmcgX19zeXNfcmVjdm1z
Z19zb2NrKHN0cnVjdCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBtc2doZHIgKm1zZywKIAkJCXN0
cnVjdCB1c2VyX21zZ2hkciBfX3VzZXIgKnVtc2csCiAJCQlzdHJ1Y3Qgc29ja2FkZHIgX191
c2VyICp1YWRkciwgdW5zaWduZWQgaW50IGZsYWdzKQogewotCWlmIChtc2ctPm1zZ19jb250
cm9sIHx8IG1zZy0+bXNnX2NvbnRyb2xsZW4pIHsKLQkJLyogZGlzYWxsb3cgYW5jaWxsYXJ5
IGRhdGEgcmVxcyB1bmxlc3MgY21zZyBpcyBwbGFpbiBkYXRhICovCi0JCWlmICghKHNvY2st
Pm9wcy0+ZmxhZ3MgJiBQUk9UT19DTVNHX0RBVEFfT05MWSkpCi0JCQlyZXR1cm4gLUVJTlZB
TDsKLQl9Ci0KIAlyZXR1cm4gX19fX3N5c19yZWN2bXNnKHNvY2ssIG1zZywgdW1zZywgdWFk
ZHIsIGZsYWdzLCAwKTsKIH0KIAotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0057-task_work-unconditionally-run-task_work-from-get_sig.patch"
Content-Disposition: attachment;
 filename*0="0057-task_work-unconditionally-run-task_work-from-get_sig.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSAwZjMxNWZkNDE0M2MxNTkxYTdmOTAyZmEwOGI3MWI4Mzc2NGY0ZmEwIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgNSBKYW4gMjAyMSAxMTozMjo0MyAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggNTcv
NjNdIHRhc2tfd29yazogdW5jb25kaXRpb25hbGx5IHJ1biB0YXNrX3dvcmsgZnJvbQogZ2V0
X3NpZ25hbCgpCgpbIFVwc3RyZWFtIGNvbW1pdCAzNWQwYjM4OWYzYjIzNDM5YWQxNWI2MTBk
NmU0M2ZjNzJmYzc1Nzc5IF0KClNvbmcgcmVwb3J0ZWQgYSBib290IHJlZ3Jlc3Npb24gaW4g
YSBrdm0gaW1hZ2Ugd2l0aCA1LjExLXJjLCBhbmQgYmlzZWN0ZWQKaXQgZG93biB0byB0aGUg
YmVsb3cgcGF0Y2guIERlYnVnZ2luZyB0aGlzIGlzc3VlLCB0dXJucyBvdXQgdGhhdCB0aGUg
Ym9vdApzdGFsbGVkIHdoZW4gYSB0YXNrIGlzIHdhaXRpbmcgb24gYSBwaXBlIGJlaW5nIHJl
bGVhc2VkLiBBcyB3ZSBubyBsb25nZXIKcnVuIHRhc2tfd29yayBmcm9tIGdldF9zaWduYWwo
KSB1bmxlc3MgaXQncyBxdWV1ZWQgd2l0aCBUV0FfU0lHTkFMLCB0aGUKdGFzayBnb2VzIGlk
bGUgd2l0aG91dCBydW5uaW5nIHRoZSB0YXNrX3dvcmsuIFRoaXMgcHJldmVudHMgLT5yZWxl
YXNlKCkKZnJvbSBiZWluZyBjYWxsZWQgb24gdGhlIHBpcGUsIHdoaWNoIGFub3RoZXIgYm9v
dCB0YXNrIGlzIHdhaXRpbmcgb24uCgpGb3Igbm93LCByZS1pbnN0YXRlIHRoZSB1bmNvbmRp
dGlvbmFsIHRhc2tfd29yayBydW4gZnJvbSBnZXRfc2lnbmFsKCkuCkZvciA1LjEyLCB3ZSds
bCBjb2xsYXBzZSBUV0FfUkVTVU1FIGFuZCBUV0FfU0lHTkFMLCBhcyBpdCBubyBsb25nZXIK
bWFrZXMgc2Vuc2UgdG8gaGF2ZSBhIGRpc3RpbmN0aW9uIGJldHdlZW4gdGhlIHR3by4gVGhp
cyB3aWxsIHR1cm4KdGFza193b3JrIG5vdGlmaWNhdGlvbiBpbnRvIGEgc2ltcGxlIGJvb2xl
YW4sIHdoZXRoZXIgdG8gbm90aWZ5IG9yIG5vdC4KCkZpeGVzOiA5OGI4OWI2NDlmY2UgKCJz
aWduYWw6IGtpbGwgSk9CQ1RMX1RBU0tfV09SSyIpClJlcG9ydGVkLWJ5OiBTb25nIExpdSA8
c29uZ2xpdWJyYXZpbmdAZmIuY29tPgpUZXN0ZWQtYnk6IEpvaG4gU3R1bHR6IDxqb2huLnN0
dWx0ekBsaW5hcm8ub3JnPgpUZXN0ZWQtYnk6IERvdWdsYXMgQW5kZXJzb24gPGRpYW5kZXJz
QGNocm9taXVtLm9yZz4KVGVzdGVkLWJ5OiBTZWRhdCBEaWxlayA8c2VkYXQuZGlsZWtAZ21h
aWwuY29tPiAjIExMVk0vQ2xhbmcgdmVyc2lvbiAxMS4wLjEKU2lnbmVkLW9mZi1ieTogSmVu
cyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGtlcm5lbC9zaWduYWwuYyB8IDMgKysr
CiAxIGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEva2VybmVs
L3NpZ25hbC5jIGIva2VybmVsL3NpZ25hbC5jCmluZGV4IGY1MjhhOTFkNjczNC4uZTQ4N2M0
NjYwOTIxIDEwMDY0NAotLS0gYS9rZXJuZWwvc2lnbmFsLmMKKysrIGIva2VybmVsL3NpZ25h
bC5jCkBAIC0yNTIwLDYgKzI1MjAsOSBAQCBib29sIGdldF9zaWduYWwoc3RydWN0IGtzaWdu
YWwgKmtzaWcpCiAJc3RydWN0IHNpZ25hbF9zdHJ1Y3QgKnNpZ25hbCA9IGN1cnJlbnQtPnNp
Z25hbDsKIAlpbnQgc2lnbnI7CiAKKwlpZiAodW5saWtlbHkoY3VycmVudC0+dGFza193b3Jr
cykpCisJCXRhc2tfd29ya19ydW4oKTsKKwogCS8qCiAJICogRm9yIG5vbi1nZW5lcmljIGFy
Y2hpdGVjdHVyZXMsIGNoZWNrIGZvciBUSUZfTk9USUZZX1NJR05BTCBzbwogCSAqIHRoYXQg
dGhlIGFyY2ggaGFuZGxlcnMgZG9uJ3QgYWxsIGhhdmUgdG8gZG8gaXQuIElmIHdlIGdldCBo
ZXJlCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0056-signal-kill-JOBCTL_TASK_WORK.patch"
Content-Disposition: attachment;
 filename="0056-signal-kill-JOBCTL_TASK_WORK.patch"
Content-Transfer-Encoding: base64

RnJvbSA0NTBmYjA4NDU4MDRlNDI0NWI5MGViMTU1ZDdhYzM0Y2RhMTE0MjlmIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNjowMzowMSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggNTYv
NjNdIHNpZ25hbDoga2lsbCBKT0JDVExfVEFTS19XT1JLCgpbIFVwc3RyZWFtIGNvbW1pdCA5
OGI4OWI2NDlmY2UzOWRhY2I5ZGMwMzZkNmQwZmRiOGNhZmY3M2Y3IF0KCkl0J3Mgbm8gbG9u
Z2VyIHVzZWQsIGdldCByaWQgb2YgaXQuCgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxh
eGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9zY2hlZC9qb2JjdGwuaCB8ICA0
ICstLS0KIGtlcm5lbC9zaWduYWwuYyAgICAgICAgICAgICAgfCAyMCAtLS0tLS0tLS0tLS0t
LS0tLS0tLQogMiBmaWxlcyBjaGFuZ2VkLCAxIGluc2VydGlvbigrKSwgMjMgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9zY2hlZC9qb2JjdGwuaCBiL2luY2x1
ZGUvbGludXgvc2NoZWQvam9iY3RsLmgKaW5kZXggZDJiNDIwNGJhNGQzLi5mYTA2N2RlOWYx
YTkgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvc2NoZWQvam9iY3RsLmgKKysrIGIvaW5j
bHVkZS9saW51eC9zY2hlZC9qb2JjdGwuaApAQCAtMTksNyArMTksNiBAQCBzdHJ1Y3QgdGFz
a19zdHJ1Y3Q7CiAjZGVmaW5lIEpPQkNUTF9UUkFQUElOR19CSVQJMjEJLyogc3dpdGNoaW5n
IHRvIFRSQUNFRCAqLwogI2RlZmluZSBKT0JDVExfTElTVEVOSU5HX0JJVAkyMgkvKiBwdHJh
Y2VyIGlzIGxpc3RlbmluZyBmb3IgZXZlbnRzICovCiAjZGVmaW5lIEpPQkNUTF9UUkFQX0ZS
RUVaRV9CSVQJMjMJLyogdHJhcCBmb3IgY2dyb3VwIGZyZWV6ZXIgKi8KLSNkZWZpbmUgSk9C
Q1RMX1RBU0tfV09SS19CSVQJMjQJLyogc2V0IGJ5IFRXQV9TSUdOQUwgKi8KIAogI2RlZmlu
ZSBKT0JDVExfU1RPUF9ERVFVRVVFRAkoMVVMIDw8IEpPQkNUTF9TVE9QX0RFUVVFVUVEX0JJ
VCkKICNkZWZpbmUgSk9CQ1RMX1NUT1BfUEVORElORwkoMVVMIDw8IEpPQkNUTF9TVE9QX1BF
TkRJTkdfQklUKQpAQCAtMjksMTAgKzI4LDkgQEAgc3RydWN0IHRhc2tfc3RydWN0OwogI2Rl
ZmluZSBKT0JDVExfVFJBUFBJTkcJCSgxVUwgPDwgSk9CQ1RMX1RSQVBQSU5HX0JJVCkKICNk
ZWZpbmUgSk9CQ1RMX0xJU1RFTklORwkoMVVMIDw8IEpPQkNUTF9MSVNURU5JTkdfQklUKQog
I2RlZmluZSBKT0JDVExfVFJBUF9GUkVFWkUJKDFVTCA8PCBKT0JDVExfVFJBUF9GUkVFWkVf
QklUKQotI2RlZmluZSBKT0JDVExfVEFTS19XT1JLCSgxVUwgPDwgSk9CQ1RMX1RBU0tfV09S
S19CSVQpCiAKICNkZWZpbmUgSk9CQ1RMX1RSQVBfTUFTSwkoSk9CQ1RMX1RSQVBfU1RPUCB8
IEpPQkNUTF9UUkFQX05PVElGWSkKLSNkZWZpbmUgSk9CQ1RMX1BFTkRJTkdfTUFTSwkoSk9C
Q1RMX1NUT1BfUEVORElORyB8IEpPQkNUTF9UUkFQX01BU0sgfCBKT0JDVExfVEFTS19XT1JL
KQorI2RlZmluZSBKT0JDVExfUEVORElOR19NQVNLCShKT0JDVExfU1RPUF9QRU5ESU5HIHwg
Sk9CQ1RMX1RSQVBfTUFTSykKIAogZXh0ZXJuIGJvb2wgdGFza19zZXRfam9iY3RsX3BlbmRp
bmcoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrLCB1bnNpZ25lZCBsb25nIG1hc2spOwogZXh0
ZXJuIHZvaWQgdGFza19jbGVhcl9qb2JjdGxfdHJhcHBpbmcoc3RydWN0IHRhc2tfc3RydWN0
ICp0YXNrKTsKZGlmZiAtLWdpdCBhL2tlcm5lbC9zaWduYWwuYyBiL2tlcm5lbC9zaWduYWwu
YwppbmRleCBmYjU0NzM3MjRmNWQuLmY1MjhhOTFkNjczNCAxMDA2NDQKLS0tIGEva2VybmVs
L3NpZ25hbC5jCisrKyBiL2tlcm5lbC9zaWduYWwuYwpAQCAtMjU0NCwyNiArMjU0NCw2IEBA
IGJvb2wgZ2V0X3NpZ25hbChzdHJ1Y3Qga3NpZ25hbCAqa3NpZykKIAogcmVsb2NrOgogCXNw
aW5fbG9ja19pcnEoJnNpZ2hhbmQtPnNpZ2xvY2spOwotCS8qCi0JICogTWFrZSBzdXJlIHdl
IGNhbiBzYWZlbHkgcmVhZCAtPmpvYmN0bCgpIGluIHRhc2tfd29yayBhZGQuIEFzIE9sZWcK
LQkgKiBzdGF0ZXM6Ci0JICoKLQkgKiBJdCBwYWlycyB3aXRoIG1iIChpbXBsaWVkIGJ5IGNt
cHhjaGcpIGJlZm9yZSBSRUFEX09OQ0UuIFNvIHdlCi0JICogcm91Z2hseSBoYXZlCi0JICoK
LQkgKgl0YXNrX3dvcmtfYWRkOgkJCQlnZXRfc2lnbmFsOgotCSAqCVNUT1JFKHRhc2stPnRh
c2tfd29ya3MsIG5ld193b3JrKTsJU1RPUkUodGFzay0+am9iY3RsKTsKLQkgKgltYigpOwkJ
CQkJbWIoKTsKLQkgKglMT0FEKHRhc2stPmpvYmN0bCk7CQkJTE9BRCh0YXNrLT50YXNrX3dv
cmtzKTsKLQkgKgotCSAqIGFuZCB3ZSBjYW4gcmVseSBvbiBTVE9SRS1NQi1MT0FEIFsgaW4g
dGFza193b3JrX2FkZF0uCi0JICovCi0Jc21wX3N0b3JlX21iKGN1cnJlbnQtPmpvYmN0bCwg
Y3VycmVudC0+am9iY3RsICYgfkpPQkNUTF9UQVNLX1dPUkspOwotCWlmICh1bmxpa2VseShj
dXJyZW50LT50YXNrX3dvcmtzKSkgewotCQlzcGluX3VubG9ja19pcnEoJnNpZ2hhbmQtPnNp
Z2xvY2spOwotCQl0YXNrX3dvcmtfcnVuKCk7Ci0JCWdvdG8gcmVsb2NrOwotCX0KIAogCS8q
CiAJICogRXZlcnkgc3RvcHBlZCB0aHJlYWQgZ29lcyBoZXJlIGFmdGVyIHdha2V1cC4gQ2hl
Y2sgdG8gc2VlIGlmCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0055-io_uring-import-5.15-stable-io_uring.patch"
Content-Disposition: attachment;
 filename="0055-io_uring-import-5.15-stable-io_uring.patch"
Content-Transfer-Encoding: base64

RnJvbSBhYjUxMTI3Y2FkNzlmZGM1ZmY5NzJlMDRhY2IyMjg3YzA3OTllZmM0IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMjIgRGVjIDIwMjIgMTQ6MzA6MTEgLTA3MDAKU3ViamVjdDogW1BBVENIIDU1
LzYzXSBpb191cmluZzogaW1wb3J0IDUuMTUtc3RhYmxlIGlvX3VyaW5nCgpObyB1cHN0cmVh
bSBjb21taXQgZXhpc3RzLgoKVGhpcyBpbXBvcnRzIHRoZSBpb191cmluZyBjb2RlYmFzZSBm
cm9tIDUuMTUuODUsIHdob2xlc2FsZS4gQ2hhbmdlcwpmcm9tIHRoYXQgY29kZSBiYXNlOgoK
LSBEcm9wIElPQ0JfQUxMT0NfQ0FDSEUsIHdlIGRvbid0IGhhdmUgdGhhdCBpbiA1LjEwLgot
IERyb3AgTUtESVJBVC9TWU1MSU5LQVQvTElOS0FULiBXb3VsZCByZXF1aXJlIGZ1cnRoZXIg
VkZTIGJhY2twb3J0cywKICBhbmQgd2UgZG9uJ3Qgc3VwcG9ydCB0aGVzZSBpbiA1LjEwIHRv
IGJlZ2luIHdpdGguCi0gc29ja19mcm9tX2ZpbGUoKSBvbGQgc3R5bGUgY2FsbGluZyBjb252
ZW50aW9uLgotIFVzZSBjb21wYXRfZ2V0X2JpdG1hcCgpIG9ubHkgZm9yIENPTkZJR19DT01Q
QVQ9eQoKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0K
IE1ha2VmaWxlICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAyICstCiBmcy9NYWtlZmls
ZSAgICAgICAgICAgICAgICAgICAgIHwgICAgMiAtCiBmcy9pby13cS5jICAgICAgICAgICAg
ICAgICAgICAgIHwgMTI0MiAtLS0tLQogaW5jbHVkZS9saW51eC9pb191cmluZy5oICAgICAg
ICB8ICAgNDYgKy0KIGluY2x1ZGUvbGludXgvc2NoZWQuaCAgICAgICAgICAgfCAgICAzICsK
IGluY2x1ZGUvbGludXgvc3lzY2FsbHMuaCAgICAgICAgfCAgICAyICstCiBpbmNsdWRlL3Ry
YWNlL2V2ZW50cy9pb191cmluZy5oIHwgIDEyMSArLQogaW5jbHVkZS91YXBpL2xpbnV4L2lv
X3VyaW5nLmggICB8ICAxMTUgKy0KIGlvX3VyaW5nL01ha2VmaWxlICAgICAgICAgICAgICAg
fCAgICA2ICsKIGlvX3VyaW5nL2lvLXdxLmMgICAgICAgICAgICAgICAgfCAxMzk4ICsrKysr
CiB7ZnMgPT4gaW9fdXJpbmd9L2lvLXdxLmggICAgICAgIHwgICA0NyArLQoge2ZzID0+IGlv
X3VyaW5nfS9pb191cmluZy5jICAgICB8IDkyMDYgKysrKysrKysrKysrKysrKystLS0tLS0t
LS0tLS0tLQoga2VybmVsL2V4aXQuYyAgICAgICAgICAgICAgICAgICB8ICAgIDIgKy0KIGtl
cm5lbC9mb3JrLmMgICAgICAgICAgICAgICAgICAgfCAgICAxICsKIGtlcm5lbC9zY2hlZC9j
b3JlLmMgICAgICAgICAgICAgfCAgICAyICstCiAxNSBmaWxlcyBjaGFuZ2VkLCA2NzE0IGlu
c2VydGlvbnMoKyksIDU0ODEgZGVsZXRpb25zKC0pCiBkZWxldGUgbW9kZSAxMDA2NDQgZnMv
aW8td3EuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGlvX3VyaW5nL01ha2VmaWxlCiBjcmVhdGUg
bW9kZSAxMDA2NDQgaW9fdXJpbmcvaW8td3EuYwogcmVuYW1lIHtmcyA9PiBpb191cmluZ30v
aW8td3EuaCAoODElKQogcmVuYW1lIHtmcyA9PiBpb191cmluZ30vaW9fdXJpbmcuYyAoNTEl
KQoKZGlmZiAtLWdpdCBhL01ha2VmaWxlIGIvTWFrZWZpbGUKaW5kZXggNjhmOGVmYTBjYzMw
Li4xNGJiMWJiMzc3NzAgMTAwNjQ0Ci0tLSBhL01ha2VmaWxlCisrKyBiL01ha2VmaWxlCkBA
IC0xMTI4LDcgKzExMjgsNyBAQCBleHBvcnQgTU9ET1JERVIgOj0gJChleHRtb2QtcHJlZml4
KW1vZHVsZXMub3JkZXIKIGV4cG9ydCBNT0RVTEVTX05TREVQUyA6PSAkKGV4dG1vZC1wcmVm
aXgpbW9kdWxlcy5uc2RlcHMKIAogaWZlcSAoJChLQlVJTERfRVhUTU9EKSwpCi1jb3JlLXkJ
CSs9IGtlcm5lbC8gY2VydHMvIG1tLyBmcy8gaXBjLyBzZWN1cml0eS8gY3J5cHRvLyBibG9j
ay8KK2NvcmUteQkJKz0ga2VybmVsLyBjZXJ0cy8gbW0vIGZzLyBpcGMvIHNlY3VyaXR5LyBj
cnlwdG8vIGJsb2NrLyBpb191cmluZy8KIAogdm1saW51eC1kaXJzCTo9ICQocGF0c3Vic3Qg
JS8sJSwkKGZpbHRlciAlLywgXAogCQkgICAgICQoY29yZS15KSAkKGNvcmUtbSkgJChkcml2
ZXJzLXkpICQoZHJpdmVycy1tKSBcCmRpZmYgLS1naXQgYS9mcy9NYWtlZmlsZSBiL2ZzL01h
a2VmaWxlCmluZGV4IDk5OWQxYTIzZjAzNi4uYzY2MGNlMjhmMTQ5IDEwMDY0NAotLS0gYS9m
cy9NYWtlZmlsZQorKysgYi9mcy9NYWtlZmlsZQpAQCAtMzIsOCArMzIsNiBAQCBvYmotJChD
T05GSUdfVElNRVJGRCkJCSs9IHRpbWVyZmQubwogb2JqLSQoQ09ORklHX0VWRU5URkQpCQkr
PSBldmVudGZkLm8KIG9iai0kKENPTkZJR19VU0VSRkFVTFRGRCkJKz0gdXNlcmZhdWx0ZmQu
bwogb2JqLSQoQ09ORklHX0FJTykgICAgICAgICAgICAgICArPSBhaW8ubwotb2JqLSQoQ09O
RklHX0lPX1VSSU5HKQkJKz0gaW9fdXJpbmcubwotb2JqLSQoQ09ORklHX0lPX1dRKQkJKz0g
aW8td3Eubwogb2JqLSQoQ09ORklHX0ZTX0RBWCkJCSs9IGRheC5vCiBvYmotJChDT05GSUdf
RlNfRU5DUllQVElPTikJKz0gY3J5cHRvLwogb2JqLSQoQ09ORklHX0ZTX1ZFUklUWSkJCSs9
IHZlcml0eS8KZGlmZiAtLWdpdCBhL2ZzL2lvLXdxLmMgYi9mcy9pby13cS5jCmRlbGV0ZWQg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAzZDVmYzc2YjkyZDAuLjAwMDAwMDAwMDAwMAotLS0g
YS9mcy9pby13cS5jCisrKyAvZGV2L251bGwKQEAgLTEsMTI0MiArMCwwIEBACi0vLyBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAotLyoKLSAqIEJhc2ljIHdvcmtlciB0aHJl
YWQgcG9vbCBmb3IgaW9fdXJpbmcKLSAqCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTkgSmVucyBB
eGJvZQotICoKLSAqLwotI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgotI2luY2x1ZGUgPGxp
bnV4L2luaXQuaD4KLSNpbmNsdWRlIDxsaW51eC9lcnJuby5oPgotI2luY2x1ZGUgPGxpbnV4
L3NjaGVkL3NpZ25hbC5oPgotI2luY2x1ZGUgPGxpbnV4L21tLmg+Ci0jaW5jbHVkZSA8bGlu
dXgvc2NoZWQvbW0uaD4KLSNpbmNsdWRlIDxsaW51eC9wZXJjcHUuaD4KLSNpbmNsdWRlIDxs
aW51eC9zbGFiLmg+Ci0jaW5jbHVkZSA8bGludXgva3RocmVhZC5oPgotI2luY2x1ZGUgPGxp
bnV4L3JjdWxpc3RfbnVsbHMuaD4KLSNpbmNsdWRlIDxsaW51eC9mc19zdHJ1Y3QuaD4KLSNp
bmNsdWRlIDxsaW51eC90YXNrX3dvcmsuaD4KLSNpbmNsdWRlIDxsaW51eC9ibGstY2dyb3Vw
Lmg+Ci0jaW5jbHVkZSA8bGludXgvYXVkaXQuaD4KLSNpbmNsdWRlIDxsaW51eC9jcHUuaD4K
LQotI2luY2x1ZGUgIi4uL2tlcm5lbC9zY2hlZC9zY2hlZC5oIgotI2luY2x1ZGUgImlvLXdx
LmgiCi0KLSNkZWZpbmUgV09SS0VSX0lETEVfVElNRU9VVAkoNSAqIEhaKQotCi1lbnVtIHsK
LQlJT19XT1JLRVJfRl9VUAkJPSAxLAkvKiB1cCBhbmQgYWN0aXZlICovCi0JSU9fV09SS0VS
X0ZfUlVOTklORwk9IDIsCS8qIGFjY291bnQgYXMgcnVubmluZyAqLwotCUlPX1dPUktFUl9G
X0ZSRUUJPSA0LAkvKiB3b3JrZXIgb24gZnJlZSBsaXN0ICovCi0JSU9fV09SS0VSX0ZfRklY
RUQJPSA4LAkvKiBzdGF0aWMgaWRsZSB3b3JrZXIgKi8KLQlJT19XT1JLRVJfRl9CT1VORAk9
IDE2LAkvKiBpcyBkb2luZyBib3VuZGVkIHdvcmsgKi8KLX07Ci0KLWVudW0gewotCUlPX1dR
X0JJVF9FWElUCQk9IDAsCS8qIHdxIGV4aXRpbmcgKi8KLQlJT19XUV9CSVRfQ0FOQ0VMCT0g
MSwJLyogY2FuY2VsIHdvcmsgb24gbGlzdCAqLwotCUlPX1dRX0JJVF9FUlJPUgkJPSAyLAkv
KiBlcnJvciBvbiBzZXR1cCAqLwotfTsKLQotZW51bSB7Ci0JSU9fV1FFX0ZMQUdfU1RBTExF
RAk9IDEsCS8qIHN0YWxsZWQgb24gaGFzaCAqLwotfTsKLQotLyoKLSAqIE9uZSBmb3IgZWFj
aCB0aHJlYWQgaW4gYSB3cWUgcG9vbAotICovCi1zdHJ1Y3QgaW9fd29ya2VyIHsKLQlyZWZj
b3VudF90IHJlZjsKLQl1bnNpZ25lZCBmbGFnczsKLQlzdHJ1Y3QgaGxpc3RfbnVsbHNfbm9k
ZSBudWxsc19ub2RlOwotCXN0cnVjdCBsaXN0X2hlYWQgYWxsX2xpc3Q7Ci0Jc3RydWN0IHRh
c2tfc3RydWN0ICp0YXNrOwotCXN0cnVjdCBpb193cWUgKndxZTsKLQotCXN0cnVjdCBpb193
cV93b3JrICpjdXJfd29yazsKLQlzcGlubG9ja190IGxvY2s7Ci0KLQlzdHJ1Y3QgcmN1X2hl
YWQgcmN1OwotCXN0cnVjdCBtbV9zdHJ1Y3QgKm1tOwotI2lmZGVmIENPTkZJR19CTEtfQ0dS
T1VQCi0Jc3RydWN0IGNncm91cF9zdWJzeXNfc3RhdGUgKmJsa2NnX2NzczsKLSNlbmRpZgot
CWNvbnN0IHN0cnVjdCBjcmVkICpjdXJfY3JlZHM7Ci0JY29uc3Qgc3RydWN0IGNyZWQgKnNh
dmVkX2NyZWRzOwotCXN0cnVjdCBmaWxlc19zdHJ1Y3QgKnJlc3RvcmVfZmlsZXM7Ci0Jc3Ry
dWN0IG5zcHJveHkgKnJlc3RvcmVfbnNwcm94eTsKLQlzdHJ1Y3QgZnNfc3RydWN0ICpyZXN0
b3JlX2ZzOwotfTsKLQotI2lmIEJJVFNfUEVSX0xPTkcgPT0gNjQKLSNkZWZpbmUgSU9fV1Ff
SEFTSF9PUkRFUgk2Ci0jZWxzZQotI2RlZmluZSBJT19XUV9IQVNIX09SREVSCTUKLSNlbmRp
ZgotCi0jZGVmaW5lIElPX1dRX05SX0hBU0hfQlVDS0VUUwkoMXUgPDwgSU9fV1FfSEFTSF9P
UkRFUikKLQotc3RydWN0IGlvX3dxZV9hY2N0IHsKLQl1bnNpZ25lZCBucl93b3JrZXJzOwot
CXVuc2lnbmVkIG1heF93b3JrZXJzOwotCWF0b21pY190IG5yX3J1bm5pbmc7Ci19OwotCi1l
bnVtIHsKLQlJT19XUV9BQ0NUX0JPVU5ELAotCUlPX1dRX0FDQ1RfVU5CT1VORCwKLX07Ci0K
LS8qCi0gKiBQZXItbm9kZSB3b3JrZXIgdGhyZWFkIHBvb2wKLSAqLwotc3RydWN0IGlvX3dx
ZSB7Ci0Jc3RydWN0IHsKLQkJcmF3X3NwaW5sb2NrX3QgbG9jazsKLQkJc3RydWN0IGlvX3dx
X3dvcmtfbGlzdCB3b3JrX2xpc3Q7Ci0JCXVuc2lnbmVkIGxvbmcgaGFzaF9tYXA7Ci0JCXVu
c2lnbmVkIGZsYWdzOwotCX0gX19fX2NhY2hlbGluZV9hbGlnbmVkX2luX3NtcDsKLQotCWlu
dCBub2RlOwotCXN0cnVjdCBpb193cWVfYWNjdCBhY2N0WzJdOwotCi0Jc3RydWN0IGhsaXN0
X251bGxzX2hlYWQgZnJlZV9saXN0OwotCXN0cnVjdCBsaXN0X2hlYWQgYWxsX2xpc3Q7Ci0K
LQlzdHJ1Y3QgaW9fd3EgKndxOwotCXN0cnVjdCBpb193cV93b3JrICpoYXNoX3RhaWxbSU9f
V1FfTlJfSEFTSF9CVUNLRVRTXTsKLX07Ci0KLS8qCi0gKiBQZXIgaW9fd3Egc3RhdGUKLSAg
Ki8KLXN0cnVjdCBpb193cSB7Ci0Jc3RydWN0IGlvX3dxZSAqKndxZXM7Ci0JdW5zaWduZWQg
bG9uZyBzdGF0ZTsKLQotCWZyZWVfd29ya19mbiAqZnJlZV93b3JrOwotCWlvX3dxX3dvcmtf
Zm4gKmRvX3dvcms7Ci0KLQlzdHJ1Y3QgdGFza19zdHJ1Y3QgKm1hbmFnZXI7Ci0Jc3RydWN0
IHVzZXJfc3RydWN0ICp1c2VyOwotCXJlZmNvdW50X3QgcmVmczsKLQlzdHJ1Y3QgY29tcGxl
dGlvbiBkb25lOwotCi0Jc3RydWN0IGhsaXN0X25vZGUgY3B1aHBfbm9kZTsKLQotCXJlZmNv
dW50X3QgdXNlX3JlZnM7Ci19OwotCi1zdGF0aWMgZW51bSBjcHVocF9zdGF0ZSBpb193cV9v
bmxpbmU7Ci0KLXN0YXRpYyBib29sIGlvX3dvcmtlcl9nZXQoc3RydWN0IGlvX3dvcmtlciAq
d29ya2VyKQotewotCXJldHVybiByZWZjb3VudF9pbmNfbm90X3plcm8oJndvcmtlci0+cmVm
KTsKLX0KLQotc3RhdGljIHZvaWQgaW9fd29ya2VyX3JlbGVhc2Uoc3RydWN0IGlvX3dvcmtl
ciAqd29ya2VyKQotewotCWlmIChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJndvcmtlci0+cmVm
KSkKLQkJd2FrZV91cF9wcm9jZXNzKHdvcmtlci0+dGFzayk7Ci19Ci0KLS8qCi0gKiBOb3Rl
OiBkcm9wcyB0aGUgd3FlLT5sb2NrIGlmIHJldHVybmluZyB0cnVlISBUaGUgY2FsbGVyIG11
c3QgcmUtYWNxdWlyZQotICogdGhlIGxvY2sgaW4gdGhhdCBjYXNlLiBTb21lIGNhbGxlcnMg
bmVlZCB0byByZXN0YXJ0IGhhbmRsaW5nIGlmIHRoaXMKLSAqIGhhcHBlbnMsIHNvIHdlIGNh
bid0IGp1c3QgcmUtYWNxdWlyZSB0aGUgbG9jayBvbiBiZWhhbGYgb2YgdGhlIGNhbGxlci4K
LSAqLwotc3RhdGljIGJvb2wgX19pb193b3JrZXJfdW51c2Uoc3RydWN0IGlvX3dxZSAqd3Fl
LCBzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIpCi17Ci0JYm9vbCBkcm9wcGVkX2xvY2sgPSBm
YWxzZTsKLQotCWlmICh3b3JrZXItPnNhdmVkX2NyZWRzKSB7Ci0JCXJldmVydF9jcmVkcyh3
b3JrZXItPnNhdmVkX2NyZWRzKTsKLQkJd29ya2VyLT5jdXJfY3JlZHMgPSB3b3JrZXItPnNh
dmVkX2NyZWRzID0gTlVMTDsKLQl9Ci0KLQlpZiAoY3VycmVudC0+ZmlsZXMgIT0gd29ya2Vy
LT5yZXN0b3JlX2ZpbGVzKSB7Ci0JCV9fYWNxdWlyZSgmd3FlLT5sb2NrKTsKLQkJcmF3X3Nw
aW5fdW5sb2NrX2lycSgmd3FlLT5sb2NrKTsKLQkJZHJvcHBlZF9sb2NrID0gdHJ1ZTsKLQot
CQl0YXNrX2xvY2soY3VycmVudCk7Ci0JCWN1cnJlbnQtPmZpbGVzID0gd29ya2VyLT5yZXN0
b3JlX2ZpbGVzOwotCQljdXJyZW50LT5uc3Byb3h5ID0gd29ya2VyLT5yZXN0b3JlX25zcHJv
eHk7Ci0JCXRhc2tfdW5sb2NrKGN1cnJlbnQpOwotCX0KLQotCWlmIChjdXJyZW50LT5mcyAh
PSB3b3JrZXItPnJlc3RvcmVfZnMpCi0JCWN1cnJlbnQtPmZzID0gd29ya2VyLT5yZXN0b3Jl
X2ZzOwotCi0JLyoKLQkgKiBJZiB3ZSBoYXZlIGFuIGFjdGl2ZSBtbSwgd2UgbmVlZCB0byBk
cm9wIHRoZSB3cSBsb2NrIGJlZm9yZSB1bnVzaW5nCi0JICogaXQuIElmIHdlIGRvLCByZXR1
cm4gdHJ1ZSBhbmQgbGV0IHRoZSBjYWxsZXIgcmV0cnkgdGhlIGlkbGUgbG9vcC4KLQkgKi8K
LQlpZiAod29ya2VyLT5tbSkgewotCQlpZiAoIWRyb3BwZWRfbG9jaykgewotCQkJX19hY3F1
aXJlKCZ3cWUtPmxvY2spOwotCQkJcmF3X3NwaW5fdW5sb2NrX2lycSgmd3FlLT5sb2NrKTsK
LQkJCWRyb3BwZWRfbG9jayA9IHRydWU7Ci0JCX0KLQkJX19zZXRfY3VycmVudF9zdGF0ZShU
QVNLX1JVTk5JTkcpOwotCQlrdGhyZWFkX3VudXNlX21tKHdvcmtlci0+bW0pOwotCQltbXB1
dCh3b3JrZXItPm1tKTsKLQkJd29ya2VyLT5tbSA9IE5VTEw7Ci0JfQotCi0jaWZkZWYgQ09O
RklHX0JMS19DR1JPVVAKLQlpZiAod29ya2VyLT5ibGtjZ19jc3MpIHsKLQkJa3RocmVhZF9h
c3NvY2lhdGVfYmxrY2coTlVMTCk7Ci0JCXdvcmtlci0+YmxrY2dfY3NzID0gTlVMTDsKLQl9
Ci0jZW5kaWYKLQlpZiAoY3VycmVudC0+c2lnbmFsLT5ybGltW1JMSU1JVF9GU0laRV0ucmxp
bV9jdXIgIT0gUkxJTV9JTkZJTklUWSkKLQkJY3VycmVudC0+c2lnbmFsLT5ybGltW1JMSU1J
VF9GU0laRV0ucmxpbV9jdXIgPSBSTElNX0lORklOSVRZOwotCXJldHVybiBkcm9wcGVkX2xv
Y2s7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgc3RydWN0IGlvX3dxZV9hY2N0ICppb193b3JrX2dl
dF9hY2N0KHN0cnVjdCBpb193cWUgKndxZSwKLQkJCQkJCSAgIHN0cnVjdCBpb193cV93b3Jr
ICp3b3JrKQotewotCWlmICh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfVU5CT1VORCkKLQkJ
cmV0dXJuICZ3cWUtPmFjY3RbSU9fV1FfQUNDVF9VTkJPVU5EXTsKLQotCXJldHVybiAmd3Fl
LT5hY2N0W0lPX1dRX0FDQ1RfQk9VTkRdOwotfQotCi1zdGF0aWMgaW5saW5lIHN0cnVjdCBp
b193cWVfYWNjdCAqaW9fd3FlX2dldF9hY2N0KHN0cnVjdCBpb193cWUgKndxZSwKLQkJCQkJ
CSAgc3RydWN0IGlvX3dvcmtlciAqd29ya2VyKQotewotCWlmICh3b3JrZXItPmZsYWdzICYg
SU9fV09SS0VSX0ZfQk9VTkQpCi0JCXJldHVybiAmd3FlLT5hY2N0W0lPX1dRX0FDQ1RfQk9V
TkRdOwotCi0JcmV0dXJuICZ3cWUtPmFjY3RbSU9fV1FfQUNDVF9VTkJPVU5EXTsKLX0KLQot
c3RhdGljIHZvaWQgaW9fd29ya2VyX2V4aXQoc3RydWN0IGlvX3dvcmtlciAqd29ya2VyKQot
ewotCXN0cnVjdCBpb193cWUgKndxZSA9IHdvcmtlci0+d3FlOwotCXN0cnVjdCBpb193cWVf
YWNjdCAqYWNjdCA9IGlvX3dxZV9nZXRfYWNjdCh3cWUsIHdvcmtlcik7Ci0KLQkvKgotCSAq
IElmIHdlJ3JlIG5vdCBhdCB6ZXJvLCBzb21lb25lIGVsc2UgaXMgaG9sZGluZyBhIGJyaWVm
IHJlZmVyZW5jZQotCSAqIHRvIHRoZSB3b3JrZXIuIFdhaXQgZm9yIHRoYXQgdG8gZ28gYXdh
eS4KLQkgKi8KLQlzZXRfY3VycmVudF9zdGF0ZShUQVNLX0lOVEVSUlVQVElCTEUpOwotCWlm
ICghcmVmY291bnRfZGVjX2FuZF90ZXN0KCZ3b3JrZXItPnJlZikpCi0JCXNjaGVkdWxlKCk7
Ci0JX19zZXRfY3VycmVudF9zdGF0ZShUQVNLX1JVTk5JTkcpOwotCi0JcHJlZW1wdF9kaXNh
YmxlKCk7Ci0JY3VycmVudC0+ZmxhZ3MgJj0gflBGX0lPX1dPUktFUjsKLQlpZiAod29ya2Vy
LT5mbGFncyAmIElPX1dPUktFUl9GX1JVTk5JTkcpCi0JCWF0b21pY19kZWMoJmFjY3QtPm5y
X3J1bm5pbmcpOwotCWlmICghKHdvcmtlci0+ZmxhZ3MgJiBJT19XT1JLRVJfRl9CT1VORCkp
Ci0JCWF0b21pY19kZWMoJndxZS0+d3EtPnVzZXItPnByb2Nlc3Nlcyk7Ci0Jd29ya2VyLT5m
bGFncyA9IDA7Ci0JcHJlZW1wdF9lbmFibGUoKTsKLQotCXJhd19zcGluX2xvY2tfaXJxKCZ3
cWUtPmxvY2spOwotCWhsaXN0X251bGxzX2RlbF9yY3UoJndvcmtlci0+bnVsbHNfbm9kZSk7
Ci0JbGlzdF9kZWxfcmN1KCZ3b3JrZXItPmFsbF9saXN0KTsKLQlpZiAoX19pb193b3JrZXJf
dW51c2Uod3FlLCB3b3JrZXIpKSB7Ci0JCV9fcmVsZWFzZSgmd3FlLT5sb2NrKTsKLQkJcmF3
X3NwaW5fbG9ja19pcnEoJndxZS0+bG9jayk7Ci0JfQotCWFjY3QtPm5yX3dvcmtlcnMtLTsK
LQlyYXdfc3Bpbl91bmxvY2tfaXJxKCZ3cWUtPmxvY2spOwotCi0Ja2ZyZWVfcmN1KHdvcmtl
ciwgcmN1KTsKLQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ3cWUtPndxLT5yZWZzKSkK
LQkJY29tcGxldGUoJndxZS0+d3EtPmRvbmUpOwotfQotCi1zdGF0aWMgaW5saW5lIGJvb2wg
aW9fd3FlX3J1bl9xdWV1ZShzdHJ1Y3QgaW9fd3FlICp3cWUpCi0JX19tdXN0X2hvbGQod3Fl
LT5sb2NrKQotewotCWlmICghd3FfbGlzdF9lbXB0eSgmd3FlLT53b3JrX2xpc3QpICYmCi0J
ICAgICEod3FlLT5mbGFncyAmIElPX1dRRV9GTEFHX1NUQUxMRUQpKQotCQlyZXR1cm4gdHJ1
ZTsKLQlyZXR1cm4gZmFsc2U7Ci19Ci0KLS8qCi0gKiBDaGVjayBoZWFkIG9mIGZyZWUgbGlz
dCBmb3IgYW4gYXZhaWxhYmxlIHdvcmtlci4gSWYgb25lIGlzbid0IGF2YWlsYWJsZSwKLSAq
IGNhbGxlciBtdXN0IHdha2UgdXAgdGhlIHdxIG1hbmFnZXIgdG8gY3JlYXRlIG9uZS4KLSAq
Lwotc3RhdGljIGJvb2wgaW9fd3FlX2FjdGl2YXRlX2ZyZWVfd29ya2VyKHN0cnVjdCBpb193
cWUgKndxZSkKLQlfX211c3RfaG9sZChSQ1UpCi17Ci0Jc3RydWN0IGhsaXN0X251bGxzX25v
ZGUgKm47Ci0Jc3RydWN0IGlvX3dvcmtlciAqd29ya2VyOwotCi0JbiA9IHJjdV9kZXJlZmVy
ZW5jZShobGlzdF9udWxsc19maXJzdF9yY3UoJndxZS0+ZnJlZV9saXN0KSk7Ci0JaWYgKGlz
X2FfbnVsbHMobikpCi0JCXJldHVybiBmYWxzZTsKLQotCXdvcmtlciA9IGhsaXN0X251bGxz
X2VudHJ5KG4sIHN0cnVjdCBpb193b3JrZXIsIG51bGxzX25vZGUpOwotCWlmIChpb193b3Jr
ZXJfZ2V0KHdvcmtlcikpIHsKLQkJd2FrZV91cF9wcm9jZXNzKHdvcmtlci0+dGFzayk7Ci0J
CWlvX3dvcmtlcl9yZWxlYXNlKHdvcmtlcik7Ci0JCXJldHVybiB0cnVlOwotCX0KLQotCXJl
dHVybiBmYWxzZTsKLX0KLQotLyoKLSAqIFdlIG5lZWQgYSB3b3JrZXIuIElmIHdlIGZpbmQg
YSBmcmVlIG9uZSwgd2UncmUgZ29vZC4gSWYgbm90LCBhbmQgd2UncmUKLSAqIGJlbG93IHRo
ZSBtYXggbnVtYmVyIG9mIHdvcmtlcnMsIHdha2UgdXAgdGhlIG1hbmFnZXIgdG8gY3JlYXRl
IG9uZS4KLSAqLwotc3RhdGljIHZvaWQgaW9fd3FlX3dha2Vfd29ya2VyKHN0cnVjdCBpb193
cWUgKndxZSwgc3RydWN0IGlvX3dxZV9hY2N0ICphY2N0KQotewotCWJvb2wgcmV0OwotCi0J
LyoKLQkgKiBNb3N0IGxpa2VseSBhbiBhdHRlbXB0IHRvIHF1ZXVlIHVuYm91bmRlZCB3b3Jr
IG9uIGFuIGlvX3dxIHRoYXQKLQkgKiB3YXNuJ3Qgc2V0dXAgd2l0aCBhbnkgdW5ib3VuZGVk
IHdvcmtlcnMuCi0JICovCi0JaWYgKHVubGlrZWx5KCFhY2N0LT5tYXhfd29ya2VycykpCi0J
CXByX3dhcm5fb25jZSgiaW8td3EgaXMgbm90IGNvbmZpZ3VyZWQgZm9yIHVuYm91bmQgd29y
a2VycyIpOwotCi0JcmN1X3JlYWRfbG9jaygpOwotCXJldCA9IGlvX3dxZV9hY3RpdmF0ZV9m
cmVlX3dvcmtlcih3cWUpOwotCXJjdV9yZWFkX3VubG9jaygpOwotCi0JaWYgKCFyZXQgJiYg
YWNjdC0+bnJfd29ya2VycyA8IGFjY3QtPm1heF93b3JrZXJzKQotCQl3YWtlX3VwX3Byb2Nl
c3Mod3FlLT53cS0+bWFuYWdlcik7Ci19Ci0KLXN0YXRpYyB2b2lkIGlvX3dxZV9pbmNfcnVu
bmluZyhzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKLXsK
LQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QgPSBpb193cWVfZ2V0X2FjY3Qod3FlLCB3b3Jr
ZXIpOwotCi0JYXRvbWljX2luYygmYWNjdC0+bnJfcnVubmluZyk7Ci19Ci0KLXN0YXRpYyB2
b2lkIGlvX3dxZV9kZWNfcnVubmluZyhzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0cnVjdCBpb193
b3JrZXIgKndvcmtlcikKLQlfX211c3RfaG9sZCh3cWUtPmxvY2spCi17Ci0Jc3RydWN0IGlv
X3dxZV9hY2N0ICphY2N0ID0gaW9fd3FlX2dldF9hY2N0KHdxZSwgd29ya2VyKTsKLQotCWlm
IChhdG9taWNfZGVjX2FuZF90ZXN0KCZhY2N0LT5ucl9ydW5uaW5nKSAmJiBpb193cWVfcnVu
X3F1ZXVlKHdxZSkpCi0JCWlvX3dxZV93YWtlX3dvcmtlcih3cWUsIGFjY3QpOwotfQotCi1z
dGF0aWMgdm9pZCBpb193b3JrZXJfc3RhcnQoc3RydWN0IGlvX3dxZSAqd3FlLCBzdHJ1Y3Qg
aW9fd29ya2VyICp3b3JrZXIpCi17Ci0JYWxsb3dfa2VybmVsX3NpZ25hbChTSUdJTlQpOwot
Ci0JY3VycmVudC0+ZmxhZ3MgfD0gUEZfSU9fV09SS0VSOwotCi0Jd29ya2VyLT5mbGFncyB8
PSAoSU9fV09SS0VSX0ZfVVAgfCBJT19XT1JLRVJfRl9SVU5OSU5HKTsKLQl3b3JrZXItPnJl
c3RvcmVfZmlsZXMgPSBjdXJyZW50LT5maWxlczsKLQl3b3JrZXItPnJlc3RvcmVfbnNwcm94
eSA9IGN1cnJlbnQtPm5zcHJveHk7Ci0Jd29ya2VyLT5yZXN0b3JlX2ZzID0gY3VycmVudC0+
ZnM7Ci0JaW9fd3FlX2luY19ydW5uaW5nKHdxZSwgd29ya2VyKTsKLX0KLQotLyoKLSAqIFdv
cmtlciB3aWxsIHN0YXJ0IHByb2Nlc3Npbmcgc29tZSB3b3JrLiBNb3ZlIGl0IHRvIHRoZSBi
dXN5IGxpc3QsIGlmCi0gKiBpdCdzIGN1cnJlbnRseSBvbiB0aGUgZnJlZWxpc3QKLSAqLwot
c3RhdGljIHZvaWQgX19pb193b3JrZXJfYnVzeShzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0cnVj
dCBpb193b3JrZXIgKndvcmtlciwKLQkJCSAgICAgc3RydWN0IGlvX3dxX3dvcmsgKndvcmsp
Ci0JX19tdXN0X2hvbGQod3FlLT5sb2NrKQotewotCWJvb2wgd29ya2VyX2JvdW5kLCB3b3Jr
X2JvdW5kOwotCi0JaWYgKHdvcmtlci0+ZmxhZ3MgJiBJT19XT1JLRVJfRl9GUkVFKSB7Ci0J
CXdvcmtlci0+ZmxhZ3MgJj0gfklPX1dPUktFUl9GX0ZSRUU7Ci0JCWhsaXN0X251bGxzX2Rl
bF9pbml0X3JjdSgmd29ya2VyLT5udWxsc19ub2RlKTsKLQl9Ci0KLQkvKgotCSAqIElmIHdv
cmtlciBpcyBtb3ZpbmcgZnJvbSBib3VuZCB0byB1bmJvdW5kIChvciB2aWNlIHZlcnNhKSwg
dGhlbgotCSAqIGVuc3VyZSB3ZSB1cGRhdGUgdGhlIHJ1bm5pbmcgYWNjb3VudGluZy4KLQkg
Ki8KLQl3b3JrZXJfYm91bmQgPSAod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX0JPVU5E
KSAhPSAwOwotCXdvcmtfYm91bmQgPSAod29yay0+ZmxhZ3MgJiBJT19XUV9XT1JLX1VOQk9V
TkQpID09IDA7Ci0JaWYgKHdvcmtlcl9ib3VuZCAhPSB3b3JrX2JvdW5kKSB7Ci0JCWlvX3dx
ZV9kZWNfcnVubmluZyh3cWUsIHdvcmtlcik7Ci0JCWlmICh3b3JrX2JvdW5kKSB7Ci0JCQl3
b3JrZXItPmZsYWdzIHw9IElPX1dPUktFUl9GX0JPVU5EOwotCQkJd3FlLT5hY2N0W0lPX1dR
X0FDQ1RfVU5CT1VORF0ubnJfd29ya2Vycy0tOwotCQkJd3FlLT5hY2N0W0lPX1dRX0FDQ1Rf
Qk9VTkRdLm5yX3dvcmtlcnMrKzsKLQkJCWF0b21pY19kZWMoJndxZS0+d3EtPnVzZXItPnBy
b2Nlc3Nlcyk7Ci0JCX0gZWxzZSB7Ci0JCQl3b3JrZXItPmZsYWdzICY9IH5JT19XT1JLRVJf
Rl9CT1VORDsKLQkJCXdxZS0+YWNjdFtJT19XUV9BQ0NUX1VOQk9VTkRdLm5yX3dvcmtlcnMr
KzsKLQkJCXdxZS0+YWNjdFtJT19XUV9BQ0NUX0JPVU5EXS5ucl93b3JrZXJzLS07Ci0JCQlh
dG9taWNfaW5jKCZ3cWUtPndxLT51c2VyLT5wcm9jZXNzZXMpOwotCQl9Ci0JCWlvX3dxZV9p
bmNfcnVubmluZyh3cWUsIHdvcmtlcik7Ci0JIH0KLX0KLQotLyoKLSAqIE5vIHdvcmssIHdv
cmtlciBnb2luZyB0byBzbGVlcC4gTW92ZSB0byBmcmVlbGlzdCwgYW5kIHVudXNlIG1tIGlm
IHdlCi0gKiBoYXZlIG9uZSBhdHRhY2hlZC4gRHJvcHBpbmcgdGhlIG1tIG1heSBwb3RlbnRp
YWxseSBzbGVlcCwgc28gd2UgZHJvcAotICogdGhlIGxvY2sgaW4gdGhhdCBjYXNlIGFuZCBy
ZXR1cm4gc3VjY2Vzcy4gU2luY2UgdGhlIGNhbGxlciBoYXMgdG8KLSAqIHJldHJ5IHRoZSBs
b29wIGluIHRoYXQgY2FzZSAod2UgY2hhbmdlZCB0YXNrIHN0YXRlKSwgd2UgZG9uJ3QgcmVn
cmFiCi0gKiB0aGUgbG9jayBpZiB3ZSByZXR1cm4gc3VjY2Vzcy4KLSAqLwotc3RhdGljIGJv
b2wgX19pb193b3JrZXJfaWRsZShzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0cnVjdCBpb193b3Jr
ZXIgKndvcmtlcikKLQlfX211c3RfaG9sZCh3cWUtPmxvY2spCi17Ci0JaWYgKCEod29ya2Vy
LT5mbGFncyAmIElPX1dPUktFUl9GX0ZSRUUpKSB7Ci0JCXdvcmtlci0+ZmxhZ3MgfD0gSU9f
V09SS0VSX0ZfRlJFRTsKLQkJaGxpc3RfbnVsbHNfYWRkX2hlYWRfcmN1KCZ3b3JrZXItPm51
bGxzX25vZGUsICZ3cWUtPmZyZWVfbGlzdCk7Ci0JfQotCi0JcmV0dXJuIF9faW9fd29ya2Vy
X3VudXNlKHdxZSwgd29ya2VyKTsKLX0KLQotc3RhdGljIGlubGluZSB1bnNpZ25lZCBpbnQg
aW9fZ2V0X3dvcmtfaGFzaChzdHJ1Y3QgaW9fd3Ffd29yayAqd29yaykKLXsKLQlyZXR1cm4g
d29yay0+ZmxhZ3MgPj4gSU9fV1FfSEFTSF9TSElGVDsKLX0KLQotc3RhdGljIHN0cnVjdCBp
b193cV93b3JrICppb19nZXRfbmV4dF93b3JrKHN0cnVjdCBpb193cWUgKndxZSkKLQlfX211
c3RfaG9sZCh3cWUtPmxvY2spCi17Ci0Jc3RydWN0IGlvX3dxX3dvcmtfbm9kZSAqbm9kZSwg
KnByZXY7Ci0Jc3RydWN0IGlvX3dxX3dvcmsgKndvcmssICp0YWlsOwotCXVuc2lnbmVkIGlu
dCBoYXNoOwotCi0Jd3FfbGlzdF9mb3JfZWFjaChub2RlLCBwcmV2LCAmd3FlLT53b3JrX2xp
c3QpIHsKLQkJd29yayA9IGNvbnRhaW5lcl9vZihub2RlLCBzdHJ1Y3QgaW9fd3Ffd29yaywg
bGlzdCk7Ci0KLQkJLyogbm90IGhhc2hlZCwgY2FuIHJ1biBhbnl0aW1lICovCi0JCWlmICgh
aW9fd3FfaXNfaGFzaGVkKHdvcmspKSB7Ci0JCQl3cV9saXN0X2RlbCgmd3FlLT53b3JrX2xp
c3QsIG5vZGUsIHByZXYpOwotCQkJcmV0dXJuIHdvcms7Ci0JCX0KLQotCQkvKiBoYXNoZWQs
IGNhbiBydW4gaWYgbm90IGFscmVhZHkgcnVubmluZyAqLwotCQloYXNoID0gaW9fZ2V0X3dv
cmtfaGFzaCh3b3JrKTsKLQkJaWYgKCEod3FlLT5oYXNoX21hcCAmIEJJVChoYXNoKSkpIHsK
LQkJCXdxZS0+aGFzaF9tYXAgfD0gQklUKGhhc2gpOwotCQkJLyogYWxsIGl0ZW1zIHdpdGgg
dGhpcyBoYXNoIGxpZSBpbiBbd29yaywgdGFpbF0gKi8KLQkJCXRhaWwgPSB3cWUtPmhhc2hf
dGFpbFtoYXNoXTsKLQkJCXdxZS0+aGFzaF90YWlsW2hhc2hdID0gTlVMTDsKLQkJCXdxX2xp
c3RfY3V0KCZ3cWUtPndvcmtfbGlzdCwgJnRhaWwtPmxpc3QsIHByZXYpOwotCQkJcmV0dXJu
IHdvcms7Ci0JCX0KLQl9Ci0KLQlyZXR1cm4gTlVMTDsKLX0KLQotc3RhdGljIHZvaWQgaW9f
d3Ffc3dpdGNoX21tKHN0cnVjdCBpb193b3JrZXIgKndvcmtlciwgc3RydWN0IGlvX3dxX3dv
cmsgKndvcmspCi17Ci0JaWYgKHdvcmtlci0+bW0pIHsKLQkJa3RocmVhZF91bnVzZV9tbSh3
b3JrZXItPm1tKTsKLQkJbW1wdXQod29ya2VyLT5tbSk7Ci0JCXdvcmtlci0+bW0gPSBOVUxM
OwotCX0KLQotCWlmIChtbWdldF9ub3RfemVybyh3b3JrLT5pZGVudGl0eS0+bW0pKSB7Ci0J
CWt0aHJlYWRfdXNlX21tKHdvcmstPmlkZW50aXR5LT5tbSk7Ci0JCXdvcmtlci0+bW0gPSB3
b3JrLT5pZGVudGl0eS0+bW07Ci0JCXJldHVybjsKLQl9Ci0KLQkvKiBmYWlsZWQgZ3JhYmJp
bmcgbW0sIGVuc3VyZSB3b3JrIGdldHMgY2FuY2VsbGVkICovCi0Jd29yay0+ZmxhZ3MgfD0g
SU9fV1FfV09SS19DQU5DRUw7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgdm9pZCBpb193cV9zd2l0
Y2hfYmxrY2coc3RydWN0IGlvX3dvcmtlciAqd29ya2VyLAotCQkJCSAgICAgIHN0cnVjdCBp
b193cV93b3JrICp3b3JrKQotewotI2lmZGVmIENPTkZJR19CTEtfQ0dST1VQCi0JaWYgKCEo
d29yay0+ZmxhZ3MgJiBJT19XUV9XT1JLX0JMS0NHKSkKLQkJcmV0dXJuOwotCWlmICh3b3Jr
LT5pZGVudGl0eS0+YmxrY2dfY3NzICE9IHdvcmtlci0+YmxrY2dfY3NzKSB7Ci0JCWt0aHJl
YWRfYXNzb2NpYXRlX2Jsa2NnKHdvcmstPmlkZW50aXR5LT5ibGtjZ19jc3MpOwotCQl3b3Jr
ZXItPmJsa2NnX2NzcyA9IHdvcmstPmlkZW50aXR5LT5ibGtjZ19jc3M7Ci0JfQotI2VuZGlm
Ci19Ci0KLXN0YXRpYyB2b2lkIGlvX3dxX3N3aXRjaF9jcmVkcyhzdHJ1Y3QgaW9fd29ya2Vy
ICp3b3JrZXIsCi0JCQkgICAgICAgc3RydWN0IGlvX3dxX3dvcmsgKndvcmspCi17Ci0JY29u
c3Qgc3RydWN0IGNyZWQgKm9sZF9jcmVkcyA9IG92ZXJyaWRlX2NyZWRzKHdvcmstPmlkZW50
aXR5LT5jcmVkcyk7Ci0KLQl3b3JrZXItPmN1cl9jcmVkcyA9IHdvcmstPmlkZW50aXR5LT5j
cmVkczsKLQlpZiAod29ya2VyLT5zYXZlZF9jcmVkcykKLQkJcHV0X2NyZWQob2xkX2NyZWRz
KTsgLyogY3JlZHMgc2V0IGJ5IHByZXZpb3VzIHN3aXRjaCAqLwotCWVsc2UKLQkJd29ya2Vy
LT5zYXZlZF9jcmVkcyA9IG9sZF9jcmVkczsKLX0KLQotc3RhdGljIHZvaWQgaW9faW1wZXJz
b25hdGVfd29yayhzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIsCi0JCQkJc3RydWN0IGlvX3dx
X3dvcmsgKndvcmspCi17Ci0JaWYgKCh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfRklMRVMp
ICYmCi0JICAgIGN1cnJlbnQtPmZpbGVzICE9IHdvcmstPmlkZW50aXR5LT5maWxlcykgewot
CQl0YXNrX2xvY2soY3VycmVudCk7Ci0JCWN1cnJlbnQtPmZpbGVzID0gd29yay0+aWRlbnRp
dHktPmZpbGVzOwotCQljdXJyZW50LT5uc3Byb3h5ID0gd29yay0+aWRlbnRpdHktPm5zcHJv
eHk7Ci0JCXRhc2tfdW5sb2NrKGN1cnJlbnQpOwotCQlpZiAoIXdvcmstPmlkZW50aXR5LT5m
aWxlcykgewotCQkJLyogZmFpbGVkIGdyYWJiaW5nIGZpbGVzLCBlbnN1cmUgd29yayBnZXRz
IGNhbmNlbGxlZCAqLwotCQkJd29yay0+ZmxhZ3MgfD0gSU9fV1FfV09SS19DQU5DRUw7Ci0J
CX0KLQl9Ci0JaWYgKCh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfRlMpICYmIGN1cnJlbnQt
PmZzICE9IHdvcmstPmlkZW50aXR5LT5mcykKLQkJY3VycmVudC0+ZnMgPSB3b3JrLT5pZGVu
dGl0eS0+ZnM7Ci0JaWYgKCh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfTU0pICYmIHdvcmst
PmlkZW50aXR5LT5tbSAhPSB3b3JrZXItPm1tKQotCQlpb193cV9zd2l0Y2hfbW0od29ya2Vy
LCB3b3JrKTsKLQlpZiAoKHdvcmstPmZsYWdzICYgSU9fV1FfV09SS19DUkVEUykgJiYKLQkg
ICAgd29ya2VyLT5jdXJfY3JlZHMgIT0gd29yay0+aWRlbnRpdHktPmNyZWRzKQotCQlpb193
cV9zd2l0Y2hfY3JlZHMod29ya2VyLCB3b3JrKTsKLQlpZiAod29yay0+ZmxhZ3MgJiBJT19X
UV9XT1JLX0ZTSVpFKQotCQljdXJyZW50LT5zaWduYWwtPnJsaW1bUkxJTUlUX0ZTSVpFXS5y
bGltX2N1ciA9IHdvcmstPmlkZW50aXR5LT5mc2l6ZTsKLQllbHNlIGlmIChjdXJyZW50LT5z
aWduYWwtPnJsaW1bUkxJTUlUX0ZTSVpFXS5ybGltX2N1ciAhPSBSTElNX0lORklOSVRZKQot
CQljdXJyZW50LT5zaWduYWwtPnJsaW1bUkxJTUlUX0ZTSVpFXS5ybGltX2N1ciA9IFJMSU1f
SU5GSU5JVFk7Ci0JaW9fd3Ffc3dpdGNoX2Jsa2NnKHdvcmtlciwgd29yayk7Ci0jaWZkZWYg
Q09ORklHX0FVRElUCi0JY3VycmVudC0+bG9naW51aWQgPSB3b3JrLT5pZGVudGl0eS0+bG9n
aW51aWQ7Ci0JY3VycmVudC0+c2Vzc2lvbmlkID0gd29yay0+aWRlbnRpdHktPnNlc3Npb25p
ZDsKLSNlbmRpZgotfQotCi1zdGF0aWMgdm9pZCBpb19hc3NpZ25fY3VycmVudF93b3JrKHN0
cnVjdCBpb193b3JrZXIgKndvcmtlciwKLQkJCQkgICBzdHJ1Y3QgaW9fd3Ffd29yayAqd29y
aykKLXsKLQlpZiAod29yaykgewotCQkvKiBmbHVzaCBwZW5kaW5nIHNpZ25hbHMgYmVmb3Jl
IGFzc2lnbmluZyBuZXcgd29yayAqLwotCQlpZiAoc2lnbmFsX3BlbmRpbmcoY3VycmVudCkp
Ci0JCQlmbHVzaF9zaWduYWxzKGN1cnJlbnQpOwotCQljb25kX3Jlc2NoZWQoKTsKLQl9Ci0K
LSNpZmRlZiBDT05GSUdfQVVESVQKLQljdXJyZW50LT5sb2dpbnVpZCA9IEtVSURUX0lOSVQo
QVVESVRfVUlEX1VOU0VUKTsKLQljdXJyZW50LT5zZXNzaW9uaWQgPSBBVURJVF9TSURfVU5T
RVQ7Ci0jZW5kaWYKLQotCXNwaW5fbG9ja19pcnEoJndvcmtlci0+bG9jayk7Ci0Jd29ya2Vy
LT5jdXJfd29yayA9IHdvcms7Ci0Jc3Bpbl91bmxvY2tfaXJxKCZ3b3JrZXItPmxvY2spOwot
fQotCi1zdGF0aWMgdm9pZCBpb193cWVfZW5xdWV1ZShzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0
cnVjdCBpb193cV93b3JrICp3b3JrKTsKLQotc3RhdGljIHZvaWQgaW9fd29ya2VyX2hhbmRs
ZV93b3JrKHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKLQlfX3JlbGVhc2VzKHdxZS0+bG9j
aykKLXsKLQlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3b3JrZXItPndxZTsKLQlzdHJ1Y3QgaW9f
d3EgKndxID0gd3FlLT53cTsKLQotCWRvIHsKLQkJc3RydWN0IGlvX3dxX3dvcmsgKndvcms7
Ci1nZXRfbmV4dDoKLQkJLyoKLQkJICogSWYgd2UgZ290IHNvbWUgd29yaywgbWFyayB1cyBh
cyBidXN5LiBJZiB3ZSBkaWRuJ3QsIGJ1dAotCQkgKiB0aGUgbGlzdCBpc24ndCBlbXB0eSwg
aXQgbWVhbnMgd2Ugc3RhbGxlZCBvbiBoYXNoZWQgd29yay4KLQkJICogTWFyayB1cyBzdGFs
bGVkIHNvIHdlIGRvbid0IGtlZXAgbG9va2luZyBmb3Igd29yayB3aGVuIHdlCi0JCSAqIGNh
bid0IG1ha2UgcHJvZ3Jlc3MsIGFueSB3b3JrIGNvbXBsZXRpb24gb3IgaW5zZXJ0aW9uIHdp
bGwKLQkJICogY2xlYXIgdGhlIHN0YWxsZWQgZmxhZy4KLQkJICovCi0JCXdvcmsgPSBpb19n
ZXRfbmV4dF93b3JrKHdxZSk7Ci0JCWlmICh3b3JrKQotCQkJX19pb193b3JrZXJfYnVzeSh3
cWUsIHdvcmtlciwgd29yayk7Ci0JCWVsc2UgaWYgKCF3cV9saXN0X2VtcHR5KCZ3cWUtPndv
cmtfbGlzdCkpCi0JCQl3cWUtPmZsYWdzIHw9IElPX1dRRV9GTEFHX1NUQUxMRUQ7Ci0KLQkJ
cmF3X3NwaW5fdW5sb2NrX2lycSgmd3FlLT5sb2NrKTsKLQkJaWYgKCF3b3JrKQotCQkJYnJl
YWs7Ci0JCWlvX2Fzc2lnbl9jdXJyZW50X3dvcmsod29ya2VyLCB3b3JrKTsKLQotCQkvKiBo
YW5kbGUgYSB3aG9sZSBkZXBlbmRlbnQgbGluayAqLwotCQlkbyB7Ci0JCQlzdHJ1Y3QgaW9f
d3Ffd29yayAqb2xkX3dvcmssICpuZXh0X2hhc2hlZCwgKmxpbmtlZDsKLQkJCXVuc2lnbmVk
IGludCBoYXNoID0gaW9fZ2V0X3dvcmtfaGFzaCh3b3JrKTsKLQotCQkJbmV4dF9oYXNoZWQg
PSB3cV9uZXh0X3dvcmsod29yayk7Ci0JCQlpb19pbXBlcnNvbmF0ZV93b3JrKHdvcmtlciwg
d29yayk7Ci0JCQkvKgotCQkJICogT0sgdG8gc2V0IElPX1dRX1dPUktfQ0FOQ0VMIGV2ZW4g
Zm9yIHVuY2FuY2VsbGFibGUKLQkJCSAqIHdvcmssIHRoZSB3b3JrZXIgZnVuY3Rpb24gd2ls
bCBkbyB0aGUgcmlnaHQgdGhpbmcuCi0JCQkgKi8KLQkJCWlmICh0ZXN0X2JpdChJT19XUV9C
SVRfQ0FOQ0VMLCAmd3EtPnN0YXRlKSkKLQkJCQl3b3JrLT5mbGFncyB8PSBJT19XUV9XT1JL
X0NBTkNFTDsKLQotCQkJb2xkX3dvcmsgPSB3b3JrOwotCQkJbGlua2VkID0gd3EtPmRvX3dv
cmsod29yayk7Ci0KLQkJCXdvcmsgPSBuZXh0X2hhc2hlZDsKLQkJCWlmICghd29yayAmJiBs
aW5rZWQgJiYgIWlvX3dxX2lzX2hhc2hlZChsaW5rZWQpKSB7Ci0JCQkJd29yayA9IGxpbmtl
ZDsKLQkJCQlsaW5rZWQgPSBOVUxMOwotCQkJfQotCQkJaW9fYXNzaWduX2N1cnJlbnRfd29y
ayh3b3JrZXIsIHdvcmspOwotCQkJd3EtPmZyZWVfd29yayhvbGRfd29yayk7Ci0KLQkJCWlm
IChsaW5rZWQpCi0JCQkJaW9fd3FlX2VucXVldWUod3FlLCBsaW5rZWQpOwotCi0JCQlpZiAo
aGFzaCAhPSAtMVUgJiYgIW5leHRfaGFzaGVkKSB7Ci0JCQkJcmF3X3NwaW5fbG9ja19pcnEo
JndxZS0+bG9jayk7Ci0JCQkJd3FlLT5oYXNoX21hcCAmPSB+QklUX1VMTChoYXNoKTsKLQkJ
CQl3cWUtPmZsYWdzICY9IH5JT19XUUVfRkxBR19TVEFMTEVEOwotCQkJCS8qIHNraXAgdW5u
ZWNlc3NhcnkgdW5sb2NrLWxvY2sgd3FlLT5sb2NrICovCi0JCQkJaWYgKCF3b3JrKQotCQkJ
CQlnb3RvIGdldF9uZXh0OwotCQkJCXJhd19zcGluX3VubG9ja19pcnEoJndxZS0+bG9jayk7
Ci0JCQl9Ci0JCX0gd2hpbGUgKHdvcmspOwotCi0JCXJhd19zcGluX2xvY2tfaXJxKCZ3cWUt
PmxvY2spOwotCX0gd2hpbGUgKDEpOwotfQotCi1zdGF0aWMgaW50IGlvX3dxZV93b3JrZXIo
dm9pZCAqZGF0YSkKLXsKLQlzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIgPSBkYXRhOwotCXN0
cnVjdCBpb193cWUgKndxZSA9IHdvcmtlci0+d3FlOwotCXN0cnVjdCBpb193cSAqd3EgPSB3
cWUtPndxOwotCi0JaW9fd29ya2VyX3N0YXJ0KHdxZSwgd29ya2VyKTsKLQotCXdoaWxlICgh
dGVzdF9iaXQoSU9fV1FfQklUX0VYSVQsICZ3cS0+c3RhdGUpKSB7Ci0JCXNldF9jdXJyZW50
X3N0YXRlKFRBU0tfSU5URVJSVVBUSUJMRSk7Ci1sb29wOgotCQlyYXdfc3Bpbl9sb2NrX2ly
cSgmd3FlLT5sb2NrKTsKLQkJaWYgKGlvX3dxZV9ydW5fcXVldWUod3FlKSkgewotCQkJX19z
ZXRfY3VycmVudF9zdGF0ZShUQVNLX1JVTk5JTkcpOwotCQkJaW9fd29ya2VyX2hhbmRsZV93
b3JrKHdvcmtlcik7Ci0JCQlnb3RvIGxvb3A7Ci0JCX0KLQkJLyogZHJvcHMgdGhlIGxvY2sg
b24gc3VjY2VzcywgcmV0cnkgKi8KLQkJaWYgKF9faW9fd29ya2VyX2lkbGUod3FlLCB3b3Jr
ZXIpKSB7Ci0JCQlfX3JlbGVhc2UoJndxZS0+bG9jayk7Ci0JCQlnb3RvIGxvb3A7Ci0JCX0K
LQkJcmF3X3NwaW5fdW5sb2NrX2lycSgmd3FlLT5sb2NrKTsKLQkJaWYgKHNpZ25hbF9wZW5k
aW5nKGN1cnJlbnQpKQotCQkJZmx1c2hfc2lnbmFscyhjdXJyZW50KTsKLQkJaWYgKHNjaGVk
dWxlX3RpbWVvdXQoV09SS0VSX0lETEVfVElNRU9VVCkpCi0JCQljb250aW51ZTsKLQkJLyog
dGltZWQgb3V0LCBleGl0IHVubGVzcyB3ZSdyZSB0aGUgZml4ZWQgd29ya2VyICovCi0JCWlm
ICh0ZXN0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0ZSkgfHwKLQkJICAgICEod29y
a2VyLT5mbGFncyAmIElPX1dPUktFUl9GX0ZJWEVEKSkKLQkJCWJyZWFrOwotCX0KLQotCWlm
ICh0ZXN0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0ZSkpIHsKLQkJcmF3X3NwaW5f
bG9ja19pcnEoJndxZS0+bG9jayk7Ci0JCWlmICghd3FfbGlzdF9lbXB0eSgmd3FlLT53b3Jr
X2xpc3QpKQotCQkJaW9fd29ya2VyX2hhbmRsZV93b3JrKHdvcmtlcik7Ci0JCWVsc2UKLQkJ
CXJhd19zcGluX3VubG9ja19pcnEoJndxZS0+bG9jayk7Ci0JfQotCi0JaW9fd29ya2VyX2V4
aXQod29ya2VyKTsKLQlyZXR1cm4gMDsKLX0KLQotLyoKLSAqIENhbGxlZCB3aGVuIGEgd29y
a2VyIGlzIHNjaGVkdWxlZCBpbi4gTWFyayB1cyBhcyBjdXJyZW50bHkgcnVubmluZy4KLSAq
Lwotdm9pZCBpb193cV93b3JrZXJfcnVubmluZyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykK
LXsKLQlzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIgPSBrdGhyZWFkX2RhdGEodHNrKTsKLQlz
dHJ1Y3QgaW9fd3FlICp3cWUgPSB3b3JrZXItPndxZTsKLQotCWlmICghKHdvcmtlci0+Zmxh
Z3MgJiBJT19XT1JLRVJfRl9VUCkpCi0JCXJldHVybjsKLQlpZiAod29ya2VyLT5mbGFncyAm
IElPX1dPUktFUl9GX1JVTk5JTkcpCi0JCXJldHVybjsKLQl3b3JrZXItPmZsYWdzIHw9IElP
X1dPUktFUl9GX1JVTk5JTkc7Ci0JaW9fd3FlX2luY19ydW5uaW5nKHdxZSwgd29ya2VyKTsK
LX0KLQotLyoKLSAqIENhbGxlZCB3aGVuIHdvcmtlciBpcyBnb2luZyB0byBzbGVlcC4gSWYg
dGhlcmUgYXJlIG5vIHdvcmtlcnMgY3VycmVudGx5Ci0gKiBydW5uaW5nIGFuZCB3ZSBoYXZl
IHdvcmsgcGVuZGluZywgd2FrZSB1cCBhIGZyZWUgb25lIG9yIGhhdmUgdGhlIG1hbmFnZXIK
LSAqIHNldCBvbmUgdXAuCi0gKi8KLXZvaWQgaW9fd3Ffd29ya2VyX3NsZWVwaW5nKHN0cnVj
dCB0YXNrX3N0cnVjdCAqdHNrKQotewotCXN0cnVjdCBpb193b3JrZXIgKndvcmtlciA9IGt0
aHJlYWRfZGF0YSh0c2spOwotCXN0cnVjdCBpb193cWUgKndxZSA9IHdvcmtlci0+d3FlOwot
Ci0JaWYgKCEod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX1VQKSkKLQkJcmV0dXJuOwot
CWlmICghKHdvcmtlci0+ZmxhZ3MgJiBJT19XT1JLRVJfRl9SVU5OSU5HKSkKLQkJcmV0dXJu
OwotCi0Jd29ya2VyLT5mbGFncyAmPSB+SU9fV09SS0VSX0ZfUlVOTklORzsKLQotCXJhd19z
cGluX2xvY2tfaXJxKCZ3cWUtPmxvY2spOwotCWlvX3dxZV9kZWNfcnVubmluZyh3cWUsIHdv
cmtlcik7Ci0JcmF3X3NwaW5fdW5sb2NrX2lycSgmd3FlLT5sb2NrKTsKLX0KLQotc3RhdGlj
IGJvb2wgY3JlYXRlX2lvX3dvcmtlcihzdHJ1Y3QgaW9fd3EgKndxLCBzdHJ1Y3QgaW9fd3Fl
ICp3cWUsIGludCBpbmRleCkKLXsKLQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QgPSAmd3Fl
LT5hY2N0W2luZGV4XTsKLQlzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXI7Ci0KLQl3b3JrZXIg
PSBremFsbG9jX25vZGUoc2l6ZW9mKCp3b3JrZXIpLCBHRlBfS0VSTkVMLCB3cWUtPm5vZGUp
OwotCWlmICghd29ya2VyKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQlyZWZjb3VudF9zZXQoJndv
cmtlci0+cmVmLCAxKTsKLQl3b3JrZXItPm51bGxzX25vZGUucHByZXYgPSBOVUxMOwotCXdv
cmtlci0+d3FlID0gd3FlOwotCXNwaW5fbG9ja19pbml0KCZ3b3JrZXItPmxvY2spOwotCi0J
d29ya2VyLT50YXNrID0ga3RocmVhZF9jcmVhdGVfb25fbm9kZShpb193cWVfd29ya2VyLCB3
b3JrZXIsIHdxZS0+bm9kZSwKLQkJCQkiaW9fd3FlX3dvcmtlci0lZC8lZCIsIGluZGV4LCB3
cWUtPm5vZGUpOwotCWlmIChJU19FUlIod29ya2VyLT50YXNrKSkgewotCQlrZnJlZSh3b3Jr
ZXIpOwotCQlyZXR1cm4gZmFsc2U7Ci0JfQotCWt0aHJlYWRfYmluZF9tYXNrKHdvcmtlci0+
dGFzaywgY3B1bWFza19vZl9ub2RlKHdxZS0+bm9kZSkpOwotCi0JcmF3X3NwaW5fbG9ja19p
cnEoJndxZS0+bG9jayk7Ci0JaGxpc3RfbnVsbHNfYWRkX2hlYWRfcmN1KCZ3b3JrZXItPm51
bGxzX25vZGUsICZ3cWUtPmZyZWVfbGlzdCk7Ci0JbGlzdF9hZGRfdGFpbF9yY3UoJndvcmtl
ci0+YWxsX2xpc3QsICZ3cWUtPmFsbF9saXN0KTsKLQl3b3JrZXItPmZsYWdzIHw9IElPX1dP
UktFUl9GX0ZSRUU7Ci0JaWYgKGluZGV4ID09IElPX1dRX0FDQ1RfQk9VTkQpCi0JCXdvcmtl
ci0+ZmxhZ3MgfD0gSU9fV09SS0VSX0ZfQk9VTkQ7Ci0JaWYgKCFhY2N0LT5ucl93b3JrZXJz
ICYmICh3b3JrZXItPmZsYWdzICYgSU9fV09SS0VSX0ZfQk9VTkQpKQotCQl3b3JrZXItPmZs
YWdzIHw9IElPX1dPUktFUl9GX0ZJWEVEOwotCWFjY3QtPm5yX3dvcmtlcnMrKzsKLQlyYXdf
c3Bpbl91bmxvY2tfaXJxKCZ3cWUtPmxvY2spOwotCi0JaWYgKGluZGV4ID09IElPX1dRX0FD
Q1RfVU5CT1VORCkKLQkJYXRvbWljX2luYygmd3EtPnVzZXItPnByb2Nlc3Nlcyk7Ci0KLQly
ZWZjb3VudF9pbmMoJndxLT5yZWZzKTsKLQl3YWtlX3VwX3Byb2Nlc3Mod29ya2VyLT50YXNr
KTsKLQlyZXR1cm4gdHJ1ZTsKLX0KLQotc3RhdGljIGlubGluZSBib29sIGlvX3dxZV9uZWVk
X3dvcmtlcihzdHJ1Y3QgaW9fd3FlICp3cWUsIGludCBpbmRleCkKLQlfX211c3RfaG9sZCh3
cWUtPmxvY2spCi17Ci0Jc3RydWN0IGlvX3dxZV9hY2N0ICphY2N0ID0gJndxZS0+YWNjdFtp
bmRleF07Ci0KLQkvKiBpZiB3ZSBoYXZlIGF2YWlsYWJsZSB3b3JrZXJzIG9yIG5vIHdvcmss
IG5vIG5lZWQgKi8KLQlpZiAoIWhsaXN0X251bGxzX2VtcHR5KCZ3cWUtPmZyZWVfbGlzdCkg
fHwgIWlvX3dxZV9ydW5fcXVldWUod3FlKSkKLQkJcmV0dXJuIGZhbHNlOwotCXJldHVybiBh
Y2N0LT5ucl93b3JrZXJzIDwgYWNjdC0+bWF4X3dvcmtlcnM7Ci19Ci0KLXN0YXRpYyBib29s
IGlvX3dxZV93b3JrZXJfc2VuZF9zaWcoc3RydWN0IGlvX3dvcmtlciAqd29ya2VyLCB2b2lk
ICpkYXRhKQotewotCXNlbmRfc2lnKFNJR0lOVCwgd29ya2VyLT50YXNrLCAxKTsKLQlyZXR1
cm4gZmFsc2U7Ci19Ci0KLS8qCi0gKiBJdGVyYXRlIHRoZSBwYXNzZWQgaW4gbGlzdCBhbmQg
Y2FsbCB0aGUgc3BlY2lmaWMgZnVuY3Rpb24gZm9yIGVhY2gKLSAqIHdvcmtlciB0aGF0IGlz
bid0IGV4aXRpbmcKLSAqLwotc3RhdGljIGJvb2wgaW9fd3FfZm9yX2VhY2hfd29ya2VyKHN0
cnVjdCBpb193cWUgKndxZSwKLQkJCQkgIGJvb2wgKCpmdW5jKShzdHJ1Y3QgaW9fd29ya2Vy
ICosIHZvaWQgKiksCi0JCQkJICB2b2lkICpkYXRhKQotewotCXN0cnVjdCBpb193b3JrZXIg
KndvcmtlcjsKLQlib29sIHJldCA9IGZhbHNlOwotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeV9y
Y3Uod29ya2VyLCAmd3FlLT5hbGxfbGlzdCwgYWxsX2xpc3QpIHsKLQkJaWYgKGlvX3dvcmtl
cl9nZXQod29ya2VyKSkgewotCQkJLyogbm8gdGFzayBpZiBub2RlIGlzL3dhcyBvZmZsaW5l
ICovCi0JCQlpZiAod29ya2VyLT50YXNrKQotCQkJCXJldCA9IGZ1bmMod29ya2VyLCBkYXRh
KTsKLQkJCWlvX3dvcmtlcl9yZWxlYXNlKHdvcmtlcik7Ci0JCQlpZiAocmV0KQotCQkJCWJy
ZWFrOwotCQl9Ci0JfQotCi0JcmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGJvb2wgaW9fd3Ff
d29ya2VyX3dha2Uoc3RydWN0IGlvX3dvcmtlciAqd29ya2VyLCB2b2lkICpkYXRhKQotewot
CXdha2VfdXBfcHJvY2Vzcyh3b3JrZXItPnRhc2spOwotCXJldHVybiBmYWxzZTsKLX0KLQot
LyoKLSAqIE1hbmFnZXIgdGhyZWFkLiBUYXNrZWQgd2l0aCBjcmVhdGluZyBuZXcgd29ya2Vy
cywgaWYgd2UgbmVlZCB0aGVtLgotICovCi1zdGF0aWMgaW50IGlvX3dxX21hbmFnZXIodm9p
ZCAqZGF0YSkKLXsKLQlzdHJ1Y3QgaW9fd3EgKndxID0gZGF0YTsKLQlpbnQgbm9kZTsKLQot
CS8qIGNyZWF0ZSBmaXhlZCB3b3JrZXJzICovCi0JcmVmY291bnRfc2V0KCZ3cS0+cmVmcywg
MSk7Ci0JZm9yX2VhY2hfbm9kZShub2RlKSB7Ci0JCWlmICghbm9kZV9vbmxpbmUobm9kZSkp
Ci0JCQljb250aW51ZTsKLQkJaWYgKGNyZWF0ZV9pb193b3JrZXIod3EsIHdxLT53cWVzW25v
ZGVdLCBJT19XUV9BQ0NUX0JPVU5EKSkKLQkJCWNvbnRpbnVlOwotCQlzZXRfYml0KElPX1dR
X0JJVF9FUlJPUiwgJndxLT5zdGF0ZSk7Ci0JCXNldF9iaXQoSU9fV1FfQklUX0VYSVQsICZ3
cS0+c3RhdGUpOwotCQlnb3RvIG91dDsKLQl9Ci0KLQljb21wbGV0ZSgmd3EtPmRvbmUpOwot
Ci0Jd2hpbGUgKCFrdGhyZWFkX3Nob3VsZF9zdG9wKCkpIHsKLQkJaWYgKGN1cnJlbnQtPnRh
c2tfd29ya3MpCi0JCQl0YXNrX3dvcmtfcnVuKCk7Ci0KLQkJZm9yX2VhY2hfbm9kZShub2Rl
KSB7Ci0JCQlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3cS0+d3Flc1tub2RlXTsKLQkJCWJvb2wg
Zm9ya193b3JrZXJbMl0gPSB7IGZhbHNlLCBmYWxzZSB9OwotCi0JCQlpZiAoIW5vZGVfb25s
aW5lKG5vZGUpKQotCQkJCWNvbnRpbnVlOwotCi0JCQlyYXdfc3Bpbl9sb2NrX2lycSgmd3Fl
LT5sb2NrKTsKLQkJCWlmIChpb193cWVfbmVlZF93b3JrZXIod3FlLCBJT19XUV9BQ0NUX0JP
VU5EKSkKLQkJCQlmb3JrX3dvcmtlcltJT19XUV9BQ0NUX0JPVU5EXSA9IHRydWU7Ci0JCQlp
ZiAoaW9fd3FlX25lZWRfd29ya2VyKHdxZSwgSU9fV1FfQUNDVF9VTkJPVU5EKSkKLQkJCQlm
b3JrX3dvcmtlcltJT19XUV9BQ0NUX1VOQk9VTkRdID0gdHJ1ZTsKLQkJCXJhd19zcGluX3Vu
bG9ja19pcnEoJndxZS0+bG9jayk7Ci0JCQlpZiAoZm9ya193b3JrZXJbSU9fV1FfQUNDVF9C
T1VORF0pCi0JCQkJY3JlYXRlX2lvX3dvcmtlcih3cSwgd3FlLCBJT19XUV9BQ0NUX0JPVU5E
KTsKLQkJCWlmIChmb3JrX3dvcmtlcltJT19XUV9BQ0NUX1VOQk9VTkRdKQotCQkJCWNyZWF0
ZV9pb193b3JrZXIod3EsIHdxZSwgSU9fV1FfQUNDVF9VTkJPVU5EKTsKLQkJfQotCQlzZXRf
Y3VycmVudF9zdGF0ZShUQVNLX0lOVEVSUlVQVElCTEUpOwotCQlzY2hlZHVsZV90aW1lb3V0
KEhaKTsKLQl9Ci0KLQlpZiAoY3VycmVudC0+dGFza193b3JrcykKLQkJdGFza193b3JrX3J1
bigpOwotCi1vdXQ6Ci0JaWYgKHJlZmNvdW50X2RlY19hbmRfdGVzdCgmd3EtPnJlZnMpKSB7
Ci0JCWNvbXBsZXRlKCZ3cS0+ZG9uZSk7Ci0JCXJldHVybiAwOwotCX0KLQkvKiBpZiBFUlJP
UiBpcyBzZXQgYW5kIHdlIGdldCBoZXJlLCB3ZSBoYXZlIHdvcmtlcnMgdG8gd2FrZSAqLwot
CWlmICh0ZXN0X2JpdChJT19XUV9CSVRfRVJST1IsICZ3cS0+c3RhdGUpKSB7Ci0JCXJjdV9y
ZWFkX2xvY2soKTsKLQkJZm9yX2VhY2hfbm9kZShub2RlKQotCQkJaW9fd3FfZm9yX2VhY2hf
d29ya2VyKHdxLT53cWVzW25vZGVdLCBpb193cV93b3JrZXJfd2FrZSwgTlVMTCk7Ci0JCXJj
dV9yZWFkX3VubG9jaygpOwotCX0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGJvb2wgaW9f
d3FfY2FuX3F1ZXVlKHN0cnVjdCBpb193cWUgKndxZSwgc3RydWN0IGlvX3dxZV9hY2N0ICph
Y2N0LAotCQkJICAgIHN0cnVjdCBpb193cV93b3JrICp3b3JrKQotewotCWJvb2wgZnJlZV93
b3JrZXI7Ci0KLQlpZiAoISh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfVU5CT1VORCkpCi0J
CXJldHVybiB0cnVlOwotCWlmIChhdG9taWNfcmVhZCgmYWNjdC0+bnJfcnVubmluZykpCi0J
CXJldHVybiB0cnVlOwotCi0JcmN1X3JlYWRfbG9jaygpOwotCWZyZWVfd29ya2VyID0gIWhs
aXN0X251bGxzX2VtcHR5KCZ3cWUtPmZyZWVfbGlzdCk7Ci0JcmN1X3JlYWRfdW5sb2NrKCk7
Ci0JaWYgKGZyZWVfd29ya2VyKQotCQlyZXR1cm4gdHJ1ZTsKLQotCWlmIChhdG9taWNfcmVh
ZCgmd3FlLT53cS0+dXNlci0+cHJvY2Vzc2VzKSA+PSBhY2N0LT5tYXhfd29ya2VycyAmJgot
CSAgICAhKGNhcGFibGUoQ0FQX1NZU19SRVNPVVJDRSkgfHwgY2FwYWJsZShDQVBfU1lTX0FE
TUlOKSkpCi0JCXJldHVybiBmYWxzZTsKLQotCXJldHVybiB0cnVlOwotfQotCi1zdGF0aWMg
dm9pZCBpb19ydW5fY2FuY2VsKHN0cnVjdCBpb193cV93b3JrICp3b3JrLCBzdHJ1Y3QgaW9f
d3FlICp3cWUpCi17Ci0Jc3RydWN0IGlvX3dxICp3cSA9IHdxZS0+d3E7Ci0KLQlkbyB7Ci0J
CXN0cnVjdCBpb193cV93b3JrICpvbGRfd29yayA9IHdvcms7Ci0KLQkJd29yay0+ZmxhZ3Mg
fD0gSU9fV1FfV09SS19DQU5DRUw7Ci0JCXdvcmsgPSB3cS0+ZG9fd29yayh3b3JrKTsKLQkJ
d3EtPmZyZWVfd29yayhvbGRfd29yayk7Ci0JfSB3aGlsZSAod29yayk7Ci19Ci0KLXN0YXRp
YyB2b2lkIGlvX3dxZV9pbnNlcnRfd29yayhzdHJ1Y3QgaW9fd3FlICp3cWUsIHN0cnVjdCBp
b193cV93b3JrICp3b3JrKQotewotCXVuc2lnbmVkIGludCBoYXNoOwotCXN0cnVjdCBpb193
cV93b3JrICp0YWlsOwotCi0JaWYgKCFpb193cV9pc19oYXNoZWQod29yaykpIHsKLWFwcGVu
ZDoKLQkJd3FfbGlzdF9hZGRfdGFpbCgmd29yay0+bGlzdCwgJndxZS0+d29ya19saXN0KTsK
LQkJcmV0dXJuOwotCX0KLQotCWhhc2ggPSBpb19nZXRfd29ya19oYXNoKHdvcmspOwotCXRh
aWwgPSB3cWUtPmhhc2hfdGFpbFtoYXNoXTsKLQl3cWUtPmhhc2hfdGFpbFtoYXNoXSA9IHdv
cms7Ci0JaWYgKCF0YWlsKQotCQlnb3RvIGFwcGVuZDsKLQotCXdxX2xpc3RfYWRkX2FmdGVy
KCZ3b3JrLT5saXN0LCAmdGFpbC0+bGlzdCwgJndxZS0+d29ya19saXN0KTsKLX0KLQotc3Rh
dGljIHZvaWQgaW9fd3FlX2VucXVldWUoc3RydWN0IGlvX3dxZSAqd3FlLCBzdHJ1Y3QgaW9f
d3Ffd29yayAqd29yaykKLXsKLQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QgPSBpb193b3Jr
X2dldF9hY2N0KHdxZSwgd29yayk7Ci0JYm9vbCBkb193YWtlOwotCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7Ci0KLQkvKgotCSAqIERvIGVhcmx5IGNoZWNrIHRvIHNlZSBpZiB3ZSBuZWVkIGEg
bmV3IHVuYm91bmQgd29ya2VyLCBhbmQgaWYgd2UgZG8sCi0JICogaWYgd2UncmUgYWxsb3dl
ZCB0byBkbyBzby4gVGhpcyBpc24ndCAxMDAlIGFjY3VyYXRlIGFzIHRoZXJlJ3MgYQotCSAq
IGdhcCBiZXR3ZWVuIHRoaXMgY2hlY2sgYW5kIGluY3JlbWVudGluZyB0aGUgdmFsdWUsIGJ1
dCB0aGF0J3MgT0suCi0JICogSXQncyBjbG9zZSBlbm91Z2ggdG8gbm90IGJlIGFuIGlzc3Vl
LCBmb3JrKCkgaGFzIHRoZSBzYW1lIGRlbGF5LgotCSAqLwotCWlmICh1bmxpa2VseSghaW9f
d3FfY2FuX3F1ZXVlKHdxZSwgYWNjdCwgd29yaykpKSB7Ci0JCWlvX3J1bl9jYW5jZWwod29y
aywgd3FlKTsKLQkJcmV0dXJuOwotCX0KLQotCXJhd19zcGluX2xvY2tfaXJxc2F2ZSgmd3Fl
LT5sb2NrLCBmbGFncyk7Ci0JaW9fd3FlX2luc2VydF93b3JrKHdxZSwgd29yayk7Ci0Jd3Fl
LT5mbGFncyAmPSB+SU9fV1FFX0ZMQUdfU1RBTExFRDsKLQlkb193YWtlID0gKHdvcmstPmZs
YWdzICYgSU9fV1FfV09SS19DT05DVVJSRU5UKSB8fAotCQkJIWF0b21pY19yZWFkKCZhY2N0
LT5ucl9ydW5uaW5nKTsKLQlyYXdfc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmd3FlLT5sb2Nr
LCBmbGFncyk7Ci0KLQlpZiAoZG9fd2FrZSkKLQkJaW9fd3FlX3dha2Vfd29ya2VyKHdxZSwg
YWNjdCk7Ci19Ci0KLXZvaWQgaW9fd3FfZW5xdWV1ZShzdHJ1Y3QgaW9fd3EgKndxLCBzdHJ1
Y3QgaW9fd3Ffd29yayAqd29yaykKLXsKLQlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3cS0+d3Fl
c1tudW1hX25vZGVfaWQoKV07Ci0KLQlpb193cWVfZW5xdWV1ZSh3cWUsIHdvcmspOwotfQot
Ci0vKgotICogV29yayBpdGVtcyB0aGF0IGhhc2ggdG8gdGhlIHNhbWUgdmFsdWUgd2lsbCBu
b3QgYmUgZG9uZSBpbiBwYXJhbGxlbC4KLSAqIFVzZWQgdG8gbGltaXQgY29uY3VycmVudCB3
cml0ZXMsIGdlbmVyYWxseSBoYXNoZWQgYnkgaW5vZGUuCi0gKi8KLXZvaWQgaW9fd3FfaGFz
aF93b3JrKHN0cnVjdCBpb193cV93b3JrICp3b3JrLCB2b2lkICp2YWwpCi17Ci0JdW5zaWdu
ZWQgaW50IGJpdDsKLQotCWJpdCA9IGhhc2hfcHRyKHZhbCwgSU9fV1FfSEFTSF9PUkRFUik7
Ci0Jd29yay0+ZmxhZ3MgfD0gKElPX1dRX1dPUktfSEFTSEVEIHwgKGJpdCA8PCBJT19XUV9I
QVNIX1NISUZUKSk7Ci19Ci0KLXZvaWQgaW9fd3FfY2FuY2VsX2FsbChzdHJ1Y3QgaW9fd3Eg
KndxKQotewotCWludCBub2RlOwotCi0Jc2V0X2JpdChJT19XUV9CSVRfQ0FOQ0VMLCAmd3Et
PnN0YXRlKTsKLQotCXJjdV9yZWFkX2xvY2soKTsKLQlmb3JfZWFjaF9ub2RlKG5vZGUpIHsK
LQkJc3RydWN0IGlvX3dxZSAqd3FlID0gd3EtPndxZXNbbm9kZV07Ci0KLQkJaW9fd3FfZm9y
X2VhY2hfd29ya2VyKHdxZSwgaW9fd3FlX3dvcmtlcl9zZW5kX3NpZywgTlVMTCk7Ci0JfQot
CXJjdV9yZWFkX3VubG9jaygpOwotfQotCi1zdHJ1Y3QgaW9fY2JfY2FuY2VsX2RhdGEgewot
CXdvcmtfY2FuY2VsX2ZuICpmbjsKLQl2b2lkICpkYXRhOwotCWludCBucl9ydW5uaW5nOwot
CWludCBucl9wZW5kaW5nOwotCWJvb2wgY2FuY2VsX2FsbDsKLX07Ci0KLXN0YXRpYyBib29s
IGlvX3dxX3dvcmtlcl9jYW5jZWwoc3RydWN0IGlvX3dvcmtlciAqd29ya2VyLCB2b2lkICpk
YXRhKQotewotCXN0cnVjdCBpb19jYl9jYW5jZWxfZGF0YSAqbWF0Y2ggPSBkYXRhOwotCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7Ci0KLQkvKgotCSAqIEhvbGQgdGhlIGxvY2sgdG8gYXZvaWQg
LT5jdXJfd29yayBnb2luZyBvdXQgb2Ygc2NvcGUsIGNhbGxlcgotCSAqIG1heSBkZXJlZmVy
ZW5jZSB0aGUgcGFzc2VkIGluIHdvcmsuCi0JICovCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJndv
cmtlci0+bG9jaywgZmxhZ3MpOwotCWlmICh3b3JrZXItPmN1cl93b3JrICYmCi0JICAgICEo
d29ya2VyLT5jdXJfd29yay0+ZmxhZ3MgJiBJT19XUV9XT1JLX05PX0NBTkNFTCkgJiYKLQkg
ICAgbWF0Y2gtPmZuKHdvcmtlci0+Y3VyX3dvcmssIG1hdGNoLT5kYXRhKSkgewotCQlzZW5k
X3NpZyhTSUdJTlQsIHdvcmtlci0+dGFzaywgMSk7Ci0JCW1hdGNoLT5ucl9ydW5uaW5nKys7
Ci0JfQotCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJndvcmtlci0+bG9jaywgZmxhZ3MpOwot
Ci0JcmV0dXJuIG1hdGNoLT5ucl9ydW5uaW5nICYmICFtYXRjaC0+Y2FuY2VsX2FsbDsKLX0K
LQotc3RhdGljIGlubGluZSB2b2lkIGlvX3dxZV9yZW1vdmVfcGVuZGluZyhzdHJ1Y3QgaW9f
d3FlICp3cWUsCi0JCQkJCSBzdHJ1Y3QgaW9fd3Ffd29yayAqd29yaywKLQkJCQkJIHN0cnVj
dCBpb193cV93b3JrX25vZGUgKnByZXYpCi17Ci0JdW5zaWduZWQgaW50IGhhc2ggPSBpb19n
ZXRfd29ya19oYXNoKHdvcmspOwotCXN0cnVjdCBpb193cV93b3JrICpwcmV2X3dvcmsgPSBO
VUxMOwotCi0JaWYgKGlvX3dxX2lzX2hhc2hlZCh3b3JrKSAmJiB3b3JrID09IHdxZS0+aGFz
aF90YWlsW2hhc2hdKSB7Ci0JCWlmIChwcmV2KQotCQkJcHJldl93b3JrID0gY29udGFpbmVy
X29mKHByZXYsIHN0cnVjdCBpb193cV93b3JrLCBsaXN0KTsKLQkJaWYgKHByZXZfd29yayAm
JiBpb19nZXRfd29ya19oYXNoKHByZXZfd29yaykgPT0gaGFzaCkKLQkJCXdxZS0+aGFzaF90
YWlsW2hhc2hdID0gcHJldl93b3JrOwotCQllbHNlCi0JCQl3cWUtPmhhc2hfdGFpbFtoYXNo
XSA9IE5VTEw7Ci0JfQotCXdxX2xpc3RfZGVsKCZ3cWUtPndvcmtfbGlzdCwgJndvcmstPmxp
c3QsIHByZXYpOwotfQotCi1zdGF0aWMgdm9pZCBpb193cWVfY2FuY2VsX3BlbmRpbmdfd29y
ayhzdHJ1Y3QgaW9fd3FlICp3cWUsCi0JCQkJICAgICAgIHN0cnVjdCBpb19jYl9jYW5jZWxf
ZGF0YSAqbWF0Y2gpCi17Ci0Jc3RydWN0IGlvX3dxX3dvcmtfbm9kZSAqbm9kZSwgKnByZXY7
Ci0Jc3RydWN0IGlvX3dxX3dvcmsgKndvcms7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKLQot
cmV0cnk6Ci0JcmF3X3NwaW5fbG9ja19pcnFzYXZlKCZ3cWUtPmxvY2ssIGZsYWdzKTsKLQl3
cV9saXN0X2Zvcl9lYWNoKG5vZGUsIHByZXYsICZ3cWUtPndvcmtfbGlzdCkgewotCQl3b3Jr
ID0gY29udGFpbmVyX29mKG5vZGUsIHN0cnVjdCBpb193cV93b3JrLCBsaXN0KTsKLQkJaWYg
KCFtYXRjaC0+Zm4od29yaywgbWF0Y2gtPmRhdGEpKQotCQkJY29udGludWU7Ci0JCWlvX3dx
ZV9yZW1vdmVfcGVuZGluZyh3cWUsIHdvcmssIHByZXYpOwotCQlyYXdfc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmd3FlLT5sb2NrLCBmbGFncyk7Ci0JCWlvX3J1bl9jYW5jZWwod29yaywg
d3FlKTsKLQkJbWF0Y2gtPm5yX3BlbmRpbmcrKzsKLQkJaWYgKCFtYXRjaC0+Y2FuY2VsX2Fs
bCkKLQkJCXJldHVybjsKLQotCQkvKiBub3Qgc2FmZSB0byBjb250aW51ZSBhZnRlciB1bmxv
Y2sgKi8KLQkJZ290byByZXRyeTsKLQl9Ci0JcmF3X3NwaW5fdW5sb2NrX2lycXJlc3RvcmUo
JndxZS0+bG9jaywgZmxhZ3MpOwotfQotCi1zdGF0aWMgdm9pZCBpb193cWVfY2FuY2VsX3J1
bm5pbmdfd29yayhzdHJ1Y3QgaW9fd3FlICp3cWUsCi0JCQkJICAgICAgIHN0cnVjdCBpb19j
Yl9jYW5jZWxfZGF0YSAqbWF0Y2gpCi17Ci0JcmN1X3JlYWRfbG9jaygpOwotCWlvX3dxX2Zv
cl9lYWNoX3dvcmtlcih3cWUsIGlvX3dxX3dvcmtlcl9jYW5jZWwsIG1hdGNoKTsKLQlyY3Vf
cmVhZF91bmxvY2soKTsKLX0KLQotZW51bSBpb193cV9jYW5jZWwgaW9fd3FfY2FuY2VsX2Ni
KHN0cnVjdCBpb193cSAqd3EsIHdvcmtfY2FuY2VsX2ZuICpjYW5jZWwsCi0JCQkJICB2b2lk
ICpkYXRhLCBib29sIGNhbmNlbF9hbGwpCi17Ci0Jc3RydWN0IGlvX2NiX2NhbmNlbF9kYXRh
IG1hdGNoID0gewotCQkuZm4JCT0gY2FuY2VsLAotCQkuZGF0YQkJPSBkYXRhLAotCQkuY2Fu
Y2VsX2FsbAk9IGNhbmNlbF9hbGwsCi0JfTsKLQlpbnQgbm9kZTsKLQotCS8qCi0JICogRmly
c3QgY2hlY2sgcGVuZGluZyBsaXN0LCBpZiB3ZSdyZSBsdWNreSB3ZSBjYW4ganVzdCByZW1v
dmUgaXQKLQkgKiBmcm9tIHRoZXJlLiBDQU5DRUxfT0sgbWVhbnMgdGhhdCB0aGUgd29yayBp
cyByZXR1cm5lZCBhcy1uZXcsCi0JICogbm8gY29tcGxldGlvbiB3aWxsIGJlIHBvc3RlZCBm
b3IgaXQuCi0JICovCi0JZm9yX2VhY2hfbm9kZShub2RlKSB7Ci0JCXN0cnVjdCBpb193cWUg
KndxZSA9IHdxLT53cWVzW25vZGVdOwotCi0JCWlvX3dxZV9jYW5jZWxfcGVuZGluZ193b3Jr
KHdxZSwgJm1hdGNoKTsKLQkJaWYgKG1hdGNoLm5yX3BlbmRpbmcgJiYgIW1hdGNoLmNhbmNl
bF9hbGwpCi0JCQlyZXR1cm4gSU9fV1FfQ0FOQ0VMX09LOwotCX0KLQotCS8qCi0JICogTm93
IGNoZWNrIGlmIGEgZnJlZSAoZ29pbmcgYnVzeSkgb3IgYnVzeSB3b3JrZXIgaGFzIHRoZSB3
b3JrCi0JICogY3VycmVudGx5IHJ1bm5pbmcuIElmIHdlIGZpbmQgaXQgdGhlcmUsIHdlJ2xs
IHJldHVybiBDQU5DRUxfUlVOTklORwotCSAqIGFzIGFuIGluZGljYXRpb24gdGhhdCB3ZSBh
dHRlbXB0IHRvIHNpZ25hbCBjYW5jZWxsYXRpb24uIFRoZQotCSAqIGNvbXBsZXRpb24gd2ls
bCBydW4gbm9ybWFsbHkgaW4gdGhpcyBjYXNlLgotCSAqLwotCWZvcl9lYWNoX25vZGUobm9k
ZSkgewotCQlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3cS0+d3Flc1tub2RlXTsKLQotCQlpb193
cWVfY2FuY2VsX3J1bm5pbmdfd29yayh3cWUsICZtYXRjaCk7Ci0JCWlmIChtYXRjaC5ucl9y
dW5uaW5nICYmICFtYXRjaC5jYW5jZWxfYWxsKQotCQkJcmV0dXJuIElPX1dRX0NBTkNFTF9S
VU5OSU5HOwotCX0KLQotCWlmIChtYXRjaC5ucl9ydW5uaW5nKQotCQlyZXR1cm4gSU9fV1Ff
Q0FOQ0VMX1JVTk5JTkc7Ci0JaWYgKG1hdGNoLm5yX3BlbmRpbmcpCi0JCXJldHVybiBJT19X
UV9DQU5DRUxfT0s7Ci0JcmV0dXJuIElPX1dRX0NBTkNFTF9OT1RGT1VORDsKLX0KLQotc3Ry
dWN0IGlvX3dxICppb193cV9jcmVhdGUodW5zaWduZWQgYm91bmRlZCwgc3RydWN0IGlvX3dx
X2RhdGEgKmRhdGEpCi17Ci0JaW50IHJldCA9IC1FTk9NRU0sIG5vZGU7Ci0Jc3RydWN0IGlv
X3dxICp3cTsKLQotCWlmIChXQVJOX09OX09OQ0UoIWRhdGEtPmZyZWVfd29yayB8fCAhZGF0
YS0+ZG9fd29yaykpCi0JCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOwotCWlmIChXQVJOX09O
X09OQ0UoIWJvdW5kZWQpKQotCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQotCXdxID0g
a3phbGxvYyhzaXplb2YoKndxKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCF3cSkKLQkJcmV0dXJu
IEVSUl9QVFIoLUVOT01FTSk7Ci0KLQl3cS0+d3FlcyA9IGtjYWxsb2MobnJfbm9kZV9pZHMs
IHNpemVvZihzdHJ1Y3QgaW9fd3FlICopLCBHRlBfS0VSTkVMKTsKLQlpZiAoIXdxLT53cWVz
KQotCQlnb3RvIGVycl93cTsKLQotCXJldCA9IGNwdWhwX3N0YXRlX2FkZF9pbnN0YW5jZV9u
b2NhbGxzKGlvX3dxX29ubGluZSwgJndxLT5jcHVocF9ub2RlKTsKLQlpZiAocmV0KQotCQln
b3RvIGVycl93cWVzOwotCi0Jd3EtPmZyZWVfd29yayA9IGRhdGEtPmZyZWVfd29yazsKLQl3
cS0+ZG9fd29yayA9IGRhdGEtPmRvX3dvcms7Ci0KLQkvKiBjYWxsZXIgbXVzdCBhbHJlYWR5
IGhvbGQgYSByZWZlcmVuY2UgdG8gdGhpcyAqLwotCXdxLT51c2VyID0gZGF0YS0+dXNlcjsK
LQotCXJldCA9IC1FTk9NRU07Ci0JZm9yX2VhY2hfbm9kZShub2RlKSB7Ci0JCXN0cnVjdCBp
b193cWUgKndxZTsKLQkJaW50IGFsbG9jX25vZGUgPSBub2RlOwotCi0JCWlmICghbm9kZV9v
bmxpbmUoYWxsb2Nfbm9kZSkpCi0JCQlhbGxvY19ub2RlID0gTlVNQV9OT19OT0RFOwotCQl3
cWUgPSBremFsbG9jX25vZGUoc2l6ZW9mKHN0cnVjdCBpb193cWUpLCBHRlBfS0VSTkVMLCBh
bGxvY19ub2RlKTsKLQkJaWYgKCF3cWUpCi0JCQlnb3RvIGVycjsKLQkJd3EtPndxZXNbbm9k
ZV0gPSB3cWU7Ci0JCXdxZS0+bm9kZSA9IGFsbG9jX25vZGU7Ci0JCXdxZS0+YWNjdFtJT19X
UV9BQ0NUX0JPVU5EXS5tYXhfd29ya2VycyA9IGJvdW5kZWQ7Ci0JCWF0b21pY19zZXQoJndx
ZS0+YWNjdFtJT19XUV9BQ0NUX0JPVU5EXS5ucl9ydW5uaW5nLCAwKTsKLQkJaWYgKHdxLT51
c2VyKSB7Ci0JCQl3cWUtPmFjY3RbSU9fV1FfQUNDVF9VTkJPVU5EXS5tYXhfd29ya2VycyA9
Ci0JCQkJCXRhc2tfcmxpbWl0KGN1cnJlbnQsIFJMSU1JVF9OUFJPQyk7Ci0JCX0KLQkJYXRv
bWljX3NldCgmd3FlLT5hY2N0W0lPX1dRX0FDQ1RfVU5CT1VORF0ubnJfcnVubmluZywgMCk7
Ci0JCXdxZS0+d3EgPSB3cTsKLQkJcmF3X3NwaW5fbG9ja19pbml0KCZ3cWUtPmxvY2spOwot
CQlJTklUX1dRX0xJU1QoJndxZS0+d29ya19saXN0KTsKLQkJSU5JVF9ITElTVF9OVUxMU19I
RUFEKCZ3cWUtPmZyZWVfbGlzdCwgMCk7Ci0JCUlOSVRfTElTVF9IRUFEKCZ3cWUtPmFsbF9s
aXN0KTsKLQl9Ci0KLQlpbml0X2NvbXBsZXRpb24oJndxLT5kb25lKTsKLQotCXdxLT5tYW5h
Z2VyID0ga3RocmVhZF9jcmVhdGUoaW9fd3FfbWFuYWdlciwgd3EsICJpb193cV9tYW5hZ2Vy
Iik7Ci0JaWYgKCFJU19FUlIod3EtPm1hbmFnZXIpKSB7Ci0JCXdha2VfdXBfcHJvY2Vzcyh3
cS0+bWFuYWdlcik7Ci0JCXdhaXRfZm9yX2NvbXBsZXRpb24oJndxLT5kb25lKTsKLQkJaWYg
KHRlc3RfYml0KElPX1dRX0JJVF9FUlJPUiwgJndxLT5zdGF0ZSkpIHsKLQkJCXJldCA9IC1F
Tk9NRU07Ci0JCQlnb3RvIGVycjsKLQkJfQotCQlyZWZjb3VudF9zZXQoJndxLT51c2VfcmVm
cywgMSk7Ci0JCXJlaW5pdF9jb21wbGV0aW9uKCZ3cS0+ZG9uZSk7Ci0JCXJldHVybiB3cTsK
LQl9Ci0KLQlyZXQgPSBQVFJfRVJSKHdxLT5tYW5hZ2VyKTsKLQljb21wbGV0ZSgmd3EtPmRv
bmUpOwotZXJyOgotCWNwdWhwX3N0YXRlX3JlbW92ZV9pbnN0YW5jZV9ub2NhbGxzKGlvX3dx
X29ubGluZSwgJndxLT5jcHVocF9ub2RlKTsKLQlmb3JfZWFjaF9ub2RlKG5vZGUpCi0JCWtm
cmVlKHdxLT53cWVzW25vZGVdKTsKLWVycl93cWVzOgotCWtmcmVlKHdxLT53cWVzKTsKLWVy
cl93cToKLQlrZnJlZSh3cSk7Ci0JcmV0dXJuIEVSUl9QVFIocmV0KTsKLX0KLQotYm9vbCBp
b193cV9nZXQoc3RydWN0IGlvX3dxICp3cSwgc3RydWN0IGlvX3dxX2RhdGEgKmRhdGEpCi17
Ci0JaWYgKGRhdGEtPmZyZWVfd29yayAhPSB3cS0+ZnJlZV93b3JrIHx8IGRhdGEtPmRvX3dv
cmsgIT0gd3EtPmRvX3dvcmspCi0JCXJldHVybiBmYWxzZTsKLQotCXJldHVybiByZWZjb3Vu
dF9pbmNfbm90X3plcm8oJndxLT51c2VfcmVmcyk7Ci19Ci0KLXN0YXRpYyB2b2lkIF9faW9f
d3FfZGVzdHJveShzdHJ1Y3QgaW9fd3EgKndxKQotewotCWludCBub2RlOwotCi0JY3B1aHBf
c3RhdGVfcmVtb3ZlX2luc3RhbmNlX25vY2FsbHMoaW9fd3Ffb25saW5lLCAmd3EtPmNwdWhw
X25vZGUpOwotCi0Jc2V0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0ZSk7Ci0JaWYg
KHdxLT5tYW5hZ2VyKQotCQlrdGhyZWFkX3N0b3Aod3EtPm1hbmFnZXIpOwotCi0JcmN1X3Jl
YWRfbG9jaygpOwotCWZvcl9lYWNoX25vZGUobm9kZSkKLQkJaW9fd3FfZm9yX2VhY2hfd29y
a2VyKHdxLT53cWVzW25vZGVdLCBpb193cV93b3JrZXJfd2FrZSwgTlVMTCk7Ci0JcmN1X3Jl
YWRfdW5sb2NrKCk7Ci0KLQl3YWl0X2Zvcl9jb21wbGV0aW9uKCZ3cS0+ZG9uZSk7Ci0KLQlm
b3JfZWFjaF9ub2RlKG5vZGUpCi0JCWtmcmVlKHdxLT53cWVzW25vZGVdKTsKLQlrZnJlZSh3
cS0+d3Flcyk7Ci0Ja2ZyZWUod3EpOwotfQotCi12b2lkIGlvX3dxX2Rlc3Ryb3koc3RydWN0
IGlvX3dxICp3cSkKLXsKLQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ3cS0+dXNlX3Jl
ZnMpKQotCQlfX2lvX3dxX2Rlc3Ryb3kod3EpOwotfQotCi1zdHJ1Y3QgdGFza19zdHJ1Y3Qg
KmlvX3dxX2dldF90YXNrKHN0cnVjdCBpb193cSAqd3EpCi17Ci0JcmV0dXJuIHdxLT5tYW5h
Z2VyOwotfQotCi1zdGF0aWMgYm9vbCBpb193cV93b3JrZXJfYWZmaW5pdHkoc3RydWN0IGlv
X3dvcmtlciAqd29ya2VyLCB2b2lkICpkYXRhKQotewotCXN0cnVjdCB0YXNrX3N0cnVjdCAq
dGFzayA9IHdvcmtlci0+dGFzazsKLQlzdHJ1Y3QgcnFfZmxhZ3MgcmY7Ci0Jc3RydWN0IHJx
ICpycTsKLQotCXJxID0gdGFza19ycV9sb2NrKHRhc2ssICZyZik7Ci0JZG9fc2V0X2NwdXNf
YWxsb3dlZCh0YXNrLCBjcHVtYXNrX29mX25vZGUod29ya2VyLT53cWUtPm5vZGUpKTsKLQl0
YXNrLT5mbGFncyB8PSBQRl9OT19TRVRBRkZJTklUWTsKLQl0YXNrX3JxX3VubG9jayhycSwg
dGFzaywgJnJmKTsKLQlyZXR1cm4gZmFsc2U7Ci19Ci0KLXN0YXRpYyBpbnQgaW9fd3FfY3B1
X29ubGluZSh1bnNpZ25lZCBpbnQgY3B1LCBzdHJ1Y3QgaGxpc3Rfbm9kZSAqbm9kZSkKLXsK
LQlzdHJ1Y3QgaW9fd3EgKndxID0gaGxpc3RfZW50cnlfc2FmZShub2RlLCBzdHJ1Y3QgaW9f
d3EsIGNwdWhwX25vZGUpOwotCWludCBpOwotCi0JcmN1X3JlYWRfbG9jaygpOwotCWZvcl9l
YWNoX25vZGUoaSkKLQkJaW9fd3FfZm9yX2VhY2hfd29ya2VyKHdxLT53cWVzW2ldLCBpb193
cV93b3JrZXJfYWZmaW5pdHksIE5VTEwpOwotCXJjdV9yZWFkX3VubG9jaygpOwotCXJldHVy
biAwOwotfQotCi1zdGF0aWMgX19pbml0IGludCBpb193cV9pbml0KHZvaWQpCi17Ci0JaW50
IHJldDsKLQotCXJldCA9IGNwdWhwX3NldHVwX3N0YXRlX211bHRpKENQVUhQX0FQX09OTElO
RV9EWU4sICJpby13cS9vbmxpbmUiLAotCQkJCQlpb193cV9jcHVfb25saW5lLCBOVUxMKTsK
LQlpZiAocmV0IDwgMCkKLQkJcmV0dXJuIHJldDsKLQlpb193cV9vbmxpbmUgPSByZXQ7Ci0J
cmV0dXJuIDA7Ci19Ci1zdWJzeXNfaW5pdGNhbGwoaW9fd3FfaW5pdCk7CmRpZmYgLS1naXQg
YS9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmggYi9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmgK
aW5kZXggMzViMmQ4NDU3MDRkLi42NDlhNGQ3YzI0MWIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
bGludXgvaW9fdXJpbmcuaAorKysgYi9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmgKQEAgLTUs
NTAgKzUsMjAgQEAKICNpbmNsdWRlIDxsaW51eC9zY2hlZC5oPgogI2luY2x1ZGUgPGxpbnV4
L3hhcnJheS5oPgogCi1zdHJ1Y3QgaW9faWRlbnRpdHkgewotCXN0cnVjdCBmaWxlc19zdHJ1
Y3QJCSpmaWxlczsKLQlzdHJ1Y3QgbW1fc3RydWN0CQkqbW07Ci0jaWZkZWYgQ09ORklHX0JM
S19DR1JPVVAKLQlzdHJ1Y3QgY2dyb3VwX3N1YnN5c19zdGF0ZQkqYmxrY2dfY3NzOwotI2Vu
ZGlmCi0JY29uc3Qgc3RydWN0IGNyZWQJCSpjcmVkczsKLQlzdHJ1Y3QgbnNwcm94eQkJCSpu
c3Byb3h5OwotCXN0cnVjdCBmc19zdHJ1Y3QJCSpmczsKLQl1bnNpZ25lZCBsb25nCQkJZnNp
emU7Ci0jaWZkZWYgQ09ORklHX0FVRElUCi0Ja3VpZF90CQkJCWxvZ2ludWlkOwotCXVuc2ln
bmVkIGludAkJCXNlc3Npb25pZDsKLSNlbmRpZgotCXJlZmNvdW50X3QJCQljb3VudDsKLX07
Ci0KLXN0cnVjdCBpb191cmluZ190YXNrIHsKLQkvKiBzdWJtaXNzaW9uIHNpZGUgKi8KLQlz
dHJ1Y3QgeGFycmF5CQl4YTsKLQlzdHJ1Y3Qgd2FpdF9xdWV1ZV9oZWFkCXdhaXQ7Ci0Jc3Ry
dWN0IGZpbGUJCSpsYXN0OwotCXN0cnVjdCBwZXJjcHVfY291bnRlcglpbmZsaWdodDsKLQlz
dHJ1Y3QgaW9faWRlbnRpdHkJX19pZGVudGl0eTsKLQlzdHJ1Y3QgaW9faWRlbnRpdHkJKmlk
ZW50aXR5OwotCWF0b21pY190CQlpbl9pZGxlOwotCWJvb2wJCQlzcXBvbGw7Ci19OwotCiAj
aWYgZGVmaW5lZChDT05GSUdfSU9fVVJJTkcpCiBzdHJ1Y3Qgc29jayAqaW9fdXJpbmdfZ2V0
X3NvY2tldChzdHJ1Y3QgZmlsZSAqZmlsZSk7Ci12b2lkIF9faW9fdXJpbmdfdGFza19jYW5j
ZWwodm9pZCk7Ci12b2lkIF9faW9fdXJpbmdfZmlsZXNfY2FuY2VsKHN0cnVjdCBmaWxlc19z
dHJ1Y3QgKmZpbGVzKTsKK3ZvaWQgX19pb191cmluZ19jYW5jZWwoYm9vbCBjYW5jZWxfYWxs
KTsKIHZvaWQgX19pb191cmluZ19mcmVlKHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrKTsKIAot
c3RhdGljIGlubGluZSB2b2lkIGlvX3VyaW5nX3Rhc2tfY2FuY2VsKHZvaWQpCitzdGF0aWMg
aW5saW5lIHZvaWQgaW9fdXJpbmdfZmlsZXNfY2FuY2VsKHZvaWQpCiB7Ci0JaWYgKGN1cnJl
bnQtPmlvX3VyaW5nICYmICF4YV9lbXB0eSgmY3VycmVudC0+aW9fdXJpbmctPnhhKSkKLQkJ
X19pb191cmluZ190YXNrX2NhbmNlbCgpOworCWlmIChjdXJyZW50LT5pb191cmluZykKKwkJ
X19pb191cmluZ19jYW5jZWwoZmFsc2UpOwogfQotc3RhdGljIGlubGluZSB2b2lkIGlvX3Vy
aW5nX2ZpbGVzX2NhbmNlbChzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcykKK3N0YXRpYyBp
bmxpbmUgdm9pZCBpb191cmluZ190YXNrX2NhbmNlbCh2b2lkKQogewotCWlmIChjdXJyZW50
LT5pb191cmluZyAmJiAheGFfZW1wdHkoJmN1cnJlbnQtPmlvX3VyaW5nLT54YSkpCi0JCV9f
aW9fdXJpbmdfZmlsZXNfY2FuY2VsKGZpbGVzKTsKKwlpZiAoY3VycmVudC0+aW9fdXJpbmcp
CisJCV9faW9fdXJpbmdfY2FuY2VsKHRydWUpOwogfQogc3RhdGljIGlubGluZSB2b2lkIGlv
X3VyaW5nX2ZyZWUoc3RydWN0IHRhc2tfc3RydWN0ICp0c2spCiB7CkBAIC02Myw3ICszMyw3
IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHNvY2sgKmlvX3VyaW5nX2dldF9zb2NrZXQoc3Ry
dWN0IGZpbGUgKmZpbGUpCiBzdGF0aWMgaW5saW5lIHZvaWQgaW9fdXJpbmdfdGFza19jYW5j
ZWwodm9pZCkKIHsKIH0KLXN0YXRpYyBpbmxpbmUgdm9pZCBpb191cmluZ19maWxlc19jYW5j
ZWwoc3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMpCitzdGF0aWMgaW5saW5lIHZvaWQgaW9f
dXJpbmdfZmlsZXNfY2FuY2VsKHZvaWQpCiB7CiB9CiBzdGF0aWMgaW5saW5lIHZvaWQgaW9f
dXJpbmdfZnJlZShzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbGludXgvc2NoZWQuaCBiL2luY2x1ZGUvbGludXgvc2NoZWQuaAppbmRleCBiMDU1YzIx
N2ViMGIuLjVkYTRiM2M4OWY2MyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9zY2hlZC5o
CisrKyBiL2luY2x1ZGUvbGludXgvc2NoZWQuaApAQCAtODg1LDYgKzg4NSw5IEBAIHN0cnVj
dCB0YXNrX3N0cnVjdCB7CiAJLyogQ0xPTkVfQ0hJTERfQ0xFQVJUSUQ6ICovCiAJaW50IF9f
dXNlcgkJCSpjbGVhcl9jaGlsZF90aWQ7CiAKKwkvKiBQRl9JT19XT1JLRVIgKi8KKwl2b2lk
CQkJCSpwZl9pb193b3JrZXI7CisKIAl1NjQJCQkJdXRpbWU7CiAJdTY0CQkJCXN0aW1lOwog
I2lmZGVmIENPTkZJR19BUkNIX0hBU19TQ0FMRURfQ1BVVElNRQpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9saW51eC9zeXNjYWxscy5oIGIvaW5jbHVkZS9saW51eC9zeXNjYWxscy5oCmluZGV4
IGFlYTBjZTlmM2I3NC4uYTA1OGM5NmNmMjEzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4
L3N5c2NhbGxzLmgKKysrIGIvaW5jbHVkZS9saW51eC9zeXNjYWxscy5oCkBAIC0zNDEsNyAr
MzQxLDcgQEAgYXNtbGlua2FnZSBsb25nIHN5c19pb191cmluZ19zZXR1cCh1MzIgZW50cmll
cywKIAkJCQlzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zIF9fdXNlciAqcCk7CiBhc21saW5rYWdl
IGxvbmcgc3lzX2lvX3VyaW5nX2VudGVyKHVuc2lnbmVkIGludCBmZCwgdTMyIHRvX3N1Ym1p
dCwKIAkJCQl1MzIgbWluX2NvbXBsZXRlLCB1MzIgZmxhZ3MsCi0JCQkJY29uc3Qgc2lnc2V0
X3QgX191c2VyICpzaWcsIHNpemVfdCBzaWdzeik7CisJCQkJY29uc3Qgdm9pZCBfX3VzZXIg
KmFyZ3AsIHNpemVfdCBhcmdzeik7CiBhc21saW5rYWdlIGxvbmcgc3lzX2lvX3VyaW5nX3Jl
Z2lzdGVyKHVuc2lnbmVkIGludCBmZCwgdW5zaWduZWQgaW50IG9wLAogCQkJCXZvaWQgX191
c2VyICphcmcsIHVuc2lnbmVkIGludCBucl9hcmdzKTsKIApkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS90cmFjZS9ldmVudHMvaW9fdXJpbmcuaCBiL2luY2x1ZGUvdHJhY2UvZXZlbnRzL2lvX3Vy
aW5nLmgKaW5kZXggOWYwZDNiN2Q1NmIwLi4wZGQzMGRlMDBlNWIgMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvdHJhY2UvZXZlbnRzL2lvX3VyaW5nLmgKKysrIGIvaW5jbHVkZS90cmFjZS9ldmVu
dHMvaW9fdXJpbmcuaApAQCAtMTIsMTEgKzEyLDExIEBAIHN0cnVjdCBpb193cV93b3JrOwog
LyoqCiAgKiBpb191cmluZ19jcmVhdGUgLSBjYWxsZWQgYWZ0ZXIgYSBuZXcgaW9fdXJpbmcg
Y29udGV4dCB3YXMgcHJlcGFyZWQKICAqCi0gKiBAZmQ6CQkJY29ycmVzcG9uZGluZyBmaWxl
IGRlc2NyaXB0b3IKLSAqIEBjdHg6CQlwb2ludGVyIHRvIGEgcmluZyBjb250ZXh0IHN0cnVj
dHVyZQorICogQGZkOgkJY29ycmVzcG9uZGluZyBmaWxlIGRlc2NyaXB0b3IKKyAqIEBjdHg6
CXBvaW50ZXIgdG8gYSByaW5nIGNvbnRleHQgc3RydWN0dXJlCiAgKiBAc3FfZW50cmllczoJ
YWN0dWFsIFNRIHNpemUKICAqIEBjcV9lbnRyaWVzOglhY3R1YWwgQ1Egc2l6ZQotICogQGZs
YWdzOgkJU1EgcmluZyBmbGFncywgcHJvdmlkZWQgdG8gaW9fdXJpbmdfc2V0dXAoMikKKyAq
IEBmbGFnczoJU1EgcmluZyBmbGFncywgcHJvdmlkZWQgdG8gaW9fdXJpbmdfc2V0dXAoMikK
ICAqCiAgKiBBbGxvd3MgdG8gdHJhY2UgaW9fdXJpbmcgY3JlYXRpb24gYW5kIHByb3ZpZGUg
cG9pbnRlciB0byBhIGNvbnRleHQsIHRoYXQgY2FuCiAgKiBiZSB1c2VkIGxhdGVyIHRvIGZp
bmQgY29ycmVsYXRlZCBldmVudHMuCkBAIC00OSwxNSArNDksMTUgQEAgVFJBQ0VfRVZFTlQo
aW9fdXJpbmdfY3JlYXRlLAogKTsKIAogLyoqCi0gKiBpb191cmluZ19yZWdpc3RlciAtIGNh
bGxlZCBhZnRlciBhIGJ1ZmZlci9maWxlL2V2ZW50ZmQgd2FzIHN1Y2Nlc2Z1bGx5CisgKiBp
b191cmluZ19yZWdpc3RlciAtIGNhbGxlZCBhZnRlciBhIGJ1ZmZlci9maWxlL2V2ZW50ZmQg
d2FzIHN1Y2Nlc3NmdWxseQogICogCQkJCQkgICByZWdpc3RlcmVkIGZvciBhIHJpbmcKICAq
Ci0gKiBAY3R4OgkJCXBvaW50ZXIgdG8gYSByaW5nIGNvbnRleHQgc3RydWN0dXJlCi0gKiBA
b3Bjb2RlOgkJCWRlc2NyaWJlcyB3aGljaCBvcGVyYXRpb24gdG8gcGVyZm9ybQorICogQGN0
eDoJCXBvaW50ZXIgdG8gYSByaW5nIGNvbnRleHQgc3RydWN0dXJlCisgKiBAb3Bjb2RlOgkJ
ZGVzY3JpYmVzIHdoaWNoIG9wZXJhdGlvbiB0byBwZXJmb3JtCiAgKiBAbnJfdXNlcl9maWxl
czoJbnVtYmVyIG9mIHJlZ2lzdGVyZWQgZmlsZXMKICAqIEBucl91c2VyX2J1ZnM6CW51bWJl
ciBvZiByZWdpc3RlcmVkIGJ1ZmZlcnMKICAqIEBjcV9ldl9mZDoJCXdoZXRoZXIgZXZlbnRm
cyByZWdpc3RlcmVkIG9yIG5vdAotICogQHJldDoJCQlyZXR1cm4gY29kZQorICogQHJldDoJ
CXJldHVybiBjb2RlCiAgKgogICogQWxsb3dzIHRvIHRyYWNlIGZpeGVkIGZpbGVzL2J1ZmZl
cnMvZXZlbnRmZHMsIHRoYXQgY291bGQgYmUgcmVnaXN0ZXJlZCB0bwogICogYXZvaWQgYW4g
b3ZlcmhlYWQgb2YgZ2V0dGluZyByZWZlcmVuY2VzIHRvIHRoZW0gZm9yIGV2ZXJ5IG9wZXJh
dGlvbi4gVGhpcwpAQCAtMTQyLDE2ICsxNDIsMTYgQEAgVFJBQ0VfRVZFTlQoaW9fdXJpbmdf
cXVldWVfYXN5bmNfd29yaywKIAlUUF9BUkdTKGN0eCwgcncsIHJlcSwgd29yaywgZmxhZ3Mp
LAogCiAJVFBfU1RSVUNUX19lbnRyeSAoCi0JCV9fZmllbGQoICB2b2lkICosCQkJCWN0eAkJ
KQotCQlfX2ZpZWxkKCAgaW50LAkJCQkJcncJCSkKLQkJX19maWVsZCggIHZvaWQgKiwJCQkJ
cmVxCQkpCisJCV9fZmllbGQoICB2b2lkICosCQkJY3R4CSkKKwkJX19maWVsZCggIGludCwJ
CQkJcncJKQorCQlfX2ZpZWxkKCAgdm9pZCAqLAkJCXJlcQkpCiAJCV9fZmllbGQoICBzdHJ1
Y3QgaW9fd3Ffd29yayAqLAkJd29yawkpCiAJCV9fZmllbGQoICB1bnNpZ25lZCBpbnQsCQkJ
ZmxhZ3MJKQogCSksCiAKIAlUUF9mYXN0X2Fzc2lnbigKIAkJX19lbnRyeS0+Y3R4CT0gY3R4
OwotCQlfX2VudHJ5LT5ydwkJPSBydzsKKwkJX19lbnRyeS0+cncJPSBydzsKIAkJX19lbnRy
eS0+cmVxCT0gcmVxOwogCQlfX2VudHJ5LT53b3JrCT0gd29yazsKIAkJX19lbnRyeS0+Zmxh
Z3MJPSBmbGFnczsKQEAgLTE5NiwxMCArMTk2LDEwIEBAIFRSQUNFX0VWRU5UKGlvX3VyaW5n
X2RlZmVyLAogCiAvKioKICAqIGlvX3VyaW5nX2xpbmsgLSBjYWxsZWQgYmVmb3JlIHRoZSBp
b191cmluZyByZXF1ZXN0IGFkZGVkIGludG8gbGlua19saXN0IG9mCi0gKiAJCQkJICAgYW5v
dGhlciByZXF1ZXN0CisgKiAJCSAgIGFub3RoZXIgcmVxdWVzdAogICoKLSAqIEBjdHg6CQkJ
cG9pbnRlciB0byBhIHJpbmcgY29udGV4dCBzdHJ1Y3R1cmUKLSAqIEByZXE6CQkJcG9pbnRl
ciB0byBhIGxpbmtlZCByZXF1ZXN0CisgKiBAY3R4OgkJcG9pbnRlciB0byBhIHJpbmcgY29u
dGV4dCBzdHJ1Y3R1cmUKKyAqIEByZXE6CQlwb2ludGVyIHRvIGEgbGlua2VkIHJlcXVlc3QK
ICAqIEB0YXJnZXRfcmVxOgkJcG9pbnRlciB0byBhIHByZXZpb3VzIHJlcXVlc3QsIHRoYXQg
d291bGQgY29udGFpbiBAcmVxCiAgKgogICogQWxsb3dzIHRvIHRyYWNrIGxpbmtlZCByZXF1
ZXN0cywgdG8gdW5kZXJzdGFuZCBkZXBlbmRlbmNpZXMgYmV0d2VlbiByZXF1ZXN0cwpAQCAt
MjEyLDggKzIxMiw4IEBAIFRSQUNFX0VWRU5UKGlvX3VyaW5nX2xpbmssCiAJVFBfQVJHUyhj
dHgsIHJlcSwgdGFyZ2V0X3JlcSksCiAKIAlUUF9TVFJVQ1RfX2VudHJ5ICgKLQkJX19maWVs
ZCggIHZvaWQgKiwJY3R4CQkJKQotCQlfX2ZpZWxkKCAgdm9pZCAqLAlyZXEJCQkpCisJCV9f
ZmllbGQoICB2b2lkICosCWN0eAkJKQorCQlfX2ZpZWxkKCAgdm9pZCAqLAlyZXEJCSkKIAkJ
X19maWVsZCggIHZvaWQgKiwJdGFyZ2V0X3JlcQkpCiAJKSwKIApAQCAtMjQ0LDcgKzI0NCw3
IEBAIFRSQUNFX0VWRU5UKGlvX3VyaW5nX2NxcmluZ193YWl0LAogCVRQX0FSR1MoY3R4LCBt
aW5fZXZlbnRzKSwKIAogCVRQX1NUUlVDVF9fZW50cnkgKAotCQlfX2ZpZWxkKCAgdm9pZCAq
LAljdHgJCQkpCisJCV9fZmllbGQoICB2b2lkICosCWN0eAkJKQogCQlfX2ZpZWxkKCAgaW50
LAkJbWluX2V2ZW50cwkpCiAJKSwKIApAQCAtMjcyLDcgKzI3Miw3IEBAIFRSQUNFX0VWRU5U
KGlvX3VyaW5nX2ZhaWxfbGluaywKIAlUUF9BUkdTKHJlcSwgbGluayksCiAKIAlUUF9TVFJV
Q1RfX2VudHJ5ICgKLQkJX19maWVsZCggIHZvaWQgKiwJcmVxCQkpCisJCV9fZmllbGQoICB2
b2lkICosCXJlcQkpCiAJCV9fZmllbGQoICB2b2lkICosCWxpbmsJKQogCSksCiAKQEAgLTI5
MCwzOCArMjkwLDQyIEBAIFRSQUNFX0VWRU5UKGlvX3VyaW5nX2ZhaWxfbGluaywKICAqIEBj
dHg6CQlwb2ludGVyIHRvIGEgcmluZyBjb250ZXh0IHN0cnVjdHVyZQogICogQHVzZXJfZGF0
YToJCXVzZXIgZGF0YSBhc3NvY2lhdGVkIHdpdGggdGhlIHJlcXVlc3QKICAqIEByZXM6CQly
ZXN1bHQgb2YgdGhlIHJlcXVlc3QKKyAqIEBjZmxhZ3M6CQljb21wbGV0aW9uIGZsYWdzCiAg
KgogICovCiBUUkFDRV9FVkVOVChpb191cmluZ19jb21wbGV0ZSwKIAotCVRQX1BST1RPKHZv
aWQgKmN0eCwgdTY0IHVzZXJfZGF0YSwgbG9uZyByZXMpLAorCVRQX1BST1RPKHZvaWQgKmN0
eCwgdTY0IHVzZXJfZGF0YSwgaW50IHJlcywgdW5zaWduZWQgY2ZsYWdzKSwKIAotCVRQX0FS
R1MoY3R4LCB1c2VyX2RhdGEsIHJlcyksCisJVFBfQVJHUyhjdHgsIHVzZXJfZGF0YSwgcmVz
LCBjZmxhZ3MpLAogCiAJVFBfU1RSVUNUX19lbnRyeSAoCiAJCV9fZmllbGQoICB2b2lkICos
CWN0eAkJKQogCQlfX2ZpZWxkKCAgdTY0LAkJdXNlcl9kYXRhCSkKLQkJX19maWVsZCggIGxv
bmcsCQlyZXMJCSkKKwkJX19maWVsZCggIGludCwJCXJlcwkJKQorCQlfX2ZpZWxkKCAgdW5z
aWduZWQsCWNmbGFncwkJKQogCSksCiAKIAlUUF9mYXN0X2Fzc2lnbigKIAkJX19lbnRyeS0+
Y3R4CQk9IGN0eDsKIAkJX19lbnRyeS0+dXNlcl9kYXRhCT0gdXNlcl9kYXRhOwogCQlfX2Vu
dHJ5LT5yZXMJCT0gcmVzOworCQlfX2VudHJ5LT5jZmxhZ3MJCT0gY2ZsYWdzOwogCSksCiAK
LQlUUF9wcmludGsoInJpbmcgJXAsIHVzZXJfZGF0YSAweCVsbHgsIHJlc3VsdCAlbGQiLAor
CVRQX3ByaW50aygicmluZyAlcCwgdXNlcl9kYXRhIDB4JWxseCwgcmVzdWx0ICVkLCBjZmxh
Z3MgJXgiLAogCQkJICBfX2VudHJ5LT5jdHgsICh1bnNpZ25lZCBsb25nIGxvbmcpX19lbnRy
eS0+dXNlcl9kYXRhLAotCQkJICBfX2VudHJ5LT5yZXMpCisJCQkgIF9fZW50cnktPnJlcywg
X19lbnRyeS0+Y2ZsYWdzKQogKTsKIAotCiAvKioKICAqIGlvX3VyaW5nX3N1Ym1pdF9zcWUg
LSBjYWxsZWQgYmVmb3JlIHN1Ym1pdHRpbmcgb25lIFNRRQogICoKICAqIEBjdHg6CQlwb2lu
dGVyIHRvIGEgcmluZyBjb250ZXh0IHN0cnVjdHVyZQorICogQHJlcToJCXBvaW50ZXIgdG8g
YSBzdWJtaXR0ZWQgcmVxdWVzdAogICogQG9wY29kZToJCW9wY29kZSBvZiByZXF1ZXN0CiAg
KiBAdXNlcl9kYXRhOgkJdXNlciBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVxdWVzdAor
ICogQGZsYWdzCQlyZXF1ZXN0IGZsYWdzCiAgKiBAZm9yY2Vfbm9uYmxvY2s6CXdoZXRoZXIg
YSBjb250ZXh0IGJsb2NraW5nIG9yIG5vdAogICogQHNxX3RocmVhZDoJCXRydWUgaWYgc3Ff
dGhyZWFkIGhhcyBzdWJtaXR0ZWQgdGhpcyBTUUUKICAqCkBAIC0zMzAsNDEgKzMzNCw2MCBA
QCBUUkFDRV9FVkVOVChpb191cmluZ19jb21wbGV0ZSwKICAqLwogVFJBQ0VfRVZFTlQoaW9f
dXJpbmdfc3VibWl0X3NxZSwKIAotCVRQX1BST1RPKHZvaWQgKmN0eCwgdTggb3Bjb2RlLCB1
NjQgdXNlcl9kYXRhLCBib29sIGZvcmNlX25vbmJsb2NrLAotCQkgYm9vbCBzcV90aHJlYWQp
LAorCVRQX1BST1RPKHZvaWQgKmN0eCwgdm9pZCAqcmVxLCB1OCBvcGNvZGUsIHU2NCB1c2Vy
X2RhdGEsIHUzMiBmbGFncywKKwkJIGJvb2wgZm9yY2Vfbm9uYmxvY2ssIGJvb2wgc3FfdGhy
ZWFkKSwKIAotCVRQX0FSR1MoY3R4LCBvcGNvZGUsIHVzZXJfZGF0YSwgZm9yY2Vfbm9uYmxv
Y2ssIHNxX3RocmVhZCksCisJVFBfQVJHUyhjdHgsIHJlcSwgb3Bjb2RlLCB1c2VyX2RhdGEs
IGZsYWdzLCBmb3JjZV9ub25ibG9jaywgc3FfdGhyZWFkKSwKIAogCVRQX1NUUlVDVF9fZW50
cnkgKAogCQlfX2ZpZWxkKCAgdm9pZCAqLAljdHgJCSkKKwkJX19maWVsZCggIHZvaWQgKiwJ
cmVxCQkpCiAJCV9fZmllbGQoICB1OCwJCW9wY29kZQkJKQogCQlfX2ZpZWxkKCAgdTY0LAkJ
dXNlcl9kYXRhCSkKKwkJX19maWVsZCggIHUzMiwJCWZsYWdzCQkpCiAJCV9fZmllbGQoICBi
b29sLAkJZm9yY2Vfbm9uYmxvY2sJKQogCQlfX2ZpZWxkKCAgYm9vbCwJCXNxX3RocmVhZAkp
CiAJKSwKIAogCVRQX2Zhc3RfYXNzaWduKAogCQlfX2VudHJ5LT5jdHgJCT0gY3R4OworCQlf
X2VudHJ5LT5yZXEJCT0gcmVxOwogCQlfX2VudHJ5LT5vcGNvZGUJCT0gb3Bjb2RlOwogCQlf
X2VudHJ5LT51c2VyX2RhdGEJPSB1c2VyX2RhdGE7CisJCV9fZW50cnktPmZsYWdzCQk9IGZs
YWdzOwogCQlfX2VudHJ5LT5mb3JjZV9ub25ibG9jawk9IGZvcmNlX25vbmJsb2NrOwogCQlf
X2VudHJ5LT5zcV90aHJlYWQJPSBzcV90aHJlYWQ7CiAJKSwKIAotCVRQX3ByaW50aygicmlu
ZyAlcCwgb3AgJWQsIGRhdGEgMHglbGx4LCBub24gYmxvY2sgJWQsIHNxX3RocmVhZCAlZCIs
Ci0JCQkgIF9fZW50cnktPmN0eCwgX19lbnRyeS0+b3Bjb2RlLAotCQkJICAodW5zaWduZWQg
bG9uZyBsb25nKSBfX2VudHJ5LT51c2VyX2RhdGEsCi0JCQkgIF9fZW50cnktPmZvcmNlX25v
bmJsb2NrLCBfX2VudHJ5LT5zcV90aHJlYWQpCisJVFBfcHJpbnRrKCJyaW5nICVwLCByZXEg
JXAsIG9wICVkLCBkYXRhIDB4JWxseCwgZmxhZ3MgJXUsICIKKwkJICAibm9uIGJsb2NrICVk
LCBzcV90aHJlYWQgJWQiLCBfX2VudHJ5LT5jdHgsIF9fZW50cnktPnJlcSwKKwkJICBfX2Vu
dHJ5LT5vcGNvZGUsICh1bnNpZ25lZCBsb25nIGxvbmcpX19lbnRyeS0+dXNlcl9kYXRhLAor
CQkgIF9fZW50cnktPmZsYWdzLCBfX2VudHJ5LT5mb3JjZV9ub25ibG9jaywgX19lbnRyeS0+
c3FfdGhyZWFkKQogKTsKIAorLyoKKyAqIGlvX3VyaW5nX3BvbGxfYXJtIC0gY2FsbGVkIGFm
dGVyIGFybWluZyBhIHBvbGwgd2FpdCBpZiBzdWNjZXNzZnVsCisgKgorICogQGN0eDoJCXBv
aW50ZXIgdG8gYSByaW5nIGNvbnRleHQgc3RydWN0dXJlCisgKiBAcmVxOgkJcG9pbnRlciB0
byB0aGUgYXJtZWQgcmVxdWVzdAorICogQG9wY29kZToJCW9wY29kZSBvZiByZXF1ZXN0Cisg
KiBAdXNlcl9kYXRhOgkJdXNlciBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVxdWVzdAor
ICogQG1hc2s6CQlyZXF1ZXN0IHBvbGwgZXZlbnRzIG1hc2sKKyAqIEBldmVudHM6CQlyZWdp
c3RlcmVkIGV2ZW50cyBvZiBpbnRlcmVzdAorICoKKyAqIEFsbG93cyB0byB0cmFjayB3aGlj
aCBmZHMgYXJlIHdhaXRpbmcgZm9yIGFuZCB3aGF0IGFyZSB0aGUgZXZlbnRzIG9mCisgKiBp
bnRlcmVzdC4KKyAqLwogVFJBQ0VfRVZFTlQoaW9fdXJpbmdfcG9sbF9hcm0sCiAKLQlUUF9Q
Uk9UTyh2b2lkICpjdHgsIHU4IG9wY29kZSwgdTY0IHVzZXJfZGF0YSwgaW50IG1hc2ssIGlu
dCBldmVudHMpLAorCVRQX1BST1RPKHZvaWQgKmN0eCwgdm9pZCAqcmVxLCB1OCBvcGNvZGUs
IHU2NCB1c2VyX2RhdGEsCisJCSBpbnQgbWFzaywgaW50IGV2ZW50cyksCiAKLQlUUF9BUkdT
KGN0eCwgb3Bjb2RlLCB1c2VyX2RhdGEsIG1hc2ssIGV2ZW50cyksCisJVFBfQVJHUyhjdHgs
IHJlcSwgb3Bjb2RlLCB1c2VyX2RhdGEsIG1hc2ssIGV2ZW50cyksCiAKIAlUUF9TVFJVQ1Rf
X2VudHJ5ICgKIAkJX19maWVsZCggIHZvaWQgKiwJY3R4CQkpCisJCV9fZmllbGQoICB2b2lk
ICosCXJlcQkJKQogCQlfX2ZpZWxkKCAgdTgsCQlvcGNvZGUJCSkKIAkJX19maWVsZCggIHU2
NCwJCXVzZXJfZGF0YQkpCiAJCV9fZmllbGQoICBpbnQsCQltYXNrCQkpCkBAIC0zNzMsMTYg
KzM5NiwxNyBAQCBUUkFDRV9FVkVOVChpb191cmluZ19wb2xsX2FybSwKIAogCVRQX2Zhc3Rf
YXNzaWduKAogCQlfX2VudHJ5LT5jdHgJCT0gY3R4OworCQlfX2VudHJ5LT5yZXEJCT0gcmVx
OwogCQlfX2VudHJ5LT5vcGNvZGUJCT0gb3Bjb2RlOwogCQlfX2VudHJ5LT51c2VyX2RhdGEJ
PSB1c2VyX2RhdGE7CiAJCV9fZW50cnktPm1hc2sJCT0gbWFzazsKIAkJX19lbnRyeS0+ZXZl
bnRzCQk9IGV2ZW50czsKIAkpLAogCi0JVFBfcHJpbnRrKCJyaW5nICVwLCBvcCAlZCwgZGF0
YSAweCVsbHgsIG1hc2sgMHgleCwgZXZlbnRzIDB4JXgiLAotCQkJICBfX2VudHJ5LT5jdHgs
IF9fZW50cnktPm9wY29kZSwKLQkJCSAgKHVuc2lnbmVkIGxvbmcgbG9uZykgX19lbnRyeS0+
dXNlcl9kYXRhLAotCQkJICBfX2VudHJ5LT5tYXNrLCBfX2VudHJ5LT5ldmVudHMpCisJVFBf
cHJpbnRrKCJyaW5nICVwLCByZXEgJXAsIG9wICVkLCBkYXRhIDB4JWxseCwgbWFzayAweCV4
LCBldmVudHMgMHgleCIsCisJCSAgX19lbnRyeS0+Y3R4LCBfX2VudHJ5LT5yZXEsIF9fZW50
cnktPm9wY29kZSwKKwkJICAodW5zaWduZWQgbG9uZyBsb25nKSBfX2VudHJ5LT51c2VyX2Rh
dGEsCisJCSAgX19lbnRyeS0+bWFzaywgX19lbnRyeS0+ZXZlbnRzKQogKTsKIAogVFJBQ0Vf
RVZFTlQoaW9fdXJpbmdfcG9sbF93YWtlLApAQCAtNDM3LDI3ICs0NjEsNDAgQEAgVFJBQ0Vf
RVZFTlQoaW9fdXJpbmdfdGFza19hZGQsCiAJCQkgIF9fZW50cnktPm1hc2spCiApOwogCisv
KgorICogaW9fdXJpbmdfdGFza19ydW4gLSBjYWxsZWQgd2hlbiB0YXNrX3dvcmtfcnVuKCkg
ZXhlY3V0ZXMgdGhlIHBvbGwgZXZlbnRzCisgKiAgICAgICAgICAgICAgICAgICAgIG5vdGlm
aWNhdGlvbiBjYWxsYmFja3MKKyAqCisgKiBAY3R4OgkJcG9pbnRlciB0byBhIHJpbmcgY29u
dGV4dCBzdHJ1Y3R1cmUKKyAqIEByZXE6CQlwb2ludGVyIHRvIHRoZSBhcm1lZCByZXF1ZXN0
CisgKiBAb3Bjb2RlOgkJb3Bjb2RlIG9mIHJlcXVlc3QKKyAqIEB1c2VyX2RhdGE6CQl1c2Vy
IGRhdGEgYXNzb2NpYXRlZCB3aXRoIHRoZSByZXF1ZXN0CisgKgorICogQWxsb3dzIHRvIHRy
YWNrIHdoZW4gbm90aWZpZWQgcG9sbCBldmVudHMgYXJlIHByb2Nlc3NlZAorICovCiBUUkFD
RV9FVkVOVChpb191cmluZ190YXNrX3J1biwKIAotCVRQX1BST1RPKHZvaWQgKmN0eCwgdTgg
b3Bjb2RlLCB1NjQgdXNlcl9kYXRhKSwKKwlUUF9QUk9UTyh2b2lkICpjdHgsIHZvaWQgKnJl
cSwgdTggb3Bjb2RlLCB1NjQgdXNlcl9kYXRhKSwKIAotCVRQX0FSR1MoY3R4LCBvcGNvZGUs
IHVzZXJfZGF0YSksCisJVFBfQVJHUyhjdHgsIHJlcSwgb3Bjb2RlLCB1c2VyX2RhdGEpLAog
CiAJVFBfU1RSVUNUX19lbnRyeSAoCiAJCV9fZmllbGQoICB2b2lkICosCWN0eAkJKQorCQlf
X2ZpZWxkKCAgdm9pZCAqLAlyZXEJCSkKIAkJX19maWVsZCggIHU4LAkJb3Bjb2RlCQkpCiAJ
CV9fZmllbGQoICB1NjQsCQl1c2VyX2RhdGEJKQogCSksCiAKIAlUUF9mYXN0X2Fzc2lnbigK
IAkJX19lbnRyeS0+Y3R4CQk9IGN0eDsKKwkJX19lbnRyeS0+cmVxCQk9IHJlcTsKIAkJX19l
bnRyeS0+b3Bjb2RlCQk9IG9wY29kZTsKIAkJX19lbnRyeS0+dXNlcl9kYXRhCT0gdXNlcl9k
YXRhOwogCSksCiAKLQlUUF9wcmludGsoInJpbmcgJXAsIG9wICVkLCBkYXRhIDB4JWxseCIs
Ci0JCQkgIF9fZW50cnktPmN0eCwgX19lbnRyeS0+b3Bjb2RlLAotCQkJICAodW5zaWduZWQg
bG9uZyBsb25nKSBfX2VudHJ5LT51c2VyX2RhdGEpCisJVFBfcHJpbnRrKCJyaW5nICVwLCBy
ZXEgJXAsIG9wICVkLCBkYXRhIDB4JWxseCIsCisJCSAgX19lbnRyeS0+Y3R4LCBfX2VudHJ5
LT5yZXEsIF9fZW50cnktPm9wY29kZSwKKwkJICAodW5zaWduZWQgbG9uZyBsb25nKSBfX2Vu
dHJ5LT51c2VyX2RhdGEpCiApOwogCiAjZW5kaWYgLyogX1RSQUNFX0lPX1VSSU5HX0ggKi8K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9pb191cmluZy5oIGIvaW5jbHVkZS91
YXBpL2xpbnV4L2lvX3VyaW5nLmgKaW5kZXggOThkOGUwNmRlYTIyLi42NDgxZGI5MzcwMDIg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9pb191cmluZy5oCisrKyBiL2luY2x1
ZGUvdWFwaS9saW51eC9pb191cmluZy5oCkBAIC00MiwyMyArNDIsMjUgQEAgc3RydWN0IGlv
X3VyaW5nX3NxZSB7CiAJCV9fdTMyCQlzdGF0eF9mbGFnczsKIAkJX191MzIJCWZhZHZpc2Vf
YWR2aWNlOwogCQlfX3UzMgkJc3BsaWNlX2ZsYWdzOworCQlfX3UzMgkJcmVuYW1lX2ZsYWdz
OworCQlfX3UzMgkJdW5saW5rX2ZsYWdzOworCQlfX3UzMgkJaGFyZGxpbmtfZmxhZ3M7CiAJ
fTsKIAlfX3U2NAl1c2VyX2RhdGE7CS8qIGRhdGEgdG8gYmUgcGFzc2VkIGJhY2sgYXQgY29t
cGxldGlvbiB0aW1lICovCisJLyogcGFjayB0aGlzIHRvIGF2b2lkIGJvZ3VzIGFybSBPQUJJ
IGNvbXBsYWludHMgKi8KIAl1bmlvbiB7Ci0JCXN0cnVjdCB7Ci0JCQkvKiBwYWNrIHRoaXMg
dG8gYXZvaWQgYm9ndXMgYXJtIE9BQkkgY29tcGxhaW50cyAqLwotCQkJdW5pb24gewotCQkJ
CS8qIGluZGV4IGludG8gZml4ZWQgYnVmZmVycywgaWYgdXNlZCAqLwotCQkJCV9fdTE2CWJ1
Zl9pbmRleDsKLQkJCQkvKiBmb3IgZ3JvdXBlZCBidWZmZXIgc2VsZWN0aW9uICovCi0JCQkJ
X191MTYJYnVmX2dyb3VwOwotCQkJfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKTsKLQkJCS8q
IHBlcnNvbmFsaXR5IHRvIHVzZSwgaWYgdXNlZCAqLwotCQkJX191MTYJcGVyc29uYWxpdHk7
Ci0JCQlfX3MzMglzcGxpY2VfZmRfaW47Ci0JCX07Ci0JCV9fdTY0CV9fcGFkMlszXTsKKwkJ
LyogaW5kZXggaW50byBmaXhlZCBidWZmZXJzLCBpZiB1c2VkICovCisJCV9fdTE2CWJ1Zl9p
bmRleDsKKwkJLyogZm9yIGdyb3VwZWQgYnVmZmVyIHNlbGVjdGlvbiAqLworCQlfX3UxNgli
dWZfZ3JvdXA7CisJfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKTsKKwkvKiBwZXJzb25hbGl0
eSB0byB1c2UsIGlmIHVzZWQgKi8KKwlfX3UxNglwZXJzb25hbGl0eTsKKwl1bmlvbiB7CisJ
CV9fczMyCXNwbGljZV9mZF9pbjsKKwkJX191MzIJZmlsZV9pbmRleDsKIAl9OworCV9fdTY0
CV9fcGFkMlsyXTsKIH07CiAKIGVudW0gewpAQCAtMTMyLDYgKzEzNCw5IEBAIGVudW0gewog
CUlPUklOR19PUF9QUk9WSURFX0JVRkZFUlMsCiAJSU9SSU5HX09QX1JFTU9WRV9CVUZGRVJT
LAogCUlPUklOR19PUF9URUUsCisJSU9SSU5HX09QX1NIVVRET1dOLAorCUlPUklOR19PUF9S
RU5BTUVBVCwKKwlJT1JJTkdfT1BfVU5MSU5LQVQsCiAKIAkvKiB0aGlzIGdvZXMgbGFzdCwg
b2J2aW91c2x5ICovCiAJSU9SSU5HX09QX0xBU1QsCkBAIC0xNDUsMTQgKzE1MCwzNCBAQCBl
bnVtIHsKIC8qCiAgKiBzcWUtPnRpbWVvdXRfZmxhZ3MKICAqLwotI2RlZmluZSBJT1JJTkdf
VElNRU9VVF9BQlMJKDFVIDw8IDApCi0KKyNkZWZpbmUgSU9SSU5HX1RJTUVPVVRfQUJTCQko
MVUgPDwgMCkKKyNkZWZpbmUgSU9SSU5HX1RJTUVPVVRfVVBEQVRFCQkoMVUgPDwgMSkKKyNk
ZWZpbmUgSU9SSU5HX1RJTUVPVVRfQk9PVFRJTUUJCSgxVSA8PCAyKQorI2RlZmluZSBJT1JJ
TkdfVElNRU9VVF9SRUFMVElNRQkJKDFVIDw8IDMpCisjZGVmaW5lIElPUklOR19MSU5LX1RJ
TUVPVVRfVVBEQVRFCSgxVSA8PCA0KQorI2RlZmluZSBJT1JJTkdfVElNRU9VVF9DTE9DS19N
QVNLCShJT1JJTkdfVElNRU9VVF9CT09UVElNRSB8IElPUklOR19USU1FT1VUX1JFQUxUSU1F
KQorI2RlZmluZSBJT1JJTkdfVElNRU9VVF9VUERBVEVfTUFTSwkoSU9SSU5HX1RJTUVPVVRf
VVBEQVRFIHwgSU9SSU5HX0xJTktfVElNRU9VVF9VUERBVEUpCiAvKgogICogc3FlLT5zcGxp
Y2VfZmxhZ3MKICAqIGV4dGVuZHMgc3BsaWNlKDIpIGZsYWdzCiAgKi8KICNkZWZpbmUgU1BM
SUNFX0ZfRkRfSU5fRklYRUQJKDFVIDw8IDMxKSAvKiB0aGUgbGFzdCBiaXQgb2YgX191MzIg
Ki8KIAorLyoKKyAqIFBPTExfQUREIGZsYWdzLiBOb3RlIHRoYXQgc2luY2Ugc3FlLT5wb2xs
X2V2ZW50cyBpcyB0aGUgZmxhZyBzcGFjZSwgdGhlCisgKiBjb21tYW5kIGZsYWdzIGZvciBQ
T0xMX0FERCBhcmUgc3RvcmVkIGluIHNxZS0+bGVuLgorICoKKyAqIElPUklOR19QT0xMX0FE
RF9NVUxUSQlNdWx0aXNob3QgcG9sbC4gU2V0cyBJT1JJTkdfQ1FFX0ZfTU9SRSBpZgorICoJ
CQkJdGhlIHBvbGwgaGFuZGxlciB3aWxsIGNvbnRpbnVlIHRvIHJlcG9ydAorICoJCQkJQ1FF
cyBvbiBiZWhhbGYgb2YgdGhlIHNhbWUgU1FFLgorICoKKyAqIElPUklOR19QT0xMX1VQREFU
RQkJVXBkYXRlIGV4aXN0aW5nIHBvbGwgcmVxdWVzdCwgbWF0Y2hpbmcKKyAqCQkJCXNxZS0+
YWRkciBhcyB0aGUgb2xkIHVzZXJfZGF0YSBmaWVsZC4KKyAqLworI2RlZmluZSBJT1JJTkdf
UE9MTF9BRERfTVVMVEkJKDFVIDw8IDApCisjZGVmaW5lIElPUklOR19QT0xMX1VQREFURV9F
VkVOVFMJKDFVIDw8IDEpCisjZGVmaW5lIElPUklOR19QT0xMX1VQREFURV9VU0VSX0RBVEEJ
KDFVIDw8IDIpCisKIC8qCiAgKiBJTyBjb21wbGV0aW9uIGRhdGEgc3RydWN0dXJlIChDb21w
bGV0aW9uIFF1ZXVlIEVudHJ5KQogICovCkBAIC0xNjYsOCArMTkxLDEwIEBAIHN0cnVjdCBp
b191cmluZ19jcWUgewogICogY3FlLT5mbGFncwogICoKICAqIElPUklOR19DUUVfRl9CVUZG
RVIJSWYgc2V0LCB0aGUgdXBwZXIgMTYgYml0cyBhcmUgdGhlIGJ1ZmZlciBJRAorICogSU9S
SU5HX0NRRV9GX01PUkUJSWYgc2V0LCBwYXJlbnQgU1FFIHdpbGwgZ2VuZXJhdGUgbW9yZSBD
UUUgZW50cmllcwogICovCiAjZGVmaW5lIElPUklOR19DUUVfRl9CVUZGRVIJCSgxVSA8PCAw
KQorI2RlZmluZSBJT1JJTkdfQ1FFX0ZfTU9SRQkJKDFVIDw8IDEpCiAKIGVudW0gewogCUlP
UklOR19DUUVfQlVGRkVSX1NISUZUCQk9IDE2LApAQCAtMjI2LDYgKzI1Myw3IEBAIHN0cnVj
dCBpb19jcXJpbmdfb2Zmc2V0cyB7CiAjZGVmaW5lIElPUklOR19FTlRFUl9HRVRFVkVOVFMJ
KDFVIDw8IDApCiAjZGVmaW5lIElPUklOR19FTlRFUl9TUV9XQUtFVVAJKDFVIDw8IDEpCiAj
ZGVmaW5lIElPUklOR19FTlRFUl9TUV9XQUlUCSgxVSA8PCAyKQorI2RlZmluZSBJT1JJTkdf
RU5URVJfRVhUX0FSRwkoMVUgPDwgMykKIAogLyoKICAqIFBhc3NlZCBpbiBmb3IgaW9fdXJp
bmdfc2V0dXAoMikuIENvcGllZCBiYWNrIHdpdGggdXBkYXRlZCBpbmZvIG9uIHN1Y2Nlc3MK
QEAgLTI1Myw2ICsyODEsMTAgQEAgc3RydWN0IGlvX3VyaW5nX3BhcmFtcyB7CiAjZGVmaW5l
IElPUklOR19GRUFUX0NVUl9QRVJTT05BTElUWQkoMVUgPDwgNCkKICNkZWZpbmUgSU9SSU5H
X0ZFQVRfRkFTVF9QT0xMCQkoMVUgPDwgNSkKICNkZWZpbmUgSU9SSU5HX0ZFQVRfUE9MTF8z
MkJJVFMgCSgxVSA8PCA2KQorI2RlZmluZSBJT1JJTkdfRkVBVF9TUVBPTExfTk9ORklYRUQJ
KDFVIDw8IDcpCisjZGVmaW5lIElPUklOR19GRUFUX0VYVF9BUkcJCSgxVSA8PCA4KQorI2Rl
ZmluZSBJT1JJTkdfRkVBVF9OQVRJVkVfV09SS0VSUwkoMVUgPDwgOSkKKyNkZWZpbmUgSU9S
SU5HX0ZFQVRfUlNSQ19UQUdTCQkoMVUgPDwgMTApCiAKIC8qCiAgKiBpb191cmluZ19yZWdp
c3RlcigyKSBvcGNvZGVzIGFuZCBhcmd1bWVudHMKQEAgLTI3MiwxNiArMzA0LDYyIEBAIGVu
dW0gewogCUlPUklOR19SRUdJU1RFUl9SRVNUUklDVElPTlMJCT0gMTEsCiAJSU9SSU5HX1JF
R0lTVEVSX0VOQUJMRV9SSU5HUwkJPSAxMiwKIAorCS8qIGV4dGVuZGVkIHdpdGggdGFnZ2lu
ZyAqLworCUlPUklOR19SRUdJU1RFUl9GSUxFUzIJCQk9IDEzLAorCUlPUklOR19SRUdJU1RF
Ul9GSUxFU19VUERBVEUyCQk9IDE0LAorCUlPUklOR19SRUdJU1RFUl9CVUZGRVJTMgkJPSAx
NSwKKwlJT1JJTkdfUkVHSVNURVJfQlVGRkVSU19VUERBVEUJCT0gMTYsCisKKwkvKiBzZXQv
Y2xlYXIgaW8td3EgdGhyZWFkIGFmZmluaXRpZXMgKi8KKwlJT1JJTkdfUkVHSVNURVJfSU9X
UV9BRkYJCT0gMTcsCisJSU9SSU5HX1VOUkVHSVNURVJfSU9XUV9BRkYJCT0gMTgsCisKKwkv
KiBzZXQvZ2V0IG1heCBudW1iZXIgb2YgaW8td3Egd29ya2VycyAqLworCUlPUklOR19SRUdJ
U1RFUl9JT1dRX01BWF9XT1JLRVJTCT0gMTksCisKIAkvKiB0aGlzIGdvZXMgbGFzdCAqLwog
CUlPUklOR19SRUdJU1RFUl9MQVNUCiB9OwogCisvKiBpby13cSB3b3JrZXIgY2F0ZWdvcmll
cyAqLworZW51bSB7CisJSU9fV1FfQk9VTkQsCisJSU9fV1FfVU5CT1VORCwKK307CisKKy8q
IGRlcHJlY2F0ZWQsIHNlZSBzdHJ1Y3QgaW9fdXJpbmdfcnNyY191cGRhdGUgKi8KIHN0cnVj
dCBpb191cmluZ19maWxlc191cGRhdGUgewogCV9fdTMyIG9mZnNldDsKIAlfX3UzMiByZXN2
OwogCV9fYWxpZ25lZF91NjQgLyogX19zMzIgKiAqLyBmZHM7CiB9OwogCitzdHJ1Y3QgaW9f
dXJpbmdfcnNyY19yZWdpc3RlciB7CisJX191MzIgbnI7CisJX191MzIgcmVzdjsKKwlfX3U2
NCByZXN2MjsKKwlfX2FsaWduZWRfdTY0IGRhdGE7CisJX19hbGlnbmVkX3U2NCB0YWdzOwor
fTsKKworc3RydWN0IGlvX3VyaW5nX3JzcmNfdXBkYXRlIHsKKwlfX3UzMiBvZmZzZXQ7CisJ
X191MzIgcmVzdjsKKwlfX2FsaWduZWRfdTY0IGRhdGE7Cit9OworCitzdHJ1Y3QgaW9fdXJp
bmdfcnNyY191cGRhdGUyIHsKKwlfX3UzMiBvZmZzZXQ7CisJX191MzIgcmVzdjsKKwlfX2Fs
aWduZWRfdTY0IGRhdGE7CisJX19hbGlnbmVkX3U2NCB0YWdzOworCV9fdTMyIG5yOworCV9f
dTMyIHJlc3YyOworfTsKKworLyogU2tpcCB1cGRhdGluZyBmZCBpbmRleGVzIHNldCB0byB0
aGlzIHZhbHVlIGluIHRoZSBmZCB0YWJsZSAqLworI2RlZmluZSBJT1JJTkdfUkVHSVNURVJf
RklMRVNfU0tJUAkoLTIpCisKICNkZWZpbmUgSU9fVVJJTkdfT1BfU1VQUE9SVEVECSgxVSA8
PCAwKQogCiBzdHJ1Y3QgaW9fdXJpbmdfcHJvYmVfb3AgewpAQCAtMzI5LDQgKzQwNywxMSBA
QCBlbnVtIHsKIAlJT1JJTkdfUkVTVFJJQ1RJT05fTEFTVAogfTsKIAorc3RydWN0IGlvX3Vy
aW5nX2dldGV2ZW50c19hcmcgeworCV9fdTY0CXNpZ21hc2s7CisJX191MzIJc2lnbWFza19z
ejsKKwlfX3UzMglwYWQ7CisJX191NjQJdHM7Cit9OworCiAjZW5kaWYKZGlmZiAtLWdpdCBh
L2lvX3VyaW5nL01ha2VmaWxlIGIvaW9fdXJpbmcvTWFrZWZpbGUKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4zNjgwNDI1ZGY5NDcKLS0tIC9kZXYvbnVsbAor
KysgYi9pb191cmluZy9NYWtlZmlsZQpAQCAtMCwwICsxLDYgQEAKKyMgU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAKKyMKKyMgTWFrZWZpbGUgZm9yIGlvX3VyaW5nCisKK29i
ai0kKENPTkZJR19JT19VUklORykJCSs9IGlvX3VyaW5nLm8KK29iai0kKENPTkZJR19JT19X
USkJCSs9IGlvLXdxLm8KZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2lvLXdxLmMgYi9pb191cmlu
Zy9pby13cS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNjAz
MWZiMzE5ZDg3Ci0tLSAvZGV2L251bGwKKysrIGIvaW9fdXJpbmcvaW8td3EuYwpAQCAtMCww
ICsxLDEzOTggQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgor
ICogQmFzaWMgd29ya2VyIHRocmVhZCBwb29sIGZvciBpb191cmluZworICoKKyAqIENvcHly
aWdodCAoQykgMjAxOSBKZW5zIEF4Ym9lCisgKgorICovCisjaW5jbHVkZSA8bGludXgva2Vy
bmVsLmg+CisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUgPGxpbnV4L2Vycm5v
Lmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQvc2lnbmFsLmg+CisjaW5jbHVkZSA8bGludXgv
cGVyY3B1Lmg+CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L3Jj
dWxpc3RfbnVsbHMuaD4KKyNpbmNsdWRlIDxsaW51eC9jcHUuaD4KKyNpbmNsdWRlIDxsaW51
eC90cmFjZWhvb2suaD4KKyNpbmNsdWRlIDx1YXBpL2xpbnV4L2lvX3VyaW5nLmg+CisKKyNp
bmNsdWRlICJpby13cS5oIgorCisjZGVmaW5lIFdPUktFUl9JRExFX1RJTUVPVVQJKDUgKiBI
WikKKworZW51bSB7CisJSU9fV09SS0VSX0ZfVVAJCT0gMSwJLyogdXAgYW5kIGFjdGl2ZSAq
LworCUlPX1dPUktFUl9GX1JVTk5JTkcJPSAyLAkvKiBhY2NvdW50IGFzIHJ1bm5pbmcgKi8K
KwlJT19XT1JLRVJfRl9GUkVFCT0gNCwJLyogd29ya2VyIG9uIGZyZWUgbGlzdCAqLworCUlP
X1dPUktFUl9GX0JPVU5ECT0gOCwJLyogaXMgZG9pbmcgYm91bmRlZCB3b3JrICovCit9Owor
CitlbnVtIHsKKwlJT19XUV9CSVRfRVhJVAkJPSAwLAkvKiB3cSBleGl0aW5nICovCit9Owor
CitlbnVtIHsKKwlJT19BQ0NUX1NUQUxMRURfQklUCT0gMCwJLyogc3RhbGxlZCBvbiBoYXNo
ICovCit9OworCisvKgorICogT25lIGZvciBlYWNoIHRocmVhZCBpbiBhIHdxZSBwb29sCisg
Ki8KK3N0cnVjdCBpb193b3JrZXIgeworCXJlZmNvdW50X3QgcmVmOworCXVuc2lnbmVkIGZs
YWdzOworCXN0cnVjdCBobGlzdF9udWxsc19ub2RlIG51bGxzX25vZGU7CisJc3RydWN0IGxp
c3RfaGVhZCBhbGxfbGlzdDsKKwlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2s7CisJc3RydWN0
IGlvX3dxZSAqd3FlOworCisJc3RydWN0IGlvX3dxX3dvcmsgKmN1cl93b3JrOworCXNwaW5s
b2NrX3QgbG9jazsKKworCXN0cnVjdCBjb21wbGV0aW9uIHJlZl9kb25lOworCisJdW5zaWdu
ZWQgbG9uZyBjcmVhdGVfc3RhdGU7CisJc3RydWN0IGNhbGxiYWNrX2hlYWQgY3JlYXRlX3dv
cms7CisJaW50IGNyZWF0ZV9pbmRleDsKKworCXVuaW9uIHsKKwkJc3RydWN0IHJjdV9oZWFk
IHJjdTsKKwkJc3RydWN0IHdvcmtfc3RydWN0IHdvcms7CisJfTsKK307CisKKyNpZiBCSVRT
X1BFUl9MT05HID09IDY0CisjZGVmaW5lIElPX1dRX0hBU0hfT1JERVIJNgorI2Vsc2UKKyNk
ZWZpbmUgSU9fV1FfSEFTSF9PUkRFUgk1CisjZW5kaWYKKworI2RlZmluZSBJT19XUV9OUl9I
QVNIX0JVQ0tFVFMJKDF1IDw8IElPX1dRX0hBU0hfT1JERVIpCisKK3N0cnVjdCBpb193cWVf
YWNjdCB7CisJdW5zaWduZWQgbnJfd29ya2VyczsKKwl1bnNpZ25lZCBtYXhfd29ya2VyczsK
KwlpbnQgaW5kZXg7CisJYXRvbWljX3QgbnJfcnVubmluZzsKKwlzdHJ1Y3QgaW9fd3Ffd29y
a19saXN0IHdvcmtfbGlzdDsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworfTsKKworZW51bSB7
CisJSU9fV1FfQUNDVF9CT1VORCwKKwlJT19XUV9BQ0NUX1VOQk9VTkQsCisJSU9fV1FfQUND
VF9OUiwKK307CisKKy8qCisgKiBQZXItbm9kZSB3b3JrZXIgdGhyZWFkIHBvb2wKKyAqLwor
c3RydWN0IGlvX3dxZSB7CisJcmF3X3NwaW5sb2NrX3QgbG9jazsKKwlzdHJ1Y3QgaW9fd3Fl
X2FjY3QgYWNjdFsyXTsKKworCWludCBub2RlOworCisJc3RydWN0IGhsaXN0X251bGxzX2hl
YWQgZnJlZV9saXN0OworCXN0cnVjdCBsaXN0X2hlYWQgYWxsX2xpc3Q7CisKKwlzdHJ1Y3Qg
d2FpdF9xdWV1ZV9lbnRyeSB3YWl0OworCisJc3RydWN0IGlvX3dxICp3cTsKKwlzdHJ1Y3Qg
aW9fd3Ffd29yayAqaGFzaF90YWlsW0lPX1dRX05SX0hBU0hfQlVDS0VUU107CisKKwljcHVt
YXNrX3Zhcl90IGNwdV9tYXNrOworfTsKKworLyoKKyAqIFBlciBpb193cSBzdGF0ZQorICAq
Lworc3RydWN0IGlvX3dxIHsKKwl1bnNpZ25lZCBsb25nIHN0YXRlOworCisJZnJlZV93b3Jr
X2ZuICpmcmVlX3dvcms7CisJaW9fd3Ffd29ya19mbiAqZG9fd29yazsKKworCXN0cnVjdCBp
b193cV9oYXNoICpoYXNoOworCisJYXRvbWljX3Qgd29ya2VyX3JlZnM7CisJc3RydWN0IGNv
bXBsZXRpb24gd29ya2VyX2RvbmU7CisKKwlzdHJ1Y3QgaGxpc3Rfbm9kZSBjcHVocF9ub2Rl
OworCisJc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrOworCisJc3RydWN0IGlvX3dxZSAqd3Fl
c1tdOworfTsKKworc3RhdGljIGVudW0gY3B1aHBfc3RhdGUgaW9fd3Ffb25saW5lOworCitz
dHJ1Y3QgaW9fY2JfY2FuY2VsX2RhdGEgeworCXdvcmtfY2FuY2VsX2ZuICpmbjsKKwl2b2lk
ICpkYXRhOworCWludCBucl9ydW5uaW5nOworCWludCBucl9wZW5kaW5nOworCWJvb2wgY2Fu
Y2VsX2FsbDsKK307CisKK3N0YXRpYyBib29sIGNyZWF0ZV9pb193b3JrZXIoc3RydWN0IGlv
X3dxICp3cSwgc3RydWN0IGlvX3dxZSAqd3FlLCBpbnQgaW5kZXgpOworc3RhdGljIHZvaWQg
aW9fd3FlX2RlY19ydW5uaW5nKHN0cnVjdCBpb193b3JrZXIgKndvcmtlcik7CitzdGF0aWMg
Ym9vbCBpb19hY2N0X2NhbmNlbF9wZW5kaW5nX3dvcmsoc3RydWN0IGlvX3dxZSAqd3FlLAor
CQkJCQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QsCisJCQkJCXN0cnVjdCBpb19jYl9jYW5j
ZWxfZGF0YSAqbWF0Y2gpOworc3RhdGljIHZvaWQgY3JlYXRlX3dvcmtlcl9jYihzdHJ1Y3Qg
Y2FsbGJhY2tfaGVhZCAqY2IpOworc3RhdGljIHZvaWQgaW9fd3FfY2FuY2VsX3R3X2NyZWF0
ZShzdHJ1Y3QgaW9fd3EgKndxKTsKKworc3RhdGljIGJvb2wgaW9fd29ya2VyX2dldChzdHJ1
Y3QgaW9fd29ya2VyICp3b3JrZXIpCit7CisJcmV0dXJuIHJlZmNvdW50X2luY19ub3RfemVy
bygmd29ya2VyLT5yZWYpOworfQorCitzdGF0aWMgdm9pZCBpb193b3JrZXJfcmVsZWFzZShz
dHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIpCit7CisJaWYgKHJlZmNvdW50X2RlY19hbmRfdGVz
dCgmd29ya2VyLT5yZWYpKQorCQljb21wbGV0ZSgmd29ya2VyLT5yZWZfZG9uZSk7Cit9CisK
K3N0YXRpYyBpbmxpbmUgc3RydWN0IGlvX3dxZV9hY2N0ICppb19nZXRfYWNjdChzdHJ1Y3Qg
aW9fd3FlICp3cWUsIGJvb2wgYm91bmQpCit7CisJcmV0dXJuICZ3cWUtPmFjY3RbYm91bmQg
PyBJT19XUV9BQ0NUX0JPVU5EIDogSU9fV1FfQUNDVF9VTkJPVU5EXTsKK30KKworc3RhdGlj
IGlubGluZSBzdHJ1Y3QgaW9fd3FlX2FjY3QgKmlvX3dvcmtfZ2V0X2FjY3Qoc3RydWN0IGlv
X3dxZSAqd3FlLAorCQkJCQkJICAgc3RydWN0IGlvX3dxX3dvcmsgKndvcmspCit7CisJcmV0
dXJuIGlvX2dldF9hY2N0KHdxZSwgISh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfVU5CT1VO
RCkpOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpb193cWVfYWNjdCAqaW9fd3FlX2dl
dF9hY2N0KHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKK3sKKwlyZXR1cm4gaW9fZ2V0X2Fj
Y3Qod29ya2VyLT53cWUsIHdvcmtlci0+ZmxhZ3MgJiBJT19XT1JLRVJfRl9CT1VORCk7Cit9
CisKK3N0YXRpYyB2b2lkIGlvX3dvcmtlcl9yZWZfcHV0KHN0cnVjdCBpb193cSAqd3EpCit7
CisJaWYgKGF0b21pY19kZWNfYW5kX3Rlc3QoJndxLT53b3JrZXJfcmVmcykpCisJCWNvbXBs
ZXRlKCZ3cS0+d29ya2VyX2RvbmUpOworfQorCitzdGF0aWMgdm9pZCBpb193b3JrZXJfY2Fu
Y2VsX2NiKHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKK3sKKwlzdHJ1Y3QgaW9fd3FlX2Fj
Y3QgKmFjY3QgPSBpb193cWVfZ2V0X2FjY3Qod29ya2VyKTsKKwlzdHJ1Y3QgaW9fd3FlICp3
cWUgPSB3b3JrZXItPndxZTsKKwlzdHJ1Y3QgaW9fd3EgKndxID0gd3FlLT53cTsKKworCWF0
b21pY19kZWMoJmFjY3QtPm5yX3J1bm5pbmcpOworCXJhd19zcGluX2xvY2soJndvcmtlci0+
d3FlLT5sb2NrKTsKKwlhY2N0LT5ucl93b3JrZXJzLS07CisJcmF3X3NwaW5fdW5sb2NrKCZ3
b3JrZXItPndxZS0+bG9jayk7CisJaW9fd29ya2VyX3JlZl9wdXQod3EpOworCWNsZWFyX2Jp
dF91bmxvY2soMCwgJndvcmtlci0+Y3JlYXRlX3N0YXRlKTsKKwlpb193b3JrZXJfcmVsZWFz
ZSh3b3JrZXIpOworfQorCitzdGF0aWMgYm9vbCBpb190YXNrX3dvcmtlcl9tYXRjaChzdHJ1
Y3QgY2FsbGJhY2tfaGVhZCAqY2IsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGlvX3dvcmtl
ciAqd29ya2VyOworCisJaWYgKGNiLT5mdW5jICE9IGNyZWF0ZV93b3JrZXJfY2IpCisJCXJl
dHVybiBmYWxzZTsKKwl3b3JrZXIgPSBjb250YWluZXJfb2YoY2IsIHN0cnVjdCBpb193b3Jr
ZXIsIGNyZWF0ZV93b3JrKTsKKwlyZXR1cm4gd29ya2VyID09IGRhdGE7Cit9CisKK3N0YXRp
YyB2b2lkIGlvX3dvcmtlcl9leGl0KHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKK3sKKwlz
dHJ1Y3QgaW9fd3FlICp3cWUgPSB3b3JrZXItPndxZTsKKwlzdHJ1Y3QgaW9fd3EgKndxID0g
d3FlLT53cTsKKworCXdoaWxlICgxKSB7CisJCXN0cnVjdCBjYWxsYmFja19oZWFkICpjYiA9
IHRhc2tfd29ya19jYW5jZWxfbWF0Y2god3EtPnRhc2ssCisJCQkJCQlpb190YXNrX3dvcmtl
cl9tYXRjaCwgd29ya2VyKTsKKworCQlpZiAoIWNiKQorCQkJYnJlYWs7CisJCWlvX3dvcmtl
cl9jYW5jZWxfY2Iod29ya2VyKTsKKwl9CisKKwlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0
KCZ3b3JrZXItPnJlZikpCisJCWNvbXBsZXRlKCZ3b3JrZXItPnJlZl9kb25lKTsKKwl3YWl0
X2Zvcl9jb21wbGV0aW9uKCZ3b3JrZXItPnJlZl9kb25lKTsKKworCXJhd19zcGluX2xvY2so
JndxZS0+bG9jayk7CisJaWYgKHdvcmtlci0+ZmxhZ3MgJiBJT19XT1JLRVJfRl9GUkVFKQor
CQlobGlzdF9udWxsc19kZWxfcmN1KCZ3b3JrZXItPm51bGxzX25vZGUpOworCWxpc3RfZGVs
X3JjdSgmd29ya2VyLT5hbGxfbGlzdCk7CisJcHJlZW1wdF9kaXNhYmxlKCk7CisJaW9fd3Fl
X2RlY19ydW5uaW5nKHdvcmtlcik7CisJd29ya2VyLT5mbGFncyA9IDA7CisJY3VycmVudC0+
ZmxhZ3MgJj0gflBGX0lPX1dPUktFUjsKKwlwcmVlbXB0X2VuYWJsZSgpOworCXJhd19zcGlu
X3VubG9jaygmd3FlLT5sb2NrKTsKKworCWtmcmVlX3JjdSh3b3JrZXIsIHJjdSk7CisJaW9f
d29ya2VyX3JlZl9wdXQod3FlLT53cSk7CisJZG9fZXhpdCgwKTsKK30KKworc3RhdGljIGlu
bGluZSBib29sIGlvX2FjY3RfcnVuX3F1ZXVlKHN0cnVjdCBpb193cWVfYWNjdCAqYWNjdCkK
K3sKKwlpZiAoIXdxX2xpc3RfZW1wdHkoJmFjY3QtPndvcmtfbGlzdCkgJiYKKwkgICAgIXRl
c3RfYml0KElPX0FDQ1RfU1RBTExFRF9CSVQsICZhY2N0LT5mbGFncykpCisJCXJldHVybiB0
cnVlOworCXJldHVybiBmYWxzZTsKK30KKworLyoKKyAqIENoZWNrIGhlYWQgb2YgZnJlZSBs
aXN0IGZvciBhbiBhdmFpbGFibGUgd29ya2VyLiBJZiBvbmUgaXNuJ3QgYXZhaWxhYmxlLAor
ICogY2FsbGVyIG11c3QgY3JlYXRlIG9uZS4KKyAqLworc3RhdGljIGJvb2wgaW9fd3FlX2Fj
dGl2YXRlX2ZyZWVfd29ya2VyKHN0cnVjdCBpb193cWUgKndxZSwKKwkJCQkJc3RydWN0IGlv
X3dxZV9hY2N0ICphY2N0KQorCV9fbXVzdF9ob2xkKFJDVSkKK3sKKwlzdHJ1Y3QgaGxpc3Rf
bnVsbHNfbm9kZSAqbjsKKwlzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXI7CisKKwkvKgorCSAq
IEl0ZXJhdGUgZnJlZV9saXN0IGFuZCBzZWUgaWYgd2UgY2FuIGZpbmQgYW4gaWRsZSB3b3Jr
ZXIgdG8KKwkgKiBhY3RpdmF0ZS4gSWYgYSBnaXZlbiB3b3JrZXIgaXMgb24gdGhlIGZyZWVf
bGlzdCBidXQgaW4gdGhlIHByb2Nlc3MKKwkgKiBvZiBleGl0aW5nLCBrZWVwIHRyeWluZy4K
KwkgKi8KKwlobGlzdF9udWxsc19mb3JfZWFjaF9lbnRyeV9yY3Uod29ya2VyLCBuLCAmd3Fl
LT5mcmVlX2xpc3QsIG51bGxzX25vZGUpIHsKKwkJaWYgKCFpb193b3JrZXJfZ2V0KHdvcmtl
cikpCisJCQljb250aW51ZTsKKwkJaWYgKGlvX3dxZV9nZXRfYWNjdCh3b3JrZXIpICE9IGFj
Y3QpIHsKKwkJCWlvX3dvcmtlcl9yZWxlYXNlKHdvcmtlcik7CisJCQljb250aW51ZTsKKwkJ
fQorCQlpZiAod2FrZV91cF9wcm9jZXNzKHdvcmtlci0+dGFzaykpIHsKKwkJCWlvX3dvcmtl
cl9yZWxlYXNlKHdvcmtlcik7CisJCQlyZXR1cm4gdHJ1ZTsKKwkJfQorCQlpb193b3JrZXJf
cmVsZWFzZSh3b3JrZXIpOworCX0KKworCXJldHVybiBmYWxzZTsKK30KKworLyoKKyAqIFdl
IG5lZWQgYSB3b3JrZXIuIElmIHdlIGZpbmQgYSBmcmVlIG9uZSwgd2UncmUgZ29vZC4gSWYg
bm90LCBhbmQgd2UncmUKKyAqIGJlbG93IHRoZSBtYXggbnVtYmVyIG9mIHdvcmtlcnMsIGNy
ZWF0ZSBvbmUuCisgKi8KK3N0YXRpYyBib29sIGlvX3dxZV9jcmVhdGVfd29ya2VyKHN0cnVj
dCBpb193cWUgKndxZSwgc3RydWN0IGlvX3dxZV9hY2N0ICphY2N0KQoreworCS8qCisJICog
TW9zdCBsaWtlbHkgYW4gYXR0ZW1wdCB0byBxdWV1ZSB1bmJvdW5kZWQgd29yayBvbiBhbiBp
b193cSB0aGF0CisJICogd2Fzbid0IHNldHVwIHdpdGggYW55IHVuYm91bmRlZCB3b3JrZXJz
LgorCSAqLworCWlmICh1bmxpa2VseSghYWNjdC0+bWF4X3dvcmtlcnMpKQorCQlwcl93YXJu
X29uY2UoImlvLXdxIGlzIG5vdCBjb25maWd1cmVkIGZvciB1bmJvdW5kIHdvcmtlcnMiKTsK
KworCXJhd19zcGluX2xvY2soJndxZS0+bG9jayk7CisJaWYgKGFjY3QtPm5yX3dvcmtlcnMg
Pj0gYWNjdC0+bWF4X3dvcmtlcnMpIHsKKwkJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2sp
OworCQlyZXR1cm4gdHJ1ZTsKKwl9CisJYWNjdC0+bnJfd29ya2VycysrOworCXJhd19zcGlu
X3VubG9jaygmd3FlLT5sb2NrKTsKKwlhdG9taWNfaW5jKCZhY2N0LT5ucl9ydW5uaW5nKTsK
KwlhdG9taWNfaW5jKCZ3cWUtPndxLT53b3JrZXJfcmVmcyk7CisJcmV0dXJuIGNyZWF0ZV9p
b193b3JrZXIod3FlLT53cSwgd3FlLCBhY2N0LT5pbmRleCk7Cit9CisKK3N0YXRpYyB2b2lk
IGlvX3dxZV9pbmNfcnVubmluZyhzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIpCit7CisJc3Ry
dWN0IGlvX3dxZV9hY2N0ICphY2N0ID0gaW9fd3FlX2dldF9hY2N0KHdvcmtlcik7CisKKwlh
dG9taWNfaW5jKCZhY2N0LT5ucl9ydW5uaW5nKTsKK30KKworc3RhdGljIHZvaWQgY3JlYXRl
X3dvcmtlcl9jYihzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqY2IpCit7CisJc3RydWN0IGlvX3dv
cmtlciAqd29ya2VyOworCXN0cnVjdCBpb193cSAqd3E7CisJc3RydWN0IGlvX3dxZSAqd3Fl
OworCXN0cnVjdCBpb193cWVfYWNjdCAqYWNjdDsKKwlib29sIGRvX2NyZWF0ZSA9IGZhbHNl
OworCisJd29ya2VyID0gY29udGFpbmVyX29mKGNiLCBzdHJ1Y3QgaW9fd29ya2VyLCBjcmVh
dGVfd29yayk7CisJd3FlID0gd29ya2VyLT53cWU7CisJd3EgPSB3cWUtPndxOworCWFjY3Qg
PSAmd3FlLT5hY2N0W3dvcmtlci0+Y3JlYXRlX2luZGV4XTsKKwlyYXdfc3Bpbl9sb2NrKCZ3
cWUtPmxvY2spOworCWlmIChhY2N0LT5ucl93b3JrZXJzIDwgYWNjdC0+bWF4X3dvcmtlcnMp
IHsKKwkJYWNjdC0+bnJfd29ya2VycysrOworCQlkb19jcmVhdGUgPSB0cnVlOworCX0KKwly
YXdfc3Bpbl91bmxvY2soJndxZS0+bG9jayk7CisJaWYgKGRvX2NyZWF0ZSkgeworCQljcmVh
dGVfaW9fd29ya2VyKHdxLCB3cWUsIHdvcmtlci0+Y3JlYXRlX2luZGV4KTsKKwl9IGVsc2Ug
eworCQlhdG9taWNfZGVjKCZhY2N0LT5ucl9ydW5uaW5nKTsKKwkJaW9fd29ya2VyX3JlZl9w
dXQod3EpOworCX0KKwljbGVhcl9iaXRfdW5sb2NrKDAsICZ3b3JrZXItPmNyZWF0ZV9zdGF0
ZSk7CisJaW9fd29ya2VyX3JlbGVhc2Uod29ya2VyKTsKK30KKworc3RhdGljIGJvb2wgaW9f
cXVldWVfd29ya2VyX2NyZWF0ZShzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIsCisJCQkJICAg
c3RydWN0IGlvX3dxZV9hY2N0ICphY2N0LAorCQkJCSAgIHRhc2tfd29ya19mdW5jX3QgZnVu
YykKK3sKKwlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3b3JrZXItPndxZTsKKwlzdHJ1Y3QgaW9f
d3EgKndxID0gd3FlLT53cTsKKworCS8qIHJhY2VkIHdpdGggZXhpdCwganVzdCBpZ25vcmUg
Y3JlYXRlIGNhbGwgKi8KKwlpZiAodGVzdF9iaXQoSU9fV1FfQklUX0VYSVQsICZ3cS0+c3Rh
dGUpKQorCQlnb3RvIGZhaWw7CisJaWYgKCFpb193b3JrZXJfZ2V0KHdvcmtlcikpCisJCWdv
dG8gZmFpbDsKKwkvKgorCSAqIGNyZWF0ZV9zdGF0ZSBtYW5hZ2VzIG93bmVyc2hpcCBvZiBj
cmVhdGVfd29yay9pbmRleC4gV2Ugc2hvdWxkCisJICogb25seSBuZWVkIG9uZSBlbnRyeSBw
ZXIgd29ya2VyLCBhcyB0aGUgd29ya2VyIGdvaW5nIHRvIHNsZWVwCisJICogd2lsbCB0cmln
Z2VyIHRoZSBjb25kaXRpb24sIGFuZCB3YWtpbmcgd2lsbCBjbGVhciBpdCBvbmNlIGl0CisJ
ICogcnVucyB0aGUgdGFza193b3JrLgorCSAqLworCWlmICh0ZXN0X2JpdCgwLCAmd29ya2Vy
LT5jcmVhdGVfc3RhdGUpIHx8CisJICAgIHRlc3RfYW5kX3NldF9iaXRfbG9jaygwLCAmd29y
a2VyLT5jcmVhdGVfc3RhdGUpKQorCQlnb3RvIGZhaWxfcmVsZWFzZTsKKworCWF0b21pY19p
bmMoJndxLT53b3JrZXJfcmVmcyk7CisJaW5pdF90YXNrX3dvcmsoJndvcmtlci0+Y3JlYXRl
X3dvcmssIGZ1bmMpOworCXdvcmtlci0+Y3JlYXRlX2luZGV4ID0gYWNjdC0+aW5kZXg7CisJ
aWYgKCF0YXNrX3dvcmtfYWRkKHdxLT50YXNrLCAmd29ya2VyLT5jcmVhdGVfd29yaywgVFdB
X1NJR05BTCkpIHsKKwkJLyoKKwkJICogRVhJVCBtYXkgaGF2ZSBiZWVuIHNldCBhZnRlciBj
aGVja2luZyBpdCBhYm92ZSwgY2hlY2sgYWZ0ZXIKKwkJICogYWRkaW5nIHRoZSB0YXNrX3dv
cmsgYW5kIHJlbW92ZSBhbnkgY3JlYXRpb24gaXRlbSBpZiBpdCBpcworCQkgKiBub3cgc2V0
LiB3cSBleGl0IGRvZXMgdGhhdCB0b28sIGJ1dCB3ZSBjYW4gaGF2ZSBhZGRlZCB0aGlzCisJ
CSAqIHdvcmsgaXRlbSBhZnRlciB3ZSBjYW5jZWxlZCBpbiBpb193cV9leGl0X3dvcmtlcnMo
KS4KKwkJICovCisJCWlmICh0ZXN0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0ZSkp
CisJCQlpb193cV9jYW5jZWxfdHdfY3JlYXRlKHdxKTsKKwkJaW9fd29ya2VyX3JlZl9wdXQo
d3EpOworCQlyZXR1cm4gdHJ1ZTsKKwl9CisJaW9fd29ya2VyX3JlZl9wdXQod3EpOworCWNs
ZWFyX2JpdF91bmxvY2soMCwgJndvcmtlci0+Y3JlYXRlX3N0YXRlKTsKK2ZhaWxfcmVsZWFz
ZToKKwlpb193b3JrZXJfcmVsZWFzZSh3b3JrZXIpOworZmFpbDoKKwlhdG9taWNfZGVjKCZh
Y2N0LT5ucl9ydW5uaW5nKTsKKwlpb193b3JrZXJfcmVmX3B1dCh3cSk7CisJcmV0dXJuIGZh
bHNlOworfQorCitzdGF0aWMgdm9pZCBpb193cWVfZGVjX3J1bm5pbmcoc3RydWN0IGlvX3dv
cmtlciAqd29ya2VyKQorCV9fbXVzdF9ob2xkKHdxZS0+bG9jaykKK3sKKwlzdHJ1Y3QgaW9f
d3FlX2FjY3QgKmFjY3QgPSBpb193cWVfZ2V0X2FjY3Qod29ya2VyKTsKKwlzdHJ1Y3QgaW9f
d3FlICp3cWUgPSB3b3JrZXItPndxZTsKKworCWlmICghKHdvcmtlci0+ZmxhZ3MgJiBJT19X
T1JLRVJfRl9VUCkpCisJCXJldHVybjsKKworCWlmIChhdG9taWNfZGVjX2FuZF90ZXN0KCZh
Y2N0LT5ucl9ydW5uaW5nKSAmJiBpb19hY2N0X3J1bl9xdWV1ZShhY2N0KSkgeworCQlhdG9t
aWNfaW5jKCZhY2N0LT5ucl9ydW5uaW5nKTsKKwkJYXRvbWljX2luYygmd3FlLT53cS0+d29y
a2VyX3JlZnMpOworCQlyYXdfc3Bpbl91bmxvY2soJndxZS0+bG9jayk7CisJCWlvX3F1ZXVl
X3dvcmtlcl9jcmVhdGUod29ya2VyLCBhY2N0LCBjcmVhdGVfd29ya2VyX2NiKTsKKwkJcmF3
X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwl9Cit9CisKKy8qCisgKiBXb3JrZXIgd2lsbCBz
dGFydCBwcm9jZXNzaW5nIHNvbWUgd29yay4gTW92ZSBpdCB0byB0aGUgYnVzeSBsaXN0LCBp
ZgorICogaXQncyBjdXJyZW50bHkgb24gdGhlIGZyZWVsaXN0CisgKi8KK3N0YXRpYyB2b2lk
IF9faW9fd29ya2VyX2J1c3koc3RydWN0IGlvX3dxZSAqd3FlLCBzdHJ1Y3QgaW9fd29ya2Vy
ICp3b3JrZXIsCisJCQkgICAgIHN0cnVjdCBpb193cV93b3JrICp3b3JrKQorCV9fbXVzdF9o
b2xkKHdxZS0+bG9jaykKK3sKKwlpZiAod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX0ZS
RUUpIHsKKwkJd29ya2VyLT5mbGFncyAmPSB+SU9fV09SS0VSX0ZfRlJFRTsKKwkJaGxpc3Rf
bnVsbHNfZGVsX2luaXRfcmN1KCZ3b3JrZXItPm51bGxzX25vZGUpOworCX0KK30KKworLyoK
KyAqIE5vIHdvcmssIHdvcmtlciBnb2luZyB0byBzbGVlcC4gTW92ZSB0byBmcmVlbGlzdCwg
YW5kIHVudXNlIG1tIGlmIHdlCisgKiBoYXZlIG9uZSBhdHRhY2hlZC4gRHJvcHBpbmcgdGhl
IG1tIG1heSBwb3RlbnRpYWxseSBzbGVlcCwgc28gd2UgZHJvcAorICogdGhlIGxvY2sgaW4g
dGhhdCBjYXNlIGFuZCByZXR1cm4gc3VjY2Vzcy4gU2luY2UgdGhlIGNhbGxlciBoYXMgdG8K
KyAqIHJldHJ5IHRoZSBsb29wIGluIHRoYXQgY2FzZSAod2UgY2hhbmdlZCB0YXNrIHN0YXRl
KSwgd2UgZG9uJ3QgcmVncmFiCisgKiB0aGUgbG9jayBpZiB3ZSByZXR1cm4gc3VjY2Vzcy4K
KyAqLworc3RhdGljIHZvaWQgX19pb193b3JrZXJfaWRsZShzdHJ1Y3QgaW9fd3FlICp3cWUs
IHN0cnVjdCBpb193b3JrZXIgKndvcmtlcikKKwlfX211c3RfaG9sZCh3cWUtPmxvY2spCit7
CisJaWYgKCEod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX0ZSRUUpKSB7CisJCXdvcmtl
ci0+ZmxhZ3MgfD0gSU9fV09SS0VSX0ZfRlJFRTsKKwkJaGxpc3RfbnVsbHNfYWRkX2hlYWRf
cmN1KCZ3b3JrZXItPm51bGxzX25vZGUsICZ3cWUtPmZyZWVfbGlzdCk7CisJfQorfQorCitz
dGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBpb19nZXRfd29ya19oYXNoKHN0cnVjdCBpb193
cV93b3JrICp3b3JrKQoreworCXJldHVybiB3b3JrLT5mbGFncyA+PiBJT19XUV9IQVNIX1NI
SUZUOworfQorCitzdGF0aWMgYm9vbCBpb193YWl0X29uX2hhc2goc3RydWN0IGlvX3dxZSAq
d3FlLCB1bnNpZ25lZCBpbnQgaGFzaCkKK3sKKwlzdHJ1Y3QgaW9fd3EgKndxID0gd3FlLT53
cTsKKwlib29sIHJldCA9IGZhbHNlOworCisJc3Bpbl9sb2NrX2lycSgmd3EtPmhhc2gtPndh
aXQubG9jayk7CisJaWYgKGxpc3RfZW1wdHkoJndxZS0+d2FpdC5lbnRyeSkpIHsKKwkJX19h
ZGRfd2FpdF9xdWV1ZSgmd3EtPmhhc2gtPndhaXQsICZ3cWUtPndhaXQpOworCQlpZiAoIXRl
c3RfYml0KGhhc2gsICZ3cS0+aGFzaC0+bWFwKSkgeworCQkJX19zZXRfY3VycmVudF9zdGF0
ZShUQVNLX1JVTk5JTkcpOworCQkJbGlzdF9kZWxfaW5pdCgmd3FlLT53YWl0LmVudHJ5KTsK
KwkJCXJldCA9IHRydWU7CisJCX0KKwl9CisJc3Bpbl91bmxvY2tfaXJxKCZ3cS0+aGFzaC0+
d2FpdC5sb2NrKTsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgc3RydWN0IGlvX3dxX3dv
cmsgKmlvX2dldF9uZXh0X3dvcmsoc3RydWN0IGlvX3dxZV9hY2N0ICphY2N0LAorCQkJCQkg
ICBzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIpCisJX19tdXN0X2hvbGQod3FlLT5sb2NrKQor
eworCXN0cnVjdCBpb193cV93b3JrX25vZGUgKm5vZGUsICpwcmV2OworCXN0cnVjdCBpb193
cV93b3JrICp3b3JrLCAqdGFpbDsKKwl1bnNpZ25lZCBpbnQgc3RhbGxfaGFzaCA9IC0xVTsK
KwlzdHJ1Y3QgaW9fd3FlICp3cWUgPSB3b3JrZXItPndxZTsKKworCXdxX2xpc3RfZm9yX2Vh
Y2gobm9kZSwgcHJldiwgJmFjY3QtPndvcmtfbGlzdCkgeworCQl1bnNpZ25lZCBpbnQgaGFz
aDsKKworCQl3b3JrID0gY29udGFpbmVyX29mKG5vZGUsIHN0cnVjdCBpb193cV93b3JrLCBs
aXN0KTsKKworCQkvKiBub3QgaGFzaGVkLCBjYW4gcnVuIGFueXRpbWUgKi8KKwkJaWYgKCFp
b193cV9pc19oYXNoZWQod29yaykpIHsKKwkJCXdxX2xpc3RfZGVsKCZhY2N0LT53b3JrX2xp
c3QsIG5vZGUsIHByZXYpOworCQkJcmV0dXJuIHdvcms7CisJCX0KKworCQloYXNoID0gaW9f
Z2V0X3dvcmtfaGFzaCh3b3JrKTsKKwkJLyogYWxsIGl0ZW1zIHdpdGggdGhpcyBoYXNoIGxp
ZSBpbiBbd29yaywgdGFpbF0gKi8KKwkJdGFpbCA9IHdxZS0+aGFzaF90YWlsW2hhc2hdOwor
CisJCS8qIGhhc2hlZCwgY2FuIHJ1biBpZiBub3QgYWxyZWFkeSBydW5uaW5nICovCisJCWlm
ICghdGVzdF9hbmRfc2V0X2JpdChoYXNoLCAmd3FlLT53cS0+aGFzaC0+bWFwKSkgeworCQkJ
d3FlLT5oYXNoX3RhaWxbaGFzaF0gPSBOVUxMOworCQkJd3FfbGlzdF9jdXQoJmFjY3QtPndv
cmtfbGlzdCwgJnRhaWwtPmxpc3QsIHByZXYpOworCQkJcmV0dXJuIHdvcms7CisJCX0KKwkJ
aWYgKHN0YWxsX2hhc2ggPT0gLTFVKQorCQkJc3RhbGxfaGFzaCA9IGhhc2g7CisJCS8qIGZh
c3QgZm9yd2FyZCB0byBhIG5leHQgaGFzaCwgZm9yLWVhY2ggd2lsbCBmaXggdXAgQHByZXYg
Ki8KKwkJbm9kZSA9ICZ0YWlsLT5saXN0OworCX0KKworCWlmIChzdGFsbF9oYXNoICE9IC0x
VSkgeworCQlib29sIHVuc3RhbGxlZDsKKworCQkvKgorCQkgKiBTZXQgdGhpcyBiZWZvcmUg
ZHJvcHBpbmcgdGhlIGxvY2sgdG8gYXZvaWQgcmFjaW5nIHdpdGggbmV3CisJCSAqIHdvcmsg
YmVpbmcgYWRkZWQgYW5kIGNsZWFyaW5nIHRoZSBzdGFsbGVkIGJpdC4KKwkJICovCisJCXNl
dF9iaXQoSU9fQUNDVF9TVEFMTEVEX0JJVCwgJmFjY3QtPmZsYWdzKTsKKwkJcmF3X3NwaW5f
dW5sb2NrKCZ3cWUtPmxvY2spOworCQl1bnN0YWxsZWQgPSBpb193YWl0X29uX2hhc2god3Fl
LCBzdGFsbF9oYXNoKTsKKwkJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwkJaWYgKHVu
c3RhbGxlZCkgeworCQkJY2xlYXJfYml0KElPX0FDQ1RfU1RBTExFRF9CSVQsICZhY2N0LT5m
bGFncyk7CisJCQlpZiAod3FfaGFzX3NsZWVwZXIoJndxZS0+d3EtPmhhc2gtPndhaXQpKQor
CQkJCXdha2VfdXAoJndxZS0+d3EtPmhhc2gtPndhaXQpOworCQl9CisJfQorCisJcmV0dXJu
IE5VTEw7Cit9CisKK3N0YXRpYyBib29sIGlvX2ZsdXNoX3NpZ25hbHModm9pZCkKK3sKKwlp
ZiAodW5saWtlbHkodGVzdF90aHJlYWRfZmxhZyhUSUZfTk9USUZZX1NJR05BTCkpKSB7CisJ
CV9fc2V0X2N1cnJlbnRfc3RhdGUoVEFTS19SVU5OSU5HKTsKKwkJdHJhY2Vob29rX25vdGlm
eV9zaWduYWwoKTsKKwkJcmV0dXJuIHRydWU7CisJfQorCXJldHVybiBmYWxzZTsKK30KKwor
c3RhdGljIHZvaWQgaW9fYXNzaWduX2N1cnJlbnRfd29yayhzdHJ1Y3QgaW9fd29ya2VyICp3
b3JrZXIsCisJCQkJICAgc3RydWN0IGlvX3dxX3dvcmsgKndvcmspCit7CisJaWYgKHdvcmsp
IHsKKwkJaW9fZmx1c2hfc2lnbmFscygpOworCQljb25kX3Jlc2NoZWQoKTsKKwl9CisKKwlz
cGluX2xvY2soJndvcmtlci0+bG9jayk7CisJd29ya2VyLT5jdXJfd29yayA9IHdvcms7CisJ
c3Bpbl91bmxvY2soJndvcmtlci0+bG9jayk7Cit9CisKK3N0YXRpYyB2b2lkIGlvX3dxZV9l
bnF1ZXVlKHN0cnVjdCBpb193cWUgKndxZSwgc3RydWN0IGlvX3dxX3dvcmsgKndvcmspOwor
CitzdGF0aWMgdm9pZCBpb193b3JrZXJfaGFuZGxlX3dvcmsoc3RydWN0IGlvX3dvcmtlciAq
d29ya2VyKQorCV9fcmVsZWFzZXMod3FlLT5sb2NrKQoreworCXN0cnVjdCBpb193cWVfYWNj
dCAqYWNjdCA9IGlvX3dxZV9nZXRfYWNjdCh3b3JrZXIpOworCXN0cnVjdCBpb193cWUgKndx
ZSA9IHdvcmtlci0+d3FlOworCXN0cnVjdCBpb193cSAqd3EgPSB3cWUtPndxOworCWJvb2wg
ZG9fa2lsbCA9IHRlc3RfYml0KElPX1dRX0JJVF9FWElULCAmd3EtPnN0YXRlKTsKKworCWRv
IHsKKwkJc3RydWN0IGlvX3dxX3dvcmsgKndvcms7CitnZXRfbmV4dDoKKwkJLyoKKwkJICog
SWYgd2UgZ290IHNvbWUgd29yaywgbWFyayB1cyBhcyBidXN5LiBJZiB3ZSBkaWRuJ3QsIGJ1
dAorCQkgKiB0aGUgbGlzdCBpc24ndCBlbXB0eSwgaXQgbWVhbnMgd2Ugc3RhbGxlZCBvbiBo
YXNoZWQgd29yay4KKwkJICogTWFyayB1cyBzdGFsbGVkIHNvIHdlIGRvbid0IGtlZXAgbG9v
a2luZyBmb3Igd29yayB3aGVuIHdlCisJCSAqIGNhbid0IG1ha2UgcHJvZ3Jlc3MsIGFueSB3
b3JrIGNvbXBsZXRpb24gb3IgaW5zZXJ0aW9uIHdpbGwKKwkJICogY2xlYXIgdGhlIHN0YWxs
ZWQgZmxhZy4KKwkJICovCisJCXdvcmsgPSBpb19nZXRfbmV4dF93b3JrKGFjY3QsIHdvcmtl
cik7CisJCWlmICh3b3JrKQorCQkJX19pb193b3JrZXJfYnVzeSh3cWUsIHdvcmtlciwgd29y
ayk7CisKKwkJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2spOworCQlpZiAoIXdvcmspCisJ
CQlicmVhazsKKwkJaW9fYXNzaWduX2N1cnJlbnRfd29yayh3b3JrZXIsIHdvcmspOworCQlf
X3NldF9jdXJyZW50X3N0YXRlKFRBU0tfUlVOTklORyk7CisKKwkJLyogaGFuZGxlIGEgd2hv
bGUgZGVwZW5kZW50IGxpbmsgKi8KKwkJZG8geworCQkJc3RydWN0IGlvX3dxX3dvcmsgKm5l
eHRfaGFzaGVkLCAqbGlua2VkOworCQkJdW5zaWduZWQgaW50IGhhc2ggPSBpb19nZXRfd29y
a19oYXNoKHdvcmspOworCisJCQluZXh0X2hhc2hlZCA9IHdxX25leHRfd29yayh3b3JrKTsK
KworCQkJaWYgKHVubGlrZWx5KGRvX2tpbGwpICYmICh3b3JrLT5mbGFncyAmIElPX1dRX1dP
UktfVU5CT1VORCkpCisJCQkJd29yay0+ZmxhZ3MgfD0gSU9fV1FfV09SS19DQU5DRUw7CisJ
CQl3cS0+ZG9fd29yayh3b3JrKTsKKwkJCWlvX2Fzc2lnbl9jdXJyZW50X3dvcmsod29ya2Vy
LCBOVUxMKTsKKworCQkJbGlua2VkID0gd3EtPmZyZWVfd29yayh3b3JrKTsKKwkJCXdvcmsg
PSBuZXh0X2hhc2hlZDsKKwkJCWlmICghd29yayAmJiBsaW5rZWQgJiYgIWlvX3dxX2lzX2hh
c2hlZChsaW5rZWQpKSB7CisJCQkJd29yayA9IGxpbmtlZDsKKwkJCQlsaW5rZWQgPSBOVUxM
OworCQkJfQorCQkJaW9fYXNzaWduX2N1cnJlbnRfd29yayh3b3JrZXIsIHdvcmspOworCQkJ
aWYgKGxpbmtlZCkKKwkJCQlpb193cWVfZW5xdWV1ZSh3cWUsIGxpbmtlZCk7CisKKwkJCWlm
IChoYXNoICE9IC0xVSAmJiAhbmV4dF9oYXNoZWQpIHsKKwkJCQkvKiBzZXJpYWxpemUgaGFz
aCBjbGVhciB3aXRoIHdha2VfdXAoKSAqLworCQkJCXNwaW5fbG9ja19pcnEoJndxLT5oYXNo
LT53YWl0LmxvY2spOworCQkJCWNsZWFyX2JpdChoYXNoLCAmd3EtPmhhc2gtPm1hcCk7CisJ
CQkJY2xlYXJfYml0KElPX0FDQ1RfU1RBTExFRF9CSVQsICZhY2N0LT5mbGFncyk7CisJCQkJ
c3Bpbl91bmxvY2tfaXJxKCZ3cS0+aGFzaC0+d2FpdC5sb2NrKTsKKwkJCQlpZiAod3FfaGFz
X3NsZWVwZXIoJndxLT5oYXNoLT53YWl0KSkKKwkJCQkJd2FrZV91cCgmd3EtPmhhc2gtPndh
aXQpOworCQkJCXJhd19zcGluX2xvY2soJndxZS0+bG9jayk7CisJCQkJLyogc2tpcCB1bm5l
Y2Vzc2FyeSB1bmxvY2stbG9jayB3cWUtPmxvY2sgKi8KKwkJCQlpZiAoIXdvcmspCisJCQkJ
CWdvdG8gZ2V0X25leHQ7CisJCQkJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2spOworCQkJ
fQorCQl9IHdoaWxlICh3b3JrKTsKKworCQlyYXdfc3Bpbl9sb2NrKCZ3cWUtPmxvY2spOwor
CX0gd2hpbGUgKDEpOworfQorCitzdGF0aWMgaW50IGlvX3dxZV93b3JrZXIodm9pZCAqZGF0
YSkKK3sKKwlzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIgPSBkYXRhOworCXN0cnVjdCBpb193
cWVfYWNjdCAqYWNjdCA9IGlvX3dxZV9nZXRfYWNjdCh3b3JrZXIpOworCXN0cnVjdCBpb193
cWUgKndxZSA9IHdvcmtlci0+d3FlOworCXN0cnVjdCBpb193cSAqd3EgPSB3cWUtPndxOwor
CWJvb2wgbGFzdF90aW1lb3V0ID0gZmFsc2U7CisJY2hhciBidWZbVEFTS19DT01NX0xFTl07
CisKKwl3b3JrZXItPmZsYWdzIHw9IChJT19XT1JLRVJfRl9VUCB8IElPX1dPUktFUl9GX1JV
Tk5JTkcpOworCisJc25wcmludGYoYnVmLCBzaXplb2YoYnVmKSwgImlvdS13cmstJWQiLCB3
cS0+dGFzay0+cGlkKTsKKwlzZXRfdGFza19jb21tKGN1cnJlbnQsIGJ1Zik7CisKKwl3aGls
ZSAoIXRlc3RfYml0KElPX1dRX0JJVF9FWElULCAmd3EtPnN0YXRlKSkgeworCQlsb25nIHJl
dDsKKworCQlzZXRfY3VycmVudF9zdGF0ZShUQVNLX0lOVEVSUlVQVElCTEUpOworbG9vcDoK
KwkJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwkJaWYgKGlvX2FjY3RfcnVuX3F1ZXVl
KGFjY3QpKSB7CisJCQlpb193b3JrZXJfaGFuZGxlX3dvcmsod29ya2VyKTsKKwkJCWdvdG8g
bG9vcDsKKwkJfQorCQkvKiB0aW1lZCBvdXQsIGV4aXQgdW5sZXNzIHdlJ3JlIHRoZSBsYXN0
IHdvcmtlciAqLworCQlpZiAobGFzdF90aW1lb3V0ICYmIGFjY3QtPm5yX3dvcmtlcnMgPiAx
KSB7CisJCQlhY2N0LT5ucl93b3JrZXJzLS07CisJCQlyYXdfc3Bpbl91bmxvY2soJndxZS0+
bG9jayk7CisJCQlfX3NldF9jdXJyZW50X3N0YXRlKFRBU0tfUlVOTklORyk7CisJCQlicmVh
azsKKwkJfQorCQlsYXN0X3RpbWVvdXQgPSBmYWxzZTsKKwkJX19pb193b3JrZXJfaWRsZSh3
cWUsIHdvcmtlcik7CisJCXJhd19zcGluX3VubG9jaygmd3FlLT5sb2NrKTsKKwkJaWYgKGlv
X2ZsdXNoX3NpZ25hbHMoKSkKKwkJCWNvbnRpbnVlOworCQlyZXQgPSBzY2hlZHVsZV90aW1l
b3V0KFdPUktFUl9JRExFX1RJTUVPVVQpOworCQlpZiAoc2lnbmFsX3BlbmRpbmcoY3VycmVu
dCkpIHsKKwkJCXN0cnVjdCBrc2lnbmFsIGtzaWc7CisKKwkJCWlmICghZ2V0X3NpZ25hbCgm
a3NpZykpCisJCQkJY29udGludWU7CisJCQlicmVhazsKKwkJfQorCQlsYXN0X3RpbWVvdXQg
PSAhcmV0OworCX0KKworCWlmICh0ZXN0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0
ZSkpIHsKKwkJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwkJaW9fd29ya2VyX2hhbmRs
ZV93b3JrKHdvcmtlcik7CisJfQorCisJaW9fd29ya2VyX2V4aXQod29ya2VyKTsKKwlyZXR1
cm4gMDsKK30KKworLyoKKyAqIENhbGxlZCB3aGVuIGEgd29ya2VyIGlzIHNjaGVkdWxlZCBp
bi4gTWFyayB1cyBhcyBjdXJyZW50bHkgcnVubmluZy4KKyAqLwordm9pZCBpb193cV93b3Jr
ZXJfcnVubmluZyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKK3sKKwlzdHJ1Y3QgaW9fd29y
a2VyICp3b3JrZXIgPSB0c2stPnBmX2lvX3dvcmtlcjsKKworCWlmICghd29ya2VyKQorCQly
ZXR1cm47CisJaWYgKCEod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX1VQKSkKKwkJcmV0
dXJuOworCWlmICh3b3JrZXItPmZsYWdzICYgSU9fV09SS0VSX0ZfUlVOTklORykKKwkJcmV0
dXJuOworCXdvcmtlci0+ZmxhZ3MgfD0gSU9fV09SS0VSX0ZfUlVOTklORzsKKwlpb193cWVf
aW5jX3J1bm5pbmcod29ya2VyKTsKK30KKworLyoKKyAqIENhbGxlZCB3aGVuIHdvcmtlciBp
cyBnb2luZyB0byBzbGVlcC4gSWYgdGhlcmUgYXJlIG5vIHdvcmtlcnMgY3VycmVudGx5Cisg
KiBydW5uaW5nIGFuZCB3ZSBoYXZlIHdvcmsgcGVuZGluZywgd2FrZSB1cCBhIGZyZWUgb25l
IG9yIGNyZWF0ZSBhIG5ldyBvbmUuCisgKi8KK3ZvaWQgaW9fd3Ffd29ya2VyX3NsZWVwaW5n
KHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrKQoreworCXN0cnVjdCBpb193b3JrZXIgKndvcmtl
ciA9IHRzay0+cGZfaW9fd29ya2VyOworCisJaWYgKCF3b3JrZXIpCisJCXJldHVybjsKKwlp
ZiAoISh3b3JrZXItPmZsYWdzICYgSU9fV09SS0VSX0ZfVVApKQorCQlyZXR1cm47CisJaWYg
KCEod29ya2VyLT5mbGFncyAmIElPX1dPUktFUl9GX1JVTk5JTkcpKQorCQlyZXR1cm47CisK
Kwl3b3JrZXItPmZsYWdzICY9IH5JT19XT1JLRVJfRl9SVU5OSU5HOworCisJcmF3X3NwaW5f
bG9jaygmd29ya2VyLT53cWUtPmxvY2spOworCWlvX3dxZV9kZWNfcnVubmluZyh3b3JrZXIp
OworCXJhd19zcGluX3VubG9jaygmd29ya2VyLT53cWUtPmxvY2spOworfQorCitzdGF0aWMg
dm9pZCBpb19pbml0X25ld193b3JrZXIoc3RydWN0IGlvX3dxZSAqd3FlLCBzdHJ1Y3QgaW9f
d29ya2VyICp3b3JrZXIsCisJCQkgICAgICAgc3RydWN0IHRhc2tfc3RydWN0ICp0c2spCit7
CisJdHNrLT5wZl9pb193b3JrZXIgPSB3b3JrZXI7CisJd29ya2VyLT50YXNrID0gdHNrOwor
CXNldF9jcHVzX2FsbG93ZWRfcHRyKHRzaywgd3FlLT5jcHVfbWFzayk7CisJdHNrLT5mbGFn
cyB8PSBQRl9OT19TRVRBRkZJTklUWTsKKworCXJhd19zcGluX2xvY2soJndxZS0+bG9jayk7
CisJaGxpc3RfbnVsbHNfYWRkX2hlYWRfcmN1KCZ3b3JrZXItPm51bGxzX25vZGUsICZ3cWUt
PmZyZWVfbGlzdCk7CisJbGlzdF9hZGRfdGFpbF9yY3UoJndvcmtlci0+YWxsX2xpc3QsICZ3
cWUtPmFsbF9saXN0KTsKKwl3b3JrZXItPmZsYWdzIHw9IElPX1dPUktFUl9GX0ZSRUU7CisJ
cmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2spOworCXdha2VfdXBfbmV3X3Rhc2sodHNrKTsK
K30KKworc3RhdGljIGJvb2wgaW9fd3Ffd29ya19tYXRjaF9hbGwoc3RydWN0IGlvX3dxX3dv
cmsgKndvcmssIHZvaWQgKmRhdGEpCit7CisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRpYyBp
bmxpbmUgYm9vbCBpb19zaG91bGRfcmV0cnlfdGhyZWFkKGxvbmcgZXJyKQoreworCS8qCisJ
ICogUHJldmVudCBwZXJwZXR1YWwgdGFza193b3JrIHJldHJ5LCBpZiB0aGUgdGFzayAob3Ig
aXRzIGdyb3VwKSBpcworCSAqIGV4aXRpbmcuCisJICovCisJaWYgKGZhdGFsX3NpZ25hbF9w
ZW5kaW5nKGN1cnJlbnQpKQorCQlyZXR1cm4gZmFsc2U7CisKKwlzd2l0Y2ggKGVycikgewor
CWNhc2UgLUVBR0FJTjoKKwljYXNlIC1FUkVTVEFSVFNZUzoKKwljYXNlIC1FUkVTVEFSVE5P
SU5UUjoKKwljYXNlIC1FUkVTVEFSVE5PSEFORDoKKwkJcmV0dXJuIHRydWU7CisJZGVmYXVs
dDoKKwkJcmV0dXJuIGZhbHNlOworCX0KK30KKworc3RhdGljIHZvaWQgY3JlYXRlX3dvcmtl
cl9jb250KHN0cnVjdCBjYWxsYmFja19oZWFkICpjYikKK3sKKwlzdHJ1Y3QgaW9fd29ya2Vy
ICp3b3JrZXI7CisJc3RydWN0IHRhc2tfc3RydWN0ICp0c2s7CisJc3RydWN0IGlvX3dxZSAq
d3FlOworCisJd29ya2VyID0gY29udGFpbmVyX29mKGNiLCBzdHJ1Y3QgaW9fd29ya2VyLCBj
cmVhdGVfd29yayk7CisJY2xlYXJfYml0X3VubG9jaygwLCAmd29ya2VyLT5jcmVhdGVfc3Rh
dGUpOworCXdxZSA9IHdvcmtlci0+d3FlOworCXRzayA9IGNyZWF0ZV9pb190aHJlYWQoaW9f
d3FlX3dvcmtlciwgd29ya2VyLCB3cWUtPm5vZGUpOworCWlmICghSVNfRVJSKHRzaykpIHsK
KwkJaW9faW5pdF9uZXdfd29ya2VyKHdxZSwgd29ya2VyLCB0c2spOworCQlpb193b3JrZXJf
cmVsZWFzZSh3b3JrZXIpOworCQlyZXR1cm47CisJfSBlbHNlIGlmICghaW9fc2hvdWxkX3Jl
dHJ5X3RocmVhZChQVFJfRVJSKHRzaykpKSB7CisJCXN0cnVjdCBpb193cWVfYWNjdCAqYWNj
dCA9IGlvX3dxZV9nZXRfYWNjdCh3b3JrZXIpOworCisJCWF0b21pY19kZWMoJmFjY3QtPm5y
X3J1bm5pbmcpOworCQlyYXdfc3Bpbl9sb2NrKCZ3cWUtPmxvY2spOworCQlhY2N0LT5ucl93
b3JrZXJzLS07CisJCWlmICghYWNjdC0+bnJfd29ya2VycykgeworCQkJc3RydWN0IGlvX2Ni
X2NhbmNlbF9kYXRhIG1hdGNoID0geworCQkJCS5mbgkJPSBpb193cV93b3JrX21hdGNoX2Fs
bCwKKwkJCQkuY2FuY2VsX2FsbAk9IHRydWUsCisJCQl9OworCisJCQl3aGlsZSAoaW9fYWNj
dF9jYW5jZWxfcGVuZGluZ193b3JrKHdxZSwgYWNjdCwgJm1hdGNoKSkKKwkJCQlyYXdfc3Bp
bl9sb2NrKCZ3cWUtPmxvY2spOworCQl9CisJCXJhd19zcGluX3VubG9jaygmd3FlLT5sb2Nr
KTsKKwkJaW9fd29ya2VyX3JlZl9wdXQod3FlLT53cSk7CisJCWtmcmVlKHdvcmtlcik7CisJ
CXJldHVybjsKKwl9CisKKwkvKiByZS1jcmVhdGUgYXR0ZW1wdHMgZ3JhYiBhIG5ldyB3b3Jr
ZXIgcmVmLCBkcm9wIHRoZSBleGlzdGluZyBvbmUgKi8KKwlpb193b3JrZXJfcmVsZWFzZSh3
b3JrZXIpOworCXNjaGVkdWxlX3dvcmsoJndvcmtlci0+d29yayk7Cit9CisKK3N0YXRpYyB2
b2lkIGlvX3dvcmtxdWV1ZV9jcmVhdGUoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQorewor
CXN0cnVjdCBpb193b3JrZXIgKndvcmtlciA9IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3Qg
aW9fd29ya2VyLCB3b3JrKTsKKwlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QgPSBpb193cWVf
Z2V0X2FjY3Qod29ya2VyKTsKKworCWlmICghaW9fcXVldWVfd29ya2VyX2NyZWF0ZSh3b3Jr
ZXIsIGFjY3QsIGNyZWF0ZV93b3JrZXJfY29udCkpCisJCWtmcmVlKHdvcmtlcik7Cit9CisK
K3N0YXRpYyBib29sIGNyZWF0ZV9pb193b3JrZXIoc3RydWN0IGlvX3dxICp3cSwgc3RydWN0
IGlvX3dxZSAqd3FlLCBpbnQgaW5kZXgpCit7CisJc3RydWN0IGlvX3dxZV9hY2N0ICphY2N0
ID0gJndxZS0+YWNjdFtpbmRleF07CisJc3RydWN0IGlvX3dvcmtlciAqd29ya2VyOworCXN0
cnVjdCB0YXNrX3N0cnVjdCAqdHNrOworCisJX19zZXRfY3VycmVudF9zdGF0ZShUQVNLX1JV
Tk5JTkcpOworCisJd29ya2VyID0ga3phbGxvY19ub2RlKHNpemVvZigqd29ya2VyKSwgR0ZQ
X0tFUk5FTCwgd3FlLT5ub2RlKTsKKwlpZiAoIXdvcmtlcikgeworZmFpbDoKKwkJYXRvbWlj
X2RlYygmYWNjdC0+bnJfcnVubmluZyk7CisJCXJhd19zcGluX2xvY2soJndxZS0+bG9jayk7
CisJCWFjY3QtPm5yX3dvcmtlcnMtLTsKKwkJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2sp
OworCQlpb193b3JrZXJfcmVmX3B1dCh3cSk7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwly
ZWZjb3VudF9zZXQoJndvcmtlci0+cmVmLCAxKTsKKwl3b3JrZXItPndxZSA9IHdxZTsKKwlz
cGluX2xvY2tfaW5pdCgmd29ya2VyLT5sb2NrKTsKKwlpbml0X2NvbXBsZXRpb24oJndvcmtl
ci0+cmVmX2RvbmUpOworCisJaWYgKGluZGV4ID09IElPX1dRX0FDQ1RfQk9VTkQpCisJCXdv
cmtlci0+ZmxhZ3MgfD0gSU9fV09SS0VSX0ZfQk9VTkQ7CisKKwl0c2sgPSBjcmVhdGVfaW9f
dGhyZWFkKGlvX3dxZV93b3JrZXIsIHdvcmtlciwgd3FlLT5ub2RlKTsKKwlpZiAoIUlTX0VS
Uih0c2spKSB7CisJCWlvX2luaXRfbmV3X3dvcmtlcih3cWUsIHdvcmtlciwgdHNrKTsKKwl9
IGVsc2UgaWYgKCFpb19zaG91bGRfcmV0cnlfdGhyZWFkKFBUUl9FUlIodHNrKSkpIHsKKwkJ
a2ZyZWUod29ya2VyKTsKKwkJZ290byBmYWlsOworCX0gZWxzZSB7CisJCUlOSVRfV09SSygm
d29ya2VyLT53b3JrLCBpb193b3JrcXVldWVfY3JlYXRlKTsKKwkJc2NoZWR1bGVfd29yaygm
d29ya2VyLT53b3JrKTsKKwl9CisKKwlyZXR1cm4gdHJ1ZTsKK30KKworLyoKKyAqIEl0ZXJh
dGUgdGhlIHBhc3NlZCBpbiBsaXN0IGFuZCBjYWxsIHRoZSBzcGVjaWZpYyBmdW5jdGlvbiBm
b3IgZWFjaAorICogd29ya2VyIHRoYXQgaXNuJ3QgZXhpdGluZworICovCitzdGF0aWMgYm9v
bCBpb193cV9mb3JfZWFjaF93b3JrZXIoc3RydWN0IGlvX3dxZSAqd3FlLAorCQkJCSAgYm9v
bCAoKmZ1bmMpKHN0cnVjdCBpb193b3JrZXIgKiwgdm9pZCAqKSwKKwkJCQkgIHZvaWQgKmRh
dGEpCit7CisJc3RydWN0IGlvX3dvcmtlciAqd29ya2VyOworCWJvb2wgcmV0ID0gZmFsc2U7
CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3JjdSh3b3JrZXIsICZ3cWUtPmFsbF9saXN0LCBh
bGxfbGlzdCkgeworCQlpZiAoaW9fd29ya2VyX2dldCh3b3JrZXIpKSB7CisJCQkvKiBubyB0
YXNrIGlmIG5vZGUgaXMvd2FzIG9mZmxpbmUgKi8KKwkJCWlmICh3b3JrZXItPnRhc2spCisJ
CQkJcmV0ID0gZnVuYyh3b3JrZXIsIGRhdGEpOworCQkJaW9fd29ya2VyX3JlbGVhc2Uod29y
a2VyKTsKKwkJCWlmIChyZXQpCisJCQkJYnJlYWs7CisJCX0KKwl9CisKKwlyZXR1cm4gcmV0
OworfQorCitzdGF0aWMgYm9vbCBpb193cV93b3JrZXJfd2FrZShzdHJ1Y3QgaW9fd29ya2Vy
ICp3b3JrZXIsIHZvaWQgKmRhdGEpCit7CisJc2V0X25vdGlmeV9zaWduYWwod29ya2VyLT50
YXNrKTsKKwl3YWtlX3VwX3Byb2Nlc3Mod29ya2VyLT50YXNrKTsKKwlyZXR1cm4gZmFsc2U7
Cit9CisKK3N0YXRpYyB2b2lkIGlvX3J1bl9jYW5jZWwoc3RydWN0IGlvX3dxX3dvcmsgKndv
cmssIHN0cnVjdCBpb193cWUgKndxZSkKK3sKKwlzdHJ1Y3QgaW9fd3EgKndxID0gd3FlLT53
cTsKKworCWRvIHsKKwkJd29yay0+ZmxhZ3MgfD0gSU9fV1FfV09SS19DQU5DRUw7CisJCXdx
LT5kb193b3JrKHdvcmspOworCQl3b3JrID0gd3EtPmZyZWVfd29yayh3b3JrKTsKKwl9IHdo
aWxlICh3b3JrKTsKK30KKworc3RhdGljIHZvaWQgaW9fd3FlX2luc2VydF93b3JrKHN0cnVj
dCBpb193cWUgKndxZSwgc3RydWN0IGlvX3dxX3dvcmsgKndvcmspCit7CisJc3RydWN0IGlv
X3dxZV9hY2N0ICphY2N0ID0gaW9fd29ya19nZXRfYWNjdCh3cWUsIHdvcmspOworCXVuc2ln
bmVkIGludCBoYXNoOworCXN0cnVjdCBpb193cV93b3JrICp0YWlsOworCisJaWYgKCFpb193
cV9pc19oYXNoZWQod29yaykpIHsKK2FwcGVuZDoKKwkJd3FfbGlzdF9hZGRfdGFpbCgmd29y
ay0+bGlzdCwgJmFjY3QtPndvcmtfbGlzdCk7CisJCXJldHVybjsKKwl9CisKKwloYXNoID0g
aW9fZ2V0X3dvcmtfaGFzaCh3b3JrKTsKKwl0YWlsID0gd3FlLT5oYXNoX3RhaWxbaGFzaF07
CisJd3FlLT5oYXNoX3RhaWxbaGFzaF0gPSB3b3JrOworCWlmICghdGFpbCkKKwkJZ290byBh
cHBlbmQ7CisKKwl3cV9saXN0X2FkZF9hZnRlcigmd29yay0+bGlzdCwgJnRhaWwtPmxpc3Qs
ICZhY2N0LT53b3JrX2xpc3QpOworfQorCitzdGF0aWMgYm9vbCBpb193cV93b3JrX21hdGNo
X2l0ZW0oc3RydWN0IGlvX3dxX3dvcmsgKndvcmssIHZvaWQgKmRhdGEpCit7CisJcmV0dXJu
IHdvcmsgPT0gZGF0YTsKK30KKworc3RhdGljIHZvaWQgaW9fd3FlX2VucXVldWUoc3RydWN0
IGlvX3dxZSAqd3FlLCBzdHJ1Y3QgaW9fd3Ffd29yayAqd29yaykKK3sKKwlzdHJ1Y3QgaW9f
d3FlX2FjY3QgKmFjY3QgPSBpb193b3JrX2dldF9hY2N0KHdxZSwgd29yayk7CisJdW5zaWdu
ZWQgd29ya19mbGFncyA9IHdvcmstPmZsYWdzOworCWJvb2wgZG9fY3JlYXRlOworCisJLyoK
KwkgKiBJZiBpby13cSBpcyBleGl0aW5nIGZvciB0aGlzIHRhc2ssIG9yIGlmIHRoZSByZXF1
ZXN0IGhhcyBleHBsaWNpdGx5CisJICogYmVlbiBtYXJrZWQgYXMgb25lIHRoYXQgc2hvdWxk
IG5vdCBnZXQgZXhlY3V0ZWQsIGNhbmNlbCBpdCBoZXJlLgorCSAqLworCWlmICh0ZXN0X2Jp
dChJT19XUV9CSVRfRVhJVCwgJndxZS0+d3EtPnN0YXRlKSB8fAorCSAgICAod29yay0+Zmxh
Z3MgJiBJT19XUV9XT1JLX0NBTkNFTCkpIHsKKwkJaW9fcnVuX2NhbmNlbCh3b3JrLCB3cWUp
OworCQlyZXR1cm47CisJfQorCisJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwlpb193
cWVfaW5zZXJ0X3dvcmsod3FlLCB3b3JrKTsKKwljbGVhcl9iaXQoSU9fQUNDVF9TVEFMTEVE
X0JJVCwgJmFjY3QtPmZsYWdzKTsKKworCXJjdV9yZWFkX2xvY2soKTsKKwlkb19jcmVhdGUg
PSAhaW9fd3FlX2FjdGl2YXRlX2ZyZWVfd29ya2VyKHdxZSwgYWNjdCk7CisJcmN1X3JlYWRf
dW5sb2NrKCk7CisKKwlyYXdfc3Bpbl91bmxvY2soJndxZS0+bG9jayk7CisKKwlpZiAoZG9f
Y3JlYXRlICYmICgod29ya19mbGFncyAmIElPX1dRX1dPUktfQ09OQ1VSUkVOVCkgfHwKKwkg
ICAgIWF0b21pY19yZWFkKCZhY2N0LT5ucl9ydW5uaW5nKSkpIHsKKwkJYm9vbCBkaWRfY3Jl
YXRlOworCisJCWRpZF9jcmVhdGUgPSBpb193cWVfY3JlYXRlX3dvcmtlcih3cWUsIGFjY3Qp
OworCQlpZiAobGlrZWx5KGRpZF9jcmVhdGUpKQorCQkJcmV0dXJuOworCisJCXJhd19zcGlu
X2xvY2soJndxZS0+bG9jayk7CisJCS8qIGZhdGFsIGNvbmRpdGlvbiwgZmFpbGVkIHRvIGNy
ZWF0ZSB0aGUgZmlyc3Qgd29ya2VyICovCisJCWlmICghYWNjdC0+bnJfd29ya2Vycykgewor
CQkJc3RydWN0IGlvX2NiX2NhbmNlbF9kYXRhIG1hdGNoID0geworCQkJCS5mbgkJPSBpb193
cV93b3JrX21hdGNoX2l0ZW0sCisJCQkJLmRhdGEJCT0gd29yaywKKwkJCQkuY2FuY2VsX2Fs
bAk9IGZhbHNlLAorCQkJfTsKKworCQkJaWYgKGlvX2FjY3RfY2FuY2VsX3BlbmRpbmdfd29y
ayh3cWUsIGFjY3QsICZtYXRjaCkpCisJCQkJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsK
KwkJfQorCQlyYXdfc3Bpbl91bmxvY2soJndxZS0+bG9jayk7CisJfQorfQorCit2b2lkIGlv
X3dxX2VucXVldWUoc3RydWN0IGlvX3dxICp3cSwgc3RydWN0IGlvX3dxX3dvcmsgKndvcmsp
Cit7CisJc3RydWN0IGlvX3dxZSAqd3FlID0gd3EtPndxZXNbbnVtYV9ub2RlX2lkKCldOwor
CisJaW9fd3FlX2VucXVldWUod3FlLCB3b3JrKTsKK30KKworLyoKKyAqIFdvcmsgaXRlbXMg
dGhhdCBoYXNoIHRvIHRoZSBzYW1lIHZhbHVlIHdpbGwgbm90IGJlIGRvbmUgaW4gcGFyYWxs
ZWwuCisgKiBVc2VkIHRvIGxpbWl0IGNvbmN1cnJlbnQgd3JpdGVzLCBnZW5lcmFsbHkgaGFz
aGVkIGJ5IGlub2RlLgorICovCit2b2lkIGlvX3dxX2hhc2hfd29yayhzdHJ1Y3QgaW9fd3Ff
d29yayAqd29yaywgdm9pZCAqdmFsKQoreworCXVuc2lnbmVkIGludCBiaXQ7CisKKwliaXQg
PSBoYXNoX3B0cih2YWwsIElPX1dRX0hBU0hfT1JERVIpOworCXdvcmstPmZsYWdzIHw9IChJ
T19XUV9XT1JLX0hBU0hFRCB8IChiaXQgPDwgSU9fV1FfSEFTSF9TSElGVCkpOworfQorCitz
dGF0aWMgYm9vbCBpb193cV93b3JrZXJfY2FuY2VsKHN0cnVjdCBpb193b3JrZXIgKndvcmtl
ciwgdm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3QgaW9fY2JfY2FuY2VsX2RhdGEgKm1hdGNoID0g
ZGF0YTsKKworCS8qCisJICogSG9sZCB0aGUgbG9jayB0byBhdm9pZCAtPmN1cl93b3JrIGdv
aW5nIG91dCBvZiBzY29wZSwgY2FsbGVyCisJICogbWF5IGRlcmVmZXJlbmNlIHRoZSBwYXNz
ZWQgaW4gd29yay4KKwkgKi8KKwlzcGluX2xvY2soJndvcmtlci0+bG9jayk7CisJaWYgKHdv
cmtlci0+Y3VyX3dvcmsgJiYKKwkgICAgbWF0Y2gtPmZuKHdvcmtlci0+Y3VyX3dvcmssIG1h
dGNoLT5kYXRhKSkgeworCQlzZXRfbm90aWZ5X3NpZ25hbCh3b3JrZXItPnRhc2spOworCQlt
YXRjaC0+bnJfcnVubmluZysrOworCX0KKwlzcGluX3VubG9jaygmd29ya2VyLT5sb2NrKTsK
KworCXJldHVybiBtYXRjaC0+bnJfcnVubmluZyAmJiAhbWF0Y2gtPmNhbmNlbF9hbGw7Cit9
CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpb193cWVfcmVtb3ZlX3BlbmRpbmcoc3RydWN0IGlv
X3dxZSAqd3FlLAorCQkJCQkgc3RydWN0IGlvX3dxX3dvcmsgKndvcmssCisJCQkJCSBzdHJ1
Y3QgaW9fd3Ffd29ya19ub2RlICpwcmV2KQoreworCXN0cnVjdCBpb193cWVfYWNjdCAqYWNj
dCA9IGlvX3dvcmtfZ2V0X2FjY3Qod3FlLCB3b3JrKTsKKwl1bnNpZ25lZCBpbnQgaGFzaCA9
IGlvX2dldF93b3JrX2hhc2god29yayk7CisJc3RydWN0IGlvX3dxX3dvcmsgKnByZXZfd29y
ayA9IE5VTEw7CisKKwlpZiAoaW9fd3FfaXNfaGFzaGVkKHdvcmspICYmIHdvcmsgPT0gd3Fl
LT5oYXNoX3RhaWxbaGFzaF0pIHsKKwkJaWYgKHByZXYpCisJCQlwcmV2X3dvcmsgPSBjb250
YWluZXJfb2YocHJldiwgc3RydWN0IGlvX3dxX3dvcmssIGxpc3QpOworCQlpZiAocHJldl93
b3JrICYmIGlvX2dldF93b3JrX2hhc2gocHJldl93b3JrKSA9PSBoYXNoKQorCQkJd3FlLT5o
YXNoX3RhaWxbaGFzaF0gPSBwcmV2X3dvcms7CisJCWVsc2UKKwkJCXdxZS0+aGFzaF90YWls
W2hhc2hdID0gTlVMTDsKKwl9CisJd3FfbGlzdF9kZWwoJmFjY3QtPndvcmtfbGlzdCwgJndv
cmstPmxpc3QsIHByZXYpOworfQorCitzdGF0aWMgYm9vbCBpb19hY2N0X2NhbmNlbF9wZW5k
aW5nX3dvcmsoc3RydWN0IGlvX3dxZSAqd3FlLAorCQkJCQlzdHJ1Y3QgaW9fd3FlX2FjY3Qg
KmFjY3QsCisJCQkJCXN0cnVjdCBpb19jYl9jYW5jZWxfZGF0YSAqbWF0Y2gpCisJX19yZWxl
YXNlcyh3cWUtPmxvY2spCit7CisJc3RydWN0IGlvX3dxX3dvcmtfbm9kZSAqbm9kZSwgKnBy
ZXY7CisJc3RydWN0IGlvX3dxX3dvcmsgKndvcms7CisKKwl3cV9saXN0X2Zvcl9lYWNoKG5v
ZGUsIHByZXYsICZhY2N0LT53b3JrX2xpc3QpIHsKKwkJd29yayA9IGNvbnRhaW5lcl9vZihu
b2RlLCBzdHJ1Y3QgaW9fd3Ffd29yaywgbGlzdCk7CisJCWlmICghbWF0Y2gtPmZuKHdvcmss
IG1hdGNoLT5kYXRhKSkKKwkJCWNvbnRpbnVlOworCQlpb193cWVfcmVtb3ZlX3BlbmRpbmco
d3FlLCB3b3JrLCBwcmV2KTsKKwkJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2spOworCQlp
b19ydW5fY2FuY2VsKHdvcmssIHdxZSk7CisJCW1hdGNoLT5ucl9wZW5kaW5nKys7CisJCS8q
IG5vdCBzYWZlIHRvIGNvbnRpbnVlIGFmdGVyIHVubG9jayAqLworCQlyZXR1cm4gdHJ1ZTsK
Kwl9CisKKwlyZXR1cm4gZmFsc2U7Cit9CisKK3N0YXRpYyB2b2lkIGlvX3dxZV9jYW5jZWxf
cGVuZGluZ193b3JrKHN0cnVjdCBpb193cWUgKndxZSwKKwkJCQkgICAgICAgc3RydWN0IGlv
X2NiX2NhbmNlbF9kYXRhICptYXRjaCkKK3sKKwlpbnQgaTsKK3JldHJ5OgorCXJhd19zcGlu
X2xvY2soJndxZS0+bG9jayk7CisJZm9yIChpID0gMDsgaSA8IElPX1dRX0FDQ1RfTlI7IGkr
KykgeworCQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3QgPSBpb19nZXRfYWNjdCh3cWUsIGkg
PT0gMCk7CisKKwkJaWYgKGlvX2FjY3RfY2FuY2VsX3BlbmRpbmdfd29yayh3cWUsIGFjY3Qs
IG1hdGNoKSkgeworCQkJaWYgKG1hdGNoLT5jYW5jZWxfYWxsKQorCQkJCWdvdG8gcmV0cnk7
CisJCQlyZXR1cm47CisJCX0KKwl9CisJcmF3X3NwaW5fdW5sb2NrKCZ3cWUtPmxvY2spOwor
fQorCitzdGF0aWMgdm9pZCBpb193cWVfY2FuY2VsX3J1bm5pbmdfd29yayhzdHJ1Y3QgaW9f
d3FlICp3cWUsCisJCQkJICAgICAgIHN0cnVjdCBpb19jYl9jYW5jZWxfZGF0YSAqbWF0Y2gp
Cit7CisJcmN1X3JlYWRfbG9jaygpOworCWlvX3dxX2Zvcl9lYWNoX3dvcmtlcih3cWUsIGlv
X3dxX3dvcmtlcl9jYW5jZWwsIG1hdGNoKTsKKwlyY3VfcmVhZF91bmxvY2soKTsKK30KKwor
ZW51bSBpb193cV9jYW5jZWwgaW9fd3FfY2FuY2VsX2NiKHN0cnVjdCBpb193cSAqd3EsIHdv
cmtfY2FuY2VsX2ZuICpjYW5jZWwsCisJCQkJICB2b2lkICpkYXRhLCBib29sIGNhbmNlbF9h
bGwpCit7CisJc3RydWN0IGlvX2NiX2NhbmNlbF9kYXRhIG1hdGNoID0geworCQkuZm4JCT0g
Y2FuY2VsLAorCQkuZGF0YQkJPSBkYXRhLAorCQkuY2FuY2VsX2FsbAk9IGNhbmNlbF9hbGws
CisJfTsKKwlpbnQgbm9kZTsKKworCS8qCisJICogRmlyc3QgY2hlY2sgcGVuZGluZyBsaXN0
LCBpZiB3ZSdyZSBsdWNreSB3ZSBjYW4ganVzdCByZW1vdmUgaXQKKwkgKiBmcm9tIHRoZXJl
LiBDQU5DRUxfT0sgbWVhbnMgdGhhdCB0aGUgd29yayBpcyByZXR1cm5lZCBhcy1uZXcsCisJ
ICogbm8gY29tcGxldGlvbiB3aWxsIGJlIHBvc3RlZCBmb3IgaXQuCisJICovCisJZm9yX2Vh
Y2hfbm9kZShub2RlKSB7CisJCXN0cnVjdCBpb193cWUgKndxZSA9IHdxLT53cWVzW25vZGVd
OworCisJCWlvX3dxZV9jYW5jZWxfcGVuZGluZ193b3JrKHdxZSwgJm1hdGNoKTsKKwkJaWYg
KG1hdGNoLm5yX3BlbmRpbmcgJiYgIW1hdGNoLmNhbmNlbF9hbGwpCisJCQlyZXR1cm4gSU9f
V1FfQ0FOQ0VMX09LOworCX0KKworCS8qCisJICogTm93IGNoZWNrIGlmIGEgZnJlZSAoZ29p
bmcgYnVzeSkgb3IgYnVzeSB3b3JrZXIgaGFzIHRoZSB3b3JrCisJICogY3VycmVudGx5IHJ1
bm5pbmcuIElmIHdlIGZpbmQgaXQgdGhlcmUsIHdlJ2xsIHJldHVybiBDQU5DRUxfUlVOTklO
RworCSAqIGFzIGFuIGluZGljYXRpb24gdGhhdCB3ZSBhdHRlbXB0IHRvIHNpZ25hbCBjYW5j
ZWxsYXRpb24uIFRoZQorCSAqIGNvbXBsZXRpb24gd2lsbCBydW4gbm9ybWFsbHkgaW4gdGhp
cyBjYXNlLgorCSAqLworCWZvcl9lYWNoX25vZGUobm9kZSkgeworCQlzdHJ1Y3QgaW9fd3Fl
ICp3cWUgPSB3cS0+d3Flc1tub2RlXTsKKworCQlpb193cWVfY2FuY2VsX3J1bm5pbmdfd29y
ayh3cWUsICZtYXRjaCk7CisJCWlmIChtYXRjaC5ucl9ydW5uaW5nICYmICFtYXRjaC5jYW5j
ZWxfYWxsKQorCQkJcmV0dXJuIElPX1dRX0NBTkNFTF9SVU5OSU5HOworCX0KKworCWlmICht
YXRjaC5ucl9ydW5uaW5nKQorCQlyZXR1cm4gSU9fV1FfQ0FOQ0VMX1JVTk5JTkc7CisJaWYg
KG1hdGNoLm5yX3BlbmRpbmcpCisJCXJldHVybiBJT19XUV9DQU5DRUxfT0s7CisJcmV0dXJu
IElPX1dRX0NBTkNFTF9OT1RGT1VORDsKK30KKworc3RhdGljIGludCBpb193cWVfaGFzaF93
YWtlKHN0cnVjdCB3YWl0X3F1ZXVlX2VudHJ5ICp3YWl0LCB1bnNpZ25lZCBtb2RlLAorCQkJ
ICAgIGludCBzeW5jLCB2b2lkICprZXkpCit7CisJc3RydWN0IGlvX3dxZSAqd3FlID0gY29u
dGFpbmVyX29mKHdhaXQsIHN0cnVjdCBpb193cWUsIHdhaXQpOworCWludCBpOworCisJbGlz
dF9kZWxfaW5pdCgmd2FpdC0+ZW50cnkpOworCisJcmN1X3JlYWRfbG9jaygpOworCWZvciAo
aSA9IDA7IGkgPCBJT19XUV9BQ0NUX05SOyBpKyspIHsKKwkJc3RydWN0IGlvX3dxZV9hY2N0
ICphY2N0ID0gJndxZS0+YWNjdFtpXTsKKworCQlpZiAodGVzdF9hbmRfY2xlYXJfYml0KElP
X0FDQ1RfU1RBTExFRF9CSVQsICZhY2N0LT5mbGFncykpCisJCQlpb193cWVfYWN0aXZhdGVf
ZnJlZV93b3JrZXIod3FlLCBhY2N0KTsKKwl9CisJcmN1X3JlYWRfdW5sb2NrKCk7CisJcmV0
dXJuIDE7Cit9CisKK3N0cnVjdCBpb193cSAqaW9fd3FfY3JlYXRlKHVuc2lnbmVkIGJvdW5k
ZWQsIHN0cnVjdCBpb193cV9kYXRhICpkYXRhKQoreworCWludCByZXQsIG5vZGUsIGk7CisJ
c3RydWN0IGlvX3dxICp3cTsKKworCWlmIChXQVJOX09OX09OQ0UoIWRhdGEtPmZyZWVfd29y
ayB8fCAhZGF0YS0+ZG9fd29yaykpCisJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworCWlm
IChXQVJOX09OX09OQ0UoIWJvdW5kZWQpKQorCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsK
KworCXdxID0ga3phbGxvYyhzdHJ1Y3Rfc2l6ZSh3cSwgd3FlcywgbnJfbm9kZV9pZHMpLCBH
RlBfS0VSTkVMKTsKKwlpZiAoIXdxKQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKwly
ZXQgPSBjcHVocF9zdGF0ZV9hZGRfaW5zdGFuY2Vfbm9jYWxscyhpb193cV9vbmxpbmUsICZ3
cS0+Y3B1aHBfbm9kZSk7CisJaWYgKHJldCkKKwkJZ290byBlcnJfd3E7CisKKwlyZWZjb3Vu
dF9pbmMoJmRhdGEtPmhhc2gtPnJlZnMpOworCXdxLT5oYXNoID0gZGF0YS0+aGFzaDsKKwl3
cS0+ZnJlZV93b3JrID0gZGF0YS0+ZnJlZV93b3JrOworCXdxLT5kb193b3JrID0gZGF0YS0+
ZG9fd29yazsKKworCXJldCA9IC1FTk9NRU07CisJZm9yX2VhY2hfbm9kZShub2RlKSB7CisJ
CXN0cnVjdCBpb193cWUgKndxZTsKKwkJaW50IGFsbG9jX25vZGUgPSBub2RlOworCisJCWlm
ICghbm9kZV9vbmxpbmUoYWxsb2Nfbm9kZSkpCisJCQlhbGxvY19ub2RlID0gTlVNQV9OT19O
T0RFOworCQl3cWUgPSBremFsbG9jX25vZGUoc2l6ZW9mKHN0cnVjdCBpb193cWUpLCBHRlBf
S0VSTkVMLCBhbGxvY19ub2RlKTsKKwkJaWYgKCF3cWUpCisJCQlnb3RvIGVycjsKKwkJd3Et
PndxZXNbbm9kZV0gPSB3cWU7CisJCWlmICghYWxsb2NfY3B1bWFza192YXIoJndxZS0+Y3B1
X21hc2ssIEdGUF9LRVJORUwpKQorCQkJZ290byBlcnI7CisJCWNwdW1hc2tfY29weSh3cWUt
PmNwdV9tYXNrLCBjcHVtYXNrX29mX25vZGUobm9kZSkpOworCQl3cWUtPm5vZGUgPSBhbGxv
Y19ub2RlOworCQl3cWUtPmFjY3RbSU9fV1FfQUNDVF9CT1VORF0ubWF4X3dvcmtlcnMgPSBi
b3VuZGVkOworCQl3cWUtPmFjY3RbSU9fV1FfQUNDVF9VTkJPVU5EXS5tYXhfd29ya2VycyA9
CisJCQkJCXRhc2tfcmxpbWl0KGN1cnJlbnQsIFJMSU1JVF9OUFJPQyk7CisJCUlOSVRfTElT
VF9IRUFEKCZ3cWUtPndhaXQuZW50cnkpOworCQl3cWUtPndhaXQuZnVuYyA9IGlvX3dxZV9o
YXNoX3dha2U7CisJCWZvciAoaSA9IDA7IGkgPCBJT19XUV9BQ0NUX05SOyBpKyspIHsKKwkJ
CXN0cnVjdCBpb193cWVfYWNjdCAqYWNjdCA9ICZ3cWUtPmFjY3RbaV07CisKKwkJCWFjY3Qt
PmluZGV4ID0gaTsKKwkJCWF0b21pY19zZXQoJmFjY3QtPm5yX3J1bm5pbmcsIDApOworCQkJ
SU5JVF9XUV9MSVNUKCZhY2N0LT53b3JrX2xpc3QpOworCQl9CisJCXdxZS0+d3EgPSB3cTsK
KwkJcmF3X3NwaW5fbG9ja19pbml0KCZ3cWUtPmxvY2spOworCQlJTklUX0hMSVNUX05VTExT
X0hFQUQoJndxZS0+ZnJlZV9saXN0LCAwKTsKKwkJSU5JVF9MSVNUX0hFQUQoJndxZS0+YWxs
X2xpc3QpOworCX0KKworCXdxLT50YXNrID0gZ2V0X3Rhc2tfc3RydWN0KGRhdGEtPnRhc2sp
OworCWF0b21pY19zZXQoJndxLT53b3JrZXJfcmVmcywgMSk7CisJaW5pdF9jb21wbGV0aW9u
KCZ3cS0+d29ya2VyX2RvbmUpOworCXJldHVybiB3cTsKK2VycjoKKwlpb193cV9wdXRfaGFz
aChkYXRhLT5oYXNoKTsKKwljcHVocF9zdGF0ZV9yZW1vdmVfaW5zdGFuY2Vfbm9jYWxscyhp
b193cV9vbmxpbmUsICZ3cS0+Y3B1aHBfbm9kZSk7CisJZm9yX2VhY2hfbm9kZShub2RlKSB7
CisJCWlmICghd3EtPndxZXNbbm9kZV0pCisJCQljb250aW51ZTsKKwkJZnJlZV9jcHVtYXNr
X3Zhcih3cS0+d3Flc1tub2RlXS0+Y3B1X21hc2spOworCQlrZnJlZSh3cS0+d3Flc1tub2Rl
XSk7CisJfQorZXJyX3dxOgorCWtmcmVlKHdxKTsKKwlyZXR1cm4gRVJSX1BUUihyZXQpOwor
fQorCitzdGF0aWMgYm9vbCBpb190YXNrX3dvcmtfbWF0Y2goc3RydWN0IGNhbGxiYWNrX2hl
YWQgKmNiLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBpb193b3JrZXIgKndvcmtlcjsKKwor
CWlmIChjYi0+ZnVuYyAhPSBjcmVhdGVfd29ya2VyX2NiICYmIGNiLT5mdW5jICE9IGNyZWF0
ZV93b3JrZXJfY29udCkKKwkJcmV0dXJuIGZhbHNlOworCXdvcmtlciA9IGNvbnRhaW5lcl9v
ZihjYiwgc3RydWN0IGlvX3dvcmtlciwgY3JlYXRlX3dvcmspOworCXJldHVybiB3b3JrZXIt
PndxZS0+d3EgPT0gZGF0YTsKK30KKwordm9pZCBpb193cV9leGl0X3N0YXJ0KHN0cnVjdCBp
b193cSAqd3EpCit7CisJc2V0X2JpdChJT19XUV9CSVRfRVhJVCwgJndxLT5zdGF0ZSk7Cit9
CisKK3N0YXRpYyB2b2lkIGlvX3dxX2NhbmNlbF90d19jcmVhdGUoc3RydWN0IGlvX3dxICp3
cSkKK3sKKwlzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqY2I7CisKKwl3aGlsZSAoKGNiID0gdGFz
a193b3JrX2NhbmNlbF9tYXRjaCh3cS0+dGFzaywgaW9fdGFza193b3JrX21hdGNoLCB3cSkp
ICE9IE5VTEwpIHsKKwkJc3RydWN0IGlvX3dvcmtlciAqd29ya2VyOworCisJCXdvcmtlciA9
IGNvbnRhaW5lcl9vZihjYiwgc3RydWN0IGlvX3dvcmtlciwgY3JlYXRlX3dvcmspOworCQlp
b193b3JrZXJfY2FuY2VsX2NiKHdvcmtlcik7CisJfQorfQorCitzdGF0aWMgdm9pZCBpb193
cV9leGl0X3dvcmtlcnMoc3RydWN0IGlvX3dxICp3cSkKK3sKKwlpbnQgbm9kZTsKKworCWlm
ICghd3EtPnRhc2spCisJCXJldHVybjsKKworCWlvX3dxX2NhbmNlbF90d19jcmVhdGUod3Ep
OworCisJcmN1X3JlYWRfbG9jaygpOworCWZvcl9lYWNoX25vZGUobm9kZSkgeworCQlzdHJ1
Y3QgaW9fd3FlICp3cWUgPSB3cS0+d3Flc1tub2RlXTsKKworCQlpb193cV9mb3JfZWFjaF93
b3JrZXIod3FlLCBpb193cV93b3JrZXJfd2FrZSwgTlVMTCk7CisJfQorCXJjdV9yZWFkX3Vu
bG9jaygpOworCWlvX3dvcmtlcl9yZWZfcHV0KHdxKTsKKwl3YWl0X2Zvcl9jb21wbGV0aW9u
KCZ3cS0+d29ya2VyX2RvbmUpOworCisJZm9yX2VhY2hfbm9kZShub2RlKSB7CisJCXNwaW5f
bG9ja19pcnEoJndxLT5oYXNoLT53YWl0LmxvY2spOworCQlsaXN0X2RlbF9pbml0KCZ3cS0+
d3Flc1tub2RlXS0+d2FpdC5lbnRyeSk7CisJCXNwaW5fdW5sb2NrX2lycSgmd3EtPmhhc2gt
PndhaXQubG9jayk7CisJfQorCXB1dF90YXNrX3N0cnVjdCh3cS0+dGFzayk7CisJd3EtPnRh
c2sgPSBOVUxMOworfQorCitzdGF0aWMgdm9pZCBpb193cV9kZXN0cm95KHN0cnVjdCBpb193
cSAqd3EpCit7CisJaW50IG5vZGU7CisKKwljcHVocF9zdGF0ZV9yZW1vdmVfaW5zdGFuY2Vf
bm9jYWxscyhpb193cV9vbmxpbmUsICZ3cS0+Y3B1aHBfbm9kZSk7CisKKwlmb3JfZWFjaF9u
b2RlKG5vZGUpIHsKKwkJc3RydWN0IGlvX3dxZSAqd3FlID0gd3EtPndxZXNbbm9kZV07CisJ
CXN0cnVjdCBpb19jYl9jYW5jZWxfZGF0YSBtYXRjaCA9IHsKKwkJCS5mbgkJPSBpb193cV93
b3JrX21hdGNoX2FsbCwKKwkJCS5jYW5jZWxfYWxsCT0gdHJ1ZSwKKwkJfTsKKwkJaW9fd3Fl
X2NhbmNlbF9wZW5kaW5nX3dvcmsod3FlLCAmbWF0Y2gpOworCQlmcmVlX2NwdW1hc2tfdmFy
KHdxZS0+Y3B1X21hc2spOworCQlrZnJlZSh3cWUpOworCX0KKwlpb193cV9wdXRfaGFzaCh3
cS0+aGFzaCk7CisJa2ZyZWUod3EpOworfQorCit2b2lkIGlvX3dxX3B1dF9hbmRfZXhpdChz
dHJ1Y3QgaW9fd3EgKndxKQoreworCVdBUk5fT05fT05DRSghdGVzdF9iaXQoSU9fV1FfQklU
X0VYSVQsICZ3cS0+c3RhdGUpKTsKKworCWlvX3dxX2V4aXRfd29ya2Vycyh3cSk7CisJaW9f
d3FfZGVzdHJveSh3cSk7Cit9CisKK3N0cnVjdCBvbmxpbmVfZGF0YSB7CisJdW5zaWduZWQg
aW50IGNwdTsKKwlib29sIG9ubGluZTsKK307CisKK3N0YXRpYyBib29sIGlvX3dxX3dvcmtl
cl9hZmZpbml0eShzdHJ1Y3QgaW9fd29ya2VyICp3b3JrZXIsIHZvaWQgKmRhdGEpCit7CisJ
c3RydWN0IG9ubGluZV9kYXRhICpvZCA9IGRhdGE7CisKKwlpZiAob2QtPm9ubGluZSkKKwkJ
Y3B1bWFza19zZXRfY3B1KG9kLT5jcHUsIHdvcmtlci0+d3FlLT5jcHVfbWFzayk7CisJZWxz
ZQorCQljcHVtYXNrX2NsZWFyX2NwdShvZC0+Y3B1LCB3b3JrZXItPndxZS0+Y3B1X21hc2sp
OworCXJldHVybiBmYWxzZTsKK30KKworc3RhdGljIGludCBfX2lvX3dxX2NwdV9vbmxpbmUo
c3RydWN0IGlvX3dxICp3cSwgdW5zaWduZWQgaW50IGNwdSwgYm9vbCBvbmxpbmUpCit7CisJ
c3RydWN0IG9ubGluZV9kYXRhIG9kID0geworCQkuY3B1ID0gY3B1LAorCQkub25saW5lID0g
b25saW5lCisJfTsKKwlpbnQgaTsKKworCXJjdV9yZWFkX2xvY2soKTsKKwlmb3JfZWFjaF9u
b2RlKGkpCisJCWlvX3dxX2Zvcl9lYWNoX3dvcmtlcih3cS0+d3Flc1tpXSwgaW9fd3Ffd29y
a2VyX2FmZmluaXR5LCAmb2QpOworCXJjdV9yZWFkX3VubG9jaygpOworCXJldHVybiAwOwor
fQorCitzdGF0aWMgaW50IGlvX3dxX2NwdV9vbmxpbmUodW5zaWduZWQgaW50IGNwdSwgc3Ry
dWN0IGhsaXN0X25vZGUgKm5vZGUpCit7CisJc3RydWN0IGlvX3dxICp3cSA9IGhsaXN0X2Vu
dHJ5X3NhZmUobm9kZSwgc3RydWN0IGlvX3dxLCBjcHVocF9ub2RlKTsKKworCXJldHVybiBf
X2lvX3dxX2NwdV9vbmxpbmUod3EsIGNwdSwgdHJ1ZSk7Cit9CisKK3N0YXRpYyBpbnQgaW9f
d3FfY3B1X29mZmxpbmUodW5zaWduZWQgaW50IGNwdSwgc3RydWN0IGhsaXN0X25vZGUgKm5v
ZGUpCit7CisJc3RydWN0IGlvX3dxICp3cSA9IGhsaXN0X2VudHJ5X3NhZmUobm9kZSwgc3Ry
dWN0IGlvX3dxLCBjcHVocF9ub2RlKTsKKworCXJldHVybiBfX2lvX3dxX2NwdV9vbmxpbmUo
d3EsIGNwdSwgZmFsc2UpOworfQorCitpbnQgaW9fd3FfY3B1X2FmZmluaXR5KHN0cnVjdCBp
b193cSAqd3EsIGNwdW1hc2tfdmFyX3QgbWFzaykKK3sKKwlpbnQgaTsKKworCXJjdV9yZWFk
X2xvY2soKTsKKwlmb3JfZWFjaF9ub2RlKGkpIHsKKwkJc3RydWN0IGlvX3dxZSAqd3FlID0g
d3EtPndxZXNbaV07CisKKwkJaWYgKG1hc2spCisJCQljcHVtYXNrX2NvcHkod3FlLT5jcHVf
bWFzaywgbWFzayk7CisJCWVsc2UKKwkJCWNwdW1hc2tfY29weSh3cWUtPmNwdV9tYXNrLCBj
cHVtYXNrX29mX25vZGUoaSkpOworCX0KKwlyY3VfcmVhZF91bmxvY2soKTsKKwlyZXR1cm4g
MDsKK30KKworLyoKKyAqIFNldCBtYXggbnVtYmVyIG9mIHVuYm91bmRlZCB3b3JrZXJzLCBy
ZXR1cm5zIG9sZCB2YWx1ZS4gSWYgbmV3X2NvdW50IGlzIDAsCisgKiB0aGVuIGp1c3QgcmV0
dXJuIHRoZSBvbGQgdmFsdWUuCisgKi8KK2ludCBpb193cV9tYXhfd29ya2VycyhzdHJ1Y3Qg
aW9fd3EgKndxLCBpbnQgKm5ld19jb3VudCkKK3sKKwlpbnQgcHJldltJT19XUV9BQ0NUX05S
XTsKKwlib29sIGZpcnN0X25vZGUgPSB0cnVlOworCWludCBpLCBub2RlOworCisJQlVJTERf
QlVHX09OKChpbnQpIElPX1dRX0FDQ1RfQk9VTkQgICAhPSAoaW50KSBJT19XUV9CT1VORCk7
CisJQlVJTERfQlVHX09OKChpbnQpIElPX1dRX0FDQ1RfVU5CT1VORCAhPSAoaW50KSBJT19X
UV9VTkJPVU5EKTsKKwlCVUlMRF9CVUdfT04oKGludCkgSU9fV1FfQUNDVF9OUiAgICAgICE9
IDIpOworCisJZm9yIChpID0gMDsgaSA8IDI7IGkrKykgeworCQlpZiAobmV3X2NvdW50W2ld
ID4gdGFza19ybGltaXQoY3VycmVudCwgUkxJTUlUX05QUk9DKSkKKwkJCW5ld19jb3VudFtp
XSA9IHRhc2tfcmxpbWl0KGN1cnJlbnQsIFJMSU1JVF9OUFJPQyk7CisJfQorCisJZm9yIChp
ID0gMDsgaSA8IElPX1dRX0FDQ1RfTlI7IGkrKykKKwkJcHJldltpXSA9IDA7CisKKwlyY3Vf
cmVhZF9sb2NrKCk7CisJZm9yX2VhY2hfbm9kZShub2RlKSB7CisJCXN0cnVjdCBpb193cWUg
KndxZSA9IHdxLT53cWVzW25vZGVdOworCQlzdHJ1Y3QgaW9fd3FlX2FjY3QgKmFjY3Q7CisK
KwkJcmF3X3NwaW5fbG9jaygmd3FlLT5sb2NrKTsKKwkJZm9yIChpID0gMDsgaSA8IElPX1dR
X0FDQ1RfTlI7IGkrKykgeworCQkJYWNjdCA9ICZ3cWUtPmFjY3RbaV07CisJCQlpZiAoZmly
c3Rfbm9kZSkKKwkJCQlwcmV2W2ldID0gbWF4X3QoaW50LCBhY2N0LT5tYXhfd29ya2Vycywg
cHJldltpXSk7CisJCQlpZiAobmV3X2NvdW50W2ldKQorCQkJCWFjY3QtPm1heF93b3JrZXJz
ID0gbmV3X2NvdW50W2ldOworCQl9CisJCXJhd19zcGluX3VubG9jaygmd3FlLT5sb2NrKTsK
KwkJZmlyc3Rfbm9kZSA9IGZhbHNlOworCX0KKwlyY3VfcmVhZF91bmxvY2soKTsKKworCWZv
ciAoaSA9IDA7IGkgPCBJT19XUV9BQ0NUX05SOyBpKyspCisJCW5ld19jb3VudFtpXSA9IHBy
ZXZbaV07CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIF9faW5pdCBpbnQgaW9fd3FfaW5p
dCh2b2lkKQoreworCWludCByZXQ7CisKKwlyZXQgPSBjcHVocF9zZXR1cF9zdGF0ZV9tdWx0
aShDUFVIUF9BUF9PTkxJTkVfRFlOLCAiaW8td3Evb25saW5lIiwKKwkJCQkJaW9fd3FfY3B1
X29ubGluZSwgaW9fd3FfY3B1X29mZmxpbmUpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4g
cmV0OworCWlvX3dxX29ubGluZSA9IHJldDsKKwlyZXR1cm4gMDsKK30KK3N1YnN5c19pbml0
Y2FsbChpb193cV9pbml0KTsKZGlmZiAtLWdpdCBhL2ZzL2lvLXdxLmggYi9pb191cmluZy9p
by13cS5oCnNpbWlsYXJpdHkgaW5kZXggODElCnJlbmFtZSBmcm9tIGZzL2lvLXdxLmgKcmVu
YW1lIHRvIGlvX3VyaW5nL2lvLXdxLmgKaW5kZXggNzUxMTNiY2Q1ODg5Li5iZjVjNGM1MzM3
NjAgMTAwNjQ0Ci0tLSBhL2ZzL2lvLXdxLmgKKysrIGIvaW9fdXJpbmcvaW8td3EuaApAQCAt
MSw3ICsxLDcgQEAKICNpZm5kZWYgSU5URVJOQUxfSU9fV1FfSAogI2RlZmluZSBJTlRFUk5B
TF9JT19XUV9ICiAKLSNpbmNsdWRlIDxsaW51eC9pb191cmluZy5oPgorI2luY2x1ZGUgPGxp
bnV4L3JlZmNvdW50Lmg+CiAKIHN0cnVjdCBpb193cTsKIApAQCAtOSwxNiArOSw4IEBAIGVu
dW0gewogCUlPX1dRX1dPUktfQ0FOQ0VMCT0gMSwKIAlJT19XUV9XT1JLX0hBU0hFRAk9IDIs
CiAJSU9fV1FfV09SS19VTkJPVU5ECT0gNCwKLQlJT19XUV9XT1JLX05PX0NBTkNFTAk9IDgs
CiAJSU9fV1FfV09SS19DT05DVVJSRU5UCT0gMTYsCiAKLQlJT19XUV9XT1JLX0ZJTEVTCT0g
MzIsCi0JSU9fV1FfV09SS19GUwkJPSA2NCwKLQlJT19XUV9XT1JLX01NCQk9IDEyOCwKLQlJ
T19XUV9XT1JLX0NSRURTCT0gMjU2LAotCUlPX1dRX1dPUktfQkxLQ0cJPSA1MTIsCi0JSU9f
V1FfV09SS19GU0laRQk9IDEwMjQsCi0KIAlJT19XUV9IQVNIX1NISUZUCT0gMjQsCS8qIHVw
cGVyIDggYml0cyBhcmUgdXNlZCBmb3IgaGFzaCBrZXkgKi8KIH07CiAKQEAgLTUyLDYgKzQ0
LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHdxX2xpc3RfYWRkX2FmdGVyKHN0cnVjdCBpb193
cV93b3JrX25vZGUgKm5vZGUsCiBzdGF0aWMgaW5saW5lIHZvaWQgd3FfbGlzdF9hZGRfdGFp
bChzdHJ1Y3QgaW9fd3Ffd29ya19ub2RlICpub2RlLAogCQkJCSAgICBzdHJ1Y3QgaW9fd3Ff
d29ya19saXN0ICpsaXN0KQogeworCW5vZGUtPm5leHQgPSBOVUxMOwogCWlmICghbGlzdC0+
Zmlyc3QpIHsKIAkJbGlzdC0+bGFzdCA9IG5vZGU7CiAJCVdSSVRFX09OQ0UobGlzdC0+Zmly
c3QsIG5vZGUpOwpAQCAtNTksNyArNTIsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgd3FfbGlz
dF9hZGRfdGFpbChzdHJ1Y3QgaW9fd3Ffd29ya19ub2RlICpub2RlLAogCQlsaXN0LT5sYXN0
LT5uZXh0ID0gbm9kZTsKIAkJbGlzdC0+bGFzdCA9IG5vZGU7CiAJfQotCW5vZGUtPm5leHQg
PSBOVUxMOwogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQgd3FfbGlzdF9jdXQoc3RydWN0IGlv
X3dxX3dvcmtfbGlzdCAqbGlzdCwKQEAgLTk1LDcgKzg3LDYgQEAgc3RhdGljIGlubGluZSB2
b2lkIHdxX2xpc3RfZGVsKHN0cnVjdCBpb193cV93b3JrX2xpc3QgKmxpc3QsCiAKIHN0cnVj
dCBpb193cV93b3JrIHsKIAlzdHJ1Y3QgaW9fd3Ffd29ya19ub2RlIGxpc3Q7Ci0Jc3RydWN0
IGlvX2lkZW50aXR5ICppZGVudGl0eTsKIAl1bnNpZ25lZCBmbGFnczsKIH07CiAKQEAgLTEw
NywzNyArOTgsNDggQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgaW9fd3Ffd29yayAqd3FfbmV4
dF93b3JrKHN0cnVjdCBpb193cV93b3JrICp3b3JrKQogCXJldHVybiBjb250YWluZXJfb2Yo
d29yay0+bGlzdC5uZXh0LCBzdHJ1Y3QgaW9fd3Ffd29yaywgbGlzdCk7CiB9CiAKLXR5cGVk
ZWYgdm9pZCAoZnJlZV93b3JrX2ZuKShzdHJ1Y3QgaW9fd3Ffd29yayAqKTsKLXR5cGVkZWYg
c3RydWN0IGlvX3dxX3dvcmsgKihpb193cV93b3JrX2ZuKShzdHJ1Y3QgaW9fd3Ffd29yayAq
KTsKK3R5cGVkZWYgc3RydWN0IGlvX3dxX3dvcmsgKihmcmVlX3dvcmtfZm4pKHN0cnVjdCBp
b193cV93b3JrICopOwordHlwZWRlZiB2b2lkIChpb193cV93b3JrX2ZuKShzdHJ1Y3QgaW9f
d3Ffd29yayAqKTsKIAotc3RydWN0IGlvX3dxX2RhdGEgewotCXN0cnVjdCB1c2VyX3N0cnVj
dCAqdXNlcjsKK3N0cnVjdCBpb193cV9oYXNoIHsKKwlyZWZjb3VudF90IHJlZnM7CisJdW5z
aWduZWQgbG9uZyBtYXA7CisJc3RydWN0IHdhaXRfcXVldWVfaGVhZCB3YWl0OworfTsKKwor
c3RhdGljIGlubGluZSB2b2lkIGlvX3dxX3B1dF9oYXNoKHN0cnVjdCBpb193cV9oYXNoICpo
YXNoKQoreworCWlmIChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJmhhc2gtPnJlZnMpKQorCQlr
ZnJlZShoYXNoKTsKK30KIAorc3RydWN0IGlvX3dxX2RhdGEgeworCXN0cnVjdCBpb193cV9o
YXNoICpoYXNoOworCXN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzazsKIAlpb193cV93b3JrX2Zu
ICpkb193b3JrOwogCWZyZWVfd29ya19mbiAqZnJlZV93b3JrOwogfTsKIAogc3RydWN0IGlv
X3dxICppb193cV9jcmVhdGUodW5zaWduZWQgYm91bmRlZCwgc3RydWN0IGlvX3dxX2RhdGEg
KmRhdGEpOwotYm9vbCBpb193cV9nZXQoc3RydWN0IGlvX3dxICp3cSwgc3RydWN0IGlvX3dx
X2RhdGEgKmRhdGEpOwotdm9pZCBpb193cV9kZXN0cm95KHN0cnVjdCBpb193cSAqd3EpOwor
dm9pZCBpb193cV9leGl0X3N0YXJ0KHN0cnVjdCBpb193cSAqd3EpOwordm9pZCBpb193cV9w
dXRfYW5kX2V4aXQoc3RydWN0IGlvX3dxICp3cSk7CiAKIHZvaWQgaW9fd3FfZW5xdWV1ZShz
dHJ1Y3QgaW9fd3EgKndxLCBzdHJ1Y3QgaW9fd3Ffd29yayAqd29yayk7CiB2b2lkIGlvX3dx
X2hhc2hfd29yayhzdHJ1Y3QgaW9fd3Ffd29yayAqd29yaywgdm9pZCAqdmFsKTsKIAoraW50
IGlvX3dxX2NwdV9hZmZpbml0eShzdHJ1Y3QgaW9fd3EgKndxLCBjcHVtYXNrX3Zhcl90IG1h
c2spOworaW50IGlvX3dxX21heF93b3JrZXJzKHN0cnVjdCBpb193cSAqd3EsIGludCAqbmV3
X2NvdW50KTsKKwogc3RhdGljIGlubGluZSBib29sIGlvX3dxX2lzX2hhc2hlZChzdHJ1Y3Qg
aW9fd3Ffd29yayAqd29yaykKIHsKIAlyZXR1cm4gd29yay0+ZmxhZ3MgJiBJT19XUV9XT1JL
X0hBU0hFRDsKIH0KIAotdm9pZCBpb193cV9jYW5jZWxfYWxsKHN0cnVjdCBpb193cSAqd3Ep
OwotCiB0eXBlZGVmIGJvb2wgKHdvcmtfY2FuY2VsX2ZuKShzdHJ1Y3QgaW9fd3Ffd29yayAq
LCB2b2lkICopOwogCiBlbnVtIGlvX3dxX2NhbmNlbCBpb193cV9jYW5jZWxfY2Ioc3RydWN0
IGlvX3dxICp3cSwgd29ya19jYW5jZWxfZm4gKmNhbmNlbCwKIAkJCQkJdm9pZCAqZGF0YSwg
Ym9vbCBjYW5jZWxfYWxsKTsKIAotc3RydWN0IHRhc2tfc3RydWN0ICppb193cV9nZXRfdGFz
ayhzdHJ1Y3QgaW9fd3EgKndxKTsKLQogI2lmIGRlZmluZWQoQ09ORklHX0lPX1dRKQogZXh0
ZXJuIHZvaWQgaW9fd3Ffd29ya2VyX3NsZWVwaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAqKTsK
IGV4dGVybiB2b2lkIGlvX3dxX3dvcmtlcl9ydW5uaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAq
KTsKQEAgLTE1Miw2ICsxNTQsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaW9fd3Ffd29ya2Vy
X3J1bm5pbmcoc3RydWN0IHRhc2tfc3RydWN0ICp0c2spCiAKIHN0YXRpYyBpbmxpbmUgYm9v
bCBpb193cV9jdXJyZW50X2lzX3dvcmtlcih2b2lkKQogewotCXJldHVybiBpbl90YXNrKCkg
JiYgKGN1cnJlbnQtPmZsYWdzICYgUEZfSU9fV09SS0VSKTsKKwlyZXR1cm4gaW5fdGFzaygp
ICYmIChjdXJyZW50LT5mbGFncyAmIFBGX0lPX1dPUktFUikgJiYKKwkJY3VycmVudC0+cGZf
aW9fd29ya2VyOwogfQogI2VuZGlmCmRpZmYgLS1naXQgYS9mcy9pb191cmluZy5jIGIvaW9f
dXJpbmcvaW9fdXJpbmcuYwpzaW1pbGFyaXR5IGluZGV4IDUxJQpyZW5hbWUgZnJvbSBmcy9p
b191cmluZy5jCnJlbmFtZSB0byBpb191cmluZy9pb191cmluZy5jCmluZGV4IDFkODE3Mzc0
MTMxMC4uNDczZGJkMTgzMGEzIDEwMDY0NAotLS0gYS9mcy9pb191cmluZy5jCisrKyBiL2lv
X3VyaW5nL2lvX3VyaW5nLmMKQEAgLTExLDcgKzExLDcgQEAKICAqIGJlZm9yZSB3cml0aW5n
IHRoZSB0YWlsICh1c2luZyBzbXBfbG9hZF9hY3F1aXJlIHRvIHJlYWQgdGhlIHRhaWwgd2ls
bAogICogZG8pLiBJdCBhbHNvIG5lZWRzIGEgc21wX21iKCkgYmVmb3JlIHVwZGF0aW5nIENR
IGhlYWQgKG9yZGVyaW5nIHRoZQogICogZW50cnkgbG9hZChzKSB3aXRoIHRoZSBoZWFkIHN0
b3JlKSwgcGFpcmluZyB3aXRoIGFuIGltcGxpY2l0IGJhcnJpZXIKLSAqIHRocm91Z2ggYSBj
b250cm9sLWRlcGVuZGVuY3kgaW4gaW9fZ2V0X2NxcmluZyAoc21wX3N0b3JlX3JlbGVhc2Ug
dG8KKyAqIHRocm91Z2ggYSBjb250cm9sLWRlcGVuZGVuY3kgaW4gaW9fZ2V0X2NxZSAoc21w
X3N0b3JlX3JlbGVhc2UgdG8KICAqIHN0b3JlIGhlYWQgd2lsbCBkbykuIEZhaWx1cmUgdG8g
ZG8gc28gY291bGQgbGVhZCB0byByZWFkaW5nIGludmFsaWQKICAqIENRIGVudHJpZXMuCiAg
KgpAQCAtNTcsNyArNTcsNiBAQAogI2luY2x1ZGUgPGxpbnV4L21tYW4uaD4KICNpbmNsdWRl
IDxsaW51eC9wZXJjcHUuaD4KICNpbmNsdWRlIDxsaW51eC9zbGFiLmg+Ci0jaW5jbHVkZSA8
bGludXgva3RocmVhZC5oPgogI2luY2x1ZGUgPGxpbnV4L2Jsa2Rldi5oPgogI2luY2x1ZGUg
PGxpbnV4L2J2ZWMuaD4KICNpbmNsdWRlIDxsaW51eC9uZXQuaD4KQEAgLTc1LDM1ICs3NCw0
MyBAQAogI2luY2x1ZGUgPGxpbnV4L2Zzbm90aWZ5Lmg+CiAjaW5jbHVkZSA8bGludXgvZmFk
dmlzZS5oPgogI2luY2x1ZGUgPGxpbnV4L2V2ZW50cG9sbC5oPgotI2luY2x1ZGUgPGxpbnV4
L2ZzX3N0cnVjdC5oPgogI2luY2x1ZGUgPGxpbnV4L3NwbGljZS5oPgogI2luY2x1ZGUgPGxp
bnV4L3Rhc2tfd29yay5oPgogI2luY2x1ZGUgPGxpbnV4L3BhZ2VtYXAuaD4KICNpbmNsdWRl
IDxsaW51eC9pb191cmluZy5oPgotI2luY2x1ZGUgPGxpbnV4L2Jsay1jZ3JvdXAuaD4KLSNp
bmNsdWRlIDxsaW51eC9hdWRpdC5oPgorI2luY2x1ZGUgPGxpbnV4L3RyYWNlaG9vay5oPgog
CiAjZGVmaW5lIENSRUFURV9UUkFDRV9QT0lOVFMKICNpbmNsdWRlIDx0cmFjZS9ldmVudHMv
aW9fdXJpbmcuaD4KIAogI2luY2x1ZGUgPHVhcGkvbGludXgvaW9fdXJpbmcuaD4KIAotI2lu
Y2x1ZGUgImludGVybmFsLmgiCisjaW5jbHVkZSAiLi4vZnMvaW50ZXJuYWwuaCIKICNpbmNs
dWRlICJpby13cS5oIgogCiAjZGVmaW5lIElPUklOR19NQVhfRU5UUklFUwkzMjc2OAogI2Rl
ZmluZSBJT1JJTkdfTUFYX0NRX0VOVFJJRVMJKDIgKiBJT1JJTkdfTUFYX0VOVFJJRVMpCisj
ZGVmaW5lIElPUklOR19TUVBPTExfQ0FQX0VOVFJJRVNfVkFMVUUgOAogCi0vKgotICogU2hp
ZnQgb2YgOSBpcyA1MTIgZW50cmllcywgb3IgZXhhY3RseSBvbmUgcGFnZSBvbiA2NC1iaXQg
YXJjaHMKLSAqLwotI2RlZmluZSBJT1JJTkdfRklMRV9UQUJMRV9TSElGVAk5Ci0jZGVmaW5l
IElPUklOR19NQVhfRklMRVNfVEFCTEUJKDFVIDw8IElPUklOR19GSUxFX1RBQkxFX1NISUZU
KQotI2RlZmluZSBJT1JJTkdfRklMRV9UQUJMRV9NQVNLCShJT1JJTkdfTUFYX0ZJTEVTX1RB
QkxFIC0gMSkKLSNkZWZpbmUgSU9SSU5HX01BWF9GSVhFRF9GSUxFUwkoNjQgKiBJT1JJTkdf
TUFYX0ZJTEVTX1RBQkxFKQorLyogb25seSBkZWZpbmUgbWF4ICovCisjZGVmaW5lIElPUklO
R19NQVhfRklYRURfRklMRVMJKDFVIDw8IDE1KQogI2RlZmluZSBJT1JJTkdfTUFYX1JFU1RS
SUNUSU9OUwkoSU9SSU5HX1JFU1RSSUNUSU9OX0xBU1QgKyBcCiAJCQkJIElPUklOR19SRUdJ
U1RFUl9MQVNUICsgSU9SSU5HX09QX0xBU1QpCiAKKyNkZWZpbmUgSU9fUlNSQ19UQUdfVEFC
TEVfU0hJRlQJKFBBR0VfU0hJRlQgLSAzKQorI2RlZmluZSBJT19SU1JDX1RBR19UQUJMRV9N
QVgJKDFVIDw8IElPX1JTUkNfVEFHX1RBQkxFX1NISUZUKQorI2RlZmluZSBJT19SU1JDX1RB
R19UQUJMRV9NQVNLCShJT19SU1JDX1RBR19UQUJMRV9NQVggLSAxKQorCisjZGVmaW5lIElP
UklOR19NQVhfUkVHX0JVRkZFUlMJKDFVIDw8IDE0KQorCisjZGVmaW5lIFNRRV9WQUxJRF9G
TEFHUwkoSU9TUUVfRklYRURfRklMRXxJT1NRRV9JT19EUkFJTnxJT1NRRV9JT19MSU5LfAlc
CisJCQkJSU9TUUVfSU9fSEFSRExJTksgfCBJT1NRRV9BU1lOQyB8IFwKKwkJCQlJT1NRRV9C
VUZGRVJfU0VMRUNUKQorI2RlZmluZSBJT19SRVFfQ0xFQU5fRkxBR1MgKFJFUV9GX0JVRkZF
Ul9TRUxFQ1RFRCB8IFJFUV9GX05FRURfQ0xFQU5VUCB8IFwKKwkJCQlSRVFfRl9QT0xMRUQg
fCBSRVFfRl9JTkZMSUdIVCB8IFJFUV9GX0NSRURTKQorCisjZGVmaW5lIElPX1RDVFhfUkVG
U19DQUNIRV9OUgkoMVUgPDwgMTApCisKIHN0cnVjdCBpb191cmluZyB7CiAJdTMyIGhlYWQg
X19fX2NhY2hlbGluZV9hbGlnbmVkX2luX3NtcDsKIAl1MzIgdGFpbCBfX19fY2FjaGVsaW5l
X2FsaWduZWRfaW5fc21wOwpAQCAtMTYyLDcgKzE2OSw3IEBAIHN0cnVjdCBpb19yaW5ncyB7
CiAJICogV3JpdHRlbiBieSB0aGUgYXBwbGljYXRpb24sIHNob3VsZG4ndCBiZSBtb2RpZmll
ZCBieSB0aGUKIAkgKiBrZXJuZWwuCiAJICovCi0JdTMyICAgICAgICAgICAgICAgICAgICAg
Y3FfZmxhZ3M7CisJdTMyCQkJY3FfZmxhZ3M7CiAJLyoKIAkgKiBOdW1iZXIgb2YgY29tcGxl
dGlvbiBldmVudHMgbG9zdCBiZWNhdXNlIHRoZSBxdWV1ZSB3YXMgZnVsbDsKIAkgKiB0aGlz
IHNob3VsZCBiZSBhdm9pZGVkIGJ5IHRoZSBhcHBsaWNhdGlvbiBieSBtYWtpbmcgc3VyZQpA
QCAtMTg3LDM2ICsxOTQsNjQgQEAgc3RydWN0IGlvX3JpbmdzIHsKIAlzdHJ1Y3QgaW9fdXJp
bmdfY3FlCWNxZXNbXSBfX19fY2FjaGVsaW5lX2FsaWduZWRfaW5fc21wOwogfTsKIAorZW51
bSBpb191cmluZ19jbWRfZmxhZ3MgeworCUlPX1VSSU5HX0ZfTk9OQkxPQ0sJCT0gMSwKKwlJ
T19VUklOR19GX0NPTVBMRVRFX0RFRkVSCT0gMiwKK307CisKIHN0cnVjdCBpb19tYXBwZWRf
dWJ1ZiB7CiAJdTY0CQl1YnVmOwotCXNpemVfdAkJbGVuOwotCXN0cnVjdAkJYmlvX3ZlYyAq
YnZlYzsKKwl1NjQJCXVidWZfZW5kOwogCXVuc2lnbmVkIGludAlucl9idmVjczsKIAl1bnNp
Z25lZCBsb25nCWFjY3RfcGFnZXM7CisJc3RydWN0IGJpb192ZWMJYnZlY1tdOworfTsKKwor
c3RydWN0IGlvX3JpbmdfY3R4OworCitzdHJ1Y3QgaW9fb3ZlcmZsb3dfY3FlIHsKKwlzdHJ1
Y3QgaW9fdXJpbmdfY3FlIGNxZTsKKwlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7Cit9OworCitz
dHJ1Y3QgaW9fZml4ZWRfZmlsZSB7CisJLyogZmlsZSAqIHdpdGggYWRkaXRpb25hbCBGRlNf
KiBmbGFncyAqLworCXVuc2lnbmVkIGxvbmcgZmlsZV9wdHI7Cit9OworCitzdHJ1Y3QgaW9f
cnNyY19wdXQgeworCXN0cnVjdCBsaXN0X2hlYWQgbGlzdDsKKwl1NjQgdGFnOworCXVuaW9u
IHsKKwkJdm9pZCAqcnNyYzsKKwkJc3RydWN0IGZpbGUgKmZpbGU7CisJCXN0cnVjdCBpb19t
YXBwZWRfdWJ1ZiAqYnVmOworCX07CiB9OwogCi1zdHJ1Y3QgZml4ZWRfZmlsZV90YWJsZSB7
Ci0Jc3RydWN0IGZpbGUJCSoqZmlsZXM7CitzdHJ1Y3QgaW9fZmlsZV90YWJsZSB7CisJc3Ry
dWN0IGlvX2ZpeGVkX2ZpbGUgKmZpbGVzOwogfTsKIAotc3RydWN0IGZpeGVkX2ZpbGVfcmVm
X25vZGUgeworc3RydWN0IGlvX3JzcmNfbm9kZSB7CiAJc3RydWN0IHBlcmNwdV9yZWYJCXJl
ZnM7CiAJc3RydWN0IGxpc3RfaGVhZAkJbm9kZTsKLQlzdHJ1Y3QgbGlzdF9oZWFkCQlmaWxl
X2xpc3Q7Ci0Jc3RydWN0IGZpeGVkX2ZpbGVfZGF0YQkJKmZpbGVfZGF0YTsKKwlzdHJ1Y3Qg
bGlzdF9oZWFkCQlyc3JjX2xpc3Q7CisJc3RydWN0IGlvX3JzcmNfZGF0YQkJKnJzcmNfZGF0
YTsKIAlzdHJ1Y3QgbGxpc3Rfbm9kZQkJbGxpc3Q7CiAJYm9vbAkJCQlkb25lOwogfTsKIAot
c3RydWN0IGZpeGVkX2ZpbGVfZGF0YSB7Ci0Jc3RydWN0IGZpeGVkX2ZpbGVfdGFibGUJCSp0
YWJsZTsKK3R5cGVkZWYgdm9pZCAocnNyY19wdXRfZm4pKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4LCBzdHJ1Y3QgaW9fcnNyY19wdXQgKnByc3JjKTsKKworc3RydWN0IGlvX3JzcmNfZGF0
YSB7CiAJc3RydWN0IGlvX3JpbmdfY3R4CQkqY3R4OwogCi0Jc3RydWN0IGZpeGVkX2ZpbGVf
cmVmX25vZGUJKm5vZGU7Ci0Jc3RydWN0IHBlcmNwdV9yZWYJCXJlZnM7CisJdTY0CQkJCSoq
dGFnczsKKwl1bnNpZ25lZCBpbnQJCQlucjsKKwlyc3JjX3B1dF9mbgkJCSpkb19wdXQ7CisJ
YXRvbWljX3QJCQlyZWZzOwogCXN0cnVjdCBjb21wbGV0aW9uCQlkb25lOwotCXN0cnVjdCBs
aXN0X2hlYWQJCXJlZl9saXN0OwotCXNwaW5sb2NrX3QJCQlsb2NrOwogCWJvb2wJCQkJcXVp
ZXNjZTsKIH07CiAKQEAgLTIzNSwzMyArMjcwLDgxIEBAIHN0cnVjdCBpb19yZXN0cmljdGlv
biB7CiAJYm9vbCByZWdpc3RlcmVkOwogfTsKIAorZW51bSB7CisJSU9fU1FfVEhSRUFEX1NI
T1VMRF9TVE9QID0gMCwKKwlJT19TUV9USFJFQURfU0hPVUxEX1BBUkssCit9OworCiBzdHJ1
Y3QgaW9fc3FfZGF0YSB7CiAJcmVmY291bnRfdAkJcmVmczsKKwlhdG9taWNfdAkJcGFya19w
ZW5kaW5nOwogCXN0cnVjdCBtdXRleAkJbG9jazsKIAogCS8qIGN0eCdzIHRoYXQgYXJlIHVz
aW5nIHRoaXMgc3FkICovCiAJc3RydWN0IGxpc3RfaGVhZAljdHhfbGlzdDsKLQlzdHJ1Y3Qg
bGlzdF9oZWFkCWN0eF9uZXdfbGlzdDsKLQlzdHJ1Y3QgbXV0ZXgJCWN0eF9sb2NrOwogCiAJ
c3RydWN0IHRhc2tfc3RydWN0CSp0aHJlYWQ7CiAJc3RydWN0IHdhaXRfcXVldWVfaGVhZAl3
YWl0OworCisJdW5zaWduZWQJCXNxX3RocmVhZF9pZGxlOworCWludAkJCXNxX2NwdTsKKwlw
aWRfdAkJCXRhc2tfcGlkOworCXBpZF90CQkJdGFza190Z2lkOworCisJdW5zaWduZWQgbG9u
ZwkJc3RhdGU7CisJc3RydWN0IGNvbXBsZXRpb24JZXhpdGVkOworfTsKKworI2RlZmluZSBJ
T19DT01QTF9CQVRDSAkJCTMyCisjZGVmaW5lIElPX1JFUV9DQUNIRV9TSVpFCQkzMgorI2Rl
ZmluZSBJT19SRVFfQUxMT0NfQkFUQ0gJCTgKKworc3RydWN0IGlvX3N1Ym1pdF9saW5rIHsK
KwlzdHJ1Y3QgaW9fa2lvY2IJCSpoZWFkOworCXN0cnVjdCBpb19raW9jYgkJKmxhc3Q7Cit9
OworCitzdHJ1Y3QgaW9fc3VibWl0X3N0YXRlIHsKKwlzdHJ1Y3QgYmxrX3BsdWcJCXBsdWc7
CisJc3RydWN0IGlvX3N1Ym1pdF9saW5rCWxpbms7CisKKwkvKgorCSAqIGlvX2tpb2NiIGFs
bG9jIGNhY2hlCisJICovCisJdm9pZAkJCSpyZXFzW0lPX1JFUV9DQUNIRV9TSVpFXTsKKwl1
bnNpZ25lZCBpbnQJCWZyZWVfcmVxczsKKworCWJvb2wJCQlwbHVnX3N0YXJ0ZWQ7CisKKwkv
KgorCSAqIEJhdGNoIGNvbXBsZXRpb24gbG9naWMKKwkgKi8KKwlzdHJ1Y3QgaW9fa2lvY2IJ
CSpjb21wbF9yZXFzW0lPX0NPTVBMX0JBVENIXTsKKwl1bnNpZ25lZCBpbnQJCWNvbXBsX25y
OworCS8qIGlubGluZS90YXNrX3dvcmsgY29tcGxldGlvbiBsaXN0LCB1bmRlciAtPnVyaW5n
X2xvY2sgKi8KKwlzdHJ1Y3QgbGlzdF9oZWFkCWZyZWVfbGlzdDsKKworCXVuc2lnbmVkIGlu
dAkJaW9zX2xlZnQ7CiB9OwogCiBzdHJ1Y3QgaW9fcmluZ19jdHggeworCS8qIGNvbnN0IG9y
IHJlYWQtbW9zdGx5IGhvdCBkYXRhICovCiAJc3RydWN0IHsKIAkJc3RydWN0IHBlcmNwdV9y
ZWYJcmVmczsKLQl9IF9fX19jYWNoZWxpbmVfYWxpZ25lZF9pbl9zbXA7CiAKLQlzdHJ1Y3Qg
eworCQlzdHJ1Y3QgaW9fcmluZ3MJCSpyaW5nczsKIAkJdW5zaWduZWQgaW50CQlmbGFnczsK
IAkJdW5zaWduZWQgaW50CQljb21wYXQ6IDE7Ci0JCXVuc2lnbmVkIGludAkJbGltaXRfbWVt
OiAxOwotCQl1bnNpZ25lZCBpbnQJCWNxX292ZXJmbG93X2ZsdXNoZWQ6IDE7CiAJCXVuc2ln
bmVkIGludAkJZHJhaW5fbmV4dDogMTsKIAkJdW5zaWduZWQgaW50CQlldmVudGZkX2FzeW5j
OiAxOwogCQl1bnNpZ25lZCBpbnQJCXJlc3RyaWN0ZWQ6IDE7Ci0JCXVuc2lnbmVkIGludAkJ
c3FvX2RlYWQ6IDE7CisJCXVuc2lnbmVkIGludAkJb2ZmX3RpbWVvdXRfdXNlZDogMTsKKwkJ
dW5zaWduZWQgaW50CQlkcmFpbl9hY3RpdmU6IDE7CisJfSBfX19fY2FjaGVsaW5lX2FsaWdu
ZWRfaW5fc21wOworCisJLyogc3VibWlzc2lvbiBkYXRhICovCisJc3RydWN0IHsKKwkJc3Ry
dWN0IG11dGV4CQl1cmluZ19sb2NrOwogCiAJCS8qCiAJCSAqIFJpbmcgYnVmZmVyIG9mIGlu
ZGljZXMgaW50byBhcnJheSBvZiBpb191cmluZ19zcWUsIHdoaWNoIGlzCkBAIC0yNzUsMTAx
ICszNTgsNTkgQEAgc3RydWN0IGlvX3JpbmdfY3R4IHsKIAkJICogYXJyYXkuCiAJCSAqLwog
CQl1MzIJCQkqc3FfYXJyYXk7CisJCXN0cnVjdCBpb191cmluZ19zcWUJKnNxX3NxZXM7CiAJ
CXVuc2lnbmVkCQljYWNoZWRfc3FfaGVhZDsKIAkJdW5zaWduZWQJCXNxX2VudHJpZXM7Ci0J
CXVuc2lnbmVkCQlzcV9tYXNrOwotCQl1bnNpZ25lZAkJc3FfdGhyZWFkX2lkbGU7Ci0JCXVu
c2lnbmVkCQljYWNoZWRfc3FfZHJvcHBlZDsKLQkJdW5zaWduZWQJCWNhY2hlZF9jcV9vdmVy
ZmxvdzsKLQkJdW5zaWduZWQgbG9uZwkJc3FfY2hlY2tfb3ZlcmZsb3c7Ci0KIAkJc3RydWN0
IGxpc3RfaGVhZAlkZWZlcl9saXN0OworCisJCS8qCisJCSAqIEZpeGVkIHJlc291cmNlcyBm
YXN0IHBhdGgsIHNob3VsZCBiZSBhY2Nlc3NlZCBvbmx5IHVuZGVyCisJCSAqIHVyaW5nX2xv
Y2ssIGFuZCB1cGRhdGVkIHRocm91Z2ggaW9fdXJpbmdfcmVnaXN0ZXIoMikKKwkJICovCisJ
CXN0cnVjdCBpb19yc3JjX25vZGUJKnJzcmNfbm9kZTsKKwkJc3RydWN0IGlvX2ZpbGVfdGFi
bGUJZmlsZV90YWJsZTsKKwkJdW5zaWduZWQJCW5yX3VzZXJfZmlsZXM7CisJCXVuc2lnbmVk
CQlucl91c2VyX2J1ZnM7CisJCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZgkqKnVzZXJfYnVmczsK
KworCQlzdHJ1Y3QgaW9fc3VibWl0X3N0YXRlCXN1Ym1pdF9zdGF0ZTsKIAkJc3RydWN0IGxp
c3RfaGVhZAl0aW1lb3V0X2xpc3Q7CisJCXN0cnVjdCBsaXN0X2hlYWQJbHRpbWVvdXRfbGlz
dDsKIAkJc3RydWN0IGxpc3RfaGVhZAljcV9vdmVyZmxvd19saXN0OwotCi0JCXN0cnVjdCBp
b191cmluZ19zcWUJKnNxX3NxZXM7CisJCXN0cnVjdCB4YXJyYXkJCWlvX2J1ZmZlcnM7CisJ
CXN0cnVjdCB4YXJyYXkJCXBlcnNvbmFsaXRpZXM7CisJCXUzMgkJCXBlcnNfbmV4dDsKKwkJ
dW5zaWduZWQJCXNxX3RocmVhZF9pZGxlOwogCX0gX19fX2NhY2hlbGluZV9hbGlnbmVkX2lu
X3NtcDsKIAotCXN0cnVjdCBpb19yaW5ncwkqcmluZ3M7Ci0KLQkvKiBJTyBvZmZsb2FkICov
Ci0Jc3RydWN0IGlvX3dxCQkqaW9fd3E7Ci0KLQkvKgotCSAqIEZvciBTUVBPTEwgdXNhZ2Ug
LSB3ZSBob2xkIGEgcmVmZXJlbmNlIHRvIHRoZSBwYXJlbnQgdGFzaywgc28gd2UKLQkgKiBo
YXZlIGFjY2VzcyB0byB0aGUgLT5maWxlcwotCSAqLwotCXN0cnVjdCB0YXNrX3N0cnVjdAkq
c3FvX3Rhc2s7Ci0KLQkvKiBPbmx5IHVzZWQgZm9yIGFjY291bnRpbmcgcHVycG9zZXMgKi8K
LQlzdHJ1Y3QgbW1fc3RydWN0CSptbV9hY2NvdW50OwotCi0jaWZkZWYgQ09ORklHX0JMS19D
R1JPVVAKLQlzdHJ1Y3QgY2dyb3VwX3N1YnN5c19zdGF0ZQkqc3FvX2Jsa2NnX2NzczsKLSNl
bmRpZgorCS8qIElSUSBjb21wbGV0aW9uIGxpc3QsIHVuZGVyIC0+Y29tcGxldGlvbl9sb2Nr
ICovCisJc3RydWN0IGxpc3RfaGVhZAlsb2NrZWRfZnJlZV9saXN0OworCXVuc2lnbmVkIGlu
dAkJbG9ja2VkX2ZyZWVfbnI7CiAKKwljb25zdCBzdHJ1Y3QgY3JlZAkqc3FfY3JlZHM7CS8q
IGNyZWQgdXNlZCBmb3IgX19pb19zcV90aHJlYWQoKSAqLwogCXN0cnVjdCBpb19zcV9kYXRh
CSpzcV9kYXRhOwkvKiBpZiB1c2luZyBzcSB0aHJlYWQgcG9sbGluZyAqLwogCiAJc3RydWN0
IHdhaXRfcXVldWVfaGVhZAlzcW9fc3Ffd2FpdDsKLQlzdHJ1Y3Qgd2FpdF9xdWV1ZV9lbnRy
eQlzcW9fd2FpdF9lbnRyeTsKIAlzdHJ1Y3QgbGlzdF9oZWFkCXNxZF9saXN0OwogCi0JLyoK
LQkgKiBJZiB1c2VkLCBmaXhlZCBmaWxlIHNldC4gV3JpdGVycyBtdXN0IGVuc3VyZSB0aGF0
IC0+cmVmcyBpcyBkZWFkLAotCSAqIHJlYWRlcnMgbXVzdCBlbnN1cmUgdGhhdCAtPnJlZnMg
aXMgYWxpdmUgYXMgbG9uZyBhcyB0aGUgZmlsZSogaXMKLQkgKiB1c2VkLiBPbmx5IHVwZGF0
ZWQgdGhyb3VnaCBpb191cmluZ19yZWdpc3RlcigyKS4KLQkgKi8KLQlzdHJ1Y3QgZml4ZWRf
ZmlsZV9kYXRhCSpmaWxlX2RhdGE7Ci0JdW5zaWduZWQJCW5yX3VzZXJfZmlsZXM7Ci0KLQkv
KiBpZiB1c2VkLCBmaXhlZCBtYXBwZWQgdXNlciBidWZmZXJzICovCi0JdW5zaWduZWQJCW5y
X3VzZXJfYnVmczsKLQlzdHJ1Y3QgaW9fbWFwcGVkX3VidWYJKnVzZXJfYnVmczsKLQotCXN0
cnVjdCB1c2VyX3N0cnVjdAkqdXNlcjsKLQotCWNvbnN0IHN0cnVjdCBjcmVkCSpjcmVkczsK
LQotI2lmZGVmIENPTkZJR19BVURJVAotCWt1aWRfdAkJCWxvZ2ludWlkOwotCXVuc2lnbmVk
IGludAkJc2Vzc2lvbmlkOwotI2VuZGlmCi0KLQlzdHJ1Y3QgY29tcGxldGlvbglyZWZfY29t
cDsKLQlzdHJ1Y3QgY29tcGxldGlvbglzcV90aHJlYWRfY29tcDsKLQotCS8qIGlmIGFsbCBl
bHNlIGZhaWxzLi4uICovCi0Jc3RydWN0IGlvX2tpb2NiCQkqZmFsbGJhY2tfcmVxOwotCi0j
aWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlzdHJ1Y3Qgc29ja2V0CQkqcmluZ19zb2NrOwot
I2VuZGlmCi0KLQlzdHJ1Y3QgeGFycmF5CQlpb19idWZmZXJzOwotCi0Jc3RydWN0IHhhcnJh
eQkJcGVyc29uYWxpdGllczsKLQl1MzIJCQlwZXJzX25leHQ7CisJdW5zaWduZWQgbG9uZwkJ
Y2hlY2tfY3Ffb3ZlcmZsb3c7CiAKIAlzdHJ1Y3QgewogCQl1bnNpZ25lZAkJY2FjaGVkX2Nx
X3RhaWw7CiAJCXVuc2lnbmVkCQljcV9lbnRyaWVzOwotCQl1bnNpZ25lZAkJY3FfbWFzazsK
KwkJc3RydWN0IGV2ZW50ZmRfY3R4CSpjcV9ldl9mZDsKKwkJc3RydWN0IHdhaXRfcXVldWVf
aGVhZAlwb2xsX3dhaXQ7CisJCXN0cnVjdCB3YWl0X3F1ZXVlX2hlYWQJY3Ffd2FpdDsKKwkJ
dW5zaWduZWQJCWNxX2V4dHJhOwogCQlhdG9taWNfdAkJY3FfdGltZW91dHM7CiAJCXVuc2ln
bmVkCQljcV9sYXN0X3RtX2ZsdXNoOwotCQl1bnNpZ25lZCBsb25nCQljcV9jaGVja19vdmVy
ZmxvdzsKLQkJc3RydWN0IHdhaXRfcXVldWVfaGVhZAljcV93YWl0OwotCQlzdHJ1Y3QgZmFz
eW5jX3N0cnVjdAkqY3FfZmFzeW5jOwotCQlzdHJ1Y3QgZXZlbnRmZF9jdHgJKmNxX2V2X2Zk
OwotCX0gX19fX2NhY2hlbGluZV9hbGlnbmVkX2luX3NtcDsKLQotCXN0cnVjdCB7Ci0JCXN0
cnVjdCBtdXRleAkJdXJpbmdfbG9jazsKLQkJd2FpdF9xdWV1ZV9oZWFkX3QJd2FpdDsKIAl9
IF9fX19jYWNoZWxpbmVfYWxpZ25lZF9pbl9zbXA7CiAKIAlzdHJ1Y3QgewogCQlzcGlubG9j
a190CQljb21wbGV0aW9uX2xvY2s7CiAKKwkJc3BpbmxvY2tfdAkJdGltZW91dF9sb2NrOwor
CiAJCS8qCiAJCSAqIC0+aW9wb2xsX2xpc3QgaXMgcHJvdGVjdGVkIGJ5IHRoZSBjdHgtPnVy
aW5nX2xvY2sgZm9yCiAJCSAqIGlvX3VyaW5nIGluc3RhbmNlcyB0aGF0IGRvbid0IHVzZSBJ
T1JJTkdfU0VUVVBfU1FQT0xMLgpAQCAtMzc5LDE3ICs0MjAsNjIgQEAgc3RydWN0IGlvX3Jp
bmdfY3R4IHsKIAkJc3RydWN0IGxpc3RfaGVhZAlpb3BvbGxfbGlzdDsKIAkJc3RydWN0IGhs
aXN0X2hlYWQJKmNhbmNlbF9oYXNoOwogCQl1bnNpZ25lZAkJY2FuY2VsX2hhc2hfYml0czsK
LQkJYm9vbAkJCXBvbGxfbXVsdGlfZmlsZTsKLQotCQlzcGlubG9ja190CQlpbmZsaWdodF9s
b2NrOwotCQlzdHJ1Y3QgbGlzdF9oZWFkCWluZmxpZ2h0X2xpc3Q7CisJCWJvb2wJCQlwb2xs
X211bHRpX3F1ZXVlOwogCX0gX19fX2NhY2hlbGluZV9hbGlnbmVkX2luX3NtcDsKIAotCXN0
cnVjdCBkZWxheWVkX3dvcmsJCWZpbGVfcHV0X3dvcms7Ci0Jc3RydWN0IGxsaXN0X2hlYWQJ
CWZpbGVfcHV0X2xsaXN0OwotCi0Jc3RydWN0IHdvcmtfc3RydWN0CQlleGl0X3dvcms7CiAJ
c3RydWN0IGlvX3Jlc3RyaWN0aW9uCQlyZXN0cmljdGlvbnM7CisKKwkvKiBzbG93IHBhdGgg
cnNyYyBhdXhpbGFyeSBkYXRhLCB1c2VkIGJ5IHVwZGF0ZS9yZWdpc3RlciAqLworCXN0cnVj
dCB7CisJCXN0cnVjdCBpb19yc3JjX25vZGUJCSpyc3JjX2JhY2t1cF9ub2RlOworCQlzdHJ1
Y3QgaW9fbWFwcGVkX3VidWYJCSpkdW1teV91YnVmOworCQlzdHJ1Y3QgaW9fcnNyY19kYXRh
CQkqZmlsZV9kYXRhOworCQlzdHJ1Y3QgaW9fcnNyY19kYXRhCQkqYnVmX2RhdGE7CisKKwkJ
c3RydWN0IGRlbGF5ZWRfd29yawkJcnNyY19wdXRfd29yazsKKwkJc3RydWN0IGxsaXN0X2hl
YWQJCXJzcmNfcHV0X2xsaXN0OworCQlzdHJ1Y3QgbGlzdF9oZWFkCQlyc3JjX3JlZl9saXN0
OworCQlzcGlubG9ja190CQkJcnNyY19yZWZfbG9jazsKKwl9OworCisJLyogS2VlcCB0aGlz
IGxhc3QsIHdlIGRvbid0IG5lZWQgaXQgZm9yIHRoZSBmYXN0IHBhdGggKi8KKwlzdHJ1Y3Qg
eworCQkjaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKKwkJCXN0cnVjdCBzb2NrZXQJCSpyaW5n
X3NvY2s7CisJCSNlbmRpZgorCQkvKiBoYXNoZWQgYnVmZmVyZWQgd3JpdGUgc2VyaWFsaXph
dGlvbiAqLworCQlzdHJ1Y3QgaW9fd3FfaGFzaAkJKmhhc2hfbWFwOworCisJCS8qIE9ubHkg
dXNlZCBmb3IgYWNjb3VudGluZyBwdXJwb3NlcyAqLworCQlzdHJ1Y3QgdXNlcl9zdHJ1Y3QJ
CSp1c2VyOworCQlzdHJ1Y3QgbW1fc3RydWN0CQkqbW1fYWNjb3VudDsKKworCQkvKiBjdHgg
ZXhpdCBhbmQgY2FuY2VsYXRpb24gKi8KKwkJc3RydWN0IGxsaXN0X2hlYWQJCWZhbGxiYWNr
X2xsaXN0OworCQlzdHJ1Y3QgZGVsYXllZF93b3JrCQlmYWxsYmFja193b3JrOworCQlzdHJ1
Y3Qgd29ya19zdHJ1Y3QJCWV4aXRfd29yazsKKwkJc3RydWN0IGxpc3RfaGVhZAkJdGN0eF9s
aXN0OworCQlzdHJ1Y3QgY29tcGxldGlvbgkJcmVmX2NvbXA7CisJCXUzMgkJCQlpb3dxX2xp
bWl0c1syXTsKKwkJYm9vbAkJCQlpb3dxX2xpbWl0c19zZXQ7CisJfTsKK307CisKK3N0cnVj
dCBpb191cmluZ190YXNrIHsKKwkvKiBzdWJtaXNzaW9uIHNpZGUgKi8KKwlpbnQJCQljYWNo
ZWRfcmVmczsKKwlzdHJ1Y3QgeGFycmF5CQl4YTsKKwlzdHJ1Y3Qgd2FpdF9xdWV1ZV9oZWFk
CXdhaXQ7CisJY29uc3Qgc3RydWN0IGlvX3JpbmdfY3R4ICpsYXN0OworCXN0cnVjdCBpb193
cQkJKmlvX3dxOworCXN0cnVjdCBwZXJjcHVfY291bnRlcglpbmZsaWdodDsKKwlhdG9taWNf
dAkJaW5mbGlnaHRfdHJhY2tlZDsKKwlhdG9taWNfdAkJaW5faWRsZTsKKworCXNwaW5sb2Nr
X3QJCXRhc2tfbG9jazsKKwlzdHJ1Y3QgaW9fd3Ffd29ya19saXN0CXRhc2tfbGlzdDsKKwlz
dHJ1Y3QgY2FsbGJhY2tfaGVhZAl0YXNrX3dvcms7CisJYm9vbAkJCXRhc2tfcnVubmluZzsK
IH07CiAKIC8qCkBAIC0zOTgsMjAgKzQ4NCwyNCBAQCBzdHJ1Y3QgaW9fcmluZ19jdHggewog
ICovCiBzdHJ1Y3QgaW9fcG9sbF9pb2NiIHsKIAlzdHJ1Y3QgZmlsZQkJCSpmaWxlOwotCXVu
aW9uIHsKLQkJc3RydWN0IHdhaXRfcXVldWVfaGVhZAkqaGVhZDsKLQkJdTY0CQkJYWRkcjsK
LQl9OworCXN0cnVjdCB3YWl0X3F1ZXVlX2hlYWQJCSpoZWFkOwogCV9fcG9sbF90CQkJZXZl
bnRzOwotCWJvb2wJCQkJZG9uZTsKLQlib29sCQkJCWNhbmNlbGVkOwogCXN0cnVjdCB3YWl0
X3F1ZXVlX2VudHJ5CQl3YWl0OwogfTsKIAorc3RydWN0IGlvX3BvbGxfdXBkYXRlIHsKKwlz
dHJ1Y3QgZmlsZQkJCSpmaWxlOworCXU2NAkJCQlvbGRfdXNlcl9kYXRhOworCXU2NAkJCQlu
ZXdfdXNlcl9kYXRhOworCV9fcG9sbF90CQkJZXZlbnRzOworCWJvb2wJCQkJdXBkYXRlX2V2
ZW50czsKKwlib29sCQkJCXVwZGF0ZV91c2VyX2RhdGE7Cit9OworCiBzdHJ1Y3QgaW9fY2xv
c2UgewogCXN0cnVjdCBmaWxlCQkJKmZpbGU7Ci0Jc3RydWN0IGZpbGUJCQkqcHV0X2ZpbGU7
CiAJaW50CQkJCWZkOworCXUzMgkJCQlmaWxlX3Nsb3Q7CiB9OwogCiBzdHJ1Y3QgaW9fdGlt
ZW91dF9kYXRhIHsKQEAgLTQxOSw2ICs1MDksNyBAQCBzdHJ1Y3QgaW9fdGltZW91dF9kYXRh
IHsKIAlzdHJ1Y3QgaHJ0aW1lcgkJCXRpbWVyOwogCXN0cnVjdCB0aW1lc3BlYzY0CQl0czsK
IAllbnVtIGhydGltZXJfbW9kZQkJbW9kZTsKKwl1MzIJCQkJZmxhZ3M7CiB9OwogCiBzdHJ1
Y3QgaW9fYWNjZXB0IHsKQEAgLTQyNiw2ICs1MTcsNyBAQCBzdHJ1Y3QgaW9fYWNjZXB0IHsK
IAlzdHJ1Y3Qgc29ja2FkZHIgX191c2VyCQkqYWRkcjsKIAlpbnQgX191c2VyCQkJKmFkZHJf
bGVuOwogCWludAkJCQlmbGFnczsKKwl1MzIJCQkJZmlsZV9zbG90OwogCXVuc2lnbmVkIGxv
bmcJCQlub2ZpbGU7CiB9OwogCkBAIC00NDcsMTEgKzUzOSwyMCBAQCBzdHJ1Y3QgaW9fdGlt
ZW91dCB7CiAJdTMyCQkJCW9mZjsKIAl1MzIJCQkJdGFyZ2V0X3NlcTsKIAlzdHJ1Y3QgbGlz
dF9oZWFkCQlsaXN0OworCS8qIGhlYWQgb2YgdGhlIGxpbmssIHVzZWQgYnkgbGlua2VkIHRp
bWVvdXRzIG9ubHkgKi8KKwlzdHJ1Y3QgaW9fa2lvY2IJCQkqaGVhZDsKKwkvKiBmb3IgbGlu
a2VkIGNvbXBsZXRpb25zICovCisJc3RydWN0IGlvX2tpb2NiCQkJKnByZXY7CiB9OwogCiBz
dHJ1Y3QgaW9fdGltZW91dF9yZW0gewogCXN0cnVjdCBmaWxlCQkJKmZpbGU7CiAJdTY0CQkJ
CWFkZHI7CisKKwkvKiB0aW1lb3V0IHVwZGF0ZSAqLworCXN0cnVjdCB0aW1lc3BlYzY0CQl0
czsKKwl1MzIJCQkJZmxhZ3M7CisJYm9vbAkJCQlsdGltZW91dDsKIH07CiAKIHN0cnVjdCBp
b19ydyB7CkBAIC00NzAsOCArNTcxLDkgQEAgc3RydWN0IGlvX2Nvbm5lY3Qgewogc3RydWN0
IGlvX3NyX21zZyB7CiAJc3RydWN0IGZpbGUJCQkqZmlsZTsKIAl1bmlvbiB7Ci0JCXN0cnVj
dCB1c2VyX21zZ2hkciBfX3VzZXIgKnVtc2c7Ci0JCXZvaWQgX191c2VyCQkqYnVmOworCQlz
dHJ1Y3QgY29tcGF0X21zZ2hkciBfX3VzZXIJKnVtc2dfY29tcGF0OworCQlzdHJ1Y3QgdXNl
cl9tc2doZHIgX191c2VyCSp1bXNnOworCQl2b2lkIF9fdXNlcgkJCSpidWY7CiAJfTsKIAlp
bnQJCQkJbXNnX2ZsYWdzOwogCWludAkJCQliZ2lkOwpAQCAtNDgyLDEzICs1ODQsMTMgQEAg
c3RydWN0IGlvX3NyX21zZyB7CiBzdHJ1Y3QgaW9fb3BlbiB7CiAJc3RydWN0IGZpbGUJCQkq
ZmlsZTsKIAlpbnQJCQkJZGZkOwotCWJvb2wJCQkJaWdub3JlX25vbmJsb2NrOworCXUzMgkJ
CQlmaWxlX3Nsb3Q7CiAJc3RydWN0IGZpbGVuYW1lCQkJKmZpbGVuYW1lOwogCXN0cnVjdCBv
cGVuX2hvdwkJCWhvdzsKIAl1bnNpZ25lZCBsb25nCQkJbm9maWxlOwogfTsKIAotc3RydWN0
IGlvX2ZpbGVzX3VwZGF0ZSB7CitzdHJ1Y3QgaW9fcnNyY191cGRhdGUgewogCXN0cnVjdCBm
aWxlCQkJKmZpbGU7CiAJdTY0CQkJCWFyZzsKIAl1MzIJCQkJbnJfYXJnczsKQEAgLTUxOSwx
MCArNjIxLDEwIEBAIHN0cnVjdCBpb19lcG9sbCB7CiAKIHN0cnVjdCBpb19zcGxpY2Ugewog
CXN0cnVjdCBmaWxlCQkJKmZpbGVfb3V0OwotCXN0cnVjdCBmaWxlCQkJKmZpbGVfaW47CiAJ
bG9mZl90CQkJCW9mZl9vdXQ7CiAJbG9mZl90CQkJCW9mZl9pbjsKIAl1NjQJCQkJbGVuOwor
CWludAkJCQlzcGxpY2VfZmRfaW47CiAJdW5zaWduZWQgaW50CQkJZmxhZ3M7CiB9OwogCkBA
IC01NDQsOSArNjQ2LDUyIEBAIHN0cnVjdCBpb19zdGF0eCB7CiAJc3RydWN0IHN0YXR4IF9f
dXNlcgkJKmJ1ZmZlcjsKIH07CiAKK3N0cnVjdCBpb19zaHV0ZG93biB7CisJc3RydWN0IGZp
bGUJCQkqZmlsZTsKKwlpbnQJCQkJaG93OworfTsKKworc3RydWN0IGlvX3JlbmFtZSB7CisJ
c3RydWN0IGZpbGUJCQkqZmlsZTsKKwlpbnQJCQkJb2xkX2RmZDsKKwlpbnQJCQkJbmV3X2Rm
ZDsKKwlzdHJ1Y3QgZmlsZW5hbWUJCQkqb2xkcGF0aDsKKwlzdHJ1Y3QgZmlsZW5hbWUJCQkq
bmV3cGF0aDsKKwlpbnQJCQkJZmxhZ3M7Cit9OworCitzdHJ1Y3QgaW9fdW5saW5rIHsKKwlz
dHJ1Y3QgZmlsZQkJCSpmaWxlOworCWludAkJCQlkZmQ7CisJaW50CQkJCWZsYWdzOworCXN0
cnVjdCBmaWxlbmFtZQkJCSpmaWxlbmFtZTsKK307CisKK3N0cnVjdCBpb19ta2RpciB7CisJ
c3RydWN0IGZpbGUJCQkqZmlsZTsKKwlpbnQJCQkJZGZkOworCXVtb2RlX3QJCQkJbW9kZTsK
KwlzdHJ1Y3QgZmlsZW5hbWUJCQkqZmlsZW5hbWU7Cit9OworCitzdHJ1Y3QgaW9fc3ltbGlu
ayB7CisJc3RydWN0IGZpbGUJCQkqZmlsZTsKKwlpbnQJCQkJbmV3X2RmZDsKKwlzdHJ1Y3Qg
ZmlsZW5hbWUJCQkqb2xkcGF0aDsKKwlzdHJ1Y3QgZmlsZW5hbWUJCQkqbmV3cGF0aDsKK307
CisKK3N0cnVjdCBpb19oYXJkbGluayB7CisJc3RydWN0IGZpbGUJCQkqZmlsZTsKKwlpbnQJ
CQkJb2xkX2RmZDsKKwlpbnQJCQkJbmV3X2RmZDsKKwlzdHJ1Y3QgZmlsZW5hbWUJCQkqb2xk
cGF0aDsKKwlzdHJ1Y3QgZmlsZW5hbWUJCQkqbmV3cGF0aDsKKwlpbnQJCQkJZmxhZ3M7Cit9
OworCiBzdHJ1Y3QgaW9fY29tcGxldGlvbiB7CiAJc3RydWN0IGZpbGUJCQkqZmlsZTsKLQlz
dHJ1Y3QgbGlzdF9oZWFkCQlsaXN0OwogCXUzMgkJCQljZmxhZ3M7CiB9OwogCkBAIC01NTYs
NyArNzAxLDggQEAgc3RydWN0IGlvX2FzeW5jX2Nvbm5lY3QgewogCiBzdHJ1Y3QgaW9fYXN5
bmNfbXNnaGRyIHsKIAlzdHJ1Y3QgaW92ZWMJCQlmYXN0X2lvdltVSU9fRkFTVElPVl07Ci0J
c3RydWN0IGlvdmVjCQkJKmlvdjsKKwkvKiBwb2ludHMgdG8gYW4gYWxsb2NhdGVkIGlvdiwg
aWYgTlVMTCB3ZSB1c2UgZmFzdF9pb3YgaW5zdGVhZCAqLworCXN0cnVjdCBpb3ZlYwkJCSpm
cmVlX2lvdjsKIAlzdHJ1Y3Qgc29ja2FkZHIgX191c2VyCQkqdWFkZHI7CiAJc3RydWN0IG1z
Z2hkcgkJCW1zZzsKIAlzdHJ1Y3Qgc29ja2FkZHJfc3RvcmFnZQkJYWRkcjsKQEAgLTU2Niw2
ICs3MTIsNyBAQCBzdHJ1Y3QgaW9fYXN5bmNfcncgewogCXN0cnVjdCBpb3ZlYwkJCWZhc3Rf
aW92W1VJT19GQVNUSU9WXTsKIAljb25zdCBzdHJ1Y3QgaW92ZWMJCSpmcmVlX2lvdmVjOwog
CXN0cnVjdCBpb3ZfaXRlcgkJCWl0ZXI7CisJc3RydWN0IGlvdl9pdGVyX3N0YXRlCQlpdGVy
X3N0YXRlOwogCXNpemVfdAkJCQlieXRlc19kb25lOwogCXN0cnVjdCB3YWl0X3BhZ2VfcXVl
dWUJCXdwcTsKIH07CkBAIC01NzgsMTkgKzcyNSwyNCBAQCBlbnVtIHsKIAlSRVFfRl9GT1JD
RV9BU1lOQ19CSVQJPSBJT1NRRV9BU1lOQ19CSVQsCiAJUkVRX0ZfQlVGRkVSX1NFTEVDVF9C
SVQJPSBJT1NRRV9CVUZGRVJfU0VMRUNUX0JJVCwKIAotCVJFUV9GX0xJTktfSEVBRF9CSVQs
Ci0JUkVRX0ZfRkFJTF9MSU5LX0JJVCwKKwkvKiBmaXJzdCBieXRlIGlzIHRha2VuIGJ5IHVz
ZXIgZmxhZ3MsIHNoaWZ0IGl0IHRvIG5vdCBvdmVybGFwICovCisJUkVRX0ZfRkFJTF9CSVQJ
CT0gOCwKIAlSRVFfRl9JTkZMSUdIVF9CSVQsCiAJUkVRX0ZfQ1VSX1BPU19CSVQsCiAJUkVR
X0ZfTk9XQUlUX0JJVCwKIAlSRVFfRl9MSU5LX1RJTUVPVVRfQklULAotCVJFUV9GX0lTUkVH
X0JJVCwKIAlSRVFfRl9ORUVEX0NMRUFOVVBfQklULAogCVJFUV9GX1BPTExFRF9CSVQsCiAJ
UkVRX0ZfQlVGRkVSX1NFTEVDVEVEX0JJVCwKLQlSRVFfRl9OT19GSUxFX1RBQkxFX0JJVCwK
LQlSRVFfRl9XT1JLX0lOSVRJQUxJWkVEX0JJVCwKLQlSRVFfRl9MVElNRU9VVF9BQ1RJVkVf
QklULAorCVJFUV9GX0NPTVBMRVRFX0lOTElORV9CSVQsCisJUkVRX0ZfUkVJU1NVRV9CSVQs
CisJUkVRX0ZfQ1JFRFNfQklULAorCVJFUV9GX1JFRkNPVU5UX0JJVCwKKwlSRVFfRl9BUk1f
TFRJTUVPVVRfQklULAorCS8qIGtlZXAgYXN5bmMgcmVhZC93cml0ZSBhbmQgaXNyZWcgdG9n
ZXRoZXIgYW5kIGluIG9yZGVyICovCisJUkVRX0ZfTk9XQUlUX1JFQURfQklULAorCVJFUV9G
X05PV0FJVF9XUklURV9CSVQsCisJUkVRX0ZfSVNSRUdfQklULAogCiAJLyogbm90IGEgcmVh
bCBiaXQsIGp1c3QgdG8gY2hlY2sgd2UncmUgbm90IG92ZXJmbG93aW5nIHRoZSBzcGFjZSAq
LwogCV9fUkVRX0ZfTEFTVF9CSVQsCkBAIC02MTAsMTEgKzc2Miw5IEBAIGVudW0gewogCS8q
IElPU1FFX0JVRkZFUl9TRUxFQ1QgKi8KIAlSRVFfRl9CVUZGRVJfU0VMRUNUCT0gQklUKFJF
UV9GX0JVRkZFUl9TRUxFQ1RfQklUKSwKIAotCS8qIGhlYWQgb2YgYSBsaW5rICovCi0JUkVR
X0ZfTElOS19IRUFECQk9IEJJVChSRVFfRl9MSU5LX0hFQURfQklUKSwKIAkvKiBmYWlsIHJl
c3Qgb2YgbGlua3MgKi8KLQlSRVFfRl9GQUlMX0xJTksJCT0gQklUKFJFUV9GX0ZBSUxfTElO
S19CSVQpLAotCS8qIG9uIGluZmxpZ2h0IGxpc3QgKi8KKwlSRVFfRl9GQUlMCQk9IEJJVChS
RVFfRl9GQUlMX0JJVCksCisJLyogb24gaW5mbGlnaHQgbGlzdCwgc2hvdWxkIGJlIGNhbmNl
bGxlZCBhbmQgd2FpdGVkIG9uIGV4aXQgcmVsaWFibHkgKi8KIAlSRVFfRl9JTkZMSUdIVAkJ
PSBCSVQoUkVRX0ZfSU5GTElHSFRfQklUKSwKIAkvKiByZWFkL3dyaXRlIHVzZXMgZmlsZSBw
b3NpdGlvbiAqLwogCVJFUV9GX0NVUl9QT1MJCT0gQklUKFJFUV9GX0NVUl9QT1NfQklUKSwK
QEAgLTYyMiwyMCArNzcyLDI4IEBAIGVudW0gewogCVJFUV9GX05PV0FJVAkJPSBCSVQoUkVR
X0ZfTk9XQUlUX0JJVCksCiAJLyogaGFzIG9yIGhhZCBsaW5rZWQgdGltZW91dCAqLwogCVJF
UV9GX0xJTktfVElNRU9VVAk9IEJJVChSRVFfRl9MSU5LX1RJTUVPVVRfQklUKSwKLQkvKiBy
ZWd1bGFyIGZpbGUgKi8KLQlSRVFfRl9JU1JFRwkJPSBCSVQoUkVRX0ZfSVNSRUdfQklUKSwK
IAkvKiBuZWVkcyBjbGVhbnVwICovCiAJUkVRX0ZfTkVFRF9DTEVBTlVQCT0gQklUKFJFUV9G
X05FRURfQ0xFQU5VUF9CSVQpLAogCS8qIGFscmVhZHkgd2VudCB0aHJvdWdoIHBvbGwgaGFu
ZGxlciAqLwogCVJFUV9GX1BPTExFRAkJPSBCSVQoUkVRX0ZfUE9MTEVEX0JJVCksCiAJLyog
YnVmZmVyIGFscmVhZHkgc2VsZWN0ZWQgKi8KIAlSRVFfRl9CVUZGRVJfU0VMRUNURUQJPSBC
SVQoUkVRX0ZfQlVGRkVSX1NFTEVDVEVEX0JJVCksCi0JLyogZG9lc24ndCBuZWVkIGZpbGUg
dGFibGUgZm9yIHRoaXMgcmVxdWVzdCAqLwotCVJFUV9GX05PX0ZJTEVfVEFCTEUJPSBCSVQo
UkVRX0ZfTk9fRklMRV9UQUJMRV9CSVQpLAotCS8qIGlvX3dxX3dvcmsgaXMgaW5pdGlhbGl6
ZWQgKi8KLQlSRVFfRl9XT1JLX0lOSVRJQUxJWkVECT0gQklUKFJFUV9GX1dPUktfSU5JVElB
TElaRURfQklUKSwKLQkvKiBsaW5rZWQgdGltZW91dCBpcyBhY3RpdmUsIGkuZS4gcHJlcGFy
ZWQgYnkgbGluaydzIGhlYWQgKi8KLQlSRVFfRl9MVElNRU9VVF9BQ1RJVkUJPSBCSVQoUkVR
X0ZfTFRJTUVPVVRfQUNUSVZFX0JJVCksCisJLyogY29tcGxldGlvbiBpcyBkZWZlcnJlZCB0
aHJvdWdoIGlvX2NvbXBfc3RhdGUgKi8KKwlSRVFfRl9DT01QTEVURV9JTkxJTkUJPSBCSVQo
UkVRX0ZfQ09NUExFVEVfSU5MSU5FX0JJVCksCisJLyogY2FsbGVyIHNob3VsZCByZWlzc3Vl
IGFzeW5jICovCisJUkVRX0ZfUkVJU1NVRQkJPSBCSVQoUkVRX0ZfUkVJU1NVRV9CSVQpLAor
CS8qIHN1cHBvcnRzIGFzeW5jIHJlYWRzICovCisJUkVRX0ZfTk9XQUlUX1JFQUQJPSBCSVQo
UkVRX0ZfTk9XQUlUX1JFQURfQklUKSwKKwkvKiBzdXBwb3J0cyBhc3luYyB3cml0ZXMgKi8K
KwlSRVFfRl9OT1dBSVRfV1JJVEUJPSBCSVQoUkVRX0ZfTk9XQUlUX1dSSVRFX0JJVCksCisJ
LyogcmVndWxhciBmaWxlICovCisJUkVRX0ZfSVNSRUcJCT0gQklUKFJFUV9GX0lTUkVHX0JJ
VCksCisJLyogaGFzIGNyZWRzIGFzc2lnbmVkICovCisJUkVRX0ZfQ1JFRFMJCT0gQklUKFJF
UV9GX0NSRURTX0JJVCksCisJLyogc2tpcCByZWZjb3VudGluZyBpZiBub3Qgc2V0ICovCisJ
UkVRX0ZfUkVGQ09VTlQJCT0gQklUKFJFUV9GX1JFRkNPVU5UX0JJVCksCisJLyogdGhlcmUg
aXMgYSBsaW5rZWQgdGltZW91dCB0aGF0IGhhcyB0byBiZSBhcm1lZCAqLworCVJFUV9GX0FS
TV9MVElNRU9VVAk9IEJJVChSRVFfRl9BUk1fTFRJTUVPVVRfQklUKSwKIH07CiAKIHN0cnVj
dCBhc3luY19wb2xsIHsKQEAgLTY0Myw2ICs4MDEsMjEgQEAgc3RydWN0IGFzeW5jX3BvbGwg
ewogCXN0cnVjdCBpb19wb2xsX2lvY2IJKmRvdWJsZV9wb2xsOwogfTsKIAordHlwZWRlZiB2
b2lkICgqaW9fcmVxX3R3X2Z1bmNfdCkoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgKmxv
Y2tlZCk7CisKK3N0cnVjdCBpb190YXNrX3dvcmsgeworCXVuaW9uIHsKKwkJc3RydWN0IGlv
X3dxX3dvcmtfbm9kZQlub2RlOworCQlzdHJ1Y3QgbGxpc3Rfbm9kZQlmYWxsYmFja19ub2Rl
OworCX07CisJaW9fcmVxX3R3X2Z1bmNfdAkJZnVuYzsKK307CisKK2VudW0geworCUlPUklO
R19SU1JDX0ZJTEUJCT0gMCwKKwlJT1JJTkdfUlNSQ19CVUZGRVIJCT0gMSwKK307CisKIC8q
CiAgKiBOT1RFISBFYWNoIG9mIHRoZSBpb2NiIHVuaW9uIG1lbWJlcnMgaGFzIHRoZSBmaWxl
IHBvaW50ZXIKICAqIGFzIHRoZSBmaXJzdCBlbnRyeSBpbiB0aGVpciBzdHJ1Y3QgZGVmaW5p
dGlvbi4gU28geW91IGNhbgpAQCAtNjU0LDYgKzgyNyw3IEBAIHN0cnVjdCBpb19raW9jYiB7
CiAJCXN0cnVjdCBmaWxlCQkqZmlsZTsKIAkJc3RydWN0IGlvX3J3CQlydzsKIAkJc3RydWN0
IGlvX3BvbGxfaW9jYglwb2xsOworCQlzdHJ1Y3QgaW9fcG9sbF91cGRhdGUJcG9sbF91cGRh
dGU7CiAJCXN0cnVjdCBpb19hY2NlcHQJYWNjZXB0OwogCQlzdHJ1Y3QgaW9fc3luYwkJc3lu
YzsKIAkJc3RydWN0IGlvX2NhbmNlbAljYW5jZWw7CkBAIC02NjMsMTMgKzgzNywxOSBAQCBz
dHJ1Y3QgaW9fa2lvY2IgewogCQlzdHJ1Y3QgaW9fc3JfbXNnCXNyX21zZzsKIAkJc3RydWN0
IGlvX29wZW4JCW9wZW47CiAJCXN0cnVjdCBpb19jbG9zZQkJY2xvc2U7Ci0JCXN0cnVjdCBp
b19maWxlc191cGRhdGUJZmlsZXNfdXBkYXRlOworCQlzdHJ1Y3QgaW9fcnNyY191cGRhdGUJ
cnNyY191cGRhdGU7CiAJCXN0cnVjdCBpb19mYWR2aXNlCWZhZHZpc2U7CiAJCXN0cnVjdCBp
b19tYWR2aXNlCW1hZHZpc2U7CiAJCXN0cnVjdCBpb19lcG9sbAkJZXBvbGw7CiAJCXN0cnVj
dCBpb19zcGxpY2UJc3BsaWNlOwogCQlzdHJ1Y3QgaW9fcHJvdmlkZV9idWYJcGJ1ZjsKIAkJ
c3RydWN0IGlvX3N0YXR4CQlzdGF0eDsKKwkJc3RydWN0IGlvX3NodXRkb3duCXNodXRkb3du
OworCQlzdHJ1Y3QgaW9fcmVuYW1lCXJlbmFtZTsKKwkJc3RydWN0IGlvX3VubGluawl1bmxp
bms7CisJCXN0cnVjdCBpb19ta2RpcgkJbWtkaXI7CisJCXN0cnVjdCBpb19zeW1saW5rCXN5
bWxpbms7CisJCXN0cnVjdCBpb19oYXJkbGluawloYXJkbGluazsKIAkJLyogdXNlIG9ubHkg
YWZ0ZXIgY2xlYW5pbmcgcGVyLW9wIGRhdGEsIHNlZSBpb19jbGVhbl9vcCgpICovCiAJCXN0
cnVjdCBpb19jb21wbGV0aW9uCWNvbXBsOwogCX07CkBAIC02ODUsNzAgKzg2NSw0NCBAQCBz
dHJ1Y3QgaW9fa2lvY2IgewogCiAJc3RydWN0IGlvX3JpbmdfY3R4CQkqY3R4OwogCXVuc2ln
bmVkIGludAkJCWZsYWdzOwotCXJlZmNvdW50X3QJCQlyZWZzOworCWF0b21pY190CQkJcmVm
czsKIAlzdHJ1Y3QgdGFza19zdHJ1Y3QJCSp0YXNrOwogCXU2NAkJCQl1c2VyX2RhdGE7CiAK
LQlzdHJ1Y3QgbGlzdF9oZWFkCQlsaW5rX2xpc3Q7CisJc3RydWN0IGlvX2tpb2NiCQkJKmxp
bms7CisJc3RydWN0IHBlcmNwdV9yZWYJCSpmaXhlZF9yc3JjX3JlZnM7CiAKLQkvKgotCSAq
IDEuIHVzZWQgd2l0aCBjdHgtPmlvcG9sbF9saXN0IHdpdGggcmVhZHMvd3JpdGVzCi0JICog
Mi4gdG8gdHJhY2sgcmVxcyB3aXRoIC0+ZmlsZXMgKHNlZSBpb19vcF9kZWY6OmZpbGVfdGFi
bGUpCi0JICovCisJLyogdXNlZCB3aXRoIGN0eC0+aW9wb2xsX2xpc3Qgd2l0aCByZWFkcy93
cml0ZXMgKi8KIAlzdHJ1Y3QgbGlzdF9oZWFkCQlpbmZsaWdodF9lbnRyeTsKLQotCXN0cnVj
dCBsaXN0X2hlYWQJCWlvcG9sbF9lbnRyeTsKLQotCXN0cnVjdCBwZXJjcHVfcmVmCQkqZml4
ZWRfZmlsZV9yZWZzOwotCXN0cnVjdCBjYWxsYmFja19oZWFkCQl0YXNrX3dvcms7CisJc3Ry
dWN0IGlvX3Rhc2tfd29yawkJaW9fdGFza193b3JrOwogCS8qIGZvciBwb2xsZWQgcmVxdWVz
dHMsIGkuZS4gSU9SSU5HX09QX1BPTExfQUREIGFuZCBhc3luYyBhcm1lZCBwb2xsICovCiAJ
c3RydWN0IGhsaXN0X25vZGUJCWhhc2hfbm9kZTsKIAlzdHJ1Y3QgYXN5bmNfcG9sbAkJKmFw
b2xsOwogCXN0cnVjdCBpb193cV93b3JrCQl3b3JrOwotfTsKKwljb25zdCBzdHJ1Y3QgY3Jl
ZAkJKmNyZWRzOwogCi1zdHJ1Y3QgaW9fZGVmZXJfZW50cnkgewotCXN0cnVjdCBsaXN0X2hl
YWQJbGlzdDsKLQlzdHJ1Y3QgaW9fa2lvY2IJCSpyZXE7Ci0JdTMyCQkJc2VxOworCS8qIHN0
b3JlIHVzZWQgdWJ1Ziwgc28gd2UgY2FuIHByZXZlbnQgcmVsb2FkaW5nICovCisJc3RydWN0
IGlvX21hcHBlZF91YnVmCQkqaW11OworCS8qIHN0b3JlcyBzZWxlY3RlZCBidWYsIHZhbGlk
IElGRiBSRVFfRl9CVUZGRVJfU0VMRUNURUQgaXMgc2V0ICovCisJc3RydWN0IGlvX2J1ZmZl
cgkJKmtidWY7CisJYXRvbWljX3QJCQlwb2xsX3JlZnM7CiB9OwogCi0jZGVmaW5lIElPX0lP
UE9MTF9CQVRDSAkJCTgKLQotc3RydWN0IGlvX2NvbXBfc3RhdGUgewotCXVuc2lnbmVkIGlu
dAkJbnI7Ci0Jc3RydWN0IGxpc3RfaGVhZAlsaXN0Oworc3RydWN0IGlvX3RjdHhfbm9kZSB7
CisJc3RydWN0IGxpc3RfaGVhZAljdHhfbm9kZTsKKwlzdHJ1Y3QgdGFza19zdHJ1Y3QJKnRh
c2s7CiAJc3RydWN0IGlvX3JpbmdfY3R4CSpjdHg7CiB9OwogCi1zdHJ1Y3QgaW9fc3VibWl0
X3N0YXRlIHsKLQlzdHJ1Y3QgYmxrX3BsdWcJCXBsdWc7Ci0KLQkvKgotCSAqIGlvX2tpb2Ni
IGFsbG9jIGNhY2hlCi0JICovCi0Jdm9pZAkJCSpyZXFzW0lPX0lPUE9MTF9CQVRDSF07Ci0J
dW5zaWduZWQgaW50CQlmcmVlX3JlcXM7Ci0KLQkvKgotCSAqIEJhdGNoIGNvbXBsZXRpb24g
bG9naWMKLQkgKi8KLQlzdHJ1Y3QgaW9fY29tcF9zdGF0ZQljb21wOwotCi0JLyoKLQkgKiBG
aWxlIHJlZmVyZW5jZSBjYWNoZQotCSAqLwotCXN0cnVjdCBmaWxlCQkqZmlsZTsKLQl1bnNp
Z25lZCBpbnQJCWZkOwotCXVuc2lnbmVkIGludAkJaGFzX3JlZnM7Ci0JdW5zaWduZWQgaW50
CQlpb3NfbGVmdDsKK3N0cnVjdCBpb19kZWZlcl9lbnRyeSB7CisJc3RydWN0IGxpc3RfaGVh
ZAlsaXN0OworCXN0cnVjdCBpb19raW9jYgkJKnJlcTsKKwl1MzIJCQlzZXE7CiB9OwogCiBz
dHJ1Y3QgaW9fb3BfZGVmIHsKIAkvKiBuZWVkcyByZXEtPmZpbGUgYXNzaWduZWQgKi8KIAl1
bnNpZ25lZAkJbmVlZHNfZmlsZSA6IDE7Ci0JLyogZG9uJ3QgZmFpbCBpZiBmaWxlIGdyYWIg
ZmFpbHMgKi8KLQl1bnNpZ25lZAkJbmVlZHNfZmlsZV9ub19lcnJvciA6IDE7CiAJLyogaGFz
aCB3cSBpbnNlcnRpb24gaWYgZmlsZSBpcyBhIHJlZ3VsYXIgZmlsZSAqLwogCXVuc2lnbmVk
CQloYXNoX3JlZ19maWxlIDogMTsKIAkvKiB1bmJvdW5kIHdxIGluc2VydGlvbiBpZiBmaWxl
IGlzIGEgbm9uLXJlZ3VsYXIgZmlsZSAqLwpAQCAtNzYwLDExICs5MTQsMTIgQEAgc3RydWN0
IGlvX29wX2RlZiB7CiAJdW5zaWduZWQJCXBvbGxvdXQgOiAxOwogCS8qIG9wIHN1cHBvcnRz
IGJ1ZmZlciBzZWxlY3Rpb24gKi8KIAl1bnNpZ25lZAkJYnVmZmVyX3NlbGVjdCA6IDE7Ci0J
LyogbXVzdCBhbHdheXMgaGF2ZSBhc3luYyBkYXRhIGFsbG9jYXRlZCAqLwotCXVuc2lnbmVk
CQluZWVkc19hc3luY19kYXRhIDogMTsKKwkvKiBkbyBwcmVwIGFzeW5jIGlmIGlzIGdvaW5n
IHRvIGJlIHB1bnRlZCAqLworCXVuc2lnbmVkCQluZWVkc19hc3luY19zZXR1cCA6IDE7CisJ
Lyogc2hvdWxkIGJsb2NrIHBsdWcgKi8KKwl1bnNpZ25lZAkJcGx1ZyA6IDE7CiAJLyogc2l6
ZSBvZiBhc3luYyBkYXRhIG5lZWRlZCwgaWYgYW55ICovCiAJdW5zaWduZWQgc2hvcnQJCWFz
eW5jX3NpemU7Ci0JdW5zaWduZWQJCXdvcmtfZmxhZ3M7CiB9OwogCiBzdGF0aWMgY29uc3Qg
c3RydWN0IGlvX29wX2RlZiBpb19vcF9kZWZzW10gPSB7CkBAIC03NzQsNDEgKzkyOSwzNiBA
QCBzdGF0aWMgY29uc3Qgc3RydWN0IGlvX29wX2RlZiBpb19vcF9kZWZzW10gPSB7CiAJCS51
bmJvdW5kX25vbnJlZ19maWxlCT0gMSwKIAkJLnBvbGxpbgkJCT0gMSwKIAkJLmJ1ZmZlcl9z
ZWxlY3QJCT0gMSwKLQkJLm5lZWRzX2FzeW5jX2RhdGEJPSAxLAorCQkubmVlZHNfYXN5bmNf
c2V0dXAJPSAxLAorCQkucGx1ZwkJCT0gMSwKIAkJLmFzeW5jX3NpemUJCT0gc2l6ZW9mKHN0
cnVjdCBpb19hc3luY19ydyksCi0JCS53b3JrX2ZsYWdzCQk9IElPX1dRX1dPUktfTU0gfCBJ
T19XUV9XT1JLX0JMS0NHIHwKLQkJCQkJICBJT19XUV9XT1JLX0ZJTEVTLAogCX0sCiAJW0lP
UklOR19PUF9XUklURVZdID0gewogCQkubmVlZHNfZmlsZQkJPSAxLAogCQkuaGFzaF9yZWdf
ZmlsZQkJPSAxLAogCQkudW5ib3VuZF9ub25yZWdfZmlsZQk9IDEsCiAJCS5wb2xsb3V0CQk9
IDEsCi0JCS5uZWVkc19hc3luY19kYXRhCT0gMSwKKwkJLm5lZWRzX2FzeW5jX3NldHVwCT0g
MSwKKwkJLnBsdWcJCQk9IDEsCiAJCS5hc3luY19zaXplCQk9IHNpemVvZihzdHJ1Y3QgaW9f
YXN5bmNfcncpLAotCQkud29ya19mbGFncwkJPSBJT19XUV9XT1JLX01NIHwgSU9fV1FfV09S
S19CTEtDRyB8Ci0JCQkJCSAgSU9fV1FfV09SS19GU0laRSB8IElPX1dRX1dPUktfRklMRVMs
CiAJfSwKIAlbSU9SSU5HX09QX0ZTWU5DXSA9IHsKIAkJLm5lZWRzX2ZpbGUJCT0gMSwKLQkJ
LndvcmtfZmxhZ3MJCT0gSU9fV1FfV09SS19CTEtDRywKIAl9LAogCVtJT1JJTkdfT1BfUkVB
RF9GSVhFRF0gPSB7CiAJCS5uZWVkc19maWxlCQk9IDEsCiAJCS51bmJvdW5kX25vbnJlZ19m
aWxlCT0gMSwKIAkJLnBvbGxpbgkJCT0gMSwKKwkJLnBsdWcJCQk9IDEsCiAJCS5hc3luY19z
aXplCQk9IHNpemVvZihzdHJ1Y3QgaW9fYXN5bmNfcncpLAotCQkud29ya19mbGFncwkJPSBJ
T19XUV9XT1JLX0JMS0NHIHwgSU9fV1FfV09SS19NTSB8Ci0JCQkJCSAgSU9fV1FfV09SS19G
SUxFUywKIAl9LAogCVtJT1JJTkdfT1BfV1JJVEVfRklYRURdID0gewogCQkubmVlZHNfZmls
ZQkJPSAxLAogCQkuaGFzaF9yZWdfZmlsZQkJPSAxLAogCQkudW5ib3VuZF9ub25yZWdfZmls
ZQk9IDEsCiAJCS5wb2xsb3V0CQk9IDEsCisJCS5wbHVnCQkJPSAxLAogCQkuYXN5bmNfc2l6
ZQkJPSBzaXplb2Yoc3RydWN0IGlvX2FzeW5jX3J3KSwKLQkJLndvcmtfZmxhZ3MJCT0gSU9f
V1FfV09SS19CTEtDRyB8IElPX1dRX1dPUktfRlNJWkUgfAotCQkJCQkgIElPX1dRX1dPUktf
TU0gfCBJT19XUV9XT1JLX0ZJTEVTLAogCX0sCiAJW0lPUklOR19PUF9QT0xMX0FERF0gPSB7
CiAJCS5uZWVkc19maWxlCQk9IDEsCkBAIC04MTcsMTI2ICs5NjcsOTEgQEAgc3RhdGljIGNv
bnN0IHN0cnVjdCBpb19vcF9kZWYgaW9fb3BfZGVmc1tdID0gewogCVtJT1JJTkdfT1BfUE9M
TF9SRU1PVkVdID0ge30sCiAJW0lPUklOR19PUF9TWU5DX0ZJTEVfUkFOR0VdID0gewogCQku
bmVlZHNfZmlsZQkJPSAxLAotCQkud29ya19mbGFncwkJPSBJT19XUV9XT1JLX0JMS0NHLAog
CX0sCiAJW0lPUklOR19PUF9TRU5ETVNHXSA9IHsKIAkJLm5lZWRzX2ZpbGUJCT0gMSwKIAkJ
LnVuYm91bmRfbm9ucmVnX2ZpbGUJPSAxLAogCQkucG9sbG91dAkJPSAxLAotCQkubmVlZHNf
YXN5bmNfZGF0YQk9IDEsCisJCS5uZWVkc19hc3luY19zZXR1cAk9IDEsCiAJCS5hc3luY19z
aXplCQk9IHNpemVvZihzdHJ1Y3QgaW9fYXN5bmNfbXNnaGRyKSwKLQkJLndvcmtfZmxhZ3MJ
CT0gSU9fV1FfV09SS19NTSB8IElPX1dRX1dPUktfQkxLQ0cgfAotCQkJCQkJSU9fV1FfV09S
S19GUywKIAl9LAogCVtJT1JJTkdfT1BfUkVDVk1TR10gPSB7CiAJCS5uZWVkc19maWxlCQk9
IDEsCiAJCS51bmJvdW5kX25vbnJlZ19maWxlCT0gMSwKIAkJLnBvbGxpbgkJCT0gMSwKIAkJ
LmJ1ZmZlcl9zZWxlY3QJCT0gMSwKLQkJLm5lZWRzX2FzeW5jX2RhdGEJPSAxLAorCQkubmVl
ZHNfYXN5bmNfc2V0dXAJPSAxLAogCQkuYXN5bmNfc2l6ZQkJPSBzaXplb2Yoc3RydWN0IGlv
X2FzeW5jX21zZ2hkciksCi0JCS53b3JrX2ZsYWdzCQk9IElPX1dRX1dPUktfTU0gfCBJT19X
UV9XT1JLX0JMS0NHIHwKLQkJCQkJCUlPX1dRX1dPUktfRlMsCiAJfSwKIAlbSU9SSU5HX09Q
X1RJTUVPVVRdID0gewotCQkubmVlZHNfYXN5bmNfZGF0YQk9IDEsCiAJCS5hc3luY19zaXpl
CQk9IHNpemVvZihzdHJ1Y3QgaW9fdGltZW91dF9kYXRhKSwKLQkJLndvcmtfZmxhZ3MJCT0g
SU9fV1FfV09SS19NTSwKIAl9LAotCVtJT1JJTkdfT1BfVElNRU9VVF9SRU1PVkVdID0ge30s
CisJW0lPUklOR19PUF9USU1FT1VUX1JFTU9WRV0gPSB7CisJCS8qIHVzZWQgYnkgdGltZW91
dCB1cGRhdGVzJyBwcmVwKCkgKi8KKwl9LAogCVtJT1JJTkdfT1BfQUNDRVBUXSA9IHsKIAkJ
Lm5lZWRzX2ZpbGUJCT0gMSwKIAkJLnVuYm91bmRfbm9ucmVnX2ZpbGUJPSAxLAogCQkucG9s
bGluCQkJPSAxLAotCQkud29ya19mbGFncwkJPSBJT19XUV9XT1JLX01NIHwgSU9fV1FfV09S
S19GSUxFUywKIAl9LAogCVtJT1JJTkdfT1BfQVNZTkNfQ0FOQ0VMXSA9IHt9LAogCVtJT1JJ
TkdfT1BfTElOS19USU1FT1VUXSA9IHsKLQkJLm5lZWRzX2FzeW5jX2RhdGEJPSAxLAogCQku
YXN5bmNfc2l6ZQkJPSBzaXplb2Yoc3RydWN0IGlvX3RpbWVvdXRfZGF0YSksCi0JCS53b3Jr
X2ZsYWdzCQk9IElPX1dRX1dPUktfTU0sCiAJfSwKIAlbSU9SSU5HX09QX0NPTk5FQ1RdID0g
ewogCQkubmVlZHNfZmlsZQkJPSAxLAogCQkudW5ib3VuZF9ub25yZWdfZmlsZQk9IDEsCiAJ
CS5wb2xsb3V0CQk9IDEsCi0JCS5uZWVkc19hc3luY19kYXRhCT0gMSwKKwkJLm5lZWRzX2Fz
eW5jX3NldHVwCT0gMSwKIAkJLmFzeW5jX3NpemUJCT0gc2l6ZW9mKHN0cnVjdCBpb19hc3lu
Y19jb25uZWN0KSwKLQkJLndvcmtfZmxhZ3MJCT0gSU9fV1FfV09SS19NTSB8IElPX1dRX1dP
UktfRlMsCiAJfSwKIAlbSU9SSU5HX09QX0ZBTExPQ0FURV0gPSB7CiAJCS5uZWVkc19maWxl
CQk9IDEsCi0JCS53b3JrX2ZsYWdzCQk9IElPX1dRX1dPUktfQkxLQ0cgfCBJT19XUV9XT1JL
X0ZTSVpFLAotCX0sCi0JW0lPUklOR19PUF9PUEVOQVRdID0gewotCQkud29ya19mbGFncwkJ
PSBJT19XUV9XT1JLX0ZJTEVTIHwgSU9fV1FfV09SS19CTEtDRyB8Ci0JCQkJCQlJT19XUV9X
T1JLX0ZTLAotCX0sCi0JW0lPUklOR19PUF9DTE9TRV0gPSB7Ci0JCS5uZWVkc19maWxlCQk9
IDEsCi0JCS5uZWVkc19maWxlX25vX2Vycm9yCT0gMSwKLQkJLndvcmtfZmxhZ3MJCT0gSU9f
V1FfV09SS19GSUxFUyB8IElPX1dRX1dPUktfQkxLQ0csCi0JfSwKLQlbSU9SSU5HX09QX0ZJ
TEVTX1VQREFURV0gPSB7Ci0JCS53b3JrX2ZsYWdzCQk9IElPX1dRX1dPUktfRklMRVMgfCBJ
T19XUV9XT1JLX01NLAotCX0sCi0JW0lPUklOR19PUF9TVEFUWF0gPSB7Ci0JCS53b3JrX2Zs
YWdzCQk9IElPX1dRX1dPUktfRklMRVMgfCBJT19XUV9XT1JLX01NIHwKLQkJCQkJCUlPX1dR
X1dPUktfRlMgfCBJT19XUV9XT1JLX0JMS0NHLAogCX0sCisJW0lPUklOR19PUF9PUEVOQVRd
ID0ge30sCisJW0lPUklOR19PUF9DTE9TRV0gPSB7fSwKKwlbSU9SSU5HX09QX0ZJTEVTX1VQ
REFURV0gPSB7fSwKKwlbSU9SSU5HX09QX1NUQVRYXSA9IHt9LAogCVtJT1JJTkdfT1BfUkVB
RF0gPSB7CiAJCS5uZWVkc19maWxlCQk9IDEsCiAJCS51bmJvdW5kX25vbnJlZ19maWxlCT0g
MSwKIAkJLnBvbGxpbgkJCT0gMSwKIAkJLmJ1ZmZlcl9zZWxlY3QJCT0gMSwKKwkJLnBsdWcJ
CQk9IDEsCiAJCS5hc3luY19zaXplCQk9IHNpemVvZihzdHJ1Y3QgaW9fYXN5bmNfcncpLAot
CQkud29ya19mbGFncwkJPSBJT19XUV9XT1JLX01NIHwgSU9fV1FfV09SS19CTEtDRyB8Ci0J
CQkJCSAgSU9fV1FfV09SS19GSUxFUywKIAl9LAogCVtJT1JJTkdfT1BfV1JJVEVdID0gewog
CQkubmVlZHNfZmlsZQkJPSAxLAogCQkuaGFzaF9yZWdfZmlsZQkJPSAxLAogCQkudW5ib3Vu
ZF9ub25yZWdfZmlsZQk9IDEsCiAJCS5wb2xsb3V0CQk9IDEsCisJCS5wbHVnCQkJPSAxLAog
CQkuYXN5bmNfc2l6ZQkJPSBzaXplb2Yoc3RydWN0IGlvX2FzeW5jX3J3KSwKLQkJLndvcmtf
ZmxhZ3MJCT0gSU9fV1FfV09SS19NTSB8IElPX1dRX1dPUktfQkxLQ0cgfAotCQkJCQkgIElP
X1dRX1dPUktfRlNJWkUgfCBJT19XUV9XT1JLX0ZJTEVTLAogCX0sCiAJW0lPUklOR19PUF9G
QURWSVNFXSA9IHsKIAkJLm5lZWRzX2ZpbGUJCT0gMSwKLQkJLndvcmtfZmxhZ3MJCT0gSU9f
V1FfV09SS19CTEtDRywKLQl9LAotCVtJT1JJTkdfT1BfTUFEVklTRV0gPSB7Ci0JCS53b3Jr
X2ZsYWdzCQk9IElPX1dRX1dPUktfTU0gfCBJT19XUV9XT1JLX0JMS0NHLAogCX0sCisJW0lP
UklOR19PUF9NQURWSVNFXSA9IHt9LAogCVtJT1JJTkdfT1BfU0VORF0gPSB7CiAJCS5uZWVk
c19maWxlCQk9IDEsCiAJCS51bmJvdW5kX25vbnJlZ19maWxlCT0gMSwKIAkJLnBvbGxvdXQJ
CT0gMSwKLQkJLndvcmtfZmxhZ3MJCT0gSU9fV1FfV09SS19NTSB8IElPX1dRX1dPUktfQkxL
Q0cgfAotCQkJCQkgIElPX1dRX1dPUktfRlMsCiAJfSwKIAlbSU9SSU5HX09QX1JFQ1ZdID0g
ewogCQkubmVlZHNfZmlsZQkJPSAxLAogCQkudW5ib3VuZF9ub25yZWdfZmlsZQk9IDEsCiAJ
CS5wb2xsaW4JCQk9IDEsCiAJCS5idWZmZXJfc2VsZWN0CQk9IDEsCi0JCS53b3JrX2ZsYWdz
CQk9IElPX1dRX1dPUktfTU0gfCBJT19XUV9XT1JLX0JMS0NHIHwKLQkJCQkJICBJT19XUV9X
T1JLX0ZTLAogCX0sCiAJW0lPUklOR19PUF9PUEVOQVQyXSA9IHsKLQkJLndvcmtfZmxhZ3MJ
CT0gSU9fV1FfV09SS19GSUxFUyB8IElPX1dRX1dPUktfRlMgfAotCQkJCQkJSU9fV1FfV09S
S19CTEtDRywKIAl9LAogCVtJT1JJTkdfT1BfRVBPTExfQ1RMXSA9IHsKIAkJLnVuYm91bmRf
bm9ucmVnX2ZpbGUJPSAxLAotCQkud29ya19mbGFncwkJPSBJT19XUV9XT1JLX0ZJTEVTLAog
CX0sCiAJW0lPUklOR19PUF9TUExJQ0VdID0gewogCQkubmVlZHNfZmlsZQkJPSAxLAogCQku
aGFzaF9yZWdfZmlsZQkJPSAxLAogCQkudW5ib3VuZF9ub25yZWdfZmlsZQk9IDEsCi0JCS53
b3JrX2ZsYWdzCQk9IElPX1dRX1dPUktfQkxLQ0cgfCBJT19XUV9XT1JLX0ZJTEVTLAogCX0s
CiAJW0lPUklOR19PUF9QUk9WSURFX0JVRkZFUlNdID0ge30sCiAJW0lPUklOR19PUF9SRU1P
VkVfQlVGRkVSU10gPSB7fSwKQEAgLTk0NSw0MyArMTA2MCw0NyBAQCBzdGF0aWMgY29uc3Qg
c3RydWN0IGlvX29wX2RlZiBpb19vcF9kZWZzW10gPSB7CiAJCS5oYXNoX3JlZ19maWxlCQk9
IDEsCiAJCS51bmJvdW5kX25vbnJlZ19maWxlCT0gMSwKIAl9LAorCVtJT1JJTkdfT1BfU0hV
VERPV05dID0geworCQkubmVlZHNfZmlsZQkJPSAxLAorCX0sCisJW0lPUklOR19PUF9SRU5B
TUVBVF0gPSB7fSwKKwlbSU9SSU5HX09QX1VOTElOS0FUXSA9IHt9LAogfTsKIAotZW51bSBp
b19tZW1fYWNjb3VudCB7Ci0JQUNDVF9MT0NLRUQsCi0JQUNDVF9QSU5ORUQsCi19OworLyog
cmVxdWVzdHMgd2l0aCBhbnkgb2YgdGhvc2Ugc2V0IHNob3VsZCB1bmRlcmdvIGlvX2Rpc2Fy
bV9uZXh0KCkgKi8KKyNkZWZpbmUgSU9fRElTQVJNX01BU0sgKFJFUV9GX0FSTV9MVElNRU9V
VCB8IFJFUV9GX0xJTktfVElNRU9VVCB8IFJFUV9GX0ZBSUwpCiAKLXN0YXRpYyB2b2lkIGRl
c3Ryb3lfZml4ZWRfZmlsZV9yZWZfbm9kZShzdHJ1Y3QgZml4ZWRfZmlsZV9yZWZfbm9kZSAq
cmVmX25vZGUpOwotc3RhdGljIHN0cnVjdCBmaXhlZF9maWxlX3JlZl9ub2RlICphbGxvY19m
aXhlZF9maWxlX3JlZl9ub2RlKAotCQkJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpOworc3Rh
dGljIGJvb2wgaW9fZGlzYXJtX25leHQoc3RydWN0IGlvX2tpb2NiICpyZXEpOworc3RhdGlj
IHZvaWQgaW9fdXJpbmdfZGVsX3RjdHhfbm9kZSh1bnNpZ25lZCBsb25nIGluZGV4KTsKK3N0
YXRpYyB2b2lkIGlvX3VyaW5nX3RyeV9jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsCisJCQkJCSBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssCisJCQkJCSBib29s
IGNhbmNlbF9hbGwpOworc3RhdGljIHZvaWQgaW9fdXJpbmdfY2FuY2VsX2dlbmVyaWMoYm9v
bCBjYW5jZWxfYWxsLCBzdHJ1Y3QgaW9fc3FfZGF0YSAqc3FkKTsKKworc3RhdGljIHZvaWQg
aW9fZmlsbF9jcWVfcmVxKHN0cnVjdCBpb19raW9jYiAqcmVxLCBzMzIgcmVzLCB1MzIgY2Zs
YWdzKTsKIAotc3RhdGljIHZvaWQgX19pb19jb21wbGV0ZV9ydyhzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgbG9uZyByZXMsIGxvbmcgcmVzMiwKLQkJCSAgICAgc3RydWN0IGlvX2NvbXBfc3Rh
dGUgKmNzKTsKLXN0YXRpYyB2b2lkIGlvX2NxcmluZ19maWxsX2V2ZW50KHN0cnVjdCBpb19r
aW9jYiAqcmVxLCBsb25nIHJlcyk7CiBzdGF0aWMgdm9pZCBpb19wdXRfcmVxKHN0cnVjdCBp
b19raW9jYiAqcmVxKTsKLXN0YXRpYyB2b2lkIGlvX3B1dF9yZXFfZGVmZXJyZWQoc3RydWN0
IGlvX2tpb2NiICpyZXEsIGludCBucik7Ci1zdGF0aWMgdm9pZCBpb19kb3VibGVfcHV0X3Jl
cShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSk7Ci1zdGF0aWMgc3RydWN0IGlvX2tpb2NiICppb19w
cmVwX2xpbmtlZF90aW1lb3V0KHN0cnVjdCBpb19raW9jYiAqcmVxKTsKLXN0YXRpYyB2b2lk
IF9faW9fcXVldWVfbGlua2VkX3RpbWVvdXQoc3RydWN0IGlvX2tpb2NiICpyZXEpOworc3Rh
dGljIHZvaWQgaW9fcHV0X3JlcV9kZWZlcnJlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSk7Citz
dGF0aWMgdm9pZCBpb19kaXNtYW50bGVfcmVxKHN0cnVjdCBpb19raW9jYiAqcmVxKTsKIHN0
YXRpYyB2b2lkIGlvX3F1ZXVlX2xpbmtlZF90aW1lb3V0KHN0cnVjdCBpb19raW9jYiAqcmVx
KTsKLXN0YXRpYyBpbnQgX19pb19zcWVfZmlsZXNfdXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LAotCQkJCSBzdHJ1Y3QgaW9fdXJpbmdfZmlsZXNfdXBkYXRlICppcCwKLQkJCQkg
dW5zaWduZWQgbnJfYXJncyk7Ci1zdGF0aWMgdm9pZCBfX2lvX2NsZWFuX29wKHN0cnVjdCBp
b19raW9jYiAqcmVxKTsKLXN0YXRpYyBzdHJ1Y3QgZmlsZSAqaW9fZmlsZV9nZXQoc3RydWN0
IGlvX3N1Ym1pdF9zdGF0ZSAqc3RhdGUsCitzdGF0aWMgaW50IF9faW9fcmVnaXN0ZXJfcnNy
Y191cGRhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHVuc2lnbmVkIHR5cGUsCisJCQkJ
ICAgICBzdHJ1Y3QgaW9fdXJpbmdfcnNyY191cGRhdGUyICp1cCwKKwkJCQkgICAgIHVuc2ln
bmVkIG5yX2FyZ3MpOworc3RhdGljIHZvaWQgaW9fY2xlYW5fb3Aoc3RydWN0IGlvX2tpb2Ni
ICpyZXEpOworc3RhdGljIHN0cnVjdCBmaWxlICppb19maWxlX2dldChzdHJ1Y3QgaW9fcmlu
Z19jdHggKmN0eCwKIAkJCQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IGZkLCBib29sIGZp
eGVkKTsKLXN0YXRpYyB2b2lkIF9faW9fcXVldWVfc3FlKHN0cnVjdCBpb19raW9jYiAqcmVx
LCBzdHJ1Y3QgaW9fY29tcF9zdGF0ZSAqY3MpOwotc3RhdGljIHZvaWQgaW9fZmlsZV9wdXRf
d29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspOworc3RhdGljIHZvaWQgX19pb19xdWV1
ZV9zcWUoc3RydWN0IGlvX2tpb2NiICpyZXEpOworc3RhdGljIHZvaWQgaW9fcnNyY19wdXRf
d29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspOwogCi1zdGF0aWMgc3NpemVfdCBpb19p
bXBvcnRfaW92ZWMoaW50IHJ3LCBzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwKLQkJCSAgICAgICBz
dHJ1Y3QgaW92ZWMgKippb3ZlYywgc3RydWN0IGlvdl9pdGVyICppdGVyLAotCQkJICAgICAg
IGJvb2wgbmVlZHNfbG9jayk7Ci1zdGF0aWMgaW50IGlvX3NldHVwX2FzeW5jX3J3KHN0cnVj
dCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW92ZWMgKmlvdmVjLAotCQkJICAgICBj
b25zdCBzdHJ1Y3QgaW92ZWMgKmZhc3RfaW92LAotCQkJICAgICBzdHJ1Y3QgaW92X2l0ZXIg
Kml0ZXIsIGJvb2wgZm9yY2UpOwotc3RhdGljIHZvaWQgaW9fcmVxX2Ryb3BfZmlsZXMoc3Ry
dWN0IGlvX2tpb2NiICpyZXEpOwogc3RhdGljIHZvaWQgaW9fcmVxX3Rhc2tfcXVldWUoc3Ry
dWN0IGlvX2tpb2NiICpyZXEpOworc3RhdGljIHZvaWQgaW9fc3VibWl0X2ZsdXNoX2NvbXBs
ZXRpb25zKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KTsKK3N0YXRpYyBpbnQgaW9fcmVxX3By
ZXBfYXN5bmMoc3RydWN0IGlvX2tpb2NiICpyZXEpOworCitzdGF0aWMgaW50IGlvX2luc3Rh
bGxfZml4ZWRfZmlsZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgc3RydWN0IGZpbGUgKmZpbGUs
CisJCQkJIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncywgdTMyIHNsb3RfaW5kZXgpOworc3Rh
dGljIGludCBpb19jbG9zZV9maXhlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQg
aW50IGlzc3VlX2ZsYWdzKTsKKworc3RhdGljIGVudW0gaHJ0aW1lcl9yZXN0YXJ0IGlvX2xp
bmtfdGltZW91dF9mbihzdHJ1Y3QgaHJ0aW1lciAqdGltZXIpOwogCiBzdGF0aWMgc3RydWN0
IGttZW1fY2FjaGUgKnJlcV9jYWNoZXA7CiAKQEAgLTEwMDAsMjEgKzExMTksNjcgQEAgc3Ry
dWN0IHNvY2sgKmlvX3VyaW5nX2dldF9zb2NrZXQoc3RydWN0IGZpbGUgKmZpbGUpCiB9CiBF
WFBPUlRfU1lNQk9MKGlvX3VyaW5nX2dldF9zb2NrZXQpOwogCi1zdGF0aWMgaW5saW5lIHZv
aWQgaW9fY2xlYW5fb3Aoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgaW5saW5lIHZv
aWQgaW9fdHdfbG9jayhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgYm9vbCAqbG9ja2VkKQor
eworCWlmICghKmxvY2tlZCkgeworCQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwor
CQkqbG9ja2VkID0gdHJ1ZTsKKwl9Cit9CisKKyNkZWZpbmUgaW9fZm9yX2VhY2hfbGluayhw
b3MsIGhlYWQpIFwKKwlmb3IgKHBvcyA9IChoZWFkKTsgcG9zOyBwb3MgPSBwb3MtPmxpbmsp
CisKKy8qCisgKiBTaGFtZWxlc3NseSBzdG9sZW4gZnJvbSB0aGUgbW0gaW1wbGVtZW50YXRp
b24gb2YgcGFnZSByZWZlcmVuY2UgY2hlY2tpbmcsCisgKiBzZWUgY29tbWl0IGY5NThkN2I1
MjhiMSBmb3IgZGV0YWlscy4KKyAqLworI2RlZmluZSByZXFfcmVmX3plcm9fb3JfY2xvc2Vf
dG9fb3ZlcmZsb3cocmVxKQlcCisJKCh1bnNpZ25lZCBpbnQpIGF0b21pY19yZWFkKCYocmVx
LT5yZWZzKSkgKyAxMjd1IDw9IDEyN3UpCisKK3N0YXRpYyBpbmxpbmUgYm9vbCByZXFfcmVm
X2luY19ub3RfemVybyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlpZiAocmVxLT5mbGFn
cyAmIChSRVFfRl9ORUVEX0NMRUFOVVAgfCBSRVFfRl9CVUZGRVJfU0VMRUNURUQpKQotCQlf
X2lvX2NsZWFuX29wKHJlcSk7CisJV0FSTl9PTl9PTkNFKCEocmVxLT5mbGFncyAmIFJFUV9G
X1JFRkNPVU5UKSk7CisJcmV0dXJuIGF0b21pY19pbmNfbm90X3plcm8oJnJlcS0+cmVmcyk7
CiB9CiAKLXN0YXRpYyBpbmxpbmUgYm9vbCBfX2lvX21hdGNoX2ZpbGVzKHN0cnVjdCBpb19r
aW9jYiAqcmVxLAotCQkJCSAgICBzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcykKK3N0YXRp
YyBpbmxpbmUgYm9vbCByZXFfcmVmX3B1dF9hbmRfdGVzdChzdHJ1Y3QgaW9fa2lvY2IgKnJl
cSkKIHsKLQlpZiAocmVxLT5maWxlICYmIHJlcS0+ZmlsZS0+Zl9vcCA9PSAmaW9fdXJpbmdf
Zm9wcykKKwlpZiAobGlrZWx5KCEocmVxLT5mbGFncyAmIFJFUV9GX1JFRkNPVU5UKSkpCiAJ
CXJldHVybiB0cnVlOwogCi0JcmV0dXJuICgocmVxLT5mbGFncyAmIFJFUV9GX1dPUktfSU5J
VElBTElaRUQpICYmCi0JICAgICAgICAocmVxLT53b3JrLmZsYWdzICYgSU9fV1FfV09SS19G
SUxFUykpICYmCi0JCXJlcS0+d29yay5pZGVudGl0eS0+ZmlsZXMgPT0gZmlsZXM7CisJV0FS
Tl9PTl9PTkNFKHJlcV9yZWZfemVyb19vcl9jbG9zZV90b19vdmVyZmxvdyhyZXEpKTsKKwly
ZXR1cm4gYXRvbWljX2RlY19hbmRfdGVzdCgmcmVxLT5yZWZzKTsKK30KKworc3RhdGljIGlu
bGluZSB2b2lkIHJlcV9yZWZfZ2V0KHN0cnVjdCBpb19raW9jYiAqcmVxKQoreworCVdBUk5f
T05fT05DRSghKHJlcS0+ZmxhZ3MgJiBSRVFfRl9SRUZDT1VOVCkpOworCVdBUk5fT05fT05D
RShyZXFfcmVmX3plcm9fb3JfY2xvc2VfdG9fb3ZlcmZsb3cocmVxKSk7CisJYXRvbWljX2lu
YygmcmVxLT5yZWZzKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIF9faW9fcmVxX3NldF9y
ZWZjb3VudChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IG5yKQoreworCWlmICghKHJlcS0+
ZmxhZ3MgJiBSRVFfRl9SRUZDT1VOVCkpIHsKKwkJcmVxLT5mbGFncyB8PSBSRVFfRl9SRUZD
T1VOVDsKKwkJYXRvbWljX3NldCgmcmVxLT5yZWZzLCBucik7CisJfQorfQorCitzdGF0aWMg
aW5saW5lIHZvaWQgaW9fcmVxX3NldF9yZWZjb3VudChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkK
K3sKKwlfX2lvX3JlcV9zZXRfcmVmY291bnQocmVxLCAxKTsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIGlvX3JlcV9zZXRfcnNyY19ub2RlKHN0cnVjdCBpb19raW9jYiAqcmVxKQorewor
CXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CisKKwlpZiAoIXJlcS0+Zml4
ZWRfcnNyY19yZWZzKSB7CisJCXJlcS0+Zml4ZWRfcnNyY19yZWZzID0gJmN0eC0+cnNyY19u
b2RlLT5yZWZzOworCQlwZXJjcHVfcmVmX2dldChyZXEtPmZpeGVkX3JzcmNfcmVmcyk7CisJ
fQogfQogCiBzdGF0aWMgdm9pZCBpb19yZWZzX3Jlc3VycmVjdChzdHJ1Y3QgcGVyY3B1X3Jl
ZiAqcmVmLCBzdHJ1Y3QgY29tcGxldGlvbiAqY29tcGwpCkBAIC0xMDI5LDE2OSArMTE5NCwx
MDQgQEAgc3RhdGljIHZvaWQgaW9fcmVmc19yZXN1cnJlY3Qoc3RydWN0IHBlcmNwdV9yZWYg
KnJlZiwgc3RydWN0IGNvbXBsZXRpb24gKmNvbXBsKQogCQlwZXJjcHVfcmVmX3B1dChyZWYp
OwogfQogCi1zdGF0aWMgYm9vbCBpb19tYXRjaF90YXNrKHN0cnVjdCBpb19raW9jYiAqaGVh
ZCwKLQkJCSAgc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrLAotCQkJICBzdHJ1Y3QgZmlsZXNf
c3RydWN0ICpmaWxlcykKK3N0YXRpYyBib29sIGlvX21hdGNoX3Rhc2soc3RydWN0IGlvX2tp
b2NiICpoZWFkLCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssCisJCQkgIGJvb2wgY2FuY2Vs
X2FsbCkKKwlfX211c3RfaG9sZCgmcmVxLT5jdHgtPnRpbWVvdXRfbG9jaykKIHsKLQlzdHJ1
Y3QgaW9fa2lvY2IgKmxpbms7CisJc3RydWN0IGlvX2tpb2NiICpyZXE7CiAKLQlpZiAodGFz
ayAmJiBoZWFkLT50YXNrICE9IHRhc2spIHsKLQkJLyogaW4gdGVybXMgb2YgY2FuY2VsYXRp
b24sIGFsd2F5cyBtYXRjaCBpZiByZXEgdGFzayBpcyBkZWFkICovCi0JCWlmIChoZWFkLT50
YXNrLT5mbGFncyAmIFBGX0VYSVRJTkcpCi0JCQlyZXR1cm4gdHJ1ZTsKKwlpZiAodGFzayAm
JiBoZWFkLT50YXNrICE9IHRhc2spCiAJCXJldHVybiBmYWxzZTsKLQl9Ci0JaWYgKCFmaWxl
cykKLQkJcmV0dXJuIHRydWU7Ci0JaWYgKF9faW9fbWF0Y2hfZmlsZXMoaGVhZCwgZmlsZXMp
KQorCWlmIChjYW5jZWxfYWxsKQogCQlyZXR1cm4gdHJ1ZTsKLQlpZiAoaGVhZC0+ZmxhZ3Mg
JiBSRVFfRl9MSU5LX0hFQUQpIHsKLQkJbGlzdF9mb3JfZWFjaF9lbnRyeShsaW5rLCAmaGVh
ZC0+bGlua19saXN0LCBsaW5rX2xpc3QpIHsKLQkJCWlmIChfX2lvX21hdGNoX2ZpbGVzKGxp
bmssIGZpbGVzKSkKLQkJCQlyZXR1cm4gdHJ1ZTsKLQkJfQorCisJaW9fZm9yX2VhY2hfbGlu
ayhyZXEsIGhlYWQpIHsKKwkJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9JTkZMSUdIVCkKKwkJ
CXJldHVybiB0cnVlOwogCX0KIAlyZXR1cm4gZmFsc2U7CiB9CiAKLQotc3RhdGljIHZvaWQg
aW9fc3FfdGhyZWFkX2Ryb3BfbW0odm9pZCkKK3N0YXRpYyBib29sIGlvX21hdGNoX2xpbmtl
ZChzdHJ1Y3QgaW9fa2lvY2IgKmhlYWQpCiB7Ci0Jc3RydWN0IG1tX3N0cnVjdCAqbW0gPSBj
dXJyZW50LT5tbTsKKwlzdHJ1Y3QgaW9fa2lvY2IgKnJlcTsKIAotCWlmIChtbSkgewotCQlr
dGhyZWFkX3VudXNlX21tKG1tKTsKLQkJbW1wdXQobW0pOwotCQljdXJyZW50LT5tbSA9IE5V
TEw7CisJaW9fZm9yX2VhY2hfbGluayhyZXEsIGhlYWQpIHsKKwkJaWYgKHJlcS0+ZmxhZ3Mg
JiBSRVFfRl9JTkZMSUdIVCkKKwkJCXJldHVybiB0cnVlOwogCX0KKwlyZXR1cm4gZmFsc2U7
CiB9CiAKLXN0YXRpYyBpbnQgX19pb19zcV90aHJlYWRfYWNxdWlyZV9tbShzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCkKKy8qCisgKiBBcyBpb19tYXRjaF90YXNrKCkgYnV0IHByb3RlY3Rl
ZCBhZ2FpbnN0IHJhY2luZyB3aXRoIGxpbmtlZCB0aW1lb3V0cy4KKyAqIFVzZXIgbXVzdCBu
b3QgaG9sZCB0aW1lb3V0X2xvY2suCisgKi8KK3N0YXRpYyBib29sIGlvX21hdGNoX3Rhc2tf
c2FmZShzdHJ1Y3QgaW9fa2lvY2IgKmhlYWQsIHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywK
KwkJCSAgICAgICBib29sIGNhbmNlbF9hbGwpCiB7Ci0Jc3RydWN0IG1tX3N0cnVjdCAqbW07
Ci0KLQlpZiAoY3VycmVudC0+ZmxhZ3MgJiBQRl9FWElUSU5HKQotCQlyZXR1cm4gLUVGQVVM
VDsKLQlpZiAoY3VycmVudC0+bW0pCi0JCXJldHVybiAwOworCWJvb2wgbWF0Y2hlZDsKIAot
CS8qIFNob3VsZCBuZXZlciBoYXBwZW4gKi8KLQlpZiAodW5saWtlbHkoIShjdHgtPmZsYWdz
ICYgSU9SSU5HX1NFVFVQX1NRUE9MTCkpKQotCQlyZXR1cm4gLUVGQVVMVDsKKwlpZiAodGFz
ayAmJiBoZWFkLT50YXNrICE9IHRhc2spCisJCXJldHVybiBmYWxzZTsKKwlpZiAoY2FuY2Vs
X2FsbCkKKwkJcmV0dXJuIHRydWU7CiAKLQl0YXNrX2xvY2soY3R4LT5zcW9fdGFzayk7Ci0J
bW0gPSBjdHgtPnNxb190YXNrLT5tbTsKLQlpZiAodW5saWtlbHkoIW1tIHx8ICFtbWdldF9u
b3RfemVybyhtbSkpKQotCQltbSA9IE5VTEw7Ci0JdGFza191bmxvY2soY3R4LT5zcW9fdGFz
ayk7CisJaWYgKGhlYWQtPmZsYWdzICYgUkVRX0ZfTElOS19USU1FT1VUKSB7CisJCXN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4ID0gaGVhZC0+Y3R4OwogCi0JaWYgKG1tKSB7Ci0JCWt0aHJl
YWRfdXNlX21tKG1tKTsKLQkJcmV0dXJuIDA7CisJCS8qIHByb3RlY3QgYWdhaW5zdCByYWNl
cyB3aXRoIGxpbmtlZCB0aW1lb3V0cyAqLworCQlzcGluX2xvY2tfaXJxKCZjdHgtPnRpbWVv
dXRfbG9jayk7CisJCW1hdGNoZWQgPSBpb19tYXRjaF9saW5rZWQoaGVhZCk7CisJCXNwaW5f
dW5sb2NrX2lycSgmY3R4LT50aW1lb3V0X2xvY2spOworCX0gZWxzZSB7CisJCW1hdGNoZWQg
PSBpb19tYXRjaF9saW5rZWQoaGVhZCk7CiAJfQorCXJldHVybiBtYXRjaGVkOworfQogCi0J
cmV0dXJuIC1FRkFVTFQ7Ci19Ci0KLXN0YXRpYyBpbnQgaW9fc3FfdGhyZWFkX2FjcXVpcmVf
bW0oc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCi0JCQkJICAgc3RydWN0IGlvX2tpb2NiICpy
ZXEpCi17Ci0JaWYgKCEoaW9fb3BfZGVmc1tyZXEtPm9wY29kZV0ud29ya19mbGFncyAmIElP
X1dRX1dPUktfTU0pKQotCQlyZXR1cm4gMDsKLQlyZXR1cm4gX19pb19zcV90aHJlYWRfYWNx
dWlyZV9tbShjdHgpOwotfQotCi1zdGF0aWMgdm9pZCBpb19zcV90aHJlYWRfYXNzb2NpYXRl
X2Jsa2NnKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAotCQkJCQkgc3RydWN0IGNncm91cF9z
dWJzeXNfc3RhdGUgKipjdXJfY3NzKQotCitzdGF0aWMgaW5saW5lIHZvaWQgcmVxX3NldF9m
YWlsKHN0cnVjdCBpb19raW9jYiAqcmVxKQogewotI2lmZGVmIENPTkZJR19CTEtfQ0dST1VQ
Ci0JLyogcHV0cyB0aGUgb2xkIG9uZSB3aGVuIHN3YXBwaW5nICovCi0JaWYgKCpjdXJfY3Nz
ICE9IGN0eC0+c3FvX2Jsa2NnX2NzcykgewotCQlrdGhyZWFkX2Fzc29jaWF0ZV9ibGtjZyhj
dHgtPnNxb19ibGtjZ19jc3MpOwotCQkqY3VyX2NzcyA9IGN0eC0+c3FvX2Jsa2NnX2NzczsK
LQl9Ci0jZW5kaWYKLX0KLQotc3RhdGljIHZvaWQgaW9fc3FfdGhyZWFkX3VuYXNzb2NpYXRl
X2Jsa2NnKHZvaWQpCi17Ci0jaWZkZWYgQ09ORklHX0JMS19DR1JPVVAKLQlrdGhyZWFkX2Fz
c29jaWF0ZV9ibGtjZyhOVUxMKTsKLSNlbmRpZgorCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfRkFJ
TDsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIHJlcV9zZXRfZmFpbF9saW5rcyhzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSkKK3N0YXRpYyBpbmxpbmUgdm9pZCByZXFfZmFpbF9saW5rX25vZGUo
c3RydWN0IGlvX2tpb2NiICpyZXEsIGludCByZXMpCiB7Ci0JaWYgKChyZXEtPmZsYWdzICYg
KFJFUV9GX0xJTksgfCBSRVFfRl9IQVJETElOSykpID09IFJFUV9GX0xJTkspCi0JCXJlcS0+
ZmxhZ3MgfD0gUkVRX0ZfRkFJTF9MSU5LOworCXJlcV9zZXRfZmFpbChyZXEpOworCXJlcS0+
cmVzdWx0ID0gcmVzOwogfQogCi0vKgotICogTm9uZSBvZiB0aGVzZSBhcmUgZGVyZWZlcmVu
Y2VkLCB0aGV5IGFyZSBzaW1wbHkgdXNlZCB0byBjaGVjayBpZiBhbnkgb2YKLSAqIHRoZW0g
aGF2ZSBjaGFuZ2VkLiBJZiB3ZSdyZSB1bmRlciBjdXJyZW50IGFuZCBjaGVjayB0aGV5IGFy
ZSBzdGlsbCB0aGUKLSAqIHNhbWUsIHdlJ3JlIGZpbmUgdG8gZ3JhYiByZWZlcmVuY2VzIHRv
IHRoZW0gZm9yIGFjdHVhbCBvdXQtb2YtbGluZSB1c2UuCi0gKi8KLXN0YXRpYyB2b2lkIGlv
X2luaXRfaWRlbnRpdHkoc3RydWN0IGlvX2lkZW50aXR5ICppZCkKK3N0YXRpYyB2b2lkIGlv
X3JpbmdfY3R4X3JlZl9mcmVlKHN0cnVjdCBwZXJjcHVfcmVmICpyZWYpCiB7Ci0JaWQtPmZp
bGVzID0gY3VycmVudC0+ZmlsZXM7Ci0JaWQtPm1tID0gY3VycmVudC0+bW07Ci0jaWZkZWYg
Q09ORklHX0JMS19DR1JPVVAKLQlyY3VfcmVhZF9sb2NrKCk7Ci0JaWQtPmJsa2NnX2NzcyA9
IGJsa2NnX2NzcygpOwotCXJjdV9yZWFkX3VubG9jaygpOwotI2VuZGlmCi0JaWQtPmNyZWRz
ID0gY3VycmVudF9jcmVkKCk7Ci0JaWQtPm5zcHJveHkgPSBjdXJyZW50LT5uc3Byb3h5Owot
CWlkLT5mcyA9IGN1cnJlbnQtPmZzOwotCWlkLT5mc2l6ZSA9IHJsaW1pdChSTElNSVRfRlNJ
WkUpOwotI2lmZGVmIENPTkZJR19BVURJVAotCWlkLT5sb2dpbnVpZCA9IGN1cnJlbnQtPmxv
Z2ludWlkOwotCWlkLT5zZXNzaW9uaWQgPSBjdXJyZW50LT5zZXNzaW9uaWQ7Ci0jZW5kaWYK
LQlyZWZjb3VudF9zZXQoJmlkLT5jb3VudCwgMSk7Ci19CisJc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHggPSBjb250YWluZXJfb2YocmVmLCBzdHJ1Y3QgaW9fcmluZ19jdHgsIHJlZnMpOwog
Ci1zdGF0aWMgaW5saW5lIHZvaWQgX19pb19yZXFfaW5pdF9hc3luYyhzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSkKLXsKLQltZW1zZXQoJnJlcS0+d29yaywgMCwgc2l6ZW9mKHJlcS0+d29yaykp
OwotCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfV09SS19JTklUSUFMSVpFRDsKKwljb21wbGV0ZSgm
Y3R4LT5yZWZfY29tcCk7CiB9CiAKLS8qCi0gKiBOb3RlOiBtdXN0IGNhbGwgaW9fcmVxX2lu
aXRfYXN5bmMoKSBmb3IgdGhlIGZpcnN0IHRpbWUgeW91Ci0gKiB0b3VjaCBhbnkgbWVtYmVy
cyBvZiBpb193cV93b3JrLgotICovCi1zdGF0aWMgaW5saW5lIHZvaWQgaW9fcmVxX2luaXRf
YXN5bmMoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgaW5saW5lIGJvb2wgaW9faXNf
dGltZW91dF9ub3NlcShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlzdHJ1Y3QgaW9fdXJp
bmdfdGFzayAqdGN0eCA9IHJlcS0+dGFzay0+aW9fdXJpbmc7Ci0KLQlpZiAocmVxLT5mbGFn
cyAmIFJFUV9GX1dPUktfSU5JVElBTElaRUQpCi0JCXJldHVybjsKLQotCV9faW9fcmVxX2lu
aXRfYXN5bmMocmVxKTsKLQotCS8qIEdyYWIgYSByZWYgaWYgdGhpcyBpc24ndCBvdXIgc3Rh
dGljIGlkZW50aXR5ICovCi0JcmVxLT53b3JrLmlkZW50aXR5ID0gdGN0eC0+aWRlbnRpdHk7
Ci0JaWYgKHRjdHgtPmlkZW50aXR5ICE9ICZ0Y3R4LT5fX2lkZW50aXR5KQotCQlyZWZjb3Vu
dF9pbmMoJnJlcS0+d29yay5pZGVudGl0eS0+Y291bnQpOworCXJldHVybiAhcmVxLT50aW1l
b3V0Lm9mZjsKIH0KIAotc3RhdGljIGlubGluZSBib29sIGlvX2FzeW5jX3N1Ym1pdChzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCkKK3N0YXRpYyB2b2lkIGlvX2ZhbGxiYWNrX3JlcV9mdW5j
KHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIHsKLQlyZXR1cm4gY3R4LT5mbGFncyAmIElP
UklOR19TRVRVUF9TUVBPTEw7Ci19CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSBjb250
YWluZXJfb2Yod29yaywgc3RydWN0IGlvX3JpbmdfY3R4LAorCQkJCQkJZmFsbGJhY2tfd29y
ay53b3JrKTsKKwlzdHJ1Y3QgbGxpc3Rfbm9kZSAqbm9kZSA9IGxsaXN0X2RlbF9hbGwoJmN0
eC0+ZmFsbGJhY2tfbGxpc3QpOworCXN0cnVjdCBpb19raW9jYiAqcmVxLCAqdG1wOworCWJv
b2wgbG9ja2VkID0gZmFsc2U7CiAKLXN0YXRpYyB2b2lkIGlvX3JpbmdfY3R4X3JlZl9mcmVl
KHN0cnVjdCBwZXJjcHVfcmVmICpyZWYpCi17Ci0Jc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgg
PSBjb250YWluZXJfb2YocmVmLCBzdHJ1Y3QgaW9fcmluZ19jdHgsIHJlZnMpOworCXBlcmNw
dV9yZWZfZ2V0KCZjdHgtPnJlZnMpOworCWxsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocmVx
LCB0bXAsIG5vZGUsIGlvX3Rhc2tfd29yay5mYWxsYmFja19ub2RlKQorCQlyZXEtPmlvX3Rh
c2tfd29yay5mdW5jKHJlcSwgJmxvY2tlZCk7CiAKLQljb21wbGV0ZSgmY3R4LT5yZWZfY29t
cCk7Ci19CisJaWYgKGxvY2tlZCkgeworCQlpZiAoY3R4LT5zdWJtaXRfc3RhdGUuY29tcGxf
bnIpCisJCQlpb19zdWJtaXRfZmx1c2hfY29tcGxldGlvbnMoY3R4KTsKKwkJbXV0ZXhfdW5s
b2NrKCZjdHgtPnVyaW5nX2xvY2spOworCX0KKwlwZXJjcHVfcmVmX3B1dCgmY3R4LT5yZWZz
KTsKIAotc3RhdGljIGlubGluZSBib29sIGlvX2lzX3RpbWVvdXRfbm9zZXEoc3RydWN0IGlv
X2tpb2NiICpyZXEpCi17Ci0JcmV0dXJuICFyZXEtPnRpbWVvdXQub2ZmOwogfQogCiBzdGF0
aWMgc3RydWN0IGlvX3JpbmdfY3R4ICppb19yaW5nX2N0eF9hbGxvYyhzdHJ1Y3QgaW9fdXJp
bmdfcGFyYW1zICpwKQpAQCAtMTIwMywxMCArMTMwMyw2IEBAIHN0YXRpYyBzdHJ1Y3QgaW9f
cmluZ19jdHggKmlvX3JpbmdfY3R4X2FsbG9jKHN0cnVjdCBpb191cmluZ19wYXJhbXMgKnAp
CiAJaWYgKCFjdHgpCiAJCXJldHVybiBOVUxMOwogCi0JY3R4LT5mYWxsYmFja19yZXEgPSBr
bWVtX2NhY2hlX2FsbG9jKHJlcV9jYWNoZXAsIEdGUF9LRVJORUwpOwotCWlmICghY3R4LT5m
YWxsYmFja19yZXEpCi0JCWdvdG8gZXJyOwotCiAJLyoKIAkgKiBVc2UgNSBiaXRzIGxlc3Mg
dGhhbiB0aGUgbWF4IGNxIGVudHJpZXMsIHRoYXQgc2hvdWxkIGdpdmUgdXMgYXJvdW5kCiAJ
ICogMzIgZW50cmllcyBwZXIgaGFzaCBsaXN0IGlmIHRvdGFsbHkgZnVsbCBhbmQgdW5pZm9y
bWx5IHNwcmVhZC4KQEAgLTEyMjIsNiArMTMxOCwxMiBAQCBzdGF0aWMgc3RydWN0IGlvX3Jp
bmdfY3R4ICppb19yaW5nX2N0eF9hbGxvYyhzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwKQog
CQlnb3RvIGVycjsKIAlfX2hhc2hfaW5pdChjdHgtPmNhbmNlbF9oYXNoLCAxVSA8PCBoYXNo
X2JpdHMpOwogCisJY3R4LT5kdW1teV91YnVmID0ga3phbGxvYyhzaXplb2YoKmN0eC0+ZHVt
bXlfdWJ1ZiksIEdGUF9LRVJORUwpOworCWlmICghY3R4LT5kdW1teV91YnVmKQorCQlnb3Rv
IGVycjsKKwkvKiBzZXQgaW52YWxpZCByYW5nZSwgc28gaW9faW1wb3J0X2ZpeGVkKCkgZmFp
bHMgbWVldGluZyBpdCAqLworCWN0eC0+ZHVtbXlfdWJ1Zi0+dWJ1ZiA9IC0xVUw7CisKIAlp
ZiAocGVyY3B1X3JlZl9pbml0KCZjdHgtPnJlZnMsIGlvX3JpbmdfY3R4X3JlZl9mcmVlLAog
CQkJICAgIFBFUkNQVV9SRUZfQUxMT1dfUkVJTklULCBHRlBfS0VSTkVMKSkKIAkJZ290byBl
cnI7CkBAIC0xMjI5LDIzMiArMTMzMSwxMDkgQEAgc3RhdGljIHN0cnVjdCBpb19yaW5nX2N0
eCAqaW9fcmluZ19jdHhfYWxsb2Moc3RydWN0IGlvX3VyaW5nX3BhcmFtcyAqcCkKIAljdHgt
PmZsYWdzID0gcC0+ZmxhZ3M7CiAJaW5pdF93YWl0cXVldWVfaGVhZCgmY3R4LT5zcW9fc3Ff
d2FpdCk7CiAJSU5JVF9MSVNUX0hFQUQoJmN0eC0+c3FkX2xpc3QpOwotCWluaXRfd2FpdHF1
ZXVlX2hlYWQoJmN0eC0+Y3Ffd2FpdCk7CisJaW5pdF93YWl0cXVldWVfaGVhZCgmY3R4LT5w
b2xsX3dhaXQpOwogCUlOSVRfTElTVF9IRUFEKCZjdHgtPmNxX292ZXJmbG93X2xpc3QpOwog
CWluaXRfY29tcGxldGlvbigmY3R4LT5yZWZfY29tcCk7Ci0JaW5pdF9jb21wbGV0aW9uKCZj
dHgtPnNxX3RocmVhZF9jb21wKTsKIAl4YV9pbml0X2ZsYWdzKCZjdHgtPmlvX2J1ZmZlcnMs
IFhBX0ZMQUdTX0FMTE9DMSk7CiAJeGFfaW5pdF9mbGFncygmY3R4LT5wZXJzb25hbGl0aWVz
LCBYQV9GTEFHU19BTExPQzEpOwogCW11dGV4X2luaXQoJmN0eC0+dXJpbmdfbG9jayk7Ci0J
aW5pdF93YWl0cXVldWVfaGVhZCgmY3R4LT53YWl0KTsKKwlpbml0X3dhaXRxdWV1ZV9oZWFk
KCZjdHgtPmNxX3dhaXQpOwogCXNwaW5fbG9ja19pbml0KCZjdHgtPmNvbXBsZXRpb25fbG9j
ayk7CisJc3Bpbl9sb2NrX2luaXQoJmN0eC0+dGltZW91dF9sb2NrKTsKIAlJTklUX0xJU1Rf
SEVBRCgmY3R4LT5pb3BvbGxfbGlzdCk7CiAJSU5JVF9MSVNUX0hFQUQoJmN0eC0+ZGVmZXJf
bGlzdCk7CiAJSU5JVF9MSVNUX0hFQUQoJmN0eC0+dGltZW91dF9saXN0KTsKLQlzcGluX2xv
Y2tfaW5pdCgmY3R4LT5pbmZsaWdodF9sb2NrKTsKLQlJTklUX0xJU1RfSEVBRCgmY3R4LT5p
bmZsaWdodF9saXN0KTsKLQlJTklUX0RFTEFZRURfV09SSygmY3R4LT5maWxlX3B1dF93b3Jr
LCBpb19maWxlX3B1dF93b3JrKTsKLQlpbml0X2xsaXN0X2hlYWQoJmN0eC0+ZmlsZV9wdXRf
bGxpc3QpOworCUlOSVRfTElTVF9IRUFEKCZjdHgtPmx0aW1lb3V0X2xpc3QpOworCXNwaW5f
bG9ja19pbml0KCZjdHgtPnJzcmNfcmVmX2xvY2spOworCUlOSVRfTElTVF9IRUFEKCZjdHgt
PnJzcmNfcmVmX2xpc3QpOworCUlOSVRfREVMQVlFRF9XT1JLKCZjdHgtPnJzcmNfcHV0X3dv
cmssIGlvX3JzcmNfcHV0X3dvcmspOworCWluaXRfbGxpc3RfaGVhZCgmY3R4LT5yc3JjX3B1
dF9sbGlzdCk7CisJSU5JVF9MSVNUX0hFQUQoJmN0eC0+dGN0eF9saXN0KTsKKwlJTklUX0xJ
U1RfSEVBRCgmY3R4LT5zdWJtaXRfc3RhdGUuZnJlZV9saXN0KTsKKwlJTklUX0xJU1RfSEVB
RCgmY3R4LT5sb2NrZWRfZnJlZV9saXN0KTsKKwlJTklUX0RFTEFZRURfV09SSygmY3R4LT5m
YWxsYmFja193b3JrLCBpb19mYWxsYmFja19yZXFfZnVuYyk7CiAJcmV0dXJuIGN0eDsKIGVy
cjoKLQlpZiAoY3R4LT5mYWxsYmFja19yZXEpCi0JCWttZW1fY2FjaGVfZnJlZShyZXFfY2Fj
aGVwLCBjdHgtPmZhbGxiYWNrX3JlcSk7CisJa2ZyZWUoY3R4LT5kdW1teV91YnVmKTsKIAlr
ZnJlZShjdHgtPmNhbmNlbF9oYXNoKTsKIAlrZnJlZShjdHgpOwogCXJldHVybiBOVUxMOwog
fQogCitzdGF0aWMgdm9pZCBpb19hY2NvdW50X2NxX292ZXJmbG93KHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQoreworCXN0cnVjdCBpb19yaW5ncyAqciA9IGN0eC0+cmluZ3M7CisKKwlX
UklURV9PTkNFKHItPmNxX292ZXJmbG93LCBSRUFEX09OQ0Uoci0+Y3Ffb3ZlcmZsb3cpICsg
MSk7CisJY3R4LT5jcV9leHRyYS0tOworfQorCiBzdGF0aWMgYm9vbCByZXFfbmVlZF9kZWZl
cihzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdTMyIHNlcSkKIHsKIAlpZiAodW5saWtlbHkocmVx
LT5mbGFncyAmIFJFUV9GX0lPX0RSQUlOKSkgewogCQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCA9IHJlcS0+Y3R4OwogCi0JCXJldHVybiBzZXEgIT0gY3R4LT5jYWNoZWRfY3FfdGFpbAot
CQkJCSsgUkVBRF9PTkNFKGN0eC0+Y2FjaGVkX2NxX292ZXJmbG93KTsKKwkJcmV0dXJuIHNl
cSArIFJFQURfT05DRShjdHgtPmNxX2V4dHJhKSAhPSBjdHgtPmNhY2hlZF9jcV90YWlsOwog
CX0KIAogCXJldHVybiBmYWxzZTsKIH0KIAotc3RhdGljIHZvaWQgX19pb19jb21taXRfY3Fy
aW5nKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQotewotCXN0cnVjdCBpb19yaW5ncyAqcmlu
Z3MgPSBjdHgtPnJpbmdzOwotCi0JLyogb3JkZXIgY3FlIHN0b3JlcyB3aXRoIHJpbmcgdXBk
YXRlICovCi0Jc21wX3N0b3JlX3JlbGVhc2UoJnJpbmdzLT5jcS50YWlsLCBjdHgtPmNhY2hl
ZF9jcV90YWlsKTsKLX0KKyNkZWZpbmUgRkZTX0FTWU5DX1JFQUQJCTB4MVVMCisjZGVmaW5l
IEZGU19BU1lOQ19XUklURQkJMHgyVUwKKyNpZmRlZiBDT05GSUdfNjRCSVQKKyNkZWZpbmUg
RkZTX0lTUkVHCQkweDRVTAorI2Vsc2UKKyNkZWZpbmUgRkZTX0lTUkVHCQkweDBVTAorI2Vu
ZGlmCisjZGVmaW5lIEZGU19NQVNLCQl+KEZGU19BU1lOQ19SRUFEfEZGU19BU1lOQ19XUklU
RXxGRlNfSVNSRUcpCiAKLXN0YXRpYyB2b2lkIGlvX3B1dF9pZGVudGl0eShzdHJ1Y3QgaW9f
dXJpbmdfdGFzayAqdGN0eCwgc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgaW5saW5l
IGJvb2wgaW9fcmVxX2Zmc19zZXQoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7Ci0JaWYgKHJl
cS0+d29yay5pZGVudGl0eSA9PSAmdGN0eC0+X19pZGVudGl0eSkKLQkJcmV0dXJuOwotCWlm
IChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJnJlcS0+d29yay5pZGVudGl0eS0+Y291bnQpKQot
CQlrZnJlZShyZXEtPndvcmsuaWRlbnRpdHkpOworCXJldHVybiBJU19FTkFCTEVEKENPTkZJ
R182NEJJVCkgJiYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9GSVhFRF9GSUxFKTsKIH0KIAotc3Rh
dGljIHZvaWQgaW9fcmVxX2NsZWFuX3dvcmsoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0
aWMgdm9pZCBpb19yZXFfdHJhY2tfaW5mbGlnaHQoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7
Ci0JaWYgKCEocmVxLT5mbGFncyAmIFJFUV9GX1dPUktfSU5JVElBTElaRUQpKQotCQlyZXR1
cm47Ci0KLQlyZXEtPmZsYWdzICY9IH5SRVFfRl9XT1JLX0lOSVRJQUxJWkVEOwotCi0JaWYg
KHJlcS0+d29yay5mbGFncyAmIElPX1dRX1dPUktfTU0pIHsKLQkJbW1kcm9wKHJlcS0+d29y
ay5pZGVudGl0eS0+bW0pOwotCQlyZXEtPndvcmsuZmxhZ3MgJj0gfklPX1dRX1dPUktfTU07
Ci0JfQotI2lmZGVmIENPTkZJR19CTEtfQ0dST1VQCi0JaWYgKHJlcS0+d29yay5mbGFncyAm
IElPX1dRX1dPUktfQkxLQ0cpIHsKLQkJY3NzX3B1dChyZXEtPndvcmsuaWRlbnRpdHktPmJs
a2NnX2Nzcyk7Ci0JCXJlcS0+d29yay5mbGFncyAmPSB+SU9fV1FfV09SS19CTEtDRzsKLQl9
Ci0jZW5kaWYKLQlpZiAocmVxLT53b3JrLmZsYWdzICYgSU9fV1FfV09SS19DUkVEUykgewot
CQlwdXRfY3JlZChyZXEtPndvcmsuaWRlbnRpdHktPmNyZWRzKTsKLQkJcmVxLT53b3JrLmZs
YWdzICY9IH5JT19XUV9XT1JLX0NSRURTOwotCX0KLQlpZiAocmVxLT53b3JrLmZsYWdzICYg
SU9fV1FfV09SS19GUykgewotCQlzdHJ1Y3QgZnNfc3RydWN0ICpmcyA9IHJlcS0+d29yay5p
ZGVudGl0eS0+ZnM7Ci0KLQkJc3Bpbl9sb2NrKCZyZXEtPndvcmsuaWRlbnRpdHktPmZzLT5s
b2NrKTsKLQkJaWYgKC0tZnMtPnVzZXJzKQotCQkJZnMgPSBOVUxMOwotCQlzcGluX3VubG9j
aygmcmVxLT53b3JrLmlkZW50aXR5LT5mcy0+bG9jayk7Ci0JCWlmIChmcykKLQkJCWZyZWVf
ZnNfc3RydWN0KGZzKTsKLQkJcmVxLT53b3JrLmZsYWdzICY9IH5JT19XUV9XT1JLX0ZTOwor
CWlmICghKHJlcS0+ZmxhZ3MgJiBSRVFfRl9JTkZMSUdIVCkpIHsKKwkJcmVxLT5mbGFncyB8
PSBSRVFfRl9JTkZMSUdIVDsKKwkJYXRvbWljX2luYygmcmVxLT50YXNrLT5pb191cmluZy0+
aW5mbGlnaHRfdHJhY2tlZCk7CiAJfQotCWlmIChyZXEtPmZsYWdzICYgUkVRX0ZfSU5GTElH
SFQpCi0JCWlvX3JlcV9kcm9wX2ZpbGVzKHJlcSk7Ci0KLQlpb19wdXRfaWRlbnRpdHkocmVx
LT50YXNrLT5pb191cmluZywgcmVxKTsKIH0KIAotLyoKLSAqIENyZWF0ZSBhIHByaXZhdGUg
Y29weSBvZiBpb19pZGVudGl0eSwgc2luY2Ugc29tZSBmaWVsZHMgZG9uJ3QgbWF0Y2gKLSAq
IHRoZSBjdXJyZW50IGNvbnRleHQuCi0gKi8KLXN0YXRpYyBib29sIGlvX2lkZW50aXR5X2Nv
dyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3N0YXRpYyBzdHJ1Y3QgaW9fa2lvY2IgKl9faW9f
cHJlcF9saW5rZWRfdGltZW91dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlzdHJ1Y3Qg
aW9fdXJpbmdfdGFzayAqdGN0eCA9IHJlcS0+dGFzay0+aW9fdXJpbmc7Ci0JY29uc3Qgc3Ry
dWN0IGNyZWQgKmNyZWRzID0gTlVMTDsKLQlzdHJ1Y3QgaW9faWRlbnRpdHkgKmlkOwotCi0J
aWYgKHJlcS0+d29yay5mbGFncyAmIElPX1dRX1dPUktfQ1JFRFMpCi0JCWNyZWRzID0gcmVx
LT53b3JrLmlkZW50aXR5LT5jcmVkczsKLQotCWlkID0ga21lbWR1cChyZXEtPndvcmsuaWRl
bnRpdHksIHNpemVvZigqaWQpLCBHRlBfS0VSTkVMKTsKLQlpZiAodW5saWtlbHkoIWlkKSkg
ewotCQlyZXEtPndvcmsuZmxhZ3MgfD0gSU9fV1FfV09SS19DQU5DRUw7Ci0JCXJldHVybiBm
YWxzZTsKLQl9Ci0KLQkvKgotCSAqIFdlIGNhbiBzYWZlbHkganVzdCByZS1pbml0IHRoZSBj
cmVkcyB3ZSBjb3BpZWQgIEVpdGhlciB0aGUgZmllbGQKLQkgKiBtYXRjaGVzIHRoZSBjdXJy
ZW50IG9uZSwgb3Igd2UgaGF2ZW4ndCBncmFiYmVkIGl0IHlldC4gVGhlIG9ubHkKLQkgKiBl
eGNlcHRpb24gaXMgLT5jcmVkcywgdGhyb3VnaCByZWdpc3RlcmVkIHBlcnNvbmFsaXRpZXMs
IHNvIGhhbmRsZQotCSAqIHRoYXQgb25lIHNlcGFyYXRlbHkuCi0JICovCi0JaW9faW5pdF9p
ZGVudGl0eShpZCk7Ci0JaWYgKGNyZWRzKQotCQlpZC0+Y3JlZHMgPSBjcmVkczsKLQotCS8q
IGFkZCBvbmUgZm9yIHRoaXMgcmVxdWVzdCAqLwotCXJlZmNvdW50X2luYygmaWQtPmNvdW50
KTsKKwlpZiAoV0FSTl9PTl9PTkNFKCFyZXEtPmxpbmspKQorCQlyZXR1cm4gTlVMTDsKIAot
CS8qIGRyb3AgdGN0eCBhbmQgcmVxIGlkZW50aXR5IHJlZmVyZW5jZXMsIGlmIG5lZWRlZCAq
LwotCWlmICh0Y3R4LT5pZGVudGl0eSAhPSAmdGN0eC0+X19pZGVudGl0eSAmJgotCSAgICBy
ZWZjb3VudF9kZWNfYW5kX3Rlc3QoJnRjdHgtPmlkZW50aXR5LT5jb3VudCkpCi0JCWtmcmVl
KHRjdHgtPmlkZW50aXR5KTsKLQlpZiAocmVxLT53b3JrLmlkZW50aXR5ICE9ICZ0Y3R4LT5f
X2lkZW50aXR5ICYmCi0JICAgIHJlZmNvdW50X2RlY19hbmRfdGVzdCgmcmVxLT53b3JrLmlk
ZW50aXR5LT5jb3VudCkpCi0JCWtmcmVlKHJlcS0+d29yay5pZGVudGl0eSk7CisJcmVxLT5m
bGFncyAmPSB+UkVRX0ZfQVJNX0xUSU1FT1VUOworCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTElO
S19USU1FT1VUOwogCi0JcmVxLT53b3JrLmlkZW50aXR5ID0gaWQ7Ci0JdGN0eC0+aWRlbnRp
dHkgPSBpZDsKLQlyZXR1cm4gdHJ1ZTsKKwkvKiBsaW5rZWQgdGltZW91dHMgc2hvdWxkIGhh
dmUgdHdvIHJlZnMgb25jZSBwcmVwJ2VkICovCisJaW9fcmVxX3NldF9yZWZjb3VudChyZXEp
OworCV9faW9fcmVxX3NldF9yZWZjb3VudChyZXEtPmxpbmssIDIpOworCXJldHVybiByZXEt
Pmxpbms7CiB9CiAKLXN0YXRpYyBib29sIGlvX2dyYWJfaWRlbnRpdHkoc3RydWN0IGlvX2tp
b2NiICpyZXEpCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpb19raW9jYiAqaW9fcHJlcF9saW5r
ZWRfdGltZW91dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQljb25zdCBzdHJ1Y3QgaW9f
b3BfZGVmICpkZWYgPSAmaW9fb3BfZGVmc1tyZXEtPm9wY29kZV07Ci0Jc3RydWN0IGlvX2lk
ZW50aXR5ICppZCA9IHJlcS0+d29yay5pZGVudGl0eTsKLQlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCA9IHJlcS0+Y3R4OwotCi0JaWYgKGRlZi0+d29ya19mbGFncyAmIElPX1dRX1dPUktf
RlNJWkUpIHsKLQkJaWYgKGlkLT5mc2l6ZSAhPSBybGltaXQoUkxJTUlUX0ZTSVpFKSkKLQkJ
CXJldHVybiBmYWxzZTsKLQkJcmVxLT53b3JrLmZsYWdzIHw9IElPX1dRX1dPUktfRlNJWkU7
Ci0JfQotI2lmZGVmIENPTkZJR19CTEtfQ0dST1VQCi0JaWYgKCEocmVxLT53b3JrLmZsYWdz
ICYgSU9fV1FfV09SS19CTEtDRykgJiYKLQkgICAgKGRlZi0+d29ya19mbGFncyAmIElPX1dR
X1dPUktfQkxLQ0cpKSB7Ci0JCXJjdV9yZWFkX2xvY2soKTsKLQkJaWYgKGlkLT5ibGtjZ19j
c3MgIT0gYmxrY2dfY3NzKCkpIHsKLQkJCXJjdV9yZWFkX3VubG9jaygpOwotCQkJcmV0dXJu
IGZhbHNlOwotCQl9Ci0JCS8qCi0JCSAqIFRoaXMgc2hvdWxkIGJlIHJhcmUsIGVpdGhlciB0
aGUgY2dyb3VwIGlzIGR5aW5nIG9yIHRoZSB0YXNrCi0JCSAqIGlzIG1vdmluZyBjZ3JvdXBz
LiBKdXN0IHB1bnQgdG8gcm9vdCBmb3IgdGhlIGhhbmRmdWwgb2YgaW9zLgotCQkgKi8KLQkJ
aWYgKGNzc190cnlnZXRfb25saW5lKGlkLT5ibGtjZ19jc3MpKQotCQkJcmVxLT53b3JrLmZs
YWdzIHw9IElPX1dRX1dPUktfQkxLQ0c7Ci0JCXJjdV9yZWFkX3VubG9jaygpOwotCX0KLSNl
bmRpZgotCWlmICghKHJlcS0+d29yay5mbGFncyAmIElPX1dRX1dPUktfQ1JFRFMpKSB7Ci0J
CWlmIChpZC0+Y3JlZHMgIT0gY3VycmVudF9jcmVkKCkpCi0JCQlyZXR1cm4gZmFsc2U7Ci0J
CWdldF9jcmVkKGlkLT5jcmVkcyk7Ci0JCXJlcS0+d29yay5mbGFncyB8PSBJT19XUV9XT1JL
X0NSRURTOwotCX0KLSNpZmRlZiBDT05GSUdfQVVESVQKLQlpZiAoIXVpZF9lcShjdXJyZW50
LT5sb2dpbnVpZCwgaWQtPmxvZ2ludWlkKSB8fAotCSAgICBjdXJyZW50LT5zZXNzaW9uaWQg
IT0gaWQtPnNlc3Npb25pZCkKLQkJcmV0dXJuIGZhbHNlOwotI2VuZGlmCi0JaWYgKCEocmVx
LT53b3JrLmZsYWdzICYgSU9fV1FfV09SS19GUykgJiYKLQkgICAgKGRlZi0+d29ya19mbGFn
cyAmIElPX1dRX1dPUktfRlMpKSB7Ci0JCWlmIChjdXJyZW50LT5mcyAhPSBpZC0+ZnMpCi0J
CQlyZXR1cm4gZmFsc2U7Ci0JCXNwaW5fbG9jaygmaWQtPmZzLT5sb2NrKTsKLQkJaWYgKCFp
ZC0+ZnMtPmluX2V4ZWMpIHsKLQkJCWlkLT5mcy0+dXNlcnMrKzsKLQkJCXJlcS0+d29yay5m
bGFncyB8PSBJT19XUV9XT1JLX0ZTOwotCQl9IGVsc2UgewotCQkJcmVxLT53b3JrLmZsYWdz
IHw9IElPX1dRX1dPUktfQ0FOQ0VMOwotCQl9Ci0JCXNwaW5fdW5sb2NrKCZjdXJyZW50LT5m
cy0+bG9jayk7Ci0JfQotCWlmICghKHJlcS0+d29yay5mbGFncyAmIElPX1dRX1dPUktfRklM
RVMpICYmCi0JICAgIChkZWYtPndvcmtfZmxhZ3MgJiBJT19XUV9XT1JLX0ZJTEVTKSAmJgot
CSAgICAhKHJlcS0+ZmxhZ3MgJiBSRVFfRl9OT19GSUxFX1RBQkxFKSkgewotCQlpZiAoaWQt
PmZpbGVzICE9IGN1cnJlbnQtPmZpbGVzIHx8Ci0JCSAgICBpZC0+bnNwcm94eSAhPSBjdXJy
ZW50LT5uc3Byb3h5KQotCQkJcmV0dXJuIGZhbHNlOwotCQlhdG9taWNfaW5jKCZpZC0+Zmls
ZXMtPmNvdW50KTsKLQkJZ2V0X25zcHJveHkoaWQtPm5zcHJveHkpOwotCi0JCWlmICghKHJl
cS0+ZmxhZ3MgJiBSRVFfRl9JTkZMSUdIVCkpIHsKLQkJCXJlcS0+ZmxhZ3MgfD0gUkVRX0Zf
SU5GTElHSFQ7Ci0KLQkJCXNwaW5fbG9ja19pcnEoJmN0eC0+aW5mbGlnaHRfbG9jayk7Ci0J
CQlsaXN0X2FkZCgmcmVxLT5pbmZsaWdodF9lbnRyeSwgJmN0eC0+aW5mbGlnaHRfbGlzdCk7
Ci0JCQlzcGluX3VubG9ja19pcnEoJmN0eC0+aW5mbGlnaHRfbG9jayk7Ci0JCX0KLQkJcmVx
LT53b3JrLmZsYWdzIHw9IElPX1dRX1dPUktfRklMRVM7Ci0JfQotCWlmICghKHJlcS0+d29y
ay5mbGFncyAmIElPX1dRX1dPUktfTU0pICYmCi0JICAgIChkZWYtPndvcmtfZmxhZ3MgJiBJ
T19XUV9XT1JLX01NKSkgewotCQlpZiAoaWQtPm1tICE9IGN1cnJlbnQtPm1tKQotCQkJcmV0
dXJuIGZhbHNlOwotCQltbWdyYWIoaWQtPm1tKTsKLQkJcmVxLT53b3JrLmZsYWdzIHw9IElP
X1dRX1dPUktfTU07Ci0JfQotCi0JcmV0dXJuIHRydWU7CisJaWYgKGxpa2VseSghKHJlcS0+
ZmxhZ3MgJiBSRVFfRl9BUk1fTFRJTUVPVVQpKSkKKwkJcmV0dXJuIE5VTEw7CisJcmV0dXJu
IF9faW9fcHJlcF9saW5rZWRfdGltZW91dChyZXEpOwogfQogCiBzdGF0aWMgdm9pZCBpb19w
cmVwX2FzeW5jX3dvcmsoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7CiAJY29uc3Qgc3RydWN0
IGlvX29wX2RlZiAqZGVmID0gJmlvX29wX2RlZnNbcmVxLT5vcGNvZGVdOwogCXN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7Ci0Jc3RydWN0IGlvX2lkZW50aXR5ICppZDsK
IAotCWlvX3JlcV9pbml0X2FzeW5jKHJlcSk7Ci0JaWQgPSByZXEtPndvcmsuaWRlbnRpdHk7
CisJaWYgKCEocmVxLT5mbGFncyAmIFJFUV9GX0NSRURTKSkgeworCQlyZXEtPmZsYWdzIHw9
IFJFUV9GX0NSRURTOworCQlyZXEtPmNyZWRzID0gZ2V0X2N1cnJlbnRfY3JlZCgpOworCX0K
IAorCXJlcS0+d29yay5saXN0Lm5leHQgPSBOVUxMOworCXJlcS0+d29yay5mbGFncyA9IDA7
CiAJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9GT1JDRV9BU1lOQykKIAkJcmVxLT53b3JrLmZs
YWdzIHw9IElPX1dRX1dPUktfQ09OQ1VSUkVOVDsKIApAQCAtMTQ2NSw5MiArMTQ0NCw3NyBA
QCBzdGF0aWMgdm9pZCBpb19wcmVwX2FzeW5jX3dvcmsoc3RydWN0IGlvX2tpb2NiICpyZXEp
CiAJCWlmIChkZWYtPnVuYm91bmRfbm9ucmVnX2ZpbGUpCiAJCQlyZXEtPndvcmsuZmxhZ3Mg
fD0gSU9fV1FfV09SS19VTkJPVU5EOwogCX0KLQotCS8qIGlmIHdlIGZhaWwgZ3JhYmJpbmcg
aWRlbnRpdHksIHdlIG11c3QgQ09XLCByZWdyYWIsIGFuZCByZXRyeSAqLwotCWlmIChpb19n
cmFiX2lkZW50aXR5KHJlcSkpCi0JCXJldHVybjsKLQotCWlmICghaW9faWRlbnRpdHlfY293
KHJlcSkpCi0JCXJldHVybjsKLQotCS8qIGNhbid0IGZhaWwgYXQgdGhpcyBwb2ludCAqLwot
CWlmICghaW9fZ3JhYl9pZGVudGl0eShyZXEpKQotCQlXQVJOX09OKDEpOwogfQogCiBzdGF0
aWMgdm9pZCBpb19wcmVwX2FzeW5jX2xpbmsoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7CiAJ
c3RydWN0IGlvX2tpb2NiICpjdXI7CiAKLQlpb19wcmVwX2FzeW5jX3dvcmsocmVxKTsKLQlp
ZiAocmVxLT5mbGFncyAmIFJFUV9GX0xJTktfSEVBRCkKLQkJbGlzdF9mb3JfZWFjaF9lbnRy
eShjdXIsICZyZXEtPmxpbmtfbGlzdCwgbGlua19saXN0KQorCWlmIChyZXEtPmZsYWdzICYg
UkVRX0ZfTElOS19USU1FT1VUKSB7CisJCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVx
LT5jdHg7CisKKwkJc3Bpbl9sb2NrX2lycSgmY3R4LT50aW1lb3V0X2xvY2spOworCQlpb19m
b3JfZWFjaF9saW5rKGN1ciwgcmVxKQogCQkJaW9fcHJlcF9hc3luY193b3JrKGN1cik7CisJ
CXNwaW5fdW5sb2NrX2lycSgmY3R4LT50aW1lb3V0X2xvY2spOworCX0gZWxzZSB7CisJCWlv
X2Zvcl9lYWNoX2xpbmsoY3VyLCByZXEpCisJCQlpb19wcmVwX2FzeW5jX3dvcmsoY3VyKTsK
Kwl9CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaW9fa2lvY2IgKl9faW9fcXVldWVfYXN5bmNfd29y
ayhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3N0YXRpYyB2b2lkIGlvX3F1ZXVlX2FzeW5jX3dv
cmsoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgKmxvY2tlZCkKIHsKIAlzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OwogCXN0cnVjdCBpb19raW9jYiAqbGluayA9IGlv
X3ByZXBfbGlua2VkX3RpbWVvdXQocmVxKTsKKwlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0
eCA9IHJlcS0+dGFzay0+aW9fdXJpbmc7CiAKLQl0cmFjZV9pb191cmluZ19xdWV1ZV9hc3lu
Y193b3JrKGN0eCwgaW9fd3FfaXNfaGFzaGVkKCZyZXEtPndvcmspLCByZXEsCi0JCQkJCSZy
ZXEtPndvcmssIHJlcS0+ZmxhZ3MpOwotCWlvX3dxX2VucXVldWUoY3R4LT5pb193cSwgJnJl
cS0+d29yayk7Ci0JcmV0dXJuIGxpbms7Ci19CisJLyogbXVzdCBub3QgdGFrZSB0aGUgbG9j
aywgTlVMTCBpdCBhcyBhIHByZWNhdXRpb24gKi8KKwlsb2NrZWQgPSBOVUxMOwogCi1zdGF0
aWMgdm9pZCBpb19xdWV1ZV9hc3luY193b3JrKHN0cnVjdCBpb19raW9jYiAqcmVxKQotewot
CXN0cnVjdCBpb19raW9jYiAqbGluazsKKwlCVUdfT04oIXRjdHgpOworCUJVR19PTighdGN0
eC0+aW9fd3EpOwogCiAJLyogaW5pdCAtPndvcmsgb2YgdGhlIHdob2xlIGxpbmsgYmVmb3Jl
IHB1bnRpbmcgKi8KIAlpb19wcmVwX2FzeW5jX2xpbmsocmVxKTsKLQlsaW5rID0gX19pb19x
dWV1ZV9hc3luY193b3JrKHJlcSk7CiAKKwkvKgorCSAqIE5vdCBleHBlY3RlZCB0byBoYXBw
ZW4sIGJ1dCBpZiB3ZSBkbyBoYXZlIGEgYnVnIHdoZXJlIHRoaXMgX2Nhbl8KKwkgKiBoYXBw
ZW4sIGNhdGNoIGl0IGhlcmUgYW5kIGVuc3VyZSB0aGUgcmVxdWVzdCBpcyBtYXJrZWQgYXMK
KwkgKiBjYW5jZWxlZC4gVGhhdCB3aWxsIG1ha2UgaW8td3EgZ28gdGhyb3VnaCB0aGUgdXN1
YWwgd29yayBjYW5jZWwKKwkgKiBwcm9jZWR1cmUgcmF0aGVyIHRoYW4gYXR0ZW1wdCB0byBy
dW4gdGhpcyByZXF1ZXN0IChvciBjcmVhdGUgYSBuZXcKKwkgKiB3b3JrZXIgZm9yIGl0KS4K
KwkgKi8KKwlpZiAoV0FSTl9PTl9PTkNFKCFzYW1lX3RocmVhZF9ncm91cChyZXEtPnRhc2ss
IGN1cnJlbnQpKSkKKwkJcmVxLT53b3JrLmZsYWdzIHw9IElPX1dRX1dPUktfQ0FOQ0VMOwor
CisJdHJhY2VfaW9fdXJpbmdfcXVldWVfYXN5bmNfd29yayhjdHgsIGlvX3dxX2lzX2hhc2hl
ZCgmcmVxLT53b3JrKSwgcmVxLAorCQkJCQkmcmVxLT53b3JrLCByZXEtPmZsYWdzKTsKKwlp
b193cV9lbnF1ZXVlKHRjdHgtPmlvX3dxLCAmcmVxLT53b3JrKTsKIAlpZiAobGluaykKIAkJ
aW9fcXVldWVfbGlua2VkX3RpbWVvdXQobGluayk7CiB9CiAKIHN0YXRpYyB2b2lkIGlvX2tp
bGxfdGltZW91dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IHN0YXR1cykKKwlfX211c3Rf
aG9sZCgmcmVxLT5jdHgtPmNvbXBsZXRpb25fbG9jaykKKwlfX211c3RfaG9sZCgmcmVxLT5j
dHgtPnRpbWVvdXRfbG9jaykKIHsKIAlzdHJ1Y3QgaW9fdGltZW91dF9kYXRhICppbyA9IHJl
cS0+YXN5bmNfZGF0YTsKLQlpbnQgcmV0OwogCi0JcmV0ID0gaHJ0aW1lcl90cnlfdG9fY2Fu
Y2VsKCZpby0+dGltZXIpOwotCWlmIChyZXQgIT0gLTEpIHsKKwlpZiAoaHJ0aW1lcl90cnlf
dG9fY2FuY2VsKCZpby0+dGltZXIpICE9IC0xKSB7CiAJCWlmIChzdGF0dXMpCi0JCQlyZXFf
c2V0X2ZhaWxfbGlua3MocmVxKTsKKwkJCXJlcV9zZXRfZmFpbChyZXEpOwogCQlhdG9taWNf
c2V0KCZyZXEtPmN0eC0+Y3FfdGltZW91dHMsCiAJCQlhdG9taWNfcmVhZCgmcmVxLT5jdHgt
PmNxX3RpbWVvdXRzKSArIDEpOwogCQlsaXN0X2RlbF9pbml0KCZyZXEtPnRpbWVvdXQubGlz
dCk7Ci0JCWlvX2NxcmluZ19maWxsX2V2ZW50KHJlcSwgc3RhdHVzKTsKLQkJaW9fcHV0X3Jl
cV9kZWZlcnJlZChyZXEsIDEpOwotCX0KLX0KLQotLyoKLSAqIFJldHVybnMgdHJ1ZSBpZiB3
ZSBmb3VuZCBhbmQga2lsbGVkIG9uZSBvciBtb3JlIHRpbWVvdXRzCi0gKi8KLXN0YXRpYyBi
b29sIGlvX2tpbGxfdGltZW91dHMoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCB0
YXNrX3N0cnVjdCAqdHNrLAotCQkJICAgICBzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcykK
LXsKLQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgKnRtcDsKLQlpbnQgY2FuY2VsZWQgPSAwOwot
Ci0Jc3Bpbl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOwotCWxpc3RfZm9yX2Vh
Y2hfZW50cnlfc2FmZShyZXEsIHRtcCwgJmN0eC0+dGltZW91dF9saXN0LCB0aW1lb3V0Lmxp
c3QpIHsKLQkJaWYgKGlvX21hdGNoX3Rhc2socmVxLCB0c2ssIGZpbGVzKSkgewotCQkJaW9f
a2lsbF90aW1lb3V0KHJlcSwgLUVDQU5DRUxFRCk7Ci0JCQljYW5jZWxlZCsrOwotCQl9CisJ
CWlvX2ZpbGxfY3FlX3JlcShyZXEsIHN0YXR1cywgMCk7CisJCWlvX3B1dF9yZXFfZGVmZXJy
ZWQocmVxKTsKIAl9Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7
Ci0JcmV0dXJuIGNhbmNlbGVkICE9IDA7CiB9CiAKLXN0YXRpYyB2b2lkIF9faW9fcXVldWVf
ZGVmZXJyZWQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCitzdGF0aWMgdm9pZCBpb19xdWV1
ZV9kZWZlcnJlZChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKLQlkbyB7CisJd2hpbGUg
KCFsaXN0X2VtcHR5KCZjdHgtPmRlZmVyX2xpc3QpKSB7CiAJCXN0cnVjdCBpb19kZWZlcl9l
bnRyeSAqZGUgPSBsaXN0X2ZpcnN0X2VudHJ5KCZjdHgtPmRlZmVyX2xpc3QsCiAJCQkJCQlz
dHJ1Y3QgaW9fZGVmZXJfZW50cnksIGxpc3QpOwogCkBAIC0xNTU5LDE5ICsxNTIzLDE2IEBA
IHN0YXRpYyB2b2lkIF9faW9fcXVldWVfZGVmZXJyZWQoc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHgpCiAJCWxpc3RfZGVsX2luaXQoJmRlLT5saXN0KTsKIAkJaW9fcmVxX3Rhc2tfcXVldWUo
ZGUtPnJlcSk7CiAJCWtmcmVlKGRlKTsKLQl9IHdoaWxlICghbGlzdF9lbXB0eSgmY3R4LT5k
ZWZlcl9saXN0KSk7CisJfQogfQogCiBzdGF0aWMgdm9pZCBpb19mbHVzaF90aW1lb3V0cyhz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKKwlfX211c3RfaG9sZCgmY3R4LT5jb21wbGV0aW9u
X2xvY2spCiB7CisJdTMyIHNlcSA9IGN0eC0+Y2FjaGVkX2NxX3RhaWwgLSBhdG9taWNfcmVh
ZCgmY3R4LT5jcV90aW1lb3V0cyk7CiAJc3RydWN0IGlvX2tpb2NiICpyZXEsICp0bXA7Ci0J
dTMyIHNlcTsKLQotCWlmIChsaXN0X2VtcHR5KCZjdHgtPnRpbWVvdXRfbGlzdCkpCi0JCXJl
dHVybjsKLQotCXNlcSA9IGN0eC0+Y2FjaGVkX2NxX3RhaWwgLSBhdG9taWNfcmVhZCgmY3R4
LT5jcV90aW1lb3V0cyk7CiAKKwlzcGluX2xvY2tfaXJxKCZjdHgtPnRpbWVvdXRfbG9jayk7
CiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJlcSwgdG1wLCAmY3R4LT50aW1lb3V0X2xp
c3QsIHRpbWVvdXQubGlzdCkgewogCQl1MzIgZXZlbnRzX25lZWRlZCwgZXZlbnRzX2dvdDsK
IApAQCAtMTU5Miw0NDEgKzE1NTMsNTY0IEBAIHN0YXRpYyB2b2lkIGlvX2ZsdXNoX3RpbWVv
dXRzKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogCiAJCWlvX2tpbGxfdGltZW91dChyZXEs
IDApOwogCX0KLQogCWN0eC0+Y3FfbGFzdF90bV9mbHVzaCA9IHNlcTsKKwlzcGluX3VubG9j
a19pcnEoJmN0eC0+dGltZW91dF9sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgaW9fY29tbWl0
X2NxcmluZyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3N0YXRpYyB2b2lkIF9faW9fY29t
bWl0X2NxcmluZ19mbHVzaChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKLQlpb19mbHVz
aF90aW1lb3V0cyhjdHgpOwotCV9faW9fY29tbWl0X2NxcmluZyhjdHgpOworCWlmIChjdHgt
Pm9mZl90aW1lb3V0X3VzZWQpCisJCWlvX2ZsdXNoX3RpbWVvdXRzKGN0eCk7CisJaWYgKGN0
eC0+ZHJhaW5fYWN0aXZlKQorCQlpb19xdWV1ZV9kZWZlcnJlZChjdHgpOworfQogCi0JaWYg
KHVubGlrZWx5KCFsaXN0X2VtcHR5KCZjdHgtPmRlZmVyX2xpc3QpKSkKLQkJX19pb19xdWV1
ZV9kZWZlcnJlZChjdHgpOworc3RhdGljIGlubGluZSB2b2lkIGlvX2NvbW1pdF9jcXJpbmco
c3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCit7CisJaWYgKHVubGlrZWx5KGN0eC0+b2ZmX3Rp
bWVvdXRfdXNlZCB8fCBjdHgtPmRyYWluX2FjdGl2ZSkpCisJCV9faW9fY29tbWl0X2Nxcmlu
Z19mbHVzaChjdHgpOworCS8qIG9yZGVyIGNxZSBzdG9yZXMgd2l0aCByaW5nIHVwZGF0ZSAq
LworCXNtcF9zdG9yZV9yZWxlYXNlKCZjdHgtPnJpbmdzLT5jcS50YWlsLCBjdHgtPmNhY2hl
ZF9jcV90YWlsKTsKIH0KIAogc3RhdGljIGlubGluZSBib29sIGlvX3NxcmluZ19mdWxsKHN0
cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewogCXN0cnVjdCBpb19yaW5ncyAqciA9IGN0eC0+
cmluZ3M7CiAKLQlyZXR1cm4gUkVBRF9PTkNFKHItPnNxLnRhaWwpIC0gY3R4LT5jYWNoZWRf
c3FfaGVhZCA9PSByLT5zcV9yaW5nX2VudHJpZXM7CisJcmV0dXJuIFJFQURfT05DRShyLT5z
cS50YWlsKSAtIGN0eC0+Y2FjaGVkX3NxX2hlYWQgPT0gY3R4LT5zcV9lbnRyaWVzOwogfQog
Ci1zdGF0aWMgc3RydWN0IGlvX3VyaW5nX2NxZSAqaW9fZ2V0X2NxcmluZyhzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCkKK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgaW50IF9faW9fY3FyaW5n
X2V2ZW50cyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3sKKwlyZXR1cm4gY3R4LT5jYWNo
ZWRfY3FfdGFpbCAtIFJFQURfT05DRShjdHgtPnJpbmdzLT5jcS5oZWFkKTsKK30KKworc3Rh
dGljIGlubGluZSBzdHJ1Y3QgaW9fdXJpbmdfY3FlICppb19nZXRfY3FlKHN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4KQogewogCXN0cnVjdCBpb19yaW5ncyAqcmluZ3MgPSBjdHgtPnJpbmdz
OwotCXVuc2lnbmVkIHRhaWw7CisJdW5zaWduZWQgdGFpbCwgbWFzayA9IGN0eC0+Y3FfZW50
cmllcyAtIDE7CiAKLQl0YWlsID0gY3R4LT5jYWNoZWRfY3FfdGFpbDsKIAkvKgogCSAqIHdy
aXRlcyB0byB0aGUgY3EgZW50cnkgbmVlZCB0byBjb21lIGFmdGVyIHJlYWRpbmcgaGVhZDsg
dGhlCiAJICogY29udHJvbCBkZXBlbmRlbmN5IGlzIGVub3VnaCBhcyB3ZSdyZSB1c2luZyBX
UklURV9PTkNFIHRvCiAJICogZmlsbCB0aGUgY3EgZW50cnkKIAkgKi8KLQlpZiAodGFpbCAt
IFJFQURfT05DRShyaW5ncy0+Y3EuaGVhZCkgPT0gcmluZ3MtPmNxX3JpbmdfZW50cmllcykK
KwlpZiAoX19pb19jcXJpbmdfZXZlbnRzKGN0eCkgPT0gY3R4LT5jcV9lbnRyaWVzKQogCQly
ZXR1cm4gTlVMTDsKIAotCWN0eC0+Y2FjaGVkX2NxX3RhaWwrKzsKLQlyZXR1cm4gJnJpbmdz
LT5jcWVzW3RhaWwgJiBjdHgtPmNxX21hc2tdOworCXRhaWwgPSBjdHgtPmNhY2hlZF9jcV90
YWlsKys7CisJcmV0dXJuICZyaW5ncy0+Y3Flc1t0YWlsICYgbWFza107CiB9CiAKIHN0YXRp
YyBpbmxpbmUgYm9vbCBpb19zaG91bGRfdHJpZ2dlcl9ldmZkKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4KQogewotCWlmICghY3R4LT5jcV9ldl9mZCkKKwlpZiAobGlrZWx5KCFjdHgtPmNx
X2V2X2ZkKSkKIAkJcmV0dXJuIGZhbHNlOwogCWlmIChSRUFEX09OQ0UoY3R4LT5yaW5ncy0+
Y3FfZmxhZ3MpICYgSU9SSU5HX0NRX0VWRU5URkRfRElTQUJMRUQpCiAJCXJldHVybiBmYWxz
ZTsKLQlpZiAoIWN0eC0+ZXZlbnRmZF9hc3luYykKLQkJcmV0dXJuIHRydWU7Ci0JcmV0dXJu
IGlvX3dxX2N1cnJlbnRfaXNfd29ya2VyKCk7CisJcmV0dXJuICFjdHgtPmV2ZW50ZmRfYXN5
bmMgfHwgaW9fd3FfY3VycmVudF9pc193b3JrZXIoKTsKIH0KIAorLyoKKyAqIFRoaXMgc2hv
dWxkIG9ubHkgZ2V0IGNhbGxlZCB3aGVuIGF0IGxlYXN0IG9uZSBldmVudCBoYXMgYmVlbiBw
b3N0ZWQuCisgKiBTb21lIGFwcGxpY2F0aW9ucyByZWx5IG9uIHRoZSBldmVudGZkIG5vdGlm
aWNhdGlvbiBjb3VudCBvbmx5IGNoYW5naW5nCisgKiBJRkYgYSBuZXcgQ1FFIGhhcyBiZWVu
IGFkZGVkIHRvIHRoZSBDUSByaW5nLiBUaGVyZSdzIG5vIGRlcGVkZW5jeSBvbgorICogMTox
IHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGhvdyBtYW55IHRpbWVzIHRoaXMgZnVuY3Rpb24gaXMg
Y2FsbGVkIChhbmQKKyAqIGhlbmNlIHRoZSBldmVudGZkIGNvdW50KSBhbmQgbnVtYmVyIG9m
IENRRXMgcG9zdGVkIHRvIHRoZSBDUSByaW5nLgorICovCiBzdGF0aWMgdm9pZCBpb19jcXJp
bmdfZXZfcG9zdGVkKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewotCWlmICh3cV9oYXNf
c2xlZXBlcigmY3R4LT5jcV93YWl0KSkgewotCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJmN0
eC0+Y3Ffd2FpdCk7Ci0JCWtpbGxfZmFzeW5jKCZjdHgtPmNxX2Zhc3luYywgU0lHSU8sIFBP
TExfSU4pOwotCX0KLQlpZiAod2FpdHF1ZXVlX2FjdGl2ZSgmY3R4LT53YWl0KSkKLQkJd2Fr
ZV91cCgmY3R4LT53YWl0KTsKKwkvKgorCSAqIHdha2VfdXBfYWxsKCkgbWF5IHNlZW0gZXhj
ZXNzaXZlLCBidXQgaW9fd2FrZV9mdW5jdGlvbigpIGFuZAorCSAqIGlvX3Nob3VsZF93YWtl
KCkgaGFuZGxlIHRoZSB0ZXJtaW5hdGlvbiBvZiB0aGUgbG9vcCBhbmQgb25seQorCSAqIHdh
a2UgYXMgbWFueSB3YWl0ZXJzIGFzIHdlIG5lZWQgdG8uCisJICovCisJaWYgKHdxX2hhc19z
bGVlcGVyKCZjdHgtPmNxX3dhaXQpKQorCQl3YWtlX3VwX2FsbCgmY3R4LT5jcV93YWl0KTsK
IAlpZiAoY3R4LT5zcV9kYXRhICYmIHdhaXRxdWV1ZV9hY3RpdmUoJmN0eC0+c3FfZGF0YS0+
d2FpdCkpCiAJCXdha2VfdXAoJmN0eC0+c3FfZGF0YS0+d2FpdCk7CiAJaWYgKGlvX3Nob3Vs
ZF90cmlnZ2VyX2V2ZmQoY3R4KSkKIAkJZXZlbnRmZF9zaWduYWwoY3R4LT5jcV9ldl9mZCwg
MSk7CisJaWYgKHdhaXRxdWV1ZV9hY3RpdmUoJmN0eC0+cG9sbF93YWl0KSkKKwkJd2FrZV91
cF9pbnRlcnJ1cHRpYmxlKCZjdHgtPnBvbGxfd2FpdCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlv
X2NxcmluZ19tYXJrX292ZXJmbG93KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQorc3RhdGlj
IHZvaWQgaW9fY3FyaW5nX2V2X3Bvc3RlZF9pb3BvbGwoc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHgpCiB7Ci0JaWYgKGxpc3RfZW1wdHkoJmN0eC0+Y3Ffb3ZlcmZsb3dfbGlzdCkpIHsKLQkJ
Y2xlYXJfYml0KDAsICZjdHgtPnNxX2NoZWNrX292ZXJmbG93KTsKLQkJY2xlYXJfYml0KDAs
ICZjdHgtPmNxX2NoZWNrX292ZXJmbG93KTsKLQkJY3R4LT5yaW5ncy0+c3FfZmxhZ3MgJj0g
fklPUklOR19TUV9DUV9PVkVSRkxPVzsKKwkvKiBzZWUgd2FpdHF1ZXVlX2FjdGl2ZSgpIGNv
bW1lbnQgKi8KKwlzbXBfbWIoKTsKKworCWlmIChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQ
X1NRUE9MTCkgeworCQlpZiAod2FpdHF1ZXVlX2FjdGl2ZSgmY3R4LT5jcV93YWl0KSkKKwkJ
CXdha2VfdXBfYWxsKCZjdHgtPmNxX3dhaXQpOwogCX0KKwlpZiAoaW9fc2hvdWxkX3RyaWdn
ZXJfZXZmZChjdHgpKQorCQlldmVudGZkX3NpZ25hbChjdHgtPmNxX2V2X2ZkLCAxKTsKKwlp
ZiAod2FpdHF1ZXVlX2FjdGl2ZSgmY3R4LT5wb2xsX3dhaXQpKQorCQl3YWtlX3VwX2ludGVy
cnVwdGlibGUoJmN0eC0+cG9sbF93YWl0KTsKIH0KIAogLyogUmV0dXJucyB0cnVlIGlmIHRo
ZXJlIGFyZSBubyBiYWNrbG9nZ2VkIGVudHJpZXMgYWZ0ZXIgdGhlIGZsdXNoICovCi1zdGF0
aWMgYm9vbCBfX2lvX2NxcmluZ19vdmVyZmxvd19mbHVzaChzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCwgYm9vbCBmb3JjZSwKLQkJCQkgICAgICAgc3RydWN0IHRhc2tfc3RydWN0ICp0c2ss
Ci0JCQkJICAgICAgIHN0cnVjdCBmaWxlc19zdHJ1Y3QgKmZpbGVzKQorc3RhdGljIGJvb2wg
X19pb19jcXJpbmdfb3ZlcmZsb3dfZmx1c2goc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIGJv
b2wgZm9yY2UpCiB7Ci0Jc3RydWN0IGlvX3JpbmdzICpyaW5ncyA9IGN0eC0+cmluZ3M7Ci0J
c3RydWN0IGlvX2tpb2NiICpyZXEsICp0bXA7Ci0Jc3RydWN0IGlvX3VyaW5nX2NxZSAqY3Fl
OwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JTElTVF9IRUFEKGxpc3QpOwotCi0JaWYgKCFm
b3JjZSkgewotCQlpZiAoKGN0eC0+Y2FjaGVkX2NxX3RhaWwgLSBSRUFEX09OQ0UocmluZ3Mt
PmNxLmhlYWQpID09Ci0JCSAgICByaW5ncy0+Y3FfcmluZ19lbnRyaWVzKSkKLQkJCXJldHVy
biBmYWxzZTsKLQl9CisJYm9vbCBhbGxfZmx1c2hlZCwgcG9zdGVkOwogCi0Jc3Bpbl9sb2Nr
X2lycXNhdmUoJmN0eC0+Y29tcGxldGlvbl9sb2NrLCBmbGFncyk7CisJaWYgKCFmb3JjZSAm
JiBfX2lvX2NxcmluZ19ldmVudHMoY3R4KSA9PSBjdHgtPmNxX2VudHJpZXMpCisJCXJldHVy
biBmYWxzZTsKIAotCWNxZSA9IE5VTEw7Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJl
cSwgdG1wLCAmY3R4LT5jcV9vdmVyZmxvd19saXN0LCBjb21wbC5saXN0KSB7Ci0JCWlmICgh
aW9fbWF0Y2hfdGFzayhyZXEsIHRzaywgZmlsZXMpKQotCQkJY29udGludWU7CisJcG9zdGVk
ID0gZmFsc2U7CisJc3Bpbl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJd2hpbGUg
KCFsaXN0X2VtcHR5KCZjdHgtPmNxX292ZXJmbG93X2xpc3QpKSB7CisJCXN0cnVjdCBpb191
cmluZ19jcWUgKmNxZSA9IGlvX2dldF9jcWUoY3R4KTsKKwkJc3RydWN0IGlvX292ZXJmbG93
X2NxZSAqb2NxZTsKIAotCQljcWUgPSBpb19nZXRfY3FyaW5nKGN0eCk7CiAJCWlmICghY3Fl
ICYmICFmb3JjZSkKIAkJCWJyZWFrOworCQlvY3FlID0gbGlzdF9maXJzdF9lbnRyeSgmY3R4
LT5jcV9vdmVyZmxvd19saXN0LAorCQkJCQlzdHJ1Y3QgaW9fb3ZlcmZsb3dfY3FlLCBsaXN0
KTsKKwkJaWYgKGNxZSkKKwkJCW1lbWNweShjcWUsICZvY3FlLT5jcWUsIHNpemVvZigqY3Fl
KSk7CisJCWVsc2UKKwkJCWlvX2FjY291bnRfY3Ffb3ZlcmZsb3coY3R4KTsKIAotCQlsaXN0
X21vdmUoJnJlcS0+Y29tcGwubGlzdCwgJmxpc3QpOwotCQlpZiAoY3FlKSB7Ci0JCQlXUklU
RV9PTkNFKGNxZS0+dXNlcl9kYXRhLCByZXEtPnVzZXJfZGF0YSk7Ci0JCQlXUklURV9PTkNF
KGNxZS0+cmVzLCByZXEtPnJlc3VsdCk7Ci0JCQlXUklURV9PTkNFKGNxZS0+ZmxhZ3MsIHJl
cS0+Y29tcGwuY2ZsYWdzKTsKLQkJfSBlbHNlIHsKLQkJCWN0eC0+Y2FjaGVkX2NxX292ZXJm
bG93Kys7Ci0JCQlXUklURV9PTkNFKGN0eC0+cmluZ3MtPmNxX292ZXJmbG93LAotCQkJCSAg
IGN0eC0+Y2FjaGVkX2NxX292ZXJmbG93KTsKLQkJfQorCQlwb3N0ZWQgPSB0cnVlOworCQls
aXN0X2RlbCgmb2NxZS0+bGlzdCk7CisJCWtmcmVlKG9jcWUpOwogCX0KIAotCWlvX2NvbW1p
dF9jcXJpbmcoY3R4KTsKLQlpb19jcXJpbmdfbWFya19vdmVyZmxvdyhjdHgpOwotCi0Jc3Bp
bl91bmxvY2tfaXJxcmVzdG9yZSgmY3R4LT5jb21wbGV0aW9uX2xvY2ssIGZsYWdzKTsKLQlp
b19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7Ci0KLQl3aGlsZSAoIWxpc3RfZW1wdHkoJmxpc3Qp
KSB7Ci0JCXJlcSA9IGxpc3RfZmlyc3RfZW50cnkoJmxpc3QsIHN0cnVjdCBpb19raW9jYiwg
Y29tcGwubGlzdCk7Ci0JCWxpc3RfZGVsKCZyZXEtPmNvbXBsLmxpc3QpOwotCQlpb19wdXRf
cmVxKHJlcSk7CisJYWxsX2ZsdXNoZWQgPSBsaXN0X2VtcHR5KCZjdHgtPmNxX292ZXJmbG93
X2xpc3QpOworCWlmIChhbGxfZmx1c2hlZCkgeworCQljbGVhcl9iaXQoMCwgJmN0eC0+Y2hl
Y2tfY3Ffb3ZlcmZsb3cpOworCQlXUklURV9PTkNFKGN0eC0+cmluZ3MtPnNxX2ZsYWdzLAor
CQkJICAgY3R4LT5yaW5ncy0+c3FfZmxhZ3MgJiB+SU9SSU5HX1NRX0NRX09WRVJGTE9XKTsK
IAl9CiAKLQlyZXR1cm4gY3FlICE9IE5VTEw7CisJaWYgKHBvc3RlZCkKKwkJaW9fY29tbWl0
X2NxcmluZyhjdHgpOworCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJ
aWYgKHBvc3RlZCkKKwkJaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOworCXJldHVybiBhbGxf
Zmx1c2hlZDsKIH0KIAotc3RhdGljIHZvaWQgaW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKHN0
cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBib29sIGZvcmNlLAotCQkJCSAgICAgc3RydWN0IHRh
c2tfc3RydWN0ICp0c2ssCi0JCQkJICAgICBzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcykK
K3N0YXRpYyBib29sIGlvX2NxcmluZ19vdmVyZmxvd19mbHVzaChzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCkKIHsKLQlpZiAodGVzdF9iaXQoMCwgJmN0eC0+Y3FfY2hlY2tfb3ZlcmZsb3cp
KSB7CisJYm9vbCByZXQgPSB0cnVlOworCisJaWYgKHRlc3RfYml0KDAsICZjdHgtPmNoZWNr
X2NxX292ZXJmbG93KSkgewogCQkvKiBpb3BvbGwgc3luY3MgYWdhaW5zdCB1cmluZ19sb2Nr
LCBub3QgY29tcGxldGlvbl9sb2NrICovCiAJCWlmIChjdHgtPmZsYWdzICYgSU9SSU5HX1NF
VFVQX0lPUE9MTCkKIAkJCW11dGV4X2xvY2soJmN0eC0+dXJpbmdfbG9jayk7Ci0JCV9faW9f
Y3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCwgZm9yY2UsIHRzaywgZmlsZXMpOworCQlyZXQg
PSBfX2lvX2NxcmluZ19vdmVyZmxvd19mbHVzaChjdHgsIGZhbHNlKTsKIAkJaWYgKGN0eC0+
ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKQogCQkJbXV0ZXhfdW5sb2NrKCZjdHgtPnVy
aW5nX2xvY2spOwogCX0KKworCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIF9faW9f
Y3FyaW5nX2ZpbGxfZXZlbnQoc3RydWN0IGlvX2tpb2NiICpyZXEsIGxvbmcgcmVzLAotCQkJ
CSAgIHVuc2lnbmVkIGludCBjZmxhZ3MpCisvKiBtdXN0IHRvIGJlIGNhbGxlZCBzb21ld2hh
dCBzaG9ydGx5IGFmdGVyIHB1dHRpbmcgYSByZXF1ZXN0ICovCitzdGF0aWMgaW5saW5lIHZv
aWQgaW9fcHV0X3Rhc2soc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrLCBpbnQgbnIpCiB7Ci0J
c3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsKLQlzdHJ1Y3QgaW9fdXJpbmdf
Y3FlICpjcWU7Ci0KLQl0cmFjZV9pb191cmluZ19jb21wbGV0ZShjdHgsIHJlcS0+dXNlcl9k
YXRhLCByZXMpOworCXN0cnVjdCBpb191cmluZ190YXNrICp0Y3R4ID0gdGFzay0+aW9fdXJp
bmc7CiAKLQkvKgotCSAqIElmIHdlIGNhbid0IGdldCBhIGNxIGVudHJ5LCB1c2Vyc3BhY2Ug
b3ZlcmZsb3dlZCB0aGUKLQkgKiBzdWJtaXNzaW9uIChieSBxdWl0ZSBhIGxvdCkuIEluY3Jl
bWVudCB0aGUgb3ZlcmZsb3cgY291bnQgaW4KLQkgKiB0aGUgcmluZy4KLQkgKi8KLQljcWUg
PSBpb19nZXRfY3FyaW5nKGN0eCk7Ci0JaWYgKGxpa2VseShjcWUpKSB7Ci0JCVdSSVRFX09O
Q0UoY3FlLT51c2VyX2RhdGEsIHJlcS0+dXNlcl9kYXRhKTsKLQkJV1JJVEVfT05DRShjcWUt
PnJlcywgcmVzKTsKLQkJV1JJVEVfT05DRShjcWUtPmZsYWdzLCBjZmxhZ3MpOwotCX0gZWxz
ZSBpZiAoY3R4LT5jcV9vdmVyZmxvd19mbHVzaGVkIHx8Ci0JCSAgIGF0b21pY19yZWFkKCZy
ZXEtPnRhc2stPmlvX3VyaW5nLT5pbl9pZGxlKSkgewotCQkvKgotCQkgKiBJZiB3ZSdyZSBp
biByaW5nIG92ZXJmbG93IGZsdXNoIG1vZGUsIG9yIGluIHRhc2sgY2FuY2VsIG1vZGUsCi0J
CSAqIHRoZW4gd2UgY2Fubm90IHN0b3JlIHRoZSByZXF1ZXN0IGZvciBsYXRlciBmbHVzaGlu
Zywgd2UgbmVlZAotCQkgKiB0byBkcm9wIGl0IG9uIHRoZSBmbG9vci4KLQkJICovCi0JCWN0
eC0+Y2FjaGVkX2NxX292ZXJmbG93Kys7Ci0JCVdSSVRFX09OQ0UoY3R4LT5yaW5ncy0+Y3Ff
b3ZlcmZsb3csIGN0eC0+Y2FjaGVkX2NxX292ZXJmbG93KTsKKwlpZiAobGlrZWx5KHRhc2sg
PT0gY3VycmVudCkpIHsKKwkJdGN0eC0+Y2FjaGVkX3JlZnMgKz0gbnI7CiAJfSBlbHNlIHsK
LQkJaWYgKGxpc3RfZW1wdHkoJmN0eC0+Y3Ffb3ZlcmZsb3dfbGlzdCkpIHsKLQkJCXNldF9i
aXQoMCwgJmN0eC0+c3FfY2hlY2tfb3ZlcmZsb3cpOwotCQkJc2V0X2JpdCgwLCAmY3R4LT5j
cV9jaGVja19vdmVyZmxvdyk7Ci0JCQljdHgtPnJpbmdzLT5zcV9mbGFncyB8PSBJT1JJTkdf
U1FfQ1FfT1ZFUkZMT1c7Ci0JCX0KLQkJaW9fY2xlYW5fb3AocmVxKTsKLQkJcmVxLT5yZXN1
bHQgPSByZXM7Ci0JCXJlcS0+Y29tcGwuY2ZsYWdzID0gY2ZsYWdzOwotCQlyZWZjb3VudF9p
bmMoJnJlcS0+cmVmcyk7Ci0JCWxpc3RfYWRkX3RhaWwoJnJlcS0+Y29tcGwubGlzdCwgJmN0
eC0+Y3Ffb3ZlcmZsb3dfbGlzdCk7CisJCXBlcmNwdV9jb3VudGVyX3N1YigmdGN0eC0+aW5m
bGlnaHQsIG5yKTsKKwkJaWYgKHVubGlrZWx5KGF0b21pY19yZWFkKCZ0Y3R4LT5pbl9pZGxl
KSkpCisJCQl3YWtlX3VwKCZ0Y3R4LT53YWl0KTsKKwkJcHV0X3Rhc2tfc3RydWN0X21hbnko
dGFzaywgbnIpOwogCX0KIH0KIAotc3RhdGljIHZvaWQgaW9fY3FyaW5nX2ZpbGxfZXZlbnQo
c3RydWN0IGlvX2tpb2NiICpyZXEsIGxvbmcgcmVzKQorc3RhdGljIHZvaWQgaW9fdGFza19y
ZWZzX3JlZmlsbChzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCkKIHsKLQlfX2lvX2Nxcmlu
Z19maWxsX2V2ZW50KHJlcSwgcmVzLCAwKTsKKwl1bnNpZ25lZCBpbnQgcmVmaWxsID0gLXRj
dHgtPmNhY2hlZF9yZWZzICsgSU9fVENUWF9SRUZTX0NBQ0hFX05SOworCisJcGVyY3B1X2Nv
dW50ZXJfYWRkKCZ0Y3R4LT5pbmZsaWdodCwgcmVmaWxsKTsKKwlyZWZjb3VudF9hZGQocmVm
aWxsLCAmY3VycmVudC0+dXNhZ2UpOworCXRjdHgtPmNhY2hlZF9yZWZzICs9IHJlZmlsbDsK
IH0KIAotc3RhdGljIHZvaWQgaW9fY3FyaW5nX2FkZF9ldmVudChzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgbG9uZyByZXMsIGxvbmcgY2ZsYWdzKQorc3RhdGljIGlubGluZSB2b2lkIGlvX2dl
dF90YXNrX3JlZnMoaW50IG5yKQogewotCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVx
LT5jdHg7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKLQotCXNwaW5fbG9ja19pcnFzYXZlKCZj
dHgtPmNvbXBsZXRpb25fbG9jaywgZmxhZ3MpOwotCV9faW9fY3FyaW5nX2ZpbGxfZXZlbnQo
cmVxLCByZXMsIGNmbGFncyk7Ci0JaW9fY29tbWl0X2NxcmluZyhjdHgpOwotCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmN0eC0+Y29tcGxldGlvbl9sb2NrLCBmbGFncyk7CisJc3RydWN0
IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSBjdXJyZW50LT5pb191cmluZzsKIAotCWlvX2Nxcmlu
Z19ldl9wb3N0ZWQoY3R4KTsKKwl0Y3R4LT5jYWNoZWRfcmVmcyAtPSBucjsKKwlpZiAodW5s
aWtlbHkodGN0eC0+Y2FjaGVkX3JlZnMgPCAwKSkKKwkJaW9fdGFza19yZWZzX3JlZmlsbCh0
Y3R4KTsKIH0KIAotc3RhdGljIHZvaWQgaW9fc3VibWl0X2ZsdXNoX2NvbXBsZXRpb25zKHN0
cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBfX2NvbGQgdm9pZCBpb191cmluZ19k
cm9wX3RjdHhfcmVmcyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCiB7Ci0Jc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHggPSBjcy0+Y3R4OworCXN0cnVjdCBpb191cmluZ190YXNrICp0Y3R4
ID0gdGFzay0+aW9fdXJpbmc7CisJdW5zaWduZWQgaW50IHJlZnMgPSB0Y3R4LT5jYWNoZWRf
cmVmczsKIAotCXNwaW5fbG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQl3aGls
ZSAoIWxpc3RfZW1wdHkoJmNzLT5saXN0KSkgewotCQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcTsK
KwlpZiAocmVmcykgeworCQl0Y3R4LT5jYWNoZWRfcmVmcyA9IDA7CisJCXBlcmNwdV9jb3Vu
dGVyX3N1YigmdGN0eC0+aW5mbGlnaHQsIHJlZnMpOworCQlwdXRfdGFza19zdHJ1Y3RfbWFu
eSh0YXNrLCByZWZzKTsKKwl9Cit9CiAKLQkJcmVxID0gbGlzdF9maXJzdF9lbnRyeSgmY3Mt
Pmxpc3QsIHN0cnVjdCBpb19raW9jYiwgY29tcGwubGlzdCk7Ci0JCWxpc3RfZGVsKCZyZXEt
PmNvbXBsLmxpc3QpOwotCQlfX2lvX2NxcmluZ19maWxsX2V2ZW50KHJlcSwgcmVxLT5yZXN1
bHQsIHJlcS0+Y29tcGwuY2ZsYWdzKTsKK3N0YXRpYyBib29sIGlvX2NxcmluZ19ldmVudF9v
dmVyZmxvdyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdTY0IHVzZXJfZGF0YSwKKwkJCQkg
ICAgIHMzMiByZXMsIHUzMiBjZmxhZ3MpCit7CisJc3RydWN0IGlvX292ZXJmbG93X2NxZSAq
b2NxZTsKIAorCW9jcWUgPSBrbWFsbG9jKHNpemVvZigqb2NxZSksIEdGUF9BVE9NSUMgfCBf
X0dGUF9BQ0NPVU5UKTsKKwlpZiAoIW9jcWUpIHsKIAkJLyoKLQkJICogaW9fZnJlZV9yZXEo
KSBkb2Vzbid0IGNhcmUgYWJvdXQgY29tcGxldGlvbl9sb2NrIHVubGVzcyBvbmUKLQkJICog
b2YgdGhlc2UgZmxhZ3MgaXMgc2V0LiBSRVFfRl9XT1JLX0lOSVRJQUxJWkVEIGlzIGluIHRo
ZSBsaXN0Ci0JCSAqIGJlY2F1c2Ugb2YgYSBwb3RlbnRpYWwgZGVhZGxvY2sgd2l0aCByZXEt
PndvcmsuZnMtPmxvY2sKKwkJICogSWYgd2UncmUgaW4gcmluZyBvdmVyZmxvdyBmbHVzaCBt
b2RlLCBvciBpbiB0YXNrIGNhbmNlbCBtb2RlLAorCQkgKiBvciBjYW5ub3QgYWxsb2NhdGUg
YW4gb3ZlcmZsb3cgZW50cnksIHRoZW4gd2UgbmVlZCB0byBkcm9wIGl0CisJCSAqIG9uIHRo
ZSBmbG9vci4KIAkJICovCi0JCWlmIChyZXEtPmZsYWdzICYgKFJFUV9GX0ZBSUxfTElOS3xS
RVFfRl9MSU5LX1RJTUVPVVQKLQkJCQkgfFJFUV9GX1dPUktfSU5JVElBTElaRUQpKSB7Ci0J
CQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQkJCWlvX3B1dF9y
ZXEocmVxKTsKLQkJCXNwaW5fbG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQkJ
fSBlbHNlIHsKLQkJCWlvX3B1dF9yZXEocmVxKTsKLQkJfQorCQlpb19hY2NvdW50X2NxX292
ZXJmbG93KGN0eCk7CisJCXJldHVybiBmYWxzZTsKIAl9Ci0JaW9fY29tbWl0X2NxcmluZyhj
dHgpOwotCXNwaW5fdW5sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCWlmIChs
aXN0X2VtcHR5KCZjdHgtPmNxX292ZXJmbG93X2xpc3QpKSB7CisJCXNldF9iaXQoMCwgJmN0
eC0+Y2hlY2tfY3Ffb3ZlcmZsb3cpOworCQlXUklURV9PTkNFKGN0eC0+cmluZ3MtPnNxX2Zs
YWdzLAorCQkJICAgY3R4LT5yaW5ncy0+c3FfZmxhZ3MgfCBJT1JJTkdfU1FfQ1FfT1ZFUkZM
T1cpOwogCi0JaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOwotCWNzLT5uciA9IDA7CisJfQor
CW9jcWUtPmNxZS51c2VyX2RhdGEgPSB1c2VyX2RhdGE7CisJb2NxZS0+Y3FlLnJlcyA9IHJl
czsKKwlvY3FlLT5jcWUuZmxhZ3MgPSBjZmxhZ3M7CisJbGlzdF9hZGRfdGFpbCgmb2NxZS0+
bGlzdCwgJmN0eC0+Y3Ffb3ZlcmZsb3dfbGlzdCk7CisJcmV0dXJuIHRydWU7CiB9CiAKLXN0
YXRpYyB2b2lkIF9faW9fcmVxX2NvbXBsZXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBsb25n
IHJlcywgdW5zaWduZWQgY2ZsYWdzLAotCQkJICAgICAgc3RydWN0IGlvX2NvbXBfc3RhdGUg
KmNzKQorc3RhdGljIGlubGluZSBib29sIF9faW9fZmlsbF9jcWUoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHU2NCB1c2VyX2RhdGEsCisJCQkJIHMzMiByZXMsIHUzMiBjZmxhZ3MpCiB7
Ci0JaWYgKCFjcykgewotCQlpb19jcXJpbmdfYWRkX2V2ZW50KHJlcSwgcmVzLCBjZmxhZ3Mp
OwotCQlpb19wdXRfcmVxKHJlcSk7Ci0JfSBlbHNlIHsKLQkJaW9fY2xlYW5fb3AocmVxKTsK
LQkJcmVxLT5yZXN1bHQgPSByZXM7Ci0JCXJlcS0+Y29tcGwuY2ZsYWdzID0gY2ZsYWdzOwot
CQlsaXN0X2FkZF90YWlsKCZyZXEtPmNvbXBsLmxpc3QsICZjcy0+bGlzdCk7Ci0JCWlmICgr
K2NzLT5uciA+PSAzMikKLQkJCWlvX3N1Ym1pdF9mbHVzaF9jb21wbGV0aW9ucyhjcyk7CisJ
c3RydWN0IGlvX3VyaW5nX2NxZSAqY3FlOworCisJdHJhY2VfaW9fdXJpbmdfY29tcGxldGUo
Y3R4LCB1c2VyX2RhdGEsIHJlcywgY2ZsYWdzKTsKKworCS8qCisJICogSWYgd2UgY2FuJ3Qg
Z2V0IGEgY3EgZW50cnksIHVzZXJzcGFjZSBvdmVyZmxvd2VkIHRoZQorCSAqIHN1Ym1pc3Np
b24gKGJ5IHF1aXRlIGEgbG90KS4gSW5jcmVtZW50IHRoZSBvdmVyZmxvdyBjb3VudCBpbgor
CSAqIHRoZSByaW5nLgorCSAqLworCWNxZSA9IGlvX2dldF9jcWUoY3R4KTsKKwlpZiAobGlr
ZWx5KGNxZSkpIHsKKwkJV1JJVEVfT05DRShjcWUtPnVzZXJfZGF0YSwgdXNlcl9kYXRhKTsK
KwkJV1JJVEVfT05DRShjcWUtPnJlcywgcmVzKTsKKwkJV1JJVEVfT05DRShjcWUtPmZsYWdz
LCBjZmxhZ3MpOworCQlyZXR1cm4gdHJ1ZTsKIAl9CisJcmV0dXJuIGlvX2NxcmluZ19ldmVu
dF9vdmVyZmxvdyhjdHgsIHVzZXJfZGF0YSwgcmVzLCBjZmxhZ3MpOwogfQogCi1zdGF0aWMg
dm9pZCBpb19yZXFfY29tcGxldGUoc3RydWN0IGlvX2tpb2NiICpyZXEsIGxvbmcgcmVzKQor
c3RhdGljIG5vaW5saW5lIHZvaWQgaW9fZmlsbF9jcWVfcmVxKHN0cnVjdCBpb19raW9jYiAq
cmVxLCBzMzIgcmVzLCB1MzIgY2ZsYWdzKQogewotCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwg
cmVzLCAwLCBOVUxMKTsKKwlfX2lvX2ZpbGxfY3FlKHJlcS0+Y3R4LCByZXEtPnVzZXJfZGF0
YSwgcmVzLCBjZmxhZ3MpOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgaW9faXNfZmFsbGJh
Y2tfcmVxKHN0cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIG5vaW5saW5lIGJvb2wgaW9f
ZmlsbF9jcWVfYXV4KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB1NjQgdXNlcl9kYXRhLAor
CQkJCSAgICAgczMyIHJlcywgdTMyIGNmbGFncykKIHsKLQlyZXR1cm4gcmVxID09IChzdHJ1
Y3QgaW9fa2lvY2IgKikKLQkJCSgodW5zaWduZWQgbG9uZykgcmVxLT5jdHgtPmZhbGxiYWNr
X3JlcSAmIH4xVUwpOworCWN0eC0+Y3FfZXh0cmErKzsKKwlyZXR1cm4gX19pb19maWxsX2Nx
ZShjdHgsIHVzZXJfZGF0YSwgcmVzLCBjZmxhZ3MpOwogfQogCi1zdGF0aWMgc3RydWN0IGlv
X2tpb2NiICppb19nZXRfZmFsbGJhY2tfcmVxKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQor
c3RhdGljIHZvaWQgaW9fcmVxX2NvbXBsZXRlX3Bvc3Qoc3RydWN0IGlvX2tpb2NiICpyZXEs
IHMzMiByZXMsCisJCQkJIHUzMiBjZmxhZ3MpCiB7Ci0Jc3RydWN0IGlvX2tpb2NiICpyZXE7
Ci0KLQlyZXEgPSBjdHgtPmZhbGxiYWNrX3JlcTsKLQlpZiAoIXRlc3RfYW5kX3NldF9iaXRf
bG9jaygwLCAodW5zaWduZWQgbG9uZyAqKSAmY3R4LT5mYWxsYmFja19yZXEpKQotCQlyZXR1
cm4gcmVxOworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CiAKLQlyZXR1
cm4gTlVMTDsKLX0KKwlzcGluX2xvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlfX2lv
X2ZpbGxfY3FlKGN0eCwgcmVxLT51c2VyX2RhdGEsIHJlcywgY2ZsYWdzKTsKKwkvKgorCSAq
IElmIHdlJ3JlIHRoZSBsYXN0IHJlZmVyZW5jZSB0byB0aGlzIHJlcXVlc3QsIGFkZCB0byBv
dXIgbG9ja2VkCisJICogZnJlZV9saXN0IGNhY2hlLgorCSAqLworCWlmIChyZXFfcmVmX3B1
dF9hbmRfdGVzdChyZXEpKSB7CisJCWlmIChyZXEtPmZsYWdzICYgKFJFUV9GX0xJTksgfCBS
RVFfRl9IQVJETElOSykpIHsKKwkJCWlmIChyZXEtPmZsYWdzICYgSU9fRElTQVJNX01BU0sp
CisJCQkJaW9fZGlzYXJtX25leHQocmVxKTsKKwkJCWlmIChyZXEtPmxpbmspIHsKKwkJCQlp
b19yZXFfdGFza19xdWV1ZShyZXEtPmxpbmspOworCQkJCXJlcS0+bGluayA9IE5VTEw7CisJ
CQl9CisJCX0KKwkJaW9fZGlzbWFudGxlX3JlcShyZXEpOworCQlpb19wdXRfdGFzayhyZXEt
PnRhc2ssIDEpOworCQlsaXN0X2FkZCgmcmVxLT5pbmZsaWdodF9lbnRyeSwgJmN0eC0+bG9j
a2VkX2ZyZWVfbGlzdCk7CisJCWN0eC0+bG9ja2VkX2ZyZWVfbnIrKzsKKwl9IGVsc2Ugewor
CQlpZiAoIXBlcmNwdV9yZWZfdHJ5Z2V0KCZjdHgtPnJlZnMpKQorCQkJcmVxID0gTlVMTDsK
Kwl9CisJaW9fY29tbWl0X2NxcmluZyhjdHgpOworCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBs
ZXRpb25fbG9jayk7CiAKLXN0YXRpYyBzdHJ1Y3QgaW9fa2lvY2IgKmlvX2FsbG9jX3JlcShz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKLQkJCQkgICAgIHN0cnVjdCBpb19zdWJtaXRfc3Rh
dGUgKnN0YXRlKQorCWlmIChyZXEpIHsKKwkJaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOwor
CQlwZXJjcHVfcmVmX3B1dCgmY3R4LT5yZWZzKTsKKwl9Cit9CisKK3N0YXRpYyBpbmxpbmUg
Ym9vbCBpb19yZXFfbmVlZHNfY2xlYW4oc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7Ci0JaWYg
KCFzdGF0ZS0+ZnJlZV9yZXFzKSB7Ci0JCWdmcF90IGdmcCA9IEdGUF9LRVJORUwgfCBfX0dG
UF9OT1dBUk47Ci0JCXNpemVfdCBzejsKLQkJaW50IHJldDsKKwlyZXR1cm4gcmVxLT5mbGFn
cyAmIElPX1JFUV9DTEVBTl9GTEFHUzsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGlvX3Jl
cV9jb21wbGV0ZV9zdGF0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgczMyIHJlcywKKwkJCQkJ
IHUzMiBjZmxhZ3MpCit7CisJaWYgKGlvX3JlcV9uZWVkc19jbGVhbihyZXEpKQorCQlpb19j
bGVhbl9vcChyZXEpOworCXJlcS0+cmVzdWx0ID0gcmVzOworCXJlcS0+Y29tcGwuY2ZsYWdz
ID0gY2ZsYWdzOworCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfQ09NUExFVEVfSU5MSU5FOworfQog
Ci0JCXN6ID0gbWluX3Qoc2l6ZV90LCBzdGF0ZS0+aW9zX2xlZnQsIEFSUkFZX1NJWkUoc3Rh
dGUtPnJlcXMpKTsKLQkJcmV0ID0ga21lbV9jYWNoZV9hbGxvY19idWxrKHJlcV9jYWNoZXAs
IGdmcCwgc3osIHN0YXRlLT5yZXFzKTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBfX2lvX3JlcV9j
b21wbGV0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaXNzdWVfZmxhZ3MsCisJ
CQkJICAgICBzMzIgcmVzLCB1MzIgY2ZsYWdzKQoreworCWlmIChpc3N1ZV9mbGFncyAmIElP
X1VSSU5HX0ZfQ09NUExFVEVfREVGRVIpCisJCWlvX3JlcV9jb21wbGV0ZV9zdGF0ZShyZXEs
IHJlcywgY2ZsYWdzKTsKKwllbHNlCisJCWlvX3JlcV9jb21wbGV0ZV9wb3N0KHJlcSwgcmVz
LCBjZmxhZ3MpOworfQogCi0JCS8qCi0JCSAqIEJ1bGsgYWxsb2MgaXMgYWxsLW9yLW5vdGhp
bmcuIElmIHdlIGZhaWwgdG8gZ2V0IGEgYmF0Y2gsCi0JCSAqIHJldHJ5IHNpbmdsZSBhbGxv
YyB0byBiZSBvbiB0aGUgc2FmZSBzaWRlLgotCQkgKi8KLQkJaWYgKHVubGlrZWx5KHJldCA8
PSAwKSkgewotCQkJc3RhdGUtPnJlcXNbMF0gPSBrbWVtX2NhY2hlX2FsbG9jKHJlcV9jYWNo
ZXAsIGdmcCk7Ci0JCQlpZiAoIXN0YXRlLT5yZXFzWzBdKQotCQkJCWdvdG8gZmFsbGJhY2s7
Ci0JCQlyZXQgPSAxOwotCQl9Ci0JCXN0YXRlLT5mcmVlX3JlcXMgPSByZXQ7CitzdGF0aWMg
aW5saW5lIHZvaWQgaW9fcmVxX2NvbXBsZXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBzMzIg
cmVzKQoreworCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgMCwgcmVzLCAwKTsKK30KKworc3Rh
dGljIHZvaWQgaW9fcmVxX2NvbXBsZXRlX2ZhaWxlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
czMyIHJlcykKK3sKKwlyZXFfc2V0X2ZhaWwocmVxKTsKKwlpb19yZXFfY29tcGxldGVfcG9z
dChyZXEsIHJlcywgMCk7Cit9CisKK3N0YXRpYyB2b2lkIGlvX3JlcV9jb21wbGV0ZV9mYWls
X3N1Ym1pdChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3sKKwkvKgorCSAqIFdlIGRvbid0IHN1
Ym1pdCwgZmFpbCB0aGVtIGFsbCwgZm9yIHRoYXQgcmVwbGFjZSBoYXJkbGlua3Mgd2l0aAor
CSAqIG5vcm1hbCBsaW5rcy4gRXh0cmEgUkVRX0ZfTElOSyBpcyB0b2xlcmF0ZWQuCisJICov
CisJcmVxLT5mbGFncyAmPSB+UkVRX0ZfSEFSRExJTks7CisJcmVxLT5mbGFncyB8PSBSRVFf
Rl9MSU5LOworCWlvX3JlcV9jb21wbGV0ZV9mYWlsZWQocmVxLCByZXEtPnJlc3VsdCk7Cit9
CisKKy8qCisgKiBEb24ndCBpbml0aWFsaXNlIHRoZSBmaWVsZHMgYmVsb3cgb24gZXZlcnkg
YWxsb2NhdGlvbiwgYnV0IGRvIHRoYXQgaW4KKyAqIGFkdmFuY2UgYW5kIGtlZXAgdGhlbSB2
YWxpZCBhY3Jvc3MgYWxsb2NhdGlvbnMuCisgKi8KK3N0YXRpYyB2b2lkIGlvX3ByZWluaXRf
cmVxKHN0cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3sK
KwlyZXEtPmN0eCA9IGN0eDsKKwlyZXEtPmxpbmsgPSBOVUxMOworCXJlcS0+YXN5bmNfZGF0
YSA9IE5VTEw7CisJLyogbm90IG5lY2Vzc2FyeSwgYnV0IHNhZmVyIHRvIHplcm8gKi8KKwly
ZXEtPnJlc3VsdCA9IDA7Cit9CisKK3N0YXRpYyB2b2lkIGlvX2ZsdXNoX2NhY2hlZF9sb2Nr
ZWRfcmVxcyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKKwkJCQkJc3RydWN0IGlvX3N1Ym1p
dF9zdGF0ZSAqc3RhdGUpCit7CisJc3Bpbl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7
CisJbGlzdF9zcGxpY2VfaW5pdCgmY3R4LT5sb2NrZWRfZnJlZV9saXN0LCAmc3RhdGUtPmZy
ZWVfbGlzdCk7CisJY3R4LT5sb2NrZWRfZnJlZV9uciA9IDA7CisJc3Bpbl91bmxvY2soJmN0
eC0+Y29tcGxldGlvbl9sb2NrKTsKK30KKworLyogUmV0dXJucyB0cnVlIElGRiB0aGVyZSBh
cmUgcmVxdWVzdHMgaW4gdGhlIGNhY2hlICovCitzdGF0aWMgYm9vbCBpb19mbHVzaF9jYWNo
ZWRfcmVxcyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3sKKwlzdHJ1Y3QgaW9fc3VibWl0
X3N0YXRlICpzdGF0ZSA9ICZjdHgtPnN1Ym1pdF9zdGF0ZTsKKwlpbnQgbnI7CisKKwkvKgor
CSAqIElmIHdlIGhhdmUgbW9yZSB0aGFuIGEgYmF0Y2gncyB3b3J0aCBvZiByZXF1ZXN0cyBp
biBvdXIgSVJRIHNpZGUKKwkgKiBsb2NrZWQgY2FjaGUsIGdyYWIgdGhlIGxvY2sgYW5kIG1v
dmUgdGhlbSBvdmVyIHRvIG91ciBzdWJtaXNzaW9uCisJICogc2lkZSBjYWNoZS4KKwkgKi8K
KwlpZiAoUkVBRF9PTkNFKGN0eC0+bG9ja2VkX2ZyZWVfbnIpID4gSU9fQ09NUExfQkFUQ0gp
CisJCWlvX2ZsdXNoX2NhY2hlZF9sb2NrZWRfcmVxcyhjdHgsIHN0YXRlKTsKKworCW5yID0g
c3RhdGUtPmZyZWVfcmVxczsKKwl3aGlsZSAoIWxpc3RfZW1wdHkoJnN0YXRlLT5mcmVlX2xp
c3QpKSB7CisJCXN0cnVjdCBpb19raW9jYiAqcmVxID0gbGlzdF9maXJzdF9lbnRyeSgmc3Rh
dGUtPmZyZWVfbGlzdCwKKwkJCQkJc3RydWN0IGlvX2tpb2NiLCBpbmZsaWdodF9lbnRyeSk7
CisKKwkJbGlzdF9kZWwoJnJlcS0+aW5mbGlnaHRfZW50cnkpOworCQlzdGF0ZS0+cmVxc1tu
cisrXSA9IHJlcTsKKwkJaWYgKG5yID09IEFSUkFZX1NJWkUoc3RhdGUtPnJlcXMpKQorCQkJ
YnJlYWs7CisJfQorCisJc3RhdGUtPmZyZWVfcmVxcyA9IG5yOworCXJldHVybiBuciAhPSAw
OworfQorCisvKgorICogQSByZXF1ZXN0IG1pZ2h0IGdldCByZXRpcmVkIGJhY2sgaW50byB0
aGUgcmVxdWVzdCBjYWNoZXMgZXZlbiBiZWZvcmUgb3Bjb2RlCisgKiBoYW5kbGVycyBhbmQg
aW9faXNzdWVfc3FlKCkgYXJlIGRvbmUgd2l0aCBpdCwgZS5nLiBpbmxpbmUgY29tcGxldGlv
biBwYXRoLgorICogQmVjYXVzZSBvZiB0aGF0LCBpb19hbGxvY19yZXEoKSBzaG91bGQgYmUg
Y2FsbGVkIG9ubHkgdW5kZXIgLT51cmluZ19sb2NrCisgKiBhbmQgd2l0aCBleHRyYSBjYXV0
aW9uIHRvIG5vdCBnZXQgYSByZXF1ZXN0IHRoYXQgaXMgc3RpbGwgd29ya2VkIG9uLgorICov
CitzdGF0aWMgc3RydWN0IGlvX2tpb2NiICppb19hbGxvY19yZXEoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgpCisJX19tdXN0X2hvbGQoJmN0eC0+dXJpbmdfbG9jaykKK3sKKwlzdHJ1Y3Qg
aW9fc3VibWl0X3N0YXRlICpzdGF0ZSA9ICZjdHgtPnN1Ym1pdF9zdGF0ZTsKKwlnZnBfdCBn
ZnAgPSBHRlBfS0VSTkVMIHwgX19HRlBfTk9XQVJOOworCWludCByZXQsIGk7CisKKwlCVUlM
RF9CVUdfT04oQVJSQVlfU0laRShzdGF0ZS0+cmVxcykgPCBJT19SRVFfQUxMT0NfQkFUQ0gp
OworCisJaWYgKGxpa2VseShzdGF0ZS0+ZnJlZV9yZXFzIHx8IGlvX2ZsdXNoX2NhY2hlZF9y
ZXFzKGN0eCkpKQorCQlnb3RvIGdvdF9yZXE7CisKKwlyZXQgPSBrbWVtX2NhY2hlX2FsbG9j
X2J1bGsocmVxX2NhY2hlcCwgZ2ZwLCBJT19SRVFfQUxMT0NfQkFUQ0gsCisJCQkJICAgIHN0
YXRlLT5yZXFzKTsKKworCS8qCisJICogQnVsayBhbGxvYyBpcyBhbGwtb3Itbm90aGluZy4g
SWYgd2UgZmFpbCB0byBnZXQgYSBiYXRjaCwKKwkgKiByZXRyeSBzaW5nbGUgYWxsb2MgdG8g
YmUgb24gdGhlIHNhZmUgc2lkZS4KKwkgKi8KKwlpZiAodW5saWtlbHkocmV0IDw9IDApKSB7
CisJCXN0YXRlLT5yZXFzWzBdID0ga21lbV9jYWNoZV9hbGxvYyhyZXFfY2FjaGVwLCBnZnAp
OworCQlpZiAoIXN0YXRlLT5yZXFzWzBdKQorCQkJcmV0dXJuIE5VTEw7CisJCXJldCA9IDE7
CiAJfQogCisJZm9yIChpID0gMDsgaSA8IHJldDsgaSsrKQorCQlpb19wcmVpbml0X3JlcShz
dGF0ZS0+cmVxc1tpXSwgY3R4KTsKKwlzdGF0ZS0+ZnJlZV9yZXFzID0gcmV0OworZ290X3Jl
cToKIAlzdGF0ZS0+ZnJlZV9yZXFzLS07CiAJcmV0dXJuIHN0YXRlLT5yZXFzW3N0YXRlLT5m
cmVlX3JlcXNdOwotZmFsbGJhY2s6Ci0JcmV0dXJuIGlvX2dldF9mYWxsYmFja19yZXEoY3R4
KTsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIGlvX3B1dF9maWxlKHN0cnVjdCBpb19raW9j
YiAqcmVxLCBzdHJ1Y3QgZmlsZSAqZmlsZSwKLQkJCSAgYm9vbCBmaXhlZCkKK3N0YXRpYyBp
bmxpbmUgdm9pZCBpb19wdXRfZmlsZShzdHJ1Y3QgZmlsZSAqZmlsZSkKIHsKLQlpZiAoZml4
ZWQpCi0JCXBlcmNwdV9yZWZfcHV0KHJlcS0+Zml4ZWRfZmlsZV9yZWZzKTsKLQllbHNlCisJ
aWYgKGZpbGUpCiAJCWZwdXQoZmlsZSk7CiB9CiAKIHN0YXRpYyB2b2lkIGlvX2Rpc21hbnRs
ZV9yZXEoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7Ci0JaW9fY2xlYW5fb3AocmVxKTsKKwl1
bnNpZ25lZCBpbnQgZmxhZ3MgPSByZXEtPmZsYWdzOwogCi0JaWYgKHJlcS0+YXN5bmNfZGF0
YSkKKwlpZiAoaW9fcmVxX25lZWRzX2NsZWFuKHJlcSkpCisJCWlvX2NsZWFuX29wKHJlcSk7
CisJaWYgKCEoZmxhZ3MgJiBSRVFfRl9GSVhFRF9GSUxFKSkKKwkJaW9fcHV0X2ZpbGUocmVx
LT5maWxlKTsKKwlpZiAocmVxLT5maXhlZF9yc3JjX3JlZnMpCisJCXBlcmNwdV9yZWZfcHV0
KHJlcS0+Zml4ZWRfcnNyY19yZWZzKTsKKwlpZiAocmVxLT5hc3luY19kYXRhKSB7CiAJCWtm
cmVlKHJlcS0+YXN5bmNfZGF0YSk7Ci0JaWYgKHJlcS0+ZmlsZSkKLQkJaW9fcHV0X2ZpbGUo
cmVxLCByZXEtPmZpbGUsIChyZXEtPmZsYWdzICYgUkVRX0ZfRklYRURfRklMRSkpOwotCi0J
aW9fcmVxX2NsZWFuX3dvcmsocmVxKTsKKwkJcmVxLT5hc3luY19kYXRhID0gTlVMTDsKKwl9
CiB9CiAKIHN0YXRpYyB2b2lkIF9faW9fZnJlZV9yZXEoc3RydWN0IGlvX2tpb2NiICpyZXEp
CiB7Ci0Jc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSByZXEtPnRhc2stPmlvX3VyaW5n
OwogCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CiAKIAlpb19kaXNtYW50
bGVfcmVxKHJlcSk7CisJaW9fcHV0X3Rhc2socmVxLT50YXNrLCAxKTsKIAotCXBlcmNwdV9j
b3VudGVyX2RlYygmdGN0eC0+aW5mbGlnaHQpOwotCWlmIChhdG9taWNfcmVhZCgmdGN0eC0+
aW5faWRsZSkpCi0JCXdha2VfdXAoJnRjdHgtPndhaXQpOwotCXB1dF90YXNrX3N0cnVjdChy
ZXEtPnRhc2spOworCXNwaW5fbG9jaygmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCWxpc3Rf
YWRkKCZyZXEtPmluZmxpZ2h0X2VudHJ5LCAmY3R4LT5sb2NrZWRfZnJlZV9saXN0KTsKKwlj
dHgtPmxvY2tlZF9mcmVlX25yKys7CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9s
b2NrKTsKIAotCWlmIChsaWtlbHkoIWlvX2lzX2ZhbGxiYWNrX3JlcShyZXEpKSkKLQkJa21l
bV9jYWNoZV9mcmVlKHJlcV9jYWNoZXAsIHJlcSk7Ci0JZWxzZQotCQljbGVhcl9iaXRfdW5s
b2NrKDAsICh1bnNpZ25lZCBsb25nICopICZjdHgtPmZhbGxiYWNrX3JlcSk7CiAJcGVyY3B1
X3JlZl9wdXQoJmN0eC0+cmVmcyk7CiB9CiAKLXN0YXRpYyB2b2lkIGlvX2tpbGxfbGlua2Vk
X3RpbWVvdXQoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgaW5saW5lIHZvaWQgaW9f
cmVtb3ZlX25leHRfbGlua2VkKHN0cnVjdCBpb19raW9jYiAqcmVxKQogewotCXN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7Ci0Jc3RydWN0IGlvX2tpb2NiICpsaW5rOwot
CWJvb2wgY2FuY2VsbGVkID0gZmFsc2U7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKKwlzdHJ1
Y3QgaW9fa2lvY2IgKm54dCA9IHJlcS0+bGluazsKIAotCXNwaW5fbG9ja19pcnFzYXZlKCZj
dHgtPmNvbXBsZXRpb25fbG9jaywgZmxhZ3MpOwotCWxpbmsgPSBsaXN0X2ZpcnN0X2VudHJ5
X29yX251bGwoJnJlcS0+bGlua19saXN0LCBzdHJ1Y3QgaW9fa2lvY2IsCi0JCQkJCWxpbmtf
bGlzdCk7Ci0JLyoKLQkgKiBDYW4gaGFwcGVuIGlmIGEgbGlua2VkIHRpbWVvdXQgZmlyZWQg
YW5kIGxpbmsgaGFkIGJlZW4gbGlrZQotCSAqIHJlcSAtPiBsaW5rIHQtb3V0IC0+IGxpbmsg
dC1vdXQgWy0+IC4uLl0KLQkgKi8KLQlpZiAobGluayAmJiAobGluay0+ZmxhZ3MgJiBSRVFf
Rl9MVElNRU9VVF9BQ1RJVkUpKSB7Ci0JCXN0cnVjdCBpb190aW1lb3V0X2RhdGEgKmlvID0g
bGluay0+YXN5bmNfZGF0YTsKLQkJaW50IHJldDsKLQotCQlsaXN0X2RlbF9pbml0KCZsaW5r
LT5saW5rX2xpc3QpOwotCQlyZXQgPSBocnRpbWVyX3RyeV90b19jYW5jZWwoJmlvLT50aW1l
cik7Ci0JCWlmIChyZXQgIT0gLTEpIHsKLQkJCWlvX2NxcmluZ19maWxsX2V2ZW50KGxpbmss
IC1FQ0FOQ0VMRUQpOwotCQkJaW9fY29tbWl0X2NxcmluZyhjdHgpOwotCQkJY2FuY2VsbGVk
ID0gdHJ1ZTsKLQkJfQotCX0KLQlyZXEtPmZsYWdzICY9IH5SRVFfRl9MSU5LX1RJTUVPVVQ7
Ci0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY3R4LT5jb21wbGV0aW9uX2xvY2ssIGZsYWdz
KTsKLQotCWlmIChjYW5jZWxsZWQpIHsKLQkJaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOwot
CQlpb19wdXRfcmVxKGxpbmspOwotCX0KKwlyZXEtPmxpbmsgPSBueHQtPmxpbms7CisJbnh0
LT5saW5rID0gTlVMTDsKIH0KIAotc3RhdGljIHN0cnVjdCBpb19raW9jYiAqaW9fcmVxX2xp
bmtfbmV4dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3N0YXRpYyBib29sIGlvX2tpbGxfbGlu
a2VkX3RpbWVvdXQoc3RydWN0IGlvX2tpb2NiICpyZXEpCisJX19tdXN0X2hvbGQoJnJlcS0+
Y3R4LT5jb21wbGV0aW9uX2xvY2spCisJX19tdXN0X2hvbGQoJnJlcS0+Y3R4LT50aW1lb3V0
X2xvY2spCiB7Ci0Jc3RydWN0IGlvX2tpb2NiICpueHQ7CisJc3RydWN0IGlvX2tpb2NiICps
aW5rID0gcmVxLT5saW5rOwogCi0JLyoKLQkgKiBUaGUgbGlzdCBzaG91bGQgbmV2ZXIgYmUg
ZW1wdHkgd2hlbiB3ZSBhcmUgY2FsbGVkIGhlcmUuIEJ1dCBjb3VsZAotCSAqIHBvdGVudGlh
bGx5IGhhcHBlbiBpZiB0aGUgY2hhaW4gaXMgbWVzc2VkIHVwLCBjaGVjayB0byBiZSBvbiB0
aGUKLQkgKiBzYWZlIHNpZGUuCi0JICovCi0JaWYgKHVubGlrZWx5KGxpc3RfZW1wdHkoJnJl
cS0+bGlua19saXN0KSkpCi0JCXJldHVybiBOVUxMOworCWlmIChsaW5rICYmIGxpbmstPm9w
Y29kZSA9PSBJT1JJTkdfT1BfTElOS19USU1FT1VUKSB7CisJCXN0cnVjdCBpb190aW1lb3V0
X2RhdGEgKmlvID0gbGluay0+YXN5bmNfZGF0YTsKIAotCW54dCA9IGxpc3RfZmlyc3RfZW50
cnkoJnJlcS0+bGlua19saXN0LCBzdHJ1Y3QgaW9fa2lvY2IsIGxpbmtfbGlzdCk7Ci0JbGlz
dF9kZWxfaW5pdCgmcmVxLT5saW5rX2xpc3QpOwotCWlmICghbGlzdF9lbXB0eSgmbnh0LT5s
aW5rX2xpc3QpKQotCQlueHQtPmZsYWdzIHw9IFJFUV9GX0xJTktfSEVBRDsKLQlyZXR1cm4g
bnh0OworCQlpb19yZW1vdmVfbmV4dF9saW5rZWQocmVxKTsKKwkJbGluay0+dGltZW91dC5o
ZWFkID0gTlVMTDsKKwkJaWYgKGhydGltZXJfdHJ5X3RvX2NhbmNlbCgmaW8tPnRpbWVyKSAh
PSAtMSkgeworCQkJbGlzdF9kZWwoJmxpbmstPnRpbWVvdXQubGlzdCk7CisJCQlpb19maWxs
X2NxZV9yZXEobGluaywgLUVDQU5DRUxFRCwgMCk7CisJCQlpb19wdXRfcmVxX2RlZmVycmVk
KGxpbmspOworCQkJcmV0dXJuIHRydWU7CisJCX0KKwl9CisJcmV0dXJuIGZhbHNlOwogfQog
Ci0vKgotICogQ2FsbGVkIGlmIFJFUV9GX0xJTktfSEVBRCBpcyBzZXQsIGFuZCB3ZSBmYWls
IHRoZSBoZWFkIHJlcXVlc3QKLSAqLwogc3RhdGljIHZvaWQgaW9fZmFpbF9saW5rcyhzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSkKKwlfX211c3RfaG9sZCgmcmVxLT5jdHgtPmNvbXBsZXRpb25f
bG9jaykKIHsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OwotCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CisJc3RydWN0IGlvX2tpb2NiICpueHQsICpsaW5rID0gcmVxLT5s
aW5rOwogCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmN0eC0+Y29tcGxldGlvbl9sb2NrLCBmbGFn
cyk7Ci0Jd2hpbGUgKCFsaXN0X2VtcHR5KCZyZXEtPmxpbmtfbGlzdCkpIHsKLQkJc3RydWN0
IGlvX2tpb2NiICpsaW5rID0gbGlzdF9maXJzdF9lbnRyeSgmcmVxLT5saW5rX2xpc3QsCi0J
CQkJCQlzdHJ1Y3QgaW9fa2lvY2IsIGxpbmtfbGlzdCk7CisJcmVxLT5saW5rID0gTlVMTDsK
Kwl3aGlsZSAobGluaykgeworCQlsb25nIHJlcyA9IC1FQ0FOQ0VMRUQ7CiAKLQkJbGlzdF9k
ZWxfaW5pdCgmbGluay0+bGlua19saXN0KTsKLQkJdHJhY2VfaW9fdXJpbmdfZmFpbF9saW5r
KHJlcSwgbGluayk7CisJCWlmIChsaW5rLT5mbGFncyAmIFJFUV9GX0ZBSUwpCisJCQlyZXMg
PSBsaW5rLT5yZXN1bHQ7CiAKLQkJaW9fY3FyaW5nX2ZpbGxfZXZlbnQobGluaywgLUVDQU5D
RUxFRCk7CisJCW54dCA9IGxpbmstPmxpbms7CisJCWxpbmstPmxpbmsgPSBOVUxMOwogCi0J
CS8qCi0JCSAqIEl0J3Mgb2sgdG8gZnJlZSB1bmRlciBzcGlubG9jayBhcyB0aGV5J3JlIG5v
dCBsaW5rZWQgYW55bW9yZSwKLQkJICogYnV0IGF2b2lkIFJFUV9GX1dPUktfSU5JVElBTEla
RUQgYmVjYXVzZSBpdCBtYXkgZGVhZGxvY2sgb24KLQkJICogd29yay5mcy0+bG9jay4KLQkJ
ICovCi0JCWlmIChsaW5rLT5mbGFncyAmIFJFUV9GX1dPUktfSU5JVElBTElaRUQpCi0JCQlp
b19wdXRfcmVxX2RlZmVycmVkKGxpbmssIDIpOwotCQllbHNlCi0JCQlpb19kb3VibGVfcHV0
X3JlcShsaW5rKTsKKwkJdHJhY2VfaW9fdXJpbmdfZmFpbF9saW5rKHJlcSwgbGluayk7CisJ
CWlvX2ZpbGxfY3FlX3JlcShsaW5rLCByZXMsIDApOworCQlpb19wdXRfcmVxX2RlZmVycmVk
KGxpbmspOworCQlsaW5rID0gbnh0OwogCX0KK30KIAotCWlvX2NvbW1pdF9jcXJpbmcoY3R4
KTsKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdHgtPmNvbXBsZXRpb25fbG9jaywgZmxh
Z3MpOworc3RhdGljIGJvb2wgaW9fZGlzYXJtX25leHQoc3RydWN0IGlvX2tpb2NiICpyZXEp
CisJX19tdXN0X2hvbGQoJnJlcS0+Y3R4LT5jb21wbGV0aW9uX2xvY2spCit7CisJYm9vbCBw
b3N0ZWQgPSBmYWxzZTsKIAotCWlvX2NxcmluZ19ldl9wb3N0ZWQoY3R4KTsKKwlpZiAocmVx
LT5mbGFncyAmIFJFUV9GX0FSTV9MVElNRU9VVCkgeworCQlzdHJ1Y3QgaW9fa2lvY2IgKmxp
bmsgPSByZXEtPmxpbms7CisKKwkJcmVxLT5mbGFncyAmPSB+UkVRX0ZfQVJNX0xUSU1FT1VU
OworCQlpZiAobGluayAmJiBsaW5rLT5vcGNvZGUgPT0gSU9SSU5HX09QX0xJTktfVElNRU9V
VCkgeworCQkJaW9fcmVtb3ZlX25leHRfbGlua2VkKHJlcSk7CisJCQlpb19maWxsX2NxZV9y
ZXEobGluaywgLUVDQU5DRUxFRCwgMCk7CisJCQlpb19wdXRfcmVxX2RlZmVycmVkKGxpbmsp
OworCQkJcG9zdGVkID0gdHJ1ZTsKKwkJfQorCX0gZWxzZSBpZiAocmVxLT5mbGFncyAmIFJF
UV9GX0xJTktfVElNRU9VVCkgeworCQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+
Y3R4OworCisJCXNwaW5fbG9ja19pcnEoJmN0eC0+dGltZW91dF9sb2NrKTsKKwkJcG9zdGVk
ID0gaW9fa2lsbF9saW5rZWRfdGltZW91dChyZXEpOworCQlzcGluX3VubG9ja19pcnEoJmN0
eC0+dGltZW91dF9sb2NrKTsKKwl9CisJaWYgKHVubGlrZWx5KChyZXEtPmZsYWdzICYgUkVR
X0ZfRkFJTCkgJiYKKwkJICAgICAhKHJlcS0+ZmxhZ3MgJiBSRVFfRl9IQVJETElOSykpKSB7
CisJCXBvc3RlZCB8PSAocmVxLT5saW5rICE9IE5VTEwpOworCQlpb19mYWlsX2xpbmtzKHJl
cSk7CisJfQorCXJldHVybiBwb3N0ZWQ7CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgaW9fa2lvY2Ig
Kl9faW9fcmVxX2ZpbmRfbmV4dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlyZXEtPmZs
YWdzICY9IH5SRVFfRl9MSU5LX0hFQUQ7Ci0JaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9MSU5L
X1RJTUVPVVQpCi0JCWlvX2tpbGxfbGlua2VkX3RpbWVvdXQocmVxKTsKKwlzdHJ1Y3QgaW9f
a2lvY2IgKm54dDsKIAogCS8qCiAJICogSWYgTElOSyBpcyBzZXQsIHdlIGhhdmUgZGVwZW5k
ZW50IHJlcXVlc3RzIGluIHRoaXMgY2hhaW4uIElmIHdlCkBAIC0yMDM0LDI4ICsyMTE4LDEx
MiBAQCBzdGF0aWMgc3RydWN0IGlvX2tpb2NiICpfX2lvX3JlcV9maW5kX25leHQoc3RydWN0
IGlvX2tpb2NiICpyZXEpCiAJICogZGVwZW5kZW5jaWVzIHRvIHRoZSBuZXh0IHJlcXVlc3Qu
IEluIGNhc2Ugb2YgZmFpbHVyZSwgZmFpbCB0aGUgcmVzdAogCSAqIG9mIHRoZSBjaGFpbi4K
IAkgKi8KLQlpZiAobGlrZWx5KCEocmVxLT5mbGFncyAmIFJFUV9GX0ZBSUxfTElOSykpKQot
CQlyZXR1cm4gaW9fcmVxX2xpbmtfbmV4dChyZXEpOwotCWlvX2ZhaWxfbGlua3MocmVxKTsK
LQlyZXR1cm4gTlVMTDsKKwlpZiAocmVxLT5mbGFncyAmIElPX0RJU0FSTV9NQVNLKSB7CisJ
CXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CisJCWJvb2wgcG9zdGVkOwor
CisJCXNwaW5fbG9jaygmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCQlwb3N0ZWQgPSBpb19k
aXNhcm1fbmV4dChyZXEpOworCQlpZiAocG9zdGVkKQorCQkJaW9fY29tbWl0X2NxcmluZyhy
ZXEtPmN0eCk7CisJCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJCWlm
IChwb3N0ZWQpCisJCQlpb19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7CisJfQorCW54dCA9IHJl
cS0+bGluazsKKwlyZXEtPmxpbmsgPSBOVUxMOworCXJldHVybiBueHQ7CiB9CiAKLXN0YXRp
YyBzdHJ1Y3QgaW9fa2lvY2IgKmlvX3JlcV9maW5kX25leHQoc3RydWN0IGlvX2tpb2NiICpy
ZXEpCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpb19raW9jYiAqaW9fcmVxX2ZpbmRfbmV4dChz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlpZiAobGlrZWx5KCEocmVxLT5mbGFncyAmIFJF
UV9GX0xJTktfSEVBRCkpKQorCWlmIChsaWtlbHkoIShyZXEtPmZsYWdzICYgKFJFUV9GX0xJ
Tkt8UkVRX0ZfSEFSRExJTkspKSkpCiAJCXJldHVybiBOVUxMOwogCXJldHVybiBfX2lvX3Jl
cV9maW5kX25leHQocmVxKTsKIH0KIAotc3RhdGljIGludCBpb19yZXFfdGFza193b3JrX2Fk
ZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCB0d2Ffc2lnbmFsX29rKQorc3RhdGljIHZv
aWQgY3R4X2ZsdXNoX2FuZF9wdXQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIGJvb2wgKmxv
Y2tlZCkKK3sKKwlpZiAoIWN0eCkKKwkJcmV0dXJuOworCWlmICgqbG9ja2VkKSB7CisJCWlm
IChjdHgtPnN1Ym1pdF9zdGF0ZS5jb21wbF9ucikKKwkJCWlvX3N1Ym1pdF9mbHVzaF9jb21w
bGV0aW9ucyhjdHgpOworCQltdXRleF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CisJCSps
b2NrZWQgPSBmYWxzZTsKKwl9CisJcGVyY3B1X3JlZl9wdXQoJmN0eC0+cmVmcyk7Cit9CisK
K3N0YXRpYyB2b2lkIHRjdHhfdGFza193b3JrKHN0cnVjdCBjYWxsYmFja19oZWFkICpjYikK
K3sKKwlib29sIGxvY2tlZCA9IGZhbHNlOworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0g
TlVMTDsKKwlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGNvbnRhaW5lcl9vZihjYiwg
c3RydWN0IGlvX3VyaW5nX3Rhc2ssCisJCQkJCQkgIHRhc2tfd29yayk7CisKKwl3aGlsZSAo
MSkgeworCQlzdHJ1Y3QgaW9fd3Ffd29ya19ub2RlICpub2RlOworCisJCWlmICghdGN0eC0+
dGFza19saXN0LmZpcnN0ICYmIGxvY2tlZCAmJiBjdHgtPnN1Ym1pdF9zdGF0ZS5jb21wbF9u
cikKKwkJCWlvX3N1Ym1pdF9mbHVzaF9jb21wbGV0aW9ucyhjdHgpOworCisJCXNwaW5fbG9j
a19pcnEoJnRjdHgtPnRhc2tfbG9jayk7CisJCW5vZGUgPSB0Y3R4LT50YXNrX2xpc3QuZmly
c3Q7CisJCUlOSVRfV1FfTElTVCgmdGN0eC0+dGFza19saXN0KTsKKwkJaWYgKCFub2RlKQor
CQkJdGN0eC0+dGFza19ydW5uaW5nID0gZmFsc2U7CisJCXNwaW5fdW5sb2NrX2lycSgmdGN0
eC0+dGFza19sb2NrKTsKKwkJaWYgKCFub2RlKQorCQkJYnJlYWs7CisKKwkJZG8geworCQkJ
c3RydWN0IGlvX3dxX3dvcmtfbm9kZSAqbmV4dCA9IG5vZGUtPm5leHQ7CisJCQlzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSA9IGNvbnRhaW5lcl9vZihub2RlLCBzdHJ1Y3QgaW9fa2lvY2IsCisJ
CQkJCQkJICAgIGlvX3Rhc2tfd29yay5ub2RlKTsKKworCQkJaWYgKHJlcS0+Y3R4ICE9IGN0
eCkgeworCQkJCWN0eF9mbHVzaF9hbmRfcHV0KGN0eCwgJmxvY2tlZCk7CisJCQkJY3R4ID0g
cmVxLT5jdHg7CisJCQkJLyogaWYgbm90IGNvbnRlbmRlZCwgZ3JhYiBhbmQgaW1wcm92ZSBi
YXRjaGluZyAqLworCQkJCWxvY2tlZCA9IG11dGV4X3RyeWxvY2soJmN0eC0+dXJpbmdfbG9j
ayk7CisJCQkJcGVyY3B1X3JlZl9nZXQoJmN0eC0+cmVmcyk7CisJCQl9CisJCQlyZXEtPmlv
X3Rhc2tfd29yay5mdW5jKHJlcSwgJmxvY2tlZCk7CisJCQlub2RlID0gbmV4dDsKKwkJfSB3
aGlsZSAobm9kZSk7CisKKwkJY29uZF9yZXNjaGVkKCk7CisJfQorCisJY3R4X2ZsdXNoX2Fu
ZF9wdXQoY3R4LCAmbG9ja2VkKTsKKworCS8qIHJlbGF4ZWQgcmVhZCBpcyBlbm91Z2ggYXMg
b25seSB0aGUgdGFzayBpdHNlbGYgc2V0cyAtPmluX2lkbGUgKi8KKwlpZiAodW5saWtlbHko
YXRvbWljX3JlYWQoJnRjdHgtPmluX2lkbGUpKSkKKwkJaW9fdXJpbmdfZHJvcF90Y3R4X3Jl
ZnMoY3VycmVudCk7Cit9CisKK3N0YXRpYyB2b2lkIGlvX3JlcV90YXNrX3dvcmtfYWRkKHN0
cnVjdCBpb19raW9jYiAqcmVxKQogewogCXN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrID0gcmVx
LT50YXNrOwotCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CisJc3RydWN0
IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSB0c2stPmlvX3VyaW5nOwogCWVudW0gdGFza193b3Jr
X25vdGlmeV9tb2RlIG5vdGlmeTsKLQlpbnQgcmV0OworCXN0cnVjdCBpb193cV93b3JrX25v
ZGUgKm5vZGU7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlib29sIHJ1bm5pbmc7CisKKwlX
QVJOX09OX09OQ0UoIXRjdHgpOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnRjdHgtPnRhc2tf
bG9jaywgZmxhZ3MpOworCXdxX2xpc3RfYWRkX3RhaWwoJnJlcS0+aW9fdGFza193b3JrLm5v
ZGUsICZ0Y3R4LT50YXNrX2xpc3QpOworCXJ1bm5pbmcgPSB0Y3R4LT50YXNrX3J1bm5pbmc7
CisJaWYgKCFydW5uaW5nKQorCQl0Y3R4LT50YXNrX3J1bm5pbmcgPSB0cnVlOworCXNwaW5f
dW5sb2NrX2lycXJlc3RvcmUoJnRjdHgtPnRhc2tfbG9jaywgZmxhZ3MpOwogCi0JaWYgKHRz
ay0+ZmxhZ3MgJiBQRl9FWElUSU5HKQotCQlyZXR1cm4gLUVTUkNIOworCS8qIHRhc2tfd29y
ayBhbHJlYWR5IHBlbmRpbmcsIHdlJ3JlIGRvbmUgKi8KKwlpZiAocnVubmluZykKKwkJcmV0
dXJuOwogCiAJLyoKIAkgKiBTUVBPTEwga2VybmVsIHRocmVhZCBkb2Vzbid0IG5lZWQgbm90
aWZpY2F0aW9uLCBqdXN0IGEgd2FrZXVwLiBGb3IKQEAgLTIwNjMsODUgKzIyMzEsNjggQEAg
c3RhdGljIGludCBpb19yZXFfdGFza193b3JrX2FkZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
Ym9vbCB0d2Ffc2lnbmFsX29rKQogCSAqIHByb2Nlc3NpbmcgdGFza193b3JrLiBUaGVyZSdz
IG5vIHJlbGlhYmxlIHdheSB0byB0ZWxsIGlmIFRXQV9SRVNVTUUKIAkgKiB3aWxsIGRvIHRo
ZSBqb2IuCiAJICovCi0Jbm90aWZ5ID0gVFdBX05PTkU7Ci0JaWYgKCEoY3R4LT5mbGFncyAm
IElPUklOR19TRVRVUF9TUVBPTEwpICYmIHR3YV9zaWduYWxfb2spCi0JCW5vdGlmeSA9IFRX
QV9TSUdOQUw7Ci0KLQlyZXQgPSB0YXNrX3dvcmtfYWRkKHRzaywgJnJlcS0+dGFza193b3Jr
LCBub3RpZnkpOwotCWlmICghcmV0KQorCW5vdGlmeSA9IChyZXEtPmN0eC0+ZmxhZ3MgJiBJ
T1JJTkdfU0VUVVBfU1FQT0xMKSA/IFRXQV9OT05FIDogVFdBX1NJR05BTDsKKwlpZiAoIXRh
c2tfd29ya19hZGQodHNrLCAmdGN0eC0+dGFza193b3JrLCBub3RpZnkpKSB7CiAJCXdha2Vf
dXBfcHJvY2Vzcyh0c2spOworCQlyZXR1cm47CisJfQogCi0JcmV0dXJuIHJldDsKLX0KLQot
c3RhdGljIHZvaWQgX19pb19yZXFfdGFza19jYW5jZWwoc3RydWN0IGlvX2tpb2NiICpyZXEs
IGludCBlcnJvcikKLXsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4Owot
Ci0Jc3Bpbl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOwotCWlvX2NxcmluZ19m
aWxsX2V2ZW50KHJlcSwgZXJyb3IpOwotCWlvX2NvbW1pdF9jcXJpbmcoY3R4KTsKLQlzcGlu
X3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlzcGluX2xvY2tfaXJxc2F2
ZSgmdGN0eC0+dGFza19sb2NrLCBmbGFncyk7CisJdGN0eC0+dGFza19ydW5uaW5nID0gZmFs
c2U7CisJbm9kZSA9IHRjdHgtPnRhc2tfbGlzdC5maXJzdDsKKwlJTklUX1dRX0xJU1QoJnRj
dHgtPnRhc2tfbGlzdCk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdGN0eC0+dGFza19s
b2NrLCBmbGFncyk7CiAKLQlpb19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7Ci0JcmVxX3NldF9m
YWlsX2xpbmtzKHJlcSk7Ci0JaW9fZG91YmxlX3B1dF9yZXEocmVxKTsKKwl3aGlsZSAobm9k
ZSkgeworCQlyZXEgPSBjb250YWluZXJfb2Yobm9kZSwgc3RydWN0IGlvX2tpb2NiLCBpb190
YXNrX3dvcmsubm9kZSk7CisJCW5vZGUgPSBub2RlLT5uZXh0OworCQlpZiAobGxpc3RfYWRk
KCZyZXEtPmlvX3Rhc2tfd29yay5mYWxsYmFja19ub2RlLAorCQkJICAgICAgJnJlcS0+Y3R4
LT5mYWxsYmFja19sbGlzdCkpCisJCQlzY2hlZHVsZV9kZWxheWVkX3dvcmsoJnJlcS0+Y3R4
LT5mYWxsYmFja193b3JrLCAxKTsKKwl9CiB9CiAKLXN0YXRpYyB2b2lkIGlvX3JlcV90YXNr
X2NhbmNlbChzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqY2IpCitzdGF0aWMgdm9pZCBpb19yZXFf
dGFza19jYW5jZWwoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgKmxvY2tlZCkKIHsKLQlz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IGNvbnRhaW5lcl9vZihjYiwgc3RydWN0IGlvX2tpb2Ni
LCB0YXNrX3dvcmspOwogCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CiAK
LQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCV9faW9fcmVxX3Rhc2tfY2FuY2Vs
KHJlcSwgLUVDQU5DRUxFRCk7Ci0JbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwot
CXBlcmNwdV9yZWZfcHV0KCZjdHgtPnJlZnMpOworCS8qIG5vdCBuZWVkZWQgZm9yIG5vcm1h
bCBtb2RlcywgYnV0IFNRUE9MTCBkZXBlbmRzIG9uIGl0ICovCisJaW9fdHdfbG9jayhjdHgs
IGxvY2tlZCk7CisJaW9fcmVxX2NvbXBsZXRlX2ZhaWxlZChyZXEsIHJlcS0+cmVzdWx0KTsK
IH0KIAotc3RhdGljIHZvaWQgX19pb19yZXFfdGFza19zdWJtaXQoc3RydWN0IGlvX2tpb2Ni
ICpyZXEpCitzdGF0aWMgdm9pZCBpb19yZXFfdGFza19zdWJtaXQoc3RydWN0IGlvX2tpb2Ni
ICpyZXEsIGJvb2wgKmxvY2tlZCkKIHsKIAlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJl
cS0+Y3R4OwogCi0JbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsKLQlpZiAoIWN0eC0+
c3FvX2RlYWQgJiYgIV9faW9fc3FfdGhyZWFkX2FjcXVpcmVfbW0oY3R4KSkKLQkJX19pb19x
dWV1ZV9zcWUocmVxLCBOVUxMKTsKKwlpb190d19sb2NrKGN0eCwgbG9ja2VkKTsKKwkvKiBy
ZXEtPnRhc2sgPT0gY3VycmVudCBoZXJlLCBjaGVja2luZyBQRl9FWElUSU5HIGlzIHNhZmUg
Ki8KKwlpZiAobGlrZWx5KCEocmVxLT50YXNrLT5mbGFncyAmIFBGX0VYSVRJTkcpKSkKKwkJ
X19pb19xdWV1ZV9zcWUocmVxKTsKIAllbHNlCi0JCV9faW9fcmVxX3Rhc2tfY2FuY2VsKHJl
cSwgLUVGQVVMVCk7Ci0JbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCi0JaWYg
KGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfU1FQT0xMKQotCQlpb19zcV90aHJlYWRfZHJv
cF9tbSgpOworCQlpb19yZXFfY29tcGxldGVfZmFpbGVkKHJlcSwgLUVGQVVMVCk7CiB9CiAK
LXN0YXRpYyB2b2lkIGlvX3JlcV90YXNrX3N1Ym1pdChzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAq
Y2IpCitzdGF0aWMgdm9pZCBpb19yZXFfdGFza19xdWV1ZV9mYWlsKHN0cnVjdCBpb19raW9j
YiAqcmVxLCBpbnQgcmV0KQogewotCXN0cnVjdCBpb19raW9jYiAqcmVxID0gY29udGFpbmVy
X29mKGNiLCBzdHJ1Y3QgaW9fa2lvY2IsIHRhc2tfd29yayk7Ci0Jc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHggPSByZXEtPmN0eDsKLQotCV9faW9fcmVxX3Rhc2tfc3VibWl0KHJlcSk7Ci0J
cGVyY3B1X3JlZl9wdXQoJmN0eC0+cmVmcyk7CisJcmVxLT5yZXN1bHQgPSByZXQ7CisJcmVx
LT5pb190YXNrX3dvcmsuZnVuYyA9IGlvX3JlcV90YXNrX2NhbmNlbDsKKwlpb19yZXFfdGFz
a193b3JrX2FkZChyZXEpOwogfQogCiBzdGF0aWMgdm9pZCBpb19yZXFfdGFza19xdWV1ZShz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlpbnQgcmV0OwotCi0JaW5pdF90YXNrX3dvcmso
JnJlcS0+dGFza193b3JrLCBpb19yZXFfdGFza19zdWJtaXQpOwotCXBlcmNwdV9yZWZfZ2V0
KCZyZXEtPmN0eC0+cmVmcyk7Ci0KLQlyZXQgPSBpb19yZXFfdGFza193b3JrX2FkZChyZXEs
IHRydWUpOwotCWlmICh1bmxpa2VseShyZXQpKSB7Ci0JCXN0cnVjdCB0YXNrX3N0cnVjdCAq
dHNrOworCXJlcS0+aW9fdGFza193b3JrLmZ1bmMgPSBpb19yZXFfdGFza19zdWJtaXQ7CisJ
aW9fcmVxX3Rhc2tfd29ya19hZGQocmVxKTsKK30KIAotCQlpbml0X3Rhc2tfd29yaygmcmVx
LT50YXNrX3dvcmssIGlvX3JlcV90YXNrX2NhbmNlbCk7Ci0JCXRzayA9IGlvX3dxX2dldF90
YXNrKHJlcS0+Y3R4LT5pb193cSk7Ci0JCXRhc2tfd29ya19hZGQodHNrLCAmcmVxLT50YXNr
X3dvcmssIFRXQV9OT05FKTsKLQkJd2FrZV91cF9wcm9jZXNzKHRzayk7Ci0JfQorc3RhdGlj
IHZvaWQgaW9fcmVxX3Rhc2tfcXVldWVfcmVpc3N1ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkK
K3sKKwlyZXEtPmlvX3Rhc2tfd29yay5mdW5jID0gaW9fcXVldWVfYXN5bmNfd29yazsKKwlp
b19yZXFfdGFza193b3JrX2FkZChyZXEpOwogfQogCi1zdGF0aWMgdm9pZCBpb19xdWV1ZV9u
ZXh0KHN0cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIGlubGluZSB2b2lkIGlvX3F1ZXVl
X25leHQoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7CiAJc3RydWN0IGlvX2tpb2NiICpueHQg
PSBpb19yZXFfZmluZF9uZXh0KHJlcSk7CiAKQEAgLTIxNTUsMTUzICsyMzA2LDExOCBAQCBz
dGF0aWMgdm9pZCBpb19mcmVlX3JlcShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIAlfX2lvX2Zy
ZWVfcmVxKHJlcSk7CiB9CiAKLXN0cnVjdCByZXFfYmF0Y2ggewotCXZvaWQgKnJlcXNbSU9f
SU9QT0xMX0JBVENIXTsKLQlpbnQgdG9fZnJlZTsKK3N0YXRpYyB2b2lkIGlvX2ZyZWVfcmVx
X3dvcmsoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgKmxvY2tlZCkKK3sKKwlpb19mcmVl
X3JlcShyZXEpOworfQogCitzdHJ1Y3QgcmVxX2JhdGNoIHsKIAlzdHJ1Y3QgdGFza19zdHJ1
Y3QJKnRhc2s7CiAJaW50CQkJdGFza19yZWZzOworCWludAkJCWN0eF9yZWZzOwogfTsKIAog
c3RhdGljIGlubGluZSB2b2lkIGlvX2luaXRfcmVxX2JhdGNoKHN0cnVjdCByZXFfYmF0Y2gg
KnJiKQogewotCXJiLT50b19mcmVlID0gMDsKIAlyYi0+dGFza19yZWZzID0gMDsKKwlyYi0+
Y3R4X3JlZnMgPSAwOwogCXJiLT50YXNrID0gTlVMTDsKIH0KIAotc3RhdGljIHZvaWQgX19p
b19yZXFfZnJlZV9iYXRjaF9mbHVzaChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKLQkJCQkg
ICAgICBzdHJ1Y3QgcmVxX2JhdGNoICpyYikKK3N0YXRpYyB2b2lkIGlvX3JlcV9mcmVlX2Jh
dGNoX2ZpbmlzaChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKKwkJCQkgICAgIHN0cnVjdCBy
ZXFfYmF0Y2ggKnJiKQogewotCWttZW1fY2FjaGVfZnJlZV9idWxrKHJlcV9jYWNoZXAsIHJi
LT50b19mcmVlLCByYi0+cmVxcyk7Ci0JcGVyY3B1X3JlZl9wdXRfbWFueSgmY3R4LT5yZWZz
LCByYi0+dG9fZnJlZSk7Ci0JcmItPnRvX2ZyZWUgPSAwOworCWlmIChyYi0+Y3R4X3JlZnMp
CisJCXBlcmNwdV9yZWZfcHV0X21hbnkoJmN0eC0+cmVmcywgcmItPmN0eF9yZWZzKTsKKwlp
ZiAocmItPnRhc2spCisJCWlvX3B1dF90YXNrKHJiLT50YXNrLCByYi0+dGFza19yZWZzKTsK
IH0KIAotc3RhdGljIHZvaWQgaW9fcmVxX2ZyZWVfYmF0Y2hfZmluaXNoKHN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4LAotCQkJCSAgICAgc3RydWN0IHJlcV9iYXRjaCAqcmIpCitzdGF0aWMg
dm9pZCBpb19yZXFfZnJlZV9iYXRjaChzdHJ1Y3QgcmVxX2JhdGNoICpyYiwgc3RydWN0IGlv
X2tpb2NiICpyZXEsCisJCQkgICAgICBzdHJ1Y3QgaW9fc3VibWl0X3N0YXRlICpzdGF0ZSkK
IHsKLQlpZiAocmItPnRvX2ZyZWUpCi0JCV9faW9fcmVxX2ZyZWVfYmF0Y2hfZmx1c2goY3R4
LCByYik7Ci0JaWYgKHJiLT50YXNrKSB7Ci0JCXN0cnVjdCBpb191cmluZ190YXNrICp0Y3R4
ID0gcmItPnRhc2stPmlvX3VyaW5nOworCWlvX3F1ZXVlX25leHQocmVxKTsKKwlpb19kaXNt
YW50bGVfcmVxKHJlcSk7CiAKLQkJcGVyY3B1X2NvdW50ZXJfc3ViKCZ0Y3R4LT5pbmZsaWdo
dCwgcmItPnRhc2tfcmVmcyk7Ci0JCWlmIChhdG9taWNfcmVhZCgmdGN0eC0+aW5faWRsZSkp
Ci0JCQl3YWtlX3VwKCZ0Y3R4LT53YWl0KTsKLQkJcHV0X3Rhc2tfc3RydWN0X21hbnkocmIt
PnRhc2ssIHJiLT50YXNrX3JlZnMpOwotCQlyYi0+dGFzayA9IE5VTEw7CisJaWYgKHJlcS0+
dGFzayAhPSByYi0+dGFzaykgeworCQlpZiAocmItPnRhc2spCisJCQlpb19wdXRfdGFzayhy
Yi0+dGFzaywgcmItPnRhc2tfcmVmcyk7CisJCXJiLT50YXNrID0gcmVxLT50YXNrOworCQly
Yi0+dGFza19yZWZzID0gMDsKIAl9CisJcmItPnRhc2tfcmVmcysrOworCXJiLT5jdHhfcmVm
cysrOworCisJaWYgKHN0YXRlLT5mcmVlX3JlcXMgIT0gQVJSQVlfU0laRShzdGF0ZS0+cmVx
cykpCisJCXN0YXRlLT5yZXFzW3N0YXRlLT5mcmVlX3JlcXMrK10gPSByZXE7CisJZWxzZQor
CQlsaXN0X2FkZCgmcmVxLT5pbmZsaWdodF9lbnRyeSwgJnN0YXRlLT5mcmVlX2xpc3QpOwog
fQogCi1zdGF0aWMgdm9pZCBpb19yZXFfZnJlZV9iYXRjaChzdHJ1Y3QgcmVxX2JhdGNoICpy
Yiwgc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgdm9pZCBpb19zdWJtaXRfZmx1c2hf
Y29tcGxldGlvbnMoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCisJX19tdXN0X2hvbGQoJmN0
eC0+dXJpbmdfbG9jaykKIHsKLQlpZiAodW5saWtlbHkoaW9faXNfZmFsbGJhY2tfcmVxKHJl
cSkpKSB7Ci0JCWlvX2ZyZWVfcmVxKHJlcSk7Ci0JCXJldHVybjsKKwlzdHJ1Y3QgaW9fc3Vi
bWl0X3N0YXRlICpzdGF0ZSA9ICZjdHgtPnN1Ym1pdF9zdGF0ZTsKKwlpbnQgaSwgbnIgPSBz
dGF0ZS0+Y29tcGxfbnI7CisJc3RydWN0IHJlcV9iYXRjaCByYjsKKworCXNwaW5fbG9jaygm
Y3R4LT5jb21wbGV0aW9uX2xvY2spOworCWZvciAoaSA9IDA7IGkgPCBucjsgaSsrKSB7CisJ
CXN0cnVjdCBpb19raW9jYiAqcmVxID0gc3RhdGUtPmNvbXBsX3JlcXNbaV07CisKKwkJX19p
b19maWxsX2NxZShjdHgsIHJlcS0+dXNlcl9kYXRhLCByZXEtPnJlc3VsdCwKKwkJCSAgICAg
IHJlcS0+Y29tcGwuY2ZsYWdzKTsKIAl9Ci0JaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9MSU5L
X0hFQUQpCi0JCWlvX3F1ZXVlX25leHQocmVxKTsKKwlpb19jb21taXRfY3FyaW5nKGN0eCk7
CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlpb19jcXJpbmdfZXZf
cG9zdGVkKGN0eCk7CiAKLQlpZiAocmVxLT50YXNrICE9IHJiLT50YXNrKSB7Ci0JCWlmIChy
Yi0+dGFzaykgewotCQkJc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSByYi0+dGFzay0+
aW9fdXJpbmc7CisJaW9faW5pdF9yZXFfYmF0Y2goJnJiKTsKKwlmb3IgKGkgPSAwOyBpIDwg
bnI7IGkrKykgeworCQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IHN0YXRlLT5jb21wbF9yZXFz
W2ldOwogCi0JCQlwZXJjcHVfY291bnRlcl9zdWIoJnRjdHgtPmluZmxpZ2h0LCByYi0+dGFz
a19yZWZzKTsKLQkJCWlmIChhdG9taWNfcmVhZCgmdGN0eC0+aW5faWRsZSkpCi0JCQkJd2Fr
ZV91cCgmdGN0eC0+d2FpdCk7Ci0JCQlwdXRfdGFza19zdHJ1Y3RfbWFueShyYi0+dGFzaywg
cmItPnRhc2tfcmVmcyk7Ci0JCX0KLQkJcmItPnRhc2sgPSByZXEtPnRhc2s7Ci0JCXJiLT50
YXNrX3JlZnMgPSAwOworCQlpZiAocmVxX3JlZl9wdXRfYW5kX3Rlc3QocmVxKSkKKwkJCWlv
X3JlcV9mcmVlX2JhdGNoKCZyYiwgcmVxLCAmY3R4LT5zdWJtaXRfc3RhdGUpOwogCX0KLQly
Yi0+dGFza19yZWZzKys7CiAKLQlpb19kaXNtYW50bGVfcmVxKHJlcSk7Ci0JcmItPnJlcXNb
cmItPnRvX2ZyZWUrK10gPSByZXE7Ci0JaWYgKHVubGlrZWx5KHJiLT50b19mcmVlID09IEFS
UkFZX1NJWkUocmItPnJlcXMpKSkKLQkJX19pb19yZXFfZnJlZV9iYXRjaF9mbHVzaChyZXEt
PmN0eCwgcmIpOworCWlvX3JlcV9mcmVlX2JhdGNoX2ZpbmlzaChjdHgsICZyYik7CisJc3Rh
dGUtPmNvbXBsX25yID0gMDsKIH0KIAogLyoKICAqIERyb3AgcmVmZXJlbmNlIHRvIHJlcXVl
c3QsIHJldHVybiBuZXh0IGluIGNoYWluIChpZiB0aGVyZSBpcyBvbmUpIGlmIHRoaXMKICAq
IHdhcyB0aGUgbGFzdCByZWZlcmVuY2UgdG8gdGhpcyByZXF1ZXN0LgogICovCi1zdGF0aWMg
c3RydWN0IGlvX2tpb2NiICppb19wdXRfcmVxX2ZpbmRfbmV4dChzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSkKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGlvX2tpb2NiICppb19wdXRfcmVxX2ZpbmRf
bmV4dChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKIAlzdHJ1Y3QgaW9fa2lvY2IgKm54dCA9
IE5VTEw7CiAKLQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZyZXEtPnJlZnMpKSB7CisJ
aWYgKHJlcV9yZWZfcHV0X2FuZF90ZXN0KHJlcSkpIHsKIAkJbnh0ID0gaW9fcmVxX2ZpbmRf
bmV4dChyZXEpOwogCQlfX2lvX2ZyZWVfcmVxKHJlcSk7CiAJfQogCXJldHVybiBueHQ7CiB9
CiAKLXN0YXRpYyB2b2lkIGlvX3B1dF9yZXEoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0
aWMgaW5saW5lIHZvaWQgaW9fcHV0X3JlcShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlp
ZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZyZXEtPnJlZnMpKQorCWlmIChyZXFfcmVmX3B1
dF9hbmRfdGVzdChyZXEpKQogCQlpb19mcmVlX3JlcShyZXEpOwogfQogCi1zdGF0aWMgdm9p
ZCBpb19wdXRfcmVxX2RlZmVycmVkX2NiKHN0cnVjdCBjYWxsYmFja19oZWFkICpjYikKLXsK
LQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IGNvbnRhaW5lcl9vZihjYiwgc3RydWN0IGlvX2tp
b2NiLCB0YXNrX3dvcmspOwotCi0JaW9fZnJlZV9yZXEocmVxKTsKLX0KLQotc3RhdGljIHZv
aWQgaW9fZnJlZV9yZXFfZGVmZXJyZWQoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMg
aW5saW5lIHZvaWQgaW9fcHV0X3JlcV9kZWZlcnJlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkK
IHsKLQlpbnQgcmV0OwotCi0JaW5pdF90YXNrX3dvcmsoJnJlcS0+dGFza193b3JrLCBpb19w
dXRfcmVxX2RlZmVycmVkX2NiKTsKLQlyZXQgPSBpb19yZXFfdGFza193b3JrX2FkZChyZXEs
IHRydWUpOwotCWlmICh1bmxpa2VseShyZXQpKSB7Ci0JCXN0cnVjdCB0YXNrX3N0cnVjdCAq
dHNrOwotCi0JCXRzayA9IGlvX3dxX2dldF90YXNrKHJlcS0+Y3R4LT5pb193cSk7Ci0JCXRh
c2tfd29ya19hZGQodHNrLCAmcmVxLT50YXNrX3dvcmssIFRXQV9OT05FKTsKLQkJd2FrZV91
cF9wcm9jZXNzKHRzayk7CisJaWYgKHJlcV9yZWZfcHV0X2FuZF90ZXN0KHJlcSkpIHsKKwkJ
cmVxLT5pb190YXNrX3dvcmsuZnVuYyA9IGlvX2ZyZWVfcmVxX3dvcms7CisJCWlvX3JlcV90
YXNrX3dvcmtfYWRkKHJlcSk7CiAJfQogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgaW9fcHV0
X3JlcV9kZWZlcnJlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IHJlZnMpCi17Ci0JaWYg
KHJlZmNvdW50X3N1Yl9hbmRfdGVzdChyZWZzLCAmcmVxLT5yZWZzKSkKLQkJaW9fZnJlZV9y
ZXFfZGVmZXJyZWQocmVxKTsKLX0KLQotc3RhdGljIHN0cnVjdCBpb193cV93b3JrICppb19z
dGVhbF93b3JrKHN0cnVjdCBpb19raW9jYiAqcmVxKQotewotCXN0cnVjdCBpb19raW9jYiAq
bnh0OwotCi0JLyoKLQkgKiBBIHJlZiBpcyBvd25lZCBieSBpby13cSBpbiB3aGljaCBjb250
ZXh0IHdlJ3JlLiBTbywgaWYgdGhhdCdzIHRoZQotCSAqIGxhc3Qgb25lLCBpdCdzIHNhZmUg
dG8gc3RlYWwgbmV4dCB3b3JrLiBGYWxzZSBuZWdhdGl2ZXMgYXJlIE9rLAotCSAqIGl0IGp1
c3Qgd2lsbCBiZSByZS1wdW50ZWQgYXN5bmMgaW4gaW9fcHV0X3dvcmsoKQotCSAqLwotCWlm
IChyZWZjb3VudF9yZWFkKCZyZXEtPnJlZnMpICE9IDEpCi0JCXJldHVybiBOVUxMOwotCi0J
bnh0ID0gaW9fcmVxX2ZpbmRfbmV4dChyZXEpOwotCXJldHVybiBueHQgPyAmbnh0LT53b3Jr
IDogTlVMTDsKLX0KLQotc3RhdGljIHZvaWQgaW9fZG91YmxlX3B1dF9yZXEoc3RydWN0IGlv
X2tpb2NiICpyZXEpCi17Ci0JLyogZHJvcCBib3RoIHN1Ym1pdCBhbmQgY29tcGxldGUgcmVm
ZXJlbmNlcyAqLwotCWlmIChyZWZjb3VudF9zdWJfYW5kX3Rlc3QoMiwgJnJlcS0+cmVmcykp
Ci0JCWlvX2ZyZWVfcmVxKHJlcSk7Ci19Ci0KIHN0YXRpYyB1bnNpZ25lZCBpb19jcXJpbmdf
ZXZlbnRzKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewotCXN0cnVjdCBpb19yaW5ncyAq
cmluZ3MgPSBjdHgtPnJpbmdzOwotCiAJLyogU2VlIGNvbW1lbnQgYXQgdGhlIHRvcCBvZiB0
aGlzIGZpbGUgKi8KIAlzbXBfcm1iKCk7Ci0JcmV0dXJuIGN0eC0+Y2FjaGVkX2NxX3RhaWwg
LSBSRUFEX09OQ0UocmluZ3MtPmNxLmhlYWQpOworCXJldHVybiBfX2lvX2NxcmluZ19ldmVu
dHMoY3R4KTsKIH0KIAogc3RhdGljIGlubGluZSB1bnNpZ25lZCBpbnQgaW9fc3FyaW5nX2Vu
dHJpZXMoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCkBAIC0yMzI3LDM4ICsyNDQzLDIzIEBA
IHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgaW50IGlvX3B1dF9yd19rYnVmKHN0cnVjdCBpb19r
aW9jYiAqcmVxKQogewogCXN0cnVjdCBpb19idWZmZXIgKmtidWY7CiAKKwlpZiAobGlrZWx5
KCEocmVxLT5mbGFncyAmIFJFUV9GX0JVRkZFUl9TRUxFQ1RFRCkpKQorCQlyZXR1cm4gMDsK
IAlrYnVmID0gKHN0cnVjdCBpb19idWZmZXIgKikgKHVuc2lnbmVkIGxvbmcpIHJlcS0+cncu
YWRkcjsKIAlyZXR1cm4gaW9fcHV0X2tidWYocmVxLCBrYnVmKTsKIH0KIAogc3RhdGljIGlu
bGluZSBib29sIGlvX3J1bl90YXNrX3dvcmsodm9pZCkKIHsKLQkvKgotCSAqIE5vdCBzYWZl
IHRvIHJ1biBvbiBleGl0aW5nIHRhc2ssIGFuZCB0aGUgdGFza193b3JrIGhhbmRsaW5nIHdp
bGwKLQkgKiBub3QgYWRkIHdvcmsgdG8gc3VjaCBhIHRhc2suCi0JICovCi0JaWYgKHVubGlr
ZWx5KGN1cnJlbnQtPmZsYWdzICYgUEZfRVhJVElORykpCi0JCXJldHVybiBmYWxzZTsKLQlp
ZiAoY3VycmVudC0+dGFza193b3JrcykgeworCWlmICh0ZXN0X3RocmVhZF9mbGFnKFRJRl9O
T1RJRllfU0lHTkFMKSB8fCBjdXJyZW50LT50YXNrX3dvcmtzKSB7CiAJCV9fc2V0X2N1cnJl
bnRfc3RhdGUoVEFTS19SVU5OSU5HKTsKLQkJdGFza193b3JrX3J1bigpOworCQl0cmFjZWhv
b2tfbm90aWZ5X3NpZ25hbCgpOwogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKIAlyZXR1cm4gZmFs
c2U7CiB9CiAKLXN0YXRpYyB2b2lkIGlvX2lvcG9sbF9xdWV1ZShzdHJ1Y3QgbGlzdF9oZWFk
ICphZ2FpbikKLXsKLQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcTsKLQotCWRvIHsKLQkJcmVxID0g
bGlzdF9maXJzdF9lbnRyeShhZ2Fpbiwgc3RydWN0IGlvX2tpb2NiLCBpb3BvbGxfZW50cnkp
OwotCQlsaXN0X2RlbCgmcmVxLT5pb3BvbGxfZW50cnkpOwotCQlfX2lvX2NvbXBsZXRlX3J3
KHJlcSwgLUVBR0FJTiwgMCwgTlVMTCk7Ci0JfSB3aGlsZSAoIWxpc3RfZW1wdHkoYWdhaW4p
KTsKLX0KLQogLyoKICAqIEZpbmQgYW5kIGZyZWUgY29tcGxldGVkIHBvbGwgaW9jYnMKICAq
LwpAQCAtMjM2Nyw0MSArMjQ2OCwyNSBAQCBzdGF0aWMgdm9pZCBpb19pb3BvbGxfY29tcGxl
dGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHVuc2lnbmVkIGludCAqbnJfZXZlbnRzLAog
ewogCXN0cnVjdCByZXFfYmF0Y2ggcmI7CiAJc3RydWN0IGlvX2tpb2NiICpyZXE7Ci0JTElT
VF9IRUFEKGFnYWluKTsKIAogCS8qIG9yZGVyIHdpdGggLT5yZXN1bHQgc3RvcmUgaW4gaW9f
Y29tcGxldGVfcndfaW9wb2xsKCkgKi8KIAlzbXBfcm1iKCk7CiAKIAlpb19pbml0X3JlcV9i
YXRjaCgmcmIpOwogCXdoaWxlICghbGlzdF9lbXB0eShkb25lKSkgewotCQlpbnQgY2ZsYWdz
ID0gMDsKLQotCQlyZXEgPSBsaXN0X2ZpcnN0X2VudHJ5KGRvbmUsIHN0cnVjdCBpb19raW9j
YiwgaW9wb2xsX2VudHJ5KTsKLQkJaWYgKFJFQURfT05DRShyZXEtPnJlc3VsdCkgPT0gLUVB
R0FJTikgewotCQkJcmVxLT5yZXN1bHQgPSAwOwotCQkJcmVxLT5pb3BvbGxfY29tcGxldGVk
ID0gMDsKLQkJCWxpc3RfbW92ZV90YWlsKCZyZXEtPmlvcG9sbF9lbnRyeSwgJmFnYWluKTsK
LQkJCWNvbnRpbnVlOwotCQl9Ci0JCWxpc3RfZGVsKCZyZXEtPmlvcG9sbF9lbnRyeSk7Ci0K
LQkJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9CVUZGRVJfU0VMRUNURUQpCi0JCQljZmxhZ3Mg
PSBpb19wdXRfcndfa2J1ZihyZXEpOworCQlyZXEgPSBsaXN0X2ZpcnN0X2VudHJ5KGRvbmUs
IHN0cnVjdCBpb19raW9jYiwgaW5mbGlnaHRfZW50cnkpOworCQlsaXN0X2RlbCgmcmVxLT5p
bmZsaWdodF9lbnRyeSk7CiAKLQkJX19pb19jcXJpbmdfZmlsbF9ldmVudChyZXEsIHJlcS0+
cmVzdWx0LCBjZmxhZ3MpOworCQlpb19maWxsX2NxZV9yZXEocmVxLCByZXEtPnJlc3VsdCwg
aW9fcHV0X3J3X2tidWYocmVxKSk7CiAJCSgqbnJfZXZlbnRzKSsrOwogCi0JCWlmIChyZWZj
b3VudF9kZWNfYW5kX3Rlc3QoJnJlcS0+cmVmcykpCi0JCQlpb19yZXFfZnJlZV9iYXRjaCgm
cmIsIHJlcSk7CisJCWlmIChyZXFfcmVmX3B1dF9hbmRfdGVzdChyZXEpKQorCQkJaW9fcmVx
X2ZyZWVfYmF0Y2goJnJiLCByZXEsICZjdHgtPnN1Ym1pdF9zdGF0ZSk7CiAJfQogCiAJaW9f
Y29tbWl0X2NxcmluZyhjdHgpOwotCWlmIChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NR
UE9MTCkKLQkJaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOworCWlvX2NxcmluZ19ldl9wb3N0
ZWRfaW9wb2xsKGN0eCk7CiAJaW9fcmVxX2ZyZWVfYmF0Y2hfZmluaXNoKGN0eCwgJnJiKTsK
LQotCWlmICghbGlzdF9lbXB0eSgmYWdhaW4pKQotCQlpb19pb3BvbGxfcXVldWUoJmFnYWlu
KTsKIH0KIAogc3RhdGljIGludCBpb19kb19pb3BvbGwoc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHgsIHVuc2lnbmVkIGludCAqbnJfZXZlbnRzLApAQCAtMjQxMCwxNyArMjQ5NSwxNiBAQCBz
dGF0aWMgaW50IGlvX2RvX2lvcG9sbChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdW5zaWdu
ZWQgaW50ICpucl9ldmVudHMsCiAJc3RydWN0IGlvX2tpb2NiICpyZXEsICp0bXA7CiAJTElT
VF9IRUFEKGRvbmUpOwogCWJvb2wgc3BpbjsKLQlpbnQgcmV0OwogCiAJLyoKIAkgKiBPbmx5
IHNwaW4gZm9yIGNvbXBsZXRpb25zIGlmIHdlIGRvbid0IGhhdmUgbXVsdGlwbGUgZGV2aWNl
cyBoYW5naW5nCiAJICogb2ZmIG91ciBjb21wbGV0ZSBsaXN0LCBhbmQgd2UncmUgdW5kZXIg
dGhlIHJlcXVlc3RlZCBhbW91bnQuCiAJICovCi0Jc3BpbiA9ICFjdHgtPnBvbGxfbXVsdGlf
ZmlsZSAmJiAqbnJfZXZlbnRzIDwgbWluOworCXNwaW4gPSAhY3R4LT5wb2xsX211bHRpX3F1
ZXVlICYmICpucl9ldmVudHMgPCBtaW47CiAKLQlyZXQgPSAwOwotCWxpc3RfZm9yX2VhY2hf
ZW50cnlfc2FmZShyZXEsIHRtcCwgJmN0eC0+aW9wb2xsX2xpc3QsIGlvcG9sbF9lbnRyeSkg
eworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShyZXEsIHRtcCwgJmN0eC0+aW9wb2xsX2xp
c3QsIGluZmxpZ2h0X2VudHJ5KSB7CiAJCXN0cnVjdCBraW9jYiAqa2lvY2IgPSAmcmVxLT5y
dy5raW9jYjsKKwkJaW50IHJldDsKIAogCQkvKgogCQkgKiBNb3ZlIGNvbXBsZXRlZCBhbmQg
cmV0cnlhYmxlIGVudHJpZXMgdG8gb3VyIGxvY2FsIGxpc3RzLgpAQCAtMjQyOCw1MCArMjUx
MiwyNyBAQCBzdGF0aWMgaW50IGlvX2RvX2lvcG9sbChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCwgdW5zaWduZWQgaW50ICpucl9ldmVudHMsCiAJCSAqIGFuZCBjb21wbGV0ZSB0aG9zZSBs
aXN0cyBmaXJzdCwgaWYgd2UgaGF2ZSBlbnRyaWVzIHRoZXJlLgogCQkgKi8KIAkJaWYgKFJF
QURfT05DRShyZXEtPmlvcG9sbF9jb21wbGV0ZWQpKSB7Ci0JCQlsaXN0X21vdmVfdGFpbCgm
cmVxLT5pb3BvbGxfZW50cnksICZkb25lKTsKKwkJCWxpc3RfbW92ZV90YWlsKCZyZXEtPmlu
ZmxpZ2h0X2VudHJ5LCAmZG9uZSk7CiAJCQljb250aW51ZTsKIAkJfQogCQlpZiAoIWxpc3Rf
ZW1wdHkoJmRvbmUpKQogCQkJYnJlYWs7CiAKIAkJcmV0ID0ga2lvY2ItPmtpX2ZpbHAtPmZf
b3AtPmlvcG9sbChraW9jYiwgc3Bpbik7Ci0JCWlmIChyZXQgPCAwKQotCQkJYnJlYWs7CisJ
CWlmICh1bmxpa2VseShyZXQgPCAwKSkKKwkJCXJldHVybiByZXQ7CisJCWVsc2UgaWYgKHJl
dCkKKwkJCXNwaW4gPSBmYWxzZTsKIAogCQkvKiBpb3BvbGwgbWF5IGhhdmUgY29tcGxldGVk
IGN1cnJlbnQgcmVxICovCiAJCWlmIChSRUFEX09OQ0UocmVxLT5pb3BvbGxfY29tcGxldGVk
KSkKLQkJCWxpc3RfbW92ZV90YWlsKCZyZXEtPmlvcG9sbF9lbnRyeSwgJmRvbmUpOwotCi0J
CWlmIChyZXQgJiYgc3BpbikKLQkJCXNwaW4gPSBmYWxzZTsKLQkJcmV0ID0gMDsKKwkJCWxp
c3RfbW92ZV90YWlsKCZyZXEtPmluZmxpZ2h0X2VudHJ5LCAmZG9uZSk7CiAJfQogCiAJaWYg
KCFsaXN0X2VtcHR5KCZkb25lKSkKIAkJaW9faW9wb2xsX2NvbXBsZXRlKGN0eCwgbnJfZXZl
bnRzLCAmZG9uZSk7CiAKLQlyZXR1cm4gcmV0OwotfQotCi0vKgotICogUG9sbCBmb3IgYSBt
aW5pbXVtIG9mICdtaW4nIGV2ZW50cy4gTm90ZSB0aGF0IGlmIG1pbiA9PSAwIHdlIGNvbnNp
ZGVyIHRoYXQgYQotICogbm9uLXNwaW5uaW5nIHBvbGwgY2hlY2sgLSB3ZSdsbCBzdGlsbCBl
bnRlciB0aGUgZHJpdmVyIHBvbGwgbG9vcCwgYnV0IG9ubHkKLSAqIGFzIGEgbm9uLXNwaW5u
aW5nIGNvbXBsZXRpb24gY2hlY2suCi0gKi8KLXN0YXRpYyBpbnQgaW9faW9wb2xsX2dldGV2
ZW50cyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdW5zaWduZWQgaW50ICpucl9ldmVudHMs
Ci0JCQkJbG9uZyBtaW4pCi17Ci0Jd2hpbGUgKCFsaXN0X2VtcHR5KCZjdHgtPmlvcG9sbF9s
aXN0KSAmJiAhbmVlZF9yZXNjaGVkKCkpIHsKLQkJaW50IHJldDsKLQotCQlyZXQgPSBpb19k
b19pb3BvbGwoY3R4LCBucl9ldmVudHMsIG1pbik7Ci0JCWlmIChyZXQgPCAwKQotCQkJcmV0
dXJuIHJldDsKLQkJaWYgKCpucl9ldmVudHMgPj0gbWluKQotCQkJcmV0dXJuIDA7Ci0JfQot
Ci0JcmV0dXJuIDE7CisJcmV0dXJuIDA7CiB9CiAKIC8qCkBAIC0yNTA5LDcgKzI1NzAsNyBA
QCBzdGF0aWMgdm9pZCBpb19pb3BvbGxfdHJ5X3JlYXBfZXZlbnRzKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQogc3RhdGljIGludCBpb19pb3BvbGxfY2hlY2soc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIGxvbmcgbWluKQogewogCXVuc2lnbmVkIGludCBucl9ldmVudHMgPSAwOwot
CWludCBpdGVycyA9IDAsIHJldCA9IDA7CisJaW50IHJldCA9IDA7CiAKIAkvKgogCSAqIFdl
IGRpc2FsbG93IHRoZSBhcHAgZW50ZXJpbmcgc3VibWl0L2NvbXBsZXRlIHdpdGggcG9sbGlu
ZywgYnV0IHdlCkBAIC0yNTE3LDE3ICsyNTc4LDE2IEBAIHN0YXRpYyBpbnQgaW9faW9wb2xs
X2NoZWNrKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBsb25nIG1pbikKIAkgKiB0aGF0IGdv
dCBwdW50ZWQgdG8gYSB3b3JrcXVldWUuCiAJICovCiAJbXV0ZXhfbG9jaygmY3R4LT51cmlu
Z19sb2NrKTsKKwkvKgorCSAqIERvbid0IGVudGVyIHBvbGwgbG9vcCBpZiB3ZSBhbHJlYWR5
IGhhdmUgZXZlbnRzIHBlbmRpbmcuCisJICogSWYgd2UgZG8sIHdlIGNhbiBwb3RlbnRpYWxs
eSBiZSBzcGlubmluZyBmb3IgY29tbWFuZHMgdGhhdAorCSAqIGFscmVhZHkgdHJpZ2dlcmVk
IGEgQ1FFIChlZyBpbiBlcnJvcikuCisJICovCisJaWYgKHRlc3RfYml0KDAsICZjdHgtPmNo
ZWNrX2NxX292ZXJmbG93KSkKKwkJX19pb19jcXJpbmdfb3ZlcmZsb3dfZmx1c2goY3R4LCBm
YWxzZSk7CisJaWYgKGlvX2NxcmluZ19ldmVudHMoY3R4KSkKKwkJZ290byBvdXQ7CiAJZG8g
ewotCQkvKgotCQkgKiBEb24ndCBlbnRlciBwb2xsIGxvb3AgaWYgd2UgYWxyZWFkeSBoYXZl
IGV2ZW50cyBwZW5kaW5nLgotCQkgKiBJZiB3ZSBkbywgd2UgY2FuIHBvdGVudGlhbGx5IGJl
IHNwaW5uaW5nIGZvciBjb21tYW5kcyB0aGF0Ci0JCSAqIGFscmVhZHkgdHJpZ2dlcmVkIGEg
Q1FFIChlZyBpbiBlcnJvcikuCi0JCSAqLwotCQlpZiAodGVzdF9iaXQoMCwgJmN0eC0+Y3Ff
Y2hlY2tfb3ZlcmZsb3cpKQotCQkJX19pb19jcXJpbmdfb3ZlcmZsb3dfZmx1c2goY3R4LCBm
YWxzZSwgTlVMTCwgTlVMTCk7Ci0JCWlmIChpb19jcXJpbmdfZXZlbnRzKGN0eCkpCi0JCQli
cmVhazsKLQogCQkvKgogCQkgKiBJZiBhIHN1Ym1pdCBnb3QgcHVudGVkIHRvIGEgd29ya3F1
ZXVlLCB3ZSBjYW4gaGF2ZSB0aGUKIAkJICogYXBwbGljYXRpb24gZW50ZXJpbmcgcG9sbGlu
ZyBmb3IgYSBjb21tYW5kIGJlZm9yZSBpdCBnZXRzCkBAIC0yNTM4LDE4ICsyNTk4LDIxIEBA
IHN0YXRpYyBpbnQgaW9faW9wb2xsX2NoZWNrKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBs
b25nIG1pbikKIAkJICogZm9yZXZlciwgd2hpbGUgdGhlIHdvcmtxdWV1ZSBpcyBzdHVjayB0
cnlpbmcgdG8gYWNxdWlyZSB0aGUKIAkJICogdmVyeSBzYW1lIG11dGV4LgogCQkgKi8KLQkJ
aWYgKCEoKytpdGVycyAmIDcpKSB7CisJCWlmIChsaXN0X2VtcHR5KCZjdHgtPmlvcG9sbF9s
aXN0KSkgeworCQkJdTMyIHRhaWwgPSBjdHgtPmNhY2hlZF9jcV90YWlsOworCiAJCQltdXRl
eF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAJCQlpb19ydW5fdGFza193b3JrKCk7CiAJ
CQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCQl9Ci0KLQkJcmV0ID0gaW9faW9w
b2xsX2dldGV2ZW50cyhjdHgsICZucl9ldmVudHMsIG1pbik7Ci0JCWlmIChyZXQgPD0gMCkK
LQkJCWJyZWFrOwotCQlyZXQgPSAwOwotCX0gd2hpbGUgKG1pbiAmJiAhbnJfZXZlbnRzICYm
ICFuZWVkX3Jlc2NoZWQoKSk7CiAKKwkJCS8qIHNvbWUgcmVxdWVzdHMgZG9uJ3QgZ28gdGhy
b3VnaCBpb3BvbGxfbGlzdCAqLworCQkJaWYgKHRhaWwgIT0gY3R4LT5jYWNoZWRfY3FfdGFp
bCB8fAorCQkJICAgIGxpc3RfZW1wdHkoJmN0eC0+aW9wb2xsX2xpc3QpKQorCQkJCWJyZWFr
OworCQl9CisJCXJldCA9IGlvX2RvX2lvcG9sbChjdHgsICZucl9ldmVudHMsIG1pbik7CisJ
fSB3aGlsZSAoIXJldCAmJiBucl9ldmVudHMgPCBtaW4gJiYgIW5lZWRfcmVzY2hlZCgpKTsK
K291dDoKIAltdXRleF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAJcmV0dXJuIHJldDsK
IH0KQEAgLTI1NjEsNzkgKzI2MjQsMTI5IEBAIHN0YXRpYyB2b2lkIGtpb2NiX2VuZF93cml0
ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIAkgKiB0aHJlYWQuCiAJICovCiAJaWYgKHJlcS0+
ZmxhZ3MgJiBSRVFfRl9JU1JFRykgewotCQlzdHJ1Y3QgaW5vZGUgKmlub2RlID0gZmlsZV9p
bm9kZShyZXEtPmZpbGUpOworCQlzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiID0gZmlsZV9pbm9k
ZShyZXEtPmZpbGUpLT5pX3NiOwogCi0JCV9fc2Jfd3JpdGVyc19hY3F1aXJlZChpbm9kZS0+
aV9zYiwgU0JfRlJFRVpFX1dSSVRFKTsKKwkJX19zYl93cml0ZXJzX2FjcXVpcmVkKHNiLCBT
Ql9GUkVFWkVfV1JJVEUpOworCQlzYl9lbmRfd3JpdGUoc2IpOwogCX0KLQlmaWxlX2VuZF93
cml0ZShyZXEtPmZpbGUpOwotfQotCi1zdGF0aWMgdm9pZCBpb19jb21wbGV0ZV9yd19jb21t
b24oc3RydWN0IGtpb2NiICpraW9jYiwgbG9uZyByZXMsCi0JCQkJICBzdHJ1Y3QgaW9fY29t
cF9zdGF0ZSAqY3MpCi17Ci0Jc3RydWN0IGlvX2tpb2NiICpyZXEgPSBjb250YWluZXJfb2Yo
a2lvY2IsIHN0cnVjdCBpb19raW9jYiwgcncua2lvY2IpOwotCWludCBjZmxhZ3MgPSAwOwot
Ci0JaWYgKGtpb2NiLT5raV9mbGFncyAmIElPQ0JfV1JJVEUpCi0JCWtpb2NiX2VuZF93cml0
ZShyZXEpOwotCi0JaWYgKHJlcyAhPSByZXEtPnJlc3VsdCkKLQkJcmVxX3NldF9mYWlsX2xp
bmtzKHJlcSk7Ci0JaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9CVUZGRVJfU0VMRUNURUQpCi0J
CWNmbGFncyA9IGlvX3B1dF9yd19rYnVmKHJlcSk7Ci0JX19pb19yZXFfY29tcGxldGUocmVx
LCByZXMsIGNmbGFncywgY3MpOwogfQogCiAjaWZkZWYgQ09ORklHX0JMT0NLCi1zdGF0aWMg
Ym9vbCBpb19yZXN1Ym1pdF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBpbnQgZXJyb3Ip
CitzdGF0aWMgYm9vbCBpb19yZXN1Ym1pdF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxKQog
ewotCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOwotCXJldHVybiBmYWxzZTsKKwlzdHJ1Y3Qg
aW9fYXN5bmNfcncgKnJ3ID0gcmVxLT5hc3luY19kYXRhOworCisJaWYgKCFydykKKwkJcmV0
dXJuICFpb19yZXFfcHJlcF9hc3luYyhyZXEpOworCWlvdl9pdGVyX3Jlc3RvcmUoJnJ3LT5p
dGVyLCAmcnctPml0ZXJfc3RhdGUpOworCXJldHVybiB0cnVlOwogfQotI2VuZGlmCiAKLXN0
YXRpYyBib29sIGlvX3J3X3JlaXNzdWUoc3RydWN0IGlvX2tpb2NiICpyZXEsIGxvbmcgcmVz
KQorc3RhdGljIGJvb2wgaW9fcndfc2hvdWxkX3JlaXNzdWUoc3RydWN0IGlvX2tpb2NiICpy
ZXEpCiB7Ci0jaWZkZWYgQ09ORklHX0JMT0NLCiAJdW1vZGVfdCBtb2RlID0gZmlsZV9pbm9k
ZShyZXEtPmZpbGUpLT5pX21vZGU7Ci0JaW50IHJldDsKKwlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCA9IHJlcS0+Y3R4OwogCiAJaWYgKCFTX0lTQkxLKG1vZGUpICYmICFTX0lTUkVHKG1v
ZGUpKQogCQlyZXR1cm4gZmFsc2U7Ci0JaWYgKChyZXMgIT0gLUVBR0FJTiAmJiByZXMgIT0g
LUVPUE5PVFNVUFApIHx8IGlvX3dxX2N1cnJlbnRfaXNfd29ya2VyKCkpCisJaWYgKChyZXEt
PmZsYWdzICYgUkVRX0ZfTk9XQUlUKSB8fCAoaW9fd3FfY3VycmVudF9pc193b3JrZXIoKSAm
JgorCSAgICAhKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkpCiAJCXJldHVy
biBmYWxzZTsKIAkvKgogCSAqIElmIHJlZiBpcyBkeWluZywgd2UgbWlnaHQgYmUgcnVubmlu
ZyBwb2xsIHJlYXAgZnJvbSB0aGUgZXhpdCB3b3JrLgogCSAqIERvbid0IGF0dGVtcHQgdG8g
cmVpc3N1ZSBmcm9tIHRoYXQgcGF0aCwganVzdCBsZXQgaXQgZmFpbCB3aXRoCiAJICogLUVB
R0FJTi4KIAkgKi8KLQlpZiAocGVyY3B1X3JlZl9pc19keWluZygmcmVxLT5jdHgtPnJlZnMp
KQorCWlmIChwZXJjcHVfcmVmX2lzX2R5aW5nKCZjdHgtPnJlZnMpKQorCQlyZXR1cm4gZmFs
c2U7CisJLyoKKwkgKiBQbGF5IGl0IHNhZmUgYW5kIGFzc3VtZSBub3Qgc2FmZSB0byByZS1p
bXBvcnQgYW5kIHJlaXNzdWUgaWYgd2UncmUKKwkgKiBub3QgaW4gdGhlIG9yaWdpbmFsIHRo
cmVhZCBncm91cCAob3IgaW4gdGFzayBjb250ZXh0KS4KKwkgKi8KKwlpZiAoIXNhbWVfdGhy
ZWFkX2dyb3VwKHJlcS0+dGFzaywgY3VycmVudCkgfHwgIWluX3Rhc2soKSkKIAkJcmV0dXJu
IGZhbHNlOworCXJldHVybiB0cnVlOworfQorI2Vsc2UKK3N0YXRpYyBib29sIGlvX3Jlc3Vi
bWl0X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEpCit7CisJcmV0dXJuIGZhbHNlOworfQor
c3RhdGljIGJvb2wgaW9fcndfc2hvdWxkX3JlaXNzdWUoc3RydWN0IGlvX2tpb2NiICpyZXEp
Cit7CisJcmV0dXJuIGZhbHNlOworfQorI2VuZGlmCisKK3N0YXRpYyBib29sIF9faW9fY29t
cGxldGVfcndfY29tbW9uKHN0cnVjdCBpb19raW9jYiAqcmVxLCBsb25nIHJlcykKK3sKKwlp
ZiAocmVxLT5ydy5raW9jYi5raV9mbGFncyAmIElPQ0JfV1JJVEUpIHsKKwkJa2lvY2JfZW5k
X3dyaXRlKHJlcSk7CisJCWZzbm90aWZ5X21vZGlmeShyZXEtPmZpbGUpOworCX0gZWxzZSB7
CisJCWZzbm90aWZ5X2FjY2VzcyhyZXEtPmZpbGUpOworCX0KKwlpZiAocmVzICE9IHJlcS0+
cmVzdWx0KSB7CisJCWlmICgocmVzID09IC1FQUdBSU4gfHwgcmVzID09IC1FT1BOT1RTVVBQ
KSAmJgorCQkgICAgaW9fcndfc2hvdWxkX3JlaXNzdWUocmVxKSkgeworCQkJcmVxLT5mbGFn
cyB8PSBSRVFfRl9SRUlTU1VFOworCQkJcmV0dXJuIHRydWU7CisJCX0KKwkJcmVxX3NldF9m
YWlsKHJlcSk7CisJCXJlcS0+cmVzdWx0ID0gcmVzOworCX0KKwlyZXR1cm4gZmFsc2U7Cit9
CiAKLQlyZXQgPSBpb19zcV90aHJlYWRfYWNxdWlyZV9tbShyZXEtPmN0eCwgcmVxKTsKK3N0
YXRpYyBpbmxpbmUgaW50IGlvX2ZpeHVwX3J3X3JlcyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
dW5zaWduZWQgcmVzKQoreworCXN0cnVjdCBpb19hc3luY19ydyAqaW8gPSByZXEtPmFzeW5j
X2RhdGE7CiAKLQlpZiAoaW9fcmVzdWJtaXRfcHJlcChyZXEsIHJldCkpIHsKLQkJcmVmY291
bnRfaW5jKCZyZXEtPnJlZnMpOwotCQlpb19xdWV1ZV9hc3luY193b3JrKHJlcSk7Ci0JCXJl
dHVybiB0cnVlOworCS8qIGFkZCBwcmV2aW91c2x5IGRvbmUgSU8sIGlmIGFueSAqLworCWlm
IChpbyAmJiBpby0+Ynl0ZXNfZG9uZSA+IDApIHsKKwkJaWYgKHJlcyA8IDApCisJCQlyZXMg
PSBpby0+Ynl0ZXNfZG9uZTsKKwkJZWxzZQorCQkJcmVzICs9IGlvLT5ieXRlc19kb25lOwog
CX0KKwlyZXR1cm4gcmVzOworfQogCi0jZW5kaWYKLQlyZXR1cm4gZmFsc2U7CitzdGF0aWMg
dm9pZCBpb19yZXFfdGFza19jb21wbGV0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCAq
bG9ja2VkKQoreworCXVuc2lnbmVkIGludCBjZmxhZ3MgPSBpb19wdXRfcndfa2J1ZihyZXEp
OworCWludCByZXMgPSByZXEtPnJlc3VsdDsKKworCWlmICgqbG9ja2VkKSB7CisJCXN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CisJCXN0cnVjdCBpb19zdWJtaXRfc3Rh
dGUgKnN0YXRlID0gJmN0eC0+c3VibWl0X3N0YXRlOworCisJCWlvX3JlcV9jb21wbGV0ZV9z
dGF0ZShyZXEsIHJlcywgY2ZsYWdzKTsKKwkJc3RhdGUtPmNvbXBsX3JlcXNbc3RhdGUtPmNv
bXBsX25yKytdID0gcmVxOworCQlpZiAoc3RhdGUtPmNvbXBsX25yID09IEFSUkFZX1NJWkUo
c3RhdGUtPmNvbXBsX3JlcXMpKQorCQkJaW9fc3VibWl0X2ZsdXNoX2NvbXBsZXRpb25zKGN0
eCk7CisJfSBlbHNlIHsKKwkJaW9fcmVxX2NvbXBsZXRlX3Bvc3QocmVxLCByZXMsIGNmbGFn
cyk7CisJfQogfQogCiBzdGF0aWMgdm9pZCBfX2lvX2NvbXBsZXRlX3J3KHN0cnVjdCBpb19r
aW9jYiAqcmVxLCBsb25nIHJlcywgbG9uZyByZXMyLAotCQkJICAgICBzdHJ1Y3QgaW9fY29t
cF9zdGF0ZSAqY3MpCisJCQkgICAgIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKLQlp
ZiAoIWlvX3J3X3JlaXNzdWUocmVxLCByZXMpKQotCQlpb19jb21wbGV0ZV9yd19jb21tb24o
JnJlcS0+cncua2lvY2IsIHJlcywgY3MpOworCWlmIChfX2lvX2NvbXBsZXRlX3J3X2NvbW1v
bihyZXEsIHJlcykpCisJCXJldHVybjsKKwlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3Vl
X2ZsYWdzLCBpb19maXh1cF9yd19yZXMocmVxLCByZXMpLCBpb19wdXRfcndfa2J1ZihyZXEp
KTsKIH0KIAogc3RhdGljIHZvaWQgaW9fY29tcGxldGVfcncoc3RydWN0IGtpb2NiICpraW9j
YiwgbG9uZyByZXMsIGxvbmcgcmVzMikKIHsKIAlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IGNv
bnRhaW5lcl9vZihraW9jYiwgc3RydWN0IGlvX2tpb2NiLCBydy5raW9jYik7CiAKLQlfX2lv
X2NvbXBsZXRlX3J3KHJlcSwgcmVzLCByZXMyLCBOVUxMKTsKKwlpZiAoX19pb19jb21wbGV0
ZV9yd19jb21tb24ocmVxLCByZXMpKQorCQlyZXR1cm47CisJcmVxLT5yZXN1bHQgPSBpb19m
aXh1cF9yd19yZXMocmVxLCByZXMpOworCXJlcS0+aW9fdGFza193b3JrLmZ1bmMgPSBpb19y
ZXFfdGFza19jb21wbGV0ZTsKKwlpb19yZXFfdGFza193b3JrX2FkZChyZXEpOwogfQogCiBz
dGF0aWMgdm9pZCBpb19jb21wbGV0ZV9yd19pb3BvbGwoc3RydWN0IGtpb2NiICpraW9jYiwg
bG9uZyByZXMsIGxvbmcgcmVzMikKQEAgLTI2NDIsMTIgKzI3NTUsMTUgQEAgc3RhdGljIHZv
aWQgaW9fY29tcGxldGVfcndfaW9wb2xsKHN0cnVjdCBraW9jYiAqa2lvY2IsIGxvbmcgcmVz
LCBsb25nIHJlczIpCiAKIAlpZiAoa2lvY2ItPmtpX2ZsYWdzICYgSU9DQl9XUklURSkKIAkJ
a2lvY2JfZW5kX3dyaXRlKHJlcSk7Ci0KLQlpZiAocmVzICE9IC1FQUdBSU4gJiYgcmVzICE9
IHJlcS0+cmVzdWx0KQotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKKwlpZiAodW5saWtl
bHkocmVzICE9IHJlcS0+cmVzdWx0KSkgeworCQlpZiAocmVzID09IC1FQUdBSU4gJiYgaW9f
cndfc2hvdWxkX3JlaXNzdWUocmVxKSkgeworCQkJcmVxLT5mbGFncyB8PSBSRVFfRl9SRUlT
U1VFOworCQkJcmV0dXJuOworCQl9CisJfQogCiAJV1JJVEVfT05DRShyZXEtPnJlc3VsdCwg
cmVzKTsKLQkvKiBvcmRlciB3aXRoIGlvX3BvbGxfY29tcGxldGUoKSBjaGVja2luZyAtPnJl
c3VsdCAqLworCS8qIG9yZGVyIHdpdGggaW9faW9wb2xsX2NvbXBsZXRlKCkgY2hlY2tpbmcg
LT5yZXN1bHQgKi8KIAlzbXBfd21iKCk7CiAJV1JJVEVfT05DRShyZXEtPmlvcG9sbF9jb21w
bGV0ZWQsIDEpOwogfQpAQCAtMjY1NSwxMiArMjc3MSwxNyBAQCBzdGF0aWMgdm9pZCBpb19j
b21wbGV0ZV9yd19pb3BvbGwoc3RydWN0IGtpb2NiICpraW9jYiwgbG9uZyByZXMsIGxvbmcg
cmVzMikKIC8qCiAgKiBBZnRlciB0aGUgaW9jYiBoYXMgYmVlbiBpc3N1ZWQsIGl0J3Mgc2Fm
ZSB0byBiZSBmb3VuZCBvbiB0aGUgcG9sbCBsaXN0LgogICogQWRkaW5nIHRoZSBraW9jYiB0
byB0aGUgbGlzdCBBRlRFUiBzdWJtaXNzaW9uIGVuc3VyZXMgdGhhdCB3ZSBkb24ndAotICog
ZmluZCBpdCBmcm9tIGEgaW9faW9wb2xsX2dldGV2ZW50cygpIHRocmVhZCBiZWZvcmUgdGhl
IGlzc3VlciBpcyBkb25lCisgKiBmaW5kIGl0IGZyb20gYSBpb19kb19pb3BvbGwoKSB0aHJl
YWQgYmVmb3JlIHRoZSBpc3N1ZXIgaXMgZG9uZQogICogYWNjZXNzaW5nIHRoZSBraW9jYiBj
b29raWUuCiAgKi8KIHN0YXRpYyB2b2lkIGlvX2lvcG9sbF9yZXFfaXNzdWVkKHN0cnVjdCBp
b19raW9jYiAqcmVxKQogewogCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7
CisJY29uc3QgYm9vbCBpbl9hc3luYyA9IGlvX3dxX2N1cnJlbnRfaXNfd29ya2VyKCk7CisK
KwkvKiB3b3JrcXVldWUgY29udGV4dCBkb2Vzbid0IGhvbGQgdXJpbmdfbG9jaywgZ3JhYiBp
dCBub3cgKi8KKwlpZiAodW5saWtlbHkoaW5fYXN5bmMpKQorCQltdXRleF9sb2NrKCZjdHgt
PnVyaW5nX2xvY2spOwogCiAJLyoKIAkgKiBUcmFjayB3aGV0aGVyIHdlIGhhdmUgbXVsdGlw
bGUgZmlsZXMgaW4gb3VyIGxpc3RzLiBUaGlzIHdpbGwgaW1wYWN0CkBAIC0yNjY4LDE0ICsy
Nzg5LDIyIEBAIHN0YXRpYyB2b2lkIGlvX2lvcG9sbF9yZXFfaXNzdWVkKHN0cnVjdCBpb19r
aW9jYiAqcmVxKQogCSAqIGRpZmZlcmVudCBkZXZpY2VzLgogCSAqLwogCWlmIChsaXN0X2Vt
cHR5KCZjdHgtPmlvcG9sbF9saXN0KSkgewotCQljdHgtPnBvbGxfbXVsdGlfZmlsZSA9IGZh
bHNlOwotCX0gZWxzZSBpZiAoIWN0eC0+cG9sbF9tdWx0aV9maWxlKSB7CisJCWN0eC0+cG9s
bF9tdWx0aV9xdWV1ZSA9IGZhbHNlOworCX0gZWxzZSBpZiAoIWN0eC0+cG9sbF9tdWx0aV9x
dWV1ZSkgewogCQlzdHJ1Y3QgaW9fa2lvY2IgKmxpc3RfcmVxOworCQl1bnNpZ25lZCBpbnQg
cXVldWVfbnVtMCwgcXVldWVfbnVtMTsKIAogCQlsaXN0X3JlcSA9IGxpc3RfZmlyc3RfZW50
cnkoJmN0eC0+aW9wb2xsX2xpc3QsIHN0cnVjdCBpb19raW9jYiwKLQkJCQkJCWlvcG9sbF9l
bnRyeSk7Ci0JCWlmIChsaXN0X3JlcS0+ZmlsZSAhPSByZXEtPmZpbGUpCi0JCQljdHgtPnBv
bGxfbXVsdGlfZmlsZSA9IHRydWU7CisJCQkJCQlpbmZsaWdodF9lbnRyeSk7CisKKwkJaWYg
KGxpc3RfcmVxLT5maWxlICE9IHJlcS0+ZmlsZSkgeworCQkJY3R4LT5wb2xsX211bHRpX3F1
ZXVlID0gdHJ1ZTsKKwkJfSBlbHNlIHsKKwkJCXF1ZXVlX251bTAgPSBibGtfcWNfdF90b19x
dWV1ZV9udW0obGlzdF9yZXEtPnJ3Lmtpb2NiLmtpX2Nvb2tpZSk7CisJCQlxdWV1ZV9udW0x
ID0gYmxrX3FjX3RfdG9fcXVldWVfbnVtKHJlcS0+cncua2lvY2Iua2lfY29va2llKTsKKwkJ
CWlmIChxdWV1ZV9udW0wICE9IHF1ZXVlX251bTEpCisJCQkJY3R4LT5wb2xsX211bHRpX3F1
ZXVlID0gdHJ1ZTsKKwkJfQogCX0KIAogCS8qCkBAIC0yNjgzLDYxICsyODEyLDI4IEBAIHN0
YXRpYyB2b2lkIGlvX2lvcG9sbF9yZXFfaXNzdWVkKHN0cnVjdCBpb19raW9jYiAqcmVxKQog
CSAqIGl0IHRvIHRoZSBmcm9udCBzbyB3ZSBmaW5kIGl0IGZpcnN0LgogCSAqLwogCWlmIChS
RUFEX09OQ0UocmVxLT5pb3BvbGxfY29tcGxldGVkKSkKLQkJbGlzdF9hZGQoJnJlcS0+aW9w
b2xsX2VudHJ5LCAmY3R4LT5pb3BvbGxfbGlzdCk7CisJCWxpc3RfYWRkKCZyZXEtPmluZmxp
Z2h0X2VudHJ5LCAmY3R4LT5pb3BvbGxfbGlzdCk7CiAJZWxzZQotCQlsaXN0X2FkZF90YWls
KCZyZXEtPmlvcG9sbF9lbnRyeSwgJmN0eC0+aW9wb2xsX2xpc3QpOwotCi0JaWYgKChjdHgt
PmZsYWdzICYgSU9SSU5HX1NFVFVQX1NRUE9MTCkgJiYKLQkgICAgd3FfaGFzX3NsZWVwZXIo
JmN0eC0+c3FfZGF0YS0+d2FpdCkpCi0JCXdha2VfdXAoJmN0eC0+c3FfZGF0YS0+d2FpdCk7
Ci19Ci0KLXN0YXRpYyB2b2lkIF9faW9fc3RhdGVfZmlsZV9wdXQoc3RydWN0IGlvX3N1Ym1p
dF9zdGF0ZSAqc3RhdGUpCi17Ci0JaWYgKHN0YXRlLT5oYXNfcmVmcykKLQkJZnB1dF9tYW55
KHN0YXRlLT5maWxlLCBzdGF0ZS0+aGFzX3JlZnMpOwotCXN0YXRlLT5maWxlID0gTlVMTDsK
LX0KLQotc3RhdGljIGlubGluZSB2b2lkIGlvX3N0YXRlX2ZpbGVfcHV0KHN0cnVjdCBpb19z
dWJtaXRfc3RhdGUgKnN0YXRlKQotewotCWlmIChzdGF0ZS0+ZmlsZSkKLQkJX19pb19zdGF0
ZV9maWxlX3B1dChzdGF0ZSk7Ci19CisJCWxpc3RfYWRkX3RhaWwoJnJlcS0+aW5mbGlnaHRf
ZW50cnksICZjdHgtPmlvcG9sbF9saXN0KTsKIAotLyoKLSAqIEdldCBhcyBtYW55IHJlZmVy
ZW5jZXMgdG8gYSBmaWxlIGFzIHdlIGhhdmUgSU9zIGxlZnQgaW4gdGhpcyBzdWJtaXNzaW9u
LAotICogYXNzdW1pbmcgbW9zdCBzdWJtaXNzaW9ucyBhcmUgZm9yIG9uZSBmaWxlLCBvciBh
dCBsZWFzdCB0aGF0IGVhY2ggZmlsZQotICogaGFzIG1vcmUgdGhhbiBvbmUgc3VibWlzc2lv
bi4KLSAqLwotc3RhdGljIHN0cnVjdCBmaWxlICpfX2lvX2ZpbGVfZ2V0KHN0cnVjdCBpb19z
dWJtaXRfc3RhdGUgKnN0YXRlLCBpbnQgZmQpCi17Ci0JaWYgKCFzdGF0ZSkKLQkJcmV0dXJu
IGZnZXQoZmQpOworCWlmICh1bmxpa2VseShpbl9hc3luYykpIHsKKwkJLyoKKwkJICogSWYg
SU9SSU5HX1NFVFVQX1NRUE9MTCBpcyBlbmFibGVkLCBzcWVzIGFyZSBlaXRoZXIgaGFuZGxl
CisJCSAqIGluIHNxIHRocmVhZCB0YXNrIGNvbnRleHQgb3IgaW4gaW8gd29ya2VyIHRhc2sg
Y29udGV4dC4gSWYKKwkJICogY3VycmVudCB0YXNrIGNvbnRleHQgaXMgc3EgdGhyZWFkLCB3
ZSBkb24ndCBuZWVkIHRvIGNoZWNrCisJCSAqIHdoZXRoZXIgc2hvdWxkIHdha2UgdXAgc3Eg
dGhyZWFkLgorCQkgKi8KKwkJaWYgKChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NRUE9M
TCkgJiYKKwkJICAgIHdxX2hhc19zbGVlcGVyKCZjdHgtPnNxX2RhdGEtPndhaXQpKQorCQkJ
d2FrZV91cCgmY3R4LT5zcV9kYXRhLT53YWl0KTsKIAotCWlmIChzdGF0ZS0+ZmlsZSkgewot
CQlpZiAoc3RhdGUtPmZkID09IGZkKSB7Ci0JCQlzdGF0ZS0+aGFzX3JlZnMtLTsKLQkJCXJl
dHVybiBzdGF0ZS0+ZmlsZTsKLQkJfQotCQlfX2lvX3N0YXRlX2ZpbGVfcHV0KHN0YXRlKTsK
KwkJbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwogCX0KLQlzdGF0ZS0+ZmlsZSA9
IGZnZXRfbWFueShmZCwgc3RhdGUtPmlvc19sZWZ0KTsKLQlpZiAoIXN0YXRlLT5maWxlKQot
CQlyZXR1cm4gTlVMTDsKLQotCXN0YXRlLT5mZCA9IGZkOwotCXN0YXRlLT5oYXNfcmVmcyA9
IHN0YXRlLT5pb3NfbGVmdCAtIDE7Ci0JcmV0dXJuIHN0YXRlLT5maWxlOwogfQogCiBzdGF0
aWMgYm9vbCBpb19iZGV2X25vd2FpdChzdHJ1Y3QgYmxvY2tfZGV2aWNlICpiZGV2KQogewot
I2lmZGVmIENPTkZJR19CTE9DSwogCXJldHVybiAhYmRldiB8fCBibGtfcXVldWVfbm93YWl0
KGJkZXZfZ2V0X3F1ZXVlKGJkZXYpKTsKLSNlbHNlCi0JcmV0dXJuIHRydWU7Ci0jZW5kaWYK
IH0KIAogLyoKQEAgLTI3NDUsMTkgKzI4NDEsMjEgQEAgc3RhdGljIGJvb2wgaW9fYmRldl9u
b3dhaXQoc3RydWN0IGJsb2NrX2RldmljZSAqYmRldikKICAqIGFueSBmaWxlLiBGb3Igbm93
LCBqdXN0IGVuc3VyZSB0aGF0IGFueXRoaW5nIHBvdGVudGlhbGx5IHByb2JsZW1hdGljIGlz
IGRvbmUKICAqIGlubGluZS4KICAqLwotc3RhdGljIGJvb2wgaW9fZmlsZV9zdXBwb3J0c19h
c3luYyhzdHJ1Y3QgZmlsZSAqZmlsZSwgaW50IHJ3KQorc3RhdGljIGJvb2wgX19pb19maWxl
X3N1cHBvcnRzX25vd2FpdChzdHJ1Y3QgZmlsZSAqZmlsZSwgaW50IHJ3KQogewogCXVtb2Rl
X3QgbW9kZSA9IGZpbGVfaW5vZGUoZmlsZSktPmlfbW9kZTsKIAogCWlmIChTX0lTQkxLKG1v
ZGUpKSB7Ci0JCWlmIChpb19iZGV2X25vd2FpdChmaWxlLT5mX2lub2RlLT5pX2JkZXYpKQor
CQlpZiAoSVNfRU5BQkxFRChDT05GSUdfQkxPQ0spICYmCisJCSAgICBpb19iZGV2X25vd2Fp
dChJX0JERVYoZmlsZS0+Zl9tYXBwaW5nLT5ob3N0KSkpCiAJCQlyZXR1cm4gdHJ1ZTsKIAkJ
cmV0dXJuIGZhbHNlOwogCX0KIAlpZiAoU19JU1NPQ0sobW9kZSkpCiAJCXJldHVybiB0cnVl
OwogCWlmIChTX0lTUkVHKG1vZGUpKSB7Ci0JCWlmIChpb19iZGV2X25vd2FpdChmaWxlLT5m
X2lub2RlLT5pX3NiLT5zX2JkZXYpICYmCisJCWlmIChJU19FTkFCTEVEKENPTkZJR19CTE9D
SykgJiYKKwkJICAgIGlvX2JkZXZfbm93YWl0KGZpbGUtPmZfaW5vZGUtPmlfc2ItPnNfYmRl
dikgJiYKIAkJICAgIGZpbGUtPmZfb3AgIT0gJmlvX3VyaW5nX2ZvcHMpCiAJCQlyZXR1cm4g
dHJ1ZTsKIAkJcmV0dXJuIGZhbHNlOwpAQCAtMjc3NiwyMCArMjg3NCwzNiBAQCBzdGF0aWMg
Ym9vbCBpb19maWxlX3N1cHBvcnRzX2FzeW5jKHN0cnVjdCBmaWxlICpmaWxlLCBpbnQgcncp
CiAJcmV0dXJuIGZpbGUtPmZfb3AtPndyaXRlX2l0ZXIgIT0gTlVMTDsKIH0KIAotc3RhdGlj
IGludCBpb19wcmVwX3J3KHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9f
dXJpbmdfc3FlICpzcWUpCitzdGF0aWMgYm9vbCBpb19maWxlX3N1cHBvcnRzX25vd2FpdChz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IHJ3KQoreworCWlmIChydyA9PSBSRUFEICYmIChy
ZXEtPmZsYWdzICYgUkVRX0ZfTk9XQUlUX1JFQUQpKQorCQlyZXR1cm4gdHJ1ZTsKKwllbHNl
IGlmIChydyA9PSBXUklURSAmJiAocmVxLT5mbGFncyAmIFJFUV9GX05PV0FJVF9XUklURSkp
CisJCXJldHVybiB0cnVlOworCisJcmV0dXJuIF9faW9fZmlsZV9zdXBwb3J0c19ub3dhaXQo
cmVxLT5maWxlLCBydyk7Cit9CisKK3N0YXRpYyBpbnQgaW9fcHJlcF9ydyhzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3FlLAorCQkgICAgICBp
bnQgcncpCiB7CiAJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsKIAlzdHJ1
Y3Qga2lvY2IgKmtpb2NiID0gJnJlcS0+cncua2lvY2I7CisJc3RydWN0IGZpbGUgKmZpbGUg
PSByZXEtPmZpbGU7CiAJdW5zaWduZWQgaW9wcmlvOwogCWludCByZXQ7CiAKLQlpZiAoU19J
U1JFRyhmaWxlX2lub2RlKHJlcS0+ZmlsZSktPmlfbW9kZSkpCisJaWYgKCFpb19yZXFfZmZz
X3NldChyZXEpICYmIFNfSVNSRUcoZmlsZV9pbm9kZShmaWxlKS0+aV9tb2RlKSkKIAkJcmVx
LT5mbGFncyB8PSBSRVFfRl9JU1JFRzsKIAogCWtpb2NiLT5raV9wb3MgPSBSRUFEX09OQ0Uo
c3FlLT5vZmYpOwotCWlmIChraW9jYi0+a2lfcG9zID09IC0xICYmICEocmVxLT5maWxlLT5m
X21vZGUgJiBGTU9ERV9TVFJFQU0pKSB7Ci0JCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfQ1VSX1BP
UzsKLQkJa2lvY2ItPmtpX3BvcyA9IHJlcS0+ZmlsZS0+Zl9wb3M7CisJaWYgKGtpb2NiLT5r
aV9wb3MgPT0gLTEpIHsKKwkJaWYgKCEoZmlsZS0+Zl9tb2RlICYgRk1PREVfU1RSRUFNKSkg
eworCQkJcmVxLT5mbGFncyB8PSBSRVFfRl9DVVJfUE9TOworCQkJa2lvY2ItPmtpX3BvcyA9
IGZpbGUtPmZfcG9zOworCQl9IGVsc2UgeworCQkJa2lvY2ItPmtpX3BvcyA9IDA7CisJCX0K
IAl9CiAJa2lvY2ItPmtpX2hpbnQgPSBraV9oaW50X3ZhbGlkYXRlKGZpbGVfd3JpdGVfaGlu
dChraW9jYi0+a2lfZmlscCkpOwogCWtpb2NiLT5raV9mbGFncyA9IGlvY2JfZmxhZ3Moa2lv
Y2ItPmtpX2ZpbHApOwpAQCAtMjc5Nyw2ICsyOTExLDE1IEBAIHN0YXRpYyBpbnQgaW9fcHJl
cF9ydyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAq
c3FlKQogCWlmICh1bmxpa2VseShyZXQpKQogCQlyZXR1cm4gcmV0OwogCisJLyoKKwkgKiBJ
ZiB0aGUgZmlsZSBpcyBtYXJrZWQgT19OT05CTE9DSywgc3RpbGwgYWxsb3cgcmV0cnkgZm9y
IGl0IGlmIGl0CisJICogc3VwcG9ydHMgYXN5bmMuIE90aGVyd2lzZSBpdCdzIGltcG9zc2li
bGUgdG8gdXNlIE9fTk9OQkxPQ0sgZmlsZXMKKwkgKiByZWxpYWJseS4gSWYgbm90LCBvciBp
dCBJT0NCX05PV0FJVCBpcyBzZXQsIGRvbid0IHJldHJ5LgorCSAqLworCWlmICgoa2lvY2It
PmtpX2ZsYWdzICYgSU9DQl9OT1dBSVQpIHx8CisJICAgICgoZmlsZS0+Zl9mbGFncyAmIE9f
Tk9OQkxPQ0spICYmICFpb19maWxlX3N1cHBvcnRzX25vd2FpdChyZXEsIHJ3KSkpCisJCXJl
cS0+ZmxhZ3MgfD0gUkVRX0ZfTk9XQUlUOworCiAJaW9wcmlvID0gUkVBRF9PTkNFKHNxZS0+
aW9wcmlvKTsKIAlpZiAoaW9wcmlvKSB7CiAJCXJldCA9IGlvcHJpb19jaGVja19jYXAoaW9w
cmlvKTsKQEAgLTI4MDcsMTAgKzI5MzAsNiBAQCBzdGF0aWMgaW50IGlvX3ByZXBfcncoc3Ry
dWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIAl9
IGVsc2UKIAkJa2lvY2ItPmtpX2lvcHJpbyA9IGdldF9jdXJyZW50X2lvcHJpbygpOwogCi0J
LyogZG9uJ3QgYWxsb3cgYXN5bmMgcHVudCBpZiBSV0ZfTk9XQUlUIHdhcyByZXF1ZXN0ZWQg
Ki8KLQlpZiAoa2lvY2ItPmtpX2ZsYWdzICYgSU9DQl9OT1dBSVQpCi0JCXJlcS0+ZmxhZ3Mg
fD0gUkVRX0ZfTk9XQUlUOwotCiAJaWYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9Q
T0xMKSB7CiAJCWlmICghKGtpb2NiLT5raV9mbGFncyAmIElPQ0JfRElSRUNUKSB8fAogCQkg
ICAgIWtpb2NiLT5raV9maWxwLT5mX29wLT5pb3BvbGwpCkBAIC0yODI1LDkgKzI5NDQsMjQg
QEAgc3RhdGljIGludCBpb19wcmVwX3J3KHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBz
dHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCiAJCWtpb2NiLT5raV9jb21wbGV0ZSA9IGlvX2Nv
bXBsZXRlX3J3OwogCX0KIAorCS8qIHVzZWQgZm9yIGZpeGVkIHJlYWQvd3JpdGUgdG9vIC0g
anVzdCByZWFkIHVuY29uZGl0aW9uYWxseSAqLworCXJlcS0+YnVmX2luZGV4ID0gUkVBRF9P
TkNFKHNxZS0+YnVmX2luZGV4KTsKKwlyZXEtPmltdSA9IE5VTEw7CisKKwlpZiAocmVxLT5v
cGNvZGUgPT0gSU9SSU5HX09QX1JFQURfRklYRUQgfHwKKwkgICAgcmVxLT5vcGNvZGUgPT0g
SU9SSU5HX09QX1dSSVRFX0ZJWEVEKSB7CisJCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0g
cmVxLT5jdHg7CisJCXUxNiBpbmRleDsKKworCQlpZiAodW5saWtlbHkocmVxLT5idWZfaW5k
ZXggPj0gY3R4LT5ucl91c2VyX2J1ZnMpKQorCQkJcmV0dXJuIC1FRkFVTFQ7CisJCWluZGV4
ID0gYXJyYXlfaW5kZXhfbm9zcGVjKHJlcS0+YnVmX2luZGV4LCBjdHgtPm5yX3VzZXJfYnVm
cyk7CisJCXJlcS0+aW11ID0gY3R4LT51c2VyX2J1ZnNbaW5kZXhdOworCQlpb19yZXFfc2V0
X3JzcmNfbm9kZShyZXEpOworCX0KKwogCXJlcS0+cncuYWRkciA9IFJFQURfT05DRShzcWUt
PmFkZHIpOwogCXJlcS0+cncubGVuID0gUkVBRF9PTkNFKHNxZS0+bGVuKTsKLQlyZXEtPmJ1
Zl9pbmRleCA9IFJFQURfT05DRShzcWUtPmJ1Zl9pbmRleCk7CiAJcmV0dXJuIDA7CiB9CiAK
QEAgLTI4NTMsNDggKzI5ODcsNDkgQEAgc3RhdGljIGlubGluZSB2b2lkIGlvX3J3X2RvbmUo
c3RydWN0IGtpb2NiICpraW9jYiwgc3NpemVfdCByZXQpCiB9CiAKIHN0YXRpYyB2b2lkIGtp
b2NiX2RvbmUoc3RydWN0IGtpb2NiICpraW9jYiwgc3NpemVfdCByZXQsCi0JCSAgICAgICBz
dHJ1Y3QgaW9fY29tcF9zdGF0ZSAqY3MpCisJCSAgICAgICB1bnNpZ25lZCBpbnQgaXNzdWVf
ZmxhZ3MpCiB7CiAJc3RydWN0IGlvX2tpb2NiICpyZXEgPSBjb250YWluZXJfb2Yoa2lvY2Is
IHN0cnVjdCBpb19raW9jYiwgcncua2lvY2IpOwotCXN0cnVjdCBpb19hc3luY19ydyAqaW8g
PSByZXEtPmFzeW5jX2RhdGE7Ci0KLQkvKiBhZGQgcHJldmlvdXNseSBkb25lIElPLCBpZiBh
bnkgKi8KLQlpZiAoaW8gJiYgaW8tPmJ5dGVzX2RvbmUgPiAwKSB7Ci0JCWlmIChyZXQgPCAw
KQotCQkJcmV0ID0gaW8tPmJ5dGVzX2RvbmU7Ci0JCWVsc2UKLQkJCXJldCArPSBpby0+Ynl0
ZXNfZG9uZTsKLQl9CiAKIAlpZiAocmVxLT5mbGFncyAmIFJFUV9GX0NVUl9QT1MpCiAJCXJl
cS0+ZmlsZS0+Zl9wb3MgPSBraW9jYi0+a2lfcG9zOwotCWlmIChyZXQgPj0gMCAmJiBraW9j
Yi0+a2lfY29tcGxldGUgPT0gaW9fY29tcGxldGVfcncpCi0JCV9faW9fY29tcGxldGVfcnco
cmVxLCByZXQsIDAsIGNzKTsKKwlpZiAocmV0ID49IDAgJiYgKGtpb2NiLT5raV9jb21wbGV0
ZSA9PSBpb19jb21wbGV0ZV9ydykpCisJCV9faW9fY29tcGxldGVfcncocmVxLCByZXQsIDAs
IGlzc3VlX2ZsYWdzKTsKIAllbHNlCiAJCWlvX3J3X2RvbmUoa2lvY2IsIHJldCk7CisKKwlp
ZiAocmVxLT5mbGFncyAmIFJFUV9GX1JFSVNTVUUpIHsKKwkJcmVxLT5mbGFncyAmPSB+UkVR
X0ZfUkVJU1NVRTsKKwkJaWYgKGlvX3Jlc3VibWl0X3ByZXAocmVxKSkgeworCQkJaW9fcmVx
X3Rhc2tfcXVldWVfcmVpc3N1ZShyZXEpOworCQl9IGVsc2UgeworCQkJdW5zaWduZWQgaW50
IGNmbGFncyA9IGlvX3B1dF9yd19rYnVmKHJlcSk7CisJCQlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCA9IHJlcS0+Y3R4OworCisJCQlyZXQgPSBpb19maXh1cF9yd19yZXMocmVxLCByZXQp
OworCQkJcmVxX3NldF9mYWlsKHJlcSk7CisJCQlpZiAoIShpc3N1ZV9mbGFncyAmIElPX1VS
SU5HX0ZfTk9OQkxPQ0spKSB7CisJCQkJbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsK
KwkJCQlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3VlX2ZsYWdzLCByZXQsIGNmbGFncyk7
CisJCQkJbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCQkJfSBlbHNlIHsKKwkJ
CQlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3VlX2ZsYWdzLCByZXQsIGNmbGFncyk7CisJ
CQl9CisJCX0KKwl9CiB9CiAKLXN0YXRpYyBzc2l6ZV90IGlvX2ltcG9ydF9maXhlZChzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSwgaW50IHJ3LAotCQkJICAgICAgIHN0cnVjdCBpb3ZfaXRlciAq
aXRlcikKK3N0YXRpYyBpbnQgX19pb19pbXBvcnRfZml4ZWQoc3RydWN0IGlvX2tpb2NiICpy
ZXEsIGludCBydywgc3RydWN0IGlvdl9pdGVyICppdGVyLAorCQkJICAgICBzdHJ1Y3QgaW9f
bWFwcGVkX3VidWYgKmltdSkKIHsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+
Y3R4OwogCXNpemVfdCBsZW4gPSByZXEtPnJ3LmxlbjsKLQlzdHJ1Y3QgaW9fbWFwcGVkX3Vi
dWYgKmltdTsKLQl1MTYgaW5kZXgsIGJ1Zl9pbmRleCA9IHJlcS0+YnVmX2luZGV4OworCXU2
NCBidWZfZW5kLCBidWZfYWRkciA9IHJlcS0+cncuYWRkcjsKIAlzaXplX3Qgb2Zmc2V0Owot
CXU2NCBidWZfYWRkcjsKIAotCWlmICh1bmxpa2VseShidWZfaW5kZXggPj0gY3R4LT5ucl91
c2VyX2J1ZnMpKQotCQlyZXR1cm4gLUVGQVVMVDsKLQlpbmRleCA9IGFycmF5X2luZGV4X25v
c3BlYyhidWZfaW5kZXgsIGN0eC0+bnJfdXNlcl9idWZzKTsKLQlpbXUgPSAmY3R4LT51c2Vy
X2J1ZnNbaW5kZXhdOwotCWJ1Zl9hZGRyID0gcmVxLT5ydy5hZGRyOwotCi0JLyogb3ZlcmZs
b3cgKi8KLQlpZiAoYnVmX2FkZHIgKyBsZW4gPCBidWZfYWRkcikKKwlpZiAodW5saWtlbHko
Y2hlY2tfYWRkX292ZXJmbG93KGJ1Zl9hZGRyLCAodTY0KWxlbiwgJmJ1Zl9lbmQpKSkKIAkJ
cmV0dXJuIC1FRkFVTFQ7CiAJLyogbm90IGluc2lkZSB0aGUgbWFwcGVkIHJlZ2lvbiAqLwot
CWlmIChidWZfYWRkciA8IGltdS0+dWJ1ZiB8fCBidWZfYWRkciArIGxlbiA+IGltdS0+dWJ1
ZiArIGltdS0+bGVuKQorCWlmICh1bmxpa2VseShidWZfYWRkciA8IGltdS0+dWJ1ZiB8fCBi
dWZfZW5kID4gaW11LT51YnVmX2VuZCkpCiAJCXJldHVybiAtRUZBVUxUOwogCiAJLyoKQEAg
LTI5MzksNyArMzA3NCwxNCBAQCBzdGF0aWMgc3NpemVfdCBpb19pbXBvcnRfZml4ZWQoc3Ry
dWN0IGlvX2tpb2NiICpyZXEsIGludCBydywKIAkJfQogCX0KIAotCXJldHVybiBsZW47CisJ
cmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgaW9faW1wb3J0X2ZpeGVkKHN0cnVjdCBpb19r
aW9jYiAqcmVxLCBpbnQgcncsIHN0cnVjdCBpb3ZfaXRlciAqaXRlcikKK3sKKwlpZiAoV0FS
Tl9PTl9PTkNFKCFyZXEtPmltdSkpCisJCXJldHVybiAtRUZBVUxUOworCXJldHVybiBfX2lv
X2ltcG9ydF9maXhlZChyZXEsIHJ3LCBpdGVyLCByZXEtPmltdSk7CiB9CiAKIHN0YXRpYyB2
b2lkIGlvX3Jpbmdfc3VibWl0X3VubG9jayhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgYm9v
bCBuZWVkc19sb2NrKQpAQCAtMzA4MCwxNiArMzIyMiwxNCBAQCBzdGF0aWMgc3NpemVfdCBp
b19pb3ZfYnVmZmVyX3NlbGVjdChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgc3RydWN0IGlvdmVj
ICppb3YsCiAJcmV0dXJuIF9faW9faW92X2J1ZmZlcl9zZWxlY3QocmVxLCBpb3YsIG5lZWRz
X2xvY2spOwogfQogCi1zdGF0aWMgc3NpemVfdCBfX2lvX2ltcG9ydF9pb3ZlYyhpbnQgcncs
IHN0cnVjdCBpb19raW9jYiAqcmVxLAotCQkJCSBzdHJ1Y3QgaW92ZWMgKippb3ZlYywgc3Ry
dWN0IGlvdl9pdGVyICppdGVyLAotCQkJCSBib29sIG5lZWRzX2xvY2spCitzdGF0aWMgaW50
IGlvX2ltcG9ydF9pb3ZlYyhpbnQgcncsIHN0cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1Y3Qg
aW92ZWMgKippb3ZlYywKKwkJCSAgIHN0cnVjdCBpb3ZfaXRlciAqaXRlciwgYm9vbCBuZWVk
c19sb2NrKQogewogCXZvaWQgX191c2VyICpidWYgPSB1NjRfdG9fdXNlcl9wdHIocmVxLT5y
dy5hZGRyKTsKIAlzaXplX3Qgc3FlX2xlbiA9IHJlcS0+cncubGVuOworCXU4IG9wY29kZSA9
IHJlcS0+b3Bjb2RlOwogCXNzaXplX3QgcmV0OwotCXU4IG9wY29kZTsKIAotCW9wY29kZSA9
IHJlcS0+b3Bjb2RlOwogCWlmIChvcGNvZGUgPT0gSU9SSU5HX09QX1JFQURfRklYRUQgfHwg
b3Bjb2RlID09IElPUklOR19PUF9XUklURV9GSVhFRCkgewogCQkqaW92ZWMgPSBOVUxMOwog
CQlyZXR1cm4gaW9faW1wb3J0X2ZpeGVkKHJlcSwgcncsIGl0ZXIpOwpAQCAtMzExNCwxMCAr
MzI1NCw4IEBAIHN0YXRpYyBzc2l6ZV90IF9faW9faW1wb3J0X2lvdmVjKGludCBydywgc3Ry
dWN0IGlvX2tpb2NiICpyZXEsCiAKIAlpZiAocmVxLT5mbGFncyAmIFJFUV9GX0JVRkZFUl9T
RUxFQ1QpIHsKIAkJcmV0ID0gaW9faW92X2J1ZmZlcl9zZWxlY3QocmVxLCAqaW92ZWMsIG5l
ZWRzX2xvY2spOwotCQlpZiAoIXJldCkgewotCQkJcmV0ID0gKCppb3ZlYyktPmlvdl9sZW47
Ci0JCQlpb3ZfaXRlcl9pbml0KGl0ZXIsIHJ3LCAqaW92ZWMsIDEsIHJldCk7Ci0JCX0KKwkJ
aWYgKCFyZXQpCisJCQlpb3ZfaXRlcl9pbml0KGl0ZXIsIHJ3LCAqaW92ZWMsIDEsICgqaW92
ZWMpLT5pb3ZfbGVuKTsKIAkJKmlvdmVjID0gTlVMTDsKIAkJcmV0dXJuIHJldDsKIAl9CkBA
IC0zMTI2LDE4ICszMjY0LDYgQEAgc3RhdGljIHNzaXplX3QgX19pb19pbXBvcnRfaW92ZWMo
aW50IHJ3LCBzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwKIAkJCSAgICAgIHJlcS0+Y3R4LT5jb21w
YXQpOwogfQogCi1zdGF0aWMgc3NpemVfdCBpb19pbXBvcnRfaW92ZWMoaW50IHJ3LCBzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSwKLQkJCSAgICAgICBzdHJ1Y3QgaW92ZWMgKippb3ZlYywgc3Ry
dWN0IGlvdl9pdGVyICppdGVyLAotCQkJICAgICAgIGJvb2wgbmVlZHNfbG9jaykKLXsKLQlz
dHJ1Y3QgaW9fYXN5bmNfcncgKmlvcncgPSByZXEtPmFzeW5jX2RhdGE7Ci0KLQlpZiAoIWlv
cncpCi0JCXJldHVybiBfX2lvX2ltcG9ydF9pb3ZlYyhydywgcmVxLCBpb3ZlYywgaXRlciwg
bmVlZHNfbG9jayk7Ci0JKmlvdmVjID0gTlVMTDsKLQlyZXR1cm4gMDsKLX0KLQogc3RhdGlj
IGlubGluZSBsb2ZmX3QgKmlvX2tpb2NiX3Bwb3Moc3RydWN0IGtpb2NiICpraW9jYikKIHsK
IAlyZXR1cm4gKGtpb2NiLT5raV9maWxwLT5mX21vZGUgJiBGTU9ERV9TVFJFQU0pID8gTlVM
TCA6ICZraW9jYi0+a2lfcG9zOwpAQCAtMzIzMCwzMiArMzM1NiwzMSBAQCBzdGF0aWMgdm9p
ZCBpb19yZXFfbWFwX3J3KHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW92
ZWMgKmlvdmVjLAogCX0KIH0KIAotc3RhdGljIGlubGluZSBpbnQgX19pb19hbGxvY19hc3lu
Y19kYXRhKHN0cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIGlubGluZSBpbnQgaW9fYWxs
b2NfYXN5bmNfZGF0YShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKIAlXQVJOX09OX09OQ0Uo
IWlvX29wX2RlZnNbcmVxLT5vcGNvZGVdLmFzeW5jX3NpemUpOwogCXJlcS0+YXN5bmNfZGF0
YSA9IGttYWxsb2MoaW9fb3BfZGVmc1tyZXEtPm9wY29kZV0uYXN5bmNfc2l6ZSwgR0ZQX0tF
Uk5FTCk7CiAJcmV0dXJuIHJlcS0+YXN5bmNfZGF0YSA9PSBOVUxMOwogfQogCi1zdGF0aWMg
aW50IGlvX2FsbG9jX2FzeW5jX2RhdGEoc3RydWN0IGlvX2tpb2NiICpyZXEpCi17Ci0JaWYg
KCFpb19vcF9kZWZzW3JlcS0+b3Bjb2RlXS5uZWVkc19hc3luY19kYXRhKQotCQlyZXR1cm4g
MDsKLQotCXJldHVybiAgX19pb19hbGxvY19hc3luY19kYXRhKHJlcSk7Ci19Ci0KIHN0YXRp
YyBpbnQgaW9fc2V0dXBfYXN5bmNfcncoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0
cnVjdCBpb3ZlYyAqaW92ZWMsCiAJCQkgICAgIGNvbnN0IHN0cnVjdCBpb3ZlYyAqZmFzdF9p
b3YsCiAJCQkgICAgIHN0cnVjdCBpb3ZfaXRlciAqaXRlciwgYm9vbCBmb3JjZSkKIHsKLQlp
ZiAoIWZvcmNlICYmICFpb19vcF9kZWZzW3JlcS0+b3Bjb2RlXS5uZWVkc19hc3luY19kYXRh
KQorCWlmICghZm9yY2UgJiYgIWlvX29wX2RlZnNbcmVxLT5vcGNvZGVdLm5lZWRzX2FzeW5j
X3NldHVwKQogCQlyZXR1cm4gMDsKIAlpZiAoIXJlcS0+YXN5bmNfZGF0YSkgewotCQlpZiAo
X19pb19hbGxvY19hc3luY19kYXRhKHJlcSkpCisJCXN0cnVjdCBpb19hc3luY19ydyAqaW9y
dzsKKworCQlpZiAoaW9fYWxsb2NfYXN5bmNfZGF0YShyZXEpKSB7CisJCQlrZnJlZShpb3Zl
Yyk7CiAJCQlyZXR1cm4gLUVOT01FTTsKKwkJfQogCiAJCWlvX3JlcV9tYXBfcncocmVxLCBp
b3ZlYywgZmFzdF9pb3YsIGl0ZXIpOworCQlpb3J3ID0gcmVxLT5hc3luY19kYXRhOworCQkv
KiB3ZSd2ZSBjb3BpZWQgYW5kIG1hcHBlZCB0aGUgaXRlciwgZW5zdXJlIHN0YXRlIGlzIHNh
dmVkICovCisJCWlvdl9pdGVyX3NhdmVfc3RhdGUoJmlvcnctPml0ZXIsICZpb3J3LT5pdGVy
X3N0YXRlKTsKIAl9CiAJcmV0dXJuIDA7CiB9CkBAIC0zMjY0LDkgKzMzODksOSBAQCBzdGF0
aWMgaW5saW5lIGludCBpb19yd19wcmVwX2FzeW5jKHN0cnVjdCBpb19raW9jYiAqcmVxLCBp
bnQgcncpCiB7CiAJc3RydWN0IGlvX2FzeW5jX3J3ICppb3J3ID0gcmVxLT5hc3luY19kYXRh
OwogCXN0cnVjdCBpb3ZlYyAqaW92ID0gaW9ydy0+ZmFzdF9pb3Y7Ci0Jc3NpemVfdCByZXQ7
CisJaW50IHJldDsKIAotCXJldCA9IF9faW9faW1wb3J0X2lvdmVjKHJ3LCByZXEsICZpb3Ys
ICZpb3J3LT5pdGVyLCBmYWxzZSk7CisJcmV0ID0gaW9faW1wb3J0X2lvdmVjKHJ3LCByZXEs
ICZpb3YsICZpb3J3LT5pdGVyLCBmYWxzZSk7CiAJaWYgKHVubGlrZWx5KHJldCA8IDApKQog
CQlyZXR1cm4gcmV0OwogCkBAIC0zMjc0LDI0ICszMzk5LDE1IEBAIHN0YXRpYyBpbmxpbmUg
aW50IGlvX3J3X3ByZXBfYXN5bmMoc3RydWN0IGlvX2tpb2NiICpyZXEsIGludCBydykKIAlp
b3J3LT5mcmVlX2lvdmVjID0gaW92OwogCWlmIChpb3YpCiAJCXJlcS0+ZmxhZ3MgfD0gUkVR
X0ZfTkVFRF9DTEVBTlVQOworCWlvdl9pdGVyX3NhdmVfc3RhdGUoJmlvcnctPml0ZXIsICZp
b3J3LT5pdGVyX3N0YXRlKTsKIAlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludCBpb19yZWFk
X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUg
KnNxZSkKIHsKLQlzc2l6ZV90IHJldDsKLQotCXJldCA9IGlvX3ByZXBfcncocmVxLCBzcWUp
OwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KIAlpZiAodW5saWtlbHkoIShyZXEtPmZp
bGUtPmZfbW9kZSAmIEZNT0RFX1JFQUQpKSkKIAkJcmV0dXJuIC1FQkFERjsKLQotCS8qIGVp
dGhlciBkb24ndCBuZWVkIGlvdmVjIGltcG9ydGVkIG9yIGFscmVhZHkgaGF2ZSBpdCAqLwot
CWlmICghcmVxLT5hc3luY19kYXRhKQotCQlyZXR1cm4gMDsKLQlyZXR1cm4gaW9fcndfcHJl
cF9hc3luYyhyZXEsIFJFQUQpOworCXJldHVybiBpb19wcmVwX3J3KHJlcSwgc3FlLCBSRUFE
KTsKIH0KIAogLyoKQEAgLTMzMTAsNyArMzQyNiw2IEBAIHN0YXRpYyBpbnQgaW9fYXN5bmNf
YnVmX2Z1bmMoc3RydWN0IHdhaXRfcXVldWVfZW50cnkgKndhaXQsIHVuc2lnbmVkIG1vZGUs
CiAJc3RydWN0IHdhaXRfcGFnZV9xdWV1ZSAqd3BxOwogCXN0cnVjdCBpb19raW9jYiAqcmVx
ID0gd2FpdC0+cHJpdmF0ZTsKIAlzdHJ1Y3Qgd2FpdF9wYWdlX2tleSAqa2V5ID0gYXJnOwot
CWludCByZXQ7CiAKIAl3cHEgPSBjb250YWluZXJfb2Yod2FpdCwgc3RydWN0IHdhaXRfcGFn
ZV9xdWV1ZSwgd2FpdCk7CiAKQEAgLTMzMTksMjIgKzM0MzQsNyBAQCBzdGF0aWMgaW50IGlv
X2FzeW5jX2J1Zl9mdW5jKHN0cnVjdCB3YWl0X3F1ZXVlX2VudHJ5ICp3YWl0LCB1bnNpZ25l
ZCBtb2RlLAogCiAJcmVxLT5ydy5raW9jYi5raV9mbGFncyAmPSB+SU9DQl9XQUlUUTsKIAls
aXN0X2RlbF9pbml0KCZ3YWl0LT5lbnRyeSk7Ci0KLQlpbml0X3Rhc2tfd29yaygmcmVxLT50
YXNrX3dvcmssIGlvX3JlcV90YXNrX3N1Ym1pdCk7Ci0JcGVyY3B1X3JlZl9nZXQoJnJlcS0+
Y3R4LT5yZWZzKTsKLQotCS8qIHN1Ym1pdCByZWYgZ2V0cyBkcm9wcGVkLCBhY3F1aXJlIGEg
bmV3IG9uZSAqLwotCXJlZmNvdW50X2luYygmcmVxLT5yZWZzKTsKLQlyZXQgPSBpb19yZXFf
dGFza193b3JrX2FkZChyZXEsIHRydWUpOwotCWlmICh1bmxpa2VseShyZXQpKSB7Ci0JCXN0
cnVjdCB0YXNrX3N0cnVjdCAqdHNrOwotCi0JCS8qIHF1ZXVlIGp1c3QgZm9yIGNhbmNlbGF0
aW9uICovCi0JCWluaXRfdGFza193b3JrKCZyZXEtPnRhc2tfd29yaywgaW9fcmVxX3Rhc2tf
Y2FuY2VsKTsKLQkJdHNrID0gaW9fd3FfZ2V0X3Rhc2socmVxLT5jdHgtPmlvX3dxKTsKLQkJ
dGFza193b3JrX2FkZCh0c2ssICZyZXEtPnRhc2tfd29yaywgVFdBX05PTkUpOwotCQl3YWtl
X3VwX3Byb2Nlc3ModHNrKTsKLQl9CisJaW9fcmVxX3Rhc2tfcXVldWUocmVxKTsKIAlyZXR1
cm4gMTsKIH0KIApAQCAtMzM4MSw3ICszNDgxLDcgQEAgc3RhdGljIGJvb2wgaW9fcndfc2hv
dWxkX3JldHJ5KHN0cnVjdCBpb19raW9jYiAqcmVxKQogCXJldHVybiB0cnVlOwogfQogCi1z
dGF0aWMgaW50IGlvX2l0ZXJfZG9fcmVhZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgc3RydWN0
IGlvdl9pdGVyICppdGVyKQorc3RhdGljIGlubGluZSBpbnQgaW9faXRlcl9kb19yZWFkKHN0
cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1Y3QgaW92X2l0ZXIgKml0ZXIpCiB7CiAJaWYgKHJl
cS0+ZmlsZS0+Zl9vcC0+cmVhZF9pdGVyKQogCQlyZXR1cm4gY2FsbF9yZWFkX2l0ZXIocmVx
LT5maWxlLCAmcmVxLT5ydy5raW9jYiwgaXRlcik7CkBAIC0zMzkxLDI3ICszNDkxLDQwIEBA
IHN0YXRpYyBpbnQgaW9faXRlcl9kb19yZWFkKHN0cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1
Y3QgaW92X2l0ZXIgKml0ZXIpCiAJCXJldHVybiAtRUlOVkFMOwogfQogCi1zdGF0aWMgaW50
IGlvX3JlYWQoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCi0J
CSAgIHN0cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBib29sIG5lZWRfcmVhZF9h
bGwoc3RydWN0IGlvX2tpb2NiICpyZXEpCit7CisJcmV0dXJuIHJlcS0+ZmxhZ3MgJiBSRVFf
Rl9JU1JFRyB8fAorCQlTX0lTQkxLKGZpbGVfaW5vZGUocmVxLT5maWxlKS0+aV9tb2RlKTsK
K30KKworc3RhdGljIGludCBpb19yZWFkKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25l
ZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvdmVjIGlubGluZV92ZWNzW1VJT19G
QVNUSU9WXSwgKmlvdmVjID0gaW5saW5lX3ZlY3M7CiAJc3RydWN0IGtpb2NiICpraW9jYiA9
ICZyZXEtPnJ3Lmtpb2NiOwogCXN0cnVjdCBpb3ZfaXRlciBfX2l0ZXIsICppdGVyID0gJl9f
aXRlcjsKLQlzdHJ1Y3QgaW92X2l0ZXIgaXRlcl9jcDsKIAlzdHJ1Y3QgaW9fYXN5bmNfcncg
KnJ3ID0gcmVxLT5hc3luY19kYXRhOwotCXNzaXplX3QgaW9fc2l6ZSwgcmV0LCByZXQyOwot
CWJvb2wgbm9fYXN5bmM7CisJYm9vbCBmb3JjZV9ub25ibG9jayA9IGlzc3VlX2ZsYWdzICYg
SU9fVVJJTkdfRl9OT05CTE9DSzsKKwlzdHJ1Y3QgaW92X2l0ZXJfc3RhdGUgX19zdGF0ZSwg
KnN0YXRlOworCXNzaXplX3QgcmV0LCByZXQyOwogCi0JaWYgKHJ3KQorCWlmIChydykgewog
CQlpdGVyID0gJnJ3LT5pdGVyOwotCi0JcmV0ID0gaW9faW1wb3J0X2lvdmVjKFJFQUQsIHJl
cSwgJmlvdmVjLCBpdGVyLCAhZm9yY2Vfbm9uYmxvY2spOwotCWlmIChyZXQgPCAwKQotCQly
ZXR1cm4gcmV0OwotCWl0ZXJfY3AgPSAqaXRlcjsKLQlpb19zaXplID0gaW92X2l0ZXJfY291
bnQoaXRlcik7Ci0JcmVxLT5yZXN1bHQgPSBpb19zaXplOwotCXJldCA9IDA7CisJCXN0YXRl
ID0gJnJ3LT5pdGVyX3N0YXRlOworCQkvKgorCQkgKiBXZSBjb21lIGhlcmUgZnJvbSBhbiBl
YXJsaWVyIGF0dGVtcHQsIHJlc3RvcmUgb3VyIHN0YXRlIHRvCisJCSAqIG1hdGNoIGluIGNh
c2UgaXQgZG9lc24ndC4gSXQncyBjaGVhcCBlbm91Z2ggdGhhdCB3ZSBkb24ndAorCQkgKiBu
ZWVkIHRvIG1ha2UgdGhpcyBjb25kaXRpb25hbC4KKwkJICovCisJCWlvdl9pdGVyX3Jlc3Rv
cmUoaXRlciwgc3RhdGUpOworCQlpb3ZlYyA9IE5VTEw7CisJfSBlbHNlIHsKKwkJcmV0ID0g
aW9faW1wb3J0X2lvdmVjKFJFQUQsIHJlcSwgJmlvdmVjLCBpdGVyLCAhZm9yY2Vfbm9uYmxv
Y2spOworCQlpZiAocmV0IDwgMCkKKwkJCXJldHVybiByZXQ7CisJCXN0YXRlID0gJl9fc3Rh
dGU7CisJCWlvdl9pdGVyX3NhdmVfc3RhdGUoaXRlciwgc3RhdGUpOworCX0KKwlyZXEtPnJl
c3VsdCA9IGlvdl9pdGVyX2NvdW50KGl0ZXIpOwogCiAJLyogRW5zdXJlIHdlIGNsZWFyIHBy
ZXZpb3VzbHkgc2V0IG5vbi1ibG9jayBmbGFnICovCiAJaWYgKCFmb3JjZV9ub25ibG9jaykK
QEAgLTM0MTksMTI3ICszNTMyLDEzMCBAQCBzdGF0aWMgaW50IGlvX3JlYWQoc3RydWN0IGlv
X2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAJZWxzZQogCQlraW9jYi0+a2lf
ZmxhZ3MgfD0gSU9DQl9OT1dBSVQ7CiAKLQogCS8qIElmIHRoZSBmaWxlIGRvZXNuJ3Qgc3Vw
cG9ydCBhc3luYywganVzdCBhc3luYyBwdW50ICovCi0Jbm9fYXN5bmMgPSBmb3JjZV9ub25i
bG9jayAmJiAhaW9fZmlsZV9zdXBwb3J0c19hc3luYyhyZXEtPmZpbGUsIFJFQUQpOwotCWlm
IChub19hc3luYykKLQkJZ290byBjb3B5X2lvdjsKKwlpZiAoZm9yY2Vfbm9uYmxvY2sgJiYg
IWlvX2ZpbGVfc3VwcG9ydHNfbm93YWl0KHJlcSwgUkVBRCkpIHsKKwkJcmV0ID0gaW9fc2V0
dXBfYXN5bmNfcncocmVxLCBpb3ZlYywgaW5saW5lX3ZlY3MsIGl0ZXIsIHRydWUpOworCQly
ZXR1cm4gcmV0ID86IC1FQUdBSU47CisJfQogCi0JcmV0ID0gcndfdmVyaWZ5X2FyZWEoUkVB
RCwgcmVxLT5maWxlLCBpb19raW9jYl9wcG9zKGtpb2NiKSwgaW9fc2l6ZSk7Ci0JaWYgKHVu
bGlrZWx5KHJldCkpCi0JCWdvdG8gb3V0X2ZyZWU7CisJcmV0ID0gcndfdmVyaWZ5X2FyZWEo
UkVBRCwgcmVxLT5maWxlLCBpb19raW9jYl9wcG9zKGtpb2NiKSwgcmVxLT5yZXN1bHQpOwor
CWlmICh1bmxpa2VseShyZXQpKSB7CisJCWtmcmVlKGlvdmVjKTsKKwkJcmV0dXJuIHJldDsK
Kwl9CiAKIAlyZXQgPSBpb19pdGVyX2RvX3JlYWQocmVxLCBpdGVyKTsKIAotCWlmICghcmV0
KSB7Ci0JCWdvdG8gZG9uZTsKLQl9IGVsc2UgaWYgKHJldCA9PSAtRUlPQ0JRVUVVRUQpIHsK
LQkJcmV0ID0gMDsKLQkJZ290byBvdXRfZnJlZTsKLQl9IGVsc2UgaWYgKHJldCA9PSAtRUFH
QUlOKSB7CisJaWYgKHJldCA9PSAtRUFHQUlOIHx8IChyZXEtPmZsYWdzICYgUkVRX0ZfUkVJ
U1NVRSkpIHsKKwkJcmVxLT5mbGFncyAmPSB+UkVRX0ZfUkVJU1NVRTsKIAkJLyogSU9QT0xM
IHJldHJ5IHNob3VsZCBoYXBwZW4gZm9yIGlvLXdxIHRocmVhZHMgKi8KIAkJaWYgKCFmb3Jj
ZV9ub25ibG9jayAmJiAhKHJlcS0+Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwp
KQogCQkJZ290byBkb25lOwotCQkvKiBubyByZXRyeSBvbiBOT05CTE9DSyBtYXJrZWQgZmls
ZSAqLwotCQlpZiAocmVxLT5maWxlLT5mX2ZsYWdzICYgT19OT05CTE9DSykKKwkJLyogbm8g
cmV0cnkgb24gTk9OQkxPQ0sgbm9yIFJXRl9OT1dBSVQgKi8KKwkJaWYgKHJlcS0+ZmxhZ3Mg
JiBSRVFfRl9OT1dBSVQpCiAJCQlnb3RvIGRvbmU7Ci0JCS8qIHNvbWUgY2FzZXMgd2lsbCBj
b25zdW1lIGJ5dGVzIGV2ZW4gb24gZXJyb3IgcmV0dXJucyAqLwotCQkqaXRlciA9IGl0ZXJf
Y3A7CiAJCXJldCA9IDA7Ci0JCWdvdG8gY29weV9pb3Y7Ci0JfSBlbHNlIGlmIChyZXQgPCAw
KSB7Ci0JCS8qIG1ha2Ugc3VyZSAtRVJFU1RBUlRTWVMgLT4gLUVJTlRSIGlzIGRvbmUgKi8K
Kwl9IGVsc2UgaWYgKHJldCA9PSAtRUlPQ0JRVUVVRUQpIHsKKwkJZ290byBvdXRfZnJlZTsK
Kwl9IGVsc2UgaWYgKHJldCA8PSAwIHx8IHJldCA9PSByZXEtPnJlc3VsdCB8fCAhZm9yY2Vf
bm9uYmxvY2sgfHwKKwkJICAgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9OT1dBSVQpIHx8ICFuZWVk
X3JlYWRfYWxsKHJlcSkpIHsKKwkJLyogcmVhZCBhbGwsIGZhaWxlZCwgYWxyZWFkeSBkaWQg
c3luYyBvciBkb24ndCB3YW50IHRvIHJldHJ5ICovCiAJCWdvdG8gZG9uZTsKIAl9CiAKLQkv
KiByZWFkIGl0IGFsbCwgb3Igd2UgZGlkIGJsb2NraW5nIGF0dGVtcHQuIG5vIHJldHJ5LiAq
LwotCWlmICghaW92X2l0ZXJfY291bnQoaXRlcikgfHwgIWZvcmNlX25vbmJsb2NrIHx8Ci0J
ICAgIChyZXEtPmZpbGUtPmZfZmxhZ3MgJiBPX05PTkJMT0NLKSB8fCAhKHJlcS0+ZmxhZ3Mg
JiBSRVFfRl9JU1JFRykpCi0JCWdvdG8gZG9uZTsKKwkvKgorCSAqIERvbid0IGRlcGVuZCBv
biB0aGUgaXRlciBzdGF0ZSBtYXRjaGluZyB3aGF0IHdhcyBjb25zdW1lZCwgb3IgYmVpbmcK
KwkgKiB1bnRvdWNoZWQgaW4gY2FzZSBvZiBlcnJvci4gUmVzdG9yZSBpdCBhbmQgd2UnbGwg
YWR2YW5jZSBpdAorCSAqIG1hbnVhbGx5IGlmIHdlIG5lZWQgdG8uCisJICovCisJaW92X2l0
ZXJfcmVzdG9yZShpdGVyLCBzdGF0ZSk7CiAKLQlpb19zaXplIC09IHJldDsKLWNvcHlfaW92
OgogCXJldDIgPSBpb19zZXR1cF9hc3luY19ydyhyZXEsIGlvdmVjLCBpbmxpbmVfdmVjcywg
aXRlciwgdHJ1ZSk7Ci0JaWYgKHJldDIpIHsKLQkJcmV0ID0gcmV0MjsKLQkJZ290byBvdXRf
ZnJlZTsKLQl9Ci0JaWYgKG5vX2FzeW5jKQotCQlyZXR1cm4gLUVBR0FJTjsKLQlydyA9IHJl
cS0+YXN5bmNfZGF0YTsKLQkvKiBpdCdzIGNvcGllZCBhbmQgd2lsbCBiZSBjbGVhbmVkIHdp
dGggLT5pbyAqLwotCWlvdmVjID0gTlVMTDsKLQkvKiBub3cgdXNlIG91ciBwZXJzaXN0ZW50
IGl0ZXJhdG9yLCBpZiB3ZSBhcmVuJ3QgYWxyZWFkeSAqLwotCWl0ZXIgPSAmcnctPml0ZXI7
Ci1yZXRyeToKLQlydy0+Ynl0ZXNfZG9uZSArPSByZXQ7Ci0JLyogaWYgd2UgY2FuIHJldHJ5
LCBkbyBzbyB3aXRoIHRoZSBjYWxsYmFja3MgYXJtZWQgKi8KLQlpZiAoIWlvX3J3X3Nob3Vs
ZF9yZXRyeShyZXEpKSB7Ci0JCWtpb2NiLT5raV9mbGFncyAmPSB+SU9DQl9XQUlUUTsKLQkJ
cmV0dXJuIC1FQUdBSU47Ci0JfQorCWlmIChyZXQyKQorCQlyZXR1cm4gcmV0MjsKIAorCWlv
dmVjID0gTlVMTDsKKwlydyA9IHJlcS0+YXN5bmNfZGF0YTsKIAkvKgotCSAqIE5vdyByZXRy
eSByZWFkIHdpdGggdGhlIElPQ0JfV0FJVFEgcGFydHMgc2V0IGluIHRoZSBpb2NiLiBJZiB3
ZQotCSAqIGdldCAtRUlPQ0JRVUVVRUQsIHRoZW4gd2UnbGwgZ2V0IGEgbm90aWZpY2F0aW9u
IHdoZW4gdGhlIGRlc2lyZWQKLQkgKiBwYWdlIGdldHMgdW5sb2NrZWQuIFdlIGNhbiBhbHNv
IGdldCBhIHBhcnRpYWwgcmVhZCBoZXJlLCBhbmQgaWYgd2UKLQkgKiBkbywgdGhlbiBqdXN0
IHJldHJ5IGF0IHRoZSBuZXcgb2Zmc2V0LgorCSAqIE5vdyB1c2Ugb3VyIHBlcnNpc3RlbnQg
aXRlcmF0b3IgYW5kIHN0YXRlLCBpZiB3ZSBhcmVuJ3QgYWxyZWFkeS4KKwkgKiBXZSd2ZSBy
ZXN0b3JlZCBhbmQgbWFwcGVkIHRoZSBpdGVyIHRvIG1hdGNoLgogCSAqLwotCXJldCA9IGlv
X2l0ZXJfZG9fcmVhZChyZXEsIGl0ZXIpOwotCWlmIChyZXQgPT0gLUVJT0NCUVVFVUVEKSB7
Ci0JCXJldCA9IDA7Ci0JCWdvdG8gb3V0X2ZyZWU7Ci0JfSBlbHNlIGlmIChyZXQgPiAwICYm
IHJldCA8IGlvX3NpemUpIHsKKwlpZiAoaXRlciAhPSAmcnctPml0ZXIpIHsKKwkJaXRlciA9
ICZydy0+aXRlcjsKKwkJc3RhdGUgPSAmcnctPml0ZXJfc3RhdGU7CisJfQorCisJZG8gewor
CQkvKgorCQkgKiBXZSBlbmQgdXAgaGVyZSBiZWNhdXNlIG9mIGEgcGFydGlhbCByZWFkLCBl
aXRoZXIgZnJvbQorCQkgKiBhYm92ZSBvciBpbnNpZGUgdGhpcyBsb29wLiBBZHZhbmNlIHRo
ZSBpdGVyIGJ5IHRoZSBieXRlcworCQkgKiB0aGF0IHdlcmUgY29uc3VtZWQuCisJCSAqLwor
CQlpb3ZfaXRlcl9hZHZhbmNlKGl0ZXIsIHJldCk7CisJCWlmICghaW92X2l0ZXJfY291bnQo
aXRlcikpCisJCQlicmVhazsKKwkJcnctPmJ5dGVzX2RvbmUgKz0gcmV0OworCQlpb3ZfaXRl
cl9zYXZlX3N0YXRlKGl0ZXIsIHN0YXRlKTsKKworCQkvKiBpZiB3ZSBjYW4gcmV0cnksIGRv
IHNvIHdpdGggdGhlIGNhbGxiYWNrcyBhcm1lZCAqLworCQlpZiAoIWlvX3J3X3Nob3VsZF9y
ZXRyeShyZXEpKSB7CisJCQlraW9jYi0+a2lfZmxhZ3MgJj0gfklPQ0JfV0FJVFE7CisJCQly
ZXR1cm4gLUVBR0FJTjsKKwkJfQorCisJCXJlcS0+cmVzdWx0ID0gaW92X2l0ZXJfY291bnQo
aXRlcik7CisJCS8qCisJCSAqIE5vdyByZXRyeSByZWFkIHdpdGggdGhlIElPQ0JfV0FJVFEg
cGFydHMgc2V0IGluIHRoZSBpb2NiLiBJZgorCQkgKiB3ZSBnZXQgLUVJT0NCUVVFVUVELCB0
aGVuIHdlJ2xsIGdldCBhIG5vdGlmaWNhdGlvbiB3aGVuIHRoZQorCQkgKiBkZXNpcmVkIHBh
Z2UgZ2V0cyB1bmxvY2tlZC4gV2UgY2FuIGFsc28gZ2V0IGEgcGFydGlhbCByZWFkCisJCSAq
IGhlcmUsIGFuZCBpZiB3ZSBkbywgdGhlbiBqdXN0IHJldHJ5IGF0IHRoZSBuZXcgb2Zmc2V0
LgorCQkgKi8KKwkJcmV0ID0gaW9faXRlcl9kb19yZWFkKHJlcSwgaXRlcik7CisJCWlmIChy
ZXQgPT0gLUVJT0NCUVVFVUVEKQorCQkJcmV0dXJuIDA7CiAJCS8qIHdlIGdvdCBzb21lIGJ5
dGVzLCBidXQgbm90IGFsbC4gcmV0cnkuICovCiAJCWtpb2NiLT5raV9mbGFncyAmPSB+SU9D
Ql9XQUlUUTsKLQkJZ290byByZXRyeTsKLQl9CisJCWlvdl9pdGVyX3Jlc3RvcmUoaXRlciwg
c3RhdGUpOworCX0gd2hpbGUgKHJldCA+IDApOwogZG9uZToKLQlraW9jYl9kb25lKGtpb2Ni
LCByZXQsIGNzKTsKLQlyZXQgPSAwOworCWtpb2NiX2RvbmUoa2lvY2IsIHJldCwgaXNzdWVf
ZmxhZ3MpOwogb3V0X2ZyZWU6Ci0JLyogaXQncyByZXBvcnRlZGx5IGZhc3RlciB0aGFuIGRl
bGVnYXRpbmcgdGhlIG51bGwgY2hlY2sgdG8ga2ZyZWUoKSAqLworCS8qIGl0J3MgZmFzdGVy
IHRvIGNoZWNrIGhlcmUgdGhlbiBkZWxlZ2F0ZSB0byBrZnJlZSAqLwogCWlmIChpb3ZlYykK
IAkJa2ZyZWUoaW92ZWMpOwotCXJldHVybiByZXQ7CisJcmV0dXJuIDA7CiB9CiAKIHN0YXRp
YyBpbnQgaW9fd3JpdGVfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0
IGlvX3VyaW5nX3NxZSAqc3FlKQogewotCXNzaXplX3QgcmV0OwotCi0JcmV0ID0gaW9fcHJl
cF9ydyhyZXEsIHNxZSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQogCWlmICh1bmxp
a2VseSghKHJlcS0+ZmlsZS0+Zl9tb2RlICYgRk1PREVfV1JJVEUpKSkKIAkJcmV0dXJuIC1F
QkFERjsKLQotCS8qIGVpdGhlciBkb24ndCBuZWVkIGlvdmVjIGltcG9ydGVkIG9yIGFscmVh
ZHkgaGF2ZSBpdCAqLwotCWlmICghcmVxLT5hc3luY19kYXRhKQotCQlyZXR1cm4gMDsKLQly
ZXR1cm4gaW9fcndfcHJlcF9hc3luYyhyZXEsIFdSSVRFKTsKKwlyZXR1cm4gaW9fcHJlcF9y
dyhyZXEsIHNxZSwgV1JJVEUpOwogfQogCi1zdGF0aWMgaW50IGlvX3dyaXRlKHN0cnVjdCBp
b19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAotCQkgICAgc3RydWN0IGlvX2Nv
bXBfc3RhdGUgKmNzKQorc3RhdGljIGludCBpb193cml0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJl
cSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewogCXN0cnVjdCBpb3ZlYyBpbmxpbmVf
dmVjc1tVSU9fRkFTVElPVl0sICppb3ZlYyA9IGlubGluZV92ZWNzOwogCXN0cnVjdCBraW9j
YiAqa2lvY2IgPSAmcmVxLT5ydy5raW9jYjsKIAlzdHJ1Y3QgaW92X2l0ZXIgX19pdGVyLCAq
aXRlciA9ICZfX2l0ZXI7Ci0Jc3RydWN0IGlvdl9pdGVyIGl0ZXJfY3A7CiAJc3RydWN0IGlv
X2FzeW5jX3J3ICpydyA9IHJlcS0+YXN5bmNfZGF0YTsKLQlzc2l6ZV90IHJldCwgcmV0Miwg
aW9fc2l6ZTsKKwlib29sIGZvcmNlX25vbmJsb2NrID0gaXNzdWVfZmxhZ3MgJiBJT19VUklO
R19GX05PTkJMT0NLOworCXN0cnVjdCBpb3ZfaXRlcl9zdGF0ZSBfX3N0YXRlLCAqc3RhdGU7
CisJc3NpemVfdCByZXQsIHJldDI7CiAKLQlpZiAocncpCisJaWYgKHJ3KSB7CiAJCWl0ZXIg
PSAmcnctPml0ZXI7Ci0KLQlyZXQgPSBpb19pbXBvcnRfaW92ZWMoV1JJVEUsIHJlcSwgJmlv
dmVjLCBpdGVyLCAhZm9yY2Vfbm9uYmxvY2spOwotCWlmIChyZXQgPCAwKQotCQlyZXR1cm4g
cmV0OwotCWl0ZXJfY3AgPSAqaXRlcjsKLQlpb19zaXplID0gaW92X2l0ZXJfY291bnQoaXRl
cik7Ci0JcmVxLT5yZXN1bHQgPSBpb19zaXplOworCQlzdGF0ZSA9ICZydy0+aXRlcl9zdGF0
ZTsKKwkJaW92X2l0ZXJfcmVzdG9yZShpdGVyLCBzdGF0ZSk7CisJCWlvdmVjID0gTlVMTDsK
Kwl9IGVsc2UgeworCQlyZXQgPSBpb19pbXBvcnRfaW92ZWMoV1JJVEUsIHJlcSwgJmlvdmVj
LCBpdGVyLCAhZm9yY2Vfbm9uYmxvY2spOworCQlpZiAocmV0IDwgMCkKKwkJCXJldHVybiBy
ZXQ7CisJCXN0YXRlID0gJl9fc3RhdGU7CisJCWlvdl9pdGVyX3NhdmVfc3RhdGUoaXRlciwg
c3RhdGUpOworCX0KKwlyZXEtPnJlc3VsdCA9IGlvdl9pdGVyX2NvdW50KGl0ZXIpOwogCiAJ
LyogRW5zdXJlIHdlIGNsZWFyIHByZXZpb3VzbHkgc2V0IG5vbi1ibG9jayBmbGFnICovCiAJ
aWYgKCFmb3JjZV9ub25ibG9jaykKQEAgLTM1NDgsNyArMzY2NCw3IEBAIHN0YXRpYyBpbnQg
aW9fd3JpdGUoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAJ
CWtpb2NiLT5raV9mbGFncyB8PSBJT0NCX05PV0FJVDsKIAogCS8qIElmIHRoZSBmaWxlIGRv
ZXNuJ3Qgc3VwcG9ydCBhc3luYywganVzdCBhc3luYyBwdW50ICovCi0JaWYgKGZvcmNlX25v
bmJsb2NrICYmICFpb19maWxlX3N1cHBvcnRzX2FzeW5jKHJlcS0+ZmlsZSwgV1JJVEUpKQor
CWlmIChmb3JjZV9ub25ibG9jayAmJiAhaW9fZmlsZV9zdXBwb3J0c19ub3dhaXQocmVxLCBX
UklURSkpCiAJCWdvdG8gY29weV9pb3Y7CiAKIAkvKiBmaWxlIHBhdGggZG9lc24ndCBzdXBw
b3J0IE5PV0FJVCBmb3Igbm9uLWRpcmVjdF9JTyAqLwpAQCAtMzU1Niw3ICszNjcyLDcgQEAg
c3RhdGljIGludCBpb193cml0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9u
b25ibG9jaywKIAkgICAgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9JU1JFRykpCiAJCWdvdG8gY29w
eV9pb3Y7CiAKLQlyZXQgPSByd192ZXJpZnlfYXJlYShXUklURSwgcmVxLT5maWxlLCBpb19r
aW9jYl9wcG9zKGtpb2NiKSwgaW9fc2l6ZSk7CisJcmV0ID0gcndfdmVyaWZ5X2FyZWEoV1JJ
VEUsIHJlcS0+ZmlsZSwgaW9fa2lvY2JfcHBvcyhraW9jYiksIHJlcS0+cmVzdWx0KTsKIAlp
ZiAodW5saWtlbHkocmV0KSkKIAkJZ290byBvdXRfZnJlZTsKIApAQCAtMzU4MSwyOCArMzY5
NywzNiBAQCBzdGF0aWMgaW50IGlvX3dyaXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29s
IGZvcmNlX25vbmJsb2NrLAogCWVsc2UKIAkJcmV0MiA9IC1FSU5WQUw7CiAKKwlpZiAocmVx
LT5mbGFncyAmIFJFUV9GX1JFSVNTVUUpIHsKKwkJcmVxLT5mbGFncyAmPSB+UkVRX0ZfUkVJ
U1NVRTsKKwkJcmV0MiA9IC1FQUdBSU47CisJfQorCiAJLyoKIAkgKiBSYXcgYmRldiB3cml0
ZXMgd2lsbCByZXR1cm4gLUVPUE5PVFNVUFAgZm9yIElPQ0JfTk9XQUlULiBKdXN0CiAJICog
cmV0cnkgdGhlbSB3aXRob3V0IElPQ0JfTk9XQUlULgogCSAqLwogCWlmIChyZXQyID09IC1F
T1BOT1RTVVBQICYmIChraW9jYi0+a2lfZmxhZ3MgJiBJT0NCX05PV0FJVCkpCiAJCXJldDIg
PSAtRUFHQUlOOwotCS8qIG5vIHJldHJ5IG9uIE5PTkJMT0NLIG1hcmtlZCBmaWxlICovCi0J
aWYgKHJldDIgPT0gLUVBR0FJTiAmJiAocmVxLT5maWxlLT5mX2ZsYWdzICYgT19OT05CTE9D
SykpCisJLyogbm8gcmV0cnkgb24gTk9OQkxPQ0sgbm9yIFJXRl9OT1dBSVQgKi8KKwlpZiAo
cmV0MiA9PSAtRUFHQUlOICYmIChyZXEtPmZsYWdzICYgUkVRX0ZfTk9XQUlUKSkKIAkJZ290
byBkb25lOwogCWlmICghZm9yY2Vfbm9uYmxvY2sgfHwgcmV0MiAhPSAtRUFHQUlOKSB7CiAJ
CS8qIElPUE9MTCByZXRyeSBzaG91bGQgaGFwcGVuIGZvciBpby13cSB0aHJlYWRzICovCiAJ
CWlmICgocmVxLT5jdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkgJiYgcmV0MiA9
PSAtRUFHQUlOKQogCQkJZ290byBjb3B5X2lvdjsKIGRvbmU6Ci0JCWtpb2NiX2RvbmUoa2lv
Y2IsIHJldDIsIGNzKTsKKwkJa2lvY2JfZG9uZShraW9jYiwgcmV0MiwgaXNzdWVfZmxhZ3Mp
OwogCX0gZWxzZSB7CiBjb3B5X2lvdjoKLQkJLyogc29tZSBjYXNlcyB3aWxsIGNvbnN1bWUg
Ynl0ZXMgZXZlbiBvbiBlcnJvciByZXR1cm5zICovCi0JCSppdGVyID0gaXRlcl9jcDsKKwkJ
aW92X2l0ZXJfcmVzdG9yZShpdGVyLCBzdGF0ZSk7CiAJCXJldCA9IGlvX3NldHVwX2FzeW5j
X3J3KHJlcSwgaW92ZWMsIGlubGluZV92ZWNzLCBpdGVyLCBmYWxzZSk7Ci0JCWlmICghcmV0
KQorCQlpZiAoIXJldCkgeworCQkJaWYgKGtpb2NiLT5raV9mbGFncyAmIElPQ0JfV1JJVEUp
CisJCQkJa2lvY2JfZW5kX3dyaXRlKHJlcSk7CiAJCQlyZXR1cm4gLUVBR0FJTjsKKwkJfQor
CQlyZXR1cm4gcmV0OwogCX0KIG91dF9mcmVlOgogCS8qIGl0J3MgcmVwb3J0ZWRseSBmYXN0
ZXIgdGhhbiBkZWxlZ2F0aW5nIHRoZSBudWxsIGNoZWNrIHRvIGtmcmVlKCkgKi8KQEAgLTM2
MTEsMzcgKzM3MzUsMTYwIEBAIHN0YXRpYyBpbnQgaW9fd3JpdGUoc3RydWN0IGlvX2tpb2Ni
ICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAJcmV0dXJuIHJldDsKIH0KIAotc3RhdGlj
IGludCBfX2lvX3NwbGljZV9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLAorc3RhdGljIGlu
dCBpb19yZW5hbWVhdF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLAogCQkJICAgIGNvbnN0
IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIHsKLQlzdHJ1Y3QgaW9fc3BsaWNlKiBzcCA9
ICZyZXEtPnNwbGljZTsKLQl1bnNpZ25lZCBpbnQgdmFsaWRfZmxhZ3MgPSBTUExJQ0VfRl9G
RF9JTl9GSVhFRCB8IFNQTElDRV9GX0FMTDsKKwlzdHJ1Y3QgaW9fcmVuYW1lICpyZW4gPSAm
cmVxLT5yZW5hbWU7CisJY29uc3QgY2hhciBfX3VzZXIgKm9sZGYsICpuZXdmOwogCiAJaWYg
KHVubGlrZWx5KHJlcS0+Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwpKQogCQly
ZXR1cm4gLUVJTlZBTDsKKwlpZiAoc3FlLT5pb3ByaW8gfHwgc3FlLT5idWZfaW5kZXggfHwg
c3FlLT5zcGxpY2VfZmRfaW4pCisJCXJldHVybiAtRUlOVkFMOworCWlmICh1bmxpa2VseShy
ZXEtPmZsYWdzICYgUkVRX0ZfRklYRURfRklMRSkpCisJCXJldHVybiAtRUJBREY7CiAKLQlz
cC0+ZmlsZV9pbiA9IE5VTEw7Ci0Jc3AtPmxlbiA9IFJFQURfT05DRShzcWUtPmxlbik7Ci0J
c3AtPmZsYWdzID0gUkVBRF9PTkNFKHNxZS0+c3BsaWNlX2ZsYWdzKTsKKwlyZW4tPm9sZF9k
ZmQgPSBSRUFEX09OQ0Uoc3FlLT5mZCk7CisJb2xkZiA9IHU2NF90b191c2VyX3B0cihSRUFE
X09OQ0Uoc3FlLT5hZGRyKSk7CisJbmV3ZiA9IHU2NF90b191c2VyX3B0cihSRUFEX09OQ0Uo
c3FlLT5hZGRyMikpOworCXJlbi0+bmV3X2RmZCA9IFJFQURfT05DRShzcWUtPmxlbik7CisJ
cmVuLT5mbGFncyA9IFJFQURfT05DRShzcWUtPnJlbmFtZV9mbGFncyk7CiAKLQlpZiAodW5s
aWtlbHkoc3AtPmZsYWdzICYgfnZhbGlkX2ZsYWdzKSkKLQkJcmV0dXJuIC1FSU5WQUw7CisJ
cmVuLT5vbGRwYXRoID0gZ2V0bmFtZShvbGRmKTsKKwlpZiAoSVNfRVJSKHJlbi0+b2xkcGF0
aCkpCisJCXJldHVybiBQVFJfRVJSKHJlbi0+b2xkcGF0aCk7CiAKLQlzcC0+ZmlsZV9pbiA9
IGlvX2ZpbGVfZ2V0KE5VTEwsIHJlcSwgUkVBRF9PTkNFKHNxZS0+c3BsaWNlX2ZkX2luKSwK
LQkJCQkgIChzcC0+ZmxhZ3MgJiBTUExJQ0VfRl9GRF9JTl9GSVhFRCkpOwotCWlmICghc3At
PmZpbGVfaW4pCisJcmVuLT5uZXdwYXRoID0gZ2V0bmFtZShuZXdmKTsKKwlpZiAoSVNfRVJS
KHJlbi0+bmV3cGF0aCkpIHsKKwkJcHV0bmFtZShyZW4tPm9sZHBhdGgpOworCQlyZXR1cm4g
UFRSX0VSUihyZW4tPm5ld3BhdGgpOworCX0KKworCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTkVF
RF9DTEVBTlVQOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGlvX3JlbmFtZWF0KHN0
cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCit7CisJc3Ry
dWN0IGlvX3JlbmFtZSAqcmVuID0gJnJlcS0+cmVuYW1lOworCWludCByZXQ7CisKKwlpZiAo
aXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKQorCQlyZXR1cm4gLUVBR0FJTjsK
KworCXJldCA9IGRvX3JlbmFtZWF0MihyZW4tPm9sZF9kZmQsIHJlbi0+b2xkcGF0aCwgcmVu
LT5uZXdfZGZkLAorCQkJCXJlbi0+bmV3cGF0aCwgcmVuLT5mbGFncyk7CisKKwlyZXEtPmZs
YWdzICY9IH5SRVFfRl9ORUVEX0NMRUFOVVA7CisJaWYgKHJldCA8IDApCisJCXJlcV9zZXRf
ZmFpbChyZXEpOworCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CisJcmV0dXJuIDA7Cit9
CisKK3N0YXRpYyBpbnQgaW9fdW5saW5rYXRfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwK
KwkJCSAgICBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCit7CisJc3RydWN0IGlv
X3VubGluayAqdW4gPSAmcmVxLT51bmxpbms7CisJY29uc3QgY2hhciBfX3VzZXIgKmZuYW1l
OworCisJaWYgKHVubGlrZWx5KHJlcS0+Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BP
TEwpKQorCQlyZXR1cm4gLUVJTlZBTDsKKwlpZiAoc3FlLT5pb3ByaW8gfHwgc3FlLT5vZmYg
fHwgc3FlLT5sZW4gfHwgc3FlLT5idWZfaW5kZXggfHwKKwkgICAgc3FlLT5zcGxpY2VfZmRf
aW4pCisJCXJldHVybiAtRUlOVkFMOworCWlmICh1bmxpa2VseShyZXEtPmZsYWdzICYgUkVR
X0ZfRklYRURfRklMRSkpCiAJCXJldHVybiAtRUJBREY7CisKKwl1bi0+ZGZkID0gUkVBRF9P
TkNFKHNxZS0+ZmQpOworCisJdW4tPmZsYWdzID0gUkVBRF9PTkNFKHNxZS0+dW5saW5rX2Zs
YWdzKTsKKwlpZiAodW4tPmZsYWdzICYgfkFUX1JFTU9WRURJUikKKwkJcmV0dXJuIC1FSU5W
QUw7CisKKwlmbmFtZSA9IHU2NF90b191c2VyX3B0cihSRUFEX09OQ0Uoc3FlLT5hZGRyKSk7
CisJdW4tPmZpbGVuYW1lID0gZ2V0bmFtZShmbmFtZSk7CisJaWYgKElTX0VSUih1bi0+Zmls
ZW5hbWUpKQorCQlyZXR1cm4gUFRSX0VSUih1bi0+ZmlsZW5hbWUpOworCiAJcmVxLT5mbGFn
cyB8PSBSRVFfRl9ORUVEX0NMRUFOVVA7CisJcmV0dXJuIDA7Cit9CiAKLQlpZiAoIVNfSVNS
RUcoZmlsZV9pbm9kZShzcC0+ZmlsZV9pbiktPmlfbW9kZSkpIHsKLQkJLyoKLQkJICogU3Bs
aWNlIG9wZXJhdGlvbiB3aWxsIGJlIHB1bnRlZCBheW5jLCBhbmQgaGVyZSBuZWVkIHRvCi0J
CSAqIG1vZGlmeSBpb193cV93b3JrLmZsYWdzLCBzbyBpbml0aWFsaXplIGlvX3dxX3dvcmsg
Zmlyc3RseS4KLQkJICovCi0JCWlvX3JlcV9pbml0X2FzeW5jKHJlcSk7Ci0JCXJlcS0+d29y
ay5mbGFncyB8PSBJT19XUV9XT1JLX1VOQk9VTkQ7Ci0JfQorc3RhdGljIGludCBpb191bmxp
bmthdChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQor
eworCXN0cnVjdCBpb191bmxpbmsgKnVuID0gJnJlcS0+dW5saW5rOworCWludCByZXQ7CisK
KwlpZiAoaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKQorCQlyZXR1cm4gLUVB
R0FJTjsKKworCWlmICh1bi0+ZmxhZ3MgJiBBVF9SRU1PVkVESVIpCisJCXJldCA9IGRvX3Jt
ZGlyKHVuLT5kZmQsIHVuLT5maWxlbmFtZSk7CisJZWxzZQorCQlyZXQgPSBkb191bmxpbmth
dCh1bi0+ZGZkLCB1bi0+ZmlsZW5hbWUpOworCisJcmVxLT5mbGFncyAmPSB+UkVRX0ZfTkVF
RF9DTEVBTlVQOworCWlmIChyZXQgPCAwKQorCQlyZXFfc2V0X2ZhaWwocmVxKTsKKwlpb19y
ZXFfY29tcGxldGUocmVxLCByZXQpOworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGlv
X3NodXRkb3duX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsCisJCQkgICAgY29uc3Qgc3Ry
dWN0IGlvX3VyaW5nX3NxZSAqc3FlKQoreworI2lmIGRlZmluZWQoQ09ORklHX05FVCkKKwlp
ZiAodW5saWtlbHkocmVxLT5jdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkpCisJ
CXJldHVybiAtRUlOVkFMOworCWlmICh1bmxpa2VseShzcWUtPmlvcHJpbyB8fCBzcWUtPm9m
ZiB8fCBzcWUtPmFkZHIgfHwgc3FlLT5yd19mbGFncyB8fAorCQkgICAgIHNxZS0+YnVmX2lu
ZGV4IHx8IHNxZS0+c3BsaWNlX2ZkX2luKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlyZXEt
PnNodXRkb3duLmhvdyA9IFJFQURfT05DRShzcWUtPmxlbik7CisJcmV0dXJuIDA7CisjZWxz
ZQorCXJldHVybiAtRU9QTk9UU1VQUDsKKyNlbmRpZgorfQorCitzdGF0aWMgaW50IGlvX3No
dXRkb3duKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3Mp
Cit7CisjaWYgZGVmaW5lZChDT05GSUdfTkVUKQorCXN0cnVjdCBzb2NrZXQgKnNvY2s7CisJ
aW50IHJldDsKKworCWlmIChpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9OQkxPQ0spCisJ
CXJldHVybiAtRUFHQUlOOworCisJc29jayA9IHNvY2tfZnJvbV9maWxlKHJlcS0+ZmlsZSwg
JnJldCk7CisJaWYgKHVubGlrZWx5KCFzb2NrKSkKKwkJcmV0dXJuIHJldDsKKworCXJldCA9
IF9fc3lzX3NodXRkb3duX3NvY2soc29jaywgcmVxLT5zaHV0ZG93bi5ob3cpOworCWlmIChy
ZXQgPCAwKQorCQlyZXFfc2V0X2ZhaWwocmVxKTsKKwlpb19yZXFfY29tcGxldGUocmVxLCBy
ZXQpOworCXJldHVybiAwOworI2Vsc2UKKwlyZXR1cm4gLUVPUE5PVFNVUFA7CisjZW5kaWYK
K30KKworc3RhdGljIGludCBfX2lvX3NwbGljZV9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVx
LAorCQkJICAgIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKK3sKKwlzdHJ1Y3Qg
aW9fc3BsaWNlICpzcCA9ICZyZXEtPnNwbGljZTsKKwl1bnNpZ25lZCBpbnQgdmFsaWRfZmxh
Z3MgPSBTUExJQ0VfRl9GRF9JTl9GSVhFRCB8IFNQTElDRV9GX0FMTDsKIAorCWlmICh1bmxp
a2VseShyZXEtPmN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwlzcC0+bGVuID0gUkVBRF9PTkNFKHNxZS0+bGVuKTsKKwlzcC0+Zmxh
Z3MgPSBSRUFEX09OQ0Uoc3FlLT5zcGxpY2VfZmxhZ3MpOworCWlmICh1bmxpa2VseShzcC0+
ZmxhZ3MgJiB+dmFsaWRfZmxhZ3MpKQorCQlyZXR1cm4gLUVJTlZBTDsKKwlzcC0+c3BsaWNl
X2ZkX2luID0gUkVBRF9PTkNFKHNxZS0+c3BsaWNlX2ZkX2luKTsKIAlyZXR1cm4gMDsKIH0K
IApAQCAtMzY1Myw2MCArMzkwMCw3NSBAQCBzdGF0aWMgaW50IGlvX3RlZV9wcmVwKHN0cnVj
dCBpb19raW9jYiAqcmVxLAogCXJldHVybiBfX2lvX3NwbGljZV9wcmVwKHJlcSwgc3FlKTsK
IH0KIAotc3RhdGljIGludCBpb190ZWUoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9y
Y2Vfbm9uYmxvY2spCitzdGF0aWMgaW50IGlvX3RlZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
dW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewogCXN0cnVjdCBpb19zcGxpY2UgKnNwID0g
JnJlcS0+c3BsaWNlOwotCXN0cnVjdCBmaWxlICppbiA9IHNwLT5maWxlX2luOwogCXN0cnVj
dCBmaWxlICpvdXQgPSBzcC0+ZmlsZV9vdXQ7CiAJdW5zaWduZWQgaW50IGZsYWdzID0gc3At
PmZsYWdzICYgflNQTElDRV9GX0ZEX0lOX0ZJWEVEOworCXN0cnVjdCBmaWxlICppbjsKIAls
b25nIHJldCA9IDA7CiAKLQlpZiAoZm9yY2Vfbm9uYmxvY2spCisJaWYgKGlzc3VlX2ZsYWdz
ICYgSU9fVVJJTkdfRl9OT05CTE9DSykKIAkJcmV0dXJuIC1FQUdBSU47CisKKwlpbiA9IGlv
X2ZpbGVfZ2V0KHJlcS0+Y3R4LCByZXEsIHNwLT5zcGxpY2VfZmRfaW4sCisJCQkJICAoc3At
PmZsYWdzICYgU1BMSUNFX0ZfRkRfSU5fRklYRUQpKTsKKwlpZiAoIWluKSB7CisJCXJldCA9
IC1FQkFERjsKKwkJZ290byBkb25lOworCX0KKwogCWlmIChzcC0+bGVuKQogCQlyZXQgPSBk
b190ZWUoaW4sIG91dCwgc3AtPmxlbiwgZmxhZ3MpOwogCi0JaW9fcHV0X2ZpbGUocmVxLCBp
biwgKHNwLT5mbGFncyAmIFNQTElDRV9GX0ZEX0lOX0ZJWEVEKSk7Ci0JcmVxLT5mbGFncyAm
PSB+UkVRX0ZfTkVFRF9DTEVBTlVQOwotCisJaWYgKCEoc3AtPmZsYWdzICYgU1BMSUNFX0Zf
RkRfSU5fRklYRUQpKQorCQlpb19wdXRfZmlsZShpbik7Citkb25lOgogCWlmIChyZXQgIT0g
c3AtPmxlbikKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7CisJCXJlcV9zZXRfZmFpbChy
ZXEpOwogCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CiAJcmV0dXJuIDA7CiB9CiAKIHN0
YXRpYyBpbnQgaW9fc3BsaWNlX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0
cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIHsKLQlzdHJ1Y3QgaW9fc3BsaWNlKiBzcCA9ICZy
ZXEtPnNwbGljZTsKKwlzdHJ1Y3QgaW9fc3BsaWNlICpzcCA9ICZyZXEtPnNwbGljZTsKIAog
CXNwLT5vZmZfaW4gPSBSRUFEX09OQ0Uoc3FlLT5zcGxpY2Vfb2ZmX2luKTsKIAlzcC0+b2Zm
X291dCA9IFJFQURfT05DRShzcWUtPm9mZik7CiAJcmV0dXJuIF9faW9fc3BsaWNlX3ByZXAo
cmVxLCBzcWUpOwogfQogCi1zdGF0aWMgaW50IGlvX3NwbGljZShzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaykKK3N0YXRpYyBpbnQgaW9fc3BsaWNlKHN0cnVj
dCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0
IGlvX3NwbGljZSAqc3AgPSAmcmVxLT5zcGxpY2U7Ci0Jc3RydWN0IGZpbGUgKmluID0gc3At
PmZpbGVfaW47CiAJc3RydWN0IGZpbGUgKm91dCA9IHNwLT5maWxlX291dDsKIAl1bnNpZ25l
ZCBpbnQgZmxhZ3MgPSBzcC0+ZmxhZ3MgJiB+U1BMSUNFX0ZfRkRfSU5fRklYRUQ7CiAJbG9m
Zl90ICpwb2ZmX2luLCAqcG9mZl9vdXQ7CisJc3RydWN0IGZpbGUgKmluOwogCWxvbmcgcmV0
ID0gMDsKIAotCWlmIChmb3JjZV9ub25ibG9jaykKKwlpZiAoaXNzdWVfZmxhZ3MgJiBJT19V
UklOR19GX05PTkJMT0NLKQogCQlyZXR1cm4gLUVBR0FJTjsKIAorCWluID0gaW9fZmlsZV9n
ZXQocmVxLT5jdHgsIHJlcSwgc3AtPnNwbGljZV9mZF9pbiwKKwkJCQkgIChzcC0+ZmxhZ3Mg
JiBTUExJQ0VfRl9GRF9JTl9GSVhFRCkpOworCWlmICghaW4pIHsKKwkJcmV0ID0gLUVCQURG
OworCQlnb3RvIGRvbmU7CisJfQorCiAJcG9mZl9pbiA9IChzcC0+b2ZmX2luID09IC0xKSA/
IE5VTEwgOiAmc3AtPm9mZl9pbjsKIAlwb2ZmX291dCA9IChzcC0+b2ZmX291dCA9PSAtMSkg
PyBOVUxMIDogJnNwLT5vZmZfb3V0OwogCiAJaWYgKHNwLT5sZW4pCiAJCXJldCA9IGRvX3Nw
bGljZShpbiwgcG9mZl9pbiwgb3V0LCBwb2ZmX291dCwgc3AtPmxlbiwgZmxhZ3MpOwogCi0J
aW9fcHV0X2ZpbGUocmVxLCBpbiwgKHNwLT5mbGFncyAmIFNQTElDRV9GX0ZEX0lOX0ZJWEVE
KSk7Ci0JcmVxLT5mbGFncyAmPSB+UkVRX0ZfTkVFRF9DTEVBTlVQOwotCisJaWYgKCEoc3At
PmZsYWdzICYgU1BMSUNFX0ZfRkRfSU5fRklYRUQpKQorCQlpb19wdXRfZmlsZShpbik7Citk
b25lOgogCWlmIChyZXQgIT0gc3AtPmxlbikKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7
CisJCXJlcV9zZXRfZmFpbChyZXEpOwogCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CiAJ
cmV0dXJuIDA7CiB9CkBAIC0zNzE0LDI0ICszOTc2LDIxIEBAIHN0YXRpYyBpbnQgaW9fc3Bs
aWNlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrKQogLyoKICAq
IElPUklOR19PUF9OT1AganVzdCBwb3N0cyBhIGNvbXBsZXRpb24gZXZlbnQsIG5vdGhpbmcg
ZWxzZS4KICAqLwotc3RhdGljIGludCBpb19ub3Aoc3RydWN0IGlvX2tpb2NiICpyZXEsIHN0
cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBpbnQgaW9fbm9wKHN0cnVjdCBpb19r
aW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHggPSByZXEtPmN0eDsKIAogCWlmICh1bmxpa2VseShjdHgtPmZsYWdzICYg
SU9SSU5HX1NFVFVQX0lPUE9MTCkpCiAJCXJldHVybiAtRUlOVkFMOwogCi0JX19pb19yZXFf
Y29tcGxldGUocmVxLCAwLCAwLCBjcyk7CisJX19pb19yZXFfY29tcGxldGUocmVxLCBpc3N1
ZV9mbGFncywgMCwgMCk7CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcHJlcF9m
c3luYyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAq
c3FlKQorc3RhdGljIGludCBpb19mc3luY19wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBj
b25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCiB7CiAJc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHggPSByZXEtPmN0eDsKIAotCWlmICghcmVxLT5maWxlKQotCQlyZXR1cm4gLUVCQURG
OwotCiAJaWYgKHVubGlrZWx5KGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkK
IAkJcmV0dXJuIC1FSU5WQUw7CiAJaWYgKHVubGlrZWx5KHNxZS0+YWRkciB8fCBzcWUtPmlv
cHJpbyB8fCBzcWUtPmJ1Zl9pbmRleCB8fApAQCAtMzc0NywyMCArNDAwNiwyMCBAQCBzdGF0
aWMgaW50IGlvX3ByZXBfZnN5bmMoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVj
dCBpb191cmluZ19zcWUgKnNxZSkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBpb19m
c3luYyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaykKK3N0YXRp
YyBpbnQgaW9fZnN5bmMoc3RydWN0IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1
ZV9mbGFncykKIHsKIAlsb2ZmX3QgZW5kID0gcmVxLT5zeW5jLm9mZiArIHJlcS0+c3luYy5s
ZW47CiAJaW50IHJldDsKIAogCS8qIGZzeW5jIGFsd2F5cyByZXF1aXJlcyBhIGJsb2NraW5n
IGNvbnRleHQgKi8KLQlpZiAoZm9yY2Vfbm9uYmxvY2spCisJaWYgKGlzc3VlX2ZsYWdzICYg
SU9fVVJJTkdfRl9OT05CTE9DSykKIAkJcmV0dXJuIC1FQUdBSU47CiAKIAlyZXQgPSB2ZnNf
ZnN5bmNfcmFuZ2UocmVxLT5maWxlLCByZXEtPnN5bmMub2ZmLAogCQkJCWVuZCA+IDAgPyBl
bmQgOiBMTE9OR19NQVgsCiAJCQkJcmVxLT5zeW5jLmZsYWdzICYgSU9SSU5HX0ZTWU5DX0RB
VEFTWU5DKTsKIAlpZiAocmV0IDwgMCkKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7CisJ
CXJlcV9zZXRfZmFpbChyZXEpOwogCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CiAJcmV0
dXJuIDA7CiB9CkBAIC0zNzgwLDE3ICs0MDM5LDE5IEBAIHN0YXRpYyBpbnQgaW9fZmFsbG9j
YXRlX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRp
YyBpbnQgaW9fZmFsbG9jYXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25v
bmJsb2NrKQorc3RhdGljIGludCBpb19mYWxsb2NhdGUoc3RydWN0IGlvX2tpb2NiICpyZXEs
IHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKIAlpbnQgcmV0OwogCiAJLyogZmFsbG9j
YXRlIGFsd2F5cyByZXF1aXJpbmcgYmxvY2tpbmcgY29udGV4dCAqLwotCWlmIChmb3JjZV9u
b25ibG9jaykKKwlpZiAoaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKQogCQly
ZXR1cm4gLUVBR0FJTjsKIAlyZXQgPSB2ZnNfZmFsbG9jYXRlKHJlcS0+ZmlsZSwgcmVxLT5z
eW5jLm1vZGUsIHJlcS0+c3luYy5vZmYsCiAJCQkJcmVxLT5zeW5jLmxlbik7CiAJaWYgKHJl
dCA8IDApCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOworCQlyZXFfc2V0X2ZhaWwocmVx
KTsKKwllbHNlCisJCWZzbm90aWZ5X21vZGlmeShyZXEtPmZpbGUpOwogCWlvX3JlcV9jb21w
bGV0ZShyZXEsIHJldCk7CiAJcmV0dXJuIDA7CiB9CkBAIC0zODAwLDcgKzQwNjEsOSBAQCBz
dGF0aWMgaW50IF9faW9fb3BlbmF0X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0
IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZQogCWNvbnN0IGNoYXIgX191c2VyICpmbmFtZTsK
IAlpbnQgcmV0OwogCi0JaWYgKHVubGlrZWx5KHNxZS0+aW9wcmlvIHx8IHNxZS0+YnVmX2lu
ZGV4IHx8IHNxZS0+c3BsaWNlX2ZkX2luKSkKKwlpZiAodW5saWtlbHkocmVxLT5jdHgtPmZs
YWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkpCisJCXJldHVybiAtRUlOVkFMOworCWlmICh1
bmxpa2VseShzcWUtPmlvcHJpbyB8fCBzcWUtPmJ1Zl9pbmRleCkpCiAJCXJldHVybiAtRUlO
VkFMOwogCWlmICh1bmxpa2VseShyZXEtPmZsYWdzICYgUkVRX0ZfRklYRURfRklMRSkpCiAJ
CXJldHVybiAtRUJBREY7CkBAIC0zODE3LDIwICs0MDgwLDIxIEBAIHN0YXRpYyBpbnQgX19p
b19vcGVuYXRfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3Vy
aW5nX3NxZSAqc3FlCiAJCXJlcS0+b3Blbi5maWxlbmFtZSA9IE5VTEw7CiAJCXJldHVybiBy
ZXQ7CiAJfQorCisJcmVxLT5vcGVuLmZpbGVfc2xvdCA9IFJFQURfT05DRShzcWUtPmZpbGVf
aW5kZXgpOworCWlmIChyZXEtPm9wZW4uZmlsZV9zbG90ICYmIChyZXEtPm9wZW4uaG93LmZs
YWdzICYgT19DTE9FWEVDKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKIAlyZXEtPm9wZW4ubm9m
aWxlID0gcmxpbWl0KFJMSU1JVF9OT0ZJTEUpOwotCXJlcS0+b3Blbi5pZ25vcmVfbm9uYmxv
Y2sgPSBmYWxzZTsKIAlyZXEtPmZsYWdzIHw9IFJFUV9GX05FRURfQ0xFQU5VUDsKIAlyZXR1
cm4gMDsKIH0KIAogc3RhdGljIGludCBpb19vcGVuYXRfcHJlcChzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3FlKQogewotCXU2NCBmbGFncywg
bW9kZTsKKwl1NjQgbW9kZSA9IFJFQURfT05DRShzcWUtPmxlbik7CisJdTY0IGZsYWdzID0g
UkVBRF9PTkNFKHNxZS0+b3Blbl9mbGFncyk7CiAKLQlpZiAodW5saWtlbHkocmVxLT5jdHgt
PmZsYWdzICYgKElPUklOR19TRVRVUF9JT1BPTEx8SU9SSU5HX1NFVFVQX1NRUE9MTCkpKQot
CQlyZXR1cm4gLUVJTlZBTDsKLQltb2RlID0gUkVBRF9PTkNFKHNxZS0+bGVuKTsKLQlmbGFn
cyA9IFJFQURfT05DRShzcWUtPm9wZW5fZmxhZ3MpOwogCXJlcS0+b3Blbi5ob3cgPSBidWls
ZF9vcGVuX2hvdyhmbGFncywgbW9kZSk7CiAJcmV0dXJuIF9faW9fb3BlbmF0X3ByZXAocmVx
LCBzcWUpOwogfQpAQCAtMzg0MSw4ICs0MTA1LDYgQEAgc3RhdGljIGludCBpb19vcGVuYXQy
X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUg
KnNxZSkKIAlzaXplX3QgbGVuOwogCWludCByZXQ7CiAKLQlpZiAodW5saWtlbHkocmVxLT5j
dHgtPmZsYWdzICYgKElPUklOR19TRVRVUF9JT1BPTEx8SU9SSU5HX1NFVFVQX1NRUE9MTCkp
KQotCQlyZXR1cm4gLUVJTlZBTDsKIAlob3cgPSB1NjRfdG9fdXNlcl9wdHIoUkVBRF9PTkNF
KHNxZS0+YWRkcjIpKTsKIAlsZW4gPSBSRUFEX09OQ0Uoc3FlLT5sZW4pOwogCWlmIChsZW4g
PCBPUEVOX0hPV19TSVpFX1ZFUjApCkBAIC0zODU2LDU4ICs0MTE4LDc1IEBAIHN0YXRpYyBp
bnQgaW9fb3BlbmF0Ml9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3Qg
aW9fdXJpbmdfc3FlICpzcWUpCiAJcmV0dXJuIF9faW9fb3BlbmF0X3ByZXAocmVxLCBzcWUp
OwogfQogCi1zdGF0aWMgaW50IGlvX29wZW5hdDIoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJv
b2wgZm9yY2Vfbm9uYmxvY2spCitzdGF0aWMgaW50IGlvX29wZW5hdDIoc3RydWN0IGlvX2tp
b2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKIAlzdHJ1Y3Qgb3Blbl9m
bGFncyBvcDsKIAlzdHJ1Y3QgZmlsZSAqZmlsZTsKKwlib29sIHJlc29sdmVfbm9uYmxvY2ss
IG5vbmJsb2NrX3NldDsKKwlib29sIGZpeGVkID0gISFyZXEtPm9wZW4uZmlsZV9zbG90Owog
CWludCByZXQ7CiAKLQlpZiAoZm9yY2Vfbm9uYmxvY2sgJiYgIXJlcS0+b3Blbi5pZ25vcmVf
bm9uYmxvY2spCi0JCXJldHVybiAtRUFHQUlOOwotCiAJcmV0ID0gYnVpbGRfb3Blbl9mbGFn
cygmcmVxLT5vcGVuLmhvdywgJm9wKTsKIAlpZiAocmV0KQogCQlnb3RvIGVycjsKKwlub25i
bG9ja19zZXQgPSBvcC5vcGVuX2ZsYWcgJiBPX05PTkJMT0NLOworCXJlc29sdmVfbm9uYmxv
Y2sgPSByZXEtPm9wZW4uaG93LnJlc29sdmUgJiBSRVNPTFZFX0NBQ0hFRDsKKwlpZiAoaXNz
dWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKSB7CisJCS8qCisJCSAqIERvbid0IGJv
dGhlciB0cnlpbmcgZm9yIE9fVFJVTkMsIE9fQ1JFQVQsIG9yIE9fVE1QRklMRSBvcGVuLAor
CQkgKiBpdCdsbCBhbHdheXMgLUVBR0FJTgorCQkgKi8KKwkJaWYgKHJlcS0+b3Blbi5ob3cu
ZmxhZ3MgJiAoT19UUlVOQyB8IE9fQ1JFQVQgfCBPX1RNUEZJTEUpKQorCQkJcmV0dXJuIC1F
QUdBSU47CisJCW9wLmxvb2t1cF9mbGFncyB8PSBMT09LVVBfQ0FDSEVEOworCQlvcC5vcGVu
X2ZsYWcgfD0gT19OT05CTE9DSzsKKwl9CiAKLQlyZXQgPSBfX2dldF91bnVzZWRfZmRfZmxh
Z3MocmVxLT5vcGVuLmhvdy5mbGFncywgcmVxLT5vcGVuLm5vZmlsZSk7Ci0JaWYgKHJldCA8
IDApCi0JCWdvdG8gZXJyOworCWlmICghZml4ZWQpIHsKKwkJcmV0ID0gX19nZXRfdW51c2Vk
X2ZkX2ZsYWdzKHJlcS0+b3Blbi5ob3cuZmxhZ3MsIHJlcS0+b3Blbi5ub2ZpbGUpOworCQlp
ZiAocmV0IDwgMCkKKwkJCWdvdG8gZXJyOworCX0KIAogCWZpbGUgPSBkb19maWxwX29wZW4o
cmVxLT5vcGVuLmRmZCwgcmVxLT5vcGVuLmZpbGVuYW1lLCAmb3ApOwogCWlmIChJU19FUlIo
ZmlsZSkpIHsKLQkJcHV0X3VudXNlZF9mZChyZXQpOwotCQlyZXQgPSBQVFJfRVJSKGZpbGUp
OwogCQkvKgotCQkgKiBBIHdvcmstYXJvdW5kIHRvIGVuc3VyZSB0aGF0IC9wcm9jL3NlbGYg
d29ya3MgdGhhdCB3YXkKLQkJICogdGhhdCBpdCBzaG91bGQgLSBpZiB3ZSBnZXQgLUVPUE5P
VFNVUFAgYmFjaywgdGhlbiBhc3N1bWUKLQkJICogdGhhdCBwcm9jX3NlbGZfZ2V0X2xpbmso
KSBmYWlsZWQgdXMgYmVjYXVzZSB3ZSdyZSBpbiBhc3luYwotCQkgKiBjb250ZXh0LiBXZSBz
aG91bGQgYmUgc2FmZSB0byByZXRyeSB0aGlzIGZyb20gdGhlIHRhc2sKLQkJICogaXRzZWxm
IHdpdGggZm9yY2Vfbm9uYmxvY2sgPT0gZmFsc2Ugc2V0LCBhcyBpdCBzaG91bGQgbm90Ci0J
CSAqIGJsb2NrIG9uIGxvb2t1cC4gV291bGQgYmUgbmljZSB0byBrbm93IHRoaXMgdXBmcm9u
dCBhbmQKLQkJICogYXZvaWQgdGhlIGFzeW5jIGRhbmNlLCBidXQgZG9lc24ndCBzZWVtIGZl
YXNpYmxlLgorCQkgKiBXZSBjb3VsZCBoYW5nIG9uIHRvIHRoaXMgJ2ZkJyBvbiByZXRyeWlu
ZywgYnV0IHNlZW1zIGxpa2UKKwkJICogbWFyZ2luYWwgZ2FpbiBmb3Igc29tZXRoaW5nIHRo
YXQgaXMgbm93IGtub3duIHRvIGJlIGEgc2xvd2VyCisJCSAqIHBhdGguIFNvIGp1c3QgcHV0
IGl0LCBhbmQgd2UnbGwgZ2V0IGEgbmV3IG9uZSB3aGVuIHdlIHJldHJ5LgogCQkgKi8KLQkJ
aWYgKHJldCA9PSAtRU9QTk9UU1VQUCAmJiBpb193cV9jdXJyZW50X2lzX3dvcmtlcigpKSB7
Ci0JCQlyZXEtPm9wZW4uaWdub3JlX25vbmJsb2NrID0gdHJ1ZTsKLQkJCXJlZmNvdW50X2lu
YygmcmVxLT5yZWZzKTsKLQkJCWlvX3JlcV90YXNrX3F1ZXVlKHJlcSk7Ci0JCQlyZXR1cm4g
MDsKLQkJfQotCX0gZWxzZSB7Ci0JCWZzbm90aWZ5X29wZW4oZmlsZSk7Ci0JCWZkX2luc3Rh
bGwocmV0LCBmaWxlKTsKKwkJaWYgKCFmaXhlZCkKKwkJCXB1dF91bnVzZWRfZmQocmV0KTsK
KworCQlyZXQgPSBQVFJfRVJSKGZpbGUpOworCQkvKiBvbmx5IHJldHJ5IGlmIFJFU09MVkVf
Q0FDSEVEIHdhc24ndCBhbHJlYWR5IHNldCBieSBhcHBsaWNhdGlvbiAqLworCQlpZiAocmV0
ID09IC1FQUdBSU4gJiYKKwkJICAgICghcmVzb2x2ZV9ub25ibG9jayAmJiAoaXNzdWVfZmxh
Z3MgJiBJT19VUklOR19GX05PTkJMT0NLKSkpCisJCQlyZXR1cm4gLUVBR0FJTjsKKwkJZ290
byBlcnI7CiAJfQorCisJaWYgKChpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9OQkxPQ0sp
ICYmICFub25ibG9ja19zZXQpCisJCWZpbGUtPmZfZmxhZ3MgJj0gfk9fTk9OQkxPQ0s7CisJ
ZnNub3RpZnlfb3BlbihmaWxlKTsKKworCWlmICghZml4ZWQpCisJCWZkX2luc3RhbGwocmV0
LCBmaWxlKTsKKwllbHNlCisJCXJldCA9IGlvX2luc3RhbGxfZml4ZWRfZmlsZShyZXEsIGZp
bGUsIGlzc3VlX2ZsYWdzLAorCQkJCQkgICAgcmVxLT5vcGVuLmZpbGVfc2xvdCAtIDEpOwog
ZXJyOgogCXB1dG5hbWUocmVxLT5vcGVuLmZpbGVuYW1lKTsKIAlyZXEtPmZsYWdzICY9IH5S
RVFfRl9ORUVEX0NMRUFOVVA7CiAJaWYgKHJldCA8IDApCi0JCXJlcV9zZXRfZmFpbF9saW5r
cyhyZXEpOwotCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CisJCXJlcV9zZXRfZmFpbChy
ZXEpOworCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgaXNzdWVfZmxhZ3MsIHJldCwgMCk7CiAJ
cmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fb3BlbmF0KHN0cnVjdCBpb19raW9jYiAq
cmVxLCBib29sIGZvcmNlX25vbmJsb2NrKQorc3RhdGljIGludCBpb19vcGVuYXQoc3RydWN0
IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKLQlyZXR1cm4g
aW9fb3BlbmF0MihyZXEsIGZvcmNlX25vbmJsb2NrKTsKKwlyZXR1cm4gaW9fb3BlbmF0Mihy
ZXEsIGlzc3VlX2ZsYWdzKTsKIH0KIAogc3RhdGljIGludCBpb19yZW1vdmVfYnVmZmVyc19w
cmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLApAQCAtMzk0OCw2ICs0MjI3LDcgQEAgc3RhdGlj
IGludCBfX2lvX3JlbW92ZV9idWZmZXJzKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1
Y3QgaW9fYnVmZmVyICpidWYsCiAJCWtmcmVlKG54dCk7CiAJCWlmICgrK2kgPT0gbmJ1ZnMp
CiAJCQlyZXR1cm4gaTsKKwkJY29uZF9yZXNjaGVkKCk7CiAJfQogCWkrKzsKIAlrZnJlZShi
dWYpOwpAQCAtMzk1NiwxMyArNDIzNiwxMyBAQCBzdGF0aWMgaW50IF9faW9fcmVtb3ZlX2J1
ZmZlcnMoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBpb19idWZmZXIgKmJ1ZiwK
IAlyZXR1cm4gaTsKIH0KIAotc3RhdGljIGludCBpb19yZW1vdmVfYnVmZmVycyhzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKLQkJCSAgICAgc3RydWN0IGlv
X2NvbXBfc3RhdGUgKmNzKQorc3RhdGljIGludCBpb19yZW1vdmVfYnVmZmVycyhzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewogCXN0cnVjdCBp
b19wcm92aWRlX2J1ZiAqcCA9ICZyZXEtPnBidWY7CiAJc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHggPSByZXEtPmN0eDsKIAlzdHJ1Y3QgaW9fYnVmZmVyICpoZWFkOwogCWludCByZXQgPSAw
OworCWJvb2wgZm9yY2Vfbm9uYmxvY2sgPSBpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9O
QkxPQ0s7CiAKIAlpb19yaW5nX3N1Ym1pdF9sb2NrKGN0eCwgIWZvcmNlX25vbmJsb2NrKTsK
IApAQCAtMzk3MywxNiArNDI1MywxMSBAQCBzdGF0aWMgaW50IGlvX3JlbW92ZV9idWZmZXJz
KHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAogCWlmIChoZWFk
KQogCQlyZXQgPSBfX2lvX3JlbW92ZV9idWZmZXJzKGN0eCwgaGVhZCwgcC0+YmdpZCwgcC0+
bmJ1ZnMpOwogCWlmIChyZXQgPCAwKQotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKKwkJ
cmVxX3NldF9mYWlsKHJlcSk7CiAKLQkvKiBuZWVkIHRvIGhvbGQgdGhlIGxvY2sgdG8gY29t
cGxldGUgSU9QT0xMIHJlcXVlc3RzICovCi0JaWYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VU
VVBfSU9QT0xMKSB7Ci0JCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0LCAwLCBjcyk7Ci0J
CWlvX3Jpbmdfc3VibWl0X3VubG9jayhjdHgsICFmb3JjZV9ub25ibG9jayk7Ci0JfSBlbHNl
IHsKLQkJaW9fcmluZ19zdWJtaXRfdW5sb2NrKGN0eCwgIWZvcmNlX25vbmJsb2NrKTsKLQkJ
X19pb19yZXFfY29tcGxldGUocmVxLCByZXQsIDAsIGNzKTsKLQl9CisJLyogY29tcGxldGUg
YmVmb3JlIHVubG9jaywgSU9QT0xMIG1heSBuZWVkIHRoZSBsb2NrICovCisJX19pb19yZXFf
Y29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCAwKTsKKwlpb19yaW5nX3N1Ym1pdF91
bmxvY2soY3R4LCAhZm9yY2Vfbm9uYmxvY2spOwogCXJldHVybiAwOwogfQogCkBAIC00MDQ5
LDEzICs0MzI0LDEzIEBAIHN0YXRpYyBpbnQgaW9fYWRkX2J1ZmZlcnMoc3RydWN0IGlvX3By
b3ZpZGVfYnVmICpwYnVmLCBzdHJ1Y3QgaW9fYnVmZmVyICoqaGVhZCkKIAlyZXR1cm4gaSA/
IGkgOiAtRU5PTUVNOwogfQogCi1zdGF0aWMgaW50IGlvX3Byb3ZpZGVfYnVmZmVycyhzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKLQkJCSAgICAgIHN0cnVj
dCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBpbnQgaW9fcHJvdmlkZV9idWZmZXJzKHN0
cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3Ry
dWN0IGlvX3Byb3ZpZGVfYnVmICpwID0gJnJlcS0+cGJ1ZjsKIAlzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCA9IHJlcS0+Y3R4OwogCXN0cnVjdCBpb19idWZmZXIgKmhlYWQsICpsaXN0Owog
CWludCByZXQgPSAwOworCWJvb2wgZm9yY2Vfbm9uYmxvY2sgPSBpc3N1ZV9mbGFncyAmIElP
X1VSSU5HX0ZfTk9OQkxPQ0s7CiAKIAlpb19yaW5nX3N1Ym1pdF9sb2NrKGN0eCwgIWZvcmNl
X25vbmJsb2NrKTsKIApAQCAtNDA2NSwyMSArNDM0MCwxNiBAQCBzdGF0aWMgaW50IGlvX3By
b3ZpZGVfYnVmZmVycyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9j
aywKIAogCXJldCA9IGlvX2FkZF9idWZmZXJzKHAsICZoZWFkKTsKIAlpZiAocmV0ID49IDAg
JiYgIWxpc3QpIHsKLQkJcmV0ID0geGFfaW5zZXJ0KCZjdHgtPmlvX2J1ZmZlcnMsIHAtPmJn
aWQsIGhlYWQsIEdGUF9LRVJORUwpOworCQlyZXQgPSB4YV9pbnNlcnQoJmN0eC0+aW9fYnVm
ZmVycywgcC0+YmdpZCwgaGVhZCwKKwkJCQlHRlBfS0VSTkVMX0FDQ09VTlQpOwogCQlpZiAo
cmV0IDwgMCkKIAkJCV9faW9fcmVtb3ZlX2J1ZmZlcnMoY3R4LCBoZWFkLCBwLT5iZ2lkLCAt
MVUpOwogCX0KIAlpZiAocmV0IDwgMCkKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7Ci0K
LQkvKiBuZWVkIHRvIGhvbGQgdGhlIGxvY2sgdG8gY29tcGxldGUgSU9QT0xMIHJlcXVlc3Rz
ICovCi0JaWYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSB7Ci0JCV9faW9f
cmVxX2NvbXBsZXRlKHJlcSwgcmV0LCAwLCBjcyk7Ci0JCWlvX3Jpbmdfc3VibWl0X3VubG9j
ayhjdHgsICFmb3JjZV9ub25ibG9jayk7Ci0JfSBlbHNlIHsKLQkJaW9fcmluZ19zdWJtaXRf
dW5sb2NrKGN0eCwgIWZvcmNlX25vbmJsb2NrKTsKLQkJX19pb19yZXFfY29tcGxldGUocmVx
LCByZXQsIDAsIGNzKTsKLQl9CisJCXJlcV9zZXRfZmFpbChyZXEpOworCS8qIGNvbXBsZXRl
IGJlZm9yZSB1bmxvY2ssIElPUE9MTCBtYXkgbmVlZCB0aGUgbG9jayAqLworCV9faW9fcmVx
X2NvbXBsZXRlKHJlcSwgaXNzdWVfZmxhZ3MsIHJldCwgMCk7CisJaW9fcmluZ19zdWJtaXRf
dW5sb2NrKGN0eCwgIWZvcmNlX25vbmJsb2NrKTsKIAlyZXR1cm4gMDsKIH0KIApAQCAtNDA4
OSw3ICs0MzU5LDcgQEAgc3RhdGljIGludCBpb19lcG9sbF9jdGxfcHJlcChzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSwKICNpZiBkZWZpbmVkKENPTkZJR19FUE9MTCkKIAlpZiAoc3FlLT5pb3By
aW8gfHwgc3FlLT5idWZfaW5kZXggfHwgc3FlLT5zcGxpY2VfZmRfaW4pCiAJCXJldHVybiAt
RUlOVkFMOwotCWlmICh1bmxpa2VseShyZXEtPmN0eC0+ZmxhZ3MgJiAoSU9SSU5HX1NFVFVQ
X0lPUE9MTCB8IElPUklOR19TRVRVUF9TUVBPTEwpKSkKKwlpZiAodW5saWtlbHkocmVxLT5j
dHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkpCiAJCXJldHVybiAtRUlOVkFMOwog
CiAJcmVxLT5lcG9sbC5lcGZkID0gUkVBRF9PTkNFKHNxZS0+ZmQpOwpAQCAtNDExMCwyMCAr
NDM4MCwyMCBAQCBzdGF0aWMgaW50IGlvX2Vwb2xsX2N0bF9wcmVwKHN0cnVjdCBpb19raW9j
YiAqcmVxLAogI2VuZGlmCiB9CiAKLXN0YXRpYyBpbnQgaW9fZXBvbGxfY3RsKHN0cnVjdCBp
b19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAotCQkJc3RydWN0IGlvX2NvbXBf
c3RhdGUgKmNzKQorc3RhdGljIGludCBpb19lcG9sbF9jdGwoc3RydWN0IGlvX2tpb2NiICpy
ZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKICNpZiBkZWZpbmVkKENPTkZJR19F
UE9MTCkKIAlzdHJ1Y3QgaW9fZXBvbGwgKmllID0gJnJlcS0+ZXBvbGw7CiAJaW50IHJldDsK
Kwlib29sIGZvcmNlX25vbmJsb2NrID0gaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJM
T0NLOwogCiAJcmV0ID0gZG9fZXBvbGxfY3RsKGllLT5lcGZkLCBpZS0+b3AsIGllLT5mZCwg
JmllLT5ldmVudCwgZm9yY2Vfbm9uYmxvY2spOwogCWlmIChmb3JjZV9ub25ibG9jayAmJiBy
ZXQgPT0gLUVBR0FJTikKIAkJcmV0dXJuIC1FQUdBSU47CiAKIAlpZiAocmV0IDwgMCkKLQkJ
cmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7Ci0JX19pb19yZXFfY29tcGxldGUocmVxLCByZXQs
IDAsIGNzKTsKKwkJcmVxX3NldF9mYWlsKHJlcSk7CisJX19pb19yZXFfY29tcGxldGUocmVx
LCBpc3N1ZV9mbGFncywgcmV0LCAwKTsKIAlyZXR1cm4gMDsKICNlbHNlCiAJcmV0dXJuIC1F
T1BOT1RTVVBQOwpAQCAtNDE0NywxOCArNDQxNywxOCBAQCBzdGF0aWMgaW50IGlvX21hZHZp
c2VfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3Nx
ZSAqc3FlKQogI2VuZGlmCiB9CiAKLXN0YXRpYyBpbnQgaW9fbWFkdmlzZShzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaykKK3N0YXRpYyBpbnQgaW9fbWFkdmlz
ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewog
I2lmIGRlZmluZWQoQ09ORklHX0FEVklTRV9TWVNDQUxMUykgJiYgZGVmaW5lZChDT05GSUdf
TU1VKQogCXN0cnVjdCBpb19tYWR2aXNlICptYSA9ICZyZXEtPm1hZHZpc2U7CiAJaW50IHJl
dDsKIAotCWlmIChmb3JjZV9ub25ibG9jaykKKwlpZiAoaXNzdWVfZmxhZ3MgJiBJT19VUklO
R19GX05PTkJMT0NLKQogCQlyZXR1cm4gLUVBR0FJTjsKIAogCXJldCA9IGRvX21hZHZpc2Uo
Y3VycmVudC0+bW0sIG1hLT5hZGRyLCBtYS0+bGVuLCBtYS0+YWR2aWNlKTsKIAlpZiAocmV0
IDwgMCkKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7CisJCXJlcV9zZXRfZmFpbChyZXEp
OwogCWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7CiAJcmV0dXJuIDA7CiAjZWxzZQpAQCAt
NDE3OSwxMiArNDQ0OSwxMiBAQCBzdGF0aWMgaW50IGlvX2ZhZHZpc2VfcHJlcChzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3FlKQogCXJldHVy
biAwOwogfQogCi1zdGF0aWMgaW50IGlvX2ZhZHZpc2Uoc3RydWN0IGlvX2tpb2NiICpyZXEs
IGJvb2wgZm9yY2Vfbm9uYmxvY2spCitzdGF0aWMgaW50IGlvX2ZhZHZpc2Uoc3RydWN0IGlv
X2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKIAlzdHJ1Y3QgaW9f
ZmFkdmlzZSAqZmEgPSAmcmVxLT5mYWR2aXNlOwogCWludCByZXQ7CiAKLQlpZiAoZm9yY2Vf
bm9uYmxvY2spIHsKKwlpZiAoaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKSB7
CiAJCXN3aXRjaCAoZmEtPmFkdmljZSkgewogCQljYXNlIFBPU0lYX0ZBRFZfTk9STUFMOgog
CQljYXNlIFBPU0lYX0ZBRFZfUkFORE9NOgpAQCAtNDE5NywxNCArNDQ2NywxNCBAQCBzdGF0
aWMgaW50IGlvX2ZhZHZpc2Uoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9u
YmxvY2spCiAKIAlyZXQgPSB2ZnNfZmFkdmlzZShyZXEtPmZpbGUsIGZhLT5vZmZzZXQsIGZh
LT5sZW4sIGZhLT5hZHZpY2UpOwogCWlmIChyZXQgPCAwKQotCQlyZXFfc2V0X2ZhaWxfbGlu
a3MocmVxKTsKLQlpb19yZXFfY29tcGxldGUocmVxLCByZXQpOworCQlyZXFfc2V0X2ZhaWwo
cmVxKTsKKwlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3VlX2ZsYWdzLCByZXQsIDApOwog
CXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IGlvX3N0YXR4X3ByZXAoc3RydWN0IGlvX2tp
b2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIHsKLQlpZiAodW5s
aWtlbHkocmVxLT5jdHgtPmZsYWdzICYgKElPUklOR19TRVRVUF9JT1BPTEwgfCBJT1JJTkdf
U0VUVVBfU1FQT0xMKSkpCisJaWYgKHVubGlrZWx5KHJlcS0+Y3R4LT5mbGFncyAmIElPUklO
R19TRVRVUF9JT1BPTEwpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAlpZiAoc3FlLT5pb3ByaW8g
fHwgc3FlLT5idWZfaW5kZXggfHwgc3FlLT5zcGxpY2VfZmRfaW4pCiAJCXJldHVybiAtRUlO
VkFMOwpAQCAtNDIyMCw4OSArNDQ5MCw5NiBAQCBzdGF0aWMgaW50IGlvX3N0YXR4X3ByZXAo
c3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkK
IAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBpb19zdGF0eChzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaykKK3N0YXRpYyBpbnQgaW9fc3RhdHgoc3RydWN0
IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKIAlzdHJ1Y3Qg
aW9fc3RhdHggKmN0eCA9ICZyZXEtPnN0YXR4OwogCWludCByZXQ7CiAKLQlpZiAoZm9yY2Vf
bm9uYmxvY2spCisJaWYgKGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdfRl9OT05CTE9DSykKIAkJ
cmV0dXJuIC1FQUdBSU47CiAKIAlyZXQgPSBkb19zdGF0eChjdHgtPmRmZCwgY3R4LT5maWxl
bmFtZSwgY3R4LT5mbGFncywgY3R4LT5tYXNrLAogCQkgICAgICAgY3R4LT5idWZmZXIpOwog
CiAJaWYgKHJldCA8IDApCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOworCQlyZXFfc2V0
X2ZhaWwocmVxKTsKIAlpb19yZXFfY29tcGxldGUocmVxLCByZXQpOwogCXJldHVybiAwOwog
fQogCiBzdGF0aWMgaW50IGlvX2Nsb3NlX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNv
bnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIHsKLQkvKgotCSAqIElmIHdlIHF1ZXVl
IHRoaXMgZm9yIGFzeW5jLCBpdCBtdXN0IG5vdCBiZSBjYW5jZWxsYWJsZS4gVGhhdCB3b3Vs
ZAotCSAqIGxlYXZlIHRoZSAnZmlsZScgaW4gYW4gdW5kZXRlcm1pbmF0ZSBzdGF0ZSwgYW5k
IGhlcmUgbmVlZCB0byBtb2RpZnkKLQkgKiBpb193cV93b3JrLmZsYWdzLCBzbyBpbml0aWFs
aXplIGlvX3dxX3dvcmsgZmlyc3RseS4KLQkgKi8KLQlpb19yZXFfaW5pdF9hc3luYyhyZXEp
OwotCi0JaWYgKHVubGlrZWx5KHJlcS0+Y3R4LT5mbGFncyAmIChJT1JJTkdfU0VUVVBfSU9Q
T0xMfElPUklOR19TRVRVUF9TUVBPTEwpKSkKKwlpZiAodW5saWtlbHkocmVxLT5jdHgtPmZs
YWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkpCiAJCXJldHVybiAtRUlOVkFMOwogCWlmIChz
cWUtPmlvcHJpbyB8fCBzcWUtPm9mZiB8fCBzcWUtPmFkZHIgfHwgc3FlLT5sZW4gfHwKLQkg
ICAgc3FlLT5yd19mbGFncyB8fCBzcWUtPmJ1Zl9pbmRleCB8fCBzcWUtPnNwbGljZV9mZF9p
bikKKwkgICAgc3FlLT5yd19mbGFncyB8fCBzcWUtPmJ1Zl9pbmRleCkKIAkJcmV0dXJuIC1F
SU5WQUw7CiAJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9GSVhFRF9GSUxFKQogCQlyZXR1cm4g
LUVCQURGOwogCiAJcmVxLT5jbG9zZS5mZCA9IFJFQURfT05DRShzcWUtPmZkKTsKLQlpZiAo
KHJlcS0+ZmlsZSAmJiByZXEtPmZpbGUtPmZfb3AgPT0gJmlvX3VyaW5nX2ZvcHMpKQotCQly
ZXR1cm4gLUVCQURGOworCXJlcS0+Y2xvc2UuZmlsZV9zbG90ID0gUkVBRF9PTkNFKHNxZS0+
ZmlsZV9pbmRleCk7CisJaWYgKHJlcS0+Y2xvc2UuZmlsZV9zbG90ICYmIHJlcS0+Y2xvc2Uu
ZmQpCisJCXJldHVybiAtRUlOVkFMOwogCi0JcmVxLT5jbG9zZS5wdXRfZmlsZSA9IE5VTEw7
CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fY2xvc2Uoc3RydWN0IGlvX2tpb2Ni
ICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCi0JCSAgICBzdHJ1Y3QgaW9fY29tcF9zdGF0
ZSAqY3MpCitzdGF0aWMgaW50IGlvX2Nsb3NlKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNp
Z25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CisJc3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMg
PSBjdXJyZW50LT5maWxlczsKIAlzdHJ1Y3QgaW9fY2xvc2UgKmNsb3NlID0gJnJlcS0+Y2xv
c2U7Ci0JaW50IHJldDsKKwlzdHJ1Y3QgZmR0YWJsZSAqZmR0OworCXN0cnVjdCBmaWxlICpm
aWxlID0gTlVMTDsKKwlpbnQgcmV0ID0gLUVCQURGOwogCi0JLyogbWlnaHQgYmUgYWxyZWFk
eSBkb25lIGR1cmluZyBub25ibG9jayBzdWJtaXNzaW9uICovCi0JaWYgKCFjbG9zZS0+cHV0
X2ZpbGUpIHsKLQkJcmV0ID0gY2xvc2VfZmRfZ2V0X2ZpbGUoY2xvc2UtPmZkLCAmY2xvc2Ut
PnB1dF9maWxlKTsKLQkJaWYgKHJldCA8IDApCi0JCQlyZXR1cm4gKHJldCA9PSAtRU5PRU5U
KSA/IC1FQkFERiA6IHJldDsKKwlpZiAocmVxLT5jbG9zZS5maWxlX3Nsb3QpIHsKKwkJcmV0
ID0gaW9fY2xvc2VfZml4ZWQocmVxLCBpc3N1ZV9mbGFncyk7CisJCWdvdG8gZXJyOworCX0K
KworCXNwaW5fbG9jaygmZmlsZXMtPmZpbGVfbG9jayk7CisJZmR0ID0gZmlsZXNfZmR0YWJs
ZShmaWxlcyk7CisJaWYgKGNsb3NlLT5mZCA+PSBmZHQtPm1heF9mZHMpIHsKKwkJc3Bpbl91
bmxvY2soJmZpbGVzLT5maWxlX2xvY2spOworCQlnb3RvIGVycjsKKwl9CisJZmlsZSA9IGZk
dC0+ZmRbY2xvc2UtPmZkXTsKKwlpZiAoIWZpbGUgfHwgZmlsZS0+Zl9vcCA9PSAmaW9fdXJp
bmdfZm9wcykgeworCQlzcGluX3VubG9jaygmZmlsZXMtPmZpbGVfbG9jayk7CisJCWZpbGUg
PSBOVUxMOworCQlnb3RvIGVycjsKIAl9CiAKIAkvKiBpZiB0aGUgZmlsZSBoYXMgYSBmbHVz
aCBtZXRob2QsIGJlIHNhZmUgYW5kIHB1bnQgdG8gYXN5bmMgKi8KLQlpZiAoY2xvc2UtPnB1
dF9maWxlLT5mX29wLT5mbHVzaCAmJiBmb3JjZV9ub25ibG9jaykgewotCQkvKiBub3Qgc2Fm
ZSB0byBjYW5jZWwgYXQgdGhpcyBwb2ludCAqLwotCQlyZXEtPndvcmsuZmxhZ3MgfD0gSU9f
V1FfV09SS19OT19DQU5DRUw7Ci0JCS8qIHdhcyBuZXZlciBzZXQsIGJ1dCBwbGF5IHNhZmUg
Ki8KLQkJcmVxLT5mbGFncyAmPSB+UkVRX0ZfTk9XQUlUOwotCQkvKiBhdm9pZCBncmFiYmlu
ZyBmaWxlcyAtIHdlIGRvbid0IG5lZWQgdGhlIGZpbGVzICovCi0JCXJlcS0+ZmxhZ3MgfD0g
UkVRX0ZfTk9fRklMRV9UQUJMRTsKKwlpZiAoZmlsZS0+Zl9vcC0+Zmx1c2ggJiYgKGlzc3Vl
X2ZsYWdzICYgSU9fVVJJTkdfRl9OT05CTE9DSykpIHsKKwkJc3Bpbl91bmxvY2soJmZpbGVz
LT5maWxlX2xvY2spOwogCQlyZXR1cm4gLUVBR0FJTjsKIAl9CiAKKwlyZXQgPSBfX2Nsb3Nl
X2ZkX2dldF9maWxlKGNsb3NlLT5mZCwgJmZpbGUpOworCXNwaW5fdW5sb2NrKCZmaWxlcy0+
ZmlsZV9sb2NrKTsKKwlpZiAocmV0IDwgMCkgeworCQlpZiAocmV0ID09IC1FTk9FTlQpCisJ
CQlyZXQgPSAtRUJBREY7CisJCWdvdG8gZXJyOworCX0KKwogCS8qIE5vIC0+Zmx1c2goKSBv
ciBhbHJlYWR5IGFzeW5jLCBzYWZlbHkgY2xvc2UgZnJvbSBoZXJlICovCi0JcmV0ID0gZmls
cF9jbG9zZShjbG9zZS0+cHV0X2ZpbGUsIHJlcS0+d29yay5pZGVudGl0eS0+ZmlsZXMpOwor
CXJldCA9IGZpbHBfY2xvc2UoZmlsZSwgY3VycmVudC0+ZmlsZXMpOworZXJyOgogCWlmIChy
ZXQgPCAwKQotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQlmcHV0KGNsb3NlLT5wdXRf
ZmlsZSk7Ci0JY2xvc2UtPnB1dF9maWxlID0gTlVMTDsKLQlfX2lvX3JlcV9jb21wbGV0ZShy
ZXEsIHJldCwgMCwgY3MpOworCQlyZXFfc2V0X2ZhaWwocmVxKTsKKwlpZiAoZmlsZSkKKwkJ
ZnB1dChmaWxlKTsKKwlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3VlX2ZsYWdzLCByZXQs
IDApOwogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlvX3ByZXBfc2ZyKHN0cnVjdCBp
b19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCitzdGF0aWMg
aW50IGlvX3Nmcl9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9f
dXJpbmdfc3FlICpzcWUpCiB7CiAJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0
eDsKIAotCWlmICghcmVxLT5maWxlKQotCQlyZXR1cm4gLUVCQURGOwotCiAJaWYgKHVubGlr
ZWx5KGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkKIAkJcmV0dXJuIC1FSU5W
QUw7CiAJaWYgKHVubGlrZWx5KHNxZS0+YWRkciB8fCBzcWUtPmlvcHJpbyB8fCBzcWUtPmJ1
Zl9pbmRleCB8fApAQCAtNDMxNSwxOCArNDU5MiwxOCBAQCBzdGF0aWMgaW50IGlvX3ByZXBf
c2ZyKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpz
cWUpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fc3luY19maWxlX3JhbmdlKHN0
cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrKQorc3RhdGljIGludCBp
b19zeW5jX2ZpbGVfcmFuZ2Uoc3RydWN0IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBp
c3N1ZV9mbGFncykKIHsKIAlpbnQgcmV0OwogCiAJLyogc3luY19maWxlX3JhbmdlIGFsd2F5
cyByZXF1aXJlcyBhIGJsb2NraW5nIGNvbnRleHQgKi8KLQlpZiAoZm9yY2Vfbm9uYmxvY2sp
CisJaWYgKGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdfRl9OT05CTE9DSykKIAkJcmV0dXJuIC1F
QUdBSU47CiAKIAlyZXQgPSBzeW5jX2ZpbGVfcmFuZ2UocmVxLT5maWxlLCByZXEtPnN5bmMu
b2ZmLCByZXEtPnN5bmMubGVuLAogCQkJCXJlcS0+c3luYy5mbGFncyk7CiAJaWYgKHJldCA8
IDApCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOworCQlyZXFfc2V0X2ZhaWwocmVxKTsK
IAlpb19yZXFfY29tcGxldGUocmVxLCByZXQpOwogCXJldHVybiAwOwogfQpAQCAtNDM0MCw1
NSArNDYxNyw2NSBAQCBzdGF0aWMgaW50IGlvX3NldHVwX2FzeW5jX21zZyhzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSwKIAlpZiAoYXN5bmNfbXNnKQogCQlyZXR1cm4gLUVBR0FJTjsKIAlpZiAo
aW9fYWxsb2NfYXN5bmNfZGF0YShyZXEpKSB7Ci0JCWlmIChrbXNnLT5pb3YgIT0ga21zZy0+
ZmFzdF9pb3YpCi0JCQlrZnJlZShrbXNnLT5pb3YpOworCQlrZnJlZShrbXNnLT5mcmVlX2lv
dik7CiAJCXJldHVybiAtRU5PTUVNOwogCX0KIAlhc3luY19tc2cgPSByZXEtPmFzeW5jX2Rh
dGE7CiAJcmVxLT5mbGFncyB8PSBSRVFfRl9ORUVEX0NMRUFOVVA7CiAJbWVtY3B5KGFzeW5j
X21zZywga21zZywgc2l6ZW9mKCprbXNnKSk7CisJaWYgKGFzeW5jX21zZy0+bXNnLm1zZ19u
YW1lKQorCQlhc3luY19tc2ctPm1zZy5tc2dfbmFtZSA9ICZhc3luY19tc2ctPmFkZHI7CisJ
LyogaWYgd2VyZSB1c2luZyBmYXN0X2lvdiwgc2V0IGl0IHRvIHRoZSBuZXcgb25lICovCisJ
aWYgKCFhc3luY19tc2ctPmZyZWVfaW92KQorCQlhc3luY19tc2ctPm1zZy5tc2dfaXRlci5p
b3YgPSBhc3luY19tc2ctPmZhc3RfaW92OworCiAJcmV0dXJuIC1FQUdBSU47CiB9CiAKIHN0
YXRpYyBpbnQgaW9fc2VuZG1zZ19jb3B5X2hkcihzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwKIAkJ
CSAgICAgICBzdHJ1Y3QgaW9fYXN5bmNfbXNnaGRyICppb21zZykKIHsKLQlpb21zZy0+aW92
ID0gaW9tc2ctPmZhc3RfaW92OwogCWlvbXNnLT5tc2cubXNnX25hbWUgPSAmaW9tc2ctPmFk
ZHI7CisJaW9tc2ctPmZyZWVfaW92ID0gaW9tc2ctPmZhc3RfaW92OwogCXJldHVybiBzZW5k
bXNnX2NvcHlfbXNnaGRyKCZpb21zZy0+bXNnLCByZXEtPnNyX21zZy51bXNnLAotCQkJCSAg
IHJlcS0+c3JfbXNnLm1zZ19mbGFncywgJmlvbXNnLT5pb3YpOworCQkJCSAgIHJlcS0+c3Jf
bXNnLm1zZ19mbGFncywgJmlvbXNnLT5mcmVlX2lvdik7CiB9CiAKLXN0YXRpYyBpbnQgaW9f
c2VuZG1zZ19wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJp
bmdfc3FlICpzcWUpCitzdGF0aWMgaW50IGlvX3NlbmRtc2dfcHJlcF9hc3luYyhzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSkKIHsKLQlzdHJ1Y3QgaW9fYXN5bmNfbXNnaGRyICphc3luY19tc2cg
PSByZXEtPmFzeW5jX2RhdGE7Ci0Jc3RydWN0IGlvX3NyX21zZyAqc3IgPSAmcmVxLT5zcl9t
c2c7CiAJaW50IHJldDsKIAorCXJldCA9IGlvX3NlbmRtc2dfY29weV9oZHIocmVxLCByZXEt
PmFzeW5jX2RhdGEpOworCWlmICghcmV0KQorCQlyZXEtPmZsYWdzIHw9IFJFUV9GX05FRURf
Q0xFQU5VUDsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgaW50IGlvX3NlbmRtc2dfcHJl
cChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3Fl
KQoreworCXN0cnVjdCBpb19zcl9tc2cgKnNyID0gJnJlcS0+c3JfbXNnOworCiAJaWYgKHVu
bGlrZWx5KHJlcS0+Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwpKQogCQlyZXR1
cm4gLUVJTlZBTDsKLQlpZiAodW5saWtlbHkoc3FlLT5hZGRyMiB8fCBzcWUtPnNwbGljZV9m
ZF9pbiB8fCBzcWUtPmlvcHJpbykpCisJaWYgKHVubGlrZWx5KHNxZS0+YWRkcjIgfHwgc3Fl
LT5maWxlX2luZGV4KSkKKwkJcmV0dXJuIC1FSU5WQUw7CisJaWYgKHVubGlrZWx5KHNxZS0+
YWRkcjIgfHwgc3FlLT5maWxlX2luZGV4IHx8IHNxZS0+aW9wcmlvKSkKIAkJcmV0dXJuIC1F
SU5WQUw7CiAKLQlzci0+bXNnX2ZsYWdzID0gUkVBRF9PTkNFKHNxZS0+bXNnX2ZsYWdzKTsK
IAlzci0+dW1zZyA9IHU2NF90b191c2VyX3B0cihSRUFEX09OQ0Uoc3FlLT5hZGRyKSk7CiAJ
c3ItPmxlbiA9IFJFQURfT05DRShzcWUtPmxlbik7CisJc3ItPm1zZ19mbGFncyA9IFJFQURf
T05DRShzcWUtPm1zZ19mbGFncykgfCBNU0dfTk9TSUdOQUw7CisJaWYgKHNyLT5tc2dfZmxh
Z3MgJiBNU0dfRE9OVFdBSVQpCisJCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTk9XQUlUOwogCiAj
aWZkZWYgQ09ORklHX0NPTVBBVAogCWlmIChyZXEtPmN0eC0+Y29tcGF0KQogCQlzci0+bXNn
X2ZsYWdzIHw9IE1TR19DTVNHX0NPTVBBVDsKICNlbmRpZgotCi0JaWYgKCFhc3luY19tc2cg
fHwgIWlvX29wX2RlZnNbcmVxLT5vcGNvZGVdLm5lZWRzX2FzeW5jX2RhdGEpCi0JCXJldHVy
biAwOwotCXJldCA9IGlvX3NlbmRtc2dfY29weV9oZHIocmVxLCBhc3luY19tc2cpOwotCWlm
ICghcmV0KQotCQlyZXEtPmZsYWdzIHw9IFJFUV9GX05FRURfQ0xFQU5VUDsKLQlyZXR1cm4g
cmV0OworCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlvX3NlbmRtc2coc3RydWN0IGlv
X2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCi0JCSAgICAgIHN0cnVjdCBpb19j
b21wX3N0YXRlICpjcykKK3N0YXRpYyBpbnQgaW9fc2VuZG1zZyhzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewogCXN0cnVjdCBpb19hc3luY19t
c2doZHIgaW9tc2csICprbXNnOwogCXN0cnVjdCBzb2NrZXQgKnNvY2s7CkBAIC00NDAwLDQ2
ICs0Njg3LDM3IEBAIHN0YXRpYyBpbnQgaW9fc2VuZG1zZyhzdHJ1Y3QgaW9fa2lvY2IgKnJl
cSwgYm9vbCBmb3JjZV9ub25ibG9jaywKIAlpZiAodW5saWtlbHkoIXNvY2spKQogCQlyZXR1
cm4gcmV0OwogCi0JaWYgKHJlcS0+YXN5bmNfZGF0YSkgewotCQlrbXNnID0gcmVxLT5hc3lu
Y19kYXRhOwotCQlrbXNnLT5tc2cubXNnX25hbWUgPSAma21zZy0+YWRkcjsKLQkJLyogaWYg
aW92IGlzIHNldCwgaXQncyBhbGxvY2F0ZWQgYWxyZWFkeSAqLwotCQlpZiAoIWttc2ctPmlv
dikKLQkJCWttc2ctPmlvdiA9IGttc2ctPmZhc3RfaW92OwotCQlrbXNnLT5tc2cubXNnX2l0
ZXIuaW92ID0ga21zZy0+aW92OwotCX0gZWxzZSB7CisJa21zZyA9IHJlcS0+YXN5bmNfZGF0
YTsKKwlpZiAoIWttc2cpIHsKIAkJcmV0ID0gaW9fc2VuZG1zZ19jb3B5X2hkcihyZXEsICZp
b21zZyk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCQlrbXNnID0gJmlvbXNnOwog
CX0KIAotCWZsYWdzID0gcmVxLT5zcl9tc2cubXNnX2ZsYWdzIHwgTVNHX05PU0lHTkFMOwot
CWlmIChmbGFncyAmIE1TR19ET05UV0FJVCkKLQkJcmVxLT5mbGFncyB8PSBSRVFfRl9OT1dB
SVQ7Ci0JZWxzZSBpZiAoZm9yY2Vfbm9uYmxvY2spCisJZmxhZ3MgPSByZXEtPnNyX21zZy5t
c2dfZmxhZ3M7CisJaWYgKGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdfRl9OT05CTE9DSykKIAkJ
ZmxhZ3MgfD0gTVNHX0RPTlRXQUlUOwotCiAJaWYgKGZsYWdzICYgTVNHX1dBSVRBTEwpCiAJ
CW1pbl9yZXQgPSBpb3ZfaXRlcl9jb3VudCgma21zZy0+bXNnLm1zZ19pdGVyKTsKIAogCXJl
dCA9IF9fc3lzX3NlbmRtc2dfc29jayhzb2NrLCAma21zZy0+bXNnLCBmbGFncyk7Ci0JaWYg
KGZvcmNlX25vbmJsb2NrICYmIHJldCA9PSAtRUFHQUlOKQorCWlmICgoaXNzdWVfZmxhZ3Mg
JiBJT19VUklOR19GX05PTkJMT0NLKSAmJiByZXQgPT0gLUVBR0FJTikKIAkJcmV0dXJuIGlv
X3NldHVwX2FzeW5jX21zZyhyZXEsIGttc2cpOwogCWlmIChyZXQgPT0gLUVSRVNUQVJUU1lT
KQogCQlyZXQgPSAtRUlOVFI7CiAKLQlpZiAoa21zZy0+aW92ICE9IGttc2ctPmZhc3RfaW92
KQotCQlrZnJlZShrbXNnLT5pb3YpOworCS8qIGZhc3QgcGF0aCwgY2hlY2sgZm9yIG5vbi1O
VUxMIHRvIGF2b2lkIGZ1bmN0aW9uIGNhbGwgKi8KKwlpZiAoa21zZy0+ZnJlZV9pb3YpCisJ
CWtmcmVlKGttc2ctPmZyZWVfaW92KTsKIAlyZXEtPmZsYWdzICY9IH5SRVFfRl9ORUVEX0NM
RUFOVVA7CiAJaWYgKHJldCA8IG1pbl9yZXQpCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEp
OwotCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0LCAwLCBjcyk7CisJCXJlcV9zZXRfZmFp
bChyZXEpOworCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgaXNzdWVfZmxhZ3MsIHJldCwgMCk7
CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fc2VuZChzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKLQkJICAgc3RydWN0IGlvX2NvbXBfc3RhdGUg
KmNzKQorc3RhdGljIGludCBpb19zZW5kKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25l
ZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX3NyX21zZyAqc3IgPSAmcmVxLT5z
cl9tc2c7CiAJc3RydWN0IG1zZ2hkciBtc2c7CkBAIC00NDYyLDI1ICs0NzQwLDIyIEBAIHN0
YXRpYyBpbnQgaW9fc2VuZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25i
bG9jaywKIAltc2cubXNnX2NvbnRyb2xsZW4gPSAwOwogCW1zZy5tc2dfbmFtZWxlbiA9IDA7
CiAKLQlmbGFncyA9IHJlcS0+c3JfbXNnLm1zZ19mbGFncyB8IE1TR19OT1NJR05BTDsKLQlp
ZiAoZmxhZ3MgJiBNU0dfRE9OVFdBSVQpCi0JCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTk9XQUlU
OwotCWVsc2UgaWYgKGZvcmNlX25vbmJsb2NrKQorCWZsYWdzID0gcmVxLT5zcl9tc2cubXNn
X2ZsYWdzOworCWlmIChpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9OQkxPQ0spCiAJCWZs
YWdzIHw9IE1TR19ET05UV0FJVDsKLQogCWlmIChmbGFncyAmIE1TR19XQUlUQUxMKQogCQlt
aW5fcmV0ID0gaW92X2l0ZXJfY291bnQoJm1zZy5tc2dfaXRlcik7CiAKIAltc2cubXNnX2Zs
YWdzID0gZmxhZ3M7CiAJcmV0ID0gc29ja19zZW5kbXNnKHNvY2ssICZtc2cpOwotCWlmIChm
b3JjZV9ub25ibG9jayAmJiByZXQgPT0gLUVBR0FJTikKKwlpZiAoKGlzc3VlX2ZsYWdzICYg
SU9fVVJJTkdfRl9OT05CTE9DSykgJiYgcmV0ID09IC1FQUdBSU4pCiAJCXJldHVybiAtRUFH
QUlOOwogCWlmIChyZXQgPT0gLUVSRVNUQVJUU1lTKQogCQlyZXQgPSAtRUlOVFI7CiAKIAlp
ZiAocmV0IDwgbWluX3JldCkKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7Ci0JX19pb19y
ZXFfY29tcGxldGUocmVxLCByZXQsIDAsIGNzKTsKKwkJcmVxX3NldF9mYWlsKHJlcSk7CisJ
X19pb19yZXFfY29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCAwKTsKIAlyZXR1cm4g
MDsKIH0KIApAQCAtNDUwMCwxNSArNDc3NSwxNCBAQCBzdGF0aWMgaW50IF9faW9fcmVjdm1z
Z19jb3B5X2hkcihzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwKIAlpZiAocmVxLT5mbGFncyAmIFJF
UV9GX0JVRkZFUl9TRUxFQ1QpIHsKIAkJaWYgKGlvdl9sZW4gPiAxKQogCQkJcmV0dXJuIC1F
SU5WQUw7Ci0JCWlmIChjb3B5X2Zyb21fdXNlcihpb21zZy0+aW92LCB1aW92LCBzaXplb2Yo
KnVpb3YpKSkKKwkJaWYgKGNvcHlfZnJvbV91c2VyKGlvbXNnLT5mYXN0X2lvdiwgdWlvdiwg
c2l6ZW9mKCp1aW92KSkpCiAJCQlyZXR1cm4gLUVGQVVMVDsKLQkJc3ItPmxlbiA9IGlvbXNn
LT5pb3ZbMF0uaW92X2xlbjsKLQkJaW92X2l0ZXJfaW5pdCgmaW9tc2ctPm1zZy5tc2dfaXRl
ciwgUkVBRCwgaW9tc2ctPmlvdiwgMSwKLQkJCQlzci0+bGVuKTsKLQkJaW9tc2ctPmlvdiA9
IE5VTEw7CisJCXNyLT5sZW4gPSBpb21zZy0+ZmFzdF9pb3ZbMF0uaW92X2xlbjsKKwkJaW9t
c2ctPmZyZWVfaW92ID0gTlVMTDsKIAl9IGVsc2UgeworCQlpb21zZy0+ZnJlZV9pb3YgPSBp
b21zZy0+ZmFzdF9pb3Y7CiAJCXJldCA9IF9faW1wb3J0X2lvdmVjKFJFQUQsIHVpb3YsIGlv
dl9sZW4sIFVJT19GQVNUSU9WLAotCQkJCSAgICAgJmlvbXNnLT5pb3YsICZpb21zZy0+bXNn
Lm1zZ19pdGVyLAorCQkJCSAgICAgJmlvbXNnLT5mcmVlX2lvdiwgJmlvbXNnLT5tc2cubXNn
X2l0ZXIsCiAJCQkJICAgICBmYWxzZSk7CiAJCWlmIChyZXQgPiAwKQogCQkJcmV0ID0gMDsK
QEAgLTQ1MjEsMTYgKzQ3OTUsMTQgQEAgc3RhdGljIGludCBfX2lvX3JlY3Ztc2dfY29weV9o
ZHIoc3RydWN0IGlvX2tpb2NiICpyZXEsCiBzdGF0aWMgaW50IF9faW9fY29tcGF0X3JlY3Zt
c2dfY29weV9oZHIoc3RydWN0IGlvX2tpb2NiICpyZXEsCiAJCQkJCXN0cnVjdCBpb19hc3lu
Y19tc2doZHIgKmlvbXNnKQogewotCXN0cnVjdCBjb21wYXRfbXNnaGRyIF9fdXNlciAqbXNn
X2NvbXBhdDsKIAlzdHJ1Y3QgaW9fc3JfbXNnICpzciA9ICZyZXEtPnNyX21zZzsKIAlzdHJ1
Y3QgY29tcGF0X2lvdmVjIF9fdXNlciAqdWlvdjsKIAljb21wYXRfdXB0cl90IHB0cjsKIAlj
b21wYXRfc2l6ZV90IGxlbjsKIAlpbnQgcmV0OwogCi0JbXNnX2NvbXBhdCA9IChzdHJ1Y3Qg
Y29tcGF0X21zZ2hkciBfX3VzZXIgKikgc3ItPnVtc2c7Ci0JcmV0ID0gX19nZXRfY29tcGF0
X21zZ2hkcigmaW9tc2ctPm1zZywgbXNnX2NvbXBhdCwgJmlvbXNnLT51YWRkciwKLQkJCQkJ
JnB0ciwgJmxlbik7CisJcmV0ID0gX19nZXRfY29tcGF0X21zZ2hkcigmaW9tc2ctPm1zZywg
c3ItPnVtc2dfY29tcGF0LCAmaW9tc2ctPnVhZGRyLAorCQkJCSAgJnB0ciwgJmxlbik7CiAJ
aWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtNDU0NywxMSArNDgxOSwxMSBAQCBzdGF0
aWMgaW50IF9faW9fY29tcGF0X3JlY3Ztc2dfY29weV9oZHIoc3RydWN0IGlvX2tpb2NiICpy
ZXEsCiAJCWlmIChjbGVuIDwgMCkKIAkJCXJldHVybiAtRUlOVkFMOwogCQlzci0+bGVuID0g
Y2xlbjsKLQkJaW9tc2ctPmlvdlswXS5pb3ZfbGVuID0gY2xlbjsKLQkJaW9tc2ctPmlvdiA9
IE5VTEw7CisJCWlvbXNnLT5mcmVlX2lvdiA9IE5VTEw7CiAJfSBlbHNlIHsKKwkJaW9tc2ct
PmZyZWVfaW92ID0gaW9tc2ctPmZhc3RfaW92OwogCQlyZXQgPSBfX2ltcG9ydF9pb3ZlYyhS
RUFELCAoc3RydWN0IGlvdmVjIF9fdXNlciAqKXVpb3YsIGxlbiwKLQkJCQkgICBVSU9fRkFT
VElPViwgJmlvbXNnLT5pb3YsCisJCQkJICAgVUlPX0ZBU1RJT1YsICZpb21zZy0+ZnJlZV9p
b3YsCiAJCQkJICAgJmlvbXNnLT5tc2cubXNnX2l0ZXIsIHRydWUpOwogCQlpZiAocmV0IDwg
MCkKIAkJCXJldHVybiByZXQ7CkBAIC00NTY1LDcgKzQ4MzcsNiBAQCBzdGF0aWMgaW50IGlv
X3JlY3Ztc2dfY29weV9oZHIoc3RydWN0IGlvX2tpb2NiICpyZXEsCiAJCQkgICAgICAgc3Ry
dWN0IGlvX2FzeW5jX21zZ2hkciAqaW9tc2cpCiB7CiAJaW9tc2ctPm1zZy5tc2dfbmFtZSA9
ICZpb21zZy0+YWRkcjsKLQlpb21zZy0+aW92ID0gaW9tc2ctPmZhc3RfaW92OwogCiAjaWZk
ZWYgQ09ORklHX0NPTVBBVAogCWlmIChyZXEtPmN0eC0+Y29tcGF0KQpAQCAtNDU5NSwzOCAr
NDg2Niw0MiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBpb19wdXRfcmVjdl9rYnVm
KHN0cnVjdCBpb19raW9jYiAqcmVxKQogCXJldHVybiBpb19wdXRfa2J1ZihyZXEsIHJlcS0+
c3JfbXNnLmtidWYpOwogfQogCi1zdGF0aWMgaW50IGlvX3JlY3Ztc2dfcHJlcChzdHJ1Y3Qg
aW9fa2lvY2IgKnJlcSwKLQkJCSAgIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkK
K3N0YXRpYyBpbnQgaW9fcmVjdm1zZ19wcmVwX2FzeW5jKHN0cnVjdCBpb19raW9jYiAqcmVx
KQogewotCXN0cnVjdCBpb19hc3luY19tc2doZHIgKmFzeW5jX21zZyA9IHJlcS0+YXN5bmNf
ZGF0YTsKLQlzdHJ1Y3QgaW9fc3JfbXNnICpzciA9ICZyZXEtPnNyX21zZzsKIAlpbnQgcmV0
OwogCisJcmV0ID0gaW9fcmVjdm1zZ19jb3B5X2hkcihyZXEsIHJlcS0+YXN5bmNfZGF0YSk7
CisJaWYgKCFyZXQpCisJCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTkVFRF9DTEVBTlVQOworCXJl
dHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgaW9fcmVjdm1zZ19wcmVwKHN0cnVjdCBpb19r
aW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCit7CisJc3RydWN0
IGlvX3NyX21zZyAqc3IgPSAmcmVxLT5zcl9tc2c7CisKIAlpZiAodW5saWtlbHkocmVxLT5j
dHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkpCiAJCXJldHVybiAtRUlOVkFMOwot
CWlmICh1bmxpa2VseShzcWUtPmFkZHIyIHx8IHNxZS0+c3BsaWNlX2ZkX2luIHx8IHNxZS0+
aW9wcmlvKSkKKwlpZiAodW5saWtlbHkoc3FlLT5hZGRyMiB8fCBzcWUtPmZpbGVfaW5kZXgp
KQorCQlyZXR1cm4gLUVJTlZBTDsKKwlpZiAodW5saWtlbHkoc3FlLT5hZGRyMiB8fCBzcWUt
PmZpbGVfaW5kZXggfHwgc3FlLT5pb3ByaW8pKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCXNy
LT5tc2dfZmxhZ3MgPSBSRUFEX09OQ0Uoc3FlLT5tc2dfZmxhZ3MpOwogCXNyLT51bXNnID0g
dTY0X3RvX3VzZXJfcHRyKFJFQURfT05DRShzcWUtPmFkZHIpKTsKIAlzci0+bGVuID0gUkVB
RF9PTkNFKHNxZS0+bGVuKTsKIAlzci0+YmdpZCA9IFJFQURfT05DRShzcWUtPmJ1Zl9ncm91
cCk7CisJc3ItPm1zZ19mbGFncyA9IFJFQURfT05DRShzcWUtPm1zZ19mbGFncykgfCBNU0df
Tk9TSUdOQUw7CisJaWYgKHNyLT5tc2dfZmxhZ3MgJiBNU0dfRE9OVFdBSVQpCisJCXJlcS0+
ZmxhZ3MgfD0gUkVRX0ZfTk9XQUlUOwogCiAjaWZkZWYgQ09ORklHX0NPTVBBVAogCWlmIChy
ZXEtPmN0eC0+Y29tcGF0KQogCQlzci0+bXNnX2ZsYWdzIHw9IE1TR19DTVNHX0NPTVBBVDsK
ICNlbmRpZgotCi0JaWYgKCFhc3luY19tc2cgfHwgIWlvX29wX2RlZnNbcmVxLT5vcGNvZGVd
Lm5lZWRzX2FzeW5jX2RhdGEpCi0JCXJldHVybiAwOwotCXJldCA9IGlvX3JlY3Ztc2dfY29w
eV9oZHIocmVxLCBhc3luY19tc2cpOwotCWlmICghcmV0KQotCQlyZXEtPmZsYWdzIHw9IFJF
UV9GX05FRURfQ0xFQU5VUDsKLQlyZXR1cm4gcmV0OworCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IGlvX3JlY3Ztc2coc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9u
YmxvY2ssCi0JCSAgICAgIHN0cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBpbnQg
aW9fcmVjdm1zZyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2Zs
YWdzKQogewogCXN0cnVjdCBpb19hc3luY19tc2doZHIgaW9tc2csICprbXNnOwogCXN0cnVj
dCBzb2NrZXQgKnNvY2s7CkBAIC00NjM0LDE5ICs0OTA5LDE0IEBAIHN0YXRpYyBpbnQgaW9f
cmVjdm1zZyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKIAl1
bnNpZ25lZCBmbGFnczsKIAlpbnQgbWluX3JldCA9IDA7CiAJaW50IHJldCwgY2ZsYWdzID0g
MDsKKwlib29sIGZvcmNlX25vbmJsb2NrID0gaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05P
TkJMT0NLOwogCiAJc29jayA9IHNvY2tfZnJvbV9maWxlKHJlcS0+ZmlsZSwgJnJldCk7CiAJ
aWYgKHVubGlrZWx5KCFzb2NrKSkKIAkJcmV0dXJuIHJldDsKIAotCWlmIChyZXEtPmFzeW5j
X2RhdGEpIHsKLQkJa21zZyA9IHJlcS0+YXN5bmNfZGF0YTsKLQkJa21zZy0+bXNnLm1zZ19u
YW1lID0gJmttc2ctPmFkZHI7Ci0JCS8qIGlmIGlvdiBpcyBzZXQsIGl0J3MgYWxsb2NhdGVk
IGFscmVhZHkgKi8KLQkJaWYgKCFrbXNnLT5pb3YpCi0JCQlrbXNnLT5pb3YgPSBrbXNnLT5m
YXN0X2lvdjsKLQkJa21zZy0+bXNnLm1zZ19pdGVyLmlvdiA9IGttc2ctPmlvdjsKLQl9IGVs
c2UgeworCWttc2cgPSByZXEtPmFzeW5jX2RhdGE7CisJaWYgKCFrbXNnKSB7CiAJCXJldCA9
IGlvX3JlY3Ztc2dfY29weV9oZHIocmVxLCAmaW9tc2cpOwogCQlpZiAocmV0KQogCQkJcmV0
dXJuIHJldDsKQEAgLTQ2NTgsMTYgKzQ5MjgsMTQgQEAgc3RhdGljIGludCBpb19yZWN2bXNn
KHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAogCQlpZiAoSVNf
RVJSKGtidWYpKQogCQkJcmV0dXJuIFBUUl9FUlIoa2J1Zik7CiAJCWttc2ctPmZhc3RfaW92
WzBdLmlvdl9iYXNlID0gdTY0X3RvX3VzZXJfcHRyKGtidWYtPmFkZHIpOwotCQlpb3ZfaXRl
cl9pbml0KCZrbXNnLT5tc2cubXNnX2l0ZXIsIFJFQUQsIGttc2ctPmlvdiwKKwkJa21zZy0+
ZmFzdF9pb3ZbMF0uaW92X2xlbiA9IHJlcS0+c3JfbXNnLmxlbjsKKwkJaW92X2l0ZXJfaW5p
dCgma21zZy0+bXNnLm1zZ19pdGVyLCBSRUFELCBrbXNnLT5mYXN0X2lvdiwKIAkJCQkxLCBy
ZXEtPnNyX21zZy5sZW4pOwogCX0KIAotCWZsYWdzID0gcmVxLT5zcl9tc2cubXNnX2ZsYWdz
IHwgTVNHX05PU0lHTkFMOwotCWlmIChmbGFncyAmIE1TR19ET05UV0FJVCkKLQkJcmVxLT5m
bGFncyB8PSBSRVFfRl9OT1dBSVQ7Ci0JZWxzZSBpZiAoZm9yY2Vfbm9uYmxvY2spCisJZmxh
Z3MgPSByZXEtPnNyX21zZy5tc2dfZmxhZ3M7CisJaWYgKGZvcmNlX25vbmJsb2NrKQogCQlm
bGFncyB8PSBNU0dfRE9OVFdBSVQ7Ci0KIAlpZiAoZmxhZ3MgJiBNU0dfV0FJVEFMTCkKIAkJ
bWluX3JldCA9IGlvdl9pdGVyX2NvdW50KCZrbXNnLT5tc2cubXNnX2l0ZXIpOwogCkBAIC00
NjgwLDE3ICs0OTQ4LDE3IEBAIHN0YXRpYyBpbnQgaW9fcmVjdm1zZyhzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKIAogCWlmIChyZXEtPmZsYWdzICYgUkVR
X0ZfQlVGRkVSX1NFTEVDVEVEKQogCQljZmxhZ3MgPSBpb19wdXRfcmVjdl9rYnVmKHJlcSk7
Ci0JaWYgKGttc2ctPmlvdiAhPSBrbXNnLT5mYXN0X2lvdikKLQkJa2ZyZWUoa21zZy0+aW92
KTsKKwkvKiBmYXN0IHBhdGgsIGNoZWNrIGZvciBub24tTlVMTCB0byBhdm9pZCBmdW5jdGlv
biBjYWxsICovCisJaWYgKGttc2ctPmZyZWVfaW92KQorCQlrZnJlZShrbXNnLT5mcmVlX2lv
dik7CiAJcmVxLT5mbGFncyAmPSB+UkVRX0ZfTkVFRF9DTEVBTlVQOwogCWlmIChyZXQgPCBt
aW5fcmV0IHx8ICgoZmxhZ3MgJiBNU0dfV0FJVEFMTCkgJiYgKGttc2ctPm1zZy5tc2dfZmxh
Z3MgJiAoTVNHX1RSVU5DIHwgTVNHX0NUUlVOQykpKSkKLQkJcmVxX3NldF9mYWlsX2xpbmtz
KHJlcSk7Ci0JX19pb19yZXFfY29tcGxldGUocmVxLCByZXQsIGNmbGFncywgY3MpOworCQly
ZXFfc2V0X2ZhaWwocmVxKTsKKwlfX2lvX3JlcV9jb21wbGV0ZShyZXEsIGlzc3VlX2ZsYWdz
LCByZXQsIGNmbGFncyk7CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcmVjdihz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKLQkJICAgc3RydWN0
IGlvX2NvbXBfc3RhdGUgKmNzKQorc3RhdGljIGludCBpb19yZWN2KHN0cnVjdCBpb19raW9j
YiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX2J1ZmZl
ciAqa2J1ZjsKIAlzdHJ1Y3QgaW9fc3JfbXNnICpzciA9ICZyZXEtPnNyX21zZzsKQEAgLTQ3
MDEsNiArNDk2OSw3IEBAIHN0YXRpYyBpbnQgaW9fcmVjdihzdHJ1Y3QgaW9fa2lvY2IgKnJl
cSwgYm9vbCBmb3JjZV9ub25ibG9jaywKIAl1bnNpZ25lZCBmbGFnczsKIAlpbnQgbWluX3Jl
dCA9IDA7CiAJaW50IHJldCwgY2ZsYWdzID0gMDsKKwlib29sIGZvcmNlX25vbmJsb2NrID0g
aXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLOwogCiAJc29jayA9IHNvY2tfZnJv
bV9maWxlKHJlcS0+ZmlsZSwgJnJldCk7CiAJaWYgKHVubGlrZWx5KCFzb2NrKSkKQEAgLTQ3
MjQsMTIgKzQ5OTMsOSBAQCBzdGF0aWMgaW50IGlvX3JlY3Yoc3RydWN0IGlvX2tpb2NiICpy
ZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAJbXNnLm1zZ19pb2NiID0gTlVMTDsKIAltc2cu
bXNnX2ZsYWdzID0gMDsKIAotCWZsYWdzID0gcmVxLT5zcl9tc2cubXNnX2ZsYWdzIHwgTVNH
X05PU0lHTkFMOwotCWlmIChmbGFncyAmIE1TR19ET05UV0FJVCkKLQkJcmVxLT5mbGFncyB8
PSBSRVFfRl9OT1dBSVQ7Ci0JZWxzZSBpZiAoZm9yY2Vfbm9uYmxvY2spCisJZmxhZ3MgPSBy
ZXEtPnNyX21zZy5tc2dfZmxhZ3M7CisJaWYgKGZvcmNlX25vbmJsb2NrKQogCQlmbGFncyB8
PSBNU0dfRE9OVFdBSVQ7Ci0KIAlpZiAoZmxhZ3MgJiBNU0dfV0FJVEFMTCkKIAkJbWluX3Jl
dCA9IGlvdl9pdGVyX2NvdW50KCZtc2cubXNnX2l0ZXIpOwogCkBAIC00NzQyLDggKzUwMDgs
OCBAQCBzdGF0aWMgaW50IGlvX3JlY3Yoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9y
Y2Vfbm9uYmxvY2ssCiAJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9CVUZGRVJfU0VMRUNURUQp
CiAJCWNmbGFncyA9IGlvX3B1dF9yZWN2X2tidWYocmVxKTsKIAlpZiAocmV0IDwgbWluX3Jl
dCB8fCAoKGZsYWdzICYgTVNHX1dBSVRBTEwpICYmIChtc2cubXNnX2ZsYWdzICYgKE1TR19U
UlVOQyB8IE1TR19DVFJVTkMpKSkpCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOwotCV9f
aW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0LCBjZmxhZ3MsIGNzKTsKKwkJcmVxX3NldF9mYWls
KHJlcSk7CisJX19pb19yZXFfY29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCBjZmxh
Z3MpOwogCXJldHVybiAwOwogfQogCkBAIC00NzUxLDQ4ICs1MDE3LDc5IEBAIHN0YXRpYyBp
bnQgaW9fYWNjZXB0X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBp
b191cmluZ19zcWUgKnNxZSkKIHsKIAlzdHJ1Y3QgaW9fYWNjZXB0ICphY2NlcHQgPSAmcmVx
LT5hY2NlcHQ7CiAKLQlpZiAodW5saWtlbHkocmVxLT5jdHgtPmZsYWdzICYgKElPUklOR19T
RVRVUF9JT1BPTEx8SU9SSU5HX1NFVFVQX1NRUE9MTCkpKQorCWlmICh1bmxpa2VseShyZXEt
PmN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkKIAkJcmV0dXJuIC1FSU5WQUw7
Ci0JaWYgKHNxZS0+aW9wcmlvIHx8IHNxZS0+bGVuIHx8IHNxZS0+YnVmX2luZGV4IHx8IHNx
ZS0+c3BsaWNlX2ZkX2luKQorCWlmIChzcWUtPmlvcHJpbyB8fCBzcWUtPmxlbiB8fCBzcWUt
PmJ1Zl9pbmRleCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAlhY2NlcHQtPmFkZHIgPSB1NjRf
dG9fdXNlcl9wdHIoUkVBRF9PTkNFKHNxZS0+YWRkcikpOwogCWFjY2VwdC0+YWRkcl9sZW4g
PSB1NjRfdG9fdXNlcl9wdHIoUkVBRF9PTkNFKHNxZS0+YWRkcjIpKTsKIAlhY2NlcHQtPmZs
YWdzID0gUkVBRF9PTkNFKHNxZS0+YWNjZXB0X2ZsYWdzKTsKIAlhY2NlcHQtPm5vZmlsZSA9
IHJsaW1pdChSTElNSVRfTk9GSUxFKTsKKworCWFjY2VwdC0+ZmlsZV9zbG90ID0gUkVBRF9P
TkNFKHNxZS0+ZmlsZV9pbmRleCk7CisJaWYgKGFjY2VwdC0+ZmlsZV9zbG90ICYmIChhY2Nl
cHQtPmZsYWdzICYgU09DS19DTE9FWEVDKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisJaWYgKGFj
Y2VwdC0+ZmxhZ3MgJiB+KFNPQ0tfQ0xPRVhFQyB8IFNPQ0tfTk9OQkxPQ0spKQorCQlyZXR1
cm4gLUVJTlZBTDsKKwlpZiAoU09DS19OT05CTE9DSyAhPSBPX05PTkJMT0NLICYmIChhY2Nl
cHQtPmZsYWdzICYgU09DS19OT05CTE9DSykpCisJCWFjY2VwdC0+ZmxhZ3MgPSAoYWNjZXB0
LT5mbGFncyAmIH5TT0NLX05PTkJMT0NLKSB8IE9fTk9OQkxPQ0s7CiAJcmV0dXJuIDA7CiB9
CiAKLXN0YXRpYyBpbnQgaW9fYWNjZXB0KHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZv
cmNlX25vbmJsb2NrLAotCQkgICAgIHN0cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRp
YyBpbnQgaW9fYWNjZXB0KHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNz
dWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX2FjY2VwdCAqYWNjZXB0ID0gJnJlcS0+YWNjZXB0
OworCWJvb2wgZm9yY2Vfbm9uYmxvY2sgPSBpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9O
QkxPQ0s7CiAJdW5zaWduZWQgaW50IGZpbGVfZmxhZ3MgPSBmb3JjZV9ub25ibG9jayA/IE9f
Tk9OQkxPQ0sgOiAwOwotCWludCByZXQ7CisJYm9vbCBmaXhlZCA9ICEhYWNjZXB0LT5maWxl
X3Nsb3Q7CisJc3RydWN0IGZpbGUgKmZpbGU7CisJaW50IHJldCwgZmQ7CiAKIAlpZiAocmVx
LT5maWxlLT5mX2ZsYWdzICYgT19OT05CTE9DSykKIAkJcmVxLT5mbGFncyB8PSBSRVFfRl9O
T1dBSVQ7CiAKLQlyZXQgPSBfX3N5c19hY2NlcHQ0X2ZpbGUocmVxLT5maWxlLCBmaWxlX2Zs
YWdzLCBhY2NlcHQtPmFkZHIsCi0JCQkJCWFjY2VwdC0+YWRkcl9sZW4sIGFjY2VwdC0+Zmxh
Z3MsCi0JCQkJCWFjY2VwdC0+bm9maWxlKTsKLQlpZiAocmV0ID09IC1FQUdBSU4gJiYgZm9y
Y2Vfbm9uYmxvY2spCi0JCXJldHVybiAtRUFHQUlOOwotCWlmIChyZXQgPCAwKSB7CisJaWYg
KCFmaXhlZCkgeworCQlmZCA9IF9fZ2V0X3VudXNlZF9mZF9mbGFncyhhY2NlcHQtPmZsYWdz
LCBhY2NlcHQtPm5vZmlsZSk7CisJCWlmICh1bmxpa2VseShmZCA8IDApKQorCQkJcmV0dXJu
IGZkOworCX0KKwlmaWxlID0gZG9fYWNjZXB0KHJlcS0+ZmlsZSwgZmlsZV9mbGFncywgYWNj
ZXB0LT5hZGRyLCBhY2NlcHQtPmFkZHJfbGVuLAorCQkJIGFjY2VwdC0+ZmxhZ3MpOworCisJ
aWYgKElTX0VSUihmaWxlKSkgeworCQlpZiAoIWZpeGVkKQorCQkJcHV0X3VudXNlZF9mZChm
ZCk7CisJCXJldCA9IFBUUl9FUlIoZmlsZSk7CisJCWlmIChyZXQgPT0gLUVBR0FJTiAmJiBm
b3JjZV9ub25ibG9jaykKKwkJCXJldHVybiAtRUFHQUlOOwogCQlpZiAocmV0ID09IC1FUkVT
VEFSVFNZUykKIAkJCXJldCA9IC1FSU5UUjsKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7
CisJCXJlcV9zZXRfZmFpbChyZXEpOworCX0gZWxzZSBpZiAoIWZpeGVkKSB7CisJCWZkX2lu
c3RhbGwoZmQsIGZpbGUpOworCQlyZXQgPSBmZDsKKwl9IGVsc2UgeworCQlyZXQgPSBpb19p
bnN0YWxsX2ZpeGVkX2ZpbGUocmVxLCBmaWxlLCBpc3N1ZV9mbGFncywKKwkJCQkJICAgIGFj
Y2VwdC0+ZmlsZV9zbG90IC0gMSk7CiAJfQotCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0
LCAwLCBjcyk7CisJX19pb19yZXFfY29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCAw
KTsKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGludCBpb19jb25uZWN0X3ByZXBfYXN5bmMo
c3RydWN0IGlvX2tpb2NiICpyZXEpCit7CisJc3RydWN0IGlvX2FzeW5jX2Nvbm5lY3QgKmlv
ID0gcmVxLT5hc3luY19kYXRhOworCXN0cnVjdCBpb19jb25uZWN0ICpjb25uID0gJnJlcS0+
Y29ubmVjdDsKKworCXJldHVybiBtb3ZlX2FkZHJfdG9fa2VybmVsKGNvbm4tPmFkZHIsIGNv
bm4tPmFkZHJfbGVuLCAmaW8tPmFkZHJlc3MpOworfQorCiBzdGF0aWMgaW50IGlvX2Nvbm5l
Y3RfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3Nx
ZSAqc3FlKQogewogCXN0cnVjdCBpb19jb25uZWN0ICpjb25uID0gJnJlcS0+Y29ubmVjdDsK
LQlzdHJ1Y3QgaW9fYXN5bmNfY29ubmVjdCAqaW8gPSByZXEtPmFzeW5jX2RhdGE7CiAKLQlp
ZiAodW5saWtlbHkocmVxLT5jdHgtPmZsYWdzICYgKElPUklOR19TRVRVUF9JT1BPTEx8SU9S
SU5HX1NFVFVQX1NRUE9MTCkpKQorCWlmICh1bmxpa2VseShyZXEtPmN0eC0+ZmxhZ3MgJiBJ
T1JJTkdfU0VUVVBfSU9QT0xMKSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAJaWYgKHNxZS0+aW9w
cmlvIHx8IHNxZS0+bGVuIHx8IHNxZS0+YnVmX2luZGV4IHx8IHNxZS0+cndfZmxhZ3MgfHwK
IAkgICAgc3FlLT5zcGxpY2VfZmRfaW4pCkBAIC00ODAwLDIwICs1MDk3LDE1IEBAIHN0YXRp
YyBpbnQgaW9fY29ubmVjdF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1
Y3QgaW9fdXJpbmdfc3FlICpzcWUpCiAKIAljb25uLT5hZGRyID0gdTY0X3RvX3VzZXJfcHRy
KFJFQURfT05DRShzcWUtPmFkZHIpKTsKIAljb25uLT5hZGRyX2xlbiA9ICBSRUFEX09OQ0Uo
c3FlLT5hZGRyMik7Ci0KLQlpZiAoIWlvKQotCQlyZXR1cm4gMDsKLQotCXJldHVybiBtb3Zl
X2FkZHJfdG9fa2VybmVsKGNvbm4tPmFkZHIsIGNvbm4tPmFkZHJfbGVuLAotCQkJCQkmaW8t
PmFkZHJlc3MpOworCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlvX2Nvbm5lY3Qoc3Ry
dWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCi0JCSAgICAgIHN0cnVj
dCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBpbnQgaW9fY29ubmVjdChzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSwgdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKQogewogCXN0cnVjdCBpb19h
c3luY19jb25uZWN0IF9faW8sICppbzsKIAl1bnNpZ25lZCBmaWxlX2ZsYWdzOwogCWludCBy
ZXQ7CisJYm9vbCBmb3JjZV9ub25ibG9jayA9IGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdfRl9O
T05CTE9DSzsKIAogCWlmIChyZXEtPmFzeW5jX2RhdGEpIHsKIAkJaW8gPSByZXEtPmFzeW5j
X2RhdGE7CkBAIC00ODM3LDcgKzUxMjksNiBAQCBzdGF0aWMgaW50IGlvX2Nvbm5lY3Qoc3Ry
dWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAJCQlyZXQgPSAtRU5P
TUVNOwogCQkJZ290byBvdXQ7CiAJCX0KLQkJaW8gPSByZXEtPmFzeW5jX2RhdGE7CiAJCW1l
bWNweShyZXEtPmFzeW5jX2RhdGEsICZfX2lvLCBzaXplb2YoX19pbykpOwogCQlyZXR1cm4g
LUVBR0FJTjsKIAl9CkBAIC00ODQ1LDI0OCArNTEzNiwzNTIgQEAgc3RhdGljIGludCBpb19j
b25uZWN0KHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAogCQly
ZXQgPSAtRUlOVFI7CiBvdXQ6CiAJaWYgKHJldCA8IDApCi0JCXJlcV9zZXRfZmFpbF9saW5r
cyhyZXEpOwotCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0LCAwLCBjcyk7CisJCXJlcV9z
ZXRfZmFpbChyZXEpOworCV9faW9fcmVxX2NvbXBsZXRlKHJlcSwgaXNzdWVfZmxhZ3MsIHJl
dCwgMCk7CiAJcmV0dXJuIDA7CiB9CiAjZWxzZSAvKiAhQ09ORklHX05FVCAqLwotc3RhdGlj
IGludCBpb19zZW5kbXNnX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVj
dCBpb191cmluZ19zcWUgKnNxZSkKKyNkZWZpbmUgSU9fTkVUT1BfRk4ob3ApCQkJCQkJCVwK
K3N0YXRpYyBpbnQgaW9fIyNvcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgdW5zaWduZWQgaW50
IGlzc3VlX2ZsYWdzKQlcCit7CQkJCQkJCQkJXAorCXJldHVybiAtRU9QTk9UU1VQUDsJCQkJ
CQlcCit9CisKKyNkZWZpbmUgSU9fTkVUT1BfUFJFUChvcCkJCQkJCQlcCitJT19ORVRPUF9G
TihvcCkJCQkJCQkJCVwKK3N0YXRpYyBpbnQgaW9fIyNvcCMjX3ByZXAoc3RydWN0IGlvX2tp
b2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkgXAorewkJCQkJCQkJ
CVwKKwlyZXR1cm4gLUVPUE5PVFNVUFA7CQkJCQkJXAorfQkJCQkJCQkJCVwKKworI2RlZmlu
ZSBJT19ORVRPUF9QUkVQX0FTWU5DKG9wKQkJCQkJCVwKK0lPX05FVE9QX1BSRVAob3ApCQkJ
CQkJCVwKK3N0YXRpYyBpbnQgaW9fIyNvcCMjX3ByZXBfYXN5bmMoc3RydWN0IGlvX2tpb2Ni
ICpyZXEpCQkJXAorewkJCQkJCQkJCVwKKwlyZXR1cm4gLUVPUE5PVFNVUFA7CQkJCQkJXAor
fQorCitJT19ORVRPUF9QUkVQX0FTWU5DKHNlbmRtc2cpOworSU9fTkVUT1BfUFJFUF9BU1lO
QyhyZWN2bXNnKTsKK0lPX05FVE9QX1BSRVBfQVNZTkMoY29ubmVjdCk7CitJT19ORVRPUF9Q
UkVQKGFjY2VwdCk7CitJT19ORVRPUF9GTihzZW5kKTsKK0lPX05FVE9QX0ZOKHJlY3YpOwor
I2VuZGlmIC8qIENPTkZJR19ORVQgKi8KKworc3RydWN0IGlvX3BvbGxfdGFibGUgeworCXN0
cnVjdCBwb2xsX3RhYmxlX3N0cnVjdCBwdDsKKwlzdHJ1Y3QgaW9fa2lvY2IgKnJlcTsKKwlp
bnQgbnJfZW50cmllczsKKwlpbnQgZXJyb3I7Cit9OworCisjZGVmaW5lIElPX1BPTExfQ0FO
Q0VMX0ZMQUcJQklUKDMxKQorI2RlZmluZSBJT19QT0xMX1JFVFJZX0ZMQUcJQklUKDMwKQor
I2RlZmluZSBJT19QT0xMX1JFRl9NQVNLCUdFTk1BU0soMjksIDApCisKKy8qCisgKiBXZSB1
c3VhbGx5IGhhdmUgMS0yIHJlZnMgdGFrZW4sIDEyOCBpcyBtb3JlIHRoYW4gZW5vdWdoIGFu
ZCB3ZSB3YW50IHRvCisgKiBtYXhpbWlzZSB0aGUgbWFyZ2luIGJldHdlZW4gdGhpcyBhbW91
bnQgYW5kIHRoZSBtb21lbnQgd2hlbiBpdCBvdmVyZmxvd3MuCisgKi8KKyNkZWZpbmUgSU9f
UE9MTF9SRUZfQklBUyAgICAgICAxMjgKKworc3RhdGljIGJvb2wgaW9fcG9sbF9nZXRfb3du
ZXJzaGlwX3Nsb3dwYXRoKHN0cnVjdCBpb19raW9jYiAqcmVxKQogewotCXJldHVybiAtRU9Q
Tk9UU1VQUDsKKwlpbnQgdjsKKworCS8qCisJICogcG9sbF9yZWZzIGFyZSBhbHJlYWR5IGVs
ZXZhdGVkIGFuZCB3ZSBkb24ndCBoYXZlIG11Y2ggaG9wZSBmb3IKKwkgKiBncmFiYmluZyB0
aGUgb3duZXJzaGlwLiBJbnN0ZWFkIG9mIGluY3JlbWVudGluZyBzZXQgYSByZXRyeSBmbGFn
CisJICogdG8gbm90aWZ5IHRoZSBsb29wIHRoYXQgdGhlcmUgbWlnaHQgaGF2ZSBiZWVuIHNv
bWUgY2hhbmdlLgorCSAqLworCXYgPSBhdG9taWNfZmV0Y2hfb3IoSU9fUE9MTF9SRVRSWV9G
TEFHLCAmcmVxLT5wb2xsX3JlZnMpOworCWlmICh2ICYgSU9fUE9MTF9SRUZfTUFTSykKKwkJ
cmV0dXJuIGZhbHNlOworCXJldHVybiAhKGF0b21pY19mZXRjaF9pbmMoJnJlcS0+cG9sbF9y
ZWZzKSAmIElPX1BPTExfUkVGX01BU0spOwogfQogCi1zdGF0aWMgaW50IGlvX3NlbmRtc2co
c3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCi0JCSAgICAgIHN0
cnVjdCBpb19jb21wX3N0YXRlICpjcykKKy8qCisgKiBJZiByZWZzIHBhcnQgb2YgLT5wb2xs
X3JlZnMgKHNlZSBJT19QT0xMX1JFRl9NQVNLKSBpcyAwLCBpdCdzIGZyZWUuIFdlIGNhbgor
ICogYnVtcCBpdCBhbmQgYWNxdWlyZSBvd25lcnNoaXAuIEl0J3MgZGlzYWxsb3dlZCB0byBt
b2RpZnkgcmVxdWVzdHMgd2hpbGUgbm90CisgKiBvd25pbmcgaXQsIHRoYXQgcHJldmVudHMg
ZnJvbSByYWNlcyBmb3IgZW5xdWV1ZWluZyB0YXNrX3dvcmsncyBhbmQgYi93CisgKiBhcm1p
bmcgcG9sbCBhbmQgd2FrZXVwcy4KKyAqLworc3RhdGljIGlubGluZSBib29sIGlvX3BvbGxf
Z2V0X293bmVyc2hpcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlyZXR1cm4gLUVPUE5P
VFNVUFA7CisJaWYgKHVubGlrZWx5KGF0b21pY19yZWFkKCZyZXEtPnBvbGxfcmVmcykgPj0g
SU9fUE9MTF9SRUZfQklBUykpCisJCXJldHVybiBpb19wb2xsX2dldF9vd25lcnNoaXBfc2xv
d3BhdGgocmVxKTsKKwlyZXR1cm4gIShhdG9taWNfZmV0Y2hfaW5jKCZyZXEtPnBvbGxfcmVm
cykgJiBJT19QT0xMX1JFRl9NQVNLKTsKIH0KIAotc3RhdGljIGludCBpb19zZW5kKHN0cnVj
dCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAotCQkgICBzdHJ1Y3QgaW9f
Y29tcF9zdGF0ZSAqY3MpCitzdGF0aWMgdm9pZCBpb19wb2xsX21hcmtfY2FuY2VsbGVkKHN0
cnVjdCBpb19raW9jYiAqcmVxKQogewotCXJldHVybiAtRU9QTk9UU1VQUDsKKwlhdG9taWNf
b3IoSU9fUE9MTF9DQU5DRUxfRkxBRywgJnJlcS0+cG9sbF9yZWZzKTsKIH0KIAotc3RhdGlj
IGludCBpb19yZWN2bXNnX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsCi0JCQkgICBjb25z
dCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCitzdGF0aWMgc3RydWN0IGlvX3BvbGxfaW9j
YiAqaW9fcG9sbF9nZXRfZG91YmxlKHN0cnVjdCBpb19raW9jYiAqcmVxKQogewotCXJldHVy
biAtRU9QTk9UU1VQUDsKKwkvKiBwdXJlIHBvbGwgc3Rhc2hlcyB0aGlzIGluIC0+YXN5bmNf
ZGF0YSwgcG9sbCBkcml2ZW4gcmV0cnkgZWxzZXdoZXJlICovCisJaWYgKHJlcS0+b3Bjb2Rl
ID09IElPUklOR19PUF9QT0xMX0FERCkKKwkJcmV0dXJuIHJlcS0+YXN5bmNfZGF0YTsKKwly
ZXR1cm4gcmVxLT5hcG9sbC0+ZG91YmxlX3BvbGw7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcmVj
dm1zZyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3JjZV9ub25ibG9jaywKLQkJICAg
ICAgc3RydWN0IGlvX2NvbXBfc3RhdGUgKmNzKQorc3RhdGljIHN0cnVjdCBpb19wb2xsX2lv
Y2IgKmlvX3BvbGxfZ2V0X3NpbmdsZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlyZXR1
cm4gLUVPUE5PVFNVUFA7CisJaWYgKHJlcS0+b3Bjb2RlID09IElPUklOR19PUF9QT0xMX0FE
RCkKKwkJcmV0dXJuICZyZXEtPnBvbGw7CisJcmV0dXJuICZyZXEtPmFwb2xsLT5wb2xsOwog
fQogCi1zdGF0aWMgaW50IGlvX3JlY3Yoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9y
Y2Vfbm9uYmxvY2ssCi0JCSAgIHN0cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyB2
b2lkIGlvX3BvbGxfcmVxX2luc2VydChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlyZXR1
cm4gLUVPUE5PVFNVUFA7CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsK
KwlzdHJ1Y3QgaGxpc3RfaGVhZCAqbGlzdDsKKworCWxpc3QgPSAmY3R4LT5jYW5jZWxfaGFz
aFtoYXNoX2xvbmcocmVxLT51c2VyX2RhdGEsIGN0eC0+Y2FuY2VsX2hhc2hfYml0cyldOwor
CWhsaXN0X2FkZF9oZWFkKCZyZXEtPmhhc2hfbm9kZSwgbGlzdCk7CiB9CiAKLXN0YXRpYyBp
bnQgaW9fYWNjZXB0X3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBp
b191cmluZ19zcWUgKnNxZSkKK3N0YXRpYyB2b2lkIGlvX2luaXRfcG9sbF9pb2NiKHN0cnVj
dCBpb19wb2xsX2lvY2IgKnBvbGwsIF9fcG9sbF90IGV2ZW50cywKKwkJCSAgICAgIHdhaXRf
cXVldWVfZnVuY190IHdha2VfZnVuYykKIHsKLQlyZXR1cm4gLUVPUE5PVFNVUFA7CisJcG9s
bC0+aGVhZCA9IE5VTEw7CisjZGVmaW5lIElPX1BPTExfVU5NQVNLCShFUE9MTEVSUnxFUE9M
TEhVUHxFUE9MTE5WQUx8RVBPTExSREhVUCkKKwkvKiBtYXNrIGluIGV2ZW50cyB0aGF0IHdl
IGFsd2F5cyB3YW50L25lZWQgKi8KKwlwb2xsLT5ldmVudHMgPSBldmVudHMgfCBJT19QT0xM
X1VOTUFTSzsKKwlJTklUX0xJU1RfSEVBRCgmcG9sbC0+d2FpdC5lbnRyeSk7CisJaW5pdF93
YWl0cXVldWVfZnVuY19lbnRyeSgmcG9sbC0+d2FpdCwgd2FrZV9mdW5jKTsKIH0KIAotc3Rh
dGljIGludCBpb19hY2NlcHQoc3RydWN0IGlvX2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9u
YmxvY2ssCi0JCSAgICAgc3RydWN0IGlvX2NvbXBfc3RhdGUgKmNzKQorc3RhdGljIGlubGlu
ZSB2b2lkIGlvX3BvbGxfcmVtb3ZlX2VudHJ5KHN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGwp
CiB7Ci0JcmV0dXJuIC1FT1BOT1RTVVBQOworCXN0cnVjdCB3YWl0X3F1ZXVlX2hlYWQgKmhl
YWQgPSBzbXBfbG9hZF9hY3F1aXJlKCZwb2xsLT5oZWFkKTsKKworCWlmIChoZWFkKSB7CisJ
CXNwaW5fbG9ja19pcnEoJmhlYWQtPmxvY2spOworCQlsaXN0X2RlbF9pbml0KCZwb2xsLT53
YWl0LmVudHJ5KTsKKwkJcG9sbC0+aGVhZCA9IE5VTEw7CisJCXNwaW5fdW5sb2NrX2lycSgm
aGVhZC0+bG9jayk7CisJfQogfQogCi1zdGF0aWMgaW50IGlvX2Nvbm5lY3RfcHJlcChzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3FlKQorc3Rh
dGljIHZvaWQgaW9fcG9sbF9yZW1vdmVfZW50cmllcyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkK
IHsKLQlyZXR1cm4gLUVPUE5PVFNVUFA7CisJc3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCA9
IGlvX3BvbGxfZ2V0X3NpbmdsZShyZXEpOworCXN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGxf
ZG91YmxlID0gaW9fcG9sbF9nZXRfZG91YmxlKHJlcSk7CisKKwkvKgorCSAqIFdoaWxlIHdl
IGhvbGQgdGhlIHdhaXRxdWV1ZSBsb2NrIGFuZCB0aGUgd2FpdHF1ZXVlIGlzIG5vbmVtcHR5
LAorCSAqIHdha2VfdXBfcG9sbGZyZWUoKSB3aWxsIHdhaXQgZm9yIHVzLiAgSG93ZXZlciwg
dGFraW5nIHRoZSB3YWl0cXVldWUKKwkgKiBsb2NrIGluIHRoZSBmaXJzdCBwbGFjZSBjYW4g
cmFjZSB3aXRoIHRoZSB3YWl0cXVldWUgYmVpbmcgZnJlZWQuCisJICoKKwkgKiBXZSBzb2x2
ZSB0aGlzIGFzIGV2ZW50cG9sbCBkb2VzOiBieSB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSBm
YWN0IHRoYXQKKwkgKiBhbGwgdXNlcnMgb2Ygd2FrZV91cF9wb2xsZnJlZSgpIHdpbGwgUkNV
LWRlbGF5IHRoZSBhY3R1YWwgZnJlZS4gIElmCisJICogd2UgZW50ZXIgcmN1X3JlYWRfbG9j
aygpIGFuZCBzZWUgdGhhdCB0aGUgcG9pbnRlciB0byB0aGUgcXVldWUgaXMKKwkgKiBub24t
TlVMTCwgd2UgY2FuIHRoZW4gbG9jayBpdCB3aXRob3V0IHRoZSBtZW1vcnkgYmVpbmcgZnJl
ZWQgb3V0IGZyb20KKwkgKiB1bmRlciB1cy4KKwkgKgorCSAqIEtlZXAgaG9sZGluZyByY3Vf
cmVhZF9sb2NrKCkgYXMgbG9uZyBhcyB3ZSBob2xkIHRoZSBxdWV1ZSBsb2NrLCBpbgorCSAq
IGNhc2UgdGhlIGNhbGxlciBkZWxldGVzIHRoZSBlbnRyeSBmcm9tIHRoZSBxdWV1ZSwgbGVh
dmluZyBpdCBlbXB0eS4KKwkgKiBJbiB0aGF0IGNhc2UsIG9ubHkgUkNVIHByZXZlbnRzIHRo
ZSBxdWV1ZSBtZW1vcnkgZnJvbSBiZWluZyBmcmVlZC4KKwkgKi8KKwlyY3VfcmVhZF9sb2Nr
KCk7CisJaW9fcG9sbF9yZW1vdmVfZW50cnkocG9sbCk7CisJaWYgKHBvbGxfZG91YmxlKQor
CQlpb19wb2xsX3JlbW92ZV9lbnRyeShwb2xsX2RvdWJsZSk7CisJcmN1X3JlYWRfdW5sb2Nr
KCk7CiB9CiAKLXN0YXRpYyBpbnQgaW9fY29ubmVjdChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
Ym9vbCBmb3JjZV9ub25ibG9jaywKLQkJICAgICAgc3RydWN0IGlvX2NvbXBfc3RhdGUgKmNz
KQorLyoKKyAqIEFsbCBwb2xsIHR3IHNob3VsZCBnbyB0aHJvdWdoIHRoaXMuIENoZWNrcyBm
b3IgcG9sbCBldmVudHMsIG1hbmFnZXMKKyAqIHJlZmVyZW5jZXMsIGRvZXMgcmV3YWl0LCBl
dGMuCisgKgorICogUmV0dXJucyBhIG5lZ2F0aXZlIGVycm9yIG9uIGZhaWx1cmUuID4wIHdo
ZW4gbm8gYWN0aW9uIHJlcXVpcmUsIHdoaWNoIGlzCisgKiBlaXRoZXIgc3B1cmlvdXMgd2Fr
ZXVwIG9yIG11bHRpc2hvdCBDUUUgaXMgc2VydmVkLiAwIHdoZW4gaXQncyBkb25lIHdpdGgK
KyAqIHRoZSByZXF1ZXN0LCB0aGVuIHRoZSBtYXNrIGlzIHN0b3JlZCBpbiByZXEtPnJlc3Vs
dC4KKyAqLworc3RhdGljIGludCBpb19wb2xsX2NoZWNrX2V2ZW50cyhzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSkKIHsKLQlyZXR1cm4gLUVPUE5PVFNVUFA7Ci19Ci0jZW5kaWYgLyogQ09ORklH
X05FVCAqLworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CisJc3RydWN0
IGlvX3BvbGxfaW9jYiAqcG9sbCA9IGlvX3BvbGxfZ2V0X3NpbmdsZShyZXEpOworCWludCB2
OwogCi1zdHJ1Y3QgaW9fcG9sbF90YWJsZSB7Ci0Jc3RydWN0IHBvbGxfdGFibGVfc3RydWN0
IHB0OwotCXN0cnVjdCBpb19raW9jYiAqcmVxOwotCWludCBucl9lbnRyaWVzOwotCWludCBl
cnJvcjsKLX07CisJLyogcmVxLT50YXNrID09IGN1cnJlbnQgaGVyZSwgY2hlY2tpbmcgUEZf
RVhJVElORyBpcyBzYWZlICovCisJaWYgKHVubGlrZWx5KHJlcS0+dGFzay0+ZmxhZ3MgJiBQ
Rl9FWElUSU5HKSkKKwkJaW9fcG9sbF9tYXJrX2NhbmNlbGxlZChyZXEpOwogCi1zdGF0aWMg
aW50IF9faW9fYXN5bmNfd2FrZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgc3RydWN0IGlvX3Bv
bGxfaW9jYiAqcG9sbCwKLQkJCSAgIF9fcG9sbF90IG1hc2ssIHRhc2tfd29ya19mdW5jX3Qg
ZnVuYykKLXsKLQlib29sIHR3YV9zaWduYWxfb2s7Ci0JaW50IHJldDsKKwlkbyB7CisJCXYg
PSBhdG9taWNfcmVhZCgmcmVxLT5wb2xsX3JlZnMpOwogCi0JLyogZm9yIGluc3RhbmNlcyB0
aGF0IHN1cHBvcnQgaXQgY2hlY2sgZm9yIGFuIGV2ZW50IG1hdGNoIGZpcnN0OiAqLwotCWlm
IChtYXNrICYmICEobWFzayAmIHBvbGwtPmV2ZW50cykpCi0JCXJldHVybiAwOworCQkvKiB0
dyBoYW5kbGVyIHNob3VsZCBiZSB0aGUgb3duZXIsIGFuZCBzbyBoYXZlIHNvbWUgcmVmZXJl
bmNlcyAqLworCQlpZiAoV0FSTl9PTl9PTkNFKCEodiAmIElPX1BPTExfUkVGX01BU0spKSkK
KwkJCXJldHVybiAwOworCQlpZiAodiAmIElPX1BPTExfQ0FOQ0VMX0ZMQUcpCisJCQlyZXR1
cm4gLUVDQU5DRUxFRDsKKwkJLyoKKwkJICogY3FlLnJlcyBjb250YWlucyBvbmx5IGV2ZW50
cyBvZiB0aGUgZmlyc3Qgd2FrZSB1cAorCQkgKiBhbmQgYWxsIG90aGVycyBhcmUgYmUgbG9z
dC4gUmVkbyB2ZnNfcG9sbCgpIHRvIGdldAorCQkgKiB1cCB0byBkYXRlIHN0YXRlLgorCQkg
Ki8KKwkJaWYgKCh2ICYgSU9fUE9MTF9SRUZfTUFTSykgIT0gMSkKKwkJCXJlcS0+cmVzdWx0
ID0gMDsKKwkJaWYgKHYgJiBJT19QT0xMX1JFVFJZX0ZMQUcpIHsKKwkJCXJlcS0+cmVzdWx0
ID0gMDsKKwkJCS8qCisJCQkgKiBXZSB3b24ndCBmaW5kIG5ldyBldmVudHMgdGhhdCBjYW1l
IGluIGJldHdlZW4KKwkJCSAqIHZmc19wb2xsIGFuZCB0aGUgcmVmIHB1dCB1bmxlc3Mgd2Ug
Y2xlYXIgdGhlCisJCQkgKiBmbGFnIGluIGFkdmFuY2UuCisJCQkgKi8KKwkJCWF0b21pY19h
bmRub3QoSU9fUE9MTF9SRVRSWV9GTEFHLCAmcmVxLT5wb2xsX3JlZnMpOworCQkJdiAmPSB+
SU9fUE9MTF9SRVRSWV9GTEFHOworCQl9CiAKLQl0cmFjZV9pb191cmluZ190YXNrX2FkZChy
ZXEtPmN0eCwgcmVxLT5vcGNvZGUsIHJlcS0+dXNlcl9kYXRhLCBtYXNrKTsKKwkJaWYgKCFy
ZXEtPnJlc3VsdCkgeworCQkJc3RydWN0IHBvbGxfdGFibGVfc3RydWN0IHB0ID0geyAuX2tl
eSA9IHBvbGwtPmV2ZW50cyB9OwogCi0JbGlzdF9kZWxfaW5pdCgmcG9sbC0+d2FpdC5lbnRy
eSk7CisJCQlyZXEtPnJlc3VsdCA9IHZmc19wb2xsKHJlcS0+ZmlsZSwgJnB0KSAmIHBvbGwt
PmV2ZW50czsKKwkJfQogCi0JcmVxLT5yZXN1bHQgPSBtYXNrOwotCWluaXRfdGFza193b3Jr
KCZyZXEtPnRhc2tfd29yaywgZnVuYyk7Ci0JcGVyY3B1X3JlZl9nZXQoJnJlcS0+Y3R4LT5y
ZWZzKTsKKwkJLyogbXVsdGlzaG90LCBqdXN0IGZpbGwgYW4gQ1FFIGFuZCBwcm9jZWVkICov
CisJCWlmIChyZXEtPnJlc3VsdCAmJiAhKHBvbGwtPmV2ZW50cyAmIEVQT0xMT05FU0hPVCkp
IHsKKwkJCV9fcG9sbF90IG1hc2sgPSBtYW5nbGVfcG9sbChyZXEtPnJlc3VsdCAmIHBvbGwt
PmV2ZW50cyk7CisJCQlib29sIGZpbGxlZDsKIAotCS8qCi0JICogSWYgd2UgdXNpbmcgdGhl
IHNpZ25hbGZkIHdhaXRfcXVldWVfaGVhZCBmb3IgdGhpcyB3YWtldXAsIHRoZW4KLQkgKiBp
dCdzIG5vdCBzYWZlIHRvIHVzZSBUV0FfU0lHTkFMIGFzIHdlIGNvdWxkIGJlIHJlY3Vyc2lu
ZyBvbiB0aGUKLQkgKiB0c2stPnNpZ2hhbmQtPnNpZ2xvY2sgb24gZG9pbmcgdGhlIHdha2V1
cC4gU2hvdWxkIG5vdCBiZSBuZWVkZWQKLQkgKiBlaXRoZXIsIGFzIHRoZSBub3JtYWwgd2Fr
ZXVwIHdpbGwgc3VmZmljZS4KLQkgKi8KLQl0d2Ffc2lnbmFsX29rID0gKHBvbGwtPmhlYWQg
IT0gJnJlcS0+dGFzay0+c2lnaGFuZC0+c2lnbmFsZmRfd3FoKTsKKwkJCXNwaW5fbG9jaygm
Y3R4LT5jb21wbGV0aW9uX2xvY2spOworCQkJZmlsbGVkID0gaW9fZmlsbF9jcWVfYXV4KGN0
eCwgcmVxLT51c2VyX2RhdGEsIG1hc2ssCisJCQkJCQkgSU9SSU5HX0NRRV9GX01PUkUpOwor
CQkJaW9fY29tbWl0X2NxcmluZyhjdHgpOworCQkJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxl
dGlvbl9sb2NrKTsKKwkJCWlmICh1bmxpa2VseSghZmlsbGVkKSkKKwkJCQlyZXR1cm4gLUVD
QU5DRUxFRDsKKwkJCWlvX2NxcmluZ19ldl9wb3N0ZWQoY3R4KTsKKwkJfSBlbHNlIGlmIChy
ZXEtPnJlc3VsdCkgeworCQkJcmV0dXJuIDA7CisJCX0KIAotCS8qCi0JICogSWYgdGhpcyBm
YWlscywgdGhlbiB0aGUgdGFzayBpcyBleGl0aW5nLiBXaGVuIGEgdGFzayBleGl0cywgdGhl
Ci0JICogd29yayBnZXRzIGNhbmNlbGVkLCBzbyBqdXN0IGNhbmNlbCB0aGlzIHJlcXVlc3Qg
YXMgd2VsbCBpbnN0ZWFkCi0JICogb2YgZXhlY3V0aW5nIGl0LiBXZSBjYW4ndCBzYWZlbHkg
ZXhlY3V0ZSBpdCBhbnl3YXksIGFzIHdlIG1heSBub3QKLQkgKiBoYXZlIHRoZSBuZWVkZWQg
c3RhdGUgbmVlZGVkIGZvciBpdCBhbnl3YXkuCi0JICovCi0JcmV0ID0gaW9fcmVxX3Rhc2tf
d29ya19hZGQocmVxLCB0d2Ffc2lnbmFsX29rKTsKLQlpZiAodW5saWtlbHkocmV0KSkgewot
CQlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzazsKKwkJLyogZm9yY2UgdGhlIG5leHQgaXRlcmF0
aW9uIHRvIHZmc19wb2xsKCkgKi8KKwkJcmVxLT5yZXN1bHQgPSAwOworCisJCS8qCisJCSAq
IFJlbGVhc2UgYWxsIHJlZmVyZW5jZXMsIHJldHJ5IGlmIHNvbWVvbmUgdHJpZWQgdG8gcmVz
dGFydAorCQkgKiB0YXNrX3dvcmsgd2hpbGUgd2Ugd2VyZSBleGVjdXRpbmcgaXQuCisJCSAq
LworCX0gd2hpbGUgKGF0b21pY19zdWJfcmV0dXJuKHYgJiBJT19QT0xMX1JFRl9NQVNLLCAm
cmVxLT5wb2xsX3JlZnMpICYKKwkJCQkJSU9fUE9MTF9SRUZfTUFTSyk7CiAKLQkJV1JJVEVf
T05DRShwb2xsLT5jYW5jZWxlZCwgdHJ1ZSk7Ci0JCXRzayA9IGlvX3dxX2dldF90YXNrKHJl
cS0+Y3R4LT5pb193cSk7Ci0JCXRhc2tfd29ya19hZGQodHNrLCAmcmVxLT50YXNrX3dvcmss
IFRXQV9OT05FKTsKLQkJd2FrZV91cF9wcm9jZXNzKHRzayk7Ci0JfQogCXJldHVybiAxOwog
fQogCi1zdGF0aWMgYm9vbCBpb19wb2xsX3Jld2FpdChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
c3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCkKLQlfX2FjcXVpcmVzKCZyZXEtPmN0eC0+Y29t
cGxldGlvbl9sb2NrKQorc3RhdGljIHZvaWQgaW9fcG9sbF90YXNrX2Z1bmMoc3RydWN0IGlv
X2tpb2NiICpyZXEsIGJvb2wgKmxvY2tlZCkKIHsKIAlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCA9IHJlcS0+Y3R4OworCWludCByZXQ7CiAKLQlpZiAoIXJlcS0+cmVzdWx0ICYmICFSRUFE
X09OQ0UocG9sbC0+Y2FuY2VsZWQpKSB7Ci0JCXN0cnVjdCBwb2xsX3RhYmxlX3N0cnVjdCBw
dCA9IHsgLl9rZXkgPSBwb2xsLT5ldmVudHMgfTsKLQotCQlyZXEtPnJlc3VsdCA9IHZmc19w
b2xsKHJlcS0+ZmlsZSwgJnB0KSAmIHBvbGwtPmV2ZW50czsKLQl9CisJcmV0ID0gaW9fcG9s
bF9jaGVja19ldmVudHMocmVxKTsKKwlpZiAocmV0ID4gMCkKKwkJcmV0dXJuOwogCi0Jc3Bp
bl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOwotCWlmICghcmVxLT5yZXN1bHQg
JiYgIVJFQURfT05DRShwb2xsLT5jYW5jZWxlZCkpIHsKLQkJYWRkX3dhaXRfcXVldWUocG9s
bC0+aGVhZCwgJnBvbGwtPndhaXQpOwotCQlyZXR1cm4gdHJ1ZTsKKwlpZiAoIXJldCkgewor
CQlyZXEtPnJlc3VsdCA9IG1hbmdsZV9wb2xsKHJlcS0+cmVzdWx0ICYgcmVxLT5wb2xsLmV2
ZW50cyk7CisJfSBlbHNlIHsKKwkJcmVxLT5yZXN1bHQgPSByZXQ7CisJCXJlcV9zZXRfZmFp
bChyZXEpOwogCX0KIAotCXJldHVybiBmYWxzZTsKLX0KLQotc3RhdGljIHN0cnVjdCBpb19w
b2xsX2lvY2IgKmlvX3BvbGxfZ2V0X2RvdWJsZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKLXsK
LQkvKiBwdXJlIHBvbGwgc3Rhc2hlcyB0aGlzIGluIC0+YXN5bmNfZGF0YSwgcG9sbCBkcml2
ZW4gcmV0cnkgZWxzZXdoZXJlICovCi0JaWYgKHJlcS0+b3Bjb2RlID09IElPUklOR19PUF9Q
T0xMX0FERCkKLQkJcmV0dXJuIHJlcS0+YXN5bmNfZGF0YTsKLQlyZXR1cm4gcmVxLT5hcG9s
bC0+ZG91YmxlX3BvbGw7Ci19Ci0KLXN0YXRpYyBzdHJ1Y3QgaW9fcG9sbF9pb2NiICppb19w
b2xsX2dldF9zaW5nbGUoc3RydWN0IGlvX2tpb2NiICpyZXEpCi17Ci0JaWYgKHJlcS0+b3Bj
b2RlID09IElPUklOR19PUF9QT0xMX0FERCkKLQkJcmV0dXJuICZyZXEtPnBvbGw7Ci0JcmV0
dXJuICZyZXEtPmFwb2xsLT5wb2xsOworCWlvX3BvbGxfcmVtb3ZlX2VudHJpZXMocmVxKTsK
KwlzcGluX2xvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwloYXNoX2RlbCgmcmVxLT5o
YXNoX25vZGUpOworCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJaW9f
cmVxX2NvbXBsZXRlX3Bvc3QocmVxLCByZXEtPnJlc3VsdCwgMCk7CiB9CiAKLXN0YXRpYyB2
b2lkIGlvX3BvbGxfcmVtb3ZlX2RvdWJsZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3N0YXRp
YyB2b2lkIGlvX2Fwb2xsX3Rhc2tfZnVuYyhzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCAq
bG9ja2VkKQogewotCXN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGwgPSBpb19wb2xsX2dldF9k
b3VibGUocmVxKTsKKwlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OworCWlu
dCByZXQ7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZyZXEtPmN0eC0+Y29tcGxldGlvbl9s
b2NrKTsKKwlyZXQgPSBpb19wb2xsX2NoZWNrX2V2ZW50cyhyZXEpOworCWlmIChyZXQgPiAw
KQorCQlyZXR1cm47CiAKLQlpZiAocG9sbCAmJiBwb2xsLT5oZWFkKSB7Ci0JCXN0cnVjdCB3
YWl0X3F1ZXVlX2hlYWQgKmhlYWQgPSBwb2xsLT5oZWFkOworCWlvX3BvbGxfcmVtb3ZlX2Vu
dHJpZXMocmVxKTsKKwlzcGluX2xvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwloYXNo
X2RlbCgmcmVxLT5oYXNoX25vZGUpOworCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBsZXRpb25f
bG9jayk7CiAKLQkJc3Bpbl9sb2NrKCZoZWFkLT5sb2NrKTsKLQkJbGlzdF9kZWxfaW5pdCgm
cG9sbC0+d2FpdC5lbnRyeSk7Ci0JCWlmIChwb2xsLT53YWl0LnByaXZhdGUpCi0JCQlyZWZj
b3VudF9kZWMoJnJlcS0+cmVmcyk7Ci0JCXBvbGwtPmhlYWQgPSBOVUxMOwotCQlzcGluX3Vu
bG9jaygmaGVhZC0+bG9jayk7Ci0JfQorCWlmICghcmV0KQorCQlpb19yZXFfdGFza19zdWJt
aXQocmVxLCBsb2NrZWQpOworCWVsc2UKKwkJaW9fcmVxX2NvbXBsZXRlX2ZhaWxlZChyZXEs
IHJldCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlvX3BvbGxfY29tcGxldGUoc3RydWN0IGlvX2tp
b2NiICpyZXEsIF9fcG9sbF90IG1hc2ssIGludCBlcnJvcikKK3N0YXRpYyB2b2lkIF9faW9f
cG9sbF9leGVjdXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBpbnQgbWFzaykKIHsKLQlzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OworCXJlcS0+cmVzdWx0ID0gbWFzazsK
KwlpZiAocmVxLT5vcGNvZGUgPT0gSU9SSU5HX09QX1BPTExfQUREKQorCQlyZXEtPmlvX3Rh
c2tfd29yay5mdW5jID0gaW9fcG9sbF90YXNrX2Z1bmM7CisJZWxzZQorCQlyZXEtPmlvX3Rh
c2tfd29yay5mdW5jID0gaW9fYXBvbGxfdGFza19mdW5jOwogCi0JaW9fcG9sbF9yZW1vdmVf
ZG91YmxlKHJlcSk7Ci0JcmVxLT5wb2xsLmRvbmUgPSB0cnVlOwotCWlvX2NxcmluZ19maWxs
X2V2ZW50KHJlcSwgZXJyb3IgPyBlcnJvciA6IG1hbmdsZV9wb2xsKG1hc2spKTsKLQlpb19j
b21taXRfY3FyaW5nKGN0eCk7CisJdHJhY2VfaW9fdXJpbmdfdGFza19hZGQocmVxLT5jdHgs
IHJlcS0+b3Bjb2RlLCByZXEtPnVzZXJfZGF0YSwgbWFzayk7CisJaW9fcmVxX3Rhc2tfd29y
a19hZGQocmVxKTsKIH0KIAotc3RhdGljIHZvaWQgaW9fcG9sbF90YXNrX2Z1bmMoc3RydWN0
IGNhbGxiYWNrX2hlYWQgKmNiKQorc3RhdGljIGlubGluZSB2b2lkIGlvX3BvbGxfZXhlY3V0
ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IHJlcykKIHsKLQlzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSA9IGNvbnRhaW5lcl9vZihjYiwgc3RydWN0IGlvX2tpb2NiLCB0YXNrX3dvcmspOwot
CXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7Ci0Jc3RydWN0IGlvX2tpb2Ni
ICpueHQ7Ci0KLQlpZiAoaW9fcG9sbF9yZXdhaXQocmVxLCAmcmVxLT5wb2xsKSkgewotCQlz
cGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQl9IGVsc2UgewotCQlo
YXNoX2RlbCgmcmVxLT5oYXNoX25vZGUpOwotCQlpb19wb2xsX2NvbXBsZXRlKHJlcSwgcmVx
LT5yZXN1bHQsIDApOwotCQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2Nr
KTsKLQotCQlueHQgPSBpb19wdXRfcmVxX2ZpbmRfbmV4dChyZXEpOwotCQlpb19jcXJpbmdf
ZXZfcG9zdGVkKGN0eCk7Ci0JCWlmIChueHQpCi0JCQlfX2lvX3JlcV90YXNrX3N1Ym1pdChu
eHQpOwotCX0KKwlpZiAoaW9fcG9sbF9nZXRfb3duZXJzaGlwKHJlcSkpCisJCV9faW9fcG9s
bF9leGVjdXRlKHJlcSwgcmVzKTsKK30KIAotCXBlcmNwdV9yZWZfcHV0KCZjdHgtPnJlZnMp
Oworc3RhdGljIHZvaWQgaW9fcG9sbF9jYW5jZWxfcmVxKHN0cnVjdCBpb19raW9jYiAqcmVx
KQoreworCWlvX3BvbGxfbWFya19jYW5jZWxsZWQocmVxKTsKKwkvKiBraWNrIHR3LCB3aGlj
aCBzaG91bGQgY29tcGxldGUgdGhlIHJlcXVlc3QgKi8KKwlpb19wb2xsX2V4ZWN1dGUocmVx
LCAwKTsKIH0KIAotc3RhdGljIGludCBpb19wb2xsX2RvdWJsZV93YWtlKHN0cnVjdCB3YWl0
X3F1ZXVlX2VudHJ5ICp3YWl0LCB1bnNpZ25lZCBtb2RlLAotCQkJICAgICAgIGludCBzeW5j
LCB2b2lkICprZXkpCitzdGF0aWMgaW50IGlvX3BvbGxfd2FrZShzdHJ1Y3Qgd2FpdF9xdWV1
ZV9lbnRyeSAqd2FpdCwgdW5zaWduZWQgbW9kZSwgaW50IHN5bmMsCisJCQl2b2lkICprZXkp
CiB7CiAJc3RydWN0IGlvX2tpb2NiICpyZXEgPSB3YWl0LT5wcml2YXRlOwotCXN0cnVjdCBp
b19wb2xsX2lvY2IgKnBvbGwgPSBpb19wb2xsX2dldF9zaW5nbGUocmVxKTsKKwlzdHJ1Y3Qg
aW9fcG9sbF9pb2NiICpwb2xsID0gY29udGFpbmVyX29mKHdhaXQsIHN0cnVjdCBpb19wb2xs
X2lvY2IsCisJCQkJCQkgd2FpdCk7CiAJX19wb2xsX3QgbWFzayA9IGtleV90b19wb2xsKGtl
eSk7CiAKLQkvKiBmb3IgaW5zdGFuY2VzIHRoYXQgc3VwcG9ydCBpdCBjaGVjayBmb3IgYW4g
ZXZlbnQgbWF0Y2ggZmlyc3Q6ICovCi0JaWYgKG1hc2sgJiYgIShtYXNrICYgcG9sbC0+ZXZl
bnRzKSkKLQkJcmV0dXJuIDA7CisJaWYgKHVubGlrZWx5KG1hc2sgJiBQT0xMRlJFRSkpIHsK
KwkJaW9fcG9sbF9tYXJrX2NhbmNlbGxlZChyZXEpOworCQkvKiB3ZSBoYXZlIHRvIGtpY2sg
dHcgaW4gY2FzZSBpdCdzIG5vdCBhbHJlYWR5ICovCisJCWlvX3BvbGxfZXhlY3V0ZShyZXEs
IDApOwogCi0JbGlzdF9kZWxfaW5pdCgmd2FpdC0+ZW50cnkpOworCQkvKgorCQkgKiBJZiB0
aGUgd2FpdHF1ZXVlIGlzIGJlaW5nIGZyZWVkIGVhcmx5IGJ1dCBzb21lb25lIGlzIGFscmVh
ZHkKKwkJICogaG9sZHMgb3duZXJzaGlwIG92ZXIgaXQsIHdlIGhhdmUgdG8gdGVhciBkb3du
IHRoZSByZXF1ZXN0IGFzCisJCSAqIGJlc3Qgd2UgY2FuLiBUaGF0IG1lYW5zIGltbWVkaWF0
ZWx5IHJlbW92aW5nIHRoZSByZXF1ZXN0IGZyb20KKwkJICogaXRzIHdhaXRxdWV1ZSBhbmQg
cHJldmVudGluZyBhbGwgZnVydGhlciBhY2Nlc3NlcyB0byB0aGUKKwkJICogd2FpdHF1ZXVl
IHZpYSB0aGUgcmVxdWVzdC4KKwkJICovCisJCWxpc3RfZGVsX2luaXQoJnBvbGwtPndhaXQu
ZW50cnkpOwogCi0JaWYgKHBvbGwgJiYgcG9sbC0+aGVhZCkgewotCQlib29sIGRvbmU7Ci0K
LQkJc3Bpbl9sb2NrKCZwb2xsLT5oZWFkLT5sb2NrKTsKLQkJZG9uZSA9IGxpc3RfZW1wdHko
JnBvbGwtPndhaXQuZW50cnkpOwotCQlpZiAoIWRvbmUpCi0JCQlsaXN0X2RlbF9pbml0KCZw
b2xsLT53YWl0LmVudHJ5KTsKLQkJLyogbWFrZSBzdXJlIGRvdWJsZSByZW1vdmUgc2VlcyB0
aGlzIGFzIGJlaW5nIGdvbmUgKi8KLQkJd2FpdC0+cHJpdmF0ZSA9IE5VTEw7Ci0JCXNwaW5f
dW5sb2NrKCZwb2xsLT5oZWFkLT5sb2NrKTsKLQkJaWYgKCFkb25lKSB7Ci0JCQkvKiB1c2Ug
d2FpdCBmdW5jIGhhbmRsZXIsIHNvIGl0IG1hdGNoZXMgdGhlIHJxIHR5cGUgKi8KLQkJCXBv
bGwtPndhaXQuZnVuYygmcG9sbC0+d2FpdCwgbW9kZSwgc3luYywga2V5KTsKLQkJfQorCQkv
KgorCQkgKiBDYXJlZnVsOiB0aGlzICptdXN0KiBiZSB0aGUgbGFzdCBzdGVwLCBzaW5jZSBh
cyBzb29uCisJCSAqIGFzIHJlcS0+aGVhZCBpcyBOVUxMJ2VkIG91dCwgdGhlIHJlcXVlc3Qg
Y2FuIGJlCisJCSAqIGNvbXBsZXRlZCBhbmQgZnJlZWQsIHNpbmNlIGFpb19wb2xsX2NvbXBs
ZXRlX3dvcmsoKQorCQkgKiB3aWxsIG5vIGxvbmdlciBuZWVkIHRvIHRha2UgdGhlIHdhaXRx
dWV1ZSBsb2NrLgorCQkgKi8KKwkJc21wX3N0b3JlX3JlbGVhc2UoJnBvbGwtPmhlYWQsIE5V
TEwpOworCQlyZXR1cm4gMTsKIAl9Ci0JcmVmY291bnRfZGVjKCZyZXEtPnJlZnMpOworCisJ
LyogZm9yIGluc3RhbmNlcyB0aGF0IHN1cHBvcnQgaXQgY2hlY2sgZm9yIGFuIGV2ZW50IG1h
dGNoIGZpcnN0ICovCisJaWYgKG1hc2sgJiYgIShtYXNrICYgcG9sbC0+ZXZlbnRzKSkKKwkJ
cmV0dXJuIDA7CisKKwlpZiAoaW9fcG9sbF9nZXRfb3duZXJzaGlwKHJlcSkpCisJCV9faW9f
cG9sbF9leGVjdXRlKHJlcSwgbWFzayk7CiAJcmV0dXJuIDE7CiB9CiAKLXN0YXRpYyB2b2lk
IGlvX2luaXRfcG9sbF9pb2NiKHN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGwsIF9fcG9sbF90
IGV2ZW50cywKLQkJCSAgICAgIHdhaXRfcXVldWVfZnVuY190IHdha2VfZnVuYykKLXsKLQlw
b2xsLT5oZWFkID0gTlVMTDsKLQlwb2xsLT5kb25lID0gZmFsc2U7Ci0JcG9sbC0+Y2FuY2Vs
ZWQgPSBmYWxzZTsKLQlwb2xsLT5ldmVudHMgPSBldmVudHM7Ci0JSU5JVF9MSVNUX0hFQUQo
JnBvbGwtPndhaXQuZW50cnkpOwotCWluaXRfd2FpdHF1ZXVlX2Z1bmNfZW50cnkoJnBvbGwt
PndhaXQsIHdha2VfZnVuYyk7Ci19Ci0KIHN0YXRpYyB2b2lkIF9faW9fcXVldWVfcHJvYyhz
dHJ1Y3QgaW9fcG9sbF9pb2NiICpwb2xsLCBzdHJ1Y3QgaW9fcG9sbF90YWJsZSAqcHQsCiAJ
CQkgICAgc3RydWN0IHdhaXRfcXVldWVfaGVhZCAqaGVhZCwKIAkJCSAgICBzdHJ1Y3QgaW9f
cG9sbF9pb2NiICoqcG9sbF9wdHIpCkBAIC01MDk5LDI5ICs1NDk0LDMxIEBAIHN0YXRpYyB2
b2lkIF9faW9fcXVldWVfcHJvYyhzdHJ1Y3QgaW9fcG9sbF9pb2NiICpwb2xsLCBzdHJ1Y3Qg
aW9fcG9sbF90YWJsZSAqcHQsCiAJICogaWYgdGhpcyBoYXBwZW5zLgogCSAqLwogCWlmICh1
bmxpa2VseShwdC0+bnJfZW50cmllcykpIHsKLQkJc3RydWN0IGlvX3BvbGxfaW9jYiAqcG9s
bF9vbmUgPSBwb2xsOworCQlzdHJ1Y3QgaW9fcG9sbF9pb2NiICpmaXJzdCA9IHBvbGw7CiAK
KwkJLyogZG91YmxlIGFkZCBvbiB0aGUgc2FtZSB3YWl0cXVldWUgaGVhZCwgaWdub3JlICov
CisJCWlmIChmaXJzdC0+aGVhZCA9PSBoZWFkKQorCQkJcmV0dXJuOwogCQkvKiBhbHJlYWR5
IGhhdmUgYSAybmQgZW50cnksIGZhaWwgYSB0aGlyZCBhdHRlbXB0ICovCiAJCWlmICgqcG9s
bF9wdHIpIHsKKwkJCWlmICgoKnBvbGxfcHRyKS0+aGVhZCA9PSBoZWFkKQorCQkJCXJldHVy
bjsKIAkJCXB0LT5lcnJvciA9IC1FSU5WQUw7CiAJCQlyZXR1cm47CiAJCX0KLQkJLyogZG91
YmxlIGFkZCBvbiB0aGUgc2FtZSB3YWl0cXVldWUgaGVhZCwgaWdub3JlICovCi0JCWlmIChw
b2xsLT5oZWFkID09IGhlYWQpCi0JCQlyZXR1cm47CisKIAkJcG9sbCA9IGttYWxsb2Moc2l6
ZW9mKCpwb2xsKSwgR0ZQX0FUT01JQyk7CiAJCWlmICghcG9sbCkgewogCQkJcHQtPmVycm9y
ID0gLUVOT01FTTsKIAkJCXJldHVybjsKIAkJfQotCQlpb19pbml0X3BvbGxfaW9jYihwb2xs
LCBwb2xsX29uZS0+ZXZlbnRzLCBpb19wb2xsX2RvdWJsZV93YWtlKTsKLQkJcmVmY291bnRf
aW5jKCZyZXEtPnJlZnMpOwotCQlwb2xsLT53YWl0LnByaXZhdGUgPSByZXE7CisJCWlvX2lu
aXRfcG9sbF9pb2NiKHBvbGwsIGZpcnN0LT5ldmVudHMsIGZpcnN0LT53YWl0LmZ1bmMpOwog
CQkqcG9sbF9wdHIgPSBwb2xsOwogCX0KIAogCXB0LT5ucl9lbnRyaWVzKys7CiAJcG9sbC0+
aGVhZCA9IGhlYWQ7CisJcG9sbC0+d2FpdC5wcml2YXRlID0gcmVxOwogCiAJaWYgKHBvbGwt
PmV2ZW50cyAmIEVQT0xMRVhDTFVTSVZFKQogCQlhZGRfd2FpdF9xdWV1ZV9leGNsdXNpdmUo
aGVhZCwgJnBvbGwtPndhaXQpOwpAQCAtNTEyOSw4MyArNTUyNiwyMyBAQCBzdGF0aWMgdm9p
ZCBfX2lvX3F1ZXVlX3Byb2Moc3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCwgc3RydWN0IGlv
X3BvbGxfdGFibGUgKnB0LAogCQlhZGRfd2FpdF9xdWV1ZShoZWFkLCAmcG9sbC0+d2FpdCk7
CiB9CiAKLXN0YXRpYyB2b2lkIGlvX2FzeW5jX3F1ZXVlX3Byb2Moc3RydWN0IGZpbGUgKmZp
bGUsIHN0cnVjdCB3YWl0X3F1ZXVlX2hlYWQgKmhlYWQsCitzdGF0aWMgdm9pZCBpb19wb2xs
X3F1ZXVlX3Byb2Moc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCB3YWl0X3F1ZXVlX2hlYWQg
KmhlYWQsCiAJCQkgICAgICAgc3RydWN0IHBvbGxfdGFibGVfc3RydWN0ICpwKQogewogCXN0
cnVjdCBpb19wb2xsX3RhYmxlICpwdCA9IGNvbnRhaW5lcl9vZihwLCBzdHJ1Y3QgaW9fcG9s
bF90YWJsZSwgcHQpOwotCXN0cnVjdCBhc3luY19wb2xsICphcG9sbCA9IHB0LT5yZXEtPmFw
b2xsOwotCi0JX19pb19xdWV1ZV9wcm9jKCZhcG9sbC0+cG9sbCwgcHQsIGhlYWQsICZhcG9s
bC0+ZG91YmxlX3BvbGwpOwotfQotCi1zdGF0aWMgdm9pZCBpb19hc3luY190YXNrX2Z1bmMo
c3RydWN0IGNhbGxiYWNrX2hlYWQgKmNiKQotewotCXN0cnVjdCBpb19raW9jYiAqcmVxID0g
Y29udGFpbmVyX29mKGNiLCBzdHJ1Y3QgaW9fa2lvY2IsIHRhc2tfd29yayk7Ci0Jc3RydWN0
IGFzeW5jX3BvbGwgKmFwb2xsID0gcmVxLT5hcG9sbDsKLQlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCA9IHJlcS0+Y3R4OwotCi0JdHJhY2VfaW9fdXJpbmdfdGFza19ydW4ocmVxLT5jdHgs
IHJlcS0+b3Bjb2RlLCByZXEtPnVzZXJfZGF0YSk7Ci0KLQlpZiAoaW9fcG9sbF9yZXdhaXQo
cmVxLCAmYXBvbGwtPnBvbGwpKSB7Ci0JCXNwaW5fdW5sb2NrX2lycSgmY3R4LT5jb21wbGV0
aW9uX2xvY2spOwotCQlwZXJjcHVfcmVmX3B1dCgmY3R4LT5yZWZzKTsKLQkJcmV0dXJuOwot
CX0KLQotCS8qIElmIHJlcSBpcyBzdGlsbCBoYXNoZWQsIGl0IGNhbm5vdCBoYXZlIGJlZW4g
Y2FuY2VsZWQuIERvbid0IGNoZWNrLiAqLwotCWlmIChoYXNoX2hhc2hlZCgmcmVxLT5oYXNo
X25vZGUpKQotCQloYXNoX2RlbCgmcmVxLT5oYXNoX25vZGUpOwotCi0JaW9fcG9sbF9yZW1v
dmVfZG91YmxlKHJlcSk7Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9j
ayk7Ci0KLQlpZiAoIVJFQURfT05DRShhcG9sbC0+cG9sbC5jYW5jZWxlZCkpCi0JCV9faW9f
cmVxX3Rhc2tfc3VibWl0KHJlcSk7Ci0JZWxzZQotCQlfX2lvX3JlcV90YXNrX2NhbmNlbChy
ZXEsIC1FQ0FOQ0VMRUQpOwogCi0JcGVyY3B1X3JlZl9wdXQoJmN0eC0+cmVmcyk7Ci0Ja2Zy
ZWUoYXBvbGwtPmRvdWJsZV9wb2xsKTsKLQlrZnJlZShhcG9sbCk7Ci19Ci0KLXN0YXRpYyBp
bnQgaW9fYXN5bmNfd2FrZShzdHJ1Y3Qgd2FpdF9xdWV1ZV9lbnRyeSAqd2FpdCwgdW5zaWdu
ZWQgbW9kZSwgaW50IHN5bmMsCi0JCQl2b2lkICprZXkpCi17Ci0Jc3RydWN0IGlvX2tpb2Ni
ICpyZXEgPSB3YWl0LT5wcml2YXRlOwotCXN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGwgPSAm
cmVxLT5hcG9sbC0+cG9sbDsKLQotCXRyYWNlX2lvX3VyaW5nX3BvbGxfd2FrZShyZXEtPmN0
eCwgcmVxLT5vcGNvZGUsIHJlcS0+dXNlcl9kYXRhLAotCQkJCQlrZXlfdG9fcG9sbChrZXkp
KTsKLQotCXJldHVybiBfX2lvX2FzeW5jX3dha2UocmVxLCBwb2xsLCBrZXlfdG9fcG9sbChr
ZXkpLCBpb19hc3luY190YXNrX2Z1bmMpOwotfQotCi1zdGF0aWMgdm9pZCBpb19wb2xsX3Jl
cV9pbnNlcnQoc3RydWN0IGlvX2tpb2NiICpyZXEpCi17Ci0Jc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHggPSByZXEtPmN0eDsKLQlzdHJ1Y3QgaGxpc3RfaGVhZCAqbGlzdDsKLQotCWxpc3Qg
PSAmY3R4LT5jYW5jZWxfaGFzaFtoYXNoX2xvbmcocmVxLT51c2VyX2RhdGEsIGN0eC0+Y2Fu
Y2VsX2hhc2hfYml0cyldOwotCWhsaXN0X2FkZF9oZWFkKCZyZXEtPmhhc2hfbm9kZSwgbGlz
dCk7CisJX19pb19xdWV1ZV9wcm9jKCZwdC0+cmVxLT5wb2xsLCBwdCwgaGVhZCwKKwkJCShz
dHJ1Y3QgaW9fcG9sbF9pb2NiICoqKSAmcHQtPnJlcS0+YXN5bmNfZGF0YSk7CiB9CiAKLXN0
YXRpYyBfX3BvbGxfdCBfX2lvX2FybV9wb2xsX2hhbmRsZXIoc3RydWN0IGlvX2tpb2NiICpy
ZXEsCi0JCQkJICAgICAgc3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCwKLQkJCQkgICAgICBz
dHJ1Y3QgaW9fcG9sbF90YWJsZSAqaXB0LCBfX3BvbGxfdCBtYXNrLAotCQkJCSAgICAgIHdh
aXRfcXVldWVfZnVuY190IHdha2VfZnVuYykKLQlfX2FjcXVpcmVzKCZjdHgtPmNvbXBsZXRp
b25fbG9jaykKK3N0YXRpYyBpbnQgX19pb19hcm1fcG9sbF9oYW5kbGVyKHN0cnVjdCBpb19r
aW9jYiAqcmVxLAorCQkJCSBzdHJ1Y3QgaW9fcG9sbF9pb2NiICpwb2xsLAorCQkJCSBzdHJ1
Y3QgaW9fcG9sbF90YWJsZSAqaXB0LCBfX3BvbGxfdCBtYXNrKQogewogCXN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7Ci0JYm9vbCBjYW5jZWwgPSBmYWxzZTsKLQotCWlm
IChyZXEtPmZpbGUtPmZfb3AtPm1heV9wb2xsZnJlZSkgewotCQlzcGluX2xvY2tfaXJxKCZj
dHgtPmNvbXBsZXRpb25fbG9jayk7Ci0JCXJldHVybiAtRU9QTk9UU1VQUDsKLQl9CiAKIAlJ
TklUX0hMSVNUX05PREUoJnJlcS0+aGFzaF9ub2RlKTsKLQlpb19pbml0X3BvbGxfaW9jYihw
b2xsLCBtYXNrLCB3YWtlX2Z1bmMpOworCWlvX2luaXRfcG9sbF9pb2NiKHBvbGwsIG1hc2ss
IGlvX3BvbGxfd2FrZSk7CiAJcG9sbC0+ZmlsZSA9IHJlcS0+ZmlsZTsKIAlwb2xsLT53YWl0
LnByaXZhdGUgPSByZXE7CiAKQEAgLTUyMTQsMTY5ICs1NTUxLDEzOCBAQCBzdGF0aWMgX19w
b2xsX3QgX19pb19hcm1fcG9sbF9oYW5kbGVyKHN0cnVjdCBpb19raW9jYiAqcmVxLAogCWlw
dC0+ZXJyb3IgPSAwOwogCWlwdC0+bnJfZW50cmllcyA9IDA7CiAKKwkvKgorCSAqIFRha2Ug
dGhlIG93bmVyc2hpcCB0byBkZWxheSBhbnkgdHcgZXhlY3V0aW9uIHVwIHVudGlsIHdlJ3Jl
IGRvbmUKKwkgKiB3aXRoIHBvbGwgYXJtaW5nLiBzZWUgaW9fcG9sbF9nZXRfb3duZXJzaGlw
KCkuCisJICovCisJYXRvbWljX3NldCgmcmVxLT5wb2xsX3JlZnMsIDEpOwogCW1hc2sgPSB2
ZnNfcG9sbChyZXEtPmZpbGUsICZpcHQtPnB0KSAmIHBvbGwtPmV2ZW50czsKLQlpZiAodW5s
aWtlbHkoIWlwdC0+bnJfZW50cmllcykgJiYgIWlwdC0+ZXJyb3IpCi0JCWlwdC0+ZXJyb3Ig
PSAtRUlOVkFMOwotCi0Jc3Bpbl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOwot
CWlmIChpcHQtPmVycm9yKQotCQlpb19wb2xsX3JlbW92ZV9kb3VibGUocmVxKTsKLQlpZiAo
bGlrZWx5KHBvbGwtPmhlYWQpKSB7Ci0JCXNwaW5fbG9jaygmcG9sbC0+aGVhZC0+bG9jayk7
Ci0JCWlmICh1bmxpa2VseShsaXN0X2VtcHR5KCZwb2xsLT53YWl0LmVudHJ5KSkpIHsKLQkJ
CWlmIChpcHQtPmVycm9yKQotCQkJCWNhbmNlbCA9IHRydWU7CisKKwlpZiAobWFzayAmJiAo
cG9sbC0+ZXZlbnRzICYgRVBPTExPTkVTSE9UKSkgeworCQlpb19wb2xsX3JlbW92ZV9lbnRy
aWVzKHJlcSk7CisJCS8qIG5vIG9uZSBlbHNlIGhhcyBhY2Nlc3MgdG8gdGhlIHJlcSwgZm9y
Z2V0IGFib3V0IHRoZSByZWYgKi8KKwkJcmV0dXJuIG1hc2s7CisJfQorCWlmICghbWFzayAm
JiB1bmxpa2VseShpcHQtPmVycm9yIHx8ICFpcHQtPm5yX2VudHJpZXMpKSB7CisJCWlvX3Bv
bGxfcmVtb3ZlX2VudHJpZXMocmVxKTsKKwkJaWYgKCFpcHQtPmVycm9yKQorCQkJaXB0LT5l
cnJvciA9IC1FSU5WQUw7CisJCXJldHVybiAwOworCX0KKworCXNwaW5fbG9jaygmY3R4LT5j
b21wbGV0aW9uX2xvY2spOworCWlvX3BvbGxfcmVxX2luc2VydChyZXEpOworCXNwaW5fdW5s
b2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisKKwlpZiAobWFzaykgeworCQkvKiBjYW4n
dCBtdWx0aXNob3QgaWYgZmFpbGVkLCBqdXN0IHF1ZXVlIHRoZSBldmVudCB3ZSd2ZSBnb3Qg
Ki8KKwkJaWYgKHVubGlrZWx5KGlwdC0+ZXJyb3IgfHwgIWlwdC0+bnJfZW50cmllcykpIHsK
KwkJCXBvbGwtPmV2ZW50cyB8PSBFUE9MTE9ORVNIT1Q7CiAJCQlpcHQtPmVycm9yID0gMDsK
LQkJCW1hc2sgPSAwOwogCQl9Ci0JCWlmIChtYXNrIHx8IGlwdC0+ZXJyb3IpCi0JCQlsaXN0
X2RlbF9pbml0KCZwb2xsLT53YWl0LmVudHJ5KTsKLQkJZWxzZSBpZiAoY2FuY2VsKQotCQkJ
V1JJVEVfT05DRShwb2xsLT5jYW5jZWxlZCwgdHJ1ZSk7Ci0JCWVsc2UgaWYgKCFwb2xsLT5k
b25lKSAvKiBhY3R1YWxseSB3YWl0aW5nIGZvciBhbiBldmVudCAqLwotCQkJaW9fcG9sbF9y
ZXFfaW5zZXJ0KHJlcSk7Ci0JCXNwaW5fdW5sb2NrKCZwb2xsLT5oZWFkLT5sb2NrKTsKKwkJ
X19pb19wb2xsX2V4ZWN1dGUocmVxLCBtYXNrKTsKKwkJcmV0dXJuIDA7CiAJfQogCi0JcmV0
dXJuIG1hc2s7CisJLyoKKwkgKiBUcnkgdG8gcmVsZWFzZSBvd25lcnNoaXAuIElmIHdlIHNl
ZSBhIGNoYW5nZSBvZiBzdGF0ZSwgZS5nLgorCSAqIHBvbGwgd2FzIHdha2VuIHVwLCBxdWV1
ZSB1cCBhIHR3LCBpdCdsbCBkZWFsIHdpdGggaXQuCisJICovCisJaWYgKGF0b21pY19jbXB4
Y2hnKCZyZXEtPnBvbGxfcmVmcywgMSwgMCkgIT0gMSkKKwkJX19pb19wb2xsX2V4ZWN1dGUo
cmVxLCAwKTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgaW9fYXN5bmNfcXVldWVf
cHJvYyhzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IHdhaXRfcXVldWVfaGVhZCAqaGVhZCwK
KwkJCSAgICAgICBzdHJ1Y3QgcG9sbF90YWJsZV9zdHJ1Y3QgKnApCit7CisJc3RydWN0IGlv
X3BvbGxfdGFibGUgKnB0ID0gY29udGFpbmVyX29mKHAsIHN0cnVjdCBpb19wb2xsX3RhYmxl
LCBwdCk7CisJc3RydWN0IGFzeW5jX3BvbGwgKmFwb2xsID0gcHQtPnJlcS0+YXBvbGw7CisK
KwlfX2lvX3F1ZXVlX3Byb2MoJmFwb2xsLT5wb2xsLCBwdCwgaGVhZCwgJmFwb2xsLT5kb3Vi
bGVfcG9sbCk7CiB9CiAKLXN0YXRpYyBib29sIGlvX2FybV9wb2xsX2hhbmRsZXIoc3RydWN0
IGlvX2tpb2NiICpyZXEpCitlbnVtIHsKKwlJT19BUE9MTF9PSywKKwlJT19BUE9MTF9BQk9S
VEVELAorCUlPX0FQT0xMX1JFQURZCit9OworCitzdGF0aWMgaW50IGlvX2FybV9wb2xsX2hh
bmRsZXIoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB7CiAJY29uc3Qgc3RydWN0IGlvX29wX2Rl
ZiAqZGVmID0gJmlvX29wX2RlZnNbcmVxLT5vcGNvZGVdOwogCXN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4ID0gcmVxLT5jdHg7CiAJc3RydWN0IGFzeW5jX3BvbGwgKmFwb2xsOwogCXN0cnVj
dCBpb19wb2xsX3RhYmxlIGlwdDsKLQlfX3BvbGxfdCBtYXNrLCByZXQ7Ci0JaW50IHJ3Owor
CV9fcG9sbF90IG1hc2sgPSBFUE9MTE9ORVNIT1QgfCBQT0xMRVJSIHwgUE9MTFBSSTsKKwlp
bnQgcmV0OwogCiAJaWYgKCFyZXEtPmZpbGUgfHwgIWZpbGVfY2FuX3BvbGwocmVxLT5maWxl
KSkKLQkJcmV0dXJuIGZhbHNlOworCQlyZXR1cm4gSU9fQVBPTExfQUJPUlRFRDsKIAlpZiAo
cmVxLT5mbGFncyAmIFJFUV9GX1BPTExFRCkKLQkJcmV0dXJuIGZhbHNlOwotCWlmIChkZWYt
PnBvbGxpbikKLQkJcncgPSBSRUFEOwotCWVsc2UgaWYgKGRlZi0+cG9sbG91dCkKLQkJcncg
PSBXUklURTsKLQllbHNlCi0JCXJldHVybiBmYWxzZTsKLQkvKiBpZiB3ZSBjYW4ndCBub25i
bG9jayB0cnksIHRoZW4gbm8gcG9pbnQgaW4gYXJtaW5nIGEgcG9sbCBoYW5kbGVyICovCi0J
aWYgKCFpb19maWxlX3N1cHBvcnRzX2FzeW5jKHJlcS0+ZmlsZSwgcncpKQotCQlyZXR1cm4g
ZmFsc2U7CisJCXJldHVybiBJT19BUE9MTF9BQk9SVEVEOworCWlmICghZGVmLT5wb2xsaW4g
JiYgIWRlZi0+cG9sbG91dCkKKwkJcmV0dXJuIElPX0FQT0xMX0FCT1JURUQ7CisKKwlpZiAo
ZGVmLT5wb2xsaW4pIHsKKwkJbWFzayB8PSBQT0xMSU4gfCBQT0xMUkROT1JNOworCisJCS8q
IElmIHJlYWRpbmcgZnJvbSBNU0dfRVJSUVVFVUUgdXNpbmcgcmVjdm1zZywgaWdub3JlIFBP
TExJTiAqLworCQlpZiAoKHJlcS0+b3Bjb2RlID09IElPUklOR19PUF9SRUNWTVNHKSAmJgor
CQkgICAgKHJlcS0+c3JfbXNnLm1zZ19mbGFncyAmIE1TR19FUlJRVUVVRSkpCisJCQltYXNr
ICY9IH5QT0xMSU47CisJfSBlbHNlIHsKKwkJbWFzayB8PSBQT0xMT1VUIHwgUE9MTFdSTk9S
TTsKKwl9CiAKIAlhcG9sbCA9IGttYWxsb2Moc2l6ZW9mKCphcG9sbCksIEdGUF9BVE9NSUMp
OwogCWlmICh1bmxpa2VseSghYXBvbGwpKQotCQlyZXR1cm4gZmFsc2U7CisJCXJldHVybiBJ
T19BUE9MTF9BQk9SVEVEOwogCWFwb2xsLT5kb3VibGVfcG9sbCA9IE5VTEw7Ci0KLQlyZXEt
PmZsYWdzIHw9IFJFUV9GX1BPTExFRDsKIAlyZXEtPmFwb2xsID0gYXBvbGw7Ci0KLQltYXNr
ID0gMDsKLQlpZiAoZGVmLT5wb2xsaW4pCi0JCW1hc2sgfD0gUE9MTElOIHwgUE9MTFJETk9S
TTsKLQlpZiAoZGVmLT5wb2xsb3V0KQotCQltYXNrIHw9IFBPTExPVVQgfCBQT0xMV1JOT1JN
OwotCi0JLyogSWYgcmVhZGluZyBmcm9tIE1TR19FUlJRVUVVRSB1c2luZyByZWN2bXNnLCBp
Z25vcmUgUE9MTElOICovCi0JaWYgKChyZXEtPm9wY29kZSA9PSBJT1JJTkdfT1BfUkVDVk1T
RykgJiYKLQkgICAgKHJlcS0+c3JfbXNnLm1zZ19mbGFncyAmIE1TR19FUlJRVUVVRSkpCi0J
CW1hc2sgJj0gflBPTExJTjsKLQotCW1hc2sgfD0gUE9MTEVSUiB8IFBPTExQUkk7Ci0KKwly
ZXEtPmZsYWdzIHw9IFJFUV9GX1BPTExFRDsKIAlpcHQucHQuX3Fwcm9jID0gaW9fYXN5bmNf
cXVldWVfcHJvYzsKIAotCXJldCA9IF9faW9fYXJtX3BvbGxfaGFuZGxlcihyZXEsICZhcG9s
bC0+cG9sbCwgJmlwdCwgbWFzaywKLQkJCQkJaW9fYXN5bmNfd2FrZSk7Ci0JaWYgKHJldCB8
fCBpcHQuZXJyb3IpIHsKLQkJaW9fcG9sbF9yZW1vdmVfZG91YmxlKHJlcSk7Ci0JCXNwaW5f
dW5sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOwotCQlrZnJlZShhcG9sbC0+ZG91
YmxlX3BvbGwpOwotCQlrZnJlZShhcG9sbCk7Ci0JCXJldHVybiBmYWxzZTsKLQl9Ci0Jc3Bp
bl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7Ci0JdHJhY2VfaW9fdXJpbmdf
cG9sbF9hcm0oY3R4LCByZXEtPm9wY29kZSwgcmVxLT51c2VyX2RhdGEsIG1hc2ssCi0JCQkJ
CWFwb2xsLT5wb2xsLmV2ZW50cyk7Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLXN0YXRpYyBib29s
IF9faW9fcG9sbF9yZW1vdmVfb25lKHN0cnVjdCBpb19raW9jYiAqcmVxLAotCQkJCSBzdHJ1
Y3QgaW9fcG9sbF9pb2NiICpwb2xsKQotewotCWJvb2wgZG9fY29tcGxldGUgPSBmYWxzZTsK
LQotCXNwaW5fbG9jaygmcG9sbC0+aGVhZC0+bG9jayk7Ci0JV1JJVEVfT05DRShwb2xsLT5j
YW5jZWxlZCwgdHJ1ZSk7Ci0JaWYgKCFsaXN0X2VtcHR5KCZwb2xsLT53YWl0LmVudHJ5KSkg
ewotCQlsaXN0X2RlbF9pbml0KCZwb2xsLT53YWl0LmVudHJ5KTsKLQkJZG9fY29tcGxldGUg
PSB0cnVlOwotCX0KLQlzcGluX3VubG9jaygmcG9sbC0+aGVhZC0+bG9jayk7Ci0JaGFzaF9k
ZWwoJnJlcS0+aGFzaF9ub2RlKTsKLQlyZXR1cm4gZG9fY29tcGxldGU7Ci19Ci0KLXN0YXRp
YyBib29sIGlvX3BvbGxfcmVtb3ZlX29uZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKLXsKLQli
b29sIGRvX2NvbXBsZXRlOwotCi0JaW9fcG9sbF9yZW1vdmVfZG91YmxlKHJlcSk7Ci0KLQlp
ZiAocmVxLT5vcGNvZGUgPT0gSU9SSU5HX09QX1BPTExfQUREKSB7Ci0JCWRvX2NvbXBsZXRl
ID0gX19pb19wb2xsX3JlbW92ZV9vbmUocmVxLCAmcmVxLT5wb2xsKTsKLQl9IGVsc2Ugewot
CQlzdHJ1Y3QgYXN5bmNfcG9sbCAqYXBvbGwgPSByZXEtPmFwb2xsOwotCi0JCS8qIG5vbi1w
b2xsIHJlcXVlc3RzIGhhdmUgc3VibWl0IHJlZiBzdGlsbCAqLwotCQlkb19jb21wbGV0ZSA9
IF9faW9fcG9sbF9yZW1vdmVfb25lKHJlcSwgJmFwb2xsLT5wb2xsKTsKLQkJaWYgKGRvX2Nv
bXBsZXRlKSB7Ci0JCQlpb19wdXRfcmVxKHJlcSk7Ci0JCQlrZnJlZShhcG9sbC0+ZG91Ymxl
X3BvbGwpOwotCQkJa2ZyZWUoYXBvbGwpOwotCQl9Ci0JfQotCi0JaWYgKGRvX2NvbXBsZXRl
KSB7Ci0JCWlvX2NxcmluZ19maWxsX2V2ZW50KHJlcSwgLUVDQU5DRUxFRCk7Ci0JCWlvX2Nv
bW1pdF9jcXJpbmcocmVxLT5jdHgpOwotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQkJ
aW9fcHV0X3JlcV9kZWZlcnJlZChyZXEsIDEpOwotCX0KKwlyZXQgPSBfX2lvX2FybV9wb2xs
X2hhbmRsZXIocmVxLCAmYXBvbGwtPnBvbGwsICZpcHQsIG1hc2spOworCWlmIChyZXQgfHwg
aXB0LmVycm9yKQorCQlyZXR1cm4gcmV0ID8gSU9fQVBPTExfUkVBRFkgOiBJT19BUE9MTF9B
Qk9SVEVEOwogCi0JcmV0dXJuIGRvX2NvbXBsZXRlOworCXRyYWNlX2lvX3VyaW5nX3BvbGxf
YXJtKGN0eCwgcmVxLCByZXEtPm9wY29kZSwgcmVxLT51c2VyX2RhdGEsCisJCQkJbWFzaywg
YXBvbGwtPnBvbGwuZXZlbnRzKTsKKwlyZXR1cm4gSU9fQVBPTExfT0s7CiB9CiAKIC8qCiAg
KiBSZXR1cm5zIHRydWUgaWYgd2UgZm91bmQgYW5kIGtpbGxlZCBvbmUgb3IgbW9yZSBwb2xs
IHJlcXVlc3RzCiAgKi8KIHN0YXRpYyBib29sIGlvX3BvbGxfcmVtb3ZlX2FsbChzdHJ1Y3Qg
aW9fcmluZ19jdHggKmN0eCwgc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssCi0JCQkgICAgICAg
c3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMpCisJCQkgICAgICAgYm9vbCBjYW5jZWxfYWxs
KQogewogCXN0cnVjdCBobGlzdF9ub2RlICp0bXA7CiAJc3RydWN0IGlvX2tpb2NiICpyZXE7
Ci0JaW50IHBvc3RlZCA9IDAsIGk7CisJYm9vbCBmb3VuZCA9IGZhbHNlOworCWludCBpOwog
Ci0Jc3Bpbl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCXNwaW5fbG9jaygm
Y3R4LT5jb21wbGV0aW9uX2xvY2spOwogCWZvciAoaSA9IDA7IGkgPCAoMVUgPDwgY3R4LT5j
YW5jZWxfaGFzaF9iaXRzKTsgaSsrKSB7CiAJCXN0cnVjdCBobGlzdF9oZWFkICpsaXN0Owog
CiAJCWxpc3QgPSAmY3R4LT5jYW5jZWxfaGFzaFtpXTsKIAkJaGxpc3RfZm9yX2VhY2hfZW50
cnlfc2FmZShyZXEsIHRtcCwgbGlzdCwgaGFzaF9ub2RlKSB7Ci0JCQlpZiAoaW9fbWF0Y2hf
dGFzayhyZXEsIHRzaywgZmlsZXMpKQotCQkJCXBvc3RlZCArPSBpb19wb2xsX3JlbW92ZV9v
bmUocmVxKTsKKwkJCWlmIChpb19tYXRjaF90YXNrX3NhZmUocmVxLCB0c2ssIGNhbmNlbF9h
bGwpKSB7CisJCQkJaGxpc3RfZGVsX2luaXQoJnJlcS0+aGFzaF9ub2RlKTsKKwkJCQlpb19w
b2xsX2NhbmNlbF9yZXEocmVxKTsKKwkJCQlmb3VuZCA9IHRydWU7CisJCQl9CiAJCX0KIAl9
Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7Ci0KLQlpZiAocG9z
dGVkKQotCQlpb19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7Ci0KLQlyZXR1cm4gcG9zdGVkICE9
IDA7CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlyZXR1cm4gZm91
bmQ7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcG9sbF9jYW5jZWwoc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHgsIF9fdTY0IHNxZV9hZGRyKQorc3RhdGljIHN0cnVjdCBpb19raW9jYiAqaW9fcG9s
bF9maW5kKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBfX3U2NCBzcWVfYWRkciwKKwkJCQkg
ICAgIGJvb2wgcG9sbF9vbmx5KQorCV9fbXVzdF9ob2xkKCZjdHgtPmNvbXBsZXRpb25fbG9j
aykKIHsKIAlzdHJ1Y3QgaGxpc3RfaGVhZCAqbGlzdDsKIAlzdHJ1Y3QgaW9fa2lvY2IgKnJl
cTsKQEAgLTUzODUsMTA3ICs1NjkxLDE2MSBAQCBzdGF0aWMgaW50IGlvX3BvbGxfY2FuY2Vs
KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBfX3U2NCBzcWVfYWRkcikKIAlobGlzdF9mb3Jf
ZWFjaF9lbnRyeShyZXEsIGxpc3QsIGhhc2hfbm9kZSkgewogCQlpZiAoc3FlX2FkZHIgIT0g
cmVxLT51c2VyX2RhdGEpCiAJCQljb250aW51ZTsKLQkJaWYgKGlvX3BvbGxfcmVtb3ZlX29u
ZShyZXEpKQotCQkJcmV0dXJuIDA7Ci0JCXJldHVybiAtRUFMUkVBRFk7CisJCWlmIChwb2xs
X29ubHkgJiYgcmVxLT5vcGNvZGUgIT0gSU9SSU5HX09QX1BPTExfQUREKQorCQkJY29udGlu
dWU7CisJCXJldHVybiByZXE7CiAJfQotCi0JcmV0dXJuIC1FTk9FTlQ7CisJcmV0dXJuIE5V
TEw7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcG9sbF9yZW1vdmVfcHJlcChzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSwKLQkJCSAgICAgICBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCitz
dGF0aWMgYm9vbCBpb19wb2xsX2Rpc2FybShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKKwlfX211
c3RfaG9sZCgmY3R4LT5jb21wbGV0aW9uX2xvY2spCiB7Ci0JaWYgKHVubGlrZWx5KHJlcS0+
Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwpKQotCQlyZXR1cm4gLUVJTlZBTDsK
LQlpZiAoc3FlLT5pb3ByaW8gfHwgc3FlLT5vZmYgfHwgc3FlLT5sZW4gfHwgc3FlLT5idWZf
aW5kZXggfHwKLQkgICAgc3FlLT5wb2xsX2V2ZW50cykKLQkJcmV0dXJuIC1FSU5WQUw7Ci0K
LQlyZXEtPnBvbGwuYWRkciA9IFJFQURfT05DRShzcWUtPmFkZHIpOwotCXJldHVybiAwOwor
CWlmICghaW9fcG9sbF9nZXRfb3duZXJzaGlwKHJlcSkpCisJCXJldHVybiBmYWxzZTsKKwlp
b19wb2xsX3JlbW92ZV9lbnRyaWVzKHJlcSk7CisJaGFzaF9kZWwoJnJlcS0+aGFzaF9ub2Rl
KTsKKwlyZXR1cm4gdHJ1ZTsKIH0KIAotLyoKLSAqIEZpbmQgYSBydW5uaW5nIHBvbGwgY29t
bWFuZCB0aGF0IG1hdGNoZXMgb25lIHNwZWNpZmllZCBpbiBzcWUtPmFkZHIsCi0gKiBhbmQg
cmVtb3ZlIGl0IGlmIGZvdW5kLgotICovCi1zdGF0aWMgaW50IGlvX3BvbGxfcmVtb3ZlKHN0
cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIGludCBpb19wb2xsX2NhbmNlbChzdHJ1Y3Qg
aW9fcmluZ19jdHggKmN0eCwgX191NjQgc3FlX2FkZHIsCisJCQkgIGJvb2wgcG9sbF9vbmx5
KQorCV9fbXVzdF9ob2xkKCZjdHgtPmNvbXBsZXRpb25fbG9jaykKIHsKLQlzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OwotCXU2NCBhZGRyOwotCWludCByZXQ7CisJc3Ry
dWN0IGlvX2tpb2NiICpyZXEgPSBpb19wb2xsX2ZpbmQoY3R4LCBzcWVfYWRkciwgcG9sbF9v
bmx5KTsKIAotCWFkZHIgPSByZXEtPnBvbGwuYWRkcjsKLQlzcGluX2xvY2tfaXJxKCZjdHgt
PmNvbXBsZXRpb25fbG9jayk7Ci0JcmV0ID0gaW9fcG9sbF9jYW5jZWwoY3R4LCBhZGRyKTsK
LQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQotCWlmIChyZXQg
PCAwKQotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQlpb19yZXFfY29tcGxldGUocmVx
LCByZXQpOworCWlmICghcmVxKQorCQlyZXR1cm4gLUVOT0VOVDsKKwlpb19wb2xsX2NhbmNl
bF9yZXEocmVxKTsKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBpb19wb2xsX3dha2Uo
c3RydWN0IHdhaXRfcXVldWVfZW50cnkgKndhaXQsIHVuc2lnbmVkIG1vZGUsIGludCBzeW5j
LAotCQkJdm9pZCAqa2V5KQorc3RhdGljIF9fcG9sbF90IGlvX3BvbGxfcGFyc2VfZXZlbnRz
KGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSwKKwkJCQkgICAgIHVuc2lnbmVkIGlu
dCBmbGFncykKIHsKLQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IHdhaXQtPnByaXZhdGU7Ci0J
c3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCA9ICZyZXEtPnBvbGw7CisJdTMyIGV2ZW50czsK
IAotCXJldHVybiBfX2lvX2FzeW5jX3dha2UocmVxLCBwb2xsLCBrZXlfdG9fcG9sbChrZXkp
LCBpb19wb2xsX3Rhc2tfZnVuYyk7CisJZXZlbnRzID0gUkVBRF9PTkNFKHNxZS0+cG9sbDMy
X2V2ZW50cyk7CisjaWZkZWYgX19CSUdfRU5ESUFOCisJZXZlbnRzID0gc3dhaHczMihldmVu
dHMpOworI2VuZGlmCisJaWYgKCEoZmxhZ3MgJiBJT1JJTkdfUE9MTF9BRERfTVVMVEkpKQor
CQlldmVudHMgfD0gRVBPTExPTkVTSE9UOworCXJldHVybiBkZW1hbmdsZV9wb2xsKGV2ZW50
cykgfCAoZXZlbnRzICYgKEVQT0xMRVhDTFVTSVZFfEVQT0xMT05FU0hPVCkpOwogfQogCi1z
dGF0aWMgdm9pZCBpb19wb2xsX3F1ZXVlX3Byb2Moc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVj
dCB3YWl0X3F1ZXVlX2hlYWQgKmhlYWQsCi0JCQkgICAgICAgc3RydWN0IHBvbGxfdGFibGVf
c3RydWN0ICpwKQorc3RhdGljIGludCBpb19wb2xsX3VwZGF0ZV9wcmVwKHN0cnVjdCBpb19r
aW9jYiAqcmVxLAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkK
IHsKLQlzdHJ1Y3QgaW9fcG9sbF90YWJsZSAqcHQgPSBjb250YWluZXJfb2YocCwgc3RydWN0
IGlvX3BvbGxfdGFibGUsIHB0KTsKKwlzdHJ1Y3QgaW9fcG9sbF91cGRhdGUgKnVwZCA9ICZy
ZXEtPnBvbGxfdXBkYXRlOworCXUzMiBmbGFnczsKKworCWlmICh1bmxpa2VseShyZXEtPmN0
eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisJ
aWYgKHNxZS0+aW9wcmlvIHx8IHNxZS0+YnVmX2luZGV4IHx8IHNxZS0+c3BsaWNlX2ZkX2lu
KQorCQlyZXR1cm4gLUVJTlZBTDsKKwlmbGFncyA9IFJFQURfT05DRShzcWUtPmxlbik7CisJ
aWYgKGZsYWdzICYgfihJT1JJTkdfUE9MTF9VUERBVEVfRVZFTlRTIHwgSU9SSU5HX1BPTExf
VVBEQVRFX1VTRVJfREFUQSB8CisJCSAgICAgIElPUklOR19QT0xMX0FERF9NVUxUSSkpCisJ
CXJldHVybiAtRUlOVkFMOworCS8qIG1lYW5pbmdsZXNzIHdpdGhvdXQgdXBkYXRlICovCisJ
aWYgKGZsYWdzID09IElPUklOR19QT0xMX0FERF9NVUxUSSkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKKwl1cGQtPm9sZF91c2VyX2RhdGEgPSBSRUFEX09OQ0Uoc3FlLT5hZGRyKTsKKwl1cGQt
PnVwZGF0ZV9ldmVudHMgPSBmbGFncyAmIElPUklOR19QT0xMX1VQREFURV9FVkVOVFM7CisJ
dXBkLT51cGRhdGVfdXNlcl9kYXRhID0gZmxhZ3MgJiBJT1JJTkdfUE9MTF9VUERBVEVfVVNF
Ul9EQVRBOworCisJdXBkLT5uZXdfdXNlcl9kYXRhID0gUkVBRF9PTkNFKHNxZS0+b2ZmKTsK
KwlpZiAoIXVwZC0+dXBkYXRlX3VzZXJfZGF0YSAmJiB1cGQtPm5ld191c2VyX2RhdGEpCisJ
CXJldHVybiAtRUlOVkFMOworCWlmICh1cGQtPnVwZGF0ZV9ldmVudHMpCisJCXVwZC0+ZXZl
bnRzID0gaW9fcG9sbF9wYXJzZV9ldmVudHMoc3FlLCBmbGFncyk7CisJZWxzZSBpZiAoc3Fl
LT5wb2xsMzJfZXZlbnRzKQorCQlyZXR1cm4gLUVJTlZBTDsKIAotCV9faW9fcXVldWVfcHJv
YygmcHQtPnJlcS0+cG9sbCwgcHQsIGhlYWQsIChzdHJ1Y3QgaW9fcG9sbF9pb2NiICoqKSAm
cHQtPnJlcS0+YXN5bmNfZGF0YSk7CisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgaW9f
cG9sbF9hZGRfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3Vy
aW5nX3NxZSAqc3FlKQogewogCXN0cnVjdCBpb19wb2xsX2lvY2IgKnBvbGwgPSAmcmVxLT5w
b2xsOwotCXUzMiBldmVudHM7CisJdTMyIGZsYWdzOwogCiAJaWYgKHVubGlrZWx5KHJlcS0+
Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwpKQogCQlyZXR1cm4gLUVJTlZBTDsK
LQlpZiAoc3FlLT5hZGRyIHx8IHNxZS0+aW9wcmlvIHx8IHNxZS0+b2ZmIHx8IHNxZS0+bGVu
IHx8IHNxZS0+YnVmX2luZGV4KQorCWlmIChzcWUtPmlvcHJpbyB8fCBzcWUtPmJ1Zl9pbmRl
eCB8fCBzcWUtPm9mZiB8fCBzcWUtPmFkZHIpCisJCXJldHVybiAtRUlOVkFMOworCWZsYWdz
ID0gUkVBRF9PTkNFKHNxZS0+bGVuKTsKKwlpZiAoZmxhZ3MgJiB+SU9SSU5HX1BPTExfQURE
X01VTFRJKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWV2ZW50cyA9IFJFQURfT05DRShzcWUt
PnBvbGwzMl9ldmVudHMpOwotI2lmZGVmIF9fQklHX0VORElBTgotCWV2ZW50cyA9IHN3YWh3
MzIoZXZlbnRzKTsKLSNlbmRpZgotCXBvbGwtPmV2ZW50cyA9IGRlbWFuZ2xlX3BvbGwoZXZl
bnRzKSB8IEVQT0xMRVJSIHwgRVBPTExIVVAgfAotCQkgICAgICAgKGV2ZW50cyAmIEVQT0xM
RVhDTFVTSVZFKTsKKwlpb19yZXFfc2V0X3JlZmNvdW50KHJlcSk7CisJcG9sbC0+ZXZlbnRz
ID0gaW9fcG9sbF9wYXJzZV9ldmVudHMoc3FlLCBmbGFncyk7CiAJcmV0dXJuIDA7CiB9CiAK
LXN0YXRpYyBpbnQgaW9fcG9sbF9hZGQoc3RydWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMg
aW50IGlvX3BvbGxfYWRkKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNz
dWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX3BvbGxfaW9jYiAqcG9sbCA9ICZyZXEtPnBvbGw7
Ci0Jc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsKIAlzdHJ1Y3QgaW9fcG9s
bF90YWJsZSBpcHQ7Ci0JX19wb2xsX3QgbWFzazsKKwlpbnQgcmV0OwogCiAJaXB0LnB0Ll9x
cHJvYyA9IGlvX3BvbGxfcXVldWVfcHJvYzsKIAotCW1hc2sgPSBfX2lvX2FybV9wb2xsX2hh
bmRsZXIocmVxLCAmcmVxLT5wb2xsLCAmaXB0LCBwb2xsLT5ldmVudHMsCi0JCQkJCWlvX3Bv
bGxfd2FrZSk7CisJcmV0ID0gX19pb19hcm1fcG9sbF9oYW5kbGVyKHJlcSwgJnJlcS0+cG9s
bCwgJmlwdCwgcG9sbC0+ZXZlbnRzKTsKKwlpZiAoIXJldCAmJiBpcHQuZXJyb3IpCisJCXJl
cV9zZXRfZmFpbChyZXEpOworCXJldCA9IHJldCA/OiBpcHQuZXJyb3I7CisJaWYgKHJldCkK
KwkJX19pb19yZXFfY29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCAwKTsKKwlyZXR1
cm4gMDsKK30KIAotCWlmIChtYXNrKSB7IC8qIG5vIGFzeW5jLCB3ZSdkIHN0b2xlbiBpdCAq
LwotCQlpcHQuZXJyb3IgPSAwOwotCQlpb19wb2xsX2NvbXBsZXRlKHJlcSwgbWFzaywgMCk7
CitzdGF0aWMgaW50IGlvX3BvbGxfdXBkYXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNp
Z25lZCBpbnQgaXNzdWVfZmxhZ3MpCit7CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSBy
ZXEtPmN0eDsKKwlzdHJ1Y3QgaW9fa2lvY2IgKnByZXE7CisJaW50IHJldDIsIHJldCA9IDA7
CisKKwlzcGluX2xvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlwcmVxID0gaW9fcG9s
bF9maW5kKGN0eCwgcmVxLT5wb2xsX3VwZGF0ZS5vbGRfdXNlcl9kYXRhLCB0cnVlKTsKKwlp
ZiAoIXByZXEgfHwgIWlvX3BvbGxfZGlzYXJtKHByZXEpKSB7CisJCXNwaW5fdW5sb2NrKCZj
dHgtPmNvbXBsZXRpb25fbG9jayk7CisJCXJldCA9IHByZXEgPyAtRUFMUkVBRFkgOiAtRU5P
RU5UOworCQlnb3RvIG91dDsKIAl9Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRp
b25fbG9jayk7CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKIAotCWlm
IChtYXNrKSB7Ci0JCWlvX2NxcmluZ19ldl9wb3N0ZWQoY3R4KTsKLQkJaW9fcHV0X3JlcShy
ZXEpOworCWlmIChyZXEtPnBvbGxfdXBkYXRlLnVwZGF0ZV9ldmVudHMgfHwgcmVxLT5wb2xs
X3VwZGF0ZS51cGRhdGVfdXNlcl9kYXRhKSB7CisJCS8qIG9ubHkgbWFzayBvbmUgZXZlbnQg
ZmxhZ3MsIGtlZXAgYmVoYXZpb3IgZmxhZ3MgKi8KKwkJaWYgKHJlcS0+cG9sbF91cGRhdGUu
dXBkYXRlX2V2ZW50cykgeworCQkJcHJlcS0+cG9sbC5ldmVudHMgJj0gfjB4ZmZmZjsKKwkJ
CXByZXEtPnBvbGwuZXZlbnRzIHw9IHJlcS0+cG9sbF91cGRhdGUuZXZlbnRzICYgMHhmZmZm
OworCQkJcHJlcS0+cG9sbC5ldmVudHMgfD0gSU9fUE9MTF9VTk1BU0s7CisJCX0KKwkJaWYg
KHJlcS0+cG9sbF91cGRhdGUudXBkYXRlX3VzZXJfZGF0YSkKKwkJCXByZXEtPnVzZXJfZGF0
YSA9IHJlcS0+cG9sbF91cGRhdGUubmV3X3VzZXJfZGF0YTsKKworCQlyZXQyID0gaW9fcG9s
bF9hZGQocHJlcSwgaXNzdWVfZmxhZ3MpOworCQkvKiBzdWNjZXNzZnVsbHkgdXBkYXRlZCwg
ZG9uJ3QgY29tcGxldGUgcG9sbCByZXF1ZXN0ICovCisJCWlmICghcmV0MikKKwkJCWdvdG8g
b3V0OwogCX0KLQlyZXR1cm4gaXB0LmVycm9yOworCXJlcV9zZXRfZmFpbChwcmVxKTsKKwlp
b19yZXFfY29tcGxldGUocHJlcSwgLUVDQU5DRUxFRCk7CitvdXQ6CisJaWYgKHJldCA8IDAp
CisJCXJlcV9zZXRfZmFpbChyZXEpOworCS8qIGNvbXBsZXRlIHVwZGF0ZSByZXF1ZXN0LCB3
ZSdyZSBkb25lIHdpdGggaXQgKi8KKwlpb19yZXFfY29tcGxldGUocmVxLCByZXQpOworCXJl
dHVybiAwOworfQorCitzdGF0aWMgdm9pZCBpb19yZXFfdGFza190aW1lb3V0KHN0cnVjdCBp
b19raW9jYiAqcmVxLCBib29sICpsb2NrZWQpCit7CisJcmVxX3NldF9mYWlsKHJlcSk7CisJ
aW9fcmVxX2NvbXBsZXRlX3Bvc3QocmVxLCAtRVRJTUUsIDApOwogfQogCiBzdGF0aWMgZW51
bSBocnRpbWVyX3Jlc3RhcnQgaW9fdGltZW91dF9mbihzdHJ1Y3QgaHJ0aW1lciAqdGltZXIp
CkBAIC01NDk2LDg4ICs1ODU2LDE4MiBAQCBzdGF0aWMgZW51bSBocnRpbWVyX3Jlc3RhcnQg
aW9fdGltZW91dF9mbihzdHJ1Y3QgaHJ0aW1lciAqdGltZXIpCiAJc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHggPSByZXEtPmN0eDsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCi0Jc3Bpbl9s
b2NrX2lycXNhdmUoJmN0eC0+Y29tcGxldGlvbl9sb2NrLCBmbGFncyk7CisJc3Bpbl9sb2Nr
X2lycXNhdmUoJmN0eC0+dGltZW91dF9sb2NrLCBmbGFncyk7CiAJbGlzdF9kZWxfaW5pdCgm
cmVxLT50aW1lb3V0Lmxpc3QpOwogCWF0b21pY19zZXQoJnJlcS0+Y3R4LT5jcV90aW1lb3V0
cywKIAkJYXRvbWljX3JlYWQoJnJlcS0+Y3R4LT5jcV90aW1lb3V0cykgKyAxKTsKKwlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZjdHgtPnRpbWVvdXRfbG9jaywgZmxhZ3MpOwogCi0JaW9f
Y3FyaW5nX2ZpbGxfZXZlbnQocmVxLCAtRVRJTUUpOwotCWlvX2NvbW1pdF9jcXJpbmcoY3R4
KTsKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdHgtPmNvbXBsZXRpb25fbG9jaywgZmxh
Z3MpOwotCi0JaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOwotCXJlcV9zZXRfZmFpbF9saW5r
cyhyZXEpOwotCWlvX3B1dF9yZXEocmVxKTsKKwlyZXEtPmlvX3Rhc2tfd29yay5mdW5jID0g
aW9fcmVxX3Rhc2tfdGltZW91dDsKKwlpb19yZXFfdGFza193b3JrX2FkZChyZXEpOwogCXJl
dHVybiBIUlRJTUVSX05PUkVTVEFSVDsKIH0KIAotc3RhdGljIGludCBfX2lvX3RpbWVvdXRf
Y2FuY2VsKHN0cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIHN0cnVjdCBpb19raW9jYiAq
aW9fdGltZW91dF9leHRyYWN0KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAorCQkJCQkgICBf
X3U2NCB1c2VyX2RhdGEpCisJX19tdXN0X2hvbGQoJmN0eC0+dGltZW91dF9sb2NrKQogewot
CXN0cnVjdCBpb190aW1lb3V0X2RhdGEgKmlvID0gcmVxLT5hc3luY19kYXRhOwotCWludCBy
ZXQ7CisJc3RydWN0IGlvX3RpbWVvdXRfZGF0YSAqaW87CisJc3RydWN0IGlvX2tpb2NiICpy
ZXE7CisJYm9vbCBmb3VuZCA9IGZhbHNlOwogCi0JcmV0ID0gaHJ0aW1lcl90cnlfdG9fY2Fu
Y2VsKCZpby0+dGltZXIpOwotCWlmIChyZXQgPT0gLTEpCi0JCXJldHVybiAtRUFMUkVBRFk7
CisJbGlzdF9mb3JfZWFjaF9lbnRyeShyZXEsICZjdHgtPnRpbWVvdXRfbGlzdCwgdGltZW91
dC5saXN0KSB7CisJCWZvdW5kID0gdXNlcl9kYXRhID09IHJlcS0+dXNlcl9kYXRhOworCQlp
ZiAoZm91bmQpCisJCQlicmVhazsKKwl9CisJaWYgKCFmb3VuZCkKKwkJcmV0dXJuIEVSUl9Q
VFIoLUVOT0VOVCk7CisKKwlpbyA9IHJlcS0+YXN5bmNfZGF0YTsKKwlpZiAoaHJ0aW1lcl90
cnlfdG9fY2FuY2VsKCZpby0+dGltZXIpID09IC0xKQorCQlyZXR1cm4gRVJSX1BUUigtRUFM
UkVBRFkpOwogCWxpc3RfZGVsX2luaXQoJnJlcS0+dGltZW91dC5saXN0KTsKKwlyZXR1cm4g
cmVxOworfQorCitzdGF0aWMgaW50IGlvX3RpbWVvdXRfY2FuY2VsKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4LCBfX3U2NCB1c2VyX2RhdGEpCisJX19tdXN0X2hvbGQoJmN0eC0+Y29tcGxl
dGlvbl9sb2NrKQorCV9fbXVzdF9ob2xkKCZjdHgtPnRpbWVvdXRfbG9jaykKK3sKKwlzdHJ1
Y3QgaW9fa2lvY2IgKnJlcSA9IGlvX3RpbWVvdXRfZXh0cmFjdChjdHgsIHVzZXJfZGF0YSk7
CiAKLQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQlpb19jcXJpbmdfZmlsbF9ldmVudChy
ZXEsIC1FQ0FOQ0VMRUQpOwotCWlvX3B1dF9yZXFfZGVmZXJyZWQocmVxLCAxKTsKKwlpZiAo
SVNfRVJSKHJlcSkpCisJCXJldHVybiBQVFJfRVJSKHJlcSk7CisKKwlyZXFfc2V0X2ZhaWwo
cmVxKTsKKwlpb19maWxsX2NxZV9yZXEocmVxLCAtRUNBTkNFTEVELCAwKTsKKwlpb19wdXRf
cmVxX2RlZmVycmVkKHJlcSk7CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW9fdGlt
ZW91dF9jYW5jZWwoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIF9fdTY0IHVzZXJfZGF0YSkK
K3N0YXRpYyBjbG9ja2lkX3QgaW9fdGltZW91dF9nZXRfY2xvY2soc3RydWN0IGlvX3RpbWVv
dXRfZGF0YSAqZGF0YSkKK3sKKwlzd2l0Y2ggKGRhdGEtPmZsYWdzICYgSU9SSU5HX1RJTUVP
VVRfQ0xPQ0tfTUFTSykgeworCWNhc2UgSU9SSU5HX1RJTUVPVVRfQk9PVFRJTUU6CisJCXJl
dHVybiBDTE9DS19CT09UVElNRTsKKwljYXNlIElPUklOR19USU1FT1VUX1JFQUxUSU1FOgor
CQlyZXR1cm4gQ0xPQ0tfUkVBTFRJTUU7CisJZGVmYXVsdDoKKwkJLyogY2FuJ3QgaGFwcGVu
LCB2ZXR0ZWQgYXQgcHJlcCB0aW1lICovCisJCVdBUk5fT05fT05DRSgxKTsKKwkJZmFsbHRo
cm91Z2g7CisJY2FzZSAwOgorCQlyZXR1cm4gQ0xPQ0tfTU9OT1RPTklDOworCX0KK30KKwor
c3RhdGljIGludCBpb19saW5rZWRfdGltZW91dF91cGRhdGUoc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHgsIF9fdTY0IHVzZXJfZGF0YSwKKwkJCQkgICAgc3RydWN0IHRpbWVzcGVjNjQgKnRz
LCBlbnVtIGhydGltZXJfbW9kZSBtb2RlKQorCV9fbXVzdF9ob2xkKCZjdHgtPnRpbWVvdXRf
bG9jaykKIHsKKwlzdHJ1Y3QgaW9fdGltZW91dF9kYXRhICppbzsKIAlzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcTsKLQlpbnQgcmV0ID0gLUVOT0VOVDsKKwlib29sIGZvdW5kID0gZmFsc2U7CiAK
LQlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlcSwgJmN0eC0+dGltZW91dF9saXN0LCB0aW1lb3V0
Lmxpc3QpIHsKLQkJaWYgKHVzZXJfZGF0YSA9PSByZXEtPnVzZXJfZGF0YSkgewotCQkJcmV0
ID0gMDsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlcSwgJmN0eC0+bHRpbWVvdXRfbGlzdCwg
dGltZW91dC5saXN0KSB7CisJCWZvdW5kID0gdXNlcl9kYXRhID09IHJlcS0+dXNlcl9kYXRh
OworCQlpZiAoZm91bmQpCiAJCQlicmVhazsKLQkJfQogCX0KKwlpZiAoIWZvdW5kKQorCQly
ZXR1cm4gLUVOT0VOVDsKIAotCWlmIChyZXQgPT0gLUVOT0VOVCkKLQkJcmV0dXJuIHJldDsK
KwlpbyA9IHJlcS0+YXN5bmNfZGF0YTsKKwlpZiAoaHJ0aW1lcl90cnlfdG9fY2FuY2VsKCZp
by0+dGltZXIpID09IC0xKQorCQlyZXR1cm4gLUVBTFJFQURZOworCWhydGltZXJfaW5pdCgm
aW8tPnRpbWVyLCBpb190aW1lb3V0X2dldF9jbG9jayhpbyksIG1vZGUpOworCWlvLT50aW1l
ci5mdW5jdGlvbiA9IGlvX2xpbmtfdGltZW91dF9mbjsKKwlocnRpbWVyX3N0YXJ0KCZpby0+
dGltZXIsIHRpbWVzcGVjNjRfdG9fa3RpbWUoKnRzKSwgbW9kZSk7CisJcmV0dXJuIDA7Cit9
CiAKLQlyZXR1cm4gX19pb190aW1lb3V0X2NhbmNlbChyZXEpOworc3RhdGljIGludCBpb190
aW1lb3V0X3VwZGF0ZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgX191NjQgdXNlcl9kYXRh
LAorCQkJICAgICBzdHJ1Y3QgdGltZXNwZWM2NCAqdHMsIGVudW0gaHJ0aW1lcl9tb2RlIG1v
ZGUpCisJX19tdXN0X2hvbGQoJmN0eC0+dGltZW91dF9sb2NrKQoreworCXN0cnVjdCBpb19r
aW9jYiAqcmVxID0gaW9fdGltZW91dF9leHRyYWN0KGN0eCwgdXNlcl9kYXRhKTsKKwlzdHJ1
Y3QgaW9fdGltZW91dF9kYXRhICpkYXRhOworCisJaWYgKElTX0VSUihyZXEpKQorCQlyZXR1
cm4gUFRSX0VSUihyZXEpOworCisJcmVxLT50aW1lb3V0Lm9mZiA9IDA7IC8qIG5vc2VxICov
CisJZGF0YSA9IHJlcS0+YXN5bmNfZGF0YTsKKwlsaXN0X2FkZF90YWlsKCZyZXEtPnRpbWVv
dXQubGlzdCwgJmN0eC0+dGltZW91dF9saXN0KTsKKwlocnRpbWVyX2luaXQoJmRhdGEtPnRp
bWVyLCBpb190aW1lb3V0X2dldF9jbG9jayhkYXRhKSwgbW9kZSk7CisJZGF0YS0+dGltZXIu
ZnVuY3Rpb24gPSBpb190aW1lb3V0X2ZuOworCWhydGltZXJfc3RhcnQoJmRhdGEtPnRpbWVy
LCB0aW1lc3BlYzY0X3RvX2t0aW1lKCp0cyksIG1vZGUpOworCXJldHVybiAwOwogfQogCiBz
dGF0aWMgaW50IGlvX3RpbWVvdXRfcmVtb3ZlX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEs
CiAJCQkJICBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCiB7CisJc3RydWN0IGlv
X3RpbWVvdXRfcmVtICp0ciA9ICZyZXEtPnRpbWVvdXRfcmVtOworCiAJaWYgKHVubGlrZWx5
KHJlcS0+Y3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9JT1BPTEwpKQogCQlyZXR1cm4gLUVJ
TlZBTDsKIAlpZiAodW5saWtlbHkocmVxLT5mbGFncyAmIChSRVFfRl9GSVhFRF9GSUxFIHwg
UkVRX0ZfQlVGRkVSX1NFTEVDVCkpKQogCQlyZXR1cm4gLUVJTlZBTDsKLQlpZiAoc3FlLT5p
b3ByaW8gfHwgc3FlLT5idWZfaW5kZXggfHwgc3FlLT5sZW4gfHwgc3FlLT50aW1lb3V0X2Zs
YWdzIHx8Ci0JICAgIHNxZS0+c3BsaWNlX2ZkX2luKQorCWlmIChzcWUtPmlvcHJpbyB8fCBz
cWUtPmJ1Zl9pbmRleCB8fCBzcWUtPmxlbiB8fCBzcWUtPnNwbGljZV9mZF9pbikKKwkJcmV0
dXJuIC1FSU5WQUw7CisKKwl0ci0+bHRpbWVvdXQgPSBmYWxzZTsKKwl0ci0+YWRkciA9IFJF
QURfT05DRShzcWUtPmFkZHIpOworCXRyLT5mbGFncyA9IFJFQURfT05DRShzcWUtPnRpbWVv
dXRfZmxhZ3MpOworCWlmICh0ci0+ZmxhZ3MgJiBJT1JJTkdfVElNRU9VVF9VUERBVEVfTUFT
SykgeworCQlpZiAoaHdlaWdodDMyKHRyLT5mbGFncyAmIElPUklOR19USU1FT1VUX0NMT0NL
X01BU0spID4gMSkKKwkJCXJldHVybiAtRUlOVkFMOworCQlpZiAodHItPmZsYWdzICYgSU9S
SU5HX0xJTktfVElNRU9VVF9VUERBVEUpCisJCQl0ci0+bHRpbWVvdXQgPSB0cnVlOworCQlp
ZiAodHItPmZsYWdzICYgfihJT1JJTkdfVElNRU9VVF9VUERBVEVfTUFTS3xJT1JJTkdfVElN
RU9VVF9BQlMpKQorCQkJcmV0dXJuIC1FSU5WQUw7CisJCWlmIChnZXRfdGltZXNwZWM2NCgm
dHItPnRzLCB1NjRfdG9fdXNlcl9wdHIoc3FlLT5hZGRyMikpKQorCQkJcmV0dXJuIC1FRkFV
TFQ7CisJfSBlbHNlIGlmICh0ci0+ZmxhZ3MpIHsKKwkJLyogdGltZW91dCByZW1vdmFsIGRv
ZXNuJ3Qgc3VwcG9ydCBmbGFncyAqLwogCQlyZXR1cm4gLUVJTlZBTDsKKwl9CiAKLQlyZXEt
PnRpbWVvdXRfcmVtLmFkZHIgPSBSRUFEX09OQ0Uoc3FlLT5hZGRyKTsKIAlyZXR1cm4gMDsK
IH0KIAorc3RhdGljIGlubGluZSBlbnVtIGhydGltZXJfbW9kZSBpb190cmFuc2xhdGVfdGlt
ZW91dF9tb2RlKHVuc2lnbmVkIGludCBmbGFncykKK3sKKwlyZXR1cm4gKGZsYWdzICYgSU9S
SU5HX1RJTUVPVVRfQUJTKSA/IEhSVElNRVJfTU9ERV9BQlMKKwkJCQkJICAgIDogSFJUSU1F
Ul9NT0RFX1JFTDsKK30KKwogLyoKICAqIFJlbW92ZSBvciB1cGRhdGUgYW4gZXhpc3Rpbmcg
dGltZW91dCBjb21tYW5kCiAgKi8KLXN0YXRpYyBpbnQgaW9fdGltZW91dF9yZW1vdmUoc3Ry
dWN0IGlvX2tpb2NiICpyZXEpCitzdGF0aWMgaW50IGlvX3RpbWVvdXRfcmVtb3ZlKHN0cnVj
dCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CisJc3RydWN0
IGlvX3RpbWVvdXRfcmVtICp0ciA9ICZyZXEtPnRpbWVvdXRfcmVtOwogCXN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CiAJaW50IHJldDsKIAotCXNwaW5fbG9ja19pcnEo
JmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQlyZXQgPSBpb190aW1lb3V0X2NhbmNlbChjdHgs
IHJlcS0+dGltZW91dF9yZW0uYWRkcik7CisJaWYgKCEocmVxLT50aW1lb3V0X3JlbS5mbGFn
cyAmIElPUklOR19USU1FT1VUX1VQREFURSkpIHsKKwkJc3Bpbl9sb2NrKCZjdHgtPmNvbXBs
ZXRpb25fbG9jayk7CisJCXNwaW5fbG9ja19pcnEoJmN0eC0+dGltZW91dF9sb2NrKTsKKwkJ
cmV0ID0gaW9fdGltZW91dF9jYW5jZWwoY3R4LCB0ci0+YWRkcik7CisJCXNwaW5fdW5sb2Nr
X2lycSgmY3R4LT50aW1lb3V0X2xvY2spOworCQlzcGluX3VubG9jaygmY3R4LT5jb21wbGV0
aW9uX2xvY2spOworCX0gZWxzZSB7CisJCWVudW0gaHJ0aW1lcl9tb2RlIG1vZGUgPSBpb190
cmFuc2xhdGVfdGltZW91dF9tb2RlKHRyLT5mbGFncyk7CisKKwkJc3Bpbl9sb2NrX2lycSgm
Y3R4LT50aW1lb3V0X2xvY2spOworCQlpZiAodHItPmx0aW1lb3V0KQorCQkJcmV0ID0gaW9f
bGlua2VkX3RpbWVvdXRfdXBkYXRlKGN0eCwgdHItPmFkZHIsICZ0ci0+dHMsIG1vZGUpOwor
CQllbHNlCisJCQlyZXQgPSBpb190aW1lb3V0X3VwZGF0ZShjdHgsIHRyLT5hZGRyLCAmdHIt
PnRzLCBtb2RlKTsKKwkJc3Bpbl91bmxvY2tfaXJxKCZjdHgtPnRpbWVvdXRfbG9jayk7CisJ
fQogCi0JaW9fY3FyaW5nX2ZpbGxfZXZlbnQocmVxLCByZXQpOwotCWlvX2NvbW1pdF9jcXJp
bmcoY3R4KTsKLQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQlp
b19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7CiAJaWYgKHJldCA8IDApCi0JCXJlcV9zZXRfZmFp
bF9saW5rcyhyZXEpOwotCWlvX3B1dF9yZXEocmVxKTsKKwkJcmVxX3NldF9mYWlsKHJlcSk7
CisJaW9fcmVxX2NvbXBsZXRlX3Bvc3QocmVxLCByZXQsIDApOwogCXJldHVybiAwOwogfQog
CkBAIC01NTk2LDM4ICs2MDUwLDUyIEBAIHN0YXRpYyBpbnQgaW9fdGltZW91dF9wcmVwKHN0
cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUsCiAJ
aWYgKG9mZiAmJiBpc190aW1lb3V0X2xpbmspCiAJCXJldHVybiAtRUlOVkFMOwogCWZsYWdz
ID0gUkVBRF9PTkNFKHNxZS0+dGltZW91dF9mbGFncyk7Ci0JaWYgKGZsYWdzICYgfklPUklO
R19USU1FT1VUX0FCUykKKwlpZiAoZmxhZ3MgJiB+KElPUklOR19USU1FT1VUX0FCUyB8IElP
UklOR19USU1FT1VUX0NMT0NLX01BU0spKQorCQlyZXR1cm4gLUVJTlZBTDsKKwkvKiBtb3Jl
IHRoYW4gb25lIGNsb2NrIHNwZWNpZmllZCBpcyBpbnZhbGlkLCBvYnZpb3VzbHkgKi8KKwlp
ZiAoaHdlaWdodDMyKGZsYWdzICYgSU9SSU5HX1RJTUVPVVRfQ0xPQ0tfTUFTSykgPiAxKQog
CQlyZXR1cm4gLUVJTlZBTDsKIAorCUlOSVRfTElTVF9IRUFEKCZyZXEtPnRpbWVvdXQubGlz
dCk7CiAJcmVxLT50aW1lb3V0Lm9mZiA9IG9mZjsKKwlpZiAodW5saWtlbHkob2ZmICYmICFy
ZXEtPmN0eC0+b2ZmX3RpbWVvdXRfdXNlZCkpCisJCXJlcS0+Y3R4LT5vZmZfdGltZW91dF91
c2VkID0gdHJ1ZTsKIAogCWlmICghcmVxLT5hc3luY19kYXRhICYmIGlvX2FsbG9jX2FzeW5j
X2RhdGEocmVxKSkKIAkJcmV0dXJuIC1FTk9NRU07CiAKIAlkYXRhID0gcmVxLT5hc3luY19k
YXRhOwogCWRhdGEtPnJlcSA9IHJlcTsKKwlkYXRhLT5mbGFncyA9IGZsYWdzOwogCiAJaWYg
KGdldF90aW1lc3BlYzY0KCZkYXRhLT50cywgdTY0X3RvX3VzZXJfcHRyKHNxZS0+YWRkcikp
KQogCQlyZXR1cm4gLUVGQVVMVDsKIAotCWlmIChmbGFncyAmIElPUklOR19USU1FT1VUX0FC
UykKLQkJZGF0YS0+bW9kZSA9IEhSVElNRVJfTU9ERV9BQlM7Ci0JZWxzZQotCQlkYXRhLT5t
b2RlID0gSFJUSU1FUl9NT0RFX1JFTDsKLQogCUlOSVRfTElTVF9IRUFEKCZyZXEtPnRpbWVv
dXQubGlzdCk7Ci0JaHJ0aW1lcl9pbml0KCZkYXRhLT50aW1lciwgQ0xPQ0tfTU9OT1RPTklD
LCBkYXRhLT5tb2RlKTsKKwlkYXRhLT5tb2RlID0gaW9fdHJhbnNsYXRlX3RpbWVvdXRfbW9k
ZShmbGFncyk7CisJaHJ0aW1lcl9pbml0KCZkYXRhLT50aW1lciwgaW9fdGltZW91dF9nZXRf
Y2xvY2soZGF0YSksIGRhdGEtPm1vZGUpOworCisJaWYgKGlzX3RpbWVvdXRfbGluaykgewor
CQlzdHJ1Y3QgaW9fc3VibWl0X2xpbmsgKmxpbmsgPSAmcmVxLT5jdHgtPnN1Ym1pdF9zdGF0
ZS5saW5rOworCisJCWlmICghbGluay0+aGVhZCkKKwkJCXJldHVybiAtRUlOVkFMOworCQlp
ZiAobGluay0+bGFzdC0+b3Bjb2RlID09IElPUklOR19PUF9MSU5LX1RJTUVPVVQpCisJCQly
ZXR1cm4gLUVJTlZBTDsKKwkJcmVxLT50aW1lb3V0LmhlYWQgPSBsaW5rLT5sYXN0OworCQls
aW5rLT5sYXN0LT5mbGFncyB8PSBSRVFfRl9BUk1fTFRJTUVPVVQ7CisJfQogCXJldHVybiAw
OwogfQogCi1zdGF0aWMgaW50IGlvX3RpbWVvdXQoc3RydWN0IGlvX2tpb2NiICpyZXEpCitz
dGF0aWMgaW50IGlvX3RpbWVvdXQoc3RydWN0IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGlu
dCBpc3N1ZV9mbGFncykKIHsKIAlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4
OwogCXN0cnVjdCBpb190aW1lb3V0X2RhdGEgKmRhdGEgPSByZXEtPmFzeW5jX2RhdGE7CiAJ
c3RydWN0IGxpc3RfaGVhZCAqZW50cnk7CiAJdTMyIHRhaWwsIG9mZiA9IHJlcS0+dGltZW91
dC5vZmY7CiAKLQlzcGluX2xvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJc3Bp
bl9sb2NrX2lycSgmY3R4LT50aW1lb3V0X2xvY2spOwogCiAJLyoKIAkgKiBzcWUtPm9mZiBo
b2xkcyBob3cgbWFueSBldmVudHMgdGhhdCBuZWVkIHRvIG9jY3VyIGZvciB0aGlzCkBAIC01
NjY2LDIzICs2MTM0LDM0IEBAIHN0YXRpYyBpbnQgaW9fdGltZW91dChzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSkKIAlsaXN0X2FkZCgmcmVxLT50aW1lb3V0Lmxpc3QsIGVudHJ5KTsKIAlkYXRh
LT50aW1lci5mdW5jdGlvbiA9IGlvX3RpbWVvdXRfZm47CiAJaHJ0aW1lcl9zdGFydCgmZGF0
YS0+dGltZXIsIHRpbWVzcGVjNjRfdG9fa3RpbWUoZGF0YS0+dHMpLCBkYXRhLT5tb2RlKTsK
LQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlzcGluX3VubG9j
a19pcnEoJmN0eC0+dGltZW91dF9sb2NrKTsKIAlyZXR1cm4gMDsKIH0KIAorc3RydWN0IGlv
X2NhbmNlbF9kYXRhIHsKKwlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eDsKKwl1NjQgdXNlcl9k
YXRhOworfTsKKwogc3RhdGljIGJvb2wgaW9fY2FuY2VsX2NiKHN0cnVjdCBpb193cV93b3Jr
ICp3b3JrLCB2b2lkICpkYXRhKQogewogCXN0cnVjdCBpb19raW9jYiAqcmVxID0gY29udGFp
bmVyX29mKHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29yayk7CisJc3RydWN0IGlvX2NhbmNl
bF9kYXRhICpjZCA9IGRhdGE7CiAKLQlyZXR1cm4gcmVxLT51c2VyX2RhdGEgPT0gKHVuc2ln
bmVkIGxvbmcpIGRhdGE7CisJcmV0dXJuIHJlcS0+Y3R4ID09IGNkLT5jdHggJiYgcmVxLT51
c2VyX2RhdGEgPT0gY2QtPnVzZXJfZGF0YTsKIH0KIAotc3RhdGljIGludCBpb19hc3luY19j
YW5jZWxfb25lKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB2b2lkICpzcWVfYWRkcikKK3N0
YXRpYyBpbnQgaW9fYXN5bmNfY2FuY2VsX29uZShzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0
eCwgdTY0IHVzZXJfZGF0YSwKKwkJCSAgICAgICBzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkK
IHsKKwlzdHJ1Y3QgaW9fY2FuY2VsX2RhdGEgZGF0YSA9IHsgLmN0eCA9IGN0eCwgLnVzZXJf
ZGF0YSA9IHVzZXJfZGF0YSwgfTsKIAllbnVtIGlvX3dxX2NhbmNlbCBjYW5jZWxfcmV0Owog
CWludCByZXQgPSAwOwogCi0JY2FuY2VsX3JldCA9IGlvX3dxX2NhbmNlbF9jYihjdHgtPmlv
X3dxLCBpb19jYW5jZWxfY2IsIHNxZV9hZGRyLCBmYWxzZSk7CisJaWYgKCF0Y3R4IHx8ICF0
Y3R4LT5pb193cSkKKwkJcmV0dXJuIC1FTk9FTlQ7CisKKwljYW5jZWxfcmV0ID0gaW9fd3Ff
Y2FuY2VsX2NiKHRjdHgtPmlvX3dxLCBpb19jYW5jZWxfY2IsICZkYXRhLCBmYWxzZSk7CiAJ
c3dpdGNoIChjYW5jZWxfcmV0KSB7CiAJY2FzZSBJT19XUV9DQU5DRUxfT0s6CiAJCXJldCA9
IDA7CkBAIC01Njk4LDM1ICs2MTc3LDI3IEBAIHN0YXRpYyBpbnQgaW9fYXN5bmNfY2FuY2Vs
X29uZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCAqc3FlX2FkZHIpCiAJcmV0dXJu
IHJldDsKIH0KIAotc3RhdGljIHZvaWQgaW9fYXN5bmNfZmluZF9hbmRfY2FuY2VsKHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4LAotCQkJCSAgICAgc3RydWN0IGlvX2tpb2NiICpyZXEsIF9f
dTY0IHNxZV9hZGRyLAotCQkJCSAgICAgaW50IHN1Y2Nlc3NfcmV0KQorc3RhdGljIGludCBp
b190cnlfY2FuY2VsX3VzZXJkYXRhKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1NjQgc3FlX2Fk
ZHIpCiB7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKKwlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCA9IHJlcS0+Y3R4OwogCWludCByZXQ7CiAKLQlyZXQgPSBpb19hc3luY19jYW5jZWxfb25l
KGN0eCwgKHZvaWQgKikgKHVuc2lnbmVkIGxvbmcpIHNxZV9hZGRyKTsKLQlpZiAocmV0ICE9
IC1FTk9FTlQpIHsKLQkJc3Bpbl9sb2NrX2lycXNhdmUoJmN0eC0+Y29tcGxldGlvbl9sb2Nr
LCBmbGFncyk7Ci0JCWdvdG8gZG9uZTsKLQl9CisJV0FSTl9PTl9PTkNFKCFpb193cV9jdXJy
ZW50X2lzX3dvcmtlcigpICYmIHJlcS0+dGFzayAhPSBjdXJyZW50KTsKIAotCXNwaW5fbG9j
a19pcnFzYXZlKCZjdHgtPmNvbXBsZXRpb25fbG9jaywgZmxhZ3MpOwotCXJldCA9IGlvX3Rp
bWVvdXRfY2FuY2VsKGN0eCwgc3FlX2FkZHIpOworCXJldCA9IGlvX2FzeW5jX2NhbmNlbF9v
bmUocmVxLT50YXNrLT5pb191cmluZywgc3FlX2FkZHIsIGN0eCk7CiAJaWYgKHJldCAhPSAt
RU5PRU5UKQotCQlnb3RvIGRvbmU7Ci0JcmV0ID0gaW9fcG9sbF9jYW5jZWwoY3R4LCBzcWVf
YWRkcik7Ci1kb25lOgotCWlmICghcmV0KQotCQlyZXQgPSBzdWNjZXNzX3JldDsKLQlpb19j
cXJpbmdfZmlsbF9ldmVudChyZXEsIHJldCk7Ci0JaW9fY29tbWl0X2NxcmluZyhjdHgpOwot
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmN0eC0+Y29tcGxldGlvbl9sb2NrLCBmbGFncyk7
Ci0JaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOworCQlyZXR1cm4gcmV0OwogCi0JaWYgKHJl
dCA8IDApCi0JCXJlcV9zZXRfZmFpbF9saW5rcyhyZXEpOwotCWlvX3B1dF9yZXEocmVxKTsK
KwlzcGluX2xvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlzcGluX2xvY2tfaXJxKCZj
dHgtPnRpbWVvdXRfbG9jayk7CisJcmV0ID0gaW9fdGltZW91dF9jYW5jZWwoY3R4LCBzcWVf
YWRkcik7CisJc3Bpbl91bmxvY2tfaXJxKCZjdHgtPnRpbWVvdXRfbG9jayk7CisJaWYgKHJl
dCAhPSAtRU5PRU5UKQorCQlnb3RvIG91dDsKKwlyZXQgPSBpb19wb2xsX2NhbmNlbChjdHgs
IHNxZV9hZGRyLCBmYWxzZSk7CitvdXQ6CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlv
bl9sb2NrKTsKKwlyZXR1cm4gcmV0OwogfQogCiBzdGF0aWMgaW50IGlvX2FzeW5jX2NhbmNl
bF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLApAQCAtNTc0NCw1MiArNjIxNSw3MiBAQCBz
dGF0aWMgaW50IGlvX2FzeW5jX2NhbmNlbF9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLAog
CXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlvX2FzeW5jX2NhbmNlbChzdHJ1Y3QgaW9f
a2lvY2IgKnJlcSkKK3N0YXRpYyBpbnQgaW9fYXN5bmNfY2FuY2VsKHN0cnVjdCBpb19raW9j
YiAqcmVxLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHggPSByZXEtPmN0eDsKKwl1NjQgc3FlX2FkZHIgPSByZXEtPmNhbmNlbC5hZGRy
OworCXN0cnVjdCBpb190Y3R4X25vZGUgKm5vZGU7CisJaW50IHJldDsKKworCXJldCA9IGlv
X3RyeV9jYW5jZWxfdXNlcmRhdGEocmVxLCBzcWVfYWRkcik7CisJaWYgKHJldCAhPSAtRU5P
RU5UKQorCQlnb3RvIGRvbmU7CisKKwkvKiBzbG93IHBhdGgsIHRyeSBhbGwgaW8td3EncyAq
LworCWlvX3Jpbmdfc3VibWl0X2xvY2soY3R4LCAhKGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdf
Rl9OT05CTE9DSykpOworCXJldCA9IC1FTk9FTlQ7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShu
b2RlLCAmY3R4LT50Y3R4X2xpc3QsIGN0eF9ub2RlKSB7CisJCXN0cnVjdCBpb191cmluZ190
YXNrICp0Y3R4ID0gbm9kZS0+dGFzay0+aW9fdXJpbmc7CiAKLQlpb19hc3luY19maW5kX2Fu
ZF9jYW5jZWwoY3R4LCByZXEsIHJlcS0+Y2FuY2VsLmFkZHIsIDApOworCQlyZXQgPSBpb19h
c3luY19jYW5jZWxfb25lKHRjdHgsIHJlcS0+Y2FuY2VsLmFkZHIsIGN0eCk7CisJCWlmIChy
ZXQgIT0gLUVOT0VOVCkKKwkJCWJyZWFrOworCX0KKwlpb19yaW5nX3N1Ym1pdF91bmxvY2so
Y3R4LCAhKGlzc3VlX2ZsYWdzICYgSU9fVVJJTkdfRl9OT05CTE9DSykpOworZG9uZToKKwlp
ZiAocmV0IDwgMCkKKwkJcmVxX3NldF9mYWlsKHJlcSk7CisJaW9fcmVxX2NvbXBsZXRlX3Bv
c3QocmVxLCByZXQsIDApOwogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlvX2ZpbGVz
X3VwZGF0ZV9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLAorc3RhdGljIGludCBpb19yc3Jj
X3VwZGF0ZV9wcmVwKHN0cnVjdCBpb19raW9jYiAqcmVxLAogCQkJCWNvbnN0IHN0cnVjdCBp
b191cmluZ19zcWUgKnNxZSkKIHsKLQlpZiAodW5saWtlbHkocmVxLT5jdHgtPmZsYWdzICYg
SU9SSU5HX1NFVFVQX1NRUE9MTCkpCi0JCXJldHVybiAtRUlOVkFMOwogCWlmICh1bmxpa2Vs
eShyZXEtPmZsYWdzICYgKFJFUV9GX0ZJWEVEX0ZJTEUgfCBSRVFfRl9CVUZGRVJfU0VMRUNU
KSkpCiAJCXJldHVybiAtRUlOVkFMOwotCWlmIChzcWUtPmlvcHJpbyB8fCBzcWUtPnJ3X2Zs
YWdzKQorCWlmIChzcWUtPmlvcHJpbyB8fCBzcWUtPnJ3X2ZsYWdzIHx8IHNxZS0+c3BsaWNl
X2ZkX2luKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCXJlcS0+ZmlsZXNfdXBkYXRlLm9mZnNl
dCA9IFJFQURfT05DRShzcWUtPm9mZik7Ci0JcmVxLT5maWxlc191cGRhdGUubnJfYXJncyA9
IFJFQURfT05DRShzcWUtPmxlbik7Ci0JaWYgKCFyZXEtPmZpbGVzX3VwZGF0ZS5ucl9hcmdz
KQorCXJlcS0+cnNyY191cGRhdGUub2Zmc2V0ID0gUkVBRF9PTkNFKHNxZS0+b2ZmKTsKKwly
ZXEtPnJzcmNfdXBkYXRlLm5yX2FyZ3MgPSBSRUFEX09OQ0Uoc3FlLT5sZW4pOworCWlmICgh
cmVxLT5yc3JjX3VwZGF0ZS5ucl9hcmdzKQogCQlyZXR1cm4gLUVJTlZBTDsKLQlyZXEtPmZp
bGVzX3VwZGF0ZS5hcmcgPSBSRUFEX09OQ0Uoc3FlLT5hZGRyKTsKKwlyZXEtPnJzcmNfdXBk
YXRlLmFyZyA9IFJFQURfT05DRShzcWUtPmFkZHIpOwogCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IGlvX2ZpbGVzX3VwZGF0ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCBmb3Jj
ZV9ub25ibG9jaywKLQkJCSAgIHN0cnVjdCBpb19jb21wX3N0YXRlICpjcykKK3N0YXRpYyBp
bnQgaW9fZmlsZXNfdXBkYXRlKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBpbnQg
aXNzdWVfZmxhZ3MpCiB7CiAJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsK
LQlzdHJ1Y3QgaW9fdXJpbmdfZmlsZXNfdXBkYXRlIHVwOworCXN0cnVjdCBpb191cmluZ19y
c3JjX3VwZGF0ZTIgdXA7CiAJaW50IHJldDsKIAotCWlmIChmb3JjZV9ub25ibG9jaykKLQkJ
cmV0dXJuIC1FQUdBSU47Ci0KLQl1cC5vZmZzZXQgPSByZXEtPmZpbGVzX3VwZGF0ZS5vZmZz
ZXQ7Ci0JdXAuZmRzID0gcmVxLT5maWxlc191cGRhdGUuYXJnOworCXVwLm9mZnNldCA9IHJl
cS0+cnNyY191cGRhdGUub2Zmc2V0OworCXVwLmRhdGEgPSByZXEtPnJzcmNfdXBkYXRlLmFy
ZzsKKwl1cC5uciA9IDA7CisJdXAudGFncyA9IDA7CisJdXAucmVzdiA9IDA7CisJdXAucmVz
djIgPSAwOwogCi0JbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsKLQlyZXQgPSBfX2lv
X3NxZV9maWxlc191cGRhdGUoY3R4LCAmdXAsIHJlcS0+ZmlsZXNfdXBkYXRlLm5yX2FyZ3Mp
OwotCW11dGV4X3VubG9jaygmY3R4LT51cmluZ19sb2NrKTsKKwlpb19yaW5nX3N1Ym1pdF9s
b2NrKGN0eCwgIShpc3N1ZV9mbGFncyAmIElPX1VSSU5HX0ZfTk9OQkxPQ0spKTsKKwlyZXQg
PSBfX2lvX3JlZ2lzdGVyX3JzcmNfdXBkYXRlKGN0eCwgSU9SSU5HX1JTUkNfRklMRSwKKwkJ
CQkJJnVwLCByZXEtPnJzcmNfdXBkYXRlLm5yX2FyZ3MpOworCWlvX3Jpbmdfc3VibWl0X3Vu
bG9jayhjdHgsICEoaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05PTkJMT0NLKSk7CiAKIAlp
ZiAocmV0IDwgMCkKLQkJcmVxX3NldF9mYWlsX2xpbmtzKHJlcSk7Ci0JX19pb19yZXFfY29t
cGxldGUocmVxLCByZXQsIDAsIGNzKTsKKwkJcmVxX3NldF9mYWlsKHJlcSk7CisJX19pb19y
ZXFfY29tcGxldGUocmVxLCBpc3N1ZV9mbGFncywgcmV0LCAwKTsKIAlyZXR1cm4gMDsKIH0K
IApAQCAtNTgwOSwxMSArNjMwMCwxMSBAQCBzdGF0aWMgaW50IGlvX3JlcV9wcmVwKHN0cnVj
dCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUpCiAJY2Fz
ZSBJT1JJTkdfT1BfUE9MTF9BREQ6CiAJCXJldHVybiBpb19wb2xsX2FkZF9wcmVwKHJlcSwg
c3FlKTsKIAljYXNlIElPUklOR19PUF9QT0xMX1JFTU9WRToKLQkJcmV0dXJuIGlvX3BvbGxf
cmVtb3ZlX3ByZXAocmVxLCBzcWUpOworCQlyZXR1cm4gaW9fcG9sbF91cGRhdGVfcHJlcChy
ZXEsIHNxZSk7CiAJY2FzZSBJT1JJTkdfT1BfRlNZTkM6Ci0JCXJldHVybiBpb19wcmVwX2Zz
eW5jKHJlcSwgc3FlKTsKKwkJcmV0dXJuIGlvX2ZzeW5jX3ByZXAocmVxLCBzcWUpOwogCWNh
c2UgSU9SSU5HX09QX1NZTkNfRklMRV9SQU5HRToKLQkJcmV0dXJuIGlvX3ByZXBfc2ZyKHJl
cSwgc3FlKTsKKwkJcmV0dXJuIGlvX3Nmcl9wcmVwKHJlcSwgc3FlKTsKIAljYXNlIElPUklO
R19PUF9TRU5ETVNHOgogCWNhc2UgSU9SSU5HX09QX1NFTkQ6CiAJCXJldHVybiBpb19zZW5k
bXNnX3ByZXAocmVxLCBzcWUpOwpAQCAtNTgzOSw3ICs2MzMwLDcgQEAgc3RhdGljIGludCBp
b19yZXFfcHJlcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgY29uc3Qgc3RydWN0IGlvX3VyaW5n
X3NxZSAqc3FlKQogCWNhc2UgSU9SSU5HX09QX0NMT1NFOgogCQlyZXR1cm4gaW9fY2xvc2Vf
cHJlcChyZXEsIHNxZSk7CiAJY2FzZSBJT1JJTkdfT1BfRklMRVNfVVBEQVRFOgotCQlyZXR1
cm4gaW9fZmlsZXNfdXBkYXRlX3ByZXAocmVxLCBzcWUpOworCQlyZXR1cm4gaW9fcnNyY191
cGRhdGVfcHJlcChyZXEsIHNxZSk7CiAJY2FzZSBJT1JJTkdfT1BfU1RBVFg6CiAJCXJldHVy
biBpb19zdGF0eF9wcmVwKHJlcSwgc3FlKTsKIAljYXNlIElPUklOR19PUF9GQURWSVNFOgpA
QCAtNTg1OCwxMDAgKzYzNDksMTMxIEBAIHN0YXRpYyBpbnQgaW9fcmVxX3ByZXAoc3RydWN0
IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19zcWUgKnNxZSkKIAkJcmV0
dXJuIGlvX3JlbW92ZV9idWZmZXJzX3ByZXAocmVxLCBzcWUpOwogCWNhc2UgSU9SSU5HX09Q
X1RFRToKIAkJcmV0dXJuIGlvX3RlZV9wcmVwKHJlcSwgc3FlKTsKKwljYXNlIElPUklOR19P
UF9TSFVURE9XTjoKKwkJcmV0dXJuIGlvX3NodXRkb3duX3ByZXAocmVxLCBzcWUpOworCWNh
c2UgSU9SSU5HX09QX1JFTkFNRUFUOgorCQlyZXR1cm4gaW9fcmVuYW1lYXRfcHJlcChyZXEs
IHNxZSk7CisJY2FzZSBJT1JJTkdfT1BfVU5MSU5LQVQ6CisJCXJldHVybiBpb191bmxpbmth
dF9wcmVwKHJlcSwgc3FlKTsKIAl9CiAKIAlwcmludGtfb25jZShLRVJOX1dBUk5JTkcgImlv
X3VyaW5nOiB1bmhhbmRsZWQgb3Bjb2RlICVkXG4iLAogCQkJcmVxLT5vcGNvZGUpOwotCXJl
dHVybi1FSU5WQUw7CisJcmV0dXJuIC1FSU5WQUw7CiB9CiAKLXN0YXRpYyBpbnQgaW9fcmVx
X2RlZmVyX3ByZXAoc3RydWN0IGlvX2tpb2NiICpyZXEsCi0JCQkgICAgIGNvbnN0IHN0cnVj
dCBpb191cmluZ19zcWUgKnNxZSkKK3N0YXRpYyBpbnQgaW9fcmVxX3ByZXBfYXN5bmMoc3Ry
dWN0IGlvX2tpb2NiICpyZXEpCiB7Ci0JaWYgKCFzcWUpCisJaWYgKCFpb19vcF9kZWZzW3Jl
cS0+b3Bjb2RlXS5uZWVkc19hc3luY19zZXR1cCkKIAkJcmV0dXJuIDA7CisJaWYgKFdBUk5f
T05fT05DRShyZXEtPmFzeW5jX2RhdGEpKQorCQlyZXR1cm4gLUVGQVVMVDsKIAlpZiAoaW9f
YWxsb2NfYXN5bmNfZGF0YShyZXEpKQogCQlyZXR1cm4gLUVBR0FJTjsKLQlyZXR1cm4gaW9f
cmVxX3ByZXAocmVxLCBzcWUpOworCisJc3dpdGNoIChyZXEtPm9wY29kZSkgeworCWNhc2Ug
SU9SSU5HX09QX1JFQURWOgorCQlyZXR1cm4gaW9fcndfcHJlcF9hc3luYyhyZXEsIFJFQUQp
OworCWNhc2UgSU9SSU5HX09QX1dSSVRFVjoKKwkJcmV0dXJuIGlvX3J3X3ByZXBfYXN5bmMo
cmVxLCBXUklURSk7CisJY2FzZSBJT1JJTkdfT1BfU0VORE1TRzoKKwkJcmV0dXJuIGlvX3Nl
bmRtc2dfcHJlcF9hc3luYyhyZXEpOworCWNhc2UgSU9SSU5HX09QX1JFQ1ZNU0c6CisJCXJl
dHVybiBpb19yZWN2bXNnX3ByZXBfYXN5bmMocmVxKTsKKwljYXNlIElPUklOR19PUF9DT05O
RUNUOgorCQlyZXR1cm4gaW9fY29ubmVjdF9wcmVwX2FzeW5jKHJlcSk7CisJfQorCXByaW50
a19vbmNlKEtFUk5fV0FSTklORyAiaW9fdXJpbmc6IHByZXBfYXN5bmMoKSBiYWQgb3Bjb2Rl
ICVkXG4iLAorCQkgICAgcmVxLT5vcGNvZGUpOworCXJldHVybiAtRUZBVUxUOwogfQogCiBz
dGF0aWMgdTMyIGlvX2dldF9zZXF1ZW5jZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIHsKLQlz
dHJ1Y3QgaW9fa2lvY2IgKnBvczsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+
Y3R4OwotCXUzMiB0b3RhbF9zdWJtaXR0ZWQsIG5yX3JlcXMgPSAxOworCXUzMiBzZXEgPSBy
ZXEtPmN0eC0+Y2FjaGVkX3NxX2hlYWQ7CiAKLQlpZiAocmVxLT5mbGFncyAmIFJFUV9GX0xJ
TktfSEVBRCkKLQkJbGlzdF9mb3JfZWFjaF9lbnRyeShwb3MsICZyZXEtPmxpbmtfbGlzdCwg
bGlua19saXN0KQotCQkJbnJfcmVxcysrOwotCi0JdG90YWxfc3VibWl0dGVkID0gY3R4LT5j
YWNoZWRfc3FfaGVhZCAtIGN0eC0+Y2FjaGVkX3NxX2Ryb3BwZWQ7Ci0JcmV0dXJuIHRvdGFs
X3N1Ym1pdHRlZCAtIG5yX3JlcXM7CisJLyogbmVlZCBvcmlnaW5hbCBjYWNoZWRfc3FfaGVh
ZCwgYnV0IGl0IHdhcyBpbmNyZWFzZWQgZm9yIGVhY2ggcmVxICovCisJaW9fZm9yX2VhY2hf
bGluayhyZXEsIHJlcSkKKwkJc2VxLS07CisJcmV0dXJuIHNlcTsKIH0KIAotc3RhdGljIGlu
dCBpb19yZXFfZGVmZXIoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191
cmluZ19zcWUgKnNxZSkKK3N0YXRpYyBib29sIGlvX2RyYWluX3JlcShzdHJ1Y3QgaW9fa2lv
Y2IgKnJlcSkKIHsKKwlzdHJ1Y3QgaW9fa2lvY2IgKnBvczsKIAlzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCA9IHJlcS0+Y3R4OwogCXN0cnVjdCBpb19kZWZlcl9lbnRyeSAqZGU7CiAJaW50
IHJldDsKIAl1MzIgc2VxOwogCisJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9GQUlMKSB7CisJ
CWlvX3JlcV9jb21wbGV0ZV9mYWlsX3N1Ym1pdChyZXEpOworCQlyZXR1cm4gdHJ1ZTsKKwl9
CisKKwkvKgorCSAqIElmIHdlIG5lZWQgdG8gZHJhaW4gYSByZXF1ZXN0IGluIHRoZSBtaWRk
bGUgb2YgYSBsaW5rLCBkcmFpbiB0aGUKKwkgKiBoZWFkIHJlcXVlc3QgYW5kIHRoZSBuZXh0
IHJlcXVlc3QvbGluayBhZnRlciB0aGUgY3VycmVudCBsaW5rLgorCSAqIENvbnNpZGVyaW5n
IHNlcXVlbnRpYWwgZXhlY3V0aW9uIG9mIGxpbmtzLCBJT1NRRV9JT19EUkFJTiB3aWxsIGJl
CisJICogbWFpbnRhaW5lZCBmb3IgZXZlcnkgcmVxdWVzdCBvZiBvdXIgbGluay4KKwkgKi8K
KwlpZiAoY3R4LT5kcmFpbl9uZXh0KSB7CisJCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfSU9fRFJB
SU47CisJCWN0eC0+ZHJhaW5fbmV4dCA9IGZhbHNlOworCX0KKwkvKiBub3QgaW50ZXJlc3Rl
ZCBpbiBoZWFkLCBzdGFydCBmcm9tIHRoZSBmaXJzdCBsaW5rZWQgKi8KKwlpb19mb3JfZWFj
aF9saW5rKHBvcywgcmVxLT5saW5rKSB7CisJCWlmIChwb3MtPmZsYWdzICYgUkVRX0ZfSU9f
RFJBSU4pIHsKKwkJCWN0eC0+ZHJhaW5fbmV4dCA9IHRydWU7CisJCQlyZXEtPmZsYWdzIHw9
IFJFUV9GX0lPX0RSQUlOOworCQkJYnJlYWs7CisJCX0KKwl9CisKIAkvKiBTdGlsbCBuZWVk
IGRlZmVyIGlmIHRoZXJlIGlzIHBlbmRpbmcgcmVxIGluIGRlZmVyIGxpc3QuICovCisJc3Bp
bl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CiAJaWYgKGxpa2VseShsaXN0X2VtcHR5
X2NhcmVmdWwoJmN0eC0+ZGVmZXJfbGlzdCkgJiYKLQkJIShyZXEtPmZsYWdzICYgUkVRX0Zf
SU9fRFJBSU4pKSkKLQkJcmV0dXJuIDA7CisJCSEocmVxLT5mbGFncyAmIFJFUV9GX0lPX0RS
QUlOKSkpIHsKKwkJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwkJY3R4
LT5kcmFpbl9hY3RpdmUgPSBmYWxzZTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKwlzcGluX3Vu
bG9jaygmY3R4LT5jb21wbGV0aW9uX2xvY2spOwogCiAJc2VxID0gaW9fZ2V0X3NlcXVlbmNl
KHJlcSk7CiAJLyogU3RpbGwgYSBjaGFuY2UgdG8gcGFzcyB0aGUgc2VxdWVuY2UgY2hlY2sg
Ki8KIAlpZiAoIXJlcV9uZWVkX2RlZmVyKHJlcSwgc2VxKSAmJiBsaXN0X2VtcHR5X2NhcmVm
dWwoJmN0eC0+ZGVmZXJfbGlzdCkpCi0JCXJldHVybiAwOworCQlyZXR1cm4gZmFsc2U7CiAK
LQlpZiAoIXJlcS0+YXN5bmNfZGF0YSkgewotCQlyZXQgPSBpb19yZXFfZGVmZXJfcHJlcChy
ZXEsIHNxZSk7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0OwotCX0KKwlyZXQgPSBpb19y
ZXFfcHJlcF9hc3luYyhyZXEpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbDsKIAlpb19wcmVw
X2FzeW5jX2xpbmsocmVxKTsKIAlkZSA9IGttYWxsb2Moc2l6ZW9mKCpkZSksIEdGUF9LRVJO
RUwpOwotCWlmICghZGUpCi0JCXJldHVybiAtRU5PTUVNOworCWlmICghZGUpIHsKKwkJcmV0
ID0gLUVOT01FTTsKK2ZhaWw6CisJCWlvX3JlcV9jb21wbGV0ZV9mYWlsZWQocmVxLCByZXQp
OworCQlyZXR1cm4gdHJ1ZTsKKwl9CiAKLQlzcGluX2xvY2tfaXJxKCZjdHgtPmNvbXBsZXRp
b25fbG9jayk7CisJc3Bpbl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CiAJaWYgKCFy
ZXFfbmVlZF9kZWZlcihyZXEsIHNlcSkgJiYgbGlzdF9lbXB0eSgmY3R4LT5kZWZlcl9saXN0
KSkgewotCQlzcGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwkJc3Bp
bl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKIAkJa2ZyZWUoZGUpOwotCQlpb19x
dWV1ZV9hc3luY193b3JrKHJlcSk7Ci0JCXJldHVybiAtRUlPQ0JRVUVVRUQ7CisJCWlvX3F1
ZXVlX2FzeW5jX3dvcmsocmVxLCBOVUxMKTsKKwkJcmV0dXJuIHRydWU7CiAJfQogCiAJdHJh
Y2VfaW9fdXJpbmdfZGVmZXIoY3R4LCByZXEsIHJlcS0+dXNlcl9kYXRhKTsKIAlkZS0+cmVx
ID0gcmVxOwogCWRlLT5zZXEgPSBzZXE7CiAJbGlzdF9hZGRfdGFpbCgmZGUtPmxpc3QsICZj
dHgtPmRlZmVyX2xpc3QpOwotCXNwaW5fdW5sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xv
Y2spOwotCXJldHVybiAtRUlPQ0JRVUVVRUQ7Ci19Ci0KLXN0YXRpYyB2b2lkIGlvX3JlcV9k
cm9wX2ZpbGVzKHN0cnVjdCBpb19raW9jYiAqcmVxKQotewotCXN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4ID0gcmVxLT5jdHg7Ci0Jc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSByZXEt
PnRhc2stPmlvX3VyaW5nOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0KLQlpZiAocmVxLT53
b3JrLmZsYWdzICYgSU9fV1FfV09SS19GSUxFUykgewotCQlwdXRfZmlsZXNfc3RydWN0KHJl
cS0+d29yay5pZGVudGl0eS0+ZmlsZXMpOwotCQlwdXRfbnNwcm94eShyZXEtPndvcmsuaWRl
bnRpdHktPm5zcHJveHkpOwotCX0KLQlzcGluX2xvY2tfaXJxc2F2ZSgmY3R4LT5pbmZsaWdo
dF9sb2NrLCBmbGFncyk7Ci0JbGlzdF9kZWwoJnJlcS0+aW5mbGlnaHRfZW50cnkpOwotCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmN0eC0+aW5mbGlnaHRfbG9jaywgZmxhZ3MpOwotCXJl
cS0+ZmxhZ3MgJj0gflJFUV9GX0lORkxJR0hUOwotCXJlcS0+d29yay5mbGFncyAmPSB+SU9f
V1FfV09SS19GSUxFUzsKLQlpZiAoYXRvbWljX3JlYWQoJnRjdHgtPmluX2lkbGUpKQotCQl3
YWtlX3VwKCZ0Y3R4LT53YWl0KTsKKwlzcGluX3VubG9jaygmY3R4LT5jb21wbGV0aW9uX2xv
Y2spOworCXJldHVybiB0cnVlOwogfQogCi1zdGF0aWMgdm9pZCBfX2lvX2NsZWFuX29wKHN0
cnVjdCBpb19raW9jYiAqcmVxKQorc3RhdGljIHZvaWQgaW9fY2xlYW5fb3Aoc3RydWN0IGlv
X2tpb2NiICpyZXEpCiB7CiAJaWYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9CVUZGRVJfU0VMRUNU
RUQpIHsKIAkJc3dpdGNoIChyZXEtPm9wY29kZSkgewpAQCAtNTk2NSw3ICs2NDg3LDYgQEAg
c3RhdGljIHZvaWQgX19pb19jbGVhbl9vcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIAkJCWtm
cmVlKHJlcS0+c3JfbXNnLmtidWYpOwogCQkJYnJlYWs7CiAJCX0KLQkJcmVxLT5mbGFncyAm
PSB+UkVRX0ZfQlVGRkVSX1NFTEVDVEVEOwogCX0KIAogCWlmIChyZXEtPmZsYWdzICYgUkVR
X0ZfTkVFRF9DTEVBTlVQKSB7CkBAIC01OTc3LDUwOCArNjQ5OCw1ODkgQEAgc3RhdGljIHZv
aWQgX19pb19jbGVhbl9vcChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKIAkJY2FzZSBJT1JJTkdf
T1BfV1JJVEVfRklYRUQ6CiAJCWNhc2UgSU9SSU5HX09QX1dSSVRFOiB7CiAJCQlzdHJ1Y3Qg
aW9fYXN5bmNfcncgKmlvID0gcmVxLT5hc3luY19kYXRhOwotCQkJaWYgKGlvLT5mcmVlX2lv
dmVjKQotCQkJCWtmcmVlKGlvLT5mcmVlX2lvdmVjKTsKKworCQkJa2ZyZWUoaW8tPmZyZWVf
aW92ZWMpOwogCQkJYnJlYWs7CiAJCQl9CiAJCWNhc2UgSU9SSU5HX09QX1JFQ1ZNU0c6CiAJ
CWNhc2UgSU9SSU5HX09QX1NFTkRNU0c6IHsKIAkJCXN0cnVjdCBpb19hc3luY19tc2doZHIg
KmlvID0gcmVxLT5hc3luY19kYXRhOwotCQkJaWYgKGlvLT5pb3YgIT0gaW8tPmZhc3RfaW92
KQotCQkJCWtmcmVlKGlvLT5pb3YpOworCisJCQlrZnJlZShpby0+ZnJlZV9pb3YpOwogCQkJ
YnJlYWs7CiAJCQl9Ci0JCWNhc2UgSU9SSU5HX09QX1NQTElDRToKLQkJY2FzZSBJT1JJTkdf
T1BfVEVFOgotCQkJaW9fcHV0X2ZpbGUocmVxLCByZXEtPnNwbGljZS5maWxlX2luLAotCQkJ
CSAgICAocmVxLT5zcGxpY2UuZmxhZ3MgJiBTUExJQ0VfRl9GRF9JTl9GSVhFRCkpOwotCQkJ
YnJlYWs7CiAJCWNhc2UgSU9SSU5HX09QX09QRU5BVDoKIAkJY2FzZSBJT1JJTkdfT1BfT1BF
TkFUMjoKIAkJCWlmIChyZXEtPm9wZW4uZmlsZW5hbWUpCiAJCQkJcHV0bmFtZShyZXEtPm9w
ZW4uZmlsZW5hbWUpOwogCQkJYnJlYWs7CisJCWNhc2UgSU9SSU5HX09QX1JFTkFNRUFUOgor
CQkJcHV0bmFtZShyZXEtPnJlbmFtZS5vbGRwYXRoKTsKKwkJCXB1dG5hbWUocmVxLT5yZW5h
bWUubmV3cGF0aCk7CisJCQlicmVhazsKKwkJY2FzZSBJT1JJTkdfT1BfVU5MSU5LQVQ6CisJ
CQlwdXRuYW1lKHJlcS0+dW5saW5rLmZpbGVuYW1lKTsKKwkJCWJyZWFrOwogCQl9Ci0JCXJl
cS0+ZmxhZ3MgJj0gflJFUV9GX05FRURfQ0xFQU5VUDsKIAl9CisJaWYgKChyZXEtPmZsYWdz
ICYgUkVRX0ZfUE9MTEVEKSAmJiByZXEtPmFwb2xsKSB7CisJCWtmcmVlKHJlcS0+YXBvbGwt
PmRvdWJsZV9wb2xsKTsKKwkJa2ZyZWUocmVxLT5hcG9sbCk7CisJCXJlcS0+YXBvbGwgPSBO
VUxMOworCX0KKwlpZiAocmVxLT5mbGFncyAmIFJFUV9GX0lORkxJR0hUKSB7CisJCXN0cnVj
dCBpb191cmluZ190YXNrICp0Y3R4ID0gcmVxLT50YXNrLT5pb191cmluZzsKKworCQlhdG9t
aWNfZGVjKCZ0Y3R4LT5pbmZsaWdodF90cmFja2VkKTsKKwl9CisJaWYgKHJlcS0+ZmxhZ3Mg
JiBSRVFfRl9DUkVEUykKKwkJcHV0X2NyZWQocmVxLT5jcmVkcyk7CisKKwlyZXEtPmZsYWdz
ICY9IH5JT19SRVFfQ0xFQU5fRkxBR1M7CiB9CiAKLXN0YXRpYyBpbnQgaW9faXNzdWVfc3Fl
KHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sIGZvcmNlX25vbmJsb2NrLAotCQkJc3RydWN0
IGlvX2NvbXBfc3RhdGUgKmNzKQorc3RhdGljIGludCBpb19pc3N1ZV9zcWUoc3RydWN0IGlv
X2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykKIHsKIAlzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OworCWNvbnN0IHN0cnVjdCBjcmVkICpjcmVkcyA9
IE5VTEw7CiAJaW50IHJldDsKIAorCWlmICgocmVxLT5mbGFncyAmIFJFUV9GX0NSRURTKSAm
JiByZXEtPmNyZWRzICE9IGN1cnJlbnRfY3JlZCgpKQorCQljcmVkcyA9IG92ZXJyaWRlX2Ny
ZWRzKHJlcS0+Y3JlZHMpOworCiAJc3dpdGNoIChyZXEtPm9wY29kZSkgewogCWNhc2UgSU9S
SU5HX09QX05PUDoKLQkJcmV0ID0gaW9fbm9wKHJlcSwgY3MpOworCQlyZXQgPSBpb19ub3Ao
cmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX09QX1JFQURWOgog
CWNhc2UgSU9SSU5HX09QX1JFQURfRklYRUQ6CiAJY2FzZSBJT1JJTkdfT1BfUkVBRDoKLQkJ
cmV0ID0gaW9fcmVhZChyZXEsIGZvcmNlX25vbmJsb2NrLCBjcyk7CisJCXJldCA9IGlvX3Jl
YWQocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX09QX1dSSVRF
VjoKIAljYXNlIElPUklOR19PUF9XUklURV9GSVhFRDoKIAljYXNlIElPUklOR19PUF9XUklU
RToKLQkJcmV0ID0gaW9fd3JpdGUocmVxLCBmb3JjZV9ub25ibG9jaywgY3MpOworCQlyZXQg
PSBpb193cml0ZShyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdf
T1BfRlNZTkM6Ci0JCXJldCA9IGlvX2ZzeW5jKHJlcSwgZm9yY2Vfbm9uYmxvY2spOworCQly
ZXQgPSBpb19mc3luYyhyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJ
TkdfT1BfUE9MTF9BREQ6Ci0JCXJldCA9IGlvX3BvbGxfYWRkKHJlcSk7CisJCXJldCA9IGlv
X3BvbGxfYWRkKHJlcSwgaXNzdWVfZmxhZ3MpOwogCQlicmVhazsKIAljYXNlIElPUklOR19P
UF9QT0xMX1JFTU9WRToKLQkJcmV0ID0gaW9fcG9sbF9yZW1vdmUocmVxKTsKKwkJcmV0ID0g
aW9fcG9sbF91cGRhdGUocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9S
SU5HX09QX1NZTkNfRklMRV9SQU5HRToKLQkJcmV0ID0gaW9fc3luY19maWxlX3JhbmdlKHJl
cSwgZm9yY2Vfbm9uYmxvY2spOworCQlyZXQgPSBpb19zeW5jX2ZpbGVfcmFuZ2UocmVxLCBp
c3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX09QX1NFTkRNU0c6Ci0JCXJl
dCA9IGlvX3NlbmRtc2cocmVxLCBmb3JjZV9ub25ibG9jaywgY3MpOworCQlyZXQgPSBpb19z
ZW5kbXNnKHJlcSwgaXNzdWVfZmxhZ3MpOwogCQlicmVhazsKIAljYXNlIElPUklOR19PUF9T
RU5EOgotCQlyZXQgPSBpb19zZW5kKHJlcSwgZm9yY2Vfbm9uYmxvY2ssIGNzKTsKKwkJcmV0
ID0gaW9fc2VuZChyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdf
T1BfUkVDVk1TRzoKLQkJcmV0ID0gaW9fcmVjdm1zZyhyZXEsIGZvcmNlX25vbmJsb2NrLCBj
cyk7CisJCXJldCA9IGlvX3JlY3Ztc2cocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwog
CWNhc2UgSU9SSU5HX09QX1JFQ1Y6Ci0JCXJldCA9IGlvX3JlY3YocmVxLCBmb3JjZV9ub25i
bG9jaywgY3MpOworCQlyZXQgPSBpb19yZWN2KHJlcSwgaXNzdWVfZmxhZ3MpOwogCQlicmVh
azsKIAljYXNlIElPUklOR19PUF9USU1FT1VUOgotCQlyZXQgPSBpb190aW1lb3V0KHJlcSk7
CisJCXJldCA9IGlvX3RpbWVvdXQocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNh
c2UgSU9SSU5HX09QX1RJTUVPVVRfUkVNT1ZFOgotCQlyZXQgPSBpb190aW1lb3V0X3JlbW92
ZShyZXEpOworCQlyZXQgPSBpb190aW1lb3V0X3JlbW92ZShyZXEsIGlzc3VlX2ZsYWdzKTsK
IAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdfT1BfQUNDRVBUOgotCQlyZXQgPSBpb19hY2NlcHQo
cmVxLCBmb3JjZV9ub25ibG9jaywgY3MpOworCQlyZXQgPSBpb19hY2NlcHQocmVxLCBpc3N1
ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX09QX0NPTk5FQ1Q6Ci0JCXJldCA9
IGlvX2Nvbm5lY3QocmVxLCBmb3JjZV9ub25ibG9jaywgY3MpOworCQlyZXQgPSBpb19jb25u
ZWN0KHJlcSwgaXNzdWVfZmxhZ3MpOwogCQlicmVhazsKIAljYXNlIElPUklOR19PUF9BU1lO
Q19DQU5DRUw6Ci0JCXJldCA9IGlvX2FzeW5jX2NhbmNlbChyZXEpOworCQlyZXQgPSBpb19h
c3luY19jYW5jZWwocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5H
X09QX0ZBTExPQ0FURToKLQkJcmV0ID0gaW9fZmFsbG9jYXRlKHJlcSwgZm9yY2Vfbm9uYmxv
Y2spOworCQlyZXQgPSBpb19mYWxsb2NhdGUocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFr
OwogCWNhc2UgSU9SSU5HX09QX09QRU5BVDoKLQkJcmV0ID0gaW9fb3BlbmF0KHJlcSwgZm9y
Y2Vfbm9uYmxvY2spOworCQlyZXQgPSBpb19vcGVuYXQocmVxLCBpc3N1ZV9mbGFncyk7CiAJ
CWJyZWFrOwogCWNhc2UgSU9SSU5HX09QX0NMT1NFOgotCQlyZXQgPSBpb19jbG9zZShyZXEs
IGZvcmNlX25vbmJsb2NrLCBjcyk7CisJCXJldCA9IGlvX2Nsb3NlKHJlcSwgaXNzdWVfZmxh
Z3MpOwogCQlicmVhazsKIAljYXNlIElPUklOR19PUF9GSUxFU19VUERBVEU6Ci0JCXJldCA9
IGlvX2ZpbGVzX3VwZGF0ZShyZXEsIGZvcmNlX25vbmJsb2NrLCBjcyk7CisJCXJldCA9IGlv
X2ZpbGVzX3VwZGF0ZShyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJ
TkdfT1BfU1RBVFg6Ci0JCXJldCA9IGlvX3N0YXR4KHJlcSwgZm9yY2Vfbm9uYmxvY2spOwor
CQlyZXQgPSBpb19zdGF0eChyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJ
T1JJTkdfT1BfRkFEVklTRToKLQkJcmV0ID0gaW9fZmFkdmlzZShyZXEsIGZvcmNlX25vbmJs
b2NrKTsKKwkJcmV0ID0gaW9fZmFkdmlzZShyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJYnJlYWs7
CiAJY2FzZSBJT1JJTkdfT1BfTUFEVklTRToKLQkJcmV0ID0gaW9fbWFkdmlzZShyZXEsIGZv
cmNlX25vbmJsb2NrKTsKKwkJcmV0ID0gaW9fbWFkdmlzZShyZXEsIGlzc3VlX2ZsYWdzKTsK
IAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdfT1BfT1BFTkFUMjoKLQkJcmV0ID0gaW9fb3BlbmF0
MihyZXEsIGZvcmNlX25vbmJsb2NrKTsKKwkJcmV0ID0gaW9fb3BlbmF0MihyZXEsIGlzc3Vl
X2ZsYWdzKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdfT1BfRVBPTExfQ1RMOgotCQlyZXQg
PSBpb19lcG9sbF9jdGwocmVxLCBmb3JjZV9ub25ibG9jaywgY3MpOworCQlyZXQgPSBpb19l
cG9sbF9jdGwocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX09Q
X1NQTElDRToKLQkJcmV0ID0gaW9fc3BsaWNlKHJlcSwgZm9yY2Vfbm9uYmxvY2spOworCQly
ZXQgPSBpb19zcGxpY2UocmVxLCBpc3N1ZV9mbGFncyk7CiAJCWJyZWFrOwogCWNhc2UgSU9S
SU5HX09QX1BST1ZJREVfQlVGRkVSUzoKLQkJcmV0ID0gaW9fcHJvdmlkZV9idWZmZXJzKHJl
cSwgZm9yY2Vfbm9uYmxvY2ssIGNzKTsKKwkJcmV0ID0gaW9fcHJvdmlkZV9idWZmZXJzKHJl
cSwgaXNzdWVfZmxhZ3MpOwogCQlicmVhazsKIAljYXNlIElPUklOR19PUF9SRU1PVkVfQlVG
RkVSUzoKLQkJcmV0ID0gaW9fcmVtb3ZlX2J1ZmZlcnMocmVxLCBmb3JjZV9ub25ibG9jaywg
Y3MpOworCQlyZXQgPSBpb19yZW1vdmVfYnVmZmVycyhyZXEsIGlzc3VlX2ZsYWdzKTsKIAkJ
YnJlYWs7CiAJY2FzZSBJT1JJTkdfT1BfVEVFOgotCQlyZXQgPSBpb190ZWUocmVxLCBmb3Jj
ZV9ub25ibG9jayk7CisJCXJldCA9IGlvX3RlZShyZXEsIGlzc3VlX2ZsYWdzKTsKKwkJYnJl
YWs7CisJY2FzZSBJT1JJTkdfT1BfU0hVVERPV046CisJCXJldCA9IGlvX3NodXRkb3duKHJl
cSwgaXNzdWVfZmxhZ3MpOworCQlicmVhazsKKwljYXNlIElPUklOR19PUF9SRU5BTUVBVDoK
KwkJcmV0ID0gaW9fcmVuYW1lYXQocmVxLCBpc3N1ZV9mbGFncyk7CisJCWJyZWFrOworCWNh
c2UgSU9SSU5HX09QX1VOTElOS0FUOgorCQlyZXQgPSBpb191bmxpbmthdChyZXEsIGlzc3Vl
X2ZsYWdzKTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJcmV0ID0gLUVJTlZBTDsKIAkJYnJl
YWs7CiAJfQogCisJaWYgKGNyZWRzKQorCQlyZXZlcnRfY3JlZHMoY3JlZHMpOwogCWlmIChy
ZXQpCiAJCXJldHVybiByZXQ7Ci0KIAkvKiBJZiB0aGUgb3AgZG9lc24ndCBoYXZlIGEgZmls
ZSwgd2UncmUgbm90IHBvbGxpbmcgZm9yIGl0ICovCi0JaWYgKChjdHgtPmZsYWdzICYgSU9S
SU5HX1NFVFVQX0lPUE9MTCkgJiYgcmVxLT5maWxlKSB7Ci0JCWNvbnN0IGJvb2wgaW5fYXN5
bmMgPSBpb193cV9jdXJyZW50X2lzX3dvcmtlcigpOwotCi0JCS8qIHdvcmtxdWV1ZSBjb250
ZXh0IGRvZXNuJ3QgaG9sZCB1cmluZ19sb2NrLCBncmFiIGl0IG5vdyAqLwotCQlpZiAoaW5f
YXN5bmMpCi0JCQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCisJaWYgKChjdHgt
PmZsYWdzICYgSU9SSU5HX1NFVFVQX0lPUE9MTCkgJiYgcmVxLT5maWxlKQogCQlpb19pb3Bv
bGxfcmVxX2lzc3VlZChyZXEpOwogCi0JCWlmIChpbl9hc3luYykKLQkJCW11dGV4X3VubG9j
aygmY3R4LT51cmluZ19sb2NrKTsKLQl9Ci0KIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHN0
cnVjdCBpb193cV93b3JrICppb193cV9zdWJtaXRfd29yayhzdHJ1Y3QgaW9fd3Ffd29yayAq
d29yaykKK3N0YXRpYyBzdHJ1Y3QgaW9fd3Ffd29yayAqaW9fd3FfZnJlZV93b3JrKHN0cnVj
dCBpb193cV93b3JrICp3b3JrKQoreworCXN0cnVjdCBpb19raW9jYiAqcmVxID0gY29udGFp
bmVyX29mKHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29yayk7CisKKwlyZXEgPSBpb19wdXRf
cmVxX2ZpbmRfbmV4dChyZXEpOworCXJldHVybiByZXEgPyAmcmVxLT53b3JrIDogTlVMTDsK
K30KKworc3RhdGljIHZvaWQgaW9fd3Ffc3VibWl0X3dvcmsoc3RydWN0IGlvX3dxX3dvcmsg
KndvcmspCiB7CiAJc3RydWN0IGlvX2tpb2NiICpyZXEgPSBjb250YWluZXJfb2Yod29yaywg
c3RydWN0IGlvX2tpb2NiLCB3b3JrKTsKIAlzdHJ1Y3QgaW9fa2lvY2IgKnRpbWVvdXQ7CiAJ
aW50IHJldCA9IDA7CiAKKwkvKiBvbmUgd2lsbCBiZSBkcm9wcGVkIGJ5IC0+aW9fZnJlZV93
b3JrKCkgYWZ0ZXIgcmV0dXJuaW5nIHRvIGlvLXdxICovCisJaWYgKCEocmVxLT5mbGFncyAm
IFJFUV9GX1JFRkNPVU5UKSkKKwkJX19pb19yZXFfc2V0X3JlZmNvdW50KHJlcSwgMik7CisJ
ZWxzZQorCQlyZXFfcmVmX2dldChyZXEpOworCiAJdGltZW91dCA9IGlvX3ByZXBfbGlua2Vk
X3RpbWVvdXQocmVxKTsKIAlpZiAodGltZW91dCkKIAkJaW9fcXVldWVfbGlua2VkX3RpbWVv
dXQodGltZW91dCk7CiAKLQkvKiBpZiBOT19DQU5DRUwgaXMgc2V0LCB3ZSBtdXN0IHN0aWxs
IHJ1biB0aGUgd29yayAqLwotCWlmICgod29yay0+ZmxhZ3MgJiAoSU9fV1FfV09SS19DQU5D
RUx8SU9fV1FfV09SS19OT19DQU5DRUwpKSA9PQotCQkJCUlPX1dRX1dPUktfQ0FOQ0VMKSB7
CisJLyogZWl0aGVyIGNhbmNlbGxlZCBvciBpby13cSBpcyBkeWluZywgc28gZG9uJ3QgdG91
Y2ggdGN0eC0+aW93cSAqLworCWlmICh3b3JrLT5mbGFncyAmIElPX1dRX1dPUktfQ0FOQ0VM
KQogCQlyZXQgPSAtRUNBTkNFTEVEOwotCX0KIAogCWlmICghcmV0KSB7CiAJCWRvIHsKLQkJ
CXJldCA9IGlvX2lzc3VlX3NxZShyZXEsIGZhbHNlLCBOVUxMKTsKKwkJCXJldCA9IGlvX2lz
c3VlX3NxZShyZXEsIDApOwogCQkJLyoKIAkJCSAqIFdlIGNhbiBnZXQgRUFHQUlOIGZvciBw
b2xsZWQgSU8gZXZlbiB0aG91Z2ggd2UncmUKIAkJCSAqIGZvcmNpbmcgYSBzeW5jIHN1Ym1p
c3Npb24gZnJvbSBoZXJlLCBzaW5jZSB3ZSBjYW4ndAogCQkJICogd2FpdCBmb3IgcmVxdWVz
dCBzbG90cyBvbiB0aGUgYmxvY2sgc2lkZS4KIAkJCSAqLwotCQkJaWYgKHJldCAhPSAtRUFH
QUlOKQorCQkJaWYgKHJldCAhPSAtRUFHQUlOIHx8ICEocmVxLT5jdHgtPmZsYWdzICYgSU9S
SU5HX1NFVFVQX0lPUE9MTCkpCiAJCQkJYnJlYWs7CiAJCQljb25kX3Jlc2NoZWQoKTsKIAkJ
fSB3aGlsZSAoMSk7CiAJfQogCi0JaWYgKHJldCkgewotCQlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmxvY2tfY3R4ID0gTlVMTDsKLQotCQlpZiAocmVxLT5jdHgtPmZsYWdzICYgSU9SSU5HX1NF
VFVQX0lPUE9MTCkKLQkJCWxvY2tfY3R4ID0gcmVxLT5jdHg7Ci0KLQkJLyoKLQkJICogaW9f
aW9wb2xsX2NvbXBsZXRlKCkgZG9lcyBub3QgaG9sZCBjb21wbGV0aW9uX2xvY2sgdG8KLQkJ
ICogY29tcGxldGUgcG9sbGVkIGlvLCBzbyBoZXJlIGZvciBwb2xsZWQgaW8sIHdlIGNhbiBu
b3QgY2FsbAotCQkgKiBpb19yZXFfY29tcGxldGUoKSBkaXJlY3RseSwgb3RoZXJ3aXNlIHRo
ZXJlIG1heWJlIGNvbmN1cnJlbnQKLQkJICogYWNjZXNzIHRvIGNxcmluZywgZGVmZXJfbGlz
dCwgZXRjLCB3aGljaCBpcyBub3Qgc2FmZS4gR2l2ZW4KLQkJICogdGhhdCBpb19pb3BvbGxf
Y29tcGxldGUoKSBpcyBhbHdheXMgY2FsbGVkIHVuZGVyIHVyaW5nX2xvY2ssCi0JCSAqIHNv
IGhlcmUgZm9yIHBvbGxlZCBpbywgd2UgYWxzbyBnZXQgdXJpbmdfbG9jayB0byBjb21wbGV0
ZQotCQkgKiBpdC4KLQkJICovCi0JCWlmIChsb2NrX2N0eCkKLQkJCW11dGV4X2xvY2soJmxv
Y2tfY3R4LT51cmluZ19sb2NrKTsKLQotCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQkJ
aW9fcmVxX2NvbXBsZXRlKHJlcSwgcmV0KTsKLQotCQlpZiAobG9ja19jdHgpCi0JCQltdXRl
eF91bmxvY2soJmxvY2tfY3R4LT51cmluZ19sb2NrKTsKLQl9CisJLyogYXZvaWQgbG9ja2lu
ZyBwcm9ibGVtcyBieSBmYWlsaW5nIGl0IGZyb20gYSBjbGVhbiBjb250ZXh0ICovCisJaWYg
KHJldCkKKwkJaW9fcmVxX3Rhc2tfcXVldWVfZmFpbChyZXEsIHJldCk7Cit9CiAKLQlyZXR1
cm4gaW9fc3RlYWxfd29yayhyZXEpOworc3RhdGljIGlubGluZSBzdHJ1Y3QgaW9fZml4ZWRf
ZmlsZSAqaW9fZml4ZWRfZmlsZV9zbG90KHN0cnVjdCBpb19maWxlX3RhYmxlICp0YWJsZSwK
KwkJCQkJCSAgICAgICB1bnNpZ25lZCBpKQoreworCXJldHVybiAmdGFibGUtPmZpbGVzW2ld
OwogfQogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBmaWxlICppb19maWxlX2Zyb21faW5kZXgo
c3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCiAJCQkJCSAgICAgIGludCBpbmRleCkKIHsKLQlz
dHJ1Y3QgZml4ZWRfZmlsZV90YWJsZSAqdGFibGU7CisJc3RydWN0IGlvX2ZpeGVkX2ZpbGUg
KnNsb3QgPSBpb19maXhlZF9maWxlX3Nsb3QoJmN0eC0+ZmlsZV90YWJsZSwgaW5kZXgpOwog
Ci0JdGFibGUgPSAmY3R4LT5maWxlX2RhdGEtPnRhYmxlW2luZGV4ID4+IElPUklOR19GSUxF
X1RBQkxFX1NISUZUXTsKLQlyZXR1cm4gdGFibGUtPmZpbGVzW2luZGV4ICYgSU9SSU5HX0ZJ
TEVfVEFCTEVfTUFTS107CisJcmV0dXJuIChzdHJ1Y3QgZmlsZSAqKSAoc2xvdC0+ZmlsZV9w
dHIgJiBGRlNfTUFTSyk7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgZmlsZSAqaW9fZmlsZV9nZXQo
c3RydWN0IGlvX3N1Ym1pdF9zdGF0ZSAqc3RhdGUsCi0JCQkJc3RydWN0IGlvX2tpb2NiICpy
ZXEsIGludCBmZCwgYm9vbCBmaXhlZCkKK3N0YXRpYyB2b2lkIGlvX2ZpeGVkX2ZpbGVfc2V0
KHN0cnVjdCBpb19maXhlZF9maWxlICpmaWxlX3Nsb3QsIHN0cnVjdCBmaWxlICpmaWxlKQor
eworCXVuc2lnbmVkIGxvbmcgZmlsZV9wdHIgPSAodW5zaWduZWQgbG9uZykgZmlsZTsKKwor
CWlmIChfX2lvX2ZpbGVfc3VwcG9ydHNfbm93YWl0KGZpbGUsIFJFQUQpKQorCQlmaWxlX3B0
ciB8PSBGRlNfQVNZTkNfUkVBRDsKKwlpZiAoX19pb19maWxlX3N1cHBvcnRzX25vd2FpdChm
aWxlLCBXUklURSkpCisJCWZpbGVfcHRyIHw9IEZGU19BU1lOQ19XUklURTsKKwlpZiAoU19J
U1JFRyhmaWxlX2lub2RlKGZpbGUpLT5pX21vZGUpKQorCQlmaWxlX3B0ciB8PSBGRlNfSVNS
RUc7CisJZmlsZV9zbG90LT5maWxlX3B0ciA9IGZpbGVfcHRyOworfQorCitzdGF0aWMgaW5s
aW5lIHN0cnVjdCBmaWxlICppb19maWxlX2dldF9maXhlZChzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCwKKwkJCQkJICAgICBzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50IGZkKQogewotCXN0
cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7CiAJc3RydWN0IGZpbGUgKmZpbGU7
CisJdW5zaWduZWQgbG9uZyBmaWxlX3B0cjsKIAotCWlmIChmaXhlZCkgewotCQlpZiAodW5s
aWtlbHkoKHVuc2lnbmVkIGludClmZCA+PSBjdHgtPm5yX3VzZXJfZmlsZXMpKQotCQkJcmV0
dXJuIE5VTEw7Ci0JCWZkID0gYXJyYXlfaW5kZXhfbm9zcGVjKGZkLCBjdHgtPm5yX3VzZXJf
ZmlsZXMpOwotCQlmaWxlID0gaW9fZmlsZV9mcm9tX2luZGV4KGN0eCwgZmQpOwotCQlpZiAo
ZmlsZSkgewotCQkJcmVxLT5maXhlZF9maWxlX3JlZnMgPSAmY3R4LT5maWxlX2RhdGEtPm5v
ZGUtPnJlZnM7Ci0JCQlwZXJjcHVfcmVmX2dldChyZXEtPmZpeGVkX2ZpbGVfcmVmcyk7Ci0J
CX0KLQl9IGVsc2UgewotCQl0cmFjZV9pb191cmluZ19maWxlX2dldChjdHgsIGZkKTsKLQkJ
ZmlsZSA9IF9faW9fZmlsZV9nZXQoc3RhdGUsIGZkKTsKLQl9CisJaWYgKHVubGlrZWx5KCh1
bnNpZ25lZCBpbnQpZmQgPj0gY3R4LT5ucl91c2VyX2ZpbGVzKSkKKwkJcmV0dXJuIE5VTEw7
CisJZmQgPSBhcnJheV9pbmRleF9ub3NwZWMoZmQsIGN0eC0+bnJfdXNlcl9maWxlcyk7CisJ
ZmlsZV9wdHIgPSBpb19maXhlZF9maWxlX3Nsb3QoJmN0eC0+ZmlsZV90YWJsZSwgZmQpLT5m
aWxlX3B0cjsKKwlmaWxlID0gKHN0cnVjdCBmaWxlICopIChmaWxlX3B0ciAmIEZGU19NQVNL
KTsKKwlmaWxlX3B0ciAmPSB+RkZTX01BU0s7CisJLyogbWFzayBpbiBvdmVybGFwcGluZyBS
RVFfRiBhbmQgRkZTIGJpdHMgKi8KKwlyZXEtPmZsYWdzIHw9IChmaWxlX3B0ciA8PCBSRVFf
Rl9OT1dBSVRfUkVBRF9CSVQpOworCWlvX3JlcV9zZXRfcnNyY19ub2RlKHJlcSk7CisJcmV0
dXJuIGZpbGU7Cit9CiAKLQlpZiAoZmlsZSAmJiBmaWxlLT5mX29wID09ICZpb191cmluZ19m
b3BzICYmCi0JICAgICEocmVxLT5mbGFncyAmIFJFUV9GX0lORkxJR0hUKSkgewotCQlpb19y
ZXFfaW5pdF9hc3luYyhyZXEpOwotCQlyZXEtPmZsYWdzIHw9IFJFUV9GX0lORkxJR0hUOwor
c3RhdGljIHN0cnVjdCBmaWxlICppb19maWxlX2dldF9ub3JtYWwoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsCisJCQkJICAgICAgIHN0cnVjdCBpb19raW9jYiAqcmVxLCBpbnQgZmQpCit7
CisJc3RydWN0IGZpbGUgKmZpbGUgPSBmZ2V0KGZkKTsKIAotCQlzcGluX2xvY2tfaXJxKCZj
dHgtPmluZmxpZ2h0X2xvY2spOwotCQlsaXN0X2FkZCgmcmVxLT5pbmZsaWdodF9lbnRyeSwg
JmN0eC0+aW5mbGlnaHRfbGlzdCk7Ci0JCXNwaW5fdW5sb2NrX2lycSgmY3R4LT5pbmZsaWdo
dF9sb2NrKTsKLQl9CisJdHJhY2VfaW9fdXJpbmdfZmlsZV9nZXQoY3R4LCBmZCk7CiAKKwkv
KiB3ZSBkb24ndCBhbGxvdyBmaXhlZCBpb191cmluZyBmaWxlcyAqLworCWlmIChmaWxlICYm
IHVubGlrZWx5KGZpbGUtPmZfb3AgPT0gJmlvX3VyaW5nX2ZvcHMpKQorCQlpb19yZXFfdHJh
Y2tfaW5mbGlnaHQocmVxKTsKIAlyZXR1cm4gZmlsZTsKIH0KIAotc3RhdGljIGludCBpb19y
ZXFfc2V0X2ZpbGUoc3RydWN0IGlvX3N1Ym1pdF9zdGF0ZSAqc3RhdGUsIHN0cnVjdCBpb19r
aW9jYiAqcmVxLAotCQkJICAgaW50IGZkKQorc3RhdGljIGlubGluZSBzdHJ1Y3QgZmlsZSAq
aW9fZmlsZV9nZXQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCisJCQkJICAgICAgIHN0cnVj
dCBpb19raW9jYiAqcmVxLCBpbnQgZmQsIGJvb2wgZml4ZWQpCiB7Ci0JYm9vbCBmaXhlZDsK
KwlpZiAoZml4ZWQpCisJCXJldHVybiBpb19maWxlX2dldF9maXhlZChjdHgsIHJlcSwgZmQp
OworCWVsc2UKKwkJcmV0dXJuIGlvX2ZpbGVfZ2V0X25vcm1hbChjdHgsIHJlcSwgZmQpOwor
fQogCi0JZml4ZWQgPSAocmVxLT5mbGFncyAmIFJFUV9GX0ZJWEVEX0ZJTEUpICE9IDA7Ci0J
aWYgKHVubGlrZWx5KCFmaXhlZCAmJiBpb19hc3luY19zdWJtaXQocmVxLT5jdHgpKSkKLQkJ
cmV0dXJuIC1FQkFERjsKK3N0YXRpYyB2b2lkIGlvX3JlcV90YXNrX2xpbmtfdGltZW91dChz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSwgYm9vbCAqbG9ja2VkKQoreworCXN0cnVjdCBpb19raW9j
YiAqcHJldiA9IHJlcS0+dGltZW91dC5wcmV2OworCWludCByZXQgPSAtRU5PRU5UOwogCi0J
cmVxLT5maWxlID0gaW9fZmlsZV9nZXQoc3RhdGUsIHJlcSwgZmQsIGZpeGVkKTsKLQlpZiAo
cmVxLT5maWxlIHx8IGlvX29wX2RlZnNbcmVxLT5vcGNvZGVdLm5lZWRzX2ZpbGVfbm9fZXJy
b3IpCi0JCXJldHVybiAwOwotCXJldHVybiAtRUJBREY7CisJaWYgKHByZXYpIHsKKwkJaWYg
KCEocmVxLT50YXNrLT5mbGFncyAmIFBGX0VYSVRJTkcpKQorCQkJcmV0ID0gaW9fdHJ5X2Nh
bmNlbF91c2VyZGF0YShyZXEsIHByZXYtPnVzZXJfZGF0YSk7CisJCWlvX3JlcV9jb21wbGV0
ZV9wb3N0KHJlcSwgcmV0ID86IC1FVElNRSwgMCk7CisJCWlvX3B1dF9yZXEocHJldik7CisJ
fSBlbHNlIHsKKwkJaW9fcmVxX2NvbXBsZXRlX3Bvc3QocmVxLCAtRVRJTUUsIDApOworCX0K
IH0KIAogc3RhdGljIGVudW0gaHJ0aW1lcl9yZXN0YXJ0IGlvX2xpbmtfdGltZW91dF9mbihz
dHJ1Y3QgaHJ0aW1lciAqdGltZXIpCiB7CiAJc3RydWN0IGlvX3RpbWVvdXRfZGF0YSAqZGF0
YSA9IGNvbnRhaW5lcl9vZih0aW1lciwKIAkJCQkJCXN0cnVjdCBpb190aW1lb3V0X2RhdGEs
IHRpbWVyKTsKLQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSA9IGRhdGEtPnJlcTsKKwlzdHJ1Y3Qg
aW9fa2lvY2IgKnByZXYsICpyZXEgPSBkYXRhLT5yZXE7CiAJc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHggPSByZXEtPmN0eDsKLQlzdHJ1Y3QgaW9fa2lvY2IgKnByZXYgPSBOVUxMOwogCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgmY3R4LT5jb21wbGV0
aW9uX2xvY2ssIGZsYWdzKTsKKwlzcGluX2xvY2tfaXJxc2F2ZSgmY3R4LT50aW1lb3V0X2xv
Y2ssIGZsYWdzKTsKKwlwcmV2ID0gcmVxLT50aW1lb3V0LmhlYWQ7CisJcmVxLT50aW1lb3V0
LmhlYWQgPSBOVUxMOwogCiAJLyoKIAkgKiBXZSBkb24ndCBleHBlY3QgdGhlIGxpc3QgdG8g
YmUgZW1wdHksIHRoYXQgd2lsbCBvbmx5IGhhcHBlbiBpZiB3ZQogCSAqIHJhY2Ugd2l0aCB0
aGUgY29tcGxldGlvbiBvZiB0aGUgbGlua2VkIHdvcmsuCiAJICovCi0JaWYgKCFsaXN0X2Vt
cHR5KCZyZXEtPmxpbmtfbGlzdCkpIHsKLQkJcHJldiA9IGxpc3RfZW50cnkocmVxLT5saW5r
X2xpc3QucHJldiwgc3RydWN0IGlvX2tpb2NiLAotCQkJCSAgbGlua19saXN0KTsKLQkJbGlz
dF9kZWxfaW5pdCgmcmVxLT5saW5rX2xpc3QpOwotCQlpZiAoIXJlZmNvdW50X2luY19ub3Rf
emVybygmcHJldi0+cmVmcykpCisJaWYgKHByZXYpIHsKKwkJaW9fcmVtb3ZlX25leHRfbGlu
a2VkKHByZXYpOworCQlpZiAoIXJlcV9yZWZfaW5jX25vdF96ZXJvKHByZXYpKQogCQkJcHJl
diA9IE5VTEw7CiAJfQotCiAJbGlzdF9kZWwoJnJlcS0+dGltZW91dC5saXN0KTsKLQlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZjdHgtPmNvbXBsZXRpb25fbG9jaywgZmxhZ3MpOworCXJl
cS0+dGltZW91dC5wcmV2ID0gcHJldjsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdHgt
PnRpbWVvdXRfbG9jaywgZmxhZ3MpOwogCi0JaWYgKHByZXYpIHsKLQkJaW9fYXN5bmNfZmlu
ZF9hbmRfY2FuY2VsKGN0eCwgcmVxLCBwcmV2LT51c2VyX2RhdGEsIC1FVElNRSk7Ci0JCWlv
X3B1dF9yZXFfZGVmZXJyZWQocHJldiwgMSk7Ci0JfSBlbHNlIHsKLQkJaW9fY3FyaW5nX2Fk
ZF9ldmVudChyZXEsIC1FVElNRSwgMCk7Ci0JCWlvX3B1dF9yZXFfZGVmZXJyZWQocmVxLCAx
KTsKLQl9CisJcmVxLT5pb190YXNrX3dvcmsuZnVuYyA9IGlvX3JlcV90YXNrX2xpbmtfdGlt
ZW91dDsKKwlpb19yZXFfdGFza193b3JrX2FkZChyZXEpOwogCXJldHVybiBIUlRJTUVSX05P
UkVTVEFSVDsKIH0KIAotc3RhdGljIHZvaWQgX19pb19xdWV1ZV9saW5rZWRfdGltZW91dChz
dHJ1Y3QgaW9fa2lvY2IgKnJlcSkKK3N0YXRpYyB2b2lkIGlvX3F1ZXVlX2xpbmtlZF90aW1l
b3V0KHN0cnVjdCBpb19raW9jYiAqcmVxKQogeworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4
ID0gcmVxLT5jdHg7CisKKwlzcGluX2xvY2tfaXJxKCZjdHgtPnRpbWVvdXRfbG9jayk7CiAJ
LyoKLQkgKiBJZiB0aGUgbGlzdCBpcyBub3cgZW1wdHksIHRoZW4gb3VyIGxpbmtlZCByZXF1
ZXN0IGZpbmlzaGVkIGJlZm9yZQotCSAqIHdlIGdvdCBhIGNoYW5jZSB0byBzZXR1cCB0aGUg
dGltZXIKKwkgKiBJZiB0aGUgYmFjayByZWZlcmVuY2UgaXMgTlVMTCwgdGhlbiBvdXIgbGlu
a2VkIHJlcXVlc3QgZmluaXNoZWQKKwkgKiBiZWZvcmUgd2UgZ290IGEgY2hhbmNlIHRvIHNl
dHVwIHRoZSB0aW1lcgogCSAqLwotCWlmICghbGlzdF9lbXB0eSgmcmVxLT5saW5rX2xpc3Qp
KSB7CisJaWYgKHJlcS0+dGltZW91dC5oZWFkKSB7CiAJCXN0cnVjdCBpb190aW1lb3V0X2Rh
dGEgKmRhdGEgPSByZXEtPmFzeW5jX2RhdGE7CiAKIAkJZGF0YS0+dGltZXIuZnVuY3Rpb24g
PSBpb19saW5rX3RpbWVvdXRfZm47CiAJCWhydGltZXJfc3RhcnQoJmRhdGEtPnRpbWVyLCB0
aW1lc3BlYzY0X3RvX2t0aW1lKGRhdGEtPnRzKSwKIAkJCQlkYXRhLT5tb2RlKTsKKwkJbGlz
dF9hZGRfdGFpbCgmcmVxLT50aW1lb3V0Lmxpc3QsICZjdHgtPmx0aW1lb3V0X2xpc3QpOwog
CX0KLX0KLQotc3RhdGljIHZvaWQgaW9fcXVldWVfbGlua2VkX3RpbWVvdXQoc3RydWN0IGlv
X2tpb2NiICpyZXEpCi17Ci0Jc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0eDsK
LQotCXNwaW5fbG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKLQlfX2lvX3F1ZXVl
X2xpbmtlZF90aW1lb3V0KHJlcSk7Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdHgtPmNvbXBsZXRp
b25fbG9jayk7Ci0KKwlzcGluX3VubG9ja19pcnEoJmN0eC0+dGltZW91dF9sb2NrKTsKIAkv
KiBkcm9wIHN1Ym1pc3Npb24gcmVmZXJlbmNlICovCiAJaW9fcHV0X3JlcShyZXEpOwogfQog
Ci1zdGF0aWMgc3RydWN0IGlvX2tpb2NiICppb19wcmVwX2xpbmtlZF90aW1lb3V0KHN0cnVj
dCBpb19raW9jYiAqcmVxKQotewotCXN0cnVjdCBpb19raW9jYiAqbnh0OwotCi0JaWYgKCEo
cmVxLT5mbGFncyAmIFJFUV9GX0xJTktfSEVBRCkpCi0JCXJldHVybiBOVUxMOwotCWlmIChy
ZXEtPmZsYWdzICYgUkVRX0ZfTElOS19USU1FT1VUKQotCQlyZXR1cm4gTlVMTDsKLQotCW54
dCA9IGxpc3RfZmlyc3RfZW50cnlfb3JfbnVsbCgmcmVxLT5saW5rX2xpc3QsIHN0cnVjdCBp
b19raW9jYiwKLQkJCQkJbGlua19saXN0KTsKLQlpZiAoIW54dCB8fCBueHQtPm9wY29kZSAh
PSBJT1JJTkdfT1BfTElOS19USU1FT1VUKQotCQlyZXR1cm4gTlVMTDsKLQotCW54dC0+Zmxh
Z3MgfD0gUkVRX0ZfTFRJTUVPVVRfQUNUSVZFOwotCXJlcS0+ZmxhZ3MgfD0gUkVRX0ZfTElO
S19USU1FT1VUOwotCXJldHVybiBueHQ7Ci19Ci0KLXN0YXRpYyB2b2lkIF9faW9fcXVldWVf
c3FlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1Y3QgaW9fY29tcF9zdGF0ZSAqY3MpCitz
dGF0aWMgdm9pZCBfX2lvX3F1ZXVlX3NxZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSkKKwlfX211
c3RfaG9sZCgmcmVxLT5jdHgtPnVyaW5nX2xvY2spCiB7CiAJc3RydWN0IGlvX2tpb2NiICps
aW5rZWRfdGltZW91dDsKLQljb25zdCBzdHJ1Y3QgY3JlZCAqb2xkX2NyZWRzID0gTlVMTDsK
IAlpbnQgcmV0OwogCi1hZ2FpbjoKLQlsaW5rZWRfdGltZW91dCA9IGlvX3ByZXBfbGlua2Vk
X3RpbWVvdXQocmVxKTsKLQotCWlmICgocmVxLT5mbGFncyAmIFJFUV9GX1dPUktfSU5JVElB
TElaRUQpICYmCi0JICAgIChyZXEtPndvcmsuZmxhZ3MgJiBJT19XUV9XT1JLX0NSRURTKSAm
JgotCSAgICByZXEtPndvcmsuaWRlbnRpdHktPmNyZWRzICE9IGN1cnJlbnRfY3JlZCgpKSB7
Ci0JCWlmIChvbGRfY3JlZHMpCi0JCQlyZXZlcnRfY3JlZHMob2xkX2NyZWRzKTsKLQkJaWYg
KG9sZF9jcmVkcyA9PSByZXEtPndvcmsuaWRlbnRpdHktPmNyZWRzKQotCQkJb2xkX2NyZWRz
ID0gTlVMTDsgLyogcmVzdG9yZWQgb3JpZ2luYWwgY3JlZHMgKi8KLQkJZWxzZQotCQkJb2xk
X2NyZWRzID0gb3ZlcnJpZGVfY3JlZHMocmVxLT53b3JrLmlkZW50aXR5LT5jcmVkcyk7Ci0J
fQotCi0JcmV0ID0gaW9faXNzdWVfc3FlKHJlcSwgdHJ1ZSwgY3MpOworaXNzdWVfc3FlOgor
CXJldCA9IGlvX2lzc3VlX3NxZShyZXEsIElPX1VSSU5HX0ZfTk9OQkxPQ0t8SU9fVVJJTkdf
Rl9DT01QTEVURV9ERUZFUik7CiAKIAkvKgogCSAqIFdlIGFzeW5jIHB1bnQgaXQgaWYgdGhl
IGZpbGUgd2Fzbid0IG1hcmtlZCBOT1dBSVQsIG9yIGlmIHRoZSBmaWxlCiAJICogZG9lc24n
dCBzdXBwb3J0IG5vbi1ibG9ja2luZyByZWFkL3dyaXRlIGF0dGVtcHRzCiAJICovCi0JaWYg
KHJldCA9PSAtRUFHQUlOICYmICEocmVxLT5mbGFncyAmIFJFUV9GX05PV0FJVCkpIHsKLQkJ
aWYgKCFpb19hcm1fcG9sbF9oYW5kbGVyKHJlcSkpIHsKKwlpZiAobGlrZWx5KCFyZXQpKSB7
CisJCWlmIChyZXEtPmZsYWdzICYgUkVRX0ZfQ09NUExFVEVfSU5MSU5FKSB7CisJCQlzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCA9IHJlcS0+Y3R4OworCQkJc3RydWN0IGlvX3N1Ym1pdF9z
dGF0ZSAqc3RhdGUgPSAmY3R4LT5zdWJtaXRfc3RhdGU7CisKKwkJCXN0YXRlLT5jb21wbF9y
ZXFzW3N0YXRlLT5jb21wbF9ucisrXSA9IHJlcTsKKwkJCWlmIChzdGF0ZS0+Y29tcGxfbnIg
PT0gQVJSQVlfU0laRShzdGF0ZS0+Y29tcGxfcmVxcykpCisJCQkJaW9fc3VibWl0X2ZsdXNo
X2NvbXBsZXRpb25zKGN0eCk7CisJCQlyZXR1cm47CisJCX0KKworCQlsaW5rZWRfdGltZW91
dCA9IGlvX3ByZXBfbGlua2VkX3RpbWVvdXQocmVxKTsKKwkJaWYgKGxpbmtlZF90aW1lb3V0
KQorCQkJaW9fcXVldWVfbGlua2VkX3RpbWVvdXQobGlua2VkX3RpbWVvdXQpOworCX0gZWxz
ZSBpZiAocmV0ID09IC1FQUdBSU4gJiYgIShyZXEtPmZsYWdzICYgUkVRX0ZfTk9XQUlUKSkg
eworCQlsaW5rZWRfdGltZW91dCA9IGlvX3ByZXBfbGlua2VkX3RpbWVvdXQocmVxKTsKKwor
CQlzd2l0Y2ggKGlvX2FybV9wb2xsX2hhbmRsZXIocmVxKSkgeworCQljYXNlIElPX0FQT0xM
X1JFQURZOgorCQkJaWYgKGxpbmtlZF90aW1lb3V0KQorCQkJCWlvX3F1ZXVlX2xpbmtlZF90
aW1lb3V0KGxpbmtlZF90aW1lb3V0KTsKKwkJCWdvdG8gaXNzdWVfc3FlOworCQljYXNlIElP
X0FQT0xMX0FCT1JURUQ6CiAJCQkvKgogCQkJICogUXVldWVkIHVwIGZvciBhc3luYyBleGVj
dXRpb24sIHdvcmtlciB3aWxsIHJlbGVhc2UKIAkJCSAqIHN1Ym1pdCByZWZlcmVuY2Ugd2hl
biB0aGUgaW9jYiBpcyBhY3R1YWxseSBzdWJtaXR0ZWQuCiAJCQkgKi8KLQkJCWlvX3F1ZXVl
X2FzeW5jX3dvcmsocmVxKTsKKwkJCWlvX3F1ZXVlX2FzeW5jX3dvcmsocmVxLCBOVUxMKTsK
KwkJCWJyZWFrOwogCQl9CiAKIAkJaWYgKGxpbmtlZF90aW1lb3V0KQogCQkJaW9fcXVldWVf
bGlua2VkX3RpbWVvdXQobGlua2VkX3RpbWVvdXQpOwotCX0gZWxzZSBpZiAobGlrZWx5KCFy
ZXQpKSB7Ci0JCS8qIGRyb3Agc3VibWlzc2lvbiByZWZlcmVuY2UgKi8KLQkJcmVxID0gaW9f
cHV0X3JlcV9maW5kX25leHQocmVxKTsKLQkJaWYgKGxpbmtlZF90aW1lb3V0KQotCQkJaW9f
cXVldWVfbGlua2VkX3RpbWVvdXQobGlua2VkX3RpbWVvdXQpOwotCi0JCWlmIChyZXEpIHsK
LQkJCWlmICghKHJlcS0+ZmxhZ3MgJiBSRVFfRl9GT1JDRV9BU1lOQykpCi0JCQkJZ290byBh
Z2FpbjsKLQkJCWlvX3F1ZXVlX2FzeW5jX3dvcmsocmVxKTsKLQkJfQogCX0gZWxzZSB7Ci0J
CS8qIHVuLXByZXAgdGltZW91dCwgc28gaXQnbGwgYmUga2lsbGVkIGFzIGFueSBvdGhlciBs
aW5rZWQgKi8KLQkJcmVxLT5mbGFncyAmPSB+UkVRX0ZfTElOS19USU1FT1VUOwotCQlyZXFf
c2V0X2ZhaWxfbGlua3MocmVxKTsKLQkJaW9fcHV0X3JlcShyZXEpOwotCQlpb19yZXFfY29t
cGxldGUocmVxLCByZXQpOworCQlpb19yZXFfY29tcGxldGVfZmFpbGVkKHJlcSwgcmV0KTsK
IAl9Ci0KLQlpZiAob2xkX2NyZWRzKQotCQlyZXZlcnRfY3JlZHMob2xkX2NyZWRzKTsKIH0K
IAotc3RhdGljIHZvaWQgaW9fcXVldWVfc3FlKHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25z
dCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUsCi0JCQkgc3RydWN0IGlvX2NvbXBfc3RhdGUg
KmNzKQorc3RhdGljIGlubGluZSB2b2lkIGlvX3F1ZXVlX3NxZShzdHJ1Y3QgaW9fa2lvY2Ig
KnJlcSkKKwlfX211c3RfaG9sZCgmcmVxLT5jdHgtPnVyaW5nX2xvY2spCiB7Ci0JaW50IHJl
dDsKKwlpZiAodW5saWtlbHkocmVxLT5jdHgtPmRyYWluX2FjdGl2ZSkgJiYgaW9fZHJhaW5f
cmVxKHJlcSkpCisJCXJldHVybjsKIAotCXJldCA9IGlvX3JlcV9kZWZlcihyZXEsIHNxZSk7
Ci0JaWYgKHJldCkgewotCQlpZiAocmV0ICE9IC1FSU9DQlFVRVVFRCkgewotZmFpbF9yZXE6
Ci0JCQlyZXFfc2V0X2ZhaWxfbGlua3MocmVxKTsKLQkJCWlvX3B1dF9yZXEocmVxKTsKLQkJ
CWlvX3JlcV9jb21wbGV0ZShyZXEsIHJldCk7Ci0JCX0KLQl9IGVsc2UgaWYgKHJlcS0+Zmxh
Z3MgJiBSRVFfRl9GT1JDRV9BU1lOQykgewotCQlpZiAoIXJlcS0+YXN5bmNfZGF0YSkgewot
CQkJcmV0ID0gaW9fcmVxX2RlZmVyX3ByZXAocmVxLCBzcWUpOwotCQkJaWYgKHVubGlrZWx5
KHJldCkpCi0JCQkJZ290byBmYWlsX3JlcTsKLQkJfQotCQlpb19xdWV1ZV9hc3luY193b3Jr
KHJlcSk7CisJaWYgKGxpa2VseSghKHJlcS0+ZmxhZ3MgJiAoUkVRX0ZfRk9SQ0VfQVNZTkMg
fCBSRVFfRl9GQUlMKSkpKSB7CisJCV9faW9fcXVldWVfc3FlKHJlcSk7CisJfSBlbHNlIGlm
IChyZXEtPmZsYWdzICYgUkVRX0ZfRkFJTCkgeworCQlpb19yZXFfY29tcGxldGVfZmFpbF9z
dWJtaXQocmVxKTsKIAl9IGVsc2UgewotCQlpZiAoc3FlKSB7Ci0JCQlyZXQgPSBpb19yZXFf
cHJlcChyZXEsIHNxZSk7Ci0JCQlpZiAodW5saWtlbHkocmV0KSkKLQkJCQlnb3RvIGZhaWxf
cmVxOwotCQl9Ci0JCV9faW9fcXVldWVfc3FlKHJlcSwgY3MpOworCQlpbnQgcmV0ID0gaW9f
cmVxX3ByZXBfYXN5bmMocmVxKTsKKworCQlpZiAodW5saWtlbHkocmV0KSkKKwkJCWlvX3Jl
cV9jb21wbGV0ZV9mYWlsZWQocmVxLCByZXQpOworCQllbHNlCisJCQlpb19xdWV1ZV9hc3lu
Y193b3JrKHJlcSwgTlVMTCk7CiAJfQogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgaW9fcXVl
dWVfbGlua19oZWFkKHN0cnVjdCBpb19raW9jYiAqcmVxLAotCQkJCSAgICAgIHN0cnVjdCBp
b19jb21wX3N0YXRlICpjcykKKy8qCisgKiBDaGVjayBTUUUgcmVzdHJpY3Rpb25zIChvcGNv
ZGUgYW5kIGZsYWdzKS4KKyAqCisgKiBSZXR1cm5zICd0cnVlJyBpZiBTUUUgaXMgYWxsb3dl
ZCwgJ2ZhbHNlJyBvdGhlcndpc2UuCisgKi8KK3N0YXRpYyBpbmxpbmUgYm9vbCBpb19jaGVj
a19yZXN0cmljdGlvbihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKKwkJCQkJc3RydWN0IGlv
X2tpb2NiICpyZXEsCisJCQkJCXVuc2lnbmVkIGludCBzcWVfZmxhZ3MpCiB7Ci0JaWYgKHVu
bGlrZWx5KHJlcS0+ZmxhZ3MgJiBSRVFfRl9GQUlMX0xJTkspKSB7Ci0JCWlvX3B1dF9yZXEo
cmVxKTsKLQkJaW9fcmVxX2NvbXBsZXRlKHJlcSwgLUVDQU5DRUxFRCk7Ci0JfSBlbHNlCi0J
CWlvX3F1ZXVlX3NxZShyZXEsIE5VTEwsIGNzKTsKLX0KKwlpZiAobGlrZWx5KCFjdHgtPnJl
c3RyaWN0ZWQpKQorCQlyZXR1cm4gdHJ1ZTsKIAotc3RhdGljIGludCBpb19zdWJtaXRfc3Fl
KHN0cnVjdCBpb19raW9jYiAqcmVxLCBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWUs
Ci0JCQkgc3RydWN0IGlvX2tpb2NiICoqbGluaywgc3RydWN0IGlvX2NvbXBfc3RhdGUgKmNz
KQotewotCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcmVxLT5jdHg7Ci0JaW50IHJldDsK
KwlpZiAoIXRlc3RfYml0KHJlcS0+b3Bjb2RlLCBjdHgtPnJlc3RyaWN0aW9ucy5zcWVfb3Ap
KQorCQlyZXR1cm4gZmFsc2U7CiAKLQkvKgotCSAqIElmIHdlIGFscmVhZHkgaGF2ZSBhIGhl
YWQgcmVxdWVzdCwgcXVldWUgdGhpcyBvbmUgZm9yIGFzeW5jCi0JICogc3VibWl0dGFsIG9u
Y2UgdGhlIGhlYWQgY29tcGxldGVzLiBJZiB3ZSBkb24ndCBoYXZlIGEgaGVhZCBidXQKLQkg
KiBJT1NRRV9JT19MSU5LIGlzIHNldCBpbiB0aGUgc3FlLCBzdGFydCBhIG5ldyBoZWFkLiBU
aGlzIG9uZSB3aWxsIGJlCi0JICogc3VibWl0dGVkIHN5bmMgb25jZSB0aGUgY2hhaW4gaXMg
Y29tcGxldGUuIElmIG5vbmUgb2YgdGhvc2UKLQkgKiBjb25kaXRpb25zIGFyZSB0cnVlIChu
b3JtYWwgcmVxdWVzdCksIHRoZW4ganVzdCBxdWV1ZSBpdC4KLQkgKi8KLQlpZiAoKmxpbmsp
IHsKLQkJc3RydWN0IGlvX2tpb2NiICpoZWFkID0gKmxpbms7CisJaWYgKChzcWVfZmxhZ3Mg
JiBjdHgtPnJlc3RyaWN0aW9ucy5zcWVfZmxhZ3NfcmVxdWlyZWQpICE9CisJICAgIGN0eC0+
cmVzdHJpY3Rpb25zLnNxZV9mbGFnc19yZXF1aXJlZCkKKwkJcmV0dXJuIGZhbHNlOwogCi0J
CS8qCi0JCSAqIFRha2luZyBzZXF1ZW50aWFsIGV4ZWN1dGlvbiBvZiBhIGxpbmssIGRyYWlu
aW5nIGJvdGggc2lkZXMKLQkJICogb2YgdGhlIGxpbmsgYWxzbyBmdWxsZmlscyBJT1NRRV9J
T19EUkFJTiBzZW1hbnRpY3MgZm9yIGFsbAotCQkgKiByZXF1ZXN0cyBpbiB0aGUgbGluay4g
U28sIGl0IGRyYWlucyB0aGUgaGVhZCBhbmQgdGhlCi0JCSAqIG5leHQgYWZ0ZXIgdGhlIGxp
bmsgcmVxdWVzdC4gVGhlIGxhc3Qgb25lIGlzIGRvbmUgdmlhCi0JCSAqIGRyYWluX25leHQg
ZmxhZyB0byBwZXJzaXN0IHRoZSBlZmZlY3QgYWNyb3NzIGNhbGxzLgotCQkgKi8KLQkJaWYg
KHJlcS0+ZmxhZ3MgJiBSRVFfRl9JT19EUkFJTikgewotCQkJaGVhZC0+ZmxhZ3MgfD0gUkVR
X0ZfSU9fRFJBSU47Ci0JCQljdHgtPmRyYWluX25leHQgPSAxOwotCQl9Ci0JCXJldCA9IGlv
X3JlcV9kZWZlcl9wcmVwKHJlcSwgc3FlKTsKLQkJaWYgKHVubGlrZWx5KHJldCkpIHsKLQkJ
CS8qIGZhaWwgZXZlbiBoYXJkIGxpbmtzIHNpbmNlIHdlIGRvbid0IHN1Ym1pdCAqLwotCQkJ
aGVhZC0+ZmxhZ3MgfD0gUkVRX0ZfRkFJTF9MSU5LOwotCQkJcmV0dXJuIHJldDsKLQkJfQot
CQl0cmFjZV9pb191cmluZ19saW5rKGN0eCwgcmVxLCBoZWFkKTsKLQkJbGlzdF9hZGRfdGFp
bCgmcmVxLT5saW5rX2xpc3QsICZoZWFkLT5saW5rX2xpc3QpOworCWlmIChzcWVfZmxhZ3Mg
JiB+KGN0eC0+cmVzdHJpY3Rpb25zLnNxZV9mbGFnc19hbGxvd2VkIHwKKwkJCSAgY3R4LT5y
ZXN0cmljdGlvbnMuc3FlX2ZsYWdzX3JlcXVpcmVkKSkKKwkJcmV0dXJuIGZhbHNlOwogCi0J
CS8qIGxhc3QgcmVxdWVzdCBvZiBhIGxpbmssIGVucXVldWUgdGhlIGxpbmsgKi8KLQkJaWYg
KCEocmVxLT5mbGFncyAmIChSRVFfRl9MSU5LIHwgUkVRX0ZfSEFSRExJTkspKSkgewotCQkJ
aW9fcXVldWVfbGlua19oZWFkKGhlYWQsIGNzKTsKLQkJCSpsaW5rID0gTlVMTDsKKwlyZXR1
cm4gdHJ1ZTsKK30KKworc3RhdGljIGludCBpb19pbml0X3JlcShzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCwgc3RydWN0IGlvX2tpb2NiICpyZXEsCisJCSAgICAgICBjb25zdCBzdHJ1Y3Qg
aW9fdXJpbmdfc3FlICpzcWUpCisJX19tdXN0X2hvbGQoJmN0eC0+dXJpbmdfbG9jaykKK3sK
KwlzdHJ1Y3QgaW9fc3VibWl0X3N0YXRlICpzdGF0ZTsKKwl1bnNpZ25lZCBpbnQgc3FlX2Zs
YWdzOworCWludCBwZXJzb25hbGl0eSwgcmV0ID0gMDsKKworCS8qIHJlcSBpcyBwYXJ0aWFs
bHkgcHJlLWluaXRpYWxpc2VkLCBzZWUgaW9fcHJlaW5pdF9yZXEoKSAqLworCXJlcS0+b3Bj
b2RlID0gUkVBRF9PTkNFKHNxZS0+b3Bjb2RlKTsKKwkvKiBzYW1lIG51bWVyaWNhbCB2YWx1
ZXMgd2l0aCBjb3JyZXNwb25kaW5nIFJFUV9GXyosIHNhZmUgdG8gY29weSAqLworCXJlcS0+
ZmxhZ3MgPSBzcWVfZmxhZ3MgPSBSRUFEX09OQ0Uoc3FlLT5mbGFncyk7CisJcmVxLT51c2Vy
X2RhdGEgPSBSRUFEX09OQ0Uoc3FlLT51c2VyX2RhdGEpOworCXJlcS0+ZmlsZSA9IE5VTEw7
CisJcmVxLT5maXhlZF9yc3JjX3JlZnMgPSBOVUxMOworCXJlcS0+dGFzayA9IGN1cnJlbnQ7
CisKKwkvKiBlbmZvcmNlIGZvcndhcmRzIGNvbXBhdGliaWxpdHkgb24gdXNlcnMgKi8KKwlp
ZiAodW5saWtlbHkoc3FlX2ZsYWdzICYgflNRRV9WQUxJRF9GTEFHUykpCisJCXJldHVybiAt
RUlOVkFMOworCWlmICh1bmxpa2VseShyZXEtPm9wY29kZSA+PSBJT1JJTkdfT1BfTEFTVCkp
CisJCXJldHVybiAtRUlOVkFMOworCWlmICghaW9fY2hlY2tfcmVzdHJpY3Rpb24oY3R4LCBy
ZXEsIHNxZV9mbGFncykpCisJCXJldHVybiAtRUFDQ0VTOworCisJaWYgKChzcWVfZmxhZ3Mg
JiBJT1NRRV9CVUZGRVJfU0VMRUNUKSAmJgorCSAgICAhaW9fb3BfZGVmc1tyZXEtPm9wY29k
ZV0uYnVmZmVyX3NlbGVjdCkKKwkJcmV0dXJuIC1FT1BOT1RTVVBQOworCWlmICh1bmxpa2Vs
eShzcWVfZmxhZ3MgJiBJT1NRRV9JT19EUkFJTikpCisJCWN0eC0+ZHJhaW5fYWN0aXZlID0g
dHJ1ZTsKKworCXBlcnNvbmFsaXR5ID0gUkVBRF9PTkNFKHNxZS0+cGVyc29uYWxpdHkpOwor
CWlmIChwZXJzb25hbGl0eSkgeworCQlyZXEtPmNyZWRzID0geGFfbG9hZCgmY3R4LT5wZXJz
b25hbGl0aWVzLCBwZXJzb25hbGl0eSk7CisJCWlmICghcmVxLT5jcmVkcykKKwkJCXJldHVy
biAtRUlOVkFMOworCQlnZXRfY3JlZChyZXEtPmNyZWRzKTsKKwkJcmVxLT5mbGFncyB8PSBS
RVFfRl9DUkVEUzsKKwl9CisJc3RhdGUgPSAmY3R4LT5zdWJtaXRfc3RhdGU7CisKKwkvKgor
CSAqIFBsdWcgbm93IGlmIHdlIGhhdmUgbW9yZSB0aGFuIDEgSU8gbGVmdCBhZnRlciB0aGlz
LCBhbmQgdGhlIHRhcmdldAorCSAqIGlzIHBvdGVudGlhbGx5IGEgcmVhZC93cml0ZSB0byBi
bG9jayBiYXNlZCBzdG9yYWdlLgorCSAqLworCWlmICghc3RhdGUtPnBsdWdfc3RhcnRlZCAm
JiBzdGF0ZS0+aW9zX2xlZnQgPiAxICYmCisJICAgIGlvX29wX2RlZnNbcmVxLT5vcGNvZGVd
LnBsdWcpIHsKKwkJYmxrX3N0YXJ0X3BsdWcoJnN0YXRlLT5wbHVnKTsKKwkJc3RhdGUtPnBs
dWdfc3RhcnRlZCA9IHRydWU7CisJfQorCisJaWYgKGlvX29wX2RlZnNbcmVxLT5vcGNvZGVd
Lm5lZWRzX2ZpbGUpIHsKKwkJcmVxLT5maWxlID0gaW9fZmlsZV9nZXQoY3R4LCByZXEsIFJF
QURfT05DRShzcWUtPmZkKSwKKwkJCQkJKHNxZV9mbGFncyAmIElPU1FFX0ZJWEVEX0ZJTEUp
KTsKKwkJaWYgKHVubGlrZWx5KCFyZXEtPmZpbGUpKQorCQkJcmV0ID0gLUVCQURGOworCX0K
KworCXN0YXRlLT5pb3NfbGVmdC0tOworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQg
aW9fc3VibWl0X3NxZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGlvX2tpb2Ni
ICpyZXEsCisJCQkgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3NxZSAqc3FlKQorCV9fbXVzdF9o
b2xkKCZjdHgtPnVyaW5nX2xvY2spCit7CisJc3RydWN0IGlvX3N1Ym1pdF9saW5rICpsaW5r
ID0gJmN0eC0+c3VibWl0X3N0YXRlLmxpbms7CisJaW50IHJldDsKKworCXJldCA9IGlvX2lu
aXRfcmVxKGN0eCwgcmVxLCBzcWUpOworCWlmICh1bmxpa2VseShyZXQpKSB7CitmYWlsX3Jl
cToKKwkJLyogZmFpbCBldmVuIGhhcmQgbGlua3Mgc2luY2Ugd2UgZG9uJ3Qgc3VibWl0ICov
CisJCWlmIChsaW5rLT5oZWFkKSB7CisJCQkvKgorCQkJICogd2UgY2FuIGp1ZGdlIGEgbGlu
ayByZXEgaXMgZmFpbGVkIG9yIGNhbmNlbGxlZCBieSBpZgorCQkJICogUkVRX0ZfRkFJTCBp
cyBzZXQsIGJ1dCB0aGUgaGVhZCBpcyBhbiBleGNlcHRpb24gc2luY2UKKwkJCSAqIGl0IG1h
eSBiZSBzZXQgUkVRX0ZfRkFJTCBiZWNhdXNlIG9mIG90aGVyIHJlcSdzIGZhaWx1cmUKKwkJ
CSAqIHNvIGxldCdzIGxldmVyYWdlIHJlcS0+cmVzdWx0IHRvIGRpc3Rpbmd1aXNoIGlmIGEg
aGVhZAorCQkJICogaXMgc2V0IFJFUV9GX0ZBSUwgYmVjYXVzZSBvZiBpdHMgZmFpbHVyZSBv
ciBvdGhlciByZXEncworCQkJICogZmFpbHVyZSBzbyB0aGF0IHdlIGNhbiBzZXQgdGhlIGNv
cnJlY3QgcmV0IGNvZGUgZm9yIGl0LgorCQkJICogaW5pdCByZXN1bHQgaGVyZSB0byBhdm9p
ZCBhZmZlY3RpbmcgdGhlIG5vcm1hbCBwYXRoLgorCQkJICovCisJCQlpZiAoIShsaW5rLT5o
ZWFkLT5mbGFncyAmIFJFUV9GX0ZBSUwpKQorCQkJCXJlcV9mYWlsX2xpbmtfbm9kZShsaW5r
LT5oZWFkLCAtRUNBTkNFTEVEKTsKKwkJfSBlbHNlIGlmICghKHJlcS0+ZmxhZ3MgJiAoUkVR
X0ZfTElOSyB8IFJFUV9GX0hBUkRMSU5LKSkpIHsKKwkJCS8qCisJCQkgKiB0aGUgY3VycmVu
dCByZXEgaXMgYSBub3JtYWwgcmVxLCB3ZSBzaG91bGQgcmV0dXJuCisJCQkgKiBlcnJvciBh
bmQgdGh1cyBicmVhayB0aGUgc3VibWl0dGlvbiBsb29wLgorCQkJICovCisJCQlpb19yZXFf
Y29tcGxldGVfZmFpbGVkKHJlcSwgcmV0KTsKKwkJCXJldHVybiByZXQ7CiAJCX0KKwkJcmVx
X2ZhaWxfbGlua19ub2RlKHJlcSwgcmV0KTsKIAl9IGVsc2UgewotCQlpZiAodW5saWtlbHko
Y3R4LT5kcmFpbl9uZXh0KSkgewotCQkJcmVxLT5mbGFncyB8PSBSRVFfRl9JT19EUkFJTjsK
LQkJCWN0eC0+ZHJhaW5fbmV4dCA9IDA7CisJCXJldCA9IGlvX3JlcV9wcmVwKHJlcSwgc3Fl
KTsKKwkJaWYgKHVubGlrZWx5KHJldCkpCisJCQlnb3RvIGZhaWxfcmVxOworCX0KKworCS8q
IGRvbid0IG5lZWQgQHNxZSBmcm9tIG5vdyBvbiAqLworCXRyYWNlX2lvX3VyaW5nX3N1Ym1p
dF9zcWUoY3R4LCByZXEsIHJlcS0+b3Bjb2RlLCByZXEtPnVzZXJfZGF0YSwKKwkJCQkgIHJl
cS0+ZmxhZ3MsIHRydWUsCisJCQkJICBjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NRUE9M
TCk7CisKKwkvKgorCSAqIElmIHdlIGFscmVhZHkgaGF2ZSBhIGhlYWQgcmVxdWVzdCwgcXVl
dWUgdGhpcyBvbmUgZm9yIGFzeW5jCisJICogc3VibWl0dGFsIG9uY2UgdGhlIGhlYWQgY29t
cGxldGVzLiBJZiB3ZSBkb24ndCBoYXZlIGEgaGVhZCBidXQKKwkgKiBJT1NRRV9JT19MSU5L
IGlzIHNldCBpbiB0aGUgc3FlLCBzdGFydCBhIG5ldyBoZWFkLiBUaGlzIG9uZSB3aWxsIGJl
CisJICogc3VibWl0dGVkIHN5bmMgb25jZSB0aGUgY2hhaW4gaXMgY29tcGxldGUuIElmIG5v
bmUgb2YgdGhvc2UKKwkgKiBjb25kaXRpb25zIGFyZSB0cnVlIChub3JtYWwgcmVxdWVzdCks
IHRoZW4ganVzdCBxdWV1ZSBpdC4KKwkgKi8KKwlpZiAobGluay0+aGVhZCkgeworCQlzdHJ1
Y3QgaW9fa2lvY2IgKmhlYWQgPSBsaW5rLT5oZWFkOworCisJCWlmICghKHJlcS0+ZmxhZ3Mg
JiBSRVFfRl9GQUlMKSkgeworCQkJcmV0ID0gaW9fcmVxX3ByZXBfYXN5bmMocmVxKTsKKwkJ
CWlmICh1bmxpa2VseShyZXQpKSB7CisJCQkJcmVxX2ZhaWxfbGlua19ub2RlKHJlcSwgcmV0
KTsKKwkJCQlpZiAoIShoZWFkLT5mbGFncyAmIFJFUV9GX0ZBSUwpKQorCQkJCQlyZXFfZmFp
bF9saW5rX25vZGUoaGVhZCwgLUVDQU5DRUxFRCk7CisJCQl9CiAJCX0KLQkJaWYgKHJlcS0+
ZmxhZ3MgJiAoUkVRX0ZfTElOSyB8IFJFUV9GX0hBUkRMSU5LKSkgewotCQkJcmVxLT5mbGFn
cyB8PSBSRVFfRl9MSU5LX0hFQUQ7Ci0JCQlJTklUX0xJU1RfSEVBRCgmcmVxLT5saW5rX2xp
c3QpOworCQl0cmFjZV9pb191cmluZ19saW5rKGN0eCwgcmVxLCBoZWFkKTsKKwkJbGluay0+
bGFzdC0+bGluayA9IHJlcTsKKwkJbGluay0+bGFzdCA9IHJlcTsKIAotCQkJcmV0ID0gaW9f
cmVxX2RlZmVyX3ByZXAocmVxLCBzcWUpOwotCQkJaWYgKHVubGlrZWx5KHJldCkpCi0JCQkJ
cmVxLT5mbGFncyB8PSBSRVFfRl9GQUlMX0xJTks7Ci0JCQkqbGluayA9IHJlcTsKKwkJLyog
bGFzdCByZXF1ZXN0IG9mIGEgbGluaywgZW5xdWV1ZSB0aGUgbGluayAqLworCQlpZiAoIShy
ZXEtPmZsYWdzICYgKFJFUV9GX0xJTksgfCBSRVFfRl9IQVJETElOSykpKSB7CisJCQlsaW5r
LT5oZWFkID0gTlVMTDsKKwkJCWlvX3F1ZXVlX3NxZShoZWFkKTsKKwkJfQorCX0gZWxzZSB7
CisJCWlmIChyZXEtPmZsYWdzICYgKFJFUV9GX0xJTksgfCBSRVFfRl9IQVJETElOSykpIHsK
KwkJCWxpbmstPmhlYWQgPSByZXE7CisJCQlsaW5rLT5sYXN0ID0gcmVxOwogCQl9IGVsc2Ug
ewotCQkJaW9fcXVldWVfc3FlKHJlcSwgc3FlLCBjcyk7CisJCQlpb19xdWV1ZV9zcWUocmVx
KTsKIAkJfQogCX0KIApAQCAtNjQ4OCwyOSArNzA5MCwyNyBAQCBzdGF0aWMgaW50IGlvX3N1
Ym1pdF9zcWUoc3RydWN0IGlvX2tpb2NiICpyZXEsIGNvbnN0IHN0cnVjdCBpb191cmluZ19z
cWUgKnNxZSwKIC8qCiAgKiBCYXRjaGVkIHN1Ym1pc3Npb24gaXMgZG9uZSwgZW5zdXJlIGxv
Y2FsIElPIGlzIGZsdXNoZWQgb3V0LgogICovCi1zdGF0aWMgdm9pZCBpb19zdWJtaXRfc3Rh
dGVfZW5kKHN0cnVjdCBpb19zdWJtaXRfc3RhdGUgKnN0YXRlKQorc3RhdGljIHZvaWQgaW9f
c3VibWl0X3N0YXRlX2VuZChzdHJ1Y3QgaW9fc3VibWl0X3N0YXRlICpzdGF0ZSwKKwkJCQlz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKLQlpZiAoIWxpc3RfZW1wdHkoJnN0YXRlLT5j
b21wLmxpc3QpKQotCQlpb19zdWJtaXRfZmx1c2hfY29tcGxldGlvbnMoJnN0YXRlLT5jb21w
KTsKLQlibGtfZmluaXNoX3BsdWcoJnN0YXRlLT5wbHVnKTsKLQlpb19zdGF0ZV9maWxlX3B1
dChzdGF0ZSk7Ci0JaWYgKHN0YXRlLT5mcmVlX3JlcXMpCi0JCWttZW1fY2FjaGVfZnJlZV9i
dWxrKHJlcV9jYWNoZXAsIHN0YXRlLT5mcmVlX3JlcXMsIHN0YXRlLT5yZXFzKTsKKwlpZiAo
c3RhdGUtPmxpbmsuaGVhZCkKKwkJaW9fcXVldWVfc3FlKHN0YXRlLT5saW5rLmhlYWQpOwor
CWlmIChzdGF0ZS0+Y29tcGxfbnIpCisJCWlvX3N1Ym1pdF9mbHVzaF9jb21wbGV0aW9ucyhj
dHgpOworCWlmIChzdGF0ZS0+cGx1Z19zdGFydGVkKQorCQlibGtfZmluaXNoX3BsdWcoJnN0
YXRlLT5wbHVnKTsKIH0KIAogLyoKICAqIFN0YXJ0IHN1Ym1pc3Npb24gc2lkZSBjYWNoZS4K
ICAqLwogc3RhdGljIHZvaWQgaW9fc3VibWl0X3N0YXRlX3N0YXJ0KHN0cnVjdCBpb19zdWJt
aXRfc3RhdGUgKnN0YXRlLAotCQkJCSAgc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHVuc2ln
bmVkIGludCBtYXhfaW9zKQotewotCWJsa19zdGFydF9wbHVnKCZzdGF0ZS0+cGx1Zyk7Ci0J
c3RhdGUtPmNvbXAubnIgPSAwOwotCUlOSVRfTElTVF9IRUFEKCZzdGF0ZS0+Y29tcC5saXN0
KTsKLQlzdGF0ZS0+Y29tcC5jdHggPSBjdHg7Ci0Jc3RhdGUtPmZyZWVfcmVxcyA9IDA7Ci0J
c3RhdGUtPmZpbGUgPSBOVUxMOworCQkJCSAgdW5zaWduZWQgaW50IG1heF9pb3MpCit7CisJ
c3RhdGUtPnBsdWdfc3RhcnRlZCA9IGZhbHNlOwogCXN0YXRlLT5pb3NfbGVmdCA9IG1heF9p
b3M7CisJLyogc2V0IG9ubHkgaGVhZCwgbm8gbmVlZCB0byBpbml0IGxpbmtfbGFzdCBpbiBh
ZHZhbmNlICovCisJc3RhdGUtPmxpbmsuaGVhZCA9IE5VTEw7CiB9CiAKIHN0YXRpYyB2b2lk
IGlvX2NvbW1pdF9zcXJpbmcoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCkBAIC02NTI2LDcg
KzcxMjYsNyBAQCBzdGF0aWMgdm9pZCBpb19jb21taXRfc3FyaW5nKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQogfQogCiAvKgotICogRmV0Y2ggYW4gc3FlLCBpZiBvbmUgaXMgYXZhaWxh
YmxlLiBOb3RlIHRoYXQgc3FlX3B0ciB3aWxsIHBvaW50IHRvIG1lbW9yeQorICogRmV0Y2gg
YW4gc3FlLCBpZiBvbmUgaXMgYXZhaWxhYmxlLiBOb3RlIHRoaXMgcmV0dXJucyBhIHBvaW50
ZXIgdG8gbWVtb3J5CiAgKiB0aGF0IGlzIG1hcHBlZCBieSB1c2Vyc3BhY2UuIFRoaXMgbWVh
bnMgdGhhdCBjYXJlIG5lZWRzIHRvIGJlIHRha2VuIHRvCiAgKiBlbnN1cmUgdGhhdCByZWFk
cyBhcmUgc3RhYmxlLCBhcyB3ZSBjYW5ub3QgcmVseSBvbiB1c2Vyc3BhY2UgYWx3YXlzCiAg
KiBiZWluZyBhIGdvb2QgY2l0aXplbi4gSWYgbWVtYmVycyBvZiB0aGUgc3FlIGFyZSB2YWxp
ZGF0ZWQgYW5kIHRoZW4gbGF0ZXIKQEAgLTY1MzUsOCArNzEzNSw4IEBAIHN0YXRpYyB2b2lk
IGlvX2NvbW1pdF9zcXJpbmcoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAgKi8KIHN0YXRp
YyBjb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICppb19nZXRfc3FlKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQogewotCXUzMiAqc3FfYXJyYXkgPSBjdHgtPnNxX2FycmF5OwotCXVuc2ln
bmVkIGhlYWQ7CisJdW5zaWduZWQgaGVhZCwgbWFzayA9IGN0eC0+c3FfZW50cmllcyAtIDE7
CisJdW5zaWduZWQgc3FfaWR4ID0gY3R4LT5jYWNoZWRfc3FfaGVhZCsrICYgbWFzazsKIAog
CS8qCiAJICogVGhlIGNhY2hlZCBzcSBoZWFkIChvciBjcSB0YWlsKSBzZXJ2ZXMgdHdvIHB1
cnBvc2VzOgpAQCAtNjU0Niw0MjMgKzcxNDYsMjU2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qg
aW9fdXJpbmdfc3FlICppb19nZXRfc3FlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogCSAq
IDIpIGFsbG93cyB0aGUga2VybmVsIHNpZGUgdG8gdHJhY2sgdGhlIGhlYWQgb24gaXRzIG93
biwgZXZlbgogCSAqICAgIHRob3VnaCB0aGUgYXBwbGljYXRpb24gaXMgdGhlIG9uZSB1cGRh
dGluZyBpdC4KIAkgKi8KLQloZWFkID0gUkVBRF9PTkNFKHNxX2FycmF5W2N0eC0+Y2FjaGVk
X3NxX2hlYWQgJiBjdHgtPnNxX21hc2tdKTsKKwloZWFkID0gUkVBRF9PTkNFKGN0eC0+c3Ff
YXJyYXlbc3FfaWR4XSk7CiAJaWYgKGxpa2VseShoZWFkIDwgY3R4LT5zcV9lbnRyaWVzKSkK
IAkJcmV0dXJuICZjdHgtPnNxX3NxZXNbaGVhZF07CiAKIAkvKiBkcm9wIGludmFsaWQgZW50
cmllcyAqLwotCWN0eC0+Y2FjaGVkX3NxX2Ryb3BwZWQrKzsKLQlXUklURV9PTkNFKGN0eC0+
cmluZ3MtPnNxX2Ryb3BwZWQsIGN0eC0+Y2FjaGVkX3NxX2Ryb3BwZWQpOworCWN0eC0+Y3Ff
ZXh0cmEtLTsKKwlXUklURV9PTkNFKGN0eC0+cmluZ3MtPnNxX2Ryb3BwZWQsCisJCSAgIFJF
QURfT05DRShjdHgtPnJpbmdzLT5zcV9kcm9wcGVkKSArIDEpOwogCXJldHVybiBOVUxMOwog
fQogCi1zdGF0aWMgaW5saW5lIHZvaWQgaW9fY29uc3VtZV9zcWUoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgpCi17Ci0JY3R4LT5jYWNoZWRfc3FfaGVhZCsrOwotfQotCi0vKgotICogQ2hl
Y2sgU1FFIHJlc3RyaWN0aW9ucyAob3Bjb2RlIGFuZCBmbGFncykuCi0gKgotICogUmV0dXJu
cyAndHJ1ZScgaWYgU1FFIGlzIGFsbG93ZWQsICdmYWxzZScgb3RoZXJ3aXNlLgotICovCi1z
dGF0aWMgaW5saW5lIGJvb2wgaW9fY2hlY2tfcmVzdHJpY3Rpb24oc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsCi0JCQkJCXN0cnVjdCBpb19raW9jYiAqcmVxLAotCQkJCQl1bnNpZ25lZCBp
bnQgc3FlX2ZsYWdzKQotewotCWlmICghY3R4LT5yZXN0cmljdGVkKQotCQlyZXR1cm4gdHJ1
ZTsKLQotCWlmICghdGVzdF9iaXQocmVxLT5vcGNvZGUsIGN0eC0+cmVzdHJpY3Rpb25zLnNx
ZV9vcCkpCi0JCXJldHVybiBmYWxzZTsKLQotCWlmICgoc3FlX2ZsYWdzICYgY3R4LT5yZXN0
cmljdGlvbnMuc3FlX2ZsYWdzX3JlcXVpcmVkKSAhPQotCSAgICBjdHgtPnJlc3RyaWN0aW9u
cy5zcWVfZmxhZ3NfcmVxdWlyZWQpCi0JCXJldHVybiBmYWxzZTsKLQotCWlmIChzcWVfZmxh
Z3MgJiB+KGN0eC0+cmVzdHJpY3Rpb25zLnNxZV9mbGFnc19hbGxvd2VkIHwKLQkJCSAgY3R4
LT5yZXN0cmljdGlvbnMuc3FlX2ZsYWdzX3JlcXVpcmVkKSkKLQkJcmV0dXJuIGZhbHNlOwot
Ci0JcmV0dXJuIHRydWU7Ci19Ci0KLSNkZWZpbmUgU1FFX1ZBTElEX0ZMQUdTCShJT1NRRV9G
SVhFRF9GSUxFfElPU1FFX0lPX0RSQUlOfElPU1FFX0lPX0xJTkt8CVwKLQkJCQlJT1NRRV9J
T19IQVJETElOSyB8IElPU1FFX0FTWU5DIHwgXAotCQkJCUlPU1FFX0JVRkZFUl9TRUxFQ1Qp
Ci0KLXN0YXRpYyBpbnQgaW9faW5pdF9yZXEoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0
cnVjdCBpb19raW9jYiAqcmVxLAotCQkgICAgICAgY29uc3Qgc3RydWN0IGlvX3VyaW5nX3Nx
ZSAqc3FlLAotCQkgICAgICAgc3RydWN0IGlvX3N1Ym1pdF9zdGF0ZSAqc3RhdGUpCi17Ci0J
dW5zaWduZWQgaW50IHNxZV9mbGFnczsKLQlpbnQgaWQsIHJldDsKLQotCXJlcS0+b3Bjb2Rl
ID0gUkVBRF9PTkNFKHNxZS0+b3Bjb2RlKTsKLQlyZXEtPnVzZXJfZGF0YSA9IFJFQURfT05D
RShzcWUtPnVzZXJfZGF0YSk7Ci0JcmVxLT5hc3luY19kYXRhID0gTlVMTDsKLQlyZXEtPmZp
bGUgPSBOVUxMOwotCXJlcS0+Y3R4ID0gY3R4OwotCXJlcS0+ZmxhZ3MgPSAwOwotCS8qIG9u
ZSBpcyBkcm9wcGVkIGFmdGVyIHN1Ym1pc3Npb24sIHRoZSBvdGhlciBhdCBjb21wbGV0aW9u
ICovCi0JcmVmY291bnRfc2V0KCZyZXEtPnJlZnMsIDIpOwotCXJlcS0+dGFzayA9IGN1cnJl
bnQ7Ci0JcmVxLT5yZXN1bHQgPSAwOwotCi0JaWYgKHVubGlrZWx5KHJlcS0+b3Bjb2RlID49
IElPUklOR19PUF9MQVNUKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAodW5saWtlbHko
aW9fc3FfdGhyZWFkX2FjcXVpcmVfbW0oY3R4LCByZXEpKSkKLQkJcmV0dXJuIC1FRkFVTFQ7
Ci0KLQlzcWVfZmxhZ3MgPSBSRUFEX09OQ0Uoc3FlLT5mbGFncyk7Ci0JLyogZW5mb3JjZSBm
b3J3YXJkcyBjb21wYXRpYmlsaXR5IG9uIHVzZXJzICovCi0JaWYgKHVubGlrZWx5KHNxZV9m
bGFncyAmIH5TUUVfVkFMSURfRkxBR1MpKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCWlmICh1
bmxpa2VseSghaW9fY2hlY2tfcmVzdHJpY3Rpb24oY3R4LCByZXEsIHNxZV9mbGFncykpKQot
CQlyZXR1cm4gLUVBQ0NFUzsKLQotCWlmICgoc3FlX2ZsYWdzICYgSU9TUUVfQlVGRkVSX1NF
TEVDVCkgJiYKLQkgICAgIWlvX29wX2RlZnNbcmVxLT5vcGNvZGVdLmJ1ZmZlcl9zZWxlY3Qp
Ci0JCXJldHVybiAtRU9QTk9UU1VQUDsKLQotCWlkID0gUkVBRF9PTkNFKHNxZS0+cGVyc29u
YWxpdHkpOwotCWlmIChpZCkgewotCQlzdHJ1Y3QgaW9faWRlbnRpdHkgKmlvZDsKLQotCQlp
b2QgPSB4YV9sb2FkKCZjdHgtPnBlcnNvbmFsaXRpZXMsIGlkKTsKLQkJaWYgKHVubGlrZWx5
KCFpb2QpKQotCQkJcmV0dXJuIC1FSU5WQUw7Ci0JCXJlZmNvdW50X2luYygmaW9kLT5jb3Vu
dCk7Ci0KLQkJX19pb19yZXFfaW5pdF9hc3luYyhyZXEpOwotCQlnZXRfY3JlZChpb2QtPmNy
ZWRzKTsKLQkJcmVxLT53b3JrLmlkZW50aXR5ID0gaW9kOwotCQlyZXEtPndvcmsuZmxhZ3Mg
fD0gSU9fV1FfV09SS19DUkVEUzsKLQl9Ci0KLQkvKiBzYW1lIG51bWVyaWNhbCB2YWx1ZXMg
d2l0aCBjb3JyZXNwb25kaW5nIFJFUV9GXyosIHNhZmUgdG8gY29weSAqLwotCXJlcS0+Zmxh
Z3MgfD0gc3FlX2ZsYWdzOwotCi0JaWYgKCFpb19vcF9kZWZzW3JlcS0+b3Bjb2RlXS5uZWVk
c19maWxlKQotCQlyZXR1cm4gMDsKLQotCXJldCA9IGlvX3JlcV9zZXRfZmlsZShzdGF0ZSwg
cmVxLCBSRUFEX09OQ0Uoc3FlLT5mZCkpOwotCXN0YXRlLT5pb3NfbGVmdC0tOwotCXJldHVy
biByZXQ7Ci19Ci0KIHN0YXRpYyBpbnQgaW9fc3VibWl0X3NxZXMoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHVuc2lnbmVkIGludCBucikKKwlfX211c3RfaG9sZCgmY3R4LT51cmluZ19s
b2NrKQogewotCXN0cnVjdCBpb19zdWJtaXRfc3RhdGUgc3RhdGU7Ci0Jc3RydWN0IGlvX2tp
b2NiICpsaW5rID0gTlVMTDsKLQlpbnQgaSwgc3VibWl0dGVkID0gMDsKLQotCS8qIGlmIHdl
IGhhdmUgYSBiYWNrbG9nIGFuZCBjb3VsZG4ndCBmbHVzaCBpdCBhbGwsIHJldHVybiBCVVNZ
ICovCi0JaWYgKHRlc3RfYml0KDAsICZjdHgtPnNxX2NoZWNrX292ZXJmbG93KSkgewotCQlp
ZiAoIV9faW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCwgZmFsc2UsIE5VTEwsIE5VTEwp
KQotCQkJcmV0dXJuIC1FQlVTWTsKLQl9CisJaW50IHN1Ym1pdHRlZCA9IDA7CiAKIAkvKiBt
YWtlIHN1cmUgU1EgZW50cnkgaXNuJ3QgcmVhZCBiZWZvcmUgdGFpbCAqLwogCW5yID0gbWlu
MyhuciwgY3R4LT5zcV9lbnRyaWVzLCBpb19zcXJpbmdfZW50cmllcyhjdHgpKTsKLQogCWlm
ICghcGVyY3B1X3JlZl90cnlnZXRfbWFueSgmY3R4LT5yZWZzLCBucikpCiAJCXJldHVybiAt
RUFHQUlOOworCWlvX2dldF90YXNrX3JlZnMobnIpOwogCi0JcGVyY3B1X2NvdW50ZXJfYWRk
KCZjdXJyZW50LT5pb191cmluZy0+aW5mbGlnaHQsIG5yKTsKLQlyZWZjb3VudF9hZGQobnIs
ICZjdXJyZW50LT51c2FnZSk7Ci0KLQlpb19zdWJtaXRfc3RhdGVfc3RhcnQoJnN0YXRlLCBj
dHgsIG5yKTsKLQotCWZvciAoaSA9IDA7IGkgPCBucjsgaSsrKSB7CisJaW9fc3VibWl0X3N0
YXRlX3N0YXJ0KCZjdHgtPnN1Ym1pdF9zdGF0ZSwgbnIpOworCXdoaWxlIChzdWJtaXR0ZWQg
PCBucikgewogCQljb25zdCBzdHJ1Y3QgaW9fdXJpbmdfc3FlICpzcWU7CiAJCXN0cnVjdCBp
b19raW9jYiAqcmVxOwotCQlpbnQgZXJyOwogCi0JCXNxZSA9IGlvX2dldF9zcWUoY3R4KTsK
LQkJaWYgKHVubGlrZWx5KCFzcWUpKSB7Ci0JCQlpb19jb25zdW1lX3NxZShjdHgpOwotCQkJ
YnJlYWs7Ci0JCX0KLQkJcmVxID0gaW9fYWxsb2NfcmVxKGN0eCwgJnN0YXRlKTsKKwkJcmVx
ID0gaW9fYWxsb2NfcmVxKGN0eCk7CiAJCWlmICh1bmxpa2VseSghcmVxKSkgewogCQkJaWYg
KCFzdWJtaXR0ZWQpCiAJCQkJc3VibWl0dGVkID0gLUVBR0FJTjsKIAkJCWJyZWFrOwogCQl9
Ci0JCWlvX2NvbnN1bWVfc3FlKGN0eCk7CisJCXNxZSA9IGlvX2dldF9zcWUoY3R4KTsKKwkJ
aWYgKHVubGlrZWx5KCFzcWUpKSB7CisJCQlsaXN0X2FkZCgmcmVxLT5pbmZsaWdodF9lbnRy
eSwgJmN0eC0+c3VibWl0X3N0YXRlLmZyZWVfbGlzdCk7CisJCQlicmVhazsKKwkJfQogCQkv
KiB3aWxsIGNvbXBsZXRlIGJleW9uZCB0aGlzIHBvaW50LCBjb3VudCBhcyBzdWJtaXR0ZWQg
Ki8KIAkJc3VibWl0dGVkKys7Ci0KLQkJZXJyID0gaW9faW5pdF9yZXEoY3R4LCByZXEsIHNx
ZSwgJnN0YXRlKTsKLQkJaWYgKHVubGlrZWx5KGVycikpIHsKLWZhaWxfcmVxOgotCQkJaW9f
cHV0X3JlcShyZXEpOwotCQkJaW9fcmVxX2NvbXBsZXRlKHJlcSwgZXJyKTsKKwkJaWYgKGlv
X3N1Ym1pdF9zcWUoY3R4LCByZXEsIHNxZSkpCiAJCQlicmVhazsKLQkJfQotCi0JCXRyYWNl
X2lvX3VyaW5nX3N1Ym1pdF9zcWUoY3R4LCByZXEtPm9wY29kZSwgcmVxLT51c2VyX2RhdGEs
Ci0JCQkJCQl0cnVlLCBpb19hc3luY19zdWJtaXQoY3R4KSk7Ci0JCWVyciA9IGlvX3N1Ym1p
dF9zcWUocmVxLCBzcWUsICZsaW5rLCAmc3RhdGUuY29tcCk7Ci0JCWlmIChlcnIpCi0JCQln
b3RvIGZhaWxfcmVxOwogCX0KIAogCWlmICh1bmxpa2VseShzdWJtaXR0ZWQgIT0gbnIpKSB7
CiAJCWludCByZWZfdXNlZCA9IChzdWJtaXR0ZWQgPT0gLUVBR0FJTikgPyAwIDogc3VibWl0
dGVkOwotCQlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGN1cnJlbnQtPmlvX3VyaW5n
OwogCQlpbnQgdW51c2VkID0gbnIgLSByZWZfdXNlZDsKIAorCQljdXJyZW50LT5pb191cmlu
Zy0+Y2FjaGVkX3JlZnMgKz0gdW51c2VkOwogCQlwZXJjcHVfcmVmX3B1dF9tYW55KCZjdHgt
PnJlZnMsIHVudXNlZCk7Ci0JCXBlcmNwdV9jb3VudGVyX3N1YigmdGN0eC0+aW5mbGlnaHQs
IHVudXNlZCk7Ci0JCXB1dF90YXNrX3N0cnVjdF9tYW55KGN1cnJlbnQsIHVudXNlZCk7CiAJ
fQotCWlmIChsaW5rKQotCQlpb19xdWV1ZV9saW5rX2hlYWQobGluaywgJnN0YXRlLmNvbXAp
OwotCWlvX3N1Ym1pdF9zdGF0ZV9lbmQoJnN0YXRlKTsKIAorCWlvX3N1Ym1pdF9zdGF0ZV9l
bmQoJmN0eC0+c3VibWl0X3N0YXRlLCBjdHgpOwogCSAvKiBDb21taXQgU1EgcmluZyBoZWFk
IG9uY2Ugd2UndmUgY29uc3VtZWQgYW5kIHN1Ym1pdHRlZCBhbGwgU1FFcyAqLwogCWlvX2Nv
bW1pdF9zcXJpbmcoY3R4KTsKIAogCXJldHVybiBzdWJtaXR0ZWQ7CiB9CiAKLXN0YXRpYyBp
bmxpbmUgdm9pZCBpb19yaW5nX3NldF93YWtldXBfZmxhZyhzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCkKK3N0YXRpYyBpbmxpbmUgYm9vbCBpb19zcWRfZXZlbnRzX3BlbmRpbmcoc3RydWN0
IGlvX3NxX2RhdGEgKnNxZCkKIHsKLQkvKiBUZWxsIHVzZXJzcGFjZSB3ZSBtYXkgbmVlZCBh
IHdha2V1cCBjYWxsICovCi0Jc3Bpbl9sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2sp
OwotCWN0eC0+cmluZ3MtPnNxX2ZsYWdzIHw9IElPUklOR19TUV9ORUVEX1dBS0VVUDsKLQlz
cGluX3VubG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlyZXR1cm4gUkVBRF9P
TkNFKHNxZC0+c3RhdGUpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgaW9fcmluZ19jbGVh
cl93YWtldXBfZmxhZyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3N0YXRpYyBpbmxpbmUg
dm9pZCBpb19yaW5nX3NldF93YWtldXBfZmxhZyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkK
IHsKLQlzcGluX2xvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7Ci0JY3R4LT5yaW5n
cy0+c3FfZmxhZ3MgJj0gfklPUklOR19TUV9ORUVEX1dBS0VVUDsKLQlzcGluX3VubG9ja19p
cnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwkvKiBUZWxsIHVzZXJzcGFjZSB3ZSBtYXkg
bmVlZCBhIHdha2V1cCBjYWxsICovCisJc3Bpbl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9j
ayk7CisJV1JJVEVfT05DRShjdHgtPnJpbmdzLT5zcV9mbGFncywKKwkJICAgY3R4LT5yaW5n
cy0+c3FfZmxhZ3MgfCBJT1JJTkdfU1FfTkVFRF9XQUtFVVApOworCXNwaW5fdW5sb2NrKCZj
dHgtPmNvbXBsZXRpb25fbG9jayk7CiB9CiAKLXN0YXRpYyBpbnQgaW9fc3Ffd2FrZV9mdW5j
dGlvbihzdHJ1Y3Qgd2FpdF9xdWV1ZV9lbnRyeSAqd3FlLCB1bnNpZ25lZCBtb2RlLAotCQkJ
ICAgICAgIGludCBzeW5jLCB2b2lkICprZXkpCitzdGF0aWMgaW5saW5lIHZvaWQgaW9fcmlu
Z19jbGVhcl93YWtldXBfZmxhZyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKLQlzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCA9IGNvbnRhaW5lcl9vZih3cWUsIHN0cnVjdCBpb19yaW5n
X2N0eCwgc3FvX3dhaXRfZW50cnkpOwotCWludCByZXQ7Ci0KLQlyZXQgPSBhdXRvcmVtb3Zl
X3dha2VfZnVuY3Rpb24od3FlLCBtb2RlLCBzeW5jLCBrZXkpOwotCWlmIChyZXQpIHsKLQkJ
dW5zaWduZWQgbG9uZyBmbGFnczsKLQotCQlzcGluX2xvY2tfaXJxc2F2ZSgmY3R4LT5jb21w
bGV0aW9uX2xvY2ssIGZsYWdzKTsKLQkJY3R4LT5yaW5ncy0+c3FfZmxhZ3MgJj0gfklPUklO
R19TUV9ORUVEX1dBS0VVUDsKLQkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY3R4LT5jb21w
bGV0aW9uX2xvY2ssIGZsYWdzKTsKLQl9Ci0JcmV0dXJuIHJldDsKKwlzcGluX2xvY2soJmN0
eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlXUklURV9PTkNFKGN0eC0+cmluZ3MtPnNxX2ZsYWdz
LAorCQkgICBjdHgtPnJpbmdzLT5zcV9mbGFncyAmIH5JT1JJTkdfU1FfTkVFRF9XQUtFVVAp
OworCXNwaW5fdW5sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CiB9CiAKLWVudW0gc3Ff
cmV0IHsKLQlTUVRfSURMRQk9IDEsCi0JU1FUX1NQSU4JPSAyLAotCVNRVF9ESURfV09SSwk9
IDQsCi19OwotCi1zdGF0aWMgZW51bSBzcV9yZXQgX19pb19zcV90aHJlYWQoc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHgsCi0JCQkJICB1bnNpZ25lZCBsb25nIHN0YXJ0X2ppZmZpZXMsIGJv
b2wgY2FwX2VudHJpZXMpCitzdGF0aWMgaW50IF9faW9fc3FfdGhyZWFkKHN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4LCBib29sIGNhcF9lbnRyaWVzKQogewotCXVuc2lnbmVkIGxvbmcgdGlt
ZW91dCA9IHN0YXJ0X2ppZmZpZXMgKyBjdHgtPnNxX3RocmVhZF9pZGxlOwotCXN0cnVjdCBp
b19zcV9kYXRhICpzcWQgPSBjdHgtPnNxX2RhdGE7CiAJdW5zaWduZWQgaW50IHRvX3N1Ym1p
dDsKIAlpbnQgcmV0ID0gMDsKIAotYWdhaW46Ci0JaWYgKCFsaXN0X2VtcHR5KCZjdHgtPmlv
cG9sbF9saXN0KSkgewotCQl1bnNpZ25lZCBucl9ldmVudHMgPSAwOwotCi0JCW11dGV4X2xv
Y2soJmN0eC0+dXJpbmdfbG9jayk7Ci0JCWlmICghbGlzdF9lbXB0eSgmY3R4LT5pb3BvbGxf
bGlzdCkgJiYgIW5lZWRfcmVzY2hlZCgpKQotCQkJaW9fZG9faW9wb2xsKGN0eCwgJm5yX2V2
ZW50cywgMCk7Ci0JCW11dGV4X3VubG9jaygmY3R4LT51cmluZ19sb2NrKTsKLQl9Ci0KIAl0
b19zdWJtaXQgPSBpb19zcXJpbmdfZW50cmllcyhjdHgpOworCS8qIGlmIHdlJ3JlIGhhbmRs
aW5nIG11bHRpcGxlIHJpbmdzLCBjYXAgc3VibWl0IHNpemUgZm9yIGZhaXJuZXNzICovCisJ
aWYgKGNhcF9lbnRyaWVzICYmIHRvX3N1Ym1pdCA+IElPUklOR19TUVBPTExfQ0FQX0VOVFJJ
RVNfVkFMVUUpCisJCXRvX3N1Ym1pdCA9IElPUklOR19TUVBPTExfQ0FQX0VOVFJJRVNfVkFM
VUU7CiAKLQkvKgotCSAqIElmIHN1Ym1pdCBnb3QgLUVCVVNZLCBmbGFnIHVzIGFzIG5lZWRp
bmcgdGhlIGFwcGxpY2F0aW9uCi0JICogdG8gZW50ZXIgdGhlIGtlcm5lbCB0byByZWFwIGFu
ZCBmbHVzaCBldmVudHMuCi0JICovCi0JaWYgKCF0b19zdWJtaXQgfHwgcmV0ID09IC1FQlVT
WSB8fCBuZWVkX3Jlc2NoZWQoKSkgewotCQkvKgotCQkgKiBEcm9wIGN1cl9tbSBiZWZvcmUg
c2NoZWR1bGluZywgd2UgY2FuJ3QgaG9sZCBpdCBmb3IKLQkJICogbG9uZyBwZXJpb2RzIChv
ciBvdmVyIHNjaGVkdWxlKCkpLiBEbyB0aGlzIGJlZm9yZQotCQkgKiBhZGRpbmcgb3Vyc2Vs
dmVzIHRvIHRoZSB3YWl0cXVldWUsIGFzIHRoZSB1bnVzZS9kcm9wCi0JCSAqIG1heSBzbGVl
cC4KLQkJICovCi0JCWlvX3NxX3RocmVhZF9kcm9wX21tKCk7CisJaWYgKCFsaXN0X2VtcHR5
KCZjdHgtPmlvcG9sbF9saXN0KSB8fCB0b19zdWJtaXQpIHsKKwkJdW5zaWduZWQgbnJfZXZl
bnRzID0gMDsKKwkJY29uc3Qgc3RydWN0IGNyZWQgKmNyZWRzID0gTlVMTDsKIAotCQkvKgot
CQkgKiBXZSdyZSBwb2xsaW5nLiBJZiB3ZSdyZSB3aXRoaW4gdGhlIGRlZmluZWQgaWRsZQot
CQkgKiBwZXJpb2QsIHRoZW4gbGV0IHVzIHNwaW4gd2l0aG91dCB3b3JrIGJlZm9yZSBnb2lu
ZwotCQkgKiB0byBzbGVlcC4gVGhlIGV4Y2VwdGlvbiBpcyBpZiB3ZSBnb3QgRUJVU1kgZG9p
bmcKLQkJICogbW9yZSBJTywgd2Ugc2hvdWxkIHdhaXQgZm9yIHRoZSBhcHBsaWNhdGlvbiB0
bwotCQkgKiByZWFwIGV2ZW50cyBhbmQgd2FrZSB1cyB1cC4KLQkJICovCi0JCWlmICghbGlz
dF9lbXB0eSgmY3R4LT5pb3BvbGxfbGlzdCkgfHwgbmVlZF9yZXNjaGVkKCkgfHwKLQkJICAg
ICghdGltZV9hZnRlcihqaWZmaWVzLCB0aW1lb3V0KSAmJiByZXQgIT0gLUVCVVNZICYmCi0J
CSAgICAhcGVyY3B1X3JlZl9pc19keWluZygmY3R4LT5yZWZzKSkpCi0JCQlyZXR1cm4gU1FU
X1NQSU47CisJCWlmIChjdHgtPnNxX2NyZWRzICE9IGN1cnJlbnRfY3JlZCgpKQorCQkJY3Jl
ZHMgPSBvdmVycmlkZV9jcmVkcyhjdHgtPnNxX2NyZWRzKTsKIAotCQlwcmVwYXJlX3RvX3dh
aXQoJnNxZC0+d2FpdCwgJmN0eC0+c3FvX3dhaXRfZW50cnksCi0JCQkJCVRBU0tfSU5URVJS
VVBUSUJMRSk7CisJCW11dGV4X2xvY2soJmN0eC0+dXJpbmdfbG9jayk7CisJCWlmICghbGlz
dF9lbXB0eSgmY3R4LT5pb3BvbGxfbGlzdCkpCisJCQlpb19kb19pb3BvbGwoY3R4LCAmbnJf
ZXZlbnRzLCAwKTsKIAogCQkvKgotCQkgKiBXaGlsZSBkb2luZyBwb2xsZWQgSU8sIGJlZm9y
ZSBnb2luZyB0byBzbGVlcCwgd2UgbmVlZAotCQkgKiB0byBjaGVjayBpZiB0aGVyZSBhcmUg
bmV3IHJlcXMgYWRkZWQgdG8gaW9wb2xsX2xpc3QsCi0JCSAqIGl0IGlzIGJlY2F1c2UgcmVx
cyBtYXkgaGF2ZSBiZWVuIHB1bnRlZCB0byBpbyB3b3JrZXIKLQkJICogYW5kIHdpbGwgYmUg
YWRkZWQgdG8gaW9wb2xsX2xpc3QgbGF0ZXIsIGhlbmNlIGNoZWNrCi0JCSAqIHRoZSBpb3Bv
bGxfbGlzdCBhZ2Fpbi4KKwkJICogRG9uJ3Qgc3VibWl0IGlmIHJlZnMgYXJlIGR5aW5nLCBn
b29kIGZvciBpb191cmluZ19yZWdpc3RlcigpLAorCQkgKiBidXQgYWxzbyBpdCBpcyByZWxp
ZWQgdXBvbiBieSBpb19yaW5nX2V4aXRfd29yaygpCiAJCSAqLwotCQlpZiAoKGN0eC0+Zmxh
Z3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSAmJgotCQkgICAgIWxpc3RfZW1wdHlfY2FyZWZ1
bCgmY3R4LT5pb3BvbGxfbGlzdCkpIHsKLQkJCWZpbmlzaF93YWl0KCZzcWQtPndhaXQsICZj
dHgtPnNxb193YWl0X2VudHJ5KTsKLQkJCWdvdG8gYWdhaW47Ci0JCX0KKwkJaWYgKHRvX3N1
Ym1pdCAmJiBsaWtlbHkoIXBlcmNwdV9yZWZfaXNfZHlpbmcoJmN0eC0+cmVmcykpICYmCisJ
CSAgICAhKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfUl9ESVNBQkxFRCkpCisJCQlyZXQg
PSBpb19zdWJtaXRfc3FlcyhjdHgsIHRvX3N1Ym1pdCk7CisJCW11dGV4X3VubG9jaygmY3R4
LT51cmluZ19sb2NrKTsKIAotCQl0b19zdWJtaXQgPSBpb19zcXJpbmdfZW50cmllcyhjdHgp
OwotCQlpZiAoIXRvX3N1Ym1pdCB8fCByZXQgPT0gLUVCVVNZKQotCQkJcmV0dXJuIFNRVF9J
RExFOworCQlpZiAodG9fc3VibWl0ICYmIHdxX2hhc19zbGVlcGVyKCZjdHgtPnNxb19zcV93
YWl0KSkKKwkJCXdha2VfdXAoJmN0eC0+c3FvX3NxX3dhaXQpOworCQlpZiAoY3JlZHMpCisJ
CQlyZXZlcnRfY3JlZHMoY3JlZHMpOwogCX0KIAotCWZpbmlzaF93YWl0KCZzcWQtPndhaXQs
ICZjdHgtPnNxb193YWl0X2VudHJ5KTsKLQlpb19yaW5nX2NsZWFyX3dha2V1cF9mbGFnKGN0
eCk7Ci0KLQkvKiBpZiB3ZSdyZSBoYW5kbGluZyBtdWx0aXBsZSByaW5ncywgY2FwIHN1Ym1p
dCBzaXplIGZvciBmYWlybmVzcyAqLwotCWlmIChjYXBfZW50cmllcyAmJiB0b19zdWJtaXQg
PiA4KQotCQl0b19zdWJtaXQgPSA4OwotCi0JbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2Nr
KTsKLQlpZiAobGlrZWx5KCFwZXJjcHVfcmVmX2lzX2R5aW5nKCZjdHgtPnJlZnMpICYmICFj
dHgtPnNxb19kZWFkKSkKLQkJcmV0ID0gaW9fc3VibWl0X3NxZXMoY3R4LCB0b19zdWJtaXQp
OwotCW11dGV4X3VubG9jaygmY3R4LT51cmluZ19sb2NrKTsKKwlyZXR1cm4gcmV0OworfQog
Ci0JaWYgKCFpb19zcXJpbmdfZnVsbChjdHgpICYmIHdxX2hhc19zbGVlcGVyKCZjdHgtPnNx
b19zcV93YWl0KSkKLQkJd2FrZV91cCgmY3R4LT5zcW9fc3Ffd2FpdCk7CitzdGF0aWMgdm9p
ZCBpb19zcWRfdXBkYXRlX3RocmVhZF9pZGxlKHN0cnVjdCBpb19zcV9kYXRhICpzcWQpCit7
CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHg7CisJdW5zaWduZWQgc3FfdGhyZWFkX2lkbGUg
PSAwOwogCi0JcmV0dXJuIFNRVF9ESURfV09SSzsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGN0
eCwgJnNxZC0+Y3R4X2xpc3QsIHNxZF9saXN0KQorCQlzcV90aHJlYWRfaWRsZSA9IG1heChz
cV90aHJlYWRfaWRsZSwgY3R4LT5zcV90aHJlYWRfaWRsZSk7CisJc3FkLT5zcV90aHJlYWRf
aWRsZSA9IHNxX3RocmVhZF9pZGxlOwogfQogCi1zdGF0aWMgdm9pZCBpb19zcWRfaW5pdF9u
ZXcoc3RydWN0IGlvX3NxX2RhdGEgKnNxZCkKK3N0YXRpYyBib29sIGlvX3NxZF9oYW5kbGVf
ZXZlbnQoc3RydWN0IGlvX3NxX2RhdGEgKnNxZCkKIHsKLQlzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eDsKKwlib29sIGRpZF9zaWcgPSBmYWxzZTsKKwlzdHJ1Y3Qga3NpZ25hbCBrc2lnOwog
Ci0Jd2hpbGUgKCFsaXN0X2VtcHR5KCZzcWQtPmN0eF9uZXdfbGlzdCkpIHsKLQkJY3R4ID0g
bGlzdF9maXJzdF9lbnRyeSgmc3FkLT5jdHhfbmV3X2xpc3QsIHN0cnVjdCBpb19yaW5nX2N0
eCwgc3FkX2xpc3QpOwotCQlpbml0X3dhaXQoJmN0eC0+c3FvX3dhaXRfZW50cnkpOwotCQlj
dHgtPnNxb193YWl0X2VudHJ5LmZ1bmMgPSBpb19zcV93YWtlX2Z1bmN0aW9uOwotCQlsaXN0
X21vdmVfdGFpbCgmY3R4LT5zcWRfbGlzdCwgJnNxZC0+Y3R4X2xpc3QpOwotCQljb21wbGV0
ZSgmY3R4LT5zcV90aHJlYWRfY29tcCk7CisJaWYgKHRlc3RfYml0KElPX1NRX1RIUkVBRF9T
SE9VTERfUEFSSywgJnNxZC0+c3RhdGUpIHx8CisJICAgIHNpZ25hbF9wZW5kaW5nKGN1cnJl
bnQpKSB7CisJCW11dGV4X3VubG9jaygmc3FkLT5sb2NrKTsKKwkJaWYgKHNpZ25hbF9wZW5k
aW5nKGN1cnJlbnQpKQorCQkJZGlkX3NpZyA9IGdldF9zaWduYWwoJmtzaWcpOworCQljb25k
X3Jlc2NoZWQoKTsKKwkJbXV0ZXhfbG9jaygmc3FkLT5sb2NrKTsKIAl9CisJcmV0dXJuIGRp
ZF9zaWcgfHwgdGVzdF9iaXQoSU9fU1FfVEhSRUFEX1NIT1VMRF9TVE9QLCAmc3FkLT5zdGF0
ZSk7CiB9CiAKIHN0YXRpYyBpbnQgaW9fc3FfdGhyZWFkKHZvaWQgKmRhdGEpCiB7Ci0Jc3Ry
dWN0IGNncm91cF9zdWJzeXNfc3RhdGUgKmN1cl9jc3MgPSBOVUxMOwotCWNvbnN0IHN0cnVj
dCBjcmVkICpvbGRfY3JlZCA9IE5VTEw7CiAJc3RydWN0IGlvX3NxX2RhdGEgKnNxZCA9IGRh
dGE7CiAJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHg7Ci0JdW5zaWduZWQgbG9uZyBzdGFydF9q
aWZmaWVzOworCXVuc2lnbmVkIGxvbmcgdGltZW91dCA9IDA7CisJY2hhciBidWZbVEFTS19D
T01NX0xFTl07CisJREVGSU5FX1dBSVQod2FpdCk7CiAKLQlzdGFydF9qaWZmaWVzID0gamlm
ZmllczsKLQl3aGlsZSAoIWt0aHJlYWRfc2hvdWxkX3N0b3AoKSkgewotCQllbnVtIHNxX3Jl
dCByZXQgPSAwOwotCQlib29sIGNhcF9lbnRyaWVzOworCXNucHJpbnRmKGJ1Ziwgc2l6ZW9m
KGJ1ZiksICJpb3Utc3FwLSVkIiwgc3FkLT50YXNrX3BpZCk7CisJc2V0X3Rhc2tfY29tbShj
dXJyZW50LCBidWYpOwogCi0JCS8qCi0JCSAqIEFueSBjaGFuZ2VzIHRvIHRoZSBzcWQgbGlz
dHMgYXJlIHN5bmNocm9uaXplZCB0aHJvdWdoIHRoZQotCQkgKiBrdGhyZWFkIHBhcmtpbmcu
IFRoaXMgc3luY2hyb25pemVzIHRoZSB0aHJlYWQgdnMgdXNlcnMsCi0JCSAqIHRoZSB1c2Vy
cyBhcmUgc3luY2hyb25pemVkIG9uIHRoZSBzcWQtPmN0eF9sb2NrLgotCQkgKi8KLQkJaWYg
KGt0aHJlYWRfc2hvdWxkX3BhcmsoKSkgewotCQkJa3RocmVhZF9wYXJrbWUoKTsKLQkJCS8q
Ci0JCQkgKiBXaGVuIHNxIHRocmVhZCBpcyB1bnBhcmtlZCwgaW4gY2FzZSB0aGUgcHJldmlv
dXMgcGFyayBvcGVyYXRpb24KLQkJCSAqIGNvbWVzIGZyb20gaW9fcHV0X3NxX2RhdGEoKSwg
d2hpY2ggbWVhbnMgdGhhdCBzcSB0aHJlYWQgaXMgZ29pbmcKLQkJCSAqIHRvIGJlIHN0b3Bw
ZWQsIHNvIGhlcmUgbmVlZHMgdG8gaGF2ZSBhIGNoZWNrLgotCQkJICovCi0JCQlpZiAoa3Ro
cmVhZF9zaG91bGRfc3RvcCgpKQorCWlmIChzcWQtPnNxX2NwdSAhPSAtMSkKKwkJc2V0X2Nw
dXNfYWxsb3dlZF9wdHIoY3VycmVudCwgY3B1bWFza19vZihzcWQtPnNxX2NwdSkpOworCWVs
c2UKKwkJc2V0X2NwdXNfYWxsb3dlZF9wdHIoY3VycmVudCwgY3B1X29ubGluZV9tYXNrKTsK
KwljdXJyZW50LT5mbGFncyB8PSBQRl9OT19TRVRBRkZJTklUWTsKKworCW11dGV4X2xvY2so
JnNxZC0+bG9jayk7CisJd2hpbGUgKDEpIHsKKwkJYm9vbCBjYXBfZW50cmllcywgc3F0X3Nw
aW4gPSBmYWxzZTsKKworCQlpZiAoaW9fc3FkX2V2ZW50c19wZW5kaW5nKHNxZCkgfHwgc2ln
bmFsX3BlbmRpbmcoY3VycmVudCkpIHsKKwkJCWlmIChpb19zcWRfaGFuZGxlX2V2ZW50KHNx
ZCkpCiAJCQkJYnJlYWs7CisJCQl0aW1lb3V0ID0gamlmZmllcyArIHNxZC0+c3FfdGhyZWFk
X2lkbGU7CiAJCX0KIAotCQlpZiAodW5saWtlbHkoIWxpc3RfZW1wdHkoJnNxZC0+Y3R4X25l
d19saXN0KSkpCi0JCQlpb19zcWRfaW5pdF9uZXcoc3FkKTsKLQogCQljYXBfZW50cmllcyA9
ICFsaXN0X2lzX3Npbmd1bGFyKCZzcWQtPmN0eF9saXN0KTsKLQogCQlsaXN0X2Zvcl9lYWNo
X2VudHJ5KGN0eCwgJnNxZC0+Y3R4X2xpc3QsIHNxZF9saXN0KSB7Ci0JCQlpZiAoY3VycmVu
dC0+Y3JlZCAhPSBjdHgtPmNyZWRzKSB7Ci0JCQkJaWYgKG9sZF9jcmVkKQotCQkJCQlyZXZl
cnRfY3JlZHMob2xkX2NyZWQpOwotCQkJCW9sZF9jcmVkID0gb3ZlcnJpZGVfY3JlZHMoY3R4
LT5jcmVkcyk7Ci0JCQl9Ci0JCQlpb19zcV90aHJlYWRfYXNzb2NpYXRlX2Jsa2NnKGN0eCwg
JmN1cl9jc3MpOwotI2lmZGVmIENPTkZJR19BVURJVAotCQkJY3VycmVudC0+bG9naW51aWQg
PSBjdHgtPmxvZ2ludWlkOwotCQkJY3VycmVudC0+c2Vzc2lvbmlkID0gY3R4LT5zZXNzaW9u
aWQ7Ci0jZW5kaWYKKwkJCWludCByZXQgPSBfX2lvX3NxX3RocmVhZChjdHgsIGNhcF9lbnRy
aWVzKTsKIAotCQkJcmV0IHw9IF9faW9fc3FfdGhyZWFkKGN0eCwgc3RhcnRfamlmZmllcywg
Y2FwX2VudHJpZXMpOwotCi0JCQlpb19zcV90aHJlYWRfZHJvcF9tbSgpOworCQkJaWYgKCFz
cXRfc3BpbiAmJiAocmV0ID4gMCB8fCAhbGlzdF9lbXB0eSgmY3R4LT5pb3BvbGxfbGlzdCkp
KQorCQkJCXNxdF9zcGluID0gdHJ1ZTsKIAkJfQorCQlpZiAoaW9fcnVuX3Rhc2tfd29yaygp
KQorCQkJc3F0X3NwaW4gPSB0cnVlOwogCi0JCWlmIChyZXQgJiBTUVRfU1BJTikgewotCQkJ
aW9fcnVuX3Rhc2tfd29yaygpOwotCQkJaW9fc3FfdGhyZWFkX2Ryb3BfbW0oKTsKKwkJaWYg
KHNxdF9zcGluIHx8ICF0aW1lX2FmdGVyKGppZmZpZXMsIHRpbWVvdXQpKSB7CiAJCQljb25k
X3Jlc2NoZWQoKTsKLQkJfSBlbHNlIGlmIChyZXQgPT0gU1FUX0lETEUpIHsKLQkJCWlmIChr
dGhyZWFkX3Nob3VsZF9wYXJrKCkpCi0JCQkJY29udGludWU7Ci0JCQlsaXN0X2Zvcl9lYWNo
X2VudHJ5KGN0eCwgJnNxZC0+Y3R4X2xpc3QsIHNxZF9saXN0KQorCQkJaWYgKHNxdF9zcGlu
KQorCQkJCXRpbWVvdXQgPSBqaWZmaWVzICsgc3FkLT5zcV90aHJlYWRfaWRsZTsKKwkJCWNv
bnRpbnVlOworCQl9CisKKwkJcHJlcGFyZV90b193YWl0KCZzcWQtPndhaXQsICZ3YWl0LCBU
QVNLX0lOVEVSUlVQVElCTEUpOworCQlpZiAoIWlvX3NxZF9ldmVudHNfcGVuZGluZyhzcWQp
ICYmICFjdXJyZW50LT50YXNrX3dvcmtzKSB7CisJCQlib29sIG5lZWRzX3NjaGVkID0gdHJ1
ZTsKKworCQkJbGlzdF9mb3JfZWFjaF9lbnRyeShjdHgsICZzcWQtPmN0eF9saXN0LCBzcWRf
bGlzdCkgewogCQkJCWlvX3Jpbmdfc2V0X3dha2V1cF9mbGFnKGN0eCk7Ci0JCQlzY2hlZHVs
ZSgpOwotCQkJc3RhcnRfamlmZmllcyA9IGppZmZpZXM7CisKKwkJCQlpZiAoKGN0eC0+Zmxh
Z3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMKSAmJgorCQkJCSAgICAhbGlzdF9lbXB0eV9jYXJl
ZnVsKCZjdHgtPmlvcG9sbF9saXN0KSkgeworCQkJCQluZWVkc19zY2hlZCA9IGZhbHNlOwor
CQkJCQlicmVhazsKKwkJCQl9CisJCQkJaWYgKGlvX3NxcmluZ19lbnRyaWVzKGN0eCkpIHsK
KwkJCQkJbmVlZHNfc2NoZWQgPSBmYWxzZTsKKwkJCQkJYnJlYWs7CisJCQkJfQorCQkJfQor
CisJCQlpZiAobmVlZHNfc2NoZWQpIHsKKwkJCQltdXRleF91bmxvY2soJnNxZC0+bG9jayk7
CisJCQkJc2NoZWR1bGUoKTsKKwkJCQltdXRleF9sb2NrKCZzcWQtPmxvY2spOworCQkJfQog
CQkJbGlzdF9mb3JfZWFjaF9lbnRyeShjdHgsICZzcWQtPmN0eF9saXN0LCBzcWRfbGlzdCkK
IAkJCQlpb19yaW5nX2NsZWFyX3dha2V1cF9mbGFnKGN0eCk7CiAJCX0KKworCQlmaW5pc2hf
d2FpdCgmc3FkLT53YWl0LCAmd2FpdCk7CisJCXRpbWVvdXQgPSBqaWZmaWVzICsgc3FkLT5z
cV90aHJlYWRfaWRsZTsKIAl9CiAKKwlpb191cmluZ19jYW5jZWxfZ2VuZXJpYyh0cnVlLCBz
cWQpOworCXNxZC0+dGhyZWFkID0gTlVMTDsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGN0eCwg
JnNxZC0+Y3R4X2xpc3QsIHNxZF9saXN0KQorCQlpb19yaW5nX3NldF93YWtldXBfZmxhZyhj
dHgpOwogCWlvX3J1bl90YXNrX3dvcmsoKTsKLQlpb19zcV90aHJlYWRfZHJvcF9tbSgpOwot
Ci0JaWYgKGN1cl9jc3MpCi0JCWlvX3NxX3RocmVhZF91bmFzc29jaWF0ZV9ibGtjZygpOwot
CWlmIChvbGRfY3JlZCkKLQkJcmV2ZXJ0X2NyZWRzKG9sZF9jcmVkKTsKLQotCWt0aHJlYWRf
cGFya21lKCk7CisJbXV0ZXhfdW5sb2NrKCZzcWQtPmxvY2spOwogCi0JcmV0dXJuIDA7CisJ
Y29tcGxldGUoJnNxZC0+ZXhpdGVkKTsKKwlkb19leGl0KDApOwogfQogCiBzdHJ1Y3QgaW9f
d2FpdF9xdWV1ZSB7CiAJc3RydWN0IHdhaXRfcXVldWVfZW50cnkgd3E7CiAJc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHg7Ci0JdW5zaWduZWQgdG9fd2FpdDsKKwl1bnNpZ25lZCBjcV90YWls
OwogCXVuc2lnbmVkIG5yX3RpbWVvdXRzOwogfTsKIAogc3RhdGljIGlubGluZSBib29sIGlv
X3Nob3VsZF93YWtlKHN0cnVjdCBpb193YWl0X3F1ZXVlICppb3dxKQogewogCXN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4ID0gaW93cS0+Y3R4OworCWludCBkaXN0ID0gY3R4LT5jYWNoZWRf
Y3FfdGFpbCAtIChpbnQpIGlvd3EtPmNxX3RhaWw7CiAKIAkvKgogCSAqIFdha2UgdXAgaWYg
d2UgaGF2ZSBlbm91Z2ggZXZlbnRzLCBvciBpZiBhIHRpbWVvdXQgb2NjdXJyZWQgc2luY2Ug
d2UKIAkgKiBzdGFydGVkIHdhaXRpbmcuIEZvciB0aW1lb3V0cywgd2UgYWx3YXlzIHdhbnQg
dG8gcmV0dXJuIHRvIHVzZXJzcGFjZSwKIAkgKiByZWdhcmRsZXNzIG9mIGV2ZW50IGNvdW50
LgogCSAqLwotCXJldHVybiBpb19jcXJpbmdfZXZlbnRzKGN0eCkgPj0gaW93cS0+dG9fd2Fp
dCB8fAotCQkJYXRvbWljX3JlYWQoJmN0eC0+Y3FfdGltZW91dHMpICE9IGlvd3EtPm5yX3Rp
bWVvdXRzOworCXJldHVybiBkaXN0ID49IDAgfHwgYXRvbWljX3JlYWQoJmN0eC0+Y3FfdGlt
ZW91dHMpICE9IGlvd3EtPm5yX3RpbWVvdXRzOwogfQogCiBzdGF0aWMgaW50IGlvX3dha2Vf
ZnVuY3Rpb24oc3RydWN0IHdhaXRfcXVldWVfZW50cnkgKmN1cnIsIHVuc2lnbmVkIGludCBt
b2RlLApAQCAtNjk3NSw3ICs3NDA4LDcgQEAgc3RhdGljIGludCBpb193YWtlX2Z1bmN0aW9u
KHN0cnVjdCB3YWl0X3F1ZXVlX2VudHJ5ICpjdXJyLCB1bnNpZ25lZCBpbnQgbW9kZSwKIAkg
KiBDYW5ub3Qgc2FmZWx5IGZsdXNoIG92ZXJmbG93ZWQgQ1FFcyBmcm9tIGhlcmUsIGVuc3Vy
ZSB3ZSB3YWtlIHVwCiAJICogdGhlIHRhc2ssIGFuZCB0aGUgbmV4dCBpbnZvY2F0aW9uIHdp
bGwgZG8gaXQuCiAJICovCi0JaWYgKGlvX3Nob3VsZF93YWtlKGlvd3EpIHx8IHRlc3RfYml0
KDAsICZpb3dxLT5jdHgtPmNxX2NoZWNrX292ZXJmbG93KSkKKwlpZiAoaW9fc2hvdWxkX3dh
a2UoaW93cSkgfHwgdGVzdF9iaXQoMCwgJmlvd3EtPmN0eC0+Y2hlY2tfY3Ffb3ZlcmZsb3cp
KQogCQlyZXR1cm4gYXV0b3JlbW92ZV93YWtlX2Z1bmN0aW9uKGN1cnIsIG1vZGUsIHdha2Vf
ZmxhZ3MsIGtleSk7CiAJcmV0dXJuIC0xOwogfQpAQCAtNjk4Niw0MyArNzQxOSw2MCBAQCBz
dGF0aWMgaW50IGlvX3J1bl90YXNrX3dvcmtfc2lnKHZvaWQpCiAJCXJldHVybiAxOwogCWlm
ICghc2lnbmFsX3BlbmRpbmcoY3VycmVudCkpCiAJCXJldHVybiAwOwotCWlmIChjdXJyZW50
LT5qb2JjdGwgJiBKT0JDVExfVEFTS19XT1JLKSB7Ci0JCXNwaW5fbG9ja19pcnEoJmN1cnJl
bnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwotCQljdXJyZW50LT5qb2JjdGwgJj0gfkpPQkNUTF9U
QVNLX1dPUks7Ci0JCXJlY2FsY19zaWdwZW5kaW5nKCk7Ci0JCXNwaW5fdW5sb2NrX2lycSgm
Y3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0JCXJldHVybiAxOwotCX0KKwlpZiAodGVz
dF90aHJlYWRfZmxhZyhUSUZfTk9USUZZX1NJR05BTCkpCisJCXJldHVybiAtRVJFU1RBUlRT
WVM7CiAJcmV0dXJuIC1FSU5UUjsKIH0KIAorLyogd2hlbiByZXR1cm5zID4wLCB0aGUgY2Fs
bGVyIHNob3VsZCByZXRyeSAqLworc3RhdGljIGlubGluZSBpbnQgaW9fY3FyaW5nX3dhaXRf
c2NoZWR1bGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCisJCQkJCSAgc3RydWN0IGlvX3dh
aXRfcXVldWUgKmlvd3EsCisJCQkJCSAga3RpbWVfdCB0aW1lb3V0KQoreworCWludCByZXQ7
CisKKwkvKiBtYWtlIHN1cmUgd2UgcnVuIHRhc2tfd29yayBiZWZvcmUgY2hlY2tpbmcgZm9y
IHNpZ25hbHMgKi8KKwlyZXQgPSBpb19ydW5fdGFza193b3JrX3NpZygpOworCWlmIChyZXQg
fHwgaW9fc2hvdWxkX3dha2UoaW93cSkpCisJCXJldHVybiByZXQ7CisJLyogbGV0IHRoZSBj
YWxsZXIgZmx1c2ggb3ZlcmZsb3dzLCByZXRyeSAqLworCWlmICh0ZXN0X2JpdCgwLCAmY3R4
LT5jaGVja19jcV9vdmVyZmxvdykpCisJCXJldHVybiAxOworCisJaWYgKCFzY2hlZHVsZV9o
cnRpbWVvdXQoJnRpbWVvdXQsIEhSVElNRVJfTU9ERV9BQlMpKQorCQlyZXR1cm4gLUVUSU1F
OworCXJldHVybiAxOworfQorCiAvKgogICogV2FpdCB1bnRpbCBldmVudHMgYmVjb21lIGF2
YWlsYWJsZSwgaWYgd2UgZG9uJ3QgYWxyZWFkeSBoYXZlIHNvbWUuIFRoZQogICogYXBwbGlj
YXRpb24gbXVzdCByZWFwIHRoZW0gaXRzZWxmLCBhcyB0aGV5IHJlc2lkZSBvbiB0aGUgc2hh
cmVkIGNxIHJpbmcuCiAgKi8KIHN0YXRpYyBpbnQgaW9fY3FyaW5nX3dhaXQoc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHgsIGludCBtaW5fZXZlbnRzLAotCQkJICBjb25zdCBzaWdzZXRfdCBf
X3VzZXIgKnNpZywgc2l6ZV90IHNpZ3N6KQotewotCXN0cnVjdCBpb193YWl0X3F1ZXVlIGlv
d3EgPSB7Ci0JCS53cSA9IHsKLQkJCS5wcml2YXRlCT0gY3VycmVudCwKLQkJCS5mdW5jCQk9
IGlvX3dha2VfZnVuY3Rpb24sCi0JCQkuZW50cnkJCT0gTElTVF9IRUFEX0lOSVQoaW93cS53
cS5lbnRyeSksCi0JCX0sCi0JCS5jdHgJCT0gY3R4LAotCQkudG9fd2FpdAk9IG1pbl9ldmVu
dHMsCi0JfTsKKwkJCSAgY29uc3Qgc2lnc2V0X3QgX191c2VyICpzaWcsIHNpemVfdCBzaWdz
eiwKKwkJCSAgc3RydWN0IF9fa2VybmVsX3RpbWVzcGVjIF9fdXNlciAqdXRzKQoreworCXN0
cnVjdCBpb193YWl0X3F1ZXVlIGlvd3E7CiAJc3RydWN0IGlvX3JpbmdzICpyaW5ncyA9IGN0
eC0+cmluZ3M7Ci0JaW50IHJldCA9IDA7CisJa3RpbWVfdCB0aW1lb3V0ID0gS1RJTUVfTUFY
OworCWludCByZXQ7CiAKIAlkbyB7Ci0JCWlvX2NxcmluZ19vdmVyZmxvd19mbHVzaChjdHgs
IGZhbHNlLCBOVUxMLCBOVUxMKTsKKwkJaW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCk7
CiAJCWlmIChpb19jcXJpbmdfZXZlbnRzKGN0eCkgPj0gbWluX2V2ZW50cykKIAkJCXJldHVy
biAwOwogCQlpZiAoIWlvX3J1bl90YXNrX3dvcmsoKSkKIAkJCWJyZWFrOwogCX0gd2hpbGUg
KDEpOwogCisJaWYgKHV0cykgeworCQlzdHJ1Y3QgdGltZXNwZWM2NCB0czsKKworCQlpZiAo
Z2V0X3RpbWVzcGVjNjQoJnRzLCB1dHMpKQorCQkJcmV0dXJuIC1FRkFVTFQ7CisJCXRpbWVv
dXQgPSBrdGltZV9hZGRfbnModGltZXNwZWM2NF90b19rdGltZSh0cyksIGt0aW1lX2dldF9u
cygpKTsKKwl9CisKIAlpZiAoc2lnKSB7CiAjaWZkZWYgQ09ORklHX0NPTVBBVAogCQlpZiAo
aW5fY29tcGF0X3N5c2NhbGwoKSkKQEAgLTcwMzYsMzMgKzc0ODYsMjY3IEBAIHN0YXRpYyBp
bnQgaW9fY3FyaW5nX3dhaXQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIGludCBtaW5fZXZl
bnRzLAogCQkJcmV0dXJuIHJldDsKIAl9CiAKKwlpbml0X3dhaXRxdWV1ZV9mdW5jX2VudHJ5
KCZpb3dxLndxLCBpb193YWtlX2Z1bmN0aW9uKTsKKwlpb3dxLndxLnByaXZhdGUgPSBjdXJy
ZW50OworCUlOSVRfTElTVF9IRUFEKCZpb3dxLndxLmVudHJ5KTsKKwlpb3dxLmN0eCA9IGN0
eDsKIAlpb3dxLm5yX3RpbWVvdXRzID0gYXRvbWljX3JlYWQoJmN0eC0+Y3FfdGltZW91dHMp
OworCWlvd3EuY3FfdGFpbCA9IFJFQURfT05DRShjdHgtPnJpbmdzLT5jcS5oZWFkKSArIG1p
bl9ldmVudHM7CisKIAl0cmFjZV9pb191cmluZ19jcXJpbmdfd2FpdChjdHgsIG1pbl9ldmVu
dHMpOwogCWRvIHsKLQkJaW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCwgZmFsc2UsIE5V
TEwsIE5VTEwpOwotCQlwcmVwYXJlX3RvX3dhaXRfZXhjbHVzaXZlKCZjdHgtPndhaXQsICZp
b3dxLndxLAorCQkvKiBpZiB3ZSBjYW4ndCBldmVuIGZsdXNoIG92ZXJmbG93LCBkb24ndCB3
YWl0IGZvciBtb3JlICovCisJCWlmICghaW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCkp
IHsKKwkJCXJldCA9IC1FQlVTWTsKKwkJCWJyZWFrOworCQl9CisJCXByZXBhcmVfdG9fd2Fp
dF9leGNsdXNpdmUoJmN0eC0+Y3Ffd2FpdCwgJmlvd3Eud3EsCiAJCQkJCQlUQVNLX0lOVEVS
UlVQVElCTEUpOwotCQkvKiBtYWtlIHN1cmUgd2UgcnVuIHRhc2tfd29yayBiZWZvcmUgY2hl
Y2tpbmcgZm9yIHNpZ25hbHMgKi8KLQkJcmV0ID0gaW9fcnVuX3Rhc2tfd29ya19zaWcoKTsK
LQkJaWYgKHJldCA+IDApIHsKLQkJCWZpbmlzaF93YWl0KCZjdHgtPndhaXQsICZpb3dxLndx
KTsKLQkJCWNvbnRpbnVlOworCQlyZXQgPSBpb19jcXJpbmdfd2FpdF9zY2hlZHVsZShjdHgs
ICZpb3dxLCB0aW1lb3V0KTsKKwkJZmluaXNoX3dhaXQoJmN0eC0+Y3Ffd2FpdCwgJmlvd3Eu
d3EpOworCQljb25kX3Jlc2NoZWQoKTsKKwl9IHdoaWxlIChyZXQgPiAwKTsKKworCXJlc3Rv
cmVfc2F2ZWRfc2lnbWFza191bmxlc3MocmV0ID09IC1FSU5UUik7CisKKwlyZXR1cm4gUkVB
RF9PTkNFKHJpbmdzLT5jcS5oZWFkKSA9PSBSRUFEX09OQ0UocmluZ3MtPmNxLnRhaWwpID8g
cmV0IDogMDsKK30KKworc3RhdGljIHZvaWQgaW9fZnJlZV9wYWdlX3RhYmxlKHZvaWQgKip0
YWJsZSwgc2l6ZV90IHNpemUpCit7CisJdW5zaWduZWQgaSwgbnJfdGFibGVzID0gRElWX1JP
VU5EX1VQKHNpemUsIFBBR0VfU0laRSk7CisKKwlmb3IgKGkgPSAwOyBpIDwgbnJfdGFibGVz
OyBpKyspCisJCWtmcmVlKHRhYmxlW2ldKTsKKwlrZnJlZSh0YWJsZSk7Cit9CisKK3N0YXRp
YyB2b2lkICoqaW9fYWxsb2NfcGFnZV90YWJsZShzaXplX3Qgc2l6ZSkKK3sKKwl1bnNpZ25l
ZCBpLCBucl90YWJsZXMgPSBESVZfUk9VTkRfVVAoc2l6ZSwgUEFHRV9TSVpFKTsKKwlzaXpl
X3QgaW5pdF9zaXplID0gc2l6ZTsKKwl2b2lkICoqdGFibGU7CisKKwl0YWJsZSA9IGtjYWxs
b2MobnJfdGFibGVzLCBzaXplb2YoKnRhYmxlKSwgR0ZQX0tFUk5FTF9BQ0NPVU5UKTsKKwlp
ZiAoIXRhYmxlKQorCQlyZXR1cm4gTlVMTDsKKworCWZvciAoaSA9IDA7IGkgPCBucl90YWJs
ZXM7IGkrKykgeworCQl1bnNpZ25lZCBpbnQgdGhpc19zaXplID0gbWluX3Qoc2l6ZV90LCBz
aXplLCBQQUdFX1NJWkUpOworCisJCXRhYmxlW2ldID0ga3phbGxvYyh0aGlzX3NpemUsIEdG
UF9LRVJORUxfQUNDT1VOVCk7CisJCWlmICghdGFibGVbaV0pIHsKKwkJCWlvX2ZyZWVfcGFn
ZV90YWJsZSh0YWJsZSwgaW5pdF9zaXplKTsKKwkJCXJldHVybiBOVUxMOwogCQl9Ci0JCWVs
c2UgaWYgKHJldCA8IDApCisJCXNpemUgLT0gdGhpc19zaXplOworCX0KKwlyZXR1cm4gdGFi
bGU7Cit9CisKK3N0YXRpYyB2b2lkIGlvX3JzcmNfbm9kZV9kZXN0cm95KHN0cnVjdCBpb19y
c3JjX25vZGUgKnJlZl9ub2RlKQoreworCXBlcmNwdV9yZWZfZXhpdCgmcmVmX25vZGUtPnJl
ZnMpOworCWtmcmVlKHJlZl9ub2RlKTsKK30KKworc3RhdGljIHZvaWQgaW9fcnNyY19ub2Rl
X3JlZl96ZXJvKHN0cnVjdCBwZXJjcHVfcmVmICpyZWYpCit7CisJc3RydWN0IGlvX3JzcmNf
bm9kZSAqbm9kZSA9IGNvbnRhaW5lcl9vZihyZWYsIHN0cnVjdCBpb19yc3JjX25vZGUsIHJl
ZnMpOworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gbm9kZS0+cnNyY19kYXRhLT5jdHg7
CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlib29sIGZpcnN0X2FkZCA9IGZhbHNlOworCXVu
c2lnbmVkIGxvbmcgZGVsYXkgPSBIWjsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjdHgtPnJz
cmNfcmVmX2xvY2ssIGZsYWdzKTsKKwlub2RlLT5kb25lID0gdHJ1ZTsKKworCS8qIGlmIHdl
IGFyZSBtaWQtcXVpZXNjZSB0aGVuIGRvIG5vdCBkZWxheSAqLworCWlmIChub2RlLT5yc3Jj
X2RhdGEtPnF1aWVzY2UpCisJCWRlbGF5ID0gMDsKKworCXdoaWxlICghbGlzdF9lbXB0eSgm
Y3R4LT5yc3JjX3JlZl9saXN0KSkgeworCQlub2RlID0gbGlzdF9maXJzdF9lbnRyeSgmY3R4
LT5yc3JjX3JlZl9saXN0LAorCQkJCQkgICAgc3RydWN0IGlvX3JzcmNfbm9kZSwgbm9kZSk7
CisJCS8qIHJlY3ljbGUgcmVmIG5vZGVzIGluIG9yZGVyICovCisJCWlmICghbm9kZS0+ZG9u
ZSkKKwkJCWJyZWFrOworCQlsaXN0X2RlbCgmbm9kZS0+bm9kZSk7CisJCWZpcnN0X2FkZCB8
PSBsbGlzdF9hZGQoJm5vZGUtPmxsaXN0LCAmY3R4LT5yc3JjX3B1dF9sbGlzdCk7CisJfQor
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmN0eC0+cnNyY19yZWZfbG9jaywgZmxhZ3MpOwor
CisJaWYgKGZpcnN0X2FkZCkKKwkJbW9kX2RlbGF5ZWRfd29yayhzeXN0ZW1fd3EsICZjdHgt
PnJzcmNfcHV0X3dvcmssIGRlbGF5KTsKK30KKworc3RhdGljIHN0cnVjdCBpb19yc3JjX25v
ZGUgKmlvX3JzcmNfbm9kZV9hbGxvYyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3sKKwlz
dHJ1Y3QgaW9fcnNyY19ub2RlICpyZWZfbm9kZTsKKworCXJlZl9ub2RlID0ga3phbGxvYyhz
aXplb2YoKnJlZl9ub2RlKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFyZWZfbm9kZSkKKwkJcmV0
dXJuIE5VTEw7CisKKwlpZiAocGVyY3B1X3JlZl9pbml0KCZyZWZfbm9kZS0+cmVmcywgaW9f
cnNyY19ub2RlX3JlZl96ZXJvLAorCQkJICAgIDAsIEdGUF9LRVJORUwpKSB7CisJCWtmcmVl
KHJlZl9ub2RlKTsKKwkJcmV0dXJuIE5VTEw7CisJfQorCUlOSVRfTElTVF9IRUFEKCZyZWZf
bm9kZS0+bm9kZSk7CisJSU5JVF9MSVNUX0hFQUQoJnJlZl9ub2RlLT5yc3JjX2xpc3QpOwor
CXJlZl9ub2RlLT5kb25lID0gZmFsc2U7CisJcmV0dXJuIHJlZl9ub2RlOworfQorCitzdGF0
aWMgdm9pZCBpb19yc3JjX25vZGVfc3dpdGNoKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAor
CQkJCXN0cnVjdCBpb19yc3JjX2RhdGEgKmRhdGFfdG9fa2lsbCkKK3sKKwlXQVJOX09OX09O
Q0UoIWN0eC0+cnNyY19iYWNrdXBfbm9kZSk7CisJV0FSTl9PTl9PTkNFKGRhdGFfdG9fa2ls
bCAmJiAhY3R4LT5yc3JjX25vZGUpOworCisJaWYgKGRhdGFfdG9fa2lsbCkgeworCQlzdHJ1
Y3QgaW9fcnNyY19ub2RlICpyc3JjX25vZGUgPSBjdHgtPnJzcmNfbm9kZTsKKworCQlyc3Jj
X25vZGUtPnJzcmNfZGF0YSA9IGRhdGFfdG9fa2lsbDsKKwkJc3Bpbl9sb2NrX2lycSgmY3R4
LT5yc3JjX3JlZl9sb2NrKTsKKwkJbGlzdF9hZGRfdGFpbCgmcnNyY19ub2RlLT5ub2RlLCAm
Y3R4LT5yc3JjX3JlZl9saXN0KTsKKwkJc3Bpbl91bmxvY2tfaXJxKCZjdHgtPnJzcmNfcmVm
X2xvY2spOworCisJCWF0b21pY19pbmMoJmRhdGFfdG9fa2lsbC0+cmVmcyk7CisJCXBlcmNw
dV9yZWZfa2lsbCgmcnNyY19ub2RlLT5yZWZzKTsKKwkJY3R4LT5yc3JjX25vZGUgPSBOVUxM
OworCX0KKworCWlmICghY3R4LT5yc3JjX25vZGUpIHsKKwkJY3R4LT5yc3JjX25vZGUgPSBj
dHgtPnJzcmNfYmFja3VwX25vZGU7CisJCWN0eC0+cnNyY19iYWNrdXBfbm9kZSA9IE5VTEw7
CisJfQorfQorCitzdGF0aWMgaW50IGlvX3JzcmNfbm9kZV9zd2l0Y2hfc3RhcnQoc3RydWN0
IGlvX3JpbmdfY3R4ICpjdHgpCit7CisJaWYgKGN0eC0+cnNyY19iYWNrdXBfbm9kZSkKKwkJ
cmV0dXJuIDA7CisJY3R4LT5yc3JjX2JhY2t1cF9ub2RlID0gaW9fcnNyY19ub2RlX2FsbG9j
KGN0eCk7CisJcmV0dXJuIGN0eC0+cnNyY19iYWNrdXBfbm9kZSA/IDAgOiAtRU5PTUVNOwor
fQorCitzdGF0aWMgaW50IGlvX3JzcmNfcmVmX3F1aWVzY2Uoc3RydWN0IGlvX3JzcmNfZGF0
YSAqZGF0YSwgc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCit7CisJaW50IHJldDsKKworCS8q
IEFzIHdlIG1heSBkcm9wIC0+dXJpbmdfbG9jaywgb3RoZXIgdGFzayBtYXkgaGF2ZSBzdGFy
dGVkIHF1aWVzY2UgKi8KKwlpZiAoZGF0YS0+cXVpZXNjZSkKKwkJcmV0dXJuIC1FTlhJTzsK
KworCWRhdGEtPnF1aWVzY2UgPSB0cnVlOworCWRvIHsKKwkJcmV0ID0gaW9fcnNyY19ub2Rl
X3N3aXRjaF9zdGFydChjdHgpOworCQlpZiAocmV0KQogCQkJYnJlYWs7Ci0JCWlmIChpb19z
aG91bGRfd2FrZSgmaW93cSkpCisJCWlvX3JzcmNfbm9kZV9zd2l0Y2goY3R4LCBkYXRhKTsK
KworCQkvKiBraWxsIGluaXRpYWwgcmVmLCBhbHJlYWR5IHF1aWVzY2VkIGlmIHplcm8gKi8K
KwkJaWYgKGF0b21pY19kZWNfYW5kX3Rlc3QoJmRhdGEtPnJlZnMpKQogCQkJYnJlYWs7Ci0J
CWlmICh0ZXN0X2JpdCgwLCAmY3R4LT5jcV9jaGVja19vdmVyZmxvdykpIHsKLQkJCWZpbmlz
aF93YWl0KCZjdHgtPndhaXQsICZpb3dxLndxKTsKLQkJCWNvbnRpbnVlOworCQltdXRleF91
bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CisJCWZsdXNoX2RlbGF5ZWRfd29yaygmY3R4LT5y
c3JjX3B1dF93b3JrKTsKKwkJcmV0ID0gd2FpdF9mb3JfY29tcGxldGlvbl9pbnRlcnJ1cHRp
YmxlKCZkYXRhLT5kb25lKTsKKwkJaWYgKCFyZXQpIHsKKwkJCW11dGV4X2xvY2soJmN0eC0+
dXJpbmdfbG9jayk7CisJCQlpZiAoYXRvbWljX3JlYWQoJmRhdGEtPnJlZnMpID4gMCkgewor
CQkJCS8qCisJCQkJICogaXQgaGFzIGJlZW4gcmV2aXZlZCBieSBhbm90aGVyIHRocmVhZCB3
aGlsZQorCQkJCSAqIHdlIHdlcmUgdW5sb2NrZWQKKwkJCQkgKi8KKwkJCQltdXRleF91bmxv
Y2soJmN0eC0+dXJpbmdfbG9jayk7CisJCQl9IGVsc2UgeworCQkJCWJyZWFrOworCQkJfQor
CQl9CisKKwkJYXRvbWljX2luYygmZGF0YS0+cmVmcyk7CisJCS8qIHdhaXQgZm9yIGFsbCB3
b3JrcyBwb3RlbnRpYWxseSBjb21wbGV0aW5nIGRhdGEtPmRvbmUgKi8KKwkJZmx1c2hfZGVs
YXllZF93b3JrKCZjdHgtPnJzcmNfcHV0X3dvcmspOworCQlyZWluaXRfY29tcGxldGlvbigm
ZGF0YS0+ZG9uZSk7CisKKwkJcmV0ID0gaW9fcnVuX3Rhc2tfd29ya19zaWcoKTsKKwkJbXV0
ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsKKwl9IHdoaWxlIChyZXQgPj0gMCk7CisJZGF0
YS0+cXVpZXNjZSA9IGZhbHNlOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIHU2NCAq
aW9fZ2V0X3RhZ19zbG90KHN0cnVjdCBpb19yc3JjX2RhdGEgKmRhdGEsIHVuc2lnbmVkIGlu
dCBpZHgpCit7CisJdW5zaWduZWQgaW50IG9mZiA9IGlkeCAmIElPX1JTUkNfVEFHX1RBQkxF
X01BU0s7CisJdW5zaWduZWQgaW50IHRhYmxlX2lkeCA9IGlkeCA+PiBJT19SU1JDX1RBR19U
QUJMRV9TSElGVDsKKworCXJldHVybiAmZGF0YS0+dGFnc1t0YWJsZV9pZHhdW29mZl07Cit9
CisKK3N0YXRpYyB2b2lkIGlvX3JzcmNfZGF0YV9mcmVlKHN0cnVjdCBpb19yc3JjX2RhdGEg
KmRhdGEpCit7CisJc2l6ZV90IHNpemUgPSBkYXRhLT5uciAqIHNpemVvZihkYXRhLT50YWdz
WzBdWzBdKTsKKworCWlmIChkYXRhLT50YWdzKQorCQlpb19mcmVlX3BhZ2VfdGFibGUoKHZv
aWQgKiopZGF0YS0+dGFncywgc2l6ZSk7CisJa2ZyZWUoZGF0YSk7Cit9CisKK3N0YXRpYyBp
bnQgaW9fcnNyY19kYXRhX2FsbG9jKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCByc3JjX3B1
dF9mbiAqZG9fcHV0LAorCQkJICAgICAgdTY0IF9fdXNlciAqdXRhZ3MsIHVuc2lnbmVkIG5y
LAorCQkJICAgICAgc3RydWN0IGlvX3JzcmNfZGF0YSAqKnBkYXRhKQoreworCXN0cnVjdCBp
b19yc3JjX2RhdGEgKmRhdGE7CisJaW50IHJldCA9IC1FTk9NRU07CisJdW5zaWduZWQgaTsK
KworCWRhdGEgPSBremFsbG9jKHNpemVvZigqZGF0YSksIEdGUF9LRVJORUwpOworCWlmICgh
ZGF0YSkKKwkJcmV0dXJuIC1FTk9NRU07CisJZGF0YS0+dGFncyA9ICh1NjQgKiopaW9fYWxs
b2NfcGFnZV90YWJsZShuciAqIHNpemVvZihkYXRhLT50YWdzWzBdWzBdKSk7CisJaWYgKCFk
YXRhLT50YWdzKSB7CisJCWtmcmVlKGRhdGEpOworCQlyZXR1cm4gLUVOT01FTTsKKwl9CisK
KwlkYXRhLT5uciA9IG5yOworCWRhdGEtPmN0eCA9IGN0eDsKKwlkYXRhLT5kb19wdXQgPSBk
b19wdXQ7CisJaWYgKHV0YWdzKSB7CisJCXJldCA9IC1FRkFVTFQ7CisJCWZvciAoaSA9IDA7
IGkgPCBucjsgaSsrKSB7CisJCQl1NjQgKnRhZ19zbG90ID0gaW9fZ2V0X3RhZ19zbG90KGRh
dGEsIGkpOworCisJCQlpZiAoY29weV9mcm9tX3VzZXIodGFnX3Nsb3QsICZ1dGFnc1tpXSwK
KwkJCQkJICAgc2l6ZW9mKCp0YWdfc2xvdCkpKQorCQkJCWdvdG8gZmFpbDsKIAkJfQotCQlz
Y2hlZHVsZSgpOwotCX0gd2hpbGUgKDEpOwotCWZpbmlzaF93YWl0KCZjdHgtPndhaXQsICZp
b3dxLndxKTsKKwl9CiAKLQlyZXN0b3JlX3NhdmVkX3NpZ21hc2tfdW5sZXNzKHJldCA9PSAt
RUlOVFIpOworCWF0b21pY19zZXQoJmRhdGEtPnJlZnMsIDEpOworCWluaXRfY29tcGxldGlv
bigmZGF0YS0+ZG9uZSk7CisJKnBkYXRhID0gZGF0YTsKKwlyZXR1cm4gMDsKK2ZhaWw6CisJ
aW9fcnNyY19kYXRhX2ZyZWUoZGF0YSk7CisJcmV0dXJuIHJldDsKK30KIAotCXJldHVybiBS
RUFEX09OQ0UocmluZ3MtPmNxLmhlYWQpID09IFJFQURfT05DRShyaW5ncy0+Y3EudGFpbCkg
PyByZXQgOiAwOworc3RhdGljIGJvb2wgaW9fYWxsb2NfZmlsZV90YWJsZXMoc3RydWN0IGlv
X2ZpbGVfdGFibGUgKnRhYmxlLCB1bnNpZ25lZCBucl9maWxlcykKK3sKKwl0YWJsZS0+Zmls
ZXMgPSBrdmNhbGxvYyhucl9maWxlcywgc2l6ZW9mKHRhYmxlLT5maWxlc1swXSksCisJCQkJ
R0ZQX0tFUk5FTF9BQ0NPVU5UKTsKKwlyZXR1cm4gISF0YWJsZS0+ZmlsZXM7Cit9CisKK3N0
YXRpYyB2b2lkIGlvX2ZyZWVfZmlsZV90YWJsZXMoc3RydWN0IGlvX2ZpbGVfdGFibGUgKnRh
YmxlKQoreworCWt2ZnJlZSh0YWJsZS0+ZmlsZXMpOworCXRhYmxlLT5maWxlcyA9IE5VTEw7
CiB9CiAKIHN0YXRpYyB2b2lkIF9faW9fc3FlX2ZpbGVzX3VucmVnaXN0ZXIoc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHgpCkBAIC03MDg2LDEyOSArNzc3MCw5NyBAQCBzdGF0aWMgdm9pZCBf
X2lvX3NxZV9maWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogCQkJ
ZnB1dChmaWxlKTsKIAl9CiAjZW5kaWYKKwlpb19mcmVlX2ZpbGVfdGFibGVzKCZjdHgtPmZp
bGVfdGFibGUpOworCWlvX3JzcmNfZGF0YV9mcmVlKGN0eC0+ZmlsZV9kYXRhKTsKKwljdHgt
PmZpbGVfZGF0YSA9IE5VTEw7CisJY3R4LT5ucl91c2VyX2ZpbGVzID0gMDsKIH0KIAotc3Rh
dGljIHZvaWQgaW9fZmlsZV9yZWZfa2lsbChzdHJ1Y3QgcGVyY3B1X3JlZiAqcmVmKQorc3Rh
dGljIGludCBpb19zcWVfZmlsZXNfdW5yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCkKIHsKLQlzdHJ1Y3QgZml4ZWRfZmlsZV9kYXRhICpkYXRhOworCXVuc2lnbmVkIG5yID0g
Y3R4LT5ucl91c2VyX2ZpbGVzOworCWludCByZXQ7CiAKLQlkYXRhID0gY29udGFpbmVyX29m
KHJlZiwgc3RydWN0IGZpeGVkX2ZpbGVfZGF0YSwgcmVmcyk7Ci0JY29tcGxldGUoJmRhdGEt
PmRvbmUpOwotfQorCWlmICghY3R4LT5maWxlX2RhdGEpCisJCXJldHVybiAtRU5YSU87CiAK
LXN0YXRpYyB2b2lkIGlvX3NxZV9maWxlc19zZXRfbm9kZShzdHJ1Y3QgZml4ZWRfZmlsZV9k
YXRhICpmaWxlX2RhdGEsCi0JCQkJICBzdHJ1Y3QgZml4ZWRfZmlsZV9yZWZfbm9kZSAqcmVm
X25vZGUpCi17Ci0Jc3Bpbl9sb2NrX2JoKCZmaWxlX2RhdGEtPmxvY2spOwotCWZpbGVfZGF0
YS0+bm9kZSA9IHJlZl9ub2RlOwotCWxpc3RfYWRkX3RhaWwoJnJlZl9ub2RlLT5ub2RlLCAm
ZmlsZV9kYXRhLT5yZWZfbGlzdCk7Ci0Jc3Bpbl91bmxvY2tfYmgoJmZpbGVfZGF0YS0+bG9j
ayk7Ci0JcGVyY3B1X3JlZl9nZXQoJmZpbGVfZGF0YS0+cmVmcyk7CisJLyoKKwkgKiBRdWll
c2NlIG1heSB1bmxvY2sgLT51cmluZ19sb2NrLCBhbmQgd2hpbGUgaXQncyBub3QgaGVsZAor
CSAqIHByZXZlbnQgbmV3IHJlcXVlc3RzIHVzaW5nIHRoZSB0YWJsZS4KKwkgKi8KKwljdHgt
Pm5yX3VzZXJfZmlsZXMgPSAwOworCXJldCA9IGlvX3JzcmNfcmVmX3F1aWVzY2UoY3R4LT5m
aWxlX2RhdGEsIGN0eCk7CisJY3R4LT5ucl91c2VyX2ZpbGVzID0gbnI7CisJaWYgKCFyZXQp
CisJCV9faW9fc3FlX2ZpbGVzX3VucmVnaXN0ZXIoY3R4KTsKKwlyZXR1cm4gcmV0OwogfQog
Ci0KLXN0YXRpYyB2b2lkIGlvX3NxZV9maWxlc19raWxsX25vZGUoc3RydWN0IGZpeGVkX2Zp
bGVfZGF0YSAqZGF0YSkKK3N0YXRpYyB2b2lkIGlvX3NxX3RocmVhZF91bnBhcmsoc3RydWN0
IGlvX3NxX2RhdGEgKnNxZCkKKwlfX3JlbGVhc2VzKCZzcWQtPmxvY2spCiB7Ci0Jc3RydWN0
IGZpeGVkX2ZpbGVfcmVmX25vZGUgKnJlZl9ub2RlID0gTlVMTDsKKwlXQVJOX09OX09OQ0Uo
c3FkLT50aHJlYWQgPT0gY3VycmVudCk7CiAKLQlzcGluX2xvY2tfYmgoJmRhdGEtPmxvY2sp
OwotCXJlZl9ub2RlID0gZGF0YS0+bm9kZTsKLQlzcGluX3VubG9ja19iaCgmZGF0YS0+bG9j
ayk7Ci0JaWYgKHJlZl9ub2RlKQotCQlwZXJjcHVfcmVmX2tpbGwoJnJlZl9ub2RlLT5yZWZz
KTsKKwkvKgorCSAqIERvIHRoZSBkYW5jZSBidXQgbm90IGNvbmRpdGlvbmFsIGNsZWFyX2Jp
dCgpIGJlY2F1c2UgaXQnZCByYWNlIHdpdGgKKwkgKiBvdGhlciB0aHJlYWRzIGluY3JlbWVu
dGluZyBwYXJrX3BlbmRpbmcgYW5kIHNldHRpbmcgdGhlIGJpdC4KKwkgKi8KKwljbGVhcl9i
aXQoSU9fU1FfVEhSRUFEX1NIT1VMRF9QQVJLLCAmc3FkLT5zdGF0ZSk7CisJaWYgKGF0b21p
Y19kZWNfcmV0dXJuKCZzcWQtPnBhcmtfcGVuZGluZykpCisJCXNldF9iaXQoSU9fU1FfVEhS
RUFEX1NIT1VMRF9QQVJLLCAmc3FkLT5zdGF0ZSk7CisJbXV0ZXhfdW5sb2NrKCZzcWQtPmxv
Y2spOwogfQogCi1zdGF0aWMgaW50IGlvX2ZpbGVfcmVmX3F1aWVzY2Uoc3RydWN0IGZpeGVk
X2ZpbGVfZGF0YSAqZGF0YSwKLQkJCSAgICAgICBzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkK
K3N0YXRpYyB2b2lkIGlvX3NxX3RocmVhZF9wYXJrKHN0cnVjdCBpb19zcV9kYXRhICpzcWQp
CisJX19hY3F1aXJlcygmc3FkLT5sb2NrKQogewotCWludCByZXQ7Ci0Jc3RydWN0IGZpeGVk
X2ZpbGVfcmVmX25vZGUgKmJhY2t1cF9ub2RlOwotCi0JaWYgKGRhdGEtPnF1aWVzY2UpCi0J
CXJldHVybiAtRU5YSU87Ci0KLQlkYXRhLT5xdWllc2NlID0gdHJ1ZTsKLQlkbyB7Ci0JCWJh
Y2t1cF9ub2RlID0gYWxsb2NfZml4ZWRfZmlsZV9yZWZfbm9kZShjdHgpOwotCQlpZiAoIWJh
Y2t1cF9ub2RlKQotCQkJYnJlYWs7Ci0KLQkJaW9fc3FlX2ZpbGVzX2tpbGxfbm9kZShkYXRh
KTsKLQkJcGVyY3B1X3JlZl9raWxsKCZkYXRhLT5yZWZzKTsKLQkJZmx1c2hfZGVsYXllZF93
b3JrKCZjdHgtPmZpbGVfcHV0X3dvcmspOwotCi0JCXJldCA9IHdhaXRfZm9yX2NvbXBsZXRp
b25faW50ZXJydXB0aWJsZSgmZGF0YS0+ZG9uZSk7Ci0JCWlmICghcmV0KQotCQkJYnJlYWs7
Ci0KLQkJcGVyY3B1X3JlZl9yZXN1cnJlY3QoJmRhdGEtPnJlZnMpOwotCQlpb19zcWVfZmls
ZXNfc2V0X25vZGUoZGF0YSwgYmFja3VwX25vZGUpOwotCQliYWNrdXBfbm9kZSA9IE5VTEw7
Ci0JCXJlaW5pdF9jb21wbGV0aW9uKCZkYXRhLT5kb25lKTsKLQkJbXV0ZXhfdW5sb2NrKCZj
dHgtPnVyaW5nX2xvY2spOwotCQlyZXQgPSBpb19ydW5fdGFza193b3JrX3NpZygpOwotCQlt
dXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCi0JCWlmIChyZXQgPCAwKQotCQkJYnJl
YWs7Ci0JCWJhY2t1cF9ub2RlID0gYWxsb2NfZml4ZWRfZmlsZV9yZWZfbm9kZShjdHgpOwot
CQlyZXQgPSAtRU5PTUVNOwotCQlpZiAoIWJhY2t1cF9ub2RlKQotCQkJYnJlYWs7Ci0JfSB3
aGlsZSAoMSk7Ci0JZGF0YS0+cXVpZXNjZSA9IGZhbHNlOworCVdBUk5fT05fT05DRShzcWQt
PnRocmVhZCA9PSBjdXJyZW50KTsKIAotCWlmIChiYWNrdXBfbm9kZSkKLQkJZGVzdHJveV9m
aXhlZF9maWxlX3JlZl9ub2RlKGJhY2t1cF9ub2RlKTsKLQlyZXR1cm4gcmV0OworCWF0b21p
Y19pbmMoJnNxZC0+cGFya19wZW5kaW5nKTsKKwlzZXRfYml0KElPX1NRX1RIUkVBRF9TSE9V
TERfUEFSSywgJnNxZC0+c3RhdGUpOworCW11dGV4X2xvY2soJnNxZC0+bG9jayk7CisJaWYg
KHNxZC0+dGhyZWFkKQorCQl3YWtlX3VwX3Byb2Nlc3Moc3FkLT50aHJlYWQpOwogfQogCi1z
dGF0aWMgaW50IGlvX3NxZV9maWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4KQorc3RhdGljIHZvaWQgaW9fc3FfdGhyZWFkX3N0b3Aoc3RydWN0IGlvX3NxX2RhdGEg
KnNxZCkKIHsKLQlzdHJ1Y3QgZml4ZWRfZmlsZV9kYXRhICpkYXRhID0gY3R4LT5maWxlX2Rh
dGE7Ci0JdW5zaWduZWQgbnJfdGFibGVzLCBpOwotCWludCByZXQ7CisJV0FSTl9PTl9PTkNF
KHNxZC0+dGhyZWFkID09IGN1cnJlbnQpOworCVdBUk5fT05fT05DRSh0ZXN0X2JpdChJT19T
UV9USFJFQURfU0hPVUxEX1NUT1AsICZzcWQtPnN0YXRlKSk7CiAKLQkvKgotCSAqIHBlcmNw
dV9yZWZfaXNfZHlpbmcoKSBpcyB0byBzdG9wIHBhcmFsbGVsIGZpbGVzIHVucmVnaXN0ZXIK
LQkgKiBTaW5jZSB3ZSBwb3NzaWJseSBkcm9wIHVyaW5nIGxvY2sgbGF0ZXIgaW4gdGhpcyBm
dW5jdGlvbiB0bwotCSAqIHJ1biB0YXNrIHdvcmsuCi0JICovCi0JaWYgKCFkYXRhIHx8IHBl
cmNwdV9yZWZfaXNfZHlpbmcoJmRhdGEtPnJlZnMpKQotCQlyZXR1cm4gLUVOWElPOwotCXJl
dCA9IGlvX2ZpbGVfcmVmX3F1aWVzY2UoZGF0YSwgY3R4KTsKLQlpZiAocmV0KQotCQlyZXR1
cm4gcmV0OwotCi0JX19pb19zcWVfZmlsZXNfdW5yZWdpc3RlcihjdHgpOwotCW5yX3RhYmxl
cyA9IERJVl9ST1VORF9VUChjdHgtPm5yX3VzZXJfZmlsZXMsIElPUklOR19NQVhfRklMRVNf
VEFCTEUpOwotCWZvciAoaSA9IDA7IGkgPCBucl90YWJsZXM7IGkrKykKLQkJa2ZyZWUoZGF0
YS0+dGFibGVbaV0uZmlsZXMpOwotCWtmcmVlKGRhdGEtPnRhYmxlKTsKLQlwZXJjcHVfcmVm
X2V4aXQoJmRhdGEtPnJlZnMpOwotCWtmcmVlKGRhdGEpOwotCWN0eC0+ZmlsZV9kYXRhID0g
TlVMTDsKLQljdHgtPm5yX3VzZXJfZmlsZXMgPSAwOwotCXJldHVybiAwOworCXNldF9iaXQo
SU9fU1FfVEhSRUFEX1NIT1VMRF9TVE9QLCAmc3FkLT5zdGF0ZSk7CisJbXV0ZXhfbG9jaygm
c3FkLT5sb2NrKTsKKwlpZiAoc3FkLT50aHJlYWQpCisJCXdha2VfdXBfcHJvY2VzcyhzcWQt
PnRocmVhZCk7CisJbXV0ZXhfdW5sb2NrKCZzcWQtPmxvY2spOworCXdhaXRfZm9yX2NvbXBs
ZXRpb24oJnNxZC0+ZXhpdGVkKTsKIH0KIAogc3RhdGljIHZvaWQgaW9fcHV0X3NxX2RhdGEo
c3RydWN0IGlvX3NxX2RhdGEgKnNxZCkKIHsKIAlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0
KCZzcWQtPnJlZnMpKSB7Ci0JCS8qCi0JCSAqIFRoZSBwYXJrIGlzIGEgYml0IG9mIGEgd29y
ay1hcm91bmQsIHdpdGhvdXQgaXQgd2UgZ2V0Ci0JCSAqIHdhcm5pbmcgc3Bld3Mgb24gc2h1
dGRvd24gd2l0aCBTUVBPTEwgc2V0IGFuZCBhZmZpbml0eQotCQkgKiBzZXQgdG8gYSBzaW5n
bGUgQ1BVLgotCQkgKi8KLQkJaWYgKHNxZC0+dGhyZWFkKSB7Ci0JCQlrdGhyZWFkX3Bhcmso
c3FkLT50aHJlYWQpOwotCQkJa3RocmVhZF9zdG9wKHNxZC0+dGhyZWFkKTsKLQkJfQorCQlX
QVJOX09OX09OQ0UoYXRvbWljX3JlYWQoJnNxZC0+cGFya19wZW5kaW5nKSk7CiAKKwkJaW9f
c3FfdGhyZWFkX3N0b3Aoc3FkKTsKIAkJa2ZyZWUoc3FkKTsKIAl9CiB9CiAKK3N0YXRpYyB2
b2lkIGlvX3NxX3RocmVhZF9maW5pc2goc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCit7CisJ
c3RydWN0IGlvX3NxX2RhdGEgKnNxZCA9IGN0eC0+c3FfZGF0YTsKKworCWlmIChzcWQpIHsK
KwkJaW9fc3FfdGhyZWFkX3Bhcmsoc3FkKTsKKwkJbGlzdF9kZWxfaW5pdCgmY3R4LT5zcWRf
bGlzdCk7CisJCWlvX3NxZF91cGRhdGVfdGhyZWFkX2lkbGUoc3FkKTsKKwkJaW9fc3FfdGhy
ZWFkX3VucGFyayhzcWQpOworCisJCWlvX3B1dF9zcV9kYXRhKHNxZCk7CisJCWN0eC0+c3Ff
ZGF0YSA9IE5VTEw7CisJfQorfQorCiBzdGF0aWMgc3RydWN0IGlvX3NxX2RhdGEgKmlvX2F0
dGFjaF9zcV9kYXRhKHN0cnVjdCBpb191cmluZ19wYXJhbXMgKnApCiB7CiAJc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHhfYXR0YWNoOwpAQCAtNzIyOSw5MiArNzg4MSw0NiBAQCBzdGF0aWMg
c3RydWN0IGlvX3NxX2RhdGEgKmlvX2F0dGFjaF9zcV9kYXRhKHN0cnVjdCBpb191cmluZ19w
YXJhbXMgKnApCiAJCWZkcHV0KGYpOwogCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKIAl9
CisJaWYgKHNxZC0+dGFza190Z2lkICE9IGN1cnJlbnQtPnRnaWQpIHsKKwkJZmRwdXQoZik7
CisJCXJldHVybiBFUlJfUFRSKC1FUEVSTSk7CisJfQogCiAJcmVmY291bnRfaW5jKCZzcWQt
PnJlZnMpOwogCWZkcHV0KGYpOwogCXJldHVybiBzcWQ7CiB9CiAKLXN0YXRpYyBzdHJ1Y3Qg
aW9fc3FfZGF0YSAqaW9fZ2V0X3NxX2RhdGEoc3RydWN0IGlvX3VyaW5nX3BhcmFtcyAqcCkK
K3N0YXRpYyBzdHJ1Y3QgaW9fc3FfZGF0YSAqaW9fZ2V0X3NxX2RhdGEoc3RydWN0IGlvX3Vy
aW5nX3BhcmFtcyAqcCwKKwkJCQkJIGJvb2wgKmF0dGFjaGVkKQogewogCXN0cnVjdCBpb19z
cV9kYXRhICpzcWQ7CiAKLQlpZiAocC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfQVRUQUNIX1dR
KQotCQlyZXR1cm4gaW9fYXR0YWNoX3NxX2RhdGEocCk7CisJKmF0dGFjaGVkID0gZmFsc2U7
CisJaWYgKHAtPmZsYWdzICYgSU9SSU5HX1NFVFVQX0FUVEFDSF9XUSkgeworCQlzcWQgPSBp
b19hdHRhY2hfc3FfZGF0YShwKTsKKwkJaWYgKCFJU19FUlIoc3FkKSkgeworCQkJKmF0dGFj
aGVkID0gdHJ1ZTsKKwkJCXJldHVybiBzcWQ7CisJCX0KKwkJLyogZmFsbCB0aHJvdWdoIGZv
ciBFUEVSTSBjYXNlLCBzZXR1cCBuZXcgc3FkL3Rhc2sgKi8KKwkJaWYgKFBUUl9FUlIoc3Fk
KSAhPSAtRVBFUk0pCisJCQlyZXR1cm4gc3FkOworCX0KIAogCXNxZCA9IGt6YWxsb2Moc2l6
ZW9mKCpzcWQpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIXNxZCkKIAkJcmV0dXJuIEVSUl9QVFIo
LUVOT01FTSk7CiAKKwlhdG9taWNfc2V0KCZzcWQtPnBhcmtfcGVuZGluZywgMCk7CiAJcmVm
Y291bnRfc2V0KCZzcWQtPnJlZnMsIDEpOwogCUlOSVRfTElTVF9IRUFEKCZzcWQtPmN0eF9s
aXN0KTsKLQlJTklUX0xJU1RfSEVBRCgmc3FkLT5jdHhfbmV3X2xpc3QpOwotCW11dGV4X2lu
aXQoJnNxZC0+Y3R4X2xvY2spOwogCW11dGV4X2luaXQoJnNxZC0+bG9jayk7CiAJaW5pdF93
YWl0cXVldWVfaGVhZCgmc3FkLT53YWl0KTsKKwlpbml0X2NvbXBsZXRpb24oJnNxZC0+ZXhp
dGVkKTsKIAlyZXR1cm4gc3FkOwogfQogCi1zdGF0aWMgdm9pZCBpb19zcV90aHJlYWRfdW5w
YXJrKHN0cnVjdCBpb19zcV9kYXRhICpzcWQpCi0JX19yZWxlYXNlcygmc3FkLT5sb2NrKQot
ewotCWlmICghc3FkLT50aHJlYWQpCi0JCXJldHVybjsKLQlrdGhyZWFkX3VucGFyayhzcWQt
PnRocmVhZCk7Ci0JbXV0ZXhfdW5sb2NrKCZzcWQtPmxvY2spOwotfQotCi1zdGF0aWMgdm9p
ZCBpb19zcV90aHJlYWRfcGFyayhzdHJ1Y3QgaW9fc3FfZGF0YSAqc3FkKQotCV9fYWNxdWly
ZXMoJnNxZC0+bG9jaykKLXsKLQlpZiAoIXNxZC0+dGhyZWFkKQotCQlyZXR1cm47Ci0JbXV0
ZXhfbG9jaygmc3FkLT5sb2NrKTsKLQlrdGhyZWFkX3Bhcmsoc3FkLT50aHJlYWQpOwotfQot
Ci1zdGF0aWMgdm9pZCBpb19zcV90aHJlYWRfc3RvcChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCkKLXsKLQlzdHJ1Y3QgaW9fc3FfZGF0YSAqc3FkID0gY3R4LT5zcV9kYXRhOwotCi0JaWYg
KHNxZCkgewotCQlpZiAoc3FkLT50aHJlYWQpIHsKLQkJCS8qCi0JCQkgKiBXZSBtYXkgYXJy
aXZlIGhlcmUgZnJvbSB0aGUgZXJyb3IgYnJhbmNoIGluCi0JCQkgKiBpb19zcV9vZmZsb2Fk
X2NyZWF0ZSgpIHdoZXJlIHRoZSBrdGhyZWFkIGlzIGNyZWF0ZWQKLQkJCSAqIHdpdGhvdXQg
YmVpbmcgd2FrZWQgdXAsIHRodXMgd2FrZSBpdCB1cCBub3cgdG8gbWFrZQotCQkJICogc3Vy
ZSB0aGUgd2FpdCB3aWxsIGNvbXBsZXRlLgotCQkJICovCi0JCQl3YWtlX3VwX3Byb2Nlc3Mo
c3FkLT50aHJlYWQpOwotCQkJd2FpdF9mb3JfY29tcGxldGlvbigmY3R4LT5zcV90aHJlYWRf
Y29tcCk7Ci0KLQkJCWlvX3NxX3RocmVhZF9wYXJrKHNxZCk7Ci0JCX0KLQotCQltdXRleF9s
b2NrKCZzcWQtPmN0eF9sb2NrKTsKLQkJbGlzdF9kZWwoJmN0eC0+c3FkX2xpc3QpOwotCQlt
dXRleF91bmxvY2soJnNxZC0+Y3R4X2xvY2spOwotCi0JCWlmIChzcWQtPnRocmVhZCkgewot
CQkJZmluaXNoX3dhaXQoJnNxZC0+d2FpdCwgJmN0eC0+c3FvX3dhaXRfZW50cnkpOwotCQkJ
aW9fc3FfdGhyZWFkX3VucGFyayhzcWQpOwotCQl9Ci0KLQkJaW9fcHV0X3NxX2RhdGEoc3Fk
KTsKLQkJY3R4LT5zcV9kYXRhID0gTlVMTDsKLQl9Ci19Ci0KLXN0YXRpYyB2b2lkIGlvX2Zp
bmlzaF9hc3luYyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKLXsKLQlpb19zcV90aHJlYWRf
c3RvcChjdHgpOwotCi0JaWYgKGN0eC0+aW9fd3EpIHsKLQkJaW9fd3FfZGVzdHJveShjdHgt
PmlvX3dxKTsKLQkJY3R4LT5pb193cSA9IE5VTEw7Ci0JfQotfQotCiAjaWYgZGVmaW5lZChD
T05GSUdfVU5JWCkKIC8qCiAgKiBFbnN1cmUgdGhlIFVOSVggZ2MgaXMgYXdhcmUgb2Ygb3Vy
IGZpbGUgc2V0LCBzbyB3ZSBhcmUgY2VydGFpbiB0aGF0CkBAIC03MzQyLDcgKzc5NDgsNyBA
QCBzdGF0aWMgaW50IF9faW9fc3FlX2ZpbGVzX3NjbShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCwgaW50IG5yLCBpbnQgb2Zmc2V0KQogCXNrYi0+c2NtX2lvX3VyaW5nID0gMTsKIAogCW5y
X2ZpbGVzID0gMDsKLQlmcGwtPnVzZXIgPSBnZXRfdWlkKGN0eC0+dXNlcik7CisJZnBsLT51
c2VyID0gZ2V0X3VpZChjdXJyZW50X3VzZXIoKSk7CiAJZm9yIChpID0gMDsgaSA8IG5yOyBp
KyspIHsKIAkJc3RydWN0IGZpbGUgKmZpbGUgPSBpb19maWxlX2Zyb21faW5kZXgoY3R4LCBp
ICsgb2Zmc2V0KTsKIApAQCAtNzQxOCwzNSArODAyNCw5IEBAIHN0YXRpYyBpbnQgaW9fc3Fl
X2ZpbGVzX3NjbShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIH0KICNlbmRpZgogCi1zdGF0
aWMgaW50IGlvX3NxZV9hbGxvY19maWxlX3RhYmxlcyhzdHJ1Y3QgZml4ZWRfZmlsZV9kYXRh
ICpmaWxlX2RhdGEsCi0JCQkJICAgIHVuc2lnbmVkIG5yX3RhYmxlcywgdW5zaWduZWQgbnJf
ZmlsZXMpCi17Ci0JaW50IGk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbnJfdGFibGVzOyBpKysp
IHsKLQkJc3RydWN0IGZpeGVkX2ZpbGVfdGFibGUgKnRhYmxlID0gJmZpbGVfZGF0YS0+dGFi
bGVbaV07Ci0JCXVuc2lnbmVkIHRoaXNfZmlsZXM7Ci0KLQkJdGhpc19maWxlcyA9IG1pbihu
cl9maWxlcywgSU9SSU5HX01BWF9GSUxFU19UQUJMRSk7Ci0JCXRhYmxlLT5maWxlcyA9IGtj
YWxsb2ModGhpc19maWxlcywgc2l6ZW9mKHN0cnVjdCBmaWxlICopLAotCQkJCQlHRlBfS0VS
TkVMX0FDQ09VTlQpOwotCQlpZiAoIXRhYmxlLT5maWxlcykKLQkJCWJyZWFrOwotCQlucl9m
aWxlcyAtPSB0aGlzX2ZpbGVzOwotCX0KLQotCWlmIChpID09IG5yX3RhYmxlcykKLQkJcmV0
dXJuIDA7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbnJfdGFibGVzOyBpKyspIHsKLQkJc3RydWN0
IGZpeGVkX2ZpbGVfdGFibGUgKnRhYmxlID0gJmZpbGVfZGF0YS0+dGFibGVbaV07Ci0JCWtm
cmVlKHRhYmxlLT5maWxlcyk7Ci0JfQotCXJldHVybiAxOwotfQotCi1zdGF0aWMgdm9pZCBp
b19yaW5nX2ZpbGVfcHV0KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3QgZmlsZSAq
ZmlsZSkKK3N0YXRpYyB2b2lkIGlvX3JzcmNfZmlsZV9wdXQoc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHgsIHN0cnVjdCBpb19yc3JjX3B1dCAqcHJzcmMpCiB7CisJc3RydWN0IGZpbGUgKmZp
bGUgPSBwcnNyYy0+ZmlsZTsKICNpZiBkZWZpbmVkKENPTkZJR19VTklYKQogCXN0cnVjdCBz
b2NrICpzb2NrID0gY3R4LT5yaW5nX3NvY2stPnNrOwogCXN0cnVjdCBza19idWZmX2hlYWQg
bGlzdCwgKmhlYWQgPSAmc29jay0+c2tfcmVjZWl2ZV9xdWV1ZTsKQEAgLTc1MDcsMTE3ICs4
MDg3LDYxIEBAIHN0YXRpYyB2b2lkIGlvX3JpbmdfZmlsZV9wdXQoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHN0cnVjdCBmaWxlICpmaWxlKQogI2VuZGlmCiB9CiAKLXN0cnVjdCBpb19m
aWxlX3B1dCB7Ci0Jc3RydWN0IGxpc3RfaGVhZCBsaXN0OwotCXN0cnVjdCBmaWxlICpmaWxl
OwotfTsKLQotc3RhdGljIHZvaWQgX19pb19maWxlX3B1dF93b3JrKHN0cnVjdCBmaXhlZF9m
aWxlX3JlZl9ub2RlICpyZWZfbm9kZSkKK3N0YXRpYyB2b2lkIF9faW9fcnNyY19wdXRfd29y
ayhzdHJ1Y3QgaW9fcnNyY19ub2RlICpyZWZfbm9kZSkKIHsKLQlzdHJ1Y3QgZml4ZWRfZmls
ZV9kYXRhICpmaWxlX2RhdGEgPSByZWZfbm9kZS0+ZmlsZV9kYXRhOwotCXN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4ID0gZmlsZV9kYXRhLT5jdHg7Ci0Jc3RydWN0IGlvX2ZpbGVfcHV0ICpw
ZmlsZSwgKnRtcDsKKwlzdHJ1Y3QgaW9fcnNyY19kYXRhICpyc3JjX2RhdGEgPSByZWZfbm9k
ZS0+cnNyY19kYXRhOworCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gcnNyY19kYXRhLT5j
dHg7CisJc3RydWN0IGlvX3JzcmNfcHV0ICpwcnNyYywgKnRtcDsKKworCWxpc3RfZm9yX2Vh
Y2hfZW50cnlfc2FmZShwcnNyYywgdG1wLCAmcmVmX25vZGUtPnJzcmNfbGlzdCwgbGlzdCkg
eworCQlsaXN0X2RlbCgmcHJzcmMtPmxpc3QpOworCisJCWlmIChwcnNyYy0+dGFnKSB7CisJ
CQlib29sIGxvY2tfcmluZyA9IGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfSU9QT0xMOwog
Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHBmaWxlLCB0bXAsICZyZWZfbm9kZS0+Zmls
ZV9saXN0LCBsaXN0KSB7Ci0JCWxpc3RfZGVsKCZwZmlsZS0+bGlzdCk7Ci0JCWlvX3Jpbmdf
ZmlsZV9wdXQoY3R4LCBwZmlsZS0+ZmlsZSk7Ci0JCWtmcmVlKHBmaWxlKTsKKwkJCWlvX3Jp
bmdfc3VibWl0X2xvY2soY3R4LCBsb2NrX3JpbmcpOworCQkJc3Bpbl9sb2NrKCZjdHgtPmNv
bXBsZXRpb25fbG9jayk7CisJCQlpb19maWxsX2NxZV9hdXgoY3R4LCBwcnNyYy0+dGFnLCAw
LCAwKTsKKwkJCWlvX2NvbW1pdF9jcXJpbmcoY3R4KTsKKwkJCXNwaW5fdW5sb2NrKCZjdHgt
PmNvbXBsZXRpb25fbG9jayk7CisJCQlpb19jcXJpbmdfZXZfcG9zdGVkKGN0eCk7CisJCQlp
b19yaW5nX3N1Ym1pdF91bmxvY2soY3R4LCBsb2NrX3JpbmcpOworCQl9CisKKwkJcnNyY19k
YXRhLT5kb19wdXQoY3R4LCBwcnNyYyk7CisJCWtmcmVlKHByc3JjKTsKIAl9CiAKLQlwZXJj
cHVfcmVmX2V4aXQoJnJlZl9ub2RlLT5yZWZzKTsKLQlrZnJlZShyZWZfbm9kZSk7Ci0JcGVy
Y3B1X3JlZl9wdXQoJmZpbGVfZGF0YS0+cmVmcyk7CisJaW9fcnNyY19ub2RlX2Rlc3Ryb3ko
cmVmX25vZGUpOworCWlmIChhdG9taWNfZGVjX2FuZF90ZXN0KCZyc3JjX2RhdGEtPnJlZnMp
KQorCQljb21wbGV0ZSgmcnNyY19kYXRhLT5kb25lKTsKIH0KIAotc3RhdGljIHZvaWQgaW9f
ZmlsZV9wdXRfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCitzdGF0aWMgdm9pZCBp
b19yc3JjX3B1dF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIHsKIAlzdHJ1Y3Qg
aW9fcmluZ19jdHggKmN0eDsKIAlzdHJ1Y3QgbGxpc3Rfbm9kZSAqbm9kZTsKIAotCWN0eCA9
IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3QgaW9fcmluZ19jdHgsIGZpbGVfcHV0X3dvcmsu
d29yayk7Ci0Jbm9kZSA9IGxsaXN0X2RlbF9hbGwoJmN0eC0+ZmlsZV9wdXRfbGxpc3QpOwor
CWN0eCA9IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3QgaW9fcmluZ19jdHgsIHJzcmNfcHV0
X3dvcmsud29yayk7CisJbm9kZSA9IGxsaXN0X2RlbF9hbGwoJmN0eC0+cnNyY19wdXRfbGxp
c3QpOwogCiAJd2hpbGUgKG5vZGUpIHsKLQkJc3RydWN0IGZpeGVkX2ZpbGVfcmVmX25vZGUg
KnJlZl9ub2RlOworCQlzdHJ1Y3QgaW9fcnNyY19ub2RlICpyZWZfbm9kZTsKIAkJc3RydWN0
IGxsaXN0X25vZGUgKm5leHQgPSBub2RlLT5uZXh0OwogCi0JCXJlZl9ub2RlID0gbGxpc3Rf
ZW50cnkobm9kZSwgc3RydWN0IGZpeGVkX2ZpbGVfcmVmX25vZGUsIGxsaXN0KTsKLQkJX19p
b19maWxlX3B1dF93b3JrKHJlZl9ub2RlKTsKKwkJcmVmX25vZGUgPSBsbGlzdF9lbnRyeShu
b2RlLCBzdHJ1Y3QgaW9fcnNyY19ub2RlLCBsbGlzdCk7CisJCV9faW9fcnNyY19wdXRfd29y
ayhyZWZfbm9kZSk7CiAJCW5vZGUgPSBuZXh0OwogCX0KIH0KIAotc3RhdGljIHZvaWQgaW9f
ZmlsZV9kYXRhX3JlZl96ZXJvKHN0cnVjdCBwZXJjcHVfcmVmICpyZWYpCi17Ci0Jc3RydWN0
IGZpeGVkX2ZpbGVfcmVmX25vZGUgKnJlZl9ub2RlOwotCXN0cnVjdCBmaXhlZF9maWxlX2Rh
dGEgKmRhdGE7Ci0Jc3RydWN0IGlvX3JpbmdfY3R4ICpjdHg7Ci0JYm9vbCBmaXJzdF9hZGQg
PSBmYWxzZTsKLQlpbnQgZGVsYXkgPSBIWjsKLQotCXJlZl9ub2RlID0gY29udGFpbmVyX29m
KHJlZiwgc3RydWN0IGZpeGVkX2ZpbGVfcmVmX25vZGUsIHJlZnMpOwotCWRhdGEgPSByZWZf
bm9kZS0+ZmlsZV9kYXRhOwotCWN0eCA9IGRhdGEtPmN0eDsKLQotCXNwaW5fbG9ja19iaCgm
ZGF0YS0+bG9jayk7Ci0JcmVmX25vZGUtPmRvbmUgPSB0cnVlOwotCi0Jd2hpbGUgKCFsaXN0
X2VtcHR5KCZkYXRhLT5yZWZfbGlzdCkpIHsKLQkJcmVmX25vZGUgPSBsaXN0X2ZpcnN0X2Vu
dHJ5KCZkYXRhLT5yZWZfbGlzdCwKLQkJCQkJc3RydWN0IGZpeGVkX2ZpbGVfcmVmX25vZGUs
IG5vZGUpOwotCQkvKiByZWN5Y2xlIHJlZiBub2RlcyBpbiBvcmRlciAqLwotCQlpZiAoIXJl
Zl9ub2RlLT5kb25lKQotCQkJYnJlYWs7Ci0JCWxpc3RfZGVsKCZyZWZfbm9kZS0+bm9kZSk7
Ci0JCWZpcnN0X2FkZCB8PSBsbGlzdF9hZGQoJnJlZl9ub2RlLT5sbGlzdCwgJmN0eC0+Zmls
ZV9wdXRfbGxpc3QpOwotCX0KLQlzcGluX3VubG9ja19iaCgmZGF0YS0+bG9jayk7Ci0KLQlp
ZiAocGVyY3B1X3JlZl9pc19keWluZygmZGF0YS0+cmVmcykpCi0JCWRlbGF5ID0gMDsKLQot
CWlmICghZGVsYXkpCi0JCW1vZF9kZWxheWVkX3dvcmsoc3lzdGVtX3dxLCAmY3R4LT5maWxl
X3B1dF93b3JrLCAwKTsKLQllbHNlIGlmIChmaXJzdF9hZGQpCi0JCXF1ZXVlX2RlbGF5ZWRf
d29yayhzeXN0ZW1fd3EsICZjdHgtPmZpbGVfcHV0X3dvcmssIGRlbGF5KTsKLX0KLQotc3Rh
dGljIHN0cnVjdCBmaXhlZF9maWxlX3JlZl9ub2RlICphbGxvY19maXhlZF9maWxlX3JlZl9u
b2RlKAotCQkJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCi17Ci0Jc3RydWN0IGZpeGVkX2Zp
bGVfcmVmX25vZGUgKnJlZl9ub2RlOwotCi0JcmVmX25vZGUgPSBremFsbG9jKHNpemVvZigq
cmVmX25vZGUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIXJlZl9ub2RlKQotCQlyZXR1cm4gTlVM
TDsKLQotCWlmIChwZXJjcHVfcmVmX2luaXQoJnJlZl9ub2RlLT5yZWZzLCBpb19maWxlX2Rh
dGFfcmVmX3plcm8sCi0JCQkgICAgMCwgR0ZQX0tFUk5FTCkpIHsKLQkJa2ZyZWUocmVmX25v
ZGUpOwotCQlyZXR1cm4gTlVMTDsKLQl9Ci0JSU5JVF9MSVNUX0hFQUQoJnJlZl9ub2RlLT5u
b2RlKTsKLQlJTklUX0xJU1RfSEVBRCgmcmVmX25vZGUtPmZpbGVfbGlzdCk7Ci0JcmVmX25v
ZGUtPmZpbGVfZGF0YSA9IGN0eC0+ZmlsZV9kYXRhOwotCXJlZl9ub2RlLT5kb25lID0gZmFs
c2U7Ci0JcmV0dXJuIHJlZl9ub2RlOwotfQotCi1zdGF0aWMgdm9pZCBkZXN0cm95X2ZpeGVk
X2ZpbGVfcmVmX25vZGUoc3RydWN0IGZpeGVkX2ZpbGVfcmVmX25vZGUgKnJlZl9ub2RlKQot
ewotCXBlcmNwdV9yZWZfZXhpdCgmcmVmX25vZGUtPnJlZnMpOwotCWtmcmVlKHJlZl9ub2Rl
KTsKLX0KLQogc3RhdGljIGludCBpb19zcWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCi0JCQkJIHVuc2lnbmVkIG5yX2FyZ3Mp
CisJCQkJIHVuc2lnbmVkIG5yX2FyZ3MsIHU2NCBfX3VzZXIgKnRhZ3MpCiB7CiAJX19zMzIg
X191c2VyICpmZHMgPSAoX19zMzIgX191c2VyICopIGFyZzsKLQl1bnNpZ25lZCBucl90YWJs
ZXMsIGk7CiAJc3RydWN0IGZpbGUgKmZpbGU7Ci0JaW50IGZkLCByZXQgPSAtRU5PTUVNOwot
CXN0cnVjdCBmaXhlZF9maWxlX3JlZl9ub2RlICpyZWZfbm9kZTsKLQlzdHJ1Y3QgZml4ZWRf
ZmlsZV9kYXRhICpmaWxlX2RhdGE7CisJaW50IGZkLCByZXQ7CisJdW5zaWduZWQgaTsKIAog
CWlmIChjdHgtPmZpbGVfZGF0YSkKIAkJcmV0dXJuIC1FQlVTWTsKQEAgLTc2MjcsNDQgKzgx
NTEsMzQgQEAgc3RhdGljIGludCBpb19zcWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCiAJCXJldHVybiAtRU1GSUxFOwogCWlm
IChucl9hcmdzID4gcmxpbWl0KFJMSU1JVF9OT0ZJTEUpKQogCQlyZXR1cm4gLUVNRklMRTsK
KwlyZXQgPSBpb19yc3JjX25vZGVfc3dpdGNoX3N0YXJ0KGN0eCk7CisJaWYgKHJldCkKKwkJ
cmV0dXJuIHJldDsKKwlyZXQgPSBpb19yc3JjX2RhdGFfYWxsb2MoY3R4LCBpb19yc3JjX2Zp
bGVfcHV0LCB0YWdzLCBucl9hcmdzLAorCQkJCSAmY3R4LT5maWxlX2RhdGEpOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CiAKLQlmaWxlX2RhdGEgPSBremFsbG9jKHNpemVvZigqY3R4
LT5maWxlX2RhdGEpLCBHRlBfS0VSTkVMX0FDQ09VTlQpOwotCWlmICghZmlsZV9kYXRhKQot
CQlyZXR1cm4gLUVOT01FTTsKLQlmaWxlX2RhdGEtPmN0eCA9IGN0eDsKLQlpbml0X2NvbXBs
ZXRpb24oJmZpbGVfZGF0YS0+ZG9uZSk7Ci0JSU5JVF9MSVNUX0hFQUQoJmZpbGVfZGF0YS0+
cmVmX2xpc3QpOwotCXNwaW5fbG9ja19pbml0KCZmaWxlX2RhdGEtPmxvY2spOwotCi0JbnJf
dGFibGVzID0gRElWX1JPVU5EX1VQKG5yX2FyZ3MsIElPUklOR19NQVhfRklMRVNfVEFCTEUp
OwotCWZpbGVfZGF0YS0+dGFibGUgPSBrY2FsbG9jKG5yX3RhYmxlcywgc2l6ZW9mKCpmaWxl
X2RhdGEtPnRhYmxlKSwKLQkJCQkgICBHRlBfS0VSTkVMX0FDQ09VTlQpOwotCWlmICghZmls
ZV9kYXRhLT50YWJsZSkKLQkJZ290byBvdXRfZnJlZTsKLQotCWlmIChwZXJjcHVfcmVmX2lu
aXQoJmZpbGVfZGF0YS0+cmVmcywgaW9fZmlsZV9yZWZfa2lsbCwKLQkJCQlQRVJDUFVfUkVG
X0FMTE9XX1JFSU5JVCwgR0ZQX0tFUk5FTCkpCisJcmV0ID0gLUVOT01FTTsKKwlpZiAoIWlv
X2FsbG9jX2ZpbGVfdGFibGVzKCZjdHgtPmZpbGVfdGFibGUsIG5yX2FyZ3MpKQogCQlnb3Rv
IG91dF9mcmVlOwogCi0JaWYgKGlvX3NxZV9hbGxvY19maWxlX3RhYmxlcyhmaWxlX2RhdGEs
IG5yX3RhYmxlcywgbnJfYXJncykpCi0JCWdvdG8gb3V0X3JlZjsKLQljdHgtPmZpbGVfZGF0
YSA9IGZpbGVfZGF0YTsKLQogCWZvciAoaSA9IDA7IGkgPCBucl9hcmdzOyBpKyssIGN0eC0+
bnJfdXNlcl9maWxlcysrKSB7Ci0JCXN0cnVjdCBmaXhlZF9maWxlX3RhYmxlICp0YWJsZTsK
LQkJdW5zaWduZWQgaW5kZXg7Ci0KIAkJaWYgKGNvcHlfZnJvbV91c2VyKCZmZCwgJmZkc1tp
XSwgc2l6ZW9mKGZkKSkpIHsKIAkJCXJldCA9IC1FRkFVTFQ7CiAJCQlnb3RvIG91dF9mcHV0
OwogCQl9CiAJCS8qIGFsbG93IHNwYXJzZSBzZXRzICovCi0JCWlmIChmZCA9PSAtMSkKKwkJ
aWYgKGZkID09IC0xKSB7CisJCQlyZXQgPSAtRUlOVkFMOworCQkJaWYgKHVubGlrZWx5KCpp
b19nZXRfdGFnX3Nsb3QoY3R4LT5maWxlX2RhdGEsIGkpKSkKKwkJCQlnb3RvIG91dF9mcHV0
OwogCQkJY29udGludWU7CisJCX0KIAogCQlmaWxlID0gZmdldChmZCk7CiAJCXJldCA9IC1F
QkFERjsKLQkJaWYgKCFmaWxlKQorCQlpZiAodW5saWtlbHkoIWZpbGUpKQogCQkJZ290byBv
dXRfZnB1dDsKIAogCQkvKgpAQCAtNzY3OCwyNCArODE5MiwxNiBAQCBzdGF0aWMgaW50IGlv
X3NxZV9maWxlc19yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3Vz
ZXIgKmFyZywKIAkJCWZwdXQoZmlsZSk7CiAJCQlnb3RvIG91dF9mcHV0OwogCQl9Ci0JCXRh
YmxlID0gJmZpbGVfZGF0YS0+dGFibGVbaSA+PiBJT1JJTkdfRklMRV9UQUJMRV9TSElGVF07
Ci0JCWluZGV4ID0gaSAmIElPUklOR19GSUxFX1RBQkxFX01BU0s7Ci0JCXRhYmxlLT5maWxl
c1tpbmRleF0gPSBmaWxlOworCQlpb19maXhlZF9maWxlX3NldChpb19maXhlZF9maWxlX3Ns
b3QoJmN0eC0+ZmlsZV90YWJsZSwgaSksIGZpbGUpOwogCX0KIAogCXJldCA9IGlvX3NxZV9m
aWxlc19zY20oY3R4KTsKIAlpZiAocmV0KSB7Ci0JCWlvX3NxZV9maWxlc191bnJlZ2lzdGVy
KGN0eCk7CisJCV9faW9fc3FlX2ZpbGVzX3VucmVnaXN0ZXIoY3R4KTsKIAkJcmV0dXJuIHJl
dDsKIAl9CiAKLQlyZWZfbm9kZSA9IGFsbG9jX2ZpeGVkX2ZpbGVfcmVmX25vZGUoY3R4KTsK
LQlpZiAoIXJlZl9ub2RlKSB7Ci0JCWlvX3NxZV9maWxlc191bnJlZ2lzdGVyKGN0eCk7Ci0J
CXJldHVybiAtRU5PTUVNOwotCX0KLQotCWlvX3NxZV9maWxlc19zZXRfbm9kZShmaWxlX2Rh
dGEsIHJlZl9ub2RlKTsKKwlpb19yc3JjX25vZGVfc3dpdGNoKGN0eCwgTlVMTCk7CiAJcmV0
dXJuIHJldDsKIG91dF9mcHV0OgogCWZvciAoaSA9IDA7IGkgPCBjdHgtPm5yX3VzZXJfZmls
ZXM7IGkrKykgewpAQCAtNzcwMywxNCArODIwOSwxMCBAQCBzdGF0aWMgaW50IGlvX3NxZV9m
aWxlc19yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFy
ZywKIAkJaWYgKGZpbGUpCiAJCQlmcHV0KGZpbGUpOwogCX0KLQlmb3IgKGkgPSAwOyBpIDwg
bnJfdGFibGVzOyBpKyspCi0JCWtmcmVlKGZpbGVfZGF0YS0+dGFibGVbaV0uZmlsZXMpOwor
CWlvX2ZyZWVfZmlsZV90YWJsZXMoJmN0eC0+ZmlsZV90YWJsZSk7CiAJY3R4LT5ucl91c2Vy
X2ZpbGVzID0gMDsKLW91dF9yZWY6Ci0JcGVyY3B1X3JlZl9leGl0KCZmaWxlX2RhdGEtPnJl
ZnMpOwogb3V0X2ZyZWU6Ci0Ja2ZyZWUoZmlsZV9kYXRhLT50YWJsZSk7Ci0Ja2ZyZWUoZmls
ZV9kYXRhKTsKKwlpb19yc3JjX2RhdGFfZnJlZShjdHgtPmZpbGVfZGF0YSk7CiAJY3R4LT5m
aWxlX2RhdGEgPSBOVUxMOwogCXJldHVybiByZXQ7CiB9CkBAIC03NzQ1LDc2ICs4MjQ3LDE3
MiBAQCBzdGF0aWMgaW50IGlvX3NxZV9maWxlX3JlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LCBzdHJ1Y3QgZmlsZSAqZmlsZSwKIAkJCXNrYiA9IE5VTEw7CiAJCX0KIAl9Ci0J
c3Bpbl91bmxvY2tfaXJxKCZoZWFkLT5sb2NrKTsKKwlzcGluX3VubG9ja19pcnEoJmhlYWQt
PmxvY2spOworCisJaWYgKHNrYikgeworCQlmcHV0KGZpbGUpOworCQlyZXR1cm4gMDsKKwl9
CisKKwlyZXR1cm4gX19pb19zcWVfZmlsZXNfc2NtKGN0eCwgMSwgaW5kZXgpOworI2Vsc2UK
KwlyZXR1cm4gMDsKKyNlbmRpZgorfQorCitzdGF0aWMgaW50IGlvX3F1ZXVlX3JzcmNfcmVt
b3ZhbChzdHJ1Y3QgaW9fcnNyY19kYXRhICpkYXRhLCB1bnNpZ25lZCBpZHgsCisJCQkJIHN0
cnVjdCBpb19yc3JjX25vZGUgKm5vZGUsIHZvaWQgKnJzcmMpCit7CisJdTY0ICp0YWdfc2xv
dCA9IGlvX2dldF90YWdfc2xvdChkYXRhLCBpZHgpOworCXN0cnVjdCBpb19yc3JjX3B1dCAq
cHJzcmM7CisKKwlwcnNyYyA9IGt6YWxsb2Moc2l6ZW9mKCpwcnNyYyksIEdGUF9LRVJORUwp
OworCWlmICghcHJzcmMpCisJCXJldHVybiAtRU5PTUVNOworCisJcHJzcmMtPnRhZyA9ICp0
YWdfc2xvdDsKKwkqdGFnX3Nsb3QgPSAwOworCXByc3JjLT5yc3JjID0gcnNyYzsKKwlsaXN0
X2FkZCgmcHJzcmMtPmxpc3QsICZub2RlLT5yc3JjX2xpc3QpOworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW50IGlvX2luc3RhbGxfZml4ZWRfZmlsZShzdHJ1Y3QgaW9fa2lvY2IgKnJl
cSwgc3RydWN0IGZpbGUgKmZpbGUsCisJCQkJIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncywg
dTMyIHNsb3RfaW5kZXgpCit7CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSByZXEtPmN0
eDsKKwlib29sIGZvcmNlX25vbmJsb2NrID0gaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05P
TkJMT0NLOworCWJvb2wgbmVlZHNfc3dpdGNoID0gZmFsc2U7CisJc3RydWN0IGlvX2ZpeGVk
X2ZpbGUgKmZpbGVfc2xvdDsKKwlpbnQgcmV0ID0gLUVCQURGOworCisJaW9fcmluZ19zdWJt
aXRfbG9jayhjdHgsICFmb3JjZV9ub25ibG9jayk7CisJaWYgKGZpbGUtPmZfb3AgPT0gJmlv
X3VyaW5nX2ZvcHMpCisJCWdvdG8gZXJyOworCXJldCA9IC1FTlhJTzsKKwlpZiAoIWN0eC0+
ZmlsZV9kYXRhKQorCQlnb3RvIGVycjsKKwlyZXQgPSAtRUlOVkFMOworCWlmIChzbG90X2lu
ZGV4ID49IGN0eC0+bnJfdXNlcl9maWxlcykKKwkJZ290byBlcnI7CisKKwlzbG90X2luZGV4
ID0gYXJyYXlfaW5kZXhfbm9zcGVjKHNsb3RfaW5kZXgsIGN0eC0+bnJfdXNlcl9maWxlcyk7
CisJZmlsZV9zbG90ID0gaW9fZml4ZWRfZmlsZV9zbG90KCZjdHgtPmZpbGVfdGFibGUsIHNs
b3RfaW5kZXgpOworCisJaWYgKGZpbGVfc2xvdC0+ZmlsZV9wdHIpIHsKKwkJc3RydWN0IGZp
bGUgKm9sZF9maWxlOworCisJCXJldCA9IGlvX3JzcmNfbm9kZV9zd2l0Y2hfc3RhcnQoY3R4
KTsKKwkJaWYgKHJldCkKKwkJCWdvdG8gZXJyOworCisJCW9sZF9maWxlID0gKHN0cnVjdCBm
aWxlICopKGZpbGVfc2xvdC0+ZmlsZV9wdHIgJiBGRlNfTUFTSyk7CisJCXJldCA9IGlvX3F1
ZXVlX3JzcmNfcmVtb3ZhbChjdHgtPmZpbGVfZGF0YSwgc2xvdF9pbmRleCwKKwkJCQkJICAg
IGN0eC0+cnNyY19ub2RlLCBvbGRfZmlsZSk7CisJCWlmIChyZXQpCisJCQlnb3RvIGVycjsK
KwkJZmlsZV9zbG90LT5maWxlX3B0ciA9IDA7CisJCW5lZWRzX3N3aXRjaCA9IHRydWU7CisJ
fQorCisJKmlvX2dldF90YWdfc2xvdChjdHgtPmZpbGVfZGF0YSwgc2xvdF9pbmRleCkgPSAw
OworCWlvX2ZpeGVkX2ZpbGVfc2V0KGZpbGVfc2xvdCwgZmlsZSk7CisJcmV0ID0gaW9fc3Fl
X2ZpbGVfcmVnaXN0ZXIoY3R4LCBmaWxlLCBzbG90X2luZGV4KTsKKwlpZiAocmV0KSB7CisJ
CWZpbGVfc2xvdC0+ZmlsZV9wdHIgPSAwOworCQlnb3RvIGVycjsKKwl9CiAKLQlpZiAoc2ti
KSB7CisJcmV0ID0gMDsKK2VycjoKKwlpZiAobmVlZHNfc3dpdGNoKQorCQlpb19yc3JjX25v
ZGVfc3dpdGNoKGN0eCwgY3R4LT5maWxlX2RhdGEpOworCWlvX3Jpbmdfc3VibWl0X3VubG9j
ayhjdHgsICFmb3JjZV9ub25ibG9jayk7CisJaWYgKHJldCkKIAkJZnB1dChmaWxlKTsKLQkJ
cmV0dXJuIDA7Ci0JfQotCi0JcmV0dXJuIF9faW9fc3FlX2ZpbGVzX3NjbShjdHgsIDEsIGlu
ZGV4KTsKLSNlbHNlCi0JcmV0dXJuIDA7Ci0jZW5kaWYKKwlyZXR1cm4gcmV0OwogfQogCi1z
dGF0aWMgaW50IGlvX3F1ZXVlX2ZpbGVfcmVtb3ZhbChzdHJ1Y3QgZml4ZWRfZmlsZV9kYXRh
ICpkYXRhLAotCQkJCSBzdHJ1Y3QgZmlsZSAqZmlsZSkKK3N0YXRpYyBpbnQgaW9fY2xvc2Vf
Zml4ZWQoc3RydWN0IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGludCBpc3N1ZV9mbGFncykK
IHsKLQlzdHJ1Y3QgaW9fZmlsZV9wdXQgKnBmaWxlOwotCXN0cnVjdCBmaXhlZF9maWxlX3Jl
Zl9ub2RlICpyZWZfbm9kZSA9IGRhdGEtPm5vZGU7CisJdW5zaWduZWQgaW50IG9mZnNldCA9
IHJlcS0+Y2xvc2UuZmlsZV9zbG90IC0gMTsKKwlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9
IHJlcS0+Y3R4OworCXN0cnVjdCBpb19maXhlZF9maWxlICpmaWxlX3Nsb3Q7CisJc3RydWN0
IGZpbGUgKmZpbGU7CisJaW50IHJldDsKIAotCXBmaWxlID0ga3phbGxvYyhzaXplb2YoKnBm
aWxlKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFwZmlsZSkKLQkJcmV0dXJuIC1FTk9NRU07CisJ
aW9fcmluZ19zdWJtaXRfbG9jayhjdHgsICEoaXNzdWVfZmxhZ3MgJiBJT19VUklOR19GX05P
TkJMT0NLKSk7CisJcmV0ID0gLUVOWElPOworCWlmICh1bmxpa2VseSghY3R4LT5maWxlX2Rh
dGEpKQorCQlnb3RvIG91dDsKKwlyZXQgPSAtRUlOVkFMOworCWlmIChvZmZzZXQgPj0gY3R4
LT5ucl91c2VyX2ZpbGVzKQorCQlnb3RvIG91dDsKKwlyZXQgPSBpb19yc3JjX25vZGVfc3dp
dGNoX3N0YXJ0KGN0eCk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlvZmZzZXQgPSBh
cnJheV9pbmRleF9ub3NwZWMob2Zmc2V0LCBjdHgtPm5yX3VzZXJfZmlsZXMpOworCWZpbGVf
c2xvdCA9IGlvX2ZpeGVkX2ZpbGVfc2xvdCgmY3R4LT5maWxlX3RhYmxlLCBvZmZzZXQpOwor
CXJldCA9IC1FQkFERjsKKwlpZiAoIWZpbGVfc2xvdC0+ZmlsZV9wdHIpCisJCWdvdG8gb3V0
OwogCi0JcGZpbGUtPmZpbGUgPSBmaWxlOwotCWxpc3RfYWRkKCZwZmlsZS0+bGlzdCwgJnJl
Zl9ub2RlLT5maWxlX2xpc3QpOworCWZpbGUgPSAoc3RydWN0IGZpbGUgKikoZmlsZV9zbG90
LT5maWxlX3B0ciAmIEZGU19NQVNLKTsKKwlyZXQgPSBpb19xdWV1ZV9yc3JjX3JlbW92YWwo
Y3R4LT5maWxlX2RhdGEsIG9mZnNldCwgY3R4LT5yc3JjX25vZGUsIGZpbGUpOworCWlmIChy
ZXQpCisJCWdvdG8gb3V0OwogCi0JcmV0dXJuIDA7CisJZmlsZV9zbG90LT5maWxlX3B0ciA9
IDA7CisJaW9fcnNyY19ub2RlX3N3aXRjaChjdHgsIGN0eC0+ZmlsZV9kYXRhKTsKKwlyZXQg
PSAwOworb3V0OgorCWlvX3Jpbmdfc3VibWl0X3VubG9jayhjdHgsICEoaXNzdWVfZmxhZ3Mg
JiBJT19VUklOR19GX05PTkJMT0NLKSk7CisJcmV0dXJuIHJldDsKIH0KIAogc3RhdGljIGlu
dCBfX2lvX3NxZV9maWxlc191cGRhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCi0JCQkJ
IHN0cnVjdCBpb191cmluZ19maWxlc191cGRhdGUgKnVwLAorCQkJCSBzdHJ1Y3QgaW9fdXJp
bmdfcnNyY191cGRhdGUyICp1cCwKIAkJCQkgdW5zaWduZWQgbnJfYXJncykKIHsKLQlzdHJ1
Y3QgZml4ZWRfZmlsZV9kYXRhICpkYXRhID0gY3R4LT5maWxlX2RhdGE7Ci0Jc3RydWN0IGZp
eGVkX2ZpbGVfcmVmX25vZGUgKnJlZl9ub2RlOworCXU2NCBfX3VzZXIgKnRhZ3MgPSB1NjRf
dG9fdXNlcl9wdHIodXAtPnRhZ3MpOworCV9fczMyIF9fdXNlciAqZmRzID0gdTY0X3RvX3Vz
ZXJfcHRyKHVwLT5kYXRhKTsKKwlzdHJ1Y3QgaW9fcnNyY19kYXRhICpkYXRhID0gY3R4LT5m
aWxlX2RhdGE7CisJc3RydWN0IGlvX2ZpeGVkX2ZpbGUgKmZpbGVfc2xvdDsKIAlzdHJ1Y3Qg
ZmlsZSAqZmlsZTsKLQlfX3MzMiBfX3VzZXIgKmZkczsKLQlpbnQgZmQsIGksIGVycjsKLQlf
X3UzMiBkb25lOworCWludCBmZCwgaSwgZXJyID0gMDsKKwl1bnNpZ25lZCBpbnQgZG9uZTsK
IAlib29sIG5lZWRzX3N3aXRjaCA9IGZhbHNlOwogCi0JaWYgKGNoZWNrX2FkZF9vdmVyZmxv
dyh1cC0+b2Zmc2V0LCBucl9hcmdzLCAmZG9uZSkpCi0JCXJldHVybiAtRU9WRVJGTE9XOwot
CWlmIChkb25lID4gY3R4LT5ucl91c2VyX2ZpbGVzKQorCWlmICghY3R4LT5maWxlX2RhdGEp
CisJCXJldHVybiAtRU5YSU87CisJaWYgKHVwLT5vZmZzZXQgKyBucl9hcmdzID4gY3R4LT5u
cl91c2VyX2ZpbGVzKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCXJlZl9ub2RlID0gYWxsb2Nf
Zml4ZWRfZmlsZV9yZWZfbm9kZShjdHgpOwotCWlmICghcmVmX25vZGUpCi0JCXJldHVybiAt
RU5PTUVNOwotCi0JZG9uZSA9IDA7Ci0JZmRzID0gdTY0X3RvX3VzZXJfcHRyKHVwLT5mZHMp
OwotCXdoaWxlIChucl9hcmdzKSB7Ci0JCXN0cnVjdCBmaXhlZF9maWxlX3RhYmxlICp0YWJs
ZTsKLQkJdW5zaWduZWQgaW5kZXg7CisJZm9yIChkb25lID0gMDsgZG9uZSA8IG5yX2FyZ3M7
IGRvbmUrKykgeworCQl1NjQgdGFnID0gMDsKIAotCQllcnIgPSAwOwotCQlpZiAoY29weV9m
cm9tX3VzZXIoJmZkLCAmZmRzW2RvbmVdLCBzaXplb2YoZmQpKSkgeworCQlpZiAoKHRhZ3Mg
JiYgY29weV9mcm9tX3VzZXIoJnRhZywgJnRhZ3NbZG9uZV0sIHNpemVvZih0YWcpKSkgfHwK
KwkJICAgIGNvcHlfZnJvbV91c2VyKCZmZCwgJmZkc1tkb25lXSwgc2l6ZW9mKGZkKSkpIHsK
IAkJCWVyciA9IC1FRkFVTFQ7CiAJCQlicmVhazsKIAkJfQotCQlpID0gYXJyYXlfaW5kZXhf
bm9zcGVjKHVwLT5vZmZzZXQsIGN0eC0+bnJfdXNlcl9maWxlcyk7Ci0JCXRhYmxlID0gJmN0
eC0+ZmlsZV9kYXRhLT50YWJsZVtpID4+IElPUklOR19GSUxFX1RBQkxFX1NISUZUXTsKLQkJ
aW5kZXggPSBpICYgSU9SSU5HX0ZJTEVfVEFCTEVfTUFTSzsKLQkJaWYgKHRhYmxlLT5maWxl
c1tpbmRleF0pIHsKLQkJCWZpbGUgPSB0YWJsZS0+ZmlsZXNbaW5kZXhdOwotCQkJZXJyID0g
aW9fcXVldWVfZmlsZV9yZW1vdmFsKGRhdGEsIGZpbGUpOworCQlpZiAoKGZkID09IElPUklO
R19SRUdJU1RFUl9GSUxFU19TS0lQIHx8IGZkID09IC0xKSAmJiB0YWcpIHsKKwkJCWVyciA9
IC1FSU5WQUw7CisJCQlicmVhazsKKwkJfQorCQlpZiAoZmQgPT0gSU9SSU5HX1JFR0lTVEVS
X0ZJTEVTX1NLSVApCisJCQljb250aW51ZTsKKworCQlpID0gYXJyYXlfaW5kZXhfbm9zcGVj
KHVwLT5vZmZzZXQgKyBkb25lLCBjdHgtPm5yX3VzZXJfZmlsZXMpOworCQlmaWxlX3Nsb3Qg
PSBpb19maXhlZF9maWxlX3Nsb3QoJmN0eC0+ZmlsZV90YWJsZSwgaSk7CisKKwkJaWYgKGZp
bGVfc2xvdC0+ZmlsZV9wdHIpIHsKKwkJCWZpbGUgPSAoc3RydWN0IGZpbGUgKikoZmlsZV9z
bG90LT5maWxlX3B0ciAmIEZGU19NQVNLKTsKKwkJCWVyciA9IGlvX3F1ZXVlX3JzcmNfcmVt
b3ZhbChkYXRhLCBpLCBjdHgtPnJzcmNfbm9kZSwgZmlsZSk7CiAJCQlpZiAoZXJyKQogCQkJ
CWJyZWFrOwotCQkJdGFibGUtPmZpbGVzW2luZGV4XSA9IE5VTEw7CisJCQlmaWxlX3Nsb3Qt
PmZpbGVfcHRyID0gMDsKIAkJCW5lZWRzX3N3aXRjaCA9IHRydWU7CiAJCX0KIAkJaWYgKGZk
ICE9IC0xKSB7CkBAIC03ODM2LDEwNiArODQzNCw2MSBAQCBzdGF0aWMgaW50IF9faW9fc3Fl
X2ZpbGVzX3VwZGF0ZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKIAkJCQllcnIgPSAtRUJB
REY7CiAJCQkJYnJlYWs7CiAJCQl9Ci0JCQl0YWJsZS0+ZmlsZXNbaW5kZXhdID0gZmlsZTsK
KwkJCSppb19nZXRfdGFnX3Nsb3QoZGF0YSwgaSkgPSB0YWc7CisJCQlpb19maXhlZF9maWxl
X3NldChmaWxlX3Nsb3QsIGZpbGUpOwogCQkJZXJyID0gaW9fc3FlX2ZpbGVfcmVnaXN0ZXIo
Y3R4LCBmaWxlLCBpKTsKIAkJCWlmIChlcnIpIHsKLQkJCQl0YWJsZS0+ZmlsZXNbaW5kZXhd
ID0gTlVMTDsKKwkJCQlmaWxlX3Nsb3QtPmZpbGVfcHRyID0gMDsKIAkJCQlmcHV0KGZpbGUp
OwogCQkJCWJyZWFrOwogCQkJfQogCQl9Ci0JCW5yX2FyZ3MtLTsKLQkJZG9uZSsrOwotCQl1
cC0+b2Zmc2V0Kys7CiAJfQogCi0JaWYgKG5lZWRzX3N3aXRjaCkgewotCQlwZXJjcHVfcmVm
X2tpbGwoJmRhdGEtPm5vZGUtPnJlZnMpOwotCQlpb19zcWVfZmlsZXNfc2V0X25vZGUoZGF0
YSwgcmVmX25vZGUpOwotCX0gZWxzZQotCQlkZXN0cm95X2ZpeGVkX2ZpbGVfcmVmX25vZGUo
cmVmX25vZGUpOwotCisJaWYgKG5lZWRzX3N3aXRjaCkKKwkJaW9fcnNyY19ub2RlX3N3aXRj
aChjdHgsIGRhdGEpOwogCXJldHVybiBkb25lID8gZG9uZSA6IGVycjsKIH0KIAotc3RhdGlj
IGludCBpb19zcWVfZmlsZXNfdXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB2b2lk
IF9fdXNlciAqYXJnLAotCQkJICAgICAgIHVuc2lnbmVkIG5yX2FyZ3MpCi17Ci0Jc3RydWN0
IGlvX3VyaW5nX2ZpbGVzX3VwZGF0ZSB1cDsKLQotCWlmICghY3R4LT5maWxlX2RhdGEpCi0J
CXJldHVybiAtRU5YSU87Ci0JaWYgKCFucl9hcmdzKQotCQlyZXR1cm4gLUVJTlZBTDsKLQlp
ZiAoY29weV9mcm9tX3VzZXIoJnVwLCBhcmcsIHNpemVvZih1cCkpKQotCQlyZXR1cm4gLUVG
QVVMVDsKLQlpZiAodXAucmVzdikKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlyZXR1cm4gX19p
b19zcWVfZmlsZXNfdXBkYXRlKGN0eCwgJnVwLCBucl9hcmdzKTsKLX0KLQotc3RhdGljIHZv
aWQgaW9fZnJlZV93b3JrKHN0cnVjdCBpb193cV93b3JrICp3b3JrKQotewotCXN0cnVjdCBp
b19raW9jYiAqcmVxID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29y
ayk7Ci0KLQkvKiBDb25zaWRlciB0aGF0IGlvX3N0ZWFsX3dvcmsoKSByZWxpZXMgb24gdGhp
cyByZWYgKi8KLQlpb19wdXRfcmVxKHJlcSk7Ci19Ci0KLXN0YXRpYyBpbnQgaW9faW5pdF93
cV9vZmZsb2FkKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAotCQkJICAgICAgc3RydWN0IGlv
X3VyaW5nX3BhcmFtcyAqcCkKK3N0YXRpYyBzdHJ1Y3QgaW9fd3EgKmlvX2luaXRfd3Ffb2Zm
bG9hZChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKKwkJCQkJc3RydWN0IHRhc2tfc3RydWN0
ICp0YXNrKQogeworCXN0cnVjdCBpb193cV9oYXNoICpoYXNoOwogCXN0cnVjdCBpb193cV9k
YXRhIGRhdGE7Ci0Jc3RydWN0IGZkIGY7Ci0Jc3RydWN0IGlvX3JpbmdfY3R4ICpjdHhfYXR0
YWNoOwogCXVuc2lnbmVkIGludCBjb25jdXJyZW5jeTsKLQlpbnQgcmV0ID0gMDsKLQotCWRh
dGEudXNlciA9IGN0eC0+dXNlcjsKLQlkYXRhLmZyZWVfd29yayA9IGlvX2ZyZWVfd29yazsK
LQlkYXRhLmRvX3dvcmsgPSBpb193cV9zdWJtaXRfd29yazsKIAotCWlmICghKHAtPmZsYWdz
ICYgSU9SSU5HX1NFVFVQX0FUVEFDSF9XUSkpIHsKLQkJLyogRG8gUUQsIG9yIDQgKiBDUFVT
LCB3aGF0ZXZlciBpcyBzbWFsbGVzdCAqLwotCQljb25jdXJyZW5jeSA9IG1pbihjdHgtPnNx
X2VudHJpZXMsIDQgKiBudW1fb25saW5lX2NwdXMoKSk7Ci0KLQkJY3R4LT5pb193cSA9IGlv
X3dxX2NyZWF0ZShjb25jdXJyZW5jeSwgJmRhdGEpOwotCQlpZiAoSVNfRVJSKGN0eC0+aW9f
d3EpKSB7Ci0JCQlyZXQgPSBQVFJfRVJSKGN0eC0+aW9fd3EpOwotCQkJY3R4LT5pb193cSA9
IE5VTEw7CisJbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsKKwloYXNoID0gY3R4LT5o
YXNoX21hcDsKKwlpZiAoIWhhc2gpIHsKKwkJaGFzaCA9IGt6YWxsb2Moc2l6ZW9mKCpoYXNo
KSwgR0ZQX0tFUk5FTCk7CisJCWlmICghaGFzaCkgeworCQkJbXV0ZXhfdW5sb2NrKCZjdHgt
PnVyaW5nX2xvY2spOworCQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAJCX0KLQkJcmV0
dXJuIHJldDsKKwkJcmVmY291bnRfc2V0KCZoYXNoLT5yZWZzLCAxKTsKKwkJaW5pdF93YWl0
cXVldWVfaGVhZCgmaGFzaC0+d2FpdCk7CisJCWN0eC0+aGFzaF9tYXAgPSBoYXNoOwogCX0K
KwltdXRleF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAKLQlmID0gZmRnZXQocC0+d3Ff
ZmQpOwotCWlmICghZi5maWxlKQotCQlyZXR1cm4gLUVCQURGOwotCi0JaWYgKGYuZmlsZS0+
Zl9vcCAhPSAmaW9fdXJpbmdfZm9wcykgewotCQlyZXQgPSAtRUlOVkFMOwotCQlnb3RvIG91
dF9mcHV0OwotCX0KKwlkYXRhLmhhc2ggPSBoYXNoOworCWRhdGEudGFzayA9IHRhc2s7CisJ
ZGF0YS5mcmVlX3dvcmsgPSBpb193cV9mcmVlX3dvcms7CisJZGF0YS5kb193b3JrID0gaW9f
d3Ffc3VibWl0X3dvcms7CiAKLQljdHhfYXR0YWNoID0gZi5maWxlLT5wcml2YXRlX2RhdGE7
Ci0JLyogQGlvX3dxIGlzIHByb3RlY3RlZCBieSBob2xkaW5nIHRoZSBmZCAqLwotCWlmICgh
aW9fd3FfZ2V0KGN0eF9hdHRhY2gtPmlvX3dxLCAmZGF0YSkpIHsKLQkJcmV0ID0gLUVJTlZB
TDsKLQkJZ290byBvdXRfZnB1dDsKLQl9CisJLyogRG8gUUQsIG9yIDQgKiBDUFVTLCB3aGF0
ZXZlciBpcyBzbWFsbGVzdCAqLworCWNvbmN1cnJlbmN5ID0gbWluKGN0eC0+c3FfZW50cmll
cywgNCAqIG51bV9vbmxpbmVfY3B1cygpKTsKIAotCWN0eC0+aW9fd3EgPSBjdHhfYXR0YWNo
LT5pb193cTsKLW91dF9mcHV0OgotCWZkcHV0KGYpOwotCXJldHVybiByZXQ7CisJcmV0dXJu
IGlvX3dxX2NyZWF0ZShjb25jdXJyZW5jeSwgJmRhdGEpOwogfQogCi1zdGF0aWMgaW50IGlv
X3VyaW5nX2FsbG9jX3Rhc2tfY29udGV4dChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCitz
dGF0aWMgaW50IGlvX3VyaW5nX2FsbG9jX3Rhc2tfY29udGV4dChzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnRhc2ssCisJCQkJICAgICAgIHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewogCXN0
cnVjdCBpb191cmluZ190YXNrICp0Y3R4OwogCWludCByZXQ7CiAKLQl0Y3R4ID0ga21hbGxv
YyhzaXplb2YoKnRjdHgpLCBHRlBfS0VSTkVMKTsKKwl0Y3R4ID0ga3phbGxvYyhzaXplb2Yo
KnRjdHgpLCBHRlBfS0VSTkVMKTsKIAlpZiAodW5saWtlbHkoIXRjdHgpKQogCQlyZXR1cm4g
LUVOT01FTTsKIApAQCAtNzk0NSwxNCArODQ5OCwyMiBAQCBzdGF0aWMgaW50IGlvX3VyaW5n
X2FsbG9jX3Rhc2tfY29udGV4dChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCiAJCXJldHVy
biByZXQ7CiAJfQogCisJdGN0eC0+aW9fd3EgPSBpb19pbml0X3dxX29mZmxvYWQoY3R4LCB0
YXNrKTsKKwlpZiAoSVNfRVJSKHRjdHgtPmlvX3dxKSkgeworCQlyZXQgPSBQVFJfRVJSKHRj
dHgtPmlvX3dxKTsKKwkJcGVyY3B1X2NvdW50ZXJfZGVzdHJveSgmdGN0eC0+aW5mbGlnaHQp
OworCQlrZnJlZSh0Y3R4KTsKKwkJcmV0dXJuIHJldDsKKwl9CisKIAl4YV9pbml0KCZ0Y3R4
LT54YSk7CiAJaW5pdF93YWl0cXVldWVfaGVhZCgmdGN0eC0+d2FpdCk7Ci0JdGN0eC0+bGFz
dCA9IE5VTEw7CiAJYXRvbWljX3NldCgmdGN0eC0+aW5faWRsZSwgMCk7Ci0JdGN0eC0+c3Fw
b2xsID0gZmFsc2U7Ci0JaW9faW5pdF9pZGVudGl0eSgmdGN0eC0+X19pZGVudGl0eSk7Ci0J
dGN0eC0+aWRlbnRpdHkgPSAmdGN0eC0+X19pZGVudGl0eTsKKwlhdG9taWNfc2V0KCZ0Y3R4
LT5pbmZsaWdodF90cmFja2VkLCAwKTsKIAl0YXNrLT5pb191cmluZyA9IHRjdHg7CisJc3Bp
bl9sb2NrX2luaXQoJnRjdHgtPnRhc2tfbG9jayk7CisJSU5JVF9XUV9MSVNUKCZ0Y3R4LT50
YXNrX2xpc3QpOworCWluaXRfdGFza193b3JrKCZ0Y3R4LT50YXNrX3dvcmssIHRjdHhfdGFz
a193b3JrKTsKIAlyZXR1cm4gMDsKIH0KIApAQCAtNzk2MSw5ICs4NTIyLDkgQEAgdm9pZCBf
X2lvX3VyaW5nX2ZyZWUoc3RydWN0IHRhc2tfc3RydWN0ICp0c2spCiAJc3RydWN0IGlvX3Vy
aW5nX3Rhc2sgKnRjdHggPSB0c2stPmlvX3VyaW5nOwogCiAJV0FSTl9PTl9PTkNFKCF4YV9l
bXB0eSgmdGN0eC0+eGEpKTsKLQlXQVJOX09OX09OQ0UocmVmY291bnRfcmVhZCgmdGN0eC0+
aWRlbnRpdHktPmNvdW50KSAhPSAxKTsKLQlpZiAodGN0eC0+aWRlbnRpdHkgIT0gJnRjdHgt
Pl9faWRlbnRpdHkpCi0JCWtmcmVlKHRjdHgtPmlkZW50aXR5KTsKKwlXQVJOX09OX09OQ0Uo
dGN0eC0+aW9fd3EpOworCVdBUk5fT05fT05DRSh0Y3R4LT5jYWNoZWRfcmVmcyk7CisKIAlw
ZXJjcHVfY291bnRlcl9kZXN0cm95KCZ0Y3R4LT5pbmZsaWdodCk7CiAJa2ZyZWUodGN0eCk7
CiAJdHNrLT5pb191cmluZyA9IE5VTEw7CkBAIC03OTc0LDU0ICs4NTM1LDcxIEBAIHN0YXRp
YyBpbnQgaW9fc3Ffb2ZmbG9hZF9jcmVhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCiB7
CiAJaW50IHJldDsKIAorCS8qIFJldGFpbiBjb21wYXRpYmlsaXR5IHdpdGggZmFpbGluZyBm
b3IgYW4gaW52YWxpZCBhdHRhY2ggYXR0ZW1wdCAqLworCWlmICgoY3R4LT5mbGFncyAmIChJ
T1JJTkdfU0VUVVBfQVRUQUNIX1dRIHwgSU9SSU5HX1NFVFVQX1NRUE9MTCkpID09CisJCQkJ
SU9SSU5HX1NFVFVQX0FUVEFDSF9XUSkgeworCQlzdHJ1Y3QgZmQgZjsKKworCQlmID0gZmRn
ZXQocC0+d3FfZmQpOworCQlpZiAoIWYuZmlsZSkKKwkJCXJldHVybiAtRU5YSU87CisJCWlm
IChmLmZpbGUtPmZfb3AgIT0gJmlvX3VyaW5nX2ZvcHMpIHsKKwkJCWZkcHV0KGYpOworCQkJ
cmV0dXJuIC1FSU5WQUw7CisJCX0KKwkJZmRwdXQoZik7CisJfQogCWlmIChjdHgtPmZsYWdz
ICYgSU9SSU5HX1NFVFVQX1NRUE9MTCkgeworCQlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzazsK
IAkJc3RydWN0IGlvX3NxX2RhdGEgKnNxZDsKKwkJYm9vbCBhdHRhY2hlZDsKIAotCQlyZXQg
PSAtRVBFUk07Ci0JCWlmICghY2FwYWJsZShDQVBfU1lTX0FETUlOKSkKLQkJCWdvdG8gZXJy
OwotCi0JCXNxZCA9IGlvX2dldF9zcV9kYXRhKHApOworCQlzcWQgPSBpb19nZXRfc3FfZGF0
YShwLCAmYXR0YWNoZWQpOwogCQlpZiAoSVNfRVJSKHNxZCkpIHsKIAkJCXJldCA9IFBUUl9F
UlIoc3FkKTsKIAkJCWdvdG8gZXJyOwogCQl9CiAKKwkJY3R4LT5zcV9jcmVkcyA9IGdldF9j
dXJyZW50X2NyZWQoKTsKIAkJY3R4LT5zcV9kYXRhID0gc3FkOwotCQlpb19zcV90aHJlYWRf
cGFyayhzcWQpOwotCQltdXRleF9sb2NrKCZzcWQtPmN0eF9sb2NrKTsKLQkJbGlzdF9hZGQo
JmN0eC0+c3FkX2xpc3QsICZzcWQtPmN0eF9uZXdfbGlzdCk7Ci0JCW11dGV4X3VubG9jaygm
c3FkLT5jdHhfbG9jayk7Ci0JCWlvX3NxX3RocmVhZF91bnBhcmsoc3FkKTsKLQogCQljdHgt
PnNxX3RocmVhZF9pZGxlID0gbXNlY3NfdG9famlmZmllcyhwLT5zcV90aHJlYWRfaWRsZSk7
CiAJCWlmICghY3R4LT5zcV90aHJlYWRfaWRsZSkKIAkJCWN0eC0+c3FfdGhyZWFkX2lkbGUg
PSBIWjsKIAotCQlpZiAoc3FkLT50aHJlYWQpCi0JCQlnb3RvIGRvbmU7CisJCWlvX3NxX3Ro
cmVhZF9wYXJrKHNxZCk7CisJCWxpc3RfYWRkKCZjdHgtPnNxZF9saXN0LCAmc3FkLT5jdHhf
bGlzdCk7CisJCWlvX3NxZF91cGRhdGVfdGhyZWFkX2lkbGUoc3FkKTsKKwkJLyogZG9uJ3Qg
YXR0YWNoIHRvIGEgZHlpbmcgU1FQT0xMIHRocmVhZCwgd291bGQgYmUgcmFjeSAqLworCQly
ZXQgPSAoYXR0YWNoZWQgJiYgIXNxZC0+dGhyZWFkKSA/IC1FTlhJTyA6IDA7CisJCWlvX3Nx
X3RocmVhZF91bnBhcmsoc3FkKTsKKworCQlpZiAocmV0IDwgMCkKKwkJCWdvdG8gZXJyOwor
CQlpZiAoYXR0YWNoZWQpCisJCQlyZXR1cm4gMDsKIAogCQlpZiAocC0+ZmxhZ3MgJiBJT1JJ
TkdfU0VUVVBfU1FfQUZGKSB7CiAJCQlpbnQgY3B1ID0gcC0+c3FfdGhyZWFkX2NwdTsKIAog
CQkJcmV0ID0gLUVJTlZBTDsKLQkJCWlmIChjcHUgPj0gbnJfY3B1X2lkcykKLQkJCQlnb3Rv
IGVycjsKLQkJCWlmICghY3B1X29ubGluZShjcHUpKQotCQkJCWdvdG8gZXJyOwotCi0JCQlz
cWQtPnRocmVhZCA9IGt0aHJlYWRfY3JlYXRlX29uX2NwdShpb19zcV90aHJlYWQsIHNxZCwK
LQkJCQkJCQljcHUsICJpb191cmluZy1zcSIpOworCQkJaWYgKGNwdSA+PSBucl9jcHVfaWRz
IHx8ICFjcHVfb25saW5lKGNwdSkpCisJCQkJZ290byBlcnJfc3Fwb2xsOworCQkJc3FkLT5z
cV9jcHUgPSBjcHU7CiAJCX0gZWxzZSB7Ci0JCQlzcWQtPnRocmVhZCA9IGt0aHJlYWRfY3Jl
YXRlKGlvX3NxX3RocmVhZCwgc3FkLAotCQkJCQkJCSJpb191cmluZy1zcSIpOworCQkJc3Fk
LT5zcV9jcHUgPSAtMTsKIAkJfQotCQlpZiAoSVNfRVJSKHNxZC0+dGhyZWFkKSkgewotCQkJ
cmV0ID0gUFRSX0VSUihzcWQtPnRocmVhZCk7Ci0JCQlzcWQtPnRocmVhZCA9IE5VTEw7Ci0J
CQlnb3RvIGVycjsKKworCQlzcWQtPnRhc2tfcGlkID0gY3VycmVudC0+cGlkOworCQlzcWQt
PnRhc2tfdGdpZCA9IGN1cnJlbnQtPnRnaWQ7CisJCXRzayA9IGNyZWF0ZV9pb190aHJlYWQo
aW9fc3FfdGhyZWFkLCBzcWQsIE5VTUFfTk9fTk9ERSk7CisJCWlmIChJU19FUlIodHNrKSkg
eworCQkJcmV0ID0gUFRSX0VSUih0c2spOworCQkJZ290byBlcnJfc3Fwb2xsOwogCQl9Ci0J
CXJldCA9IGlvX3VyaW5nX2FsbG9jX3Rhc2tfY29udGV4dChzcWQtPnRocmVhZCk7CisKKwkJ
c3FkLT50aHJlYWQgPSB0c2s7CisJCXJldCA9IGlvX3VyaW5nX2FsbG9jX3Rhc2tfY29udGV4
dCh0c2ssIGN0eCk7CisJCXdha2VfdXBfbmV3X3Rhc2sodHNrKTsKIAkJaWYgKHJldCkKIAkJ
CWdvdG8gZXJyOwogCX0gZWxzZSBpZiAocC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfU1FfQUZG
KSB7CkBAIC04MDMwLDI2ICs4NjA4LDE0IEBAIHN0YXRpYyBpbnQgaW9fc3Ffb2ZmbG9hZF9j
cmVhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCiAJCWdvdG8gZXJyOwogCX0KIAotZG9u
ZToKLQlyZXQgPSBpb19pbml0X3dxX29mZmxvYWQoY3R4LCBwKTsKLQlpZiAocmV0KQotCQln
b3RvIGVycjsKLQogCXJldHVybiAwOworZXJyX3NxcG9sbDoKKwljb21wbGV0ZSgmY3R4LT5z
cV9kYXRhLT5leGl0ZWQpOwogZXJyOgotCWlvX2ZpbmlzaF9hc3luYyhjdHgpOworCWlvX3Nx
X3RocmVhZF9maW5pc2goY3R4KTsKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBp
b19zcV9vZmZsb2FkX3N0YXJ0KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQotewotCXN0cnVj
dCBpb19zcV9kYXRhICpzcWQgPSBjdHgtPnNxX2RhdGE7Ci0KLQljdHgtPmZsYWdzICY9IH5J
T1JJTkdfU0VUVVBfUl9ESVNBQkxFRDsKLQlpZiAoKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VU
VVBfU1FQT0xMKSAmJiBzcWQgJiYgc3FkLT50aHJlYWQpCi0JCXdha2VfdXBfcHJvY2Vzcyhz
cWQtPnRocmVhZCk7Ci19Ci0KIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2lvX3VuYWNjb3VudF9t
ZW0oc3RydWN0IHVzZXJfc3RydWN0ICp1c2VyLAogCQkJCSAgICAgIHVuc2lnbmVkIGxvbmcg
bnJfcGFnZXMpCiB7CkBAIC04MDc1LDM3ICs4NjQxLDI3IEBAIHN0YXRpYyBpbmxpbmUgaW50
IF9faW9fYWNjb3VudF9tZW0oc3RydWN0IHVzZXJfc3RydWN0ICp1c2VyLAogCXJldHVybiAw
OwogfQogCi1zdGF0aWMgdm9pZCBpb191bmFjY291bnRfbWVtKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLAotCQkJICAgICBlbnVtIGlvX21lbV9h
Y2NvdW50IGFjY3QpCitzdGF0aWMgdm9pZCBpb191bmFjY291bnRfbWVtKHN0cnVjdCBpb19y
aW5nX2N0eCAqY3R4LCB1bnNpZ25lZCBsb25nIG5yX3BhZ2VzKQogewotCWlmIChjdHgtPmxp
bWl0X21lbSkKKwlpZiAoY3R4LT51c2VyKQogCQlfX2lvX3VuYWNjb3VudF9tZW0oY3R4LT51
c2VyLCBucl9wYWdlcyk7CiAKLQlpZiAoY3R4LT5tbV9hY2NvdW50KSB7Ci0JCWlmIChhY2N0
ID09IEFDQ1RfTE9DS0VEKQotCQkJY3R4LT5tbV9hY2NvdW50LT5sb2NrZWRfdm0gLT0gbnJf
cGFnZXM7Ci0JCWVsc2UgaWYgKGFjY3QgPT0gQUNDVF9QSU5ORUQpCi0JCQlhdG9taWM2NF9z
dWIobnJfcGFnZXMsICZjdHgtPm1tX2FjY291bnQtPnBpbm5lZF92bSk7Ci0JfQorCWlmIChj
dHgtPm1tX2FjY291bnQpCisJCWF0b21pYzY0X3N1Yihucl9wYWdlcywgJmN0eC0+bW1fYWNj
b3VudC0+cGlubmVkX3ZtKTsKIH0KIAotc3RhdGljIGludCBpb19hY2NvdW50X21lbShzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCwgdW5zaWduZWQgbG9uZyBucl9wYWdlcywKLQkJCSAgZW51
bSBpb19tZW1fYWNjb3VudCBhY2N0KQorc3RhdGljIGludCBpb19hY2NvdW50X21lbShzdHJ1
Y3QgaW9fcmluZ19jdHggKmN0eCwgdW5zaWduZWQgbG9uZyBucl9wYWdlcykKIHsKIAlpbnQg
cmV0OwogCi0JaWYgKGN0eC0+bGltaXRfbWVtKSB7CisJaWYgKGN0eC0+dXNlcikgewogCQly
ZXQgPSBfX2lvX2FjY291bnRfbWVtKGN0eC0+dXNlciwgbnJfcGFnZXMpOwogCQlpZiAocmV0
KQogCQkJcmV0dXJuIHJldDsKIAl9CiAKLQlpZiAoY3R4LT5tbV9hY2NvdW50KSB7Ci0JCWlm
IChhY2N0ID09IEFDQ1RfTE9DS0VEKQotCQkJY3R4LT5tbV9hY2NvdW50LT5sb2NrZWRfdm0g
Kz0gbnJfcGFnZXM7Ci0JCWVsc2UgaWYgKGFjY3QgPT0gQUNDVF9QSU5ORUQpCi0JCQlhdG9t
aWM2NF9hZGQobnJfcGFnZXMsICZjdHgtPm1tX2FjY291bnQtPnBpbm5lZF92bSk7Ci0JfQor
CWlmIChjdHgtPm1tX2FjY291bnQpCisJCWF0b21pYzY0X2FkZChucl9wYWdlcywgJmN0eC0+
bW1fYWNjb3VudC0+cGlubmVkX3ZtKTsKIAogCXJldHVybiAwOwogfQpAQCAtODEyNCwxMCAr
ODY4MCw5IEBAIHN0YXRpYyB2b2lkIGlvX21lbV9mcmVlKHZvaWQgKnB0cikKIAogc3RhdGlj
IHZvaWQgKmlvX21lbV9hbGxvYyhzaXplX3Qgc2l6ZSkKIHsKLQlnZnBfdCBnZnBfZmxhZ3Mg
PSBHRlBfS0VSTkVMIHwgX19HRlBfWkVSTyB8IF9fR0ZQX05PV0FSTiB8IF9fR0ZQX0NPTVAg
fAotCQkJCV9fR0ZQX05PUkVUUlk7CisJZ2ZwX3QgZ2ZwID0gR0ZQX0tFUk5FTF9BQ0NPVU5U
IHwgX19HRlBfWkVSTyB8IF9fR0ZQX05PV0FSTiB8IF9fR0ZQX0NPTVA7CiAKLQlyZXR1cm4g
KHZvaWQgKikgX19nZXRfZnJlZV9wYWdlcyhnZnBfZmxhZ3MsIGdldF9vcmRlcihzaXplKSk7
CisJcmV0dXJuICh2b2lkICopIF9fZ2V0X2ZyZWVfcGFnZXMoZ2ZwLCBnZXRfb3JkZXIoc2l6
ZSkpOwogfQogCiBzdGF0aWMgdW5zaWduZWQgbG9uZyByaW5nc19zaXplKHVuc2lnbmVkIHNx
X2VudHJpZXMsIHVuc2lnbmVkIGNxX2VudHJpZXMsCkBAIC04MTU5LDQxICs4NzE0LDU4IEBA
IHN0YXRpYyB1bnNpZ25lZCBsb25nIHJpbmdzX3NpemUodW5zaWduZWQgc3FfZW50cmllcywg
dW5zaWduZWQgY3FfZW50cmllcywKIAlyZXR1cm4gb2ZmOwogfQogCi1zdGF0aWMgdW5zaWdu
ZWQgbG9uZyByaW5nX3BhZ2VzKHVuc2lnbmVkIHNxX2VudHJpZXMsIHVuc2lnbmVkIGNxX2Vu
dHJpZXMpCitzdGF0aWMgdm9pZCBpb19idWZmZXJfdW5tYXAoc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHgsIHN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqKnNsb3QpCiB7Ci0Jc2l6ZV90IHBhZ2Vz
OwotCi0JcGFnZXMgPSAoc2l6ZV90KTEgPDwgZ2V0X29yZGVyKAotCQlyaW5nc19zaXplKHNx
X2VudHJpZXMsIGNxX2VudHJpZXMsIE5VTEwpKTsKLQlwYWdlcyArPSAoc2l6ZV90KTEgPDwg
Z2V0X29yZGVyKAotCQlhcnJheV9zaXplKHNpemVvZihzdHJ1Y3QgaW9fdXJpbmdfc3FlKSwg
c3FfZW50cmllcykpOworCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqaW11ID0gKnNsb3Q7CisJ
dW5zaWduZWQgaW50IGk7CiAKLQlyZXR1cm4gcGFnZXM7CisJaWYgKGltdSAhPSBjdHgtPmR1
bW15X3VidWYpIHsKKwkJZm9yIChpID0gMDsgaSA8IGltdS0+bnJfYnZlY3M7IGkrKykKKwkJ
CXVucGluX3VzZXJfcGFnZShpbXUtPmJ2ZWNbaV0uYnZfcGFnZSk7CisJCWlmIChpbXUtPmFj
Y3RfcGFnZXMpCisJCQlpb191bmFjY291bnRfbWVtKGN0eCwgaW11LT5hY2N0X3BhZ2VzKTsK
KwkJa3ZmcmVlKGltdSk7CisJfQorCSpzbG90ID0gTlVMTDsKIH0KIAotc3RhdGljIGludCBp
b19zcWVfYnVmZmVyX3VucmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCitzdGF0
aWMgdm9pZCBpb19yc3JjX2J1Zl9wdXQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVj
dCBpb19yc3JjX3B1dCAqcHJzcmMpCiB7Ci0JaW50IGksIGo7CisJaW9fYnVmZmVyX3VubWFw
KGN0eCwgJnByc3JjLT5idWYpOworCXByc3JjLT5idWYgPSBOVUxMOworfQogCi0JaWYgKCFj
dHgtPnVzZXJfYnVmcykKLQkJcmV0dXJuIC1FTlhJTzsKK3N0YXRpYyB2b2lkIF9faW9fc3Fl
X2J1ZmZlcnNfdW5yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKK3sKKwl1bnNp
Z25lZCBpbnQgaTsKIAotCWZvciAoaSA9IDA7IGkgPCBjdHgtPm5yX3VzZXJfYnVmczsgaSsr
KSB7Ci0JCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqaW11ID0gJmN0eC0+dXNlcl9idWZzW2ld
OworCWZvciAoaSA9IDA7IGkgPCBjdHgtPm5yX3VzZXJfYnVmczsgaSsrKQorCQlpb19idWZm
ZXJfdW5tYXAoY3R4LCAmY3R4LT51c2VyX2J1ZnNbaV0pOworCWtmcmVlKGN0eC0+dXNlcl9i
dWZzKTsKKwlpb19yc3JjX2RhdGFfZnJlZShjdHgtPmJ1Zl9kYXRhKTsKKwljdHgtPnVzZXJf
YnVmcyA9IE5VTEw7CisJY3R4LT5idWZfZGF0YSA9IE5VTEw7CisJY3R4LT5ucl91c2VyX2J1
ZnMgPSAwOworfQogCi0JCWZvciAoaiA9IDA7IGogPCBpbXUtPm5yX2J2ZWNzOyBqKyspCi0J
CQl1bnBpbl91c2VyX3BhZ2UoaW11LT5idmVjW2pdLmJ2X3BhZ2UpOworc3RhdGljIGludCBp
b19zcWVfYnVmZmVyc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQorewor
CXVuc2lnbmVkIG5yID0gY3R4LT5ucl91c2VyX2J1ZnM7CisJaW50IHJldDsKIAotCQlpZiAo
aW11LT5hY2N0X3BhZ2VzKQotCQkJaW9fdW5hY2NvdW50X21lbShjdHgsIGltdS0+YWNjdF9w
YWdlcywgQUNDVF9QSU5ORUQpOwotCQlrdmZyZWUoaW11LT5idmVjKTsKLQkJaW11LT5ucl9i
dmVjcyA9IDA7Ci0JfQorCWlmICghY3R4LT5idWZfZGF0YSkKKwkJcmV0dXJuIC1FTlhJTzsK
IAotCWtmcmVlKGN0eC0+dXNlcl9idWZzKTsKLQljdHgtPnVzZXJfYnVmcyA9IE5VTEw7CisJ
LyoKKwkgKiBRdWllc2NlIG1heSB1bmxvY2sgLT51cmluZ19sb2NrLCBhbmQgd2hpbGUgaXQn
cyBub3QgaGVsZAorCSAqIHByZXZlbnQgbmV3IHJlcXVlc3RzIHVzaW5nIHRoZSB0YWJsZS4K
KwkgKi8KIAljdHgtPm5yX3VzZXJfYnVmcyA9IDA7Ci0JcmV0dXJuIDA7CisJcmV0ID0gaW9f
cnNyY19yZWZfcXVpZXNjZShjdHgtPmJ1Zl9kYXRhLCBjdHgpOworCWN0eC0+bnJfdXNlcl9i
dWZzID0gbnI7CisJaWYgKCFyZXQpCisJCV9faW9fc3FlX2J1ZmZlcnNfdW5yZWdpc3Rlcihj
dHgpOworCXJldHVybiByZXQ7CiB9CiAKIHN0YXRpYyBpbnQgaW9fY29weV9pb3Yoc3RydWN0
IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBpb3ZlYyAqZHN0LApAQCAtODI0NSw3ICs4ODE3
LDcgQEAgc3RhdGljIGJvb2wgaGVhZHBhZ2VfYWxyZWFkeV9hY2N0KHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4LCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzLAogCiAJLyogY2hlY2sgcHJldmlvdXNs
eSByZWdpc3RlcmVkIHBhZ2VzICovCiAJZm9yIChpID0gMDsgaSA8IGN0eC0+bnJfdXNlcl9i
dWZzOyBpKyspIHsKLQkJc3RydWN0IGlvX21hcHBlZF91YnVmICppbXUgPSAmY3R4LT51c2Vy
X2J1ZnNbaV07CisJCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqaW11ID0gY3R4LT51c2VyX2J1
ZnNbaV07CiAKIAkJZm9yIChqID0gMDsgaiA8IGltdS0+bnJfYnZlY3M7IGorKykgewogCQkJ
aWYgKCFQYWdlQ29tcG91bmQoaW11LT5idmVjW2pdLmJ2X3BhZ2UpKQpAQCAtODI2NCw2ICs4
ODM2LDcgQEAgc3RhdGljIGludCBpb19idWZmZXJfYWNjb3VudF9waW4oc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHN0cnVjdCBwYWdlICoqcGFnZXMsCiB7CiAJaW50IGksIHJldDsKIAor
CWltdS0+YWNjdF9wYWdlcyA9IDA7CiAJZm9yIChpID0gMDsgaSA8IG5yX3BhZ2VzOyBpKysp
IHsKIAkJaWYgKCFQYWdlQ29tcG91bmQocGFnZXNbaV0pKSB7CiAJCQlpbXUtPmFjY3RfcGFn
ZXMrKzsKQEAgLTgyODMsMTQ3ICs4ODU2LDI1MiBAQCBzdGF0aWMgaW50IGlvX2J1ZmZlcl9h
Y2NvdW50X3BpbihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IHBhZ2UgKipwYWdl
cywKIAlpZiAoIWltdS0+YWNjdF9wYWdlcykKIAkJcmV0dXJuIDA7CiAKLQlyZXQgPSBpb19h
Y2NvdW50X21lbShjdHgsIGltdS0+YWNjdF9wYWdlcywgQUNDVF9QSU5ORUQpOworCXJldCA9
IGlvX2FjY291bnRfbWVtKGN0eCwgaW11LT5hY2N0X3BhZ2VzKTsKIAlpZiAocmV0KQogCQlp
bXUtPmFjY3RfcGFnZXMgPSAwOwogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyBpbnQgaW9f
c3FlX2J1ZmZlcl9yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3Vz
ZXIgKmFyZywKLQkJCQkgIHVuc2lnbmVkIG5yX2FyZ3MpCitzdGF0aWMgaW50IGlvX3NxZV9i
dWZmZXJfcmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBpb3ZlYyAq
aW92LAorCQkJCSAgc3RydWN0IGlvX21hcHBlZF91YnVmICoqcGltdSwKKwkJCQkgIHN0cnVj
dCBwYWdlICoqbGFzdF9ocGFnZSkKIHsKKwlzdHJ1Y3QgaW9fbWFwcGVkX3VidWYgKmltdSA9
IE5VTEw7CiAJc3RydWN0IHZtX2FyZWFfc3RydWN0ICoqdm1hcyA9IE5VTEw7CiAJc3RydWN0
IHBhZ2UgKipwYWdlcyA9IE5VTEw7CisJdW5zaWduZWQgbG9uZyBvZmYsIHN0YXJ0LCBlbmQs
IHVidWY7CisJc2l6ZV90IHNpemU7CisJaW50IHJldCwgcHJldCwgbnJfcGFnZXMsIGk7CisK
KwlpZiAoIWlvdi0+aW92X2Jhc2UpIHsKKwkJKnBpbXUgPSBjdHgtPmR1bW15X3VidWY7CisJ
CXJldHVybiAwOworCX0KKworCXVidWYgPSAodW5zaWduZWQgbG9uZykgaW92LT5pb3ZfYmFz
ZTsKKwllbmQgPSAodWJ1ZiArIGlvdi0+aW92X2xlbiArIFBBR0VfU0laRSAtIDEpID4+IFBB
R0VfU0hJRlQ7CisJc3RhcnQgPSB1YnVmID4+IFBBR0VfU0hJRlQ7CisJbnJfcGFnZXMgPSBl
bmQgLSBzdGFydDsKKworCSpwaW11ID0gTlVMTDsKKwlyZXQgPSAtRU5PTUVNOworCisJcGFn
ZXMgPSBrdm1hbGxvY19hcnJheShucl9wYWdlcywgc2l6ZW9mKHN0cnVjdCBwYWdlICopLCBH
RlBfS0VSTkVMKTsKKwlpZiAoIXBhZ2VzKQorCQlnb3RvIGRvbmU7CisKKwl2bWFzID0ga3Zt
YWxsb2NfYXJyYXkobnJfcGFnZXMsIHNpemVvZihzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKiks
CisJCQkgICAgICBHRlBfS0VSTkVMKTsKKwlpZiAoIXZtYXMpCisJCWdvdG8gZG9uZTsKKwor
CWltdSA9IGt2bWFsbG9jKHN0cnVjdF9zaXplKGltdSwgYnZlYywgbnJfcGFnZXMpLCBHRlBf
S0VSTkVMKTsKKwlpZiAoIWltdSkKKwkJZ290byBkb25lOworCisJcmV0ID0gMDsKKwltbWFw
X3JlYWRfbG9jayhjdXJyZW50LT5tbSk7CisJcHJldCA9IHBpbl91c2VyX3BhZ2VzKHVidWYs
IG5yX3BhZ2VzLCBGT0xMX1dSSVRFIHwgRk9MTF9MT05HVEVSTSwKKwkJCSAgICAgIHBhZ2Vz
LCB2bWFzKTsKKwlpZiAocHJldCA9PSBucl9wYWdlcykgeworCQkvKiBkb24ndCBzdXBwb3J0
IGZpbGUgYmFja2VkIG1lbW9yeSAqLworCQlmb3IgKGkgPSAwOyBpIDwgbnJfcGFnZXM7IGkr
KykgeworCQkJc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEgPSB2bWFzW2ldOworCisJCQlp
ZiAodm1hX2lzX3NobWVtKHZtYSkpCisJCQkJY29udGludWU7CisJCQlpZiAodm1hLT52bV9m
aWxlICYmCisJCQkgICAgIWlzX2ZpbGVfaHVnZXBhZ2VzKHZtYS0+dm1fZmlsZSkpIHsKKwkJ
CQlyZXQgPSAtRU9QTk9UU1VQUDsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0gZWxzZSB7
CisJCXJldCA9IHByZXQgPCAwID8gcHJldCA6IC1FRkFVTFQ7CisJfQorCW1tYXBfcmVhZF91
bmxvY2soY3VycmVudC0+bW0pOworCWlmIChyZXQpIHsKKwkJLyoKKwkJICogaWYgd2UgZGlk
IHBhcnRpYWwgbWFwLCBvciBmb3VuZCBmaWxlIGJhY2tlZCB2bWFzLAorCQkgKiByZWxlYXNl
IGFueSBwYWdlcyB3ZSBkaWQgZ2V0CisJCSAqLworCQlpZiAocHJldCA+IDApCisJCQl1bnBp
bl91c2VyX3BhZ2VzKHBhZ2VzLCBwcmV0KTsKKwkJZ290byBkb25lOworCX0KKworCXJldCA9
IGlvX2J1ZmZlcl9hY2NvdW50X3BpbihjdHgsIHBhZ2VzLCBwcmV0LCBpbXUsIGxhc3RfaHBh
Z2UpOworCWlmIChyZXQpIHsKKwkJdW5waW5fdXNlcl9wYWdlcyhwYWdlcywgcHJldCk7CisJ
CWdvdG8gZG9uZTsKKwl9CisKKwlvZmYgPSB1YnVmICYgflBBR0VfTUFTSzsKKwlzaXplID0g
aW92LT5pb3ZfbGVuOworCWZvciAoaSA9IDA7IGkgPCBucl9wYWdlczsgaSsrKSB7CisJCXNp
emVfdCB2ZWNfbGVuOworCisJCXZlY19sZW4gPSBtaW5fdChzaXplX3QsIHNpemUsIFBBR0Vf
U0laRSAtIG9mZik7CisJCWltdS0+YnZlY1tpXS5idl9wYWdlID0gcGFnZXNbaV07CisJCWlt
dS0+YnZlY1tpXS5idl9sZW4gPSB2ZWNfbGVuOworCQlpbXUtPmJ2ZWNbaV0uYnZfb2Zmc2V0
ID0gb2ZmOworCQlvZmYgPSAwOworCQlzaXplIC09IHZlY19sZW47CisJfQorCS8qIHN0b3Jl
IG9yaWdpbmFsIGFkZHJlc3MgZm9yIGxhdGVyIHZlcmlmaWNhdGlvbiAqLworCWltdS0+dWJ1
ZiA9IHVidWY7CisJaW11LT51YnVmX2VuZCA9IHVidWYgKyBpb3YtPmlvdl9sZW47CisJaW11
LT5ucl9idmVjcyA9IG5yX3BhZ2VzOworCSpwaW11ID0gaW11OworCXJldCA9IDA7Citkb25l
OgorCWlmIChyZXQpCisJCWt2ZnJlZShpbXUpOworCWt2ZnJlZShwYWdlcyk7CisJa3ZmcmVl
KHZtYXMpOworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgaW9fYnVmZmVyc19tYXBf
YWxsb2Moc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHVuc2lnbmVkIGludCBucl9hcmdzKQor
eworCWN0eC0+dXNlcl9idWZzID0ga2NhbGxvYyhucl9hcmdzLCBzaXplb2YoKmN0eC0+dXNl
cl9idWZzKSwgR0ZQX0tFUk5FTCk7CisJcmV0dXJuIGN0eC0+dXNlcl9idWZzID8gMCA6IC1F
Tk9NRU07Cit9CisKK3N0YXRpYyBpbnQgaW9fYnVmZmVyX3ZhbGlkYXRlKHN0cnVjdCBpb3Zl
YyAqaW92KQoreworCXVuc2lnbmVkIGxvbmcgdG1wLCBhY2N0X2xlbiA9IGlvdi0+aW92X2xl
biArIChQQUdFX1NJWkUgLSAxKTsKKworCS8qCisJICogRG9uJ3QgaW1wb3NlIGZ1cnRoZXIg
bGltaXRzIG9uIHRoZSBzaXplIGFuZCBidWZmZXIKKwkgKiBjb25zdHJhaW50cyBoZXJlLCB3
ZSdsbCAtRUlOVkFMIGxhdGVyIHdoZW4gSU8gaXMKKwkgKiBzdWJtaXR0ZWQgaWYgdGhleSBh
cmUgd3JvbmcuCisJICovCisJaWYgKCFpb3YtPmlvdl9iYXNlKQorCQlyZXR1cm4gaW92LT5p
b3ZfbGVuID8gLUVGQVVMVCA6IDA7CisJaWYgKCFpb3YtPmlvdl9sZW4pCisJCXJldHVybiAt
RUZBVUxUOworCisJLyogYXJiaXRyYXJ5IGxpbWl0LCBidXQgd2UgbmVlZCBzb21ldGhpbmcg
Ki8KKwlpZiAoaW92LT5pb3ZfbGVuID4gU1pfMUcpCisJCXJldHVybiAtRUZBVUxUOworCisJ
aWYgKGNoZWNrX2FkZF9vdmVyZmxvdygodW5zaWduZWQgbG9uZylpb3YtPmlvdl9iYXNlLCBh
Y2N0X2xlbiwgJnRtcCkpCisJCXJldHVybiAtRU9WRVJGTE9XOworCisJcmV0dXJuIDA7Cit9
CisKK3N0YXRpYyBpbnQgaW9fc3FlX2J1ZmZlcnNfcmVnaXN0ZXIoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCisJCQkJICAgdW5zaWduZWQgaW50IG5yX2Fy
Z3MsIHU2NCBfX3VzZXIgKnRhZ3MpCit7CiAJc3RydWN0IHBhZ2UgKmxhc3RfaHBhZ2UgPSBO
VUxMOwotCWludCBpLCBqLCBnb3RfcGFnZXMgPSAwOwotCWludCByZXQgPSAtRUlOVkFMOwor
CXN0cnVjdCBpb19yc3JjX2RhdGEgKmRhdGE7CisJaW50IGksIHJldDsKKwlzdHJ1Y3QgaW92
ZWMgaW92OwogCiAJaWYgKGN0eC0+dXNlcl9idWZzKQogCQlyZXR1cm4gLUVCVVNZOwotCWlm
ICghbnJfYXJncyB8fCBucl9hcmdzID4gVUlPX01BWElPVikKKwlpZiAoIW5yX2FyZ3MgfHwg
bnJfYXJncyA+IElPUklOR19NQVhfUkVHX0JVRkZFUlMpCiAJCXJldHVybiAtRUlOVkFMOwor
CXJldCA9IGlvX3JzcmNfbm9kZV9zd2l0Y2hfc3RhcnQoY3R4KTsKKwlpZiAocmV0KQorCQly
ZXR1cm4gcmV0OworCXJldCA9IGlvX3JzcmNfZGF0YV9hbGxvYyhjdHgsIGlvX3JzcmNfYnVm
X3B1dCwgdGFncywgbnJfYXJncywgJmRhdGEpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7
CisJcmV0ID0gaW9fYnVmZmVyc19tYXBfYWxsb2MoY3R4LCBucl9hcmdzKTsKKwlpZiAocmV0
KSB7CisJCWlvX3JzcmNfZGF0YV9mcmVlKGRhdGEpOworCQlyZXR1cm4gcmV0OworCX0KIAot
CWN0eC0+dXNlcl9idWZzID0ga2NhbGxvYyhucl9hcmdzLCBzaXplb2Yoc3RydWN0IGlvX21h
cHBlZF91YnVmKSwKLQkJCQkJR0ZQX0tFUk5FTCk7Ci0JaWYgKCFjdHgtPnVzZXJfYnVmcykK
LQkJcmV0dXJuIC1FTk9NRU07Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbnJfYXJnczsgaSsrKSB7
Ci0JCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqaW11ID0gJmN0eC0+dXNlcl9idWZzW2ldOwot
CQl1bnNpZ25lZCBsb25nIG9mZiwgc3RhcnQsIGVuZCwgdWJ1ZjsKLQkJaW50IHByZXQsIG5y
X3BhZ2VzOwotCQlzdHJ1Y3QgaW92ZWMgaW92OwotCQlzaXplX3Qgc2l6ZTsKLQorCWZvciAo
aSA9IDA7IGkgPCBucl9hcmdzOyBpKyssIGN0eC0+bnJfdXNlcl9idWZzKyspIHsKIAkJcmV0
ID0gaW9fY29weV9pb3YoY3R4LCAmaW92LCBhcmcsIGkpOwogCQlpZiAocmV0KQotCQkJZ290
byBlcnI7CisJCQlicmVhazsKKwkJcmV0ID0gaW9fYnVmZmVyX3ZhbGlkYXRlKCZpb3YpOwor
CQlpZiAocmV0KQorCQkJYnJlYWs7CisJCWlmICghaW92Lmlvdl9iYXNlICYmICppb19nZXRf
dGFnX3Nsb3QoZGF0YSwgaSkpIHsKKwkJCXJldCA9IC1FSU5WQUw7CisJCQlicmVhazsKKwkJ
fQogCi0JCS8qCi0JCSAqIERvbid0IGltcG9zZSBmdXJ0aGVyIGxpbWl0cyBvbiB0aGUgc2l6
ZSBhbmQgYnVmZmVyCi0JCSAqIGNvbnN0cmFpbnRzIGhlcmUsIHdlJ2xsIC1FSU5WQUwgbGF0
ZXIgd2hlbiBJTyBpcwotCQkgKiBzdWJtaXR0ZWQgaWYgdGhleSBhcmUgd3JvbmcuCi0JCSAq
LwotCQlyZXQgPSAtRUZBVUxUOwotCQlpZiAoIWlvdi5pb3ZfYmFzZSB8fCAhaW92Lmlvdl9s
ZW4pCi0JCQlnb3RvIGVycjsKKwkJcmV0ID0gaW9fc3FlX2J1ZmZlcl9yZWdpc3RlcihjdHgs
ICZpb3YsICZjdHgtPnVzZXJfYnVmc1tpXSwKKwkJCQkJICAgICAmbGFzdF9ocGFnZSk7CisJ
CWlmIChyZXQpCisJCQlicmVhazsKKwl9CiAKLQkJLyogYXJiaXRyYXJ5IGxpbWl0LCBidXQg
d2UgbmVlZCBzb21ldGhpbmcgKi8KLQkJaWYgKGlvdi5pb3ZfbGVuID4gU1pfMUcpCi0JCQln
b3RvIGVycjsKKwlXQVJOX09OX09OQ0UoY3R4LT5idWZfZGF0YSk7CiAKLQkJdWJ1ZiA9ICh1
bnNpZ25lZCBsb25nKSBpb3YuaW92X2Jhc2U7Ci0JCWVuZCA9ICh1YnVmICsgaW92Lmlvdl9s
ZW4gKyBQQUdFX1NJWkUgLSAxKSA+PiBQQUdFX1NISUZUOwotCQlzdGFydCA9IHVidWYgPj4g
UEFHRV9TSElGVDsKLQkJbnJfcGFnZXMgPSBlbmQgLSBzdGFydDsKKwljdHgtPmJ1Zl9kYXRh
ID0gZGF0YTsKKwlpZiAocmV0KQorCQlfX2lvX3NxZV9idWZmZXJzX3VucmVnaXN0ZXIoY3R4
KTsKKwllbHNlCisJCWlvX3JzcmNfbm9kZV9zd2l0Y2goY3R4LCBOVUxMKTsKKwlyZXR1cm4g
cmV0OworfQogCi0JCXJldCA9IDA7Ci0JCWlmICghcGFnZXMgfHwgbnJfcGFnZXMgPiBnb3Rf
cGFnZXMpIHsKLQkJCWt2ZnJlZSh2bWFzKTsKLQkJCWt2ZnJlZShwYWdlcyk7Ci0JCQlwYWdl
cyA9IGt2bWFsbG9jX2FycmF5KG5yX3BhZ2VzLCBzaXplb2Yoc3RydWN0IHBhZ2UgKiksCi0J
CQkJCQlHRlBfS0VSTkVMKTsKLQkJCXZtYXMgPSBrdm1hbGxvY19hcnJheShucl9wYWdlcywK
LQkJCQkJc2l6ZW9mKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqKSwKLQkJCQkJR0ZQX0tFUk5F
TCk7Ci0JCQlpZiAoIXBhZ2VzIHx8ICF2bWFzKSB7Ci0JCQkJcmV0ID0gLUVOT01FTTsKLQkJ
CQlnb3RvIGVycjsKLQkJCX0KLQkJCWdvdF9wYWdlcyA9IG5yX3BhZ2VzOwotCQl9CitzdGF0
aWMgaW50IF9faW9fc3FlX2J1ZmZlcnNfdXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4
LAorCQkJCSAgIHN0cnVjdCBpb191cmluZ19yc3JjX3VwZGF0ZTIgKnVwLAorCQkJCSAgIHVu
c2lnbmVkIGludCBucl9hcmdzKQoreworCXU2NCBfX3VzZXIgKnRhZ3MgPSB1NjRfdG9fdXNl
cl9wdHIodXAtPnRhZ3MpOworCXN0cnVjdCBpb3ZlYyBpb3YsIF9fdXNlciAqaW92cyA9IHU2
NF90b191c2VyX3B0cih1cC0+ZGF0YSk7CisJc3RydWN0IHBhZ2UgKmxhc3RfaHBhZ2UgPSBO
VUxMOworCWJvb2wgbmVlZHNfc3dpdGNoID0gZmFsc2U7CisJX191MzIgZG9uZTsKKwlpbnQg
aSwgZXJyOworCisJaWYgKCFjdHgtPmJ1Zl9kYXRhKQorCQlyZXR1cm4gLUVOWElPOworCWlm
ICh1cC0+b2Zmc2V0ICsgbnJfYXJncyA+IGN0eC0+bnJfdXNlcl9idWZzKQorCQlyZXR1cm4g
LUVJTlZBTDsKIAotCQlpbXUtPmJ2ZWMgPSBrdm1hbGxvY19hcnJheShucl9wYWdlcywgc2l6
ZW9mKHN0cnVjdCBiaW9fdmVjKSwKLQkJCQkJCUdGUF9LRVJORUwpOwotCQlyZXQgPSAtRU5P
TUVNOwotCQlpZiAoIWltdS0+YnZlYykKLQkJCWdvdG8gZXJyOworCWZvciAoZG9uZSA9IDA7
IGRvbmUgPCBucl9hcmdzOyBkb25lKyspIHsKKwkJc3RydWN0IGlvX21hcHBlZF91YnVmICpp
bXU7CisJCWludCBvZmZzZXQgPSB1cC0+b2Zmc2V0ICsgZG9uZTsKKwkJdTY0IHRhZyA9IDA7
CiAKLQkJcmV0ID0gMDsKLQkJbW1hcF9yZWFkX2xvY2soY3VycmVudC0+bW0pOwotCQlwcmV0
ID0gcGluX3VzZXJfcGFnZXModWJ1ZiwgbnJfcGFnZXMsCi0JCQkJICAgICAgRk9MTF9XUklU
RSB8IEZPTExfTE9OR1RFUk0sCi0JCQkJICAgICAgcGFnZXMsIHZtYXMpOwotCQlpZiAocHJl
dCA9PSBucl9wYWdlcykgewotCQkJLyogZG9uJ3Qgc3VwcG9ydCBmaWxlIGJhY2tlZCBtZW1v
cnkgKi8KLQkJCWZvciAoaiA9IDA7IGogPCBucl9wYWdlczsgaisrKSB7Ci0JCQkJc3RydWN0
IHZtX2FyZWFfc3RydWN0ICp2bWEgPSB2bWFzW2pdOwotCi0JCQkJaWYgKHZtYS0+dm1fZmls
ZSAmJgotCQkJCSAgICAhaXNfZmlsZV9odWdlcGFnZXModm1hLT52bV9maWxlKSkgewotCQkJ
CQlyZXQgPSAtRU9QTk9UU1VQUDsKLQkJCQkJYnJlYWs7Ci0JCQkJfQotCQkJfQotCQl9IGVs
c2UgewotCQkJcmV0ID0gcHJldCA8IDAgPyBwcmV0IDogLUVGQVVMVDsKLQkJfQotCQltbWFw
X3JlYWRfdW5sb2NrKGN1cnJlbnQtPm1tKTsKLQkJaWYgKHJldCkgewotCQkJLyoKLQkJCSAq
IGlmIHdlIGRpZCBwYXJ0aWFsIG1hcCwgb3IgZm91bmQgZmlsZSBiYWNrZWQgdm1hcywKLQkJ
CSAqIHJlbGVhc2UgYW55IHBhZ2VzIHdlIGRpZCBnZXQKLQkJCSAqLwotCQkJaWYgKHByZXQg
PiAwKQotCQkJCXVucGluX3VzZXJfcGFnZXMocGFnZXMsIHByZXQpOwotCQkJa3ZmcmVlKGlt
dS0+YnZlYyk7Ci0JCQlnb3RvIGVycjsKKwkJZXJyID0gaW9fY29weV9pb3YoY3R4LCAmaW92
LCBpb3ZzLCBkb25lKTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCQlpZiAodGFncyAmJiBj
b3B5X2Zyb21fdXNlcigmdGFnLCAmdGFnc1tkb25lXSwgc2l6ZW9mKHRhZykpKSB7CisJCQll
cnIgPSAtRUZBVUxUOworCQkJYnJlYWs7CiAJCX0KLQotCQlyZXQgPSBpb19idWZmZXJfYWNj
b3VudF9waW4oY3R4LCBwYWdlcywgcHJldCwgaW11LCAmbGFzdF9ocGFnZSk7Ci0JCWlmIChy
ZXQpIHsKLQkJCXVucGluX3VzZXJfcGFnZXMocGFnZXMsIHByZXQpOwotCQkJa3ZmcmVlKGlt
dS0+YnZlYyk7Ci0JCQlnb3RvIGVycjsKKwkJZXJyID0gaW9fYnVmZmVyX3ZhbGlkYXRlKCZp
b3YpOworCQlpZiAoZXJyKQorCQkJYnJlYWs7CisJCWlmICghaW92Lmlvdl9iYXNlICYmIHRh
ZykgeworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWJyZWFrOwogCQl9CisJCWVyciA9IGlvX3Nx
ZV9idWZmZXJfcmVnaXN0ZXIoY3R4LCAmaW92LCAmaW11LCAmbGFzdF9ocGFnZSk7CisJCWlm
IChlcnIpCisJCQlicmVhazsKIAotCQlvZmYgPSB1YnVmICYgflBBR0VfTUFTSzsKLQkJc2l6
ZSA9IGlvdi5pb3ZfbGVuOwotCQlmb3IgKGogPSAwOyBqIDwgbnJfcGFnZXM7IGorKykgewot
CQkJc2l6ZV90IHZlY19sZW47Ci0KLQkJCXZlY19sZW4gPSBtaW5fdChzaXplX3QsIHNpemUs
IFBBR0VfU0laRSAtIG9mZik7Ci0JCQlpbXUtPmJ2ZWNbal0uYnZfcGFnZSA9IHBhZ2VzW2pd
OwotCQkJaW11LT5idmVjW2pdLmJ2X2xlbiA9IHZlY19sZW47Ci0JCQlpbXUtPmJ2ZWNbal0u
YnZfb2Zmc2V0ID0gb2ZmOwotCQkJb2ZmID0gMDsKLQkJCXNpemUgLT0gdmVjX2xlbjsKKwkJ
aSA9IGFycmF5X2luZGV4X25vc3BlYyhvZmZzZXQsIGN0eC0+bnJfdXNlcl9idWZzKTsKKwkJ
aWYgKGN0eC0+dXNlcl9idWZzW2ldICE9IGN0eC0+ZHVtbXlfdWJ1ZikgeworCQkJZXJyID0g
aW9fcXVldWVfcnNyY19yZW1vdmFsKGN0eC0+YnVmX2RhdGEsIGksCisJCQkJCQkgICAgY3R4
LT5yc3JjX25vZGUsIGN0eC0+dXNlcl9idWZzW2ldKTsKKwkJCWlmICh1bmxpa2VseShlcnIp
KSB7CisJCQkJaW9fYnVmZmVyX3VubWFwKGN0eCwgJmltdSk7CisJCQkJYnJlYWs7CisJCQl9
CisJCQljdHgtPnVzZXJfYnVmc1tpXSA9IE5VTEw7CisJCQluZWVkc19zd2l0Y2ggPSB0cnVl
OwogCQl9Ci0JCS8qIHN0b3JlIG9yaWdpbmFsIGFkZHJlc3MgZm9yIGxhdGVyIHZlcmlmaWNh
dGlvbiAqLwotCQlpbXUtPnVidWYgPSB1YnVmOwotCQlpbXUtPmxlbiA9IGlvdi5pb3ZfbGVu
OwotCQlpbXUtPm5yX2J2ZWNzID0gbnJfcGFnZXM7CiAKLQkJY3R4LT5ucl91c2VyX2J1ZnMr
KzsKKwkJY3R4LT51c2VyX2J1ZnNbaV0gPSBpbXU7CisJCSppb19nZXRfdGFnX3Nsb3QoY3R4
LT5idWZfZGF0YSwgb2Zmc2V0KSA9IHRhZzsKIAl9Ci0Ja3ZmcmVlKHBhZ2VzKTsKLQlrdmZy
ZWUodm1hcyk7Ci0JcmV0dXJuIDA7Ci1lcnI6Ci0Ja3ZmcmVlKHBhZ2VzKTsKLQlrdmZyZWUo
dm1hcyk7Ci0JaW9fc3FlX2J1ZmZlcl91bnJlZ2lzdGVyKGN0eCk7Ci0JcmV0dXJuIHJldDsK
KworCWlmIChuZWVkc19zd2l0Y2gpCisJCWlvX3JzcmNfbm9kZV9zd2l0Y2goY3R4LCBjdHgt
PmJ1Zl9kYXRhKTsKKwlyZXR1cm4gZG9uZSA/IGRvbmUgOiBlcnI7CiB9CiAKIHN0YXRpYyBp
bnQgaW9fZXZlbnRmZF9yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBf
X3VzZXIgKmFyZykKQEAgLTg0NDAsNiArOTExOCw3IEBAIHN0YXRpYyBpbnQgaW9fZXZlbnRm
ZF9yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFyZykK
IAljdHgtPmNxX2V2X2ZkID0gZXZlbnRmZF9jdHhfZmRnZXQoZmQpOwogCWlmIChJU19FUlIo
Y3R4LT5jcV9ldl9mZCkpIHsKIAkJaW50IHJldCA9IFBUUl9FUlIoY3R4LT5jcV9ldl9mZCk7
CisKIAkJY3R4LT5jcV9ldl9mZCA9IE5VTEw7CiAJCXJldHVybiByZXQ7CiAJfQpAQCAtODQ2
NywyNiArOTE0Niw2OCBAQCBzdGF0aWMgdm9pZCBpb19kZXN0cm95X2J1ZmZlcnMoc3RydWN0
IGlvX3JpbmdfY3R4ICpjdHgpCiAJCV9faW9fcmVtb3ZlX2J1ZmZlcnMoY3R4LCBidWYsIGlu
ZGV4LCAtMVUpOwogfQogCi1zdGF0aWMgdm9pZCBpb19yaW5nX2N0eF9mcmVlKHN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4KQorc3RhdGljIHZvaWQgaW9fcmVxX2NhY2hlX2ZyZWUoc3RydWN0
IGxpc3RfaGVhZCAqbGlzdCkKIHsKLQlpb19maW5pc2hfYXN5bmMoY3R4KTsKLQlpb19zcWVf
YnVmZmVyX3VucmVnaXN0ZXIoY3R4KTsKKwlzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgKm54dDsK
IAotCWlmIChjdHgtPnNxb190YXNrKSB7Ci0JCXB1dF90YXNrX3N0cnVjdChjdHgtPnNxb190
YXNrKTsKLQkJY3R4LT5zcW9fdGFzayA9IE5VTEw7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9z
YWZlKHJlcSwgbnh0LCBsaXN0LCBpbmZsaWdodF9lbnRyeSkgeworCQlsaXN0X2RlbCgmcmVx
LT5pbmZsaWdodF9lbnRyeSk7CisJCWttZW1fY2FjaGVfZnJlZShyZXFfY2FjaGVwLCByZXEp
OwogCX0KK30KIAotI2lmZGVmIENPTkZJR19CTEtfQ0dST1VQCi0JaWYgKGN0eC0+c3FvX2Js
a2NnX2NzcykKLQkJY3NzX3B1dChjdHgtPnNxb19ibGtjZ19jc3MpOwotI2VuZGlmCitzdGF0
aWMgdm9pZCBpb19yZXFfY2FjaGVzX2ZyZWUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCit7
CisJc3RydWN0IGlvX3N1Ym1pdF9zdGF0ZSAqc3RhdGUgPSAmY3R4LT5zdWJtaXRfc3RhdGU7
CisKKwltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCisJaWYgKHN0YXRlLT5mcmVl
X3JlcXMpIHsKKwkJa21lbV9jYWNoZV9mcmVlX2J1bGsocmVxX2NhY2hlcCwgc3RhdGUtPmZy
ZWVfcmVxcywgc3RhdGUtPnJlcXMpOworCQlzdGF0ZS0+ZnJlZV9yZXFzID0gMDsKKwl9CisK
Kwlpb19mbHVzaF9jYWNoZWRfbG9ja2VkX3JlcXMoY3R4LCBzdGF0ZSk7CisJaW9fcmVxX2Nh
Y2hlX2ZyZWUoJnN0YXRlLT5mcmVlX2xpc3QpOworCW11dGV4X3VubG9jaygmY3R4LT51cmlu
Z19sb2NrKTsKK30KKworc3RhdGljIHZvaWQgaW9fd2FpdF9yc3JjX2RhdGEoc3RydWN0IGlv
X3JzcmNfZGF0YSAqZGF0YSkKK3sKKwlpZiAoZGF0YSAmJiAhYXRvbWljX2RlY19hbmRfdGVz
dCgmZGF0YS0+cmVmcykpCisJCXdhaXRfZm9yX2NvbXBsZXRpb24oJmRhdGEtPmRvbmUpOwor
fQorCitzdGF0aWMgdm9pZCBpb19yaW5nX2N0eF9mcmVlKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4KQoreworCWlvX3NxX3RocmVhZF9maW5pc2goY3R4KTsKKworCS8qIF9faW9fcnNyY19w
dXRfd29yaygpIG1heSBuZWVkIHVyaW5nX2xvY2sgdG8gcHJvZ3Jlc3MsIHdhaXQgdy9vIGl0
ICovCisJaW9fd2FpdF9yc3JjX2RhdGEoY3R4LT5idWZfZGF0YSk7CisJaW9fd2FpdF9yc3Jj
X2RhdGEoY3R4LT5maWxlX2RhdGEpOwogCiAJbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2Nr
KTsKLQlpb19zcWVfZmlsZXNfdW5yZWdpc3RlcihjdHgpOworCWlmIChjdHgtPmJ1Zl9kYXRh
KQorCQlfX2lvX3NxZV9idWZmZXJzX3VucmVnaXN0ZXIoY3R4KTsKKwlpZiAoY3R4LT5maWxl
X2RhdGEpCisJCV9faW9fc3FlX2ZpbGVzX3VucmVnaXN0ZXIoY3R4KTsKKwlpZiAoY3R4LT5y
aW5ncykKKwkJX19pb19jcXJpbmdfb3ZlcmZsb3dfZmx1c2goY3R4LCB0cnVlKTsKIAltdXRl
eF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAJaW9fZXZlbnRmZF91bnJlZ2lzdGVyKGN0
eCk7CiAJaW9fZGVzdHJveV9idWZmZXJzKGN0eCk7CisJaWYgKGN0eC0+c3FfY3JlZHMpCisJ
CXB1dF9jcmVkKGN0eC0+c3FfY3JlZHMpOworCisJLyogdGhlcmUgYXJlIG5vIHJlZ2lzdGVy
ZWQgcmVzb3VyY2VzIGxlZnQsIG5vYm9keSB1c2VzIGl0ICovCisJaWYgKGN0eC0+cnNyY19u
b2RlKQorCQlpb19yc3JjX25vZGVfZGVzdHJveShjdHgtPnJzcmNfbm9kZSk7CisJaWYgKGN0
eC0+cnNyY19iYWNrdXBfbm9kZSkKKwkJaW9fcnNyY19ub2RlX2Rlc3Ryb3koY3R4LT5yc3Jj
X2JhY2t1cF9ub2RlKTsKKwlmbHVzaF9kZWxheWVkX3dvcmsoJmN0eC0+cnNyY19wdXRfd29y
ayk7CisKKwlXQVJOX09OX09OQ0UoIWxpc3RfZW1wdHkoJmN0eC0+cnNyY19yZWZfbGlzdCkp
OworCVdBUk5fT05fT05DRSghbGxpc3RfZW1wdHkoJmN0eC0+cnNyY19wdXRfbGxpc3QpKTsK
IAogI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCiAJaWYgKGN0eC0+cmluZ19zb2NrKSB7CkBA
IC04NDk0LDYgKzkyMTUsNyBAQCBzdGF0aWMgdm9pZCBpb19yaW5nX2N0eF9mcmVlKHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4KQogCQlzb2NrX3JlbGVhc2UoY3R4LT5yaW5nX3NvY2spOwog
CX0KICNlbmRpZgorCVdBUk5fT05fT05DRSghbGlzdF9lbXB0eSgmY3R4LT5sdGltZW91dF9s
aXN0KSk7CiAKIAlpZiAoY3R4LT5tbV9hY2NvdW50KSB7CiAJCW1tZHJvcChjdHgtPm1tX2Fj
Y291bnQpOwpAQCAtODUwNSw5ICs5MjI3LDExIEBAIHN0YXRpYyB2b2lkIGlvX3JpbmdfY3R4
X2ZyZWUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAKIAlwZXJjcHVfcmVmX2V4aXQoJmN0
eC0+cmVmcyk7CiAJZnJlZV91aWQoY3R4LT51c2VyKTsKLQlwdXRfY3JlZChjdHgtPmNyZWRz
KTsKKwlpb19yZXFfY2FjaGVzX2ZyZWUoY3R4KTsKKwlpZiAoY3R4LT5oYXNoX21hcCkKKwkJ
aW9fd3FfcHV0X2hhc2goY3R4LT5oYXNoX21hcCk7CiAJa2ZyZWUoY3R4LT5jYW5jZWxfaGFz
aCk7Ci0Ja21lbV9jYWNoZV9mcmVlKHJlcV9jYWNoZXAsIGN0eC0+ZmFsbGJhY2tfcmVxKTsK
KwlrZnJlZShjdHgtPmR1bW15X3VidWYpOwogCWtmcmVlKGN0eCk7CiB9CiAKQEAgLTg1MTYs
NyArOTI0MCw3IEBAIHN0YXRpYyBfX3BvbGxfdCBpb191cmluZ19wb2xsKHN0cnVjdCBmaWxl
ICpmaWxlLCBwb2xsX3RhYmxlICp3YWl0KQogCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0g
ZmlsZS0+cHJpdmF0ZV9kYXRhOwogCV9fcG9sbF90IG1hc2sgPSAwOwogCi0JcG9sbF93YWl0
KGZpbGUsICZjdHgtPmNxX3dhaXQsIHdhaXQpOworCXBvbGxfd2FpdChmaWxlLCAmY3R4LT5w
b2xsX3dhaXQsIHdhaXQpOwogCS8qCiAJICogc3luY2hyb25pemVzIHdpdGggYmFycmllciBm
cm9tIHdxX2hhc19zbGVlcGVyIGNhbGwgaW4KIAkgKiBpb19jb21taXRfY3FyaW5nCkBAIC04
NTM4LDM4ICs5MjYyLDYzIEBAIHN0YXRpYyBfX3BvbGxfdCBpb191cmluZ19wb2xsKHN0cnVj
dCBmaWxlICpmaWxlLCBwb2xsX3RhYmxlICp3YWl0KQogCSAqIFVzZXJzIG1heSBnZXQgRVBP
TExJTiBtZWFud2hpbGUgc2VlaW5nIG5vdGhpbmcgaW4gY3FyaW5nLCB0aGlzCiAJICogcHVz
aHMgdGhlbSB0byBkbyB0aGUgZmx1c2guCiAJICovCi0JaWYgKGlvX2NxcmluZ19ldmVudHMo
Y3R4KSB8fCB0ZXN0X2JpdCgwLCAmY3R4LT5jcV9jaGVja19vdmVyZmxvdykpCisJaWYgKGlv
X2NxcmluZ19ldmVudHMoY3R4KSB8fCB0ZXN0X2JpdCgwLCAmY3R4LT5jaGVja19jcV9vdmVy
ZmxvdykpCiAJCW1hc2sgfD0gRVBPTExJTiB8IEVQT0xMUkROT1JNOwogCiAJcmV0dXJuIG1h
c2s7CiB9CiAKLXN0YXRpYyBpbnQgaW9fdXJpbmdfZmFzeW5jKGludCBmZCwgc3RydWN0IGZp
bGUgKmZpbGUsIGludCBvbikKLXsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IGZpbGUt
PnByaXZhdGVfZGF0YTsKLQotCXJldHVybiBmYXN5bmNfaGVscGVyKGZkLCBmaWxlLCBvbiwg
JmN0eC0+Y3FfZmFzeW5jKTsKLX0KLQogc3RhdGljIGludCBpb191bnJlZ2lzdGVyX3BlcnNv
bmFsaXR5KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB1bnNpZ25lZCBpZCkKIHsKLQlzdHJ1
Y3QgaW9faWRlbnRpdHkgKmlvZDsKKwljb25zdCBzdHJ1Y3QgY3JlZCAqY3JlZHM7CiAKLQlp
b2QgPSB4YV9lcmFzZSgmY3R4LT5wZXJzb25hbGl0aWVzLCBpZCk7Ci0JaWYgKGlvZCkgewot
CQlwdXRfY3JlZChpb2QtPmNyZWRzKTsKLQkJaWYgKHJlZmNvdW50X2RlY19hbmRfdGVzdCgm
aW9kLT5jb3VudCkpCi0JCQlrZnJlZShpb2QpOworCWNyZWRzID0geGFfZXJhc2UoJmN0eC0+
cGVyc29uYWxpdGllcywgaWQpOworCWlmIChjcmVkcykgeworCQlwdXRfY3JlZChjcmVkcyk7
CiAJCXJldHVybiAwOwogCX0KIAogCXJldHVybiAtRUlOVkFMOwogfQogCitzdHJ1Y3QgaW9f
dGN0eF9leGl0IHsKKwlzdHJ1Y3QgY2FsbGJhY2tfaGVhZAkJdGFza193b3JrOworCXN0cnVj
dCBjb21wbGV0aW9uCQljb21wbGV0aW9uOworCXN0cnVjdCBpb19yaW5nX2N0eAkJKmN0eDsK
K307CisKK3N0YXRpYyB2b2lkIGlvX3RjdHhfZXhpdF9jYihzdHJ1Y3QgY2FsbGJhY2tfaGVh
ZCAqY2IpCit7CisJc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSBjdXJyZW50LT5pb191
cmluZzsKKwlzdHJ1Y3QgaW9fdGN0eF9leGl0ICp3b3JrOworCisJd29yayA9IGNvbnRhaW5l
cl9vZihjYiwgc3RydWN0IGlvX3RjdHhfZXhpdCwgdGFza193b3JrKTsKKwkvKgorCSAqIFdo
ZW4gQGluX2lkbGUsIHdlJ3JlIGluIGNhbmNlbGxhdGlvbiBhbmQgaXQncyByYWN5IHRvIHJl
bW92ZSB0aGUKKwkgKiBub2RlLiBJdCdsbCBiZSByZW1vdmVkIGJ5IHRoZSBlbmQgb2YgY2Fu
Y2VsbGF0aW9uLCBqdXN0IGlnbm9yZSBpdC4KKwkgKiB0Y3R4IGNhbiBiZSBOVUxMIGlmIHRo
ZSBxdWV1ZWluZyBvZiB0aGlzIHRhc2tfd29yayByYWNlZCB3aXRoCisJICogd29yayBjYW5j
ZWxhdGlvbiBvZmYgdGhlIGV4ZWMgcGF0aC4KKwkgKi8KKwlpZiAodGN0eCAmJiAhYXRvbWlj
X3JlYWQoJnRjdHgtPmluX2lkbGUpKQorCQlpb191cmluZ19kZWxfdGN0eF9ub2RlKCh1bnNp
Z25lZCBsb25nKXdvcmstPmN0eCk7CisJY29tcGxldGUoJndvcmstPmNvbXBsZXRpb24pOwor
fQorCitzdGF0aWMgYm9vbCBpb19jYW5jZWxfY3R4X2NiKHN0cnVjdCBpb193cV93b3JrICp3
b3JrLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBpb19raW9jYiAqcmVxID0gY29udGFpbmVy
X29mKHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29yayk7CisKKwlyZXR1cm4gcmVxLT5jdHgg
PT0gZGF0YTsKK30KKwogc3RhdGljIHZvaWQgaW9fcmluZ19leGl0X3dvcmsoc3RydWN0IHdv
cmtfc3RydWN0ICp3b3JrKQogewotCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4ID0gY29udGFp
bmVyX29mKHdvcmssIHN0cnVjdCBpb19yaW5nX2N0eCwKLQkJCQkJICAgICAgIGV4aXRfd29y
ayk7CisJc3RydWN0IGlvX3JpbmdfY3R4ICpjdHggPSBjb250YWluZXJfb2Yod29yaywgc3Ry
dWN0IGlvX3JpbmdfY3R4LCBleGl0X3dvcmspOworCXVuc2lnbmVkIGxvbmcgdGltZW91dCA9
IGppZmZpZXMgKyBIWiAqIDYwICogNTsKKwl1bnNpZ25lZCBsb25nIGludGVydmFsID0gSFog
LyAyMDsKKwlzdHJ1Y3QgaW9fdGN0eF9leGl0IGV4aXQ7CisJc3RydWN0IGlvX3RjdHhfbm9k
ZSAqbm9kZTsKKwlpbnQgcmV0OwogCiAJLyoKIAkgKiBJZiB3ZSdyZSBkb2luZyBwb2xsZWQg
SU8gYW5kIGVuZCB1cCBoYXZpbmcgcmVxdWVzdHMgYmVpbmcKQEAgLTg1NzgsNTMgKzkzMjcs
MTAwIEBAIHN0YXRpYyB2b2lkIGlvX3JpbmdfZXhpdF93b3JrKHN0cnVjdCB3b3JrX3N0cnVj
dCAqd29yaykKIAkgKiBhcyBub2JvZHkgZWxzZSB3aWxsIGJlIGxvb2tpbmcgZm9yIHRoZW0u
CiAJICovCiAJZG8gewotCQlpb19pb3BvbGxfdHJ5X3JlYXBfZXZlbnRzKGN0eCk7Ci0JfSB3
aGlsZSAoIXdhaXRfZm9yX2NvbXBsZXRpb25fdGltZW91dCgmY3R4LT5yZWZfY29tcCwgSFov
MjApKTsKKwkJaW9fdXJpbmdfdHJ5X2NhbmNlbF9yZXF1ZXN0cyhjdHgsIE5VTEwsIHRydWUp
OworCQlpZiAoY3R4LT5zcV9kYXRhKSB7CisJCQlzdHJ1Y3QgaW9fc3FfZGF0YSAqc3FkID0g
Y3R4LT5zcV9kYXRhOworCQkJc3RydWN0IHRhc2tfc3RydWN0ICp0c2s7CisKKwkJCWlvX3Nx
X3RocmVhZF9wYXJrKHNxZCk7CisJCQl0c2sgPSBzcWQtPnRocmVhZDsKKwkJCWlmICh0c2sg
JiYgdHNrLT5pb191cmluZyAmJiB0c2stPmlvX3VyaW5nLT5pb193cSkKKwkJCQlpb193cV9j
YW5jZWxfY2IodHNrLT5pb191cmluZy0+aW9fd3EsCisJCQkJCQlpb19jYW5jZWxfY3R4X2Ni
LCBjdHgsIHRydWUpOworCQkJaW9fc3FfdGhyZWFkX3VucGFyayhzcWQpOworCQl9CisKKwkJ
aWYgKFdBUk5fT05fT05DRSh0aW1lX2FmdGVyKGppZmZpZXMsIHRpbWVvdXQpKSkgeworCQkJ
LyogdGhlcmUgaXMgbGl0dGxlIGhvcGUgbGVmdCwgZG9uJ3QgcnVuIGl0IHRvbyBvZnRlbiAq
LworCQkJaW50ZXJ2YWwgPSBIWiAqIDYwOworCQl9CisJfSB3aGlsZSAoIXdhaXRfZm9yX2Nv
bXBsZXRpb25fdGltZW91dCgmY3R4LT5yZWZfY29tcCwgaW50ZXJ2YWwpKTsKKworCWluaXRf
Y29tcGxldGlvbigmZXhpdC5jb21wbGV0aW9uKTsKKwlpbml0X3Rhc2tfd29yaygmZXhpdC50
YXNrX3dvcmssIGlvX3RjdHhfZXhpdF9jYik7CisJZXhpdC5jdHggPSBjdHg7CisJLyoKKwkg
KiBTb21lIG1heSB1c2UgY29udGV4dCBldmVuIHdoZW4gYWxsIHJlZnMgYW5kIHJlcXVlc3Rz
IGhhdmUgYmVlbiBwdXQsCisJICogYW5kIHRoZXkgYXJlIGZyZWUgdG8gZG8gc28gd2hpbGUg
c3RpbGwgaG9sZGluZyB1cmluZ19sb2NrIG9yCisJICogY29tcGxldGlvbl9sb2NrLCBzZWUg
aW9fcmVxX3Rhc2tfc3VibWl0KCkuIEFwYXJ0IGZyb20gb3RoZXIgd29yaywKKwkgKiB0aGlz
IGxvY2svdW5sb2NrIHNlY3Rpb24gYWxzbyB3YWl0cyB0aGVtIHRvIGZpbmlzaC4KKwkgKi8K
KwltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCXdoaWxlICghbGlzdF9lbXB0eSgm
Y3R4LT50Y3R4X2xpc3QpKSB7CisJCVdBUk5fT05fT05DRSh0aW1lX2FmdGVyKGppZmZpZXMs
IHRpbWVvdXQpKTsKKworCQlub2RlID0gbGlzdF9maXJzdF9lbnRyeSgmY3R4LT50Y3R4X2xp
c3QsIHN0cnVjdCBpb190Y3R4X25vZGUsCisJCQkJCWN0eF9ub2RlKTsKKwkJLyogZG9uJ3Qg
c3BpbiBvbiBhIHNpbmdsZSB0YXNrIGlmIGNhbmNlbGxhdGlvbiBmYWlsZWQgKi8KKwkJbGlz
dF9yb3RhdGVfbGVmdCgmY3R4LT50Y3R4X2xpc3QpOworCQlyZXQgPSB0YXNrX3dvcmtfYWRk
KG5vZGUtPnRhc2ssICZleGl0LnRhc2tfd29yaywgVFdBX1NJR05BTCk7CisJCWlmIChXQVJO
X09OX09OQ0UocmV0KSkKKwkJCWNvbnRpbnVlOworCQl3YWtlX3VwX3Byb2Nlc3Mobm9kZS0+
dGFzayk7CisKKwkJbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCQl3YWl0X2Zv
cl9jb21wbGV0aW9uKCZleGl0LmNvbXBsZXRpb24pOworCQltdXRleF9sb2NrKCZjdHgtPnVy
aW5nX2xvY2spOworCX0KKwltdXRleF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CisJc3Bp
bl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJc3Bpbl91bmxvY2soJmN0eC0+Y29t
cGxldGlvbl9sb2NrKTsKKwogCWlvX3JpbmdfY3R4X2ZyZWUoY3R4KTsKIH0KIAotc3RhdGlj
IGJvb2wgaW9fY2FuY2VsX2N0eF9jYihzdHJ1Y3QgaW9fd3Ffd29yayAqd29yaywgdm9pZCAq
ZGF0YSkKKy8qIFJldHVybnMgdHJ1ZSBpZiB3ZSBmb3VuZCBhbmQga2lsbGVkIG9uZSBvciBt
b3JlIHRpbWVvdXRzICovCitzdGF0aWMgYm9vbCBpb19raWxsX3RpbWVvdXRzKHN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywKKwkJCSAgICAgYm9v
bCBjYW5jZWxfYWxsKQogewotCXN0cnVjdCBpb19raW9jYiAqcmVxID0gY29udGFpbmVyX29m
KHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29yayk7CisJc3RydWN0IGlvX2tpb2NiICpyZXEs
ICp0bXA7CisJaW50IGNhbmNlbGVkID0gMDsKIAotCXJldHVybiByZXEtPmN0eCA9PSBkYXRh
OworCXNwaW5fbG9jaygmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCXNwaW5fbG9ja19pcnEo
JmN0eC0+dGltZW91dF9sb2NrKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocmVxLCB0
bXAsICZjdHgtPnRpbWVvdXRfbGlzdCwgdGltZW91dC5saXN0KSB7CisJCWlmIChpb19tYXRj
aF90YXNrKHJlcSwgdHNrLCBjYW5jZWxfYWxsKSkgeworCQkJaW9fa2lsbF90aW1lb3V0KHJl
cSwgLUVDQU5DRUxFRCk7CisJCQljYW5jZWxlZCsrOworCQl9CisJfQorCXNwaW5fdW5sb2Nr
X2lycSgmY3R4LT50aW1lb3V0X2xvY2spOworCWlmIChjYW5jZWxlZCAhPSAwKQorCQlpb19j
b21taXRfY3FyaW5nKGN0eCk7CisJc3Bpbl91bmxvY2soJmN0eC0+Y29tcGxldGlvbl9sb2Nr
KTsKKwlpZiAoY2FuY2VsZWQgIT0gMCkKKwkJaW9fY3FyaW5nX2V2X3Bvc3RlZChjdHgpOwor
CXJldHVybiBjYW5jZWxlZCAhPSAwOwogfQogCiBzdGF0aWMgdm9pZCBpb19yaW5nX2N0eF93
YWl0X2FuZF9raWxsKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewogCXVuc2lnbmVkIGxv
bmcgaW5kZXg7Ci0Jc3RydWN0IGlvX2lkZW50aWZ5ICppb2Q7CisJc3RydWN0IGNyZWRzICpj
cmVkczsKIAogCW11dGV4X2xvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAJcGVyY3B1X3JlZl9r
aWxsKCZjdHgtPnJlZnMpOwotCS8qIGlmIGZvcmNlIGlzIHNldCwgdGhlIHJpbmcgaXMgZ29p
bmcgYXdheS4gYWx3YXlzIGRyb3AgYWZ0ZXIgdGhhdCAqLwotCi0JaWYgKFdBUk5fT05fT05D
RSgoY3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9TUVBPTEwpICYmICFjdHgtPnNxb19kZWFk
KSkKLQkJY3R4LT5zcW9fZGVhZCA9IDE7Ci0KLQljdHgtPmNxX292ZXJmbG93X2ZsdXNoZWQg
PSAxOwogCWlmIChjdHgtPnJpbmdzKQotCQlfX2lvX2NxcmluZ19vdmVyZmxvd19mbHVzaChj
dHgsIHRydWUsIE5VTEwsIE5VTEwpOworCQlfX2lvX2NxcmluZ19vdmVyZmxvd19mbHVzaChj
dHgsIHRydWUpOworCXhhX2Zvcl9lYWNoKCZjdHgtPnBlcnNvbmFsaXRpZXMsIGluZGV4LCBj
cmVkcykKKwkJaW9fdW5yZWdpc3Rlcl9wZXJzb25hbGl0eShjdHgsIGluZGV4KTsKIAltdXRl
eF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAKLQlpb19raWxsX3RpbWVvdXRzKGN0eCwg
TlVMTCwgTlVMTCk7Ci0JaW9fcG9sbF9yZW1vdmVfYWxsKGN0eCwgTlVMTCwgTlVMTCk7Ci0K
LQlpZiAoY3R4LT5pb193cSkKLQkJaW9fd3FfY2FuY2VsX2NiKGN0eC0+aW9fd3EsIGlvX2Nh
bmNlbF9jdHhfY2IsIGN0eCwgdHJ1ZSk7CisJaW9fa2lsbF90aW1lb3V0cyhjdHgsIE5VTEws
IHRydWUpOworCWlvX3BvbGxfcmVtb3ZlX2FsbChjdHgsIE5VTEwsIHRydWUpOwogCiAJLyog
aWYgd2UgZmFpbGVkIHNldHRpbmcgdXAgdGhlIGN0eCwgd2UgbWlnaHQgbm90IGhhdmUgYW55
IHJpbmdzICovCiAJaW9faW9wb2xsX3RyeV9yZWFwX2V2ZW50cyhjdHgpOwotCXhhX2Zvcl9l
YWNoKCZjdHgtPnBlcnNvbmFsaXRpZXMsIGluZGV4LCBpb2QpCi0JCSBpb191bnJlZ2lzdGVy
X3BlcnNvbmFsaXR5KGN0eCwgaW5kZXgpOwotCi0JLyoKLQkgKiBEbyB0aGlzIHVwZnJvbnQs
IHNvIHdlIHdvbid0IGhhdmUgYSBncmFjZSBwZXJpb2Qgd2hlcmUgdGhlIHJpbmcKLQkgKiBp
cyBjbG9zZWQgYnV0IHJlc291cmNlcyBhcmVuJ3QgcmVhcGVkIHlldC4gVGhpcyBjYW4gY2F1
c2UKLQkgKiBzcHVyaW91cyBmYWlsdXJlIGluIHNldHRpbmcgdXAgYSBuZXcgcmluZy4KLQkg
Ki8KLQlpb191bmFjY291bnRfbWVtKGN0eCwgcmluZ19wYWdlcyhjdHgtPnNxX2VudHJpZXMs
IGN0eC0+Y3FfZW50cmllcyksCi0JCQkgQUNDVF9MT0NLRUQpOwogCiAJSU5JVF9XT1JLKCZj
dHgtPmV4aXRfd29yaywgaW9fcmluZ19leGl0X3dvcmspOwogCS8qCkBAIC04NjQ3LDM1MiAr
OTQ0MywyOTAgQEAgc3RhdGljIGludCBpb191cmluZ19yZWxlYXNlKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQogCiBzdHJ1Y3QgaW9fdGFza19jYW5jZWwgewog
CXN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzazsKLQlzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxl
czsKKwlib29sIGFsbDsKIH07CiAKIHN0YXRpYyBib29sIGlvX2NhbmNlbF90YXNrX2NiKHN0
cnVjdCBpb193cV93b3JrICp3b3JrLCB2b2lkICpkYXRhKQogewogCXN0cnVjdCBpb19raW9j
YiAqcmVxID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBpb19raW9jYiwgd29yayk7CiAJ
c3RydWN0IGlvX3Rhc2tfY2FuY2VsICpjYW5jZWwgPSBkYXRhOwotCWJvb2wgcmV0OwotCi0J
aWYgKGNhbmNlbC0+ZmlsZXMgJiYgKHJlcS0+ZmxhZ3MgJiBSRVFfRl9MSU5LX1RJTUVPVVQp
KSB7Ci0JCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JCXN0cnVjdCBpb19yaW5nX2N0eCAqY3R4
ID0gcmVxLT5jdHg7CiAKLQkJLyogcHJvdGVjdCBhZ2FpbnN0IHJhY2VzIHdpdGggbGlua2Vk
IHRpbWVvdXRzICovCi0JCXNwaW5fbG9ja19pcnFzYXZlKCZjdHgtPmNvbXBsZXRpb25fbG9j
aywgZmxhZ3MpOwotCQlyZXQgPSBpb19tYXRjaF90YXNrKHJlcSwgY2FuY2VsLT50YXNrLCBj
YW5jZWwtPmZpbGVzKTsKLQkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY3R4LT5jb21wbGV0
aW9uX2xvY2ssIGZsYWdzKTsKLQl9IGVsc2UgewotCQlyZXQgPSBpb19tYXRjaF90YXNrKHJl
cSwgY2FuY2VsLT50YXNrLCBjYW5jZWwtPmZpbGVzKTsKLQl9Ci0JcmV0dXJuIHJldDsKKwly
ZXR1cm4gaW9fbWF0Y2hfdGFza19zYWZlKHJlcSwgY2FuY2VsLT50YXNrLCBjYW5jZWwtPmFs
bCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlvX2NhbmNlbF9kZWZlcl9maWxlcyhzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCwKLQkJCQkgIHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywKLQkJCQkg
IHN0cnVjdCBmaWxlc19zdHJ1Y3QgKmZpbGVzKQorc3RhdGljIGJvb2wgaW9fY2FuY2VsX2Rl
ZmVyX2ZpbGVzKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAorCQkJCSAgc3RydWN0IHRhc2tf
c3RydWN0ICp0YXNrLCBib29sIGNhbmNlbF9hbGwpCiB7Ci0Jc3RydWN0IGlvX2RlZmVyX2Vu
dHJ5ICpkZSA9IE5VTEw7CisJc3RydWN0IGlvX2RlZmVyX2VudHJ5ICpkZTsKIAlMSVNUX0hF
QUQobGlzdCk7CiAKLQlzcGluX2xvY2tfaXJxKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJ
c3Bpbl9sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CiAJbGlzdF9mb3JfZWFjaF9lbnRy
eV9yZXZlcnNlKGRlLCAmY3R4LT5kZWZlcl9saXN0LCBsaXN0KSB7Ci0JCWlmIChpb19tYXRj
aF90YXNrKGRlLT5yZXEsIHRhc2ssIGZpbGVzKSkgeworCQlpZiAoaW9fbWF0Y2hfdGFza19z
YWZlKGRlLT5yZXEsIHRhc2ssIGNhbmNlbF9hbGwpKSB7CiAJCQlsaXN0X2N1dF9wb3NpdGlv
bigmbGlzdCwgJmN0eC0+ZGVmZXJfbGlzdCwgJmRlLT5saXN0KTsKIAkJCWJyZWFrOwogCQl9
CiAJfQotCXNwaW5fdW5sb2NrX2lycSgmY3R4LT5jb21wbGV0aW9uX2xvY2spOworCXNwaW5f
dW5sb2NrKCZjdHgtPmNvbXBsZXRpb25fbG9jayk7CisJaWYgKGxpc3RfZW1wdHkoJmxpc3Qp
KQorCQlyZXR1cm4gZmFsc2U7CiAKIAl3aGlsZSAoIWxpc3RfZW1wdHkoJmxpc3QpKSB7CiAJ
CWRlID0gbGlzdF9maXJzdF9lbnRyeSgmbGlzdCwgc3RydWN0IGlvX2RlZmVyX2VudHJ5LCBs
aXN0KTsKIAkJbGlzdF9kZWxfaW5pdCgmZGUtPmxpc3QpOwotCQlyZXFfc2V0X2ZhaWxfbGlu
a3MoZGUtPnJlcSk7Ci0JCWlvX3B1dF9yZXEoZGUtPnJlcSk7Ci0JCWlvX3JlcV9jb21wbGV0
ZShkZS0+cmVxLCAtRUNBTkNFTEVEKTsKKwkJaW9fcmVxX2NvbXBsZXRlX2ZhaWxlZChkZS0+
cmVxLCAtRUNBTkNFTEVEKTsKIAkJa2ZyZWUoZGUpOwogCX0KKwlyZXR1cm4gdHJ1ZTsKIH0K
IAotc3RhdGljIGludCBpb191cmluZ19jb3VudF9pbmZsaWdodChzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCwKLQkJCQkgICBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssCi0JCQkJICAgc3Ry
dWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMpCi17Ci0Jc3RydWN0IGlvX2tpb2NiICpyZXE7Ci0J
aW50IGNudCA9IDA7Ci0KLQlzcGluX2xvY2tfaXJxKCZjdHgtPmluZmxpZ2h0X2xvY2spOwot
CWxpc3RfZm9yX2VhY2hfZW50cnkocmVxLCAmY3R4LT5pbmZsaWdodF9saXN0LCBpbmZsaWdo
dF9lbnRyeSkKLQkJY250ICs9IGlvX21hdGNoX3Rhc2socmVxLCB0YXNrLCBmaWxlcyk7Ci0J
c3Bpbl91bmxvY2tfaXJxKCZjdHgtPmluZmxpZ2h0X2xvY2spOwotCXJldHVybiBjbnQ7Ci19
Ci0KLXN0YXRpYyB2b2lkIGlvX3VyaW5nX2NhbmNlbF9maWxlcyhzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCwKLQkJCQkgIHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywKLQkJCQkgIHN0cnVj
dCBmaWxlc19zdHJ1Y3QgKmZpbGVzKQorc3RhdGljIGJvb2wgaW9fdXJpbmdfdHJ5X2NhbmNl
bF9pb3dxKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewotCXdoaWxlICghbGlzdF9lbXB0
eV9jYXJlZnVsKCZjdHgtPmluZmxpZ2h0X2xpc3QpKSB7Ci0JCXN0cnVjdCBpb190YXNrX2Nh
bmNlbCBjYW5jZWwgPSB7IC50YXNrID0gdGFzaywgLmZpbGVzID0gZmlsZXMgfTsKLQkJREVG
SU5FX1dBSVQod2FpdCk7Ci0JCWludCBpbmZsaWdodDsKLQotCQlpbmZsaWdodCA9IGlvX3Vy
aW5nX2NvdW50X2luZmxpZ2h0KGN0eCwgdGFzaywgZmlsZXMpOwotCQlpZiAoIWluZmxpZ2h0
KQotCQkJYnJlYWs7CisJc3RydWN0IGlvX3RjdHhfbm9kZSAqbm9kZTsKKwllbnVtIGlvX3dx
X2NhbmNlbCBjcmV0OworCWJvb2wgcmV0ID0gZmFsc2U7CiAKLQkJaW9fd3FfY2FuY2VsX2Ni
KGN0eC0+aW9fd3EsIGlvX2NhbmNlbF90YXNrX2NiLCAmY2FuY2VsLCB0cnVlKTsKLQkJaW9f
cG9sbF9yZW1vdmVfYWxsKGN0eCwgdGFzaywgZmlsZXMpOwotCQlpb19raWxsX3RpbWVvdXRz
KGN0eCwgdGFzaywgZmlsZXMpOwotCQkvKiBjYW5jZWxsYXRpb25zIF9tYXlfIHRyaWdnZXIg
dGFzayB3b3JrICovCi0JCWlvX3J1bl90YXNrX3dvcmsoKTsKKwltdXRleF9sb2NrKCZjdHgt
PnVyaW5nX2xvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnkobm9kZSwgJmN0eC0+dGN0eF9s
aXN0LCBjdHhfbm9kZSkgeworCQlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IG5vZGUt
PnRhc2stPmlvX3VyaW5nOwogCi0JCXByZXBhcmVfdG9fd2FpdCgmdGFzay0+aW9fdXJpbmct
PndhaXQsICZ3YWl0LAotCQkJCVRBU0tfVU5JTlRFUlJVUFRJQkxFKTsKLQkJaWYgKGluZmxp
Z2h0ID09IGlvX3VyaW5nX2NvdW50X2luZmxpZ2h0KGN0eCwgdGFzaywgZmlsZXMpKQotCQkJ
c2NoZWR1bGUoKTsKLQkJZmluaXNoX3dhaXQoJnRhc2stPmlvX3VyaW5nLT53YWl0LCAmd2Fp
dCk7CisJCS8qCisJCSAqIGlvX3dxIHdpbGwgc3RheSBhbGl2ZSB3aGlsZSB3ZSBob2xkIHVy
aW5nX2xvY2ssIGJlY2F1c2UgaXQncworCQkgKiBraWxsZWQgYWZ0ZXIgY3R4IG5vZGVzLCB3
aGljaCByZXF1aXJlcyB0byB0YWtlIHRoZSBsb2NrLgorCQkgKi8KKwkJaWYgKCF0Y3R4IHx8
ICF0Y3R4LT5pb193cSkKKwkJCWNvbnRpbnVlOworCQljcmV0ID0gaW9fd3FfY2FuY2VsX2Ni
KHRjdHgtPmlvX3dxLCBpb19jYW5jZWxfY3R4X2NiLCBjdHgsIHRydWUpOworCQlyZXQgfD0g
KGNyZXQgIT0gSU9fV1FfQ0FOQ0VMX05PVEZPVU5EKTsKIAl9CisJbXV0ZXhfdW5sb2NrKCZj
dHgtPnVyaW5nX2xvY2spOworCisJcmV0dXJuIHJldDsKIH0KIAotc3RhdGljIHZvaWQgX19p
b191cmluZ19jYW5jZWxfdGFza19yZXF1ZXN0cyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwK
LQkJCQkJICAgIHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaykKK3N0YXRpYyB2b2lkIGlvX3Vy
aW5nX3RyeV9jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCisJCQkJ
CSBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssCisJCQkJCSBib29sIGNhbmNlbF9hbGwpCiB7
CisJc3RydWN0IGlvX3Rhc2tfY2FuY2VsIGNhbmNlbCA9IHsgLnRhc2sgPSB0YXNrLCAuYWxs
ID0gY2FuY2VsX2FsbCwgfTsKKwlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IHRhc2sg
PyB0YXNrLT5pb191cmluZyA6IE5VTEw7CisKIAl3aGlsZSAoMSkgewotCQlzdHJ1Y3QgaW9f
dGFza19jYW5jZWwgY2FuY2VsID0geyAudGFzayA9IHRhc2ssIC5maWxlcyA9IE5VTEwsIH07
CiAJCWVudW0gaW9fd3FfY2FuY2VsIGNyZXQ7CiAJCWJvb2wgcmV0ID0gZmFsc2U7CiAKLQkJ
Y3JldCA9IGlvX3dxX2NhbmNlbF9jYihjdHgtPmlvX3dxLCBpb19jYW5jZWxfdGFza19jYiwg
JmNhbmNlbCwgdHJ1ZSk7Ci0JCWlmIChjcmV0ICE9IElPX1dRX0NBTkNFTF9OT1RGT1VORCkK
LQkJCXJldCA9IHRydWU7CisJCWlmICghdGFzaykgeworCQkJcmV0IHw9IGlvX3VyaW5nX3Ry
eV9jYW5jZWxfaW93cShjdHgpOworCQl9IGVsc2UgaWYgKHRjdHggJiYgdGN0eC0+aW9fd3Ep
IHsKKwkJCS8qCisJCQkgKiBDYW5jZWxzIHJlcXVlc3RzIG9mIGFsbCByaW5ncywgbm90IG9u
bHkgQGN0eCwgYnV0CisJCQkgKiBpdCdzIGZpbmUgYXMgdGhlIHRhc2sgaXMgaW4gZXhpdC9l
eGVjLgorCQkJICovCisJCQljcmV0ID0gaW9fd3FfY2FuY2VsX2NiKHRjdHgtPmlvX3dxLCBp
b19jYW5jZWxfdGFza19jYiwKKwkJCQkJICAgICAgICZjYW5jZWwsIHRydWUpOworCQkJcmV0
IHw9IChjcmV0ICE9IElPX1dRX0NBTkNFTF9OT1RGT1VORCk7CisJCX0KIAogCQkvKiBTUVBP
TEwgdGhyZWFkIGRvZXMgaXRzIG93biBwb2xsaW5nICovCi0JCWlmICghKGN0eC0+ZmxhZ3Mg
JiBJT1JJTkdfU0VUVVBfU1FQT0xMKSkgeworCQlpZiAoKCEoY3R4LT5mbGFncyAmIElPUklO
R19TRVRVUF9TUVBPTEwpICYmIGNhbmNlbF9hbGwpIHx8CisJCSAgICAoY3R4LT5zcV9kYXRh
ICYmIGN0eC0+c3FfZGF0YS0+dGhyZWFkID09IGN1cnJlbnQpKSB7CiAJCQl3aGlsZSAoIWxp
c3RfZW1wdHlfY2FyZWZ1bCgmY3R4LT5pb3BvbGxfbGlzdCkpIHsKIAkJCQlpb19pb3BvbGxf
dHJ5X3JlYXBfZXZlbnRzKGN0eCk7CiAJCQkJcmV0ID0gdHJ1ZTsKIAkJCX0KIAkJfQogCi0J
CXJldCB8PSBpb19wb2xsX3JlbW92ZV9hbGwoY3R4LCB0YXNrLCBOVUxMKTsKLQkJcmV0IHw9
IGlvX2tpbGxfdGltZW91dHMoY3R4LCB0YXNrLCBOVUxMKTsKKwkJcmV0IHw9IGlvX2NhbmNl
bF9kZWZlcl9maWxlcyhjdHgsIHRhc2ssIGNhbmNlbF9hbGwpOworCQlyZXQgfD0gaW9fcG9s
bF9yZW1vdmVfYWxsKGN0eCwgdGFzaywgY2FuY2VsX2FsbCk7CisJCXJldCB8PSBpb19raWxs
X3RpbWVvdXRzKGN0eCwgdGFzaywgY2FuY2VsX2FsbCk7CisJCWlmICh0YXNrKQorCQkJcmV0
IHw9IGlvX3J1bl90YXNrX3dvcmsoKTsKIAkJaWYgKCFyZXQpCiAJCQlicmVhazsKLQkJaW9f
cnVuX3Rhc2tfd29yaygpOwogCQljb25kX3Jlc2NoZWQoKTsKIAl9CiB9CiAKLXN0YXRpYyB2
b2lkIGlvX2Rpc2FibGVfc3FvX3N1Ym1pdChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKLXsK
LQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwotCWN0eC0+c3FvX2RlYWQgPSAxOwot
CWlmIChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1JfRElTQUJMRUQpCi0JCWlvX3NxX29m
ZmxvYWRfc3RhcnQoY3R4KTsKLQltdXRleF91bmxvY2soJmN0eC0+dXJpbmdfbG9jayk7Ci0K
LQkvKiBtYWtlIHN1cmUgY2FsbGVycyBlbnRlciB0aGUgcmluZyB0byBnZXQgZXJyb3IgKi8K
LQlpZiAoY3R4LT5yaW5ncykKLQkJaW9fcmluZ19zZXRfd2FrZXVwX2ZsYWcoY3R4KTsKLX0K
LQotLyoKLSAqIFdlIG5lZWQgdG8gaXRlcmF0aXZlbHkgY2FuY2VsIHJlcXVlc3RzLCBpbiBj
YXNlIGEgcmVxdWVzdCBoYXMgZGVwZW5kZW50Ci0gKiBoYXJkIGxpbmtzLiBUaGVzZSBwZXJz
aXN0IGV2ZW4gZm9yIGZhaWx1cmUgb2YgY2FuY2VsYXRpb25zLCBoZW5jZSBrZWVwCi0gKiBs
b29waW5nIHVudGlsIG5vbmUgYXJlIGZvdW5kLgotICovCi1zdGF0aWMgdm9pZCBpb191cmlu
Z19jYW5jZWxfdGFza19yZXF1ZXN0cyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKLQkJCQkJ
ICBzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcykKLXsKLQlzdHJ1Y3QgdGFza19zdHJ1Y3Qg
KnRhc2sgPSBjdXJyZW50OwotCi0JaWYgKChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NR
UE9MTCkgJiYgY3R4LT5zcV9kYXRhKSB7Ci0JCWlvX2Rpc2FibGVfc3FvX3N1Ym1pdChjdHgp
OwotCQl0YXNrID0gY3R4LT5zcV9kYXRhLT50aHJlYWQ7Ci0JCWF0b21pY19pbmMoJnRhc2st
PmlvX3VyaW5nLT5pbl9pZGxlKTsKLQkJaW9fc3FfdGhyZWFkX3BhcmsoY3R4LT5zcV9kYXRh
KTsKLQl9Ci0KLQlpb19jYW5jZWxfZGVmZXJfZmlsZXMoY3R4LCB0YXNrLCBmaWxlcyk7Ci0J
aW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0eCwgdHJ1ZSwgdGFzaywgZmlsZXMpOwotCi0J
aWYgKCFmaWxlcykKLQkJX19pb191cmluZ19jYW5jZWxfdGFza19yZXF1ZXN0cyhjdHgsIHRh
c2spOwotCWVsc2UKLQkJaW9fdXJpbmdfY2FuY2VsX2ZpbGVzKGN0eCwgdGFzaywgZmlsZXMp
OwotCi0JaWYgKChjdHgtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1NRUE9MTCkgJiYgY3R4LT5z
cV9kYXRhKSB7Ci0JCWF0b21pY19kZWMoJnRhc2stPmlvX3VyaW5nLT5pbl9pZGxlKTsKLQkJ
aW9fc3FfdGhyZWFkX3VucGFyayhjdHgtPnNxX2RhdGEpOwotCX0KLX0KLQotLyoKLSAqIE5v
dGUgdGhhdCB0aGlzIHRhc2sgaGFzIHVzZWQgaW9fdXJpbmcuIFdlIHVzZSBpdCBmb3IgY2Fu
Y2VsYXRpb24gcHVycG9zZXMuCi0gKi8KLXN0YXRpYyBpbnQgaW9fdXJpbmdfYWRkX3Rhc2tf
ZmlsZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGZpbGUgKmZpbGUpCitzdGF0
aWMgaW50IF9faW9fdXJpbmdfYWRkX3RjdHhfbm9kZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCkKIHsKIAlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGN1cnJlbnQtPmlvX3VyaW5n
OworCXN0cnVjdCBpb190Y3R4X25vZGUgKm5vZGU7CiAJaW50IHJldDsKIAogCWlmICh1bmxp
a2VseSghdGN0eCkpIHsKLQkJcmV0ID0gaW9fdXJpbmdfYWxsb2NfdGFza19jb250ZXh0KGN1
cnJlbnQpOworCQlyZXQgPSBpb191cmluZ19hbGxvY190YXNrX2NvbnRleHQoY3VycmVudCwg
Y3R4KTsKIAkJaWYgKHVubGlrZWx5KHJldCkpCiAJCQlyZXR1cm4gcmV0OworCiAJCXRjdHgg
PSBjdXJyZW50LT5pb191cmluZzsKLQl9Ci0JaWYgKHRjdHgtPmxhc3QgIT0gZmlsZSkgewot
CQl2b2lkICpvbGQgPSB4YV9sb2FkKCZ0Y3R4LT54YSwgKHVuc2lnbmVkIGxvbmcpZmlsZSk7
CisJCWlmIChjdHgtPmlvd3FfbGltaXRzX3NldCkgeworCQkJdW5zaWduZWQgaW50IGxpbWl0
c1syXSA9IHsgY3R4LT5pb3dxX2xpbWl0c1swXSwKKwkJCQkJCSAgIGN0eC0+aW93cV9saW1p
dHNbMV0sIH07CiAKLQkJaWYgKCFvbGQpIHsKLQkJCWdldF9maWxlKGZpbGUpOwotCQkJcmV0
ID0geGFfZXJyKHhhX3N0b3JlKCZ0Y3R4LT54YSwgKHVuc2lnbmVkIGxvbmcpZmlsZSwKLQkJ
CQkJCWZpbGUsIEdGUF9LRVJORUwpKTsKLQkJCWlmIChyZXQpIHsKLQkJCQlmcHV0KGZpbGUp
OworCQkJcmV0ID0gaW9fd3FfbWF4X3dvcmtlcnModGN0eC0+aW9fd3EsIGxpbWl0cyk7CisJ
CQlpZiAocmV0KQogCQkJCXJldHVybiByZXQ7Ci0JCQl9CiAJCX0KLQkJdGN0eC0+bGFzdCA9
IGZpbGU7CiAJfQorCWlmICgheGFfbG9hZCgmdGN0eC0+eGEsICh1bnNpZ25lZCBsb25nKWN0
eCkpIHsKKwkJbm9kZSA9IGttYWxsb2Moc2l6ZW9mKCpub2RlKSwgR0ZQX0tFUk5FTCk7CisJ
CWlmICghbm9kZSkKKwkJCXJldHVybiAtRU5PTUVNOworCQlub2RlLT5jdHggPSBjdHg7CisJ
CW5vZGUtPnRhc2sgPSBjdXJyZW50OwogCi0JLyoKLQkgKiBUaGlzIGlzIHJhY2Ugc2FmZSBp
biB0aGF0IHRoZSB0YXNrIGl0c2VsZiBpcyBkb2luZyB0aGlzLCBoZW5jZSBpdAotCSAqIGNh
bm5vdCBiZSBnb2luZyB0aHJvdWdoIHRoZSBleGl0L2NhbmNlbCBwYXRocyBhdCB0aGUgc2Ft
ZSB0aW1lLgotCSAqIFRoaXMgY2Fubm90IGJlIG1vZGlmaWVkIHdoaWxlIGV4aXQvY2FuY2Vs
IGlzIHJ1bm5pbmcuCi0JICovCi0JaWYgKCF0Y3R4LT5zcXBvbGwgJiYgKGN0eC0+ZmxhZ3Mg
JiBJT1JJTkdfU0VUVVBfU1FQT0xMKSkKLQkJdGN0eC0+c3Fwb2xsID0gdHJ1ZTsKKwkJcmV0
ID0geGFfZXJyKHhhX3N0b3JlKCZ0Y3R4LT54YSwgKHVuc2lnbmVkIGxvbmcpY3R4LAorCQkJ
CQlub2RlLCBHRlBfS0VSTkVMKSk7CisJCWlmIChyZXQpIHsKKwkJCWtmcmVlKG5vZGUpOwor
CQkJcmV0dXJuIHJldDsKKwkJfQogCisJCW11dGV4X2xvY2soJmN0eC0+dXJpbmdfbG9jayk7
CisJCWxpc3RfYWRkKCZub2RlLT5jdHhfbm9kZSwgJmN0eC0+dGN0eF9saXN0KTsKKwkJbXV0
ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCX0KKwl0Y3R4LT5sYXN0ID0gY3R4Owog
CXJldHVybiAwOwogfQogCiAvKgotICogUmVtb3ZlIHRoaXMgaW9fdXJpbmdfZmlsZSAtPiB0
YXNrIG1hcHBpbmcuCisgKiBOb3RlIHRoYXQgdGhpcyB0YXNrIGhhcyB1c2VkIGlvX3VyaW5n
LiBXZSB1c2UgaXQgZm9yIGNhbmNlbGF0aW9uIHB1cnBvc2VzLgogICovCi1zdGF0aWMgdm9p
ZCBpb191cmluZ19kZWxfdGFza19maWxlKHN0cnVjdCBmaWxlICpmaWxlKQorc3RhdGljIGlu
bGluZSBpbnQgaW9fdXJpbmdfYWRkX3RjdHhfbm9kZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCkKIHsKIAlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGN1cnJlbnQtPmlvX3VyaW5n
OwogCi0JaWYgKHRjdHgtPmxhc3QgPT0gZmlsZSkKLQkJdGN0eC0+bGFzdCA9IE5VTEw7Ci0J
ZmlsZSA9IHhhX2VyYXNlKCZ0Y3R4LT54YSwgKHVuc2lnbmVkIGxvbmcpZmlsZSk7Ci0JaWYg
KGZpbGUpCi0JCWZwdXQoZmlsZSk7CisJaWYgKGxpa2VseSh0Y3R4ICYmIHRjdHgtPmxhc3Qg
PT0gY3R4KSkKKwkJcmV0dXJuIDA7CisJcmV0dXJuIF9faW9fdXJpbmdfYWRkX3RjdHhfbm9k
ZShjdHgpOwogfQogCi1zdGF0aWMgdm9pZCBpb191cmluZ19yZW1vdmVfdGFza19maWxlcyhz
dHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCkKKy8qCisgKiBSZW1vdmUgdGhpcyBpb191cmlu
Z19maWxlIC0+IHRhc2sgbWFwcGluZy4KKyAqLworc3RhdGljIHZvaWQgaW9fdXJpbmdfZGVs
X3RjdHhfbm9kZSh1bnNpZ25lZCBsb25nIGluZGV4KQogewotCXN0cnVjdCBmaWxlICpmaWxl
OwotCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisJc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHgg
PSBjdXJyZW50LT5pb191cmluZzsKKwlzdHJ1Y3QgaW9fdGN0eF9ub2RlICpub2RlOwogCi0J
eGFfZm9yX2VhY2goJnRjdHgtPnhhLCBpbmRleCwgZmlsZSkKLQkJaW9fdXJpbmdfZGVsX3Rh
c2tfZmlsZShmaWxlKTsKLX0KKwlpZiAoIXRjdHgpCisJCXJldHVybjsKKwlub2RlID0geGFf
ZXJhc2UoJnRjdHgtPnhhLCBpbmRleCk7CisJaWYgKCFub2RlKQorCQlyZXR1cm47CiAKLXZv
aWQgX19pb191cmluZ19maWxlc19jYW5jZWwoc3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMp
Ci17Ci0Jc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSBjdXJyZW50LT5pb191cmluZzsK
LQlzdHJ1Y3QgZmlsZSAqZmlsZTsKLQl1bnNpZ25lZCBsb25nIGluZGV4OworCVdBUk5fT05f
T05DRShjdXJyZW50ICE9IG5vZGUtPnRhc2spOworCVdBUk5fT05fT05DRShsaXN0X2VtcHR5
KCZub2RlLT5jdHhfbm9kZSkpOwogCi0JLyogbWFrZSBzdXJlIG92ZXJmbG93IGV2ZW50cyBh
cmUgZHJvcHBlZCAqLwotCWF0b21pY19pbmMoJnRjdHgtPmluX2lkbGUpOwotCXhhX2Zvcl9l
YWNoKCZ0Y3R4LT54YSwgaW5kZXgsIGZpbGUpCi0JCWlvX3VyaW5nX2NhbmNlbF90YXNrX3Jl
cXVlc3RzKGZpbGUtPnByaXZhdGVfZGF0YSwgZmlsZXMpOwotCWF0b21pY19kZWMoJnRjdHgt
PmluX2lkbGUpOworCW11dGV4X2xvY2soJm5vZGUtPmN0eC0+dXJpbmdfbG9jayk7CisJbGlz
dF9kZWwoJm5vZGUtPmN0eF9ub2RlKTsKKwltdXRleF91bmxvY2soJm5vZGUtPmN0eC0+dXJp
bmdfbG9jayk7CiAKLQlpZiAoZmlsZXMpCi0JCWlvX3VyaW5nX3JlbW92ZV90YXNrX2ZpbGVz
KHRjdHgpOworCWlmICh0Y3R4LT5sYXN0ID09IG5vZGUtPmN0eCkKKwkJdGN0eC0+bGFzdCA9
IE5VTEw7CisJa2ZyZWUobm9kZSk7CiB9CiAKLXN0YXRpYyBzNjQgdGN0eF9pbmZsaWdodChz
dHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCkKK3N0YXRpYyB2b2lkIGlvX3VyaW5nX2NsZWFu
X3RjdHgoc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHgpCiB7CisJc3RydWN0IGlvX3dxICp3
cSA9IHRjdHgtPmlvX3dxOworCXN0cnVjdCBpb190Y3R4X25vZGUgKm5vZGU7CiAJdW5zaWdu
ZWQgbG9uZyBpbmRleDsKLQlzdHJ1Y3QgZmlsZSAqZmlsZTsKLQlzNjQgaW5mbGlnaHQ7Ci0K
LQlpbmZsaWdodCA9IHBlcmNwdV9jb3VudGVyX3N1bSgmdGN0eC0+aW5mbGlnaHQpOwotCWlm
ICghdGN0eC0+c3Fwb2xsKQotCQlyZXR1cm4gaW5mbGlnaHQ7CiAKLQkvKgotCSAqIElmIHdl
IGhhdmUgU1FQT0xMIHJpbmdzLCB0aGVuIHdlIG5lZWQgdG8gaXRlcmF0ZSBhbmQgZmluZCB0
aGVtLCBhbmQKLQkgKiBhZGQgdGhlIHBlbmRpbmcgY291bnQgZm9yIHRob3NlLgotCSAqLwot
CXhhX2Zvcl9lYWNoKCZ0Y3R4LT54YSwgaW5kZXgsIGZpbGUpIHsKLQkJc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHggPSBmaWxlLT5wcml2YXRlX2RhdGE7Ci0KLQkJaWYgKGN0eC0+ZmxhZ3Mg
JiBJT1JJTkdfU0VUVVBfU1FQT0xMKSB7Ci0JCQlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqX190
Y3R4ID0gY3R4LT5zcW9fdGFzay0+aW9fdXJpbmc7Ci0KLQkJCWluZmxpZ2h0ICs9IHBlcmNw
dV9jb3VudGVyX3N1bSgmX190Y3R4LT5pbmZsaWdodCk7Ci0JCX0KKwl4YV9mb3JfZWFjaCgm
dGN0eC0+eGEsIGluZGV4LCBub2RlKSB7CisJCWlvX3VyaW5nX2RlbF90Y3R4X25vZGUoaW5k
ZXgpOworCQljb25kX3Jlc2NoZWQoKTsKKwl9CisJaWYgKHdxKSB7CisJCS8qCisJCSAqIE11
c3QgYmUgYWZ0ZXIgaW9fdXJpbmdfZGVsX3Rhc2tfZmlsZSgpIChyZW1vdmVzIG5vZGVzIHVu
ZGVyCisJCSAqIHVyaW5nX2xvY2spIHRvIGF2b2lkIHJhY2Ugd2l0aCBpb191cmluZ190cnlf
Y2FuY2VsX2lvd3EoKS4KKwkJICovCisJCWlvX3dxX3B1dF9hbmRfZXhpdCh3cSk7CisJCXRj
dHgtPmlvX3dxID0gTlVMTDsKIAl9Cit9CiAKLQlyZXR1cm4gaW5mbGlnaHQ7CitzdGF0aWMg
czY0IHRjdHhfaW5mbGlnaHQoc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHgsIGJvb2wgdHJh
Y2tlZCkKK3sKKwlpZiAodHJhY2tlZCkKKwkJcmV0dXJuIGF0b21pY19yZWFkKCZ0Y3R4LT5p
bmZsaWdodF90cmFja2VkKTsKKwlyZXR1cm4gcGVyY3B1X2NvdW50ZXJfc3VtKCZ0Y3R4LT5p
bmZsaWdodCk7CiB9CiAKIC8qCi0gKiBGaW5kIGFueSBpb191cmluZyBmZCB0aGF0IHRoaXMg
dGFzayBoYXMgcmVnaXN0ZXJlZCBvciBkb25lIElPIG9uLCBhbmQgY2FuY2VsCi0gKiByZXF1
ZXN0cy4KKyAqIEZpbmQgYW55IGlvX3VyaW5nIGN0eCB0aGF0IHRoaXMgdGFzayBoYXMgcmVn
aXN0ZXJlZCBvciBkb25lIElPIG9uLCBhbmQgY2FuY2VsCisgKiByZXF1ZXN0cy4gQHNxZCBz
aG91bGQgYmUgbm90LW51bGwgSUZGIGl0J3MgYW4gU1FQT0xMIHRocmVhZCBjYW5jZWxsYXRp
b24uCiAgKi8KLXZvaWQgX19pb191cmluZ190YXNrX2NhbmNlbCh2b2lkKQorc3RhdGljIHZv
aWQgaW9fdXJpbmdfY2FuY2VsX2dlbmVyaWMoYm9vbCBjYW5jZWxfYWxsLCBzdHJ1Y3QgaW9f
c3FfZGF0YSAqc3FkKQogewogCXN0cnVjdCBpb191cmluZ190YXNrICp0Y3R4ID0gY3VycmVu
dC0+aW9fdXJpbmc7Ci0JREVGSU5FX1dBSVQod2FpdCk7CisJc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHg7CiAJczY0IGluZmxpZ2h0OworCURFRklORV9XQUlUKHdhaXQpOwogCi0JLyogbWFr
ZSBzdXJlIG92ZXJmbG93IGV2ZW50cyBhcmUgZHJvcHBlZCAqLwotCWF0b21pY19pbmMoJnRj
dHgtPmluX2lkbGUpOworCVdBUk5fT05fT05DRShzcWQgJiYgc3FkLT50aHJlYWQgIT0gY3Vy
cmVudCk7CiAKLQkvKiB0cmlnZ2VyIGlvX2Rpc2FibGVfc3FvX3N1Ym1pdCgpICovCi0JaWYg
KHRjdHgtPnNxcG9sbCkKLQkJX19pb191cmluZ19maWxlc19jYW5jZWwoTlVMTCk7CisJaWYg
KCFjdXJyZW50LT5pb191cmluZykKKwkJcmV0dXJuOworCWlmICh0Y3R4LT5pb193cSkKKwkJ
aW9fd3FfZXhpdF9zdGFydCh0Y3R4LT5pb193cSk7CiAKKwlhdG9taWNfaW5jKCZ0Y3R4LT5p
bl9pZGxlKTsKIAlkbyB7CisJCWlvX3VyaW5nX2Ryb3BfdGN0eF9yZWZzKGN1cnJlbnQpOwog
CQkvKiByZWFkIGNvbXBsZXRpb25zIGJlZm9yZSBjYW5jZWxhdGlvbnMgKi8KLQkJaW5mbGln
aHQgPSB0Y3R4X2luZmxpZ2h0KHRjdHgpOworCQlpbmZsaWdodCA9IHRjdHhfaW5mbGlnaHQo
dGN0eCwgIWNhbmNlbF9hbGwpOwogCQlpZiAoIWluZmxpZ2h0KQogCQkJYnJlYWs7Ci0JCV9f
aW9fdXJpbmdfZmlsZXNfY2FuY2VsKE5VTEwpOwotCi0JCXByZXBhcmVfdG9fd2FpdCgmdGN0
eC0+d2FpdCwgJndhaXQsIFRBU0tfVU5JTlRFUlJVUFRJQkxFKTsKLQotCQkvKgotCQkgKiBJ
ZiB3ZSd2ZSBzZWVuIGNvbXBsZXRpb25zLCByZXRyeSB3aXRob3V0IHdhaXRpbmcuIFRoaXMK
LQkJICogYXZvaWRzIGEgcmFjZSB3aGVyZSBhIGNvbXBsZXRpb24gY29tZXMgaW4gYmVmb3Jl
IHdlIGRpZAotCQkgKiBwcmVwYXJlX3RvX3dhaXQoKS4KLQkJICovCi0JCWlmIChpbmZsaWdo
dCA9PSB0Y3R4X2luZmxpZ2h0KHRjdHgpKQotCQkJc2NoZWR1bGUoKTsKLQkJZmluaXNoX3dh
aXQoJnRjdHgtPndhaXQsICZ3YWl0KTsKLQl9IHdoaWxlICgxKTsKLQotCWF0b21pY19kZWMo
JnRjdHgtPmluX2lkbGUpOwotCi0JaW9fdXJpbmdfcmVtb3ZlX3Rhc2tfZmlsZXModGN0eCk7
Ci19Ci0KLXN0YXRpYyBpbnQgaW9fdXJpbmdfZmx1c2goc3RydWN0IGZpbGUgKmZpbGUsIHZv
aWQgKmRhdGEpCi17Ci0Jc3RydWN0IGlvX3VyaW5nX3Rhc2sgKnRjdHggPSBjdXJyZW50LT5p
b191cmluZzsKLQlzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCA9IGZpbGUtPnByaXZhdGVfZGF0
YTsKLQotCWlmIChmYXRhbF9zaWduYWxfcGVuZGluZyhjdXJyZW50KSB8fCAoY3VycmVudC0+
ZmxhZ3MgJiBQRl9FWElUSU5HKSkKLQkJaW9fdXJpbmdfY2FuY2VsX3Rhc2tfcmVxdWVzdHMo
Y3R4LCBOVUxMKTsKIAotCWlmICghdGN0eCkKLQkJcmV0dXJuIDA7CisJCWlmICghc3FkKSB7
CisJCQlzdHJ1Y3QgaW9fdGN0eF9ub2RlICpub2RlOworCQkJdW5zaWduZWQgbG9uZyBpbmRl
eDsKIAotCS8qIHdlIHNob3VsZCBoYXZlIGNhbmNlbGxlZCBhbmQgZXJhc2VkIGl0IGJlZm9y
ZSBQRl9FWElUSU5HICovCi0JV0FSTl9PTl9PTkNFKChjdXJyZW50LT5mbGFncyAmIFBGX0VY
SVRJTkcpICYmCi0JCSAgICAgeGFfbG9hZCgmdGN0eC0+eGEsICh1bnNpZ25lZCBsb25nKWZp
bGUpKTsKKwkJCXhhX2Zvcl9lYWNoKCZ0Y3R4LT54YSwgaW5kZXgsIG5vZGUpIHsKKwkJCQkv
KiBzcXBvbGwgdGFzayB3aWxsIGNhbmNlbCBhbGwgaXRzIHJlcXVlc3RzICovCisJCQkJaWYg
KG5vZGUtPmN0eC0+c3FfZGF0YSkKKwkJCQkJY29udGludWU7CisJCQkJaW9fdXJpbmdfdHJ5
X2NhbmNlbF9yZXF1ZXN0cyhub2RlLT5jdHgsIGN1cnJlbnQsCisJCQkJCQkJICAgICBjYW5j
ZWxfYWxsKTsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCWxpc3RfZm9yX2VhY2hfZW50cnkoY3R4
LCAmc3FkLT5jdHhfbGlzdCwgc3FkX2xpc3QpCisJCQkJaW9fdXJpbmdfdHJ5X2NhbmNlbF9y
ZXF1ZXN0cyhjdHgsIGN1cnJlbnQsCisJCQkJCQkJICAgICBjYW5jZWxfYWxsKTsKKwkJfQog
Ci0JLyoKLQkgKiBmcHV0KCkgaXMgcGVuZGluZywgd2lsbCBiZSAyIGlmIHRoZSBvbmx5IG90
aGVyIHJlZiBpcyBvdXIgcG90ZW50aWFsCi0JICogdGFzayBmaWxlIG5vdGUuIElmIHRoZSB0
YXNrIGlzIGV4aXRpbmcsIGRyb3AgcmVnYXJkbGVzcyBvZiBjb3VudC4KLQkgKi8KLQlpZiAo
YXRvbWljX2xvbmdfcmVhZCgmZmlsZS0+Zl9jb3VudCkgIT0gMikKLQkJcmV0dXJuIDA7CisJ
CXByZXBhcmVfdG9fd2FpdCgmdGN0eC0+d2FpdCwgJndhaXQsIFRBU0tfSU5URVJSVVBUSUJM
RSk7CisJCWlvX3J1bl90YXNrX3dvcmsoKTsKKwkJaW9fdXJpbmdfZHJvcF90Y3R4X3JlZnMo
Y3VycmVudCk7CiAKLQlpZiAoY3R4LT5mbGFncyAmIElPUklOR19TRVRVUF9TUVBPTEwpIHsK
LQkJLyogdGhlcmUgaXMgb25seSBvbmUgZmlsZSBub3RlLCB3aGljaCBpcyBvd25lZCBieSBz
cW9fdGFzayAqLwotCQlXQVJOX09OX09OQ0UoY3R4LT5zcW9fdGFzayAhPSBjdXJyZW50ICYm
Ci0JCQkgICAgIHhhX2xvYWQoJnRjdHgtPnhhLCAodW5zaWduZWQgbG9uZylmaWxlKSk7Ci0J
CS8qIHNxb19kZWFkIGNoZWNrIGlzIGZvciB3aGVuIHRoaXMgaGFwcGVucyBhZnRlciBjYW5j
ZWxsYXRpb24gKi8KLQkJV0FSTl9PTl9PTkNFKGN0eC0+c3FvX3Rhc2sgPT0gY3VycmVudCAm
JiAhY3R4LT5zcW9fZGVhZCAmJgotCQkJICAgICAheGFfbG9hZCgmdGN0eC0+eGEsICh1bnNp
Z25lZCBsb25nKWZpbGUpKTsKKwkJLyoKKwkJICogSWYgd2UndmUgc2VlbiBjb21wbGV0aW9u
cywgcmV0cnkgd2l0aG91dCB3YWl0aW5nLiBUaGlzCisJCSAqIGF2b2lkcyBhIHJhY2Ugd2hl
cmUgYSBjb21wbGV0aW9uIGNvbWVzIGluIGJlZm9yZSB3ZSBkaWQKKwkJICogcHJlcGFyZV90
b193YWl0KCkuCisJCSAqLworCQlpZiAoaW5mbGlnaHQgPT0gdGN0eF9pbmZsaWdodCh0Y3R4
LCAhY2FuY2VsX2FsbCkpCisJCQlzY2hlZHVsZSgpOworCQlmaW5pc2hfd2FpdCgmdGN0eC0+
d2FpdCwgJndhaXQpOworCX0gd2hpbGUgKDEpOwogCi0JCWlvX2Rpc2FibGVfc3FvX3N1Ym1p
dChjdHgpOworCWlvX3VyaW5nX2NsZWFuX3RjdHgodGN0eCk7CisJaWYgKGNhbmNlbF9hbGwp
IHsKKwkJLyoKKwkJICogV2Ugc2hvdWxkbid0IHJ1biB0YXNrX3dvcmtzIGFmdGVyIGNhbmNl
bCwgc28ganVzdCBsZWF2ZQorCQkgKiAtPmluX2lkbGUgc2V0IGZvciBub3JtYWwgZXhpdC4K
KwkJICovCisJCWF0b21pY19kZWMoJnRjdHgtPmluX2lkbGUpOworCQkvKiBmb3IgZXhlYyBh
bGwgY3VycmVudCdzIHJlcXVlc3RzIHNob3VsZCBiZSBnb25lLCBraWxsIHRjdHggKi8KKwkJ
X19pb191cmluZ19mcmVlKGN1cnJlbnQpOwogCX0KK30KIAotCWlmICghKGN0eC0+ZmxhZ3Mg
JiBJT1JJTkdfU0VUVVBfU1FQT0xMKSB8fCBjdHgtPnNxb190YXNrID09IGN1cnJlbnQpCi0J
CWlvX3VyaW5nX2RlbF90YXNrX2ZpbGUoZmlsZSk7Ci0JcmV0dXJuIDA7Cit2b2lkIF9faW9f
dXJpbmdfY2FuY2VsKGJvb2wgY2FuY2VsX2FsbCkKK3sKKwlpb191cmluZ19jYW5jZWxfZ2Vu
ZXJpYyhjYW5jZWxfYWxsLCBOVUxMKTsKIH0KIAogc3RhdGljIHZvaWQgKmlvX3VyaW5nX3Zh
bGlkYXRlX21tYXBfcmVxdWVzdChzdHJ1Y3QgZmlsZSAqZmlsZSwKQEAgLTkwNjcsNjAgKzk4
MDEsODQgQEAgc3RhdGljIHVuc2lnbmVkIGxvbmcgaW9fdXJpbmdfbm9tbXVfZ2V0X3VubWFw
cGVkX2FyZWEoc3RydWN0IGZpbGUgKmZpbGUsCiAKIHN0YXRpYyBpbnQgaW9fc3Fwb2xsX3dh
aXRfc3Eoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiB7Ci0JaW50IHJldCA9IDA7CiAJREVG
SU5FX1dBSVQod2FpdCk7CiAKIAlkbyB7CiAJCWlmICghaW9fc3FyaW5nX2Z1bGwoY3R4KSkK
IAkJCWJyZWFrOwotCiAJCXByZXBhcmVfdG9fd2FpdCgmY3R4LT5zcW9fc3Ffd2FpdCwgJndh
aXQsIFRBU0tfSU5URVJSVVBUSUJMRSk7CiAKLQkJaWYgKHVubGlrZWx5KGN0eC0+c3FvX2Rl
YWQpKSB7Ci0JCQlyZXQgPSAtRU9XTkVSREVBRDsKLQkJCWJyZWFrOwotCQl9Ci0KIAkJaWYg
KCFpb19zcXJpbmdfZnVsbChjdHgpKQogCQkJYnJlYWs7Ci0KIAkJc2NoZWR1bGUoKTsKIAl9
IHdoaWxlICghc2lnbmFsX3BlbmRpbmcoY3VycmVudCkpOwogCiAJZmluaXNoX3dhaXQoJmN0
eC0+c3FvX3NxX3dhaXQsICZ3YWl0KTsKLQlyZXR1cm4gcmV0OworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW50IGlvX2dldF9leHRfYXJnKHVuc2lnbmVkIGZsYWdzLCBjb25zdCB2b2lk
IF9fdXNlciAqYXJncCwgc2l6ZV90ICphcmdzeiwKKwkJCSAgc3RydWN0IF9fa2VybmVsX3Rp
bWVzcGVjIF9fdXNlciAqKnRzLAorCQkJICBjb25zdCBzaWdzZXRfdCBfX3VzZXIgKipzaWcp
Cit7CisJc3RydWN0IGlvX3VyaW5nX2dldGV2ZW50c19hcmcgYXJnOworCisJLyoKKwkgKiBJ
ZiBFWFRfQVJHIGlzbid0IHNldCwgdGhlbiB3ZSBoYXZlIG5vIHRpbWVzcGVjIGFuZCB0aGUg
YXJncCBwb2ludGVyCisJICogaXMganVzdCBhIHBvaW50ZXIgdG8gdGhlIHNpZ3NldF90Lgor
CSAqLworCWlmICghKGZsYWdzICYgSU9SSU5HX0VOVEVSX0VYVF9BUkcpKSB7CisJCSpzaWcg
PSAoY29uc3Qgc2lnc2V0X3QgX191c2VyICopIGFyZ3A7CisJCSp0cyA9IE5VTEw7CisJCXJl
dHVybiAwOworCX0KKworCS8qCisJICogRVhUX0FSRyBpcyBzZXQgLSBlbnN1cmUgd2UgYWdy
ZWUgb24gdGhlIHNpemUgb2YgaXQgYW5kIGNvcHkgaW4gb3VyCisJICogdGltZXNwZWMgYW5k
IHNpZ3NldF90IHBvaW50ZXJzIGlmIGdvb2QuCisJICovCisJaWYgKCphcmdzeiAhPSBzaXpl
b2YoYXJnKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisJaWYgKGNvcHlfZnJvbV91c2VyKCZhcmcs
IGFyZ3AsIHNpemVvZihhcmcpKSkKKwkJcmV0dXJuIC1FRkFVTFQ7CisJaWYgKGFyZy5wYWQp
CisJCXJldHVybiAtRUlOVkFMOworCSpzaWcgPSB1NjRfdG9fdXNlcl9wdHIoYXJnLnNpZ21h
c2spOworCSphcmdzeiA9IGFyZy5zaWdtYXNrX3N6OworCSp0cyA9IHU2NF90b191c2VyX3B0
cihhcmcudHMpOworCXJldHVybiAwOwogfQogCiBTWVNDQUxMX0RFRklORTYoaW9fdXJpbmdf
ZW50ZXIsIHVuc2lnbmVkIGludCwgZmQsIHUzMiwgdG9fc3VibWl0LAotCQl1MzIsIG1pbl9j
b21wbGV0ZSwgdTMyLCBmbGFncywgY29uc3Qgc2lnc2V0X3QgX191c2VyICosIHNpZywKLQkJ
c2l6ZV90LCBzaWdzeikKKwkJdTMyLCBtaW5fY29tcGxldGUsIHUzMiwgZmxhZ3MsIGNvbnN0
IHZvaWQgX191c2VyICosIGFyZ3AsCisJCXNpemVfdCwgYXJnc3opCiB7CiAJc3RydWN0IGlv
X3JpbmdfY3R4ICpjdHg7Ci0JbG9uZyByZXQgPSAtRUJBREY7CiAJaW50IHN1Ym1pdHRlZCA9
IDA7CiAJc3RydWN0IGZkIGY7CisJbG9uZyByZXQ7CiAKIAlpb19ydW5fdGFza193b3JrKCk7
CiAKLQlpZiAoZmxhZ3MgJiB+KElPUklOR19FTlRFUl9HRVRFVkVOVFMgfCBJT1JJTkdfRU5U
RVJfU1FfV0FLRVVQIHwKLQkJCUlPUklOR19FTlRFUl9TUV9XQUlUKSkKKwlpZiAodW5saWtl
bHkoZmxhZ3MgJiB+KElPUklOR19FTlRFUl9HRVRFVkVOVFMgfCBJT1JJTkdfRU5URVJfU1Ff
V0FLRVVQIHwKKwkJCSAgICAgICBJT1JJTkdfRU5URVJfU1FfV0FJVCB8IElPUklOR19FTlRF
Ul9FWFRfQVJHKSkpCiAJCXJldHVybiAtRUlOVkFMOwogCiAJZiA9IGZkZ2V0KGZkKTsKLQlp
ZiAoIWYuZmlsZSkKKwlpZiAodW5saWtlbHkoIWYuZmlsZSkpCiAJCXJldHVybiAtRUJBREY7
CiAKIAlyZXQgPSAtRU9QTk9UU1VQUDsKLQlpZiAoZi5maWxlLT5mX29wICE9ICZpb191cmlu
Z19mb3BzKQorCWlmICh1bmxpa2VseShmLmZpbGUtPmZfb3AgIT0gJmlvX3VyaW5nX2ZvcHMp
KQogCQlnb3RvIG91dF9mcHV0OwogCiAJcmV0ID0gLUVOWElPOwogCWN0eCA9IGYuZmlsZS0+
cHJpdmF0ZV9kYXRhOwotCWlmICghcGVyY3B1X3JlZl90cnlnZXQoJmN0eC0+cmVmcykpCisJ
aWYgKHVubGlrZWx5KCFwZXJjcHVfcmVmX3RyeWdldCgmY3R4LT5yZWZzKSkpCiAJCWdvdG8g
b3V0X2ZwdXQ7CiAKIAlyZXQgPSAtRUJBREZEOwotCWlmIChjdHgtPmZsYWdzICYgSU9SSU5H
X1NFVFVQX1JfRElTQUJMRUQpCisJaWYgKHVubGlrZWx5KGN0eC0+ZmxhZ3MgJiBJT1JJTkdf
U0VUVVBfUl9ESVNBQkxFRCkpCiAJCWdvdG8gb3V0OwogCiAJLyoKQEAgLTkxMzAsOSArOTg4
OCw5IEBAIFNZU0NBTExfREVGSU5FNihpb191cmluZ19lbnRlciwgdW5zaWduZWQgaW50LCBm
ZCwgdTMyLCB0b19zdWJtaXQsCiAJICovCiAJcmV0ID0gMDsKIAlpZiAoY3R4LT5mbGFncyAm
IElPUklOR19TRVRVUF9TUVBPTEwpIHsKLQkJaW9fY3FyaW5nX292ZXJmbG93X2ZsdXNoKGN0
eCwgZmFsc2UsIE5VTEwsIE5VTEwpOworCQlpb19jcXJpbmdfb3ZlcmZsb3dfZmx1c2goY3R4
KTsKIAotCQlpZiAodW5saWtlbHkoY3R4LT5zcW9fZGVhZCkpIHsKKwkJaWYgKHVubGlrZWx5
KGN0eC0+c3FfZGF0YS0+dGhyZWFkID09IE5VTEwpKSB7CiAJCQlyZXQgPSAtRU9XTkVSREVB
RDsKIAkJCWdvdG8gb3V0OwogCQl9CkBAIC05MTQ1LDcgKzk5MDMsNyBAQCBTWVNDQUxMX0RF
RklORTYoaW9fdXJpbmdfZW50ZXIsIHVuc2lnbmVkIGludCwgZmQsIHUzMiwgdG9fc3VibWl0
LAogCQl9CiAJCXN1Ym1pdHRlZCA9IHRvX3N1Ym1pdDsKIAl9IGVsc2UgaWYgKHRvX3N1Ym1p
dCkgewotCQlyZXQgPSBpb191cmluZ19hZGRfdGFza19maWxlKGN0eCwgZi5maWxlKTsKKwkJ
cmV0ID0gaW9fdXJpbmdfYWRkX3RjdHhfbm9kZShjdHgpOwogCQlpZiAodW5saWtlbHkocmV0
KSkKIAkJCWdvdG8gb3V0OwogCQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOwpAQCAt
OTE1Niw2ICs5OTE0LDEzIEBAIFNZU0NBTExfREVGSU5FNihpb191cmluZ19lbnRlciwgdW5z
aWduZWQgaW50LCBmZCwgdTMyLCB0b19zdWJtaXQsCiAJCQlnb3RvIG91dDsKIAl9CiAJaWYg
KGZsYWdzICYgSU9SSU5HX0VOVEVSX0dFVEVWRU5UUykgeworCQljb25zdCBzaWdzZXRfdCBf
X3VzZXIgKnNpZzsKKwkJc3RydWN0IF9fa2VybmVsX3RpbWVzcGVjIF9fdXNlciAqdHM7CisK
KwkJcmV0ID0gaW9fZ2V0X2V4dF9hcmcoZmxhZ3MsIGFyZ3AsICZhcmdzeiwgJnRzLCAmc2ln
KTsKKwkJaWYgKHVubGlrZWx5KHJldCkpCisJCQlnb3RvIG91dDsKKwogCQltaW5fY29tcGxl
dGUgPSBtaW4obWluX2NvbXBsZXRlLCBjdHgtPmNxX2VudHJpZXMpOwogCiAJCS8qCkBAIC05
MTY4LDcgKzk5MzMsNyBAQCBTWVNDQUxMX0RFRklORTYoaW9fdXJpbmdfZW50ZXIsIHVuc2ln
bmVkIGludCwgZmQsIHUzMiwgdG9fc3VibWl0LAogCQkgICAgIShjdHgtPmZsYWdzICYgSU9S
SU5HX1NFVFVQX1NRUE9MTCkpIHsKIAkJCXJldCA9IGlvX2lvcG9sbF9jaGVjayhjdHgsIG1p
bl9jb21wbGV0ZSk7CiAJCX0gZWxzZSB7Ci0JCQlyZXQgPSBpb19jcXJpbmdfd2FpdChjdHgs
IG1pbl9jb21wbGV0ZSwgc2lnLCBzaWdzeik7CisJCQlyZXQgPSBpb19jcXJpbmdfd2FpdChj
dHgsIG1pbl9jb21wbGV0ZSwgc2lnLCBhcmdzeiwgdHMpOwogCQl9CiAJfQogCkBAIC05MTgx
LDkgKzk5NDYsOCBAQCBTWVNDQUxMX0RFRklORTYoaW9fdXJpbmdfZW50ZXIsIHVuc2lnbmVk
IGludCwgZmQsIHUzMiwgdG9fc3VibWl0LAogCiAjaWZkZWYgQ09ORklHX1BST0NfRlMKIHN0
YXRpYyBpbnQgaW9fdXJpbmdfc2hvd19jcmVkKHN0cnVjdCBzZXFfZmlsZSAqbSwgdW5zaWdu
ZWQgaW50IGlkLAotCQljb25zdCBzdHJ1Y3QgaW9faWRlbnRpdHkgKmlvZCkKKwkJY29uc3Qg
c3RydWN0IGNyZWQgKmNyZWQpCiB7Ci0JY29uc3Qgc3RydWN0IGNyZWQgKmNyZWQgPSBpb2Qt
PmNyZWRzOwogCXN0cnVjdCB1c2VyX25hbWVzcGFjZSAqdW5zID0gc2VxX3VzZXJfbnMobSk7
CiAJc3RydWN0IGdyb3VwX2luZm8gKmdpOwogCWtlcm5lbF9jYXBfdCBjYXA7CkBAIC05MjI3
LDE4ICs5OTkxLDE4IEBAIHN0YXRpYyB2b2lkIF9faW9fdXJpbmdfc2hvd19mZGluZm8oc3Ry
dWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBzZXFfZmlsZSAqbSkKIAkgKi8KIAloYXNf
bG9jayA9IG11dGV4X3RyeWxvY2soJmN0eC0+dXJpbmdfbG9jayk7CiAKLQlpZiAoaGFzX2xv
Y2sgJiYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfU1FQT0xMKSkKKwlpZiAoaGFzX2xv
Y2sgJiYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfU1FQT0xMKSkgewogCQlzcSA9IGN0
eC0+c3FfZGF0YTsKKwkJaWYgKCFzcS0+dGhyZWFkKQorCQkJc3EgPSBOVUxMOworCX0KIAog
CXNlcV9wcmludGYobSwgIlNxVGhyZWFkOlx0JWRcbiIsIHNxID8gdGFza19waWRfbnIoc3Et
PnRocmVhZCkgOiAtMSk7CiAJc2VxX3ByaW50ZihtLCAiU3FUaHJlYWRDcHU6XHQlZFxuIiwg
c3EgPyB0YXNrX2NwdShzcS0+dGhyZWFkKSA6IC0xKTsKIAlzZXFfcHJpbnRmKG0sICJVc2Vy
RmlsZXM6XHQldVxuIiwgY3R4LT5ucl91c2VyX2ZpbGVzKTsKIAlmb3IgKGkgPSAwOyBoYXNf
bG9jayAmJiBpIDwgY3R4LT5ucl91c2VyX2ZpbGVzOyBpKyspIHsKLQkJc3RydWN0IGZpeGVk
X2ZpbGVfdGFibGUgKnRhYmxlOwotCQlzdHJ1Y3QgZmlsZSAqZjsKKwkJc3RydWN0IGZpbGUg
KmYgPSBpb19maWxlX2Zyb21faW5kZXgoY3R4LCBpKTsKIAotCQl0YWJsZSA9ICZjdHgtPmZp
bGVfZGF0YS0+dGFibGVbaSA+PiBJT1JJTkdfRklMRV9UQUJMRV9TSElGVF07Ci0JCWYgPSB0
YWJsZS0+ZmlsZXNbaSAmIElPUklOR19GSUxFX1RBQkxFX01BU0tdOwogCQlpZiAoZikKIAkJ
CXNlcV9wcmludGYobSwgIiU1dTogJXNcbiIsIGksIGZpbGVfZGVudHJ5KGYpLT5kX2luYW1l
KTsKIAkJZWxzZQpAQCAtOTI0NiwyMSArMTAwMTAsMjEgQEAgc3RhdGljIHZvaWQgX19pb191
cmluZ19zaG93X2ZkaW5mbyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IHNlcV9m
aWxlICptKQogCX0KIAlzZXFfcHJpbnRmKG0sICJVc2VyQnVmczpcdCV1XG4iLCBjdHgtPm5y
X3VzZXJfYnVmcyk7CiAJZm9yIChpID0gMDsgaGFzX2xvY2sgJiYgaSA8IGN0eC0+bnJfdXNl
cl9idWZzOyBpKyspIHsKLQkJc3RydWN0IGlvX21hcHBlZF91YnVmICpidWYgPSAmY3R4LT51
c2VyX2J1ZnNbaV07CisJCXN0cnVjdCBpb19tYXBwZWRfdWJ1ZiAqYnVmID0gY3R4LT51c2Vy
X2J1ZnNbaV07CisJCXVuc2lnbmVkIGludCBsZW4gPSBidWYtPnVidWZfZW5kIC0gYnVmLT51
YnVmOwogCi0JCXNlcV9wcmludGYobSwgIiU1dTogMHglbGx4LyV1XG4iLCBpLCBidWYtPnVi
dWYsCi0JCQkJCQkodW5zaWduZWQgaW50KSBidWYtPmxlbik7CisJCXNlcV9wcmludGYobSwg
IiU1dTogMHglbGx4LyV1XG4iLCBpLCBidWYtPnVidWYsIGxlbik7CiAJfQogCWlmIChoYXNf
bG9jayAmJiAheGFfZW1wdHkoJmN0eC0+cGVyc29uYWxpdGllcykpIHsKIAkJdW5zaWduZWQg
bG9uZyBpbmRleDsKLQkJY29uc3Qgc3RydWN0IGlvX2lkZW50aXR5ICppb2Q7CisJCWNvbnN0
IHN0cnVjdCBjcmVkICpjcmVkOwogCiAJCXNlcV9wcmludGYobSwgIlBlcnNvbmFsaXRpZXM6
XG4iKTsKLQkJeGFfZm9yX2VhY2goJmN0eC0+cGVyc29uYWxpdGllcywgaW5kZXgsIGlvZCkK
LQkJCWlvX3VyaW5nX3Nob3dfY3JlZChtLCBpbmRleCwgaW9kKTsKKwkJeGFfZm9yX2VhY2go
JmN0eC0+cGVyc29uYWxpdGllcywgaW5kZXgsIGNyZWQpCisJCQlpb191cmluZ19zaG93X2Ny
ZWQobSwgaW5kZXgsIGNyZWQpOwogCX0KIAlzZXFfcHJpbnRmKG0sICJQb2xsTGlzdDpcbiIp
OwotCXNwaW5fbG9ja19pcnEoJmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlzcGluX2xvY2so
JmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKIAlmb3IgKGkgPSAwOyBpIDwgKDFVIDw8IGN0eC0+
Y2FuY2VsX2hhc2hfYml0cyk7IGkrKykgewogCQlzdHJ1Y3QgaGxpc3RfaGVhZCAqbGlzdCA9
ICZjdHgtPmNhbmNlbF9oYXNoW2ldOwogCQlzdHJ1Y3QgaW9fa2lvY2IgKnJlcTsKQEAgLTky
NjksNyArMTAwMzMsNyBAQCBzdGF0aWMgdm9pZCBfX2lvX3VyaW5nX3Nob3dfZmRpbmZvKHN0
cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiAJCQlzZXFfcHJp
bnRmKG0sICIgIG9wPSVkLCB0YXNrX3dvcmtzPSVkXG4iLCByZXEtPm9wY29kZSwKIAkJCQkJ
cmVxLT50YXNrLT50YXNrX3dvcmtzICE9IE5VTEwpOwogCX0KLQlzcGluX3VubG9ja19pcnEo
JmN0eC0+Y29tcGxldGlvbl9sb2NrKTsKKwlzcGluX3VubG9jaygmY3R4LT5jb21wbGV0aW9u
X2xvY2spOwogCWlmIChoYXNfbG9jaykKIAkJbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xv
Y2spOwogfQpAQCAtOTI4NywxNCArMTAwNTEsMTIgQEAgc3RhdGljIHZvaWQgaW9fdXJpbmdf
c2hvd19mZGluZm8oc3RydWN0IHNlcV9maWxlICptLCBzdHJ1Y3QgZmlsZSAqZikKIAogc3Rh
dGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgaW9fdXJpbmdfZm9wcyA9IHsKIAku
cmVsZWFzZQk9IGlvX3VyaW5nX3JlbGVhc2UsCi0JLmZsdXNoCQk9IGlvX3VyaW5nX2ZsdXNo
LAogCS5tbWFwCQk9IGlvX3VyaW5nX21tYXAsCiAjaWZuZGVmIENPTkZJR19NTVUKIAkuZ2V0
X3VubWFwcGVkX2FyZWEgPSBpb191cmluZ19ub21tdV9nZXRfdW5tYXBwZWRfYXJlYSwKIAku
bW1hcF9jYXBhYmlsaXRpZXMgPSBpb191cmluZ19ub21tdV9tbWFwX2NhcGFiaWxpdGllcywK
ICNlbmRpZgogCS5wb2xsCQk9IGlvX3VyaW5nX3BvbGwsCi0JLmZhc3luYwkJPSBpb191cmlu
Z19mYXN5bmMsCiAjaWZkZWYgQ09ORklHX1BST0NfRlMKIAkuc2hvd19mZGluZm8JPSBpb191
cmluZ19zaG93X2ZkaW5mbywKICNlbmRpZgpAQCAtOTMyNCw4ICsxMDA4Niw2IEBAIHN0YXRp
YyBpbnQgaW9fYWxsb2NhdGVfc2NxX3VyaW5ncyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwK
IAlyaW5ncy0+Y3FfcmluZ19tYXNrID0gcC0+Y3FfZW50cmllcyAtIDE7CiAJcmluZ3MtPnNx
X3JpbmdfZW50cmllcyA9IHAtPnNxX2VudHJpZXM7CiAJcmluZ3MtPmNxX3JpbmdfZW50cmll
cyA9IHAtPmNxX2VudHJpZXM7Ci0JY3R4LT5zcV9tYXNrID0gcmluZ3MtPnNxX3JpbmdfbWFz
azsKLQljdHgtPmNxX21hc2sgPSByaW5ncy0+Y3FfcmluZ19tYXNrOwogCiAJc2l6ZSA9IGFy
cmF5X3NpemUoc2l6ZW9mKHN0cnVjdCBpb191cmluZ19zcWUpLCBwLT5zcV9lbnRyaWVzKTsK
IAlpZiAoc2l6ZSA9PSBTSVpFX01BWCkgewpAQCAtOTM1Miw3ICsxMDExMiw3IEBAIHN0YXRp
YyBpbnQgaW9fdXJpbmdfaW5zdGFsbF9mZChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3Ry
dWN0IGZpbGUgKmZpbGUpCiAJaWYgKGZkIDwgMCkKIAkJcmV0dXJuIGZkOwogCi0JcmV0ID0g
aW9fdXJpbmdfYWRkX3Rhc2tfZmlsZShjdHgsIGZpbGUpOworCXJldCA9IGlvX3VyaW5nX2Fk
ZF90Y3R4X25vZGUoY3R4KTsKIAlpZiAocmV0KSB7CiAJCXB1dF91bnVzZWRfZmQoZmQpOwog
CQlyZXR1cm4gcmV0OwpAQCAtOTM5NSwxMCArMTAxNTUsOCBAQCBzdGF0aWMgc3RydWN0IGZp
bGUgKmlvX3VyaW5nX2dldF9maWxlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogc3RhdGlj
IGludCBpb191cmluZ19jcmVhdGUodW5zaWduZWQgZW50cmllcywgc3RydWN0IGlvX3VyaW5n
X3BhcmFtcyAqcCwKIAkJCSAgIHN0cnVjdCBpb191cmluZ19wYXJhbXMgX191c2VyICpwYXJh
bXMpCiB7Ci0Jc3RydWN0IHVzZXJfc3RydWN0ICp1c2VyID0gTlVMTDsKIAlzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eDsKIAlzdHJ1Y3QgZmlsZSAqZmlsZTsKLQlib29sIGxpbWl0X21lbTsK
IAlpbnQgcmV0OwogCiAJaWYgKCFlbnRyaWVzKQpAQCAtOTQzOCwzNCArMTAxOTYsMTIgQEAg
c3RhdGljIGludCBpb191cmluZ19jcmVhdGUodW5zaWduZWQgZW50cmllcywgc3RydWN0IGlv
X3VyaW5nX3BhcmFtcyAqcCwKIAkJcC0+Y3FfZW50cmllcyA9IDIgKiBwLT5zcV9lbnRyaWVz
OwogCX0KIAotCXVzZXIgPSBnZXRfdWlkKGN1cnJlbnRfdXNlcigpKTsKLQlsaW1pdF9tZW0g
PSAhY2FwYWJsZShDQVBfSVBDX0xPQ0spOwotCi0JaWYgKGxpbWl0X21lbSkgewotCQlyZXQg
PSBfX2lvX2FjY291bnRfbWVtKHVzZXIsCi0JCQkJcmluZ19wYWdlcyhwLT5zcV9lbnRyaWVz
LCBwLT5jcV9lbnRyaWVzKSk7Ci0JCWlmIChyZXQpIHsKLQkJCWZyZWVfdWlkKHVzZXIpOwot
CQkJcmV0dXJuIHJldDsKLQkJfQotCX0KLQogCWN0eCA9IGlvX3JpbmdfY3R4X2FsbG9jKHAp
OwotCWlmICghY3R4KSB7Ci0JCWlmIChsaW1pdF9tZW0pCi0JCQlfX2lvX3VuYWNjb3VudF9t
ZW0odXNlciwgcmluZ19wYWdlcyhwLT5zcV9lbnRyaWVzLAotCQkJCQkJCQlwLT5jcV9lbnRy
aWVzKSk7Ci0JCWZyZWVfdWlkKHVzZXIpOworCWlmICghY3R4KQogCQlyZXR1cm4gLUVOT01F
TTsKLQl9CiAJY3R4LT5jb21wYXQgPSBpbl9jb21wYXRfc3lzY2FsbCgpOwotCWN0eC0+dXNl
ciA9IHVzZXI7Ci0JY3R4LT5jcmVkcyA9IGdldF9jdXJyZW50X2NyZWQoKTsKLSNpZmRlZiBD
T05GSUdfQVVESVQKLQljdHgtPmxvZ2ludWlkID0gY3VycmVudC0+bG9naW51aWQ7Ci0JY3R4
LT5zZXNzaW9uaWQgPSBjdXJyZW50LT5zZXNzaW9uaWQ7Ci0jZW5kaWYKLQljdHgtPnNxb190
YXNrID0gZ2V0X3Rhc2tfc3RydWN0KGN1cnJlbnQpOworCWlmICghY2FwYWJsZShDQVBfSVBD
X0xPQ0spKQorCQljdHgtPnVzZXIgPSBnZXRfdWlkKGN1cnJlbnRfdXNlcigpKTsKIAogCS8q
CiAJICogVGhpcyBpcyBqdXN0IGdyYWJiZWQgZm9yIGFjY291bnRpbmcgcHVycG9zZXMuIFdo
ZW4gYSBwcm9jZXNzIGV4aXRzLApAQCAtOTQ3NiwzNSArMTAyMTIsNiBAQCBzdGF0aWMgaW50
IGlvX3VyaW5nX2NyZWF0ZSh1bnNpZ25lZCBlbnRyaWVzLCBzdHJ1Y3QgaW9fdXJpbmdfcGFy
YW1zICpwLAogCW1tZ3JhYihjdXJyZW50LT5tbSk7CiAJY3R4LT5tbV9hY2NvdW50ID0gY3Vy
cmVudC0+bW07CiAKLSNpZmRlZiBDT05GSUdfQkxLX0NHUk9VUAotCS8qCi0JICogVGhlIHNx
IHRocmVhZCB3aWxsIGJlbG9uZyB0byB0aGUgb3JpZ2luYWwgY2dyb3VwIGl0IHdhcyBpbml0
ZWQgaW4uCi0JICogSWYgdGhlIGNncm91cCBnb2VzIG9mZmxpbmUgKGUuZy4gZGlzYWJsaW5n
IHRoZSBpbyBjb250cm9sbGVyKSwgdGhlbgotCSAqIGlzc3VlZCBiaW9zIHdpbGwgYmUgYXNz
b2NpYXRlZCB3aXRoIHRoZSBjbG9zZXN0IGNncm91cCBsYXRlciBpbiB0aGUKLQkgKiBibG9j
ayBsYXllci4KLQkgKi8KLQlyY3VfcmVhZF9sb2NrKCk7Ci0JY3R4LT5zcW9fYmxrY2dfY3Nz
ID0gYmxrY2dfY3NzKCk7Ci0JcmV0ID0gY3NzX3RyeWdldF9vbmxpbmUoY3R4LT5zcW9fYmxr
Y2dfY3NzKTsKLQlyY3VfcmVhZF91bmxvY2soKTsKLQlpZiAoIXJldCkgewotCQkvKiBkb24n
dCBpbml0IGFnYWluc3QgYSBkeWluZyBjZ3JvdXAsIGhhdmUgdGhlIHVzZXIgdHJ5IGFnYWlu
ICovCi0JCWN0eC0+c3FvX2Jsa2NnX2NzcyA9IE5VTEw7Ci0JCXJldCA9IC1FTk9ERVY7Ci0J
CWdvdG8gZXJyOwotCX0KLSNlbmRpZgotCi0JLyoKLQkgKiBBY2NvdW50IG1lbW9yeSBfYmVm
b3JlXyBpbnN0YWxsaW5nIHRoZSBmaWxlIGRlc2NyaXB0b3IuIE9uY2UKLQkgKiB0aGUgZGVz
Y3JpcHRvciBpcyBpbnN0YWxsZWQsIGl0IGNhbiBnZXQgY2xvc2VkIGF0IGFueSB0aW1lLiBB
bHNvCi0JICogZG8gdGhpcyBiZWZvcmUgaGl0dGluZyB0aGUgZ2VuZXJhbCBlcnJvciBwYXRo
LCBhcyByaW5nIGZyZWVpbmcKLQkgKiB3aWxsIHVuLWFjY291bnQgYXMgd2VsbC4KLQkgKi8K
LQlpb19hY2NvdW50X21lbShjdHgsIHJpbmdfcGFnZXMocC0+c3FfZW50cmllcywgcC0+Y3Ff
ZW50cmllcyksCi0JCSAgICAgICBBQ0NUX0xPQ0tFRCk7Ci0JY3R4LT5saW1pdF9tZW0gPSBs
aW1pdF9tZW07Ci0KIAlyZXQgPSBpb19hbGxvY2F0ZV9zY3FfdXJpbmdzKGN0eCwgcCk7CiAJ
aWYgKHJldCkKIAkJZ290byBlcnI7CkBAIC05NTEyLDkgKzEwMjE5LDExIEBAIHN0YXRpYyBp
bnQgaW9fdXJpbmdfY3JlYXRlKHVuc2lnbmVkIGVudHJpZXMsIHN0cnVjdCBpb191cmluZ19w
YXJhbXMgKnAsCiAJcmV0ID0gaW9fc3Ffb2ZmbG9hZF9jcmVhdGUoY3R4LCBwKTsKIAlpZiAo
cmV0KQogCQlnb3RvIGVycjsKLQotCWlmICghKHAtPmZsYWdzICYgSU9SSU5HX1NFVFVQX1Jf
RElTQUJMRUQpKQotCQlpb19zcV9vZmZsb2FkX3N0YXJ0KGN0eCk7CisJLyogYWx3YXlzIHNl
dCBhIHJzcmMgbm9kZSAqLworCXJldCA9IGlvX3JzcmNfbm9kZV9zd2l0Y2hfc3RhcnQoY3R4
KTsKKwlpZiAocmV0KQorCQlnb3RvIGVycjsKKwlpb19yc3JjX25vZGVfc3dpdGNoKGN0eCwg
TlVMTCk7CiAKIAltZW1zZXQoJnAtPnNxX29mZiwgMCwgc2l6ZW9mKHAtPnNxX29mZikpOwog
CXAtPnNxX29mZi5oZWFkID0gb2Zmc2V0b2Yoc3RydWN0IGlvX3JpbmdzLCBzcS5oZWFkKTsK
QEAgLTk1MzcsNyArMTAyNDYsOSBAQCBzdGF0aWMgaW50IGlvX3VyaW5nX2NyZWF0ZSh1bnNp
Z25lZCBlbnRyaWVzLCBzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwLAogCXAtPmZlYXR1cmVz
ID0gSU9SSU5HX0ZFQVRfU0lOR0xFX01NQVAgfCBJT1JJTkdfRkVBVF9OT0RST1AgfAogCQkJ
SU9SSU5HX0ZFQVRfU1VCTUlUX1NUQUJMRSB8IElPUklOR19GRUFUX1JXX0NVUl9QT1MgfAog
CQkJSU9SSU5HX0ZFQVRfQ1VSX1BFUlNPTkFMSVRZIHwgSU9SSU5HX0ZFQVRfRkFTVF9QT0xM
IHwKLQkJCUlPUklOR19GRUFUX1BPTExfMzJCSVRTOworCQkJSU9SSU5HX0ZFQVRfUE9MTF8z
MkJJVFMgfCBJT1JJTkdfRkVBVF9TUVBPTExfTk9ORklYRUQgfAorCQkJSU9SSU5HX0ZFQVRf
RVhUX0FSRyB8IElPUklOR19GRUFUX05BVElWRV9XT1JLRVJTIHwKKwkJCUlPUklOR19GRUFU
X1JTUkNfVEFHUzsKIAogCWlmIChjb3B5X3RvX3VzZXIocGFyYW1zLCBwLCBzaXplb2YoKnAp
KSkgewogCQlyZXQgPSAtRUZBVUxUOwpAQCAtOTU1Niw3ICsxMDI2Nyw2IEBAIHN0YXRpYyBp
bnQgaW9fdXJpbmdfY3JlYXRlKHVuc2lnbmVkIGVudHJpZXMsIHN0cnVjdCBpb191cmluZ19w
YXJhbXMgKnAsCiAJICovCiAJcmV0ID0gaW9fdXJpbmdfaW5zdGFsbF9mZChjdHgsIGZpbGUp
OwogCWlmIChyZXQgPCAwKSB7Ci0JCWlvX2Rpc2FibGVfc3FvX3N1Ym1pdChjdHgpOwogCQkv
KiBmcHV0IHdpbGwgY2xlYW4gaXQgdXAgKi8KIAkJZnB1dChmaWxlKTsKIAkJcmV0dXJuIHJl
dDsKQEAgLTk1NjUsNyArMTAyNzUsNiBAQCBzdGF0aWMgaW50IGlvX3VyaW5nX2NyZWF0ZSh1
bnNpZ25lZCBlbnRyaWVzLCBzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwLAogCXRyYWNlX2lv
X3VyaW5nX2NyZWF0ZShyZXQsIGN0eCwgcC0+c3FfZW50cmllcywgcC0+Y3FfZW50cmllcywg
cC0+ZmxhZ3MpOwogCXJldHVybiByZXQ7CiBlcnI6Ci0JaW9fZGlzYWJsZV9zcW9fc3VibWl0
KGN0eCk7CiAJaW9fcmluZ19jdHhfd2FpdF9hbmRfa2lsbChjdHgpOwogCXJldHVybiByZXQ7
CiB9CkBAIC05NjQzLDIyICsxMDM1MiwxNiBAQCBzdGF0aWMgaW50IGlvX3Byb2JlKHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLCB1bnNpZ25lZCBucl9hcmdz
KQogCiBzdGF0aWMgaW50IGlvX3JlZ2lzdGVyX3BlcnNvbmFsaXR5KHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQogewotCXN0cnVjdCBpb19pZGVudGl0eSAqaW9kOworCWNvbnN0IHN0cnVj
dCBjcmVkICpjcmVkczsKIAl1MzIgaWQ7CiAJaW50IHJldDsKIAotCWlvZCA9IGttYWxsb2Mo
c2l6ZW9mKCppb2QpLCBHRlBfS0VSTkVMKTsKLQlpZiAodW5saWtlbHkoIWlvZCkpCi0JCXJl
dHVybiAtRU5PTUVNOwotCi0JaW9faW5pdF9pZGVudGl0eShpb2QpOwotCWlvZC0+Y3JlZHMg
PSBnZXRfY3VycmVudF9jcmVkKCk7CisJY3JlZHMgPSBnZXRfY3VycmVudF9jcmVkKCk7CiAK
LQlyZXQgPSB4YV9hbGxvY19jeWNsaWMoJmN0eC0+cGVyc29uYWxpdGllcywgJmlkLCAodm9p
ZCAqKWlvZCwKKwlyZXQgPSB4YV9hbGxvY19jeWNsaWMoJmN0eC0+cGVyc29uYWxpdGllcywg
JmlkLCAodm9pZCAqKWNyZWRzLAogCQkJWEFfTElNSVQoMCwgVVNIUlRfTUFYKSwgJmN0eC0+
cGVyc19uZXh0LCBHRlBfS0VSTkVMKTsKIAlpZiAocmV0IDwgMCkgewotCQlwdXRfY3JlZChp
b2QtPmNyZWRzKTsKLQkJa2ZyZWUoaW9kKTsKKwkJcHV0X2NyZWQoY3JlZHMpOwogCQlyZXR1
cm4gcmV0OwogCX0KIAlyZXR1cm4gaWQ7CkBAIC05NzQyLDI0ICsxMDQ0NSwyNzMgQEAgc3Rh
dGljIGludCBpb19yZWdpc3Rlcl9lbmFibGVfcmluZ3Moc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHgpCiAJaWYgKGN0eC0+cmVzdHJpY3Rpb25zLnJlZ2lzdGVyZWQpCiAJCWN0eC0+cmVzdHJp
Y3RlZCA9IDE7CiAKLQlpb19zcV9vZmZsb2FkX3N0YXJ0KGN0eCk7CisJY3R4LT5mbGFncyAm
PSB+SU9SSU5HX1NFVFVQX1JfRElTQUJMRUQ7CisJaWYgKGN0eC0+c3FfZGF0YSAmJiB3cV9o
YXNfc2xlZXBlcigmY3R4LT5zcV9kYXRhLT53YWl0KSkKKwkJd2FrZV91cCgmY3R4LT5zcV9k
YXRhLT53YWl0KTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBfX2lvX3JlZ2lzdGVy
X3JzcmNfdXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB1bnNpZ25lZCB0eXBlLAor
CQkJCSAgICAgc3RydWN0IGlvX3VyaW5nX3JzcmNfdXBkYXRlMiAqdXAsCisJCQkJICAgICB1
bnNpZ25lZCBucl9hcmdzKQoreworCV9fdTMyIHRtcDsKKwlpbnQgZXJyOworCisJaWYgKGNo
ZWNrX2FkZF9vdmVyZmxvdyh1cC0+b2Zmc2V0LCBucl9hcmdzLCAmdG1wKSkKKwkJcmV0dXJu
IC1FT1ZFUkZMT1c7CisJZXJyID0gaW9fcnNyY19ub2RlX3N3aXRjaF9zdGFydChjdHgpOwor
CWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlzd2l0Y2ggKHR5cGUpIHsKKwljYXNlIElP
UklOR19SU1JDX0ZJTEU6CisJCXJldHVybiBfX2lvX3NxZV9maWxlc191cGRhdGUoY3R4LCB1
cCwgbnJfYXJncyk7CisJY2FzZSBJT1JJTkdfUlNSQ19CVUZGRVI6CisJCXJldHVybiBfX2lv
X3NxZV9idWZmZXJzX3VwZGF0ZShjdHgsIHVwLCBucl9hcmdzKTsKKwl9CisJcmV0dXJuIC1F
SU5WQUw7Cit9CisKK3N0YXRpYyBpbnQgaW9fcmVnaXN0ZXJfZmlsZXNfdXBkYXRlKHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLAorCQkJCSAgICB1bnNpZ25l
ZCBucl9hcmdzKQoreworCXN0cnVjdCBpb191cmluZ19yc3JjX3VwZGF0ZTIgdXA7CisKKwlp
ZiAoIW5yX2FyZ3MpCisJCXJldHVybiAtRUlOVkFMOworCW1lbXNldCgmdXAsIDAsIHNpemVv
Zih1cCkpOworCWlmIChjb3B5X2Zyb21fdXNlcigmdXAsIGFyZywgc2l6ZW9mKHN0cnVjdCBp
b191cmluZ19yc3JjX3VwZGF0ZSkpKQorCQlyZXR1cm4gLUVGQVVMVDsKKwlpZiAodXAucmVz
diB8fCB1cC5yZXN2MikKKwkJcmV0dXJuIC1FSU5WQUw7CisJcmV0dXJuIF9faW9fcmVnaXN0
ZXJfcnNyY191cGRhdGUoY3R4LCBJT1JJTkdfUlNSQ19GSUxFLCAmdXAsIG5yX2FyZ3MpOwor
fQorCitzdGF0aWMgaW50IGlvX3JlZ2lzdGVyX3JzcmNfdXBkYXRlKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLAorCQkJCSAgIHVuc2lnbmVkIHNpemUsIHVu
c2lnbmVkIHR5cGUpCit7CisJc3RydWN0IGlvX3VyaW5nX3JzcmNfdXBkYXRlMiB1cDsKKwor
CWlmIChzaXplICE9IHNpemVvZih1cCkpCisJCXJldHVybiAtRUlOVkFMOworCWlmIChjb3B5
X2Zyb21fdXNlcigmdXAsIGFyZywgc2l6ZW9mKHVwKSkpCisJCXJldHVybiAtRUZBVUxUOwor
CWlmICghdXAubnIgfHwgdXAucmVzdiB8fCB1cC5yZXN2MikKKwkJcmV0dXJuIC1FSU5WQUw7
CisJcmV0dXJuIF9faW9fcmVnaXN0ZXJfcnNyY191cGRhdGUoY3R4LCB0eXBlLCAmdXAsIHVw
Lm5yKTsKK30KKworc3RhdGljIGludCBpb19yZWdpc3Rlcl9yc3JjKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLAorCQkJICAgIHVuc2lnbmVkIGludCBzaXpl
LCB1bnNpZ25lZCBpbnQgdHlwZSkKK3sKKwlzdHJ1Y3QgaW9fdXJpbmdfcnNyY19yZWdpc3Rl
ciBycjsKKworCS8qIGtlZXAgaXQgZXh0ZW5kaWJsZSAqLworCWlmIChzaXplICE9IHNpemVv
ZihycikpCisJCXJldHVybiAtRUlOVkFMOworCisJbWVtc2V0KCZyciwgMCwgc2l6ZW9mKHJy
KSk7CisJaWYgKGNvcHlfZnJvbV91c2VyKCZyciwgYXJnLCBzaXplKSkKKwkJcmV0dXJuIC1F
RkFVTFQ7CisJaWYgKCFyci5uciB8fCByci5yZXN2IHx8IHJyLnJlc3YyKQorCQlyZXR1cm4g
LUVJTlZBTDsKKworCXN3aXRjaCAodHlwZSkgeworCWNhc2UgSU9SSU5HX1JTUkNfRklMRToK
KwkJcmV0dXJuIGlvX3NxZV9maWxlc19yZWdpc3RlcihjdHgsIHU2NF90b191c2VyX3B0cihy
ci5kYXRhKSwKKwkJCQkJICAgICByci5uciwgdTY0X3RvX3VzZXJfcHRyKHJyLnRhZ3MpKTsK
KwljYXNlIElPUklOR19SU1JDX0JVRkZFUjoKKwkJcmV0dXJuIGlvX3NxZV9idWZmZXJzX3Jl
Z2lzdGVyKGN0eCwgdTY0X3RvX3VzZXJfcHRyKHJyLmRhdGEpLAorCQkJCQkgICAgICAgcnIu
bnIsIHU2NF90b191c2VyX3B0cihyci50YWdzKSk7CisJfQorCXJldHVybiAtRUlOVkFMOwor
fQorCitzdGF0aWMgaW50IGlvX3JlZ2lzdGVyX2lvd3FfYWZmKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLAorCQkJCXVuc2lnbmVkIGxlbikKK3sKKwlzdHJ1
Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGN1cnJlbnQtPmlvX3VyaW5nOworCWNwdW1hc2tf
dmFyX3QgbmV3X21hc2s7CisJaW50IHJldDsKKworCWlmICghdGN0eCB8fCAhdGN0eC0+aW9f
d3EpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKCFhbGxvY19jcHVtYXNrX3ZhcigmbmV3
X21hc2ssIEdGUF9LRVJORUwpKQorCQlyZXR1cm4gLUVOT01FTTsKKworCWNwdW1hc2tfY2xl
YXIobmV3X21hc2spOworCWlmIChsZW4gPiBjcHVtYXNrX3NpemUoKSkKKwkJbGVuID0gY3B1
bWFza19zaXplKCk7CisKKyNpZmRlZiBDT05GSUdfQ09NUEFUCisJaWYgKGluX2NvbXBhdF9z
eXNjYWxsKCkpIHsKKwkJcmV0ID0gY29tcGF0X2dldF9iaXRtYXAoY3B1bWFza19iaXRzKG5l
d19tYXNrKSwKKwkJCQkJKGNvbnN0IGNvbXBhdF91bG9uZ190IF9fdXNlciAqKWFyZywKKwkJ
CQkJbGVuICogOCAvKiBDSEFSX0JJVCAqLyk7CisJfSBlbHNlIHsKKwkJcmV0ID0gY29weV9m
cm9tX3VzZXIobmV3X21hc2ssIGFyZywgbGVuKTsKKwl9CisjZWxzZQorCXJldCA9IGNvcHlf
ZnJvbV91c2VyKG5ld19tYXNrLCBhcmcsIGxlbik7CisjZW5kaWYKKworCWlmIChyZXQpIHsK
KwkJZnJlZV9jcHVtYXNrX3ZhcihuZXdfbWFzayk7CisJCXJldHVybiAtRUZBVUxUOworCX0K
KworCXJldCA9IGlvX3dxX2NwdV9hZmZpbml0eSh0Y3R4LT5pb193cSwgbmV3X21hc2spOwor
CWZyZWVfY3B1bWFza192YXIobmV3X21hc2spOworCXJldHVybiByZXQ7Cit9CisKK3N0YXRp
YyBpbnQgaW9fdW5yZWdpc3Rlcl9pb3dxX2FmZihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkK
K3sKKwlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAqdGN0eCA9IGN1cnJlbnQtPmlvX3VyaW5nOwor
CisJaWYgKCF0Y3R4IHx8ICF0Y3R4LT5pb193cSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwly
ZXR1cm4gaW9fd3FfY3B1X2FmZmluaXR5KHRjdHgtPmlvX3dxLCBOVUxMKTsKK30KKworc3Rh
dGljIGludCBpb19yZWdpc3Rlcl9pb3dxX21heF93b3JrZXJzKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LAorCQkJCQl2b2lkIF9fdXNlciAqYXJnKQorCV9fbXVzdF9ob2xkKCZjdHgtPnVy
aW5nX2xvY2spCit7CisJc3RydWN0IGlvX3RjdHhfbm9kZSAqbm9kZTsKKwlzdHJ1Y3QgaW9f
dXJpbmdfdGFzayAqdGN0eCA9IE5VTEw7CisJc3RydWN0IGlvX3NxX2RhdGEgKnNxZCA9IE5V
TEw7CisJX191MzIgbmV3X2NvdW50WzJdOworCWludCBpLCByZXQ7CisKKwlpZiAoY29weV9m
cm9tX3VzZXIobmV3X2NvdW50LCBhcmcsIHNpemVvZihuZXdfY291bnQpKSkKKwkJcmV0dXJu
IC1FRkFVTFQ7CisJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUobmV3X2NvdW50KTsgaSsr
KQorCQlpZiAobmV3X2NvdW50W2ldID4gSU5UX01BWCkKKwkJCXJldHVybiAtRUlOVkFMOwor
CisJaWYgKGN0eC0+ZmxhZ3MgJiBJT1JJTkdfU0VUVVBfU1FQT0xMKSB7CisJCXNxZCA9IGN0
eC0+c3FfZGF0YTsKKwkJaWYgKHNxZCkgeworCQkJLyoKKwkJCSAqIE9ic2VydmUgdGhlIGNv
cnJlY3Qgc3FkLT5sb2NrIC0+IGN0eC0+dXJpbmdfbG9jaworCQkJICogb3JkZXJpbmcuIEZp
bmUgdG8gZHJvcCB1cmluZ19sb2NrIGhlcmUsIHdlIGhvbGQKKwkJCSAqIGEgcmVmIHRvIHRo
ZSBjdHguCisJCQkgKi8KKwkJCXJlZmNvdW50X2luYygmc3FkLT5yZWZzKTsKKwkJCW11dGV4
X3VubG9jaygmY3R4LT51cmluZ19sb2NrKTsKKwkJCW11dGV4X2xvY2soJnNxZC0+bG9jayk7
CisJCQltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCQkJaWYgKHNxZC0+dGhyZWFk
KQorCQkJCXRjdHggPSBzcWQtPnRocmVhZC0+aW9fdXJpbmc7CisJCX0KKwl9IGVsc2Ugewor
CQl0Y3R4ID0gY3VycmVudC0+aW9fdXJpbmc7CisJfQorCisJQlVJTERfQlVHX09OKHNpemVv
ZihuZXdfY291bnQpICE9IHNpemVvZihjdHgtPmlvd3FfbGltaXRzKSk7CisKKwlmb3IgKGkg
PSAwOyBpIDwgQVJSQVlfU0laRShuZXdfY291bnQpOyBpKyspCisJCWlmIChuZXdfY291bnRb
aV0pCisJCQljdHgtPmlvd3FfbGltaXRzW2ldID0gbmV3X2NvdW50W2ldOworCWN0eC0+aW93
cV9saW1pdHNfc2V0ID0gdHJ1ZTsKKworCXJldCA9IC1FSU5WQUw7CisJaWYgKHRjdHggJiYg
dGN0eC0+aW9fd3EpIHsKKwkJcmV0ID0gaW9fd3FfbWF4X3dvcmtlcnModGN0eC0+aW9fd3Es
IG5ld19jb3VudCk7CisJCWlmIChyZXQpCisJCQlnb3RvIGVycjsKKwl9IGVsc2UgeworCQlt
ZW1zZXQobmV3X2NvdW50LCAwLCBzaXplb2YobmV3X2NvdW50KSk7CisJfQorCisJaWYgKHNx
ZCkgeworCQltdXRleF91bmxvY2soJnNxZC0+bG9jayk7CisJCWlvX3B1dF9zcV9kYXRhKHNx
ZCk7CisJfQorCisJaWYgKGNvcHlfdG9fdXNlcihhcmcsIG5ld19jb3VudCwgc2l6ZW9mKG5l
d19jb3VudCkpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCS8qIHRoYXQncyBpdCBmb3IgU1FQ
T0xMLCBvbmx5IHRoZSBTUVBPTEwgdGFzayBjcmVhdGVzIHJlcXVlc3RzICovCisJaWYgKHNx
ZCkKKwkJcmV0dXJuIDA7CisKKwkvKiBub3cgcHJvcGFnYXRlIHRoZSByZXN0cmljdGlvbiB0
byBhbGwgcmVnaXN0ZXJlZCB1c2VycyAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkobm9kZSwg
JmN0eC0+dGN0eF9saXN0LCBjdHhfbm9kZSkgeworCQlzdHJ1Y3QgaW9fdXJpbmdfdGFzayAq
dGN0eCA9IG5vZGUtPnRhc2stPmlvX3VyaW5nOworCisJCWlmIChXQVJOX09OX09OQ0UoIXRj
dHgtPmlvX3dxKSkKKwkJCWNvbnRpbnVlOworCisJCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9T
SVpFKG5ld19jb3VudCk7IGkrKykKKwkJCW5ld19jb3VudFtpXSA9IGN0eC0+aW93cV9saW1p
dHNbaV07CisJCS8qIGlnbm9yZSBlcnJvcnMsIGl0IGFsd2F5cyByZXR1cm5zIHplcm8gYW55
d2F5ICovCisJCSh2b2lkKWlvX3dxX21heF93b3JrZXJzKHRjdHgtPmlvX3dxLCBuZXdfY291
bnQpOworCX0KIAlyZXR1cm4gMDsKK2VycjoKKwlpZiAoc3FkKSB7CisJCW11dGV4X3VubG9j
aygmc3FkLT5sb2NrKTsKKwkJaW9fcHV0X3NxX2RhdGEoc3FkKTsKKwl9CisJcmV0dXJuIHJl
dDsKIH0KIAogc3RhdGljIGJvb2wgaW9fcmVnaXN0ZXJfb3BfbXVzdF9xdWllc2NlKGludCBv
cCkKIHsKIAlzd2l0Y2ggKG9wKSB7CisJY2FzZSBJT1JJTkdfUkVHSVNURVJfQlVGRkVSUzoK
KwljYXNlIElPUklOR19VTlJFR0lTVEVSX0JVRkZFUlM6CisJY2FzZSBJT1JJTkdfUkVHSVNU
RVJfRklMRVM6CiAJY2FzZSBJT1JJTkdfVU5SRUdJU1RFUl9GSUxFUzoKIAljYXNlIElPUklO
R19SRUdJU1RFUl9GSUxFU19VUERBVEU6CiAJY2FzZSBJT1JJTkdfUkVHSVNURVJfUFJPQkU6
CiAJY2FzZSBJT1JJTkdfUkVHSVNURVJfUEVSU09OQUxJVFk6CiAJY2FzZSBJT1JJTkdfVU5S
RUdJU1RFUl9QRVJTT05BTElUWToKKwljYXNlIElPUklOR19SRUdJU1RFUl9GSUxFUzI6CisJ
Y2FzZSBJT1JJTkdfUkVHSVNURVJfRklMRVNfVVBEQVRFMjoKKwljYXNlIElPUklOR19SRUdJ
U1RFUl9CVUZGRVJTMjoKKwljYXNlIElPUklOR19SRUdJU1RFUl9CVUZGRVJTX1VQREFURToK
KwljYXNlIElPUklOR19SRUdJU1RFUl9JT1dRX0FGRjoKKwljYXNlIElPUklOR19VTlJFR0lT
VEVSX0lPV1FfQUZGOgorCWNhc2UgSU9SSU5HX1JFR0lTVEVSX0lPV1FfTUFYX1dPUktFUlM6
CiAJCXJldHVybiBmYWxzZTsKIAlkZWZhdWx0OgogCQlyZXR1cm4gdHJ1ZTsKIAl9CiB9CiAK
K3N0YXRpYyBpbnQgaW9fY3R4X3F1aWVzY2Uoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCit7
CisJbG9uZyByZXQ7CisKKwlwZXJjcHVfcmVmX2tpbGwoJmN0eC0+cmVmcyk7CisKKwkvKgor
CSAqIERyb3AgdXJpbmcgbXV0ZXggYmVmb3JlIHdhaXRpbmcgZm9yIHJlZmVyZW5jZXMgdG8g
ZXhpdC4gSWYgYW5vdGhlcgorCSAqIHRocmVhZCBpcyBjdXJyZW50bHkgaW5zaWRlIGlvX3Vy
aW5nX2VudGVyKCkgaXQgbWlnaHQgbmVlZCB0byBncmFiIHRoZQorCSAqIHVyaW5nX2xvY2sg
dG8gbWFrZSBwcm9ncmVzcy4gSWYgd2UgaG9sZCBpdCBoZXJlIGFjcm9zcyB0aGUgZHJhaW4K
KwkgKiB3YWl0LCB0aGVuIHdlIGNhbiBkZWFkbG9jay4gSXQncyBzYWZlIHRvIGRyb3AgdGhl
IG11dGV4IGhlcmUsIHNpbmNlCisJICogbm8gbmV3IHJlZmVyZW5jZXMgd2lsbCBjb21lIGlu
IGFmdGVyIHdlJ3ZlIGtpbGxlZCB0aGUgcGVyY3B1IHJlZi4KKwkgKi8KKwltdXRleF91bmxv
Y2soJmN0eC0+dXJpbmdfbG9jayk7CisJZG8geworCQlyZXQgPSB3YWl0X2Zvcl9jb21wbGV0
aW9uX2ludGVycnVwdGlibGUoJmN0eC0+cmVmX2NvbXApOworCQlpZiAoIXJldCkKKwkJCWJy
ZWFrOworCQlyZXQgPSBpb19ydW5fdGFza193b3JrX3NpZygpOworCX0gd2hpbGUgKHJldCA+
PSAwKTsKKwltdXRleF9sb2NrKCZjdHgtPnVyaW5nX2xvY2spOworCisJaWYgKHJldCkKKwkJ
aW9fcmVmc19yZXN1cnJlY3QoJmN0eC0+cmVmcywgJmN0eC0+cmVmX2NvbXApOworCXJldHVy
biByZXQ7Cit9CisKIHN0YXRpYyBpbnQgX19pb191cmluZ19yZWdpc3RlcihzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCwgdW5zaWduZWQgb3Bjb2RlLAogCQkJICAgICAgIHZvaWQgX191c2Vy
ICphcmcsIHVuc2lnbmVkIG5yX2FyZ3MpCiAJX19yZWxlYXNlcyhjdHgtPnVyaW5nX2xvY2sp
CkBAIC05Nzc1LDU4ICsxMDcyNywzMiBAQCBzdGF0aWMgaW50IF9faW9fdXJpbmdfcmVnaXN0
ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHVuc2lnbmVkIG9wY29kZSwKIAlpZiAocGVy
Y3B1X3JlZl9pc19keWluZygmY3R4LT5yZWZzKSkKIAkJcmV0dXJuIC1FTlhJTzsKIAotCWlm
IChpb19yZWdpc3Rlcl9vcF9tdXN0X3F1aWVzY2Uob3Bjb2RlKSkgewotCQlwZXJjcHVfcmVm
X2tpbGwoJmN0eC0+cmVmcyk7Ci0KLQkJLyoKLQkJICogRHJvcCB1cmluZyBtdXRleCBiZWZv
cmUgd2FpdGluZyBmb3IgcmVmZXJlbmNlcyB0byBleGl0LiBJZgotCQkgKiBhbm90aGVyIHRo
cmVhZCBpcyBjdXJyZW50bHkgaW5zaWRlIGlvX3VyaW5nX2VudGVyKCkgaXQgbWlnaHQKLQkJ
ICogbmVlZCB0byBncmFiIHRoZSB1cmluZ19sb2NrIHRvIG1ha2UgcHJvZ3Jlc3MuIElmIHdl
IGhvbGQgaXQKLQkJICogaGVyZSBhY3Jvc3MgdGhlIGRyYWluIHdhaXQsIHRoZW4gd2UgY2Fu
IGRlYWRsb2NrLiBJdCdzIHNhZmUKLQkJICogdG8gZHJvcCB0aGUgbXV0ZXggaGVyZSwgc2lu
Y2Ugbm8gbmV3IHJlZmVyZW5jZXMgd2lsbCBjb21lIGluCi0JCSAqIGFmdGVyIHdlJ3ZlIGtp
bGxlZCB0aGUgcGVyY3B1IHJlZi4KLQkJICovCi0JCW11dGV4X3VubG9jaygmY3R4LT51cmlu
Z19sb2NrKTsKLQkJZG8gewotCQkJcmV0ID0gd2FpdF9mb3JfY29tcGxldGlvbl9pbnRlcnJ1
cHRpYmxlKCZjdHgtPnJlZl9jb21wKTsKLQkJCWlmICghcmV0KQotCQkJCWJyZWFrOwotCQkJ
cmV0ID0gaW9fcnVuX3Rhc2tfd29ya19zaWcoKTsKLQkJCWlmIChyZXQgPCAwKQotCQkJCWJy
ZWFrOwotCQl9IHdoaWxlICgxKTsKLQkJbXV0ZXhfbG9jaygmY3R4LT51cmluZ19sb2NrKTsK
LQotCQlpZiAocmV0KSB7Ci0JCQlpb19yZWZzX3Jlc3VycmVjdCgmY3R4LT5yZWZzLCAmY3R4
LT5yZWZfY29tcCk7Ci0JCQlyZXR1cm4gcmV0OwotCQl9Ci0JfQotCiAJaWYgKGN0eC0+cmVz
dHJpY3RlZCkgewotCQlpZiAob3Bjb2RlID49IElPUklOR19SRUdJU1RFUl9MQVNUKSB7Ci0J
CQlyZXQgPSAtRUlOVkFMOwotCQkJZ290byBvdXQ7Ci0JCX0KKwkJaWYgKG9wY29kZSA+PSBJ
T1JJTkdfUkVHSVNURVJfTEFTVCkKKwkJCXJldHVybiAtRUlOVkFMOworCQlvcGNvZGUgPSBh
cnJheV9pbmRleF9ub3NwZWMob3Bjb2RlLCBJT1JJTkdfUkVHSVNURVJfTEFTVCk7CisJCWlm
ICghdGVzdF9iaXQob3Bjb2RlLCBjdHgtPnJlc3RyaWN0aW9ucy5yZWdpc3Rlcl9vcCkpCisJ
CQlyZXR1cm4gLUVBQ0NFUzsKKwl9CiAKLQkJaWYgKCF0ZXN0X2JpdChvcGNvZGUsIGN0eC0+
cmVzdHJpY3Rpb25zLnJlZ2lzdGVyX29wKSkgewotCQkJcmV0ID0gLUVBQ0NFUzsKLQkJCWdv
dG8gb3V0OwotCQl9CisJaWYgKGlvX3JlZ2lzdGVyX29wX211c3RfcXVpZXNjZShvcGNvZGUp
KSB7CisJCXJldCA9IGlvX2N0eF9xdWllc2NlKGN0eCk7CisJCWlmIChyZXQpCisJCQlyZXR1
cm4gcmV0OwogCX0KIAogCXN3aXRjaCAob3Bjb2RlKSB7CiAJY2FzZSBJT1JJTkdfUkVHSVNU
RVJfQlVGRkVSUzoKLQkJcmV0ID0gaW9fc3FlX2J1ZmZlcl9yZWdpc3RlcihjdHgsIGFyZywg
bnJfYXJncyk7CisJCXJldCA9IGlvX3NxZV9idWZmZXJzX3JlZ2lzdGVyKGN0eCwgYXJnLCBu
cl9hcmdzLCBOVUxMKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdfVU5SRUdJU1RFUl9CVUZG
RVJTOgogCQlyZXQgPSAtRUlOVkFMOwogCQlpZiAoYXJnIHx8IG5yX2FyZ3MpCiAJCQlicmVh
azsKLQkJcmV0ID0gaW9fc3FlX2J1ZmZlcl91bnJlZ2lzdGVyKGN0eCk7CisJCXJldCA9IGlv
X3NxZV9idWZmZXJzX3VucmVnaXN0ZXIoY3R4KTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdf
UkVHSVNURVJfRklMRVM6Ci0JCXJldCA9IGlvX3NxZV9maWxlc19yZWdpc3RlcihjdHgsIGFy
ZywgbnJfYXJncyk7CisJCXJldCA9IGlvX3NxZV9maWxlc19yZWdpc3RlcihjdHgsIGFyZywg
bnJfYXJncywgTlVMTCk7CiAJCWJyZWFrOwogCWNhc2UgSU9SSU5HX1VOUkVHSVNURVJfRklM
RVM6CiAJCXJldCA9IC1FSU5WQUw7CkBAIC05ODM1LDcgKzEwNzYxLDcgQEAgc3RhdGljIGlu
dCBfX2lvX3VyaW5nX3JlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB1bnNpZ25l
ZCBvcGNvZGUsCiAJCXJldCA9IGlvX3NxZV9maWxlc191bnJlZ2lzdGVyKGN0eCk7CiAJCWJy
ZWFrOwogCWNhc2UgSU9SSU5HX1JFR0lTVEVSX0ZJTEVTX1VQREFURToKLQkJcmV0ID0gaW9f
c3FlX2ZpbGVzX3VwZGF0ZShjdHgsIGFyZywgbnJfYXJncyk7CisJCXJldCA9IGlvX3JlZ2lz
dGVyX2ZpbGVzX3VwZGF0ZShjdHgsIGFyZywgbnJfYXJncyk7CiAJCWJyZWFrOwogCWNhc2Ug
SU9SSU5HX1JFR0lTVEVSX0VWRU5URkQ6CiAJY2FzZSBJT1JJTkdfUkVHSVNURVJfRVZFTlRG
RF9BU1lOQzoKQEAgLTk4ODMsMTIgKzEwODA5LDQzIEBAIHN0YXRpYyBpbnQgX19pb191cmlu
Z19yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdW5zaWduZWQgb3Bjb2RlLAog
CWNhc2UgSU9SSU5HX1JFR0lTVEVSX1JFU1RSSUNUSU9OUzoKIAkJcmV0ID0gaW9fcmVnaXN0
ZXJfcmVzdHJpY3Rpb25zKGN0eCwgYXJnLCBucl9hcmdzKTsKIAkJYnJlYWs7CisJY2FzZSBJ
T1JJTkdfUkVHSVNURVJfRklMRVMyOgorCQlyZXQgPSBpb19yZWdpc3Rlcl9yc3JjKGN0eCwg
YXJnLCBucl9hcmdzLCBJT1JJTkdfUlNSQ19GSUxFKTsKKwkJYnJlYWs7CisJY2FzZSBJT1JJ
TkdfUkVHSVNURVJfRklMRVNfVVBEQVRFMjoKKwkJcmV0ID0gaW9fcmVnaXN0ZXJfcnNyY191
cGRhdGUoY3R4LCBhcmcsIG5yX2FyZ3MsCisJCQkJCSAgICAgIElPUklOR19SU1JDX0ZJTEUp
OworCQlicmVhazsKKwljYXNlIElPUklOR19SRUdJU1RFUl9CVUZGRVJTMjoKKwkJcmV0ID0g
aW9fcmVnaXN0ZXJfcnNyYyhjdHgsIGFyZywgbnJfYXJncywgSU9SSU5HX1JTUkNfQlVGRkVS
KTsKKwkJYnJlYWs7CisJY2FzZSBJT1JJTkdfUkVHSVNURVJfQlVGRkVSU19VUERBVEU6CisJ
CXJldCA9IGlvX3JlZ2lzdGVyX3JzcmNfdXBkYXRlKGN0eCwgYXJnLCBucl9hcmdzLAorCQkJ
CQkgICAgICBJT1JJTkdfUlNSQ19CVUZGRVIpOworCQlicmVhazsKKwljYXNlIElPUklOR19S
RUdJU1RFUl9JT1dRX0FGRjoKKwkJcmV0ID0gLUVJTlZBTDsKKwkJaWYgKCFhcmcgfHwgIW5y
X2FyZ3MpCisJCQlicmVhazsKKwkJcmV0ID0gaW9fcmVnaXN0ZXJfaW93cV9hZmYoY3R4LCBh
cmcsIG5yX2FyZ3MpOworCQlicmVhazsKKwljYXNlIElPUklOR19VTlJFR0lTVEVSX0lPV1Ff
QUZGOgorCQlyZXQgPSAtRUlOVkFMOworCQlpZiAoYXJnIHx8IG5yX2FyZ3MpCisJCQlicmVh
azsKKwkJcmV0ID0gaW9fdW5yZWdpc3Rlcl9pb3dxX2FmZihjdHgpOworCQlicmVhazsKKwlj
YXNlIElPUklOR19SRUdJU1RFUl9JT1dRX01BWF9XT1JLRVJTOgorCQlyZXQgPSAtRUlOVkFM
OworCQlpZiAoIWFyZyB8fCBucl9hcmdzICE9IDIpCisJCQlicmVhazsKKwkJcmV0ID0gaW9f
cmVnaXN0ZXJfaW93cV9tYXhfd29ya2VycyhjdHgsIGFyZyk7CisJCWJyZWFrOwogCWRlZmF1
bHQ6CiAJCXJldCA9IC1FSU5WQUw7CiAJCWJyZWFrOwogCX0KIAotb3V0OgogCWlmIChpb19y
ZWdpc3Rlcl9vcF9tdXN0X3F1aWVzY2Uob3Bjb2RlKSkgewogCQkvKiBicmluZyB0aGUgY3R4
IGJhY2sgdG8gbGlmZSAqLwogCQlwZXJjcHVfcmVmX3JlaW5pdCgmY3R4LT5yZWZzKTsKQEAg
LTk5MTQsNiArMTA4NzEsOCBAQCBTWVNDQUxMX0RFRklORTQoaW9fdXJpbmdfcmVnaXN0ZXIs
IHVuc2lnbmVkIGludCwgZmQsIHVuc2lnbmVkIGludCwgb3Bjb2RlLAogCiAJY3R4ID0gZi5m
aWxlLT5wcml2YXRlX2RhdGE7CiAKKwlpb19ydW5fdGFza193b3JrKCk7CisKIAltdXRleF9s
b2NrKCZjdHgtPnVyaW5nX2xvY2spOwogCXJldCA9IF9faW9fdXJpbmdfcmVnaXN0ZXIoY3R4
LCBvcGNvZGUsIGFyZywgbnJfYXJncyk7CiAJbXV0ZXhfdW5sb2NrKCZjdHgtPnVyaW5nX2xv
Y2spOwpAQCAtOTk2MCwxMiArMTA5MTksMjcgQEAgc3RhdGljIGludCBfX2luaXQgaW9fdXJp
bmdfaW5pdCh2b2lkKQogCUJVSUxEX0JVR19TUUVfRUxFTSgyOCwgX191MzIsICBzcGxpY2Vf
ZmxhZ3MpOwogCUJVSUxEX0JVR19TUUVfRUxFTSgzMiwgX191NjQsICB1c2VyX2RhdGEpOwog
CUJVSUxEX0JVR19TUUVfRUxFTSg0MCwgX191MTYsICBidWZfaW5kZXgpOworCUJVSUxEX0JV
R19TUUVfRUxFTSg0MCwgX191MTYsICBidWZfZ3JvdXApOwogCUJVSUxEX0JVR19TUUVfRUxF
TSg0MiwgX191MTYsICBwZXJzb25hbGl0eSk7CiAJQlVJTERfQlVHX1NRRV9FTEVNKDQ0LCBf
X3MzMiwgIHNwbGljZV9mZF9pbik7CisJQlVJTERfQlVHX1NRRV9FTEVNKDQ0LCBfX3UzMiwg
IGZpbGVfaW5kZXgpOworCisJQlVJTERfQlVHX09OKHNpemVvZihzdHJ1Y3QgaW9fdXJpbmdf
ZmlsZXNfdXBkYXRlKSAhPQorCQkgICAgIHNpemVvZihzdHJ1Y3QgaW9fdXJpbmdfcnNyY191
cGRhdGUpKTsKKwlCVUlMRF9CVUdfT04oc2l6ZW9mKHN0cnVjdCBpb191cmluZ19yc3JjX3Vw
ZGF0ZSkgPgorCQkgICAgIHNpemVvZihzdHJ1Y3QgaW9fdXJpbmdfcnNyY191cGRhdGUyKSk7
CisKKwkvKiAtPmJ1Zl9pbmRleCBpcyB1MTYgKi8KKwlCVUlMRF9CVUdfT04oSU9SSU5HX01B
WF9SRUdfQlVGRkVSUyA+PSAoMXUgPDwgMTYpKTsKKworCS8qIHNob3VsZCBmaXQgaW50byBv
bmUgYnl0ZSAqLworCUJVSUxEX0JVR19PTihTUUVfVkFMSURfRkxBR1MgPj0gKDEgPDwgOCkp
OwogCiAJQlVJTERfQlVHX09OKEFSUkFZX1NJWkUoaW9fb3BfZGVmcykgIT0gSU9SSU5HX09Q
X0xBU1QpOwotCUJVSUxEX0JVR19PTihfX1JFUV9GX0xBU1RfQklUID49IDggKiBzaXplb2Yo
aW50KSk7Ci0JcmVxX2NhY2hlcCA9IEtNRU1fQ0FDSEUoaW9fa2lvY2IsIFNMQUJfSFdDQUNI
RV9BTElHTiB8IFNMQUJfUEFOSUMpOworCUJVSUxEX0JVR19PTihfX1JFUV9GX0xBU1RfQklU
ID4gOCAqIHNpemVvZihpbnQpKTsKKworCXJlcV9jYWNoZXAgPSBLTUVNX0NBQ0hFKGlvX2tp
b2NiLCBTTEFCX0hXQ0FDSEVfQUxJR04gfCBTTEFCX1BBTklDIHwKKwkJCQlTTEFCX0FDQ09V
TlQpOwogCXJldHVybiAwOwogfTsKIF9faW5pdGNhbGwoaW9fdXJpbmdfaW5pdCk7CmRpZmYg
LS1naXQgYS9rZXJuZWwvZXhpdC5jIGIva2VybmVsL2V4aXQuYwppbmRleCBhYjkwMGI2NjE4
NjcuLjg5ODllMWQxZjc5YiAxMDA2NDQKLS0tIGEva2VybmVsL2V4aXQuYworKysgYi9rZXJu
ZWwvZXhpdC5jCkBAIC03NjMsNyArNzYzLDcgQEAgdm9pZCBfX25vcmV0dXJuIGRvX2V4aXQo
bG9uZyBjb2RlKQogCQlzY2hlZHVsZSgpOwogCX0KIAotCWlvX3VyaW5nX2ZpbGVzX2NhbmNl
bCh0c2stPmZpbGVzKTsKKwlpb191cmluZ19maWxlc19jYW5jZWwoKTsKIAlleGl0X3NpZ25h
bHModHNrKTsgIC8qIHNldHMgUEZfRVhJVElORyAqLwogCiAJLyogc3luYyBtbSdzIFJTUyBp
bmZvIGJlZm9yZSBzdGF0aXN0aWNzIGdhdGhlcmluZyAqLwpkaWZmIC0tZ2l0IGEva2VybmVs
L2ZvcmsuYyBiL2tlcm5lbC9mb3JrLmMKaW5kZXggNTVjMWE4ODBhMjgxLi42OGVmZTJhMGI0
ZmIgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9mb3JrLmMKKysrIGIva2VybmVsL2ZvcmsuYwpAQCAt
OTI2LDYgKzkyNiw3IEBAIHN0YXRpYyBzdHJ1Y3QgdGFza19zdHJ1Y3QgKmR1cF90YXNrX3N0
cnVjdChzdHJ1Y3QgdGFza19zdHJ1Y3QgKm9yaWcsIGludCBub2RlKQogCXRzay0+c3BsaWNl
X3BpcGUgPSBOVUxMOwogCXRzay0+dGFza19mcmFnLnBhZ2UgPSBOVUxMOwogCXRzay0+d2Fr
ZV9xLm5leHQgPSBOVUxMOworCXRzay0+cGZfaW9fd29ya2VyID0gTlVMTDsKIAogCWFjY291
bnRfa2VybmVsX3N0YWNrKHRzaywgMSk7CiAKZGlmZiAtLWdpdCBhL2tlcm5lbC9zY2hlZC9j
b3JlLmMgYi9rZXJuZWwvc2NoZWQvY29yZS5jCmluZGV4IGRhOTZhMzA5ZWVmZS4uYTg3NWJj
NTk4MDRlIDEwMDY0NAotLS0gYS9rZXJuZWwvc2NoZWQvY29yZS5jCisrKyBiL2tlcm5lbC9z
Y2hlZC9jb3JlLmMKQEAgLTIxLDcgKzIxLDcgQEAKICNpbmNsdWRlIDxhc20vdGxiLmg+CiAK
ICNpbmNsdWRlICIuLi93b3JrcXVldWVfaW50ZXJuYWwuaCIKLSNpbmNsdWRlICIuLi8uLi9m
cy9pby13cS5oIgorI2luY2x1ZGUgIi4uLy4uL2lvX3VyaW5nL2lvLXdxLmgiCiAjaW5jbHVk
ZSAiLi4vc21wYm9vdC5oIgogCiAjaW5jbHVkZSAicGVsdC5oIgotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0054-task_work-add-helper-for-more-targeted-task_work-can.patch"
Content-Disposition: attachment;
 filename*0="0054-task_work-add-helper-for-more-targeted-task_work-can.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBjNWIzMDgzNmU2YzZlMmRiNjYzNDIxYzNlMzNjYzgzZjIzNGZhMGM1IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMSBBcHIgMjAyMSAxOTo1MzoyOSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggNTQv
NjNdIHRhc2tfd29yazogYWRkIGhlbHBlciBmb3IgbW9yZSB0YXJnZXRlZCB0YXNrX3dvcmsK
IGNhbmNlbGluZwoKWyBVcHN0cmVhbSBjb21taXQgYzdhYWIxYTdjNTJiODJkOWFmZDdlMDNj
Mzk4ZWIwM2RjMmFhMDUwNyBdCgpUaGUgb25seSBleHBvcnRlZCBoZWxwZXIgd2UgaGF2ZSBy
aWdodCBub3cgaXMgdGFza193b3JrX2NhbmNlbCgpLCB3aGljaApjYW5jZWxzIGFueSB0YXNr
X3dvcmsgZnJvbSBhIGdpdmVuIHRhc2sgd2hlcmUgZnVuYyBtYXRjaGVzIHRoZSBxdWV1ZWQK
d29yayBpdGVtLiBUaGlzIGlzIGEgYml0IHRvbyBjb2Fyc2UgZm9yIHNvbWUgdXNlIGNhc2Vz
LiBBZGQgYQp0YXNrX3dvcmtfY2FuY2VsX21hdGNoKCkgdGhhdCBhbGxvd3MgdG8gbW9yZSBz
cGVjaWZpY2FsbHkgdGFyZ2V0CmluZGl2aWR1YWwgd29yayBpdGVtcyBvdXRzaWRlIG9mIHB1
cmVseSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gdXNlZC4KCnRhc2tfd29ya19jYW5jZWwoKSBj
YW4gYmUgdHJpdmlhbGx5IGltcGxlbWVudGVkIG9uIHRvcCBvZiB0aGF0LCBoZW5jZSBkbwpz
by4KClJldmlld2VkLWJ5OiBPbGVnIE5lc3Rlcm92IDxvbGVnQHJlZGhhdC5jb20+ClNpZ25l
ZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBpbmNsdWRlL2xp
bnV4L3Rhc2tfd29yay5oIHwgIDIgKysKIGtlcm5lbC90YXNrX3dvcmsuYyAgICAgICAgfCAz
NSArKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLQogMiBmaWxlcyBjaGFuZ2Vk
LCAzMCBpbnNlcnRpb25zKCspLCA3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbGludXgvdGFza193b3JrLmggYi9pbmNsdWRlL2xpbnV4L3Rhc2tfd29yay5oCmluZGV4
IDBkODQ4YTFlOWU2Mi4uNWI4YTkzZjI4OGJiIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4
L3Rhc2tfd29yay5oCisrKyBiL2luY2x1ZGUvbGludXgvdGFza193b3JrLmgKQEAgLTIyLDYg
KzIyLDggQEAgZW51bSB0YXNrX3dvcmtfbm90aWZ5X21vZGUgewogaW50IHRhc2tfd29ya19h
ZGQoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrLCBzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqdHdv
cmssCiAJCQllbnVtIHRhc2tfd29ya19ub3RpZnlfbW9kZSBtb2RlKTsKIAorc3RydWN0IGNh
bGxiYWNrX2hlYWQgKnRhc2tfd29ya19jYW5jZWxfbWF0Y2goc3RydWN0IHRhc2tfc3RydWN0
ICp0YXNrLAorCWJvb2wgKCptYXRjaCkoc3RydWN0IGNhbGxiYWNrX2hlYWQgKiwgdm9pZCAq
ZGF0YSksIHZvaWQgKmRhdGEpOwogc3RydWN0IGNhbGxiYWNrX2hlYWQgKnRhc2tfd29ya19j
YW5jZWwoc3RydWN0IHRhc2tfc3RydWN0ICosIHRhc2tfd29ya19mdW5jX3QpOwogdm9pZCB0
YXNrX3dvcmtfcnVuKHZvaWQpOwogCmRpZmYgLS1naXQgYS9rZXJuZWwvdGFza193b3JrLmMg
Yi9rZXJuZWwvdGFza193b3JrLmMKaW5kZXggOWNkZTk2MTg3NWMwLi5lOTMxNjE5OGM2NGIg
MTAwNjQ0Ci0tLSBhL2tlcm5lbC90YXNrX3dvcmsuYworKysgYi9rZXJuZWwvdGFza193b3Jr
LmMKQEAgLTU5LDE4ICs1OSwxNyBAQCBpbnQgdGFza193b3JrX2FkZChzdHJ1Y3QgdGFza19z
dHJ1Y3QgKnRhc2ssIHN0cnVjdCBjYWxsYmFja19oZWFkICp3b3JrLAogfQogCiAvKioKLSAq
IHRhc2tfd29ya19jYW5jZWwgLSBjYW5jZWwgYSBwZW5kaW5nIHdvcmsgYWRkZWQgYnkgdGFz
a193b3JrX2FkZCgpCisgKiB0YXNrX3dvcmtfY2FuY2VsX21hdGNoIC0gY2FuY2VsIGEgcGVu
ZGluZyB3b3JrIGFkZGVkIGJ5IHRhc2tfd29ya19hZGQoKQogICogQHRhc2s6IHRoZSB0YXNr
IHdoaWNoIHNob3VsZCBleGVjdXRlIHRoZSB3b3JrCi0gKiBAZnVuYzogaWRlbnRpZmllcyB0
aGUgd29yayB0byByZW1vdmUKLSAqCi0gKiBGaW5kIHRoZSBsYXN0IHF1ZXVlZCBwZW5kaW5n
IHdvcmsgd2l0aCAtPmZ1bmMgPT0gQGZ1bmMgYW5kIHJlbW92ZQotICogaXQgZnJvbSBxdWV1
ZS4KKyAqIEBtYXRjaDogbWF0Y2ggZnVuY3Rpb24gdG8gY2FsbAogICoKICAqIFJFVFVSTlM6
CiAgKiBUaGUgZm91bmQgd29yayBvciBOVUxMIGlmIG5vdCBmb3VuZC4KICAqLwogc3RydWN0
IGNhbGxiYWNrX2hlYWQgKgotdGFza193b3JrX2NhbmNlbChzdHJ1Y3QgdGFza19zdHJ1Y3Qg
KnRhc2ssIHRhc2tfd29ya19mdW5jX3QgZnVuYykKK3Rhc2tfd29ya19jYW5jZWxfbWF0Y2go
c3RydWN0IHRhc2tfc3RydWN0ICp0YXNrLAorCQkgICAgICAgYm9vbCAoKm1hdGNoKShzdHJ1
Y3QgY2FsbGJhY2tfaGVhZCAqLCB2b2lkICpkYXRhKSwKKwkJICAgICAgIHZvaWQgKmRhdGEp
CiB7CiAJc3RydWN0IGNhbGxiYWNrX2hlYWQgKipwcHJldiA9ICZ0YXNrLT50YXNrX3dvcmtz
OwogCXN0cnVjdCBjYWxsYmFja19oZWFkICp3b3JrOwpAQCAtODYsNyArODUsNyBAQCB0YXNr
X3dvcmtfY2FuY2VsKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywgdGFza193b3JrX2Z1bmNf
dCBmdW5jKQogCSAqLwogCXJhd19zcGluX2xvY2tfaXJxc2F2ZSgmdGFzay0+cGlfbG9jaywg
ZmxhZ3MpOwogCXdoaWxlICgod29yayA9IFJFQURfT05DRSgqcHByZXYpKSkgewotCQlpZiAo
d29yay0+ZnVuYyAhPSBmdW5jKQorCQlpZiAoIW1hdGNoKHdvcmssIGRhdGEpKQogCQkJcHBy
ZXYgPSAmd29yay0+bmV4dDsKIAkJZWxzZSBpZiAoY21weGNoZyhwcHJldiwgd29yaywgd29y
ay0+bmV4dCkgPT0gd29yaykKIAkJCWJyZWFrOwpAQCAtOTYsNiArOTUsMjggQEAgdGFza193
b3JrX2NhbmNlbChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssIHRhc2tfd29ya19mdW5jX3Qg
ZnVuYykKIAlyZXR1cm4gd29yazsKIH0KIAorc3RhdGljIGJvb2wgdGFza193b3JrX2Z1bmNf
bWF0Y2goc3RydWN0IGNhbGxiYWNrX2hlYWQgKmNiLCB2b2lkICpkYXRhKQoreworCXJldHVy
biBjYi0+ZnVuYyA9PSBkYXRhOworfQorCisvKioKKyAqIHRhc2tfd29ya19jYW5jZWwgLSBj
YW5jZWwgYSBwZW5kaW5nIHdvcmsgYWRkZWQgYnkgdGFza193b3JrX2FkZCgpCisgKiBAdGFz
azogdGhlIHRhc2sgd2hpY2ggc2hvdWxkIGV4ZWN1dGUgdGhlIHdvcmsKKyAqIEBmdW5jOiBp
ZGVudGlmaWVzIHRoZSB3b3JrIHRvIHJlbW92ZQorICoKKyAqIEZpbmQgdGhlIGxhc3QgcXVl
dWVkIHBlbmRpbmcgd29yayB3aXRoIC0+ZnVuYyA9PSBAZnVuYyBhbmQgcmVtb3ZlCisgKiBp
dCBmcm9tIHF1ZXVlLgorICoKKyAqIFJFVFVSTlM6CisgKiBUaGUgZm91bmQgd29yayBvciBO
VUxMIGlmIG5vdCBmb3VuZC4KKyAqLworc3RydWN0IGNhbGxiYWNrX2hlYWQgKgordGFza193
b3JrX2NhbmNlbChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssIHRhc2tfd29ya19mdW5jX3Qg
ZnVuYykKK3sKKwlyZXR1cm4gdGFza193b3JrX2NhbmNlbF9tYXRjaCh0YXNrLCB0YXNrX3dv
cmtfZnVuY19tYXRjaCwgZnVuYyk7Cit9CisKIC8qKgogICogdGFza193b3JrX3J1biAtIGV4
ZWN1dGUgdGhlIHdvcmtzIGFkZGVkIGJ5IHRhc2tfd29ya19hZGQoKQogICoKLS0gCjIuMzku
MAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0053-kernel-don-t-call-do_exit-for-PF_IO_WORKER-threads.patch"
Content-Disposition: attachment;
 filename*0="0053-kernel-don-t-call-do_exit-for-PF_IO_WORKER-threads.patc";
 filename*1="h"
Content-Transfer-Encoding: base64

RnJvbSBlMTFmOWY2MTc1MmYyNTJlZTE5ZTljMGRlZTIyMjE4ZjkwNzhhNzViIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgMjYgTWFyIDIwMjEgMDg6NTc6MTAgLTA2MDAKU3ViamVjdDogW1BBVENIIDUz
LzYzXSBrZXJuZWw6IGRvbid0IGNhbGwgZG9fZXhpdCgpIGZvciBQRl9JT19XT1JLRVIgdGhy
ZWFkcwoKWyBVcHN0cmVhbSBjb21taXQgMTA0NDI5OTRiYTE5NWVmZWY2ZmRjYzBjMzY5OWU0
NjMzY2I1MTYxYiBdCgpSaWdodCBub3cgd2UncmUgbmV2ZXIgY2FsbGluZyBnZXRfc2lnbmFs
KCkgZnJvbSBQRl9JT19XT1JLRVIgdGhyZWFkcywgYnV0CmluIHByZXBhcmF0aW9uIGZvciBk
b2luZyBzbywgZG9uJ3QgaGFuZGxlIGEgZmF0YWwgc2lnbmFsIGZvciB0aGVtLiBUaGUKd29y
a2VycyBoYXZlIHN0YXRlIHRoZXkgbmVlZCB0byBjbGVhbnVwIHdoZW4gZXhpdGluZywgc28g
anVzdCByZXR1cm4KaW5zdGVhZCBvZiBjYWxsaW5nIGRvX2V4aXQoKSBvbiB0aGVpciBiZWhh
bGYuIFRoZSB0aHJlYWRzIHRoZW1zZWx2ZXMgd2lsbApkZXRlY3QgYSBmYXRhbCBzaWduYWwg
YW5kIGRvIHByb3BlciBzaHV0ZG93bi4KClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4
Ym9lQGtlcm5lbC5kaz4KLS0tCiBrZXJuZWwvc2lnbmFsLmMgfCAxMCArKysrKysrKystCiAx
IGZpbGUgY2hhbmdlZCwgOSBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0t
Z2l0IGEva2VybmVsL3NpZ25hbC5jIGIva2VybmVsL3NpZ25hbC5jCmluZGV4IDg0NWQ0OTEy
YjgzYS4uZmI1NDczNzI0ZjVkIDEwMDY0NAotLS0gYS9rZXJuZWwvc2lnbmFsLmMKKysrIGIv
a2VybmVsL3NpZ25hbC5jCkBAIC0yNzU0LDYgKzI3NTQsMTQgQEAgYm9vbCBnZXRfc2lnbmFs
KHN0cnVjdCBrc2lnbmFsICprc2lnKQogCQkJZG9fY29yZWR1bXAoJmtzaWctPmluZm8pOwog
CQl9CiAKKwkJLyoKKwkJICogUEZfSU9fV09SS0VSIHRocmVhZHMgd2lsbCBjYXRjaCBhbmQg
ZXhpdCBvbiBmYXRhbCBzaWduYWxzCisJCSAqIHRoZW1zZWx2ZXMuIFRoZXkgaGF2ZSBjbGVh
bnVwIHRoYXQgbXVzdCBiZSBwZXJmb3JtZWQsIHNvCisJCSAqIHdlIGNhbm5vdCBjYWxsIGRv
X2V4aXQoKSBvbiB0aGVpciBiZWhhbGYuCisJCSAqLworCQlpZiAoY3VycmVudC0+ZmxhZ3Mg
JiBQRl9JT19XT1JLRVIpCisJCQlnb3RvIG91dDsKKwogCQkvKgogCQkgKiBEZWF0aCBzaWdu
YWxzLCBubyBjb3JlIGR1bXAuCiAJCSAqLwpAQCAtMjc2MSw3ICsyNzY5LDcgQEAgYm9vbCBn
ZXRfc2lnbmFsKHN0cnVjdCBrc2lnbmFsICprc2lnKQogCQkvKiBOT1RSRUFDSEVEICovCiAJ
fQogCXNwaW5fdW5sb2NrX2lycSgmc2lnaGFuZC0+c2lnbG9jayk7Ci0KK291dDoKIAlrc2ln
LT5zaWcgPSBzaWducjsKIAlyZXR1cm4ga3NpZy0+c2lnID4gMDsKIH0KLS0gCjIuMzkuMAoK

--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0052-kernel-stop-masking-signals-in-create_io_thread.patch"
Content-Disposition: attachment;
 filename*0="0052-kernel-stop-masking-signals-in-create_io_thread.patch"
Content-Transfer-Encoding: base64

RnJvbSAzYmEyZGUwOGRiMzc0NzQ5ODZjYWJkZDRlNjc1YjhlM2JmYzVkZjVhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgMjYgTWFyIDIwMjEgMDk6MDU6MjIgLTA2MDAKU3ViamVjdDogW1BBVENIIDUy
LzYzXSBrZXJuZWw6IHN0b3AgbWFza2luZyBzaWduYWxzIGluIGNyZWF0ZV9pb190aHJlYWQo
KQoKWyBVcHN0cmVhbSBjb21taXQgYjE2YjM4NTVkODlmYmE2NDA5OTZmZWZkZDNhMTEzYzBh
YTBlMzgwZCBdCgpUaGlzIGlzIHJhY3kgLSBtb3ZlIHRoZSBibG9ja2luZyBpbnRvIHdoZW4g
dGhlIHRhc2sgaXMgY3JlYXRlZCBhbmQKd2UncmUgbWFya2luZyBpdCBhcyBQRl9JT19XT1JL
RVIgYW55d2F5LiBUaGUgSU8gdGhyZWFkcyBhcmUgbm93CnByZXBhcmVkIHRvIGhhbmRsZSBz
aWduYWxzIGxpa2UgU0lHU1RPUCBhcyB3ZWxsLCBzbyBjbGVhciB0aGF0IGZyb20KdGhlIG1h
c2sgdG8gYWxsb3cgcHJvcGVyIHN0b3BwaW5nIG9mIElPIHRocmVhZHMuCgpBY2tlZC1ieTog
IkVyaWMgVy4gQmllZGVybWFuIiA8ZWJpZWRlcm1AeG1pc3Npb24uY29tPgpSZXBvcnRlZC1i
eTogT2xlZyBOZXN0ZXJvdiA8b2xlZ0ByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5z
IEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQoga2VybmVsL2ZvcmsuYyB8IDE2ICsrKysr
KysrLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA4IGluc2VydGlvbnMoKyksIDggZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEva2VybmVsL2ZvcmsuYyBiL2tlcm5lbC9mb3JrLmMKaW5k
ZXggYjVjZDVjZGQzZTY3Li41NWMxYTg4MGEyODEgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9mb3Jr
LmMKKysrIGIva2VybmVsL2ZvcmsuYwpAQCAtMTk0OSw4ICsxOTQ5LDE0IEBAIHN0YXRpYyBf
X2xhdGVudF9lbnRyb3B5IHN0cnVjdCB0YXNrX3N0cnVjdCAqY29weV9wcm9jZXNzKAogCXAg
PSBkdXBfdGFza19zdHJ1Y3QoY3VycmVudCwgbm9kZSk7CiAJaWYgKCFwKQogCQlnb3RvIGZv
cmtfb3V0OwotCWlmIChhcmdzLT5pb190aHJlYWQpCisJaWYgKGFyZ3MtPmlvX3RocmVhZCkg
eworCQkvKgorCQkgKiBNYXJrIHVzIGFuIElPIHdvcmtlciwgYW5kIGJsb2NrIGFueSBzaWdu
YWwgdGhhdCBpc24ndAorCQkgKiBmYXRhbCBvciBTVE9QCisJCSAqLwogCQlwLT5mbGFncyB8
PSBQRl9JT19XT1JLRVI7CisJCXNpZ2luaXRzZXRpbnYoJnAtPmJsb2NrZWQsIHNpZ21hc2so
U0lHS0lMTCl8c2lnbWFzayhTSUdTVE9QKSk7CisJfQogCiAJLyoKIAkgKiBUaGlzIF9tdXN0
XyBoYXBwZW4gYmVmb3JlIHdlIGNhbGwgZnJlZV90YXNrKCksIGkuZS4gYmVmb3JlIHdlIGp1
bXAKQEAgLTI0MzUsMTQgKzI0NDEsOCBAQCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKmNyZWF0ZV9p
b190aHJlYWQoaW50ICgqZm4pKHZvaWQgKiksIHZvaWQgKmFyZywgaW50IG5vZGUpCiAJCS5z
dGFja19zaXplCT0gKHVuc2lnbmVkIGxvbmcpYXJnLAogCQkuaW9fdGhyZWFkCT0gMSwKIAl9
OwotCXN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrOwogCi0JdHNrID0gY29weV9wcm9jZXNzKE5V
TEwsIDAsIG5vZGUsICZhcmdzKTsKLQlpZiAoIUlTX0VSUih0c2spKSB7Ci0JCXNpZ2ZpbGxz
ZXQoJnRzay0+YmxvY2tlZCk7Ci0JCXNpZ2RlbHNldG1hc2soJnRzay0+YmxvY2tlZCwgc2ln
bWFzayhTSUdLSUxMKSk7Ci0JfQotCXJldHVybiB0c2s7CisJcmV0dXJuIGNvcHlfcHJvY2Vz
cyhOVUxMLCAwLCBub2RlLCAmYXJncyk7CiB9CiAKIC8qCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0051-x86-process-setup-io_threads-more-like-normal-user-s.patch"
Content-Disposition: attachment;
 filename*0="0051-x86-process-setup-io_threads-more-like-normal-user-s.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBmNzU3Y2MxZWZlMGVjNTc4ZjU0ZGM4NTdmMTY4NGRjZDY1NDFiNDY0IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBTdGVmYW4gTWV0em1hY2hlciA8bWV0emVAc2FtYmEu
b3JnPgpEYXRlOiBXZWQsIDUgTWF5IDIwMjEgMTM6MDM6MTAgKzAyMDAKU3ViamVjdDogW1BB
VENIIDUxLzYzXSB4ODYvcHJvY2Vzczogc2V0dXAgaW9fdGhyZWFkcyBtb3JlIGxpa2Ugbm9y
bWFsIHVzZXIKIHNwYWNlIHRocmVhZHMKClsgVXBzdHJlYW0gY29tbWl0IDUwYjdiNmYyOWRl
M2UxOGU5ZDZjMDk2NDEyNTZhMDI5NjM2MWNmZWUgXQoKQXMgaW9fdGhyZWFkcyBhcmUgZnVs
bHkgc2V0IHVwIFVTRVIgdGhyZWFkcyBpdCdzIGNsZWFyZXIgdG8gc2VwYXJhdGUgdGhlCmNv
ZGUgcGF0aCBmcm9tIHRoZSBLVEhSRUFEIGxvZ2ljLgoKVGhlIG9ubHkgcmVtYWluaW5nIGRp
ZmZlcmVuY2UgdG8gdXNlciBzcGFjZSB0aHJlYWRzIGlzIHRoYXQgaW9fdGhyZWFkcwpuZXZl
ciByZXR1cm4gdG8gdXNlciBzcGFjZSBhZ2Fpbi4gSW5zdGVhZCB0aGV5IGxvb3Agd2l0aGlu
IHRoZSBnaXZlbgp3b3JrZXIgZnVuY3Rpb24uCgpUaGUgZmFjdCB0aGF0IHRoZXkgbmV2ZXIg
cmV0dXJuIHRvIHVzZXIgc3BhY2UgbWVhbnMgdGhleSBkb24ndCBoYXZlIGFuCnVzZXIgc3Bh
Y2UgdGhyZWFkIHN0YWNrLiBJbiBvcmRlciB0byBpbmRpY2F0ZSB0aGF0IHRvIHRvb2xzIGxp
a2UgZ2RiIHdlCnJlc2V0IHRoZSBzdGFjayBhbmQgaW5zdHJ1Y3Rpb24gcG9pbnRlcnMgdG8g
MC4KClRoaXMgYWxsb3dzIGdkYiBhdHRhY2ggdG8gdXNlciBzcGFjZSBwcm9jZXNzZXMgdXNp
bmcgaW8tdXJpbmcsIHdoaWNoIGxpa2UKbWVhbnMgdGhhdCB0aGV5IGhhdmUgaW9fdGhyZWFk
cywgd2l0aG91dCBwcmludGluZyB3b3JyeWluZyBtZXNzYWdlIGxpa2UKdGhpczoKCiAgd2Fy
bmluZzogU2VsZWN0ZWQgYXJjaGl0ZWN0dXJlIGkzODY6eDg2LTY0IGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggcmVwb3J0ZWQgdGFyZ2V0IGFyY2hpdGVjdHVyZSBpMzg2CgogIHdhcm5pbmc6
IEFyY2hpdGVjdHVyZSByZWplY3RlZCB0YXJnZXQtc3VwcGxpZWQgZGVzY3JpcHRpb24KClRo
ZSBvdXRwdXQgd2lsbCBiZSBzb21ldGhpbmcgbGlrZSB0aGlzOgoKICAoZ2RiKSBpbmZvIHRo
cmVhZHMKICAgIElkICAgVGFyZ2V0IElkICAgICAgICAgICAgICAgICAgRnJhbWUKICAqIDEg
ICAgTFdQIDQ4NjMgImlvX3VyaW5nLWNwLWZvciIgc3lzY2FsbCAoKSBhdCAuLi9zeXNkZXBz
L3VuaXgvc3lzdi9saW51eC94ODZfNjQvc3lzY2FsbC5TOjM4CiAgICAyICAgIExXUCA0ODY0
ICJpb3UtbWdyLTQ4NjMiICAgIDB4MDAwMDAwMDAwMDAwMDAwMCBpbiA/PyAoKQogICAgMyAg
ICBMV1AgNDg2NSAiaW91LXdyay00ODYzIiAgICAweDAwMDAwMDAwMDAwMDAwMDAgaW4gPz8g
KCkKICAoZ2RiKSB0aHJlYWQgMwogIFtTd2l0Y2hpbmcgdG8gdGhyZWFkIDMgKExXUCA0ODY1
KV0KICAjMCAgMHgwMDAwMDAwMDAwMDAwMDAwIGluID8/ICgpCiAgKGdkYikgYnQKICAjMCAg
MHgwMDAwMDAwMDAwMDAwMDAwIGluID8/ICgpCiAgQmFja3RyYWNlIHN0b3BwZWQ6IENhbm5v
dCBhY2Nlc3MgbWVtb3J5IGF0IGFkZHJlc3MgMHgwCgpGaXhlczogNDcyN2RjMjBlMDQyICgi
YXJjaDogc2V0dXAgUEZfSU9fV09SS0VSIHRocmVhZHMgbGlrZSBQRl9LVEhSRUFEIikKTGlu
azogaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvaW8tdXJpbmcvMDQ0ZDBiYWQtNjg4OC1hMjEx
LWUxZDMtMTU5YTRhZWVkNTJkQHBvbHltdGwuY2EvVC8jbTFiYmY1NzI3ZTNkNGU4Mzk2MDNm
NmVjN2VkNzljN2VlYmZiYTYyNjcKU2lnbmVkLW9mZi1ieTogU3RlZmFuIE1ldHptYWNoZXIg
PG1ldHplQHNhbWJhLm9yZz4KY2M6IExpbnVzIFRvcnZhbGRzIDx0b3J2YWxkc0BsaW51eC1m
b3VuZGF0aW9uLm9yZz4KY2M6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KY2M6IEFu
ZHkgTHV0b21pcnNraSA8bHV0b0BrZXJuZWwub3JnPgpjYzogbGludXgta2VybmVsQHZnZXIu
a2VybmVsLm9yZwpjYzogaW8tdXJpbmdAdmdlci5rZXJuZWwub3JnCmNjOiB4ODZAa2VybmVs
Lm9yZwpMaW5rOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9yLzIwMjEwNTA1MTEwMzEwLjIz
NzUzNy0xLW1ldHplQHNhbWJhLm9yZwpSZXZpZXdlZC1ieTogVGhvbWFzIEdsZWl4bmVyIDx0
Z2x4QGxpbnV0cm9uaXguZGU+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtl
cm5lbC5kaz4KLS0tCiBhcmNoL3g4Ni9rZXJuZWwvcHJvY2Vzcy5jIHwgMTkgKysrKysrKysr
KysrKysrKysrLQogMSBmaWxlIGNoYW5nZWQsIDE4IGluc2VydGlvbnMoKyksIDEgZGVsZXRp
b24oLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC94
ODYva2VybmVsL3Byb2Nlc3MuYwppbmRleCA0ZDQ2YzUyZDljMDUuLjVlMTdjMzkzOWRkMSAx
MDA2NDQKLS0tIGEvYXJjaC94ODYva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL3g4Ni9r
ZXJuZWwvcHJvY2Vzcy5jCkBAIC0xNjIsNyArMTYyLDcgQEAgaW50IGNvcHlfdGhyZWFkKHVu
c2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsIHVuc2lnbmVkIGxv
bmcgYXJnLAogI2VuZGlmCiAKIAkvKiBLZXJuZWwgdGhyZWFkID8gKi8KLQlpZiAodW5saWtl
bHkocC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0lPX1dPUktFUikpKSB7CisJaWYgKHVu
bGlrZWx5KHAtPmZsYWdzICYgUEZfS1RIUkVBRCkpIHsKIAkJbWVtc2V0KGNoaWxkcmVncywg
MCwgc2l6ZW9mKHN0cnVjdCBwdF9yZWdzKSk7CiAJCWt0aHJlYWRfZnJhbWVfaW5pdChmcmFt
ZSwgc3AsIGFyZyk7CiAJCXJldHVybiAwOwpAQCAtMTc4LDYgKzE3OCwyMyBAQCBpbnQgY29w
eV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyBzcCwg
dW5zaWduZWQgbG9uZyBhcmcsCiAJdGFza191c2VyX2dzKHApID0gZ2V0X3VzZXJfZ3MoY3Vy
cmVudF9wdF9yZWdzKCkpOwogI2VuZGlmCiAKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQ
Rl9JT19XT1JLRVIpKSB7CisJCS8qCisJCSAqIEFuIElPIHRocmVhZCBpcyBhIHVzZXIgc3Bh
Y2UgdGhyZWFkLCBidXQgaXQgZG9lc24ndAorCQkgKiByZXR1cm4gdG8gcmV0X2FmdGVyX2Zv
cmsoKS4KKwkJICoKKwkJICogSW4gb3JkZXIgdG8gaW5kaWNhdGUgdGhhdCB0byB0b29scyBs
aWtlIGdkYiwKKwkJICogd2UgcmVzZXQgdGhlIHN0YWNrIGFuZCBpbnN0cnVjdGlvbiBwb2lu
dGVycy4KKwkJICoKKwkJICogSXQgZG9lcyB0aGUgc2FtZSBrZXJuZWwgZnJhbWUgc2V0dXAg
dG8gcmV0dXJuIHRvIGEga2VybmVsCisJCSAqIGZ1bmN0aW9uIHRoYXQgYSBrZXJuZWwgdGhy
ZWFkIGRvZXMuCisJCSAqLworCQljaGlsZHJlZ3MtPnNwID0gMDsKKwkJY2hpbGRyZWdzLT5p
cCA9IDA7CisJCWt0aHJlYWRfZnJhbWVfaW5pdChmcmFtZSwgc3AsIGFyZyk7CisJCXJldHVy
biAwOworCX0KKwogCS8qIFNldCBhIG5ldyBUTFMgZm9yIHRoZSBjaGlsZCB0aHJlYWQ/ICov
CiAJaWYgKGNsb25lX2ZsYWdzICYgQ0xPTkVfU0VUVExTKQogCQlyZXQgPSBzZXRfbmV3X3Rs
cyhwLCB0bHMpOwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0050-arch-ensure-parisc-powerpc-handle-PF_IO_WORKER-in-co.patch"
Content-Disposition: attachment;
 filename*0="0050-arch-ensure-parisc-powerpc-handle-PF_IO_WORKER-in-co.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBiOTYzNGFkYWI4MjAxOWZmNzBlNDQ1YzA5YTdjMjZhMjA5ZjZkMDEwIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMjMgRmViIDIwMjEgMTE6NTc6MjAgLTA3MDAKU3ViamVjdDogW1BBVENIIDUw
LzYzXSBhcmNoOiBlbnN1cmUgcGFyaXNjL3Bvd2VycGMgaGFuZGxlIFBGX0lPX1dPUktFUiBp
bgogY29weV90aHJlYWQoKQoKWyBVcHN0cmVhbSBjb21taXQgMDEwMGU2YmJkYmI3OTQwNGU1
NjkzOTMxMzY2MmI0MjczNzAyNjU3NCBdCgpJbiB0aGUgYXJjaCBhZGRpdGlvbiBvZiBQRl9J
T19XT1JLRVIsIEkgbWlzc2VkIHBhcmlzYyBhbmQgcG93ZXJwYyBmb3IKc29tZSByZWFzb24u
IEZpeCB0aGF0IHVwLCBlbnN1cmluZyB0aGV5IGhhbmRsZSBQRl9JT19XT1JLRVIgbGlrZSB0
aGV5IGRvClBGX0tUSFJFQUQgaW4gY29weV90aHJlYWQoKS4KClJlcG9ydGVkLWJ5OiBCcnVu
byBHb25jYWx2ZXMgPGJnb25jYWx2QHJlZGhhdC5jb20+CkZpeGVzOiA0NzI3ZGMyMGUwNDIg
KCJhcmNoOiBzZXR1cCBQRl9JT19XT1JLRVIgdGhyZWFkcyBsaWtlIFBGX0tUSFJFQUQiKQpT
aWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9w
YXJpc2Mva2VybmVsL3Byb2Nlc3MuYyAgfCAyICstCiBhcmNoL3Bvd2VycGMva2VybmVsL3By
b2Nlc3MuYyB8IDIgKy0KIDIgZmlsZXMgY2hhbmdlZCwgMiBpbnNlcnRpb25zKCspLCAyIGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvcGFyaXNjL2tlcm5lbC9wcm9jZXNzLmMg
Yi9hcmNoL3BhcmlzYy9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IGE5MmEyM2Q2YWNkOS4uNWU0
MzgxMjgwYzk3IDEwMDY0NAotLS0gYS9hcmNoL3BhcmlzYy9rZXJuZWwvcHJvY2Vzcy5jCisr
KyBiL2FyY2gvcGFyaXNjL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTIwMCw3ICsyMDAsNyBAQCBj
b3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVz
cCwKIAlleHRlcm4gdm9pZCAqIGNvbnN0IHJldF9mcm9tX2tlcm5lbF90aHJlYWQ7CiAJZXh0
ZXJuIHZvaWQgKiBjb25zdCBjaGlsZF9yZXR1cm47CiAKLQlpZiAodW5saWtlbHkocC0+Zmxh
Z3MgJiBQRl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhS
RUFEIHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJLyoga2VybmVsIHRocmVhZCAqLwogCQltZW1z
ZXQoY3JlZ3MsIDAsIHNpemVvZihzdHJ1Y3QgcHRfcmVncykpOwogCQlpZiAoIXVzcCkgLyog
aWRsZSB0aHJlYWQgKi8KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9rZXJuZWwvcHJvY2Vz
cy5jIGIvYXJjaC9wb3dlcnBjL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggYzQzY2MyNmJkZTVk
Li5jZjM3NWQ2N2VhY2IgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9rZXJuZWwvcHJvY2Vz
cy5jCisrKyBiL2FyY2gvcG93ZXJwYy9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xNjg0LDcgKzE2
ODQsNyBAQCBpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5z
aWduZWQgbG9uZyB1c3AsCiAJLyogQ29weSByZWdpc3RlcnMgKi8KIAlzcCAtPSBzaXplb2Yo
c3RydWN0IHB0X3JlZ3MpOwogCWNoaWxkcmVncyA9IChzdHJ1Y3QgcHRfcmVncyAqKSBzcDsK
LQlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQRl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2Vs
eShwLT5mbGFncyAmIChQRl9LVEhSRUFEIHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJLyoga2Vy
bmVsIHRocmVhZCAqLwogCQltZW1zZXQoY2hpbGRyZWdzLCAwLCBzaXplb2Yoc3RydWN0IHB0
X3JlZ3MpKTsKIAkJY2hpbGRyZWdzLT5ncHJbMV0gPSBzcCArIHNpemVvZihzdHJ1Y3QgcHRf
cmVncyk7Ci0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0049-arch-setup-PF_IO_WORKER-threads-like-PF_KTHREAD.patch"
Content-Disposition: attachment;
 filename*0="0049-arch-setup-PF_IO_WORKER-threads-like-PF_KTHREAD.patch"
Content-Transfer-Encoding: base64

RnJvbSA1MGIyMWZlYjVhMDI3MmEwYThjYjYyMGQyN2Q0YzVlNjk4Y2MxZDIxIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTcgRmViIDIwMjEgMDg6NDg6MDAgLTA3MDAKU3ViamVjdDogW1BBVENIIDQ5
LzYzXSBhcmNoOiBzZXR1cCBQRl9JT19XT1JLRVIgdGhyZWFkcyBsaWtlIFBGX0tUSFJFQUQK
ClsgVXBzdHJlYW0gY29tbWl0IDQ3MjdkYzIwZTA0MjIyMTFhMGUwYzcyYjFhY2U0ZWQ2MDk2
ZGY4YTYgXQoKUEZfSU9fV09SS0VSIGFyZSBrZXJuZWwgdGhyZWFkcyB0b28sIGJ1dCB0aGV5
IGFyZW4ndCBQRl9LVEhSRUFEIGluIHRoZQpzZW5zZSB0aGF0IHdlIGRvbid0IGFzc2lnbiAt
PnNldF9jaGlsZF90aWQgd2l0aCBvdXIgb3duIHN0cnVjdHVyZS4gSnVzdAplbnN1cmUgdGhh
dCBldmVyeSBhcmNoIHNldHMgdXAgdGhlIFBGX0lPX1dPUktFUiB0aHJlYWRzIGxpa2Uga3Ro
cmVhZHMKaW4gdGhlIGFyY2ggaW1wbGVtZW50YXRpb24gb2YgY29weV90aHJlYWQoKS4KClNp
Z25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL2Fs
cGhhL2tlcm5lbC9wcm9jZXNzLmMgICAgICB8IDIgKy0KIGFyY2gvYXJjL2tlcm5lbC9wcm9j
ZXNzLmMgICAgICAgIHwgMiArLQogYXJjaC9hcm0va2VybmVsL3Byb2Nlc3MuYyAgICAgICAg
fCAyICstCiBhcmNoL2FybTY0L2tlcm5lbC9wcm9jZXNzLmMgICAgICB8IDIgKy0KIGFyY2gv
Y3NreS9rZXJuZWwvcHJvY2Vzcy5jICAgICAgIHwgMiArLQogYXJjaC9oODMwMC9rZXJuZWwv
cHJvY2Vzcy5jICAgICAgfCAyICstCiBhcmNoL2hleGFnb24va2VybmVsL3Byb2Nlc3MuYyAg
ICB8IDIgKy0KIGFyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgIHwgMiArLQogYXJj
aC9tNjhrL2tlcm5lbC9wcm9jZXNzLmMgICAgICAgfCAyICstCiBhcmNoL21pY3JvYmxhemUv
a2VybmVsL3Byb2Nlc3MuYyB8IDIgKy0KIGFyY2gvbWlwcy9rZXJuZWwvcHJvY2Vzcy5jICAg
ICAgIHwgMiArLQogYXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vzcy5jICAgICAgfCAyICstCiBh
cmNoL25pb3MyL2tlcm5lbC9wcm9jZXNzLmMgICAgICB8IDIgKy0KIGFyY2gvb3BlbnJpc2Mv
a2VybmVsL3Byb2Nlc3MuYyAgIHwgMiArLQogYXJjaC9yaXNjdi9rZXJuZWwvcHJvY2Vzcy5j
ICAgICAgfCAyICstCiBhcmNoL3MzOTAva2VybmVsL3Byb2Nlc3MuYyAgICAgICB8IDIgKy0K
IGFyY2gvc2gva2VybmVsL3Byb2Nlc3NfMzIuYyAgICAgIHwgMiArLQogYXJjaC9zcGFyYy9r
ZXJuZWwvcHJvY2Vzc18zMi5jICAgfCAyICstCiBhcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNz
XzY0LmMgICB8IDIgKy0KIGFyY2gvdW0va2VybmVsL3Byb2Nlc3MuYyAgICAgICAgIHwgMiAr
LQogYXJjaC94ODYva2VybmVsL3Byb2Nlc3MuYyAgICAgICAgfCAyICstCiBhcmNoL3h0ZW5z
YS9rZXJuZWwvcHJvY2Vzcy5jICAgICB8IDIgKy0KIDIyIGZpbGVzIGNoYW5nZWQsIDIyIGlu
c2VydGlvbnMoKyksIDIyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvYWxwaGEv
a2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvYWxwaGEva2VybmVsL3Byb2Nlc3MuYwppbmRleCA0
YzdiMDQxNGEzZmYuLjA4MzM1YjIyOTRiMyAxMDA2NDQKLS0tIGEvYXJjaC9hbHBoYS9rZXJu
ZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvYWxwaGEva2VybmVsL3Byb2Nlc3MuYwpAQCAtMjQ5
LDcgKzI0OSw3IEBAIGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdz
LCB1bnNpZ25lZCBsb25nIHVzcCwKIAljaGlsZHRpLT5wY2Iua3NwID0gKHVuc2lnbmVkIGxv
bmcpIGNoaWxkc3RhY2s7CiAJY2hpbGR0aS0+cGNiLmZsYWdzID0gMTsJLyogc2V0IEZFTiwg
Y2xlYXIgZXZlcnl0aGluZyBlbHNlICovCiAKLQlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQ
Rl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhSRUFEIHwg
UEZfSU9fV09SS0VSKSkpIHsKIAkJLyoga2VybmVsIHRocmVhZCAqLwogCQltZW1zZXQoY2hp
bGRzdGFjaywgMCwKIAkJCXNpemVvZihzdHJ1Y3Qgc3dpdGNoX3N0YWNrKSArIHNpemVvZihz
dHJ1Y3QgcHRfcmVncykpOwpkaWZmIC0tZ2l0IGEvYXJjaC9hcmMva2VybmVsL3Byb2Nlc3Mu
YyBiL2FyY2gvYXJjL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggYTg1ZTljNjI1YWI1Li44Y2Yy
Y2FhZTkzZjEgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJjL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIv
YXJjaC9hcmMva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTkxLDcgKzE5MSw3IEBAIGludCBjb3B5
X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVzcCwK
IAljaGlsZGtzcFswXSA9IDA7CQkJLyogZnAgKi8KIAljaGlsZGtzcFsxXSA9ICh1bnNpZ25l
ZCBsb25nKXJldF9mcm9tX2Zvcms7IC8qIGJsaW5rICovCiAKLQlpZiAodW5saWtlbHkocC0+
ZmxhZ3MgJiBQRl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9L
VEhSRUFEIHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJbWVtc2V0KGNfcmVncywgMCwgc2l6ZW9m
KHN0cnVjdCBwdF9yZWdzKSk7CiAKIAkJY19jYWxsZWUtPnIxMyA9IGt0aHJlYWRfYXJnOwpk
aWZmIC0tZ2l0IGEvYXJjaC9hcm0va2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvYXJtL2tlcm5l
bC9wcm9jZXNzLmMKaW5kZXggOWYxOTliMWU4MzgzLi4yNjQ3ZTQ4YzUzN2UgMTAwNjQ0Ci0t
LSBhL2FyY2gvYXJtL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC9hcm0va2VybmVsL3By
b2Nlc3MuYwpAQCAtMjQzLDcgKzI0Myw3IEBAIGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBs
b25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHN0YWNrX3N0YXJ0LAogCXRocmVhZC0+
Y3B1X2RvbWFpbiA9IGdldF9kb21haW4oKTsKICNlbmRpZgogCi0JaWYgKGxpa2VseSghKHAt
PmZsYWdzICYgUEZfS1RIUkVBRCkpKSB7CisJaWYgKGxpa2VseSghKHAtPmZsYWdzICYgKFBG
X0tUSFJFQUQgfCBQRl9JT19XT1JLRVIpKSkpIHsKIAkJKmNoaWxkcmVncyA9ICpjdXJyZW50
X3B0X3JlZ3MoKTsKIAkJY2hpbGRyZWdzLT5BUk1fcjAgPSAwOwogCQlpZiAoc3RhY2tfc3Rh
cnQpCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL2Fy
bTY0L2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggMjIyNzVkODUxOGViLi4zNjk2ZGJjYmZhODAg
MTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL2Fy
bTY0L2tlcm5lbC9wcm9jZXNzLmMKQEAgLTM5OCw3ICszOTgsNyBAQCBpbnQgY29weV90aHJl
YWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyBzdGFja19zdGFy
dCwKIAogCXB0cmF1dGhfdGhyZWFkX2luaXRfa2VybmVsKHApOwogCi0JaWYgKGxpa2VseSgh
KHAtPmZsYWdzICYgUEZfS1RIUkVBRCkpKSB7CisJaWYgKGxpa2VseSghKHAtPmZsYWdzICYg
KFBGX0tUSFJFQUQgfCBQRl9JT19XT1JLRVIpKSkpIHsKIAkJKmNoaWxkcmVncyA9ICpjdXJy
ZW50X3B0X3JlZ3MoKTsKIAkJY2hpbGRyZWdzLT5yZWdzWzBdID0gMDsKIApkaWZmIC0tZ2l0
IGEvYXJjaC9jc2t5L2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL2Nza3kva2VybmVsL3Byb2Nl
c3MuYwppbmRleCA2OWFmNmJjODdlNjQuLjNkMGNhMjJjZDBlMiAxMDA2NDQKLS0tIGEvYXJj
aC9jc2t5L2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC9jc2t5L2tlcm5lbC9wcm9jZXNz
LmMKQEAgLTQ5LDcgKzQ5LDcgQEAgaW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xv
bmVfZmxhZ3MsCiAJLyogc2V0dXAgdGhyZWFkLnNwIGZvciBzd2l0Y2hfdG8gISEhICovCiAJ
cC0+dGhyZWFkLnNwID0gKHVuc2lnbmVkIGxvbmcpY2hpbGRzdGFjazsKIAotCWlmICh1bmxp
a2VseShwLT5mbGFncyAmIFBGX0tUSFJFQUQpKSB7CisJaWYgKHVubGlrZWx5KHAtPmZsYWdz
ICYgKFBGX0tUSFJFQUQgfCBQRl9JT19XT1JLRVIpKSkgewogCQltZW1zZXQoY2hpbGRyZWdz
LCAwLCBzaXplb2Yoc3RydWN0IHB0X3JlZ3MpKTsKIAkJY2hpbGRzdGFjay0+cjE1ID0gKHVu
c2lnbmVkIGxvbmcpIHJldF9mcm9tX2tlcm5lbF90aHJlYWQ7CiAJCWNoaWxkc3RhY2stPnIx
MCA9IGt0aHJlYWRfYXJnOwpkaWZmIC0tZ2l0IGEvYXJjaC9oODMwMC9rZXJuZWwvcHJvY2Vz
cy5jIGIvYXJjaC9oODMwMC9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IGJjMTM2NGRiNThmZS4u
NDZiMTM0MmNlNTE1IDEwMDY0NAotLS0gYS9hcmNoL2g4MzAwL2tlcm5lbC9wcm9jZXNzLmMK
KysrIGIvYXJjaC9oODMwMC9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMTIsNyArMTEyLDcgQEAg
aW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxv
bmcgdXNwLAogCiAJY2hpbGRyZWdzID0gKHN0cnVjdCBwdF9yZWdzICopIChUSFJFQURfU0la
RSArIHRhc2tfc3RhY2tfcGFnZShwKSkgLSAxOwogCi0JaWYgKHVubGlrZWx5KHAtPmZsYWdz
ICYgUEZfS1RIUkVBRCkpIHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiAoUEZfS1RIUkVB
RCB8IFBGX0lPX1dPUktFUikpKSB7CiAJCW1lbXNldChjaGlsZHJlZ3MsIDAsIHNpemVvZihz
dHJ1Y3QgcHRfcmVncykpOwogCQljaGlsZHJlZ3MtPnJldHBjID0gKHVuc2lnbmVkIGxvbmcp
IHJldF9mcm9tX2tlcm5lbF90aHJlYWQ7CiAJCWNoaWxkcmVncy0+ZXI0ID0gdG9wc3RrOyAv
KiBhcmcgKi8KZGlmZiAtLWdpdCBhL2FyY2gvaGV4YWdvbi9rZXJuZWwvcHJvY2Vzcy5jIGIv
YXJjaC9oZXhhZ29uL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggNmE5ODBjYmE3YjI5Li5jNjEx
NjVjOTlhZTAgMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9rZXJuZWwvcHJvY2Vzcy5jCisr
KyBiL2FyY2gvaGV4YWdvbi9rZXJuZWwvcHJvY2Vzcy5jCkBAIC03Myw3ICs3Myw3IEBAIGlu
dCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25n
IHVzcCwgdW5zaWduZWQgbG9uZyBhcmcsCiAJCQkJCQkgICAgc2l6ZW9mKCpzcykpOwogCXNz
LT5sciA9ICh1bnNpZ25lZCBsb25nKXJldF9mcm9tX2Zvcms7CiAJcC0+dGhyZWFkLnN3aXRj
aF9zcCA9IHNzOwotCWlmICh1bmxpa2VseShwLT5mbGFncyAmIFBGX0tUSFJFQUQpKSB7CisJ
aWYgKHVubGlrZWx5KHAtPmZsYWdzICYgKFBGX0tUSFJFQUQgfCBQRl9JT19XT1JLRVIpKSkg
ewogCQltZW1zZXQoY2hpbGRyZWdzLCAwLCBzaXplb2Yoc3RydWN0IHB0X3JlZ3MpKTsKIAkJ
LyogcjI0IDwtIGZuLCByMjUgPC0gYXJnICovCiAJCXNzLT5yMjQgPSB1c3A7CmRpZmYgLS1n
aXQgYS9hcmNoL2lhNjQva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvaWE2NC9rZXJuZWwvcHJv
Y2Vzcy5jCmluZGV4IDcwNjQ5YTViM2U4OC4uODE1OWI3YWY1NTA5IDEwMDY0NAotLS0gYS9h
cmNoL2lhNjQva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL2lhNjQva2VybmVsL3Byb2Nl
c3MuYwpAQCAtMzM4LDcgKzMzOCw3IEBAIGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xv
bmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgdXNlcl9zdGFja19iYXNlLAogCiAJaWE2NF9kcm9w
X2ZwdShwKTsJLyogZG9uJ3QgcGljayB1cCBzdGFsZSBzdGF0ZSBmcm9tIGEgQ1BVJ3MgZnBo
ICovCiAKLQlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQRl9LVEhSRUFEKSkgeworCWlmICh1
bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhSRUFEIHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJ
aWYgKHVubGlrZWx5KCF1c2VyX3N0YWNrX2Jhc2UpKSB7CiAJCQkvKiBmb3JrX2lkbGUoKSBj
YWxsZWQgdXMgKi8KIAkJCXJldHVybiAwOwpkaWZmIC0tZ2l0IGEvYXJjaC9tNjhrL2tlcm5l
bC9wcm9jZXNzLmMgYi9hcmNoL202OGsva2VybmVsL3Byb2Nlc3MuYwppbmRleCAwODM1OWE2
ZTA1OGYuLmRhODNjYzgzZTc5MSAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL2tlcm5lbC9wcm9j
ZXNzLmMKKysrIGIvYXJjaC9tNjhrL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTE1Nyw3ICsxNTcs
NyBAQCBpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWdu
ZWQgbG9uZyB1c3AsIHVuc2lnbmVkIGxvbmcgYXJnLAogCSAqLwogCXAtPnRocmVhZC5mcyA9
IGdldF9mcygpLnNlZzsKIAotCWlmICh1bmxpa2VseShwLT5mbGFncyAmIFBGX0tUSFJFQUQp
KSB7CisJaWYgKHVubGlrZWx5KHAtPmZsYWdzICYgKFBGX0tUSFJFQUQgfCBQRl9JT19XT1JL
RVIpKSkgewogCQkvKiBrZXJuZWwgdGhyZWFkICovCiAJCW1lbXNldChmcmFtZSwgMCwgc2l6
ZW9mKHN0cnVjdCBmb3JrX2ZyYW1lKSk7CiAJCWZyYW1lLT5yZWdzLnNyID0gUFNfUzsKZGlm
ZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9taWNy
b2JsYXplL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggZjk5ODYwNzcxZmY0Li5lZTAwMGFlMTdl
MzkgMTAwNjQ0Ci0tLSBhL2FyY2gvbWljcm9ibGF6ZS9rZXJuZWwvcHJvY2Vzcy5jCisrKyBi
L2FyY2gvbWljcm9ibGF6ZS9rZXJuZWwvcHJvY2Vzcy5jCkBAIC01OSw3ICs1OSw3IEBAIGlu
dCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25n
IHVzcCwgdW5zaWduZWQgbG9uZyBhcmcsCiAJc3RydWN0IHB0X3JlZ3MgKmNoaWxkcmVncyA9
IHRhc2tfcHRfcmVncyhwKTsKIAlzdHJ1Y3QgdGhyZWFkX2luZm8gKnRpID0gdGFza190aHJl
YWRfaW5mbyhwKTsKIAotCWlmICh1bmxpa2VseShwLT5mbGFncyAmIFBGX0tUSFJFQUQpKSB7
CisJaWYgKHVubGlrZWx5KHAtPmZsYWdzICYgKFBGX0tUSFJFQUQgfCBQRl9JT19XT1JLRVIp
KSkgewogCQkvKiBpZiB3ZSdyZSBjcmVhdGluZyBhIG5ldyBrZXJuZWwgdGhyZWFkIHRoZW4g
anVzdCB6ZXJvaW5nIGFsbAogCQkgKiB0aGUgcmVnaXN0ZXJzLiBUaGF0J3MgT0sgZm9yIGEg
YnJhbmQgbmV3IHRocmVhZC4qLwogCQltZW1zZXQoY2hpbGRyZWdzLCAwLCBzaXplb2Yoc3Ry
dWN0IHB0X3JlZ3MpKTsKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9rZXJuZWwvcHJvY2Vzcy5j
IGIvYXJjaC9taXBzL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggNzVlYmQ4ZDdiZDVkLi45OGVj
YWY2ZjNlZGIgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9rZXJuZWwvcHJvY2Vzcy5jCisrKyBi
L2FyY2gvbWlwcy9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMzUsNyArMTM1LDcgQEAgaW50IGNv
cHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgdXNw
LAogCS8qICBQdXQgdGhlIHN0YWNrIGFmdGVyIHRoZSBzdHJ1Y3QgcHRfcmVncy4gICovCiAJ
Y2hpbGRrc3AgPSAodW5zaWduZWQgbG9uZykgY2hpbGRyZWdzOwogCXAtPnRocmVhZC5jcDBf
c3RhdHVzID0gKHJlYWRfYzBfc3RhdHVzKCkgJiB+KFNUMF9DVTJ8U1QwX0NVMSkpIHwgU1Qw
X0tFUk5FTF9DVU1BU0s7Ci0JaWYgKHVubGlrZWx5KHAtPmZsYWdzICYgUEZfS1RIUkVBRCkp
IHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0lPX1dPUktF
UikpKSB7CiAJCS8qIGtlcm5lbCB0aHJlYWQgKi8KIAkJdW5zaWduZWQgbG9uZyBzdGF0dXMg
PSBwLT50aHJlYWQuY3AwX3N0YXR1czsKIAkJbWVtc2V0KGNoaWxkcmVncywgMCwgc2l6ZW9m
KHN0cnVjdCBwdF9yZWdzKSk7CmRpZmYgLS1naXQgYS9hcmNoL25kczMyL2tlcm5lbC9wcm9j
ZXNzLmMgYi9hcmNoL25kczMyL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggZTAxYWQ1ZDE3MjI0
Li5jMTMyN2U1NTJlYzYgMTAwNjQ0Ci0tLSBhL2FyY2gvbmRzMzIva2VybmVsL3Byb2Nlc3Mu
YworKysgYi9hcmNoL25kczMyL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTE1Niw3ICsxNTYsNyBA
QCBpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQg
bG9uZyBzdGFja19zdGFydCwKIAogCW1lbXNldCgmcC0+dGhyZWFkLmNwdV9jb250ZXh0LCAw
LCBzaXplb2Yoc3RydWN0IGNwdV9jb250ZXh0KSk7CiAKLQlpZiAodW5saWtlbHkocC0+Zmxh
Z3MgJiBQRl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhS
RUFEIHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJbWVtc2V0KGNoaWxkcmVncywgMCwgc2l6ZW9m
KHN0cnVjdCBwdF9yZWdzKSk7CiAJCS8qIGtlcm5lbCB0aHJlYWQgZm4gKi8KIAkJcC0+dGhy
ZWFkLmNwdV9jb250ZXh0LnI2ID0gc3RhY2tfc3RhcnQ7CmRpZmYgLS1naXQgYS9hcmNoL25p
b3MyL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL25pb3MyL2tlcm5lbC9wcm9jZXNzLmMKaW5k
ZXggNTBiNGViMTlhNmNjLi5jNWY5MTZjYTY4NDUgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIv
a2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL25pb3MyL2tlcm5lbC9wcm9jZXNzLmMKQEAg
LTEwOSw3ICsxMDksNyBAQCBpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9m
bGFncywgdW5zaWduZWQgbG9uZyB1c3AsIHVuc2lnbmVkIGxvbmcgYXJnLAogCXN0cnVjdCBz
d2l0Y2hfc3RhY2sgKmNoaWxkc3RhY2sgPQogCQkoKHN0cnVjdCBzd2l0Y2hfc3RhY2sgKilj
aGlsZHJlZ3MpIC0gMTsKIAotCWlmICh1bmxpa2VseShwLT5mbGFncyAmIFBGX0tUSFJFQUQp
KSB7CisJaWYgKHVubGlrZWx5KHAtPmZsYWdzICYgKFBGX0tUSFJFQUQgfCBQRl9JT19XT1JL
RVIpKSkgewogCQltZW1zZXQoY2hpbGRzdGFjaywgMCwKIAkJCXNpemVvZihzdHJ1Y3Qgc3dp
dGNoX3N0YWNrKSArIHNpemVvZihzdHJ1Y3QgcHRfcmVncykpOwogCmRpZmYgLS1naXQgYS9h
cmNoL29wZW5yaXNjL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL29wZW5yaXNjL2tlcm5lbC9w
cm9jZXNzLmMKaW5kZXggM2M5ODcyOGNjZTI0Li44M2ZiYTRlZTQ0NTMgMTAwNjQ0Ci0tLSBh
L2FyY2gvb3BlbnJpc2Mva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL29wZW5yaXNjL2tl
cm5lbC9wcm9jZXNzLmMKQEAgLTE2Nyw3ICsxNjcsNyBAQCBjb3B5X3RocmVhZCh1bnNpZ25l
ZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVzcCwgdW5zaWduZWQgbG9uZyBh
cmcsCiAJc3AgLT0gc2l6ZW9mKHN0cnVjdCBwdF9yZWdzKTsKIAlrcmVncyA9IChzdHJ1Y3Qg
cHRfcmVncyAqKXNwOwogCi0JaWYgKHVubGlrZWx5KHAtPmZsYWdzICYgUEZfS1RIUkVBRCkp
IHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0lPX1dPUktF
UikpKSB7CiAJCW1lbXNldChrcmVncywgMCwgc2l6ZW9mKHN0cnVjdCBwdF9yZWdzKSk7CiAJ
CWtyZWdzLT5ncHJbMjBdID0gdXNwOyAvKiBmbiwga2VybmVsIHRocmVhZCAqLwogCQlrcmVn
cy0+Z3ByWzIyXSA9IGFyZzsKZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3Yva2VybmVsL3Byb2Nl
c3MuYyBiL2FyY2gvcmlzY3Yva2VybmVsL3Byb2Nlc3MuYwppbmRleCA5YThiMmU2MGFkY2Yu
Ljc4NjgwNTBmZjQyNiAxMDA2NDQKLS0tIGEvYXJjaC9yaXNjdi9rZXJuZWwvcHJvY2Vzcy5j
CisrKyBiL2FyY2gvcmlzY3Yva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTE0LDcgKzExNCw3IEBA
IGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBs
b25nIHVzcCwgdW5zaWduZWQgbG9uZyBhcmcsCiAJbWVtc2V0KCZwLT50aHJlYWQucywgMCwg
c2l6ZW9mKHAtPnRocmVhZC5zKSk7CiAKIAkvKiBwLT50aHJlYWQgaG9sZHMgY29udGV4dCB0
byBiZSByZXN0b3JlZCBieSBfX3N3aXRjaF90bygpICovCi0JaWYgKHVubGlrZWx5KHAtPmZs
YWdzICYgUEZfS1RIUkVBRCkpIHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiAoUEZfS1RI
UkVBRCB8IFBGX0lPX1dPUktFUikpKSB7CiAJCS8qIEtlcm5lbCB0aHJlYWQgKi8KIAkJbWVt
c2V0KGNoaWxkcmVncywgMCwgc2l6ZW9mKHN0cnVjdCBwdF9yZWdzKSk7CiAJCWNoaWxkcmVn
cy0+Z3AgPSBncF9pbl9nbG9iYWw7CmRpZmYgLS1naXQgYS9hcmNoL3MzOTAva2VybmVsL3By
b2Nlc3MuYyBiL2FyY2gvczM5MC9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IDEzN2ExNzBmNDdk
NC4uYmQ3ZGE0MDQ5NzA3IDEwMDY0NAotLS0gYS9hcmNoL3MzOTAva2VybmVsL3Byb2Nlc3Mu
YworKysgYi9hcmNoL3MzOTAva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTI3LDcgKzEyNyw3IEBA
IGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBs
b25nIG5ld19zdGFja3AsCiAJZnJhbWUtPnNmLmdwcnNbOV0gPSAodW5zaWduZWQgbG9uZykg
ZnJhbWU7CiAKIAkvKiBTdG9yZSBhY2Nlc3MgcmVnaXN0ZXJzIHRvIGtlcm5lbCBzdGFjayBv
ZiBuZXcgcHJvY2Vzcy4gKi8KLQlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQRl9LVEhSRUFE
KSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhSRUFEIHwgUEZfSU9fV09S
S0VSKSkpIHsKIAkJLyoga2VybmVsIHRocmVhZCAqLwogCQltZW1zZXQoJmZyYW1lLT5jaGls
ZHJlZ3MsIDAsIHNpemVvZihzdHJ1Y3QgcHRfcmVncykpOwogCQlmcmFtZS0+Y2hpbGRyZWdz
LnBzdy5tYXNrID0gUFNXX0tFUk5FTF9CSVRTIHwgUFNXX01BU0tfREFUIHwKZGlmZiAtLWdp
dCBhL2FyY2gvc2gva2VybmVsL3Byb2Nlc3NfMzIuYyBiL2FyY2gvc2gva2VybmVsL3Byb2Nl
c3NfMzIuYwppbmRleCA4MGE1ZDFjNjZhNTEuLjFhYTUwOGViMDgyMyAxMDA2NDQKLS0tIGEv
YXJjaC9zaC9rZXJuZWwvcHJvY2Vzc18zMi5jCisrKyBiL2FyY2gvc2gva2VybmVsL3Byb2Nl
c3NfMzIuYwpAQCAtMTE0LDcgKzExNCw3IEBAIGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBs
b25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVzcCwgdW5zaWduZWQgbG9uZyBhcmcs
CiAKIAljaGlsZHJlZ3MgPSB0YXNrX3B0X3JlZ3MocCk7CiAJcC0+dGhyZWFkLnNwID0gKHVu
c2lnbmVkIGxvbmcpIGNoaWxkcmVnczsKLQlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiBQRl9L
VEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhSRUFEIHwgUEZf
SU9fV09SS0VSKSkpIHsKIAkJbWVtc2V0KGNoaWxkcmVncywgMCwgc2l6ZW9mKHN0cnVjdCBw
dF9yZWdzKSk7CiAJCXAtPnRocmVhZC5wYyA9ICh1bnNpZ25lZCBsb25nKSByZXRfZnJvbV9r
ZXJuZWxfdGhyZWFkOwogCQljaGlsZHJlZ3MtPnJlZ3NbNF0gPSBhcmc7CmRpZmYgLS1naXQg
YS9hcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzMyLmMgYi9hcmNoL3NwYXJjL2tlcm5lbC9w
cm9jZXNzXzMyLmMKaW5kZXggYTAyMzYzNzM1OTE1Li4wZjljNjA2ZTFlNzggMTAwNjQ0Ci0t
LSBhL2FyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3NfMzIuYworKysgYi9hcmNoL3NwYXJjL2tl
cm5lbC9wcm9jZXNzXzMyLmMKQEAgLTMwOSw3ICszMDksNyBAQCBpbnQgY29weV90aHJlYWQo
dW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyBzcCwgdW5zaWduZWQg
bG9uZyBhcmcsCiAJdGktPmtzcCA9ICh1bnNpZ25lZCBsb25nKSBuZXdfc3RhY2s7CiAJcC0+
dGhyZWFkLmtyZWdzID0gY2hpbGRyZWdzOwogCi0JaWYgKHVubGlrZWx5KHAtPmZsYWdzICYg
UEZfS1RIUkVBRCkpIHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8
IFBGX0lPX1dPUktFUikpKSB7CiAJCWV4dGVybiBpbnQgbndpbmRvd3M7CiAJCXVuc2lnbmVk
IGxvbmcgcHNyOwogCQltZW1zZXQobmV3X3N0YWNrLCAwLCBTVEFDS0ZSQU1FX1NaICsgVFJB
Q0VSRUdfU1opOwpkaWZmIC0tZ2l0IGEvYXJjaC9zcGFyYy9rZXJuZWwvcHJvY2Vzc182NC5j
IGIvYXJjaC9zcGFyYy9rZXJuZWwvcHJvY2Vzc182NC5jCmluZGV4IDZmOGM3ODIyZmMwNi4u
N2FmZDBhODU5YTc4IDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzY0
LmMKKysrIGIvYXJjaC9zcGFyYy9rZXJuZWwvcHJvY2Vzc182NC5jCkBAIC01OTcsNyArNTk3
LDcgQEAgaW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2ln
bmVkIGxvbmcgc3AsIHVuc2lnbmVkIGxvbmcgYXJnLAogCQkJCSAgICAgICBzaXplb2Yoc3Ry
dWN0IHNwYXJjX3N0YWNrZikpOwogCXQtPmZwc2F2ZWRbMF0gPSAwOwogCi0JaWYgKHVubGlr
ZWx5KHAtPmZsYWdzICYgUEZfS1RIUkVBRCkpIHsKKwlpZiAodW5saWtlbHkocC0+ZmxhZ3Mg
JiAoUEZfS1RIUkVBRCB8IFBGX0lPX1dPUktFUikpKSB7CiAJCW1lbXNldChjaGlsZF90cmFw
X2ZyYW1lLCAwLCBjaGlsZF9zdGFja19zeik7CiAJCV9fdGhyZWFkX2ZsYWdfYnl0ZV9wdHIo
dClbVElfRkxBR19CWVRFX0NXUF0gPSAKIAkJCShjdXJyZW50X3B0X3JlZ3MoKS0+dHN0YXRl
ICsgMSkgJiBUU1RBVEVfQ1dQOwpkaWZmIC0tZ2l0IGEvYXJjaC91bS9rZXJuZWwvcHJvY2Vz
cy5jIGIvYXJjaC91bS9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IDA2N2ZiODVmYmYxMS4uZTZj
OWIxMWIyMDMzIDEwMDY0NAotLS0gYS9hcmNoL3VtL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIv
YXJjaC91bS9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xNTcsNyArMTU3LDcgQEAgaW50IGNvcHlf
dGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsCiAJ
CXVuc2lnbmVkIGxvbmcgYXJnLCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKiBwLCB1bnNpZ25lZCBs
b25nIHRscykKIHsKIAl2b2lkICgqaGFuZGxlcikodm9pZCk7Ci0JaW50IGt0aHJlYWQgPSBj
dXJyZW50LT5mbGFncyAmIFBGX0tUSFJFQUQ7CisJaW50IGt0aHJlYWQgPSBjdXJyZW50LT5m
bGFncyAmIChQRl9LVEhSRUFEIHwgUEZfSU9fV09SS0VSKTsKIAlpbnQgcmV0ID0gMDsKIAog
CXAtPnRocmVhZCA9IChzdHJ1Y3QgdGhyZWFkX3N0cnVjdCkgSU5JVF9USFJFQUQ7CmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC94ODYva2VybmVsL3By
b2Nlc3MuYwppbmRleCAzODNhZmNjMTA5OGIuLjRkNDZjNTJkOWMwNSAxMDA2NDQKLS0tIGEv
YXJjaC94ODYva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL3g4Ni9rZXJuZWwvcHJvY2Vz
cy5jCkBAIC0xNjIsNyArMTYyLDcgQEAgaW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcg
Y2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsIHVuc2lnbmVkIGxvbmcgYXJnLAogI2Vu
ZGlmCiAKIAkvKiBLZXJuZWwgdGhyZWFkID8gKi8KLQlpZiAodW5saWtlbHkocC0+ZmxhZ3Mg
JiBQRl9LVEhSRUFEKSkgeworCWlmICh1bmxpa2VseShwLT5mbGFncyAmIChQRl9LVEhSRUFE
IHwgUEZfSU9fV09SS0VSKSkpIHsKIAkJbWVtc2V0KGNoaWxkcmVncywgMCwgc2l6ZW9mKHN0
cnVjdCBwdF9yZWdzKSk7CiAJCWt0aHJlYWRfZnJhbWVfaW5pdChmcmFtZSwgc3AsIGFyZyk7
CiAJCXJldHVybiAwOwpkaWZmIC0tZ2l0IGEvYXJjaC94dGVuc2Eva2VybmVsL3Byb2Nlc3Mu
YyBiL2FyY2gveHRlbnNhL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggMzk3YTdkZTU2Mzc3Li45
NTM0ZWY1MTVkNzQgMTAwNjQ0Ci0tLSBhL2FyY2gveHRlbnNhL2tlcm5lbC9wcm9jZXNzLmMK
KysrIGIvYXJjaC94dGVuc2Eva2VybmVsL3Byb2Nlc3MuYwpAQCAtMjE3LDcgKzIxNyw3IEBA
IGludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBs
b25nIHVzcF90aHJlYWRfZm4sCiAKIAlwLT50aHJlYWQuc3AgPSAodW5zaWduZWQgbG9uZylj
aGlsZHJlZ3M7CiAKLQlpZiAoIShwLT5mbGFncyAmIFBGX0tUSFJFQUQpKSB7CisJaWYgKCEo
cC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0lPX1dPUktFUikpKSB7CiAJCXN0cnVjdCBw
dF9yZWdzICpyZWdzID0gY3VycmVudF9wdF9yZWdzKCk7CiAJCXVuc2lnbmVkIGxvbmcgdXNw
ID0gdXNwX3RocmVhZF9mbiA/CiAJCQl1c3BfdGhyZWFkX2ZuIDogcmVncy0+YXJlZ1sxXTsK
LS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0048-entry-kvm-Exit-to-user-mode-when-TIF_NOTIFY_SIGNAL-i.patch"
Content-Disposition: attachment;
 filename*0="0048-entry-kvm-Exit-to-user-mode-when-TIF_NOTIFY_SIGNAL-i.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA5NjNmZWFlYmRkMmVjMDk0MjRkOGQ3ZGRhMDE0YzQ4NTljY2UxOWM1IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBTZXRoIEZvcnNoZWUgPHNmb3JzaGVlQGRpZ2l0YWxv
Y2Vhbi5jb20+CkRhdGU6IFdlZCwgNCBNYXkgMjAyMiAxMzowODo0MCAtMDUwMApTdWJqZWN0
OiBbUEFUQ0ggNDgvNjNdIGVudHJ5L2t2bTogRXhpdCB0byB1c2VyIG1vZGUgd2hlbiBUSUZf
Tk9USUZZX1NJR05BTCBpcwogc2V0CgpbIFVwc3RyZWFtIGNvbW1pdCAzZTY4NDkwM2E4NTc0
ZmZjOTQ3NWZkZjEzYzQ3ODBhN2FkYjUwNmFkIF0KCkEgbGl2ZXBhdGNoIHRyYW5zaXRpb24g
bWF5IHN0YWxsIGluZGVmaW5pdGVseSB3aGVuIGEga3ZtIHZDUFUgaXMgaGVhdmlseQpsb2Fk
ZWQuIFRvIHRoZSBob3N0LCB0aGUgdkNQVSB0YXNrIGlzIGEgdXNlciB0aHJlYWQgd2hpY2gg
aXMgc3BlbmRpbmcgYQp2ZXJ5IGxvbmcgdGltZSBpbiB0aGUgaW9jdGwoS1ZNX1JVTikgc3lz
Y2FsbC4gRHVyaW5nIGxpdmVwYXRjaAp0cmFuc2l0aW9uLCBzZXRfbm90aWZ5X3NpZ25hbCgp
IHdpbGwgYmUgY2FsbGVkIG9uIHN1Y2ggdGFza3MgdG8KaW50ZXJydXB0IHRoZSBzeXNjYWxs
IHNvIHRoYXQgdGhlIHRhc2sgY2FuIGJlIHRyYW5zaXRpb25lZC4gVGhpcwppbnRlcnJ1cHRz
IGd1ZXN0IGV4ZWN1dGlvbiwgYnV0IHdoZW4geGZlcl90b19ndWVzdF9tb2RlX3dvcmsoKSBz
ZWVzIHRoYXQKVElGX05PVElGWV9TSUdOQUwgaXMgc2V0IGJ1dCBub3QgVElGX1NJR1BFTkRJ
TkcgaXQgY29uY2x1ZGVzIHRoYXQgYW4KZXhpdCB0byB1c2VyIG1vZGUgaXMgdW5uZWNlc3Nh
cnksIGFuZCBndWVzdCBleGVjdXRpb24gaXMgcmVzdW1lZCB3aXRob3V0CnRyYW5zaXRpb25p
bmcgdGhlIHRhc2sgZm9yIHRoZSBsaXZlcGF0Y2guCgpUaGlzIGhhbmRsaW5nIG9mIFRJRl9O
T1RJRllfU0lHTkFMIGlzIGluY29ycmVjdCwgYXMgc2V0X25vdGlmeV9zaWduYWwoKQppcyBl
eHBlY3RlZCB0byBicmVhayB0YXNrcyBvdXQgb2YgaW50ZXJydXB0aWJsZSBrZXJuZWwgbG9v
cHMgYW5kIGNhdXNlCnRoZW0gdG8gcmV0dXJuIHRvIHVzZXJzcGFjZS4gQ2hhbmdlIHhmZXJf
dG9fZ3Vlc3RfbW9kZV93b3JrKCkgdG8gaGFuZGxlClRJRl9OT1RJRllfU0lHTkFMIHRoZSBz
YW1lIGFzIFRJRl9TSUdQRU5ESU5HLCBzaWduYWxpbmcgdG8gdGhlIHZDUFUgcnVuCmxvb3Ag
dGhhdCBhbiBleGl0IHRvIHVzZXJwc2FjZSBpcyBuZWVkZWQuIEFueSBwZW5kaW5nIHRhc2tf
d29yayB3aWxsIGJlCnJ1biB3aGVuIGdldF9zaWduYWwoKSBpcyBjYWxsZWQgZnJvbSBleGl0
X3RvX3VzZXJfbW9kZV9sb29wKCksIHNvIHRoZXJlCmlzIG5vIGxvbmdlciBhbnkgbmVlZCB0
byBydW4gdGFzayB3b3JrIGZyb20geGZlcl90b19ndWVzdF9tb2RlX3dvcmsoKS4KClN1Z2dl
c3RlZC1ieTogIkVyaWMgVy4gQmllZGVybWFuIiA8ZWJpZWRlcm1AeG1pc3Npb24uY29tPgpD
YzogUGV0ciBNbGFkZWsgPHBtbGFkZWtAc3VzZS5jb20+ClNpZ25lZC1vZmYtYnk6IFNldGgg
Rm9yc2hlZSA8c2ZvcnNoZWVAZGlnaXRhbG9jZWFuLmNvbT4KTWVzc2FnZS1JZDogPDIwMjIw
NTA0MTgwODQwLjI5MDcyOTYtMS1zZm9yc2hlZUBkaWdpdGFsb2NlYW4uY29tPgpTaWduZWQt
b2ZmLWJ5OiBQYW9sbyBCb256aW5pIDxwYm9uemluaUByZWRoYXQuY29tPgotLS0KIGtlcm5l
bC9lbnRyeS9rdm0uYyB8IDUgKy0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlvbigr
KSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9rZXJuZWwvZW50cnkva3ZtLmMgYi9r
ZXJuZWwvZW50cnkva3ZtLmMKaW5kZXggMDQ5ZmQwNmI0YzNkLi43Yjk0Njg0N2JlNzggMTAw
NjQ0Ci0tLSBhL2tlcm5lbC9lbnRyeS9rdm0uYworKysgYi9rZXJuZWwvZW50cnkva3ZtLmMK
QEAgLTgsMTAgKzgsNyBAQCBzdGF0aWMgaW50IHhmZXJfdG9fZ3Vlc3RfbW9kZV93b3JrKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgbG9uZyB0aV93b3JrKQogCWRvIHsKIAkJ
aW50IHJldDsKIAotCQlpZiAodGlfd29yayAmIF9USUZfTk9USUZZX1NJR05BTCkKLQkJCXRy
YWNlaG9va19ub3RpZnlfc2lnbmFsKCk7Ci0KLQkJaWYgKHRpX3dvcmsgJiBfVElGX1NJR1BF
TkRJTkcpIHsKKwkJaWYgKHRpX3dvcmsgJiAoX1RJRl9TSUdQRU5ESU5HIHwgX1RJRl9OT1RJ
RllfU0lHTkFMKSkgewogCQkJa3ZtX2hhbmRsZV9zaWduYWxfZXhpdCh2Y3B1KTsKIAkJCXJl
dHVybiAtRUlOVFI7CiAJCX0KLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0047-kernel-allow-fork-with-TIF_NOTIFY_SIGNAL-pending.patch"
Content-Disposition: attachment;
 filename*0="0047-kernel-allow-fork-with-TIF_NOTIFY_SIGNAL-pending.patch"
Content-Transfer-Encoding: base64

RnJvbSBiNmVhNDlhMTI5M2FiNjNlZjY1NTUzYzU3NmI4ZDkxOWJkZDNkNDJlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMjIgTWFyIDIwMjEgMDk6Mzk6MTIgLTA2MDAKU3ViamVjdDogW1BBVENIIDQ3
LzYzXSBrZXJuZWw6IGFsbG93IGZvcmsgd2l0aCBUSUZfTk9USUZZX1NJR05BTCBwZW5kaW5n
CgpbIFVwc3RyZWFtIGNvbW1pdCA2NmFlMGQxZTJkOWZlNmVjNzBlNzNmY2ZkY2Y0YjM5MGUy
NzFjMWFjIF0KCmZvcmsoKSBmYWlscyBpZiBzaWduYWxfcGVuZGluZygpIGlzIHRydWUsIGJ1
dCB0aGVyZSBhcmUgdHdvIGNvbmRpdGlvbnMKdGhhdCBjYW4gbGVhZCB0byB0aGF0OgoKMSkg
QW4gYWN0dWFsIHNpZ25hbCBpcyBwZW5kaW5nLiBXZSB3YW50IGZvcmsgdG8gZmFpbCBmb3Ig
dGhhdCBvbmUsIGxpa2UKICAgd2UgYWx3YXlzIGhhdmUuCgoyKSBUSUZfTk9USUZZX1NJR05B
TCBpcyBwZW5kaW5nLCBiZWNhdXNlIHRoZSB0YXNrIGhhcyBwZW5kaW5nIHRhc2tfd29yay4K
ICAgV2UgZG9uJ3QgbmVlZCB0byBtYWtlIGl0IGZhaWwgZm9yIHRoYXQgY2FzZS4KCkFsbG93
IGZvcmsoKSB0byBwcm9jZWVkIGlmIGp1c3QgdGFza193b3JrIGlzIHBlbmRpbmcsIGJ5IGNo
YW5naW5nIHRoZQpzaWduYWxfcGVuZGluZygpIGNoZWNrIHRvIHRhc2tfc2lncGVuZGluZygp
LgoKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGtl
cm5lbC9mb3JrLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEg
ZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9rZXJuZWwvZm9yay5jIGIva2VybmVsL2Zvcmsu
YwppbmRleCAyNTJhNDBmMTRmNzIuLmI1Y2Q1Y2RkM2U2NyAxMDA2NDQKLS0tIGEva2VybmVs
L2ZvcmsuYworKysgYi9rZXJuZWwvZm9yay5jCkBAIC0xOTQyLDcgKzE5NDIsNyBAQCBzdGF0
aWMgX19sYXRlbnRfZW50cm9weSBzdHJ1Y3QgdGFza19zdHJ1Y3QgKmNvcHlfcHJvY2VzcygK
IAlyZWNhbGNfc2lncGVuZGluZygpOwogCXNwaW5fdW5sb2NrX2lycSgmY3VycmVudC0+c2ln
aGFuZC0+c2lnbG9jayk7CiAJcmV0dmFsID0gLUVSRVNUQVJUTk9JTlRSOwotCWlmIChzaWdu
YWxfcGVuZGluZyhjdXJyZW50KSkKKwlpZiAodGFza19zaWdwZW5kaW5nKGN1cnJlbnQpKQog
CQlnb3RvIGZvcmtfb3V0OwogCiAJcmV0dmFsID0gLUVOT01FTTsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0046-coredump-Limit-what-can-interrupt-coredumps.patch"
Content-Disposition: attachment;
 filename="0046-coredump-Limit-what-can-interrupt-coredumps.patch"
Content-Transfer-Encoding: base64

RnJvbSA0Mjg3NjBkMTAxYjk4YWYxZTc2NzU4ODIzMzdkY2FkN2M2Nzg2ZDg3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiAiRXJpYyBXLiBCaWVkZXJtYW4iIDxlYmllZGVybUB4
bWlzc2lvbi5jb20+CkRhdGU6IFRodSwgMTAgSnVuIDIwMjEgMTU6MTE6MTEgLTA1MDAKU3Vi
amVjdDogW1BBVENIIDQ2LzYzXSBjb3JlZHVtcDogTGltaXQgd2hhdCBjYW4gaW50ZXJydXB0
IGNvcmVkdW1wcwoKWyBVcHN0cmVhbSBjb21taXQgMDZhZjg2Nzk0NDlkNGVkMjgyZGYxMzE5
MWZjNTJkNWJhMjhlYzUzNiBdCgpPbGl2aWVyIExhbmdsb2lzIGhhcyBiZWVuIHN0cnVnZ2xp
bmcgd2l0aCBjb3JlZHVtcHMgYmVpbmcgaW5jb21wbGV0ZWx5IHdyaXR0ZW4gaW4KcHJvY2Vz
c2VzIHVzaW5nIGlvX3VyaW5nLgoKT2xpdmllciBMYW5nbG9pcyA8b2xpdmllckB0cmlsbGlv
bjAxLmNvbT4gd3JpdGVzOgo+IGlvX3VyaW5nIGlzIGEgYmlnIHVzZXIgb2YgdGFza193b3Jr
IGFuZCBhbnkgZXZlbnQgdGhhdCBpb191cmluZyBtYWRlIGEKPiB0YXNrIHdhaXRpbmcgZm9y
IHRoYXQgb2NjdXJzIGR1cmluZyB0aGUgY29yZSBkdW1wIGdlbmVyYXRpb24gd2lsbAo+IGdl
bmVyYXRlIGEgVElGX05PVElGWV9TSUdOQUwuCj4KPiBIZXJlIGFyZSB0aGUgZGV0YWlsZWQg
c3RlcHMgb2YgdGhlIHByb2JsZW06Cj4gMS4gaW9fdXJpbmcgY2FsbHMgdmZzX3BvbGwoKSB0
byBpbnN0YWxsIGEgdGFzayB0byBhIGZpbGUgd2FpdCBxdWV1ZQo+ICAgIHdpdGggaW9fYXN5
bmNfd2FrZSgpIGFzIHRoZSB3YWtldXAgZnVuY3Rpb24gY2IgZnJvbSBpb19hcm1fcG9sbF9o
YW5kbGVyKCkKPiAyLiB3YWtldXAgZnVuY3Rpb24gZW5kcyB1cCBjYWxsaW5nIHRhc2tfd29y
a19hZGQoKSB3aXRoIFRXQV9TSUdOQUwKPiAzLiB0YXNrX3dvcmtfYWRkKCkgc2V0cyB0aGUg
VElGX05PVElGWV9TSUdOQUwgYml0IGJ5IGNhbGxpbmcKPiAgICBzZXRfbm90aWZ5X3NpZ25h
bCgpCgpUaGUgY29yZWR1bXAgY29kZSBkZWxpYmVyYXRlbHkgc3VwcG9ydHMgYmVpbmcgaW50
ZXJydXB0ZWQgYnkgU0lHS0lMTCwKYW5kIGRlcGVuZHMgdXBvbiBwcmVwYXJlX3NpZ25hbCB0
byBmaWx0ZXIgb3V0IGFsbCBvdGhlciBzaWduYWxzLiAgIE5vdwp0aGF0IHNpZ25hbF9wZW5k
aW5nIGluY2x1ZGVzIHdha2UgdXBzIGZvciBUSUZfTk9USUZZX1NJR05BTCB0aGlzIGhhY2sK
aW4gZHVtcF9lbWl0dGVkIGJ5IHRoZSBjb3JlZHVtcCBjb2RlIG5vIGxvbmdlciB3b3Jrcy4K
Ck1ha2UgdGhlIGNvcmVkdW1wIGNvZGUgbW9yZSByb2J1c3QgYnkgZXhwbGljaXRseSB0ZXN0
aW5nIGZvciBhbGwgb2YKdGhlIHdha2V1cCBjb25kaXRpb25zIHRoZSBjb3JlZHVtcCBjb2Rl
IHN1cHBvcnRzLiAgVGhpcyBwcmV2ZW50cwpuZXcgd2FrZXVwIGNvbmRpdGlvbnMgZnJvbSBi
cmVha2luZyB0aGUgY29yZWR1bXAgY29kZSwgYXMgd2VsbAphcyBmaXhpbmcgdGhlIGN1cnJl
bnQgaXNzdWUuCgpUaGUgZmlsZXN5c3RlbSBjb2RlIHRoYXQgdGhlIGNvcmVkdW1wIGNvZGUg
dXNlcyBhbHJlYWR5IGxpbWl0cwppdHNlbGYgdG8gb25seSBhYm9ydGluZyBvbiBmYXRhbF9z
aWduYWxfcGVuZGluZy4gIFNvIGl0IHNob3VsZApub3QgZGV2ZWxvcCBzdXJwcmlzaW5nIHdh
a2UtdXAgcmVhc29ucyBlaXRoZXIuCgp2MjogRG9uJ3QgcmVtb3ZlIHRoZSBub3cgdW5uZWNl
c3NhcnkgY29kZSBpbiBwcmVwYXJlX3NpZ25hbC4KCkNjOiBzdGFibGVAdmdlci5rZXJuZWwu
b3JnCkZpeGVzOiAxMmRiOGI2OTAwMTAgKCJlbnRyeTogQWRkIHN1cHBvcnQgZm9yIFRJRl9O
T1RJRllfU0lHTkFMIikKUmVwb3J0ZWQtYnk6IE9saXZpZXIgTGFuZ2xvaXMgPG9saXZpZXJA
dHJpbGxpb24wMS5jb20+ClNpZ25lZC1vZmYtYnk6ICJFcmljIFcuIEJpZWRlcm1hbiIgPGVi
aWVkZXJtQHhtaXNzaW9uLmNvbT4KU2lnbmVkLW9mZi1ieTogTGludXMgVG9ydmFsZHMgPHRv
cnZhbGRzQGxpbnV4LWZvdW5kYXRpb24ub3JnPgotLS0KIGZzL2NvcmVkdW1wLmMgfCAyICst
CiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYg
LS1naXQgYS9mcy9jb3JlZHVtcC5jIGIvZnMvY29yZWR1bXAuYwppbmRleCBlZGJhZjYxMTI1
YzkuLjlkOTFlODMxZWQwYiAxMDA2NDQKLS0tIGEvZnMvY29yZWR1bXAuYworKysgYi9mcy9j
b3JlZHVtcC5jCkBAIC01MjMsNyArNTIzLDcgQEAgc3RhdGljIGJvb2wgZHVtcF9pbnRlcnJ1
cHRlZCh2b2lkKQogCSAqIGJ1dCB0aGVuIHdlIG5lZWQgdG8gdGVhY2ggZHVtcF93cml0ZSgp
IHRvIHJlc3RhcnQgYW5kIGNsZWFyCiAJICogVElGX1NJR1BFTkRJTkcuCiAJICovCi0JcmV0
dXJuIHNpZ25hbF9wZW5kaW5nKGN1cnJlbnQpOworCXJldHVybiBmYXRhbF9zaWduYWxfcGVu
ZGluZyhjdXJyZW50KSB8fCBmcmVlemluZyhjdXJyZW50KTsKIH0KIAogc3RhdGljIHZvaWQg
d2FpdF9mb3JfZHVtcF9oZWxwZXJzKHN0cnVjdCBmaWxlICpmaWxlKQotLSAKMi4zOS4wCgo=

--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0045-kernel-remove-checking-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0045-kernel-remove-checking-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSAxNjAyMWFjZjk1Y2VjMGFkYTkwZGFlMmI4NDA5YWMyMzRjNjc4ZjNiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNjowNDozOSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggNDUv
NjNdIGtlcm5lbDogcmVtb3ZlIGNoZWNraW5nIGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBV
cHN0cmVhbSBjb21taXQgZTI5NmRjNDk5NmI4MDk0Y2NkZTQ1ZDE5MDkwZDgwNGM0MTAzNTEz
ZSBdCgpJdCdzIGF2YWlsYWJsZSBldmVyeXdoZXJlIG5vdywgbm8gbmVlZCB0byBjaGVjayBv
ciBhZGQgZHVtbXkgZGVmaW5lcy4KClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9l
QGtlcm5lbC5kaz4KLS0tCiBpbmNsdWRlL2xpbnV4L2VudHJ5LWNvbW1vbi5oIHwgNCAtLS0t
CiBpbmNsdWRlL2xpbnV4L3NjaGVkL3NpZ25hbC5oIHwgMiAtLQogaW5jbHVkZS9saW51eC90
cmFjZWhvb2suaCAgICB8IDQgLS0tLQoga2VybmVsL3NpZ25hbC5jICAgICAgICAgICAgICB8
IDIgLS0KIDQgZmlsZXMgY2hhbmdlZCwgMTIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9lbnRyeS1jb21tb24uaCBiL2luY2x1ZGUvbGludXgvZW50cnktY29t
bW9uLmgKaW5kZXggMWExMjhiYWYzNjI4Li40NmM0MjQ3OWY5NTAgMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvbGludXgvZW50cnktY29tbW9uLmgKKysrIGIvaW5jbHVkZS9saW51eC9lbnRyeS1j
b21tb24uaApAQCAtMzcsMTAgKzM3LDYgQEAKICMgZGVmaW5lIF9USUZfVVBST0JFCQkJKDAp
CiAjZW5kaWYKIAotI2lmbmRlZiBfVElGX05PVElGWV9TSUdOQUwKLSMgZGVmaW5lIF9USUZf
Tk9USUZZX1NJR05BTAkJKDApCi0jZW5kaWYKLQogLyoKICAqIFRJRiBmbGFncyBoYW5kbGVk
IGluIHN5c2NhbGxfZW50ZXJfZnJvbV91c2VyX21vZGUoKQogICovCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2xpbnV4L3NjaGVkL3NpZ25hbC5oIGIvaW5jbHVkZS9saW51eC9zY2hlZC9zaWdu
YWwuaAppbmRleCBhNTM3M2ExM2JhMmMuLmFlNjBmODM4ZWJiOSAxMDA2NDQKLS0tIGEvaW5j
bHVkZS9saW51eC9zY2hlZC9zaWduYWwuaAorKysgYi9pbmNsdWRlL2xpbnV4L3NjaGVkL3Np
Z25hbC5oCkBAIC0zNjEsNyArMzYxLDYgQEAgc3RhdGljIGlubGluZSBpbnQgdGFza19zaWdw
ZW5kaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAqcCkKIAogc3RhdGljIGlubGluZSBpbnQgc2ln
bmFsX3BlbmRpbmcoc3RydWN0IHRhc2tfc3RydWN0ICpwKQogewotI2lmIGRlZmluZWQoVElG
X05PVElGWV9TSUdOQUwpCiAJLyoKIAkgKiBUSUZfTk9USUZZX1NJR05BTCBpc24ndCByZWFs
bHkgYSBzaWduYWwsIGJ1dCBpdCByZXF1aXJlcyB0aGUgc2FtZQogCSAqIGJlaGF2aW9yIGlu
IHRlcm1zIG9mIGVuc3VyaW5nIHRoYXQgd2UgYnJlYWsgb3V0IG9mIHdhaXQgbG9vcHMKQEAg
LTM2OSw3ICszNjgsNiBAQCBzdGF0aWMgaW5saW5lIGludCBzaWduYWxfcGVuZGluZyhzdHJ1
Y3QgdGFza19zdHJ1Y3QgKnApCiAJICovCiAJaWYgKHVubGlrZWx5KHRlc3RfdHNrX3RocmVh
ZF9mbGFnKHAsIFRJRl9OT1RJRllfU0lHTkFMKSkpCiAJCXJldHVybiAxOwotI2VuZGlmCiAJ
cmV0dXJuIHRhc2tfc2lncGVuZGluZyhwKTsKIH0KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9s
aW51eC90cmFjZWhvb2suaCBiL2luY2x1ZGUvbGludXgvdHJhY2Vob29rLmgKaW5kZXggZjdk
ODJlNGZhZmQ2Li5lZTlhYjdkYmM4YzMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvdHJh
Y2Vob29rLmgKKysrIGIvaW5jbHVkZS9saW51eC90cmFjZWhvb2suaApAQCAtMjA1LDEyICsy
MDUsMTAgQEAgc3RhdGljIGlubGluZSB2b2lkIHRyYWNlaG9va19ub3RpZnlfcmVzdW1lKHN0
cnVjdCBwdF9yZWdzICpyZWdzKQogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgdHJhY2Vob29r
X25vdGlmeV9zaWduYWwodm9pZCkKIHsKLSNpZiBkZWZpbmVkKFRJRl9OT1RJRllfU0lHTkFM
KQogCWNsZWFyX3RocmVhZF9mbGFnKFRJRl9OT1RJRllfU0lHTkFMKTsKIAlzbXBfbWJfX2Fm
dGVyX2F0b21pYygpOwogCWlmIChjdXJyZW50LT50YXNrX3dvcmtzKQogCQl0YXNrX3dvcmtf
cnVuKCk7Ci0jZW5kaWYKIH0KIAogLyoKQEAgLTIxOCwxMSArMjE2LDkgQEAgc3RhdGljIGlu
bGluZSB2b2lkIHRyYWNlaG9va19ub3RpZnlfc2lnbmFsKHZvaWQpCiAgKi8KIHN0YXRpYyBp
bmxpbmUgdm9pZCBzZXRfbm90aWZ5X3NpZ25hbChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2sp
CiB7Ci0jaWYgZGVmaW5lZChUSUZfTk9USUZZX1NJR05BTCkKIAlpZiAoIXRlc3RfYW5kX3Nl
dF90c2tfdGhyZWFkX2ZsYWcodGFzaywgVElGX05PVElGWV9TSUdOQUwpICYmCiAJICAgICF3
YWtlX3VwX3N0YXRlKHRhc2ssIFRBU0tfSU5URVJSVVBUSUJMRSkpCiAJCWtpY2tfcHJvY2Vz
cyh0YXNrKTsKLSNlbmRpZgogfQogCiAjZW5kaWYJLyogPGxpbnV4L3RyYWNlaG9vay5oPiAq
LwpkaWZmIC0tZ2l0IGEva2VybmVsL3NpZ25hbC5jIGIva2VybmVsL3NpZ25hbC5jCmluZGV4
IDI2OTM4MmE5MzExOS4uODQ1ZDQ5MTJiODNhIDEwMDY0NAotLS0gYS9rZXJuZWwvc2lnbmFs
LmMKKysrIGIva2VybmVsL3NpZ25hbC5jCkBAIC0yNTI1LDE0ICsyNTI1LDEyIEBAIGJvb2wg
Z2V0X3NpZ25hbChzdHJ1Y3Qga3NpZ25hbCAqa3NpZykKIAkgKiB0aGF0IHRoZSBhcmNoIGhh
bmRsZXJzIGRvbid0IGFsbCBoYXZlIHRvIGRvIGl0LiBJZiB3ZSBnZXQgaGVyZQogCSAqIHdp
dGhvdXQgVElGX1NJR1BFTkRJTkcsIGp1c3QgZXhpdCBhZnRlciBydW5uaW5nIHNpZ25hbCB3
b3JrLgogCSAqLwotI2lmZGVmIFRJRl9OT1RJRllfU0lHTkFMCiAJaWYgKCFJU19FTkFCTEVE
KENPTkZJR19HRU5FUklDX0VOVFJZKSkgewogCQlpZiAodGVzdF90aHJlYWRfZmxhZyhUSUZf
Tk9USUZZX1NJR05BTCkpCiAJCQl0cmFjZWhvb2tfbm90aWZ5X3NpZ25hbCgpOwogCQlpZiAo
IXRhc2tfc2lncGVuZGluZyhjdXJyZW50KSkKIAkJCXJldHVybiBmYWxzZTsKIAl9Ci0jZW5k
aWYKIAogCWlmICh1bmxpa2VseSh1cHJvYmVfZGVueV9zaWduYWwoKSkpCiAJCXJldHVybiBm
YWxzZTsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0044-task_work-remove-legacy-TWA_SIGNAL-path.patch"
Content-Disposition: attachment;
 filename="0044-task_work-remove-legacy-TWA_SIGNAL-path.patch"
Content-Transfer-Encoding: base64

RnJvbSAzZTdiMDU1ODU0ZjlmZjA4ZjNjNzAxNWM0NDIyOTE0N2RhZDVkZDA4IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNjowMTozMyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggNDQv
NjNdIHRhc2tfd29yazogcmVtb3ZlIGxlZ2FjeSBUV0FfU0lHTkFMIHBhdGgKClsgVXBzdHJl
YW0gY29tbWl0IDAzOTQxY2NmZGExNjFjMjY4MDE0N2ZhNWFiOTJhZWFkMmE3OWNhYzEgXQoK
QWxsIGFyY2hzIG5vdyBzdXBwb3J0IFRJRl9OT1RJRllfU0lHTkFMLgoKU2lnbmVkLW9mZi1i
eTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGtlcm5lbC90YXNrX3dvcmsu
YyB8IDMwICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDEgaW5zZXJ0aW9uKCspLCAyOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9rZXJuZWwv
dGFza193b3JrLmMgYi9rZXJuZWwvdGFza193b3JrLmMKaW5kZXggMTViMDg3Mjg2YmVhLi45
Y2RlOTYxODc1YzAgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90YXNrX3dvcmsuYworKysgYi9rZXJu
ZWwvdGFza193b3JrLmMKQEAgLTUsMzQgKzUsNiBAQAogCiBzdGF0aWMgc3RydWN0IGNhbGxi
YWNrX2hlYWQgd29ya19leGl0ZWQ7IC8qIGFsbCB3ZSBuZWVkIGlzIC0+bmV4dCA9PSBOVUxM
ICovCiAKLS8qCi0gKiBUV0FfU0lHTkFMIHNpZ25hbGluZyAtIHVzZSBUSUZfTk9USUZZX1NJ
R05BTCwgaWYgYXZhaWxhYmxlLCBhcyBpdCdzIGZhc3RlcgotICogdGhhbiBUSUZfU0lHUEVO
RElORyBhcyB0aGVyZSdzIG5vIGRlcGVuZGVuY3kgb24gLT5zaWdoYW5kLiBUaGUgbGF0dGVy
IGlzCi0gKiBzaGFyZWQgZm9yIHRocmVhZHMsIGFuZCBjYW4gY2F1c2UgY29udGVudGlvbiBv
biBzaWdoYW5kLT5sb2NrLiBFdmVuIGZvcgotICogdGhlIG5vbi10aHJlYWRlZCBjYXNlIFRJ
Rl9OT1RJRllfU0lHTkFMIGlzIG1vcmUgZWZmaWNpZW50LCBhcyBubyBsb2NraW5nCi0gKiBv
ciBJUlEgZGlzYWJsaW5nIGlzIGludm9sdmVkIGZvciBub3RpZmljYXRpb24gKG9yIHJ1bm5p
bmcpIHB1cnBvc2VzLgotICovCi1zdGF0aWMgdm9pZCB0YXNrX3dvcmtfbm90aWZ5X3NpZ25h
bChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCi17Ci0jaWYgZGVmaW5lZChUSUZfTk9USUZZ
X1NJR05BTCkKLQlzZXRfbm90aWZ5X3NpZ25hbCh0YXNrKTsKLSNlbHNlCi0JdW5zaWduZWQg
bG9uZyBmbGFnczsKLQotCS8qCi0JICogT25seSBncmFiIHRoZSBzaWdoYW5kIGxvY2sgaWYg
d2UgZG9uJ3QgYWxyZWFkeSBoYXZlIHNvbWUKLQkgKiB0YXNrX3dvcmsgcGVuZGluZy4gVGhp
cyBwYWlycyB3aXRoIHRoZSBzbXBfc3RvcmVfbWIoKQotCSAqIGluIGdldF9zaWduYWwoKSwg
c2VlIGNvbW1lbnQgdGhlcmUuCi0JICovCi0JaWYgKCEoUkVBRF9PTkNFKHRhc2stPmpvYmN0
bCkgJiBKT0JDVExfVEFTS19XT1JLKSAmJgotCSAgICBsb2NrX3Rhc2tfc2lnaGFuZCh0YXNr
LCAmZmxhZ3MpKSB7Ci0JCXRhc2stPmpvYmN0bCB8PSBKT0JDVExfVEFTS19XT1JLOwotCQlz
aWduYWxfd2FrZV91cCh0YXNrLCAwKTsKLQkJdW5sb2NrX3Rhc2tfc2lnaGFuZCh0YXNrLCAm
ZmxhZ3MpOwotCX0KLSNlbmRpZgotfQotCiAvKioKICAqIHRhc2tfd29ya19hZGQgLSBhc2sg
dGhlIEB0YXNrIHRvIGV4ZWN1dGUgQHdvcmstPmZ1bmMoKQogICogQHRhc2s6IHRoZSB0YXNr
IHdoaWNoIHNob3VsZCBydW4gdGhlIGNhbGxiYWNrCkBAIC03Niw3ICs0OCw3IEBAIGludCB0
YXNrX3dvcmtfYWRkKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywgc3RydWN0IGNhbGxiYWNr
X2hlYWQgKndvcmssCiAJCXNldF9ub3RpZnlfcmVzdW1lKHRhc2spOwogCQlicmVhazsKIAlj
YXNlIFRXQV9TSUdOQUw6Ci0JCXRhc2tfd29ya19ub3RpZnlfc2lnbmFsKHRhc2spOworCQlz
ZXRfbm90aWZ5X3NpZ25hbCh0YXNrKTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJV0FSTl9P
Tl9PTkNFKDEpOwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0043-alpha-fix-TIF_NOTIFY_SIGNAL-handling.patch"
Content-Disposition: attachment;
 filename="0043-alpha-fix-TIF_NOTIFY_SIGNAL-handling.patch"
Content-Transfer-Encoding: base64

RnJvbSBjYWI3NTNiNjFmYzY5OWFhOTJmODE1MGY3MWRkOTQ1OGU4ODU4YjNiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KRGF0ZTogU2F0LCAxOCBTZXAgMjAyMSAxODowODo1NiAtMDQwMApTdWJqZWN0OiBbUEFU
Q0ggNDMvNjNdIGFscGhhOiBmaXggVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcKClsgVXBz
dHJlYW0gY29tbWl0IGUyYzc1NTRjYzZkODVmOTVlM2M2NjM1ZjI3MGVjODM5YWI5ZmUwNWUg
XQoKaXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gX1RJRl9XT1JLX01BU0ssIG9yIHdlIG1pZ2h0
IG5vdCByZWFjaApkb193b3JrX3BlbmRpbmcoKSBpbiB0aGUgZmlyc3QgcGxhY2UuLi4KCkZp
eGVzOiA1YTlhODg5N2MyNTNhICJhbHBoYTogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllf
U0lHTkFMIgpTaWduZWQtb2ZmLWJ5OiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KLS0tCiBhcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCAyICstCiAx
IGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1n
aXQgYS9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL2FscGhh
L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggMjU5MjM1NmUzMjE1Li4wY2UxZWVl
MDkyNGIgMTAwNjQ0Ci0tLSBhL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8u
aAorKysgYi9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTc3LDcg
Kzc3LDcgQEAgcmVnaXN0ZXIgc3RydWN0IHRocmVhZF9pbmZvICpfX2N1cnJlbnRfdGhyZWFk
X2luZm8gX19hc21fXygiJDgiKTsKIAogLyogV29yayB0byBkbyBvbiBpbnRlcnJ1cHQvZXhj
ZXB0aW9uIHJldHVybi4gICovCiAjZGVmaW5lIF9USUZfV09SS19NQVNLCQkoX1RJRl9TSUdQ
RU5ESU5HIHwgX1RJRl9ORUVEX1JFU0NIRUQgfCBcCi0JCQkJIF9USUZfTk9USUZZX1JFU1VN
RSkKKwkJCQkgX1RJRl9OT1RJRllfUkVTVU1FIHwgX1RJRl9OT1RJRllfU0lHTkFMKQogCiAv
KiBXb3JrIHRvIGRvIG9uIGFueSByZXR1cm4gdG8gdXNlcnNwYWNlLiAgKi8KICNkZWZpbmUg
X1RJRl9BTExXT1JLX01BU0sJKF9USUZfV09SS19NQVNLCQlcCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0042-ARC-unbork-5.11-bootup-fix-snafu-in-_TIF_NOTIFY_SIGN.patch"
Content-Disposition: attachment;
 filename*0="0042-ARC-unbork-5.11-bootup-fix-snafu-in-_TIF_NOTIFY_SIGN.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBlYzk4MDczYTZlMjhmNWIwZTk2MmI4MDFkMWE3MDY0NzlhNzcwZTcxIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBWaW5lZXQgR3VwdGEgPHZndXB0YUBzeW5vcHN5cy5j
b20+CkRhdGU6IFdlZCwgNiBKYW4gMjAyMSAxMjozNDozNiAtMDgwMApTdWJqZWN0OiBbUEFU
Q0ggNDIvNjNdIEFSQzogdW5ib3JrIDUuMTEgYm9vdHVwOiBmaXggc25hZnUgaW4KIF9USUZf
Tk9USUZZX1NJR05BTCBoYW5kbGluZwoKWyBVcHN0cmVhbSBjb21taXQgYmIxMjQzM2JmNTZl
NzY3ODljNmIwOGIzNmM1NDZmNzQ1YTZhYTZlMSBdCgpMaW51eCA1LjExLnJjWCB3YXMgZmFp
bGluZyB0byBib290IG9uIEFSQyBIU0RLIGJvYXJkLiBUdXJucyBvdXQgd2UgaGF2ZQphIGNv
dXBsZSBvZiBpc3N1ZXMsIHRoaXMgYmVpbmcgdGhlIGZpcnN0IG9uZSwgYW5kIEknbSB0byBi
bGFtZSBhcyBJCmRpZG4ndCBwYXkgYXR0ZW50aW9uIGR1cmluZyByZXZpZXcuCgpUSUZfTk9U
SUZZX1NJR05BTCBzdXBwb3J0IHJlcXVpcmVzIGNoZWNraW5nIG11bHRpcGxlIFRJRl8qIGJp
dHMgaW4Ka2VybmVsIHJldHVybiBjb2RlIHBhdGguIE9sZCBjb2RlIG9ubHkgbmVlZGVkIHRv
IGNoZWNrIGEgc2luZ2xlIGJpdCBzbwpCQklUMCA8VElGX1NJR1BFTkRJTkc+IHdvcmtlZC4g
TmV3IGNvZGUgbmVlZHMgdG8gY2hlY2sgbXVsdGlwbGUgYml0cyBzbwpBTkQgPGJpdC1tYXNr
PiBpbnN0cnVjdGlvbi4gU28gbmVlZHMgdG8gdXNlIGJpdCBtYXNrIHZhcmlhbnQgX1RJRl9T
SUdQRU5ESU5HCgpDYzogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgpGaXhlczogNTM4
NTVlMTI1ODg3NDNlYTEyOCAoImFyYzogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lH
TkFMIikKTGluazogaHR0cHM6Ly9naXRodWIuY29tL2Zvc3MtZm9yLXN5bm9wc3lzLWR3Yy1h
cmMtcHJvY2Vzc29ycy9saW51eC9pc3N1ZXMvMzQKU2lnbmVkLW9mZi1ieTogVmluZWV0IEd1
cHRhIDx2Z3VwdGFAc3lub3BzeXMuY29tPgotLS0KIGFyY2gvYXJjL2tlcm5lbC9lbnRyeS5T
IHwgMiArLQogMSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0p
CgpkaWZmIC0tZ2l0IGEvYXJjaC9hcmMva2VybmVsL2VudHJ5LlMgYi9hcmNoL2FyYy9rZXJu
ZWwvZW50cnkuUwppbmRleCA2NzYzODFmNjk0ZDMuLjZlZTljYjU1OTgwOCAxMDA2NDQKLS0t
IGEvYXJjaC9hcmMva2VybmVsL2VudHJ5LlMKKysrIGIvYXJjaC9hcmMva2VybmVsL2VudHJ5
LlMKQEAgLTMwOCw3ICszMDgsNyBAQCByZXN1bWVfdXNlcl9tb2RlX2JlZ2luOgogCW1vdiBy
MCwgc3AJOyBwdF9yZWdzIGZvciBhcmcgdG8gZG9fc2lnbmFsKCkvZG9fbm90aWZ5X3Jlc3Vt
ZSgpCiAKIAlHRVRfQ1VSUl9USFJfSU5GT19GTEFHUyAgIHI5Ci0JYW5kLmYgIDAsICByOSwg
VElGX1NJR1BFTkRJTkd8VElGX05PVElGWV9TSUdOQUwKKwlhbmQuZiAgMCwgIHI5LCBfVElG
X1NJR1BFTkRJTkd8X1RJRl9OT1RJRllfU0lHTkFMCiAJYnogLkxjaGtfbm90aWZ5X3Jlc3Vt
ZQogCiAJOyBOb3JtYWwgVHJhcC9JUlEgZW50cnkgb25seSBzYXZlcyBTY3JhdGNoIChjYWxs
ZXItc2F2ZWQpIHJlZ3MKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0041-ia64-don-t-call-handle_signal-unless-there-s-actuall.patch"
Content-Disposition: attachment;
 filename*0="0041-ia64-don-t-call-handle_signal-unless-there-s-actuall.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA2MjE2NDlhZjhiOWRiMTY2NmIyOTlkNmI4YzFiZDM4NGYwMWM0ZTIzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMiBNYXIgMjAyMSAxNzoyMjoxMSAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggNDEv
NjNdIGlhNjQ6IGRvbid0IGNhbGwgaGFuZGxlX3NpZ25hbCgpIHVubGVzcyB0aGVyZSdzCiBh
Y3R1YWxseSBhIHNpZ25hbCBxdWV1ZWQKClsgVXBzdHJlYW0gY29tbWl0IGY1ZjRmYzQ2NDlh
ZTU0MmIxYTI1NjcwYjE3YWFmM2NiYjYxODdhY2MgXQoKU2VyZ2VpIGFuZCBKb2huIGJvdGgg
cmVwb3J0ZWQgdGhhdCBpYTY0IGZhaWxlZCB0byBib290IGluIDUuMTEsIGFuZCBpdAp3YXMg
cmVsYXRlZCB0byBzaWduYWxzLiBUdXJucyBvdXQgdGhlIGlhNjQgc2lnbmFsIGhhbmRsaW5n
IGlzIGEgYml0IG9kZCwKaXQgZG9lc24ndCBjaGVjayB0aGUgcmV0dXJuIHZhbHVlIG9mIGdl
dF9zaWduYWwoKSBmb3Igd2hldGhlciB0aGVyZSdzIGEKc2lnbmFsIHRvIGRlbGl2ZXIgb3Ig
bm90LiBXaXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgVElGX05PVElGWV9TSUdOQUwsCnRoZW4g
dGFza193b3JrIGNvdWxkIHRyaWdnZXIgaXQuCgpGaXggaXQgYnkgb25seSBjYWxsaW5nIGhh
bmRsZV9zaWduYWwoKSBpZiB3ZSBhY3R1YWxseSBoYXZlIGEgcmVhbCBzaWduYWwKdG8gZGVs
aXZlci4gVGhpcyBicmluZ3MgaXQgaW4gbGluZSB3aXRoIGFsbCBvdGhlciBhcmNocywgdG9v
LgoKRml4ZXM6IGIyNjljMjI5YjBlOCAoImlhNjQ6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9U
SUZZX1NJR05BTCIpClJlcG9ydGVkLWJ5OiBTZXJnZWkgVHJvZmltb3ZpY2ggPHNseWljaEBn
bWFpbC5jb20+ClJlcG9ydGVkLWJ5OiBKb2huIFBhdWwgQWRyaWFuIEdsYXViaXR6IDxnbGF1
Yml0ekBwaHlzaWsuZnUtYmVybGluLmRlPgpUZXN0ZWQtYnk6IFNlcmdlaSBUcm9maW1vdmlj
aCA8c2x5aWNoQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VA
a2VybmVsLmRrPgotLS0KIGFyY2gvaWE2NC9rZXJuZWwvc2lnbmFsLmMgfCAzICsrLQogMSBm
aWxlIGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdp
dCBhL2FyY2gvaWE2NC9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL2lhNjQva2VybmVsL3NpZ25h
bC5jCmluZGV4IGU2N2IyMmZjM2M2MC4uYzFiMjk5NzYwYmY3IDEwMDY0NAotLS0gYS9hcmNo
L2lhNjQva2VybmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvaWE2NC9rZXJuZWwvc2lnbmFsLmMK
QEAgLTM0MSw3ICszNDEsOCBAQCBpYTY0X2RvX3NpZ25hbCAoc3RydWN0IHNpZ3NjcmF0Y2gg
KnNjciwgbG9uZyBpbl9zeXNjYWxsKQogCSAqIG5lZWQgdG8gcHVzaCB0aHJvdWdoIGEgZm9y
Y2VkIFNJR1NFR1YuCiAJICovCiAJd2hpbGUgKDEpIHsKLQkJZ2V0X3NpZ25hbCgma3NpZyk7
CisJCWlmICghZ2V0X3NpZ25hbCgma3NpZykpCisJCQlicmVhazsKIAogCQkvKgogCQkgKiBn
ZXRfc2lnbmFsKCkgbWF5IGhhdmUgcnVuIGEgZGVidWdnZXIgKHZpYSBub3RpZnlfcGFyZW50
KCkpCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0040-sparc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0040-sparc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSAxMmQ4MTk4NGYwZDcwY2E0MGMxNGYzMTljZWVhNTg2YjkzNTFiMmNiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNTo0NDozNyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggNDAv
NjNdIHNwYXJjOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJl
YW0gY29tbWl0IGY1MGE3MDUyZjVlNzBlZTdhNmE1ZTJlZDA4NjYwOTk0ZGMzZGYyYTUgXQoK
V2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3Igc3BhcmMuCgpDYzogc3Bh
cmNsaW51eEB2Z2VyLmtlcm5lbC5vcmcKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhi
b2VAa2VybmVsLmRrPgotLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm9f
MzIuaCB8IDQgKysrLQogYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mb182NC5o
IHwgNiArKysrLS0KIGFyY2gvc3BhcmMva2VybmVsL3NpZ25hbF8zMi5jICAgICAgICAgICB8
IDIgKy0KIGFyY2gvc3BhcmMva2VybmVsL3NpZ25hbF82NC5jICAgICAgICAgICB8IDIgKy0K
IDQgZmlsZXMgY2hhbmdlZCwgOSBpbnNlcnRpb25zKCspLCA1IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm9fMzIuaCBiL2Fy
Y2gvc3BhcmMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm9fMzIuaAppbmRleCA1NDhiMzY2MTY1
ZGQuLjQ1YjQ5NTViMjUzZiAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS90
aHJlYWRfaW5mb18zMi5oCisrKyBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vdGhyZWFkX2lu
Zm9fMzIuaApAQCAtMTA0LDYgKzEwNCw3IEBAIHJlZ2lzdGVyIHN0cnVjdCB0aHJlYWRfaW5m
byAqY3VycmVudF90aHJlYWRfaW5mb19yZWcgYXNtKCJnNiIpOwogI2RlZmluZSBUSUZfU0lH
UEVORElORwkJMgkvKiBzaWduYWwgcGVuZGluZyAqLwogI2RlZmluZSBUSUZfTkVFRF9SRVND
SEVECTMJLyogcmVzY2hlZHVsaW5nIG5lY2Vzc2FyeSAqLwogI2RlZmluZSBUSUZfUkVTVE9S
RV9TSUdNQVNLCTQJLyogcmVzdG9yZSBzaWduYWwgbWFzayBpbiBkb19zaWduYWwoKSAqLwor
I2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAk1CS8qIHNpZ25hbCBub3RpZmljYXRpb25zIGV4
aXN0ICovCiAjZGVmaW5lIFRJRl9VU0VERlBVCQk4CS8qIEZQVSB3YXMgdXNlZCBieSB0aGlz
IHRhc2sKIAkJCQkJICogdGhpcyBxdWFudHVtIChTTVApICovCiAjZGVmaW5lIFRJRl9QT0xM
SU5HX05SRkxBRwk5CS8qIHRydWUgaWYgcG9sbF9pZGxlKCkgaXMgcG9sbGluZwpAQCAtMTE1
LDExICsxMTYsMTIgQEAgcmVnaXN0ZXIgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3Ro
cmVhZF9pbmZvX3JlZyBhc20oImc2Iik7CiAjZGVmaW5lIF9USUZfTk9USUZZX1JFU1VNRQko
MTw8VElGX05PVElGWV9SRVNVTUUpCiAjZGVmaW5lIF9USUZfU0lHUEVORElORwkJKDE8PFRJ
Rl9TSUdQRU5ESU5HKQogI2RlZmluZSBfVElGX05FRURfUkVTQ0hFRAkoMTw8VElGX05FRURf
UkVTQ0hFRCkKKyNkZWZpbmUgX1RJRl9OT1RJRllfU0lHTkFMCSgxPDxUSUZfTk9USUZZX1NJ
R05BTCkKICNkZWZpbmUgX1RJRl9VU0VERlBVCQkoMTw8VElGX1VTRURGUFUpCiAjZGVmaW5l
IF9USUZfUE9MTElOR19OUkZMQUcJKDE8PFRJRl9QT0xMSU5HX05SRkxBRykKIAogI2RlZmlu
ZSBfVElGX0RPX05PVElGWV9SRVNVTUVfTUFTSwkoX1RJRl9OT1RJRllfUkVTVU1FIHwgXAot
CQkJCQkgX1RJRl9TSUdQRU5ESU5HKQorCQkJCQkgX1RJRl9TSUdQRU5ESU5HIHwgX1RJRl9O
T1RJRllfU0lHTkFMKQogCiAjZGVmaW5lIGlzXzMyYml0X3Rhc2soKQkoMSkKIApkaWZmIC0t
Z2l0IGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mb182NC5oIGIvYXJjaC9z
cGFyYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mb182NC5oCmluZGV4IDIwMjU1NDcxZTY1My4u
NDJjZDRjZDM4OTJlIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3RocmVh
ZF9pbmZvXzY0LmgKKysrIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mb182
NC5oCkBAIC0xODAsNyArMTgwLDcgQEAgZXh0ZXJuIHN0cnVjdCB0aHJlYWRfaW5mbyAqY3Vy
cmVudF90aHJlYWRfaW5mbyh2b2lkKTsKICNkZWZpbmUgVElGX05PVElGWV9SRVNVTUUJMQkv
KiBjYWxsYmFjayBiZWZvcmUgcmV0dXJuaW5nIHRvIHVzZXIgKi8KICNkZWZpbmUgVElGX1NJ
R1BFTkRJTkcJCTIJLyogc2lnbmFsIHBlbmRpbmcgKi8KICNkZWZpbmUgVElGX05FRURfUkVT
Q0hFRAkzCS8qIHJlc2NoZWR1bGluZyBuZWNlc3NhcnkgKi8KLS8qIGZsYWcgYml0IDQgaXMg
YXZhaWxhYmxlICovCisjZGVmaW5lIFRJRl9OT1RJRllfU0lHTkFMCTQJLyogc2lnbmFsIG5v
dGlmaWNhdGlvbnMgZXhpc3QgKi8KICNkZWZpbmUgVElGX1VOQUxJR05FRAkJNQkvKiBhbGxv
d2VkIHRvIGRvIHVuYWxpZ25lZCBhY2Nlc3NlcyAqLwogI2RlZmluZSBUSUZfVVBST0JFCQk2
CS8qIGJyZWFrcG9pbnRlZCBvciBzaW5nbGVzdGVwcGVkICovCiAjZGVmaW5lIFRJRl8zMkJJ
VAkJNwkvKiAzMi1iaXQgYmluYXJ5ICovCkBAIC0yMDAsNiArMjAwLDcgQEAgZXh0ZXJuIHN0
cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJlYWRfaW5mbyh2b2lkKTsKICNkZWZpbmUg
X1RJRl9OT1RJRllfUkVTVU1FCSgxPDxUSUZfTk9USUZZX1JFU1VNRSkKICNkZWZpbmUgX1RJ
Rl9TSUdQRU5ESU5HCQkoMTw8VElGX1NJR1BFTkRJTkcpCiAjZGVmaW5lIF9USUZfTkVFRF9S
RVNDSEVECSgxPDxUSUZfTkVFRF9SRVNDSEVEKQorI2RlZmluZSBfVElGX05PVElGWV9TSUdO
QUwJKDE8PFRJRl9OT1RJRllfU0lHTkFMKQogI2RlZmluZSBfVElGX1VOQUxJR05FRAkJKDE8
PFRJRl9VTkFMSUdORUQpCiAjZGVmaW5lIF9USUZfVVBST0JFCQkoMTw8VElGX1VQUk9CRSkK
ICNkZWZpbmUgX1RJRl8zMkJJVAkJKDE8PFRJRl8zMkJJVCkKQEAgLTIxMyw3ICsyMTQsOCBA
QCBleHRlcm4gc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQp
OwogCQkJCSBfVElGX0RPX05PVElGWV9SRVNVTUVfTUFTSyB8IFwKIAkJCQkgX1RJRl9ORUVE
X1JFU0NIRUQpCiAjZGVmaW5lIF9USUZfRE9fTk9USUZZX1JFU1VNRV9NQVNLCShfVElGX05P
VElGWV9SRVNVTUUgfCBcCi0JCQkJCSBfVElGX1NJR1BFTkRJTkcgfCBfVElGX1VQUk9CRSkK
KwkJCQkJIF9USUZfU0lHUEVORElORyB8IF9USUZfVVBST0JFIHwgXAorCQkJCQkgX1RJRl9O
T1RJRllfU0lHTkFMKQogCiAjZGVmaW5lIGlzXzMyYml0X3Rhc2soKQkodGVzdF90aHJlYWRf
ZmxhZyhUSUZfMzJCSVQpKQogCmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2tlcm5lbC9zaWdu
YWxfMzIuYyBiL2FyY2gvc3BhcmMva2VybmVsL3NpZ25hbF8zMi5jCmluZGV4IDFkYTM2ZGQz
NDk5MC4uNGQ0Nzg1MTA1NTBjIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2tlcm5lbC9zaWdu
YWxfMzIuYworKysgYi9hcmNoL3NwYXJjL2tlcm5lbC9zaWduYWxfMzIuYwpAQCAtNTIxLDcg
KzUyMSw3IEBAIHN0YXRpYyB2b2lkIGRvX3NpZ25hbChzdHJ1Y3QgcHRfcmVncyAqcmVncywg
dW5zaWduZWQgbG9uZyBvcmlnX2kwKQogdm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBw
dF9yZWdzICpyZWdzLCB1bnNpZ25lZCBsb25nIG9yaWdfaTAsCiAJCSAgICAgIHVuc2lnbmVk
IGxvbmcgdGhyZWFkX2luZm9fZmxhZ3MpCiB7Ci0JaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYg
X1RJRl9TSUdQRU5ESU5HKQorCWlmICh0aHJlYWRfaW5mb19mbGFncyAmIChfVElGX1NJR1BF
TkRJTkcgfCBfVElGX05PVElGWV9TSUdOQUwpKQogCQlkb19zaWduYWwocmVncywgb3JpZ19p
MCk7CiAJaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9OT1RJRllfUkVTVU1FKQogCQl0
cmFjZWhvb2tfbm90aWZ5X3Jlc3VtZShyZWdzKTsKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMv
a2VybmVsL3NpZ25hbF82NC5jIGIvYXJjaC9zcGFyYy9rZXJuZWwvc2lnbmFsXzY0LmMKaW5k
ZXggZjdlZjdlZGNkNWMxLi5hMGVlYzYyYzgyNWQgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMv
a2VybmVsL3NpZ25hbF82NC5jCisrKyBiL2FyY2gvc3BhcmMva2VybmVsL3NpZ25hbF82NC5j
CkBAIC01NDksNyArNTQ5LDcgQEAgdm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9y
ZWdzICpyZWdzLCB1bnNpZ25lZCBsb25nIG9yaWdfaTAsIHVuc2lnbmVkIGxvbmcKIAl1c2Vy
X2V4aXQoKTsKIAlpZiAodGhyZWFkX2luZm9fZmxhZ3MgJiBfVElGX1VQUk9CRSkKIAkJdXBy
b2JlX25vdGlmeV9yZXN1bWUocmVncyk7Ci0JaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJ
Rl9TSUdQRU5ESU5HKQorCWlmICh0aHJlYWRfaW5mb19mbGFncyAmIChfVElGX1NJR1BFTkRJ
TkcgfCBfVElGX05PVElGWV9TSUdOQUwpKQogCQlkb19zaWduYWwocmVncywgb3JpZ19pMCk7
CiAJaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9OT1RJRllfUkVTVU1FKQogCQl0cmFj
ZWhvb2tfbm90aWZ5X3Jlc3VtZShyZWdzKTsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0039-riscv-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0039-riscv-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSAzNGEyMjZlYzU1NWJmNjVmM2I0OWJkMTczODg5NTU0YTA0YjU4ODJhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDoyOToxNyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzkv
NjNdIHJpc2N2OiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJl
YW0gY29tbWl0IDI0YTMxYjgxZTM4MzA5YjE2MDRmMjQ1MjAxMTBhYWUxZjgzZjNjYmYgXQoK
V2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgcmlzY3YuCgpDYzogbGlu
dXgtcmlzY3ZAbGlzdHMuaW5mcmFkZWFkLm9yZwpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9l
IDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS90aHJlYWRf
aW5mby5oIHwgNSArKysrLQogYXJjaC9yaXNjdi9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAg
IHwgMiArLQogMiBmaWxlcyBjaGFuZ2VkLCA1IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5o
IGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCmluZGV4IGQ3OWFlOWQ5
ODk5OS4uYzU1ZTBhMWYwN2EwIDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNt
L3RocmVhZF9pbmZvLmgKKysrIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oCkBAIC04MCw2ICs4MCw3IEBAIHN0cnVjdCB0aHJlYWRfaW5mbyB7CiAjZGVmaW5lIFRJ
Rl9TWVNDQUxMX1RSQUNFUE9JTlQgIDYgICAgICAgLyogc3lzY2FsbCB0cmFjZXBvaW50IGlu
c3RydW1lbnRhdGlvbiAqLwogI2RlZmluZSBUSUZfU1lTQ0FMTF9BVURJVAk3CS8qIHN5c2Nh
bGwgYXVkaXRpbmcgKi8KICNkZWZpbmUgVElGX1NFQ0NPTVAJCTgJLyogc3lzY2FsbCBzZWN1
cmUgY29tcHV0aW5nICovCisjZGVmaW5lIFRJRl9OT1RJRllfU0lHTkFMCTkJLyogc2lnbmFs
IG5vdGlmaWNhdGlvbnMgZXhpc3QgKi8KIAogI2RlZmluZSBfVElGX1NZU0NBTExfVFJBQ0UJ
KDEgPDwgVElGX1NZU0NBTExfVFJBQ0UpCiAjZGVmaW5lIF9USUZfTk9USUZZX1JFU1VNRQko
MSA8PCBUSUZfTk9USUZZX1JFU1VNRSkKQEAgLTg4LDkgKzg5LDExIEBAIHN0cnVjdCB0aHJl
YWRfaW5mbyB7CiAjZGVmaW5lIF9USUZfU1lTQ0FMTF9UUkFDRVBPSU5UCSgxIDw8IFRJRl9T
WVNDQUxMX1RSQUNFUE9JTlQpCiAjZGVmaW5lIF9USUZfU1lTQ0FMTF9BVURJVAkoMSA8PCBU
SUZfU1lTQ0FMTF9BVURJVCkKICNkZWZpbmUgX1RJRl9TRUNDT01QCQkoMSA8PCBUSUZfU0VD
Q09NUCkKKyNkZWZpbmUgX1RJRl9OT1RJRllfU0lHTkFMCSgxIDw8IFRJRl9OT1RJRllfU0lH
TkFMKQogCiAjZGVmaW5lIF9USUZfV09SS19NQVNLIFwKLQkoX1RJRl9OT1RJRllfUkVTVU1F
IHwgX1RJRl9TSUdQRU5ESU5HIHwgX1RJRl9ORUVEX1JFU0NIRUQpCisJKF9USUZfTk9USUZZ
X1JFU1VNRSB8IF9USUZfU0lHUEVORElORyB8IF9USUZfTkVFRF9SRVNDSEVEIHwgXAorCSBf
VElGX05PVElGWV9TSUdOQUwpCiAKICNkZWZpbmUgX1RJRl9TWVNDQUxMX1dPUksgXAogCShf
VElGX1NZU0NBTExfVFJBQ0UgfCBfVElGX1NZU0NBTExfVFJBQ0VQT0lOVCB8IF9USUZfU1lT
Q0FMTF9BVURJVCB8IFwKZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3Yva2VybmVsL3NpZ25hbC5j
IGIvYXJjaC9yaXNjdi9rZXJuZWwvc2lnbmFsLmMKaW5kZXggNTI5YzEyM2NmMGE0Li41MGE4
MjI1YzU4YmMgMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3Yva2VybmVsL3NpZ25hbC5jCisrKyBi
L2FyY2gvcmlzY3Yva2VybmVsL3NpZ25hbC5jCkBAIC0zMTIsNyArMzEyLDcgQEAgYXNtbGlu
a2FnZSBfX3Zpc2libGUgdm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdzICpy
ZWdzLAogCQkJCQkgICB1bnNpZ25lZCBsb25nIHRocmVhZF9pbmZvX2ZsYWdzKQogewogCS8q
IEhhbmRsZSBwZW5kaW5nIHNpZ25hbCBkZWxpdmVyeSAqLwotCWlmICh0aHJlYWRfaW5mb19m
bGFncyAmIF9USUZfU0lHUEVORElORykKKwlpZiAodGhyZWFkX2luZm9fZmxhZ3MgJiAoX1RJ
Rl9TSUdQRU5ESU5HIHwgX1RJRl9OT1RJRllfU0lHTkFMKSkKIAkJZG9fc2lnbmFsKHJlZ3Mp
OwogCiAJaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9OT1RJRllfUkVTVU1FKQotLSAK
Mi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0038-nds32-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0038-nds32-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSAxOTIyYjY1ZGUwYWQ2Zjk2OWIwMjUzMGI5Y2VkOWMyNTViN2VjYjFiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToxODo0MyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzgv
NjNdIG5kczMyOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJl
YW0gY29tbWl0IGIxM2U4YmY2MTVmZTI2ZmI2YTZkZmUxYjVhMWM2NWUxNjI0ZGZlZTIgXQoK
V2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgbmRzMzIuCgpDYzogTmlj
ayBIdSA8bmlja2h1QGFuZGVzdGVjaC5jb20+CkNjOiBHcmVlbnRpbWUgSHUgPGdyZWVuLmh1
QGdtYWlsLmNvbT4KQ2M6IFZpbmNlbnQgQ2hlbiA8ZGVhbmJvNDIyQGdtYWlsLmNvbT4KU2ln
bmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGFyY2gvbmRz
MzIvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCB8IDIgKysKIGFyY2gvbmRzMzIva2VybmVs
L2V4LWV4aXQuUyAgICAgICAgICB8IDIgKy0KIGFyY2gvbmRzMzIva2VybmVsL3NpZ25hbC5j
ICAgICAgICAgICB8IDIgKy0KIDMgZmlsZXMgY2hhbmdlZCwgNCBpbnNlcnRpb25zKCspLCAy
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20vdGhy
ZWFkX2luZm8uaCBiL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAppbmRl
eCBjMTM1MTExZWM0NGUuLmQzOTY3YWQxODRmMCAxMDA2NDQKLS0tIGEvYXJjaC9uZHMzMi9p
bmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCisrKyBiL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20v
dGhyZWFkX2luZm8uaApAQCAtNDgsNiArNDgsNyBAQCBzdHJ1Y3QgdGhyZWFkX2luZm8gewog
I2RlZmluZSBUSUZfTkVFRF9SRVNDSEVECTIKICNkZWZpbmUgVElGX1NJTkdMRVNURVAJCTMK
ICNkZWZpbmUgVElGX05PVElGWV9SRVNVTUUJNAkvKiBjYWxsYmFjayBiZWZvcmUgcmV0dXJu
aW5nIHRvIHVzZXIgKi8KKyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNQkvKiBzaWduYWwg
bm90aWZpY2F0aW9ucyBleGlzdCAqLwogI2RlZmluZSBUSUZfU1lTQ0FMTF9UUkFDRQk4CiAj
ZGVmaW5lIFRJRl9QT0xMSU5HX05SRkxBRwkxNwogI2RlZmluZSBUSUZfTUVNRElFCQkxOApA
QCAtNTcsNiArNTgsNyBAQCBzdHJ1Y3QgdGhyZWFkX2luZm8gewogI2RlZmluZSBfVElGX1NJ
R1BFTkRJTkcJCSgxIDw8IFRJRl9TSUdQRU5ESU5HKQogI2RlZmluZSBfVElGX05FRURfUkVT
Q0hFRAkoMSA8PCBUSUZfTkVFRF9SRVNDSEVEKQogI2RlZmluZSBfVElGX05PVElGWV9SRVNV
TUUJKDEgPDwgVElGX05PVElGWV9SRVNVTUUpCisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05B
TAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9TSU5HTEVTVEVQCQko
MSA8PCBUSUZfU0lOR0xFU1RFUCkKICNkZWZpbmUgX1RJRl9TWVNDQUxMX1RSQUNFCSgxIDw8
IFRJRl9TWVNDQUxMX1RSQUNFKQogI2RlZmluZSBfVElGX1BPTExJTkdfTlJGTEFHCSgxIDw8
IFRJRl9QT0xMSU5HX05SRkxBRykKZGlmZiAtLWdpdCBhL2FyY2gvbmRzMzIva2VybmVsL2V4
LWV4aXQuUyBiL2FyY2gvbmRzMzIva2VybmVsL2V4LWV4aXQuUwppbmRleCA2YTI5NjZjMmQ4
YzguLmIzMDY5OTkxMWI4MSAxMDA2NDQKLS0tIGEvYXJjaC9uZHMzMi9rZXJuZWwvZXgtZXhp
dC5TCisrKyBiL2FyY2gvbmRzMzIva2VybmVsL2V4LWV4aXQuUwpAQCAtMTIwLDcgKzEyMCw3
IEBAIHdvcmtfcGVuZGluZzoKIAlhbmRpCSRwMSwgJHIxLCAjX1RJRl9ORUVEX1JFU0NIRUQK
IAlibmV6CSRwMSwgd29ya19yZXNjaGVkCiAKLQlhbmRpCSRwMSwgJHIxLCAjX1RJRl9TSUdQ
RU5ESU5HfCNfVElGX05PVElGWV9SRVNVTUUKKwlhbmRpCSRwMSwgJHIxLCAjX1RJRl9TSUdQ
RU5ESU5HfCNfVElGX05PVElGWV9SRVNVTUV8I19USUZfTk9USUZZX1NJR05BTAogCWJlcXoJ
JHAxLCBub193b3JrX3BlbmRpbmcKIAogCW1vdmUJJHIwLCAkc3AJCQkhICdyZWdzJwpkaWZm
IC0tZ2l0IGEvYXJjaC9uZHMzMi9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL25kczMyL2tlcm5l
bC9zaWduYWwuYwppbmRleCAyYWNiOTQ4MTJhZjkuLjdlM2NhNDMwYTIyMyAxMDA2NDQKLS0t
IGEvYXJjaC9uZHMzMi9rZXJuZWwvc2lnbmFsLmMKKysrIGIvYXJjaC9uZHMzMi9rZXJuZWwv
c2lnbmFsLmMKQEAgLTM3Niw3ICszNzYsNyBAQCBzdGF0aWMgdm9pZCBkb19zaWduYWwoc3Ry
dWN0IHB0X3JlZ3MgKnJlZ3MpCiBhc21saW5rYWdlIHZvaWQKIGRvX25vdGlmeV9yZXN1bWUo
c3RydWN0IHB0X3JlZ3MgKnJlZ3MsIHVuc2lnbmVkIGludCB0aHJlYWRfZmxhZ3MpCiB7Ci0J
aWYgKHRocmVhZF9mbGFncyAmIF9USUZfU0lHUEVORElORykKKwlpZiAodGhyZWFkX2ZsYWdz
ICYgKF9USUZfU0lHUEVORElORyB8IF9USUZfTk9USUZZX1NJR05BTCkpCiAJCWRvX3NpZ25h
bChyZWdzKTsKIAogCWlmICh0aHJlYWRfZmxhZ3MgJiBfVElGX05PVElGWV9SRVNVTUUpCi0t
IAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0037-ia64-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0037-ia64-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA0NzMyODEyMjM0YTg4NmI2ZTUwOGQxNWViYjhiYTFmNjFjYjgyYzg3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDo0OTo0MyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzcv
NjNdIGlhNjQ6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgYjI2OWMyMjliMGU4OWFlZGI3OTQzYzA2NjczYjU2YjYwNTJjZjVlNSBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBpYTY0LgoKQ2M6IGxpbnV4
LWlhNjRAdmdlci5rZXJuZWwub3JnCltheGJvZTogYWRkZWQgZml4ZXMgZnJvbSBNaWtlIFJh
cG9wb3J0IDxycHB0QGtlcm5lbC5vcmc+XQpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxh
eGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZv
LmggfCA0ICsrKy0KIGFyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgICAgIHwgMyAr
Ky0KIDIgZmlsZXMgY2hhbmdlZCwgNSBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIGIvYXJj
aC9pYTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggNjRhMTAxMWY2ODEyLi41
MWQyMGNiMzc3MDYgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS90aHJlYWRf
aW5mby5oCisrKyBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCkBAIC0x
MDMsNiArMTAzLDcgQEAgc3RydWN0IHRocmVhZF9pbmZvIHsKICNkZWZpbmUgVElGX1NZU0NB
TExfVFJBQ0UJMgkvKiBzeXNjYWxsIHRyYWNlIGFjdGl2ZSAqLwogI2RlZmluZSBUSUZfU1lT
Q0FMTF9BVURJVAkzCS8qIHN5c2NhbGwgYXVkaXRpbmcgYWN0aXZlICovCiAjZGVmaW5lIFRJ
Rl9TSU5HTEVTVEVQCQk0CS8qIHJlc3RvcmUgc2luZ2xlc3RlcCBvbiByZXR1cm4gdG8gdXNl
ciBtb2RlICovCisjZGVmaW5lIFRJRl9OT1RJRllfU0lHTkFMCTUJLyogc2lnbmFsIG5vdGlm
aWNhdGlvbiBleGlzdCAqLwogI2RlZmluZSBUSUZfTk9USUZZX1JFU1VNRQk2CS8qIHJlc3Vt
cHRpb24gbm90aWZpY2F0aW9uIHJlcXVlc3RlZCAqLwogI2RlZmluZSBUSUZfTUVNRElFCQkx
NwkvKiBpcyB0ZXJtaW5hdGluZyBkdWUgdG8gT09NIGtpbGxlciAqLwogI2RlZmluZSBUSUZf
TUNBX0lOSVQJCTE4CS8qIHRoaXMgdGFzayBpcyBwcm9jZXNzaW5nIE1DQSBvciBJTklUICov
CkBAIC0xMTUsNiArMTE2LDcgQEAgc3RydWN0IHRocmVhZF9pbmZvIHsKICNkZWZpbmUgX1RJ
Rl9TSU5HTEVTVEVQCQkoMSA8PCBUSUZfU0lOR0xFU1RFUCkKICNkZWZpbmUgX1RJRl9TWVND
QUxMX1RSQUNFQVVESVQJKF9USUZfU1lTQ0FMTF9UUkFDRXxfVElGX1NZU0NBTExfQVVESVR8
X1RJRl9TSU5HTEVTVEVQKQogI2RlZmluZSBfVElGX05PVElGWV9SRVNVTUUJKDEgPDwgVElG
X05PVElGWV9SRVNVTUUpCisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05BTAkoMSA8PCBUSUZf
Tk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9TSUdQRU5ESU5HCQkoMSA8PCBUSUZfU0lH
UEVORElORykKICNkZWZpbmUgX1RJRl9ORUVEX1JFU0NIRUQJKDEgPDwgVElGX05FRURfUkVT
Q0hFRCkKICNkZWZpbmUgX1RJRl9NQ0FfSU5JVAkJKDEgPDwgVElGX01DQV9JTklUKQpAQCAt
MTI0LDcgKzEyNiw3IEBAIHN0cnVjdCB0aHJlYWRfaW5mbyB7CiAKIC8qICJ3b3JrIHRvIGRv
IG9uIHVzZXItcmV0dXJuIiBiaXRzICovCiAjZGVmaW5lIFRJRl9BTExXT1JLX01BU0sJKF9U
SUZfU0lHUEVORElOR3xfVElGX05PVElGWV9SRVNVTUV8X1RJRl9TWVNDQUxMX0FVRElUfFwK
LQkJCQkgX1RJRl9ORUVEX1JFU0NIRUR8X1RJRl9TWVNDQUxMX1RSQUNFKQorCQkJCSBfVElG
X05FRURfUkVTQ0hFRHxfVElGX1NZU0NBTExfVFJBQ0V8X1RJRl9OT1RJRllfU0lHTkFMKQog
LyogbGlrZSBUSUZfQUxMV09SS19CSVRTIGJ1dCBzYW5zIFRJRl9TWVNDQUxMX1RSQUNFIG9y
IFRJRl9TWVNDQUxMX0FVRElUICovCiAjZGVmaW5lIFRJRl9XT1JLX01BU0sJCShUSUZfQUxM
V09SS19NQVNLJn4oX1RJRl9TWVNDQUxMX1RSQUNFfF9USUZfU1lTQ0FMTF9BVURJVCkpCiAK
ZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9pYTY0L2tl
cm5lbC9wcm9jZXNzLmMKaW5kZXggYzlmZjg3OTZiNTA5Li43MDY0OWE1YjNlODggMTAwNjQ0
Ci0tLSBhL2FyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvaWE2NC9rZXJu
ZWwvcHJvY2Vzcy5jCkBAIC0xNzEsNyArMTcxLDggQEAgZG9fbm90aWZ5X3Jlc3VtZV91c2Vy
KHNpZ3NldF90ICp1bnVzZWQsIHN0cnVjdCBzaWdzY3JhdGNoICpzY3IsIGxvbmcgaW5fc3lz
Y2FsbCkKIAl9CiAKIAkvKiBkZWFsIHdpdGggcGVuZGluZyBzaWduYWwgZGVsaXZlcnkgKi8K
LQlpZiAodGVzdF90aHJlYWRfZmxhZyhUSUZfU0lHUEVORElORykpIHsKKwlpZiAodGVzdF90
aHJlYWRfZmxhZyhUSUZfU0lHUEVORElORykgfHwKKwkgICAgdGVzdF90aHJlYWRfZmxhZyhU
SUZfTk9USUZZX1NJR05BTCkpIHsKIAkJbG9jYWxfaXJxX2VuYWJsZSgpOwkvKiBmb3JjZSBp
bnRlcnJ1cHQgZW5hYmxlICovCiAJCWlhNjRfZG9fc2lnbmFsKHNjciwgaW5fc3lzY2FsbCk7
CiAJfQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0036-h8300-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0036-h8300-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBiODNlZTY4MWU3ZGQ3MTM1NDBmNDFjYWRiNjIxNzc4NDA4M2IzOGVjIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDo0MjozMyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzYv
NjNdIGg4MzAwOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJl
YW0gY29tbWl0IDJmOTc5OWFkMDExMWVlNzQyY2NjMDJkZDJlYTJjODc2NDY3NDZmYzEgXQoK
V2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgaDgzMDAuCgpDYzogdWNs
aW51eC1oOC1kZXZlbEBsaXN0cy5zb3VyY2Vmb3JnZS5qcApTaWduZWQtb2ZmLWJ5OiBKZW5z
IEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9oODMwMC9pbmNsdWRlL2FzbS90
aHJlYWRfaW5mby5oIHwgNCArKystCiBhcmNoL2g4MzAwL2tlcm5lbC9zaWduYWwuYyAgICAg
ICAgICAgfCAyICstCiAyIGZpbGVzIGNoYW5nZWQsIDQgaW5zZXJ0aW9ucygrKSwgMiBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3RocmVhZF9p
bmZvLmggYi9hcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggMGNk
YWEzMDJkM2QyLi5hNTE4MjE0ZDRkZGQgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgzMDAvaW5jbHVk
ZS9hc20vdGhyZWFkX2luZm8uaAorKysgYi9hcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3RocmVh
ZF9pbmZvLmgKQEAgLTczLDYgKzczLDcgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgdGhyZWFk
X2luZm8gKmN1cnJlbnRfdGhyZWFkX2luZm8odm9pZCkKICNkZWZpbmUgVElGX1NZU0NBTExf
QVVESVQJNwkvKiBzeXNjYWxsIGF1ZGl0aW5nIGFjdGl2ZSAqLwogI2RlZmluZSBUSUZfU1lT
Q0FMTF9UUkFDRVBPSU5UCTgJLyogZm9yIGZ0cmFjZSBzeXNjYWxsIGluc3RydW1lbnRhdGlv
biAqLwogI2RlZmluZSBUSUZfUE9MTElOR19OUkZMQUcJOQkvKiB0cnVlIGlmIHBvbGxfaWRs
ZSgpIGlzIHBvbGxpbmcgVElGX05FRURfUkVTQ0hFRCAqLworI2RlZmluZSBUSUZfTk9USUZZ
X1NJR05BTAkxMAkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogCiAvKiBhcyBh
Ym92ZSwgYnV0IGFzIGJpdCB2YWx1ZXMgKi8KICNkZWZpbmUgX1RJRl9TWVNDQUxMX1RSQUNF
CSgxIDw8IFRJRl9TWVNDQUxMX1RSQUNFKQpAQCAtODMsNiArODQsNyBAQCBzdGF0aWMgaW5s
aW5lIHN0cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJlYWRfaW5mbyh2b2lkKQogI2Rl
ZmluZSBfVElGX1NZU0NBTExfQVVESVQJKDEgPDwgVElGX1NZU0NBTExfQVVESVQpCiAjZGVm
aW5lIF9USUZfU1lTQ0FMTF9UUkFDRVBPSU5UCSgxIDw8IFRJRl9TWVNDQUxMX1RSQUNFUE9J
TlQpCiAjZGVmaW5lIF9USUZfUE9MTElOR19OUkZMQUcJKDEgPDwgVElGX1BPTExJTkdfTlJG
TEFHKQorI2RlZmluZSBfVElGX05PVElGWV9TSUdOQUwJKDEgPDwgVElGX05PVElGWV9TSUdO
QUwpCiAKIC8qIHdvcmsgdG8gZG8gaW4gc3lzY2FsbCB0cmFjZSAqLwogI2RlZmluZSBfVElG
X1dPUktfU1lTQ0FMTF9NQVNLCShfVElGX1NZU0NBTExfVFJBQ0UgfCBfVElGX1NJTkdMRVNU
RVAgfCBcCkBAIC05Miw3ICs5NCw3IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHRocmVhZF9p
bmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQpCiAjZGVmaW5lIF9USUZfQUxMV09SS19N
QVNLCShfVElGX1NZU0NBTExfVFJBQ0UgfCBfVElGX1NJR1BFTkRJTkcgICAgICB8IFwKIAkJ
CQkgX1RJRl9ORUVEX1JFU0NIRUQgIHwgX1RJRl9TWVNDQUxMX0FVRElUICAgfCBcCiAJCQkJ
IF9USUZfU0lOR0xFU1RFUCAgICB8IF9USUZfTk9USUZZX1JFU1VNRSAgIHwgXAotCQkJCSBf
VElGX1NZU0NBTExfVFJBQ0VQT0lOVCkKKwkJCQkgX1RJRl9TWVNDQUxMX1RSQUNFUE9JTlQg
fCBfVElGX05PVElGWV9TSUdOQUwpCiAKIC8qIHdvcmsgdG8gZG8gb24gaW50ZXJydXB0L2V4
Y2VwdGlvbiByZXR1cm4gKi8KICNkZWZpbmUgX1RJRl9XT1JLX01BU0sJCShfVElGX0FMTFdP
UktfTUFTSyAmIH4oX1RJRl9TWVNDQUxMX1RSQUNFIHwgXApkaWZmIC0tZ2l0IGEvYXJjaC9o
ODMwMC9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL2g4MzAwL2tlcm5lbC9zaWduYWwuYwppbmRl
eCA3NWQ5YjdlNjI2YjIuLjc1YTFjMzZiMTA1YSAxMDA2NDQKLS0tIGEvYXJjaC9oODMwMC9r
ZXJuZWwvc2lnbmFsLmMKKysrIGIvYXJjaC9oODMwMC9rZXJuZWwvc2lnbmFsLmMKQEAgLTI3
OSw3ICsyNzksNyBAQCBzdGF0aWMgdm9pZCBkb19zaWduYWwoc3RydWN0IHB0X3JlZ3MgKnJl
Z3MpCiAKIGFzbWxpbmthZ2Ugdm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdz
ICpyZWdzLCB1MzIgdGhyZWFkX2luZm9fZmxhZ3MpCiB7Ci0JaWYgKHRocmVhZF9pbmZvX2Zs
YWdzICYgX1RJRl9TSUdQRU5ESU5HKQorCWlmICh0aHJlYWRfaW5mb19mbGFncyAmIChfVElG
X1NJR1BFTkRJTkcgfCBfVElGX05PVElGWV9TSUdOQUwpKQogCQlkb19zaWduYWwocmVncyk7
CiAKIAlpZiAodGhyZWFkX2luZm9fZmxhZ3MgJiBfVElGX05PVElGWV9SRVNVTUUpCi0tIAoy
LjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0035-c6x-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0035-c6x-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBiYzc0NmU0OTdjNmM4YmNkYTZiYjMwZDU4YTI1MDJkYjRlYWFmNjAwIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDozNTozNCAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzUv
NjNdIGM2eDogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3RyZWFt
IGNvbW1pdCA2ZDY2NWE0ZDhiNDI2NGRlZjBmYmI3MmRhM2E1MDBkOTkwNGZmZTNlIF0KCldp
cmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIGM2eC4KCkNjOiBsaW51eC1j
NngtZGV2QGxpbnV4LWM2eC5vcmcKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VA
a2VybmVsLmRrPgotLS0KIGFyY2gvYzZ4L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCAx
ICsKIGFyY2gvYzZ4L2tlcm5lbC9hc20tb2Zmc2V0cy5jICAgICAgfCAxICsKIGFyY2gvYzZ4
L2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAzICsrLQogMyBmaWxlcyBjaGFuZ2VkLCA0
IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9hcmNoL2M2eC9p
bmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIGIvYXJjaC9jNngvaW5jbHVkZS9hc20vdGhyZWFk
X2luZm8uaAppbmRleCBmNzAzODI4NDRiOTYuLmRkODkxM2Q1NzE4OSAxMDA2NDQKLS0tIGEv
YXJjaC9jNngvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAorKysgYi9hcmNoL2M2eC9pbmNs
dWRlL2FzbS90aHJlYWRfaW5mby5oCkBAIC04Miw2ICs4Miw3IEBAIHN0cnVjdCB0aHJlYWRf
aW5mbyAqY3VycmVudF90aHJlYWRfaW5mbyh2b2lkKQogI2RlZmluZSBUSUZfU0lHUEVORElO
RwkJMgkvKiBzaWduYWwgcGVuZGluZyAqLwogI2RlZmluZSBUSUZfTkVFRF9SRVNDSEVECTMJ
LyogcmVzY2hlZHVsaW5nIG5lY2Vzc2FyeSAqLwogI2RlZmluZSBUSUZfUkVTVE9SRV9TSUdN
QVNLCTQJLyogcmVzdG9yZSBzaWduYWwgbWFzayBpbiBkb19zaWduYWwoKSAqLworI2RlZmlu
ZSBUSUZfTk9USUZZX1NJR05BTAk1CS8qIHNpZ25hbCBub3RpZmljYXRpb25zIGV4aXN0ICov
CiAKICNkZWZpbmUgVElGX01FTURJRQkJMTcJLyogT09NIGtpbGxlciBraWxsZWQgcHJvY2Vz
cyAqLwogCmRpZmYgLS1naXQgYS9hcmNoL2M2eC9rZXJuZWwvYXNtLW9mZnNldHMuYyBiL2Fy
Y2gvYzZ4L2tlcm5lbC9hc20tb2Zmc2V0cy5jCmluZGV4IDBmOGZkZTQ5NDg3NS4uNGEyNjRl
Zjg3ZGNiIDEwMDY0NAotLS0gYS9hcmNoL2M2eC9rZXJuZWwvYXNtLW9mZnNldHMuYworKysg
Yi9hcmNoL2M2eC9rZXJuZWwvYXNtLW9mZnNldHMuYwpAQCAtMTE2LDYgKzExNiw3IEBAIHZv
aWQgZm9vKHZvaWQpCiAJREVGSU5FKF9USUZfTk9USUZZX1JFU1VNRSwgKDE8PFRJRl9OT1RJ
RllfUkVTVU1FKSk7CiAJREVGSU5FKF9USUZfU0lHUEVORElORywgKDE8PFRJRl9TSUdQRU5E
SU5HKSk7CiAJREVGSU5FKF9USUZfTkVFRF9SRVNDSEVELCAoMTw8VElGX05FRURfUkVTQ0hF
RCkpOworCURFRklORShfVElGX05PVElGWV9TSUdOQUwsICgxPDxUSUZfTk9USUZZX1NJR05B
TCkpOwogCiAJREVGSU5FKF9USUZfQUxMV09SS19NQVNLLCBUSUZfQUxMV09SS19NQVNLKTsK
IAlERUZJTkUoX1RJRl9XT1JLX01BU0ssIFRJRl9XT1JLX01BU0spOwpkaWZmIC0tZ2l0IGEv
YXJjaC9jNngva2VybmVsL3NpZ25hbC5jIGIvYXJjaC9jNngva2VybmVsL3NpZ25hbC5jCmlu
ZGV4IGEzZjE1YjlhNzlkYS4uODYyNDYwYzNiMTgzIDEwMDY0NAotLS0gYS9hcmNoL2M2eC9r
ZXJuZWwvc2lnbmFsLmMKKysrIGIvYXJjaC9jNngva2VybmVsL3NpZ25hbC5jCkBAIC0xMyw2
ICsxMyw3IEBACiAjaW5jbHVkZSA8bGludXgvc3lzY2FsbHMuaD4KICNpbmNsdWRlIDxsaW51
eC90cmFjZWhvb2suaD4KIAorI2luY2x1ZGUgPGFzbS9hc20tb2Zmc2V0cy5oPgogI2luY2x1
ZGUgPGFzbS91Y29udGV4dC5oPgogI2luY2x1ZGUgPGFzbS9jYWNoZWZsdXNoLmg+CiAKQEAg
LTMxMyw3ICszMTQsNyBAQCBhc21saW5rYWdlIHZvaWQgZG9fbm90aWZ5X3Jlc3VtZShzdHJ1
Y3QgcHRfcmVncyAqcmVncywgdTMyIHRocmVhZF9pbmZvX2ZsYWdzLAogCQkJCSBpbnQgc3lz
Y2FsbCkKIHsKIAkvKiBkZWFsIHdpdGggcGVuZGluZyBzaWduYWwgZGVsaXZlcnkgKi8KLQlp
ZiAodGhyZWFkX2luZm9fZmxhZ3MgJiAoMSA8PCBUSUZfU0lHUEVORElORykpCisJaWYgKHRo
cmVhZF9pbmZvX2ZsYWdzICYgKF9USUZfU0lHUEVORElORyB8IF9USUZfTk9USUZZX1NJR05B
TCkpCiAJCWRvX3NpZ25hbChyZWdzLCBzeXNjYWxsKTsKIAogCWlmICh0aHJlYWRfaW5mb19m
bGFncyAmICgxIDw8IFRJRl9OT1RJRllfUkVTVU1FKSkKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0034-alpha-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0034-alpha-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBmODVhNWZiYzg1ZTNlZGJmYTg2ZDgzZjE2MzMwN2M5ZWY1OTdlZWNlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgOCBPY3QgMjAyMCAwOToxMTo0MiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzQv
NjNdIGFscGhhOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJl
YW0gY29tbWl0IDVhOWE4ODk3YzI1M2EwNzU4MDU0MDFkMzhkOTg3ZWMxYWMxODI0YjYgXQoK
V2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgYWxwaGEuCgpDYzogbGlu
dXgtYWxwaGFAdmdlci5rZXJuZWwub3JnClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4
Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZv
LmggfCAyICsrCiBhcmNoL2FscGhhL2tlcm5lbC9lbnRyeS5TICAgICAgICAgICAgfCAyICst
CiBhcmNoL2FscGhhL2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAyICstCiAzIGZpbGVz
IGNoYW5nZWQsIDQgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL2FscGhhL2lu
Y2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggODA3ZDdiOWExODYwLi4yNTkyMzU2ZTMy
MTUgMTAwNjQ0Ci0tLSBhL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAor
KysgYi9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTYyLDYgKzYy
LDcgQEAgcmVnaXN0ZXIgc3RydWN0IHRocmVhZF9pbmZvICpfX2N1cnJlbnRfdGhyZWFkX2lu
Zm8gX19hc21fXygiJDgiKTsKICNkZWZpbmUgVElGX1NJR1BFTkRJTkcJCTIJLyogc2lnbmFs
IHBlbmRpbmcgKi8KICNkZWZpbmUgVElGX05FRURfUkVTQ0hFRAkzCS8qIHJlc2NoZWR1bGlu
ZyBuZWNlc3NhcnkgKi8KICNkZWZpbmUgVElGX1NZU0NBTExfQVVESVQJNAkvKiBzeXNjYWxs
IGF1ZGl0IGFjdGl2ZSAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAk1CS8qIHNpZ25h
bCBub3RpZmljYXRpb25zIGV4aXN0ICovCiAjZGVmaW5lIFRJRl9ESUVfSUZfS0VSTkVMCTkJ
LyogZGlrIHJlY3Vyc2lvbiBsb2NrICovCiAjZGVmaW5lIFRJRl9NRU1ESUUJCTEzCS8qIGlz
IHRlcm1pbmF0aW5nIGR1ZSB0byBPT00ga2lsbGVyICovCiAjZGVmaW5lIFRJRl9QT0xMSU5H
X05SRkxBRwkxNAkvKiBpZGxlIGlzIHBvbGxpbmcgZm9yIFRJRl9ORUVEX1JFU0NIRUQgKi8K
QEAgLTcxLDYgKzcyLDcgQEAgcmVnaXN0ZXIgc3RydWN0IHRocmVhZF9pbmZvICpfX2N1cnJl
bnRfdGhyZWFkX2luZm8gX19hc21fXygiJDgiKTsKICNkZWZpbmUgX1RJRl9ORUVEX1JFU0NI
RUQJKDE8PFRJRl9ORUVEX1JFU0NIRUQpCiAjZGVmaW5lIF9USUZfTk9USUZZX1JFU1VNRQko
MTw8VElGX05PVElGWV9SRVNVTUUpCiAjZGVmaW5lIF9USUZfU1lTQ0FMTF9BVURJVAkoMTw8
VElGX1NZU0NBTExfQVVESVQpCisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05BTAkoMTw8VElG
X05PVElGWV9TSUdOQUwpCiAjZGVmaW5lIF9USUZfUE9MTElOR19OUkZMQUcJKDE8PFRJRl9Q
T0xMSU5HX05SRkxBRykKIAogLyogV29yayB0byBkbyBvbiBpbnRlcnJ1cHQvZXhjZXB0aW9u
IHJldHVybi4gICovCmRpZmYgLS1naXQgYS9hcmNoL2FscGhhL2tlcm5lbC9lbnRyeS5TIGIv
YXJjaC9hbHBoYS9rZXJuZWwvZW50cnkuUwppbmRleCAyZTA5MjQ4ZjgzMjQuLmUyMjdmM2Ey
OWE0MyAxMDA2NDQKLS0tIGEvYXJjaC9hbHBoYS9rZXJuZWwvZW50cnkuUworKysgYi9hcmNo
L2FscGhhL2tlcm5lbC9lbnRyeS5TCkBAIC01NDQsNyArNTQ0LDcgQEAgJHJldF9zdWNjZXNz
OgogCS5hbGlnbgk0CiAJLnR5cGUJd29ya19wZW5kaW5nLCBAZnVuY3Rpb24KIHdvcmtfcGVu
ZGluZzoKLQlhbmQJJDE3LCBfVElGX05PVElGWV9SRVNVTUUgfCBfVElGX1NJR1BFTkRJTkcs
ICQyCisJYW5kCSQxNywgX1RJRl9OT1RJRllfUkVTVU1FIHwgX1RJRl9TSUdQRU5ESU5HIHwg
X1RJRl9OT1RJRllfU0lHTkFMLCAkMgogCWJuZQkkMiwgJHdvcmtfbm90aWZ5c2lnCiAKICR3
b3JrX3Jlc2NoZWQ6CmRpZmYgLS1naXQgYS9hcmNoL2FscGhhL2tlcm5lbC9zaWduYWwuYyBi
L2FyY2gvYWxwaGEva2VybmVsL3NpZ25hbC5jCmluZGV4IDM3MzllZmNlMWVjMC4uOTQ4Yjg5
Nzg5ZGE4IDEwMDY0NAotLS0gYS9hcmNoL2FscGhhL2tlcm5lbC9zaWduYWwuYworKysgYi9h
cmNoL2FscGhhL2tlcm5lbC9zaWduYWwuYwpAQCAtNTI3LDcgKzUyNyw3IEBAIGRvX3dvcmtf
cGVuZGluZyhzdHJ1Y3QgcHRfcmVncyAqcmVncywgdW5zaWduZWQgbG9uZyB0aHJlYWRfZmxh
Z3MsCiAJCQlzY2hlZHVsZSgpOwogCQl9IGVsc2UgewogCQkJbG9jYWxfaXJxX2VuYWJsZSgp
OwotCQkJaWYgKHRocmVhZF9mbGFncyAmIF9USUZfU0lHUEVORElORykgeworCQkJaWYgKHRo
cmVhZF9mbGFncyAmIChfVElGX1NJR1BFTkRJTkd8X1RJRl9OT1RJRllfU0lHTkFMKSkgewog
CQkJCWRvX3NpZ25hbChyZWdzLCByMCwgcjE5KTsKIAkJCQlyMCA9IDA7CiAJCQl9IGVsc2Ug
ewotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0033-xtensa-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0033-xtensa-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA0YTIwODg3ZDE0MmMyM2VhNGY2ZTBkYzFkN2MzOTc1NmVjNzFkMzI3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNTo1NjowNyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzMv
NjNdIHh0ZW5zYTogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3Ry
ZWFtIGNvbW1pdCBiZWM1OGY0MGQ2YzUzNzJkODEyYzkzY2MzOTQ3ZjNiYzk3NDQwZTU3IF0K
CldpcmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIHh0ZW5zYS4KClRoYW5r
cyB0byBNYXggRmlsaXBwb3YgPGpjbXZia2JjQGdtYWlsLmNvbT4gZm9yIG1ha2luZyB0aGUg
YXNtIGNvcnJlY3QuCgpDYzogbGludXgteHRlbnNhQGxpbnV4LXh0ZW5zYS5vcmcKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGFyY2gveHRlbnNh
L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCA1ICsrKystCiBhcmNoL3h0ZW5zYS9rZXJu
ZWwvZW50cnkuUyAgICAgICAgICAgIHwgNCArKy0tCiBhcmNoL3h0ZW5zYS9rZXJuZWwvc2ln
bmFsLmMgICAgICAgICAgIHwgMyArKy0KIDMgZmlsZXMgY2hhbmdlZCwgOCBpbnNlcnRpb25z
KCspLCA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNhL2luY2x1ZGUv
YXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oCmluZGV4IDZhY2JiZTBkODdkMy4uYTMxMjMzM2E5YWRkIDEwMDY0NAotLS0gYS9hcmNo
L3h0ZW5zYS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCisrKyBiL2FyY2gveHRlbnNhL2lu
Y2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTExMSwxOCArMTExLDIxIEBAIHN0YXRpYyBp
bmxpbmUgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQpCiAj
ZGVmaW5lIFRJRl9ORUVEX1JFU0NIRUQJMgkvKiByZXNjaGVkdWxpbmcgbmVjZXNzYXJ5ICov
CiAjZGVmaW5lIFRJRl9TSU5HTEVTVEVQCQkzCS8qIHJlc3RvcmUgc2luZ2xlc3RlcCBvbiBy
ZXR1cm4gdG8gdXNlciBtb2RlICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX1RSQUNFUE9JTlQJ
NAkvKiBzeXNjYWxsIHRyYWNlcG9pbnQgaW5zdHJ1bWVudGF0aW9uICovCi0jZGVmaW5lIFRJ
Rl9NRU1ESUUJCTUJLyogaXMgdGVybWluYXRpbmcgZHVlIHRvIE9PTSBraWxsZXIgKi8KKyNk
ZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNQkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlz
dCAqLwogI2RlZmluZSBUSUZfUkVTVE9SRV9TSUdNQVNLCTYJLyogcmVzdG9yZSBzaWduYWwg
bWFzayBpbiBkb19zaWduYWwoKSAqLwogI2RlZmluZSBUSUZfTk9USUZZX1JFU1VNRQk3CS8q
IGNhbGxiYWNrIGJlZm9yZSByZXR1cm5pbmcgdG8gdXNlciAqLwogI2RlZmluZSBUSUZfREJf
RElTQUJMRUQJCTgJLyogZGVidWcgdHJhcCBkaXNhYmxlZCBmb3Igc3lzY2FsbCAqLwogI2Rl
ZmluZSBUSUZfU1lTQ0FMTF9BVURJVAk5CS8qIHN5c2NhbGwgYXVkaXRpbmcgYWN0aXZlICov
CiAjZGVmaW5lIFRJRl9TRUNDT01QCQkxMAkvKiBzZWN1cmUgY29tcHV0aW5nICovCisjZGVm
aW5lIFRJRl9NRU1ESUUJCTExCS8qIGlzIHRlcm1pbmF0aW5nIGR1ZSB0byBPT00ga2lsbGVy
ICovCiAKICNkZWZpbmUgX1RJRl9TWVNDQUxMX1RSQUNFCSgxPDxUSUZfU1lTQ0FMTF9UUkFD
RSkKICNkZWZpbmUgX1RJRl9TSUdQRU5ESU5HCQkoMTw8VElGX1NJR1BFTkRJTkcpCiAjZGVm
aW5lIF9USUZfTkVFRF9SRVNDSEVECSgxPDxUSUZfTkVFRF9SRVNDSEVEKQogI2RlZmluZSBf
VElGX1NJTkdMRVNURVAJCSgxPDxUSUZfU0lOR0xFU1RFUCkKICNkZWZpbmUgX1RJRl9TWVND
QUxMX1RSQUNFUE9JTlQJKDE8PFRJRl9TWVNDQUxMX1RSQUNFUE9JTlQpCisjZGVmaW5lIF9U
SUZfTk9USUZZX1NJR05BTAkoMTw8VElGX05PVElGWV9TSUdOQUwpCisjZGVmaW5lIF9USUZf
Tk9USUZZX1JFU1VNRQkoMTw8VElGX05PVElGWV9SRVNVTUUpCiAjZGVmaW5lIF9USUZfU1lT
Q0FMTF9BVURJVAkoMTw8VElGX1NZU0NBTExfQVVESVQpCiAjZGVmaW5lIF9USUZfU0VDQ09N
UAkJKDE8PFRJRl9TRUNDT01QKQogCmRpZmYgLS1naXQgYS9hcmNoL3h0ZW5zYS9rZXJuZWwv
ZW50cnkuUyBiL2FyY2gveHRlbnNhL2tlcm5lbC9lbnRyeS5TCmluZGV4IDcwM2NmNjIwNWVm
ZS4uNjQ3YjE2MmY5NTliIDEwMDY0NAotLS0gYS9hcmNoL3h0ZW5zYS9rZXJuZWwvZW50cnku
UworKysgYi9hcmNoL3h0ZW5zYS9rZXJuZWwvZW50cnkuUwpAQCAtNTAwLDggKzUwMCw4IEBA
IGNvbW1vbl9leGNlcHRpb25fcmV0dXJuOgogCSAqLwogCiAJX2Jic2kubAlhNCwgVElGX05F
RURfUkVTQ0hFRCwgM2YKLQlfYmJzaS5sCWE0LCBUSUZfTk9USUZZX1JFU1VNRSwgMmYKLQlf
YmJjaS5sCWE0LCBUSUZfU0lHUEVORElORywgNWYKKwltb3ZpCWEyLCBfVElGX1NJR1BFTkRJ
TkcgfCBfVElGX05PVElGWV9SRVNVTUUgfCBfVElGX05PVElGWV9TSUdOQUwKKwlibm9uZQlh
NCwgYTIsIDVmCiAKIDI6CWwzMmkJYTQsIGExLCBQVF9ERVBDCiAJYmdldWkJYTQsIFZBTElE
X0RPVUJMRV9FWENFUFRJT05fQUREUkVTUywgNGYKZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNh
L2tlcm5lbC9zaWduYWwuYyBiL2FyY2gveHRlbnNhL2tlcm5lbC9zaWduYWwuYwppbmRleCAx
Y2IyMzBmYWZkZjIuLmYyYjAwZjQzY2YyMyAxMDA2NDQKLS0tIGEvYXJjaC94dGVuc2Eva2Vy
bmVsL3NpZ25hbC5jCisrKyBiL2FyY2gveHRlbnNhL2tlcm5lbC9zaWduYWwuYwpAQCAtNDk4
LDcgKzQ5OCw4IEBAIHN0YXRpYyB2b2lkIGRvX3NpZ25hbChzdHJ1Y3QgcHRfcmVncyAqcmVn
cykKIAogdm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdzICpyZWdzKQogewot
CWlmICh0ZXN0X3RocmVhZF9mbGFnKFRJRl9TSUdQRU5ESU5HKSkKKwlpZiAodGVzdF90aHJl
YWRfZmxhZyhUSUZfU0lHUEVORElORykgfHwKKwkgICAgdGVzdF90aHJlYWRfZmxhZyhUSUZf
Tk9USUZZX1NJR05BTCkpCiAJCWRvX3NpZ25hbChyZWdzKTsKIAogCWlmICh0ZXN0X3RocmVh
ZF9mbGFnKFRJRl9OT1RJRllfUkVTVU1FKSkKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0032-arm-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0032-arm-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA0NTQ4Y2JhNWZmMmE3YjgxNDk1YjdjMTA5YjQ4OTcyNjU1NzE1MTQyIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNjowMDo0OSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzIv
NjNdIGFybTogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3RyZWFt
IGNvbW1pdCAzMmQ1OTc3M2RhMzhjZDgzZTQ5N2E3MGViOTc1NGQ0YmJhZTNhZWFlIF0KCldp
cmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIGFybS4KCkNjOiBsaW51eC1h
cm0ta2VybmVsQGxpc3RzLmluZnJhZGVhZC5vcmcKQWNrZWQtYnk6IFJ1c3NlbGwgS2luZyA8
cm1rK2tlcm5lbEBhcm1saW51eC5vcmcudWs+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2Ug
PGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL2FybS9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oIHwgNyArKysrKystCiBhcmNoL2FybS9rZXJuZWwvZW50cnktY29tbW9uLlMgICAgIHwg
NiArKystLS0KIGFyY2gvYXJtL2tlcm5lbC9lbnRyeS12N20uUyAgICAgICAgfCAyICstCiBh
cmNoL2FybS9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwgMiArLQogNCBmaWxlcyBjaGFu
Z2VkLCAxMSBpbnNlcnRpb25zKCspLCA2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Fy
Y2gvYXJtL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL2FybS9pbmNsdWRlL2Fz
bS90aHJlYWRfaW5mby5oCmluZGV4IDUzNmI2Yjk3OWY2My4uZWI3Y2UyNzQ3ZWIwIDEwMDY0
NAotLS0gYS9hcmNoL2FybS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCisrKyBiL2FyY2gv
YXJtL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTEyNiw2ICsxMjYsOCBAQCBleHRl
cm4gaW50IHZmcF9yZXN0b3JlX3VzZXJfaHdzdGF0ZShzdHJ1Y3QgdXNlcl92ZnAgKiwKICAq
IHRocmVhZCBpbmZvcm1hdGlvbiBmbGFnczoKICAqICBUSUZfVVNFREZQVQkJLSBGUFUgd2Fz
IHVzZWQgYnkgdGhpcyB0YXNrIHRoaXMgcXVhbnR1bSAoU01QKQogICogIFRJRl9QT0xMSU5H
X05SRkxBRwktIHRydWUgaWYgcG9sbF9pZGxlKCkgaXMgcG9sbGluZyBUSUZfTkVFRF9SRVND
SEVECisgKgorICogQW55IGJpdCBpbiB0aGUgcmFuZ2Ugb2YgMC4uMTUgd2lsbCBjYXVzZSBk
b193b3JrX3BlbmRpbmcoKSB0byBiZSBpbnZva2VkLgogICovCiAjZGVmaW5lIFRJRl9TSUdQ
RU5ESU5HCQkwCS8qIHNpZ25hbCBwZW5kaW5nICovCiAjZGVmaW5lIFRJRl9ORUVEX1JFU0NI
RUQJMQkvKiByZXNjaGVkdWxpbmcgbmVjZXNzYXJ5ICovCkBAIC0xMzUsNiArMTM3LDcgQEAg
ZXh0ZXJuIGludCB2ZnBfcmVzdG9yZV91c2VyX2h3c3RhdGUoc3RydWN0IHVzZXJfdmZwICos
CiAjZGVmaW5lIFRJRl9TWVNDQUxMX0FVRElUCTUJLyogc3lzY2FsbCBhdWRpdGluZyBhY3Rp
dmUgKi8KICNkZWZpbmUgVElGX1NZU0NBTExfVFJBQ0VQT0lOVAk2CS8qIHN5c2NhbGwgdHJh
Y2Vwb2ludCBpbnN0cnVtZW50YXRpb24gKi8KICNkZWZpbmUgVElGX1NFQ0NPTVAJCTcJLyog
c2VjY29tcCBzeXNjYWxsIGZpbHRlcmluZyBhY3RpdmUgKi8KKyNkZWZpbmUgVElGX05PVElG
WV9TSUdOQUwJOAkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogCiAjZGVmaW5l
IFRJRl9VU0lOR19JV01NWFQJMTcKICNkZWZpbmUgVElGX01FTURJRQkJMTgJLyogaXMgdGVy
bWluYXRpbmcgZHVlIHRvIE9PTSBraWxsZXIgKi8KQEAgLTE0OCw2ICsxNTEsNyBAQCBleHRl
cm4gaW50IHZmcF9yZXN0b3JlX3VzZXJfaHdzdGF0ZShzdHJ1Y3QgdXNlcl92ZnAgKiwKICNk
ZWZpbmUgX1RJRl9TWVNDQUxMX0FVRElUCSgxIDw8IFRJRl9TWVNDQUxMX0FVRElUKQogI2Rl
ZmluZSBfVElGX1NZU0NBTExfVFJBQ0VQT0lOVAkoMSA8PCBUSUZfU1lTQ0FMTF9UUkFDRVBP
SU5UKQogI2RlZmluZSBfVElGX1NFQ0NPTVAJCSgxIDw8IFRJRl9TRUNDT01QKQorI2RlZmlu
ZSBfVElGX05PVElGWV9TSUdOQUwJKDEgPDwgVElGX05PVElGWV9TSUdOQUwpCiAjZGVmaW5l
IF9USUZfVVNJTkdfSVdNTVhUCSgxIDw8IFRJRl9VU0lOR19JV01NWFQpCiAKIC8qIENoZWNr
cyBmb3IgYW55IHN5c2NhbGwgd29yayBpbiBlbnRyeS1jb21tb24uUyAqLwpAQCAtMTU4LDcg
KzE2Miw4IEBAIGV4dGVybiBpbnQgdmZwX3Jlc3RvcmVfdXNlcl9od3N0YXRlKHN0cnVjdCB1
c2VyX3ZmcCAqLAogICogQ2hhbmdlIHRoZXNlIGFuZCB5b3UgYnJlYWsgQVNNIGNvZGUgaW4g
ZW50cnktY29tbW9uLlMKICAqLwogI2RlZmluZSBfVElGX1dPUktfTUFTSwkJKF9USUZfTkVF
RF9SRVNDSEVEIHwgX1RJRl9TSUdQRU5ESU5HIHwgXAotCQkJCSBfVElGX05PVElGWV9SRVNV
TUUgfCBfVElGX1VQUk9CRSkKKwkJCQkgX1RJRl9OT1RJRllfUkVTVU1FIHwgX1RJRl9VUFJP
QkUgfCBcCisJCQkJIF9USUZfTk9USUZZX1NJR05BTCkKIAogI2VuZGlmIC8qIF9fS0VSTkVM
X18gKi8KICNlbmRpZiAvKiBfX0FTTV9BUk1fVEhSRUFEX0lORk9fSCAqLwpkaWZmIC0tZ2l0
IGEvYXJjaC9hcm0va2VybmVsL2VudHJ5LWNvbW1vbi5TIGIvYXJjaC9hcm0va2VybmVsL2Vu
dHJ5LWNvbW1vbi5TCmluZGV4IGJkNjE5ZGE3M2M4NC4uOWIzYzczNzU3NWU5IDEwMDY0NAot
LS0gYS9hcmNoL2FybS9rZXJuZWwvZW50cnktY29tbW9uLlMKKysrIGIvYXJjaC9hcm0va2Vy
bmVsL2VudHJ5LWNvbW1vbi5TCkBAIC01Myw3ICs1Myw3IEBAIF9fcmV0X2Zhc3Rfc3lzY2Fs
bDoKIAljbXAJcjIsICNUQVNLX1NJWkUKIAlibG5lCWFkZHJfbGltaXRfY2hlY2tfZmFpbGVk
CiAJbGRyCXIxLCBbdHNrLCAjVElfRkxBR1NdCQlAIHJlLWNoZWNrIGZvciBzeXNjYWxsIHRy
YWNpbmcKLQl0c3QJcjEsICNfVElGX1NZU0NBTExfV09SSyB8IF9USUZfV09SS19NQVNLCisJ
bW92cwlyMSwgcjEsIGxzbCAjMTYKIAlibmUJZmFzdF93b3JrX3BlbmRpbmcKIAogCkBAIC05
MCw3ICs5MCw3IEBAIF9fcmV0X2Zhc3Rfc3lzY2FsbDoKIAljbXAJcjIsICNUQVNLX1NJWkUK
IAlibG5lCWFkZHJfbGltaXRfY2hlY2tfZmFpbGVkCiAJbGRyCXIxLCBbdHNrLCAjVElfRkxB
R1NdCQlAIHJlLWNoZWNrIGZvciBzeXNjYWxsIHRyYWNpbmcKLQl0c3QJcjEsICNfVElGX1NZ
U0NBTExfV09SSyB8IF9USUZfV09SS19NQVNLCisJbW92cwlyMSwgcjEsIGxzbCAjMTYKIAli
ZXEJbm9fd29ya19wZW5kaW5nCiAgVU5XSU5EKC5mbmVuZAkJKQogRU5EUFJPQyhyZXRfZmFz
dF9zeXNjYWxsKQpAQCAtMTMxLDcgKzEzMSw3IEBAIEVOVFJZKHJldF90b191c2VyX2Zyb21f
aXJxKQogCWNtcAlyMiwgI1RBU0tfU0laRQogCWJsbmUJYWRkcl9saW1pdF9jaGVja19mYWls
ZWQKIAlsZHIJcjEsIFt0c2ssICNUSV9GTEFHU10KLQl0c3QJcjEsICNfVElGX1dPUktfTUFT
SworCW1vdnMJcjEsIHIxLCBsc2wgIzE2CiAJYm5lCXNsb3dfd29ya19wZW5kaW5nCiBub193
b3JrX3BlbmRpbmc6CiAJYXNtX3RyYWNlX2hhcmRpcnFzX29uIHNhdmUgPSAwCmRpZmYgLS1n
aXQgYS9hcmNoL2FybS9rZXJuZWwvZW50cnktdjdtLlMgYi9hcmNoL2FybS9rZXJuZWwvZW50
cnktdjdtLlMKaW5kZXggZGUxZjIwNjI0YmUxLi5kMGU4OTg2MDhkMzAgMTAwNjQ0Ci0tLSBh
L2FyY2gvYXJtL2tlcm5lbC9lbnRyeS12N20uUworKysgYi9hcmNoL2FybS9rZXJuZWwvZW50
cnktdjdtLlMKQEAgLTU5LDcgKzU5LDcgQEAgX19pcnFfZW50cnk6CiAKIAlnZXRfdGhyZWFk
X2luZm8gdHNrCiAJbGRyCXIyLCBbdHNrLCAjVElfRkxBR1NdCi0JdHN0CXIyLCAjX1RJRl9X
T1JLX01BU0sKKwltb3ZzCXIyLCByMiwgbHNsICMxNgogCWJlcQkyZgkJCUAgbm8gd29yayBw
ZW5kaW5nCiAJbW92CXIwLCAjVjdNX1NDQl9JQ1NSX1BFTkRTVlNFVAogCXN0cglyMCwgW3Ix
LCBWN01fU0NCX0lDU1JdCUAgcmFpc2UgUGVuZFNWCmRpZmYgLS1naXQgYS9hcmNoL2FybS9r
ZXJuZWwvc2lnbmFsLmMgYi9hcmNoL2FybS9rZXJuZWwvc2lnbmFsLmMKaW5kZXggMmY4MWQz
YWY1ZjlhLi5hM2EzOGQwYTRjODUgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL2tlcm5lbC9zaWdu
YWwuYworKysgYi9hcmNoL2FybS9rZXJuZWwvc2lnbmFsLmMKQEAgLTY1NSw3ICs2NTUsNyBA
QCBkb193b3JrX3BlbmRpbmcoc3RydWN0IHB0X3JlZ3MgKnJlZ3MsIHVuc2lnbmVkIGludCB0
aHJlYWRfZmxhZ3MsIGludCBzeXNjYWxsKQogCQkJaWYgKHVubGlrZWx5KCF1c2VyX21vZGUo
cmVncykpKQogCQkJCXJldHVybiAwOwogCQkJbG9jYWxfaXJxX2VuYWJsZSgpOwotCQkJaWYg
KHRocmVhZF9mbGFncyAmIF9USUZfU0lHUEVORElORykgeworCQkJaWYgKHRocmVhZF9mbGFn
cyAmIChfVElGX1NJR1BFTkRJTkcgfCBfVElGX05PVElGWV9TSUdOQUwpKSB7CiAJCQkJaW50
IHJlc3RhcnQgPSBkb19zaWduYWwocmVncywgc3lzY2FsbCk7CiAJCQkJaWYgKHVubGlrZWx5
KHJlc3RhcnQpKSB7CiAJCQkJCS8qCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0031-microblaze-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0031-microblaze-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBhYjc0NzAyZDUyNWM1MmNiYjVkZWE5ZmE1MTY5ZjNmNmY1ZWFlMmQ3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToxMzo1NyAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzEv
NjNdIG1pY3JvYmxhemU6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBV
cHN0cmVhbSBjb21taXQgZjRlYTA4OWU0MjllMGQzNjZjZDFhMzRhMmNiZTNjN2IxM2Q5OGQ3
NSBdCgpXaXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBtaWNyb2JsYXpl
LgoKQWNrZWQtYnk6IE1pY2hhbCBTaW1layA8bWljaGFsLnNpbWVrQHhpbGlueC5jb20+ClNp
Z25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL21p
Y3JvYmxhemUvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCB8IDIgKysKIGFyY2gvbWljcm9i
bGF6ZS9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwgMyArKy0KIDIgZmlsZXMgY2hhbmdl
ZCwgNCBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9t
aWNyb2JsYXplL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL21pY3JvYmxhemUv
aW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAppbmRleCBhZDhlOGZjYjkwZDMuLjQ0ZjVjYTMz
MTg2MiAxMDA2NDQKLS0tIGEvYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3RocmVhZF9p
bmZvLmgKKysrIGIvYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgK
QEAgLTEwNyw2ICsxMDcsNyBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCB0aHJlYWRfaW5mbyAq
Y3VycmVudF90aHJlYWRfaW5mbyh2b2lkKQogI2RlZmluZSBUSUZfTkVFRF9SRVNDSEVECTMg
LyogcmVzY2hlZHVsaW5nIG5lY2Vzc2FyeSAqLwogLyogcmVzdG9yZSBzaW5nbGVzdGVwIG9u
IHJldHVybiB0byB1c2VyIG1vZGUgKi8KICNkZWZpbmUgVElGX1NJTkdMRVNURVAJCTQKKyNk
ZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNQkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlz
dCAqLwogI2RlZmluZSBUSUZfTUVNRElFCQk2CS8qIGlzIHRlcm1pbmF0aW5nIGR1ZSB0byBP
T00ga2lsbGVyICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX0FVRElUCTkgICAgICAgLyogc3lz
Y2FsbCBhdWRpdGluZyBhY3RpdmUgKi8KICNkZWZpbmUgVElGX1NFQ0NPTVAJCTEwICAgICAg
Lyogc2VjdXJlIGNvbXB1dGluZyAqLwpAQCAtMTE5LDYgKzEyMCw3IEBAIHN0YXRpYyBpbmxp
bmUgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQpCiAjZGVm
aW5lIF9USUZfU0lHUEVORElORwkJKDEgPDwgVElGX1NJR1BFTkRJTkcpCiAjZGVmaW5lIF9U
SUZfTkVFRF9SRVNDSEVECSgxIDw8IFRJRl9ORUVEX1JFU0NIRUQpCiAjZGVmaW5lIF9USUZf
U0lOR0xFU1RFUAkJKDEgPDwgVElGX1NJTkdMRVNURVApCisjZGVmaW5lIF9USUZfTk9USUZZ
X1NJR05BTAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9QT0xMSU5H
X05SRkxBRwkoMSA8PCBUSUZfUE9MTElOR19OUkZMQUcpCiAjZGVmaW5lIF9USUZfU1lTQ0FM
TF9BVURJVAkoMSA8PCBUSUZfU1lTQ0FMTF9BVURJVCkKICNkZWZpbmUgX1RJRl9TRUNDT01Q
CQkoMSA8PCBUSUZfU0VDQ09NUCkKZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9rZXJu
ZWwvc2lnbmFsLmMgYi9hcmNoL21pY3JvYmxhemUva2VybmVsL3NpZ25hbC5jCmluZGV4IGYx
MWEwY2NjY2FiYy4uNWE4ZDE3M2Q3Yjc1IDEwMDY0NAotLS0gYS9hcmNoL21pY3JvYmxhemUv
a2VybmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9rZXJuZWwvc2lnbmFsLmMK
QEAgLTMxMyw3ICszMTMsOCBAQCBzdGF0aWMgdm9pZCBkb19zaWduYWwoc3RydWN0IHB0X3Jl
Z3MgKnJlZ3MsIGludCBpbl9zeXNjYWxsKQogCiBhc21saW5rYWdlIHZvaWQgZG9fbm90aWZ5
X3Jlc3VtZShzdHJ1Y3QgcHRfcmVncyAqcmVncywgaW50IGluX3N5c2NhbGwpCiB7Ci0JaWYg
KHRlc3RfdGhyZWFkX2ZsYWcoVElGX1NJR1BFTkRJTkcpKQorCWlmICh0ZXN0X3RocmVhZF9m
bGFnKFRJRl9TSUdQRU5ESU5HKSB8fAorCSAgICB0ZXN0X3RocmVhZF9mbGFnKFRJRl9OT1RJ
RllfU0lHTkFMKSkKIAkJZG9fc2lnbmFsKHJlZ3MsIGluX3N5c2NhbGwpOwogCiAJaWYgKHRl
c3RfdGhyZWFkX2ZsYWcoVElGX05PVElGWV9SRVNVTUUpKQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0030-hexagon-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0030-hexagon-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBiYTRiMjQ2MTgyOTBjN2VlNTIxODBhYTM3MDY3MjllNGZiMmZkNGU0IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDo0NToyMiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMzAv
NjNdIGhleGFnb246IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0
cmVhbSBjb21taXQgYWVlYzgxOTM1NzhhNzFkMGFlZTIxMjE4MzUxODQ5ZDM4MTIxY2U5MCBd
CgpXaXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBoZXhhZ29uLgoKQ2M6
IGxpbnV4LWhleGFnb25Admdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBCcmlhbiBDYWluIDxi
Y2FpbkBjb2RlYXVyb3JhLm9yZz4KU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VA
a2VybmVsLmRrPgotLS0KIGFyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5o
IHwgMiArKwogYXJjaC9oZXhhZ29uL2tlcm5lbC9wcm9jZXNzLmMgICAgICAgICAgfCAyICst
CiAyIGZpbGVzIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlm
ZiAtLWdpdCBhL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIGIvYXJj
aC9oZXhhZ29uL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggNTYzZGExOTg2NDY0
Li41MzU5NzY2NjViZjAgMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS90
aHJlYWRfaW5mby5oCisrKyBiL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oCkBAIC05NSw2ICs5NSw3IEBAIHJlZ2lzdGVyIHN0cnVjdCB0aHJlYWRfaW5mbyAqX19j
dXJyZW50X3RocmVhZF9pbmZvIGFzbShRVU9URURfVEhSRUFESU5GT19SRUcpOwogI2RlZmlu
ZSBUSUZfTkVFRF9SRVNDSEVEICAgICAgICAzICAgICAgIC8qIHJlc2NoZWR1bGluZyBuZWNl
c3NhcnkgKi8KICNkZWZpbmUgVElGX1NJTkdMRVNURVAgICAgICAgICAgNCAgICAgICAvKiBy
ZXN0b3JlIHNzIEAgcmV0dXJuIHRvIHVzciBtb2RlICovCiAjZGVmaW5lIFRJRl9SRVNUT1JF
X1NJR01BU0sgICAgIDYgICAgICAgLyogcmVzdG9yZSBzaWcgbWFzayBpbiBkb19zaWduYWwo
KSAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAk3ICAgICAgIC8qIHNpZ25hbCBub3Rp
ZmljYXRpb25zIGV4aXN0ICovCiAvKiB0cnVlIGlmIHBvbGxfaWRsZSgpIGlzIHBvbGxpbmcg
VElGX05FRURfUkVTQ0hFRCAqLwogI2RlZmluZSBUSUZfTUVNRElFICAgICAgICAgICAgICAx
NyAgICAgIC8qIE9PTSBraWxsZXIga2lsbGVkIHByb2Nlc3MgKi8KIApAQCAtMTAzLDYgKzEw
NCw3IEBAIHJlZ2lzdGVyIHN0cnVjdCB0aHJlYWRfaW5mbyAqX19jdXJyZW50X3RocmVhZF9p
bmZvIGFzbShRVU9URURfVEhSRUFESU5GT19SRUcpOwogI2RlZmluZSBfVElGX1NJR1BFTkRJ
TkcgICAgICAgICAoMSA8PCBUSUZfU0lHUEVORElORykKICNkZWZpbmUgX1RJRl9ORUVEX1JF
U0NIRUQgICAgICAgKDEgPDwgVElGX05FRURfUkVTQ0hFRCkKICNkZWZpbmUgX1RJRl9TSU5H
TEVTVEVQICAgICAgICAgKDEgPDwgVElGX1NJTkdMRVNURVApCisjZGVmaW5lIF9USUZfTk9U
SUZZX1NJR05BTAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKIAogLyogd29yayB0byBkbyBv
biBpbnRlcnJ1cHQvZXhjZXB0aW9uIHJldHVybiAtIEFsbCBidXQgVElGX1NZU0NBTExfVFJB
Q0UgKi8KICNkZWZpbmUgX1RJRl9XT1JLX01BU0sgICAgICAgICAgKDB4MDAwMEZGRkYgJiB+
X1RJRl9TWVNDQUxMX1RSQUNFKQpkaWZmIC0tZ2l0IGEvYXJjaC9oZXhhZ29uL2tlcm5lbC9w
cm9jZXNzLmMgYi9hcmNoL2hleGFnb24va2VybmVsL3Byb2Nlc3MuYwppbmRleCA2Nzc2N2M1
ZWQ5OGMuLjZhOTgwY2JhN2IyOSAxMDA2NDQKLS0tIGEvYXJjaC9oZXhhZ29uL2tlcm5lbC9w
cm9jZXNzLmMKKysrIGIvYXJjaC9oZXhhZ29uL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTE3NCw3
ICsxNzQsNyBAQCBpbnQgZG9fd29ya19wZW5kaW5nKHN0cnVjdCBwdF9yZWdzICpyZWdzLCB1
MzIgdGhyZWFkX2luZm9fZmxhZ3MpCiAJCXJldHVybiAxOwogCX0KIAotCWlmICh0aHJlYWRf
aW5mb19mbGFncyAmIF9USUZfU0lHUEVORElORykgeworCWlmICh0aHJlYWRfaW5mb19mbGFn
cyAmIChfVElGX1NJR1BFTkRJTkcgfCBfVElGX05PVElGWV9TSUdOQUwpKSB7CiAJCWRvX3Np
Z25hbChyZWdzKTsKIAkJcmV0dXJuIDE7CiAJfQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0029-csky-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0029-csky-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA5Zjc2NzgxODBiZjZmZjg1ZmJkMzJiZDgzZmYyODdhN2ViNGE2NjAyIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNDozOTowMCAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjkv
NjNdIGNza3k6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgZjM5MjRkNzYzYzhhZjRjNWQ0NDFiNjY2YzAxZjRkZTAzYWM5NDQ5ZSBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBjc2t5LgoKQ2M6IGxpbnV4
LWNza3lAdmdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBHdW8gUmVuIDxndW9yZW5Aa2VybmVs
Lm9yZz4KU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0K
IGFyY2gvY3NreS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIHwgNSArKysrLQogYXJjaC9j
c2t5L2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAyICstCiAyIGZpbGVzIGNoYW5nZWQs
IDUgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2Nz
a3kvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCBiL2FyY2gvY3NreS9pbmNsdWRlL2FzbS90
aHJlYWRfaW5mby5oCmluZGV4IDY4ZTdhMTIyNzE3MC4uMjE0NTZhMzczN2MyIDEwMDY0NAot
LS0gYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAorKysgYi9hcmNoL2Nz
a3kvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaApAQCAtNjQsNiArNjQsNyBAQCBzdGF0aWMg
aW5saW5lIHN0cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJlYWRfaW5mbyh2b2lkKQog
I2RlZmluZSBUSUZfU1lTQ0FMTF9UUkFDRQk0CS8qIHN5c2NhbGwgdHJhY2UgYWN0aXZlICov
CiAjZGVmaW5lIFRJRl9TWVNDQUxMX1RSQUNFUE9JTlQJNSAgICAgICAvKiBzeXNjYWxsIHRy
YWNlcG9pbnQgaW5zdHJ1bWVudGF0aW9uICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX0FVRElU
CTYJLyogc3lzY2FsbCBhdWRpdGluZyAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAk3
CS8qIHNpZ25hbCBub3RpZmljYXRpb25zIGV4aXN0ICovCiAjZGVmaW5lIFRJRl9QT0xMSU5H
X05SRkxBRwkxNgkvKiBwb2xsX2lkbGUoKSBpcyBUSUZfTkVFRF9SRVNDSEVEICovCiAjZGVm
aW5lIFRJRl9NRU1ESUUJCTE4ICAgICAgLyogaXMgdGVybWluYXRpbmcgZHVlIHRvIE9PTSBr
aWxsZXIgKi8KICNkZWZpbmUgVElGX1JFU1RPUkVfU0lHTUFTSwkyMAkvKiByZXN0b3JlIHNp
Z25hbCBtYXNrIGluIGRvX3NpZ25hbCgpICovCkBAIC03NSw2ICs3Niw3IEBAIHN0YXRpYyBp
bmxpbmUgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQpCiAj
ZGVmaW5lIF9USUZfU1lTQ0FMTF9UUkFDRQkoMSA8PCBUSUZfU1lTQ0FMTF9UUkFDRSkKICNk
ZWZpbmUgX1RJRl9TWVNDQUxMX1RSQUNFUE9JTlQJKDEgPDwgVElGX1NZU0NBTExfVFJBQ0VQ
T0lOVCkKICNkZWZpbmUgX1RJRl9TWVNDQUxMX0FVRElUCSgxIDw8IFRJRl9TWVNDQUxMX0FV
RElUKQorI2RlZmluZSBfVElGX05PVElGWV9TSUdOQUwJKDEgPDwgVElGX05PVElGWV9TSUdO
QUwpCiAjZGVmaW5lIF9USUZfVVBST0JFCQkoMSA8PCBUSUZfVVBST0JFKQogI2RlZmluZSBf
VElGX1BPTExJTkdfTlJGTEFHCSgxIDw8IFRJRl9QT0xMSU5HX05SRkxBRykKICNkZWZpbmUg
X1RJRl9NRU1ESUUJCSgxIDw8IFRJRl9NRU1ESUUpCkBAIC04Miw3ICs4NCw4IEBAIHN0YXRp
YyBpbmxpbmUgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQp
CiAjZGVmaW5lIF9USUZfU0VDQ09NUAkJKDEgPDwgVElGX1NFQ0NPTVApCiAKICNkZWZpbmUg
X1RJRl9XT1JLX01BU0sJCShfVElGX05FRURfUkVTQ0hFRCB8IF9USUZfU0lHUEVORElORyB8
IFwKLQkJCQkgX1RJRl9OT1RJRllfUkVTVU1FIHwgX1RJRl9VUFJPQkUpCisJCQkJIF9USUZf
Tk9USUZZX1JFU1VNRSB8IF9USUZfVVBST0JFIHwgXAorCQkJCSBfVElGX05PVElGWV9TSUdO
QUwpCiAKICNkZWZpbmUgX1RJRl9TWVNDQUxMX1dPUksJKF9USUZfU1lTQ0FMTF9UUkFDRSB8
IF9USUZfU1lTQ0FMTF9BVURJVCB8IFwKIAkJCQkgX1RJRl9TWVNDQUxMX1RSQUNFUE9JTlQg
fCBfVElGX1NFQ0NPTVApCmRpZmYgLS1naXQgYS9hcmNoL2Nza3kva2VybmVsL3NpZ25hbC5j
IGIvYXJjaC9jc2t5L2tlcm5lbC9zaWduYWwuYwppbmRleCAyNDMyMjhiMGFhMDcuLmY3YzE2
NzdlNTk3MSAxMDA2NDQKLS0tIGEvYXJjaC9jc2t5L2tlcm5lbC9zaWduYWwuYworKysgYi9h
cmNoL2Nza3kva2VybmVsL3NpZ25hbC5jCkBAIC0yNjEsNyArMjYxLDcgQEAgYXNtbGlua2Fn
ZSB2b2lkIGRvX25vdGlmeV9yZXN1bWUoc3RydWN0IHB0X3JlZ3MgKnJlZ3MsCiAJCXVwcm9i
ZV9ub3RpZnlfcmVzdW1lKHJlZ3MpOwogCiAJLyogSGFuZGxlIHBlbmRpbmcgc2lnbmFsIGRl
bGl2ZXJ5ICovCi0JaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9TSUdQRU5ESU5HKQor
CWlmICh0aHJlYWRfaW5mb19mbGFncyAmIChfVElGX1NJR1BFTkRJTkcgfCBfVElGX05PVElG
WV9TSUdOQUwpKQogCQlkb19zaWduYWwocmVncyk7CiAKIAlpZiAodGhyZWFkX2luZm9fZmxh
Z3MgJiBfVElGX05PVElGWV9SRVNVTUUpIHsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0028-openrisc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0028-openrisc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA2NGNlZjAxNzU0YTQ0MTllMTNmMGY1ZjE0ZWM0YTllMTgxYmZmYmU4IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToyNDo0NiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjgv
NjNdIG9wZW5yaXNjOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBz
dHJlYW0gY29tbWl0IGUxODFjMGFhMmU1MzJhZjJiMTcxMjhmYmRlNjk5Zjg1NzhjYzA1NjIg
XQoKV2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3Igb3BlbnJpc2MuCgpD
Yzogb3BlbnJpc2NAbGlzdHMubGlicmVjb3Jlcy5vcmcKQWNrZWQtYnk6IFN0YWZmb3JkIEhv
cm5lIDxzaG9ybmVAZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJv
ZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oIHwgMiArKwogYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwg
MiArLQogMiBmaWxlcyBjaGFuZ2VkLCAzIGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkK
CmRpZmYgLS1naXQgYS9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgg
Yi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggOWFmZTY4
YmM0MjNiLi40ZjlkMmEyNjE0NTUgMTAwNjQ0Ci0tLSBhL2FyY2gvb3BlbnJpc2MvaW5jbHVk
ZS9hc20vdGhyZWFkX2luZm8uaAorKysgYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3Ro
cmVhZF9pbmZvLmgKQEAgLTk4LDYgKzk4LDcgQEAgcmVnaXN0ZXIgc3RydWN0IHRocmVhZF9p
bmZvICpjdXJyZW50X3RocmVhZF9pbmZvX3JlZyBhc20oInIxMCIpOwogI2RlZmluZSBUSUZf
U0lOR0xFU1RFUAkJNAkvKiByZXN0b3JlIHNpbmdsZXN0ZXAgb24gcmV0dXJuIHRvIHVzZXIK
IAkJCQkJICogbW9kZQogCQkJCQkgKi8KKyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNQkv
KiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogI2RlZmluZSBUSUZfU1lTQ0FMTF9U
UkFDRVBPSU5UICA4ICAgICAgIC8qIGZvciBmdHJhY2Ugc3lzY2FsbCBpbnN0cnVtZW50YXRp
b24gKi8KICNkZWZpbmUgVElGX1JFU1RPUkVfU0lHTUFTSyAgICAgOQogI2RlZmluZSBUSUZf
UE9MTElOR19OUkZMQUcJMTYJLyogdHJ1ZSBpZiBwb2xsX2lkbGUoKSBpcyBwb2xsaW5nCQkJ
CQkJICogVElGX05FRURfUkVTQ0hFRApAQCAtMTA5LDYgKzExMCw3IEBAIHJlZ2lzdGVyIHN0
cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJlYWRfaW5mb19yZWcgYXNtKCJyMTAiKTsK
ICNkZWZpbmUgX1RJRl9TSUdQRU5ESU5HCQkoMTw8VElGX1NJR1BFTkRJTkcpCiAjZGVmaW5l
IF9USUZfTkVFRF9SRVNDSEVECSgxPDxUSUZfTkVFRF9SRVNDSEVEKQogI2RlZmluZSBfVElG
X1NJTkdMRVNURVAJCSgxPDxUSUZfU0lOR0xFU1RFUCkKKyNkZWZpbmUgX1RJRl9OT1RJRllf
U0lHTkFMCSgxPDxUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9QT0xMSU5HX05S
RkxBRwkoMTw8VElGX1BPTExJTkdfTlJGTEFHKQogCiAKZGlmZiAtLWdpdCBhL2FyY2gvb3Bl
bnJpc2Mva2VybmVsL3NpZ25hbC5jIGIvYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmMK
aW5kZXggYWY2NmY5NjhkZDQ1Li4xZWJjZmYyNzEwOTYgMTAwNjQ0Ci0tLSBhL2FyY2gvb3Bl
bnJpc2Mva2VybmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25h
bC5jCkBAIC0yOTksNyArMjk5LDcgQEAgZG9fd29ya19wZW5kaW5nKHN0cnVjdCBwdF9yZWdz
ICpyZWdzLCB1bnNpZ25lZCBpbnQgdGhyZWFkX2ZsYWdzLCBpbnQgc3lzY2FsbCkKIAkJCWlm
ICh1bmxpa2VseSghdXNlcl9tb2RlKHJlZ3MpKSkKIAkJCQlyZXR1cm4gMDsKIAkJCWxvY2Fs
X2lycV9lbmFibGUoKTsKLQkJCWlmICh0aHJlYWRfZmxhZ3MgJiBfVElGX1NJR1BFTkRJTkcp
IHsKKwkJCWlmICh0aHJlYWRfZmxhZ3MgJiAoX1RJRl9TSUdQRU5ESU5HfF9USUZfTk9USUZZ
X1NJR05BTCkpIHsKIAkJCQlpbnQgcmVzdGFydCA9IGRvX3NpZ25hbChyZWdzLCBzeXNjYWxs
KTsKIAkJCQlpZiAodW5saWtlbHkocmVzdGFydCkpIHsKIAkJCQkJLyoKLS0gCjIuMzkuMAoK

--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0027-sh-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0027-sh-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSAxNDY5Y2QwMzRiMDY1Y2JlMDZjMjM4MmEwZDJhYWNlNTBlM2RjODU0IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNTozNjozNSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjcv
NjNdIHNoOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJlYW0g
Y29tbWl0IDZkM2EyNzMzNTVlM2M4NDcxZGRmOWU4Y2U5YTdjYzQ0NzJiZjFjY2MgXQoKV2ly
ZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3Igc2guCgpDYzogbGludXgtc2hA
dmdlci5rZXJuZWwub3JnClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5l
bC5kaz4KLS0tCiBhcmNoL3NoL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCA0ICsrKy0K
IGFyY2gvc2gva2VybmVsL3NpZ25hbF8zMi5jICAgICAgICB8IDIgKy0KIDIgZmlsZXMgY2hh
bmdlZCwgNCBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Fy
Y2gvc2gvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCBiL2FyY2gvc2gvaW5jbHVkZS9hc20v
dGhyZWFkX2luZm8uaAppbmRleCAyNDNlYTUxNTBhYTAuLjU5OGQwMTg0ZmZlYSAxMDA2NDQK
LS0tIGEvYXJjaC9zaC9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCisrKyBiL2FyY2gvc2gv
aW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaApAQCAtMTA1LDYgKzEwNSw3IEBAIGV4dGVybiB2
b2lkIGluaXRfdGhyZWFkX3hzdGF0ZSh2b2lkKTsKICNkZWZpbmUgVElGX1NZU0NBTExfVFJB
Q0UJMAkvKiBzeXNjYWxsIHRyYWNlIGFjdGl2ZSAqLwogI2RlZmluZSBUSUZfU0lHUEVORElO
RwkJMQkvKiBzaWduYWwgcGVuZGluZyAqLwogI2RlZmluZSBUSUZfTkVFRF9SRVNDSEVECTIJ
LyogcmVzY2hlZHVsaW5nIG5lY2Vzc2FyeSAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05B
TAkzCS8qIHNpZ25hbCBub3RpZmljYXRpb25zIGV4aXN0ICovCiAjZGVmaW5lIFRJRl9TSU5H
TEVTVEVQCQk0CS8qIHNpbmdsZXN0ZXBwaW5nIGFjdGl2ZSAqLwogI2RlZmluZSBUSUZfU1lT
Q0FMTF9BVURJVAk1CS8qIHN5c2NhbGwgYXVkaXRpbmcgYWN0aXZlICovCiAjZGVmaW5lIFRJ
Rl9TRUNDT01QCQk2CS8qIHNlY3VyZSBjb21wdXRpbmcgKi8KQEAgLTExNiw2ICsxMTcsNyBA
QCBleHRlcm4gdm9pZCBpbml0X3RocmVhZF94c3RhdGUodm9pZCk7CiAjZGVmaW5lIF9USUZf
U1lTQ0FMTF9UUkFDRQkoMSA8PCBUSUZfU1lTQ0FMTF9UUkFDRSkKICNkZWZpbmUgX1RJRl9T
SUdQRU5ESU5HCQkoMSA8PCBUSUZfU0lHUEVORElORykKICNkZWZpbmUgX1RJRl9ORUVEX1JF
U0NIRUQJKDEgPDwgVElGX05FRURfUkVTQ0hFRCkKKyNkZWZpbmUgX1RJRl9OT1RJRllfU0lH
TkFMCSgxIDw8IFRJRl9OT1RJRllfU0lHTkFMKQogI2RlZmluZSBfVElGX1NJTkdMRVNURVAJ
CSgxIDw8IFRJRl9TSU5HTEVTVEVQKQogI2RlZmluZSBfVElGX1NZU0NBTExfQVVESVQJKDEg
PDwgVElGX1NZU0NBTExfQVVESVQpCiAjZGVmaW5lIF9USUZfU0VDQ09NUAkJKDEgPDwgVElG
X1NFQ0NPTVApCkBAIC0xMzIsNyArMTM0LDcgQEAgZXh0ZXJuIHZvaWQgaW5pdF90aHJlYWRf
eHN0YXRlKHZvaWQpOwogI2RlZmluZSBfVElGX0FMTFdPUktfTUFTSwkoX1RJRl9TWVNDQUxM
X1RSQUNFIHwgX1RJRl9TSUdQRU5ESU5HICAgICAgfCBcCiAJCQkJIF9USUZfTkVFRF9SRVND
SEVEICB8IF9USUZfU1lTQ0FMTF9BVURJVCAgIHwgXAogCQkJCSBfVElGX1NJTkdMRVNURVAg
ICAgfCBfVElGX05PVElGWV9SRVNVTUUgICB8IFwKLQkJCQkgX1RJRl9TWVNDQUxMX1RSQUNF
UE9JTlQpCisJCQkJIF9USUZfU1lTQ0FMTF9UUkFDRVBPSU5UIHwgX1RJRl9OT1RJRllfU0lH
TkFMKQogCiAvKiB3b3JrIHRvIGRvIG9uIGludGVycnVwdC9leGNlcHRpb24gcmV0dXJuICov
CiAjZGVmaW5lIF9USUZfV09SS19NQVNLCQkoX1RJRl9BTExXT1JLX01BU0sgJiB+KF9USUZf
U1lTQ0FMTF9UUkFDRSB8IFwKZGlmZiAtLWdpdCBhL2FyY2gvc2gva2VybmVsL3NpZ25hbF8z
Mi5jIGIvYXJjaC9zaC9rZXJuZWwvc2lnbmFsXzMyLmMKaW5kZXggMWFkZDQ3ZmQzMWY2Li5k
ZDMwOTI5MTFlZmEgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gva2VybmVsL3NpZ25hbF8zMi5jCisr
KyBiL2FyY2gvc2gva2VybmVsL3NpZ25hbF8zMi5jCkBAIC00OTksNyArNDk5LDcgQEAgYXNt
bGlua2FnZSB2b2lkIGRvX25vdGlmeV9yZXN1bWUoc3RydWN0IHB0X3JlZ3MgKnJlZ3MsIHVu
c2lnbmVkIGludCBzYXZlX3IwLAogCQkJCSB1bnNpZ25lZCBsb25nIHRocmVhZF9pbmZvX2Zs
YWdzKQogewogCS8qIGRlYWwgd2l0aCBwZW5kaW5nIHNpZ25hbCBkZWxpdmVyeSAqLwotCWlm
ICh0aHJlYWRfaW5mb19mbGFncyAmIF9USUZfU0lHUEVORElORykKKwlpZiAodGhyZWFkX2lu
Zm9fZmxhZ3MgJiAoX1RJRl9TSUdQRU5ESU5HIHwgX1RJRl9OT1RJRllfU0lHTkFMKSkKIAkJ
ZG9fc2lnbmFsKHJlZ3MsIHNhdmVfcjApOwogCiAJaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYg
X1RJRl9OT1RJRllfUkVTVU1FKQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0026-um-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0026-um-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA5YjRkNzg2MGNhMDkyNDQwYjc3NGM4MjgyNzQ1NWY1M2U2NDllZTBmIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNTo0NzoyOCAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjYv
NjNdIHVtOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJlYW0g
Y29tbWl0IGE1YjNjZDMyZmYyMzhiODdlOTRkNDdiOTI3YWZmMTE3ZTIyZDEzYzAgXQoKV2ly
ZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgdW0uCgpDYzogbGludXgtdW1A
bGlzdHMuaW5mcmFkZWFkLm9yZwpBY2tlZC1CeTogQW50b24gSXZhbm92IDxhbnRvbi5pdmFu
b3ZAY2FtYnJpZGdlZ3JleXMuY29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJv
ZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC91bS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIHwg
MiArKwogYXJjaC91bS9rZXJuZWwvcHJvY2Vzcy5jICAgICAgICAgIHwgMyArKy0KIDIgZmls
ZXMgY2hhbmdlZCwgNCBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0
IGEvYXJjaC91bS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIGIvYXJjaC91bS9pbmNsdWRl
L2FzbS90aHJlYWRfaW5mby5oCmluZGV4IDY2YWI2YTA3MzMwYi4uZTYxMGU5MzJjZmUxIDEw
MDY0NAotLS0gYS9hcmNoL3VtL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKKysrIGIvYXJj
aC91bS9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCkBAIC01Nyw2ICs1Nyw3IEBAIHN0YXRp
YyBpbmxpbmUgc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3RocmVhZF9pbmZvKHZvaWQp
CiAjZGVmaW5lIFRJRl9TWVNDQUxMX1RSQUNFCTAJLyogc3lzY2FsbCB0cmFjZSBhY3RpdmUg
Ki8KICNkZWZpbmUgVElGX1NJR1BFTkRJTkcJCTEJLyogc2lnbmFsIHBlbmRpbmcgKi8KICNk
ZWZpbmUgVElGX05FRURfUkVTQ0hFRAkyCS8qIHJlc2NoZWR1bGluZyBuZWNlc3NhcnkgKi8K
KyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJMwkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBl
eGlzdCAqLwogI2RlZmluZSBUSUZfUkVTVEFSVF9CTE9DSwk0CiAjZGVmaW5lIFRJRl9NRU1E
SUUJCTUJLyogaXMgdGVybWluYXRpbmcgZHVlIHRvIE9PTSBraWxsZXIgKi8KICNkZWZpbmUg
VElGX1NZU0NBTExfQVVESVQJNgpAQCAtNjgsNiArNjksNyBAQCBzdGF0aWMgaW5saW5lIHN0
cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJlYWRfaW5mbyh2b2lkKQogI2RlZmluZSBf
VElGX1NZU0NBTExfVFJBQ0UJKDEgPDwgVElGX1NZU0NBTExfVFJBQ0UpCiAjZGVmaW5lIF9U
SUZfU0lHUEVORElORwkJKDEgPDwgVElGX1NJR1BFTkRJTkcpCiAjZGVmaW5lIF9USUZfTkVF
RF9SRVNDSEVECSgxIDw8IFRJRl9ORUVEX1JFU0NIRUQpCisjZGVmaW5lIF9USUZfTk9USUZZ
X1NJR05BTAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9NRU1ESUUJ
CSgxIDw8IFRJRl9NRU1ESUUpCiAjZGVmaW5lIF9USUZfU1lTQ0FMTF9BVURJVAkoMSA8PCBU
SUZfU1lTQ0FMTF9BVURJVCkKICNkZWZpbmUgX1RJRl9TRUNDT01QCQkoMSA8PCBUSUZfU0VD
Q09NUCkKZGlmZiAtLWdpdCBhL2FyY2gvdW0va2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvdW0v
a2VybmVsL3Byb2Nlc3MuYwppbmRleCA4ZWI4YjczNmFiYzEuLjA2N2ZiODVmYmYxMSAxMDA2
NDQKLS0tIGEvYXJjaC91bS9rZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvdW0va2VybmVs
L3Byb2Nlc3MuYwpAQCAtOTksNyArOTksOCBAQCB2b2lkIGludGVycnVwdF9lbmQodm9pZCkK
IAogCWlmIChuZWVkX3Jlc2NoZWQoKSkKIAkJc2NoZWR1bGUoKTsKLQlpZiAodGVzdF90aHJl
YWRfZmxhZyhUSUZfU0lHUEVORElORykpCisJaWYgKHRlc3RfdGhyZWFkX2ZsYWcoVElGX1NJ
R1BFTkRJTkcpIHx8CisJICAgIHRlc3RfdGhyZWFkX2ZsYWcoVElGX05PVElGWV9TSUdOQUwp
KQogCQlkb19zaWduYWwocmVncyk7CiAJaWYgKHRlc3RfdGhyZWFkX2ZsYWcoVElGX05PVElG
WV9SRVNVTUUpKQogCQl0cmFjZWhvb2tfbm90aWZ5X3Jlc3VtZShyZWdzKTsKLS0gCjIuMzku
MAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0025-s390-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0025-s390-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA4MzIwMjhlNDJhZDA4MWI4OGVlN2E3MmM4YzliY2RlYTZlZWQzZjk3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNTozNDoxMiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjUv
NjNdIHMzOTA6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgNzUzMDkwMThhMjRkZGZiOTMwYzUxYmFkOGY0MDcwYjliYzJjOTIzYiBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBzMzkwLgoKQ2M6IGxpbnV4
LXMzOTBAdmdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBIZWlrbyBDYXJzdGVucyA8aGNhQGxp
bnV4LmlibS5jb20+CkFja2VkLWJ5OiBTdmVuIFNjaG5lbGxlIDxzdmVuc0BsaW51eC5pYm0u
Y29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQog
YXJjaC9zMzkwL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCAgMiArKwogYXJjaC9zMzkw
L2tlcm5lbC9lbnRyeS5TICAgICAgICAgICAgfCAxMSArKysrKystLS0tLQogYXJjaC9zMzkw
L2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAgMiArLQogMyBmaWxlcyBjaGFuZ2VkLCA5
IGluc2VydGlvbnMoKyksIDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkw
L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL3MzOTAvaW5jbHVkZS9hc20vdGhy
ZWFkX2luZm8uaAppbmRleCAxM2EwNGZjZjc3NjIuLjAwNDUzNDFhZGU0OCAxMDA2NDQKLS0t
IGEvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKKysrIGIvYXJjaC9zMzkw
L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTY1LDYgKzY1LDcgQEAgdm9pZCBhcmNo
X3NldHVwX25ld19leGVjKHZvaWQpOwogI2RlZmluZSBUSUZfR1VBUkRFRF9TVE9SQUdFCTQJ
LyogbG9hZCBndWFyZGVkIHN0b3JhZ2UgY29udHJvbCBibG9jayAqLwogI2RlZmluZSBUSUZf
UEFUQ0hfUEVORElORwk1CS8qIHBlbmRpbmcgbGl2ZSBwYXRjaGluZyB1cGRhdGUgKi8KICNk
ZWZpbmUgVElGX1BHU1RFCQk2CS8qIE5ldyBtbSdzIHdpbGwgdXNlIDRLIHBhZ2UgdGFibGVz
ICovCisjZGVmaW5lIFRJRl9OT1RJRllfU0lHTkFMCTcJLyogc2lnbmFsIG5vdGlmaWNhdGlv
bnMgZXhpc3QgKi8KICNkZWZpbmUgVElGX0lTT0xBVEVfQlAJCTgJLyogUnVuIHByb2Nlc3Mg
d2l0aCBpc29sYXRlZCBCUCAqLwogI2RlZmluZSBUSUZfSVNPTEFURV9CUF9HVUVTVAk5CS8q
IFJ1biBLVk0gZ3Vlc3RzIHdpdGggaXNvbGF0ZWQgQlAgKi8KIApAQCAtODIsNiArODMsNyBA
QCB2b2lkIGFyY2hfc2V0dXBfbmV3X2V4ZWModm9pZCk7CiAjZGVmaW5lIFRJRl9TWVNDQUxM
X1RSQUNFUE9JTlQJMjcJLyogc3lzY2FsbCB0cmFjZXBvaW50IGluc3RydW1lbnRhdGlvbiAq
LwogCiAjZGVmaW5lIF9USUZfTk9USUZZX1JFU1VNRQlCSVQoVElGX05PVElGWV9SRVNVTUUp
CisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05BTAlCSVQoVElGX05PVElGWV9TSUdOQUwpCiAj
ZGVmaW5lIF9USUZfU0lHUEVORElORwkJQklUKFRJRl9TSUdQRU5ESU5HKQogI2RlZmluZSBf
VElGX05FRURfUkVTQ0hFRAlCSVQoVElGX05FRURfUkVTQ0hFRCkKICNkZWZpbmUgX1RJRl9V
UFJPQkUJCUJJVChUSUZfVVBST0JFKQpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL2tlcm5lbC9l
bnRyeS5TIGIvYXJjaC9zMzkwL2tlcm5lbC9lbnRyeS5TCmluZGV4IDk2M2U4Y2I5MzZlMi4u
ODhlY2JjZjA5N2EzIDEwMDY0NAotLS0gYS9hcmNoL3MzOTAva2VybmVsL2VudHJ5LlMKKysr
IGIvYXJjaC9zMzkwL2tlcm5lbC9lbnRyeS5TCkBAIC01Miw3ICs1Miw4IEBAIFNUQUNLX1NJ
WkUgID0gMSA8PCBTVEFDS19TSElGVAogU1RBQ0tfSU5JVCA9IFNUQUNLX1NJWkUgLSBTVEFD
S19GUkFNRV9PVkVSSEVBRCAtIF9fUFRfU0laRQogCiBfVElGX1dPUksJPSAoX1RJRl9TSUdQ
RU5ESU5HIHwgX1RJRl9OT1RJRllfUkVTVU1FIHwgX1RJRl9ORUVEX1JFU0NIRUQgfCBcCi0J
CSAgIF9USUZfVVBST0JFIHwgX1RJRl9HVUFSREVEX1NUT1JBR0UgfCBfVElGX1BBVENIX1BF
TkRJTkcpCisJCSAgIF9USUZfVVBST0JFIHwgX1RJRl9HVUFSREVEX1NUT1JBR0UgfCBfVElG
X1BBVENIX1BFTkRJTkcgfCBcCisJCSAgIF9USUZfTk9USUZZX1NJR05BTCkKIF9USUZfVFJB
Q0UJPSAoX1RJRl9TWVNDQUxMX1RSQUNFIHwgX1RJRl9TWVNDQUxMX0FVRElUIHwgX1RJRl9T
RUNDT01QIHwgXAogCQkgICBfVElGX1NZU0NBTExfVFJBQ0VQT0lOVCkKIF9DSUZfV09SSwk9
IChfQ0lGX0FTQ0VfUFJJTUFSWSB8IF9DSUZfQVNDRV9TRUNPTkRBUlkgfCBfQ0lGX0ZQVSkK
QEAgLTQ4MSw4ICs0ODIsOCBAQCBFTlRSWShzeXN0ZW1fY2FsbCkKICNlbmRpZgogCVRTVE1T
SwlfX1BUX0ZMQUdTKCVyMTEpLF9QSUZfU1lTQ0FMTF9SRVNUQVJUCiAJam8JLkxzeXNjX3N5
c2NhbGxfcmVzdGFydAotCVRTVE1TSwlfX1RJX2ZsYWdzKCVyMTIpLF9USUZfU0lHUEVORElO
RwotCWpvCS5Mc3lzY19zaWdwZW5kaW5nCisJVFNUTVNLCV9fVElfZmxhZ3MoJXIxMiksKF9U
SUZfU0lHUEVORElOR3xfVElGX05PVElGWV9TSUdOQUwpCisJam56CS5Mc3lzY19zaWdwZW5k
aW5nCiAJVFNUTVNLCV9fVElfZmxhZ3MoJXIxMiksX1RJRl9OT1RJRllfUkVTVU1FCiAJam8J
LkxzeXNjX25vdGlmeV9yZXN1bWUKIAlUU1RNU0sJX19MQ19DUFVfRkxBR1MsKF9DSUZfQVND
RV9QUklNQVJZfF9DSUZfQVNDRV9TRUNPTkRBUlkpCkBAIC04NjMsOCArODY0LDggQEAgRU5U
UlkoaW9faW50X2hhbmRsZXIpCiAJVFNUTVNLCV9fVElfZmxhZ3MoJXIxMiksX1RJRl9QQVRD
SF9QRU5ESU5HCiAJam8JLkxpb19wYXRjaF9wZW5kaW5nCiAjZW5kaWYKLQlUU1RNU0sJX19U
SV9mbGFncyglcjEyKSxfVElGX1NJR1BFTkRJTkcKLQlqbwkuTGlvX3NpZ3BlbmRpbmcKKwlU
U1RNU0sJX19USV9mbGFncyglcjEyKSwoX1RJRl9TSUdQRU5ESU5HfF9USUZfTk9USUZZX1NJ
R05BTCkKKwlqbnoJLkxpb19zaWdwZW5kaW5nCiAJVFNUTVNLCV9fVElfZmxhZ3MoJXIxMiks
X1RJRl9OT1RJRllfUkVTVU1FCiAJam8JLkxpb19ub3RpZnlfcmVzdW1lCiAJVFNUTVNLCV9f
VElfZmxhZ3MoJXIxMiksX1RJRl9HVUFSREVEX1NUT1JBR0UKZGlmZiAtLWdpdCBhL2FyY2gv
czM5MC9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL3MzOTAva2VybmVsL3NpZ25hbC5jCmluZGV4
IDllOTAwYTg5NzdiZC4uYjI3YjZjMWYwNThkIDEwMDY0NAotLS0gYS9hcmNoL3MzOTAva2Vy
bmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvczM5MC9rZXJuZWwvc2lnbmFsLmMKQEAgLTQ3Miw3
ICs0NzIsNyBAQCB2b2lkIGRvX3NpZ25hbChzdHJ1Y3QgcHRfcmVncyAqcmVncykKIAljdXJy
ZW50LT50aHJlYWQuc3lzdGVtX2NhbGwgPQogCQl0ZXN0X3B0X3JlZ3NfZmxhZyhyZWdzLCBQ
SUZfU1lTQ0FMTCkgPyByZWdzLT5pbnRfY29kZSA6IDA7CiAKLQlpZiAoZ2V0X3NpZ25hbCgm
a3NpZykpIHsKKwlpZiAodGVzdF90aHJlYWRfZmxhZyhUSUZfU0lHUEVORElORykgJiYgZ2V0
X3NpZ25hbCgma3NpZykpIHsKIAkJLyogV2hlZSEgIEFjdHVhbGx5IGRlbGl2ZXIgdGhlIHNp
Z25hbC4gICovCiAJCWlmIChjdXJyZW50LT50aHJlYWQuc3lzdGVtX2NhbGwpIHsKIAkJCXJl
Z3MtPmludF9jb2RlID0gY3VycmVudC0+dGhyZWFkLnN5c3RlbV9jYWxsOwotLSAKMi4zOS4w
Cgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0024-mips-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0024-mips-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA2MDU1OWY4NjdiYzkyNmU1NTk1YzEzZTRiODVlYTJmZWExNjhlY2Y4IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToxNjowMiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjQv
NjNdIG1pcHM6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgZjQ1YzE4NGJjZTE1ZjRhMzE0YzAyMTA1MTliYzNiNGFhYjQwODgzOCBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBtaXBzLgoKQ2M6IGxpbnV4
LW1pcHNAdmdlci5rZXJuZWwub3JnCkFja2VkLUJ5OiBUaG9tYXMgQm9nZW5kb2VyZmVyIDx0
c2JvZ2VuZEBhbHBoYS5mcmFua2VuLmRlPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxh
eGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9taXBzL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZv
LmggfCA0ICsrKy0KIGFyY2gvbWlwcy9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwgMiAr
LQogMiBmaWxlcyBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNo
L21pcHMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaAppbmRleCBlZTI2ZjlhNDU3NWQuLmUy
YzM1MmRhMzg3NyAxMDA2NDQKLS0tIGEvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3RocmVhZF9p
bmZvLmgKKysrIGIvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTEx
NSw2ICsxMTUsNyBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVu
dF90aHJlYWRfaW5mbyh2b2lkKQogI2RlZmluZSBUSUZfU0VDQ09NUAkJNAkvKiBzZWN1cmUg
Y29tcHV0aW5nICovCiAjZGVmaW5lIFRJRl9OT1RJRllfUkVTVU1FCTUJLyogY2FsbGJhY2sg
YmVmb3JlIHJldHVybmluZyB0byB1c2VyICovCiAjZGVmaW5lIFRJRl9VUFJPQkUJCTYJLyog
YnJlYWtwb2ludGVkIG9yIHNpbmdsZXN0ZXBwaW5nICovCisjZGVmaW5lIFRJRl9OT1RJRllf
U0lHTkFMCTcJLyogc2lnbmFsIG5vdGlmaWNhdGlvbnMgZXhpc3QgKi8KICNkZWZpbmUgVElG
X1JFU1RPUkVfU0lHTUFTSwk5CS8qIHJlc3RvcmUgc2lnbmFsIG1hc2sgaW4gZG9fc2lnbmFs
KCkgKi8KICNkZWZpbmUgVElGX1VTRURGUFUJCTE2CS8qIEZQVSB3YXMgdXNlZCBieSB0aGlz
IHRhc2sgdGhpcyBxdWFudHVtIChTTVApICovCiAjZGVmaW5lIFRJRl9NRU1ESUUJCTE4CS8q
IGlzIHRlcm1pbmF0aW5nIGR1ZSB0byBPT00ga2lsbGVyICovCkBAIC0xMzksNiArMTQwLDcg
QEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgdGhyZWFkX2luZm8gKmN1cnJlbnRfdGhyZWFkX2lu
Zm8odm9pZCkKICNkZWZpbmUgX1RJRl9TRUNDT01QCQkoMTw8VElGX1NFQ0NPTVApCiAjZGVm
aW5lIF9USUZfTk9USUZZX1JFU1VNRQkoMTw8VElGX05PVElGWV9SRVNVTUUpCiAjZGVmaW5l
IF9USUZfVVBST0JFCQkoMTw8VElGX1VQUk9CRSkKKyNkZWZpbmUgX1RJRl9OT1RJRllfU0lH
TkFMCSgxPDxUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9VU0VERlBVCQkoMTw8
VElGX1VTRURGUFUpCiAjZGVmaW5lIF9USUZfTk9IWgkJKDE8PFRJRl9OT0haKQogI2RlZmlu
ZSBfVElGX0ZJWEFERQkJKDE8PFRJRl9GSVhBREUpCkBAIC0xNjQsNyArMTY2LDcgQEAgc3Rh
dGljIGlubGluZSBzdHJ1Y3QgdGhyZWFkX2luZm8gKmN1cnJlbnRfdGhyZWFkX2luZm8odm9p
ZCkKIC8qIHdvcmsgdG8gZG8gb24gaW50ZXJydXB0L2V4Y2VwdGlvbiByZXR1cm4gKi8KICNk
ZWZpbmUgX1RJRl9XT1JLX01BU0sJCVwKIAkoX1RJRl9TSUdQRU5ESU5HIHwgX1RJRl9ORUVE
X1JFU0NIRUQgfCBfVElGX05PVElGWV9SRVNVTUUgfAlcCi0JIF9USUZfVVBST0JFKQorCSBf
VElGX1VQUk9CRSB8IF9USUZfTk9USUZZX1NJR05BTCkKIC8qIHdvcmsgdG8gZG8gb24gYW55
IHJldHVybiB0byB1LXNwYWNlICovCiAjZGVmaW5lIF9USUZfQUxMV09SS19NQVNLCShfVElG
X05PSFogfCBfVElGX1dPUktfTUFTSyB8CQlcCiAJCQkJIF9USUZfV09SS19TWVNDQUxMX0VY
SVQgfAkJXApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2tlcm5lbC9zaWduYWwuYyBiL2FyY2gv
bWlwcy9rZXJuZWwvc2lnbmFsLmMKaW5kZXggNTBkMDUxNWJlYTIxLi5mMWU5ODUxMDlkYTAg
MTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9rZXJuZWwvc2lnbmFsLmMKKysrIGIvYXJjaC9taXBz
L2tlcm5lbC9zaWduYWwuYwpAQCAtOTAzLDcgKzkwMyw3IEBAIGFzbWxpbmthZ2Ugdm9pZCBk
b19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdzICpyZWdzLCB2b2lkICp1bnVzZWQsCiAJ
CXVwcm9iZV9ub3RpZnlfcmVzdW1lKHJlZ3MpOwogCiAJLyogZGVhbCB3aXRoIHBlbmRpbmcg
c2lnbmFsIGRlbGl2ZXJ5ICovCi0JaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9TSUdQ
RU5ESU5HKQorCWlmICh0aHJlYWRfaW5mb19mbGFncyAmIChfVElGX1NJR1BFTkRJTkcgfCBf
VElGX05PVElGWV9TSUdOQUwpKQogCQlkb19zaWduYWwocmVncyk7CiAKIAlpZiAodGhyZWFk
X2luZm9fZmxhZ3MgJiBfVElGX05PVElGWV9SRVNVTUUpIHsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0023-powerpc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0023-powerpc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA2MTZkMzhmODM0ZDkxYTVhZjJlM2FmYjA4ZjEyZWNiOGIzMmU0YTk2IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMjIgT2N0IDIwMjAgMjA6MTE6NTYgLTA2MDAKU3ViamVjdDogW1BBVENIIDIz
LzYzXSBwb3dlcnBjOiBhZGQgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwKClsgVXBz
dHJlYW0gY29tbWl0IDkwMGYwNzEzZmRkNzMwZmFiMGYwYmZhNGE4Y2E0ZGIyYTg5ODViYmUg
XQoKV2lyZSB1cCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBmb3IgcG93ZXJwYy4KCkNj
OiBsaW51eHBwYy1kZXZAbGlzdHMub3psYWJzLm9yZwpBY2tlZC1ieTogTWljaGFlbCBFbGxl
cm1hbiA8bXBlQGVsbGVybWFuLmlkLmF1PgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxh
eGJvZUBrZXJuZWwuZGs+Ci0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3RocmVhZF9p
bmZvLmggfCA1ICsrKystCiBhcmNoL3Bvd2VycGMva2VybmVsL3NpZ25hbC5jICAgICAgICAg
ICB8IDIgKy0KIDIgZmlsZXMgY2hhbmdlZCwgNSBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggNmRl
MzUxN2JlYTk0Li5mZjMxZDJmYTIxNDAgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNs
dWRlL2FzbS90aHJlYWRfaW5mby5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS90
aHJlYWRfaW5mby5oCkBAIC05Niw2ICs5Niw3IEBAIHZvaWQgYXJjaF9zZXR1cF9uZXdfZXhl
Yyh2b2lkKTsKICNkZWZpbmUgVElGX1NZU0NBTExfVFJBQ0UJMAkvKiBzeXNjYWxsIHRyYWNl
IGFjdGl2ZSAqLwogI2RlZmluZSBUSUZfU0lHUEVORElORwkJMQkvKiBzaWduYWwgcGVuZGlu
ZyAqLwogI2RlZmluZSBUSUZfTkVFRF9SRVNDSEVECTIJLyogcmVzY2hlZHVsaW5nIG5lY2Vz
c2FyeSAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAkzCS8qIHNpZ25hbCBub3RpZmlj
YXRpb25zIGV4aXN0ICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX0VNVQkJNAkvKiBzeXNjYWxs
IGVtdWxhdGlvbiBhY3RpdmUgKi8KICNkZWZpbmUgVElGX1JFU1RPUkVfVE0JCTUJLyogbmVl
ZCB0byByZXN0b3JlIFRNIEZQL1ZFQy9WU1ggKi8KICNkZWZpbmUgVElGX1BBVENIX1BFTkRJ
TkcJNgkvKiBwZW5kaW5nIGxpdmUgcGF0Y2hpbmcgdXBkYXRlICovCkBAIC0xMjEsNiArMTIy
LDcgQEAgdm9pZCBhcmNoX3NldHVwX25ld19leGVjKHZvaWQpOwogI2RlZmluZSBfVElGX1NZ
U0NBTExfVFJBQ0UJKDE8PFRJRl9TWVNDQUxMX1RSQUNFKQogI2RlZmluZSBfVElGX1NJR1BF
TkRJTkcJCSgxPDxUSUZfU0lHUEVORElORykKICNkZWZpbmUgX1RJRl9ORUVEX1JFU0NIRUQJ
KDE8PFRJRl9ORUVEX1JFU0NIRUQpCisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05BTAkoMTw8
VElGX05PVElGWV9TSUdOQUwpCiAjZGVmaW5lIF9USUZfUE9MTElOR19OUkZMQUcJKDE8PFRJ
Rl9QT0xMSU5HX05SRkxBRykKICNkZWZpbmUgX1RJRl8zMkJJVAkJKDE8PFRJRl8zMkJJVCkK
ICNkZWZpbmUgX1RJRl9SRVNUT1JFX1RNCQkoMTw8VElGX1JFU1RPUkVfVE0pCkBAIC0xNDIs
NyArMTQ0LDggQEAgdm9pZCBhcmNoX3NldHVwX25ld19leGVjKHZvaWQpOwogCiAjZGVmaW5l
IF9USUZfVVNFUl9XT1JLX01BU0sJKF9USUZfU0lHUEVORElORyB8IF9USUZfTkVFRF9SRVND
SEVEIHwgXAogCQkJCSBfVElGX05PVElGWV9SRVNVTUUgfCBfVElGX1VQUk9CRSB8IFwKLQkJ
CQkgX1RJRl9SRVNUT1JFX1RNIHwgX1RJRl9QQVRDSF9QRU5ESU5HKQorCQkJCSBfVElGX1JF
U1RPUkVfVE0gfCBfVElGX1BBVENIX1BFTkRJTkcgfCBcCisJCQkJIF9USUZfTk9USUZZX1NJ
R05BTCkKICNkZWZpbmUgX1RJRl9QRVJTWVNDQUxMX01BU0sJKF9USUZfUkVTVE9SRUFMTHxf
VElGX05PRVJST1IpCiAKIC8qIEJpdHMgaW4gbG9jYWxfZmxhZ3MgKi8KZGlmZiAtLWdpdCBh
L2FyY2gvcG93ZXJwYy9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL3Bvd2VycGMva2VybmVsL3Np
Z25hbC5jCmluZGV4IGQyYzM1NmYzNzA3Ny4uYThiYjBhY2ExZDAyIDEwMDY0NAotLS0gYS9h
cmNoL3Bvd2VycGMva2VybmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvcG93ZXJwYy9rZXJuZWwv
c2lnbmFsLmMKQEAgLTMxOCw3ICszMTgsNyBAQCB2b2lkIGRvX25vdGlmeV9yZXN1bWUoc3Ry
dWN0IHB0X3JlZ3MgKnJlZ3MsIHVuc2lnbmVkIGxvbmcgdGhyZWFkX2luZm9fZmxhZ3MpCiAJ
aWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgX1RJRl9QQVRDSF9QRU5ESU5HKQogCQlrbHBfdXBk
YXRlX3BhdGNoX3N0YXRlKGN1cnJlbnQpOwogCi0JaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYg
X1RJRl9TSUdQRU5ESU5HKSB7CisJaWYgKHRocmVhZF9pbmZvX2ZsYWdzICYgKF9USUZfU0lH
UEVORElORyB8IF9USUZfTk9USUZZX1NJR05BTCkpIHsKIAkJQlVHX09OKHJlZ3MgIT0gY3Vy
cmVudC0+dGhyZWFkLnJlZ3MpOwogCQlkb19zaWduYWwoY3VycmVudCk7CiAJfQotLSAKMi4z
OS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0022-parisc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0022-parisc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSA5OWY0NDI3OTE3NjFiOWI3ZjQ3OTZmOTI2Nzc5MzEwZDVhNWU4NGNhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToyNzowMiAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjIv
NjNdIHBhcmlzYzogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3Ry
ZWFtIGNvbW1pdCAxOGNiMzI4MTI4NWQyMTkwYzA2MDVkMmU1MzU0MzgwMjMxOWJkMWExIF0K
CldpcmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIHBhcmlzYy4KCkNjOiBs
aW51eC1wYXJpc2NAdmdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBIZWxnZSBEZWxsZXIgPGRl
bGxlckBnbXguZGU+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5k
az4KLS0tCiBhcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oIHwgNCArKyst
CiBhcmNoL3BhcmlzYy9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwgMyArKy0KIDIgZmls
ZXMgY2hhbmdlZCwgNSBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL3Bhcmlz
Yy9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCmluZGV4IDI4NTc1NzU0NGNjYS4uMGJkMzhh
OTcyY2VhIDEwMDY0NAotLS0gYS9hcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS90aHJlYWRfaW5m
by5oCisrKyBiL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTUy
LDYgKzUyLDcgQEAgc3RydWN0IHRocmVhZF9pbmZvIHsKICNkZWZpbmUgVElGX1BPTExJTkdf
TlJGTEFHCTMJLyogdHJ1ZSBpZiBwb2xsX2lkbGUoKSBpcyBwb2xsaW5nIFRJRl9ORUVEX1JF
U0NIRUQgKi8KICNkZWZpbmUgVElGXzMyQklUICAgICAgICAgICAgICAgNCAgICAgICAvKiAz
MiBiaXQgYmluYXJ5ICovCiAjZGVmaW5lIFRJRl9NRU1ESUUJCTUJLyogaXMgdGVybWluYXRp
bmcgZHVlIHRvIE9PTSBraWxsZXIgKi8KKyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNgkv
KiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogI2RlZmluZSBUSUZfU1lTQ0FMTF9B
VURJVAk3CS8qIHN5c2NhbGwgYXVkaXRpbmcgYWN0aXZlICovCiAjZGVmaW5lIFRJRl9OT1RJ
RllfUkVTVU1FCTgJLyogY2FsbGJhY2sgYmVmb3JlIHJldHVybmluZyB0byB1c2VyICovCiAj
ZGVmaW5lIFRJRl9TSU5HTEVTVEVQCQk5CS8qIHNpbmdsZSBzdGVwcGluZz8gKi8KQEAgLTYx
LDYgKzYyLDcgQEAgc3RydWN0IHRocmVhZF9pbmZvIHsKIAogI2RlZmluZSBfVElGX1NZU0NB
TExfVFJBQ0UJKDEgPDwgVElGX1NZU0NBTExfVFJBQ0UpCiAjZGVmaW5lIF9USUZfU0lHUEVO
RElORwkJKDEgPDwgVElGX1NJR1BFTkRJTkcpCisjZGVmaW5lIF9USUZfTk9USUZZX1NJR05B
TAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9ORUVEX1JFU0NIRUQJ
KDEgPDwgVElGX05FRURfUkVTQ0hFRCkKICNkZWZpbmUgX1RJRl9QT0xMSU5HX05SRkxBRwko
MSA8PCBUSUZfUE9MTElOR19OUkZMQUcpCiAjZGVmaW5lIF9USUZfMzJCSVQJCSgxIDw8IFRJ
Rl8zMkJJVCkKQEAgLTcyLDcgKzc0LDcgQEAgc3RydWN0IHRocmVhZF9pbmZvIHsKICNkZWZp
bmUgX1RJRl9TWVNDQUxMX1RSQUNFUE9JTlQJKDEgPDwgVElGX1NZU0NBTExfVFJBQ0VQT0lO
VCkKIAogI2RlZmluZSBfVElGX1VTRVJfV09SS19NQVNLICAgICAoX1RJRl9TSUdQRU5ESU5H
IHwgX1RJRl9OT1RJRllfUkVTVU1FIHwgXAotICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgX1RJRl9ORUVEX1JFU0NIRUQpCisgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBfVElGX05FRURfUkVTQ0hFRCB8IF9USUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUg
X1RJRl9TWVNDQUxMX1RSQUNFX01BU0sgKF9USUZfU1lTQ0FMTF9UUkFDRSB8IF9USUZfU0lO
R0xFU1RFUCB8CVwKIAkJCQkgX1RJRl9CTE9DS1NURVAgfCBfVElGX1NZU0NBTExfQVVESVQg
fCBcCiAJCQkJIF9USUZfU0VDQ09NUCB8IF9USUZfU1lTQ0FMTF9UUkFDRVBPSU5UKQpkaWZm
IC0tZ2l0IGEvYXJjaC9wYXJpc2Mva2VybmVsL3NpZ25hbC5jIGIvYXJjaC9wYXJpc2Mva2Vy
bmVsL3NpZ25hbC5jCmluZGV4IDhkNmM5Yjg4ZWIzZi4uZGIxYTQ3Y2Y0MjRkIDEwMDY0NAot
LS0gYS9hcmNoL3BhcmlzYy9rZXJuZWwvc2lnbmFsLmMKKysrIGIvYXJjaC9wYXJpc2Mva2Vy
bmVsL3NpZ25hbC5jCkBAIC02MDksNyArNjA5LDggQEAgZG9fc2lnbmFsKHN0cnVjdCBwdF9y
ZWdzICpyZWdzLCBsb25nIGluX3N5c2NhbGwpCiAKIHZvaWQgZG9fbm90aWZ5X3Jlc3VtZShz
dHJ1Y3QgcHRfcmVncyAqcmVncywgbG9uZyBpbl9zeXNjYWxsKQogewotCWlmICh0ZXN0X3Ro
cmVhZF9mbGFnKFRJRl9TSUdQRU5ESU5HKSkKKwlpZiAodGVzdF90aHJlYWRfZmxhZyhUSUZf
U0lHUEVORElORykgfHwKKwkgICAgdGVzdF90aHJlYWRfZmxhZyhUSUZfTk9USUZZX1NJR05B
TCkpCiAJCWRvX3NpZ25hbChyZWdzLCBpbl9zeXNjYWxsKTsKIAogCWlmICh0ZXN0X3RocmVh
ZF9mbGFnKFRJRl9OT1RJRllfUkVTVU1FKSkKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0021-nios32-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0021-nios32-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBhZDE4Y2JhNTBkYmUxZmJjOGU1N2M0ZTk2ZjRhOTUyZWZlMjEyZWIzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToyMToyMSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjEv
NjNdIG5pb3MzMjogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3Ry
ZWFtIGNvbW1pdCA0MjAyMDA2NDI3NGMyMzVkNzIwZDljNGI3ZDlhNjc4YjEzM2U1OWNmIF0K
CldpcmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIG5pb3MzMi4KCkNjOiBM
ZXkgRm9vbiBUYW4gPGxleS5mb29uLnRhbkBpbnRlbC5jb20+CkFja2VkLWJ5OiBMZXkgRm9v
biBUYW4gPGxleS5mb29uLnRhbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhi
b2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL25pb3MyL2luY2x1ZGUvYXNtL3RocmVh
ZF9pbmZvLmggfCAyICsrCiBhcmNoL25pb3MyL2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAg
fCAzICsrLQogMiBmaWxlcyBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24o
LSkKCmRpZmYgLS1naXQgYS9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgg
Yi9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggNzM0OWE0ZmE2
MzViLi4yNzJkMmM3MmE3MjcgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIvaW5jbHVkZS9hc20v
dGhyZWFkX2luZm8uaAorKysgYi9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZv
LmgKQEAgLTg2LDYgKzg2LDcgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgdGhyZWFkX2luZm8g
KmN1cnJlbnRfdGhyZWFkX2luZm8odm9pZCkKICNkZWZpbmUgVElGX01FTURJRQkJNAkvKiBp
cyB0ZXJtaW5hdGluZyBkdWUgdG8gT09NIGtpbGxlciAqLwogI2RlZmluZSBUSUZfU0VDQ09N
UAkJNQkvKiBzZWN1cmUgY29tcHV0aW5nICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX0FVRElU
CTYJLyogc3lzY2FsbCBhdWRpdGluZyBhY3RpdmUgKi8KKyNkZWZpbmUgVElGX05PVElGWV9T
SUdOQUwJNwkvKiBzaWduYWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogI2RlZmluZSBUSUZf
UkVTVE9SRV9TSUdNQVNLCTkJLyogcmVzdG9yZSBzaWduYWwgbWFzayBpbiBkb19zaWduYWwo
KSAqLwogCiAjZGVmaW5lIFRJRl9QT0xMSU5HX05SRkxBRwkxNgkvKiB0cnVlIGlmIHBvbGxf
aWRsZSgpIGlzIHBvbGxpbmcKQEAgLTk3LDYgKzk4LDcgQEAgc3RhdGljIGlubGluZSBzdHJ1
Y3QgdGhyZWFkX2luZm8gKmN1cnJlbnRfdGhyZWFkX2luZm8odm9pZCkKICNkZWZpbmUgX1RJ
Rl9ORUVEX1JFU0NIRUQJKDEgPDwgVElGX05FRURfUkVTQ0hFRCkKICNkZWZpbmUgX1RJRl9T
RUNDT01QCQkoMSA8PCBUSUZfU0VDQ09NUCkKICNkZWZpbmUgX1RJRl9TWVNDQUxMX0FVRElU
CSgxIDw8IFRJRl9TWVNDQUxMX0FVRElUKQorI2RlZmluZSBfVElGX05PVElGWV9TSUdOQUwJ
KDEgPDwgVElGX05PVElGWV9TSUdOQUwpCiAjZGVmaW5lIF9USUZfUkVTVE9SRV9TSUdNQVNL
CSgxIDw8IFRJRl9SRVNUT1JFX1NJR01BU0spCiAjZGVmaW5lIF9USUZfUE9MTElOR19OUkZM
QUcJKDEgPDwgVElGX1BPTExJTkdfTlJGTEFHKQogCmRpZmYgLS1naXQgYS9hcmNoL25pb3My
L2tlcm5lbC9zaWduYWwuYyBiL2FyY2gvbmlvczIva2VybmVsL3NpZ25hbC5jCmluZGV4IDkx
NjE4MGU0YTk5Ny4uNjhkNjI2YzRmMWJhIDEwMDY0NAotLS0gYS9hcmNoL25pb3MyL2tlcm5l
bC9zaWduYWwuYworKysgYi9hcmNoL25pb3MyL2tlcm5lbC9zaWduYWwuYwpAQCAtMzA5LDcg
KzMwOSw4IEBAIGFzbWxpbmthZ2UgaW50IGRvX25vdGlmeV9yZXN1bWUoc3RydWN0IHB0X3Jl
Z3MgKnJlZ3MpCiAJaWYgKCF1c2VyX21vZGUocmVncykpCiAJCXJldHVybiAwOwogCi0JaWYg
KHRlc3RfdGhyZWFkX2ZsYWcoVElGX1NJR1BFTkRJTkcpKSB7CisJaWYgKHRlc3RfdGhyZWFk
X2ZsYWcoVElGX1NJR1BFTkRJTkcpIHx8CisJICAgIHRlc3RfdGhyZWFkX2ZsYWcoVElGX05P
VElGWV9TSUdOQUwpKSB7CiAJCWludCByZXN0YXJ0ID0gZG9fc2lnbmFsKHJlZ3MpOwogCiAJ
CWlmICh1bmxpa2VseShyZXN0YXJ0KSkgewotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0020-m68k-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0020-m68k-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBkYTgxYTUyM2MwYTYyNzg4OTFlMDIwNTk2ZWRjN2EzMmNiNTkzOTIyIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgOSBPY3QgMjAyMCAxNToxMDo1NSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMjAv
NjNdIG02OGs6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgZTY2MDY1M2NkOWYyZGY0NzBkMTU2YzI0OTYzMWY2OGI5ZGVlNTFlZSBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBtNjhrLgoKQ2M6IGxpbnV4
LW02OGtAbGlzdHMubGludXgtbTY4ay5vcmcKQWNrZWQtYnk6IEdlZXJ0IFV5dHRlcmhvZXZl
biA8Z2VlcnRAbGludXgtbTY4ay5vcmc+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4
Ym9lQGtlcm5lbC5kaz4KLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8u
aCB8IDEgKwogYXJjaC9tNjhrL2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAzICsrLQog
MiBmaWxlcyBjaGFuZ2VkLCAzIGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYg
LS1naXQgYS9hcmNoL202OGsvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCBiL2FyY2gvbTY4
ay9pbmNsdWRlL2FzbS90aHJlYWRfaW5mby5oCmluZGV4IDM2ODljNjcxOGM4OC4uMTVhNzU3
MDczZmE1IDEwMDY0NAotLS0gYS9hcmNoL202OGsvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8u
aAorKysgYi9hcmNoL202OGsvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaApAQCAtNjAsNiAr
NjAsNyBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCB0aHJlYWRfaW5mbyAqY3VycmVudF90aHJl
YWRfaW5mbyh2b2lkKQogICogYml0cyAwLTcgYXJlIHRlc3RlZCBhdCBldmVyeSBleGNlcHRp
b24gZXhpdAogICogYml0cyA4LTE1IGFyZSBhbHNvIHRlc3RlZCBhdCBzeXNjYWxsIGV4aXQK
ICAqLworI2RlZmluZSBUSUZfTk9USUZZX1NJR05BTAk0CiAjZGVmaW5lIFRJRl9OT1RJRllf
UkVTVU1FCTUJLyogY2FsbGJhY2sgYmVmb3JlIHJldHVybmluZyB0byB1c2VyICovCiAjZGVm
aW5lIFRJRl9TSUdQRU5ESU5HCQk2CS8qIHNpZ25hbCBwZW5kaW5nICovCiAjZGVmaW5lIFRJ
Rl9ORUVEX1JFU0NIRUQJNwkvKiByZXNjaGVkdWxpbmcgbmVjZXNzYXJ5ICovCmRpZmYgLS1n
aXQgYS9hcmNoL202OGsva2VybmVsL3NpZ25hbC5jIGIvYXJjaC9tNjhrL2tlcm5lbC9zaWdu
YWwuYwppbmRleCBmZDkxNjg0NGE2ODMuLjVkMTI3MzZiNGIyOCAxMDA2NDQKLS0tIGEvYXJj
aC9tNjhrL2tlcm5lbC9zaWduYWwuYworKysgYi9hcmNoL202OGsva2VybmVsL3NpZ25hbC5j
CkBAIC0xMTI5LDcgKzExMjksOCBAQCBzdGF0aWMgdm9pZCBkb19zaWduYWwoc3RydWN0IHB0
X3JlZ3MgKnJlZ3MpCiAKIHZvaWQgZG9fbm90aWZ5X3Jlc3VtZShzdHJ1Y3QgcHRfcmVncyAq
cmVncykKIHsKLQlpZiAodGVzdF90aHJlYWRfZmxhZyhUSUZfU0lHUEVORElORykpCisJaWYg
KHRlc3RfdGhyZWFkX2ZsYWcoVElGX05PVElGWV9TSUdOQUwpIHx8CisJICAgIHRlc3RfdGhy
ZWFkX2ZsYWcoVElGX1NJR1BFTkRJTkcpKQogCQlkb19zaWduYWwocmVncyk7CiAKIAlpZiAo
dGVzdF90aHJlYWRfZmxhZyhUSUZfTk9USUZZX1JFU1VNRSkpCi0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0019-arm64-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0019-arm64-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBlYWEzNzlmMTA4MDVmZGYwZjA5NmJmZDMyZDM2OTdmN2FmMGRjMTg1IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMjIgT2N0IDIwMjAgMjA6MDk6MjMgLTA2MDAKU3ViamVjdDogW1BBVENIIDE5
LzYzXSBhcm02NDogYWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3Ry
ZWFtIGNvbW1pdCAxOTJjYWFiZDRkZDkyYzk4ZDIzZWQ0MzM0ZDc1OTZhZjA1YWYyZmI0IF0K
CldpcmUgdXAgVElGX05PVElGWV9TSUdOQUwgaGFuZGxpbmcgZm9yIGFybTY0LgoKQ2M6IGxp
bnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpBY2tlZC1ieTogV2lsbCBEZWFj
b24gPHdpbGxAa2VybmVsLm9yZz4KQWNrZWQtYnk6IENhdGFsaW4gTWFyaW5hcyA8Y2F0YWxp
bi5tYXJpbmFzQGFybS5jb20+ClNpZ25lZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtl
cm5lbC5kaz4KLS0tCiBhcmNoL2FybTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggfCA1
ICsrKystCiBhcmNoL2FybTY0L2tlcm5lbC9zaWduYWwuYyAgICAgICAgICAgfCAyICstCiAy
IGZpbGVzIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmggYi9hcmNoL2Fy
bTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggMWZiYWI4NTRhNTFiLi5jZGNm
MzA3NzY0YWEgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vdGhyZWFkX2lu
Zm8uaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKQEAgLTY4
LDYgKzY4LDcgQEAgdm9pZCBhcmNoX3JlbGVhc2VfdGFza19zdHJ1Y3Qoc3RydWN0IHRhc2tf
c3RydWN0ICp0c2spOwogI2RlZmluZSBUSUZfVVBST0JFCQk0CS8qIHVwcm9iZSBicmVha3Bv
aW50IG9yIHNpbmdsZXN0ZXAgKi8KICNkZWZpbmUgVElGX0ZTQ0hFQ0sJCTUJLyogQ2hlY2sg
RlMgaXMgVVNFUl9EUyBvbiByZXR1cm4gKi8KICNkZWZpbmUgVElGX01URV9BU1lOQ19GQVVM
VAk2CS8qIE1URSBBc3luY2hyb25vdXMgVGFnIENoZWNrIEZhdWx0ICovCisjZGVmaW5lIFRJ
Rl9OT1RJRllfU0lHTkFMCTcJLyogc2lnbmFsIG5vdGlmaWNhdGlvbnMgZXhpc3QgKi8KICNk
ZWZpbmUgVElGX1NZU0NBTExfVFJBQ0UJOAkvKiBzeXNjYWxsIHRyYWNlIGFjdGl2ZSAqLwog
I2RlZmluZSBUSUZfU1lTQ0FMTF9BVURJVAk5CS8qIHN5c2NhbGwgYXVkaXRpbmcgKi8KICNk
ZWZpbmUgVElGX1NZU0NBTExfVFJBQ0VQT0lOVAkxMAkvKiBzeXNjYWxsIHRyYWNlcG9pbnQg
Zm9yIGZ0cmFjZSAqLwpAQCAtOTgsMTAgKzk5LDEyIEBAIHZvaWQgYXJjaF9yZWxlYXNlX3Rh
c2tfc3RydWN0KHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrKTsKICNkZWZpbmUgX1RJRl8zMkJJ
VAkJKDEgPDwgVElGXzMyQklUKQogI2RlZmluZSBfVElGX1NWRQkJKDEgPDwgVElGX1NWRSkK
ICNkZWZpbmUgX1RJRl9NVEVfQVNZTkNfRkFVTFQJKDEgPDwgVElGX01URV9BU1lOQ19GQVVM
VCkKKyNkZWZpbmUgX1RJRl9OT1RJRllfU0lHTkFMCSgxIDw8IFRJRl9OT1RJRllfU0lHTkFM
KQogCiAjZGVmaW5lIF9USUZfV09SS19NQVNLCQkoX1RJRl9ORUVEX1JFU0NIRUQgfCBfVElG
X1NJR1BFTkRJTkcgfCBcCiAJCQkJIF9USUZfTk9USUZZX1JFU1VNRSB8IF9USUZfRk9SRUlH
Tl9GUFNUQVRFIHwgXAotCQkJCSBfVElGX1VQUk9CRSB8IF9USUZfRlNDSEVDSyB8IF9USUZf
TVRFX0FTWU5DX0ZBVUxUKQorCQkJCSBfVElGX1VQUk9CRSB8IF9USUZfRlNDSEVDSyB8IF9U
SUZfTVRFX0FTWU5DX0ZBVUxUIHwgXAorCQkJCSBfVElGX05PVElGWV9TSUdOQUwpCiAKICNk
ZWZpbmUgX1RJRl9TWVNDQUxMX1dPUksJKF9USUZfU1lTQ0FMTF9UUkFDRSB8IF9USUZfU1lT
Q0FMTF9BVURJVCB8IFwKIAkJCQkgX1RJRl9TWVNDQUxMX1RSQUNFUE9JTlQgfCBfVElGX1NF
Q0NPTVAgfCBcCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2tlcm5lbC9zaWduYWwuYyBiL2Fy
Y2gvYXJtNjQva2VybmVsL3NpZ25hbC5jCmluZGV4IDBkYWI1Njc5YTk3ZC4uYjZmYmJkNTI3
ZGQ3IDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L2tlcm5lbC9zaWduYWwuYworKysgYi9hcmNo
L2FybTY0L2tlcm5lbC9zaWduYWwuYwpAQCAtOTM4LDcgKzkzOCw3IEBAIGFzbWxpbmthZ2Ug
dm9pZCBkb19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdzICpyZWdzLAogCQkJCQkgICAg
ICAgKHZvaWQgX191c2VyICopTlVMTCwgY3VycmVudCk7CiAJCQl9CiAKLQkJCWlmICh0aHJl
YWRfZmxhZ3MgJiBfVElGX1NJR1BFTkRJTkcpCisJCQlpZiAodGhyZWFkX2ZsYWdzICYgKF9U
SUZfU0lHUEVORElORyB8IF9USUZfTk9USUZZX1NJR05BTCkpCiAJCQkJZG9fc2lnbmFsKHJl
Z3MpOwogCiAJCQlpZiAodGhyZWFkX2ZsYWdzICYgX1RJRl9OT1RJRllfUkVTVU1FKSB7Ci0t
IAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0018-arc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0018-arc-add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBiNzFmMzViZDI2YTliNTg4ZDU5ODk0ZTU0MmM0OGI0MzYwYmU1MmZjIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMTIgT2N0IDIwMjAgMDc6MTU6MzcgLTA2MDAKU3ViamVjdDogW1BBVENIIDE4
LzYzXSBhcmM6IGFkZCBzdXBwb3J0IGZvciBUSUZfTk9USUZZX1NJR05BTAoKWyBVcHN0cmVh
bSBjb21taXQgNTM4NTVlMTI1ODg3NDNlYTEyOGVlMzFmOTEzZDFjNmUyZjFkMzJjOCBdCgpX
aXJlIHVwIFRJRl9OT1RJRllfU0lHTkFMIGhhbmRsaW5nIGZvciBhcmMuCgpDYzogbGludXgt
c25wcy1hcmNAbGlzdHMuaW5mcmFkZWFkLm9yZwpBY2tlZC1ieTogVmluZWV0IEd1cHRhIDx2
Z3VwdGFAc3lub3BzeXMuY29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBr
ZXJuZWwuZGs+Ci0tLQogYXJjaC9hcmMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCB8IDQg
KysrLQogYXJjaC9hcmMva2VybmVsL2VudHJ5LlMgICAgICAgICAgICB8IDMgKystCiBhcmNo
L2FyYy9rZXJuZWwvc2lnbmFsLmMgICAgICAgICAgIHwgMiArLQogMyBmaWxlcyBjaGFuZ2Vk
LCA2IGluc2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9h
cmMvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCBiL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3Ro
cmVhZF9pbmZvLmgKaW5kZXggZjllZWYwZThmMGI3Li5jMDk0MmMyNGQ0MDEgMTAwNjQ0Ci0t
LSBhL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKKysrIGIvYXJjaC9hcmMv
aW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaApAQCAtNzksNiArNzksNyBAQCBzdGF0aWMgaW5s
aW5lIF9fYXR0cmlidXRlX2NvbnN0X18gc3RydWN0IHRocmVhZF9pbmZvICpjdXJyZW50X3Ro
cmVhZF9pbmZvKHZvaWQpCiAjZGVmaW5lIFRJRl9TSUdQRU5ESU5HCQkyCS8qIHNpZ25hbCBw
ZW5kaW5nICovCiAjZGVmaW5lIFRJRl9ORUVEX1JFU0NIRUQJMwkvKiByZXNjaGVkdWxpbmcg
bmVjZXNzYXJ5ICovCiAjZGVmaW5lIFRJRl9TWVNDQUxMX0FVRElUCTQJLyogc3lzY2FsbCBh
dWRpdGluZyBhY3RpdmUgKi8KKyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJNQkvKiBzaWdu
YWwgbm90aWZpY2F0aW9ucyBleGlzdCAqLwogI2RlZmluZSBUSUZfU1lTQ0FMTF9UUkFDRQkx
NQkvKiBzeXNjYWxsIHRyYWNlIGFjdGl2ZSAqLwogCiAvKiB0cnVlIGlmIHBvbGxfaWRsZSgp
IGlzIHBvbGxpbmcgVElGX05FRURfUkVTQ0hFRCAqLwpAQCAtODksMTEgKzkwLDEyIEBAIHN0
YXRpYyBpbmxpbmUgX19hdHRyaWJ1dGVfY29uc3RfXyBzdHJ1Y3QgdGhyZWFkX2luZm8gKmN1
cnJlbnRfdGhyZWFkX2luZm8odm9pZCkKICNkZWZpbmUgX1RJRl9TSUdQRU5ESU5HCQkoMTw8
VElGX1NJR1BFTkRJTkcpCiAjZGVmaW5lIF9USUZfTkVFRF9SRVNDSEVECSgxPDxUSUZfTkVF
RF9SRVNDSEVEKQogI2RlZmluZSBfVElGX1NZU0NBTExfQVVESVQJKDE8PFRJRl9TWVNDQUxM
X0FVRElUKQorI2RlZmluZSBfVElGX05PVElGWV9TSUdOQUwJKDE8PFRJRl9OT1RJRllfU0lH
TkFMKQogI2RlZmluZSBfVElGX01FTURJRQkJKDE8PFRJRl9NRU1ESUUpCiAKIC8qIHdvcmsg
dG8gZG8gb24gaW50ZXJydXB0L2V4Y2VwdGlvbiByZXR1cm4gKi8KICNkZWZpbmUgX1RJRl9X
T1JLX01BU0sJCShfVElGX05FRURfUkVTQ0hFRCB8IF9USUZfU0lHUEVORElORyB8IFwKLQkJ
CQkgX1RJRl9OT1RJRllfUkVTVU1FKQorCQkJCSBfVElGX05PVElGWV9SRVNVTUUgfCBfVElG
X05PVElGWV9TSUdOQUwpCiAKIC8qCiAgKiBfVElGX0FMTFdPUktfTUFTSyBpbmNsdWRlcyBT
WVNDQUxMX1RSQUNFLCBidXQgd2UgZG9uJ3QgbmVlZCBpdC4KZGlmZiAtLWdpdCBhL2FyY2gv
YXJjL2tlcm5lbC9lbnRyeS5TIGIvYXJjaC9hcmMva2VybmVsL2VudHJ5LlMKaW5kZXggMzAx
YWRlNGQwYjk0Li42NzYzODFmNjk0ZDMgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJjL2tlcm5lbC9l
bnRyeS5TCisrKyBiL2FyY2gvYXJjL2tlcm5lbC9lbnRyeS5TCkBAIC0zMDgsNyArMzA4LDgg
QEAgcmVzdW1lX3VzZXJfbW9kZV9iZWdpbjoKIAltb3YgcjAsIHNwCTsgcHRfcmVncyBmb3Ig
YXJnIHRvIGRvX3NpZ25hbCgpL2RvX25vdGlmeV9yZXN1bWUoKQogCiAJR0VUX0NVUlJfVEhS
X0lORk9fRkxBR1MgICByOQotCWJiaXQwICByOSwgVElGX1NJR1BFTkRJTkcsIC5MY2hrX25v
dGlmeV9yZXN1bWUKKwlhbmQuZiAgMCwgIHI5LCBUSUZfU0lHUEVORElOR3xUSUZfTk9USUZZ
X1NJR05BTAorCWJ6IC5MY2hrX25vdGlmeV9yZXN1bWUKIAogCTsgTm9ybWFsIFRyYXAvSVJR
IGVudHJ5IG9ubHkgc2F2ZXMgU2NyYXRjaCAoY2FsbGVyLXNhdmVkKSByZWdzCiAJOyBpbiBw
dF9yZWcgc2luY2UgdGhlICJDIiBBQkkgKGtlcm5lbCBjb2RlKSB3aWxsIGF1dG9tYXRpY2Fs
bHkKZGlmZiAtLWdpdCBhL2FyY2gvYXJjL2tlcm5lbC9zaWduYWwuYyBiL2FyY2gvYXJjL2tl
cm5lbC9zaWduYWwuYwppbmRleCA5ZDU5OTZlMDE0YzAuLjQ4NjhiZGViZjU4NiAxMDA2NDQK
LS0tIGEvYXJjaC9hcmMva2VybmVsL3NpZ25hbC5jCisrKyBiL2FyY2gvYXJjL2tlcm5lbC9z
aWduYWwuYwpAQCAtNDA1LDcgKzQwNSw3IEBAIHZvaWQgZG9fc2lnbmFsKHN0cnVjdCBwdF9y
ZWdzICpyZWdzKQogCiAJcmVzdGFydF9zY2FsbCA9IGluX3N5c2NhbGwocmVncykgJiYgc3lz
Y2FsbF9yZXN0YXJ0YWJsZShyZWdzKTsKIAotCWlmIChnZXRfc2lnbmFsKCZrc2lnKSkgewor
CWlmICh0ZXN0X3RocmVhZF9mbGFnKFRJRl9TSUdQRU5ESU5HKSAmJiBnZXRfc2lnbmFsKCZr
c2lnKSkgewogCQlpZiAocmVzdGFydF9zY2FsbCkgewogCQkJYXJjX3Jlc3RhcnRfc3lzY2Fs
bCgma3NpZy5rYSwgcmVncyk7CiAJCQlzeXNjYWxsX3dvbnRfcmVzdGFydChyZWdzKTsJLyog
Tm8gbW9yZSByZXN0YXJ0cyAqLwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0017-x86-Wire-up-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0017-x86-Wire-up-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBmOGY1ZmRjNzlmMGU0ODAyMzBjNTAxYmM1ZDc0NGJjMDhkZWZlYzZjIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMjYgT2N0IDIwMjAgMTQ6MzI6MjkgLTA2MDAKU3ViamVjdDogW1BBVENIIDE3
LzYzXSB4ODY6IFdpcmUgdXAgVElGX05PVElGWV9TSUdOQUwKClsgVXBzdHJlYW0gY29tbWl0
IGM4ZDVlZDY3OTM2ZmRkYmUyYWU4NDVmYzgwMzk3NzE4MDA2MzIyZDcgXQoKVGhlIGdlbmVy
aWMgZW50cnkgY29kZSBoYXMgc3VwcG9ydCBmb3IgVElGX05PVElGWV9TSUdOQUwgYWxyZWFk
eS4gSnVzdApwcm92aWRlIHRoZSBUSUYgYml0LgoKWyB0Z2x4OiBBZG9wdGVkIHRvIG90aGVy
IFRJRiBjaGFuZ2VzIGluIHg4NiBdCgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJv
ZUBrZXJuZWwuZGs+ClNpZ25lZC1vZmYtYnk6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51
dHJvbml4LmRlPgpMaW5rOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9yLzIwMjAxMDI2MjAz
MjMwLjM4NjM0OC00LWF4Ym9lQGtlcm5lbC5kawotLS0KIGFyY2gveDg2L2luY2x1ZGUvYXNt
L3RocmVhZF9pbmZvLmggfCAyICsrCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNlcnRpb25zKCsp
CgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaCBiL2Fy
Y2gveDg2L2luY2x1ZGUvYXNtL3RocmVhZF9pbmZvLmgKaW5kZXggZTcwMWYyOWI0ODgxLi4w
MTJjOGVlOTNiNjcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3RocmVhZF9p
bmZvLmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vdGhyZWFkX2luZm8uaApAQCAtOTMs
NiArOTMsNyBAQCBzdHJ1Y3QgdGhyZWFkX2luZm8gewogI2RlZmluZSBUSUZfTk9UU0MJCTE2
CS8qIFRTQyBpcyBub3QgYWNjZXNzaWJsZSBpbiB1c2VybGFuZCAqLwogI2RlZmluZSBUSUZf
SUEzMgkJMTcJLyogSUEzMiBjb21wYXRpYmlsaXR5IHByb2Nlc3MgKi8KICNkZWZpbmUgVElG
X1NMRAkJCTE4CS8qIFJlc3RvcmUgc3BsaXQgbG9jayBkZXRlY3Rpb24gb24gY29udGV4dCBz
d2l0Y2ggKi8KKyNkZWZpbmUgVElGX05PVElGWV9TSUdOQUwJMTkJLyogc2lnbmFsIG5vdGlm
aWNhdGlvbnMgZXhpc3QgKi8KICNkZWZpbmUgVElGX01FTURJRQkJMjAJLyogaXMgdGVybWlu
YXRpbmcgZHVlIHRvIE9PTSBraWxsZXIgKi8KICNkZWZpbmUgVElGX1BPTExJTkdfTlJGTEFH
CTIxCS8qIGlkbGUgaXMgcG9sbGluZyBmb3IgVElGX05FRURfUkVTQ0hFRCAqLwogI2RlZmlu
ZSBUSUZfSU9fQklUTUFQCQkyMgkvKiB1c2VzIEkvTyBiaXRtYXAgKi8KQEAgLTEyMSw2ICsx
MjIsNyBAQCBzdHJ1Y3QgdGhyZWFkX2luZm8gewogI2RlZmluZSBfVElGX05PQ1BVSUQJCSgx
IDw8IFRJRl9OT0NQVUlEKQogI2RlZmluZSBfVElGX05PVFNDCQkoMSA8PCBUSUZfTk9UU0Mp
CiAjZGVmaW5lIF9USUZfSUEzMgkJKDEgPDwgVElGX0lBMzIpCisjZGVmaW5lIF9USUZfTk9U
SUZZX1NJR05BTAkoMSA8PCBUSUZfTk9USUZZX1NJR05BTCkKICNkZWZpbmUgX1RJRl9TTEQJ
CSgxIDw8IFRJRl9TTEQpCiAjZGVmaW5lIF9USUZfUE9MTElOR19OUkZMQUcJKDEgPDwgVElG
X1BPTExJTkdfTlJGTEFHKQogI2RlZmluZSBfVElGX0lPX0JJVE1BUAkJKDEgPDwgVElGX0lP
X0JJVE1BUCkKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0016-task_work-Use-TIF_NOTIFY_SIGNAL-if-available.patch"
Content-Disposition: attachment;
 filename="0016-task_work-Use-TIF_NOTIFY_SIGNAL-if-available.patch"
Content-Transfer-Encoding: base64

RnJvbSBmZDc2MTRlYjU1ZWQxY2QwMDE3YmFlYThhNzYyMTU4NmQ0NDA4OWJlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMjYgT2N0IDIwMjAgMTQ6MzI6MzAgLTA2MDAKU3ViamVjdDogW1BBVENIIDE2
LzYzXSB0YXNrX3dvcms6IFVzZSBUSUZfTk9USUZZX1NJR05BTCBpZiBhdmFpbGFibGUKClsg
VXBzdHJlYW0gY29tbWl0IDExNDUxOGViNjQzMGI4MzJkMmY5ZjVhMDA4MDQzYjkxM2NjZjBl
MjQgXQoKSWYgdGhlIGFyY2ggc3VwcG9ydHMgVElGX05PVElGWV9TSUdOQUwsIHRoZW4gdXNl
IHRoYXQgZm9yIFRXQV9TSUdOQUwgYXMKaXQncyBtb3JlIGVmZmljaWVudCB0aGFuIHVzaW5n
IHRoZSBzaWduYWwgZGVsaXZlcnkgbWV0aG9kLiBUaGlzIGlzCmVzcGVjaWFsbHkgdHJ1ZSBv
biB0aHJlYWRlZCBhcHBsaWNhdGlvbnMsIHdoZXJlIC0+c2lnaGFuZCBpcyBzaGFyZWQgYWNy
b3NzCnRocmVhZHMsIGJ1dCBpdCdzIGFsc28gbGlnaHRlciB3ZWlnaHQgb24gbm9uLXNoYXJl
ZCBjYXNlcy4KCmlvX3VyaW5nIGlzIGEgaGVhdnkgY29uc3VtZXIgb2YgVFdBX1NJR05BTCBi
YXNlZCB0YXNrX3dvcmsuIEEgdGVzdCB3aXRoCnRocmVhZHMgc2hvd3MgYSBuaWNlIGltcHJv
dmVtZW50IHJ1bm5pbmcgYW4gaW9fdXJpbmcgYmFzZWQgZWNobyBzZXJ2ZXIuCgpzdG9jayBr
ZXJuZWw6CjAuMDElIDw9IDAuMSBtaWxsaXNlY29uZHMKOTUuODYlIDw9IDAuMiBtaWxsaXNl
Y29uZHMKOTguMjclIDw9IDAuMyBtaWxsaXNlY29uZHMKOTkuNzElIDw9IDAuNCBtaWxsaXNl
Y29uZHMKMTAwLjAwJSA8PSAwLjUgbWlsbGlzZWNvbmRzCjEwMC4wMCUgPD0gMC42IG1pbGxp
c2Vjb25kcwoxMDAuMDAlIDw9IDAuNyBtaWxsaXNlY29uZHMKMTAwLjAwJSA8PSAwLjggbWls
bGlzZWNvbmRzCjEwMC4wMCUgPD0gMC45IG1pbGxpc2Vjb25kcwoxMDAuMDAlIDw9IDEuMCBt
aWxsaXNlY29uZHMKMTAwLjAwJSA8PSAxLjEgbWlsbGlzZWNvbmRzCjEwMC4wMCUgPD0gMiBt
aWxsaXNlY29uZHMKMTAwLjAwJSA8PSAzIG1pbGxpc2Vjb25kcwoxMDAuMDAlIDw9IDMgbWls
bGlzZWNvbmRzCjEzNzg5MzAuMDAgcmVxdWVzdHMgcGVyIHNlY29uZAp+MTYwMCUgQ1BVCgox
LjM4TSByZXF1ZXN0cy9zZWNvbmQsIGFuZCBhbGwgMTYgQ1BVcyBhcmUgbWF4ZWQgb3V0LgoK
cGF0Y2hlZCBrZXJuZWw6CjAuMDElIDw9IDAuMSBtaWxsaXNlY29uZHMKOTguMjQlIDw9IDAu
MiBtaWxsaXNlY29uZHMKOTkuNDclIDw9IDAuMyBtaWxsaXNlY29uZHMKOTkuOTklIDw9IDAu
NCBtaWxsaXNlY29uZHMKMTAwLjAwJSA8PSAwLjUgbWlsbGlzZWNvbmRzCjEwMC4wMCUgPD0g
MC42IG1pbGxpc2Vjb25kcwoxMDAuMDAlIDw9IDAuNyBtaWxsaXNlY29uZHMKMTAwLjAwJSA8
PSAwLjggbWlsbGlzZWNvbmRzCjEwMC4wMCUgPD0gMC45IG1pbGxpc2Vjb25kcwoxMDAuMDAl
IDw9IDEuMiBtaWxsaXNlY29uZHMKMTY2NjExMS4zOCByZXF1ZXN0cyBwZXIgc2Vjb25kCn4x
NDUwJSBDUFUKCjEuNjdNIHJlcXVlc3RzL3NlY29uZCwgYW5kIHdlJ3JlIG5vIGxvbmdlciBq
dXN0IGhhbW1lcmluZyBvbiB0aGUgc2lnaGFuZApsb2NrLiBUaGUgb3JpZ2luYWwgcmVwb3J0
ZXIgc3RhdGVzOgoKIkZvciA1LjcuMTUgbXkgYmVuY2htYXJrIGFjaGlldmVzIDEuNk0gcXBz
IGFuZCBzeXN0ZW0gY3B1IGlzIGF0IH44MCUuCiBmb3IgNS43LjE2IG9yIGxhdGVyIGl0IGFj
aGlldmVzIG9ubHkgMU0gcXBzIGFuZCB0aGUgc3lzdGVtIGNwdSBpcyBpcwogYXQgfjEwMCUi
Cgp3aXRoIHRoZSBvbmx5IGRpZmZlcmVuY2UgdGhlcmUgYmVpbmcgdGhhdCBUV0FfU0lHTkFM
IGlzIHVzZWQKdW5jb25kaXRpb25hbGx5IGluIDUuNy4xNiwgc2luY2UgaXQncyByZXF1aXJl
ZCB0byBiZSBhYmxlIHRvIGhhbmRsZSB0aGUKaW5hYmlsaXR5IHRvIHJ1biB0YXNrX3dvcmsg
aWYgdGhlIGFwcGxpY2F0aW9uIGlzIHdhaXRpbmcgaW4gdGhlIGtlcm5lbAphbHJlYWR5IG9u
IGFuIGV2ZW50IHRoYXQgbmVlZHMgdGFza193b3JrIHJ1biB0byBiZSBzYXRpc2ZpZWQuIEFs
c28gc2VlCmNvbW1pdCAwYmE5YzllZGNkMTUuCgpSZXBvcnRlZC1ieTogUm9tYW4gR2Vyc2ht
YW4gPHJvbWdlckBhbWF6b24uY29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJv
ZUBrZXJuZWwuZGs+ClNpZ25lZC1vZmYtYnk6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51
dHJvbml4LmRlPgpSZXZpZXdlZC1ieTogT2xlZyBOZXN0ZXJvdiA8b2xlZ0ByZWRoYXQuY29t
PgpMaW5rOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9yLzIwMjAxMDI2MjAzMjMwLjM4NjM0
OC01LWF4Ym9lQGtlcm5lbC5kawotLS0KIGtlcm5lbC90YXNrX3dvcmsuYyB8IDQxICsrKysr
KysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwg
MjkgaW5zZXJ0aW9ucygrKSwgMTIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEva2VybmVs
L3Rhc2tfd29yay5jIGIva2VybmVsL3Rhc2tfd29yay5jCmluZGV4IDhkNmUxMjE3YzQ1MS4u
MTViMDg3Mjg2YmVhIDEwMDY0NAotLS0gYS9rZXJuZWwvdGFza193b3JrLmMKKysrIGIva2Vy
bmVsL3Rhc2tfd29yay5jCkBAIC01LDYgKzUsMzQgQEAKIAogc3RhdGljIHN0cnVjdCBjYWxs
YmFja19oZWFkIHdvcmtfZXhpdGVkOyAvKiBhbGwgd2UgbmVlZCBpcyAtPm5leHQgPT0gTlVM
TCAqLwogCisvKgorICogVFdBX1NJR05BTCBzaWduYWxpbmcgLSB1c2UgVElGX05PVElGWV9T
SUdOQUwsIGlmIGF2YWlsYWJsZSwgYXMgaXQncyBmYXN0ZXIKKyAqIHRoYW4gVElGX1NJR1BF
TkRJTkcgYXMgdGhlcmUncyBubyBkZXBlbmRlbmN5IG9uIC0+c2lnaGFuZC4gVGhlIGxhdHRl
ciBpcworICogc2hhcmVkIGZvciB0aHJlYWRzLCBhbmQgY2FuIGNhdXNlIGNvbnRlbnRpb24g
b24gc2lnaGFuZC0+bG9jay4gRXZlbiBmb3IKKyAqIHRoZSBub24tdGhyZWFkZWQgY2FzZSBU
SUZfTk9USUZZX1NJR05BTCBpcyBtb3JlIGVmZmljaWVudCwgYXMgbm8gbG9ja2luZworICog
b3IgSVJRIGRpc2FibGluZyBpcyBpbnZvbHZlZCBmb3Igbm90aWZpY2F0aW9uIChvciBydW5u
aW5nKSBwdXJwb3Nlcy4KKyAqLworc3RhdGljIHZvaWQgdGFza193b3JrX25vdGlmeV9zaWdu
YWwoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQoreworI2lmIGRlZmluZWQoVElGX05PVElG
WV9TSUdOQUwpCisJc2V0X25vdGlmeV9zaWduYWwodGFzayk7CisjZWxzZQorCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7CisKKwkvKgorCSAqIE9ubHkgZ3JhYiB0aGUgc2lnaGFuZCBsb2NrIGlm
IHdlIGRvbid0IGFscmVhZHkgaGF2ZSBzb21lCisJICogdGFza193b3JrIHBlbmRpbmcuIFRo
aXMgcGFpcnMgd2l0aCB0aGUgc21wX3N0b3JlX21iKCkKKwkgKiBpbiBnZXRfc2lnbmFsKCks
IHNlZSBjb21tZW50IHRoZXJlLgorCSAqLworCWlmICghKFJFQURfT05DRSh0YXNrLT5qb2Jj
dGwpICYgSk9CQ1RMX1RBU0tfV09SSykgJiYKKwkgICAgbG9ja190YXNrX3NpZ2hhbmQodGFz
aywgJmZsYWdzKSkgeworCQl0YXNrLT5qb2JjdGwgfD0gSk9CQ1RMX1RBU0tfV09SSzsKKwkJ
c2lnbmFsX3dha2VfdXAodGFzaywgMCk7CisJCXVubG9ja190YXNrX3NpZ2hhbmQodGFzaywg
JmZsYWdzKTsKKwl9CisjZW5kaWYKK30KKwogLyoqCiAgKiB0YXNrX3dvcmtfYWRkIC0gYXNr
IHRoZSBAdGFzayB0byBleGVjdXRlIEB3b3JrLT5mdW5jKCkKICAqIEB0YXNrOiB0aGUgdGFz
ayB3aGljaCBzaG91bGQgcnVuIHRoZSBjYWxsYmFjawpAQCAtMzMsNyArNjEsNiBAQCBpbnQg
dGFza193b3JrX2FkZChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssIHN0cnVjdCBjYWxsYmFj
a19oZWFkICp3b3JrLAogCQkgIGVudW0gdGFza193b3JrX25vdGlmeV9tb2RlIG5vdGlmeSkK
IHsKIAlzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqaGVhZDsKLQl1bnNpZ25lZCBsb25nIGZsYWdz
OwogCiAJZG8gewogCQloZWFkID0gUkVBRF9PTkNFKHRhc2stPnRhc2tfd29ya3MpOwpAQCAt
NDksMTcgKzc2LDcgQEAgaW50IHRhc2tfd29ya19hZGQoc3RydWN0IHRhc2tfc3RydWN0ICp0
YXNrLCBzdHJ1Y3QgY2FsbGJhY2tfaGVhZCAqd29yaywKIAkJc2V0X25vdGlmeV9yZXN1bWUo
dGFzayk7CiAJCWJyZWFrOwogCWNhc2UgVFdBX1NJR05BTDoKLQkJLyoKLQkJICogT25seSBn
cmFiIHRoZSBzaWdoYW5kIGxvY2sgaWYgd2UgZG9uJ3QgYWxyZWFkeSBoYXZlIHNvbWUKLQkJ
ICogdGFza193b3JrIHBlbmRpbmcuIFRoaXMgcGFpcnMgd2l0aCB0aGUgc21wX3N0b3JlX21i
KCkKLQkJICogaW4gZ2V0X3NpZ25hbCgpLCBzZWUgY29tbWVudCB0aGVyZS4KLQkJICovCi0J
CWlmICghKFJFQURfT05DRSh0YXNrLT5qb2JjdGwpICYgSk9CQ1RMX1RBU0tfV09SSykgJiYK
LQkJICAgIGxvY2tfdGFza19zaWdoYW5kKHRhc2ssICZmbGFncykpIHsKLQkJCXRhc2stPmpv
YmN0bCB8PSBKT0JDVExfVEFTS19XT1JLOwotCQkJc2lnbmFsX3dha2VfdXAodGFzaywgMCk7
Ci0JCQl1bmxvY2tfdGFza19zaWdoYW5kKHRhc2ssICZmbGFncyk7Ci0JCX0KKwkJdGFza193
b3JrX25vdGlmeV9zaWduYWwodGFzayk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCVdBUk5f
T05fT05DRSgxKTsKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0015-entry-Add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Disposition: attachment;
 filename="0015-entry-Add-support-for-TIF_NOTIFY_SIGNAL.patch"
Content-Transfer-Encoding: base64

RnJvbSBkMDJlM2ZhODU2NTQyZTM5NTMxZjdmMDkxMDM4OWIzMzRjZDliMWYzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMjYgT2N0IDIwMjAgMTQ6MzI6MjggLTA2MDAKU3ViamVjdDogW1BBVENIIDE1
LzYzXSBlbnRyeTogQWRkIHN1cHBvcnQgZm9yIFRJRl9OT1RJRllfU0lHTkFMCgpbIFVwc3Ry
ZWFtIGNvbW1pdCAxMmRiOGI2OTAwMTBjY2ZhZGY5ZDBiNDlhMWUxNzk4ZTQ3ZGJiZTFhIF0K
CkFkZCBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyBpbiB0aGUgZ2VuZXJpYyBlbnRyeSBj
b2RlLCB3aGljaCBpZiBzZXQsCndpbGwgcmV0dXJuIHRydWUgaWYgc2lnbmFsX3BlbmRpbmco
KSBpcyB1c2VkIGluIGEgd2FpdCBsb29wLiBUaGF0IGNhdXNlcyBhbgpleGl0IG9mIHRoZSBs
b29wIHNvIHRoYXQgbm90aWZ5X3NpZ25hbCB0cmFjZWhvb2tzIGNhbiBiZSBydW4uIElmIHRo
ZSB3YWl0Cmxvb3AgaXMgY3VycmVudGx5IGluc2lkZSBhIHN5c3RlbSBjYWxsLCB0aGUgc3lz
dGVtIGNhbGwgaXMgcmVzdGFydGVkIG9uY2UKdGFza193b3JrIGhhcyBiZWVuIHByb2Nlc3Nl
ZC4KCkluIHByZXBhcmF0aW9uIGZvciBvbmx5IGhhdmluZyBhcmNoX2RvX3NpZ25hbCgpIGhh
bmRsZSBzeXNjYWxsIHJlc3RhcnRzIGlmCl9USUZfU0lHUEVORElORyBpc24ndCBzZXQsIHJl
bmFtZSBpdCB0byBhcmNoX2RvX3NpZ25hbF9vcl9yZXN0YXJ0KCkuICBQYXNzCmluIGEgYm9v
bGVhbiB0aGF0IHRlbGxzIHRoZSBhcmNoaXRlY3R1cmUgc3BlY2lmaWMgc2lnbmFsIGhhbmRs
ZXIgaWYgaXQKc2hvdWxkIGF0dGVtcHQgdG8gZ2V0IGEgc2lnbmFsLCBvciBqdXN0IHByb2Nl
c3MgYSBwb3RlbnRpYWwgc3lzY2FsbApyZXN0YXJ0LgoKRm9yICFDT05GSUdfR0VORVJJQ19F
TlRSWSBhcmNocywgYWRkIHRoZSBUSUZfTk9USUZZX1NJR05BTCBoYW5kbGluZyB0bwpnZXRf
c2lnbmFsKCkuIFRoaXMgaXMgZG9uZSB0byBtaW5pbWl6ZSB0aGUgbmVlZGVkIGFyY2hpdGVj
dHVyZSBjaGFuZ2VzIHRvCnN1cHBvcnQgdGhpcyBmZWF0dXJlLgoKU2lnbmVkLW9mZi1ieTog
SmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgpTaWduZWQtb2ZmLWJ5OiBUaG9tYXMgR2xl
aXhuZXIgPHRnbHhAbGludXRyb25peC5kZT4KUmV2aWV3ZWQtYnk6IE9sZWcgTmVzdGVyb3Yg
PG9sZWdAcmVkaGF0LmNvbT4KTGluazogaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvci8yMDIw
MTAyNjIwMzIzMC4zODYzNDgtMy1heGJvZUBrZXJuZWwuZGsKLS0tCiBhcmNoL3g4Ni9rZXJu
ZWwvc2lnbmFsLmMgICAgIHwgIDQgKystLQogaW5jbHVkZS9saW51eC9lbnRyeS1jb21tb24u
aCB8IDExICsrKysrKysrLS0tCiBpbmNsdWRlL2xpbnV4L2VudHJ5LWt2bS5oICAgIHwgIDQg
KystLQogaW5jbHVkZS9saW51eC9zY2hlZC9zaWduYWwuaCB8IDExICsrKysrKysrKystCiBp
bmNsdWRlL2xpbnV4L3RyYWNlaG9vay5oICAgIHwgMjcgKysrKysrKysrKysrKysrKysrKysr
KysrKysrCiBrZXJuZWwvZW50cnkvY29tbW9uLmMgICAgICAgIHwgMTQgKysrKysrKysrKyst
LS0KIGtlcm5lbC9lbnRyeS9rdm0uYyAgICAgICAgICAgfCAgMyArKysKIGtlcm5lbC9zaWdu
YWwuYyAgICAgICAgICAgICAgfCAxNCArKysrKysrKysrKysrKwogOCBmaWxlcyBjaGFuZ2Vk
LCA3NyBpbnNlcnRpb25zKCspLCAxMSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNo
L3g4Ni9rZXJuZWwvc2lnbmFsLmMgYi9hcmNoL3g4Ni9rZXJuZWwvc2lnbmFsLmMKaW5kZXgg
YjAwMWJhODExY2FiLi45ZWZmNDgxNzE1MzIgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2tlcm5l
bC9zaWduYWwuYworKysgYi9hcmNoL3g4Ni9rZXJuZWwvc2lnbmFsLmMKQEAgLTc5OCwxMSAr
Nzk4LDExIEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBnZXRfbnJfcmVzdGFydF9z
eXNjYWxsKGNvbnN0IHN0cnVjdCBwdF9yZWdzICpyZWdzKQogICogd2FudCB0byBoYW5kbGUu
IFRodXMgeW91IGNhbm5vdCBraWxsIGluaXQgZXZlbiB3aXRoIGEgU0lHS0lMTCBldmVuIGJ5
CiAgKiBtaXN0YWtlLgogICovCi12b2lkIGFyY2hfZG9fc2lnbmFsKHN0cnVjdCBwdF9yZWdz
ICpyZWdzKQordm9pZCBhcmNoX2RvX3NpZ25hbF9vcl9yZXN0YXJ0KHN0cnVjdCBwdF9yZWdz
ICpyZWdzLCBib29sIGhhc19zaWduYWwpCiB7CiAJc3RydWN0IGtzaWduYWwga3NpZzsKIAot
CWlmIChnZXRfc2lnbmFsKCZrc2lnKSkgeworCWlmIChoYXNfc2lnbmFsICYmIGdldF9zaWdu
YWwoJmtzaWcpKSB7CiAJCS8qIFdoZWUhIEFjdHVhbGx5IGRlbGl2ZXIgdGhlIHNpZ25hbC4g
ICovCiAJCWhhbmRsZV9zaWduYWwoJmtzaWcsIHJlZ3MpOwogCQlyZXR1cm47CmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L2VudHJ5LWNvbW1vbi5oIGIvaW5jbHVkZS9saW51eC9lbnRy
eS1jb21tb24uaAppbmRleCA3ZGZmMDc3MTNhMDcuLjFhMTI4YmFmMzYyOCAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9saW51eC9lbnRyeS1jb21tb24uaAorKysgYi9pbmNsdWRlL2xpbnV4L2Vu
dHJ5LWNvbW1vbi5oCkBAIC0zNyw2ICszNywxMCBAQAogIyBkZWZpbmUgX1RJRl9VUFJPQkUJ
CQkoMCkKICNlbmRpZgogCisjaWZuZGVmIF9USUZfTk9USUZZX1NJR05BTAorIyBkZWZpbmUg
X1RJRl9OT1RJRllfU0lHTkFMCQkoMCkKKyNlbmRpZgorCiAvKgogICogVElGIGZsYWdzIGhh
bmRsZWQgaW4gc3lzY2FsbF9lbnRlcl9mcm9tX3VzZXJfbW9kZSgpCiAgKi8KQEAgLTY5LDcg
KzczLDcgQEAKIAogI2RlZmluZSBFWElUX1RPX1VTRVJfTU9ERV9XT1JLCQkJCQkJXAogCShf
VElGX1NJR1BFTkRJTkcgfCBfVElGX05PVElGWV9SRVNVTUUgfCBfVElGX1VQUk9CRSB8CQlc
Ci0JIF9USUZfTkVFRF9SRVNDSEVEIHwgX1RJRl9QQVRDSF9QRU5ESU5HIHwJCQlcCisJIF9U
SUZfTkVFRF9SRVNDSEVEIHwgX1RJRl9QQVRDSF9QRU5ESU5HIHwgX1RJRl9OT1RJRllfU0lH
TkFMIHwJXAogCSBBUkNIX0VYSVRfVE9fVVNFUl9NT0RFX1dPUkspCiAKIC8qKgpAQCAtMjU5
LDEyICsyNjMsMTMgQEAgc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIGFyY2hfZXhpdF90
b191c2VyX21vZGUodm9pZCkgeyB9CiAjZW5kaWYKIAogLyoqCi0gKiBhcmNoX2RvX3NpZ25h
bCAtICBBcmNoaXRlY3R1cmUgc3BlY2lmaWMgc2lnbmFsIGRlbGl2ZXJ5IGZ1bmN0aW9uCisg
KiBhcmNoX2RvX3NpZ25hbF9vcl9yZXN0YXJ0IC0gIEFyY2hpdGVjdHVyZSBzcGVjaWZpYyBz
aWduYWwgZGVsaXZlcnkgZnVuY3Rpb24KICAqIEByZWdzOglQb2ludGVyIHRvIGN1cnJlbnRz
IHB0X3JlZ3MKKyAqIEBoYXNfc2lnbmFsOglhY3R1YWwgc2lnbmFsIHRvIGhhbmRsZQogICoK
ICAqIEludm9rZWQgZnJvbSBleGl0X3RvX3VzZXJfbW9kZV9sb29wKCkuCiAgKi8KLXZvaWQg
YXJjaF9kb19zaWduYWwoc3RydWN0IHB0X3JlZ3MgKnJlZ3MpOwordm9pZCBhcmNoX2RvX3Np
Z25hbF9vcl9yZXN0YXJ0KHN0cnVjdCBwdF9yZWdzICpyZWdzLCBib29sIGhhc19zaWduYWwp
OwogCiAvKioKICAqIGFyY2hfc3lzY2FsbF9leGl0X3RyYWNlaG9vayAtIFdyYXBwZXIgYXJv
dW5kIHRyYWNlaG9va19yZXBvcnRfc3lzY2FsbF9leGl0KCkKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbGludXgvZW50cnkta3ZtLmggYi9pbmNsdWRlL2xpbnV4L2VudHJ5LWt2bS5oCmluZGV4
IDBjZWYxN2FmYjQxYS4uOWI5M2Y4NTg0ZmY3IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4
L2VudHJ5LWt2bS5oCisrKyBiL2luY2x1ZGUvbGludXgvZW50cnkta3ZtLmgKQEAgLTExLDgg
KzExLDggQEAKICMgZGVmaW5lIEFSQ0hfWEZFUl9UT19HVUVTVF9NT0RFX1dPUksJKDApCiAj
ZW5kaWYKIAotI2RlZmluZSBYRkVSX1RPX0dVRVNUX01PREVfV09SSwkJCQkJXAotCShfVElG
X05FRURfUkVTQ0hFRCB8IF9USUZfU0lHUEVORElORyB8CQkJXAorI2RlZmluZSBYRkVSX1RP
X0dVRVNUX01PREVfV09SSwkJCQkJCVwKKwkoX1RJRl9ORUVEX1JFU0NIRUQgfCBfVElGX1NJ
R1BFTkRJTkcgfCBfVElGX05PVElGWV9TSUdOQUwgfAlcCiAJIF9USUZfTk9USUZZX1JFU1VN
RSB8IEFSQ0hfWEZFUl9UT19HVUVTVF9NT0RFX1dPUkspCiAKIHN0cnVjdCBrdm1fdmNwdTsK
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvc2NoZWQvc2lnbmFsLmggYi9pbmNsdWRlL2xp
bnV4L3NjaGVkL3NpZ25hbC5oCmluZGV4IDg2ZTNiMDkxYTUyNS4uYTUzNzNhMTNiYTJjIDEw
MDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NjaGVkL3NpZ25hbC5oCisrKyBiL2luY2x1ZGUv
bGludXgvc2NoZWQvc2lnbmFsLmgKQEAgLTM2MSw2ICszNjEsMTUgQEAgc3RhdGljIGlubGlu
ZSBpbnQgdGFza19zaWdwZW5kaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAqcCkKIAogc3RhdGlj
IGlubGluZSBpbnQgc2lnbmFsX3BlbmRpbmcoc3RydWN0IHRhc2tfc3RydWN0ICpwKQogewor
I2lmIGRlZmluZWQoVElGX05PVElGWV9TSUdOQUwpCisJLyoKKwkgKiBUSUZfTk9USUZZX1NJ
R05BTCBpc24ndCByZWFsbHkgYSBzaWduYWwsIGJ1dCBpdCByZXF1aXJlcyB0aGUgc2FtZQor
CSAqIGJlaGF2aW9yIGluIHRlcm1zIG9mIGVuc3VyaW5nIHRoYXQgd2UgYnJlYWsgb3V0IG9m
IHdhaXQgbG9vcHMKKwkgKiBzbyB0aGF0IG5vdGlmeSBzaWduYWwgY2FsbGJhY2tzIGNhbiBi
ZSBwcm9jZXNzZWQuCisJICovCisJaWYgKHVubGlrZWx5KHRlc3RfdHNrX3RocmVhZF9mbGFn
KHAsIFRJRl9OT1RJRllfU0lHTkFMKSkpCisJCXJldHVybiAxOworI2VuZGlmCiAJcmV0dXJu
IHRhc2tfc2lncGVuZGluZyhwKTsKIH0KIApAQCAtNTA4LDcgKzUxNyw3IEBAIGV4dGVybiBp
bnQgc2V0X3VzZXJfc2lnbWFzayhjb25zdCBzaWdzZXRfdCBfX3VzZXIgKnVtYXNrLCBzaXpl
X3Qgc2lnc2V0c2l6ZSk7CiBzdGF0aWMgaW5saW5lIHZvaWQgcmVzdG9yZV9zYXZlZF9zaWdt
YXNrX3VubGVzcyhib29sIGludGVycnVwdGVkKQogewogCWlmIChpbnRlcnJ1cHRlZCkKLQkJ
V0FSTl9PTighdGVzdF90aHJlYWRfZmxhZyhUSUZfU0lHUEVORElORykpOworCQlXQVJOX09O
KCFzaWduYWxfcGVuZGluZyhjdXJyZW50KSk7CiAJZWxzZQogCQlyZXN0b3JlX3NhdmVkX3Np
Z21hc2soKTsKIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvdHJhY2Vob29rLmggYi9p
bmNsdWRlL2xpbnV4L3RyYWNlaG9vay5oCmluZGV4IGI0ODBlMWEwN2VkOC4uZjdkODJlNGZh
ZmQ2IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3RyYWNlaG9vay5oCisrKyBiL2luY2x1
ZGUvbGludXgvdHJhY2Vob29rLmgKQEAgLTE5OCw0ICsxOTgsMzEgQEAgc3RhdGljIGlubGlu
ZSB2b2lkIHRyYWNlaG9va19ub3RpZnlfcmVzdW1lKHN0cnVjdCBwdF9yZWdzICpyZWdzKQog
CWJsa2NnX21heWJlX3Rocm90dGxlX2N1cnJlbnQoKTsKIH0KIAorLyoKKyAqIGNhbGxlZCBi
eSBleGl0X3RvX3VzZXJfbW9kZV9sb29wKCkgaWYgdGlfd29yayAmIF9USUZfTk9USUZZX1NJ
R05BTC4gVGhpcworICogaXMgY3VycmVudGx5IHVzZWQgYnkgVFdBX1NJR05BTCBiYXNlZCB0
YXNrX3dvcmssIHdoaWNoIHJlcXVpcmVzIGJyZWFraW5nCisgKiB3YWl0IGxvb3BzIHRvIGVu
c3VyZSB0aGF0IHRhc2tfd29yayBpcyBub3RpY2VkIGFuZCBydW4uCisgKi8KK3N0YXRpYyBp
bmxpbmUgdm9pZCB0cmFjZWhvb2tfbm90aWZ5X3NpZ25hbCh2b2lkKQoreworI2lmIGRlZmlu
ZWQoVElGX05PVElGWV9TSUdOQUwpCisJY2xlYXJfdGhyZWFkX2ZsYWcoVElGX05PVElGWV9T
SUdOQUwpOworCXNtcF9tYl9fYWZ0ZXJfYXRvbWljKCk7CisJaWYgKGN1cnJlbnQtPnRhc2tf
d29ya3MpCisJCXRhc2tfd29ya19ydW4oKTsKKyNlbmRpZgorfQorCisvKgorICogQ2FsbGVk
IHdoZW4gd2UgaGF2ZSB3b3JrIHRvIHByb2Nlc3MgZnJvbSBleGl0X3RvX3VzZXJfbW9kZV9s
b29wKCkKKyAqLworc3RhdGljIGlubGluZSB2b2lkIHNldF9ub3RpZnlfc2lnbmFsKHN0cnVj
dCB0YXNrX3N0cnVjdCAqdGFzaykKK3sKKyNpZiBkZWZpbmVkKFRJRl9OT1RJRllfU0lHTkFM
KQorCWlmICghdGVzdF9hbmRfc2V0X3Rza190aHJlYWRfZmxhZyh0YXNrLCBUSUZfTk9USUZZ
X1NJR05BTCkgJiYKKwkgICAgIXdha2VfdXBfc3RhdGUodGFzaywgVEFTS19JTlRFUlJVUFRJ
QkxFKSkKKwkJa2lja19wcm9jZXNzKHRhc2spOworI2VuZGlmCit9CisKICNlbmRpZgkvKiA8
bGludXgvdHJhY2Vob29rLmg+ICovCmRpZmYgLS1naXQgYS9rZXJuZWwvZW50cnkvY29tbW9u
LmMgYi9rZXJuZWwvZW50cnkvY29tbW9uLmMKaW5kZXggZTI4OWU2NzczMjkyLi4wOWY1ODg1
M2Y2OTIgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9lbnRyeS9jb21tb24uYworKysgYi9rZXJuZWwv
ZW50cnkvY29tbW9uLmMKQEAgLTEzNSw3ICsxMzUsMTUgQEAgc3RhdGljIF9fYWx3YXlzX2lu
bGluZSB2b2lkIGV4aXRfdG9fdXNlcl9tb2RlKHZvaWQpCiB9CiAKIC8qIFdvcmthcm91bmQg
dG8gYWxsb3cgZ3JhZHVhbCBjb252ZXJzaW9uIG9mIGFyY2hpdGVjdHVyZSBjb2RlICovCi12
b2lkIF9fd2VhayBhcmNoX2RvX3NpZ25hbChzdHJ1Y3QgcHRfcmVncyAqcmVncykgeyB9Cit2
b2lkIF9fd2VhayBhcmNoX2RvX3NpZ25hbF9vcl9yZXN0YXJ0KHN0cnVjdCBwdF9yZWdzICpy
ZWdzLCBib29sIGhhc19zaWduYWwpIHsgfQorCitzdGF0aWMgdm9pZCBoYW5kbGVfc2lnbmFs
X3dvcmsoc3RydWN0IHB0X3JlZ3MgKnJlZ3MsIHVuc2lnbmVkIGxvbmcgdGlfd29yaykKK3sK
KwlpZiAodGlfd29yayAmIF9USUZfTk9USUZZX1NJR05BTCkKKwkJdHJhY2Vob29rX25vdGlm
eV9zaWduYWwoKTsKKworCWFyY2hfZG9fc2lnbmFsX29yX3Jlc3RhcnQocmVncywgdGlfd29y
ayAmIF9USUZfU0lHUEVORElORyk7Cit9CiAKIHN0YXRpYyB1bnNpZ25lZCBsb25nIGV4aXRf
dG9fdXNlcl9tb2RlX2xvb3Aoc3RydWN0IHB0X3JlZ3MgKnJlZ3MsCiAJCQkJCSAgICB1bnNp
Z25lZCBsb25nIHRpX3dvcmspCkBAIC0xNTcsOCArMTY1LDggQEAgc3RhdGljIHVuc2lnbmVk
IGxvbmcgZXhpdF90b191c2VyX21vZGVfbG9vcChzdHJ1Y3QgcHRfcmVncyAqcmVncywKIAkJ
aWYgKHRpX3dvcmsgJiBfVElGX1BBVENIX1BFTkRJTkcpCiAJCQlrbHBfdXBkYXRlX3BhdGNo
X3N0YXRlKGN1cnJlbnQpOwogCi0JCWlmICh0aV93b3JrICYgX1RJRl9TSUdQRU5ESU5HKQot
CQkJYXJjaF9kb19zaWduYWwocmVncyk7CisJCWlmICh0aV93b3JrICYgKF9USUZfU0lHUEVO
RElORyB8IF9USUZfTk9USUZZX1NJR05BTCkpCisJCQloYW5kbGVfc2lnbmFsX3dvcmsocmVn
cywgdGlfd29yayk7CiAKIAkJaWYgKHRpX3dvcmsgJiBfVElGX05PVElGWV9SRVNVTUUpIHsK
IAkJCXRyYWNlaG9va19ub3RpZnlfcmVzdW1lKHJlZ3MpOwpkaWZmIC0tZ2l0IGEva2VybmVs
L2VudHJ5L2t2bS5jIGIva2VybmVsL2VudHJ5L2t2bS5jCmluZGV4IDJhMzEzOWRhYjEwOS4u
MDQ5ZmQwNmI0YzNkIDEwMDY0NAotLS0gYS9rZXJuZWwvZW50cnkva3ZtLmMKKysrIGIva2Vy
bmVsL2VudHJ5L2t2bS5jCkBAIC04LDYgKzgsOSBAQCBzdGF0aWMgaW50IHhmZXJfdG9fZ3Vl
c3RfbW9kZV93b3JrKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgbG9uZyB0aV93
b3JrKQogCWRvIHsKIAkJaW50IHJldDsKIAorCQlpZiAodGlfd29yayAmIF9USUZfTk9USUZZ
X1NJR05BTCkKKwkJCXRyYWNlaG9va19ub3RpZnlfc2lnbmFsKCk7CisKIAkJaWYgKHRpX3dv
cmsgJiBfVElGX1NJR1BFTkRJTkcpIHsKIAkJCWt2bV9oYW5kbGVfc2lnbmFsX2V4aXQodmNw
dSk7CiAJCQlyZXR1cm4gLUVJTlRSOwpkaWZmIC0tZ2l0IGEva2VybmVsL3NpZ25hbC5jIGIv
a2VybmVsL3NpZ25hbC5jCmluZGV4IDkyZGM4ZGM2MzEzOC4uMjY5MzgyYTkzMTE5IDEwMDY0
NAotLS0gYS9rZXJuZWwvc2lnbmFsLmMKKysrIGIva2VybmVsL3NpZ25hbC5jCkBAIC0yNTIw
LDYgKzI1MjAsMjAgQEAgYm9vbCBnZXRfc2lnbmFsKHN0cnVjdCBrc2lnbmFsICprc2lnKQog
CXN0cnVjdCBzaWduYWxfc3RydWN0ICpzaWduYWwgPSBjdXJyZW50LT5zaWduYWw7CiAJaW50
IHNpZ25yOwogCisJLyoKKwkgKiBGb3Igbm9uLWdlbmVyaWMgYXJjaGl0ZWN0dXJlcywgY2hl
Y2sgZm9yIFRJRl9OT1RJRllfU0lHTkFMIHNvCisJICogdGhhdCB0aGUgYXJjaCBoYW5kbGVy
cyBkb24ndCBhbGwgaGF2ZSB0byBkbyBpdC4gSWYgd2UgZ2V0IGhlcmUKKwkgKiB3aXRob3V0
IFRJRl9TSUdQRU5ESU5HLCBqdXN0IGV4aXQgYWZ0ZXIgcnVubmluZyBzaWduYWwgd29yay4K
KwkgKi8KKyNpZmRlZiBUSUZfTk9USUZZX1NJR05BTAorCWlmICghSVNfRU5BQkxFRChDT05G
SUdfR0VORVJJQ19FTlRSWSkpIHsKKwkJaWYgKHRlc3RfdGhyZWFkX2ZsYWcoVElGX05PVElG
WV9TSUdOQUwpKQorCQkJdHJhY2Vob29rX25vdGlmeV9zaWduYWwoKTsKKwkJaWYgKCF0YXNr
X3NpZ3BlbmRpbmcoY3VycmVudCkpCisJCQlyZXR1cm4gZmFsc2U7CisJfQorI2VuZGlmCisK
IAlpZiAodW5saWtlbHkodXByb2JlX2Rlbnlfc2lnbmFsKCkpKQogCQlyZXR1cm4gZmFsc2U7
CiAKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0014-fs-provide-locked-helper-variant-of-close_fd_get_fil.patch"
Content-Disposition: attachment;
 filename*0="0014-fs-provide-locked-helper-variant-of-close_fd_get_fil.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSAzNjlkODNlMjcyYTlmMWEzMTZjZTc5YjEyMzZmMWYzMjY1ZTQwZWZlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMTkgSmFuIDIwMjEgMTU6NDE6NTIgLTA3MDAKU3ViamVjdDogW1BBVENIIDE0
LzYzXSBmczogcHJvdmlkZSBsb2NrZWQgaGVscGVyIHZhcmlhbnQgb2YKIGNsb3NlX2ZkX2dl
dF9maWxlKCkKClsgVXBzdHJlYW0gY29tbWl0IDUzZGVjMmVhNzRmMmVmMzYwZTg0NTU0Mzli
ZTk2YTc4MGJhYTYwOTcgXQoKQXNzdW1lcyBjdXJyZW50LT5maWxlcy0+ZmlsZV9sb2NrIGlz
IGFscmVhZHkgaGVsZCBvbiBpbnZvY2F0aW9uLiBIZWxwcwp0aGUgY2FsbGVyIGNoZWNrIHRo
ZSBmaWxlIGJlZm9yZSByZW1vdmluZyB0aGUgZmQsIGlmIGl0IG5lZWRzIHRvLgoKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGZzL2ZpbGUuYyAg
ICAgfCAzNiArKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0KIGZzL2ludGVy
bmFsLmggfCAgMSArCiAyIGZpbGVzIGNoYW5nZWQsIDI2IGluc2VydGlvbnMoKyksIDExIGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2ZpbGUuYyBiL2ZzL2ZpbGUuYwppbmRleCBh
YWNjNWJmODBiZDYuLjk3YTBjZDMxZmFlYyAxMDA2NDQKLS0tIGEvZnMvZmlsZS5jCisrKyBi
L2ZzL2ZpbGUuYwpAQCAtMjIsNiArMjIsOCBAQAogI2luY2x1ZGUgPGxpbnV4L2Nsb3NlX3Jh
bmdlLmg+CiAjaW5jbHVkZSA8bmV0L3NvY2suaD4KIAorI2luY2x1ZGUgImludGVybmFsLmgi
CisKIHVuc2lnbmVkIGludCBzeXNjdGxfbnJfb3BlbiBfX3JlYWRfbW9zdGx5ID0gMTAyNCox
MDI0OwogdW5zaWduZWQgaW50IHN5c2N0bF9ucl9vcGVuX21pbiA9IEJJVFNfUEVSX0xPTkc7
CiAvKiBvdXIgbWluKCkgaXMgdW51c2FibGUgaW4gY29uc3RhbnQgZXhwcmVzc2lvbnMgOy0v
ICovCkBAIC03ODAsMzYgKzc4Miw0OCBAQCBpbnQgX19jbG9zZV9yYW5nZSh1bnNpZ25lZCBm
ZCwgdW5zaWduZWQgbWF4X2ZkLCB1bnNpZ25lZCBpbnQgZmxhZ3MpCiB9CiAKIC8qCi0gKiB2
YXJpYW50IG9mIGNsb3NlX2ZkIHRoYXQgZ2V0cyBhIHJlZiBvbiB0aGUgZmlsZSBmb3IgbGF0
ZXIgZnB1dC4KLSAqIFRoZSBjYWxsZXIgbXVzdCBlbnN1cmUgdGhhdCBmaWxwX2Nsb3NlKCkg
Y2FsbGVkIG9uIHRoZSBmaWxlLCBhbmQgdGhlbgotICogYW4gZnB1dCgpLgorICogU2VlIGNs
b3NlX2ZkX2dldF9maWxlKCkgYmVsb3csIHRoaXMgdmFyaWFudCBhc3N1bWVzIGN1cnJlbnQt
PmZpbGVzLT5maWxlX2xvY2sKKyAqIGlzIGhlbGQuCiAgKi8KLWludCBjbG9zZV9mZF9nZXRf
ZmlsZSh1bnNpZ25lZCBpbnQgZmQsIHN0cnVjdCBmaWxlICoqcmVzKQoraW50IF9fY2xvc2Vf
ZmRfZ2V0X2ZpbGUodW5zaWduZWQgaW50IGZkLCBzdHJ1Y3QgZmlsZSAqKnJlcykKIHsKIAlz
dHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcyA9IGN1cnJlbnQtPmZpbGVzOwogCXN0cnVjdCBm
aWxlICpmaWxlOwogCXN0cnVjdCBmZHRhYmxlICpmZHQ7CiAKLQlzcGluX2xvY2soJmZpbGVz
LT5maWxlX2xvY2spOwogCWZkdCA9IGZpbGVzX2ZkdGFibGUoZmlsZXMpOwogCWlmIChmZCA+
PSBmZHQtPm1heF9mZHMpCi0JCWdvdG8gb3V0X3VubG9jazsKKwkJZ290byBvdXRfZXJyOwog
CWZpbGUgPSBmZHQtPmZkW2ZkXTsKIAlpZiAoIWZpbGUpCi0JCWdvdG8gb3V0X3VubG9jazsK
KwkJZ290byBvdXRfZXJyOwogCXJjdV9hc3NpZ25fcG9pbnRlcihmZHQtPmZkW2ZkXSwgTlVM
TCk7CiAJX19wdXRfdW51c2VkX2ZkKGZpbGVzLCBmZCk7Ci0Jc3Bpbl91bmxvY2soJmZpbGVz
LT5maWxlX2xvY2spOwogCWdldF9maWxlKGZpbGUpOwogCSpyZXMgPSBmaWxlOwogCXJldHVy
biAwOwotCi1vdXRfdW5sb2NrOgotCXNwaW5fdW5sb2NrKCZmaWxlcy0+ZmlsZV9sb2NrKTsK
K291dF9lcnI6CiAJKnJlcyA9IE5VTEw7CiAJcmV0dXJuIC1FTk9FTlQ7CiB9CiAKKy8qCisg
KiB2YXJpYW50IG9mIGNsb3NlX2ZkIHRoYXQgZ2V0cyBhIHJlZiBvbiB0aGUgZmlsZSBmb3Ig
bGF0ZXIgZnB1dC4KKyAqIFRoZSBjYWxsZXIgbXVzdCBlbnN1cmUgdGhhdCBmaWxwX2Nsb3Nl
KCkgY2FsbGVkIG9uIHRoZSBmaWxlLCBhbmQgdGhlbgorICogYW4gZnB1dCgpLgorICovCitp
bnQgY2xvc2VfZmRfZ2V0X2ZpbGUodW5zaWduZWQgaW50IGZkLCBzdHJ1Y3QgZmlsZSAqKnJl
cykKK3sKKwlzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcyA9IGN1cnJlbnQtPmZpbGVzOwor
CWludCByZXQ7CisKKwlzcGluX2xvY2soJmZpbGVzLT5maWxlX2xvY2spOworCXJldCA9IF9f
Y2xvc2VfZmRfZ2V0X2ZpbGUoZmQsIHJlcyk7CisJc3Bpbl91bmxvY2soJmZpbGVzLT5maWxl
X2xvY2spOworCisJcmV0dXJuIHJldDsKK30KKwogdm9pZCBkb19jbG9zZV9vbl9leGVjKHN0
cnVjdCBmaWxlc19zdHJ1Y3QgKmZpbGVzKQogewogCXVuc2lnbmVkIGk7CmRpZmYgLS1naXQg
YS9mcy9pbnRlcm5hbC5oIGIvZnMvaW50ZXJuYWwuaAppbmRleCA5NWE0YzlkOTY5MmYuLjA2
ZDMxM2I5YmVlYyAxMDA2NDQKLS0tIGEvZnMvaW50ZXJuYWwuaAorKysgYi9mcy9pbnRlcm5h
bC5oCkBAIC0xMzQsNiArMTM0LDcgQEAgZXh0ZXJuIHN0cnVjdCBmaWxlICpkb19maWxlX29w
ZW5fcm9vdChzdHJ1Y3QgZGVudHJ5ICosIHN0cnVjdCB2ZnNtb3VudCAqLAogCQljb25zdCBj
aGFyICosIGNvbnN0IHN0cnVjdCBvcGVuX2ZsYWdzICopOwogZXh0ZXJuIHN0cnVjdCBvcGVu
X2hvdyBidWlsZF9vcGVuX2hvdyhpbnQgZmxhZ3MsIHVtb2RlX3QgbW9kZSk7CiBleHRlcm4g
aW50IGJ1aWxkX29wZW5fZmxhZ3MoY29uc3Qgc3RydWN0IG9wZW5faG93ICpob3csIHN0cnVj
dCBvcGVuX2ZsYWdzICpvcCk7CitleHRlcm4gaW50IF9fY2xvc2VfZmRfZ2V0X2ZpbGUodW5z
aWduZWQgaW50IGZkLCBzdHJ1Y3QgZmlsZSAqKnJlcyk7CiAKIGxvbmcgZG9fc3lzX2Z0cnVu
Y2F0ZSh1bnNpZ25lZCBpbnQgZmQsIGxvZmZfdCBsZW5ndGgsIGludCBzbWFsbCk7CiBpbnQg
Y2htb2RfY29tbW9uKGNvbnN0IHN0cnVjdCBwYXRoICpwYXRoLCB1bW9kZV90IG1vZGUpOwot
LSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0013-file-Rename-__close_fd_get_file-close_fd_get_file.patch"
Content-Disposition: attachment;
 filename*0="0013-file-Rename-__close_fd_get_file-close_fd_get_file.patch"
Content-Transfer-Encoding: base64

RnJvbSBiYTUxYTA1MGFmNDljMWRmNDdmZTc5Njg3ZDVmMTQyNTY2MjBkNTA4IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiAiRXJpYyBXLiBCaWVkZXJtYW4iIDxlYmllZGVybUB4
bWlzc2lvbi5jb20+CkRhdGU6IEZyaSwgMjAgTm92IDIwMjAgMTc6MTQ6NDAgLTA2MDAKU3Vi
amVjdDogW1BBVENIIDEzLzYzXSBmaWxlOiBSZW5hbWUgX19jbG9zZV9mZF9nZXRfZmlsZSBj
bG9zZV9mZF9nZXRfZmlsZQoKWyBVcHN0cmVhbSBjb21taXQgOWZlODNjNDNlNzFjZGI4ZTVi
OTUyMGJjYjk4NzA2YTJiM2M2ODBjOCBdCgpUaGUgZnVuY3Rpb24gY2xvc2VfZmRfZ2V0X2Zp
bGUgaXMgZXhwbGljaXRseSBhIHZhcmlhbnQgb2YKX19jbG9zZV9mZFsxXS4gIE5vdyB0aGF0
IF9fY2xvc2VfZmQgaGFzIGJlZW4gcmVuYW1lZCBjbG9zZV9mZCwgcmVuYW1lCmNsb3NlX2Zk
X2dldF9maWxlIHRvIGJlIGNvbnNpc3RlbnQgd2l0aCBjbG9zZV9mZC4KCldoZW4gX19hbGxv
Y19mZCwgX19jbG9zZV9mZCBhbmQgX19mZF9pbnN0YWxsIHdlcmUgaW50cm9kdWNlZCB0aGUK
ZG91YmxlIHVuZGVyc2NvcmUgaW5kaWNhdGVkIHRoYXQgdGhlIGZ1bmN0aW9uIHRvb2sgYSBz
dHJ1Y3QKZmlsZXNfc3RydWN0IHBhcmFtZXRlci4gIFRoZSBmdW5jdGlvbiBfX2Nsb3NlX2Zk
X2dldF9maWxlIG5ldmVyIGhhcyBzbwp0aGUgbmFtaW5nIGhhcyBhbHdheXMgYmVlbiBpbmNv
bnNpc3RlbnQuICBUaGlzIGp1c3QgY2xlYW5zIHRoaW5ncyB1cApzbyB0aGVyZSBhcmUgbm90
IGFueSBsaW5nZXJpbmcgbWVudGlvbnMgb3IgcmVmZXJlbmNlcyBfX2Nsb3NlX2ZkIGxlZnQK
aW4gdGhlIGNvZGUuCgpbMV0gODBjZDc5NTYzMGQ2ICgiYmluZGVyOiBmaXggdXNlLWFmdGVy
LWZyZWUgZHVlIHRvIGtzeXNfY2xvc2UoKSBkdXJpbmcgZmRnZXQoKSIpCkxpbms6IGh0dHBz
Oi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMDExMjAyMzE0NDEuMjk5MTEtMjMtZWJpZWRlcm1A
eG1pc3Npb24uY29tClNpZ25lZC1vZmYtYnk6IEVyaWMgVy4gQmllZGVybWFuIDxlYmllZGVy
bUB4bWlzc2lvbi5jb20+Ci0tLQogZHJpdmVycy9hbmRyb2lkL2JpbmRlci5jIHwgMiArLQog
ZnMvZmlsZS5jICAgICAgICAgICAgICAgIHwgNCArKy0tCiBmcy9pb191cmluZy5jICAgICAg
ICAgICAgfCAyICstCiBpbmNsdWRlL2xpbnV4L2ZkdGFibGUuaCAgfCAyICstCiA0IGZpbGVz
IGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2FuZHJvaWQvYmluZGVyLmMgYi9kcml2ZXJzL2FuZHJvaWQvYmluZGVyLmMK
aW5kZXggNDQ3M2FkZWYyZjVhLi5iNDAzYzdmMDYzYjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
YW5kcm9pZC9iaW5kZXIuYworKysgYi9kcml2ZXJzL2FuZHJvaWQvYmluZGVyLmMKQEAgLTIy
NTUsNyArMjI1NSw3IEBAIHN0YXRpYyB2b2lkIGJpbmRlcl9kZWZlcnJlZF9mZF9jbG9zZShp
bnQgZmQpCiAJaWYgKCF0d2NiKQogCQlyZXR1cm47CiAJaW5pdF90YXNrX3dvcmsoJnR3Y2It
PnR3b3JrLCBiaW5kZXJfZG9fZmRfY2xvc2UpOwotCV9fY2xvc2VfZmRfZ2V0X2ZpbGUoZmQs
ICZ0d2NiLT5maWxlKTsKKwljbG9zZV9mZF9nZXRfZmlsZShmZCwgJnR3Y2ItPmZpbGUpOwog
CWlmICh0d2NiLT5maWxlKSB7CiAJCWZpbHBfY2xvc2UodHdjYi0+ZmlsZSwgY3VycmVudC0+
ZmlsZXMpOwogCQl0YXNrX3dvcmtfYWRkKGN1cnJlbnQsICZ0d2NiLT50d29yaywgVFdBX1JF
U1VNRSk7CmRpZmYgLS1naXQgYS9mcy9maWxlLmMgYi9mcy9maWxlLmMKaW5kZXggODQzMWRm
ZGUwMzZjLi5hYWNjNWJmODBiZDYgMTAwNjQ0Ci0tLSBhL2ZzL2ZpbGUuYworKysgYi9mcy9m
aWxlLmMKQEAgLTc4MCwxMSArNzgwLDExIEBAIGludCBfX2Nsb3NlX3JhbmdlKHVuc2lnbmVk
IGZkLCB1bnNpZ25lZCBtYXhfZmQsIHVuc2lnbmVkIGludCBmbGFncykKIH0KIAogLyoKLSAq
IHZhcmlhbnQgb2YgX19jbG9zZV9mZCB0aGF0IGdldHMgYSByZWYgb24gdGhlIGZpbGUgZm9y
IGxhdGVyIGZwdXQuCisgKiB2YXJpYW50IG9mIGNsb3NlX2ZkIHRoYXQgZ2V0cyBhIHJlZiBv
biB0aGUgZmlsZSBmb3IgbGF0ZXIgZnB1dC4KICAqIFRoZSBjYWxsZXIgbXVzdCBlbnN1cmUg
dGhhdCBmaWxwX2Nsb3NlKCkgY2FsbGVkIG9uIHRoZSBmaWxlLCBhbmQgdGhlbgogICogYW4g
ZnB1dCgpLgogICovCi1pbnQgX19jbG9zZV9mZF9nZXRfZmlsZSh1bnNpZ25lZCBpbnQgZmQs
IHN0cnVjdCBmaWxlICoqcmVzKQoraW50IGNsb3NlX2ZkX2dldF9maWxlKHVuc2lnbmVkIGlu
dCBmZCwgc3RydWN0IGZpbGUgKipyZXMpCiB7CiAJc3RydWN0IGZpbGVzX3N0cnVjdCAqZmls
ZXMgPSBjdXJyZW50LT5maWxlczsKIAlzdHJ1Y3QgZmlsZSAqZmlsZTsKZGlmZiAtLWdpdCBh
L2ZzL2lvX3VyaW5nLmMgYi9mcy9pb191cmluZy5jCmluZGV4IDg0NzU4ZTUxMmEwNC4uMWQ4
MTczNzQxMzEwIDEwMDY0NAotLS0gYS9mcy9pb191cmluZy5jCisrKyBiL2ZzL2lvX3VyaW5n
LmMKQEAgLTQyNzAsNyArNDI3MCw3IEBAIHN0YXRpYyBpbnQgaW9fY2xvc2Uoc3RydWN0IGlv
X2tpb2NiICpyZXEsIGJvb2wgZm9yY2Vfbm9uYmxvY2ssCiAKIAkvKiBtaWdodCBiZSBhbHJl
YWR5IGRvbmUgZHVyaW5nIG5vbmJsb2NrIHN1Ym1pc3Npb24gKi8KIAlpZiAoIWNsb3NlLT5w
dXRfZmlsZSkgewotCQlyZXQgPSBfX2Nsb3NlX2ZkX2dldF9maWxlKGNsb3NlLT5mZCwgJmNs
b3NlLT5wdXRfZmlsZSk7CisJCXJldCA9IGNsb3NlX2ZkX2dldF9maWxlKGNsb3NlLT5mZCwg
JmNsb3NlLT5wdXRfZmlsZSk7CiAJCWlmIChyZXQgPCAwKQogCQkJcmV0dXJuIChyZXQgPT0g
LUVOT0VOVCkgPyAtRUJBREYgOiByZXQ7CiAJfQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9mZHRhYmxlLmggYi9pbmNsdWRlL2xpbnV4L2ZkdGFibGUuaAppbmRleCBhMzJiZjQ3YzU5
M2UuLmYxYTk5ZDNlNTU3MCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9mZHRhYmxlLmgK
KysrIGIvaW5jbHVkZS9saW51eC9mZHRhYmxlLmgKQEAgLTEyMyw3ICsxMjMsNyBAQCBleHRl
cm4gdm9pZCBfX2ZkX2luc3RhbGwoc3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMsCiBleHRl
cm4gaW50IF9fY2xvc2VfZmQoc3RydWN0IGZpbGVzX3N0cnVjdCAqZmlsZXMsCiAJCSAgICAg
IHVuc2lnbmVkIGludCBmZCk7CiBleHRlcm4gaW50IF9fY2xvc2VfcmFuZ2UodW5zaWduZWQg
aW50IGZkLCB1bnNpZ25lZCBpbnQgbWF4X2ZkLCB1bnNpZ25lZCBpbnQgZmxhZ3MpOwotZXh0
ZXJuIGludCBfX2Nsb3NlX2ZkX2dldF9maWxlKHVuc2lnbmVkIGludCBmZCwgc3RydWN0IGZp
bGUgKipyZXMpOworZXh0ZXJuIGludCBjbG9zZV9mZF9nZXRfZmlsZSh1bnNpZ25lZCBpbnQg
ZmQsIHN0cnVjdCBmaWxlICoqcmVzKTsKIGV4dGVybiBpbnQgdW5zaGFyZV9mZCh1bnNpZ25l
ZCBsb25nIHVuc2hhcmVfZmxhZ3MsIHVuc2lnbmVkIGludCBtYXhfZmRzLAogCQkgICAgICBz
dHJ1Y3QgZmlsZXNfc3RydWN0ICoqbmV3X2ZkcCk7CiAKLS0gCjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0012-fs-make-do_renameat2-take-struct-filename.patch"
Content-Disposition: attachment;
 filename="0012-fs-make-do_renameat2-take-struct-filename.patch"
Content-Transfer-Encoding: base64

RnJvbSBhYTM1OWU0OGNjOTk5NTEzYjAxNjc3MDMwMDlkM2RiMzYzODE4NTQwIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFNhdCwgMjYgU2VwIDIwMjAgMTc6MjA6MTcgLTA2MDAKU3ViamVjdDogW1BBVENIIDEy
LzYzXSBmczogbWFrZSBkb19yZW5hbWVhdDIoKSB0YWtlIHN0cnVjdCBmaWxlbmFtZQoKWyBV
cHN0cmVhbSBjb21taXQgZTg4NjY2M2NmZDAyOWI2NGExZDhkYTdlZmFlNzAxNDUyNmQ4ODRl
OSBdCgpQYXNzIGluIHRoZSBzdHJ1Y3QgZmlsZW5hbWUgcG9pbnRlcnMgaW5zdGVhZCBvZiB0
aGUgdXNlciBzdHJpbmcsIGFuZAp1cGRhdGUgdGhlIHRocmVlIGNhbGxlcnMgdG8gZG8gdGhl
IHNhbWUuCgpUaGlzIGJlaGF2ZXMgbGlrZSBkb191bmxpbmthdCgpLCB3aGljaCBhbHNvIHRh
a2VzIGEgZmlsZW5hbWUgc3RydWN0IGFuZApwdXRzIGl0IHdoZW4gaXQgaXMgZG9uZS4gQ29u
dmVydGluZyBjYWxsZXJzIGlzIHRoZW4gdHJpdmlhbC4KClNpZ25lZC1vZmYtYnk6IEplbnMg
QXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBmcy9pbnRlcm5hbC5oIHwgIDIgKysKIGZz
L25hbWVpLmMgICAgfCA0MCArKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0t
LS0tCiAyIGZpbGVzIGNoYW5nZWQsIDI0IGluc2VydGlvbnMoKyksIDE4IGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL2ZzL2ludGVybmFsLmggYi9mcy9pbnRlcm5hbC5oCmluZGV4IDUx
NTVmNmNlOTVjNy4uOTVhNGM5ZDk2OTJmIDEwMDY0NAotLS0gYS9mcy9pbnRlcm5hbC5oCisr
KyBiL2ZzL2ludGVybmFsLmgKQEAgLTc3LDYgKzc3LDggQEAgZXh0ZXJuIGludCB2ZnNfcGF0
aF9sb29rdXAoc3RydWN0IGRlbnRyeSAqLCBzdHJ1Y3QgdmZzbW91bnQgKiwKIGxvbmcgZG9f
cm1kaXIoaW50IGRmZCwgc3RydWN0IGZpbGVuYW1lICpuYW1lKTsKIGxvbmcgZG9fdW5saW5r
YXQoaW50IGRmZCwgc3RydWN0IGZpbGVuYW1lICpuYW1lKTsKIGludCBtYXlfbGlua2F0KHN0
cnVjdCBwYXRoICpsaW5rKTsKK2ludCBkb19yZW5hbWVhdDIoaW50IG9sZGRmZCwgc3RydWN0
IGZpbGVuYW1lICpvbGRuYW1lLCBpbnQgbmV3ZGZkLAorCQkgc3RydWN0IGZpbGVuYW1lICpu
ZXduYW1lLCB1bnNpZ25lZCBpbnQgZmxhZ3MpOwogCiAvKgogICogbmFtZXNwYWNlLmMKZGlm
ZiAtLWdpdCBhL2ZzL25hbWVpLmMgYi9mcy9uYW1laS5jCmluZGV4IGZjN2Q1NjIxMTVhZS4u
NDE1OWMxNDBmYTQ3IDEwMDY0NAotLS0gYS9mcy9uYW1laS5jCisrKyBiL2ZzL25hbWVpLmMK
QEAgLTQzNTMsOCArNDM1Myw4IEBAIGludCB2ZnNfcmVuYW1lKHN0cnVjdCBpbm9kZSAqb2xk
X2Rpciwgc3RydWN0IGRlbnRyeSAqb2xkX2RlbnRyeSwKIH0KIEVYUE9SVF9TWU1CT0wodmZz
X3JlbmFtZSk7CiAKLXN0YXRpYyBpbnQgZG9fcmVuYW1lYXQyKGludCBvbGRkZmQsIGNvbnN0
IGNoYXIgX191c2VyICpvbGRuYW1lLCBpbnQgbmV3ZGZkLAotCQkJY29uc3QgY2hhciBfX3Vz
ZXIgKm5ld25hbWUsIHVuc2lnbmVkIGludCBmbGFncykKK2ludCBkb19yZW5hbWVhdDIoaW50
IG9sZGRmZCwgc3RydWN0IGZpbGVuYW1lICpmcm9tLCBpbnQgbmV3ZGZkLAorCQkgc3RydWN0
IGZpbGVuYW1lICp0bywgdW5zaWduZWQgaW50IGZsYWdzKQogewogCXN0cnVjdCBkZW50cnkg
Km9sZF9kZW50cnksICpuZXdfZGVudHJ5OwogCXN0cnVjdCBkZW50cnkgKnRyYXA7CkBAIC00
MzYyLDMyICs0MzYyLDMwIEBAIHN0YXRpYyBpbnQgZG9fcmVuYW1lYXQyKGludCBvbGRkZmQs
IGNvbnN0IGNoYXIgX191c2VyICpvbGRuYW1lLCBpbnQgbmV3ZGZkLAogCXN0cnVjdCBxc3Ry
IG9sZF9sYXN0LCBuZXdfbGFzdDsKIAlpbnQgb2xkX3R5cGUsIG5ld190eXBlOwogCXN0cnVj
dCBpbm9kZSAqZGVsZWdhdGVkX2lub2RlID0gTlVMTDsKLQlzdHJ1Y3QgZmlsZW5hbWUgKmZy
b207Ci0Jc3RydWN0IGZpbGVuYW1lICp0bzsKIAl1bnNpZ25lZCBpbnQgbG9va3VwX2ZsYWdz
ID0gMCwgdGFyZ2V0X2ZsYWdzID0gTE9PS1VQX1JFTkFNRV9UQVJHRVQ7CiAJYm9vbCBzaG91
bGRfcmV0cnkgPSBmYWxzZTsKLQlpbnQgZXJyb3I7CisJaW50IGVycm9yID0gLUVJTlZBTDsK
IAogCWlmIChmbGFncyAmIH4oUkVOQU1FX05PUkVQTEFDRSB8IFJFTkFNRV9FWENIQU5HRSB8
IFJFTkFNRV9XSElURU9VVCkpCi0JCXJldHVybiAtRUlOVkFMOworCQlnb3RvIHB1dF9ib3Ro
OwogCiAJaWYgKChmbGFncyAmIChSRU5BTUVfTk9SRVBMQUNFIHwgUkVOQU1FX1dISVRFT1VU
KSkgJiYKIAkgICAgKGZsYWdzICYgUkVOQU1FX0VYQ0hBTkdFKSkKLQkJcmV0dXJuIC1FSU5W
QUw7CisJCWdvdG8gcHV0X2JvdGg7CiAKIAlpZiAoZmxhZ3MgJiBSRU5BTUVfRVhDSEFOR0Up
CiAJCXRhcmdldF9mbGFncyA9IDA7CiAKIHJldHJ5OgotCWZyb20gPSBmaWxlbmFtZV9wYXJl
bnRhdChvbGRkZmQsIGdldG5hbWUob2xkbmFtZSksIGxvb2t1cF9mbGFncywKLQkJCQkmb2xk
X3BhdGgsICZvbGRfbGFzdCwgJm9sZF90eXBlKTsKKwlmcm9tID0gZmlsZW5hbWVfcGFyZW50
YXQob2xkZGZkLCBmcm9tLCBsb29rdXBfZmxhZ3MsICZvbGRfcGF0aCwKKwkJCQkJJm9sZF9s
YXN0LCAmb2xkX3R5cGUpOwogCWlmIChJU19FUlIoZnJvbSkpIHsKIAkJZXJyb3IgPSBQVFJf
RVJSKGZyb20pOwotCQlnb3RvIGV4aXQ7CisJCWdvdG8gcHV0X25ldzsKIAl9CiAKLQl0byA9
IGZpbGVuYW1lX3BhcmVudGF0KG5ld2RmZCwgZ2V0bmFtZShuZXduYW1lKSwgbG9va3VwX2Zs
YWdzLAotCQkJCSZuZXdfcGF0aCwgJm5ld19sYXN0LCAmbmV3X3R5cGUpOworCXRvID0gZmls
ZW5hbWVfcGFyZW50YXQobmV3ZGZkLCB0bywgbG9va3VwX2ZsYWdzLCAmbmV3X3BhdGgsICZu
ZXdfbGFzdCwKKwkJCQkmbmV3X3R5cGUpOwogCWlmIChJU19FUlIodG8pKSB7CiAJCWVycm9y
ID0gUFRSX0VSUih0byk7CiAJCWdvdG8gZXhpdDE7CkBAIC00NDgwLDM0ICs0NDc4LDQwIEBA
IHN0YXRpYyBpbnQgZG9fcmVuYW1lYXQyKGludCBvbGRkZmQsIGNvbnN0IGNoYXIgX191c2Vy
ICpvbGRuYW1lLCBpbnQgbmV3ZGZkLAogCWlmIChyZXRyeV9lc3RhbGUoZXJyb3IsIGxvb2t1
cF9mbGFncykpCiAJCXNob3VsZF9yZXRyeSA9IHRydWU7CiAJcGF0aF9wdXQoJm5ld19wYXRo
KTsKLQlwdXRuYW1lKHRvKTsKIGV4aXQxOgogCXBhdGhfcHV0KCZvbGRfcGF0aCk7Ci0JcHV0
bmFtZShmcm9tKTsKIAlpZiAoc2hvdWxkX3JldHJ5KSB7CiAJCXNob3VsZF9yZXRyeSA9IGZh
bHNlOwogCQlsb29rdXBfZmxhZ3MgfD0gTE9PS1VQX1JFVkFMOwogCQlnb3RvIHJldHJ5Owog
CX0KLWV4aXQ6CitwdXRfYm90aDoKKwlpZiAoIUlTX0VSUihmcm9tKSkKKwkJcHV0bmFtZShm
cm9tKTsKK3B1dF9uZXc6CisJaWYgKCFJU19FUlIodG8pKQorCQlwdXRuYW1lKHRvKTsKIAly
ZXR1cm4gZXJyb3I7CiB9CiAKIFNZU0NBTExfREVGSU5FNShyZW5hbWVhdDIsIGludCwgb2xk
ZGZkLCBjb25zdCBjaGFyIF9fdXNlciAqLCBvbGRuYW1lLAogCQlpbnQsIG5ld2RmZCwgY29u
c3QgY2hhciBfX3VzZXIgKiwgbmV3bmFtZSwgdW5zaWduZWQgaW50LCBmbGFncykKIHsKLQly
ZXR1cm4gZG9fcmVuYW1lYXQyKG9sZGRmZCwgb2xkbmFtZSwgbmV3ZGZkLCBuZXduYW1lLCBm
bGFncyk7CisJcmV0dXJuIGRvX3JlbmFtZWF0MihvbGRkZmQsIGdldG5hbWUob2xkbmFtZSks
IG5ld2RmZCwgZ2V0bmFtZShuZXduYW1lKSwKKwkJCQlmbGFncyk7CiB9CiAKIFNZU0NBTExf
REVGSU5FNChyZW5hbWVhdCwgaW50LCBvbGRkZmQsIGNvbnN0IGNoYXIgX191c2VyICosIG9s
ZG5hbWUsCiAJCWludCwgbmV3ZGZkLCBjb25zdCBjaGFyIF9fdXNlciAqLCBuZXduYW1lKQog
ewotCXJldHVybiBkb19yZW5hbWVhdDIob2xkZGZkLCBvbGRuYW1lLCBuZXdkZmQsIG5ld25h
bWUsIDApOworCXJldHVybiBkb19yZW5hbWVhdDIob2xkZGZkLCBnZXRuYW1lKG9sZG5hbWUp
LCBuZXdkZmQsIGdldG5hbWUobmV3bmFtZSksCisJCQkJMCk7CiB9CiAKIFNZU0NBTExfREVG
SU5FMihyZW5hbWUsIGNvbnN0IGNoYXIgX191c2VyICosIG9sZG5hbWUsIGNvbnN0IGNoYXIg
X191c2VyICosIG5ld25hbWUpCiB7Ci0JcmV0dXJuIGRvX3JlbmFtZWF0MihBVF9GRENXRCwg
b2xkbmFtZSwgQVRfRkRDV0QsIG5ld25hbWUsIDApOworCXJldHVybiBkb19yZW5hbWVhdDIo
QVRfRkRDV0QsIGdldG5hbWUob2xkbmFtZSksIEFUX0ZEQ1dELAorCQkJCWdldG5hbWUobmV3
bmFtZSksIDApOwogfQogCiBpbnQgcmVhZGxpbmtfY29weShjaGFyIF9fdXNlciAqYnVmZmVy
LCBpbnQgYnVmbGVuLCBjb25zdCBjaGFyICpsaW5rKQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0011-signal-Add-task_sigpending-helper.patch"
Content-Disposition: attachment;
 filename="0011-signal-Add-task_sigpending-helper.patch"
Content-Transfer-Encoding: base64

RnJvbSBhNzBlMTMzN2NjZDM4MGNiYjhiNjQ3YzE2NDVkZWQ3ZjNiZjdhMTM2IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IE1vbiwgMjYgT2N0IDIwMjAgMTQ6MzI6MjcgLTA2MDAKU3ViamVjdDogW1BBVENIIDEx
LzYzXSBzaWduYWw6IEFkZCB0YXNrX3NpZ3BlbmRpbmcoKSBoZWxwZXIKClsgVXBzdHJlYW0g
Y29tbWl0IDVjMjUxZTlkYzBlMTI3YmFjNmZjNWI4ZTY2OTYzNjNkMmUzNWY1MTUgXQoKVGhp
cyBpcyBpbiBwcmVwYXJhdGlvbiBmb3IgbWFpbnRhaW5pbmcgc2lnbmFsX3BlbmRpbmcoKSBh
cyB0aGUgZGVjaWRlciBvZgp3aGV0aGVyIG9yIG5vdCBhIHNjaGVkdWxlKCkgbG9vcCBzaG91
bGQgYmUgYnJva2VuLCBvciBjb250aW51ZSBzbGVlcGluZy4KVGhpcyBpcyBkaWZmZXJlbnQg
dGhhbiB0aGUgY29yZSBzaWduYWwgdXNlIGNhc2VzLCB3aGljaCByZWFsbHkgbmVlZCB0byBr
bm93CndoZXRoZXIgYW4gYWN0dWFsIHNpZ25hbCBpcyBwZW5kaW5nIG9yIG5vdC4gdGFza19z
aWdwZW5kaW5nKCkgcmV0dXJucwpub24temVybyBpZiBUSUZfU0lHUEVORElORyBpcyBzZXQu
CgpPbmx5IGNvcmUga2VybmVsIHVzZSBjYXNlcyBzaG91bGQgY2FyZSBhYm91dCB0aGUgZGlz
dGluY3Rpb24gYmV0d2Vlbgp0aGUgdHdvLCBtYWtlIHN1cmUgdGhvc2UgdXNlIHRoZSB0YXNr
X3NpZ3BlbmRpbmcoKSBoZWxwZXIuCgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJv
ZUBrZXJuZWwuZGs+ClNpZ25lZC1vZmYtYnk6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51
dHJvbml4LmRlPgpSZXZpZXdlZC1ieTogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxpbnV0cm9u
aXguZGU+ClJldmlld2VkLWJ5OiBPbGVnIE5lc3Rlcm92IDxvbGVnQHJlZGhhdC5jb20+Ckxp
bms6IGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL3IvMjAyMDEwMjYyMDMyMzAuMzg2MzQ4LTIt
YXhib2VAa2VybmVsLmRrCi0tLQogaW5jbHVkZS9saW51eC9zY2hlZC9zaWduYWwuaCB8IDkg
KysrKysrKy0tCiBrZXJuZWwvZXZlbnRzL3Vwcm9iZXMuYyAgICAgIHwgMiArLQoga2VybmVs
L3NpZ25hbC5jICAgICAgICAgICAgICB8IDggKysrKy0tLS0KIDMgZmlsZXMgY2hhbmdlZCwg
MTIgaW5zZXJ0aW9ucygrKSwgNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L3NjaGVkL3NpZ25hbC5oIGIvaW5jbHVkZS9saW51eC9zY2hlZC9zaWduYWwuaApp
bmRleCA2NTc2NDAwMTViMzMuLjg2ZTNiMDkxYTUyNSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9s
aW51eC9zY2hlZC9zaWduYWwuaAorKysgYi9pbmNsdWRlL2xpbnV4L3NjaGVkL3NpZ25hbC5o
CkBAIC0zNTQsMTEgKzM1NCwxNiBAQCBzdGF0aWMgaW5saW5lIGludCByZXN0YXJ0X3N5c2Nh
bGwodm9pZCkKIAlyZXR1cm4gLUVSRVNUQVJUTk9JTlRSOwogfQogCi1zdGF0aWMgaW5saW5l
IGludCBzaWduYWxfcGVuZGluZyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnApCitzdGF0aWMgaW5s
aW5lIGludCB0YXNrX3NpZ3BlbmRpbmcoc3RydWN0IHRhc2tfc3RydWN0ICpwKQogewogCXJl
dHVybiB1bmxpa2VseSh0ZXN0X3Rza190aHJlYWRfZmxhZyhwLFRJRl9TSUdQRU5ESU5HKSk7
CiB9CiAKK3N0YXRpYyBpbmxpbmUgaW50IHNpZ25hbF9wZW5kaW5nKHN0cnVjdCB0YXNrX3N0
cnVjdCAqcCkKK3sKKwlyZXR1cm4gdGFza19zaWdwZW5kaW5nKHApOworfQorCiBzdGF0aWMg
aW5saW5lIGludCBfX2ZhdGFsX3NpZ25hbF9wZW5kaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAq
cCkKIHsKIAlyZXR1cm4gdW5saWtlbHkoc2lnaXNtZW1iZXIoJnAtPnBlbmRpbmcuc2lnbmFs
LCBTSUdLSUxMKSk7CkBAIC0zNjYsNyArMzcxLDcgQEAgc3RhdGljIGlubGluZSBpbnQgX19m
YXRhbF9zaWduYWxfcGVuZGluZyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnApCiAKIHN0YXRpYyBp
bmxpbmUgaW50IGZhdGFsX3NpZ25hbF9wZW5kaW5nKHN0cnVjdCB0YXNrX3N0cnVjdCAqcCkK
IHsKLQlyZXR1cm4gc2lnbmFsX3BlbmRpbmcocCkgJiYgX19mYXRhbF9zaWduYWxfcGVuZGlu
ZyhwKTsKKwlyZXR1cm4gdGFza19zaWdwZW5kaW5nKHApICYmIF9fZmF0YWxfc2lnbmFsX3Bl
bmRpbmcocCk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgaW50IHNpZ25hbF9wZW5kaW5nX3N0YXRl
KGxvbmcgc3RhdGUsIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCkKZGlmZiAtLWdpdCBhL2tlcm5l
bC9ldmVudHMvdXByb2Jlcy5jIGIva2VybmVsL2V2ZW50cy91cHJvYmVzLmMKaW5kZXggZTFi
YmIzYjkyOTIxLi44MjZhMjM1NWRhMWUgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9ldmVudHMvdXBy
b2Jlcy5jCisrKyBiL2tlcm5lbC9ldmVudHMvdXByb2Jlcy5jCkBAIC0xOTczLDcgKzE5NzMs
NyBAQCBib29sIHVwcm9iZV9kZW55X3NpZ25hbCh2b2lkKQogCiAJV0FSTl9PTl9PTkNFKHV0
YXNrLT5zdGF0ZSAhPSBVVEFTS19TU1RFUCk7CiAKLQlpZiAoc2lnbmFsX3BlbmRpbmcodCkp
IHsKKwlpZiAodGFza19zaWdwZW5kaW5nKHQpKSB7CiAJCXNwaW5fbG9ja19pcnEoJnQtPnNp
Z2hhbmQtPnNpZ2xvY2spOwogCQljbGVhcl90c2tfdGhyZWFkX2ZsYWcodCwgVElGX1NJR1BF
TkRJTkcpOwogCQlzcGluX3VubG9ja19pcnEoJnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwpkaWZm
IC0tZ2l0IGEva2VybmVsL3NpZ25hbC5jIGIva2VybmVsL3NpZ25hbC5jCmluZGV4IGQwNWY3
ODNkNWE1ZS4uOTJkYzhkYzYzMTM4IDEwMDY0NAotLS0gYS9rZXJuZWwvc2lnbmFsLmMKKysr
IGIva2VybmVsL3NpZ25hbC5jCkBAIC05ODQsNyArOTg0LDcgQEAgc3RhdGljIGlubGluZSBi
b29sIHdhbnRzX3NpZ25hbChpbnQgc2lnLCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnApCiAJaWYg
KHRhc2tfaXNfc3RvcHBlZF9vcl90cmFjZWQocCkpCiAJCXJldHVybiBmYWxzZTsKIAotCXJl
dHVybiB0YXNrX2N1cnIocCkgfHwgIXNpZ25hbF9wZW5kaW5nKHApOworCXJldHVybiB0YXNr
X2N1cnIocCkgfHwgIXRhc2tfc2lncGVuZGluZyhwKTsKIH0KIAogc3RhdGljIHZvaWQgY29t
cGxldGVfc2lnbmFsKGludCBzaWcsIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwgZW51bSBwaWRf
dHlwZSB0eXBlKQpAQCAtMjgxMyw3ICsyODEzLDcgQEAgc3RhdGljIHZvaWQgcmV0YXJnZXRf
c2hhcmVkX3BlbmRpbmcoc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssIHNpZ3NldF90ICp3aGlj
aCkKIAkJLyogUmVtb3ZlIHRoZSBzaWduYWxzIHRoaXMgdGhyZWFkIGNhbiBoYW5kbGUuICov
CiAJCXNpZ2FuZHNldHMoJnJldGFyZ2V0LCAmcmV0YXJnZXQsICZ0LT5ibG9ja2VkKTsKIAot
CQlpZiAoIXNpZ25hbF9wZW5kaW5nKHQpKQorCQlpZiAoIXRhc2tfc2lncGVuZGluZyh0KSkK
IAkJCXNpZ25hbF93YWtlX3VwKHQsIDApOwogCiAJCWlmIChzaWdpc2VtcHR5c2V0KCZyZXRh
cmdldCkpCkBAIC0yODQ3LDcgKzI4NDcsNyBAQCB2b2lkIGV4aXRfc2lnbmFscyhzdHJ1Y3Qg
dGFza19zdHJ1Y3QgKnRzaykKIAogCWNncm91cF90aHJlYWRncm91cF9jaGFuZ2VfZW5kKHRz
ayk7CiAKLQlpZiAoIXNpZ25hbF9wZW5kaW5nKHRzaykpCisJaWYgKCF0YXNrX3NpZ3BlbmRp
bmcodHNrKSkKIAkJZ290byBvdXQ7CiAKIAl1bmJsb2NrZWQgPSB0c2stPmJsb2NrZWQ7CkBA
IC0yODkxLDcgKzI4OTEsNyBAQCBsb25nIGRvX25vX3Jlc3RhcnRfc3lzY2FsbChzdHJ1Y3Qg
cmVzdGFydF9ibG9jayAqcGFyYW0pCiAKIHN0YXRpYyB2b2lkIF9fc2V0X3Rhc2tfYmxvY2tl
ZChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywgY29uc3Qgc2lnc2V0X3QgKm5ld3NldCkKIHsK
LQlpZiAoc2lnbmFsX3BlbmRpbmcodHNrKSAmJiAhdGhyZWFkX2dyb3VwX2VtcHR5KHRzaykp
IHsKKwlpZiAodGFza19zaWdwZW5kaW5nKHRzaykgJiYgIXRocmVhZF9ncm91cF9lbXB0eSh0
c2spKSB7CiAJCXNpZ3NldF90IG5ld2Jsb2NrZWQ7CiAJCS8qIEEgc2V0IG9mIG5vdyBibG9j
a2VkIGJ1dCBwcmV2aW91c2x5IHVuYmxvY2tlZCBzaWduYWxzLiAqLwogCQlzaWdhbmRuc2V0
cygmbmV3YmxvY2tlZCwgbmV3c2V0LCAmY3VycmVudC0+YmxvY2tlZCk7Ci0tIAoyLjM5LjAK
Cg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0010-net-add-accept-helper-not-installing-fd.patch"
Content-Disposition: attachment;
 filename="0010-net-add-accept-helper-not-installing-fd.patch"
Content-Transfer-Encoding: base64

RnJvbSBhYjk2ZTY4NjM0NzBkZDNmMTNmOWE4OTQ0NTViODAyY2RlOWJjZWZjIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBQYXZlbCBCZWd1bmtvdiA8YXNtbC5zaWxlbmNlQGdt
YWlsLmNvbT4KRGF0ZTogV2VkLCAyNSBBdWcgMjAyMSAxMjoyNTo0NCArMDEwMApTdWJqZWN0
OiBbUEFUQ0ggMTAvNjNdIG5ldDogYWRkIGFjY2VwdCBoZWxwZXIgbm90IGluc3RhbGxpbmcg
ZmQKClsgVXBzdHJlYW0gY29tbWl0IGQzMmY4OWRhN2ZhOGNjYzhiM2ZiOGY5MDlkNjFlNDJi
OWJjMzkzMjkgXQoKSW50cm9kdWNlIGFuZCByZXVzZSBhIGhlbHBlciB0aGF0IGFjdHMgc2lt
aWxhcmx5IHRvIF9fc3lzX2FjY2VwdDRfZmlsZSgpCmJ1dCByZXR1cm5zIHN0cnVjdCBmaWxl
IGluc3RlYWQgb2YgaW5zdGFsbGluZyBmaWxlIGRlc2NyaXB0b3IuIFdpbGwgYmUKdXNlZCBi
eSBpb191cmluZy4KClNpZ25lZC1vZmYtYnk6IFBhdmVsIEJlZ3Vua292IDxhc21sLnNpbGVu
Y2VAZ21haWwuY29tPgpBY2tlZC1ieTogSmFrdWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9y
Zz4KU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgpBY2tlZC1i
eTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgpMaW5rOiBodHRwczov
L2xvcmUua2VybmVsLm9yZy9yL2M1N2I5ZThlODE4ZDkzNjgzYTNkMjRmOGNhNTBjYTAzOGQx
ZGE4YzQuMTYyOTg4ODk5MS5naXQuYXNtbC5zaWxlbmNlQGdtYWlsLmNvbQpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9z
b2NrZXQuaCB8ICAzICsrCiBuZXQvc29ja2V0LmMgICAgICAgICAgIHwgNjcgKysrKysrKysr
KysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDM5
IGluc2VydGlvbnMoKyksIDMxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgvc29ja2V0LmggYi9pbmNsdWRlL2xpbnV4L3NvY2tldC5oCmluZGV4IDQyMjIyYTg0
MTY3Zi4uYzNiMzVkMThiY2QzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NvY2tldC5o
CisrKyBiL2luY2x1ZGUvbGludXgvc29ja2V0LmgKQEAgLTQyMSw2ICs0MjEsOSBAQCBleHRl
cm4gaW50IF9fc3lzX2FjY2VwdDRfZmlsZShzdHJ1Y3QgZmlsZSAqZmlsZSwgdW5zaWduZWQg
ZmlsZV9mbGFncywKIAkJCXN0cnVjdCBzb2NrYWRkciBfX3VzZXIgKnVwZWVyX3NvY2thZGRy
LAogCQkJIGludCBfX3VzZXIgKnVwZWVyX2FkZHJsZW4sIGludCBmbGFncywKIAkJCSB1bnNp
Z25lZCBsb25nIG5vZmlsZSk7CitleHRlcm4gc3RydWN0IGZpbGUgKmRvX2FjY2VwdChzdHJ1
Y3QgZmlsZSAqZmlsZSwgdW5zaWduZWQgZmlsZV9mbGFncywKKwkJCSAgICAgIHN0cnVjdCBz
b2NrYWRkciBfX3VzZXIgKnVwZWVyX3NvY2thZGRyLAorCQkJICAgICAgaW50IF9fdXNlciAq
dXBlZXJfYWRkcmxlbiwgaW50IGZsYWdzKTsKIGV4dGVybiBpbnQgX19zeXNfYWNjZXB0NChp
bnQgZmQsIHN0cnVjdCBzb2NrYWRkciBfX3VzZXIgKnVwZWVyX3NvY2thZGRyLAogCQkJIGlu
dCBfX3VzZXIgKnVwZWVyX2FkZHJsZW4sIGludCBmbGFncyk7CiBleHRlcm4gaW50IF9fc3lz
X3NvY2tldChpbnQgZmFtaWx5LCBpbnQgdHlwZSwgaW50IHByb3RvY29sKTsKZGlmZiAtLWdp
dCBhL25ldC9zb2NrZXQuYyBiL25ldC9zb2NrZXQuYwppbmRleCBjMTFiNTIzOWVmMDUuLjU2
YzIxOGRjODBjZSAxMDA2NDQKLS0tIGEvbmV0L3NvY2tldC5jCisrKyBiL25ldC9zb2NrZXQu
YwpAQCAtMTY4OCwzMCArMTY4OCwyMiBAQCBTWVNDQUxMX0RFRklORTIobGlzdGVuLCBpbnQs
IGZkLCBpbnQsIGJhY2tsb2cpCiAJcmV0dXJuIF9fc3lzX2xpc3RlbihmZCwgYmFja2xvZyk7
CiB9CiAKLWludCBfX3N5c19hY2NlcHQ0X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHVuc2ln
bmVkIGZpbGVfZmxhZ3MsCitzdHJ1Y3QgZmlsZSAqZG9fYWNjZXB0KHN0cnVjdCBmaWxlICpm
aWxlLCB1bnNpZ25lZCBmaWxlX2ZsYWdzLAogCQkgICAgICAgc3RydWN0IHNvY2thZGRyIF9f
dXNlciAqdXBlZXJfc29ja2FkZHIsCi0JCSAgICAgICBpbnQgX191c2VyICp1cGVlcl9hZGRy
bGVuLCBpbnQgZmxhZ3MsCi0JCSAgICAgICB1bnNpZ25lZCBsb25nIG5vZmlsZSkKKwkJICAg
ICAgIGludCBfX3VzZXIgKnVwZWVyX2FkZHJsZW4sIGludCBmbGFncykKIHsKIAlzdHJ1Y3Qg
c29ja2V0ICpzb2NrLCAqbmV3c29jazsKIAlzdHJ1Y3QgZmlsZSAqbmV3ZmlsZTsKLQlpbnQg
ZXJyLCBsZW4sIG5ld2ZkOworCWludCBlcnIsIGxlbjsKIAlzdHJ1Y3Qgc29ja2FkZHJfc3Rv
cmFnZSBhZGRyZXNzOwogCi0JaWYgKGZsYWdzICYgfihTT0NLX0NMT0VYRUMgfCBTT0NLX05P
TkJMT0NLKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoU09DS19OT05CTE9DSyAhPSBP
X05PTkJMT0NLICYmIChmbGFncyAmIFNPQ0tfTk9OQkxPQ0spKQotCQlmbGFncyA9IChmbGFn
cyAmIH5TT0NLX05PTkJMT0NLKSB8IE9fTk9OQkxPQ0s7Ci0KIAlzb2NrID0gc29ja19mcm9t
X2ZpbGUoZmlsZSwgJmVycik7CiAJaWYgKCFzb2NrKQotCQlnb3RvIG91dDsKKwkJcmV0dXJu
IEVSUl9QVFIoZXJyKTsKIAotCWVyciA9IC1FTkZJTEU7CiAJbmV3c29jayA9IHNvY2tfYWxs
b2MoKTsKIAlpZiAoIW5ld3NvY2spCi0JCWdvdG8gb3V0OworCQlyZXR1cm4gRVJSX1BUUigt
RU5GSUxFKTsKIAogCW5ld3NvY2stPnR5cGUgPSBzb2NrLT50eXBlOwogCW5ld3NvY2stPm9w
cyA9IHNvY2stPm9wczsKQEAgLTE3MjIsMTggKzE3MTQsOSBAQCBpbnQgX19zeXNfYWNjZXB0
NF9maWxlKHN0cnVjdCBmaWxlICpmaWxlLCB1bnNpZ25lZCBmaWxlX2ZsYWdzLAogCSAqLwog
CV9fbW9kdWxlX2dldChuZXdzb2NrLT5vcHMtPm93bmVyKTsKIAotCW5ld2ZkID0gX19nZXRf
dW51c2VkX2ZkX2ZsYWdzKGZsYWdzLCBub2ZpbGUpOwotCWlmICh1bmxpa2VseShuZXdmZCA8
IDApKSB7Ci0JCWVyciA9IG5ld2ZkOwotCQlzb2NrX3JlbGVhc2UobmV3c29jayk7Ci0JCWdv
dG8gb3V0OwotCX0KIAluZXdmaWxlID0gc29ja19hbGxvY19maWxlKG5ld3NvY2ssIGZsYWdz
LCBzb2NrLT5zay0+c2tfcHJvdF9jcmVhdG9yLT5uYW1lKTsKLQlpZiAoSVNfRVJSKG5ld2Zp
bGUpKSB7Ci0JCWVyciA9IFBUUl9FUlIobmV3ZmlsZSk7Ci0JCXB1dF91bnVzZWRfZmQobmV3
ZmQpOwotCQlnb3RvIG91dDsKLQl9CisJaWYgKElTX0VSUihuZXdmaWxlKSkKKwkJcmV0dXJu
IG5ld2ZpbGU7CiAKIAllcnIgPSBzZWN1cml0eV9zb2NrZXRfYWNjZXB0KHNvY2ssIG5ld3Nv
Y2spOwogCWlmIChlcnIpCkBAIC0xNzU4LDE2ICsxNzQxLDM4IEBAIGludCBfX3N5c19hY2Nl
cHQ0X2ZpbGUoc3RydWN0IGZpbGUgKmZpbGUsIHVuc2lnbmVkIGZpbGVfZmxhZ3MsCiAJfQog
CiAJLyogRmlsZSBmbGFncyBhcmUgbm90IGluaGVyaXRlZCB2aWEgYWNjZXB0KCkgdW5saWtl
IGFub3RoZXIgT1Nlcy4gKi8KLQotCWZkX2luc3RhbGwobmV3ZmQsIG5ld2ZpbGUpOwotCWVy
ciA9IG5ld2ZkOwotb3V0OgotCXJldHVybiBlcnI7CisJcmV0dXJuIG5ld2ZpbGU7CiBvdXRf
ZmQ6CiAJZnB1dChuZXdmaWxlKTsKLQlwdXRfdW51c2VkX2ZkKG5ld2ZkKTsKLQlnb3RvIG91
dDsKKwlyZXR1cm4gRVJSX1BUUihlcnIpOworfQogCitpbnQgX19zeXNfYWNjZXB0NF9maWxl
KHN0cnVjdCBmaWxlICpmaWxlLCB1bnNpZ25lZCBmaWxlX2ZsYWdzLAorCQkgICAgICAgc3Ry
dWN0IHNvY2thZGRyIF9fdXNlciAqdXBlZXJfc29ja2FkZHIsCisJCSAgICAgICBpbnQgX191
c2VyICp1cGVlcl9hZGRybGVuLCBpbnQgZmxhZ3MsCisJCSAgICAgICB1bnNpZ25lZCBsb25n
IG5vZmlsZSkKK3sKKwlzdHJ1Y3QgZmlsZSAqbmV3ZmlsZTsKKwlpbnQgbmV3ZmQ7CisKKwlp
ZiAoZmxhZ3MgJiB+KFNPQ0tfQ0xPRVhFQyB8IFNPQ0tfTk9OQkxPQ0spKQorCQlyZXR1cm4g
LUVJTlZBTDsKKworCWlmIChTT0NLX05PTkJMT0NLICE9IE9fTk9OQkxPQ0sgJiYgKGZsYWdz
ICYgU09DS19OT05CTE9DSykpCisJCWZsYWdzID0gKGZsYWdzICYgflNPQ0tfTk9OQkxPQ0sp
IHwgT19OT05CTE9DSzsKKworCW5ld2ZkID0gX19nZXRfdW51c2VkX2ZkX2ZsYWdzKGZsYWdz
LCBub2ZpbGUpOworCWlmICh1bmxpa2VseShuZXdmZCA8IDApKQorCQlyZXR1cm4gbmV3ZmQ7
CisKKwluZXdmaWxlID0gZG9fYWNjZXB0KGZpbGUsIGZpbGVfZmxhZ3MsIHVwZWVyX3NvY2th
ZGRyLCB1cGVlcl9hZGRybGVuLAorCQkJICAgIGZsYWdzKTsKKwlpZiAoSVNfRVJSKG5ld2Zp
bGUpKSB7CisJCXB1dF91bnVzZWRfZmQobmV3ZmQpOworCQlyZXR1cm4gUFRSX0VSUihuZXdm
aWxlKTsKKwl9CisJZmRfaW5zdGFsbChuZXdmZCwgbmV3ZmlsZSk7CisJcmV0dXJuIG5ld2Zk
OwogfQogCiAvKgotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0009-net-provide-__sys_shutdown_sock-that-takes-a-socket.patch"
Content-Disposition: attachment;
 filename*0="0009-net-provide-__sys_shutdown_sock-that-takes-a-socket.pat";
 filename*1="ch"
Content-Transfer-Encoding: base64

RnJvbSBiN2E2NmFkMjZiYzRkN2JhMzI4NTM0NWEzYmZlZjg4MjE0MTY0ZGYzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFNhdCwgNSBTZXAgMjAyMCAxMToxMzozNSAtMDYwMApTdWJqZWN0OiBbUEFUQ0ggMDkv
NjNdIG5ldDogcHJvdmlkZSBfX3N5c19zaHV0ZG93bl9zb2NrKCkgdGhhdCB0YWtlcyBhIHNv
Y2tldAoKWyBVcHN0cmVhbSBjb21taXQgYjcxM2MxOTVkNTkzMzIyNzdhMzFhNTljOTFmNzU1
ZTUzYjViMzAyYiBdCgpObyBmdW5jdGlvbmFsIGNoYW5nZXMgaW4gdGhpcyBwYXRjaCwgbmVl
ZGVkIHRvIHByb3ZpZGUgaW9fdXJpbmcgc3VwcG9ydApmb3Igc2h1dGRvd24oMikuCgpDYzog
bmV0ZGV2QHZnZXIua2VybmVsLm9yZwpDYzogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZl
bWxvZnQubmV0PgpBY2tlZC1ieTogSmFrdWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4K
U2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGluY2x1
ZGUvbGludXgvc29ja2V0LmggfCAgMSArCiBuZXQvc29ja2V0LmMgICAgICAgICAgIHwgMTUg
KysrKysrKysrKysrLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDEzIGluc2VydGlvbnMoKyksIDMg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9zb2NrZXQuaCBiL2lu
Y2x1ZGUvbGludXgvc29ja2V0LmgKaW5kZXggOWFhNTMwZDQ5N2RhLi40MjIyMmE4NDE2N2Yg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvc29ja2V0LmgKKysrIGIvaW5jbHVkZS9saW51
eC9zb2NrZXQuaApAQCAtNDM2LDUgKzQzNiw2IEBAIGV4dGVybiBpbnQgX19zeXNfZ2V0cGVl
cm5hbWUoaW50IGZkLCBzdHJ1Y3Qgc29ja2FkZHIgX191c2VyICp1c29ja2FkZHIsCiAJCQkg
ICAgIGludCBfX3VzZXIgKnVzb2NrYWRkcl9sZW4pOwogZXh0ZXJuIGludCBfX3N5c19zb2Nr
ZXRwYWlyKGludCBmYW1pbHksIGludCB0eXBlLCBpbnQgcHJvdG9jb2wsCiAJCQkgICAgaW50
IF9fdXNlciAqdXNvY2t2ZWMpOworZXh0ZXJuIGludCBfX3N5c19zaHV0ZG93bl9zb2NrKHN0
cnVjdCBzb2NrZXQgKnNvY2ssIGludCBob3cpOwogZXh0ZXJuIGludCBfX3N5c19zaHV0ZG93
bihpbnQgZmQsIGludCBob3cpOwogI2VuZGlmIC8qIF9MSU5VWF9TT0NLRVRfSCAqLwpkaWZm
IC0tZ2l0IGEvbmV0L3NvY2tldC5jIGIvbmV0L3NvY2tldC5jCmluZGV4IGJjZjY4YjE1MGZl
Mi4uYzExYjUyMzllZjA1IDEwMDY0NAotLS0gYS9uZXQvc29ja2V0LmMKKysrIGIvbmV0L3Nv
Y2tldC5jCkBAIC0yMTgxLDYgKzIxODEsMTcgQEAgU1lTQ0FMTF9ERUZJTkU1KGdldHNvY2tv
cHQsIGludCwgZmQsIGludCwgbGV2ZWwsIGludCwgb3B0bmFtZSwKICAqCVNodXRkb3duIGEg
c29ja2V0LgogICovCiAKK2ludCBfX3N5c19zaHV0ZG93bl9zb2NrKHN0cnVjdCBzb2NrZXQg
KnNvY2ssIGludCBob3cpCit7CisJaW50IGVycjsKKworCWVyciA9IHNlY3VyaXR5X3NvY2tl
dF9zaHV0ZG93bihzb2NrLCBob3cpOworCWlmICghZXJyKQorCQllcnIgPSBzb2NrLT5vcHMt
PnNodXRkb3duKHNvY2ssIGhvdyk7CisKKwlyZXR1cm4gZXJyOworfQorCiBpbnQgX19zeXNf
c2h1dGRvd24oaW50IGZkLCBpbnQgaG93KQogewogCWludCBlcnIsIGZwdXRfbmVlZGVkOwpA
QCAtMjE4OCw5ICsyMTk5LDcgQEAgaW50IF9fc3lzX3NodXRkb3duKGludCBmZCwgaW50IGhv
dykKIAogCXNvY2sgPSBzb2NrZmRfbG9va3VwX2xpZ2h0KGZkLCAmZXJyLCAmZnB1dF9uZWVk
ZWQpOwogCWlmIChzb2NrICE9IE5VTEwpIHsKLQkJZXJyID0gc2VjdXJpdHlfc29ja2V0X3No
dXRkb3duKHNvY2ssIGhvdyk7Ci0JCWlmICghZXJyKQotCQkJZXJyID0gc29jay0+b3BzLT5z
aHV0ZG93bihzb2NrLCBob3cpOworCQllcnIgPSBfX3N5c19zaHV0ZG93bl9zb2NrKHNvY2ss
IGhvdyk7CiAJCWZwdXRfbGlnaHQoc29jay0+ZmlsZSwgZnB1dF9uZWVkZWQpOwogCX0KIAly
ZXR1cm4gZXJyOwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0008-tools-headers-UAPI-Sync-openat2.h-with-the-kernel-so.patch"
Content-Disposition: attachment;
 filename*0="0008-tools-headers-UAPI-Sync-openat2.h-with-the-kernel-so.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA4ZTljMmNlMTA2MGYxNGNkYTMwODA4MzIyZDlhOGRjYmQ3YTNmZDc3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBcm5hbGRvIENhcnZhbGhvIGRlIE1lbG8gPGFjbWVA
cmVkaGF0LmNvbT4KRGF0ZTogVHVlLCAyMyBGZWIgMjAyMSAwOTo0NDozNyAtMDMwMApTdWJq
ZWN0OiBbUEFUQ0ggMDgvNjNdIHRvb2xzIGhlYWRlcnMgVUFQSTogU3luYyBvcGVuYXQyLmgg
d2l0aCB0aGUga2VybmVsCiBzb3VyY2VzCgpbIFVwc3RyZWFtIGNvbW1pdCAxZTYxNDYzY2Zj
ZDBiM2U3YTE5YmEzNmI4YTk4YzY0ZWJhYWM1YzZlIF0KClRvIHBpY2sgdGhlIGNoYW5nZXMg
aW46CgogIDk5NjY4ZjYxODA2MjgxNmMgKCJmczogZXhwb3NlIExPT0tVUF9DQUNIRUQgdGhy
b3VnaCBvcGVuYXQyKCkgUkVTT0xWRV9DQUNIRUQiKQoKVGhhdCBkb24ndCByZXN1bHQgaW4g
YW55IGNoYW5nZSBpbiB0b29saW5nLCBvbmx5IHNpbGVuY2VzIHRoaXMgcGVyZgpidWlsZCB3
YXJuaW5nOgoKICBXYXJuaW5nOiBLZXJuZWwgQUJJIGhlYWRlciBhdCAndG9vbHMvaW5jbHVk
ZS91YXBpL2xpbnV4L29wZW5hdDIuaCcgZGlmZmVycyBmcm9tIGxhdGVzdCB2ZXJzaW9uIGF0
ICdpbmNsdWRlL3VhcGkvbGludXgvb3BlbmF0Mi5oJwogIGRpZmYgLXUgdG9vbHMvaW5jbHVk
ZS91YXBpL2xpbnV4L29wZW5hdDIuaCBpbmNsdWRlL3VhcGkvbGludXgvb3BlbmF0Mi5oCgpD
YzogQWwgVmlybyA8dmlyb0B6ZW5pdi5saW51eC5vcmcudWs+CkNjOiBKZW5zIEF4Ym9lIDxh
eGJvZUBrZXJuZWwuZGs+ClNpZ25lZC1vZmYtYnk6IEFybmFsZG8gQ2FydmFsaG8gZGUgTWVs
byA8YWNtZUByZWRoYXQuY29tPgotLS0KIHRvb2xzL2luY2x1ZGUvdWFwaS9saW51eC9vcGVu
YXQyLmggfCA0ICsrKysKIDEgZmlsZSBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKykKCmRpZmYg
LS1naXQgYS90b29scy9pbmNsdWRlL3VhcGkvbGludXgvb3BlbmF0Mi5oIGIvdG9vbHMvaW5j
bHVkZS91YXBpL2xpbnV4L29wZW5hdDIuaAppbmRleCA1OGIxZWI3MTEzNjAuLmE1ZmViNzYw
NDk0OCAxMDA2NDQKLS0tIGEvdG9vbHMvaW5jbHVkZS91YXBpL2xpbnV4L29wZW5hdDIuaAor
KysgYi90b29scy9pbmNsdWRlL3VhcGkvbGludXgvb3BlbmF0Mi5oCkBAIC0zNSw1ICszNSw5
IEBAIHN0cnVjdCBvcGVuX2hvdyB7CiAjZGVmaW5lIFJFU09MVkVfSU5fUk9PVAkJMHgxMCAv
KiBNYWtlIGFsbCBqdW1wcyB0byAiLyIgYW5kICIuLiIKIAkJCQkJYmUgc2NvcGVkIGluc2lk
ZSB0aGUgZGlyZmQKIAkJCQkJKHNpbWlsYXIgdG8gY2hyb290KDIpKS4gKi8KKyNkZWZpbmUg
UkVTT0xWRV9DQUNIRUQJCTB4MjAgLyogT25seSBjb21wbGV0ZSBpZiByZXNvbHV0aW9uIGNh
biBiZQorCQkJCQljb21wbGV0ZWQgdGhyb3VnaCBjYWNoZWQgbG9va3VwLiBNYXkKKwkJCQkJ
cmV0dXJuIC1FQUdBSU4gaWYgdGhhdCdzIG5vdAorCQkJCQlwb3NzaWJsZS4gKi8KIAogI2Vu
ZGlmIC8qIF9VQVBJX0xJTlVYX09QRU5BVDJfSCAqLwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0007-fs-expose-LOOKUP_CACHED-through-openat2-RESOLVE_CACH.patch"
Content-Disposition: attachment;
 filename*0="0007-fs-expose-LOOKUP_CACHED-through-openat2-RESOLVE_CACH.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBjYjkyOTRlMDA3ZmVhY2NhMWE1ODQ5NzczNDYwZGRlNzFlNTBjZGRlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMTcgRGVjIDIwMjAgMDk6MTk6MTAgLTA3MDAKU3ViamVjdDogW1BBVENIIDA3
LzYzXSBmczogZXhwb3NlIExPT0tVUF9DQUNIRUQgdGhyb3VnaCBvcGVuYXQyKCkKIFJFU09M
VkVfQ0FDSEVECgpbIFVwc3RyZWFtIGNvbW1pdCA5OTY2OGY2MTgwNjI4MTZjYTdiYTYzOWIw
MDdlYjE0NWI5ZDNkNDFlIF0KCk5vdyB0aGF0IHdlIHN1cHBvcnQgbm9uLWJsb2NraW5nIHBh
dGggcmVzb2x1dGlvbiBpbnRlcm5hbGx5LCBleHBvc2UgaXQKdmlhIG9wZW5hdDIoKSBpbiB0
aGUgc3RydWN0IG9wZW5faG93IC0+cmVzb2x2ZSBmbGFncy4gVGhpcyBhbGxvd3MKYXBwbGlj
YXRpb25zIHVzaW5nIG9wZW5hdDIoKSB0byBsaW1pdCBwYXRoIHJlc29sdXRpb24gdG8gdGhl
IGV4dGVudCB0aGF0Cml0IGlzIGFscmVhZHkgY2FjaGVkLgoKSWYgdGhlIGxvb2t1cCBjYW5u
b3QgYmUgc2F0aXNmaWVkIGluIGEgbm9uLWJsb2NraW5nIG1hbm5lciwgb3BlbmF0MigyKQp3
aWxsIHJldHVybiAtMS8tRUFHQUlOLgoKQ2M6IEFsIFZpcm8gPHZpcm9AemVuaXYubGludXgu
b3JnLnVrPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+ClNp
Z25lZC1vZmYtYnk6IEFsIFZpcm8gPHZpcm9AemVuaXYubGludXgub3JnLnVrPgotLS0KIGZz
L29wZW4uYyAgICAgICAgICAgICAgICAgICAgfCA2ICsrKysrKwogaW5jbHVkZS9saW51eC9m
Y250bC5oICAgICAgICB8IDIgKy0KIGluY2x1ZGUvdWFwaS9saW51eC9vcGVuYXQyLmggfCA0
ICsrKysKIDMgZmlsZXMgY2hhbmdlZCwgMTEgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigt
KQoKZGlmZiAtLWdpdCBhL2ZzL29wZW4uYyBiL2ZzL29wZW4uYwppbmRleCAzYWFhYWQ0N2Q5
Y2EuLmIzZmJiNDMwMGZjOSAxMDA2NDQKLS0tIGEvZnMvb3Blbi5jCisrKyBiL2ZzL29wZW4u
YwpAQCAtMTA5OSw2ICsxMDk5LDEyIEBAIGlubGluZSBpbnQgYnVpbGRfb3Blbl9mbGFncyhj
b25zdCBzdHJ1Y3Qgb3Blbl9ob3cgKmhvdywgc3RydWN0IG9wZW5fZmxhZ3MgKm9wKQogCQls
b29rdXBfZmxhZ3MgfD0gTE9PS1VQX0JFTkVBVEg7CiAJaWYgKGhvdy0+cmVzb2x2ZSAmIFJF
U09MVkVfSU5fUk9PVCkKIAkJbG9va3VwX2ZsYWdzIHw9IExPT0tVUF9JTl9ST09UOworCWlm
IChob3ctPnJlc29sdmUgJiBSRVNPTFZFX0NBQ0hFRCkgeworCQkvKiBEb24ndCBib3RoZXIg
ZXZlbiB0cnlpbmcgZm9yIGNyZWF0ZS90cnVuY2F0ZS90bXBmaWxlIG9wZW4gKi8KKwkJaWYg
KGZsYWdzICYgKE9fVFJVTkMgfCBPX0NSRUFUIHwgT19UTVBGSUxFKSkKKwkJCXJldHVybiAt
RUFHQUlOOworCQlsb29rdXBfZmxhZ3MgfD0gTE9PS1VQX0NBQ0hFRDsKKwl9CiAKIAlvcC0+
bG9va3VwX2ZsYWdzID0gbG9va3VwX2ZsYWdzOwogCXJldHVybiAwOwpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9mY250bC5oIGIvaW5jbHVkZS9saW51eC9mY250bC5oCmluZGV4IDky
MWU3NTA4NDNlNi4uNzY2ZmNkOTczYmViIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2Zj
bnRsLmgKKysrIGIvaW5jbHVkZS9saW51eC9mY250bC5oCkBAIC0xOSw3ICsxOSw3IEBACiAv
KiBMaXN0IG9mIGFsbCB2YWxpZCBmbGFncyBmb3IgdGhlIGhvdy0+cmVzb2x2ZSBhcmd1bWVu
dDogKi8KICNkZWZpbmUgVkFMSURfUkVTT0xWRV9GTEFHUyBcCiAJKFJFU09MVkVfTk9fWERF
ViB8IFJFU09MVkVfTk9fTUFHSUNMSU5LUyB8IFJFU09MVkVfTk9fU1lNTElOS1MgfCBcCi0J
IFJFU09MVkVfQkVORUFUSCB8IFJFU09MVkVfSU5fUk9PVCkKKwkgUkVTT0xWRV9CRU5FQVRI
IHwgUkVTT0xWRV9JTl9ST09UIHwgUkVTT0xWRV9DQUNIRUQpCiAKIC8qIExpc3Qgb2YgYWxs
IG9wZW5faG93ICJ2ZXJzaW9ucyIuICovCiAjZGVmaW5lIE9QRU5fSE9XX1NJWkVfVkVSMAky
NCAvKiBzaXplb2YgZmlyc3QgcHVibGlzaGVkIHN0cnVjdCAqLwpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS91YXBpL2xpbnV4L29wZW5hdDIuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9vcGVuYXQy
LmgKaW5kZXggNThiMWViNzExMzYwLi5hNWZlYjc2MDQ5NDggMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvdWFwaS9saW51eC9vcGVuYXQyLmgKKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L29wZW5h
dDIuaApAQCAtMzUsNSArMzUsOSBAQCBzdHJ1Y3Qgb3Blbl9ob3cgewogI2RlZmluZSBSRVNP
TFZFX0lOX1JPT1QJCTB4MTAgLyogTWFrZSBhbGwganVtcHMgdG8gIi8iIGFuZCAiLi4iCiAJ
CQkJCWJlIHNjb3BlZCBpbnNpZGUgdGhlIGRpcmZkCiAJCQkJCShzaW1pbGFyIHRvIGNocm9v
dCgyKSkuICovCisjZGVmaW5lIFJFU09MVkVfQ0FDSEVECQkweDIwIC8qIE9ubHkgY29tcGxl
dGUgaWYgcmVzb2x1dGlvbiBjYW4gYmUKKwkJCQkJY29tcGxldGVkIHRocm91Z2ggY2FjaGVk
IGxvb2t1cC4gTWF5CisJCQkJCXJldHVybiAtRUFHQUlOIGlmIHRoYXQncyBub3QKKwkJCQkJ
cG9zc2libGUuICovCiAKICNlbmRpZiAvKiBfVUFQSV9MSU5VWF9PUEVOQVQyX0ggKi8KLS0g
CjIuMzkuMAoK
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0006-Make-sure-nd-path.mnt-and-nd-path.dentry-are-always-.patch"
Content-Disposition: attachment;
 filename*0="0006-Make-sure-nd-path.mnt-and-nd-path.dentry-are-always-.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA1OTdlZDc2MzNiZGU4YWJjMjRjMGNlYTVmYmJmZDgyNDIwMGQzMjUxIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KRGF0ZTogVHVlLCA2IEFwciAyMDIxIDEyOjMzOjA3IC0wNDAwClN1YmplY3Q6IFtQQVRD
SCAwNi82M10gTWFrZSBzdXJlIG5kLT5wYXRoLm1udCBhbmQgbmQtPnBhdGguZGVudHJ5IGFy
ZSBhbHdheXMKIHZhbGlkIHBvaW50ZXJzCgpbIFVwc3RyZWFtIGNvbW1pdCA3ZDAxZWY3NTg1
YzA3YWZhZjQ4Nzc1OWE0ODQ4NjIyOGNkMDY1NzI2IF0KCkluaXRpYWxpemUgdGhlbSBpbiBz
ZXRfbmFtZWlkYXRhKCkgYW5kIG1ha2Ugc3VyZSB0aGF0IHRlcm1pbmF0ZV93YWxrKCkgY2xl
YXJzIHRoZW0Kb25jZSB0aGUgcG9pbnRlcnMgYmVjb21lIHBvdGVudGlhbGx5IGludmFsaWQg
KGkuZS4gd2UgbGVhdmUgUkNVIG1vZGUgb3IgZHJvcCB0aGVtCmluIG5vbi1SQ1Ugb25lKS4g
IEN1cnJlbnRseSB3ZSBoYXZlICJwYXRoX2luaXQoKSBhbHdheXMgaW5pdGlhbGl6ZXMgdGhl
bSBhbmQgbm9ib2R5CmFjY2Vzc2VzIHRoZW0gb3V0c2lkZSBvZiBwYXRoX2luaXQoKS90ZXJt
aW5hdGVfd2FsaygpIHNlZ21lbnRzIiwgd2hpY2ggaXMgYXNraW5nCmZvciB0cm91YmxlLgoK
V2l0aCB0aGF0IGNoYW5nZSB3ZSB3b3VsZCBoYXZlIG5kLT5wYXRoLnttbnQsZGVudHJ5fQoJ
MSkgYWx3YXlzIHZhbGlkIC0gTlVMTCBvciBwb2ludGluZyB0byBjdXJyZW50bHkgYWxsb2Nh
dGVkIG9iamVjdHMuCgkyKSBub24tTlVMTCB3aGlsZSB3ZSBhcmUgc3VjY2Vzc2Z1bGx5IHdh
bGtpbmcKCTMpIE5VTEwgd2hlbiB3ZSBhcmUgbm90IHdhbGtpbmcgYXQgYWxsCgk0KSBjb250
cmlidXRpbmcgdG8gcmVmY291bnRzIHdoZW5ldmVyIG5vbi1OVUxMIG91dHNpZGUgb2YgUkNV
IG1vZGUuCgpGaXhlczogNmM2ZWMyYjBhM2UwICgiZnM6IGFkZCBzdXBwb3J0IGZvciBMT09L
VVBfQ0FDSEVEIikKUmVwb3J0ZWQtYnk6IHN5emJvdCtjODhhNzAzMGRhNDc5NDVhM2NjM0Bz
eXprYWxsZXIuYXBwc3BvdG1haWwuY29tClRlc3RlZC1ieTogQ2hyaXN0aWFuIEJyYXVuZXIg
PGNocmlzdGlhbi5icmF1bmVyQHVidW50dS5jb20+ClNpZ25lZC1vZmYtYnk6IEFsIFZpcm8g
PHZpcm9AemVuaXYubGludXgub3JnLnVrPgotLS0KIGZzL25hbWVpLmMgfCA2ICsrKystLQog
MSBmaWxlIGNoYW5nZWQsIDQgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9mcy9uYW1laS5jIGIvZnMvbmFtZWkuYwppbmRleCBlYzYxMjFmYjIxZDguLmZj
N2Q1NjIxMTVhZSAxMDA2NDQKLS0tIGEvZnMvbmFtZWkuYworKysgYi9mcy9uYW1laS5jCkBA
IC01MjksNiArNTI5LDggQEAgc3RhdGljIHZvaWQgc2V0X25hbWVpZGF0YShzdHJ1Y3QgbmFt
ZWlkYXRhICpwLCBpbnQgZGZkLCBzdHJ1Y3QgZmlsZW5hbWUgKm5hbWUpCiAJcC0+c3RhY2sg
PSBwLT5pbnRlcm5hbDsKIAlwLT5kZmQgPSBkZmQ7CiAJcC0+bmFtZSA9IG5hbWU7CisJcC0+
cGF0aC5tbnQgPSBOVUxMOworCXAtPnBhdGguZGVudHJ5ID0gTlVMTDsKIAlwLT50b3RhbF9s
aW5rX2NvdW50ID0gb2xkID8gb2xkLT50b3RhbF9saW5rX2NvdW50IDogMDsKIAlwLT5zYXZl
ZCA9IG9sZDsKIAljdXJyZW50LT5uYW1laWRhdGEgPSBwOwpAQCAtNjAyLDYgKzYwNCw4IEBA
IHN0YXRpYyB2b2lkIHRlcm1pbmF0ZV93YWxrKHN0cnVjdCBuYW1laWRhdGEgKm5kKQogCQly
Y3VfcmVhZF91bmxvY2soKTsKIAl9CiAJbmQtPmRlcHRoID0gMDsKKwluZC0+cGF0aC5tbnQg
PSBOVUxMOworCW5kLT5wYXRoLmRlbnRyeSA9IE5VTEw7CiB9CiAKIC8qIHBhdGhfcHV0IGlz
IG5lZWRlZCBhZnRlcndhcmRzIHJlZ2FyZGxlc3Mgb2Ygc3VjY2VzcyBvciBmYWlsdXJlICov
CkBAIC0yMjQzLDggKzIyNDcsNiBAQCBzdGF0aWMgY29uc3QgY2hhciAqcGF0aF9pbml0KHN0
cnVjdCBuYW1laWRhdGEgKm5kLCB1bnNpZ25lZCBmbGFncykKIAl9CiAKIAluZC0+cm9vdC5t
bnQgPSBOVUxMOwotCW5kLT5wYXRoLm1udCA9IE5VTEw7Ci0JbmQtPnBhdGguZGVudHJ5ID0g
TlVMTDsKIAogCS8qIEFic29sdXRlIHBhdGhuYW1lIC0tIGZldGNoIHRoZSByb290IChMT09L
VVBfSU5fUk9PVCB1c2VzIG5kLT5kZmQpLiAqLwogCWlmICgqcyA9PSAnLycgJiYgIShmbGFn
cyAmIExPT0tVUF9JTl9ST09UKSkgewotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0005-fix-handling-of-nd-depth-on-LOOKUP_CACHED-failures-i.patch"
Content-Disposition: attachment;
 filename*0="0005-fix-handling-of-nd-depth-on-LOOKUP_CACHED-failures-i.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSBiOTNhNmUzODliZGM3MmQ0MjNlNjY2Y2JiNTQ3NWNhN2M3YzRkZWI5IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KRGF0ZTogTW9uLCAxNSBGZWIgMjAyMSAxMjowMzoyMyAtMDUwMApTdWJqZWN0OiBbUEFU
Q0ggMDUvNjNdIGZpeCBoYW5kbGluZyBvZiBuZC0+ZGVwdGggb24gTE9PS1VQX0NBQ0hFRCBm
YWlsdXJlcyBpbgogdHJ5X3RvX3VubGF6eSoKClsgVXBzdHJlYW0gY29tbWl0IGVhY2Q5YWE4
Y2VkZWI0MTI4NDJjN2IzMzlhZGJhYTA0NzdmZGQ1YWQgXQoKQWZ0ZXIgc3dpdGNoaW5nIHRv
IG5vbi1SQ1UgbW9kZSwgd2Ugd2FudCBuZC0+ZGVwdGggdG8gbWF0Y2ggdGhlIG51bWJlcgpv
ZiBlbnRyaWVzIGluIG5kLT5zdGFja1tdIHRoYXQgbmVlZCBldmVudHVhbCBwYXRoX3B1dCgp
LgpsZWdpdGltaXplX2xpbmtzKCkgdGFrZXMgY2FyZSBvZiB0aGF0IG9uIGZhaWx1cmVzOyB1
bmZvcnR1bmF0ZWx5LApmYWlsdXJlIGV4aXRzIGFkZGVkIGZvciBMT09LVVBfQ0FDSEVEIGRv
IG5vdC4KCldlIGNvdWxkIGFkZCB0aGUgbG9naWNzIGZvciB0aGF0IGludG8gdGhvc2UgZmFp
bHVyZSBleGl0cywgYm90aCBpbgp0cnlfdG9fdW5sYXp5KCkgYW5kIGluIHRyeV90b191bmxh
enlfbmV4dCgpLCBidXQgc2luY2UgYm90aCBjaGVja3MKYXJlIGltbWVkaWF0ZWx5IGZvbGxv
d2VkIGJ5IGxlZ2l0aW1pemVfbGlua3MoKSBhbmQgdGhlcmUncyBubyBjYWxscwpvZiBsZWdp
dGltaXplX2xpbmtzKCkgb3RoZXIgdGhhbiB0aG9zZSB0d28uLi4gIEl0J3MgZWFzaWVyIHRv
Cm1vdmUgdGhlIGNoZWNrIChhbmQgcmVxdWlyZWQgaGFuZGxpbmcgb2YgbmQtPmRlcHRoIG9u
IGZhaWx1cmUpIGludG8KbGVnaXRpbWl6ZV9saW5rcygpIGl0c2VsZi4KCltjYXVnaHQgYnkg
SmVuczogLi4uIGFuZCBzaW5jZSB3ZSBhcmUgemVyb2luZyAtPmRlcHRoIGhlcmUsIHdlIG5l
ZWQKdG8gZG8gZHJvcF9saW5rcygpIGZpcnN0XQoKRml4ZXM6IDZjNmVjMmIwYTNlMCAiZnM6
IGFkZCBzdXBwb3J0IGZvciBMT09LVVBfQ0FDSEVEIgpUZXN0ZWQtYnk6IEplbnMgQXhib2Ug
PGF4Ym9lQGtlcm5lbC5kaz4KU2lnbmVkLW9mZi1ieTogQWwgVmlybyA8dmlyb0B6ZW5pdi5s
aW51eC5vcmcudWs+Ci0tLQogZnMvbmFtZWkuYyB8IDkgKysrKystLS0tCiAxIGZpbGUgY2hh
bmdlZCwgNSBpbnNlcnRpb25zKCspLCA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Zz
L25hbWVpLmMgYi9mcy9uYW1laS5jCmluZGV4IGQwNDc3NzhhZmYxNi4uZWM2MTIxZmIyMWQ4
IDEwMDY0NAotLS0gYS9mcy9uYW1laS5jCisrKyBiL2ZzL25hbWVpLmMKQEAgLTYzMCw2ICs2
MzAsMTEgQEAgc3RhdGljIGlubGluZSBib29sIGxlZ2l0aW1pemVfcGF0aChzdHJ1Y3QgbmFt
ZWlkYXRhICpuZCwKIHN0YXRpYyBib29sIGxlZ2l0aW1pemVfbGlua3Moc3RydWN0IG5hbWVp
ZGF0YSAqbmQpCiB7CiAJaW50IGk7CisJaWYgKHVubGlrZWx5KG5kLT5mbGFncyAmIExPT0tV
UF9DQUNIRUQpKSB7CisJCWRyb3BfbGlua3MobmQpOworCQluZC0+ZGVwdGggPSAwOworCQly
ZXR1cm4gZmFsc2U7CisJfQogCWZvciAoaSA9IDA7IGkgPCBuZC0+ZGVwdGg7IGkrKykgewog
CQlzdHJ1Y3Qgc2F2ZWQgKmxhc3QgPSBuZC0+c3RhY2sgKyBpOwogCQlpZiAodW5saWtlbHko
IWxlZ2l0aW1pemVfcGF0aChuZCwgJmxhc3QtPmxpbmssIGxhc3QtPnNlcSkpKSB7CkBAIC02
ODYsOCArNjkxLDYgQEAgc3RhdGljIGJvb2wgdHJ5X3RvX3VubGF6eShzdHJ1Y3QgbmFtZWlk
YXRhICpuZCkKIAlCVUdfT04oIShuZC0+ZmxhZ3MgJiBMT09LVVBfUkNVKSk7CiAKIAluZC0+
ZmxhZ3MgJj0gfkxPT0tVUF9SQ1U7Ci0JaWYgKG5kLT5mbGFncyAmIExPT0tVUF9DQUNIRUQp
Ci0JCWdvdG8gb3V0MTsKIAlpZiAodW5saWtlbHkoIWxlZ2l0aW1pemVfbGlua3MobmQpKSkK
IAkJZ290byBvdXQxOwogCWlmICh1bmxpa2VseSghbGVnaXRpbWl6ZV9wYXRoKG5kLCAmbmQt
PnBhdGgsIG5kLT5zZXEpKSkKQEAgLTcyNCw4ICs3MjcsNiBAQCBzdGF0aWMgYm9vbCB0cnlf
dG9fdW5sYXp5X25leHQoc3RydWN0IG5hbWVpZGF0YSAqbmQsIHN0cnVjdCBkZW50cnkgKmRl
bnRyeSwgdW5zaQogCUJVR19PTighKG5kLT5mbGFncyAmIExPT0tVUF9SQ1UpKTsKIAogCW5k
LT5mbGFncyAmPSB+TE9PS1VQX1JDVTsKLQlpZiAobmQtPmZsYWdzICYgTE9PS1VQX0NBQ0hF
RCkKLQkJZ290byBvdXQyOwogCWlmICh1bmxpa2VseSghbGVnaXRpbWl6ZV9saW5rcyhuZCkp
KQogCQlnb3RvIG91dDI7CiAJaWYgKHVubGlrZWx5KCFsZWdpdGltaXplX21udChuZC0+cGF0
aC5tbnQsIG5kLT5tX3NlcSkpKQotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0004-fs-add-support-for-LOOKUP_CACHED.patch"
Content-Disposition: attachment;
 filename="0004-fs-add-support-for-LOOKUP_CACHED.patch"
Content-Transfer-Encoding: base64

RnJvbSA1M2U4MjViMTBhYThmMDM3YzE5YzUxOTk3ZjVmODQwMmQwNDZkODgzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgMTcgRGVjIDIwMjAgMDk6MTk6MDkgLTA3MDAKU3ViamVjdDogW1BBVENIIDA0
LzYzXSBmczogYWRkIHN1cHBvcnQgZm9yIExPT0tVUF9DQUNIRUQKClsgVXBzdHJlYW0gY29t
bWl0IDZjNmVjMmIwYTNlMDM4MWQ4ODZkNTMxYmQxNDcxZGZkYjE1MDkyMzcgXQoKaW9fdXJp
bmcgYWx3YXlzIHB1bnRzIG9wZW5zIHRvIGFzeW5jIGNvbnRleHQsIHNpbmNlIHRoZXJlJ3Mg
bm8gY29udHJvbApvdmVyIHdoZXRoZXIgdGhlIGxvb2t1cCBibG9ja3Mgb3Igbm90LiBBZGQg
TE9PS1VQX0NBQ0hFRCB0byBzdXBwb3J0Cmp1c3QgZG9pbmcgdGhlIGZhc3QgUkNVIGJhc2Vk
IGxvb2t1cHMsIHdoaWNoIHdlIGtub3cgd2lsbCBub3QgYmxvY2suIElmCndlIGNhbiBkbyBh
IGNhY2hlZCBwYXRoIHJlc29sdXRpb24gb2YgdGhlIGZpbGVuYW1lLCB0aGVuIHdlIGRvbid0
IGhhdmUKdG8gYWx3YXlzIHB1bnQgbG9va3VwcyBmb3IgYSB3b3JrZXIuCgpEdXJpbmcgcGF0
aCByZXNvbHV0aW9uLCB3ZSBhbHdheXMgZG8gTE9PS1VQX1JDVSBmaXJzdC4gSWYgdGhhdCBm
YWlscyBhbmQKd2UgdGVybWluYXRlIExPT0tVUF9SQ1UsIHRoZW4gZmFpbCBhIExPT0tVUF9D
QUNIRUQgYXR0ZW1wdCBhcyB3ZWxsLgoKQ2M6IEFsIFZpcm8gPHZpcm9AemVuaXYubGludXgu
b3JnLnVrPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+ClNp
Z25lZC1vZmYtYnk6IEFsIFZpcm8gPHZpcm9AemVuaXYubGludXgub3JnLnVrPgotLS0KIGZz
L25hbWVpLmMgICAgICAgICAgICB8IDkgKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L25hbWVp
LmggfCAxICsKIDIgZmlsZXMgY2hhbmdlZCwgMTAgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdp
dCBhL2ZzL25hbWVpLmMgYi9mcy9uYW1laS5jCmluZGV4IDI3NmE4NDI4NjEwOC4uZDA0Nzc3
OGFmZjE2IDEwMDY0NAotLS0gYS9mcy9uYW1laS5jCisrKyBiL2ZzL25hbWVpLmMKQEAgLTY4
Niw2ICs2ODYsOCBAQCBzdGF0aWMgYm9vbCB0cnlfdG9fdW5sYXp5KHN0cnVjdCBuYW1laWRh
dGEgKm5kKQogCUJVR19PTighKG5kLT5mbGFncyAmIExPT0tVUF9SQ1UpKTsKIAogCW5kLT5m
bGFncyAmPSB+TE9PS1VQX1JDVTsKKwlpZiAobmQtPmZsYWdzICYgTE9PS1VQX0NBQ0hFRCkK
KwkJZ290byBvdXQxOwogCWlmICh1bmxpa2VseSghbGVnaXRpbWl6ZV9saW5rcyhuZCkpKQog
CQlnb3RvIG91dDE7CiAJaWYgKHVubGlrZWx5KCFsZWdpdGltaXplX3BhdGgobmQsICZuZC0+
cGF0aCwgbmQtPnNlcSkpKQpAQCAtNzIyLDYgKzcyNCw4IEBAIHN0YXRpYyBib29sIHRyeV90
b191bmxhenlfbmV4dChzdHJ1Y3QgbmFtZWlkYXRhICpuZCwgc3RydWN0IGRlbnRyeSAqZGVu
dHJ5LCB1bnNpCiAJQlVHX09OKCEobmQtPmZsYWdzICYgTE9PS1VQX1JDVSkpOwogCiAJbmQt
PmZsYWdzICY9IH5MT09LVVBfUkNVOworCWlmIChuZC0+ZmxhZ3MgJiBMT09LVVBfQ0FDSEVE
KQorCQlnb3RvIG91dDI7CiAJaWYgKHVubGlrZWx5KCFsZWdpdGltaXplX2xpbmtzKG5kKSkp
CiAJCWdvdG8gb3V0MjsKIAlpZiAodW5saWtlbHkoIWxlZ2l0aW1pemVfbW50KG5kLT5wYXRo
Lm1udCwgbmQtPm1fc2VxKSkpCkBAIC03OTIsNiArNzk2LDcgQEAgc3RhdGljIGludCBjb21w
bGV0ZV93YWxrKHN0cnVjdCBuYW1laWRhdGEgKm5kKQogCQkgKi8KIAkJaWYgKCEobmQtPmZs
YWdzICYgKExPT0tVUF9ST09UIHwgTE9PS1VQX0lTX1NDT1BFRCkpKQogCQkJbmQtPnJvb3Qu
bW50ID0gTlVMTDsKKwkJbmQtPmZsYWdzICY9IH5MT09LVVBfQ0FDSEVEOwogCQlpZiAoIXRy
eV90b191bmxhenkobmQpKQogCQkJcmV0dXJuIC1FQ0hJTEQ7CiAJfQpAQCAtMjIwNCw2ICsy
MjA5LDEwIEBAIHN0YXRpYyBjb25zdCBjaGFyICpwYXRoX2luaXQoc3RydWN0IG5hbWVpZGF0
YSAqbmQsIHVuc2lnbmVkIGZsYWdzKQogCWludCBlcnJvcjsKIAljb25zdCBjaGFyICpzID0g
bmQtPm5hbWUtPm5hbWU7CiAKKwkvKiBMT09LVVBfQ0FDSEVEIHJlcXVpcmVzIFJDVSwgYXNr
IGNhbGxlciB0byByZXRyeSAqLworCWlmICgoZmxhZ3MgJiAoTE9PS1VQX1JDVSB8IExPT0tV
UF9DQUNIRUQpKSA9PSBMT09LVVBfQ0FDSEVEKQorCQlyZXR1cm4gRVJSX1BUUigtRUFHQUlO
KTsKKwogCWlmICghKnMpCiAJCWZsYWdzICY9IH5MT09LVVBfUkNVOwogCWlmIChmbGFncyAm
IExPT0tVUF9SQ1UpCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L25hbWVpLmggYi9pbmNs
dWRlL2xpbnV4L25hbWVpLmgKaW5kZXggYTRiYjk5MjYyM2M0Li5iOTYwNWIyYjQ2ZTcgMTAw
NjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbmFtZWkuaAorKysgYi9pbmNsdWRlL2xpbnV4L25h
bWVpLmgKQEAgLTQ2LDYgKzQ2LDcgQEAgZW51bSB7TEFTVF9OT1JNLCBMQVNUX1JPT1QsIExB
U1RfRE9ULCBMQVNUX0RPVERPVH07CiAjZGVmaW5lIExPT0tVUF9OT19YREVWCQkweDA0MDAw
MCAvKiBObyBtb3VudHBvaW50IGNyb3NzaW5nLiAqLwogI2RlZmluZSBMT09LVVBfQkVORUFU
SAkJMHgwODAwMDAgLyogTm8gZXNjYXBpbmcgZnJvbSBzdGFydGluZyBwb2ludC4gKi8KICNk
ZWZpbmUgTE9PS1VQX0lOX1JPT1QJCTB4MTAwMDAwIC8qIFRyZWF0IGRpcmZkIGFzIGZzIHJv
b3QuICovCisjZGVmaW5lIExPT0tVUF9DQUNIRUQJCTB4MjAwMDAwIC8qIE9ubHkgZG8gY2Fj
aGVkIGxvb2t1cCAqLwogLyogTE9PS1VQXyogZmxhZ3Mgd2hpY2ggZG8gc2NvcGUtcmVsYXRl
ZCBjaGVja3MgYmFzZWQgb24gdGhlIGRpcmZkLiAqLwogI2RlZmluZSBMT09LVVBfSVNfU0NP
UEVEIChMT09LVVBfQkVORUFUSCB8IExPT0tVUF9JTl9ST09UKQogCi0tIAoyLjM5LjAKCg==

--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0003-saner-calling-conventions-for-unlazy_child.patch"
Content-Disposition: attachment;
 filename="0003-saner-calling-conventions-for-unlazy_child.patch"
Content-Transfer-Encoding: base64

RnJvbSAyZjA2NWEyMGEyZDBiNzVjMjVhOTEyNWY0NTI5OTEwNDlkY2Q0MjA1IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KRGF0ZTogTW9uLCA0IEphbiAyMDIxIDAwOjA4OjQxIC0wNTAwClN1YmplY3Q6IFtQQVRD
SCAwMy82M10gc2FuZXIgY2FsbGluZyBjb252ZW50aW9ucyBmb3IgdW5sYXp5X2NoaWxkKCkK
ClsgVXBzdHJlYW0gY29tbWl0IGFlNjZkYjQ1ZmQzMDlmZDFjNmQ0ZTg0NmRmYzg0MTRkZmVj
N2Q2YWQgXQoKc2FtZSBhcyBmb3IgdGhlIHByZXZpb3VzIGNvbW1pdCAtIGluc3RlYWQgb2Yg
MC8tRUNISUxEIG1ha2UKaXQgcmV0dXJuIHRydWUvZmFsc2UsIHJlbmFtZSB0byB0cnlfdG9f
dW5sYXp5X2NoaWxkKCkuCgpTaWduZWQtb2ZmLWJ5OiBBbCBWaXJvIDx2aXJvQHplbml2Lmxp
bnV4Lm9yZy51az4KLS0tCiBmcy9uYW1laS5jIHwgMjggKysrKysrKysrKysrKystLS0tLS0t
LS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDE0IGluc2VydGlvbnMoKyksIDE0IGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2ZzL25hbWVpLmMgYi9mcy9uYW1laS5jCmluZGV4IDQzNzU1
NjVhY2E2Ni4uMjc2YTg0Mjg2MTA4IDEwMDY0NAotLS0gYS9mcy9uYW1laS5jCisrKyBiL2Zz
L25hbWVpLmMKQEAgLTcwNSwxOSArNzA1LDE5IEBAIHN0YXRpYyBib29sIHRyeV90b191bmxh
enkoc3RydWN0IG5hbWVpZGF0YSAqbmQpCiB9CiAKIC8qKgotICogdW5sYXp5X2NoaWxkIC0g
dHJ5IHRvIHN3aXRjaCB0byByZWYtd2FsayBtb2RlLgorICogdHJ5X3RvX3VubGF6eV9uZXh0
IC0gdHJ5IHRvIHN3aXRjaCB0byByZWYtd2FsayBtb2RlLgogICogQG5kOiBuYW1laWRhdGEg
cGF0aHdhbGsgZGF0YQotICogQGRlbnRyeTogY2hpbGQgb2YgbmQtPnBhdGguZGVudHJ5Ci0g
KiBAc2VxOiBzZXEgbnVtYmVyIHRvIGNoZWNrIGRlbnRyeSBhZ2FpbnN0Ci0gKiBSZXR1cm5z
OiAwIG9uIHN1Y2Nlc3MsIC1FQ0hJTEQgb24gZmFpbHVyZQorICogQGRlbnRyeTogbmV4dCBk
ZW50cnkgdG8gc3RlcCBpbnRvCisgKiBAc2VxOiBzZXEgbnVtYmVyIHRvIGNoZWNrIEBkZW50
cnkgYWdhaW5zdAorICogUmV0dXJuczogdHJ1ZSBvbiBzdWNjZXNzLCBmYWxzZSBvbiBmYWls
dXJlCiAgKgotICogdW5sYXp5X2NoaWxkIGF0dGVtcHRzIHRvIGxlZ2l0aW1pemUgdGhlIGN1
cnJlbnQgbmQtPnBhdGgsIG5kLT5yb290IGFuZCBkZW50cnkKLSAqIGZvciByZWYtd2FsayBt
b2RlLiAgQGRlbnRyeSBtdXN0IGJlIGEgcGF0aCBmb3VuZCBieSBhIGRvX2xvb2t1cCBjYWxs
IG9uCi0gKiBAbmQuICBNdXN0IGJlIGNhbGxlZCBmcm9tIHJjdS13YWxrIGNvbnRleHQuCi0g
KiBOb3RoaW5nIHNob3VsZCB0b3VjaCBuYW1laWRhdGEgYmV0d2VlbiB1bmxhenlfY2hpbGQo
KSBmYWlsdXJlIGFuZAorICogU2ltaWxhciB0byB0byB0cnlfdG9fdW5sYXp5KCksIGJ1dCBo
ZXJlIHdlIGhhdmUgdGhlIG5leHQgZGVudHJ5IGFscmVhZHkKKyAqIHBpY2tlZCBieSByY3Ut
d2FsayBhbmQgd2FudCB0byBsZWdpdGltaXplIHRoYXQgaW4gYWRkaXRpb24gdG8gdGhlIGN1
cnJlbnQKKyAqIG5kLT5wYXRoIGFuZCBuZC0+cm9vdCBmb3IgcmVmLXdhbGsgbW9kZS4gIE11
c3QgYmUgY2FsbGVkIGZyb20gcmN1LXdhbGsgY29udGV4dC4KKyAqIE5vdGhpbmcgc2hvdWxk
IHRvdWNoIG5hbWVpZGF0YSBiZXR3ZWVuIHRyeV90b191bmxhenlfbmV4dCgpIGZhaWx1cmUg
YW5kCiAgKiB0ZXJtaW5hdGVfd2FsaygpLgogICovCi1zdGF0aWMgaW50IHVubGF6eV9jaGls
ZChzdHJ1Y3QgbmFtZWlkYXRhICpuZCwgc3RydWN0IGRlbnRyeSAqZGVudHJ5LCB1bnNpZ25l
ZCBzZXEpCitzdGF0aWMgYm9vbCB0cnlfdG9fdW5sYXp5X25leHQoc3RydWN0IG5hbWVpZGF0
YSAqbmQsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgdW5zaWduZWQgc2VxKQogewogCUJVR19P
TighKG5kLT5mbGFncyAmIExPT0tVUF9SQ1UpKTsKIApAQCAtNzQ3LDcgKzc0Nyw3IEBAIHN0
YXRpYyBpbnQgdW5sYXp5X2NoaWxkKHN0cnVjdCBuYW1laWRhdGEgKm5kLCBzdHJ1Y3QgZGVu
dHJ5ICpkZW50cnksIHVuc2lnbmVkIHNlCiAJaWYgKHVubGlrZWx5KCFsZWdpdGltaXplX3Jv
b3QobmQpKSkKIAkJZ290byBvdXRfZHB1dDsKIAlyY3VfcmVhZF91bmxvY2soKTsKLQlyZXR1
cm4gMDsKKwlyZXR1cm4gdHJ1ZTsKIAogb3V0MjoKIAluZC0+cGF0aC5tbnQgPSBOVUxMOwpA
QCAtNzU1LDExICs3NTUsMTEgQEAgc3RhdGljIGludCB1bmxhenlfY2hpbGQoc3RydWN0IG5h
bWVpZGF0YSAqbmQsIHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgdW5zaWduZWQgc2UKIAluZC0+
cGF0aC5kZW50cnkgPSBOVUxMOwogb3V0OgogCXJjdV9yZWFkX3VubG9jaygpOwotCXJldHVy
biAtRUNISUxEOworCXJldHVybiBmYWxzZTsKIG91dF9kcHV0OgogCXJjdV9yZWFkX3VubG9j
aygpOwogCWRwdXQoZGVudHJ5KTsKLQlyZXR1cm4gLUVDSElMRDsKKwlyZXR1cm4gZmFsc2U7
CiB9CiAKIHN0YXRpYyBpbmxpbmUgaW50IGRfcmV2YWxpZGF0ZShzdHJ1Y3QgZGVudHJ5ICpk
ZW50cnksIHVuc2lnbmVkIGludCBmbGFncykKQEAgLTEzNzQsNyArMTM3NCw3IEBAIHN0YXRp
YyBpbmxpbmUgaW50IGhhbmRsZV9tb3VudHMoc3RydWN0IG5hbWVpZGF0YSAqbmQsIHN0cnVj
dCBkZW50cnkgKmRlbnRyeSwKIAkJCXJldHVybiAtRU5PRU5UOwogCQlpZiAobGlrZWx5KF9f
Zm9sbG93X21vdW50X3JjdShuZCwgcGF0aCwgaW5vZGUsIHNlcXApKSkKIAkJCXJldHVybiAw
OwotCQlpZiAodW5sYXp5X2NoaWxkKG5kLCBkZW50cnksIHNlcSkpCisJCWlmICghdHJ5X3Rv
X3VubGF6eV9uZXh0KG5kLCBkZW50cnksIHNlcSkpCiAJCQlyZXR1cm4gLUVDSElMRDsKIAkJ
Ly8gKnBhdGggbWlnaHQndmUgYmVlbiBjbG9iYmVyZWQgYnkgX19mb2xsb3dfbW91bnRfcmN1
KCkKIAkJcGF0aC0+bW50ID0gbmQtPnBhdGgubW50OwpAQCAtMTQ5NSw3ICsxNDk1LDcgQEAg
c3RhdGljIHN0cnVjdCBkZW50cnkgKmxvb2t1cF9mYXN0KHN0cnVjdCBuYW1laWRhdGEgKm5k
LAogCQlzdGF0dXMgPSBkX3JldmFsaWRhdGUoZGVudHJ5LCBuZC0+ZmxhZ3MpOwogCQlpZiAo
bGlrZWx5KHN0YXR1cyA+IDApKQogCQkJcmV0dXJuIGRlbnRyeTsKLQkJaWYgKHVubGF6eV9j
aGlsZChuZCwgZGVudHJ5LCBzZXEpKQorCQlpZiAoIXRyeV90b191bmxhenlfbmV4dChuZCwg
ZGVudHJ5LCBzZXEpKQogCQkJcmV0dXJuIEVSUl9QVFIoLUVDSElMRCk7CiAJCWlmICh1bmxp
a2VseShzdGF0dXMgPT0gLUVDSElMRCkpCiAJCQkvKiB3ZSdkIGJlZW4gdG9sZCB0byByZWRv
IGl0IGluIG5vbi1yY3UgbW9kZSAqLwotLSAKMi4zOS4wCgo=
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0002-iov_iter-add-helper-to-save-iov_iter-state.patch"
Content-Disposition: attachment;
 filename="0002-iov_iter-add-helper-to-save-iov_iter-state.patch"
Content-Transfer-Encoding: base64

RnJvbSA0ZDk1YWEwN2I2ZjEwNTk5OTAzNjZmODgxMTJjNDhmMjE3ZmJiYzVkIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IEZyaSwgMTAgU2VwIDIwMjEgMTE6MTg6MzYgLTA2MDAKU3ViamVjdDogW1BBVENIIDAy
LzYzXSBpb3ZfaXRlcjogYWRkIGhlbHBlciB0byBzYXZlIGlvdl9pdGVyIHN0YXRlCgpbIFVw
c3RyZWFtIGNvbW1pdCA4ZmIwZjQ3YTlkN2FjZjYyMGQwZmQ5NzgzMWI2OWRhOWJjNWUyMmVk
IF0KCkluIGFuIGlkZWFsIHdvcmxkLCB3aGVuIHNvbWVvbmUgaXMgcGFzc2VkIGFuIGlvdl9p
dGVyIGFuZCByZXR1cm5zIFggYnl0ZXMsCnRoZW4gWCBieXRlcyB3b3VsZCBoYXZlIGJlZW4g
Y29uc3VtZWQvYWR2YW5jZWQgZnJvbSB0aGUgaW92X2l0ZXIuIEJ1dCB3ZQpoYXZlIHVzZSBj
YXNlcyB0aGF0IGFsd2F5cyBjb25zdW1lIHRoZSBlbnRpcmUgaXRlcmF0b3IsIGEgZmV3IGV4
YW1wbGVzCm9mIHRoYXQgYXJlIGlvbWFwIGFuZCBiZGV2IE9fRElSRUNULiBUaGlzIG1lYW5z
IHdlIGNhbm5vdCByZWx5IG9uIHRoZQpzdGF0ZSBvZiB0aGUgaW92X2l0ZXIgb25jZSB3ZSd2
ZSBjYWxsZWQgLT5yZWFkX2l0ZXIoKSBvciAtPndyaXRlX2l0ZXIoKS4KClRoaXMgd291bGQg
YmUgZWFzaWVyIGlmIHdlIGRpZG4ndCBhbHdheXMgaGF2ZSB0byBkZWFsIHdpdGggdHJ1bmNh
dGUgb2YKdGhlIGlvdl9pdGVyLCBhcyByZXdpbmRpbmcgd291bGQgYmUgdHJpdmlhbCB3aXRo
b3V0IHRoYXQuIFdlIHJlY2VudGx5CmFkZGVkIGEgY29tbWl0IHRvIHRyYWNrIHRoZSB0cnVu
Y2F0ZSBzdGF0ZSwgYnV0IHRoYXQgZ3JldyB0aGUgaW92X2l0ZXIKYnkgOCBieXRlcyBhbmQg
d2Fzbid0IHRoZSBiZXN0IHNvbHV0aW9uLgoKSW1wbGVtZW50IGEgaGVscGVyIHRvIHNhdmUg
ZW5vdWdoIG9mIHRoZSBpb3ZfaXRlciBzdGF0ZSB0byBzYW5lbHkgcmVzdG9yZQppdCBhZnRl
ciB3ZSd2ZSBjYWxsZWQgdGhlIHJlYWQvd3JpdGUgaXRlcmF0b3IgaGVscGVycy4gVGhpcyBj
dXJyZW50bHkKb25seSB3b3JrcyBmb3IgSU9WRUMvQlZFQy9LVkVDIGFzIHRoYXQncyBhbGwg
d2UgbmVlZCwgc3VwcG9ydCBmb3Igb3RoZXIKaXRlcmF0b3IgdHlwZXMgYXJlIGxlZnQgYXMg
YW4gZXhlcmNpc2UgZm9yIHRoZSByZWFkZXIuCgpMaW5rOiBodHRwczovL2xvcmUua2VybmVs
Lm9yZy9saW51eC1mc2RldmVsL0NBSGstPXdpYWNLVjRHaC1NWWp0ZVUwTHdOQlNHcFdySy1P
djI1SGRxQjFld2luckZQZ0BtYWlsLmdtYWlsLmNvbS8KU2lnbmVkLW9mZi1ieTogSmVucyBB
eGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGluY2x1ZGUvbGludXgvdWlvLmggfCAxNSAr
KysrKysrKysrKysrCiBsaWIvaW92X2l0ZXIuYyAgICAgIHwgNTIgKysrKysrKysrKysrKysr
KysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDQ4IGlu
c2VydGlvbnMoKyksIDE5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGlu
dXgvdWlvLmggYi9pbmNsdWRlL2xpbnV4L3Vpby5oCmluZGV4IDI3ZmY4ZWI3ODZkYy4uY2Vk
YjY4ZTQ5ZTRmIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3Vpby5oCisrKyBiL2luY2x1
ZGUvbGludXgvdWlvLmgKQEAgLTI2LDYgKzI2LDEyIEBAIGVudW0gaXRlcl90eXBlIHsKIAlJ
VEVSX0RJU0NBUkQgPSA2NCwKIH07CiAKK3N0cnVjdCBpb3ZfaXRlcl9zdGF0ZSB7CisJc2l6
ZV90IGlvdl9vZmZzZXQ7CisJc2l6ZV90IGNvdW50OworCXVuc2lnbmVkIGxvbmcgbnJfc2Vn
czsKK307CisKIHN0cnVjdCBpb3ZfaXRlciB7CiAJLyoKIAkgKiBCaXQgMCBpcyB0aGUgcmVh
ZC93cml0ZSBiaXQsIHNldCBpZiB3ZSdyZSB3cml0aW5nLgpAQCAtNTUsNiArNjEsMTQgQEAg
c3RhdGljIGlubGluZSBlbnVtIGl0ZXJfdHlwZSBpb3ZfaXRlcl90eXBlKGNvbnN0IHN0cnVj
dCBpb3ZfaXRlciAqaSkKIAlyZXR1cm4gaS0+dHlwZSAmIH4oUkVBRCB8IFdSSVRFKTsKIH0K
IAorc3RhdGljIGlubGluZSB2b2lkIGlvdl9pdGVyX3NhdmVfc3RhdGUoc3RydWN0IGlvdl9p
dGVyICppdGVyLAorCQkJCSAgICAgICBzdHJ1Y3QgaW92X2l0ZXJfc3RhdGUgKnN0YXRlKQor
eworCXN0YXRlLT5pb3Zfb2Zmc2V0ID0gaXRlci0+aW92X29mZnNldDsKKwlzdGF0ZS0+Y291
bnQgPSBpdGVyLT5jb3VudDsKKwlzdGF0ZS0+bnJfc2VncyA9IGl0ZXItPm5yX3NlZ3M7Cit9
CisKIHN0YXRpYyBpbmxpbmUgYm9vbCBpdGVyX2lzX2lvdmVjKGNvbnN0IHN0cnVjdCBpb3Zf
aXRlciAqaSkKIHsKIAlyZXR1cm4gaW92X2l0ZXJfdHlwZShpKSA9PSBJVEVSX0lPVkVDOwpA
QCAtMjI2LDYgKzI0MCw3IEBAIHNzaXplX3QgaW92X2l0ZXJfZ2V0X3BhZ2VzKHN0cnVjdCBp
b3ZfaXRlciAqaSwgc3RydWN0IHBhZ2UgKipwYWdlcywKIHNzaXplX3QgaW92X2l0ZXJfZ2V0
X3BhZ2VzX2FsbG9jKHN0cnVjdCBpb3ZfaXRlciAqaSwgc3RydWN0IHBhZ2UgKioqcGFnZXMs
CiAJCQlzaXplX3QgbWF4c2l6ZSwgc2l6ZV90ICpzdGFydCk7CiBpbnQgaW92X2l0ZXJfbnBh
Z2VzKGNvbnN0IHN0cnVjdCBpb3ZfaXRlciAqaSwgaW50IG1heHBhZ2VzKTsKK3ZvaWQgaW92
X2l0ZXJfcmVzdG9yZShzdHJ1Y3QgaW92X2l0ZXIgKmksIHN0cnVjdCBpb3ZfaXRlcl9zdGF0
ZSAqc3RhdGUpOwogCiBjb25zdCB2b2lkICpkdXBfaXRlcihzdHJ1Y3QgaW92X2l0ZXIgKm5l
dywgc3RydWN0IGlvdl9pdGVyICpvbGQsIGdmcF90IGZsYWdzKTsKIApkaWZmIC0tZ2l0IGEv
bGliL2lvdl9pdGVyLmMgYi9saWIvaW92X2l0ZXIuYwppbmRleCAxYjBhMzQ5ZmJjZDkuLjY1
MDU1NDk2NGYxOCAxMDA2NDQKLS0tIGEvbGliL2lvdl9pdGVyLmMKKysrIGIvbGliL2lvdl9p
dGVyLmMKQEAgLTE4MzYsMjQgKzE4MzYsMzggQEAgaW50IGltcG9ydF9zaW5nbGVfcmFuZ2Uo
aW50IHJ3LCB2b2lkIF9fdXNlciAqYnVmLCBzaXplX3QgbGVuLAogfQogRVhQT1JUX1NZTUJP
TChpbXBvcnRfc2luZ2xlX3JhbmdlKTsKIAotaW50IGlvdl9pdGVyX2Zvcl9lYWNoX3Jhbmdl
KHN0cnVjdCBpb3ZfaXRlciAqaSwgc2l6ZV90IGJ5dGVzLAotCQkJICAgIGludCAoKmYpKHN0
cnVjdCBrdmVjICp2ZWMsIHZvaWQgKmNvbnRleHQpLAotCQkJICAgIHZvaWQgKmNvbnRleHQp
CisvKioKKyAqIGlvdl9pdGVyX3Jlc3RvcmUoKSAtIFJlc3RvcmUgYSAmc3RydWN0IGlvdl9p
dGVyIHRvIHRoZSBzYW1lIHN0YXRlIGFzIHdoZW4KKyAqICAgICBpb3ZfaXRlcl9zYXZlX3N0
YXRlKCkgd2FzIGNhbGxlZC4KKyAqCisgKiBAaTogJnN0cnVjdCBpb3ZfaXRlciB0byByZXN0
b3JlCisgKiBAc3RhdGU6IHN0YXRlIHRvIHJlc3RvcmUgZnJvbQorICoKKyAqIFVzZWQgYWZ0
ZXIgaW92X2l0ZXJfc2F2ZV9zdGF0ZSgpIHRvIGJyaW5nIHJlc3RvcmUgQGksIGlmIG9wZXJh
dGlvbnMgbWF5CisgKiBoYXZlIGFkdmFuY2VkIGl0LgorICoKKyAqIE5vdGU6IG9ubHkgd29y
a3Mgb24gSVRFUl9JT1ZFQywgSVRFUl9CVkVDLCBhbmQgSVRFUl9LVkVDCisgKi8KK3ZvaWQg
aW92X2l0ZXJfcmVzdG9yZShzdHJ1Y3QgaW92X2l0ZXIgKmksIHN0cnVjdCBpb3ZfaXRlcl9z
dGF0ZSAqc3RhdGUpCiB7Ci0Jc3RydWN0IGt2ZWMgdzsKLQlpbnQgZXJyID0gLUVJTlZBTDsK
LQlpZiAoIWJ5dGVzKQotCQlyZXR1cm4gMDsKLQotCWl0ZXJhdGVfYWxsX2tpbmRzKGksIGJ5
dGVzLCB2LCAtRUlOVkFMLCAoewotCQl3Lmlvdl9iYXNlID0ga21hcCh2LmJ2X3BhZ2UpICsg
di5idl9vZmZzZXQ7Ci0JCXcuaW92X2xlbiA9IHYuYnZfbGVuOwotCQllcnIgPSBmKCZ3LCBj
b250ZXh0KTsKLQkJa3VubWFwKHYuYnZfcGFnZSk7Ci0JCWVycjt9KSwgKHsKLQkJdyA9IHY7
Ci0JCWVyciA9IGYoJncsIGNvbnRleHQpO30pCi0JKQotCXJldHVybiBlcnI7CisJaWYgKFdB
Uk5fT05fT05DRSghaW92X2l0ZXJfaXNfYnZlYyhpKSAmJiAhaXRlcl9pc19pb3ZlYyhpKSkg
JiYKKwkJCSAhaW92X2l0ZXJfaXNfa3ZlYyhpKSkKKwkJcmV0dXJuOworCWktPmlvdl9vZmZz
ZXQgPSBzdGF0ZS0+aW92X29mZnNldDsKKwlpLT5jb3VudCA9IHN0YXRlLT5jb3VudDsKKwkv
KgorCSAqIEZvciB0aGUgKnZlYyBpdGVycywgbnJfc2VncyArIGlvdiBpcyBjb25zdGFudCAt
IGlmIHdlIGluY3JlbWVudAorCSAqIHRoZSB2ZWMsIHRoZW4gd2UgYWxzbyBkZWNyZW1lbnQg
dGhlIG5yX3NlZ3MgY291bnQuIEhlbmNlIHdlIGRvbid0CisJICogbmVlZCB0byB0cmFjayBi
b3RoIG9mIHRoZXNlLCBqdXN0IG9uZSBpcyBlbm91Z2ggYW5kIHdlIGNhbiBkZWR1Y3QKKwkg
KiB0aGUgb3RoZXIgZnJvbSB0aGF0LiBJVEVSX0tWRUMgYW5kIElURVJfSU9WRUMgYXJlIHRo
ZSBzYW1lIHN0cnVjdAorCSAqIHNpemUsIHNvIHdlIGNhbiBqdXN0IGluY3JlbWVudCB0aGUg
aW92IHBvaW50ZXIgYXMgdGhleSBhcmUgdW5pb256ZWQuCisJICogSVRFUl9CVkVDIF9tYXlf
IGJlIHRoZSBzYW1lIHNpemUgb24gc29tZSBhcmNocywgYnV0IG9uIG90aGVycyBpdCBpcwor
CSAqIG5vdC4gQmUgc2FmZSBhbmQgaGFuZGxlIGl0IHNlcGFyYXRlbHkuCisJICovCisJQlVJ
TERfQlVHX09OKHNpemVvZihzdHJ1Y3QgaW92ZWMpICE9IHNpemVvZihzdHJ1Y3Qga3ZlYykp
OworCWlmIChpb3ZfaXRlcl9pc19idmVjKGkpKQorCQlpLT5idmVjIC09IHN0YXRlLT5ucl9z
ZWdzIC0gaS0+bnJfc2VnczsKKwllbHNlCisJCWktPmlvdiAtPSBzdGF0ZS0+bnJfc2VncyAt
IGktPm5yX3NlZ3M7CisJaS0+bnJfc2VncyA9IHN0YXRlLT5ucl9zZWdzOwogfQotRVhQT1JU
X1NZTUJPTChpb3ZfaXRlcl9mb3JfZWFjaF9yYW5nZSk7Ci0tIAoyLjM5LjAKCg==
--------------rm6sZf9Xaj1ai4CrnqwoExsd
Content-Type: text/x-patch; charset=UTF-8;
 name="0001-kernel-provide-create_io_thread-helper.patch"
Content-Disposition: attachment;
 filename="0001-kernel-provide-create_io_thread-helper.patch"
Content-Transfer-Encoding: base64

RnJvbSBhM2RiMDNkYzdhNGYzM2RlMjAxODg2MzhkNWIxOTNjMjk0NmM1ZGZlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFRodSwgNCBNYXIgMjAyMSAxMjoyMTowNSAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggMDEv
NjNdIGtlcm5lbDogcHJvdmlkZSBjcmVhdGVfaW9fdGhyZWFkKCkgaGVscGVyCgpbIFVwc3Ry
ZWFtIGNvbW1pdCBjYzQ0MGU4NzM4ZTVjODc1Mjk3YWMwZTkwMzE2NzQ1MDkzYmU3ZTI4IF0K
ClByb3ZpZGUgYSBnZW5lcmljIGhlbHBlciBmb3Igc2V0dGluZyB1cCBhbiBpb191cmluZyB3
b3JrZXIuIFJldHVybnMgYQp0YXNrX3N0cnVjdCBzbyB0aGF0IHRoZSBjYWxsZXIgY2FuIGRv
IHdoYXRldmVyIHNldHVwIGlzIG5lZWRlZCwgdGhlbiBjYWxsCndha2VfdXBfbmV3X3Rhc2so
KSB0byBraWNrIGl0IGludG8gZ2Vhci4KCkFkZCBhIGtlcm5lbF9jbG9uZV9hcmdzIG1lbWJl
ciwgaW9fdGhyZWFkLCB3aGljaCB0ZWxscyBjb3B5X3Byb2Nlc3MoKSB0bwptYXJrIHRoZSB0
YXNrIHdpdGggUEZfSU9fV09SS0VSLgoKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhi
b2VAa2VybmVsLmRrPgotLS0KIGluY2x1ZGUvbGludXgvc2NoZWQvdGFzay5oIHwgIDIgKysK
IGtlcm5lbC9mb3JrLmMgICAgICAgICAgICAgIHwgMzAgKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrCiAyIGZpbGVzIGNoYW5nZWQsIDMyIGluc2VydGlvbnMoKykKCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L3NjaGVkL3Rhc2suaCBiL2luY2x1ZGUvbGludXgvc2NoZWQv
dGFzay5oCmluZGV4IGVlYWNiNGExNmZlMy4uNGNlNTExNDM3YThhIDEwMDY0NAotLS0gYS9p
bmNsdWRlL2xpbnV4L3NjaGVkL3Rhc2suaAorKysgYi9pbmNsdWRlL2xpbnV4L3NjaGVkL3Rh
c2suaApAQCAtMzEsNiArMzEsNyBAQCBzdHJ1Y3Qga2VybmVsX2Nsb25lX2FyZ3MgewogCS8q
IE51bWJlciBvZiBlbGVtZW50cyBpbiAqc2V0X3RpZCAqLwogCXNpemVfdCBzZXRfdGlkX3Np
emU7CiAJaW50IGNncm91cDsKKwlpbnQgaW9fdGhyZWFkOwogCXN0cnVjdCBjZ3JvdXAgKmNn
cnA7CiAJc3RydWN0IGNzc19zZXQgKmNzZXQ7CiB9OwpAQCAtODUsNiArODYsNyBAQCBleHRl
cm4gdm9pZCBleGl0X2ZpbGVzKHN0cnVjdCB0YXNrX3N0cnVjdCAqKTsKIGV4dGVybiB2b2lk
IGV4aXRfaXRpbWVycyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKik7CiAKIGV4dGVybiBwaWRfdCBr
ZXJuZWxfY2xvbmUoc3RydWN0IGtlcm5lbF9jbG9uZV9hcmdzICprYXJncyk7CitzdHJ1Y3Qg
dGFza19zdHJ1Y3QgKmNyZWF0ZV9pb190aHJlYWQoaW50ICgqZm4pKHZvaWQgKiksIHZvaWQg
KmFyZywgaW50IG5vZGUpOwogc3RydWN0IHRhc2tfc3RydWN0ICpmb3JrX2lkbGUoaW50KTsK
IHN0cnVjdCBtbV9zdHJ1Y3QgKmNvcHlfaW5pdF9tbSh2b2lkKTsKIGV4dGVybiBwaWRfdCBr
ZXJuZWxfdGhyZWFkKGludCAoKmZuKSh2b2lkICopLCB2b2lkICphcmcsIHVuc2lnbmVkIGxv
bmcgZmxhZ3MpOwpkaWZmIC0tZ2l0IGEva2VybmVsL2ZvcmsuYyBiL2tlcm5lbC9mb3JrLmMK
aW5kZXggYjg3NzQ4MGM5MDFmLi4yNTJhNDBmMTRmNzIgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9m
b3JrLmMKKysrIGIva2VybmVsL2ZvcmsuYwpAQCAtMTk0OSw2ICsxOTQ5LDggQEAgc3RhdGlj
IF9fbGF0ZW50X2VudHJvcHkgc3RydWN0IHRhc2tfc3RydWN0ICpjb3B5X3Byb2Nlc3MoCiAJ
cCA9IGR1cF90YXNrX3N0cnVjdChjdXJyZW50LCBub2RlKTsKIAlpZiAoIXApCiAJCWdvdG8g
Zm9ya19vdXQ7CisJaWYgKGFyZ3MtPmlvX3RocmVhZCkKKwkJcC0+ZmxhZ3MgfD0gUEZfSU9f
V09SS0VSOwogCiAJLyoKIAkgKiBUaGlzIF9tdXN0XyBoYXBwZW4gYmVmb3JlIHdlIGNhbGwg
ZnJlZV90YXNrKCksIGkuZS4gYmVmb3JlIHdlIGp1bXAKQEAgLTI0MTUsNiArMjQxNywzNCBA
QCBzdHJ1Y3QgbW1fc3RydWN0ICpjb3B5X2luaXRfbW0odm9pZCkKIAlyZXR1cm4gZHVwX21t
KE5VTEwsICZpbml0X21tKTsKIH0KIAorLyoKKyAqIFRoaXMgaXMgbGlrZSBrZXJuZWxfY2xv
bmUoKSwgYnV0IHNoYXZlZCBkb3duIGFuZCB0YWlsb3JlZCB0byBqdXN0CisgKiBjcmVhdGlu
ZyBpb191cmluZyB3b3JrZXJzLiBJdCByZXR1cm5zIGEgY3JlYXRlZCB0YXNrLCBvciBhbiBl
cnJvciBwb2ludGVyLgorICogVGhlIHJldHVybmVkIHRhc2sgaXMgaW5hY3RpdmUsIGFuZCB0
aGUgY2FsbGVyIG11c3QgZmlyZSBpdCB1cCB0aHJvdWdoCisgKiB3YWtlX3VwX25ld190YXNr
KHApLiBBbGwgc2lnbmFscyBhcmUgYmxvY2tlZCBpbiB0aGUgY3JlYXRlZCB0YXNrLgorICov
CitzdHJ1Y3QgdGFza19zdHJ1Y3QgKmNyZWF0ZV9pb190aHJlYWQoaW50ICgqZm4pKHZvaWQg
KiksIHZvaWQgKmFyZywgaW50IG5vZGUpCit7CisJdW5zaWduZWQgbG9uZyBmbGFncyA9IENM
T05FX0ZTfENMT05FX0ZJTEVTfENMT05FX1NJR0hBTkR8Q0xPTkVfVEhSRUFEfAorCQkJCUNM
T05FX0lPOworCXN0cnVjdCBrZXJuZWxfY2xvbmVfYXJncyBhcmdzID0geworCQkuZmxhZ3MJ
CT0gKChsb3dlcl8zMl9iaXRzKGZsYWdzKSB8IENMT05FX1ZNIHwKKwkJCQkgICAgQ0xPTkVf
VU5UUkFDRUQpICYgfkNTSUdOQUwpLAorCQkuZXhpdF9zaWduYWwJPSAobG93ZXJfMzJfYml0
cyhmbGFncykgJiBDU0lHTkFMKSwKKwkJLnN0YWNrCQk9ICh1bnNpZ25lZCBsb25nKWZuLAor
CQkuc3RhY2tfc2l6ZQk9ICh1bnNpZ25lZCBsb25nKWFyZywKKwkJLmlvX3RocmVhZAk9IDEs
CisJfTsKKwlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzazsKKworCXRzayA9IGNvcHlfcHJvY2Vz
cyhOVUxMLCAwLCBub2RlLCAmYXJncyk7CisJaWYgKCFJU19FUlIodHNrKSkgeworCQlzaWdm
aWxsc2V0KCZ0c2stPmJsb2NrZWQpOworCQlzaWdkZWxzZXRtYXNrKCZ0c2stPmJsb2NrZWQs
IHNpZ21hc2soU0lHS0lMTCkpOworCX0KKwlyZXR1cm4gdHNrOworfQorCiAvKgogICogIE9r
LCB0aGlzIGlzIHRoZSBtYWluIGZvcmstcm91dGluZS4KICAqCi0tIAoyLjM5LjAKCg==

--------------rm6sZf9Xaj1ai4CrnqwoExsd--
