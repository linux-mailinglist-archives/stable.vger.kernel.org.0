Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 5BA1314D8BA
	for <lists+stable@lfdr.de>; Thu, 30 Jan 2020 11:12:36 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727089AbgA3KMc (ORCPT <rfc822;lists+stable@lfdr.de>);
        Thu, 30 Jan 2020 05:12:32 -0500
Received: from shards.monkeyblade.net ([23.128.96.9]:52664 "EHLO
        shards.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726873AbgA3KMb (ORCPT
        <rfc822;stable@vger.kernel.org>); Thu, 30 Jan 2020 05:12:31 -0500
Received: from localhost (unknown [IPv6:2001:982:756:1:57a7:3bfd:5e85:defb])
        (using TLSv1 with cipher AES256-SHA (256/256 bits))
        (Client did not present a certificate)
        (Authenticated sender: davem-davemloft)
        by shards.monkeyblade.net (Postfix) with ESMTPSA id 404C015AB16BA
        for <stable@vger.kernel.org>; Thu, 30 Jan 2020 02:12:29 -0800 (PST)
Date:   Thu, 30 Jan 2020 11:12:27 +0100 (CET)
Message-Id: <20200130.111227.499725814662724955.davem@davemloft.net>
To:     stable@vger.kernel.org
Subject: [PATCHES] Networking
From:   David Miller <davem@davemloft.net>
X-Mailer: Mew version 6.8 on Emacs 26.3
Mime-Version: 1.0
Content-Type: Multipart/Mixed;
 boundary="--Next_Part(Thu_Jan_30_11_12_27_2020_728)--"
Content-Transfer-Encoding: 7bit
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.5.12 (shards.monkeyblade.net [149.20.54.216]); Thu, 30 Jan 2020 02:12:30 -0800 (PST)
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

----Next_Part(Thu_Jan_30_11_12_27_2020_728)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


Please queue up the following networking bug fixes for v5.4 and v5.5
-stable, respectively.

Thank you!

----Next_Part(Thu_Jan_30_11_12_27_2020_728)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_54.mbox"

RnJvbSBlOTZjNDI4ZTMzNmNmMmFiZWY3YzhmZjY0OTQ3YzdhNGExZDU4MTQwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+CkRh
dGU6IEZyaSwgMjQgSmFuIDIwMjAgMTQ6NTc6MjAgLTA4MDAKU3ViamVjdDogW1BBVENIIDEvOV0g
bmV0X3NjaGVkOiBlbWF0Y2g6IHJlamVjdCBpbnZhbGlkIFRDRl9FTV9TSU1QTEUKClsgVXBzdHJl
YW0gY29tbWl0IDU1Y2Q5ZjY3ZjFlNDVkZTg1MTdjZGFhYjk4NWZiOGU1NmMwYmMxZDggXQoKSXQg
aXMgcG9zc2libGUgZm9yIG1hbGljaW91cyB1c2Vyc3BhY2UgdG8gc2V0IFRDRl9FTV9TSU1QTEUg
Yml0CmV2ZW4gZm9yIG1hdGNoZXMgdGhhdCBzaG91bGQgbm90IGhhdmUgdGhpcyBiaXQgc2V0LgoK
VGhpcyBjYW4gZm9vbCB0d28gcGxhY2VzIHVzaW5nIHRjZl9lbV9pc19zaW1wbGUoKQoKMSkgdGNm
X2VtX3RyZWVfZGVzdHJveSgpIC0+IG1lbW9yeSBsZWFrIG9mIGVtLT5kYXRhCiAgIGlmIG9wcy0+
ZGVzdHJveSgpIGlzIE5VTEwKCjIpIHRjZl9lbV90cmVlX2R1bXAoKSB3cm9uZ2x5IHJlcG9ydC9s
ZWFrIDQgbG93LW9yZGVyIGJ5dGVzCiAgIG9mIGEga2VybmVsIHBvaW50ZXIuCgpCVUc6IG1lbW9y
eSBsZWFrCnVucmVmZXJlbmNlZCBvYmplY3QgMHhmZmZmODg4MTIxODUwYTQwIChzaXplIDMyKToK
ICBjb21tICJzeXotZXhlY3V0b3I5MjciLCBwaWQgNzE5MywgamlmZmllcyA0Mjk0OTQxNjU1IChh
Z2UgMTkuODQwcykKICBoZXggZHVtcCAoZmlyc3QgMzIgYnl0ZXMpOgogICAgMDAgMDAgMDAgMDAg
MDEgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgIC4uLi4uLi4uLi4uLi4uLi4KICAg
IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwICAuLi4uLi4u
Li4uLi4uLi4uCiAgYmFja3RyYWNlOgogICAgWzwwMDAwMDAwMGY2NzAzNmVhPl0ga21lbWxlYWtf
YWxsb2NfcmVjdXJzaXZlIGluY2x1ZGUvbGludXgva21lbWxlYWsuaDo0MyBbaW5saW5lXQogICAg
WzwwMDAwMDAwMGY2NzAzNmVhPl0gc2xhYl9wb3N0X2FsbG9jX2hvb2sgbW0vc2xhYi5oOjU4NiBb
aW5saW5lXQogICAgWzwwMDAwMDAwMGY2NzAzNmVhPl0gc2xhYl9hbGxvYyBtbS9zbGFiLmM6MzMy
MCBbaW5saW5lXQogICAgWzwwMDAwMDAwMGY2NzAzNmVhPl0gX19kb19rbWFsbG9jIG1tL3NsYWIu
YzozNjU0IFtpbmxpbmVdCiAgICBbPDAwMDAwMDAwZjY3MDM2ZWE+XSBfX2ttYWxsb2NfdHJhY2tf
Y2FsbGVyKzB4MTY1LzB4MzAwIG1tL3NsYWIuYzozNjcxCiAgICBbPDAwMDAwMDAwZmFiMGNjOGU+
XSBrbWVtZHVwKzB4MjcvMHg2MCBtbS91dGlsLmM6MTI3CiAgICBbPDAwMDAwMDAwZDk5OTJlMGE+
XSBrbWVtZHVwIGluY2x1ZGUvbGludXgvc3RyaW5nLmg6NDUzIFtpbmxpbmVdCiAgICBbPDAwMDAw
MDAwZDk5OTJlMGE+XSBlbV9uYnl0ZV9jaGFuZ2UrMHg1Yi8weDkwIG5ldC9zY2hlZC9lbV9uYnl0
ZS5jOjMyCiAgICBbPDAwMDAwMDAwN2UwNGY3MTE+XSB0Y2ZfZW1fdmFsaWRhdGUgbmV0L3NjaGVk
L2VtYXRjaC5jOjI0MSBbaW5saW5lXQogICAgWzwwMDAwMDAwMDdlMDRmNzExPl0gdGNmX2VtX3Ry
ZWVfdmFsaWRhdGUgbmV0L3NjaGVkL2VtYXRjaC5jOjM1OSBbaW5saW5lXQogICAgWzwwMDAwMDAw
MDdlMDRmNzExPl0gdGNmX2VtX3RyZWVfdmFsaWRhdGUrMHgzMzIvMHg0NmYgbmV0L3NjaGVkL2Vt
YXRjaC5jOjMwMAogICAgWzwwMDAwMDAwMDdhNzY5MjA0Pl0gYmFzaWNfc2V0X3Bhcm1zIG5ldC9z
Y2hlZC9jbHNfYmFzaWMuYzoxNTcgW2lubGluZV0KICAgIFs8MDAwMDAwMDA3YTc2OTIwND5dIGJh
c2ljX2NoYW5nZSsweDFkNy8weDVmMCBuZXQvc2NoZWQvY2xzX2Jhc2ljLmM6MjE5CiAgICBbPDAw
MDAwMDAwZTU3YTU5OTc+XSB0Y19uZXdfdGZpbHRlcisweDU2Ni8weGY3MCBuZXQvc2NoZWQvY2xz
X2FwaS5jOjIxMDQKICAgIFs8MDAwMDAwMDA3NGI2ODU1OT5dIHJ0bmV0bGlua19yY3ZfbXNnKzB4
M2IyLzB4NGIwIG5ldC9jb3JlL3J0bmV0bGluay5jOjU0MTUKICAgIFs8MDAwMDAwMDBiN2ZlNTNm
Yj5dIG5ldGxpbmtfcmN2X3NrYisweDYxLzB4MTcwIG5ldC9uZXRsaW5rL2FmX25ldGxpbmsuYzoy
NDc3CiAgICBbPDAwMDAwMDAwZTgzYTQwZDA+XSBydG5ldGxpbmtfcmN2KzB4MWQvMHgzMCBuZXQv
Y29yZS9ydG5ldGxpbmsuYzo1NDQyCiAgICBbPDAwMDAwMDAwZDYyYmE5MzM+XSBuZXRsaW5rX3Vu
aWNhc3Rfa2VybmVsIG5ldC9uZXRsaW5rL2FmX25ldGxpbmsuYzoxMzAyIFtpbmxpbmVdCiAgICBb
PDAwMDAwMDAwZDYyYmE5MzM+XSBuZXRsaW5rX3VuaWNhc3QrMHgyMjMvMHgzMTAgbmV0L25ldGxp
bmsvYWZfbmV0bGluay5jOjEzMjgKICAgIFs8MDAwMDAwMDA4ODA3MGY3Mj5dIG5ldGxpbmtfc2Vu
ZG1zZysweDJjMC8weDU3MCBuZXQvbmV0bGluay9hZl9uZXRsaW5rLmM6MTkxNwogICAgWzwwMDAw
MDAwMGY3MGIxNWVhPl0gc29ja19zZW5kbXNnX25vc2VjIG5ldC9zb2NrZXQuYzo2MzkgW2lubGlu
ZV0KICAgIFs8MDAwMDAwMDBmNzBiMTVlYT5dIHNvY2tfc2VuZG1zZysweDU0LzB4NzAgbmV0L3Nv
Y2tldC5jOjY1OQogICAgWzwwMDAwMDAwMGVmOTVhOWJlPl0gX19fX3N5c19zZW5kbXNnKzB4MmQw
LzB4MzAwIG5ldC9zb2NrZXQuYzoyMzMwCiAgICBbPDAwMDAwMDAwYjY1MGYxYWI+XSBfX19zeXNf
c2VuZG1zZysweDhhLzB4ZDAgbmV0L3NvY2tldC5jOjIzODQKICAgIFs8MDAwMDAwMDA1NWJmYTc0
YT5dIF9fc3lzX3NlbmRtc2crMHg4MC8weGYwIG5ldC9zb2NrZXQuYzoyNDE3CiAgICBbPDAwMDAw
MDAwMmFiYWMxODM+XSBfX2RvX3N5c19zZW5kbXNnIG5ldC9zb2NrZXQuYzoyNDI2IFtpbmxpbmVd
CiAgICBbPDAwMDAwMDAwMmFiYWMxODM+XSBfX3NlX3N5c19zZW5kbXNnIG5ldC9zb2NrZXQuYzoy
NDI0IFtpbmxpbmVdCiAgICBbPDAwMDAwMDAwMmFiYWMxODM+XSBfX3g2NF9zeXNfc2VuZG1zZysw
eDIzLzB4MzAgbmV0L3NvY2tldC5jOjI0MjQKCkZpeGVzOiAxZGExNzdlNGMzZjQgKCJMaW51eC0y
LjYuMTItcmMyIikKU2lnbmVkLW9mZi1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29nbGUu
Y29tPgpSZXBvcnRlZC1ieTogc3l6Ym90KzAzYzQ3MzhlZDI5ZDVkMzY2ZGRmQHN5emthbGxlci5h
cHBzcG90bWFpbC5jb20KQ2M6IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpB
Y2tlZC1ieTogQ29uZyBXYW5nIDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQvc2NoZWQv
ZW1hdGNoLmMgfCAzICsrKwogMSBmaWxlIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKQoKZGlmZiAt
LWdpdCBhL25ldC9zY2hlZC9lbWF0Y2guYyBiL25ldC9zY2hlZC9lbWF0Y2guYwppbmRleCBkMDE0
MGE5MjY5NGEuLmRkM2I4YzExYTJlMCAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL2VtYXRjaC5jCisr
KyBiL25ldC9zY2hlZC9lbWF0Y2guYwpAQCAtMjM4LDYgKzIzOCw5IEBAIHN0YXRpYyBpbnQgdGNm
X2VtX3ZhbGlkYXRlKHN0cnVjdCB0Y2ZfcHJvdG8gKnRwLAogCQkJZ290byBlcnJvdXQ7CiAKIAkJ
aWYgKGVtLT5vcHMtPmNoYW5nZSkgeworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWlmIChlbV9oZHIt
PmZsYWdzICYgVENGX0VNX1NJTVBMRSkKKwkJCQlnb3RvIGVycm91dDsKIAkJCWVyciA9IGVtLT5v
cHMtPmNoYW5nZShuZXQsIGRhdGEsIGRhdGFfbGVuLCBlbSk7CiAJCQlpZiAoZXJyIDwgMCkKIAkJ
CQlnb3RvIGVycm91dDsKLS0gCjIuMjEuMQoKCkZyb20gNTEzYjRhMDMzZWJjMDA3MjIzODQ1ZGQ3
MDY2ZTA4MWE3MzYwMTU5MiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogQ29uZyBXYW5n
IDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+CkRhdGU6IFRodSwgMjMgSmFuIDIwMjAgMTY6MjY6
MTggLTA4MDAKU3ViamVjdDogW1BBVENIIDIvOV0gbmV0X3NjaGVkOiBmaXggb3BzLT5iaW5kX2Ns
YXNzKCkgaW1wbGVtZW50YXRpb25zCgpbIFVwc3RyZWFtIGNvbW1pdCAyZTI0Y2Q3NTU1NTIzNTBi
OTRhNzYxNzYxN2M2ODc3YjhjYmNiNzAxIF0KClRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9ucyBv
ZiBvcHMtPmJpbmRfY2xhc3MoKSBhcmUgbWVyZWx5CnNlYXJjaGluZyBmb3IgY2xhc3NpZCBhbmQg
dXBkYXRpbmcgY2xhc3MgaW4gdGhlIHN0cnVjdCB0Y2ZfcmVzdWx0LAp3aXRob3V0IGludm9raW5n
IGVpdGhlciBvZiBjbF9vcHMtPmJpbmRfdGNmKCkgb3IKY2xfb3BzLT51bmJpbmRfdGNmKCkuIFRo
aXMgYnJlYWtzIHRoZSBkZXNpZ24gb2YgdGhlbSBhcyBxZGlzYydzCmxpa2UgY2JxIHVzZSB0aGVt
IHRvIGNvdW50IGZpbHRlcnMgdG9vLiBUaGlzIGlzIHdoeSBzeXpib3QgdHJpZ2dlcmVkCnRoZSB3
YXJuaW5nIGluIGNicV9kZXN0cm95X2NsYXNzKCkuCgpJbiBvcmRlciB0byBmaXggdGhpcywgd2Ug
aGF2ZSB0byBjYWxsIGNsX29wcy0+YmluZF90Y2YoKSBhbmQKY2xfb3BzLT51bmJpbmRfdGNmKCkg
bGlrZSB0aGUgZmlsdGVyIGJpbmRpbmcgcGF0aC4gVGhpcyBwYXRjaCBkb2VzCnNvIGJ5IHJlZmFj
dG9yaW5nIG91dCB0d28gaGVscGVyIGZ1bmN0aW9ucyBfX3RjZl9iaW5kX2ZpbHRlcigpCmFuZCBf
X3RjZl91bmJpbmRfZmlsdGVyKCksIHdoaWNoIGFyZSBsb2NrbGVzcyBhbmQgYWNjZXB0IGEgUWRp
c2MKcG9pbnRlciwgdGhlbiB0ZWFjaGluZyBlYWNoIGltcGxlbWVudGF0aW9uIHRvIGNhbGwgdGhl
bSBjb3JyZWN0bHkuCgpOb3RlLCB3ZSBtZXJlbHkgcGFzcyB0aGUgUWRpc2MgcG9pbnRlciBhcyBh
biBvcGFxdWUgcG9pbnRlciB0bwplYWNoIGZpbHRlciwgdGhleSBvbmx5IG5lZWQgdG8gcGFzcyBp
dCBkb3duIHRvIHRoZSBoZWxwZXIKZnVuY3Rpb25zIHdpdGhvdXQgdW5kZXJzdGFuZGluZyBpdCBh
dCBhbGwuCgpGaXhlczogMDdkNzlmYzdkOTRlICgibmV0X3NjaGVkOiBhZGQgcmV2ZXJzZSBiaW5k
aW5nIGZvciB0YyBjbGFzcyIpClJlcG9ydGVkLWFuZC10ZXN0ZWQtYnk6IHN5emJvdCswYTA1OTYy
MjAyMThmY2I2MDNhOEBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tClJlcG9ydGVkLWFuZC10ZXN0
ZWQtYnk6IHN5emJvdCs2M2JkYjYwMDY5NjFkOGM5MTdjNkBzeXprYWxsZXIuYXBwc3BvdG1haWwu
Y29tCkNjOiBKYW1hbCBIYWRpIFNhbGltIDxqaHNAbW9qYXRhdHUuY29tPgpDYzogSmlyaSBQaXJr
byA8amlyaUByZXNudWxsaS51cz4KU2lnbmVkLW9mZi1ieTogQ29uZyBXYW5nIDx4aXlvdS53YW5n
Y29uZ0BnbWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2
ZW1sb2Z0Lm5ldD4KLS0tCiBpbmNsdWRlL25ldC9wa3RfY2xzLmggICAgIHwgMzMgKysrKysrKysr
KysrKysrKysrKy0tLS0tLS0tLS0tLS0tCiBpbmNsdWRlL25ldC9zY2hfZ2VuZXJpYy5oIHwgIDMg
KystCiBuZXQvc2NoZWQvY2xzX2Jhc2ljLmMgICAgIHwgMTEgKysrKysrKystLS0KIG5ldC9zY2hl
ZC9jbHNfYnBmLmMgICAgICAgfCAxMSArKysrKysrKy0tLQogbmV0L3NjaGVkL2Nsc19mbG93ZXIu
YyAgICB8IDExICsrKysrKysrLS0tCiBuZXQvc2NoZWQvY2xzX2Z3LmMgICAgICAgIHwgMTEgKysr
KysrKystLS0KIG5ldC9zY2hlZC9jbHNfbWF0Y2hhbGwuYyAgfCAxMSArKysrKysrKy0tLQogbmV0
L3NjaGVkL2Nsc19yb3V0ZS5jICAgICB8IDExICsrKysrKysrLS0tCiBuZXQvc2NoZWQvY2xzX3Jz
dnAuaCAgICAgIHwgMTEgKysrKysrKystLS0KIG5ldC9zY2hlZC9jbHNfdGNpbmRleC5jICAgfCAx
MSArKysrKysrKy0tLQogbmV0L3NjaGVkL2Nsc191MzIuYyAgICAgICB8IDExICsrKysrKysrLS0t
CiBuZXQvc2NoZWQvc2NoX2FwaS5jICAgICAgIHwgIDYgKysrKy0tCiAxMiBmaWxlcyBjaGFuZ2Vk
LCA5NyBpbnNlcnRpb25zKCspLCA0NCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRl
L25ldC9wa3RfY2xzLmggYi9pbmNsdWRlL25ldC9wa3RfY2xzLmgKaW5kZXggZTU1M2ZjODBlYjIz
Li45OTc2YWQyZjU0ZmQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbmV0L3BrdF9jbHMuaAorKysgYi9p
bmNsdWRlL25ldC9wa3RfY2xzLmgKQEAgLTE0MSwzMSArMTQxLDM4IEBAIF9fY2xzX3NldF9jbGFz
cyh1bnNpZ25lZCBsb25nICpjbHAsIHVuc2lnbmVkIGxvbmcgY2wpCiAJcmV0dXJuIHhjaGcoY2xw
LCBjbCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZwotY2xzX3NldF9jbGFzcyhz
dHJ1Y3QgUWRpc2MgKnEsIHVuc2lnbmVkIGxvbmcgKmNscCwgdW5zaWduZWQgbG9uZyBjbCkKK3N0
YXRpYyBpbmxpbmUgdm9pZAorX190Y2ZfYmluZF9maWx0ZXIoc3RydWN0IFFkaXNjICpxLCBzdHJ1
Y3QgdGNmX3Jlc3VsdCAqciwgdW5zaWduZWQgbG9uZyBiYXNlKQogewotCXVuc2lnbmVkIGxvbmcg
b2xkX2NsOworCXVuc2lnbmVkIGxvbmcgY2w7CiAKLQlzY2hfdHJlZV9sb2NrKHEpOwotCW9sZF9j
bCA9IF9fY2xzX3NldF9jbGFzcyhjbHAsIGNsKTsKLQlzY2hfdHJlZV91bmxvY2socSk7Ci0JcmV0
dXJuIG9sZF9jbDsKKwljbCA9IHEtPm9wcy0+Y2xfb3BzLT5iaW5kX3RjZihxLCBiYXNlLCByLT5j
bGFzc2lkKTsKKwljbCA9IF9fY2xzX3NldF9jbGFzcygmci0+Y2xhc3MsIGNsKTsKKwlpZiAoY2wp
CisJCXEtPm9wcy0+Y2xfb3BzLT51bmJpbmRfdGNmKHEsIGNsKTsKIH0KIAogc3RhdGljIGlubGlu
ZSB2b2lkCiB0Y2ZfYmluZF9maWx0ZXIoc3RydWN0IHRjZl9wcm90byAqdHAsIHN0cnVjdCB0Y2Zf
cmVzdWx0ICpyLCB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IFFkaXNjICpxID0gdHAt
PmNoYWluLT5ibG9jay0+cTsKLQl1bnNpZ25lZCBsb25nIGNsOwogCiAJLyogQ2hlY2sgcSBhcyBp
dCBpcyBub3Qgc2V0IGZvciBzaGFyZWQgYmxvY2tzLiBJbiB0aGF0IGNhc2UsCiAJICogc2V0dGlu
ZyBjbGFzcyBpcyBub3Qgc3VwcG9ydGVkLgogCSAqLwogCWlmICghcSkKIAkJcmV0dXJuOwotCWNs
ID0gcS0+b3BzLT5jbF9vcHMtPmJpbmRfdGNmKHEsIGJhc2UsIHItPmNsYXNzaWQpOwotCWNsID0g
Y2xzX3NldF9jbGFzcyhxLCAmci0+Y2xhc3MsIGNsKTsKLQlpZiAoY2wpCisJc2NoX3RyZWVfbG9j
ayhxKTsKKwlfX3RjZl9iaW5kX2ZpbHRlcihxLCByLCBiYXNlKTsKKwlzY2hfdHJlZV91bmxvY2so
cSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorX190Y2ZfdW5iaW5kX2ZpbHRlcihzdHJ1Y3Qg
UWRpc2MgKnEsIHN0cnVjdCB0Y2ZfcmVzdWx0ICpyKQoreworCXVuc2lnbmVkIGxvbmcgY2w7CisK
KwlpZiAoKGNsID0gX19jbHNfc2V0X2NsYXNzKCZyLT5jbGFzcywgMCkpICE9IDApCiAJCXEtPm9w
cy0+Y2xfb3BzLT51bmJpbmRfdGNmKHEsIGNsKTsKIH0KIApAQCAtMTczLDEyICsxODAsMTAgQEAg
c3RhdGljIGlubGluZSB2b2lkCiB0Y2ZfdW5iaW5kX2ZpbHRlcihzdHJ1Y3QgdGNmX3Byb3RvICp0
cCwgc3RydWN0IHRjZl9yZXN1bHQgKnIpCiB7CiAJc3RydWN0IFFkaXNjICpxID0gdHAtPmNoYWlu
LT5ibG9jay0+cTsKLQl1bnNpZ25lZCBsb25nIGNsOwogCiAJaWYgKCFxKQogCQlyZXR1cm47Ci0J
aWYgKChjbCA9IF9fY2xzX3NldF9jbGFzcygmci0+Y2xhc3MsIDApKSAhPSAwKQotCQlxLT5vcHMt
PmNsX29wcy0+dW5iaW5kX3RjZihxLCBjbCk7CisJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCByKTsK
IH0KIAogc3RydWN0IHRjZl9leHRzIHsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbmV0L3NjaF9nZW5l
cmljLmggYi9pbmNsdWRlL25ldC9zY2hfZ2VuZXJpYy5oCmluZGV4IDMyZTQxOGRiYTEzMy4uZDMz
NGU0NjA5ZGQ0IDEwMDY0NAotLS0gYS9pbmNsdWRlL25ldC9zY2hfZ2VuZXJpYy5oCisrKyBiL2lu
Y2x1ZGUvbmV0L3NjaF9nZW5lcmljLmgKQEAgLTMxOCw3ICszMTgsOCBAQCBzdHJ1Y3QgdGNmX3By
b3RvX29wcyB7CiAJCQkJCSAgdm9pZCAqdHlwZV9kYXRhKTsKIAl2b2lkCQkJKCpod19kZWwpKHN0
cnVjdCB0Y2ZfcHJvdG8gKnRwLAogCQkJCQkgIHZvaWQgKnR5cGVfZGF0YSk7Ci0Jdm9pZAkJCSgq
YmluZF9jbGFzcykodm9pZCAqLCB1MzIsIHVuc2lnbmVkIGxvbmcpOworCXZvaWQJCQkoKmJpbmRf
Y2xhc3MpKHZvaWQgKiwgdTMyLCB1bnNpZ25lZCBsb25nLAorCQkJCQkgICAgICB2b2lkICosIHVu
c2lnbmVkIGxvbmcpOwogCXZvaWQgKgkJCSgqdG1wbHRfY3JlYXRlKShzdHJ1Y3QgbmV0ICpuZXQs
CiAJCQkJCQlzdHJ1Y3QgdGNmX2NoYWluICpjaGFpbiwKIAkJCQkJCXN0cnVjdCBubGF0dHIgKip0
Y2EsCmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX2Jhc2ljLmMgYi9uZXQvc2NoZWQvY2xzX2Jh
c2ljLmMKaW5kZXggNGFhZmJlM2Q0MzVjLi5mMjU2YTdjNjkwOTMgMTAwNjQ0Ci0tLSBhL25ldC9z
Y2hlZC9jbHNfYmFzaWMuYworKysgYi9uZXQvc2NoZWQvY2xzX2Jhc2ljLmMKQEAgLTI2MywxMiAr
MjYzLDE3IEBAIHN0YXRpYyB2b2lkIGJhc2ljX3dhbGsoc3RydWN0IHRjZl9wcm90byAqdHAsIHN0
cnVjdCB0Y2Zfd2Fsa2VyICphcmcsCiAJfQogfQogCi1zdGF0aWMgdm9pZCBiYXNpY19iaW5kX2Ns
YXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBjbCkKK3N0YXRpYyB2b2lk
IGJhc2ljX2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNs
LCB2b2lkICpxLAorCQkJICAgICB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IGJhc2lj
X2ZpbHRlciAqZiA9IGZoOwogCi0JaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQgPT0gY2xhc3NpZCkK
LQkJZi0+cmVzLmNsYXNzID0gY2w7CisJaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQgPT0gY2xhc3Np
ZCkgeworCQlpZiAoY2wpCisJCQlfX3RjZl9iaW5kX2ZpbHRlcihxLCAmZi0+cmVzLCBiYXNlKTsK
KwkJZWxzZQorCQkJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCAmZi0+cmVzKTsKKwl9CiB9CiAKIHN0
YXRpYyBpbnQgYmFzaWNfZHVtcChzdHJ1Y3QgbmV0ICpuZXQsIHN0cnVjdCB0Y2ZfcHJvdG8gKnRw
LCB2b2lkICpmaCwKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9jbHNfYnBmLmMgYi9uZXQvc2NoZWQv
Y2xzX2JwZi5jCmluZGV4IDgyMjllZDRhNjdiZS4uNmUzZTYzZGIwZTAxIDEwMDY0NAotLS0gYS9u
ZXQvc2NoZWQvY2xzX2JwZi5jCisrKyBiL25ldC9zY2hlZC9jbHNfYnBmLmMKQEAgLTYzMSwxMiAr
NjMxLDE3IEBAIHN0YXRpYyBpbnQgY2xzX2JwZl9kdW1wKHN0cnVjdCBuZXQgKm5ldCwgc3RydWN0
IHRjZl9wcm90byAqdHAsIHZvaWQgKmZoLAogCXJldHVybiAtMTsKIH0KIAotc3RhdGljIHZvaWQg
Y2xzX2JwZl9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBj
bCkKK3N0YXRpYyB2b2lkIGNsc19icGZfYmluZF9jbGFzcyh2b2lkICpmaCwgdTMyIGNsYXNzaWQs
IHVuc2lnbmVkIGxvbmcgY2wsCisJCQkgICAgICAgdm9pZCAqcSwgdW5zaWduZWQgbG9uZyBiYXNl
KQogewogCXN0cnVjdCBjbHNfYnBmX3Byb2cgKnByb2cgPSBmaDsKIAotCWlmIChwcm9nICYmIHBy
b2ctPnJlcy5jbGFzc2lkID09IGNsYXNzaWQpCi0JCXByb2ctPnJlcy5jbGFzcyA9IGNsOworCWlm
IChwcm9nICYmIHByb2ctPnJlcy5jbGFzc2lkID09IGNsYXNzaWQpIHsKKwkJaWYgKGNsKQorCQkJ
X190Y2ZfYmluZF9maWx0ZXIocSwgJnByb2ctPnJlcywgYmFzZSk7CisJCWVsc2UKKwkJCV9fdGNm
X3VuYmluZF9maWx0ZXIocSwgJnByb2ctPnJlcyk7CisJfQogfQogCiBzdGF0aWMgdm9pZCBjbHNf
YnBmX3dhbGsoc3RydWN0IHRjZl9wcm90byAqdHAsIHN0cnVjdCB0Y2Zfd2Fsa2VyICphcmcsCmRp
ZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX2Zsb3dlci5jIGIvbmV0L3NjaGVkL2Nsc19mbG93ZXIu
YwppbmRleCA1Y2Y4MTYzNzEwYzguLjczOTRlMDFjMGM5YyAxMDA2NDQKLS0tIGEvbmV0L3NjaGVk
L2Nsc19mbG93ZXIuYworKysgYi9uZXQvc2NoZWQvY2xzX2Zsb3dlci5jCkBAIC0yNTExLDEyICsy
NTExLDE3IEBAIHN0YXRpYyBpbnQgZmxfdG1wbHRfZHVtcChzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBz
dHJ1Y3QgbmV0ICpuZXQsIHZvaWQgKnRtcGx0X3ByaXYpCiAJcmV0dXJuIC1FTVNHU0laRTsKIH0K
IAotc3RhdGljIHZvaWQgZmxfYmluZF9jbGFzcyh2b2lkICpmaCwgdTMyIGNsYXNzaWQsIHVuc2ln
bmVkIGxvbmcgY2wpCitzdGF0aWMgdm9pZCBmbF9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xh
c3NpZCwgdW5zaWduZWQgbG9uZyBjbCwgdm9pZCAqcSwKKwkJCSAgdW5zaWduZWQgbG9uZyBiYXNl
KQogewogCXN0cnVjdCBjbHNfZmxfZmlsdGVyICpmID0gZmg7CiAKLQlpZiAoZiAmJiBmLT5yZXMu
Y2xhc3NpZCA9PSBjbGFzc2lkKQotCQlmLT5yZXMuY2xhc3MgPSBjbDsKKwlpZiAoZiAmJiBmLT5y
ZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNmX2JpbmRfZmlsdGVy
KHEsICZmLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3RjZl91bmJpbmRfZmlsdGVyKHEsICZm
LT5yZXMpOworCX0KIH0KIAogc3RhdGljIGJvb2wgZmxfZGVsZXRlX2VtcHR5KHN0cnVjdCB0Y2Zf
cHJvdG8gKnRwKQpkaWZmIC0tZ2l0IGEvbmV0L3NjaGVkL2Nsc19mdy5jIGIvbmV0L3NjaGVkL2Ns
c19mdy5jCmluZGV4IGM5NDk2YzkyMGQ2Zi4uZWM5NDUyOTQ2MjZhIDEwMDY0NAotLS0gYS9uZXQv
c2NoZWQvY2xzX2Z3LmMKKysrIGIvbmV0L3NjaGVkL2Nsc19mdy5jCkBAIC00MTksMTIgKzQxOSwx
NyBAQCBzdGF0aWMgaW50IGZ3X2R1bXAoc3RydWN0IG5ldCAqbmV0LCBzdHJ1Y3QgdGNmX3Byb3Rv
ICp0cCwgdm9pZCAqZmgsCiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9pZCBmd19iaW5kX2Ns
YXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBjbCkKK3N0YXRpYyB2b2lk
IGZ3X2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsLCB2
b2lkICpxLAorCQkJICB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IGZ3X2ZpbHRlciAq
ZiA9IGZoOwogCi0JaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQgPT0gY2xhc3NpZCkKLQkJZi0+cmVz
LmNsYXNzID0gY2w7CisJaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQgPT0gY2xhc3NpZCkgeworCQlp
ZiAoY2wpCisJCQlfX3RjZl9iaW5kX2ZpbHRlcihxLCAmZi0+cmVzLCBiYXNlKTsKKwkJZWxzZQor
CQkJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCAmZi0+cmVzKTsKKwl9CiB9CiAKIHN0YXRpYyBzdHJ1
Y3QgdGNmX3Byb3RvX29wcyBjbHNfZndfb3BzIF9fcmVhZF9tb3N0bHkgPSB7CmRpZmYgLS1naXQg
YS9uZXQvc2NoZWQvY2xzX21hdGNoYWxsLmMgYi9uZXQvc2NoZWQvY2xzX21hdGNoYWxsLmMKaW5k
ZXggN2ZjMmViNjJhYTk4Li4wMzljYzg2OTc0ZjQgMTAwNjQ0Ci0tLSBhL25ldC9zY2hlZC9jbHNf
bWF0Y2hhbGwuYworKysgYi9uZXQvc2NoZWQvY2xzX21hdGNoYWxsLmMKQEAgLTM5MywxMiArMzkz
LDE3IEBAIHN0YXRpYyBpbnQgbWFsbF9kdW1wKHN0cnVjdCBuZXQgKm5ldCwgc3RydWN0IHRjZl9w
cm90byAqdHAsIHZvaWQgKmZoLAogCXJldHVybiAtMTsKIH0KIAotc3RhdGljIHZvaWQgbWFsbF9i
aW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBjbCkKK3N0YXRp
YyB2b2lkIG1hbGxfYmluZF9jbGFzcyh2b2lkICpmaCwgdTMyIGNsYXNzaWQsIHVuc2lnbmVkIGxv
bmcgY2wsIHZvaWQgKnEsCisJCQkgICAgdW5zaWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCBj
bHNfbWFsbF9oZWFkICpoZWFkID0gZmg7CiAKLQlpZiAoaGVhZCAmJiBoZWFkLT5yZXMuY2xhc3Np
ZCA9PSBjbGFzc2lkKQotCQloZWFkLT5yZXMuY2xhc3MgPSBjbDsKKwlpZiAoaGVhZCAmJiBoZWFk
LT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNmX2JpbmRfZmls
dGVyKHEsICZoZWFkLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3RjZl91bmJpbmRfZmlsdGVy
KHEsICZoZWFkLT5yZXMpOworCX0KIH0KIAogc3RhdGljIHN0cnVjdCB0Y2ZfcHJvdG9fb3BzIGNs
c19tYWxsX29wcyBfX3JlYWRfbW9zdGx5ID0gewpkaWZmIC0tZ2l0IGEvbmV0L3NjaGVkL2Nsc19y
b3V0ZS5jIGIvbmV0L3NjaGVkL2Nsc19yb3V0ZS5jCmluZGV4IDJkOWUwYjQ0ODRlYS4uNmY4Nzg2
YjA2YmRlIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX3JvdXRlLmMKKysrIGIvbmV0L3NjaGVk
L2Nsc19yb3V0ZS5jCkBAIC02NDEsMTIgKzY0MSwxNyBAQCBzdGF0aWMgaW50IHJvdXRlNF9kdW1w
KHN0cnVjdCBuZXQgKm5ldCwgc3RydWN0IHRjZl9wcm90byAqdHAsIHZvaWQgKmZoLAogCXJldHVy
biAtMTsKIH0KIAotc3RhdGljIHZvaWQgcm91dGU0X2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBj
bGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGljIHZvaWQgcm91dGU0X2JpbmRfY2xhc3Mo
dm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsLCB2b2lkICpxLAorCQkJICAg
ICAgdW5zaWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCByb3V0ZTRfZmlsdGVyICpmID0gZmg7
CiAKLQlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKQotCQlmLT5yZXMuY2xhc3Mg
PSBjbDsKKwlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkK
KwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZmLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3Rj
Zl91bmJpbmRfZmlsdGVyKHEsICZmLT5yZXMpOworCX0KIH0KIAogc3RhdGljIHN0cnVjdCB0Y2Zf
cHJvdG9fb3BzIGNsc19yb3V0ZTRfb3BzIF9fcmVhZF9tb3N0bHkgPSB7CmRpZmYgLS1naXQgYS9u
ZXQvc2NoZWQvY2xzX3JzdnAuaCBiL25ldC9zY2hlZC9jbHNfcnN2cC5oCmluZGV4IDJmM2MwM2Iy
NWQ1ZC4uYzIyNjI0MTMxOTQ5IDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX3JzdnAuaAorKysg
Yi9uZXQvc2NoZWQvY2xzX3JzdnAuaApAQCAtNzM4LDEyICs3MzgsMTcgQEAgc3RhdGljIGludCBy
c3ZwX2R1bXAoc3RydWN0IG5ldCAqbmV0LCBzdHJ1Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqZmgs
CiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9pZCByc3ZwX2JpbmRfY2xhc3Modm9pZCAqZmgs
IHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGljIHZvaWQgcnN2cF9iaW5kX2Ns
YXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBjbCwgdm9pZCAqcSwKKwkJ
CSAgICB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IHJzdnBfZmlsdGVyICpmID0gZmg7
CiAKLQlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKQotCQlmLT5yZXMuY2xhc3Mg
PSBjbDsKKwlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkK
KwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZmLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3Rj
Zl91bmJpbmRfZmlsdGVyKHEsICZmLT5yZXMpOworCX0KIH0KIAogc3RhdGljIHN0cnVjdCB0Y2Zf
cHJvdG9fb3BzIFJTVlBfT1BTIF9fcmVhZF9tb3N0bHkgPSB7CmRpZmYgLS1naXQgYS9uZXQvc2No
ZWQvY2xzX3RjaW5kZXguYyBiL25ldC9zY2hlZC9jbHNfdGNpbmRleC5jCmluZGV4IGU1NzNlNWE1
Yzc5NC4uM2Q0YTEyODAzNTJmIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX3RjaW5kZXguYwor
KysgYi9uZXQvc2NoZWQvY2xzX3RjaW5kZXguYwpAQCAtNjU0LDEyICs2NTQsMTcgQEAgc3RhdGlj
IGludCB0Y2luZGV4X2R1bXAoc3RydWN0IG5ldCAqbmV0LCBzdHJ1Y3QgdGNmX3Byb3RvICp0cCwg
dm9pZCAqZmgsCiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9pZCB0Y2luZGV4X2JpbmRfY2xh
c3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGljIHZvaWQg
dGNpbmRleF9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBj
bCwKKwkJCSAgICAgICB2b2lkICpxLCB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IHRj
aW5kZXhfZmlsdGVyX3Jlc3VsdCAqciA9IGZoOwogCi0JaWYgKHIgJiYgci0+cmVzLmNsYXNzaWQg
PT0gY2xhc3NpZCkKLQkJci0+cmVzLmNsYXNzID0gY2w7CisJaWYgKHIgJiYgci0+cmVzLmNsYXNz
aWQgPT0gY2xhc3NpZCkgeworCQlpZiAoY2wpCisJCQlfX3RjZl9iaW5kX2ZpbHRlcihxLCAmci0+
cmVzLCBiYXNlKTsKKwkJZWxzZQorCQkJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCAmci0+cmVzKTsK
Kwl9CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgdGNmX3Byb3RvX29wcyBjbHNfdGNpbmRleF9vcHMgX19y
ZWFkX21vc3RseSA9IHsKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9jbHNfdTMyLmMgYi9uZXQvc2No
ZWQvY2xzX3UzMi5jCmluZGV4IGEwZTZmYWM2MTNkZS4uZTE1ZmYzMzU5NTNkIDEwMDY0NAotLS0g
YS9uZXQvc2NoZWQvY2xzX3UzMi5jCisrKyBiL25ldC9zY2hlZC9jbHNfdTMyLmMKQEAgLTEyNTUs
MTIgKzEyNTUsMTcgQEAgc3RhdGljIGludCB1MzJfcmVvZmZsb2FkKHN0cnVjdCB0Y2ZfcHJvdG8g
KnRwLCBib29sIGFkZCwgZmxvd19zZXR1cF9jYl90ICpjYiwKIAlyZXR1cm4gMDsKIH0KIAotc3Rh
dGljIHZvaWQgdTMyX2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBs
b25nIGNsKQorc3RhdGljIHZvaWQgdTMyX2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lk
LCB1bnNpZ25lZCBsb25nIGNsLCB2b2lkICpxLAorCQkJICAgdW5zaWduZWQgbG9uZyBiYXNlKQog
ewogCXN0cnVjdCB0Y191X2tub2RlICpuID0gZmg7CiAKLQlpZiAobiAmJiBuLT5yZXMuY2xhc3Np
ZCA9PSBjbGFzc2lkKQotCQluLT5yZXMuY2xhc3MgPSBjbDsKKwlpZiAobiAmJiBuLT5yZXMuY2xh
c3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZu
LT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3RjZl91bmJpbmRfZmlsdGVyKHEsICZuLT5yZXMp
OworCX0KIH0KIAogc3RhdGljIGludCB1MzJfZHVtcChzdHJ1Y3QgbmV0ICpuZXQsIHN0cnVjdCB0
Y2ZfcHJvdG8gKnRwLCB2b2lkICpmaCwKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9zY2hfYXBpLmMg
Yi9uZXQvc2NoZWQvc2NoX2FwaS5jCmluZGV4IDEwNDc4MjVkOWY0OC4uOTQzYWQzNDI1MzgwIDEw
MDY0NAotLS0gYS9uZXQvc2NoZWQvc2NoX2FwaS5jCisrKyBiL25ldC9zY2hlZC9zY2hfYXBpLmMK
QEAgLTE4OTEsOCArMTg5MSw5IEBAIHN0YXRpYyBpbnQgdGNsYXNzX2RlbF9ub3RpZnkoc3RydWN0
IG5ldCAqbmV0LAogCiBzdHJ1Y3QgdGNmX2JpbmRfYXJncyB7CiAJc3RydWN0IHRjZl93YWxrZXIg
dzsKLQl1MzIgY2xhc3NpZDsKKwl1bnNpZ25lZCBsb25nIGJhc2U7CiAJdW5zaWduZWQgbG9uZyBj
bDsKKwl1MzIgY2xhc3NpZDsKIH07CiAKIHN0YXRpYyBpbnQgdGNmX25vZGVfYmluZChzdHJ1Y3Qg
dGNmX3Byb3RvICp0cCwgdm9pZCAqbiwgc3RydWN0IHRjZl93YWxrZXIgKmFyZykKQEAgLTE5MDMs
NyArMTkwNCw3IEBAIHN0YXRpYyBpbnQgdGNmX25vZGVfYmluZChzdHJ1Y3QgdGNmX3Byb3RvICp0
cCwgdm9pZCAqbiwgc3RydWN0IHRjZl93YWxrZXIgKmFyZykKIAkJc3RydWN0IFFkaXNjICpxID0g
dGNmX2Jsb2NrX3EodHAtPmNoYWluLT5ibG9jayk7CiAKIAkJc2NoX3RyZWVfbG9jayhxKTsKLQkJ
dHAtPm9wcy0+YmluZF9jbGFzcyhuLCBhLT5jbGFzc2lkLCBhLT5jbCk7CisJCXRwLT5vcHMtPmJp
bmRfY2xhc3MobiwgYS0+Y2xhc3NpZCwgYS0+Y2wsIHEsIGEtPmJhc2UpOwogCQlzY2hfdHJlZV91
bmxvY2socSk7CiAJfQogCXJldHVybiAwOwpAQCAtMTkzNiw2ICsxOTM3LDcgQEAgc3RhdGljIHZv
aWQgdGNfYmluZF90Y2xhc3Moc3RydWN0IFFkaXNjICpxLCB1MzIgcG9ydGlkLCB1MzIgY2xpZCwK
IAogCQkJYXJnLncuZm4gPSB0Y2Zfbm9kZV9iaW5kOwogCQkJYXJnLmNsYXNzaWQgPSBjbGlkOwor
CQkJYXJnLmJhc2UgPSBjbDsKIAkJCWFyZy5jbCA9IG5ld19jbDsKIAkJCXRwLT5vcHMtPndhbGso
dHAsICZhcmcudywgdHJ1ZSk7CiAJCX0KLS0gCjIuMjEuMQoKCkZyb20gZjlhM2I1ZmFmMWI4ZDY0
MzU3NDcwOTIxZWUyZTIyNjg3MzljMWNiNSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTog
Q29uZyBXYW5nIDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+CkRhdGU6IFRodSwgMjMgSmFuIDIw
MjAgMTc6Mjc6MDggLTA4MDAKU3ViamVjdDogW1BBVENIIDMvOV0gbmV0X3NjaGVkOiB3YWxrIHRo
cm91Z2ggYWxsIGNoaWxkIGNsYXNzZXMgaW4KIHRjX2JpbmRfdGNsYXNzKCkKClsgVXBzdHJlYW0g
Y29tbWl0IDc2MGQyMjhlMzIyZTk5Y2RmNmQ4MWI0YjYwYTI2OGI4ZjEzY2Y2N2EgXQoKSW4gYSBj
b21wbGV4IFRDIGNsYXNzIGhpZXJhcmNoeSBsaWtlIHRoaXM6Cgp0YyBxZGlzYyBhZGQgZGV2IGV0
aDAgcm9vdCBoYW5kbGUgMTowIGNicSBiYW5kd2lkdGggMTAwTWJpdCAgICAgICAgIFwKICBhdnBr
dCAxMDAwIGNlbGwgOAp0YyBjbGFzcyBhZGQgZGV2IGV0aDAgcGFyZW50IDE6MCBjbGFzc2lkIDE6
MSBjYnEgYmFuZHdpZHRoIDEwME1iaXQgIFwKICByYXRlIDZNYml0IHdlaWdodCAwLjZNYml0IHBy
aW8gOCBhbGxvdCAxNTE0IGNlbGwgOCBtYXhidXJzdCAyMCAgICAgIFwKICBhdnBrdCAxMDAwIGJv
dW5kZWQKCnRjIGZpbHRlciBhZGQgZGV2IGV0aDAgcGFyZW50IDE6MCBwcm90b2NvbCBpcCBwcmlv
IDEgdTMyIG1hdGNoIGlwIFwKICBzcG9ydCA4MCAweGZmZmYgZmxvd2lkIDE6Mwp0YyBmaWx0ZXIg
YWRkIGRldiBldGgwIHBhcmVudCAxOjAgcHJvdG9jb2wgaXAgcHJpbyAxIHUzMiBtYXRjaCBpcCBc
CiAgc3BvcnQgMjUgMHhmZmZmIGZsb3dpZCAxOjQKCnRjIGNsYXNzIGFkZCBkZXYgZXRoMCBwYXJl
bnQgMToxIGNsYXNzaWQgMTozIGNicSBiYW5kd2lkdGggMTAwTWJpdCAgXAogIHJhdGUgNU1iaXQg
d2VpZ2h0IDAuNU1iaXQgcHJpbyA1IGFsbG90IDE1MTQgY2VsbCA4IG1heGJ1cnN0IDIwICAgICAg
XAogIGF2cGt0IDEwMDAKdGMgY2xhc3MgYWRkIGRldiBldGgwIHBhcmVudCAxOjEgY2xhc3NpZCAx
OjQgY2JxIGJhbmR3aWR0aCAxMDBNYml0ICBcCiAgcmF0ZSAzTWJpdCB3ZWlnaHQgMC4zTWJpdCBw
cmlvIDUgYWxsb3QgMTUxNCBjZWxsIDggbWF4YnVyc3QgMjAgICAgICBcCiAgYXZwa3QgMTAwMAoK
d2hlcmUgZmlsdGVycyBhcmUgaW5zdGFsbGVkIG9uIHFkaXNjIDE6MCwgc28gd2UgY2FuJ3QgbWVy
ZWx5CnNlYXJjaCBmcm9tIGNsYXNzIDE6MSB3aGVuIGNyZWF0aW5nIGNsYXNzIDE6MyBhbmQgY2xh
c3MgMTo0LiBXZSBoYXZlCnRvIHdhbGsgdGhyb3VnaCBhbGwgdGhlIGNoaWxkIGNsYXNzZXMgb2Yg
dGhlIGRpcmVjdCBwYXJlbnQgcWRpc2MuCk90aGVyd2lzZSB3ZSB3b3VsZCBtaXNzIGZpbHRlcnMg
dGhvc2UgbmVlZCByZXZlcnNlIGJpbmRpbmcuCgpGaXhlczogMDdkNzlmYzdkOTRlICgibmV0X3Nj
aGVkOiBhZGQgcmV2ZXJzZSBiaW5kaW5nIGZvciB0YyBjbGFzcyIpCkNjOiBKYW1hbCBIYWRpIFNh
bGltIDxqaHNAbW9qYXRhdHUuY29tPgpDYzogSmlyaSBQaXJrbyA8amlyaUByZXNudWxsaS51cz4K
U2lnbmVkLW9mZi1ieTogQ29uZyBXYW5nIDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+ClNpZ25l
ZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQv
c2NoZWQvc2NoX2FwaS5jIHwgNDEgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0t
LS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAzMCBpbnNlcnRpb25zKCspLCAxMSBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvc2NoX2FwaS5jIGIvbmV0L3NjaGVkL3NjaF9hcGkuYwpp
bmRleCA5NDNhZDM0MjUzODAuLjUwNzk0MTI1YmYwMiAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL3Nj
aF9hcGkuYworKysgYi9uZXQvc2NoZWQvc2NoX2FwaS5jCkBAIC0xOTEwLDIyICsxOTEwLDI0IEBA
IHN0YXRpYyBpbnQgdGNmX25vZGVfYmluZChzdHJ1Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqbiwg
c3RydWN0IHRjZl93YWxrZXIgKmFyZykKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgdGNf
YmluZF90Y2xhc3Moc3RydWN0IFFkaXNjICpxLCB1MzIgcG9ydGlkLCB1MzIgY2xpZCwKLQkJCSAg
IHVuc2lnbmVkIGxvbmcgbmV3X2NsKQorc3RydWN0IHRjX2JpbmRfY2xhc3NfYXJncyB7CisJc3Ry
dWN0IHFkaXNjX3dhbGtlciB3OworCXVuc2lnbmVkIGxvbmcgbmV3X2NsOworCXUzMiBwb3J0aWQ7
CisJdTMyIGNsaWQ7Cit9OworCitzdGF0aWMgaW50IHRjX2JpbmRfY2xhc3Nfd2Fsa2VyKHN0cnVj
dCBRZGlzYyAqcSwgdW5zaWduZWQgbG9uZyBjbCwKKwkJCQlzdHJ1Y3QgcWRpc2Nfd2Fsa2VyICp3
KQogeworCXN0cnVjdCB0Y19iaW5kX2NsYXNzX2FyZ3MgKmEgPSAoc3RydWN0IHRjX2JpbmRfY2xh
c3NfYXJncyAqKXc7CiAJY29uc3Qgc3RydWN0IFFkaXNjX2NsYXNzX29wcyAqY29wcyA9IHEtPm9w
cy0+Y2xfb3BzOwogCXN0cnVjdCB0Y2ZfYmxvY2sgKmJsb2NrOwogCXN0cnVjdCB0Y2ZfY2hhaW4g
KmNoYWluOwotCXVuc2lnbmVkIGxvbmcgY2w7CiAKLQljbCA9IGNvcHMtPmZpbmQocSwgcG9ydGlk
KTsKLQlpZiAoIWNsKQotCQlyZXR1cm47Ci0JaWYgKCFjb3BzLT50Y2ZfYmxvY2spCi0JCXJldHVy
bjsKIAlibG9jayA9IGNvcHMtPnRjZl9ibG9jayhxLCBjbCwgTlVMTCk7CiAJaWYgKCFibG9jaykK
LQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAlmb3IgKGNoYWluID0gdGNmX2dldF9uZXh0X2NoYWlu
KGJsb2NrLCBOVUxMKTsKIAkgICAgIGNoYWluOwogCSAgICAgY2hhaW4gPSB0Y2ZfZ2V0X25leHRf
Y2hhaW4oYmxvY2ssIGNoYWluKSkgewpAQCAtMTkzNiwxMiArMTkzOCwyOSBAQCBzdGF0aWMgdm9p
ZCB0Y19iaW5kX3RjbGFzcyhzdHJ1Y3QgUWRpc2MgKnEsIHUzMiBwb3J0aWQsIHUzMiBjbGlkLAog
CQkJc3RydWN0IHRjZl9iaW5kX2FyZ3MgYXJnID0ge307CiAKIAkJCWFyZy53LmZuID0gdGNmX25v
ZGVfYmluZDsKLQkJCWFyZy5jbGFzc2lkID0gY2xpZDsKKwkJCWFyZy5jbGFzc2lkID0gYS0+Y2xp
ZDsKIAkJCWFyZy5iYXNlID0gY2w7Ci0JCQlhcmcuY2wgPSBuZXdfY2w7CisJCQlhcmcuY2wgPSBh
LT5uZXdfY2w7CiAJCQl0cC0+b3BzLT53YWxrKHRwLCAmYXJnLncsIHRydWUpOwogCQl9CiAJfQor
CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIHRjX2JpbmRfdGNsYXNzKHN0cnVjdCBRZGlz
YyAqcSwgdTMyIHBvcnRpZCwgdTMyIGNsaWQsCisJCQkgICB1bnNpZ25lZCBsb25nIG5ld19jbCkK
K3sKKwljb25zdCBzdHJ1Y3QgUWRpc2NfY2xhc3Nfb3BzICpjb3BzID0gcS0+b3BzLT5jbF9vcHM7
CisJc3RydWN0IHRjX2JpbmRfY2xhc3NfYXJncyBhcmdzID0ge307CisKKwlpZiAoIWNvcHMtPnRj
Zl9ibG9jaykKKwkJcmV0dXJuOworCWFyZ3MucG9ydGlkID0gcG9ydGlkOworCWFyZ3MuY2xpZCA9
IGNsaWQ7CisJYXJncy5uZXdfY2wgPSBuZXdfY2w7CisJYXJncy53LmZuID0gdGNfYmluZF9jbGFz
c193YWxrZXI7CisJcS0+b3BzLT5jbF9vcHMtPndhbGsocSwgJmFyZ3Mudyk7CiB9CiAKICNlbHNl
Ci0tIAoyLjIxLjEKCgpGcm9tIGIzYjY4ZDg0OGE0NzI4OTkyMmE5Y2RjNzAxZGExNTllMjRlMzlh
ZTEgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IExvcmVuem8gQmlhbmNvbmkgPGxvcmVu
em9Aa2VybmVsLm9yZz4KRGF0ZTogU2F0LCAyNSBKYW4gMjAyMCAxMjo0ODo1MCArMDEwMApTdWJq
ZWN0OiBbUEFUQ0ggNC85XSBuZXQ6IHNvY2lvbmV4dDogZml4IHBvc3NpYmxlIHVzZXItYWZ0ZXIt
ZnJlZSBpbgogbmV0c2VjX3Byb2Nlc3NfcngKClsgVXBzdHJlYW0gY29tbWl0IGI1ZTgyZTNjODlj
NzhlZTA0MDdlYThlODA4N2FmNTUxOWI2YzdiYWUgXQoKRml4IHBvc3NpYmxlIHVzZS1hZnRlci1m
cmVlIGluIGluIG5ldHNlY19wcm9jZXNzX3J4IHRoYXQgY2FuIG9jY3VycyBpZgp0aGUgZmlyc3Qg
cGFja2V0IGlzIHNlbnQgdG8gdGhlIG5vcm1hbCBuZXR3b3JraW5nIHN0YWNrIGFuZCB0aGUKZm9s
bG93aW5nIG9uZSBpcyBkcm9wcGVkIGJ5IHRoZSBicGYgcHJvZ3JhbSBhdHRhY2hlZCB0byB0aGUg
eGRwIGhvb2suCkZpeCB0aGUgaXNzdWUgZGVmaW5pbmcgdGhlIHNrYiBwb2ludGVyIGluIHRoZSAn
YnVkZ2V0JyBsb29wCgpGaXhlczogYmEyYjIzMjEwOGQzYyAoIm5ldDogbmV0c2VjOiBhZGQgWERQ
IHN1cHBvcnQiKQpTaWduZWQtb2ZmLWJ5OiBMb3JlbnpvIEJpYW5jb25pIDxsb3JlbnpvQGtlcm5l
bC5vcmc+CkFja2VkLWJ5OiBKZXNwZXIgRGFuZ2FhcmQgQnJvdWVyIDxicm91ZXJAcmVkaGF0LmNv
bT4KQWNrZWQtYnk6IElsaWFzIEFwYWxvZGltYXMgPGlsaWFzLmFwYWxvZGltYXNAbGluYXJvLm9y
Zz4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0Pgot
LS0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L3NvY2lvbmV4dC9uZXRzZWMuYyB8IDIgKy0KIDEgZmls
ZSBjaGFuZ2VkLCAxIGluc2VydGlvbigrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvbmV0L2V0aGVybmV0L3NvY2lvbmV4dC9uZXRzZWMuYyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L3NvY2lvbmV4dC9uZXRzZWMuYwppbmRleCA0MWRkZDhmZmYyYTcuLjQ2MDBhMmUwNDgyMiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvc29jaW9uZXh0L25ldHNlYy5jCisrKyBi
L2RyaXZlcnMvbmV0L2V0aGVybmV0L3NvY2lvbmV4dC9uZXRzZWMuYwpAQCAtOTI4LDcgKzkyOCw2
IEBAIHN0YXRpYyBpbnQgbmV0c2VjX3Byb2Nlc3Nfcngoc3RydWN0IG5ldHNlY19wcml2ICpwcml2
LCBpbnQgYnVkZ2V0KQogCXN0cnVjdCBuZXRzZWNfcnhfcGt0X2luZm8gcnhfaW5mbzsKIAllbnVt
IGRtYV9kYXRhX2RpcmVjdGlvbiBkbWFfZGlyOwogCXN0cnVjdCBicGZfcHJvZyAqeGRwX3Byb2c7
Ci0Jc3RydWN0IHNrX2J1ZmYgKnNrYiA9IE5VTEw7CiAJdTE2IHhkcF94bWl0ID0gMDsKIAl1MzIg
eGRwX2FjdCA9IDA7CiAJaW50IGRvbmUgPSAwOwpAQCAtOTQyLDYgKzk0MSw3IEBAIHN0YXRpYyBp
bnQgbmV0c2VjX3Byb2Nlc3Nfcngoc3RydWN0IG5ldHNlY19wcml2ICpwcml2LCBpbnQgYnVkZ2V0
KQogCQlzdHJ1Y3QgbmV0c2VjX2RlICpkZSA9IGRyaW5nLT52YWRkciArIChERVNDX1NaICogaWR4
KTsKIAkJc3RydWN0IG5ldHNlY19kZXNjICpkZXNjID0gJmRyaW5nLT5kZXNjW2lkeF07CiAJCXN0
cnVjdCBwYWdlICpwYWdlID0gdmlydF90b19wYWdlKGRlc2MtPmFkZHIpOworCQlzdHJ1Y3Qgc2tf
YnVmZiAqc2tiID0gTlVMTDsKIAkJdTMyIHhkcF9yZXN1bHQgPSBYRFBfUEFTUzsKIAkJdTE2IHBr
dF9sZW4sIGRlc2NfbGVuOwogCQlkbWFfYWRkcl90IGRtYV9oYW5kbGU7Ci0tIAoyLjIxLjEKCgpG
cm9tIGU4ZDg5NThiODE1NjAxY2ZiZjMzMGI4YzlkNjBmMzYxZjk5MDM2YTQgTW9uIFNlcCAxNyAw
MDowMDowMCAyMDAxCkZyb206IExvcmVuem8gQmlhbmNvbmkgPGxvcmVuem9Aa2VybmVsLm9yZz4K
RGF0ZTogU2F0LCAyNSBKYW4gMjAyMCAxMjo0ODo1MSArMDEwMApTdWJqZWN0OiBbUEFUQ0ggNS85
XSBuZXQ6IHNvY2lvbmV4dDogZml4IHhkcF9yZXN1bHQgaW5pdGlhbGl6YXRpb24gaW4KIG5ldHNl
Y19wcm9jZXNzX3J4CgpbIFVwc3RyZWFtIGNvbW1pdCAwMjc1OGNiNmRhYzMxYTJiNGJkOWU1MzVj
ZmZiZTcxOGFjZDQ2NDA0IF0KCkZpeCB4ZHBfcmVzdWx0IGluaXRpYWxpemF0aW9uIGluIG5ldHNl
Y19wcm9jZXNzX3J4IGluIG9yZGVyIHRvIG5vdAppbmNyZWFzZSByeCBjb3VudGVycyBpZiB0aGVy
ZSBpcyBubyBicGYgcHJvZ3JhbSBhdHRhY2hlZCB0byB0aGUgeGRwIGhvb2sKYW5kIG5hcGlfZ3Jv
X3JlY2VpdmUgcmV0dXJucyBHUk9fRFJPUAoKRml4ZXM6IGJhMmIyMzIxMDhkM2MgKCJuZXQ6IG5l
dHNlYzogYWRkIFhEUCBzdXBwb3J0IikKU2lnbmVkLW9mZi1ieTogTG9yZW56byBCaWFuY29uaSA8
bG9yZW56b0BrZXJuZWwub3JnPgpBY2tlZC1ieTogSmVzcGVyIERhbmdhYXJkIEJyb3VlciA8YnJv
dWVyQHJlZGhhdC5jb20+CkFja2VkLWJ5OiBJbGlhcyBBcGFsb2RpbWFzIDxpbGlhcy5hcGFsb2Rp
bWFzQGxpbmFyby5vcmc+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2
ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2VjLmMg
fCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2VjLmMgYi9kcml2
ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2VjLmMKaW5kZXggNDYwMGEyZTA0ODIyLi44
YmQyOTEyYmY3MTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L3NvY2lvbmV4dC9u
ZXRzZWMuYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2VjLmMKQEAg
LTk0MSw4ICs5NDEsOCBAQCBzdGF0aWMgaW50IG5ldHNlY19wcm9jZXNzX3J4KHN0cnVjdCBuZXRz
ZWNfcHJpdiAqcHJpdiwgaW50IGJ1ZGdldCkKIAkJc3RydWN0IG5ldHNlY19kZSAqZGUgPSBkcmlu
Zy0+dmFkZHIgKyAoREVTQ19TWiAqIGlkeCk7CiAJCXN0cnVjdCBuZXRzZWNfZGVzYyAqZGVzYyA9
ICZkcmluZy0+ZGVzY1tpZHhdOwogCQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IHZpcnRfdG9fcGFnZShk
ZXNjLT5hZGRyKTsKKwkJdTMyIHhkcF9yZXN1bHQgPSBORVRTRUNfWERQX1BBU1M7CiAJCXN0cnVj
dCBza19idWZmICpza2IgPSBOVUxMOwotCQl1MzIgeGRwX3Jlc3VsdCA9IFhEUF9QQVNTOwogCQl1
MTYgcGt0X2xlbiwgZGVzY19sZW47CiAJCWRtYV9hZGRyX3QgZG1hX2hhbmRsZTsKIAkJc3RydWN0
IHhkcF9idWZmIHhkcDsKLS0gCjIuMjEuMQoKCkZyb20gMWY4NGMwNjBjZmRjMWQwOWNiYmFkNmE4
Mjg3NWFlOWNlNDNmNmE4MiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogV2lsbGVtIGRl
IEJydWlqbiA8d2lsbGVtYkBnb29nbGUuY29tPgpEYXRlOiBNb24sIDI3IEphbiAyMDIwIDE1OjQw
OjMxIC0wNTAwClN1YmplY3Q6IFtQQVRDSCA2LzldIHVkcDogc2VnbWVudCBsb29wZWQgZ3NvIHBh
Y2tldHMgY29ycmVjdGx5CgpbIFVwc3RyZWFtIGNvbW1pdCA2Y2QwMjFhNThjMThhMTczMWY3ZTQ3
ZjgzZTE3MmMwYzMwMmQ2NWU1IF0KCk11bHRpY2FzdCBhbmQgYnJvYWRjYXN0IHBhY2tldHMgY2Fu
IGJlIGxvb3BlZCBmcm9tIGVncmVzcyB0byBpbmdyZXNzCnByZSBzZWdtZW50YXRpb24gd2l0aCBk
ZXZfbG9vcGJhY2tfeG1pdC4gVGhhdCBmdW5jdGlvbiB1bmNvbmRpdGlvbmFsbHkKc2V0cyBpcF9z
dW1tZWQgdG8gQ0hFQ0tTVU1fVU5ORUNFU1NBUlkuCgp1ZHBfcmN2X3NlZ21lbnQgc2VnbWVudHMg
Z3NvIHBhY2tldHMgaW4gdGhlIHVkcCByeCBwYXRoLiBTZWdtZW50YXRpb24KdXN1YWxseSBleGVj
dXRlcyBvbiBlZ3Jlc3MsIGFuZCBkb2VzIG5vdCBleHBlY3QgcGFja2V0cyBvZiB0aGlzIHR5cGUu
Cl9fdWRwX2dzb19zZWdtZW50IGludGVycHJldHMgIUNIRUNLU1VNX1BBUlRJQUwgYXMgQ0hFQ0tT
VU1fTk9ORS4gQnV0CnRoZSBvZmZzZXRzIGFyZSBub3QgY29ycmVjdCBmb3IgZ3NvX21ha2VfY2hl
Y2tzdW0uCgpVRFAgR1NPIHBhY2tldHMgYXJlIG9mIHR5cGUgQ0hFQ0tTVU1fUEFSVElBTCwgd2l0
aCB0aGVpciB1aC0+Y2hlY2sgc2V0CnRvIHRoZSBjb3JyZWN0IHBzZXVkbyBoZWFkZXIgY2hlY2tz
dW0uIFJlc2V0IGlwX3N1bW1lZCB0byB0aGlzIHR5cGUuCihDSEVDS1NVTV9QQVJUSUFMIGlzIGFs
bG93ZWQgb24gaW5ncmVzcywgc2VlIGNvbW1lbnRzIGluIHNrYnVmZi5oKQoKUmVwb3J0ZWQtYnk6
IHN5emJvdCA8c3l6a2FsbGVyQGdvb2dsZWdyb3Vwcy5jb20+CkZpeGVzOiBjZjMyOWFhNDJiNjYg
KCJ1ZHA6IGNvcGUgd2l0aCBVRFAgR1JPIHBhY2tldCBtaXNkaXJlY3Rpb24iKQpTaWduZWQtb2Zm
LWJ5OiBXaWxsZW0gZGUgQnJ1aWpuIDx3aWxsZW1iQGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6
IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBpbmNsdWRlL25ldC91
ZHAuaCB8IDMgKysrCiAxIGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9uZXQvdWRwLmggYi9pbmNsdWRlL25ldC91ZHAuaAppbmRleCBiYWQ3NGY3ODA4
MzEuLjhmMTYzZDY3NGYwNyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9uZXQvdWRwLmgKKysrIGIvaW5j
bHVkZS9uZXQvdWRwLmgKQEAgLTQ3Niw2ICs0NzYsOSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBz
a19idWZmICp1ZHBfcmN2X3NlZ21lbnQoc3RydWN0IHNvY2sgKnNrLAogCWlmICghaW5ldF9nZXRf
Y29udmVydF9jc3VtKHNrKSkKIAkJZmVhdHVyZXMgfD0gTkVUSUZfRl9JUF9DU1VNIHwgTkVUSUZf
Rl9JUFY2X0NTVU07CiAKKwlpZiAoc2tiLT5wa3RfdHlwZSA9PSBQQUNLRVRfTE9PUEJBQ0spCisJ
CXNrYi0+aXBfc3VtbWVkID0gQ0hFQ0tTVU1fUEFSVElBTDsKKwogCS8qIHRoZSBHU08gQ0IgbGF5
cyBhZnRlciB0aGUgVURQIG9uZSwgbm8gbmVlZCB0byBzYXZlIGFuZCByZXN0b3JlIGFueQogCSAq
IENCIGZyYWdtZW50CiAJICovCi0tIAoyLjIxLjEKCgpGcm9tIDRmYWFmZDZkN2Q1NmQ2MDVmN2Uy
Mzk0NTU5MDA3MjYxNzg4MWMwY2EgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IENocmlz
dG9waGUgSkFJTExFVCA8Y2hyaXN0b3BoZS5qYWlsbGV0QHdhbmFkb28uZnI+CkRhdGU6IFNhdCwg
MjUgSmFuIDIwMjAgMjI6MTg6NDcgKzAxMDAKU3ViamVjdDogW1BBVENIIDcvOV0gbWx4c3c6IG1p
bmltYWw6IEZpeCBhbiBlcnJvciBoYW5kbGluZyBwYXRoIGluCiAnbWx4c3dfbV9wb3J0X2NyZWF0
ZSgpJwoKWyBVcHN0cmVhbSBjb21taXQgNmRkNGI0ZjM5MzZlMTdmZWRlYTEzMDhiYzcwZTk3MTZm
NjhiZjIzMiBdCgpBbiAnYWxsb2NfZXRoZXJkZXYoKScgY2FsbGVkIGlzIG5vdCBiYWxsYW5jZWQg
YnkgYSBjb3JyZXNwb25kaW5nCidmcmVlX25ldGRldigpJyBjYWxsIGluIG9uZSBlcnJvciBoYW5k
bGluZyBwYXRoLgoKU2xpZ2hseSByZW9yZGVyIHRoZSBlcnJvciBoYW5kbGluZyBjb2RlIHRvIGNh
dGNoIHRoZSBtaXNzZWQgY2FzZS4KCkZpeGVzOiBjMTAwZTQ3Y2FhOGUgKCJtbHhzdzogbWluaW1h
bDogQWRkIGV0aHRvb2wgc3VwcG9ydCIpClNpZ25lZC1vZmYtYnk6IENocmlzdG9waGUgSkFJTExF
VCA8Y2hyaXN0b3BoZS5qYWlsbGV0QHdhbmFkb28uZnI+ClJldmlld2VkLWJ5OiBJZG8gU2NoaW1t
ZWwgPGlkb3NjaEBtZWxsYW5veC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8
ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9t
bHhzdy9taW5pbWFsLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEg
ZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9t
bHhzdy9taW5pbWFsLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9tbHhzdy9taW5p
bWFsLmMKaW5kZXggNDcxYjBjYTZkNjlhLi41NWRmYmE5OTBlNmUgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvbmV0L2V0aGVybmV0L21lbGxhbm94L21seHN3L21pbmltYWwuYworKysgYi9kcml2ZXJzL25l
dC9ldGhlcm5ldC9tZWxsYW5veC9tbHhzdy9taW5pbWFsLmMKQEAgLTIwNCw4ICsyMDQsOCBAQCBt
bHhzd19tX3BvcnRfY3JlYXRlKHN0cnVjdCBtbHhzd19tICptbHhzd19tLCB1OCBsb2NhbF9wb3J0
LCB1OCBtb2R1bGUpCiAKIGVycl9yZWdpc3Rlcl9uZXRkZXY6CiAJbWx4c3dfbS0+cG9ydHNbbG9j
YWxfcG9ydF0gPSBOVUxMOwotCWZyZWVfbmV0ZGV2KGRldik7CiBlcnJfZGV2X2FkZHJfZ2V0Ogor
CWZyZWVfbmV0ZGV2KGRldik7CiBlcnJfYWxsb2NfZXRoZXJkZXY6CiAJbWx4c3dfY29yZV9wb3J0
X2ZpbmkobWx4c3dfbS0+Y29yZSwgbG9jYWxfcG9ydCk7CiAJcmV0dXJuIGVycjsKLS0gCjIuMjEu
MQoKCkZyb20gOTQ2YTc3NWI2MmFkOGM0ZjQxYzAxMzhlZmRhNGQ5ODNlMTllZjAxZiBNb24gU2Vw
IDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogU3RlcGhlbiBXb3JsZXkgPHN3b3JsZXlAY3VtdWx1c25l
dHdvcmtzLmNvbT4KRGF0ZTogRnJpLCAyNCBKYW4gMjAyMCAxNjo1MzoyNyAtMDUwMApTdWJqZWN0
OiBbUEFUQ0ggOC85XSBuZXQ6IGluY2x1ZGUgc3RydWN0IG5obXNnIHNpemUgaW4gbmggbmxtc2cg
c2l6ZQoKWyBVcHN0cmVhbSBjb21taXQgZjllOTU1NTU3NTc5MTVmYzE5NDI4ODg2MmQyOTc4ZTM3
MGZlMzE2YiBdCgpJbmNsdWRlIHRoZSBzaXplIG9mIHN0cnVjdCBuaG1zZyBzaXplIHdoZW4gY2Fs
Y3VsYXRpbmcKaG93IG11Y2ggb2YgYSBwYXlsb2FkIHRvIGFsbG9jYXRlIGluIGEgbmV3IG5ldGxp
bmsgbmV4dGhvcApub3RpZmljYXRpb24gbWVzc2FnZS4KCldpdGhvdXQgdGhpcywgd2Ugd2lsbCBm
YWlsIHRvIGZpbGwgdGhlIHNrYnVmZiBhdCBjZXJ0YWluIG5leHRob3AKZ3JvdXAgc2l6ZXMuCgpZ
b3UgY2FuIHJlcHJvZHVjZSB0aGUgZmFpbHVyZSB3aXRoIHRoZSBmb2xsb3dpbmcgaXByb3V0ZTIg
Y29tbWFuZHM6CgppcCBsaW5rIGFkZCBkdW1teTEgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1t
eTIgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTMgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBk
dW1teTQgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTUgdHlwZSBkdW1teQppcCBsaW5rIGFk
ZCBkdW1teTYgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTcgdHlwZSBkdW1teQppcCBsaW5r
IGFkZCBkdW1teTggdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTkgdHlwZSBkdW1teQppcCBs
aW5rIGFkZCBkdW1teTEwIHR5cGUgZHVtbXkKaXAgbGluayBhZGQgZHVtbXkxMSB0eXBlIGR1bW15
CmlwIGxpbmsgYWRkIGR1bW15MTIgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTEzIHR5cGUg
ZHVtbXkKaXAgbGluayBhZGQgZHVtbXkxNCB0eXBlIGR1bW15CmlwIGxpbmsgYWRkIGR1bW15MTUg
dHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTE2IHR5cGUgZHVtbXkKaXAgbGluayBhZGQgZHVt
bXkxNyB0eXBlIGR1bW15CmlwIGxpbmsgYWRkIGR1bW15MTggdHlwZSBkdW1teQppcCBsaW5rIGFk
ZCBkdW1teTE5IHR5cGUgZHVtbXkKCmlwIHJvIGFkZCAxLjEuMS4xLzMyIGRldiBkdW1teTEKaXAg
cm8gYWRkIDEuMS4xLjIvMzIgZGV2IGR1bW15MgppcCBybyBhZGQgMS4xLjEuMy8zMiBkZXYgZHVt
bXkzCmlwIHJvIGFkZCAxLjEuMS40LzMyIGRldiBkdW1teTQKaXAgcm8gYWRkIDEuMS4xLjUvMzIg
ZGV2IGR1bW15NQppcCBybyBhZGQgMS4xLjEuNi8zMiBkZXYgZHVtbXk2CmlwIHJvIGFkZCAxLjEu
MS43LzMyIGRldiBkdW1teTcKaXAgcm8gYWRkIDEuMS4xLjgvMzIgZGV2IGR1bW15OAppcCBybyBh
ZGQgMS4xLjEuOS8zMiBkZXYgZHVtbXk5CmlwIHJvIGFkZCAxLjEuMS4xMC8zMiBkZXYgZHVtbXkx
MAppcCBybyBhZGQgMS4xLjEuMTEvMzIgZGV2IGR1bW15MTEKaXAgcm8gYWRkIDEuMS4xLjEyLzMy
IGRldiBkdW1teTEyCmlwIHJvIGFkZCAxLjEuMS4xMy8zMiBkZXYgZHVtbXkxMwppcCBybyBhZGQg
MS4xLjEuMTQvMzIgZGV2IGR1bW15MTQKaXAgcm8gYWRkIDEuMS4xLjE1LzMyIGRldiBkdW1teTE1
CmlwIHJvIGFkZCAxLjEuMS4xNi8zMiBkZXYgZHVtbXkxNgppcCBybyBhZGQgMS4xLjEuMTcvMzIg
ZGV2IGR1bW15MTcKaXAgcm8gYWRkIDEuMS4xLjE4LzMyIGRldiBkdW1teTE4CmlwIHJvIGFkZCAx
LjEuMS4xOS8zMiBkZXYgZHVtbXkxOQoKaXAgbmV4dCBhZGQgaWQgMSB2aWEgMS4xLjEuMSBkZXYg
ZHVtbXkxCmlwIG5leHQgYWRkIGlkIDIgdmlhIDEuMS4xLjIgZGV2IGR1bW15MgppcCBuZXh0IGFk
ZCBpZCAzIHZpYSAxLjEuMS4zIGRldiBkdW1teTMKaXAgbmV4dCBhZGQgaWQgNCB2aWEgMS4xLjEu
NCBkZXYgZHVtbXk0CmlwIG5leHQgYWRkIGlkIDUgdmlhIDEuMS4xLjUgZGV2IGR1bW15NQppcCBu
ZXh0IGFkZCBpZCA2IHZpYSAxLjEuMS42IGRldiBkdW1teTYKaXAgbmV4dCBhZGQgaWQgNyB2aWEg
MS4xLjEuNyBkZXYgZHVtbXk3CmlwIG5leHQgYWRkIGlkIDggdmlhIDEuMS4xLjggZGV2IGR1bW15
OAppcCBuZXh0IGFkZCBpZCA5IHZpYSAxLjEuMS45IGRldiBkdW1teTkKaXAgbmV4dCBhZGQgaWQg
MTAgdmlhIDEuMS4xLjEwIGRldiBkdW1teTEwCmlwIG5leHQgYWRkIGlkIDExIHZpYSAxLjEuMS4x
MSBkZXYgZHVtbXkxMQppcCBuZXh0IGFkZCBpZCAxMiB2aWEgMS4xLjEuMTIgZGV2IGR1bW15MTIK
aXAgbmV4dCBhZGQgaWQgMTMgdmlhIDEuMS4xLjEzIGRldiBkdW1teTEzCmlwIG5leHQgYWRkIGlk
IDE0IHZpYSAxLjEuMS4xNCBkZXYgZHVtbXkxNAppcCBuZXh0IGFkZCBpZCAxNSB2aWEgMS4xLjEu
MTUgZGV2IGR1bW15MTUKaXAgbmV4dCBhZGQgaWQgMTYgdmlhIDEuMS4xLjE2IGRldiBkdW1teTE2
CmlwIG5leHQgYWRkIGlkIDE3IHZpYSAxLjEuMS4xNyBkZXYgZHVtbXkxNwppcCBuZXh0IGFkZCBp
ZCAxOCB2aWEgMS4xLjEuMTggZGV2IGR1bW15MTgKaXAgbmV4dCBhZGQgaWQgMTkgdmlhIDEuMS4x
LjE5IGRldiBkdW1teTE5CgppcCBuZXh0IGFkZCBpZCAxMTExIGdyb3VwIDEvMi8zLzQvNS82Lzcv
OC85LzEwLzExLzEyLzEzLzE0LzE1LzE2LzE3LzE4LzE5CmlwIG5leHQgZGVsIGlkIDExMTEKCkZp
eGVzOiA0MzBhMDQ5MTkwZGUgKCJuZXh0aG9wOiBBZGQgc3VwcG9ydCBmb3IgbmV4dGhvcCBncm91
cHMiKQpTaWduZWQtb2ZmLWJ5OiBTdGVwaGVuIFdvcmxleSA8c3dvcmxleUBjdW11bHVzbmV0d29y
a3MuY29tPgpSZXZpZXdlZC1ieTogRGF2aWQgQWhlcm4gPGRzYWhlcm5AZ21haWwuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0
L2lwdjQvbmV4dGhvcC5jIHwgNCArKystCiAxIGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRpb25zKCsp
LCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvbmV4dGhvcC5jIGIvbmV0L2lw
djQvbmV4dGhvcC5jCmluZGV4IGZjMzRmZDE2NjhkNi4uMzczN2QzMmFkMTFhIDEwMDY0NAotLS0g
YS9uZXQvaXB2NC9uZXh0aG9wLmMKKysrIGIvbmV0L2lwdjQvbmV4dGhvcC5jCkBAIC0zMjIsNyAr
MzIyLDkgQEAgc3RhdGljIHNpemVfdCBuaF9ubG1zZ19zaXplX3NpbmdsZShzdHJ1Y3QgbmV4dGhv
cCAqbmgpCiAKIHN0YXRpYyBzaXplX3Qgbmhfbmxtc2dfc2l6ZShzdHJ1Y3QgbmV4dGhvcCAqbmgp
CiB7Ci0Jc2l6ZV90IHN6ID0gbmxhX3RvdGFsX3NpemUoNCk7ICAgIC8qIE5IQV9JRCAqLworCXNp
emVfdCBzeiA9IE5MTVNHX0FMSUdOKHNpemVvZihzdHJ1Y3Qgbmhtc2cpKTsKKworCXN6ICs9IG5s
YV90b3RhbF9zaXplKDQpOyAvKiBOSEFfSUQgKi8KIAogCWlmIChuaC0+aXNfZ3JvdXApCiAJCXN6
ICs9IG5oX25sbXNnX3NpemVfZ3JwKG5oKTsKLS0gCjIuMjEuMQoKCkZyb20gZWU0Y2ZhOGM5MGJl
YzY1NDk1ZTUyMTk1Mjg4ZTU2MWFhNDU0NzViMyBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJv
bTogRGF2aWQgSG93ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4KRGF0ZTogRnJpLCAyNCBKYW4g
MjAyMCAyMzowODowNCArMDAwMApTdWJqZWN0OiBbUEFUQ0ggOS85XSByeHJwYzogRml4IHVzZS1h
ZnRlci1mcmVlIGluIHJ4cnBjX3JlY2VpdmVfZGF0YSgpCgpbIFVwc3RyZWFtIGNvbW1pdCAxMjJk
NzRmYWM4NDIwNGI5YTk4MjYzNjM2ZjZmOWEzYjJlNjY1NjM5IF0KClRoZSBzdWJwYWNrZXQgc2Nh
bm5pbmcgbG9vcCBpbiByeHJwY19yZWNlaXZlX2RhdGEoKSByZWZlcmVuY2VzIHRoZQpzdWJwYWNr
ZXQgY291bnQgaW4gdGhlIHByaXZhdGUgZGF0YSBwYXJ0IG9mIHRoZSBza19idWZmIGluIHRoZSBs
b29wCnRlcm1pbmF0aW9uIGNvbmRpdGlvbi4gIEhvd2V2ZXIsIHdoZW4gdGhlIGZpbmFsIHN1YnBh
Y2tldCBpcyBwYXN0ZWQgaW50bwp0aGUgcmluZyBidWZmZXIsIHRoZSBmdW5jdGlvbiBpcyBubyBs
b25nZXIgaGFzIGEgcmVmIG9uIHRoZSBza19idWZmIGFuZApzaG91bGQgbm90IGJlIGxvb2tpbmcg
YXQgc3AtPiogYW55IG1vcmUuICBUaGlzIHBvaW50IGlzIGFjdHVhbGx5IG1hcmtlZCBpbgp0aGUg
Y29kZSB3aGVuIHNrYiBpcyBjbGVhcmVkIChidXQgc3AgaXMgbm90IC0gd2hpY2ggaXMgYW4gZXJy
b3IpLgoKRml4IHRoaXMgYnkgY2FjaGluZyBzcC0+bnJfc3VicGFja2V0cyBpbiBhIGxvY2FsIHZh
cmlhYmxlIGFuZCB1c2luZyB0aGF0Cmluc3RlYWQuCgpBbHNvIGNsZWFyICdzcCcgdG8gY2F0Y2gg
YWNjZXNzZXMgYWZ0ZXIgdGhhdCBwb2ludC4KClRoaXMgY2FuIHNob3cgdXAgYXMgYW4gb29wcyBp
biByeHJwY19nZXRfc2tiKCkgaWYgc3AtPm5yX3N1YnBhY2tldHMgZ2V0cwp0cmFzaGVkIGJ5IHRo
ZSBza19idWZmIGdldHRpbmcgZnJlZWQgYW5kIHJldXNlZCBpbiB0aGUgbWVhbnRpbWUuCgpGaXhl
czogZTJkZTZjNDA0ODk4ICgicnhycGM6IFVzZSBpbmZvIGluIHNrYnVmZiBpbnN0ZWFkIG9mIHJl
cGFyc2luZyBhIGp1bWJvIHBhY2tldCIpClNpZ25lZC1vZmYtYnk6IERhdmlkIEhvd2VsbHMgPGRo
b3dlbGxzQHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1A
ZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQvcnhycGMvaW5wdXQuYyB8IDEyICsrKysrKystLS0tLQog
MSBmaWxlIGNoYW5nZWQsIDcgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9uZXQvcnhycGMvaW5wdXQuYyBiL25ldC9yeHJwYy9pbnB1dC5jCmluZGV4IDg2YmQxMzNi
NGZhMC4uOTZkNTRlNWJmN2JjIDEwMDY0NAotLS0gYS9uZXQvcnhycGMvaW5wdXQuYworKysgYi9u
ZXQvcnhycGMvaW5wdXQuYwpAQCAtNDEzLDcgKzQxMyw3IEBAIHN0YXRpYyB2b2lkIHJ4cnBjX2lu
cHV0X2RhdGEoc3RydWN0IHJ4cnBjX2NhbGwgKmNhbGwsIHN0cnVjdCBza19idWZmICpza2IpCiB7
CiAJc3RydWN0IHJ4cnBjX3NrYl9wcml2ICpzcCA9IHJ4cnBjX3NrYihza2IpOwogCWVudW0gcnhy
cGNfY2FsbF9zdGF0ZSBzdGF0ZTsKLQl1bnNpZ25lZCBpbnQgajsKKwl1bnNpZ25lZCBpbnQgaiwg
bnJfc3VicGFja2V0czsKIAlyeHJwY19zZXJpYWxfdCBzZXJpYWwgPSBzcC0+aGRyLnNlcmlhbCwg
YWNrX3NlcmlhbCA9IDA7CiAJcnhycGNfc2VxX3Qgc2VxMCA9IHNwLT5oZHIuc2VxLCBoYXJkX2Fj
azsKIAlib29sIGltbWVkaWF0ZV9hY2sgPSBmYWxzZSwganVtYm9fYmFkID0gZmFsc2U7CkBAIC00
NTcsNyArNDU3LDggQEAgc3RhdGljIHZvaWQgcnhycGNfaW5wdXRfZGF0YShzdHJ1Y3QgcnhycGNf
Y2FsbCAqY2FsbCwgc3RydWN0IHNrX2J1ZmYgKnNrYikKIAljYWxsLT5hY2tyX3ByZXZfc2VxID0g
c2VxMDsKIAloYXJkX2FjayA9IFJFQURfT05DRShjYWxsLT5yeF9oYXJkX2Fjayk7CiAKLQlpZiAo
c3AtPm5yX3N1YnBhY2tldHMgPiAxKSB7CisJbnJfc3VicGFja2V0cyA9IHNwLT5ucl9zdWJwYWNr
ZXRzOworCWlmIChucl9zdWJwYWNrZXRzID4gMSkgewogCQlpZiAoY2FsbC0+bnJfanVtYm9fYmFk
ID4gMykgewogCQkJYWNrID0gUlhSUENfQUNLX05PU1BBQ0U7CiAJCQlhY2tfc2VyaWFsID0gc2Vy
aWFsOwpAQCAtNDY1LDExICs0NjYsMTEgQEAgc3RhdGljIHZvaWQgcnhycGNfaW5wdXRfZGF0YShz
dHJ1Y3QgcnhycGNfY2FsbCAqY2FsbCwgc3RydWN0IHNrX2J1ZmYgKnNrYikKIAkJfQogCX0KIAot
CWZvciAoaiA9IDA7IGogPCBzcC0+bnJfc3VicGFja2V0czsgaisrKSB7CisJZm9yIChqID0gMDsg
aiA8IG5yX3N1YnBhY2tldHM7IGorKykgewogCQlyeHJwY19zZXJpYWxfdCBzZXJpYWwgPSBzcC0+
aGRyLnNlcmlhbCArIGo7CiAJCXJ4cnBjX3NlcV90IHNlcSA9IHNlcTAgKyBqOwogCQl1bnNpZ25l
ZCBpbnQgaXggPSBzZXEgJiBSWFJQQ19SWFRYX0JVRkZfTUFTSzsKLQkJYm9vbCB0ZXJtaW5hbCA9
IChqID09IHNwLT5ucl9zdWJwYWNrZXRzIC0gMSk7CisJCWJvb2wgdGVybWluYWwgPSAoaiA9PSBu
cl9zdWJwYWNrZXRzIC0gMSk7CiAJCWJvb2wgbGFzdCA9IHRlcm1pbmFsICYmIChzcC0+cnhfZmxh
Z3MgJiBSWFJQQ19TS0JfSU5DTF9MQVNUKTsKIAkJdTggZmxhZ3MsIGFubm90YXRpb24gPSBqOwog
CkBAIC01MDYsNyArNTA3LDcgQEAgc3RhdGljIHZvaWQgcnhycGNfaW5wdXRfZGF0YShzdHJ1Y3Qg
cnhycGNfY2FsbCAqY2FsbCwgc3RydWN0IHNrX2J1ZmYgKnNrYikKIAkJfQogCiAJCWlmIChjYWxs
LT5yeHR4X2J1ZmZlcltpeF0pIHsKLQkJCXJ4cnBjX2lucHV0X2R1cF9kYXRhKGNhbGwsIHNlcSwg
c3AtPm5yX3N1YnBhY2tldHMgPiAxLAorCQkJcnhycGNfaW5wdXRfZHVwX2RhdGEoY2FsbCwgc2Vx
LCBucl9zdWJwYWNrZXRzID4gMSwKIAkJCQkJICAgICAmanVtYm9fYmFkKTsKIAkJCWlmIChhY2sg
IT0gUlhSUENfQUNLX0RVUExJQ0FURSkgewogCQkJCWFjayA9IFJYUlBDX0FDS19EVVBMSUNBVEU7
CkBAIC01NjQsNiArNTY1LDcgQEAgc3RhdGljIHZvaWQgcnhycGNfaW5wdXRfZGF0YShzdHJ1Y3Qg
cnhycGNfY2FsbCAqY2FsbCwgc3RydWN0IHNrX2J1ZmYgKnNrYikKIAkJCSAqIHJpbmcuCiAJCQkg
Ki8KIAkJCXNrYiA9IE5VTEw7CisJCQlzcCA9IE5VTEw7CiAJCX0KIAogCQlpZiAobGFzdCkgewot
LSAKMi4yMS4xCgo=

----Next_Part(Thu_Jan_30_11_12_27_2020_728)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_55.mbox"

RnJvbSA5YTc1N2Y0NjdlYTI2NzE0MTQ1OWUxMDEwYmJkMjFiNTM3ZDVkZDhkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTdmVuIEF1aGFnZW4gPHN2ZW4uYXVoYWdlbkB2b2xlYXRlY2gu
ZGU+CkRhdGU6IFNhdCwgMjUgSmFuIDIwMjAgMDg6MDc6MDMgKzAwMDAKU3ViamVjdDogW1BBVENI
IDAxLzEwXSBtdm5ldGEgZHJpdmVyIGRpc2FsbG93IFhEUCBwcm9ncmFtIG9uIGhhcmR3YXJlIGJ1
ZmZlcgogbWFuYWdlbWVudAoKWyBVcHN0cmVhbSBjb21taXQgNzk1NzJjOThjNTU0ZGNkYjA4MGJj
YTU0N2M4NzFhNTE3MTZkY2RmOCBdCgpSZWNlbnRseSBYRFAgU3VwcG9ydCB3YXMgYWRkZWQgdG8g
dGhlIG12bmV0YSBkcml2ZXIKZm9yIHNvZnR3YXJlIGJ1ZmZlciBtYW5hZ2VtZW50IG9ubHkuCkl0
IGlzIHN0aWxsIHBvc3NpYmxlIHRvIGF0dGFjaCBhbiBYRFAgcHJvZ3JhbSBpZgpoYXJkd2FyZSBi
dWZmZXIgbWFuYWdlbWVudCBpcyB1c2VkLgpJdCBpcyBub3QgZG9pbmcgYW55dGhpbmcgYXQgdGhh
dCBwb2ludC4KClRoZSBwYXRjaCBkaXNhbGxvd3MgYXR0YWNoaW5nIFhEUCBwcm9ncmFtcyB0byBt
dm5ldGEKaWYgaGFyZHdhcmUgYnVmZmVyIG1hbmFnZW1lbnQgaXMgdXNlZC4KCkkgYW0gc29ycnkg
YWJvdXQgdGhhdC4gSXQgaXMgbXkgZmlyc3Qgc3VibWlzc2lvbiBhbmQgSSBhbSBoYXZpbmcKc29t
ZSB0cm91YmxlcyB3aXRoIHRoZSBmb3JtYXQgb2YgbXkgZW1haWxzLgoKdjQgLT4gdjU6Ci0gUmVt
b3ZlIGV4dHJhIHRhYnMKCnYzIC0+IHY0OgotIFBsZWFzZSBpZ25vcmUgdjMgSSBhY2NpZGVudGFs
bHkgc3VibWl0dGVkCiAgbXkgb3RoZXIgcGF0Y2ggd2l0aCBnaXQtc2VuZC1tYWlsIGFuZCB2NCBp
cyBjb3JyZWN0Cgp2MiAtPiB2MzoKLSBNeSBtYWlsc2VydmVyIGNvcnJ1cHRlZCB0aGUgcGF0Y2gK
ICByZXN1Ym1pc3Npb24gd2l0aCBnaXQtc2VuZC1lbWFpbAoKdjEgLT4gdjI6Ci0gRml4aW5nIHRo
ZSBwYXRjaGVzIGluZGVudGF0aW9uCgpTaWduZWQtb2ZmLWJ5OiBTdmVuIEF1aGFnZW4gPHN2ZW4u
YXVoYWdlbkB2b2xlYXRlY2guZGU+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2
ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9tYXJ2ZWxsL212bmV0
YS5jIHwgNiArKysrKysKIDEgZmlsZSBjaGFuZ2VkLCA2IGluc2VydGlvbnMoKykKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9tYXJ2ZWxsL212bmV0YS5jIGIvZHJpdmVycy9uZXQv
ZXRoZXJuZXQvbWFydmVsbC9tdm5ldGEuYwppbmRleCA2N2FkOGI4YjEyN2QuLjhiYWQ1Yjg2NDY4
MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvbWFydmVsbC9tdm5ldGEuYworKysg
Yi9kcml2ZXJzL25ldC9ldGhlcm5ldC9tYXJ2ZWxsL212bmV0YS5jCkBAIC00MjI2LDYgKzQyMjYs
MTIgQEAgc3RhdGljIGludCBtdm5ldGFfeGRwX3NldHVwKHN0cnVjdCBuZXRfZGV2aWNlICpkZXYs
IHN0cnVjdCBicGZfcHJvZyAqcHJvZywKIAkJcmV0dXJuIC1FT1BOT1RTVVBQOwogCX0KIAorCWlm
IChwcC0+Ym1fcHJpdikgeworCQlOTF9TRVRfRVJSX01TR19NT0QoZXh0YWNrLAorCQkJCSAgICJI
YXJkd2FyZSBCdWZmZXIgTWFuYWdlbWVudCBub3Qgc3VwcG9ydGVkIG9uIFhEUCIpOworCQlyZXR1
cm4gLUVPUE5PVFNVUFA7CisJfQorCiAJbmVlZF91cGRhdGUgPSAhIXBwLT54ZHBfcHJvZyAhPSAh
IXByb2c7CiAJaWYgKHJ1bm5pbmcgJiYgbmVlZF91cGRhdGUpCiAJCW12bmV0YV9zdG9wKGRldik7
Ci0tIAoyLjIxLjEKCgpGcm9tIGJiZTFlZDczM2EwYWYzMjRjN2U4NTRkMzFmZDdjMTA0MmUyNWFl
MmYgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRA
Z29vZ2xlLmNvbT4KRGF0ZTogRnJpLCAyNCBKYW4gMjAyMCAxNDo1NzoyMCAtMDgwMApTdWJqZWN0
OiBbUEFUQ0ggMDIvMTBdIG5ldF9zY2hlZDogZW1hdGNoOiByZWplY3QgaW52YWxpZCBUQ0ZfRU1f
U0lNUExFCgpbIFVwc3RyZWFtIGNvbW1pdCA1NWNkOWY2N2YxZTQ1ZGU4NTE3Y2RhYWI5ODVmYjhl
NTZjMGJjMWQ4IF0KCkl0IGlzIHBvc3NpYmxlIGZvciBtYWxpY2lvdXMgdXNlcnNwYWNlIHRvIHNl
dCBUQ0ZfRU1fU0lNUExFIGJpdApldmVuIGZvciBtYXRjaGVzIHRoYXQgc2hvdWxkIG5vdCBoYXZl
IHRoaXMgYml0IHNldC4KClRoaXMgY2FuIGZvb2wgdHdvIHBsYWNlcyB1c2luZyB0Y2ZfZW1faXNf
c2ltcGxlKCkKCjEpIHRjZl9lbV90cmVlX2Rlc3Ryb3koKSAtPiBtZW1vcnkgbGVhayBvZiBlbS0+
ZGF0YQogICBpZiBvcHMtPmRlc3Ryb3koKSBpcyBOVUxMCgoyKSB0Y2ZfZW1fdHJlZV9kdW1wKCkg
d3JvbmdseSByZXBvcnQvbGVhayA0IGxvdy1vcmRlciBieXRlcwogICBvZiBhIGtlcm5lbCBwb2lu
dGVyLgoKQlVHOiBtZW1vcnkgbGVhawp1bnJlZmVyZW5jZWQgb2JqZWN0IDB4ZmZmZjg4ODEyMTg1
MGE0MCAoc2l6ZSAzMik6CiAgY29tbSAic3l6LWV4ZWN1dG9yOTI3IiwgcGlkIDcxOTMsIGppZmZp
ZXMgNDI5NDk0MTY1NSAoYWdlIDE5Ljg0MHMpCiAgaGV4IGR1bXAgKGZpcnN0IDMyIGJ5dGVzKToK
ICAgIDAwIDAwIDAwIDAwIDAxIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwICAuLi4u
Li4uLi4uLi4uLi4uCiAgICAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
MCAwMCAwMCAgLi4uLi4uLi4uLi4uLi4uLgogIGJhY2t0cmFjZToKICAgIFs8MDAwMDAwMDBmNjcw
MzZlYT5dIGttZW1sZWFrX2FsbG9jX3JlY3Vyc2l2ZSBpbmNsdWRlL2xpbnV4L2ttZW1sZWFrLmg6
NDMgW2lubGluZV0KICAgIFs8MDAwMDAwMDBmNjcwMzZlYT5dIHNsYWJfcG9zdF9hbGxvY19ob29r
IG1tL3NsYWIuaDo1ODYgW2lubGluZV0KICAgIFs8MDAwMDAwMDBmNjcwMzZlYT5dIHNsYWJfYWxs
b2MgbW0vc2xhYi5jOjMzMjAgW2lubGluZV0KICAgIFs8MDAwMDAwMDBmNjcwMzZlYT5dIF9fZG9f
a21hbGxvYyBtbS9zbGFiLmM6MzY1NCBbaW5saW5lXQogICAgWzwwMDAwMDAwMGY2NzAzNmVhPl0g
X19rbWFsbG9jX3RyYWNrX2NhbGxlcisweDE2NS8weDMwMCBtbS9zbGFiLmM6MzY3MQogICAgWzww
MDAwMDAwMGZhYjBjYzhlPl0ga21lbWR1cCsweDI3LzB4NjAgbW0vdXRpbC5jOjEyNwogICAgWzww
MDAwMDAwMGQ5OTkyZTBhPl0ga21lbWR1cCBpbmNsdWRlL2xpbnV4L3N0cmluZy5oOjQ1MyBbaW5s
aW5lXQogICAgWzwwMDAwMDAwMGQ5OTkyZTBhPl0gZW1fbmJ5dGVfY2hhbmdlKzB4NWIvMHg5MCBu
ZXQvc2NoZWQvZW1fbmJ5dGUuYzozMgogICAgWzwwMDAwMDAwMDdlMDRmNzExPl0gdGNmX2VtX3Zh
bGlkYXRlIG5ldC9zY2hlZC9lbWF0Y2guYzoyNDEgW2lubGluZV0KICAgIFs8MDAwMDAwMDA3ZTA0
ZjcxMT5dIHRjZl9lbV90cmVlX3ZhbGlkYXRlIG5ldC9zY2hlZC9lbWF0Y2guYzozNTkgW2lubGlu
ZV0KICAgIFs8MDAwMDAwMDA3ZTA0ZjcxMT5dIHRjZl9lbV90cmVlX3ZhbGlkYXRlKzB4MzMyLzB4
NDZmIG5ldC9zY2hlZC9lbWF0Y2guYzozMDAKICAgIFs8MDAwMDAwMDA3YTc2OTIwND5dIGJhc2lj
X3NldF9wYXJtcyBuZXQvc2NoZWQvY2xzX2Jhc2ljLmM6MTU3IFtpbmxpbmVdCiAgICBbPDAwMDAw
MDAwN2E3NjkyMDQ+XSBiYXNpY19jaGFuZ2UrMHgxZDcvMHg1ZjAgbmV0L3NjaGVkL2Nsc19iYXNp
Yy5jOjIxOQogICAgWzwwMDAwMDAwMGU1N2E1OTk3Pl0gdGNfbmV3X3RmaWx0ZXIrMHg1NjYvMHhm
NzAgbmV0L3NjaGVkL2Nsc19hcGkuYzoyMTA0CiAgICBbPDAwMDAwMDAwNzRiNjg1NTk+XSBydG5l
dGxpbmtfcmN2X21zZysweDNiMi8weDRiMCBuZXQvY29yZS9ydG5ldGxpbmsuYzo1NDE1CiAgICBb
PDAwMDAwMDAwYjdmZTUzZmI+XSBuZXRsaW5rX3Jjdl9za2IrMHg2MS8weDE3MCBuZXQvbmV0bGlu
ay9hZl9uZXRsaW5rLmM6MjQ3NwogICAgWzwwMDAwMDAwMGU4M2E0MGQwPl0gcnRuZXRsaW5rX3Jj
disweDFkLzB4MzAgbmV0L2NvcmUvcnRuZXRsaW5rLmM6NTQ0MgogICAgWzwwMDAwMDAwMGQ2MmJh
OTMzPl0gbmV0bGlua191bmljYXN0X2tlcm5lbCBuZXQvbmV0bGluay9hZl9uZXRsaW5rLmM6MTMw
MiBbaW5saW5lXQogICAgWzwwMDAwMDAwMGQ2MmJhOTMzPl0gbmV0bGlua191bmljYXN0KzB4MjIz
LzB4MzEwIG5ldC9uZXRsaW5rL2FmX25ldGxpbmsuYzoxMzI4CiAgICBbPDAwMDAwMDAwODgwNzBm
NzI+XSBuZXRsaW5rX3NlbmRtc2crMHgyYzAvMHg1NzAgbmV0L25ldGxpbmsvYWZfbmV0bGluay5j
OjE5MTcKICAgIFs8MDAwMDAwMDBmNzBiMTVlYT5dIHNvY2tfc2VuZG1zZ19ub3NlYyBuZXQvc29j
a2V0LmM6NjM5IFtpbmxpbmVdCiAgICBbPDAwMDAwMDAwZjcwYjE1ZWE+XSBzb2NrX3NlbmRtc2cr
MHg1NC8weDcwIG5ldC9zb2NrZXQuYzo2NTkKICAgIFs8MDAwMDAwMDBlZjk1YTliZT5dIF9fX19z
eXNfc2VuZG1zZysweDJkMC8weDMwMCBuZXQvc29ja2V0LmM6MjMzMAogICAgWzwwMDAwMDAwMGI2
NTBmMWFiPl0gX19fc3lzX3NlbmRtc2crMHg4YS8weGQwIG5ldC9zb2NrZXQuYzoyMzg0CiAgICBb
PDAwMDAwMDAwNTViZmE3NGE+XSBfX3N5c19zZW5kbXNnKzB4ODAvMHhmMCBuZXQvc29ja2V0LmM6
MjQxNwogICAgWzwwMDAwMDAwMDJhYmFjMTgzPl0gX19kb19zeXNfc2VuZG1zZyBuZXQvc29ja2V0
LmM6MjQyNiBbaW5saW5lXQogICAgWzwwMDAwMDAwMDJhYmFjMTgzPl0gX19zZV9zeXNfc2VuZG1z
ZyBuZXQvc29ja2V0LmM6MjQyNCBbaW5saW5lXQogICAgWzwwMDAwMDAwMDJhYmFjMTgzPl0gX194
NjRfc3lzX3NlbmRtc2crMHgyMy8weDMwIG5ldC9zb2NrZXQuYzoyNDI0CgpGaXhlczogMWRhMTc3
ZTRjM2Y0ICgiTGludXgtMi42LjEyLXJjMiIpClNpZ25lZC1vZmYtYnk6IEVyaWMgRHVtYXpldCA8
ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KUmVwb3J0ZWQtYnk6IHN5emJvdCswM2M0NzM4ZWQyOWQ1ZDM2
NmRkZkBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tCkNjOiBDb25nIFdhbmcgPHhpeW91Lndhbmdj
b25nQGdtYWlsLmNvbT4KQWNrZWQtYnk6IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21haWwu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+
Ci0tLQogbmV0L3NjaGVkL2VtYXRjaC5jIHwgMyArKysKIDEgZmlsZSBjaGFuZ2VkLCAzIGluc2Vy
dGlvbnMoKykKCmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvZW1hdGNoLmMgYi9uZXQvc2NoZWQvZW1h
dGNoLmMKaW5kZXggZDAxNDBhOTI2OTRhLi5kZDNiOGMxMWEyZTAgMTAwNjQ0Ci0tLSBhL25ldC9z
Y2hlZC9lbWF0Y2guYworKysgYi9uZXQvc2NoZWQvZW1hdGNoLmMKQEAgLTIzOCw2ICsyMzgsOSBA
QCBzdGF0aWMgaW50IHRjZl9lbV92YWxpZGF0ZShzdHJ1Y3QgdGNmX3Byb3RvICp0cCwKIAkJCWdv
dG8gZXJyb3V0OwogCiAJCWlmIChlbS0+b3BzLT5jaGFuZ2UpIHsKKwkJCWVyciA9IC1FSU5WQUw7
CisJCQlpZiAoZW1faGRyLT5mbGFncyAmIFRDRl9FTV9TSU1QTEUpCisJCQkJZ290byBlcnJvdXQ7
CiAJCQllcnIgPSBlbS0+b3BzLT5jaGFuZ2UobmV0LCBkYXRhLCBkYXRhX2xlbiwgZW0pOwogCQkJ
aWYgKGVyciA8IDApCiAJCQkJZ290byBlcnJvdXQ7Ci0tIAoyLjIxLjEKCgpGcm9tIDlkMjE2Y2Uy
OGEwYTU0YTE4Zjk2Y2FkZTRjM2Q4MjBjNmJhZjRiN2MgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAx
CkZyb206IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpEYXRlOiBUaHUsIDIz
IEphbiAyMDIwIDE2OjI2OjE4IC0wODAwClN1YmplY3Q6IFtQQVRDSCAwMy8xMF0gbmV0X3NjaGVk
OiBmaXggb3BzLT5iaW5kX2NsYXNzKCkgaW1wbGVtZW50YXRpb25zCgpbIFVwc3RyZWFtIGNvbW1p
dCAyZTI0Y2Q3NTU1NTIzNTBiOTRhNzYxNzYxN2M2ODc3YjhjYmNiNzAxIF0KClRoZSBjdXJyZW50
IGltcGxlbWVudGF0aW9ucyBvZiBvcHMtPmJpbmRfY2xhc3MoKSBhcmUgbWVyZWx5CnNlYXJjaGlu
ZyBmb3IgY2xhc3NpZCBhbmQgdXBkYXRpbmcgY2xhc3MgaW4gdGhlIHN0cnVjdCB0Y2ZfcmVzdWx0
LAp3aXRob3V0IGludm9raW5nIGVpdGhlciBvZiBjbF9vcHMtPmJpbmRfdGNmKCkgb3IKY2xfb3Bz
LT51bmJpbmRfdGNmKCkuIFRoaXMgYnJlYWtzIHRoZSBkZXNpZ24gb2YgdGhlbSBhcyBxZGlzYydz
Cmxpa2UgY2JxIHVzZSB0aGVtIHRvIGNvdW50IGZpbHRlcnMgdG9vLiBUaGlzIGlzIHdoeSBzeXpi
b3QgdHJpZ2dlcmVkCnRoZSB3YXJuaW5nIGluIGNicV9kZXN0cm95X2NsYXNzKCkuCgpJbiBvcmRl
ciB0byBmaXggdGhpcywgd2UgaGF2ZSB0byBjYWxsIGNsX29wcy0+YmluZF90Y2YoKSBhbmQKY2xf
b3BzLT51bmJpbmRfdGNmKCkgbGlrZSB0aGUgZmlsdGVyIGJpbmRpbmcgcGF0aC4gVGhpcyBwYXRj
aCBkb2VzCnNvIGJ5IHJlZmFjdG9yaW5nIG91dCB0d28gaGVscGVyIGZ1bmN0aW9ucyBfX3RjZl9i
aW5kX2ZpbHRlcigpCmFuZCBfX3RjZl91bmJpbmRfZmlsdGVyKCksIHdoaWNoIGFyZSBsb2NrbGVz
cyBhbmQgYWNjZXB0IGEgUWRpc2MKcG9pbnRlciwgdGhlbiB0ZWFjaGluZyBlYWNoIGltcGxlbWVu
dGF0aW9uIHRvIGNhbGwgdGhlbSBjb3JyZWN0bHkuCgpOb3RlLCB3ZSBtZXJlbHkgcGFzcyB0aGUg
UWRpc2MgcG9pbnRlciBhcyBhbiBvcGFxdWUgcG9pbnRlciB0bwplYWNoIGZpbHRlciwgdGhleSBv
bmx5IG5lZWQgdG8gcGFzcyBpdCBkb3duIHRvIHRoZSBoZWxwZXIKZnVuY3Rpb25zIHdpdGhvdXQg
dW5kZXJzdGFuZGluZyBpdCBhdCBhbGwuCgpGaXhlczogMDdkNzlmYzdkOTRlICgibmV0X3NjaGVk
OiBhZGQgcmV2ZXJzZSBiaW5kaW5nIGZvciB0YyBjbGFzcyIpClJlcG9ydGVkLWFuZC10ZXN0ZWQt
Ynk6IHN5emJvdCswYTA1OTYyMjAyMThmY2I2MDNhOEBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29t
ClJlcG9ydGVkLWFuZC10ZXN0ZWQtYnk6IHN5emJvdCs2M2JkYjYwMDY5NjFkOGM5MTdjNkBzeXpr
YWxsZXIuYXBwc3BvdG1haWwuY29tCkNjOiBKYW1hbCBIYWRpIFNhbGltIDxqaHNAbW9qYXRhdHUu
Y29tPgpDYzogSmlyaSBQaXJrbyA8amlyaUByZXNudWxsaS51cz4KU2lnbmVkLW9mZi1ieTogQ29u
ZyBXYW5nIDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMu
IE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBpbmNsdWRlL25ldC9wa3RfY2xzLmgg
ICAgIHwgMzMgKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tCiBpbmNsdWRlL25ldC9z
Y2hfZ2VuZXJpYy5oIHwgIDMgKystCiBuZXQvc2NoZWQvY2xzX2Jhc2ljLmMgICAgIHwgMTEgKysr
KysrKystLS0KIG5ldC9zY2hlZC9jbHNfYnBmLmMgICAgICAgfCAxMSArKysrKysrKy0tLQogbmV0
L3NjaGVkL2Nsc19mbG93ZXIuYyAgICB8IDExICsrKysrKysrLS0tCiBuZXQvc2NoZWQvY2xzX2Z3
LmMgICAgICAgIHwgMTEgKysrKysrKystLS0KIG5ldC9zY2hlZC9jbHNfbWF0Y2hhbGwuYyAgfCAx
MSArKysrKysrKy0tLQogbmV0L3NjaGVkL2Nsc19yb3V0ZS5jICAgICB8IDExICsrKysrKysrLS0t
CiBuZXQvc2NoZWQvY2xzX3JzdnAuaCAgICAgIHwgMTEgKysrKysrKystLS0KIG5ldC9zY2hlZC9j
bHNfdGNpbmRleC5jICAgfCAxMSArKysrKysrKy0tLQogbmV0L3NjaGVkL2Nsc191MzIuYyAgICAg
ICB8IDExICsrKysrKysrLS0tCiBuZXQvc2NoZWQvc2NoX2FwaS5jICAgICAgIHwgIDYgKysrKy0t
CiAxMiBmaWxlcyBjaGFuZ2VkLCA5NyBpbnNlcnRpb25zKCspLCA0NCBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9pbmNsdWRlL25ldC9wa3RfY2xzLmggYi9pbmNsdWRlL25ldC9wa3RfY2xzLmgK
aW5kZXggZTU1M2ZjODBlYjIzLi45OTc2YWQyZjU0ZmQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbmV0
L3BrdF9jbHMuaAorKysgYi9pbmNsdWRlL25ldC9wa3RfY2xzLmgKQEAgLTE0MSwzMSArMTQxLDM4
IEBAIF9fY2xzX3NldF9jbGFzcyh1bnNpZ25lZCBsb25nICpjbHAsIHVuc2lnbmVkIGxvbmcgY2wp
CiAJcmV0dXJuIHhjaGcoY2xwLCBjbCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9u
ZwotY2xzX3NldF9jbGFzcyhzdHJ1Y3QgUWRpc2MgKnEsIHVuc2lnbmVkIGxvbmcgKmNscCwgdW5z
aWduZWQgbG9uZyBjbCkKK3N0YXRpYyBpbmxpbmUgdm9pZAorX190Y2ZfYmluZF9maWx0ZXIoc3Ry
dWN0IFFkaXNjICpxLCBzdHJ1Y3QgdGNmX3Jlc3VsdCAqciwgdW5zaWduZWQgbG9uZyBiYXNlKQog
ewotCXVuc2lnbmVkIGxvbmcgb2xkX2NsOworCXVuc2lnbmVkIGxvbmcgY2w7CiAKLQlzY2hfdHJl
ZV9sb2NrKHEpOwotCW9sZF9jbCA9IF9fY2xzX3NldF9jbGFzcyhjbHAsIGNsKTsKLQlzY2hfdHJl
ZV91bmxvY2socSk7Ci0JcmV0dXJuIG9sZF9jbDsKKwljbCA9IHEtPm9wcy0+Y2xfb3BzLT5iaW5k
X3RjZihxLCBiYXNlLCByLT5jbGFzc2lkKTsKKwljbCA9IF9fY2xzX3NldF9jbGFzcygmci0+Y2xh
c3MsIGNsKTsKKwlpZiAoY2wpCisJCXEtPm9wcy0+Y2xfb3BzLT51bmJpbmRfdGNmKHEsIGNsKTsK
IH0KIAogc3RhdGljIGlubGluZSB2b2lkCiB0Y2ZfYmluZF9maWx0ZXIoc3RydWN0IHRjZl9wcm90
byAqdHAsIHN0cnVjdCB0Y2ZfcmVzdWx0ICpyLCB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3Ry
dWN0IFFkaXNjICpxID0gdHAtPmNoYWluLT5ibG9jay0+cTsKLQl1bnNpZ25lZCBsb25nIGNsOwog
CiAJLyogQ2hlY2sgcSBhcyBpdCBpcyBub3Qgc2V0IGZvciBzaGFyZWQgYmxvY2tzLiBJbiB0aGF0
IGNhc2UsCiAJICogc2V0dGluZyBjbGFzcyBpcyBub3Qgc3VwcG9ydGVkLgogCSAqLwogCWlmICgh
cSkKIAkJcmV0dXJuOwotCWNsID0gcS0+b3BzLT5jbF9vcHMtPmJpbmRfdGNmKHEsIGJhc2UsIHIt
PmNsYXNzaWQpOwotCWNsID0gY2xzX3NldF9jbGFzcyhxLCAmci0+Y2xhc3MsIGNsKTsKLQlpZiAo
Y2wpCisJc2NoX3RyZWVfbG9jayhxKTsKKwlfX3RjZl9iaW5kX2ZpbHRlcihxLCByLCBiYXNlKTsK
KwlzY2hfdHJlZV91bmxvY2socSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorX190Y2ZfdW5i
aW5kX2ZpbHRlcihzdHJ1Y3QgUWRpc2MgKnEsIHN0cnVjdCB0Y2ZfcmVzdWx0ICpyKQoreworCXVu
c2lnbmVkIGxvbmcgY2w7CisKKwlpZiAoKGNsID0gX19jbHNfc2V0X2NsYXNzKCZyLT5jbGFzcywg
MCkpICE9IDApCiAJCXEtPm9wcy0+Y2xfb3BzLT51bmJpbmRfdGNmKHEsIGNsKTsKIH0KIApAQCAt
MTczLDEyICsxODAsMTAgQEAgc3RhdGljIGlubGluZSB2b2lkCiB0Y2ZfdW5iaW5kX2ZpbHRlcihz
dHJ1Y3QgdGNmX3Byb3RvICp0cCwgc3RydWN0IHRjZl9yZXN1bHQgKnIpCiB7CiAJc3RydWN0IFFk
aXNjICpxID0gdHAtPmNoYWluLT5ibG9jay0+cTsKLQl1bnNpZ25lZCBsb25nIGNsOwogCiAJaWYg
KCFxKQogCQlyZXR1cm47Ci0JaWYgKChjbCA9IF9fY2xzX3NldF9jbGFzcygmci0+Y2xhc3MsIDAp
KSAhPSAwKQotCQlxLT5vcHMtPmNsX29wcy0+dW5iaW5kX3RjZihxLCBjbCk7CisJX190Y2ZfdW5i
aW5kX2ZpbHRlcihxLCByKTsKIH0KIAogc3RydWN0IHRjZl9leHRzIHsKZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUvbmV0L3NjaF9nZW5lcmljLmggYi9pbmNsdWRlL25ldC9zY2hfZ2VuZXJpYy5oCmluZGV4
IGZjZWRkZjg5NTkyYS4uMTUxMjA4NzA0ZWQyIDEwMDY0NAotLS0gYS9pbmNsdWRlL25ldC9zY2hf
Z2VuZXJpYy5oCisrKyBiL2luY2x1ZGUvbmV0L3NjaF9nZW5lcmljLmgKQEAgLTMxOCw3ICszMTgs
OCBAQCBzdHJ1Y3QgdGNmX3Byb3RvX29wcyB7CiAJCQkJCSAgdm9pZCAqdHlwZV9kYXRhKTsKIAl2
b2lkCQkJKCpod19kZWwpKHN0cnVjdCB0Y2ZfcHJvdG8gKnRwLAogCQkJCQkgIHZvaWQgKnR5cGVf
ZGF0YSk7Ci0Jdm9pZAkJCSgqYmluZF9jbGFzcykodm9pZCAqLCB1MzIsIHVuc2lnbmVkIGxvbmcp
OworCXZvaWQJCQkoKmJpbmRfY2xhc3MpKHZvaWQgKiwgdTMyLCB1bnNpZ25lZCBsb25nLAorCQkJ
CQkgICAgICB2b2lkICosIHVuc2lnbmVkIGxvbmcpOwogCXZvaWQgKgkJCSgqdG1wbHRfY3JlYXRl
KShzdHJ1Y3QgbmV0ICpuZXQsCiAJCQkJCQlzdHJ1Y3QgdGNmX2NoYWluICpjaGFpbiwKIAkJCQkJ
CXN0cnVjdCBubGF0dHIgKip0Y2EsCmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX2Jhc2ljLmMg
Yi9uZXQvc2NoZWQvY2xzX2Jhc2ljLmMKaW5kZXggNGFhZmJlM2Q0MzVjLi5mMjU2YTdjNjkwOTMg
MTAwNjQ0Ci0tLSBhL25ldC9zY2hlZC9jbHNfYmFzaWMuYworKysgYi9uZXQvc2NoZWQvY2xzX2Jh
c2ljLmMKQEAgLTI2MywxMiArMjYzLDE3IEBAIHN0YXRpYyB2b2lkIGJhc2ljX3dhbGsoc3RydWN0
IHRjZl9wcm90byAqdHAsIHN0cnVjdCB0Y2Zfd2Fsa2VyICphcmcsCiAJfQogfQogCi1zdGF0aWMg
dm9pZCBiYXNpY19iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9u
ZyBjbCkKK3N0YXRpYyB2b2lkIGJhc2ljX2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lk
LCB1bnNpZ25lZCBsb25nIGNsLCB2b2lkICpxLAorCQkJICAgICB1bnNpZ25lZCBsb25nIGJhc2Up
CiB7CiAJc3RydWN0IGJhc2ljX2ZpbHRlciAqZiA9IGZoOwogCi0JaWYgKGYgJiYgZi0+cmVzLmNs
YXNzaWQgPT0gY2xhc3NpZCkKLQkJZi0+cmVzLmNsYXNzID0gY2w7CisJaWYgKGYgJiYgZi0+cmVz
LmNsYXNzaWQgPT0gY2xhc3NpZCkgeworCQlpZiAoY2wpCisJCQlfX3RjZl9iaW5kX2ZpbHRlcihx
LCAmZi0+cmVzLCBiYXNlKTsKKwkJZWxzZQorCQkJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCAmZi0+
cmVzKTsKKwl9CiB9CiAKIHN0YXRpYyBpbnQgYmFzaWNfZHVtcChzdHJ1Y3QgbmV0ICpuZXQsIHN0
cnVjdCB0Y2ZfcHJvdG8gKnRwLCB2b2lkICpmaCwKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9jbHNf
YnBmLmMgYi9uZXQvc2NoZWQvY2xzX2JwZi5jCmluZGV4IDgyMjllZDRhNjdiZS4uNmUzZTYzZGIw
ZTAxIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX2JwZi5jCisrKyBiL25ldC9zY2hlZC9jbHNf
YnBmLmMKQEAgLTYzMSwxMiArNjMxLDE3IEBAIHN0YXRpYyBpbnQgY2xzX2JwZl9kdW1wKHN0cnVj
dCBuZXQgKm5ldCwgc3RydWN0IHRjZl9wcm90byAqdHAsIHZvaWQgKmZoLAogCXJldHVybiAtMTsK
IH0KIAotc3RhdGljIHZvaWQgY2xzX2JwZl9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3Np
ZCwgdW5zaWduZWQgbG9uZyBjbCkKK3N0YXRpYyB2b2lkIGNsc19icGZfYmluZF9jbGFzcyh2b2lk
ICpmaCwgdTMyIGNsYXNzaWQsIHVuc2lnbmVkIGxvbmcgY2wsCisJCQkgICAgICAgdm9pZCAqcSwg
dW5zaWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCBjbHNfYnBmX3Byb2cgKnByb2cgPSBmaDsK
IAotCWlmIChwcm9nICYmIHByb2ctPnJlcy5jbGFzc2lkID09IGNsYXNzaWQpCi0JCXByb2ctPnJl
cy5jbGFzcyA9IGNsOworCWlmIChwcm9nICYmIHByb2ctPnJlcy5jbGFzc2lkID09IGNsYXNzaWQp
IHsKKwkJaWYgKGNsKQorCQkJX190Y2ZfYmluZF9maWx0ZXIocSwgJnByb2ctPnJlcywgYmFzZSk7
CisJCWVsc2UKKwkJCV9fdGNmX3VuYmluZF9maWx0ZXIocSwgJnByb2ctPnJlcyk7CisJfQogfQog
CiBzdGF0aWMgdm9pZCBjbHNfYnBmX3dhbGsoc3RydWN0IHRjZl9wcm90byAqdHAsIHN0cnVjdCB0
Y2Zfd2Fsa2VyICphcmcsCmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX2Zsb3dlci5jIGIvbmV0
L3NjaGVkL2Nsc19mbG93ZXIuYwppbmRleCBiMGY0MmU2MmRkNzYuLmY5YzBkMWU4ZDM4MCAxMDA2
NDQKLS0tIGEvbmV0L3NjaGVkL2Nsc19mbG93ZXIuYworKysgYi9uZXQvc2NoZWQvY2xzX2Zsb3dl
ci5jCkBAIC0yNzY1LDEyICsyNzY1LDE3IEBAIHN0YXRpYyBpbnQgZmxfdG1wbHRfZHVtcChzdHJ1
Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgbmV0ICpuZXQsIHZvaWQgKnRtcGx0X3ByaXYpCiAJcmV0
dXJuIC1FTVNHU0laRTsKIH0KIAotc3RhdGljIHZvaWQgZmxfYmluZF9jbGFzcyh2b2lkICpmaCwg
dTMyIGNsYXNzaWQsIHVuc2lnbmVkIGxvbmcgY2wpCitzdGF0aWMgdm9pZCBmbF9iaW5kX2NsYXNz
KHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9uZyBjbCwgdm9pZCAqcSwKKwkJCSAg
dW5zaWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCBjbHNfZmxfZmlsdGVyICpmID0gZmg7CiAK
LQlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKQotCQlmLT5yZXMuY2xhc3MgPSBj
bDsKKwlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkKKwkJ
CV9fdGNmX2JpbmRfZmlsdGVyKHEsICZmLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3RjZl91
bmJpbmRfZmlsdGVyKHEsICZmLT5yZXMpOworCX0KIH0KIAogc3RhdGljIGJvb2wgZmxfZGVsZXRl
X2VtcHR5KHN0cnVjdCB0Y2ZfcHJvdG8gKnRwKQpkaWZmIC0tZ2l0IGEvbmV0L3NjaGVkL2Nsc19m
dy5jIGIvbmV0L3NjaGVkL2Nsc19mdy5jCmluZGV4IGM5NDk2YzkyMGQ2Zi4uZWM5NDUyOTQ2MjZh
IDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX2Z3LmMKKysrIGIvbmV0L3NjaGVkL2Nsc19mdy5j
CkBAIC00MTksMTIgKzQxOSwxNyBAQCBzdGF0aWMgaW50IGZ3X2R1bXAoc3RydWN0IG5ldCAqbmV0
LCBzdHJ1Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqZmgsCiAJcmV0dXJuIC0xOwogfQogCi1zdGF0
aWMgdm9pZCBmd19iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9u
ZyBjbCkKK3N0YXRpYyB2b2lkIGZ3X2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1
bnNpZ25lZCBsb25nIGNsLCB2b2lkICpxLAorCQkJICB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJ
c3RydWN0IGZ3X2ZpbHRlciAqZiA9IGZoOwogCi0JaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQgPT0g
Y2xhc3NpZCkKLQkJZi0+cmVzLmNsYXNzID0gY2w7CisJaWYgKGYgJiYgZi0+cmVzLmNsYXNzaWQg
PT0gY2xhc3NpZCkgeworCQlpZiAoY2wpCisJCQlfX3RjZl9iaW5kX2ZpbHRlcihxLCAmZi0+cmVz
LCBiYXNlKTsKKwkJZWxzZQorCQkJX190Y2ZfdW5iaW5kX2ZpbHRlcihxLCAmZi0+cmVzKTsKKwl9
CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgdGNmX3Byb3RvX29wcyBjbHNfZndfb3BzIF9fcmVhZF9tb3N0
bHkgPSB7CmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX21hdGNoYWxsLmMgYi9uZXQvc2NoZWQv
Y2xzX21hdGNoYWxsLmMKaW5kZXggN2ZjMmViNjJhYTk4Li4wMzljYzg2OTc0ZjQgMTAwNjQ0Ci0t
LSBhL25ldC9zY2hlZC9jbHNfbWF0Y2hhbGwuYworKysgYi9uZXQvc2NoZWQvY2xzX21hdGNoYWxs
LmMKQEAgLTM5MywxMiArMzkzLDE3IEBAIHN0YXRpYyBpbnQgbWFsbF9kdW1wKHN0cnVjdCBuZXQg
Km5ldCwgc3RydWN0IHRjZl9wcm90byAqdHAsIHZvaWQgKmZoLAogCXJldHVybiAtMTsKIH0KIAot
c3RhdGljIHZvaWQgbWFsbF9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWdu
ZWQgbG9uZyBjbCkKK3N0YXRpYyB2b2lkIG1hbGxfYmluZF9jbGFzcyh2b2lkICpmaCwgdTMyIGNs
YXNzaWQsIHVuc2lnbmVkIGxvbmcgY2wsIHZvaWQgKnEsCisJCQkgICAgdW5zaWduZWQgbG9uZyBi
YXNlKQogewogCXN0cnVjdCBjbHNfbWFsbF9oZWFkICpoZWFkID0gZmg7CiAKLQlpZiAoaGVhZCAm
JiBoZWFkLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKQotCQloZWFkLT5yZXMuY2xhc3MgPSBjbDsK
KwlpZiAoaGVhZCAmJiBoZWFkLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkK
KwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZoZWFkLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlf
X3RjZl91bmJpbmRfZmlsdGVyKHEsICZoZWFkLT5yZXMpOworCX0KIH0KIAogc3RhdGljIHN0cnVj
dCB0Y2ZfcHJvdG9fb3BzIGNsc19tYWxsX29wcyBfX3JlYWRfbW9zdGx5ID0gewpkaWZmIC0tZ2l0
IGEvbmV0L3NjaGVkL2Nsc19yb3V0ZS5jIGIvbmV0L3NjaGVkL2Nsc19yb3V0ZS5jCmluZGV4IDJk
OWUwYjQ0ODRlYS4uNmY4Nzg2YjA2YmRlIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX3JvdXRl
LmMKKysrIGIvbmV0L3NjaGVkL2Nsc19yb3V0ZS5jCkBAIC02NDEsMTIgKzY0MSwxNyBAQCBzdGF0
aWMgaW50IHJvdXRlNF9kdW1wKHN0cnVjdCBuZXQgKm5ldCwgc3RydWN0IHRjZl9wcm90byAqdHAs
IHZvaWQgKmZoLAogCXJldHVybiAtMTsKIH0KIAotc3RhdGljIHZvaWQgcm91dGU0X2JpbmRfY2xh
c3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGljIHZvaWQg
cm91dGU0X2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNs
LCB2b2lkICpxLAorCQkJICAgICAgdW5zaWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCByb3V0
ZTRfZmlsdGVyICpmID0gZmg7CiAKLQlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lk
KQotCQlmLT5yZXMuY2xhc3MgPSBjbDsKKwlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFz
c2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZmLT5yZXMsIGJhc2Up
OworCQllbHNlCisJCQlfX3RjZl91bmJpbmRfZmlsdGVyKHEsICZmLT5yZXMpOworCX0KIH0KIAog
c3RhdGljIHN0cnVjdCB0Y2ZfcHJvdG9fb3BzIGNsc19yb3V0ZTRfb3BzIF9fcmVhZF9tb3N0bHkg
PSB7CmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX3JzdnAuaCBiL25ldC9zY2hlZC9jbHNfcnN2
cC5oCmluZGV4IDJmM2MwM2IyNWQ1ZC4uYzIyNjI0MTMxOTQ5IDEwMDY0NAotLS0gYS9uZXQvc2No
ZWQvY2xzX3JzdnAuaAorKysgYi9uZXQvc2NoZWQvY2xzX3JzdnAuaApAQCAtNzM4LDEyICs3Mzgs
MTcgQEAgc3RhdGljIGludCByc3ZwX2R1bXAoc3RydWN0IG5ldCAqbmV0LCBzdHJ1Y3QgdGNmX3By
b3RvICp0cCwgdm9pZCAqZmgsCiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9pZCByc3ZwX2Jp
bmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGlj
IHZvaWQgcnN2cF9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3NpZCwgdW5zaWduZWQgbG9u
ZyBjbCwgdm9pZCAqcSwKKwkJCSAgICB1bnNpZ25lZCBsb25nIGJhc2UpCiB7CiAJc3RydWN0IHJz
dnBfZmlsdGVyICpmID0gZmg7CiAKLQlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lk
KQotCQlmLT5yZXMuY2xhc3MgPSBjbDsKKwlpZiAoZiAmJiBmLT5yZXMuY2xhc3NpZCA9PSBjbGFz
c2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNmX2JpbmRfZmlsdGVyKHEsICZmLT5yZXMsIGJhc2Up
OworCQllbHNlCisJCQlfX3RjZl91bmJpbmRfZmlsdGVyKHEsICZmLT5yZXMpOworCX0KIH0KIAog
c3RhdGljIHN0cnVjdCB0Y2ZfcHJvdG9fb3BzIFJTVlBfT1BTIF9fcmVhZF9tb3N0bHkgPSB7CmRp
ZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX3RjaW5kZXguYyBiL25ldC9zY2hlZC9jbHNfdGNpbmRl
eC5jCmluZGV4IGU1NzNlNWE1Yzc5NC4uM2Q0YTEyODAzNTJmIDEwMDY0NAotLS0gYS9uZXQvc2No
ZWQvY2xzX3RjaW5kZXguYworKysgYi9uZXQvc2NoZWQvY2xzX3RjaW5kZXguYwpAQCAtNjU0LDEy
ICs2NTQsMTcgQEAgc3RhdGljIGludCB0Y2luZGV4X2R1bXAoc3RydWN0IG5ldCAqbmV0LCBzdHJ1
Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqZmgsCiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9p
ZCB0Y2luZGV4X2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25n
IGNsKQorc3RhdGljIHZvaWQgdGNpbmRleF9iaW5kX2NsYXNzKHZvaWQgKmZoLCB1MzIgY2xhc3Np
ZCwgdW5zaWduZWQgbG9uZyBjbCwKKwkJCSAgICAgICB2b2lkICpxLCB1bnNpZ25lZCBsb25nIGJh
c2UpCiB7CiAJc3RydWN0IHRjaW5kZXhfZmlsdGVyX3Jlc3VsdCAqciA9IGZoOwogCi0JaWYgKHIg
JiYgci0+cmVzLmNsYXNzaWQgPT0gY2xhc3NpZCkKLQkJci0+cmVzLmNsYXNzID0gY2w7CisJaWYg
KHIgJiYgci0+cmVzLmNsYXNzaWQgPT0gY2xhc3NpZCkgeworCQlpZiAoY2wpCisJCQlfX3RjZl9i
aW5kX2ZpbHRlcihxLCAmci0+cmVzLCBiYXNlKTsKKwkJZWxzZQorCQkJX190Y2ZfdW5iaW5kX2Zp
bHRlcihxLCAmci0+cmVzKTsKKwl9CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgdGNmX3Byb3RvX29wcyBj
bHNfdGNpbmRleF9vcHMgX19yZWFkX21vc3RseSA9IHsKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9j
bHNfdTMyLmMgYi9uZXQvc2NoZWQvY2xzX3UzMi5jCmluZGV4IGEwZTZmYWM2MTNkZS4uZTE1ZmYz
MzU5NTNkIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvY2xzX3UzMi5jCisrKyBiL25ldC9zY2hlZC9j
bHNfdTMyLmMKQEAgLTEyNTUsMTIgKzEyNTUsMTcgQEAgc3RhdGljIGludCB1MzJfcmVvZmZsb2Fk
KHN0cnVjdCB0Y2ZfcHJvdG8gKnRwLCBib29sIGFkZCwgZmxvd19zZXR1cF9jYl90ICpjYiwKIAly
ZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgdTMyX2JpbmRfY2xhc3Modm9pZCAqZmgsIHUzMiBj
bGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsKQorc3RhdGljIHZvaWQgdTMyX2JpbmRfY2xhc3Modm9p
ZCAqZmgsIHUzMiBjbGFzc2lkLCB1bnNpZ25lZCBsb25nIGNsLCB2b2lkICpxLAorCQkJICAgdW5z
aWduZWQgbG9uZyBiYXNlKQogewogCXN0cnVjdCB0Y191X2tub2RlICpuID0gZmg7CiAKLQlpZiAo
biAmJiBuLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKQotCQluLT5yZXMuY2xhc3MgPSBjbDsKKwlp
ZiAobiAmJiBuLT5yZXMuY2xhc3NpZCA9PSBjbGFzc2lkKSB7CisJCWlmIChjbCkKKwkJCV9fdGNm
X2JpbmRfZmlsdGVyKHEsICZuLT5yZXMsIGJhc2UpOworCQllbHNlCisJCQlfX3RjZl91bmJpbmRf
ZmlsdGVyKHEsICZuLT5yZXMpOworCX0KIH0KIAogc3RhdGljIGludCB1MzJfZHVtcChzdHJ1Y3Qg
bmV0ICpuZXQsIHN0cnVjdCB0Y2ZfcHJvdG8gKnRwLCB2b2lkICpmaCwKZGlmZiAtLWdpdCBhL25l
dC9zY2hlZC9zY2hfYXBpLmMgYi9uZXQvc2NoZWQvc2NoX2FwaS5jCmluZGV4IDEwNDc4MjVkOWY0
OC4uOTQzYWQzNDI1MzgwIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvc2NoX2FwaS5jCisrKyBiL25l
dC9zY2hlZC9zY2hfYXBpLmMKQEAgLTE4OTEsOCArMTg5MSw5IEBAIHN0YXRpYyBpbnQgdGNsYXNz
X2RlbF9ub3RpZnkoc3RydWN0IG5ldCAqbmV0LAogCiBzdHJ1Y3QgdGNmX2JpbmRfYXJncyB7CiAJ
c3RydWN0IHRjZl93YWxrZXIgdzsKLQl1MzIgY2xhc3NpZDsKKwl1bnNpZ25lZCBsb25nIGJhc2U7
CiAJdW5zaWduZWQgbG9uZyBjbDsKKwl1MzIgY2xhc3NpZDsKIH07CiAKIHN0YXRpYyBpbnQgdGNm
X25vZGVfYmluZChzdHJ1Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqbiwgc3RydWN0IHRjZl93YWxr
ZXIgKmFyZykKQEAgLTE5MDMsNyArMTkwNCw3IEBAIHN0YXRpYyBpbnQgdGNmX25vZGVfYmluZChz
dHJ1Y3QgdGNmX3Byb3RvICp0cCwgdm9pZCAqbiwgc3RydWN0IHRjZl93YWxrZXIgKmFyZykKIAkJ
c3RydWN0IFFkaXNjICpxID0gdGNmX2Jsb2NrX3EodHAtPmNoYWluLT5ibG9jayk7CiAKIAkJc2No
X3RyZWVfbG9jayhxKTsKLQkJdHAtPm9wcy0+YmluZF9jbGFzcyhuLCBhLT5jbGFzc2lkLCBhLT5j
bCk7CisJCXRwLT5vcHMtPmJpbmRfY2xhc3MobiwgYS0+Y2xhc3NpZCwgYS0+Y2wsIHEsIGEtPmJh
c2UpOwogCQlzY2hfdHJlZV91bmxvY2socSk7CiAJfQogCXJldHVybiAwOwpAQCAtMTkzNiw2ICsx
OTM3LDcgQEAgc3RhdGljIHZvaWQgdGNfYmluZF90Y2xhc3Moc3RydWN0IFFkaXNjICpxLCB1MzIg
cG9ydGlkLCB1MzIgY2xpZCwKIAogCQkJYXJnLncuZm4gPSB0Y2Zfbm9kZV9iaW5kOwogCQkJYXJn
LmNsYXNzaWQgPSBjbGlkOworCQkJYXJnLmJhc2UgPSBjbDsKIAkJCWFyZy5jbCA9IG5ld19jbDsK
IAkJCXRwLT5vcHMtPndhbGsodHAsICZhcmcudywgdHJ1ZSk7CiAJCX0KLS0gCjIuMjEuMQoKCkZy
b20gMDM4OTk4ODE0ZTk4ZDdjMWRhMTI2MmI3ZTI2ZjM0ZGIwZjFkNGQ3NyBNb24gU2VwIDE3IDAw
OjAwOjAwIDIwMDEKRnJvbTogQ29uZyBXYW5nIDx4aXlvdS53YW5nY29uZ0BnbWFpbC5jb20+CkRh
dGU6IFRodSwgMjMgSmFuIDIwMjAgMTc6Mjc6MDggLTA4MDAKU3ViamVjdDogW1BBVENIIDA0LzEw
XSBuZXRfc2NoZWQ6IHdhbGsgdGhyb3VnaCBhbGwgY2hpbGQgY2xhc3NlcyBpbgogdGNfYmluZF90
Y2xhc3MoKQoKWyBVcHN0cmVhbSBjb21taXQgNzYwZDIyOGUzMjJlOTljZGY2ZDgxYjRiNjBhMjY4
YjhmMTNjZjY3YSBdCgpJbiBhIGNvbXBsZXggVEMgY2xhc3MgaGllcmFyY2h5IGxpa2UgdGhpczoK
CnRjIHFkaXNjIGFkZCBkZXYgZXRoMCByb290IGhhbmRsZSAxOjAgY2JxIGJhbmR3aWR0aCAxMDBN
Yml0ICAgICAgICAgXAogIGF2cGt0IDEwMDAgY2VsbCA4CnRjIGNsYXNzIGFkZCBkZXYgZXRoMCBw
YXJlbnQgMTowIGNsYXNzaWQgMToxIGNicSBiYW5kd2lkdGggMTAwTWJpdCAgXAogIHJhdGUgNk1i
aXQgd2VpZ2h0IDAuNk1iaXQgcHJpbyA4IGFsbG90IDE1MTQgY2VsbCA4IG1heGJ1cnN0IDIwICAg
ICAgXAogIGF2cGt0IDEwMDAgYm91bmRlZAoKdGMgZmlsdGVyIGFkZCBkZXYgZXRoMCBwYXJlbnQg
MTowIHByb3RvY29sIGlwIHByaW8gMSB1MzIgbWF0Y2ggaXAgXAogIHNwb3J0IDgwIDB4ZmZmZiBm
bG93aWQgMTozCnRjIGZpbHRlciBhZGQgZGV2IGV0aDAgcGFyZW50IDE6MCBwcm90b2NvbCBpcCBw
cmlvIDEgdTMyIG1hdGNoIGlwIFwKICBzcG9ydCAyNSAweGZmZmYgZmxvd2lkIDE6NAoKdGMgY2xh
c3MgYWRkIGRldiBldGgwIHBhcmVudCAxOjEgY2xhc3NpZCAxOjMgY2JxIGJhbmR3aWR0aCAxMDBN
Yml0ICBcCiAgcmF0ZSA1TWJpdCB3ZWlnaHQgMC41TWJpdCBwcmlvIDUgYWxsb3QgMTUxNCBjZWxs
IDggbWF4YnVyc3QgMjAgICAgICBcCiAgYXZwa3QgMTAwMAp0YyBjbGFzcyBhZGQgZGV2IGV0aDAg
cGFyZW50IDE6MSBjbGFzc2lkIDE6NCBjYnEgYmFuZHdpZHRoIDEwME1iaXQgIFwKICByYXRlIDNN
Yml0IHdlaWdodCAwLjNNYml0IHByaW8gNSBhbGxvdCAxNTE0IGNlbGwgOCBtYXhidXJzdCAyMCAg
ICAgIFwKICBhdnBrdCAxMDAwCgp3aGVyZSBmaWx0ZXJzIGFyZSBpbnN0YWxsZWQgb24gcWRpc2Mg
MTowLCBzbyB3ZSBjYW4ndCBtZXJlbHkKc2VhcmNoIGZyb20gY2xhc3MgMToxIHdoZW4gY3JlYXRp
bmcgY2xhc3MgMTozIGFuZCBjbGFzcyAxOjQuIFdlIGhhdmUKdG8gd2FsayB0aHJvdWdoIGFsbCB0
aGUgY2hpbGQgY2xhc3NlcyBvZiB0aGUgZGlyZWN0IHBhcmVudCBxZGlzYy4KT3RoZXJ3aXNlIHdl
IHdvdWxkIG1pc3MgZmlsdGVycyB0aG9zZSBuZWVkIHJldmVyc2UgYmluZGluZy4KCkZpeGVzOiAw
N2Q3OWZjN2Q5NGUgKCJuZXRfc2NoZWQ6IGFkZCByZXZlcnNlIGJpbmRpbmcgZm9yIHRjIGNsYXNz
IikKQ2M6IEphbWFsIEhhZGkgU2FsaW0gPGpoc0Btb2phdGF0dS5jb20+CkNjOiBKaXJpIFBpcmtv
IDxqaXJpQHJlc251bGxpLnVzPgpTaWduZWQtb2ZmLWJ5OiBDb25nIFdhbmcgPHhpeW91Lndhbmdj
b25nQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZl
bWxvZnQubmV0PgotLS0KIG5ldC9zY2hlZC9zY2hfYXBpLmMgfCA0MSArKysrKysrKysrKysrKysr
KysrKysrKysrKysrKystLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDMwIGluc2VydGlvbnMo
KyksIDExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9zY2hfYXBpLmMgYi9u
ZXQvc2NoZWQvc2NoX2FwaS5jCmluZGV4IDk0M2FkMzQyNTM4MC4uNTA3OTQxMjViZjAyIDEwMDY0
NAotLS0gYS9uZXQvc2NoZWQvc2NoX2FwaS5jCisrKyBiL25ldC9zY2hlZC9zY2hfYXBpLmMKQEAg
LTE5MTAsMjIgKzE5MTAsMjQgQEAgc3RhdGljIGludCB0Y2Zfbm9kZV9iaW5kKHN0cnVjdCB0Y2Zf
cHJvdG8gKnRwLCB2b2lkICpuLCBzdHJ1Y3QgdGNmX3dhbGtlciAqYXJnKQogCXJldHVybiAwOwog
fQogCi1zdGF0aWMgdm9pZCB0Y19iaW5kX3RjbGFzcyhzdHJ1Y3QgUWRpc2MgKnEsIHUzMiBwb3J0
aWQsIHUzMiBjbGlkLAotCQkJICAgdW5zaWduZWQgbG9uZyBuZXdfY2wpCitzdHJ1Y3QgdGNfYmlu
ZF9jbGFzc19hcmdzIHsKKwlzdHJ1Y3QgcWRpc2Nfd2Fsa2VyIHc7CisJdW5zaWduZWQgbG9uZyBu
ZXdfY2w7CisJdTMyIHBvcnRpZDsKKwl1MzIgY2xpZDsKK307CisKK3N0YXRpYyBpbnQgdGNfYmlu
ZF9jbGFzc193YWxrZXIoc3RydWN0IFFkaXNjICpxLCB1bnNpZ25lZCBsb25nIGNsLAorCQkJCXN0
cnVjdCBxZGlzY193YWxrZXIgKncpCiB7CisJc3RydWN0IHRjX2JpbmRfY2xhc3NfYXJncyAqYSA9
IChzdHJ1Y3QgdGNfYmluZF9jbGFzc19hcmdzICopdzsKIAljb25zdCBzdHJ1Y3QgUWRpc2NfY2xh
c3Nfb3BzICpjb3BzID0gcS0+b3BzLT5jbF9vcHM7CiAJc3RydWN0IHRjZl9ibG9jayAqYmxvY2s7
CiAJc3RydWN0IHRjZl9jaGFpbiAqY2hhaW47Ci0JdW5zaWduZWQgbG9uZyBjbDsKIAotCWNsID0g
Y29wcy0+ZmluZChxLCBwb3J0aWQpOwotCWlmICghY2wpCi0JCXJldHVybjsKLQlpZiAoIWNvcHMt
PnRjZl9ibG9jaykKLQkJcmV0dXJuOwogCWJsb2NrID0gY29wcy0+dGNmX2Jsb2NrKHEsIGNsLCBO
VUxMKTsKIAlpZiAoIWJsb2NrKQotCQlyZXR1cm47CisJCXJldHVybiAwOwogCWZvciAoY2hhaW4g
PSB0Y2ZfZ2V0X25leHRfY2hhaW4oYmxvY2ssIE5VTEwpOwogCSAgICAgY2hhaW47CiAJICAgICBj
aGFpbiA9IHRjZl9nZXRfbmV4dF9jaGFpbihibG9jaywgY2hhaW4pKSB7CkBAIC0xOTM2LDEyICsx
OTM4LDI5IEBAIHN0YXRpYyB2b2lkIHRjX2JpbmRfdGNsYXNzKHN0cnVjdCBRZGlzYyAqcSwgdTMy
IHBvcnRpZCwgdTMyIGNsaWQsCiAJCQlzdHJ1Y3QgdGNmX2JpbmRfYXJncyBhcmcgPSB7fTsKIAog
CQkJYXJnLncuZm4gPSB0Y2Zfbm9kZV9iaW5kOwotCQkJYXJnLmNsYXNzaWQgPSBjbGlkOworCQkJ
YXJnLmNsYXNzaWQgPSBhLT5jbGlkOwogCQkJYXJnLmJhc2UgPSBjbDsKLQkJCWFyZy5jbCA9IG5l
d19jbDsKKwkJCWFyZy5jbCA9IGEtPm5ld19jbDsKIAkJCXRwLT5vcHMtPndhbGsodHAsICZhcmcu
dywgdHJ1ZSk7CiAJCX0KIAl9CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgdGNfYmlu
ZF90Y2xhc3Moc3RydWN0IFFkaXNjICpxLCB1MzIgcG9ydGlkLCB1MzIgY2xpZCwKKwkJCSAgIHVu
c2lnbmVkIGxvbmcgbmV3X2NsKQoreworCWNvbnN0IHN0cnVjdCBRZGlzY19jbGFzc19vcHMgKmNv
cHMgPSBxLT5vcHMtPmNsX29wczsKKwlzdHJ1Y3QgdGNfYmluZF9jbGFzc19hcmdzIGFyZ3MgPSB7
fTsKKworCWlmICghY29wcy0+dGNmX2Jsb2NrKQorCQlyZXR1cm47CisJYXJncy5wb3J0aWQgPSBw
b3J0aWQ7CisJYXJncy5jbGlkID0gY2xpZDsKKwlhcmdzLm5ld19jbCA9IG5ld19jbDsKKwlhcmdz
LncuZm4gPSB0Y19iaW5kX2NsYXNzX3dhbGtlcjsKKwlxLT5vcHMtPmNsX29wcy0+d2FsayhxLCAm
YXJncy53KTsKIH0KIAogI2Vsc2UKLS0gCjIuMjEuMQoKCkZyb20gODZhZTVjMTkwOTU0ZGE3NDk0
MmE3ZmVhZmFjMDQxM2EzMGEwNTVlYiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTG9y
ZW56byBCaWFuY29uaSA8bG9yZW56b0BrZXJuZWwub3JnPgpEYXRlOiBTYXQsIDI1IEphbiAyMDIw
IDEyOjQ4OjUwICswMTAwClN1YmplY3Q6IFtQQVRDSCAwNS8xMF0gbmV0OiBzb2Npb25leHQ6IGZp
eCBwb3NzaWJsZSB1c2VyLWFmdGVyLWZyZWUgaW4KIG5ldHNlY19wcm9jZXNzX3J4CgpbIFVwc3Ry
ZWFtIGNvbW1pdCBiNWU4MmUzYzg5Yzc4ZWUwNDA3ZWE4ZTgwODdhZjU1MTliNmM3YmFlIF0KCkZp
eCBwb3NzaWJsZSB1c2UtYWZ0ZXItZnJlZSBpbiBpbiBuZXRzZWNfcHJvY2Vzc19yeCB0aGF0IGNh
biBvY2N1cnMgaWYKdGhlIGZpcnN0IHBhY2tldCBpcyBzZW50IHRvIHRoZSBub3JtYWwgbmV0d29y
a2luZyBzdGFjayBhbmQgdGhlCmZvbGxvd2luZyBvbmUgaXMgZHJvcHBlZCBieSB0aGUgYnBmIHBy
b2dyYW0gYXR0YWNoZWQgdG8gdGhlIHhkcCBob29rLgpGaXggdGhlIGlzc3VlIGRlZmluaW5nIHRo
ZSBza2IgcG9pbnRlciBpbiB0aGUgJ2J1ZGdldCcgbG9vcAoKRml4ZXM6IGJhMmIyMzIxMDhkM2Mg
KCJuZXQ6IG5ldHNlYzogYWRkIFhEUCBzdXBwb3J0IikKU2lnbmVkLW9mZi1ieTogTG9yZW56byBC
aWFuY29uaSA8bG9yZW56b0BrZXJuZWwub3JnPgpBY2tlZC1ieTogSmVzcGVyIERhbmdhYXJkIEJy
b3VlciA8YnJvdWVyQHJlZGhhdC5jb20+CkFja2VkLWJ5OiBJbGlhcyBBcGFsb2RpbWFzIDxpbGlh
cy5hcGFsb2RpbWFzQGxpbmFyby5vcmc+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8
ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQv
bmV0c2VjLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRp
b24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2Vj
LmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2VjLmMKaW5kZXggODY5YTQ5
OGUzYjVlLi4wZTEyYTk4NTZhZWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L3Nv
Y2lvbmV4dC9uZXRzZWMuYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0
c2VjLmMKQEAgLTkyOSw3ICs5MjksNiBAQCBzdGF0aWMgaW50IG5ldHNlY19wcm9jZXNzX3J4KHN0
cnVjdCBuZXRzZWNfcHJpdiAqcHJpdiwgaW50IGJ1ZGdldCkKIAlzdHJ1Y3QgbmV0c2VjX3J4X3Br
dF9pbmZvIHJ4X2luZm87CiAJZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZG1hX2RpcjsKIAlzdHJ1
Y3QgYnBmX3Byb2cgKnhkcF9wcm9nOwotCXN0cnVjdCBza19idWZmICpza2IgPSBOVUxMOwogCXUx
NiB4ZHBfeG1pdCA9IDA7CiAJdTMyIHhkcF9hY3QgPSAwOwogCWludCBkb25lID0gMDsKQEAgLTk0
Myw2ICs5NDIsNyBAQCBzdGF0aWMgaW50IG5ldHNlY19wcm9jZXNzX3J4KHN0cnVjdCBuZXRzZWNf
cHJpdiAqcHJpdiwgaW50IGJ1ZGdldCkKIAkJc3RydWN0IG5ldHNlY19kZSAqZGUgPSBkcmluZy0+
dmFkZHIgKyAoREVTQ19TWiAqIGlkeCk7CiAJCXN0cnVjdCBuZXRzZWNfZGVzYyAqZGVzYyA9ICZk
cmluZy0+ZGVzY1tpZHhdOwogCQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IHZpcnRfdG9fcGFnZShkZXNj
LT5hZGRyKTsKKwkJc3RydWN0IHNrX2J1ZmYgKnNrYiA9IE5VTEw7CiAJCXUzMiB4ZHBfcmVzdWx0
ID0gWERQX1BBU1M7CiAJCXUxNiBwa3RfbGVuLCBkZXNjX2xlbjsKIAkJZG1hX2FkZHJfdCBkbWFf
aGFuZGxlOwotLSAKMi4yMS4xCgoKRnJvbSAyYmQ3MjZkN2UzMmRlM2FiYzljYzE5N2ZmNWI0NzU2
NDY1YTU0NjAxIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBMb3JlbnpvIEJpYW5jb25p
IDxsb3JlbnpvQGtlcm5lbC5vcmc+CkRhdGU6IFNhdCwgMjUgSmFuIDIwMjAgMTI6NDg6NTEgKzAx
MDAKU3ViamVjdDogW1BBVENIIDA2LzEwXSBuZXQ6IHNvY2lvbmV4dDogZml4IHhkcF9yZXN1bHQg
aW5pdGlhbGl6YXRpb24gaW4KIG5ldHNlY19wcm9jZXNzX3J4CgpbIFVwc3RyZWFtIGNvbW1pdCAw
Mjc1OGNiNmRhYzMxYTJiNGJkOWU1MzVjZmZiZTcxOGFjZDQ2NDA0IF0KCkZpeCB4ZHBfcmVzdWx0
IGluaXRpYWxpemF0aW9uIGluIG5ldHNlY19wcm9jZXNzX3J4IGluIG9yZGVyIHRvIG5vdAppbmNy
ZWFzZSByeCBjb3VudGVycyBpZiB0aGVyZSBpcyBubyBicGYgcHJvZ3JhbSBhdHRhY2hlZCB0byB0
aGUgeGRwIGhvb2sKYW5kIG5hcGlfZ3JvX3JlY2VpdmUgcmV0dXJucyBHUk9fRFJPUAoKRml4ZXM6
IGJhMmIyMzIxMDhkM2MgKCJuZXQ6IG5ldHNlYzogYWRkIFhEUCBzdXBwb3J0IikKU2lnbmVkLW9m
Zi1ieTogTG9yZW56byBCaWFuY29uaSA8bG9yZW56b0BrZXJuZWwub3JnPgpBY2tlZC1ieTogSmVz
cGVyIERhbmdhYXJkIEJyb3VlciA8YnJvdWVyQHJlZGhhdC5jb20+CkFja2VkLWJ5OiBJbGlhcyBB
cGFsb2RpbWFzIDxpbGlhcy5hcGFsb2RpbWFzQGxpbmFyby5vcmc+ClNpZ25lZC1vZmYtYnk6IERh
dmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhl
cm5ldC9zb2Npb25leHQvbmV0c2VjLmMgfCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRp
b24oKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9z
b2Npb25leHQvbmV0c2VjLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9zb2Npb25leHQvbmV0c2Vj
LmMKaW5kZXggMGUxMmE5ODU2YWVhLi41NmMwZTY0M2Y0MzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
bmV0L2V0aGVybmV0L3NvY2lvbmV4dC9uZXRzZWMuYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5l
dC9zb2Npb25leHQvbmV0c2VjLmMKQEAgLTk0Miw4ICs5NDIsOCBAQCBzdGF0aWMgaW50IG5ldHNl
Y19wcm9jZXNzX3J4KHN0cnVjdCBuZXRzZWNfcHJpdiAqcHJpdiwgaW50IGJ1ZGdldCkKIAkJc3Ry
dWN0IG5ldHNlY19kZSAqZGUgPSBkcmluZy0+dmFkZHIgKyAoREVTQ19TWiAqIGlkeCk7CiAJCXN0
cnVjdCBuZXRzZWNfZGVzYyAqZGVzYyA9ICZkcmluZy0+ZGVzY1tpZHhdOwogCQlzdHJ1Y3QgcGFn
ZSAqcGFnZSA9IHZpcnRfdG9fcGFnZShkZXNjLT5hZGRyKTsKKwkJdTMyIHhkcF9yZXN1bHQgPSBO
RVRTRUNfWERQX1BBU1M7CiAJCXN0cnVjdCBza19idWZmICpza2IgPSBOVUxMOwotCQl1MzIgeGRw
X3Jlc3VsdCA9IFhEUF9QQVNTOwogCQl1MTYgcGt0X2xlbiwgZGVzY19sZW47CiAJCWRtYV9hZGRy
X3QgZG1hX2hhbmRsZTsKIAkJc3RydWN0IHhkcF9idWZmIHhkcDsKLS0gCjIuMjEuMQoKCkZyb20g
NGM2MzEzZTVjOWVhYTg4YWQ0YjAxODVjOGNiYTU5ZWY2ODMyYTRlYSBNb24gU2VwIDE3IDAwOjAw
OjAwIDIwMDEKRnJvbTogV2lsbGVtIGRlIEJydWlqbiA8d2lsbGVtYkBnb29nbGUuY29tPgpEYXRl
OiBNb24sIDI3IEphbiAyMDIwIDE1OjQwOjMxIC0wNTAwClN1YmplY3Q6IFtQQVRDSCAwNy8xMF0g
dWRwOiBzZWdtZW50IGxvb3BlZCBnc28gcGFja2V0cyBjb3JyZWN0bHkKClsgVXBzdHJlYW0gY29t
bWl0IDZjZDAyMWE1OGMxOGExNzMxZjdlNDdmODNlMTcyYzBjMzAyZDY1ZTUgXQoKTXVsdGljYXN0
IGFuZCBicm9hZGNhc3QgcGFja2V0cyBjYW4gYmUgbG9vcGVkIGZyb20gZWdyZXNzIHRvIGluZ3Jl
c3MKcHJlIHNlZ21lbnRhdGlvbiB3aXRoIGRldl9sb29wYmFja194bWl0LiBUaGF0IGZ1bmN0aW9u
IHVuY29uZGl0aW9uYWxseQpzZXRzIGlwX3N1bW1lZCB0byBDSEVDS1NVTV9VTk5FQ0VTU0FSWS4K
CnVkcF9yY3Zfc2VnbWVudCBzZWdtZW50cyBnc28gcGFja2V0cyBpbiB0aGUgdWRwIHJ4IHBhdGgu
IFNlZ21lbnRhdGlvbgp1c3VhbGx5IGV4ZWN1dGVzIG9uIGVncmVzcywgYW5kIGRvZXMgbm90IGV4
cGVjdCBwYWNrZXRzIG9mIHRoaXMgdHlwZS4KX191ZHBfZ3NvX3NlZ21lbnQgaW50ZXJwcmV0cyAh
Q0hFQ0tTVU1fUEFSVElBTCBhcyBDSEVDS1NVTV9OT05FLiBCdXQKdGhlIG9mZnNldHMgYXJlIG5v
dCBjb3JyZWN0IGZvciBnc29fbWFrZV9jaGVja3N1bS4KClVEUCBHU08gcGFja2V0cyBhcmUgb2Yg
dHlwZSBDSEVDS1NVTV9QQVJUSUFMLCB3aXRoIHRoZWlyIHVoLT5jaGVjayBzZXQKdG8gdGhlIGNv
cnJlY3QgcHNldWRvIGhlYWRlciBjaGVja3N1bS4gUmVzZXQgaXBfc3VtbWVkIHRvIHRoaXMgdHlw
ZS4KKENIRUNLU1VNX1BBUlRJQUwgaXMgYWxsb3dlZCBvbiBpbmdyZXNzLCBzZWUgY29tbWVudHMg
aW4gc2tidWZmLmgpCgpSZXBvcnRlZC1ieTogc3l6Ym90IDxzeXprYWxsZXJAZ29vZ2xlZ3JvdXBz
LmNvbT4KRml4ZXM6IGNmMzI5YWE0MmI2NiAoInVkcDogY29wZSB3aXRoIFVEUCBHUk8gcGFja2V0
IG1pc2RpcmVjdGlvbiIpClNpZ25lZC1vZmYtYnk6IFdpbGxlbSBkZSBCcnVpam4gPHdpbGxlbWJA
Z29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxv
ZnQubmV0PgotLS0KIGluY2x1ZGUvbmV0L3VkcC5oIHwgMyArKysKIDEgZmlsZSBjaGFuZ2VkLCAz
IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9pbmNsdWRlL25ldC91ZHAuaCBiL2luY2x1ZGUv
bmV0L3VkcC5oCmluZGV4IGJhZDc0Zjc4MDgzMS4uOGYxNjNkNjc0ZjA3IDEwMDY0NAotLS0gYS9p
bmNsdWRlL25ldC91ZHAuaAorKysgYi9pbmNsdWRlL25ldC91ZHAuaApAQCAtNDc2LDYgKzQ3Niw5
IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHNrX2J1ZmYgKnVkcF9yY3Zfc2VnbWVudChzdHJ1Y3Qg
c29jayAqc2ssCiAJaWYgKCFpbmV0X2dldF9jb252ZXJ0X2NzdW0oc2spKQogCQlmZWF0dXJlcyB8
PSBORVRJRl9GX0lQX0NTVU0gfCBORVRJRl9GX0lQVjZfQ1NVTTsKIAorCWlmIChza2ItPnBrdF90
eXBlID09IFBBQ0tFVF9MT09QQkFDSykKKwkJc2tiLT5pcF9zdW1tZWQgPSBDSEVDS1NVTV9QQVJU
SUFMOworCiAJLyogdGhlIEdTTyBDQiBsYXlzIGFmdGVyIHRoZSBVRFAgb25lLCBubyBuZWVkIHRv
IHNhdmUgYW5kIHJlc3RvcmUgYW55CiAJICogQ0IgZnJhZ21lbnQKIAkgKi8KLS0gCjIuMjEuMQoK
CkZyb20gOWZiZmIwYTc4NDU4M2M3ZTBmZjc4ZjJkMWNmYmIyMTI4MGQzNWIyNyBNb24gU2VwIDE3
IDAwOjAwOjAwIDIwMDEKRnJvbTogQ2hyaXN0b3BoZSBKQUlMTEVUIDxjaHJpc3RvcGhlLmphaWxs
ZXRAd2FuYWRvby5mcj4KRGF0ZTogU2F0LCAyNSBKYW4gMjAyMCAyMjoxODo0NyArMDEwMApTdWJq
ZWN0OiBbUEFUQ0ggMDgvMTBdIG1seHN3OiBtaW5pbWFsOiBGaXggYW4gZXJyb3IgaGFuZGxpbmcg
cGF0aCBpbgogJ21seHN3X21fcG9ydF9jcmVhdGUoKScKClsgVXBzdHJlYW0gY29tbWl0IDZkZDRi
NGYzOTM2ZTE3ZmVkZWExMzA4YmM3MGU5NzE2ZjY4YmYyMzIgXQoKQW4gJ2FsbG9jX2V0aGVyZGV2
KCknIGNhbGxlZCBpcyBub3QgYmFsbGFuY2VkIGJ5IGEgY29ycmVzcG9uZGluZwonZnJlZV9uZXRk
ZXYoKScgY2FsbCBpbiBvbmUgZXJyb3IgaGFuZGxpbmcgcGF0aC4KClNsaWdobHkgcmVvcmRlciB0
aGUgZXJyb3IgaGFuZGxpbmcgY29kZSB0byBjYXRjaCB0aGUgbWlzc2VkIGNhc2UuCgpGaXhlczog
YzEwMGU0N2NhYThlICgibWx4c3c6IG1pbmltYWw6IEFkZCBldGh0b29sIHN1cHBvcnQiKQpTaWdu
ZWQtb2ZmLWJ5OiBDaHJpc3RvcGhlIEpBSUxMRVQgPGNocmlzdG9waGUuamFpbGxldEB3YW5hZG9v
LmZyPgpSZXZpZXdlZC1ieTogSWRvIFNjaGltbWVsIDxpZG9zY2hAbWVsbGFub3guY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJp
dmVycy9uZXQvZXRoZXJuZXQvbWVsbGFub3gvbWx4c3cvbWluaW1hbC5jIHwgMiArLQogMSBmaWxl
IGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9uZXQvZXRoZXJuZXQvbWVsbGFub3gvbWx4c3cvbWluaW1hbC5jIGIvZHJpdmVycy9uZXQv
ZXRoZXJuZXQvbWVsbGFub3gvbWx4c3cvbWluaW1hbC5jCmluZGV4IDJiNTQzOTExYWUwMC4uYzRj
YWVlYWRjYmE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9tbHhz
dy9taW5pbWFsLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvbWVsbGFub3gvbWx4c3cvbWlu
aW1hbC5jCkBAIC0yMTMsOCArMjEzLDggQEAgbWx4c3dfbV9wb3J0X2NyZWF0ZShzdHJ1Y3QgbWx4
c3dfbSAqbWx4c3dfbSwgdTggbG9jYWxfcG9ydCwgdTggbW9kdWxlKQogCiBlcnJfcmVnaXN0ZXJf
bmV0ZGV2OgogCW1seHN3X20tPnBvcnRzW2xvY2FsX3BvcnRdID0gTlVMTDsKLQlmcmVlX25ldGRl
dihkZXYpOwogZXJyX2Rldl9hZGRyX2dldDoKKwlmcmVlX25ldGRldihkZXYpOwogZXJyX2FsbG9j
X2V0aGVyZGV2OgogCW1seHN3X2NvcmVfcG9ydF9maW5pKG1seHN3X20tPmNvcmUsIGxvY2FsX3Bv
cnQpOwogCXJldHVybiBlcnI7Ci0tIAoyLjIxLjEKCgpGcm9tIDIxMjZlYjQ5NDFhMzU3ZDU3NjU5
MDA1MzU4MjYxMDM1ZjdkYTY1ZWQgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFN0ZXBo
ZW4gV29ybGV5IDxzd29ybGV5QGN1bXVsdXNuZXR3b3Jrcy5jb20+CkRhdGU6IEZyaSwgMjQgSmFu
IDIwMjAgMTY6NTM6MjcgLTA1MDAKU3ViamVjdDogW1BBVENIIDA5LzEwXSBuZXQ6IGluY2x1ZGUg
c3RydWN0IG5obXNnIHNpemUgaW4gbmggbmxtc2cgc2l6ZQoKWyBVcHN0cmVhbSBjb21taXQgZjll
OTU1NTU3NTc5MTVmYzE5NDI4ODg2MmQyOTc4ZTM3MGZlMzE2YiBdCgpJbmNsdWRlIHRoZSBzaXpl
IG9mIHN0cnVjdCBuaG1zZyBzaXplIHdoZW4gY2FsY3VsYXRpbmcKaG93IG11Y2ggb2YgYSBwYXls
b2FkIHRvIGFsbG9jYXRlIGluIGEgbmV3IG5ldGxpbmsgbmV4dGhvcApub3RpZmljYXRpb24gbWVz
c2FnZS4KCldpdGhvdXQgdGhpcywgd2Ugd2lsbCBmYWlsIHRvIGZpbGwgdGhlIHNrYnVmZiBhdCBj
ZXJ0YWluIG5leHRob3AKZ3JvdXAgc2l6ZXMuCgpZb3UgY2FuIHJlcHJvZHVjZSB0aGUgZmFpbHVy
ZSB3aXRoIHRoZSBmb2xsb3dpbmcgaXByb3V0ZTIgY29tbWFuZHM6CgppcCBsaW5rIGFkZCBkdW1t
eTEgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTIgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBk
dW1teTMgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTQgdHlwZSBkdW1teQppcCBsaW5rIGFk
ZCBkdW1teTUgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTYgdHlwZSBkdW1teQppcCBsaW5r
IGFkZCBkdW1teTcgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTggdHlwZSBkdW1teQppcCBs
aW5rIGFkZCBkdW1teTkgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTEwIHR5cGUgZHVtbXkK
aXAgbGluayBhZGQgZHVtbXkxMSB0eXBlIGR1bW15CmlwIGxpbmsgYWRkIGR1bW15MTIgdHlwZSBk
dW1teQppcCBsaW5rIGFkZCBkdW1teTEzIHR5cGUgZHVtbXkKaXAgbGluayBhZGQgZHVtbXkxNCB0
eXBlIGR1bW15CmlwIGxpbmsgYWRkIGR1bW15MTUgdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1t
eTE2IHR5cGUgZHVtbXkKaXAgbGluayBhZGQgZHVtbXkxNyB0eXBlIGR1bW15CmlwIGxpbmsgYWRk
IGR1bW15MTggdHlwZSBkdW1teQppcCBsaW5rIGFkZCBkdW1teTE5IHR5cGUgZHVtbXkKCmlwIHJv
IGFkZCAxLjEuMS4xLzMyIGRldiBkdW1teTEKaXAgcm8gYWRkIDEuMS4xLjIvMzIgZGV2IGR1bW15
MgppcCBybyBhZGQgMS4xLjEuMy8zMiBkZXYgZHVtbXkzCmlwIHJvIGFkZCAxLjEuMS40LzMyIGRl
diBkdW1teTQKaXAgcm8gYWRkIDEuMS4xLjUvMzIgZGV2IGR1bW15NQppcCBybyBhZGQgMS4xLjEu
Ni8zMiBkZXYgZHVtbXk2CmlwIHJvIGFkZCAxLjEuMS43LzMyIGRldiBkdW1teTcKaXAgcm8gYWRk
IDEuMS4xLjgvMzIgZGV2IGR1bW15OAppcCBybyBhZGQgMS4xLjEuOS8zMiBkZXYgZHVtbXk5Cmlw
IHJvIGFkZCAxLjEuMS4xMC8zMiBkZXYgZHVtbXkxMAppcCBybyBhZGQgMS4xLjEuMTEvMzIgZGV2
IGR1bW15MTEKaXAgcm8gYWRkIDEuMS4xLjEyLzMyIGRldiBkdW1teTEyCmlwIHJvIGFkZCAxLjEu
MS4xMy8zMiBkZXYgZHVtbXkxMwppcCBybyBhZGQgMS4xLjEuMTQvMzIgZGV2IGR1bW15MTQKaXAg
cm8gYWRkIDEuMS4xLjE1LzMyIGRldiBkdW1teTE1CmlwIHJvIGFkZCAxLjEuMS4xNi8zMiBkZXYg
ZHVtbXkxNgppcCBybyBhZGQgMS4xLjEuMTcvMzIgZGV2IGR1bW15MTcKaXAgcm8gYWRkIDEuMS4x
LjE4LzMyIGRldiBkdW1teTE4CmlwIHJvIGFkZCAxLjEuMS4xOS8zMiBkZXYgZHVtbXkxOQoKaXAg
bmV4dCBhZGQgaWQgMSB2aWEgMS4xLjEuMSBkZXYgZHVtbXkxCmlwIG5leHQgYWRkIGlkIDIgdmlh
IDEuMS4xLjIgZGV2IGR1bW15MgppcCBuZXh0IGFkZCBpZCAzIHZpYSAxLjEuMS4zIGRldiBkdW1t
eTMKaXAgbmV4dCBhZGQgaWQgNCB2aWEgMS4xLjEuNCBkZXYgZHVtbXk0CmlwIG5leHQgYWRkIGlk
IDUgdmlhIDEuMS4xLjUgZGV2IGR1bW15NQppcCBuZXh0IGFkZCBpZCA2IHZpYSAxLjEuMS42IGRl
diBkdW1teTYKaXAgbmV4dCBhZGQgaWQgNyB2aWEgMS4xLjEuNyBkZXYgZHVtbXk3CmlwIG5leHQg
YWRkIGlkIDggdmlhIDEuMS4xLjggZGV2IGR1bW15OAppcCBuZXh0IGFkZCBpZCA5IHZpYSAxLjEu
MS45IGRldiBkdW1teTkKaXAgbmV4dCBhZGQgaWQgMTAgdmlhIDEuMS4xLjEwIGRldiBkdW1teTEw
CmlwIG5leHQgYWRkIGlkIDExIHZpYSAxLjEuMS4xMSBkZXYgZHVtbXkxMQppcCBuZXh0IGFkZCBp
ZCAxMiB2aWEgMS4xLjEuMTIgZGV2IGR1bW15MTIKaXAgbmV4dCBhZGQgaWQgMTMgdmlhIDEuMS4x
LjEzIGRldiBkdW1teTEzCmlwIG5leHQgYWRkIGlkIDE0IHZpYSAxLjEuMS4xNCBkZXYgZHVtbXkx
NAppcCBuZXh0IGFkZCBpZCAxNSB2aWEgMS4xLjEuMTUgZGV2IGR1bW15MTUKaXAgbmV4dCBhZGQg
aWQgMTYgdmlhIDEuMS4xLjE2IGRldiBkdW1teTE2CmlwIG5leHQgYWRkIGlkIDE3IHZpYSAxLjEu
MS4xNyBkZXYgZHVtbXkxNwppcCBuZXh0IGFkZCBpZCAxOCB2aWEgMS4xLjEuMTggZGV2IGR1bW15
MTgKaXAgbmV4dCBhZGQgaWQgMTkgdmlhIDEuMS4xLjE5IGRldiBkdW1teTE5CgppcCBuZXh0IGFk
ZCBpZCAxMTExIGdyb3VwIDEvMi8zLzQvNS82LzcvOC85LzEwLzExLzEyLzEzLzE0LzE1LzE2LzE3
LzE4LzE5CmlwIG5leHQgZGVsIGlkIDExMTEKCkZpeGVzOiA0MzBhMDQ5MTkwZGUgKCJuZXh0aG9w
OiBBZGQgc3VwcG9ydCBmb3IgbmV4dGhvcCBncm91cHMiKQpTaWduZWQtb2ZmLWJ5OiBTdGVwaGVu
IFdvcmxleSA8c3dvcmxleUBjdW11bHVzbmV0d29ya3MuY29tPgpSZXZpZXdlZC1ieTogRGF2aWQg
QWhlcm4gPGRzYWhlcm5AZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIg
PGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2lwdjQvbmV4dGhvcC5jIHwgNCArKystCiAx
IGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0
IGEvbmV0L2lwdjQvbmV4dGhvcC5jIGIvbmV0L2lwdjQvbmV4dGhvcC5jCmluZGV4IDUxMWVhYTk0
ZTJkMS4uZDA3MmMzMjZkZDY0IDEwMDY0NAotLS0gYS9uZXQvaXB2NC9uZXh0aG9wLmMKKysrIGIv
bmV0L2lwdjQvbmV4dGhvcC5jCkBAIC0zMjEsNyArMzIxLDkgQEAgc3RhdGljIHNpemVfdCBuaF9u
bG1zZ19zaXplX3NpbmdsZShzdHJ1Y3QgbmV4dGhvcCAqbmgpCiAKIHN0YXRpYyBzaXplX3Qgbmhf
bmxtc2dfc2l6ZShzdHJ1Y3QgbmV4dGhvcCAqbmgpCiB7Ci0Jc2l6ZV90IHN6ID0gbmxhX3RvdGFs
X3NpemUoNCk7ICAgIC8qIE5IQV9JRCAqLworCXNpemVfdCBzeiA9IE5MTVNHX0FMSUdOKHNpemVv
ZihzdHJ1Y3Qgbmhtc2cpKTsKKworCXN6ICs9IG5sYV90b3RhbF9zaXplKDQpOyAvKiBOSEFfSUQg
Ki8KIAogCWlmIChuaC0+aXNfZ3JvdXApCiAJCXN6ICs9IG5oX25sbXNnX3NpemVfZ3JwKG5oKTsK
LS0gCjIuMjEuMQoKCkZyb20gN2Y3ZjA0ZTdmZmU5ZWQ4NzQ2ZDgxNjJhZWVmNTk1MGY4NDNlNjQ1
OCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogRGF2aWQgSG93ZWxscyA8ZGhvd2VsbHNA
cmVkaGF0LmNvbT4KRGF0ZTogRnJpLCAyNCBKYW4gMjAyMCAyMzowODowNCArMDAwMApTdWJqZWN0
OiBbUEFUQ0ggMTAvMTBdIHJ4cnBjOiBGaXggdXNlLWFmdGVyLWZyZWUgaW4gcnhycGNfcmVjZWl2
ZV9kYXRhKCkKClsgVXBzdHJlYW0gY29tbWl0IDEyMmQ3NGZhYzg0MjA0YjlhOTgyNjM2MzZmNmY5
YTNiMmU2NjU2MzkgXQoKVGhlIHN1YnBhY2tldCBzY2FubmluZyBsb29wIGluIHJ4cnBjX3JlY2Vp
dmVfZGF0YSgpIHJlZmVyZW5jZXMgdGhlCnN1YnBhY2tldCBjb3VudCBpbiB0aGUgcHJpdmF0ZSBk
YXRhIHBhcnQgb2YgdGhlIHNrX2J1ZmYgaW4gdGhlIGxvb3AKdGVybWluYXRpb24gY29uZGl0aW9u
LiAgSG93ZXZlciwgd2hlbiB0aGUgZmluYWwgc3VicGFja2V0IGlzIHBhc3RlZCBpbnRvCnRoZSBy
aW5nIGJ1ZmZlciwgdGhlIGZ1bmN0aW9uIGlzIG5vIGxvbmdlciBoYXMgYSByZWYgb24gdGhlIHNr
X2J1ZmYgYW5kCnNob3VsZCBub3QgYmUgbG9va2luZyBhdCBzcC0+KiBhbnkgbW9yZS4gIFRoaXMg
cG9pbnQgaXMgYWN0dWFsbHkgbWFya2VkIGluCnRoZSBjb2RlIHdoZW4gc2tiIGlzIGNsZWFyZWQg
KGJ1dCBzcCBpcyBub3QgLSB3aGljaCBpcyBhbiBlcnJvcikuCgpGaXggdGhpcyBieSBjYWNoaW5n
IHNwLT5ucl9zdWJwYWNrZXRzIGluIGEgbG9jYWwgdmFyaWFibGUgYW5kIHVzaW5nIHRoYXQKaW5z
dGVhZC4KCkFsc28gY2xlYXIgJ3NwJyB0byBjYXRjaCBhY2Nlc3NlcyBhZnRlciB0aGF0IHBvaW50
LgoKVGhpcyBjYW4gc2hvdyB1cCBhcyBhbiBvb3BzIGluIHJ4cnBjX2dldF9za2IoKSBpZiBzcC0+
bnJfc3VicGFja2V0cyBnZXRzCnRyYXNoZWQgYnkgdGhlIHNrX2J1ZmYgZ2V0dGluZyBmcmVlZCBh
bmQgcmV1c2VkIGluIHRoZSBtZWFudGltZS4KCkZpeGVzOiBlMmRlNmM0MDQ4OTggKCJyeHJwYzog
VXNlIGluZm8gaW4gc2tidWZmIGluc3RlYWQgb2YgcmVwYXJzaW5nIGEganVtYm8gcGFja2V0IikK
U2lnbmVkLW9mZi1ieTogRGF2aWQgSG93ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9y
eHJwYy9pbnB1dC5jIHwgMTIgKysrKysrKy0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNyBpbnNlcnRp
b25zKCspLCA1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9yeHJwYy9pbnB1dC5jIGIv
bmV0L3J4cnBjL2lucHV0LmMKaW5kZXggODZiZDEzM2I0ZmEwLi45NmQ1NGU1YmY3YmMgMTAwNjQ0
Ci0tLSBhL25ldC9yeHJwYy9pbnB1dC5jCisrKyBiL25ldC9yeHJwYy9pbnB1dC5jCkBAIC00MTMs
NyArNDEzLDcgQEAgc3RhdGljIHZvaWQgcnhycGNfaW5wdXRfZGF0YShzdHJ1Y3QgcnhycGNfY2Fs
bCAqY2FsbCwgc3RydWN0IHNrX2J1ZmYgKnNrYikKIHsKIAlzdHJ1Y3QgcnhycGNfc2tiX3ByaXYg
KnNwID0gcnhycGNfc2tiKHNrYik7CiAJZW51bSByeHJwY19jYWxsX3N0YXRlIHN0YXRlOwotCXVu
c2lnbmVkIGludCBqOworCXVuc2lnbmVkIGludCBqLCBucl9zdWJwYWNrZXRzOwogCXJ4cnBjX3Nl
cmlhbF90IHNlcmlhbCA9IHNwLT5oZHIuc2VyaWFsLCBhY2tfc2VyaWFsID0gMDsKIAlyeHJwY19z
ZXFfdCBzZXEwID0gc3AtPmhkci5zZXEsIGhhcmRfYWNrOwogCWJvb2wgaW1tZWRpYXRlX2FjayA9
IGZhbHNlLCBqdW1ib19iYWQgPSBmYWxzZTsKQEAgLTQ1Nyw3ICs0NTcsOCBAQCBzdGF0aWMgdm9p
ZCByeHJwY19pbnB1dF9kYXRhKHN0cnVjdCByeHJwY19jYWxsICpjYWxsLCBzdHJ1Y3Qgc2tfYnVm
ZiAqc2tiKQogCWNhbGwtPmFja3JfcHJldl9zZXEgPSBzZXEwOwogCWhhcmRfYWNrID0gUkVBRF9P
TkNFKGNhbGwtPnJ4X2hhcmRfYWNrKTsKIAotCWlmIChzcC0+bnJfc3VicGFja2V0cyA+IDEpIHsK
Kwlucl9zdWJwYWNrZXRzID0gc3AtPm5yX3N1YnBhY2tldHM7CisJaWYgKG5yX3N1YnBhY2tldHMg
PiAxKSB7CiAJCWlmIChjYWxsLT5ucl9qdW1ib19iYWQgPiAzKSB7CiAJCQlhY2sgPSBSWFJQQ19B
Q0tfTk9TUEFDRTsKIAkJCWFja19zZXJpYWwgPSBzZXJpYWw7CkBAIC00NjUsMTEgKzQ2NiwxMSBA
QCBzdGF0aWMgdm9pZCByeHJwY19pbnB1dF9kYXRhKHN0cnVjdCByeHJwY19jYWxsICpjYWxsLCBz
dHJ1Y3Qgc2tfYnVmZiAqc2tiKQogCQl9CiAJfQogCi0JZm9yIChqID0gMDsgaiA8IHNwLT5ucl9z
dWJwYWNrZXRzOyBqKyspIHsKKwlmb3IgKGogPSAwOyBqIDwgbnJfc3VicGFja2V0czsgaisrKSB7
CiAJCXJ4cnBjX3NlcmlhbF90IHNlcmlhbCA9IHNwLT5oZHIuc2VyaWFsICsgajsKIAkJcnhycGNf
c2VxX3Qgc2VxID0gc2VxMCArIGo7CiAJCXVuc2lnbmVkIGludCBpeCA9IHNlcSAmIFJYUlBDX1JY
VFhfQlVGRl9NQVNLOwotCQlib29sIHRlcm1pbmFsID0gKGogPT0gc3AtPm5yX3N1YnBhY2tldHMg
LSAxKTsKKwkJYm9vbCB0ZXJtaW5hbCA9IChqID09IG5yX3N1YnBhY2tldHMgLSAxKTsKIAkJYm9v
bCBsYXN0ID0gdGVybWluYWwgJiYgKHNwLT5yeF9mbGFncyAmIFJYUlBDX1NLQl9JTkNMX0xBU1Qp
OwogCQl1OCBmbGFncywgYW5ub3RhdGlvbiA9IGo7CiAKQEAgLTUwNiw3ICs1MDcsNyBAQCBzdGF0
aWMgdm9pZCByeHJwY19pbnB1dF9kYXRhKHN0cnVjdCByeHJwY19jYWxsICpjYWxsLCBzdHJ1Y3Qg
c2tfYnVmZiAqc2tiKQogCQl9CiAKIAkJaWYgKGNhbGwtPnJ4dHhfYnVmZmVyW2l4XSkgewotCQkJ
cnhycGNfaW5wdXRfZHVwX2RhdGEoY2FsbCwgc2VxLCBzcC0+bnJfc3VicGFja2V0cyA+IDEsCisJ
CQlyeHJwY19pbnB1dF9kdXBfZGF0YShjYWxsLCBzZXEsIG5yX3N1YnBhY2tldHMgPiAxLAogCQkJ
CQkgICAgICZqdW1ib19iYWQpOwogCQkJaWYgKGFjayAhPSBSWFJQQ19BQ0tfRFVQTElDQVRFKSB7
CiAJCQkJYWNrID0gUlhSUENfQUNLX0RVUExJQ0FURTsKQEAgLTU2NCw2ICs1NjUsNyBAQCBzdGF0
aWMgdm9pZCByeHJwY19pbnB1dF9kYXRhKHN0cnVjdCByeHJwY19jYWxsICpjYWxsLCBzdHJ1Y3Qg
c2tfYnVmZiAqc2tiKQogCQkJICogcmluZy4KIAkJCSAqLwogCQkJc2tiID0gTlVMTDsKKwkJCXNw
ID0gTlVMTDsKIAkJfQogCiAJCWlmIChsYXN0KSB7Ci0tIAoyLjIxLjEKCg==

----Next_Part(Thu_Jan_30_11_12_27_2020_728)----
