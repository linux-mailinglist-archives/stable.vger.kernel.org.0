Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id ABE3D2503D9
	for <lists+stable@lfdr.de>; Mon, 24 Aug 2020 18:52:47 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728824AbgHXQwm (ORCPT <rfc822;lists+stable@lfdr.de>);
        Mon, 24 Aug 2020 12:52:42 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:56240 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728767AbgHXQwk (ORCPT
        <rfc822;stable@vger.kernel.org>); Mon, 24 Aug 2020 12:52:40 -0400
Received: from shards.monkeyblade.net (shards.monkeyblade.net [IPv6:2620:137:e000::1:9])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 9A180C061573
        for <stable@vger.kernel.org>; Mon, 24 Aug 2020 09:52:40 -0700 (PDT)
Received: from localhost (unknown [IPv6:2601:601:9f00:477::3d5])
        (using TLSv1 with cipher AES256-SHA (256/256 bits))
        (Client did not present a certificate)
        (Authenticated sender: davem-davemloft)
        by shards.monkeyblade.net (Postfix) with ESMTPSA id 5723312880DFF
        for <stable@vger.kernel.org>; Mon, 24 Aug 2020 09:35:49 -0700 (PDT)
Date:   Mon, 24 Aug 2020 09:52:29 -0700 (PDT)
Message-Id: <20200824.095229.708445861503653540.davem@davemloft.net>
To:     stable@vger.kernel.org
Subject: [PATCHES] Networking
From:   David Miller <davem@davemloft.net>
X-Mailer: Mew version 6.8 on Emacs 26.3
Mime-Version: 1.0
Content-Type: Multipart/Mixed;
 boundary="--Next_Part(Mon_Aug_24_09_52_29_2020_857)--"
Content-Transfer-Encoding: 7bit
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.5.12 (shards.monkeyblade.net [149.20.54.216]); Mon, 24 Aug 2020 09:35:50 -0700 (PDT)
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

----Next_Part(Mon_Aug_24_09_52_29_2020_857)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


Please queue up the following networking bug fixes for v5.7
and v5.8 -stable, respectively.

Thank you!

----Next_Part(Mon_Aug_24_09_52_29_2020_857)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_57.mbox"

RnJvbSA2N2ZmZGFlYjIyNTFjYWNhYmM4ZjM3NWNhY2IzMmI3ZmIwYjgwY2EzIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBKaXJpIFdpZXNuZXIgPGp3aWVzbmVyQHN1c2UuY29tPgpEYXRl
OiBTdW4sIDE2IEF1ZyAyMDIwIDIwOjUyOjQ0ICswMjAwClN1YmplY3Q6IFtQQVRDSCAwMS8yMl0g
Ym9uZGluZzogZml4IGFjdGl2ZS1iYWNrdXAgZmFpbG92ZXIgZm9yIGN1cnJlbnQgQVJQCiBzbGF2
ZQoKWyBVcHN0cmVhbSBjb21taXQgMDQxMGQwNzE5MDk2MWFjNTI2ZjA1MDg1NzY1YThkMDRkOTI2
NTQ1YiBdCgpXaGVuIHRoZSBBUlAgbW9uaXRvciBpcyB1c2VkIGZvciBsaW5rIGRldGVjdGlvbiwg
QVJQIHJlcGxpZXMgYXJlCnZhbGlkYXRlZCBmb3IgYWxsIHNsYXZlcyAoYXJwX3ZhbGlkYXRlPTMp
IGFuZCBmYWlsX292ZXJfbWFjIGlzIHNldCB0bwphY3RpdmUsIHR3byBzbGF2ZXMgb2YgYW4gYWN0
aXZlLWJhY2t1cCBib25kIG1heSBnZXQgc3R1Y2sgaW4gYSBzdGF0ZQp3aGVyZSBib3RoIG9mIHRo
ZW0gYXJlIGFjdGl2ZSBhbmQgcGFzcyBwYWNrZXRzIHRoYXQgdGhleSByZWNlaXZlIHRvCnRoZSBi
b25kLiBUaGlzIHN0YXRlIG1ha2VzIElQdjYgZHVwbGljYXRlIGFkZHJlc3MgZGV0ZWN0aW9uIGZh
aWwuIFRoZQpzdGF0ZSBpcyByZWFjaGVkIHRodXM6CjEuIFRoZSBjdXJyZW50IGFjdGl2ZSBzbGF2
ZSBnb2VzIGRvd24gYmVjYXVzZSB0aGUgQVJQIHRhcmdldAogICBpcyBub3QgcmVhY2hhYmxlLgoy
LiBUaGUgY3VycmVudCBBUlAgc2xhdmUgaXMgY2hvc2VuIGFuZCBtYWRlIGFjdGl2ZS4KMy4gQSBu
ZXcgc2xhdmUgaXMgZW5zbGF2ZWQuIFRoaXMgbmV3IHNsYXZlIGJlY29tZXMgdGhlIGN1cnJlbnQg
YWN0aXZlCiAgIHNsYXZlIGFuZCBjYW4gcmVhY2ggdGhlIEFSUCB0YXJnZXQuCkFzIGEgcmVzdWx0
LCB0aGUgY3VycmVudCBBUlAgc2xhdmUgc3RheXMgYWN0aXZlIGFmdGVyIHRoZSBlbnNsYXZlCmFj
dGlvbiBoYXMgZmluaXNoZWQgYW5kIHRoZSBsb2cgaXMgbGl0dGVyZWQgd2l0aCAiUFJPQkUgQkFE
IiBtZXNzYWdlczoKPiBib25kMDogUFJPQkU6IGNfYXJwIGVuczEwICYmIGNhcyBlbnMxMSBCQUQK
VGhlIHdvcmthcm91bmQgaXMgdG8gcmVtb3ZlIHRoZSBzbGF2ZSB3aXRoICJnb2luZyBiYWNrIiBz
dGF0dXMgZnJvbQp0aGUgYm9uZCBhbmQgcmUtZW5zbGF2ZSBpdC4gVGhpcyBpc3N1ZSB3YXMgZW5j
b3VudGVyZWQgd2hlbiBEUERLIFBNRAppbnRlcmZhY2VzIHdlcmUgYmVpbmcgZW5zbGF2ZWQgdG8g
YW4gYWN0aXZlLWJhY2t1cCBib25kLgoKSSB3b3VsZCBiZSBwb3NzaWJsZSB0byBmaXggdGhlIGlz
c3VlIGluIGJvbmRfZW5zbGF2ZSgpIG9yCmJvbmRfY2hhbmdlX2FjdGl2ZV9zbGF2ZSgpIGJ1dCB0
aGUgQVJQIG1vbml0b3Igd2FzIGZpeGVkIGluc3RlYWQgdG8Ka2VlcCBtb3N0IG9mIHRoZSBhY3Rp
b25zIGNoYW5naW5nIHRoZSBjdXJyZW50IEFSUCBzbGF2ZSBpbiB0aGUgQVJQCm1vbml0b3IgY29k
ZS4gVGhlIGN1cnJlbnQgQVJQIHNsYXZlIGlzIHNldCBhcyBpbmFjdGl2ZSBhbmQgYmFja3VwCmR1
cmluZyB0aGUgY29tbWl0IHBoYXNlLiBBIG5ldyBzdGF0ZSwgQk9ORF9MSU5LX0ZBSUwsIGhhcyBi
ZWVuCmludHJvZHVjZWQgZm9yIHNsYXZlcyBpbiB0aGUgY29udGV4dCBvZiB0aGUgQVJQIG1vbml0
b3IuIFRoaXMgYWxsb3dzCmFkbWluaXN0cmF0b3JzIHRvIHNlZSBob3cgc2xhdmVzIGFyZSByb3Rh
dGVkIGZvciBzZW5kaW5nIEFSUCByZXF1ZXN0cwphbmQgYXR0ZW1wdHMgYXJlIG1hZGUgdG8gZmlu
ZCBhIG5ldyBhY3RpdmUgc2xhdmUuCgpGaXhlczogYjIyMjBjYWQ1ODNjOSAoImJvbmRpbmc6IHJl
ZmFjdG9yIEFSUCBhY3RpdmUtYmFja3VwIG1vbml0b3IiKQpTaWduZWQtb2ZmLWJ5OiBKaXJpIFdp
ZXNuZXIgPGp3aWVzbmVyQHN1c2UuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIg
PGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4u
YyB8IDE4ICsrKysrKysrKysrKysrKystLQogMSBmaWxlIGNoYW5nZWQsIDE2IGluc2VydGlvbnMo
KyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvYm9uZGluZy9ib25k
X21haW4uYyBiL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMKaW5kZXggNmI0MGI1YWIx
NDNhLi5kYmEzZGZhMjY1OGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9t
YWluLmMKKysrIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYwpAQCAtMjgyNCw2ICsy
ODI0LDkgQEAgc3RhdGljIGludCBib25kX2FiX2FycF9pbnNwZWN0KHN0cnVjdCBib25kaW5nICpi
b25kKQogCQkJaWYgKGJvbmRfdGltZV9pbl9pbnRlcnZhbChib25kLCBsYXN0X3J4LCAxKSkgewog
CQkJCWJvbmRfcHJvcG9zZV9saW5rX3N0YXRlKHNsYXZlLCBCT05EX0xJTktfVVApOwogCQkJCWNv
bW1pdCsrOworCQkJfSBlbHNlIGlmIChzbGF2ZS0+bGluayA9PSBCT05EX0xJTktfQkFDSykgewor
CQkJCWJvbmRfcHJvcG9zZV9saW5rX3N0YXRlKHNsYXZlLCBCT05EX0xJTktfRkFJTCk7CisJCQkJ
Y29tbWl0Kys7CiAJCQl9CiAJCQljb250aW51ZTsKIAkJfQpAQCAtMjkzMiw2ICsyOTM1LDE5IEBA
IHN0YXRpYyB2b2lkIGJvbmRfYWJfYXJwX2NvbW1pdChzdHJ1Y3QgYm9uZGluZyAqYm9uZCkKIAog
CQkJY29udGludWU7CiAKKwkJY2FzZSBCT05EX0xJTktfRkFJTDoKKwkJCWJvbmRfc2V0X3NsYXZl
X2xpbmtfc3RhdGUoc2xhdmUsIEJPTkRfTElOS19GQUlMLAorCQkJCQkJICBCT05EX1NMQVZFX05P
VElGWV9OT1cpOworCQkJYm9uZF9zZXRfc2xhdmVfaW5hY3RpdmVfZmxhZ3Moc2xhdmUsCisJCQkJ
CQkgICAgICBCT05EX1NMQVZFX05PVElGWV9OT1cpOworCisJCQkvKiBBIHNsYXZlIGhhcyBqdXN0
IGJlZW4gZW5zbGF2ZWQgYW5kIGhhcyBiZWNvbWUKKwkJCSAqIHRoZSBjdXJyZW50IGFjdGl2ZSBz
bGF2ZS4KKwkJCSAqLworCQkJaWYgKHJ0bmxfZGVyZWZlcmVuY2UoYm9uZC0+Y3Vycl9hY3RpdmVf
c2xhdmUpKQorCQkJCVJDVV9JTklUX1BPSU5URVIoYm9uZC0+Y3VycmVudF9hcnBfc2xhdmUsIE5V
TEwpOworCQkJY29udGludWU7CisKIAkJZGVmYXVsdDoKIAkJCXNsYXZlX2Vycihib25kLT5kZXYs
IHNsYXZlLT5kZXYsCiAJCQkJICAiaW1wb3NzaWJsZTogbGlua19uZXdfc3RhdGUgJWQgb24gc2xh
dmVcbiIsCkBAIC0yOTgyLDggKzI5OTgsNiBAQCBzdGF0aWMgYm9vbCBib25kX2FiX2FycF9wcm9i
ZShzdHJ1Y3QgYm9uZGluZyAqYm9uZCkKIAkJCXJldHVybiBzaG91bGRfbm90aWZ5X3J0bmw7CiAJ
fQogCi0JYm9uZF9zZXRfc2xhdmVfaW5hY3RpdmVfZmxhZ3MoY3Vycl9hcnBfc2xhdmUsIEJPTkRf
U0xBVkVfTk9USUZZX0xBVEVSKTsKLQogCWJvbmRfZm9yX2VhY2hfc2xhdmVfcmN1KGJvbmQsIHNs
YXZlLCBpdGVyKSB7CiAJCWlmICghZm91bmQgJiYgIWJlZm9yZSAmJiBib25kX3NsYXZlX2lzX3Vw
KHNsYXZlKSkKIAkJCWJlZm9yZSA9IHNsYXZlOwotLSAKMi4yNi4yCgoKRnJvbSBjZjNiNGRmZThk
MmVkNTkyYmFlYTVkM2U3YmY0Mzc4OGM2NDMzODhmIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpG
cm9tOiBDb25nIFdhbmcgPHhpeW91Lndhbmdjb25nQGdtYWlsLmNvbT4KRGF0ZTogRnJpLCAxNCBB
dWcgMjAyMCAyMDowNTo1OCAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggMDIvMjJdIGJvbmRpbmc6IGZp
eCBhIHBvdGVudGlhbCBkb3VibGUtdW5yZWdpc3RlcgoKWyBVcHN0cmVhbSBjb21taXQgODMyNzA3
MDIxNjY2NDExZDA0Nzk1YzU2NGE0YWRlYTVkNmI5NGYxNyBdCgpXaGVuIHdlIHRlYXIgZG93biBh
IG5ldHdvcmsgbmFtZXNwYWNlLCB3ZSB1bnJlZ2lzdGVyIGFsbAp0aGUgbmV0ZGV2aWNlcyB3aXRo
aW4gaXQuIFNvIHdlIG1heSBxdWV1ZSBhIHNsYXZlIGRldmljZQphbmQgYSBib25kaW5nIGRldmlj
ZSB0b2dldGhlciBpbiB0aGUgc2FtZSB1bnJlZ2lzdGVyIHF1ZXVlLgoKSWYgdGhlIG9ubHkgc2xh
dmUgZGV2aWNlIGlzIG5vbi1ldGhlcm5ldCwgaXQgd291bGQKYXV0b21hdGljYWxseSB1bnJlZ2lz
dGVyIHRoZSBib25kaW5nIGRldmljZSBhcyB3ZWxsLiBUaHVzLAp3ZSBtYXkgZW5kIHVwIHVucmVn
aXN0ZXJpbmcgdGhlIGJvbmRpbmcgZGV2aWNlIHR3aWNlLgoKV29ya2Fyb3VuZCB0aGlzIHNwZWNp
YWwgY2FzZSBieSBjaGVja2luZyByZWdfc3RhdGUuCgpGaXhlczogOWI1ZTM4M2MxMWIwICgibmV0
OiBJbnRyb2R1Y2UgdW5yZWdpc3Rlcl9uZXRkZXZpY2VfbWFueSgpIikKUmVwb3J0ZWQtYnk6IHN5
emJvdCthZjIzZTdmM2UwYTdlMTBjOGI2N0BzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tCkNjOiBF
cmljIER1bWF6ZXQgPGVyaWMuZHVtYXpldEBnbWFpbC5jb20+CkNjOiBBbmR5IEdvc3BvZGFyZWsg
PGFuZHlAZ3JleWhvdXNlLm5ldD4KQ2M6IEpheSBWb3NidXJnaCA8ai52b3NidXJnaEBnbWFpbC5j
b20+ClNpZ25lZC1vZmYtYnk6IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpT
aWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQog
ZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYyB8IDMgKystCiAxIGZpbGUgY2hhbmdlZCwg
MiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQv
Ym9uZGluZy9ib25kX21haW4uYyBiL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMKaW5k
ZXggZGJhM2RmYTI2NThmLi43OTQ5YmJiMGVhYTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2Jv
bmRpbmcvYm9uZF9tYWluLmMKKysrIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYwpA
QCAtMjA4NCw3ICsyMDg0LDggQEAgc3RhdGljIGludCBib25kX3JlbGVhc2VfYW5kX2Rlc3Ryb3ko
c3RydWN0IG5ldF9kZXZpY2UgKmJvbmRfZGV2LAogCWludCByZXQ7CiAKIAlyZXQgPSBfX2JvbmRf
cmVsZWFzZV9vbmUoYm9uZF9kZXYsIHNsYXZlX2RldiwgZmFsc2UsIHRydWUpOwotCWlmIChyZXQg
PT0gMCAmJiAhYm9uZF9oYXNfc2xhdmVzKGJvbmQpKSB7CisJaWYgKHJldCA9PSAwICYmICFib25k
X2hhc19zbGF2ZXMoYm9uZCkgJiYKKwkgICAgYm9uZF9kZXYtPnJlZ19zdGF0ZSAhPSBORVRSRUdf
VU5SRUdJU1RFUklORykgewogCQlib25kX2Rldi0+cHJpdl9mbGFncyB8PSBJRkZfRElTQUJMRV9O
RVRQT0xMOwogCQluZXRkZXZfaW5mbyhib25kX2RldiwgIkRlc3Ryb3lpbmcgYm9uZFxuIik7CiAJ
CWJvbmRfcmVtb3ZlX3Byb2NfZW50cnkoYm9uZCk7Ci0tIAoyLjI2LjIKCgpGcm9tIDRkOTYwMDU3
ZWEyOTkyYTA0ODk0OWQzZTM3YTQ1NDlhNDVjYjUxNjAgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAx
CkZyb206IEphcm9kIFdpbHNvbiA8amFyb2RAcmVkaGF0LmNvbT4KRGF0ZTogVGh1LCAxMyBBdWcg
MjAyMCAxMDowOTowMCAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMDMvMjJdIGJvbmRpbmc6IHNob3cg
c2FuZXIgc3BlZWQgZm9yIGJyb2FkY2FzdCBtb2RlCgpbIFVwc3RyZWFtIGNvbW1pdCA0Y2EwZDlh
YzNmZDhmOWY5MGI3MmExNWQ4ZGEyYWNhM2ZmYjU4NDE4IF0KCkJyb2FkY2FzdCBtb2RlIGJvbmRz
IHRyYW5zbWl0IGEgY29weSBvZiBhbGwgdHJhZmZpYyBzaW11bHRhbmVvdXNseSBvdXQgb2YKYWxs
IGludGVyZmFjZXMsIHNvIHRoZSAic3BlZWQiIG9mIHRoZSBib25kIGlzbid0IHJlYWxseSB0aGUg
YWdncmVnYXRlIG9mCmFsbCBpbnRlcmZhY2VzLCBidXQgcmF0aGVyLCB0aGUgc3BlZWQgb2YgdGhl
IHNsb3dlc3QgYWN0aXZlIGludGVyZmFjZS4KCkFsc28sIHRoZSB0eXBlIG9mIHRoZSBzcGVlZCBm
aWVsZCBpcyB1MzIsIG5vdCB1bnNpZ25lZCBsb25nLCBzbyBhZGp1c3QKdGhhdCBhY2NvcmRpbmds
eSwgYXMgcmVxdWlyZWQgdG8gbWFrZSBtaW4oKSBmdW5jdGlvbiBoZXJlIHdpdGhvdXQKY29tcGxh
aW5pbmcgYWJvdXQgbWlzbWF0Y2hpbmcgdHlwZXMuCgpGaXhlczogYmI1YjA1MmY3NTFiICgiYm9u
ZDogYWRkIHN1cHBvcnQgdG8gcmVhZCBzcGVlZCBhbmQgZHVwbGV4IHZpYSBldGh0b29sIikKQ0M6
IEpheSBWb3NidXJnaCA8ai52b3NidXJnaEBnbWFpbC5jb20+CkNDOiBWZWFjZXNsYXYgRmFsaWNv
IDx2ZmFsaWNvQGdtYWlsLmNvbT4KQ0M6IEFuZHkgR29zcG9kYXJlayA8YW5keUBncmV5aG91c2Uu
bmV0PgpDQzogIkRhdmlkIFMuIE1pbGxlciIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+CkNDOiBuZXRk
ZXZAdmdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBKYXkgVm9zYnVyZ2ggPGpheS52b3NidXJnaEBj
YW5vbmljYWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYXJvZCBXaWxzb24gPGphcm9kQHJlZGhhdC5j
b20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4K
LS0tCiBkcml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIHwgMjEgKysrKysrKysrKysrKysr
KysrLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIGIvZHJpdmVycy9u
ZXQvYm9uZGluZy9ib25kX21haW4uYwppbmRleCA3OTQ5YmJiMGVhYTcuLjA3NjI0ZTg5Yjk2ZCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYworKysgYi9kcml2ZXJz
L25ldC9ib25kaW5nL2JvbmRfbWFpbi5jCkBAIC00MzUxLDEzICs0MzUxLDIzIEBAIHN0YXRpYyBu
ZXRkZXZfdHhfdCBib25kX3N0YXJ0X3htaXQoc3RydWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IG5l
dF9kZXZpY2UgKmRldikKIAlyZXR1cm4gcmV0OwogfQogCitzdGF0aWMgdTMyIGJvbmRfbW9kZV9i
Y2FzdF9zcGVlZChzdHJ1Y3Qgc2xhdmUgKnNsYXZlLCB1MzIgc3BlZWQpCit7CisJaWYgKHNwZWVk
ID09IDAgfHwgc3BlZWQgPT0gU1BFRURfVU5LTk9XTikKKwkJc3BlZWQgPSBzbGF2ZS0+c3BlZWQ7
CisJZWxzZQorCQlzcGVlZCA9IG1pbihzcGVlZCwgc2xhdmUtPnNwZWVkKTsKKworCXJldHVybiBz
cGVlZDsKK30KKwogc3RhdGljIGludCBib25kX2V0aHRvb2xfZ2V0X2xpbmtfa3NldHRpbmdzKHN0
cnVjdCBuZXRfZGV2aWNlICpib25kX2RldiwKIAkJCQkJICAgc3RydWN0IGV0aHRvb2xfbGlua19r
c2V0dGluZ3MgKmNtZCkKIHsKIAlzdHJ1Y3QgYm9uZGluZyAqYm9uZCA9IG5ldGRldl9wcml2KGJv
bmRfZGV2KTsKLQl1bnNpZ25lZCBsb25nIHNwZWVkID0gMDsKIAlzdHJ1Y3QgbGlzdF9oZWFkICpp
dGVyOwogCXN0cnVjdCBzbGF2ZSAqc2xhdmU7CisJdTMyIHNwZWVkID0gMDsKIAogCWNtZC0+YmFz
ZS5kdXBsZXggPSBEVVBMRVhfVU5LTk9XTjsKIAljbWQtPmJhc2UucG9ydCA9IFBPUlRfT1RIRVI7
CkBAIC00MzY5LDggKzQzNzksMTMgQEAgc3RhdGljIGludCBib25kX2V0aHRvb2xfZ2V0X2xpbmtf
a3NldHRpbmdzKHN0cnVjdCBuZXRfZGV2aWNlICpib25kX2RldiwKIAkgKi8KIAlib25kX2Zvcl9l
YWNoX3NsYXZlKGJvbmQsIHNsYXZlLCBpdGVyKSB7CiAJCWlmIChib25kX3NsYXZlX2Nhbl90eChz
bGF2ZSkpIHsKLQkJCWlmIChzbGF2ZS0+c3BlZWQgIT0gU1BFRURfVU5LTk9XTikKLQkJCQlzcGVl
ZCArPSBzbGF2ZS0+c3BlZWQ7CisJCQlpZiAoc2xhdmUtPnNwZWVkICE9IFNQRUVEX1VOS05PV04p
IHsKKwkJCQlpZiAoQk9ORF9NT0RFKGJvbmQpID09IEJPTkRfTU9ERV9CUk9BRENBU1QpCisJCQkJ
CXNwZWVkID0gYm9uZF9tb2RlX2JjYXN0X3NwZWVkKHNsYXZlLAorCQkJCQkJCQkgICAgICBzcGVl
ZCk7CisJCQkJZWxzZQorCQkJCQlzcGVlZCArPSBzbGF2ZS0+c3BlZWQ7CisJCQl9CiAJCQlpZiAo
Y21kLT5iYXNlLmR1cGxleCA9PSBEVVBMRVhfVU5LTk9XTiAmJgogCQkJICAgIHNsYXZlLT5kdXBs
ZXggIT0gRFVQTEVYX1VOS05PV04pCiAJCQkJY21kLT5iYXNlLmR1cGxleCA9IHNsYXZlLT5kdXBs
ZXg7Ci0tIAoyLjI2LjIKCgpGcm9tIDRmZGIyZjIxY2E4NzllYTYzNjM5ZWUxYzBhYTc2NTE5MTQ0
MGEzZTcgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1hcmsgVG9tbGluc29uIDxtYXJr
LnRvbWxpbnNvbkBhbGxpZWR0ZWxlc2lzLmNvLm56PgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDEz
OjUzOjU4ICsxMjAwClN1YmplY3Q6IFtQQVRDSCAwNC8yMl0gZ3JlNjogRml4IHJlY2VwdGlvbiB3
aXRoIElQNl9UTkxfRl9SQ1ZfRFNDUF9DT1BZCgpbIFVwc3RyZWFtIGNvbW1pdCAyNzI1MDJmY2I3
Y2RhMDFhYjA3ZmMyZmNmZjgyZDFkMmY3M2Q0M2NjIF0KCldoZW4gcmVjZWl2aW5nIGFuIElQdjQg
cGFja2V0IGluc2lkZSBhbiBJUHY2IEdSRSBwYWNrZXQsIGFuZCB0aGUKSVA2X1ROTF9GX1JDVl9E
U0NQX0NPUFkgZmxhZyBpcyBzZXQgb24gdGhlIHR1bm5lbCwgdGhlIElQdjQgaGVhZGVyIHdvdWxk
CmdldCBjb3JydXB0ZWQuIFRoaXMgaXMgZHVlIHRvIHRoZSBjb21tb24gaXA2X3RubF9yY3YoKSBm
dW5jdGlvbiBhc3N1bWluZwp0aGF0IHRoZSBpbm5lciBoZWFkZXIgaXMgYWx3YXlzIElQdjYuIFRo
aXMgcGF0Y2ggY2hlY2tzIHRoZSB0dW5uZWwKcHJvdG9jb2wgZm9yIElQdjQgaW5uZXIgcGFja2V0
cywgYnV0IHN0aWxsIGRlZmF1bHRzIHRvIElQdjYuCgpGaXhlczogMzA4ZWRmZGYxNTYzICgiZ3Jl
NjogQ2xlYW51cCBHUkV2NiByZWNlaXZlIHBhdGgsIGNhbGwgY29tbW9uIEdSRSBmdW5jdGlvbnMi
KQpTaWduZWQtb2ZmLWJ5OiBNYXJrIFRvbWxpbnNvbiA8bWFyay50b21saW5zb25AYWxsaWVkdGVs
ZXNpcy5jby5uej4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxv
ZnQubmV0PgotLS0KIG5ldC9pcHY2L2lwNl90dW5uZWwuYyB8IDEwICsrKysrKysrKy0KIDEgZmls
ZSBjaGFuZ2VkLCA5IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9u
ZXQvaXB2Ni9pcDZfdHVubmVsLmMgYi9uZXQvaXB2Ni9pcDZfdHVubmVsLmMKaW5kZXggNDcwM2Iw
OTgwOGQwLi44NGY5MGI4Yjg4OTAgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2lwNl90dW5uZWwuYwor
KysgYi9uZXQvaXB2Ni9pcDZfdHVubmVsLmMKQEAgLTg4Niw3ICs4ODYsMTUgQEAgaW50IGlwNl90
bmxfcmN2KHN0cnVjdCBpcDZfdG5sICp0LCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiLAogCQlzdHJ1Y3Qg
bWV0YWRhdGFfZHN0ICp0dW5fZHN0LAogCQlib29sIGxvZ19lY25fZXJyKQogewotCXJldHVybiBf
X2lwNl90bmxfcmN2KHQsIHNrYiwgdHBpLCB0dW5fZHN0LCBpcDZpcDZfZHNjcF9lY25fZGVjYXBz
dWxhdGUsCisJaW50ICgqZHNjcF9lY25fZGVjYXBzdWxhdGUpKGNvbnN0IHN0cnVjdCBpcDZfdG5s
ICp0LAorCQkJCSAgICBjb25zdCBzdHJ1Y3QgaXB2NmhkciAqaXB2NmgsCisJCQkJICAgIHN0cnVj
dCBza19idWZmICpza2IpOworCisJZHNjcF9lY25fZGVjYXBzdWxhdGUgPSBpcDZpcDZfZHNjcF9l
Y25fZGVjYXBzdWxhdGU7CisJaWYgKHRwaS0+cHJvdG8gPT0gaHRvbnMoRVRIX1BfSVApKQorCQlk
c2NwX2Vjbl9kZWNhcHN1bGF0ZSA9IGlwNGlwNl9kc2NwX2Vjbl9kZWNhcHN1bGF0ZTsKKworCXJl
dHVybiBfX2lwNl90bmxfcmN2KHQsIHNrYiwgdHBpLCB0dW5fZHN0LCBkc2NwX2Vjbl9kZWNhcHN1
bGF0ZSwKIAkJCSAgICAgbG9nX2Vjbl9lcnIpOwogfQogRVhQT1JUX1NZTUJPTChpcDZfdG5sX3Jj
dik7Ci0tIAoyLjI2LjIKCgpGcm9tIGYyNDNhNTY2NjFkODE0OTVkMzFlYTc1NDVlMzQ1MmVlYTM4
OTBhYzEgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1haGVzaCBCYW5kZXdhciA8bWFo
ZXNoYkBnb29nbGUuY29tPgpEYXRlOiBGcmksIDE0IEF1ZyAyMDIwIDIyOjUzOjI0IC0wNzAwClN1
YmplY3Q6IFtQQVRDSCAwNS8yMl0gaXB2bGFuOiBmaXggZGV2aWNlIGZlYXR1cmVzCgpbIFVwc3Ry
ZWFtIGNvbW1pdCBkMGY1YzcwNzZlMDFmZWY2ZmNiODY5ODhkOTUwOGJmM2NlMjU4YmQ0IF0KClBy
b2Nlc3NpbmcgTkVUREVWX0ZFQVRfQ0hBTkdFIGNhdXNlcyBJUHZsYW4gbGlua3MgdG8gbG9zZQpO
RVRJRl9GX0xMVFggZmVhdHVyZSBiZWNhdXNlIG9mIHRoZSBpbmNvcnJlY3QgaGFuZGxpbmcgb2YK
ZmVhdHVyZXMgaW4gaXB2bGFuX2ZpeF9mZWF0dXJlcygpLgoKLS1iZWZvcmUtLQpscGFhMTA6fiMg
ZXRodG9vbCAtayBpcHZsMCB8IGdyZXAgdHgtbG9ja2xlc3MKdHgtbG9ja2xlc3M6IG9uIFtmaXhl
ZF0KbHBhYTEwOn4jIGV0aHRvb2wgLUsgaXB2bDAgdHNvIG9mZgpDYW5ub3QgY2hhbmdlIHRjcC1z
ZWdtZW50YXRpb24tb2ZmbG9hZApBY3R1YWwgY2hhbmdlczoKdmxhbi1jaGFsbGVuZ2VkOiBvZmYg
W2ZpeGVkXQp0eC1sb2NrbGVzczogb2ZmIFtmaXhlZF0KbHBhYTEwOn4jIGV0aHRvb2wgLWsgaXB2
bDAgfCBncmVwIHR4LWxvY2tsZXNzCnR4LWxvY2tsZXNzOiBvZmYgW2ZpeGVkXQpscGFhMTA6fiMK
Ci0tYWZ0ZXItLQpscGFhMTA6fiMgZXRodG9vbCAtayBpcHZsMCB8IGdyZXAgdHgtbG9ja2xlc3MK
dHgtbG9ja2xlc3M6IG9uIFtmaXhlZF0KbHBhYTEwOn4jIGV0aHRvb2wgLUsgaXB2bDAgdHNvIG9m
ZgpDYW5ub3QgY2hhbmdlIHRjcC1zZWdtZW50YXRpb24tb2ZmbG9hZApDb3VsZCBub3QgY2hhbmdl
IGFueSBkZXZpY2UgZmVhdHVyZXMKbHBhYTEwOn4jIGV0aHRvb2wgLWsgaXB2bDAgfCBncmVwIHR4
LWxvY2tsZXNzCnR4LWxvY2tsZXNzOiBvbiBbZml4ZWRdCmxwYWExMDp+IwoKRml4ZXM6IDJhZDdi
ZjM2Mzg0MSAoImlwdmxhbjogSW5pdGlhbCBjaGVjay1pbiBvZiB0aGUgSVBWTEFOIGRyaXZlci4i
KQpTaWduZWQtb2ZmLWJ5OiBNYWhlc2ggQmFuZGV3YXIgPG1haGVzaGJAZ29vZ2xlLmNvbT4KQ2M6
IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQg
Uy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2lwdmxhbi9p
cHZsYW5fbWFpbi5jIHwgMjcgKysrKysrKysrKysrKysrKysrKysrKy0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgMjIgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL25ldC9pcHZsYW4vaXB2bGFuX21haW4uYyBiL2RyaXZlcnMvbmV0L2lwdmxhbi9pcHZsYW5f
bWFpbi5jCmluZGV4IGYxOTVmMjc4YTgzYS4uNzc2OGYxMTIwYzFmIDEwMDY0NAotLS0gYS9kcml2
ZXJzL25ldC9pcHZsYW4vaXB2bGFuX21haW4uYworKysgYi9kcml2ZXJzL25ldC9pcHZsYW4vaXB2
bGFuX21haW4uYwpAQCAtMTA2LDEyICsxMDYsMjEgQEAgc3RhdGljIHZvaWQgaXB2bGFuX3BvcnRf
ZGVzdHJveShzdHJ1Y3QgbmV0X2RldmljZSAqZGV2KQogCWtmcmVlKHBvcnQpOwogfQogCisjZGVm
aW5lIElQVkxBTl9BTFdBWVNfT05fT0ZMT0FEUyBcCisJKE5FVElGX0ZfU0cgfCBORVRJRl9GX0hX
X0NTVU0gfCBcCisJIE5FVElGX0ZfR1NPX1JPQlVTVCB8IE5FVElGX0ZfR1NPX1NPRlRXQVJFIHwg
TkVUSUZfRl9HU09fRU5DQVBfQUxMKQorCisjZGVmaW5lIElQVkxBTl9BTFdBWVNfT04gXAorCShJ
UFZMQU5fQUxXQVlTX09OX09GTE9BRFMgfCBORVRJRl9GX0xMVFggfCBORVRJRl9GX1ZMQU5fQ0hB
TExFTkdFRCkKKwogI2RlZmluZSBJUFZMQU5fRkVBVFVSRVMgXAotCShORVRJRl9GX1NHIHwgTkVU
SUZfRl9DU1VNX01BU0sgfCBORVRJRl9GX0hJR0hETUEgfCBORVRJRl9GX0ZSQUdMSVNUIHwgXAor
CShORVRJRl9GX1NHIHwgTkVUSUZfRl9IV19DU1VNIHwgTkVUSUZfRl9ISUdIRE1BIHwgTkVUSUZf
Rl9GUkFHTElTVCB8IFwKIAkgTkVUSUZfRl9HU08gfCBORVRJRl9GX0FMTF9UU08gfCBORVRJRl9G
X0dTT19ST0JVU1QgfCBcCiAJIE5FVElGX0ZfR1JPIHwgTkVUSUZfRl9SWENTVU0gfCBcCiAJIE5F
VElGX0ZfSFdfVkxBTl9DVEFHX0ZJTFRFUiB8IE5FVElGX0ZfSFdfVkxBTl9TVEFHX0ZJTFRFUikK
IAorCS8qIE5FVElGX0ZfR1NPX0VOQ0FQX0FMTCBORVRJRl9GX0dTT19TT0ZUV0FSRSBOZXdseSBh
ZGRlZCAqLworCiAjZGVmaW5lIElQVkxBTl9TVEFURV9NQVNLIFwKIAkoKDE8PF9fTElOS19TVEFU
RV9OT0NBUlJJRVIpIHwgKDE8PF9fTElOS19TVEFURV9ET1JNQU5UKSkKIApAQCAtMTI1LDcgKzEz
NCw5IEBAIHN0YXRpYyBpbnQgaXB2bGFuX2luaXQoc3RydWN0IG5ldF9kZXZpY2UgKmRldikKIAlk
ZXYtPnN0YXRlID0gKGRldi0+c3RhdGUgJiB+SVBWTEFOX1NUQVRFX01BU0spIHwKIAkJICAgICAo
cGh5X2Rldi0+c3RhdGUgJiBJUFZMQU5fU1RBVEVfTUFTSyk7CiAJZGV2LT5mZWF0dXJlcyA9IHBo
eV9kZXYtPmZlYXR1cmVzICYgSVBWTEFOX0ZFQVRVUkVTOwotCWRldi0+ZmVhdHVyZXMgfD0gTkVU
SUZfRl9MTFRYIHwgTkVUSUZfRl9WTEFOX0NIQUxMRU5HRUQ7CisJZGV2LT5mZWF0dXJlcyB8PSBJ
UFZMQU5fQUxXQVlTX09OOworCWRldi0+dmxhbl9mZWF0dXJlcyA9IHBoeV9kZXYtPnZsYW5fZmVh
dHVyZXMgJiBJUFZMQU5fRkVBVFVSRVM7CisJZGV2LT52bGFuX2ZlYXR1cmVzIHw9IElQVkxBTl9B
TFdBWVNfT05fT0ZMT0FEUzsKIAlkZXYtPmh3X2VuY19mZWF0dXJlcyB8PSBkZXYtPmZlYXR1cmVz
OwogCWRldi0+Z3NvX21heF9zaXplID0gcGh5X2Rldi0+Z3NvX21heF9zaXplOwogCWRldi0+Z3Nv
X21heF9zZWdzID0gcGh5X2Rldi0+Z3NvX21heF9zZWdzOwpAQCAtMjI1LDcgKzIzNiwxNCBAQCBz
dGF0aWMgbmV0ZGV2X2ZlYXR1cmVzX3QgaXB2bGFuX2ZpeF9mZWF0dXJlcyhzdHJ1Y3QgbmV0X2Rl
dmljZSAqZGV2LAogewogCXN0cnVjdCBpcHZsX2RldiAqaXB2bGFuID0gbmV0ZGV2X3ByaXYoZGV2
KTsKIAotCXJldHVybiBmZWF0dXJlcyAmIChpcHZsYW4tPnNmZWF0dXJlcyB8IH5JUFZMQU5fRkVB
VFVSRVMpOworCWZlYXR1cmVzIHw9IE5FVElGX0ZfQUxMX0ZPUl9BTEw7CisJZmVhdHVyZXMgJj0g
KGlwdmxhbi0+c2ZlYXR1cmVzIHwgfklQVkxBTl9GRUFUVVJFUyk7CisJZmVhdHVyZXMgPSBuZXRk
ZXZfaW5jcmVtZW50X2ZlYXR1cmVzKGlwdmxhbi0+cGh5X2Rldi0+ZmVhdHVyZXMsCisJCQkJCSAg
ICAgZmVhdHVyZXMsIGZlYXR1cmVzKTsKKwlmZWF0dXJlcyB8PSBJUFZMQU5fQUxXQVlTX09OOwor
CWZlYXR1cmVzICY9IChJUFZMQU5fRkVBVFVSRVMgfCBJUFZMQU5fQUxXQVlTX09OKTsKKworCXJl
dHVybiBmZWF0dXJlczsKIH0KIAogc3RhdGljIHZvaWQgaXB2bGFuX2NoYW5nZV9yeF9mbGFncyhz
dHJ1Y3QgbmV0X2RldmljZSAqZGV2LCBpbnQgY2hhbmdlKQpAQCAtNzMyLDEwICs3NTAsOSBAQCBz
dGF0aWMgaW50IGlwdmxhbl9kZXZpY2VfZXZlbnQoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICp1bnVz
ZWQsCiAKIAljYXNlIE5FVERFVl9GRUFUX0NIQU5HRToKIAkJbGlzdF9mb3JfZWFjaF9lbnRyeShp
cHZsYW4sICZwb3J0LT5pcHZsYW5zLCBwbm9kZSkgewotCQkJaXB2bGFuLT5kZXYtPmZlYXR1cmVz
ID0gZGV2LT5mZWF0dXJlcyAmIElQVkxBTl9GRUFUVVJFUzsKIAkJCWlwdmxhbi0+ZGV2LT5nc29f
bWF4X3NpemUgPSBkZXYtPmdzb19tYXhfc2l6ZTsKIAkJCWlwdmxhbi0+ZGV2LT5nc29fbWF4X3Nl
Z3MgPSBkZXYtPmdzb19tYXhfc2VnczsKLQkJCW5ldGRldl9mZWF0dXJlc19jaGFuZ2UoaXB2bGFu
LT5kZXYpOworCQkJbmV0ZGV2X3VwZGF0ZV9mZWF0dXJlcyhpcHZsYW4tPmRldik7CiAJCX0KIAkJ
YnJlYWs7CiAKLS0gCjIuMjYuMgoKCkZyb20gYWZhMTIwMGZhNWU0M2ZmY2VhMTk3MTYyN2M2NWNl
MWRkNDUwYjA0YSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogVG9tIFJpeCA8dHJpeEBy
ZWRoYXQuY29tPgpEYXRlOiBGcmksIDIxIEF1ZyAyMDIwIDA2OjU2OjAwIC0wNzAwClN1YmplY3Q6
IFtQQVRDSCAwNi8yMl0gbmV0OiBkc2E6IGI1MzogY2hlY2sgZm9yIHRpbWVvdXQKClsgVXBzdHJl
YW0gY29tbWl0IDc3NGQ5NzdhYmZkMDI0ZTZmNzM0ODQ1NDRiOWFiZTVhNWNkNjJkZTcgXQoKY2xh
bmcgc3RhdGljIGFuYWx5c2lzIHJlcG9ydHMgdGhpcyBwcm9ibGVtCgpiNTNfY29tbW9uLmM6MTU4
MzoxMzogd2FybmluZzogVGhlIGxlZnQgZXhwcmVzc2lvbiBvZiB0aGUgY29tcG91bmQKICBhc3Np
Z25tZW50IGlzIGFuIHVuaW5pdGlhbGl6ZWQgdmFsdWUuIFRoZSBjb21wdXRlZCB2YWx1ZSB3aWxs
CiAgYWxzbyBiZSBnYXJiYWdlCiAgICAgICAgZW50LnBvcnQgJj0gfkJJVChwb3J0KTsKICAgICAg
ICB+fn5+fn5+fiBeCgplbnQgaXMgc2V0IGJ5IGEgc3VjY2Vzc2Z1bCBjYWxsIHRvIGI1M19hcmxf
cmVhZCgpLiAgVW5zdWNjZXNzZnVsCmNhbGxzIGFyZSBjYXVnaHQgYnkgYW4gc3dpdGNoIHN0YXRl
bWVudCBoYW5kbGluZyBzcGVjaWZpYyByZXR1cm5zLgpiMzJfYXJsX3JlYWQoKSBjYWxscyBiNTNf
YXJsX29wX3dhaXQoKSB3aGljaCBmYWlscyB3aXRoIHRoZQp1bmhhbmRsZWQgLUVUSU1FRE9VVC4K
ClNvIGFkZCAtRVRJTUVET1VUIHRvIHRoZSBzd2l0Y2ggc3RhdGVtZW50LiAgQmVjYXVzZQpiNTNf
YXJsX29wX3dhaXQoKSBhbHJlYWR5IHByaW50cyBvdXQgYSBtZXNzYWdlLCBkbyBub3QgYWRkIGFu
b3RoZXIKb25lLgoKRml4ZXM6IDFkYTZkZjg1YzZmYiAoIm5ldDogZHNhOiBiNTM6IEltcGxlbWVu
dCBBUkwgYWRkL2RlbC9kdW1wIG9wZXJhdGlvbnMiKQpTaWduZWQtb2ZmLWJ5OiBUb20gUml4IDx0
cml4QHJlZGhhdC5jb20+CkFja2VkLWJ5OiBGbG9yaWFuIEZhaW5lbGxpIDxmLmZhaW5lbGxpQGdt
YWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQu
bmV0PgotLS0KIGRyaXZlcnMvbmV0L2RzYS9iNTMvYjUzX2NvbW1vbi5jIHwgMiArKwogMSBmaWxl
IGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2RzYS9i
NTMvYjUzX2NvbW1vbi5jIGIvZHJpdmVycy9uZXQvZHNhL2I1My9iNTNfY29tbW9uLmMKaW5kZXgg
YzI4MzU5M2JlZjE3Li5kYzE5NzkwOTYzMDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2RzYS9i
NTMvYjUzX2NvbW1vbi5jCisrKyBiL2RyaXZlcnMvbmV0L2RzYS9iNTMvYjUzX2NvbW1vbi5jCkBA
IC0xNTU2LDYgKzE1NTYsOCBAQCBzdGF0aWMgaW50IGI1M19hcmxfb3Aoc3RydWN0IGI1M19kZXZp
Y2UgKmRldiwgaW50IG9wLCBpbnQgcG9ydCwKIAkJcmV0dXJuIHJldDsKIAogCXN3aXRjaCAocmV0
KSB7CisJY2FzZSAtRVRJTUVET1VUOgorCQlyZXR1cm4gcmV0OwogCWNhc2UgLUVOT1NQQzoKIAkJ
ZGV2X2RiZyhkZXYtPmRldiwgInslcE0sJS40ZH0gbm8gc3BhY2UgbGVmdCBpbiBBUkxcbiIsCiAJ
CQlhZGRyLCB2aWQpOwotLSAKMi4yNi4yCgoKRnJvbSBhZmQ0YWNlMGFkMzJhOWQ4ZmY4NmJiNWZj
MjBkYjMzYTVkNjVhMTVjIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBGdWdhbmcgRHVh
biA8ZnVnYW5nLmR1YW5AbnhwLmNvbT4KRGF0ZTogVGh1LCAxMyBBdWcgMjAyMCAxNToxMzoxNCAr
MDgwMApTdWJqZWN0OiBbUEFUQ0ggMDcvMjJdIG5ldDogZmVjOiBjb3JyZWN0IHRoZSBlcnJvciBw
YXRoIGZvciByZWd1bGF0b3IgZGlzYWJsZQogaW4gcHJvYmUKClsgVXBzdHJlYW0gY29tbWl0IGM2
MTY1Y2YwZGJiODJkZWQ5MDE2M2RjZTNhYzE4M2ZjN2E5MTNkYzQgXQoKQ29ycmVjdCB0aGUgZXJy
b3IgcGF0aCBmb3IgcmVndWxhdG9yIGRpc2FibGUuCgpGaXhlczogOTI2OWU1NTYwYjI2ICgibmV0
OiBmZWM6IGFkZCBwaHktcmVzZXQtZ3Bpb3MgUFJPQkVfREVGRVIgY2hlY2siKQpTaWduZWQtb2Zm
LWJ5OiBGdWdhbmcgRHVhbiA8ZnVnYW5nLmR1YW5AbnhwLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2
aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2V0aGVy
bmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNl
cnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvZnJlZXNjYWxl
L2ZlY19tYWluLmMKaW5kZXggYmY3M2JjOWJmMzViLi43NmFiYWZkMDk5ZTIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L2V0aGVybmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jCisrKyBiL2RyaXZlcnMv
bmV0L2V0aGVybmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jCkBAIC0zNzE5LDExICszNzE5LDExIEBA
IGZlY19wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogZmFpbGVkX2lycToKIGZh
aWxlZF9pbml0OgogCWZlY19wdHBfc3RvcChwZGV2KTsKLQlpZiAoZmVwLT5yZWdfcGh5KQotCQly
ZWd1bGF0b3JfZGlzYWJsZShmZXAtPnJlZ19waHkpOwogZmFpbGVkX3Jlc2V0OgogCXBtX3J1bnRp
bWVfcHV0X25vaWRsZSgmcGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX2Rpc2FibGUoJnBkZXYtPmRl
dik7CisJaWYgKGZlcC0+cmVnX3BoeSkKKwkJcmVndWxhdG9yX2Rpc2FibGUoZmVwLT5yZWdfcGh5
KTsKIGZhaWxlZF9yZWd1bGF0b3I6CiAJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGZlcC0+Y2xrX2Fo
Yik7CiBmYWlsZWRfY2xrX2FoYjoKLS0gCjIuMjYuMgoKCkZyb20gY2JlODRmZjljZGQ2MTVkOTdl
OWNhOTc3YjdkZDdlNjFmNjViMDk5MiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWlh
b2hlIExpbiA8bGlubWlhb2hlQGh1YXdlaS5jb20+CkRhdGU6IFNhdCwgMTUgQXVnIDIwMjAgMDQ6
NDQ6MzEgLTA0MDAKU3ViamVjdDogW1BBVENIIDA4LzIyXSBuZXQ6IEZpeCBwb3RlbnRpYWwgd3Jv
bmcgc2tiLT5wcm90b2NvbCBpbgogc2tiX3ZsYW5fdW50YWcoKQoKWyBVcHN0cmVhbSBjb21taXQg
NTVlZmYwZWI3NDYwYzNkNTA3MTZlZDllY2NmMjIyNTdiMDQ2Y2E5MiBdCgpXZSBtYXkgYWNjZXNz
IHRoZSB0d28gYnl0ZXMgYWZ0ZXIgdmxhbl9oZHIgaW4gdmxhbl9zZXRfZW5jYXBfcHJvdG8oKS4g
U28Kd2Ugc2hvdWxkIHB1bGwgVkxBTl9ITEVOICsgc2l6ZW9mKHVuc2lnbmVkIHNob3J0KSBpbiBz
a2Jfdmxhbl91bnRhZygpIG9yCndlIG1heSBhY2Nlc3MgdGhlIHdyb25nIGRhdGEuCgpGaXhlczog
MGQ1NTAxYzFjODI4ICgibmV0OiBBbHdheXMgdW50YWcgdmxhbi10YWdnZWQgdHJhZmZpYyBvbiBp
bnB1dC4iKQpTaWduZWQtb2ZmLWJ5OiBNaWFvaGUgTGluIDxsaW5taWFvaGVAaHVhd2VpLmNvbT4K
U2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0K
IG5ldC9jb3JlL3NrYnVmZi5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNlcnRpb25z
KCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NrYnVmZi5jIGIvbmV0
L2NvcmUvc2tidWZmLmMKaW5kZXggN2UyOTU5MDQ4MmNlLi4xMTVmM2ZkZTMxNGYgMTAwNjQ0Ci0t
LSBhL25ldC9jb3JlL3NrYnVmZi5jCisrKyBiL25ldC9jb3JlL3NrYnVmZi5jCkBAIC01NDIxLDgg
KzU0MjEsOCBAQCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiX3ZsYW5fdW50YWcoc3RydWN0IHNrX2J1ZmYg
KnNrYikKIAlza2IgPSBza2Jfc2hhcmVfY2hlY2soc2tiLCBHRlBfQVRPTUlDKTsKIAlpZiAodW5s
aWtlbHkoIXNrYikpCiAJCWdvdG8gZXJyX2ZyZWU7Ci0KLQlpZiAodW5saWtlbHkoIXBza2JfbWF5
X3B1bGwoc2tiLCBWTEFOX0hMRU4pKSkKKwkvKiBXZSBtYXkgYWNjZXNzIHRoZSB0d28gYnl0ZXMg
YWZ0ZXIgdmxhbl9oZHIgaW4gdmxhbl9zZXRfZW5jYXBfcHJvdG8oKS4gKi8KKwlpZiAodW5saWtl
bHkoIXBza2JfbWF5X3B1bGwoc2tiLCBWTEFOX0hMRU4gKyBzaXplb2YodW5zaWduZWQgc2hvcnQp
KSkpCiAJCWdvdG8gZXJyX2ZyZWU7CiAKIAl2aGRyID0gKHN0cnVjdCB2bGFuX2hkciAqKXNrYi0+
ZGF0YTsKLS0gCjIuMjYuMgoKCkZyb20gY2NhNTkyY2ZhZTdmODIyNDI1NDlkNmNmOWRiNGVjZDZl
ZDcwNWRjYyBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTmlrb2xheSBBbGVrc2FuZHJv
diA8bmlrb2xheUBjdW11bHVzbmV0d29ya3MuY29tPgpEYXRlOiBTYXQsIDIyIEF1ZyAyMDIwIDE1
OjA2OjM2ICswMzAwClN1YmplY3Q6IFtQQVRDSCAwOS8yMl0gbmV0OiBuZXh0aG9wOiBkb24ndCBh
bGxvdyBlbXB0eSBOSEFfR1JPVVAKClsgVXBzdHJlYW0gY29tbWl0IGVlYWFjMzYzNGVlMGUzZjM1
NTQ4YmUzNTI3NWVmZWNhODg4ZTliMjMgXQoKQ3VycmVudGx5IHRoZSBuZXh0aG9wIGNvZGUgd2ls
bCB1c2UgYW4gZW1wdHkgTkhBX0dST1VQIGF0dHJpYnV0ZSwgYnV0IGl0CnJlcXVpcmVzIGF0IGxl
YXN0IDEgZW50cnkgaW4gb3JkZXIgdG8gZnVuY3Rpb24gcHJvcGVybHkuIE90aGVyd2lzZSB3ZQpl
bmQgdXAgZGVyZWZlbmNpbmcgbnVsbCBvciByYW5kb20gcG9pbnRlcnMgYWxsIG92ZXIgdGhlIHBs
YWNlIGR1ZSB0byBub3QKaGF2aW5nIGFueSBuaF9ncnBfZW50cnkgbWVtYmVycyBhbGxvY2F0ZWQs
IG5leHRob3AgY29kZSByZWxpZXMgb24gaGF2aW5nIGF0CmxlYXN0IHRoZSBmaXJzdCBtZW1iZXIg
cHJlc2VudC4gRW1wdHkgTkhBX0dST1VQIGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2Ugc28KanVzdCBk
aXNhbGxvdyBpdC4KQWxzbyBhZGQgYSBXQVJOX09OIGZvciBhbnkgZnV0dXJlIHVzZXJzIG9mIG5l
eHRob3BfY3JlYXRlX2dyb3VwKCkuCgogQlVHOiBrZXJuZWwgTlVMTCBwb2ludGVyIGRlcmVmZXJl
bmNlLCBhZGRyZXNzOiAwMDAwMDAwMDAwMDAwMDgwCiAjUEY6IHN1cGVydmlzb3IgcmVhZCBhY2Nl
c3MgaW4ga2VybmVsIG1vZGUKICNQRjogZXJyb3JfY29kZSgweDAwMDApIC0gbm90LXByZXNlbnQg
cGFnZQogUEdEIDAgUDREIDAKIE9vcHM6IDAwMDAgWyMxXSBTTVAKIENQVTogMCBQSUQ6IDU1OCBD
b21tOiBpcCBOb3QgdGFpbnRlZCA1LjkuMC1yYzErICM5MwogSGFyZHdhcmUgbmFtZTogUUVNVSBT
dGFuZGFyZCBQQyAoaTQ0MEZYICsgUElJWCwgMTk5NiksIEJJT1MgMS4xMy4wLTIuZmMzMiAwNC8w
MS8yMDE0CiBSSVA6IDAwMTA6ZmliX2NoZWNrX25leHRob3ArMHg0YS8weGFhCiBDb2RlOiAwZiA4
NCA4MyAwMCAwMCAwMCA0OCBjNyAwMiA4MCAwMyBmNyA4MSBjMyA0MCA4MCBmZSBmZSA3NSAxMiBi
OCBlYSBmZiBmZiBmZiA0OCA4NSBkMiA3NCA2YiA0OCBjNyAwMiA0MCAwMyBmNyA4MSBjMyA0OCA4
YiA0MCAxMCA8NDg+IDhiIDgwIDgwIDAwIDAwIDAwIGViIDM2IDgwIDc4IDFhIDAwIDc0IDEyIGI4
IGVhIGZmIGZmIGZmIDQ4IDg1CiBSU1A6IDAwMTg6ZmZmZjg4ODA3OTgzYmEwMCBFRkxBR1M6IDAw
MDEwMjEzCiBSQVg6IDAwMDAwMDAwMDAwMDAwMDAgUkJYOiBmZmZmODg4MDc5ODNiYzAwIFJDWDog
MDAwMDAwMDAwMDAwMDAwMAogUkRYOiBmZmZmODg4MDc5ODNiYzAwIFJTSTogMDAwMDAwMDAwMDAw
MDAwMCBSREk6IGZmZmY4ODgwN2JkZDBhODAKIFJCUDogZmZmZjg4ODA3OTgzYmFmOCBSMDg6IDAw
MDAwMDAwMDAwMDBkYzAgUjA5OiAwMDAwMDAwMDAwMDAwNDBhCiBSMTA6IDAwMDAwMDAwMDAwMDAw
MDAgUjExOiBmZmZmODg4MDdiZGQwYWU4IFIxMjogMDAwMDAwMDAwMDAwMDAwMAogUjEzOiAwMDAw
MDAwMDAwMDAwMDAwIFIxNDogZmZmZjg4ODA3YmVhMzEwMCBSMTU6IDAwMDAwMDAwMDAwMDAwMDEK
IEZTOiAgMDAwMDdmMTBkYjM5MzcwMCgwMDAwKSBHUzpmZmZmODg4MDdkYzAwMDAwKDAwMDApIGtu
bEdTOjAwMDAwMDAwMDAwMDAwMDAKIENTOiAgMDAxMCBEUzogMDAwMCBFUzogMDAwMCBDUjA6IDAw
MDAwMDAwODAwNTAwMzMKIENSMjogMDAwMDAwMDAwMDAwMDA4MCBDUjM6IDAwMDAwMDAwN2JkMGYw
MDQgQ1I0OiAwMDAwMDAwMDAwMzcwNmYwCiBDYWxsIFRyYWNlOgogIGZpYl9jcmVhdGVfaW5mbysw
eDY0ZC8weGFmNwogIGZpYl90YWJsZV9pbnNlcnQrMHhmNi8weDU4MQogID8gX192bWFfYWRqdXN0
KzB4M2I2LzB4NGQ0CiAgaW5ldF9ydG1fbmV3cm91dGUrMHg1Ni8weDcwCiAgcnRuZXRsaW5rX3Jj
dl9tc2crMHgxZTMvMHgyMGQKICA/IHJ0bmxfY2FsY2l0LmlzcmEuMCsweGI4LzB4YjgKICBuZXRs
aW5rX3Jjdl9za2IrMHg1Yi8weGFjCiAgbmV0bGlua191bmljYXN0KzB4ZmEvMHgxN2IKICBuZXRs
aW5rX3NlbmRtc2crMHgzMzQvMHgzNTMKICBzb2NrX3NlbmRtc2dfbm9zZWMrMHhmLzB4M2YKICBf
X19fc3lzX3NlbmRtc2crMHgxYTAvMHgxZmMKICA/IGNvcHlfbXNnaGRyX2Zyb21fdXNlcisweDRj
LzB4NjEKICBfX19zeXNfc2VuZG1zZysweDYzLzB4ODQKICA/IGhhbmRsZV9tbV9mYXVsdCsweGEz
OS8weDExYjUKICA/IHNvY2tmZF9sb29rdXBfbGlnaHQrMHg3Mi8weDlhCiAgX19zeXNfc2VuZG1z
ZysweDUwLzB4NmUKICBkb19zeXNjYWxsXzY0KzB4NTQvMHhiZQogIGVudHJ5X1NZU0NBTExfNjRf
YWZ0ZXJfaHdmcmFtZSsweDQ0LzB4YTkKIFJJUDogMDAzMzoweDdmMTBkYWNjMGJiNwogQ29kZTog
ZDggNjQgODkgMDIgNDggYzcgYzAgZmYgZmYgZmYgZmYgZWIgY2QgNjYgMGYgMWYgNDQgMDAgMDAg
OGIgMDUgOWEgNGIgMmIgMDAgODUgYzAgNzUgMmUgNDggNjMgZmYgNDggNjMgZDIgYjggMmUgMDAg
MDAgMDAgMGYgMDUgPDQ4PiAzZCAwMCBmMCBmZiBmZiA3NyAwMSBjMyA0OCA4YiAxNSBiMSBmMiAy
YSAwMCBmNyBkOCA2NCA4OSAwMiA0OAogUlNQOiAwMDJiOjAwMDA3ZmZjYmU2MjhiZjggRUZMQUdT
OiAwMDAwMDI0NiBPUklHX1JBWDogMDAwMDAwMDAwMDAwMDAyZQogUkFYOiBmZmZmZmZmZmZmZmZm
ZmRhIFJCWDogMDAwMDdmZmNiZTYyOGY4MCBSQ1g6IDAwMDA3ZjEwZGFjYzBiYjcKIFJEWDogMDAw
MDAwMDAwMDAwMDAwMCBSU0k6IDAwMDA3ZmZjYmU2MjhjNjAgUkRJOiAwMDAwMDAwMDAwMDAwMDAz
CiBSQlA6IDAwMDAwMDAwNWY0MTA5OWMgUjA4OiAwMDAwMDAwMDAwMDAwMDAxIFIwOTogMDAwMDAw
MDAwMDAwMDAwOAogUjEwOiAwMDAwMDAwMDAwMDAwNWU5IFIxMTogMDAwMDAwMDAwMDAwMDI0NiBS
MTI6IDAwMDAwMDAwMDAwMDAwMDAKIFIxMzogMDAwMDAwMDAwMDAwMDAwMCBSMTQ6IDAwMDA3ZmZj
YmU2MjhkNzAgUjE1OiAwMDAwNTYzYTg2YzZlNDQwCiBNb2R1bGVzIGxpbmtlZCBpbjoKIENSMjog
MDAwMDAwMDAwMDAwMDA4MAoKQ0M6IERhdmlkIEFoZXJuIDxkc2FoZXJuQGdtYWlsLmNvbT4KRml4
ZXM6IDQzMGEwNDkxOTBkZSAoIm5leHRob3A6IEFkZCBzdXBwb3J0IGZvciBuZXh0aG9wIGdyb3Vw
cyIpClJlcG9ydGVkLWJ5OiBzeXpib3QrYTYxYWExOWIwYzE0Yzg3NzBiZDlAc3l6a2FsbGVyLmFw
cHNwb3RtYWlsLmNvbQpTaWduZWQtb2ZmLWJ5OiBOaWtvbGF5IEFsZWtzYW5kcm92IDxuaWtvbGF5
QGN1bXVsdXNuZXR3b3Jrcy5jb20+ClJldmlld2VkLWJ5OiBEYXZpZCBBaGVybiA8ZHNhaGVybkBn
bWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0
Lm5ldD4KLS0tCiBuZXQvaXB2NC9uZXh0aG9wLmMgfCA1ICsrKystCiAxIGZpbGUgY2hhbmdlZCwg
NCBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvbmV4
dGhvcC5jIGIvbmV0L2lwdjQvbmV4dGhvcC5jCmluZGV4IDU2M2Y3MWJjYjJkNy4uYzk3MDY5ZTc5
OTgxIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9uZXh0aG9wLmMKKysrIGIvbmV0L2lwdjQvbmV4dGhv
cC5jCkBAIC00MDIsNyArNDAyLDcgQEAgc3RhdGljIGludCBuaF9jaGVja19hdHRyX2dyb3VwKHN0
cnVjdCBuZXQgKm5ldCwgc3RydWN0IG5sYXR0ciAqdGJbXSwKIAlzdHJ1Y3QgbmV4dGhvcF9ncnAg
Km5oZzsKIAl1bnNpZ25lZCBpbnQgaSwgajsKIAotCWlmIChsZW4gJiAoc2l6ZW9mKHN0cnVjdCBu
ZXh0aG9wX2dycCkgLSAxKSkgeworCWlmICghbGVuIHx8IGxlbiAmIChzaXplb2Yoc3RydWN0IG5l
eHRob3BfZ3JwKSAtIDEpKSB7CiAJCU5MX1NFVF9FUlJfTVNHKGV4dGFjaywKIAkJCSAgICAgICAi
SW52YWxpZCBsZW5ndGggZm9yIG5leHRob3AgZ3JvdXAgYXR0cmlidXRlIik7CiAJCXJldHVybiAt
RUlOVkFMOwpAQCAtMTEwNCw2ICsxMTA0LDkgQEAgc3RhdGljIHN0cnVjdCBuZXh0aG9wICpuZXh0
aG9wX2NyZWF0ZV9ncm91cChzdHJ1Y3QgbmV0ICpuZXQsCiAJc3RydWN0IG5leHRob3AgKm5oOwog
CWludCBpOwogCisJaWYgKFdBUk5fT04oIW51bV9uaCkpCisJCXJldHVybiBFUlJfUFRSKC1FSU5W
QUwpOworCiAJbmggPSBuZXh0aG9wX2FsbG9jKCk7CiAJaWYgKCFuaCkKIAkJcmV0dXJuIEVSUl9Q
VFIoLUVOT01FTSk7Ci0tIAoyLjI2LjIKCgpGcm9tIDJmZDU2Yzk5NTJlNmMwYTEyNzBkYTcxMWMz
NjkxNzExYjM3OWQ3ZjggTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE5lY2lwIEZhemls
IFlpbGRpcmFuIDxuZWNpcEBnb29nbGUuY29tPgpEYXRlOiBNb24sIDE3IEF1ZyAyMDIwIDE1OjU0
OjQ4ICswMDAwClN1YmplY3Q6IFtQQVRDSCAxMC8yMl0gbmV0OiBxcnRyOiBmaXggdXNhZ2Ugb2Yg
aWRyIGluIHBvcnQgYXNzaWdubWVudCB0bwogc29ja2V0CgpbIFVwc3RyZWFtIGNvbW1pdCA4ZGZk
ZGZiNzk2NTNkZjdjMzhhOWM4YzRjMDM0ZjI0MmEzNmFjZWU5IF0KClBhc3NpbmcgbGFyZ2UgdWlu
dDMyIHNvY2thZGRyX3FydHIucG9ydCBudW1iZXJzIGZvciBwb3J0IGFsbG9jYXRpb24KdHJpZ2dl
cnMgYSB3YXJuaW5nIHdpdGhpbiBpZHJfYWxsb2MoKSBzaW5jZSB0aGUgcG9ydCBudW1iZXIgaXMg
Y2FzdAp0byBpbnQsIGFuZCB0aHVzIGludGVycHJldGVkIGFzIGEgbmVnYXRpdmUgbnVtYmVyLiBU
aGlzIGxlYWRzIHRvCnRoZSByZWplY3Rpb24gb2Ygc3VjaCB2YWxpZCBwb3J0IG51bWJlcnMgaW4g
cXJ0cl9wb3J0X2Fzc2lnbigpIGFzCmlkcl9hbGxvYygpIGZhaWxzLgoKVG8gYXZvaWQgdGhlIHBy
b2JsZW0sIHN3aXRjaCB0byBpZHJfYWxsb2NfdTMyKCkgaW5zdGVhZC4KCkZpeGVzOiBiZGFiYWQz
ZTM2M2QgKCJuZXQ6IEFkZCBRdWFsY29tbSBJUEMgcm91dGVyIikKUmVwb3J0ZWQtYnk6IHN5emJv
dCtmMzE0Mjg2MjhlZjY3MjcxNmVhOEBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tClNpZ25lZC1v
ZmYtYnk6IE5lY2lwIEZhemlsIFlpbGRpcmFuIDxuZWNpcEBnb29nbGUuY29tPgpSZXZpZXdlZC1i
eTogRG1pdHJ5IFZ5dWtvdiA8ZHZ5dWtvdkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZp
ZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3FydHIvcXJ0ci5jIHwg
MjAgKysrKysrKysrKystLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxMSBpbnNlcnRpb25zKCsp
LCA5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9xcnRyL3FydHIuYyBiL25ldC9xcnRy
L3FydHIuYwppbmRleCAzMDBhMTA0YjlhMGYuLjg1YWI0NTU5ZjA1NyAxMDA2NDQKLS0tIGEvbmV0
L3FydHIvcXJ0ci5jCisrKyBiL25ldC9xcnRyL3FydHIuYwpAQCAtNjkyLDIzICs2OTIsMjUgQEAg
c3RhdGljIHZvaWQgcXJ0cl9wb3J0X3JlbW92ZShzdHJ1Y3QgcXJ0cl9zb2NrICppcGMpCiAgKi8K
IHN0YXRpYyBpbnQgcXJ0cl9wb3J0X2Fzc2lnbihzdHJ1Y3QgcXJ0cl9zb2NrICppcGMsIGludCAq
cG9ydCkKIHsKKwl1MzIgbWluX3BvcnQ7CiAJaW50IHJjOwogCiAJbXV0ZXhfbG9jaygmcXJ0cl9w
b3J0X2xvY2spOwogCWlmICghKnBvcnQpIHsKLQkJcmMgPSBpZHJfYWxsb2MoJnFydHJfcG9ydHMs
IGlwYywKLQkJCSAgICAgICBRUlRSX01JTl9FUEhfU09DS0VULCBRUlRSX01BWF9FUEhfU09DS0VU
ICsgMSwKLQkJCSAgICAgICBHRlBfQVRPTUlDKTsKLQkJaWYgKHJjID49IDApCi0JCQkqcG9ydCA9
IHJjOworCQltaW5fcG9ydCA9IFFSVFJfTUlOX0VQSF9TT0NLRVQ7CisJCXJjID0gaWRyX2FsbG9j
X3UzMigmcXJ0cl9wb3J0cywgaXBjLCAmbWluX3BvcnQsIFFSVFJfTUFYX0VQSF9TT0NLRVQsIEdG
UF9BVE9NSUMpOworCQlpZiAoIXJjKQorCQkJKnBvcnQgPSBtaW5fcG9ydDsKIAl9IGVsc2UgaWYg
KCpwb3J0IDwgUVJUUl9NSU5fRVBIX1NPQ0tFVCAmJiAhY2FwYWJsZShDQVBfTkVUX0FETUlOKSkg
ewogCQlyYyA9IC1FQUNDRVM7CiAJfSBlbHNlIGlmICgqcG9ydCA9PSBRUlRSX1BPUlRfQ1RSTCkg
ewotCQlyYyA9IGlkcl9hbGxvYygmcXJ0cl9wb3J0cywgaXBjLCAwLCAxLCBHRlBfQVRPTUlDKTsK
KwkJbWluX3BvcnQgPSAwOworCQlyYyA9IGlkcl9hbGxvY191MzIoJnFydHJfcG9ydHMsIGlwYywg
Jm1pbl9wb3J0LCAwLCBHRlBfQVRPTUlDKTsKIAl9IGVsc2UgewotCQlyYyA9IGlkcl9hbGxvYygm
cXJ0cl9wb3J0cywgaXBjLCAqcG9ydCwgKnBvcnQgKyAxLCBHRlBfQVRPTUlDKTsKLQkJaWYgKHJj
ID49IDApCi0JCQkqcG9ydCA9IHJjOworCQltaW5fcG9ydCA9ICpwb3J0OworCQlyYyA9IGlkcl9h
bGxvY191MzIoJnFydHJfcG9ydHMsIGlwYywgJm1pbl9wb3J0LCAqcG9ydCwgR0ZQX0FUT01JQyk7
CisJCWlmICghcmMpCisJCQkqcG9ydCA9IG1pbl9wb3J0OwogCX0KIAltdXRleF91bmxvY2soJnFy
dHJfcG9ydF9sb2NrKTsKIAotLSAKMi4yNi4yCgoKRnJvbSAyOTFjYzE4MDUyNjIzZjY4NmE1Mjgz
YjZmNjIwOGUzZjVlMmM3MjFjIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbGFhIEhs
ZWloZWwgPGFsYWFAbWVsbGFub3guY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDE4OjI0OjEw
ICswMzAwClN1YmplY3Q6IFtQQVRDSCAxMS8yMl0gbmV0L3NjaGVkOiBhY3RfY3Q6IEZpeCBza2Ig
ZG91YmxlLWZyZWUgaW4KIHRjZl9jdF9oYW5kbGVfZnJhZ21lbnRzKCkgZXJyb3IgZmxvdwoKWyBV
cHN0cmVhbSBjb21taXQgZWRhODE0Yjk3ZGZiOGQ5ZjQ4MDhlYjJmNjVhZjliZDM3MDVjNGNhZSBd
Cgp0Y2ZfY3RfaGFuZGxlX2ZyYWdtZW50cygpIHNob3VsZG4ndCBmcmVlIHRoZSBza2Igd2hlbiBp
cF9kZWZyYWcoKSBjYWxsCmZhaWxzLiBPdGhlcndpc2UsIHdlIHdpbGwgY2F1c2UgYSBkb3VibGUt
ZnJlZSBidWcuCkluIHN1Y2ggY2FzZXMsIGp1c3QgcmV0dXJuIHRoZSBlcnJvciB0byB0aGUgY2Fs
bGVyLgoKRml4ZXM6IGI1N2RjN2MxM2VhOSAoIm5ldC9zY2hlZDogSW50cm9kdWNlIGFjdGlvbiBj
dCIpClNpZ25lZC1vZmYtYnk6IEFsYWEgSGxlaWhlbCA8YWxhYUBtZWxsYW5veC5jb20+ClJldmll
d2VkLWJ5OiBSb2kgRGF5YW4gPHJvaWRAbWVsbGFub3guY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZp
ZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3NjaGVkL2FjdF9jdC5j
IHwgMiArLQogMSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpk
aWZmIC0tZ2l0IGEvbmV0L3NjaGVkL2FjdF9jdC5jIGIvbmV0L3NjaGVkL2FjdF9jdC5jCmluZGV4
IDQxNzUyNmQ3NzQxYi4uMTZiYzViMGQxZWFhIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvYWN0X2N0
LmMKKysrIGIvbmV0L3NjaGVkL2FjdF9jdC5jCkBAIC03MDIsNyArNzAyLDcgQEAgc3RhdGljIGlu
dCB0Y2ZfY3RfaGFuZGxlX2ZyYWdtZW50cyhzdHJ1Y3QgbmV0ICpuZXQsIHN0cnVjdCBza19idWZm
ICpza2IsCiAJCWVyciA9IGlwX2RlZnJhZyhuZXQsIHNrYiwgdXNlcik7CiAJCWxvY2FsX2JoX2Vu
YWJsZSgpOwogCQlpZiAoZXJyICYmIGVyciAhPSAtRUlOUFJPR1JFU1MpCi0JCQlnb3RvIG91dF9m
cmVlOworCQkJcmV0dXJuIGVycjsKIAogCQlpZiAoIWVycikgewogCQkJKmRlZnJhZyA9IHRydWU7
Ci0tIAoyLjI2LjIKCgpGcm9tIDRlNWZmY2ZlMzM5MmI4ZDkzZTU5OWM2NjFhZDE3OGEwZjAyMDgz
ZmEgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IERhdmlkIExhaWdodCA8RGF2aWQuTGFp
Z2h0QEFDVUxBQi5DT00+CkRhdGU6IFdlZCwgMTkgQXVnIDIwMjAgMTQ6NDA6NTIgKzAwMDAKU3Vi
amVjdDogW1BBVENIIDEyLzIyXSBuZXQ6IHNjdHA6IEZpeCBuZWdvdGlhdGlvbiBvZiB0aGUgbnVt
YmVyIG9mIGRhdGEKIHN0cmVhbXMuCgpbIFVwc3RyZWFtIGNvbW1pdCBhYjkyMWYzY2RiZWMwMWM2
ODcwNWE3YWRlOGJlYzYyOGQ1NDFmYzJiIF0KClRoZSBudW1iZXIgb2Ygb3V0cHV0IGFuZCBpbnB1
dCBzdHJlYW1zIHdhcyBuZXZlciBiZWluZyByZWR1Y2VkLCBlZyB3aGVuCnByb2Nlc3NpbmcgcmVj
ZWl2ZWQgSU5JVCBvciBJTklUX0FDSyBjaHVua3MuClRoZSBlZmZlY3QgaXMgdGhhdCBEQVRBIGNo
dW5rcyBjYW4gYmUgc2VudCB3aXRoIGludmFsaWQgc3RyZWFtIGlkcwphbmQgdGhlbiBkaXNjYXJk
ZWQgYnkgdGhlIHJlbW90ZSBzeXN0ZW0uCgpGaXhlczogMjA3NWU1MGNhZjVlYSAoInNjdHA6IGNv
bnZlcnQgdG8gZ2VucmFkaXgiKQpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBMYWlnaHQgPGRhdmlkLmxh
aWdodEBhY3VsYWIuY29tPgpBY2tlZC1ieTogTWFyY2VsbyBSaWNhcmRvIExlaXRuZXIgPG1hcmNl
bG8ubGVpdG5lckBnbWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2
ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQvc2N0cC9zdHJlYW0uYyB8IDYgKysrKy0tCiAxIGZp
bGUgY2hhbmdlZCwgNCBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L25ldC9zY3RwL3N0cmVhbS5jIGIvbmV0L3NjdHAvc3RyZWFtLmMKaW5kZXggYmRhMjUzNmRkNzQw
Li42ZGM5NWRjYzBmZjQgMTAwNjQ0Ci0tLSBhL25ldC9zY3RwL3N0cmVhbS5jCisrKyBiL25ldC9z
Y3RwL3N0cmVhbS5jCkBAIC04OCwxMiArODgsMTMgQEAgc3RhdGljIGludCBzY3RwX3N0cmVhbV9h
bGxvY19vdXQoc3RydWN0IHNjdHBfc3RyZWFtICpzdHJlYW0sIF9fdTE2IG91dGNudCwKIAlpbnQg
cmV0OwogCiAJaWYgKG91dGNudCA8PSBzdHJlYW0tPm91dGNudCkKLQkJcmV0dXJuIDA7CisJCWdv
dG8gb3V0OwogCiAJcmV0ID0gZ2VucmFkaXhfcHJlYWxsb2MoJnN0cmVhbS0+b3V0LCBvdXRjbnQs
IGdmcCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAorb3V0OgogCXN0cmVhbS0+b3V0Y250
ID0gb3V0Y250OwogCXJldHVybiAwOwogfQpAQCAtMTA0LDEyICsxMDUsMTMgQEAgc3RhdGljIGlu
dCBzY3RwX3N0cmVhbV9hbGxvY19pbihzdHJ1Y3Qgc2N0cF9zdHJlYW0gKnN0cmVhbSwgX191MTYg
aW5jbnQsCiAJaW50IHJldDsKIAogCWlmIChpbmNudCA8PSBzdHJlYW0tPmluY250KQotCQlyZXR1
cm4gMDsKKwkJZ290byBvdXQ7CiAKIAlyZXQgPSBnZW5yYWRpeF9wcmVhbGxvYygmc3RyZWFtLT5p
biwgaW5jbnQsIGdmcCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAorb3V0OgogCXN0cmVh
bS0+aW5jbnQgPSBpbmNudDsKIAlyZXR1cm4gMDsKIH0KLS0gCjIuMjYuMgoKCkZyb20gYzY5MmY3
Zjc4ODhhYWE5Zjc4MzQ3Yjg1NjMyYWVkNTQ0NGIzZjEzMiBNb24gU2VwIDE3IDAwOjAwOjAwIDIw
MDEKRnJvbTogUGVpbGluIFllIDx5ZXBlaWxpbi5jc0BnbWFpbC5jb20+CkRhdGU6IFRodSwgMjAg
QXVnIDIwMjAgMTY6MzA6NTIgKzAyMDAKU3ViamVjdDogW1BBVENIIDEzLzIyXSBuZXQvc21jOiBQ
cmV2ZW50IGtlcm5lbC1pbmZvbGVhayBpbiBfX3NtY19kaWFnX2R1bXAoKQoKWyBVcHN0cmVhbSBj
b21taXQgY2U1MWY2M2U2M2M1MmE0ZTFlZWU0ZGQwNDBmYjBiYTBhZjNiNDNhYiBdCgpfX3NtY19k
aWFnX2R1bXAoKSBpcyBwb3RlbnRpYWxseSBjb3B5aW5nIHVuaW5pdGlhbGl6ZWQga2VybmVsIHN0
YWNrIG1lbW9yeQppbnRvIHNvY2tldCBidWZmZXJzLCBzaW5jZSB0aGUgY29tcGlsZXIgbWF5IGxl
YXZlIGEgNC1ieXRlIGhvbGUgbmVhciB0aGUKYmVnaW5uaW5nIG9mIGBzdHJ1Y3Qgc21jZF9kaWFn
X2RtYmluZm9gLiBGaXggaXQgYnkgaW5pdGlhbGl6aW5nIGBkaW5mb2AKd2l0aCBtZW1zZXQoKS4K
CkZpeGVzOiA0YjFiN2QzYjMwYTYgKCJuZXQvc21jOiBhZGQgU01DLUQgZGlhZyBzdXBwb3J0IikK
U3VnZ2VzdGVkLWJ5OiBEYW4gQ2FycGVudGVyIDxkYW4uY2FycGVudGVyQG9yYWNsZS5jb20+ClNp
Z25lZC1vZmYtYnk6IFBlaWxpbiBZZSA8eWVwZWlsaW4uY3NAZ21haWwuY29tPgpTaWduZWQtb2Zm
LWJ5OiBVcnN1bGEgQnJhdW4gPHVicmF1bkBsaW51eC5pYm0uY29tPgpTaWduZWQtb2ZmLWJ5OiBE
YXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3NtYy9zbWNfZGlh
Zy5jIHwgMTYgKysrKysrKysrLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDkgaW5zZXJ0aW9ucygr
KSwgNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvc21jL3NtY19kaWFnLmMgYi9uZXQv
c21jL3NtY19kaWFnLmMKaW5kZXggZTFmNjRmNGJhMjM2Li5kYTliYTZkMTY3OWIgMTAwNjQ0Ci0t
LSBhL25ldC9zbWMvc21jX2RpYWcuYworKysgYi9uZXQvc21jL3NtY19kaWFnLmMKQEAgLTE3MCwx
MyArMTcwLDE1IEBAIHN0YXRpYyBpbnQgX19zbWNfZGlhZ19kdW1wKHN0cnVjdCBzb2NrICpzaywg
c3RydWN0IHNrX2J1ZmYgKnNrYiwKIAkgICAgKHJlcS0+ZGlhZ19leHQgJiAoMSA8PCAoU01DX0RJ
QUdfRE1CSU5GTyAtIDEpKSkgJiYKIAkgICAgIWxpc3RfZW1wdHkoJnNtYy0+Y29ubi5sZ3ItPmxp
c3QpKSB7CiAJCXN0cnVjdCBzbWNfY29ubmVjdGlvbiAqY29ubiA9ICZzbWMtPmNvbm47Ci0JCXN0
cnVjdCBzbWNkX2RpYWdfZG1iaW5mbyBkaW5mbyA9IHsKLQkJCS5saW5raWQgPSAqKCh1MzIgKilj
b25uLT5sZ3ItPmlkKSwKLQkJCS5wZWVyX2dpZCA9IGNvbm4tPmxnci0+cGVlcl9naWQsCi0JCQku
bXlfZ2lkID0gY29ubi0+bGdyLT5zbWNkLT5sb2NhbF9naWQsCi0JCQkudG9rZW4gPSBjb25uLT5y
bWJfZGVzYy0+dG9rZW4sCi0JCQkucGVlcl90b2tlbiA9IGNvbm4tPnBlZXJfdG9rZW4KLQkJfTsK
KwkJc3RydWN0IHNtY2RfZGlhZ19kbWJpbmZvIGRpbmZvOworCisJCW1lbXNldCgmZGluZm8sIDAs
IHNpemVvZihkaW5mbykpOworCisJCWRpbmZvLmxpbmtpZCA9ICooKHUzMiAqKWNvbm4tPmxnci0+
aWQpOworCQlkaW5mby5wZWVyX2dpZCA9IGNvbm4tPmxnci0+cGVlcl9naWQ7CisJCWRpbmZvLm15
X2dpZCA9IGNvbm4tPmxnci0+c21jZC0+bG9jYWxfZ2lkOworCQlkaW5mby50b2tlbiA9IGNvbm4t
PnJtYl9kZXNjLT50b2tlbjsKKwkJZGluZm8ucGVlcl90b2tlbiA9IGNvbm4tPnBlZXJfdG9rZW47
CiAKIAkJaWYgKG5sYV9wdXQoc2tiLCBTTUNfRElBR19ETUJJTkZPLCBzaXplb2YoZGluZm8pLCAm
ZGluZm8pIDwgMCkKIAkJCWdvdG8gZXJyb3V0OwotLSAKMi4yNi4yCgoKRnJvbSBiODgyZjc2MmMx
NTUyMDE4MDNkZDc3YzZkY2YxMjZkNjM1ZjU1NmM1IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpG
cm9tOiAiSmFzb24gQS4gRG9uZW5mZWxkIiA8SmFzb25AengyYzQuY29tPgpEYXRlOiBTYXQsIDE1
IEF1ZyAyMDIwIDA5OjI5OjMwICswMjAwClN1YmplY3Q6IFtQQVRDSCAxNC8yMl0gbmV0OiB4ZHA6
IHB1bGwgZXRoZXJuZXQgaGVhZGVyIG9mZiBwYWNrZXQgYWZ0ZXIKIGNvbXB1dGluZyBza2ItPnBy
b3RvY29sCgpbIFVwc3RyZWFtIGNvbW1pdCBmODQxNGE4ZDg4NmI2MTNiOTBkOWZkZjdjZGE2ZmVl
YTMxM2IxMDY5IF0KCldoZW4gYW4gWERQIHByb2dyYW0gY2hhbmdlcyB0aGUgZXRoZXJuZXQgaGVh
ZGVyIHByb3RvY29sIGZpZWxkLApldGhfdHlwZV90cmFucyBpcyB1c2VkIHRvIHJlY2FsY3VsYXRl
IHNrYi0+cHJvdG9jb2wuIEluIG9yZGVyIGZvcgpldGhfdHlwZV90cmFucyB0byB3b3JrIGNvcnJl
Y3RseSwgdGhlIGV0aGVybmV0IGhlYWRlciBtdXN0IGFjdHVhbGx5IGJlCnBhcnQgb2YgdGhlIHNr
YiBkYXRhIHNlZ21lbnQsIHNvIHRoZSBjb2RlIGZpcnN0IHB1c2hlcyB0aGF0IG9udG8gdGhlCmhl
YWQgb2YgdGhlIHNrYi4gSG93ZXZlciwgaXQgc3Vic2VxdWVudGx5IGZvcmdldHMgdG8gcHVsbCBp
dCBiYWNrIG9mZiwKbWFraW5nIHRoZSBiZWhhdmlvciBvZiB0aGUgcGFzc2VkLW9uIHBhY2tldCBp
bmNvbnNpc3RlbnQgYmV0d2VlbiB0aGUKcHJvdG9jb2wgbW9kaWZ5aW5nIGNhc2UgYW5kIHRoZSBz
dGF0aWMgcHJvdG9jb2wgY2FzZS4gVGhpcyBwYXRjaCBmaXhlcwp0aGUgaXNzdWUgYnkgc2ltcGx5
IHB1bGxpbmcgdGhlIGV0aGVybmV0IGhlYWRlciBiYWNrIG9mZiBvZiB0aGUgc2tiCmhlYWQuCgpG
aXhlczogMjk3MjQ5NTY5OTMyICgibmV0OiBmaXggZ2VuZXJpYyBYRFAgdG8gaGFuZGxlIGlmIGV0
aCBoZWFkZXIgd2FzIG1hbmdsZWQiKQpDYzogSmVzcGVyIERhbmdhYXJkIEJyb3VlciA8YnJvdWVy
QHJlZGhhdC5jb20+CkNjOiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+ClNp
Z25lZC1vZmYtYnk6IEphc29uIEEuIERvbmVuZmVsZCA8SmFzb25AengyYzQuY29tPgpTaWduZWQt
b2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2Nv
cmUvZGV2LmMgfCAxICsKIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlvbigrKQoKZGlmZiAtLWdp
dCBhL25ldC9jb3JlL2Rldi5jIGIvbmV0L2NvcmUvZGV2LmMKaW5kZXggYzFjMjY4OGE5NTVjLi5j
MzVjYzk5YWM3ZGQgMTAwNjQ0Ci0tLSBhL25ldC9jb3JlL2Rldi5jCisrKyBiL25ldC9jb3JlL2Rl
di5jCkBAIC00NTg2LDYgKzQ1ODYsNyBAQCBzdGF0aWMgdTMyIG5ldGlmX3JlY2VpdmVfZ2VuZXJp
Y194ZHAoc3RydWN0IHNrX2J1ZmYgKnNrYiwKIAkgICAgKG9yaWdfYmNhc3QgIT0gaXNfbXVsdGlj
YXN0X2V0aGVyX2FkZHJfNjRiaXRzKGV0aC0+aF9kZXN0KSkpIHsKIAkJX19za2JfcHVzaChza2Is
IEVUSF9ITEVOKTsKIAkJc2tiLT5wcm90b2NvbCA9IGV0aF90eXBlX3RyYW5zKHNrYiwgc2tiLT5k
ZXYpOworCQlfX3NrYl9wdWxsKHNrYiwgRVRIX0hMRU4pOwogCX0KIAogCXN3aXRjaCAoYWN0KSB7
Ci0tIAoyLjI2LjIKCgpGcm9tIDgwYzVmMzZlOGU3OWZmNDRjZjBhOWVmMmRkZTEwNjU5ZTVhM2E5
YTYgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFhpbiBMb25nIDxsdWNpZW4ueGluQGdt
YWlsLmNvbT4KRGF0ZTogVGh1LCAyMCBBdWcgMjAyMCAxNTozNDo0NyArMDgwMApTdWJqZWN0OiBb
UEFUQ0ggMTUvMjJdIHRpcGM6IGNhbGwgcmN1X3JlYWRfbG9jaygpIGluIHRpcGNfYWVhZF9lbmNy
eXB0X2RvbmUoKQoKWyBVcHN0cmVhbSBjb21taXQgZjZkYjkwOTY0MTYyMDk0NzQwOTBkNjRkODI4
NGU3YzE2YzNkODg3MyBdCgpiLT5tZWRpYS0+c2VuZF9tc2coKSByZXF1aXJlcyByY3VfcmVhZF9s
b2NrKCksIGFzIHdlIGNhbiBzZWUKZWxzZXdoZXJlIGluIHRpcGMsICB0aXBjX2JlYXJlcl94bWl0
LCB0aXBjX2JlYXJlcl94bWl0X3NrYgphbmQgdGlwY19iZWFyZXJfYmNfeG1pdCgpLgoKU3l6Ym90
IGhhcyByZXBvcnRlZCB0aGlzIGlzc3VlIGFzOgoKICBuZXQvdGlwYy9iZWFyZXIuYzo0NjYgc3Vz
cGljaW91cyByY3VfZGVyZWZlcmVuY2VfY2hlY2soKSB1c2FnZSEKICBXb3JrcXVldWU6IGNyeXB0
ZCBjcnlwdGRfcXVldWVfd29ya2VyCiAgQ2FsbCBUcmFjZToKICAgdGlwY19sMl9zZW5kX21zZysw
eDM1NC8weDQyMCBuZXQvdGlwYy9iZWFyZXIuYzo0NjYKICAgdGlwY19hZWFkX2VuY3J5cHRfZG9u
ZSsweDIwNC8weDNhMCBuZXQvdGlwYy9jcnlwdG8uYzo3NjEKICAgY3J5cHRkX2FlYWRfY3J5cHQr
MHhlOC8weDFkMCBjcnlwdG8vY3J5cHRkLmM6NzM5CiAgIGNyeXB0ZF9xdWV1ZV93b3JrZXIrMHgx
MTgvMHgxYjAgY3J5cHRvL2NyeXB0ZC5jOjE4MQogICBwcm9jZXNzX29uZV93b3JrKzB4OTRjLzB4
MTY3MCBrZXJuZWwvd29ya3F1ZXVlLmM6MjI2OQogICB3b3JrZXJfdGhyZWFkKzB4NjRjLzB4MTEy
MCBrZXJuZWwvd29ya3F1ZXVlLmM6MjQxNQogICBrdGhyZWFkKzB4M2I1LzB4NGEwIGtlcm5lbC9r
dGhyZWFkLmM6MjkxCiAgIHJldF9mcm9tX2ZvcmsrMHgxZi8weDMwIGFyY2gveDg2L2VudHJ5L2Vu
dHJ5XzY0LlM6MjkzCgpTbyBmaXggaXQgYnkgY2FsbGluZyByY3VfcmVhZF9sb2NrKCkgaW4gdGlw
Y19hZWFkX2VuY3J5cHRfZG9uZSgpCmZvciBiLT5tZWRpYS0+c2VuZF9tc2coKS4KCkZpeGVzOiBm
YzFiNmQ2ZGUyMjAgKCJ0aXBjOiBpbnRyb2R1Y2UgVElQQyBlbmNyeXB0aW9uICYgYXV0aGVudGlj
YXRpb24iKQpSZXBvcnRlZC1ieTogc3l6Ym90KzQ3YmJjNmI2NzhkMzE3Y2NjYmUwQHN5emthbGxl
ci5hcHBzcG90bWFpbC5jb20KU2lnbmVkLW9mZi1ieTogWGluIExvbmcgPGx1Y2llbi54aW5AZ21h
aWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5u
ZXQ+Ci0tLQogbmV0L3RpcGMvY3J5cHRvLmMgfCAyICsrCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNl
cnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvbmV0L3RpcGMvY3J5cHRvLmMgYi9uZXQvdGlwYy9jcnlw
dG8uYwppbmRleCA4YzQ3ZGVkMmVkYjYuLmIyMTRiODk4ZDExYSAxMDA2NDQKLS0tIGEvbmV0L3Rp
cGMvY3J5cHRvLmMKKysrIGIvbmV0L3RpcGMvY3J5cHRvLmMKQEAgLTc1NywxMCArNzU3LDEyIEBA
IHN0YXRpYyB2b2lkIHRpcGNfYWVhZF9lbmNyeXB0X2RvbmUoc3RydWN0IGNyeXB0b19hc3luY19y
ZXF1ZXN0ICpiYXNlLCBpbnQgZXJyKQogCXN3aXRjaCAoZXJyKSB7CiAJY2FzZSAwOgogCQl0aGlz
X2NwdV9pbmModHgtPnN0YXRzLT5zdGF0W1NUQVRfQVNZTkNfT0tdKTsKKwkJcmN1X3JlYWRfbG9j
aygpOwogCQlpZiAobGlrZWx5KHRlc3RfYml0KDAsICZiLT51cCkpKQogCQkJYi0+bWVkaWEtPnNl
bmRfbXNnKG5ldCwgc2tiLCBiLCAmdHhfY3R4LT5kc3QpOwogCQllbHNlCiAJCQlrZnJlZV9za2Io
c2tiKTsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJCWJyZWFrOwogCWNhc2UgLUVJTlBST0dSRVNT
OgogCQlyZXR1cm47Ci0tIAoyLjI2LjIKCgpGcm9tIGVjMDc2MzQwYjg5NWI0YTFlMTczMjdhMjkw
YjA5ZTU2NGYyNmJlZTEgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IENvbmcgV2FuZyA8
eGl5b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpEYXRlOiBTYXQsIDE1IEF1ZyAyMDIwIDE2OjI5OjE1
IC0wNzAwClN1YmplY3Q6IFtQQVRDSCAxNi8yMl0gdGlwYzogZml4IHVuaW5pdCBza2ItPmRhdGEg
aW4gdGlwY19ubF9jb21wYXRfZHVtcGl0KCkKClsgVXBzdHJlYW0gY29tbWl0IDQ3NzMzZjlkYWY0
ZmU0ZjdlMGViOWUyNzNmMjFhZDNhMTkxMzA0ODcgXQoKX190aXBjX25sX2NvbXBhdF9kdW1waXQo
KSBoYXMgdHdvIGNhbGxlcnMsIGFuZCBpdCBleHBlY3RzIHRoZW0gdG8KcGFzcyBhIHZhbGlkIG5s
bXNnaGRyIHZpYSBhcmctPmRhdGEuIFRoaXMgaGVhZGVyIGlzIGFydGlmaWNpYWwgYW5kCmNyYWZ0
ZWQganVzdCBmb3IgX190aXBjX25sX2NvbXBhdF9kdW1waXQoKS4KCnRpcGNfbmxfY29tcGF0X3B1
YmxfZHVtcCgpIGRvZXMgc28gYnkgcHV0dGluZyBhIGdlbmxtc2doZHIgYXMgd2VsbAphcyBzb21l
IG5lc3RlZCBhdHRyaWJ1dGUsIFRJUENfTkxBX1NPQ0suIEJ1dCB0aGUgb3RoZXIgY2FsbGVyCnRp
cGNfbmxfY29tcGF0X2R1bXBpdCgpIGRvZXMgbm90LCB0aGlzIGxlYXZlcyBhcmctPmRhdGEgdW5p
bml0aWFsaXplZApvbiB0aGlzIGNhbGwgcGF0aC4KCkZpeCB0aGlzIGJ5IGp1c3QgYWRkaW5nIGEg
c2ltaWxhciBubG1zZ2hkciB3aXRob3V0IGFueSBwYXlsb2FkIGluCnRpcGNfbmxfY29tcGF0X2R1
bXBpdCgpLgoKVGhpcyBidWcgZXhpc3RzIHNpbmNlIGRheSAxLCBidXQgdGhlIHJlY2VudCBjb21t
aXQgNmVhNjc3NjlmZjMzCigibmV0OiB0aXBjOiBwcmVwYXJlIGF0dHJzIGluIF9fdGlwY19ubF9j
b21wYXRfZHVtcGl0KCkiKSBtYWtlcyBpdAplYXNpZXIgdG8gYXBwZWFyLgoKUmVwb3J0ZWQtYW5k
LXRlc3RlZC1ieTogc3l6Ym90KzBlNzE4MWRlYWZhN2UwYjc5OTIzQHN5emthbGxlci5hcHBzcG90
bWFpbC5jb20KRml4ZXM6IGQwNzk2ZDFlZjYzZCAoInRpcGM6IGNvbnZlcnQgbGVnYWN5IG5sIGJl
YXJlciBkdW1wIHRvIG5sIGNvbXBhdCIpCkNjOiBKb24gTWFsb3kgPGptYWxveUByZWRoYXQuY29t
PgpDYzogWWluZyBYdWUgPHlpbmcueHVlQHdpbmRyaXZlci5jb20+CkNjOiBSaWNoYXJkIEFscGUg
PHJpY2hhcmQuYWxwZUBlcmljc3Nvbi5jb20+ClNpZ25lZC1vZmYtYnk6IENvbmcgV2FuZyA8eGl5
b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpBY2tlZC1ieTogWWluZyBYdWUgPHlpbmcueHVlQHdpbmRy
aXZlci5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0
Lm5ldD4KLS0tCiBuZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jIHwgMTIgKysrKysrKysrKystCiAx
IGZpbGUgY2hhbmdlZCwgMTEgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdp
dCBhL25ldC90aXBjL25ldGxpbmtfY29tcGF0LmMgYi9uZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5j
CmluZGV4IDIxNzUxNjM1N2VmMi4uOTBlM2M3MGE5MWFkIDEwMDY0NAotLS0gYS9uZXQvdGlwYy9u
ZXRsaW5rX2NvbXBhdC5jCisrKyBiL25ldC90aXBjL25ldGxpbmtfY29tcGF0LmMKQEAgLTI3NSw4
ICsyNzUsOSBAQCBzdGF0aWMgaW50IF9fdGlwY19ubF9jb21wYXRfZHVtcGl0KHN0cnVjdCB0aXBj
X25sX2NvbXBhdF9jbWRfZHVtcCAqY21kLAogc3RhdGljIGludCB0aXBjX25sX2NvbXBhdF9kdW1w
aXQoc3RydWN0IHRpcGNfbmxfY29tcGF0X2NtZF9kdW1wICpjbWQsCiAJCQkJIHN0cnVjdCB0aXBj
X25sX2NvbXBhdF9tc2cgKm1zZykKIHsKLQlpbnQgZXJyOworCXN0cnVjdCBubG1zZ2hkciAqbmxo
OwogCXN0cnVjdCBza19idWZmICphcmc7CisJaW50IGVycjsKIAogCWlmIChtc2ctPnJlcV90eXBl
ICYmICghbXNnLT5yZXFfc2l6ZSB8fAogCQkJICAgICAgIVRMVl9DSEVDS19UWVBFKG1zZy0+cmVx
LCBtc2ctPnJlcV90eXBlKSkpCkBAIC0zMDUsNiArMzA2LDE1IEBAIHN0YXRpYyBpbnQgdGlwY19u
bF9jb21wYXRfZHVtcGl0KHN0cnVjdCB0aXBjX25sX2NvbXBhdF9jbWRfZHVtcCAqY21kLAogCQly
ZXR1cm4gLUVOT01FTTsKIAl9CiAKKwlubGggPSBubG1zZ19wdXQoYXJnLCAwLCAwLCB0aXBjX2dl
bmxfZmFtaWx5LmlkLCAwLCBOTE1fRl9NVUxUSSk7CisJaWYgKCFubGgpIHsKKwkJa2ZyZWVfc2ti
KGFyZyk7CisJCWtmcmVlX3NrYihtc2ctPnJlcCk7CisJCW1zZy0+cmVwID0gTlVMTDsKKwkJcmV0
dXJuIC1FTVNHU0laRTsKKwl9CisJbmxtc2dfZW5kKGFyZywgbmxoKTsKKwogCWVyciA9IF9fdGlw
Y19ubF9jb21wYXRfZHVtcGl0KGNtZCwgbXNnLCBhcmcpOwogCWlmIChlcnIpIHsKIAkJa2ZyZWVf
c2tiKG1zZy0+cmVwKTsKLS0gCjIuMjYuMgoKCkZyb20gOWU4ZGZhZjFlNDU1MTFhZGMwY2ZjMzQy
ODgwOTVjOGNkZGFmNjkxMCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogU2hheSBBZ3Jv
c2tpbiA8c2hheWFnckBhbWF6b24uY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDIwOjI4OjM2
ICswMzAwClN1YmplY3Q6IFtQQVRDSCAxNy8yMl0gbmV0OiBlbmE6IFByZXZlbnQgcmVzZXQgYWZ0
ZXIgZGV2aWNlIGRlc3RydWN0aW9uCgpbIFVwc3RyZWFtIGNvbW1pdCA2M2Q0YTRjMTQ1Y2NhMmU4
NGRjNmU2MmQyZWY1Y2I5OTBjOTcyM2MyIF0KClRoZSByZXNldCB3b3JrIGlzIHNjaGVkdWxlZCBi
eSB0aGUgdGltZXIgcm91dGluZSB3aGVuZXZlciBpdApkZXRlY3RzIHRoYXQgYSBkZXZpY2UgcmVz
ZXQgaXMgcmVxdWlyZWQgKGUuZy4gd2hlbiBhIGtlZXBfYWxpdmUgc2lnbmFsCmlzIG1pc3Npbmcp
LgpXaGVuIHJlbGVhc2luZyBkZXZpY2UgcmVzb3VyY2VzIGluIGVuYV9kZXN0cm95X2RldmljZSgp
IHRoZSBkcml2ZXIKY2FuY2VscyB0aGUgc2NoZWR1bGluZyBvZiB0aGUgdGltZXIgcm91dGluZSB3
aXRob3V0IGRlc3Ryb3lpbmcgdGhlIHJlc2V0CndvcmsgZXhwbGljaXRseS4KClRoaXMgY3JlYXRl
cyB0aGUgZm9sbG93aW5nIGJ1ZzoKICAgIFRoZSBkcml2ZXIgaXMgc3VzcGVuZGVkIGFuZCB0aGUg
ZW5hX3N1c3BlbmQoKSBmdW5jdGlvbiBpcyBjYWxsZWQKCS0+IFRoaXMgZnVuY3Rpb24gY2FsbHMg
ZW5hX2Rlc3Ryb3lfZGV2aWNlKCkgdG8gZnJlZSB0aGUgbmV0IGRldmljZQoJICAgcmVzb3VyY2Vz
CgkgICAgLT4gVGhlIGRyaXZlciB3YWl0cyBmb3IgdGhlIHRpbWVyIHJvdXRpbmUgdG8gZmluaXNo
CgkgICAgaXRzIGV4ZWN1dGlvbiBhbmQgdGhlbiBjYW5jZWxzIGl0LCB0aHVzIHByZXZlbnRpbmcg
ZnJvbSBpdAoJICAgIHRvIGJlIGNhbGxlZCBhZ2Fpbi4KCiAgICBJZiwgaW4gaXRzIGZpbmFsIGV4
ZWN1dGlvbiwgdGhlIHRpbWVyIHJvdXRpbmUgc2NoZWR1bGVzIGEgcmVzZXQsCiAgICB0aGUgcmVz
ZXQgcm91dGluZSBtaWdodCBiZSBjYWxsZWQgYWZ0ZXJ3YXJkcyxhbmQgYSByZWR1bmRhbnQgY2Fs
bCB0bwogICAgZW5hX3Jlc3RvcmVfZGV2aWNlKCkgd291bGQgYmUgbWFkZS4KCkJ5IGNoYW5naW5n
IHRoZSByZXNldCByb3V0aW5lIHdlIGFsbG93IGl0IHRvIHJlYWQgdGhlIGRldmljZSdzIHN0YXRl
CmFjY3VyYXRlbHkuClRoaXMgaXMgYWNoaWV2ZWQgYnkgY2hlY2tpbmcgd2hldGhlciBFTkFfRkxB
R19UUklHR0VSX1JFU0VUIGZsYWcgaXMgc2V0CmJlZm9yZSByZXNldHRpbmcgdGhlIGRldmljZSBh
bmQgbWFraW5nIGJvdGggdGhlIGRlc3RydWN0aW9uIGZ1bmN0aW9uIGFuZAp0aGUgZmxhZyBjaGVj
ayBhcmUgdW5kZXIgcnRubCBsb2NrLgpUaGUgRU5BX0ZMQUdfVFJJR0dFUl9SRVNFVCBpcyBjbGVh
cmVkIGF0IHRoZSBlbmQgb2YgdGhlIGRlc3RydWN0aW9uCnJvdXRpbmUuIEFsc28gc3Vycm91bmQg
dGhlIGZsYWcgY2hlY2sgd2l0aCAnbGlrZWx5JyBiZWNhdXNlCndlIGV4cGVjdCB0aGF0IHRoZSBy
ZXNldCByb3V0aW5lIHdvdWxkIGJlIGNhbGxlZCBvbmx5IHdoZW4KRU5BX0ZMQUdfVFJJR0dFUl9S
RVNFVCBmbGFnIGlzIHNldC4KClRoZSBkZXN0cnVjdGlvbiBvZiB0aGUgdGltZXIgYW5kIHJlc2V0
IHNlcnZpY2VzIGluIF9fZW5hX3NodXRvZmYoKSBoYXZlIHRvCnN0YXksIGV2ZW4gdGhvdWdoIHRo
ZSB0aW1lciByb3V0aW5lIGlzIGRlc3Ryb3llZCBpbiBlbmFfZGVzdHJveV9kZXZpY2UoKS4KVGhp
cyBpcyB0byBhdm9pZCBhIGNhc2UgaW4gd2hpY2ggdGhlIHJlc2V0IHJvdXRpbmUgaXMgc2NoZWR1
bGVkIGFmdGVyCmZyZWVfbmV0ZGV2KCkgaW4gX19lbmFfc2h1dG9mZigpLCB3aGljaCB3b3VsZCBj
cmVhdGUgYW4gYWNjZXNzIHRvIGZyZWVkCm1lbW9yeSBpbiBhZGFwdGVyLT5mbGFncy4KCkZpeGVz
OiA4YzVjN2FiZGViMmQgKCJuZXQ6IGVuYTogYWRkIHBvd2VyIG1hbmFnZW1lbnQgb3BzIHRvIHRo
ZSBFTkEgZHJpdmVyIikKU2lnbmVkLW9mZi1ieTogU2hheSBBZ3Jvc2tpbiA8c2hheWFnckBhbWF6
b24uY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5u
ZXQ+Ci0tLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMgfCAx
OSArKysrKysrKysrLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTAgaW5zZXJ0aW9ucygrKSwg
OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9hbWF6b24v
ZW5hL2VuYV9uZXRkZXYuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25l
dGRldi5jCmluZGV4IDE1Y2U5M2JlMDVlYS4uZGMzZmRhNDU5OTI0IDEwMDY0NAotLS0gYS9kcml2
ZXJzL25ldC9ldGhlcm5ldC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYworKysgYi9kcml2ZXJzL25l
dC9ldGhlcm5ldC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYwpAQCAtMzUwOCwxNiArMzUwOCwxNCBA
QCBzdGF0aWMgdm9pZCBlbmFfZndfcmVzZXRfZGV2aWNlKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29y
aykKIHsKIAlzdHJ1Y3QgZW5hX2FkYXB0ZXIgKmFkYXB0ZXIgPQogCQljb250YWluZXJfb2Yod29y
aywgc3RydWN0IGVuYV9hZGFwdGVyLCByZXNldF90YXNrKTsKLQlzdHJ1Y3QgcGNpX2RldiAqcGRl
diA9IGFkYXB0ZXItPnBkZXY7CiAKLQlpZiAodW5saWtlbHkoIXRlc3RfYml0KEVOQV9GTEFHX1RS
SUdHRVJfUkVTRVQsICZhZGFwdGVyLT5mbGFncykpKSB7Ci0JCWRldl9lcnIoJnBkZXYtPmRldiwK
LQkJCSJkZXZpY2UgcmVzZXQgc2NoZWR1bGUgd2hpbGUgcmVzZXQgYml0IGlzIG9mZlxuIik7Ci0J
CXJldHVybjsKLQl9CiAJcnRubF9sb2NrKCk7Ci0JZW5hX2Rlc3Ryb3lfZGV2aWNlKGFkYXB0ZXIs
IGZhbHNlKTsKLQllbmFfcmVzdG9yZV9kZXZpY2UoYWRhcHRlcik7CisKKwlpZiAobGlrZWx5KHRl
c3RfYml0KEVOQV9GTEFHX1RSSUdHRVJfUkVTRVQsICZhZGFwdGVyLT5mbGFncykpKSB7CisJCWVu
YV9kZXN0cm95X2RldmljZShhZGFwdGVyLCBmYWxzZSk7CisJCWVuYV9yZXN0b3JlX2RldmljZShh
ZGFwdGVyKTsKKwl9CisKIAlydG5sX3VubG9jaygpOwogfQogCkBAIC00MzUxLDggKzQzNDksMTEg
QEAgc3RhdGljIHZvaWQgX19lbmFfc2h1dG9mZihzdHJ1Y3QgcGNpX2RldiAqcGRldiwgYm9vbCBz
aHV0ZG93bikKIAkJbmV0ZGV2LT5yeF9jcHVfcm1hcCA9IE5VTEw7CiAJfQogI2VuZGlmIC8qIENP
TkZJR19SRlNfQUNDRUwgKi8KLQlkZWxfdGltZXJfc3luYygmYWRhcHRlci0+dGltZXJfc2Vydmlj
ZSk7CiAKKwkvKiBNYWtlIHN1cmUgdGltZXIgYW5kIHJlc2V0IHJvdXRpbmUgd29uJ3QgYmUgY2Fs
bGVkIGFmdGVyCisJICogZnJlZWluZyBkZXZpY2UgcmVzb3VyY2VzLgorCSAqLworCWRlbF90aW1l
cl9zeW5jKCZhZGFwdGVyLT50aW1lcl9zZXJ2aWNlKTsKIAljYW5jZWxfd29ya19zeW5jKCZhZGFw
dGVyLT5yZXNldF90YXNrKTsKIAogCXJ0bmxfbG9jaygpOyAvKiBsb2NrIHJlbGVhc2VkIGluc2lk
ZSB0aGUgYmVsb3cgaWYtZWxzZSBibG9jayAqLwotLSAKMi4yNi4yCgoKRnJvbSBjNjEyNzA4N2E4
OWQ2Yzg0MzI5YTI5M2M5OWU4N2I5MTQ3MDE2ZjdhIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpG
cm9tOiBTaGF5IEFncm9za2luIDxzaGF5YWdyQGFtYXpvbi5jb20+CkRhdGU6IFdlZCwgMTkgQXVn
IDIwMjAgMjA6Mjg6MzcgKzAzMDAKU3ViamVjdDogW1BBVENIIDE4LzIyXSBuZXQ6IGVuYTogQ2hh
bmdlIFdBUk5fT04gZXhwcmVzc2lvbiBpbgogZW5hX2RlbF9uYXBpX2luX3JhbmdlKCkKClsgVXBz
dHJlYW0gY29tbWl0IDhiMTQ3ZjZmM2U3ZGU0ZTUxMTEzZTNlOWVjNDRhYTJkZWJjMDJjNTggXQoK
VGhlIGVuYV9kZWxfbmFwaV9pbl9yYW5nZSgpIGZ1bmN0aW9uIHVucmVnaXN0ZXJzIHRoZSBuYXBp
IGhhbmRsZXIgZm9yCnJpbmdzIGluIGEgZ2l2ZW4gcmFuZ2UuClRoaXMgZnVuY3Rpb24gaGFkIHRo
ZSBmb2xsb3dpbmcgV0FSTl9PTiBtYWNybzoKCiAgICBXQVJOX09OKEVOQV9JU19YRFBfSU5ERVgo
YWRhcHRlciwgaSkgJiYKCSAgICBhZGFwdGVyLT5lbmFfbmFwaVtpXS54ZHBfcmluZyk7CgpUaGlz
IG1hY3JvIHByaW50cyB0aGUgY2FsbCBzdGFjayBpZiB0aGUgZXhwcmVzc2lvbiBpbnNpZGUgb2Yg
aXQgaXMKdHJ1ZSBbMV0sIGJ1dCB0aGUgZXhwcmVzc2lvbiBpbnNpZGUgb2YgaXQgaXMgdGhlIHdh
bnRlZCBzaXR1YXRpb24uClRoZSBleHByZXNzaW9uIGNoZWNrcyB3aGV0aGVyIHRoZSByaW5nIGhh
cyBhbiBYRFAgcXVldWUgYW5kIGl0cyBpbmRleApjb3JyZXNwb25kcyB0byBhIFhEUCBvbmUuCgpU
aGlzIHBhdGNoIGNoYW5nZXMgdGhlIGV4cHJlc3Npb24gdG8KICAgICFFTkFfSVNfWERQX0lOREVY
KGFkYXB0ZXIsIGkpICYmIGFkYXB0ZXItPmVuYV9uYXBpW2ldLnhkcF9yaW5nCndoaWNoIGluZGlj
YXRlcyBhbiB1bndhbnRlZCBzaXR1YXRpb24uCgpBbHNvLCBjaGFuZ2UgdGhlIHN0cnVjdHVyZSBv
ZiB0aGUgZnVuY3Rpb24uIFRoZSBuYXBpIGhhbmRsZXIgaXMKdW5yZWdpc3RlcmVkIGZvciBhbGwg
cmluZ3MsIGFuZCBzbyB0aGVyZSdzIG5vIG5lZWQgdG8gY2hlY2sgd2hldGhlciB0aGUKaW5kZXgg
aXMgYW4gWERQIGluZGV4IG9yIG5vdC4gQnkgcmVtb3ZpbmcgdGhpcyBjaGVjayB0aGUgY29kZSBi
ZWNvbWVzCm11Y2ggbW9yZSByZWFkYWJsZS4KCkZpeGVzOiA1NDhjNDk0MGI5ZjEgKCJuZXQ6IGVu
YTogSW1wbGVtZW50IFhEUF9UWCBhY3Rpb24iKQpTaWduZWQtb2ZmLWJ5OiBTaGF5IEFncm9za2lu
IDxzaGF5YWdyQGFtYXpvbi5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2
ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9hbWF6b24vZW5hL2Vu
YV9uZXRkZXYuYyB8IDExICsrKystLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNCBpbnNlcnRpb25z
KCspLCA3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2Ft
YXpvbi9lbmEvZW5hX25ldGRldi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9l
bmFfbmV0ZGV2LmMKaW5kZXggZGMzZmRhNDU5OTI0Li5jNTAxYTRlZGMzNGQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jCisrKyBiL2RyaXZl
cnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jCkBAIC0yMTY2LDEzICsyMTY2
LDEwIEBAIHN0YXRpYyB2b2lkIGVuYV9kZWxfbmFwaV9pbl9yYW5nZShzdHJ1Y3QgZW5hX2FkYXB0
ZXIgKmFkYXB0ZXIsCiAJaW50IGk7CiAKIAlmb3IgKGkgPSBmaXJzdF9pbmRleDsgaSA8IGZpcnN0
X2luZGV4ICsgY291bnQ7IGkrKykgewotCQkvKiBDaGVjayBpZiBuYXBpIHdhcyBpbml0aWFsaXpl
ZCBiZWZvcmUgKi8KLQkJaWYgKCFFTkFfSVNfWERQX0lOREVYKGFkYXB0ZXIsIGkpIHx8Ci0JCSAg
ICBhZGFwdGVyLT5lbmFfbmFwaVtpXS54ZHBfcmluZykKLQkJCW5ldGlmX25hcGlfZGVsKCZhZGFw
dGVyLT5lbmFfbmFwaVtpXS5uYXBpKTsKLQkJZWxzZQotCQkJV0FSTl9PTihFTkFfSVNfWERQX0lO
REVYKGFkYXB0ZXIsIGkpICYmCi0JCQkJYWRhcHRlci0+ZW5hX25hcGlbaV0ueGRwX3JpbmcpOwor
CQluZXRpZl9uYXBpX2RlbCgmYWRhcHRlci0+ZW5hX25hcGlbaV0ubmFwaSk7CisKKwkJV0FSTl9P
TighRU5BX0lTX1hEUF9JTkRFWChhZGFwdGVyLCBpKSAmJgorCQkJYWRhcHRlci0+ZW5hX25hcGlb
aV0ueGRwX3JpbmcpOwogCX0KIH0KIAotLSAKMi4yNi4yCgoKRnJvbSA1YTQxYWU2NjM0MjU4ZTli
Y2ZkZjBlM2Y1ZDVjZmU0OGU4N2IxMGE3IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBT
aGF5IEFncm9za2luIDxzaGF5YWdyQGFtYXpvbi5jb20+CkRhdGU6IFdlZCwgMTkgQXVnIDIwMjAg
MjA6Mjg6MzggKzAzMDAKU3ViamVjdDogW1BBVENIIDE5LzIyXSBuZXQ6IGVuYTogTWFrZSBtaXNz
ZWRfdHggc3RhdCBpbmNyZW1lbnRhbAoKWyBVcHN0cmVhbSBjb21taXQgY2NkMTQzZTUxNTBmMjRi
OWJhMTUxNDVjNzIyMWI2MWRkOWU0MTAyMSBdCgpNb3N0IHN0YXRpc3RpY3MgaW4gZW5hIGRyaXZl
ciBhcmUgaW5jcmVtZW50ZWQsIG1lYW5pbmcgdGhhdCBhIHN0YXQncwp2YWx1ZSBpcyBhIHN1bSBv
ZiBhbGwgaW5jcmVhc2VzIGRvbmUgdG8gaXQgc2luY2UgZHJpdmVyL3F1ZXVlCmluaXRpYWxpemF0
aW9uLgoKVGhpcyBwYXRjaCBtYWtlcyBhbGwgc3RhdGlzdGljcyB0aGlzIHdheSwgZWZmZWN0aXZl
bHkgbWFraW5nIG1pc3NlZF90eApzdGF0aXN0aWMgaW5jcmVtZW50YWwuCkFsc28gYWRkZWQgYSBj
b21tZW50IHJlZ2FyZGluZyByeF9kcm9wcyBhbmQgdHhfZHJvcHMgdG8gbWFrZSBpdApjbGVhcmVy
IGhvdyB0aGVzZSBjb3VudGVycyBhcmUgY2FsY3VsYXRlZC4KCkZpeGVzOiAxMTA5NWZkYjcxMmIg
KCJuZXQ6IGVuYTogYWRkIHN0YXRpc3RpY3MgZm9yIG1pc3NlZCB0eCBwYWNrZXRzIikKU2lnbmVk
LW9mZi1ieTogU2hheSBBZ3Jvc2tpbiA8c2hheWFnckBhbWF6b24uY29tPgpTaWduZWQtb2ZmLWJ5
OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQv
ZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMgfCA1ICsrKystCiAxIGZpbGUgY2hhbmdl
ZCwgNCBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMgYi9kcml2ZXJzL25ldC9ldGhlcm5l
dC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYwppbmRleCBjNTAxYTRlZGMzNGQuLjUxYjliNDlhMjk1
ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2
LmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMKQEAg
LTM1OTQsNyArMzU5NCw3IEBAIHN0YXRpYyBpbnQgY2hlY2tfbWlzc2luZ19jb21wX2luX3R4X3F1
ZXVlKHN0cnVjdCBlbmFfYWRhcHRlciAqYWRhcHRlciwKIAl9CiAKIAl1NjRfc3RhdHNfdXBkYXRl
X2JlZ2luKCZ0eF9yaW5nLT5zeW5jcCk7Ci0JdHhfcmluZy0+dHhfc3RhdHMubWlzc2VkX3R4ID0g
bWlzc2VkX3R4OworCXR4X3JpbmctPnR4X3N0YXRzLm1pc3NlZF90eCArPSBtaXNzZWRfdHg7CiAJ
dTY0X3N0YXRzX3VwZGF0ZV9lbmQoJnR4X3JpbmctPnN5bmNwKTsKIAogCXJldHVybiByYzsKQEAg
LTQ1MTksNiArNDUxOSw5IEBAIHN0YXRpYyB2b2lkIGVuYV9rZWVwX2FsaXZlX3dkKHZvaWQgKmFk
YXB0ZXJfZGF0YSwKIAlyeF9kcm9wcyA9ICgodTY0KWRlc2MtPnJ4X2Ryb3BzX2hpZ2ggPDwgMzIp
IHwgZGVzYy0+cnhfZHJvcHNfbG93OwogCiAJdTY0X3N0YXRzX3VwZGF0ZV9iZWdpbigmYWRhcHRl
ci0+c3luY3ApOworCS8qIFRoZXNlIHN0YXRzIGFyZSBhY2N1bXVsYXRlZCBieSB0aGUgZGV2aWNl
LCBzbyB0aGUgY291bnRlcnMgaW5kaWNhdGUKKwkgKiBhbGwgZHJvcHMgc2luY2UgbGFzdCByZXNl
dC4KKwkgKi8KIAlhZGFwdGVyLT5kZXZfc3RhdHMucnhfZHJvcHMgPSByeF9kcm9wczsKIAl1NjRf
c3RhdHNfdXBkYXRlX2VuZCgmYWRhcHRlci0+c3luY3ApOwogfQotLSAKMi4yNi4yCgoKRnJvbSA4
ZDRlYzczODBkOGM4ZThiNTY2ZDU1NTFhM2Q2YzM1MDMyZTgxYzk2IE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBNYXhpbSBNaWtpdHlhbnNraXkgPG1heGltbWlAbWVsbGFub3guY29tPgpE
YXRlOiBNb24sIDE3IEF1ZyAyMDIwIDE2OjM0OjA1ICswMzAwClN1YmplY3Q6IFtQQVRDSCAyMC8y
Ml0gZXRodG9vbDogRml4IHByZXNlcnZpbmcgb2Ygd2FudGVkIGZlYXR1cmUgYml0cyBpbgogbmV0
bGluayBpbnRlcmZhY2UKClsgVXBzdHJlYW0gY29tbWl0IDg0MDExMGE0ZWFlMTkwZGNiYjk5MDdk
NjgyMTZkNWQxZDlmMjU4MzkgXQoKQ3VycmVudGx5LCBldGh0b29sLW5ldGxpbmsgY2FsY3VsYXRl
cyBuZXcgd2FudGVkIGJpdHMgYXM6CihyZXFfd2FudGVkICYgcmVxX21hc2spIHwgKG9sZF9hY3Rp
dmUgJiB+cmVxX21hc2spCgpJdCBjb21wbGV0ZWx5IGRpc2NhcmRzIHRoZSBvbGQgd2FudGVkIGJp
dHMsIHNvIHRoZXkgYXJlIGZvcmdvdHRlbiB3aXRoCnRoZSBuZXh0IGV0aHRvb2wgY29tbWFuZC4g
U2FtcGxlIHN0ZXBzIHRvIHJlcHJvZHVjZToKCjEuIGV0aHRvb2wgLWsgZXRoMAogICB0eC10Y3At
c2VnbWVudGF0aW9uOiBvbiAjIFRTTyBpcyBvbiBmcm9tIHRoZSBiZWdpbm5pbmcKMi4gZXRodG9v
bCAtSyBldGgwIHR4IG9mZgogICB0eC10Y3Atc2VnbWVudGF0aW9uOiBvZmYgW25vdCByZXF1ZXN0
ZWRdCjMuIGV0aHRvb2wgLWsgZXRoMAogICB0eC10Y3Atc2VnbWVudGF0aW9uOiBvZmYgW3JlcXVl
c3RlZCBvbl0KNC4gZXRodG9vbCAtSyBldGgwIHJ4IG9mZiAjIFNvbWUgY2hhbmdlIHVucmVsYXRl
ZCB0byBUU08KNS4gZXRodG9vbCAtayBldGgwCiAgIHR4LXRjcC1zZWdtZW50YXRpb246IG9mZiAj
ICJXYW50ZWQgb24iIGlzIGZvcmdvdHRlbgoKVGhpcyBjb21taXQgZml4ZXMgaXQgYnkgY2hhbmdp
bmcgdGhlIGZvcm11bGEgdG86CihyZXFfd2FudGVkICYgcmVxX21hc2spIHwgKG9sZF93YW50ZWQg
JiB+cmVxX21hc2spLAp3aGVyZSBvbGRfYWN0aXZlIHdhcyByZXBsYWNlZCBieSBvbGRfd2FudGVk
IHRvIGFjY291bnQgZm9yIHRoZSB3YW50ZWQKYml0cy4KClRoZSBzaG9ydGN1dCBjb25kaXRpb24g
Zm9yIHRoZSBjYXNlIHdoZXJlIG5vdGhpbmcgd2FzIGNoYW5nZWQgbm93CmNvbXBhcmVzIHdhbnRl
ZCBiaXRtYXNrcywgaW5zdGVhZCBvZiB3YW50ZWQgdG8gYWN0aXZlLgoKRml4ZXM6IDA5ODBiZmNk
Njk1NCAoImV0aHRvb2w6IHNldCBuZXRkZXYgZmVhdHVyZXMgd2l0aCBGRUFUVVJFU19TRVQgcmVx
dWVzdCIpClNpZ25lZC1vZmYtYnk6IE1heGltIE1pa2l0eWFuc2tpeSA8bWF4aW1taUBtZWxsYW5v
eC5jb20+ClJldmlld2VkLWJ5OiBNaWNoYWwgS3ViZWNlayA8bWt1YmVjZWtAc3VzZS5jej4KU2ln
bmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5l
dC9ldGh0b29sL2ZlYXR1cmVzLmMgfCAxMSArKysrKysrLS0tLQogMSBmaWxlIGNoYW5nZWQsIDcg
aW5zZXJ0aW9ucygrKSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvZXRodG9vbC9m
ZWF0dXJlcy5jIGIvbmV0L2V0aHRvb2wvZmVhdHVyZXMuYwppbmRleCA0ZTYzMmRjOTg3ZDguLmVj
MTk2ZjBmZGRjOSAxMDA2NDQKLS0tIGEvbmV0L2V0aHRvb2wvZmVhdHVyZXMuYworKysgYi9uZXQv
ZXRodG9vbC9mZWF0dXJlcy5jCkBAIC0yMjQsNyArMjI0LDkgQEAgaW50IGV0aG5sX3NldF9mZWF0
dXJlcyhzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2VubF9pbmZvICppbmZvKQogCURFQ0xB
UkVfQklUTUFQKHdhbnRlZF9kaWZmX21hc2ssIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKIAlERUNM
QVJFX0JJVE1BUChhY3RpdmVfZGlmZl9tYXNrLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CiAJREVD
TEFSRV9CSVRNQVAob2xkX2FjdGl2ZSwgTkVUREVWX0ZFQVRVUkVfQ09VTlQpOworCURFQ0xBUkVf
QklUTUFQKG9sZF93YW50ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKIAlERUNMQVJFX0JJVE1B
UChuZXdfYWN0aXZlLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CisJREVDTEFSRV9CSVRNQVAobmV3
X3dhbnRlZCwgTkVUREVWX0ZFQVRVUkVfQ09VTlQpOwogCURFQ0xBUkVfQklUTUFQKHJlcV93YW50
ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKIAlERUNMQVJFX0JJVE1BUChyZXFfbWFzaywgTkVU
REVWX0ZFQVRVUkVfQ09VTlQpOwogCXN0cnVjdCBubGF0dHIgKnRiW0VUSFRPT0xfQV9GRUFUVVJF
U19NQVggKyAxXTsKQEAgLTI1MCw2ICsyNTIsNyBAQCBpbnQgZXRobmxfc2V0X2ZlYXR1cmVzKHN0
cnVjdCBza19idWZmICpza2IsIHN0cnVjdCBnZW5sX2luZm8gKmluZm8pCiAKIAlydG5sX2xvY2so
KTsKIAlldGhubF9mZWF0dXJlc190b19iaXRtYXAob2xkX2FjdGl2ZSwgZGV2LT5mZWF0dXJlcyk7
CisJZXRobmxfZmVhdHVyZXNfdG9fYml0bWFwKG9sZF93YW50ZWQsIGRldi0+d2FudGVkX2ZlYXR1
cmVzKTsKIAlyZXQgPSBldGhubF9wYXJzZV9iaXRzZXQocmVxX3dhbnRlZCwgcmVxX21hc2ssIE5F
VERFVl9GRUFUVVJFX0NPVU5ULAogCQkJCSB0YltFVEhUT09MX0FfRkVBVFVSRVNfV0FOVEVEXSwK
IAkJCQkgbmV0ZGV2X2ZlYXR1cmVzX3N0cmluZ3MsIGluZm8tPmV4dGFjayk7CkBAIC0yNjEsMTEg
KzI2NCwxMSBAQCBpbnQgZXRobmxfc2V0X2ZlYXR1cmVzKHN0cnVjdCBza19idWZmICpza2IsIHN0
cnVjdCBnZW5sX2luZm8gKmluZm8pCiAJCWdvdG8gb3V0X3J0bmw7CiAJfQogCi0JLyogc2V0IHJl
cV93YW50ZWQgYml0cyBub3QgaW4gcmVxX21hc2sgZnJvbSBvbGRfYWN0aXZlICovCisJLyogc2V0
IHJlcV93YW50ZWQgYml0cyBub3QgaW4gcmVxX21hc2sgZnJvbSBvbGRfd2FudGVkICovCiAJYml0
bWFwX2FuZChyZXFfd2FudGVkLCByZXFfd2FudGVkLCByZXFfbWFzaywgTkVUREVWX0ZFQVRVUkVf
Q09VTlQpOwotCWJpdG1hcF9hbmRub3QobmV3X2FjdGl2ZSwgb2xkX2FjdGl2ZSwgcmVxX21hc2ss
IE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKLQliaXRtYXBfb3IocmVxX3dhbnRlZCwgbmV3X2FjdGl2
ZSwgcmVxX3dhbnRlZCwgTkVUREVWX0ZFQVRVUkVfQ09VTlQpOwotCWlmIChiaXRtYXBfZXF1YWwo
cmVxX3dhbnRlZCwgb2xkX2FjdGl2ZSwgTkVUREVWX0ZFQVRVUkVfQ09VTlQpKSB7CisJYml0bWFw
X2FuZG5vdChuZXdfd2FudGVkLCBvbGRfd2FudGVkLCByZXFfbWFzaywgTkVUREVWX0ZFQVRVUkVf
Q09VTlQpOworCWJpdG1hcF9vcihyZXFfd2FudGVkLCBuZXdfd2FudGVkLCByZXFfd2FudGVkLCBO
RVRERVZfRkVBVFVSRV9DT1VOVCk7CisJaWYgKGJpdG1hcF9lcXVhbChyZXFfd2FudGVkLCBvbGRf
d2FudGVkLCBORVRERVZfRkVBVFVSRV9DT1VOVCkpIHsKIAkJcmV0ID0gMDsKIAkJZ290byBvdXRf
cnRubDsKIAl9Ci0tIAoyLjI2LjIKCgpGcm9tIDI1OTFiMjM2YzFkYzVkNzU4MjZmNTczNWFjNjkx
MDFhZWM5NTYxNjAgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1heGltIE1pa2l0eWFu
c2tpeSA8bWF4aW1taUBtZWxsYW5veC5jb20+CkRhdGU6IE1vbiwgMTcgQXVnIDIwMjAgMTY6MzQ6
MDYgKzAzMDAKU3ViamVjdDogW1BBVENIIDIxLzIyXSBldGh0b29sOiBBY2NvdW50IGZvciBod19m
ZWF0dXJlcyBpbiBuZXRsaW5rIGludGVyZmFjZQoKWyBVcHN0cmVhbSBjb21taXQgMjg0N2JmZWQ4
ODhmYmI4YmY0YzhlODA2N2ZkNjEyNzUzOGMyYzcwMCBdCgpldGh0b29sLW5ldGxpbmsgaWdub3Jl
cyBkZXYtPmh3X2ZlYXR1cmVzIGFuZCBtYXkgY29uZnVzZSB0aGUgZHJpdmVycyBieQphc2tpbmcg
dGhlbSB0byBlbmFibGUgZmVhdHVyZXMgbm90IGluIHRoZSBod19mZWF0dXJlcyBiaXRtYXNrLiBG
b3IKZXhhbXBsZToKCjEuIGV0aHRvb2wgLWsgZXRoMAogICB0bHMtaHctdHgtb2ZmbG9hZDogb2Zm
IFtmaXhlZF0KMi4gZXRodG9vbCAtSyBldGgwIHRscy1ody10eC1vZmZsb2FkIG9uCiAgIHRscy1o
dy10eC1vZmZsb2FkOiBvbgozLiBldGh0b29sIC1rIGV0aDAKICAgdGxzLWh3LXR4LW9mZmxvYWQ6
IG9uIFtmaXhlZF0KCkZpdGxlciBvdXQgZGV2LT5od19mZWF0dXJlcyBmcm9tIHJlcV93YW50ZWQg
dG8gZml4IGl0IGFuZCB0byByZXNlbWJsZQp0aGUgbGVnYWN5IGV0aHRvb2wgYmVoYXZpb3IuCgpG
aXhlczogMDk4MGJmY2Q2OTU0ICgiZXRodG9vbDogc2V0IG5ldGRldiBmZWF0dXJlcyB3aXRoIEZF
QVRVUkVTX1NFVCByZXF1ZXN0IikKU2lnbmVkLW9mZi1ieTogTWF4aW0gTWlraXR5YW5za2l5IDxt
YXhpbW1pQG1lbGxhbm94LmNvbT4KUmV2aWV3ZWQtYnk6IE1pY2hhbCBLdWJlY2VrIDxta3ViZWNl
a0BzdXNlLmN6PgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9m
dC5uZXQ+Ci0tLQogbmV0L2V0aHRvb2wvZmVhdHVyZXMuYyB8IDMgKystCiAxIGZpbGUgY2hhbmdl
ZCwgMiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2V0aHRv
b2wvZmVhdHVyZXMuYyBiL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMKaW5kZXggZWMxOTZmMGZkZGM5
Li42YjI4OGJmZDc2NzggMTAwNjQ0Ci0tLSBhL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMKKysrIGIv
bmV0L2V0aHRvb2wvZmVhdHVyZXMuYwpAQCAtMjczLDcgKzI3Myw4IEBAIGludCBldGhubF9zZXRf
ZmVhdHVyZXMoc3RydWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IGdlbmxfaW5mbyAqaW5mbykKIAkJ
Z290byBvdXRfcnRubDsKIAl9CiAKLQlkZXYtPndhbnRlZF9mZWF0dXJlcyA9IGV0aG5sX2JpdG1h
cF90b19mZWF0dXJlcyhyZXFfd2FudGVkKTsKKwlkZXYtPndhbnRlZF9mZWF0dXJlcyAmPSB+ZGV2
LT5od19mZWF0dXJlczsKKwlkZXYtPndhbnRlZF9mZWF0dXJlcyB8PSBldGhubF9iaXRtYXBfdG9f
ZmVhdHVyZXMocmVxX3dhbnRlZCkgJiBkZXYtPmh3X2ZlYXR1cmVzOwogCV9fbmV0ZGV2X3VwZGF0
ZV9mZWF0dXJlcyhkZXYpOwogCWV0aG5sX2ZlYXR1cmVzX3RvX2JpdG1hcChuZXdfYWN0aXZlLCBk
ZXYtPmZlYXR1cmVzKTsKIAltb2QgPSAhYml0bWFwX2VxdWFsKG9sZF9hY3RpdmUsIG5ld19hY3Rp
dmUsIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKLS0gCjIuMjYuMgoKCkZyb20gOTAwZjNkZDcwZGMy
NGQ2OTA3Yzk3M2E0NTFjNjdmOTBjZmRkNDVkZSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJv
bTogTWF4aW0gTWlraXR5YW5za2l5IDxtYXhpbW1pQG1lbGxhbm94LmNvbT4KRGF0ZTogTW9uLCAx
NyBBdWcgMjAyMCAxNjozNDowNyArMDMwMApTdWJqZWN0OiBbUEFUQ0ggMjIvMjJdIGV0aHRvb2w6
IERvbid0IG9taXQgdGhlIG5ldGxpbmsgcmVwbHkgaWYgbm8gZmVhdHVyZXMKIHdlcmUgY2hhbmdl
ZAoKWyBVcHN0cmVhbSBjb21taXQgZjAxMjA0ZWM4YmU3ZWE1ZThmMDIzMGE3ZDQyMDBlMzM4ZDU2
M2JkZSBdCgpUaGUgbGVnYWN5IGV0aHRvb2wgdXNlcnNwYWNlIHRvb2wgc2hvd3MgYW4gZXJyb3Ig
d2hlbiBubyBmZWF0dXJlcyBjb3VsZApiZSBjaGFuZ2VkLiBJdCdzIHVzZWZ1bCB0byBoYXZlIGEg
bmV0bGluayByZXBseSB0byBiZSBhYmxlIHRvIHNob3cgdGhpcwplcnJvciB3aGVuIF9fbmV0ZGV2
X3VwZGF0ZV9mZWF0dXJlcyB3YXNuJ3QgY2FsbGVkLCBmb3IgZXhhbXBsZToKCjEuIGV0aHRvb2wg
LWsgZXRoMAogICBsYXJnZS1yZWNlaXZlLW9mZmxvYWQ6IG9mZgoyLiBldGh0b29sIC1LIGV0aDAg
cngtZmNzIG9uCjMuIGV0aHRvb2wgLUsgZXRoMCBscm8gb24KICAgQ291bGQgbm90IGNoYW5nZSBh
bnkgZGV2aWNlIGZlYXR1cmVzCiAgIHJ4LWxybzogb2ZmIFtyZXF1ZXN0ZWQgb25dCjQuIGV0aHRv
b2wgLUsgZXRoMCBscm8gb24KICAgIyBUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgc2FtZSwgYnV0
IHdpdGhvdXQgdGhpcyBwYXRjaCB0aGUga2VybmVsCiAgICMgZG9lc24ndCBzZW5kIHRoZSByZXBs
eSwgYW5kIGV0aHRvb2wgaXMgdW5hYmxlIHRvIGRldGVjdCB0aGUgZXJyb3IuCgpUaGlzIGNvbW1p
dCBtYWtlcyBldGh0b29sLW5ldGxpbmsgYWx3YXlzIHJldHVybiBhIHJlcGx5IHdoZW4gcmVxdWVz
dGVkLAphbmQgaXQgc3RpbGwgYXZvaWRzIHVubmVjZXNzYXJ5IGNhbGxzIHRvIF9fbmV0ZGV2X3Vw
ZGF0ZV9mZWF0dXJlcyBpZiB0aGUKd2FudGVkIGZlYXR1cmVzIGhhdmVuJ3QgY2hhbmdlZC4KCkZp
eGVzOiAwOTgwYmZjZDY5NTQgKCJldGh0b29sOiBzZXQgbmV0ZGV2IGZlYXR1cmVzIHdpdGggRkVB
VFVSRVNfU0VUIHJlcXVlc3QiKQpTaWduZWQtb2ZmLWJ5OiBNYXhpbSBNaWtpdHlhbnNraXkgPG1h
eGltbWlAbWVsbGFub3guY29tPgpSZXZpZXdlZC1ieTogTWljaGFsIEt1YmVjZWsgPG1rdWJlY2Vr
QHN1c2UuY3o+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0
Lm5ldD4KLS0tCiBuZXQvZXRodG9vbC9mZWF0dXJlcy5jIHwgMTEgKysrKy0tLS0tLS0KIDEgZmls
ZSBjaGFuZ2VkLCA0IGluc2VydGlvbnMoKyksIDcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
bmV0L2V0aHRvb2wvZmVhdHVyZXMuYyBiL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMKaW5kZXggNmIy
ODhiZmQ3Njc4Li40OTU2MzVmMTUyYmEgMTAwNjQ0Ci0tLSBhL25ldC9ldGh0b29sL2ZlYXR1cmVz
LmMKKysrIGIvbmV0L2V0aHRvb2wvZmVhdHVyZXMuYwpAQCAtMjY4LDE0ICsyNjgsMTEgQEAgaW50
IGV0aG5sX3NldF9mZWF0dXJlcyhzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2VubF9pbmZv
ICppbmZvKQogCWJpdG1hcF9hbmQocmVxX3dhbnRlZCwgcmVxX3dhbnRlZCwgcmVxX21hc2ssIE5F
VERFVl9GRUFUVVJFX0NPVU5UKTsKIAliaXRtYXBfYW5kbm90KG5ld193YW50ZWQsIG9sZF93YW50
ZWQsIHJlcV9tYXNrLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CiAJYml0bWFwX29yKHJlcV93YW50
ZWQsIG5ld193YW50ZWQsIHJlcV93YW50ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKLQlpZiAo
Yml0bWFwX2VxdWFsKHJlcV93YW50ZWQsIG9sZF93YW50ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5U
KSkgewotCQlyZXQgPSAwOwotCQlnb3RvIG91dF9ydG5sOworCWlmICghYml0bWFwX2VxdWFsKHJl
cV93YW50ZWQsIG9sZF93YW50ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5UKSkgeworCQlkZXYtPndh
bnRlZF9mZWF0dXJlcyAmPSB+ZGV2LT5od19mZWF0dXJlczsKKwkJZGV2LT53YW50ZWRfZmVhdHVy
ZXMgfD0gZXRobmxfYml0bWFwX3RvX2ZlYXR1cmVzKHJlcV93YW50ZWQpICYgZGV2LT5od19mZWF0
dXJlczsKKwkJX19uZXRkZXZfdXBkYXRlX2ZlYXR1cmVzKGRldik7CiAJfQotCi0JZGV2LT53YW50
ZWRfZmVhdHVyZXMgJj0gfmRldi0+aHdfZmVhdHVyZXM7Ci0JZGV2LT53YW50ZWRfZmVhdHVyZXMg
fD0gZXRobmxfYml0bWFwX3RvX2ZlYXR1cmVzKHJlcV93YW50ZWQpICYgZGV2LT5od19mZWF0dXJl
czsKLQlfX25ldGRldl91cGRhdGVfZmVhdHVyZXMoZGV2KTsKIAlldGhubF9mZWF0dXJlc190b19i
aXRtYXAobmV3X2FjdGl2ZSwgZGV2LT5mZWF0dXJlcyk7CiAJbW9kID0gIWJpdG1hcF9lcXVhbChv
bGRfYWN0aXZlLCBuZXdfYWN0aXZlLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CiAKLS0gCjIuMjYu
MgoK

----Next_Part(Mon_Aug_24_09_52_29_2020_857)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_58.mbox"

RnJvbSAxZjhhNTJkNDc4NGQzZTY1Nzg4ZWI3YTdjMzQxMzU5N2VmZGIzNWM5IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBKaXJpIFdpZXNuZXIgPGp3aWVzbmVyQHN1c2UuY29tPgpEYXRl
OiBTdW4sIDE2IEF1ZyAyMDIwIDIwOjUyOjQ0ICswMjAwClN1YmplY3Q6IFtQQVRDSCAwMS8yNF0g
Ym9uZGluZzogZml4IGFjdGl2ZS1iYWNrdXAgZmFpbG92ZXIgZm9yIGN1cnJlbnQgQVJQCiBzbGF2
ZQoKWyBVcHN0cmVhbSBjb21taXQgMDQxMGQwNzE5MDk2MWFjNTI2ZjA1MDg1NzY1YThkMDRkOTI2
NTQ1YiBdCgpXaGVuIHRoZSBBUlAgbW9uaXRvciBpcyB1c2VkIGZvciBsaW5rIGRldGVjdGlvbiwg
QVJQIHJlcGxpZXMgYXJlCnZhbGlkYXRlZCBmb3IgYWxsIHNsYXZlcyAoYXJwX3ZhbGlkYXRlPTMp
IGFuZCBmYWlsX292ZXJfbWFjIGlzIHNldCB0bwphY3RpdmUsIHR3byBzbGF2ZXMgb2YgYW4gYWN0
aXZlLWJhY2t1cCBib25kIG1heSBnZXQgc3R1Y2sgaW4gYSBzdGF0ZQp3aGVyZSBib3RoIG9mIHRo
ZW0gYXJlIGFjdGl2ZSBhbmQgcGFzcyBwYWNrZXRzIHRoYXQgdGhleSByZWNlaXZlIHRvCnRoZSBi
b25kLiBUaGlzIHN0YXRlIG1ha2VzIElQdjYgZHVwbGljYXRlIGFkZHJlc3MgZGV0ZWN0aW9uIGZh
aWwuIFRoZQpzdGF0ZSBpcyByZWFjaGVkIHRodXM6CjEuIFRoZSBjdXJyZW50IGFjdGl2ZSBzbGF2
ZSBnb2VzIGRvd24gYmVjYXVzZSB0aGUgQVJQIHRhcmdldAogICBpcyBub3QgcmVhY2hhYmxlLgoy
LiBUaGUgY3VycmVudCBBUlAgc2xhdmUgaXMgY2hvc2VuIGFuZCBtYWRlIGFjdGl2ZS4KMy4gQSBu
ZXcgc2xhdmUgaXMgZW5zbGF2ZWQuIFRoaXMgbmV3IHNsYXZlIGJlY29tZXMgdGhlIGN1cnJlbnQg
YWN0aXZlCiAgIHNsYXZlIGFuZCBjYW4gcmVhY2ggdGhlIEFSUCB0YXJnZXQuCkFzIGEgcmVzdWx0
LCB0aGUgY3VycmVudCBBUlAgc2xhdmUgc3RheXMgYWN0aXZlIGFmdGVyIHRoZSBlbnNsYXZlCmFj
dGlvbiBoYXMgZmluaXNoZWQgYW5kIHRoZSBsb2cgaXMgbGl0dGVyZWQgd2l0aCAiUFJPQkUgQkFE
IiBtZXNzYWdlczoKPiBib25kMDogUFJPQkU6IGNfYXJwIGVuczEwICYmIGNhcyBlbnMxMSBCQUQK
VGhlIHdvcmthcm91bmQgaXMgdG8gcmVtb3ZlIHRoZSBzbGF2ZSB3aXRoICJnb2luZyBiYWNrIiBz
dGF0dXMgZnJvbQp0aGUgYm9uZCBhbmQgcmUtZW5zbGF2ZSBpdC4gVGhpcyBpc3N1ZSB3YXMgZW5j
b3VudGVyZWQgd2hlbiBEUERLIFBNRAppbnRlcmZhY2VzIHdlcmUgYmVpbmcgZW5zbGF2ZWQgdG8g
YW4gYWN0aXZlLWJhY2t1cCBib25kLgoKSSB3b3VsZCBiZSBwb3NzaWJsZSB0byBmaXggdGhlIGlz
c3VlIGluIGJvbmRfZW5zbGF2ZSgpIG9yCmJvbmRfY2hhbmdlX2FjdGl2ZV9zbGF2ZSgpIGJ1dCB0
aGUgQVJQIG1vbml0b3Igd2FzIGZpeGVkIGluc3RlYWQgdG8Ka2VlcCBtb3N0IG9mIHRoZSBhY3Rp
b25zIGNoYW5naW5nIHRoZSBjdXJyZW50IEFSUCBzbGF2ZSBpbiB0aGUgQVJQCm1vbml0b3IgY29k
ZS4gVGhlIGN1cnJlbnQgQVJQIHNsYXZlIGlzIHNldCBhcyBpbmFjdGl2ZSBhbmQgYmFja3VwCmR1
cmluZyB0aGUgY29tbWl0IHBoYXNlLiBBIG5ldyBzdGF0ZSwgQk9ORF9MSU5LX0ZBSUwsIGhhcyBi
ZWVuCmludHJvZHVjZWQgZm9yIHNsYXZlcyBpbiB0aGUgY29udGV4dCBvZiB0aGUgQVJQIG1vbml0
b3IuIFRoaXMgYWxsb3dzCmFkbWluaXN0cmF0b3JzIHRvIHNlZSBob3cgc2xhdmVzIGFyZSByb3Rh
dGVkIGZvciBzZW5kaW5nIEFSUCByZXF1ZXN0cwphbmQgYXR0ZW1wdHMgYXJlIG1hZGUgdG8gZmlu
ZCBhIG5ldyBhY3RpdmUgc2xhdmUuCgpGaXhlczogYjIyMjBjYWQ1ODNjOSAoImJvbmRpbmc6IHJl
ZmFjdG9yIEFSUCBhY3RpdmUtYmFja3VwIG1vbml0b3IiKQpTaWduZWQtb2ZmLWJ5OiBKaXJpIFdp
ZXNuZXIgPGp3aWVzbmVyQHN1c2UuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIg
PGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4u
YyB8IDE4ICsrKysrKysrKysrKysrKystLQogMSBmaWxlIGNoYW5nZWQsIDE2IGluc2VydGlvbnMo
KyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvYm9uZGluZy9ib25k
X21haW4uYyBiL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMKaW5kZXggZjg4Y2IwOTdi
MDIyLi44OTg0OWJhY2MwMWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9t
YWluLmMKKysrIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYwpAQCAtMjgyNCw2ICsy
ODI0LDkgQEAgc3RhdGljIGludCBib25kX2FiX2FycF9pbnNwZWN0KHN0cnVjdCBib25kaW5nICpi
b25kKQogCQkJaWYgKGJvbmRfdGltZV9pbl9pbnRlcnZhbChib25kLCBsYXN0X3J4LCAxKSkgewog
CQkJCWJvbmRfcHJvcG9zZV9saW5rX3N0YXRlKHNsYXZlLCBCT05EX0xJTktfVVApOwogCQkJCWNv
bW1pdCsrOworCQkJfSBlbHNlIGlmIChzbGF2ZS0+bGluayA9PSBCT05EX0xJTktfQkFDSykgewor
CQkJCWJvbmRfcHJvcG9zZV9saW5rX3N0YXRlKHNsYXZlLCBCT05EX0xJTktfRkFJTCk7CisJCQkJ
Y29tbWl0Kys7CiAJCQl9CiAJCQljb250aW51ZTsKIAkJfQpAQCAtMjkzMiw2ICsyOTM1LDE5IEBA
IHN0YXRpYyB2b2lkIGJvbmRfYWJfYXJwX2NvbW1pdChzdHJ1Y3QgYm9uZGluZyAqYm9uZCkKIAog
CQkJY29udGludWU7CiAKKwkJY2FzZSBCT05EX0xJTktfRkFJTDoKKwkJCWJvbmRfc2V0X3NsYXZl
X2xpbmtfc3RhdGUoc2xhdmUsIEJPTkRfTElOS19GQUlMLAorCQkJCQkJICBCT05EX1NMQVZFX05P
VElGWV9OT1cpOworCQkJYm9uZF9zZXRfc2xhdmVfaW5hY3RpdmVfZmxhZ3Moc2xhdmUsCisJCQkJ
CQkgICAgICBCT05EX1NMQVZFX05PVElGWV9OT1cpOworCisJCQkvKiBBIHNsYXZlIGhhcyBqdXN0
IGJlZW4gZW5zbGF2ZWQgYW5kIGhhcyBiZWNvbWUKKwkJCSAqIHRoZSBjdXJyZW50IGFjdGl2ZSBz
bGF2ZS4KKwkJCSAqLworCQkJaWYgKHJ0bmxfZGVyZWZlcmVuY2UoYm9uZC0+Y3Vycl9hY3RpdmVf
c2xhdmUpKQorCQkJCVJDVV9JTklUX1BPSU5URVIoYm9uZC0+Y3VycmVudF9hcnBfc2xhdmUsIE5V
TEwpOworCQkJY29udGludWU7CisKIAkJZGVmYXVsdDoKIAkJCXNsYXZlX2Vycihib25kLT5kZXYs
IHNsYXZlLT5kZXYsCiAJCQkJICAiaW1wb3NzaWJsZTogbGlua19uZXdfc3RhdGUgJWQgb24gc2xh
dmVcbiIsCkBAIC0yOTgyLDggKzI5OTgsNiBAQCBzdGF0aWMgYm9vbCBib25kX2FiX2FycF9wcm9i
ZShzdHJ1Y3QgYm9uZGluZyAqYm9uZCkKIAkJCXJldHVybiBzaG91bGRfbm90aWZ5X3J0bmw7CiAJ
fQogCi0JYm9uZF9zZXRfc2xhdmVfaW5hY3RpdmVfZmxhZ3MoY3Vycl9hcnBfc2xhdmUsIEJPTkRf
U0xBVkVfTk9USUZZX0xBVEVSKTsKLQogCWJvbmRfZm9yX2VhY2hfc2xhdmVfcmN1KGJvbmQsIHNs
YXZlLCBpdGVyKSB7CiAJCWlmICghZm91bmQgJiYgIWJlZm9yZSAmJiBib25kX3NsYXZlX2lzX3Vw
KHNsYXZlKSkKIAkJCWJlZm9yZSA9IHNsYXZlOwotLSAKMi4yNi4yCgoKRnJvbSBlMzhhY2Y1YmE0
N2QwYjVhMzMzNDQ4ZjQzNjAyZmJlM2QwNzk3Y2JmIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpG
cm9tOiBDb25nIFdhbmcgPHhpeW91Lndhbmdjb25nQGdtYWlsLmNvbT4KRGF0ZTogRnJpLCAxNCBB
dWcgMjAyMCAyMDowNTo1OCAtMDcwMApTdWJqZWN0OiBbUEFUQ0ggMDIvMjRdIGJvbmRpbmc6IGZp
eCBhIHBvdGVudGlhbCBkb3VibGUtdW5yZWdpc3RlcgoKWyBVcHN0cmVhbSBjb21taXQgODMyNzA3
MDIxNjY2NDExZDA0Nzk1YzU2NGE0YWRlYTVkNmI5NGYxNyBdCgpXaGVuIHdlIHRlYXIgZG93biBh
IG5ldHdvcmsgbmFtZXNwYWNlLCB3ZSB1bnJlZ2lzdGVyIGFsbAp0aGUgbmV0ZGV2aWNlcyB3aXRo
aW4gaXQuIFNvIHdlIG1heSBxdWV1ZSBhIHNsYXZlIGRldmljZQphbmQgYSBib25kaW5nIGRldmlj
ZSB0b2dldGhlciBpbiB0aGUgc2FtZSB1bnJlZ2lzdGVyIHF1ZXVlLgoKSWYgdGhlIG9ubHkgc2xh
dmUgZGV2aWNlIGlzIG5vbi1ldGhlcm5ldCwgaXQgd291bGQKYXV0b21hdGljYWxseSB1bnJlZ2lz
dGVyIHRoZSBib25kaW5nIGRldmljZSBhcyB3ZWxsLiBUaHVzLAp3ZSBtYXkgZW5kIHVwIHVucmVn
aXN0ZXJpbmcgdGhlIGJvbmRpbmcgZGV2aWNlIHR3aWNlLgoKV29ya2Fyb3VuZCB0aGlzIHNwZWNp
YWwgY2FzZSBieSBjaGVja2luZyByZWdfc3RhdGUuCgpGaXhlczogOWI1ZTM4M2MxMWIwICgibmV0
OiBJbnRyb2R1Y2UgdW5yZWdpc3Rlcl9uZXRkZXZpY2VfbWFueSgpIikKUmVwb3J0ZWQtYnk6IHN5
emJvdCthZjIzZTdmM2UwYTdlMTBjOGI2N0BzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tCkNjOiBF
cmljIER1bWF6ZXQgPGVyaWMuZHVtYXpldEBnbWFpbC5jb20+CkNjOiBBbmR5IEdvc3BvZGFyZWsg
PGFuZHlAZ3JleWhvdXNlLm5ldD4KQ2M6IEpheSBWb3NidXJnaCA8ai52b3NidXJnaEBnbWFpbC5j
b20+ClNpZ25lZC1vZmYtYnk6IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21haWwuY29tPgpT
aWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQog
ZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYyB8IDMgKystCiAxIGZpbGUgY2hhbmdlZCwg
MiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQv
Ym9uZGluZy9ib25kX21haW4uYyBiL2RyaXZlcnMvbmV0L2JvbmRpbmcvYm9uZF9tYWluLmMKaW5k
ZXggODk4NDliYWNjMDFmLi5iNjM0Y2MzNzQwMjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2Jv
bmRpbmcvYm9uZF9tYWluLmMKKysrIGIvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYwpA
QCAtMjA4NCw3ICsyMDg0LDggQEAgc3RhdGljIGludCBib25kX3JlbGVhc2VfYW5kX2Rlc3Ryb3ko
c3RydWN0IG5ldF9kZXZpY2UgKmJvbmRfZGV2LAogCWludCByZXQ7CiAKIAlyZXQgPSBfX2JvbmRf
cmVsZWFzZV9vbmUoYm9uZF9kZXYsIHNsYXZlX2RldiwgZmFsc2UsIHRydWUpOwotCWlmIChyZXQg
PT0gMCAmJiAhYm9uZF9oYXNfc2xhdmVzKGJvbmQpKSB7CisJaWYgKHJldCA9PSAwICYmICFib25k
X2hhc19zbGF2ZXMoYm9uZCkgJiYKKwkgICAgYm9uZF9kZXYtPnJlZ19zdGF0ZSAhPSBORVRSRUdf
VU5SRUdJU1RFUklORykgewogCQlib25kX2Rldi0+cHJpdl9mbGFncyB8PSBJRkZfRElTQUJMRV9O
RVRQT0xMOwogCQluZXRkZXZfaW5mbyhib25kX2RldiwgIkRlc3Ryb3lpbmcgYm9uZFxuIik7CiAJ
CWJvbmRfcmVtb3ZlX3Byb2NfZW50cnkoYm9uZCk7Ci0tIAoyLjI2LjIKCgpGcm9tIDg4OGFiYjdm
Mzc5NWU4NDk3NDRjMTc0YWI1NjAzMjhhMWQ1YzFkYzAgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAx
CkZyb206IEphcm9kIFdpbHNvbiA8amFyb2RAcmVkaGF0LmNvbT4KRGF0ZTogVGh1LCAxMyBBdWcg
MjAyMCAxMDowOTowMCAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMDMvMjRdIGJvbmRpbmc6IHNob3cg
c2FuZXIgc3BlZWQgZm9yIGJyb2FkY2FzdCBtb2RlCgpbIFVwc3RyZWFtIGNvbW1pdCA0Y2EwZDlh
YzNmZDhmOWY5MGI3MmExNWQ4ZGEyYWNhM2ZmYjU4NDE4IF0KCkJyb2FkY2FzdCBtb2RlIGJvbmRz
IHRyYW5zbWl0IGEgY29weSBvZiBhbGwgdHJhZmZpYyBzaW11bHRhbmVvdXNseSBvdXQgb2YKYWxs
IGludGVyZmFjZXMsIHNvIHRoZSAic3BlZWQiIG9mIHRoZSBib25kIGlzbid0IHJlYWxseSB0aGUg
YWdncmVnYXRlIG9mCmFsbCBpbnRlcmZhY2VzLCBidXQgcmF0aGVyLCB0aGUgc3BlZWQgb2YgdGhl
IHNsb3dlc3QgYWN0aXZlIGludGVyZmFjZS4KCkFsc28sIHRoZSB0eXBlIG9mIHRoZSBzcGVlZCBm
aWVsZCBpcyB1MzIsIG5vdCB1bnNpZ25lZCBsb25nLCBzbyBhZGp1c3QKdGhhdCBhY2NvcmRpbmds
eSwgYXMgcmVxdWlyZWQgdG8gbWFrZSBtaW4oKSBmdW5jdGlvbiBoZXJlIHdpdGhvdXQKY29tcGxh
aW5pbmcgYWJvdXQgbWlzbWF0Y2hpbmcgdHlwZXMuCgpGaXhlczogYmI1YjA1MmY3NTFiICgiYm9u
ZDogYWRkIHN1cHBvcnQgdG8gcmVhZCBzcGVlZCBhbmQgZHVwbGV4IHZpYSBldGh0b29sIikKQ0M6
IEpheSBWb3NidXJnaCA8ai52b3NidXJnaEBnbWFpbC5jb20+CkNDOiBWZWFjZXNsYXYgRmFsaWNv
IDx2ZmFsaWNvQGdtYWlsLmNvbT4KQ0M6IEFuZHkgR29zcG9kYXJlayA8YW5keUBncmV5aG91c2Uu
bmV0PgpDQzogIkRhdmlkIFMuIE1pbGxlciIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+CkNDOiBuZXRk
ZXZAdmdlci5rZXJuZWwub3JnCkFja2VkLWJ5OiBKYXkgVm9zYnVyZ2ggPGpheS52b3NidXJnaEBj
YW5vbmljYWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYXJvZCBXaWxzb24gPGphcm9kQHJlZGhhdC5j
b20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4K
LS0tCiBkcml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIHwgMjEgKysrKysrKysrKysrKysr
KysrLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ib25kaW5nL2JvbmRfbWFpbi5jIGIvZHJpdmVycy9u
ZXQvYm9uZGluZy9ib25kX21haW4uYwppbmRleCBiNjM0Y2MzNzQwMjkuLjUwMGFhM2UxOWE0YyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvYm9uZGluZy9ib25kX21haW4uYworKysgYi9kcml2ZXJz
L25ldC9ib25kaW5nL2JvbmRfbWFpbi5jCkBAIC00NDQ2LDEzICs0NDQ2LDIzIEBAIHN0YXRpYyBu
ZXRkZXZfdHhfdCBib25kX3N0YXJ0X3htaXQoc3RydWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IG5l
dF9kZXZpY2UgKmRldikKIAlyZXR1cm4gcmV0OwogfQogCitzdGF0aWMgdTMyIGJvbmRfbW9kZV9i
Y2FzdF9zcGVlZChzdHJ1Y3Qgc2xhdmUgKnNsYXZlLCB1MzIgc3BlZWQpCit7CisJaWYgKHNwZWVk
ID09IDAgfHwgc3BlZWQgPT0gU1BFRURfVU5LTk9XTikKKwkJc3BlZWQgPSBzbGF2ZS0+c3BlZWQ7
CisJZWxzZQorCQlzcGVlZCA9IG1pbihzcGVlZCwgc2xhdmUtPnNwZWVkKTsKKworCXJldHVybiBz
cGVlZDsKK30KKwogc3RhdGljIGludCBib25kX2V0aHRvb2xfZ2V0X2xpbmtfa3NldHRpbmdzKHN0
cnVjdCBuZXRfZGV2aWNlICpib25kX2RldiwKIAkJCQkJICAgc3RydWN0IGV0aHRvb2xfbGlua19r
c2V0dGluZ3MgKmNtZCkKIHsKIAlzdHJ1Y3QgYm9uZGluZyAqYm9uZCA9IG5ldGRldl9wcml2KGJv
bmRfZGV2KTsKLQl1bnNpZ25lZCBsb25nIHNwZWVkID0gMDsKIAlzdHJ1Y3QgbGlzdF9oZWFkICpp
dGVyOwogCXN0cnVjdCBzbGF2ZSAqc2xhdmU7CisJdTMyIHNwZWVkID0gMDsKIAogCWNtZC0+YmFz
ZS5kdXBsZXggPSBEVVBMRVhfVU5LTk9XTjsKIAljbWQtPmJhc2UucG9ydCA9IFBPUlRfT1RIRVI7
CkBAIC00NDY0LDggKzQ0NzQsMTMgQEAgc3RhdGljIGludCBib25kX2V0aHRvb2xfZ2V0X2xpbmtf
a3NldHRpbmdzKHN0cnVjdCBuZXRfZGV2aWNlICpib25kX2RldiwKIAkgKi8KIAlib25kX2Zvcl9l
YWNoX3NsYXZlKGJvbmQsIHNsYXZlLCBpdGVyKSB7CiAJCWlmIChib25kX3NsYXZlX2Nhbl90eChz
bGF2ZSkpIHsKLQkJCWlmIChzbGF2ZS0+c3BlZWQgIT0gU1BFRURfVU5LTk9XTikKLQkJCQlzcGVl
ZCArPSBzbGF2ZS0+c3BlZWQ7CisJCQlpZiAoc2xhdmUtPnNwZWVkICE9IFNQRUVEX1VOS05PV04p
IHsKKwkJCQlpZiAoQk9ORF9NT0RFKGJvbmQpID09IEJPTkRfTU9ERV9CUk9BRENBU1QpCisJCQkJ
CXNwZWVkID0gYm9uZF9tb2RlX2JjYXN0X3NwZWVkKHNsYXZlLAorCQkJCQkJCQkgICAgICBzcGVl
ZCk7CisJCQkJZWxzZQorCQkJCQlzcGVlZCArPSBzbGF2ZS0+c3BlZWQ7CisJCQl9CiAJCQlpZiAo
Y21kLT5iYXNlLmR1cGxleCA9PSBEVVBMRVhfVU5LTk9XTiAmJgogCQkJICAgIHNsYXZlLT5kdXBs
ZXggIT0gRFVQTEVYX1VOS05PV04pCiAJCQkJY21kLT5iYXNlLmR1cGxleCA9IHNsYXZlLT5kdXBs
ZXg7Ci0tIAoyLjI2LjIKCgpGcm9tIDkwYmE0ODdhYjg3Y2VhMzgyOTg5ZTY5MzE4Mzg1YjdlNmFm
Mzc3MTYgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1hcmsgVG9tbGluc29uIDxtYXJr
LnRvbWxpbnNvbkBhbGxpZWR0ZWxlc2lzLmNvLm56PgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDEz
OjUzOjU4ICsxMjAwClN1YmplY3Q6IFtQQVRDSCAwNC8yNF0gZ3JlNjogRml4IHJlY2VwdGlvbiB3
aXRoIElQNl9UTkxfRl9SQ1ZfRFNDUF9DT1BZCgpbIFVwc3RyZWFtIGNvbW1pdCAyNzI1MDJmY2I3
Y2RhMDFhYjA3ZmMyZmNmZjgyZDFkMmY3M2Q0M2NjIF0KCldoZW4gcmVjZWl2aW5nIGFuIElQdjQg
cGFja2V0IGluc2lkZSBhbiBJUHY2IEdSRSBwYWNrZXQsIGFuZCB0aGUKSVA2X1ROTF9GX1JDVl9E
U0NQX0NPUFkgZmxhZyBpcyBzZXQgb24gdGhlIHR1bm5lbCwgdGhlIElQdjQgaGVhZGVyIHdvdWxk
CmdldCBjb3JydXB0ZWQuIFRoaXMgaXMgZHVlIHRvIHRoZSBjb21tb24gaXA2X3RubF9yY3YoKSBm
dW5jdGlvbiBhc3N1bWluZwp0aGF0IHRoZSBpbm5lciBoZWFkZXIgaXMgYWx3YXlzIElQdjYuIFRo
aXMgcGF0Y2ggY2hlY2tzIHRoZSB0dW5uZWwKcHJvdG9jb2wgZm9yIElQdjQgaW5uZXIgcGFja2V0
cywgYnV0IHN0aWxsIGRlZmF1bHRzIHRvIElQdjYuCgpGaXhlczogMzA4ZWRmZGYxNTYzICgiZ3Jl
NjogQ2xlYW51cCBHUkV2NiByZWNlaXZlIHBhdGgsIGNhbGwgY29tbW9uIEdSRSBmdW5jdGlvbnMi
KQpTaWduZWQtb2ZmLWJ5OiBNYXJrIFRvbWxpbnNvbiA8bWFyay50b21saW5zb25AYWxsaWVkdGVs
ZXNpcy5jby5uej4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxv
ZnQubmV0PgotLS0KIG5ldC9pcHY2L2lwNl90dW5uZWwuYyB8IDEwICsrKysrKysrKy0KIDEgZmls
ZSBjaGFuZ2VkLCA5IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9u
ZXQvaXB2Ni9pcDZfdHVubmVsLmMgYi9uZXQvaXB2Ni9pcDZfdHVubmVsLmMKaW5kZXggYTE4YzM3
OGNhNWY0Li5kOGYwMTAyY2VjOTQgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2lwNl90dW5uZWwuYwor
KysgYi9uZXQvaXB2Ni9pcDZfdHVubmVsLmMKQEAgLTkxMyw3ICs5MTMsMTUgQEAgaW50IGlwNl90
bmxfcmN2KHN0cnVjdCBpcDZfdG5sICp0LCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiLAogCQlzdHJ1Y3Qg
bWV0YWRhdGFfZHN0ICp0dW5fZHN0LAogCQlib29sIGxvZ19lY25fZXJyKQogewotCXJldHVybiBf
X2lwNl90bmxfcmN2KHQsIHNrYiwgdHBpLCB0dW5fZHN0LCBpcDZpcDZfZHNjcF9lY25fZGVjYXBz
dWxhdGUsCisJaW50ICgqZHNjcF9lY25fZGVjYXBzdWxhdGUpKGNvbnN0IHN0cnVjdCBpcDZfdG5s
ICp0LAorCQkJCSAgICBjb25zdCBzdHJ1Y3QgaXB2NmhkciAqaXB2NmgsCisJCQkJICAgIHN0cnVj
dCBza19idWZmICpza2IpOworCisJZHNjcF9lY25fZGVjYXBzdWxhdGUgPSBpcDZpcDZfZHNjcF9l
Y25fZGVjYXBzdWxhdGU7CisJaWYgKHRwaS0+cHJvdG8gPT0gaHRvbnMoRVRIX1BfSVApKQorCQlk
c2NwX2Vjbl9kZWNhcHN1bGF0ZSA9IGlwNGlwNl9kc2NwX2Vjbl9kZWNhcHN1bGF0ZTsKKworCXJl
dHVybiBfX2lwNl90bmxfcmN2KHQsIHNrYiwgdHBpLCB0dW5fZHN0LCBkc2NwX2Vjbl9kZWNhcHN1
bGF0ZSwKIAkJCSAgICAgbG9nX2Vjbl9lcnIpOwogfQogRVhQT1JUX1NZTUJPTChpcDZfdG5sX3Jj
dik7Ci0tIAoyLjI2LjIKCgpGcm9tIGU5ZWM3OTAwYWVjMzgzMzkwNzZkZDY0Nzg2NGI2YjJiNWI3
NjA0M2UgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1haGVzaCBCYW5kZXdhciA8bWFo
ZXNoYkBnb29nbGUuY29tPgpEYXRlOiBGcmksIDE0IEF1ZyAyMDIwIDIyOjUzOjI0IC0wNzAwClN1
YmplY3Q6IFtQQVRDSCAwNS8yNF0gaXB2bGFuOiBmaXggZGV2aWNlIGZlYXR1cmVzCgpbIFVwc3Ry
ZWFtIGNvbW1pdCBkMGY1YzcwNzZlMDFmZWY2ZmNiODY5ODhkOTUwOGJmM2NlMjU4YmQ0IF0KClBy
b2Nlc3NpbmcgTkVUREVWX0ZFQVRfQ0hBTkdFIGNhdXNlcyBJUHZsYW4gbGlua3MgdG8gbG9zZQpO
RVRJRl9GX0xMVFggZmVhdHVyZSBiZWNhdXNlIG9mIHRoZSBpbmNvcnJlY3QgaGFuZGxpbmcgb2YK
ZmVhdHVyZXMgaW4gaXB2bGFuX2ZpeF9mZWF0dXJlcygpLgoKLS1iZWZvcmUtLQpscGFhMTA6fiMg
ZXRodG9vbCAtayBpcHZsMCB8IGdyZXAgdHgtbG9ja2xlc3MKdHgtbG9ja2xlc3M6IG9uIFtmaXhl
ZF0KbHBhYTEwOn4jIGV0aHRvb2wgLUsgaXB2bDAgdHNvIG9mZgpDYW5ub3QgY2hhbmdlIHRjcC1z
ZWdtZW50YXRpb24tb2ZmbG9hZApBY3R1YWwgY2hhbmdlczoKdmxhbi1jaGFsbGVuZ2VkOiBvZmYg
W2ZpeGVkXQp0eC1sb2NrbGVzczogb2ZmIFtmaXhlZF0KbHBhYTEwOn4jIGV0aHRvb2wgLWsgaXB2
bDAgfCBncmVwIHR4LWxvY2tsZXNzCnR4LWxvY2tsZXNzOiBvZmYgW2ZpeGVkXQpscGFhMTA6fiMK
Ci0tYWZ0ZXItLQpscGFhMTA6fiMgZXRodG9vbCAtayBpcHZsMCB8IGdyZXAgdHgtbG9ja2xlc3MK
dHgtbG9ja2xlc3M6IG9uIFtmaXhlZF0KbHBhYTEwOn4jIGV0aHRvb2wgLUsgaXB2bDAgdHNvIG9m
ZgpDYW5ub3QgY2hhbmdlIHRjcC1zZWdtZW50YXRpb24tb2ZmbG9hZApDb3VsZCBub3QgY2hhbmdl
IGFueSBkZXZpY2UgZmVhdHVyZXMKbHBhYTEwOn4jIGV0aHRvb2wgLWsgaXB2bDAgfCBncmVwIHR4
LWxvY2tsZXNzCnR4LWxvY2tsZXNzOiBvbiBbZml4ZWRdCmxwYWExMDp+IwoKRml4ZXM6IDJhZDdi
ZjM2Mzg0MSAoImlwdmxhbjogSW5pdGlhbCBjaGVjay1pbiBvZiB0aGUgSVBWTEFOIGRyaXZlci4i
KQpTaWduZWQtb2ZmLWJ5OiBNYWhlc2ggQmFuZGV3YXIgPG1haGVzaGJAZ29vZ2xlLmNvbT4KQ2M6
IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQg
Uy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2lwdmxhbi9p
cHZsYW5fbWFpbi5jIHwgMjcgKysrKysrKysrKysrKysrKysrKysrKy0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgMjIgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL25ldC9pcHZsYW4vaXB2bGFuX21haW4uYyBiL2RyaXZlcnMvbmV0L2lwdmxhbi9pcHZsYW5f
bWFpbi5jCmluZGV4IDE1ZTg3YzA5N2IwYi4uNWJjYTk0Yzk5MDA2IDEwMDY0NAotLS0gYS9kcml2
ZXJzL25ldC9pcHZsYW4vaXB2bGFuX21haW4uYworKysgYi9kcml2ZXJzL25ldC9pcHZsYW4vaXB2
bGFuX21haW4uYwpAQCAtMTA2LDEyICsxMDYsMjEgQEAgc3RhdGljIHZvaWQgaXB2bGFuX3BvcnRf
ZGVzdHJveShzdHJ1Y3QgbmV0X2RldmljZSAqZGV2KQogCWtmcmVlKHBvcnQpOwogfQogCisjZGVm
aW5lIElQVkxBTl9BTFdBWVNfT05fT0ZMT0FEUyBcCisJKE5FVElGX0ZfU0cgfCBORVRJRl9GX0hX
X0NTVU0gfCBcCisJIE5FVElGX0ZfR1NPX1JPQlVTVCB8IE5FVElGX0ZfR1NPX1NPRlRXQVJFIHwg
TkVUSUZfRl9HU09fRU5DQVBfQUxMKQorCisjZGVmaW5lIElQVkxBTl9BTFdBWVNfT04gXAorCShJ
UFZMQU5fQUxXQVlTX09OX09GTE9BRFMgfCBORVRJRl9GX0xMVFggfCBORVRJRl9GX1ZMQU5fQ0hB
TExFTkdFRCkKKwogI2RlZmluZSBJUFZMQU5fRkVBVFVSRVMgXAotCShORVRJRl9GX1NHIHwgTkVU
SUZfRl9DU1VNX01BU0sgfCBORVRJRl9GX0hJR0hETUEgfCBORVRJRl9GX0ZSQUdMSVNUIHwgXAor
CShORVRJRl9GX1NHIHwgTkVUSUZfRl9IV19DU1VNIHwgTkVUSUZfRl9ISUdIRE1BIHwgTkVUSUZf
Rl9GUkFHTElTVCB8IFwKIAkgTkVUSUZfRl9HU08gfCBORVRJRl9GX0FMTF9UU08gfCBORVRJRl9G
X0dTT19ST0JVU1QgfCBcCiAJIE5FVElGX0ZfR1JPIHwgTkVUSUZfRl9SWENTVU0gfCBcCiAJIE5F
VElGX0ZfSFdfVkxBTl9DVEFHX0ZJTFRFUiB8IE5FVElGX0ZfSFdfVkxBTl9TVEFHX0ZJTFRFUikK
IAorCS8qIE5FVElGX0ZfR1NPX0VOQ0FQX0FMTCBORVRJRl9GX0dTT19TT0ZUV0FSRSBOZXdseSBh
ZGRlZCAqLworCiAjZGVmaW5lIElQVkxBTl9TVEFURV9NQVNLIFwKIAkoKDE8PF9fTElOS19TVEFU
RV9OT0NBUlJJRVIpIHwgKDE8PF9fTElOS19TVEFURV9ET1JNQU5UKSkKIApAQCAtMTI1LDcgKzEz
NCw5IEBAIHN0YXRpYyBpbnQgaXB2bGFuX2luaXQoc3RydWN0IG5ldF9kZXZpY2UgKmRldikKIAlk
ZXYtPnN0YXRlID0gKGRldi0+c3RhdGUgJiB+SVBWTEFOX1NUQVRFX01BU0spIHwKIAkJICAgICAo
cGh5X2Rldi0+c3RhdGUgJiBJUFZMQU5fU1RBVEVfTUFTSyk7CiAJZGV2LT5mZWF0dXJlcyA9IHBo
eV9kZXYtPmZlYXR1cmVzICYgSVBWTEFOX0ZFQVRVUkVTOwotCWRldi0+ZmVhdHVyZXMgfD0gTkVU
SUZfRl9MTFRYIHwgTkVUSUZfRl9WTEFOX0NIQUxMRU5HRUQ7CisJZGV2LT5mZWF0dXJlcyB8PSBJ
UFZMQU5fQUxXQVlTX09OOworCWRldi0+dmxhbl9mZWF0dXJlcyA9IHBoeV9kZXYtPnZsYW5fZmVh
dHVyZXMgJiBJUFZMQU5fRkVBVFVSRVM7CisJZGV2LT52bGFuX2ZlYXR1cmVzIHw9IElQVkxBTl9B
TFdBWVNfT05fT0ZMT0FEUzsKIAlkZXYtPmh3X2VuY19mZWF0dXJlcyB8PSBkZXYtPmZlYXR1cmVz
OwogCWRldi0+Z3NvX21heF9zaXplID0gcGh5X2Rldi0+Z3NvX21heF9zaXplOwogCWRldi0+Z3Nv
X21heF9zZWdzID0gcGh5X2Rldi0+Z3NvX21heF9zZWdzOwpAQCAtMjI3LDcgKzIzOCwxNCBAQCBz
dGF0aWMgbmV0ZGV2X2ZlYXR1cmVzX3QgaXB2bGFuX2ZpeF9mZWF0dXJlcyhzdHJ1Y3QgbmV0X2Rl
dmljZSAqZGV2LAogewogCXN0cnVjdCBpcHZsX2RldiAqaXB2bGFuID0gbmV0ZGV2X3ByaXYoZGV2
KTsKIAotCXJldHVybiBmZWF0dXJlcyAmIChpcHZsYW4tPnNmZWF0dXJlcyB8IH5JUFZMQU5fRkVB
VFVSRVMpOworCWZlYXR1cmVzIHw9IE5FVElGX0ZfQUxMX0ZPUl9BTEw7CisJZmVhdHVyZXMgJj0g
KGlwdmxhbi0+c2ZlYXR1cmVzIHwgfklQVkxBTl9GRUFUVVJFUyk7CisJZmVhdHVyZXMgPSBuZXRk
ZXZfaW5jcmVtZW50X2ZlYXR1cmVzKGlwdmxhbi0+cGh5X2Rldi0+ZmVhdHVyZXMsCisJCQkJCSAg
ICAgZmVhdHVyZXMsIGZlYXR1cmVzKTsKKwlmZWF0dXJlcyB8PSBJUFZMQU5fQUxXQVlTX09OOwor
CWZlYXR1cmVzICY9IChJUFZMQU5fRkVBVFVSRVMgfCBJUFZMQU5fQUxXQVlTX09OKTsKKworCXJl
dHVybiBmZWF0dXJlczsKIH0KIAogc3RhdGljIHZvaWQgaXB2bGFuX2NoYW5nZV9yeF9mbGFncyhz
dHJ1Y3QgbmV0X2RldmljZSAqZGV2LCBpbnQgY2hhbmdlKQpAQCAtNzM0LDEwICs3NTIsOSBAQCBz
dGF0aWMgaW50IGlwdmxhbl9kZXZpY2VfZXZlbnQoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICp1bnVz
ZWQsCiAKIAljYXNlIE5FVERFVl9GRUFUX0NIQU5HRToKIAkJbGlzdF9mb3JfZWFjaF9lbnRyeShp
cHZsYW4sICZwb3J0LT5pcHZsYW5zLCBwbm9kZSkgewotCQkJaXB2bGFuLT5kZXYtPmZlYXR1cmVz
ID0gZGV2LT5mZWF0dXJlcyAmIElQVkxBTl9GRUFUVVJFUzsKIAkJCWlwdmxhbi0+ZGV2LT5nc29f
bWF4X3NpemUgPSBkZXYtPmdzb19tYXhfc2l6ZTsKIAkJCWlwdmxhbi0+ZGV2LT5nc29fbWF4X3Nl
Z3MgPSBkZXYtPmdzb19tYXhfc2VnczsKLQkJCW5ldGRldl9mZWF0dXJlc19jaGFuZ2UoaXB2bGFu
LT5kZXYpOworCQkJbmV0ZGV2X3VwZGF0ZV9mZWF0dXJlcyhpcHZsYW4tPmRldik7CiAJCX0KIAkJ
YnJlYWs7CiAKLS0gCjIuMjYuMgoKCkZyb20gNDc2NDE3ODJkYmIxZWY0NWQyMmE1MDkyMmQ5MTA3
MjBiZTFjNDhiMyBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogVG9tIFJpeCA8dHJpeEBy
ZWRoYXQuY29tPgpEYXRlOiBGcmksIDIxIEF1ZyAyMDIwIDA2OjU2OjAwIC0wNzAwClN1YmplY3Q6
IFtQQVRDSCAwNi8yNF0gbmV0OiBkc2E6IGI1MzogY2hlY2sgZm9yIHRpbWVvdXQKClsgVXBzdHJl
YW0gY29tbWl0IDc3NGQ5NzdhYmZkMDI0ZTZmNzM0ODQ1NDRiOWFiZTVhNWNkNjJkZTcgXQoKY2xh
bmcgc3RhdGljIGFuYWx5c2lzIHJlcG9ydHMgdGhpcyBwcm9ibGVtCgpiNTNfY29tbW9uLmM6MTU4
MzoxMzogd2FybmluZzogVGhlIGxlZnQgZXhwcmVzc2lvbiBvZiB0aGUgY29tcG91bmQKICBhc3Np
Z25tZW50IGlzIGFuIHVuaW5pdGlhbGl6ZWQgdmFsdWUuIFRoZSBjb21wdXRlZCB2YWx1ZSB3aWxs
CiAgYWxzbyBiZSBnYXJiYWdlCiAgICAgICAgZW50LnBvcnQgJj0gfkJJVChwb3J0KTsKICAgICAg
ICB+fn5+fn5+fiBeCgplbnQgaXMgc2V0IGJ5IGEgc3VjY2Vzc2Z1bCBjYWxsIHRvIGI1M19hcmxf
cmVhZCgpLiAgVW5zdWNjZXNzZnVsCmNhbGxzIGFyZSBjYXVnaHQgYnkgYW4gc3dpdGNoIHN0YXRl
bWVudCBoYW5kbGluZyBzcGVjaWZpYyByZXR1cm5zLgpiMzJfYXJsX3JlYWQoKSBjYWxscyBiNTNf
YXJsX29wX3dhaXQoKSB3aGljaCBmYWlscyB3aXRoIHRoZQp1bmhhbmRsZWQgLUVUSU1FRE9VVC4K
ClNvIGFkZCAtRVRJTUVET1VUIHRvIHRoZSBzd2l0Y2ggc3RhdGVtZW50LiAgQmVjYXVzZQpiNTNf
YXJsX29wX3dhaXQoKSBhbHJlYWR5IHByaW50cyBvdXQgYSBtZXNzYWdlLCBkbyBub3QgYWRkIGFu
b3RoZXIKb25lLgoKRml4ZXM6IDFkYTZkZjg1YzZmYiAoIm5ldDogZHNhOiBiNTM6IEltcGxlbWVu
dCBBUkwgYWRkL2RlbC9kdW1wIG9wZXJhdGlvbnMiKQpTaWduZWQtb2ZmLWJ5OiBUb20gUml4IDx0
cml4QHJlZGhhdC5jb20+CkFja2VkLWJ5OiBGbG9yaWFuIEZhaW5lbGxpIDxmLmZhaW5lbGxpQGdt
YWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQu
bmV0PgotLS0KIGRyaXZlcnMvbmV0L2RzYS9iNTMvYjUzX2NvbW1vbi5jIHwgMiArKwogMSBmaWxl
IGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2RzYS9i
NTMvYjUzX2NvbW1vbi5jIGIvZHJpdmVycy9uZXQvZHNhL2I1My9iNTNfY29tbW9uLmMKaW5kZXgg
MWRmMDU4NDFhYjZiLi44Njg2OTMzNzIyM2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2RzYS9i
NTMvYjUzX2NvbW1vbi5jCisrKyBiL2RyaXZlcnMvbmV0L2RzYS9iNTMvYjUzX2NvbW1vbi5jCkBA
IC0xNTU1LDYgKzE1NTUsOCBAQCBzdGF0aWMgaW50IGI1M19hcmxfb3Aoc3RydWN0IGI1M19kZXZp
Y2UgKmRldiwgaW50IG9wLCBpbnQgcG9ydCwKIAkJcmV0dXJuIHJldDsKIAogCXN3aXRjaCAocmV0
KSB7CisJY2FzZSAtRVRJTUVET1VUOgorCQlyZXR1cm4gcmV0OwogCWNhc2UgLUVOT1NQQzoKIAkJ
ZGV2X2RiZyhkZXYtPmRldiwgInslcE0sJS40ZH0gbm8gc3BhY2UgbGVmdCBpbiBBUkxcbiIsCiAJ
CQlhZGRyLCB2aWQpOwotLSAKMi4yNi4yCgoKRnJvbSAyNWQ3MjNjMDdlMjE5N2IzN2I1Y2E0YTI1
NTBiMGVhOTIxMGYyYmEzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBGdWdhbmcgRHVh
biA8ZnVnYW5nLmR1YW5AbnhwLmNvbT4KRGF0ZTogVGh1LCAxMyBBdWcgMjAyMCAxNToxMzoxNCAr
MDgwMApTdWJqZWN0OiBbUEFUQ0ggMDcvMjRdIG5ldDogZmVjOiBjb3JyZWN0IHRoZSBlcnJvciBw
YXRoIGZvciByZWd1bGF0b3IgZGlzYWJsZQogaW4gcHJvYmUKClsgVXBzdHJlYW0gY29tbWl0IGM2
MTY1Y2YwZGJiODJkZWQ5MDE2M2RjZTNhYzE4M2ZjN2E5MTNkYzQgXQoKQ29ycmVjdCB0aGUgZXJy
b3IgcGF0aCBmb3IgcmVndWxhdG9yIGRpc2FibGUuCgpGaXhlczogOTI2OWU1NTYwYjI2ICgibmV0
OiBmZWM6IGFkZCBwaHktcmVzZXQtZ3Bpb3MgUFJPQkVfREVGRVIgY2hlY2siKQpTaWduZWQtb2Zm
LWJ5OiBGdWdhbmcgRHVhbiA8ZnVnYW5nLmR1YW5AbnhwLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2
aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2V0aGVy
bmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNl
cnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvZnJlZXNjYWxl
L2ZlY19tYWluLmMKaW5kZXggY2M3ZmJmYzA5MzU0Li41MzRmY2M3MWEyYTUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbmV0L2V0aGVybmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jCisrKyBiL2RyaXZlcnMv
bmV0L2V0aGVybmV0L2ZyZWVzY2FsZS9mZWNfbWFpbi5jCkBAIC0zNzE0LDExICszNzE0LDExIEBA
IGZlY19wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogZmFpbGVkX2lycToKIGZh
aWxlZF9pbml0OgogCWZlY19wdHBfc3RvcChwZGV2KTsKLQlpZiAoZmVwLT5yZWdfcGh5KQotCQly
ZWd1bGF0b3JfZGlzYWJsZShmZXAtPnJlZ19waHkpOwogZmFpbGVkX3Jlc2V0OgogCXBtX3J1bnRp
bWVfcHV0X25vaWRsZSgmcGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX2Rpc2FibGUoJnBkZXYtPmRl
dik7CisJaWYgKGZlcC0+cmVnX3BoeSkKKwkJcmVndWxhdG9yX2Rpc2FibGUoZmVwLT5yZWdfcGh5
KTsKIGZhaWxlZF9yZWd1bGF0b3I6CiAJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGZlcC0+Y2xrX2Fo
Yik7CiBmYWlsZWRfY2xrX2FoYjoKLS0gCjIuMjYuMgoKCkZyb20gM2E5NGIxNTNjMmQzNTk5NWI5
MzI0NTYyY2YwZDVhYWQ2MGY2ZmMwYyBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWlh
b2hlIExpbiA8bGlubWlhb2hlQGh1YXdlaS5jb20+CkRhdGU6IFNhdCwgMTUgQXVnIDIwMjAgMDQ6
NDQ6MzEgLTA0MDAKU3ViamVjdDogW1BBVENIIDA4LzI0XSBuZXQ6IEZpeCBwb3RlbnRpYWwgd3Jv
bmcgc2tiLT5wcm90b2NvbCBpbgogc2tiX3ZsYW5fdW50YWcoKQoKWyBVcHN0cmVhbSBjb21taXQg
NTVlZmYwZWI3NDYwYzNkNTA3MTZlZDllY2NmMjIyNTdiMDQ2Y2E5MiBdCgpXZSBtYXkgYWNjZXNz
IHRoZSB0d28gYnl0ZXMgYWZ0ZXIgdmxhbl9oZHIgaW4gdmxhbl9zZXRfZW5jYXBfcHJvdG8oKS4g
U28Kd2Ugc2hvdWxkIHB1bGwgVkxBTl9ITEVOICsgc2l6ZW9mKHVuc2lnbmVkIHNob3J0KSBpbiBz
a2Jfdmxhbl91bnRhZygpIG9yCndlIG1heSBhY2Nlc3MgdGhlIHdyb25nIGRhdGEuCgpGaXhlczog
MGQ1NTAxYzFjODI4ICgibmV0OiBBbHdheXMgdW50YWcgdmxhbi10YWdnZWQgdHJhZmZpYyBvbiBp
bnB1dC4iKQpTaWduZWQtb2ZmLWJ5OiBNaWFvaGUgTGluIDxsaW5taWFvaGVAaHVhd2VpLmNvbT4K
U2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0K
IG5ldC9jb3JlL3NrYnVmZi5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNlcnRpb25z
KCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NrYnVmZi5jIGIvbmV0
L2NvcmUvc2tidWZmLmMKaW5kZXggYjhhZmVmZTZmNmI2Li43YWZlNTJiZDAzOGIgMTAwNjQ0Ci0t
LSBhL25ldC9jb3JlL3NrYnVmZi5jCisrKyBiL25ldC9jb3JlL3NrYnVmZi5jCkBAIC01NDE5LDgg
KzU0MTksOCBAQCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiX3ZsYW5fdW50YWcoc3RydWN0IHNrX2J1ZmYg
KnNrYikKIAlza2IgPSBza2Jfc2hhcmVfY2hlY2soc2tiLCBHRlBfQVRPTUlDKTsKIAlpZiAodW5s
aWtlbHkoIXNrYikpCiAJCWdvdG8gZXJyX2ZyZWU7Ci0KLQlpZiAodW5saWtlbHkoIXBza2JfbWF5
X3B1bGwoc2tiLCBWTEFOX0hMRU4pKSkKKwkvKiBXZSBtYXkgYWNjZXNzIHRoZSB0d28gYnl0ZXMg
YWZ0ZXIgdmxhbl9oZHIgaW4gdmxhbl9zZXRfZW5jYXBfcHJvdG8oKS4gKi8KKwlpZiAodW5saWtl
bHkoIXBza2JfbWF5X3B1bGwoc2tiLCBWTEFOX0hMRU4gKyBzaXplb2YodW5zaWduZWQgc2hvcnQp
KSkpCiAJCWdvdG8gZXJyX2ZyZWU7CiAKIAl2aGRyID0gKHN0cnVjdCB2bGFuX2hkciAqKXNrYi0+
ZGF0YTsKLS0gCjIuMjYuMgoKCkZyb20gMTZjNmY2YTdjMzMwYmVhYjIzZjUyOGFlOWFlODUzMWZi
ZTdmNjlhMCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTmlrb2xheSBBbGVrc2FuZHJv
diA8bmlrb2xheUBjdW11bHVzbmV0d29ya3MuY29tPgpEYXRlOiBTYXQsIDIyIEF1ZyAyMDIwIDE1
OjA2OjM2ICswMzAwClN1YmplY3Q6IFtQQVRDSCAwOS8yNF0gbmV0OiBuZXh0aG9wOiBkb24ndCBh
bGxvdyBlbXB0eSBOSEFfR1JPVVAKClsgVXBzdHJlYW0gY29tbWl0IGVlYWFjMzYzNGVlMGUzZjM1
NTQ4YmUzNTI3NWVmZWNhODg4ZTliMjMgXQoKQ3VycmVudGx5IHRoZSBuZXh0aG9wIGNvZGUgd2ls
bCB1c2UgYW4gZW1wdHkgTkhBX0dST1VQIGF0dHJpYnV0ZSwgYnV0IGl0CnJlcXVpcmVzIGF0IGxl
YXN0IDEgZW50cnkgaW4gb3JkZXIgdG8gZnVuY3Rpb24gcHJvcGVybHkuIE90aGVyd2lzZSB3ZQpl
bmQgdXAgZGVyZWZlbmNpbmcgbnVsbCBvciByYW5kb20gcG9pbnRlcnMgYWxsIG92ZXIgdGhlIHBs
YWNlIGR1ZSB0byBub3QKaGF2aW5nIGFueSBuaF9ncnBfZW50cnkgbWVtYmVycyBhbGxvY2F0ZWQs
IG5leHRob3AgY29kZSByZWxpZXMgb24gaGF2aW5nIGF0CmxlYXN0IHRoZSBmaXJzdCBtZW1iZXIg
cHJlc2VudC4gRW1wdHkgTkhBX0dST1VQIGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2Ugc28KanVzdCBk
aXNhbGxvdyBpdC4KQWxzbyBhZGQgYSBXQVJOX09OIGZvciBhbnkgZnV0dXJlIHVzZXJzIG9mIG5l
eHRob3BfY3JlYXRlX2dyb3VwKCkuCgogQlVHOiBrZXJuZWwgTlVMTCBwb2ludGVyIGRlcmVmZXJl
bmNlLCBhZGRyZXNzOiAwMDAwMDAwMDAwMDAwMDgwCiAjUEY6IHN1cGVydmlzb3IgcmVhZCBhY2Nl
c3MgaW4ga2VybmVsIG1vZGUKICNQRjogZXJyb3JfY29kZSgweDAwMDApIC0gbm90LXByZXNlbnQg
cGFnZQogUEdEIDAgUDREIDAKIE9vcHM6IDAwMDAgWyMxXSBTTVAKIENQVTogMCBQSUQ6IDU1OCBD
b21tOiBpcCBOb3QgdGFpbnRlZCA1LjkuMC1yYzErICM5MwogSGFyZHdhcmUgbmFtZTogUUVNVSBT
dGFuZGFyZCBQQyAoaTQ0MEZYICsgUElJWCwgMTk5NiksIEJJT1MgMS4xMy4wLTIuZmMzMiAwNC8w
MS8yMDE0CiBSSVA6IDAwMTA6ZmliX2NoZWNrX25leHRob3ArMHg0YS8weGFhCiBDb2RlOiAwZiA4
NCA4MyAwMCAwMCAwMCA0OCBjNyAwMiA4MCAwMyBmNyA4MSBjMyA0MCA4MCBmZSBmZSA3NSAxMiBi
OCBlYSBmZiBmZiBmZiA0OCA4NSBkMiA3NCA2YiA0OCBjNyAwMiA0MCAwMyBmNyA4MSBjMyA0OCA4
YiA0MCAxMCA8NDg+IDhiIDgwIDgwIDAwIDAwIDAwIGViIDM2IDgwIDc4IDFhIDAwIDc0IDEyIGI4
IGVhIGZmIGZmIGZmIDQ4IDg1CiBSU1A6IDAwMTg6ZmZmZjg4ODA3OTgzYmEwMCBFRkxBR1M6IDAw
MDEwMjEzCiBSQVg6IDAwMDAwMDAwMDAwMDAwMDAgUkJYOiBmZmZmODg4MDc5ODNiYzAwIFJDWDog
MDAwMDAwMDAwMDAwMDAwMAogUkRYOiBmZmZmODg4MDc5ODNiYzAwIFJTSTogMDAwMDAwMDAwMDAw
MDAwMCBSREk6IGZmZmY4ODgwN2JkZDBhODAKIFJCUDogZmZmZjg4ODA3OTgzYmFmOCBSMDg6IDAw
MDAwMDAwMDAwMDBkYzAgUjA5OiAwMDAwMDAwMDAwMDAwNDBhCiBSMTA6IDAwMDAwMDAwMDAwMDAw
MDAgUjExOiBmZmZmODg4MDdiZGQwYWU4IFIxMjogMDAwMDAwMDAwMDAwMDAwMAogUjEzOiAwMDAw
MDAwMDAwMDAwMDAwIFIxNDogZmZmZjg4ODA3YmVhMzEwMCBSMTU6IDAwMDAwMDAwMDAwMDAwMDEK
IEZTOiAgMDAwMDdmMTBkYjM5MzcwMCgwMDAwKSBHUzpmZmZmODg4MDdkYzAwMDAwKDAwMDApIGtu
bEdTOjAwMDAwMDAwMDAwMDAwMDAKIENTOiAgMDAxMCBEUzogMDAwMCBFUzogMDAwMCBDUjA6IDAw
MDAwMDAwODAwNTAwMzMKIENSMjogMDAwMDAwMDAwMDAwMDA4MCBDUjM6IDAwMDAwMDAwN2JkMGYw
MDQgQ1I0OiAwMDAwMDAwMDAwMzcwNmYwCiBDYWxsIFRyYWNlOgogIGZpYl9jcmVhdGVfaW5mbysw
eDY0ZC8weGFmNwogIGZpYl90YWJsZV9pbnNlcnQrMHhmNi8weDU4MQogID8gX192bWFfYWRqdXN0
KzB4M2I2LzB4NGQ0CiAgaW5ldF9ydG1fbmV3cm91dGUrMHg1Ni8weDcwCiAgcnRuZXRsaW5rX3Jj
dl9tc2crMHgxZTMvMHgyMGQKICA/IHJ0bmxfY2FsY2l0LmlzcmEuMCsweGI4LzB4YjgKICBuZXRs
aW5rX3Jjdl9za2IrMHg1Yi8weGFjCiAgbmV0bGlua191bmljYXN0KzB4ZmEvMHgxN2IKICBuZXRs
aW5rX3NlbmRtc2crMHgzMzQvMHgzNTMKICBzb2NrX3NlbmRtc2dfbm9zZWMrMHhmLzB4M2YKICBf
X19fc3lzX3NlbmRtc2crMHgxYTAvMHgxZmMKICA/IGNvcHlfbXNnaGRyX2Zyb21fdXNlcisweDRj
LzB4NjEKICBfX19zeXNfc2VuZG1zZysweDYzLzB4ODQKICA/IGhhbmRsZV9tbV9mYXVsdCsweGEz
OS8weDExYjUKICA/IHNvY2tmZF9sb29rdXBfbGlnaHQrMHg3Mi8weDlhCiAgX19zeXNfc2VuZG1z
ZysweDUwLzB4NmUKICBkb19zeXNjYWxsXzY0KzB4NTQvMHhiZQogIGVudHJ5X1NZU0NBTExfNjRf
YWZ0ZXJfaHdmcmFtZSsweDQ0LzB4YTkKIFJJUDogMDAzMzoweDdmMTBkYWNjMGJiNwogQ29kZTog
ZDggNjQgODkgMDIgNDggYzcgYzAgZmYgZmYgZmYgZmYgZWIgY2QgNjYgMGYgMWYgNDQgMDAgMDAg
OGIgMDUgOWEgNGIgMmIgMDAgODUgYzAgNzUgMmUgNDggNjMgZmYgNDggNjMgZDIgYjggMmUgMDAg
MDAgMDAgMGYgMDUgPDQ4PiAzZCAwMCBmMCBmZiBmZiA3NyAwMSBjMyA0OCA4YiAxNSBiMSBmMiAy
YSAwMCBmNyBkOCA2NCA4OSAwMiA0OAogUlNQOiAwMDJiOjAwMDA3ZmZjYmU2MjhiZjggRUZMQUdT
OiAwMDAwMDI0NiBPUklHX1JBWDogMDAwMDAwMDAwMDAwMDAyZQogUkFYOiBmZmZmZmZmZmZmZmZm
ZmRhIFJCWDogMDAwMDdmZmNiZTYyOGY4MCBSQ1g6IDAwMDA3ZjEwZGFjYzBiYjcKIFJEWDogMDAw
MDAwMDAwMDAwMDAwMCBSU0k6IDAwMDA3ZmZjYmU2MjhjNjAgUkRJOiAwMDAwMDAwMDAwMDAwMDAz
CiBSQlA6IDAwMDAwMDAwNWY0MTA5OWMgUjA4OiAwMDAwMDAwMDAwMDAwMDAxIFIwOTogMDAwMDAw
MDAwMDAwMDAwOAogUjEwOiAwMDAwMDAwMDAwMDAwNWU5IFIxMTogMDAwMDAwMDAwMDAwMDI0NiBS
MTI6IDAwMDAwMDAwMDAwMDAwMDAKIFIxMzogMDAwMDAwMDAwMDAwMDAwMCBSMTQ6IDAwMDA3ZmZj
YmU2MjhkNzAgUjE1OiAwMDAwNTYzYTg2YzZlNDQwCiBNb2R1bGVzIGxpbmtlZCBpbjoKIENSMjog
MDAwMDAwMDAwMDAwMDA4MAoKQ0M6IERhdmlkIEFoZXJuIDxkc2FoZXJuQGdtYWlsLmNvbT4KRml4
ZXM6IDQzMGEwNDkxOTBkZSAoIm5leHRob3A6IEFkZCBzdXBwb3J0IGZvciBuZXh0aG9wIGdyb3Vw
cyIpClJlcG9ydGVkLWJ5OiBzeXpib3QrYTYxYWExOWIwYzE0Yzg3NzBiZDlAc3l6a2FsbGVyLmFw
cHNwb3RtYWlsLmNvbQpTaWduZWQtb2ZmLWJ5OiBOaWtvbGF5IEFsZWtzYW5kcm92IDxuaWtvbGF5
QGN1bXVsdXNuZXR3b3Jrcy5jb20+ClJldmlld2VkLWJ5OiBEYXZpZCBBaGVybiA8ZHNhaGVybkBn
bWFpbC5jb20+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0
Lm5ldD4KLS0tCiBuZXQvaXB2NC9uZXh0aG9wLmMgfCA1ICsrKystCiAxIGZpbGUgY2hhbmdlZCwg
NCBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvbmV4
dGhvcC5jIGIvbmV0L2lwdjQvbmV4dGhvcC5jCmluZGV4IGNjODA0OWIxMDBiMi4uMTM0ZTkyMzgy
Mjc1IDEwMDY0NAotLS0gYS9uZXQvaXB2NC9uZXh0aG9wLmMKKysrIGIvbmV0L2lwdjQvbmV4dGhv
cC5jCkBAIC00NDYsNyArNDQ2LDcgQEAgc3RhdGljIGludCBuaF9jaGVja19hdHRyX2dyb3VwKHN0
cnVjdCBuZXQgKm5ldCwgc3RydWN0IG5sYXR0ciAqdGJbXSwKIAl1bnNpZ25lZCBpbnQgaSwgajsK
IAl1OCBuaGdfZmRiID0gMDsKIAotCWlmIChsZW4gJiAoc2l6ZW9mKHN0cnVjdCBuZXh0aG9wX2dy
cCkgLSAxKSkgeworCWlmICghbGVuIHx8IGxlbiAmIChzaXplb2Yoc3RydWN0IG5leHRob3BfZ3Jw
KSAtIDEpKSB7CiAJCU5MX1NFVF9FUlJfTVNHKGV4dGFjaywKIAkJCSAgICAgICAiSW52YWxpZCBs
ZW5ndGggZm9yIG5leHRob3AgZ3JvdXAgYXR0cmlidXRlIik7CiAJCXJldHVybiAtRUlOVkFMOwpA
QCAtMTE4Nyw2ICsxMTg3LDkgQEAgc3RhdGljIHN0cnVjdCBuZXh0aG9wICpuZXh0aG9wX2NyZWF0
ZV9ncm91cChzdHJ1Y3QgbmV0ICpuZXQsCiAJc3RydWN0IG5leHRob3AgKm5oOwogCWludCBpOwog
CisJaWYgKFdBUk5fT04oIW51bV9uaCkpCisJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworCiAJ
bmggPSBuZXh0aG9wX2FsbG9jKCk7CiAJaWYgKCFuaCkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01F
TSk7Ci0tIAoyLjI2LjIKCgpGcm9tIDE5MjQ3NDlhZTNlNGZmNWE2N2RiNmMyNDdlNDU5YjFjNzQ1
ZjA0M2MgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE5lY2lwIEZhemlsIFlpbGRpcmFu
IDxuZWNpcEBnb29nbGUuY29tPgpEYXRlOiBNb24sIDE3IEF1ZyAyMDIwIDE1OjU0OjQ4ICswMDAw
ClN1YmplY3Q6IFtQQVRDSCAxMC8yNF0gbmV0OiBxcnRyOiBmaXggdXNhZ2Ugb2YgaWRyIGluIHBv
cnQgYXNzaWdubWVudCB0bwogc29ja2V0CgpbIFVwc3RyZWFtIGNvbW1pdCA4ZGZkZGZiNzk2NTNk
ZjdjMzhhOWM4YzRjMDM0ZjI0MmEzNmFjZWU5IF0KClBhc3NpbmcgbGFyZ2UgdWludDMyIHNvY2th
ZGRyX3FydHIucG9ydCBudW1iZXJzIGZvciBwb3J0IGFsbG9jYXRpb24KdHJpZ2dlcnMgYSB3YXJu
aW5nIHdpdGhpbiBpZHJfYWxsb2MoKSBzaW5jZSB0aGUgcG9ydCBudW1iZXIgaXMgY2FzdAp0byBp
bnQsIGFuZCB0aHVzIGludGVycHJldGVkIGFzIGEgbmVnYXRpdmUgbnVtYmVyLiBUaGlzIGxlYWRz
IHRvCnRoZSByZWplY3Rpb24gb2Ygc3VjaCB2YWxpZCBwb3J0IG51bWJlcnMgaW4gcXJ0cl9wb3J0
X2Fzc2lnbigpIGFzCmlkcl9hbGxvYygpIGZhaWxzLgoKVG8gYXZvaWQgdGhlIHByb2JsZW0sIHN3
aXRjaCB0byBpZHJfYWxsb2NfdTMyKCkgaW5zdGVhZC4KCkZpeGVzOiBiZGFiYWQzZTM2M2QgKCJu
ZXQ6IEFkZCBRdWFsY29tbSBJUEMgcm91dGVyIikKUmVwb3J0ZWQtYnk6IHN5emJvdCtmMzE0Mjg2
MjhlZjY3MjcxNmVhOEBzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tClNpZ25lZC1vZmYtYnk6IE5l
Y2lwIEZhemlsIFlpbGRpcmFuIDxuZWNpcEBnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogRG1pdHJ5
IFZ5dWtvdiA8ZHZ5dWtvdkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3FydHIvcXJ0ci5jIHwgMjAgKysrKysr
KysrKystLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAxMSBpbnNlcnRpb25zKCspLCA5IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9xcnRyL3FydHIuYyBiL25ldC9xcnRyL3FydHIuYwpp
bmRleCAzMDBhMTA0YjlhMGYuLjg1YWI0NTU5ZjA1NyAxMDA2NDQKLS0tIGEvbmV0L3FydHIvcXJ0
ci5jCisrKyBiL25ldC9xcnRyL3FydHIuYwpAQCAtNjkyLDIzICs2OTIsMjUgQEAgc3RhdGljIHZv
aWQgcXJ0cl9wb3J0X3JlbW92ZShzdHJ1Y3QgcXJ0cl9zb2NrICppcGMpCiAgKi8KIHN0YXRpYyBp
bnQgcXJ0cl9wb3J0X2Fzc2lnbihzdHJ1Y3QgcXJ0cl9zb2NrICppcGMsIGludCAqcG9ydCkKIHsK
Kwl1MzIgbWluX3BvcnQ7CiAJaW50IHJjOwogCiAJbXV0ZXhfbG9jaygmcXJ0cl9wb3J0X2xvY2sp
OwogCWlmICghKnBvcnQpIHsKLQkJcmMgPSBpZHJfYWxsb2MoJnFydHJfcG9ydHMsIGlwYywKLQkJ
CSAgICAgICBRUlRSX01JTl9FUEhfU09DS0VULCBRUlRSX01BWF9FUEhfU09DS0VUICsgMSwKLQkJ
CSAgICAgICBHRlBfQVRPTUlDKTsKLQkJaWYgKHJjID49IDApCi0JCQkqcG9ydCA9IHJjOworCQlt
aW5fcG9ydCA9IFFSVFJfTUlOX0VQSF9TT0NLRVQ7CisJCXJjID0gaWRyX2FsbG9jX3UzMigmcXJ0
cl9wb3J0cywgaXBjLCAmbWluX3BvcnQsIFFSVFJfTUFYX0VQSF9TT0NLRVQsIEdGUF9BVE9NSUMp
OworCQlpZiAoIXJjKQorCQkJKnBvcnQgPSBtaW5fcG9ydDsKIAl9IGVsc2UgaWYgKCpwb3J0IDwg
UVJUUl9NSU5fRVBIX1NPQ0tFVCAmJiAhY2FwYWJsZShDQVBfTkVUX0FETUlOKSkgewogCQlyYyA9
IC1FQUNDRVM7CiAJfSBlbHNlIGlmICgqcG9ydCA9PSBRUlRSX1BPUlRfQ1RSTCkgewotCQlyYyA9
IGlkcl9hbGxvYygmcXJ0cl9wb3J0cywgaXBjLCAwLCAxLCBHRlBfQVRPTUlDKTsKKwkJbWluX3Bv
cnQgPSAwOworCQlyYyA9IGlkcl9hbGxvY191MzIoJnFydHJfcG9ydHMsIGlwYywgJm1pbl9wb3J0
LCAwLCBHRlBfQVRPTUlDKTsKIAl9IGVsc2UgewotCQlyYyA9IGlkcl9hbGxvYygmcXJ0cl9wb3J0
cywgaXBjLCAqcG9ydCwgKnBvcnQgKyAxLCBHRlBfQVRPTUlDKTsKLQkJaWYgKHJjID49IDApCi0J
CQkqcG9ydCA9IHJjOworCQltaW5fcG9ydCA9ICpwb3J0OworCQlyYyA9IGlkcl9hbGxvY191MzIo
JnFydHJfcG9ydHMsIGlwYywgJm1pbl9wb3J0LCAqcG9ydCwgR0ZQX0FUT01JQyk7CisJCWlmICgh
cmMpCisJCQkqcG9ydCA9IG1pbl9wb3J0OwogCX0KIAltdXRleF91bmxvY2soJnFydHJfcG9ydF9s
b2NrKTsKIAotLSAKMi4yNi4yCgoKRnJvbSA2MmMzY2ZlZjg5MDhmNjZkNGY1MmNjNjU3NGRhZmQ3
NjhlMjhlMTI5IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBBbGFhIEhsZWloZWwgPGFs
YWFAbWVsbGFub3guY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDE4OjI0OjEwICswMzAwClN1
YmplY3Q6IFtQQVRDSCAxMS8yNF0gbmV0L3NjaGVkOiBhY3RfY3Q6IEZpeCBza2IgZG91YmxlLWZy
ZWUgaW4KIHRjZl9jdF9oYW5kbGVfZnJhZ21lbnRzKCkgZXJyb3IgZmxvdwoKWyBVcHN0cmVhbSBj
b21taXQgZWRhODE0Yjk3ZGZiOGQ5ZjQ4MDhlYjJmNjVhZjliZDM3MDVjNGNhZSBdCgp0Y2ZfY3Rf
aGFuZGxlX2ZyYWdtZW50cygpIHNob3VsZG4ndCBmcmVlIHRoZSBza2Igd2hlbiBpcF9kZWZyYWco
KSBjYWxsCmZhaWxzLiBPdGhlcndpc2UsIHdlIHdpbGwgY2F1c2UgYSBkb3VibGUtZnJlZSBidWcu
CkluIHN1Y2ggY2FzZXMsIGp1c3QgcmV0dXJuIHRoZSBlcnJvciB0byB0aGUgY2FsbGVyLgoKRml4
ZXM6IGI1N2RjN2MxM2VhOSAoIm5ldC9zY2hlZDogSW50cm9kdWNlIGFjdGlvbiBjdCIpClNpZ25l
ZC1vZmYtYnk6IEFsYWEgSGxlaWhlbCA8YWxhYUBtZWxsYW5veC5jb20+ClJldmlld2VkLWJ5OiBS
b2kgRGF5YW4gPHJvaWRAbWVsbGFub3guY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxs
ZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L3NjaGVkL2FjdF9jdC5jIHwgMiArLQog
MSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0
IGEvbmV0L3NjaGVkL2FjdF9jdC5jIGIvbmV0L3NjaGVkL2FjdF9jdC5jCmluZGV4IDZlZDE2NTJk
MWUyNi4uNDFkODQ0MGRlYWYxIDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvYWN0X2N0LmMKKysrIGIv
bmV0L3NjaGVkL2FjdF9jdC5jCkBAIC03MDQsNyArNzA0LDcgQEAgc3RhdGljIGludCB0Y2ZfY3Rf
aGFuZGxlX2ZyYWdtZW50cyhzdHJ1Y3QgbmV0ICpuZXQsIHN0cnVjdCBza19idWZmICpza2IsCiAJ
CWVyciA9IGlwX2RlZnJhZyhuZXQsIHNrYiwgdXNlcik7CiAJCWxvY2FsX2JoX2VuYWJsZSgpOwog
CQlpZiAoZXJyICYmIGVyciAhPSAtRUlOUFJPR1JFU1MpCi0JCQlnb3RvIG91dF9mcmVlOworCQkJ
cmV0dXJuIGVycjsKIAogCQlpZiAoIWVycikKIAkJCSpkZWZyYWcgPSB0cnVlOwotLSAKMi4yNi4y
CgoKRnJvbSA1OWIxNzhkZjlmMDhhNDczOWYwYjljNjYzYjgwNGY2N2UzNDgxZjUwIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBEYXZpZCBMYWlnaHQgPERhdmlkLkxhaWdodEBBQ1VMQUIu
Q09NPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDE0OjQwOjUyICswMDAwClN1YmplY3Q6IFtQQVRD
SCAxMi8yNF0gbmV0OiBzY3RwOiBGaXggbmVnb3RpYXRpb24gb2YgdGhlIG51bWJlciBvZiBkYXRh
CiBzdHJlYW1zLgoKWyBVcHN0cmVhbSBjb21taXQgYWI5MjFmM2NkYmVjMDFjNjg3MDVhN2FkZThi
ZWM2MjhkNTQxZmMyYiBdCgpUaGUgbnVtYmVyIG9mIG91dHB1dCBhbmQgaW5wdXQgc3RyZWFtcyB3
YXMgbmV2ZXIgYmVpbmcgcmVkdWNlZCwgZWcgd2hlbgpwcm9jZXNzaW5nIHJlY2VpdmVkIElOSVQg
b3IgSU5JVF9BQ0sgY2h1bmtzLgpUaGUgZWZmZWN0IGlzIHRoYXQgREFUQSBjaHVua3MgY2FuIGJl
IHNlbnQgd2l0aCBpbnZhbGlkIHN0cmVhbSBpZHMKYW5kIHRoZW4gZGlzY2FyZGVkIGJ5IHRoZSBy
ZW1vdGUgc3lzdGVtLgoKRml4ZXM6IDIwNzVlNTBjYWY1ZWEgKCJzY3RwOiBjb252ZXJ0IHRvIGdl
bnJhZGl4IikKU2lnbmVkLW9mZi1ieTogRGF2aWQgTGFpZ2h0IDxkYXZpZC5sYWlnaHRAYWN1bGFi
LmNvbT4KQWNrZWQtYnk6IE1hcmNlbG8gUmljYXJkbyBMZWl0bmVyIDxtYXJjZWxvLmxlaXRuZXJA
Z21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9m
dC5uZXQ+Ci0tLQogbmV0L3NjdHAvc3RyZWFtLmMgfCA2ICsrKystLQogMSBmaWxlIGNoYW5nZWQs
IDQgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvc2N0cC9z
dHJlYW0uYyBiL25ldC9zY3RwL3N0cmVhbS5jCmluZGV4IGJkYTI1MzZkZDc0MC4uNmRjOTVkY2Mw
ZmY0IDEwMDY0NAotLS0gYS9uZXQvc2N0cC9zdHJlYW0uYworKysgYi9uZXQvc2N0cC9zdHJlYW0u
YwpAQCAtODgsMTIgKzg4LDEzIEBAIHN0YXRpYyBpbnQgc2N0cF9zdHJlYW1fYWxsb2Nfb3V0KHN0
cnVjdCBzY3RwX3N0cmVhbSAqc3RyZWFtLCBfX3UxNiBvdXRjbnQsCiAJaW50IHJldDsKIAogCWlm
IChvdXRjbnQgPD0gc3RyZWFtLT5vdXRjbnQpCi0JCXJldHVybiAwOworCQlnb3RvIG91dDsKIAog
CXJldCA9IGdlbnJhZGl4X3ByZWFsbG9jKCZzdHJlYW0tPm91dCwgb3V0Y250LCBnZnApOwogCWlm
IChyZXQpCiAJCXJldHVybiByZXQ7CiAKK291dDoKIAlzdHJlYW0tPm91dGNudCA9IG91dGNudDsK
IAlyZXR1cm4gMDsKIH0KQEAgLTEwNCwxMiArMTA1LDEzIEBAIHN0YXRpYyBpbnQgc2N0cF9zdHJl
YW1fYWxsb2NfaW4oc3RydWN0IHNjdHBfc3RyZWFtICpzdHJlYW0sIF9fdTE2IGluY250LAogCWlu
dCByZXQ7CiAKIAlpZiAoaW5jbnQgPD0gc3RyZWFtLT5pbmNudCkKLQkJcmV0dXJuIDA7CisJCWdv
dG8gb3V0OwogCiAJcmV0ID0gZ2VucmFkaXhfcHJlYWxsb2MoJnN0cmVhbS0+aW4sIGluY250LCBn
ZnApOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKK291dDoKIAlzdHJlYW0tPmluY250ID0g
aW5jbnQ7CiAJcmV0dXJuIDA7CiB9Ci0tIAoyLjI2LjIKCgpGcm9tIGY1MzAwOGVmZTE1ZDgwODAz
MmMxMzdiNTAyMmYyNDg5NTk3MjEzMjYgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFBl
aWxpbiBZZSA8eWVwZWlsaW4uY3NAZ21haWwuY29tPgpEYXRlOiBUaHUsIDIwIEF1ZyAyMDIwIDE2
OjMwOjUyICswMjAwClN1YmplY3Q6IFtQQVRDSCAxMy8yNF0gbmV0L3NtYzogUHJldmVudCBrZXJu
ZWwtaW5mb2xlYWsgaW4gX19zbWNfZGlhZ19kdW1wKCkKClsgVXBzdHJlYW0gY29tbWl0IGNlNTFm
NjNlNjNjNTJhNGUxZWVlNGRkMDQwZmIwYmEwYWYzYjQzYWIgXQoKX19zbWNfZGlhZ19kdW1wKCkg
aXMgcG90ZW50aWFsbHkgY29weWluZyB1bmluaXRpYWxpemVkIGtlcm5lbCBzdGFjayBtZW1vcnkK
aW50byBzb2NrZXQgYnVmZmVycywgc2luY2UgdGhlIGNvbXBpbGVyIG1heSBsZWF2ZSBhIDQtYnl0
ZSBob2xlIG5lYXIgdGhlCmJlZ2lubmluZyBvZiBgc3RydWN0IHNtY2RfZGlhZ19kbWJpbmZvYC4g
Rml4IGl0IGJ5IGluaXRpYWxpemluZyBgZGluZm9gCndpdGggbWVtc2V0KCkuCgpGaXhlczogNGIx
YjdkM2IzMGE2ICgibmV0L3NtYzogYWRkIFNNQy1EIGRpYWcgc3VwcG9ydCIpClN1Z2dlc3RlZC1i
eTogRGFuIENhcnBlbnRlciA8ZGFuLmNhcnBlbnRlckBvcmFjbGUuY29tPgpTaWduZWQtb2ZmLWJ5
OiBQZWlsaW4gWWUgPHllcGVpbGluLmNzQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogVXJzdWxh
IEJyYXVuIDx1YnJhdW5AbGludXguaWJtLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWls
bGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9zbWMvc21jX2RpYWcuYyB8IDE2ICsr
KysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA5IGluc2VydGlvbnMoKyksIDcgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3NtYy9zbWNfZGlhZy5jIGIvbmV0L3NtYy9zbWNfZGlh
Zy5jCmluZGV4IGUxZjY0ZjRiYTIzNi4uZGE5YmE2ZDE2NzliIDEwMDY0NAotLS0gYS9uZXQvc21j
L3NtY19kaWFnLmMKKysrIGIvbmV0L3NtYy9zbWNfZGlhZy5jCkBAIC0xNzAsMTMgKzE3MCwxNSBA
QCBzdGF0aWMgaW50IF9fc21jX2RpYWdfZHVtcChzdHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBza19i
dWZmICpza2IsCiAJICAgIChyZXEtPmRpYWdfZXh0ICYgKDEgPDwgKFNNQ19ESUFHX0RNQklORk8g
LSAxKSkpICYmCiAJICAgICFsaXN0X2VtcHR5KCZzbWMtPmNvbm4ubGdyLT5saXN0KSkgewogCQlz
dHJ1Y3Qgc21jX2Nvbm5lY3Rpb24gKmNvbm4gPSAmc21jLT5jb25uOwotCQlzdHJ1Y3Qgc21jZF9k
aWFnX2RtYmluZm8gZGluZm8gPSB7Ci0JCQkubGlua2lkID0gKigodTMyICopY29ubi0+bGdyLT5p
ZCksCi0JCQkucGVlcl9naWQgPSBjb25uLT5sZ3ItPnBlZXJfZ2lkLAotCQkJLm15X2dpZCA9IGNv
bm4tPmxnci0+c21jZC0+bG9jYWxfZ2lkLAotCQkJLnRva2VuID0gY29ubi0+cm1iX2Rlc2MtPnRv
a2VuLAotCQkJLnBlZXJfdG9rZW4gPSBjb25uLT5wZWVyX3Rva2VuCi0JCX07CisJCXN0cnVjdCBz
bWNkX2RpYWdfZG1iaW5mbyBkaW5mbzsKKworCQltZW1zZXQoJmRpbmZvLCAwLCBzaXplb2YoZGlu
Zm8pKTsKKworCQlkaW5mby5saW5raWQgPSAqKCh1MzIgKiljb25uLT5sZ3ItPmlkKTsKKwkJZGlu
Zm8ucGVlcl9naWQgPSBjb25uLT5sZ3ItPnBlZXJfZ2lkOworCQlkaW5mby5teV9naWQgPSBjb25u
LT5sZ3ItPnNtY2QtPmxvY2FsX2dpZDsKKwkJZGluZm8udG9rZW4gPSBjb25uLT5ybWJfZGVzYy0+
dG9rZW47CisJCWRpbmZvLnBlZXJfdG9rZW4gPSBjb25uLT5wZWVyX3Rva2VuOwogCiAJCWlmIChu
bGFfcHV0KHNrYiwgU01DX0RJQUdfRE1CSU5GTywgc2l6ZW9mKGRpbmZvKSwgJmRpbmZvKSA8IDAp
CiAJCQlnb3RvIGVycm91dDsKLS0gCjIuMjYuMgoKCkZyb20gYjhiYjY2NjgxOTkwZjdlZTdlNGY3
ZTQ1M2NiNzk0MmM3MWVlN2JmYiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogIkphc29u
IEEuIERvbmVuZmVsZCIgPEphc29uQHp4MmM0LmNvbT4KRGF0ZTogU2F0LCAxNSBBdWcgMjAyMCAw
OToyOTozMCArMDIwMApTdWJqZWN0OiBbUEFUQ0ggMTQvMjRdIG5ldDogeGRwOiBwdWxsIGV0aGVy
bmV0IGhlYWRlciBvZmYgcGFja2V0IGFmdGVyCiBjb21wdXRpbmcgc2tiLT5wcm90b2NvbAoKWyBV
cHN0cmVhbSBjb21taXQgZjg0MTRhOGQ4ODZiNjEzYjkwZDlmZGY3Y2RhNmZlZWEzMTNiMTA2OSBd
CgpXaGVuIGFuIFhEUCBwcm9ncmFtIGNoYW5nZXMgdGhlIGV0aGVybmV0IGhlYWRlciBwcm90b2Nv
bCBmaWVsZCwKZXRoX3R5cGVfdHJhbnMgaXMgdXNlZCB0byByZWNhbGN1bGF0ZSBza2ItPnByb3Rv
Y29sLiBJbiBvcmRlciBmb3IKZXRoX3R5cGVfdHJhbnMgdG8gd29yayBjb3JyZWN0bHksIHRoZSBl
dGhlcm5ldCBoZWFkZXIgbXVzdCBhY3R1YWxseSBiZQpwYXJ0IG9mIHRoZSBza2IgZGF0YSBzZWdt
ZW50LCBzbyB0aGUgY29kZSBmaXJzdCBwdXNoZXMgdGhhdCBvbnRvIHRoZQpoZWFkIG9mIHRoZSBz
a2IuIEhvd2V2ZXIsIGl0IHN1YnNlcXVlbnRseSBmb3JnZXRzIHRvIHB1bGwgaXQgYmFjayBvZmYs
Cm1ha2luZyB0aGUgYmVoYXZpb3Igb2YgdGhlIHBhc3NlZC1vbiBwYWNrZXQgaW5jb25zaXN0ZW50
IGJldHdlZW4gdGhlCnByb3RvY29sIG1vZGlmeWluZyBjYXNlIGFuZCB0aGUgc3RhdGljIHByb3Rv
Y29sIGNhc2UuIFRoaXMgcGF0Y2ggZml4ZXMKdGhlIGlzc3VlIGJ5IHNpbXBseSBwdWxsaW5nIHRo
ZSBldGhlcm5ldCBoZWFkZXIgYmFjayBvZmYgb2YgdGhlIHNrYgpoZWFkLgoKRml4ZXM6IDI5NzI0
OTU2OTkzMiAoIm5ldDogZml4IGdlbmVyaWMgWERQIHRvIGhhbmRsZSBpZiBldGggaGVhZGVyIHdh
cyBtYW5nbGVkIikKQ2M6IEplc3BlciBEYW5nYWFyZCBCcm91ZXIgPGJyb3VlckByZWRoYXQuY29t
PgpDYzogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgpTaWduZWQtb2ZmLWJ5
OiBKYXNvbiBBLiBEb25lbmZlbGQgPEphc29uQHp4MmM0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2
aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9jb3JlL2Rldi5jIHwg
MSArCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKykKCmRpZmYgLS1naXQgYS9uZXQvY29y
ZS9kZXYuYyBiL25ldC9jb3JlL2Rldi5jCmluZGV4IDdhNzc0ZWJmNjRlMi4uODRmNTA3ZDlkNTll
IDEwMDY0NAotLS0gYS9uZXQvY29yZS9kZXYuYworKysgYi9uZXQvY29yZS9kZXYuYwpAQCAtNDY3
MSw2ICs0NjcxLDcgQEAgc3RhdGljIHUzMiBuZXRpZl9yZWNlaXZlX2dlbmVyaWNfeGRwKHN0cnVj
dCBza19idWZmICpza2IsCiAJICAgIChvcmlnX2JjYXN0ICE9IGlzX211bHRpY2FzdF9ldGhlcl9h
ZGRyXzY0Yml0cyhldGgtPmhfZGVzdCkpKSB7CiAJCV9fc2tiX3B1c2goc2tiLCBFVEhfSExFTik7
CiAJCXNrYi0+cHJvdG9jb2wgPSBldGhfdHlwZV90cmFucyhza2IsIHNrYi0+ZGV2KTsKKwkJX19z
a2JfcHVsbChza2IsIEVUSF9ITEVOKTsKIAl9CiAKIAlzd2l0Y2ggKGFjdCkgewotLSAKMi4yNi4y
CgoKRnJvbSA5NzE3YzYyZDRhYWZhMWJjYWFjNmUxNGEzNTFlZTZkYTBiZjdjYzI3IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkRh
dGU6IFRodSwgMjAgQXVnIDIwMjAgMTU6MzQ6NDcgKzA4MDAKU3ViamVjdDogW1BBVENIIDE1LzI0
XSB0aXBjOiBjYWxsIHJjdV9yZWFkX2xvY2soKSBpbiB0aXBjX2FlYWRfZW5jcnlwdF9kb25lKCkK
ClsgVXBzdHJlYW0gY29tbWl0IGY2ZGI5MDk2NDE2MjA5NDc0MDkwZDY0ZDgyODRlN2MxNmMzZDg4
NzMgXQoKYi0+bWVkaWEtPnNlbmRfbXNnKCkgcmVxdWlyZXMgcmN1X3JlYWRfbG9jaygpLCBhcyB3
ZSBjYW4gc2VlCmVsc2V3aGVyZSBpbiB0aXBjLCAgdGlwY19iZWFyZXJfeG1pdCwgdGlwY19iZWFy
ZXJfeG1pdF9za2IKYW5kIHRpcGNfYmVhcmVyX2JjX3htaXQoKS4KClN5emJvdCBoYXMgcmVwb3J0
ZWQgdGhpcyBpc3N1ZSBhczoKCiAgbmV0L3RpcGMvYmVhcmVyLmM6NDY2IHN1c3BpY2lvdXMgcmN1
X2RlcmVmZXJlbmNlX2NoZWNrKCkgdXNhZ2UhCiAgV29ya3F1ZXVlOiBjcnlwdGQgY3J5cHRkX3F1
ZXVlX3dvcmtlcgogIENhbGwgVHJhY2U6CiAgIHRpcGNfbDJfc2VuZF9tc2crMHgzNTQvMHg0MjAg
bmV0L3RpcGMvYmVhcmVyLmM6NDY2CiAgIHRpcGNfYWVhZF9lbmNyeXB0X2RvbmUrMHgyMDQvMHgz
YTAgbmV0L3RpcGMvY3J5cHRvLmM6NzYxCiAgIGNyeXB0ZF9hZWFkX2NyeXB0KzB4ZTgvMHgxZDAg
Y3J5cHRvL2NyeXB0ZC5jOjczOQogICBjcnlwdGRfcXVldWVfd29ya2VyKzB4MTE4LzB4MWIwIGNy
eXB0by9jcnlwdGQuYzoxODEKICAgcHJvY2Vzc19vbmVfd29yaysweDk0Yy8weDE2NzAga2VybmVs
L3dvcmtxdWV1ZS5jOjIyNjkKICAgd29ya2VyX3RocmVhZCsweDY0Yy8weDExMjAga2VybmVsL3dv
cmtxdWV1ZS5jOjI0MTUKICAga3RocmVhZCsweDNiNS8weDRhMCBrZXJuZWwva3RocmVhZC5jOjI5
MQogICByZXRfZnJvbV9mb3JrKzB4MWYvMHgzMCBhcmNoL3g4Ni9lbnRyeS9lbnRyeV82NC5TOjI5
MwoKU28gZml4IGl0IGJ5IGNhbGxpbmcgcmN1X3JlYWRfbG9jaygpIGluIHRpcGNfYWVhZF9lbmNy
eXB0X2RvbmUoKQpmb3IgYi0+bWVkaWEtPnNlbmRfbXNnKCkuCgpGaXhlczogZmMxYjZkNmRlMjIw
ICgidGlwYzogaW50cm9kdWNlIFRJUEMgZW5jcnlwdGlvbiAmIGF1dGhlbnRpY2F0aW9uIikKUmVw
b3J0ZWQtYnk6IHN5emJvdCs0N2JiYzZiNjc4ZDMxN2NjY2JlMEBzeXprYWxsZXIuYXBwc3BvdG1h
aWwuY29tClNpZ25lZC1vZmYtYnk6IFhpbiBMb25nIDxsdWNpZW4ueGluQGdtYWlsLmNvbT4KU2ln
bmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5l
dC90aXBjL2NyeXB0by5jIHwgMiArKwogMSBmaWxlIGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygrKQoK
ZGlmZiAtLWdpdCBhL25ldC90aXBjL2NyeXB0by5jIGIvbmV0L3RpcGMvY3J5cHRvLmMKaW5kZXgg
YzhjNDdmYzcyNjUzLi5kNjQyNmI2Y2M5YzUgMTAwNjQ0Ci0tLSBhL25ldC90aXBjL2NyeXB0by5j
CisrKyBiL25ldC90aXBjL2NyeXB0by5jCkBAIC03NTcsMTAgKzc1NywxMiBAQCBzdGF0aWMgdm9p
ZCB0aXBjX2FlYWRfZW5jcnlwdF9kb25lKHN0cnVjdCBjcnlwdG9fYXN5bmNfcmVxdWVzdCAqYmFz
ZSwgaW50IGVycikKIAlzd2l0Y2ggKGVycikgewogCWNhc2UgMDoKIAkJdGhpc19jcHVfaW5jKHR4
LT5zdGF0cy0+c3RhdFtTVEFUX0FTWU5DX09LXSk7CisJCXJjdV9yZWFkX2xvY2soKTsKIAkJaWYg
KGxpa2VseSh0ZXN0X2JpdCgwLCAmYi0+dXApKSkKIAkJCWItPm1lZGlhLT5zZW5kX21zZyhuZXQs
IHNrYiwgYiwgJnR4X2N0eC0+ZHN0KTsKIAkJZWxzZQogCQkJa2ZyZWVfc2tiKHNrYik7CisJCXJj
dV9yZWFkX3VubG9jaygpOwogCQlicmVhazsKIAljYXNlIC1FSU5QUk9HUkVTUzoKIAkJcmV0dXJu
OwotLSAKMi4yNi4yCgoKRnJvbSBmOTFkZjBhY2FjMWY4OWU5OWM3MDE3YTNmMjQyODNiNzRiMDlm
NGEzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBDb25nIFdhbmcgPHhpeW91Lndhbmdj
b25nQGdtYWlsLmNvbT4KRGF0ZTogU2F0LCAxNSBBdWcgMjAyMCAxNjoyOToxNSAtMDcwMApTdWJq
ZWN0OiBbUEFUQ0ggMTYvMjRdIHRpcGM6IGZpeCB1bmluaXQgc2tiLT5kYXRhIGluIHRpcGNfbmxf
Y29tcGF0X2R1bXBpdCgpCgpbIFVwc3RyZWFtIGNvbW1pdCA0NzczM2Y5ZGFmNGZlNGY3ZTBlYjll
MjczZjIxYWQzYTE5MTMwNDg3IF0KCl9fdGlwY19ubF9jb21wYXRfZHVtcGl0KCkgaGFzIHR3byBj
YWxsZXJzLCBhbmQgaXQgZXhwZWN0cyB0aGVtIHRvCnBhc3MgYSB2YWxpZCBubG1zZ2hkciB2aWEg
YXJnLT5kYXRhLiBUaGlzIGhlYWRlciBpcyBhcnRpZmljaWFsIGFuZApjcmFmdGVkIGp1c3QgZm9y
IF9fdGlwY19ubF9jb21wYXRfZHVtcGl0KCkuCgp0aXBjX25sX2NvbXBhdF9wdWJsX2R1bXAoKSBk
b2VzIHNvIGJ5IHB1dHRpbmcgYSBnZW5sbXNnaGRyIGFzIHdlbGwKYXMgc29tZSBuZXN0ZWQgYXR0
cmlidXRlLCBUSVBDX05MQV9TT0NLLiBCdXQgdGhlIG90aGVyIGNhbGxlcgp0aXBjX25sX2NvbXBh
dF9kdW1waXQoKSBkb2VzIG5vdCwgdGhpcyBsZWF2ZXMgYXJnLT5kYXRhIHVuaW5pdGlhbGl6ZWQK
b24gdGhpcyBjYWxsIHBhdGguCgpGaXggdGhpcyBieSBqdXN0IGFkZGluZyBhIHNpbWlsYXIgbmxt
c2doZHIgd2l0aG91dCBhbnkgcGF5bG9hZCBpbgp0aXBjX25sX2NvbXBhdF9kdW1waXQoKS4KClRo
aXMgYnVnIGV4aXN0cyBzaW5jZSBkYXkgMSwgYnV0IHRoZSByZWNlbnQgY29tbWl0IDZlYTY3NzY5
ZmYzMwooIm5ldDogdGlwYzogcHJlcGFyZSBhdHRycyBpbiBfX3RpcGNfbmxfY29tcGF0X2R1bXBp
dCgpIikgbWFrZXMgaXQKZWFzaWVyIHRvIGFwcGVhci4KClJlcG9ydGVkLWFuZC10ZXN0ZWQtYnk6
IHN5emJvdCswZTcxODFkZWFmYTdlMGI3OTkyM0BzeXprYWxsZXIuYXBwc3BvdG1haWwuY29tCkZp
eGVzOiBkMDc5NmQxZWY2M2QgKCJ0aXBjOiBjb252ZXJ0IGxlZ2FjeSBubCBiZWFyZXIgZHVtcCB0
byBubCBjb21wYXQiKQpDYzogSm9uIE1hbG95IDxqbWFsb3lAcmVkaGF0LmNvbT4KQ2M6IFlpbmcg
WHVlIDx5aW5nLnh1ZUB3aW5kcml2ZXIuY29tPgpDYzogUmljaGFyZCBBbHBlIDxyaWNoYXJkLmFs
cGVAZXJpY3Nzb24uY29tPgpTaWduZWQtb2ZmLWJ5OiBDb25nIFdhbmcgPHhpeW91Lndhbmdjb25n
QGdtYWlsLmNvbT4KQWNrZWQtYnk6IFlpbmcgWHVlIDx5aW5nLnh1ZUB3aW5kcml2ZXIuY29tPgpT
aWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQog
bmV0L3RpcGMvbmV0bGlua19jb21wYXQuYyB8IDEyICsrKysrKysrKysrLQogMSBmaWxlIGNoYW5n
ZWQsIDExIGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQgYS9uZXQvdGlw
Yy9uZXRsaW5rX2NvbXBhdC5jIGIvbmV0L3RpcGMvbmV0bGlua19jb21wYXQuYwppbmRleCAyMTc1
MTYzNTdlZjIuLjkwZTNjNzBhOTFhZCAxMDA2NDQKLS0tIGEvbmV0L3RpcGMvbmV0bGlua19jb21w
YXQuYworKysgYi9uZXQvdGlwYy9uZXRsaW5rX2NvbXBhdC5jCkBAIC0yNzUsOCArMjc1LDkgQEAg
c3RhdGljIGludCBfX3RpcGNfbmxfY29tcGF0X2R1bXBpdChzdHJ1Y3QgdGlwY19ubF9jb21wYXRf
Y21kX2R1bXAgKmNtZCwKIHN0YXRpYyBpbnQgdGlwY19ubF9jb21wYXRfZHVtcGl0KHN0cnVjdCB0
aXBjX25sX2NvbXBhdF9jbWRfZHVtcCAqY21kLAogCQkJCSBzdHJ1Y3QgdGlwY19ubF9jb21wYXRf
bXNnICptc2cpCiB7Ci0JaW50IGVycjsKKwlzdHJ1Y3Qgbmxtc2doZHIgKm5saDsKIAlzdHJ1Y3Qg
c2tfYnVmZiAqYXJnOworCWludCBlcnI7CiAKIAlpZiAobXNnLT5yZXFfdHlwZSAmJiAoIW1zZy0+
cmVxX3NpemUgfHwKIAkJCSAgICAgICFUTFZfQ0hFQ0tfVFlQRShtc2ctPnJlcSwgbXNnLT5yZXFf
dHlwZSkpKQpAQCAtMzA1LDYgKzMwNiwxNSBAQCBzdGF0aWMgaW50IHRpcGNfbmxfY29tcGF0X2R1
bXBpdChzdHJ1Y3QgdGlwY19ubF9jb21wYXRfY21kX2R1bXAgKmNtZCwKIAkJcmV0dXJuIC1FTk9N
RU07CiAJfQogCisJbmxoID0gbmxtc2dfcHV0KGFyZywgMCwgMCwgdGlwY19nZW5sX2ZhbWlseS5p
ZCwgMCwgTkxNX0ZfTVVMVEkpOworCWlmICghbmxoKSB7CisJCWtmcmVlX3NrYihhcmcpOworCQlr
ZnJlZV9za2IobXNnLT5yZXApOworCQltc2ctPnJlcCA9IE5VTEw7CisJCXJldHVybiAtRU1TR1NJ
WkU7CisJfQorCW5sbXNnX2VuZChhcmcsIG5saCk7CisKIAllcnIgPSBfX3RpcGNfbmxfY29tcGF0
X2R1bXBpdChjbWQsIG1zZywgYXJnKTsKIAlpZiAoZXJyKSB7CiAJCWtmcmVlX3NrYihtc2ctPnJl
cCk7Ci0tIAoyLjI2LjIKCgpGcm9tIGY3MDNiNmZkNmMzNmRjYTkxYTNhOThiYzYzMDU1ZWMxYWNh
NjlkN2YgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFNoYXkgQWdyb3NraW4gPHNoYXlh
Z3JAYW1hem9uLmNvbT4KRGF0ZTogV2VkLCAxOSBBdWcgMjAyMCAyMDoyODozNiArMDMwMApTdWJq
ZWN0OiBbUEFUQ0ggMTgvMjRdIG5ldDogZW5hOiBQcmV2ZW50IHJlc2V0IGFmdGVyIGRldmljZSBk
ZXN0cnVjdGlvbgoKWyBVcHN0cmVhbSBjb21taXQgNjNkNGE0YzE0NWNjYTJlODRkYzZlNjJkMmVm
NWNiOTkwYzk3MjNjMiBdCgpUaGUgcmVzZXQgd29yayBpcyBzY2hlZHVsZWQgYnkgdGhlIHRpbWVy
IHJvdXRpbmUgd2hlbmV2ZXIgaXQKZGV0ZWN0cyB0aGF0IGEgZGV2aWNlIHJlc2V0IGlzIHJlcXVp
cmVkIChlLmcuIHdoZW4gYSBrZWVwX2FsaXZlIHNpZ25hbAppcyBtaXNzaW5nKS4KV2hlbiByZWxl
YXNpbmcgZGV2aWNlIHJlc291cmNlcyBpbiBlbmFfZGVzdHJveV9kZXZpY2UoKSB0aGUgZHJpdmVy
CmNhbmNlbHMgdGhlIHNjaGVkdWxpbmcgb2YgdGhlIHRpbWVyIHJvdXRpbmUgd2l0aG91dCBkZXN0
cm95aW5nIHRoZSByZXNldAp3b3JrIGV4cGxpY2l0bHkuCgpUaGlzIGNyZWF0ZXMgdGhlIGZvbGxv
d2luZyBidWc6CiAgICBUaGUgZHJpdmVyIGlzIHN1c3BlbmRlZCBhbmQgdGhlIGVuYV9zdXNwZW5k
KCkgZnVuY3Rpb24gaXMgY2FsbGVkCgktPiBUaGlzIGZ1bmN0aW9uIGNhbGxzIGVuYV9kZXN0cm95
X2RldmljZSgpIHRvIGZyZWUgdGhlIG5ldCBkZXZpY2UKCSAgIHJlc291cmNlcwoJICAgIC0+IFRo
ZSBkcml2ZXIgd2FpdHMgZm9yIHRoZSB0aW1lciByb3V0aW5lIHRvIGZpbmlzaAoJICAgIGl0cyBl
eGVjdXRpb24gYW5kIHRoZW4gY2FuY2VscyBpdCwgdGh1cyBwcmV2ZW50aW5nIGZyb20gaXQKCSAg
ICB0byBiZSBjYWxsZWQgYWdhaW4uCgogICAgSWYsIGluIGl0cyBmaW5hbCBleGVjdXRpb24sIHRo
ZSB0aW1lciByb3V0aW5lIHNjaGVkdWxlcyBhIHJlc2V0LAogICAgdGhlIHJlc2V0IHJvdXRpbmUg
bWlnaHQgYmUgY2FsbGVkIGFmdGVyd2FyZHMsYW5kIGEgcmVkdW5kYW50IGNhbGwgdG8KICAgIGVu
YV9yZXN0b3JlX2RldmljZSgpIHdvdWxkIGJlIG1hZGUuCgpCeSBjaGFuZ2luZyB0aGUgcmVzZXQg
cm91dGluZSB3ZSBhbGxvdyBpdCB0byByZWFkIHRoZSBkZXZpY2UncyBzdGF0ZQphY2N1cmF0ZWx5
LgpUaGlzIGlzIGFjaGlldmVkIGJ5IGNoZWNraW5nIHdoZXRoZXIgRU5BX0ZMQUdfVFJJR0dFUl9S
RVNFVCBmbGFnIGlzIHNldApiZWZvcmUgcmVzZXR0aW5nIHRoZSBkZXZpY2UgYW5kIG1ha2luZyBi
b3RoIHRoZSBkZXN0cnVjdGlvbiBmdW5jdGlvbiBhbmQKdGhlIGZsYWcgY2hlY2sgYXJlIHVuZGVy
IHJ0bmwgbG9jay4KVGhlIEVOQV9GTEFHX1RSSUdHRVJfUkVTRVQgaXMgY2xlYXJlZCBhdCB0aGUg
ZW5kIG9mIHRoZSBkZXN0cnVjdGlvbgpyb3V0aW5lLiBBbHNvIHN1cnJvdW5kIHRoZSBmbGFnIGNo
ZWNrIHdpdGggJ2xpa2VseScgYmVjYXVzZQp3ZSBleHBlY3QgdGhhdCB0aGUgcmVzZXQgcm91dGlu
ZSB3b3VsZCBiZSBjYWxsZWQgb25seSB3aGVuCkVOQV9GTEFHX1RSSUdHRVJfUkVTRVQgZmxhZyBp
cyBzZXQuCgpUaGUgZGVzdHJ1Y3Rpb24gb2YgdGhlIHRpbWVyIGFuZCByZXNldCBzZXJ2aWNlcyBp
biBfX2VuYV9zaHV0b2ZmKCkgaGF2ZSB0bwpzdGF5LCBldmVuIHRob3VnaCB0aGUgdGltZXIgcm91
dGluZSBpcyBkZXN0cm95ZWQgaW4gZW5hX2Rlc3Ryb3lfZGV2aWNlKCkuClRoaXMgaXMgdG8gYXZv
aWQgYSBjYXNlIGluIHdoaWNoIHRoZSByZXNldCByb3V0aW5lIGlzIHNjaGVkdWxlZCBhZnRlcgpm
cmVlX25ldGRldigpIGluIF9fZW5hX3NodXRvZmYoKSwgd2hpY2ggd291bGQgY3JlYXRlIGFuIGFj
Y2VzcyB0byBmcmVlZAptZW1vcnkgaW4gYWRhcHRlci0+ZmxhZ3MuCgpGaXhlczogOGM1YzdhYmRl
YjJkICgibmV0OiBlbmE6IGFkZCBwb3dlciBtYW5hZ2VtZW50IG9wcyB0byB0aGUgRU5BIGRyaXZl
ciIpClNpZ25lZC1vZmYtYnk6IFNoYXkgQWdyb3NraW4gPHNoYXlhZ3JAYW1hem9uLmNvbT4KU2ln
bmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRy
aXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jIHwgMTkgKysrKysrKysr
Ky0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDEwIGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0
ZGV2LmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYwppbmRl
eCBkZGE0YjhmYzk1MjUuLjFhMmE0NjRmYjJmNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRo
ZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQv
YW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMKQEAgLTM1MjMsMTYgKzM1MjMsMTQgQEAgc3RhdGljIHZv
aWQgZW5hX2Z3X3Jlc2V0X2RldmljZShzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiB7CiAJc3Ry
dWN0IGVuYV9hZGFwdGVyICphZGFwdGVyID0KIAkJY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBl
bmFfYWRhcHRlciwgcmVzZXRfdGFzayk7Ci0Jc3RydWN0IHBjaV9kZXYgKnBkZXYgPSBhZGFwdGVy
LT5wZGV2OwogCi0JaWYgKHVubGlrZWx5KCF0ZXN0X2JpdChFTkFfRkxBR19UUklHR0VSX1JFU0VU
LCAmYWRhcHRlci0+ZmxhZ3MpKSkgewotCQlkZXZfZXJyKCZwZGV2LT5kZXYsCi0JCQkiZGV2aWNl
IHJlc2V0IHNjaGVkdWxlIHdoaWxlIHJlc2V0IGJpdCBpcyBvZmZcbiIpOwotCQlyZXR1cm47Ci0J
fQogCXJ0bmxfbG9jaygpOwotCWVuYV9kZXN0cm95X2RldmljZShhZGFwdGVyLCBmYWxzZSk7Ci0J
ZW5hX3Jlc3RvcmVfZGV2aWNlKGFkYXB0ZXIpOworCisJaWYgKGxpa2VseSh0ZXN0X2JpdChFTkFf
RkxBR19UUklHR0VSX1JFU0VULCAmYWRhcHRlci0+ZmxhZ3MpKSkgeworCQllbmFfZGVzdHJveV9k
ZXZpY2UoYWRhcHRlciwgZmFsc2UpOworCQllbmFfcmVzdG9yZV9kZXZpY2UoYWRhcHRlcik7CisJ
fQorCiAJcnRubF91bmxvY2soKTsKIH0KIApAQCAtNDM2Niw4ICs0MzY0LDExIEBAIHN0YXRpYyB2
b2lkIF9fZW5hX3NodXRvZmYoc3RydWN0IHBjaV9kZXYgKnBkZXYsIGJvb2wgc2h1dGRvd24pCiAJ
CW5ldGRldi0+cnhfY3B1X3JtYXAgPSBOVUxMOwogCX0KICNlbmRpZiAvKiBDT05GSUdfUkZTX0FD
Q0VMICovCi0JZGVsX3RpbWVyX3N5bmMoJmFkYXB0ZXItPnRpbWVyX3NlcnZpY2UpOwogCisJLyog
TWFrZSBzdXJlIHRpbWVyIGFuZCByZXNldCByb3V0aW5lIHdvbid0IGJlIGNhbGxlZCBhZnRlcgor
CSAqIGZyZWVpbmcgZGV2aWNlIHJlc291cmNlcy4KKwkgKi8KKwlkZWxfdGltZXJfc3luYygmYWRh
cHRlci0+dGltZXJfc2VydmljZSk7CiAJY2FuY2VsX3dvcmtfc3luYygmYWRhcHRlci0+cmVzZXRf
dGFzayk7CiAKIAlydG5sX2xvY2soKTsgLyogbG9jayByZWxlYXNlZCBpbnNpZGUgdGhlIGJlbG93
IGlmLWVsc2UgYmxvY2sgKi8KLS0gCjIuMjYuMgoKCkZyb20gMTczNTljMDZiMzQ1YzkzZDMwOWNj
YjM4NzdhYTQ4M2ZjYmU3OThlOCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogU2hheSBB
Z3Jvc2tpbiA8c2hheWFnckBhbWF6b24uY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDIwOjI4
OjM3ICswMzAwClN1YmplY3Q6IFtQQVRDSCAxOS8yNF0gbmV0OiBlbmE6IENoYW5nZSBXQVJOX09O
IGV4cHJlc3Npb24gaW4KIGVuYV9kZWxfbmFwaV9pbl9yYW5nZSgpCgpbIFVwc3RyZWFtIGNvbW1p
dCA4YjE0N2Y2ZjNlN2RlNGU1MTExM2UzZTllYzQ0YWEyZGViYzAyYzU4IF0KClRoZSBlbmFfZGVs
X25hcGlfaW5fcmFuZ2UoKSBmdW5jdGlvbiB1bnJlZ2lzdGVycyB0aGUgbmFwaSBoYW5kbGVyIGZv
cgpyaW5ncyBpbiBhIGdpdmVuIHJhbmdlLgpUaGlzIGZ1bmN0aW9uIGhhZCB0aGUgZm9sbG93aW5n
IFdBUk5fT04gbWFjcm86CgogICAgV0FSTl9PTihFTkFfSVNfWERQX0lOREVYKGFkYXB0ZXIsIGkp
ICYmCgkgICAgYWRhcHRlci0+ZW5hX25hcGlbaV0ueGRwX3JpbmcpOwoKVGhpcyBtYWNybyBwcmlu
dHMgdGhlIGNhbGwgc3RhY2sgaWYgdGhlIGV4cHJlc3Npb24gaW5zaWRlIG9mIGl0IGlzCnRydWUg
WzFdLCBidXQgdGhlIGV4cHJlc3Npb24gaW5zaWRlIG9mIGl0IGlzIHRoZSB3YW50ZWQgc2l0dWF0
aW9uLgpUaGUgZXhwcmVzc2lvbiBjaGVja3Mgd2hldGhlciB0aGUgcmluZyBoYXMgYW4gWERQIHF1
ZXVlIGFuZCBpdHMgaW5kZXgKY29ycmVzcG9uZHMgdG8gYSBYRFAgb25lLgoKVGhpcyBwYXRjaCBj
aGFuZ2VzIHRoZSBleHByZXNzaW9uIHRvCiAgICAhRU5BX0lTX1hEUF9JTkRFWChhZGFwdGVyLCBp
KSAmJiBhZGFwdGVyLT5lbmFfbmFwaVtpXS54ZHBfcmluZwp3aGljaCBpbmRpY2F0ZXMgYW4gdW53
YW50ZWQgc2l0dWF0aW9uLgoKQWxzbywgY2hhbmdlIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIGZ1bmN0
aW9uLiBUaGUgbmFwaSBoYW5kbGVyIGlzCnVucmVnaXN0ZXJlZCBmb3IgYWxsIHJpbmdzLCBhbmQg
c28gdGhlcmUncyBubyBuZWVkIHRvIGNoZWNrIHdoZXRoZXIgdGhlCmluZGV4IGlzIGFuIFhEUCBp
bmRleCBvciBub3QuIEJ5IHJlbW92aW5nIHRoaXMgY2hlY2sgdGhlIGNvZGUgYmVjb21lcwptdWNo
IG1vcmUgcmVhZGFibGUuCgpGaXhlczogNTQ4YzQ5NDBiOWYxICgibmV0OiBlbmE6IEltcGxlbWVu
dCBYRFBfVFggYWN0aW9uIikKU2lnbmVkLW9mZi1ieTogU2hheSBBZ3Jvc2tpbiA8c2hheWFnckBh
bWF6b24uY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9m
dC5uZXQ+Ci0tLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2VuYS9lbmFfbmV0ZGV2LmMg
fCAxMSArKysrLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDQgaW5zZXJ0aW9ucygrKSwgNyBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9hbWF6b24vZW5hL2Vu
YV9uZXRkZXYuYyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5j
CmluZGV4IDFhMmE0NjRmYjJmNS4uMDAwZjU3MTk4MzUyIDEwMDY0NAotLS0gYS9kcml2ZXJzL25l
dC9ldGhlcm5ldC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYworKysgYi9kcml2ZXJzL25ldC9ldGhl
cm5ldC9hbWF6b24vZW5hL2VuYV9uZXRkZXYuYwpAQCAtMjE3NywxMyArMjE3NywxMCBAQCBzdGF0
aWMgdm9pZCBlbmFfZGVsX25hcGlfaW5fcmFuZ2Uoc3RydWN0IGVuYV9hZGFwdGVyICphZGFwdGVy
LAogCWludCBpOwogCiAJZm9yIChpID0gZmlyc3RfaW5kZXg7IGkgPCBmaXJzdF9pbmRleCArIGNv
dW50OyBpKyspIHsKLQkJLyogQ2hlY2sgaWYgbmFwaSB3YXMgaW5pdGlhbGl6ZWQgYmVmb3JlICov
Ci0JCWlmICghRU5BX0lTX1hEUF9JTkRFWChhZGFwdGVyLCBpKSB8fAotCQkgICAgYWRhcHRlci0+
ZW5hX25hcGlbaV0ueGRwX3JpbmcpCi0JCQluZXRpZl9uYXBpX2RlbCgmYWRhcHRlci0+ZW5hX25h
cGlbaV0ubmFwaSk7Ci0JCWVsc2UKLQkJCVdBUk5fT04oRU5BX0lTX1hEUF9JTkRFWChhZGFwdGVy
LCBpKSAmJgotCQkJCWFkYXB0ZXItPmVuYV9uYXBpW2ldLnhkcF9yaW5nKTsKKwkJbmV0aWZfbmFw
aV9kZWwoJmFkYXB0ZXItPmVuYV9uYXBpW2ldLm5hcGkpOworCisJCVdBUk5fT04oIUVOQV9JU19Y
RFBfSU5ERVgoYWRhcHRlciwgaSkgJiYKKwkJCWFkYXB0ZXItPmVuYV9uYXBpW2ldLnhkcF9yaW5n
KTsKIAl9CiB9CiAKLS0gCjIuMjYuMgoKCkZyb20gMmM0MTU1ZGVjMTg1MzdlNzFlZDk4MmRhY2Ux
MDMwODQ1NWU3YTg1OCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogU2hheSBBZ3Jvc2tp
biA8c2hheWFnckBhbWF6b24uY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIwIDIwOjI4OjM4ICsw
MzAwClN1YmplY3Q6IFtQQVRDSCAyMC8yNF0gbmV0OiBlbmE6IE1ha2UgbWlzc2VkX3R4IHN0YXQg
aW5jcmVtZW50YWwKClsgVXBzdHJlYW0gY29tbWl0IGNjZDE0M2U1MTUwZjI0YjliYTE1MTQ1Yzcy
MjFiNjFkZDllNDEwMjEgXQoKTW9zdCBzdGF0aXN0aWNzIGluIGVuYSBkcml2ZXIgYXJlIGluY3Jl
bWVudGVkLCBtZWFuaW5nIHRoYXQgYSBzdGF0J3MKdmFsdWUgaXMgYSBzdW0gb2YgYWxsIGluY3Jl
YXNlcyBkb25lIHRvIGl0IHNpbmNlIGRyaXZlci9xdWV1ZQppbml0aWFsaXphdGlvbi4KClRoaXMg
cGF0Y2ggbWFrZXMgYWxsIHN0YXRpc3RpY3MgdGhpcyB3YXksIGVmZmVjdGl2ZWx5IG1ha2luZyBt
aXNzZWRfdHgKc3RhdGlzdGljIGluY3JlbWVudGFsLgpBbHNvIGFkZGVkIGEgY29tbWVudCByZWdh
cmRpbmcgcnhfZHJvcHMgYW5kIHR4X2Ryb3BzIHRvIG1ha2UgaXQKY2xlYXJlciBob3cgdGhlc2Ug
Y291bnRlcnMgYXJlIGNhbGN1bGF0ZWQuCgpGaXhlczogMTEwOTVmZGI3MTJiICgibmV0OiBlbmE6
IGFkZCBzdGF0aXN0aWNzIGZvciBtaXNzZWQgdHggcGFja2V0cyIpClNpZ25lZC1vZmYtYnk6IFNo
YXkgQWdyb3NraW4gPHNoYXlhZ3JAYW1hem9uLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4g
TWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L2Ft
YXpvbi9lbmEvZW5hX25ldGRldi5jIHwgNSArKysrLQogMSBmaWxlIGNoYW5nZWQsIDQgaW5zZXJ0
aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0
L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvYW1hem9uL2Vu
YS9lbmFfbmV0ZGV2LmMKaW5kZXggMDAwZjU3MTk4MzUyLi45ZjJjNjk3YmEwYWMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jCisrKyBiL2Ry
aXZlcnMvbmV0L2V0aGVybmV0L2FtYXpvbi9lbmEvZW5hX25ldGRldi5jCkBAIC0zNjA5LDcgKzM2
MDksNyBAQCBzdGF0aWMgaW50IGNoZWNrX21pc3NpbmdfY29tcF9pbl90eF9xdWV1ZShzdHJ1Y3Qg
ZW5hX2FkYXB0ZXIgKmFkYXB0ZXIsCiAJfQogCiAJdTY0X3N0YXRzX3VwZGF0ZV9iZWdpbigmdHhf
cmluZy0+c3luY3ApOwotCXR4X3JpbmctPnR4X3N0YXRzLm1pc3NlZF90eCA9IG1pc3NlZF90eDsK
Kwl0eF9yaW5nLT50eF9zdGF0cy5taXNzZWRfdHggKz0gbWlzc2VkX3R4OwogCXU2NF9zdGF0c191
cGRhdGVfZW5kKCZ0eF9yaW5nLT5zeW5jcCk7CiAKIAlyZXR1cm4gcmM7CkBAIC00NTM3LDYgKzQ1
MzcsOSBAQCBzdGF0aWMgdm9pZCBlbmFfa2VlcF9hbGl2ZV93ZCh2b2lkICphZGFwdGVyX2RhdGEs
CiAJdHhfZHJvcHMgPSAoKHU2NClkZXNjLT50eF9kcm9wc19oaWdoIDw8IDMyKSB8IGRlc2MtPnR4
X2Ryb3BzX2xvdzsKIAogCXU2NF9zdGF0c191cGRhdGVfYmVnaW4oJmFkYXB0ZXItPnN5bmNwKTsK
KwkvKiBUaGVzZSBzdGF0cyBhcmUgYWNjdW11bGF0ZWQgYnkgdGhlIGRldmljZSwgc28gdGhlIGNv
dW50ZXJzIGluZGljYXRlCisJICogYWxsIGRyb3BzIHNpbmNlIGxhc3QgcmVzZXQuCisJICovCiAJ
YWRhcHRlci0+ZGV2X3N0YXRzLnJ4X2Ryb3BzID0gcnhfZHJvcHM7CiAJYWRhcHRlci0+ZGV2X3N0
YXRzLnR4X2Ryb3BzID0gdHhfZHJvcHM7CiAJdTY0X3N0YXRzX3VwZGF0ZV9lbmQoJmFkYXB0ZXIt
PnN5bmNwKTsKLS0gCjIuMjYuMgoKCkZyb20gOGRhYTkyZDlmOTBmNjJiMzJhNmU5MWVmOGZmYjg0
MDUxMDE5ZWI4OSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWF4aW0gTWlraXR5YW5z
a2l5IDxtYXhpbW1pQG1lbGxhbm94LmNvbT4KRGF0ZTogTW9uLCAxNyBBdWcgMjAyMCAxNjozNDow
NSArMDMwMApTdWJqZWN0OiBbUEFUQ0ggMjEvMjRdIGV0aHRvb2w6IEZpeCBwcmVzZXJ2aW5nIG9m
IHdhbnRlZCBmZWF0dXJlIGJpdHMgaW4KIG5ldGxpbmsgaW50ZXJmYWNlCgpbIFVwc3RyZWFtIGNv
bW1pdCA4NDAxMTBhNGVhZTE5MGRjYmI5OTA3ZDY4MjE2ZDVkMWQ5ZjI1ODM5IF0KCkN1cnJlbnRs
eSwgZXRodG9vbC1uZXRsaW5rIGNhbGN1bGF0ZXMgbmV3IHdhbnRlZCBiaXRzIGFzOgoocmVxX3dh
bnRlZCAmIHJlcV9tYXNrKSB8IChvbGRfYWN0aXZlICYgfnJlcV9tYXNrKQoKSXQgY29tcGxldGVs
eSBkaXNjYXJkcyB0aGUgb2xkIHdhbnRlZCBiaXRzLCBzbyB0aGV5IGFyZSBmb3Jnb3R0ZW4gd2l0
aAp0aGUgbmV4dCBldGh0b29sIGNvbW1hbmQuIFNhbXBsZSBzdGVwcyB0byByZXByb2R1Y2U6Cgox
LiBldGh0b29sIC1rIGV0aDAKICAgdHgtdGNwLXNlZ21lbnRhdGlvbjogb24gIyBUU08gaXMgb24g
ZnJvbSB0aGUgYmVnaW5uaW5nCjIuIGV0aHRvb2wgLUsgZXRoMCB0eCBvZmYKICAgdHgtdGNwLXNl
Z21lbnRhdGlvbjogb2ZmIFtub3QgcmVxdWVzdGVkXQozLiBldGh0b29sIC1rIGV0aDAKICAgdHgt
dGNwLXNlZ21lbnRhdGlvbjogb2ZmIFtyZXF1ZXN0ZWQgb25dCjQuIGV0aHRvb2wgLUsgZXRoMCBy
eCBvZmYgIyBTb21lIGNoYW5nZSB1bnJlbGF0ZWQgdG8gVFNPCjUuIGV0aHRvb2wgLWsgZXRoMAog
ICB0eC10Y3Atc2VnbWVudGF0aW9uOiBvZmYgIyAiV2FudGVkIG9uIiBpcyBmb3Jnb3R0ZW4KClRo
aXMgY29tbWl0IGZpeGVzIGl0IGJ5IGNoYW5naW5nIHRoZSBmb3JtdWxhIHRvOgoocmVxX3dhbnRl
ZCAmIHJlcV9tYXNrKSB8IChvbGRfd2FudGVkICYgfnJlcV9tYXNrKSwKd2hlcmUgb2xkX2FjdGl2
ZSB3YXMgcmVwbGFjZWQgYnkgb2xkX3dhbnRlZCB0byBhY2NvdW50IGZvciB0aGUgd2FudGVkCmJp
dHMuCgpUaGUgc2hvcnRjdXQgY29uZGl0aW9uIGZvciB0aGUgY2FzZSB3aGVyZSBub3RoaW5nIHdh
cyBjaGFuZ2VkIG5vdwpjb21wYXJlcyB3YW50ZWQgYml0bWFza3MsIGluc3RlYWQgb2Ygd2FudGVk
IHRvIGFjdGl2ZS4KCkZpeGVzOiAwOTgwYmZjZDY5NTQgKCJldGh0b29sOiBzZXQgbmV0ZGV2IGZl
YXR1cmVzIHdpdGggRkVBVFVSRVNfU0VUIHJlcXVlc3QiKQpTaWduZWQtb2ZmLWJ5OiBNYXhpbSBN
aWtpdHlhbnNraXkgPG1heGltbWlAbWVsbGFub3guY29tPgpSZXZpZXdlZC1ieTogTWljaGFsIEt1
YmVjZWsgPG1rdWJlY2VrQHN1c2UuY3o+ClNpZ25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8
ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBuZXQvZXRodG9vbC9mZWF0dXJlcy5jIHwgMTEgKysr
KysrKy0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA3IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvbmV0L2V0aHRvb2wvZmVhdHVyZXMuYyBiL25ldC9ldGh0b29sL2ZlYXR1
cmVzLmMKaW5kZXggNGU2MzJkYzk4N2Q4Li5lYzE5NmYwZmRkYzkgMTAwNjQ0Ci0tLSBhL25ldC9l
dGh0b29sL2ZlYXR1cmVzLmMKKysrIGIvbmV0L2V0aHRvb2wvZmVhdHVyZXMuYwpAQCAtMjI0LDcg
KzIyNCw5IEBAIGludCBldGhubF9zZXRfZmVhdHVyZXMoc3RydWN0IHNrX2J1ZmYgKnNrYiwgc3Ry
dWN0IGdlbmxfaW5mbyAqaW5mbykKIAlERUNMQVJFX0JJVE1BUCh3YW50ZWRfZGlmZl9tYXNrLCBO
RVRERVZfRkVBVFVSRV9DT1VOVCk7CiAJREVDTEFSRV9CSVRNQVAoYWN0aXZlX2RpZmZfbWFzaywg
TkVUREVWX0ZFQVRVUkVfQ09VTlQpOwogCURFQ0xBUkVfQklUTUFQKG9sZF9hY3RpdmUsIE5FVERF
Vl9GRUFUVVJFX0NPVU5UKTsKKwlERUNMQVJFX0JJVE1BUChvbGRfd2FudGVkLCBORVRERVZfRkVB
VFVSRV9DT1VOVCk7CiAJREVDTEFSRV9CSVRNQVAobmV3X2FjdGl2ZSwgTkVUREVWX0ZFQVRVUkVf
Q09VTlQpOworCURFQ0xBUkVfQklUTUFQKG5ld193YW50ZWQsIE5FVERFVl9GRUFUVVJFX0NPVU5U
KTsKIAlERUNMQVJFX0JJVE1BUChyZXFfd2FudGVkLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CiAJ
REVDTEFSRV9CSVRNQVAocmVxX21hc2ssIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKIAlzdHJ1Y3Qg
bmxhdHRyICp0YltFVEhUT09MX0FfRkVBVFVSRVNfTUFYICsgMV07CkBAIC0yNTAsNiArMjUyLDcg
QEAgaW50IGV0aG5sX3NldF9mZWF0dXJlcyhzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2Vu
bF9pbmZvICppbmZvKQogCiAJcnRubF9sb2NrKCk7CiAJZXRobmxfZmVhdHVyZXNfdG9fYml0bWFw
KG9sZF9hY3RpdmUsIGRldi0+ZmVhdHVyZXMpOworCWV0aG5sX2ZlYXR1cmVzX3RvX2JpdG1hcChv
bGRfd2FudGVkLCBkZXYtPndhbnRlZF9mZWF0dXJlcyk7CiAJcmV0ID0gZXRobmxfcGFyc2VfYml0
c2V0KHJlcV93YW50ZWQsIHJlcV9tYXNrLCBORVRERVZfRkVBVFVSRV9DT1VOVCwKIAkJCQkgdGJb
RVRIVE9PTF9BX0ZFQVRVUkVTX1dBTlRFRF0sCiAJCQkJIG5ldGRldl9mZWF0dXJlc19zdHJpbmdz
LCBpbmZvLT5leHRhY2spOwpAQCAtMjYxLDExICsyNjQsMTEgQEAgaW50IGV0aG5sX3NldF9mZWF0
dXJlcyhzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgZ2VubF9pbmZvICppbmZvKQogCQlnb3Rv
IG91dF9ydG5sOwogCX0KIAotCS8qIHNldCByZXFfd2FudGVkIGJpdHMgbm90IGluIHJlcV9tYXNr
IGZyb20gb2xkX2FjdGl2ZSAqLworCS8qIHNldCByZXFfd2FudGVkIGJpdHMgbm90IGluIHJlcV9t
YXNrIGZyb20gb2xkX3dhbnRlZCAqLwogCWJpdG1hcF9hbmQocmVxX3dhbnRlZCwgcmVxX3dhbnRl
ZCwgcmVxX21hc2ssIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKLQliaXRtYXBfYW5kbm90KG5ld19h
Y3RpdmUsIG9sZF9hY3RpdmUsIHJlcV9tYXNrLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7Ci0JYml0
bWFwX29yKHJlcV93YW50ZWQsIG5ld19hY3RpdmUsIHJlcV93YW50ZWQsIE5FVERFVl9GRUFUVVJF
X0NPVU5UKTsKLQlpZiAoYml0bWFwX2VxdWFsKHJlcV93YW50ZWQsIG9sZF9hY3RpdmUsIE5FVERF
Vl9GRUFUVVJFX0NPVU5UKSkgeworCWJpdG1hcF9hbmRub3QobmV3X3dhbnRlZCwgb2xkX3dhbnRl
ZCwgcmVxX21hc2ssIE5FVERFVl9GRUFUVVJFX0NPVU5UKTsKKwliaXRtYXBfb3IocmVxX3dhbnRl
ZCwgbmV3X3dhbnRlZCwgcmVxX3dhbnRlZCwgTkVUREVWX0ZFQVRVUkVfQ09VTlQpOworCWlmIChi
aXRtYXBfZXF1YWwocmVxX3dhbnRlZCwgb2xkX3dhbnRlZCwgTkVUREVWX0ZFQVRVUkVfQ09VTlQp
KSB7CiAJCXJldCA9IDA7CiAJCWdvdG8gb3V0X3J0bmw7CiAJfQotLSAKMi4yNi4yCgoKRnJvbSBi
NjQ2N2Q4ZDZiZDA0NmMxZmJiMjJlZTllZWEzMGQwMjk2MjczZThlIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBNYXhpbSBNaWtpdHlhbnNraXkgPG1heGltbWlAbWVsbGFub3guY29tPgpE
YXRlOiBNb24sIDE3IEF1ZyAyMDIwIDE2OjM0OjA2ICswMzAwClN1YmplY3Q6IFtQQVRDSCAyMi8y
NF0gZXRodG9vbDogQWNjb3VudCBmb3IgaHdfZmVhdHVyZXMgaW4gbmV0bGluayBpbnRlcmZhY2UK
ClsgVXBzdHJlYW0gY29tbWl0IDI4NDdiZmVkODg4ZmJiOGJmNGM4ZTgwNjdmZDYxMjc1MzhjMmM3
MDAgXQoKZXRodG9vbC1uZXRsaW5rIGlnbm9yZXMgZGV2LT5od19mZWF0dXJlcyBhbmQgbWF5IGNv
bmZ1c2UgdGhlIGRyaXZlcnMgYnkKYXNraW5nIHRoZW0gdG8gZW5hYmxlIGZlYXR1cmVzIG5vdCBp
biB0aGUgaHdfZmVhdHVyZXMgYml0bWFzay4gRm9yCmV4YW1wbGU6CgoxLiBldGh0b29sIC1rIGV0
aDAKICAgdGxzLWh3LXR4LW9mZmxvYWQ6IG9mZiBbZml4ZWRdCjIuIGV0aHRvb2wgLUsgZXRoMCB0
bHMtaHctdHgtb2ZmbG9hZCBvbgogICB0bHMtaHctdHgtb2ZmbG9hZDogb24KMy4gZXRodG9vbCAt
ayBldGgwCiAgIHRscy1ody10eC1vZmZsb2FkOiBvbiBbZml4ZWRdCgpGaXRsZXIgb3V0IGRldi0+
aHdfZmVhdHVyZXMgZnJvbSByZXFfd2FudGVkIHRvIGZpeCBpdCBhbmQgdG8gcmVzZW1ibGUKdGhl
IGxlZ2FjeSBldGh0b29sIGJlaGF2aW9yLgoKRml4ZXM6IDA5ODBiZmNkNjk1NCAoImV0aHRvb2w6
IHNldCBuZXRkZXYgZmVhdHVyZXMgd2l0aCBGRUFUVVJFU19TRVQgcmVxdWVzdCIpClNpZ25lZC1v
ZmYtYnk6IE1heGltIE1pa2l0eWFuc2tpeSA8bWF4aW1taUBtZWxsYW5veC5jb20+ClJldmlld2Vk
LWJ5OiBNaWNoYWwgS3ViZWNlayA8bWt1YmVjZWtAc3VzZS5jej4KU2lnbmVkLW9mZi1ieTogRGF2
aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9ldGh0b29sL2ZlYXR1
cmVzLmMgfCAzICsrLQogMSBmaWxlIGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlv
bigtKQoKZGlmZiAtLWdpdCBhL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMgYi9uZXQvZXRodG9vbC9m
ZWF0dXJlcy5jCmluZGV4IGVjMTk2ZjBmZGRjOS4uNmIyODhiZmQ3Njc4IDEwMDY0NAotLS0gYS9u
ZXQvZXRodG9vbC9mZWF0dXJlcy5jCisrKyBiL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMKQEAgLTI3
Myw3ICsyNzMsOCBAQCBpbnQgZXRobmxfc2V0X2ZlYXR1cmVzKHN0cnVjdCBza19idWZmICpza2Is
IHN0cnVjdCBnZW5sX2luZm8gKmluZm8pCiAJCWdvdG8gb3V0X3J0bmw7CiAJfQogCi0JZGV2LT53
YW50ZWRfZmVhdHVyZXMgPSBldGhubF9iaXRtYXBfdG9fZmVhdHVyZXMocmVxX3dhbnRlZCk7CisJ
ZGV2LT53YW50ZWRfZmVhdHVyZXMgJj0gfmRldi0+aHdfZmVhdHVyZXM7CisJZGV2LT53YW50ZWRf
ZmVhdHVyZXMgfD0gZXRobmxfYml0bWFwX3RvX2ZlYXR1cmVzKHJlcV93YW50ZWQpICYgZGV2LT5o
d19mZWF0dXJlczsKIAlfX25ldGRldl91cGRhdGVfZmVhdHVyZXMoZGV2KTsKIAlldGhubF9mZWF0
dXJlc190b19iaXRtYXAobmV3X2FjdGl2ZSwgZGV2LT5mZWF0dXJlcyk7CiAJbW9kID0gIWJpdG1h
cF9lcXVhbChvbGRfYWN0aXZlLCBuZXdfYWN0aXZlLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7Ci0t
IAoyLjI2LjIKCgpGcm9tIDgzNGJjZjcwYjIzNWIwMGE2MDZhYzYwMmUyZWE4OTljMTIyMDM3NTEg
TW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IE1heGltIE1pa2l0eWFuc2tpeSA8bWF4aW1t
aUBtZWxsYW5veC5jb20+CkRhdGU6IE1vbiwgMTcgQXVnIDIwMjAgMTY6MzQ6MDcgKzAzMDAKU3Vi
amVjdDogW1BBVENIIDIzLzI0XSBldGh0b29sOiBEb24ndCBvbWl0IHRoZSBuZXRsaW5rIHJlcGx5
IGlmIG5vIGZlYXR1cmVzCiB3ZXJlIGNoYW5nZWQKClsgVXBzdHJlYW0gY29tbWl0IGYwMTIwNGVj
OGJlN2VhNWU4ZjAyMzBhN2Q0MjAwZTMzOGQ1NjNiZGUgXQoKVGhlIGxlZ2FjeSBldGh0b29sIHVz
ZXJzcGFjZSB0b29sIHNob3dzIGFuIGVycm9yIHdoZW4gbm8gZmVhdHVyZXMgY291bGQKYmUgY2hh
bmdlZC4gSXQncyB1c2VmdWwgdG8gaGF2ZSBhIG5ldGxpbmsgcmVwbHkgdG8gYmUgYWJsZSB0byBz
aG93IHRoaXMKZXJyb3Igd2hlbiBfX25ldGRldl91cGRhdGVfZmVhdHVyZXMgd2Fzbid0IGNhbGxl
ZCwgZm9yIGV4YW1wbGU6CgoxLiBldGh0b29sIC1rIGV0aDAKICAgbGFyZ2UtcmVjZWl2ZS1vZmZs
b2FkOiBvZmYKMi4gZXRodG9vbCAtSyBldGgwIHJ4LWZjcyBvbgozLiBldGh0b29sIC1LIGV0aDAg
bHJvIG9uCiAgIENvdWxkIG5vdCBjaGFuZ2UgYW55IGRldmljZSBmZWF0dXJlcwogICByeC1scm86
IG9mZiBbcmVxdWVzdGVkIG9uXQo0LiBldGh0b29sIC1LIGV0aDAgbHJvIG9uCiAgICMgVGhlIG91
dHB1dCBzaG91bGQgYmUgdGhlIHNhbWUsIGJ1dCB3aXRob3V0IHRoaXMgcGF0Y2ggdGhlIGtlcm5l
bAogICAjIGRvZXNuJ3Qgc2VuZCB0aGUgcmVwbHksIGFuZCBldGh0b29sIGlzIHVuYWJsZSB0byBk
ZXRlY3QgdGhlIGVycm9yLgoKVGhpcyBjb21taXQgbWFrZXMgZXRodG9vbC1uZXRsaW5rIGFsd2F5
cyByZXR1cm4gYSByZXBseSB3aGVuIHJlcXVlc3RlZCwKYW5kIGl0IHN0aWxsIGF2b2lkcyB1bm5l
Y2Vzc2FyeSBjYWxscyB0byBfX25ldGRldl91cGRhdGVfZmVhdHVyZXMgaWYgdGhlCndhbnRlZCBm
ZWF0dXJlcyBoYXZlbid0IGNoYW5nZWQuCgpGaXhlczogMDk4MGJmY2Q2OTU0ICgiZXRodG9vbDog
c2V0IG5ldGRldiBmZWF0dXJlcyB3aXRoIEZFQVRVUkVTX1NFVCByZXF1ZXN0IikKU2lnbmVkLW9m
Zi1ieTogTWF4aW0gTWlraXR5YW5za2l5IDxtYXhpbW1pQG1lbGxhbm94LmNvbT4KUmV2aWV3ZWQt
Ynk6IE1pY2hhbCBLdWJlY2VrIDxta3ViZWNla0BzdXNlLmN6PgpTaWduZWQtb2ZmLWJ5OiBEYXZp
ZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2V0aHRvb2wvZmVhdHVy
ZXMuYyB8IDExICsrKystLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNCBpbnNlcnRpb25zKCspLCA3
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9ldGh0b29sL2ZlYXR1cmVzLmMgYi9uZXQv
ZXRodG9vbC9mZWF0dXJlcy5jCmluZGV4IDZiMjg4YmZkNzY3OC4uNDk1NjM1ZjE1MmJhIDEwMDY0
NAotLS0gYS9uZXQvZXRodG9vbC9mZWF0dXJlcy5jCisrKyBiL25ldC9ldGh0b29sL2ZlYXR1cmVz
LmMKQEAgLTI2OCwxNCArMjY4LDExIEBAIGludCBldGhubF9zZXRfZmVhdHVyZXMoc3RydWN0IHNr
X2J1ZmYgKnNrYiwgc3RydWN0IGdlbmxfaW5mbyAqaW5mbykKIAliaXRtYXBfYW5kKHJlcV93YW50
ZWQsIHJlcV93YW50ZWQsIHJlcV9tYXNrLCBORVRERVZfRkVBVFVSRV9DT1VOVCk7CiAJYml0bWFw
X2FuZG5vdChuZXdfd2FudGVkLCBvbGRfd2FudGVkLCByZXFfbWFzaywgTkVUREVWX0ZFQVRVUkVf
Q09VTlQpOwogCWJpdG1hcF9vcihyZXFfd2FudGVkLCBuZXdfd2FudGVkLCByZXFfd2FudGVkLCBO
RVRERVZfRkVBVFVSRV9DT1VOVCk7Ci0JaWYgKGJpdG1hcF9lcXVhbChyZXFfd2FudGVkLCBvbGRf
d2FudGVkLCBORVRERVZfRkVBVFVSRV9DT1VOVCkpIHsKLQkJcmV0ID0gMDsKLQkJZ290byBvdXRf
cnRubDsKKwlpZiAoIWJpdG1hcF9lcXVhbChyZXFfd2FudGVkLCBvbGRfd2FudGVkLCBORVRERVZf
RkVBVFVSRV9DT1VOVCkpIHsKKwkJZGV2LT53YW50ZWRfZmVhdHVyZXMgJj0gfmRldi0+aHdfZmVh
dHVyZXM7CisJCWRldi0+d2FudGVkX2ZlYXR1cmVzIHw9IGV0aG5sX2JpdG1hcF90b19mZWF0dXJl
cyhyZXFfd2FudGVkKSAmIGRldi0+aHdfZmVhdHVyZXM7CisJCV9fbmV0ZGV2X3VwZGF0ZV9mZWF0
dXJlcyhkZXYpOwogCX0KLQotCWRldi0+d2FudGVkX2ZlYXR1cmVzICY9IH5kZXYtPmh3X2ZlYXR1
cmVzOwotCWRldi0+d2FudGVkX2ZlYXR1cmVzIHw9IGV0aG5sX2JpdG1hcF90b19mZWF0dXJlcyhy
ZXFfd2FudGVkKSAmIGRldi0+aHdfZmVhdHVyZXM7Ci0JX19uZXRkZXZfdXBkYXRlX2ZlYXR1cmVz
KGRldik7CiAJZXRobmxfZmVhdHVyZXNfdG9fYml0bWFwKG5ld19hY3RpdmUsIGRldi0+ZmVhdHVy
ZXMpOwogCW1vZCA9ICFiaXRtYXBfZXF1YWwob2xkX2FjdGl2ZSwgbmV3X2FjdGl2ZSwgTkVUREVW
X0ZFQVRVUkVfQ09VTlQpOwogCi0tIAoyLjI2LjIKCgpGcm9tIDIwZWZlZDE2MjRjYjlhNTczNTM0
ZGY4NzgxNDA3MjJhYWQ5MWFjZTkgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEpvaGFu
bmVzIEJlcmcgPGpvaGFubmVzLmJlcmdAaW50ZWwuY29tPgpEYXRlOiBXZWQsIDE5IEF1ZyAyMDIw
IDIxOjUyOjM4ICswMjAwClN1YmplY3Q6IFtQQVRDSCAyNC8yNF0gbmV0bGluazogZml4IHN0YXRl
IHJlYWxsb2NhdGlvbiBpbiBwb2xpY3kgZXhwb3J0CgpbIFVwc3RyZWFtIGNvbW1pdCBkMWZiNTU1
OTI5MDllYTI0OWFmNzAxNzBjN2E1MmU2MzcwMDk1NjRkIF0KCkV2aWRlbnRseSwgd2hlbiBJIGRp
ZCB0aGlzIHByZXZpb3VzbHksIHdlIGRpZG4ndCBoYXZlIG1vcmUgdGhhbgoxMCBwb2xpY2llcyBh
bmQgZGlkbid0IHJ1biBpbnRvIHRoZSByZWFsbG9jYXRpb24gcGF0aCwgYmVjYXVzZQppdCdzIG1p
c3NpbmcgYSBtZW1zZXQoKSBmb3IgdGhlIHVudXNlZCBwb2xpY2llcy4gRml4IHRoYXQuCgpGaXhl
czogZDA3ZGNmOWFhZGQ2ICgibmV0bGluazogYWRkIGluZnJhc3RydWN0dXJlIHRvIGV4cG9zZSBw
b2xpY2llcyB0byB1c2Vyc3BhY2UiKQpTaWduZWQtb2ZmLWJ5OiBKb2hhbm5lcyBCZXJnIDxqb2hh
bm5lcy5iZXJnQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZl
bUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9uZXRsaW5rL3BvbGljeS5jIHwgMyArKysKIDEgZmls
ZSBjaGFuZ2VkLCAzIGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9uZXQvbmV0bGluay9wb2xp
Y3kuYyBiL25ldC9uZXRsaW5rL3BvbGljeS5jCmluZGV4IGY2NDkxODUzYzc5Ny4uMmIzZTI2Zjc0
OTZmIDEwMDY0NAotLS0gYS9uZXQvbmV0bGluay9wb2xpY3kuYworKysgYi9uZXQvbmV0bGluay9w
b2xpY3kuYwpAQCAtNTEsNiArNTEsOSBAQCBzdGF0aWMgaW50IGFkZF9wb2xpY3koc3RydWN0IG5s
X3BvbGljeV9kdW1wICoqc3RhdGVwLAogCWlmICghc3RhdGUpCiAJCXJldHVybiAtRU5PTUVNOwog
CisJbWVtc2V0KCZzdGF0ZS0+cG9saWNpZXNbc3RhdGUtPm5fYWxsb2NdLCAwLAorCSAgICAgICBm
bGV4X2FycmF5X3NpemUoc3RhdGUsIHBvbGljaWVzLCBuX2FsbG9jIC0gc3RhdGUtPm5fYWxsb2Mp
KTsKKwogCXN0YXRlLT5wb2xpY2llc1tzdGF0ZS0+bl9hbGxvY10ucG9saWN5ID0gcG9saWN5Owog
CXN0YXRlLT5wb2xpY2llc1tzdGF0ZS0+bl9hbGxvY10ubWF4dHlwZSA9IG1heHR5cGU7CiAJc3Rh
dGUtPm5fYWxsb2MgPSBuX2FsbG9jOwotLSAKMi4yNi4yCgo=

----Next_Part(Mon_Aug_24_09_52_29_2020_857)----
