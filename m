Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id AECE833D4C4
	for <lists+stable@lfdr.de>; Tue, 16 Mar 2021 14:23:16 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234823AbhCPNWo (ORCPT <rfc822;lists+stable@lfdr.de>);
        Tue, 16 Mar 2021 09:22:44 -0400
Received: from mail.kernel.org ([198.145.29.99]:46180 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234899AbhCPNWn (ORCPT <rfc822;stable@vger.kernel.org>);
        Tue, 16 Mar 2021 09:22:43 -0400
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id D9E0C65054;
        Tue, 16 Mar 2021 13:22:41 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94)
        (envelope-from <maz@kernel.org>)
        id 1lM9eh-001yOE-Qs; Tue, 16 Mar 2021 13:22:39 +0000
Date:   Tue, 16 Mar 2021 13:22:39 +0000
Message-ID: <878s6nfd28.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Vladimir Murzin <vladimir.murzin@arm.com>
Cc:     linux-arm-kernel@lists.infradead.org, stable@vger.kernel.org,
        catalin.marinas@arm.com, will@kernel.org, dbrazdil@google.com
Subject: Re: [PATCH][for-stable-v5.11]] arm64: Unconditionally set virtual cpu id registers
In-Reply-To: <20210316112500.85268-1-vladimir.murzin@arm.com>
References: <20210316112500.85268-1-vladimir.murzin@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: vladimir.murzin@arm.com, linux-arm-kernel@lists.infradead.org, stable@vger.kernel.org, catalin.marinas@arm.com, will@kernel.org, dbrazdil@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

Hi Vladimir,

On Tue, 16 Mar 2021 11:25:00 +0000,
Vladimir Murzin <vladimir.murzin@arm.com> wrote:
> 
> Commit 78869f0f0552 ("arm64: Extract parts of el2_setup into a macro")
> reorganized el2 setup in such way that virtual cpu id registers set
> only in nVHE, yet they used (and need) to be set irrespective VHE
> support. Lack of setup causes 32-bit guest stop booting due to MIDR
> stay undefined.

Surely this affects 64bit guests as well, doesn't it? I guess the
32bit code tries to infer stuff such as the architecture revision from
MIDR and falls over, and that the 64bit Linux code has less baggage?

>
> Fixes: 78869f0f0552 ("arm64: Extract parts of el2_setup into a macro")
> Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
> ---
> 
> There is no upstream fix since issue went away due to code there has
> been reworked in 5.12: nVHE comes first, so virtual cpu id register
> are always set.
> 
> Maintainers, please, Ack.
> 
>  arch/arm64/include/asm/el2_setup.h | 4 ++--
>  1 file changed, 2 insertions(+), 2 deletions(-)
> 
> diff --git a/arch/arm64/include/asm/el2_setup.h b/arch/arm64/include/asm/el2_setup.h
> index f988e94cdf9e..db87daca6b8c 100644
> --- a/arch/arm64/include/asm/el2_setup.h
> +++ b/arch/arm64/include/asm/el2_setup.h
> @@ -113,7 +113,7 @@
>  .endm
>  
>  /* Virtual CPU ID registers */
> -.macro __init_el2_nvhe_idregs
> +.macro __init_el2_idregs
>  	mrs	x0, midr_el1
>  	mrs	x1, mpidr_el1
>  	msr	vpidr_el2, x0
> @@ -165,6 +165,7 @@
>  	__init_el2_stage2
>  	__init_el2_gicv3
>  	__init_el2_hstr
> +	__init_el2_idregs
>  
>  	/*
>  	 * When VHE is not in use, early init of EL2 needs to be done here.
> @@ -173,7 +174,6 @@
>  	 * will be done via the _EL1 system register aliases in __cpu_setup.
>  	 */
>  .ifeqs "\mode", "nvhe"
> -	__init_el2_nvhe_idregs
>  	__init_el2_nvhe_cptr
>  	__init_el2_nvhe_sve
>  	__init_el2_nvhe_prepare_eret

The couple of VHE systems I have around don't suffer from this issue,
but it looks like I can trigger it on the FVP model (probably because
the model is nasty enough to not have VPIDR_EL2 default to anything
sensible!).

Anyway, good catch. If you can respin it to drop the reference to
32bit guests, I'll happily ack it!

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
