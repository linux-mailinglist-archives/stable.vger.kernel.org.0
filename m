Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 16A6B1CF710
	for <lists+stable@lfdr.de>; Tue, 12 May 2020 16:26:16 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730192AbgELO0P (ORCPT <rfc822;lists+stable@lfdr.de>);
        Tue, 12 May 2020 10:26:15 -0400
Received: from imap3.hz.codethink.co.uk ([176.9.8.87]:54172 "EHLO
        imap3.hz.codethink.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729637AbgELO0P (ORCPT
        <rfc822;stable@vger.kernel.org>); Tue, 12 May 2020 10:26:15 -0400
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126] helo=xylophone)
        by imap3.hz.codethink.co.uk with esmtpsa  (Exim 4.92 #3 (Debian))
        id 1jYVr8-000109-8G; Tue, 12 May 2020 15:26:02 +0100
Message-ID: <5b5c9da70a78bd84900199153a417dba43ba3c32.camel@codethink.co.uk>
Subject: [4.14-stable] Security fixes
From:   Ben Hutchings <ben.hutchings@codethink.co.uk>
To:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Sasha Levin <Alexander.Levin@microsoft.com>
Cc:     stable <stable@vger.kernel.org>
Date:   Tue, 12 May 2020 15:26:00 +0100
Organization: Codethink Ltd.
Content-Type: multipart/mixed; boundary="=-4Ht6QxKNZ/6tK/l20iTk"
User-Agent: Evolution 3.30.5-1.1 
MIME-Version: 1.0
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org


--=-4Ht6QxKNZ/6tK/l20iTk
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit

Here are some fixes that required backporting for 4.14.  All of them
are already present in later stable branches.

Ben.

-- 
Ben Hutchings, Software Developer                         Codethink Ltd
https://www.codethink.co.uk/                 Dale House, 35 Dale Street
                                     Manchester, M1 2HF, United Kingdom

--=-4Ht6QxKNZ/6tK/l20iTk
Content-Type: application/mbox; name="security-4.14.mbox"
Content-Disposition: attachment; filename="security-4.14.mbox"
Content-Transfer-Encoding: base64

RnJvbSBmNjdmZTVmMTY5MjdkZjEyZTIxYTVlOWFiZTUzZjA3NjRlMWU5ZDgyIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTYWJyaW5hIER1YnJvY2EgPHNkQHF1ZWFzeXNuYWlsLm5ldD4K
RGF0ZTogV2VkLCA0IERlYyAyMDE5IDE1OjM1OjUyICswMTAwClN1YmplY3Q6IG5ldDogaXB2Njog
YWRkIG5ldCBhcmd1bWVudCB0byBpcDZfZHN0X2xvb2t1cF9mbG93Cgpjb21taXQgYzRlODVmNzNh
ZmI2Mzg0MTIzZTVlZjFiYmEzMzE1YjJlM2FkMDMxZSB1cHN0cmVhbS4KClRoaXMgd2lsbCBiZSB1
c2VkIGluIHRoZSBjb252ZXJzaW9uIG9mIGlwdjZfc3R1YiB0byBpcDZfZHN0X2xvb2t1cF9mbG93
LAphcyBzb21lIG1vZHVsZXMgY3VycmVudGx5IHBhc3MgYSBuZXQgYXJndW1lbnQgd2l0aG91dCBh
IHNvY2tldCB0bwppcDZfZHN0X2xvb2t1cC4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIGNvbW1pdCAz
NDNkNjBhYWRhNWEgKCJpcHY2OiBjaGFuZ2UKaXB2Nl9zdHViX2ltcGwuaXB2Nl9kc3RfbG9va3Vw
IHRvIHRha2UgbmV0IGFyZ3VtZW50IikuCgpTaWduZWQtb2ZmLWJ5OiBTYWJyaW5hIER1YnJvY2Eg
PHNkQHF1ZWFzeXNuYWlsLm5ldD4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZl
bUBkYXZlbWxvZnQubmV0PgpbYndoOiBCYWNrcG9ydGVkIHRvIDQuMTQ6IGFkanVzdCBjb250ZXh0
XQpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW4uaHV0Y2hpbmdzQGNvZGV0aGluay5j
by51az4KLS0tCiBpbmNsdWRlL25ldC9pcHY2LmggICAgICAgICAgICAgICB8IDIgKy0KIG5ldC9k
Y2NwL2lwdjYuYyAgICAgICAgICAgICAgICAgIHwgNiArKystLS0KIG5ldC9pcHY2L2FmX2luZXQ2
LmMgICAgICAgICAgICAgIHwgMiArLQogbmV0L2lwdjYvZGF0YWdyYW0uYyAgICAgICAgICAgICAg
fCAyICstCiBuZXQvaXB2Ni9pbmV0Nl9jb25uZWN0aW9uX3NvY2suYyB8IDQgKystLQogbmV0L2lw
djYvaXA2X291dHB1dC5jICAgICAgICAgICAgfCA4ICsrKystLS0tCiBuZXQvaXB2Ni9yYXcuYyAg
ICAgICAgICAgICAgICAgICB8IDIgKy0KIG5ldC9pcHY2L3N5bmNvb2tpZXMuYyAgICAgICAgICAg
IHwgMiArLQogbmV0L2lwdjYvdGNwX2lwdjYuYyAgICAgICAgICAgICAgfCA0ICsrLS0KIG5ldC9s
MnRwL2wydHBfaXA2LmMgICAgICAgICAgICAgIHwgMiArLQogbmV0L3NjdHAvaXB2Ni5jICAgICAg
ICAgICAgICAgICAgfCA0ICsrLS0KIDExIGZpbGVzIGNoYW5nZWQsIDE5IGluc2VydGlvbnMoKyks
IDE5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbmV0L2lwdjYuaCBiL2luY2x1
ZGUvbmV0L2lwdjYuaAppbmRleCA2Mjk0ZDIwYTVmMGUuLmNjNTdlMTM2MjI4YiAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9uZXQvaXB2Ni5oCisrKyBiL2luY2x1ZGUvbmV0L2lwdjYuaApAQCAtODYyLDcg
Kzg2Miw3IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHNrX2J1ZmYgKmlwNl9maW5pc2hfc2tiKHN0
cnVjdCBzb2NrICpzaykKIAogaW50IGlwNl9kc3RfbG9va3VwKHN0cnVjdCBuZXQgKm5ldCwgc3Ry
dWN0IHNvY2sgKnNrLCBzdHJ1Y3QgZHN0X2VudHJ5ICoqZHN0LAogCQkgICBzdHJ1Y3QgZmxvd2k2
ICpmbDYpOwotc3RydWN0IGRzdF9lbnRyeSAqaXA2X2RzdF9sb29rdXBfZmxvdyhjb25zdCBzdHJ1
Y3Qgc29jayAqc2ssIHN0cnVjdCBmbG93aTYgKmZsNiwKK3N0cnVjdCBkc3RfZW50cnkgKmlwNl9k
c3RfbG9va3VwX2Zsb3coc3RydWN0IG5ldCAqbmV0LCBjb25zdCBzdHJ1Y3Qgc29jayAqc2ssIHN0
cnVjdCBmbG93aTYgKmZsNiwKIAkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW42X2FkZHIgKmZpbmFs
X2RzdCk7CiBzdHJ1Y3QgZHN0X2VudHJ5ICppcDZfc2tfZHN0X2xvb2t1cF9mbG93KHN0cnVjdCBz
b2NrICpzaywgc3RydWN0IGZsb3dpNiAqZmw2LAogCQkJCQkgY29uc3Qgc3RydWN0IGluNl9hZGRy
ICpmaW5hbF9kc3QpOwpkaWZmIC0tZ2l0IGEvbmV0L2RjY3AvaXB2Ni5jIGIvbmV0L2RjY3AvaXB2
Ni5jCmluZGV4IDU4YTQwMWU5Y2YwOS4uYjQzOGJlZDY3NDlkIDEwMDY0NAotLS0gYS9uZXQvZGNj
cC9pcHY2LmMKKysrIGIvbmV0L2RjY3AvaXB2Ni5jCkBAIC0yMTEsNyArMjExLDcgQEAgc3RhdGlj
IGludCBkY2NwX3Y2X3NlbmRfcmVzcG9uc2UoY29uc3Qgc3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3Qg
cmVxdWVzdF9zb2NrICpyZXEKIAlmaW5hbF9wID0gZmw2X3VwZGF0ZV9kc3QoJmZsNiwgcmN1X2Rl
cmVmZXJlbmNlKG5wLT5vcHQpLCAmZmluYWwpOwogCXJjdV9yZWFkX3VubG9jaygpOwogCi0JZHN0
ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgJmZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2Rz
dF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAlpZiAoSVNf
RVJSKGRzdCkpIHsKIAkJZXJyID0gUFRSX0VSUihkc3QpOwogCQlkc3QgPSBOVUxMOwpAQCAtMjgy
LDcgKzI4Miw3IEBAIHN0YXRpYyB2b2lkIGRjY3BfdjZfY3RsX3NlbmRfcmVzZXQoY29uc3Qgc3Ry
dWN0IHNvY2sgKnNrLCBzdHJ1Y3Qgc2tfYnVmZiAqcnhza2IpCiAJc2VjdXJpdHlfc2tiX2NsYXNz
aWZ5X2Zsb3cocnhza2IsIGZsb3dpNl90b19mbG93aSgmZmw2KSk7CiAKIAkvKiBzayA9IE5VTEws
IGJ1dCBpdCBpcyBzYWZlIGZvciBub3cuIFJTVCBzb2NrZXQgcmVxdWlyZWQuICovCi0JZHN0ID0g
aXA2X2RzdF9sb29rdXBfZmxvdyhjdGxfc2ssICZmbDYsIE5VTEwpOworCWRzdCA9IGlwNl9kc3Rf
bG9va3VwX2Zsb3coc29ja19uZXQoY3RsX3NrKSwgY3RsX3NrLCAmZmw2LCBOVUxMKTsKIAlpZiAo
IUlTX0VSUihkc3QpKSB7CiAJCXNrYl9kc3Rfc2V0KHNrYiwgZHN0KTsKIAkJaXA2X3htaXQoY3Rs
X3NrLCBza2IsICZmbDYsIDAsIE5VTEwsIDApOwpAQCAtOTEyLDcgKzkxMiw3IEBAIHN0YXRpYyBp
bnQgZGNjcF92Nl9jb25uZWN0KHN0cnVjdCBzb2NrICpzaywgc3RydWN0IHNvY2thZGRyICp1YWRk
ciwKIAlvcHQgPSByY3VfZGVyZWZlcmVuY2VfcHJvdGVjdGVkKG5wLT5vcHQsIGxvY2tkZXBfc29j
a19pc19oZWxkKHNrKSk7CiAJZmluYWxfcCA9IGZsNl91cGRhdGVfZHN0KCZmbDYsIG9wdCwgJmZp
bmFsKTsKIAotCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc2ssICZmbDYsIGZpbmFsX3ApOwor
CWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc29ja19uZXQoc2spLCBzaywgJmZsNiwgZmluYWxf
cCk7CiAJaWYgKElTX0VSUihkc3QpKSB7CiAJCWVyciA9IFBUUl9FUlIoZHN0KTsKIAkJZ290byBm
YWlsdXJlOwpkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvYWZfaW5ldDYuYyBiL25ldC9pcHY2L2FmX2lu
ZXQ2LmMKaW5kZXggOTU1MmUwYjA4ZjQ1Li4xOThkNGVjMDA5NjkgMTAwNjQ0Ci0tLSBhL25ldC9p
cHY2L2FmX2luZXQ2LmMKKysrIGIvbmV0L2lwdjYvYWZfaW5ldDYuYwpAQCAtNzE2LDcgKzcxNiw3
IEBAIGludCBpbmV0Nl9za19yZWJ1aWxkX2hlYWRlcihzdHJ1Y3Qgc29jayAqc2spCiAJCQkJCSAm
ZmluYWwpOwogCQlyY3VfcmVhZF91bmxvY2soKTsKIAotCQlkc3QgPSBpcDZfZHN0X2xvb2t1cF9m
bG93KHNrLCAmZmw2LCBmaW5hbF9wKTsKKwkJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2Nr
X25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAkJaWYgKElTX0VSUihkc3QpKSB7CiAJCQlz
ay0+c2tfcm91dGVfY2FwcyA9IDA7CiAJCQlzay0+c2tfZXJyX3NvZnQgPSAtUFRSX0VSUihkc3Qp
OwpkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvZGF0YWdyYW0uYyBiL25ldC9pcHY2L2RhdGFncmFtLmMK
aW5kZXggMWVlM2UwZDJiNTg3Li4xNmEyOGY0MzA3ZmIgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2Rh
dGFncmFtLmMKKysrIGIvbmV0L2lwdjYvZGF0YWdyYW0uYwpAQCAtODgsNyArODgsNyBAQCBpbnQg
aXA2X2RhdGFncmFtX2RzdF91cGRhdGUoc3RydWN0IHNvY2sgKnNrLCBib29sIGZpeF9za19zYWRk
cikKIAlmaW5hbF9wID0gZmw2X3VwZGF0ZV9kc3QoJmZsNiwgb3B0LCAmZmluYWwpOwogCXJjdV9y
ZWFkX3VubG9jaygpOwogCi0JZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgJmZsNiwgZmlu
YWxfcCk7CisJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNrLCAmZmw2
LCBmaW5hbF9wKTsKIAlpZiAoSVNfRVJSKGRzdCkpIHsKIAkJZXJyID0gUFRSX0VSUihkc3QpOwog
CQlnb3RvIG91dDsKZGlmZiAtLWdpdCBhL25ldC9pcHY2L2luZXQ2X2Nvbm5lY3Rpb25fc29jay5j
IGIvbmV0L2lwdjYvaW5ldDZfY29ubmVjdGlvbl9zb2NrLmMKaW5kZXggODkwYWRhZGNkYTE2Li45
MmZlOWU1NjVkYTAgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2luZXQ2X2Nvbm5lY3Rpb25fc29jay5j
CisrKyBiL25ldC9pcHY2L2luZXQ2X2Nvbm5lY3Rpb25fc29jay5jCkBAIC01Miw3ICs1Miw3IEBA
IHN0cnVjdCBkc3RfZW50cnkgKmluZXQ2X2Nza19yb3V0ZV9yZXEoY29uc3Qgc3RydWN0IHNvY2sg
KnNrLAogCWZsNi0+Zmxvd2k2X3VpZCA9IHNrLT5za191aWQ7CiAJc2VjdXJpdHlfcmVxX2NsYXNz
aWZ5X2Zsb3cocmVxLCBmbG93aTZfdG9fZmxvd2koZmw2KSk7CiAKLQlkc3QgPSBpcDZfZHN0X2xv
b2t1cF9mbG93KHNrLCBmbDYsIGZpbmFsX3ApOworCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3co
c29ja19uZXQoc2spLCBzaywgZmw2LCBmaW5hbF9wKTsKIAlpZiAoSVNfRVJSKGRzdCkpCiAJCXJl
dHVybiBOVUxMOwogCkBAIC0xMDcsNyArMTA3LDcgQEAgc3RhdGljIHN0cnVjdCBkc3RfZW50cnkg
KmluZXQ2X2Nza19yb3V0ZV9zb2NrZXQoc3RydWN0IHNvY2sgKnNrLAogCiAJZHN0ID0gX19pbmV0
Nl9jc2tfZHN0X2NoZWNrKHNrLCBucC0+ZHN0X2Nvb2tpZSk7CiAJaWYgKCFkc3QpIHsKLQkJZHN0
ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzaywgZmw2LCBmaW5hbF9wKTsKKwkJZHN0ID0gaXA2X2Rz
dF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNrLCBmbDYsIGZpbmFsX3ApOwogCiAJCWlmICgh
SVNfRVJSKGRzdCkpCiAJCQlpcDZfZHN0X3N0b3JlKHNrLCBkc3QsIE5VTEwsIE5VTEwpOwpkaWZm
IC0tZ2l0IGEvbmV0L2lwdjYvaXA2X291dHB1dC5jIGIvbmV0L2lwdjYvaXA2X291dHB1dC5jCmlu
ZGV4IDJhZjg0OWJhMzNjOS4uNTE5OGJjMTIzMjA0IDEwMDY0NAotLS0gYS9uZXQvaXB2Ni9pcDZf
b3V0cHV0LmMKKysrIGIvbmV0L2lwdjYvaXA2X291dHB1dC5jCkBAIC0xMDg5LDE5ICsxMDg5LDE5
IEBAIEVYUE9SVF9TWU1CT0xfR1BMKGlwNl9kc3RfbG9va3VwKTsKICAqCUl0IHJldHVybnMgYSB2
YWxpZCBkc3QgcG9pbnRlciBvbiBzdWNjZXNzLCBvciBhIHBvaW50ZXIgZW5jb2RlZAogICoJZXJy
b3IgY29kZS4KICAqLwotc3RydWN0IGRzdF9lbnRyeSAqaXA2X2RzdF9sb29rdXBfZmxvdyhjb25z
dCBzdHJ1Y3Qgc29jayAqc2ssIHN0cnVjdCBmbG93aTYgKmZsNiwKK3N0cnVjdCBkc3RfZW50cnkg
KmlwNl9kc3RfbG9va3VwX2Zsb3coc3RydWN0IG5ldCAqbmV0LCBjb25zdCBzdHJ1Y3Qgc29jayAq
c2ssIHN0cnVjdCBmbG93aTYgKmZsNiwKIAkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW42X2FkZHIg
KmZpbmFsX2RzdCkKIHsKIAlzdHJ1Y3QgZHN0X2VudHJ5ICpkc3QgPSBOVUxMOwogCWludCBlcnI7
CiAKLQllcnIgPSBpcDZfZHN0X2xvb2t1cF90YWlsKHNvY2tfbmV0KHNrKSwgc2ssICZkc3QsIGZs
Nik7CisJZXJyID0gaXA2X2RzdF9sb29rdXBfdGFpbChuZXQsIHNrLCAmZHN0LCBmbDYpOwogCWlm
IChlcnIpCiAJCXJldHVybiBFUlJfUFRSKGVycik7CiAJaWYgKGZpbmFsX2RzdCkKIAkJZmw2LT5k
YWRkciA9ICpmaW5hbF9kc3Q7CiAKLQlyZXR1cm4geGZybV9sb29rdXBfcm91dGUoc29ja19uZXQo
c2spLCBkc3QsIGZsb3dpNl90b19mbG93aShmbDYpLCBzaywgMCk7CisJcmV0dXJuIHhmcm1fbG9v
a3VwX3JvdXRlKG5ldCwgZHN0LCBmbG93aTZfdG9fZmxvd2koZmw2KSwgc2ssIDApOwogfQogRVhQ
T1JUX1NZTUJPTF9HUEwoaXA2X2RzdF9sb29rdXBfZmxvdyk7CiAKQEAgLTExMjYsNyArMTEyNiw3
IEBAIHN0cnVjdCBkc3RfZW50cnkgKmlwNl9za19kc3RfbG9va3VwX2Zsb3coc3RydWN0IHNvY2sg
KnNrLCBzdHJ1Y3QgZmxvd2k2ICpmbDYsCiAKIAlkc3QgPSBpcDZfc2tfZHN0X2NoZWNrKHNrLCBk
c3QsIGZsNik7CiAJaWYgKCFkc3QpCi0JCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc2ssIGZs
NiwgZmluYWxfZHN0KTsKKwkJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayks
IHNrLCBmbDYsIGZpbmFsX2RzdCk7CiAKIAlyZXR1cm4gZHN0OwogfQpkaWZmIC0tZ2l0IGEvbmV0
L2lwdjYvcmF3LmMgYi9uZXQvaXB2Ni9yYXcuYwppbmRleCBhYzQyODMxMTk2NWYuLjNkOWQyMDA3
NDIwMyAxMDA2NDQKLS0tIGEvbmV0L2lwdjYvcmF3LmMKKysrIGIvbmV0L2lwdjYvcmF3LmMKQEAg
LTkyOSw3ICs5MjksNyBAQCBzdGF0aWMgaW50IHJhd3Y2X3NlbmRtc2coc3RydWN0IHNvY2sgKnNr
LCBzdHJ1Y3QgbXNnaGRyICptc2csIHNpemVfdCBsZW4pCiAKIAlmbDYuZmxvd2xhYmVsID0gaXA2
X21ha2VfZmxvd2luZm8oaXBjNi50Y2xhc3MsIGZsNi5mbG93bGFiZWwpOwogCi0JZHN0ID0gaXA2
X2RzdF9sb29rdXBfZmxvdyhzaywgJmZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2RzdF9sb29r
dXBfZmxvdyhzb2NrX25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAlpZiAoSVNfRVJSKGRz
dCkpIHsKIAkJZXJyID0gUFRSX0VSUihkc3QpOwogCQlnb3RvIG91dDsKZGlmZiAtLWdpdCBhL25l
dC9pcHY2L3N5bmNvb2tpZXMuYyBiL25ldC9pcHY2L3N5bmNvb2tpZXMuYwppbmRleCA0ZTc4MTdh
YmMwYjkuLjBmZThmZmNkYTFkNyAxMDA2NDQKLS0tIGEvbmV0L2lwdjYvc3luY29va2llcy5jCisr
KyBiL25ldC9pcHY2L3N5bmNvb2tpZXMuYwpAQCAtMjM4LDcgKzIzOCw3IEBAIHN0cnVjdCBzb2Nr
ICpjb29raWVfdjZfY2hlY2soc3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiKQog
CQlmbDYuZmxvd2k2X3VpZCA9IHNrLT5za191aWQ7CiAJCXNlY3VyaXR5X3JlcV9jbGFzc2lmeV9m
bG93KHJlcSwgZmxvd2k2X3RvX2Zsb3dpKCZmbDYpKTsKIAotCQlkc3QgPSBpcDZfZHN0X2xvb2t1
cF9mbG93KHNrLCAmZmw2LCBmaW5hbF9wKTsKKwkJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhz
b2NrX25ldChzayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAkJaWYgKElTX0VSUihkc3QpKQogCQkJ
Z290byBvdXRfZnJlZTsKIAl9CmRpZmYgLS1naXQgYS9uZXQvaXB2Ni90Y3BfaXB2Ni5jIGIvbmV0
L2lwdjYvdGNwX2lwdjYuYwppbmRleCA3YjRjZTNmOWUyZjQuLmE1MTY0OTBkZTNkYiAxMDA2NDQK
LS0tIGEvbmV0L2lwdjYvdGNwX2lwdjYuYworKysgYi9uZXQvaXB2Ni90Y3BfaXB2Ni5jCkBAIC0y
NTIsNyArMjUyLDcgQEAgc3RhdGljIGludCB0Y3BfdjZfY29ubmVjdChzdHJ1Y3Qgc29jayAqc2ss
IHN0cnVjdCBzb2NrYWRkciAqdWFkZHIsCiAKIAlzZWN1cml0eV9za19jbGFzc2lmeV9mbG93KHNr
LCBmbG93aTZfdG9fZmxvd2koJmZsNikpOwogCi0JZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhz
aywgJmZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChz
ayksIHNrLCAmZmw2LCBmaW5hbF9wKTsKIAlpZiAoSVNfRVJSKGRzdCkpIHsKIAkJZXJyID0gUFRS
X0VSUihkc3QpOwogCQlnb3RvIGZhaWx1cmU7CkBAIC04NjUsNyArODY1LDcgQEAgc3RhdGljIHZv
aWQgdGNwX3Y2X3NlbmRfcmVzcG9uc2UoY29uc3Qgc3RydWN0IHNvY2sgKnNrLCBzdHJ1Y3Qgc2tf
YnVmZiAqc2tiLCB1MzIKIAkgKiBVbmRlcmx5aW5nIGZ1bmN0aW9uIHdpbGwgdXNlIHRoaXMgdG8g
cmV0cmlldmUgdGhlIG5ldHdvcmsKIAkgKiBuYW1lc3BhY2UKIAkgKi8KLQlkc3QgPSBpcDZfZHN0
X2xvb2t1cF9mbG93KGN0bF9zaywgJmZsNiwgTlVMTCk7CisJZHN0ID0gaXA2X2RzdF9sb29rdXBf
Zmxvdyhzb2NrX25ldChjdGxfc2spLCBjdGxfc2ssICZmbDYsIE5VTEwpOwogCWlmICghSVNfRVJS
KGRzdCkpIHsKIAkJc2tiX2RzdF9zZXQoYnVmZiwgZHN0KTsKIAkJaXA2X3htaXQoY3RsX3NrLCBi
dWZmLCAmZmw2LCBmbDYuZmxvd2k2X21hcmssIE5VTEwsIHRjbGFzcyk7CmRpZmYgLS1naXQgYS9u
ZXQvbDJ0cC9sMnRwX2lwNi5jIGIvbmV0L2wydHAvbDJ0cF9pcDYuYwppbmRleCBiZWMxMzIyNmNl
NGYuLjZlZmRmYzliNWM0MyAxMDA2NDQKLS0tIGEvbmV0L2wydHAvbDJ0cF9pcDYuYworKysgYi9u
ZXQvbDJ0cC9sMnRwX2lwNi5jCkBAIC02MjksNyArNjI5LDcgQEAgc3RhdGljIGludCBsMnRwX2lw
Nl9zZW5kbXNnKHN0cnVjdCBzb2NrICpzaywgc3RydWN0IG1zZ2hkciAqbXNnLCBzaXplX3QgbGVu
KQogCiAJZmw2LmZsb3dsYWJlbCA9IGlwNl9tYWtlX2Zsb3dpbmZvKGlwYzYudGNsYXNzLCBmbDYu
Zmxvd2xhYmVsKTsKIAotCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc2ssICZmbDYsIGZpbmFs
X3ApOworCWRzdCA9IGlwNl9kc3RfbG9va3VwX2Zsb3coc29ja19uZXQoc2spLCBzaywgJmZsNiwg
ZmluYWxfcCk7CiAJaWYgKElTX0VSUihkc3QpKSB7CiAJCWVyciA9IFBUUl9FUlIoZHN0KTsKIAkJ
Z290byBvdXQ7CmRpZmYgLS1naXQgYS9uZXQvc2N0cC9pcHY2LmMgYi9uZXQvc2N0cC9pcHY2LmMK
aW5kZXggMThlZmI4Y2M0NjkzLi5iNjFlOWVkMTA5ZjYgMTAwNjQ0Ci0tLSBhL25ldC9zY3RwL2lw
djYuYworKysgYi9uZXQvc2N0cC9pcHY2LmMKQEAgLTI3MSw3ICsyNzEsNyBAQCBzdGF0aWMgdm9p
ZCBzY3RwX3Y2X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2Fk
ZHIgKnNhZGRyLAogCWZpbmFsX3AgPSBmbDZfdXBkYXRlX2RzdChmbDYsIHJjdV9kZXJlZmVyZW5j
ZShucC0+b3B0KSwgJmZpbmFsKTsKIAlyY3VfcmVhZF91bmxvY2soKTsKIAotCWRzdCA9IGlwNl9k
c3RfbG9va3VwX2Zsb3coc2ssIGZsNiwgZmluYWxfcCk7CisJZHN0ID0gaXA2X2RzdF9sb29rdXBf
Zmxvdyhzb2NrX25ldChzayksIHNrLCBmbDYsIGZpbmFsX3ApOwogCWlmICghYXNvYyB8fCBzYWRk
cikgewogCQl0LT5kc3QgPSBkc3Q7CiAJCW1lbWNweShmbCwgJl9mbCwgc2l6ZW9mKF9mbCkpOwpA
QCAtMzI5LDcgKzMyOSw3IEBAIHN0YXRpYyB2b2lkIHNjdHBfdjZfZ2V0X2RzdChzdHJ1Y3Qgc2N0
cF90cmFuc3BvcnQgKnQsIHVuaW9uIHNjdHBfYWRkciAqc2FkZHIsCiAJCWZsNi0+c2FkZHIgPSBs
YWRkci0+YS52Ni5zaW42X2FkZHI7CiAJCWZsNi0+Zmw2X3Nwb3J0ID0gbGFkZHItPmEudjYuc2lu
Nl9wb3J0OwogCQlmaW5hbF9wID0gZmw2X3VwZGF0ZV9kc3QoZmw2LCByY3VfZGVyZWZlcmVuY2Uo
bnAtPm9wdCksICZmaW5hbCk7Ci0JCWJkc3QgPSBpcDZfZHN0X2xvb2t1cF9mbG93KHNrLCBmbDYs
IGZpbmFsX3ApOworCQliZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNr
LCBmbDYsIGZpbmFsX3ApOwogCiAJCWlmIChJU19FUlIoYmRzdCkpCiAJCQljb250aW51ZTsKCkZy
b20gNjNhYWNlMDk1ZGNmMjQzZDY2ZTZmYjBiZmIzMDY2ZDAxYzQ0ZGIyNiBNb24gU2VwIDE3IDAw
OjAwOjAwIDIwMDEKRnJvbTogU2FicmluYSBEdWJyb2NhIDxzZEBxdWVhc3lzbmFpbC5uZXQ+CkRh
dGU6IFdlZCwgNCBEZWMgMjAxOSAxNTozNTo1MyArMDEwMApTdWJqZWN0OiBuZXQ6IGlwdjZfc3R1
YjogdXNlIGlwNl9kc3RfbG9va3VwX2Zsb3cgaW5zdGVhZCBvZiBpcDZfZHN0X2xvb2t1cAoKY29t
bWl0IDZjODk5MWY0MTU0NmMzYzQ3MjUwM2RmZjFlYTlkYWFkZGY5MzMxYzIgdXBzdHJlYW0uCgpp
cHY2X3N0dWIgdXNlcyB0aGUgaXA2X2RzdF9sb29rdXAgZnVuY3Rpb24gdG8gYWxsb3cgb3RoZXIg
bW9kdWxlcyB0bwpwZXJmb3JtIElQdjYgbG9va3Vwcy4gSG93ZXZlciwgdGhpcyBmdW5jdGlvbiBz
a2lwcyB0aGUgWEZSTSBsYXllcgplbnRpcmVseS4KCkFsbCB1c2VycyBvZiBpcHY2X3N0dWItPmlw
Nl9kc3RfbG9va3VwIHVzZSBpcF9yb3V0ZV9vdXRwdXRfZmxvdyAodmlhIHRoZQppcF9yb3V0ZV9v
dXRwdXRfa2V5IGFuZCBpcF9yb3V0ZV9vdXRwdXQgaGVscGVycykgZm9yIHRoZWlyIElQdjQgbG9v
a3VwcywKd2hpY2ggY2FsbHMgeGZybV9sb29rdXBfcm91dGUoKS4gVGhpcyBwYXRjaCBmaXhlcyB0
aGlzIGluY29uc2lzdGVudApiZWhhdmlvciBieSBzd2l0Y2hpbmcgdGhlIHN0dWIgdG8gaXA2X2Rz
dF9sb29rdXBfZmxvdywgd2hpY2ggYWxzbyBjYWxscwp4ZnJtX2xvb2t1cF9yb3V0ZSgpLgoKVGhp
cyByZXF1aXJlcyBzb21lIGNoYW5nZXMgaW4gYWxsIHRoZSBjYWxsZXJzLCBhcyB0aGVzZSB0d28g
ZnVuY3Rpb25zCnRha2UgZGlmZmVyZW50IGFyZ3VtZW50cyBhbmQgaGF2ZSBkaWZmZXJlbnQgcmV0
dXJuIHR5cGVzLgoKRml4ZXM6IDVmODFiZDJlNWQ4MCAoImlwdjY6IGV4cG9ydCBhIHN0dWIgZm9y
IElQdjYgc3ltYm9scyB1c2VkIGJ5IHZ4bGFuIikKUmVwb3J0ZWQtYnk6IFhpdW1laSBNdSA8eG11
QHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6IFNhYnJpbmEgRHVicm9jYSA8c2RAcXVlYXN5c25h
aWwubmV0PgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5u
ZXQ+Cltid2g6IEJhY2twb3J0ZWQgdG8gNC4xNDoKIC0gRHJvcCBjaGFuZ2UgaW4gbHd0X2JwZi5j
CiAtIERlbGV0ZSBub3ctdW51c2VkICJyZXQiIGluIG1seDVlX3JvdXRlX2xvb2t1cF9pcHY2KCkK
IC0gSW5pdGlhbGlzZSAib3V0X2RldiIgaW4gbWx4NWVfY3JlYXRlX2VuY2FwX2hlYWRlcl9pcHY2
KCkgdG8gYXZvaWQKICAgaW50cm9kdWNpbmcgYSBzcHVyaW91cyAibWF5IGJlIHVzZWQgdW5pbml0
aWFsaXNlZCIgd2FybmluZwogLSBBZGp1c3QgZmlsZW5hbWVzLCBjb250ZXh0LCBpbmRlbnRhdGlv
bl0KU2lnbmVkLW9mZi1ieTogQmVuIEh1dGNoaW5ncyA8YmVuLmh1dGNoaW5nc0Bjb2RldGhpbmsu
Y28udWs+Ci0tLQogZHJpdmVycy9pbmZpbmliYW5kL2NvcmUvYWRkci5jICAgICAgICAgICAgICAg
ICAgfCAgNyArKystLS0tCiBkcml2ZXJzL2luZmluaWJhbmQvc3cvcnhlL3J4ZV9uZXQuYyAgICAg
ICAgICAgICB8ICA4ICsrKysrLS0tCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9tbHg1
L2NvcmUvZW5fdGMuYyB8IDExICsrKysrLS0tLS0tCiBkcml2ZXJzL25ldC9nZW5ldmUuYyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICA0ICsrKy0KIGRyaXZlcnMvbmV0L3Z4bGFuLmMgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDggKysrLS0tLS0KIGluY2x1ZGUvbmV0L2FkZHJj
b25mLmggICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDYgKysrKy0tCiBuZXQvaXB2Ni9hZGRy
Y29uZl9jb3JlLmMgICAgICAgICAgICAgICAgICAgICAgICB8IDExICsrKysrKy0tLS0tCiBuZXQv
aXB2Ni9hZl9pbmV0Ni5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBuZXQv
bXBscy9hZl9tcGxzLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICA3ICsrKy0tLS0K
IG5ldC90aXBjL3VkcF9tZWRpYS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDkgKysr
KysrLS0tCiAxMCBmaWxlcyBjaGFuZ2VkLCAzOSBpbnNlcnRpb25zKCspLCAzNCBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2luZmluaWJhbmQvY29yZS9hZGRyLmMgYi9kcml2ZXJz
L2luZmluaWJhbmQvY29yZS9hZGRyLmMKaW5kZXggYzJiYmUwZGYwOTMxLi5jMGMxODBmYzZmYjIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW5maW5pYmFuZC9jb3JlL2FkZHIuYworKysgYi9kcml2ZXJz
L2luZmluaWJhbmQvY29yZS9hZGRyLmMKQEAgLTQ1MCwxNiArNDUwLDE1IEBAIHN0YXRpYyBpbnQg
YWRkcjZfcmVzb2x2ZShzdHJ1Y3Qgc29ja2FkZHJfaW42ICpzcmNfaW4sCiAJc3RydWN0IGZsb3dp
NiBmbDY7CiAJc3RydWN0IGRzdF9lbnRyeSAqZHN0OwogCXN0cnVjdCBydDZfaW5mbyAqcnQ7Ci0J
aW50IHJldDsKIAogCW1lbXNldCgmZmw2LCAwLCBzaXplb2YgZmw2KTsKIAlmbDYuZGFkZHIgPSBk
c3RfaW4tPnNpbjZfYWRkcjsKIAlmbDYuc2FkZHIgPSBzcmNfaW4tPnNpbjZfYWRkcjsKIAlmbDYu
Zmxvd2k2X29pZiA9IGFkZHItPmJvdW5kX2Rldl9pZjsKIAotCXJldCA9IGlwdjZfc3R1Yi0+aXB2
Nl9kc3RfbG9va3VwKGFkZHItPm5ldCwgTlVMTCwgJmRzdCwgJmZsNik7Ci0JaWYgKHJldCA8IDAp
Ci0JCXJldHVybiByZXQ7CisJZHN0ID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXBfZmxvdyhh
ZGRyLT5uZXQsIE5VTEwsICZmbDYsIE5VTEwpOworCWlmIChJU19FUlIoZHN0KSkKKwkJcmV0dXJu
IFBUUl9FUlIoZHN0KTsKIAogCXJ0ID0gKHN0cnVjdCBydDZfaW5mbyAqKWRzdDsKIAlpZiAoaXB2
Nl9hZGRyX2FueSgmc3JjX2luLT5zaW42X2FkZHIpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lu
ZmluaWJhbmQvc3cvcnhlL3J4ZV9uZXQuYyBiL2RyaXZlcnMvaW5maW5pYmFuZC9zdy9yeGUvcnhl
X25ldC5jCmluZGV4IDU5ZGVlMTBiZWJjYi4uMjRhNjhhOWRhOGJlIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2luZmluaWJhbmQvc3cvcnhlL3J4ZV9uZXQuYworKysgYi9kcml2ZXJzL2luZmluaWJhbmQv
c3cvcnhlL3J4ZV9uZXQuYwpAQCAtMTU0LDEwICsxNTQsMTIgQEAgc3RhdGljIHN0cnVjdCBkc3Rf
ZW50cnkgKnJ4ZV9maW5kX3JvdXRlNihzdHJ1Y3QgbmV0X2RldmljZSAqbmRldiwKIAltZW1jcHko
JmZsNi5kYWRkciwgZGFkZHIsIHNpemVvZigqZGFkZHIpKTsKIAlmbDYuZmxvd2k2X3Byb3RvID0g
SVBQUk9UT19VRFA7CiAKLQlpZiAodW5saWtlbHkoaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXAo
c29ja19uZXQocmVjdl9zb2NrZXRzLnNrNi0+c2spLAotCQkJCQkJcmVjdl9zb2NrZXRzLnNrNi0+
c2ssICZuZHN0LCAmZmw2KSkpIHsKKwluZHN0ID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXBf
Zmxvdyhzb2NrX25ldChyZWN2X3NvY2tldHMuc2s2LT5zayksCisJCQkJCSAgICAgICByZWN2X3Nv
Y2tldHMuc2s2LT5zaywgJmZsNiwKKwkJCQkJICAgICAgIE5VTEwpOworCWlmICh1bmxpa2VseShJ
U19FUlIobmRzdCkpKSB7CiAJCXByX2Vycl9yYXRlbGltaXRlZCgibm8gcm91dGUgdG8gJXBJNlxu
IiwgZGFkZHIpOwotCQlnb3RvIHB1dDsKKwkJcmV0dXJuIE5VTEw7CiAJfQogCiAJaWYgKHVubGlr
ZWx5KG5kc3QtPmVycm9yKSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvbWVs
bGFub3gvbWx4NS9jb3JlL2VuX3RjLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9tZWxsYW5veC9t
bHg1L2NvcmUvZW5fdGMuYwppbmRleCA1MTAzYjgyZmU2YzUuLjNjMTcxOWU5MjI0YSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvbWVsbGFub3gvbWx4NS9jb3JlL2VuX3RjLmMKKysr
IGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvbWVsbGFub3gvbWx4NS9jb3JlL2VuX3RjLmMKQEAgLTE1
NTAsMTIgKzE1NTAsMTEgQEAgc3RhdGljIGludCBtbHg1ZV9yb3V0ZV9sb29rdXBfaXB2NihzdHJ1
Y3QgbWx4NWVfcHJpdiAqcHJpdiwKIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0lORVQpICYmIElT
X0VOQUJMRUQoQ09ORklHX0lQVjYpCiAJc3RydWN0IG1seDVfZXN3aXRjaCAqZXN3ID0gcHJpdi0+
bWRldi0+cHJpdi5lc3dpdGNoOwotCWludCByZXQ7CiAKLQlyZXQgPSBpcHY2X3N0dWItPmlwdjZf
ZHN0X2xvb2t1cChkZXZfbmV0KG1pcnJlZF9kZXYpLCBOVUxMLCAmZHN0LAotCQkJCQkgZmw2KTsK
LQlpZiAocmV0IDwgMCkKLQkJcmV0dXJuIHJldDsKKwlkc3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0
X2xvb2t1cF9mbG93KGRldl9uZXQobWlycmVkX2RldiksIE5VTEwsIGZsNiwKKwkJCQkJICAgICAg
TlVMTCk7CisJaWYgKElTX0VSUihkc3QpKQorCQlyZXR1cm4gUFRSX0VSUihkc3QpOwogCiAJKm91
dF90dGwgPSBpcDZfZHN0X2hvcGxpbWl0KGRzdCk7CiAKQEAgLTE3NTQsNyArMTc1Myw3IEBAIHN0
YXRpYyBpbnQgbWx4NWVfY3JlYXRlX2VuY2FwX2hlYWRlcl9pcHY2KHN0cnVjdCBtbHg1ZV9wcml2
ICpwcml2LAogCWludCBtYXhfZW5jYXBfc2l6ZSA9IE1MWDVfQ0FQX0VTVyhwcml2LT5tZGV2LCBt
YXhfZW5jYXBfaGVhZGVyX3NpemUpOwogCWludCBpcHY2X2VuY2FwX3NpemUgPSBFVEhfSExFTiAr
IHNpemVvZihzdHJ1Y3QgaXB2NmhkcikgKyBWWExBTl9ITEVOOwogCXN0cnVjdCBpcF90dW5uZWxf
a2V5ICp0dW5fa2V5ID0gJmUtPnR1bl9pbmZvLmtleTsKLQlzdHJ1Y3QgbmV0X2RldmljZSAqb3V0
X2RldjsKKwlzdHJ1Y3QgbmV0X2RldmljZSAqb3V0X2RldiA9IE5VTEw7CiAJc3RydWN0IG5laWdo
Ym91ciAqbiA9IE5VTEw7CiAJc3RydWN0IGZsb3dpNiBmbDYgPSB7fTsKIAljaGFyICplbmNhcF9o
ZWFkZXI7CmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9nZW5ldmUuYyBiL2RyaXZlcnMvbmV0L2dl
bmV2ZS5jCmluZGV4IDU1YzRiMjk1ZWQwZS4uZWZmMjBiNmFmZWJhIDEwMDY0NAotLS0gYS9kcml2
ZXJzL25ldC9nZW5ldmUuYworKysgYi9kcml2ZXJzL25ldC9nZW5ldmUuYwpAQCAtNzk2LDcgKzc5
Niw5IEBAIHN0YXRpYyBzdHJ1Y3QgZHN0X2VudHJ5ICpnZW5ldmVfZ2V0X3Y2X2RzdChzdHJ1Y3Qg
c2tfYnVmZiAqc2tiLAogCQlpZiAoZHN0KQogCQkJcmV0dXJuIGRzdDsKIAl9Ci0JaWYgKGlwdjZf
c3R1Yi0+aXB2Nl9kc3RfbG9va3VwKGdlbmV2ZS0+bmV0LCBnczYtPnNvY2stPnNrLCAmZHN0LCBm
bDYpKSB7CisJZHN0ID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9sb29rdXBfZmxvdyhnZW5ldmUtPm5l
dCwgZ3M2LT5zb2NrLT5zaywgZmw2LAorCQkJCQkgICAgICBOVUxMKTsKKwlpZiAoSVNfRVJSKGRz
dCkpIHsKIAkJbmV0ZGV2X2RiZyhkZXYsICJubyByb3V0ZSB0byAlcEk2XG4iLCAmZmw2LT5kYWRk
cik7CiAJCXJldHVybiBFUlJfUFRSKC1FTkVUVU5SRUFDSCk7CiAJfQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9uZXQvdnhsYW4uYyBiL2RyaXZlcnMvbmV0L3Z4bGFuLmMKaW5kZXggOTI3ZDYyYzc2YTYw
Li45YmNhOTdkNWYwNjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L3Z4bGFuLmMKKysrIGIvZHJp
dmVycy9uZXQvdnhsYW4uYwpAQCAtMTk2Miw3ICsxOTYyLDYgQEAgc3RhdGljIHN0cnVjdCBkc3Rf
ZW50cnkgKnZ4bGFuNl9nZXRfcm91dGUoc3RydWN0IHZ4bGFuX2RldiAqdnhsYW4sCiAJYm9vbCB1
c2VfY2FjaGUgPSBpcF90dW5uZWxfZHN0X2NhY2hlX3VzYWJsZShza2IsIGluZm8pOwogCXN0cnVj
dCBkc3RfZW50cnkgKm5kc3Q7CiAJc3RydWN0IGZsb3dpNiBmbDY7Ci0JaW50IGVycjsKIAogCWlm
ICghc29jazYpCiAJCXJldHVybiBFUlJfUFRSKC1FSU8pOwpAQCAtMTk4NSwxMCArMTk4NCw5IEBA
IHN0YXRpYyBzdHJ1Y3QgZHN0X2VudHJ5ICp2eGxhbjZfZ2V0X3JvdXRlKHN0cnVjdCB2eGxhbl9k
ZXYgKnZ4bGFuLAogCWZsNi5mbDZfZHBvcnQgPSBkcG9ydDsKIAlmbDYuZmw2X3Nwb3J0ID0gc3Bv
cnQ7CiAKLQllcnIgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cCh2eGxhbi0+bmV0LAotCQkJ
CQkgc29jazYtPnNvY2stPnNrLAotCQkJCQkgJm5kc3QsICZmbDYpOwotCWlmICh1bmxpa2VseShl
cnIgPCAwKSkgeworCW5kc3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cF9mbG93KHZ4bGFu
LT5uZXQsIHNvY2s2LT5zb2NrLT5zaywKKwkJCQkJICAgICAgICZmbDYsIE5VTEwpOworCWlmICh1
bmxpa2VseShJU19FUlIobmRzdCkpKSB7CiAJCW5ldGRldl9kYmcoZGV2LCAibm8gcm91dGUgdG8g
JXBJNlxuIiwgZGFkZHIpOwogCQlyZXR1cm4gRVJSX1BUUigtRU5FVFVOUkVBQ0gpOwogCX0KZGlm
ZiAtLWdpdCBhL2luY2x1ZGUvbmV0L2FkZHJjb25mLmggYi9pbmNsdWRlL25ldC9hZGRyY29uZi5o
CmluZGV4IDM1ZjVhYWJkNDMyZi4uZjMwZWU5OWExZDcyIDEwMDY0NAotLS0gYS9pbmNsdWRlL25l
dC9hZGRyY29uZi5oCisrKyBiL2luY2x1ZGUvbmV0L2FkZHJjb25mLmgKQEAgLTIyMyw4ICsyMjMs
MTAgQEAgc3RydWN0IGlwdjZfc3R1YiB7CiAJCQkJIGNvbnN0IHN0cnVjdCBpbjZfYWRkciAqYWRk
cik7CiAJaW50ICgqaXB2Nl9zb2NrX21jX2Ryb3ApKHN0cnVjdCBzb2NrICpzaywgaW50IGlmaW5k
ZXgsCiAJCQkJIGNvbnN0IHN0cnVjdCBpbjZfYWRkciAqYWRkcik7Ci0JaW50ICgqaXB2Nl9kc3Rf
bG9va3VwKShzdHJ1Y3QgbmV0ICpuZXQsIHN0cnVjdCBzb2NrICpzaywKLQkJCSAgICAgICBzdHJ1
Y3QgZHN0X2VudHJ5ICoqZHN0LCBzdHJ1Y3QgZmxvd2k2ICpmbDYpOworCXN0cnVjdCBkc3RfZW50
cnkgKigqaXB2Nl9kc3RfbG9va3VwX2Zsb3cpKHN0cnVjdCBuZXQgKm5ldCwKKwkJCQkJCSAgY29u
c3Qgc3RydWN0IHNvY2sgKnNrLAorCQkJCQkJICBzdHJ1Y3QgZmxvd2k2ICpmbDYsCisJCQkJCQkg
IGNvbnN0IHN0cnVjdCBpbjZfYWRkciAqZmluYWxfZHN0KTsKIAl2b2lkICgqdWRwdjZfZW5jYXBf
ZW5hYmxlKSh2b2lkKTsKIAl2b2lkICgqbmRpc2Nfc2VuZF9uYSkoc3RydWN0IG5ldF9kZXZpY2Ug
KmRldiwgY29uc3Qgc3RydWN0IGluNl9hZGRyICpkYWRkciwKIAkJCSAgICAgIGNvbnN0IHN0cnVj
dCBpbjZfYWRkciAqc29saWNpdGVkX2FkZHIsCmRpZmYgLS1naXQgYS9uZXQvaXB2Ni9hZGRyY29u
Zl9jb3JlLmMgYi9uZXQvaXB2Ni9hZGRyY29uZl9jb3JlLmMKaW5kZXggOWUzNDg4ZDUwYjE1Li5l
NmM1YTRiNTkyMWQgMTAwNjQ0Ci0tLSBhL25ldC9pcHY2L2FkZHJjb25mX2NvcmUuYworKysgYi9u
ZXQvaXB2Ni9hZGRyY29uZl9jb3JlLmMKQEAgLTEyNiwxNSArMTI2LDE2IEBAIGludCBpbmV0NmFk
ZHJfdmFsaWRhdG9yX25vdGlmaWVyX2NhbGxfY2hhaW4odW5zaWduZWQgbG9uZyB2YWwsIHZvaWQg
KnYpCiB9CiBFWFBPUlRfU1lNQk9MKGluZXQ2YWRkcl92YWxpZGF0b3Jfbm90aWZpZXJfY2FsbF9j
aGFpbik7CiAKLXN0YXRpYyBpbnQgZWFmbm9zdXBwb3J0X2lwdjZfZHN0X2xvb2t1cChzdHJ1Y3Qg
bmV0ICpuZXQsIHN0cnVjdCBzb2NrICp1MSwKLQkJCQkJc3RydWN0IGRzdF9lbnRyeSAqKnUyLAot
CQkJCQlzdHJ1Y3QgZmxvd2k2ICp1MykKK3N0YXRpYyBzdHJ1Y3QgZHN0X2VudHJ5ICplYWZub3N1
cHBvcnRfaXB2Nl9kc3RfbG9va3VwX2Zsb3coc3RydWN0IG5ldCAqbmV0LAorCQkJCQkJCSAgIGNv
bnN0IHN0cnVjdCBzb2NrICpzaywKKwkJCQkJCQkgICBzdHJ1Y3QgZmxvd2k2ICpmbDYsCisJCQkJ
CQkJICAgY29uc3Qgc3RydWN0IGluNl9hZGRyICpmaW5hbF9kc3QpCiB7Ci0JcmV0dXJuIC1FQUZO
T1NVUFBPUlQ7CisJcmV0dXJuIEVSUl9QVFIoLUVBRk5PU1VQUE9SVCk7CiB9CiAKIGNvbnN0IHN0
cnVjdCBpcHY2X3N0dWIgKmlwdjZfc3R1YiBfX3JlYWRfbW9zdGx5ID0gJihzdHJ1Y3QgaXB2Nl9z
dHViKSB7Ci0JLmlwdjZfZHN0X2xvb2t1cCA9IGVhZm5vc3VwcG9ydF9pcHY2X2RzdF9sb29rdXAs
CisJLmlwdjZfZHN0X2xvb2t1cF9mbG93ID0gZWFmbm9zdXBwb3J0X2lwdjZfZHN0X2xvb2t1cF9m
bG93LAogfTsKIEVYUE9SVF9TWU1CT0xfR1BMKGlwdjZfc3R1Yik7CiAKZGlmZiAtLWdpdCBhL25l
dC9pcHY2L2FmX2luZXQ2LmMgYi9uZXQvaXB2Ni9hZl9pbmV0Ni5jCmluZGV4IDE5OGQ0ZWMwMDk2
OS4uMTMyMjJmMzI3NjNlIDEwMDY0NAotLS0gYS9uZXQvaXB2Ni9hZl9pbmV0Ni5jCisrKyBiL25l
dC9pcHY2L2FmX2luZXQ2LmMKQEAgLTg3NCw3ICs4NzQsNyBAQCBzdGF0aWMgc3RydWN0IHBlcm5l
dF9vcGVyYXRpb25zIGluZXQ2X25ldF9vcHMgPSB7CiBzdGF0aWMgY29uc3Qgc3RydWN0IGlwdjZf
c3R1YiBpcHY2X3N0dWJfaW1wbCA9IHsKIAkuaXB2Nl9zb2NrX21jX2pvaW4gPSBpcHY2X3NvY2tf
bWNfam9pbiwKIAkuaXB2Nl9zb2NrX21jX2Ryb3AgPSBpcHY2X3NvY2tfbWNfZHJvcCwKLQkuaXB2
Nl9kc3RfbG9va3VwID0gaXA2X2RzdF9sb29rdXAsCisJLmlwdjZfZHN0X2xvb2t1cF9mbG93ID0g
aXA2X2RzdF9sb29rdXBfZmxvdywKIAkudWRwdjZfZW5jYXBfZW5hYmxlID0gdWRwdjZfZW5jYXBf
ZW5hYmxlLAogCS5uZGlzY19zZW5kX25hID0gbmRpc2Nfc2VuZF9uYSwKIAkubmRfdGJsCT0gJm5k
X3RibCwKZGlmZiAtLWdpdCBhL25ldC9tcGxzL2FmX21wbHMuYyBiL25ldC9tcGxzL2FmX21wbHMu
YwppbmRleCA5YTE1M2Y2NGI4ZDcuLjAwZWRlNzA5ZGIyZSAxMDA2NDQKLS0tIGEvbmV0L21wbHMv
YWZfbXBscy5jCisrKyBiL25ldC9tcGxzL2FmX21wbHMuYwpAQCAtNTg3LDE2ICs1ODcsMTUgQEAg
c3RhdGljIHN0cnVjdCBuZXRfZGV2aWNlICppbmV0Nl9maWJfbG9va3VwX2RldihzdHJ1Y3QgbmV0
ICpuZXQsCiAJc3RydWN0IG5ldF9kZXZpY2UgKmRldjsKIAlzdHJ1Y3QgZHN0X2VudHJ5ICpkc3Q7
CiAJc3RydWN0IGZsb3dpNiBmbDY7Ci0JaW50IGVycjsKIAogCWlmICghaXB2Nl9zdHViKQogCQly
ZXR1cm4gRVJSX1BUUigtRUFGTk9TVVBQT1JUKTsKIAogCW1lbXNldCgmZmw2LCAwLCBzaXplb2Yo
Zmw2KSk7CiAJbWVtY3B5KCZmbDYuZGFkZHIsIGFkZHIsIHNpemVvZihzdHJ1Y3QgaW42X2FkZHIp
KTsKLQllcnIgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cChuZXQsIE5VTEwsICZkc3QsICZm
bDYpOwotCWlmIChlcnIpCi0JCXJldHVybiBFUlJfUFRSKGVycik7CisJZHN0ID0gaXB2Nl9zdHVi
LT5pcHY2X2RzdF9sb29rdXBfZmxvdyhuZXQsIE5VTEwsICZmbDYsIE5VTEwpOworCWlmIChJU19F
UlIoZHN0KSkKKwkJcmV0dXJuIEVSUl9DQVNUKGRzdCk7CiAKIAlkZXYgPSBkc3QtPmRldjsKIAlk
ZXZfaG9sZChkZXYpOwpkaWZmIC0tZ2l0IGEvbmV0L3RpcGMvdWRwX21lZGlhLmMgYi9uZXQvdGlw
Yy91ZHBfbWVkaWEuYwppbmRleCBkZTAxMWZkZDc5NjQuLjRkMGViNDFlZmViZSAxMDA2NDQKLS0t
IGEvbmV0L3RpcGMvdWRwX21lZGlhLmMKKysrIGIvbmV0L3RpcGMvdWRwX21lZGlhLmMKQEAgLTE4
NywxMCArMTg3LDEzIEBAIHN0YXRpYyBpbnQgdGlwY191ZHBfeG1pdChzdHJ1Y3QgbmV0ICpuZXQs
IHN0cnVjdCBza19idWZmICpza2IsCiAJCQkuc2FkZHIgPSBzcmMtPmlwdjYsCiAJCQkuZmxvd2k2
X3Byb3RvID0gSVBQUk9UT19VRFAKIAkJfTsKLQkJZXJyID0gaXB2Nl9zdHViLT5pcHY2X2RzdF9s
b29rdXAobmV0LCB1Yi0+dWJzb2NrLT5zaywgJm5kc3QsCi0JCQkJCQkgJmZsNik7Ci0JCWlmIChl
cnIpCisJCW5kc3QgPSBpcHY2X3N0dWItPmlwdjZfZHN0X2xvb2t1cF9mbG93KG5ldCwKKwkJCQkJ
CSAgICAgICB1Yi0+dWJzb2NrLT5zaywKKwkJCQkJCSAgICAgICAmZmw2LCBOVUxMKTsKKwkJaWYg
KElTX0VSUihuZHN0KSkgeworCQkJZXJyID0gUFRSX0VSUihuZHN0KTsKIAkJCWdvdG8gdHhfZXJy
b3I7CisJCX0KIAkJdHRsID0gaXA2X2RzdF9ob3BsaW1pdChuZHN0KTsKIAkJZXJyID0gdWRwX3R1
bm5lbDZfeG1pdF9za2IobmRzdCwgdWItPnVic29jay0+c2ssIHNrYiwgTlVMTCwKIAkJCQkJICAg
JnNyYy0+aXB2NiwgJmRzdC0+aXB2NiwgMCwgdHRsLCAwLAoKRnJvbSA2MmIwMDViMjAwZmEzYjI2
OTZmOGZkNDc2MjQ2N2IxMTkwZDc3OGQ3IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBK
ZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRhdGU6IFN1biwgNSBOb3YgMjAxNyAwOToxMzo0
OCAtMDcwMApTdWJqZWN0OiBibGt0cmFjZTogZml4IHVubG9ja2VkIGFjY2VzcyB0byBpbml0L3N0
YXJ0LXN0b3AvdGVhcmRvd24KCmNvbW1pdCAxZjJjYWMxMDdjNTkxYzI0YjYwYjExNWQ2MDUwYWRj
MjEzZDEwZmMwIHVwc3RyZWFtLgoKc2cuYyBjYWxscyBpbnRvIHRoZSBibGt0cmFjZSBmdW5jdGlv
bnMgd2l0aG91dCBob2xkaW5nIHRoZSBwcm9wZXIgcXVldWUKbXV0ZXggZm9yIGRvaW5nIHNldHVw
LCBzdGFydC9zdG9wLCBvciB0ZWFyZG93bi4KCkFkZCBpbnRlcm5hbCB1bmxvY2tlZCB2YXJpYW50
cywgYW5kIGV4cG9ydCB0aGUgb25lcyB0aGF0IGRvIHRoZSBwcm9wZXIKbG9ja2luZy4KCkZpeGVz
OiA2ZGExMjdhZDA5MTggKCJibGt0cmFjZTogQWRkIGJsa3RyYWNlIGlvY3RscyB0byBTQ1NJIGdl
bmVyaWMgZGV2aWNlcyIpClRlc3RlZC1ieTogRG1pdHJ5IFZ5dWtvdiA8ZHZ5dWtvdkBnb29nbGUu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+ClNpZ25lZC1v
ZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbi5odXRjaGluZ3NAY29kZXRoaW5rLmNvLnVrPgotLS0K
IGtlcm5lbC90cmFjZS9ibGt0cmFjZS5jIHwgNTggKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA0OCBpbnNlcnRpb25zKCspLCAxMCBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYyBiL2tlcm5lbC90
cmFjZS9ibGt0cmFjZS5jCmluZGV4IDcxYThlZTZlNjBkYy4uZTFiODZlZGRkYzZlIDEwMDY0NAot
LS0gYS9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYworKysgYi9rZXJuZWwvdHJhY2UvYmxrdHJhY2Uu
YwpAQCAtMzUyLDcgKzM1Miw3IEBAIHN0YXRpYyB2b2lkIGJsa190cmFjZV9jbGVhbnVwKHN0cnVj
dCBibGtfdHJhY2UgKmJ0KQogCXB1dF9wcm9iZV9yZWYoKTsKIH0KIAotaW50IGJsa190cmFjZV9y
ZW1vdmUoc3RydWN0IHJlcXVlc3RfcXVldWUgKnEpCitzdGF0aWMgaW50IF9fYmxrX3RyYWNlX3Jl
bW92ZShzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSkKIHsKIAlzdHJ1Y3QgYmxrX3RyYWNlICpidDsK
IApAQCAtMzY1LDYgKzM2NSwxNyBAQCBpbnQgYmxrX3RyYWNlX3JlbW92ZShzdHJ1Y3QgcmVxdWVz
dF9xdWV1ZSAqcSkKIAogCXJldHVybiAwOwogfQorCitpbnQgYmxrX3RyYWNlX3JlbW92ZShzdHJ1
Y3QgcmVxdWVzdF9xdWV1ZSAqcSkKK3sKKwlpbnQgcmV0OworCisJbXV0ZXhfbG9jaygmcS0+Ymxr
X3RyYWNlX211dGV4KTsKKwlyZXQgPSBfX2Jsa190cmFjZV9yZW1vdmUocSk7CisJbXV0ZXhfdW5s
b2NrKCZxLT5ibGtfdHJhY2VfbXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KIEVYUE9SVF9TWU1C
T0xfR1BMKGJsa190cmFjZV9yZW1vdmUpOwogCiBzdGF0aWMgc3NpemVfdCBibGtfZHJvcHBlZF9y
ZWFkKHN0cnVjdCBmaWxlICpmaWxwLCBjaGFyIF9fdXNlciAqYnVmZmVyLApAQCAtNTY1LDkgKzU3
Niw4IEBAIHN0YXRpYyBpbnQgZG9fYmxrX3RyYWNlX3NldHVwKHN0cnVjdCByZXF1ZXN0X3F1ZXVl
ICpxLCBjaGFyICpuYW1lLCBkZXZfdCBkZXYsCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IGJsa190
cmFjZV9zZXR1cChzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgY2hhciAqbmFtZSwgZGV2X3QgZGV2
LAotCQkgICAgc3RydWN0IGJsb2NrX2RldmljZSAqYmRldiwKLQkJICAgIGNoYXIgX191c2VyICph
cmcpCitzdGF0aWMgaW50IF9fYmxrX3RyYWNlX3NldHVwKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpx
LCBjaGFyICpuYW1lLCBkZXZfdCBkZXYsCisJCQkgICAgIHN0cnVjdCBibG9ja19kZXZpY2UgKmJk
ZXYsIGNoYXIgX191c2VyICphcmcpCiB7CiAJc3RydWN0IGJsa191c2VyX3RyYWNlX3NldHVwIGJ1
dHM7CiAJaW50IHJldDsKQEAgLTU4Niw2ICs1OTYsMTkgQEAgaW50IGJsa190cmFjZV9zZXR1cChz
dHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgY2hhciAqbmFtZSwgZGV2X3QgZGV2LAogCX0KIAlyZXR1
cm4gMDsKIH0KKworaW50IGJsa190cmFjZV9zZXR1cChzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwg
Y2hhciAqbmFtZSwgZGV2X3QgZGV2LAorCQkgICAgc3RydWN0IGJsb2NrX2RldmljZSAqYmRldiwK
KwkJICAgIGNoYXIgX191c2VyICphcmcpCit7CisJaW50IHJldDsKKworCW11dGV4X2xvY2soJnEt
PmJsa190cmFjZV9tdXRleCk7CisJcmV0ID0gX19ibGtfdHJhY2Vfc2V0dXAocSwgbmFtZSwgZGV2
LCBiZGV2LCBhcmcpOworCW11dGV4X3VubG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKKworCXJl
dHVybiByZXQ7Cit9CiBFWFBPUlRfU1lNQk9MX0dQTChibGtfdHJhY2Vfc2V0dXApOwogCiAjaWYg
ZGVmaW5lZChDT05GSUdfQ09NUEFUKSAmJiBkZWZpbmVkKENPTkZJR19YODZfNjQpCkBAIC02MjIs
NyArNjQ1LDcgQEAgc3RhdGljIGludCBjb21wYXRfYmxrX3RyYWNlX3NldHVwKHN0cnVjdCByZXF1
ZXN0X3F1ZXVlICpxLCBjaGFyICpuYW1lLAogfQogI2VuZGlmCiAKLWludCBibGtfdHJhY2Vfc3Rh
cnRzdG9wKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpxLCBpbnQgc3RhcnQpCitzdGF0aWMgaW50IF9f
YmxrX3RyYWNlX3N0YXJ0c3RvcChzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgaW50IHN0YXJ0KQog
ewogCWludCByZXQ7CiAJc3RydWN0IGJsa190cmFjZSAqYnQgPSBxLT5ibGtfdHJhY2U7CkBAIC02
NjEsNiArNjg0LDE3IEBAIGludCBibGtfdHJhY2Vfc3RhcnRzdG9wKHN0cnVjdCByZXF1ZXN0X3F1
ZXVlICpxLCBpbnQgc3RhcnQpCiAKIAlyZXR1cm4gcmV0OwogfQorCitpbnQgYmxrX3RyYWNlX3N0
YXJ0c3RvcChzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwgaW50IHN0YXJ0KQoreworCWludCByZXQ7
CisKKwltdXRleF9sb2NrKCZxLT5ibGtfdHJhY2VfbXV0ZXgpOworCXJldCA9IF9fYmxrX3RyYWNl
X3N0YXJ0c3RvcChxLCBzdGFydCk7CisJbXV0ZXhfdW5sb2NrKCZxLT5ibGtfdHJhY2VfbXV0ZXgp
OworCisJcmV0dXJuIHJldDsKK30KIEVYUE9SVF9TWU1CT0xfR1BMKGJsa190cmFjZV9zdGFydHN0
b3ApOwogCiAvKgpAQCAtNjkxLDcgKzcyNSw3IEBAIGludCBibGtfdHJhY2VfaW9jdGwoc3RydWN0
IGJsb2NrX2RldmljZSAqYmRldiwgdW5zaWduZWQgY21kLCBjaGFyIF9fdXNlciAqYXJnKQogCXN3
aXRjaCAoY21kKSB7CiAJY2FzZSBCTEtUUkFDRVNFVFVQOgogCQliZGV2bmFtZShiZGV2LCBiKTsK
LQkJcmV0ID0gYmxrX3RyYWNlX3NldHVwKHEsIGIsIGJkZXYtPmJkX2RldiwgYmRldiwgYXJnKTsK
KwkJcmV0ID0gX19ibGtfdHJhY2Vfc2V0dXAocSwgYiwgYmRldi0+YmRfZGV2LCBiZGV2LCBhcmcp
OwogCQlicmVhazsKICNpZiBkZWZpbmVkKENPTkZJR19DT01QQVQpICYmIGRlZmluZWQoQ09ORklH
X1g4Nl82NCkKIAljYXNlIEJMS1RSQUNFU0VUVVAzMjoKQEAgLTcwMiwxMCArNzM2LDEwIEBAIGlu
dCBibGtfdHJhY2VfaW9jdGwoc3RydWN0IGJsb2NrX2RldmljZSAqYmRldiwgdW5zaWduZWQgY21k
LCBjaGFyIF9fdXNlciAqYXJnKQogCWNhc2UgQkxLVFJBQ0VTVEFSVDoKIAkJc3RhcnQgPSAxOwog
CWNhc2UgQkxLVFJBQ0VTVE9QOgotCQlyZXQgPSBibGtfdHJhY2Vfc3RhcnRzdG9wKHEsIHN0YXJ0
KTsKKwkJcmV0ID0gX19ibGtfdHJhY2Vfc3RhcnRzdG9wKHEsIHN0YXJ0KTsKIAkJYnJlYWs7CiAJ
Y2FzZSBCTEtUUkFDRVRFQVJET1dOOgotCQlyZXQgPSBibGtfdHJhY2VfcmVtb3ZlKHEpOworCQly
ZXQgPSBfX2Jsa190cmFjZV9yZW1vdmUocSk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCXJldCA9
IC1FTk9UVFk7CkBAIC03MjMsMTAgKzc1NywxNCBAQCBpbnQgYmxrX3RyYWNlX2lvY3RsKHN0cnVj
dCBibG9ja19kZXZpY2UgKmJkZXYsIHVuc2lnbmVkIGNtZCwgY2hhciBfX3VzZXIgKmFyZykKICAq
Ki8KIHZvaWQgYmxrX3RyYWNlX3NodXRkb3duKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpxKQogewor
CW11dGV4X2xvY2soJnEtPmJsa190cmFjZV9tdXRleCk7CisKIAlpZiAocS0+YmxrX3RyYWNlKSB7
Ci0JCWJsa190cmFjZV9zdGFydHN0b3AocSwgMCk7Ci0JCWJsa190cmFjZV9yZW1vdmUocSk7CisJ
CV9fYmxrX3RyYWNlX3N0YXJ0c3RvcChxLCAwKTsKKwkJX19ibGtfdHJhY2VfcmVtb3ZlKHEpOwog
CX0KKworCW11dGV4X3VubG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKIH0KIAogI2lmZGVmIENP
TkZJR19CTEtfQ0dST1VQCgpGcm9tIDEzNjdiN2FlMDJlMzM1YTE4YTdiZGE1ZTE2MmQ1NTk1ZmQ5
OTg3ZDMgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEplbnMgQXhib2UgPGF4Ym9lQGtl
cm5lbC5kaz4KRGF0ZTogU3VuLCAxOSBOb3YgMjAxNyAxMTo1Mjo1NSAtMDcwMApTdWJqZWN0OiBi
bGt0cmFjZTogZml4IHRyYWNlIG11dGV4IGRlYWRsb2NrCgpjb21taXQgMjk2N2FjYmIyNTdhNmE5
YmY5MTJmNDc3OGI3MjdlMDA5NzJlYWM5YiB1cHN0cmVhbS4KCkEgcHJldmlvdXMgY29tbWl0IGNo
YW5nZWQgdGhlIGxvY2tpbmcgYXJvdW5kIHJlZ2lzdHJhdGlvbi9jbGVhbnVwLApidXQgZGlyZWN0
IGNhbGxlcnMgb2YgYmxrX3RyYWNlX3JlbW92ZSgpIHdlcmUgbWlzc2VkLiBUaGlzIG1lYW5zCnRo
YXQgaWYgd2UgaGl0IHRoZSBlcnJvciBwYXRoIGluIHNldHVwLCB3ZSB3aWxsIGRlYWRsb2NrIG9u
CmF0dGVtcHRpbmcgdG8gcmUtYWNxdWlyZSB0aGUgcXVldWUgdHJhY2UgbXV0ZXguCgpGaXhlczog
MWYyY2FjMTA3YzU5ICgiYmxrdHJhY2U6IGZpeCB1bmxvY2tlZCBhY2Nlc3MgdG8gaW5pdC9zdGFy
dC1zdG9wL3RlYXJkb3duIikKU2lnbmVkLW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVs
LmRrPgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW4uaHV0Y2hpbmdzQGNvZGV0aGlu
ay5jby51az4KLS0tCiBrZXJuZWwvdHJhY2UvYmxrdHJhY2UuYyB8IDQgKystLQogMSBmaWxlIGNo
YW5nZWQsIDIgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9rZXJu
ZWwvdHJhY2UvYmxrdHJhY2UuYyBiL2tlcm5lbC90cmFjZS9ibGt0cmFjZS5jCmluZGV4IGUxYjg2
ZWRkZGM2ZS4uYTg4OGYwZjUyN2ZhIDEwMDY0NAotLS0gYS9rZXJuZWwvdHJhY2UvYmxrdHJhY2Uu
YworKysgYi9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYwpAQCAtNTkxLDcgKzU5MSw3IEBAIHN0YXRp
YyBpbnQgX19ibGtfdHJhY2Vfc2V0dXAoc3RydWN0IHJlcXVlc3RfcXVldWUgKnEsIGNoYXIgKm5h
bWUsIGRldl90IGRldiwKIAkJcmV0dXJuIHJldDsKIAogCWlmIChjb3B5X3RvX3VzZXIoYXJnLCAm
YnV0cywgc2l6ZW9mKGJ1dHMpKSkgewotCQlibGtfdHJhY2VfcmVtb3ZlKHEpOworCQlfX2Jsa190
cmFjZV9yZW1vdmUocSk7CiAJCXJldHVybiAtRUZBVUxUOwogCX0KIAlyZXR1cm4gMDsKQEAgLTYz
Nyw3ICs2MzcsNyBAQCBzdGF0aWMgaW50IGNvbXBhdF9ibGtfdHJhY2Vfc2V0dXAoc3RydWN0IHJl
cXVlc3RfcXVldWUgKnEsIGNoYXIgKm5hbWUsCiAJCXJldHVybiByZXQ7CiAKIAlpZiAoY29weV90
b191c2VyKGFyZywgJmJ1dHMubmFtZSwgQVJSQVlfU0laRShidXRzLm5hbWUpKSkgewotCQlibGtf
dHJhY2VfcmVtb3ZlKHEpOworCQlfX2Jsa190cmFjZV9yZW1vdmUocSk7CiAJCXJldHVybiAtRUZB
VUxUOwogCX0KIAoKRnJvbSA1NWFjZjBlOGZiZGNmYjhkZWMwYjBiYjgyNmI1ZWI5NWViZTFmODM4
IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKYW4gS2FyYSA8amFja0BzdXNlLmN6PgpE
YXRlOiBUaHUsIDYgRmViIDIwMjAgMTU6Mjg6MTIgKzAxMDAKU3ViamVjdDogYmxrdHJhY2U6IFBy
b3RlY3QgcS0+YmxrX3RyYWNlIHdpdGggUkNVCgpjb21taXQgYzc4MGU4NmRkNDhlZjY0NjdhMTE0
NmNmN2QwZmUxZTA1YTYzNTAzOSB1cHN0cmVhbS4KCktBU0FOIGlzIHJlcG9ydGluZyB0aGF0IF9f
YmxrX2FkZF90cmFjZSgpIGhhcyBhIHVzZS1hZnRlci1mcmVlIGlzc3VlCndoZW4gYWNjZXNzaW5n
IHEtPmJsa190cmFjZS4gSW5kZWVkIHRoZSBzd2l0Y2hpbmcgb2YgYmxvY2sgdHJhY2luZyAoYW5k
CnRodXMgZXZlbnR1YWwgZnJlZWluZyBvZiBxLT5ibGtfdHJhY2UpIGlzIGNvbXBsZXRlbHkgdW5z
eW5jaHJvbml6ZWQgd2l0aAp0aGUgY3VycmVudGx5IHJ1bm5pbmcgdHJhY2luZyBhbmQgdGh1cyBp
dCBjYW4gaGFwcGVuIHRoYXQgdGhlIGJsa190cmFjZQpzdHJ1Y3R1cmUgaXMgYmVpbmcgZnJlZWQg
anVzdCB3aGlsZSBfX2Jsa19hZGRfdHJhY2UoKSB3b3JrcyBvbiBpdC4KUHJvdGVjdCBhY2Nlc3Nl
cyB0byBxLT5ibGtfdHJhY2UgYnkgUkNVIGR1cmluZyB0cmFjaW5nIGFuZCBtYWtlIHN1cmUgd2UK
d2FpdCBmb3IgdGhlIGVuZCBvZiBSQ1UgZ3JhY2UgcGVyaW9kIHdoZW4gc2h1dHRpbmcgZG93biB0
cmFjaW5nLiBMdWNraWx5CnRoYXQgaXMgcmFyZSBlbm91Z2ggZXZlbnQgdGhhdCB3ZSBjYW4gYWZm
b3JkIHRoYXQuIE5vdGUgdGhhdCBwb3N0cG9uaW5nCnRoZSBmcmVlaW5nIG9mIGJsa190cmFjZSB0
byBhbiBSQ1UgY2FsbGJhY2sgc2hvdWxkIGJldHRlciBiZSBhdm9pZGVkIGFzCml0IGNvdWxkIGhh
dmUgdW5leHBlY3RlZCB1c2VyIHZpc2libGUgc2lkZS1lZmZlY3RzIGFzIGRlYnVnZnMgZmlsZXMK
d291bGQgYmUgc3RpbGwgZXhpc3RpbmcgZm9yIGEgc2hvcnQgd2hpbGUgYmxvY2sgdHJhY2luZyBo
YXMgYmVlbiBzaHV0CmRvd24uCgpMaW5rOiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hv
d19idWcuY2dpP2lkPTIwNTcxMQpDQzogc3RhYmxlQHZnZXIua2VybmVsLm9yZwpSZXZpZXdlZC1i
eTogQ2hhaXRhbnlhIEt1bGthcm5pIDxjaGFpdGFueWEua3Vsa2FybmlAd2RjLmNvbT4KUmV2aWV3
ZWQtYnk6IE1pbmcgTGVpIDxtaW5nLmxlaUByZWRoYXQuY29tPgpUZXN0ZWQtYnk6IE1pbmcgTGVp
IDxtaW5nLmxlaUByZWRoYXQuY29tPgpSZXZpZXdlZC1ieTogQmFydCBWYW4gQXNzY2hlIDxidmFu
YXNzY2hlQGFjbS5vcmc+ClJlcG9ydGVkLWJ5OiBUcmlzdGFuIE1hZGFuaSA8dHJpc3RtZEBnbWFp
bC5jb20+ClNpZ25lZC1vZmYtYnk6IEphbiBLYXJhIDxqYWNrQHN1c2UuY3o+ClNpZ25lZC1vZmYt
Ynk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KW2J3aDogQmFja3BvcnRlZCB0byA0LjE0
OiBhZGp1c3QgY29udGV4dF0KU2lnbmVkLW9mZi1ieTogQmVuIEh1dGNoaW5ncyA8YmVuLmh1dGNo
aW5nc0Bjb2RldGhpbmsuY28udWs+Ci0tLQogaW5jbHVkZS9saW51eC9ibGtkZXYuaCAgICAgICB8
ICAgMiArLQogaW5jbHVkZS9saW51eC9ibGt0cmFjZV9hcGkuaCB8ICAxOCArKysrLS0KIGtlcm5l
bC90cmFjZS9ibGt0cmFjZS5jICAgICAgfCAxMTQgKysrKysrKysrKysrKysrKysrKysrKysrKy0t
LS0tLS0tLS0KIDMgZmlsZXMgY2hhbmdlZCwgOTcgaW5zZXJ0aW9ucygrKSwgMzcgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9ibGtkZXYuaCBiL2luY2x1ZGUvbGludXgv
YmxrZGV2LmgKaW5kZXggYWQ5NDAxMDI0NTFjLi41OTk5ZDgwMzE2NzUgMTAwNjQ0Ci0tLSBhL2lu
Y2x1ZGUvbGludXgvYmxrZGV2LmgKKysrIGIvaW5jbHVkZS9saW51eC9ibGtkZXYuaApAQCAtNTY4
LDcgKzU2OCw3IEBAIHN0cnVjdCByZXF1ZXN0X3F1ZXVlIHsKIAl1bnNpZ25lZCBpbnQJCXNnX3Jl
c2VydmVkX3NpemU7CiAJaW50CQkJbm9kZTsKICNpZmRlZiBDT05GSUdfQkxLX0RFVl9JT19UUkFD
RQotCXN0cnVjdCBibGtfdHJhY2UJKmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNlIF9fcmN1
CSpibGtfdHJhY2U7CiAJc3RydWN0IG11dGV4CQlibGtfdHJhY2VfbXV0ZXg7CiAjZW5kaWYKIAkv
KgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9ibGt0cmFjZV9hcGkuaCBiL2luY2x1ZGUvbGlu
dXgvYmxrdHJhY2VfYXBpLmgKaW5kZXggN2JiMmQ4ZGU5ZjMwLi4zYjZmZjU5MDJlZGMgMTAwNjQ0
Ci0tLSBhL2luY2x1ZGUvbGludXgvYmxrdHJhY2VfYXBpLmgKKysrIGIvaW5jbHVkZS9saW51eC9i
bGt0cmFjZV9hcGkuaApAQCAtNTEsOSArNTEsMTMgQEAgdm9pZCBfX3RyYWNlX25vdGVfbWVzc2Fn
ZShzdHJ1Y3QgYmxrX3RyYWNlICosIHN0cnVjdCBibGtjZyAqYmxrY2csIGNvbnN0IGNoYXIgKmYK
ICAqKi8KICNkZWZpbmUgYmxrX2FkZF9jZ3JvdXBfdHJhY2VfbXNnKHEsIGNnLCBmbXQsIC4uLikJ
CQlcCiAJZG8gewkJCQkJCQkJXAotCQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IChxKS0+YmxrX3Ry
YWNlOwkJCVwKKwkJc3RydWN0IGJsa190cmFjZSAqYnQ7CQkJCQlcCisJCQkJCQkJCQlcCisJCXJj
dV9yZWFkX2xvY2soKTsJCQkJCVwKKwkJYnQgPSByY3VfZGVyZWZlcmVuY2UoKHEpLT5ibGtfdHJh
Y2UpOwkJCVwKIAkJaWYgKHVubGlrZWx5KGJ0KSkJCQkJCVwKIAkJCV9fdHJhY2Vfbm90ZV9tZXNz
YWdlKGJ0LCBjZywgZm10LCAjI19fVkFfQVJHU19fKTtcCisJCXJjdV9yZWFkX3VubG9jaygpOwkJ
CQkJXAogCX0gd2hpbGUgKDApCiAjZGVmaW5lIGJsa19hZGRfdHJhY2VfbXNnKHEsIGZtdCwgLi4u
KQkJCQkJXAogCWJsa19hZGRfY2dyb3VwX3RyYWNlX21zZyhxLCBOVUxMLCBmbXQsICMjX19WQV9B
UkdTX18pCkBAIC02MSwxMCArNjUsMTQgQEAgdm9pZCBfX3RyYWNlX25vdGVfbWVzc2FnZShzdHJ1
Y3QgYmxrX3RyYWNlICosIHN0cnVjdCBibGtjZyAqYmxrY2csIGNvbnN0IGNoYXIgKmYKIAogc3Rh
dGljIGlubGluZSBib29sIGJsa190cmFjZV9ub3RlX21lc3NhZ2VfZW5hYmxlZChzdHJ1Y3QgcmVx
dWVzdF9xdWV1ZSAqcSkKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsK
LQlpZiAobGlrZWx5KCFidCkpCi0JCXJldHVybiBmYWxzZTsKLQlyZXR1cm4gYnQtPmFjdF9tYXNr
ICYgQkxLX1RDX05PVElGWTsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKKwlib29sIHJldDsKKwor
CXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShxLT5ibGtfdHJhY2UpOwor
CXJldCA9IGJ0ICYmIChidC0+YWN0X21hc2sgJiBCTEtfVENfTk9USUZZKTsKKwlyY3VfcmVhZF91
bmxvY2soKTsKKwlyZXR1cm4gcmV0OwogfQogCiBleHRlcm4gdm9pZCBibGtfYWRkX2RyaXZlcl9k
YXRhKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpxLCBzdHJ1Y3QgcmVxdWVzdCAqcnEsCmRpZmYgLS1n
aXQgYS9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYyBiL2tlcm5lbC90cmFjZS9ibGt0cmFjZS5jCmlu
ZGV4IGE4ODhmMGY1MjdmYS4uMWRhMzRjOTEwOTllIDEwMDY0NAotLS0gYS9rZXJuZWwvdHJhY2Uv
YmxrdHJhY2UuYworKysgYi9rZXJuZWwvdHJhY2UvYmxrdHJhY2UuYwpAQCAtMzQ4LDYgKzM0OCw3
IEBAIHN0YXRpYyB2b2lkIHB1dF9wcm9iZV9yZWYodm9pZCkKIAogc3RhdGljIHZvaWQgYmxrX3Ry
YWNlX2NsZWFudXAoc3RydWN0IGJsa190cmFjZSAqYnQpCiB7CisJc3luY2hyb25pemVfcmN1KCk7
CiAJYmxrX3RyYWNlX2ZyZWUoYnQpOwogCXB1dF9wcm9iZV9yZWYoKTsKIH0KQEAgLTY0OCw4ICs2
NDksMTAgQEAgc3RhdGljIGludCBjb21wYXRfYmxrX3RyYWNlX3NldHVwKHN0cnVjdCByZXF1ZXN0
X3F1ZXVlICpxLCBjaGFyICpuYW1lLAogc3RhdGljIGludCBfX2Jsa190cmFjZV9zdGFydHN0b3Ao
c3RydWN0IHJlcXVlc3RfcXVldWUgKnEsIGludCBzdGFydCkKIHsKIAlpbnQgcmV0OwotCXN0cnVj
dCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCXN0cnVjdCBibGtfdHJhY2UgKmJ0Owog
CisJYnQgPSByY3VfZGVyZWZlcmVuY2VfcHJvdGVjdGVkKHEtPmJsa190cmFjZSwKKwkJCQkgICAg
ICAgbG9ja2RlcF9pc19oZWxkKCZxLT5ibGtfdHJhY2VfbXV0ZXgpKTsKIAlpZiAoYnQgPT0gTlVM
TCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKQEAgLTc1OCw4ICs3NjEsOCBAQCBpbnQgYmxrX3RyYWNl
X2lvY3RsKHN0cnVjdCBibG9ja19kZXZpY2UgKmJkZXYsIHVuc2lnbmVkIGNtZCwgY2hhciBfX3Vz
ZXIgKmFyZykKIHZvaWQgYmxrX3RyYWNlX3NodXRkb3duKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpx
KQogewogCW11dGV4X2xvY2soJnEtPmJsa190cmFjZV9tdXRleCk7Ci0KLQlpZiAocS0+YmxrX3Ry
YWNlKSB7CisJaWYgKHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQocS0+YmxrX3RyYWNlLAorCQkJ
CSAgICAgIGxvY2tkZXBfaXNfaGVsZCgmcS0+YmxrX3RyYWNlX211dGV4KSkpIHsKIAkJX19ibGtf
dHJhY2Vfc3RhcnRzdG9wKHEsIDApOwogCQlfX2Jsa190cmFjZV9yZW1vdmUocSk7CiAJfQpAQCAt
NzcxLDggKzc3NCwxMCBAQCB2b2lkIGJsa190cmFjZV9zaHV0ZG93bihzdHJ1Y3QgcmVxdWVzdF9x
dWV1ZSAqcSkKIHN0YXRpYyB1bmlvbiBrZXJuZnNfbm9kZV9pZCAqCiBibGtfdHJhY2VfYmlvX2dl
dF9jZ2lkKHN0cnVjdCByZXF1ZXN0X3F1ZXVlICpxLCBzdHJ1Y3QgYmlvICpiaW8pCiB7Ci0Jc3Ry
dWN0IGJsa190cmFjZSAqYnQgPSBxLT5ibGtfdHJhY2U7CisJc3RydWN0IGJsa190cmFjZSAqYnQ7
CiAKKwkvKiBXZSBkb24ndCB1c2UgdGhlICdidCcgdmFsdWUgaGVyZSBleGNlcHQgYXMgYW4gb3B0
aW1pemF0aW9uLi4uICovCisJYnQgPSByY3VfZGVyZWZlcmVuY2VfcHJvdGVjdGVkKHEtPmJsa190
cmFjZSwgMSk7CiAJaWYgKCFidCB8fCAhKGJsa190cmFjZXJfZmxhZ3MudmFsICYgVFJBQ0VfQkxL
X09QVF9DR1JPVVApKQogCQlyZXR1cm4gTlVMTDsKIApAQCAtODE3LDEwICs4MjIsMTQgQEAgc3Rh
dGljIHZvaWQgYmxrX2FkZF90cmFjZV9ycShzdHJ1Y3QgcmVxdWVzdCAqcnEsIGludCBlcnJvciwK
IAkJCSAgICAgdW5zaWduZWQgaW50IG5yX2J5dGVzLCB1MzIgd2hhdCwKIAkJCSAgICAgdW5pb24g
a2VybmZzX25vZGVfaWQgKmNnaWQpCiB7Ci0Jc3RydWN0IGJsa190cmFjZSAqYnQgPSBycS0+cS0+
YmxrX3RyYWNlOworCXN0cnVjdCBibGtfdHJhY2UgKmJ0OwogCi0JaWYgKGxpa2VseSghYnQpKQor
CXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShycS0+cS0+YmxrX3RyYWNl
KTsKKwlpZiAobGlrZWx5KCFidCkpIHsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJCXJldHVybjsK
Kwl9CiAKIAlpZiAoYmxrX3JxX2lzX3Bhc3N0aHJvdWdoKHJxKSkKIAkJd2hhdCB8PSBCTEtfVENf
QUNUKEJMS19UQ19QQyk7CkBAIC04MjksNiArODM4LDcgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90
cmFjZV9ycShzdHJ1Y3QgcmVxdWVzdCAqcnEsIGludCBlcnJvciwKIAogCV9fYmxrX2FkZF90cmFj
ZShidCwgYmxrX3JxX3RyYWNlX3NlY3RvcihycSksIG5yX2J5dGVzLCByZXFfb3AocnEpLAogCQkJ
cnEtPmNtZF9mbGFncywgd2hhdCwgZXJyb3IsIDAsIE5VTEwsIGNnaWQpOworCXJjdV9yZWFkX3Vu
bG9jaygpOwogfQogCiBzdGF0aWMgdm9pZCBibGtfYWRkX3RyYWNlX3JxX2luc2VydCh2b2lkICpp
Z25vcmUsCkBAIC04NzQsMTMgKzg4NCwxOCBAQCBzdGF0aWMgdm9pZCBibGtfYWRkX3RyYWNlX3Jx
X2NvbXBsZXRlKHZvaWQgKmlnbm9yZSwgc3RydWN0IHJlcXVlc3QgKnJxLAogc3RhdGljIHZvaWQg
YmxrX2FkZF90cmFjZV9iaW8oc3RydWN0IHJlcXVlc3RfcXVldWUgKnEsIHN0cnVjdCBiaW8gKmJp
bywKIAkJCSAgICAgIHUzMiB3aGF0LCBpbnQgZXJyb3IsIHVuaW9uIGtlcm5mc19ub2RlX2lkICpj
Z2lkKQogewotCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCXN0cnVjdCBi
bGtfdHJhY2UgKmJ0OwogCi0JaWYgKGxpa2VseSghYnQpKQorCXJjdV9yZWFkX2xvY2soKTsKKwli
dCA9IHJjdV9kZXJlZmVyZW5jZShxLT5ibGtfdHJhY2UpOworCWlmIChsaWtlbHkoIWJ0KSkgewor
CQlyY3VfcmVhZF91bmxvY2soKTsKIAkJcmV0dXJuOworCX0KIAogCV9fYmxrX2FkZF90cmFjZShi
dCwgYmlvLT5iaV9pdGVyLmJpX3NlY3RvciwgYmlvLT5iaV9pdGVyLmJpX3NpemUsCiAJCQliaW9f
b3AoYmlvKSwgYmlvLT5iaV9vcGYsIHdoYXQsIGVycm9yLCAwLCBOVUxMLCBjZ2lkKTsKKwlyY3Vf
cmVhZF91bmxvY2soKTsKIH0KIAogc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9iaW9fYm91bmNl
KHZvaWQgKmlnbm9yZSwKQEAgLTkzMSwxMSArOTQ2LDE0IEBAIHN0YXRpYyB2b2lkIGJsa19hZGRf
dHJhY2VfZ2V0cnEodm9pZCAqaWdub3JlLAogCQlibGtfYWRkX3RyYWNlX2JpbyhxLCBiaW8sIEJM
S19UQV9HRVRSUSwgMCwKIAkJCQkgIGJsa190cmFjZV9iaW9fZ2V0X2NnaWQocSwgYmlvKSk7CiAJ
ZWxzZSB7Ci0JCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCQlzdHJ1Y3Qg
YmxrX3RyYWNlICpidDsKIAorCQlyY3VfcmVhZF9sb2NrKCk7CisJCWJ0ID0gcmN1X2RlcmVmZXJl
bmNlKHEtPmJsa190cmFjZSk7CiAJCWlmIChidCkKIAkJCV9fYmxrX2FkZF90cmFjZShidCwgMCwg
MCwgcncsIDAsIEJMS19UQV9HRVRSUSwgMCwgMCwKIAkJCQkJTlVMTCwgTlVMTCk7CisJCXJjdV9y
ZWFkX3VubG9jaygpOwogCX0KIH0KIApAQCAtOTQ4LDI3ICs5NjYsMzUgQEAgc3RhdGljIHZvaWQg
YmxrX2FkZF90cmFjZV9zbGVlcHJxKHZvaWQgKmlnbm9yZSwKIAkJYmxrX2FkZF90cmFjZV9iaW8o
cSwgYmlvLCBCTEtfVEFfU0xFRVBSUSwgMCwKIAkJCQkgIGJsa190cmFjZV9iaW9fZ2V0X2NnaWQo
cSwgYmlvKSk7CiAJZWxzZSB7Ci0JCXN0cnVjdCBibGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNl
OworCQlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAorCQlyY3VfcmVhZF9sb2NrKCk7CisJCWJ0ID0g
cmN1X2RlcmVmZXJlbmNlKHEtPmJsa190cmFjZSk7CiAJCWlmIChidCkKIAkJCV9fYmxrX2FkZF90
cmFjZShidCwgMCwgMCwgcncsIDAsIEJMS19UQV9TTEVFUFJRLAogCQkJCQkwLCAwLCBOVUxMLCBO
VUxMKTsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJfQogfQogCiBzdGF0aWMgdm9pZCBibGtfYWRk
X3RyYWNlX3BsdWcodm9pZCAqaWdub3JlLCBzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSkKIHsKLQlz
dHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpi
dDsKIAorCXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShxLT5ibGtfdHJh
Y2UpOwogCWlmIChidCkKIAkJX19ibGtfYWRkX3RyYWNlKGJ0LCAwLCAwLCAwLCAwLCBCTEtfVEFf
UExVRywgMCwgMCwgTlVMTCwgTlVMTCk7CisJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKIHN0YXRp
YyB2b2lkIGJsa19hZGRfdHJhY2VfdW5wbHVnKHZvaWQgKmlnbm9yZSwgc3RydWN0IHJlcXVlc3Rf
cXVldWUgKnEsCiAJCQkJICAgIHVuc2lnbmVkIGludCBkZXB0aCwgYm9vbCBleHBsaWNpdCkKIHsK
LQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNl
ICpidDsKIAorCXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShxLT5ibGtf
dHJhY2UpOwogCWlmIChidCkgewogCQlfX2JlNjQgcnBkdSA9IGNwdV90b19iZTY0KGRlcHRoKTsK
IAkJdTMyIHdoYXQ7CkBAIC05ODAsMTQgKzEwMDYsMTcgQEAgc3RhdGljIHZvaWQgYmxrX2FkZF90
cmFjZV91bnBsdWcodm9pZCAqaWdub3JlLCBzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwKIAogCQlf
X2Jsa19hZGRfdHJhY2UoYnQsIDAsIDAsIDAsIDAsIHdoYXQsIDAsIHNpemVvZihycGR1KSwgJnJw
ZHUsIE5VTEwpOwogCX0KKwlyY3VfcmVhZF91bmxvY2soKTsKIH0KIAogc3RhdGljIHZvaWQgYmxr
X2FkZF90cmFjZV9zcGxpdCh2b2lkICppZ25vcmUsCiAJCQkJc3RydWN0IHJlcXVlc3RfcXVldWUg
KnEsIHN0cnVjdCBiaW8gKmJpbywKIAkJCQl1bnNpZ25lZCBpbnQgcGR1KQogewotCXN0cnVjdCBi
bGtfdHJhY2UgKmJ0ID0gcS0+YmxrX3RyYWNlOworCXN0cnVjdCBibGtfdHJhY2UgKmJ0OwogCisJ
cmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHEtPmJsa190cmFjZSk7CiAJ
aWYgKGJ0KSB7CiAJCV9fYmU2NCBycGR1ID0gY3B1X3RvX2JlNjQocGR1KTsKIApAQCAtOTk2LDYg
KzEwMjUsNyBAQCBzdGF0aWMgdm9pZCBibGtfYWRkX3RyYWNlX3NwbGl0KHZvaWQgKmlnbm9yZSwK
IAkJCQlCTEtfVEFfU1BMSVQsIGJpby0+Ymlfc3RhdHVzLCBzaXplb2YocnBkdSksCiAJCQkJJnJw
ZHUsIGJsa190cmFjZV9iaW9fZ2V0X2NnaWQocSwgYmlvKSk7CiAJfQorCXJjdV9yZWFkX3VubG9j
aygpOwogfQogCiAvKioKQEAgLTEwMTUsMTEgKzEwNDUsMTUgQEAgc3RhdGljIHZvaWQgYmxrX2Fk
ZF90cmFjZV9iaW9fcmVtYXAodm9pZCAqaWdub3JlLAogCQkJCSAgICBzdHJ1Y3QgcmVxdWVzdF9x
dWV1ZSAqcSwgc3RydWN0IGJpbyAqYmlvLAogCQkJCSAgICBkZXZfdCBkZXYsIHNlY3Rvcl90IGZy
b20pCiB7Ci0Jc3RydWN0IGJsa190cmFjZSAqYnQgPSBxLT5ibGtfdHJhY2U7CisJc3RydWN0IGJs
a190cmFjZSAqYnQ7CiAJc3RydWN0IGJsa19pb190cmFjZV9yZW1hcCByOwogCi0JaWYgKGxpa2Vs
eSghYnQpKQorCXJjdV9yZWFkX2xvY2soKTsKKwlidCA9IHJjdV9kZXJlZmVyZW5jZShxLT5ibGtf
dHJhY2UpOworCWlmIChsaWtlbHkoIWJ0KSkgeworCQlyY3VfcmVhZF91bmxvY2soKTsKIAkJcmV0
dXJuOworCX0KIAogCXIuZGV2aWNlX2Zyb20gPSBjcHVfdG9fYmUzMihkZXYpOwogCXIuZGV2aWNl
X3RvICAgPSBjcHVfdG9fYmUzMihiaW9fZGV2KGJpbykpOwpAQCAtMTAyOCw2ICsxMDYyLDcgQEAg
c3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9iaW9fcmVtYXAodm9pZCAqaWdub3JlLAogCV9fYmxr
X2FkZF90cmFjZShidCwgYmlvLT5iaV9pdGVyLmJpX3NlY3RvciwgYmlvLT5iaV9pdGVyLmJpX3Np
emUsCiAJCQliaW9fb3AoYmlvKSwgYmlvLT5iaV9vcGYsIEJMS19UQV9SRU1BUCwgYmlvLT5iaV9z
dGF0dXMsCiAJCQlzaXplb2YociksICZyLCBibGtfdHJhY2VfYmlvX2dldF9jZ2lkKHEsIGJpbykp
OworCXJjdV9yZWFkX3VubG9jaygpOwogfQogCiAvKioKQEAgLTEwNDgsMTEgKzEwODMsMTUgQEAg
c3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9ycV9yZW1hcCh2b2lkICppZ25vcmUsCiAJCQkJICAg
c3RydWN0IHJlcXVlc3QgKnJxLCBkZXZfdCBkZXYsCiAJCQkJICAgc2VjdG9yX3QgZnJvbSkKIHsK
LQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNl
ICpidDsKIAlzdHJ1Y3QgYmxrX2lvX3RyYWNlX3JlbWFwIHI7CiAKLQlpZiAobGlrZWx5KCFidCkp
CisJcmN1X3JlYWRfbG9jaygpOworCWJ0ID0gcmN1X2RlcmVmZXJlbmNlKHEtPmJsa190cmFjZSk7
CisJaWYgKGxpa2VseSghYnQpKSB7CisJCXJjdV9yZWFkX3VubG9jaygpOwogCQlyZXR1cm47CisJ
fQogCiAJci5kZXZpY2VfZnJvbSA9IGNwdV90b19iZTMyKGRldik7CiAJci5kZXZpY2VfdG8gICA9
IGNwdV90b19iZTMyKGRpc2tfZGV2dChycS0+cnFfZGlzaykpOwpAQCAtMTA2MSw2ICsxMTAwLDcg
QEAgc3RhdGljIHZvaWQgYmxrX2FkZF90cmFjZV9ycV9yZW1hcCh2b2lkICppZ25vcmUsCiAJX19i
bGtfYWRkX3RyYWNlKGJ0LCBibGtfcnFfcG9zKHJxKSwgYmxrX3JxX2J5dGVzKHJxKSwKIAkJCXJx
X2RhdGFfZGlyKHJxKSwgMCwgQkxLX1RBX1JFTUFQLCAwLAogCQkJc2l6ZW9mKHIpLCAmciwgYmxr
X3RyYWNlX3JlcXVlc3RfZ2V0X2NnaWQocSwgcnEpKTsKKwlyY3VfcmVhZF91bmxvY2soKTsKIH0K
IAogLyoqCkBAIC0xMDc4LDE0ICsxMTE4LDE5IEBAIHZvaWQgYmxrX2FkZF9kcml2ZXJfZGF0YShz
dHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcSwKIAkJCSBzdHJ1Y3QgcmVxdWVzdCAqcnEsCiAJCQkgdm9p
ZCAqZGF0YSwgc2l6ZV90IGxlbikKIHsKLQlzdHJ1Y3QgYmxrX3RyYWNlICpidCA9IHEtPmJsa190
cmFjZTsKKwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAotCWlmIChsaWtlbHkoIWJ0KSkKKwlyY3Vf
cmVhZF9sb2NrKCk7CisJYnQgPSByY3VfZGVyZWZlcmVuY2UocS0+YmxrX3RyYWNlKTsKKwlpZiAo
bGlrZWx5KCFidCkpIHsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJCXJldHVybjsKKwl9CiAKIAlf
X2Jsa19hZGRfdHJhY2UoYnQsIGJsa19ycV90cmFjZV9zZWN0b3IocnEpLCBibGtfcnFfYnl0ZXMo
cnEpLCAwLCAwLAogCQkJCUJMS19UQV9EUlZfREFUQSwgMCwgbGVuLCBkYXRhLAogCQkJCWJsa190
cmFjZV9yZXF1ZXN0X2dldF9jZ2lkKHEsIHJxKSk7CisJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiBF
WFBPUlRfU1lNQk9MX0dQTChibGtfYWRkX2RyaXZlcl9kYXRhKTsKIApAQCAtMTYxMiw2ICsxNjU3
LDcgQEAgc3RhdGljIGludCBibGtfdHJhY2VfcmVtb3ZlX3F1ZXVlKHN0cnVjdCByZXF1ZXN0X3F1
ZXVlICpxKQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCXB1dF9wcm9iZV9yZWYoKTsKKwlzeW5jaHJv
bml6ZV9yY3UoKTsKIAlibGtfdHJhY2VfZnJlZShidCk7CiAJcmV0dXJuIDA7CiB9CkBAIC0xNzcz
LDYgKzE4MTksNyBAQCBzdGF0aWMgc3NpemVfdCBzeXNmc19ibGtfdHJhY2VfYXR0cl9zaG93KHN0
cnVjdCBkZXZpY2UgKmRldiwKIAlzdHJ1Y3QgaGRfc3RydWN0ICpwID0gZGV2X3RvX3BhcnQoZGV2
KTsKIAlzdHJ1Y3QgcmVxdWVzdF9xdWV1ZSAqcTsKIAlzdHJ1Y3QgYmxvY2tfZGV2aWNlICpiZGV2
OworCXN0cnVjdCBibGtfdHJhY2UgKmJ0OwogCXNzaXplX3QgcmV0ID0gLUVOWElPOwogCiAJYmRl
diA9IGJkZ2V0KHBhcnRfZGV2dChwKSk7CkBAIC0xNzg1LDIxICsxODMyLDIzIEBAIHN0YXRpYyBz
c2l6ZV90IHN5c2ZzX2Jsa190cmFjZV9hdHRyX3Nob3coc3RydWN0IGRldmljZSAqZGV2LAogCiAJ
bXV0ZXhfbG9jaygmcS0+YmxrX3RyYWNlX211dGV4KTsKIAorCWJ0ID0gcmN1X2RlcmVmZXJlbmNl
X3Byb3RlY3RlZChxLT5ibGtfdHJhY2UsCisJCQkJICAgICAgIGxvY2tkZXBfaXNfaGVsZCgmcS0+
YmxrX3RyYWNlX211dGV4KSk7CiAJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2VuYWJsZSkgewotCQly
ZXQgPSBzcHJpbnRmKGJ1ZiwgIiV1XG4iLCAhIXEtPmJsa190cmFjZSk7CisJCXJldCA9IHNwcmlu
dGYoYnVmLCAiJXVcbiIsICEhYnQpOwogCQlnb3RvIG91dF91bmxvY2tfYmRldjsKIAl9CiAKLQlp
ZiAocS0+YmxrX3RyYWNlID09IE5VTEwpCisJaWYgKGJ0ID09IE5VTEwpCiAJCXJldCA9IHNwcmlu
dGYoYnVmLCAiZGlzYWJsZWRcbiIpOwogCWVsc2UgaWYgKGF0dHIgPT0gJmRldl9hdHRyX2FjdF9t
YXNrKQotCQlyZXQgPSBibGtfdHJhY2VfbWFzazJzdHIoYnVmLCBxLT5ibGtfdHJhY2UtPmFjdF9t
YXNrKTsKKwkJcmV0ID0gYmxrX3RyYWNlX21hc2syc3RyKGJ1ZiwgYnQtPmFjdF9tYXNrKTsKIAll
bHNlIGlmIChhdHRyID09ICZkZXZfYXR0cl9waWQpCi0JCXJldCA9IHNwcmludGYoYnVmLCAiJXVc
biIsIHEtPmJsa190cmFjZS0+cGlkKTsKKwkJcmV0ID0gc3ByaW50ZihidWYsICIldVxuIiwgYnQt
PnBpZCk7CiAJZWxzZSBpZiAoYXR0ciA9PSAmZGV2X2F0dHJfc3RhcnRfbGJhKQotCQlyZXQgPSBz
cHJpbnRmKGJ1ZiwgIiVsbHVcbiIsIHEtPmJsa190cmFjZS0+c3RhcnRfbGJhKTsKKwkJcmV0ID0g
c3ByaW50ZihidWYsICIlbGx1XG4iLCBidC0+c3RhcnRfbGJhKTsKIAllbHNlIGlmIChhdHRyID09
ICZkZXZfYXR0cl9lbmRfbGJhKQotCQlyZXQgPSBzcHJpbnRmKGJ1ZiwgIiVsbHVcbiIsIHEtPmJs
a190cmFjZS0+ZW5kX2xiYSk7CisJCXJldCA9IHNwcmludGYoYnVmLCAiJWxsdVxuIiwgYnQtPmVu
ZF9sYmEpOwogCiBvdXRfdW5sb2NrX2JkZXY6CiAJbXV0ZXhfdW5sb2NrKCZxLT5ibGtfdHJhY2Vf
bXV0ZXgpOwpAQCAtMTgxNiw2ICsxODY1LDcgQEAgc3RhdGljIHNzaXplX3Qgc3lzZnNfYmxrX3Ry
YWNlX2F0dHJfc3RvcmUoc3RydWN0IGRldmljZSAqZGV2LAogCXN0cnVjdCBibG9ja19kZXZpY2Ug
KmJkZXY7CiAJc3RydWN0IHJlcXVlc3RfcXVldWUgKnE7CiAJc3RydWN0IGhkX3N0cnVjdCAqcDsK
KwlzdHJ1Y3QgYmxrX3RyYWNlICpidDsKIAl1NjQgdmFsdWU7CiAJc3NpemVfdCByZXQgPSAtRUlO
VkFMOwogCkBAIC0xODQ2LDggKzE4OTYsMTAgQEAgc3RhdGljIHNzaXplX3Qgc3lzZnNfYmxrX3Ry
YWNlX2F0dHJfc3RvcmUoc3RydWN0IGRldmljZSAqZGV2LAogCiAJbXV0ZXhfbG9jaygmcS0+Ymxr
X3RyYWNlX211dGV4KTsKIAorCWJ0ID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChxLT5ibGtf
dHJhY2UsCisJCQkJICAgICAgIGxvY2tkZXBfaXNfaGVsZCgmcS0+YmxrX3RyYWNlX211dGV4KSk7
CiAJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2VuYWJsZSkgewotCQlpZiAoISF2YWx1ZSA9PSAhIXEt
PmJsa190cmFjZSkgeworCQlpZiAoISF2YWx1ZSA9PSAhIWJ0KSB7CiAJCQlyZXQgPSAwOwogCQkJ
Z290byBvdXRfdW5sb2NrX2JkZXY7CiAJCX0KQEAgLTE4NTksMTggKzE5MTEsMTggQEAgc3RhdGlj
IHNzaXplX3Qgc3lzZnNfYmxrX3RyYWNlX2F0dHJfc3RvcmUoc3RydWN0IGRldmljZSAqZGV2LAog
CX0KIAogCXJldCA9IDA7Ci0JaWYgKHEtPmJsa190cmFjZSA9PSBOVUxMKQorCWlmIChidCA9PSBO
VUxMKQogCQlyZXQgPSBibGtfdHJhY2Vfc2V0dXBfcXVldWUocSwgYmRldik7CiAKIAlpZiAocmV0
ID09IDApIHsKIAkJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2FjdF9tYXNrKQotCQkJcS0+YmxrX3Ry
YWNlLT5hY3RfbWFzayA9IHZhbHVlOworCQkJYnQtPmFjdF9tYXNrID0gdmFsdWU7CiAJCWVsc2Ug
aWYgKGF0dHIgPT0gJmRldl9hdHRyX3BpZCkKLQkJCXEtPmJsa190cmFjZS0+cGlkID0gdmFsdWU7
CisJCQlidC0+cGlkID0gdmFsdWU7CiAJCWVsc2UgaWYgKGF0dHIgPT0gJmRldl9hdHRyX3N0YXJ0
X2xiYSkKLQkJCXEtPmJsa190cmFjZS0+c3RhcnRfbGJhID0gdmFsdWU7CisJCQlidC0+c3RhcnRf
bGJhID0gdmFsdWU7CiAJCWVsc2UgaWYgKGF0dHIgPT0gJmRldl9hdHRyX2VuZF9sYmEpCi0JCQlx
LT5ibGtfdHJhY2UtPmVuZF9sYmEgPSB2YWx1ZTsKKwkJCWJ0LT5lbmRfbGJhID0gdmFsdWU7CiAJ
fQogCiBvdXRfdW5sb2NrX2JkZXY6CgpGcm9tIDBkNzkwY2IxOTdiMzY5NmRlOTExYzM3NDc2YWU4
NGY0ZDVkNzVmMDggTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IENlbmdpeiBDYW4gPGNl
bmdpekBrZXJuZWwud3RmPgpEYXRlOiBXZWQsIDQgTWFyIDIwMjAgMTM6NTg6MTkgKzAzMDAKU3Vi
amVjdDogYmxrdHJhY2U6IGZpeCBkZXJlZmVyZW5jZSBhZnRlciBudWxsIGNoZWNrCgpjb21taXQg
MTUzMDMxYTMwMWJiMDcxOTRlOWMzNzQ2NmNmY2U4ZWFjYjk3NzYyMSB1cHN0cmVhbS4KClRoZXJl
IHdhcyBhIHJlY2VudCBjaGFuZ2UgaW4gYmxrdHJhY2UuYyB0aGF0IGFkZGVkIGEgUkNVIHByb3Rl
Y3Rpb24gdG8KYHEtPmJsa190cmFjZWAgaW4gb3JkZXIgdG8gZml4IGEgdXNlLWFmdGVyLWZyZWUg
aXNzdWUgZHVyaW5nIGFjY2Vzcy4KCkhvd2V2ZXIgdGhlIGNoYW5nZSBtaXNzZWQgYW4gZWRnZSBj
YXNlIHRoYXQgY2FuIGxlYWQgdG8gZGVyZWZlcmVuY2luZyBvZgpgYnRgIHBvaW50ZXIgZXZlbiB3
aGVuIGl0J3MgTlVMTDoKCkNvdmVyaXR5IHN0YXRpYyBhbmFseXplciBtYXJrZWQgdGhpcyBhcyBh
IEZPUldBUkRfTlVMTCBpc3N1ZSB3aXRoIENJRAoxNDYwNDU4LgoKYGBgCi9rZXJuZWwvdHJhY2Uv
YmxrdHJhY2UuYzogMTkwNCBpbiBzeXNmc19ibGtfdHJhY2VfYXR0cl9zdG9yZSgpCjE4OTggICAg
ICAgICAgICByZXQgPSAwOwoxODk5ICAgICAgICAgICAgaWYgKGJ0ID09IE5VTEwpCjE5MDAgICAg
ICAgICAgICAgICAgICAgIHJldCA9IGJsa190cmFjZV9zZXR1cF9xdWV1ZShxLCBiZGV2KTsKMTkw
MQoxOTAyICAgICAgICAgICAgaWYgKHJldCA9PSAwKSB7CjE5MDMgICAgICAgICAgICAgICAgICAg
IGlmIChhdHRyID09ICZkZXZfYXR0cl9hY3RfbWFzaykKPj4+ICAgICBDSUQgMTQ2MDQ1ODogIE51
bGwgcG9pbnRlciBkZXJlZmVyZW5jZXMgIChGT1JXQVJEX05VTEwpCj4+PiAgICAgRGVyZWZlcmVu
Y2luZyBudWxsIHBvaW50ZXIgImJ0Ii4KMTkwNCAgICAgICAgICAgICAgICAgICAgICAgICAgICBi
dC0+YWN0X21hc2sgPSB2YWx1ZTsKMTkwNSAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYXR0
ciA9PSAmZGV2X2F0dHJfcGlkKQoxOTA2ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0LT5w
aWQgPSB2YWx1ZTsKMTkwNyAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYXR0ciA9PSAmZGV2
X2F0dHJfc3RhcnRfbGJhKQoxOTA4ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0LT5zdGFy
dF9sYmEgPSB2YWx1ZTsKMTkwOSAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYXR0ciA9PSAm
ZGV2X2F0dHJfZW5kX2xiYSkKYGBgCgpBZGRlZCBhIHJlYXNzaWdubWVudCB3aXRoIFJDVSBhbm5v
dGF0aW9uIHRvIGZpeCB0aGUgaXNzdWUuCgpGaXhlczogYzc4MGU4NmRkNDggKCJibGt0cmFjZTog
UHJvdGVjdCBxLT5ibGtfdHJhY2Ugd2l0aCBSQ1UiKQpSZXZpZXdlZC1ieTogTWluZyBMZWkgPG1p
bmcubGVpQHJlZGhhdC5jb20+ClJldmlld2VkLWJ5OiBCb2IgTGl1IDxib2IubGl1QG9yYWNsZS5j
b20+ClJldmlld2VkLWJ5OiBTdGV2ZW4gUm9zdGVkdCAoVk13YXJlKSA8cm9zdGVkdEBnb29kbWlz
Lm9yZz4KU2lnbmVkLW9mZi1ieTogQ2VuZ2l6IENhbiA8Y2VuZ2l6QGtlcm5lbC53dGY+ClNpZ25l
ZC1vZmYtYnk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KU2lnbmVkLW9mZi1ieTogQmVu
IEh1dGNoaW5ncyA8YmVuLmh1dGNoaW5nc0Bjb2RldGhpbmsuY28udWs+Ci0tLQoga2VybmVsL3Ry
YWNlL2Jsa3RyYWNlLmMgfCA1ICsrKystCiAxIGZpbGUgY2hhbmdlZCwgNCBpbnNlcnRpb25zKCsp
LCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEva2VybmVsL3RyYWNlL2Jsa3RyYWNlLmMgYi9r
ZXJuZWwvdHJhY2UvYmxrdHJhY2UuYwppbmRleCAxZGEzNGM5MTA5OWUuLmE2MGMwOWUwYmRhOCAx
MDA2NDQKLS0tIGEva2VybmVsL3RyYWNlL2Jsa3RyYWNlLmMKKysrIGIva2VybmVsL3RyYWNlL2Js
a3RyYWNlLmMKQEAgLTE5MTEsOCArMTkxMSwxMSBAQCBzdGF0aWMgc3NpemVfdCBzeXNmc19ibGtf
dHJhY2VfYXR0cl9zdG9yZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJfQogCiAJcmV0ID0gMDsKLQlp
ZiAoYnQgPT0gTlVMTCkKKwlpZiAoYnQgPT0gTlVMTCkgewogCQlyZXQgPSBibGtfdHJhY2Vfc2V0
dXBfcXVldWUocSwgYmRldik7CisJCWJ0ID0gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChxLT5i
bGtfdHJhY2UsCisJCQkJbG9ja2RlcF9pc19oZWxkKCZxLT5ibGtfdHJhY2VfbXV0ZXgpKTsKKwl9
CiAKIAlpZiAocmV0ID09IDApIHsKIAkJaWYgKGF0dHIgPT0gJmRldl9hdHRyX2FjdF9tYXNrKQoK
RnJvbSBiOTEwMjdjN2M4MTNhM2FmYzEwODc3NGEyZGQ0ZmM3MDM5NmZiMWU4IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBDaGFvIFl1IDx5dWNoYW8wQGh1YXdlaS5jb20+CkRhdGU6IE1v
biwgNCBTZXAgMjAxNyAxODo1ODowMiArMDgwMApTdWJqZWN0OiBmMmZzOiBpbnRyb2R1Y2UgcmVh
ZF9pbmxpbmVfeGF0dHIKCmNvbW1pdCBhNWY0MzNmNzQxMDUzMGFlNmJiOTA3ZWJjMDQ5NTQ3ZDlk
Y2U2NjViIHVwc3RyZWFtLgoKQ29tbWl0IGJhMzhjMjdlYjkzZSAoImYyZnM6IGVuaGFuY2UgbG9v
a3VwIHhhdHRyIikgaW50cm9kdWNlcwpsb29rdXBfYWxsX3hhdHRycyBkdXBsaWNhdGluZyBmcm9t
IHJlYWRfYWxsX3hhdHRycywgd2hpY2ggbGVhdmVzCmxvdHMgb2Ygc2ltaWxhciBjb2RlcyBpbiBi
ZXR3ZWVuIHRoZW0sIHNvIGludHJvZHVjZSBuZXcgaGVscApyZWFkX2lubGluZV94YXR0ciB0byBj
bGVhbiB1cCByZWR1bmRhbnQgY29kZXMuCgpTaWduZWQtb2ZmLWJ5OiBDaGFvIFl1IDx5dWNoYW8w
QGh1YXdlaS5jb20+ClNpZ25lZC1vZmYtYnk6IEphZWdldWsgS2ltIDxqYWVnZXVrQGtlcm5lbC5v
cmc+ClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbi5odXRjaGluZ3NAY29kZXRoaW5r
LmNvLnVrPgotLS0KIGZzL2YyZnMveGF0dHIuYyB8IDU5ICsrKysrKysrKysrKysrKysrKysrKysr
Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAyOSBpbnNlcnRpb25z
KCspLCAzMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9mMmZzL3hhdHRyLmMgYi9mcy9m
MmZzL3hhdHRyLmMKaW5kZXggN2M2NTU0MDE0OGY4Li5hODM0NTE1NzdlYmMgMTAwNjQ0Ci0tLSBh
L2ZzL2YyZnMveGF0dHIuYworKysgYi9mcy9mMmZzL3hhdHRyLmMKQEAgLTI0MSw2ICsyNDEsMjkg
QEAgc3RhdGljIHN0cnVjdCBmMmZzX3hhdHRyX2VudHJ5ICpfX2ZpbmRfaW5saW5lX3hhdHRyKHZv
aWQgKmJhc2VfYWRkciwKIAlyZXR1cm4gZW50cnk7CiB9CiAKK3N0YXRpYyBpbnQgcmVhZF9pbmxp
bmVfeGF0dHIoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBhZ2UgKmlwYWdlLAorCQkJCQkJ
CXZvaWQgKnR4YXR0cl9hZGRyKQoreworCXN0cnVjdCBmMmZzX3NiX2luZm8gKnNiaSA9IEYyRlNf
SV9TQihpbm9kZSk7CisJdW5zaWduZWQgaW50IGlubGluZV9zaXplID0gaW5saW5lX3hhdHRyX3Np
emUoaW5vZGUpOworCXN0cnVjdCBwYWdlICpwYWdlID0gTlVMTDsKKwl2b2lkICppbmxpbmVfYWRk
cjsKKworCWlmIChpcGFnZSkgeworCQlpbmxpbmVfYWRkciA9IGlubGluZV94YXR0cl9hZGRyKGlw
YWdlKTsKKwl9IGVsc2UgeworCQlwYWdlID0gZ2V0X25vZGVfcGFnZShzYmksIGlub2RlLT5pX2lu
byk7CisJCWlmIChJU19FUlIocGFnZSkpCisJCQlyZXR1cm4gUFRSX0VSUihwYWdlKTsKKworCQlp
bmxpbmVfYWRkciA9IGlubGluZV94YXR0cl9hZGRyKHBhZ2UpOworCX0KKwltZW1jcHkodHhhdHRy
X2FkZHIsIGlubGluZV9hZGRyLCBpbmxpbmVfc2l6ZSk7CisJZjJmc19wdXRfcGFnZShwYWdlLCAx
KTsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGxvb2t1cF9hbGxfeGF0dHJzKHN0cnVj
dCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIAkJCQl1bnNpZ25lZCBpbnQgaW5k
ZXgsIHVuc2lnbmVkIGludCBsZW4sCiAJCQkJY29uc3QgY2hhciAqbmFtZSwgc3RydWN0IGYyZnNf
eGF0dHJfZW50cnkgKip4ZSwKQEAgLTI2MywyMSArMjg2LDkgQEAgc3RhdGljIGludCBsb29rdXBf
YWxsX3hhdHRycyhzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgcGFnZSAqaXBhZ2UsCiAKIAkv
KiByZWFkIGZyb20gaW5saW5lIHhhdHRyICovCiAJaWYgKGlubGluZV9zaXplKSB7Ci0JCXN0cnVj
dCBwYWdlICpwYWdlID0gTlVMTDsKLQkJdm9pZCAqaW5saW5lX2FkZHI7Ci0KLQkJaWYgKGlwYWdl
KSB7Ci0JCQlpbmxpbmVfYWRkciA9IGlubGluZV94YXR0cl9hZGRyKGlwYWdlKTsKLQkJfSBlbHNl
IHsKLQkJCXBhZ2UgPSBnZXRfbm9kZV9wYWdlKHNiaSwgaW5vZGUtPmlfaW5vKTsKLQkJCWlmIChJ
U19FUlIocGFnZSkpIHsKLQkJCQllcnIgPSBQVFJfRVJSKHBhZ2UpOwotCQkJCWdvdG8gb3V0Owot
CQkJfQotCQkJaW5saW5lX2FkZHIgPSBpbmxpbmVfeGF0dHJfYWRkcihwYWdlKTsKLQkJfQotCQlt
ZW1jcHkodHhhdHRyX2FkZHIsIGlubGluZV9hZGRyLCBpbmxpbmVfc2l6ZSk7Ci0JCWYyZnNfcHV0
X3BhZ2UocGFnZSwgMSk7CisJCWVyciA9IHJlYWRfaW5saW5lX3hhdHRyKGlub2RlLCBpcGFnZSwg
dHhhdHRyX2FkZHIpOworCQlpZiAoZXJyKQorCQkJZ290byBvdXQ7CiAKIAkJKnhlID0gX19maW5k
X2lubGluZV94YXR0cih0eGF0dHJfYWRkciwgJmxhc3RfYWRkciwKIAkJCQkJCWluZGV4LCBsZW4s
IG5hbWUpOwpAQCAtMzM5LDIxICszNTAsOSBAQCBzdGF0aWMgaW50IHJlYWRfYWxsX3hhdHRycyhz
dHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgcGFnZSAqaXBhZ2UsCiAKIAkvKiByZWFkIGZyb20g
aW5saW5lIHhhdHRyICovCiAJaWYgKGlubGluZV9zaXplKSB7Ci0JCXN0cnVjdCBwYWdlICpwYWdl
ID0gTlVMTDsKLQkJdm9pZCAqaW5saW5lX2FkZHI7Ci0KLQkJaWYgKGlwYWdlKSB7Ci0JCQlpbmxp
bmVfYWRkciA9IGlubGluZV94YXR0cl9hZGRyKGlwYWdlKTsKLQkJfSBlbHNlIHsKLQkJCXBhZ2Ug
PSBnZXRfbm9kZV9wYWdlKHNiaSwgaW5vZGUtPmlfaW5vKTsKLQkJCWlmIChJU19FUlIocGFnZSkp
IHsKLQkJCQllcnIgPSBQVFJfRVJSKHBhZ2UpOwotCQkJCWdvdG8gZmFpbDsKLQkJCX0KLQkJCWlu
bGluZV9hZGRyID0gaW5saW5lX3hhdHRyX2FkZHIocGFnZSk7Ci0JCX0KLQkJbWVtY3B5KHR4YXR0
cl9hZGRyLCBpbmxpbmVfYWRkciwgaW5saW5lX3NpemUpOwotCQlmMmZzX3B1dF9wYWdlKHBhZ2Us
IDEpOworCQllcnIgPSByZWFkX2lubGluZV94YXR0cihpbm9kZSwgaXBhZ2UsIHR4YXR0cl9hZGRy
KTsKKwkJaWYgKGVycikKKwkJCWdvdG8gZmFpbDsKIAl9CiAKIAkvKiByZWFkIGZyb20geGF0dHIg
bm9kZSBibG9jayAqLwoKRnJvbSA4YTY1ZTQzZWExMWMzM2NhNWM3Y2U2NGZkOTVkYWJmYjE3ZDNh
ZjBkIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBDaGFvIFl1IDx5dWNoYW8wQGh1YXdl
aS5jb20+CkRhdGU6IE1vbiwgNCBTZXAgMjAxNyAxODo1ODowMyArMDgwMApTdWJqZWN0OiBmMmZz
OiBpbnRyb2R1Y2UgcmVhZF94YXR0cl9ibG9jawoKY29tbWl0IDYzODQwNjk1ZjY4YzIwNzM1ZGY4
ODYxMDYyMzQzY2YxZmFhMzc2OGQgdXBzdHJlYW0uCgpDb21taXQgYmEzOGMyN2ViOTNlICgiZjJm
czogZW5oYW5jZSBsb29rdXAgeGF0dHIiKSBpbnRyb2R1Y2VzCmxvb2t1cF9hbGxfeGF0dHJzIGR1
cGxpY2F0aW5nIGZyb20gcmVhZF9hbGxfeGF0dHJzLCB3aGljaCBsZWF2ZXMKbG90cyBvZiBzaW1p
bGFyIGNvZGVzIGluIGJldHdlZW4gdGhlbSwgc28gaW50cm9kdWNlIG5ldyBoZWxwCnJlYWRfeGF0
dHJfYmxvY2sgdG8gY2xlYW4gdXAgcmVkdW5kYW50IGNvZGVzLgoKU2lnbmVkLW9mZi1ieTogQ2hh
byBZdSA8eXVjaGFvMEBodWF3ZWkuY29tPgpTaWduZWQtb2ZmLWJ5OiBKYWVnZXVrIEtpbSA8amFl
Z2V1a0BrZXJuZWwub3JnPgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW4uaHV0Y2hp
bmdzQGNvZGV0aGluay5jby51az4KLS0tCiBmcy9mMmZzL3hhdHRyLmMgfCA1MCArKysrKysrKysr
KysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwg
MjQgaW5zZXJ0aW9ucygrKSwgMjYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZnMvZjJmcy94
YXR0ci5jIGIvZnMvZjJmcy94YXR0ci5jCmluZGV4IGE4MzQ1MTU3N2ViYy4uNzY5NTY1NDcyNmVi
IDEwMDY0NAotLS0gYS9mcy9mMmZzL3hhdHRyLmMKKysrIGIvZnMvZjJmcy94YXR0ci5jCkBAIC0y
NjQsMTIgKzI2NCwzMSBAQCBzdGF0aWMgaW50IHJlYWRfaW5saW5lX3hhdHRyKHN0cnVjdCBpbm9k
ZSAqaW5vZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGlu
dCByZWFkX3hhdHRyX2Jsb2NrKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHZvaWQgKnR4YXR0cl9hZGRy
KQoreworCXN0cnVjdCBmMmZzX3NiX2luZm8gKnNiaSA9IEYyRlNfSV9TQihpbm9kZSk7CisJbmlk
X3QgeG5pZCA9IEYyRlNfSShpbm9kZSktPmlfeGF0dHJfbmlkOworCXVuc2lnbmVkIGludCBpbmxp
bmVfc2l6ZSA9IGlubGluZV94YXR0cl9zaXplKGlub2RlKTsKKwlzdHJ1Y3QgcGFnZSAqeHBhZ2U7
CisJdm9pZCAqeGF0dHJfYWRkcjsKKworCS8qIFRoZSBpbm9kZSBhbHJlYWR5IGhhcyBhbiBleHRl
bmRlZCBhdHRyaWJ1dGUgYmxvY2suICovCisJeHBhZ2UgPSBnZXRfbm9kZV9wYWdlKHNiaSwgeG5p
ZCk7CisJaWYgKElTX0VSUih4cGFnZSkpCisJCXJldHVybiBQVFJfRVJSKHhwYWdlKTsKKworCXhh
dHRyX2FkZHIgPSBwYWdlX2FkZHJlc3MoeHBhZ2UpOworCW1lbWNweSh0eGF0dHJfYWRkciArIGlu
bGluZV9zaXplLCB4YXR0cl9hZGRyLCBWQUxJRF9YQVRUUl9CTE9DS19TSVpFKTsKKwlmMmZzX3B1
dF9wYWdlKHhwYWdlLCAxKTsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGxvb2t1cF9h
bGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIAkJCQl1
bnNpZ25lZCBpbnQgaW5kZXgsIHVuc2lnbmVkIGludCBsZW4sCiAJCQkJY29uc3QgY2hhciAqbmFt
ZSwgc3RydWN0IGYyZnNfeGF0dHJfZW50cnkgKip4ZSwKIAkJCQl2b2lkICoqYmFzZV9hZGRyKQog
ewotCXN0cnVjdCBmMmZzX3NiX2luZm8gKnNiaSA9IEYyRlNfSV9TQihpbm9kZSk7CiAJdm9pZCAq
Y3VyX2FkZHIsICp0eGF0dHJfYWRkciwgKmxhc3RfYWRkciA9IE5VTEw7CiAJbmlkX3QgeG5pZCA9
IEYyRlNfSShpbm9kZSktPmlfeGF0dHJfbmlkOwogCXVuc2lnbmVkIGludCBzaXplID0geG5pZCA/
IFZBTElEX1hBVFRSX0JMT0NLX1NJWkUgOiAwOwpAQCAtMjk4LDE5ICszMTcsOSBAQCBzdGF0aWMg
aW50IGxvb2t1cF9hbGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICpp
cGFnZSwKIAogCS8qIHJlYWQgZnJvbSB4YXR0ciBub2RlIGJsb2NrICovCiAJaWYgKHhuaWQpIHsK
LQkJc3RydWN0IHBhZ2UgKnhwYWdlOwotCQl2b2lkICp4YXR0cl9hZGRyOwotCi0JCS8qIFRoZSBp
bm9kZSBhbHJlYWR5IGhhcyBhbiBleHRlbmRlZCBhdHRyaWJ1dGUgYmxvY2suICovCi0JCXhwYWdl
ID0gZ2V0X25vZGVfcGFnZShzYmksIHhuaWQpOwotCQlpZiAoSVNfRVJSKHhwYWdlKSkgewotCQkJ
ZXJyID0gUFRSX0VSUih4cGFnZSk7CisJCWVyciA9IHJlYWRfeGF0dHJfYmxvY2soaW5vZGUsIHR4
YXR0cl9hZGRyKTsKKwkJaWYgKGVycikKIAkJCWdvdG8gb3V0OwotCQl9Ci0KLQkJeGF0dHJfYWRk
ciA9IHBhZ2VfYWRkcmVzcyh4cGFnZSk7Ci0JCW1lbWNweSh0eGF0dHJfYWRkciArIGlubGluZV9z
aXplLCB4YXR0cl9hZGRyLCBzaXplKTsKLQkJZjJmc19wdXRfcGFnZSh4cGFnZSwgMSk7CiAJfQog
CiAJaWYgKGxhc3RfYWRkcikKQEAgLTMzNSw3ICszNDQsNiBAQCBzdGF0aWMgaW50IGxvb2t1cF9h
bGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIHN0YXRp
YyBpbnQgcmVhZF9hbGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBwYWdlICpp
cGFnZSwKIAkJCQkJCQl2b2lkICoqYmFzZV9hZGRyKQogewotCXN0cnVjdCBmMmZzX3NiX2luZm8g
KnNiaSA9IEYyRlNfSV9TQihpbm9kZSk7CiAJc3RydWN0IGYyZnNfeGF0dHJfaGVhZGVyICpoZWFk
ZXI7CiAJbmlkX3QgeG5pZCA9IEYyRlNfSShpbm9kZSktPmlfeGF0dHJfbmlkOwogCXVuc2lnbmVk
IGludCBzaXplID0gVkFMSURfWEFUVFJfQkxPQ0tfU0laRTsKQEAgLTM1NywxOSArMzY1LDkgQEAg
c3RhdGljIGludCByZWFkX2FsbF94YXR0cnMoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBh
Z2UgKmlwYWdlLAogCiAJLyogcmVhZCBmcm9tIHhhdHRyIG5vZGUgYmxvY2sgKi8KIAlpZiAoeG5p
ZCkgewotCQlzdHJ1Y3QgcGFnZSAqeHBhZ2U7Ci0JCXZvaWQgKnhhdHRyX2FkZHI7Ci0KLQkJLyog
VGhlIGlub2RlIGFscmVhZHkgaGFzIGFuIGV4dGVuZGVkIGF0dHJpYnV0ZSBibG9jay4gKi8KLQkJ
eHBhZ2UgPSBnZXRfbm9kZV9wYWdlKHNiaSwgeG5pZCk7Ci0JCWlmIChJU19FUlIoeHBhZ2UpKSB7
Ci0JCQllcnIgPSBQVFJfRVJSKHhwYWdlKTsKKwkJZXJyID0gcmVhZF94YXR0cl9ibG9jayhpbm9k
ZSwgdHhhdHRyX2FkZHIpOworCQlpZiAoZXJyKQogCQkJZ290byBmYWlsOwotCQl9Ci0KLQkJeGF0
dHJfYWRkciA9IHBhZ2VfYWRkcmVzcyh4cGFnZSk7Ci0JCW1lbWNweSh0eGF0dHJfYWRkciArIGlu
bGluZV9zaXplLCB4YXR0cl9hZGRyLCBzaXplKTsKLQkJZjJmc19wdXRfcGFnZSh4cGFnZSwgMSk7
CiAJfQogCiAJaGVhZGVyID0gWEFUVFJfSERSKHR4YXR0cl9hZGRyKTsKCkZyb20gZDRhMTdkYzZh
MGU0YjFjMmYyNmMzZGNmZTdkZjJiNjQ3MzA2YWRlNyBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEK
RnJvbTogSmFlZ2V1ayBLaW0gPGphZWdldWtAa2VybmVsLm9yZz4KRGF0ZTogV2VkLCAyNiBEZWMg
MjAxOCAxOTo1NDowNyAtMDgwMApTdWJqZWN0OiBmMmZzOiBzYW5pdHkgY2hlY2sgb2YgeGF0dHIg
ZW50cnkgc2l6ZQoKY29tbWl0IDY0YmViYTA1NThmY2U3YjU5ZTlhOGE3YWZkNzcyOTBlODJhMjIx
NjMgdXBzdHJlYW0uCgpUaGVyZSBpcyBhIHNlY3VyaXR5IHJlcG9ydCB3aGVyZSBmMmZzX2dldHhh
dHRyKCkgaGFzIGEgaG9sZSB0byBleHBvc2Ugd3JvbmcKbWVtb3J5IHJlZ2lvbiB3aGVuIHRoZSBp
bWFnZSBpcyBtYWxmb3JtZWQgbGlrZSB0aGlzLgoKZjJmc19nZXR4YXR0cjogZW50cnktPmVfbmFt
ZV9sZW46IDQsIHNpemU6IDEyMjg4LCBidWZmZXJfc2l6ZTogMTYzODQsIGxlbjogNAoKU2lnbmVk
LW9mZi1ieTogSmFlZ2V1ayBLaW0gPGphZWdldWtAa2VybmVsLm9yZz4KW2J3aDogQmFja3BvcnRl
ZCB0byA0LjE0OiBLZWVwIHVzaW5nIGt6YWxsb2MoKV0KU2lnbmVkLW9mZi1ieTogQmVuIEh1dGNo
aW5ncyA8YmVuLmh1dGNoaW5nc0Bjb2RldGhpbmsuY28udWs+Ci0tLQogZnMvZjJmcy94YXR0ci5j
IHwgMTggKysrKysrKysrKysrKy0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTMgaW5zZXJ0aW9ucygr
KSwgNSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9mMmZzL3hhdHRyLmMgYi9mcy9mMmZz
L3hhdHRyLmMKaW5kZXggNzY5NTY1NDcyNmViLi4xMGEzZWEwYzUzZTcgMTAwNjQ0Ci0tLSBhL2Zz
L2YyZnMveGF0dHIuYworKysgYi9mcy9mMmZzL3hhdHRyLmMKQEAgLTI4Nyw3ICsyODcsNyBAQCBz
dGF0aWMgaW50IHJlYWRfeGF0dHJfYmxvY2soc3RydWN0IGlub2RlICppbm9kZSwgdm9pZCAqdHhh
dHRyX2FkZHIpCiBzdGF0aWMgaW50IGxvb2t1cF9hbGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAqaW5v
ZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIAkJCQl1bnNpZ25lZCBpbnQgaW5kZXgsIHVuc2lnbmVk
IGludCBsZW4sCiAJCQkJY29uc3QgY2hhciAqbmFtZSwgc3RydWN0IGYyZnNfeGF0dHJfZW50cnkg
Kip4ZSwKLQkJCQl2b2lkICoqYmFzZV9hZGRyKQorCQkJCXZvaWQgKipiYXNlX2FkZHIsIGludCAq
YmFzZV9zaXplKQogewogCXZvaWQgKmN1cl9hZGRyLCAqdHhhdHRyX2FkZHIsICpsYXN0X2FkZHIg
PSBOVUxMOwogCW5pZF90IHhuaWQgPSBGMkZTX0koaW5vZGUpLT5pX3hhdHRyX25pZDsKQEAgLTI5
OCw4ICsyOTgsOCBAQCBzdGF0aWMgaW50IGxvb2t1cF9hbGxfeGF0dHJzKHN0cnVjdCBpbm9kZSAq
aW5vZGUsIHN0cnVjdCBwYWdlICppcGFnZSwKIAlpZiAoIXNpemUgJiYgIWlubGluZV9zaXplKQog
CQlyZXR1cm4gLUVOT0RBVEE7CiAKLQl0eGF0dHJfYWRkciA9IGt6YWxsb2MoaW5saW5lX3NpemUg
KyBzaXplICsgWEFUVFJfUEFERElOR19TSVpFLAotCQkJCQkJCUdGUF9GMkZTX1pFUk8pOworCSpi
YXNlX3NpemUgPSBpbmxpbmVfc2l6ZSArIHNpemUgKyBYQVRUUl9QQURESU5HX1NJWkU7CisJdHhh
dHRyX2FkZHIgPSBremFsbG9jKCpiYXNlX3NpemUsIEdGUF9GMkZTX1pFUk8pOwogCWlmICghdHhh
dHRyX2FkZHIpCiAJCXJldHVybiAtRU5PTUVNOwogCkBAIC0zMTEsOCArMzExLDEwIEBAIHN0YXRp
YyBpbnQgbG9va3VwX2FsbF94YXR0cnMoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBhZ2Ug
KmlwYWdlLAogCiAJCSp4ZSA9IF9fZmluZF9pbmxpbmVfeGF0dHIodHhhdHRyX2FkZHIsICZsYXN0
X2FkZHIsCiAJCQkJCQlpbmRleCwgbGVuLCBuYW1lKTsKLQkJaWYgKCp4ZSkKKwkJaWYgKCp4ZSkg
eworCQkJKmJhc2Vfc2l6ZSA9IGlubGluZV9zaXplOwogCQkJZ290byBjaGVjazsKKwkJfQogCX0K
IAogCS8qIHJlYWQgZnJvbSB4YXR0ciBub2RlIGJsb2NrICovCkBAIC00NjIsNiArNDY0LDcgQEAg
aW50IGYyZnNfZ2V0eGF0dHIoc3RydWN0IGlub2RlICppbm9kZSwgaW50IGluZGV4LCBjb25zdCBj
aGFyICpuYW1lLAogCWludCBlcnJvciA9IDA7CiAJdW5zaWduZWQgaW50IHNpemUsIGxlbjsKIAl2
b2lkICpiYXNlX2FkZHIgPSBOVUxMOworCWludCBiYXNlX3NpemU7CiAKIAlpZiAobmFtZSA9PSBO
VUxMKQogCQlyZXR1cm4gLUVJTlZBTDsKQEAgLTQ3Miw3ICs0NzUsNyBAQCBpbnQgZjJmc19nZXR4
YXR0cihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBpbnQgaW5kZXgsIGNvbnN0IGNoYXIgKm5hbWUsCiAK
IAlkb3duX3JlYWQoJkYyRlNfSShpbm9kZSktPmlfeGF0dHJfc2VtKTsKIAllcnJvciA9IGxvb2t1
cF9hbGxfeGF0dHJzKGlub2RlLCBpcGFnZSwgaW5kZXgsIGxlbiwgbmFtZSwKLQkJCQkmZW50cnks
ICZiYXNlX2FkZHIpOworCQkJCSZlbnRyeSwgJmJhc2VfYWRkciwgJmJhc2Vfc2l6ZSk7CiAJdXBf
cmVhZCgmRjJGU19JKGlub2RlKS0+aV94YXR0cl9zZW0pOwogCWlmIChlcnJvcikKIAkJcmV0dXJu
IGVycm9yOwpAQCAtNDg2LDYgKzQ4OSwxMSBAQCBpbnQgZjJmc19nZXR4YXR0cihzdHJ1Y3QgaW5v
ZGUgKmlub2RlLCBpbnQgaW5kZXgsIGNvbnN0IGNoYXIgKm5hbWUsCiAKIAlpZiAoYnVmZmVyKSB7
CiAJCWNoYXIgKnB2YWwgPSBlbnRyeS0+ZV9uYW1lICsgZW50cnktPmVfbmFtZV9sZW47CisKKwkJ
aWYgKGJhc2Vfc2l6ZSAtIChwdmFsIC0gKGNoYXIgKiliYXNlX2FkZHIpIDwgc2l6ZSkgeworCQkJ
ZXJyb3IgPSAtRVJBTkdFOworCQkJZ290byBvdXQ7CisJCX0KIAkJbWVtY3B5KGJ1ZmZlciwgcHZh
bCwgc2l6ZSk7CiAJfQogCWVycm9yID0gc2l6ZTsKCkZyb20gYjkzNDI1OTczOGEzOGNkOWJkODA0
ZmE0NzA4YzA4ZjNjMzlkODhiOCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogUmFuZGFs
bCBIdWFuZyA8aHVhbmdyYW5kYWxsQGdvb2dsZS5jb20+CkRhdGU6IFRodSwgMTEgQXByIDIwMTkg
MTY6MjY6NDYgKzA4MDAKU3ViamVjdDogZjJmczogZml4IHRvIGF2b2lkIGFjY2Vzc2luZyB4YXR0
ciBhY3Jvc3MgdGhlIGJvdW5kYXJ5Cgpjb21taXQgMjc3N2U2NTQzNzFkZDQyMDdhM2E3ZjRmYjVm
YTM5NTUwMDUzYTA4MCB1cHN0cmVhbS4KCldoZW4gd2UgdHJhdmVyc2UgeGF0dHIgZW50cmllcyB2
aWEgX19maW5kX3hhdHRyKCksCmlmIHRoZSByYXcgZmlsZXN5c3RlbSBjb250ZW50IGlzIGZha2Vk
IG9yIGFueSBoYXJkd2FyZSBmYWlsdXJlIG9jY3VycywKb3V0LW9mLWJvdW5kIGVycm9yIGNhbiBi
ZSBkZXRlY3RlZCBieSBLQVNBTi4KRml4IHRoZSBpc3N1ZSBieSBpbnRyb2R1Y2luZyBib3VuZGFy
eSBjaGVjay4KClsgICAzOC40MDI4NzhdIGM3ICAgMTgyNyBCVUc6IEtBU0FOOiBzbGFiLW91dC1v
Zi1ib3VuZHMgaW4gZjJmc19nZXR4YXR0cisweDUxOC8weDY4YwpbICAgMzguNDAyODkxXSBjNyAg
IDE4MjcgUmVhZCBvZiBzaXplIDQgYXQgYWRkciBmZmZmZmZjMGI2ZmIzNWRjIGJ5IHRhc2sKWyAg
IDM4LjQwMjkzNV0gYzcgICAxODI3IENhbGwgdHJhY2U6ClsgICAzOC40MDI5NTJdIGM3ICAgMTgy
NyBbPGZmZmZmZjkwMDgwOTAwM2M+XSBkdW1wX2JhY2t0cmFjZSsweDAvMHg2YmMKWyAgIDM4LjQw
Mjk2Nl0gYzcgICAxODI3IFs8ZmZmZmZmOTAwODA5MDAzMD5dIHNob3dfc3RhY2srMHgyMC8weDJj
ClsgICAzOC40MDI5ODFdIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDg3MWFiMTA+XSBkdW1wX3N0YWNr
KzB4ZmMvMHgxNDAKWyAgIDM4LjQwMjk5NV0gYzcgICAxODI3IFs8ZmZmZmZmOTAwODMyNWM0MD5d
IHByaW50X2FkZHJlc3NfZGVzY3JpcHRpb24rMHg4MC8weDJkOApbICAgMzguNDAzMDA5XSBjNyAg
IDE4MjcgWzxmZmZmZmY5MDA4MzI2MjljPl0ga2FzYW5fcmVwb3J0X2Vycm9yKzB4MTk4LzB4MWZj
ClsgICAzOC40MDMwMjJdIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDgzMjYxMDQ+XSBrYXNhbl9yZXBv
cnRfZXJyb3IrMHgwLzB4MWZjClsgICAzOC40MDMwMzddIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDgz
MjUwMDA+XSBfX2FzYW5fbG9hZDQrMHgxYjAvMHgxYjgKWyAgIDM4LjQwMzA1MV0gYzcgICAxODI3
IFs8ZmZmZmZmOTAwODVmY2M0ND5dIGYyZnNfZ2V0eGF0dHIrMHg1MTgvMHg2OGMKWyAgIDM4LjQw
MzA2Nl0gYzcgICAxODI3IFs8ZmZmZmZmOTAwODVmYzUwOD5dIGYyZnNfeGF0dHJfZ2VuZXJpY19n
ZXQrMHhiMC8weGQwClsgICAzOC40MDMwODBdIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDgzOTU3MDg+
XSBfX3Zmc19nZXR4YXR0cisweDFmNC8weDFmYwpbICAgMzguNDAzMDk2XSBjNyAgIDE4MjcgWzxm
ZmZmZmY5MDA4NjIxYmQwPl0gaW5vZGVfZG9pbml0X3dpdGhfZGVudHJ5KzB4MzYwLzB4OTM4Clsg
ICAzOC40MDMxMDldIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDg2MmQ2Y2M+XSBzZWxpbnV4X2RfaW5z
dGFudGlhdGUrMHgyYy8weDM4ClsgICAzOC40MDMxMjNdIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDg2
MWIwMTg+XSBzZWN1cml0eV9kX2luc3RhbnRpYXRlKzB4NjgvMHg5OApbICAgMzguNDAzMTM2XSBj
NyAgIDE4MjcgWzxmZmZmZmY5MDA4Mzc3ZGI4Pl0gZF9zcGxpY2VfYWxpYXMrMHg1OC8weDM0OApb
ICAgMzguNDAzMTQ5XSBjNyAgIDE4MjcgWzxmZmZmZmY5MDA4NThkMTZjPl0gZjJmc19sb29rdXAr
MHg2MDgvMHg3NzQKWyAgIDM4LjQwMzE2M10gYzcgICAxODI3IFs8ZmZmZmZmOTAwODM1ZWFjYz5d
IGxvb2t1cF9zbG93KzB4MWUwLzB4MmNjClsgICAzOC40MDMxNzddIGM3ICAgMTgyNyBbPGZmZmZm
ZjkwMDgzNjdmZTA+XSB3YWxrX2NvbXBvbmVudCsweDE2MC8weDUyMApbICAgMzguNDAzMTkwXSBj
NyAgIDE4MjcgWzxmZmZmZmY5MDA4MzY5ZWY0Pl0gcGF0aF9sb29rdXBhdCsweDExMC8weDJiNApb
ICAgMzguNDAzMjAzXSBjNyAgIDE4MjcgWzxmZmZmZmY5MDA4MzVkZDM4Pl0gZmlsZW5hbWVfbG9v
a3VwKzB4MWQ4LzB4M2E4ClsgICAzOC40MDMyMTZdIGM3ICAgMTgyNyBbPGZmZmZmZjkwMDgzNWVl
YjA+XSB1c2VyX3BhdGhfYXRfZW1wdHkrMHg1NC8weDY4ClsgICAzOC40MDMyMjldIGM3ICAgMTgy
NyBbPGZmZmZmZjkwMDgzOTVmNDQ+XSBTeVNfZ2V0eGF0dHIrMHhiNC8weDE4YwpbICAgMzguNDAz
MjQxXSBjNyAgIDE4MjcgWzxmZmZmZmY5MDA4MDg0MjAwPl0gZWwwX3N2Y19uYWtlZCsweDM0LzB4
MzgKClNpZ25lZC1vZmYtYnk6IFJhbmRhbGwgSHVhbmcgPGh1YW5ncmFuZGFsbEBnb29nbGUuY29t
PgpbSmFlZ2V1ayBLaW06IEZpeCB3cm9uZyBlbmRpbmcgYm91bmRhcnldClJldmlld2VkLWJ5OiBD
aGFvIFl1IDx5dWNoYW8wQGh1YXdlaS5jb20+ClNpZ25lZC1vZmYtYnk6IEphZWdldWsgS2ltIDxq
YWVnZXVrQGtlcm5lbC5vcmc+Cltid2g6IEJhY2twb3J0ZWQgdG8gNC4xNDogYWRqdXN0IGNvbnRl
eHRdClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbi5odXRjaGluZ3NAY29kZXRoaW5r
LmNvLnVrPgotLS0KIGZzL2YyZnMveGF0dHIuYyB8IDM2ICsrKysrKysrKysrKysrKysrKysrKysr
KysrKy0tLS0tLS0tLQogZnMvZjJmcy94YXR0ci5oIHwgIDIgKysKIDIgZmlsZXMgY2hhbmdlZCwg
MjkgaW5zZXJ0aW9ucygrKSwgOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9mcy9mMmZzL3hh
dHRyLmMgYi9mcy9mMmZzL3hhdHRyLmMKaW5kZXggMTBhM2VhMGM1M2U3Li4wOTk4YTZjNzVjYWQg
MTAwNjQ0Ci0tLSBhL2ZzL2YyZnMveGF0dHIuYworKysgYi9mcy9mMmZzL3hhdHRyLmMKQEAgLTIw
MSwxMiArMjAxLDE3IEBAIHN0YXRpYyBpbmxpbmUgY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIg
KmYyZnNfeGF0dHJfaGFuZGxlcihpbnQgaW5kZXgpCiAJcmV0dXJuIGhhbmRsZXI7CiB9CiAKLXN0
YXRpYyBzdHJ1Y3QgZjJmc194YXR0cl9lbnRyeSAqX19maW5kX3hhdHRyKHZvaWQgKmJhc2VfYWRk
ciwgaW50IGluZGV4LAotCQkJCQlzaXplX3QgbGVuLCBjb25zdCBjaGFyICpuYW1lKQorc3RhdGlj
IHN0cnVjdCBmMmZzX3hhdHRyX2VudHJ5ICpfX2ZpbmRfeGF0dHIodm9pZCAqYmFzZV9hZGRyLAor
CQkJCXZvaWQgKmxhc3RfYmFzZV9hZGRyLCBpbnQgaW5kZXgsCisJCQkJc2l6ZV90IGxlbiwgY29u
c3QgY2hhciAqbmFtZSkKIHsKIAlzdHJ1Y3QgZjJmc194YXR0cl9lbnRyeSAqZW50cnk7CiAKIAls
aXN0X2Zvcl9lYWNoX3hhdHRyKGVudHJ5LCBiYXNlX2FkZHIpIHsKKwkJaWYgKCh2b2lkICopKGVu
dHJ5KSArIHNpemVvZihfX3UzMikgPiBsYXN0X2Jhc2VfYWRkciB8fAorCQkJKHZvaWQgKilYQVRU
Ul9ORVhUX0VOVFJZKGVudHJ5KSA+IGxhc3RfYmFzZV9hZGRyKQorCQkJcmV0dXJuIE5VTEw7CisK
IAkJaWYgKGVudHJ5LT5lX25hbWVfaW5kZXggIT0gaW5kZXgpCiAJCQljb250aW51ZTsKIAkJaWYg
KGVudHJ5LT5lX25hbWVfbGVuICE9IGxlbikKQEAgLTI4OSwyMCArMjk0LDIyIEBAIHN0YXRpYyBp
bnQgbG9va3VwX2FsbF94YXR0cnMoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IHBhZ2UgKmlw
YWdlLAogCQkJCWNvbnN0IGNoYXIgKm5hbWUsIHN0cnVjdCBmMmZzX3hhdHRyX2VudHJ5ICoqeGUs
CiAJCQkJdm9pZCAqKmJhc2VfYWRkciwgaW50ICpiYXNlX3NpemUpCiB7Ci0Jdm9pZCAqY3VyX2Fk
ZHIsICp0eGF0dHJfYWRkciwgKmxhc3RfYWRkciA9IE5VTEw7CisJdm9pZCAqY3VyX2FkZHIsICp0
eGF0dHJfYWRkciwgKmxhc3RfdHhhdHRyX2FkZHI7CisJdm9pZCAqbGFzdF9hZGRyID0gTlVMTDsK
IAluaWRfdCB4bmlkID0gRjJGU19JKGlub2RlKS0+aV94YXR0cl9uaWQ7Ci0JdW5zaWduZWQgaW50
IHNpemUgPSB4bmlkID8gVkFMSURfWEFUVFJfQkxPQ0tfU0laRSA6IDA7CiAJdW5zaWduZWQgaW50
IGlubGluZV9zaXplID0gaW5saW5lX3hhdHRyX3NpemUoaW5vZGUpOwogCWludCBlcnIgPSAwOwog
Ci0JaWYgKCFzaXplICYmICFpbmxpbmVfc2l6ZSkKKwlpZiAoIXhuaWQgJiYgIWlubGluZV9zaXpl
KQogCQlyZXR1cm4gLUVOT0RBVEE7CiAKLQkqYmFzZV9zaXplID0gaW5saW5lX3NpemUgKyBzaXpl
ICsgWEFUVFJfUEFERElOR19TSVpFOworCSpiYXNlX3NpemUgPSBYQVRUUl9TSVpFKHhuaWQsIGlu
b2RlKSArIFhBVFRSX1BBRERJTkdfU0laRTsKIAl0eGF0dHJfYWRkciA9IGt6YWxsb2MoKmJhc2Vf
c2l6ZSwgR0ZQX0YyRlNfWkVSTyk7CiAJaWYgKCF0eGF0dHJfYWRkcikKIAkJcmV0dXJuIC1FTk9N
RU07CiAKKwlsYXN0X3R4YXR0cl9hZGRyID0gKHZvaWQgKil0eGF0dHJfYWRkciArIFhBVFRSX1NJ
WkUoeG5pZCwgaW5vZGUpOworCiAJLyogcmVhZCBmcm9tIGlubGluZSB4YXR0ciAqLwogCWlmIChp
bmxpbmVfc2l6ZSkgewogCQllcnIgPSByZWFkX2lubGluZV94YXR0cihpbm9kZSwgaXBhZ2UsIHR4
YXR0cl9hZGRyKTsKQEAgLTMyOSw3ICszMzYsMTEgQEAgc3RhdGljIGludCBsb29rdXBfYWxsX3hh
dHRycyhzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgcGFnZSAqaXBhZ2UsCiAJZWxzZQogCQlj
dXJfYWRkciA9IHR4YXR0cl9hZGRyOwogCi0JKnhlID0gX19maW5kX3hhdHRyKGN1cl9hZGRyLCBp
bmRleCwgbGVuLCBuYW1lKTsKKwkqeGUgPSBfX2ZpbmRfeGF0dHIoY3VyX2FkZHIsIGxhc3RfdHhh
dHRyX2FkZHIsIGluZGV4LCBsZW4sIG5hbWUpOworCWlmICghKnhlKSB7CisJCWVyciA9IC1FRkFV
TFQ7CisJCWdvdG8gb3V0OworCX0KIGNoZWNrOgogCWlmIChJU19YQVRUUl9MQVNUX0VOVFJZKCp4
ZSkpIHsKIAkJZXJyID0gLUVOT0RBVEE7CkBAIC01NjIsNyArNTczLDggQEAgc3RhdGljIGludCBf
X2YyZnNfc2V0eGF0dHIoc3RydWN0IGlub2RlICppbm9kZSwgaW50IGluZGV4LAogCQkJc3RydWN0
IHBhZ2UgKmlwYWdlLCBpbnQgZmxhZ3MpCiB7CiAJc3RydWN0IGYyZnNfeGF0dHJfZW50cnkgKmhl
cmUsICpsYXN0OwotCXZvaWQgKmJhc2VfYWRkcjsKKwl2b2lkICpiYXNlX2FkZHIsICpsYXN0X2Jh
c2VfYWRkcjsKKwluaWRfdCB4bmlkID0gRjJGU19JKGlub2RlKS0+aV94YXR0cl9uaWQ7CiAJaW50
IGZvdW5kLCBuZXdzaXplOwogCXNpemVfdCBsZW47CiAJX191MzIgbmV3X2hzaXplOwpAQCAtNTg2
LDggKzU5OCwxNCBAQCBzdGF0aWMgaW50IF9fZjJmc19zZXR4YXR0cihzdHJ1Y3QgaW5vZGUgKmlu
b2RlLCBpbnQgaW5kZXgsCiAJaWYgKGVycm9yKQogCQlyZXR1cm4gZXJyb3I7CiAKKwlsYXN0X2Jh
c2VfYWRkciA9ICh2b2lkICopYmFzZV9hZGRyICsgWEFUVFJfU0laRSh4bmlkLCBpbm9kZSk7CisK
IAkvKiBmaW5kIGVudHJ5IHdpdGggd2FudGVkIG5hbWUuICovCi0JaGVyZSA9IF9fZmluZF94YXR0
cihiYXNlX2FkZHIsIGluZGV4LCBsZW4sIG5hbWUpOworCWhlcmUgPSBfX2ZpbmRfeGF0dHIoYmFz
ZV9hZGRyLCBsYXN0X2Jhc2VfYWRkciwgaW5kZXgsIGxlbiwgbmFtZSk7CisJaWYgKCFoZXJlKSB7
CisJCWVycm9yID0gLUVGQVVMVDsKKwkJZ290byBleGl0OworCX0KIAogCWZvdW5kID0gSVNfWEFU
VFJfTEFTVF9FTlRSWShoZXJlKSA/IDAgOiAxOwogCmRpZmYgLS1naXQgYS9mcy9mMmZzL3hhdHRy
LmggYi9mcy9mMmZzL3hhdHRyLmgKaW5kZXggZGJjZDFkMTZlNjY5Li4yYTRlY2FmMzM4ZWEgMTAw
NjQ0Ci0tLSBhL2ZzL2YyZnMveGF0dHIuaAorKysgYi9mcy9mMmZzL3hhdHRyLmgKQEAgLTc0LDYg
Kzc0LDggQEAgc3RydWN0IGYyZnNfeGF0dHJfZW50cnkgewogCQkJCWVudHJ5ID0gWEFUVFJfTkVY
VF9FTlRSWShlbnRyeSkpCiAjZGVmaW5lIFZBTElEX1hBVFRSX0JMT0NLX1NJWkUJKFBBR0VfU0la
RSAtIHNpemVvZihzdHJ1Y3Qgbm9kZV9mb290ZXIpKQogI2RlZmluZSBYQVRUUl9QQURESU5HX1NJ
WkUJKHNpemVvZihfX3UzMikpCisjZGVmaW5lIFhBVFRSX1NJWkUoeCxpKQkJKCgoeCkgPyBWQUxJ
RF9YQVRUUl9CTE9DS19TSVpFIDogMCkgKwlcCisJCQkJCQkoaW5saW5lX3hhdHRyX3NpemUoaSkp
KQogI2RlZmluZSBNSU5fT0ZGU0VUKGkpCQlYQVRUUl9BTElHTihpbmxpbmVfeGF0dHJfc2l6ZShp
KSArCVwKIAkJCQkJCVZBTElEX1hBVFRSX0JMT0NLX1NJWkUpCiAKCkZyb20gZmIwYWM4YjM0NmJm
NmRhNGY5MTgwZWRhNjY1ODg3MmRlYjUyYzEwZiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJv
bTogUmFuZGFsbCBIdWFuZyA8aHVhbmdyYW5kYWxsQGdvb2dsZS5jb20+CkRhdGU6IEZyaSwgMTgg
T2N0IDIwMTkgMTQ6NTY6MjIgKzA4MDAKU3ViamVjdDogZjJmczogZml4IHRvIGF2b2lkIG1lbW9y
eSBsZWFrYWdlIGluIGYyZnNfbGlzdHhhdHRyCgpjb21taXQgNjg4MDc4ZTdmMzZjMjkzZGFlMjVi
MzM4ZGRjOWUwYTI3OTBmNmUwNiB1cHN0cmVhbS4KCkluIGYyZnNfbGlzdHhhdHRyLCB0aGVyZSBp
cyBubyBib3VuZGFyeSBjaGVjayBiZWZvcmUKbWVtY3B5IGVfbmFtZSB0byBidWZmZXIuCklmIHRo
ZSBlX25hbWVfbGVuIGlzIGNvcnJ1cHRlZCwKdW5leHBlY3RlZCBtZW1vcnkgY29udGVudHMgbWF5
IGJlIHJldHVybmVkIHRvIHRoZSBidWZmZXIuCgpTaWduZWQtb2ZmLWJ5OiBSYW5kYWxsIEh1YW5n
IDxodWFuZ3JhbmRhbGxAZ29vZ2xlLmNvbT4KUmV2aWV3ZWQtYnk6IENoYW8gWXUgPHl1Y2hhbzBA
aHVhd2VpLmNvbT4KU2lnbmVkLW9mZi1ieTogSmFlZ2V1ayBLaW0gPGphZWdldWtAa2VybmVsLm9y
Zz4KW2J3aDogQmFja3BvcnRlZCB0byA0LjE0OiBVc2UgZjJmc19tc2coKSBpbnN0ZWFkIG9mIGYy
ZnNfZXJyKCldClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbi5odXRjaGluZ3NAY29k
ZXRoaW5rLmNvLnVrPgotLS0KIGZzL2YyZnMveGF0dHIuYyB8IDE1ICsrKysrKysrKysrKysrLQog
MSBmaWxlIGNoYW5nZWQsIDE0IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1n
aXQgYS9mcy9mMmZzL3hhdHRyLmMgYi9mcy9mMmZzL3hhdHRyLmMKaW5kZXggMDk5OGE2Yzc1Y2Fk
Li44OWM5NzUxMjZkNGUgMTAwNjQ0Ci0tLSBhL2ZzL2YyZnMveGF0dHIuYworKysgYi9mcy9mMmZz
L3hhdHRyLmMKQEAgLTUxNiw4ICs1MTYsOSBAQCBpbnQgZjJmc19nZXR4YXR0cihzdHJ1Y3QgaW5v
ZGUgKmlub2RlLCBpbnQgaW5kZXgsIGNvbnN0IGNoYXIgKm5hbWUsCiBzc2l6ZV90IGYyZnNfbGlz
dHhhdHRyKHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgY2hhciAqYnVmZmVyLCBzaXplX3QgYnVmZmVy
X3NpemUpCiB7CiAJc3RydWN0IGlub2RlICppbm9kZSA9IGRfaW5vZGUoZGVudHJ5KTsKKwluaWRf
dCB4bmlkID0gRjJGU19JKGlub2RlKS0+aV94YXR0cl9uaWQ7CiAJc3RydWN0IGYyZnNfeGF0dHJf
ZW50cnkgKmVudHJ5OwotCXZvaWQgKmJhc2VfYWRkcjsKKwl2b2lkICpiYXNlX2FkZHIsICpsYXN0
X2Jhc2VfYWRkcjsKIAlpbnQgZXJyb3IgPSAwOwogCXNpemVfdCByZXN0ID0gYnVmZmVyX3NpemU7
CiAKQEAgLTUyNyw2ICs1MjgsOCBAQCBzc2l6ZV90IGYyZnNfbGlzdHhhdHRyKHN0cnVjdCBkZW50
cnkgKmRlbnRyeSwgY2hhciAqYnVmZmVyLCBzaXplX3QgYnVmZmVyX3NpemUpCiAJaWYgKGVycm9y
KQogCQlyZXR1cm4gZXJyb3I7CiAKKwlsYXN0X2Jhc2VfYWRkciA9ICh2b2lkICopYmFzZV9hZGRy
ICsgWEFUVFJfU0laRSh4bmlkLCBpbm9kZSk7CisKIAlsaXN0X2Zvcl9lYWNoX3hhdHRyKGVudHJ5
LCBiYXNlX2FkZHIpIHsKIAkJY29uc3Qgc3RydWN0IHhhdHRyX2hhbmRsZXIgKmhhbmRsZXIgPQog
CQkJZjJmc194YXR0cl9oYW5kbGVyKGVudHJ5LT5lX25hbWVfaW5kZXgpOwpAQCAtNTM0LDYgKzUz
NywxNiBAQCBzc2l6ZV90IGYyZnNfbGlzdHhhdHRyKHN0cnVjdCBkZW50cnkgKmRlbnRyeSwgY2hh
ciAqYnVmZmVyLCBzaXplX3QgYnVmZmVyX3NpemUpCiAJCXNpemVfdCBwcmVmaXhfbGVuOwogCQlz
aXplX3Qgc2l6ZTsKIAorCQlpZiAoKHZvaWQgKikoZW50cnkpICsgc2l6ZW9mKF9fdTMyKSA+IGxh
c3RfYmFzZV9hZGRyIHx8CisJCQkodm9pZCAqKVhBVFRSX05FWFRfRU5UUlkoZW50cnkpID4gbGFz
dF9iYXNlX2FkZHIpIHsKKwkJCWYyZnNfbXNnKGRlbnRyeS0+ZF9zYiwgS0VSTl9FUlIsCisJCQkJ
ICJpbm9kZSAoJWx1KSBoYXMgY29ycnVwdGVkIHhhdHRyIiwKKwkJCQkgaW5vZGUtPmlfaW5vKTsK
KwkJCXNldF9zYmlfZmxhZyhGMkZTX0lfU0IoaW5vZGUpLCBTQklfTkVFRF9GU0NLKTsKKwkJCWVy
cm9yID0gLUVGU0NPUlJVUFRFRDsKKwkJCWdvdG8gY2xlYW51cDsKKwkJfQorCiAJCWlmICghaGFu
ZGxlciB8fCAoaGFuZGxlci0+bGlzdCAmJiAhaGFuZGxlci0+bGlzdChkZW50cnkpKSkKIAkJCWNv
bnRpbnVlOwogCg==


--=-4Ht6QxKNZ/6tK/l20iTk--

