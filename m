Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 1819419CADE
	for <lists+stable@lfdr.de>; Thu,  2 Apr 2020 22:16:40 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389301AbgDBUQg (ORCPT <rfc822;lists+stable@lfdr.de>);
        Thu, 2 Apr 2020 16:16:36 -0400
Received: from shards.monkeyblade.net ([23.128.96.9]:50852 "EHLO
        shards.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2389299AbgDBUQf (ORCPT
        <rfc822;stable@vger.kernel.org>); Thu, 2 Apr 2020 16:16:35 -0400
Received: from localhost (unknown [IPv6:2601:601:9f00:477::3d5])
        (using TLSv1 with cipher AES256-SHA (256/256 bits))
        (Client did not present a certificate)
        (Authenticated sender: davem-davemloft)
        by shards.monkeyblade.net (Postfix) with ESMTPSA id 97ACE15CA46F4
        for <stable@vger.kernel.org>; Thu,  2 Apr 2020 13:16:34 -0700 (PDT)
Date:   Thu, 02 Apr 2020 13:16:33 -0700 (PDT)
Message-Id: <20200402.131633.668893605649137999.davem@davemloft.net>
To:     stable@vger.kernel.org
Subject: [PATCHES] Networking
From:   David Miller <davem@davemloft.net>
X-Mailer: Mew version 6.8 on Emacs 26.1
Mime-Version: 1.0
Content-Type: Multipart/Mixed;
 boundary="--Next_Part(Thu_Apr__2_13_16_33_2020_224)--"
Content-Transfer-Encoding: 7bit
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.5.12 (shards.monkeyblade.net [149.20.54.216]); Thu, 02 Apr 2020 13:16:34 -0700 (PDT)
Sender: stable-owner@vger.kernel.org
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org

----Next_Part(Thu_Apr__2_13_16_33_2020_224)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


Please queue up the following networking bug fixes for v5.5 and v5.6
-stable, respectively.

Thank you!

----Next_Part(Thu_Apr__2_13_16_33_2020_224)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_55.mbox"

RnJvbSAzYmMxZDdhMzAxMzIzZmNjMWViNDE0NmVjOTlmYmI2YjVkNjhjM2IwIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBRaWFuIENhaSA8Y2FpQGxjYS5wdz4KRGF0ZTogV2VkLCAyNSBN
YXIgMjAyMCAxODowMTowMCAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMS82XSBpcHY0OiBmaXggYSBS
Q1UtbGlzdCBsb2NrIGluIGZpYl90cmllc3RhdF9zZXFfc2hvdwoKWyBVcHN0cmVhbSBjb21taXQg
ZmJlNGUwYzFiMjk4YjQ2NjVlZTY5MTUyNjZjOWQ2YzViOTM0ZWY0YSBdCgpmaWJfdHJpZXN0YXRf
c2VxX3Nob3coKSBjYWxscyBobGlzdF9mb3JfZWFjaF9lbnRyeV9yY3UodGIsIGhlYWQsCnRiX2hs
aXN0KSB3aXRob3V0IHJjdV9yZWFkX2xvY2soKSB3aWxsIHRyaWdnZXIgYSB3YXJuaW5nLAoKIG5l
dC9pcHY0L2ZpYl90cmllLmM6MjU3OSBSQ1UtbGlzdCB0cmF2ZXJzZWQgaW4gbm9uLXJlYWRlciBz
ZWN0aW9uISEKCiBvdGhlciBpbmZvIHRoYXQgbWlnaHQgaGVscCB1cyBkZWJ1ZyB0aGlzOgoKIHJj
dV9zY2hlZHVsZXJfYWN0aXZlID0gMiwgZGVidWdfbG9ja3MgPSAxCiAxIGxvY2sgaGVsZCBieSBw
cm9jMDEvMTE1Mjc3OgogICMwOiBjMDAwMDAxNDUwN2FjZjAwICgmcC0+bG9jayl7Ky4rLn0tezM6
M30sIGF0OiBzZXFfcmVhZCsweDU4LzB4NjcwCgogQ2FsbCBUcmFjZToKICBkdW1wX3N0YWNrKzB4
ZjQvMHgxNjQgKHVucmVsaWFibGUpCiAgbG9ja2RlcF9yY3Vfc3VzcGljaW91cysweDE0MC8weDE2
NAogIGZpYl90cmllc3RhdF9zZXFfc2hvdysweDc1MC8weDg4MAogIHNlcV9yZWFkKzB4MWEwLzB4
NjcwCiAgcHJvY19yZWdfcmVhZCsweDEwYy8weDFiMAogIF9fdmZzX3JlYWQrMHgzYy8weDcwCiAg
dmZzX3JlYWQrMHhhYy8weDE3MAogIGtzeXNfcmVhZCsweDdjLzB4MTQwCiAgc3lzdGVtX2NhbGwr
MHg1Yy8weDY4CgpGaXggaXQgYnkgYWRkaW5nIGEgcGFpciBvZiByY3VfcmVhZF9sb2NrL3VubG9j
aygpIGFuZCB1c2UKY29uZF9yZXNjaGVkX3JjdSgpIHRvIGF2b2lkIHRoZSBzaXR1YXRpb24gd2hl
cmUgd2Fsa2luZyBvZiBhIGxhcmdlCm51bWJlciBvZiBpdGVtcyAgbWF5IHByZXZlbnQgc2NoZWR1
bGluZyBmb3IgYSBsb25nIHRpbWUuCgpTaWduZWQtb2ZmLWJ5OiBRaWFuIENhaSA8Y2FpQGxjYS5w
dz4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9p
cHY0L2ZpYl90cmllLmMgfCAzICsrKwogMSBmaWxlIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKQoK
ZGlmZiAtLWdpdCBhL25ldC9pcHY0L2ZpYl90cmllLmMgYi9uZXQvaXB2NC9maWJfdHJpZS5jCmlu
ZGV4IDE5NTQ2OWExMzM3MS4uODVhNDQwOTliN2MzIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9maWJf
dHJpZS5jCisrKyBiL25ldC9pcHY0L2ZpYl90cmllLmMKQEAgLTI0NzMsNiArMjQ3Myw3IEBAIHN0
YXRpYyBpbnQgZmliX3RyaWVzdGF0X3NlcV9zaG93KHN0cnVjdCBzZXFfZmlsZSAqc2VxLCB2b2lk
ICp2KQogCQkgICAiICV6ZCBieXRlcywgc2l6ZSBvZiB0bm9kZTogJXpkIGJ5dGVzLlxuIiwKIAkJ
ICAgTEVBRl9TSVpFLCBUTk9ERV9TSVpFKDApKTsKIAorCXJjdV9yZWFkX2xvY2soKTsKIAlmb3Ig
KGggPSAwOyBoIDwgRklCX1RBQkxFX0hBU0hTWjsgaCsrKSB7CiAJCXN0cnVjdCBobGlzdF9oZWFk
ICpoZWFkID0gJm5ldC0+aXB2NC5maWJfdGFibGVfaGFzaFtoXTsKIAkJc3RydWN0IGZpYl90YWJs
ZSAqdGI7CkBAIC0yNDkyLDcgKzI0OTMsOSBAQCBzdGF0aWMgaW50IGZpYl90cmllc3RhdF9zZXFf
c2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKnNlcSwgdm9pZCAqdikKIAkJCXRyaWVfc2hvd191c2FnZShz
ZXEsIHQtPnN0YXRzKTsKICNlbmRpZgogCQl9CisJCWNvbmRfcmVzY2hlZF9yY3UoKTsKIAl9CisJ
cmN1X3JlYWRfdW5sb2NrKCk7CiAKIAlyZXR1cm4gMDsKIH0KLS0gCjIuMjAuMQoKCkZyb20gMTU3
MTZiNjU4OGQ2OTJhNmJjOWY0YTdlMmExZWZkMGY3NDUxMzUzYiBNb24gU2VwIDE3IDAwOjAwOjAw
IDIwMDEKRnJvbTogQ29kcmluIENpdWJvdGFyaXUgPGNvZHJpbi5jaXVib3Rhcml1QG1pY3JvY2hp
cC5jb20+CkRhdGU6IFR1ZSwgMzEgTWFyIDIwMjAgMTI6MzY6NTEgKzAzMDAKU3ViamVjdDogW1BB
VENIIDIvNl0gbmV0OiBkc2E6IGtzejogU2VsZWN0IEtTWiBwcm90b2NvbCB0YWcKClsgVXBzdHJl
YW0gY29tbWl0IGY3NzIxNDhlYjc1N2IwODIzZmJmZGMyZmU1OTJkNWUwNmM3ZjE5YjAgXQoKS1Na
IHByb3RvY29sIHRhZyBpcyBuZWVkZWQgYnkgdGhlIEtTWiBEU0EgZHJpdmVycy4KCkZpeGVzOiAw
YjlmOWRmYmZhYjQgKCJkc2E6IEFsbG93IHRhZyBkcml2ZXJzIHRvIGJlIGJ1aWx0IGFzIG1vZHVs
ZXMiKQpUZXN0ZWQtYnk6IENyaXN0aWFuIEJpcnNhbiA8Y3Jpc3RpYW4uYmlyc2FuQG1pY3JvY2hp
cC5jb20+ClNpZ25lZC1vZmYtYnk6IENvZHJpbiBDaXVib3Rhcml1IDxjb2RyaW4uY2l1Ym90YXJp
dUBtaWNyb2NoaXAuY29tPgpSZXZpZXdlZC1ieTogQW5kcmV3IEx1bm4gPGFuZHJld0BsdW5uLmNo
PgpSZXZpZXdlZC1ieTogRmxvcmlhbiBGYWluZWxsaSA8Zi5mYWluZWxsaUBnbWFpbC5jb20+ClNp
Z25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBk
cml2ZXJzL25ldC9kc2EvbWljcm9jaGlwL0tjb25maWcgfCAxICsKIDEgZmlsZSBjaGFuZ2VkLCAx
IGluc2VydGlvbigrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2Nv
bmZpZyBiL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2NvbmZpZwppbmRleCAxZDc4NzBjNmRm
M2MuLjRlYzZhNDdiN2Y3MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZHNhL21pY3JvY2hpcC9L
Y29uZmlnCisrKyBiL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2NvbmZpZwpAQCAtMSw1ICsx
LDYgQEAKICMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQogY29uZmlnIE5F
VF9EU0FfTUlDUk9DSElQX0tTWl9DT01NT04KKwlzZWxlY3QgTkVUX0RTQV9UQUdfS1NaCiAJdHJp
c3RhdGUKIAogbWVudWNvbmZpZyBORVRfRFNBX01JQ1JPQ0hJUF9LU1o5NDc3Ci0tIAoyLjIwLjEK
CgpGcm9tIGQ5ZTRkM2YzNGQxZjU1YTVlOWZkZGY0MDhlMTIwOWVkOGY5YzZkZTAgTW9uIFNlcCAx
NyAwMDowMDowMCAyMDAxCkZyb206IFdpbGxpYW0gRGF1Y2h5IDx3LmRhdWNoeUBjcml0ZW8uY29t
PgpEYXRlOiBGcmksIDI3IE1hciAyMDIwIDE5OjU2OjM5ICswMTAwClN1YmplY3Q6IFtQQVRDSCAz
LzZdIG5ldCwgaXBfdHVubmVsOiBmaXggaW50ZXJmYWNlIGxvb2t1cCB3aXRoIG5vIGtleQoKWyBV
cHN0cmVhbSBjb21taXQgMjU2MjlmZGFmZjJmZjUwOWRkMGIzZjVmZjkzZDcwYTc1ZTc5ZTBhMSBd
Cgp3aGVuIGNyZWF0aW5nIGEgbmV3IGlwaXAgaW50ZXJmYWNlIHdpdGggbm8gbG9jYWwvcmVtb3Rl
IGNvbmZpZ3VyYXRpb24sCnRoZSBsb29rdXAgaXMgZG9uZSB3aXRoIFRVTk5FTF9OT19LRVkgZmxh
ZywgbWFraW5nIGl0IGltcG9zc2libGUgdG8KbWF0Y2ggdGhlIG5ldyBpbnRlcmZhY2UgKG9ubHkg
cG9zc2libGUgbWF0Y2ggYmVpbmcgZmFsbGJhY2sgb3IgbWV0YWRhCmNhc2UgaW50ZXJmYWNlKTsg
ZS5nOiBgaXAgbGluayBhZGQgdHVubDEgdHlwZSBpcGlwIGRldiBldGgwYAoKVG8gZml4IHRoaXMg
Y2FzZSwgYWRkaW5nIGEgZmxhZyBjaGVjayBiZWZvcmUgdGhlIGtleSBjb21wYXJpc29uIHNvIHdl
CnBlcm1pdCB0byBtYXRjaCBhbiBpbnRlcmZhY2Ugd2l0aCBubyBsb2NhbC9yZW1vdGUgY29uZmln
OyBpdCBhbHNvIGF2b2lkcwpicmVha2luZyBwb3NzaWJsZSB1c2VybGFuZCB0b29scyByZWx5aW5n
IG9uIFRVTk5FTF9OT19LRVkgZmxhZyBhbmQKdW5pbml0aWFsaXNlZCBrZXkuCgpjb250ZXh0IGJl
aW5nIG9uIG15IHNpZGUsIEknbSBjcmVhdGluZyBhbiBleHRyYSBpcGlwIGludGVyZmFjZSBhdHRh
Y2hlZAp0byB0aGUgcGh5c2ljYWwgb25lLCBhbmQgbW92aW5nIGl0IHRvIGEgZGVkaWNhdGVkIG5h
bWVzcGFjZS4KCkZpeGVzOiBjNTQ0MTkzMjE0NTUgKCJHUkU6IFJlZmFjdG9yIEdSRSB0dW5uZWxp
bmcgY29kZS4iKQpTaWduZWQtb2ZmLWJ5OiBXaWxsaWFtIERhdWNoeSA8dy5kYXVjaHlAY3JpdGVv
LmNvbT4KU2lnbmVkLW9mZi1ieTogTmljb2xhcyBEaWNodGVsIDxuaWNvbGFzLmRpY2h0ZWxANndp
bmQuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5u
ZXQ+Ci0tLQogbmV0L2lwdjQvaXBfdHVubmVsLmMgfCA2ICstLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDEgaW5zZXJ0aW9uKCspLCA1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9pcHY0L2lw
X3R1bm5lbC5jIGIvbmV0L2lwdjQvaXBfdHVubmVsLmMKaW5kZXggNzRlMWQ5NjRhNjE1Li5jZDRi
ODQzMTBkOTIgMTAwNjQ0Ci0tLSBhL25ldC9pcHY0L2lwX3R1bm5lbC5jCisrKyBiL25ldC9pcHY0
L2lwX3R1bm5lbC5jCkBAIC0xNDIsMTEgKzE0Miw4IEBAIHN0cnVjdCBpcF90dW5uZWwgKmlwX3R1
bm5lbF9sb29rdXAoc3RydWN0IGlwX3R1bm5lbF9uZXQgKml0biwKIAkJCWNhbmQgPSB0OwogCX0K
IAotCWlmIChmbGFncyAmIFRVTk5FTF9OT19LRVkpCi0JCWdvdG8gc2tpcF9rZXlfbG9va3VwOwot
CiAJaGxpc3RfZm9yX2VhY2hfZW50cnlfcmN1KHQsIGhlYWQsIGhhc2hfbm9kZSkgewotCQlpZiAo
dC0+cGFybXMuaV9rZXkgIT0ga2V5IHx8CisJCWlmICgoIShmbGFncyAmIFRVTk5FTF9OT19LRVkp
ICYmIHQtPnBhcm1zLmlfa2V5ICE9IGtleSkgfHwKIAkJICAgIHQtPnBhcm1zLmlwaC5zYWRkciAh
PSAwIHx8CiAJCSAgICB0LT5wYXJtcy5pcGguZGFkZHIgIT0gMCB8fAogCQkgICAgISh0LT5kZXYt
PmZsYWdzICYgSUZGX1VQKSkKQEAgLTE1OCw3ICsxNTUsNiBAQCBzdHJ1Y3QgaXBfdHVubmVsICpp
cF90dW5uZWxfbG9va3VwKHN0cnVjdCBpcF90dW5uZWxfbmV0ICppdG4sCiAJCQljYW5kID0gdDsK
IAl9CiAKLXNraXBfa2V5X2xvb2t1cDoKIAlpZiAoY2FuZCkKIAkJcmV0dXJuIGNhbmQ7CiAKLS0g
CjIuMjAuMQoKCkZyb20gMThkZGRjMWE1NTRhZDBjYTMzYjcyYjAxNmY4YmQ2NWMxN2Y4MWI0NSBN
b24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWFyY2VsbyBSaWNhcmRvIExlaXRuZXIgPG1h
cmNlbG8ubGVpdG5lckBnbWFpbC5jb20+CkRhdGU6IFRodSwgMjYgTWFyIDIwMjAgMjA6NDc6NDYg
LTAzMDAKU3ViamVjdDogW1BBVENIIDQvNl0gc2N0cDogZml4IHBvc3NpYmx5IHVzaW5nIGEgYmFk
IHNhZGRyIHdpdGggYSBnaXZlbiBkc3QKClsgVXBzdHJlYW0gY29tbWl0IDU4MmVlYTIzMDUzNmE2
ZjEwNDA5N2RkNDYyMDU4MjIwMDVkNWZlM2EgXQoKVW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2Vz
LCBkZXBlbmRpbmcgb24gdGhlIG9yZGVyIG9mIGFkZHJlc3NlcyBvbiB0aGUKaW50ZXJmYWNlcywg
aXQgY291bGQgYmUgdGhhdCBzY3RwX3ZbNDZdX2dldF9kc3QoKSB3b3VsZCByZXR1cm4gYSBkc3QK
d2l0aCBhIG1pc21hdGNoZWQgc3RydWN0IGZsb3dpLgoKRm9yIGV4YW1wbGUsIGlmIHdoZW4gd2Fs
a2luZyB0aHJvdWdoIHRoZSBiaW5kIGFkZHJlc3NlcyBhbmQgdGhlIGZpcnN0Cm9uZSBpcyBub3Qg
YSBtYXRjaCwgaXQgc2F2ZXMgdGhlIGRzdCBhcyBhIGZhbGxiYWNrIChhZGRlZCBpbgo0MTBmMDM4
MzFjMDcpLCBidXQgbm90IHRoZSBmbG93aS4gVGhlbiBpZiB0aGUgbmV4dCBvbmUgaXMgYWxzbyBu
b3QgYQptYXRjaCwgdGhlIHByZXZpb3VzIGRzdCB3aWxsIGJlIHJldHVybmVkIGJ1dCB3aXRoIHRo
ZSBmbG93aSBpbmZvcm1hdGlvbgpmb3IgdGhlIDJuZCBhZGRyZXNzLCB3aGljaCBpcyB3cm9uZy4K
ClRoZSBmaXggaXMgdG8gdXNlIGEgbG9jYWxseSBzdG9yZWQgZmxvd2kgdGhhdCBjYW4gYmUgdXNl
ZCBmb3Igc3VjaAphdHRlbXB0cywgYW5kIGNvcHkgaXQgdG8gdGhlIHBhcmFtZXRlciBvbmx5IGlu
IGNhc2UgaXQgaXMgYSBwb3NzaWJsZQptYXRjaCwgdG9nZXRoZXIgd2l0aCB0aGUgY29ycmVzcG9u
ZGluZyBkc3QgZW50cnkuCgpUaGUgcGF0Y2ggdXBkYXRlcyBJUHY2IGNvZGUgbW9zdGx5IGp1c3Qg
dG8gYmUgaW4gc3luYy4gRXZlbiB0aG91Z2ggdGhlIGlzc3VlCmlzIGFsc28gcHJlc2VudCB0aGVy
ZSwgaXQgZmFsbGJhY2sgaXMgbm90IGV4cGVjdGVkIHRvIHdvcmsgd2l0aCBJUHY2LgoKRml4ZXM6
IDQxMGYwMzgzMWMwNyAoInNjdHA6IGFkZCByb3V0aW5nIG91dHB1dCBmYWxsYmFjayIpClJlcG9y
dGVkLWJ5OiBKaW4gTWVuZyA8bWVuZy5hLmppbkBub2tpYS1zYmVsbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IE1hcmNlbG8gUmljYXJkbyBMZWl0bmVyIDxtYXJjZWxvLmxlaXRuZXJAZ21haWwuY29tPgpU
ZXN0ZWQtYnk6IFhpbiBMb25nIDxsdWNpZW4ueGluQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTog
RGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9zY3RwL2lwdjYu
YyAgICAgfCAyMCArKysrKysrKysrKysrKy0tLS0tLQogbmV0L3NjdHAvcHJvdG9jb2wuYyB8IDI4
ICsrKysrKysrKysrKysrKysrKystLS0tLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgMzMgaW5zZXJ0
aW9ucygrKSwgMTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3NjdHAvaXB2Ni5jIGIv
bmV0L3NjdHAvaXB2Ni5jCmluZGV4IGJjNzM0Y2ZhYTI5ZS4uYzg3YWY0MzAxMDdhIDEwMDY0NAot
LS0gYS9uZXQvc2N0cC9pcHY2LmMKKysrIGIvbmV0L3NjdHAvaXB2Ni5jCkBAIC0yMjgsNyArMjI4
LDggQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAq
dCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIHsKIAlzdHJ1Y3Qgc2N0cF9hc3NvY2lhdGlvbiAq
YXNvYyA9IHQtPmFzb2M7CiAJc3RydWN0IGRzdF9lbnRyeSAqZHN0ID0gTlVMTDsKLQlzdHJ1Y3Qg
Zmxvd2k2ICpmbDYgPSAmZmwtPnUuaXA2OworCXN0cnVjdCBmbG93aSBfZmw7CisJc3RydWN0IGZs
b3dpNiAqZmw2ID0gJl9mbC51LmlwNjsKIAlzdHJ1Y3Qgc2N0cF9iaW5kX2FkZHIgKmJwOwogCXN0
cnVjdCBpcHY2X3BpbmZvICpucCA9IGluZXQ2X3NrKHNrKTsKIAlzdHJ1Y3Qgc2N0cF9zb2NrYWRk
cl9lbnRyeSAqbGFkZHI7CkBAIC0yMzgsNyArMjM5LDcgQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9n
ZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwK
IAllbnVtIHNjdHBfc2NvcGUgc2NvcGU7CiAJX191OCBtYXRjaGxlbiA9IDA7CiAKLQltZW1zZXQo
Zmw2LCAwLCBzaXplb2Yoc3RydWN0IGZsb3dpNikpOworCW1lbXNldCgmX2ZsLCAwLCBzaXplb2Yo
X2ZsKSk7CiAJZmw2LT5kYWRkciA9IGRhZGRyLT52Ni5zaW42X2FkZHI7CiAJZmw2LT5mbDZfZHBv
cnQgPSBkYWRkci0+djYuc2luNl9wb3J0OwogCWZsNi0+Zmxvd2k2X3Byb3RvID0gSVBQUk9UT19T
Q1RQOwpAQCAtMjc2LDggKzI3NywxMSBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y2X2dldF9kc3Qoc3Ry
dWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogCXJjdV9yZWFk
X3VubG9jaygpOwogCiAJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNr
LCBmbDYsIGZpbmFsX3ApOwotCWlmICghYXNvYyB8fCBzYWRkcikKKwlpZiAoIWFzb2MgfHwgc2Fk
ZHIpIHsKKwkJdC0+ZHN0ID0gZHN0OworCQltZW1jcHkoZmwsICZfZmwsIHNpemVvZihfZmwpKTsK
IAkJZ290byBvdXQ7CisJfQogCiAJYnAgPSAmYXNvYy0+YmFzZS5iaW5kX2FkZHI7CiAJc2NvcGUg
PSBzY3RwX3Njb3BlKGRhZGRyKTsKQEAgLTMwMCw2ICszMDQsOCBAQCBzdGF0aWMgdm9pZCBzY3Rw
X3Y2X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNh
ZGRyLAogCQkJaWYgKChsYWRkci0+YS5zYS5zYV9mYW1pbHkgPT0gQUZfSU5FVDYpICYmCiAJCQkg
ICAgKHNjdHBfdjZfY21wX2FkZHIoJmRzdF9zYWRkciwgJmxhZGRyLT5hKSkpIHsKIAkJCQlyY3Vf
cmVhZF91bmxvY2soKTsKKwkJCQl0LT5kc3QgPSBkc3Q7CisJCQkJbWVtY3B5KGZsLCAmX2ZsLCBz
aXplb2YoX2ZsKSk7CiAJCQkJZ290byBvdXQ7CiAJCQl9CiAJCX0KQEAgLTMzOCw2ICszNDQsOCBA
QCBzdGF0aWMgdm9pZCBzY3RwX3Y2X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1
bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogCQkJaWYgKCFJU19FUlJfT1JfTlVMTChkc3QpKQogCQkJ
CWRzdF9yZWxlYXNlKGRzdCk7CiAJCQlkc3QgPSBiZHN0OworCQkJdC0+ZHN0ID0gZHN0OworCQkJ
bWVtY3B5KGZsLCAmX2ZsLCBzaXplb2YoX2ZsKSk7CiAJCQlicmVhazsKIAkJfQogCkBAIC0zNTEs
NiArMzU5LDggQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5z
cG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIAkJCWRzdF9yZWxlYXNlKGRzdCk7CiAJ
CWRzdCA9IGJkc3Q7CiAJCW1hdGNobGVuID0gYm1hdGNobGVuOworCQl0LT5kc3QgPSBkc3Q7CisJ
CW1lbWNweShmbCwgJl9mbCwgc2l6ZW9mKF9mbCkpOwogCX0KIAlyY3VfcmVhZF91bmxvY2soKTsK
IApAQCAtMzU5LDE0ICszNjksMTIgQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVj
dCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIAkJc3RydWN0IHJ0
Nl9pbmZvICpydDsKIAogCQlydCA9IChzdHJ1Y3QgcnQ2X2luZm8gKilkc3Q7Ci0JCXQtPmRzdCA9
IGRzdDsKIAkJdC0+ZHN0X2Nvb2tpZSA9IHJ0Nl9nZXRfY29va2llKHJ0KTsKIAkJcHJfZGVidWco
InJ0Nl9kc3Q6JXBJNi8lZCBydDZfc3JjOiVwSTZcbiIsCiAJCQkgJnJ0LT5ydDZpX2RzdC5hZGRy
LCBydC0+cnQ2aV9kc3QucGxlbiwKLQkJCSAmZmw2LT5zYWRkcik7CisJCQkgJmZsLT51LmlwNi5z
YWRkcik7CiAJfSBlbHNlIHsKIAkJdC0+ZHN0ID0gTlVMTDsKLQogCQlwcl9kZWJ1Zygibm8gcm91
dGVcbiIpOwogCX0KIH0KZGlmZiAtLWdpdCBhL25ldC9zY3RwL3Byb3RvY29sLmMgYi9uZXQvc2N0
cC9wcm90b2NvbC5jCmluZGV4IDc4YWYyZmNmOTBjYy4uMDkyZDFhZmRlZTBkIDEwMDY0NAotLS0g
YS9uZXQvc2N0cC9wcm90b2NvbC5jCisrKyBiL25ldC9zY3RwL3Byb3RvY29sLmMKQEAgLTQwOSw3
ICs0MDksOCBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y0X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNw
b3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogewogCXN0cnVjdCBzY3RwX2Fzc29jaWF0
aW9uICphc29jID0gdC0+YXNvYzsKIAlzdHJ1Y3QgcnRhYmxlICpydDsKLQlzdHJ1Y3QgZmxvd2k0
ICpmbDQgPSAmZmwtPnUuaXA0OworCXN0cnVjdCBmbG93aSBfZmw7CisJc3RydWN0IGZsb3dpNCAq
Zmw0ID0gJl9mbC51LmlwNDsKIAlzdHJ1Y3Qgc2N0cF9iaW5kX2FkZHIgKmJwOwogCXN0cnVjdCBz
Y3RwX3NvY2thZGRyX2VudHJ5ICpsYWRkcjsKIAlzdHJ1Y3QgZHN0X2VudHJ5ICpkc3QgPSBOVUxM
OwpAQCAtNDE5LDcgKzQyMCw3IEBAIHN0YXRpYyB2b2lkIHNjdHBfdjRfZ2V0X2RzdChzdHJ1Y3Qg
c2N0cF90cmFuc3BvcnQgKnQsIHVuaW9uIHNjdHBfYWRkciAqc2FkZHIsCiAKIAlpZiAodC0+ZHNj
cCAmIFNDVFBfRFNDUF9TRVRfTUFTSykKIAkJdG9zID0gdC0+ZHNjcCAmIFNDVFBfRFNDUF9WQUxf
TUFTSzsKLQltZW1zZXQoZmw0LCAweDAsIHNpemVvZihzdHJ1Y3QgZmxvd2k0KSk7CisJbWVtc2V0
KCZfZmwsIDB4MCwgc2l6ZW9mKF9mbCkpOwogCWZsNC0+ZGFkZHIgID0gZGFkZHItPnY0LnNpbl9h
ZGRyLnNfYWRkcjsKIAlmbDQtPmZsNF9kcG9ydCA9IGRhZGRyLT52NC5zaW5fcG9ydDsKIAlmbDQt
PmZsb3dpNF9wcm90byA9IElQUFJPVE9fU0NUUDsKQEAgLTQzOCw4ICs0MzksMTEgQEAgc3RhdGlj
IHZvaWQgc2N0cF92NF9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0
cF9hZGRyICpzYWRkciwKIAkJICZmbDQtPnNhZGRyKTsKIAogCXJ0ID0gaXBfcm91dGVfb3V0cHV0
X2tleShzb2NrX25ldChzayksIGZsNCk7Ci0JaWYgKCFJU19FUlIocnQpKQorCWlmICghSVNfRVJS
KHJ0KSkgewogCQlkc3QgPSAmcnQtPmRzdDsKKwkJdC0+ZHN0ID0gZHN0OworCQltZW1jcHkoZmws
ICZfZmwsIHNpemVvZihfZmwpKTsKKwl9CiAKIAkvKiBJZiB0aGVyZSBpcyBubyBhc3NvY2lhdGlv
biBvciBpZiBhIHNvdXJjZSBhZGRyZXNzIGlzIHBhc3NlZCwgbm8KIAkgKiBtb3JlIHZhbGlkYXRp
b24gaXMgcmVxdWlyZWQuCkBAIC01MDIsMjcgKzUwNiwzMyBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y0
X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRy
LAogCQlvZGV2ID0gX19pcF9kZXZfZmluZChzb2NrX25ldChzayksIGxhZGRyLT5hLnY0LnNpbl9h
ZGRyLnNfYWRkciwKIAkJCQkgICAgIGZhbHNlKTsKIAkJaWYgKCFvZGV2IHx8IG9kZXYtPmlmaW5k
ZXggIT0gZmw0LT5mbG93aTRfb2lmKSB7Ci0JCQlpZiAoIWRzdCkKKwkJCWlmICghZHN0KSB7CiAJ
CQkJZHN0ID0gJnJ0LT5kc3Q7Ci0JCQllbHNlCisJCQkJdC0+ZHN0ID0gZHN0OworCQkJCW1lbWNw
eShmbCwgJl9mbCwgc2l6ZW9mKF9mbCkpOworCQkJfSBlbHNlIHsKIAkJCQlkc3RfcmVsZWFzZSgm
cnQtPmRzdCk7CisJCQl9CiAJCQljb250aW51ZTsKIAkJfQogCiAJCWRzdF9yZWxlYXNlKGRzdCk7
CiAJCWRzdCA9ICZydC0+ZHN0OworCQl0LT5kc3QgPSBkc3Q7CisJCW1lbWNweShmbCwgJl9mbCwg
c2l6ZW9mKF9mbCkpOwogCQlicmVhazsKIAl9CiAKIG91dF91bmxvY2s6CiAJcmN1X3JlYWRfdW5s
b2NrKCk7CiBvdXQ6Ci0JdC0+ZHN0ID0gZHN0OwotCWlmIChkc3QpCisJaWYgKGRzdCkgewogCQlw
cl9kZWJ1ZygicnRfZHN0OiVwSTQsIHJ0X3NyYzolcEk0XG4iLAotCQkJICZmbDQtPmRhZGRyLCAm
Zmw0LT5zYWRkcik7Ci0JZWxzZQorCQkJICZmbC0+dS5pcDQuZGFkZHIsICZmbC0+dS5pcDQuc2Fk
ZHIpOworCX0gZWxzZSB7CisJCXQtPmRzdCA9IE5VTEw7CiAJCXByX2RlYnVnKCJubyByb3V0ZVxu
Iik7CisJfQogfQogCiAvKiBGb3IgdjQsIHRoZSBzb3VyY2UgYWRkcmVzcyBpcyBjYWNoZWQgaW4g
dGhlIHJvdXRlIGVudHJ5KGRzdCkuIFNvIG5vIG5lZWQKLS0gCjIuMjAuMQoKCkZyb20gNzczZDMy
NDYyY2FjZjIzOTJkODVmYTcxNGQyNGFiYzJiMzM0NzRlZSBNb24gU2VwIDE3IDAwOjAwOjAwIDIw
MDEKRnJvbTogUWl1anVuIEh1YW5nIDxocWphZ2FpbkBnbWFpbC5jb20+CkRhdGU6IEZyaSwgMjcg
TWFyIDIwMjAgMTE6MDc6NTEgKzA4MDAKU3ViamVjdDogW1BBVENIIDUvNl0gc2N0cDogZml4IHJl
ZmNvdW50IGJ1ZyBpbiBzY3RwX3dmcmVlCgpbIFVwc3RyZWFtIGNvbW1pdCA1YzNlODJmZTE1OTYy
MmU0NmU5MTQ1OGMxYTY1MDljMzIxYTYyODIwIF0KCldlIHNob3VsZCBpdGVyYXRlIG92ZXIgdGhl
IGRhdGFtc2dzIHRvIG1vdmUKYWxsIGNodW5rcyhza2JzKSB0byBuZXdzay4KClRoZSBmb2xsb3dp
bmcgY2FzZSBjYXVzZSB0aGUgYnVnOgpmb3IgdGhlIHRyb3VibGUgU0tCLCBpdCB3YXMgaW4gb3V0
cS0+dHJhbnNtaXR0ZWQgbGlzdAoKc2N0cF9vdXRxX3NhY2sKICAgICAgICBzY3RwX2NoZWNrX3Ry
YW5zbWl0dGVkCiAgICAgICAgICAgICAgICBTS0Igd2FzIG1vdmVkIHRvIG91dHEtPnNhY2tlZCBs
aXN0CiAgICAgICAgdGhlbiB0aHJvdyBhd2F5IHRoZSBzYWNrIHF1ZXVlCiAgICAgICAgICAgICAg
ICBTS0Igd2FzIGRlbGV0ZWQgZnJvbSBvdXRxLT5zYWNrZWQKKGJ1dCBpdCB3YXMgaGVsZCBieSBk
YXRhbXNnIGF0IHNjdHBfZGF0YW1zZ190b19hc29jClNvLCBzY3RwX3dmcmVlIHdhcyBub3QgY2Fs
bGVkIGhlcmUpCgp0aGVuIG1pZ3JhdGUgaGFwcGVuZWQKCiAgICAgICAgc2N0cF9mb3JfZWFjaF90
eF9kYXRhY2h1bmsoCiAgICAgICAgc2N0cF9jbGVhcl9vd25lcl93KTsKICAgICAgICBzY3RwX2Fz
c29jX21pZ3JhdGUoKTsKICAgICAgICBzY3RwX2Zvcl9lYWNoX3R4X2RhdGFjaHVuaygKICAgICAg
ICBzY3RwX3NldF9vd25lcl93KTsKU0tCIHdhcyBub3QgaW4gdGhlIG91dHEsIGFuZCB3YXMgbm90
IGNoYW5nZWQgdG8gbmV3c2sKCmZpbmFsbHkKCl9fc2N0cF9vdXRxX3RlYXJkb3duCiAgICAgICAg
c2N0cF9jaHVua19wdXQgKGZvciBhbm90aGVyIHNrYikKICAgICAgICAgICAgICAgIHNjdHBfZGF0
YW1zZ19wdXQKICAgICAgICAgICAgICAgICAgICAgICAgX19rZnJlZV9za2IobXNnLT5mcmFnX2xp
c3QpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2N0cF93ZnJlZSAoZm9yIFNLQikK
CVNLQi0+c2sgd2FzIHN0aWxsIG9sZHNrIChza2ItPnNrICE9IGFzb2MtPmJhc2Uuc2spLgoKUmVw
b3J0ZWQtYW5kLXRlc3RlZC1ieTogc3l6Ym90K2NlYTcxZWVjNWQ2ZGUyNTZkNTRkQHN5emthbGxl
ci5hcHBzcG90bWFpbC5jb20KU2lnbmVkLW9mZi1ieTogUWl1anVuIEh1YW5nIDxocWphZ2FpbkBn
bWFpbC5jb20+CkFja2VkLWJ5OiBNYXJjZWxvIFJpY2FyZG8gTGVpdG5lciA8bWxlaXRuZXJAcmVk
aGF0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQu
bmV0PgotLS0KIG5ldC9zY3RwL3NvY2tldC5jIHwgMzEgKysrKysrKysrKysrKysrKysrKysrKyst
LS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDIzIGluc2VydGlvbnMoKyksIDggZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvbmV0L3NjdHAvc29ja2V0LmMgYi9uZXQvc2N0cC9zb2NrZXQuYwppbmRl
eCAwYjQ4NTk1MmE3MWMuLmVjODRhZTA0YTg2MiAxMDA2NDQKLS0tIGEvbmV0L3NjdHAvc29ja2V0
LmMKKysrIGIvbmV0L3NjdHAvc29ja2V0LmMKQEAgLTE0NywyOSArMTQ3LDQ0IEBAIHN0YXRpYyB2
b2lkIHNjdHBfY2xlYXJfb3duZXJfdyhzdHJ1Y3Qgc2N0cF9jaHVuayAqY2h1bmspCiAJc2tiX29y
cGhhbihjaHVuay0+c2tiKTsKIH0KIAorI2RlZmluZSB0cmF2ZXJzZV9hbmRfcHJvY2VzcygpCVwK
K2RvIHsJCQkJXAorCW1zZyA9IGNodW5rLT5tc2c7CVwKKwlpZiAobXNnID09IHByZXZfbXNnKQlc
CisJCWNvbnRpbnVlOwlcCisJbGlzdF9mb3JfZWFjaF9lbnRyeShjLCAmbXNnLT5jaHVua3MsIGZy
YWdfbGlzdCkgewlcCisJCWlmICgoY2xlYXIgJiYgYXNvYy0+YmFzZS5zayA9PSBjLT5za2ItPnNr
KSB8fAlcCisJCSAgICAoIWNsZWFyICYmIGFzb2MtPmJhc2Uuc2sgIT0gYy0+c2tiLT5zaykpCVwK
KwkJCWNiKGMpOwlcCisJfQkJCVwKKwlwcmV2X21zZyA9IG1zZzsJCVwKK30gd2hpbGUgKDApCisK
IHN0YXRpYyB2b2lkIHNjdHBfZm9yX2VhY2hfdHhfZGF0YWNodW5rKHN0cnVjdCBzY3RwX2Fzc29j
aWF0aW9uICphc29jLAorCQkJCSAgICAgICBib29sIGNsZWFyLAogCQkJCSAgICAgICB2b2lkICgq
Y2IpKHN0cnVjdCBzY3RwX2NodW5rICopKQogCiB7CisJc3RydWN0IHNjdHBfZGF0YW1zZyAqbXNn
LCAqcHJldl9tc2cgPSBOVUxMOwogCXN0cnVjdCBzY3RwX291dHEgKnEgPSAmYXNvYy0+b3V0cXVl
dWU7CisJc3RydWN0IHNjdHBfY2h1bmsgKmNodW5rLCAqYzsKIAlzdHJ1Y3Qgc2N0cF90cmFuc3Bv
cnQgKnQ7Ci0Jc3RydWN0IHNjdHBfY2h1bmsgKmNodW5rOwogCiAJbGlzdF9mb3JfZWFjaF9lbnRy
eSh0LCAmYXNvYy0+cGVlci50cmFuc3BvcnRfYWRkcl9saXN0LCB0cmFuc3BvcnRzKQogCQlsaXN0
X2Zvcl9lYWNoX2VudHJ5KGNodW5rLCAmdC0+dHJhbnNtaXR0ZWQsIHRyYW5zbWl0dGVkX2xpc3Qp
Ci0JCQljYihjaHVuayk7CisJCQl0cmF2ZXJzZV9hbmRfcHJvY2VzcygpOwogCiAJbGlzdF9mb3Jf
ZWFjaF9lbnRyeShjaHVuaywgJnEtPnJldHJhbnNtaXQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNi
KGNodW5rKTsKKwkJdHJhdmVyc2VfYW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50
cnkoY2h1bmssICZxLT5zYWNrZWQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNiKGNodW5rKTsKKwkJ
dHJhdmVyc2VfYW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkoY2h1bmssICZx
LT5hYmFuZG9uZWQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNiKGNodW5rKTsKKwkJdHJhdmVyc2Vf
YW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkoY2h1bmssICZxLT5vdXRfY2h1
bmtfbGlzdCwgbGlzdCkKLQkJY2IoY2h1bmspOworCQl0cmF2ZXJzZV9hbmRfcHJvY2VzcygpOwog
fQogCiBzdGF0aWMgdm9pZCBzY3RwX2Zvcl9lYWNoX3J4X3NrYihzdHJ1Y3Qgc2N0cF9hc3NvY2lh
dGlvbiAqYXNvYywgc3RydWN0IHNvY2sgKnNrLApAQCAtOTU3Niw5ICs5NTkxLDkgQEAgc3RhdGlj
IGludCBzY3RwX3NvY2tfbWlncmF0ZShzdHJ1Y3Qgc29jayAqb2xkc2ssIHN0cnVjdCBzb2NrICpu
ZXdzaywKIAkgKiBwYXRocyB3b24ndCB0cnkgdG8gbG9jayBpdCBhbmQgdGhlbiBvbGRzay4KIAkg
Ki8KIAlsb2NrX3NvY2tfbmVzdGVkKG5ld3NrLCBTSU5HTEVfREVQVEhfTkVTVElORyk7Ci0Jc2N0
cF9mb3JfZWFjaF90eF9kYXRhY2h1bmsoYXNzb2MsIHNjdHBfY2xlYXJfb3duZXJfdyk7CisJc2N0
cF9mb3JfZWFjaF90eF9kYXRhY2h1bmsoYXNzb2MsIHRydWUsIHNjdHBfY2xlYXJfb3duZXJfdyk7
CiAJc2N0cF9hc3NvY19taWdyYXRlKGFzc29jLCBuZXdzayk7Ci0Jc2N0cF9mb3JfZWFjaF90eF9k
YXRhY2h1bmsoYXNzb2MsIHNjdHBfc2V0X293bmVyX3cpOworCXNjdHBfZm9yX2VhY2hfdHhfZGF0
YWNodW5rKGFzc29jLCBmYWxzZSwgc2N0cF9zZXRfb3duZXJfdyk7CiAKIAkvKiBJZiB0aGUgYXNz
b2NpYXRpb24gb24gdGhlIG5ld3NrIGlzIGFscmVhZHkgY2xvc2VkIGJlZm9yZSBhY2NlcHQoKQog
CSAqIGlzIGNhbGxlZCwgc2V0IFJDVl9TSFVURE9XTiBmbGFnLgotLSAKMi4yMC4xCgoKRnJvbSBl
MWE2NGY2NmI5YWNlYWQ0YTNiZGEwZmU5NDAwNzVjZGM3Mzk5N2IzIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBDb2RyaW4gQ2l1Ym90YXJpdSA8Y29kcmluLmNpdWJvdGFyaXVAbWljcm9j
aGlwLmNvbT4KRGF0ZTogVHVlLCAzMSBNYXIgMjAyMCAxMjozOTozNSArMDMwMApTdWJqZWN0OiBb
UEFUQ0ggNi82XSBuZXQ6IG1hY2I6IEZpeCBoYW5kbGluZyBvZiBmaXhlZC1saW5rIG5vZGUKClsg
VXBzdHJlYW0gY29tbWl0IDc5NTQwZDEzM2VkNmY2NWEzN2RhY2I1NGI3YTcwNGNjOGEyNGM1MmQg
XQoKZml4ZWQtbGluayBub2RlcyBhcmUgdHJlYXRlZCBhcyBQSFkgbm9kZXMgYnkgb2ZfbWRpb2J1
c19jaGlsZF9pc19waHkoKS4KV2UgbXVzdCBjaGVjayBpZiB0aGUgaW50ZXJmYWNlIGlzIGEgZml4
ZWQtbGluayBiZWZvcmUgbG9va2luZyB1cCBmb3IgUEhZCm5vZGVzLgoKRml4ZXM6IDc4OTdiMDcx
YWMzYiAoIm5ldDogbWFjYjogY29udmVydCB0byBwaHlsaW5rIikKVGVzdGVkLWJ5OiBDcmlzdGlh
biBCaXJzYW4gPGNyaXN0aWFuLmJpcnNhbkBtaWNyb2NoaXAuY29tPgpTaWduZWQtb2ZmLWJ5OiBD
b2RyaW4gQ2l1Ym90YXJpdSA8Y29kcmluLmNpdWJvdGFyaXVAbWljcm9jaGlwLmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZl
cnMvbmV0L2V0aGVybmV0L2NhZGVuY2UvbWFjYl9tYWluLmMgfCAzICsrKwogMSBmaWxlIGNoYW5n
ZWQsIDMgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2Nh
ZGVuY2UvbWFjYl9tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9jYWRlbmNlL21hY2JfbWFp
bi5jCmluZGV4IDIwZGI0NGQ3Y2RhOC4uMTA0ODg0MTMzMDAxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L25ldC9ldGhlcm5ldC9jYWRlbmNlL21hY2JfbWFpbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2NhZGVuY2UvbWFjYl9tYWluLmMKQEAgLTY4NSw2ICs2ODUsOSBAQCBzdGF0aWMgaW50IG1h
Y2JfbWRpb2J1c19yZWdpc3RlcihzdHJ1Y3QgbWFjYiAqYnApCiB7CiAJc3RydWN0IGRldmljZV9u
b2RlICpjaGlsZCwgKm5wID0gYnAtPnBkZXYtPmRldi5vZl9ub2RlOwogCisJaWYgKG9mX3BoeV9p
c19maXhlZF9saW5rKG5wKSkKKwkJcmV0dXJuIG1kaW9idXNfcmVnaXN0ZXIoYnAtPm1paV9idXMp
OworCiAJLyogT25seSBjcmVhdGUgdGhlIFBIWSBmcm9tIHRoZSBkZXZpY2UgdHJlZSBpZiBhdCBs
ZWFzdCBvbmUgUEhZIGlzCiAJICogZGVzY3JpYmVkLiBPdGhlcndpc2Ugc2NhbiB0aGUgZW50aXJl
IE1ESU8gYnVzLiBXZSBkbyB0aGlzIHRvIHN1cHBvcnQKIAkgKiBvbGQgZGV2aWNlIHRyZWUgdGhh
dCBkaWQgbm90IGZvbGxvdyB0aGUgYmVzdCBwcmFjdGljZXMgYW5kIGRpZCBub3QKLS0gCjIuMjAu
MQoK

----Next_Part(Thu_Apr__2_13_16_33_2020_224)--
Content-Type: Application/Octet-Stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net_56.mbox"

RnJvbSBkZWVkZjY2ZmMyOGM2ZmM4MTliODU5YjgyMDhjN2U4OTU3YmQ2NzllIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBRaWFuIENhaSA8Y2FpQGxjYS5wdz4KRGF0ZTogV2VkLCAyNSBN
YXIgMjAyMCAxODowMTowMCAtMDQwMApTdWJqZWN0OiBbUEFUQ0ggMS84XSBpcHY0OiBmaXggYSBS
Q1UtbGlzdCBsb2NrIGluIGZpYl90cmllc3RhdF9zZXFfc2hvdwoKWyBVcHN0cmVhbSBjb21taXQg
ZmJlNGUwYzFiMjk4YjQ2NjVlZTY5MTUyNjZjOWQ2YzViOTM0ZWY0YSBdCgpmaWJfdHJpZXN0YXRf
c2VxX3Nob3coKSBjYWxscyBobGlzdF9mb3JfZWFjaF9lbnRyeV9yY3UodGIsIGhlYWQsCnRiX2hs
aXN0KSB3aXRob3V0IHJjdV9yZWFkX2xvY2soKSB3aWxsIHRyaWdnZXIgYSB3YXJuaW5nLAoKIG5l
dC9pcHY0L2ZpYl90cmllLmM6MjU3OSBSQ1UtbGlzdCB0cmF2ZXJzZWQgaW4gbm9uLXJlYWRlciBz
ZWN0aW9uISEKCiBvdGhlciBpbmZvIHRoYXQgbWlnaHQgaGVscCB1cyBkZWJ1ZyB0aGlzOgoKIHJj
dV9zY2hlZHVsZXJfYWN0aXZlID0gMiwgZGVidWdfbG9ja3MgPSAxCiAxIGxvY2sgaGVsZCBieSBw
cm9jMDEvMTE1Mjc3OgogICMwOiBjMDAwMDAxNDUwN2FjZjAwICgmcC0+bG9jayl7Ky4rLn0tezM6
M30sIGF0OiBzZXFfcmVhZCsweDU4LzB4NjcwCgogQ2FsbCBUcmFjZToKICBkdW1wX3N0YWNrKzB4
ZjQvMHgxNjQgKHVucmVsaWFibGUpCiAgbG9ja2RlcF9yY3Vfc3VzcGljaW91cysweDE0MC8weDE2
NAogIGZpYl90cmllc3RhdF9zZXFfc2hvdysweDc1MC8weDg4MAogIHNlcV9yZWFkKzB4MWEwLzB4
NjcwCiAgcHJvY19yZWdfcmVhZCsweDEwYy8weDFiMAogIF9fdmZzX3JlYWQrMHgzYy8weDcwCiAg
dmZzX3JlYWQrMHhhYy8weDE3MAogIGtzeXNfcmVhZCsweDdjLzB4MTQwCiAgc3lzdGVtX2NhbGwr
MHg1Yy8weDY4CgpGaXggaXQgYnkgYWRkaW5nIGEgcGFpciBvZiByY3VfcmVhZF9sb2NrL3VubG9j
aygpIGFuZCB1c2UKY29uZF9yZXNjaGVkX3JjdSgpIHRvIGF2b2lkIHRoZSBzaXR1YXRpb24gd2hl
cmUgd2Fsa2luZyBvZiBhIGxhcmdlCm51bWJlciBvZiBpdGVtcyAgbWF5IHByZXZlbnQgc2NoZWR1
bGluZyBmb3IgYSBsb25nIHRpbWUuCgpTaWduZWQtb2ZmLWJ5OiBRaWFuIENhaSA8Y2FpQGxjYS5w
dz4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9p
cHY0L2ZpYl90cmllLmMgfCAzICsrKwogMSBmaWxlIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKQoK
ZGlmZiAtLWdpdCBhL25ldC9pcHY0L2ZpYl90cmllLmMgYi9uZXQvaXB2NC9maWJfdHJpZS5jCmlu
ZGV4IGZmMGMyNDM3MWUzMy4uM2JlMGFmZmJhYmQzIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9maWJf
dHJpZS5jCisrKyBiL25ldC9pcHY0L2ZpYl90cmllLmMKQEAgLTI1NzcsNiArMjU3Nyw3IEBAIHN0
YXRpYyBpbnQgZmliX3RyaWVzdGF0X3NlcV9zaG93KHN0cnVjdCBzZXFfZmlsZSAqc2VxLCB2b2lk
ICp2KQogCQkgICAiICV6ZCBieXRlcywgc2l6ZSBvZiB0bm9kZTogJXpkIGJ5dGVzLlxuIiwKIAkJ
ICAgTEVBRl9TSVpFLCBUTk9ERV9TSVpFKDApKTsKIAorCXJjdV9yZWFkX2xvY2soKTsKIAlmb3Ig
KGggPSAwOyBoIDwgRklCX1RBQkxFX0hBU0hTWjsgaCsrKSB7CiAJCXN0cnVjdCBobGlzdF9oZWFk
ICpoZWFkID0gJm5ldC0+aXB2NC5maWJfdGFibGVfaGFzaFtoXTsKIAkJc3RydWN0IGZpYl90YWJs
ZSAqdGI7CkBAIC0yNTk2LDcgKzI1OTcsOSBAQCBzdGF0aWMgaW50IGZpYl90cmllc3RhdF9zZXFf
c2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKnNlcSwgdm9pZCAqdikKIAkJCXRyaWVfc2hvd191c2FnZShz
ZXEsIHQtPnN0YXRzKTsKICNlbmRpZgogCQl9CisJCWNvbmRfcmVzY2hlZF9yY3UoKTsKIAl9CisJ
cmN1X3JlYWRfdW5sb2NrKCk7CiAKIAlyZXR1cm4gMDsKIH0KLS0gCjIuMjAuMQoKCkZyb20gMTg2
MzZhN2MzYWY2YjgxNWEzZTQzMWQ4MDk1ZDRmNTAyMGM2ZGNlMyBNb24gU2VwIDE3IDAwOjAwOjAw
IDIwMDEKRnJvbTogQ29kcmluIENpdWJvdGFyaXUgPGNvZHJpbi5jaXVib3Rhcml1QG1pY3JvY2hp
cC5jb20+CkRhdGU6IFR1ZSwgMzEgTWFyIDIwMjAgMTI6MzY6NTEgKzAzMDAKU3ViamVjdDogW1BB
VENIIDIvOF0gbmV0OiBkc2E6IGtzejogU2VsZWN0IEtTWiBwcm90b2NvbCB0YWcKClsgVXBzdHJl
YW0gY29tbWl0IGY3NzIxNDhlYjc1N2IwODIzZmJmZGMyZmU1OTJkNWUwNmM3ZjE5YjAgXQoKS1Na
IHByb3RvY29sIHRhZyBpcyBuZWVkZWQgYnkgdGhlIEtTWiBEU0EgZHJpdmVycy4KCkZpeGVzOiAw
YjlmOWRmYmZhYjQgKCJkc2E6IEFsbG93IHRhZyBkcml2ZXJzIHRvIGJlIGJ1aWx0IGFzIG1vZHVs
ZXMiKQpUZXN0ZWQtYnk6IENyaXN0aWFuIEJpcnNhbiA8Y3Jpc3RpYW4uYmlyc2FuQG1pY3JvY2hp
cC5jb20+ClNpZ25lZC1vZmYtYnk6IENvZHJpbiBDaXVib3Rhcml1IDxjb2RyaW4uY2l1Ym90YXJp
dUBtaWNyb2NoaXAuY29tPgpSZXZpZXdlZC1ieTogQW5kcmV3IEx1bm4gPGFuZHJld0BsdW5uLmNo
PgpSZXZpZXdlZC1ieTogRmxvcmlhbiBGYWluZWxsaSA8Zi5mYWluZWxsaUBnbWFpbC5jb20+ClNp
Z25lZC1vZmYtYnk6IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KLS0tCiBk
cml2ZXJzL25ldC9kc2EvbWljcm9jaGlwL0tjb25maWcgfCAxICsKIDEgZmlsZSBjaGFuZ2VkLCAx
IGluc2VydGlvbigrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2Nv
bmZpZyBiL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2NvbmZpZwppbmRleCAxZDc4NzBjNmRm
M2MuLjRlYzZhNDdiN2Y3MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZHNhL21pY3JvY2hpcC9L
Y29uZmlnCisrKyBiL2RyaXZlcnMvbmV0L2RzYS9taWNyb2NoaXAvS2NvbmZpZwpAQCAtMSw1ICsx
LDYgQEAKICMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQogY29uZmlnIE5F
VF9EU0FfTUlDUk9DSElQX0tTWl9DT01NT04KKwlzZWxlY3QgTkVUX0RTQV9UQUdfS1NaCiAJdHJp
c3RhdGUKIAogbWVudWNvbmZpZyBORVRfRFNBX01JQ1JPQ0hJUF9LU1o5NDc3Ci0tIAoyLjIwLjEK
CgpGcm9tIDA1OTU2ZDJiNzRkMGE5ZTI5OGIwNzE2ZDljOGMxOWE1ZGUxZWE5ODMgTW9uIFNlcCAx
NyAwMDowMDowMCAyMDAxCkZyb206IFdpbGxpYW0gRGF1Y2h5IDx3LmRhdWNoeUBjcml0ZW8uY29t
PgpEYXRlOiBGcmksIDI3IE1hciAyMDIwIDE5OjU2OjM5ICswMTAwClN1YmplY3Q6IFtQQVRDSCAz
LzhdIG5ldCwgaXBfdHVubmVsOiBmaXggaW50ZXJmYWNlIGxvb2t1cCB3aXRoIG5vIGtleQoKWyBV
cHN0cmVhbSBjb21taXQgMjU2MjlmZGFmZjJmZjUwOWRkMGIzZjVmZjkzZDcwYTc1ZTc5ZTBhMSBd
Cgp3aGVuIGNyZWF0aW5nIGEgbmV3IGlwaXAgaW50ZXJmYWNlIHdpdGggbm8gbG9jYWwvcmVtb3Rl
IGNvbmZpZ3VyYXRpb24sCnRoZSBsb29rdXAgaXMgZG9uZSB3aXRoIFRVTk5FTF9OT19LRVkgZmxh
ZywgbWFraW5nIGl0IGltcG9zc2libGUgdG8KbWF0Y2ggdGhlIG5ldyBpbnRlcmZhY2UgKG9ubHkg
cG9zc2libGUgbWF0Y2ggYmVpbmcgZmFsbGJhY2sgb3IgbWV0YWRhCmNhc2UgaW50ZXJmYWNlKTsg
ZS5nOiBgaXAgbGluayBhZGQgdHVubDEgdHlwZSBpcGlwIGRldiBldGgwYAoKVG8gZml4IHRoaXMg
Y2FzZSwgYWRkaW5nIGEgZmxhZyBjaGVjayBiZWZvcmUgdGhlIGtleSBjb21wYXJpc29uIHNvIHdl
CnBlcm1pdCB0byBtYXRjaCBhbiBpbnRlcmZhY2Ugd2l0aCBubyBsb2NhbC9yZW1vdGUgY29uZmln
OyBpdCBhbHNvIGF2b2lkcwpicmVha2luZyBwb3NzaWJsZSB1c2VybGFuZCB0b29scyByZWx5aW5n
IG9uIFRVTk5FTF9OT19LRVkgZmxhZyBhbmQKdW5pbml0aWFsaXNlZCBrZXkuCgpjb250ZXh0IGJl
aW5nIG9uIG15IHNpZGUsIEknbSBjcmVhdGluZyBhbiBleHRyYSBpcGlwIGludGVyZmFjZSBhdHRh
Y2hlZAp0byB0aGUgcGh5c2ljYWwgb25lLCBhbmQgbW92aW5nIGl0IHRvIGEgZGVkaWNhdGVkIG5h
bWVzcGFjZS4KCkZpeGVzOiBjNTQ0MTkzMjE0NTUgKCJHUkU6IFJlZmFjdG9yIEdSRSB0dW5uZWxp
bmcgY29kZS4iKQpTaWduZWQtb2ZmLWJ5OiBXaWxsaWFtIERhdWNoeSA8dy5kYXVjaHlAY3JpdGVv
LmNvbT4KU2lnbmVkLW9mZi1ieTogTmljb2xhcyBEaWNodGVsIDxuaWNvbGFzLmRpY2h0ZWxANndp
bmQuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5u
ZXQ+Ci0tLQogbmV0L2lwdjQvaXBfdHVubmVsLmMgfCA2ICstLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDEgaW5zZXJ0aW9uKCspLCA1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9pcHY0L2lw
X3R1bm5lbC5jIGIvbmV0L2lwdjQvaXBfdHVubmVsLmMKaW5kZXggNzRlMWQ5NjRhNjE1Li5jZDRi
ODQzMTBkOTIgMTAwNjQ0Ci0tLSBhL25ldC9pcHY0L2lwX3R1bm5lbC5jCisrKyBiL25ldC9pcHY0
L2lwX3R1bm5lbC5jCkBAIC0xNDIsMTEgKzE0Miw4IEBAIHN0cnVjdCBpcF90dW5uZWwgKmlwX3R1
bm5lbF9sb29rdXAoc3RydWN0IGlwX3R1bm5lbF9uZXQgKml0biwKIAkJCWNhbmQgPSB0OwogCX0K
IAotCWlmIChmbGFncyAmIFRVTk5FTF9OT19LRVkpCi0JCWdvdG8gc2tpcF9rZXlfbG9va3VwOwot
CiAJaGxpc3RfZm9yX2VhY2hfZW50cnlfcmN1KHQsIGhlYWQsIGhhc2hfbm9kZSkgewotCQlpZiAo
dC0+cGFybXMuaV9rZXkgIT0ga2V5IHx8CisJCWlmICgoIShmbGFncyAmIFRVTk5FTF9OT19LRVkp
ICYmIHQtPnBhcm1zLmlfa2V5ICE9IGtleSkgfHwKIAkJICAgIHQtPnBhcm1zLmlwaC5zYWRkciAh
PSAwIHx8CiAJCSAgICB0LT5wYXJtcy5pcGguZGFkZHIgIT0gMCB8fAogCQkgICAgISh0LT5kZXYt
PmZsYWdzICYgSUZGX1VQKSkKQEAgLTE1OCw3ICsxNTUsNiBAQCBzdHJ1Y3QgaXBfdHVubmVsICpp
cF90dW5uZWxfbG9va3VwKHN0cnVjdCBpcF90dW5uZWxfbmV0ICppdG4sCiAJCQljYW5kID0gdDsK
IAl9CiAKLXNraXBfa2V5X2xvb2t1cDoKIAlpZiAoY2FuZCkKIAkJcmV0dXJuIGNhbmQ7CiAKLS0g
CjIuMjAuMQoKCkZyb20gZDJjNjc2ZDRlNDlkYTkxMDc5YTliZDYyZDBhMTllOWEyM2UyNmI5ZCBN
b24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWFyY2VsbyBSaWNhcmRvIExlaXRuZXIgPG1h
cmNlbG8ubGVpdG5lckBnbWFpbC5jb20+CkRhdGU6IFRodSwgMjYgTWFyIDIwMjAgMjA6NDc6NDYg
LTAzMDAKU3ViamVjdDogW1BBVENIIDQvOF0gc2N0cDogZml4IHBvc3NpYmx5IHVzaW5nIGEgYmFk
IHNhZGRyIHdpdGggYSBnaXZlbiBkc3QKClsgVXBzdHJlYW0gY29tbWl0IDU4MmVlYTIzMDUzNmE2
ZjEwNDA5N2RkNDYyMDU4MjIwMDVkNWZlM2EgXQoKVW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2Vz
LCBkZXBlbmRpbmcgb24gdGhlIG9yZGVyIG9mIGFkZHJlc3NlcyBvbiB0aGUKaW50ZXJmYWNlcywg
aXQgY291bGQgYmUgdGhhdCBzY3RwX3ZbNDZdX2dldF9kc3QoKSB3b3VsZCByZXR1cm4gYSBkc3QK
d2l0aCBhIG1pc21hdGNoZWQgc3RydWN0IGZsb3dpLgoKRm9yIGV4YW1wbGUsIGlmIHdoZW4gd2Fs
a2luZyB0aHJvdWdoIHRoZSBiaW5kIGFkZHJlc3NlcyBhbmQgdGhlIGZpcnN0Cm9uZSBpcyBub3Qg
YSBtYXRjaCwgaXQgc2F2ZXMgdGhlIGRzdCBhcyBhIGZhbGxiYWNrIChhZGRlZCBpbgo0MTBmMDM4
MzFjMDcpLCBidXQgbm90IHRoZSBmbG93aS4gVGhlbiBpZiB0aGUgbmV4dCBvbmUgaXMgYWxzbyBu
b3QgYQptYXRjaCwgdGhlIHByZXZpb3VzIGRzdCB3aWxsIGJlIHJldHVybmVkIGJ1dCB3aXRoIHRo
ZSBmbG93aSBpbmZvcm1hdGlvbgpmb3IgdGhlIDJuZCBhZGRyZXNzLCB3aGljaCBpcyB3cm9uZy4K
ClRoZSBmaXggaXMgdG8gdXNlIGEgbG9jYWxseSBzdG9yZWQgZmxvd2kgdGhhdCBjYW4gYmUgdXNl
ZCBmb3Igc3VjaAphdHRlbXB0cywgYW5kIGNvcHkgaXQgdG8gdGhlIHBhcmFtZXRlciBvbmx5IGlu
IGNhc2UgaXQgaXMgYSBwb3NzaWJsZQptYXRjaCwgdG9nZXRoZXIgd2l0aCB0aGUgY29ycmVzcG9u
ZGluZyBkc3QgZW50cnkuCgpUaGUgcGF0Y2ggdXBkYXRlcyBJUHY2IGNvZGUgbW9zdGx5IGp1c3Qg
dG8gYmUgaW4gc3luYy4gRXZlbiB0aG91Z2ggdGhlIGlzc3VlCmlzIGFsc28gcHJlc2VudCB0aGVy
ZSwgaXQgZmFsbGJhY2sgaXMgbm90IGV4cGVjdGVkIHRvIHdvcmsgd2l0aCBJUHY2LgoKRml4ZXM6
IDQxMGYwMzgzMWMwNyAoInNjdHA6IGFkZCByb3V0aW5nIG91dHB1dCBmYWxsYmFjayIpClJlcG9y
dGVkLWJ5OiBKaW4gTWVuZyA8bWVuZy5hLmppbkBub2tpYS1zYmVsbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IE1hcmNlbG8gUmljYXJkbyBMZWl0bmVyIDxtYXJjZWxvLmxlaXRuZXJAZ21haWwuY29tPgpU
ZXN0ZWQtYnk6IFhpbiBMb25nIDxsdWNpZW4ueGluQGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTog
RGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIG5ldC9zY3RwL2lwdjYu
YyAgICAgfCAyMCArKysrKysrKysrKysrKy0tLS0tLQogbmV0L3NjdHAvcHJvdG9jb2wuYyB8IDI4
ICsrKysrKysrKysrKysrKysrKystLS0tLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgMzMgaW5zZXJ0
aW9ucygrKSwgMTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L3NjdHAvaXB2Ni5jIGIv
bmV0L3NjdHAvaXB2Ni5jCmluZGV4IGJjNzM0Y2ZhYTI5ZS4uYzg3YWY0MzAxMDdhIDEwMDY0NAot
LS0gYS9uZXQvc2N0cC9pcHY2LmMKKysrIGIvbmV0L3NjdHAvaXB2Ni5jCkBAIC0yMjgsNyArMjI4
LDggQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAq
dCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIHsKIAlzdHJ1Y3Qgc2N0cF9hc3NvY2lhdGlvbiAq
YXNvYyA9IHQtPmFzb2M7CiAJc3RydWN0IGRzdF9lbnRyeSAqZHN0ID0gTlVMTDsKLQlzdHJ1Y3Qg
Zmxvd2k2ICpmbDYgPSAmZmwtPnUuaXA2OworCXN0cnVjdCBmbG93aSBfZmw7CisJc3RydWN0IGZs
b3dpNiAqZmw2ID0gJl9mbC51LmlwNjsKIAlzdHJ1Y3Qgc2N0cF9iaW5kX2FkZHIgKmJwOwogCXN0
cnVjdCBpcHY2X3BpbmZvICpucCA9IGluZXQ2X3NrKHNrKTsKIAlzdHJ1Y3Qgc2N0cF9zb2NrYWRk
cl9lbnRyeSAqbGFkZHI7CkBAIC0yMzgsNyArMjM5LDcgQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9n
ZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwK
IAllbnVtIHNjdHBfc2NvcGUgc2NvcGU7CiAJX191OCBtYXRjaGxlbiA9IDA7CiAKLQltZW1zZXQo
Zmw2LCAwLCBzaXplb2Yoc3RydWN0IGZsb3dpNikpOworCW1lbXNldCgmX2ZsLCAwLCBzaXplb2Yo
X2ZsKSk7CiAJZmw2LT5kYWRkciA9IGRhZGRyLT52Ni5zaW42X2FkZHI7CiAJZmw2LT5mbDZfZHBv
cnQgPSBkYWRkci0+djYuc2luNl9wb3J0OwogCWZsNi0+Zmxvd2k2X3Byb3RvID0gSVBQUk9UT19T
Q1RQOwpAQCAtMjc2LDggKzI3NywxMSBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y2X2dldF9kc3Qoc3Ry
dWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogCXJjdV9yZWFk
X3VubG9jaygpOwogCiAJZHN0ID0gaXA2X2RzdF9sb29rdXBfZmxvdyhzb2NrX25ldChzayksIHNr
LCBmbDYsIGZpbmFsX3ApOwotCWlmICghYXNvYyB8fCBzYWRkcikKKwlpZiAoIWFzb2MgfHwgc2Fk
ZHIpIHsKKwkJdC0+ZHN0ID0gZHN0OworCQltZW1jcHkoZmwsICZfZmwsIHNpemVvZihfZmwpKTsK
IAkJZ290byBvdXQ7CisJfQogCiAJYnAgPSAmYXNvYy0+YmFzZS5iaW5kX2FkZHI7CiAJc2NvcGUg
PSBzY3RwX3Njb3BlKGRhZGRyKTsKQEAgLTMwMCw2ICszMDQsOCBAQCBzdGF0aWMgdm9pZCBzY3Rw
X3Y2X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNh
ZGRyLAogCQkJaWYgKChsYWRkci0+YS5zYS5zYV9mYW1pbHkgPT0gQUZfSU5FVDYpICYmCiAJCQkg
ICAgKHNjdHBfdjZfY21wX2FkZHIoJmRzdF9zYWRkciwgJmxhZGRyLT5hKSkpIHsKIAkJCQlyY3Vf
cmVhZF91bmxvY2soKTsKKwkJCQl0LT5kc3QgPSBkc3Q7CisJCQkJbWVtY3B5KGZsLCAmX2ZsLCBz
aXplb2YoX2ZsKSk7CiAJCQkJZ290byBvdXQ7CiAJCQl9CiAJCX0KQEAgLTMzOCw2ICszNDQsOCBA
QCBzdGF0aWMgdm9pZCBzY3RwX3Y2X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1
bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogCQkJaWYgKCFJU19FUlJfT1JfTlVMTChkc3QpKQogCQkJ
CWRzdF9yZWxlYXNlKGRzdCk7CiAJCQlkc3QgPSBiZHN0OworCQkJdC0+ZHN0ID0gZHN0OworCQkJ
bWVtY3B5KGZsLCAmX2ZsLCBzaXplb2YoX2ZsKSk7CiAJCQlicmVhazsKIAkJfQogCkBAIC0zNTEs
NiArMzU5LDggQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5z
cG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIAkJCWRzdF9yZWxlYXNlKGRzdCk7CiAJ
CWRzdCA9IGJkc3Q7CiAJCW1hdGNobGVuID0gYm1hdGNobGVuOworCQl0LT5kc3QgPSBkc3Q7CisJ
CW1lbWNweShmbCwgJl9mbCwgc2l6ZW9mKF9mbCkpOwogCX0KIAlyY3VfcmVhZF91bmxvY2soKTsK
IApAQCAtMzU5LDE0ICszNjksMTIgQEAgc3RhdGljIHZvaWQgc2N0cF92Nl9nZXRfZHN0KHN0cnVj
dCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0cF9hZGRyICpzYWRkciwKIAkJc3RydWN0IHJ0
Nl9pbmZvICpydDsKIAogCQlydCA9IChzdHJ1Y3QgcnQ2X2luZm8gKilkc3Q7Ci0JCXQtPmRzdCA9
IGRzdDsKIAkJdC0+ZHN0X2Nvb2tpZSA9IHJ0Nl9nZXRfY29va2llKHJ0KTsKIAkJcHJfZGVidWco
InJ0Nl9kc3Q6JXBJNi8lZCBydDZfc3JjOiVwSTZcbiIsCiAJCQkgJnJ0LT5ydDZpX2RzdC5hZGRy
LCBydC0+cnQ2aV9kc3QucGxlbiwKLQkJCSAmZmw2LT5zYWRkcik7CisJCQkgJmZsLT51LmlwNi5z
YWRkcik7CiAJfSBlbHNlIHsKIAkJdC0+ZHN0ID0gTlVMTDsKLQogCQlwcl9kZWJ1Zygibm8gcm91
dGVcbiIpOwogCX0KIH0KZGlmZiAtLWdpdCBhL25ldC9zY3RwL3Byb3RvY29sLmMgYi9uZXQvc2N0
cC9wcm90b2NvbC5jCmluZGV4IDc4YWYyZmNmOTBjYy4uMDkyZDFhZmRlZTBkIDEwMDY0NAotLS0g
YS9uZXQvc2N0cC9wcm90b2NvbC5jCisrKyBiL25ldC9zY3RwL3Byb3RvY29sLmMKQEAgLTQwOSw3
ICs0MDksOCBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y0X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNw
b3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRyLAogewogCXN0cnVjdCBzY3RwX2Fzc29jaWF0
aW9uICphc29jID0gdC0+YXNvYzsKIAlzdHJ1Y3QgcnRhYmxlICpydDsKLQlzdHJ1Y3QgZmxvd2k0
ICpmbDQgPSAmZmwtPnUuaXA0OworCXN0cnVjdCBmbG93aSBfZmw7CisJc3RydWN0IGZsb3dpNCAq
Zmw0ID0gJl9mbC51LmlwNDsKIAlzdHJ1Y3Qgc2N0cF9iaW5kX2FkZHIgKmJwOwogCXN0cnVjdCBz
Y3RwX3NvY2thZGRyX2VudHJ5ICpsYWRkcjsKIAlzdHJ1Y3QgZHN0X2VudHJ5ICpkc3QgPSBOVUxM
OwpAQCAtNDE5LDcgKzQyMCw3IEBAIHN0YXRpYyB2b2lkIHNjdHBfdjRfZ2V0X2RzdChzdHJ1Y3Qg
c2N0cF90cmFuc3BvcnQgKnQsIHVuaW9uIHNjdHBfYWRkciAqc2FkZHIsCiAKIAlpZiAodC0+ZHNj
cCAmIFNDVFBfRFNDUF9TRVRfTUFTSykKIAkJdG9zID0gdC0+ZHNjcCAmIFNDVFBfRFNDUF9WQUxf
TUFTSzsKLQltZW1zZXQoZmw0LCAweDAsIHNpemVvZihzdHJ1Y3QgZmxvd2k0KSk7CisJbWVtc2V0
KCZfZmwsIDB4MCwgc2l6ZW9mKF9mbCkpOwogCWZsNC0+ZGFkZHIgID0gZGFkZHItPnY0LnNpbl9h
ZGRyLnNfYWRkcjsKIAlmbDQtPmZsNF9kcG9ydCA9IGRhZGRyLT52NC5zaW5fcG9ydDsKIAlmbDQt
PmZsb3dpNF9wcm90byA9IElQUFJPVE9fU0NUUDsKQEAgLTQzOCw4ICs0MzksMTEgQEAgc3RhdGlj
IHZvaWQgc2N0cF92NF9nZXRfZHN0KHN0cnVjdCBzY3RwX3RyYW5zcG9ydCAqdCwgdW5pb24gc2N0
cF9hZGRyICpzYWRkciwKIAkJICZmbDQtPnNhZGRyKTsKIAogCXJ0ID0gaXBfcm91dGVfb3V0cHV0
X2tleShzb2NrX25ldChzayksIGZsNCk7Ci0JaWYgKCFJU19FUlIocnQpKQorCWlmICghSVNfRVJS
KHJ0KSkgewogCQlkc3QgPSAmcnQtPmRzdDsKKwkJdC0+ZHN0ID0gZHN0OworCQltZW1jcHkoZmws
ICZfZmwsIHNpemVvZihfZmwpKTsKKwl9CiAKIAkvKiBJZiB0aGVyZSBpcyBubyBhc3NvY2lhdGlv
biBvciBpZiBhIHNvdXJjZSBhZGRyZXNzIGlzIHBhc3NlZCwgbm8KIAkgKiBtb3JlIHZhbGlkYXRp
b24gaXMgcmVxdWlyZWQuCkBAIC01MDIsMjcgKzUwNiwzMyBAQCBzdGF0aWMgdm9pZCBzY3RwX3Y0
X2dldF9kc3Qoc3RydWN0IHNjdHBfdHJhbnNwb3J0ICp0LCB1bmlvbiBzY3RwX2FkZHIgKnNhZGRy
LAogCQlvZGV2ID0gX19pcF9kZXZfZmluZChzb2NrX25ldChzayksIGxhZGRyLT5hLnY0LnNpbl9h
ZGRyLnNfYWRkciwKIAkJCQkgICAgIGZhbHNlKTsKIAkJaWYgKCFvZGV2IHx8IG9kZXYtPmlmaW5k
ZXggIT0gZmw0LT5mbG93aTRfb2lmKSB7Ci0JCQlpZiAoIWRzdCkKKwkJCWlmICghZHN0KSB7CiAJ
CQkJZHN0ID0gJnJ0LT5kc3Q7Ci0JCQllbHNlCisJCQkJdC0+ZHN0ID0gZHN0OworCQkJCW1lbWNw
eShmbCwgJl9mbCwgc2l6ZW9mKF9mbCkpOworCQkJfSBlbHNlIHsKIAkJCQlkc3RfcmVsZWFzZSgm
cnQtPmRzdCk7CisJCQl9CiAJCQljb250aW51ZTsKIAkJfQogCiAJCWRzdF9yZWxlYXNlKGRzdCk7
CiAJCWRzdCA9ICZydC0+ZHN0OworCQl0LT5kc3QgPSBkc3Q7CisJCW1lbWNweShmbCwgJl9mbCwg
c2l6ZW9mKF9mbCkpOwogCQlicmVhazsKIAl9CiAKIG91dF91bmxvY2s6CiAJcmN1X3JlYWRfdW5s
b2NrKCk7CiBvdXQ6Ci0JdC0+ZHN0ID0gZHN0OwotCWlmIChkc3QpCisJaWYgKGRzdCkgewogCQlw
cl9kZWJ1ZygicnRfZHN0OiVwSTQsIHJ0X3NyYzolcEk0XG4iLAotCQkJICZmbDQtPmRhZGRyLCAm
Zmw0LT5zYWRkcik7Ci0JZWxzZQorCQkJICZmbC0+dS5pcDQuZGFkZHIsICZmbC0+dS5pcDQuc2Fk
ZHIpOworCX0gZWxzZSB7CisJCXQtPmRzdCA9IE5VTEw7CiAJCXByX2RlYnVnKCJubyByb3V0ZVxu
Iik7CisJfQogfQogCiAvKiBGb3IgdjQsIHRoZSBzb3VyY2UgYWRkcmVzcyBpcyBjYWNoZWQgaW4g
dGhlIHJvdXRlIGVudHJ5KGRzdCkuIFNvIG5vIG5lZWQKLS0gCjIuMjAuMQoKCkZyb20gNzIzMTY3
MjI0MDYzOWUwYTY2ZTg3YWQyMmY3ZmU0ZjBkODAwZTVlYSBNb24gU2VwIDE3IDAwOjAwOjAwIDIw
MDEKRnJvbTogUWl1anVuIEh1YW5nIDxocWphZ2FpbkBnbWFpbC5jb20+CkRhdGU6IEZyaSwgMjcg
TWFyIDIwMjAgMTE6MDc6NTEgKzA4MDAKU3ViamVjdDogW1BBVENIIDUvOF0gc2N0cDogZml4IHJl
ZmNvdW50IGJ1ZyBpbiBzY3RwX3dmcmVlCgpbIFVwc3RyZWFtIGNvbW1pdCA1YzNlODJmZTE1OTYy
MmU0NmU5MTQ1OGMxYTY1MDljMzIxYTYyODIwIF0KCldlIHNob3VsZCBpdGVyYXRlIG92ZXIgdGhl
IGRhdGFtc2dzIHRvIG1vdmUKYWxsIGNodW5rcyhza2JzKSB0byBuZXdzay4KClRoZSBmb2xsb3dp
bmcgY2FzZSBjYXVzZSB0aGUgYnVnOgpmb3IgdGhlIHRyb3VibGUgU0tCLCBpdCB3YXMgaW4gb3V0
cS0+dHJhbnNtaXR0ZWQgbGlzdAoKc2N0cF9vdXRxX3NhY2sKICAgICAgICBzY3RwX2NoZWNrX3Ry
YW5zbWl0dGVkCiAgICAgICAgICAgICAgICBTS0Igd2FzIG1vdmVkIHRvIG91dHEtPnNhY2tlZCBs
aXN0CiAgICAgICAgdGhlbiB0aHJvdyBhd2F5IHRoZSBzYWNrIHF1ZXVlCiAgICAgICAgICAgICAg
ICBTS0Igd2FzIGRlbGV0ZWQgZnJvbSBvdXRxLT5zYWNrZWQKKGJ1dCBpdCB3YXMgaGVsZCBieSBk
YXRhbXNnIGF0IHNjdHBfZGF0YW1zZ190b19hc29jClNvLCBzY3RwX3dmcmVlIHdhcyBub3QgY2Fs
bGVkIGhlcmUpCgp0aGVuIG1pZ3JhdGUgaGFwcGVuZWQKCiAgICAgICAgc2N0cF9mb3JfZWFjaF90
eF9kYXRhY2h1bmsoCiAgICAgICAgc2N0cF9jbGVhcl9vd25lcl93KTsKICAgICAgICBzY3RwX2Fz
c29jX21pZ3JhdGUoKTsKICAgICAgICBzY3RwX2Zvcl9lYWNoX3R4X2RhdGFjaHVuaygKICAgICAg
ICBzY3RwX3NldF9vd25lcl93KTsKU0tCIHdhcyBub3QgaW4gdGhlIG91dHEsIGFuZCB3YXMgbm90
IGNoYW5nZWQgdG8gbmV3c2sKCmZpbmFsbHkKCl9fc2N0cF9vdXRxX3RlYXJkb3duCiAgICAgICAg
c2N0cF9jaHVua19wdXQgKGZvciBhbm90aGVyIHNrYikKICAgICAgICAgICAgICAgIHNjdHBfZGF0
YW1zZ19wdXQKICAgICAgICAgICAgICAgICAgICAgICAgX19rZnJlZV9za2IobXNnLT5mcmFnX2xp
c3QpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2N0cF93ZnJlZSAoZm9yIFNLQikK
CVNLQi0+c2sgd2FzIHN0aWxsIG9sZHNrIChza2ItPnNrICE9IGFzb2MtPmJhc2Uuc2spLgoKUmVw
b3J0ZWQtYW5kLXRlc3RlZC1ieTogc3l6Ym90K2NlYTcxZWVjNWQ2ZGUyNTZkNTRkQHN5emthbGxl
ci5hcHBzcG90bWFpbC5jb20KU2lnbmVkLW9mZi1ieTogUWl1anVuIEh1YW5nIDxocWphZ2FpbkBn
bWFpbC5jb20+CkFja2VkLWJ5OiBNYXJjZWxvIFJpY2FyZG8gTGVpdG5lciA8bWxlaXRuZXJAcmVk
aGF0LmNvbT4KU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQu
bmV0PgotLS0KIG5ldC9zY3RwL3NvY2tldC5jIHwgMzEgKysrKysrKysrKysrKysrKysrKysrKyst
LS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDIzIGluc2VydGlvbnMoKyksIDggZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvbmV0L3NjdHAvc29ja2V0LmMgYi9uZXQvc2N0cC9zb2NrZXQuYwppbmRl
eCAxYjU2ZmM0NDA2MDYuLjc1Nzc0MDExNWU5MyAxMDA2NDQKLS0tIGEvbmV0L3NjdHAvc29ja2V0
LmMKKysrIGIvbmV0L3NjdHAvc29ja2V0LmMKQEAgLTE0NywyOSArMTQ3LDQ0IEBAIHN0YXRpYyB2
b2lkIHNjdHBfY2xlYXJfb3duZXJfdyhzdHJ1Y3Qgc2N0cF9jaHVuayAqY2h1bmspCiAJc2tiX29y
cGhhbihjaHVuay0+c2tiKTsKIH0KIAorI2RlZmluZSB0cmF2ZXJzZV9hbmRfcHJvY2VzcygpCVwK
K2RvIHsJCQkJXAorCW1zZyA9IGNodW5rLT5tc2c7CVwKKwlpZiAobXNnID09IHByZXZfbXNnKQlc
CisJCWNvbnRpbnVlOwlcCisJbGlzdF9mb3JfZWFjaF9lbnRyeShjLCAmbXNnLT5jaHVua3MsIGZy
YWdfbGlzdCkgewlcCisJCWlmICgoY2xlYXIgJiYgYXNvYy0+YmFzZS5zayA9PSBjLT5za2ItPnNr
KSB8fAlcCisJCSAgICAoIWNsZWFyICYmIGFzb2MtPmJhc2Uuc2sgIT0gYy0+c2tiLT5zaykpCVwK
KwkJCWNiKGMpOwlcCisJfQkJCVwKKwlwcmV2X21zZyA9IG1zZzsJCVwKK30gd2hpbGUgKDApCisK
IHN0YXRpYyB2b2lkIHNjdHBfZm9yX2VhY2hfdHhfZGF0YWNodW5rKHN0cnVjdCBzY3RwX2Fzc29j
aWF0aW9uICphc29jLAorCQkJCSAgICAgICBib29sIGNsZWFyLAogCQkJCSAgICAgICB2b2lkICgq
Y2IpKHN0cnVjdCBzY3RwX2NodW5rICopKQogCiB7CisJc3RydWN0IHNjdHBfZGF0YW1zZyAqbXNn
LCAqcHJldl9tc2cgPSBOVUxMOwogCXN0cnVjdCBzY3RwX291dHEgKnEgPSAmYXNvYy0+b3V0cXVl
dWU7CisJc3RydWN0IHNjdHBfY2h1bmsgKmNodW5rLCAqYzsKIAlzdHJ1Y3Qgc2N0cF90cmFuc3Bv
cnQgKnQ7Ci0Jc3RydWN0IHNjdHBfY2h1bmsgKmNodW5rOwogCiAJbGlzdF9mb3JfZWFjaF9lbnRy
eSh0LCAmYXNvYy0+cGVlci50cmFuc3BvcnRfYWRkcl9saXN0LCB0cmFuc3BvcnRzKQogCQlsaXN0
X2Zvcl9lYWNoX2VudHJ5KGNodW5rLCAmdC0+dHJhbnNtaXR0ZWQsIHRyYW5zbWl0dGVkX2xpc3Qp
Ci0JCQljYihjaHVuayk7CisJCQl0cmF2ZXJzZV9hbmRfcHJvY2VzcygpOwogCiAJbGlzdF9mb3Jf
ZWFjaF9lbnRyeShjaHVuaywgJnEtPnJldHJhbnNtaXQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNi
KGNodW5rKTsKKwkJdHJhdmVyc2VfYW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50
cnkoY2h1bmssICZxLT5zYWNrZWQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNiKGNodW5rKTsKKwkJ
dHJhdmVyc2VfYW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkoY2h1bmssICZx
LT5hYmFuZG9uZWQsIHRyYW5zbWl0dGVkX2xpc3QpCi0JCWNiKGNodW5rKTsKKwkJdHJhdmVyc2Vf
YW5kX3Byb2Nlc3MoKTsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnkoY2h1bmssICZxLT5vdXRfY2h1
bmtfbGlzdCwgbGlzdCkKLQkJY2IoY2h1bmspOworCQl0cmF2ZXJzZV9hbmRfcHJvY2VzcygpOwog
fQogCiBzdGF0aWMgdm9pZCBzY3RwX2Zvcl9lYWNoX3J4X3NrYihzdHJ1Y3Qgc2N0cF9hc3NvY2lh
dGlvbiAqYXNvYywgc3RydWN0IHNvY2sgKnNrLApAQCAtOTU3NCw5ICs5NTg5LDkgQEAgc3RhdGlj
IGludCBzY3RwX3NvY2tfbWlncmF0ZShzdHJ1Y3Qgc29jayAqb2xkc2ssIHN0cnVjdCBzb2NrICpu
ZXdzaywKIAkgKiBwYXRocyB3b24ndCB0cnkgdG8gbG9jayBpdCBhbmQgdGhlbiBvbGRzay4KIAkg
Ki8KIAlsb2NrX3NvY2tfbmVzdGVkKG5ld3NrLCBTSU5HTEVfREVQVEhfTkVTVElORyk7Ci0Jc2N0
cF9mb3JfZWFjaF90eF9kYXRhY2h1bmsoYXNzb2MsIHNjdHBfY2xlYXJfb3duZXJfdyk7CisJc2N0
cF9mb3JfZWFjaF90eF9kYXRhY2h1bmsoYXNzb2MsIHRydWUsIHNjdHBfY2xlYXJfb3duZXJfdyk7
CiAJc2N0cF9hc3NvY19taWdyYXRlKGFzc29jLCBuZXdzayk7Ci0Jc2N0cF9mb3JfZWFjaF90eF9k
YXRhY2h1bmsoYXNzb2MsIHNjdHBfc2V0X293bmVyX3cpOworCXNjdHBfZm9yX2VhY2hfdHhfZGF0
YWNodW5rKGFzc29jLCBmYWxzZSwgc2N0cF9zZXRfb3duZXJfdyk7CiAKIAkvKiBJZiB0aGUgYXNz
b2NpYXRpb24gb24gdGhlIG5ld3NrIGlzIGFscmVhZHkgY2xvc2VkIGJlZm9yZSBhY2NlcHQoKQog
CSAqIGlzIGNhbGxlZCwgc2V0IFJDVl9TSFVURE9XTiBmbGFnLgotLSAKMi4yMC4xCgoKRnJvbSBk
MDU0ODM0YmRiNTY5NjVkMTVjZDVmMTY4Njg1MTVkZDdkNzQ3MWJiIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBDb2RyaW4gQ2l1Ym90YXJpdSA8Y29kcmluLmNpdWJvdGFyaXVAbWljcm9j
aGlwLmNvbT4KRGF0ZTogVHVlLCAzMSBNYXIgMjAyMCAxMjozOTozNSArMDMwMApTdWJqZWN0OiBb
UEFUQ0ggNi84XSBuZXQ6IG1hY2I6IEZpeCBoYW5kbGluZyBvZiBmaXhlZC1saW5rIG5vZGUKClsg
VXBzdHJlYW0gY29tbWl0IDc5NTQwZDEzM2VkNmY2NWEzN2RhY2I1NGI3YTcwNGNjOGEyNGM1MmQg
XQoKZml4ZWQtbGluayBub2RlcyBhcmUgdHJlYXRlZCBhcyBQSFkgbm9kZXMgYnkgb2ZfbWRpb2J1
c19jaGlsZF9pc19waHkoKS4KV2UgbXVzdCBjaGVjayBpZiB0aGUgaW50ZXJmYWNlIGlzIGEgZml4
ZWQtbGluayBiZWZvcmUgbG9va2luZyB1cCBmb3IgUEhZCm5vZGVzLgoKRml4ZXM6IDc4OTdiMDcx
YWMzYiAoIm5ldDogbWFjYjogY29udmVydCB0byBwaHlsaW5rIikKVGVzdGVkLWJ5OiBDcmlzdGlh
biBCaXJzYW4gPGNyaXN0aWFuLmJpcnNhbkBtaWNyb2NoaXAuY29tPgpTaWduZWQtb2ZmLWJ5OiBD
b2RyaW4gQ2l1Ym90YXJpdSA8Y29kcmluLmNpdWJvdGFyaXVAbWljcm9jaGlwLmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgotLS0KIGRyaXZl
cnMvbmV0L2V0aGVybmV0L2NhZGVuY2UvbWFjYl9tYWluLmMgfCAzICsrKwogMSBmaWxlIGNoYW5n
ZWQsIDMgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2Nh
ZGVuY2UvbWFjYl9tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9jYWRlbmNlL21hY2JfbWFp
bi5jCmluZGV4IDJjMjhkYTE3MzdmZS4uYjNhNTE5MzVlOGUwIDEwMDY0NAotLS0gYS9kcml2ZXJz
L25ldC9ldGhlcm5ldC9jYWRlbmNlL21hY2JfbWFpbi5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2NhZGVuY2UvbWFjYl9tYWluLmMKQEAgLTcyNCw2ICs3MjQsOSBAQCBzdGF0aWMgaW50IG1h
Y2JfbWRpb2J1c19yZWdpc3RlcihzdHJ1Y3QgbWFjYiAqYnApCiB7CiAJc3RydWN0IGRldmljZV9u
b2RlICpjaGlsZCwgKm5wID0gYnAtPnBkZXYtPmRldi5vZl9ub2RlOwogCisJaWYgKG9mX3BoeV9p
c19maXhlZF9saW5rKG5wKSkKKwkJcmV0dXJuIG1kaW9idXNfcmVnaXN0ZXIoYnAtPm1paV9idXMp
OworCiAJLyogT25seSBjcmVhdGUgdGhlIFBIWSBmcm9tIHRoZSBkZXZpY2UgdHJlZSBpZiBhdCBs
ZWFzdCBvbmUgUEhZIGlzCiAJICogZGVzY3JpYmVkLiBPdGhlcndpc2Ugc2NhbiB0aGUgZW50aXJl
IE1ESU8gYnVzLiBXZSBkbyB0aGlzIHRvIHN1cHBvcnQKIAkgKiBvbGQgZGV2aWNlIHRyZWUgdGhh
dCBkaWQgbm90IGZvbGxvdyB0aGUgYmVzdCBwcmFjdGljZXMgYW5kIGRpZCBub3QKLS0gCjIuMjAu
MQoKCkZyb20gMTY5MWQwNmM1N2E1NjVmZTU2YjQ3ODc0ODJkMGJmZWY4ZGM5NDI1NCBNb24gU2Vw
IDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogRmxvcmlhbiBXZXN0cGhhbCA8ZndAc3RybGVuLmRlPgpE
YXRlOiBNb24sIDMwIE1hciAyMDIwIDE4OjUxOjI5ICswMjAwClN1YmplY3Q6IFtQQVRDSCA3Lzhd
IG5ldDogZml4IGZyYWdsaXN0IHNlZ21lbnRhdGlvbiByZWZlcmVuY2UgY291bnQgbGVhawoKWyBV
cHN0cmVhbSBjb21taXQgY2Y2NzNlZDBlMDU3YTJkZDY4ZDkzMGM2ZDdlMzBkNTNjNzBjNTc4OSBd
CgpYaW4gTG9uZyBzYXlzOgogT24gdWRwIHJ4IHBhdGggdWRwX3Jjdl9zZWdtZW50KCkgbWF5IGRv
IHNlZ21lbnQgd2hlcmUgdGhlIGZyYWcgc2ticwogd2lsbCBnZXQgdGhlIGhlYWRlciBjb3BpZWQg
ZnJvbSB0aGUgaGVhZCBza2IgaW4gc2tiX3NlZ21lbnRfbGlzdCgpCiBieSBjYWxsaW5nIF9fY29w
eV9za2JfaGVhZGVyKCksIHdoaWNoIGNvdWxkIG92ZXJ3cml0ZSB0aGUgZnJhZyBza2JzJwogZXh0
ZW5zaW9ucyBieSBfX3NrYl9leHRfY29weSgpIGFuZCBjYXVzZSBhIGxlYWsuCgogVGhpcyBpc3N1
ZSB3YXMgZm91bmQgYWZ0ZXIgbG9hZGluZyBlc3Bfb2ZmbG9hZCB3aGVyZSBhIHNlYyBwYXRoIGV4
dAogaXMgc2V0IGluIHRoZSBza2IuCgpGaXggdGhpcyBieSBkaXNjYXJkaW5nIGhlYWQgc3RhdGUg
b2YgdGhlIGZyYWdsaXN0IHNrYiBiZWZvcmUgcmVwbGFjaW5nCml0cyBjb250ZW50cy4KCkZpeGVz
OiAzYTEyOTZhMzhkMGNmNjIgKCJuZXQ6IFN1cHBvcnQgR1JPL0dTTyBmcmFnbGlzdCBjaGFpbmlu
Zy4iKQpDYzogU3RlZmZlbiBLbGFzc2VydCA8c3RlZmZlbi5rbGFzc2VydEBzZWN1bmV0LmNvbT4K
UmVwb3J0ZWQtYnk6IFhpdW1laSBNdSA8eG11QHJlZGhhdC5jb20+ClRlc3RlZC1ieTogWGluIExv
bmcgPGx1Y2llbi54aW5AZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBGbG9yaWFuIFdlc3RwaGFs
IDxmd0BzdHJsZW4uZGU+CkFja2VkLWJ5OiBTdGVmZmVuIEtsYXNzZXJ0IDxzdGVmZmVuLmtsYXNz
ZXJ0QHNlY3VuZXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRh
dmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2NvcmUvc2tidWZmLmMgfCAxICsKIDEgZmlsZSBjaGFuZ2Vk
LCAxIGluc2VydGlvbigrKQoKZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NrYnVmZi5jIGIvbmV0L2Nv
cmUvc2tidWZmLmMKaW5kZXggZTExMDFhNGY5MGE2Li5iZWE0NDdmMzhkY2MgMTAwNjQ0Ci0tLSBh
L25ldC9jb3JlL3NrYnVmZi5jCisrKyBiL25ldC9jb3JlL3NrYnVmZi5jCkBAIC0zNjY4LDYgKzM2
NjgsNyBAQCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiX3NlZ21lbnRfbGlzdChzdHJ1Y3Qgc2tfYnVmZiAq
c2tiLAogCiAJCXNrYl9wdXNoKG5za2IsIC1za2JfbmV0d29ya19vZmZzZXQobnNrYikgKyBvZmZz
ZXQpOwogCisJCXNrYl9yZWxlYXNlX2hlYWRfc3RhdGUobnNrYik7CiAJCSBfX2NvcHlfc2tiX2hl
YWRlcihuc2tiLCBza2IpOwogCiAJCXNrYl9oZWFkZXJzX29mZnNldF91cGRhdGUobnNrYiwgc2ti
X2hlYWRyb29tKG5za2IpIC0gc2tiX2hlYWRyb29tKHNrYikpOwotLSAKMi4yMC4xCgoKRnJvbSAw
YTFlMTFhNmIxZGIxMGNiYjU5OGM0YWIxZjk1NjZlMDc2MmM0NjEwIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkRhdGU6IE1vbiwg
MzAgTWFyIDIwMjAgMjM6MzE6NDUgKzA4MDAKU3ViamVjdDogW1BBVENIIDgvOF0gdWRwOiBpbml0
aWFsaXplIGlzX2ZsaXN0IHdpdGggMCBpbiB1ZHBfZ3JvX3JlY2VpdmUKClsgVXBzdHJlYW0gY29t
bWl0IGJkZTFiNTZmODk4Y2E4MTEyOTEyZDdiMzZlNTVlMTU0M2IzYmUwY2YgXQoKV2l0aG91dCBO
QVBJX0dST19DQihza2IpLT5pc19mbGlzdCBpbml0aWFsaXplZCwgd2hlbiB0aGUgZGV2IGRvZXNu
J3QKc3VwcG9ydCBORVRJRl9GX0dST19GUkFHTElTVCwgaXNfZmxpc3QgY2FuIHN0aWxsIGJlIHNl
dCBhbmQgZnJhZ2xpc3QKd2lsbCBiZSB1c2VkIGluIHVkcF9ncm9fcmVjZWl2ZSgpLgoKU28gZml4
IGl0IGJ5IGluaXRpYWxpemluZyBpc19mbGlzdCB3aXRoIDAgaW4gdWRwX2dyb19yZWNlaXZlLgoK
Rml4ZXM6IDlmZDFmZjVkMmFjNyAoInVkcDogU3VwcG9ydCBVRFAgZnJhZ2xpc3QgR1JPL0dTTy4i
KQpTaWduZWQtb2ZmLWJ5OiBYaW4gTG9uZyA8bHVjaWVuLnhpbkBnbWFpbC5jb20+CkFja2VkLWJ5
OiBTdGVmZmVuIEtsYXNzZXJ0IDxzdGVmZmVuLmtsYXNzZXJ0QHNlY3VuZXQuY29tPgpTaWduZWQt
b2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+Ci0tLQogbmV0L2lw
djQvdWRwX29mZmxvYWQuYyB8IDEgKwogMSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0aW9uKCspCgpk
aWZmIC0tZ2l0IGEvbmV0L2lwdjQvdWRwX29mZmxvYWQuYyBiL25ldC9pcHY0L3VkcF9vZmZsb2Fk
LmMKaW5kZXggMWE5ODU4M2E3OWY0Li5lNjdhNjZmYmYyN2IgMTAwNjQ0Ci0tLSBhL25ldC9pcHY0
L3VkcF9vZmZsb2FkLmMKKysrIGIvbmV0L2lwdjQvdWRwX29mZmxvYWQuYwpAQCAtNDUzLDYgKzQ1
Myw3IEBAIHN0cnVjdCBza19idWZmICp1ZHBfZ3JvX3JlY2VpdmUoc3RydWN0IGxpc3RfaGVhZCAq
aGVhZCwgc3RydWN0IHNrX2J1ZmYgKnNrYiwKIAl1bnNpZ25lZCBpbnQgb2ZmID0gc2tiX2dyb19v
ZmZzZXQoc2tiKTsKIAlpbnQgZmx1c2ggPSAxOwogCisJTkFQSV9HUk9fQ0Ioc2tiKS0+aXNfZmxp
c3QgPSAwOwogCWlmIChza2ItPmRldi0+ZmVhdHVyZXMgJiBORVRJRl9GX0dST19GUkFHTElTVCkK
IAkJTkFQSV9HUk9fQ0Ioc2tiKS0+aXNfZmxpc3QgPSBzayA/ICF1ZHBfc2soc2spLT5ncm9fZW5h
YmxlZDogMTsKIAotLSAKMi4yMC4xCgo=

----Next_Part(Thu_Apr__2_13_16_33_2020_224)----
