Return-Path: <stable-owner@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id EE208553E83
	for <lists+stable@lfdr.de>; Wed, 22 Jun 2022 00:31:31 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232637AbiFUWba (ORCPT <rfc822;lists+stable@lfdr.de>);
        Tue, 21 Jun 2022 18:31:30 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33372 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231502AbiFUWb3 (ORCPT
        <rfc822;stable@vger.kernel.org>); Tue, 21 Jun 2022 18:31:29 -0400
X-Greylist: delayed 419 seconds by postgrey-1.37 at lindbergh.monkeyblade.net; Tue, 21 Jun 2022 15:31:28 PDT
Received: from maynard.decadent.org.uk (maynard.decadent.org.uk [95.217.213.242])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 28E8EB481
        for <stable@vger.kernel.org>; Tue, 21 Jun 2022 15:31:27 -0700 (PDT)
Received: from 168.7-181-91.adsl-dyn.isp.belgacom.be ([91.181.7.168] helo=deadeye)
        by maynard with esmtps (TLS1.3:ECDHE_RSA_AES_256_GCM_SHA384:256)
        (Exim 4.92)
        (envelope-from <ben@decadent.org.uk>)
        id 1o3mP6-00048B-SC; Wed, 22 Jun 2022 00:31:25 +0200
Received: from ben by deadeye with local (Exim 4.95)
        (envelope-from <ben@decadent.org.uk>)
        id 1o3mP6-001pf4-9A;
        Wed, 22 Jun 2022 00:31:24 +0200
Message-ID: <b5fe519ec956e0771a988c486291b6e8a0fefd17.camel@decadent.org.uk>
Subject: [stable] Various security fixes
From:   Ben Hutchings <ben@decadent.org.uk>
To:     Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Sasha Levin <sashal@kernel.org>
Cc:     stable <stable@vger.kernel.org>
Date:   Wed, 22 Jun 2022 00:31:13 +0200
Content-Type: multipart/signed; micalg="pgp-sha512";
        protocol="application/pgp-signature"; boundary="=-EINW1hhD4FSjCsNuDwjW"
User-Agent: Evolution 3.44.1-2 
MIME-Version: 1.0
X-SA-Exim-Connect-IP: 91.181.7.168
X-SA-Exim-Mail-From: ben@decadent.org.uk
X-SA-Exim-Scanned: No (on maynard); SAEximRunCond expanded to false
X-Spam-Status: No, score=-0.5 required=5.0 tests=BAYES_05,SPF_HELO_NONE,
        SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no
        version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <stable.vger.kernel.org>
X-Mailing-List: stable@vger.kernel.org


--=-EINW1hhD4FSjCsNuDwjW
Content-Type: multipart/mixed; boundary="=-JR0iJUrFyN8CmOHUlMR4"

--=-JR0iJUrFyN8CmOHUlMR4
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I've attached mailboxes with backports to 4.9, 4.14, and 4.19 of fixes
for:

- TCP source port randomisation
- xprtdma header length calculation
- [4.9 only] swiotlb information leak
- [4.9 only] FUSE pipe buffer information leak

Ben.

--=20
Ben Hutchings
Man invented language to satisfy his deep need to complain.
                                                          - Lily Tomlin

--=-JR0iJUrFyN8CmOHUlMR4
Content-Type: application/mbox; name="security-4.19.mbox"
Content-Disposition: attachment; filename="security-4.19.mbox"
Content-Transfer-Encoding: base64

RnJvbSAxNTQ3YjZkZWU5MDg1ODU4MmUzMTE3MmIxOGE3Y2MzMTk5NzRkZDJkIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBDb2xpbiBJYW4gS2luZyA8Y29saW4ua2luZ0BjYW5vbmljYWwu
Y29tPgpEYXRlOiBXZWQsIDE1IEp1bCAyMDIwIDE3OjI2OjA0ICswMTAwClN1YmplY3Q6IFsxLzdd
IHhwcnRyZG1hOiBmaXggaW5jb3JyZWN0IGhlYWRlciBzaXplIGNhbGN1bGF0aW9ucwoKY29tbWl0
IDkxMjI4ODQ0MmNiMmY0MzFiZjNjOGNiMDk3YTVkZTgzYmM2ZGJhYzEgdXBzdHJlYW0uCgpDdXJy
ZW50bHkgdGhlIGhlYWRlciBzaXplIGNhbGN1bGF0aW9ucyBhcmUgdXNpbmcgYW4gYXNzaWdubWVu
dApvcGVyYXRvciBpbnN0ZWFkIG9mIGEgKz0gb3BlcmF0b3Igd2hlbiBhY2N1bXVsYXRpbmcgdGhl
IGhlYWRlcgpzaXplIGxlYWRpbmcgdG8gaW5jb3JyZWN0IHNpemVzLiAgRml4IHRoaXMgYnkgdXNp
bmcgdGhlIGNvcnJlY3QKb3BlcmF0b3IuCgpBZGRyZXNzZXMtQ292ZXJpdHk6ICgiVW51c2VkIHZh
bHVlIikKRml4ZXM6IDMwMmQzZGViMjA2OCAoInhwcnRyZG1hOiBQcmV2ZW50IGlubGluZSBvdmVy
ZmxvdyIpClNpZ25lZC1vZmYtYnk6IENvbGluIElhbiBLaW5nIDxjb2xpbi5raW5nQGNhbm9uaWNh
bC5jb20+ClJldmlld2VkLWJ5OiBDaHVjayBMZXZlciA8Y2h1Y2subGV2ZXJAb3JhY2xlLmNvbT4K
U2lnbmVkLW9mZi1ieTogQW5uYSBTY2h1bWFrZXIgPEFubmEuU2NodW1ha2VyQE5ldGFwcC5jb20+
Cltid2g6IEJhY2twb3J0ZWQgdG8gNC4xOTogYWRqdXN0IGNvbnRleHRdClNpZ25lZC1vZmYtYnk6
IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L3N1bnJwYy94cHJ0
cmRtYS9ycGNfcmRtYS5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNlcnRpb25zKCsp
LCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3Jk
bWEuYyBiL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3JkbWEuYwppbmRleCAzZDY1YTJiY2NmYzcu
LjdmOWQ4MzY1YzkzMiAxMDA2NDQKLS0tIGEvbmV0L3N1bnJwYy94cHJ0cmRtYS9ycGNfcmRtYS5j
CisrKyBiL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3JkbWEuYwpAQCAtNzIsNyArNzIsNyBAQCBz
dGF0aWMgdW5zaWduZWQgaW50IHJwY3JkbWFfbWF4X2NhbGxfaGVhZGVyX3NpemUodW5zaWduZWQg
aW50IG1heHNlZ3MpCiAKIAkvKiBNYXhpbXVtIFJlYWQgbGlzdCBzaXplICovCiAJbWF4c2VncyAr
PSAyOwkvKiBzZWdtZW50IGZvciBoZWFkIGFuZCB0YWlsIGJ1ZmZlcnMgKi8KLQlzaXplID0gbWF4
c2VncyAqIHJwY3JkbWFfcmVhZGNodW5rX21heHN6ICogc2l6ZW9mKF9fYmUzMik7CisJc2l6ZSAr
PSBtYXhzZWdzICogcnBjcmRtYV9yZWFkY2h1bmtfbWF4c3ogKiBzaXplb2YoX19iZTMyKTsKIAog
CS8qIE1pbmltYWwgUmVhZCBjaHVuayBzaXplICovCiAJc2l6ZSArPSBzaXplb2YoX19iZTMyKTsJ
Lyogc2VnbWVudCBjb3VudCAqLwpAQCAtOTgsNyArOTgsNyBAQCBzdGF0aWMgdW5zaWduZWQgaW50
IHJwY3JkbWFfbWF4X3JlcGx5X2hlYWRlcl9zaXplKHVuc2lnbmVkIGludCBtYXhzZWdzKQogCiAJ
LyogTWF4aW11bSBXcml0ZSBsaXN0IHNpemUgKi8KIAltYXhzZWdzICs9IDI7CS8qIHNlZ21lbnQg
Zm9yIGhlYWQgYW5kIHRhaWwgYnVmZmVycyAqLwotCXNpemUgPSBzaXplb2YoX19iZTMyKTsJCS8q
IHNlZ21lbnQgY291bnQgKi8KKwlzaXplICs9IHNpemVvZihfX2JlMzIpOwkJLyogc2VnbWVudCBj
b3VudCAqLwogCXNpemUgKz0gbWF4c2VncyAqIHJwY3JkbWFfc2VnbWVudF9tYXhzeiAqIHNpemVv
ZihfX2JlMzIpOwogCXNpemUgKz0gc2l6ZW9mKF9fYmUzMik7CS8qIGxpc3QgZGlzY3JpbWluYXRv
ciAqLwogCgpGcm9tIGJkY2JkMTEwOTU3MmJkMTViMmNhY2ZiZjQ2NzczZjQ3Njc1OTBhNjggTW9u
IFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xl
LmNvbT4KRGF0ZTogVHVlLCA5IEZlYiAyMDIxIDExOjIwOjI4IC0wODAwClN1YmplY3Q6IFsyLzdd
IHRjcDogYWRkIHNvbWUgZW50cm9weSBpbiBfX2luZXRfaGFzaF9jb25uZWN0KCkKCmNvbW1pdCBj
NTc5YmQxYjQwMjFjNDJhZTI0NzEwOGYxZTZmNzNkZDNmMDg2MDBjIHVwc3RyZWFtLgoKRXZlbiB3
aGVuIGltcGxlbWVudGluZyBSRkMgNjA1NiAzLjMuNCAoQWxnb3JpdGhtIDQ6IERvdWJsZS1IYXNo
ClBvcnQgU2VsZWN0aW9uIEFsZ29yaXRobSksIGEgcGF0aWVudCBhdHRhY2tlciBjb3VsZCBzdGls
bCBiZSBhYmxlCnRvIGNvbGxlY3QgZW5vdWdoIHN0YXRlIGZyb20gYW4gb3RoZXJ3aXNlIGlkbGUg
aG9zdC4KCklkZWEgb2YgdGhpcyBwYXRjaCBpcyB0byBpbmplY3Qgc29tZSBub2lzZSwgaW4gdGhl
CmNhc2VzIF9faW5ldF9oYXNoX2Nvbm5lY3QoKSBmb3VuZCBhIGNhbmRpZGF0ZSBpbiB0aGUgZmly
c3QKYXR0ZW1wdC4KClRoaXMgbm9pc2Ugc2hvdWxkIG5vdCBzaWduaWZpY2FudGx5IHJlZHVjZSB0
aGUgY29sbGlzaW9uCmF2b2lkYW5jZSwgYW5kIHNob3VsZCBiZSB6ZXJvIGlmIGNvbm5lY3Rpb24g
dGFibGUKaXMgYWxyZWFkeSB3ZWxsIHVzZWQuCgpOb3RlIHRoYXQgdGhpcyBpcyBub3QgaW1wbGVt
ZW50aW5nIFJGQyA2MDU2IDMuMy41CmJlY2F1c2Ugd2UgdGhpbmsgQWxnb3JpdGhtIDUgY291bGQg
aHVydCB0eXBpY2FsCndvcmtsb2Fkcy4KClNpZ25lZC1vZmYtYnk6IEVyaWMgRHVtYXpldCA8ZWR1
bWF6ZXRAZ29vZ2xlLmNvbT4KQ2M6IERhdmlkIER3b3JrZW4gPGRkd29ya2VuQGdvb2dsZS5jb20+
CkNjOiBXaWxsZW0gZGUgQnJ1aWpuIDx3aWxsZW1iQGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6
IERhdmlkIFMuIE1pbGxlciA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KU2lnbmVkLW9mZi1ieTogQmVu
IEh1dGNoaW5ncyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBuZXQvaXB2NC9pbmV0X2hhc2h0
YWJsZXMuYyB8IDUgKysrKysKIDEgZmlsZSBjaGFuZ2VkLCA1IGluc2VydGlvbnMoKykKCmRpZmYg
LS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyBiL25ldC9pcHY0L2luZXRfaGFzaHRh
Ymxlcy5jCmluZGV4IDBhOGFlYzNmMzdjYy4uNGUyNzJmYWFmZDg3IDEwMDY0NAotLS0gYS9uZXQv
aXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwpA
QCAtODIxLDYgKzgyMSwxMSBAQCBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90
aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywKIAlyZXR1cm4gLUVBRERSTk9UQVZBSUw7CiAK
IG9rOgorCS8qIElmIG91ciBmaXJzdCBhdHRlbXB0IGZvdW5kIGEgY2FuZGlkYXRlLCBza2lwIG5l
eHQgY2FuZGlkYXRlCisJICogaW4gMS8xNiBvZiBjYXNlcyB0byBhZGQgc29tZSBub2lzZS4KKwkg
Ki8KKwlpZiAoIWkgJiYgIShwcmFuZG9tX3UzMigpICUgMTYpKQorCQlpID0gMjsKIAlXUklURV9P
TkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhdLCBSRUFEX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0p
ICsgaSArIDIpOwogCiAJLyogSGVhZCBsb2NrIHN0aWxsIGhlbGQgYW5kIGJoJ3MgZGlzYWJsZWQg
Ki8KCkZyb20gNTNhNWVjNDk3YzJjYjc5NDA1ODNmN2YyN2JhYjcyZTU5NzZjM2EwYSBNb24gU2Vw
IDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogV2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+CkRhdGU6IE1v
biwgMiBNYXkgMjAyMiAxMDo0NjowOSArMDIwMApTdWJqZWN0OiBbMy83XSB0Y3A6IHVzZSBkaWZm
ZXJlbnQgcGFydHMgb2YgdGhlIHBvcnRfb2Zmc2V0IGZvciBpbmRleCBhbmQKIG9mZnNldAoKY29t
bWl0IDllOWI3MGFlOTIzYmFmMmI1ZThhMGVhNGZkMGM4NDUxODAxYWM1MjYgdXBzdHJlYW0uCgpB
bWl0IEtsZWluIHN1Z2dlc3RzIHRoYXQgd2UgdXNlIGRpZmZlcmVudCBwYXJ0cyBvZiBwb3J0X29m
ZnNldCBmb3IgdGhlCnRhYmxlJ3MgaW5kZXggYW5kIHRoZSBwb3J0IG9mZnNldCBzbyB0aGF0IHRo
ZXJlIGlzIG5vIGRpcmVjdCByZWxhdGlvbgpiZXR3ZWVuIHRoZW0uCgpDYzogSmFzb24gQS4gRG9u
ZW5mZWxkIDxKYXNvbkB6eDJjNC5jb20+CkNjOiBNb3NoZSBLb2wgPG1vc2hlLmtvbEBtYWlsLmh1
amkuYWMuaWw+CkNjOiBZb3NzaSBHaWxhZCA8eW9zc2kuZ2lsYWRAbWFpbC5odWppLmFjLmlsPgpD
YzogQW1pdCBLbGVpbiA8YWtzZWN1cml0eUBnbWFpbC5jb20+ClJldmlld2VkLWJ5OiBFcmljIER1
bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6IFdpbGx5IFRhcnJlYXUg
PHdAMXd0LmV1PgpTaWduZWQtb2ZmLWJ5OiBKYWt1YiBLaWNpbnNraSA8a3ViYUBrZXJuZWwub3Jn
PgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0K
IG5ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIHwgMiArLQogMSBmaWxlIGNoYW5nZWQsIDEgaW5z
ZXJ0aW9uKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5ldF9oYXNo
dGFibGVzLmMgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCA0ZTI3MmZhYWZkODcu
LjRlMGM1Nzc4ODNkNyAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKKysr
IGIvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKQEAgLTc2Niw3ICs3NjYsNyBAQCBpbnQgX19p
bmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3Jv
dywKIAluZXRfZ2V0X3JhbmRvbV9vbmNlKHRhYmxlX3BlcnR1cmIsIHNpemVvZih0YWJsZV9wZXJ0
dXJiKSk7CiAJaW5kZXggPSBoYXNoXzMyKHBvcnRfb2Zmc2V0LCBJTkVUX1RBQkxFX1BFUlRVUkJf
U0hJRlQpOwogCi0Jb2Zmc2V0ID0gUkVBRF9PTkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhdKSArIHBv
cnRfb2Zmc2V0OworCW9mZnNldCA9IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyAo
cG9ydF9vZmZzZXQgPj4gMzIpOwogCW9mZnNldCAlPSByZW1haW5pbmc7CiAKIAkvKiBJbiBmaXJz
dCBwYXNzIHdlIHRyeSBwb3J0cyBvZiBAbG93IHBhcml0eS4KCkZyb20gZmZkNGM1YzMzMTk2NWY5
MTcyMjQ3ZmEzM2Q4MGZjMjA1ZjA5NGNmOSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTog
V2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+CkRhdGU6IE1vbiwgMiBNYXkgMjAyMiAxMDo0NjoxMSAr
MDIwMApTdWJqZWN0OiBbNC83XSB0Y3A6IGFkZCBzbWFsbCByYW5kb20gaW5jcmVtZW50cyB0byB0
aGUgc291cmNlIHBvcnQKCmNvbW1pdCBjYTdhZjA0MDI1NTBmOWEwYjMzMTZkNWYxYzMwOTA0ZTQy
ZWQyNTdkIHVwc3RyZWFtLgoKSGVyZSB3ZSdyZSByYW5kb21seSBhZGRpbmcgYmV0d2VlbiAwIGFu
ZCA3IHJhbmRvbSBpbmNyZW1lbnRzIHRvIHRoZQpzZWxlY3RlZCBzb3VyY2UgcG9ydCBpbiBvcmRl
ciB0byBhZGQgc29tZSBub2lzZSBpbiB0aGUgc291cmNlIHBvcnQKc2VsZWN0aW9uIHRoYXQgd2ls
bCBtYWtlIHRoZSBuZXh0IHBvcnQgbGVzcyBwcmVkaWN0YWJsZS4KCldpdGggdGhlIGRlZmF1bHQg
cG9ydCByYW5nZSBvZiAzMjc2OC02MDk5OSB0aGlzIG1lYW5zIGEgd29yc3QgY2FzZQpyZXVzZSBz
Y2VuYXJpbyBvZiAxNDExNi84PTE3NjQgY29ubmVjdGlvbnMgYmV0d2VlbiB0d28gY29uc2VjdXRp
dmUKdXNlcyBvZiB0aGUgc2FtZSBwb3J0LCB3aXRoIGFuIGF2ZXJhZ2Ugb2YgMTQxMTYvNC41PTMx
MzcuIFRoaXMgY29kZQp3YXMgc3RyZXNzZWQgYXQgbW9yZSB0aGFuIDgwMDAwMCBjb25uZWN0aW9u
cyBwZXIgc2Vjb25kIHRvIGEgZml4ZWQKdGFyZ2V0IHdpdGggYWxsIGNvbm5lY3Rpb25zIGNsb3Nl
ZCBieSB0aGUgY2xpZW50IHVzaW5nIFJTVHMgKHdvcnN0CmNvbmRpdGlvbikgYW5kIG9ubHkgMiBj
b25uZWN0aW9ucyBmYWlsZWQgYW1vbmcgMTMgYmlsbGlvbiwgZGVzcGl0ZQp0aGUgaGFzaCBiZWlu
ZyByZXNlZWRlZCBldmVyeSAxMCBzZWNvbmRzLCBpbmRpY2F0aW5nIGEgcGVyZmVjdGx5CnNhZmUg
c2l0dWF0aW9uLgoKQ2M6IE1vc2hlIEtvbCA8bW9zaGUua29sQG1haWwuaHVqaS5hYy5pbD4KQ2M6
IFlvc3NpIEdpbGFkIDx5b3NzaS5naWxhZEBtYWlsLmh1amkuYWMuaWw+CkNjOiBBbWl0IEtsZWlu
IDxha3NlY3VyaXR5QGdtYWlsLmNvbT4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6
ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogV2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+ClNp
Z25lZC1vZmYtYnk6IEpha3ViIEtpY2luc2tpIDxrdWJhQGtlcm5lbC5vcmc+ClNpZ25lZC1vZmYt
Ynk6IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5l
dF9oYXNodGFibGVzLmMgfCA5ICsrKysrLS0tLQogMSBmaWxlIGNoYW5nZWQsIDUgaW5zZXJ0aW9u
cygrKSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJs
ZXMuYyBiL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCmluZGV4IDRlMGM1Nzc4ODNkNy4uZjY1
ODFlNWIwMzI3IDEwMDY0NAotLS0gYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9u
ZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwpAQCAtODIxLDExICs4MjEsMTIgQEAgaW50IF9faW5l
dF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3cs
CiAJcmV0dXJuIC1FQUREUk5PVEFWQUlMOwogCiBvazoKLQkvKiBJZiBvdXIgZmlyc3QgYXR0ZW1w
dCBmb3VuZCBhIGNhbmRpZGF0ZSwgc2tpcCBuZXh0IGNhbmRpZGF0ZQotCSAqIGluIDEvMTYgb2Yg
Y2FzZXMgdG8gYWRkIHNvbWUgbm9pc2UuCisJLyogSGVyZSB3ZSB3YW50IHRvIGFkZCBhIGxpdHRs
ZSBiaXQgb2YgcmFuZG9tbmVzcyB0byB0aGUgbmV4dCBzb3VyY2UKKwkgKiBwb3J0IHRoYXQgd2ls
bCBiZSBjaG9zZW4uIFdlIHVzZSBhIG1heCgpIHdpdGggYSByYW5kb20gaGVyZSBzbyB0aGF0CisJ
ICogb24gbG93IGNvbnRlbnRpb24gdGhlIHJhbmRvbW5lc3MgaXMgbWF4aW1hbCBhbmQgb24gaGln
aCBjb250ZW50aW9uCisJICogaXQgbWF5IGJlIGluZXhpc3RlbnQuCiAJICovCi0JaWYgKCFpICYm
ICEocHJhbmRvbV91MzIoKSAlIDE2KSkKLQkJaSA9IDI7CisJaSA9IG1heF90KGludCwgaSwgKHBy
YW5kb21fdTMyKCkgJiA3KSAqIDIpOwogCVdSSVRFX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0s
IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBpICsgMik7CiAKIAkvKiBIZWFkIGxv
Y2sgc3RpbGwgaGVsZCBhbmQgYmgncyBkaXNhYmxlZCAqLwoKRnJvbSBkZDlkMGQyOWQ2NmVkMDli
MjMyMjA3ODY3Nzk5ZGM1MGI0MmI1ZTUzIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBX
aWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1heSAyMDIyIDEwOjQ2OjEyICsw
MjAwClN1YmplY3Q6IFs1LzddIHRjcDogZHluYW1pY2FsbHkgYWxsb2NhdGUgdGhlIHBlcnR1cmIg
dGFibGUgdXNlZCBieSBzb3VyY2UKIHBvcnRzCgpjb21taXQgZTkyNjE0NzYxODRiZTFhYmQ0ODZj
OTQzNDE2NGIyYWNiZTBlZDZjMiB1cHN0cmVhbS4KCldlJ2xsIG5lZWQgdG8gZnVydGhlciBpbmNy
ZWFzZSB0aGUgc2l6ZSBvZiB0aGlzIHRhYmxlIGFuZCBpdCdzIGxpa2VseQp0aGF0IGF0IHNvbWUg
cG9pbnQgaXRzIHNpemUgd2lsbCBub3QgYmUgc3VpdGFibGUgYW55bW9yZSBmb3IgYSBzdGF0aWMK
dGFibGUuIExldCdzIGFsbG9jYXRlIGl0IG9uIGJvb3QgZnJvbSBpbmV0X2hhc2hpbmZvMl9pbml0
KCksIHdoaWNoIGlzCmNhbGxlZCBmcm9tIHRjcF9pbml0KCkuCgpDYzogTW9zaGUgS29sIDxtb3No
ZS5rb2xAbWFpbC5odWppLmFjLmlsPgpDYzogWW9zc2kgR2lsYWQgPHlvc3NpLmdpbGFkQG1haWwu
aHVqaS5hYy5pbD4KQ2M6IEFtaXQgS2xlaW4gPGFrc2VjdXJpdHlAZ21haWwuY29tPgpSZXZpZXdl
ZC1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBX
aWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KU2lnbmVkLW9mZi1ieTogSmFrdWIgS2ljaW5za2kgPGt1
YmFAa2VybmVsLm9yZz4KW2J3aDogQmFja3BvcnRlZCB0byA0LjE5OiBhZGp1c3QgY29udGV4dF0K
U2lnbmVkLW9mZi1ieTogQmVuIEh1dGNoaW5ncyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBu
ZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyB8IDEyICsrKysrKysrKystLQogMSBmaWxlIGNoYW5n
ZWQsIDEwIGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lw
djQvaW5ldF9oYXNodGFibGVzLmMgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCBm
NjU4MWU1YjAzMjcuLmY4NTYzMmExYTAwNiAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNo
dGFibGVzLmMKKysrIGIvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKQEAgLTcyMyw3ICs3MjMs
OCBAQCBFWFBPUlRfU1lNQk9MX0dQTChpbmV0X3VuaGFzaCk7CiAgKiBwcml2YWN5LCB0aGlzIG9u
bHkgY29uc3VtZXMgMSBLQiBvZiBrZXJuZWwgbWVtb3J5LgogICovCiAjZGVmaW5lIElORVRfVEFC
TEVfUEVSVFVSQl9TSElGVCA4Ci1zdGF0aWMgdTMyIHRhYmxlX3BlcnR1cmJbMSA8PCBJTkVUX1RB
QkxFX1BFUlRVUkJfU0hJRlRdOworI2RlZmluZSBJTkVUX1RBQkxFX1BFUlRVUkJfU0laRSAoMSA8
PCBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQpCitzdGF0aWMgdTMyICp0YWJsZV9wZXJ0dXJiOwog
CiBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cg
KmRlYXRoX3JvdywKIAkJc3RydWN0IHNvY2sgKnNrLCB1NjQgcG9ydF9vZmZzZXQsCkBAIC03NjMs
NyArNzY0LDggQEAgaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRf
ZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJaWYgKGxpa2VseShyZW1haW5pbmcgPiAxKSkKIAkJcmVt
YWluaW5nICY9IH4xVTsKIAotCW5ldF9nZXRfcmFuZG9tX29uY2UodGFibGVfcGVydHVyYiwgc2l6
ZW9mKHRhYmxlX3BlcnR1cmIpKTsKKwluZXRfZ2V0X3JhbmRvbV9vbmNlKHRhYmxlX3BlcnR1cmIs
CisJCQkgICAgSU5FVF9UQUJMRV9QRVJUVVJCX1NJWkUgKiBzaXplb2YoKnRhYmxlX3BlcnR1cmIp
KTsKIAlpbmRleCA9IGhhc2hfMzIocG9ydF9vZmZzZXQsIElORVRfVEFCTEVfUEVSVFVSQl9TSElG
VCk7CiAKIAlvZmZzZXQgPSBSRUFEX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0pICsgKHBvcnRf
b2Zmc2V0ID4+IDMyKTsKQEAgLTg5Niw2ICs4OTgsMTIgQEAgdm9pZCBfX2luaXQgaW5ldF9oYXNo
aW5mbzJfaW5pdChzdHJ1Y3QgaW5ldF9oYXNoaW5mbyAqaCwgY29uc3QgY2hhciAqbmFtZSwKIAkJ
SU5JVF9ITElTVF9IRUFEKCZoLT5saGFzaDJbaV0uaGVhZCk7CiAJCWgtPmxoYXNoMltpXS5jb3Vu
dCA9IDA7CiAJfQorCisJLyogdGhpcyBvbmUgaXMgdXNlZCBmb3Igc291cmNlIHBvcnRzIG9mIG91
dGdvaW5nIGNvbm5lY3Rpb25zICovCisJdGFibGVfcGVydHVyYiA9IGttYWxsb2NfYXJyYXkoSU5F
VF9UQUJMRV9QRVJUVVJCX1NJWkUsCisJCQkJICAgICAgc2l6ZW9mKCp0YWJsZV9wZXJ0dXJiKSwg
R0ZQX0tFUk5FTCk7CisJaWYgKCF0YWJsZV9wZXJ0dXJiKQorCQlwYW5pYygiVENQOiBmYWlsZWQg
dG8gYWxsb2MgdGFibGVfcGVydHVyYiIpOwogfQogCiBpbnQgaW5ldF9laGFzaF9sb2Nrc19hbGxv
YyhzdHJ1Y3QgaW5ldF9oYXNoaW5mbyAqaGFzaGluZm8pCgpGcm9tIGUyNjJiZDVjYzllYmZmMzc4
MzlkMzM2OTk4YzZhZTU1ZDQzNmUzZmMgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFdp
bGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpEYXRlOiBNb24sIDIgTWF5IDIwMjIgMTA6NDY6MTMgKzAy
MDAKU3ViamVjdDogWzYvN10gdGNwOiBpbmNyZWFzZSBzb3VyY2UgcG9ydCBwZXJ0dXJiIHRhYmxl
IHRvIDJeMTYKCmNvbW1pdCA0YzJjOGYwM2E1YWI3Y2IwNGVjNjQ3MjRkN2QxNzZkMDBiY2M5MWU1
IHVwc3RyZWFtLgoKTW9zaGUgS29sLCBBbWl0IEtsZWluLCBhbmQgWW9zc2kgR2lsYWQgcmVwb3J0
ZWQgYmVpbmcgYWJsZSB0byBhY2N1cmF0ZWx5CmlkZW50aWZ5IGEgY2xpZW50IGJ5IGZvcmNpbmcg
aXQgdG8gZW1pdCBvbmx5IDQwIHRpbWVzIG1vcmUgY29ubmVjdGlvbnMKdGhhbiB0aGVyZSBhcmUg
ZW50cmllcyBpbiB0aGUgdGFibGVfcGVydHVyYltdIHRhYmxlLiBUaGUgcHJldmlvdXMgdHdvCmlt
cHJvdmVtZW50cyBjb25zaXN0aW5nIGluIHJlc2FsdGluZyB0aGUgc2VjcmV0IGV2ZXJ5IDEwcyBh
bmQgYWRkaW5nCnJhbmRvbW5lc3MgdG8gZWFjaCBwb3J0IHNlbGVjdGlvbiBvbmx5IHNsaWdodGx5
IGltcHJvdmVkIHRoZSBzaXR1YXRpb24sCmFuZCB0aGUgY3VycmVudCB2YWx1ZSBvZiAyXjggd2Fz
IHRvbyBzbWFsbCBhcyBpdCdzIG5vdCB2ZXJ5IGRpZmZpY3VsdAp0byBtYWtlIGEgY2xpZW50IGVt
aXQgMTBrIGNvbm5lY3Rpb25zIGluIGxlc3MgdGhhbiAxMCBzZWNvbmRzLgoKVGh1cyB3ZSdyZSBp
bmNyZWFzaW5nIHRoZSBwZXJ0dXJiIHRhYmxlIGZyb20gMl44IHRvIDJeMTYgc28gdGhhdCB0aGUK
c2FtZSBwcmVjaXNpb24gbm93IHJlcXVpcmVzIDIuNk0gY29ubmVjdGlvbnMsIHdoaWNoIGlzIG1v
cmUgZGlmZmljdWx0IGluCnRoaXMgdGltZSBmcmFtZSBhbmQgaGFyZGVyIHRvIGhpZGUgYXMgYSBi
YWNrZ3JvdW5kIGFjdGl2aXR5LiBUaGUgaW1wYWN0CmlzIHRoYXQgdGhlIHRhYmxlIG5vdyB1c2Vz
IDI1NiBrQiBpbnN0ZWFkIG9mIDEga0IsIHdoaWNoIGNvdWxkIG1vc3RseQphZmZlY3QgZGV2aWNl
cyBtYWtpbmcgZnJlcXVlbnQgb3V0Z29pbmcgY29ubmVjdGlvbnMuIEhvd2V2ZXIgc3VjaApjb21w
b25lbnRzIHVzdWFsbHkgdGFyZ2V0IGEgc21hbGwgc2V0IG9mIGRlc3RpbmF0aW9ucyAobG9hZCBi
YWxhbmNlcnMsCmRhdGFiYXNlIGNsaWVudHMsIHBlcmYgYXNzZXNzbWVudCB0b29scyksIGFuZCBp
biBwcmFjdGljZSBvbmx5IGEgZmV3CmVudHJpZXMgd2lsbCBiZSB2aXNpdGVkLCBsaWtlIGJlZm9y
ZS4KCkEgbGl2ZSB0ZXN0IGF0IDEgbWlsbGlvbiBjb25uZWN0aW9ucyBwZXIgc2Vjb25kIHNob3dl
ZCBubyBwZXJmb3JtYW5jZQpkaWZmZXJlbmNlIGZyb20gdGhlIHByZXZpb3VzIHZhbHVlLgoKUmVw
b3J0ZWQtYnk6IE1vc2hlIEtvbCA8bW9zaGUua29sQG1haWwuaHVqaS5hYy5pbD4KUmVwb3J0ZWQt
Ynk6IFlvc3NpIEdpbGFkIDx5b3NzaS5naWxhZEBtYWlsLmh1amkuYWMuaWw+ClJlcG9ydGVkLWJ5
OiBBbWl0IEtsZWluIDxha3NlY3VyaXR5QGdtYWlsLmNvbT4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVt
YXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogV2lsbHkgVGFycmVhdSA8
d0Axd3QuZXU+ClNpZ25lZC1vZmYtYnk6IEpha3ViIEtpY2luc2tpIDxrdWJhQGtlcm5lbC5vcmc+
ClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQog
bmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgfCA5ICsrKysrLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDUgaW5zZXJ0aW9ucygrKSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvaXB2NC9p
bmV0X2hhc2h0YWJsZXMuYyBiL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCmluZGV4IGY4NTYz
MmExYTAwNi4uZGRhYTFiZTczN2I5IDEwMDY0NAotLS0gYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJs
ZXMuYworKysgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwpAQCAtNzE4LDExICs3MTgsMTIg
QEAgRVhQT1JUX1NZTUJPTF9HUEwoaW5ldF91bmhhc2gpOwogICogTm90ZSB0aGF0IHdlIHVzZSAz
MmJpdCBpbnRlZ2VycyAodnMgUkZDICdzaG9ydCBpbnRlZ2VycycpCiAgKiBiZWNhdXNlIDJeMTYg
aXMgbm90IGEgbXVsdGlwbGUgb2YgbnVtX2VwaGVtZXJhbCBhbmQgdGhpcwogICogcHJvcGVydHkg
bWlnaHQgYmUgdXNlZCBieSBjbGV2ZXIgYXR0YWNrZXIuCi0gKiBSRkMgY2xhaW1zIHVzaW5nIFRB
QkxFX0xFTkdUSD0xMCBidWNrZXRzIGdpdmVzIGFuIGltcHJvdmVtZW50LAotICogd2UgdXNlIDI1
NiBpbnN0ZWFkIHRvIHJlYWxseSBnaXZlIG1vcmUgaXNvbGF0aW9uIGFuZAotICogcHJpdmFjeSwg
dGhpcyBvbmx5IGNvbnN1bWVzIDEgS0Igb2Yga2VybmVsIG1lbW9yeS4KKyAqIFJGQyBjbGFpbXMg
dXNpbmcgVEFCTEVfTEVOR1RIPTEwIGJ1Y2tldHMgZ2l2ZXMgYW4gaW1wcm92ZW1lbnQsIHRob3Vn
aAorICogYXR0YWNrcyB3ZXJlIHNpbmNlIGRlbW9uc3RyYXRlZCwgdGh1cyB3ZSB1c2UgNjU1MzYg
aW5zdGVhZCB0byByZWFsbHkKKyAqIGdpdmUgbW9yZSBpc29sYXRpb24gYW5kIHByaXZhY3ksIGF0
IHRoZSBleHBlbnNlIG9mIDI1NmtCIG9mIGtlcm5lbAorICogbWVtb3J5LgogICovCi0jZGVmaW5l
IElORVRfVEFCTEVfUEVSVFVSQl9TSElGVCA4CisjZGVmaW5lIElORVRfVEFCTEVfUEVSVFVSQl9T
SElGVCAxNgogI2RlZmluZSBJTkVUX1RBQkxFX1BFUlRVUkJfU0laRSAoMSA8PCBJTkVUX1RBQkxF
X1BFUlRVUkJfU0hJRlQpCiBzdGF0aWMgdTMyICp0YWJsZV9wZXJ0dXJiOwogCgpGcm9tIDU5Y2Ni
ZDI0NjlmZmE1NDAzMGYyYWUyYWVlNjY1N2FiYTc4ZTZlNWUgTW9uIFNlcCAxNyAwMDowMDowMCAy
MDAxCkZyb206IFdpbGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpEYXRlOiBNb24sIDIgTWF5IDIwMjIg
MTA6NDY6MTQgKzAyMDAKU3ViamVjdDogWzcvN10gdGNwOiBkcm9wIHRoZSBoYXNoXzMyKCkgcGFy
dCBmcm9tIHRoZSBpbmRleCBjYWxjdWxhdGlvbgoKY29tbWl0IGU4MTYxMzQ1ZGRiYjY2ZTQ0OWFi
ZGUxMGQyZmRjZTkzZjg2N2ViYTkgdXBzdHJlYW0uCgpJbiBjb21taXQgMTkwY2M4MjQ4OWY0ICgi
dGNwOiBjaGFuZ2Ugc291cmNlIHBvcnQgcmFuZG9taXphcmlvbiBhdApjb25uZWN0KCkgdGltZSIp
LCB0aGUgdGFibGVfcGVydHVyYltdIGFycmF5IHdhcyBpbnRyb2R1Y2VkIGFuZCBhbgppbmRleCB3
YXMgdGFrZW4gZnJvbSB0aGUgcG9ydF9vZmZzZXQgdmlhIGhhc2hfMzIoKS4gQnV0IGl0IHR1cm5z
Cm91dCB0aGF0IGhhc2hfMzIoKSBwZXJmb3JtcyBhIG11bHRpcGxpY2F0aW9uIHdoaWxlIHRoZSBp
bnB1dCBoZXJlCmNvbWVzIGZyb20gdGhlIG91dHB1dCBvZiBTaXBIYXNoIGluIHNlY3VyZV9zZXEs
IHRoYXQgaXMgd2VsbApkaXN0cmlidXRlZCBlbm91Z2ggdG8gYXZvaWQgdGhlIG5lZWQgZm9yIHll
dCBhbm90aGVyIGhhc2guCgpTdWdnZXN0ZWQtYnk6IEFtaXQgS2xlaW4gPGFrc2VjdXJpdHlAZ21h
aWwuY29tPgpSZXZpZXdlZC1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29nbGUuY29tPgpT
aWduZWQtb2ZmLWJ5OiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KU2lnbmVkLW9mZi1ieTogSmFr
dWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogQmVuIEh1dGNoaW5n
cyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBuZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyB8
IDIgKy0KIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlvbigrKSwgMSBkZWxldGlvbigtKQoKZGlm
ZiAtLWdpdCBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIGIvbmV0L2lwdjQvaW5ldF9oYXNo
dGFibGVzLmMKaW5kZXggZGRhYTFiZTczN2I5Li41Mjk1YTU3OWVjODIgMTAwNjQ0Ci0tLSBhL25l
dC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCisrKyBiL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5j
CkBAIC03NjcsNyArNzY3LDcgQEAgaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRf
dGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAKIAluZXRfZ2V0X3JhbmRvbV9vbmNlKHRh
YmxlX3BlcnR1cmIsCiAJCQkgICAgSU5FVF9UQUJMRV9QRVJUVVJCX1NJWkUgKiBzaXplb2YoKnRh
YmxlX3BlcnR1cmIpKTsKLQlpbmRleCA9IGhhc2hfMzIocG9ydF9vZmZzZXQsIElORVRfVEFCTEVf
UEVSVFVSQl9TSElGVCk7CisJaW5kZXggPSBwb3J0X29mZnNldCAmIChJTkVUX1RBQkxFX1BFUlRV
UkJfU0laRSAtIDEpOwogCiAJb2Zmc2V0ID0gUkVBRF9PTkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhd
KSArIChwb3J0X29mZnNldCA+PiAzMik7CiAJb2Zmc2V0ICU9IHJlbWFpbmluZzsK


--=-JR0iJUrFyN8CmOHUlMR4
Content-Type: application/mbox; name="security-4.14.mbox"
Content-Disposition: attachment; filename="security-4.14.mbox"
Content-Transfer-Encoding: base64

RnJvbSBkMjMzMjI5YTc0NzQ4NzExMTc2ZDc1OGMwNTFmNTI4YTY3NjhlNjQ5IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBDb2xpbiBJYW4gS2luZyA8Y29saW4ua2luZ0BjYW5vbmljYWwu
Y29tPgpEYXRlOiBXZWQsIDE1IEp1bCAyMDIwIDE3OjI2OjA0ICswMTAwClN1YmplY3Q6IFsxLzdd
IHhwcnRyZG1hOiBmaXggaW5jb3JyZWN0IGhlYWRlciBzaXplIGNhbGN1bGF0aW9ucwoKY29tbWl0
IDkxMjI4ODQ0MmNiMmY0MzFiZjNjOGNiMDk3YTVkZTgzYmM2ZGJhYzEgdXBzdHJlYW0uCgpDdXJy
ZW50bHkgdGhlIGhlYWRlciBzaXplIGNhbGN1bGF0aW9ucyBhcmUgdXNpbmcgYW4gYXNzaWdubWVu
dApvcGVyYXRvciBpbnN0ZWFkIG9mIGEgKz0gb3BlcmF0b3Igd2hlbiBhY2N1bXVsYXRpbmcgdGhl
IGhlYWRlcgpzaXplIGxlYWRpbmcgdG8gaW5jb3JyZWN0IHNpemVzLiAgRml4IHRoaXMgYnkgdXNp
bmcgdGhlIGNvcnJlY3QKb3BlcmF0b3IuCgpBZGRyZXNzZXMtQ292ZXJpdHk6ICgiVW51c2VkIHZh
bHVlIikKRml4ZXM6IDMwMmQzZGViMjA2OCAoInhwcnRyZG1hOiBQcmV2ZW50IGlubGluZSBvdmVy
ZmxvdyIpClNpZ25lZC1vZmYtYnk6IENvbGluIElhbiBLaW5nIDxjb2xpbi5raW5nQGNhbm9uaWNh
bC5jb20+ClJldmlld2VkLWJ5OiBDaHVjayBMZXZlciA8Y2h1Y2subGV2ZXJAb3JhY2xlLmNvbT4K
U2lnbmVkLW9mZi1ieTogQW5uYSBTY2h1bWFrZXIgPEFubmEuU2NodW1ha2VyQE5ldGFwcC5jb20+
Cltid2g6IEJhY2twb3J0ZWQgdG8gNC4xNDogYWRqdXN0IGNvbnRleHRdClNpZ25lZC1vZmYtYnk6
IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L3N1bnJwYy94cHJ0
cmRtYS9ycGNfcmRtYS5jIHwgNCArKy0tCiAxIGZpbGUgY2hhbmdlZCwgMiBpbnNlcnRpb25zKCsp
LCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3Jk
bWEuYyBiL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3JkbWEuYwppbmRleCAwMzBiZjE3YTIwYjYu
LjBkYWU5MjYwYmEzYyAxMDA2NDQKLS0tIGEvbmV0L3N1bnJwYy94cHJ0cmRtYS9ycGNfcmRtYS5j
CisrKyBiL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3JkbWEuYwpAQCAtNzUsNyArNzUsNyBAQCBz
dGF0aWMgdW5zaWduZWQgaW50IHJwY3JkbWFfbWF4X2NhbGxfaGVhZGVyX3NpemUodW5zaWduZWQg
aW50IG1heHNlZ3MpCiAKIAkvKiBNYXhpbXVtIFJlYWQgbGlzdCBzaXplICovCiAJbWF4c2VncyAr
PSAyOwkvKiBzZWdtZW50IGZvciBoZWFkIGFuZCB0YWlsIGJ1ZmZlcnMgKi8KLQlzaXplID0gbWF4
c2VncyAqIHNpemVvZihzdHJ1Y3QgcnBjcmRtYV9yZWFkX2NodW5rKTsKKwlzaXplICs9IG1heHNl
Z3MgKiBzaXplb2Yoc3RydWN0IHJwY3JkbWFfcmVhZF9jaHVuayk7CiAKIAkvKiBNaW5pbWFsIFJl
YWQgY2h1bmsgc2l6ZSAqLwogCXNpemUgKz0gc2l6ZW9mKF9fYmUzMik7CS8qIHNlZ21lbnQgY291
bnQgKi8KQEAgLTEwMSw3ICsxMDEsNyBAQCBzdGF0aWMgdW5zaWduZWQgaW50IHJwY3JkbWFfbWF4
X3JlcGx5X2hlYWRlcl9zaXplKHVuc2lnbmVkIGludCBtYXhzZWdzKQogCiAJLyogTWF4aW11bSBX
cml0ZSBsaXN0IHNpemUgKi8KIAltYXhzZWdzICs9IDI7CS8qIHNlZ21lbnQgZm9yIGhlYWQgYW5k
IHRhaWwgYnVmZmVycyAqLwotCXNpemUgPSBzaXplb2YoX19iZTMyKTsJCS8qIHNlZ21lbnQgY291
bnQgKi8KKwlzaXplICs9IHNpemVvZihfX2JlMzIpOwkJLyogc2VnbWVudCBjb3VudCAqLwogCXNp
emUgKz0gbWF4c2VncyAqIHNpemVvZihzdHJ1Y3QgcnBjcmRtYV9zZWdtZW50KTsKIAlzaXplICs9
IHNpemVvZihfX2JlMzIpOwkvKiBsaXN0IGRpc2NyaW1pbmF0b3IgKi8KIAoKRnJvbSBlYzZiOWZj
NDY4NThiYzNhNTE0ZjA4NzE1Yzk4MGNiNDhiNGM0ZjY0IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAw
MQpGcm9tOiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+CkRhdGU6IFR1ZSwgOSBG
ZWIgMjAyMSAxMToyMDoyOCAtMDgwMApTdWJqZWN0OiBbMi83XSB0Y3A6IGFkZCBzb21lIGVudHJv
cHkgaW4gX19pbmV0X2hhc2hfY29ubmVjdCgpCgpjb21taXQgYzU3OWJkMWI0MDIxYzQyYWUyNDcx
MDhmMWU2ZjczZGQzZjA4NjAwYyB1cHN0cmVhbS4KCkV2ZW4gd2hlbiBpbXBsZW1lbnRpbmcgUkZD
IDYwNTYgMy4zLjQgKEFsZ29yaXRobSA0OiBEb3VibGUtSGFzaApQb3J0IFNlbGVjdGlvbiBBbGdv
cml0aG0pLCBhIHBhdGllbnQgYXR0YWNrZXIgY291bGQgc3RpbGwgYmUgYWJsZQp0byBjb2xsZWN0
IGVub3VnaCBzdGF0ZSBmcm9tIGFuIG90aGVyd2lzZSBpZGxlIGhvc3QuCgpJZGVhIG9mIHRoaXMg
cGF0Y2ggaXMgdG8gaW5qZWN0IHNvbWUgbm9pc2UsIGluIHRoZQpjYXNlcyBfX2luZXRfaGFzaF9j
b25uZWN0KCkgZm91bmQgYSBjYW5kaWRhdGUgaW4gdGhlIGZpcnN0CmF0dGVtcHQuCgpUaGlzIG5v
aXNlIHNob3VsZCBub3Qgc2lnbmlmaWNhbnRseSByZWR1Y2UgdGhlIGNvbGxpc2lvbgphdm9pZGFu
Y2UsIGFuZCBzaG91bGQgYmUgemVybyBpZiBjb25uZWN0aW9uIHRhYmxlCmlzIGFscmVhZHkgd2Vs
bCB1c2VkLgoKTm90ZSB0aGF0IHRoaXMgaXMgbm90IGltcGxlbWVudGluZyBSRkMgNjA1NiAzLjMu
NQpiZWNhdXNlIHdlIHRoaW5rIEFsZ29yaXRobSA1IGNvdWxkIGh1cnQgdHlwaWNhbAp3b3JrbG9h
ZHMuCgpTaWduZWQtb2ZmLWJ5OiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+CkNj
OiBEYXZpZCBEd29ya2VuIDxkZHdvcmtlbkBnb29nbGUuY29tPgpDYzogV2lsbGVtIGRlIEJydWlq
biA8d2lsbGVtYkBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRh
dmVtQGRhdmVtbG9mdC5uZXQ+ClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNh
ZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgfCA1ICsrKysrCiAx
IGZpbGUgY2hhbmdlZCwgNSBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5l
dF9oYXNodGFibGVzLmMgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCAxZWJhZDVh
MDI0YTcuLjQ1NWEwYTFhYWUzOCAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVz
LmMKKysrIGIvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKQEAgLTY5NCw2ICs2OTQsMTEgQEAg
aW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICpk
ZWF0aF9yb3csCiAJcmV0dXJuIC1FQUREUk5PVEFWQUlMOwogCiBvazoKKwkvKiBJZiBvdXIgZmly
c3QgYXR0ZW1wdCBmb3VuZCBhIGNhbmRpZGF0ZSwgc2tpcCBuZXh0IGNhbmRpZGF0ZQorCSAqIGlu
IDEvMTYgb2YgY2FzZXMgdG8gYWRkIHNvbWUgbm9pc2UuCisJICovCisJaWYgKCFpICYmICEocHJh
bmRvbV91MzIoKSAlIDE2KSkKKwkJaSA9IDI7CiAJV1JJVEVfT05DRSh0YWJsZV9wZXJ0dXJiW2lu
ZGV4XSwgUkVBRF9PTkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhdKSArIGkgKyAyKTsKIAogCS8qIEhl
YWQgbG9jayBzdGlsbCBoZWxkIGFuZCBiaCdzIGRpc2FibGVkICovCgpGcm9tIDM1MmQ3MWNhMGMz
ZTE2OTQzNGU2Y2ZhMTkxOTljN2I3MDdlN2VmOWUgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZy
b206IFdpbGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpEYXRlOiBNb24sIDIgTWF5IDIwMjIgMTA6NDY6
MDkgKzAyMDAKU3ViamVjdDogWzMvN10gdGNwOiB1c2UgZGlmZmVyZW50IHBhcnRzIG9mIHRoZSBw
b3J0X29mZnNldCBmb3IgaW5kZXggYW5kCiBvZmZzZXQKCmNvbW1pdCA5ZTliNzBhZTkyM2JhZjJi
NWU4YTBlYTRmZDBjODQ1MTgwMWFjNTI2IHVwc3RyZWFtLgoKQW1pdCBLbGVpbiBzdWdnZXN0cyB0
aGF0IHdlIHVzZSBkaWZmZXJlbnQgcGFydHMgb2YgcG9ydF9vZmZzZXQgZm9yIHRoZQp0YWJsZSdz
IGluZGV4IGFuZCB0aGUgcG9ydCBvZmZzZXQgc28gdGhhdCB0aGVyZSBpcyBubyBkaXJlY3QgcmVs
YXRpb24KYmV0d2VlbiB0aGVtLgoKQ2M6IEphc29uIEEuIERvbmVuZmVsZCA8SmFzb25AengyYzQu
Y29tPgpDYzogTW9zaGUgS29sIDxtb3NoZS5rb2xAbWFpbC5odWppLmFjLmlsPgpDYzogWW9zc2kg
R2lsYWQgPHlvc3NpLmdpbGFkQG1haWwuaHVqaS5hYy5pbD4KQ2M6IEFtaXQgS2xlaW4gPGFrc2Vj
dXJpdHlAZ21haWwuY29tPgpSZXZpZXdlZC1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29n
bGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KU2lnbmVkLW9m
Zi1ieTogSmFrdWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogQmVu
IEh1dGNoaW5ncyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBuZXQvaXB2NC9pbmV0X2hhc2h0
YWJsZXMuYyB8IDIgKy0KIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlvbigrKSwgMSBkZWxldGlv
bigtKQoKZGlmZiAtLWdpdCBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIGIvbmV0L2lwdjQv
aW5ldF9oYXNodGFibGVzLmMKaW5kZXggNDU1YTBhMWFhZTM4Li44YWM1MWUxOGQzZDggMTAwNjQ0
Ci0tLSBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCisrKyBiL25ldC9pcHY0L2luZXRfaGFz
aHRhYmxlcy5jCkBAIC02MzksNyArNjM5LDcgQEAgaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3Ry
dWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJbmV0X2dldF9yYW5kb21f
b25jZSh0YWJsZV9wZXJ0dXJiLCBzaXplb2YodGFibGVfcGVydHVyYikpOwogCWluZGV4ID0gaGFz
aF8zMihwb3J0X29mZnNldCwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUKTsKIAotCW9mZnNldCA9
IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBwb3J0X29mZnNldDsKKwlvZmZzZXQg
PSBSRUFEX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0pICsgKHBvcnRfb2Zmc2V0ID4+IDMyKTsK
IAlvZmZzZXQgJT0gcmVtYWluaW5nOwogCiAJLyogSW4gZmlyc3QgcGFzcyB3ZSB0cnkgcG9ydHMg
b2YgQGxvdyBwYXJpdHkuCgpGcm9tIDFhYWM2YTNjMDM2YzYxZWM1Mjc4MGNhMTMzNWYyMjNiNzMw
YmZhM2IgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFdpbGx5IFRhcnJlYXUgPHdAMXd0
LmV1PgpEYXRlOiBNb24sIDIgTWF5IDIwMjIgMTA6NDY6MTEgKzAyMDAKU3ViamVjdDogWzQvN10g
dGNwOiBhZGQgc21hbGwgcmFuZG9tIGluY3JlbWVudHMgdG8gdGhlIHNvdXJjZSBwb3J0Cgpjb21t
aXQgY2E3YWYwNDAyNTUwZjlhMGIzMzE2ZDVmMWMzMDkwNGU0MmVkMjU3ZCB1cHN0cmVhbS4KCkhl
cmUgd2UncmUgcmFuZG9tbHkgYWRkaW5nIGJldHdlZW4gMCBhbmQgNyByYW5kb20gaW5jcmVtZW50
cyB0byB0aGUKc2VsZWN0ZWQgc291cmNlIHBvcnQgaW4gb3JkZXIgdG8gYWRkIHNvbWUgbm9pc2Ug
aW4gdGhlIHNvdXJjZSBwb3J0CnNlbGVjdGlvbiB0aGF0IHdpbGwgbWFrZSB0aGUgbmV4dCBwb3J0
IGxlc3MgcHJlZGljdGFibGUuCgpXaXRoIHRoZSBkZWZhdWx0IHBvcnQgcmFuZ2Ugb2YgMzI3Njgt
NjA5OTkgdGhpcyBtZWFucyBhIHdvcnN0IGNhc2UKcmV1c2Ugc2NlbmFyaW8gb2YgMTQxMTYvOD0x
NzY0IGNvbm5lY3Rpb25zIGJldHdlZW4gdHdvIGNvbnNlY3V0aXZlCnVzZXMgb2YgdGhlIHNhbWUg
cG9ydCwgd2l0aCBhbiBhdmVyYWdlIG9mIDE0MTE2LzQuNT0zMTM3LiBUaGlzIGNvZGUKd2FzIHN0
cmVzc2VkIGF0IG1vcmUgdGhhbiA4MDAwMDAgY29ubmVjdGlvbnMgcGVyIHNlY29uZCB0byBhIGZp
eGVkCnRhcmdldCB3aXRoIGFsbCBjb25uZWN0aW9ucyBjbG9zZWQgYnkgdGhlIGNsaWVudCB1c2lu
ZyBSU1RzICh3b3JzdApjb25kaXRpb24pIGFuZCBvbmx5IDIgY29ubmVjdGlvbnMgZmFpbGVkIGFt
b25nIDEzIGJpbGxpb24sIGRlc3BpdGUKdGhlIGhhc2ggYmVpbmcgcmVzZWVkZWQgZXZlcnkgMTAg
c2Vjb25kcywgaW5kaWNhdGluZyBhIHBlcmZlY3RseQpzYWZlIHNpdHVhdGlvbi4KCkNjOiBNb3No
ZSBLb2wgPG1vc2hlLmtvbEBtYWlsLmh1amkuYWMuaWw+CkNjOiBZb3NzaSBHaWxhZCA8eW9zc2ku
Z2lsYWRAbWFpbC5odWppLmFjLmlsPgpDYzogQW1pdCBLbGVpbiA8YWtzZWN1cml0eUBnbWFpbC5j
b20+ClJldmlld2VkLWJ5OiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+ClNpZ25l
ZC1vZmYtYnk6IFdpbGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpTaWduZWQtb2ZmLWJ5OiBKYWt1YiBL
aWNpbnNraSA8a3ViYUBrZXJuZWwub3JnPgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxi
ZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIHwgOSAr
KysrKy0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA1IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgYi9uZXQvaXB2NC9pbmV0
X2hhc2h0YWJsZXMuYwppbmRleCA4YWM1MWUxOGQzZDguLjY2M2VkZGQ5ZTVhYSAxMDA2NDQKLS0t
IGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKKysrIGIvbmV0L2lwdjQvaW5ldF9oYXNodGFi
bGVzLmMKQEAgLTY5NCwxMSArNjk0LDEyIEBAIGludCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVj
dCBpbmV0X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVhdGhfcm93LAogCXJldHVybiAtRUFERFJOT1RB
VkFJTDsKIAogb2s6Ci0JLyogSWYgb3VyIGZpcnN0IGF0dGVtcHQgZm91bmQgYSBjYW5kaWRhdGUs
IHNraXAgbmV4dCBjYW5kaWRhdGUKLQkgKiBpbiAxLzE2IG9mIGNhc2VzIHRvIGFkZCBzb21lIG5v
aXNlLgorCS8qIEhlcmUgd2Ugd2FudCB0byBhZGQgYSBsaXR0bGUgYml0IG9mIHJhbmRvbW5lc3Mg
dG8gdGhlIG5leHQgc291cmNlCisJICogcG9ydCB0aGF0IHdpbGwgYmUgY2hvc2VuLiBXZSB1c2Ug
YSBtYXgoKSB3aXRoIGEgcmFuZG9tIGhlcmUgc28gdGhhdAorCSAqIG9uIGxvdyBjb250ZW50aW9u
IHRoZSByYW5kb21uZXNzIGlzIG1heGltYWwgYW5kIG9uIGhpZ2ggY29udGVudGlvbgorCSAqIGl0
IG1heSBiZSBpbmV4aXN0ZW50LgogCSAqLwotCWlmICghaSAmJiAhKHByYW5kb21fdTMyKCkgJSAx
NikpCi0JCWkgPSAyOworCWkgPSBtYXhfdChpbnQsIGksIChwcmFuZG9tX3UzMigpICYgNykgKiAy
KTsKIAlXUklURV9PTkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhdLCBSRUFEX09OQ0UodGFibGVfcGVy
dHVyYltpbmRleF0pICsgaSArIDIpOwogCiAJLyogSGVhZCBsb2NrIHN0aWxsIGhlbGQgYW5kIGJo
J3MgZGlzYWJsZWQgKi8KCkZyb20gODA0ZGFkYTRmOTVmNWJlOWUwMDYxNjFhMjc4NjdjNjI4YjVi
M2NhYiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogV2lsbHkgVGFycmVhdSA8d0Axd3Qu
ZXU+CkRhdGU6IE1vbiwgMiBNYXkgMjAyMiAxMDo0NjoxMiArMDIwMApTdWJqZWN0OiBbNS83XSB0
Y3A6IGR5bmFtaWNhbGx5IGFsbG9jYXRlIHRoZSBwZXJ0dXJiIHRhYmxlIHVzZWQgYnkgc291cmNl
CiBwb3J0cwoKY29tbWl0IGU5MjYxNDc2MTg0YmUxYWJkNDg2Yzk0MzQxNjRiMmFjYmUwZWQ2YzIg
dXBzdHJlYW0uCgpXZSdsbCBuZWVkIHRvIGZ1cnRoZXIgaW5jcmVhc2UgdGhlIHNpemUgb2YgdGhp
cyB0YWJsZSBhbmQgaXQncyBsaWtlbHkKdGhhdCBhdCBzb21lIHBvaW50IGl0cyBzaXplIHdpbGwg
bm90IGJlIHN1aXRhYmxlIGFueW1vcmUgZm9yIGEgc3RhdGljCnRhYmxlLiBMZXQncyBhbGxvY2F0
ZSBpdCBvbiBib290IGZyb20gaW5ldF9oYXNoaW5mbzJfaW5pdCgpLCB3aGljaCBpcwpjYWxsZWQg
ZnJvbSB0Y3BfaW5pdCgpLgoKQ2M6IE1vc2hlIEtvbCA8bW9zaGUua29sQG1haWwuaHVqaS5hYy5p
bD4KQ2M6IFlvc3NpIEdpbGFkIDx5b3NzaS5naWxhZEBtYWlsLmh1amkuYWMuaWw+CkNjOiBBbWl0
IEtsZWluIDxha3NlY3VyaXR5QGdtYWlsLmNvbT4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8
ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogV2lsbHkgVGFycmVhdSA8d0Axd3Qu
ZXU+ClNpZ25lZC1vZmYtYnk6IEpha3ViIEtpY2luc2tpIDxrdWJhQGtlcm5lbC5vcmc+Cltid2g6
IEJhY2twb3J0ZWQgdG8gNC4xNDoKIC0gVGhlcmUgaXMgbm8gaW5ldF9oYXNoaW5mbzJfaW5pdCgp
LCBzbyBhbGxvY2F0ZSB0aGUgdGFibGUgaW4KICAgaW5ldF9oYXNoaW5mb19pbml0KCkgd2hlbiBj
YWxsZWQgYnkgVENQCiAtIEFkanVzdCBjb250ZXh0XQpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hp
bmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5j
IHwgMTUgKysrKysrKysrKysrKy0tCiAxIGZpbGUgY2hhbmdlZCwgMTMgaW5zZXJ0aW9ucygrKSwg
MiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyBi
L25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCmluZGV4IDY2M2VkZGQ5ZTVhYS4uZmEyZTY1ZDY5
MGRlIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9uZXQvaXB2
NC9pbmV0X2hhc2h0YWJsZXMuYwpAQCAtNTk2LDcgKzU5Niw4IEBAIEVYUE9SVF9TWU1CT0xfR1BM
KGluZXRfdW5oYXNoKTsKICAqIHByaXZhY3ksIHRoaXMgb25seSBjb25zdW1lcyAxIEtCIG9mIGtl
cm5lbCBtZW1vcnkuCiAgKi8KICNkZWZpbmUgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUIDgKLXN0
YXRpYyB1MzIgdGFibGVfcGVydHVyYlsxIDw8IElORVRfVEFCTEVfUEVSVFVSQl9TSElGVF07Cisj
ZGVmaW5lIElORVRfVEFCTEVfUEVSVFVSQl9TSVpFICgxIDw8IElORVRfVEFCTEVfUEVSVFVSQl9T
SElGVCkKK3N0YXRpYyB1MzIgKnRhYmxlX3BlcnR1cmI7CiAKIGludCBfX2luZXRfaGFzaF9jb25u
ZWN0KHN0cnVjdCBpbmV0X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVhdGhfcm93LAogCQlzdHJ1Y3Qg
c29jayAqc2ssIHU2NCBwb3J0X29mZnNldCwKQEAgLTYzNiw3ICs2MzcsOCBAQCBpbnQgX19pbmV0
X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywK
IAlpZiAobGlrZWx5KHJlbWFpbmluZyA+IDEpKQogCQlyZW1haW5pbmcgJj0gfjFVOwogCi0JbmV0
X2dldF9yYW5kb21fb25jZSh0YWJsZV9wZXJ0dXJiLCBzaXplb2YodGFibGVfcGVydHVyYikpOwor
CW5ldF9nZXRfcmFuZG9tX29uY2UodGFibGVfcGVydHVyYiwKKwkJCSAgICBJTkVUX1RBQkxFX1BF
UlRVUkJfU0laRSAqIHNpemVvZigqdGFibGVfcGVydHVyYikpOwogCWluZGV4ID0gaGFzaF8zMihw
b3J0X29mZnNldCwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUKTsKIAogCW9mZnNldCA9IFJFQURf
T05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyAocG9ydF9vZmZzZXQgPj4gMzIpOwpAQCAtNzQx
LDYgKzc0MywxNSBAQCB2b2lkIGluZXRfaGFzaGluZm9faW5pdChzdHJ1Y3QgaW5ldF9oYXNoaW5m
byAqaCkKIAkJSU5JVF9ITElTVF9OVUxMU19IRUFEKCZoLT5saXN0ZW5pbmdfaGFzaFtpXS5udWxs
c19oZWFkLAogCQkJCSAgICAgIGkgKyBMSVNURU5JTkdfTlVMTFNfQkFTRSk7CiAJfQorCisJaWYg
KGggIT0gJnRjcF9oYXNoaW5mbykKKwkJcmV0dXJuOworCisJLyogdGhpcyBvbmUgaXMgdXNlZCBm
b3Igc291cmNlIHBvcnRzIG9mIG91dGdvaW5nIGNvbm5lY3Rpb25zICovCisJdGFibGVfcGVydHVy
YiA9IGttYWxsb2NfYXJyYXkoSU5FVF9UQUJMRV9QRVJUVVJCX1NJWkUsCisJCQkJICAgICAgc2l6
ZW9mKCp0YWJsZV9wZXJ0dXJiKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCF0YWJsZV9wZXJ0dXJiKQor
CQlwYW5pYygiVENQOiBmYWlsZWQgdG8gYWxsb2MgdGFibGVfcGVydHVyYiIpOwogfQogRVhQT1JU
X1NZTUJPTF9HUEwoaW5ldF9oYXNoaW5mb19pbml0KTsKIAoKRnJvbSBkMWEyNDIxMzM4MTg0YWI5
MWJhMjdhY2Q3MGQ0ZTEzOTExZjk0OTAxIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBX
aWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1heSAyMDIyIDEwOjQ2OjEzICsw
MjAwClN1YmplY3Q6IFs2LzddIHRjcDogaW5jcmVhc2Ugc291cmNlIHBvcnQgcGVydHVyYiB0YWJs
ZSB0byAyXjE2Cgpjb21taXQgNGMyYzhmMDNhNWFiN2NiMDRlYzY0NzI0ZDdkMTc2ZDAwYmNjOTFl
NSB1cHN0cmVhbS4KCk1vc2hlIEtvbCwgQW1pdCBLbGVpbiwgYW5kIFlvc3NpIEdpbGFkIHJlcG9y
dGVkIGJlaW5nIGFibGUgdG8gYWNjdXJhdGVseQppZGVudGlmeSBhIGNsaWVudCBieSBmb3JjaW5n
IGl0IHRvIGVtaXQgb25seSA0MCB0aW1lcyBtb3JlIGNvbm5lY3Rpb25zCnRoYW4gdGhlcmUgYXJl
IGVudHJpZXMgaW4gdGhlIHRhYmxlX3BlcnR1cmJbXSB0YWJsZS4gVGhlIHByZXZpb3VzIHR3bwpp
bXByb3ZlbWVudHMgY29uc2lzdGluZyBpbiByZXNhbHRpbmcgdGhlIHNlY3JldCBldmVyeSAxMHMg
YW5kIGFkZGluZwpyYW5kb21uZXNzIHRvIGVhY2ggcG9ydCBzZWxlY3Rpb24gb25seSBzbGlnaHRs
eSBpbXByb3ZlZCB0aGUgc2l0dWF0aW9uLAphbmQgdGhlIGN1cnJlbnQgdmFsdWUgb2YgMl44IHdh
cyB0b28gc21hbGwgYXMgaXQncyBub3QgdmVyeSBkaWZmaWN1bHQKdG8gbWFrZSBhIGNsaWVudCBl
bWl0IDEwayBjb25uZWN0aW9ucyBpbiBsZXNzIHRoYW4gMTAgc2Vjb25kcy4KClRodXMgd2UncmUg
aW5jcmVhc2luZyB0aGUgcGVydHVyYiB0YWJsZSBmcm9tIDJeOCB0byAyXjE2IHNvIHRoYXQgdGhl
CnNhbWUgcHJlY2lzaW9uIG5vdyByZXF1aXJlcyAyLjZNIGNvbm5lY3Rpb25zLCB3aGljaCBpcyBt
b3JlIGRpZmZpY3VsdCBpbgp0aGlzIHRpbWUgZnJhbWUgYW5kIGhhcmRlciB0byBoaWRlIGFzIGEg
YmFja2dyb3VuZCBhY3Rpdml0eS4gVGhlIGltcGFjdAppcyB0aGF0IHRoZSB0YWJsZSBub3cgdXNl
cyAyNTYga0IgaW5zdGVhZCBvZiAxIGtCLCB3aGljaCBjb3VsZCBtb3N0bHkKYWZmZWN0IGRldmlj
ZXMgbWFraW5nIGZyZXF1ZW50IG91dGdvaW5nIGNvbm5lY3Rpb25zLiBIb3dldmVyIHN1Y2gKY29t
cG9uZW50cyB1c3VhbGx5IHRhcmdldCBhIHNtYWxsIHNldCBvZiBkZXN0aW5hdGlvbnMgKGxvYWQg
YmFsYW5jZXJzLApkYXRhYmFzZSBjbGllbnRzLCBwZXJmIGFzc2Vzc21lbnQgdG9vbHMpLCBhbmQg
aW4gcHJhY3RpY2Ugb25seSBhIGZldwplbnRyaWVzIHdpbGwgYmUgdmlzaXRlZCwgbGlrZSBiZWZv
cmUuCgpBIGxpdmUgdGVzdCBhdCAxIG1pbGxpb24gY29ubmVjdGlvbnMgcGVyIHNlY29uZCBzaG93
ZWQgbm8gcGVyZm9ybWFuY2UKZGlmZmVyZW5jZSBmcm9tIHRoZSBwcmV2aW91cyB2YWx1ZS4KClJl
cG9ydGVkLWJ5OiBNb3NoZSBLb2wgPG1vc2hlLmtvbEBtYWlsLmh1amkuYWMuaWw+ClJlcG9ydGVk
LWJ5OiBZb3NzaSBHaWxhZCA8eW9zc2kuZ2lsYWRAbWFpbC5odWppLmFjLmlsPgpSZXBvcnRlZC1i
eTogQW1pdCBLbGVpbiA8YWtzZWN1cml0eUBnbWFpbC5jb20+ClJldmlld2VkLWJ5OiBFcmljIER1
bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6IFdpbGx5IFRhcnJlYXUg
PHdAMXd0LmV1PgpTaWduZWQtb2ZmLWJ5OiBKYWt1YiBLaWNpbnNraSA8a3ViYUBrZXJuZWwub3Jn
PgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0K
IG5ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIHwgOSArKysrKy0tLS0KIDEgZmlsZSBjaGFuZ2Vk
LCA1IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQv
aW5ldF9oYXNodGFibGVzLmMgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCBmYTJl
NjVkNjkwZGUuLjI1NzY2YjliZGVmZiAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFi
bGVzLmMKKysrIGIvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKQEAgLTU5MSwxMSArNTkxLDEy
IEBAIEVYUE9SVF9TWU1CT0xfR1BMKGluZXRfdW5oYXNoKTsKICAqIE5vdGUgdGhhdCB3ZSB1c2Ug
MzJiaXQgaW50ZWdlcnMgKHZzIFJGQyAnc2hvcnQgaW50ZWdlcnMnKQogICogYmVjYXVzZSAyXjE2
IGlzIG5vdCBhIG11bHRpcGxlIG9mIG51bV9lcGhlbWVyYWwgYW5kIHRoaXMKICAqIHByb3BlcnR5
IG1pZ2h0IGJlIHVzZWQgYnkgY2xldmVyIGF0dGFja2VyLgotICogUkZDIGNsYWltcyB1c2luZyBU
QUJMRV9MRU5HVEg9MTAgYnVja2V0cyBnaXZlcyBhbiBpbXByb3ZlbWVudCwKLSAqIHdlIHVzZSAy
NTYgaW5zdGVhZCB0byByZWFsbHkgZ2l2ZSBtb3JlIGlzb2xhdGlvbiBhbmQKLSAqIHByaXZhY3ks
IHRoaXMgb25seSBjb25zdW1lcyAxIEtCIG9mIGtlcm5lbCBtZW1vcnkuCisgKiBSRkMgY2xhaW1z
IHVzaW5nIFRBQkxFX0xFTkdUSD0xMCBidWNrZXRzIGdpdmVzIGFuIGltcHJvdmVtZW50LCB0aG91
Z2gKKyAqIGF0dGFja3Mgd2VyZSBzaW5jZSBkZW1vbnN0cmF0ZWQsIHRodXMgd2UgdXNlIDY1NTM2
IGluc3RlYWQgdG8gcmVhbGx5CisgKiBnaXZlIG1vcmUgaXNvbGF0aW9uIGFuZCBwcml2YWN5LCBh
dCB0aGUgZXhwZW5zZSBvZiAyNTZrQiBvZiBrZXJuZWwKKyAqIG1lbW9yeS4KICAqLwotI2RlZmlu
ZSBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQgOAorI2RlZmluZSBJTkVUX1RBQkxFX1BFUlRVUkJf
U0hJRlQgMTYKICNkZWZpbmUgSU5FVF9UQUJMRV9QRVJUVVJCX1NJWkUgKDEgPDwgSU5FVF9UQUJM
RV9QRVJUVVJCX1NISUZUKQogc3RhdGljIHUzMiAqdGFibGVfcGVydHVyYjsKIAoKRnJvbSA5ZTM0
ZGQzMWI5MTQ0NWNkZTljMjU1ODU2MDMyZWQ4Mzk1NmMwOTJkIE1vbiBTZXAgMTcgMDA6MDA6MDAg
MjAwMQpGcm9tOiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1heSAyMDIy
IDEwOjQ2OjE0ICswMjAwClN1YmplY3Q6IFs3LzddIHRjcDogZHJvcCB0aGUgaGFzaF8zMigpIHBh
cnQgZnJvbSB0aGUgaW5kZXggY2FsY3VsYXRpb24KCmNvbW1pdCBlODE2MTM0NWRkYmI2NmU0NDlh
YmRlMTBkMmZkY2U5M2Y4NjdlYmE5IHVwc3RyZWFtLgoKSW4gY29tbWl0IDE5MGNjODI0ODlmNCAo
InRjcDogY2hhbmdlIHNvdXJjZSBwb3J0IHJhbmRvbWl6YXJpb24gYXQKY29ubmVjdCgpIHRpbWUi
KSwgdGhlIHRhYmxlX3BlcnR1cmJbXSBhcnJheSB3YXMgaW50cm9kdWNlZCBhbmQgYW4KaW5kZXgg
d2FzIHRha2VuIGZyb20gdGhlIHBvcnRfb2Zmc2V0IHZpYSBoYXNoXzMyKCkuIEJ1dCBpdCB0dXJu
cwpvdXQgdGhhdCBoYXNoXzMyKCkgcGVyZm9ybXMgYSBtdWx0aXBsaWNhdGlvbiB3aGlsZSB0aGUg
aW5wdXQgaGVyZQpjb21lcyBmcm9tIHRoZSBvdXRwdXQgb2YgU2lwSGFzaCBpbiBzZWN1cmVfc2Vx
LCB0aGF0IGlzIHdlbGwKZGlzdHJpYnV0ZWQgZW5vdWdoIHRvIGF2b2lkIHRoZSBuZWVkIGZvciB5
ZXQgYW5vdGhlciBoYXNoLgoKU3VnZ2VzdGVkLWJ5OiBBbWl0IEtsZWluIDxha3NlY3VyaXR5QGdt
YWlsLmNvbT4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4K
U2lnbmVkLW9mZi1ieTogV2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+ClNpZ25lZC1vZmYtYnk6IEph
a3ViIEtpY2luc2tpIDxrdWJhQGtlcm5lbC5vcmc+ClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGlu
Z3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMg
fCAyICstCiAxIGZpbGUgY2hhbmdlZCwgMSBpbnNlcnRpb24oKyksIDEgZGVsZXRpb24oLSkKCmRp
ZmYgLS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyBiL25ldC9pcHY0L2luZXRfaGFz
aHRhYmxlcy5jCmluZGV4IDI1NzY2YjliZGVmZi4uMTkzNjlmYzliY2RhIDEwMDY0NAotLS0gYS9u
ZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMu
YwpAQCAtNjQwLDcgKzY0MCw3IEBAIGludCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVjdCBpbmV0
X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVhdGhfcm93LAogCiAJbmV0X2dldF9yYW5kb21fb25jZSh0
YWJsZV9wZXJ0dXJiLAogCQkJICAgIElORVRfVEFCTEVfUEVSVFVSQl9TSVpFICogc2l6ZW9mKCp0
YWJsZV9wZXJ0dXJiKSk7Ci0JaW5kZXggPSBoYXNoXzMyKHBvcnRfb2Zmc2V0LCBJTkVUX1RBQkxF
X1BFUlRVUkJfU0hJRlQpOworCWluZGV4ID0gcG9ydF9vZmZzZXQgJiAoSU5FVF9UQUJMRV9QRVJU
VVJCX1NJWkUgLSAxKTsKIAogCW9mZnNldCA9IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4
XSkgKyAocG9ydF9vZmZzZXQgPj4gMzIpOwogCW9mZnNldCAlPSByZW1haW5pbmc7Cg==


--=-JR0iJUrFyN8CmOHUlMR4
Content-Type: application/mbox; name="security-4.9.mbox"
Content-Disposition: attachment; filename="security-4.9.mbox"
Content-Transfer-Encoding: base64

RnJvbSA1NmZkMTI2Mjg2N2NjMmFiYTRhNzkwMmY2M2E3ZmM5M2JkNzNjYWU5IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBDb2xpbiBJYW4gS2luZyA8Y29saW4ua2luZ0BjYW5vbmljYWwu
Y29tPgpEYXRlOiBXZWQsIDE1IEp1bCAyMDIwIDE3OjI2OjA0ICswMTAwClN1YmplY3Q6IFswMS8x
Ml0geHBydHJkbWE6IGZpeCBpbmNvcnJlY3QgaGVhZGVyIHNpemUgY2FsY3VsYXRpb25zCgpjb21t
aXQgOTEyMjg4NDQyY2IyZjQzMWJmM2M4Y2IwOTdhNWRlODNiYzZkYmFjMSB1cHN0cmVhbS4KCkN1
cnJlbnRseSB0aGUgaGVhZGVyIHNpemUgY2FsY3VsYXRpb25zIGFyZSB1c2luZyBhbiBhc3NpZ25t
ZW50Cm9wZXJhdG9yIGluc3RlYWQgb2YgYSArPSBvcGVyYXRvciB3aGVuIGFjY3VtdWxhdGluZyB0
aGUgaGVhZGVyCnNpemUgbGVhZGluZyB0byBpbmNvcnJlY3Qgc2l6ZXMuICBGaXggdGhpcyBieSB1
c2luZyB0aGUgY29ycmVjdApvcGVyYXRvci4KCkFkZHJlc3Nlcy1Db3Zlcml0eTogKCJVbnVzZWQg
dmFsdWUiKQpGaXhlczogMzAyZDNkZWIyMDY4ICgieHBydHJkbWE6IFByZXZlbnQgaW5saW5lIG92
ZXJmbG93IikKU2lnbmVkLW9mZi1ieTogQ29saW4gSWFuIEtpbmcgPGNvbGluLmtpbmdAY2Fub25p
Y2FsLmNvbT4KUmV2aWV3ZWQtYnk6IENodWNrIExldmVyIDxjaHVjay5sZXZlckBvcmFjbGUuY29t
PgpTaWduZWQtb2ZmLWJ5OiBBbm5hIFNjaHVtYWtlciA8QW5uYS5TY2h1bWFrZXJATmV0YXBwLmNv
bT4KW2J3aDogQmFja3BvcnRlZCB0byA0Ljk6IGFkanVzdCBjb250ZXh0XQpTaWduZWQtb2ZmLWJ5
OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9zdW5ycGMveHBy
dHJkbWEvcnBjX3JkbWEuYyB8IDQgKystLQogMSBmaWxlIGNoYW5nZWQsIDIgaW5zZXJ0aW9ucygr
KSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvc3VucnBjL3hwcnRyZG1hL3JwY19y
ZG1hLmMgYi9uZXQvc3VucnBjL3hwcnRyZG1hL3JwY19yZG1hLmMKaW5kZXggMDI4NzczNGYxMjZm
Li5hZWMwMTEzYTg4YjAgMTAwNjQ0Ci0tLSBhL25ldC9zdW5ycGMveHBydHJkbWEvcnBjX3JkbWEu
YworKysgYi9uZXQvc3VucnBjL3hwcnRyZG1hL3JwY19yZG1hLmMKQEAgLTc1LDcgKzc1LDcgQEAg
c3RhdGljIHVuc2lnbmVkIGludCBycGNyZG1hX21heF9jYWxsX2hlYWRlcl9zaXplKHVuc2lnbmVk
IGludCBtYXhzZWdzKQogCiAJLyogTWF4aW11bSBSZWFkIGxpc3Qgc2l6ZSAqLwogCW1heHNlZ3Mg
Kz0gMjsJLyogc2VnbWVudCBmb3IgaGVhZCBhbmQgdGFpbCBidWZmZXJzICovCi0Jc2l6ZSA9IG1h
eHNlZ3MgKiBzaXplb2Yoc3RydWN0IHJwY3JkbWFfcmVhZF9jaHVuayk7CisJc2l6ZSArPSBtYXhz
ZWdzICogc2l6ZW9mKHN0cnVjdCBycGNyZG1hX3JlYWRfY2h1bmspOwogCiAJLyogTWluaW1hbCBS
ZWFkIGNodW5rIHNpemUgKi8KIAlzaXplICs9IHNpemVvZihfX2JlMzIpOwkvKiBzZWdtZW50IGNv
dW50ICovCkBAIC0xMDEsNyArMTAxLDcgQEAgc3RhdGljIHVuc2lnbmVkIGludCBycGNyZG1hX21h
eF9yZXBseV9oZWFkZXJfc2l6ZSh1bnNpZ25lZCBpbnQgbWF4c2VncykKIAogCS8qIE1heGltdW0g
V3JpdGUgbGlzdCBzaXplICovCiAJbWF4c2VncyArPSAyOwkvKiBzZWdtZW50IGZvciBoZWFkIGFu
ZCB0YWlsIGJ1ZmZlcnMgKi8KLQlzaXplID0gc2l6ZW9mKF9fYmUzMik7CQkvKiBzZWdtZW50IGNv
dW50ICovCisJc2l6ZSArPSBzaXplb2YoX19iZTMyKTsJCS8qIHNlZ21lbnQgY291bnQgKi8KIAlz
aXplICs9IG1heHNlZ3MgKiBzaXplb2Yoc3RydWN0IHJwY3JkbWFfc2VnbWVudCk7CiAJc2l6ZSAr
PSBzaXplb2YoX19iZTMyKTsJLyogbGlzdCBkaXNjcmltaW5hdG9yICovCiAKCkZyb20gOTYwNmI0
M2ViZDRjYzdjYTE2MGI2MTIxMmZkNWVjZTZkNjAzOWFhOCBNb24gU2VwIDE3IDAwOjAwOjAwIDIw
MDEKRnJvbTogSGFsaWwgUGFzaWMgPHBhc2ljQGxpbnV4LmlibS5jb20+CkRhdGU6IEZyaSwgMTEg
RmViIDIwMjIgMDI6MTI6NTIgKzAxMDAKU3ViamVjdDogWzAyLzEyXSBzd2lvdGxiOiBmaXggaW5m
byBsZWFrIHdpdGggRE1BX0ZST01fREVWSUNFCgpjb21taXQgZGRiZDg5ZGViN2QzMmIxZmJiODc5
ZjQ4ZDY4ZmRhMWE4YWM1OGU4ZSB1cHN0cmVhbS4KClRoZSBwcm9ibGVtIEknbSBhZGRyZXNzaW5n
IHdhcyBkaXNjb3ZlcmVkIGJ5IHRoZSBMVFAgdGVzdCBjb3ZlcmluZwpjdmUtMjAxOC0xMDAwMjA0
LgoKQSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB3aGF0IGhhcHBlbnMgZm9sbG93czoKMSkgVGhlIHRl
c3QgY2FzZSBpc3N1ZXMgYSBjb21tYW5kIGNvZGUgMDAgKFRFU1QgVU5JVCBSRUFEWSkgdmlhIHRo
ZSBTR19JTwogICBpbnRlcmZhY2Ugd2l0aDogZHhmZXJfbGVuID09IDUyNDI4OCwgZHhkZmVyX2Rp
ciA9PSBTR19EWEZFUl9GUk9NX0RFVgogICBhbmQgYSBjb3JyZXNwb25kaW5nIGR4ZmVycC4gVGhl
IHBlY3VsaWFyIHRoaW5nIGFib3V0IHRoaXMgaXMgdGhhdCBUVVIKICAgaXMgbm90IHJlYWRpbmcg
ZnJvbSB0aGUgZGV2aWNlLgoyKSBJbiBzZ19zdGFydF9yZXEoKSB0aGUgaW52b2NhdGlvbiBvZiBi
bGtfcnFfbWFwX3VzZXIoKSBlZmZlY3RpdmVseQogICBib3VuY2VzIHRoZSB1c2VyLXNwYWNlIGJ1
ZmZlci4gQXMgaWYgdGhlIGRldmljZSB3YXMgdG8gdHJhbnNmZXIgaW50bwogICBpdC4gU2luY2Ug
Y29tbWl0IGE0NWI1OTlhZDgwOCAoInNjc2k6IHNnOiBhbGxvY2F0ZSB3aXRoIF9fR0ZQX1pFUk8g
aW4KICAgc2dfYnVpbGRfaW5kaXJlY3QoKSIpIHdlIG1ha2Ugc3VyZSB0aGlzIGZpcnN0IGJvdW5j
ZSBidWZmZXIgaXMKICAgYWxsb2NhdGVkIHdpdGggR0ZQX1pFUk8uCjMpIEZvciB0aGUgcmVzdCBv
ZiB0aGUgc3Rvcnkgd2Uga2VlcCBpZ25vcmluZyB0aGF0IHdlIGhhdmUgYSBUVVIsIHNvIHRoZQog
ICBkZXZpY2Ugd29uJ3QgdG91Y2ggdGhlIGJ1ZmZlciB3ZSBwcmVwYXJlIGFzIGlmIHRoZSB3ZSBo
YWQgYQogICBETUFfRlJPTV9ERVZJQ0UgdHlwZSBvZiBzaXR1YXRpb24uIE15IHNldHVwIHVzZXMg
YSB2aXJ0aW8tc2NzaSBkZXZpY2UKICAgYW5kIHRoZSAgYnVmZmVyIGFsbG9jYXRlZCBieSBTRyBp
cyBtYXBwZWQgYnkgdGhlIGZ1bmN0aW9uCiAgIHZpcnRxdWV1ZV9hZGRfc3BsaXQoKSB3aGljaCB1
c2VzIERNQV9GUk9NX0RFVklDRSBmb3IgdGhlICJpbiIgc2dzIChoZXJlCiAgIHNjYXR0ZXItZ2F0
aGVyIGFuZCBub3Qgc2NzaSBnZW5lcmljcykuIFRoaXMgbWFwcGluZyBpbnZvbHZlcyBib3VuY2lu
ZwogICB2aWEgdGhlIHN3aW90bGIgKHdlIG5lZWQgc3dpb3RsYiB0byBkbyB2aXJ0aW8gaW4gcHJv
dGVjdGVkIGd1ZXN0IGxpa2UKICAgczM5MCBTZWN1cmUgRXhlY3V0aW9uLCBvciBBTUQgU0VWKS4K
NCkgV2hlbiB0aGUgU0NTSSBUVVIgaXMgZG9uZSwgd2UgZmlyc3QgY29weSBiYWNrIHRoZSBjb250
ZW50IG9mIHRoZSBzZWNvbmQKICAgKHRoYXQgaXMgc3dpb3RsYikgYm91bmNlIGJ1ZmZlciAod2hp
Y2ggbW9zdCBsaWtlbHkgY29udGFpbnMgc29tZQogICBwcmV2aW91cyBJTyBkYXRhKSwgdG8gdGhl
IGZpcnN0IGJvdW5jZSBidWZmZXIsIHdoaWNoIGNvbnRhaW5zIGFsbAogICB6ZXJvcy4gIFRoZW4g
d2UgY29weSBiYWNrIHRoZSBjb250ZW50IG9mIHRoZSBmaXJzdCBib3VuY2UgYnVmZmVyIHRvCiAg
IHRoZSB1c2VyLXNwYWNlIGJ1ZmZlci4KNSkgVGhlIHRlc3QgY2FzZSBkZXRlY3RzIHRoYXQgdGhl
IGJ1ZmZlciwgd2hpY2ggaXQgemVyby1pbml0aWFsaXplZCwKICBhaW4ndCBhbGwgemVyb3MgYW5k
IGZhaWxzLgoKT25lIGNhbiBhcmd1ZSB0aGF0IHRoaXMgaXMgYW4gc3dpb3RsYiBwcm9ibGVtLCBi
ZWNhdXNlIHdpdGhvdXQgc3dpb3RsYgp3ZSBsZWFrIGFsbCB6ZXJvcywgYW5kIHRoZSBzd2lvdGxi
IHNob3VsZCBiZSB0cmFuc3BhcmVudCBpbiBhIHNlbnNlIHRoYXQKaXQgZG9lcyBub3QgYWZmZWN0
IHRoZSBvdXRjb21lIChpZiBhbGwgb3RoZXIgcGFydGljaXBhbnRzIGFyZSB3ZWxsCmJlaGF2ZWQp
LgoKQ29weWluZyB0aGUgY29udGVudCBvZiB0aGUgb3JpZ2luYWwgYnVmZmVyIGludG8gdGhlIHN3
aW90bGIgYnVmZmVyIGlzCnRoZSBvbmx5IHdheSBJIGNhbiB0aGluayBvZiB0byBtYWtlIHN3aW90
bGIgdHJhbnNwYXJlbnQgaW4gc3VjaApzY2VuYXJpb3MuIFNvIGxldCdzIGRvIGp1c3QgdGhhdCBp
ZiBpbiBkb3VidCwgYnV0IGFsbG93IHRoZSBkcml2ZXIKdG8gdGVsbCB1cyB0aGF0IHRoZSB3aG9s
ZSBtYXBwZWQgYnVmZmVyIGlzIGdvaW5nIHRvIGJlIG92ZXJ3cml0dGVuLAppbiB3aGljaCBjYXNl
IHdlIGNhbiBwcmVzZXJ2ZSB0aGUgb2xkIGJlaGF2aW9yIGFuZCBhdm9pZCB0aGUgcGVyZm9ybWFu
Y2UKaW1wYWN0IG9mIHRoZSBleHRyYSBib3VuY2UuCgpTaWduZWQtb2ZmLWJ5OiBIYWxpbCBQYXNp
YyA8cGFzaWNAbGludXguaWJtLmNvbT4KU2lnbmVkLW9mZi1ieTogQ2hyaXN0b3BoIEhlbGx3aWcg
PGhjaEBsc3QuZGU+CltPUDogYmFja3BvcnQgdG8gNC4xNDogYXBwbHkgc3dpb3RsYl90YmxfbWFw
X3NpbmdsZSgpIGNoYW5nZXMgaW4gbGliL3N3aW90bGIuY10KU2lnbmVkLW9mZi1ieTogT3ZpZGl1
IFBhbmFpdCA8b3ZpZGl1LnBhbmFpdEB3aW5kcml2ZXIuY29tPgpTaWduZWQtb2ZmLWJ5OiBHcmVn
IEtyb2FoLUhhcnRtYW4gPGdyZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgpbYndoOiBCYWNrcG9y
dGVkIHRvIDQuOTogYWRqdXN0IGNvbnRleHRdClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3Mg
PGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogRG9jdW1lbnRhdGlvbi9ETUEtYXR0cmlidXRlcy50
eHQgfCAxMCArKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L2RtYS1tYXBwaW5nLmggICAgICB8ICA3
ICsrKysrKysKIGxpYi9zd2lvdGxiLmMgICAgICAgICAgICAgICAgICAgIHwgIDMgKystCiAzIGZp
bGVzIGNoYW5nZWQsIDE5IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKCmRpZmYgLS1naXQg
YS9Eb2N1bWVudGF0aW9uL0RNQS1hdHRyaWJ1dGVzLnR4dCBiL0RvY3VtZW50YXRpb24vRE1BLWF0
dHJpYnV0ZXMudHh0CmluZGV4IDk4YmY3YWMyOWFhZC4uYzJmNzU2N2UwMDk0IDEwMDY0NAotLS0g
YS9Eb2N1bWVudGF0aW9uL0RNQS1hdHRyaWJ1dGVzLnR4dAorKysgYi9Eb2N1bWVudGF0aW9uL0RN
QS1hdHRyaWJ1dGVzLnR4dApAQCAtMTQzLDMgKzE0MywxMyBAQCBTbywgdGhpcyBwcm92aWRlcyBh
IHdheSBmb3IgZHJpdmVycyB0byBhdm9pZCB0aG9zZSBlcnJvciBtZXNzYWdlcyBvbiBjYWxscwog
d2hlcmUgYWxsb2NhdGlvbiBmYWlsdXJlcyBhcmUgbm90IGEgcHJvYmxlbSwgYW5kIHNob3VsZG4n
dCBib3RoZXIgdGhlIGxvZ3MuCiAKIE5PVEU6IEF0IHRoZSBtb21lbnQgRE1BX0FUVFJfTk9fV0FS
TiBpcyBvbmx5IGltcGxlbWVudGVkIG9uIFBvd2VyUEMuCisKK0RNQV9BVFRSX1BSSVZJTEVHRUQK
Ky0tLS0tLS0tLS0tLS0tLS0tLS0KKworU29tZSBhZHZhbmNlZCBwZXJpcGhlcmFscyBzdWNoIGFz
IHJlbW90ZSBwcm9jZXNzb3JzIGFuZCBHUFVzIHBlcmZvcm0KK2FjY2Vzc2VzIHRvIERNQSBidWZm
ZXJzIGluIGJvdGggcHJpdmlsZWdlZCAic3VwZXJ2aXNvciIgYW5kIHVucHJpdmlsZWdlZAorInVz
ZXIiIG1vZGVzLiAgVGhpcyBhdHRyaWJ1dGUgaXMgdXNlZCB0byBpbmRpY2F0ZSB0byB0aGUgRE1B
LW1hcHBpbmcKK3N1YnN5c3RlbSB0aGF0IHRoZSBidWZmZXIgaXMgZnVsbHkgYWNjZXNzaWJsZSBh
dCB0aGUgZWxldmF0ZWQgcHJpdmlsZWdlCitsZXZlbCAoYW5kIGlkZWFsbHkgaW5hY2Nlc3NpYmxl
IG9yIGF0IGxlYXN0IHJlYWQtb25seSBhdCB0aGUKK2xlc3Nlci1wcml2aWxlZ2VkIGxldmVscyku
CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1tYXBwaW5nLmggYi9pbmNsdWRlL2xpbnV4
L2RtYS1tYXBwaW5nLmgKaW5kZXggOTdmODE3ZjRlYjc4Li5lMDY5ZTJmZDBjOWYgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvbGludXgvZG1hLW1hcHBpbmcuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1t
YXBwaW5nLmgKQEAgLTYxLDYgKzYxLDEzIEBACiAgKiBhbGxvY2F0aW9uIGZhaWx1cmUgcmVwb3J0
cyAoc2ltaWxhcmx5IHRvIF9fR0ZQX05PV0FSTikuCiAgKi8KICNkZWZpbmUgRE1BX0FUVFJfTk9f
V0FSTgkoMVVMIDw8IDgpCisvKgorICogVGhpcyBpcyBhIGhpbnQgdG8gdGhlIERNQS1tYXBwaW5n
IHN1YnN5c3RlbSB0aGF0IHRoZSBkZXZpY2UgaXMgZXhwZWN0ZWQKKyAqIHRvIG92ZXJ3cml0ZSB0
aGUgZW50aXJlIG1hcHBlZCBzaXplLCB0aHVzIHRoZSBjYWxsZXIgZG9lcyBub3QgcmVxdWlyZSBh
bnkKKyAqIG9mIHRoZSBwcmV2aW91cyBidWZmZXIgY29udGVudHMgdG8gYmUgcHJlc2VydmVkLiBU
aGlzIGFsbG93cworICogYm91bmNlLWJ1ZmZlcmluZyBpbXBsZW1lbnRhdGlvbnMgdG8gb3B0aW1p
c2UgRE1BX0ZST01fREVWSUNFIHRyYW5zZmVycy4KKyAqLworI2RlZmluZSBETUFfQVRUUl9PVkVS
V1JJVEUJCSgxVUwgPDwgMTApCiAKIC8qCiAgKiBBIGRtYV9hZGRyX3QgY2FuIGhvbGQgYW55IHZh
bGlkIERNQSBvciBidXMgYWRkcmVzcyBmb3IgdGhlIHBsYXRmb3JtLgpkaWZmIC0tZ2l0IGEvbGli
L3N3aW90bGIuYyBiL2xpYi9zd2lvdGxiLmMKaW5kZXggNzRiNWI4ODYyMTk4Li4zMGM2NzE1ZjQx
MTAgMTAwNjQ0Ci0tLSBhL2xpYi9zd2lvdGxiLmMKKysrIGIvbGliL3N3aW90bGIuYwpAQCAtNTMy
LDcgKzUzMiw4IEBAIHBoeXNfYWRkcl90IHN3aW90bGJfdGJsX21hcF9zaW5nbGUoc3RydWN0IGRl
dmljZSAqaHdkZXYsCiAJICovCiAJZm9yIChpID0gMDsgaSA8IG5zbG90czsgaSsrKQogCQlpb190
bGJfb3JpZ19hZGRyW2luZGV4K2ldID0gb3JpZ19hZGRyICsgKGkgPDwgSU9fVExCX1NISUZUKTsK
LQlpZiAoZGlyID09IERNQV9UT19ERVZJQ0UgfHwgZGlyID09IERNQV9CSURJUkVDVElPTkFMKQor
CWlmICghKGF0dHJzICYgRE1BX0FUVFJfT1ZFUldSSVRFKSB8fCBkaXIgPT0gRE1BX1RPX0RFVklD
RSB8fAorCSAgICBkaXIgPT0gRE1BX0JJRElSRUNUSU9OQUwpCiAJCXN3aW90bGJfYm91bmNlKG9y
aWdfYWRkciwgdGxiX2FkZHIsIHNpemUsIERNQV9UT19ERVZJQ0UpOwogCiAJcmV0dXJuIHRsYl9h
ZGRyOwoKRnJvbSBlY2YxMTNjYzkwODQ4N2RhMGE3Y2M4MjA2ZDU1OThhNzVhMGU5YzFmIE1vbiBT
ZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBMaW51cyBUb3J2YWxkcyA8dG9ydmFsZHNAbGludXgt
Zm91bmRhdGlvbi5vcmc+CkRhdGU6IE1vbiwgMjggTWFyIDIwMjIgMTE6Mzc6MDUgLTA3MDAKU3Vi
amVjdDogWzAzLzEyXSBSZWluc3RhdGUgc29tZSBvZiAic3dpb3RsYjogcmV3b3JrICJmaXggaW5m
byBsZWFrIHdpdGgKIERNQV9GUk9NX0RFVklDRSIiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQt
VHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD1VVEYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5n
OiA4Yml0Cgpjb21taXQgOTAxYzcyODBjYTBkNWUyYjRhODkyOWZiZTBiZmIwMDdhYzJhNjU0NCB1
cHN0cmVhbS4KCkhhbGlsIFBhc2ljIHBvaW50cyBvdXQgWzFdIHRoYXQgdGhlIGZ1bGwgcmV2ZXJ0
IG9mIHRoYXQgY29tbWl0IChyZXZlcnQKaW4gYmRkYWM3YzFlMDJiKSwgYW5kIHRoYXQgYSBwYXJ0
aWFsIHJldmVydCB0aGF0IG9ubHkgcmV2ZXJ0cyB0aGUKcHJvYmxlbWF0aWMgY2FzZSwgYnV0IHN0
aWxsIGtlZXBzIHNvbWUgb2YgdGhlIGNsZWFudXBzIGlzIHByb2JhYmx5CmJldHRlci4gIO+/vAoK
QW5kIHRoYXQgcGFydGlhbCByZXZlcnQgWzJdIGhhZCBhbHJlYWR5IGJlZW4gdmVyaWZpZWQgYnkg
T2xla3NhbmRyCk5hdGFsZW5rbyB0byBhbHNvIGZpeCB0aGUgaXNzdWUsIEkgaGFkIGp1c3QgbWlz
c2VkIHRoYXQgaW4gdGhlIGxvbmcKZGlzY3Vzc2lvbi4KClNvIGxldCdzIHJlaW5zdGF0ZSB0aGUg
Y2xlYW51cHMgZnJvbSBjb21taXQgYWE2ZjhkY2JhYjQ3ICgic3dpb3RsYjoKcmV3b3JrICJmaXgg
aW5mbyBsZWFrIHdpdGggRE1BX0ZST01fREVWSUNFIiIpLCBhbmQgZWZmZWN0aXZlbHkgb25seQpy
ZXZlcnQgdGhlIHBhcnQgdGhhdCBjYXVzZWQgcHJvYmxlbXMuCgpMaW5rOiBodHRwczovL2xvcmUu
a2VybmVsLm9yZy9hbGwvMjAyMjAzMjgwMTM3MzEuMDE3YWUzZTMucGFzaWNAbGludXguaWJtLmNv
bS8gWzFdCkxpbms6IGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL2FsbC8yMDIyMDMyNDA1NTczMi5H
QjEyMDc4QGxzdC5kZS8gWzJdCkxpbms6IGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL2FsbC80Mzg2
NjYwLkx2RngycVZWSWhAbmF0YWxlbmtvLm5hbWUvIFszXQpTdWdnZXN0ZWQtYnk6IEhhbGlsIFBh
c2ljIDxwYXNpY0BsaW51eC5pYm0uY29tPgpUZXN0ZWQtYnk6IE9sZWtzYW5kciBOYXRhbGVua28g
PG9sZWtzYW5kckBuYXRhbGVua28ubmFtZT4KQ2M6IENocmlzdG9waCBIZWxsd2lnIiA8aGNoQGxz
dC5kZT4KU2lnbmVkLW9mZi1ieTogTGludXMgVG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4LWZvdW5k
YXRpb24ub3JnPgpbT1A6IGJhY2twb3J0IHRvIDQuMTQ6IGFwcGx5IHN3aW90bGJfdGJsX21hcF9z
aW5nbGUoKSBjaGFuZ2VzIGluIGxpYi9zd2lvdGxiLmNdClNpZ25lZC1vZmYtYnk6IE92aWRpdSBQ
YW5haXQgPG92aWRpdS5wYW5haXRAd2luZHJpdmVyLmNvbT4KU2lnbmVkLW9mZi1ieTogR3JlZyBL
cm9haC1IYXJ0bWFuIDxncmVna2hAbGludXhmb3VuZGF0aW9uLm9yZz4KW2J3aDogQmFja3BvcnRl
ZCB0byA0Ljk6IGFkanVzdCBjb250ZXh0XQpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxi
ZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIERvY3VtZW50YXRpb24vRE1BLWF0dHJpYnV0ZXMudHh0
IHwgMTAgLS0tLS0tLS0tLQogaW5jbHVkZS9saW51eC9kbWEtbWFwcGluZy5oICAgICAgfCAgNyAt
LS0tLS0tCiBsaWIvc3dpb3RsYi5jICAgICAgICAgICAgICAgICAgICB8IDEyICsrKysrKysrLS0t
LQogMyBmaWxlcyBjaGFuZ2VkLCA4IGluc2VydGlvbnMoKyksIDIxIGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vRE1BLWF0dHJpYnV0ZXMudHh0IGIvRG9jdW1lbnRhdGlv
bi9ETUEtYXR0cmlidXRlcy50eHQKaW5kZXggYzJmNzU2N2UwMDk0Li45OGJmN2FjMjlhYWQgMTAw
NjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vRE1BLWF0dHJpYnV0ZXMudHh0CisrKyBiL0RvY3VtZW50
YXRpb24vRE1BLWF0dHJpYnV0ZXMudHh0CkBAIC0xNDMsMTMgKzE0MywzIEBAIFNvLCB0aGlzIHBy
b3ZpZGVzIGEgd2F5IGZvciBkcml2ZXJzIHRvIGF2b2lkIHRob3NlIGVycm9yIG1lc3NhZ2VzIG9u
IGNhbGxzCiB3aGVyZSBhbGxvY2F0aW9uIGZhaWx1cmVzIGFyZSBub3QgYSBwcm9ibGVtLCBhbmQg
c2hvdWxkbid0IGJvdGhlciB0aGUgbG9ncy4KIAogTk9URTogQXQgdGhlIG1vbWVudCBETUFfQVRU
Ul9OT19XQVJOIGlzIG9ubHkgaW1wbGVtZW50ZWQgb24gUG93ZXJQQy4KLQotRE1BX0FUVFJfUFJJ
VklMRUdFRAotLS0tLS0tLS0tLS0tLS0tLS0tLQotCi1Tb21lIGFkdmFuY2VkIHBlcmlwaGVyYWxz
IHN1Y2ggYXMgcmVtb3RlIHByb2Nlc3NvcnMgYW5kIEdQVXMgcGVyZm9ybQotYWNjZXNzZXMgdG8g
RE1BIGJ1ZmZlcnMgaW4gYm90aCBwcml2aWxlZ2VkICJzdXBlcnZpc29yIiBhbmQgdW5wcml2aWxl
Z2VkCi0idXNlciIgbW9kZXMuICBUaGlzIGF0dHJpYnV0ZSBpcyB1c2VkIHRvIGluZGljYXRlIHRv
IHRoZSBETUEtbWFwcGluZwotc3Vic3lzdGVtIHRoYXQgdGhlIGJ1ZmZlciBpcyBmdWxseSBhY2Nl
c3NpYmxlIGF0IHRoZSBlbGV2YXRlZCBwcml2aWxlZ2UKLWxldmVsIChhbmQgaWRlYWxseSBpbmFj
Y2Vzc2libGUgb3IgYXQgbGVhc3QgcmVhZC1vbmx5IGF0IHRoZQotbGVzc2VyLXByaXZpbGVnZWQg
bGV2ZWxzKS4KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvZG1hLW1hcHBpbmcuaCBiL2luY2x1
ZGUvbGludXgvZG1hLW1hcHBpbmcuaAppbmRleCBlMDY5ZTJmZDBjOWYuLjk3ZjgxN2Y0ZWI3OCAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9kbWEtbWFwcGluZy5oCisrKyBiL2luY2x1ZGUvbGlu
dXgvZG1hLW1hcHBpbmcuaApAQCAtNjEsMTMgKzYxLDYgQEAKICAqIGFsbG9jYXRpb24gZmFpbHVy
ZSByZXBvcnRzIChzaW1pbGFybHkgdG8gX19HRlBfTk9XQVJOKS4KICAqLwogI2RlZmluZSBETUFf
QVRUUl9OT19XQVJOCSgxVUwgPDwgOCkKLS8qCi0gKiBUaGlzIGlzIGEgaGludCB0byB0aGUgRE1B
LW1hcHBpbmcgc3Vic3lzdGVtIHRoYXQgdGhlIGRldmljZSBpcyBleHBlY3RlZAotICogdG8gb3Zl
cndyaXRlIHRoZSBlbnRpcmUgbWFwcGVkIHNpemUsIHRodXMgdGhlIGNhbGxlciBkb2VzIG5vdCBy
ZXF1aXJlIGFueQotICogb2YgdGhlIHByZXZpb3VzIGJ1ZmZlciBjb250ZW50cyB0byBiZSBwcmVz
ZXJ2ZWQuIFRoaXMgYWxsb3dzCi0gKiBib3VuY2UtYnVmZmVyaW5nIGltcGxlbWVudGF0aW9ucyB0
byBvcHRpbWlzZSBETUFfRlJPTV9ERVZJQ0UgdHJhbnNmZXJzLgotICovCi0jZGVmaW5lIERNQV9B
VFRSX09WRVJXUklURQkJKDFVTCA8PCAxMCkKIAogLyoKICAqIEEgZG1hX2FkZHJfdCBjYW4gaG9s
ZCBhbnkgdmFsaWQgRE1BIG9yIGJ1cyBhZGRyZXNzIGZvciB0aGUgcGxhdGZvcm0uCmRpZmYgLS1n
aXQgYS9saWIvc3dpb3RsYi5jIGIvbGliL3N3aW90bGIuYwppbmRleCAzMGM2NzE1ZjQxMTAuLjI3
N2EyZjZmZGU2YiAxMDA2NDQKLS0tIGEvbGliL3N3aW90bGIuYworKysgYi9saWIvc3dpb3RsYi5j
CkBAIC01MzIsMTAgKzUzMiwxNCBAQCBwaHlzX2FkZHJfdCBzd2lvdGxiX3RibF9tYXBfc2luZ2xl
KHN0cnVjdCBkZXZpY2UgKmh3ZGV2LAogCSAqLwogCWZvciAoaSA9IDA7IGkgPCBuc2xvdHM7IGkr
KykKIAkJaW9fdGxiX29yaWdfYWRkcltpbmRleCtpXSA9IG9yaWdfYWRkciArIChpIDw8IElPX1RM
Ql9TSElGVCk7Ci0JaWYgKCEoYXR0cnMgJiBETUFfQVRUUl9PVkVSV1JJVEUpIHx8IGRpciA9PSBE
TUFfVE9fREVWSUNFIHx8Ci0JICAgIGRpciA9PSBETUFfQklESVJFQ1RJT05BTCkKLQkJc3dpb3Rs
Yl9ib3VuY2Uob3JpZ19hZGRyLCB0bGJfYWRkciwgc2l6ZSwgRE1BX1RPX0RFVklDRSk7Ci0KKwkv
KgorCSAqIFdoZW4gZGlyID09IERNQV9GUk9NX0RFVklDRSB3ZSBjb3VsZCBvbWl0IHRoZSBjb3B5
IGZyb20gdGhlIG9yaWcKKwkgKiB0byB0aGUgdGxiIGJ1ZmZlciwgaWYgd2Uga25ldyBmb3Igc3Vy
ZSB0aGUgZGV2aWNlIHdpbGwKKwkgKiBvdmVyd2lydGUgdGhlIGVudGlyZSBjdXJyZW50IGNvbnRl
bnQuIEJ1dCB3ZSBkb24ndC4gVGh1cworCSAqIHVuY29uZGl0aW9uYWwgYm91bmNlIG1heSBwcmV2
ZW50IGxlYWtpbmcgc3dpb3RsYiBjb250ZW50IChpLmUuCisJICoga2VybmVsIG1lbW9yeSkgdG8g
dXNlci1zcGFjZS4KKwkgKi8KKwlzd2lvdGxiX2JvdW5jZShvcmlnX2FkZHIsIHRsYl9hZGRyLCBz
aXplLCBETUFfVE9fREVWSUNFKTsKIAlyZXR1cm4gdGxiX2FkZHI7CiB9CiBFWFBPUlRfU1lNQk9M
X0dQTChzd2lvdGxiX3RibF9tYXBfc2luZ2xlKTsKCkZyb20gMWNkY2VjMmQ0MDVlZGE2NjNjMjFm
NjhiNWM2YmU1ZTdhODkxYjBjNCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKRnJvbTogTWlrbG9z
IFN6ZXJlZGkgPG1zemVyZWRpQHJlZGhhdC5jb20+CkRhdGU6IE1vbiwgNyBNYXIgMjAyMiAxNjoz
MDo0NCArMDEwMApTdWJqZWN0OiBbMDQvMTJdIGZ1c2U6IGZpeCBwaXBlIGJ1ZmZlciBsaWZldGlt
ZSBmb3IgZGlyZWN0X2lvCgpjb21taXQgMGM0YmNmZGVjYjFhYzA5Njc2MTllZTdmZjQ0ODcxZDkz
YzA4YzkwOSB1cHN0cmVhbS4KCkluIEZPUEVOX0RJUkVDVF9JTyBtb2RlLCBmdXNlX2ZpbGVfd3Jp
dGVfaXRlcigpIGNhbGxzCmZ1c2VfZGlyZWN0X3dyaXRlX2l0ZXIoKSwgd2hpY2ggbm9ybWFsbHkg
Y2FsbHMgZnVzZV9kaXJlY3RfaW8oKSwgd2hpY2ggdGhlbgppbXBvcnRzIHRoZSB3cml0ZSBidWZm
ZXIgd2l0aCBmdXNlX2dldF91c2VyX3BhZ2VzKCksIHdoaWNoIHVzZXMKaW92X2l0ZXJfZ2V0X3Bh
Z2VzKCkgdG8gZ3JhYiByZWZlcmVuY2VzIHRvIHVzZXJzcGFjZSBwYWdlcyBpbnN0ZWFkIG9mCmFj
dHVhbGx5IGNvcHlpbmcgbWVtb3J5LgoKT24gdGhlIGZpbGVzeXN0ZW0gZGV2aWNlIHNpZGUsIHRo
ZXNlIHBhZ2VzIGNhbiB0aGVuIGVpdGhlciBiZSByZWFkIHRvCnVzZXJzcGFjZSAodmlhIGZ1c2Vf
ZGV2X3JlYWQoKSksIG9yIHNwbGljZSgpZCBvdmVyIGludG8gYSBwaXBlIHVzaW5nCmZ1c2VfZGV2
X3NwbGljZV9yZWFkKCkgYXMgcGlwZSBidWZmZXJzIHdpdGggJm5vc3RlYWxfcGlwZV9idWZfb3Bz
LgoKVGhpcyBpcyB3cm9uZyBiZWNhdXNlIGFmdGVyIGZ1c2VfZGV2X2RvX3JlYWQoKSB1bmxvY2tz
IHRoZSBGVVNFIHJlcXVlc3QsCnRoZSB1c2Vyc3BhY2UgZmlsZXN5c3RlbSBjYW4gbWFyayB0aGUg
cmVxdWVzdCBhcyBjb21wbGV0ZWQsIGNhdXNpbmcgd3JpdGUoKQp0byByZXR1cm4uIEF0IHRoYXQg
cG9pbnQsIHRoZSB1c2Vyc3BhY2UgZmlsZXN5c3RlbSBzaG91bGQgbm8gbG9uZ2VyIGhhdmUKYWNj
ZXNzIHRvIHRoZSBwaXBlIGJ1ZmZlci4KCkZpeCBieSBjb3B5aW5nIHBhZ2VzIGNvbWluZyBmcm9t
IHRoZSB1c2VyIGFkZHJlc3Mgc3BhY2UgdG8gbmV3IHBpcGUKYnVmZmVycy4KClJlcG9ydGVkLWJ5
OiBKYW5uIEhvcm4gPGphbm5oQGdvb2dsZS5jb20+CkZpeGVzOiBjMzAyMTYyOWEwZDggKCJmdXNl
OiBzdXBwb3J0IHNwbGljZSgpIHJlYWRpbmcgZnJvbSBmdXNlIGRldmljZSIpCkNjOiA8c3RhYmxl
QHZnZXIua2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogTWlrbG9zIFN6ZXJlZGkgPG1zemVyZWRp
QHJlZGhhdC5jb20+ClNpZ25lZC1vZmYtYnk6IFphY2ggTydLZWVmZSA8em9rZWVmZUBnb29nbGUu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBHcmVnIEtyb2FoLUhhcnRtYW4gPGdyZWdraEBsaW51eGZvdW5k
YXRpb24ub3JnPgpTaWduZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3Jn
LnVrPgotLS0KIGZzL2Z1c2UvZGV2LmMgICAgfCAxMiArKysrKysrKysrKy0KIGZzL2Z1c2UvZmls
ZS5jICAgfCAgMSArCiBmcy9mdXNlL2Z1c2VfaS5oIHwgIDIgKysKIDMgZmlsZXMgY2hhbmdlZCwg
MTQgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL2ZzL2Z1c2UvZGV2
LmMgYi9mcy9mdXNlL2Rldi5jCmluZGV4IDU4NWM1MmRiYjJlMy4uMTNjZjdjMjYwYTgzIDEwMDY0
NAotLS0gYS9mcy9mdXNlL2Rldi5jCisrKyBiL2ZzL2Z1c2UvZGV2LmMKQEAgLTk5Miw3ICs5OTIs
MTcgQEAgc3RhdGljIGludCBmdXNlX2NvcHlfcGFnZShzdHJ1Y3QgZnVzZV9jb3B5X3N0YXRlICpj
cywgc3RydWN0IHBhZ2UgKipwYWdlcCwKIAogCXdoaWxlIChjb3VudCkgewogCQlpZiAoY3MtPndy
aXRlICYmIGNzLT5waXBlYnVmcyAmJiBwYWdlKSB7Ci0JCQlyZXR1cm4gZnVzZV9yZWZfcGFnZShj
cywgcGFnZSwgb2Zmc2V0LCBjb3VudCk7CisJCQkvKgorCQkJICogQ2FuJ3QgY29udHJvbCBsaWZl
dGltZSBvZiBwaXBlIGJ1ZmZlcnMsIHNvIGFsd2F5cworCQkJICogY29weSB1c2VyIHBhZ2VzLgor
CQkJICovCisJCQlpZiAoY3MtPnJlcS0+dXNlcl9wYWdlcykgeworCQkJCWVyciA9IGZ1c2VfY29w
eV9maWxsKGNzKTsKKwkJCQlpZiAoZXJyKQorCQkJCQlyZXR1cm4gZXJyOworCQkJfSBlbHNlIHsK
KwkJCQlyZXR1cm4gZnVzZV9yZWZfcGFnZShjcywgcGFnZSwgb2Zmc2V0LCBjb3VudCk7CisJCQl9
CiAJCX0gZWxzZSBpZiAoIWNzLT5sZW4pIHsKIAkJCWlmIChjcy0+bW92ZV9wYWdlcyAmJiBwYWdl
ICYmCiAJCQkgICAgb2Zmc2V0ID09IDAgJiYgY291bnQgPT0gUEFHRV9TSVpFKSB7CmRpZmYgLS1n
aXQgYS9mcy9mdXNlL2ZpbGUuYyBiL2ZzL2Z1c2UvZmlsZS5jCmluZGV4IDhhZWY4ZTU2ZWIxYi4u
YWE0ZjBkNjMyYmVkIDEwMDY0NAotLS0gYS9mcy9mdXNlL2ZpbGUuYworKysgYi9mcy9mdXNlL2Zp
bGUuYwpAQCAtMTMxOSw2ICsxMzE5LDcgQEAgc3RhdGljIGludCBmdXNlX2dldF91c2VyX3BhZ2Vz
KHN0cnVjdCBmdXNlX3JlcSAqcmVxLCBzdHJ1Y3QgaW92X2l0ZXIgKmlpLAogCQkJKFBBR0VfU0la
RSAtIHJldCkgJiAoUEFHRV9TSVpFIC0gMSk7CiAJfQogCisJcmVxLT51c2VyX3BhZ2VzID0gdHJ1
ZTsKIAlpZiAod3JpdGUpCiAJCXJlcS0+aW4uYXJncGFnZXMgPSAxOwogCWVsc2UKZGlmZiAtLWdp
dCBhL2ZzL2Z1c2UvZnVzZV9pLmggYi9mcy9mdXNlL2Z1c2VfaS5oCmluZGV4IDdlNGIwZTI5OGJj
Ny4uNjEwNDUzNGRkYjdlIDEwMDY0NAotLS0gYS9mcy9mdXNlL2Z1c2VfaS5oCisrKyBiL2ZzL2Z1
c2UvZnVzZV9pLmgKQEAgLTMxMCw2ICszMTAsOCBAQCBzdHJ1Y3QgZnVzZV9yZXEgewogCS8qKiBy
ZWZjb3VudCAqLwogCWF0b21pY190IGNvdW50OwogCisJYm9vbCB1c2VyX3BhZ2VzOworCiAJLyoq
IFVuaXF1ZSBJRCBmb3IgdGhlIGludGVycnVwdCByZXF1ZXN0ICovCiAJdTY0IGludHJfdW5pcXVl
OwogCgpGcm9tIDM0MDUzMWQ2ODIzNTI2M2E5YzM2ZmU2NzI2MGUwYzk3NmFkN2FiOTEgTW9uIFNl
cCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNv
bT4KRGF0ZTogVHVlLCA5IEZlYiAyMDIxIDExOjIwOjI3IC0wODAwClN1YmplY3Q6IFswNS8xMl0g
dGNwOiBjaGFuZ2Ugc291cmNlIHBvcnQgcmFuZG9taXphcmlvbiBhdCBjb25uZWN0KCkgdGltZQoK
Y29tbWl0IDE5MGNjODI0ODlmNDZmOWQ4OGU3M2M4MWE0N2UxNGY4MGE3OTFlMWEgdXBzdHJlYW0u
CgpSRkMgNjA1NiAoUmVjb21tZW5kYXRpb25zIGZvciBUcmFuc3BvcnQtUHJvdG9jb2wgUG9ydCBS
YW5kb21pemF0aW9uKQpwcm92aWRlcyBnb29kIHN1bW1hcnkgb2Ygd2h5IHNvdXJjZSBzZWxlY3Rp
b24gbmVlZHMgZXh0cmEgY2FyZS4KCkRhdmlkIER3b3JrZW4gcmVtaW5kZWQgdXMgdGhhdCBsaW51
eCBpbXBsZW1lbnRzIEFsZ29yaXRobSAzCmFzIGRlc2NyaWJlZCBpbiBSRkMgNjA1NiAzLjMuMwoK
UXVvdGluZyBEYXZpZCA6CiAgIEluIHRoZSBjb250ZXh0IG9mIHRoZSB3ZWIsIHRoaXMgY3JlYXRl
cyBhbiBpbnRlcmVzdGluZyBpbmZvIGxlYWsgd2hlcmUKICAgd2Vic2l0ZXMgY2FuIGNvdW50IGhv
dyBtYW55IFRDUCBjb25uZWN0aW9ucyBhIHVzZXIncyBjb21wdXRlciBpcwogICBlc3RhYmxpc2hp
bmcgb3ZlciB0aW1lLiBGb3IgZXhhbXBsZSwgdGhpcyBhbGxvd3MgYSB3ZWJzaXRlIHRvIGNvdW50
CiAgIGV4YWN0bHkgaG93IG1hbnkgc3VicmVzb3VyY2VzIGEgdGhpcmQgcGFydHkgd2Vic2l0ZSBs
b2FkZWQuCiAgIFRoaXMgYWxzbyBhbGxvd3M6CiAgIC0gRGlzdGluZ3Vpc2hpbmcgYmV0d2VlbiBk
aWZmZXJlbnQgdXNlcnMgYmVoaW5kIGEgVlBOIGJhc2VkIG9uCiAgICAgICBkaXN0aW5jdCBzb3Vy
Y2UgcG9ydCByYW5nZXMuCiAgIC0gVHJhY2tpbmcgdXNlcnMgb3ZlciB0aW1lIGFjcm9zcyBtdWx0
aXBsZSBuZXR3b3Jrcy4KICAgLSBDb3ZlcnQgY29tbXVuaWNhdGlvbiBjaGFubmVscyBiZXR3ZWVu
IGRpZmZlcmVudCBicm93c2Vycy9icm93c2VyCiAgICAgICBwcm9maWxlcyBydW5uaW5nIG9uIHRo
ZSBzYW1lIGNvbXB1dGVyCiAgIC0gVHJhY2tpbmcgd2hhdCBhcHBsaWNhdGlvbnMgYXJlIHJ1bm5p
bmcgb24gYSBjb21wdXRlciBiYXNlZCBvbgogICAgICAgdGhlIHBhdHRlcm4gb2YgaG93IGZhc3Qg
c291cmNlIHBvcnRzIGFyZSBnZXR0aW5nIGluY3JlbWVudGVkLgoKU2VjdGlvbiAzLjMuNCBkZXNj
cmliZXMgYW4gZW5oYW5jZW1lbnQsIHRoYXQgcmVkdWNlcwphdHRhY2tlcnMgYWJpbGl0eSB0byB1
c2UgdGhlIGJhc2ljIGluZm9ybWF0aW9uIGN1cnJlbnRseQpzdG9yZWQgaW50byB0aGUgc2hhcmVk
ICd1MzIgaGludCcuCgpUaGlzIGNoYW5nZSBhbHNvIGRlY3JlYXNlcyBjb2xsaXNpb24gcmF0ZSB3
aGVuCm11bHRpcGxlIGFwcGxpY2F0aW9ucyBuZWVkIHRvIGNvbm5lY3QoKSB0bwpkaWZmZXJlbnQg
ZGVzdGluYXRpb25zLgoKU2lnbmVkLW9mZi1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29n
bGUuY29tPgpSZXBvcnRlZC1ieTogRGF2aWQgRHdvcmtlbiA8ZGR3b3JrZW5AZ29vZ2xlLmNvbT4K
Q2M6IFdpbGxlbSBkZSBCcnVpam4gPHdpbGxlbWJAZ29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTog
RGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgpbYndoOiBCYWNrcG9ydGVkIHRv
IDQuOTogYWRqdXN0IGNvbnRleHRdClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbkBk
ZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgfCAyMCArKysr
KysrKysrKysrKysrKy0tLQogMSBmaWxlIGNoYW5nZWQsIDE3IGluc2VydGlvbnMoKyksIDMgZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgYi9uZXQv
aXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCA4ODc2MzM4NzA3NjMuLmMzYjViNTc5YzcwNCAx
MDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKKysrIGIvbmV0L2lwdjQvaW5l
dF9oYXNodGFibGVzLmMKQEAgLTUzNyw2ICs1MzcsMTcgQEAgdm9pZCBpbmV0X3VuaGFzaChzdHJ1
Y3Qgc29jayAqc2spCiB9CiBFWFBPUlRfU1lNQk9MX0dQTChpbmV0X3VuaGFzaCk7CiAKKy8qIFJG
QyA2MDU2IDMuMy40LiAgQWxnb3JpdGhtIDQ6IERvdWJsZS1IYXNoIFBvcnQgU2VsZWN0aW9uIEFs
Z29yaXRobQorICogTm90ZSB0aGF0IHdlIHVzZSAzMmJpdCBpbnRlZ2VycyAodnMgUkZDICdzaG9y
dCBpbnRlZ2VycycpCisgKiBiZWNhdXNlIDJeMTYgaXMgbm90IGEgbXVsdGlwbGUgb2YgbnVtX2Vw
aGVtZXJhbCBhbmQgdGhpcworICogcHJvcGVydHkgbWlnaHQgYmUgdXNlZCBieSBjbGV2ZXIgYXR0
YWNrZXIuCisgKiBSRkMgY2xhaW1zIHVzaW5nIFRBQkxFX0xFTkdUSD0xMCBidWNrZXRzIGdpdmVz
IGFuIGltcHJvdmVtZW50LAorICogd2UgdXNlIDI1NiBpbnN0ZWFkIHRvIHJlYWxseSBnaXZlIG1v
cmUgaXNvbGF0aW9uIGFuZAorICogcHJpdmFjeSwgdGhpcyBvbmx5IGNvbnN1bWVzIDEgS0Igb2Yg
a2VybmVsIG1lbW9yeS4KKyAqLworI2RlZmluZSBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQgOAor
c3RhdGljIHUzMiB0YWJsZV9wZXJ0dXJiWzEgPDwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUXTsK
KwogaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93
ICpkZWF0aF9yb3csCiAJCXN0cnVjdCBzb2NrICpzaywgdTMyIHBvcnRfb2Zmc2V0LAogCQlpbnQg
KCpjaGVja19lc3RhYmxpc2hlZCkoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICosCkBA
IC01NTAsNyArNTYxLDcgQEAgaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGlt
ZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJc3RydWN0IGluZXRfYmluZF9idWNrZXQgKnRi
OwogCXUzMiByZW1haW5pbmcsIG9mZnNldDsKIAlpbnQgcmV0LCBpLCBsb3csIGhpZ2g7Ci0Jc3Rh
dGljIHUzMiBoaW50OworCXUzMiBpbmRleDsKIAogCWlmIChwb3J0KSB7CiAJCWhlYWQgPSAmaGlu
Zm8tPmJoYXNoW2luZXRfYmhhc2hmbihuZXQsIHBvcnQsCkBAIC01NzUsNyArNTg2LDEwIEBAIGlu
dCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVjdCBpbmV0X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVh
dGhfcm93LAogCWlmIChsaWtlbHkocmVtYWluaW5nID4gMSkpCiAJCXJlbWFpbmluZyAmPSB+MVU7
CiAKLQlvZmZzZXQgPSAoaGludCArIHBvcnRfb2Zmc2V0KSAlIHJlbWFpbmluZzsKKwluZXRfZ2V0
X3JhbmRvbV9vbmNlKHRhYmxlX3BlcnR1cmIsIHNpemVvZih0YWJsZV9wZXJ0dXJiKSk7CisJaW5k
ZXggPSBoYXNoXzMyKHBvcnRfb2Zmc2V0LCBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQpOworCisJ
b2Zmc2V0ID0gKFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBwb3J0X29mZnNldCkg
JSByZW1haW5pbmc7CiAJLyogSW4gZmlyc3QgcGFzcyB3ZSB0cnkgcG9ydHMgb2YgQGxvdyBwYXJp
dHkuCiAJICogaW5ldF9jc2tfZ2V0X3BvcnQoKSBkb2VzIHRoZSBvcHBvc2l0ZSBjaG9pY2UuCiAJ
ICovCkBAIC02MjgsNyArNjQyLDcgQEAgaW50IF9faW5ldF9oYXNoX2Nvbm5lY3Qoc3RydWN0IGlu
ZXRfdGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJcmV0dXJuIC1FQUREUk5PVEFWQUlM
OwogCiBvazoKLQloaW50ICs9IGkgKyAyOworCVdSSVRFX09OQ0UodGFibGVfcGVydHVyYltpbmRl
eF0sIFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBpICsgMik7CiAKIAkvKiBIZWFk
IGxvY2sgc3RpbGwgaGVsZCBhbmQgYmgncyBkaXNhYmxlZCAqLwogCWluZXRfYmluZF9oYXNoKHNr
LCB0YiwgcG9ydCk7CgpGcm9tIGQ4OGU2YjE1YTM5ZTM0ZjI2OTAxNzRiZTgxYTI5NjM4ZTJlMTcx
M2IgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRA
Z29vZ2xlLmNvbT4KRGF0ZTogVHVlLCA5IEZlYiAyMDIxIDExOjIwOjI4IC0wODAwClN1YmplY3Q6
IFswNi8xMl0gdGNwOiBhZGQgc29tZSBlbnRyb3B5IGluIF9faW5ldF9oYXNoX2Nvbm5lY3QoKQoK
Y29tbWl0IGM1NzliZDFiNDAyMWM0MmFlMjQ3MTA4ZjFlNmY3M2RkM2YwODYwMGMgdXBzdHJlYW0u
CgpFdmVuIHdoZW4gaW1wbGVtZW50aW5nIFJGQyA2MDU2IDMuMy40IChBbGdvcml0aG0gNDogRG91
YmxlLUhhc2gKUG9ydCBTZWxlY3Rpb24gQWxnb3JpdGhtKSwgYSBwYXRpZW50IGF0dGFja2VyIGNv
dWxkIHN0aWxsIGJlIGFibGUKdG8gY29sbGVjdCBlbm91Z2ggc3RhdGUgZnJvbSBhbiBvdGhlcndp
c2UgaWRsZSBob3N0LgoKSWRlYSBvZiB0aGlzIHBhdGNoIGlzIHRvIGluamVjdCBzb21lIG5vaXNl
LCBpbiB0aGUKY2FzZXMgX19pbmV0X2hhc2hfY29ubmVjdCgpIGZvdW5kIGEgY2FuZGlkYXRlIGlu
IHRoZSBmaXJzdAphdHRlbXB0LgoKVGhpcyBub2lzZSBzaG91bGQgbm90IHNpZ25pZmljYW50bHkg
cmVkdWNlIHRoZSBjb2xsaXNpb24KYXZvaWRhbmNlLCBhbmQgc2hvdWxkIGJlIHplcm8gaWYgY29u
bmVjdGlvbiB0YWJsZQppcyBhbHJlYWR5IHdlbGwgdXNlZC4KCk5vdGUgdGhhdCB0aGlzIGlzIG5v
dCBpbXBsZW1lbnRpbmcgUkZDIDYwNTYgMy4zLjUKYmVjYXVzZSB3ZSB0aGluayBBbGdvcml0aG0g
NSBjb3VsZCBodXJ0IHR5cGljYWwKd29ya2xvYWRzLgoKU2lnbmVkLW9mZi1ieTogRXJpYyBEdW1h
emV0IDxlZHVtYXpldEBnb29nbGUuY29tPgpDYzogRGF2aWQgRHdvcmtlbiA8ZGR3b3JrZW5AZ29v
Z2xlLmNvbT4KQ2M6IFdpbGxlbSBkZSBCcnVpam4gPHdpbGxlbWJAZ29vZ2xlLmNvbT4KU2lnbmVk
LW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQubmV0PgpTaWduZWQtb2Zm
LWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9pcHY0L2lu
ZXRfaGFzaHRhYmxlcy5jIHwgNSArKysrKwogMSBmaWxlIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygr
KQoKZGlmZiAtLWdpdCBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jIGIvbmV0L2lwdjQvaW5l
dF9oYXNodGFibGVzLmMKaW5kZXggYzNiNWI1NzljNzA0Li42ZGMyYWZhYTMzMGYgMTAwNjQ0Ci0t
LSBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCisrKyBiL25ldC9pcHY0L2luZXRfaGFzaHRh
Ymxlcy5jCkBAIC02NDIsNiArNjQyLDExIEBAIGludCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVj
dCBpbmV0X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVhdGhfcm93LAogCXJldHVybiAtRUFERFJOT1RB
VkFJTDsKIAogb2s6CisJLyogSWYgb3VyIGZpcnN0IGF0dGVtcHQgZm91bmQgYSBjYW5kaWRhdGUs
IHNraXAgbmV4dCBjYW5kaWRhdGUKKwkgKiBpbiAxLzE2IG9mIGNhc2VzIHRvIGFkZCBzb21lIG5v
aXNlLgorCSAqLworCWlmICghaSAmJiAhKHByYW5kb21fdTMyKCkgJSAxNikpCisJCWkgPSAyOwog
CVdSSVRFX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0sIFJFQURfT05DRSh0YWJsZV9wZXJ0dXJi
W2luZGV4XSkgKyBpICsgMik7CiAKIAkvKiBIZWFkIGxvY2sgc3RpbGwgaGVsZCBhbmQgYmgncyBk
aXNhYmxlZCAqLwoKRnJvbSBjOWE2M2U5Y2E5YWIwNzkwZjQ3YjRhMDk2NTdkNDU3ZjM5MjkxMmJk
IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4K
RGF0ZTogTW9uLCAyIE1heSAyMDIyIDEwOjQ2OjA4ICswMjAwClN1YmplY3Q6IFswNy8xMl0gc2Vj
dXJlX3NlcTogdXNlIHRoZSA2NCBiaXRzIG9mIHRoZSBzaXBoYXNoIGZvciBwb3J0IG9mZnNldAog
Y2FsY3VsYXRpb24KCmNvbW1pdCBiMmQwNTc1NjBiODEwN2M2MzNiMzlhYWJlNTE3ZmY5ZDkzZjI4
NWUzIHVwc3RyZWFtLgoKU2lwSGFzaCByZXBsYWNlZCBNRDUgaW4gc2VjdXJlX2lwdns0LDZ9X3Bv
cnRfZXBoZW1lcmFsKCkgdmlhIGNvbW1pdAo3Y2QyM2U1MzAwYzEgKCJzZWN1cmVfc2VxOiB1c2Ug
U2lwSGFzaCBpbiBwbGFjZSBvZiBNRDUiKSwgYnV0IHRoZSBvdXRwdXQKcmVtYWluZWQgdHJ1bmNh
dGVkIHRvIDMyLWJpdCBvbmx5LiBJbiBvcmRlciB0byBleHBsb2l0IG1vcmUgYml0cyBmcm9tIHRo
ZQpoYXNoLCBsZXQncyBtYWtlIHRoZSBmdW5jdGlvbnMgcmV0dXJuIHRoZSBmdWxsIDY0LWJpdCBv
ZiBzaXBoYXNoXzN1MzIoKS4KV2UgYWxzbyBtYWtlIHN1cmUgdGhlIHBvcnQgb2Zmc2V0IGNhbGN1
bGF0aW9uIGluIF9faW5ldF9oYXNoX2Nvbm5lY3QoKQpyZW1haW5zIGRvbmUgb24gMzItYml0IHRv
IGF2b2lkIHRoZSBuZWVkIGZvciBkaXZfdTY0X3JlbSgpIGFuZCBhbiBleHRyYQpjb3N0IG9uIDMy
LWJpdCBzeXN0ZW1zLgoKQ2M6IEphc29uIEEuIERvbmVuZmVsZCA8SmFzb25AengyYzQuY29tPgpD
YzogTW9zaGUgS29sIDxtb3NoZS5rb2xAbWFpbC5odWppLmFjLmlsPgpDYzogWW9zc2kgR2lsYWQg
PHlvc3NpLmdpbGFkQG1haWwuaHVqaS5hYy5pbD4KQ2M6IEFtaXQgS2xlaW4gPGFrc2VjdXJpdHlA
Z21haWwuY29tPgpSZXZpZXdlZC1ieTogRXJpYyBEdW1hemV0IDxlZHVtYXpldEBnb29nbGUuY29t
PgpTaWduZWQtb2ZmLWJ5OiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KU2lnbmVkLW9mZi1ieTog
SmFrdWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogQmVuIEh1dGNo
aW5ncyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBpbmNsdWRlL25ldC9pbmV0X2hhc2h0YWJs
ZXMuaCB8ICAyICstCiBpbmNsdWRlL25ldC9zZWN1cmVfc2VxLmggICAgICB8ICA0ICsrLS0KIG5l
dC9jb3JlL3NlY3VyZV9zZXEuYyAgICAgICAgIHwgIDQgKystLQogbmV0L2lwdjQvaW5ldF9oYXNo
dGFibGVzLmMgICAgfCAxMCArKysrKystLS0tCiBuZXQvaXB2Ni9pbmV0Nl9oYXNodGFibGVzLmMg
ICB8ICA0ICsrLS0KIDUgZmlsZXMgY2hhbmdlZCwgMTMgaW5zZXJ0aW9ucygrKSwgMTEgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9uZXQvaW5ldF9oYXNodGFibGVzLmggYi9pbmNs
dWRlL25ldC9pbmV0X2hhc2h0YWJsZXMuaAppbmRleCBmYzQ0NWU3Y2NhZGYuLmMzY2YyMDIxYmIz
YiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9uZXQvaW5ldF9oYXNodGFibGVzLmgKKysrIGIvaW5jbHVk
ZS9uZXQvaW5ldF9oYXNodGFibGVzLmgKQEAgLTM4Miw3ICszODIsNyBAQCBzdGF0aWMgaW5saW5l
IHZvaWQgc2tfcmN2X3NhZGRyX3NldChzdHJ1Y3Qgc29jayAqc2ssIF9fYmUzMiBhZGRyKQogfQog
CiBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cg
KmRlYXRoX3JvdywKLQkJCXN0cnVjdCBzb2NrICpzaywgdTMyIHBvcnRfb2Zmc2V0LAorCQkJc3Ry
dWN0IHNvY2sgKnNrLCB1NjQgcG9ydF9vZmZzZXQsCiAJCQlpbnQgKCpjaGVja19lc3RhYmxpc2hl
ZCkoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICosCiAJCQkJCQkgc3RydWN0IHNvY2sg
KiwgX191MTYsCiAJCQkJCQkgc3RydWN0IGluZXRfdGltZXdhaXRfc29jayAqKikpOwpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9uZXQvc2VjdXJlX3NlcS5oIGIvaW5jbHVkZS9uZXQvc2VjdXJlX3NlcS5o
CmluZGV4IDNmMzZkNDViNzE0YS4uNTQyYTgwYzA1MTA3IDEwMDY0NAotLS0gYS9pbmNsdWRlL25l
dC9zZWN1cmVfc2VxLmgKKysrIGIvaW5jbHVkZS9uZXQvc2VjdXJlX3NlcS5oCkBAIC0zLDggKzMs
OCBAQAogCiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAotdTMyIHNlY3VyZV9pcHY0X3BvcnRf
ZXBoZW1lcmFsKF9fYmUzMiBzYWRkciwgX19iZTMyIGRhZGRyLCBfX2JlMTYgZHBvcnQpOwotdTMy
IHNlY3VyZV9pcHY2X3BvcnRfZXBoZW1lcmFsKGNvbnN0IF9fYmUzMiAqc2FkZHIsIGNvbnN0IF9f
YmUzMiAqZGFkZHIsCit1NjQgc2VjdXJlX2lwdjRfcG9ydF9lcGhlbWVyYWwoX19iZTMyIHNhZGRy
LCBfX2JlMzIgZGFkZHIsIF9fYmUxNiBkcG9ydCk7Cit1NjQgc2VjdXJlX2lwdjZfcG9ydF9lcGhl
bWVyYWwoY29uc3QgX19iZTMyICpzYWRkciwgY29uc3QgX19iZTMyICpkYWRkciwKIAkJCSAgICAg
ICBfX2JlMTYgZHBvcnQpOwogX191MzIgc2VjdXJlX3RjcF9zZXF1ZW5jZV9udW1iZXIoX19iZTMy
IHNhZGRyLCBfX2JlMzIgZGFkZHIsCiAJCQkJIF9fYmUxNiBzcG9ydCwgX19iZTE2IGRwb3J0KTsK
ZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NlY3VyZV9zZXEuYyBiL25ldC9jb3JlL3NlY3VyZV9zZXEu
YwppbmRleCBmZDNjZTQ2MWZiZTYuLmVkMDViODI3N2FhNCAxMDA2NDQKLS0tIGEvbmV0L2NvcmUv
c2VjdXJlX3NlcS5jCisrKyBiL25ldC9jb3JlL3NlY3VyZV9zZXEuYwpAQCAtNjIsNyArNjIsNyBA
QCBfX3UzMiBzZWN1cmVfdGNwdjZfc2VxdWVuY2VfbnVtYmVyKGNvbnN0IF9fYmUzMiAqc2FkZHIs
IGNvbnN0IF9fYmUzMiAqZGFkZHIsCiB9CiBFWFBPUlRfU1lNQk9MKHNlY3VyZV90Y3B2Nl9zZXF1
ZW5jZV9udW1iZXIpOwogCi11MzIgc2VjdXJlX2lwdjZfcG9ydF9lcGhlbWVyYWwoY29uc3QgX19i
ZTMyICpzYWRkciwgY29uc3QgX19iZTMyICpkYWRkciwKK3U2NCBzZWN1cmVfaXB2Nl9wb3J0X2Vw
aGVtZXJhbChjb25zdCBfX2JlMzIgKnNhZGRyLCBjb25zdCBfX2JlMzIgKmRhZGRyLAogCQkJICAg
ICAgIF9fYmUxNiBkcG9ydCkKIHsKIAl1MzIgc2VjcmV0W01ENV9NRVNTQUdFX0JZVEVTIC8gNF07
CkBAIC0xMDIsNyArMTAyLDcgQEAgX191MzIgc2VjdXJlX3RjcF9zZXF1ZW5jZV9udW1iZXIoX19i
ZTMyIHNhZGRyLCBfX2JlMzIgZGFkZHIsCiAJcmV0dXJuIHNlcV9zY2FsZShoYXNoWzBdKTsKIH0K
IAotdTMyIHNlY3VyZV9pcHY0X3BvcnRfZXBoZW1lcmFsKF9fYmUzMiBzYWRkciwgX19iZTMyIGRh
ZGRyLCBfX2JlMTYgZHBvcnQpCit1NjQgc2VjdXJlX2lwdjRfcG9ydF9lcGhlbWVyYWwoX19iZTMy
IHNhZGRyLCBfX2JlMzIgZGFkZHIsIF9fYmUxNiBkcG9ydCkKIHsKIAl1MzIgaGFzaFtNRDVfRElH
RVNUX1dPUkRTXTsKIApkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgYi9u
ZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCA2ZGMyYWZhYTMzMGYuLjAyNWU4N2VkOTdh
MiAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKKysrIGIvbmV0L2lwdjQv
aW5ldF9oYXNodGFibGVzLmMKQEAgLTM4Miw3ICszODIsNyBAQCBzdGF0aWMgaW50IF9faW5ldF9j
aGVja19lc3RhYmxpc2hlZChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3Jv
dywKIAlyZXR1cm4gLUVBRERSTk9UQVZBSUw7CiB9CiAKLXN0YXRpYyB1MzIgaW5ldF9za19wb3J0
X29mZnNldChjb25zdCBzdHJ1Y3Qgc29jayAqc2spCitzdGF0aWMgdTY0IGluZXRfc2tfcG9ydF9v
ZmZzZXQoY29uc3Qgc3RydWN0IHNvY2sgKnNrKQogewogCWNvbnN0IHN0cnVjdCBpbmV0X3NvY2sg
KmluZXQgPSBpbmV0X3NrKHNrKTsKIApAQCAtNTQ5LDcgKzU0OSw3IEBAIEVYUE9SVF9TWU1CT0xf
R1BMKGluZXRfdW5oYXNoKTsKIHN0YXRpYyB1MzIgdGFibGVfcGVydHVyYlsxIDw8IElORVRfVEFC
TEVfUEVSVFVSQl9TSElGVF07CiAKIGludCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVjdCBpbmV0
X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVhdGhfcm93LAotCQlzdHJ1Y3Qgc29jayAqc2ssIHUzMiBw
b3J0X29mZnNldCwKKwkJc3RydWN0IHNvY2sgKnNrLCB1NjQgcG9ydF9vZmZzZXQsCiAJCWludCAo
KmNoZWNrX2VzdGFibGlzaGVkKShzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKiwKIAkJ
CXN0cnVjdCBzb2NrICosIF9fdTE2LCBzdHJ1Y3QgaW5ldF90aW1ld2FpdF9zb2NrICoqKSkKIHsK
QEAgLTU4OSw3ICs1ODksOSBAQCBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90
aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywKIAluZXRfZ2V0X3JhbmRvbV9vbmNlKHRhYmxl
X3BlcnR1cmIsIHNpemVvZih0YWJsZV9wZXJ0dXJiKSk7CiAJaW5kZXggPSBoYXNoXzMyKHBvcnRf
b2Zmc2V0LCBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQpOwogCi0Jb2Zmc2V0ID0gKFJFQURfT05D
RSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBwb3J0X29mZnNldCkgJSByZW1haW5pbmc7CisJb2Zm
c2V0ID0gUkVBRF9PTkNFKHRhYmxlX3BlcnR1cmJbaW5kZXhdKSArIHBvcnRfb2Zmc2V0OworCW9m
ZnNldCAlPSByZW1haW5pbmc7CisKIAkvKiBJbiBmaXJzdCBwYXNzIHdlIHRyeSBwb3J0cyBvZiBA
bG93IHBhcml0eS4KIAkgKiBpbmV0X2Nza19nZXRfcG9ydCgpIGRvZXMgdGhlIG9wcG9zaXRlIGNo
b2ljZS4KIAkgKi8KQEAgLTY3MCw3ICs2NzIsNyBAQCBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChz
dHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywKIGludCBpbmV0X2hhc2hf
Y29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywKIAkJICAg
ICAgc3RydWN0IHNvY2sgKnNrKQogewotCXUzMiBwb3J0X29mZnNldCA9IDA7CisJdTY0IHBvcnRf
b2Zmc2V0ID0gMDsKIAogCWlmICghaW5ldF9zayhzayktPmluZXRfbnVtKQogCQlwb3J0X29mZnNl
dCA9IGluZXRfc2tfcG9ydF9vZmZzZXQoc2spOwpkaWZmIC0tZ2l0IGEvbmV0L2lwdjYvaW5ldDZf
aGFzaHRhYmxlcy5jIGIvbmV0L2lwdjYvaW5ldDZfaGFzaHRhYmxlcy5jCmluZGV4IGQ0N2NhYjZk
N2M2ZC4uODIyM2FjNjFhOWZkIDEwMDY0NAotLS0gYS9uZXQvaXB2Ni9pbmV0Nl9oYXNodGFibGVz
LmMKKysrIGIvbmV0L2lwdjYvaW5ldDZfaGFzaHRhYmxlcy5jCkBAIC0yNDIsNyArMjQyLDcgQEAg
c3RhdGljIGludCBfX2luZXQ2X2NoZWNrX2VzdGFibGlzaGVkKHN0cnVjdCBpbmV0X3RpbWV3YWl0
X2RlYXRoX3JvdyAqZGVhdGhfcm93LAogCXJldHVybiAtRUFERFJOT1RBVkFJTDsKIH0KIAotc3Rh
dGljIHUzMiBpbmV0Nl9za19wb3J0X29mZnNldChjb25zdCBzdHJ1Y3Qgc29jayAqc2spCitzdGF0
aWMgdTY0IGluZXQ2X3NrX3BvcnRfb2Zmc2V0KGNvbnN0IHN0cnVjdCBzb2NrICpzaykKIHsKIAlj
b25zdCBzdHJ1Y3QgaW5ldF9zb2NrICppbmV0ID0gaW5ldF9zayhzayk7CiAKQEAgLTI1NCw3ICsy
NTQsNyBAQCBzdGF0aWMgdTMyIGluZXQ2X3NrX3BvcnRfb2Zmc2V0KGNvbnN0IHN0cnVjdCBzb2Nr
ICpzaykKIGludCBpbmV0Nl9oYXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhf
cm93ICpkZWF0aF9yb3csCiAJCSAgICAgICBzdHJ1Y3Qgc29jayAqc2spCiB7Ci0JdTMyIHBvcnRf
b2Zmc2V0ID0gMDsKKwl1NjQgcG9ydF9vZmZzZXQgPSAwOwogCiAJaWYgKCFpbmV0X3NrKHNrKS0+
aW5ldF9udW0pCiAJCXBvcnRfb2Zmc2V0ID0gaW5ldDZfc2tfcG9ydF9vZmZzZXQoc2spOwoKRnJv
bSA1ZTEyYjQ4ZGNkNzI1MDkyYTQ1NmMxZjAyYjI4OGNjMWJiMjQ4YzI0IE1vbiBTZXAgMTcgMDA6
MDA6MDAgMjAwMQpGcm9tOiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1h
eSAyMDIyIDEwOjQ2OjA5ICswMjAwClN1YmplY3Q6IFswOC8xMl0gdGNwOiB1c2UgZGlmZmVyZW50
IHBhcnRzIG9mIHRoZSBwb3J0X29mZnNldCBmb3IgaW5kZXggYW5kCiBvZmZzZXQKCmNvbW1pdCA5
ZTliNzBhZTkyM2JhZjJiNWU4YTBlYTRmZDBjODQ1MTgwMWFjNTI2IHVwc3RyZWFtLgoKQW1pdCBL
bGVpbiBzdWdnZXN0cyB0aGF0IHdlIHVzZSBkaWZmZXJlbnQgcGFydHMgb2YgcG9ydF9vZmZzZXQg
Zm9yIHRoZQp0YWJsZSdzIGluZGV4IGFuZCB0aGUgcG9ydCBvZmZzZXQgc28gdGhhdCB0aGVyZSBp
cyBubyBkaXJlY3QgcmVsYXRpb24KYmV0d2VlbiB0aGVtLgoKQ2M6IEphc29uIEEuIERvbmVuZmVs
ZCA8SmFzb25AengyYzQuY29tPgpDYzogTW9zaGUgS29sIDxtb3NoZS5rb2xAbWFpbC5odWppLmFj
LmlsPgpDYzogWW9zc2kgR2lsYWQgPHlvc3NpLmdpbGFkQG1haWwuaHVqaS5hYy5pbD4KQ2M6IEFt
aXQgS2xlaW4gPGFrc2VjdXJpdHlAZ21haWwuY29tPgpSZXZpZXdlZC1ieTogRXJpYyBEdW1hemV0
IDxlZHVtYXpldEBnb29nbGUuY29tPgpTaWduZWQtb2ZmLWJ5OiBXaWxseSBUYXJyZWF1IDx3QDF3
dC5ldT4KU2lnbmVkLW9mZi1ieTogSmFrdWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4KU2ln
bmVkLW9mZi1ieTogQmVuIEh1dGNoaW5ncyA8YmVuQGRlY2FkZW50Lm9yZy51az4KLS0tCiBuZXQv
aXB2NC9pbmV0X2hhc2h0YWJsZXMuYyB8IDIgKy0KIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlv
bigrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxl
cy5jIGIvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKaW5kZXggMDI1ZTg3ZWQ5N2EyLi45Y2Ux
YjdlOTczNjUgMTAwNjQ0Ci0tLSBhL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCisrKyBiL25l
dC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCkBAIC01ODksNyArNTg5LDcgQEAgaW50IF9faW5ldF9o
YXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJ
bmV0X2dldF9yYW5kb21fb25jZSh0YWJsZV9wZXJ0dXJiLCBzaXplb2YodGFibGVfcGVydHVyYikp
OwogCWluZGV4ID0gaGFzaF8zMihwb3J0X29mZnNldCwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZU
KTsKIAotCW9mZnNldCA9IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBwb3J0X29m
ZnNldDsKKwlvZmZzZXQgPSBSRUFEX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0pICsgKHBvcnRf
b2Zmc2V0ID4+IDMyKTsKIAlvZmZzZXQgJT0gcmVtYWluaW5nOwogCiAJLyogSW4gZmlyc3QgcGFz
cyB3ZSB0cnkgcG9ydHMgb2YgQGxvdyBwYXJpdHkuCgpGcm9tIDgzNGRhZGZiYTU4ODE3Y2RkNDUy
MWIxYzIyYzZiYzg3MDE5MjljMTIgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFdpbGx5
IFRhcnJlYXUgPHdAMXd0LmV1PgpEYXRlOiBNb24sIDIgTWF5IDIwMjIgMTA6NDY6MTEgKzAyMDAK
U3ViamVjdDogWzA5LzEyXSB0Y3A6IGFkZCBzbWFsbCByYW5kb20gaW5jcmVtZW50cyB0byB0aGUg
c291cmNlIHBvcnQKCmNvbW1pdCBjYTdhZjA0MDI1NTBmOWEwYjMzMTZkNWYxYzMwOTA0ZTQyZWQy
NTdkIHVwc3RyZWFtLgoKSGVyZSB3ZSdyZSByYW5kb21seSBhZGRpbmcgYmV0d2VlbiAwIGFuZCA3
IHJhbmRvbSBpbmNyZW1lbnRzIHRvIHRoZQpzZWxlY3RlZCBzb3VyY2UgcG9ydCBpbiBvcmRlciB0
byBhZGQgc29tZSBub2lzZSBpbiB0aGUgc291cmNlIHBvcnQKc2VsZWN0aW9uIHRoYXQgd2lsbCBt
YWtlIHRoZSBuZXh0IHBvcnQgbGVzcyBwcmVkaWN0YWJsZS4KCldpdGggdGhlIGRlZmF1bHQgcG9y
dCByYW5nZSBvZiAzMjc2OC02MDk5OSB0aGlzIG1lYW5zIGEgd29yc3QgY2FzZQpyZXVzZSBzY2Vu
YXJpbyBvZiAxNDExNi84PTE3NjQgY29ubmVjdGlvbnMgYmV0d2VlbiB0d28gY29uc2VjdXRpdmUK
dXNlcyBvZiB0aGUgc2FtZSBwb3J0LCB3aXRoIGFuIGF2ZXJhZ2Ugb2YgMTQxMTYvNC41PTMxMzcu
IFRoaXMgY29kZQp3YXMgc3RyZXNzZWQgYXQgbW9yZSB0aGFuIDgwMDAwMCBjb25uZWN0aW9ucyBw
ZXIgc2Vjb25kIHRvIGEgZml4ZWQKdGFyZ2V0IHdpdGggYWxsIGNvbm5lY3Rpb25zIGNsb3NlZCBi
eSB0aGUgY2xpZW50IHVzaW5nIFJTVHMgKHdvcnN0CmNvbmRpdGlvbikgYW5kIG9ubHkgMiBjb25u
ZWN0aW9ucyBmYWlsZWQgYW1vbmcgMTMgYmlsbGlvbiwgZGVzcGl0ZQp0aGUgaGFzaCBiZWluZyBy
ZXNlZWRlZCBldmVyeSAxMCBzZWNvbmRzLCBpbmRpY2F0aW5nIGEgcGVyZmVjdGx5CnNhZmUgc2l0
dWF0aW9uLgoKQ2M6IE1vc2hlIEtvbCA8bW9zaGUua29sQG1haWwuaHVqaS5hYy5pbD4KQ2M6IFlv
c3NpIEdpbGFkIDx5b3NzaS5naWxhZEBtYWlsLmh1amkuYWMuaWw+CkNjOiBBbWl0IEtsZWluIDxh
a3NlY3VyaXR5QGdtYWlsLmNvbT4KUmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRA
Z29vZ2xlLmNvbT4KU2lnbmVkLW9mZi1ieTogV2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+ClNpZ25l
ZC1vZmYtYnk6IEpha3ViIEtpY2luc2tpIDxrdWJhQGtlcm5lbC5vcmc+ClNpZ25lZC1vZmYtYnk6
IEJlbiBIdXRjaGluZ3MgPGJlbkBkZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5ldF9o
YXNodGFibGVzLmMgfCA5ICsrKysrLS0tLQogMSBmaWxlIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygr
KSwgNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMu
YyBiL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCmluZGV4IDljZTFiN2U5NzM2NS4uZmY4MDFk
NmUzMGYyIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9uZXQv
aXB2NC9pbmV0X2hhc2h0YWJsZXMuYwpAQCAtNjQ0LDExICs2NDQsMTIgQEAgaW50IF9faW5ldF9o
YXNoX2Nvbm5lY3Qoc3RydWN0IGluZXRfdGltZXdhaXRfZGVhdGhfcm93ICpkZWF0aF9yb3csCiAJ
cmV0dXJuIC1FQUREUk5PVEFWQUlMOwogCiBvazoKLQkvKiBJZiBvdXIgZmlyc3QgYXR0ZW1wdCBm
b3VuZCBhIGNhbmRpZGF0ZSwgc2tpcCBuZXh0IGNhbmRpZGF0ZQotCSAqIGluIDEvMTYgb2YgY2Fz
ZXMgdG8gYWRkIHNvbWUgbm9pc2UuCisJLyogSGVyZSB3ZSB3YW50IHRvIGFkZCBhIGxpdHRsZSBi
aXQgb2YgcmFuZG9tbmVzcyB0byB0aGUgbmV4dCBzb3VyY2UKKwkgKiBwb3J0IHRoYXQgd2lsbCBi
ZSBjaG9zZW4uIFdlIHVzZSBhIG1heCgpIHdpdGggYSByYW5kb20gaGVyZSBzbyB0aGF0CisJICog
b24gbG93IGNvbnRlbnRpb24gdGhlIHJhbmRvbW5lc3MgaXMgbWF4aW1hbCBhbmQgb24gaGlnaCBj
b250ZW50aW9uCisJICogaXQgbWF5IGJlIGluZXhpc3RlbnQuCiAJICovCi0JaWYgKCFpICYmICEo
cHJhbmRvbV91MzIoKSAlIDE2KSkKLQkJaSA9IDI7CisJaSA9IG1heF90KGludCwgaSwgKHByYW5k
b21fdTMyKCkgJiA3KSAqIDIpOwogCVdSSVRFX09OQ0UodGFibGVfcGVydHVyYltpbmRleF0sIFJF
QURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyBpICsgMik7CiAKIAkvKiBIZWFkIGxvY2sg
c3RpbGwgaGVsZCBhbmQgYmgncyBkaXNhYmxlZCAqLwoKRnJvbSA1YjUzNmRhMjFmYWExODBmY2Q4
YWU3Y2IyN2NhN2NiZGY4ODFiZjcyIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBXaWxs
eSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1heSAyMDIyIDEwOjQ2OjEyICswMjAw
ClN1YmplY3Q6IFsxMC8xMl0gdGNwOiBkeW5hbWljYWxseSBhbGxvY2F0ZSB0aGUgcGVydHVyYiB0
YWJsZSB1c2VkIGJ5IHNvdXJjZQogcG9ydHMKCmNvbW1pdCBlOTI2MTQ3NjE4NGJlMWFiZDQ4NmM5
NDM0MTY0YjJhY2JlMGVkNmMyIHVwc3RyZWFtLgoKV2UnbGwgbmVlZCB0byBmdXJ0aGVyIGluY3Jl
YXNlIHRoZSBzaXplIG9mIHRoaXMgdGFibGUgYW5kIGl0J3MgbGlrZWx5CnRoYXQgYXQgc29tZSBw
b2ludCBpdHMgc2l6ZSB3aWxsIG5vdCBiZSBzdWl0YWJsZSBhbnltb3JlIGZvciBhIHN0YXRpYwp0
YWJsZS4gTGV0J3MgYWxsb2NhdGUgaXQgb24gYm9vdCBmcm9tIGluZXRfaGFzaGluZm8yX2luaXQo
KSwgd2hpY2ggaXMKY2FsbGVkIGZyb20gdGNwX2luaXQoKS4KCkNjOiBNb3NoZSBLb2wgPG1vc2hl
LmtvbEBtYWlsLmh1amkuYWMuaWw+CkNjOiBZb3NzaSBHaWxhZCA8eW9zc2kuZ2lsYWRAbWFpbC5o
dWppLmFjLmlsPgpDYzogQW1pdCBLbGVpbiA8YWtzZWN1cml0eUBnbWFpbC5jb20+ClJldmlld2Vk
LWJ5OiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6IFdp
bGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpTaWduZWQtb2ZmLWJ5OiBKYWt1YiBLaWNpbnNraSA8a3Vi
YUBrZXJuZWwub3JnPgpbYndoOiBCYWNrcG9ydGVkIHRvIDQuOToKIC0gVGhlcmUgaXMgbm8gaW5l
dF9oYXNoaW5mbzJfaW5pdCgpLCBzbyBhbGxvY2F0ZSB0aGUgdGFibGUgaW4KICAgaW5ldF9oYXNo
aW5mb19pbml0KCkgd2hlbiBjYWxsZWQgYnkgVENQCiAtIEFkanVzdCBjb250ZXh0XQpTaWduZWQt
b2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9pcHY0
L2luZXRfaGFzaHRhYmxlcy5jIHwgMTUgKysrKysrKysrKysrKy0tCiAxIGZpbGUgY2hhbmdlZCwg
MTMgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9uZXQvaXB2NC9p
bmV0X2hhc2h0YWJsZXMuYyBiL25ldC9pcHY0L2luZXRfaGFzaHRhYmxlcy5jCmluZGV4IGZmODAx
ZDZlMzBmMi4uZjZhYTQ2ODAxYWIzIDEwMDY0NAotLS0gYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJs
ZXMuYworKysgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwpAQCAtNTQ2LDcgKzU0Niw4IEBA
IEVYUE9SVF9TWU1CT0xfR1BMKGluZXRfdW5oYXNoKTsKICAqIHByaXZhY3ksIHRoaXMgb25seSBj
b25zdW1lcyAxIEtCIG9mIGtlcm5lbCBtZW1vcnkuCiAgKi8KICNkZWZpbmUgSU5FVF9UQUJMRV9Q
RVJUVVJCX1NISUZUIDgKLXN0YXRpYyB1MzIgdGFibGVfcGVydHVyYlsxIDw8IElORVRfVEFCTEVf
UEVSVFVSQl9TSElGVF07CisjZGVmaW5lIElORVRfVEFCTEVfUEVSVFVSQl9TSVpFICgxIDw8IElO
RVRfVEFCTEVfUEVSVFVSQl9TSElGVCkKK3N0YXRpYyB1MzIgKnRhYmxlX3BlcnR1cmI7CiAKIGlu
dCBfX2luZXRfaGFzaF9jb25uZWN0KHN0cnVjdCBpbmV0X3RpbWV3YWl0X2RlYXRoX3JvdyAqZGVh
dGhfcm93LAogCQlzdHJ1Y3Qgc29jayAqc2ssIHU2NCBwb3J0X29mZnNldCwKQEAgLTU4Niw3ICs1
ODcsOCBAQCBpbnQgX19pbmV0X2hhc2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0
aF9yb3cgKmRlYXRoX3JvdywKIAlpZiAobGlrZWx5KHJlbWFpbmluZyA+IDEpKQogCQlyZW1haW5p
bmcgJj0gfjFVOwogCi0JbmV0X2dldF9yYW5kb21fb25jZSh0YWJsZV9wZXJ0dXJiLCBzaXplb2Yo
dGFibGVfcGVydHVyYikpOworCW5ldF9nZXRfcmFuZG9tX29uY2UodGFibGVfcGVydHVyYiwKKwkJ
CSAgICBJTkVUX1RBQkxFX1BFUlRVUkJfU0laRSAqIHNpemVvZigqdGFibGVfcGVydHVyYikpOwog
CWluZGV4ID0gaGFzaF8zMihwb3J0X29mZnNldCwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUKTsK
IAogCW9mZnNldCA9IFJFQURfT05DRSh0YWJsZV9wZXJ0dXJiW2luZGV4XSkgKyAocG9ydF9vZmZz
ZXQgPj4gMzIpOwpAQCAtNjkxLDYgKzY5MywxNSBAQCB2b2lkIGluZXRfaGFzaGluZm9faW5pdChz
dHJ1Y3QgaW5ldF9oYXNoaW5mbyAqaCkKIAkJSU5JVF9ITElTVF9OVUxMU19IRUFEKCZoLT5saXN0
ZW5pbmdfaGFzaFtpXS5udWxsc19oZWFkLAogCQkJCSAgICAgIGkgKyBMSVNURU5JTkdfTlVMTFNf
QkFTRSk7CiAJfQorCisJaWYgKGggIT0gJnRjcF9oYXNoaW5mbykKKwkJcmV0dXJuOworCisJLyog
dGhpcyBvbmUgaXMgdXNlZCBmb3Igc291cmNlIHBvcnRzIG9mIG91dGdvaW5nIGNvbm5lY3Rpb25z
ICovCisJdGFibGVfcGVydHVyYiA9IGttYWxsb2NfYXJyYXkoSU5FVF9UQUJMRV9QRVJUVVJCX1NJ
WkUsCisJCQkJICAgICAgc2l6ZW9mKCp0YWJsZV9wZXJ0dXJiKSwgR0ZQX0tFUk5FTCk7CisJaWYg
KCF0YWJsZV9wZXJ0dXJiKQorCQlwYW5pYygiVENQOiBmYWlsZWQgdG8gYWxsb2MgdGFibGVfcGVy
dHVyYiIpOwogfQogRVhQT1JUX1NZTUJPTF9HUEwoaW5ldF9oYXNoaW5mb19pbml0KTsKIAoKRnJv
bSAyZWNjYzM5NDc4YjU3NWQxNDliYzk2MWMwZDkyY2E4NTliNjIyOTc2IE1vbiBTZXAgMTcgMDA6
MDA6MDAgMjAwMQpGcm9tOiBXaWxseSBUYXJyZWF1IDx3QDF3dC5ldT4KRGF0ZTogTW9uLCAyIE1h
eSAyMDIyIDEwOjQ2OjEzICswMjAwClN1YmplY3Q6IFsxMS8xMl0gdGNwOiBpbmNyZWFzZSBzb3Vy
Y2UgcG9ydCBwZXJ0dXJiIHRhYmxlIHRvIDJeMTYKCmNvbW1pdCA0YzJjOGYwM2E1YWI3Y2IwNGVj
NjQ3MjRkN2QxNzZkMDBiY2M5MWU1IHVwc3RyZWFtLgoKTW9zaGUgS29sLCBBbWl0IEtsZWluLCBh
bmQgWW9zc2kgR2lsYWQgcmVwb3J0ZWQgYmVpbmcgYWJsZSB0byBhY2N1cmF0ZWx5CmlkZW50aWZ5
IGEgY2xpZW50IGJ5IGZvcmNpbmcgaXQgdG8gZW1pdCBvbmx5IDQwIHRpbWVzIG1vcmUgY29ubmVj
dGlvbnMKdGhhbiB0aGVyZSBhcmUgZW50cmllcyBpbiB0aGUgdGFibGVfcGVydHVyYltdIHRhYmxl
LiBUaGUgcHJldmlvdXMgdHdvCmltcHJvdmVtZW50cyBjb25zaXN0aW5nIGluIHJlc2FsdGluZyB0
aGUgc2VjcmV0IGV2ZXJ5IDEwcyBhbmQgYWRkaW5nCnJhbmRvbW5lc3MgdG8gZWFjaCBwb3J0IHNl
bGVjdGlvbiBvbmx5IHNsaWdodGx5IGltcHJvdmVkIHRoZSBzaXR1YXRpb24sCmFuZCB0aGUgY3Vy
cmVudCB2YWx1ZSBvZiAyXjggd2FzIHRvbyBzbWFsbCBhcyBpdCdzIG5vdCB2ZXJ5IGRpZmZpY3Vs
dAp0byBtYWtlIGEgY2xpZW50IGVtaXQgMTBrIGNvbm5lY3Rpb25zIGluIGxlc3MgdGhhbiAxMCBz
ZWNvbmRzLgoKVGh1cyB3ZSdyZSBpbmNyZWFzaW5nIHRoZSBwZXJ0dXJiIHRhYmxlIGZyb20gMl44
IHRvIDJeMTYgc28gdGhhdCB0aGUKc2FtZSBwcmVjaXNpb24gbm93IHJlcXVpcmVzIDIuNk0gY29u
bmVjdGlvbnMsIHdoaWNoIGlzIG1vcmUgZGlmZmljdWx0IGluCnRoaXMgdGltZSBmcmFtZSBhbmQg
aGFyZGVyIHRvIGhpZGUgYXMgYSBiYWNrZ3JvdW5kIGFjdGl2aXR5LiBUaGUgaW1wYWN0CmlzIHRo
YXQgdGhlIHRhYmxlIG5vdyB1c2VzIDI1NiBrQiBpbnN0ZWFkIG9mIDEga0IsIHdoaWNoIGNvdWxk
IG1vc3RseQphZmZlY3QgZGV2aWNlcyBtYWtpbmcgZnJlcXVlbnQgb3V0Z29pbmcgY29ubmVjdGlv
bnMuIEhvd2V2ZXIgc3VjaApjb21wb25lbnRzIHVzdWFsbHkgdGFyZ2V0IGEgc21hbGwgc2V0IG9m
IGRlc3RpbmF0aW9ucyAobG9hZCBiYWxhbmNlcnMsCmRhdGFiYXNlIGNsaWVudHMsIHBlcmYgYXNz
ZXNzbWVudCB0b29scyksIGFuZCBpbiBwcmFjdGljZSBvbmx5IGEgZmV3CmVudHJpZXMgd2lsbCBi
ZSB2aXNpdGVkLCBsaWtlIGJlZm9yZS4KCkEgbGl2ZSB0ZXN0IGF0IDEgbWlsbGlvbiBjb25uZWN0
aW9ucyBwZXIgc2Vjb25kIHNob3dlZCBubyBwZXJmb3JtYW5jZQpkaWZmZXJlbmNlIGZyb20gdGhl
IHByZXZpb3VzIHZhbHVlLgoKUmVwb3J0ZWQtYnk6IE1vc2hlIEtvbCA8bW9zaGUua29sQG1haWwu
aHVqaS5hYy5pbD4KUmVwb3J0ZWQtYnk6IFlvc3NpIEdpbGFkIDx5b3NzaS5naWxhZEBtYWlsLmh1
amkuYWMuaWw+ClJlcG9ydGVkLWJ5OiBBbWl0IEtsZWluIDxha3NlY3VyaXR5QGdtYWlsLmNvbT4K
UmV2aWV3ZWQtYnk6IEVyaWMgRHVtYXpldCA8ZWR1bWF6ZXRAZ29vZ2xlLmNvbT4KU2lnbmVkLW9m
Zi1ieTogV2lsbHkgVGFycmVhdSA8d0Axd3QuZXU+ClNpZ25lZC1vZmYtYnk6IEpha3ViIEtpY2lu
c2tpIDxrdWJhQGtlcm5lbC5vcmc+ClNpZ25lZC1vZmYtYnk6IEJlbiBIdXRjaGluZ3MgPGJlbkBk
ZWNhZGVudC5vcmcudWs+Ci0tLQogbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMgfCA5ICsrKysr
LS0tLQogMSBmaWxlIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygrKSwgNCBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYyBiL25ldC9pcHY0L2luZXRfaGFz
aHRhYmxlcy5jCmluZGV4IGY2YWE0NjgwMWFiMy4uMDFlMzk2ODA2OTYxIDEwMDY0NAotLS0gYS9u
ZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYworKysgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMu
YwpAQCAtNTQxLDExICs1NDEsMTIgQEAgRVhQT1JUX1NZTUJPTF9HUEwoaW5ldF91bmhhc2gpOwog
ICogTm90ZSB0aGF0IHdlIHVzZSAzMmJpdCBpbnRlZ2VycyAodnMgUkZDICdzaG9ydCBpbnRlZ2Vy
cycpCiAgKiBiZWNhdXNlIDJeMTYgaXMgbm90IGEgbXVsdGlwbGUgb2YgbnVtX2VwaGVtZXJhbCBh
bmQgdGhpcwogICogcHJvcGVydHkgbWlnaHQgYmUgdXNlZCBieSBjbGV2ZXIgYXR0YWNrZXIuCi0g
KiBSRkMgY2xhaW1zIHVzaW5nIFRBQkxFX0xFTkdUSD0xMCBidWNrZXRzIGdpdmVzIGFuIGltcHJv
dmVtZW50LAotICogd2UgdXNlIDI1NiBpbnN0ZWFkIHRvIHJlYWxseSBnaXZlIG1vcmUgaXNvbGF0
aW9uIGFuZAotICogcHJpdmFjeSwgdGhpcyBvbmx5IGNvbnN1bWVzIDEgS0Igb2Yga2VybmVsIG1l
bW9yeS4KKyAqIFJGQyBjbGFpbXMgdXNpbmcgVEFCTEVfTEVOR1RIPTEwIGJ1Y2tldHMgZ2l2ZXMg
YW4gaW1wcm92ZW1lbnQsIHRob3VnaAorICogYXR0YWNrcyB3ZXJlIHNpbmNlIGRlbW9uc3RyYXRl
ZCwgdGh1cyB3ZSB1c2UgNjU1MzYgaW5zdGVhZCB0byByZWFsbHkKKyAqIGdpdmUgbW9yZSBpc29s
YXRpb24gYW5kIHByaXZhY3ksIGF0IHRoZSBleHBlbnNlIG9mIDI1NmtCIG9mIGtlcm5lbAorICog
bWVtb3J5LgogICovCi0jZGVmaW5lIElORVRfVEFCTEVfUEVSVFVSQl9TSElGVCA4CisjZGVmaW5l
IElORVRfVEFCTEVfUEVSVFVSQl9TSElGVCAxNgogI2RlZmluZSBJTkVUX1RBQkxFX1BFUlRVUkJf
U0laRSAoMSA8PCBJTkVUX1RBQkxFX1BFUlRVUkJfU0hJRlQpCiBzdGF0aWMgdTMyICp0YWJsZV9w
ZXJ0dXJiOwogCgpGcm9tIDc0MjZjYmRhZjdlMWM1Yzg5MzhlNTI1YTM3ZDMyM2EwYjFhNzBjNzUg
TW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCkZyb206IFdpbGx5IFRhcnJlYXUgPHdAMXd0LmV1PgpE
YXRlOiBNb24sIDIgTWF5IDIwMjIgMTA6NDY6MTQgKzAyMDAKU3ViamVjdDogWzEyLzEyXSB0Y3A6
IGRyb3AgdGhlIGhhc2hfMzIoKSBwYXJ0IGZyb20gdGhlIGluZGV4IGNhbGN1bGF0aW9uCgpjb21t
aXQgZTgxNjEzNDVkZGJiNjZlNDQ5YWJkZTEwZDJmZGNlOTNmODY3ZWJhOSB1cHN0cmVhbS4KCklu
IGNvbW1pdCAxOTBjYzgyNDg5ZjQgKCJ0Y3A6IGNoYW5nZSBzb3VyY2UgcG9ydCByYW5kb21pemFy
aW9uIGF0CmNvbm5lY3QoKSB0aW1lIiksIHRoZSB0YWJsZV9wZXJ0dXJiW10gYXJyYXkgd2FzIGlu
dHJvZHVjZWQgYW5kIGFuCmluZGV4IHdhcyB0YWtlbiBmcm9tIHRoZSBwb3J0X29mZnNldCB2aWEg
aGFzaF8zMigpLiBCdXQgaXQgdHVybnMKb3V0IHRoYXQgaGFzaF8zMigpIHBlcmZvcm1zIGEgbXVs
dGlwbGljYXRpb24gd2hpbGUgdGhlIGlucHV0IGhlcmUKY29tZXMgZnJvbSB0aGUgb3V0cHV0IG9m
IFNpcEhhc2ggaW4gc2VjdXJlX3NlcSwgdGhhdCBpcyB3ZWxsCmRpc3RyaWJ1dGVkIGVub3VnaCB0
byBhdm9pZCB0aGUgbmVlZCBmb3IgeWV0IGFub3RoZXIgaGFzaC4KClN1Z2dlc3RlZC1ieTogQW1p
dCBLbGVpbiA8YWtzZWN1cml0eUBnbWFpbC5jb20+ClJldmlld2VkLWJ5OiBFcmljIER1bWF6ZXQg
PGVkdW1hemV0QGdvb2dsZS5jb20+ClNpZ25lZC1vZmYtYnk6IFdpbGx5IFRhcnJlYXUgPHdAMXd0
LmV1PgpTaWduZWQtb2ZmLWJ5OiBKYWt1YiBLaWNpbnNraSA8a3ViYUBrZXJuZWwub3JnPgpTaWdu
ZWQtb2ZmLWJ5OiBCZW4gSHV0Y2hpbmdzIDxiZW5AZGVjYWRlbnQub3JnLnVrPgotLS0KIG5ldC9p
cHY0L2luZXRfaGFzaHRhYmxlcy5jIHwgMiArLQogMSBmaWxlIGNoYW5nZWQsIDEgaW5zZXJ0aW9u
KCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVz
LmMgYi9uZXQvaXB2NC9pbmV0X2hhc2h0YWJsZXMuYwppbmRleCAwMWUzOTY4MDY5NjEuLmRiNDdl
MWM0MDdkOSAxMDA2NDQKLS0tIGEvbmV0L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKKysrIGIvbmV0
L2lwdjQvaW5ldF9oYXNodGFibGVzLmMKQEAgLTU5MCw3ICs1OTAsNyBAQCBpbnQgX19pbmV0X2hh
c2hfY29ubmVjdChzdHJ1Y3QgaW5ldF90aW1ld2FpdF9kZWF0aF9yb3cgKmRlYXRoX3JvdywKIAog
CW5ldF9nZXRfcmFuZG9tX29uY2UodGFibGVfcGVydHVyYiwKIAkJCSAgICBJTkVUX1RBQkxFX1BF
UlRVUkJfU0laRSAqIHNpemVvZigqdGFibGVfcGVydHVyYikpOwotCWluZGV4ID0gaGFzaF8zMihw
b3J0X29mZnNldCwgSU5FVF9UQUJMRV9QRVJUVVJCX1NISUZUKTsKKwlpbmRleCA9IHBvcnRfb2Zm
c2V0ICYgKElORVRfVEFCTEVfUEVSVFVSQl9TSVpFIC0gMSk7CiAKIAlvZmZzZXQgPSBSRUFEX09O
Q0UodGFibGVfcGVydHVyYltpbmRleF0pICsgKHBvcnRfb2Zmc2V0ID4+IDMyKTsKIAlvZmZzZXQg
JT0gcmVtYWluaW5nOwo=


--=-JR0iJUrFyN8CmOHUlMR4--

--=-EINW1hhD4FSjCsNuDwjW
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----

iQIzBAABCgAdFiEErCspvTSmr92z9o8157/I7JWGEQkFAmKyRrIACgkQ57/I7JWG
EQl/og//dI0vsei4evp4JuAOEGjz9iunAfHOWp/Sd0iNBiBReo7XNOpn7vxDESgM
KMmcIy5X3nP12M49ECiGbAR5bIEnbAx8tkXP5R2uqxnH7iGHcA4ttqIrIGJAQs0p
sN64WVEWG9566F5fd5zYyNPgqwVGas9qfNUonzmCt5eNycY2pYqBhRLVX9tV/U3n
R/wMZhXQAzHdVf+piKn81F/a5YncX84N1AoPskUFXXZWsIzGclBB9GY3w8h1u0IY
dAdGMBikZmooNjIWopJA2WNXjKKNHKkaHqKoPvGnH0EjwnxoearbqPmOd7lTXmWw
yWU5yAlXzd4uo5wajjwFSOqs9vZZx2Nwwh96ZPqmvIOpCu1+v+tLPwAwzSWdul1J
el2DPSbCJkWMAGFwZcWc92aVtlU7e6JoY24EiV+Ez20vWd9Nb4lUaSzc2p+HDyyk
sdyI3e83SsRjsCSN73lbonQvkvH4ABaeWmvAxgnNFpGXhGwZC4nmQoJXMotFR5y6
jB0Keu5A8D8Y1yn3IcJIhftn8wnOTt+c3bb3/+aY4EPDPKRa5iiQz8e1TtyVRzMz
V/A3vPZgXCERVa3QVCskOzy7fdOzePVM5WWdEWAhNHyXjDw6h2Qzqp6av8C4b96I
W5T+fs3nBQg2xetJHuNW5KxO33djT4qIR2ymG7NahTfTEIVXoGc=
=xGv0
-----END PGP SIGNATURE-----

--=-EINW1hhD4FSjCsNuDwjW--
